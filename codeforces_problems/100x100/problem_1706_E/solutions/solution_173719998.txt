{
    "id": 173719998,
    "contestId": 1706,
    "creationTimeSeconds": 1664290477,
    "relativeTimeSeconds": 7177,
    "problem": {
        "contestId": 1706,
        "index": "E",
        "name": "Qpwoeirut and Vertices",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "divide and conquer",
            "dsu",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "Z0136"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1664283300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 9625600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nusing ll=long long;\r\nconst int N=1e5+10;\r\nvoid sync()\r\n{\r\n\tcin.tie(0)->sync_with_stdio(false);\r\n\tcin.exceptions(cin.failbit);\r\n}\r\nint T,Q;\r\nint n,f[N][22],m,fa[N];\r\nint find(int x)\r\n{return x==fa[x]?x:fa[x]=find(fa[x]);}\r\nint Log2[N];\r\nvoid getLog()\r\n{for(int i=2;i<N;i++)Log2[i]=Log2[i>>1]+1;}\r\nvoid rmq()\r\n{\r\n    for(int i=1;i<=Log2[n];i++)\r\n    for(int j=1;j+(1<<i)-1<=n;j++)\r\n    f[j][i]=max(f[j][i-1],f[j+(1<<i-1)][i-1]);\r\n}\r\nint query(int l,int r)\r\n{\r\n    if(l>r)return 0;\r\n    int k=Log2[r-l+1];\r\n    return max(f[l][k],f[r-(1<<k)+1][k]);\r\n}\r\nint main()\r\n{\r\n\tsync();\r\n    getLog();\r\n\tcin>>T;\r\n\twhile(T--)\r\n\t{\r\n\t\tcin>>n>>m>>Q;\r\n        for(int i=1;i<=n;i++)fa[i]=i;\r\n\t\tfor(int i=1,l,r;i<=m;i++)\r\n        {\r\n            cin>>l>>r;\r\n            if(l>r)swap(l,r);\r\n            int fl=find(l),fr=find(r);\r\n            if(fl^fr)\r\n            {\r\n                fa[fr]=fl;\r\n                if(fl==find(r-1))f[r][0]=i;\r\n            }\r\n        }\r\n        rmq();\r\n        while(Q--)\r\n        {\r\n            int l,r;cin>>l>>r;\r\n            cout<<query(l+1,r)<<\" \";\r\n        }cout<<'\\n';\r\n\t}\r\n}"
}