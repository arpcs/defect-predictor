{
    "id": 173037762,
    "contestId": 1706,
    "creationTimeSeconds": 1663838051,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "E",
        "name": "Qpwoeirut and Vertices",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "divide and conquer",
            "dsu",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "Celtic"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 514,
    "memoryConsumedBytes": 117964800,
    "source": "#include<bits/stdc++.h> \r\n#define N 301001\r\n#define MAX 2001\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef double db;\r\nconst ll inf=1e18,mod=998244353,inv3=(mod+1)/3;\r\ninline void read(ll &ret)\r\n{\r\n\tret=0;char c=getchar();bool pd=false;\r\n\twhile(!isdigit(c)){pd|=c=='-';c=getchar();}\r\n\twhile(isdigit(c)){ret=(ret<<1)+(ret<<3)+(c&15);c=getchar();}\r\n\tret=pd?-ret:ret;\r\n\treturn;\r\n}\r\nll n,m,q,f[N],fa[N],tot,fat[N][21],dep[N];\r\nvector<ll>v[N];\r\ninline ll find(ll deep)\r\n{\r\n\treturn fa[deep]==deep?deep:fa[deep]=find(fa[deep]);\r\n}\r\ninline void dfs(ll ver,ll fa)\r\n{\r\n\tdep[ver]=dep[fa]+1;\r\n\tfor(int i=1;i<=20;i++)\r\n\t\tfat[ver][i]=fat[fat[ver][i-1]][i-1];\r\n\tfor(int i=0;i<v[ver].size();i++)\r\n\t{\r\n\t\tll to=v[ver][i];\r\n\t\tdfs(to,ver);\r\n\t}\r\n\treturn;\r\n}\r\ninline ll lca(ll p,ll q)\r\n{\r\n\tif(dep[p]<dep[q])\r\n\t\tswap(p,q);\r\n\tll d=dep[p]-dep[q];\r\n\tfor(int i=0;i<=20;i++)\r\n\t\tif((1<<i)&d)\r\n\t\t\tp=fat[p][i];\r\n\tif(p==q)\r\n\t\treturn p;\r\n\tfor(int i=20;i+1;i--)\r\n\t\tif(fat[p][i]!=fat[q][i])\r\n\t\t{\r\n\t\t\tp=fat[p][i];\r\n\t\t\tq=fat[q][i];\r\n\t\t}\r\n\treturn fat[p][0];\r\n}\r\nll rmq[N][21];\r\ninline ll query(ll l,ll r)\r\n{\r\n\tll k=__lg(r-l+1);\r\n\treturn max(rmq[l][k],rmq[r-(1<<k)+1][k]);\r\n}\r\nsigned main()\r\n{\r\n\tll t;\r\n\tread(t);\r\n\twhile(t--)\r\n\t{\r\n\t\tread(n);\r\n\t\tread(m);\r\n\t\tread(q);\r\n\t\tfor(int i=1;i<=n+m;i++)\r\n\t\t\tfa[i]=i,f[i]=0;\r\n\t\tll tot=0;\r\n\t\tfor(int i=1;i<=m;i++)\r\n\t\t{\r\n\t\t\tll x,y;\r\n\t\t\tread(x);\r\n\t\t\tread(y);\r\n\t\t\tll r1=find(x),r2=find(y);\r\n\t\t\tif(r1!=r2)\r\n\t\t\t{\r\n\t\t\t\tfa[r1]=fa[r2]=i+n;\r\n\t\t\t\tfat[r1][0]=fat[r2][0]=i+n;\r\n\t\t\t\ttot=i+n;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i=1;i<=n+m;i++)\r\n\t\t\tv[i].clear();\r\n\t\tfor(int i=1;i<=n+m;i++)\r\n\t\t{\r\n\t\t\tif(fat[i][0])\r\n\t\t\t\tv[fat[i][0]].push_back(i);\r\n\t\t}\r\n\t\tdfs(tot,0);\r\n\t\tfor(int i=1;i<n;i++)\r\n\t\t\tf[i]=lca(i,i+1)-n,rmq[i][0]=f[i];\r\n\t\tfor(int j=1;j<=20;j++)\r\n\t\t\tfor(int i=1;i+(1<<j)-1<n;i++)\r\n\t\t\t\trmq[i][j]=max(rmq[i][j-1],rmq[i+(1<<j-1)][j-1]);\r\n\t\tfor(int i=1;i<=q;i++)\r\n\t\t{\r\n\t\t\tll l,r;\r\n\t\t\tread(l);\r\n\t\t\tread(r);\r\n\t\t\tif(l==r)\r\n\t\t\t\tputs(\"0\");\r\n\t\t\telse\r\n\t\t\t\tprintf(\"%lld\\n\",query(l,r-1));\r\n\t\t}\r\n\t}\r\n\t\r\n\texit(0);\r\n}"
}