{
    "id": 226249826,
    "contestId": 1706,
    "creationTimeSeconds": 1696228026,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "E",
        "name": "Qpwoeirut and Vertices",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "divide and conquer",
            "dsu",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "hewenxuan2008"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 58880000,
    "source": "#include<algorithm>\r\n#include<iostream>\r\n#include<string.h>\r\n#include<cstdlib>\r\n#include<cstring>\r\n#include<iomanip>\r\n#include<cstdio>\r\n#include<math.h>\r\n#include<string>\r\n#include<ctime>\r\n#include<queue>\r\n#include<map>\r\nusing namespace std;\r\nconst int N=2e5+10;\r\nconst int M=1e3+10;\r\nconst int MOD=9999991;\r\nconst int INF=0x3f3f3f3f;\r\nint n,q,m=0,a[N],T,maxx=0,cnt=0;\r\nint head[N],to[N],ne[N],w[N],id=1;\r\nint siz[N],maxp[N],rt,dis[N];\r\nint p[N],top;\r\nint pre[N],l,r,num[N];\r\nint fa[N],tree_st[N][30],dep[N];\r\nint st[N][30];\r\nint dx[]={-2,-2,-1,-1,1,1,2,2};\r\nint dy[]={-1,1,-2,2,-2,2,-1,1};\r\nbool b[N],vis[N];\r\nvoid add(int x,int y,int z=1){\r\n\tto[++id]=y,w[id]=z,ne[id]=head[x],head[x]=id;\r\n}\r\nint fin(int x){\r\n\tif(fa[x]==x)return x;\r\n\tfa[x]=fin(fa[x]);\r\n\treturn fa[x];\r\n}\r\nvoid build_tree(int x,int f){\r\n\ttree_st[x][0]=f;\r\n\tdep[x]=dep[f]+1;\r\n\tfor(int i=1;i<=22;i++){\r\n\t\ttree_st[x][i]=tree_st[tree_st[x][i-1]][i-1];\r\n\t}\r\n\tfor(int i=head[x];i;i=ne[i]){\r\n\t\tint y=to[i];\r\n\t\tif(y==f)continue;\r\n\t\tbuild_tree(y,x);\r\n\t}\r\n}\r\nint lca(int x,int y){\r\n\tif(x==y)return x;\r\n\tif(dep[y]>dep[x])swap(x,y);\r\n\tfor(int i=22;i>=0;i--){\r\n\t\tif(dep[tree_st[x][i]]>=dep[y])x=tree_st[x][i];\r\n\t}\r\n\tfor(int i=22;i>=0;i--){\r\n\t\tif(tree_st[x][i]!=tree_st[y][i])x=tree_st[x][i],y=tree_st[y][i];\r\n\t}\r\n\treturn tree_st[x][0];\r\n}\r\nvoid build(){\r\n\t//cout<<\"DD\";\r\n\tfor(int i=1;i<n;i++){\r\n\t\tst[i][1]=a[lca(i,i+1)];\r\n\t\t//cout<<st[i][1]<<\" \";\r\n\t}\r\n\t//cout<<\"EE\";\r\n\t//cout<<\"AA\";\r\n\tfor(int l=2;l<=22;l++){\r\n\t\tint lenn=(1<<l);\r\n\t\tfor(int i=1;i+lenn-1<=n;i++){\r\n\t\t\t//cout<<\"CC\";\r\n\t\t\tst[i][l]=max(st[i][l-1],st[i+lenn/2][l-1]);\r\n\t\t\t//cout<<st[i][l]<<\" \";\r\n\t\t}\r\n\t\t//cout<<\"\\n\";\r\n\t}\r\n\t//cout<<\"BB\";\r\n}\r\nint cal(int l,int r){\r\n\tint len=r-l+1;\r\n\tint lg=log2(len);\r\n\treturn max(st[l][lg],st[r+1-(1<<lg)][lg]);\r\n}\r\nvoid initt(){\r\n\tcnt=n;\r\n\tid=1;\r\n\tfor(int i=1;i<N;i++){\r\n\t\tfa[i]=i;\r\n\t}\r\n\tmemset(head,0,sizeof head);\r\n\t//memset(fa,0,sizeof fa);\r\n\tmemset(a,0,sizeof a);\r\n}\r\nint main(){\r\n\t\r\n\tcin>>T;\r\n\twhile(T--){\r\n\t\tcin>>n>>m>>q;\r\n\t\tinitt();\r\n\t\tfor(int x,y,i=1;i<=m;i++){\r\n\t\t\tcin>>x>>y;\r\n\t\t\t//cout<<\"AA\"<<fin(x)<<\" \"<<fin(y)<<\"\\n\";\r\n\t\t\tint xx=fin(x),yy=fin(y);\r\n\t\t\t//cout<<\"BB\";\r\n\t\t\tif(xx==yy)continue;\r\n\t\t\t//f[xx]=yy\r\n\t\t\tcnt++;\r\n\t\t\tadd(xx,cnt);\r\n\t\t\tadd(yy,cnt);\r\n\t\t\tadd(cnt,xx);\r\n\t\t\tadd(cnt,yy);\r\n\t\t\t//cout<<\"CC\";\r\n\t\t\ta[cnt]=i;\r\n\t\t\tfa[xx]=cnt;\r\n\t\t\tfa[yy]=cnt;\r\n\t\t}\r\n\t\t//cout<<\"AA\";\r\n\t\t//\r\n\t\t//\r\n\t\t\r\n\t\tbuild_tree(cnt,0);\r\n\t\t\r\n\t\t/*for(int i=1;i<=n;i++){\r\n\t\t\tfor(int j=1;j<=n;j++){\r\n\t\t\t\tcout<<\"lca(\"<<i<<\",\"<<j<<\")=\"<<lca(i,j)<<\"\\n\";\r\n\t\t\t}\r\n\t\t}*/\r\n\t\t//cout<<\"BB\";\r\n\t\tbuild();\r\n\t\t//cout<<\"CC\";\r\n\t\twhile(q--){\r\n\t\t\tint l,r;\r\n\t\t\tcin>>l>>r;\r\n\t\t\tcout<<cal(l,r)<<\" \";\r\n\t\t}\r\n\t\tcout<<\"\\n\"; \r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n/*\r\ncf1706e\r\ncf1416d \r\n4768 */\r\n"
}