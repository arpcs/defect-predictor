{
    "id": 185150825,
    "contestId": 1706,
    "creationTimeSeconds": 1671002821,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "E",
        "name": "Qpwoeirut and Vertices",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "divide and conquer",
            "dsu",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "Representative"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\ninline int read(){\r\n\tint x=0,f=1;\r\n\tchar c=getchar();\r\n\twhile(c<'0'||c>'9'){\r\n\t\tif(c=='-')f=-1;\r\n\t\tc=getchar();\r\n\t}\r\n\twhile(c<='9'&&c>='0'){\r\n\t\tx=(x<<1)+(x<<3)+(c^48);\r\n\t\tc=getchar();\r\n\t}\r\n\treturn x*f;\r\n}\r\n\r\nvoid print(int x){\r\n\tif(x<0)putchar('-'),x=-x;\r\n\tif(x>9)print(x/10);\r\n\tputchar(x%10^48);\r\n}\r\n\r\nconst int N=1e5+5,M=2e5+5;\r\nint n,m,q,head[N],cnt,f[N],lg[N];\r\nstruct node{\r\n\tint next,to,w;\r\n}e[N<<1];\r\n\r\nvoid add(int from,int to,int w){\r\n\te[++cnt]=(node){head[from],to,w};\r\n\thead[from]=cnt;\r\n}\r\n\r\nint find(int x){\r\n\tif(x==f[x])return x;\r\n\treturn f[x]=find(f[x]);\r\n}\r\n\r\nint maxn[N][22],fa[N][22],dep[N];\r\n\r\nvoid dfs(int x,int fath,int w){\r\n\tfa[x][0]=fath;\r\n\tdep[x]=dep[fath]+1;\r\n\tmaxn[x][0]=w;\r\n\tfor(int i=1;i<=lg[dep[x]];++i)fa[x][i]=fa[fa[x][i-1]][i-1];\r\n\tfor(int i=1;i<=lg[dep[x]];++i)maxn[x][i]=max(maxn[x][i-1],maxn[fa[x][i-1]][i-1]);\r\n\tfor(int i=head[x];i;i=e[i].next){\r\n\t\tint y=e[i].to;\r\n\t\tif(y!=fath)dfs(y,x,e[i].w);\r\n\t}\r\n}\r\n\r\nint calc(int x,int y){\r\n\tint ans=0;\r\n\tif(dep[x]<dep[y])swap(x,y);\r\n\twhile(dep[x]>dep[y]){\r\n\t\tans=max(ans,maxn[x][lg[dep[x]-dep[y]]]);\r\n\t\tx=fa[x][lg[dep[x]-dep[y;\r\n\t}\r\n\tif(x==y)return ans;\r\n\tfor(int i=lg[dep[x]];i>=0;--i){\r\n\t\tif(fa[x][i]!=fa[y][i]){\r\n\t\t\tans=max(ans,max(maxn[x][i],maxn[y][i]));\r\n\t\t\tx=fa[x][i],y=fa[y][i];\r\n\t\t}\r\n\t}\r\n\tans=max(ans,max(maxn[x][0],maxn[y][0]));\r\n\treturn ans;\r\n}\r\n\r\nint Max[N][22];\r\n\r\nvoid init(){\r\n\tfor(int i=1;i<=n-1;++i)Max[i][0]=calc(i,i+1);\r\n\tfor(int j=1;j<=lg[n];++j){\r\n\t\tfor(int i=1;i+(1<<j)-1<=n;++i){\r\n\t\t\tMax[i][j]=max(Max[i][j-1],Max[i+(1<<(j-1))][j-1]);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nint qry(int l,int r){\r\n\tif(l>r)return 0;\r\n\tint tmp=lg[r-l+1];\r\n\treturn max(Max[l][tmp],Max[r-(1<<tmp)+1][tmp]);\r\n}\r\n\r\nvoid solve(){\r\n\tn=read(),m=read(),q=read();\r\n\tfor(int i=1;i<=n;++i)f[i]=i;\r\n\tfor(int i=1;i<=m;++i){\r\n\t\tint u=read(),v=read();\r\n\t\tint fu=find(u),fv=find(v);\r\n\t\tif(fu!=fv)add(u,v,i),add(v,u,i),f[fu]=fv;\t\r\n\t}\r\n\tdfs(1,0,0);\r\n\tinit();\r\n\twhile(q--){\r\n\t\tint u=read(),v=read();\r\n\t\tprint(qry(u,v-1)),putchar(' ');\r\n\t}puts(\"\");\r\n}\r\n\r\nvoid clear(){\r\n\tcnt=0;\r\n\tmemset(head,0,sizeof(head));\r\n}\r\n\r\nint main(){\r\n\tlg[0]=dep[0]=-1;\r\n\tfor(int i=1;i<=1e5;++i)lg[i]=lg[i>>1]+1;\r\n\tint tt=read();\r\n\twhile(tt--)solve(),clear();\r\n\treturn 0;\r\n}"
}