{
    "id": 233597872,
    "contestId": 1706,
    "creationTimeSeconds": 1700499330,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "E",
        "name": "Qpwoeirut and Vertices",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "divide and conquer",
            "dsu",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "edogawa_something"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 639,
    "memoryConsumedBytes": 39731200,
    "source": "#include<bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef vector<ll> vii;\r\ntypedef pair<ll,ll> pii;\r\ntypedef tree<ll,null_type,less<ll>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;\r\n#define F first \r\n#define S second \r\n#define pb push_back\r\n#define eb emplace_back\r\n#define all(v) v.begin(),v.end()\r\n#define pow poww\r\nconst ll M=200001;\r\nconst ll mod=998244353;\r\nconst ll inf=2e18;\r\nconst int block=333;\r\nll pow(ll x,ll y){\r\n  ll res=1;\r\n  while(y>0){\r\n    if((y&1))\r\n    res*=x,res%=mod;\r\n    x*=x,x%=mod;\r\n    y=(y>>1);\r\n  }\r\n  return res;\r\n}\r\nll n,m,q,x[M],y[M];\r\nll sz=1;\r\nstruct seg{\r\n  vii a;\r\n  void init(ll x){\r\n    sz=1;\r\n    while(sz<x)\r\n    sz=(sz<<1);\r\n    a.clear();\r\n    a.resize((sz<<1));\r\n  }\r\n  void update(ll i,ll v,ll x=0,ll lx=0,ll rx=sz){\r\n    if(rx-lx==1){\r\n      a[x]=v;\r\n      return;\r\n    }\r\n    ll mid=((lx+rx)>>1);\r\n    if(i<mid)\r\n    update(i,v,x*2+1,lx,mid);\r\n    else\r\n    update(i,v,x*2+2,mid,rx);\r\n    a[x]=max(a[x*2+1],a[x*2+2]);\r\n  }\r\n  ll query(ll l,ll r,ll x=0,ll lx=0,ll rx=sz){\r\n    if(lx>=l&&rx<=r)\r\n    return a[x];\r\n    if(lx>=r||rx<=l)\r\n    return 0;\r\n    ll mid=((lx+rx)>>1);\r\n    return max(query(l,r,x*2+1,lx,mid),query(l,r,x*2+2,mid,rx));\r\n  } \r\n}ss;\r\nstruct dsu{\r\n  set<ll>s[M];\r\n  ll pa[M];\r\n  void init(ll x){\r\n    for(int i=1;i<=x;i++){\r\n      s[i].clear(),s[i].insert(i);\r\n      pa[i]=i;\r\n    }\r\n  }\r\n  ll get(ll x){\r\n    if(pa[x]==x)\r\n    return x;\r\n    return pa[x]=get(pa[x]);\r\n  }\r\n  void unite(ll x,ll y,ll i){\r\n    ll a=get(x),b=get(y);\r\n    if(a==b)\r\n    return;\r\n    if(s[a].size()<s[b].size())\r\n    swap(a,b);\r\n    pa[b]=a;\r\n    for(auto it:s[b]){\r\n      if(s[a].find(it+1)!=s[a].end())\r\n      ss.update(it,i);\r\n      if(s[a].find(it-1)!=s[a].end())\r\n      ss.update(it-1,i);\r\n    }\r\n    for(auto it:s[b])\r\n    s[a].insert(it);\r\n  }\r\n}d;\r\nint main(){\r\n  ios_base::sync_with_stdio(0),cin.tie(0);\r\n  ll TC=1;\r\n  cin>>TC;\r\n  while(TC--){\r\n    cin>>n>>m>>q;\r\n    for(int i=1;i<=m;i++){\r\n      cin>>x[i]>>y[i];\r\n    }\r\n    d.init(n),ss.init(n);\r\n    for(int i=1;i<=m;i++){\r\n      d.unite(x[i],y[i],i);\r\n    }\r\n    while(q--){\r\n      ll l,r;\r\n      cin>>l>>r;\r\n      if(l==r)\r\n      cout<<0<<' ';\r\n      else\r\n      cout<<ss.query(l,r)<<' ';\r\n    }\r\n    cout<<'\\n';\r\n  }\r\n  return 0;\r\n}\r\n/*\r\n\r\n1\r\n2 1 2\r\n1 2\r\n1 1 \r\n1 2\r\n*/"
}