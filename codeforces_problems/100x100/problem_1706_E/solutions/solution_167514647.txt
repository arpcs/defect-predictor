{
    "id": 167514647,
    "contestId": 1706,
    "creationTimeSeconds": 1659962515,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "E",
        "name": "Qpwoeirut and Vertices",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "divide and conquer",
            "dsu",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "Saacoota"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 8806400,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nint par[100010] , val[100010] , ma[100010][20];\r\n\r\nint fin(int u) {\r\n    if (par[u] < 0) return u;\r\n    return fin(par[u]);\r\n}\r\n\r\nvoid join(int u,int v,int w) {\r\n    u = fin(u);\r\n    v = fin(v);\r\n    if (u == v) return;\r\n    if (par[u] > par[v]) swap(u , v);\r\n    par[u] += par[v];\r\n    val[v] = w;\r\n    par[v] = u;\r\n    return;\r\n}\r\n\r\nint get(int u,int v) {\r\n    int res = 0;\r\n    while (u != v) {\r\n        if (val[u] < val[v]) {\r\n            res = val[u];\r\n            u = par[u];\r\n        } else {\r\n            res = val[v];\r\n            v = par[v];\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nint dwl(int l,int r) {\r\n    if (l > r) return 0;\r\n    int k = __lg(r - l + 1);\r\n    return max(ma[l][k] , ma[r - (1 << k) + 1][k]);\r\n}\r\n\r\nint main() {\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int t;\r\n    cin >> t;\r\n    while (t--) {\r\n        int n , m , q;\r\n        cin >> n >> m >> q;\r\n        for (int i = 1 ; i <= n ; ++i) {\r\n            par[i] = -1;\r\n            val[i] = 1e9;\r\n        }\r\n        for (int i = 1 ; i <= m ; ++i) {\r\n            int u , v;\r\n            cin >> u >> v;\r\n            join(u , v , i);\r\n        }\r\n        for (int i = 1 ; i < n ; ++i)\r\n        ma[i][0] = get(i , i + 1);\r\n        int k = __lg(n - 1);\r\n        for (int j = 1 ; j <= k ; ++j)\r\n        for (int i = 1 ; i + (1 << j) - 1 < n ; ++i)\r\n        ma[i][j] = max(ma[i][j - 1], ma[i + (1 << (j - 1))][j - 1]);\r\n        while (q--) {\r\n            int l , r;\r\n            cin >> l >> r;\r\n            cout << dwl(l , r - 1) << ' ';\r\n        }\r\n        cout << '\\n';\r\n        for (int i = 1 ; i <= n ; ++i) {\r\n            par[i] = val[i] = 0;\r\n            for (int j = 0 ; j <= k ; ++j) ma[i][j] = 0;\r\n        }\r\n    }\r\n}\r\n"
}