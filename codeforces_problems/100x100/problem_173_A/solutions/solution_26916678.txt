{
    "id": 26916678,
    "contestId": 173,
    "creationTimeSeconds": 1494136438,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 173,
        "index": "A",
        "name": "Rock-Paper-Scissors",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1300,
        "tags": [
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 173,
        "members": [
            {
                "handle": "somebody_else"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1333724400
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "#include <assert.h>\r\n#include <ctype.h>\r\n#include <errno.h>\r\n#include <float.h>\r\n#include <fstream>\r\n#include <iomanip>\r\n#include <iostream>\r\n#include <limits>\r\n#include <locale>\r\n#include <math.h>\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n#include <time.h>\r\n#include <wchar.h>\r\n#include <wctype.h>\r\n#include <algorithm>\r\n#include <bitset>\r\n#include <cctype>\r\n#include <cerrno>\r\n#include <clocale>\r\n#include <cmath>\r\n#include <complex>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <ctime>\r\n#include <deque>\r\n#include <exception>\r\n#include <fstream>\r\n#include <functional>\r\n#include <limits>\r\n#include <map>\r\n#include <iomanip>\r\n#include <ios>\r\n#include <iosfwd>\r\n#include <istream>\r\n#include <ostream>\r\n#include <queue>\r\n#include <set>\r\n#include <sstream>\r\n#include <stack>\r\n#include <stdexcept>\r\n#include <streambuf>\r\n#include <string>\r\n#include <utility>\r\n#include <vector>\r\n#include <cwchar>\r\n#include <cwctype>\r\n#include <complex.h>\r\n#include <fenv.h>\r\n#include <inttypes.h>\r\n#include <stdbool.h>\r\n#include <stdint.h>\r\n#include <tgmath.h>\r\n#include <conio.h>\r\n#include <numeric>\r\n#include <list>\r\n#include <windows.h>\r\nusing namespace std;\r\n\r\nstring n,p;\r\nint rounds,r,t,N,P,k1,k2;\r\n\r\ninline int gcd(int x,int y)\r\n{\r\n\tif(y==0) return x;\r\n\treturn gcd(y,x%y);\r\n}\r\n\r\nint main()\r\n{\r\n\tcin>>rounds>>n>>p;\r\n\t\r\n\tif(n.size()==1&&p.size()==1)\r\n\t{\r\n\t\tif(n[0]==p[0]) cout<<0<<' '<<0;\r\n\t\telse if(n[0]=='R'&&p[0]=='P') cout<<rounds<<' '<<0;\r\n\t\telse if(p[0]=='R'&&n[0]=='P') cout<<0<<' '<<rounds;\r\n\t\telse if(n[0]=='R'&&p[0]=='S') cout<<0<<' '<<rounds;\r\n\t\telse if(p[0]=='R'&&n[0]=='S') cout<<rounds<<' '<<0;\r\n\t\telse if(n[0]=='P'&&p[0]=='S') cout<<rounds<<' '<<0;\r\n\t\telse if(p[0]=='P'&&n[0]=='S') cout<<0<<' '<<rounds;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tr=rounds;\r\n\t\trounds=n.size()/gcd(n.size(),p.size())*p.size();\r\n\t\tif(r<rounds||gcd(r,rounds)==1) rounds=r;\r\n\t\tt=rounds;\r\n\t\t\r\n\t\twhile(rounds--)\r\n\t\t{\r\n\t\t\tif(n[k1]==p[k2]) k1=(k1+1)%n.size(),k2=(k2+1)%p.size();\r\n\t\t\telse if(n[k1]=='R'&&p[k2]=='P') N++,k1=(k1+1)%n.size(),k2=(k2+1)%p.size();\r\n\t\t\telse if(p[k2]=='R'&&n[k1]=='P') P++,k1=(k1+1)%n.size(),k2=(k2+1)%p.size();\r\n\t\t\telse if(n[k1]=='R'&&p[k2]=='S') P++,k1=(k1+1)%n.size(),k2=(k2+1)%p.size();\r\n\t\t\telse if(p[k2]=='R'&&n[k1]=='S') N++,k1=(k1+1)%n.size(),k2=(k2+1)%p.size();\r\n\t\t\telse if(n[k1]=='P'&&p[k2]=='S') N++,k1=(k1+1)%n.size(),k2=(k2+1)%p.size();\r\n\t\t\telse if(p[k2]=='P'&&n[k1]=='S') P++,k1=(k1+1)%n.size(),k2=(k2+1)%p.size();\r\n\t\t}\r\n\t\t\r\n\t\tif(t==r) cout<<N<<' '<<P; else cout<<N*(r/t)<<' '<<P*(r/t);\r\n\t}\r\n\t\r\n\treturn 0;\r\n}"
}