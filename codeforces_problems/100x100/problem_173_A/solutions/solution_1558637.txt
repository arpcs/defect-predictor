{
    "id": 1558637,
    "contestId": 173,
    "creationTimeSeconds": 1334616680,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 173,
        "index": "A",
        "name": "Rock-Paper-Scissors",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1300,
        "tags": [
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 173,
        "members": [
            {
                "handle": "swabbie13"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1333724400
    },
    "programmingLanguage": "Java 6",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 60,
    "memoryConsumedBytes": 43315200,
    "source": "import java.util.Scanner;\r\n\r\n\r\npublic class RockPaperScissors {\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tnew RockPaperScissors().solve();\r\n\t}\r\n\r\n\tpublic void solve(){\t\r\n\t\tScanner in = new Scanner(System.in);\r\n\t\tint rounds = in.nextInt();\r\n\t\tin.nextLine();\r\n\t\tString pOne = in.nextLine();\r\n\t\tString pTwo = in.nextLine();\r\n\t\tint pOneSize = pOne.length();\r\n\t\tint pTwoSize = pTwo.length();\r\n\t\tint pOneAns = 0;\r\n\t\tint pTwoAns =0;\r\n\t\tint g =gcd(pOneSize, pTwoSize);\r\n\t\tint max =Math.max(pOneSize,pTwoSize);\r\n\t\tint min = Math.min(pOneSize, pTwoSize);\r\n\t\tint shifts = max; \r\n\t\tint[] p1Marks = new int[shifts];\r\n\t\tint[] p2Marks = new int[shifts];\r\n\t\tfor(int i=0; i<shifts; i++){\r\n\t\t\tchar[] oneChar = new char[min];\r\n\t\t\tchar [] twoChar = new char[min];\r\n\t\t\tif(pOneSize>pTwoSize){\r\n\t\t\t\tint placed = 0;\r\n\t\t\t\tint pick = i;\r\n\t\t\t\twhile(placed<min){\r\n\t\t\t\t\toneChar[placed] = pOne.charAt(pick);\r\n\t\t\t\t\tpick++;\r\n\t\t\t\t\tpick = pick%max;\r\n\t\t\t\t\tplaced++;\r\n\t\t\t\t}\r\n\t\t\t\ttwoChar = pTwo.toCharArray();\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tint placed = 0;\r\n\t\t\t\tint pick = i;\r\n\t\t\t\twhile(placed<min){\r\n\t\t\t\t\ttwoChar[placed] = pTwo.charAt(pick);\r\n\t\t\t\t\tpick++;\r\n\t\t\t\t\tpick = pick%max;\r\n\t\t\t\t\tplaced++;\r\n\t\t\t\t}\r\n\t\t\t\toneChar = pOne.toCharArray();\r\n\t\t\t}\r\n\t\t\t//System.out.println(i);\r\n\t\t\t//print(oneChar);\r\n\t\t\t//print(twoChar);\r\n\t\t\tp1Marks[i] = p1MarkCalc(oneChar, twoChar);\r\n\t\t\tp2Marks[i] = p2MarkCalc(oneChar, twoChar);\r\n\t\t}\r\n\t\tint fullRounds = rounds/min;\r\n\t\tint pick = 0;\r\n\t\tint[] visited = new int[max];\r\n\t\tint leftOver = -1;\r\n\t\tint left = 0;\r\n\t\tfor(int i=0; i<fullRounds; i++){\r\n\t\t\tpick = (i*min)%max;\r\n\t\t\tif(visited[pick]!=0){\r\n\t\t\t\t//System.out.println(\"cycle\");\r\n\t\t\t\tint cycle = i -(visited[pick]-1);\r\n\t\t\t\tint mult = fullRounds/cycle;\r\n\t\t\t\tleft = fullRounds%cycle;\r\n\t\t\t\tpOneAns=p1Marks[pick]*mult;\r\n\t\t\t\tpTwoAns+=p2Marks[pick]*mult;\r\n\t\t\t\tleftOver = pick+1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tvisited[pick] = i+1;\r\n\t\t\t//System.out.println(\"round\"+pick);\r\n\t\t\tpOneAns+=p1Marks[pick];\r\n\t\t\t//System.out.println(\"P1 got\"+p1Marks[pick]);\r\n\t\t\tpTwoAns+=p2Marks[pick];\r\n\t\t\t//System.out.println(\"P2 got\"+p2Marks[pick]);\r\n\t\t}\r\n\t\tpick = (pick+min)%max;\r\n\t\tif(leftOver!=-1){\r\n\t\t\tpick = leftOver;\r\n\t\t}\r\n\t\tint extra = (rounds%min)+left;\r\n\t\tchar[] oEx = new char[extra];\r\n\t\tchar[] tEx = new char[extra];\r\n\t\tif(pOneSize>pTwoSize){\r\n\t\t\tfor(int i =0; i<extra; i++){\r\n\t\t\t\tint pos = (pick+i)%max;\r\n\t\t\t\toEx[i] = pOne.charAt(pos);\r\n\t\t\t}\r\n\t\t\tfor(int i =0; i<extra; i++){\r\n\t\t\t\tint pos = (i)%min;\r\n\t\t\t\ttEx[i] = pTwo.charAt(pos);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tfor(int i =0; i<extra; i++){\r\n\t\t\t\tint pos = (pick+i)%max;\r\n\t\t\t\ttEx[i] = pTwo.charAt(pos);\r\n\t\t\t}\r\n\t\t\tfor(int i =0; i<extra; i++){\r\n\t\t\t\tint pos = (i)%min;\r\n\t\t\t\toEx[i] = pOne.charAt(pos);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//System.out.println(new String(oEx));\r\n\t\t//System.out.println(new String(tEx));\r\n\t\tpOneAns+=p1MarkCalc(oEx, tEx);\r\n\t\tpTwoAns+=p2MarkCalc(oEx, tEx);\r\n\t\tSystem.out.println(pOneAns+\" \"+pTwoAns);\r\n\r\n\t}\r\n\r\n\tpublic int gcd (int a, int b) {\r\n\t\tif (b == 0)\r\n\t\t\treturn a;\r\n\t\telse\r\n\t\t\treturn gcd (b, a % b);\r\n\t}\r\n\tpublic int p1MarkCalc(char[] p1, char[] p2){\r\n\t\tint marks =0;\r\n\t\tfor(int i=0; i<p1.length; i++){\r\n\t\t\tif(p1[i]=='R'){\r\n\t\t\t\tif(p2[i]=='P'){\r\n\t\t\t\t\tmarks++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(p1[i]=='S'){\r\n\t\t\t\tif(p2[i]=='R'){\r\n\t\t\t\t\tmarks++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(p1[i]=='P'){\r\n\t\t\t\tif(p2[i]=='S'){\r\n\t\t\t\t\tmarks++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn marks;\r\n\t}\r\n\tpublic int p2MarkCalc(char[] p1, char[] p2){\r\n\t\tint marks =0;\r\n\t\tfor(int i=0; i<p1.length; i++){\r\n\t\t\tif(p2[i]=='R'){\r\n\t\t\t\tif(p1[i]=='P'){\r\n\t\t\t\t\tmarks++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(p2[i]=='S'){\r\n\t\t\t\tif(p1[i]=='R'){\r\n\t\t\t\t\tmarks++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(p2[i]=='P'){\r\n\t\t\t\tif(p1[i]=='S'){\r\n\t\t\t\t\tmarks++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn marks;\r\n\t}\r\n\tpublic void print(char [] a){\r\n\t\tfor(char c: a){\r\n\t\t\tSystem.out.print(c);\r\n\t\t}\r\n\t\tSystem.out.println();\r\n\t}\r\n\r\n}\r\n"
}