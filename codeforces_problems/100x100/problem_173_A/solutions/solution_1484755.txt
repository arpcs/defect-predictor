{
    "id": 1484755,
    "contestId": 173,
    "creationTimeSeconds": 1333735096,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 173,
        "index": "A",
        "name": "Rock-Paper-Scissors",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1300,
        "tags": [
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 173,
        "members": [
            {
                "handle": "Zozman"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1333724400
    },
    "programmingLanguage": "MS C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 50,
    "memoryConsumedBytes": 1433600,
    "source": "#include<string>\r\n#include<vector>\r\n#include<iostream>\r\n\r\nusing namespace std;\r\n\r\nsize_t gcd(long long a, long long b)\r\n{\r\n    if (a<b)\r\n        return gcd(b,a);\r\n    else\r\n    {\r\n        if(a%b==0)\r\n            return b;\r\n        else\r\n            return gcd(b, a%b);\r\n    }\r\n}\r\n\r\nint main(void)\r\n{\r\n    size_t n;\r\n    size_t m, k;\r\n    size_t polik = 0, nikif = 0;\r\n    string nik, pol;\r\n    cin >> n >> nik >> pol;\r\n    m = nik.size();\r\n    k = pol.size();\r\n    size_t nok = m*k/gcd(m,k);\r\n    size_t rem = n % nok;\r\n    size_t pp = 0; \r\n    size_t nn = 0;\r\n    size_t nikif1=0, polik1=0;\r\n    for(int i = 0; i < nok; i++)\r\n    {\r\n        if(pp == k)\r\n            pp = 0;\r\n        if(nn == m)\r\n            nn = 0;\r\n        if((pol[pp] == 'R' && nik[nn] == 'S')||(pol[pp] == 'S' && nik[nn] == 'P')||(pol[pp] == 'P' && nik[nn] == 'R'))\r\n            polik++;\r\n        else\r\n            if(pol[pp] == nik[nn])\r\n            {}\r\n            else\r\n                nikif++;\r\n        pp++;\r\n        nn++;\r\n        if(n % nok == i+1)\r\n        {\r\n            nikif1 = nikif;\r\n            polik1 = polik;\r\n        }\r\n\r\n    }\r\n    cout  << polik*(n / nok)+polik1 << \" \" << nikif*(n / nok)+nikif1;\r\n    return 0;\r\n}"
}