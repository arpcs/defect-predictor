{
    "id": 120929691,
    "contestId": 1316,
    "creationTimeSeconds": 1625037248,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "shiftyblock"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 217,
    "memoryConsumedBytes": 107827200,
    "source": "\r\n/*\r\nID: davidzh8\r\nPROG: subset\r\nLANG: C++\r\n */\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define pii pair<long,long>\r\n#define endl \"\\n\"\r\n#define long long long\r\n#define v vector\r\n\r\nlong MOD = 1e9+7;\r\n\r\nvoid setIO(string name, int submit) {\r\n    if (submit) {\r\n        ios_base::sync_with_stdio(0);\r\n        cin.tie(0);\r\n        freopen((name + \".in\").c_str(), \"r\", stdin);\r\n        freopen((name + \".out\").c_str(), \"w\", stdout);\r\n    }\r\n    else{\r\n        ios_base::sync_with_stdio(0);\r\n        cin.tie(0);\r\n    }\r\n\r\n}\r\nlong dp[100001][1<<7];\r\nvoid init(){\r\n    for(int i=0; i<=100000; i++){\r\n        for(int j=0; j<1<<7; j++){\r\n            dp[i][j] = -1e18;\r\n        }\r\n    }\r\n    dp[0][0] = 0;\r\n}\r\nint main() {\r\n    setIO(\"\", 0);\r\n    init();\r\n    int N, P, K; cin>>N>>P>>K;\r\n    v<pii> arr;\r\n    for(int i=0; i<N; i++){\r\n        int x; cin>>x; arr.emplace_back(x, i);\r\n    }\r\n    sort(arr.begin(), arr.end());\r\n    reverse(arr.begin(), arr.end());\r\n    v<int> idx(N);\r\n    for(int i=0; i<N; i++){\r\n        idx[arr[i].second] = i;\r\n    }\r\n    v<v<int>> players(N);\r\n    for(int i=0; i<N; i++){\r\n        for(int j=0; j<P; j++){\r\n            int num; cin>>num; players[idx[i]].push_back(num);\r\n        }\r\n    }\r\n\r\n    for(int i=0; i<N; i++){\r\n        for(int mask = 0; mask<1<<P; mask++){\r\n            int bits = 0;\r\n            int temp = mask;\r\n            while(temp>0){\r\n                bits+= temp&1;\r\n                temp>>=1;\r\n            }\r\n            if(bits>=K-i) dp[i+1][mask] = max(dp[i+1][mask], dp[i][mask]);\r\n            else dp[i+1][mask] = max(dp[i+1][mask], dp[i][mask] + arr[i].first);\r\n            for(int j=0; j<P; j++){\r\n                if((mask & 1<<j)==0){\r\n                    dp[i+1][mask|1<<j] = max(dp[i+1][mask|1<<j], dp[i][mask] + players[i][j]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    cout<<dp[N][(1<<P)-1]<<endl;\r\n\r\n    return 0;\r\n}\r\n\r\n"
}