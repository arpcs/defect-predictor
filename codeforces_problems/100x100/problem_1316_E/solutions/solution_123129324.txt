{
    "id": 123129324,
    "contestId": 1316,
    "creationTimeSeconds": 1626804745,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "fvogel"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 124,
    "timeConsumedMillis": 1918,
    "memoryConsumedBytes": 126156800,
    "source": "/*\r\nFile created on 07/20/2021 at 19:22:27.\r\nLink to problem: \r\nDescription: \r\nTime complexity: O()\r\nSpace complexity: O()\r\nStatus: DEV (most of the time I don't update status, so it stays DEV which is the default value)\r\nCopyright: \u24b8 2021 Francois Vogel\r\n*/\r\n\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <functional>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n#define pii pair<int, int>\r\n#define f first\r\n#define s second\r\n\r\n#define vi vector<int>\r\n#define all(x) x.begin(), x.end()\r\n#define size(x) (int)(x.size())\r\n#define pb push_back\r\n#define ins insert\r\n#define cls clear\r\n\r\n#define int ll\r\n#define ll long long\r\n#define ld long double\r\n\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\r\n\r\nconst int siz = 1e5+5;\r\nconst int inf = 1e18;\r\nconst int MX_P = 7;\r\n\r\nint n, nbPlayers, nbAudience;\r\nint dp [siz][1<<MX_P];\r\nint strength [siz][MX_P];\r\npii audienceScore [siz];\r\nint newPos [siz];\r\n\r\nint DP(int x, int mask) {\r\n    if (x == n) return 0;\r\n    else if (dp[x][mask] != -1) return dp[x][mask];\r\n    else {\r\n        int alreadyChosen = x-__builtin_popcountll(mask);\r\n        dp[x][mask] = DP(x+1, mask);\r\n        if (alreadyChosen < nbAudience) dp[x][mask] += audienceScore[x].f;\r\n        for (int i = 0; i < nbPlayers; i++) if (!((mask>>i)&1)) {\r\n            int nMask = mask|(1<<i);\r\n            int loc = DP(x+1, nMask);\r\n            loc += strength[x][i];\r\n            dp[x][mask] = max(dp[x][mask], loc);\r\n        }\r\n        return dp[x][mask];\r\n    }\r\n}\r\n\r\nsigned main() {\r\n    cin.tie(0);\r\n    // ios_base::sync_with_stdio(0);\r\n\r\n    cin >> n >> nbPlayers >> nbAudience;\r\n    for (int i = 0; i < n; i++) cin >> audienceScore[i].f;\r\n    for (int i = 0; i < n; i++) audienceScore[i].s = i;\r\n    sort(audienceScore, audienceScore+n);\r\n    reverse(audienceScore, audienceScore+n);\r\n    for (int i = 0; i < n; i++) newPos[audienceScore[i].s] = i;\r\n    for (int i = 0; i < n; i++) for (int j = 0; j < nbPlayers; j++) cin >> strength[newPos[i]][j];\r\n    for (int i = 0; i < n; i++) for (int j = 0; j < (1<<nbPlayers); j++) dp[i][j] = -1;\r\n    cout << DP(0, 0);\r\n\r\n    int d = 0;\r\n    d++;\r\n}"
}