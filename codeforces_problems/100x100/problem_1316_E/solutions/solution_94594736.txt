{
    "id": 94594736,
    "contestId": 1316,
    "creationTimeSeconds": 1601751170,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "Samaun"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 1013,
    "memoryConsumedBytes": 117862400,
    "source": "#include<bits/stdc++.h>\r\n#define int long long\r\n#define pb push_back\r\n#define yo cout<<\"i got here\\n\";\r\nusing namespace std;\r\nconst int mod = 1e9+7,siz = 1e5+5,len = (1<<7) + 10;\r\nint t,n,p,m,k,a[siz],pos[siz],dp[siz][len],skill[siz][7];\r\nbool cmp(int x,int y)\r\n{\r\n    return a[x]>a[y];\r\n}\r\nint32_t main(){\r\n    ios_base::sync_with_stdio(0); cin.tie(0);\r\n\r\n    cin>>n>>p>>k;\r\n    for(int i = 1;i<=n;i++) cin>>a[i],pos[i] = i;\r\n    for(int i = 1;i<=n;i++) for(int j = 0;j<p;j++) cin>>skill[i][j];\r\n    sort(pos+1,pos+1+n,cmp);\r\n    memset(dp,-1,sizeof dp);\r\n    dp[0][0] = 0;\r\n    for(int i = 1;i<=n;i++)\r\n    {\r\n        int ind = pos[i];\r\n        for(int mask = 0;mask<(1LL<<p);mask++)\r\n        {\r\n            int taken = __builtin_popcount(mask);\r\n            int lft = i-1-taken;\r\n            if(lft<k)\r\n            {\r\n                if(dp[i-1][mask]!=-1) dp[i][mask] = dp[i-1][mask]+a[ind];\r\n            }\r\n            else\r\n            {\r\n                if(dp[i-1][mask]!=-1) dp[i][mask] = dp[i-1][mask];\r\n            }\r\n            for(int j = 0;j<p;j++)\r\n            {\r\n                if((mask&(1LL<<j)) and dp[i][(mask^(1LL<<j))]!=-1)\r\n                {\r\n                    int cur = skill[ind][j]+dp[i-1][(mask^(1LL<<j))];\r\n                    dp[i][mask] = max(dp[i][mask],cur);\r\n                }\r\n            }\r\n            //cout<<dp[i][mask]<<endl;\r\n        }\r\n    }\r\n    cout<<dp[n][(1LL<<p)-1]<<endl;\r\n}\r\n"
}