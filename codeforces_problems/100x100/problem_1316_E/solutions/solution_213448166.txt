{
    "id": 213448166,
    "contestId": 1316,
    "creationTimeSeconds": 1689133178,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "sans.undertale"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 685,
    "memoryConsumedBytes": 30310400,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nint main() {\n    int n,p,k; cin >> n >> p >> k;\n    vector<pair<int, vector<int>>> audience(n, {0,{}});\n    for (int i = 0; i < n; i++){\n        cin >> audience[i].first;\n    }\n    for (int i = 0; i < n; i++){\n        for (int j = 0; j < p; j++){\n            int temp; cin >> temp; audience[i].second.push_back(temp);\n        }\n    }\n    sort(audience.rbegin(), audience.rend());\n    int weirdassdpthing[(1<<p)][n+1];\n    for (int i = 0; i <= n; i++){\n        for (int j = 0; j < (1<<p); j++){\n            weirdassdpthing[j][i] = INT_MIN;\n        }\n    }\n    weirdassdpthing[0][0] = 0;\n    for (int j = 0; j < n; j++){\n        for (int i = 0; i < (1 << p); i++){\n            if (weirdassdpthing[i][j] == INT_MIN){\n                continue;\n            }\n            int numberofsetbits = 0;\n            for (int l = 0; l < p; l++){\n                if ((1<<l) & i){\n                    numberofsetbits += 1;\n                } else{\n                    weirdassdpthing[i + (1<<l)][j+1] = max(weirdassdpthing[i + (1 << l)][j+1], weirdassdpthing[i][j] + audience[j].second[l]);\n                }\n            }\n            if (k + numberofsetbits > j){\n                weirdassdpthing[i][j+1] = max(weirdassdpthing[i][j+1], weirdassdpthing[i][j] + audience[j].first);\n            } else{\n                weirdassdpthing[i][j+1] = max(weirdassdpthing[i][j+1], weirdassdpthing[i][j]);\n            }\n        }\n    }\n    cout << weirdassdpthing[(1<<p)-1][n];\n}\n"
}