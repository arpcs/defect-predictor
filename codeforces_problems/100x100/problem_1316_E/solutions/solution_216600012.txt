{
    "id": 216600012,
    "contestId": 1316,
    "creationTimeSeconds": 1690817844,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "Joydeep8822154667"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 124,
    "timeConsumedMillis": 2292,
    "memoryConsumedBytes": 229990400,
    "source": "#ifndef _GLIBCXX_NO_ASSERT\r\n#include <cassert>\r\n#endif\r\n#include <cctype>\r\n#include <cerrno>\r\n#include <cfloat>\r\n#include <ciso646>\r\n#include <climits>\r\n#include <clocale>\r\n#include <cmath>\r\n#include <csetjmp>\r\n#include <csignal>\r\n#include <cstdarg>\r\n#include <cstddef>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <ctime>\r\n\r\n// C++\r\n#include <algorithm>\r\n#include <bitset>\r\n#include <complex>\r\n#include <deque>\r\n#include <exception>\r\n#include <fstream>\r\n#include <functional>\r\n#include <iomanip>\r\n#include <ios>\r\n#include <iosfwd>\r\n#include <iostream>\r\n#include <istream>\r\n#include <iterator>\r\n#include <limits>\r\n#include <list>\r\n#include <locale>\r\n#include <map>\r\n#include <memory>\r\n#include <new>\r\n#include <numeric>\r\n#include <ostream>\r\n#include <queue>\r\n#include <set>\r\n#include <sstream>\r\n#include <stack>\r\n#include <stdexcept>\r\n#include <streambuf>\r\n#include <string>\r\n#include <typeinfo>\r\n#include <utility>\r\n#include <valarray>\r\n#include <vector>\r\n\r\n#if __cplusplus >= 201103L\r\n#include <array>\r\n#include <atomic>\r\n#include <chrono>\r\n#include <codecvt>\r\n#include <condition_variable>\r\n#include <forward_list>\r\n#include <future>\r\n#include <initializer_list>\r\n#include <mutex>\r\n#include <random>\r\n#include <ratio>\r\n#include <regex>\r\n#include <scoped_allocator>\r\n#include <system_error>\r\n#include <thread>\r\n#include <tuple>\r\n#include <typeindex>\r\n#include <type_traits>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\n#endif\r\n\r\n#if __cplusplus >= 201402L\r\n#include <shared_mutex>\r\n#endif\r\n// #include <ext/pb_ds/assoc_container.hpp>\r\n// #include <ext/pb_ds/tree_policy.hpp>\r\n// using namespace __gnu_pbds;\r\n\r\nusing namespace std;\r\n#define ll long long\r\nconst ll mod = 1e9 + 7;\r\nconst ll mod2 = 998244353;\r\n\r\n// #define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update>\r\n\r\nconst int INF = 1e9;\r\n// #define ordered_set tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update>\r\nbool isPalindrome(string &S)\r\n{\r\n    // Iterate over the range [0, N/2]\r\n    for (int i = 0; i < S.length() / 2; i++)\r\n    {\r\n\r\n        // If S[i] is not equal to\r\n        // the S[N-i-1]\r\n        if (S[i] != S[S.length() - i - 1])\r\n        {\r\n            // Return No\r\n            // return \"No\";\r\n            return false;\r\n        }\r\n    }\r\n    // Return \"Yes\"\r\n    // return \"Yes\";\r\n    return true;\r\n}\r\nbool mycomp(pair<ll, ll> &p1, pair<ll, ll> &p2)\r\n{\r\n    if (p1.first != p2.first)\r\n    {\r\n        return p1.first > p2.first;\r\n    }\r\n    else\r\n    {\r\n        return p1.second < p2.second;\r\n    }\r\n}\r\nll n,p,k;\r\nvector<ll>arr(100004,0);\r\nvector<pair<ll,ll>>v1;\r\nll v[100004][10];\r\nll dp[100002][(1<<8)];\r\nll solve(ll pos,ll mask){\r\n    if(pos>=n){\r\n        if(mask==(1<<p)-1){\r\n            return 0LL;\r\n        }\r\n        else{\r\n            return -1e18;\r\n        }\r\n    }\r\n    if(dp[pos][mask]!=-1){\r\n        return dp[pos][mask];\r\n    }\r\n    ll ans=-1e18;\r\n    ll used=0;\r\n    for(int bit=0;bit<=10;bit++){\r\n        if(mask&(1<<bit)){\r\n            used++;\r\n        }\r\n    }\r\n    if(mask!=(1<<p)-1){\r\n        for(int bit=0;bit<p;bit++){\r\n            if(mask&(1<<bit)){\r\n                continue;\r\n            }\r\n            else{\r\n                ans=max(ans,v[v1[pos].second][bit]+solve(pos+1,mask|(1<<bit)));\r\n            }\r\n        }\r\n    }\r\n    ll have=pos+1-used;\r\n    // cout<<pos<<\" \"<<have<<endl;\r\n    if(have<=k){\r\n        ans=max(ans,v1[pos].first+solve(pos+1,mask));\r\n\r\n    }\r\n    else{\r\n        ans=max(ans,solve(pos+1,mask));\r\n    }\r\n    return dp[pos][mask]=ans;\r\n\r\n}\r\n\r\n\r\n\r\nint main()\r\n{\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n\r\n    ll t;\r\n\r\n    // cin >> t;\r\n\r\n    t = 1;\r\n\r\n    for (ll tt = 1; tt <= t; tt++)\r\n    {\r\n        cin>>n>>p>>k;\r\n        memset(dp,-1,sizeof(dp));\r\n        for(ll i=0;i<n;i++){\r\n            cin>>arr[i];\r\n            v1.push_back({arr[i],i});\r\n\r\n        }\r\n        for(int i=0;i<n;i++){\r\n            for(int j=0;j<p;j++){\r\n                cin>>v[i][j];\r\n            }\r\n        }\r\n        // sort(arr.rbegin(),arr.rend());\r\n        sort(v1.rbegin(),v1.rend());\r\n        \r\n        cout<<solve(0,0);\r\n\r\n    }\r\n}"
}