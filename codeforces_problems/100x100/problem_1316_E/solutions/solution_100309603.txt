{
    "id": 100309603,
    "contestId": 1316,
    "creationTimeSeconds": 1607041392,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "Vanjanja"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define N 100001\r\n#define P 7\r\nint b[N][P];\r\npair<int, int>a[N];\r\nconst int Bitmask = 1 << 7;\r\npair<int, int> dp1[P][Bitmask], dp2[P][Bitmask];\r\nbool cmp(pair<int, int> x, pair<int, int> y) {\r\n    if (x > y) {\r\n        for (int i = 0; i < P; i++) {\r\n            swap(b[x.second][i], b[y.second][i]);\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nvoid solve() {\r\n    int n, p, k;\r\n    cin >> n >> p >> k;\r\n    int bitmask = 1 << p;\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> a[i].first;\r\n        a[i].second = i;\r\n    }\r\n    for (int i = 0; i < n; i++)\r\n        for (int j = 0; j < p; j++)\r\n            cin >> b[i][j];\r\n    sort(a, a + n, cmp);\r\n    for (int i = 0; i < n - p; i++) {\r\n        for (int j = 0; j < p; j++)\r\n            for (int l = 0; l < bitmask; l++) {\r\n                int r = 1 << j;\r\n                if (bitmask & r)\r\n                    dp2[j][l].first = max(dp1[j][l].first, dp1[j][l ^ r].first + b[i][j]);\r\n                else\r\n                    dp2[j][l].first = dp1[j][l].first;\r\n            }\r\n        for (int j = 0; j < p; j++)\r\n            for (int l = 0; l < bitmask; l++)\r\n                dp1[j][l].first = dp2[j][l].first;\r\n\r\n    }\r\n    int suma = 0;\r\n    for (int i = 0; i < k; i++)\r\n        suma+=a[n - 1 - i].first;\r\n    int ar[p];\r\n    for (int i = 0; i < p; i++) {\r\n        ar[i] = a[n - 1 - k - i].first;\r\n    }\r\n    for (int i = 0; i < p; i++) {\r\n        for (int j = 0; j < p; j++) {\r\n            for (int l = 0; l < bitmask; l++) {\r\n                int r = 1 << j;\r\n                if (bitmask & r) {\r\n                    int dp = dp1[j][l ^ r].first + b[i][j] - ar[dp1[j][l ^ r].second];\r\n                    if (dp > dp1[j][l].first) {\r\n                        dp2[j][l].first = dp;\r\n                        dp2[j][l].second = dp1[j][l ^ r].second + 1;\r\n                        continue;\r\n                    }\r\n                }\r\n                dp2[j][l].first = dp1[j][l].first;\r\n                dp2[j][l].second = dp2[j][l].second;\r\n            }\r\n        }\r\n        for (int j = 0; j < p; j++)\r\n            for (int l = 0; l < bitmask; l++) {\r\n                dp1[j][l].first = dp2[j][l].first;\r\n                dp1[j][l].second = dp2[j][l].second;\r\n            }\r\n    }\r\n    int resenje = 0;\r\n    for (int i = 0; i < p; i++)\r\n        resenje = max(resenje, dp1[i][127]);\r\n    cout << resenje << endl;\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    solve();\r\n    return 0;\r\n}\r\n"
}