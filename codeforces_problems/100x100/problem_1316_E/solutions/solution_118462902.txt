{
    "id": 118462902,
    "contestId": 1316,
    "creationTimeSeconds": 1622855675,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "null_awe"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\nint countBits(int n) {\n  int bits = 0;\n  while (n > 0) {\n    ++bits;\n    n &= n - 1;\n  }\n  return bits;\n}\n\nint main() {\n  int n, p, k;\n  cin >> n >> p >> k;\n  vector<vector<int>> poses(n, vector<int>(p + 1));\n  for (int i = 0; i < n; ++i) cin >> poses[i][0];\n  for (int i = 0; i < n; ++i) for (int j = 0; j < p; j++) cin >> poses[i][j + 1];\n  sort(poses.begin(), poses.end());\n  reverse(poses.begin(), poses.end());\n  vector<vector<int>> memo(n, vector<int>(1 << p));\n  for (int i = 1; i < n; ++i) {\n    for (int j = 0; j < (1 << p); ++j) {\n      int bits = countBits(j);\n      if (bits > i) continue;\n      for (int k = 0; k < p; ++k) {\n        if (!(j & (1 << k))) continue;\n        int mask = j & ~(1 << k);\n        memo[i][j] = max(memo[i][j], memo[i - 1][mask] + poses[i - 1][k + 1]);\n      }\n      if (i - countBits < k) memo[i][j] = max(memo[i][j], memo[i - 1][j] + poses[i - 1][0]);\n    }\n  }\n  int m = 0;\n  for (int i = 0; i < (1 << p); ++i) m = max(m, memo[n - 1][i]);\n  cout << m;\n  return 0;\n}"
}