{
    "id": 193702822,
    "contestId": 1316,
    "creationTimeSeconds": 1676458459,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 124,
    "timeConsumedMillis": 2215,
    "memoryConsumedBytes": 9728000,
    "source": "#include <iostream>\n#include <bits/stdc++.h>\n#include <iomanip>\n#include <vector>\n#include <algorithm>\n#include <queue>\n#include <map>\n#include <unordered_map>\n#include <cmath>\n#include <stack>\n#include <set>\n#include <limits.h>\n#include <assert.h>\n#define ll long long\n#define endl '\\n'\n#define fast                 \\\n    ios::sync_with_stdio(0); \\\n    cin.tie(0);              \\\n    cout.tie(0);\nusing namespace std;\nconst int N = 1e5 + 10, md = 1e9 + 7, M = 1e7 + 10;\nvoid pre()\n{\n}\nbool cmp(pair<ll, vector<ll>> &x, pair<ll, vector<ll>> &y)\n{\n    return x.first > y.first;\n}\nint n, p, k;\npair<ll, vector<ll>> player[N];\nll dp[2][8][1 << 7];\nvoid solve()\n{\n    cin >> n >> p >> k;\n    for (int i = 1; i <= n; i++)\n    {\n        cin >> player[i].first;\n    }\n    for (int i = 1; i <= n; i++)\n    {\n        player[i].second = vector<ll>(p);\n        for (auto &j : player[i].second)\n        {\n            cin >> j;\n        }\n    }\n    sort(player + 1, player + n + 1, cmp);\n    // for(int i=1;i<=n;i++)\n    // {\n    //     cout<<player[i].first<<' ';\n    //     for(auto j:player[i].second) cout<<j<<' ';\n    //     cout<<endl;\n    // }\n    for (int i = 0; i <= p; i++)\n    {\n        for (int j = 0; j < (1 << p); j++)\n        {\n            dp[1][i][j] = dp[0][i][j] = -1e17;\n        }\n    }\n    int cur = 0;\n    dp[cur][0][0] = 0;\n    for (int idx = 1; idx <= n; idx++)\n    {\n        for (int aud = 0; aud <= p; aud++)\n        {\n            for (int mask = 0; mask < (1 << p); mask++)\n            {\n                if (idx <= k)\n                {\n                    dp[1 - cur][aud][mask] = max(dp[1 - cur][aud][mask], dp[cur][aud][mask] + player[idx].first);\n                }\n                else\n                {\n                    dp[1 - cur][max(0, aud - 1)][mask] = max(dp[1 - cur][max(0, aud - 1)][mask], dp[cur][aud][mask] + (aud ? player[idx].first : 0));\n                }\n                for (int j = 0; j < p; j++)\n                {\n                    if ((mask & (1 << j)) == 0)\n                    {\n                        dp[1 - cur][aud + bool(idx <= k)][(mask | (1 << j))] = max(dp[1 - cur][aud + bool(idx <= k)][(mask | (1 << j))], dp[cur][aud][mask] + player[idx].second[j]);\n                    }\n                }\n            }\n        }\n        cur = 1 - cur;\n    }\n    cout << dp[cur][0][(1 << p) - 1] << endl;\n}\nint main()\n{\n    pre();\n    fast;\n    int tc = 1;\n    // cin >> tc;\n    while (tc--)\n    {\n        solve();\n    }\n}\n  \t\t\t\t  \t\t\t   \t\t \t\t\t\t  \t \t \t\t\t"
}