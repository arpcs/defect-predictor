{
    "id": 216629300,
    "contestId": 1316,
    "creationTimeSeconds": 1690833140,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "elgen_el3a4e2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 124,
    "timeConsumedMillis": 951,
    "memoryConsumedBytes": 230092800,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n//#pragma GCC optimize(\"Ofast,no-stack-protector\")\r\n//#pragma GCC optimize(\"unroll-loops\")\r\n//#pragma GCC optimize(\"fast-math\")\r\n\r\n#define clr(v, d)\t\t\tmemset(v, d, sizeof(v))\r\n#define ll long long\r\n#define int long long\r\ntypedef tree< pair<int,int>, null_type, less<pair<int,int>>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\r\n#define setP(item) cout<<fixed<<setprecision(item);\r\nint ceilSqrt(int a){\r\n    return ::ceil(sqrtl(a));\r\n}\r\nint  divC(int a,int b){\r\n    return a/b+(a%b!=0);\r\n}\r\nint gcd(int a, int b) { return ((b == 0) ? a : gcd(b, a % b)); }\r\nint lcm(int a,int b){return (a*b)/gcd(a,b);}\r\nconst ll OO =1e18+10, mod = 1e9+7,mod2=1e9+9,  N=1e5+5,M=25,MOD= 998244353, minOO=LLONG_MIN;\r\nconst double EPS=1e-10;\r\nconst double PI=acos(-1);\r\nconst ll maximum=32768;\r\nconst int NOT_VISITED = -1;\r\n\r\n///   \u0647\u0630\u0627 \u0627\u0644\u062d\u0644 \u0645\u0646 \u0648\u062d\u064a \u062e\u064a\u0627\u0644 \u0627\u0644\u0645\u0624\u0644\u0641 \u0648\u0627\u064a \u062a\u0634\u0627\u0628\u0647 \u0628\u064a\u0646\u0647 \u0648 \u0628\u064a\u0646 \u0627\u064a \u062d\u0644 \u0627\u062e\u0631 \u0645\u0627 \u0647\u0648 \u0627\u0644\u0627 \u0645\u062d\u0636 \u0627\u0644\u0635\u062f\u0641\u0629\r\nll dp[N][1<<8];\r\nvector<pair<int,int>>vec;\r\nvector<vector<int>>s(N,vector<int>(8));\r\nll n,p,k;\r\nll solve(int idx,int mask){\r\n    ll team=__builtin_popcount(mask);\r\n    ll aud=idx-__builtin_popcount(mask);\r\n    if(idx==n){\r\n        if(team==p&&aud>=k)\r\n            return 0;\r\n        return -OO;\r\n    }\r\n    if(dp[idx][mask]!=-1)\r\n        return dp[idx][mask];\r\n\r\n    ll res= solve(idx+1,mask);\r\n    if(aud<k){\r\n        res=max(res,vec[idx].first+solve(idx+1,mask));\r\n    }\r\n    for (int i = 0; i < p; ++i) {\r\n        if(mask&(1<<i))\r\n            continue;\r\n        res=max(res,s[vec[idx].second][i]+ solve(idx+1,mask|(1<<i)));\r\n    }\r\n    return dp[idx][mask]=res;\r\n}\r\nvoid func(int index) {\r\n    clr(dp,-1);\r\n    cin>>n>>p>>k;\r\n    vec.resize(n);\r\n    for (int i = 0; i < n; ++i) {\r\n        cin>>vec[i].first;\r\n        vec[i].second=i;\r\n    }\r\n    sort(vec.rbegin(),vec.rend());\r\n    for (int i = 0; i < n; ++i) {\r\n        for (int j = 0; j < p; ++j) {\r\n            cin>>s[i][j];\r\n        }\r\n    }\r\n    cout<<solve(0,0);\r\n}\r\nsigned main() {\r\n//    freopen(\"ysys.in\",\"rt\",stdin);\r\n    //freopen(\"output.txt\",\"wt\",stdout);\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n    ll t=1;\r\n//    cin>>t;\r\n    ll index=1;\r\n    while (t--){\r\n        func(index++);\r\n    }\r\n    return 0;\r\n}"
}