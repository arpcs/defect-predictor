{
    "id": 84929035,
    "contestId": 1316,
    "creationTimeSeconds": 1593039997,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "ExplodingFreeze"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 124,
    "timeConsumedMillis": 498,
    "memoryConsumedBytes": 11776000,
    "source": "#include <bits/stdc++.h>\r\n#define int long long\r\nusing pii=std::pair<int,int>;\r\nusing namespace std;\r\n\r\nconst int maxn = 1e5 + 5, maxp = 7;\r\n\r\nint n, p, k, x, b[maxp][maxn], dp[1ll << maxp][2], cnt[1ll << maxp][2];\r\npii a[maxn];\r\nint32_t main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cin >> n >> p >> k;\r\n    for(int i = 0; i < n; i++)\r\n    {\r\n        cin >> x;\r\n        a[i] = {x, i};\r\n    }\r\n    sort(a, a + n, greater<pii>());\r\n    for(int i = 0; i < n; i++)\r\n        for(int j = 0; j < p; j++)\r\n            cin >> b[j][i];\r\n    for(int i = 0; i < 2; i++)\r\n        for(int j = 0; j < (1ll << p); j++)\r\n        {\r\n            dp[j][i] = -2e18;\r\n            cnt[j][i] = 0;\r\n        }\r\n        \r\n    dp[0][0] = 0;\r\n    for(int i = 0; i < n; i++)\r\n        for(int j = (1ll << p) - 1; j >= 0; j--)\r\n            if(dp[j][i & 1] > -1e18)\r\n            {\r\n                int bidx = a[i].second;\r\n                int cur = i & 1;\r\n                int ne = cur ^ 1;\r\n                for(int l = 0; l < p; l++)\r\n                    if(!(j & (1ll << l)) && dp[j | (1ll << l)][ne] < dp[j][cur] + b[l][bidx])\r\n                    {\r\n                        dp[j | (1ll << l)][ne] = dp[j][cur] + b[l][bidx];\r\n                        cnt[j | (1ll << l)][ne] = cnt[j][cur];\r\n                    }\r\n                dp[j][ne] = dp[j][cur];\r\n                if(cnt[j][cur] < k)\r\n                    dp[j][ne] += a[i].first;\r\n                cnt[j][ne] = cnt[j][cur] + 1;\r\n            }\r\n    assert(dp[(1ll << p) - 1][n & 1] > -1e18);\r\n    cout << dp[(1ll << p) - 1][n & 1] << \"\\n\";\r\n    return 0;\r\n}"
}