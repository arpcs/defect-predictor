{
    "id": 192209534,
    "contestId": 1316,
    "creationTimeSeconds": 1675545810,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "kondasujay2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 1856,
    "memoryConsumedBytes": 111411200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    int n, p, k;\r\n    cin >> n >> p >> k;\r\n    vector<pair<int, int>> a(n);\r\n    for (int i = 0; i < n; i++)\r\n        cin >> a[i].first, a[i].second = i;\r\n    sort(a.begin(), a.end(), greater<pair<int, int>>());\r\n\r\n    // save the sorted order so we can input the s array in order\r\n    vector<int> so(n);\r\n    for (int i = 0; i < n; i++)\r\n        so[a[i].second] = i;\r\n\r\n    vector<vector<int>> s(n, vector<int>(p));\r\n    for (int i = 0; i < n; i++)\r\n        for (int j = 0; j < p; j++)\r\n            cin >> s[so[i]][j];\r\n\r\n    vector<vector<long long>> dp((1 << p), vector<long long>(n + 1, -1));\r\n    dp[0][0] = 0;\r\n    for (int j = 1; j <= n; j++)\r\n        for (int i = 0; i < (1 << p); i++)\r\n        {\r\n            int c = j - bitset<7>(i).count();\r\n            dp[i][j] = dp[i][j - 1];\r\n            dp[i][j] += (dp[i][j] != -1 && c <= k) * a[j - 1].first;\r\n            for (int m = 0; m < p; m++)\r\n                if ((i & (1 << m)) > 0)\r\n                    dp[i][j] = max(dp[i][j], s[j - 1][m] + dp[i ^ (1 << m)][j - 1]);\r\n        }\r\n    cout << dp[(1 << p) - 1][n] << endl;\r\n}"
}