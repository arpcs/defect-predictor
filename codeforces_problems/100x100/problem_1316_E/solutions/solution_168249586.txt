{
    "id": 168249586,
    "contestId": 1316,
    "creationTimeSeconds": 1660469694,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "LemsoVasily"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 124,
    "timeConsumedMillis": 982,
    "memoryConsumedBytes": 44134400,
    "source": "/// punch then pray\r\n#include<bits/stdc++.h>\r\n#define int long long\r\n#define pii pair<int,int>\r\n#define fi first\r\n#define se second\r\n/*#pragma GCC target (\"avx2\")\r\n#pragma GCC optimization (\"O3\")\r\n#pragma GCC optimization (\"unroll-loops\")\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC target(\"avx,avx2,fma\")*/\r\nusing namespace std;\r\nusing ll = long long;\r\nusing ull = unsigned long long;\r\nusing ldb = long double;\r\nconst int N = (int)1e5 ;\r\nconst int maxN = (int)5e5 + 1;\r\nconst int mod = 1e9 + 7;\r\n//const int mod = 998244353;\r\nconst ll infty = 1e18 + 7;\r\nconst int base = (int)4e5;\r\nconst int block_size = 710;\r\n\r\nvoid InputFile()\r\n{\r\n    //freopen(\"guard.in\",\"r\",stdin);\r\n    //freopen(\"guard.out\",\"w\",stdout);\r\n    //freopen(\"test.inp\",\"r\",stdin);\r\n    //freopen(\"test.out\",\"w\",stdout);\r\n}\r\n\r\nvoid FastInput()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n}\r\n\r\nint n,p,k;\r\nint a[maxN];\r\nint id[maxN];\r\nint s[maxN][8];\r\nint sum[maxN];\r\nll dp[(1 << 7)];\r\nint pt[(1 << 7)];\r\nll f[(1 << 7)];\r\nint ptf[(1 << 7)];\r\n\r\nbool FA(int i,int j)\r\n{\r\n    return a[i] > a[j];\r\n}\r\n\r\nvoid Read()\r\n{\r\n    cin >> n >> p >> k;\r\n    for(int i = 1;i <= n;i++)\r\n    {\r\n        cin >> a[i];\r\n        id[i] = i;\r\n    }\r\n    for(int i = 1;i <= n;i++)\r\n    {\r\n        for(int j = 0;j < p;j++)\r\n        {\r\n            cin >> s[i][j];\r\n        }\r\n    }\r\n    sort(id + 1,id + n + 1,FA);\r\n    for(int i = 1;i <= n;i++)\r\n    {\r\n        sum[i] = sum[i-1] + a[id[i]];\r\n    }\r\n    //cout << sum[k];return;\r\n    dp[0] = sum[k];\r\n    pt[0] = k;\r\n    //cout << dp[0];return;\r\n    for(int i = 1;i <= n;i++)\r\n    {\r\n        int tmp = min(i-1,p);\r\n        for(int mask = 0;mask < (1 << tmp);mask++)\r\n        {\r\n            f[mask] = dp[mask];\r\n            ptf[mask] = pt[mask];\r\n        }\r\n\r\n        for(int mask = 0;mask < (1 << tmp);mask++)\r\n        {\r\n            for(int j = 0;j < p;j++)\r\n            {\r\n                if((mask & (1 << j)) == 0)\r\n                {\r\n                    int nxt_mask = mask ^ (1 << j);\r\n                    ll check_val;\r\n                    int check_pt;\r\n                    if(pt[mask] >= i)\r\n                    {\r\n                        check_val = dp[mask] - a[id[i]] + s[id[i]][j] + a[id[pt[mask]+1]];\r\n                        check_pt = pt[mask] + 1;\r\n                    }\r\n                    else\r\n                    {\r\n                        check_val = dp[mask] + s[id[i]][j];\r\n                        check_pt = pt[mask] ;\r\n                    }\r\n                    if(check_val > f[nxt_mask] || (check_val == f[nxt_mask] && check_pt < ptf[nxt_mask]))\r\n                    {\r\n                        f[nxt_mask] = check_val;\r\n                        ptf[nxt_mask] = check_pt;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        tmp = min(i,p);\r\n        for(int mask = 0;mask < (1 << tmp);mask++)\r\n        {\r\n            dp[mask] = f[mask];\r\n            pt[mask] = ptf[mask];\r\n        }\r\n    }\r\n    cout << dp[(1 << p)-1];\r\n}\r\n\r\nvoid Solve()\r\n{\r\n\r\n}\r\n\r\n\r\nint32_t main()\r\n{\r\n    FastInput();\r\n    //InputFile();\r\n    //int sub_type;\r\n    //cin >> sub_type;\r\n    //Sieve()\r\n    int test;\r\n    //cin >> test;\r\n    test = 1;\r\n    while(test--)\r\n    {\r\n        Read();\r\n        Solve();\r\n        //Debug();\r\n    }\r\n}\r\n////\r\n/////\r\n//////\r\n"
}