{
    "id": 221570546,
    "contestId": 1316,
    "creationTimeSeconds": 1693660700,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "EnDeRBeaT"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 124,
    "timeConsumedMillis": 358,
    "memoryConsumedBytes": 10547200,
    "source": "#include \"bits/stdc++.h\"\r\n#define _CRT_SECURE_NO_WARNINGS\r\n#define int long long\r\n#define pii pair<int, int>\r\n#define f first\r\n#define s second\r\n#define all(x) (x).begin(), (x).end()\r\n\r\nusing namespace std;\r\n\r\nconst int INF = -1e18;\r\n\r\n\r\nsigned main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int n, p, k;\r\n    cin >> n >> p >> k;\r\n    vector<int>a(n);\r\n    for(auto &x: a) cin >> x;\r\n    vector<int>order(n);\r\n    iota(all(order), 0);\r\n    sort(all(order), [&](int i, int j) { return a[i] > a[j]; });\r\n    vector<vector<int>> s(n, vector<int>(p));\r\n    for(auto &v: s) for(auto &x: v) cin >> x;\r\n    vector<int>dp(1 << p, INF), prev(1 << p, INF), bits(1 << p);\r\n    for(int i = 0; i < (1 << p); i++){\r\n        bits[i] = popcount((uint32_t)i);\r\n    }\r\n    dp[0] = 0;\r\n    for(int i = 0; i < n; i++){\r\n        prev = dp;\r\n        for(int mask = 0; mask < (1 << p); mask++){\r\n            if(i - bits[mask] < k) dp[mask] = max(dp[mask], prev[mask] + a[order[i]]);\r\n            for(int bit = 0; bit < p; bit++){\r\n                if(mask >> bit & 1){\r\n                    dp[mask] = max(dp[mask], prev[mask ^ (1 << bit)] + s[order[i]][bit]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    cout << dp.back();\r\n}"
}