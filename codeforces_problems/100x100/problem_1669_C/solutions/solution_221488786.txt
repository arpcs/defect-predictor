{
    "id": 221488786,
    "contestId": 1669,
    "creationTimeSeconds": 1693594275,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1669,
        "index": "C",
        "name": "Odd/Even Increments",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "greedy",
            "greedy",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1669,
        "members": [
            {
                "handle": "mahmoudabdeldayem2003"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1650551700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/**\r\n *   author: Mahmoud Abdeldayem\r\n**/\r\n#include <ctime>\r\n#include <cstdlib>\r\n#include <bits/stdc++.h>\r\n#include <cmath>\r\n#include <cstdio>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\n#define pi 3.14;\r\n#define MAX_INT 1000001\r\n#define MAX_LONG 9223372036854775807\r\n#define mp make_pair\r\n#define For(i,n) ;for(int i=0;i<n;i++)\r\nconst   int mod = 1000000007;\r\nconst   ll  OO  = 0x3f3f3f3f3f3f3f3f;\r\n//const int sz=201;\r\n//vector<int>adj[sz];\r\n\r\n\r\nvoid fast(){\r\n ios::sync_with_stdio(0);\r\n cin.tie(0);\r\n cout.tie(0);\r\n}\r\nll gcd(ll a, ll b){\r\n if(b==0)return a;\r\n return gcd(b,a%b);\r\n}\r\n\r\n//vector<int> bfs(int x, int y){\r\n// queue<pair<int,int>> q;\r\n// q.push({0,0});\r\n//\r\n// //vector<int> distance(sz,-100);\r\n// while(!q.empty()){\r\n//  int cx=q.front().first;\r\n//  int cy=q.front().second;\r\n//  q.pop();\r\n//  for(auto x:moves){\r\n//   int chx=x.first;\r\n//   int chy=x.second;\r\n//   if(distance[ch]==-100){\r\n//    distance[ch]=distance[p]+1;\r\n//    q.push(ch);\r\n//   }\r\n//  }\r\n// }\r\n// return distance;\r\n//}\r\n\r\n//ll binarySearch(ll x){\r\n// ll L=1; ll R=x/2; ll ans=1e18;\r\n// while(L<=R){\r\n//  ll mid=L+((R-L)/2);\r\n//  ll sm=(mid*(mid+1));\r\n//  if(sm>=x)\r\n//  if(mid*mid<target)L=mid+1;\r\n//  else R=mid-1;\r\n// }\r\n//}\r\n//int binarySearch(ll num , ll indx , ll n , vector<ll>&v){\r\n// ll l=indx; ll r=n-1;\r\n// while(l<=r){\r\n//   ll mid=l+((r-l)/2);\r\n//   if(2*num<=v[mid])return 1;\r\n//   else l=mid+1;\r\n// }\r\n// return 0;\r\n//}\r\n\r\n//ll comp(pair<ll,ll> a , pair<ll,ll> b){\r\n// if(a.first+b.first>a.second+b.second)return a.first;\r\n// else return a.second<b.second;\r\n//}\r\n\r\nvoid solve(){\r\n ll n; cin>>n;\r\n vector<ll> a(n);\r\n For(i,n)cin>>a[i];\r\n for(int i=2;i<n;i++){\r\n  if(a[i]%2!=a[i-2]%2){\r\n   cout<<\"NO\"<<\"\\n\";\r\n   return;\r\n  }\r\n }\r\n cout<<\"YES\"<<\"\\n\";\r\n}\r\n\r\nint main()\r\n{\r\n fast();\r\n ll T=1; cin>>T;\r\n while(T--){\r\n  solve();\r\n }\r\n }\r\n"
}