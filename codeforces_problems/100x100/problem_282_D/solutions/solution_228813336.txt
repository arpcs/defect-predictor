{
    "id": 228813336,
    "contestId": 282,
    "creationTimeSeconds": 1697724927,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 282,
        "index": "D",
        "name": "Yet Another Number Game",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "dp",
            "games"
        ]
    },
    "author": {
        "contestId": 282,
        "members": [
            {
                "handle": "dthien2212"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1363188600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 81,
    "timeConsumedMillis": 684,
    "memoryConsumedBytes": 16179200,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\n#define ii pair<int, int>\r\n#define fi first\r\n#define se second\r\nusing namespace std;\r\nconst int MAXN = 2e5 + 6;\r\nconst int MOD = 1e9 + 7;\r\n\r\n\r\n// int dp[303][303][303], minDp[303][303][303];\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0); cout.tie(0);\r\n    if (fopen(\"input.txt\", \"r\")){\r\n        freopen(\"input.txt\",\"r\",stdin);\r\n    }\r\n    \r\n    int n;\r\n    cin >> n;\r\n    vector<int> a(4);\r\n    for (int i = 1; i<=n; i++){\r\n        cin >> a[i];\r\n    }\r\n\r\n    vector<vector<vector<bool>>> dp(a[1]+1, vector<vector<bool>> (a[2]+1, vector<bool> (a[3]+1,1)));\r\n    vector<vector<vector<bool>>> minDp1(a[1]+1, vector<vector<bool>> (a[2]+1, vector<bool> (a[3]+1,1)));\r\n    vector<vector<vector<bool>>> minDp2(a[1]+1, vector<vector<bool>> (a[2]+1, vector<bool> (a[3]+1,1)));\r\n\r\n    // unordered_map<tuple<int,int,int>, int> m;\r\n    dp[0][0][0] = 0;\r\n    minDp1[0][0][0] = 0;\r\n    minDp2[0][0][0] = 0;\r\n    // memset(dp, 1, sizeof dp);\r\n    // memset(minDp, 1, sizeof minDp);\r\n\r\n    if (n == 1){\r\n        if (a[1] != 0)\r\n            cout << \"BitLGM\";\r\n        else cout << \"BitAryo\";\r\n        return 0;\r\n    }\r\n    if (n == 2){\r\n        for (int i = 0; i<=a[1]; i++){\r\n            for (int j = 0; j<=a[2]; j++){\r\n                    if (i == 0 && j == 0) continue;\r\n                    int Min = min({i,j});\r\n                    if (i != 0)\r\n                        dp[i][j][0] = min(dp[i][j][0], minDp1[0][j][0]);\r\n                    if (j != 0)\r\n                        dp[i][j][0] = min(dp[i][j][0], minDp1[i][0][0]);\r\n                    if (Min != 0)\r\n                        dp[i][j][0] = min(dp[i][j][0], minDp2[i-Min][j-Min][0]);\r\n                    dp[i][j][0] = 1-dp[i][j][0];\r\n                    minDp1[0][j][0] = min(minDp1[0][j][0] , dp[i][j][0]);\r\n                    minDp1[i][0][0] = min(minDp1[i][0][0] , dp[i][j][0]);\r\n                    minDp2[i-Min][j-Min][0] = min(minDp2[i-Min][j-Min][0], dp[i][j][0]);\r\n            }\r\n        } \r\n        if (dp[a[1]][a[2]][0] == 1){\r\n            cout << \"BitLGM\";\r\n        }\r\n        else cout << \"BitAryo\";\r\n        return 0;\r\n    }\r\n\r\n    for (int i = 0; i<=a[1]; i++){\r\n        for (int j = 0; j<=a[2]; j++){\r\n            for (int k = 0; k<=a[3]; k++){\r\n                if (i == 0 && j == 0 && k == 0) continue;\r\n                int Min = min({i,j,k});\r\n                if (i != 0)\r\n                    dp[i][j][k] = min(dp[i][j][k], minDp1[0][j][k]);\r\n                if (j != 0)\r\n                    dp[i][j][k] = min(dp[i][j][k], minDp1[i][0][k]);\r\n                if (k != 0)\r\n                    dp[i][j][k] = min(dp[i][j][k], minDp1[i][j][0]);\r\n                if (Min != 0)\r\n                    dp[i][j][k] = min(dp[i][j][k], minDp2[i-Min][j-Min][k-Min]);\r\n                dp[i][j][k] = 1-dp[i][j][k];\r\n                minDp1[0][j][k] = min(minDp1[0][j][k] , dp[i][j][k]);\r\n                minDp1[i][0][k] = min(minDp1[i][0][k] , dp[i][j][k]);\r\n                minDp1[i][j][0] = min(minDp1[i][j][0] , dp[i][j][k]);\r\n                minDp2[i-Min][j-Min][k-Min] = min(minDp2[i-Min][j-Min][k-Min], dp[i][j][k]);\r\n            }\r\n        }\r\n    } \r\n    // cout << dp[0][1][2];\r\n\r\n    if (dp[a[1]][a[2]][a[3]] == 1){\r\n        cout << \"BitLGM\";\r\n    }\r\n    else cout << \"BitAryo\";\r\n    return 0;\r\n}"
}