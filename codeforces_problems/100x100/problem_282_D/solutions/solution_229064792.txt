{
    "id": 229064792,
    "contestId": 282,
    "creationTimeSeconds": 1697893360,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 282,
        "index": "D",
        "name": "Yet Another Number Game",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "dp",
            "games"
        ]
    },
    "author": {
        "contestId": 282,
        "members": [
            {
                "handle": "anhnguyen"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1363188600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 35737600,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\n#define ii pair<int, int>\r\n#define fi first\r\n#define se second\r\nusing namespace std;\r\n\r\nconst int MAXN = 300 + 1;\r\nconst int MOD = 1e9 + 7;\r\n\r\nbool dp[MAXN][MAXN][MAXN];\r\n\r\nvoid chmin(bool x, bool k) { x = x | k; }\r\nvoid chmax(bool x, bool k) { x = x & k; }\r\n\r\nint main(int argc, char const *argv[]) {\r\n  cin.tie(0)->sync_with_stdio(0);\r\n  if (fopen(\"input.txt\", \"r\")) {\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n  }\r\n\r\n  int n;\r\n  cin >> n;\r\n  vector<int> a(n + 1);\r\n  // memset(dp, -1, sizeof dp);\r\n  int M = 0;\r\n  for (int i = 1; i <= n; i++) {\r\n    cin >> a[i];\r\n    M = max(M, a[i]);\r\n  }\r\n  vector<vector<bool>> mem01(MAXN + 1, vector<bool>(MAXN + 1, 1));\r\n  vector<vector<bool>> mem02(MAXN + 1, vector<bool>(MAXN + 1, 1));\r\n  vector<vector<bool>> mem12(MAXN + 1, vector<bool>(MAXN + 1, 1));\r\n  vector<vector<vector<bool>>> mem(\r\n      MAXN + 1, vector<vector<bool>>(MAXN + 1, vector<bool>(MAXN + 1, 1)));\r\n\r\n  sort(1 + a.begin(), a.end());\r\n  if (n == 1) {\r\n    cout << ((a[1]) ? \"BitLGM\\n\" : \"BitAryo\\n\");\r\n    return 0;\r\n  }\r\n\r\n  if (n == 2) {\r\n    for (int i = 0; i <= M; i++) {\r\n      for (int j = 0; j <= M; j++) {\r\n        for (int k = 0; k <= 0; k++) {\r\n          int Min = min({i, j});\r\n\r\n          int tmp = mem12[j][k];\r\n          dp[i][j][k] = max(dp[i][j][k], !tmp);\r\n\r\n          tmp = mem01[i][j];\r\n          dp[i][j][k] = max(dp[i][j][k], !tmp);\r\n\r\n          tmp = mem02[i][k];\r\n          dp[i][j][k] = max(dp[i][j][k], !tmp);\r\n\r\n          tmp = mem[i - Min][j - Min][k];\r\n          dp[i][j][k] = max(dp[i][j][k], !tmp);\r\n\r\n          vector<int> tt = {i, j};\r\n          sort(tt.begin(), tt.end());\r\n          int x = tt[0], y = tt[1], z = tt[2];\r\n          if (x == 0 && y == 0) {\r\n            dp[i][j][k] = 0;\r\n          }\r\n          if (x == 0 && y != 0) {\r\n            dp[i][j][k] = 1;\r\n          }\r\n\r\n          mem12[j][k] = min((int)mem12[j][k], (int)dp[i][j][k]);\r\n          mem02[i][k] = min((int)mem02[i][k], (int)dp[i][j][k]);\r\n          mem01[i][j] = min((int)mem01[i][j], (int)dp[i][j][k]);\r\n\r\n          mem[i - Min][j - Min][k] =\r\n              min((int)mem[i - Min][j - Min][k], (int)dp[i][j][k]);\r\n        }\r\n      }\r\n    }\r\n    cout << ((dp[a[1]][a[2]][0]) ? \"BitLGM\\n\" : \"BitAryo\\n\");\r\n    return 0;\r\n  }\r\n  //////////////////\r\n  /// n = 3\r\n\r\n  for (int i = 0; i <= a[1]; i++) {\r\n    for (int j = 0; j <= a[2]; j++) {\r\n      for (int k = 0; k <= a[3]; k++) {\r\n        int Min = min({i, j, k});\r\n\r\n        vector<int> tt = {i, j, k};\r\n        // sort\r\n        int x = tt[0], y = tt[1], z = tt[2];\r\n        if (x == 0 && y == 0) {\r\n          if (z == 0) {\r\n            dp[i][j][k] = 0;\r\n          } else {\r\n            dp[i][j][k] = 1;\r\n          }\r\n        } else if (z == y && x == 0 && y != 0) {\r\n          dp[i][j][k] = 1;\r\n        } else {\r\n          bool tmp = mem12[j][k];\r\n          chmax(dp[i][j][k], (bool)!tmp);\r\n\r\n          tmp = mem01[i][j];\r\n          chmax(dp[i][j][k], !tmp);\r\n\r\n          tmp = mem02[i][k];\r\n          chmax(dp[i][j][k], !tmp);\r\n\r\n          tmp = mem[i - Min][j - Min][k - Min];\r\n          chmax(dp[i][j][k], !tmp);\r\n        }\r\n\r\n        mem12[j][k] = (mem12[j][k] | dp[i][j][k]);\r\n        mem02[i][k] = mem02[i][k] | dp[i][j][k];\r\n        mem01[i][k] = (mem01[i][j] | dp[i][j][k]);\r\n\r\n        // mem[i - Min][j - Min][k - Min] =\r\n        chmin(mem[i - Min][j - Min][k - Min], dp[i][j][k]);\r\n      }\r\n    }\r\n  }\r\n  cout << ((dp[a[1]][a[2]][a[3]]) ? \"BitLGM\\n\" : \"BitAryo\\n\");\r\n  return 0;\r\n}\r\n"
}