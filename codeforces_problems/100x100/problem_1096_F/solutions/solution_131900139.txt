{
    "id": 131900139,
    "contestId": 1096,
    "creationTimeSeconds": 1634192311,
    "relativeTimeSeconds": 6691,
    "problem": {
        "contestId": 1096,
        "index": "F",
        "name": "Inversion Expectation",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1096,
        "members": [
            {
                "handle": "gupta_nitin"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1634185620
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 5120000,
    "source": "#include <bits/stdc++.h>\r\n\r\ntypedef long double ld;\r\n#define int long long\r\n\r\n#define gcd            __gcd\r\n#define endl           \"\\n\"\r\n#define setbits(x)     __builtin_popcountll(x)\r\n#define zrobits(x)     __builtin_ctzll(x)\r\n#define mod            998244353\r\n#define mod2           998244353\r\n#define maxe           *max_element\r\n#define mine           *min_element\r\n#define inf            1e18\r\n#define pb             push_back\r\n#define all(x)         x.begin(), x.end()\r\n#define f              first\r\n#define s              second\r\n#define lb             lower_bound\r\n#define ub             upper_bound\r\n#define ins            insert\r\n#define sz(x)          (int)(x).size()\r\n#define mk             make_pair\r\n#define deci(x, y)     fixed<<setprecision(y)<<x\r\n#define w(t)           int t; cin>>t; while(t--)\r\n#define nitin          ios_base::sync_with_stdio(false); cin.tie(nullptr)\r\n#define PI             3.141592653589793238\r\n#define mem0(x)        memset(x,0,sizeof x)\r\n#define mem1(x)        memset(x,-1,sizeof x)\r\n#define pr             pair<int,int>\r\n#define vi             vector<int>\r\n#define vvi            vector<vi>\r\n#define vpr            vector<pr>\r\nusing namespace std;\r\ntemplate<typename A, typename B> ostream& operator<<(ostream &os, const pair<A, B> &p) { return os << '(' << p.f << \", \" << p.second << ')'; }\r\ntemplate<typename T_container, typename T = typename enable_if<!is_same<T_container, string>::value, typename T_container::value_type>::type> ostream& operator<<(ostream &os, const T_container &v) { os << '{'; string sep; for (const T &x : v) os << sep << x, sep = \", \"; return os << '}'; }\r\n\r\nvoid dbg_out() { cerr << endl; }\r\ntemplate<typename Head, typename... Tail> void dbg_out(Head H, Tail... T) { cerr << ' ' << H; dbg_out(T...); }\r\n\r\n#ifdef NITIN\r\n#define dbg(...) cerr << \"(\" << #__VA_ARGS__ << \"):\", dbg_out(__VA_ARGS__)\r\n#else\r\n#define dbg(...)\r\n#endif\r\n\r\n\r\n//1-base\r\nclass fente {\r\npublic:\r\n    int n;\r\n    vector<int> tree;\r\n\r\n    void init(int _n) {\r\n        n = _n;\r\n        tree.resize(n + 5, 0);\r\n    }\r\n\r\n    void update(int idx, int inc) {\r\n        for (int i = idx; i <= n; i += i & -i)\r\n            tree[i] += inc;\r\n    }\r\n\r\n    int query(int idx) {\r\n        int sum = 0;\r\n        assert(idx<=n);\r\n        for (int i = idx; i >= 1; i -= i & -i)\r\n            sum += tree[i];\r\n        return sum;\r\n    }\r\n};\r\n\r\n\r\nint power(int x, int y, int p) {\r\n    int res = 1;\r\n    x = x % p;\r\n    while (y > 0) {\r\n        if (y & 1)\r\n            res = (res * x) % p;\r\n        y = y >> 1;\r\n        x = (x * x) % p;\r\n    }\r\n    return res;\r\n}\r\nint modi(int a, int m) {\r\n    return power(a, m - 2, m);\r\n}\r\n\r\nint fact[300001];\r\nint fact_inv[300001];\r\n\r\nvoid pre() {\r\n    fact[0] = 1;\r\n    fact_inv[0] = 1;\r\n    for (int i = 1; i <= 300000; i++) {\r\n        fact[i] = (fact[i - 1] * i) % mod;\r\n        fact_inv[i] = (fact_inv[i - 1] * modi(i, mod)) % mod;\r\n    }\r\n}\r\n\r\nint ncr(int n, int r) {\r\n    if (r > n)\r\n        return 0;\r\n    return (fact[n] * ((fact_inv[r] * fact_inv[n - r]) % mod)) % mod;\r\n}\r\nvoid solve() {\r\n    int n;\r\n    cin>>n;\r\n    int a[n];\r\n    int cnt[n];\r\n    memset(cnt,0,sizeof cnt);\r\n    for(int i=0;i<n;i++){\r\n        cin>>a[i];\r\n        if(a[i]==-1){\r\n            cnt[i]=1;\r\n        }else{\r\n            a[i]--;\r\n        }\r\n    }\r\n    for(int i=1;i<n;i++) cnt[i]+=cnt[i-1];\r\n    fente f;\r\n    f.init(n);\r\n    int fir=0;\r\n    int vis[n];\r\n    memset(vis,0,sizeof vis);\r\n    for(int i=n-1;i>=0;i--){\r\n        if(a[i]!=-1){\r\n            vis[a[i]]=1;\r\n            fir+=f.query(a[i]+1);\r\n            f.update(a[i]+1,1);\r\n        }\r\n    }\r\n\r\n\r\n    fente temp;\r\n    temp.init(n);\r\n    int tt=0;\r\n    for(int i=0;i<n;i++){\r\n        if(!vis[i]){\r\n            temp.update(i+1,1);\r\n        }\r\n    }\r\n    for(int i=0;i<n;i++){\r\n        if(cnt[i]==0){\r\n            tt+=temp.query(a[i]+1);\r\n            tt%=mod;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    int sec=0;\r\n    int m=cnt[n-1];\r\n    for(int j=2;j<=m;j++){\r\n        int p=j-1;\r\n        int val=sec*(p+1);\r\n        val%=mod;\r\n        int temp=fact[p]*p;\r\n        temp%=mod;\r\n        temp*=p+1;\r\n        temp%=mod;\r\n        temp*=modi(2,mod);\r\n        temp%=mod;\r\n        sec+=val;\r\n        sec%=mod;\r\n        sec+=temp;\r\n        sec%=mod;\r\n    }\r\n    fente nf;\r\n    nf.init(n);\r\n    int cur=0;\r\n    for(int j=0;j<n;j++){\r\n        if(a[j]==-1){\r\n            cur+=nf.query(n);\r\n            cur%=mod;\r\n        }else{\r\n            nf.update(a[j]+1,cnt[j]);\r\n        }\r\n    }\r\n    if(m!=0)\r\n        cur*=fact[m-1];\r\n    cur%=mod;\r\n    cur+=sec;\r\n    cur%=mod;\r\n    cur*=fact_inv[m];\r\n    cur%=mod;\r\n    cur+=fir;\r\n    cur%=mod;\r\n    cur+=tt;\r\n    cur%=mod;\r\n    cout<<cur<<endl;\r\n\r\n\r\n\r\n}\r\n\r\nint32_t main() {\r\n    nitin;\r\npre();\r\n    solve();\r\n}"
}