{
    "id": 131282026,
    "contestId": 1096,
    "creationTimeSeconds": 1633762081,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1096,
        "index": "F",
        "name": "Inversion Expectation",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1096,
        "members": [
            {
                "handle": "Dove1242"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546007700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 32,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 13414400,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define int long long\r\n\r\nusing namespace std;\r\n\r\nconst int maxn = 2e5 + 50;\r\nconst int mod = 998244353;\r\n\r\n\r\nint n;\r\nint a[maxn];\r\nint cnt[maxn];\r\nint l[maxn], r[maxn];\r\n\r\nint inv, ans;\r\nint t[maxn << 1];\r\ninline int qpow(int x, int y)\r\n{\r\n    register int res = 1;\r\n    while (y)\r\n    {\r\n//        printf(\"%d\\n\", x);\r\n        if (y & 1) res = res * x % mod;\r\n        x = x * x % mod;\r\n        y >>= 1;\r\n    }\r\n//    puts(\"-----\");\r\n    return res;\r\n}\r\n\r\ninline int lowbit(int x) { return (x & (-x)); } \r\n\r\ninline void add(int x, int y){\r\n    for (; x <= n; x += lowbit(x))\r\n      t[x] += y;\r\n}\r\n\r\ninline int query(int x)\r\n{\r\n    register int res = 0;\r\n    for (; x > 0; x -= lowbit(x))\r\n      res += t[x];\r\n    return res;\r\n}\r\n\r\nsigned main()\r\n{\r\n    scanf(\"%I64d\", &n);\r\n    for (register int i = 1; i <= n; ++i)\r\n    {\r\n        scanf(\"%I64d\", &a[i]);\r\n        if (a[i] != -1) ++cnt[a[i]];\r\n        \r\n        l[i] = l[i - 1] + (a[i] == -1);\r\n    }\r\n    \r\n    for (register int i = 1; i <= n; ++i) cnt[i] += cnt[i - 1];\r\n    \r\n    inv = qpow(4, mod - 2);  // cout << inv << endl;\r\n//    puts(\"----\");\r\n    ans = l[n] * (l[n] - 1) % mod * inv % mod; \r\n    \r\n    inv = qpow(l[n], mod - 2);\r\n    \r\n    for (register int i = n; i >= 1; --i)\r\n    {\r\n        r[i] = r[i + 1] + (a[i] == -1);\r\n        if (a[i] != -1)\r\n        {\r\n            ans = (ans + query(a[i])) % mod;\r\n            add(a[i], 1);\r\n            ans = (ans + ((r[i] * (a[i] - cnt[a[i]]) % mod) * inv % mod)) % mod;\r\n            ans = (ans + ((l[i] * (l[n] - a[i] + cnt[a[i]]) % mod) * inv % mod)) % mod;\r\n        }\r\n    }\r\n    return cout << ans << endl, 0;\r\n } "
}