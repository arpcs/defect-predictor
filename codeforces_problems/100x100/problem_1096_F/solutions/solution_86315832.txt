{
    "id": 86315832,
    "contestId": 1096,
    "creationTimeSeconds": 1594265457,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1096,
        "index": "F",
        "name": "Inversion Expectation",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1096,
        "members": [
            {
                "handle": "Monogon"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546007700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 312,
    "memoryConsumedBytes": 11366400,
    "source": "\r\n#include <bits/stdc++.h>\r\n\r\n#define ll long long\r\n#define sz(x) ((int) (x).size())\r\n#define all(x) (x).begin(), (x).end()\r\n#define fi first\r\n#define se second\r\n#define vi vector<int>\r\n#define pii pair<int, int>\r\n#define rep(i, a, b) for(int i = (a); i < (b); i++)\r\nusing namespace std;\r\ntemplate<typename T>\r\nusing minpq = priority_queue<T, vector<T>, greater<T>>;\r\n\r\nconst int N = 2e5 + 5, M = 998244353;\r\nint n, a[N];\r\nbool vis[N];\r\n\r\n// number of -1's so far, and ordered set of elements so far\r\n// (number of elements so far <= a[i]) + (number of -1's) * (probability of available number <= a[i])\r\n\r\n#include <bits/extc++.h>\r\nusing namespace __gnu_pbds;\r\ntypedef tree<int, null_type, greater<int>, rb_tree_tag, tree_order_statistics_node_update> ord;\r\n\r\nll powmod(ll a, ll b) {\r\n    ll ans = 1;\r\n    while(b > 0) {\r\n        if(b & 1) {\r\n            ans = (ans * a) % M;\r\n        }\r\n        a = (a * a) % M;\r\n        b /= 2;\r\n    }\r\n    return ans;\r\n}\r\nll modinv(ll a) {\r\n    return powmod(a, M - 2);\r\n}\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cin >> n;\r\n    ll tot = 0;\r\n    rep(i, 1, n + 1) {\r\n        cin >> a[i];\r\n        if(a[i] == -1) tot++;\r\n        else vis[a[i]] = true;\r\n    }\r\n    vi ve;\r\n    rep(i, 1, n + 1) {\r\n        if(!vis[i]) {\r\n            ve.push_back(i);\r\n        }\r\n    }\r\n    ll cnt = 0;\r\n    ord s;\r\n    ll ans = 0;\r\n    rep(i, 1, n + 1) {\r\n        if(a[i] == -1) {\r\n            ans = (ans + cnt * modinv(2)) % M;\r\n            cnt++;\r\n        }else {\r\n            ll idx = lower_bound(all(ve), a[i]) - ve.begin();\r\n            ans = (ans + 1LL * (tot - cnt) * idx * modinv(tot)) % M;\r\n            ans = (ans + 1LL * cnt * (tot - idx) * modinv(tot)) % M;\r\n            ans = (ans + s.order_of_key(a[i])) % M;\r\n            s.insert(a[i]);\r\n        }\r\n    }\r\n    ans = (ans + M) % M;\r\n    cout << ans << '\\n';\r\n}"
}