{
    "id": 209823591,
    "contestId": 1096,
    "creationTimeSeconds": 1686892469,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1096,
        "index": "F",
        "name": "Inversion Expectation",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1096,
        "members": [
            {
                "handle": "wanjunjie"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546007700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 19,
    "timeConsumedMillis": 451,
    "memoryConsumedBytes": 24064000,
    "source": "// LUOGU_RID: 112774861\n#include <bits/stdc++.h>\n#define mod 998244353\n#define int long long\nusing namespace std;\nint n, a[1000005], cnt, ans, t[1000005], sum_, sumsum[1000005];\ninline int qp(register int a, register int b)\n{\n    register int c = 1;\n    while (b)\n    {\n        if (b & 1)\n        {\n            c *= a;\n            c %= mod;\n        }\n        a *= a;\n        a %= mod;\n        b >>= 1;\n    }\n    return c;\n}\ninline void add(int p, int q) {\n    ans += p * qp(q,mod - 2);\n    ans %= mod;\n}\nvoid put()\n{\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tcout << t[i] << \" \";\n\t}\n\tcout << endl;\n}\nint lowbit(int x)\n{\n\treturn (x & -x);\n}\nvoid addd(int x)\n{\n\twhile (x <= n)\n\t{\n\t\tt[x]++;\n\t\tx += lowbit(x);\n\t}\n}\nint sum(int x)\n{\n\tint ans = 0;\n\twhile (x)\n\t{\n\t\tans += t[x];\n\t\tx -= lowbit(x);\n\t}\n\treturn ans;\n}\nint fsum(int x) {\n\treturn sum(n) - sum(x);\n}\nsigned main()\n{\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tcin >> a[i];\n\t\tif (a[i] == -1)\n        {\n            sum_++;\n        }\n        if (a[i] + 1)\n        {\n            sumsum[a[i]]++;\n        }\n\t}\n\tfor (int i = 1; i <= n; i++)\n    {\n        sumsum[i] += sumsum[i - 1];\n//        cout << sumsum[i] << \" \";\n    }\n//    cout << endl;\n\tfor (int i = 1; i <= n; i++)\n    {\n\t\tif (a[i] == -1)\n        {\n            cnt++;\n            continue;\n        }\n        add(fsum(a[i]),1);\n//        cout << ans << \"\\t\";\n        add(cnt * (sum_ - (a[i] - sumsum[a[i]])),sum_);\n//        cout << ans << \"\\t\";\n        add((sum_ - cnt) * (a[i] - sumsum[a[i]]),sum_);\n//        cout << ans << \"\\t\" << a[i] - sumsum[a[i]] << \"\\t\" << sum_ << endl;\n        addd(a[i]);\n    }\n    add(sum_ * (sum_ - 1), 4);\n    if (sum_ == n)\n    {\n        ans = 0;\n        add(n * (n - 1), 4);\n    }\n    cout << (ans + mod) % mod;\n\treturn 0;\n}\n"
}