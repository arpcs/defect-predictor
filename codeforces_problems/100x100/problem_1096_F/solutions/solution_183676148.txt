{
    "id": 183676148,
    "contestId": 1096,
    "creationTimeSeconds": 1670041776,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1096,
        "index": "F",
        "name": "Inversion Expectation",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1096,
        "members": [
            {
                "handle": "Mine_King"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546007700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 2457600,
    "source": "// LUOGU_RID: 96384267\n//Think twice,code once.\r\n#include<cstdio>\r\n#include<string>\r\n#include<cstring>\r\n#include<iostream>\r\n#include<algorithm>\r\nusing namespace std;\r\n\r\nconst int mod=998244353;\r\n\r\nint n,a[100005],b[100005],m,c[100005];\r\nint sum1,sum2,ans,fac[100005],dp[100005];\r\nstruct BIT {\r\n\tint w[100005];\r\n\tvoid update(int p) {\r\n\t\tfor (;p<100005;p+=p&-p) w[p]++;\r\n\t\treturn ;\r\n\t}\r\n\tint query(int p) {\r\n\t\tint res=0;\r\n\t\tfor (;p>=1;p-=p&-p) res+=w[p];\r\n\t\treturn res;\r\n\t}\r\n}tr;\r\n\r\nint power(int a,int b) {\r\n\tint ans=1;\r\n\twhile (b) {\r\n\t\tif (b&1) ans=(long long)ans*a%mod;\r\n\t\ta=(long long)a*a%mod;\r\n\t\tb>>=1;\r\n\t}\r\n\treturn ans%mod;\r\n}\r\n\r\nint main() {\r\n\tscanf(\"%d\",&n);\r\n\tfor (int i=1;i<=n;i++) {\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\tif (a[i]!=-1) b[a[i]]=1;\r\n\t}\r\n\tfor (int i=1;i<=n;i++)\r\n\t\tif (!b[i]) c[++m]=i;\r\n\tfac[0]=1;\r\n\tfor (int i=1;i<=n;i++)\r\n\t\tfac[i]=(long long)fac[i-1]*i%mod;\r\n\tfor (int i=1;i<=n;i++)\r\n\t\tif (a[i]!=-1) {\r\n\t\t\tif (a[i]<c[1]) continue;\r\n\t\t\tint pos=lower_bound(c+1,c+m+1,a[i])-c-1;\r\n\t\t\tsum2=(sum2+pos)%mod;\r\n\t\t}\r\n\tfor (int i=n;i>=1;i--)\r\n\t\tif (a[i]!=-1) {\r\n\t\t\tif (a[i]<c[m]) {\r\n\t\t\t\tint pos=lower_bound(c+1,c+m+1,a[i])-c;\r\n\t\t\t\tsum1=(sum1+m-pos+1)%mod;\r\n\t\t\t}\r\n\t\t\tif (a[i]>c[1]) {\r\n\t\t\t\tint pos=lower_bound(c+1,c+m+1,a[i])-c-1;\r\n\t\t\t\tsum2=(sum2-pos+mod)%mod;\r\n\t\t\t}\r\n\t\t} else ans=(ans+(long long)(sum1+sum2)%mod*fac[m-1]%mod)%mod;\r\n\tdp[1]=0;\r\n\tfor (int i=2;i<=m;i++)\r\n\t\tdp[i]=((long long)dp[i-1]*i%mod+(long long)i*(i-1)/2%mod*fac[i-1]%mod)%mod;\r\n\tans=(ans+dp[m])%mod;\r\n\tint ni=0;\r\n\tfor (int i=n;i>=1;i--)\r\n\t\tif (a[i]!=-1) {\r\n\t\t\tni=(ni+tr.query(a[i]))%mod;\r\n\t\t\ttr.update(a[i]);\r\n\t\t}\r\n\tprintf(\"%lld\\n\",((long long)ans*power(fac[m],mod-2)%mod+ni)%mod);\r\n\treturn 0;\r\n}\r\n"
}