{
    "id": 129030029,
    "contestId": 1096,
    "creationTimeSeconds": 1631841469,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1096,
        "index": "F",
        "name": "Inversion Expectation",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1096,
        "members": [
            {
                "handle": "luogu_bot5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546007700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 32,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 7782400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int cmd = 998244353;\r\nconst int N = 2e5 + 5;\r\nint n, a[N], cnt, fac[N], ifac[N], t1[N], t2[N];\r\nvoid add1(int x) {for (; x <= n; x += x & -x) ++t1[x];}\r\nint ask1(int x) {int res = 0; for (; x; x -= x & -x) res += t1[x]; return res;}\r\nvoid add2(int x) {for (; x; x -= x & -x) ++t2[x];}\r\nint ask2(int x) {int res = 0; for (; x <= n; x += x & -x) res += t2[x]; return res;}\r\nint fpow(int a, int b) {\r\n\tint res = 1;\r\n\tfor (; b; b >>= 1, a = 1ll * a * a % cmd)\r\n\t\tif (b & 1) res = 1ll * res * a % cmd;\r\n\treturn res;\r\n}\r\nint main() {\r\n\tscanf(\"%d\", &n);\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tscanf(\"%d\", &a[i]);\r\n\t\tcnt += a[i] == -1;\r\n\t}\r\n\tfac[0] = ifac[0] = 1;\r\n\tfor (int i = 1; i <= n; i++) fac[i] = 1ll * fac[i - 1] * i % cmd;\r\n\tifac[n] = fpow(fac[n], cmd - 2);\r\n\tfor (int i = n - 1; i >= 1; i--) ifac[i] = 1ll * ifac[i + 1] * (i + 1) % cmd;\r\n\tint ans = 0, invc = cnt ? fpow(cnt, cmd - 2) : 0;\r\n\tif (cnt > 1) ans = 1ll * fac[cnt] * ifac[2] % cmd * ifac[cnt - 2] % cmd * ifac[2] % cmd;\r\n\tfor (int i = n; i >= 1; i--)\r\n\tif (a[i] > 0) {\r\n\t\tint ad = ask1(a[i]);\r\n\t\tans += ad;\r\n\t\tif (ans >= cmd) ans -= cmd;\r\n\t\tadd1(a[i]); add2(a[i]);\r\n\t}\r\n\tint cur = 0;\r\n\tfor (int i = n; i >= 1; i--)\r\n\tif (a[i] > 0) {\r\n\t\tans += 1ll * cur * (a[i] - ask1(a[i])) % cmd * invc % cmd;\r\n\t\tif (ans >= cmd) ans -= cmd;\r\n\t} else cur++;\r\n\tcur = 0;\r\n\tfor (int i = 1; i <= n; i++)\r\n\tif (a[i] > 0) {\r\n\t\tans += 1ll * cur * (n - a[i] - ask2(a[i] + 1)) % cmd * invc % cmd;\r\n\t\tif (ans >= cmd) ans -= cmd;\r\n\t} else ++cur;\r\n\tprintf(\"%d\", ans);\r\n\treturn 0;\r\n}"
}