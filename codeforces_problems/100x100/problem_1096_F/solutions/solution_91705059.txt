{
    "id": 91705059,
    "contestId": 1096,
    "creationTimeSeconds": 1599126129,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1096,
        "index": "F",
        "name": "Inversion Expectation",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1096,
        "members": [
            {
                "handle": "quocnguyen"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546007700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 358,
    "memoryConsumedBytes": 2457600,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define fi first\r\n#define se second\r\n#define mp make_pair\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define ar array\r\n\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef pair<int, int> ii;\r\n\r\nconst int maxn = 2e5 + 5, mod = 998244353;\r\n\r\nint power(int a, int b)\r\n{\r\n  if(b == 0) return 1;\r\n  int res = power(a, b / 2);\r\n  if(b & 1)return 1ll * res * res % mod * a % mod;\r\n  return 1ll * res * res % mod;\r\n}\r\n\r\nint inv(int a)\r\n{\r\n  return power(a, mod - 2);\r\n}\r\n\r\nint N, p[maxn], cnt = 0, sum[maxn];\r\nint bit[maxn];\r\n\r\nvoid upd(int i, int v)\r\n{\r\n  for(; i < maxn; i += i & -i)\r\n    bit[i] += v;\r\n}\r\n\r\nint query(int i)\r\n{\r\n  int res = 0;\r\n  for(; i; i -= i & -i)\r\n    res += bit[i];\r\n  return res;\r\n}\r\n\r\nsigned main(void)\r\n{\r\n  ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n  #ifdef LOCAL\r\n    freopen(\"A.INP\", \"r\", stdin);\r\n    freopen(\"A.OUT\", \"w\", stdout);\r\n  #endif // LOCAL\r\n  cin >> N;\r\n  for(int i = 1; i <= N; ++i){\r\n    cin >> p[i];\r\n    if(p[i] == -1){\r\n      ++cnt;\r\n    }\r\n    if(p[i] != -1){\r\n      sum[p[i]] = 1;\r\n    }\r\n  }\r\n  for(int i = 1; i <= N; ++i){\r\n    if(sum[i]) sum[i] = 0;\r\n    else sum[i] = 1;\r\n  }\r\n  for(int i = 1; i <= N; ++i){\r\n    sum[i] += sum[i - 1];\r\n  }\r\n  int res = 1ll * cnt * (cnt - 1) % mod * inv(4) % mod;\r\n  int le = 0, ri = 0;\r\n  for(int i = 1; i <= N; ++i){\r\n    if(p[i] == -1){\r\n      ++le;\r\n    }\r\n    else{\r\n      res += 1ll * le * (sum[N] - sum[p[i]]) % mod * inv(cnt) % mod;\r\n    }\r\n  }\r\n  for(int i = N; i >= 1; --i){\r\n    if(p[i] == -1){\r\n      ++ri;\r\n    }\r\n    else{\r\n      res += 1ll * ri * sum[p[i]] % mod * inv(cnt) % mod;\r\n    }\r\n  }\r\n  for(int i = N; i >= 1; --i){\r\n    if(p[i] != -1){\r\n      res = (res + query(p[i])) % mod;\r\n      upd(p[i], 1);\r\n    }\r\n  }\r\n  cout << res;\r\n}\r\n"
}