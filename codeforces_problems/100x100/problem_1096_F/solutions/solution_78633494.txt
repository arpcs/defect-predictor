{
    "id": 78633494,
    "contestId": 1096,
    "creationTimeSeconds": 1588319854,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1096,
        "index": "F",
        "name": "Inversion Expectation",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1096,
        "members": [
            {
                "handle": "UZMath"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546007700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "include<bits/stdc++.h>\r\n#include <iostream>\r\n#include <iterator>\r\n#include <map>\r\n\r\nusing namespace std;\r\ntypedef long long ll ;\r\nconst int MAXN = 2e5 + 9;\r\n\r\nint a[MAXN];\r\nint b[MAXN];\r\n\r\nll s = 0;\r\nll p = 998244353;\r\nll fct[MAXN];\r\nll infct[MAXN];\r\nll modpow(ll a, ll b){\r\n    if(b == 0) return 1;\r\n    ll c = modpow(a, b/2);\r\n    c = (c * c) % p;\r\n    if(b & 1)\r\n        c = (c * a) % p;\r\n    return c;\r\n}\r\nvoid full(){\r\n    fct[0] = 1;\r\n    for(int i=1; i < MAXN; i ++){\r\n        fct[i] = (fct[i-1] * i) % p;\r\n    }\r\n    fct[MAXN - 1] = modpow(fct[MAXN-1], p-2);\r\n    for(int i=MAXN-2; i >= 0; i --){\r\n        infct[i] = (infct[i + 1] * (i + 1)) % p;\r\n    }\r\n    return ;\r\n}\r\n\r\nll MergeSort(int l, int r){\r\n  int i,j,m,k;\r\n  if(l==r) return 0;\r\n  m=(l+r)/2;\r\n  MergeSort(l,m);\r\n  MergeSort(m+1,r);\r\n  k=l; i=l; j=m+1;\r\n  while(k<=r)\r\n      if(i<=m && (j>r || a[i]<a[j])){\r\n          b[k++]=a[i++];\r\n      }\r\n      else{\r\n          b[k++]=a[j++];\r\n          s += m - i + 1 ;\r\n      }\r\n      for(i=l; i<=r; i++) a[i]=b[i];\r\n    return s;\r\n}\r\nmap<int, int>mp;\r\nint main()\r\n{\r\n    int n , x = 0;\r\n    cin >> n;\r\n    full();\r\n    ll Q = 1;\r\n    int c[n];\r\n    for(int i=0; i < n; i ++){\r\n        cin >> c[i];\r\n        if(c[i] > 0){\r\n            a[x++] = c[i];\r\n        }\r\n    }\r\n    if(x)\r\n    MergeSort(0, x -1);\r\n    for(int i=0; i < x; i ++){\r\n        mp.insert({a[i] , i});\r\n    }\r\n   \r\n    Q = fct[n - x];\r\n    if(n==x) Q = 0;\r\n    ll P =( s * fct[n-x]) % p;\r\n    /// int id = 0;\r\n    P += ((((fct[n-x] * (((n-x) * (n-x-1)) % p)))%p) * modpow(4, p-2)) % p;\r\n    P %= p;\r\n  //  cout << \"P = \" << P << \" Q = \" <<Q << endl;\r\n    int p1 = 0;   /// srfcfchhbnazwsxecd\r\n    int p2 = 0;   /// keyin kelgan -1 lar soni\r\n    int p3 = 0;   /// nechta -1 c[i] dan katta\r\n    int p4 = 0;   /// nechta si kichkina\r\n    for(int i=0; i < n; i ++){\r\n        if(c[i] > 0){\r\n            p2 = n - x - p1;\r\n            p4 = c[i]-1-mp[c[i]];\r\n            p3 = n - x - p4;\r\n            int t = n - x - mp[c[i]];\r\n            P = (P + ((p3 * fct[n-x-1])%p) * p1)%p;\r\n            P = (P + ((p4 * fct[n-x-1])%p) * p2)%p;\r\n       }\r\n       else{\r\n            p1 ++;\r\n       }\r\n    }\r\n   //cout << endl <<  P << \" \" <<Q << endl;\r\n    cout <<  (P * modpow(Q, p-2) ) % p << endl;\r\n    //cout << (499122183ll * 6) % p << endl;\r\n\r\n    \r\n}\r\n"
}