{
    "id": 227967066,
    "contestId": 1096,
    "creationTimeSeconds": 1697163892,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1096,
        "index": "F",
        "name": "Inversion Expectation",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1096,
        "members": [
            {
                "handle": "Alephia"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546007700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 32,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 7987200,
    "source": "#include<bits/stdc++.h>\r\n#include <cmath>\r\n#include <cstdint>\r\nusing namespace std;\r\n#define ll long long\r\n#define endl '\\n'\r\nconst ll N=2e5+10;\r\nconst ll mod=998244353;\r\nint n,m;\r\nll mas[N];\r\nll tr[N];\r\nll ksm(ll x,ll y)\r\n{\r\n    ll ans=1;\r\n    while(y)\r\n    {\r\n        if(y&1) ans=ans*x%mod;\r\n        x=x*x%mod;\r\n        y>>=1;\r\n    }\r\n    return ans;\r\n}\r\nll inv(ll x)\r\n{\r\n    return ksm(x,mod-2);\r\n}\r\nstruct Tree\r\n{\r\n    #define low(x) x&(-x)\r\n    void add(ll x,ll y)\r\n    {\r\n        while(x<N)\r\n        {\r\n            tr[x]+=y;\r\n            x+=low(x);\r\n        }\r\n    }\r\n    ll sum(ll x)\r\n    {\r\n        ll ans=0;\r\n        while(x)\r\n        {\r\n            ans=(ans+tr[x])%mod;\r\n            x-=low(x);\r\n        }\r\n        return ans;\r\n    }\r\n    ll gt(ll x)\r\n    {\r\n        return ((sum(n)-sum(x))%mod+mod)%mod;\r\n    }\r\n}T;\r\nll up[N],vis[N],pre[N];\r\nll cnt=0;\r\nvoid solve()\r\n{\r\n    cin>>n;\r\n    for(int i=1;i<=n;++i)\r\n    {\r\n        cin>>mas[i];\r\n        pre[i]=pre[i-1];\r\n        if(mas[i]==-1)\r\n        {\r\n            cnt++;\r\n            pre[i]++;\r\n            continue;\r\n        }\r\n        vis[mas[i]]=1;\r\n    }\r\n    for(int i=n;i;--i)\r\n    {\r\n        up[i]+=up[i+1];\r\n        if(!vis[i]) up[i-1]++;\r\n    }\r\n    ll ans=cnt*(cnt-1)%mod*inv(4)%mod;\r\n    for(int i=1;i<=n;++i)\r\n    {\r\n        if(mas[i]==-1) continue;\r\n        ans=(ans+T.gt(mas[i]))%mod;\r\n        T.add(mas[i],1);\r\n    }\r\n\r\n    ll invn=inv(cnt);\r\n    for(int i=1;i<=n;++i)\r\n    {\r\n        if(mas[i]==-1) continue;\r\n        ans=(ans+up[mas[i]]*pre[i]%mod*invn%mod)%mod;\r\n        ans=(ans+(cnt-up[mas[i]])*(cnt-pre[i])%mod*(invn)%mod)%mod;\r\n    }\r\n    cout<<ans<<endl;\r\n\r\n}\r\nsigned main() {\r\n    // cout << fixed << setprecision(10);\r\n    ios::sync_with_stdio(false); cin.tie(nullptr);\r\n    // int T; cin >> T; while (T--)\r\n    solve();\r\n    return 0;\r\n}\r\n"
}