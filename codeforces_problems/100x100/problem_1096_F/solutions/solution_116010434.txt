{
    "id": 116010434,
    "contestId": 1096,
    "creationTimeSeconds": 1620812251,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1096,
        "index": "F",
        "name": "Inversion Expectation",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1096,
        "members": [
            {
                "handle": "albatt_rs"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546007700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 11878400,
    "source": "#include<bits/stdc++.h>\n\nusing namespace std;\n\nconst int MOD = 998244353;\nconst int N = 1009;\n\nint mul(int a, int b){\n\treturn int(a * 1LL * b % MOD);\n}\n\nvoid upd(int &a, int b){\n\ta += b;\n\twhile(a >= MOD) a -= MOD;\n\twhile(a < 0) a += MOD;\n}\n\nint bp(int a, int n){\n\tint res = 1;\n\tfor(; n > 0; n >>= 1){\n\t\tif(n & 1) res = mul(res, a);\n\t\ta = mul(a, a);\n\t}\n\t\n\treturn res;\n}\n\nint inv(int a){\n\tint ia = bp(a, MOD - 2);\n\tassert(mul(a, ia) == 1);\n\treturn ia;\n}\n\nint n, m;\nint a[N][N];\nint dp[N][N];\nint si, sj;\n\nint main() {\n\t//freopen(\"input.txt\", \"r\", stdin);\n\tscanf(\"%d %d\", &n, &m);\n\tfor(int i = 0; i < n; ++i) \n\t\tfor(int j = 0; j < m; ++j)\n\t\t\tscanf(\"%d\", &a[i][j]);\n\tscanf(\"%d %d\", &si, &sj);\n\t--si, --sj;\n\t\n\tvector <pair<int, pair<int, int> > > v;\n\tfor(int i = 0; i < n; ++i)\n\t\tfor(int j = 0; j < m; ++j)\n\t\t\tv.push_back(make_pair(a[i][j], make_pair(i, j)));\n\n\tsort(v.begin(), v.end());\n\tint l = 0;\n\tint sumDP = 0, sumX = 0, sumY = 0, sumX2 = 0, sumY2 = 0;\n\twhile(l < int(v.size())){\n\t\tint r = l;\n\t\twhile(r < int(v.size()) && v[r].first == v[l].first) ++r;\n\t\t\n\t\tint il = -1;\n\t\tif(l != 0) il = inv(l);\n\t\tfor(int i = l; i < r; ++i){\n\t\t\tint x = v[i].second.first, y = v[i].second.second;\n\t\t\tif(il == -1){\n\t\t\t\tdp[x][y] = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tupd(dp[x][y], mul(sumDP, il));\n\t\t\t\n\t\t\tupd(dp[x][y], mul(x, x));\n\t\t\tupd(dp[x][y], mul(y, y));\n\t\t\t\n\t\t\tupd(dp[x][y], mul(sumX2, il));\n\t\t\tupd(dp[x][y], mul(sumY2, il));\n\t\t\t\n\t\t\tupd(dp[x][y], mul(mul(-x - x, sumX), il));\n\t\t\tupd(dp[x][y], mul(mul(-y - y, sumY), il));\t\t\n\t\t}\n\t\t\n\t\tfor(int i = l; i < r; ++i){\n\t\t\tint x = v[i].second.first, y = v[i].second.second;\n\t\t\t\n\t\t\tupd(sumDP, dp[x][y]);\n\t\t\t\n\t\t\tupd(sumX2, mul(x, x));\n\t\t\tupd(sumY2, mul(y, y));\n\t\t\t\n\t\t\tupd(sumX, x);\n\t\t\tupd(sumY, y);\n\t\t}\n\t\t\n\t\tl = r;\n\t\t\n\t}\n\t\n\tprintf(\"%d\\n\", dp[si][sj]);\n\treturn 0;\n}\n\n/*\nexpected value for the current element can be calculated as follows: \n\u2211 i=1 to k((ev[i]+(R\u2212r[i])^2+(C\u2212c[i])^2)/ k, where ev[i] is the expected value of the i-th element. \n*/"
}