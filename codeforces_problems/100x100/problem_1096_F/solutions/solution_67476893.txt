{
    "id": 67476893,
    "contestId": 1096,
    "creationTimeSeconds": 1577111966,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1096,
        "index": "F",
        "name": "Inversion Expectation",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1096,
        "members": [
            {
                "handle": "code_cola"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546007700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 32,
    "timeConsumedMillis": 234,
    "memoryConsumedBytes": 2457600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int M = 2e5+5;\r\n\r\nint n, a[M], mod = 998244353;\r\n\r\nint mul(int x, int y){\r\n    return 1ll * x * y % mod;\r\n}\r\nvoid inc(int&x, int y){\r\n    x += y;\r\n    if(x >= mod) x -= mod;\r\n}\r\nint pow(int p, int q){\r\n    int r = 1;\r\n    while(q){\r\n        if(q&1) r = mul(r, p);\r\n        p = mul(p, p);\r\n        q >>= 1;\r\n    }\r\n    return r;\r\n}\r\nint inv(int x){\r\n    return pow(x, mod-2);\r\n}\r\n\r\nint vis[M];\r\n\r\nnamespace BIT{\r\n    int x[M];\r\n    void clear(){\r\n        fill(x, x + n + 1, 0);\r\n    }\r\n    void add(int p){\r\n        for(int i = p; i > 0; i -= i & -i) x[i] ++;\r\n    }\r\n    int sum(int p){\r\n        int r = 0; for(int i = p; i <= n; i += i & -i) r += x[i]; return r;\r\n    }\r\n}\r\n\r\nint main(){\r\n    scanf(\"%d\", &n);\r\n    int m = 0;\r\n    for(int i = 1;i<=n;i++){\r\n        scanf(\"%d\", &a[i]);\r\n        if(a[i] != -1) vis[a[i]] = 1;\r\n        else m ++;\r\n    }\r\n    int ans = mul(mul(m, m-1), inv(4));\r\n    if(m){\r\n        int num = 0;\r\n        for(int i = 1; i <= n; i++){\r\n            if(!vis[i]) BIT::add(i);\r\n        }\r\n        for(int i = 1; i <= n; i ++){\r\n            if(a[i] == -1) num ++;\r\n            else{\r\n                inc(ans, mul(mul(num, inv(m)), BIT::sum(a[i])));\r\n            }\r\n        }\r\n        BIT::clear();\r\n        num = 0;\r\n        for(int i = 1; i <= n; i ++){\r\n            if(!vis[i]) BIT::add(n+1-i);\r\n        }\r\n        for(int i = n; i > 0; i --){\r\n            if(a[i] == -1) num ++;\r\n            else{\r\n                inc(ans, mul(mul(num, inv(m)), BIT::sum(n+1-a[i])));\r\n            }\r\n        }\r\n        BIT::clear();\r\n    }\r\n    if(m < n){\r\n        for(int i = 1; i <= n; i ++){\r\n            if(a[i] != -1){\r\n                inc(ans, BIT::sum(a[i]));\r\n                BIT::add(a[i]);\r\n            }\r\n        }\r\n    }\r\n    printf(\"%d\\n\", ans);\r\n}\r\n"
}