{
    "id": 227622273,
    "contestId": 1426,
    "creationTimeSeconds": 1697001425,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1426,
        "index": "C",
        "name": "Increase and Copy",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "binary search",
            "constructive algorithms",
            "math"
        ]
    },
    "author": {
        "contestId": 1426,
        "members": [
            {
                "handle": "RainSure"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601280300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 48947200,
    "source": "// The code snippet of Rain Sure\r\n#pragma GCC optimize(2)\r\n#pragma GCC optimize(3)\r\n#include<iostream>\r\n#include<cstring>\r\n#include<algorithm>\r\n#include<vector>\r\n#include<queue>\r\n#include<set>\r\n#include<map>\r\n#include<unordered_map>\r\n#include<unordered_set>\r\n#include<tuple>\r\n#include<array>\r\n#include<cmath>\r\n#include<functional>\r\n#include<cassert>\r\n#include<random>\r\n#include<chrono>\r\n#include<numeric>\r\n#include<iomanip>\r\n#include<bitset>\r\n#include<sstream>\r\nusing namespace std;\r\n#define IOS ios::sync_with_stdio(false); cin.tie(0);cout.tie(0);\r\n#define x first\r\n#define y second\r\n#define int long long\r\n#define popcount __builtin_popcount\r\nconstexpr int inf = 1e9 + 10;\r\nconstexpr int maxn = 100010, M = 2000010;\r\nconstexpr int mod = 1e9 + 7;\r\nconstexpr double eps = 1e-8;\r\ntypedef pair<int,int> PII;\r\ntypedef pair<double,double> PDD;\r\ntypedef long long LL;\r\ntypedef unsigned long long ULL;\r\ntypedef long double LD;\r\nint h[maxn], e[M], w[M], ne[M], idx;\r\nint dx[4] = {-1, 0, 1, 0}, dy[4] = {0, -1, 0, 1};\r\nvoid add(int a, int b, int c)\r\n{\r\n    e[idx] = b, w[idx] = c, ne[idx] = h[a], h[a] = idx ++;\r\n}\r\nvoid add(int a, int b)\r\n{\r\n    e[idx] = b, ne[idx] = h[a], h[a] = idx ++;\r\n}\r\nint qmi(int a,int b){int res=1%mod; a%=mod;while(b) { if(b&1) res=res*a%mod; a=a*a%mod;b>>=1;}return res;}\r\n// head\r\nvoid solve()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    if(n == 1) {\r\n        cout << 0 << \"\\n\";\r\n        return;\r\n    }\r\n    auto check([&](int mid) {\r\n        int k = mid / 2;\r\n        for(int i = max(0ll, k); i <= min(k + 5, mid); i ++) {\r\n            int v = (i + 1) * (mid - i + 1);\r\n            if(v >= n) return true;\r\n        }\r\n        return false;\r\n    });\r\n    int l = 1, r = n;\r\n    while(l < r) {\r\n        int mid = (l + r) >> 1;\r\n        if(check(mid)) r = mid;\r\n        else l = mid + 1;\r\n    }\r\n    cout << r << \"\\n\";\r\n}\r\nsigned main()\r\n{\r\n    IOS;\r\n    int _ = 1; cin >> _;\r\n    while(_ -- ) {\r\n       solve();\r\n    }\r\n    return 0;\r\n}"
}