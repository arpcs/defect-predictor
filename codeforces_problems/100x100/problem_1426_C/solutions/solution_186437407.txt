{
    "id": 186437407,
    "contestId": 1426,
    "creationTimeSeconds": 1671782569,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1426,
        "index": "C",
        "name": "Increase and Copy",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "binary search",
            "constructive algorithms",
            "math"
        ]
    },
    "author": {
        "contestId": 1426,
        "members": [
            {
                "handle": "BlackMamba08"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601280300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n     \r\nusing namespace std;\r\n     \r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef unsigned long long ull;\r\ntypedef pair <int, int> pii;\r\ntypedef pair <ll, ll> pll;\r\ntypedef pair <string, string> pss;\r\ntypedef vector <int> vi;\r\ntypedef vector <vi> vvi;\r\ntypedef vector<pii> vpii;\r\ntypedef vector<ll> vll;\r\ntypedef vector<vll> vvll;\r\ntypedef vector<pll> vpll;\r\n     \r\nconst ll INF=1e9+7 ;\r\n     \r\n#define all(X) (X).begin(), (X).end()\r\n#define allr(X) (X).rbegin(), (X).rend()\r\n#define sz(X) (int)X.size()\r\n#define setbits(X)(long long) __builtin_popcountll(X)\r\n#define fastio() ios_base::sync_with_stdio(false); cin.tie(NULL);\r\n \r\n#define fi first\r\n#define se second\r\n#define pb push_back\r\n#define maxxbysec [](const auto& lhs, const auto& rhs) { return lhs.second < rhs.second; }\r\n    \r\nbool sortbysec(const pair<auto,auto> &a,\r\n              const pair<auto,auto> &b)\r\n{   \r\n    return (a.second < b.second);\r\n}   \r\n    \r\nvoid solve();\r\nvoid factorial();\r\n    \r\nint main()\r\n{   \r\n    fastio();\r\n    \r\n    long long t=1;\r\n    cin>>t;\r\n\r\n    while(t--){\r\n        solve();\r\n    }\r\n    \r\n    return 0;\r\n}\r\n\r\nbool f(ll n ,ll k ){\r\n    \r\n    long double D = k*k-4*n ;\r\n    if( D < 0 )\r\n        return false ;\r\n    long double alpha = (k-sqrtl(D))/2 , beta = (k+sqrtl(D))/2 ;\r\n    if( (long long)alpha == (long long)beta)\r\n        return false ;\r\n    return true ;\r\n\r\n}\r\n\r\nvoid solve(){\r\n    \r\n    ll n ;\r\n    cin >> n ;\r\n\r\n    ll l = 1 , r= n , ans = 0 ;\r\n    while( l <= r ){      // search space non-empty\r\n        ll m = l + (r-l)/2 ;\r\n        if( f(n,m) ){\r\n            r = m-1 ;\r\n            ans = m ;\r\n        }\r\n        else\r\n            l = m+1 ;\r\n    }\r\n\r\n    cout << max(ans-2,0ll) << '\\n' ;\r\n}\r\n\r\n"
}