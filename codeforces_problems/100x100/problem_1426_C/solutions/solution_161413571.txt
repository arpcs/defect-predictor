{
    "id": 161413571,
    "contestId": 1426,
    "creationTimeSeconds": 1655830854,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1426,
        "index": "C",
        "name": "Increase and Copy",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "binary search",
            "constructive algorithms",
            "math"
        ]
    },
    "author": {
        "contestId": 1426,
        "members": [
            {
                "handle": "m_patel"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601280300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 702,
    "memoryConsumedBytes": 0,
    "source": "/*\r\nC_Increase_and_Copy.cpp\r\n22:19:06  21/06/2022\r\n*/\r\n\r\n\r\n#include\"bits/stdc++.h\"\r\nusing namespace std;\r\n\r\n#define pb push_back\r\n#define mod 1000000007\r\n#define inf1 2e9\r\n#define inf2 9e18\r\n#define ret return;\r\n#define all(v) v.begin(), v.end()\r\n#define sz(x) (long long)(x.size());\r\n#define endl \"\\n\"\r\n#define rep(i,l,r) for(int i=l; i<r; i++)\r\n#define el cout<<endl;\r\n#define cel cerr<<endl;\r\n#define pmat(v) rep(i,0,v.size()){rep(j,0,v[i].size()){cout<<v[i][j]<<' ';}el;}\r\n#define pv(v) for(auto i: v) cout<<i<<' ';\r\n#define umap unordered_map\r\n#define uset unordered_set\r\n#define umset unordered_multiset\r\n#define fast ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\r\n\r\ntypedef long long ll;\r\ntypedef vector<int> vi;\r\ntypedef vector<bool> vb;\r\ntypedef vector<string> vs;\r\ntypedef vector<vector<int>> vvi;\r\ntypedef vector<vector<ll>> vvl;\r\ntypedef vector<vector<char>> vvc;\r\ntypedef vector<ll> vl;\r\ntypedef pair<int,int> pi;\r\ntypedef pair<ll,ll> pl;\r\ntypedef vector<pair<int,int>> vpi;\r\ntypedef vector<pair<long long, long long>>  vpl;\r\n\r\n\r\n#pragma region Debugger\r\nvoid _print(int t) {cerr << t;}\r\nvoid _print(ll t) {cerr << t;}\r\nvoid _print(string t) {cerr << t;}\r\nvoid _print(char t) {cerr << t;}\r\nvoid _print(bool t) {cerr << t;}\r\nvoid _print(long double t) {cerr << t;}\r\nvoid _print(double t) {cerr << t;}\r\n \r\ntemplate <class T, class V> void _print(pair <T, V> p);\r\ntemplate <class T> void _print(vector <T> v);\r\ntemplate <class T> void _print(set <T> v);\r\ntemplate <class T> void _print(uset <T> v);\r\ntemplate <class T, class V> void _print(map <T, V> v);\r\ntemplate <class T, class V> void _print(umap <T, V> v);\r\ntemplate <class T> void _print(multiset <T> v);\r\ntemplate <class T> void _print(umset <T> v);\r\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.first); cerr << \",\"; _print(p.second); cerr << \"}\";}\r\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(uset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(umset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void _print(umap <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\n\r\n#ifndef ONLINE_JUDGE\r\n#define op(x...) cerr << #x << \" = \"; _print(x); cerr<<endl;\r\n#else\r\n#define op(x...)\r\n#endif\r\n#pragma endregion Debugger\r\n\r\n/*(FUNCTIONS)*/\r\n// ---------------------------------------*******************--------------------------------------//\r\n\r\nll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}\r\nll power(ll x, ll y){ll res = 1;while(y){if(y&1) res = (res*x)%mod;y=y/2,x=(x*x)%mod;}return res%mod;}\r\nll expo(ll a, ll b, ll mod1) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod1; a = (a * a) % mod1; b = b >> 1;} return res;}\r\nvoid extendgcd(ll a, ll b, ll*v) {if (b == 0) {v[0] = 1; v[1] = 0; v[2] = a; return ;} extendgcd(b, a % b, v); ll x = v[1]; v[1] = v[0] - v[1] * (a / b); v[0] = x; return;} //pass an arry of size1 3\r\nll mminv(ll a, ll b) {ll arr[3]; extendgcd(a, b, arr); return arr[0];} //for non prime b\r\nll mminvprime(ll a, ll b) {return expo(a, b - 2, b);}\r\nll combination(ll n, ll r, ll m, ll *fact, ll *ifact) {ll val1 = fact[n]; ll val2 = ifact[n - r]; ll val3 = ifact[r]; return (((val1 * val2) % m) * val3) % m;}\r\nvoid google(int t) {cout << \"Case #\" << t << \": \";}\r\nvector<int> sieve(int n) {int*arr = new int[n + 1](); vector<int> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}\r\nll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\r\nll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}\r\nll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}\r\nll mod_div(ll a, ll b, ll m) {a = a % m; b = b % m; return (mod_mul(a, mminvprime(b, m), m) + m) % m;}  //only for prime m\r\nll phin(ll n) {ll number = n; if (n % 2 == 0) {number /= 2; while (n % 2 == 0) n /= 2;} for (ll i = 3; i <= sqrt(n); i += 2) {if (n % i == 0) {while (n % i == 0)n /= i; number = (number / i * (i - 1));}} if (n > 1)number = (number / n * (n - 1)) ; return number;} //O(sqrt(N))\r\nll str_to_int(string s) {stringstream geek(s); ll x = 0; geek >> x; return x;}\r\nll HCF_of_vi(vl A) {ll i, a, n = A.size(); a = A[0]; rep(i, 1, n)a = __gcd(a, A[i]); return a;}\r\nll LCM_of_vi(vl A) {ll i, a, b, n = A.size(); a = A[0]; b = A[0]; rep(i, 1, n) {b = __gcd(a, A[i]); a = (a * A[i]) / b;} return a;}\r\nvoid factorize(ll n) {ll i, count = 0; while (!(n % 2)) {n >>= 1; count++;} if (count)  cout << \"2 : \" << count << \"\\n\"; for (i = 3; i <= sqrt(n); i += 2) {count = 0; while (n % i == 0) {count++; n = n / i;} if (count)cout << i << \" : \" << count << \"\\n\";} if (n > 2)cout << n << \" : 1\" << \"\\n\";}\r\n\r\n// ---------------------------------------********************--------------------------------------//\r\n// -------------------------------------- **CODE BEGINS HERE**--------------------------------------//\r\n// ---------------------------------------********************--------------------------------------//\r\n\r\n\r\n\r\n\r\n\r\nvoid AurBhaiKyaHaalHai(){\r\n    \r\n    \r\n    ll n; cin>>n;\r\n    \r\n    ll k=1, ans=INT_MAX;\r\n    rep(k,1,100000+1){\r\n        ll t = k-1;\r\n        t+=((n+k-1)/k);\r\n        ans=min(ans, t);\r\n    }\r\n    \r\n    cout<<ans-1;\r\n    \r\n    \r\n}\r\n\r\n\r\nint main(){fast\r\n\r\nint t; \r\nt=1;\r\ncin>>t; \r\nwhile(t--){\r\n    AurBhaiKyaHaalHai();\r\n    cout<<endl;\r\n    //cerr<<endl;\r\n}\r\n\r\n}"
}