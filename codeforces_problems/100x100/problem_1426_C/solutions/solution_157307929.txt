{
    "id": 157307929,
    "contestId": 1426,
    "creationTimeSeconds": 1652618713,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1426,
        "index": "C",
        "name": "Increase and Copy",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "binary search",
            "constructive algorithms",
            "math"
        ]
    },
    "author": {
        "contestId": 1426,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601280300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 1228800,
    "source": "#include <iostream>\n#include <cmath>\n \nusing namespace std;\n \n \nint main() {\n    int T;\n    cin >> T;\n    while(T--) {\n        int n;\n        cin >> n;\n        int res = 0x3f3f3f3f;\n        for (int i = 1; i <= sqrt(n); i++) {\n            int t = i + n / i - 1 + (n % i != 0);\n            res = min(res, t);\n        }\n        cout << res - 1 << endl;\n    }\n    return 0;\n}\n\t \t      \t \t \t\t\t\t  \t\t\t\t     \t \t"
}