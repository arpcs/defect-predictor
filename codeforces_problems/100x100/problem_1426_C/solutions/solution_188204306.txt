{
    "id": 188204306,
    "contestId": 1426,
    "creationTimeSeconds": 1673004460,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1426,
        "index": "C",
        "name": "Increase and Copy",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "binary search",
            "constructive algorithms",
            "math"
        ]
    },
    "author": {
        "contestId": 1426,
        "members": [
            {
                "handle": "omtrivedioo3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601280300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ull unsigned long long int;\r\n#define ll long long int\r\n#define vll vector<ll>\r\n#define vpll vector<pair<ll, ll>>\r\n#define vvll vector<vector<ll>>\r\n#define pll pair<ll, ll>\r\n#define mpll map<ll, ll>\r\n#define ld long double\r\n#define float double\r\n#define f(i, x, n) for (int i = x; i < n; i++)\r\n#define rf(i, x, n) for (int i = x; i >= n; i--)\r\n#define pb push_back\r\n#define all(a) (a).begin(), (a).end()\r\n#define rall(a) (a).rbegin(), (a).rend()\r\n#define sz(a) (ll) a.size()\r\n#define pi (3.141592653589)\r\n#define min3(a, b, c) min(a, min(b, c))\r\n#define min4(a, b, c, d) min(a, min(b, min(c, d)))\r\n#define max3(a, b, c) max(a, max(b, c))\r\n#define max4(a, b, c, d) max(a, max(b, max(c, d)))\r\n#define max5(a, b, c, d, e) max(a, max(b, max(c, max(d, e))))\r\n#define min5(a, b, c, d, e) min(a, min(b, min(c, min(d, e))))\r\n#define mod 1000000007;\r\n#define dl endl;\r\nll fastprime(ll n)\r\n{\r\n    f(i, 2, (ll)sqrt(n)) if (n % i == 0) return 0;\r\n    return 1;\r\n}\r\n#define slow                          \\\r\n    ios_base::sync_with_stdio(false); \\\r\n    cin.tie(NULL);                    \\\r\n    cout.tie(NULL)\r\n// #define INF (int)5e18\r\n/*\r\n */\r\n// int mod = 1000000007;\r\n/*\r\n */\r\n// const int N= 1e7+10;\r\n// ll ar[N];\r\n// ll j = 1;\r\n// void subsetsUtil(vector<int> &A, vector<ll> &res,\r\n//                  ll &subset, int index)\r\n// {\r\n//     res.push_back(subset);\r\n//     // Loop to choose from different elements present\r\n//     // after the current index 'index'\r\n//     for (int i = index; i < A.size(); i++)\r\n//     {\r\n\r\n//         // include the A[i] in subset.\r\n//         subset *= A[i];\r\n\r\n//         // move onto the next element.\r\n//         subsetsUtil(A, res, subset, i + 1);\r\n\r\n//         // exclude the A[i] from subset and triggers\r\n//         // backtracking.\r\n//         subset /= A[i];\r\n//     }\r\n\r\n//     return;\r\n// }\r\n\r\n// // below function returns the subsets of vector A.\r\n// vector<ll> subsets(vector<int> &A)\r\n// {\r\n//     ll subset = 1;\r\n//     vector<ll> res;\r\n\r\n//     // keeps track of current element in vector A\r\n//     // and the number of elements present in the array subset\r\n//     int index = 0;\r\n//     subsetsUtil(A, res, subset, index);\r\n\r\n//     return res;\r\n// }\r\n\r\n// int fun(int i, int j, string a, string b, int n, vector<vector<int>> &dp)\r\n// {\r\n//     if (i == n or j == n)\r\n//         return 0;\r\n//     if (a[i] == b[j])\r\n//         return dp[i][j] = 1 + fun(i + 1, j + 1, a, b, n, dp);\r\n//     return dp[i][j] = max(fun(i + 1, j, a, b, n, dp), fun(i, j + 1, a, b, n, dp));\r\n// }\r\n// int lcs(int i, int j, vector<vector<int>> &interval, int prev, int m, int n, vector<vector<int>> &dp)\r\n// {\r\n//     if (i >= n)\r\n//         return 0;\r\n//     if (dp[i][prev + 1] != -1)\r\n//         return dp[i][prev + 1];\r\n//     int nott = lcs(i + 1, j, interval, prev, m, n, dp);\r\n//     int take = INT16_MIN;\r\n//     if (prev == -1 or interval[prev][1] <= interval[i][0])\r\n//     {\r\n//         take = interval[i][2] + lcs(i + 1, j, interval, i, m, n, dp);\r\n//     }\r\n\r\n//     // L[m][n] contains length of LCS for X[0..n-1] and Y[0..m-1]\r\n//     return dp[i][prev + 1] = max(take, nott);\r\n// }\r\n\r\n// int maximum_profit(int n, vector<vector<int>> &intervals)\r\n// {\r\n//     sort(intervals.begin(), intervals.end());\r\n//     // int n = intervals.size();\r\n//     vector<vector<int>> dp(n + 1, vector<int>(n + 1, 0));\r\n//     // int ans = lcs(0, 2, intervals, -1, 0, intervals.size(), dp);\r\n//     for (int i = n - 1; i >= 0; i--)\r\n//     {\r\n//         for (int prev = i - 1; prev >= -1; prev--)\r\n//         {\r\n//             int nott = dp[i + 1][prev + 1];\r\n//             int take = INT16_MIN;\r\n//             if (prev == -1 or intervals[prev][1] <= intervals[i][0])\r\n//             {\r\n//                 take = dp[i][2] + dp[i + 1][i + 1];\r\n//             }\r\n\r\n//             dp[i][prev + 1] = max(take, nott);\r\n//         }\r\n//     }\r\n\r\n//     return dp[0][0];\r\n// }\r\n// int take = 0;\r\n// void find(int i, int j, int k, vector<int> &a, int n)\r\n// {\r\n//     if (i >= n or j >= n or i > j)\r\n//         return;\r\n\r\n//     // int take = 0;\r\n//     if (a[i] == a[j] and j - i >= k)\r\n//     {\r\n//         take++;\r\n//     }\r\n//     find(i, j + 1, k, a, n);\r\n//     find(i + 1, j, k, a, n);\r\n// }\r\n// long long findGoodPairs(vector<int> a, int n, int k)\r\n// {\r\n//     long long cnt = 0;\r\n//     for (int i = 0; i < n; i++)\r\n//     {\r\n//         for (int j = k; j < n; j++)\r\n//         {\r\n//             if (a[i] == a[j])\r\n//                 cnt++;\r\n//         }\r\n//     }\r\n//     return cnt;\r\n// }\r\n// string longestString(vector<string> &words)\r\n// {\r\n//     unordered_map<string, int> mp;\r\n//     sort(words.begin(), words.end());\r\n//     for (int i = 0; i < words.size(); i++)\r\n//     {\r\n//         mp[words[i]]++;\r\n//     }\r\n//     int j = words.size() - 1;\r\n//     while (j >= 0)\r\n//     {\r\n//         int f = 1;\r\n//         string s = words[j];\r\n//         for (int i = 0; i < s.length(); i++)\r\n//         {\r\n//             if (mp[s.substr(0, i)] == 0)\r\n//             {\r\n//                 f = 0;\r\n//                 break;\r\n//             }\r\n//         }\r\n//         if (f == 1)\r\n//         {\r\n//             return s;\r\n//         }\r\n//         j--;\r\n//     }\r\n// }\r\n// bool prime(int num)\r\n// {\r\n//     if (num == 0 or num == 1)\r\n//         return false;\r\n//     for (int i = 2; i < num; i++)\r\n//     {\r\n//         if (num % 2 == 0)\r\n//             return false;\r\n//     }\r\n//     return true;\r\n// }\r\n\r\n// // public:\r\n// int shortestPath(int Num1, int Num2)\r\n// {\r\n//     string s1 = to_string(Num1), s2 = to_string(Num2);\r\n//     queue<pair<string, int>> q;\r\n//     q.push({s1, 0});\r\n//     vector<int> vis(1e5);\r\n//     while (!q.empty())\r\n//     {\r\n//         string word = q.front().first;\r\n//         int steps = q.front().second;\r\n//         q.pop();\r\n//         vis[stoi(word)] = 1;\r\n\r\n//         if (word == s2)\r\n//         {\r\n//             return steps;\r\n//         }\r\n//         for (int i = 0; i < word.size(); i++)\r\n//         {\r\n//             char ch = word[i];\r\n//             for (int j = 0; j < 10; j++)\r\n//             {\r\n//                 if (i == 0 and j == 0)\r\n//                     continue;\r\n//                 word[i] = char(j + '0');\r\n//                 if (prime(stoi(word)) and !vis[stoi(word)])\r\n//                 {\r\n//                     vis[stoi(word)] = 1;\r\n//                     q.push({word, steps + 1});\r\n//                 }\r\n//             }\r\n//             word[i] = ch;\r\n//         }\r\n//     }\r\n//     return -1;\r\n// }\r\nvoid solve()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    int ans = 1e9;\r\n    for (int x = 1; x * x <= n; ++x)\r\n    {\r\n        ans = min(ans, x - 1 + ((n - x) + x - 1) / x);\r\n    }\r\n    cout << ans << endl;\r\n}\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n\r\n    int t;\r\n    cin >> t;\r\n    while (t--)\r\n        solve();\r\n}"
}