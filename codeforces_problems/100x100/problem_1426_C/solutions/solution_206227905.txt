{
    "id": 206227905,
    "contestId": 1426,
    "creationTimeSeconds": 1684336893,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1426,
        "index": "C",
        "name": "Increase and Copy",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "binary search",
            "constructive algorithms",
            "math"
        ]
    },
    "author": {
        "contestId": 1426,
        "members": [
            {
                "handle": "chunzDing"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601280300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nusing i64 = long long;\r\nvoid solve() {\r\n    i64 n, ans;\r\n    cin >> n;\r\n    if (n == 1) {\r\n        cout << \"0\\n\";\r\n        return;\r\n    }\r\n    else {\r\n        i64 tmp = sqrt(n) + 1;\r\n        i64 ans = tmp - 1;\r\n        ans += (n / tmp) - 1;\r\n        if (n % tmp != 0) ans++;\r\n        cout << ans << \"\\n\";\r\n    }\r\n}\r\n\r\nint main() {\r\n    int t;\r\n    cin >> t;\r\n    while (t--) solve();\r\n    return 0;\r\n}"
}