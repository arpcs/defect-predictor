{
    "id": 228675453,
    "contestId": 1426,
    "creationTimeSeconds": 1697632159,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1426,
        "index": "C",
        "name": "Increase and Copy",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "binary search",
            "constructive algorithms",
            "math"
        ]
    },
    "author": {
        "contestId": 1426,
        "members": [
            {
                "handle": "Jayesh_M01"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601280300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#include <iostream>\r\n#include <map>\r\n#include <cmath> \r\n#include <algorithm>\r\n#include <string>\r\n#include <set>\r\n#include <vector>\r\nusing namespace std;\r\n#define int long long\r\n#define  gcd __gcd\r\n#define  mp make_pair\r\n#define  all(x) (x).begin(),(x).end()\r\n#define endl '\\n'\r\n#define all_the_best ios_base::sync_with_stdio(false);cin.tie(NULL)\r\nvoid yes(){cout <<\"YES\"<<endl;}\r\nvoid no(){cout <<\"NO\"<<endl;}\r\n\r\nconst int N=1e5+4;\r\nconst int mod=1e9+7;\r\n\r\nbool isPerfectSquare(int num) {\r\n\r\n    int sqrt_num = sqrt(num);\r\n    return sqrt_num * sqrt_num == num;\r\n}\r\n\r\nsigned main()\r\n{\r\n    all_the_best;\r\n\r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n       int n;\r\n       cin>>n;\r\n\r\n       double sqrtn=sqrt(n);\r\n        int sqrtint=sqrt(n);\r\n\r\n        if(!isPerfectSquare(n)){\r\n            int temp=2*sqrtint;\r\n            int temp2=temp-1;\r\n\r\n            int d=(((sqrtint+1)*(sqrtint)));\r\n\r\n            if(n>d){\r\n                cout<<temp<<endl;\r\n            }\r\n            else{\r\n                cout<<temp2<<endl;\r\n            }\r\n            continue;\r\n        }\r\n\r\n        else{\r\n            int temp=sqrtint-1;\r\n            cout<<temp*2<<endl;\r\n        }\r\n\r\n\r\n    }\r\n    return 0;\r\n}"
}