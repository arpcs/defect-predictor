{
    "id": 191624403,
    "contestId": 1426,
    "creationTimeSeconds": 1675280457,
    "relativeTimeSeconds": 3957,
    "problem": {
        "contestId": 1426,
        "index": "C",
        "name": "Increase and Copy",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "binary search",
            "constructive algorithms",
            "math"
        ]
    },
    "author": {
        "contestId": 1426,
        "members": [
            {
                "handle": "Zeinab_Hamdy"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1675276500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std; \r\n#define ll long long\r\n#define ull unsigned ll\r\n#define nl \"\\n\"\r\n#define sz(x) int(x.size())\r\n#define NumOfDigit(w) log10(w) + 1\r\n#define fill(arr, val)  memset(arr, val , sizeof(arr))\r\n#define PI 3.141592654\r\n#define ceil(w, m) (((w) / (m)) + ((w) % (m) ? 1 : 0))\r\n#define all(v) v.begin(), v.end()\r\n#define rall(v) v.rbegin(), v.rend()\r\n#define fi first\r\n#define se second\r\n#define cin(v) for (auto&i:v) cin >> i;\r\n#define cout(v) for (auto&i:v) cout << i << \" \";\r\n#define fixed(n) fixed << setprecision(n)\r\n#define MOD  1000000007\r\n\r\n\r\nvoid IO(){\r\n    ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);\r\n}\r\nvoid files(){\r\n    //freopen(\"filename.in\" , \"r\" ,stdin);\r\n            #ifndef ONLINE_JUDGE\r\n              freopen(\"input.txt\", \"r\", stdin);  freopen(\"output.txt\", \"w\", stdout);\r\n            #endif\r\n}\r\n\r\n\r\n\r\nvoid solve(){\r\n\r\nll n ;\r\ncin >> n ;\r\nif(n == 1) return void(cout << 0 << nl);\r\ncout << (ll) ( 2 * sqrt(n) ) -1 << nl;\r\n\r\n\r\n}\r\nint main(){\r\n                 IO();         files();\r\n                 \r\n        \r\n    int testCase=1;  // one test case\r\n     cin >> testCase ;       \r\n while(testCase--) \r\n        solve();  // my code\r\n        \r\n    return 0;\r\n}"
}