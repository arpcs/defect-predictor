{
    "id": 231659221,
    "contestId": 1426,
    "creationTimeSeconds": 1699324885,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1426,
        "index": "C",
        "name": "Increase and Copy",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "binary search",
            "constructive algorithms",
            "math"
        ]
    },
    "author": {
        "contestId": 1426,
        "members": [
            {
                "handle": "ngotruongsinh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601280300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <queue>\r\n\r\nusing namespace std;\r\n\r\nint sol(int N) {\r\n    vector<int> dp(N + 1, N + 1);\r\n    dp[1] = 0;\r\n\r\n    for (int i = 2; i <= N; i++) {\r\n        for (int j = 1; j <= i; j++) {\r\n            if (i % j == 0) {\r\n                dp[i] = min(dp[i], dp[j] + i / j);\r\n            }\r\n        }\r\n        for (int j = 2; j <= i; j++) {\r\n            if (i % j == 0) {\r\n                dp[i] = min(dp[i], dp[i / j] + j - 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    return dp[N];\r\n}\r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0); cout.tie(0);\r\n\r\n    int t;\r\n    cin >> t;\r\n    while(t--){\r\n        int n;\r\n        cin >> n;\r\n        cout << sol(n) << '\\n';\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}