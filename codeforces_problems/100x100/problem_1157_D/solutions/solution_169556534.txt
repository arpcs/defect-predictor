{
    "id": 169556534,
    "contestId": 1157,
    "creationTimeSeconds": 1661375559,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1157,
        "index": "D",
        "name": "N Problems During K Days",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1157,
        "members": [
            {
                "handle": "Yahia_Emara"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1556289300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 8396800,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include<ext/rope>\r\nusing namespace std;\r\nusing namespace __gnu_cxx;\r\nusing namespace __gnu_pbds;\r\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n#define ordered_set tree<pair<lng,lng>,null_type,less<pair<lng,lng>>,rb_tree_tag,tree_order_statistics_node_update>\r\n#define ordered_multiset tree<double,null_type,less<double>,rb_tree_tag,tree_order_statistics_node_update>\r\n#define rtr return 0\r\n#define lng long long\r\n#define double long double\r\n#define endl \"\\n\"\r\n#define pb push_back\r\n#define cmbntrcs fact[0]=1;for(int i=1;i<INF;i++){fact[i]=mul(i,fact[i-1]);}inv[INF-1]=mod_inv(fact[INF-1]);for(int i=INF-2;i>=0;i--){inv[i]=mul(inv[i+1],i+1);}\r\n///#pragma GCC optimize(Ofast,unroll-all-loops)\r\nconst int INF=1e6+7,SZ=2e5+7,MSZ=1e5+3,MAXA=6e5+7;\r\nint MOD=998244353;\r\nint add(int x,int y){int z=x+y;if(z>=MOD){z-=MOD;}return z;}\r\nint sub(int x,int y){int z=x-y;if(z<0){z+=MOD;}return z;}\r\nint mul(int x,int y){return(x*1ll*y)%MOD;}\r\nint pwr(int a,lng b)\r\n{\r\n int rs=1;\r\n while(b>0){if(b&1){rs=mul(rs,a);}a=mul(a,a);b>>=1;}\r\n return rs;\r\n}\r\nint mod_inv(int a){return pwr(a,MOD-2);}\r\nint fact[INF],inv[INF];\r\nint nCr(int n,int r){if(r>n||r<0||n<0){return 0;}return mul(fact[n],mul(inv[r],inv[n-r]));}\r\nint nPr(int n,int r){if(r>n||r<0||n<0){return 0;}return mul(fact[n],inv[n-r]);}\r\nint nPrvc(vector<int>r)\r\n{\r\n int den=1,n=0;\r\n for(int i=0;i<r.size();i++){den=mul(den,inv[r[i]]);n+=r[i];}\r\n return mul(fact[n],den);\r\n}\r\nint sb(int s,int b){if(s<0||b<0){return 0;}return nCr(s+b-1,s);}\r\nint prfx(int i,int j){if(i<0||j<0){return 0;}return nCr(i+j,i);}\r\nint nCrL(int x,int y)\r\n{\r\n int rt=1;for(int i=x;i>x-y;i--){rt=mul(rt,i);}\r\n int dn=1;for(int i=1;i<=y;i++){dn=mul(dn,i);}\r\n return mul(rt,mod_inv(dn));\r\n}\r\nlng lcm(lng x,lng y){return((x/__gcd(x,y))*y);}\r\nlng trig(lng x){return x*(x+1)/2;}\r\nlng pent(lng x){return(x*((3*x)-1))/2;}\r\nlng sigma(lng x,lng y){return trig(y)-trig(x-1);}\r\npair<double,double>quad(double a,double b,double c)\r\n{\r\n double disc=(b*b)-(4*a*c);\r\n if(disc<0){return{-1e16,-1e16};}\r\n return{(sqrt(disc)-b)/(2*a),-(sqrt(disc)+b)/(2*a)};\r\n}\r\ndouble sigma_rev(double x){return quad(1,1,-2*x).first;}\r\nlng cldv(lng a,lng b){return(a+b-1)/b;}\r\nlng fp(lng a,lng b)\r\n{\r\n lng rs=1;\r\n while(b>0){if(b&1){rs*=a;}a*=a;b>>=1;}\r\n return rs;\r\n}\r\nstruct mtrx\r\n{\r\n lng nx,mx;vector<vector<lng>>bd;\r\n void bld(vector<vector<lng>>obd){nx=obd.size(),mx=obd[0].size();bd=obd;}\r\n void outm(){for(lng i=0;i<nx;i++){for(lng j=0;j<mx;j++){cout << bd[i][j] << ' ';}cout << endl;}}\r\n};\r\nmtrx idnt(lng n)\r\n{\r\n vector<vector<lng>>v;v.resize(n);\r\n for(lng i=0;i<n;i++){v[i].assign(n,0);v[i][i]=1;}\r\n return{n,n,v};\r\n}\r\nmtrx mulm(mtrx a,mtrx b)\r\n{\r\n if(a.mx!=b.nx){return{1,1,{{0}}};}\r\n vector<vector<lng>>v;v.resize(a.nx);\r\n for(lng i=0;i<a.nx;i++)\r\n {\r\n  v[i].resize(b.mx);\r\n  for(lng j=0;j<b.mx;j++)\r\n  {\r\n   lng s=0;\r\n   for(lng x=0;x<a.mx;x++)\r\n   {\r\n    s+=a.bd[i][x]*b.bd[x][j];\r\n    s%=MOD;\r\n   }\r\n   v[i][j]=s;\r\n  }\r\n }\r\n mtrx ret;ret.bld(v);\r\n return ret;\r\n}\r\nmtrx fpm(mtrx a,lng b)\r\n{\r\n if(b==0){return idnt(a.nx);}\r\n mtrx ret=fpm(a,b/2);ret=mulm(ret,ret);\r\n if(b%2){ret=mulm(ret,a);}\r\n return ret;\r\n}\r\nlng rndm(lng a,lng b){return a+rng()%((b+1)-a);}\r\nstruct dsu\r\n{\r\n vector<lng>p,sz;\r\n void init(lng n)\r\n {\r\n  p.resize(n+1);sz.assign(n+1,1);\r\n  for(lng i=0;i<=n;i++){p[i]=i;}\r\n  return;\r\n }\r\n lng get(lng a)\r\n {\r\n  if(p[a]==a){return a;}\r\n  return p[a]=get(p[a]);\r\n }\r\n void unn(lng x,lng y)\r\n {\r\n  if(cnct(x,y)){return;}\r\n  x=get(x);y=get(y);\r\n  if(sz[x]>sz[y]){swap(x,y);}\r\n  p[x]=y;sz[y]+=sz[x];return;\r\n }\r\n bool cnct(lng x,lng y){return get(x)==get(y);}\r\n lng siz(lng a){return sz[get(a)];}\r\n};\r\nint main()\r\n{\r\n ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n lng n,k;cin >> n >> k;n-=trig(k);\r\n if(n<0){cout << \"NO\";rtr;}\r\n lng z=n/k,inc=(n%k);\r\n lng a[k];for(lng i=0;i<k;i++){a[i]=(i+1)+z;}\r\n for(lng i=k-1;i>=0;i--)\r\n {\r\n  while(inc>0)\r\n  {\r\n   if((i!=0&&a[i]+1>2*a[i-1])||(i!=k-1&&a[i]+1>=a[i+1])){break;}\r\n   a[i]++;inc--;\r\n  }\r\n }\r\n if(inc>0){cout << \"NO\";rtr;}\r\n cout << \"YES\\n\";\r\n for(lng i=0;i<k;i++){cout << a[i] << ' ';}\r\n return 0;\r\n}\r\n"
}