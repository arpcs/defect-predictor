{
    "id": 125736823,
    "contestId": 1157,
    "creationTimeSeconds": 1628841772,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1157,
        "index": "D",
        "name": "N Problems During K Days",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1157,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1556289300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cstring>\nusing namespace std;\nint main()\n{\n    long long n, k;\n    scanf(\"%lld%lld\", &n, &k);\n    long long low = ((1 + k) * k) / 2;\n    long long high = (1ll << min(k, 1ll * 60)) - 1;\n    if(n >= low && n <= high)\n    {\n        printf(\"YES\\n\");\n        if(n == high)\n        {\n            for(int i = 1; i <= k; i++)\n            {\n                printf(\"%d \", 1 << (i - 1));\n            }\n            return 0;\n        }\n        int b = -1;\n        long long tempsum = 0;\n        for(int i = 2; i <= min(k, 1ll * 60); i++)\n        {\n            tempsum = (1 << i) - 1;\n            int base = (1 << (i - 1)) + 1;\n            tempsum = tempsum + ((base + base + k - i - 1) * (k - i)) / 2;\n            // cout << tempsum << endl;\n            if(tempsum > n)\n            {\n                b = i - 1;\n                break;\n            }\n        }\n        vector<int> ans;\n        for(int i = 1; i <= b; i++)\n        {\n            ans.push_back(1 << (i - 1));\n        }\n        long long nowsum = (1 << b) - 1;\n        long long base = (1 << (b - 1)) + 1;\n        nowsum = nowsum + ((base + base + k - b - 1) * (k - b)) / 2;\n        long long cha = n - nowsum;\n        cout << cha << endl;\n        for(int i = b + 1; i <= k - 2; i++)\n        {\n            ans.push_back(base);\n            base++;\n        }\n        int l = base ;\n        int ll = base + 1;\n        ll += cha;\n        if(l * 2 < ll)\n        {\n            while(l * 2 < ll)\n            {\n                l++;\n                ll--;\n\n            }\n        }\n        for(int i = 0; i < ans.size(); i++)\n        {\n            printf(\"%d \", ans[i]);\n        }\n        printf(\"%d %d\", l, ll);\n        puts(\"\");\n    }\n    else\n    {\n        printf(\"NO\\n\");\n    }\n\n}\n\n\t\t \t\t   \t\t\t   \t \t\t\t  \t\t\t  \t \t"
}