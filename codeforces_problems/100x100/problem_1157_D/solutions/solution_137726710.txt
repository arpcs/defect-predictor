{
    "id": 137726710,
    "contestId": 1157,
    "creationTimeSeconds": 1638390494,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1157,
        "index": "D",
        "name": "N Problems During K Days",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1157,
        "members": [
            {
                "handle": "Ziad_Monem17"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1556289300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 29,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 819200,
    "source": "#pragma GCC optimize(\"O3\")\r\n#include <iostream>\r\n#include <bits/stdc++.h>\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define ld long double\r\n#define f first\r\n#define s second\r\n#define sz(v) ((ll)((v).size()))\r\n#define fast ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\nusing namespace std;\r\nconst ld eps = 1e-8;\r\nconst ld pi = acos(-1);\r\nconst ll mod = 1e9 + 7;\r\nconst int N = 1e5 + 5;\r\nint dx[] = {0, 0, 1, -1, 1,-1, 1,-1};\r\nint dy[] = {1, -1,0, 0, -1,1, 1,-1};\r\n\r\nll a[N];\r\n\r\nint main() {\r\n    fast\r\n    int tt = 1;\r\n    while(tt--)\r\n    {\r\n        ll n, k;\r\n        cin >> n >> k;\r\n        ll l = 1, r = 1e5, start = -1;\r\n        while(l <= r)\r\n        {\r\n            ll mid = l + (r - l) / 2;\r\n            ll sum = (k / (ld)2) * (ld) ((2ll * mid) + (k - 1));\r\n            //cout << mid << ' ' << sum << endl;\r\n            if (sum <= n){\r\n                start = mid;\r\n                l = mid + 1;\r\n            }\r\n            else{\r\n                r = mid - 1;\r\n            }\r\n        }\r\n        //cout << start << endl;\r\n        a[0] = start;\r\n        for (int i = 1; i < k; i++)\r\n            a[i] = a[i - 1] + 1;\r\n        ll sum = (k / (ld)2) * (ld)((2ll * start) + (k - 1));\r\n        ll rem = n - sum;\r\n        sum = a[0];\r\n        for (int i = k - 1; i > 0; i--)\r\n        {\r\n            ll mx = (a[i - 1] * 2ll) - a[i];\r\n            ll mn = min(mx, rem);\r\n            a[i] += mn;\r\n            sum += a[i];\r\n            rem -= mn;\r\n        }\r\n       if (sum != n)\r\n            return  cout << \"NO\\n\", 0;\r\n        cout << \"YES\\n\";\r\n        for (int i = 0; i < k; i++)\r\n            cout << a[i] << ' ';\r\n    }\r\n}\r\n"
}