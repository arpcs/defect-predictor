{
    "id": 119281055,
    "contestId": 1157,
    "creationTimeSeconds": 1623525077,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1157,
        "index": "D",
        "name": "N Problems During K Days",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1157,
        "members": [
            {
                "handle": "jamesfan961101"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1556289300
    },
    "programmingLanguage": "Java 11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 0,
    "source": "import java.io.PrintWriter;\r\nimport java.util.Scanner;\r\n\r\npublic class NProblemsDuringKDays {\r\n    public static void main(String[] args) {\r\n        Scanner sc = new Scanner(System.in);\r\n        PrintWriter pw = new PrintWriter(System.out);\r\n        int t = 1;\r\n        for (int i = 0; i < t; i++) {\r\n            solve(sc, pw);\r\n        }\r\n        pw.close();\r\n    }\r\n    static void solve(Scanner in, PrintWriter out){\r\n        long n = in.nextInt(), k = in.nextInt();\r\n        long maxTot = 1;\r\n        long st = 1;\r\n        for (int i = 0; i < k - 1; i++) {\r\n            st *= 2;\r\n            maxTot += st;\r\n            if (maxTot >= n) break;\r\n        }\r\n        long mintot = (1l + k) * k / 2;\r\n//        System.out.println(mintot);\r\n        if (mintot > n){\r\n            out.println(\"NO\");\r\n        }else{\r\n            if (k == 1){\r\n                out.println(\"YES\");\r\n                out.println(n);\r\n                return;\r\n            }\r\n            long[] ans = new long[(int)k];\r\n\r\n            for(int i = 0; i < k; i++){\r\n                n -= (i + 1);\r\n                ans[i] = (i + 1);\r\n            }\r\n            long per = n / (k);\r\n            long rem = n % (k);\r\n            for(int i = 0; i < k; i++){\r\n                n -= per;\r\n                ans[i] += per;\r\n            }\r\n            long ok = ans[0];\r\n            for (int i = 1; i < Math.min(31, k); i++) {\r\n                ok *= 2;\r\n                if (ans[i] > ok){\r\n                    rem += (ans[i] - ok);\r\n                    ans[i] = ok;\r\n                }\r\n            }\r\n//            System.out.println(Arrays.toString(ans)+\" per:\"+per+\" n:\"+n+\" rem:\"+rem);\r\n            for (int i = (int)k - 1; i >= 1 && rem > 0; i--) {\r\n                long add = 2 * ans[i - 1] - ans[i];\r\n                if (add >= rem){\r\n                    ans[i] += rem;\r\n                    rem = 0;\r\n                }else{\r\n                    ans[i] += add;\r\n                    rem -= add;\r\n                }\r\n            }\r\n            long tot = 0;\r\n            for (int i = 0; i < k; i++) {\r\n                tot += ans[i];\r\n            }\r\n//            System.out.println(tot+\" tot:\"+tot);\r\n            if (rem > 0){\r\n                out.println(\"NO\");\r\n            }else{\r\n                out.println(\"YES\");\r\n                for (int i = 0; i < k; i++) {\r\n                    out.print(ans[i]+\" \");\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"
}