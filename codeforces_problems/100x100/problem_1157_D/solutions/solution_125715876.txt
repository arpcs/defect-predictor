{
    "id": 125715876,
    "contestId": 1157,
    "creationTimeSeconds": 1628820126,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1157,
        "index": "D",
        "name": "N Problems During K Days",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1157,
        "members": [
            {
                "handle": "sidaaaaa"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1556289300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 5120000,
    "source": "/*input\r\n26 6 \r\n\r\n*/\r\n#include <bits/stdc++.h>\r\n#define int long long\r\nusing namespace std;\r\nconst int K = 1e5 + 1e1;\r\nint pref[K];\r\nset<int> Set;\r\nmain() {\r\n\tcin.tie(0)->sync_with_stdio(0);\r\n\tint n, k;\r\n\tcin >> n >> k;\r\n\tfor (int i = 1; i <= 100000; i++) pref[i] = pref[i - 1] + i;\r\n\tint Start = 0, End = 0, Cur_Sum;\r\n\tfor (int i = 1; i <= 100000 - k + 1; i++)\r\n\t{\r\n\t\tif (pref[i + k - 1] - pref[i - 1] > n)\r\n\t\t{\r\n\t\t\tStart = i - 1;\r\n\t\t\tEnd = i + k - 2;\r\n\t\t\tCur_Sum = pref[i + k - 2] - pref[i - 2];\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tfor (int i = Start; i <= End; i++) Set.insert(i);\r\n\tint Need = n - Cur_Sum;\r\n\tif (log2(n) >= k || Start == 0)\r\n\t{\r\n\t\tcout << \"No\";\r\n\t\texit(0);\r\n\t}\r\n\tcout << \"Yes\" << \"\\n\";\r\n\tvector<int> _Adis;\r\n\tfor (int i = Start; i <= End; i++)\r\n\t{\r\n\t\tif (i < End - Need + 1) _Adis.push_back(i);\r\n\t\telse \r\n\t\t\t{\r\n\t\t\t\t_Adis.push_back(i+1);\r\n\t\t\t}\r\n\t//\tcout << \" \";\r\n\t}\r\n\tif(k>=2&&_Adis[0]==1&&_Adis[1]!=2)\r\n\t{\r\n\t\tfor(int i=0;i<k;i++)\r\n\t\t{\r\n\t\t\tif(i==1) cout << 2 << ' ';\r\n\t\t\telse if(i==k-1) cout << _Adis[i]+1 << \" \"; \r\n\t\t\telse cout << _Adis[i] << ' ';\r\n\t\t}\r\n\t}\r\n\telse \r\n\t{\r\n\t\tfor(auto h:_Adis) cout << h << \" \";\r\n\t}\r\n\treturn 0;\r\n}"
}