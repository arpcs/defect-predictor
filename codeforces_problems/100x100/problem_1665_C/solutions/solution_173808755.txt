{
    "id": 173808755,
    "contestId": 1665,
    "creationTimeSeconds": 1664366220,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "AghaGholam"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 2969600,
    "source": "#include<bits/stdc++.h>\r\n#define NOT_STONKS ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0)\r\n\r\nusing namespace std;\r\nconst int maxn = 2e5 + 10; //4e6 + 10; //3e5 + 10;\r\nconst int mod = 1e9 + 7; //998244353;\r\n\r\nint t, n, cnt[maxn];\r\n\r\nint main() {\r\n    NOT_STONKS;\r\n\r\n    cin >> t;\r\n    while (t--) {\r\n        cin >> n;\r\n        for (int i = 0; i < n; i++) cnt[i] = 0;\r\n        for (int i = 0; i < n - 1; i++) {\r\n            int x;\r\n            cin >> x, x--;\r\n            cnt[x]++;\r\n        }\r\n        \r\n        int ans = 1;\r\n        vector<int> v, temp;\r\n        for (int i = 0; i < n; i++) {\r\n            if (cnt[i] == 0) continue;\r\n            v.push_back(cnt[i]);\r\n            ans++;\r\n        }\r\n        v.push_back(1);\r\n        sort(v.rbegin(), v.rend());\r\n        for (int i = 0; i < v.size(); i++) {\r\n            if (v[i] - int(v.size()) + i > 0)\r\n                temp.push_back(v[i] - int(v.size()) + i);\r\n        }\r\n        sort(temp.rbegin(), temp.rend());\r\n        \r\n        int high = n, low = -1, mid;\r\n        while (high - low > 1) {\r\n            mid = (high + low) >> 1;\r\n            int res = 0;\r\n            for (int i = 0; i < temp.size(); i++) res += max(0, temp[i] - mid);\r\n            if (res <= mid)\r\n                high = mid;\r\n            else\r\n                low = mid;\r\n        }\r\n        cout << ans + high << '\\n';\r\n    }\r\n    return 0;\r\n}\r\n\r\n"
}