{
    "id": 207753864,
    "contestId": 1665,
    "creationTimeSeconds": 1685362848,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 7270400,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 200010;\nvector<int> g[N];\n\nvoid bfs()\n{\n    vector<int> v;\n    queue<int> q;\n    q.push(1);\n    while (!q.empty())\n    {\n        int n = q.size(); v.push_back(n);\n        for (int i = 0; i < n; i ++)\n        {\n            int x = q.front(); q.pop();\n            for (auto y : g[x]) q.push(y);\n        }\n    }\n    sort(v.begin(), v.end());\n    int n = v.size();\n    int res = n, k = 0;\n    for (int i = n - 1; ~i; i --)\n    {\n        int x = v[i] + n - 1 - i;\n        // cout << i << ' ' << v[i] << \"\\n\";\n        k = max(x - res, k);\n    }\n    res += (k + 1) / 2;\n    cout << res << \"\\n\";\n}\n\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n\n    int t; cin >> t;\n    while (t --)\n    {\n        int n; cin >> n;\n        for (int i = 1; i <= n; i ++) g[i].clear();\n        for (int i = 2; i <= n; i ++)\n        {\n            int fa; cin >> fa;\n            g[fa].push_back(i);\n        }\n        bfs();\n    }\n    return 0;\n}\n \t      \t  \t\t \t   \t\t\t \t\t\t \t\t\t\t\t"
}