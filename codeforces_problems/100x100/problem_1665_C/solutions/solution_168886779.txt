{
    "id": 168886779,
    "contestId": 1665,
    "creationTimeSeconds": 1660849261,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "hazard8474"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 22732800,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long int \r\n#define ld long double\r\n#define vl vector<ll>\r\n#define vb vector<bool>\r\n#define vvb vector<vb>\r\n#define vlp vector<pair<ll,ll>>\r\n#define pb push_back\r\n#define mp make_pair\r\n#define fst first\r\n#define sec second\r\n#define usl unordered_set<ll>\r\n#define uml unordered_map<ll,ll>\r\n#define vvl vector<vl>\r\n#define bsr(x,n) binary_search(x.begin(), x.end(), n)\r\n\r\n\r\n\r\nusing namespace std;\r\n\r\nstruct pair_hash {\r\n    inline std::size_t operator()(const std::pair<ll,ll> & v) const {\r\n        ll x = v.fst, y = v.sec;\r\n        return ((x + y)*(x + y + 1)/2) + y;\r\n    }\r\n};\r\n\r\nll inf = numeric_limits<ll>::max(), M = 1000000007;\r\nconst ll MAXN = 200005;\r\n\r\nll binpow(ll a, ll b) {\r\n    if (b == 0)\r\n        return 1;\r\n    ll res = binpow(a, b / 2);\r\n    if (b % 2)\r\n        return ((((res%M)*(res%M))%M) * (a%M))%M;\r\n    else\r\n        return ((res%M)* (res%M))%M;\r\n}\r\n\r\nvoid dfs(ll x, vb& marked, vvl& g, vl& sib) {\r\n    marked[x] = true;\r\n    ll cnt = 0;\r\n    for (ll  nbr: g[x]) {\r\n        if (!marked[nbr]) {\r\n            dfs(nbr,marked,g,sib);\r\n            cnt++;\r\n        }\r\n    }\r\n    if (cnt > 0 ) sib.pb(cnt);\r\n}\r\n\r\nbool yes(vl& sib, ll z, vl& pf) {\r\n    //cout<<z<<\" \";\r\n    auto it = upper_bound(sib.begin(), sib.end(), z);\r\n    if (it == sib.end()) {\r\n        //cout<<\"yes\\n\";\r\n        return true;\r\n    }\r\n    ll ind = it-sib.begin();\r\n    ll ns = sib.size();\r\n    ll ex = pf[ns] - pf[ind] - (ns-ind)*z;\r\n    //if (ex <= z-ns) cout<<\"yes\\n\";\r\n    return ex <= z-ns;\r\n}\r\n\r\n\r\nvoid solve() {\r\n    ll n,inp;\r\n    cin>>n;\r\n    vvl g(n+1);\r\n    for (ll i = 2; i <= n; i++) {\r\n        cin>>inp;\r\n        g[i].pb(inp);\r\n        g[inp].pb(i);\r\n    }\r\n    vb marked(n+1, false);\r\n    vl sib;\r\n    sib.pb(1);\r\n    dfs(1,marked,g,sib);\r\n    sort(sib.begin(), sib.end(), greater<ll>());\r\n    for (ll i = 0; i < sib.size(); i++) sib[i] += i;\r\n    sort(sib.begin(), sib.end());\r\n    \r\n    ll ns = sib.size();\r\n    vl pf(ns+1);\r\n    pf[0] = 0;\r\n    for (ll i = 1; i <= ns; i++) pf[i] = pf[i-1]+sib[i-1];\r\n    \r\n    ll lo = 0, hi = 200010, mans = inf;\r\n    while (lo < hi) {\r\n        ll mid = (lo+hi)/2;\r\n        if (yes(sib,mid,pf)) {\r\n            mans = min(mans,mid);\r\n            hi = mid-1;\r\n        }\r\n        else lo = mid+1;\r\n        \r\n        if ((lo == hi) && yes(sib,lo,pf)) mans = min(mans,lo); \r\n    }\r\n    \r\n    cout<<mans<<\"\\n\";\r\n}\r\n\r\nint main()\r\n{\r\n    \r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n    \r\n    ll t;\r\n    cin>>t;\r\n    while(t--) solve();\r\n}"
}