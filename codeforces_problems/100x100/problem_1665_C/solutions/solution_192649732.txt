{
    "id": 192649732,
    "contestId": 1665,
    "creationTimeSeconds": 1675794488,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "rinku11"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 2457600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint ans;\r\n\r\nvoid proc(vector<int>& a) {\r\n    if (a.empty()) return;\r\n    int n = a.size();\r\n    int last = 0;\r\n    for (int i = 0; i < n; ++i) {\r\n        if (a[i] == a[0]) {\r\n            last = i;\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n    --a[last];\r\n    for (int i = 0; i < n; ++i) --a[i];\r\n    ++ans;\r\n    while (!a.empty() && a.back() <= 0) {\r\n        a.pop_back();\r\n    }\r\n    proc(a);\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n    int T;\r\n    cin >> T;\r\n    while (T --> 0) {\r\n        int n;\r\n        cin >> n;\r\n        vector<int> a(n);\r\n        ans = 0;\r\n        for (int i = 1; i < n; ++i) {\r\n            int x;\r\n            cin >> x;\r\n            ++a[--x];\r\n        }\r\n        a.emplace_back(1);\r\n        sort(a.rbegin(), a.rend());\r\n        while (!a.empty() && a.back() <= 0) a.pop_back();\r\n        n = a.size();\r\n        for (int i = 0; i < n; ++i) {\r\n            a[i] = a[i] - (n - i);\r\n            ++ans;\r\n        }\r\n        sort(a.rbegin(), a.rend());\r\n        while (!a.empty() && a.back() <= 0) a.pop_back();\r\n        proc(a);\r\n        cout << ans << '\\n';\r\n    }\r\n    return 0;\r\n}"
}