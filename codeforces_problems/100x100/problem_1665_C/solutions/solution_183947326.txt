{
    "id": 183947326,
    "contestId": 1665,
    "creationTimeSeconds": 1670223479,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "esmay_hridoy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define eb emplace_back \r\n#define umap unordered_map\r\n#define pi acos(-1)\r\n#define ll long long\r\n#define pb push_back\r\n#define pf push_front\r\n#define ins insert\r\n#define ppb pop_back\r\n#define ppf pop_front\r\n#define SORT(a) sort(a.begin(),a.end());\r\n#define SORTg(a) sort(a.begin(),a.end(),greater<ll>());\r\n#define REV(a) reverse(a.begin(),a.end());\r\n#define FOR(it,vc) for(auto it = vc.begin();it= vc.end();it++;)\r\n#define ff first\r\n#define ss second\r\n#define fastio {ios_base::sync_with_stdio(false);cin.tie(NULL);}\r\n#define f_inout freopen(\"input.txt\",\"r\",stdin);freopen(\"output.txt\",\"w\",stdout);\r\n#define nl \"\\n\"\r\n\r\nbool flag,fl;\r\n\r\n\r\nll a,b,c,d,e,g,h,i,j,k,l,m,n,o,q,p,r,ind,t,u,v,w,s,x,y,z,cnt,ans,sum,sz,num_comp,bp,dif,cas=1;\r\n#define Case cout<<\"Case \"<<cas<<\": \";cas++;\r\nll pw(ll n,ll p){ll mn=1;if(p==0)return 1;for(ll z=0;z<p;z++){mn*=n;}return mn;}\r\n\r\nll lo,hi,mid;\r\n\r\nstring str,s1,s2;\r\n/// bit masking\r\nbool check_bit(ll mask,ll bit){return mask & ((ll)1<<bit);}\r\nll setbit(ll mask,ll bit){ return mask | (1<<bit) ; }\r\nll clearbit(ll mask,ll bit){return mask & ~(1<<bit);}\r\nll togglebit(ll mask,ll bit){return mask ^ (1<<bit);}\r\nll bitno(ll mask) {return (ll)__builtin_popcount(mask);}\r\n/// bit masking\r\n\r\n\r\n\r\n\r\nint main()\r\n{\r\n    fastio;\r\n\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.cpp\", \"r\", stdin);\r\n    //freopen(\"output.txt\" , \"w\" , stdout);\r\n#endif\r\n    \r\n    cin>>t;\r\n    \r\n    while(t--){\r\n        cin>>n;\r\n        ll cnt_n[n+4];\r\n        memset(cnt_n,0,sizeof(cnt_n));\r\n        for(i=2;i<=n;i++){\r\n            cin>>x;\r\n            cnt_n[x]++;\r\n        }\r\n        vector<ll>vc;\r\n        ans=0;\r\n        for(i=1;i<=n;i++){\r\n            if(cnt_n[i]==0)continue;\r\n            x=cnt_n[i]-1;\r\n            vc.pb(x);\r\n            ans++;\r\n        }\r\n        sort(vc.rbegin(),vc.rend());\r\n\r\n        cnt=ans-1;\r\n        for(i=0;i<ans;i++){\r\n            if(cnt>vc[i]){\r\n                vc[i]-=vc[i];\r\n                continue;\r\n            }\r\n            vc[i]-=cnt;\r\n            cnt--;\r\n        }\r\n        sort(vc.rbegin(),vc.rend());\r\n        while(!vc.empty()){\r\n            x=vc.back();\r\n            if(x==0){\r\n                vc.ppb();\r\n                continue;\r\n            }\r\n            else{\r\n                break;\r\n            }\r\n        }\r\n        if(vc.empty()){\r\n            ans++;\r\n            cout<<ans<<endl;\r\n            continue;\r\n        }\r\n        cnt=0;\r\n        ll rem=0;\r\n        for(auto x:vc){\r\n            if(x<=cnt)continue;\r\n            x-=cnt;\r\n            cnt+=(x/2);\r\n            //if(rem)rem--;\r\n            rem+=(x%2);\r\n            \r\n            \r\n        }\r\n        ans+=cnt;\r\n        if(cnt < rem && cnt){\r\n            //rem--;\r\n            ans++\r\n        }\r\n        ans++;\r\n        cout<<ans<<endl;\r\n        \r\n    }\r\n    return 0;\r\n}"
}