{
    "id": 212472999,
    "contestId": 1665,
    "creationTimeSeconds": 1688676330,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "MOD-Essam"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 6963200,
    "source": "#include<bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#define ll long long\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\ntypedef pair<int, int> node;\r\ntypedef tree<node, null_type, less<node>,rb_tree_tag, tree_order_statistics_node_update> ordered_set;\r\nconst int N=3e5+5;\r\nconst ll MOD=1e9+7,MAX=1e18;\r\nconst double ep=1e-6, pi=3.14159265359;\r\nlong long inv(long long a, long long b=MOD){\r\n    return 1<a ? b - inv(b%a,a)*b/a : 1;\r\n}\r\nint dx[8] = { 1, 0, -1, 0, -1, 1, -1, 1 };\r\nint dy[8] = { 0, 1, 0, -1, -1, 1, 1, -1 };\r\nll n,m=0,k;\r\nvoid fastio()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n}\r\nll arr[N];\r\nll freq[N];\r\nvector<int>v;\r\nbool good(int mid)\r\n{\r\n  ll t=0;\r\n  t=v.size();\r\n  for(auto x:v)\r\n  {\r\n    if(x>mid)t+=-mid+(x);\r\n  }\r\n  // cout<<t<<\" \"<<mid<<'\\n';\r\n  return t<=mid;\r\n}\r\nvoid fn()\r\n{\r\n    cin>>n;\r\n    freq[0]=1;\r\n    for(int i=1;i<n;i++)\r\n    {\r\n      int x;\r\n      cin>>x;\r\n      freq[x]++;\r\n    }\r\n    for(int i=0;i<=n;i++)\r\n    {\r\n      if(freq[i])\r\n      {\r\n        v.push_back(freq[i]);\r\n      }\r\n    }\r\n    sort(v.begin(),v.end(),greater<int>());\r\n    int l=0,r=n+2,mid;\r\n    while(l+1<r)\r\n    {\r\n      mid=(l+r)/2;\r\n      if(good(mid))r=mid;\r\n      else l=mid;\r\n    }\r\n    cout<<r<<'\\n';\r\n    v.clear();\r\n    for(int i=1;i<=n;i++)freq[i]=0;\r\n}\r\nint main()\r\n{\r\n    fastio();\r\n    int t=1;\r\n    cin>>t;\r\n    while(t--)fn();\r\n    return 0;\r\n}\r\n"
}