{
    "id": 155913824,
    "contestId": 1665,
    "creationTimeSeconds": 1651751649,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "LeeT"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 3174400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int N =  2e5 + 5;\r\nint t , n;\r\n\r\nint main()\r\n{\r\n    cin >> t;\r\n    while(t--)\r\n    {\r\n        cin >> n;\r\n        vector<int>cnt(n);//\u9884\u5148\u5f00N\r\n        for(int i = 0 ; i < n - 1 ; i++)\r\n        {\r\n            int x ; cin >> x;\r\n            cnt[x - 1]++;\r\n        }\r\n        cnt.push_back(1);\r\n        sort(cnt.begin() , cnt.end() , greater<int>());\r\n        while(cnt.back() == 0)cnt.pop_back();\r\n        int ans = cnt.size();\r\n        priority_queue<int>que;\r\n        for(int i = 0 ; i < cnt.size() ; i++)que.push(cnt[i] + i);\r\n        while(ans < que.top())\r\n        {\r\n            ans++;\r\n            que.push(que.top() - 1);\r\n            que.pop();\r\n        }\r\n        cout << ans << endl;\r\n    }\r\n    return 0;\r\n}"
}