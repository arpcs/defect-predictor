{
    "id": 207338923,
    "contestId": 1665,
    "creationTimeSeconds": 1685098015,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "mohamed_mosalm"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\ntypedef tree<int, null_type, less<>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\r\n#define ll long long\r\nconst int dx[8] = { 0, 0, 1, -1, 1, -1, -1, 1 }, dy[8] = { 1, -1, 0, 0, 1, -1, 1, -1 };\r\nconst int mod = 1000000007 ;  //   1000000007,   998244353;\r\n\r\nconst int N=2e5+5;\r\n\r\nvoid _() {\r\n    int n,a;\r\n    cin>>n;\r\n    map<int,int>mp;\r\n    for(int i=1;i<n;++i){\r\n        cin>>a;\r\n        mp[a]++;\r\n    }\r\n    int tot=mp.size();\r\n    vector<int>v(tot);\r\n    int idx=0;\r\n    for(auto &[x,y]:mp){\r\n        v[idx++]=y-tot-2;\r\n    }\r\n    int ans=tot;\r\n    sort(v.rbegin(), v.rend());\r\n    int d=0;\r\n    for(int i=0;i<tot;++i){\r\n        v[i]-=d;\r\n        if(v[i]<=0)continue;\r\n        ans+=v[i];\r\n        d+=v[i];\r\n    }\r\n    cout<<ans+1<<'\\n';\r\n}\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);cin.tie(NULL); cout.tie(NULL);\r\n    int T = 1; cin >> T;\r\n    while (T--)\r\n        _();\r\n    return 0;\r\n}"
}