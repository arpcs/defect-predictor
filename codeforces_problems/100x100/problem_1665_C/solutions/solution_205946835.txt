{
    "id": 205946835,
    "contestId": 1665,
    "creationTimeSeconds": 1684131394,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "jetz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 14643200,
    "source": "// Created by jetz at 2023-05-15 05:50:05\r\n\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\ntemplate<typename T>\r\nusing ordered_set= tree<T, null_type,less<T>, rb_tree_tag,tree_order_statistics_node_update>;\r\n// 1. order_of_key(k) : number of elements strictly lesser than k\r\n// 2. find_by_order(k) : k-th element in the set\r\n#define ll long long\r\n#define int long long \r\n#define mod 1000000007\r\n#define prec(n) fixed<<setprecision(n)\r\n#define f first\r\n#define s second\r\n#define getunique(v) {sort(v.begin(), v.end()); v.erase(unique(v.begin(), v.end()), v.end());}\r\nll lcm(ll a, ll b) {return (a*b)/__gcd(a,b);}\r\nll add(ll x,ll y){ll res=x+y;return(res>=mod ? res-mod:res);}\r\nll mul(ll x,ll y){ll res=x*y;return(res>=mod ? res%mod:res);}\r\nll sub(ll x,ll y){ll res=x-y;return(res<0 ? res+mod:res);}\r\nll power(ll x,ll y){ll res=1;x%=mod;while(y){if(y&1)res=mul(res,x);y>>=1;x=mul(x,x);}return res;}\r\nll mod_inv(ll x){return power(x,mod-2);}\r\nll PbyQmod(ll p,ll q){\r\n\t//function to calculate P.Q^-1 % mod....Q has to be coprime with mod all times\r\n\tll expo = mod-2;while(expo){if(expo&1){p=(p*q)%mod;}q=(q*q)%mod;expo>>=1;}return p;\r\n}\r\nclass DSU\r\n{   public : \r\n    vector < int >  parent, sz;\r\n    DSU(int n){\r\n        parent = vector < int > (n + 1); \r\n        sz = vector < int > (n + 1, 1); \r\n        iota(parent.begin(), parent.end(), 0);  \r\n    }\r\n\tint find_set(int i)\r\n\t{   if(i == parent[i])return i; \r\n        else return parent[i] = find_set(parent[i]); \r\n    }\r\n    void union_sets(int i, int j)\r\n    {   i = find_set(i); \r\n        j = find_set(j);\r\n        if(i  == j)return; \r\n        if(sz[i] > sz[j])swap(i, j);  \r\n        parent[i] = j; \r\n        sz[j] += sz[i]; \r\n    }\r\n}; \r\nvoid solve(){\r\n    int n;cin>>n;\r\n    map<int,int>mp;\r\n\tmp[0] = 1;\r\n    for(int i=0;i<n-1;i++){\r\n    \tint x;cin>>x;mp[x]+=1;\r\n    }\r\n\tvector<int>A(0);\r\n\tfor(auto z:mp){\r\n\t\tif(z.s > 0){\r\n\t\t\tA.push_back(z.s);\r\n\t\t}\r\n\t}\r\n\tint ans = (int)A.size();\r\n\tfor(auto x:A){\r\n\t\tif(x > (int)A.size()){\r\n\t\t\tans = max(ans,(int)A.size() + ((x-(int)A.size())+1)/2);\r\n\t\t}\r\n\t}\r\n\tcout<<ans<<endl;\r\n\t\r\n}\r\n \r\nsigned main(){\r\n\tios::sync_with_stdio(0);\r\n\tcin.tie(0);\r\n  \r\n\tint t=1,i=1;;\r\n\tcin>>t;\r\n\twhile(t--){\r\n\t//\tcout<<\"Case #\"<<i<<\": \";\r\n\t\tsolve();\r\n\t\t++i;\r\n\t}\r\n}"
}