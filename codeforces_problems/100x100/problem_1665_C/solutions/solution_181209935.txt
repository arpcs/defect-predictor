{
    "id": 181209935,
    "contestId": 1665,
    "creationTimeSeconds": 1668607259,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "IPRIT"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 60928000,
    "source": "#include <iostream>\r\n#include <array>\r\n#include <deque>\r\n#include <algorithm>\r\n#include <map>\r\n\r\nusing namespace std;\r\n\r\nconst int N = 1e5;\r\n\r\narray<deque<int>, N> g;\r\ndeque<int> st;\r\narray<bool, N> used;\r\narray<int, N> c;\r\nmap<int, int> m;\r\n\r\nvoid dfs(int v) {\r\n\tused[v] = true;\r\n\tfor (int u : g[v]) {\r\n\t\tif (!used[u]) {\r\n\t\t\tdfs(u);\r\n\t\t\t++c[v];\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvoid solve() {\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0);\r\n\tcout.tie(0);\r\n\tint t;\r\n\tcin >> t;\r\n\tfor (int q = 0; q < t; ++q) {\r\n\t\tint n, v, ans;\r\n\t\tcin >> n;\r\n\t\tfor (int i = 0; i < n; ++i) {\r\n\t\t\tg[i] = {};\r\n\t\t\tused[i] = false;\r\n\t\t\tc[i] = 0;\r\n\t\t}\r\n\t\tfor (int i = 0; i < n - 1; ++i) {\r\n\t\t\tcin >> v;\r\n\t\t\t--v;\r\n\t\t\tg[v].push_back(i + 1);\r\n\t\t}\t\r\n\t\tdfs(0);\r\n\t\tsort(c.begin(), c.begin() + n);\r\n\t\treverse(c.begin(), c.begin() + n);\r\n\t\t/*\r\n\t\tfor (int i = 0; i < n; ++i) {\r\n\t\t\tcout << c[i] << ' ';\r\n\t\t}\r\n\t\tcout << '\\n';\r\n\t\t// */\r\n\t\tint inj = 1;\r\n\t\tfor (int i = 0; i < n; ++i) {\r\n\t\t\tif (c[i]) {\r\n\t\t\t\t++inj;\r\n\t\t\t}\r\n\t\t\t++m[c[i]];\r\n\t\t}\r\n\t\tans = max(inj, c[0]);\r\n\t\t// cout << inj << ' ' << c[0] << '\\n';\r\n\t\twhile (m.size() > 1) {\r\n\t\t\tmap<int, int>::iterator tmp = m.end();\r\n\t\t\t--tmp;\r\n\t\t\tint k = (*tmp).second, e = (*tmp).first;\r\n\t\t\tm.erase((*tmp).first);\r\n\t\t\tm[e - 1] += k;\r\n\t\t\tinj += k;\r\n\t\t\tans = min(ans, max(inj, e - 1));\r\n\t\t\t// cout << inj << ' ' << e - 1 << '\\n';\r\n\t\t}\r\n\t\tcout << ans << '\\n';\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tsolve();\r\n\t/*\r\n\tm[0] = 1;\r\n\tm[1] = 2;\r\n\tm[2] = 3;\r\n\tmap<int, int>::iterator tmp = m.end();\r\n\t--tmp;\r\n\tint k = (*tmp).second;\r\n\tm.erase((*tmp).first);\r\n\ttmp = m.end();\r\n\t--tmp;\r\n\tm[(*tmp).first] += k;\r\n\tfor (auto i : m) {\r\n\t\tcout << i.first << ' ' << i.second << '\\n';\r\n\t}\r\n\t// */\r\n\treturn 0;\r\n}\r\n\n/* Wed Nov 16 2022 17:00:58 GMT+0300 (Moscow Standard Time) */\n"
}