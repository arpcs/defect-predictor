{
    "id": 155518486,
    "contestId": 1665,
    "creationTimeSeconds": 1651416761,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "lucasdinato"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 373,
    "memoryConsumedBytes": 20787200,
    "source": "t = int(input())\r\n\r\nfor i in range(t):\r\n    n = int(input())\r\n    p = [int(value) for value in input().split()]\r\n    \r\n    d = [0] * n\r\n\t\r\n    for i in range(n - 1):\r\n\t    d[p[i] - 1] += 1\r\n\t    \r\n    d.sort()\r\n    l = 0\r\n    r = n*n\r\n\t\r\n    while l <= r:\r\n        s = 0\r\n        c = 1\r\n        m = (l + r) // 2\r\n        \r\n        for i in range(n-1, -1, -1):\r\n            if d[i] == 0:\r\n                break\r\n            c += max(0, s+d[i]-m)\r\n            s += 1\r\n        \r\n        if m - s >= c:\r\n            r = m - 1\r\n        \r\n        else:\r\n            l = m + 1\r\n    \r\n    print(l)"
}