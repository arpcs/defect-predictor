{
    "id": 157998550,
    "contestId": 1665,
    "creationTimeSeconds": 1653225746,
    "relativeTimeSeconds": 4946,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "Kobe303"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1653220800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 1638400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int N = 200005;\r\nint T;\r\nint n, fa[N];\r\nint son[N], ans;\r\n\r\nvoid solve() {\r\n\tscanf(\"%d\", &n);\r\n\tmemset(son + 1, 0, sizeof (int) * n); ans = 1;\r\n\tfor (int i = 2; i <= n; ++i) {\r\n\t\tscanf(\"%d\", &fa[i]), ++son[fa[i]];\r\n\t\tif (son[fa[i]] == 1) ++ans;\r\n\t}\r\n\tsort(son + 1, son + n + 1, [](int x, int y) {\r\n\t\treturn x > y;\r\n\t});\r\n\tfor (int i = 1; i <= n; ++i) son[i] = min(son[i], max(0, son[i] + i - 1 - ans));\r\n\tsort(son + 1, son + n + 1, [](int x, int y) {\r\n\t\treturn x > y;\r\n\t});\r\n//\tfor (int i = 1; i <= n; ++i) printf(\"%d \", son[i]);\r\n//\tprintf(\"\\n\");\r\n\tint p = 0, tmp = 0;\r\n\twhile (1) {\r\n\t\twhile (p < n && son[p + 1] - tmp == son[1]) ++p;\r\n\t\tif (son[1] <= p) {\r\n\t\t\tans += son[1];\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\telse son[1] -= p + 1, tmp += p;\r\n\t}\r\n\tprintf(\"%d\\n\", ans + tmp);\r\n}\r\n\r\nint main() {\r\n\tscanf(\"%d\", &T);\r\n\twhile (T--) solve();\r\n\treturn 0;\r\n}"
}