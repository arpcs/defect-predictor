{
    "id": 164623133,
    "contestId": 1665,
    "creationTimeSeconds": 1658067599,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "HyeuShogun"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 3174400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nvoid solve()\r\n{\r\n    int n; cin >> n;\r\n    vector <int> A( n +1,0);\r\n    vector <int> cnt( n + 1, 0);\r\n    for ( int i = 2; i <= n; i++)\r\n    {\r\n        cin >> A[i];\r\n        cnt[A[i]]++;\r\n    }\r\n    sort (cnt.rbegin(), cnt.rend());\r\n    while ( cnt.size() && cnt.back() == 0) cnt.pop_back();\r\n    int ans = cnt.size() + 1;\r\n    int d = 0;\r\n    for ( int i = 0; i < cnt.size(); i++)\r\n    {\r\n        cnt[i] -= ans;\r\n        cnt[i] += d;\r\n        d++;\r\n    }\r\n    while ( cnt.size() >0)\r\n    {\r\n        sort (cnt.rbegin(), cnt.rend());\r\n        while ( cnt.size() && cnt.back() <=0) cnt.pop_back();\r\n        if ( cnt.size() == 0) break;\r\n        ans++;\r\n        for ( int i = 0; i < cnt.size(); i++) if ( cnt[i])cnt[i]--;\r\n        cnt[0] --;\r\n    }\r\n    cout << ans << '\\n';\r\n}\r\nsigned main ()\r\n{\r\n    ios_base::sync_with_stdio(NULL);\r\n    cin.tie(0); cout.tie(0);\r\n    int t; cin >> t;\r\n    while (t--)\r\n    {\r\n        solve();\r\n    }\r\n}\r\n"
}