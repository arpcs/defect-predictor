{
    "id": 21789566,
    "contestId": 274,
    "creationTimeSeconds": 1477469985,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "OmarHashim"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 9113600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define scl(x) scanf(\"%lld\",&x)\r\n#define sc(x)  scanf(\"%d\",&x)\r\n#define ll long long\r\n#define lop(i,n) for(int i=0;i<n;++i)\r\ntypedef pair<int,int> ii;\r\ntypedef pair<ll,ll> pll;\r\n\r\nconst int N=3e5+100;\r\nvector<int> adj[N],topo;\r\nint n,m,Id,vis[N];\r\nvector<ii> vec;\r\nbool dfs(int cur){\r\n\tif(vis[cur]==1)return 1;\r\n\tif(vis[cur]==2)return 0;\r\n\tvis[cur]=1;\r\n\tlop(i,adj[cur].size())\r\n\t\tif(dfs(adj[cur][i]))return 1;\r\n\tvis[cur]=2;\r\n\ttopo.push_back(cur);\r\n\treturn 0;\r\n}\r\nint main(){\r\n#ifndef ONLINE_JUDGE\r\n\tfreopen(\"i.txt\",\"r\",stdin);\r\n#endif\r\n\tsc(n),sc(m);Id=m;\r\n\tlop(i,n){\r\n\t\tvec.clear();\r\n\t\tlop(j,m){\r\n\t\t\tint v;sc(v);\r\n\t\t\tif(~v)vec.push_back(ii(v,j));\r\n\t\t}\r\n\t\tsort(vec.begin(),vec.end());\r\n\t\tlop(j,vec.size()){\r\n\t\t\tadj[Id].push_back(vec[j].second);\r\n\t\t\tadj[vec[j].second].push_back(Id+1);\r\n\t\t\tif(j+1<vec.size()&&vec[j+1].first!=vec[j].first)Id++;\r\n\t\t}\r\n\t\tId+=2;\r\n\t}\r\n\tlop(i,Id)\r\n\t\tif(dfs(i))return puts(\"-1\");\r\n\treverse(topo.begin(),topo.end());\r\n\tlop(i,Id){\r\n\t\tif(topo[i]<m)printf(\"%d \",topo[i]+1);\r\n\t}\r\n}\r\n"
}