{
    "id": 4909733,
    "contestId": 274,
    "creationTimeSeconds": 1382856379,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "yutaka1999"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++0x",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 7475200,
    "source": "#include <cstdio>\r\n#include <cstdlib>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <queue>\r\n#define SIZE 200005\r\n\r\nusing namespace std;\r\ntypedef pair <int,int> P;\r\n\r\nvector <int> vec[SIZE];\r\nvector <P> vx;\r\nint ans[SIZE];\r\nint deg[SIZE];\r\nbool use[SIZE];\r\n\r\nint main()\r\n{\r\n\tint n,m;\r\n\tscanf(\"%d %d\",&n,&m);\r\n\tint unknown=m;\r\n\tfor(int i=0;i<n;i++)\r\n\t{\r\n\t\tvx.clear();\r\n\t\tfor(int j=0;j<m;j++)\r\n\t\t{\r\n\t\t\tint a;\r\n\t\t\tscanf(\"%d\",&a);\r\n\t\t\tif(a!=-1) vx.push_back(P(a,j));\r\n\t\t}\r\n\t\tsort(vx.begin(),vx.end());\r\n\t\tbool up=true;\r\n\t\tfor(int j=0;j<vx.size();)\r\n\t\t{\r\n\t\t\tint now=vx[j].first;\r\n\t\t\tfor(;j<vx.size()&&now==vx[j].first;j++)\r\n\t\t\t{\r\n\t\t\t\tint id=vx[j].second;\r\n\t\t\t\tif(!up)\r\n\t\t\t\t{\r\n\t\t\t\t\tvec[unknown].push_back(id);\r\n\t\t\t\t\tdeg[id]++;\r\n\t\t\t\t}\r\n\t\t\t\tvec[id].push_back(unknown+1);\r\n\t\t\t\tdeg[unknown+1]++;\r\n\t\t\t}\r\n\t\t\tup=false;\r\n\t\t\tunknown++;\r\n\t\t}\r\n\t}\r\n\tint pos=0;\r\n\tqueue <int> que;\r\n\tfor(int i=0;i<m;i++)\r\n\t{\r\n\t\tif(deg[i]==0&&!use[i])\r\n\t\t{\r\n\t\t\tque.push(i);\r\n\t\t\twhile(!que.empty())\r\n\t\t\t{\r\n\t\t\t\tint v=que.front();que.pop();\r\n\t\t\t\tif(v<m) ans[pos++]=v;\r\n\t\t\t\tuse[v]=true;\r\n\t\t\t\tfor(int i=0;i<vec[v].size();i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tint to=vec[v][i];\r\n\t\t\t\t\tdeg[to]--;\r\n\t\t\t\t\tif(deg[to]==0) que.push(to);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif(pos==m)\r\n\t{\r\n\t\tfor(int i=0;i<m;i++)\r\n\t\t{\r\n\t\t\tif(i!=0) printf(\" \");\r\n\t\t\tprintf(\"%d\",ans[i]+1);\r\n\t\t}puts(\"\");\r\n\t}\r\n\telse puts(\"-1\");\r\n\treturn 0;\r\n}\r\n"
}