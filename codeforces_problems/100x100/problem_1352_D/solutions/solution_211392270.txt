{
    "id": 211392270,
    "contestId": 1352,
    "creationTimeSeconds": 1688016138,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1352,
        "index": "D",
        "name": "Alice, Bob and Candies",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 1352,
        "members": [
            {
                "handle": "NILOYC221023"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1589034900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "///   ***   ---   ||         In the name of ALLAH        |||   ---   ***   ///\r\n\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n\r\n#define dbg(args...) do {cerr << #args << \" : \"; faltu(args); } while(0)\r\nvoid faltu () {            cerr << endl;}\r\ntemplate < typename T,  typename ... hello>void faltu( T arg, const hello &... rest) {cerr << arg << ' ';faltu(rest...);}\r\n\r\nconst int mx = 1e3+123;\r\nint a[mx];\r\n\r\nint main()\r\n{\r\n    optimize();\r\n\r\n\r\n    int t;\r\n    cin >> t;\r\n\r\n    while ( t-- ) {\r\n        int n;\r\n        cin >> n;\r\n        for ( int i = 1; i <= n; i++ ) cin>> a[i];\r\n\r\n        int aliceVal = 0, bobVal = 0;\r\n        int alicePrev = 0, bobPrev = 0;\r\n        int aliceTurn = 0, bobTurn = 0;\r\n        int play = 0;\r\n\r\n        int l = 1, r = n;\r\n        aliceTurn = 1;\r\n\r\n        while ( l <= r ) {\r\n            if ( aliceTurn == 1 ) {\r\n                alicePrev = 0;\r\n\r\n                while ( l <= r && alicePrev <= bobPrev ) {\r\n                    alicePrev += a[l];\r\n                    aliceVal += a[l];\r\n                    l++;\r\n                }\r\n\r\n                aliceTurn = 0;\r\n                bobTurn = 1;\r\n            }\r\n\r\n            else {\r\n                bobPrev = 0;\r\n\r\n                while ( l <= r && bobPrev <= alicePrev ) {\r\n                    bobPrev += a[r];\r\n                    bobVal += a[r];\r\n                    r--;\r\n                }\r\n\r\n                bobTurn = 0;\r\n                aliceTurn = 1;\r\n            }\r\n            play++;\r\n        }\r\n\r\n        cout << play << \" \" << aliceVal << \" \" << bobVal << endl;\r\n    }\r\n\r\n\r\n\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\u00a0"
}