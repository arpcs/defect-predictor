{
    "id": 233259871,
    "contestId": 1352,
    "creationTimeSeconds": 1700292592,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1352,
        "index": "D",
        "name": "Alice, Bob and Candies",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 1352,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1589034900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include<cstdio>\n#include<iostream>\nusing namespace std;\n\nint main()\n{\n\tint t;\n\tlong long int n, a[10100];\n\tcin >> t;\n\twhile (t--)\n\t{\n\n\t\tcin >> n;\n\t\tfor (int i = 0; i < n; i++)\n\t\t{\n\t\t\tcin >> a[i];\n\t\t}\n\t\tint sum[2] = {a[0],0};\n\t\t\n\t\tint m = 1;\n\t\tint left1 = 1, right1 = n - 1, flag = 'b', a1 = a[0], b1 = 0;\n\t\twhile (left1 <= right1)\n\t\t{\n\n\t\t\tif (flag == 'a')\n\t\t\t{\n\n\t\t\t\twhile ((sum[1] >= sum[0])&&(left1 <= right1))\n\t\t\t\t{\n\t\t\t\t\tsum[0] += a[left1++];\n\t\t\t\t\tif ((left1 == right1)&&(sum[1]>=sum[0]))\n\t\t\t\t\t{\n\t\t\t\t\t\t\n\t\t\t\t\t\tsum[0] += a[left1++];\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t}\n\t\t\t\tflag = 'b';\n\t\t\t\tm++;\n\t\t\t\ta1 += sum[0];\n\t\t\t\tsum[1] = 0;\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\twhile ((sum[0] >= sum[1])&&(left1 <= right1))\n\t\t\t\t{\n\t\t\t\t\tsum[1] += a[right1--];\n\t\t\t\t\tif ((left1 == right1) && (sum[0] >= sum[1]))\n\t\t\t\t\t{\t\n\t\t\t\t\t\tsum[1] += a[right1--];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tflag = 'a';\n\t\t\t\tm++;\n\t\t\t\tb1 += sum[1];\n\t\t\t\tsum[0] = 0;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tprintf(\"%d %d %d\", m, a1, b1);\n\t\t\n\t}\n\treturn 0;\n}\n \t    \t \t\t\t \t \t \t  \t  \t\t \t\t \t\t"
}