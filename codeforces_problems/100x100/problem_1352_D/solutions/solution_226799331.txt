{
    "id": 226799331,
    "contestId": 1352,
    "creationTimeSeconds": 1696541746,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1352,
        "index": "D",
        "name": "Alice, Bob and Candies",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 1352,
        "members": [
            {
                "handle": "Rafael"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1589034900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n  int T;\r\n  cin >> T;\r\n  while (T--) {\r\n    int N; cin >> N;\r\n    vector<int> candies(N);\r\n\r\n    for (auto &c: candies) cin >> c;\r\n\r\n    int L = 0, R = N-1;\r\n    int turns = 0, alice = 0, bob = 0, previous_bob = 0, previous_alice = 0;\r\n    bool alice_turn = true;\r\n\r\n    while (L <= R) {\r\n      if (alice_turn) {\r\n        previous_alice = 0;\r\n        while (previous_alice <= previous_bob and L <= R) {\r\n          previous_alice += candies[L];\r\n          alice += candies[L];\r\n          candies[L] = 0;\r\n          L++;\r\n        }\r\n      } else {\r\n        previous_bob = 0;\r\n        while (previous_bob <= previous_alice and L <= R) {\r\n          bob += candies[R];\r\n          previous_bob += candies[R];\r\n          candies[R] = 0;\r\n          R--;\r\n        }\r\n      }\r\n      alice_turn = !alice_turn;\r\n      turns++;\r\n    }\r\n\r\n    cout << turns << \" \" << alice << \" \" << bob << \"\\n\";\r\n  }\r\n  return 0;\r\n}\r\n"
}