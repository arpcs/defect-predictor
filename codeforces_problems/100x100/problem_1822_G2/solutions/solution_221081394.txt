{
    "id": 221081394,
    "contestId": 1822,
    "creationTimeSeconds": 1693398865,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "Ashish_verma"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 1855,
    "memoryConsumedBytes": 9830400,
    "source": "\r\n\r\n\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n \r\n//<------------------------------FOR USING PBDS------------------------------->\r\n/*\r\n#include <ext/pb_ds/assoc_container.hpp> // Common file\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <functional> // for less\r\n#include <iostream>\r\nusing namespace __gnu_pbds;\r\n \r\ntemplate <typename T>\r\nusing ordered_multiset = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n//ordered_multiset<int> s;\r\n \r\n//Declaring ordered_set\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag,\r\n      tree_order_statistics_node_update>\r\n  ordered_set;\r\n \r\nordered_set s;\r\n \r\n*/\r\n//<-------------------------------PBDS ENDS HERE----------------------------->\r\n \r\n \r\n//#pragma GCC optimize \"trapv\"\r\n#define loop(i,j,k,in)              for(int i=j; i<k; i+=in)\r\n#define rloop(i,j,k,in)             for(int i=j; i>=k; i-=in)\r\n#define mem(a,b)                    memset(a, b, sizeof(a))\r\n#define mod                         1000000007\r\n#define pub                         push_back\r\n#define pob                         pop_back\r\n#define endl                        \"\\n\"\r\n#define int                         long long int\r\n \r\n \r\ntypedef pair<int,int>               pii;\r\ntypedef vector<int>                 vi;\r\ntypedef vector<char>                vc;\r\ntypedef vector<string>              vs;\r\ntypedef vector<pii>                 vii;\r\ntypedef map<int,int>                mii;\r\ntypedef set<int>                    si;\r\n// typedef long long int               ll;\r\n// typedef unsigned long long int      ull;\r\n \r\n \r\n//---------------------SEGMENT TREE IMPLEMENTATION(RANGE MIN QUERY)---------------------->\r\n \r\nvoid buildtree(int s, int e, int idx, vector<int> &arr, vector<int> &tree){\r\n  if(s == e){\r\n    tree[idx] = arr[s];\r\n    return;\r\n  }\r\n  int mid = (s + e)/2;\r\n  buildtree(s, mid, 2*idx, arr, tree);\r\n  buildtree(mid + 1, e, 2*idx + 1, arr, tree);\r\n  tree[idx] = min(tree[2*idx] , tree[2*idx + 1]);\r\n  return;\r\n}\r\n \r\nint query(int ss, int se, int qs ,int qe,int idx, vector<int> &tree){\r\n  if(ss >= qs && se <= qe){\r\n    return tree[idx];\r\n  }\r\n \r\n  if(se < qs || qe < ss){\r\n    return INT_MAX;\r\n  }\r\n \r\n  int mid = (ss + se) /2;\r\n  int la = query(ss, mid , qs, qe, 2*idx, tree);\r\n  int ra = query(mid + 1, se, qs, qe, 2*idx + 1, tree);\r\n  return min(la, ra);\r\n}\r\n \r\nvoid update(int ss, int se, int i, int idx,int increment, vector<int> &tree){\r\n  if(i < ss || i > se) return;\r\n  if(ss == se){\r\n    tree[idx] += increment;\r\n    return;\r\n  }\r\n  int mid = (ss + se) /2;\r\n  update(ss, mid, i, 2*idx,increment, tree);\r\n  update(mid + 1, se, i , 2*idx + 1, increment, tree);\r\n  tree[idx] = min(tree[2*idx], tree[2*idx + 1]);\r\n  return; \r\n}\r\n \r\n//----------------------------SEGMENT TREE ENDS HERE-------------------------------\r\n \r\n//--------------------------------CALCULATE POWER HERE------------------------\r\nint fastpow(int a, int b, int m)\r\n{\r\n  long long res = 1;\r\n  while (b)\r\n  {\r\n    if (b & 1)\r\n      res = res * a;\r\n    res %= m;\r\n    a = (1ll * a * a) % m;\r\n    b = b >> 1;\r\n  }\r\n  return res;\r\n}\r\n \r\n \r\n//------------------CALCULATE MODULO INVERSE USING FERMET'S LITTLE THEOREM-----\r\nint inverse(int a, int m){\r\n  return fastpow(a, m-2, m);\r\n}\r\n \r\n \r\n//-----------------DISJOINT SET UNION-------------------------------------\r\nclass DSU\r\n{\r\npublic:\r\n  vector<int> parent;\r\n  vector<int> rank;\r\n  vector<int> loop;\r\n  int cc;\r\n  DSU(int n)\r\n  {\r\n    parent.resize(n+1);\r\n    rank.resize(n+1);\r\n    loop.resize(n+1);\r\n    cc = n;\r\n    for (int i = 0; i <= n; i++)\r\n    {\r\n      parent[i] = i;\r\n      rank[i] = 1;\r\n      loop[i] = false;\r\n    }\r\n  }\r\n  int get(int x)\r\n  {\r\n    return parent[x] = parent[x] == x ? x : get(parent[x]);\r\n  }\r\n  void merge(int l, int r)\r\n  {\r\n    l = get(l);\r\n    r = get(r);\r\n    if (l == r){\r\n      loop[l] = true;\r\n        return;\r\n    }\r\n    if(rank[l] > rank[r]){\r\n      parent[r] = l;\r\n      rank[l]+= rank[r];\r\n    }else{\r\n      parent[l] = r;\r\n      rank[r] += rank[l];\r\n    }\r\n    return;\r\n  }\r\n};\r\n\r\n//---------------------------Z-Array------------------------------- \r\nvoid zCompute(string &s, vector<int> &z){\r\n  int l = 0, r = 0;\r\n  int n = s.size();\r\n  \r\n  for(int i=1; i<n; i++){\r\n    if(i<=r){\r\n      z[i] = min(z[i-l], r - i + 1);\r\n    }\r\n    \r\n    while(i+z[i] < n && s[i+z[i]] == s[z[i]]) z[i]++;\r\n    \r\n    if(i+z[i] - 1 > r){\r\n      l = i, r = i + z[i] - 1;\r\n    }\r\n  }\r\n  return;\r\n}\r\n\r\n \r\nclass point{\r\npublic:\r\n  int x, y;\r\n};\r\n \r\nint dot(point &p, point &q, point &r){\r\n  int x1= q.x - p.x;\r\n  int y1 = q.y - p.y;\r\n  int x2 = r.x - q.x;\r\n  int y2 = r.y - q.y;\r\n  return x1 * x2 + y1 * y2;\r\n}\r\n \r\nint cross(point &p, point &q, point &r){\r\n  int x1= q.x - p.x;\r\n  int y1 = q.y - p.y;\r\n  int x2 = r.x - q.x;\r\n  int y2 = r.y - q.y;\r\n  return x1 * y2 - y1 * x2;\r\n}\r\n \r\n \r\n \r\n\r\n\r\nint32_t main(){\r\n  ios::sync_with_stdio(false);\r\n  cin.tie(0);\r\n  // #ifndef ONLINE_JUDGE\r\n   //  freopen(\"input.txt\",\"r\",stdin);\r\n   //  freopen(\"output.txt\",\"w\",stdout);\r\n  // #endif\r\n  int tt = 1;\r\n  cin >> tt;\r\n  while(tt--){\r\n    int n;\r\n      cin >> n;\r\n      vector<int> a(n);\r\n      map<int, int> cnt;\r\n      for (int i = 0; i < n; ++i) {\r\n          cin >> a[i];\r\n          ++cnt[a[i]];\r\n      }\r\n      // cout << cnt[7] << endl;\r\n      int ans = 0;\r\n      int MAX_VAL = 1e9;\r\n      int K = 1e6;\r\n      // for(auto &it: cnt)cout << it.first  <<\" \" << it.second <<\", \";\r\n      //   cout << endl;\r\n      for (int i = 0; i < n; ++i) {\r\n          ans += (cnt[a[i]] - 1) * (cnt[a[i]] - 2);\r\n      }\r\n      for (auto el : cnt) {\r\n          int num = el.first;\r\n          int val = el.second;\r\n          if (num > K) {\r\n              for (int b = 2; b * num <= MAX_VAL; ++b) {\r\n                  if (num % b == 0 && cnt.find(num / b) != cnt.end() && cnt.find(num * b) != cnt.end()) {\r\n                      ans += (int)(cnt[num / b]) * (cnt[num * b]) * val;\r\n                  }\r\n              }\r\n          } else {\r\n              for (int b = 2; b * b <= num; ++b) {\r\n                  if (num % b == 0) {\r\n                      if ((int)num * b <= (int)MAX_VAL && cnt.find(num / b) != cnt.end() && cnt.find(num * b) != cnt.end()) {\r\n                          ans += (int)(cnt[num / b]) * (cnt[num * b]) * val;\r\n                      }\r\n                      if (b * b != num) {\r\n                          if ((int)num * num / b <= (int)MAX_VAL && cnt.find(b) != cnt.end() && cnt.find(num / b * num) != cnt.end()) {\r\n                              ans += (int)(cnt[b]) * (cnt[num / b * num]) * val;\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n              if (num > 1 && (int)num * num <= (int)MAX_VAL && cnt.find(1) != cnt.end() && cnt.find(num * num) != cnt.end()) {\r\n                  ans += (int)(cnt[1]) * (cnt[num * num]) * val;\r\n              }\r\n          }\r\n      }\r\n      cout << ans << endl ;\r\n  }\r\n \r\n  return 0;\r\n}\r\n\r\n    "
}