{
    "id": 209076713,
    "contestId": 1822,
    "creationTimeSeconds": 1686302552,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "kimmoqt"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 1840,
    "memoryConsumedBytes": 161177600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\n\r\nconst int A = 2e7 + 5, MX = 1e9, inf = 1e9;\r\n\r\nint cnt[A];\r\nint sq[A];\r\n\r\nint main() {\r\n      ios_base::sync_with_stdio(0); cin.tie(0);\r\n\r\n      for(ll i = 1; i * i < A; i++) {\r\n            sq[i * i] = i;\r\n      }\r\n\r\n      int t;\r\n      cin >> t;\r\n      while(t--) {\r\n            int n;\r\n            cin >> n;\r\n            vector<int> a(n);\r\n\r\n            vector<pair<ll, ll>> v;\r\n            for(int i = 0; i < n; i++) {\r\n                  cin >> a[i];\r\n                  if(a[i] < A) cnt[a[i]]++;\r\n            }\r\n\r\n            sort(a.begin(), a.end());\r\n\r\n            for(int i = 0; i < n; i++) {\r\n                  if(i == 0 || a[i] != a[i - 1]) {\r\n                        v.push_back({a[i], 1});\r\n                  } else {\r\n                        v.back().second++;\r\n                  }\r\n            }\r\n\r\n            ll ans = 0;\r\n\r\n            for(auto [x, c] : v) {\r\n                  if(c < 3) continue;\r\n                  ans += 1LL * c * (c - 1) * (c - 2);\r\n            }\r\n\r\n            for(int k = 2; k <= 50; k++) {\r\n                  for(auto [x, c] : v) {\r\n                        if(x % k) continue;\r\n                        if(1ll * x * k > MX) break;\r\n\r\n                        auto l = lower_bound(v.begin(), v.end(), make_pair(x / k, 1ll * -inf));\r\n                        auto r = lower_bound(v.begin(), v.end(), make_pair(x * k, 1ll * -inf));\r\n\r\n                        if(r != v.end() && l->first == x / k && r->first == x * k) {\r\n                              ans += 1LL * c * l->second * r->second;\r\n                        }\r\n                  }\r\n            }\r\n            \r\n            for(auto [x, c] : v) {\r\n                  for(int k = 2; k <= 1000; k++) {\r\n                        if(x % (k * k) == 0) {\r\n                              // use k\r\n                              if(k > 50) ans += 1LL * c * cnt[x / k] * cnt[x / (k * k)];\r\n                        }\r\n                  }\r\n\r\n                  // a^2 * b * c * d * .... , a > 10^3\r\n                  if(x > 1) {\r\n                        int t = x;\r\n                        for(int k = 2; k <= 1000; k++) {\r\n                              while(t % k == 0) t /= k;\r\n                        }\r\n\r\n                        if(sq[t] > 50) ans += c * cnt[x / sq[t]] * cnt[x / t];\r\n                  }\r\n            }\r\n            \r\n            cout << ans << '\\n';\r\n\r\n            for(int i = 0; i < n; i++) {\r\n                  if(a[i] < A) cnt[a[i]]--;\r\n            }     \r\n      }\r\n}     "
}