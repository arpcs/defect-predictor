{
    "id": 212856679,
    "contestId": 1822,
    "creationTimeSeconds": 1688832129,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "Wolowitz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 374,
    "memoryConsumedBytes": 307200,
    "source": "#include<bits/stdc++.h>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n \r\n#define ll long long int\r\n \r\n#define pb push_back\r\n#define mp make_pair\r\n#define xx first\r\n#define yy second\r\n \r\n#define pii pair <int, int >\r\n#define pll pair < ll, ll >\r\n#define xx first\r\n#define yy second\r\n#define vi vector < int >\r\n#define vl vector < ll >\r\n#define vp vector < pii >\r\n \r\n  \r\n#define fe(i, c, n) for(int i = c; i <= n; i++)\r\n#define fr(i, n, c) for(int i = n; i >= c; i--)\r\n \r\n#define be(a) a.begin(), a.end()\r\n#define mem(a) memset(a, 0, sizeof(a))\r\n#define memn(a) memset(a, -1, sizeof(a))\r\n#define S \" \"\r\n#define N \"\\n\"\r\n \r\nbool checkBit(ll n, ll i){ return (n&(1LL<<i)); }\r\nll setBit(ll n, ll i){ return (n|(1LL<<i)); }\r\nll resetBit(ll n, ll i){ return (n&(~(1LL<<i))); }\r\n\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x) (cout<<(#x)<<':'<<(x)<<'\\n')\r\n#else\r\n#define debug(x)\r\n#endif\r\n \r\n#define fast ios_base :: sync_with_stdio(0); cin.tie(0); cout.tie(0)\r\n\r\ntemplate<typename temp>using ordered_set = tree<temp, null_type, less_equal<temp>, rb_tree_tag,tree_order_statistics_node_update>;\r\n//order_of_key(k)  : Number of items strictly smaller than k .\r\n//find_by_order(k) : K-th element in a set (counting from zero).//*(ost.find_by_order(k))\r\n\r\nconst ll MX = 1e18;\r\nconst ll mod = 1e9 + 7;\r\n\r\n#define SZ 100003\r\n\r\n\r\nvoid solve() {\r\n    ll n; cin >> n;\r\n    map < ll, ll > m;    \r\n    ll ans = 0;\r\n    fe(i, 1, n) {\r\n        int x; cin >> x;\r\n        m[x]++;\r\n    }\r\n    vl all;\r\n    for(auto [x, y] : m) {\r\n        ans += y * (y - 1) * (y - 2);\r\n        all.pb(x);\r\n    }\r\n    for(auto x : all) {\r\n        if(x <= 1e6) {\r\n            for(int i = 1; i * i <= x; i++) {\r\n                int j = x / i;\r\n                if(i != 1) {\r\n                    ans += m[x] * m[x / i] * m[x * i];\r\n                }\r\n                if(i != j) {\r\n                    ans += m[x] * m[x / j] * m[x * j];\r\n                }\r\n            }\r\n        } else {\r\n            for(int i = 2; i <= 1000; i++) {\r\n                ans += m[x] + m[x / i] * m[x * i];\r\n            }\r\n        }\r\n    }\r\n    cout << ans << N;\r\n}\r\n\r\nint main() {\r\n    // FILE;\r\n    fast;\r\n    int t; cin >> t; while(t--)\r\n    solve();\r\n}"
}