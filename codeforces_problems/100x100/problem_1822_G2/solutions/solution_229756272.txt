{
    "id": 229756272,
    "contestId": 1822,
    "creationTimeSeconds": 1698269338,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "mahmoudelsady378"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 1466,
    "memoryConsumedBytes": 11571200,
    "source": "#include<bits/stdc++.h>\r\n//#include<ext/pb_ds/assoc_container.hpp>\r\n//#include<ext/pb_ds/tree_policy.hpp>\r\nusing namespace std;\r\n//using namespace __gnu_pbds;\r\n#define elsady ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);\r\n#define test int t;cin>>t;while(t--)\r\n#define fs first\r\n#define sc second\r\n#define ll long long\r\n#define endl '\\n'\r\n#define be begin()\r\n#define en end()\r\n#define gr greater<int>\r\n#define no cout<<\"NO\"<<endl\r\n#define yes cout<<\"YES\"<<endl\r\n//template <typename T> // T -> (can be integer, float or pair of int etc.)\r\n//using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\nconst ll MOD=998244353,OO=1e18;\r\nconst double PI=acos(-1);\r\nconst int N=5*(1e5+5),T=1e6+1;\r\nvector<vector<int>>adj;\r\nbool vis[N];\r\nint dep[N];\r\nint dx[]={1,-1,0,0,0,0};\r\nint dy[]={0,0,1,-1,0,0};\r\nint dz[]={0,0,0,0,1,-1};\r\nint n,m;\r\nvector<int>dis;\r\n// bitmasks\r\n//Number of leading zeroes: __builtin_clz(x)\r\n//Number of trailing zeroes : __builtin_ctz(x)\r\n//Number of 1-bits: __builtin_popcount(x);\r\n//last one : __lg()\r\nll GCD(ll x,ll y){return y?GCD(y,x%y):x;}\r\nll LCM(ll x,ll y){return x/GCD(x,y)*y;}\r\nll prom(ll x,ll y){return ((x%MOD)*(y%MOD))%MOD;}\r\nll inv(ll a,ll b=MOD){return 1<a?b-inv(b%a,a)*b/a:1;}\r\nbool prime(ll x)\r\n{\r\n  if(x<2)\r\n   return 0;\r\n for(ll I=2;I*I<=x;I++)\r\n    if(x%I==0)\r\n    return 0;\r\n   return 1;\r\n}\r\nbool allow(int I,int j){return (I>=0&&j>=0&&I<n&&j<m);}\r\nint main()\r\n{\r\n elsady\r\n test\r\n {\r\n  int n;\r\n  ll ans=0;\r\n  cin>>n;\r\n  int a[n];\r\n  map<ll,ll>mp;\r\n  for(int I=0;I<n;I++)cin>>a[I],mp[a[I]]++;\r\n  int mx=mp.rbegin()->fs;\r\n  for(auto I:mp)\r\n  {\r\n    ans+=I.sc*(I.sc-1)*(I.sc-2);\r\n    for(int j=2;j*j<=I.fs&&I.fs*j<=mx;j++)\r\n    {\r\n        if(I.fs%j==0)\r\n        {\r\n          if(mp.count(j)&&mp.count(I.fs*(I.fs/j)))\r\n           ans+=mp[j]*mp[I.fs]*mp[I.fs*(I.fs/j)];\r\n          if(I.fs/j!=j)\r\n          {\r\n           if(mp.count(I.fs/j)&&mp.count(I.fs*j))\r\n            ans+=mp[I.fs]*mp[I.fs*j]*mp[I.fs/j];\r\n          }\r\n        }\r\n    }\r\n    if(mp.count(1)&&mp.count(I.fs*I.fs)&&I.fs>1)\r\n     ans+=mp[1]*mp[I.fs]*mp[I.fs*I.fs];\r\n  }\r\n cout<<ans<<endl;\r\n }\r\n}"
}