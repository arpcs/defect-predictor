{
    "id": 209712030,
    "contestId": 1822,
    "creationTimeSeconds": 1686793199,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "enzopsm"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 2012,
    "memoryConsumedBytes": 26931200,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#pragma GCC optimize(\"O3,unroll-loops\")\r\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n#define ll long long\r\n// #define int ll\r\n#define ff first\r\n#define ss second\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define mkp make_pair\r\ntypedef pair<int, int> pii;\r\nconst ll inf=LLONG_MAX;\r\nconst int maxn=2e5+10;\r\n\r\nstruct chash { // large odd number for C\r\n    const uint64_t C = (ll)(4e18 * acos(0)) | 71;\r\n    ll operator()(ll x) const { return __builtin_bswap64(x*C); }\r\n};\r\nint n;\r\n\r\nint32_t main()\r\n{\r\n    #ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\",\"r\",stdin);\r\n    freopen(\"output.txt\",\"w\",stdout); \r\n    #endif\r\n    ios::sync_with_stdio(0);cin.tie(0);\r\n\r\n    int T; cin>> T;\r\n    while(T--)\r\n    {\r\n        cin>> n;\r\n        gp_hash_table<ll,int,chash> cnt;\r\n        vector<int> a;\r\n        set<int> sa;\r\n        for(int i=1; i<=n; i++)\r\n        {\r\n            int ai; cin>> ai;\r\n            a.pb(ai);\r\n            sa.insert(ai);\r\n            cnt[ai]++;\r\n        }\r\n        sort(a.begin(), a.end());\r\n        a.erase(unique(a.begin(), a.end()), a.end());\r\n        ll ans=0;\r\n        for(int x: a)\r\n            ans+=(ll)cnt[x]*(cnt[x]-1)*(cnt[x]-2);\r\n        for(int x: a)\r\n        {\r\n            if(x<1000000)\r\n            {\r\n                for(int b=1; b*b<=x; b++)\r\n                {\r\n                    if(x%b)\r\n                        continue;\r\n                    if(b>1 && sa.find(x/b)!=sa.end() && sa.find(x*b)!=sa.end())\r\n                        ans+=(ll)cnt[x/b]*cnt[x]*cnt[x*b];\r\n                    if(x/b!=b && sa.find(b)!=sa.end() && sa.find((ll)x*(x/b))!=sa.end())\r\n                        ans+=(ll)cnt[b]*cnt[x]*cnt[(ll)x*(x/b)];\r\n                }\r\n            }\r\n            else\r\n                for(int b=2; b<=1000; b++)\r\n                    if(x%b==0 && sa.find(x/b)!=sa.end() && sa.find((ll)x*b)!=sa.end())\r\n                        ans+=(ll)cnt[x/b]*cnt[x]*cnt[(ll)x*b];\r\n        }\r\n        cout<< ans<< \"\\n\";  \r\n    }\r\n \r\n    return 0;\r\n}   "
}