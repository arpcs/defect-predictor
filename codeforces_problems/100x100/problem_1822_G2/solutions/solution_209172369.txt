{
    "id": 209172369,
    "contestId": 1822,
    "creationTimeSeconds": 1686386523,
    "relativeTimeSeconds": 3903,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "Gellertke"
            },
            {
                "handle": "Ranzok"
            },
            {
                "handle": "bolyai"
            }
        ],
        "participantType": "VIRTUAL",
        "teamId": 95526,
        "teamName": "idk",
        "ghost": false,
        "startTimeSeconds": 1686382620
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 421,
    "memoryConsumedBytes": 225689600,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint N = 5*1e7;\nvector<int> lp(N+1);\nvector<int> pr;\n\n\nvoid rec(int l, int x, vector<pair<int,int> >& v, vector<long long>& sol){\n    if(l == v.size()) {\n        sol.push_back(x);\n        return;\n    }\n    int num = 1;\n    for(int i = 0; i <= v[l].second; i++)\n        rec(l+1, x*num, v, sol), num*=v[l].first;\n    \n}\n\nvector<long long> divs(int a){\n    if(a == 1) return {1};\n    vector<int> ps;\n    while(a > 1) ps.push_back(lp[a]), a/=lp[a];\n    vector<pair<int,int> > v;\n    int cnt = 0;\n    for(int i = 0; i < ps.size(); i++){\n        cnt++;\n        if(i == ps.size()-1 || ps[i+1] != ps[i]) v.push_back({ps[i], cnt}), cnt = 0;\n    }\n    vector<long long> sol;\n    rec(0, 1, v, sol);\n    sort(sol.begin(), sol.end());\n    return sol;\n}\n\nvoid solve(){\n    cin.sync_with_stdio(false);\n    cin.tie(0);\n    cout.sync_with_stdio(false);\n    cout.tie(0);\n    int n;\n    cin>>n;\n    vector<long long> v(n);\n    map<int, long long> m;\n    long long mnm = 1e9+7, mxm = -1;\n    for(long long& a : v){\n        cin>>a;\n        mnm = min(mnm, a), mxm = max(mxm, a);\n        if(m.count(a) == 0) m[a] = 0;\n        m[a]++;\n    }\n    long long sol = 0;\n    for(long long& a : v){\n        if(a < N){\n            vector<long long> ds = divs(a);\n            for(long long& i : ds){\n                if(a*i > mxm) break;\n                sol += (m[a/i] - (i == 1 ? 1 : 0)) * (m[a*i] - (i == 1 ? 2 : 0));\n            }\n        }\n        else{\n            for(long long i = 1; a >= i && a/i >= mnm && a*i <= mxm; i++) \n                if(a%i == 0) \n                    sol += (m[a/i] - (i == 1 ? 1 : 0)) * (m[a*i] - (i == 1 ? 2 : 0));\n        }\n    }\n    cout<<sol<<\"\\n\";\n}\n\nint main(){\n    for (int i=2; i <= N; ++i) {\n        if (lp[i] == 0) {\n            lp[i] = i;\n            pr.push_back(i);\n        }\n        for (int j = 0; i * pr[j] <= N; ++j) {\n            lp[i * pr[j]] = pr[j];\n            if (pr[j] == lp[i]) {\n                break;\n            }\n        }\n    }\n\n    int t;\n    cin>>t;\n    while(t--) solve();\n}"
}