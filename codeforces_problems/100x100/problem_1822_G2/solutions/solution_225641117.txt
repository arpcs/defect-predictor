{
    "id": 225641117,
    "contestId": 1822,
    "creationTimeSeconds": 1695900433,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "aaron.dominic.k"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 2589,
    "memoryConsumedBytes": 9830400,
    "source": "#define NDEBUG\n\n#ifdef NDEBUG\n#define dbg(TXTMSG) if constexpr (false) cerr << \"lol\"\n#define dbgv(VARN) ((void)0)\n#define dbgfor(COND) if constexpr (false) for (COND)\n\n#else\n#define _GLIBCXX_DEBUG 1\n#define _GLIBCXX_DEBUG_PEDANTIC 1\n#pragma GCC optimize(\"trapv\")\n#define dbg(TXTMSG) cerr << \"\\n\" << TXTMSG\n#define dbgv(VARN) cerr << \"\\n\" << #VARN << \" = \"<< VARN << \", line: \" << __LINE__ << \"\\n\"\n#define dbgfor(COND) for (COND)\n\n#endif\n\n#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long; \nusing pll = pair<ll,ll>;\n#define e0 first\n#define e1 second\nconstexpr ll INFTY = 1e11;\n#define var const auto&\n\nll choose3(ll n) {\n\treturn n*(n-1)*(n-2);\n}\n\n\n\nint main() {\n\tios_base::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\n\tll T;\n\tcin >> T;\n\tfor (ll tc = 0; tc < T; ++tc)\n\t{\n\t\tll N;\n\t\tcin >> N;\n\t\tvector<ll> A(N);\n\t\tll Amax=-INFTY;\n\t\tfor (int i = 0; i < N; ++i)\n\t\t{\n\t\t\tcin >> A[i];\n\t\t\tAmax=max(Amax,A[i]);\n\t\t}\n\n\t\tsort(A.begin(),A.end());\n\n\t\tmap<ll,ll> Afreq;\n\t\tfor (ll Ai : A)\n\t\t{\n\t\t\tAfreq.insert({Ai,0});\n\t\t\tAfreq[Ai]++;\n\t\t}\n\n\t\tll outp=0;\n\n\t\tfor (auto [Aj, freq] : Afreq)\n\t\t{\n\t\t\toutp += choose3(freq);\n\n\t\t\tif (Aj<1e6) \n\t\t\t{\n\t\t\t\tfor (ll d = 2; d*d <= Aj; ++d)\n\t\t\t\t{\n\t\t\t\t\tif (Aj%d==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tll b=d;\n\n\t\t\t\t\t\tauto Ak = Afreq.find(Aj*b);\n\t\t\t\t\t\tif (Ak==Afreq.end()) continue; \n\t\t\t\t\t\tauto Ai = Afreq.find(Aj/b);\n\t\t\t\t\t\tif (Ai==Afreq.end()) continue; \n\t\t\t\t\t\toutp += freq*(Ak->e1)*(Ai->e1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (ll d = 1; d*d < Aj; ++d)\n\t\t\t\t{\n\t\t\t\t\tif (Aj%d==0)\n\t\t\t\t\t{\n\t\t\t\t\t\tll b=Aj/d;\n\n\t\t\t\t\t\tauto Ak = Afreq.find(Aj*b);\n\t\t\t\t\t\tif (Ak==Afreq.end()) continue; \n\t\t\t\t\t\tauto Ai = Afreq.find(Aj/b);\n\t\t\t\t\t\tif (Ai==Afreq.end()) continue; \n\t\t\t\t\t\toutp += freq*(Ak->e1)*(Ai->e1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse for (ll b = 2; Aj*b <= Amax; ++b)\n\t\t\t{\n\t\t\t\tif (Aj%b!=0) continue;\n\n\t\t\t\tauto Ak = Afreq.find(Aj*b);\n\t\t\t\tif (Ak==Afreq.end()) continue; \n\t\t\t\tauto Ai = Afreq.find(Aj/b);\n\t\t\t\tif (Ai==Afreq.end()) continue; \n\t\t\t\toutp += freq*(Ak->e1)*(Ai->e1);\n\t\t\t}\n\t\t}\n\n\t\tcout << outp <<\"\\n\";\n\t}\n}\n\n"
}