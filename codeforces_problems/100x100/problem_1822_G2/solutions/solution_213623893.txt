{
    "id": 213623893,
    "contestId": 1822,
    "creationTimeSeconds": 1689239020,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "luogu_bot1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 3120,
    "memoryConsumedBytes": 107008000,
    "source": "// LUOGU_RID: 115309660\n#include <bits/stdc++.h>\r\n\r\n#define int long long\r\n#define ll int\r\n#define ii inline int\r\n#define gcd __gcd\r\n#define pii pair<int,int>\r\n#define endl '\\n'\r\n#define fi first\r\n#define se second\r\n#define unit unsigned int\r\n#define r1 root<<1\r\n#define r2 root<<1|1\r\n#define rt tree[root]\r\n#define rl tree[r1]\r\n#define rr tree[r2]\r\n#define mid ((rt.l+rt.r)>>1)\r\n#define mids ((l+r)>>1)\r\n#define st int root,int l,int r\r\n#define ed int x,int y\r\n#define bit bitset\r\n#define len (rt.r-rt.l+1)\r\nusing namespace std;\r\nconst int maxn = 1e7 + 5;\r\nconst int Max = 2e5 + 5;\r\nconst int mod = 1e9 + 7;\r\nconst int inf = 0x3f3f3f3f3f3f3f;\r\nmap<int, int>mp;\r\nvoid solve() {\r\n    int n;\r\n    mp.clear();\r\n    cin >> n;\r\n    vector<int>a(n);\r\n    for (int i = 0;i < n;i++) {\r\n        cin >> a[i];\r\n        mp[a[i]]++;\r\n    }\r\n    sort(a.begin(), a.end());\r\n    a.erase(unique(a.begin(), a.end()), a.end());\r\n    int ans = 0;\r\n    for (int i = 1;i < a.size();i++) {\r\n        for (int j = 1;j * j <= a[i] && a[i] * j <= a.back();j++) {\r\n            if (a[i] % j == 0) {\r\n                if (j != 1 && mp[a[i] / j] && mp[a[i] * j]) {\r\n                    ans += mp[a[i] / j] * mp[a[i]] * mp[a[i] * j];\r\n                }\r\n                if (j * j != a[i] && mp[j] && mp[a[i] * a[i] / j]) {\r\n                    ans += mp[j] * mp[a[i]] * mp[a[i] * a[i] / j];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    for (auto [id, val] : mp) {\r\n        ans += val * (val - 1) * (val - 2);\r\n    }\r\n    cout << ans << endl;\r\n}\r\nsigned main() {\r\n    ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\r\n    int t = 1;\r\n    cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n}"
}