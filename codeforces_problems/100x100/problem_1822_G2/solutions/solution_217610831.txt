{
    "id": 217610831,
    "contestId": 1822,
    "creationTimeSeconds": 1691416288,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "Tezza_Tochka"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "MS C++ 2017",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 24,
    "timeConsumedMillis": 1794,
    "memoryConsumedBytes": 4812800,
    "source": "\ufeff#include <algorithm>\r\n#include <iostream>\r\n#include <vector>\r\n#include <cmath>\r\n#include <map>\r\n#define ll long long\r\nusing namespace std;\r\n\r\nll arr[200000];\r\nll cnt[200000][2];\r\n\r\nll bin_s(int l, int r, ll x) {\r\n\tif (x == cnt[l][0]) return cnt[l][1];\r\n\tif (x == cnt[r][0]) return cnt[r][1];\r\n\tint mid;\r\n\twhile (l < r - 1) {\r\n\t\tmid = (l + r) / 2;\r\n\t\tif (x == cnt[mid][0]) return cnt[mid][1];\r\n\t\tif (x < cnt[mid][0]) r = mid;\r\n\t\telse l = mid;\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\nvoid solve() {\r\n\tll n, ans = 0, l = 1, t, m = 0;\r\n\tcin >> n;\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tcin >> arr[i];\r\n\t\tm = max(m, arr[i]);\r\n\t}\r\n\tsort(arr, arr + n);\r\n\tcnt[0][0] = arr[0];\r\n\tcnt[0][1] = 1;\r\n\tfor (int i = 1; i < n; i++) {\r\n\t\tif (arr[i] == cnt[l - 1][0]) cnt[l - 1][1]++;\r\n\t\telse {\r\n\t\t\tt = cnt[l - 1][1];\r\n\t\t\tans += t * (t - 1) * (t - 2);\r\n\t\t\tl++;\r\n\t\t\tcnt[l - 1][0] = arr[i];\r\n\t\t\tcnt[l - 1][1] = 1;\r\n\t\t}\r\n\t}\r\n\tt = cnt[l - 1][1];\r\n\tans += t * (t - 1) * (t - 2);\r\n\tif (cnt[l - 2][0] <= 1000000 && cnt[l - 1][0] > 100000000) m = cnt[l - 2][0];\r\n\tfor (int i = 0; i < l; i++) {\r\n\t\tif (cnt[i][0] > 250000000) break;\r\n\t\tt = sqrt(m / cnt[i][0]) + 1;\r\n\t\tfor (ll j = 2; j <= t; j++) ans += cnt[i][1] * bin_s(i + 1, l - 1, j * cnt[i][0]) * bin_s(i + 1, l - 1, j * j * cnt[i][0]);\r\n\t}\r\n\tcout << ans << endl;\r\n\treturn;\r\n}\r\n\r\nint main() {\r\n\tint t;\r\n\tcin >> t;\r\n\twhile (t--) solve();\r\n\treturn 0;\r\n}"
}