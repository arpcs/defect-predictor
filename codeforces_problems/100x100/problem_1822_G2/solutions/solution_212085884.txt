{
    "id": 212085884,
    "contestId": 1822,
    "creationTimeSeconds": 1688476505,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "alive"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 1996,
    "memoryConsumedBytes": 14643200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// clang-format off\r\n#define send {ios_base::sync_with_stdio(false);}\r\n#define help {cin.tie(NULL); cout.tie(NULL);}\r\n#define pb push_back\r\n#define fix(prec) {cout << setprecision(prec) << fixed;}\r\n#define f first\r\n#define s second\r\n#define all(v) v.begin(), v.end()\r\n#define getunique(v) {sort(all(v)); v.erase(unique(all(v)), v.end());}\r\n#define google(x) {cout << \"Case #\" << x << \": \";}\r\ntypedef long long ll;\r\ntypedef long double lld;\r\ntypedef pair<ll, ll> pll;\r\ntypedef vector<ll> vl;\r\ntypedef vector<pll> vpl;\r\ntypedef map<ll, ll> mapl;\r\ntemplate<class T> bool ckmin(T& a, const T& b) { return b < a ? a = b, 1 : 0; }\r\ntemplate<class T> bool ckmax(T& a, const T& b) { return a < b ? a = b, 1 : 0; }\r\nvoid display(vl v) { for(int i = 0; i < v.size(); i++) { cout << v[i] << ' '; }}\r\n// clang-format on\r\n\r\nll n, m, k, q, l, r, x, y;\r\nconst ll mod = 1e9 + 7;\r\n\r\nll nC3(ll z) {\r\n    if (z < 3) return 0;\r\n    return (z * (z - 1ll) * (z - 2ll));\r\n}\r\n\r\nvoid solve() {\r\n    cin >> n;\r\n    vl arr(n);\r\n    map<ll, ll> mp;\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> arr[i];\r\n        mp[arr[i]]++;\r\n    }\r\n\r\n    ll ans = 0;\r\n    for (auto num : mp) {\r\n        ans += nC3(num.s);\r\n        for (ll j = 1; j * j * j <= num.f; j++) {\r\n            if (num.f % j == 0) {\r\n                if (j > 1 && num.f % (j * j) == 0) {\r\n                    if (mp.count(num.f / j) && mp.count(num.f / (j * j))) {\r\n                        ans += num.s * (mp[num.f / j] * mp[num.f / (j * j)]);\r\n                    }\r\n                    if (j == ((num.f) / (j * j))) continue;\r\n                }\r\n                ll mid = num.f / j;\r\n                ll sqt = sqrtl(mid);\r\n                if (sqt > 1 && sqt * sqt == mid)\r\n                    ans += (num.s) * (mp[j]) * (mp[j*sqt]);\r\n            }\r\n        }\r\n    }\r\n    cout << ans << \"\\n\";\r\n}\r\n\r\nint main() {\r\n    send help\r\n\r\n#ifndef ONLINE_JUDGE\r\n        freopen(\"_input.txt\", \"r\", stdin);\r\n    freopen(\"_output.txt\", \"w\", stdout);\r\n#endif\r\n\r\n    ll tc = 1;\r\n    cin >> tc;\r\n\r\n    while (tc--) {\r\n        solve();\r\n    }\r\n}\r\n"
}