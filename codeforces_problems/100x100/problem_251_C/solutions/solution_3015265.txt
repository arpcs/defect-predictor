{
    "id": 3015265,
    "contestId": 251,
    "creationTimeSeconds": 1359271984,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 251,
        "members": [
            {
                "handle": "ebawrw028"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354807800
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 2048000,
    "source": "#include<iostream>\r\n#include<stdio.h>\r\n#include<string.h>\r\n#include<algorithm>\r\n#include<math.h>\r\nusing namespace std;\r\n#define inf 1000000007\r\n#define ll __int64\r\nint min(int x,int y) {return x<y?x:y;}\r\nconst int N=500005;\r\nconst int M=100005;\r\nint dp[N],K;\r\nint work(int st,int en)\r\n{\r\n    int i,j;\r\n    for(i=0;i<N;i++)\r\n        dp[i]=inf;\r\n    dp[st]=0;\r\n    for(i=st;;i--)\r\n    {//printf(\"%d %d\\n\",i,dp[i]);\r\n        if(i==en) return dp[en];\r\n        for(j=2;j<=K;j++)\r\n            if(i%j!=0) dp[i-i%j]=min(dp[i-i%j],dp[i]+1);\r\n        dp[i-1]=min(dp[i-1],dp[i]+1);\r\n    }\r\n    return dp[en];\r\n}\r\nint gcd(int x,int y)\r\n{\r\n    if(y!=0) return gcd(y,x%y);\r\n    else return x;\r\n}\r\nint main()\r\n{\r\n    int i,j,k;\r\n    int m,tt,t;\r\n    ll a,b;\r\n    while(scanf(\"%I64d%I64d%d\",&a,&b,&K)!=EOF)\r\n    {\r\n        for(i=2,t=1;i<=K;i++)\r\n            t=t/gcd(t,i)*i;\r\n        //printf(\"%d\\n\",t);\r\n        ll ans=0,p=a/t-b/t;\r\n        if(p>=1) \r\n        {\r\n            ans+=work(a%t,0)+1;\r\n            if(p!=1) ans+=(work(t-1,0)+1)*(p-1);\r\n            ans+=work(t-1,b%t);\r\n        }\r\n        else ans+=work(a%t,b%t);\r\n        printf(\"%I64d\\n\",ans);\r\n    }\r\n    return 0;\r\n}\r\n/*\r\n4 1\r\n2 3 4 1\r\n1 2 3 4\r\n4 1\r\n4 3 1 2\r\n3 4 2 1\r\n4 3\r\n4 3 1 2\r\n3 4 2 1\r\n*/\r\n"
}