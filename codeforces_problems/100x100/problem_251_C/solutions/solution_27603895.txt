{
    "id": 27603895,
    "contestId": 251,
    "creationTimeSeconds": 1496718664,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 251,
        "members": [
            {
                "handle": "minhtung04042001"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354807800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 342,
    "memoryConsumedBytes": 2867200,
    "source": "#include<bits/stdc++.h>\r\n#define lcm 360360\r\nusing namespace std;\r\nconst long long n = 360365;\r\nlong long a, b, k, lev[n];\r\n\r\nlong long bfs(long long st, long long en){\r\n    queue <long long> mq;\r\n    for (long long i = 0; i < n ; i++) lev[i] = 0;\r\n    lev[st] = 1;\r\n    mq.push(st);\r\n    while(mq.size()){\r\n        long long u = mq.front(); mq.pop();\r\n        for (long long i = 2; i  <= k; i++){\r\n            long long v = u - u % i;\r\n            if (!lev[v]) lev[v] = lev[u] + 1, mq.push(v);\r\n        }\r\n        if (!lev[u - 1]) lev[u - 1] = lev[u] + 1, mq.push(u-1);\r\n    }\r\n    return lev[en] - 1;\r\n}\r\nint main(){\r\n    cin >> a >> b >> k;\r\n    long long maxlcm = (a / lcm) * lcm;\r\n    long long minlcm = (b / lcm + 1) * lcm;\r\n    if (maxlcm < minlcm){\r\n        cout <<bfs(a % lcm, b % lcm);\r\n    }\r\n    else{\r\n        long long dis1 = bfs(a % lcm, 0);\r\n        long long dis2 = bfs(lcm , 0);\r\n        long long dis3 = bfs(lcm, b % lcm);\r\n        cout << dis1 + dis2 * ((maxlcm - minlcm)/lcm) + dis3;\r\n    }\r\n}\r\n"
}