{
    "id": 3660178,
    "contestId": 251,
    "creationTimeSeconds": 1367496832,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 251,
        "members": [
            {
                "handle": "zeonsgtr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354807800
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 3993600,
    "source": "#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <cstdlib>\n#include <iostream>\n#include <cassert>\n#include <sstream>\n#include <numeric>\n#include <climits>\n#include <string>\n#include <cctype>\n#include <ctime>\n#include <iomanip>\n#include <cmath>\n#include <vector>\n#include <queue>\n#include <list>\n#include <map>\n#include <set>\nusing namespace std;\n\n#define foreach(e, x) for (__typeof((x).begin()) e = (x).begin(); e != (x).end(); ++e)\n\ntypedef long long int64; \n\nconst int MAX_N = 5 * int(1e5) + 10;\n\nint k, size;\nint f[MAX_N], g[MAX_N];\nint64 a, b;\n\nint main() {\n\tcin >> b >> a >> k;\n\tsize = 1;\n\tfor (int i = 2; i <= k; i++) {\n\t\tsize = size * i / __gcd(size, i);\n\t}\n\tfor (int i = 1; i <= size; i++) {\n\t\tf[i] = f[i - 1] + 1;\n\t\tfor (int j = 2; j <= k; j++) {\n\t\t\tf[i] = min(f[i], f[i - (i % j)] + 1);\n\t\t}\n\t}\n\tfill(g, g + size, INT_MAX);\n\tfor (int i = size; i > 0; i--) {\n\t\tg[i - 1] = min(g[i - 1], g[i] + 1);\n\t\tfor (int j = 2; j <= k; j++) {\n\t\t\tg[i - i % j] = min(g[i - i % j], g[i] + 1);\n\t\t}\n\t}\n\tint64 l, r, t;\n\tl = a % size == 0 ? a : a - a % size + size;\n\tr = b - b % size;\n\tif (l > r) {\n\t\tcout << f[b - a] << endl;\n\t} else {\n\t\tcout << f[size] * ((r - l) / size) + f[b - r] + g[size - (l - a)] << endl;\n\t}\n}\n\n"
}