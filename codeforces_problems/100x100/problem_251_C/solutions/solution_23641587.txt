{
    "id": 23641587,
    "contestId": 251,
    "creationTimeSeconds": 1483859142,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 251,
        "members": [
            {
                "handle": "Ali.Pi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354807800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 310,
    "memoryConsumedBytes": 7680000,
    "source": "#include <cstdio>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n\r\nconst int Maxp = 360360;\r\n\r\nll a, b;\r\nint k;\r\nll take[Maxp + 1], mem[Maxp];\r\nll res;\r\n\r\nll Get(ll a, ll b)\r\n{\r\n\tll dif = a - b;\r\n\tll res = dif / ll(Maxp) * ll(take[Maxp]);\r\n\treturn res + mem[dif % ll(Maxp)];\r\n}\r\n\r\nint main()\r\n{\r\n\tscanf(\"%I64d %I64d %d\", &a, &b, &k);\r\n\tmem[0] = 0;\r\n\tfor (int i = 1; i < Maxp; i++) {\r\n\t\tll nb = b + i;\r\n\t\tmem[i] = mem[i - 1] + 1;\r\n\t\tfor (int j = 2; j <= k; j++)\r\n\t\t\tif (nb % ll(j) <= i) mem[i] = min(mem[i], mem[i - nb % ll(j)] + 1);\r\n\t}\r\n\ttake[0] = 0;\r\n\tfor (int i = 1; i <= Maxp; i++) {\r\n\t\ttake[i] = take[i - 1] + 1;\r\n\t\tfor (int j = 2; j <= k; j++)\r\n\t\t\ttake[i] = min(take[i], take[i - i % j] + 1);\r\n\t}\r\n\tif (a - b < Maxp) printf(\"%I64d\\n\", mem[a - b]);\r\n\telse {\r\n\t\tres = Get(a, b);\r\n\t\tll cand = 0ll;\r\n\t\tll na = a;\r\n\t\twhile (a - na < Maxp) {\r\n\t\t\tll mx = 1;\r\n\t\t\tfor (int j = 2; j <= k; j++)\r\n\t\t\t\tmx = max(mx, na % ll(j));\r\n\t\t\tna -= mx; cand++;\r\n\t\t\tif (na % ll(Maxp) == 0ll)\r\n\t\t\t\tres = min(res, cand + Get(na, b));\r\n\t\t}\r\n\t\tprintf(\"%I64d\\n\", res);\r\n\t}\r\n\treturn 0;\r\n}\r\n"
}