{
    "id": 6452093,
    "contestId": 251,
    "creationTimeSeconds": 1398243748,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 251,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354807800
    },
    "programmingLanguage": "GNU C++0x",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 7987200,
    "source": "#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\ntypedef __int64 ll;\n\nconst int N = 1000000+5;\nint dp1[N], dp2[N];\n\nint gcd(int a, int b) {\n    return b ? gcd(b, a%b) : a;\n}\n\nint lcm(int a, int b) {\n    return a/gcd(a, b)*b;\n}\n\nint main() {\n    ll a, b;\n    int k;\n    scanf(\"%I64d%I64d%d\", &a, &b, &k);\n    int m = 1;\n    for(int i = 2;i <= k; i++) m = lcm(m, i);\n    int len = a%m;\n    dp1[len] = 0;\n    for(int i = len-1;i >= 0; i--) {\n        int mx = i+1;\n        for(int j = 2;j <= k; j++) {\n            if(i%j == 0)  mx = i+j-1;\n        }\n        dp1[i] = 1e9;\n        for(int j = i+1;j <= mx && j <= len; j++)\n            dp1[i] = min(dp1[i], dp1[j]+1);\n    }\n    if(a-b <= len)  return printf(\"%d\\n\", dp1[len-(a-b)]) , 0;\n    dp2[m] = 0;\n    for(int i = m-1;i >= 0; i--) {\n        int mx = i+1;\n        for(int j = 2;j <= k; j++) {\n            if(i%j == 0)  mx = i+j-1;\n        }\n        dp2[i] = 1e9;\n        for(int j = i+1;j <= mx && j <= m; j++)\n            dp2[i] = min(dp2[i], dp2[j]+1);\n    }\n    ll ans = dp1[0];\n    a = a-len;\n    ans += (a-b)/m*dp2[0];\n    a = (a-b)%m;\n    ans += dp2[m-a];\n    printf(\"%I64d\\n\", ans);\n    return 0;\n}\n\n\t\t \t\t\t \t\t\t\t\t \t\t\t  \t  \t"
}