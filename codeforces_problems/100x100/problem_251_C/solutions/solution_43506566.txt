{
    "id": 43506566,
    "contestId": 251,
    "creationTimeSeconds": 1538077367,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 251,
        "members": [
            {
                "handle": "aabdelzaher"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354807800
    },
    "programmingLanguage": "Java 8",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 342,
    "memoryConsumedBytes": 0,
    "source": "//package practice.E;\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\npublic class CF251C {\r\n    static int random[];\r\n    public static void main(String[] args) throws IOException {\r\n        Scanner sc = new Scanner(System.in);\r\n        PrintWriter pw = new PrintWriter(System.out);\r\n\r\n        long cnt = 0;\r\n\r\n        long a = sc.nextLong();\r\n        long origA = a;\r\n        long b = sc.nextLong();\r\n        int k = sc.nextInt();\r\n\r\n        random = new int[k-1];\r\n        Random r = new Random(-1);\r\n        for (int i = 0; i < random.length; i++)\r\n            random[i] = r.nextInt();\r\n\r\n        long cycle = 0;\r\n        long diff = 10;\r\n        HashMap<Long, long[]> vis = new HashMap<>();\r\n        long cycles = 0;\r\n        while(a > b){\r\n            int[] mod = new int[k-1];\r\n            int max = 1;\r\n            for (int i = 2; i <= k; i++) {\r\n                mod[i - 2] = (int)(a % i);\r\n                if(a - mod[i-2] >= b)\r\n                    max = Math.max(max, mod[i-2]);\r\n            }\r\n            long state = cntState(mod);\r\n            if(vis.containsKey(state)) {\r\n                diff = vis.get(state)[0] - a;\r\n                cycles = -vis.get(state)[1] + cycle;\r\n                break;\r\n\r\n            }\r\n            vis.put(state, new long[]{a, cycle});\r\n            a -= max;\r\n            cycle++;\r\n        }\r\n\r\n        cnt += cycle;\r\n        long rep = 1l*(a-b)/diff;\r\n        cnt += rep*cycles;\r\n        a = a - rep*diff;\r\n\r\n        while(a > b){\r\n            int[] mod = new int[k-1];\r\n            int max = 1;\r\n            for (int i = 2; i <= k; i++) {\r\n                mod[i - 2] = (int)(a % i);\r\n                if(a - mod[i-2] >= b)\r\n                    max = Math.max(max, mod[i-2]);\r\n            }\r\n\r\n\r\n            a -= max;\r\n            cnt++;\r\n        }\r\n\r\n        pw.println(cnt);\r\n        pw.flush();\r\n        pw.close();\r\n    }\r\n\r\n    static long cntState(int[] mod){\r\n        long ret = 42424242442l;\r\n        for (int i = 0; i < mod.length; i++) {\r\n            ret = ret^ (1l*(mod[i]+1)*random[i]);\r\n        }\r\n\r\n        return ret;\r\n    }\r\n\r\n    static class Scanner\r\n    {\r\n        StringTokenizer st; BufferedReader br;\r\n        public Scanner(InputStream s){\tbr = new BufferedReader(new InputStreamReader(s));}\r\n        public Scanner(String s) throws FileNotFoundException {\tbr = new BufferedReader(new FileReader(new File(s)));}\r\n        public String next() throws IOException {while (st == null || !st.hasMoreTokens()) st = new StringTokenizer(br.readLine());return st.nextToken();}\r\n        public int nextInt() throws IOException {return Integer.parseInt(next());}\r\n        public long nextLong() throws IOException {return Long.parseLong(next());}\r\n        public String nextLine() throws IOException {return br.readLine();}\r\n        public boolean ready() throws IOException {return br.ready();}\r\n    }\r\n}\r\n"
}