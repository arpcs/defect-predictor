{
    "id": 5239996,
    "contestId": 251,
    "creationTimeSeconds": 1385436084,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 251,
        "members": [
            {
                "handle": "PIAOYI"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354807800
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 1945600,
    "source": "#include<cstdio>\r\n#include<iostream>\r\n#include<map>\r\n#include<algorithm>\r\n#include<queue>\r\nusing namespace std;\r\ntypedef long long LL;\r\ntypedef pair<LL, LL> P;\r\nconst int N = 5e5;\r\n\r\nclass oper {\r\n    public :\r\n        LL k, g;\r\n        LL a, b;\r\n        oper() {}\r\n        oper(LL aa, LL bb, LL kk) {\r\n            a = aa;\r\n            b = bb;\r\n            k = kk;\r\n            g = 1;\r\n        }\r\n        LL gcd(LL x, LL y) {\r\n            return y ? gcd(y, x%y) : x;\r\n        }\r\n        LL lcm(LL x, LL y) {\r\n            return x * y / gcd(x, y);\r\n        }\r\n        void setg() {\r\n            for(int i = 2;i <= k;i++)\r\n                g = lcm(g, i);\r\n        }\r\n        LL solve() {\r\n            LL ans = 0;\r\n            LL bx = b / g * g + g;\r\n            LL ax = a / g * g;\r\n            if(bx > ax)\r\n                ans = bfs(a, b);\r\n            else\r\n                ans = bfs(a, ax) + bfs(2*g, g)*((ax - bx)/g) + bfs(bx, b);\r\n        }\r\n        LL bfs(LL x, LL y){\r\n            if(x == y)  return 0;\r\n            pair<LL ,LL> p, p1;\r\n            int flage[N] = {0};\r\n            queue< pair<LL, LL> > Q;\r\n            p = make_pair(x, 0);\r\n            Q.push(p);\r\n            bool loop =false;\r\n            while(!Q.empty()) {\r\n                p = Q.front();\r\n                Q.pop();\r\n                for(int i = 2;i <= k+1;i++) {\r\n                    LL tmp = p.first % i;\r\n                    if(i == k+1)\r\n                        tmp = 1;\r\n                    LL res = p.first - tmp;\r\n                    if(res == y) {\r\n                        loop = true;\r\n                        break;\r\n                    }\r\n                    if(res < y)\r\n                        continue;\r\n                    if(flage[res- y])    continue;\r\n                    flage[res- y] = 1;\r\n                    p1 = make_pair(res, p.second+1);\r\n                    Q.push(p1);\r\n                }\r\n                if(loop)\r\n                    break;\r\n            }\r\n            return p.second + 1;;\r\n        }\r\n};\r\nint main()\r\n{\r\n   // freopen(\"input.txt\", \"r\", stdin);\r\n    //freopen(\"output.txt\", \"w\", stdout);\r\n    LL i, j, a, b, k;\r\n    while(cin >> a >> b >> k)\r\n    {\r\n        oper p(a, b, k);\r\n        p.setg();\r\n        cout << p.solve() <<endl;\r\n    }\r\n}"
}