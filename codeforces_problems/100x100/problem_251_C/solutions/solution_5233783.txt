{
    "id": 5233783,
    "contestId": 251,
    "creationTimeSeconds": 1385365992,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 251,
        "members": [
            {
                "handle": "nyist_xiaod"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354807800
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 404,
    "memoryConsumedBytes": 1433600,
    "source": "\r\n#include <queue>\r\n#include <stdio.h>\r\n#include <string.h>\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\n\r\nconst int N = 360366;\r\n\r\nint dp[N],k,LCM = 1;\r\n\r\ninline int lcm(int a,int b){\r\n    return a * b / __gcd(a,b);\r\n}\r\n\r\nint solve(long long s,long long t)\r\n{\r\n    dp[s - t] = 0;\r\n    for(int i=s-1-t;i>=0;i--)\r\n        dp[i] = N + 5;\r\n    for(long long i=s;i>=t+1;i--)\r\n    {\r\n        dp[i-1-t] = min(dp[i-1-t],dp[i-t]+1);\r\n        for(int j=2;j<=k;j++)\r\n        {\r\n            long long ii = i - i % j;\r\n            dp[ii-t] = min(dp[ii-t],dp[i-t]+1);\r\n        }\r\n    }\r\n    return dp[0];\r\n}\r\n\r\nint main()\r\n{\r\n    long long b,a,ans = -1;\r\n    scanf(\"%I64d%I64d%d\",&b,&a,&k);\r\n    for(int i=2;i<=k;i++)\r\n        LCM = lcm(LCM,i);\r\n    long long mul1 = a / LCM , mul2 = b / LCM;\r\n    if(mul1 == mul2)\r\n        ans = solve(b,a);\r\n    else\r\n    {\r\n        long long l = mul1 * LCM;\r\n        if(a % LCM)\r\n            l += LCM;\r\n        long long r = mul2 * LCM;\r\n        ans = solve(b,r) + (r - l) / LCM * solve(LCM,0) + solve(l,a);\r\n    }\r\n    printf(\"%I64d\\n\",ans);\r\n    return 0;\r\n}\r\n"
}