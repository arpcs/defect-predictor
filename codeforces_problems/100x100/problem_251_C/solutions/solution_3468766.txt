{
    "id": 3468766,
    "contestId": 251,
    "creationTimeSeconds": 1364991613,
    "relativeTimeSeconds": 5773,
    "problem": {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 251,
        "members": [
            {
                "handle": "sankear"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1364985840
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 203,
    "memoryConsumedBytes": 1536000,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <ctime>\r\n#include <cmath>\r\n#include <cstring>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <set>\r\n#include <map>\r\n#include <bitset>\r\n#include <queue>\r\n#include <deque>\r\n#include <stack>\r\n#include <complex>\r\n#include <cassert>\r\n\r\nusing namespace std;\r\n\r\n#define pb push_back\r\n#define mp make_pair\r\n#define fs first\r\n#define sc second\r\n#define sz(s) int((s).size())\r\n#ifdef LOCAL\r\n#define eprintf(...) fprintf(stderr, __VA_ARGS__)\r\n#define LLD \"%lld\"\r\n#else\r\n#define eprintf(...) 42\r\n#define LLD \"%I64d\"\r\n#endif\r\n#define next _next\r\n#define prev _prev\r\n#define rank _rank\r\n#define link _link\r\n#define hash _hash\r\n\r\ntypedef long long ll;\r\ntypedef long long llong;\r\ntypedef unsigned long long ull;\r\ntypedef unsigned int uint;\r\ntypedef pair <int, int> pii;\r\ntypedef vector <int> vi;\r\ntypedef complex <double> tc;\r\n\r\nconst int inf = int(1e9);\r\nconst double eps = 1e-9;\r\nconst double pi = 4 * atan(double(1));\r\n\r\nint k;\r\nint d[370370];\r\n\r\ninline int gcd(int a, int b){\r\n    while(b > 0){\r\n        a %= b;\r\n        swap(a, b);\r\n    }\r\n    return a;\r\n}\r\n\r\ninline int solve(int l, int r){\r\n    for(int i = 0; i <= r - l; i++){\r\n        d[i] = inf;\r\n    }\r\n    d[0] = 0;\r\n    for(int i = 1; i <= r - l; i++){\r\n        d[i] = min(d[i], d[i - 1] + 1);\r\n        for(int j = 2; j <= k; j++){\r\n            if(i < (l + i) % j){\r\n                continue;\r\n            }\r\n            d[i] = min(d[i], d[i - (l + i) % j] + 1);\r\n        }\r\n    }\r\n    return d[r - l];\r\n}\r\n\r\nint main(){\r\n#ifdef LOCAL\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n    ll a, b;\r\n    scanf(LLD\" \"LLD\" %d\", &a, &b, &k);\r\n    swap(a, b);\r\n    if(a == b){\r\n        printf(\"0\\n\");\r\n        return 0;\r\n    }\r\n    int val = 1;\r\n    for(int i = 2; i <= k; i++){\r\n        val = (val * i) / gcd(val, i);\r\n    }\r\n    ll A = ((a + val - 1) / val) * val;\r\n    ll B = (b / val) * val;\r\n    ll ans;\r\n    if(A <= B){\r\n        ans = solve(a % val, val - 1) + solve(0, b % val) + 1 + (solve(0, val - 1) + 1) * ((B - A) / val);\r\n    }\r\n    else{\r\n        ans = solve(a % val, b % val);\r\n    }\r\n    printf(LLD\"\\n\", ans);\r\n    return 0;\r\n}\r\n"
}