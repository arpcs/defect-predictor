{
    "id": 4491928,
    "contestId": 251,
    "creationTimeSeconds": 1379480711,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 251,
        "members": [
            {
                "handle": "Smit"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354807800
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<cstdio>\n#include<iostream>\n#include<vector>\n#include<map>\n#include<set>\n#include<stack>\n#include<queue>\n#include<algorithm>\n#include<cmath>\n#include<string>\n#include<cstdlib>\n#include<climits>\n#include<cstring>\nusing namespace std;\n\n#define CLR(a,x) memset(a,x,sizeof(a))\n#define PB push_back\n#define INF 1000000000\n#define MOD 1000000007\n#define MP make_pair\n#define tr(container , it) for(typeof(container.begin()) it=container.begin() ; it!=container.end() ; it++)\n#define FOR(i,a,b) for(i=a;i<b;i++)\n#define REP(i,a) FOR(i,0,a)\n#define LL long long\n#define VI vector < int >\n#define PII pair < int , int >\n\n\nset < pair < LL , LL > > Q;\nmap < LL , LL > ans;\nLL k;\nLL dobfs(LL x,LL y) {\n  Q.clear();\n  Q.insert(MP(0,x));\n  ans.clear();\n  ans[x] = 0;\n  pair < LL , LL > top;\n  LL nx;\n  while(!Q.empty()){\n    top = *(Q.begin());\n    Q.erase(top);\n    if(top.second == y) {\n      return top.first;\n    }\n    if(ans.find(top.second-1) == ans.end()) {\n      Q.insert(MP(top.first+1,top.second-1));\n    }\n    for(LL i=2;i<=k;i++) {\n      nx = top.second - top.second%k;\n      if(ans.find(nx) == ans.end()) {\n        ans[nx] = top.first + 1;\n        Q.insert(MP(top.first+1, top.second - top.second%k));\n      }\n    }\n  }\n  return -1;\n}\n\n\nint main() {\n  LL mult,u,v,ans;\n\twhile(cin>>u>>v>>k) {\n    mult = 1;\n    for(LL i=2;i<=k;i++){\n      mult = (mult*i)/__gcd(i,mult);\n    }\n    ans = 0;\n    if(u/mult == v/mult) {\n      ans += dobfs(u,v);\n    } else {\n      ans += dobfs(u, u - u%mult - 1);\n      ans += dobfs(v + (mult - v%mult) - 1 , v);\n      ans += (u/mult - v/mult - 1) * (dobfs(mult - 1, 0) + 1LL);\n    }\n    cout<<ans<<endl;\n  }\n\treturn 0;\n}\n"
}