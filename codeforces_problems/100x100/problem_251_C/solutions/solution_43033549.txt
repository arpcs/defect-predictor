{
    "id": 43033549,
    "contestId": 251,
    "creationTimeSeconds": 1537274688,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 251,
        "members": [
            {
                "handle": "DeshiBasara"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354807800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 3481600,
    "source": "#include <bits/stdc++.h>\r\n// #pragma GCC optimize (\"Ofast\")\r\n// #pragma GCC target (\"sse4\")\r\n// #pragma GCC optimize (\"unroll-loops\")\r\n#define ll          long long\r\n#define ld          long double\r\n#define pb          push_back\r\n#define pii         pair<int,int>\r\n#define vi          vector<int>\r\n#define all(a)      (a).begin(),(a).end()\r\n#define F           first\r\n#define S           second\r\n#define sz(x)       (int)x.size()\r\n#define hell        1000000007\r\n#define endl        '\\n'\r\nusing namespace std;\r\nint dp1[400000],dp2[400000];\r\nint main(){\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(0);\r\n\tcout.tie(0);\r\n\tll a,b;\r\n\tint k,i,j,lcm;\r\n\tcin>>b>>a>>k;\r\n\tfor(i=lcm=1;i<=k;i++)\r\n\t\tlcm=(lcm*i)/__gcd(lcm,i);\r\n\tfor(i=1;i<lcm;i++){\r\n\t\tdp1[i]=dp1[i-1]+1;\r\n\t\tfor(j=2;j<=k;j++)\r\n\t\t\tdp1[i]=min(dp1[i],1+dp1[i/j*j]);\r\n\t}\r\n\tfor(i=a%lcm+1;i<lcm;i++){\r\n\t\tdp2[i]=dp2[i-1]+1;\r\n\t\tfor(j=2;j<=k;j++)\r\n\t\t\tif(i/j*j>=a%lcm)\r\n\t\t\t\tdp2[i]=min(dp2[i],1+dp2[i/j*j]);\r\n\t}\r\n\tif(a/lcm==b/lcm)\r\n\t\tcout<<dp2[b%lcm];\r\n\telse if(a/lcm+1==b/lcm)\r\n\t\tcout<<dp2[lcm-1]+1+dp1[b%lcm];\r\n\telse\r\n\t\tcout<<dp2[lcm-1]+1+dp1[b%lcm]+(b/lcm-a/lcm-1LL)*(dp1[lcm-1]+1);\r\n\treturn 0;\r\n}"
}