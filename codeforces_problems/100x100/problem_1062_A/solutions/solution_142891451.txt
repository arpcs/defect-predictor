{
    "id": 142891451,
    "contestId": 1062,
    "creationTimeSeconds": 1642271284,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1062,
        "index": "A",
        "name": "A Prank",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1300,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1062,
        "members": [
            {
                "handle": "aps_20"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542209700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 99,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma\")\r\n#pragma GCC optimize(\"unroll-loops\")\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef pair<ll, ll> pii;\r\ntypedef pair<ll, ll> pll;\r\ntypedef map<ll, ll> mll;\r\ntypedef pair<double, double> pdd;\r\ntypedef vector<ll> vll;\r\ntypedef vector<ll> vii;\r\ntypedef vector<vector<ll>> vvii;\r\ntypedef vector<vector<ll>> vvll;\r\ntypedef vector<vector<pll>> vvpll;\r\ntypedef vector<pll> vpll;\r\ntypedef vector<pii> vpii;\r\nll mod9 = 998244353;\r\nll mod = 1000000007;\r\ndouble eps = 1e-12;\r\n#define ln \"\\n\"\r\n#define dbg(x) cout << #x << \" = \" << x << ln\r\n#define mp make_pair\r\n#define pb push_back\r\n#define ff first\r\n#define ss second\r\n#define INF 2e18\r\n#define fast_cin()                    \\\r\n  ios_base::sync_with_stdio(false); \\\r\n  cin.tie(NULL);                    \\\r\n  cout.tie(NULL)\r\n#define all(x) (x).begin(), (x).end()\r\n#define sz(x) ((ll)(x).size())\r\n#define yes cout<<\"YES\\n\"\r\n#define no cout<<\"NO\\n\"\r\n#define forn(i, n) for(ll i = 0; i < ll(n); i++) \r\n\r\n  ll gcd(ll a,ll b)\r\n{\r\n    if(b==0)\r\n        return a;\r\n    else\r\n        return gcd(a,b%a);\r\n}\r\n \r\nll lcm(ll a,ll b){\r\n    return (a/__gcd(a,b))*b;\r\n}\r\n\r\n \r\n ll power(ll x, ll n)\r\n{\r\n    ll result = 1;\r\n    while (n) {\r\n        if (n & 1)\r\n            result = (result * x)%mod;\r\n        n = (n / 2)%mod;\r\n        x = (x * x )%mod;\r\n    }\r\n    return result%mod;\r\n}\r\nll prime(ll n)\r\n{\r\n    ll fl=0;\r\n    for(ll i=2;i<=sqrt(n);i++)\r\n        {\r\n            if(n%i==0)\r\n            {\r\n                fl=1;\r\n               break;\r\n           }\r\n        }\r\n        if(fl==1)\r\n            return 1;\r\n            else\r\n            return 0;\r\n}\r\nll countprime(ll n){\r\n    ll count=0;\r\n    if(n%2==0){\r\n        while(n%2==0){\r\n            n/=2;\r\n        }\r\n        count++;\r\n    }\r\n    for(int i=3;i*i<=n;i+=2){\r\n        if(n%i==0){\r\n            while(n%i==0)n/=i;\r\n            count++;\r\n        }\r\n    }\r\n    if(n>2)count++;\r\n\r\n   return count;\r\n}\r\nll MinimumGCD(ll arr[], ll n)\r\n{\r\n    ll g = 0;\r\n \r\n    // Finding GCD of all the\r\n    // elements in the array.\r\n    for (ll i = 0; i < n; i++) {\r\n        g = __gcd(g, arr[i]);\r\n    }\r\n    return g;\r\n}\r\n void solve()\r\n{\r\n ll n,c=0,ans=0;\r\n cin>>n;\r\n ll a[n];\r\n for(ll i=0;i<n;i++)\r\n cin>>a[i];\r\nfor(ll i=0;i<n;i++)\r\n{\r\n    for(ll j=n-1;j>=0;j--)\r\n    {\r\n        if(a[i]==1 && a[j]-a[i]==j-i)\r\n        {\r\n            ans=max(ans,j-i);\r\n            continue;\r\n        }\r\n       if(a[j]==1000 && a[j]-a[i]==j-i)\r\n            {\r\n                ans=max(ans,j-i);\r\n                continue;\r\n            }\r\n        else\r\n           if(a[j]-a[i]==j-i)\r\n            ans=max(ans,j-i-1);\r\n    }\r\n}\r\ncout<<ans<<endl;\r\n}\r\n\r\n\r\n\r\n\r\nint main()\r\n{\r\n  fast_cin();\r\n  chrono::time_point<chrono::high_resolution_clock> chrono_start=chrono::high_resolution_clock::now();\r\n\r\nsolve();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  cerr<<\"Time taken: \"<<chrono::duration_cast<chrono::milliseconds>(chrono::high_resolution_clock::now()-chrono_start).count()<<\" milliseconds\"<<ln;\r\n  return 0;\r\n \r\n}"
}