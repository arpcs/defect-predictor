{
    "id": 135400554,
    "contestId": 1062,
    "creationTimeSeconds": 1636882436,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1062,
        "index": "A",
        "name": "A Prank",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1300,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1062,
        "members": [
            {
                "handle": "ateev_mishra7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542209700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 1024000,
    "source": "#include <bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\n \r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n \r\ntypedef tree<long long, null_type, less<long long>, rb_tree_tag, tree_order_statistics_node_update> pbds;\r\n\r\nstruct data\r\n{\r\n    int len, s, e;\r\n};\r\n\r\nint main()\r\n{   \r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n\r\n    int n;\r\n    cin>>n;\r\n    vector<int>v(n+2);\r\n    vector<data>a;\r\n\r\n    v[0] = v[n+2] = 1e8;\r\n    for(int i=1; i<=n; i++)\r\n        cin>>v[i];\r\n\r\n    int ans = 0, len = 0, st=0, ee=0;\r\n\r\n    for(int i=1; i<=n+1; i++)\r\n    {\r\n        if(v[i] == v[i-1] + 1)\r\n        {\r\n            len++;\r\n            if(len == 1)\r\n                st = i-1;\r\n            //ans = max(ans, len);\r\n        }\r\n        else\r\n        {\r\n            if(len != 0)\r\n            {\r\n                ee = i-1;\r\n                a.push_back({len+1, st, ee});\r\n                ee = 0, st = 0;\r\n            }\r\n            len = 0;\r\n        }\r\n    }\r\n\r\n    for(auto x : a)\r\n    {\r\n        if(x.s == 1)\r\n        {\r\n            if(v[x.e] == x.e || v[x.e] ==1000)\r\n                ans = max(ans, x.len-1);\r\n            else\r\n                ans = max(ans, x.len-2);\r\n        }\r\n        else if(v[x.e] == 1000)\r\n            ans = max(ans, x.len-1);\r\n        else\r\n            ans = max(ans, x.len-2);\r\n    }\r\n\r\n    cout<<ans;\r\n\r\n    return 0;\r\n}"
}