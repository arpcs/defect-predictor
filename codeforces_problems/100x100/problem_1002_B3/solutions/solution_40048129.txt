{
    "id": 40048129,
    "contestId": 1002,
    "creationTimeSeconds": 1530927677,
    "relativeTimeSeconds": 34877,
    "problem": {
        "contestId": 1002,
        "index": "B3",
        "name": "Distinguish four 2-qubit states",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": []
    },
    "author": {
        "contestId": 1002,
        "members": [
            {
                "handle": "algmyr"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1530892800
    },
    "programmingLanguage": "Q#",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 0,
    "source": "\ufeffnamespace Solution {\n    open Microsoft.Quantum.Primitive;\n    open Microsoft.Quantum.Canon;\n\n    // |S_0> = |+> x |+>\n    // |S_1> = |-> x |+>\n    // |S_2> = |+> x |->\n    // |S_3> = |-> x |->\n\n    // Hadamard\n    // |S_0'> = |00>\n    // |S_1'> = |10>\n    // |S_2'> = |01>\n    // |S_3'> = |11>\n\n    operation Solve (qs : Qubit[]) : Int\n    {\n        body\n        {\n            let x = qs[0];\n            let y = qs[1];\n            H(x);\n            H(y);\n\n            if (M(x) == Zero && M(y) == Zero) {\n                return 0;\n            } elif (M(x) == One && M(y) == Zero) {\n                return 2;\n            } elif (M(x) == Zero && M(y) == One) {\n                return 1;\n            } else {\n                return 3;\n            }\n        }\n    }\n\n    operation Test(sign : Int) : Int {\n        body {\n            mutable n = 0;\n            using (qs = Qubit[2])\n            {\n                set n = Solve(qs);\n                ResetAll(qs);\n            }\n            return n;\n        }\n    }\n}\n"
}