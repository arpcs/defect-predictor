{
    "id": 40041330,
    "contestId": 1002,
    "creationTimeSeconds": 1530902680,
    "relativeTimeSeconds": 9880,
    "problem": {
        "contestId": 1002,
        "index": "B3",
        "name": "Distinguish four 2-qubit states",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": []
    },
    "author": {
        "contestId": 1002,
        "members": [
            {
                "handle": "sazas"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1530892800
    },
    "programmingLanguage": "Q#",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 217,
    "memoryConsumedBytes": 0,
    "source": "\ufeffnamespace Solution {\r\n    open Microsoft.Quantum.Primitive;\r\n    open Microsoft.Quantum.Canon;\r\n\r\n    operation Set (desired: Result, q1: Qubit) : ()\r\n    {\r\n        body\r\n        {\r\n            let current = M(q1);\r\n            if (desired != current)\r\n            {\r\n                X(q1);\r\n            }\r\n        }\r\n    }\r\n\r\n    operation KthElement (x : Qubit[], y : Qubit, k : Int) : ()\r\n    {\r\n        body\r\n        {\r\n            CNOT(x[k], y);\r\n        }\r\n    }\r\n\r\n    operation Parity (x : Qubit[], y : Qubit) : ()\r\n    {\r\n        body\r\n        {\r\n            let n = Length(x);\r\n            for(i in 0..n - 1)\r\n            {\r\n                CNOT(x[i], y);\r\n            }\r\n        }\r\n    }\r\n\r\n    operation ConstOne (x : Qubit[], y : Qubit) : ()\r\n    {\r\n        body\r\n        {\r\n            Set(One, y);\r\n        }\r\n    }\r\n\r\n    operation ConstZero (x : Qubit[], y : Qubit) : ()\r\n    {\r\n        body\r\n        {\r\n            Set(Zero, y);\r\n        }\r\n    }\r\n\r\n    operation Solve (qs : Qubit[]) : Int\r\n    {\r\n        body\r\n        {\r\n            let q1 = qs[0];\r\n            let q2 = qs[1];\r\n            H(q1);\r\n            H(q2);\r\n            return ResultAsInt([M(q1); M(q2)]);\r\n        }\r\n    }\r\n\r\n    \r\n    operation Test (ind: Int) : Int\r\n    {\r\n        body\r\n        {\r\n            mutable res = 0;\r\n            using(qs = Qubit[2])\r\n            {\r\n                set res = Solve(qs);\r\n                ResetAll(qs);\r\n            }\r\n            return res;\r\n        }\r\n    }\r\n}"
}