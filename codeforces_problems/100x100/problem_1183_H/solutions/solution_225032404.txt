{
    "id": 225032404,
    "contestId": 1183,
    "creationTimeSeconds": 1695621791,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1183,
        "index": "H",
        "name": "Subsequences (hard version)",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1183,
        "members": [
            {
                "handle": "SF-Manman"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1561559700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "// #include \"atcoder/all\"\n#include <bits/stdc++.h>\nusing ll = long long;\nconst int MOD1000000007 = 1000000007;\nconst int MOD998244353 = 998244353;\nconst double PI = 3.14159265358979323846264338327950288;\n\nvoid solve();\n\nint main()\n{\n    // std::ios_base::sync_with_stdio(false);\n    // std::cin.tie(0);\n#ifdef LOCAL\n    // #ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"r\", stdin);\n#endif\n    // freopen(\"input.txt\", \"r\", stdin);\n    // freopen(\"output.txt\", \"w\", stdout);\n    int testcase = 1;\n    // scanf(\"%d\\n\", &testcase);\n    while (testcase--)\n        solve();\n    return 0;\n}\n\nvoid solve()\n{\n    int n;\n    ll k;\n    scanf(\"%d %lld\\n\", &n, &k);\n    k--;\n    char ch[200];\n    scanf(\"%s\", ch);\n    std::vector<std::vector<int>> lst(n);\n    std::vector<int> pos(26, -1);\n    for (int i = 0; i < n; i++)\n    {\n        pos[ch[i] - 'a'] = i;\n        lst[i] = pos;\n    }\n    std::vector<std::vector<ll>> dp(n + 1, std::vector<ll>(n + 1, 0));\n    for (int i = 0; i < n; i++)\n        dp[i][1] = 1;\n    for (int l = 2; l <= n; l++)\n    {\n        for (int i = 1; i < n; i++)\n        {\n            for (int c = 0; c < 26; c++)\n            {\n                dp[i][l] += (lst[i - 1][c] == -1 ? 0 : dp[lst[i - 1][c]][l - 1]);\n                dp[i][l] = std::min((ll)1e12, dp[i][l]);\n            }\n        }\n    }\n    ll ans = 0;\n    for (int len = n - 1; len >= 1; len--)\n    {\n        ll cnt = 0;\n        for (int j = 0; j < 26; j++)\n        {\n            if (lst[n - 1][j] != -1)\n                cnt += dp[lst[n - 1][j]][len];\n        }\n        if (cnt >= k)\n        {\n            ans += k * (n - len);\n            k = 0;\n            break;\n        }\n        else\n        {\n            ans += cnt * (n - len);\n            k -= cnt;\n        }\n    }\n    if (k)\n    {\n        ans += n;\n        k -= 1;\n    }\n    if (k)\n        printf(\"-1\\n\");\n    else\n        printf(\"%lld\\n\", ans);\n}"
}