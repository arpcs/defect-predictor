{
    "id": 127233226,
    "contestId": 1183,
    "creationTimeSeconds": 1630121375,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1183,
        "index": "H",
        "name": "Subsequences (hard version)",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1183,
        "members": [
            {
                "handle": "BrayanD"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1561559700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 3993600,
    "source": "#include <bits/stdc++.h>\n\n#define int long long\n\nusing namespace std;\n\nconst int MAXN = 110;\n\nint dp[MAXN][MAXN];\n\nvector<int> L[MAXN];\n\nint kkk[MAXN];\n\nint32_t main()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n\n    int N, K;\n    cin >> N >> K;\n\n    string cad;\n    cin >> cad;\n\n    cad = \"*\"+cad;\n\n    for(int i = 0 ; i < N ; i++)\n    {\n    \tset<char> st;\n\n    \tfor(int j = i+1 ; j <= N ; j++)\n    \t{\n    \t\tif(st.find(cad[j]) != st.end())continue;\n    \t\telse\n    \t\t{\n    \t\t\tst.insert(cad[j]);\n    \t\t\tL[i].push_back(j);\n    \t\t}\n    \t}\n    }\n\n    dp[0][0] = 1;\n\n    for(int i = 0 ; i < N ; i++)\n    {\n    \tfor(int k = 0 ; k < N ; k++)\n    \t{\n    \t\tfor(auto x : L[i])\n    \t\t{\n    \t\t\tdp[x][k+1] += dp[i][k];\n    \t\t\tdp[x][k+1] = min(dp[x][k+1], (int)1e16);\n    \t\t}\n    \t}\n    }\n\n    for(int i = 1 ; i <= N ; i++)\n    {\n    \tfor(int j = 1 ; j <= N ; j++)\n    \t{\n    \t\tkkk[j] += dp[i][j];\n    \t}\n    }\n\n    int res = 0;\n\n    for(int i = N ; i >= 1 ; i--)\n    {\n    \tint men = min(K,kkk[i]);\n\n    \tres += men*(N-i);\n\n    \tK -= men;\n    }\n\n    cout << res << '\\n';\n\n    return 0;\n}"
}