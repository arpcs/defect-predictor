{
    "id": 131021058,
    "contestId": 1183,
    "creationTimeSeconds": 1633570250,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1183,
        "index": "H",
        "name": "Subsequences (hard version)",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1183,
        "members": [
            {
                "handle": "LetterC67"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1561559700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n \r\n#define int long long\r\n \r\nconst int maxn = 105;\r\n \r\nvector<int> pos[27];\r\n \r\nint n, S;\r\nstring s;\r\n \r\nint dp[maxn][maxn][maxn];\r\n \r\nint f(int i, int k, int c){\r\n   // cout << i << ' ' << k << ' ' << (char)c << endl;\r\n    if(i <= 0) return 0;\r\n    if(dp[i][k][c] != -1) return dp[i][k][c];\r\n    if(k == 1 && pos[c - 'a'].size() > 1 && pos[c - 'a'][1] <= i){\r\n     //   cout << \"lmao\" << endl;\r\n        return dp[i][k][c] = 1;\r\n    }\r\n    dp[i][k][c] = 0;\r\n \r\n    auto p = prev(upper_bound(pos[c - 'a'].begin(), pos[c - 'a'].end(), i));\r\n  //  cout << *p << endl;\r\n    if(p != pos[c - 'a'].begin()){\r\n      //  cout << i << ' ' << (char)c << ' ' << *p << ' ' << p - pos[c - 'a'].begin() << endl;\r\n        for(int j = 0; j < 26; j++) if(pos[j].size()) dp[i][k][c] += f(*p - 1, k - 1, j + 'a');\r\n    }\r\n \r\n  //  cout << \"end \" << i << ' ' << k << ' ' << (char)c << ' ' << dp[i][k][c] << endl;\r\n \r\n    return dp[i][k][c];\r\n}\r\n \r\nint cntLen(int k){\r\n    if(k == 0) return 1;\r\n    int res = 0;\r\n    for(int i = 0; i < 26; i++)\r\n        if(pos[i].size())\r\n            res += f(n, k, i + 'a');\r\n    return res;\r\n}\r\n \r\nint main(){\r\n    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);\r\n \r\n    memset(dp, -1, sizeof dp);\r\n \r\n    for(int i = 0; i < 26; i++) pos[i].push_back(0);\r\n \r\n    cin >> n >> S >> s;\r\n    s = '?' + s;\r\n    for(int i = 1; i <= n; i++){\r\n        pos[s[i] - 'a'].push_back(i);\r\n    }\r\n \r\n    int res = 0, len = n;\r\n \r\n    while(len != -1 && S){\r\n        int c = cntLen(len);\r\n      //  cout << c << endl;\r\n        int del = min(S, c);\r\n        res += (n - len) * del;\r\n        S -= del;\r\n      //  cout << S << ' ' << del << endl;\r\n        len--;\r\n    }\r\n    if(!S)\r\n    cout<< res;\r\n    else cout << -1;\r\n}"
}