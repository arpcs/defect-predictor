{
    "id": 216559761,
    "contestId": 1842,
    "creationTimeSeconds": 1690798084,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1842,
        "index": "A",
        "name": "Tenzing and Tsondu",
        "type": "PROGRAMMING",
        "points": 250.0,
        "rating": 800,
        "tags": [
            "games",
            "math"
        ]
    },
    "author": {
        "contestId": 1842,
        "members": [
            {
                "handle": "raj_saradava"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1687615500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define sz(x) ((int)(x).size())\r\n#define maxz(x, y) x = max(x, y)\r\n#define minz(x, y) x = min(x, y)\r\n#define modz(x) x = x % mod + mod, x -= (x >= mod) * mod\r\ntypedef long long ll;\r\n#define fast ios_base::sync_with_stdio(false); cin.tie(NULL)\r\nint const N = 2e5 + 9, MOD = 1e9 + 7;\r\n \r\ndouble time(clock_t before, clock_t after) {\r\n    return (after - before - 0.0) / CLOCKS_PER_SEC;\r\n}\r\n\r\n//bool vis[N];\r\n\r\n// void dfs(int v)\r\n// {\r\n//     vis[v] = 1;\r\n//     cout << \"Visited : \" << v << endl;\r\n//     for(auto child : G[v])\r\n//     {\r\n//         if(vis[child] != 0) \r\n//         continue;\r\n//         cout << \"Transfer : \"<< v << \" to \" << child << endl;\r\n//         dfs(child);\r\n//     }\r\n// }\r\n\r\n//  bool isprime [N];\r\n//  int hp[N],lp[N];\r\n\r\n//void sieve_algo(long long int n)\r\n//{\r\n//    isprime[0] = isprime[1] = false;\r\n//    for (int i = 2; i <= n; i++) //  for (int i = 2; i * i <= n; i++)\r\n//    {\r\n//        if (isprime[i] == true)\r\n//        {\r\n//            hp[i] = lp[i] = i;                  // if it is a prime num then\r\n//            for (int j = 2 * i; j <= n; j += i) // for (int j = i * i; j <= n; j+=i)<-- for lp for hp we have to forcefully use first for loop otherwise some numbers will be missed like 6\r\n//            {\r\n//                isprime[j] = false;\r\n//                hp[j] = i;\r\n//                if (lp[j] == 0)\r\n//                    lp[j] = i;\r\n//            }\r\n//        }\r\n//    }\r\n//}\r\n\r\n//map<int, int> prime_factor;\r\n    // while (n > 1)\r\n    // {\r\n    //     int primefactor = lp[n];\r\n    //     while (n % primefactor == 0)\r\n    //     {\r\n    //         prime_factor[primefactor]++;\r\n    //         n /= primefactor;\r\n    //     }\r\n    // }\r\n\r\n\r\nint binarysearch (int n,vector <int> &v){\r\nint lo=0,hi=v.size()-1,mid=0;\r\n    while(hi-lo>1)\r\n    {\r\n        mid =(lo+hi)/2;\r\n        if(v[mid]<=n)\r\n        {\r\n            lo=mid+1;\r\n        }\r\n        else\r\n        {\r\n            hi=mid;\r\n        }\r\n    }\r\n}\r\nint binary_expo(int a,int b,int m)\r\n{\r\n    int ans = 1;\r\n    while (b)\r\n    {\r\n        if(b&1)\r\n        ans = (ans * 1LL * a) % m; // long long num or we can do is 1LL multiply as it done here\r\n        a = (a * 1LL * a) % m;\r\n        b = b>>1;\r\n    }\r\n    return ans;\r\n} \r\n\r\nvoid solve()\r\n{\r\n    long long int n,m,sum = 0;\r\n    cin >> n >> m;\r\n    int x;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        cin >> x;\r\n        sum += x;\r\n    }\r\n    for(int i=0;i<m;i++)\r\n    {\r\n        cin >> x;\r\n        sum -= x;\r\n    }\r\n    if(sum > 0)\r\n    cout << \"Tsondu\" << endl;\r\n    else if(sum < 0)\r\n    cout << \"Tenzing\" << endl;\r\n    else\r\n    cout << \"Draw\" << endl;\r\n}\r\nint main()\r\n{\r\n    fast;\r\n    int q;\r\n    cin>>q;\r\n    while (q--)\r\n    {\r\n        solve();\r\n    }\r\n}"
}