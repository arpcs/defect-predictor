{
    "id": 137527835,
    "contestId": 26,
    "creationTimeSeconds": 1638284038,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 26,
        "index": "D",
        "name": "Tickets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "combinatorics",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 26,
        "members": [
            {
                "handle": "ap_2089"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1281970800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 204800,
    "source": "// --------------------------------------------------<TEMPLATE>--------------------------------------------------\r\n// --------------------<optimizations>--------------------\r\n/*\r\n#pragma GCC optimize(\"Ofast,unroll-loops\")\r\n#pragma GCC target(\"avx,avx2,fma\")\r\n*/\r\n// -------------------</optimizations>--------------------\r\n\r\n// ---------------<Headers and namespaces>----------------\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n/*\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\n*/\r\n\r\n// ---------------</Headers and namespaces>---------------\r\n\r\n// -----------------<Defines and typedefs>----------------\r\n/*\r\ntemplate <class T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\ntemplate <class K, class V> using ordered_map = tree<K, V, less<K>, rb_tree_tag, tree_order_statistics_node_update>;\r\n*/\r\n\r\n// use less_equal for multiset\r\n// order_of_key (val): returns the no. of values less than val\r\n// find_by_order (k): returns the iterator to kth largest element.(0-based)\r\n\r\n\r\ntypedef long double LD;\r\ntypedef unsigned long long ull;\r\ntypedef long long ll;\r\n#define int ll\r\n\r\n#define pb push_back\r\n#define mp make_pair\r\n\r\n#define rep(i,n) for (int i = 0; i < n; i++)\r\n#define ford(i,a,b) for (int i = a; i < b; i++)\r\n#define REPD(i,n) for (int i = n-1; i >= 0; i--)\r\n#define FORD(i,a,b) for (int i = a; i >= b; i--)\r\n\r\n#define all(v) v.begin(),v.end()\r\n\r\ntypedef map<int, int> mii;\r\ntypedef vector<int> vi;\r\ntypedef vector<vi> vvi;\r\ntypedef pair<int, int> pii;\r\ntypedef vector<pii> vpii;\r\n\r\n#define F first\r\n#define S second\r\n\r\n#define PQ(type) priority_queue<type>\r\n#define PQD(type) priority_queue<type,vector<type>,greater<type> >\r\n\r\n#define WL(t) while(t --)\r\n#define SZ(x) ((int)(x).size())\r\n\r\n#define runtime() ((LD)clock() / CLOCKS_PER_SEC)\r\n#define inrange(i,a,b) ((i>=min(a,b)) && (i<=max(a,b)))\r\n\r\n#define PRECISION(x) cout << fixed << setprecision(x);\r\n#define FAST_IO ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n\r\n// ----------------</Defines and typedefs>----------------\r\n\r\n// ------------------------<Consts>-----------------------\r\nconst int MAXN = 2e5 + 5;\r\nconst int SQRTN = 1003;\r\nconst int LOGN = 22;\r\nconst double PI = acos(-1);\r\n\r\n#ifdef int\r\nconst int INF = 1e18;\r\n#else\r\nconst int INF = 1e9;\r\n#endif\r\n\r\nconst int MOD =  1e9 + 7;\r\nconst int FMOD = 998244353;\r\nconst double eps = 1e-9;\r\n// -----------------------</Consts>-----------------------\r\n\r\n// -------------------<Debugging stuff>-------------------\r\nvoid __print(int x) {cerr << x;}\r\nvoid __print(long x) {cerr << x;}\r\nvoid __print(unsigned x) {cerr << x;}\r\nvoid __print(unsigned long x) {cerr << x;}\r\nvoid __print(unsigned long long x) {cerr << x;}\r\nvoid __print(float x) {cerr << x;}\r\nvoid __print(double x) {cerr << x;}\r\nvoid __print(long double x) {cerr << x;}\r\nvoid __print(char x) {cerr << '\\'' << x << '\\'';}\r\nvoid __print(const char *x) {cerr << '\\\"' << x << '\\\"';}\r\nvoid __print(const string &x) {cerr << '\\\"' << x << '\\\"';}\r\nvoid __print(bool x) {cerr << (x ? \"true\" : \"false\");}\r\n\r\ntemplate<typename T, typename V>\r\nvoid __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}\r\ntemplate<typename T>\r\nvoid __print(const T &x) {int f = 0; cerr << '{'; for (auto &i : x) cerr << (f++ ? \",\" : \"\"), __print(i); cerr << \"}\";}\r\nvoid _print() {cerr << \"]\\n\";}\r\ntemplate <typename T, typename... V>\r\nvoid _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << \", \"; _print(v...);}\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x...) cerr << \"[\" << #x << \"] = [\"; _print(x)\r\n#else\r\n#define debug(x...)\r\n#endif\r\n// ------------------</Debugging stuff>-------------------\r\n\r\n\r\n// -------------------------<RNG>-------------------------\r\nmt19937 RNG(chrono::steady_clock::now().time_since_epoch().count());\r\n#define SHUF(v) shuffle(all(v), RNG);\r\n// Use mt19937_64 for 64 bit random numbers.\r\n\r\n// ------------------------</RNG>-------------------------\r\n\r\n// ------------------------------<MATH>-----------------------------------\r\ntemplate<typename T> T gcd(T a, T b) {if (b == 0) return a; a %= b; return gcd(b, a);}\r\ntemplate<typename T> T lcm(T a, T b) {return (a * (b / gcd(a, b)));}\r\nint add(int a, int b, int c = MOD) {int res = a + b; return (res >= c ? res % c : res);}\r\nint sub(int a, int b, int c = MOD) {int res; if (abs(a - b) < c)res = a - b; else res = (a - b) % c; return (res < 0 ? res + c : res);}\r\nint mul(int a, int b, int c = MOD) {ll res = (ll)a * b; return (res >= c ? res % c : res);}\r\nint muln(int a, int b, int c = MOD) {ll res = (ll)a * b; return ((res % c) + c) % c;}\r\nll mulmod(ll a, ll b, ll m = MOD) {ll q = (ll)(((LD)a * (LD)b) / (LD)m); ll r = a * b - q * m; if (r > m)r %= m; if (r < 0)r += m; return r;}\r\ntemplate<typename T>T binpow(T e, T n) {T x = 1, p = e; while (n) {if (n & 1)x = x * p; p = p * p; n >>= 1;} return x;}\r\ntemplate<typename T>T binpow2(T e, T n, T m = MOD) {T x = 1, p = e; while (n) {if (n & 1)x = mul(x, p, m); p = mul(p, p, m); n >>= 1;} return x;}\r\ntemplate<typename T>T extended_euclid(T a, T b, T &x, T &y) {\r\n    T xx = 0, yy = 1; y = 0; x = 1; while (b) {\r\n        T q = a / b, t = b; b = a % b; a = t; \\\r\n        t = xx; xx = x - q * xx; x = t; t = yy; yy = y - q * yy; y = t;\r\n    } return a;\r\n}\r\ntemplate<typename T>T mod_inverse(T a, T n = MOD) {T x, y, z = 0; T d = extended_euclid(a, n, x, y); return (d > 1 ? -1 : sub(x, z, n));}\r\n\r\nconst int FACSZ = 1e4; // Make sure to change this\r\n\r\nint fact[FACSZ], ifact[FACSZ];\r\n// factorial and inverse factorial\r\n// till FACSZ\r\n\r\nvoid precom(int c = MOD) {\r\n    fact[0] = 1;\r\n    ford(i, 1, FACSZ) fact[i] = mul(fact[i - 1], i, c);\r\n    ifact[FACSZ - 1] = mod_inverse(fact[FACSZ - 1], c);\r\n    REPD(i, FACSZ - 1) {\r\n        ifact[i] = mul(i + 1, ifact[i + 1], c);\r\n    }\r\n}\r\nvi primes;\r\nvoid prime_precom() {\r\n    primes.push_back(2);\r\n    for (int x = 3; primes.size() <= MAXN; x += 2) {bool isPrime = true; for (auto p : primes) {if (x % p == 0) {isPrime = false; break;} if (p * p > x) {break;}} if (isPrime) {primes.push_back(x);}}\r\n    //78499 -> for p <= 1e6\r\n    //1299743 -> for 1e5 (under 2s)\r\n    //15485917 -> for 1e6 (~8s)\r\n\r\n}\r\nint ncr(int n, int k) {if (n < k) return 0; if (k == 0) return 1; int res = 1; if (k > n - k) k = n - k; for (int i = 0; i < k; ++i) {res *= (n - i); res /= (i + 1);} return res;}\r\nint ncr_modp(int n, int k, int c = MOD) {if (n < k) return 0; if (k == 0) return 1; int res = 1; if (k > n - k) k = n - k; for (int i = 0; i < k; ++i) {res = mul(res, n - i, c); res = mul(res, binpow2(i + 1, c - 2, c), c);} return res;}\r\n\r\n\r\nvi factors;\r\nvoid factorize(int a) {factors.clear(); for (int i = 1; i * i <= a; i++) {if (a % i == 0) {factors.pb(i); factors.pb(a / i);}} sort(factors.begin(), factors.end());}\r\n\r\nint ncr_precom(int n, int r, int c = MOD) {\r\n    //define fact and ifact first\r\n    return mul(mul(ifact[r], ifact[n - r], c), fact[n], c);\r\n}\r\nint ceil(int a, int b) {return (a + b - 1) / b;}\r\nbool is_prime( int n ) {for (int i = 2; i * i <= n; i++) {if ( n % i == 0 ) {return 0;}} return 1;}\r\nbool diophantine_checker(int a, int b, int n) {for (int i = 0; i * a <= n; i++) {if ((n - (i * a)) % b == 0) {return true;}} return false;}\r\nint count_divisors(int n) {int c; int ans = 1; for (int i = 2; i * i <= n; i++) {c = 0; while (n % i == 0) {c++; n /= i;} ans *= (c + 1);} if (n > 2) {return ans * 2;} return ans;}\r\nstring to_binary(int n) {string r; while (n != 0) {r = (n % 2 == 0 ? \"0\" : \"1\") + r; n /= 2;} return r;}\r\nbool ispower2(int x) {return x && (!(x & (x - 1)));}\r\n\r\n//could be MLE\r\nvi spf;\r\nvoid sieve() {spf.resize(MAXN); spf[1] = 1; ford(i, 2, MAXN) {spf[i] = i;} for (int i = 4; i < MAXN; i += 2) {spf[i] = 2;} for (int i = 3; i * i <= MAXN; i++) {if (spf[i] == i) {for (int j = i * i; j < MAXN; j += i) {if (spf[j] == j) {spf[j] = i;}}}}}\r\nvoid pfactor(int x, vi &ret) {while (x != 1) {ret.push_back(spf[x]); x = x / spf[x];}}\r\n// -------------------------------</MATH>-----------------------------\r\n\r\n\r\n// --------------------------------------------------</TEMPLATE>---------------------------------------------------\r\n\r\nvoid solvethetestcase() {\r\n    int n, m, k;\r\n    cin >> n >> m >> k;\r\n\r\n\r\n    if (n + k < m) {\r\n        cout << 0 << \"\\n\";\r\n    } else {\r\n        LD ans = 1.0;\r\n\r\n        for (int i = 0; i <= k; i++) {\r\n            ans *= (LD)(m - i);\r\n            ans /= (LD)(n + i + 1);\r\n        }\r\n        cout << 1.0 - ans << \"\\n\";\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nsigned main() {\r\n//(COMMENT FOR KICKSTART)\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#else\r\n#endif\r\n\r\n    PRECISION(12);\r\n    FAST_IO\r\n    int t = 1;\r\n\r\n    // (UNCOMMENT FOR MULTIPLE TEST CASES)\r\n    // cin >> t;\r\n\r\n\r\n\r\n    ford(testcase, 1, t + 1) {\r\n        //(UNCOMMNET FOR KICKSTART)\r\n        //cout << \"Case #\" << testcase << \": \";\r\n        solvethetestcase();\r\n\r\n\r\n    }\r\n\r\n    //cerr << \"Time elapsed: \" << runtime() << \" s.\\n\";\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"
}