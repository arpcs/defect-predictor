{
    "id": 54819972,
    "contestId": 722,
    "creationTimeSeconds": 1559179033,
    "relativeTimeSeconds": 733,
    "problem": {
        "contestId": 722,
        "index": "B",
        "name": "Verse Pattern",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1200,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 722,
        "members": [
            {
                "handle": "antontrygubO_o"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1559178300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#define _CRT_SECURE_NO_WARNINGS\r\n#define _USE_MATH_DEFINES\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <bits/stdc++.h>\r\n/*#pragma GCC target (\"avx2\")\r\n#pragma GCC optimization (\"O3\")\r\n#pragma GCC optimization (\"unroll-loops\")*/\r\n\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n\r\n#define ll long long\r\n#define ld long double\r\n#define mp make_pair\r\n \r\ntypedef long double DOUBLE;\r\ntypedef complex<DOUBLE> COMPLEX;\r\ntypedef vector<DOUBLE> VD;\r\ntypedef vector<COMPLEX> VC;\r\n\r\ntypedef tree<\r\nint,\r\nnull_type,\r\nless<int>,\r\nrb_tree_tag,\r\ntree_order_statistics_node_update>\r\nordered_set;\r\n\r\n \r\nvoid print(auto &a)\r\n{\r\n    for (auto s: a) cout<<s<<' ';\r\n    cout<<endl;\r\n}\r\n \r\nvoid get(vector<auto> &a)\r\n{\r\n    for (int i = 0; i<(int)a.size(); i++) cin>>a[i];\r\n}\r\n \r\nconst int p = 998244353;\r\n \r\n \r\nint mul(int a, int b) {\r\n    return (1LL * a%p * b%p) % p;\r\n}\r\n \r\nint add(int a, int b) {\r\n    int s = (a+b);\r\n    s = s%p;\r\n    if (s<0) s+=p; \r\n    return s;\r\n}\r\n \r\nint sub(int a, int b) {\r\n    int s = (a-b);\r\n    s = s%p;\r\n    if (s<0) s+=p; \r\n    return s;\r\n}\r\n \r\nint po(int a, int deg)\r\n{\r\n    if (deg==0) return 1;\r\n    if (deg%2==1) return mul(a, po(a, deg-1));\r\n    int t = po(a, deg/2);\r\n    return mul(t, t);\r\n}\r\n \r\nint inv(int n)\r\n{\r\n    return po(n, p-2);\r\n}\r\n \r\nvector<int> Z(vector<int> s)\r\n{\r\nint n = s.size();\r\nvector<int> z(n);\r\nint L = 0, R = 0;\r\nfor (int i = 1; i < n; i++) {\r\n  if (i > R) {\r\n    L = R = i;\r\n    while (R < n && s[R-L] == s[R]) R++;\r\n    z[i] = R-L; R--;\r\n  } else {\r\n    int k = i-L;\r\n    if (z[k] < R-i+1) z[i] = z[k];\r\n    else {\r\n      L = i;\r\n      while (R < n && s[R-L] == s[R]) R++;\r\n      z[i] = R-L; R--;\r\n    }\r\n  }\r\n}\r\nreturn z;\r\n}\r\n\r\nvector<char> lol = {'a', 'e', 'i', 'o', 'u', 'y'};\r\n\r\nbool check(char c)\r\n{\r\n    for (int i = 0; i<6; i++) if (c==lol[i]) return 1;\r\n    return 0;\r\n}\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(nullptr);\r\n\r\n    int n;\r\n    cin>>n;\r\n    vector<int> a(n);\r\n    get(a);\r\n    string s;\r\n    getline(cin, s);\r\n    for (int i = 0; i<n; i++)\r\n    {\r\n        getline(cin, s);\r\n        int cnt = 0;\r\n        for (int j = 0; j<s.size(); j++) if (check(s[j])) cnt++;\r\n        if (cnt!=a[i]) {cout<<\"NO\"; return 0;}\r\n    }\r\n    cout<<\"YES\";\r\n    \r\n    \r\n}"
}