{
    "id": 21390991,
    "contestId": 722,
    "creationTimeSeconds": 1476301712,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 722,
        "index": "B",
        "name": "Verse Pattern",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1200,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 722,
        "members": [
            {
                "handle": "haris"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475330700
    },
    "programmingLanguage": "Java 8",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 170,
    "memoryConsumedBytes": 20889600,
    "source": "import java.io.*;\r\nimport java.lang.reflect.Array;\r\nimport java.math.BigInteger;\r\nimport java.util.*;\r\n\r\npublic class Main {\r\n   void solve() {\r\n     Scanner in = new Scanner(System.in);\r\n     int n = in.nextInt();\r\n     int[] arr = new int[n];\r\n     for (int i = 0; i < n; i++) {\r\n       arr[i] = in.nextInt();\r\n     }\r\n\r\n     boolean res = true;\r\n     char[] vow = new char[]{'a','e','i', 'o', 'u', 'y'};\r\n     in.nextLine();\r\n     for(int i = 0 ; i < n ; ++i){\r\n       String s = in.nextLine();\r\n       int parts = 0;\r\n       while(true) {\r\n         int min = Integer.MAX_VALUE;\r\n         for (int j = 0; j < vow.length; ++j) {\r\n           int ind = s.indexOf(vow[j]);\r\n           if (ind != -1) {\r\n             min = Math.min(min, ind);\r\n           }\r\n         }\r\n\r\n         if (min == Integer.MAX_VALUE){\r\n           break;\r\n         }\r\n         parts++;\r\n         if (min<s.length()){\r\n           s = s.substring(min+1);\r\n         }\r\n         else break;\r\n       }\r\n\r\n        if(parts != arr[i]){\r\n          res = false;\r\n          break;\r\n        }\r\n     }\r\n\r\n     if (res) out.println(\"YES\");\r\n     else out.println(\"NO\");\r\n    }\r\n\r\n    PrintWriter out;\r\n    InputReader in;\r\n\r\n    void runIO() {\r\n        out = new PrintWriter(System.out);\r\n        in = new InputReader(System.in);\r\n\r\n        solve();\r\n\r\n        out.close();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        new Main().runIO();\r\n    }\r\n\r\n    class InputReader {\r\n\r\n        public BufferedReader reader;\r\n        public StringTokenizer tokenizer;\r\n\r\n        public InputReader(InputStream stream) {\r\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\r\n            tokenizer = null;\r\n        }\r\n\r\n        public String next() {\r\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\r\n                try {\r\n                    tokenizer = new StringTokenizer(reader.readLine());\r\n                } catch (IOException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n            }\r\n            return tokenizer.nextToken();\r\n        }\r\n\r\n        public int nextInt() {\r\n            return Integer.parseInt(next());\r\n        }\r\n\r\n        public long nextLong() {\r\n            return Long.parseLong(next());\r\n        }\r\n\r\n    }\r\n}\r\n"
}