{
    "id": 112213858,
    "contestId": 1341,
    "creationTimeSeconds": 1617790706,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1341,
        "index": "A",
        "name": "Nastya and Rice",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 900,
        "tags": [
            "math"
        ]
    },
    "author": {
        "contestId": 1341,
        "members": [
            {
                "handle": "_Sh3rL0cK"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1587653100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 19,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define fastio ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL)\r\n#define int long long int\r\n#define ff first\r\n#define ss second\r\n#define vi vector<int>\r\n#define pb push_back\r\n#define IM LLONG_MAX\r\n#define endl \"\\n\"\r\n#define all(v) v.begin(),v.end()\r\n#define REP(i,n) for(int i=0;i<n;i++)\r\n#define deb(x) cout<<\"[\"#x<<\":\"<<x<<\"]\"<<\"  \"<<endl;\r\n#define deb2(x,y) cout<<\"[\"#x<<\":\"<<x<<\" \"#y<<\":\"<<y<<\"]\"<<endl;\r\n#define out(a) for(auto x:a)cout<<x<<\" \"; cout<<endl;\r\n#define outyes cout<<\"YES\"<<endl;\r\n#define outno cout<<\"NO\"<<endl;\r\n#define mod 1000000007\r\nusing namespace std; \r\nconst int N = 1e6+7;\r\nvoid AKM() \r\n{\r\n        int n;\r\n        cin >> n;\r\n        int a,b,c,d;\r\n        cin>>a>>b>>c>>d;\r\n        int a1=a-b;\r\n        int a2=a+b;\r\n        int c1=c-d;\r\n        int c2=c+d;\r\n        int na1=n*a1;\r\n        int na2=n*a2;\r\n        if(na2<c1 || na1>c2){\r\n            outno\r\n            return;\r\n        }\r\n        outyes\r\n\r\n\r\n}\r\n\r\nint32_t main()\r\n{\r\n    fastio;\r\n    cout<<fixed;\r\n    cout.precision(16);\r\n    int __TESTCASES=1;\r\n    cin>>__TESTCASES;\r\n    while(__TESTCASES--){ \r\n        AKM();\r\n}\r\n}"
}