{
    "id": 86733578,
    "contestId": 1110,
    "creationTimeSeconds": 1594631399,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1110,
        "index": "H",
        "name": "Modest Substrings",
        "type": "PROGRAMMING",
        "points": 4000.0,
        "rating": 3500,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1110,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1549546500
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\nconst int maxn=2005;\nchar L[maxn],R[maxn];\nint n,rt=1,tot=1,ch[maxn][10],fail[maxn];\nint f[maxn][maxn],g[maxn][maxn][10];\nvoid insert(char *s,int len,int v){\n    int nw=rt;\n    for(int i=1;i<=len;i++){\n        int nxt=s[i]-'0';\n        if(!ch[nw][nxt]) ch[nw][nxt]=++tot;\n        for(int j=(nw==rt);j<nxt;j++) g[nw][len-i+1][j]+=v;\n        if(i==len) g[nw][1][nxt]+=v;\n        nw=ch[nw][nxt];\n    }\n}\nqueue <int> Q;\nvoid getfail(){\n    for(int i=0;i<10;i++){\n        if(ch[rt][i]){\n            fail[ch[rt][i]]=rt;\n            Q.push(ch[rt][i]);\n        } \n        else ch[rt][i]=rt;\n    }\n    while(!Q.empty()){\n        int u=Q.front();\n        Q.pop();\n        for(int i=0;i<10;i++){\n            if(ch[u][i]){\n                fail[ch[u][i]]=ch[fail[u]][i];\n                Q.push(ch[u][i]);\n            }\n            else ch[u][i]=ch[fail[u]][i];\n        }\n    }\n}\nint main(){\n    scanf(\"%s\",L+1);\n    int lenl=strlen(L+1),nw=lenl;\n    while(L[nw]=='0') L[nw]='9',nw--;\n    L[nw]--;\n    if(L[1]=='0'){\n        lenl--;\n        for(int i=1;i<=lenl;i++) L[i]=L[i+1];\n    } \n    if(lenl) insert(L,lenl,-1);\n    scanf(\"%s\",R+1);\n    int lenr=strlen(R+1);\n    insert(R,lenr,1);\n    getfail();\n    scanf(\"%d\",&n);\n    for(int i=2;i<=tot;i++)\n        for(int j=1;j<=n;j++)\n            for(int k=0;k<10;k++) g[i][j][k]+=g[fail[i]][j][k];\n    for(int i=1;i<=tot;i++)\n        for(int j=max(lenl,1);j<lenr;j++) \n            for(int k=1;k<10;k++) g[i][j][k]++;\n    for(int i=1;i<=tot;i++)\n        for(int j=1;j<=n;j++) \n            for(int k=0;k<10;k++) g[i][j][k]+=g[i][j-1][k];\n    for(int i=n-1;i>=0;i--)\n        for(int j=1;j<=tot;j++){\n        \tf[i][j]=-1e9\n        \tfor(int k=0;k<10;k++) f[i][j]=max(f[i][j],f[i+1][ch[j][k]]+g[j][n-i][k]);\n\t\t}            \n    printf(\"%d\\n\",f[0][rt]);\n    nw=rt;\n    for(int i=0;i<n;i++)\n        for(int j=0;j<10;j++)\n            if(f[i][nw]==f[i+1][ch[nw][j]]+g[nw][n-i][j]){\n                printf(\"%d\",j);\n                nw=ch[nw][j];\n                break;\n            }\n    return 0;\n}\n\n  \t\t \t \t\t  \t\t\t\t   \t\t \t      \t\t\t"
}