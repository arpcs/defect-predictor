{
    "id": 147222400,
    "contestId": 1110,
    "creationTimeSeconds": 1645489091,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1110,
        "index": "H",
        "name": "Modest Substrings",
        "type": "PROGRAMMING",
        "points": 4000.0,
        "rating": 3500,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1110,
        "members": [
            {
                "handle": "xajd_smh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1549546500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#include<tr1/unordered_map>\r\nusing namespace std;\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define M 20005\r\n#define N 2005\r\nconst ll mod = 1e9+7;\r\nconst ll inf = 1e17;\r\nconst int INF = 1e7;\r\ninline ll read()\r\n{\r\n   ll f=0,g=1;\r\n   char ch=getchar();\r\n   while(ch<'0'||ch>'9') {if(ch=='-') g=-1;ch=getchar();}\r\n   while(ch>='0'&&ch<='9') {f=(f<<1)+(f<<3)+ch-'0';ch=getchar();}\r\n   return f*g;\r\n}\r\n\r\nint ch[M][10],fail[M];\r\nint g[M][N],dp[M][N],cnt,n,len_l,len_r,Ans;\r\nstring Sl,Sr,Str;\r\n\r\nvoid Init()\r\n{\r\n   cin>>Sl>>Sr>>n;\r\n   len_l=Sl.size(); len_r=Sr.size();\r\n   for(int i=0;i<len_l;i++) Sl[i]-='0';\r\n   for(int i=0;i<len_r;i++) Sr[i]-='0';\r\n}\r\n\r\nvoid Newnode(int now,int id) {if(!ch[now][id]) ch[now][id]=++cnt;}\r\n\r\nvoid Workg(int now,int l,int r,int len)\r\n{\r\n   for(int i=l;i<r;i++)\r\n   {\r\n      Newnode(now,i);\r\n      g[ch[now][i]][len]++;\r\n   }\r\n}\r\n\r\nvoid Move(int &now,int num)\r\n{\r\n   Newnode(now,num);\r\n   now=ch[now][num];\r\n}\r\n\r\nvoid Build()\r\n{\r\n   int now_l=0,now_r=0;\r\n   if(len_l==len_r)\r\n   {\r\n      for(int i=1;i<=len_l;i++)\r\n      {\r\n         int num_l=Sl[i-1],num_r=Sr[i-1];\r\n         if(now_l==now_r)\r\n         {\r\n            Workg(now_l,num_l+1,num_r,len_l-i);\r\n            Move(now_l,num_l); Move(now_r,num_r);\r\n         }\r\n         else\r\n         {\r\n            Workg(now_l,num_l+1,10,len_l-i);\r\n            Workg(now_r,0,num_r,len_r-i);\r\n            Move(now_l,num_l); Move(now_r,num_r);\r\n         }\r\n         g[now_l][0]++;\r\n         if(now_l!=now_r) g[now_r][0]++;\r\n      }\r\n   }\r\n   else\r\n   {\r\n      for(int i=1;i<=now_l)\r\n      {\r\n         int num_l=Sl[i-1];\r\n         Workg(now_l,num_l+1,10,len_l-i);\r\n         Move(now_l,num_l);\r\n      }\r\n      for(int i=1;i<=len_r;i++)\r\n   }\r\n}\r\n\r\n\r\n\r\n   \r\nint main()\r\n{  \r\n\r\n   return 0;\r\n}\r\n\r\n\r\n\r\n/*\r\n3 10 10\r\n9 1 9\r\n1 2\r\n1 2\r\n1 2\r\n3 2\r\n3 2\r\n3 2\r\n1 1\r\n1 1\r\n3 1\r\n3 1\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
}