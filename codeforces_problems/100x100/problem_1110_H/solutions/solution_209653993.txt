{
    "id": 209653993,
    "contestId": 1110,
    "creationTimeSeconds": 1686739131,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1110,
        "index": "H",
        "name": "Modest Substrings",
        "type": "PROGRAMMING",
        "points": 4000.0,
        "rating": 3500,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1110,
        "members": [
            {
                "handle": "ducati"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1549546500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 483,
    "memoryConsumedBytes": 322355200,
    "source": "// LUOGU_RID: 112691621\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint n,L,tot,fail[20005],trie[20005][10],delt[20005][2005],dp[2005][20005]; char num[805];\r\nvoid Deal(int op){\r\n\tint cur=0,len=(scanf(\"%s\",num+1),strlen(num+1));\r\n\tfor (int i=1;i<=len;i++){\r\n\t\tint ch=num[i]-'0';\r\n\t\tfor (int c=0;c<=ch;c++){\r\n\t\t\tif (!trie[cur][c])  trie[cur][c]=(++tot);\r\n\t\t}\r\n\t\tfor (int c=(i==1);c<ch;c++)  delt[trie[cur][c]][len-i]+=op;\r\n\t\tcur=trie[cur][ch];\r\n\t}\r\n\tif (op>0)  delt[cur][0]+=op;\r\n\tfor (int c=1;c<=9;c++){\r\n\t\tif (!trie[0][c])  trie[0][c]=(++tot);\r\n\t\tfor (int ret=0;ret<=len-2;ret++)  delt[trie[0][c]][ret]+=op;\r\n\t}\r\n\tL=max(L,len);\r\n}\r\nvoid build_ACAM(){\r\n\tqueue<int> que;\r\n\tfor (int i=0;i<10;i++){\r\n\t\tif (trie[0][i])  que.push(trie[0][i]);\r\n\t}\r\n\twhile (!que.empty()){\r\n\t\tint u=que.front(); que.pop();\r\n\t\tfor (int i=0;i<=L;i++)  delt[u][i]+=delt[fail[u]][i];\r\n\t\tfor (int c=0;c<10;c++){\r\n\t\t\tint &v=trie[u][c],x=trie[fail[u]][c];\r\n\t\t\tif (!v)  v=x;\r\n\t\t\telse fail[v]=x,que.push(v);\r\n\t\t}\r\n\t}\r\n\tfor (int u=1;u<=tot;u++){\r\n\t\tfor (int i=1;i<=n;i++)  delt[u][i]+=delt[u][i-1];\r\n\t}\r\n}\r\nint main(){\r\n\tDeal(-1),Deal(1),scanf(\"%d\",&n),build_ACAM();\r\n\tfor (int i=n;~i;i--){\r\n\t\tfor (int pos=0;pos<=tot;pos++){\r\n\t\t\tfor (int c=0;c<10;c++)  dp[i][pos]=max(dp[i][pos],dp[i+1][trie[pos][c]]);\r\n\t\t\tdp[i][pos]+=delt[pos][n-i];\r\n\t\t}\r\n\t}\r\n\tprintf(\"%d\\n\",dp[0][0]);\r\n\tfor (int i=0,pos=0;i<n;i++){\r\n\t\tint need=dp[i][pos]-delt[pos][n-i];\r\n\t\tfor (int c=0;c<10;c++){\r\n\t\t\tint nxt=trie[pos][c];\r\n\t\t\tif (dp[i+1][nxt]==need) {printf(\"%d\",c),pos=nxt;break;}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
}