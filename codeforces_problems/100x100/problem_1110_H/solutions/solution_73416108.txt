{
    "id": 73416108,
    "contestId": 1110,
    "creationTimeSeconds": 1584369839,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1110,
        "index": "H",
        "name": "Modest Substrings",
        "type": "PROGRAMMING",
        "points": 4000.0,
        "rating": 3500,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1110,
        "members": [
            {
                "handle": "Doube_Suzerain"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1549546500
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 530,
    "memoryConsumedBytes": 292556800,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\nchar L[1010],R[1010];\nint ll,lr;\nint n;\nstruct AC_AM{\n    int s[20020][11],tot;\n    int sum[16006][2020];\n    int nxt(int x,char c)\n    {\n        c-='0';\n        return s[x][c]?s[x][c]:s[x][c]=++tot;\n    }\n    void build()\n    {\n        int u=0,v=0;\n        if(ll==lr)\n        {\n            for(int i=1;i<=ll;++i)\n            {\n                if(u==v) for(char c=L[i]+1;c<R[i];++c)sum[nxt(u,c)][ll-i]++;\n                else\n                {\n                    for(char c=L[i]+1;c<='9';++c)sum[nxt(u,c)][ll-i]++;\n                    for(char c='0'+(i==1);c<R[i];++c)sum[nxt(u,c)][ll-i]++;\n                }\n                u=nxt(u,L[i]),v=nxt(v,R[i]);\n            }\n            sum[u][0]++;\n            if(u!=v)sum[v][0]++;\n            return;\n        }\n        else\n        {\n            for(int i=1;i<=ll;++i)\n            {\n                for(char c=L[i]+1;c<='9';++c)sum[nxt(u,c)][ll-i]++;\n                u=nxt(u,L[i]);\n            }\n            sum[u][0]++;\n            v=0;\n            for(int i=1;i<=lr;++i)\n            {\n                for(char c='0'+(i==1);c<R[i];++c)sum[nxt(v,c)][lr-i]++;\n                v=nxt(v,R[i]);\n            }\n            sum[v][0]++;\n            for(int i=ll+1;i<lr;++i)\n                for(char c='1';c<='9';++c)\n                    sum[nxt(0,c)][i-1]++;\n        }\n    }\n    int fa[16006];\n    void getfail()\n    {\n        queue<int>q;\n        for(int i=0;i<=9;++i)\n            if(s[0][i])q.push(s[0][i]);\n        int u,v;\n        while(!q.empty())\n        {\n            u=q.front();q.pop();\n            for(int l=0;l<=lr;++l)sum[u][l]+=sum[fa[u]][l];\n            for(int c=0;c<=9;++c)\n                if(s[u][c])\n                {\n                    v=s[u][c];\n                    fa[v]=s[fa[u]][c];\n                    q.push(v);\n                }\n                else s[u][c]=s[fa[u]][c];\n        }\n        for(int i=0;i<=tot;++i)\n            for(int j=1;j<=n;++j)sum[i][j]+=sum[i][j-1];\n//        for(int i=0;i<=tot;++i)cout<<fa[i]<<\" \";cout<<endl;\n    }\n    int f[2020][16006];\n    bool on[2020][16006];\n    void solve()\n    {\n        memset(f,-1,sizeof(f));f[0][0]=0;\n        int v;\n        for(int i=0;i<n;++i)\n            for(int x=0;x<=tot;++x)\n                if(f[i][x]>=0)\n                    for(int c=0;c<=9;++c)\n                    {\n                        v=s[x][c];\n                        f[i+1][v]=max(f[i+1][v],f[i][x]+sum[v][n-i-1]);\n                    }\n        int ans=0;\n        for(int i=0;i<=tot;++i)ans=max(ans,f[n][i]);\n        for(int i=0;i<=tot;++i)\n            if(f[n][i]==ans)on[n][i]=1;\n        for(int i=n-1;i>=0;--i)\n            for(int x=0;x<=tot;++x)\n            {\n                if(f[i][x]<0)continue;\n                for(int c=0;c<=9;++c)\n                {\n                    v=s[x][c];\n                    if(on[i+1][v]&&f[i][x]+sum[v][n-i-1]==f[i+1][v])\n                        on[i][x]=1;\n                }\n            }\n        int u=0;\n        printf(\"%d\\n\",ans);\n        for(int i=1;i<=n;++i)\n        {\n            for(int c=0;c<=9;++c)\n            {\n                v=s[u][c];\n                if(on[i][s[u][c]]&&f[i-1][u]+sum[v][n-i]==f[i][v])\n                {\n                    printf(\"%d\",c);u=v;\n                    break;\n                }\n            }\n        }\n        puts(\"\");\n    }\n}AC;\nint main()\n{\n    scanf(\"%s\",L+1);ll=strlen(L+1);\n    scanf(\"%s\",R+1);lr=strlen(R+1);\n    scanf(\"%d\",&n);\n    AC.build();\n    AC.getfail();\n    AC.solve();\n    return 0;\n}\n"
}