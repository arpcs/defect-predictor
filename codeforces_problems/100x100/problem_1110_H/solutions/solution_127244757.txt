{
    "id": 127244757,
    "contestId": 1110,
    "creationTimeSeconds": 1630136258,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1110,
        "index": "H",
        "name": "Modest Substrings",
        "type": "PROGRAMMING",
        "points": 4000.0,
        "rating": 3500,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1110,
        "members": [
            {
                "handle": "Asteria_S"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1549546500
    },
    "programmingLanguage": "GNU C11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define N 2005\r\n#define M 16005\r\nint nxt[M][10],fail[M],sum[M][N],tot=1,n;\r\nchar L[805],R[805];int f[N][M];bool mk[N][M];\r\ninline void insert(){\r\n\tint len1=strlen(L+1),len2=strlen(R+1);\r\n\tint u=1,v=1;\r\n\tif(len1==len2){\r\n\t\tfor(int i=1;i<=len1;i++){\r\n\t\t\tif(u==v){\r\n\t\t\t\tfor(int j=L[i]-'0'+1;j<R[i]-'0';j++) ++sum[nxt[u][j]?nxt[u][j]:nxt[u][j]=++tot][len1-i];\r\n\t\t\t\tint k=L[i]-'0';\r\n\t\t\t\tu=nxt[u][k]?nxt[u][k]:nxt[u][k]=++tot;\r\n\t\t\t\tk=R[i]-'0';\r\n\t\t\t\tv=nxt[v][k]?nxt[v][k]:nxt[v][k]=++tot;\r\n\t\t\t}else{\r\n\t\t\t\tfor(int j=L[i]-'0'+1;j<=9;j++) ++sum[nxt[u][j]?nxt[u][j]:nxt[u][j]=++tot][len1-i];\r\n\t\t\t\tint k=L[i]-'0';\r\n\t\t\t\tu=nxt[u][k]?nxt[u][k]:nxt[u][k]=++tot;\r\n\t\t\t\tfor(int j=(i==1);j<R[i]-'0';j++) ++sum[nxt[u][j]?nxt[u][j]:nxt[u][j]=++tot][len2-i];\r\n\t\t\t\tk=R[i]-'0';\r\n\t\t\t\tv=nxt[v][i]?nxt[v][i]:nxt[v][i]=++tot;\r\n\t\t\t}\r\n\t\t}sum[u][0]++;\r\n\t\tif(u!=v) sum[v][0]++;\r\n\t}else{\r\n\t\tfor(int i=1;i<=len1;i++){\r\n\t\t\tfor(int j=L[i]-'0'+1;j<=9;j++) ++sum[nxt[u][j]?nxt[u][j]:nxt[u][j]=++tot][len1-i];\r\n\t\t\tint k=L[i]-'0';u=nxt[u][k]?nxt[u][k]:nxt[u][k]=++tot;\r\n\t\t}for(int i=1;i<=len2;i++){\r\n\t\t\tfor(int j=(i==1);j<R[i]-'0';j++) ++sum[nxt[v][j]?nxt[v][j]:nxt[v][j]=++tot][len2-i];\r\n\t\t\tint k=R[i]-'0';v=nxt[v][k]?nxt[v][k]:nxt[v][k]=++tot;\r\n\t\t}for(int i=len1+1;i<len2;i++) for(int k=1;k<=9;k++)\r\n\t\t\t++sum[nxt[1][k]?nxt[1][k]:nxt[1][k]=++tot][i-1];\r\n\t\t++sum[u][0];++sum[v][0];\r\n\t}\r\n}queue<int>q;\r\ninline void build(){\r\n\tint len=strlen(R+1);\r\n\tfor(int i=0;i<=9;i++){\r\n\t\tif(nxt[1][i]) q.push(nxt[1][i]),fail[nxt[1][i]]=1;\r\n\t\telse nxt[1][i]=1;\r\n\t}while(!q.empty()){\r\n\t\tint u=q.front();q.pop();\r\n\t\tfor(int i=0;i<len;i++) sum[u][i]+=sum[fail[u]][i];\r\n\t\tfor(int i=0;i<=9;i++){\r\n\t\t\tif(!nxt[u][i]) nxt[u][i]=nxt[fail[u]][i];\r\n\t\t\telse{\r\n\t\t\t\tfail[nxt[u][i]]=nxt[fail[u]][i];\r\n\t\t\t\tq.push(nxt[u][i]);\r\n\t\t\t}\r\n\t\t}\r\n\t}for(int i=1;i<=tot;i++) for(int j=1;j<n;j++) sum[i][j]+=sum[i][j-1];\r\n}int main(){\r\n\tscanf(\"%s%s%d\",L+1,R+1,&n);\r\n\tmemset(f,-1,sizeof(f));\r\n\tinsert();build();f[0][1]=0;\r\n\tfor(int i=0;i<n;i++) for(int j=1;j<=tot;j++)\r\n\t\tif(~f[i][j]) for(int k=0;k<=9;k++) f[i+1][nxt[j][k]]=max(f[i+1][nxt[j][k]],f[i][j]+sum[nxt[j][k]][n-i-1]);\r\n\tint ans=0;\r\n\tfor(int i=1;i<=tot;i++) ans=max(ans,f[n][i]);\r\n\tfor(int i=1;i<=tot;i++) if(f[n][i]==ans) mk[n][i]=1;\r\n\tfor(int i=n-1;~i;i--) for(int j=1;j<=tot;j++)\r\n\t\tif(~f[i][j]) for(int k=0;!mk[i][j]&&k<=9;k++)\r\n\t\t\tmk[i][j]=mk[i+1][nxt[j][k]]&&(f[i+1][nxt[j][k]]==f[i][j]+sum[nxt[j][k]][n-i-1]);\r\n\tprintf(\"%d\\n\",ans);\r\n\tfor(int i=1,u=1;i<=n;i++) for(int j=0;j<9;j++)\r\n\t\tif(mk[i][nxt[u][j]]&&(f[i][nxt[u][j]]==f[i-1][u]+sum[nxt[u][j]][n-i])){\r\n\t\t\tprintf(\"%d\",j);u=nxt[u][j];\r\n\t\t\tbreak;\r\n\t\t}\r\n\treturn 0;\r\n}\r\n"
}