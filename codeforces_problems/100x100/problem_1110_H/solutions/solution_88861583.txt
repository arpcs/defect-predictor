{
    "id": 88861583,
    "contestId": 1110,
    "creationTimeSeconds": 1596536296,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1110,
        "index": "H",
        "name": "Modest Substrings",
        "type": "PROGRAMMING",
        "points": 4000.0,
        "rating": 3500,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1110,
        "members": [
            {
                "handle": "_silhouett_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1549546500
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int Max=8e3,Max_N=2e3;\r\nint n,m,len1=0,len2=0,cnt=0,Head=1,Tail=0,Q[Max*10+10]={},T[Max*10+10][10]={},fail[Max*10+10]={},size[Max*10+10][Max_N+10]={},f[Max_N+10][Max*10+10]={},g[Max_N+10][Max*10+10]={};\r\nchar A[Max+10],L[Max+10],R[Max+10];\r\ninline void Add(int len){\r\n\tint fir=0; for(;A[fir]=='0';++fir);\r\n\tfor(int i=fir,x=0;i<len;x=T[x][A[i]-'0']?T[x][A[i]-'0']:T[x][A[i]-'0']=++cnt,i++,i!=len?:++size[x][m-len]);\r\n}\r\ninline void ADD(){\r\n\tint opt=0;\r\n\tfor(int i=0;i<m;i++){\r\n\t\tif(opt==0){\r\n\t\t\tfor(int j=0;j<i;j++) A[j]=L[j];\r\n\t\t\tfor(int j=L[i]+1;j<R[i];j++) A[i]=j,Add(i+1);\r\n\t\t} else {\r\n\t\t\tfor(int j=0;j<i;j++) A[j]=L[j];\r\n\t\t\tfor(int j=L[i]+1;j<='9';j++) A[i]=j,Add(i+1);\r\n\t\t\tfor(int j=0;j<i;j++) A[j]=R[j];\r\n\t\t\tfor(int j='0';j<R[i];j++) A[i]=j,Add(i+1);\r\n\t\t}\r\n\t\topt|=L[i]<R[i];\r\n\t}\r\n\tfor(int i=0;i<m;i++) A[i]=L[i]; Add(m);\r\n\tfor(int i=0;i<m;i++) A[i]=R[i]; Add(m);\r\n} \r\ninline void Build(){\r\n\tfor(int i=0;i<10;i++) !T[0][i]?:Q[++Tail]=T[0][i];\r\n\tfor(;Head<=Tail;++Head)\r\n\t for(int i=0,x=Q[Head];i<10;i++) \r\n\t  T[x][i]?fail[T[x][i]]=T[fail[x]][i],Q[++Tail]=T[x][i]:T[x][i]=T[fail[x]][i];\r\n\tfor(int i=1;i<=Tail;i++) \r\n\t for(int j=0;j<=m;j++)\r\n\t  size[Q[i]][j]+=size[fail[Q[i]]][j];\r\n\tfor(int i=1;i<=cnt;i++)\r\n\t for(int j=1;j<=n;j++)\r\n\t  size[i][j]+=size[i][j-1];\r\n}\r\ninline void dp(){\r\n\tf[0][0]=1;\r\n\tfor(int i=0;i<n;i++){\r\n\t\tfor(int j=0;j<=cnt;j++)\r\n\t\t if(f[i][j])\r\n\t\t  for(int k=0;k<10;k++)\r\n\t\t   f[i+1][T[j][k]]=max(f[i+1][T[j][k]],f[i][j]+size[T[j][k]][n-i-1]); \r\n\t}\r\n\tint ans=0;\r\n\tfor(int i=0;i<=cnt;i++) ans=max(ans,f[n][i]);\r\n\tfor(int i=0;i<=cnt;i++) g[n][i]=(f[n][i]==ans);\r\n\tfor(int i=n-1;i>=0;i--){\r\n\t\tfor(int j=0;j<=cnt;j++)\r\n\t\t if(f[i][j])\r\n\t\t   for(int k=0;k<10;k++)\r\n\t\t    g[i][j]|=g[i+1][T[j][k]]&&(f[i][j]+size[T[j][k]][n-i-1]==f[i+1][T[j][k]]);\r\n\t}\r\n\tprintf(\"%d\\n\",ans-1);\r\n\tfor(int i=0,x=0;i<n;i++){\r\n\t\tfor(int j=0;j<10;j++)\r\n\t\t if(g[i+1][T[x][j]]&&(f[i][x]+size[T[x][j]][n-i-1]==f[i+1][T[x][j]])){\r\n\t\t \tprintf(\"%d\",j); x=T[x][j]; break;\r\n\t\t }\r\n\t}\r\n\tputs(\"\");\r\n}\r\nint main(){\r\n\tscanf(\"%s\",L); scanf(\"%s\",R); scanf(\"%d\",&n);\r\n\tlen1=strlen(L); len2=m=strlen(R);\r\n\tfor(int i=1;i<=len1;i++) L[len2-i]=L[len1-i];\r\n\tfor(int i=0;i<len2-len1;i++) L[i]='0';\r\n\tADD(); Build(); dp();\r\n\treturn 0;\r\n}\r\n"
}