{
    "id": 211091599,
    "contestId": 1110,
    "creationTimeSeconds": 1687751006,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1110,
        "index": "H",
        "name": "Modest Substrings",
        "type": "PROGRAMMING",
        "points": 4000.0,
        "rating": 3500,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1110,
        "members": [
            {
                "handle": "sidekick257"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1549546500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 184012800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nint n,k,cnt,root,ans;\r\nstring anss,l,r;\r\nqueue<int> q;\r\nstruct tree{\r\n\tint fail=-1,ed[805],nx[10],ans[2005],g[10][805];\r\n\tstring s[2005];\r\n}t[2005];\r\nvoid insert(string s){\r\n\tint x=root;\r\n\tfor(int i=0;i<s.size();i++){\r\n\t\tint &y=t[x].nx[s[i]-'0'];\r\n\t\tif(!y) y=++cnt;\r\n\t\tx=y;\r\n\t}\r\n\tt[x].ed[0]++;\r\n}\r\nvoid getfail(){\r\n\tfor(char i=0;i<10;i++){\r\n\t\tint y=t[root].nx[i];\r\n\t\tif(!y) continue;\r\n\t\tt[y].fail=root;\r\n\t\tq.push(y);\r\n\t}\r\n\twhile(!q.empty()){\r\n\t\tint x=q.front();\r\n\t\tq.pop();\r\n\t\tfor(int i=0;i<10;i++){\r\n\t\t\tint &y=t[x].nx[i];\r\n\t\t\tif(y){\r\n\t\t\t\tt[y].fail=t[t[x].fail].nx[i];\r\n\t\t\t\tq.push(y);\r\n\t\t\t}\r\n\t\t\telse y=t[t[x].fail].nx[i];\r\n\t\t}\r\n\t}\r\n\tfor(int i=0;i<=cnt;i++){\r\n\t\tfor(int j=0;j<10;j++){\r\n\t\t\tint x=t[i].nx[j];\r\n\t\t\tfor(int p=x;p!=-1;p=t[p].fail){\r\n\t\t\t\tfor(int k=0;k<=n;k++){\r\n\t\t\t\t\tt[i].g[j][k]+=t[p].ed[k];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// cout<<i<<\" \"<<j<<\" \"<<t[i].g[j]<<\"\\n\";\r\n\t\t}\r\n\t}\r\n}\r\nvoid AC(){\r\n\t\r\n\r\n\t\r\n\r\n\tfor(int j=0;j<k;j++)\r\n\t\tfor(int i=0;i<=cnt;i++) t[i].ans[j]=-1e9;\r\n\tt[root].ans[0]=0;\r\n\tfor(int q=0;q<k;q++){\r\n\t\tfor(int i=0;i<=cnt;i++){\r\n\t\t\tfor(int j=0;j<10;j++){\r\n\t\t\t\tint y=t[i].nx[j];\r\n\t\t\t\t// cout<<n-q-1<<\"     \"<<t[i].s[q]<<\" \"<<j<<\"      \"<<t[i].ans[q]<<\" \"<<t[i].g[j][n-1-q]<<\"\\n\";\r\n                if(t[y].ans[q+1]<t[i].ans[q]+t[i].g[j][n-1-q]){\r\n                    t[y].ans[q+1]=t[i].ans[q]+t[i].g[j][n-1-q];\r\n                    t[y].s[q+1]=t[i].s[q]+(char)(j+'0');\r\n                }\r\n                if(t[y].ans[q+1]==t[i].ans[q]+t[i].g[j][n-1-q]){\r\n                    t[y].s[q+1]=min(t[y].s[q+1],t[i].s[q]+(char)(j+'0'));\r\n                }\r\n                if(ans<t[y].ans[q+1]){\r\n                    ans=t[y].ans[q+1];\r\n                    anss=t[y].s[q+1];\r\n                }\r\n\t\t\t\t\r\n                if(ans==t[y].ans[q+1]){\r\n                    anss=min(anss,t[y].s[q+1]);\r\n                }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nvoid add(int x,int l,int r,int len){\r\n\tfor(int i=l;i<=r;i++){\r\n\t\tint &y=t[x].nx[i];\r\n\t\tif(!y) y=++cnt;\r\n\t\tt[y].ed[len]++;\r\n\t}\r\n}\r\nvoid move(int &x,int b){\r\n\tint &y=t[x].nx[b];\r\n\tif(!y) y=++cnt;\r\n\tx=y;\r\n}\r\nvoid build_tree(){\r\n\tint nl=l.size(),nr=r.size();\r\n\tif(nl==nr){\r\n\t\tbool bj=0;\r\n\t\tint x=root,x1;\r\n\t\tfor(int i=0;i<nl;i++){\r\n\t\t\tint last=nl-i-1;\r\n\t\t\tif(l[i]==r[i]&&!bj) move(x,l[i]-'0');\r\n\t\t\telse{\r\n\t\t\t\tif(!bj){\r\n\t\t\t\t\tx1=x;\r\n\t\t\t\t\tadd(x,l[i]-'0'+1,r[i]-'0'-1,last);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tadd(x,l[i]-'0'+1,9,last);\r\n\t\t\t\t\tadd(x1,0,r[i]-'0'-1,last);\r\n\t\t\t\t}\r\n\t\t\t\tmove(x,l[i]-'0');\r\n\t\t\t\tmove(x1,r[i]-'0');\r\n\t\t\t\tbj=1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tt[x].ed[0]++;\r\n\t\tt[x1].ed[0]++;\r\n\t}\r\n\telse{\r\n\t\tbool bj=0;\r\n\t\tint x=root,x1=root;\r\n\t\tfor(int i=0;i<nl;i++){\r\n\t\t\tint last=nl-i-1;\r\n\t\t\tadd(x,l[i]-'0'+1,9,last);\r\n\t\t\tmove(x,l[i]-'0');\r\n\t\t\tbj=1;\r\n\t\t}\r\n\t\tt[x].ed[0]++;\r\n\t\tfor(int i=0;i<nr;i++){\r\n\t\t\tint last=nr-i-1;\r\n\t\t\tadd(x1,0+(x1==root),r[i]-'0'-1,last);\r\n\t\t\tmove(x1,r[i]-'0');\r\n\t\t\tbj=1;\r\n\t\t}\r\n\t\tt[x1].ed[0]++;\r\n\t\tfor(int i=0;i<=cnt;i++){\r\n\t\t\tfor(int j=nl+1-1;j<=nr-1-1;j++){\r\n\t\t\t\tt[i].ed[j]++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor(int i=0;i<=cnt;i++){\r\n\t\tfor(int j=1;j<=n;j++){\r\n\t\t\tt[i].ed[j]+=t[i].ed[j-1];\r\n\t\t}\r\n\t}\r\n}\r\nint main(){\r\n    cin>>l>>r>>n;\r\n    k=n;\r\n\tbuild_tree();\r\n    getfail();\r\n    AC();\r\n    while(anss.size()<n) anss='0'+anss;\r\n    cout<<ans<<\"\\n\"<<anss;\r\n\treturn 0;\r\n} "
}