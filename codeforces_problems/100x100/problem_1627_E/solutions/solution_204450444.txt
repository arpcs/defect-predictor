{
    "id": 204450444,
    "contestId": 1627,
    "creationTimeSeconds": 1683202365,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "TonyStark_987"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 311,
    "memoryConsumedBytes": 27443200,
    "source": "#include<bits/stdc++.h>\r\n#define int long long\r\n#define x first\r\n#define y second\r\n#define pb push_back\r\nusing namespace std;\r\nusing pii=pair <int,int>;\r\nvoid solve(){\r\nint n,m,k;\r\ncin>>n>>m>>k;\r\nint X[n+1];\r\nfor (int i=1; i<=n; i++) cin>>X[i];\r\nvector <pair <pii,pii> > v[n+1];\r\nmap <int,int> mp[n+1];\r\nwhile (k--){\r\nint a,b,c,d,h;\r\ncin>>a>>b>>c>>d>>h;\r\nv[a].pb({{c,d},{b,-h}});\r\nmp[a][b]=1e18;\r\nmp[c][d]=1e18;\r\n}\r\nmp[1][1]=0;\r\nmp[n][m]=1e18;\r\nfor (int i=1; i<=n; i++){\r\nint prvidx=-1,prvval=0;\r\nfor (auto it=mp[i].begin(); it!=mp[i].end(); it++){\r\nif (prvidx!=-1) it->y=min(it->y,prvval+X[i]*(it->x-prvidx));\r\nprvidx=it->x;\r\nprvval=it->y;\r\n}\r\nprvidx=-1; prvval=0;\r\nfor (auto it=mp[i].rbegin(); it!=mp[i].rend(); it++){\r\nif (prvidx!=-1) it->y=min(it->y,prvval+X[i]*(prvidx-it->x));\r\nprvidx=it->x;\r\nprvval=it->y;\r\n}\r\nfor (auto j:v[i]){\r\nmp[j.x.x][j.x.y]=min(mp[j.x.x][j.x.y],mp[i][j.y.x]+j.y.y);\r\n}\r\n}\r\nif (mp[n][m]>=1e16) cout<<\"NO ESCAPE\\n\";\r\nelse cout<<mp[n][m]<<'\\n';\r\n}\r\nmain(){\r\nios_base::sync_with_stdio(false); cin.tie(NULL);\r\nint T;\r\ncin>>T;\r\nfor (int i=0; i<T; i++){\r\nsolve();\r\n}\r\n}"
}