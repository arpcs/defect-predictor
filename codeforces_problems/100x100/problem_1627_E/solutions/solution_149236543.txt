{
    "id": 149236543,
    "contestId": 1627,
    "creationTimeSeconds": 1646993591,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "KoToBa"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 11264000,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\ntypedef long long ll;\r\n\r\nconst int maxn = 1e5 + 10;\r\nconst ll INF = 1ll << 60;\r\nvector<pair<int, int> > en[maxn], ex[maxn];\r\nint n, m, k;\r\nll dp[maxn], x[maxn], h[maxn], tmp[maxn];\r\n\r\nvoid init(){\r\n    for(int i=1;i<=n;++i) en[i].clear(), ex[i].clear();\r\n    for(int i=1;i<=k+1;++i) dp[i] = tmp[i] = INF;\r\n    dp[0] = tmp[0] = 0;\r\n}\r\n\r\nint main(){\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    while(t --){\r\n        scanf(\"%d %d %d\", &n, &m, &k);\r\n        init();\r\n        for(int i=1;i<=n;++i) scanf(\"%lld\", &x[i]);\r\n        for(int i=1;i<=k;++i){\r\n            int a, b, c, d;\r\n            scanf(\"%d %d %d %d %lld\", &a, &b, &c, &d, &h[i]);\r\n            en[a].push_back(make_pair(b, i));\r\n            ex[c].push_back(make_pair(d, i));\r\n        }\r\n        for(int i=1;i<=n;++i){\r\n            vector<array<int, 3> > rec;\r\n            ll now;\r\n            bool first = true;\r\n            for(auto elem: ex[i]){\r\n                int idx = elem.second;\r\n                dp[idx] = min(dp[idx], tmp[idx] - h[idx]);\r\n                rec.push_back({elem.first, elem.second, 0});\r\n                // printf(\"idx:%d dp:%lld\\n\", idx, dp[idx]);\r\n            }\r\n            for(auto elem: en[i]) rec.push_back({elem.first, elem.second, 1});\r\n            if(i == 1) rec.push_back({1, 0, 0});\r\n            if(i == n) rec.push_back({m, k + 1, 1});\r\n\r\n            sort(rec.begin(), rec.end());\r\n            // printf(\"rec\\n\");\r\n            // for(auto elem: rec) printf(\"%d %d %d\\n\", elem[0], elem[1], elem[2]);\r\n            for(int j=0;j<int(rec.size());++j){\r\n                int idx = rec[j][1];\r\n                rec[j][2] = !rec[j][2];\r\n                if(first && rec[j][2]){\r\n                    now = dp[idx];\r\n                    first = false;\r\n                    continue;\r\n                }\r\n                else if(first) continue;\r\n                if(rec[j][2]) now = min(now + x[i] * (rec[j][0] - rec[j-1][0]), dp[idx]);\r\n                else now += x[i] * (rec[j][0] - rec[j-1][0]), tmp[idx] = min(tmp[idx], now);\r\n                // printf(\"e0:%d e1:%d e2:%d now:%lld tmp:%lld\\n\", rec[j][0], rec[j][1], rec[j][2], now, tmp[idx]);\r\n            }\r\n            sort(rec.begin(), rec.end());\r\n            first = true;\r\n            for(int j=int(rec.size())-1;j>=0;--j){\r\n                int idx = rec[j][1];\r\n                if(first && rec[j][2]){\r\n                    now = dp[idx];\r\n                    first = false;\r\n                    continue;\r\n                }\r\n                else if(first) continue;\r\n                if(rec[j][2]) now = min(now + x[i] * (rec[j+1][0] - rec[j][0]), dp[idx]);\r\n                else now += x[i] * (rec[j+1][0] - rec[j][0]), tmp[idx] = min(tmp[idx], now);\r\n                // printf(\"R e0:%d e1:%d e2:%d now:%lld tmp:%lld\\n\", rec[j][0], rec[j][1], rec[j][2], now, tmp[idx]);\r\n            }\r\n        }\r\n        if(tmp[k+1] >= (INF >> 2)) puts(\"NO ESCAPE\");\r\n        else printf(\"%lld\\n\", tmp[k+1]);\r\n    }\r\n    return 0;\r\n}\r\n/*\r\n1\r\n5 3 3\r\n5 17 8 1 4\r\n1 3 3 3 4\r\n3 1 5 2 5\r\n3 2 5 1 6\r\n\r\n1\r\n5 4 5\r\n5 3 4 2 1\r\n1 2 3 3 2\r\n1 4 2 2 3\r\n2 4 4 2 1\r\n3 1 5 2 3\r\n4 4 5 4 12\r\n*/"
}