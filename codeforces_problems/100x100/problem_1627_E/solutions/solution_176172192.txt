{
    "id": 176172192,
    "contestId": 1627,
    "creationTimeSeconds": 1665760175,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "leeminhduc2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 514,
    "memoryConsumedBytes": 44236800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=1e5+10;\r\nint n,m,k,cnt,f[N+N];\r\nlong long d[N+N],x[N];\r\nmap<pair<int,int>,int> mp;\r\nvector <int> vec[N];\r\nvector <pair<int,long long>> g[N+N];\r\nvoid lulu_solution()\r\n{\r\n    cin >> n >> m >> k;\r\n    mp[{1,1}]=++cnt;\r\n    f[cnt]=1;\r\n    vec[1].push_back(1);\r\n    int t;\r\n    for (int i=1;i<=n;i++) cin >> x[i];\r\n    for (int i=1;i<=k;i++)\r\n    {\r\n        int a,b,c,d;\r\n        long long h;\r\n        cin >> a >> b >> c >> d >> h;\r\n        if (!mp[{a,b}])\r\n            {\r\n                mp[{a,b}]=++cnt;\r\n                f[cnt]=a;\r\n                vec[a].push_back(b);\r\n            }\r\n        if (!mp[{c,d}])\r\n            {\r\n                mp[{c,d}]=++cnt;\r\n                f[cnt]=c;\r\n                vec[c].push_back(d);\r\n            }\r\n       // cout << mp[{a,b}]  << \" \" << mp[{c,d}] << \"\\n\";\r\n        g[mp[{a,b}]].push_back({mp[{c,d}],-h});\r\n    }\r\n    if (!mp[{n,m}])\r\n        {\r\n            mp[{n,m}]=++cnt;\r\n            f[cnt]=n;\r\n            vec[n].push_back(m);\r\n        }\r\n    t=mp[{n,m}];\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        sort(vec[i].begin(),vec[i].end());\r\n        for (int j=0;j+1<vec[i].size();j++)\r\n        {\r\n            int u=vec[i][j],v=vec[i][j+1];\r\n            g[mp[{i,u}]].push_back({mp[{i,v}],x[i]*(v-u)});\r\n            g[mp[{i,v}]].push_back({mp[{i,u}],x[i]*(v-u)});\r\n        }\r\n    }\r\n    for (int i=2;i<=cnt;i++) d[i]=1e18;\r\n    priority_queue<tuple<int,long long,int>,vector <tuple<int,long long,int>>,greater<tuple<int,long long,int>>> pq;\r\n    pq.push({1,0ll,1});\r\n    while (pq.size())\r\n    {\r\n        auto [x,du,u]=pq.top(); pq.pop();\r\n        if (du!=d[u]) continue;\r\n       // cerr << u << \" \" << du << \"\\n\";\r\n        for (auto [v,uv]:g[u])\r\n        {\r\n            if (du+uv<d[v])\r\n            {\r\n                d[v]=du+uv;\r\n                pq.push({f[v],d[v],v});\r\n            }\r\n        }\r\n    }\r\n    if (d[t]==1e18) cout << \"NO ESCAPE\\n\";\r\n    else cout <<d[t] << \"\\n\";\r\n    for(int i=1;i<=cnt;i++)\r\n    {\r\n        g[i].clear();\r\n    }\r\n    for (int i=1;i<=n;i++)\r\n    {\r\n        vec[i].clear();\r\n    }\r\n    mp.clear();\r\n    cnt=0;\r\n\r\n\r\n}\r\nsigned main()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int t;\r\n    cin >>t;\r\n    while (t--)\r\n    lulu_solution();\r\n}\r\n"
}