{
    "id": 219507883,
    "contestId": 1627,
    "creationTimeSeconds": 1692404911,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "luogu_bot3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 405,
    "memoryConsumedBytes": 19456000,
    "source": "// LUOGU_RID: 121683203\n#include<iostream>\r\n#include<cstdio>\r\n#include<vector>\r\n#include<algorithm>\r\nusing namespace std;\r\nint n,m,k;\r\nlong long p[100005];\r\nstruct ooo\r\n{\r\n\tint ed;\r\n\tlong long val;\r\n\tint fr_x;\r\n\tint fr_y;\r\n\tlong long l;\r\n};\r\nconst long long maxl=1e18;\r\nvector<ooo>f[100005];\r\nbool cmp(ooo x,ooo y)\r\n{\r\n\treturn x.ed<y.ed;\r\n}\r\nint main()\r\n{\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\t\r\n\tscanf(\"%d%d%d\",&n,&m,&k);\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tscanf(\"%lld\",&p[i]);\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tf[i].clear();\r\n\tf[1].push_back((ooo){1,0,-1,-1,0});\r\n\tfor(int i=1;i<=k;i++)\r\n\t{\r\n\t\tint x1,y1,x2,y2;\r\n\t\tlong long heart;\r\n\t\tscanf(\"%d%d%d%d%lld\",&x1,&y1,&x2,&y2,&heart);\r\n\t\tf[x2].push_back((ooo){y2,maxl,-1,-1,0});\r\n\t\tf[x1].push_back((ooo){y1,maxl,x2,f[x2].size()-1,heart});\r\n\t}\r\n\tf[n].push_back((ooo){m,maxl,-1,-1,0});\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tsort(f[i].begin(),f[i].end(),cmp);\r\n\t\tfor(int j=1;j<f[i].size();j++)\r\n\t\t\tif(f[i][j-1].val!=maxl)\r\n\t\t\tf[i][j].val=min(f[i][j].val,f[i][j-1].val+p[i]*(f[i][j].ed-f[i][j-1].ed));\r\n\t\tfor(int j=f[i].size()-2;j>=0;j--)\r\n\t\t\tif(f[i][j+1].val!=maxl)\r\n\t\t\tf[i][j].val=min(f[i][j].val,f[i][j+1].val+p[i]*(f[i][j+1].ed-f[i][j].ed));\r\n\t\tfor(int j=0;j<f[i].size();j++)\r\n\t\t\tif(f[i][j].fr_x!=-1&&f[i][j].l>=1)\r\n\t\t\tif(f[i][j].val!=maxl)\r\n\t\t\tf[f[i][j].fr_x][f[i][j].fr_y].val=min(f[f[i][j].fr_x][f[i][j].fr_y].val,f[i][j].val-f[i][j].l);\r\n\t}\r\n\tif(f[n][f[n].size()-1].val==maxl)\r\n\tprintf(\"NO ESCAPE\\n\");\r\n\telse\r\n\tprintf(\"%lld\\n\",f[n][f[n].size()-1].val);\r\n\t}\r\n\treturn 0;\r\n}"
}