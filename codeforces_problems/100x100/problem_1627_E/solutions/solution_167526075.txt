{
    "id": 167526075,
    "contestId": 1627,
    "creationTimeSeconds": 1659968853,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "HuyKoCoNy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 451,
    "memoryConsumedBytes": 27340800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long   \r\n#define pii pair<int, int>\r\n#define double long double\r\n#define endl \"\\n\"\r\n#define fi first\r\n#define se second\r\n#define mapa make_pair\r\n#define pushb push_back\r\n#define pushf push_front\r\n#define popb pop_back\r\n#define popf pop_front\r\n#define o_ ordered_\r\n#define ins insert\r\n#define era erase\r\n#define pqueue priority_queue\r\n#define CountBit __builtin_popcount\r\n#define PosBit __builtin_ctz\r\n#define minele min_element\r\n#define maxele max_element\r\n#define lb lower_bound // >=\r\n#define ub upper_bound // >\r\n#define debug cout << \"NO ERROR\", exit(0)\r\n#define FAST ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n#define MASK(i) (1LL << (i))\r\n#define BIT(x, i) (((x) >> (i)) & 1)\r\n#define ALL(v) v.begin(), v.end()\r\n#define SZ(v) (int)v.size()\r\n#define sqr(x) ((x) * (x))\r\n\r\ntemplate<class X, class Y>\r\n    bool minimize(X &x, const Y &y) {\r\n        if (x > y)\r\n        {\r\n            x = y;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\ntemplate<class X, class Y>\r\n    bool maximize(X &x, const Y &y) {\r\n        if (x < y)\r\n        {\r\n            x = y;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\nconst int MOD = 1e9 + 7; //998244353;\r\nconst int LOG = 18;\r\nconst int INF = 1e18 + 7;\r\nconst int d4x[4] = {-1, 1, 0, 0};\r\nconst int d4y[4] = {0, 0, 1, -1};\r\nconst char c4[4] = {'D', 'U', 'R', 'L'};\r\nconst int d8x[8] = {0, 1, 1, 1, 0, -1, -1, -1};\r\nconst int d8y[8] = {1, 1, 0, -1, -1, -1, 0, 1};\r\n\r\n// #define LENGTH 1000005\r\n// #define NMOD 2\r\n// #define BASE 256\r\n// const int HashMod[] = {(int)1e9 + 7, (int)1e9 + 2277, (int)1e9 + 5277, (int)1e9 + 8277, (int)1e9 + 9277};\r\n\r\n// #include <ext/pb_ds/assoc_container.hpp>\r\n// #include <ext/pb_ds/tree_policy.hpp>\r\n// using namespace __gnu_pbds;\r\n// #define o_set tree<int, null_type,less<int>, rb_tree_tag, tree_order_statistics_node_update>\r\n// *(s.find_by_order(2)) : 3rd element in the set i.e. 6\r\n// s.order_of_key(25) : Count of elements strictly smaller than 25 is 4\r\n\r\n\r\n\r\n\r\n/* Listen music of IU before enjoy my code */\r\n\r\n\r\n#define MAX 100005\r\n\r\nclass SegmentTree {\r\n\r\nprivate:\r\n    int n;\r\n    vector<int> vl, vr;\r\n\r\n    void update(int i, int l, int r, int pos, int vall, int valr) {\r\n        if (pos > r || pos < l) return;\r\n        if (l == r) {\r\n            minimize(vl[i], vall);\r\n            minimize(vr[i], valr);\r\n            return;\r\n        }\r\n        int mid = (l + r) / 2;\r\n        update(i * 2, l, mid, pos, vall, valr);\r\n        update(i * 2 + 1, mid + 1, r, pos, vall, valr);\r\n        vl[i] = min(vl[i * 2], vl[i * 2 + 1]);\r\n        vr[i] = min(vr[i * 2], vr[i * 2 + 1]);\r\n    }\r\n\r\n    int getl(int i, int l, int r, int fin) {\r\n        // cout << i << \" \" << l << \" \" << r << \" \" << fin << \" \" << vl[i] << endl;\r\n        if (l > fin) return 2 * INF;\r\n        if (r <= fin) {\r\n            return vl[i];\r\n        }\r\n        int mid = (l + r) / 2;\r\n        return min(getl(i * 2, l, mid, fin), getl(i * 2 + 1, mid + 1, r, fin));\r\n    }\r\n\r\n    int getr(int i, int l, int r, int sta) {\r\n        // cout << i << \" \" << l << \" \" << r << \" \" << sta << \" \" << vr[i] << endl;\r\n        if (r < sta) return 2 * INF;\r\n        if (sta <= l) {\r\n            return vr[i];\r\n        }\r\n        int mid = (l + r) / 2;\r\n        return min(getr(i * 2, l, mid, sta), getr(i * 2 + 1, mid + 1, r, sta));\r\n    }\r\n\r\npublic:\r\n    void resize(int _n) {\r\n        n = _n;\r\n        vl.resize(n * 4);\r\n        vr.resize(n * 4);\r\n        for (int i = 1; i < n * 4; i++) vl[i] = vr[i] = 2 * INF;\r\n    }\r\n    void update(int pos, int vall, int valr) {\r\n        update(1, 1, n, pos, vall, valr);\r\n    }\r\n    int getl(int fin) {\r\n        return getl(1, 1, n, fin);\r\n    }\r\n    int getr(int sta) {\r\n        return getr(1, 1, n, sta);\r\n    }\r\n} IT[MAX];\r\n\r\nint n, m, k, x[MAX];\r\n\r\nstruct Data {\r\n    int nroom, floor, room, point;\r\n    Data(int _nroom = 0, int _floor = 0, int _room = 0, int _point = 0) {\r\n        nroom = _nroom;\r\n        floor = _floor;\r\n        room = _room;\r\n        point = _point;\r\n    }\r\n};\r\n\r\nvector<Data> edge[MAX];\r\nvector<int> lists[MAX];\r\n\r\nvoid solve() {\r\n    \r\n\r\n    cin >> n >> m >> k;\r\n    for (int i = 1; i <= n; i++) cin >> x[i], lists[i].clear(), edge[i].clear();\r\n    for (int i = 1; i <= k; i++) {\r\n        int floor, room, nfloor, nroom, point;\r\n        cin >> floor >> room >> nfloor >> nroom >> point;\r\n        edge[nfloor].pushb(Data(nroom, floor, room, point));\r\n        lists[nfloor].pushb(nroom);\r\n    } \r\n\r\n    for (int i = 1; i <= n; i++) {\r\n        sort(ALL(lists[i]));\r\n        lists[i].resize(unique(ALL(lists[i])) - lists[i].begin());\r\n        IT[i].resize(SZ(lists[i]));\r\n        // cout << i << \" \" << SZ(lists[i]) << endl;\r\n        // cout << i << endl;\r\n        // for (auto x : lists[i]) cout << x << \" \";\r\n        // cout << endl;\r\n    }\r\n\r\n    IT[1].resize(1);\r\n    IT[1].update(1, -x[1], x[1]);\r\n    lists[1].pushb(1);\r\n    // debug;\r\n    for (int i = 2; i <= n; i++) if (SZ(edge[i])) {\r\n        // cout << \"floor\" << i << endl;\r\n        for (int j = 0; j < SZ(edge[i]); j++) {\r\n\r\n            auto [nroom, floor, room, point] = edge[i][j];\r\n            // cout << i << \" \" << nroom << \" \" << floor << \" \" << room << \" \" << point << endl;\r\n            int posl = ub(ALL(lists[floor]), room) - lists[floor].begin();\r\n            int posr = ub(ALL(lists[floor]), room) - lists[floor].begin() + 1;\r\n            int npos = lb(ALL(lists[i]), nroom) - lists[i].begin() + 1;\r\n            // cout << posl << \" \" << posr << \" \" << npos << endl;\r\n            int tmp = min(IT[floor].getl(posl) + room * x[floor], IT[floor].getr(posr) - room * x[floor]) - point;\r\n            // cout << tmp << endl;\r\n            IT[i].update(npos, tmp - nroom * x[i], tmp + nroom * x[i]);\r\n        }\r\n    }\r\n    // debug;\r\n    int pos = ub(ALL(lists[n]), m) - lists[n].begin();\r\n    // cout << \"eeieiii\" << pos << endl;\r\n    int ans = IT[n].getl(pos) + m * x[n];\r\n    if (ans > INF) cout << \"NO ESCAPE\" << endl;\r\n    else cout << ans << endl;\r\n\r\n    \r\n\r\n\r\n}\r\n\r\n\r\n/* Authors: Nguyen Minh Huy from Le Quy Don high school for Gifted Students Da Nang */\r\n\r\n\r\n\r\nsigned main() {\r\n\r\n    #ifndef ONLINE_JUDGE\r\n    freopen(\"ab.inp\", \"r\", stdin);\r\n    freopen(\"ab.out\", \"w\", stdout);\r\n    #else\r\n    // freopen(\"task.inp\", \"r\", stdin);\r\n    // freopen(\"task.out\", \"w\", stdout);\r\n    #endif\r\n    FAST;\r\n    bool TestCase = 0;\r\n    int NumTest = 1;\r\n    cin >> NumTest;\r\n    for (int i = 1; i <= NumTest; i++) {\r\n        if (TestCase) cout << \"Case\" << \" \" << i << \": \";\r\n        solve();\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n"
}