{
    "id": 222058420,
    "contestId": 1627,
    "creationTimeSeconds": 1694002307,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "xxx2022"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 77107200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nconst int inf=1e18;\r\nconst int N=1e6+10;\r\ninline int read(){\r\n\tint f=1,w=0;\r\n\tchar c=getchar();\r\n\twhile(c<'0'||c>'9'){\r\n\t\tif(c=='-')\tf=-1;\r\n\t\tc=getchar();\r\n\t}\r\n\twhile(c>='0'&&c<='9'){\r\n\t\tw=(w<<1)+(w<<3)+(c^48);\r\n\t\tc=getchar();\r\n\t}\r\n\treturn f*w;\r\n}\r\nint t;\r\nint n,m,k;\r\nint f[N*4];\r\nstruct point{\r\n    int x,id;\r\n    bool operator <(const point &a)const {\r\n        if(x==a.x)  return id<a.id;\r\n        return x<a.x;\r\n    }\r\n};\r\nint tot;\r\nvector <point> v[N];\r\npoint trans[N];\r\nint X[N];\r\nsigned main(){\r\n    t=read();\r\n    while(t--){\r\n        tot=0;\r\n        n=read();\r\n        m=read();\r\n        k=read();\r\n        for(int i=1;i<=n;i++){\r\n            X[i]=read();\r\n            v[i].clear();\r\n        }\r\n        v[1].push_back({1,++tot});\r\n        for(int i=1;i<=k;i++){\r\n            int s,b,c,d,e;\r\n            s=read();\r\n            b=read();\r\n            c=read();\r\n            d=read();\r\n            e=read();\r\n            tot++;\r\n            v[s].push_back({b,tot});\r\n            trans[tot]={tot+1,e};\r\n            tot++;\r\n            v[c].push_back({d,tot});\r\n            trans[tot]={0,0};\r\n        }\r\n        v[n].push_back({m,++tot});\r\n        for(int i=1;i<=tot;i++){\r\n            f[i]=-inf;\r\n        }\r\n        f[1]=0;\r\n        for(int i=1;i<=n;i++){\r\n            sort(v[i].begin(),v[i].end());\r\n            for(int j=1;j<=(int)v[i].size()-1;j++){\r\n                f[v[i][j].id]=max(f[v[i][j].id],f[v[i][j-1].id]-abs(v[i][j].x-v[i][j-1].x)*X[i]);\r\n            }     \r\n            for(int j=(int)v[i].size()-2;j>=0;j--){\r\n                f[v[i][j].id]=max(f[v[i][j].id],f[v[i][j+1].id]-abs(v[i][j].x-v[i][j+1].x)*X[i]);\r\n            }\r\n            for(int j=0;j<=(int)v[i].size()-1;j++){\r\n                if(f[v[i][j].id]!=-inf&&trans[v[i][j].id].x!=0){\r\n                    f[trans[v[i][j].id].x]=max(f[trans[v[i][j].id].x],f[v[i][j].id]+trans[v[i][j].id].id);\r\n                }\r\n            }\r\n        }\r\n        if(f[tot]==-inf){\r\n            printf(\"NO ESCAPE\\n\");\r\n        }else{\r\n            printf(\"%lld\\n\",-f[tot]);\r\n        }\r\n    }\r\n    return 0;\r\n}"
}