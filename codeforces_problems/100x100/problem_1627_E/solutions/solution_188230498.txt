{
    "id": 188230498,
    "contestId": 1627,
    "creationTimeSeconds": 1673018326,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "hy2004"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing i64 = long long;\r\n\r\nconstexpr i64 inf = 1E18;\r\n\r\nvoid solve() {\r\n    int n, m, k;\r\n    std::cin >> n >> m >> k;\r\n\r\n    std::vector<int> x(n);\r\n    for (int i = 0; i < n; i++) {\r\n        std::cin >> x[i];\r\n    }\r\n\r\n    std::vector<std::vector<int>> p(n);\r\n    p[0].push_back(0);\r\n    p[n - 1].push_back(m - 1);\r\n\r\n    std::vector<std::vector<std::array<int, 4>>> e(n);\r\n    for (int i = 0; i < k; i++) {\r\n        int a, b, c, d, h;\r\n        std::cin >> a >> b >> c >> d >> h;\r\n        a--;\r\n        b--;\r\n        c--;\r\n        d--;\r\n        e[a].push_back({b, c, d, h});\r\n        p[a].push_back(b);\r\n        p[c].push_back(d);\r\n    }\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        std::sort(p[i].begin(), p[i].end());\r\n        p[i].erase(std::unique(p[i].begin(), p[i].end()), p[i].end());\r\n    }\r\n    std::vector<std::vector<i64>> dp(n);\r\n    for (int i = 0; i < n; i++) {\r\n        dp[i].resize(p[i].size(), inf);\r\n    }\r\n    dp[0][0] = 0;\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        int t = p[i].size();\r\n        for (int j = 0; j + 1 < t; j++) {\r\n            dp[i][j + 1] = std::min(dp[i][j + 1], dp[i][j] + 1LL * x[i] * (p[i][j + 1] - p[i][j]));\r\n        }\r\n        for (int j = t - 1; j > 0; j--) {\r\n            dp[i][j - 1] = std::min(dp[i][j - 1], dp[i][j] + 1LL * x[i] * (p[i][j] - p[i][j - 1]));\r\n        }\r\n        for (auto {b, c, d, h} : e[i]) {\r\n            int x = std::lower_bound(p[i].begin(), p[i].end(), b) - p[i].begin();\r\n            int y = std::lower_bound(p[c].begin(), p[c].end(), d) - p[c].begin();\r\n            dp[c][y] = std::min(dp[c][y], dp[i][x] - h);\r\n        }\r\n    }\r\n\r\n    i64 ans = dp[n - 1].back();\r\n    if (ans > 1E17) {\r\n        std::cout << \"NO ESCAPE\\n\";\r\n    } else {\r\n        std::cout << ans << \"\\n\";\r\n    }\r\n}\r\n\r\nint main() {\r\n    std::ios::sync_with_stdio(false);\r\n    std::cin.tie(nullptr);\r\n\r\n    int t;\r\n    std::cin >> t;\r\n\r\n    while (t--) {\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}