{
    "id": 145042733,
    "contestId": 1627,
    "creationTimeSeconds": 1643898562,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "snowflame"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 11059200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef pair<int, int> pii;\r\n#define fi first\r\n#define se second\r\nint t, n, m, k;\r\nint x[100004], a[100004], b[100004], c[100004], d[100004], h[100004];\r\nvector<pair<int, pii> >v[100004];\r\nbool cmp1(pair<int, pii>A, pair<int, pii>B) {\r\n\tif (A.fi != B.fi)return A.fi < B.fi;\r\n\treturn A.se.fi < B.se.fi;\r\n}\r\nbool cmp2(pair<int, pii>A, pair<int, pii>B) {\r\n\tif (A.fi != B.fi)return A.fi > B.fi;\r\n\treturn A.se.fi < B.se.fi;\r\n}\r\nll dp[100004];\r\nvoid sol() {\r\n\tscanf(\"%d%d%d\", &n, &m, &k);\r\n\tfor (int i = 1; i <= n; i++)scanf(\"%d\", &x[i]), v[i].clear();\r\n\tfor (int i = 1; i <= k; i++) {\r\n\t\tscanf(\"%d%d%d%d%d\", &a[i], &b[i], &c[i], &d[i], &h[i]);\r\n\t\tv[a[i]].push_back({b[i], {1, i}});\r\n\t\tv[c[i]].push_back({d[i], {0, i}});\r\n\t\tdp[i] = -1e18;\r\n\t}\r\n\tdp[k + 1] = -1e18, h[k + 1] = 0;\r\n\tv[1].push_back({1, {0, 0}});\r\n\tv[n].push_back({m, {1, k + 1}});\r\n\tfor (int i = 1; i <= n; i++)if (!v[i].empty()) {\r\n\t\t\tsort(v[i].begin(), v[i].end(), cmp1);\r\n\t\t\tll f = -1e18;\r\n\t\t\tint lst = 0;\r\n\t\t\tfor (auto w : v[i]) {\r\n\t\t\t\tf -= (ll)(w.fi - lst) * x[i], lst = w.fi;\r\n\t\t\t\tif (w.se.fi == 0)f = max(f, dp[w.se.se]);\r\n\t\t\t\telse dp[w.se.se] = f + h[w.se.se];\r\n\t\t\t}\r\n\t\t\tsort(v[i].begin(), v[i].end(), cmp2);\r\n\t\t\tf = -1e18;\r\n\t\t\tlst = m + 1;\r\n\t\t\tfor (auto w : v[i]) {\r\n\t\t\t\tf -= (ll)(lst - w.fi) * x[i], lst = w.fi;\r\n\t\t\t\tif (w.se.fi == 0)f = max(f, dp[w.se.se]);\r\n\t\t\t\telse dp[w.se.se] = max(dp[w.se.se], f + h[w.se.se]);\r\n\t\t\t}\r\n\t\t}\r\n\tif (dp[k + 1] < -1e17)puts(\"NO ESCAPE\");\r\n\telse printf(\"%lld\\n\", -dp[k + 1]);\r\n}\r\nint main() {\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--)sol();\r\n}"
}