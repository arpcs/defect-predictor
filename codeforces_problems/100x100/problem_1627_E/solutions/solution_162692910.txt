{
    "id": 162692910,
    "contestId": 1627,
    "creationTimeSeconds": 1656900703,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "maxwellzen"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 19558400,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\n// #include <ext/pb_ds/assoc_container.hpp>\n// using namespace __gnu_pbds;\n// typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> iset;\n\ntypedef long long ll;\ntypedef long double db;\ntypedef string str;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<ll> vll;\ntypedef vector<vll> vvll;\ntypedef vector<bool> vb;\ntypedef vector<vb> vvb;\ntypedef vector<str> vs;\ntypedef vector<char> vc;\ntypedef vector<vc> vvc;\ntypedef pair<int, int> pi;\ntypedef pair<ll, ll> pl;\ntypedef pair<db, db> pd;\ntypedef vector<pi> vpi;\ntypedef vector<vpi> vvpi;\n\n#define FOR(i,a,b) for (int i = (a); i < (b); ++i)\n#define F0R(i,a) FOR(i,0,a)\n#define ROF(i,a,b) for (int i = (b)-1; i >= (a); --i)\n#define R0F(i,a) ROF(i,0,a)\n#define trav(a,x) for (auto& a: x)\n#define uid(a, b) uniform_int_distribution<int>(a, b)(rng)\n\n#define pb push_back\n#define rsz resize\n#define all(x) begin(x), end(x)\n#define mp make_pair\n#define F first\n#define S second\n#define lb lower_bound\n#define ub upper_bound\n#define arr array\n#define nl '\\n'\n#define YES cout<<\"YES\\n\"\n#define NO cout<<\"NO\\n\"\n\n#ifndef LOCAL\n#define debug(...) 0\n#else\n#include \"/Users/maxwellzen/CP/debug.cpp\"\n#endif\n\ntemplate<class T> using pq = priority_queue<T>;\ntemplate<class T> using pqg = priority_queue<T, vector<T>, greater<T>>;\ntemplate<int N> using ai = array<int, N>;\ntemplate<class T> bool ckmin(T& a, const T& b) { return b < a ? a = b, 1 : 0; }\ntemplate<class T> bool ckmax(T& a, const T& b) { return a < b ? a = b, 1 : 0; }\ntemplate<class T> void read(vector<T>& a, int n) {a.rsz(n); F0R(i, n) cin >> a[i];}\ntemplate<class T> void read(vector<vector<T>>& a, int n, int m) {a.assign(n, vector<T>(m)); F0R(i, n) F0R(j, m) cin >> a[i][j];}\ntemplate<class T> void print(vector<T>& a, int n) {F0R(i, n) cout << a[i] << ' '; cout << nl;}\ntemplate<class T> void print(vector<vector<T>>& a, int n, int m) {F0R(i, n) {F0R(j, m) cout << a[i][j] << ' '; cout << nl;}}\ntemplate<class T> bool btw(T x, T a, T b) {return a <= x && x <= b;}\n\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\nconst ll MOD = 1e9+7;// 998244353;\nll gcd(ll a, ll b){return b == 0 ? a: gcd(b, a%b);}\nconst int dx[4]={1,0,-1,0}, dy[4]={0,1,0,-1}; // D R U L\n\nvoid setIO(string name=\"\") {\n    ios_base::sync_with_stdio(0); cin.tie(0);\n    if (name != \"\") {\n        freopen((name+\".in\").c_str(),\"r\",stdin);\n        freopen((name+\".out\").c_str(),\"w\",stdout);\n    }\n}\n\ntemplate<class T> struct Seg { // comb(ID,b) = b\n    const T ID = 1e18; T comb(T a, T b) { return min(a,b); }\n    int n; vector<T> seg; set<int> s;\n    void init(int _n) { n = _n; seg.assign(2*n,ID); }\n    void pull(int p) { seg[p] = comb(seg[2*p],seg[2*p+1]); }\n    void upd(int p, T val) { // set val at position p\n        s.insert(p); p += n; seg[p] = min(seg[p], val); for (p /= 2; p; p /= 2) pull(p); }\n    void reset(int p) {p += n; seg[p] = ID; for (p /= 2; p; p /= 2) pull(p);}\n    void reset() {for (int i : s) reset(i); s.clear();}\n    T query(int l, int r) {  // min on interval [l, r]\n        T ra = ID, rb = ID;\n        for (l += n, r += n+1; l < r; l /= 2, r /= 2) {\n            if (l&1) ra = comb(ra,seg[l++]);\n            if (r&1) rb = comb(seg[--r],rb);\n        }\n        return comb(ra,rb);\n    }\n};\n\nconst int K = 100000;\nint n, m, k;\nvll x;\nint a[K], b[K], c[K], d[K], h[K];\nvvi st, ed;\nSeg<ll> l, r;\nvll dp;\n\nvoid solve() {\n    cin >> n >> m >> k;\n    read(x, n);\n\n    ll worst = 0;\n    F0R(i, n) worst += x[i] * (m-1);\n\n    F0R(i, k) cin >> a[i] >> b[i] >> c[i] >> d[i] >> h[i];\n    F0R(i, k) a[i]--, b[i]--, c[i]--, d[i]--;\n\n    st.clear(); st.rsz(n);\n    ed.clear(); ed.rsz(n);\n    F0R(i, k) st[a[i]].pb(i), ed[c[i]].pb(i);\n    l.init(m); r.init(m);\n    l.upd(0, 0); r.upd(0, 0);\n    dp.assign(k, (ll)1e18);\n    F0R(floor, n-1) {\n        for (int i : st[floor]) {\n            ll cur = 1e18;\n            ckmin(cur, l.query(0, b[i]) + x[floor]*b[i]);\n            ckmin(cur, r.query(b[i], m-1) - x[floor]*b[i]);\n            dp[i] = cur - h[i];\n        }\n        l.reset(); r.reset();\n        for (int i : ed[floor+1]) {\n            l.upd(d[i], dp[i]-x[floor+1]*d[i]);\n            r.upd(d[i], dp[i]+x[floor+1]*d[i]);\n        }\n    }\n    ll ans = l.query(0, m-1) + x[n-1]*(m-1);\n    l.reset(); r.reset();\n    if (ans > worst) cout << \"NO ESCAPE\\n\";\n    else cout << ans << nl;\n\n}\n\nint main() {\n    setIO();\n    cout << fixed << setprecision(15);\n    int t = 1;\n    cin >> t;\n    while (t--) {\n        solve();\n    }\n}\n"
}