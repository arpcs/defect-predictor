{
    "id": 144827173,
    "contestId": 1627,
    "creationTimeSeconds": 1643713198,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "R0V"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#define pi 3.14159265358979323846\r\n#define sqr(a) (a)*(a)\r\n#define v vector\r\n#define ll long long\r\n#define ld long double\r\n#define f first\r\n#define sec second\r\n#define pb push_back\r\n#define pf push_front\r\n#define umap unordered_map\r\n#define sort(a) sort(a.begin(),a.end())\r\n#define rev(a) reverse(a.begin(),a.end())\r\n#define yes cout<<\"YES\"<<endl\r\n#define no cout<<\"NO\"<<endl\r\n#define mod 1000000007\r\n#define inf 2*1e18\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\ntypedef tree<ll,null_type,less<ll>,rb_tree_tag,tree_order_statistics_node_update>uset;\r\n\r\nll dp[100000][100000];\r\nv<v<ll>>a[100000][100000];\r\nll x[100000];\r\nset<ll>st[100000];\r\nv<pair<ll,ll>>mas;\r\n\r\nvoid solve(){\r\n    ll n,m,k,a1,a2,a3,a4,a5,i,j,l,r,c,last;\r\n    cin>>n>>m>>k;\r\n    for (i=0;i<n;i++){\r\n        for (j=0;j<m;j++){\r\n            dp[i][j]=-inf;\r\n            a[i][j].clear();\r\n        }\r\n        st[i].clear();\r\n    }\r\n    st[0].insert(0);\r\n    st[n-1].insert(m-1);\r\n    dp[0][0]=0;\r\n    for (i=0;i<n;i++){\r\n        cin>>x[i];\r\n    }\r\n    for (i=0;i<k;i++){\r\n        cin>>a1>>a2>>a3>>a4>>a5;\r\n        a1--;\r\n        a2--;\r\n        a3--;\r\n        a4--;\r\n        a[a1][a2].pb({a3,a4,a5});\r\n        st[a1].insert(a2);\r\n        st[a3].insert(a4);\r\n    }\r\n    for (i=0;i<n;i++){\r\n        l=-inf;\r\n        mas.clear();\r\n        for (auto p : st[i]){\r\n            mas.pb({dp[i][p]-x[i]*p,p});\r\n        }\r\n        sort(mas);\r\n        r=mas[mas.size()-1].f;\r\n        c=0;\r\n        last=0;\r\n        for (auto p : st[i]){\r\n            l-=x[i]*(p-last);\r\n            c+=x[i]*(p-last);\r\n            while (mas.size() && mas[mas.size()-1].sec<=p){\r\n                mas.pop_back();\r\n            }\r\n            if (mas.size()){\r\n                r=mas[mas.size()-1].f+c;\r\n            }else{\r\n                r=-inf;\r\n            }\r\n            l=max(l,dp[i][p]);\r\n            dp[i][p]=max(dp[i][p],max(l,r));\r\n            for (j=0;j<a[i][p].size();j++){\r\n                dp[a[i][p][j][0]][a[i][p][j][1]]=max(dp[a[i][p][j][0]][a[i][p][j][1]],dp[i][p]+a[i][p][j][2]);\r\n            }\r\n            last=p;\r\n        }\r\n    }\r\n    if (dp[n-1][m-1]<-1e17){\r\n        cout<<\"NO ESCAPE\"<<endl;\r\n    }else{\r\n        cout<<-dp[n-1][m-1]<<endl;\r\n    }\r\n}\r\n\r\nint main(){\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    srand(time(NULL));\r\n    int test;\r\n    cin>>test;\r\n    while (test--){\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n"
}