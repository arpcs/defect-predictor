{
    "id": 150079306,
    "contestId": 1627,
    "creationTimeSeconds": 1647652517,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "patcht"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 14950400,
    "source": "#include<bits/stdc++.h>\r\n\r\n#define ll long long\r\n#define fs first\r\n#define sc second\r\n#define pll pair<ll,ll>\r\n#define mp make_pair\r\n#define pb push_back\r\n#define mod 998244353\r\n#define N 100005\r\n\r\nusing namespace std;\r\n\r\nconst ll oo=1e18;\r\n\r\ntemplate<typename Number>\r\nNumber GCD(Number u,Number v) {\r\n    while (v !=0) {\r\n        Number r=u%v;\r\n        u=v;\r\n        v=r;\r\n    }\r\n    return u;\r\n}\r\n\r\nll n,m,k;\r\nll x[N],a[N],b[N],c[N],d[N];\r\nvector <ll> rowu[N],rowd[N];\r\nvector < tuple <ll,ll,ll> > v[N];\r\nmap <ll,ll> dp[N],id[N];\r\nmap <ll,bool> f[N];\r\nll ans;\r\n\r\nvoid solve()\r\n{\r\n    cin>>n>>m>>k;\r\n    for (ll i=1;i<=n;i++)\r\n        cin>>x[i];\r\n    for (ll i=1,h;i<=k;i++)\r\n    {\r\n        cin>>a[i]>>b[i]>>c[i]>>d[i]>>h;\r\n        rowu[a[i]].push_back(b[i]);\r\n        rowd[c[i]].push_back(d[i]);\r\n        id[a[i]][b[i]]=i;\r\n        v[i].push_back({c[i],d[i],h});\r\n    }\r\n\r\n    ans=oo;\r\n\r\n    f[1][1]=true;\r\n    rowd[1].push_back(1);\r\n    for (ll i=1,j,k;i<=n;i++)\r\n        for (ll jj=0;jj<rowu[i].size();jj++)\r\n        {\r\n            j=rowu[i][jj];\r\n            for (ll kk=0;kk<rowd[i].size();kk++)\r\n            {\r\n                k=rowd[i][kk];\r\n                if (!f[i][k])\r\n                    continue;\r\n                if (!f[i][j] or dp[i][j]>dp[i][k]+x[i]*abs(j-k))\r\n                {\r\n                    f[i][j]=true;\r\n                    dp[i][j]=dp[i][k]+x[i]*abs(j-k);   \r\n                }\r\n            }\r\n\r\n            if (!f[i][j])\r\n                continue;\r\n            for (auto [x,y,w]:v[id[i][j]])\r\n                if (!f[x][y] or dp[x][y]>dp[i][j]-w)\r\n                {\r\n                    f[x][y]=true;\r\n                    dp[x][y]=dp[i][j]-w;\r\n                }\r\n        }\r\n\r\n    ans=oo;\r\n    for (ll i=1;i<=m;i++)\r\n        if (f[n][i])\r\n            ans=min(ans,dp[n][i]+x[n]*(m-i));\r\n\r\n    if (ans<oo)\r\n        cout<<ans;\r\n    else\r\n        cout<<\"NO ESCAPE\";\r\n    cout<<'\\n';\r\n\r\n    for (ll i=1;i<=k;i++)\r\n    {\r\n        f[a[i]][b[i]]=f[c[i]][d[i]]=false;\r\n        rowu[a[i]].pop_back();\r\n        rowd[c[i]].pop_back();\r\n        v[id[a[i]][b[i]]].pop_back();\r\n    }\r\n}\r\n\r\nsigned main() {\r\n    ios_base::sync_with_stdio(0);cin.tie(0);\r\n    #ifndef ONLINE_JUDGE\r\n    freopen(\"test.inp\",\"r\",stdin);\r\n    freopen(\"test.out\",\"w\",stdout);\r\n    #endif\r\n\r\n    ll test=1;\r\n    cin>>test;\r\n    while (test--) \r\n        solve();\r\n}  "
}