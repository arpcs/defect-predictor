{
    "id": 159559604,
    "contestId": 1627,
    "creationTimeSeconds": 1654438863,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "hungry1234"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 343,
    "memoryConsumedBytes": 29388800,
    "source": "#include<bits/stdc++.h>\r\n#define X first\r\n#define Y second\r\n#define fastIO ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0)\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int N=200100;\r\nstruct node{\r\n    int p,w;\r\n};\r\nvector<node> tu[N];\r\nmap<pair<int,int>,int> hv;\r\nvector<int> P[N];\r\nint cnt,hid[N];\r\nbool cmp(int x,int y){\r\n    return hid[x]<hid[y];\r\n}\r\nint t,hw[N];\r\nll dp[N];\r\nint main(){\r\n    fastIO;\r\n    cin>>t;\r\n    while(t--){\r\n        int n,m,k;\r\n        cin>>n>>m>>k;\r\n        for(int i=1;i<=n;i++) cin>>hw[i];\r\n        hv[{1,1}]=++cnt;\r\n        for(int i=1;i<=k;i++){\r\n            int x,y,xx,yy,w;\r\n            cin>>x>>y>>xx>>yy>>w;\r\n            if(!hv[{x,y}]) hv[{x,y}]=++cnt;\r\n            if(!hv[{xx,yy}]) hv[{xx,yy}]=++cnt;\r\n            tu[hv[{x,y}]].push_back({hv[{xx,yy}],-w});\r\n        }\r\n        if(!hv[{n,m}]) hv[{n,m}]=++cnt;\r\n        for(auto mes:hv) P[mes.X.X].push_back(mes.Y),hid[mes.Y]=mes.X.Y;\r\n        for(int i=1;i<=n;i++) sort(P[i].begin(),P[i].end(),cmp);\r\n        fill(dp,dp+cnt+1,1e17+100),dp[1]=0;\r\n        for(int i=1;i<=n;i++){\r\n            for(int j=1;j<(int)P[i].size();j++){\r\n                int now=P[i][j],las=P[i][j-1];\r\n                dp[now]=min(dp[now],dp[las]+1ll*hw[i]*(hid[now]-hid[las]));\r\n            } \r\n            for(int j=(int)P[i].size()-2;j>=0;j--){\r\n                int now=P[i][j],las=P[i][j+1];\r\n                \r\n                dp[now]=min(dp[now],dp[las]+1ll*hw[i]*(hid[las]-hid[now]));\r\n            } \r\n            for(int x:P[i]){\r\n                for(auto mes:tu[x]) dp[mes.p]=min(dp[mes.p],dp[x]+mes.w);\r\n            }\r\n        }\r\n        if(dp[hv[{n,m}]]>1e16) cout<<\"NO ESCAPE\"<<endl;\r\n        else cout<<dp[hv[{n,m}]]<<endl;\r\n        for(int i=1;i<=cnt;i++) tu[i].clear();\r\n        for(int i=1;i<=n;i++) P[i].clear();\r\n        hv.clear(),cnt=0;\r\n    }\r\n    return 0;\r\n}"
}