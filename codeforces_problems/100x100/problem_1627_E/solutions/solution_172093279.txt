{
    "id": 172093279,
    "contestId": 1627,
    "creationTimeSeconds": 1663118546,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "Neos"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define ll long long\r\n#define ar array\r\n#define fi first\r\n#define se second\r\ntypedef pair<int, int> ii;\r\n\r\ntemplate <class T>\r\nbool minimize(T &a, const T &b) {\r\n    if(a > b) {a = b; return 1;}\r\n    return 0;\r\n}\r\ntemplate <class T>\r\nbool maximize(T &a, const T &b) {\r\n    if(a < b) {a = b; return 1;}\r\n    return 0;\r\n}\r\n\r\nconst int N = 1e5 + 7;\r\n\r\nstruct item {\r\n    int b, c, d, h;\r\n    item() {}\r\n    item(int b, int c, int d, int h):\r\n        b(b), c(c), d(d), h(h) {}\r\n};\r\n\r\nint n, m, k, a[N], b[N], c[N], d[N], h[N];\r\nll\r\nvector<ll> adj[N], dp[N];\r\nvector<item> edge[N];\r\nvoid solve() {\r\n    cin >> n >> m >> k;\r\n    for (int i = 1; i <= n; i++) {\r\n        cin >> x[i];\r\n        adj[i].clear(); dp[i].clear(); edge[i].clear();\r\n    }\r\n\r\n    for (int i = 1; i <= k; i++) {\r\n        cin >> a[i] >> b[i] >> c[i] >> d[i] >> h[i];\r\n        adj[a[i]].push_back(b[i]);\r\n        adj[c[i]].push_back(d[i]);\r\n    }\r\n\r\n    adj[1].push_back(1); adj[n].push_back(m);\r\n    for (int i = 1; i <= n; i++) {\r\n        sort(adj[i].begin(), adj[i].end());\r\n        adj[i].resize(unique(adj[i].begin(), adj[i].end()) - adj[i].begin());\r\n        dp[i].resize(adj[i].size());\r\n        fill(dp[i].begin(), dp[i].end(), 1e11);\r\n    }\r\n\r\n    for (int i = 1; i <= n; i++) {\r\n        int y1 = lower_bound(adj[a[i]].begin(), adj[a[i]].end(), b[i]) - adj[a[i]].begin();\r\n        int y2 = lower_bound(adj[c[i]].begin(), adj[c[i]].end(), d[i]) - adj[c[i]].begin();\r\n        edge[a[i]].push_back(item(y1, c[i], y2, h[i]));\r\n    }\r\n\r\n    dp[1][0] = 0;\r\n    for (int i = 1; i <= n; i++) {\r\n        for (int j = 1; j < dp[i].size(); j++) \r\n            minimize(dp[i][j], dp[i][j - 1] + 1ll * abs(adj[i][j] - adj[i][j - 1]) * x[i]);\r\n        for (int j = dp[i].size() - 2; j >= 0; j--) \r\n            minimize(dp[i][j], dp[i][j + 1] + 1ll * abs(adj[i][j + 1] - adj[i][j]) * x[i]);\r\n        if (i == n) continue;\r\n        for (item it: edge[i]) minimize(dp[it.c][it.d], dp[i][it.b] - it.h);\r\n    }   \r\n    \r\n    if (dp[n].back() > 1e15) cout << \"NO ESCAPE\\n\";\r\n    else cout << dp[n].back() << '\\n';\r\n}\r\nsigned main() {\r\n    ios::sync_with_stdio(0); cin.tie(0);\r\n    if (fopen(\"test.inp\", \"r\"))\r\n        freopen(\"test.inp\", \"r\", stdin),\r\n        freopen(\"test.out\", \"w\", stdout);\r\n    int t; cin >> t;\r\n    while (t--) solve();\r\n}   \r\n\r\n"
}