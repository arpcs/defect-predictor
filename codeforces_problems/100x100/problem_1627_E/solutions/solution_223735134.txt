{
    "id": 223735134,
    "contestId": 1627,
    "creationTimeSeconds": 1694959126,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "qhj0906"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 7577600,
    "source": "// LUOGU_RID: 125051280\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define int long long\r\nnamespace IO{\r\n\ttemplate<typename T> inline void write(T x){\r\n\t\tif(x<0) putchar('-'),x=-x;\r\n\t\tif(x==0){\r\n\t\t\tputchar('0'); return ;\r\n\t\t}\r\n\t\tif(x>9) write(x/10);\r\n\t\tputchar(x%10+'0');\r\n\t\treturn ;\r\n\t}\r\n\ttemplate<typename T> inline void read(T &x){\r\n\t\tx=0; int w=1; char ch=getchar();\r\n\t\twhile(!isdigit(ch)){\r\n\t\t\tif(ch=='-') w=-1; ch=getchar();\r\n\t\t}\r\n\t\twhile(isdigit(ch))\r\n\t\t\tx=(x<<1)+(x<<3)+(ch^48),ch=getchar();\r\n\t\tx*=w; return ;\r\n\t}\r\n}\r\nusing namespace IO;\r\n#define writesp(x) write(x),putchar(' ')\r\n#define writeln(x) write(x),putchar('\\n')\r\n#define inf 0x3f3f3f3f3f3f3f3f\r\n#define mod 998244353\r\n#define N 100000+10\r\nint n,m,k,ans,t;\r\nint xn[N];\r\nstruct un{\r\n    int a,b,c,d,h;\r\n}ti[N];\r\nint dp[N];\r\nvector<int>ed[N];\r\nint cmp(un a,un b){\r\n    return a.a<b.a;\r\n}\r\nint v[N];\r\nstruct node{\r\n    int x,y;\r\n};\r\npriority_queue<node>que;\r\nbool operator <(const node &a,const node &b){\r\n    return a.y>b.y;\r\n}\r\nsigned main(){\r\n    //freopen(\"1.in\",\"r\",stdin);\r\n    read(t);\r\n    while(t--){\r\n        ans=inf;\r\n        bool ansl=0;\r\n        read(n),read(m),read(k);\r\n        for(int i=1;i<=n;++i){\r\n            read(xn[i]);\r\n        }\r\n        for(int i=1;i<=k;++i){\r\n            int a,b,c,d,h;\r\n            read(a),read(b),read(c),read(d),read(h);\r\n            ti[i]=un{a,b,c,d,h};\r\n            if(c==n)ansl=1;\r\n        }\r\n        sort(ti+1,ti+k+1,cmp);\r\n        for(int i=1;i<=k;++i){\r\n            ed[ti[i].c].push_back(i);\r\n        }\r\n        if(ti[1].a!=1||ansl==0){\r\n            printf(\"NO ESCAPE\\n\");\r\n            for(int i=1;i<=k;++i){\r\n                ed[ti[i].c].clear();\r\n            }\r\n            continue;\r\n        }\r\n        memset(v,0,sizeof(v));\r\n        memset(dp,inf,sizeof(dp));\r\n        int num=0;\r\n        for(int i=1;ti[i].a==1;++i){\r\n            dp[i]=abs(ti[i].b-1)*xn[1];\r\n            num++;\r\n        }\r\n        ansl=0;\r\n        for(int i=num+1;i<=k;++i){\r\n            for(int j=0;j<ed[ti[i].a].size();++j){\r\n                int y=ed[ti[i].a][j];\r\n                if(dp[y]>=inf)continue;\r\n                dp[i]=min(dp[i],dp[y]-ti[y].h+abs(ti[y].d-ti[i].b)*xn[ti[i].a]);\r\n            }\r\n            if(dp[i]>=inf)continue;\r\n            if(ti[i].c==n){\r\n                ans=min(ans,dp[i]-ti[i].h+abs(m-ti[i].d)*xn[n]);\r\n                ansl=1;\r\n            }\r\n        }\r\n        if(!ansl){\r\n            printf(\"NO ESCAPE\\n\");\r\n        }\r\n        else{\r\n            writeln(ans);\r\n        }\r\n        for(int i=1;i<=k;++i){\r\n            ed[ti[i].c].clear();\r\n        }\r\n    }\r\nreturn 0;\r\n}\r\n"
}