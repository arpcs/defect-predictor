{
    "id": 167528020,
    "contestId": 1627,
    "creationTimeSeconds": 1659970297,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "MaroonSky"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 5632000,
    "source": "#include<bits/stdc++.h>\r\n#define inf INT_MAX\r\n#define ll long long\r\n#define sc(a) scanf(\"%d\",&a)\r\n#define scc(a,b) scanf(\"%d %d\",&a,&b)\r\n#define sccc(a,b,c) scanf(\"%d %d %d\",&a,&b,&c)\r\n#define lsc(a) scanf(\"%lld\",&a)\r\n#define lscc(a,b) scanf(\"%lld %lld\",&a,&b)\r\n#define lsccc(a,b,c) scanf(\"%lld %lld %lld\",&a,&b,&c)\r\n#define pf(a) printf(\"%d\",a)\r\n#define pff(a,b) printf(\"%d %d\",a,b)\r\n#define pfff(a,b,c) printf(\"%d %d %d\",a,b,c)\r\n#define pb(a) push_back(a)\r\n#define em empty()\r\n#define fr front()\r\n#define cl clear()\r\n#define sz size()\r\n#define mp(a,b) make_pair(a,b)\r\n#define fri(b) freopen(b,\"r\",stdin)\r\n#define fro(b) freopen(b,\"w\",stdout)\r\n#define bassifir(a) __builtin_clz(a)\r\n#define sonsifir(a) __builtin_ctz(a)\r\n#define birsay(a) __builtin_popcount(a)\r\n\r\n\r\n\r\nusing namespace std;\r\n\r\nconst ll INF = (ll)-1e18;\r\n\r\nmap < pair <int,int>, ll > can; \r\n\r\nmap < pair <int,int> , vector< pair< pair<int,int>, ll> > > add;\r\n\r\nmap < pair<int,int>, pair<int,int> > loc;\r\n\r\nset<int> gir[100013];\r\n\r\nset<int> cik[100013];\r\n\r\nll fcost[100013];\r\n\r\n\r\nint main(){\r\n\tios_base::sync_with_stdio(0); \r\n\tcin.tie(0);\r\n\tcout.tie(0);\r\n\t// fri(\"contestgir.txt\");\r\n\t// fro(\"contestcik.txt\");\r\n\r\n\tint t;\r\n\tcin>>t;\r\n\r\n\tfor(int u = 1; u <= t; u++) {\r\n\t\tint n,m;\r\n\t\tcin>>n>>m;\r\n\t\tint k;\r\n\t\tcin>>k;\r\n\r\n\t\t\r\n\r\n\t\tfor(int i = 1; i <= n; i++) {\r\n\t\t\tcin>>fcost[i];\r\n\t\t}\r\n\r\n\t\tfor(int i = 1; i <= k; i++) {\r\n\t\t\tint a1,a2,b1,b2;\r\n\t\t\tll h;\r\n\t\t\tcin>>a1>>a2>>b1>>b2>>h;\r\n\t\t\tcik[a1].insert(a2);\r\n\t\t\tgir[b1].insert(b2);\r\n\t\t\tadd[{a1,a2}].pb(mp(mp(b1,b2),h));\r\n\t\t\tloc[{b1,b2}] = mp(a1,a2);\r\n\t\t\tif(a1 == 1) {\r\n\t\t\t\tcan[{a1,a2}] = -fcost[1] * (a2-1); \r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcan[{a1,a2}] = INF;\r\n\t\t\t}\r\n\t\t\tcan[{b1,b2}] = INF;\r\n\t\t}\r\n\r\n\t\tcan[{n,m}] = INF;\r\n\r\n\t\tgir[1].insert(1);\r\n\r\n\t\tloc[{1,1}] = mp(1,1); \r\n\r\n\t\tcik[n].insert(m);\r\n\r\n\t\tfor (int i = 1; i <= n; i++) {\r\n\t\t\tif(gir[i].size() == 0) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tauto it = gir[i].begin();\r\n\t\t\tauto it2 = it;\r\n\t\t\tit++;\r\n\t\t\twhile (it != gir[i].end()) {\r\n\t\t\t\tcan[{i,*it}] = max (can[{i,*it}], can[{i,*it2}] - (abs(*it-*it2) * fcost[i]));\r\n\t\t\t\tit2 = it;\r\n\t\t\t\tit++;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tit = gir[i].end();\r\n\t\t\tit--;\r\n\t\t\tif(gir[i].size() > 1) {\r\n\t\t\t\tit2 = it;\r\n\t\t\t\tit--;\r\n\t\t\t\twhile(true) {\r\n\t\t\t\t\tcan[{i,*it}] = max (can[{i,*it}], can[{i,*it2}] - (abs(*it2-*it) * fcost[i]));\r\n\t\t\t\t\tif(it == gir[i].begin()) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tit2 = it;\r\n\t\t\t\t\tit--;\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tit = cik[i].begin();\r\n\r\n\t\t\t\r\n\r\n\t\t\twhile(it != cik[i].end()) {\r\n\t\t\t\tit2 = gir[i].lower_bound(*it);\r\n\t\t\t\tif(it2 != gir[i].end()) {\r\n\t\t\t\t\tcan[{i,*it}] = can[{i,*it2}] - fcost[i] * abs(*it-*it2);\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t\tif(it2 != gir[i].begin()) {\r\n\t\t\t\t\tit2--;\r\n\t\t\t\t\tcan[{i,*it}] = max(can[{i,*it}], can[{i,*it2}]- fcost[i] * abs(*it-*it2));\r\n\t\t\t\t}\r\n\t\t\t\tfor(int j = 0; j < add[{i,*it}].size(); j++) {\r\n\t\t\t\t\tpair<int,int> trg = add[{i,*it}][j].first;\r\n\t\t\t\t\tcan[trg] = max(can[trg], can[{i,*it}] + add[{i,*it}][j].second);\r\n\t\t\t\t}\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tit++;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tll ans = can[mp(n,m)];\r\n\r\n\r\n\t\tif(ans >= (ll)1e15) {\r\n\t\t\tcout<<\"NO ESCAPE\"<<endl;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcout<<-ans<<endl;\r\n\t\t}\r\n\t\t\r\n\t\t// if(u == 4) {\r\n\t\t// \tcout<<can[{4,2}]<<endl;\r\n\t\t// \tcout<<canr[{4,2}]<<endl;\r\n\t\t// \tcout<<canl[{4,2}]<<endl;\r\n\t\t// }\r\n\r\n\t\tcan.clear();\r\n\t\tadd.clear();\r\n\t\tloc.clear();\r\n\t\t\r\n\t\tfor(int i = 1; i <= n; i++) {\r\n\t\t\tgir[i].clear();\r\n\t\t\tcik[i].clear();\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n\r\n"
}