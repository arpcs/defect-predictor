{
    "id": 217197058,
    "contestId": 1627,
    "creationTimeSeconds": 1691209732,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "tr1ten"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <cstdio>\n#include <bits/stdc++.h>\n\nusing namespace std;\n#include \"ext/pb_ds/assoc_container.hpp\"\n#include \"ext/pb_ds/tree_policy.hpp\"\nusing namespace __gnu_pbds;\ntemplate<class T>\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update> ;\ntemplate<typename T> \nusing ordered_multiset = tree<T, null_type,less_equal<T>, rb_tree_tag,tree_order_statistics_node_update>;\n// find_by_order(k)  returns iterator to kth element starting from 0;\n// order_of_key(k) returns count of elements strictly smaller than k;\n// useful defs\ntypedef long long ll; \ntypedef vector<ll> vi;\ntypedef vector<vi> vii;\ntypedef pair<ll,ll> pi;\ntypedef vector<pi> vpi;\ntypedef unordered_map<ll,ll> mll;\n#define pb push_back\n#define mp make_pair\n#define rep(i,a,b) for (int i = (a); i < (b); i++)\n#define per(i,a,b) for (int i = (b)-1; i >= (a); i--)\n#define trav(a,arr) for (auto& a: (arr))\n#define sz(x) (int)(x).size()\n#define mk_vec(name,sz,value) vi name(sz,value)\n#define mk_mat(name,n,m,value) vii name(n, vi(m, value))\n#define contains(x) find(x) != string::npos\n#define tkv(vec,sz) rep(i,0,sz) cin>>vec[i]\n#define srv(vec) sort(vec.begin(), vec.end())\n#define all(x) x.begin(), x.end()\n#define less(a,b) a<b\n#define vsum(vec) accumulate(vec.begin(), vec.end(), 0L);\n#define vmax(vec) *max_element(vec.begin(), vec.end());\n#define vmin(vec) *min_element(vec.begin(), vec.end());\n#define pvc(vec) trav(x,vec) cout<<x<<\" \"; cout<<endl;\n#define put(x) cout<<(x)<<endl;\n#define put2(x,y) cout<<(x)<<\" \"<<(y)<<endl;\n#define put3(x,y,z) cout<<(x)<<\" \"<<(y)<<\" \"<<(z)<<endl;\n#define mod(x) (x + MOD)%MOD\n// debugging\n#define timed(x) {auto start = chrono::steady_clock::now(); x; auto end = chrono::steady_clock::now(); auto diff = end - start; cout << chrono::duration <double, milli> (diff).count() << \" ms\" << endl;}\n\n\nvoid __print(int x) {cerr << x;}\nvoid __print(long x) {cerr << x;}\nvoid __print(long long x) {cerr << x;}\nvoid __print(unsigned x) {cerr << x;}\nvoid __print(unsigned long x) {cerr << x;}\nvoid __print(unsigned long long x) {cerr << x;}\nvoid __print(float x) {cerr << x;}\nvoid __print(double x) {cerr << x;}\nvoid __print(long double x) {cerr << x;}\nvoid __print(char x) {cerr << '\\'' << x << '\\'';}\nvoid __print(const char *x) {cerr << '\\\"' << x << '\\\"';}\nvoid __print(const string &x) {cerr << '\\\"' << x << '\\\"';}\nvoid __print(bool x) {cerr << (x ? \"true\" : \"false\");}\n\ntemplate<typename T, typename V>\nvoid __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}\ntemplate<typename T>\nvoid __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? \",\" : \"\"), __print(i); cerr << \"}\";}\nvoid _print() {cerr << \"]\\n\";}\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << \", \"; _print(v...);}\n\n#ifndef ONLINE_JUDGE\n#define debug(x...) cerr << \"[\" << #x << \"] = [\"; _print(x)\n#else\n#define debug(x...)\n#endif\nconst ll MOD = 1e9+7;\nconst ll INF = 1e10+5;\n\nstruct Ladder\n{\n    int a;\n    int b;\n    int c;\n    int d;\n    int h;\n};\n\n// driver code\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n    // freopen(\"input.in\",\"r\",stdin);\n    // freopen(\"output.out\",\"w\",stdout);\t  \n    int T=1;\n    cin>>T;\n    while(T--){\n        int n,m,k;\n        cin >> n >> m >>k;\n        vi xi(n);\n        tkv(xi,n);\n        vector<vector<Ladder>> ladder(n);\n        rep(i,0,k){\n            Ladder ld;\n            cin >>ld.a>>ld.b >>ld.c>>ld.d>>ld.h;\n            ld.a--;ld.d--;ld.b--;ld.c--;\n            ladder[ld.a].push_back(ld);\n        }\n        unordered_map<ll,unordered_map<ll,ll>> health;\n        priority_queue<pair<ll,pi>> pq;\n        pq.push({0,{0,0}});\n        health[0][0] = 0;\n        ll res = -INF;\n        while(!pq.empty()){\n            auto u = pq.top();\n            // debug(u);\n            pq.pop();\n            if(u.second.first==n-1){\n                res = max(res,u.first - xi[n-1]*abs(m-1-u.second.second));\n                continue;\n            }\n            if(u.first<health[u.second.first][u.second.second]) continue;\n            trav(ld,ladder[u.second.first]){\n                // debug(ld.a,ld.b,ld.c,ld.d);\n                if(health.count(ld.c)==0 || health[ld.c].count(ld.d)==0 || health[ld.c][ld.d] < u.first + ld.h - xi[u.second.first]*abs(ld.b-u.second.second)){\n                    health[ld.c][ld.d] = u.first + ld.h -xi[u.second.first]*abs(ld.b-u.second.second);\n                    pq.push({health[ld.c][ld.d],{ld.c,ld.d}});\n                }\n            }\n\n        }\n        if(res==-INF) cout << \"NO ESCAPE\" << endl;\n        else cout << -res << endl;\n\n    }\n\n    return 0;\n}\n"
}