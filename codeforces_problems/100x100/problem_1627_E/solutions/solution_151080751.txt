{
    "id": 151080751,
    "contestId": 1627,
    "creationTimeSeconds": 1648374273,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "xzpq"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <string>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <queue>\r\n#include <stack>\r\n#include <vector>\r\n#include <stdlib.h>\r\n#define int long long\r\n\r\nusing namespace std;\r\n\r\nint read(){\r\n\tint x=0,f=1;char ch=getchar();\r\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\r\n\twhile(ch>='0'&&ch<='9')x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\r\n\treturn x*f;\r\n}\r\n\r\nconst int N=1e5+5,inf=1e9;\r\nvector<array<int,5>>r[N]; \r\nint n,m,k,x[N];\r\n\r\nint dis(int X,int Y,int t){\r\n\treturn x[t]*(max(X,Y)-min(X,Y));\r\n}\r\n\r\nsigned main(void){\r\n\tint T=read();\r\n\twhile(T--){\r\n\t\tn=read(),m=read(),k=read();\r\n\t\tfor(int i=1;i<=n;i++)x[i]=read();\r\n\t\tfor(int i=1,a=0,b=0,c=0,d=0,e=0;i<=k;i++){\r\n\t\t\ta=read(),b=read(),c=read(),d=read(),e=read();\r\n\t\t\tr[a].push_back({b,r[c].size(),-e,inf,c});\r\n\t\t\tr[c].push_back({d,-1,0,inf,0});\r\n\t\t}\r\n\t\tr[1].push_back({1,-1,0,0,0});\r\n\t\tfor(int i=1;i<=n;i++){\r\n\t\t\tstd::sort(r[i].begin(),r[i].end());\r\n\t\t\tint len=r[i].size()-1;\r\n\t\t\tfor(int j=1;j<=len;j++)r[i][j][3]=min(r[i][j][3],r[i][j-1][3]+dis(r[i][j-1][0],r[i][j][0],i));\r\n\t\t\tfor(int j=len-1;j>=0;j--)r[i][j][3]=min(r[i][j][3],r[i][j+1][3]+dis(r[i][j+1][0],r[i][j][0],i));\r\n\t\t\tfor(int j=0;j<=len;j++){\r\n//\t\t\t\tprintf(\"%d \",j);\r\n\t\t\t\tarray<int,5>l=r[i][j];\r\n\t\t\t\tif(l[1]==-1)continue;\r\n\t\t\t\tr[l[4]][l[1]][3]=min(r[l[4]][l[1]][3],l[3]+l[2]);\r\n\t\t\t}\r\n\t\t}\r\n//\t\tfor(int i=1;i<=n;i++){\r\n//\t\t\tprintf(\"%d\\n\",i);\r\n//\t\t\tfor(auto j:r[i])printf(\"%d %d\\n\",j[0],j[3]);\r\n//\t\t} \r\n\t\tint len=r[n].size()-1;\r\n    if(len>=0&&r[n][len][3]!=inf)printf(\"%lld\\n\",r[n][len][3]+dis(r[n][len][0],m,n));\r\n    else printf(\"NO ESCAPE\\n\");\r\n    for(int i=1;i<=n;i++)r[i].clear();\r\n  }\r\n  \r\n\treturn 0; \r\n}\r\n\r\n\r\n"
}