{
    "id": 220065008,
    "contestId": 1627,
    "creationTimeSeconds": 1692811782,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "heohong"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 15257600,
    "source": "#include <bits/stdc++.h>\r\n#define Max 100005\r\n#define int long long\r\n#define fi first\r\n#define se second\r\nusing namespace std;\r\n\r\ntypedef pair<int,int> pii;\r\n\r\nstruct e{\r\n    int a,b,c,d,h;\r\n};\r\nbool comp(e g1,e g2){\r\n    return g1.a < g2.a;\r\n}\r\ne p[Max];\r\nmap<int,int> m[Max];\r\nvector<int> v[Max];\r\npriority_queue<pii,vector<pii>,greater<pii>> pq[Max];\r\nint n,mn,k,x[Max];\r\n\r\nvoid solve(){\r\n    cin >> n >> mn >> k;\r\n    for(int i = 1; i <= n; i ++){\r\n        v[i].clear();m[i].clear();\r\n    }\r\n    for(int i = 1; i <= n; i ++) cin >> x[i];\r\n    for(int i = 1; i <= k; i ++){\r\n        cin >> p[i].a >> p[i].b >> p[i].c >> p[i].d >> p[i].h;\r\n        v[p[i].a].push_back(p[i].b);\r\n    }\r\n    v[n].push_back(mn);\r\n    sort(p + 1,p + k + 1, comp);\r\n    m[1][1] = 0;\r\n    int pt = 1;\r\n    pq[1].push({0,1});\r\n    for(int i = 1; i <= n; i ++){\r\n      //  cout << i << \":\\n\";\r\n        while(!pq[i].empty()){\r\n            int kc = pq[i].top().fi;\r\n            int u = pq[i].top().se;\r\n            pq[i].pop();\r\n            if(kc > m[i][u]) continue;\r\n          //  cout << u << \" \";\r\n            for(auto j : v[i]){\r\n                if(m[i].find(j) == m[i].end() || m[i][j] > m[i][u] + abs(j-u)*x[i]){\r\n                    m[i][j] = m[i][u] + abs(j-u)*x[i];\r\n                }\r\n            }\r\n        }\r\n      //  cout << \"\\n\";\r\n        while(pt <= k && p[pt].a == i){\r\n\r\n            if(!v[p[pt].c].empty() &&  m[p[pt].a].find(p[pt].b) != m[p[pt].a].end()){\r\n\r\n                if(m[p[pt].c].find(p[pt].d)==m[p[pt].c].end() || m[p[pt].a][p[pt].b]-p[pt].h<m[p[pt].c][p[pt].d]){\r\n                   // cout << p[pt].c << \" \" << p[pt].d << \"ff\\n\";\r\n                    if(m[p[pt].c].find(p[pt].d)==m[p[pt].c].end()) {\r\n                        pq[p[pt].c].push({m[p[pt].a][p[pt].b]-p[pt].h,p[pt].d});}\r\n                    m[p[pt].c][p[pt].d] = m[p[pt].a][p[pt].b]-p[pt].h;\r\n                   // if(m[3].find(3) == m[3].end()) cout << \"uywtr\\n\";\r\n                }\r\n            }\r\n            pt++;\r\n        }\r\n    }\r\n  /*  for(auto j : v[3]){\r\n        if(m[3].find(j) == m[3].end()) cout << \"hg\\n\";\r\n        cout << j << \" \" << m[3][j] << \"\\n\";\r\n    }*/\r\n  //  cout << \"\\n\";\r\n  //  cout << m[3][3] << \"\\n\";\r\n    if(m[n].find(mn) == m[n].end()) cout << \"NO ESCAPE\\n\";\r\n    else cout << m[n][mn] << \"\\n\";\r\n}\r\n\r\nsigned main(){\r\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n    int tt; cin >> tt;\r\n    while(tt--)\r\n    solve();\r\n}\r\n/*\r\n1\r\n5 5 5\r\n741830 256955 702464 537247 308697\r\n3 2 4 1 118909\r\n3 1 4 2 887658\r\n4 1 5 4 159738\r\n1 1 3 3 17981\r\n1 5 3 3 219084\r\n*/\r\n"
}