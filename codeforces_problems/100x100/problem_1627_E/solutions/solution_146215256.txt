{
    "id": 146215256,
    "contestId": 1627,
    "creationTimeSeconds": 1644742826,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "devangsrivastava2014"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 608,
    "memoryConsumedBytes": 14131200,
    "source": "\r\n# c =list(map(int,input().split(\" \")))\r\n\r\n\r\nfrom asyncio.windows_events import INFINITE\r\nfrom msilib.schema import IniFile\r\n\r\n\r\ndef solve():\r\n    n,m,k = list(map(int,input().split(\" \")))\r\n    x =list(map(int,input().split(\" \")))\r\n    arr= [ ]\r\n    dp= [ [-1]*(m+1) for i  in range(n +1)]\r\n    for i in range(1,k+1):\r\n        temp = list(map(int,input().split(\" \")))\r\n        #print(temp[2],temp[3])\r\n        if ( dp[temp[2]][temp[3]] != -1):\r\n             arr.append([*temp,dp[temp[2]][temp[3]]])\r\n        else:\r\n            dp[temp[2]][temp[3]] =i\r\n            arr.append([*temp,i])       \r\n    arr.sort()\r\n    kd = [ [INFINITE]*(k+1) for i in range(max(m+1,k+1))] #k for each ladder \r\n    dp[1][1]=0\r\n    for i in range(k+1):\r\n        kd[0][i] =0\r\n    ans = INFINITE\r\n    for i in range(0,k):\r\n        l = arr[i]\r\n        for j in range(m+1):\r\n            if ( dp[l[0]][j] != -1):\r\n              \r\n                idd =  dp[l[0]][j]\r\n                #print(l,idd) \r\n                for tk in range(0,k):\r\n                    kd[l[5]][tk+1] = min(kd[l[5]][tk+1],kd[idd][tk]  +abs(l[1]- j)*x[l[0]-1] -l[4] )\r\n \r\n    for j in range(m+1):\r\n            if ( dp[n][j] != -1):\r\n                idd =  dp[n][j]\r\n                for tk in range(0,k+1):\r\n                        ans = min(ans,kd[idd][tk] + (m-j)*x[n-1])\r\n    if ( ans == INFINITE):\r\n        ans = \"NO ESCAPE\"\r\n    print(ans)\r\nt = int(input())\r\nfor i in range(t):\r\n    solve()\r\n\r\n\r\n\r\n"
}