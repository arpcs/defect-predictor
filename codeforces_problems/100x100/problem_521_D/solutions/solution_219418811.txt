{
    "id": 219418811,
    "contestId": 521,
    "creationTimeSeconds": 1692347202,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 521,
        "index": "D",
        "name": "Shop",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 521,
        "members": [
            {
                "handle": "luogu_bot1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1425279600
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 155,
    "timeConsumedMillis": 546,
    "memoryConsumedBytes": 43520000,
    "source": "// LUOGU_RID: 121606984\n// Date : 2023-08-18\r\n#include<bits/stdc++.h> \r\n#define M 1000005\r\nusing namespace std;\r\nint k, n, m, a[M], op[M], j[M], b[M];\r\npair<int, int> mt[M];\r\nvector<pair<long double, int> > pl[M], mul;\r\nint main()\r\n{\r\n\tscanf(\"%d%d%d\", &k, &n, &m);\r\n\tfor(int i = 1; i <= k; i++) cin >> a[i];\r\n\tfor(int i = 1; i <= n; i++)\r\n\t{\r\n\t\tcin >> op[i] >> j[i] >> b[i];\r\n\t\tif(op[i] == 1) mt[j[i]] = max(mt[j[i]], {b[i], i});\r\n\t\telse if(op[i] == 2) pl[j[i]].push_back({b[i], i});\r\n\t\telse mul.push_back({b[i], i});\r\n\t}\r\n\tfor(int i = 1; i <= k; i++)\r\n\t{\r\n\t\tif(mt[i].first > a[i]) pl[i].push_back({mt[i].first - a[i], mt[i].second});\r\n\t\tsort(pl[i].begin(), pl[i].end(), greater<pair<long double, int> > ());\r\n\t\tlong long v = a[i];\r\n\t\tfor(auto &p : pl[i]) mul.push_back({1.0L * (v + p.first) / v, p.second}), v += p.first; \r\n\t} \r\n\tsort(mul.begin(), mul.end(), greater<pair<long double, int> >());\r\n    int x = min(m, (int)mul.size());\r\n    sort(mul.begin(), mul.begin() + x, [&](const auto &lhs, const auto &rhs){return op[lhs.second] < op[rhs.second];});\r\n    cout << x << \"\\n\";\r\n    for(int i = 0; i < x; ++i) cout << mul[i].second << \" \";\r\n\treturn 0;\r\n}"
}