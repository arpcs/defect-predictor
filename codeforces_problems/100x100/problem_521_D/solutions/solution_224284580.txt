{
    "id": 224284580,
    "contestId": 521,
    "creationTimeSeconds": 1695294703,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 521,
        "index": "D",
        "name": "Shop",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 521,
        "members": [
            {
                "handle": "yingxue"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1425279600
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 155,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 5632000,
    "source": "// LUOGU_RID: 125453500\n#include<bits/stdc++.h>\n#define il inline\nusing namespace std;\nil int read()\n{\n    int xr=0,F=1; char cr;\n    while(cr=getchar(),cr<'0'||cr>'9') if(cr=='-') F=-1;\n    while(cr>='0'&&cr<='9')\n        xr=(xr<<3)+(xr<<1)+(cr^48),cr=getchar();\n    return xr*F;\n}\n#define int long long\nconst int N=1e5+5;\nint k,n,m;\nstruct node\n{\n    int tp,x,id,y;\n    double k;\n}q[N];\nint tot,a[N],mx[N];\nil bool cmp(node x,node y) {return x.k>y.k;}\nil bool cmptp(node x,node y) {return x.y<y.y;}\nsigned main()\n{\n    k=read(),n=read(),m=read();\n    for(int i=1;i<=k;i++) a[i]=read();\n    for(int i=1;i<=n;i++)\n    {\n        q[i].tp=q[i].y=read(),q[i].x=read(),q[i].k=read(),q[i].id=i;\n        if(q[i].tp==1) mx[q[i].x]=max(mx[q[i].x],(int)q[i].k);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        if(q[i].tp!=1) continue;\n        if(q[i].k==mx[q[i].x]) mx[q[i].x]=0,q[i].tp=2,q[i].k=q[i].k-a[q[i].x];\n        else q[i].k=0;\n        // cout<<\"opt1 \"<<q[i].k<<\" \"<<q[i].id<<endl;\n    }  \n    sort(q+1,q+n+1,cmp);\n    for(int i=1;i<=n;i++)\n    {\n        if(q[i].tp!=2) continue;\n        int nk=q[i].k;\n        q[i].k=(q[i].k+a[q[i].x])/a[q[i].x]; a[q[i].x]+=nk;\n    }\n    sort(q+1,q+n+1,cmp);\n    for(int i=1;i<=n;i++) if(q[i].k>1) tot++;\n    tot=min(tot,m);\n    printf(\"%lld\\n\",tot);\n    sort(q+1,q+tot+1,cmptp);\n    for(int i=1;i<=tot;i++) printf(\"%lld \",q[i].id);\n    printf(\"\\n\");\n    return 0;\n}\n/*\n2 4 3\n13 20\n1 1 14\n1 2 30\n2 1 6\n3 2 2\n*/"
}