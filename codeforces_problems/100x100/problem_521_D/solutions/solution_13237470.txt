{
    "id": 13237470,
    "contestId": 521,
    "creationTimeSeconds": 1443277282,
    "relativeTimeSeconds": 5842,
    "problem": {
        "contestId": 521,
        "index": "D",
        "name": "Shop",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 521,
        "members": [
            {
                "handle": "sankear"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1443271440
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 5632000,
    "source": "#include <iostream>\n#include <vector>\n#include <set>\n#include <map>\n#include <bitset>\n#include <deque>\n#include <queue>\n#include <string>\n#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <cmath>\n#include <cassert>\n#include <complex>\n\n#define pb push_back\n#define pbk pop_back\n#define sz(a) ((int) (a).size())\n#define all(a) (a).begin(), (a).end()\n#define mp make_pair\n#define fs first\n#define sc second\n#define next _next\n#define prev _prev\n#define link _link\n#define hash _hash\n\n#ifdef LOCAL42\n#define eprintf(...) fprintf(stderr, __VA_ARGS__)\n#else\n#define eprintf(...) 42\n#endif\n\n#if _WIN32 || __WIN32__ || _WIN64 || __WIN64__\n#define LLD \"%I64d\"\n#else\n#define LLD \"%lld\"\n#endif\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\n\nconst int inf = 1e9;\nconst double eps = 1e-9;\nconst double pi = 4 * atan(1.0);\nconst int N = int(1e5) + 100;\n\nstruct tp {\n    \n    int num, add;\n    ll a;\n    \n};\n\nbool operator == (const tp& a, const tp& b) {\n    return a.num == b.num;\n}\n\nbool operator < (const tp& a, const tp& b) {\n    return a.add * b.a > b.add * a.a;\n}\n\nll a[N];\npair<ll, int> mul[N];\nld sum_mul[N];\npii max_b[N];\nvector<pii> add[N];\nvi lst, best_lst;\nset<tp> s;\n\nint main() {\n#ifdef LOCAL42\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif\n    int k, n, m;\n    cin >> k >> n >> m;\n    for (int i = 0; i < k; ++i) {\n        scanf(LLD, a + i);\n    }\n    int sz = 0;\n    for (int i = 0; i < n; ++i) {\n        int t, num, b;\n        scanf(\"%d %d %d\", &t, &num, &b);\n        --num;\n        if (t == 1) {\n            max_b[num] = max(max_b[num], mp(b, i));\n        }\n        if (t == 2) {\n            add[num].pb(mp(b, i));\n        }\n        if (t == 3) {\n            mul[sz++] = mp(b, i);\n        }\n    }\n    sort(mul, mul + sz);\n    for (int i = 1; i <= sz; ++i) {\n        sum_mul[i] = sum_mul[i - 1] + logl(mul[i - 1].fs);\n    }\n    for (int i = 0; i < k; ++i) {\n        if (max_b[i].fs > a[i]) {\n            add[i].pb(mp((int) (max_b[i].fs - a[i]), max_b[i].sc));\n        }\n        sort(all(add[i]));\n        if (sz(add[i]) > 0) {\n            s.insert({ i, add[i].back().fs, a[i] });\n        }\n    }\n    ld cur = 0;\n    pair<ld, int> ans(-1e100, -1);\n    for (int i = 0; i < k; ++i) {\n        cur += logl(a[i]);\n    }\n    for (int i = 0; i <= m; ++i) {\n        if (i > 0 && sz(s) > 0) {\n            tp best = *(s.begin());\n            s.erase(s.begin());\n            cur -= logl(best.a);\n            cur += logl(best.a + best.add);\n            a[best.num] += best.add;\n            lst.pb(add[best.num].back().sc);\n            add[best.num].pbk();\n            if (sz(add[best.num]) > 0) {\n                s.insert({ best.num, add[best.num].back().fs, a[best.num] });\n            }\n        }\n        int can = min(m - i, sz);\n        ans = max(ans, mp(cur + sum_mul[can], i));\n    }\n    int can = min(m - ans.sc, sz);\n    for (int i = 0; i < ans.sc; ++i) {\n        best_lst.pb(lst[i]);\n    }\n    for (int i = 0; i < can; ++i) {\n        best_lst.pb(mul[i].sc);\n    }\n    cout << sz(best_lst) << endl;\n    for (int i = 0; i < sz(best_lst); ++i) {\n        printf(\"%d \", best_lst[i] + 1);\n    }\n    puts(\"\");\n    return 0;\n}"
}