{
    "id": 10310710,
    "contestId": 521,
    "creationTimeSeconds": 1426598903,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 521,
        "index": "D",
        "name": "Shop",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 521,
        "members": [
            {
                "handle": "M.Mahdi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1425279600
    },
    "programmingLanguage": "GNU C++0x",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 6860800,
    "source": "\t\t//\t   - -- --- ---- -----be name khoda----- ---- --- -- -\t\t\\\\\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\ninline int in() { int x; scanf(\"%d\", &x); return x; }\r\ntypedef long long ll;\r\nconst int N = 200002;\r\n\r\nstruct imp{\r\n\tint id, val;\r\n\tbool operator <(const imp r) const { return val < r.val; }\r\n};\r\n\r\nvector <imp> add[N], mul;\r\nvector <int> ans;\r\nimp assign[N];\r\nint a[N];\r\n\r\nstruct cmp{\r\n\tbool operator ()(int l, int r) { return 1LL * add[l].back().val * a[r] > 1LL * add[r].back().val * a[l]; }\r\n};\r\nset <int, cmp> s;\r\n\r\nint main()\r\n{\r\n\tint n = in(), m = in(), k = in(), cnt = 0;\r\n\tfor(int i = 0; i < n; i++)\r\n\t\ta[i] = in();\r\n\tfor(int i = 1; i <= m; i++)\r\n\t{\r\n\t\tint t = in(), ind = in(), b = in();\r\n\t\tind--;\r\n\t\tif(t == 1)\r\n\t\t\tif(assign[ind].val < b - a[ind])\r\n\t\t\t{\r\n\t\t\t\tassign[ind] = imp{i, b - a[ind]};\r\n\t\t\t\tcnt--;\r\n\t\t\t}\r\n\t\tif(t == 2)\r\n\t\t\tadd[ind].push_back(imp{i, b});\r\n\t\tif(t == 3)\r\n\t\t\tmul.push_back(imp{i, b});\r\n\t}\r\n\tsort(mul.begin(), mul.end());\r\n\treverse(mul.begin(), mul.end());\r\n\twhile(mul.size() > k)\r\n\t\tmul.pop_back();\r\n\r\n\tcnt += m;\r\n\tif(cnt < k)\r\n\t\tfor(int i = 0; i < n; i++)\r\n\t\t\tif(assign[i].id)\r\n\t\t\t{\r\n\t\t\t\tadd[i].push_back(assign[i]);\r\n\t\t\t\ts.insert(i);\r\n\t\t\t}\r\n\twhile(s.size() && cnt + ans.size() < k)\r\n\t{\r\n\t\tint x = *s.begin();\r\n\t\ts.erase(s.begin());\r\n\t\tans.push_back(assign[x].id);\r\n\t\ta[x] += assign[x].val;\r\n\t\tassign[x].id = 0;\r\n\t}\r\n\r\n\ts.clear();\r\n\tfor(int i = 0; i < n; i++)\r\n\t{\r\n\t\tsort(add[i].begin(), add[i].end());\r\n\t\tif(assign[i].id)\r\n\t\t\tif(add[i].empty() || add[i].back().val < assign[i].val)\r\n\t\t\t\tadd[i].push_back(assign[i]);\r\n\t\tif(add[i].size())\r\n\t\t\ts.insert(i);\r\n\t}\r\n\twhile(ans.size() < k && s.size())\r\n\t{\r\n\t\tint x = *s.begin();\r\n\t\ts.erase(s.begin());\r\n\t\tif(ans.size() + mul.size() < k || add[x].back().val > (mul.back().val - 1) * a[x])\r\n\t\t{\r\n\t\t\tans.push_back(add[x].back().id);\r\n\t\t\ta[x] += add[x].back().val;\r\n\t\t\tadd[x].pop_back();\r\n\t\t\tif(add[x].size())\r\n\t\t\t\ts.insert(x);\r\n\t\t}\r\n\t\telse\r\n\t\t\tbreak;\r\n\t}\r\n\twhile(ans.size() < k && mul.size())\r\n\t{\r\n\t\tans.push_back(mul.back().id);\r\n\t\tmul.pop_back();\r\n\t}\r\n\tcout << ans.size() << endl;\r\n\tfor(int x : ans)\r\n\t\tcout << x << \" \";\r\n\tcout << endl;\r\n}\r\n"
}