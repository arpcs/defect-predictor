{
    "id": 173058930,
    "contestId": 180,
    "creationTimeSeconds": 1663849922,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "KevinBaby"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 50,
    "timeConsumedMillis": 466,
    "memoryConsumedBytes": 144281600,
    "source": "#include <cstdio>\r\n#include <iostream>\r\n#include <queue>\r\n#include <vector>\r\nconst int N\t\t= 2e5+10;\r\nconst int INF\t= 1e9;\r\nusing namespace std;\r\n\r\nvector<int> vec;\r\n\r\nstruct Qu{int sum_gap,sum;};\r\nqueue<Qu> qu[N];\r\nint pre_sum[N],sum_gap[N],sum_cur[N];\r\nint arr[N],clr[N];\r\nint n,m,K;\r\n\r\nvoid Sol()\r\n{\r\n\tint tot = 0;\r\n\t\r\n\tclr[++tot] = vec[0];\r\n\tarr[tot] = 1;\r\n\tfor (int i=1; i<vec.size(); i++)\r\n\t{\r\n\t\tif(vec[i]!=vec[i-1])\r\n\t\t{\r\n\t\t\tclr[++tot] = vec[i];\r\n\t\t\tarr[tot] = 1;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tarr[tot]++;\r\n\t\t}\r\n\t}\r\n\t\r\n\tint ans = 0;\r\n\tint sum = 0;\r\n\tfor (int i=1; i<=tot; i++)\r\n\t{\r\n\t\tint gap = sum-pre_sum[ clr[i] ];\r\n\t\tsum_gap[clr[i]] += gap;\r\n\t\twhile (!qu[clr[i]].empty() && sum_gap[clr[i]]-qu[clr[i]].front().sum_gap>K)\r\n\t\t{\r\n\t\t\tqu[clr[i]].pop();\r\n\t\t}\r\n\t\tif(!qu[clr[i]].empty())\r\n\t\t\tans = max(ans, sum_cur[clr[i]]+arr[i] - qu[clr[i]].front().sum);\r\n\t\telse\r\n\t\t\tans = max(ans, arr[i]);\r\n\t\tqu[clr[i]].push({sum_gap[clr[i]], sum_cur[clr[i]]});\r\n\t\tsum_cur[clr[i]] += arr[i];\r\n\t\tsum += arr[i];\r\n\t\tpre_sum[ clr[i] ] = sum;\r\n\t}\r\n\tprintf(\"%d\\n\",ans);\r\n}\r\n\r\nint main()\r\n{\r\n\tscanf(\"%d %d %d\",&n,&m,&K);\r\n\tfor (int i=1; i<=n; i++)\r\n\t{\r\n\t\tint x;\r\n\t\tscanf(\"%d\",&x);\r\n\t\tvec.push_back(x);\r\n\t}\r\n\tSol();\r\n\t\r\n\treturn 0;\r\n}"
}