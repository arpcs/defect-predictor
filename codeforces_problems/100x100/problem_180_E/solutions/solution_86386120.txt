{
    "id": 86386120,
    "contestId": 180,
    "creationTimeSeconds": 1594337527,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "armish2.0"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 50,
    "timeConsumedMillis": 186,
    "memoryConsumedBytes": 14233600,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <vector>\r\n#include <set>\r\n#include <map>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\n#include <queue>\r\n#include <ctime>\r\n#include <cassert>\r\n#include <complex>\r\n#include <string>\r\n#include <cstring>\r\n#include <chrono>\r\n#include <random>\r\n#include <bitset>\r\n#include <stack>\r\n#include <deque>\r\n#include <iterator>\r\n#include <tuple>\r\n#include <iomanip>\r\n#include <valarray>\r\n#include <limits>\r\n#include <sstream>\r\n#include <cassert>\r\n#include <functional>\r\n#include <numeric>\r\n#define in insert\r\n#define pb push_back\r\n#define mp make_pair\r\n#define int long long int\r\n#define fi first\r\n#define double long double\r\n#define se second\r\n#define endl '\\n'\r\n#define pii pair<int,int>\r\n#define pdd pair<double,double>\r\n#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);\r\n#define mod 1000000007\r\n#define MAXN  20\r\n#define N 200005\r\nusing namespace std;\r\nint spf[MAXN];\r\nint fac[MAXN];\r\nvoid sieve()//sieve\r\n{\r\n    spf[1] = 1;\r\n    for (int i=2; i<MAXN; i++)\r\n        spf[i] = i;\r\n    for (int i=4; i<MAXN; i+=2)\r\n        spf[i] = 2;\r\n    for (int i=3; i*i<MAXN; i++)\r\n    {\r\n        if (spf[i]==i)\r\n        {\r\n            for (int j=i*i; j<MAXN; j+=i)\r\n                if (spf[j]==j)\r\n                    spf[j]=i;\r\n        }\r\n    }\r\n}//sieve ends\r\nmap<int,int> getfactor(int a)//factor prime\r\n{\r\n    map<int,int> m;\r\n    while(a>1)\r\n    {\r\n        m[spf[a]]++;\r\n        a/=spf[a];\r\n    }\r\n    return m;\r\n}//prime factor ends\r\nint power(int x,int y,int p)\r\n{\r\n    int res = 1;\r\n    x = x % p;\r\n    if (x == 0) return 0;\r\n    while (y > 0)\r\n    {\r\n        if (y & 1)\r\n            res = (res*x)% p;\r\n        y = y>>1;\r\n        x = (x*x)% p;\r\n    }\r\n    return res;\r\n}\r\nint gcd(int a, int b)\r\n{\r\n    if (a == 0)\r\n        return b;\r\n    return gcd(b % a, a);\r\n}\r\nint inverse(int a, int p)\r\n{\r\n    return power(a, p-2, p);\r\n}\r\nint ncr(int n, int r, int p)\r\n{\r\n    if (r==0)\r\n        return 1;\r\n    return (fac[n]*inverse(fac[r], p) % p *\r\n            inverse(fac[n-r], p) % p) % p;\r\n}\r\nint ret(int xx)\r\n{\r\n    return (xx*(xx-1))/2;\r\n}\r\nvoid solve()\r\n{\r\n    int n,m,k;\r\n    cin>>n>>m>>k;\r\n    set<int> s[m+1];\r\n    int a[n+1];\r\n    for(int i=1;i<=n;i++)\r\n        cin>>a[i];\r\n    int ans=0;\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        s[a[i]].in(i);\r\n        while(s[a[i]].size()>0)\r\n        {\r\n            int gg=s[a[i]].size();\r\n            int ll=*s[a[i]].begin();\r\n            if(i-ll-k+1>gg)\r\n                s[a[i]].erase(s[a[i]].begin());\r\n            else break;\r\n        }\r\n        ans=max(ans,(int)s[a[i]].size());\r\n        \r\n    }\r\n    cout<<ans<<endl;\r\n    \r\n}\r\nsigned main()\r\n{\r\n    fast\r\n    int t=1;\r\n    //cin>>t;\r\n    while(t--)\r\n    {\r\n        solve();\r\n    }\r\n}\r\n"
}