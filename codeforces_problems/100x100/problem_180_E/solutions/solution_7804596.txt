{
    "id": 7804596,
    "contestId": 180,
    "creationTimeSeconds": 1410815171,
    "relativeTimeSeconds": 2591,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "Schullz"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1410812580
    },
    "programmingLanguage": "MS C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 50,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 3174400,
    "source": "#pragma warning( disable : 4996)\r\n#define _USE_MATH_DEFINES\r\n#pragma comment(linker, \"/STACK:666000000\")\r\n\r\n#define bublic public\r\n\r\n#include <algorithm>\r\n#include <assert.h>\r\n#include <cmath>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <fstream>\r\n#include <iomanip>\r\n#include <iostream>\r\n#include <limits.h>\r\n#include <list>\r\n#include <map>\r\n#include <queue>\r\n#include <set>\r\n#include <string>\r\n#include <time.h>\r\n#include <vector>\r\n#include <stack>\r\n\r\n#define nextLine() {for(int c=getchar(); c!='\\n' && c!=EOF; c=getchar());}\r\n#define sqr(a) ((a)*(a))\r\n#define has(mask,i) (((mask) & (1<<(i))) == 0 ? false : true)\r\n#define set_true(mask, i) (mask|(1<<(i)))\r\n#define set_false(mask, i) (~((~mask)|(1<<(i))))\r\n\r\n#define Equal(a, b) (fabsl(a, b) < 1e-9)\r\n#define Less(a, b) (a < b && !Equal(a, b))\r\n#define Greater(a, b) (a > b && !Equal(a, b))\r\n\r\nusing namespace std;\r\n\r\n#ifdef SCHULLZ\r\n#define TASK \"file\"\r\n#define eprintf(...) fprintf(stdout, __VA_ARGS__)\r\n#define parr(a,n,m) for(int i=0;i<n;i++){for(int j=0;j<m;j++)cout<<a[i][j]<<\" \";puts(\"\");}puts(\"\");\r\n#define log(x) cout << #x << \" = \" << x << endl\r\n#else\r\n#define TASK \"file\"\r\n#define eprintf(...) \r\n#define parr(a,n,m)\r\n#define log(x)\r\n#endif\r\n\r\n#define pb(_o_) push_back(_o_)\r\n\r\ntypedef long long LL;\r\ntypedef unsigned long long ULL;\r\ntypedef long double ldb;\r\n\r\ntypedef pair<int,int> pii;\r\ntypedef pair<pii,int> tiii;\r\ntypedef pair<pii,pii> fiiii;\r\n#define aaa first.first\r\n#define bbb first.second\r\n#define ccc second.first\r\n#define ddd second.second\r\n#define mp(x, y) make_pair(x, y)\r\n#define mpp(x, y, z) make_pair(mp(x, y), z)\r\n#define mppp(x, y, z, a) make_pair(mp(x, y), mp(z, a))\r\n\r\n#define sci(a) (1 == scanf(\"%d\", &a))\r\n#define scii(a,b) (2 == scanf(\"%d%d\", &a, &b))\r\n#define sciii(a,b,c) (3 == scanf(\"%d%d%d\", &a, &b, &c))\r\n#define sciiii(a,b,c,d) (4 == scanf(\"%d%d%d%d\", &a, &b, &c, &d))\r\n#define sciiiii(a,b,c,d,e) (5 == scanf(\"%d%d%d%d%d\", &a, &b, &c, &d, &e))\r\n\r\n#define scin(a) (1 == scanf(\"%d\\n\", &a))\r\n#define sciin(a,b) (2 == scanf(\"%d%d\\n\", &a, &b))\r\n#define sciiin(a,b,c) (3 == scanf(\"%d%d%d\\n\", &a, &b, &c))\r\n#define sciiiin(a,b,c,d) (4 == scanf(\"%d%d%d%d\\n\", &a, &b, &c, &d))\r\n#define sciiiiin(a,b,c,d,e) (5 == scanf(\"%d%d%d%d%d\\n\", &a, &b, &c, &d, &e))\r\n\r\n#define FORN(i,n) for(int i = 0; i < (int)n; i++)\r\n#define FORR(i,n) for(int i = n - 1; i >= 0; i--)\r\n#define FORS(it,a) for(auto it = a.begin(); it != a.end(); it++)\r\n\r\ntypedef vector<int> vi;\r\ntypedef vector<vi> vvi;\r\n\r\n#ifdef SCHULLZ\r\ntypedef vector<int> vc;\r\ntypedef vector<vc> vvc;\r\n#else\r\ntypedef vector<char> vc;\r\ntypedef vector<char> vvc;\r\n#endif\r\n\r\nconst int INF = (1 << 30) - 1;\r\nconst ldb EPS = 1e-9;\r\n\r\nvoid ML(const bool v)\r\n{\r\n    if (v)\r\n        return;\r\n    int *ass;\r\n    for (;;)\r\n    {\r\n        ass = new int[2500000];\r\n        for (int i = 0; i < 2500000; i++)\r\n            ass[i] = rand();\r\n    }\r\n}\r\n\r\nvoid TL(const bool v)\r\n{\r\n    if (v)\r\n        return;\r\n    for (;;)\r\n        cout << rand() % (rand() % 1000 + 1) << endl;\r\n}\r\n\r\nvoid PE(const bool v)\r\n{\r\n    if (v)\r\n        return;\r\n    for (int i = 0; i < 10000; i++)\r\n        printf(\"%c\", rand() % 256);\r\n    exit(0);\r\n}\r\n\r\nconst int SZ = 200500;\r\nint n, m, k;\r\nint a[SZ];\r\nint lst[SZ];\r\nint nxt[SZ];\r\nint start[SZ];\r\n\r\nbool LoAd()\r\n{\r\n    if (!sciii(n, m, k))\r\n        return false;\r\n    for (int i = 1; i <= n; i++)\r\n        sci(a[i]);\r\n    return true;\r\n}\r\n\r\nvoid SoLvE()\r\n{\r\n    memset(lst, 0, sizeof(lst));\r\n    for (int i = 1; i <= m; i++)\r\n        start[i] = n + 1;\r\n\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        if (0 == lst[a[i]])\r\n        {\r\n            start[a[i]] = i;            \r\n        }\r\n        else\r\n            nxt[lst[ a[i] ]] = i;\r\n        nxt[i] = n + 1;\r\n        lst[ a[i] ] = i;\r\n    }\r\n    int res = 0;\r\n\r\n    for (int clr = 1; clr <= m; clr++)\r\n    {\r\n        int lt = start[clr];\r\n        int dd = 0;\r\n        int cnt = 0;\r\n        for (int rt = start[clr]; rt <= n; rt = nxt[rt])\r\n        {\r\n            cnt++;\r\n            while (dd > k)\r\n            {\r\n                dd -= nxt[lt] - lt - 1;\r\n                lt = nxt[lt];\r\n                cnt--;\r\n            }\r\n            if (cnt > res)\r\n                res = cnt;\r\n            dd += nxt[rt] - rt - 1;\r\n        }\r\n    }\r\n    cout << res << endl;\r\n\r\n}\r\n\r\nint main()\r\n{\r\n    srand( (int) time(NULL));\r\n#ifdef SCHULLZ\r\n    freopen(TASK\".in\",\"r\",stdin);   freopen(TASK\".out\",\"w\",stdout);\r\n    for (int i = 0; LoAd(); i++)\r\n        SoLvE();\r\n#else\r\n    LoAd();\r\n    SoLvE();\r\n#endif\r\n    return 0;\r\n}"
}