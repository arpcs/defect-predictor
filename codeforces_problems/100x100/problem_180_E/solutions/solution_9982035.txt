{
    "id": 9982035,
    "contestId": 180,
    "creationTimeSeconds": 1424792239,
    "relativeTimeSeconds": 1339,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "largequasargroup"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1424790900
    },
    "programmingLanguage": "GNU C++0x",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 50,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 7065600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef pair<int, int> pii;\r\ntypedef vector<int> vi;\r\n#define mp make_pair\r\n#define pb push_back\r\n#define all(x) (x).begin(), (x).end()\r\n#define sz(x) (int)((x).size())\r\n#define sqr(x) ((x) * (x))\r\n#define abs(x) ((x) < 0 ? -(x) : (x))\r\n#define clr(x) memset((x), 0, sizeof(x));\r\ntemplate<typename T> void pv(T a, T b) { for (__typeof(a) __ = a; __ <= b; ++__) cout << *__ << \" \"; cout << \"\\n\"; }\r\ntemplate<typename T> inline bool chmin(T &a, T b) { if (a <= b) return false; a = b; return true; }\r\ntemplate<typename T> inline bool chmax(T &a, T b) { if (a >= b) return false; a = b; return true; }\r\n\r\nconst int LIM = 400000;\r\n\r\nint ans, n, m, k, i, j, x, fr, l;\r\nvi v[LIM];\r\n\r\nint main(int argc, const char *argv[]) {\r\n        //freopen(\"data.in\", \"r\", stdin);\r\n        scanf(\"%d %d %d\", &n, &m, &k);\r\n        for (i = 1; i <= n; ++i) {\r\n                scanf(\"%d\", &x);\r\n                v[x].pb(i);\r\n        }\r\n        for (i = 1; i <= m; ++i) {\r\n                l = 0;\r\n                for (j = 0; j < sz(v[i]); ++j) {\r\n                        while (v[i][j] - v[i][l] - j + l > k) ++l;\r\n                        chmax(ans, j - l + 1);\r\n                }\r\n        }\r\n        printf(\"%d\\n\", ans);\r\n        return 0;\r\n} "
}