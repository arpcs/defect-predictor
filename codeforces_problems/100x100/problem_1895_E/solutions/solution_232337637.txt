{
    "id": 232337637,
    "contestId": 1895,
    "creationTimeSeconds": 1699688603,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "emptyboxs"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 607,
    "memoryConsumedBytes": 126976000,
    "source": "#pragma warning(disable:4996)\r\n#include <iostream>\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <cstring>\r\n#include <queue>\r\n#include <bitset>\r\n#include <time.h>\r\n#include <string>\r\n#include <cmath>\r\n#include <stack>\r\n#include <map>\r\n#include <deque>\r\n#include <set>\r\n// ios::sync_with_stdio(false);\r\n#define max(a,b) ((a)>(b)?(a):(b))\r\n#define min(a,b) ((a)<(b)?(a):(b))\r\n#define ull unsigned long long\r\n#define il inline\r\n#define endl \"\\n\"\r\n#define ll long long\r\n//#define ll long long\r\n#define re register\r\n#define double long double\r\n#define pii pair<int,int>\r\nusing namespace std;\r\nconst double eqs = 1e-6;\r\nconst long long max_ = 1e6 + 7;\r\n// haxi = 137\uff0c haximod = 998244353;\r\nconst int mod = 1e9 + 7;\r\nconst int inf = 1e9 + 7;\r\nconst int p = 1e9 + 7;\r\nconst long long INF = 1e18 + 7;\r\nil int read() {\r\n\tint ret = 0, f = 1;\r\n\tchar ch = getchar();\r\n\r\n\twhile (ch < '0' || ch > '9') {\r\n\t\tif (ch == '-')\r\n\t\t\tf = -f;\r\n\r\n\t\tch = getchar();\r\n\t}\r\n\r\n\twhile (ch >= '0' && ch <= '9')\r\n\t\tret = ret * 10 + ch - '0', ch = getchar();\r\n\r\n\treturn ret * f;\r\n}\r\ninline void write(int x) {\r\n\tif (x > 9)\r\n\t\twrite(x / 10);\r\n\r\n\tputchar(x % 10 + '0');\r\n}\r\n\r\npii A[max_], B[max_];\r\nbool cmp(pii& a, pii& b) {\r\n\treturn a.first > b.first;\r\n}\r\nint N, M, limR = 1e6 + 2;\r\npii treeA[max_], treeB[max_];\r\ninline int lowbit(int x) { return x & -x; }\r\nvoid change(int x, int val,int id,pii * tree_) {\r\n\tx = 1e6 - x + 1;\r\n\twhile (x <= limR){\r\n\t\tif (tree_[x].first < val) {\r\n\t\t\ttree_[x].first = val;\r\n\t\t\ttree_[x].second = id;\r\n\t\t}\r\n\t\tx += lowbit(x);\r\n\t}\r\n}\r\nint ask(int x, pii* tree_) {\r\n\tx = 1e6 - x + 1;\r\n\tint ans = 0,ansid;\r\n\twhile (x > 0){\r\n\t\tif (ans < tree_[x].first) {\r\n\t\t\tans = tree_[x].first; ansid = tree_[x].second;\r\n\t\t}\r\n\t\tx -= lowbit(x);\r\n\t}\r\n\treturn ansid;\r\n}\r\nvoid clearT(int x,pii* tree_) {\r\n\tx = 1e6 - x + 1;\r\n\twhile (x <= limR) {\r\n\t\ttree_[x].first = tree_[x].second = 0;\r\n\t\tx += lowbit(x);\r\n\t}\r\n}\r\n\r\nint f[max_];//0M\u8f93\uff0c1\u5e73\uff0c2M\u8d62\r\nvector<int> xian[max_];\r\nint scc[max_], sccn, sta[max_], staR, dfn[max_], low[max_], tt, numscc[max_];\r\nbool insta[max_];\r\nvoid dfs(int now) {\r\n\tsta[++staR] = now;\r\n\tinsta[now] = 1;\r\n\tdfn[now] = low[now] = ++tt;\r\n\tfor (auto to : xian[now]) {\r\n\t\tif (!dfn[to]) {\r\n\t\t\tdfs(to);\r\n\t\t\tlow[now] = min(low[now], low[to]);\r\n\t\t}\r\n\t\telse if (insta[to]) low[now] = min(low[now], dfn[to]);\r\n\t}\r\n\r\n\tif (dfn[now] == low[now]) {\r\n\t\tvector<int>sccP;\r\n\t\tsccn++;\r\n\t\tnumscc[sccn] = 1;\r\n\t\tbool flagAB[2] = {0};\r\n\t\twhile (sta[staR] != now) {\r\n\t\t\tnumscc[sccn]++;\r\n\t\t\tsccP.push_back(sta[staR]);\r\n\t\t\tflagAB[(sta[staR] > N)] = 1;\r\n\t\t\tinsta[sta[staR]] = 0;\r\n\t\t\tscc[sta[staR]] = sccn;\r\n\t\t\tstaR--;\r\n\t\t}\r\n\t\tsccP.push_back(sta[staR]);\r\n\t\tflagAB[(sta[staR] > N)] = 1;\r\n\t\tscc[sta[staR]] = sccn;\r\n\t\tinsta[sta[staR]] = 0;\r\n\t\tstaR--;\r\n\r\n\t\tif (flagAB[0] && flagAB[1]) {\r\n\t\t\tf[sccn] = 1; return;\r\n\t\t}\r\n\t\tif (xian[sccP[0]].size()) {\r\n\t\t\tf[sccn] = f[scc[xian[sccP[0]][0]]]; return;\r\n\t\t}\r\n\t\tf[sccn] = ((flagAB[0]) ? 2 : 0);\r\n\t}\r\n}\r\nvoid clear() {\r\n\tfor (int i = 1; i <= N; i++) {\r\n\t\tclearT(A[i].first, treeA);\r\n\t}\r\n\tfor (int i = 1; i <= M; i++) {\r\n\t\tclearT(B[i].first, treeB);\r\n\t}\r\n\tsccn = 0;\r\n\tfor (int i = 1; i <= N + M; i++)xian[i].clear(), dfn[i] = low[i] = scc[i] =   0;\r\n}\r\nvoid solve() {\r\n\tint Amax = -1, Bmax = -1;\r\n\tN = read();\r\n\tfor (int i = 1; i <= N; i++)A[i].first = read(), Amax = max(Amax, A[i].first);\r\n\tfor (int i = 1; i <= N; i++)A[i].second = read();\r\n\tfor (int i = 1; i <= N; i++)change(A[i].first, A[i].second, i, treeA);\r\n\tM = read();\r\n\tfor (int i = 1; i <= M; i++)B[i].first = read(), Bmax = max(Bmax, B[i].first);\r\n\tfor (int i = 1; i <= M; i++)B[i].second = read();\r\n\tfor (int i = 1; i <= M; i++)change(B[i].first, B[i].second, i, treeB);\r\n\t//cerr << \"****************************\\n\";\r\n\tint to;\r\n\tfor (int i = 1; i <= N; i++) {\r\n\t\tif (Bmax <= A[i].second)continue;\r\n\t\tto = ask(A[i].second + 1, treeB);\r\n\t\txian[i].push_back(to + N);\r\n\t//\tcerr << i << \" \" << to + N << endl;\r\n\t}\r\n\tfor (int i = 1; i <= M; i++) {\r\n\t\tif (Amax <= B[i].second)continue;\r\n\t\tto = ask(B[i].second + 1, treeA);\r\n\t\txian[i + N].push_back(to);\r\n\t//\tcerr << i + N << \" \" << to << endl;\r\n\t}\r\n\t//cerr << \"****************************\\n\";\r\n\tfor (int i = 1; i <= N + M; i++) {\r\n\t\tstaR = 0;\r\n\t\tif (!dfn[i])dfs(i);\r\n\t}\r\n\tint ans[4] = { 0 };\r\n\tfor (int i = 1; i <= N; i++) {\r\n\t\tans[f[scc[i]]]++;\r\n\t}\r\n\tprintf(\"%d %d %d\\n\", ans[2], ans[1], ans[0]);\r\n}\r\nvoid init() {\r\n\tint T = read();\r\n\twhile (T--) {\r\n\t\tsolve();\r\n\t\tclear();\r\n\t}\r\n}\r\n\r\nsigned main() {\r\n\t//  freopen(\"in.in\", \"r\", stdin);\r\n\t//freopen(\"out.out\", \"w\", stdout);\r\n\t//clock_t c1 = clock();\r\n\tinit();\r\n\t//  std::cerr << \"TIME:\" << clock() - c1;\r\n\treturn 0;\r\n}"
}