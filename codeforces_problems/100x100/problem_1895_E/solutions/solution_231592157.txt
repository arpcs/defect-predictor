{
    "id": 231592157,
    "contestId": 1895,
    "creationTimeSeconds": 1699277821,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "FLOWPOWER"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 482,
    "memoryConsumedBytes": 29081600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define pb push_back\r\n#define fs first\r\n#define sc second\r\n#define endl \"\\n\"\r\n#define all(x) (x).begin(),(x).end()\r\n#define sz(x) (int)(x).size()\r\nusing ll = long long;\r\nusing VI = vector <int>;\r\nusing PII = pair <int,int>;\r\n\r\nvoid solve() {\r\n    int n;cin >> n;\r\n    vector<PII> a(n + 1);\r\n    for(int i = 1;i <= n;i++) cin >> a[i].fs;\r\n    for(int i = 1;i <= n;i++) cin >> a[i].sc;\r\n    int m;cin >> m;\r\n    vector<PII> b(m + 1);\r\n    for(int i = 1;i <= m;i++) cin >> b[i].fs;\r\n    for(int i = 1;i <= m;i++) cin >> b[i].sc;\r\n    sort(a.begin() + 1,a.end());\r\n    sort(b.begin() + 1,b.end());\r\n    VI posa(n + 1),posb(m + 1);\r\n    posa[n] = n,posb[m] = m;\r\n    for(int i = n - 1;i;i--) {\r\n        if(a[i].sc > a[posa[i + 1]].sc) {\r\n            posa[i] = i;\r\n        }\r\n        else posa[i] = posa[i + 1];\r\n    }\r\n    for(int i = m - 1;i;i--) {\r\n        if(b[i].sc > b[posb[i + 1]].sc) {\r\n            posb[i] = i;\r\n        }\r\n        else posb[i] = posb[i + 1];\r\n    }\r\n    vector<vector<int> > e(n + m + 6);\r\n    VI deg(n + m + 6),st(n + m + 1);\r\n    for(int i = 1;i <= n;i++) {\r\n        int pos = lower_bound(b.begin() + 1,b.end(), make_pair(a[i].sc + 1,0)) - b.begin();\r\n        if(pos != m + 1) {\r\n            e[n + posb[pos]].pb(i);\r\n            deg[i]++;\r\n        }\r\n    }\r\n    for(int i = 1;i <= m;i++) {\r\n        int pos = lower_bound(a.begin() + 1,a.end(), make_pair(b[i].sc + 1,0)) - a.begin();\r\n        if(pos != n + 1) {\r\n            e[posa[pos]].pb(n + i);\r\n            deg[n + i]++;\r\n        }\r\n    }\r\n    queue<int> q;\r\n    for(int i = 1;i <= n + m;i++) {\r\n        if(!deg[i]) q.push(i),st[i] = 1;\r\n    }\r\n    while(!q.empty()) {\r\n        int t = q.front();\r\n        q.pop();\r\n        for(auto y : e[t]) {\r\n            if(st[t] == 0) st[y] = 1;\r\n            if(!--deg[y]) q.push(y);\r\n        }\r\n    }\r\n    for(int i = 1;i <= n;i++) if(deg[i]) st[i] = 2;\r\n    VI ans(3);\r\n    for(int i = 1;i <= n;i++) {\r\n        ans[st[i]]++;\r\n    }\r\n    cout << ans[1] << ' ' << ans[2] << ' ' << ans[0] << endl;\r\n}\r\n\r\nsigned main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n    cout << fixed << setprecision(10);\r\n    int T = 1;\r\n    cin >> T;\r\n    while(T--) solve();\r\n    return 0;\r\n}"
}