{
    "id": 231877200,
    "contestId": 1895,
    "creationTimeSeconds": 1699412755,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "qqqqqqjw"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 577,
    "memoryConsumedBytes": 93900800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n#define For(i, j, k) for(int i = (j), _##i = (k); i <= _##i; ++i)\r\nconst int N = 0;\r\nint T, n, m;\r\nvoid dfs(int x, int & num, vector<int> & deg, vector<vector<int>> & from)\r\n{\r\n    if(x <= n) num++;\r\n    for(auto i : from[x])\r\n    if(!deg[i])\r\n    {\r\n        dfs(i, num, deg, from);\r\n    }\r\n};\r\nvoid solve()\r\n{\r\n    cin >> n;\r\n    vector<pair<int, int>> a(n + 1); \r\n    For(i, 1, n) cin >> a[i].first;\r\n    For(i, 1, n) cin >> a[i].second;\r\n    sort(a.begin() + 1, a.end());\r\n    vector<pair<int, int> > mp1(n + 1);\r\n    pair<int, int> ma = {0, 0};\r\n    for(int i = n; i >= 1; i--)\r\n    {\r\n        if(a[i].second > ma.second) ma = {i, a[i].second};\r\n        mp1[i] = ma;\r\n    }\r\n\r\n    cin >> m;\r\n    vector<pair<int, int>> b(m + 1); \r\n    For(i, 1, m) cin >> b[i].first;\r\n    For(i, 1, m) cin >> b[i].second;\r\n    sort(b.begin() + 1, b.end());\r\n    vector<pair<int, int> > mp2(m + 1);\r\n    ma = {0, 0};\r\n    for(int i = m; i >= 1; i--)\r\n    {\r\n        if(b[i].second > ma.second) ma = {i, b[i].second};\r\n        mp2[i] = ma;\r\n    }\r\n\r\n    vector<vector<int>> from(n + m + 1);\r\n    vector<int> to(n + m + 1, 0);\r\n    vector<int> deg(n + m + 1, 0);\r\n    vector<int> chu(n + m + 1, 0);\r\n    For(i, 1, n)\r\n    {\r\n        int num = a[i].second;\r\n        int pos = upper_bound(b.begin() + 1, b.end(), (pair<int, int>){num, 10000000}) - b.begin();\r\n        if(pos == m + 1) continue;\r\n        auto ma = mp2[pos];\r\n        to[i] = ma.first + n;\r\n        deg[ma.first + n]++;\r\n        chu[i]++;\r\n        from[ma.first + n].push_back(i);\r\n    }\r\n    For(i, 1, m)\r\n    {\r\n        int num = b[i].second;\r\n        int pos = upper_bound(a.begin() + 1, a.end(), (pair<int, int>){num, 10000000}) - a.begin();\r\n        if(pos == n + 1) continue;\r\n        auto ma = mp1[pos];\r\n        to[i + n] = ma.first;\r\n        deg[ma.first]++;\r\n        chu[i + n]++;\r\n        from[ma.first].push_back(i + n);\r\n    }\r\n\r\n    queue<int> q;\r\n    For(i, 1, n + m)\r\n    {\r\n        if(!deg[i]) q.push(i);\r\n    }\r\n    while(!q.empty())\r\n    {\r\n        int x = q.front();\r\n        q.pop();\r\n        if(to[x]) \r\n        {\r\n            --deg[to[x]];\r\n            if(!deg[to[x]]) q.push(to[x]);\r\n        }\r\n    }\r\n\r\n    int win = 0, lose = 0, draw = 0;\r\n    vector<int> vis(n + m + 1, 0);\r\n    For(i, 1, n + m)\r\n    {\r\n        if(!deg[i]) continue;\r\n        if(vis[i]) continue;\r\n        for(int j = i; ; j = to[j])\r\n        {\r\n            vis[j] = 1;\r\n            dfs(j, draw, deg, from);\r\n            if(to[j] == i) break;\r\n        }\r\n    }\r\n\r\n    For(i, 1, n + m)\r\n    {\r\n        if(chu[i]) continue;\r\n        if(i <= n) dfs(i, win, deg, from);\r\n        else dfs(i, lose, deg, from);\r\n    }\r\n\r\n    cout << win << \" \" << draw << \" \" << lose << \"\\n\";\r\n}\r\nsigned main(){\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);cout.tie(0);\r\n    cin >> T;\r\n    while(T--)\r\n    {\r\n        solve();\r\n    }\r\n}"
}