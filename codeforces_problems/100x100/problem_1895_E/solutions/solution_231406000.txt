{
    "id": 231406000,
    "contestId": 1895,
    "creationTimeSeconds": 1699153062,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "chinawcp"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 32460800,
    "source": "#include<bits/stdc++.h>\r\n#define ll long long \r\n#define ill __int128 \r\n#define ull unsigned long long\r\n#define ld long double\r\n#define yes \"Yes\"\r\n#define no \"No\"\r\nusing namespace std;\r\nconst int inf = 1e9;\r\nconst ll linf = 1e18;\r\nconst int maxn = 1e6 + 5;\r\nconst int N = 2e7 + 5;\r\nconst double eps = 1e-8;\r\nconst int mod = 1e9 + 7;\r\nconst double pi = acos(-1);\r\nconst int prime_bas = 2333;\r\n\r\nint sgn(double x){\r\n    if (fabs(x) < eps)\r\n        return 0;\r\n    if (x < 0)\r\n        return -1;\r\n    else\r\n        return 1;\r\n}\r\nll power(ll x, ll k, int mod = mod){\r\n    if(k == 1) return x;\r\n    if(k == 0) return 1;\r\n    ll tmp = power(x, k / 2, mod);\r\n    if(k & 1) return tmp * tmp % mod * x % mod;\r\n    return tmp * tmp % mod;\r\n}\r\nbool Mbe; double Tim;\r\nll nn = 0, mm = 0;\r\nclass segtree{\r\npublic:\r\n    struct node{\r\n        int add, ned;  \r\n        node(int _add, int _ned) : add(_add), ned(_ned) {}\r\n        node() : add(0), ned(0) {}  \r\n\r\n        void apply(int l, int r, int v){\r\n            // add += v;\r\n            add = max(add, v);\r\n            // ned += v;\r\n            ned = max(ned, v);\r\n        }  \r\n    };\r\n\r\n    node unite(const node &a, const node &b) const {\r\n        node res = node();\r\n        res.ned = max(a.ned, b.ned);\r\n        return res;\r\n    }\r\n\r\n    inline void pushup(int x, int y){\r\n        tr[x] = unite(tr[x + 1], tr[y]);\r\n    }\r\n\r\n    inline void spread(int x, int l, int r){\r\n        if(tr[x].add == -1){\r\n            int mid = (l + r) >> 1;\r\n            int y = x + ((mid - l + 1) << 1);\r\n            tr[x].ned = tr[x + 1].ned = tr[y].ned = 0;\r\n            tr[x + 1].add = -1;\r\n            tr[y].add = -1;\r\n            tr[x].add = 0;\r\n        }\r\n        if(tr[x].add){\r\n            int mid = (l + r) >> 1;\r\n            int y = x + ((mid - l + 1) << 1);\r\n            tr[x + 1].apply(l, mid, tr[x].add);\r\n            tr[y].apply(mid + 1, r, tr[x].add);\r\n            tr[x].add = 0;\r\n        }\r\n    }\r\n\r\n    int n;\r\n    vector<node> tr;\r\n\r\n    template<class T>\r\n    void build(int l, int r, int x, vector<T> v){\r\n        if(l == r){\r\n            tr[x].apply(l, r, v[l]);\r\n            return;\r\n        }\r\n        int mid = (l + r) >> 1;\r\n        int y = x + ((mid - l + 1) << 1);\r\n        build(l, mid, x + 1);\r\n        build(mid + 1, r, y);\r\n        pushup(x, y);\r\n    }\r\n\r\n    void build(int l, int r, int x){\r\n        if(l == r){\r\n            return;\r\n        }\r\n        int mid = (l + r) >> 1;\r\n        int y = x + ((mid - l + 1) << 1);\r\n        build(l, mid, x + 1);\r\n        build(mid + 1, r, y);\r\n        pushup(x, y);\r\n    }\r\n\r\n    void modify(int l, int r, int x, int L, int R, int v){\r\n        if(tr[x].ned >= v) return;\r\n        if(l <= L && R <= r){\r\n            tr[x].apply(l, r, v);\r\n            return;\r\n        }\r\n        spread(x, L, R);\r\n        int mid = (L + R) >> 1;\r\n        int y = x + ((mid - L + 1) << 1);\r\n        if(l <= mid) modify(l, r, x + 1, L, mid, v);\r\n        if(r > mid) modify(l, r, y, mid + 1, R, v);\r\n        pushup(x, y);\r\n    }\r\n\r\n    node query(int l, int r, int x, int L, int R){\r\n        if(l <= L && R <= r){\r\n            return tr[x];\r\n        }\r\n        int mid = (L + R) >> 1;\r\n        int y = x + ((mid - L + 1) << 1);\r\n        node res {};\r\n        spread(x, L, R);\r\n        if(l <= mid) res = unite(res, query(l, r, x + 1, L, mid));\r\n        if(r > mid) res = unite(res, query(l, r, y, mid + 1, R));\r\n        pushup(x, y);\r\n        return res;\r\n    }  \r\n\r\n    segtree(int _n) : n(_n) {\r\n        tr.resize(n << 1);\r\n        build(1, n, 1);\r\n    }\r\n\r\n    template<class T>\r\n    segtree(const vector<T> &v){\r\n        n = v.size();\r\n        tr.resize(n << 1);\r\n        build(1, n, 1, v);\r\n    }\r\n\r\n    inline int query(int l, int r){\r\n        if(r < l) return 0;\r\n        return query(l, r, 1, 1, n).ned;\r\n    }\r\n\r\n    inline void modify(int l, int r, int v){\r\n        if(r < l) return;\r\n        modify(l, r, 1, 1, n, v);\r\n    }\r\n    inline void clear(){\r\n        tr[1].add = -1;\r\n        spread(1, 1, n);\r\n    }\r\n};\r\nsegtree bir(maxn), bir2(maxn);\r\nvoid slove(){\r\n    int n, m; cin >> n;\r\n    vector<pair<int, int> > a(n + 1);\r\n    for(int i = 1; i <= n; i ++){\r\n        cin >> a[i].first;\r\n    }\r\n    for(int i = 1; i <= n; i ++){\r\n        cin >> a[i].second;\r\n    }\r\n    cin >> m;\r\n    nn += n; mm += m;\r\n    if((double)clock()/CLOCKS_PER_SEC>3.00){\r\n        cout << nn << \"!\" << mm << '\\n';\r\n        exit(0);\r\n    }\r\n    vector<pair<int, int> > b(m + 1);\r\n    for(int i = 1; i <= m; i ++){\r\n        cin >> b[i].first;\r\n    }\r\n    for(int i = 1; i <= m; i ++){\r\n        cin >> b[i].second;\r\n    }\r\n    int mx1 = 0, mx2 = 0, mx = 0;\r\n    for(int i = 1; i <= n; i ++){\r\n        mx1 = max(mx1, a[i].first), mx = max(mx, a[i].second);\r\n        bir.modify(a[i].first, a[i].first, a[i].second);                                                                   \r\n    }\r\n    for(int i = 1; i <= m; i ++){\r\n        mx2 = max(mx2, b[i].first), mx = max(mx, b[i].second);\r\n        bir2.modify(b[i].first, b[i].first, b[i].second);\r\n    }\r\n    int cnt1 = 0, cnt2 = 0, cnt3 = 0;\r\n    vector<int> vis(mx + 1, 0), cnt(mx + 1, 0);\r\n    auto dfs = [&vis, &cnt, &mx1, &mx2] (auto self, int x, int op) ->int{                                                                                         \r\n        if(op == 1){\r\n            if(vis[x]) return vis[x];\r\n            if(cnt[x] == 1) return vis[x] = 2;\r\n            cnt[x] += 1;\r\n            int tmp = bir.query(x + 1, mx1);\r\n            if(tmp == 0) return vis[x] = 1;\r\n            vis[x] = self(self, tmp, 2);\r\n            cnt[x] -= 1;\r\n            return vis[x];\r\n        }\r\n        else{\r\n            int tmp = bir2.query(x + 1, mx2);\r\n            if(tmp == 0) return 3;\r\n            return self(self, tmp, 1);\r\n        }\r\n    };\r\n    vis[0] = 1;\r\n    for(int i = 1; i <= n; i ++){\r\n        int res = dfs(dfs, a[i].second, 2);\r\n        if(res == 1) cnt3 += 1; \r\n        else if(res == 2) cnt2 += 1;\r\n        else cnt1 += 1;\r\n    }   \r\n    bir.clear(), bir2.clear();\r\n    cout << cnt1 << \" \" << cnt2 << \" \" << cnt3 << '\\n';\r\n}\r\nbool Med;\r\nint main()\r\n{\r\n    fprintf(stderr, \"%.3lf MB\\n\", (&Med - &Mbe) / 1048576.0);\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0), cout.tie(0);\r\n    int t = 1, flag = 1;\r\n    cin >> t, Tim = clock(), flag = 0;\r\n    while(t --){\r\n        if(flag) Tim = clock(), flag = 0;\r\n        slove();\r\n    }\r\n    cerr << '\\n' << 1e3 * (clock() - Tim) / CLOCKS_PER_SEC << \" ms\";\r\n}"
}