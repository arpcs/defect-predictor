{
    "id": 231326206,
    "contestId": 1895,
    "creationTimeSeconds": 1699098267,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "ANASASASASAS-KHAN"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 13209600,
    "source": "/*\r\n        Author ::  phoenix91\r\n*/\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n\r\ntemplate <typename A, typename B> ostream& operator<< (ostream &cout, pair<A, B> const &p) { return cout << \"(\" << p.first << \", \" << p.second << \")\"; }\r\ntemplate <typename A, typename B> istream& operator>> (istream& cin, pair<A, B> &p) {cin >> p.first; return cin >> p.second;}\r\ntemplate <typename A> ostream& operator<< (ostream &cout, vector<A> const &v) {cout << \"[\"; for(int i = 0; i < v.size(); i++) {if (i) cout << \", \"; cout << v[i];} return cout << \"]\";}\r\ntemplate <typename A> ostream& operator<< (ostream &cout, set<A> const &v) {cout << \"[\"; for(auto &x: v) cout << x <<\", \"; return cout << \"]\";}\r\ntemplate <typename A> istream& operator>> (istream& cin, vector<A> &x){for(int i = 0; i < x.size()-1; i++) cin >> x[i]; return cin >> x[x.size()-1];}\r\ntemplate <typename A, typename B> A amax (A &a, B b){ if (b > a) a = b ; return a; }\r\ntemplate <typename A, typename B> A amin (A &a, B b){ if (b < a) a = b ; return a; }\r\n\r\n\r\nmt19937 rng (chrono::high_resolution_clock::now().time_since_epoch().count());\r\n#define ll            long long\r\n#define pb            push_back\r\n#define rep(i,a,n )   for( ll i=a;i<n;i++)\r\n#define all(v)        v.begin() , v.end()\r\n#define gcd(a,b)      __gcd(a,b)\r\n#define lb            lower_bound\r\n#define ub            upper_bund\r\n#define ss             second\r\n#define ff             first\r\n#define mp               make_pair\r\n#define pii            pair < int  , int >\r\ntypedef vector < int > vi ; \r\ntypedef vector < long long > vll ; \r\ntypedef pair < ll , ll >  pll ;  \r\n// #define PI            3.1415926535\r\n// some primes :: 998244353 , 1000000007 , 1000000009\r\n\r\nconst ll inf = 1e9 ;   \r\n\r\n\r\n\r\n/* ~~~~~~~~~~~~~~~~~ code starts here ~~~~~~~~~~~~~~~~~*/\r\n\r\n\r\n\r\nvoid QT(){\r\n\r\n    int n ; cin >> n ; \r\n    vector < pii > a(n) ; \r\n    rep( i , 0 , n ){\r\n        cin >> a[i].ff ;\r\n    }\r\n    rep( i , 0 , n ){\r\n        cin >> a[i].ss;\r\n    }\r\n\r\n    int m ; cin >> m ; \r\n    vector < pii > b( m); \r\n    rep( i , 0 , m ){\r\n        cin >> b[i].ff ; \r\n    }\r\n    rep( i , 0 , m ){\r\n        cin >> b[i].ss ; \r\n    }\r\n    \r\n    sort(all(a)); sort(all(b)); \r\n\r\n    vector < pii > pra( n ) , prb(m); \r\n    pra[n-1] = {a[n-1].ss,n-1} ; prb[m-1] = {b[m-1].ss,m-1} ; \r\n    for( int i = n-2 ; i >= 0 ; i -- ){\r\n        pra[i] = pra[i+1]; \r\n        if( a[i].ss > pra[i].ff ){\r\n            pra[i] = { a[i].ss , i }; \r\n        }\r\n    }\r\n    for( int i = m-2 ; i >= 0 ; i -- ){\r\n        prb[i] = prb[i+1]; \r\n        if( b[i].ss > prb[i].ff ){\r\n            prb[i] = { b[i].ss , i }; \r\n        }\r\n    }\r\n\r\n    std::array < int , 3 > w { 0 , 0 , 0 }; \r\n    vector < int > val( n , -1 ); \r\n\r\n    vector < int > need( n , 1 ); \r\n\r\n    for( int i = n-1 ; i >= 0  ; i -- ){\r\n        int l = 0 , r = m , ans = -1 ;\r\n        while( l < r ){\r\n            int mid = l + (r-l)/2 ; \r\n            if( b[mid].ff > a[i].ss ){\r\n                ans = mid ; r = mid ; \r\n            }else{\r\n                l = mid + 1 ;  \r\n            }\r\n        } \r\n        if( ans == -1 ){\r\n            w[0]++;  val[i] = 0 ; \r\n            need[i] = 0 ; \r\n            continue ; \r\n        }\r\n        int f = prb[ans].ff ; \r\n        l = 0 , r = n , ans = -1 ; \r\n        while( l < r ){\r\n            int mid = l + ( r - l )/ 2 ; \r\n            if( a[mid].ff > f ){\r\n                ans = mid ; r = mid ; \r\n            }else{\r\n                l = mid + 1 ; \r\n            }\r\n        }\r\n        if( ans == -1 ){\r\n            w[2]++;  val[i] = 2 ; \r\n            need[i] = 0 ; \r\n            continue ; \r\n        }\r\n        if( pra[ans].ss == i  ){\r\n            w[1]++; val[i] = 1 ; need[i] = 0 ; \r\n        }else{\r\n            int k = pra[ans].ss ; \r\n            if( need[k] ){\r\n                val[i] = k ; \r\n            }else{\r\n                val[i] = val[k];  \r\n                w[val[i]]++;  \r\n                need[i] = 0 ; \r\n            }\r\n        }\r\n    }\r\n\r\n    vector < int > colour( n , 0 ) ; \r\n    vector < int > ord ; \r\n\r\n    function < int ( int ) > dfs = [&]( int a ){\r\n        ord.pb(a); \r\n        colour[a] = 1 ; \r\n        if( need[a] == 0 ){\r\n            return val[a] ; \r\n        }\r\n        if( colour[val[a]] == 1 ){\r\n            return -1; \r\n        }\r\n        int k = 0 ;  \r\n        if( need[val[a]] ){\r\n            k = dfs( val[a]); \r\n        }else{\r\n            k = val[val[a]]; \r\n        }\r\n        colour[a] = 2 ; \r\n        return k ; \r\n    }; \r\n\r\n    for( int i = 0 ; i < n ; i++ ){\r\n        if( need[i] && colour[i] == 0 ){\r\n            ord.clear(); \r\n            int k = dfs( i ); \r\n            if( k == -1 ){\r\n                for( auto h : ord ){\r\n                    colour[h] = 2 ; \r\n                    val[h] = 1 ; w[1]++; need[h] = 0 ;  \r\n                }\r\n            }else{\r\n                for( auto h : ord ){\r\n                    colour[h] = 2 ; \r\n                    val[h] = k ; w[k]++; need[h] = 0 ; \r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    cout << w[0] << ' ' << w[1] << ' ' << w[2] << '\\n'; \r\n\r\n}\r\n\r\nint main(){\r\n    ios_base::sync_with_stdio(0);cin.tie(0);      \r\n    \r\n    //freopen(\"input.txt\", \"r\", stdin);\r\n    //freopen(\"output.txt\", \"w\", stdout);\r\n\r\n    int kase  ; cin>>kase  ;  \r\n    while( kase -- ) {\r\n        QT(); \r\n    }\r\n    \r\nreturn 0;\r\n} \r\n\r\n\r\n/* don't read below its bs */\r\n\r\n\r\n   \r\n"
}