{
    "id": 232011920,
    "contestId": 1895,
    "creationTimeSeconds": 1699499062,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "cnyzz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 405,
    "memoryConsumedBytes": 11980800,
    "source": "/*\r\nAuthor: cnyz\r\n\u4e16\u754c\u304c\u3042\u305f\u3057\u3092\u62d2\u3093\u3067\u3082\u4eca \u611b\u306e\u5504 \u6b4c\u308f\u305b\u3066\u304f\u308c\u306a\u3044\u304b\u306a\r\n*/\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nusing db=double;\r\nusing ll=long long;\r\nusing vi=vector<int>;\r\nusing pii=pair<int,int>;\r\nusing ull=unsigned long long;\r\n\r\n#define fi first\r\n#define se second\r\n#define gc getchar\r\n#define pb emplace_back\r\n#define mkp make_pair\r\n#define push emplace\r\n#define sz(a) (int)a.size()\r\n#define all(p) p.begin(),p.end()\r\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\r\n#define ROF(i,a,b) for(int i=a;i>=b;i--)\r\n#define ppc(x) __builtin_popcount(x)\r\n#define clz(x) __builtin_clz(x)\r\n\r\nbool Mbe;\r\n\r\nint read() {\r\n    int x=0,f=1;char ch=gc();\r\n    while(!isdigit(ch)) {if(ch=='-') f=-1;ch=gc();}\r\n    while(isdigit(ch)) x=10*x+ch-'0',ch=gc();\r\n    return x*f;\r\n}\r\nvoid chkmax(int &x,int y) {if(x<y) x=y;}\r\nvoid chkmin(int &x,int y) {if(x>y) x=y;}\r\n\r\nconst int N=3e5+5,inf=1e9;\r\npii a[N],b[N];\r\nint mxa[N],mxb[N];\r\nint fa[2*N],to[2*N];\r\nint find(int x) { return fa[x]=fa[x]==x?x:find(fa[x]); }\r\nvoid merge(int x,int y) {\r\n    int fx=find(x),fy=find(y);\r\n    if(fx==fy) return;\r\n    fa[fx]=fy;\r\n}\r\nvoid solve() {\r\n    int n=read();\r\n    FOR(i,1,n) a[i].fi=read();\r\n    FOR(i,1,n) a[i].se=read();\r\n    int m=read();\r\n    FOR(i,1,m) b[i].fi=read();\r\n    FOR(i,1,m) b[i].se=read();\r\n    sort(a+1,a+n+1),sort(b+1,b+m+1);\r\n    mxa[n+1]=0,mxb[m+1]=0;\r\n    ROF(i,n,1) mxa[i]=a[i].se>a[mxa[i+1]].se?i:mxa[i+1];\r\n    ROF(i,m,1) mxb[i]=b[i].se>b[mxb[i+1]].se?i:mxb[i+1];\r\n    FOR(i,1,n+m) fa[i]=i;\r\n    FOR(i,1,n) {\r\n        int z=upper_bound(b+1,b+m+1,mkp(a[i].se,inf))-b;\r\n        if(z!=m+1) to[i]=mxb[z]+n,merge(i,mxb[z]+n);\r\n        else to[i]=0; \r\n    }\r\n    FOR(i,1,m) {\r\n        int z=upper_bound(a+1,a+n+1,mkp(b[i].se,inf))-a;\r\n        if(z!=n+1) to[i+n]=mxa[z],merge(i+n,mxa[z]);\r\n        else to[i+n]=0;\r\n    }\r\n    int o1=0,o2=0,o3=0;\r\n    FOR(i,1,n) {\r\n        int f=find(i);\r\n        if(to[f]) o2++;\r\n        else {\r\n            if(f<=n) o1++;\r\n            else o3++;\r\n        }\r\n    }\r\n    printf(\"%d %d %d\\n\",o1,o2,o3);\r\n}\r\n\r\nbool Med;\r\nint main() {\r\n    fprintf(stderr, \"%.3lf MB\\n\", (&Med - &Mbe) / 1048576.0);\r\n    int T=read();\r\n    while(T--) solve();\r\n    fprintf(stderr, \"%d ms\\n\", int(1e3 * clock() / CLOCKS_PER_SEC));\r\n}"
}