{
    "id": 231562044,
    "contestId": 1895,
    "creationTimeSeconds": 1699262448,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "Nxxlt"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 53145600,
    "source": "#pragma GCC optimize(\"O3,unroll-loops\")\r\n#pragma GCC target(\"avx,avx2,fma\")\r\n\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\n/* DEFINES */\r\n#define S second\r\n#define F first\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define ld long double\r\n#define npos ULLONG_MAX\r\n#define INF LLONG_MAX\r\n#define vv(a) vector<a>\r\n#define pp(a, b) pair<a, b>\r\n#define pq(a) priority_queue<a>\r\n#define qq(a) queue<a>\r\n#define ss(a) set<a>\r\n#define mm(a, b) map<a, b>\r\n#define ump(a, b) unordered_map<a, b>\r\n#define ANDROID                   \\\r\n    ios_base::sync_with_stdio(0); \\\r\n    cin.tie(0);                   \\\r\n    cout.tie(0);\r\n#define elif else if\r\n#define endl \"\\n\"\r\n#define allc(a) begin(a), end(a)\r\n#define all(a) a, a + sizeof(a) / sizeof(a[0])\r\n#define pb push_back\r\n#define logi(a) __lg(a)\r\n#define sqrt(a) sqrtl(a)\r\n#define mpr make_pair\r\n#define ins insert\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\nusing namespace __cxx11;\r\ntypedef char chr;\r\ntypedef basic_string<chr> str;\r\ntemplate <typename T, typename key = less<T>>\r\nusing ordered_set = tree<T, null_type, key, rb_tree_tag, tree_order_statistics_node_update>;\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\nconst ll N = 6e5 + 5;\r\nll nxt[N];\r\npp(ll, ll) a[N], b[N];\r\nll used[N];\r\nll n, m;\r\nll ans[3], calc[N];\r\nll dfs(ll v)\r\n{\r\n    used[v] = 1;\r\n    if (nxt[v] == -1)\r\n    {\r\n        used[v] = 2;\r\n        return calc[v] = (v == 0 ? 2 : 0);\r\n    }\r\n    if (used[nxt[v]] == 1)\r\n    {\r\n        used[v] = 2;\r\n        return calc[v] = 1;\r\n    }\r\n    else\r\n    {\r\n        calc[v] = dfs(nxt[v]);\r\n        used[v] = 2;\r\n        return calc[v];\r\n    }\r\n}\r\nvoid solve()\r\n{\r\n    cin >> n;\r\n    ans[0] = ans[1] = ans[2] = 0;\r\n    for (ll i = 1; i <= n; i++)\r\n        cin >> a[i].F;\r\n    for (ll i = 1; i <= n; i++)\r\n        cin >> a[i].S;\r\n    cin >> m;\r\n    for (ll i = 1; i <= m; i++)\r\n        cin >> b[i].F;\r\n    for (ll i = 1; i <= m; i++)\r\n        cin >> b[i].S;\r\n    for (ll i = 0; i <= n + m + 1; i++)\r\n        used[i] = 0, nxt[i] = -1, calc[i] = 0;\r\n    sort(a + 1, a + n + 1, greater());\r\n    sort(b + 1, b + m + 1, greater());\r\n    for (ll i = 1, mx = 0; i <= n; i++)\r\n    {\r\n        mx = max(mx, a[i].S), nxt[i] = lower_bound(b + 1, b + m + 1, mpr(mx, INF), greater()) - b - 1;\r\n        if (nxt[i] == 0)\r\n            nxt[i] = n + m + 1;\r\n        else\r\n            nxt[i] += n;\r\n    }\r\n    for (ll i = 1, mx = 0; i <= m; i++)\r\n        mx = max(mx, b[i].S), nxt[i + n] = lower_bound(a + 1, a + n + 1, mpr(mx, INF), greater()) - a - 1;\r\n    for (ll i = 0; i <= n + m + 1; i++)\r\n        if (!used[i])\r\n            dfs(i);\r\n    for (ll i = 1, pos; i <= n; i++)\r\n    {\r\n        pos = lower_bound(b + 1, b + m + 1, mpr(a[i].S, INF), greater()) - b - 1;\r\n        if (pos == 0)\r\n            pos = n + m + 1;\r\n        else\r\n            pos += n;\r\n        ans[calc[pos]]++;\r\n    }\r\n    for (ll i : ans)\r\n        cout << i << \" \";\r\n    cout << endl;\r\n}\r\n/*\r\n\r\n*/\r\nint main()\r\n{\r\n    ANDROID\r\n    // precomp();\r\n    ll t = 1;\r\n    cin >> t;\r\n    for (ll i = 1; i <= t; i++)\r\n        // cout << \"Case #\" << i << \": \",\r\n        solve();\r\n    cerr << \"\\nTime elapsed : \" << clock() * 1000.0 / CLOCKS_PER_SEC << \" ms\\n\";\r\n}"
}