{
    "id": 232069191,
    "contestId": 1895,
    "creationTimeSeconds": 1699533755,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "LOVESTONE"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 102400,
    "source": "// LUOGU_RID: 134201414\n#pragma GCC optmize(\"03\")\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define sz(v) ((int)(v).size())\r\n#define all(v) (v).begin(),(v).end()\r\n#define pb push_back\r\n//#define int long long\r\n#define lowbit(x) ((x)&(-x))\r\n#define forn(i,n) for(int i = 0; i < int(n); i++)\r\nconst int N = 1e6 + 10;\r\nchar *p1,*p2,buf[100000];\r\ninline int read()\r\n{\r\n    int x=0,f=1;\r\n    char ch=getchar();\r\n    while(ch<'0'||ch>'9')\r\n    {\r\n        if(ch=='-')\r\n            f=-1;\r\n        ch=getchar();\r\n    }\r\n    while(ch>='0' && ch<='9')\r\n        x=x*10+ch-'0',ch=getchar();\r\n    return x*f;\r\n}\r\n\r\nstruct card{\r\n\tint x, y;\r\n\tcard(){}\r\n\tcard(int x, int y) :x(x),y(y){}\r\n};\r\nvoid dfs(int v, const vector<int> &g, vector<int> &res,vector<char> &used) {\r\n\tif (used[v]) return;\r\n\tused[v] = true;\r\n\tdfs(g[v], g, res, used);\r\n\tres[v] = -res[g[v]];\r\n}\r\n\r\nvoid solve() {\r\n\tvector<vector<card>> a(2);\r\n\tvector<vector<int>> prpos(2);\r\n\tforn(z,2) {\r\n\t\tint n = read();\r\n\t\ta[z].resize(n);\r\n\t\tforn(i,n) cin >> a[z][i].x;\r\n\t\tforn(i,n) cin >> a[z][i].y;\r\n\t\tsort(a[z].begin(),a[z].end(), [](const card &a, const card &b){\r\n\t\t\treturn a.x > b.x;\r\n\t\t});\r\n\t\tprpos[z].resize(n+1,-1);\r\n\t\tforn(i,n) {\r\n\t\t\tif(prpos[z][i] == -1 || a[z][i].y> a[z][prpos[z][i]].y)\r\n\t\t\t\tprpos[z][i+1] = i;\r\n\t\t\telse prpos[z][i+1] = prpos[z][i];\r\n\t\t}\r\n\t}\r\n\tint n = a[0].size();\r\n\tvector<int> g(n + a[1].size());\r\n\tforn(z,2) forn(i,a[z].size()) {\r\n\t\tint cnt = lower_bound(a[z^1].begin(),a[z^1].end(),card(a[z][i].y,-1), [](const card &a, const card &b){\r\n\t\t\treturn a.x > b.x;\r\n\t\t}) - a[z^1].begin();\r\n\t\tg[i + z * n] = prpos[z^1][cnt] == -1 ? -1 : prpos[z ^ 1][cnt] + (z ^ 1) * n;\r\n\t}\r\n\tvector<int> res(g.size());\r\n\tvector<char> used(g.size());\r\n\tforn(i, g.size()) if(g[i] == -1) res[i] = 1, used[i] = true;\r\n\tint w = 0, l = 0;\r\n\tforn(i,n) {\r\n\t\tif(!used[i]) dfs(i, g, res, used);\r\n\t\tw += res[i] == 1;\r\n\t\tl += res[i] == -1;\r\n\t}\r\n\tcout << w << \" \" << n - l - w << \" \" << l << '\\n';\r\n}\r\nsigned main() {\r\n\tstd::ios::sync_with_stdio(false);\r\n\tstd::cin.tie(0);\r\n\tint t = 1;\r\n \tt = read();\r\n\twhile(t--) {\r\n\t\tsolve();\r\n\t}\r\n\treturn 0;\r\n}"
}