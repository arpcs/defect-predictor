{
    "id": 232627825,
    "contestId": 1895,
    "creationTimeSeconds": 1699878268,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "xxcdsgyes"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 53452800,
    "source": "// xxc\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define endl '\\n'\r\n#define IOS ios::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);\r\n#define ll long long\r\n#define debug(x) cout << #x << ' ' << x << endl;\r\n\r\nconst int N = 6e5 + 10;\r\n\r\nint edge[N];\r\n\r\nstruct point{\r\n\tint attack,hp,id;\r\n\tbool operator<(const point &other)const{\r\n\t\treturn attack < other.attack;\r\n\t}\r\n}a[N],b[N];\r\n\r\nint tem[N];\r\n\r\nint ma[N];\r\n\r\nbool vis[N];\r\n\r\nint type[N];\r\n\r\nint n,m;\r\n\r\nint dfs(int x){\r\n\tvis[x] = 1;\r\n\tif(vis[edge[x]]) return type[x] = type[edge[x]];\r\n\telse if(edge[x] == 0){\r\n\t\tif(x > n) return type[x] = -1;\r\n\t\telse return type[x] = 1;\r\n\t}else{\r\n\t\treturn type[x] = dfs(edge[x]);\r\n\t}\r\n}\r\n\r\nvoid test(){\r\n\tcin >> n;\r\n\tfor(int i = 1;i <= n;i++){\r\n\t\tcin >> a[i].attack;\r\n\t}\r\n\tfor(int i = 1;i <= n;i++){\r\n\t\tcin >> a[i].hp;\r\n\t\ta[i].id = i;\r\n\t}\r\n\tcin >> m;\r\n\tfor(int i = 1;i <= m;i++){\r\n\t\tcin >> b[i].attack;\r\n\t}\r\n\tfor(int i = 1;i <= m;i++){\r\n\t\tcin >> b[i].hp;\r\n\t\tb[i].id = i + n;\r\n\t}\r\n\tsort(b + 1,b + 1 + m);\r\n\tsort(a + 1,a + 1 + n);\r\n\tfor(int i = m;i >= 1;i--){\r\n\t\tma[i] = ((i == m) ? i : ((b[i].hp > b[ma[i + 1]].hp) ? i : ma[i + 1]));\r\n\t\ttem[i] = b[i].attack;\r\n\t}\r\n\tfor(int i = 1;i <= n;i++){\r\n\t\tint aim = upper_bound(tem + 1,tem + 1 + m,a[i].hp) - tem;\r\n\t\tif(aim != m + 1)\r\n\t\t\tedge[a[i].id] = b[ma[aim]].id;\r\n\t\telse\r\n\t\t\tedge[a[i].id] = 0;\r\n\t\t// cout << a[i].id << ' ' << edge[a[i].id] << '\\n';\r\n\t}\r\n\tfor(int i = n;i >= 1;i--){\r\n\t\tma[i] = ((i == n) ? i : ((a[i].hp > a[ma[i + 1]].hp) ? i : ma[i + 1]));\r\n\t\ttem[i] = a[i].attack;\r\n\t}\r\n\t// cout << '\\n';\r\n\tfor(int i = 1;i <= m;i++){\r\n\t\tint aim = upper_bound(tem + 1,tem + 1 + n,b[i].hp) - tem;\r\n\t\tif(aim != n + 1) \r\n\t\t\tedge[b[i].id] = a[ma[aim]].id;\r\n\t\telse\r\n\t\t\tedge[b[i].id] = 0;\r\n\t\t// cout << b[i].id << ' ' << edge[b[i].id] << '\\n';\r\n\t}\r\n\tint wi = 0,mi = 0,di = 0;\r\n\tfor(int i = 1;i <= n + m;i++) type[i] = vis[i] = 0;\r\n\tfor(int i = 1;i <= n;i++){\r\n\t\tif(!vis[i]) dfs(i);\r\n\t\tif(type[i] == 1) wi++;\r\n\t\telse if(type[i] == 0) mi++;\r\n\t\telse di++;\r\n\t}\r\n\tcout << wi << ' ' << mi << ' ' << di << '\\n';\r\n}\r\n\r\nint main(){\r\n\tIOS\r\n\tint t = 1;cin >> t;\r\n\twhile(t--){\r\n\t\ttest();\r\n\t}\r\n}"
}