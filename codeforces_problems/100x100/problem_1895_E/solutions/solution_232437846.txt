{
    "id": 232437846,
    "contestId": 1895,
    "creationTimeSeconds": 1699740367,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "demoralizer"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 826,
    "memoryConsumedBytes": 68198400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// #define int long long\r\n\r\nvoid solve()\r\n{\r\n    vector<int> defs;\r\n    auto inp = [&](int& n)\r\n    {\r\n        cin >> n;\r\n        vector<pair<int,int>> a(n);\r\n        for(auto& x : a)\r\n        {\r\n            cin >> x.first;\r\n        }\r\n        for(auto& x : a)\r\n        {\r\n            cin >> x.second;\r\n            defs.push_back(x.second);\r\n        }\r\n        sort(a.begin(), a.end());\r\n        for(int i = n - 2; i >= 0; i--)\r\n        {\r\n            a[i].second = max(a[i].second, a[i + 1].second);\r\n        }\r\n        return a;\r\n    };\r\n    int n, m;\r\n    auto a = inp(n);\r\n    auto b = inp(m);\r\n\r\n    vector<int> coords = defs;\r\n    sort(coords.begin(), coords.end());\r\n    coords.erase(unique(coords.begin(), coords.end()), coords.end());\r\n    \r\n    vector<int> f(1);\r\n    const int last = 2 * coords.size() + 1;\r\n    map<pair<int,int>,int> mp;\r\n    auto getver = [&](int x, int y){\r\n        auto& ans = mp[{x,y}];\r\n        if(ans != 0) return ans;\r\n        ans = f.size();\r\n        f.emplace_back();\r\n        return ans;\r\n    };\r\n    const int N = 1e6;\r\n    for(int i : coords)\r\n    {\r\n        auto ver = getver(i,0);\r\n        auto k = lower_bound(b.begin(), b.end(), pair<int,int>{i,N+1});\r\n        if(k == b.end()) f[ver] = 0;\r\n        else{\r\n            f[ver] = getver(k->second,1);\r\n        }\r\n\r\n        ver = getver(i,1);\r\n        k = lower_bound(a.begin(), a.end(), pair<int,int>{i,N+1});\r\n        if(k == a.end()) f[ver] = last;\r\n        else f[ver] = getver(k->second,0);\r\n    }\r\n    f.push_back(last);\r\n    for(int z = 0; z < 22; z++)\r\n    {\r\n        for(int i = 0; i < f.size(); i++)\r\n        {\r\n            f[i] = f[f[i]];\r\n        }\r\n    }\r\n    int x = 0, y = 0, z = 0;\r\n    for(auto k : defs)\r\n    {\r\n        if(n-- == 0) break;\r\n        int val = f[getver(k, 0)];\r\n        if(val == 0) x++;\r\n        else if(val == last) z++;\r\n        else y++;\r\n    }\r\n    cout << x << \" \" << y << \" \" << z << \"\\n\";\r\n}\r\n\r\nsigned main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    int t = 1;\r\n    cin >> t;\r\n    while(t--)\r\n    {\r\n        solve();\r\n    }\r\n}"
}