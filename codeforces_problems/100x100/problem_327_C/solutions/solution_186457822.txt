{
    "id": 186457822,
    "contestId": 327,
    "creationTimeSeconds": 1671793951,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 327,
        "index": "C",
        "name": "Magic Five",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "combinatorics",
            "math"
        ]
    },
    "author": {
        "contestId": 327,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1372941000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 33,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 102400,
    "source": "#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <vector>\nusing namespace std;\ntypedef long long ll;\nconst ll mod = 1e9 + 7;\nconst int buff = 1e5 + 5;\nchar s[buff];\nll qpow(ll a, ll b) {\n  ll res = 1;\n  while (b) {\n    if (b & 1) res = res * a % mod;\n    a = a * a % mod;\n    b >>= 1;\n  }\n  return res;\n}\nll inv(ll n) { return qpow(n, mod - 2); }\nll solve(int n, int k, int i) {\n  return qpow(2, i) * (qpow(2, 1LL * k * n) - 1) % mod * inv(qpow(2, n) - 1) %\n         mod;\n  // 2^i * (1+2^n+2^2n+2^3n+...+2^(k-1)n)\n  // 2^i*(2^kn -1)/2^k-1\n}\nint main() {\n  scanf(\"%s\", s);\n  int n = strlen(s), k;\n  scanf(\"%d\", &k);\n  ll ans = 0;\n  for (int i = 0; i < n; i++)\n    if (s[i] == '5' || s[i] == '0') ans += solve(n, k, i);\n  printf(\"%lld\\n\", ans % mod);\n  return 0;\n}\n\t \t\t          \t   \t\t\t \t   \t\t \t"
}