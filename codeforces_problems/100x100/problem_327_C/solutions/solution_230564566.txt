{
    "id": 230564566,
    "contestId": 327,
    "creationTimeSeconds": 1698682463,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 327,
        "index": "C",
        "name": "Magic Five",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "combinatorics",
            "math"
        ]
    },
    "author": {
        "contestId": 327,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1372941000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll MOD = 1000000007;\n\nll pot(ll a,ll b){\n    if (b==0) return 1;\n    ll x = pot(a,b/2);\n    x = (x*x)%MOD;\n    if (b%2) x = (x*a)%MOD;\n    return x;\n}\n\n//podemos eliminar todos los valores despues de i -> nuevo sz\n//opcionalmente podemos dejar todos los valores antes -> si o no\n//2^(digitos maximos)\n//count += pot(2, i);\n//en caso de k, hacemos i*k + 1, porque es el num de veces\n//for (auto j=1; j<k; j++) count += pot(2, i*k + 1);\n\nint main(){\n    string a; cin >> a;\n    ll k; cin >> k;\n\n    ll a1, r, sn, res = 0;\n    for (auto i=0; i<a.size(); i++){\n        char c = a[i];\n        if (c == '0' or c == '5'){\n            a1 = pot(2,i);\n            if (k > 1) {\n                r = pot(2,i+1); // (i*k + 1) - i = a2 - a1\n                sn = a1 * ((1-pot(r,k))/(1-r));\n                res += sn;\n            }\n            else res += a1;\n        };\n    }\n\n    cout << res;\n    return 0;\n}\n\n\t\t \t \t\t \t \t\t \t\t    \t\t \t  \t   \t"
}