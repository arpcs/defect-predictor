{
    "id": 102119933,
    "contestId": 1446,
    "creationTimeSeconds": 1608729387,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1446,
        "index": "B",
        "name": "Catching Cheaters",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1800,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1446,
        "members": [
            {
                "handle": "user32"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1605450900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 108,
    "timeConsumedMillis": 467,
    "memoryConsumedBytes": 100249600,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define repi(i, a, n) for (int i = a; i < (int)(n); ++i)\n#define rep(i, n) repi(i, 0, n)\n#define all(v) begin(v), end(v)\n\nusing ll = long long;\n\nconst int kMaxN = 5000;\n\nint N, M;\nstring A, B;\nint dp[kMaxN + 1][kMaxN + 1];\n\nint Dp(int i, int j) {\n  if (i < 0 || j < 0) {\n    return 0;\n  }\n\n  int& r = dp[i][j];\n  if (r != -1) {\n    return r;\n  }\n\n  r = 0;\n  if (A[i] == B[j]) {\n    r = max(r, Dp(i - 1, j - 1) + 2);\n  }\n  r = max(r, Dp(i - 1, j) - 1);\n  r = max(r, Dp(i, j - 1) - 1);\n\n  return r;\n}\n\nint main() {\n  // freopen(\"1.txt\", \"rb\", stdin);\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n\n  cin >> N >> M >> A >> B;\n  memset(dp, -1, sizeof(dp));\n\n  int result = 0;\n  rep(i, N) {\n    rep(j, M) {\n      result = max(result, Dp(i, j));\n    }\n  }\n\n  cout << result << '\\n';\n\n  return 0;\n}\n"
}