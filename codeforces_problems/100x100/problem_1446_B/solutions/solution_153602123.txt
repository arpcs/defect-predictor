{
    "id": 153602123,
    "contestId": 1446,
    "creationTimeSeconds": 1649904550,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1446,
        "index": "B",
        "name": "Catching Cheaters",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1800,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1446,
        "members": [
            {
                "handle": "tgp07"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1605450900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 108,
    "timeConsumedMillis": 373,
    "memoryConsumedBytes": 204902400,
    "source": "//#include <bits/stdc++.h>\n#include <iostream>\n#include <fstream>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <math.h>\n#include <set>\n#include <map>\n#include <string>\n#include <tuple>\n#include <numeric>\n#include <climits>\n//#include <ext/pb_ds/assoc_container.hpp>\n\n//using namespace __gnu_pbds;\n\nusing namespace std;\n\n//change the long long to int if you need to save memory/time really badly\ntypedef long long ll;\n\n//Comment this define when working on interactive problems\n#define endl \"\\n\"\n\nconst ll MAXN = 6e5 + 10;\nconst ll ZER = 0;\nconst ll ONE = 1;\nconst ll INF = LLONG_MAX;\nconst ll NINF = LLONG_MIN;\nconst ll MOD = 998244353;\n\nll min(ll a, ll b) {\n    if (a < b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nll max(ll a, ll b) {\n    if (a > b) {\n        return a;\n    } else {\n        return b;\n    }\n}\n\nll __gcd(ll a, ll b) {\n    if (b == 0) {\n        return a;\n    }\n    \n    if (a == 0) {\n        return b;\n    }\n    \n    if (a < b) {\n        swap(a, b);\n    }\n    \n    return __gcd(b, a % b);\n}\n\nll lcm(ll a, ll b) {\n    ll prod = a*b;\n    return (prod/__gcd(a, b));\n}\n \nll ceil(ll a, ll b) {\n    if (a == ZER) return a;\n    return (a - ONE)/b + ONE;\n}\n \nll fact[MAXN];\nvoid precompute()\n{\n    fact[0] = 1;\n    for (ll i = 1; i < MAXN; i++) {\n        fact[i] = (i * fact[i - 1]) % MOD;\n    }\n}\n\nll powmod(ll a, ll b){\n    a %= MOD;\n    if (a == 0) return 0;\n    ll product = 1;\n    while(b > 0){\n        if (b&1){    // you can also use b % 2 == 1\n            product *= a;\n            product %= MOD;\n            --b;\n        }\n        a *= a;\n        a %= MOD;\n        b /= 2;    // you can also use b >> 1\n    }\n    return product;\n}\n\n\n//calculates the inverse of a number mod MOD\nll inv(ll a) {\n    return powmod(a, MOD - 2);\n}\n \nll nCk(ll n, ll k) {\n    return ((fact[n] * inv(fact[k]) % MOD) * inv(fact[n-k])) % MOD;\n}\n\n\nbool comp(ll a1, ll a2) {\n    return a1 > a2;\n}\n\nvoid solve()\n{\n    ll n, m;\n    cin >> n >> m;\n    \n    string a, b;\n    cin >> a >> b;\n    \n    ll dp[n+1][m+1];\n    for (ll i = 0; i <= n; i++) {\n        dp[i][0] = 0;\n    }\n    for (ll i = 0; i <= m; i++) {\n        dp[0][i] = 0;\n    }\n    \n    for (ll i = 1; i <= n; i++) {\n        for (ll j = 1; j <= m; j++) {\n            dp[i][j] = max(0, max(dp[i - 1][j] - 1, dp[i][j - 1] - 1));\n            if (a[i - 1] == b[j - 1]) {\n                dp[i][j] = max(dp[i][j], dp[i - 1][j - 1] + 2);\n            }\n        }\n    }\n    \n    ll ans = NINF;\n    \n    for (ll i = 0; i <= n; i++) {\n        for (ll j = 0; j <= m; j++) {\n            ans = max(ans, dp[i][j]);\n        }\n    }\n    \n    cout << ans << endl;\n    return;\n}\n\nint main()\n{\n    //Fast IO\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    \n    ll t;\n    //cin >> t;\n    t = 1;\n                \n    while (t--) {\n        solve();\n    }\n\n}\n\n"
}