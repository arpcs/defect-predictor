{
    "id": 99698420,
    "contestId": 1446,
    "creationTimeSeconds": 1606466662,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1446,
        "index": "B",
        "name": "Catching Cheaters",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1800,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1446,
        "members": [
            {
                "handle": "indubitable"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1605450900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 108,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 200089600,
    "source": "  /*\n\n     #\n    # #    #    #   ####   #    #  #    #\n   #   #   ##   #  #       #    #  #    #\n  #     #  # #  #   ####   ######  #    #\n  #######  #  # #       #  #    #  #    #\n  #     #  #   ##  #    #  #    #  #    #\n  #     #  #    #   ####   #    #   ####\n\n  */\n    #include<bits/stdc++.h>\n    #include <ext/pb_ds/assoc_container.hpp> \n    #include <ext/pb_ds/tree_policy.hpp> \n    #define int long long int \n    #define hell 1000000007\n    // #define bs 1000000000000000007 \n    #define F first\n    #define re 10000007\n    #define S second\n    #define pb push_back\n    #define all(a)  (a).begin(),(a).end()\n    #define rep(i,a,b) for(int i = a;i<b;i++)\n    #define pi 3.1415926536\n    #define Mod 998244353\n    #define endl '\\n'\n    #define TIME  cerr << \"\\nTime elapsed: \" << setprecision(5) <<1000.0 * clock() / CLOCKS_PER_SEC << \"ms\\n\";\n    #define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> \n    using namespace std;\n    using namespace __gnu_pbds; \n    int modularExponentiation(int x, int y, int m) \n    { \n        if (y == 0) \n            return 1; \n        int p = modularExponentiation(x, y/2, m) % m; \n        p = (p * p) % m; \n      \n        return (y%2 == 0)? p : (x * p) % m; \n    } \n      int binaryExponentiation(int x,int n)\n      {\n          if(n==0)\n              return 1;\n          else if(n%2 == 0)        //n is even\n              return binaryExponentiation(x*x,n/2);\n          else                             //n is odd\n              return x*binaryExponentiation(x*x,(n-1)/2);\n      }\n      set<string> s;\n      void genrate(string n,int len,int max)\n      {   \n          cout<<n<<\" \";\n          if(len == max){\n            s.insert(n);\n            return ;\n          }\n          s.insert(n);\n          genrate(n+'4',len+1,max);\n          genrate(n+'7',len+1,max);\n      }\n  int my_upper(vector<int> & v, int X){\n      if(v.size() == 0)\n        return -1;\n       int lo = 0, hi = v.size()-1;\n      while(hi-lo > 1){\n        int mi = (lo+hi)/2;\n        if(v[mi] < X){\n          lo = mi+1;\n        }\n        else\n          hi = mi;\n      }\n      int ans = -1;\n      for(int i = hi;i>=lo;i--){\n        if(v[i] > X){\n          ans = i;\n        }\n      }\n      if(ans != -1 && v[ans] > X){\n        return ans;\n      } \n      else\n        return -1;\n  }\n  int my_lower(vector<pair<int,int> > &v, int X){\n      int lo = 0, hi = v.size()-1;\n      if(v.size() == 0)\n        return -1;\n      while(hi-lo > 1){\n        int mi = (lo+hi)/2;\n        if(v[mi].F <= X){\n          lo = mi;\n        }\n        else  \n          hi = mi-1;\n      }\n      int ans = -1;\n      for(int i = lo;i<=hi;i++){\n        if(v[i].F <= X){\n          ans = i;\n        }\n      }\n      if(ans != -1 && v[ans].F <= X){\n        return ans;\n      } \n      else\n        return -1;\n}\nint32_t main()\n  {   \n    ios_base::sync_with_stdio(false); \n    cin.tie(nullptr);\n    cout.tie(nullptr);            \n    std::setprecision(20);          \n    int tests=1;  \n    //freopen(\"input.txt\", \"r\", stdin);\n    // cin>>tests;\n    // cout<<tests<<endl;\n    int tc = 0;\n    while(tests--)   \n    {\n      int n,m;\n      cin>>n>>m;\n      string s,t;\n      cin>>s;\n      cin>>t;\n      s = '.' + s;\n      t = '.' + t;\n      int dp[n+1][m+1];\n      memset(dp, 0, sizeof(dp));\n      dp[0][0] = 0;\n      for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n          dp[i][j] = 0;\n          dp[i][j] = max(dp[i][j], max(dp[i][j-1], dp[i-1][j])-1);\n          if(s[i] == t[j])\n            dp[i][j] = max(dp[i][j], dp[i-1][j-1] + 2); \n        }\n      }\n      int ans =  0;\n      for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++)\n          ans = max(ans, dp[i][j]);\n      }\n      cout<<ans<<endl;\n    }\n  \n}\n"
}