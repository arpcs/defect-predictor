{
    "id": 115518088,
    "contestId": 1446,
    "creationTimeSeconds": 1620394224,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1446,
        "index": "B",
        "name": "Catching Cheaters",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1800,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1446,
        "members": [
            {
                "handle": "lhp1202358"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1605450900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 108,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 104345600,
    "source": "#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <iostream>\n#include <vector>\n#include <map>\n#include <queue>\n#include <set>\n#include <cmath>\n#include <queue>\n#include <unordered_map>\n#include <unordered_set>\n#include <sstream>\n#include <iomanip>\nusing namespace std;\n\nusing VI = vector <int>;\nusing VVI = vector <VI>;\nusing VVVI = vector <VVI>;\nusing VLL = vector <long long>;\nusing VVLL = vector <VLL>;\nusing UMI = unordered_map<int, int>;\nusing UMLL = unordered_map<long long, long long>;\n\n\nint main() {\n    int N;\n    int M;\n    cin >> N >> M;\n    string S1;\n    string S2;\n    cin >> S1 >> S2;\n\n    VVI dp(N+1, VI(M+1, -2));\n\n    for (int i = 0; i < N; ++i) {\n        for (int j = 0; j < M; ++j) {\n            if (S1[i] == S2[j]) {\n                dp[i][j] += 4;\n            }\n        }\n    }\n\n    int ans = 0;\n    for (int i = 0; i < N; ++i) {\n        for (int j = 0; j < M; ++j) {\n            ans = max(ans, dp[i][j]);\n            if (i+1 < N && j+1 < M) {\n                int plus = S1[i+1] == S2[j+1] ? 2 : -2;\n                dp[i+1][j+1] = max(dp[i+1][j+1], dp[i][j]+plus);\n            }\n\n            dp[i+1][j] = max(dp[i+1][j], dp[i][j]-1);\n            dp[i][j+1] = max(dp[i][j+1], dp[i][j]-1);\n        }\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}"
}