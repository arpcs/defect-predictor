{
    "id": 232169892,
    "contestId": 1881,
    "creationTimeSeconds": 1699583665,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1881,
        "index": "D",
        "name": "Divide and Equalize",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1881,
        "members": [
            {
                "handle": "luogu_bot4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1697121300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 5529600,
    "source": "// LUOGU_RID: 134258683\n#include<iostream>\r\n#include<algorithm>\r\n#include<cstring>\r\n#include<map>\r\n#define LL long long\r\nusing namespace std;\r\nconst int MaxN = 1e4+3;\r\nconst int MaxVal = 1e6+3;\r\nint T,N;\r\nint a[MaxN],pri[MaxVal];\r\nbool vis[MaxVal];\r\nmap<int,int> cnt;\r\nvoid GetPrime(){\r\n\tfor(int i=2;i<=MaxVal;i++){\r\n\t\tif(!vis[i]) pri[++pri[0]] = i;\r\n\t\tfor(int j=2;j<=i&&i*j<=MaxVal;j++){\r\n\t\t\tvis[i*j] = true;\r\n\t\t\tif(!vis[j]) break;\r\n\t\t}\r\n\t}\r\n}\r\ninline void calc(int val){\r\n\tfor(int i=2;i*i<=val;i++){\r\n\t\twhile(val%i==0){\r\n\t\t\tval /= i;\r\n\t\t\tcnt[i]++;\r\n\t\t}\r\n\t}\r\n\tif(val>1) cnt[val]++;\r\n}\r\nsigned main(){\r\n\tios::sync_with_stdio(false),cin.tie(0),cout.tie(0);\r\n//\tGetPrime();\r\n\tcin>>T;\r\n\twhile(T--){\r\n\t\tint ma = 0;\r\n\t\tbool can=1;\r\n\t\tcin>>N;\r\n\t\tfor(int i=1;i<=N;i++) cin>>a[i], calc(a[i]), ma=max(ma,a[i]);\r\n\t\tfor(auto it:cnt){\r\n\t\t\tif(it.second%N!=0) can=0;\r\n\t\t\tif(!can) break;\r\n\t\t}\r\n\t\tif(!can) cout<<\"NO\\n\";\r\n\t\telse cout<<\"YES\\n\";\r\n\t\tcnt.clear();\r\n\t}\r\n\treturn 0;\r\n}"
}