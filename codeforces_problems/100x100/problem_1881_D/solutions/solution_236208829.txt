{
    "id": 236208829,
    "contestId": 1881,
    "creationTimeSeconds": 1701956627,
    "relativeTimeSeconds": 2507,
    "problem": {
        "contestId": 1881,
        "index": "D",
        "name": "Divide and Equalize",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1881,
        "members": [
            {
                "handle": "tgupta1729"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1701954120
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 8806400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int MOD = 1e9+7;\r\n#define int long long int\r\n#define onedi(a,s,n) for(int e=s;e<n;++e) cin>>a[e];\r\n#define endl '\\n'\r\n\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x) cerr << #x <<\" \"; _print(x); cerr << endl;\r\n#else\r\n#define debug(x)\r\n#endif\r\n\r\nvoid _print(int t) {cerr << t;}\r\nvoid _print(string t) {cerr << t;}\r\nvoid _print(char t) {cerr << t;}\r\nvoid _print(long double t) {cerr << t;}\r\nvoid _print(double t) {cerr << t;}\r\nvoid _print(unsigned int t) {cerr << t;}\r\n\r\ntemplate <class T, class V> void _print(pair <T, V> p);\r\ntemplate <class T> void _print(vector <T> v);\r\ntemplate <class T> void _print(set <T> v);\r\ntemplate <class T, class V> void _print(map <T, V> v);\r\ntemplate <class T> void _print(multiset <T> v);\r\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.first); cerr << \",\"; _print(p.second); cerr << \"}\";}\r\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\n\r\nconst int N = 1e6 + 10;\r\nvector<int> spf(N,1);\r\n\r\nvoid sieves(){\r\n    for(int i = 2;i<N;i++){\r\n        if(spf[i] == 1){\r\n            spf[i] = i;\r\n            for(int j = i*i;j<N;j+=i){\r\n                spf[j] = i;\r\n            }\r\n        }\r\n    }\r\n}\r\nvoid solve(){\r\n    int n;\r\n    cin>>n;\r\n    vector <int> arr(n);\r\n    onedi(arr,0,n);\r\n    map<int,int> m;\r\n    for(int i = 0;i<n;i++){\r\n        int temp = arr[i];\r\n        while(temp>1){\r\n            int fact = spf[temp];\r\n            while(temp%fact==0){\r\n                m[fact]++;\r\n                temp/=fact;\r\n            }\r\n        }\r\n    }\r\n    for(auto value: m){\r\n        if(value.first != 1){\r\n            if(value.second%n!=0){\r\n                cout<<\"NO\"<<endl;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    cout<<\"YES\"<<endl;\r\n}\r\n\r\nsigned main(){\r\n    ios::sync_with_stdio(false);\r\n        cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n    int t; cin>>t;\r\n    sieves();\r\n    while(t--){\r\n        solve();\r\n    }\r\n}"
}