{
    "id": 229638931,
    "contestId": 1881,
    "creationTimeSeconds": 1698205513,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1881,
        "index": "D",
        "name": "Divide and Equalize",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1881,
        "members": [
            {
                "handle": "phsads"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1697121300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "var antiPrime = Array(1000001), pFFL = 0\r\nvar wowILOVEJS = -1;while(wowILOVEJS++<1000000) antiPrime[wowILOVEJS] = 0\r\nvar primes = {}, pFF=[]\r\nfunction copyObj(x) {\r\n    var y={}, k\r\n    for (k in x) y[k] = x[k]\r\n    return y\r\n}\r\nfunction sieve() {\r\n    var i = 2\r\n    while (i*i<1000001) {\r\n        if (antiPrime[i]) {i++;continue}\r\n        var j = 2*i\r\n        while (j<1000001) {\r\n            antiPrime[j] = 1\r\n            j += i\r\n        }\r\n        i++\r\n    }\r\n}\r\nfunction preCalc() {\r\n    sieve()\r\n    antiPrime[1] = 1\r\n    var i = 1\r\n    while (i++<1000000) {\r\n        if (antiPrime[i]) continue\r\n        primes[i] = true\r\n        pFF.push(i)\r\n    }\r\n    pFFL = pFF.length\r\n}\r\nfunction primeFactor(x) {\r\n  var factors = {}, nextPow10 = 10, primeNo, i = -1\r\n  while (++i<pFFL) {\r\n      primeNo = pFF[i]\r\n      if (primeNo >= nextPow10) {\r\n          nextPow10 *= 10\r\n          if (primes[x]) {\r\n              factors[x] = 1\r\n              break\r\n          }\r\n      }\r\n    while (x % primeNo == 0) {\r\n      if (factors[primeNo] == undefined) factors[primeNo] = 0\r\n      factors[primeNo]++\r\n      x /= primeNo\r\n    }\r\n    if (x == 1) break\r\n  }\r\n  return factors\r\n}\r\nfunction solve() {\r\n    preCalc()\r\n    var T = readline()*1\r\n    while (T--) {\r\n        var n = readline()*1, A = readline().split(\" \").map(a=>a*1), j = -1, fail = 0\r\n        var theFactors = {}\r\n        while (++j < n) {\r\n            var b = primeFactor(A[j]), i\r\n            for (i in b) {\r\n                if (n[i] == undefined) n[i] = b[i]\r\n                    else n[i] += b[i]\r\n                }\r\n        }\r\n        for (j in theFactors) {\r\n            fail = theFactors[j]%n\r\n            if (fail) break\r\n        }\r\n        print(fail?\"NO\":\"YES\")\r\n    }\r\n}\r\nsolve()"
}