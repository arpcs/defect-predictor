{
    "id": 228882066,
    "contestId": 1881,
    "creationTimeSeconds": 1697782609,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1881,
        "index": "D",
        "name": "Divide and Equalize",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1881,
        "members": [
            {
                "handle": "vesilen561"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1697121300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 8601600,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\n#define rep(i, x, n) for (ll i = x; i < n; i++)\r\n#define show(C)           \\\r\n    for (auto J : C)      \\\r\n        cout << J << \" \"; \\\r\n    cout << endl;\r\n#define vll vector<long long>\r\n#define pll pair<ll, ll>\r\n#define pb push_back\r\n#define mp make_pair\r\n#define PYES cout << \"YES\\n\"\r\n#define PNO cout << \"NO\\n\"\r\n#define PYes cout << \"Yes\\n\"\r\n#define PNo cout << \"No\\n\"\r\n#define rev(v) reverse(v.begin(), v.end())\r\n#define srt(v) sort(v.begin(), v.end())\r\n#define grtsrt(v) sort(v.rbegin(), v.rend())\r\n#define mnv(v) *min_element(v.begin(), v.end())\r\n#define mxv(v) *max_element(v.begin(), v.end())\r\n#define all(v) v.begin(), v.end()\r\n#define ACC(v) accumulate(v.begin(), v.end(), 0ll)\r\n#define enl '\\n'\r\nusing namespace std;\r\n\r\n//==========================================================================================================\r\nvll spf(1e6 + 5);\r\n\r\nvoid kshitijKaSoln()\r\n{\r\n    ll n;\r\n    cin >> n;\r\n    vll v(n);\r\n    rep(i, 0, n) cin >> v[i];\r\n    map<ll,ll> m;\r\n    for (auto i : v)\r\n    {\r\n        ll x = i;\r\n\r\n        while (x != 1)\r\n        {\r\n            m[spf[x]]++;\r\n            x /= spf[x];\r\n        }\r\n    }\r\n    for (auto i : m)\r\n    {\r\n        if (i.second % n)\r\n        {\r\n            PNO;\r\n            return;\r\n        }\r\n    }\r\n    PYES;\r\n}\r\n\r\nint main()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    ll T = 1;\r\n    cin >> T;\r\n\r\n    spf[1] = 1;\r\n    for (int i = 2; i < spf.size(); i++)\r\n\r\n        // marking smallest prime factor for every\r\n        // number to be itself.\r\n        spf[i] = i;\r\n\r\n    // separately marking spf for every even\r\n    // number as 2\r\n    for (int i = 4; i < spf.size(); i += 2)\r\n        spf[i] = 2;\r\n\r\n    for (int i = 3; i * i < spf.size(); i++)\r\n    {\r\n        // checking if i is prime\r\n        if (spf[i] == i)\r\n        {\r\n            // marking SPF for all numbers divisible by i\r\n            for (int j = i * i; j < spf.size(); j += i)\r\n\r\n                // marking spf[j] if it is not\r\n                // previously marked\r\n                if (spf[j] == j)\r\n                    spf[j] = i;\r\n        }\r\n    }\r\n\r\n    for (ll i = 1; i <= T; i++)\r\n    {\r\n        //  cout<<\"Case #\"<<i<<\": \";\r\n        kshitijKaSoln();\r\n    }\r\n    return 0;\r\n}"
}