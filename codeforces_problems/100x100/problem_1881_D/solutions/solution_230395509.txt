{
    "id": 230395509,
    "contestId": 1881,
    "creationTimeSeconds": 1698597157,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1881,
        "index": "D",
        "name": "Divide and Equalize",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1881,
        "members": [
            {
                "handle": "lanty_bakecake"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1697121300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 614400,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    long long int t;\r\n    long long int i, j, k;\r\n    scanf(\"%lld\", &t);\r\n    long long int n;\r\n    for(i = 0;i < t;i++)\r\n    {\r\n        scanf(\"%lld\", &n);\r\n        long long int A[n];\r\n        for(j = 0;j < n;j++)\r\n        {\r\n            scanf(\"%lld\", &A[j]);\r\n        }\r\n        map<long long int, long long int> m;\r\n        for(j = 0;j < n;j++)\r\n        {\r\n            for(k = 2;k * k <= A[j];k++)\r\n            {\r\n                while(A[j] % k == 0)\r\n                {\r\n                    if(m.find(k) == m.end())\r\n                    m.insert({k, 1});\r\n                    else\r\n                    m[k]++;\r\n                    A[j] = A[j] / k;\r\n                }\r\n            }\r\n            if(A[j] > 1)\r\n            {\r\n                if(m.find(A[j]) == m.end())\r\n                m.insert({A[j], 1});\r\n                else\r\n                m[A[j]]++;\r\n            }\r\n        }\r\n        while(!m.empty())\r\n        {\r\n            if(m.begin()->second % n == 0)\r\n            m.erase(m.begin());\r\n            else\r\n            break;\r\n        }\r\n        if(m.empty())\r\n        printf(\"YES\\n\");\r\n        else\r\n        printf(\"NO\\n\");\r\n    }\r\n}"
}