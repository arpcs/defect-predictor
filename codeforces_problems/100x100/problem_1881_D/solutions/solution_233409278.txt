{
    "id": 233409278,
    "contestId": 1881,
    "creationTimeSeconds": 1700390992,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1881,
        "index": "D",
        "name": "Divide and Equalize",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1881,
        "members": [
            {
                "handle": "anto777"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1697121300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 373,
    "memoryConsumedBytes": 80793600,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n#define all(x) x.begin(),x.end()\r\n#define rall(x) x.rbegin(),x.rend()\r\n#define int int64_t\r\n#define bset bitset<3000>\r\n#define node pair<int, int>\r\n#define find_kth_element find_by_order\r\n#define number_of_elements_strictly_smaller_than order_of_key\r\n#define ordered_set tree<node, null_type, less<node>, rb_tree_tag, tree_order_statistics_node_update>\r\n\r\nint inf = 1e18, M = 1e9 + 7;\r\n\r\n// smallest prime factor and factorize\r\nvector<int> ds(10000005);\r\nvoid spf() {\r\n    for(int i = 0; i < ds.size(); i++) {\r\n        ds[i] = i;\r\n    }\r\n    for(int i = 2; i < ds.size(); i++) {\r\n        if(i == ds[i]) {\r\n            for(int j = i * i; j < ds.size(); j += i) {\r\n                ds[j] = ::min(ds[j], i);\r\n            }\r\n        }\r\n    }\r\n}\r\nvector<int> factorize(int n) {\r\n    vector<int> p_divs;\r\n    while(n > 1) {\r\n        p_divs.push_back(ds[n]);\r\n        n /= ds[n];\r\n    }\r\n    return p_divs;\r\n}\r\n\r\nvoid solve() {\r\n    spf();\r\n    \r\n    int t; cin >> t;\r\n    for(int j = 0; j < t; j++) {\r\n        int n; cin >> n;\r\n        map<int, int> f;\r\n        for(int i = 0; i < n; i++) {\r\n            int x; cin >> x;\r\n            \r\n            vector<int> v = factorize(x);\r\n            \r\n            for(int m : v) {\r\n                if(m == 1) continue;\r\n                f[m]++;\r\n            }\r\n        }\r\n        \r\n        int ok = 1;\r\n        for(pair<int, int> p : f) {\r\n            if(p.second % n != 0) {\r\n                cout << \"NO\\n\";\r\n                ok = 0;\r\n                break;\r\n            }\r\n        }\r\n        \r\n        if(ok) cout << \"YES\\n\";\r\n    }\r\n}\r\n\r\nint32_t main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0); cout.tie(0);\r\n\r\n    // freopen(\"cardgame.in\", \"r\", stdin);\r\n\t// freopen(\"cardgame.out\", \"w\", stdout);\r\n\r\n    int tm = 1;\r\n    // cin >> tm;\r\n    while(tm--) solve();\r\n    \r\n    return 0;\r\n}"
}