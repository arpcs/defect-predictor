{
    "id": 229390150,
    "contestId": 1881,
    "creationTimeSeconds": 1698049492,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1881,
        "index": "D",
        "name": "Divide and Equalize",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1881,
        "members": [
            {
                "handle": "jerry_123"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1697121300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 1024000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef pair<int,int> PII;\r\nconst int N = 1e4 + 7;\r\nconst int inf = 0x3f3f3f3f;\r\nconst int MOD = 998244353;\r\nint a[N];\r\nunordered_map<int,int> ans;\r\nset<int> s;\r\nvoid decompose(int n) {\r\n    for(int i = 2; i*i <= n; i++) {\r\n        while(n%i == 0) {\r\n            if(s.count(i) == 0) {\r\n                s.insert(i);\r\n                ans[i] = 1;\r\n            } else ans[i]++;\r\n            n /= i;\r\n        }\r\n    }\r\n    if(n > 1) {\r\n        if(s.count(n) == 0) {\r\n            s.insert(n);\r\n            ans[n] = 1;\r\n        } else ans[n]++;\r\n    }\r\n}\r\nvoid solved() {\r\n    s.clear();\r\n    bool flag = 1;\r\n    int n;\r\n    cin >> n; \r\n    for(int i = 1; i <= n; i ++) {\r\n        cin >> a[i];\r\n        decompose(a[i]);\r\n    }\r\n    for(auto i : s) {\r\n        //cout << i << endl;\r\n        if(ans[i]%n != 0) flag = 0;\r\n    }\r\n    if(flag) cout << \"YES\\n\";\r\n    else cout << \"NO\\n\";\r\n}\r\nint main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0),cout.tie(0);\r\n\tint t = 1;\r\n\tcin >> t;\r\n\twhile(t--) {\r\n\t\tsolved();\r\n\t}\r\n\treturn 0;\r\n}\r\n"
}