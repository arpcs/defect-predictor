{
    "id": 229517700,
    "contestId": 1881,
    "creationTimeSeconds": 1698129688,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1881,
        "index": "D",
        "name": "Divide and Equalize",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1881,
        "members": [
            {
                "handle": "Yukihira013"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1697121300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 512000,
    "source": "#include<bits/stdc++.h>\r\n#define vi vector<int>\r\n#define vb vector<bool>\r\n#define all(k) k.begin(),k.end()\r\n\r\nusing namespace std;\r\n\r\nvector<int> get_input(int);\r\nvoid solution();\r\n\r\n\r\n\r\nvoid solution()\r\n{\r\n    //Use sieve of Eratosthenes to find primes factors of max element\r\n    //find the count of divisors for each number\r\n    //add to the count of vector\r\n    //if the count is divisible by the num of elements, it can be done\r\n\r\n    int n;\r\n    cin>>n;\r\n    \r\n    vi v = get_input(n);\r\n    // int vmax = *max_element(all(v));\r\n    // vb vp(vmax+1,true);\r\n    // vp[0] = false;\r\n    // vp[1] = false;\r\n    map<int,int> mp;\r\n\r\n\r\n    // for (int i = 2; i < vp.size(); i++)\r\n    // {\r\n    //     if(vp[i] == true)\r\n    //     {\r\n    //         for (int j = i*i; j <= vmax ; j+=i)\r\n    //         {\r\n    //             vp[j] = false;\r\n    //         }\r\n            \r\n    //         mp[i] = 0;\r\n    //     }\r\n    // }\r\n    // vp.clear();\r\n    // for(auto& x:v)\r\n    // {\r\n    //     for(auto y: mp)\r\n    //     {\r\n    //         while (x%y.first == 0)\r\n    //         {\r\n    //             mp[y.first]+=1;\r\n    //             x = x/y.first;\r\n    //         }\r\n            \r\n            \r\n    //     }\r\n    // }\r\n\r\n    for(auto& x : v)\r\n    {\r\n        for(int i = 2; i <= sqrt(x); i++)\r\n        {\r\n            while (x%i==0)\r\n            {\r\n                mp[i]++;\r\n                x = x/i;\r\n            }   \r\n        }\r\n        if(x>1)\r\n            mp[x]++;    //might be a prime\r\n    }\r\n\r\n    // for(auto x: mp)\r\n    //     cout<<x.first<<\" \"<<x.second<<endl;\r\n    \r\n    for(auto x: mp)\r\n    {\r\n        if (x.second % n != 0)\r\n        {\r\n            cout<<\"NO\"<<endl;\r\n            return;\r\n        }\r\n    }\r\n\r\n    cout<<\"YES\"<<endl;\r\n    return;\r\n}\r\n\r\nvector<int> get_input(int n)\r\n{\r\n    vector<int> inputs;\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        int instval;\r\n        cin>>instval;\r\n        inputs.push_back(instval);\r\n    }   \r\n    return inputs;\r\n}\r\n\r\nint main()\r\n{\r\n    //read config\r\n    std::ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n\r\n    int testcases;\r\n    cin>>testcases;\r\n    \r\n    for (int i = 0; i < testcases; i++)\r\n        solution();\r\n    \r\n}"
}