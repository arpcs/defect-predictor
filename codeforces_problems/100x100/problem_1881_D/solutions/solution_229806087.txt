{
    "id": 229806087,
    "contestId": 1881,
    "creationTimeSeconds": 1698311878,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1881,
        "index": "D",
        "name": "Divide and Equalize",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1881,
        "members": [
            {
                "handle": "NeMo.Andrey"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1697121300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 512000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define endl '\\n'\r\n\r\nvoid add_divs(int x, map<int, int>&divs){\r\n    int i = 2;\r\n    while(i * i <= x){\r\n        while (x % i == 0){\r\n            divs[i]++;\r\n            x /= i;\r\n        }\r\n        i++;\r\n    }\r\n    if(x > 1) divs[x]++;\r\n}\r\n\r\nbool solve(){\r\n    int n;\r\n    cin >> n;\r\n    vector<int>a(n);\r\n    map<int, int> divs;\r\n    for(int i = 0; i < n; i++) {\r\n        cin >> a[i];\r\n        add_divs(a[i], divs);\r\n    }\r\n    for(auto e: divs){\r\n        if(e.second % n != 0)\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    int t;\r\n    cin >> t;\r\n    while (t--) {\r\n        if(solve()==true)\r\n            cout<<\"YES\"<<endl;\r\n        else\r\n            cout<<\"NO\"<<endl;\r\n    }\r\n    return 0;\r\n}\r\n\r\n"
}