{
    "id": 229030771,
    "contestId": 1881,
    "creationTimeSeconds": 1697876336,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1881,
        "index": "D",
        "name": "Divide and Equalize",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1881,
        "members": [
            {
                "handle": "err_hexa"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1697121300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 234,
    "memoryConsumedBytes": 614400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nvoid solve(){\r\n    long long int n; cin >> n;\r\n    long long int arr[n];\r\n    vector <long long int> power(78500, 0);\r\n    long long int max_i = 0;\r\n    long long int max_posn = 0;\r\n    for(long long int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n        max_i = max(max_i, arr[i]);\r\n        long long int position = 0;\r\n        for(long long int j = 2; j < max_i + 1; j++){\r\n            while(arr[i] % j == 0){\r\n                power[position]++;\r\n                arr[i] = arr[i] / j;\r\n            }\r\n            position++;\r\n            max_posn = max(max_posn, position);\r\n        } \r\n    }\r\n    bool ans = true;\r\n    for(long long int i = 0; i < max_posn + 1; i++){\r\n        if(power[i] % n != 0){\r\n            ans = false;\r\n            break;\r\n        }\r\n    }\r\n    if(ans){\r\n        cout << \"YES\" <<endl;\r\n    }else{\r\n        cout << \"NO\" <<endl;\r\n    }\r\n}\r\n\r\nint main(){\r\n    long long int t; cin >> t;\r\n    while(t--){\r\n        solve();\r\n    }\r\n}"
}