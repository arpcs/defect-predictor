{
    "id": 166781847,
    "contestId": 1612,
    "creationTimeSeconds": 1659515483,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1612,
        "index": "F",
        "name": "Armor and Weapons",
        "type": "PROGRAMMING",
        "rating": 2800,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1612,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1637573700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 110,
    "timeConsumedMillis": 420,
    "memoryConsumedBytes": 85196800,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n#define ar array<int, 2>\n#define int long long\n#define task \"armor_weapons\"\nconst int MAX = 2e5 + 100, INFL = 1e9 + 7, INFLL = 1e18 + 7;\nset< int > A[MAX];\nint n, m, q, x[MAX], y[MAX], dp[MAX][44];\nvoid maxX(int &x, int y)\n{\n    if (x < y) x = y;\n}\nint32_t main()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    //freopen(task\".INP\",\"r\",stdin);\n    //freopen(task\".OUT\",\"w\",stdout);\n    cin >> n >> m;\n    cin >> q;\n    for (int i = 1; i <= q; i++)\n    {\n        cin >> x[i] >> y[i];\n    }\n    if (n > m)\n    {\n        swap(n, m);\n        for (int i = 1; i <= q; i++)\n            swap(x[i], y[i]);\n    }\n    for (int i = 1; i <= q; i++)\n        A[x[i]].insert(y[i]);\n    dp[1][0] = 1;\n    for (int k = 0; k <= 40; k++)\n    {\n        for (int i = 1; i <= n; i++)\n        {\n            if (dp[i][k] == 0) continue;\n            //cout << i << \" \" << dp[i][k] << '\\n' ;\n            maxX(dp[min(n, i + dp[i][k] + A[i].count(dp[i][k]))][k + 1], dp[i][k]);\n            maxX(dp[i][k + 1], i + dp[i][k] + A[i].count(dp[i][k]));\n        }\n    }\n    int ans = 0;\n    for (int k = 1; k <= 40; k++)\n    {\n        //cout << dp[n][k] << \" \" << k << '\\n' ;\n        if (dp[n][k] >= m && ans == 0)\n        {\n            ans = k;\n            //break;\n        }\n    }\n    if (ans == 0)\n    {\n        ans = 40;\n        int temp = dp[n][40];\n        while (temp < m)\n        {\n            temp = temp + n + A[n].count(temp);\n            ans++;\n        }\n    }\n    cout << ans;\n}\n\n\t     \t\t   \t\t   \t\t     \t\t\t \t"
}