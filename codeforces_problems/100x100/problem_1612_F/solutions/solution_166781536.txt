{
    "id": 166781536,
    "contestId": 1612,
    "creationTimeSeconds": 1659515301,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1612,
        "index": "F",
        "name": "Armor and Weapons",
        "type": "PROGRAMMING",
        "rating": 2800,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1612,
        "members": [
            {
                "handle": "bkifhr7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1637573700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 110,
    "timeConsumedMillis": 608,
    "memoryConsumedBytes": 105164800,
    "source": "#include <bits/stdc++.h>\n#define fi first\n#define se second\n#define all(r) (r).begin(), (r).end()\n#define MASK(i) (1 << (i))\n#define BIT(x, i) ((x) >> (i) & 1)\n#define ll long long\n#define pb push_back\n#define TASK \"task\"\n\nusing namespace std;\n\ntemplate <typename T1, typename T2> bool minimize(T1 &a, T2 b){ if (a > b) {a = b; return true;} return false;}\ntemplate <typename T1, typename T2> bool maximize(T1 &a, T2 b){if (a < b) {a = b; return true;} return false;}\n\nconst int oo = 1e9 + 7;\nconst ll loo = (ll)1e18 + 7;\nconst int LOG = 18;\nconst int BASE = 323;\nconst int N = 2e5 + 7;\n\nll n, m, q, f[N][33];\nmap<pair<ll, ll>, bool> M;\nint main(){\n\tios_base::sync_with_stdio(0); cin.tie(0);\n\t// freopen(TASK\".inp\", \"r\", stdin);\n\t// freopen(TASK\".out\", \"w\", stdout);\n\tcin >> n >> m >> q;\n\tbool flag = (n > m);\n\tif (flag) swap(n, m);\n\tfor (int i = 1; i <= q; i++){\n\t\tint a, b; cin >> a >> b;\n\t\tif (flag) swap(a, b);\n\t\tM[{a, b}] = 1;\n\t}\n\tf[1][0] = 1;\n\tfor (int k = 0; k < 31; k++){\n\t\tfor (int i = 1; i <= n; i++) if (f[i][k] != 0) {\n\t\t\tint j = f[i][k];\n\t\t\tmaximize(f[min(n, 1LL * i + j + M[{i, j}])][k + 1], j);\n\t\t\tmaximize(f[i][k + 1], min(m, 1LL * i + j + M[{i, j}]));\n\t\t}\n\t}\n\tll res = loo;\n\tfor (int i = 0; i <= 31; i++) if (f[n][i] != 0) {\n\t\tint step = i;\n\t\tll cur = f[n][i];\n\t\twhile (cur < m){\n\t\t\tif (M[{n, cur}]) cur = cur + n + 1;\n\t\t\telse cur = cur + n;\n\t\t\tstep++;\n\t\t}\n\t\tminimize(res, step);\n\t}\n\tcout << res;\n\treturn 0;\n}\n  \t \t\t \t \t\t\t   \t \t\t \t\t\t\t\t\t\t  \t\t"
}