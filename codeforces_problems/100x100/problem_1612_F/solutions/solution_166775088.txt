{
    "id": 166775088,
    "contestId": 1612,
    "creationTimeSeconds": 1659511318,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1612,
        "index": "F",
        "name": "Armor and Weapons",
        "type": "PROGRAMMING",
        "rating": 2800,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1612,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1637573700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 64000000,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n#define ar array<int, 2>\n#define int long long\n#define task \"partition_game\"\nconst int MAX = 35500, INFL = 1e9 + 7, INFLL = 1e18 + 7;\nint n, k, a[MAX], cost[MAX], pre[MAX], f[111][MAX], p[111][MAX];\nint Cost(int x, int y)\n{\n    for (int i = x; i <= y; i++)\n        pre[a[i]] = 0;\n    int sum = 0;\n    for (int i = x; i <= y; i++)\n    {\n        sum += (pre[a[i]] != 0);\n        pre[a[i]] = 1;\n    }\n    return sum;\n    //if (x > y) return 0;\n    //return cost[y] - cost[x - 1];\n}\nvoid Solve(int k, int l, int r, int ll, int rr)\n{\n    if (l > r) return;\n    int m = l + r >> 1;\n    f[k][m] = INFL;\n    for (int i = ll; i <= rr; i++)\n    {\n        int newcost = f[k - 1][i] + Cost(i + 1, m);\n        //cout << i + 1 << \" \" << m << \" \" << newcost << '\\n' ;\n        if (f[k][m] > newcost)\n        {\n            f[k][m] = newcost;\n            p[k][m] = newcost;\n        }\n    }\n    Solve(k, l, m - 1, ll, p[k][m]);\n    Solve(k, m + 1, r, p[k][m], rr);\n}\nint32_t main()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    //freopen(task\".INP\",\"r\",stdin);\n    //freopen(task\".OUT\",\"w\",stdout);\n    cin >> n >> k;\n    for (int i = 1; i <= n; i++)\n        cin >> a[i];\n    for (int i = 1; i <= n; i++)\n    {\n        cost[i] = cost[i - 1] + (pre[a[i]] != 0);\n        pre[a[i]] = i;\n    }\n    //for (int i = 1; i <= n; i++)\n        //cout << cost[i] << \" \" ;\n    for (int i = 1; i <= n; i++)\n        f[1][i] = Cost(1, i);\n    for (int i = 2; i <= k; i++)\n        Solve(i, 1, n, 1, n);\n    cout << f[k][n];\n}\n\n\t \t  \t\t\t \t\t\t \t \t \t \t\t \t\t\t\t  \t \t"
}