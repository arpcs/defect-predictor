{
    "id": 185394950,
    "contestId": 1612,
    "creationTimeSeconds": 1671139205,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1612,
        "index": "F",
        "name": "Armor and Weapons",
        "type": "PROGRAMMING",
        "rating": 2800,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1612,
        "members": [
            {
                "handle": "-_-newbie-_-"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1637573700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 810,
    "memoryConsumedBytes": 45772800,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\nconst int max_n = 1e5 + 10;\nmap<pair<int, int>, int>mp;\nint mxx[max_n], n, m, p, mxy[max_n];\nmap<pair<int, int>, int>d;\nvoid bfs() {\n    queue<pair<int, int>>q;\n    q.push({1, 1});\n    mxx[1] = 1;\n    mxy[1] = 1;\n    while (!q.empty()) {\n        auto [x, y] = q.front();\n        if (x == n && y == m)\n            return;\n        q.pop();\n        int x2 = x + y + mp[{x, y}], y2 = x2;\n        if (x2 > n)\n            x2 = n;\n        if (y2 > m)\n            y2 = m;\n        if (!d[{x, y2}] && (mxx[x] < y2 || mxy[y2] < x)) {\n            d[{x, y2}] = d[{x, y}] + 1; \n            q.push({x, y2});\n            mxx[x] = max(mxx[x], y2);\n            mxy[y2] = max(mxy[y2], x);\n        }\n        if (!d[{x2, y}] && (mxx[x2] < y || mxy[y] < x2)) {\n            q.push({x2, y});\n            d[{x2, y}] = d[{x, y}] + 1; \n            mxx[x2] = max(mxx[x2], y);\n            mxy[y] = max(mxy[y], x2);\n        }\n    }\n}\nint main() {\n    cin >> n >> m >> p;\n    for (int i = 0, x, y; i < p; i++) {\n        cin >> x >> y;\n        mp[{x, y}] = true;\n        mp[{y, x}] = true;\n    }\n    bfs();\n    cout << d[{n, m}];\n}"
}