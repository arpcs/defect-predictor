{
    "id": 166828038,
    "contestId": 1612,
    "creationTimeSeconds": 1659541943,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1612,
        "index": "F",
        "name": "Armor and Weapons",
        "type": "PROGRAMMING",
        "rating": 2800,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1612,
        "members": [
            {
                "handle": "Back05"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1637573700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 110,
    "timeConsumedMillis": 514,
    "memoryConsumedBytes": 56729600,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\n#define fi first\r\n#define se second\r\n#define endl '\\n'\r\n#define MASK(i) (1LL << (i))\r\n#define ull unsigned long long\r\n#define ld long double\r\n#define pb push_back\r\n#define all(x) (x).begin() , (x).end()\r\n#define BIT(x , i) ((x >> (i)) & 1)\r\n#define TASK \"task\"\r\n#define sz(s) (int) (s).size()\r\n \r\nusing namespace std;\r\nconst int mxN = 2e5 + 227;\r\nconst int inf = 1e9 + 277;\r\nconst int mod = 1e9 + 7;\r\nconst ll infll = 1e18 + 7;\r\nconst int base = 307;\r\nconst int LOG = 30;\r\n \r\ntemplate <typename T1, typename T2> bool minimize(T1 &a, T2 b) {\r\n\tif (a > b) {a = b; return true;} return false;\r\n}\r\ntemplate <typename T1, typename T2> bool maximize(T1 &a, T2 b) {\r\n\tif (a < b) {a = b; return true;} return false;\r\n}\r\n \r\nint n;\r\nint m;\r\nint q;\r\nint dp[mxN][LOG + 2];\r\nmap<int, bool> mp[mxN];\r\n \r\nvoid solve()\r\n{\r\n\tcin >> n >> m >> q;\r\n\tfor(int i = 1; i <= q; i++) {\r\n\t\tint u, v;\r\n\t\tcin >> u >> v;\r\n\t\tif(n > m) swap(u, v);\r\n\t\tmp[u][v] = true;\r\n\t}\r\n\r\n\tif(n > m) swap(n, m);\r\n\r\n\tmemset(dp, -0x3f, sizeof(dp));\r\n\tdp[1][0] = 1;\r\n\tfor(int k = 0; k <= LOG; k++) {\r\n\t\tfor(int i = 1; i <= n; i++) {\r\n\t\t\tif(dp[i][k] == dp[0][0]) continue;\r\n\t\t\tint j = dp[i][k];\r\n\t\t\tmaximize(dp[i][k + 1], min(m, i + j + mp[i][j]));\r\n\t\t\tmaximize(dp[min(n, i + j + mp[i][j])][k + 1], j);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tint res = inf;\r\n\tfor(int k = 0; k <= LOG; k++) {\r\n\t\tif(dp[n][k] == dp[0][0]) continue;\r\n\t\tint j = dp[n][k];\r\n\t\tint cnt = k;\r\n\t\twhile(j < m) {\r\n\t\t\tj = n + j + mp[n][j];\r\n\t\t\tcnt++;\r\n\t\t}\r\n\t\tminimize(res, cnt);\r\n\t}\r\n\tcout << res;\r\n}\r\n \r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n\r\n \r\n    int tc = 1;\r\n    //cin >> tc;\r\n    while(tc--) {\r\n    \tsolve();\r\n    }\r\n    return 0;\r\n}\r\n \t       \t  \t\t \t  \t  \t\t \t\t \t\t \t"
}