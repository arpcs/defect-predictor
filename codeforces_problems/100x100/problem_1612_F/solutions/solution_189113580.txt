{
    "id": 189113580,
    "contestId": 1612,
    "creationTimeSeconds": 1673620571,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1612,
        "index": "F",
        "name": "Armor and Weapons",
        "type": "PROGRAMMING",
        "rating": 2800,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1612,
        "members": [
            {
                "handle": "_ztyqwq"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1637573700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 110,
    "timeConsumedMillis": 1201,
    "memoryConsumedBytes": 88371200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\npair<int, int> a[200010];\r\nset< pair<int, int> > st;\r\nint dp[200010][100]; // line i, j moves\r\nint main()\r\n{\r\n\tint n, m, q;\r\n\tscanf(\"%d %d %d\", &n, &m, &q);\r\n\tfor(int i = 1; i <= q; i++)\r\n\t\tscanf(\"%d %d\", &a[i].first, &a[i].second);\r\n\tif(n > m)\r\n\t{\r\n\t\tswap(n, m);\r\n\t\tfor(int i = 1; i <= q; i++)\r\n\t\t\tswap(a[i].first, a[i].second);\r\n\t}\r\n\tfor(int i = 1; i <= q; i++)\r\n\t\tst.insert({a[i].first, a[i].second});\r\n\tmemset(dp, -0x3f, sizeof(dp));\r\n\tdp[1][0] = 1;\r\n\tint stp = 0;\r\n\tfor(int i = 0; ; i++)\r\n\t{\r\n\t\tfor(int j = n; j > 1; j--)\r\n\t\t\tif(dp[j][i] > dp[j - 1][i])\r\n\t\t\t\tdp[j - 1][i] = dp[j][i];\r\n\t\tbool flag = true;\r\n\t\tfor(int j = 1; j <= n; j++)\r\n\t\t\tif(dp[j][i] != dp[1][i])\r\n\t\t\t{\r\n\t\t\t\tflag = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\tif(flag)\r\n\t\t{\r\n\t\t\tstp = i;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tfor(int j = 1; j <= n; j++)\r\n\t\t{\r\n\t\t\tint t = j + dp[j][i];\r\n\t\t\tif(st.find({j, dp[j][i]}) != st.end())\r\n\t\t\t\tt++;\r\n\t\t\tdp[j][i + 1] = max(dp[j][i + 1], min(t, m));\r\n\t\t\tif(t > 0)\r\n\t\t\t{\r\n\t\t\t\tt = min(t, n);\r\n\t\t\t\tdp[t][i + 1] = max(dp[t][i + 1], dp[j][i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(dp[n][i + 1] >= m)\r\n\t\t{\r\n\t\t\tprintf(\"%d\\n\", i + 1);\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\tint u = dp[n][stp];\r\n\twhile(u < m)\r\n\t{\r\n\t\tif(st.find({n, u}) != st.end())\r\n\t\t\tu++;\r\n\t\tu += n, stp++;\r\n\t}\r\n\tprintf(\"%d\\n\", stp);\r\n\treturn 0;\r\n}\r\n"
}