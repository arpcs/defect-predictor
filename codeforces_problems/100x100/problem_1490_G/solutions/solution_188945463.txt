{
    "id": 188945463,
    "contestId": 1490,
    "creationTimeSeconds": 1673498346,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "RW2002"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 1201,
    "memoryConsumedBytes": 3993600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\nconst int N = 2e5 + 10;\r\nint a[N], len;\r\npair<ll, int> q[N]; // val, index\r\n\r\nvoid solve() {\r\n    int n, m;\r\n    cin >> n >> m;\r\n    ll sum = 0, last = 0;\r\n    len = 0;\r\n    for (int i = 0; i < n; ++i) {\r\n        cin >> a[i];\r\n        sum += a[i];\r\n        if (sum > last) {\r\n            last = sum;\r\n            q[len++] = {sum, i};\r\n        }\r\n    }\r\n    \r\n    auto get = [&](ll x) { // \u83b7\u5f97q[]\u4e2dx\u7684\u4e0b\u6807\r\n        int l = 0, r = len - 1;\r\n        while (l < r) {\r\n            int mid = l + r >> 1;\r\n            if (q[mid].first < x) l = mid + 1;\r\n            else r = mid;\r\n        }\r\n        return q[l].second;\r\n    };\r\n    \r\n    for (int i = 0; i < m; ++i) {\r\n        int x;\r\n        cin >> x;\r\n        if (len < 1) {\r\n            cout << -1 << \" \\n\"[i == m - 1];\r\n            continue;\r\n        }\r\n        ll maxv = q[len - 1].first;\r\n        if (maxv < x && sum < 1) {\r\n            cout << -1 << \" \\n\"[i == m - 1];\r\n            continue;\r\n        }\r\n        if (x <= maxv) cout << get(x) << \" \\n\"[i == m - 1];\r\n        else {\r\n            int c = max(0LL, x - maxv + sum - 1) / sum; // \u9700\u8981\u5faa\u73af\u7684sum\u6b21\u6570\r\n            cout << 1LL * c * n + get(x - c * sum) << \" \\n\"[i == m - 1];\r\n        }\r\n    }\r\n\r\n}\r\n\r\nint main() {\r\n    // freopen(\"in.txt\", \"r\", stdin);\r\n    // freopen(\"out.txt\", \"w\", stdout);\r\n    int T;\r\n    cin >> T;\r\n    while (T--) solve();\r\n    return 0;\r\n}\r\n"
}