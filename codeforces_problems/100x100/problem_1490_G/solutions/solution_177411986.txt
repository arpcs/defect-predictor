{
    "id": 177411986,
    "contestId": 1490,
    "creationTimeSeconds": 1666425880,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "weizhiyonghu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 1232,
    "memoryConsumedBytes": 15974400,
    "source": "#include<iostream>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int Max = 1e6 + 5;\r\nint Mod = 1e9 + 7;\r\nll lst[Max];\r\nll mm[Max];\r\n\r\nint main()\r\n{\r\n\tint t;cin >> t;\r\n\twhile (t--)\r\n\t{\r\n\t\tint n, m;cin >> n >> m;\r\n\t\tll ma = 0, sum = 0;\r\n\t\tfor (int i = 1;i <= n;i++)\r\n\t\t{\r\n\t\t\tcin >> lst[i];\r\n\t\t\tsum += lst[i];\r\n\t\t\tma = max(ma, sum);\r\n\t\t\tmm[i] = ma;\r\n\t\t}\r\n\t\tfor (int k = 1;k <= m;k++)\r\n\t\t{\r\n\t\t\tll a;cin >> a;\r\n\t\t\tif (a > ma && sum <= 0)cout << -1 << \" \";\r\n\t\t\telse if (a <= ma)\r\n\t\t\t{\r\n\t\t\t\tint ans = lower_bound(mm + 1, mm + 1 + n, a) - mm - 1;\r\n\t\t\t\tcout << ans << \" \";\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tll ans = -1;\r\n\t\t\t\tll k = max((ll)0,(a - ma + sum - 1) / sum);\r\n\t\t\t\tans += n * k;\r\n\t\t\t\ta -= k * sum;\r\n\t\t\t\tans += lower_bound(mm + 1, mm + 1 + n, a) - mm;\r\n\t\t\t\tcout << ans << \" \";\r\n\t\t\t}\r\n\t\t}\r\n\t\tcout << endl;\r\n\t}\r\n}\r\n"
}