{
    "id": 223215440,
    "contestId": 1490,
    "creationTimeSeconds": 1694609637,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "Armaan48"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 18329600,
    "source": "/*\r\nID: armaan48\r\nLANG: C++\r\n*/\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n#define mod 1000000007\r\n#define mod2 998244353\r\n#define endl '\\n'\r\n#define sz(x) (int)(x.size())\r\n#define all(x) x.begin(), x.end()\r\n#define print(x)              \\\r\n    {                         \\\r\n        for (auto v : x)      \\\r\n        {                     \\\r\n            cout << v << ' '; \\\r\n        }                     \\\r\n        cout << endl;         \\\r\n    }\r\n#define printp(x)                                      \\\r\n    {                                                  \\\r\n        for (auto v : x)                               \\\r\n        {                                              \\\r\n            cout << v.first << ':' << v.second << ' '; \\\r\n        }                                              \\\r\n        cout << endl;                                  \\\r\n    }\r\n#define printv(x)        \\\r\n    {                    \\\r\n        for (auto v : x) \\\r\n        {                \\\r\n            print(v)     \\\r\n        }                \\\r\n    }\r\n\r\nsigned main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n\r\n    int t;\r\n    cin >> t;\r\n    while (t--)\r\n    {\r\n        int n, q;\r\n        cin >> n >> q;\r\n        vector<int> arr(n);\r\n        for (int &v : arr)\r\n            cin >> v;\r\n        vector<int> pf(n);\r\n        map<int,int> idx;\r\n        idx[0] = 0;\r\n        vector<int> p;\r\n        p.push_back(0);\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            pf[i] = arr[i];\r\n            if (i - 1 >= 0)\r\n            {\r\n                pf[i] += pf[i - 1];\r\n            }\r\n            if (p.empty() or p.back() < pf[i]){\r\n                p.push_back(pf[i]);\r\n                idx[pf[i]] = i + 1;\r\n            }\r\n        }\r\n\r\n        for (int i = 0; i < q; i++)\r\n        {\r\n            int x;\r\n            cin >> x;\r\n\r\n            if (x <= p.back())\r\n            {\r\n                auto nip = *lower_bound(all(p) , x);\r\n\r\n                cout << idx[nip] - 1 << \" \";\r\n            }\r\n            else\r\n            {\r\n                if (pf[n - 1] <= 0)\r\n                {\r\n                    cout << -1 << \" \";\r\n                }\r\n                else\r\n                {\r\n                    int full = (x - p.back() + pf[n-1] - 1) / pf[n - 1];\r\n                    x = x - full*pf[n-1];\r\n                    auto nip = *lower_bound(all(p) , x);\r\n                    cout    <<full*n  - 1 +idx[nip] << \" \";\r\n                }\r\n            }\r\n        }\r\n        cout << endl;\r\n    }\r\n\r\n    return 0;\r\n}"
}