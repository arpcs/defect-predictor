{
    "id": 223667902,
    "contestId": 1490,
    "creationTimeSeconds": 1694899541,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 13107200,
    "source": "#include<iostream>\n#include<bits/stdc++.h>\n#include<cmath>\n#define _CRT_SECURE_NO_WARNINGS\n#define ll  long long\n#define endl \"\\n\"\n#define pq priority_queue  // 4 3 2 1\n#define pq_smll pq<ll,vector<ll>,greater<ll>> // 1 2 3 4\n\nusing namespace std;\n\nbool isPrime(ll x) //O(sqrt(n))\n{\n    if(x == 1 || x == 0)\n        return false;\n    else\n    {\n        for(int i = 2; i * i <= x; i ++)\n        {\n            if(x % i == 0)\n               return false;\n        }\n        return true;\n    }\n}\n\nvector<bool> Sieve(ll n) //O(n log (log n))\n{\n \tvector<bool> isPrime(n + 1, 1);\n \tisPrime[0] = isPrime[1] = 0;\n\n \tfor(ll i = 2; i * i <= n; i ++)\n    {\n        if(isPrime[i])\n        {\n           for(ll j = i * i; j <= n; j += i)\n               isPrime[j]=0;\n        }\n    }\n\n \treturn isPrime;\n}\n\nvector<ll> Smallest_Prime_Factor(ll n)\n{\n    vector<ll>spf(n + 1, 0);\n    for (int i = 2; i <= n; i ++)\n    {\n        if(!spf[i])\n        {\n            for(int j = i; j <= n; j += i)\n            {\n                if(!spf[j])\n                  spf[j] = i;\n            }\n        }\n    }\n}\n\nvector<ll> Divisors(ll n) //O(sqrt(n))\n{\n \tvector<ll>divs;\n \tfor(ll i = 1; i * i <= n; i ++)\n    {\n   \t\tif(n % i)\n   \t\t   continue;\n\n        divs.push_back(i);\n        if(i != n / i)\n           divs.push_back(n / i);\n \t}\n\n \treturn divs;\n}\n\nvector<pair<ll, ll>> prime_factorize(ll n) //O(sqrt(n))\n{\n \tvector<pair<ll, ll>> fact;\n \tfor(ll i = 2; i * i <= n; i ++)\n    {\n   \t\tint cnt = 0;\n   \t\twhile(n % i == 0)\n        {\n     \t\tn /= i;\n     \t\tcnt ++;\n   \t\t}\n\n   \t\tif(cnt)\n   \t\t  fact.emplace_back(i,cnt);\n \t}\n\n \tif(n > 1)\n        fact.emplace_back(n,1);\n\n \treturn fact;\n}\n\nll lcm(ll a, ll b)\n{\n    return a / __gcd(a, b) * b ;\n}\n\nll fast_power(ll b, ll p) {\n    ll ans = 1;\n    for (; p; p /= 2) {\n        if (p & 1)\n            ans = b * ans;\n        b = b * b;\n    }\n    return ans;\n}\n\nvoid Naruto_Uzumaki()\n{\n   //My dream is to compete in ACM ICPC World Finals!\n   //\u201cFAILING DOESN\u2019T GIVE YOU A REASON TO GIVE UP ,\n   //AS LONG AS YOU BELIEVE.\u201d \u2013 NARUTO UZUMAKI.\n   //Esraa Sayed\n\n   //freopen(\"output.in\",\"r\",stdin);\n   ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\n}\nll sum,mx;\nbool can(ll num,ll target) {\n    return (sum * num + mx >= target);\n}\nint main(){\n\nNaruto_Uzumaki();\n\n\nll t;\n    cin >> t;\n    while (t--) {\n        int n, m;\n        cin >> n >> m;\n        ll a[n], b[m];\n        sum = 0;\n        mx = -1e10;\n        for (int i = 0; i < n; i++) {\n            cin >> a[i];\n            sum += a[i];\n            mx = max(mx, sum);\n        }\n        for (int i = 0; i < m; i++) {\n            cin >> b[i];\n        }\n        priority_queue<pair<ll, pair<ll, ll>>> pq;\n        for (int i = 0; i < m; i++) {\n            if (sum <= 0 || b[i] <= mx) {\n                pq.push({-b[i], {0, i}});\n                continue;\n            }\n            ll l = 0, r = 1e9, numOfarr;\n            while (l <= r) {\n                ll mid = (l + r) / 2;\n                if (can(mid, b[i])) {\n                    numOfarr = mid;\n                    r = mid - 1;\n                } else {\n                    l = mid + 1;\n                }\n            }\n            pair<ll, pair<ll, ll>> temp;\n            temp.first = -(b[i] - (numOfarr * sum));\n            temp.second.first = (numOfarr * n);\n            temp.second.second = i;\n            pq.push(temp);\n        }\n        ll ans[m];\n        sum = 0;\n\n        for (int i = 0; i < n; i++) {\n            sum += a[i];\n            while (!pq.empty() && sum >= -pq.top().first) {\n                ans[pq.top().second.second] = pq.top().second.first + i;\n                pq.pop();\n            }\n        }\n        while (!pq.empty()) {\n            ans[pq.top().second.second] = -1;\n            pq.pop();\n        }\n        for (int i = 0; i < m; i++) {\n            cout << ans[i] << ' ';\n        }\n        cout <<endl;\n    }\nreturn 0;\n}\n\n \t  \t\t   \t\t\t        \t\t\t  \t  \t\t\t"
}