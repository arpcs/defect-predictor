{
    "id": 93789042,
    "contestId": 682,
    "creationTimeSeconds": 1601040485,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 682,
        "index": "E",
        "name": "Alyona and Triangles",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2600,
        "tags": [
            "geometry",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 682,
        "members": [
            {
                "handle": "keywet06"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1466181300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 66,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 3174400,
    "source": "#ifndef OCT_INSERT_PRE_DOCUMENT  // oct insert \"pre-document\"\r\n#define OCT_INSERT_PRE_DOCUMENT\r\n#ifdef ONLINE_JUDGE\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC optimize(\"unroll-loops\")\r\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\r\n#endif\r\n#include <bits/stdc++.h>\r\n#define debug std::cerr << \"Debug(\" << __LINE__ << \"): \"\r\n#define pub push_back\r\n#define pob pop_back\r\n#define pup push\r\n#define mkp make_pair\r\n#define fir first\r\n#define sec second\r\n#define ite iterator\r\n#define lob lower_bound\r\n#define upb upper_bound\r\n#define reg register\r\nusing uint8 = unsigned char;\r\nusing uint16 = unsigned short int;\r\nusing uint32 = unsigned int;\r\nusing uint64 = unsigned long long;\r\nusing int8 = signed char;\r\nusing int16 = short int;\r\nusing int32 = int;\r\nusing int64 = long long;\r\nusing pi32 = std::pair<int32, int32>;\r\nusing pi64 = std::pair<int64, int64>;\r\nnamespace oct {\r\n/* Array tn4 is the 4-direction changes in coordinate system.\r\n * The directions in order is {right, up, left, down}.\r\n */\r\nconst int tn4[4][2] = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}};\r\nconst int tn8[8][2] = {{1, 0},  {1, 1},   {0, 1},  {-1, 1},\r\n                       {-1, 0}, {-1, -1}, {0, -1}, {1, -1}};\r\nconst double exp = 1e-8;\r\nvoid sync(int pre = 8);\r\ntemplate <typename _Tp>\r\n_Tp &mad(_Tp &x, _Tp y);\r\ntemplate <typename _Tp>\r\n_Tp &mid(_Tp &x, _Tp y);\r\ntemplate <typename _Tp>\r\nbool in(_Tp x, _Tp l, _Tp r);\r\ntemplate <typename _Tp>\r\n_Tp sqr(_Tp x);\r\ntemplate <typename _Tp>\r\n_Tp power(_Tp x, int64 m);\r\ntemplate <typename _Tp>\r\nvoid sort(_Tp &x, _Tp &y);\r\ntemplate <typename _Tp1, typename _Tp2>\r\nstd::pair<_Tp1, _Tp2> operator+(std::pair<_Tp1, _Tp2> x,\r\n                                std::pair<_Tp1, _Tp2> y);\r\ntemplate <typename _Tp>\r\n_Tp &operator+=(_Tp &x, _Tp y);\r\ninline void sync(int pre) {\r\n    std::ios::sync_with_stdio(0);\r\n    std::cin.tie(0), std::cout.tie(0);\r\n    std::cout.flags(std::ios::fixed);\r\n    std::cout.precision(pre);\r\n    std::cout.setf(std::ios::showpoint);\r\n}\r\ntemplate <typename _Tp>\r\ninline _Tp &mad(_Tp &x, _Tp y) {\r\n    return x = std::max(x, y);\r\n}\r\ntemplate <typename _Tp>\r\ninline _Tp &mid(_Tp &x, _Tp y) {\r\n    return x = std::min(x, y);\r\n}\r\ntemplate <typename _Tp>\r\ninline bool in(_Tp x, _Tp l, _Tp r) {\r\n    return l <= x && x <= r;\r\n}\r\ntemplate <typename _Tp>\r\ninline _Tp sqr(_Tp x) {\r\n    return x * x;\r\n}\r\ntemplate <typename _Tp>\r\ninline _Tp power(_Tp x, int64 m) {\r\n    return m == 1 ? x : (m & 1 ? power(x * x, m / 2) * x : power(x * x, m / 2));\r\n}\r\ntemplate <typename _Tp>\r\ninline void sort(_Tp &x, _Tp &y) {\r\n    if (x > y) std::swap(x, y);\r\n}\r\ntemplate <typename _Tp1, typename _Tp2>\r\ninline std::pair<_Tp1, _Tp2> operator+(std::pair<_Tp1, _Tp2> x,\r\n                                       std::pair<_Tp1, _Tp2> y) {\r\n    return x.fir += y.fir, x.sec += y.sec, x;\r\n}\r\ntemplate <typename _Tp>\r\n_Tp &operator+=(_Tp &x, _Tp y) {\r\n    return x = x + y;\r\n}\r\n}  // namespace oct\r\n\r\n#endif  // oct end \"pre-document\"\r\n\r\n#define rep(i, a, b) for (int i = a; i <= b; i++)\r\n#define ll long long\r\n#define RC rotating_calipers\r\n\r\nusing namespace std;\r\n\r\nconst int maxn = 100010;\r\n\r\nstruct point {\r\n    ll x, y;\r\n    point(ll x = 0, ll y = 0) : x(x), y(y) {}\r\n    bool operator<(const point &c) const {\r\n        return x < c.x || (x == c.x && y < c.y);\r\n    }\r\n    point operator-(const point &c) const { return point(x - c.x, y - c.y); }\r\n};\r\n\r\nll det(point A, point B) { return A.x * B.y - A.y * B.x; }\r\nll det(point O, point A, point B) { return det(A - O, B - O); }\r\n\r\npoint a[maxn], ch[maxn], A, B, C;\r\n\r\nvoid convexhull(int n, int &top) {\r\n    sort(a + 1, a + n + 1);\r\n    top = 0;\r\n    for (int i = 1; i <= n; i++) {\r\n        while (top > 1 && det(ch[top - 1], ch[top], a[i]) <= 0) top--;\r\n        ch[++top] = a[i];\r\n    }\r\n    int ttop = top;\r\n    for (int i = n - 1; i >= 1; i--) {\r\n        while (top > ttop && det(ch[top - 1], ch[top], a[i]) <= 0) top--;\r\n        ch[++top] = a[i];\r\n    }\r\n}\r\nvoid rotating_calipers(point p[], int top) {\r\n    ll ans = 0;\r\n    int now;\r\n    rep(i, 1, top - 2) {\r\n        int now = i + 2;\r\n        rep(j, i + 1, top - 1) {\r\n            while (now <= top && abs(det(p[i], p[j], p[now])) <\r\n                                     abs(det(p[i], p[j], p[now + 1]))) {\r\n                now++;\r\n            }\r\n            ll tmp = abs(det(p[i], p[j], p[now]));\r\n            if (tmp > ans) ans = tmp, A = p[i], B = p[j], C = p[now];\r\n        }\r\n    }\r\n}\r\nint main() {\r\n    oct::sync();\r\n    int N;\r\n    ll S;\r\n    std::cin >> N >> S;\r\n    for (int i = 1; i <= N; i++) std::cin >> a[i].x >> a[i].y;\r\n    int top;\r\n    convexhull(N, top);\r\n    RC(ch, top - 1);\r\n    std::cout << A.x + B.x - C.x << ' ' << A.y + B.y - C.y << std::endl;\r\n    std::cout << A.x + C.x - B.x << ' ' << A.y + C.y - B.y << std::endl;\r\n    std::cout << B.x + C.x - A.x << ' ' << B.y + C.y - A.y << std::endl;\r\n    return 0;\r\n}"
}