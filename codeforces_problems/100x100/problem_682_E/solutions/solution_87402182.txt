{
    "id": 87402182,
    "contestId": 682,
    "creationTimeSeconds": 1595225227,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 682,
        "index": "E",
        "name": "Alyona and Triangles",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2600,
        "tags": [
            "geometry",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 682,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1466181300
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 66,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 4198400,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nconst int N=5005;\nstruct point{\n    int x,y;\n    point(){}\n    point(int _x,int _y):x(_x),y(_y){}\n    friend point operator - (const point &a,const point &b){return point(a.x-b.x,a.y-b.y);}\n    friend point operator + (const point &a,const point &b){return point(a.x+b.x,a.y+b.y);}\n    friend ll operator * (const point &a,const point &b){return (ll)a.x*b.y-(ll)a.y*b.x;}\n    ll dis(){return (ll)x*x+(ll)y*y;}\n}p[N],A,B,C;\nint n,top;\nll S;\n\nbool cmp(const point &a,const point &b){\n    ll res=(a-p[1])*(b-p[1]);\n    if(res)return res>0;\n    return (a-p[1]).dis()<(b-p[1]).dis();\n}\nll area(int i,int j,int k){\n    return abs((p[j]-p[i])*(p[k]-p[i]));\n}\n\nvoid graham(){\n    for(int i=2;i<=n;i++)\n        if((p[i].x<p[1].x)||(p[i].x==p[1].x&&p[i].y<p[1].y))swap(p[1],p[i]);\n    sort(p+2,p+n+1,cmp),top=1;\n    for(int i=2;i<=n;i++){\n        while(top>1&&(p[top-1]-p[i])*(p[top]-p[i])<0)top--;\n        p[++top]=p[i];\n    }\n    n=top;\n}\n\nint main(){\n    scanf(\"%d%lld\",&n,&S);\n    for(int i=1;i<=n;i++)scanf(\"%d%d\",&p[i].x,&p[i].y);\n    graham();\n    S=0;point a,b,c;\n    for(int i=1;i<=n-2;i++)\n        for(int j=i+1,k=j+1;j<=n-1;j++){\n            while(k<=n&&area(i,j,k+1)>=area(i,j,k))k++;\n            if(area(i,j,k)>S)S=area(i,j,k),a=p[i],b=p[j],c=p[k];\n        }\n    A=a+(b-c),B=b+(c-a),C=c+(a-b);\n    printf(\"%d %d\\n%d %d\\n%d %d\\n\",A.x,A.y,B.x,B.y,C.x,C.y);\n    return 0;\n}\n\n\t\t\t  \t\t\t\t\t  \t    \t\t\t \t\t \t\t  \t"
}