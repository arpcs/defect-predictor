{
    "id": 85504241,
    "contestId": 682,
    "creationTimeSeconds": 1593488927,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 682,
        "index": "E",
        "name": "Alyona and Triangles",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2600,
        "tags": [
            "geometry",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 682,
        "members": [
            {
                "handle": "16204"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1466181300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 66,
    "timeConsumedMillis": 780,
    "memoryConsumedBytes": 4710400,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#pragma GCC target (\"avx\")\r\n#pragma GCC target (\"avx2\")\r\n#pragma GCC target (\"fma\")\r\n#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define ld long double\r\n#define pii pair <int, int>\r\n#define pll pair <ll, ll>\r\n#define pci pair <char, int>\r\n#define pld pair <ld, ld>\r\n#define ppld pair <pld, pld>\r\n#define ppll pair <pll, pll>\r\n#define pldl pair <ld, ll>\r\n#define vll vector <ll>\r\n#define vvll vector <vll>\r\n#define vpll vector <pll>\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define mp make_pair\r\n#define fi first\r\n#define se second\r\n#define mll map <ll, ll>\r\n#define fastmap gp_hash_table\r\n#define cd complex <double>\r\n#define vcd vector <cd>\r\n#define PI 3.14159265358979\r\n#define ordered_set tree <ll, null_type, less <ll>, rb_tree_tag, tree_order_statistics_node_update>\r\n#pragma 03\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\nll n, s;\r\nstruct point{\r\n    ll x, y;\r\n};\r\nll nex(ll s){\r\n\treturn (s + 1) % n;\r\n}\r\nll prv(ll s){\r\n\treturn (s + n - 1) % n;\r\n}\r\nbool mcomp(point a, point b){\r\n    return a.x < b.x || (a.x == b.x && a.y < b.y);\r\n}\r\nbool cw(point a, point b, point c){\r\n    return a.x * (b.y - c.y) + b.x * (c.y - a.y) + c.x * (a.y - b.y) < 0;\r\n}\r\nbool ccw(point a, point b, point c){\r\n    return a.x * (b.y - c.y) +b.x * (c.y - a.y) + c.x * (a.y - b.y) > 0;\r\n}\r\nvoid chull(vector <point> &a){\r\n    if (a.size() == 1) return;\r\n    sort(a.begin(), a.end(), mcomp);\r\n    point p1 = a[0], p2 = a.back();\r\n    vector <point> up, dn; up.pb(p1); dn.pb(p1);\r\n    for (ll i = 1; i < a.size(); i++) {\r\n        if (i == a.size() - 1 || cw(p1, a[i], p2)) {\r\n            while (up.size() >= 2 && !cw(up[up.size() - 2], up[up.size() - 1], a[i])) up.pop_back(); up.pb(a[i]);\r\n        }\r\n        if (i == a.size() - 1 || ccw(p1, a[i], p2)) {\r\n            while (dn.size() >= 2 && !ccw(dn[dn.size() - 2], dn[dn.size() - 1], a[i])) dn.pop_back(); dn.pb(a[i]);\r\n        }\r\n\t}\r\n    a.clear();\r\n    for (ll i = 0; i < up.size(); i++) a.pb(up[i]);\r\n    for (ll i = dn.size() - 2; i > 0; i--) a.pb(dn[i]);\r\n}\r\nll area(point a, point b, point c){\r\n\treturn abs((b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x));\r\n}\r\nvoid st(point &a){\r\n\ta.x = 0, a.y = 0;\r\n}\r\nint main(){\r\n\tcin >> n >> s;\r\n\tvector <point> p;\r\n\tfor (ll i = 0; i < n; i++){\r\n\t\tpoint ip; cin >> ip.x >> ip.y; p.pb(ip);\r\n\t}\r\n\tchull(p); n = p.size();\r\n\tpoint mxa, mxb, mxc; \r\n\tst(mxa); st(mxb); st(mxc);\r\n\tll mxarea = 0;\r\n\tif (p.size() < 15){\r\n\t\tfor (ll i = 0; i < n; i++){\r\n\t\t\tfor (ll j = i + 1; j < n; j++){\r\n\t\t\t\tfor (ll k = j + 1; k < n; k++){\r\n\t\t\t\t\tif (mxarea < area(p[i], p[j], p[k])){\r\n\t\t\t\t\t\tmxarea = area(p[i], p[j], p[k]); \r\n\t\t\t\t\t\tmxa = p[i]; mxb = p[j]; mxc = p[k];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse{\r\n\t\tfor (ll i = 0; i < n; i++){\r\n\t\t\tll ptr = (i + 2) % n;\r\n\t\t\tll tbw = prv(prv(i)), bw = prv(i);\r\n\t\t\tfor (ll j = i + 1; j != tbw; j = nex(j)){\r\n\t\t\t\twhile ((ptr != bw) && (area(p[i], p[j], p[ptr]) < area(p[i], p[j], p[nex(ptr)]))) ptr = nex(ptr);\t\r\n\t\t\t\tif (mxarea < area(p[i], p[j], p[ptr])){\r\n\t\t\t\t\tmxarea = area(p[i], p[j], p[ptr]);\r\n\t\t\t\t\tmxa = p[i]; mxb = p[j]; mxc = p[ptr];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcout << mxb.x + mxc.x - mxa.x << \" \" << mxb.y + mxc.y - mxa.y << endl;\r\n\tcout << mxb.x + mxa.x - mxc.x << \" \" << mxb.y + mxa.y - mxc.y << endl;\r\n\tcout << mxa.x + mxc.x - mxb.x << \" \" << mxa.y + mxc.y - mxb.y << endl;\r\n}"
}