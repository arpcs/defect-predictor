{
    "id": 93793882,
    "contestId": 682,
    "creationTimeSeconds": 1601043873,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 682,
        "index": "E",
        "name": "Alyona and Triangles",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2600,
        "tags": [
            "geometry",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 682,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1466181300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 66,
    "timeConsumedMillis": 139,
    "memoryConsumedBytes": 204800,
    "source": "#include<algorithm>\n#include<cstdio>\n#include<cmath>\n#define LD double\n#define LL long long\n#define Vector Point\n#define Re register int\nusing namespace std;\nconst int N=5e3+3;\nint n;LL S;\nconst LD eps=1e-8;\ninline int dcmp(LD a){return a<-eps?-1:(a>eps?1:0);}\nstruct Point{\n    LD x,y;Point(LD X=0,LD Y=0){x=X,y=Y;}\n    inline void in(){scanf(\"%lf%lf\",&x,&y);}\n    inline void print(){printf(\"%.lf %.lf\\n\",x,y);}\n}A,B,C,P[N],cp[N];\ninline LD Cro(Vector a,Vector b){return a.x*b.y-a.y*b.x;}\ninline Vector operator+(Vector a,Vector b){return Vector(a.x+b.x,a.y+b.y);}\ninline Vector operator-(Vector a,Vector b){return Vector(a.x-b.x,a.y-b.y);}\ninline bool cmp(Point a,Point b){return a.x!=b.x?a.x<b.x:a.y<b.y;}//\u6309\u5750\u6807\u6392\u5e8f\ninline int ConvexHull(Point *P,Re n,Point *cp){\n    sort(P+1,P+n+1,cmp);\n    Re t=0;\n    for(Re i=1;i<=n;++i){\n        while(t>1&&dcmp(Cro(cp[t]-cp[t-1],P[i]-cp[t-1]))<=0)--t;\n        cp[++t]=P[i];\n    }\n    Re St=t;\n    for(Re i=n-1;i>=1;--i){\n        while(t>St&&dcmp(Cro(cp[t]-cp[t-1],P[i]-cp[t-1]))<=0)--t;\n        cp[++t]=P[i];\n    }\n    return --t;\n}\nint main(){\n    scanf(\"%d%lld\",&n,&S);\n    for(Re i=1;i<=n;++i)P[i].in();\n    Re cnt=ConvexHull(P,n,cp);\n    LD Max=0;\n    for(Re i=1;i<=cnt;++i)\n        for(Re j=i+1,k=j<cnt?j+1:1;j<=cnt&&k!=i;++j){\n            while(dcmp(Cro(cp[j]-cp[i],cp[k]-cp[i])-Cro(cp[j]-cp[i],cp[k+1]-cp[i]))<0)k=k<cnt?k+1:1;\n            if(k!=i&&k!=j){\n                LD tmp=Cro(cp[j]-cp[i],cp[k]-cp[i]);\n                if(tmp>Max)Max=tmp,A=cp[i],B=cp[j],C=cp[k];\n            }\n        }\n    (A-C+B).print(),(B-A+C).print(),(C-B+A).print();\n}\n\t\t \t  \t \t  \t\t  \t       \t  \t \t\t"
}