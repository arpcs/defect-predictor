{
    "id": 119986562,
    "contestId": 682,
    "creationTimeSeconds": 1624101579,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 682,
        "index": "E",
        "name": "Alyona and Triangles",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2600,
        "tags": [
            "geometry",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 682,
        "members": [
            {
                "handle": "froggyzhang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1466181300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 66,
    "timeConsumedMillis": 436,
    "memoryConsumedBytes": 409600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ninline ll read(){\r\n\tll x=0,f=1;\r\n\tchar c=getchar();\r\n\twhile(c<'0'||c>'9'){\r\n\t\tif(c=='-')f=-1;\r\n\t\tc=getchar();\r\n\t}\r\n\twhile(c>='0'&&c<='9'){\r\n\t\tx=(x<<1)+(x<<3)+c-'0';\r\n\t\tc=getchar();\r\n\t}\r\n\treturn x*f;\r\n}\r\nint n;\r\nstruct Point{\r\n\tll x,y;\r\n\tPoint(ll _x=0,ll _y=0){x=_x,y=_y;}\r\n\tfriend Point operator - (const Point &a,const Point &b){\r\n\t\treturn Point(a.x-b.x,a.y-b.y);\r\n\t}\r\n\tfriend Point operator + (const Point &a,const Point &b){\r\n\t\treturn Point(a.x+b.x,a.y+b.y);\r\n\t}\t\r\n\tfriend ll operator % (const Point &a,const Point &b){\r\n\t\treturn a.x*b.y-a.y*b.x;\r\n\t}\r\n\tfriend bool operator < (const Point &a,const Point &b){\r\n\t\treturn a.x==b.x?a.y<b.y:a.x<b.x;\r\n\t}\r\n\tinline ll len(){return x*x+y*y;}\r\n\tvoid Output(){printf(\"%lld %lld\\n\",x,y);}\r\n}LTL;\r\ntypedef vector<Point> poly;\r\npoly p;\r\ninline bool Left(Point a,Point b){\r\n\treturn b%a>0;\r\n}\r\ninline bool Para(Point a,Point b){\r\n\treturn a%b==0;\r\n}\r\narray<Point,3> ans;\r\nll mx;\r\ninline ll Abs(ll x){return x>=0?x:-x;}\r\ninline ll Area(Point a,Point b,Point c){\r\n\treturn Abs((b-a)%(c-a));\t\r\n}\r\npoly Convex(poly A){\r\n\tpoly B;\r\n\tfor(auto p:A){\r\n\t\twhile(B.size()>1&&!Left(p-B[B.size()-2],B.back()-B[B.size()-2]))B.pop_back();\r\n\t\tB.push_back(p);\t\r\n\t}\t\r\n\treturn B;\r\n}\r\nint main(){\r\n\tn=read();read();\r\n\tp.resize(n);\r\n\tfor(int i=0;i<n;++i){\r\n\t\tp[i].x=read(),p[i].y=read();\r\n\t}\r\n\tLTL=*min_element(p.begin(),p.end());\r\n\tsort(p.begin(),p.end(),[&](Point a,Point b){a=a-LTL,b=b-LTL;return Para(a,b)?a.len()<b.len():!Left(a,b);});\r\n\tp=Convex(p);\r\n\tn=p.size();\r\n\tmx=-1;\r\n\tfor(int i=0;i<n;++i){\r\n\t\tfor(int j=(i+1)%n,k=(j+1)%n;j!=i;j=(j+1)%n){\r\n\t\t\twhile(Area(p[i],p[j],p[(k+1)%n])>Area(p[i],p[j],p[k]))k=(k+1)%n;\r\n\t\t\tll S=Area(p[i],p[j],p[k]);\r\n\t\t\tif(S>mx){\r\n\t\t\t\tmx=S;\r\n\t\t\t\tans={p[i],p[j],p[k]};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor(int i=0;i<3;++i){\r\n\t\t(ans[i]+ans[(i+1)%3]-ans[(i+2)%3]).Output();\t\r\n\t}\r\n\treturn 0;\r\n}"
}