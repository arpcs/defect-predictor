{
    "id": 118960138,
    "contestId": 1182,
    "creationTimeSeconds": 1623326060,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1182,
        "index": "D",
        "name": "Complete Mirror",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "hashing",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1182,
        "members": [
            {
                "handle": "BlueDiamond"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560258300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 7884800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int N = (int) 1e5 + 7;\r\nint n, deg[N];\r\nbool ok[N];\r\nvector<int> g[N];\r\nmultiset<int> kids[N];\r\n\r\nvoid algo(int a, int p) {\r\n  kids[a].clear();\r\n  for (auto &b : g[a]) if (b != p) kids[a].insert(deg[b]);\r\n  if (kids[a].empty()) {\r\n    ok[a] = 1;\r\n  } else {\r\n    /**if (a == 3) {\r\n      for (auto &b : g[a]) if (b != p) cout << \" ---> \" << b << \" : \" << deg[b] << \"\\n\";\r\n    }**/\r\n    auto bg = kids[a].begin(), nd = kids[a].end();\r\n    nd--;\r\n    ok[a] = (*bg == *nd);\r\n    for (auto &b : g[a]) {\r\n      if (b != p) {\r\n        ok[a] &= ok[b];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nvoid dfs(int a, int p = -1) {\r\n  for (auto &b : g[a]) if (b != p) dfs(b, a);\r\n\r\n  algo(a, p);\r\n}\r\n\r\nvoid reroot(int a, int b) {\r\n  algo(a, b);\r\n  algo(b, -1);\r\n}\r\n\r\nvoid go(int a, int p = -1) {\r\n  if (ok[a]) {\r\n    cout << a << \"\\n\";\r\n    exit(0);\r\n  }\r\n  for (auto &b : g[a]) {\r\n    if (b != p) {\r\n      reroot(a, b);\r\n      go(b, a);\r\n      reroot(b, a);\r\n    }\r\n  }\r\n}\r\n\r\nsigned main() {\r\n  ios::sync_with_stdio(0); cin.tie(0);\r\n\r\n  freopen (\"input\", \"r\", stdin);\r\n\r\n\r\n  cin >> n;\r\n  for (int i = 1; i < n; i++) {\r\n    int x, y;\r\n    cin >> x >> y;\r\n    g[x].push_back(y);\r\n    g[y].push_back(x);\r\n    deg[x]++;\r\n    deg[y]++;\r\n  }\r\n\r\n  dfs(1);\r\n  go(1);\r\n  cout << \"-1\\n\";\r\n\r\n  return 0;\r\n}\r\n"
}