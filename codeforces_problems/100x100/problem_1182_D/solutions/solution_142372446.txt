{
    "id": 142372446,
    "contestId": 1182,
    "creationTimeSeconds": 1641906288,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1182,
        "index": "D",
        "name": "Complete Mirror",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "hashing",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1182,
        "members": [
            {
                "handle": "P11011"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560258300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 46,
    "timeConsumedMillis": 139,
    "memoryConsumedBytes": 13004800,
    "source": "#include<iostream>\r\n#include<stack>\r\n#include<list>\r\n#include<set>\r\n#include<vector>\r\n#include<algorithm>\r\n#include<math.h>\r\n#include<numeric>\r\n#include<map>\r\n#include<cstring>\r\n#include<queue>\r\n#include<iomanip>\r\n#include<cmath>\r\n#include<queue>\r\n#include<unordered_map>\r\n#ifndef local\r\n   #define endl '\\n'\r\n#endif\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int inf=0x3f3f3f3f;\r\nconst ll MAXN=1e6+10;\r\nconst ll mod=1e9+6;\r\nconst ll hash_p1=1610612741;\r\nconst ll hash_p2=805306457;\r\nconst ll hash_p3=402653189;\r\n//-----------------------------------------------------------------------------------------------------------------*/\r\n// ll head[MAXN],net[MAXN],to[MAXN],edge[MAXN]/*\u6d41\u91cf*/,cost[MAXN]//\u8d39\u7528;\r\n/* \r\nvoid add(ll u,ll v,ll w,ll s){\r\n\tto[++cnt]=v;net[cnt]=head[u];edge[cnt]=w;cost[cnt]=s;head[u]=cnt;\r\n\tto[++cnt]=u;net[cnt]=head[v];edge[cnt]=0;cost[cnt]=-s;head[v]=cnt;\r\n}\r\n\r\nstruct elemt{\r\n\tint p,v;\r\n};\r\nstruct comp{\r\n\tpublic:\r\n\t\tbool operator()(elemt v1,elemt v2){\r\n\t\t\treturn v1.v<v2.v;\r\n\t\t}\r\n};\r\npriority_queue<elemt,vector<elemt>,comp>q;  \r\n*/\r\n//-----------------------------------------------------------------------------------------------------------------*/\r\n //unordered_map<int,int>mp;\r\nvector<int>mp[100100]; \r\nvector<int>edge[100010];\r\nint root,maxn,n;\r\nint num[100010],dep[100010];\r\nvoid getroot(int x,int pre){\r\n\tnum[x]=1;\r\n\tint tmp=0;\r\n\tfor(ll i=0;i<edge[x].size();i++){\r\n\t\tif(edge[x][i]==pre){\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tgetroot(edge[x][i],x);\r\n\t\ttmp=max(tmp,num[edge[x][i]]);\r\n\t\tnum[x]+=num[edge[x][i]];\r\n\t}\r\n\ttmp=max(tmp,n-num[x]);\r\n\tif(tmp<maxn){\r\n\t\tmaxn=tmp;\r\n\t\troot=x;\r\n\t}\r\n}\r\nvoid dfs(int x,int pre){\r\n\tdep[x]=dep[pre]+1;\r\n\tfor(ll i=0;i<edge[x].size();i++){\r\n\t\tif(edge[x][i]==pre){\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tdfs(edge[x][i],x);\r\n\t}\r\n}\r\nbool check(int roots){\r\n\tmemset(dep,0,sizeof(dep));\r\n\tdfs(roots,0);\r\n\tfor(int i=0;i<=n+10;i++){\r\n\t\tmp[i].clear();\r\n\t}\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tmp[dep[i]].push_back(i);\r\n\t}\r\n\tfor(int i=0;i<=n+10;i++){\r\n\t\tfor(int j=1;j<mp[i].size();j++){\r\n\t\t\tif(edge[mp[i][j]].size()!=edge[mp[i][j-1]].size()){\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 1;\r\n}\r\nint lens=0;\r\nint check_lain(int x,int pre){\r\n\tif(edge[x].size()>2){\r\n\t\treturn 0;\r\n\t}\r\n\tif(edge[x].size()==1){\r\n\t\tlens=x;\r\n\t\treturn 1;\r\n\t}\r\n\tfor(int i=0;i<edge[x].size();i++){\r\n\t\tif(edge[x][i]==pre){\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t    int res=check_lain(edge[x][i],x);\r\n\t    if(!res){\r\n\t    \treturn 0;\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn res+1;\r\n\t\t}\r\n\t}\r\n}\r\nint main(){\r\n/*cout<<setiosflags(ios::fixed)<<setprecision(8)<<ans<<endl;//\u8f93\u51faans\uff08float\uff09\u683c\u5f0f\u63a7\u5236\u4e3a8\u4f4d\u5c0f\u6570\uff08\u4e0d\u542b\u6574\u6570\u90e8\u5206\uff09*/\r\n/*cout<<setprecision(8)<<ans<<endl;//\u8f93\u51faans\uff08float\uff09\u683c\u5f0f\u63a7\u5236\u4e3a8\u4f4d\u5c0f\u6570\uff08\u542b\u6574\u6570\u90e8\u5206\uff09*/\r\n\tios::sync_with_stdio(false);cin.tie(0);cout.tie(0);//\u540c\u6b65\u6d41\r\ncin>>n;\r\n for(ll i=1;i<n;i++){\r\n \tll u,v;\r\n \tcin>>u>>v;\r\n \tedge[u].push_back(v);\r\n \tedge[v].push_back(u);\r\n }\r\n maxn=2e8;\r\n getroot(1,0);\r\n if(check(root)){\r\n \tcout<<root<<endl;\r\n }\r\n else{\r\n \tint k1=0,d1=0;\r\n \tfor(int i=0;i<edge[root].size();i++){\r\n\t    int tmp=check_lain(edge[root][i],root);\r\n\t    if(tmp){\r\n\t    \tif(k1&&tmp!=d1){\r\n\t\t\t\tif(check(lens)){\r\n\t\t\t\t\tcout<<lens<<endl;\r\n\t\t\t\t\treturn 0; \r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t    \tif(!k1){\r\n\t    \t\tk1=lens;\r\n\t    \t\td1=tmp;\r\n\t    \t\tif(check(k1)){\r\n\t    \t\t\tcout<<k1<<endl;\r\n\t    \t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t }\r\n\t cout<<-1<<endl;\r\n }\r\n\treturn 0;\r\n}//"
}