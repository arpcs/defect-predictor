{
    "id": 187048374,
    "contestId": 1182,
    "creationTimeSeconds": 1672238970,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1182,
        "index": "D",
        "name": "Complete Mirror",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "hashing",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1182,
        "members": [
            {
                "handle": "LiZnB_love_ZX"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560258300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "   // hash \u5f00\u59cb\r\n    const int MOD = 2147483647;\r\n    const array<int, 2> P = {48271, 16807};\r\n\r\n    auto h = [&](int x, const int p) {\r\n      return 1ll * x * p % MOD;\r\n    };\r\n\r\n    // O(n) \u6709\u6839\u6811 hash\r\n    vector<array<int, 2>> h_root(n + 1);\r\n    function<void(int, int)> get_hash = [&](int pos, int fa) {\r\n      h_root[pos] = {1, 1};\r\n      for (auto &v : g[pos]) {\r\n        if (v == fa) continue;\r\n        get_hash(v, pos);\r\n        for (int i = 0; i < 2; i++)\r\n          h_root[pos][i] = (1ll * h_root[pos][i] + h(h_root[v][i], P[i])) % MOD;\r\n      }\r\n    };\r\n    get_hash(1, -1);\r\n"
}