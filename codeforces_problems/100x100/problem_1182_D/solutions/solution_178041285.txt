{
    "id": 178041285,
    "contestId": 1182,
    "creationTimeSeconds": 1666828306,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1182,
        "index": "D",
        "name": "Complete Mirror",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "hashing",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1182,
        "members": [
            {
                "handle": "wplllll"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560258300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 46,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 13107200,
    "source": "// LUOGU_RID: 91694094\n#include<bits/stdc++.h>\r\n#define rep(i, l, r) for(int i = (l), EDD = (int)(r); i <= EDD; ++ i)\r\n#define pre(i, r, l) for(int i = (r), EDD = (int)(l); i >= EDD; -- i)\r\n#define Grp(x, i) for(int i = h[x]; i; i = ne[i])\r\n#define mk make_pair\r\n#define pk emplace_back\r\nusing namespace std;\r\n\r\ntypedef unsigned long long LL;\r\nconst int N = 100009;\r\n\r\nvector<int> son[N];\r\nbitset<N * 13> vis;\r\nint p[N], tot, n, siz[N], root, maxp;\r\nLL f[N], lian[N], to[N];\r\nint tmp[N];\r\n\r\ninline int read() {\r\n\tint x = 0; char fs = 0, c = getchar(); while(! isdigit(c)) fs |= (c == '-'), c = getchar();\r\n\twhile(isdigit(c)) x = (x << 1) + (x << 3) + (c ^ 48), c = getchar();\r\n\treturn fs ? -x : x;\r\n}\r\n\r\nvoid Zlo(int x, int fa)\r\n{\r\n\tsiz[x] = 1;\r\n\tint mp = 0;\r\n\tfor(int y : son[x])\r\n\t{\r\n\t\tif(y == fa) continue;\r\n\t\tZlo(y, x);\r\n\t\tsiz[x] += siz[y];\r\n\t\tmp = max(mp, siz[y]);\r\n\t}\r\n\tmp = max(mp, n - siz[x]);\r\n\tif(! root || mp < maxp) maxp = mp, root = x;\r\n}\r\n\r\nbool Fyr(int x, int fa)\r\n{\r\n\tsiz[x] = 1; f[x] = 1;\r\n\tLL las = 0;\r\n\tfor(int y : son[x])\r\n\t{\r\n\t\tif(y == fa) continue;\r\n\t\tif(! Fyr(y, x)) return false;\r\n\t\tsiz[x] += siz[y];\r\n\t\tf[x] += f[y] * p[siz[y]];\r\n\t\tif(! las) las = f[y];\r\n\t\telse if(f[y] != las) return false;\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nvoid Sek(int x, int fa)\r\n{\r\n\tlian[x] = 1;\r\n\tint ct = 0, cum = 1;\r\n\tfor(int y : son[x])\r\n\t{\r\n\t\tif(y == fa) continue;\r\n\t\tSek(y, x);\r\n\t\tct ++;\r\n\t\tto[x] = to[y];\r\n\t\tcum &= lian[y];\r\n\t}\r\n\tif(ct <= 1 && cum) lian[x] = 1;\r\n\tif(ct == 0) to[x] = x;\r\n}\r\n\r\nint main()\r\n{\r\n\trep(i, 2, 1299709)\r\n\t{\r\n\t\tif(! vis[i]) p[++ tot] = i;\r\n\t\tfor(int j = 1; p[j] * i <= 1299709; j ++)\r\n\t\t{\r\n\t\t\tvis[p[j] * i] = 1;\r\n\t\t\tif(i % p[j] == 0) break;\r\n\t\t}\r\n\t}\r\n\ttot = 0;\r\n\tn = read();\r\n\trep(i, 2, n)\r\n\t{\r\n\t\tint x = read(), y = read();\r\n\t\tson[x].pk(y), son[y].pk(x);\r\n\t}\r\n\tZlo(1, 0);\r\n\tif(Fyr(root, 0)) return printf(\"%d\\n\", root), 0;\r\n\telse\r\n\t{\r\n\t\tvector<int> wt;\r\n\t\tSek(root, 0);\r\n\t\tfor(int x : son[root])\r\n\t\t\tif(lian[x]) tmp[++ tot] = x;\r\n\t\tfor(int i = 1; i <= tot; i ++)\r\n\t\t\tif(f[tmp[i]] != f[tmp[i - 1]]) wt.pk(to[tmp[i]]);\r\n\t\twt.pk(to[tmp[tot]]);\r\n\t\tfor(int x : wt)\r\n\t\t\tif(Fyr(x, 0)) return printf(\"%d\\n\", x), 0;\r\n\t}\r\n\tprintf(\"-1\\n\");\r\n\treturn 0;\r\n}"
}