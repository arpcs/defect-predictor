{
    "id": 145736921,
    "contestId": 1182,
    "creationTimeSeconds": 1644401919,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1182,
        "index": "D",
        "name": "Complete Mirror",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "hashing",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1182,
        "members": [
            {
                "handle": "LHN200861"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560258300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nint n,tot,rt,mi,krt,rt2,len_rt2,h[100005],ne[200005],to[200005],du[100005],sz[100005],dep[100005];\r\nvector<int>orz[100005];\r\nvoid add(int x,int y)\r\n{\r\n\tto[++tot]=y;\r\n\tne[tot]=h[x];\r\n\th[x]=tot;\r\n}\r\nvoid gr(int x,int las)\r\n{\r\n\tint i,bl=0;\r\n\tsz[x]=1;\r\n\tfor(i=h[x];i;i=ne[i])\r\n\t{\r\n\t\tif(to[i]!=las)\r\n\t\t{\r\n\t\t\tgr(to[i],x);\r\n\t\t\tbl=max(bl,sz[to[i]]);\r\n\t\t\tsz[x]+=sz[to[i]];\r\n\t\t}\r\n\t}\r\n\tbl=max(bl,n-sz[x]);\r\n\tif(bl<mi)\r\n\t{\r\n\t\tmi=bl;\r\n\t\trt=x;\r\n\t}\r\n}\r\nvoid dfs(int x,int las)\r\n{\r\n\tdep[x]=dep[las]+1;\r\n\tfor(i=h[x];i;i=ne[i])\r\n\t{\r\n\t\tif(to[i]!=las)\r\n\t\t{\r\n\t\t\tdfs(to[i],x);\r\n\t\t}\r\n\t}\r\n}\r\nvoid check(int x)\r\n{\r\n\tint i,j;\r\n\tdfs(x,0);\r\n\tfor(i=1;i<=n;i++)\r\n\t{\r\n\t\torz[i].clear();\r\n\t}\r\n\tfor(i=1;i<=n;i++)\r\n\t{\r\n\t\torz[dep[i]].push_back(i);\r\n\t}\r\n\tfor(i=1;i<=n;i++)\r\n\t{\r\n\t\tfor(j=1;j<orz[i].size();j++)\r\n\t\t{\r\n\t\t\tif(du[orz[i][j]]!=du[orz[i][0]])\r\n\t\t\t{\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcout<<x<<endl;\r\n\texit(0);\r\n}\r\nint il(int x,int las)\r\n{\r\n\tif(du[x]>2)\r\n\t{\r\n\t\treturn 0;\r\n\t}\r\n\tif(du[x]==1)\r\n\t{\r\n\t\tkrt=x;\r\n\t\treturn 1;\r\n\t}\r\n\tint i,res;\r\n\tfor(i=h[x];i;i=ne[i])\r\n\t{\r\n\t\tif(to[i]!=las)\r\n\t\t{\r\n\t\t\tres=il(to[i],x);\r\n\t\t\tif(!res)\r\n\t\t\t{\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\treturn res+1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tint i,x,y;\r\n\tcin>>n;\r\n\tfor(i=1;i<n;i++)\r\n\t{\r\n\t\tcin>>x>>y;\r\n\t\tadd(x,y);\r\n\t\tadd(y,x);\r\n\t\tdu[x]++;\r\n\t\tdu[y]++;\r\n\t}\r\n\tmi=0x3f3f3f3f;\r\n\tgr(1,0);\r\n\tcheck(rt);\r\n\tfor(i=h[rt];i;i=ne[i])\r\n\t{\r\n\t\tint len=il(to[i],rt);\r\n\t\tif(!len)\r\n\t\t{\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif(rt2&&len!=len_rt2)\r\n\t\t{\r\n\t\t\tcheck(krt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tif(!rt2)\r\n\t\t{\r\n\t\t\trt2=krt;\r\n\t\t\tlen_rt2=len;\r\n\t\t\tcheck(krt);\r\n\t\t}\r\n\t}\r\n\tputs(\"-1\");\r\n\treturn 0;\r\n}\r\n"
}