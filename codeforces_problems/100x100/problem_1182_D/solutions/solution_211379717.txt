{
    "id": 211379717,
    "contestId": 1182,
    "creationTimeSeconds": 1687999914,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1182,
        "index": "D",
        "name": "Complete Mirror",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "hashing",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1182,
        "members": [
            {
                "handle": "chengcheng5677"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560258300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 4710400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=1e5+7;\r\nmt19937 rnd(random_device{}());\r\nint n,sz[N],fa[N],maxn[N];\r\nvector<int>e[N];\r\nvoid dfs(int x){\r\n\tsz[x]=1;\r\n\tfor(auto v:e[x]){\r\n\t\tif(v!=fa[x]){\r\n\t\t\tfa[v]=x;dfs(v);\r\n\t\t\tsz[x]+=sz[v];\r\n\t\t\tmaxn[x]=max(maxn[x],sz[v]);\r\n\t\t}\r\n\t}maxn[x]=max(maxn[x],n-sz[x]);\r\n\treturn;\r\n}int dep[N],du[N];\r\nmap<int,int>mp;\r\nvoid dfs2(int id,int f){\r\n\tfor(auto v:e[id])\r\n\t\tif(v!=f)dep[v]=dep[id]+1,dfs2(v,id);\r\n\treturn;\r\n}int check(int id){\r\n\tdep[id]=0;\r\n\tdfs2(id,0);\r\n\tmp.clear();\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tif(mp[dep[i]])\r\n\t\t\tif(mp[dep[i]]!=du[i])\r\n\t\t\treturn 0;\r\n\t\tmp[dep[i]]=du[i];\r\n\t}return 1;\r\n}vector<int>u;\r\nint main(){\r\n\tios::sync_with_stdio(0);\r\n\tcin.tie(0);\r\n\tcin>>n;\r\n\tfor(int i=1,u,v;i<n;i++){\r\n\t\tcin>>u>>v;\r\n\t\te[u].push_back(v);\r\n\t\te[v].push_back(u);\r\n\t\tdu[u]++;du[v]++;\r\n\t}dfs(1);for(int i=1;i<=n;i++)\r\n\t\tif(maxn[i]<=n/2)\r\n\t\t\tif(check(i)){\r\n\t\t\t\tcout<<i<<\"\\n\";\r\n\t\t\t\treturn 0;\r\n\t\t\t}else u.push_back(i);\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tif(du[i]==1)\r\n\t\t\tu.push_back(i);\r\n\tshuffle(u.begin(),u.end(),rnd);\r\n\tfor(int i=0;i<500;i++)\r\n\t\tif(check(u[i])){\r\n\t\t\tcout<<u[i]<<\"\\n\";\r\n\t\t\treturn 0;\r\n\t\t}\r\n\tcout<<\"-1\\n\";\r\n\treturn 0;\r\n} "
}