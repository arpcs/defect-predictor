{
    "id": 148010808,
    "contestId": 1182,
    "creationTimeSeconds": 1646124469,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1182,
        "index": "D",
        "name": "Complete Mirror",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "hashing",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1182,
        "members": [
            {
                "handle": "im.priyansh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560258300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 6963200,
    "source": "#include <bits/stdc++.h>\n#define fastio ios_base::sync_with_stdio(false);cin.tie(NULL);\n#define i64 long long\n#define ld long double\n#define F first\n#define S second\n#define MOD 1000000007\n#define pairii pair<int, int>\n#define pb push_back\n#ifdef ONLINE_JUDGE\n#define endl '\\n'\n#endif\n#define matrix vector<vector<int> >\n#define vi vector<int>\n#define vi64 vector<i64>\n#define uset unordered_set\n#define umap unordered_map\n#define mpr make_pair\n#define ALL(x) x.begin(), x.end()\n#define RALL(data) data.rbegin(),data.rend()\n#define TYPEMAX(type) std::numeric_limits<type>::max()\n#define TYPEMIN(type) std::numeric_limits<type>::min()\nusing namespace std;\n\ni64 modExp(i64 a, int ex);\nvoid fastscan(int &number);\nstruct DSU;\n\nvoid reverseDfs(int u, vi adj[], vi &vs) {\n\tvs[u] = 0;\n\tfor(int &v: adj[u]) {\n\t\tif(vs[v] == -MOD) {\n\t\t\treverseDfs(v, adj, vs);\n\t\t}\n\t}\n}\n\nvoid check(vi adj[], int n) {\n\tint k;\n\n\tfor(int i=0;i<n;i++) {\n\t\tif(adj[i].size() == 1) {\n\t\t\tk = i;\n\t\t} else if(adj[i].size() != 2) {\n\t\t\treturn;\n\t\t}\n\t}\n\tcout<<k+1<<endl;\n\texit(0);\n}\n\nvoid solveMain() {\n\tint n;\n\tcin>>n;\n\tvi adj[n];\n\tint u,v;\n\tfor(int i=1;i<n;i++) {\n\t\tcin>>u>>v;\n\t\tu--, v--;\n\t\tadj[u].pb(v);\n\t\tadj[v].pb(u);\n\t}\n\n\tcheck(adj, n);\n\n\tqueue<int> q;\n\tvi vs(n, 0);\n\tvi h(n, 0);\n\tvector<pairii> degree(n, {0, 0});\n\tdegree[0] = {1, 1};\n\tfor(int i=0;i<n;i++) {\n\t\tif(adj[i].size() == 1) {\n\t\t\tvs[i] = 1;\n\t\t\tq.push(i);\n\t\t\th[i] = 0;\n\t\t}\n\t}\n\n\tauto vote = [&](int a, int b, int c) -> pairii {\n\t\tpairii x = {vs[a], adj[a].size()}, y = {vs[b], adj[b].size()} , z = {vs[c], adj[c].size()};\n\t\tif(x == y) {\n\t\t\treturn x;\n\t\t} else if(y == z) {\n\t\t\treturn y;\n\t\t} else if(z == x) {\n\t\t\treturn z;\n\t\t} else {\n\t\t\tcout<<-1<<endl;\n\t\t\texit(0);\n\t\t}\n\t\treturn {-1, -1};\n\t};\n\n\tauto vote2 = [&](int a, int b) -> pairii {\n\t\tpairii x = {vs[a], adj[a].size()}, y = {vs[b], adj[b].size()};\n\t\tif(x == y) {\n\t\t\treturn x;\n\t\t} else if(x.F >= y.F) {\n\t\t\treturn x;\n\t\t} else {\n\t\t\treturn y;\n\t\t}\n\t};\n\n\tauto vote3 = [&](int u) {\n\t\tpairii x = {vs[u], adj[u].size()}, y = {-1, -1};\n\t\tqueue<int> q2;\n\n\t\twhile(!q.empty()) {\n\t\t\tint w = q.front();\n\t\t\tq.pop();\n\t\t\tq2.push(w);\n\n\t\t\tpairii z = {vs[w], adj[w].size()};\n\t\t\tif(z != x and y.F==-1) {\n\t\t\t\ty = z;\n\t\t\t} else if(z != x and y != z) {\n\t\t\t\tcout<<-1<<endl;\n\t\t\t\texit(0);\n\t\t\t}\n\t\t}\n\t\tif(y.F > x.F) {\n\t\t\tswap(x, y);\n\t\t}\n\t\twhile(!q2.empty()) {\n\t\t\tint w = q2.front();\n\t\t\tq2.pop();\n\t\t\tpairii z = {vs[w], adj[w].size()};\n\t\t\tif(z == x) {\n\t\t\t\tq.push(w);\n\t\t\t} else {\n\t\t\t\treverseDfs(w, adj, vs);\n\t\t\t}\n\t\t}\n\t\treturn x;\n\t};\n\n\tbool tolerate = 1;\n\n\twhile(!q.empty()) {\n\t\tu = q.front();\n\t\tq.pop();\n\t\tif(vs[u] == -MOD) continue;\n\t\tif(h[u]<0 or h[u]>=n) {\n\t\t\tcout<<u<<\" -> \"<<h[u]<<endl;\n\t\t}\n\t\tif(!degree[h[u]].F) {\n\t\t\tif(!tolerate or q.empty()) {\n\t\t\t\tdegree[h[u]] = {vs[u], adj[u].size()};\n\t\t\t} else {\n\t\t\t\tdegree[h[u]] = vote3(u);\n\t\t\t\tif(degree[h[u]] != (pairii){vs[u], adj[u].size()}) {\n\t\t\t\t\treverseDfs(u, adj, vs);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(degree[h[u]].F != vs[u] or degree[h[u]].S != adj[u].size()) {\n\t\t\tif(!tolerate) {\n\t\t\t\t// cout<<\"Break at: \"<<u+1<<endl;\n\t\t\t\tcout<<-1<<endl;\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\t// cout<<\"Tolerate at: \"<<u+1<<\" expected (\"<<degree[h[u]].F<<\" , \"<<degree[h[u]].S<<\") Got: (\"<<vs[u]<<\" , \"<<adj[u].size()<<\")\"<<endl;\n\t\t\t\ttolerate = 0;\n\t\t\t\tint d = -1;\n\t\t\t\tfor(int &z: adj[u]) {\n\t\t\t\t\tif(vs[z] == -MOD and h[z] == h[u]) {\n\t\t\t\t\t\td = z;\n\t\t\t\t\t\tvs[z] = degree[h[u]].F;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treverseDfs(u, adj, vs);\n\t\t\t\tif(d != -1) {\n\t\t\t\t\tq.push(u);\n\t\t\t\t\th[u] = h[d]+1;\n\t\t\t\t\tvs[u] = degree[h[u]].F+1;\n\t\t\t\t\tvs[d] = -MOD;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tfor(int &w: adj[u]) {\n\t\t\tif(vs[w] == -MOD) continue;\n\t\t\tif(!vs[w]) {\n\t\t\t\tq.push(w);\n\t\t\t\th[w] = h[u]+1;\n\t\t\t}\n\t\t\tvs[w] += vs[u]+1;\n\t\t}\n\t\tvs[u] = -MOD;\n\t}\n\tint ans = 0, valid = 1;\n\tfor(int i=0;i<n;i++) {\n\t\t// cout<<h[i]<<\" , \";\n\t\tif(!i) continue;\n\t\tif(h[i] > h[ans]) {\n\t\t\tans = i;\n\t\t\tvalid = 1;\n\t\t} else if(h[i] == h[ans]) {\n\t\t\tvalid = 0;\n\t\t}\n\t}\n\t// cout<<endl;\n\tcout<<(valid ? ans+1 : -1)<<endl;\n}\n\nint main() {\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"input.txt\", \"r\", stdin);\n\tfreopen(\"output.txt\", \"w\", stdout);\n\t#endif\n\t#ifdef ONLINE_JUDGE\n\tfastio\n\t#endif\n\tint t=1;\n\t// cin>>t;\n\twhile(t--) {\n\t\tsolveMain();\n\t}\n\treturn 0;\n}\n\ni64 modExp(i64 a, int ex) {\n\tif(!ex) return 1;\n\ti64 b = modExp(a, ex>>1);\n\tb = (b*b)%MOD;\n\tif(ex&1) return (b*a)%MOD;\n\treturn b;\n}\n\nvoid fastscan(int &number) {\n    bool negative = false;\n    char c;\n    number = 0;\n    c = getchar();\n    if (c=='-') {\n        negative = true;\n        c = getchar();\n    }\n    for (; (c>47 && c<58); c=getchar())\n        number = number *10 + c - 48;\n    if (negative)\n        number *= -1;\n}\n\nstruct DSU {\n\tvi par;\n\tvi rank;\n\tint n;\n\n\tDSU(int n): n(n) {\n\t\tpar.resize(n, -1);\n\t\trank.resize(n, 1);\n\t}\n\n\tint parent(int a) {\n\t\treturn par[a] == -1 ? a : par[a] = parent(par[a]);\n\t}\n\n\tvoid unite(int a, int b) {\n\t\tint x = parent(a), y = parent(b);\n\t\tif(x == y) {\n\t\t\treturn;\n\t\t}\n\t\tif(rank[x] >= rank[y]) {\n\t\t\tpar[y] = x;\n\t\t} else {\n\t\t\tpar[x] = y;\n\t\t}\n\t}\n\n\tint count() {\n\t\tint cnt = 0;\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tif(par[i] == -1) {\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t\treturn cnt;\n\t}\n};"
}