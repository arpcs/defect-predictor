{
    "id": 204690106,
    "contestId": 1182,
    "creationTimeSeconds": 1683348600,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1182,
        "index": "D",
        "name": "Complete Mirror",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "hashing",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1182,
        "members": [
            {
                "handle": "atharv825"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560258300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 6348800,
    "source": "#include <bits/stdc++.h>\r\n#define int long long int\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n#define ii pair<int, int>\r\n#define MP make_pair\r\n#define vi vector<int>\r\n#define endl \"\\n\"\r\n#define pb push_back\r\n#define be begin\r\n#define up upper_bound\r\n#define lo lower_bound\r\n#define bi binary_search\r\n#define si set<int>\r\n#define msi multiset<int>\r\n#define vii vector<pair<int, int>>\r\n#define mii map<int, int>\r\n#define all(v) v.begin(), v.end()\r\n#define mems1(a) memset(a, -1, sizeof(a))\r\n#define mems0(a) memset(a, 0, sizeof(a))\r\n#define ci2(x1, x2) cin >> x1 >> x2\r\n#define ci3(x1, x2, x3) cin >> x1 >> x2 >> x3\r\n#define ci4(x1, x2, x3, x4) cin >> x1 >> x2 >> x3 >> x4\r\n#define co1(x) cout << x << endl\r\n#define co2(x1, x2) cout << x1 << \" \" << x2 << endl\r\n#define co3(x1, x2, x3) cout << x1 << \" \" << x2 << \" \" << x3 << endl\r\n#define co4(x1, x2, x3, x4) cout << x1 << \" \" << x2 << \" \" << x3 << \" \" << x4<< endl\r\n#define rep(i, s, e) for (int i = s; i < e; i++)\r\n#define rrep(i, s, e) for (int i = s - 1; i >= e; i--)\r\nusing namespace std;\r\nint n;\r\nvector<int>g[100010],vis,d1,deg;\r\nvoid dfs(int node,int d){\r\n    vis[node]=1;\r\n    d1[node]=d;\r\n    for(auto v:g[node]){\r\n        if(vis[v]==0){\r\n            dfs(v,d+1);\r\n        }\r\n    }\r\n}\r\n\r\nvoid solve(){\r\n    cin>>n;\r\n    vis.resize(n+1);\r\n    d1.resize(n+1);\r\n    deg.resize(n+1);\r\n    rep(i,0,n-1){\r\n        int x,y;\r\n        cin>>x>>y;\r\n        g[x].pb(y);\r\n        g[y].pb(x);\r\n        deg[x]++;\r\n        deg[y]++;\r\n    }\r\n    dfs(1,0);\r\n    int k=0,maxd1=0;\r\n    rep(i,1,n+1){\r\n        if(d1[i]>maxd1){\r\n            maxd1=d1[i];\r\n            k=i;\r\n        }\r\n        vis[i]=0;\r\n    }\r\n    dfs(k,0);\r\n    int j=0;maxd1=0;\r\n    rep(i,1,n+1){\r\n        if(d1[i]>maxd1){\r\n            maxd1=d1[i];\r\n            j=i;\r\n        }\r\n        vis[i]=0;\r\n    }\r\n    if(maxd1%2){\r\n        cout<<-1<<endl;\r\n        return;\r\n    }\r\n    else{\r\n        int x=0;\r\n        rep(i,1,n+1){\r\n            if(d1[i]==maxd1/2)x=i;\r\n        }\r\n        //x is the center;\r\n        dfs(x,0);\r\n        //cout<<x<<endl;\r\n        //rep(i,1,n+1)cout<<d1[i]<<' ';\r\n        //cout<<endl;\r\n        map<int,int>mp;\r\n        int f=1;\r\n        rep(i,1,n+1){\r\n            if(mp.find(d1[i])!=mp.end()){\r\n                if(mp[d1[i]]!=deg[i]){\r\n                    f=0;break;\r\n                }\r\n            }\r\n            else mp[d1[i]]=deg[i];\r\n        }\r\n        if(f==0)cout<<-1<<endl;\r\n        else cout<<x<<endl;\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\nsigned main()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0); \r\n    int t=1;\r\n    //cin >> t;\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        solve();\r\n    }             \r\n}\r\n"
}