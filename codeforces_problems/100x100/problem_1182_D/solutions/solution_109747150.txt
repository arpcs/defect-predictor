{
    "id": 109747150,
    "contestId": 1182,
    "creationTimeSeconds": 1615517248,
    "relativeTimeSeconds": 6928,
    "problem": {
        "contestId": 1182,
        "index": "D",
        "name": "Complete Mirror",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "hashing",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1182,
        "members": [
            {
                "handle": "abhishekray323"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1615510320
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 6963200,
    "source": "#include<bits/stdc++.h>\r\n#define ll long long\r\n#define x first\r\n#define y second\r\n#define pi pair\r\n#define K 1000000007\r\nusing namespace std;\r\n\r\nvector<ll> g[200000];\r\nll degree[200000];\r\nbool dfs(ll src, ll p,ll level){\r\n    if(degree[level]==-1)degree[level]=g[src].size();\r\n    else if(degree[level]!=g[src].size())return false;\r\n    for(ll i=0;i<g[src].size();i++){\r\n        if(g[src][i]==p)continue;\r\n        if(!dfs(g[src][i],src,level+1))return false;\r\n    }\r\n    return true;\r\n}\r\nint main() {\r\n\tios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n\tll test_case=1;//cin>>test_case;\r\n\twhile(test_case--)\r\n\t{\r\n        ll n;cin>>n;\r\n        ll u,v;\r\n        for(ll i=0;i<n-1;i++){cin>>u>>v;u--,v--;\r\n        g[u].push_back(v);g[v].push_back(u);\r\n        }\r\n      //  cout<<\"succes\"<<endl;\r\n      if(n==1){\r\n        cout<<\"1\"<<endl;\r\n        return 0;\r\n      }\r\n      ll root;\r\n      for(ll i=0;i<n;i++)\r\n      if(g[i].size()==1){root=i;break;}\r\n      for(ll i=0;i<=n+1;i++)degree[i]=-1;\r\n      if(dfs(root,-1,0))cout<<root+1<<endl;\r\n      else cout<<\"-1\"<<endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n"
}