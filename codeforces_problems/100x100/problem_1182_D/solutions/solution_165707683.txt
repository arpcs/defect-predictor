{
    "id": 165707683,
    "contestId": 1182,
    "creationTimeSeconds": 1658773517,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1182,
        "index": "D",
        "name": "Complete Mirror",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "hashing",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1182,
        "members": [
            {
                "handle": "smunteanu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560258300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 234,
    "memoryConsumedBytes": 4505600,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <queue>\r\n#include <map>\r\nusing namespace std;\r\n\r\nconst int nmax = 1e5 + 7;\r\n\r\nstatic int n;\r\nstatic int deg[nmax];\r\nstatic int dep[nmax];\r\nstatic int degdep[nmax];\r\nstatic vector<int> adj[nmax];\r\n\r\nint solve() {\r\n\r\n  if (n == 1) return 1;\r\n\r\n  queue<int> q;\r\n  for (int u = 1; u <= n; u++) {\r\n    if (deg[u] == 1) {\r\n      q.push(u);\r\n      dep[u] = 1;\r\n    }\r\n  }\r\n\r\n  while (!q.empty()) {\r\n    int u = q.front(); q.pop();\r\n    for (int v : adj[u]) {\r\n      if (!dep[v]) {\r\n        dep[v] = dep[u] + 1;\r\n        q.push(v);\r\n      }\r\n    }\r\n  }\r\n\r\n  for (int u = 1; u <= n; u++) {\r\n    if (degdep[dep[u]]) {\r\n      if (degdep[dep[u]] != deg[u]) return -1;\r\n    } else degdep[dep[u]] = deg[u];\r\n  }\r\n\r\n  int p = 0;\r\n  bool only = false;\r\n  \r\n  for (int u = 1; u <= n; u++) {\r\n    if (dep[u] >= dep[p]) {\r\n      only = dep[u] > dep[p];\r\n      p = u;\r\n    }\r\n  }\r\n\r\n  if (only) return p;\r\n  else return -1;\r\n\r\n\r\n\r\n\r\n  \r\n\r\n}\r\n\r\nint main() {\r\n\r\n  // freopen(\"file.in\", \"r\", stdin);\r\n\r\n\r\n  cin >> n;\r\n\r\n  int u, v;\r\n  for (int i = 1; i < n; i++) {\r\n    cin >> u >> v;\r\n    adj[u].push_back(v);\r\n    adj[v].push_back(u);\r\n  }\r\n\r\n  for (int u = 1; u <= n; u++) {\r\n    deg[u] = adj[u].size();\r\n  }\r\n\r\n  cout << solve();\r\n}"
}