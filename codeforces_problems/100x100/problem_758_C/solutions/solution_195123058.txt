{
    "id": 195123058,
    "contestId": 758,
    "creationTimeSeconds": 1677499825,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 758,
        "index": "C",
        "name": "Unfair Poll",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 758,
        "members": [
            {
                "handle": "gisfire"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1484838300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 111,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <cstring>\r\ntypedef long long int ll;\r\nconst int maxn = 105;\r\nll a[maxn * maxn];\r\nint main()\r\n{\r\n//  freopen(\"in.txt\",\"r\",stdin);\r\n    memset(a,0,sizeof(a));\r\n\r\n    ll n,m,k,x,y,T;\r\n    scanf(\"%lld %lld %lld %lld %lld\",&n,&m,&k,&x,&y);\r\n    if(n==1)T = m;\r\n    else T = n*m + (n-2)*m;\r\n\r\n    ll tot = n*m;\r\n    ll maxv = 0,minv = k;   \r\n    ll aver = k/T;\r\n//  printf(\"%lld\\n\",aver);\r\n\r\n    if(k >= T){\r\n        for(ll i = 1;i<= m; ++i)  a[i] = aver;\r\n        for(ll i = m+1;i<= (n-1)*m; ++i)  a[i] = 2*aver;\r\n        for(ll i = (n-1)*m+1;i<= tot; ++i)  a[i] = aver;\r\n\r\n        k = k - k/T*T;\r\n    }\r\n//  printf(\"%lld\\n\",k);\r\n\r\n    if(k<=tot){\r\n        for(ll i=1;i <= k;++i)++a[i];\r\n    }   \r\n    else{\r\n        for(ll i=1;i <= tot ;++i)++a[i];\r\n        k = k - tot;\r\n        ll pos = (n-2)*m+1,cnt=0;\r\n        while(k--){\r\n            ++a[pos];\r\n        //  printf(\"pos = %lld\\n\",pos);\r\n            ++pos;\r\n            ++cnt;\r\n            if(cnt%m==0)pos=(n-2 - cnt/m)*m+1;\r\n        }\r\n    }   \r\n\r\n    for(ll i=1;i<=tot;++i){\r\n        if(maxv < a[i])maxv = a[i];\r\n        if(minv > a[i])minv = a[i];\r\n    }\r\n/*  for(int i=1;i<=n;++i){\r\n        for(int j=1;j<=m;++j){\r\n            printf(\"%lld: %lld    \",(i-1)*m+j,a[(i-1)*m+j]);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n*/\r\n    printf(\"%lld %lld %lld\\n\",maxv,minv,a[(x-1)*m+y]);\r\n\r\n    return 0;\r\n}"
}