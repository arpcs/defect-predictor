{
    "id": 208163093,
    "contestId": 758,
    "creationTimeSeconds": 1685707696,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 758,
        "index": "C",
        "name": "Unfair Poll",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 758,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1484838300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 111,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\nconst unsigned long long int mx = LLONG_MAX;\n\nint main () {\n  unsigned long long int n, m, k, x, y, ansmx = 0, ansmn = LLONG_MAX;\n  cin >> n >> m >> k >> x >> y;\n  unsigned long long int a[n+1][m+1];\n  memset(a,0,sizeof(a));\n  if (n > 1) {\n      unsigned long long int  l = 0, r = mx, mid, ans = 0;\n      while (l <= r) {\n          mid = l+(r-l)/2;\n          //__int128 sum = m*(2*n*mid-2*mid-n+2);\n          if (((long double)m*(2*n*(long double)mid-2*mid-n+2)) <= k) {\n              ans = mid;\n              l = mid+1;\n          }\n          else r = mid-1;\n      }\n      k -= m*(2*n*ans-2*ans-n+2);\n      for (int i = 1; i <= n; i++) {\n          for (int j = 1; j <= m; j++) {\n              if (i == 1 || i == n) a[i][j] = ans;\n              else a[i][j] = (ans*2)-1;\n          }\n      }\n      int rw = n-1, e = 0;\n      while (1) {\n          if (!k) break;\n          for (int i = 1; i <= m; i++) {\n              if (!k) break;\n              a[rw][i]++;\n              k--;\n          }\n          if (rw == 1) {\n              e = 1;\n          }\n          if (rw == n) e = 0;\n          if (e) rw++;\n          else rw--;\n      }\n      for (int i = 1; i <= n; i++) {\n          for (int j = 1; j <= m; j++) {\n              ansmx = max (ansmx, a[i][j]);\n              ansmn = min (ansmn, a[i][j]);\n          }\n      }\n      //cout << ansmx << \" \" << ansmn << \" \" << a[x][y];\n  }\n  else {\n      long long int p = k/m;\n      for (int i = 1; i <= m; i++) a[1][i] = p;\n      p = k%m;\n      for (int i = 1; i <= p; i++) a[1][i]++;\n      for (int i = 1; i <= m; i++) {\n          ansmx = max (ansmx, a[1][i]);\n          ansmn = min (ansmn, a[1][i]);\n      }\n  }\n  cout << ansmx << \" \" << ansmn << \" \" << a[x][y] << endl;\n}\n\n\n\t \t \t\t     \t\t\t\t\t  \t  \t\t\t \t\t \t\t\t"
}