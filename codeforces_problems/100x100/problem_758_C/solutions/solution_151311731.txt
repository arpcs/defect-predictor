{
    "id": 151311731,
    "contestId": 758,
    "creationTimeSeconds": 1648545110,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 758,
        "index": "C",
        "name": "Unfair Poll",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 758,
        "members": [
            {
                "handle": "cftryharder"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1484838300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 16,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#pragma GCC diagnostic ignored \"-Wunused-const-variable\"\r\n\r\n#ifdef MAC\r\n#include <iostream>\r\n#include <vector>\r\n#include <set>\r\n#include <map>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\n#include <queue>\r\n#include <bitset>\r\n#include <random>\r\n#include <chrono>\r\n#include <complex>\r\n#include <algorithm>\r\n#include <utility>\r\n#include <functional>\r\n#include <cmath>\r\n#include <cstring>\r\n#include <cassert>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <ctime>\r\n#include <iomanip>\r\n#else\r\n#include <bits/stdc++.h>\r\n#endif\r\n \r\nusing namespace std;\r\n \r\n#define mp make_pair\r\n#define pb push_back\r\n#define forn(i, n) for(int i = 0; i < (int)(n); ++i)\r\n#define for1(i, n) for(int i = 1; i < (int)(n); ++i)\r\n#define nfor(i, n) for(int i = int(n) - 1; i >= 0; --i)\r\n#define fore(i, l, r) for(int i = int(l); i < int(r); ++i)\r\n#define correct(x, y, n, m) (0 <= x && x < n && 0 <= y && y < m)\r\n#define all(x) (x).begin(), (x).end()\r\n#define fst first\r\n#define snd second\r\n#define endl \"\\n\"\r\n \r\ntypedef long long ll;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, int> pli;\r\ntypedef pair<ll, ll> pll;\r\ntypedef long double ld;\r\ntypedef tuple<int,int,int> iii;\r\n \r\ntemplate<typename T> inline T abs(T a){ return ((a < 0) ? -a : a); }\r\ntemplate<typename T> inline T sqr(T a){ return a * a; }\r\ntemplate<class T> T gcd(T a, T b) { return a ? gcd (b % a, a) : b; }\r\ntemplate<class T> T lcm(T a, T b) { return a / gcd (a, b) * b; }\r\ntemplate<class T> T sign(T a) { return a > 0 ? 1 : (a < 0 ? -1 : 0); }\r\n \r\nstring to_string(string s) {\r\n    return '\"' + s + '\"';\r\n}\r\n    \r\nstring to_string(const char* s) {\r\n    return to_string((string) s);\r\n}\r\n    \r\nstring to_string(bool b) {\r\n    return (b ? \"true\" : \"false\");\r\n}\r\n    \r\ntemplate <typename A, typename B>\r\nstring to_string(pair<A, B> p) {\r\n    return \"(\" + to_string(p.first) + \", \" + to_string(p.second) + \")\";\r\n}\r\n    \r\ntemplate <typename A>\r\nstring to_string(A v) {\r\n    bool first = true;\r\n    string res = \"{\";\r\n    for (const auto &x : v) {\r\n        if (!first) {\r\n            res += \", \";\r\n        }\r\n        first = false;\r\n        res += to_string(x);\r\n    }\r\n    res += \"}\";\r\n    return res;\r\n}\r\n \r\nvoid dbg() { cout << endl; }\r\ntemplate <typename Head, typename... Tail>\r\nvoid dbg(Head H, Tail... T) {\r\n    cout << \" \" << to_string(H);\r\n    dbg(T...);\r\n}\r\n \r\n#ifdef DEBUG\r\n#define dbg(...) cout << \"(\" << #__VA_ARGS__ << \"):\", dbg(__VA_ARGS__)\r\n#else\r\n#define dbg(...)\r\n#endif\r\n \r\nvoid fastIO() {\r\n    cin.sync_with_stdio(false);\r\n    cin.tie(0);\r\n}\r\n \r\ntemplate<typename T>\r\nvector<T> make_unique(vector<T> v) {\r\n    sort(all(v));\r\n    return v.resize(unique(all(v)) - v.begin());\r\n}\r\n \r\nint nxt() {\r\n    int x;\r\n    cin >> x;\r\n    return x;\r\n}\r\n \r\nconst int dx[4] = {0, 0, 1, -1};\r\nconst int dy[4] = {1, -1, 0, 0};\r\nconst int dxKn[8] = {-2, -1, 1, 2,  2,  1, -1, -2};\r\nconst int dyKn[8] = { 1,  2, 2, 1, -1, -2, -2, -1};\r\nconst int dxK[8] = {0, 0, 1, -1, 1, 1, -1, -1};\r\nconst int dyK[8] = {1, -1, 0, 0, 1, -1, 1, -1};\r\n \r\nconst int MOD = int(1e9) + 7;\r\nconst int INF = int(1e9) + 100;\r\nconst ll INF64 = 2e18;\r\nconst ld PI = ld(3.1415926535897932384626433832795);\r\nconst ld e = ld(2.7182818284590452353602874713527);\r\nconst ld EPS = 1e-9;\r\n \r\n//#############################\r\nconst int MAXN = 1000005;\r\n\r\nvector<vector<int>> g; //graph, grid\r\n \r\nint main() {\r\n    fastIO(); \r\n    ll n, m, k, x, y;\r\n    cin >> n >> m >> k >> x >> y;\r\n    dbg(n, m, k, x, y);\r\n    ll pupils = n * m;\r\n\r\n    if (k <= pupils) {\r\n        int reachedSergei = ((x-1)*m) + y <= k;\r\n        int reachedAll = n*m == k;\r\n        cout << 1 << \" \" << reachedAll << \" \" << reachedSergei << endl;\r\n        return 0;\r\n    }\r\n\r\n    if (n == 1) {\r\n        ll turns = k / m;\r\n        ll rem = k % m;\r\n        ll reachedSergei = (((x-1)*m) + y <= rem) + turns;\r\n        ll reachedAll = turns + (rem == 0) ;\r\n        cout << turns + (rem != 0) << \" \" << reachedAll << \" \" << reachedSergei << endl;\r\n        return 0;\r\n    }\r\n\r\n    ll a1, a2, a3;\r\n    a1 = a2 = a3 = 1; // at least all have been asked once\r\n    ll rem = k - pupils;\r\n    ll turns = rem / ((n-1) * m);\r\n    ll rest = rem % ((n-1) * m);\r\n    if (n == 2)\r\n        a1 += turns/2 + (rest > 0);\r\n    else\r\n        a1 += turns + (rest > 0);\r\n    a2 += turns/2;\r\n    dbg((x == 1 || x == n));\r\n    a3 = ((x == 1 || x == n) ? a2 : a1); // assuming here sergei has been reached by the offset\r\n    bool flag = true; // assuming here sergei has not been reached by the offset\r\n    dbg(a1, a2, a3);\r\n    int kk = 0;\r\n    dbg(rest);\r\n    dbg(turns);\r\n    if (turns % 2 == 0) {\r\n        for(int i = n-1; i <= n && kk < rest; i--) {\r\n            for(int j = 1; j <= m && kk < rest; j++) {\r\n                kk++;\r\n                dbg(i, j, kk);\r\n                if (i == x && y == j) {\r\n                    flag = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        for(int i = 2; i <= n && kk < rest; i++) {\r\n            for(int j = 1; j <= m && kk < rest; j++) {\r\n                dbg(i, j, kk);\r\n                kk++;\r\n                if (i == x && y == j) {\r\n                    // dbg(i, j, kk);\r\n                    flag = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    dbg(flag, x!=1, x!= n);\r\n    a3 -= (flag&&(x != 1 && x != n));\r\n    dbg(a3);\r\n    cout << a1 << \" \" << a2 << \" \" << a3 << endl;\r\n    return 0;\r\n}\r\n\r\n/*\r\n    RECALL CORNER CASES - e.g. n = 1, n = 0\r\n    WRITE SOME STUFF\r\n\r\n    think first, always - \r\n    1. concretely\r\n    2. graphically \r\n    3. abstractly\r\n    4. algebraically\r\n\r\n    Checklist:\r\n    - I/O make sense?   - Exclusion/inclusion           - Is a known sequence?\r\n    - Reverse           - Brute force approach          - DP\r\n    - Sort input        - Greedy approach\r\n    - Check diagonals   - Divide and Conquer approach\r\n*/"
}