{
    "id": 137580464,
    "contestId": 758,
    "creationTimeSeconds": 1638344425,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 758,
        "index": "C",
        "name": "Unfair Poll",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 758,
        "members": [
            {
                "handle": "prayutsu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1484838300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include \"bits/stdc++.h\"\r\n\r\nusing namespace std;\r\nusing namespace std::chrono;\r\n\r\n#include \"ext/pb_ds/assoc_container.hpp\"\r\n#include \"ext/pb_ds/tree_policy.hpp\"\r\n\r\n#define ll long long\r\n#define ld long double\r\n#define ull unsigned long long\r\n\r\n#ifdef prayutsu\r\n#define dbg(a) cerr << #a << \": \"; _print(a); cerr << '\\n';\r\n#define dbgi(a, i) cerr << #a << \" in \"<< #i << \" -> \" << (i) << \" = \"; _print(a); cerr<<'\\n';\r\n#else\r\n#define dbg(a) // Chakhma...\r\n#define dbgi(a, i) // Dobara chakhma...\r\n#endif\r\n\r\nusing namespace __gnu_pbds;\r\n#define pir pair< ll, ll >\r\ntemplate<typename T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\n/** General Utility. */\r\n#define vt                                  vector<ll>\r\n#define ve                                  vector\r\n#define mp                                  make_pair\r\n#define pb                                  push_back\r\n#define fi                                  first\r\n#define se                                  second\r\n#define mod                                 1000000007ll\r\n#define sortf(v)                            sort((v).begin(), (v).end())\r\n#define all(c)                              (c).begin(), (c).end()\r\n#define in                                  read\r\n#define setp(precision, double_number)      fixed << setprecision(precision) << double_number\r\n#define sz(x)                               (ll)(x).size()\r\n#define fill(container, value)              memset((container), (value), sizeof(container))\r\n#define endn                                '\\n'\r\n#define setBits                             __builtin_popcountll\r\n#define case(count)                         cout<<\"Case #\"<<(count)<<\": \";\r\n\r\n/** Loops. */\r\n#define fr(i, a, b, s)                      for (ll i=(a); (s)>0 ? (i)<(b) : (i)>(b); (i)+=(s))\r\n#define fr1(e)                              fr(i, 0ll, e, 1ll)\r\n#define fr2(i, e)                           fr(i, 0ll, e, 1ll)\r\n#define fr3(i, b, e)                        fr(i, b, e, 1ll)\r\n#define fr4(i, b, e, s)                     fr(i, b, e, s)\r\n#define GET5(a, b, c, d, e, ...)            e\r\n#define frc(...)                            GET5(__VA_ARGS__, fr4, fr3, fr2, fr1)\r\n#define FOR(...)                            frc(__VA_ARGS__)(__VA_ARGS__)\r\n#define repc(i, a, b, c)                    for (ll i=(a); (i)<=(b); (i)+=(c))\r\n#define perc(i, a, b, c)                    for (ll i=(a); (i)>=(b); (i)+=(c))\r\n#define rep(i, a, b)                        repc(i, a, b, 1)\r\n#define per(i, a, b)                        perc(i, a, b, -1)\r\n#define repn(i, b)                          rep(i, 1, b)\r\n\r\n/** Debugging. */\r\n#define show(a)                             for(int i=0; i<(a).size(); i++) cout<<(a)[i]<<' '; cout<<'\\n';\r\n#define each(x, a)                          for (auto& (x): (a))\r\n#define show_stl(v)                         cerr << \"[ \"; for (auto i: (v)) { _print(i); cerr << \", \";} cerr << \"]\";\r\n#define show_pair(p)                        cerr << \"{ \";  _print((p).fi); cerr << \", \"; _print((p).se); cerr << \" }\";\r\n\r\ntemplate<class A>\r\nvoid _print(A x) { cerr << x; }\r\n\r\ntemplate<class T, class V>\r\nvoid _print(pair<T, V> p) { show_pair(p) }\r\n\r\ntemplate<class T>\r\nvoid _print(vector<T> v) { show_stl(v) }\r\n\r\ntemplate<class T>\r\nvoid _print(set<T> v) { show_stl(v) }\r\n\r\ntemplate<class T>\r\nvoid _print(multiset<T> v) { show_stl(v) }\r\n\r\ntemplate<class T>\r\nvoid _print(ordered_set<T> &v) { show_stl(v) }\r\n\r\ntemplate<class T, class V>\r\nvoid _print(map<T, V> v) { show_stl(v) }\r\n\r\nll gcd(ll a, ll b) {\r\n    if (a == 0) return b;\r\n    return gcd(b % a, a);\r\n}\r\n\r\nll lcm(ll a, ll b) { return (a / (gcd(a, b))) * b; }\r\n\r\ntemplate<class A>\r\nvoid read(ve<A> &x);\r\n\r\ntemplate<class A, size_t S>\r\nvoid read(array<A, S> &x);\r\n\r\ntemplate<class T>\r\nvoid read(T &x) { cin >> x; }\r\n\r\nvoid read(double &d) {\r\n    string t;\r\n    read(t);\r\n    d = stod(t);\r\n}\r\n\r\nvoid read(long double &d) {\r\n    string t;\r\n    read(t);\r\n    d = stold(t);\r\n}\r\n\r\ntemplate<class H, class... T>\r\nvoid read(H &h, T &... t) {\r\n    read(h);\r\n    read(t...);\r\n}\r\n\r\ntemplate<class A>\r\nvoid read(ve<A> &x) { each(a, x) read(a); }\r\n\r\ntemplate<class A, size_t S>\r\nvoid read(array<A, S> &x) { each(a, x) read(a); }\r\n\r\nstring to_string(char c) { return string(1, c); }\r\n\r\nstring to_string(ve<bool> v) {\r\n    string res;\r\n    FOR(sz(v))res += char('0' + v[i]);\r\n    return res;\r\n}\r\n\r\n/** Use %mod to evaluate large powers %mod */\r\nlong long fastpow(long long a, long long b) {\r\n    long long res = 1ll;\r\n    while (b > 0ll) {\r\n        if (b & 1ll)\r\n            res = res * a;\r\n        a = a * a;\r\n        b >>= 1ll;\r\n    }\r\n    return res;\r\n}\r\n\r\nvoid solve() {\r\n    ll n, m, k, x, y;\r\n    in(n, m, k, x, y);\r\n    ll mini = 0, maxi = 0, serg = 0;\r\n    if (n == 1) {\r\n        ll full = k / m;\r\n        k %= m;\r\n        mini = maxi = serg = full;\r\n        if (k) ++maxi;\r\n        if (k >= y) ++serg;\r\n    } else if (n == 2) {\r\n        ll full = k / (2 * m);\r\n        mini = maxi = serg = full;\r\n        k %= (2 * m);\r\n        if (k > 0) ++maxi;\r\n        if (x == 1 and k >= y) ++serg;\r\n        else if (x == 2 and k - m >= y) ++serg;\r\n    } else {\r\n        ll rl = (2 * (n - 1)) * m;\r\n        ll full = k / rl;\r\n        dbg(full)\r\n        if (full == 0) {\r\n            ll fir = k/m;\r\n            if(fir==n) {\r\n                mini = maxi = serg = 1;\r\n                k -= n * m;\r\n                ll rows = k/m;\r\n                k %= m;\r\n                if(rows or k) ++maxi;\r\n                if(n-rows <= x or (n-rows == x-1 and k>=y)) ++serg;\r\n            } else {\r\n                maxi = k>0;\r\n                if(x<=fir or (x==fir+1 and k%m >= y)) ++serg;\r\n            }\r\n            cout<<maxi<<\" \"<<mini<<\" \"<<serg;\r\n            return;\r\n        }\r\n        mini = full, maxi = 2 * full;\r\n        serg = x != n and x != 1 ? 2 * full : full;\r\n        k = k % rl;\r\n        // first iteration\r\n        ll rows_in_first_round = k / m;\r\n        k -= (rows_in_first_round * m);\r\n        dbg(rows_in_first_round)\r\n        dbg(k)\r\n        if (rows_in_first_round == n) {\r\n            ++maxi, ++mini, ++serg;\r\n            ll rows_in_second_round = k / m;\r\n            k -= (rows_in_second_round * m);\r\n            if (rows_in_second_round or k > 0) ++maxi;\r\n            if (rows_in_second_round > 0 and x != n and x != 1 and n - rows_in_second_round <= x) ++serg;\r\n            else if (x != n and x != 1 and n - rows_in_second_round - 1 == x and k >= y) ++serg;\r\n        } else {\r\n            if (rows_in_first_round) ++maxi;\r\n            if (x <= rows_in_first_round or (x == rows_in_first_round + 1 and k >= y)) serg++;\r\n        }\r\n    }\r\n\r\n    cout << maxi << ' ' << mini << \" \" << serg;\r\n}\r\n\r\nsigned main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n\r\n#ifdef prayutsu\r\n    freopen(\"inputs.txt\", \"r\", stdin);\r\n    freopen(\"outputs.txt\", \"w\", stdout);\r\n    freopen(\"errors.txt\", \"w\", stderr);\r\n#endif\r\n    auto start = high_resolution_clock::now();\r\n//    factorial();\r\n    solve();\r\n    auto stop = high_resolution_clock::now();\r\n    auto duration = duration_cast<microseconds>(stop - start);\r\n\r\n#ifdef prayutsu\r\n    cerr << \"Time: \" << duration.count() / 1000.0 << \" ms\" << endn;\r\n#endif\r\n    return 0;\r\n}"
}