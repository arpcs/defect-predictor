{
    "id": 194245984,
    "contestId": 1726,
    "creationTimeSeconds": 1676818882,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "anishpatil"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 77,
    "timeConsumedMillis": 607,
    "memoryConsumedBytes": 45056000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define pb push_back\r\n#define int long long\r\n#define double long double\r\nint inf=1e18, mod=998244353;\r\nvector <pair<int, int> > adj[200009];\r\nint ans[200009], visited[200009], par[200009], dep[200009];\r\nvoid dfs(int x)\r\n{\r\n    visited[x]=1;\r\n    for(auto it: adj[x])\r\n    {\r\n        if(!visited[it.first])\r\n            dep[it.first]=dep[x]+1, par[it.first]=x, ans[it.second]=1, dfs(it.first);\r\n    }\r\n}\r\nint32_t main()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    #ifndef ONLINE_JUDGE\r\n        freopen(\"input.txt\",\"r\",stdin);\r\n        freopen(\"output.txt\",\"w\",stdout);\r\n    #endif\r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        int n, m;\r\n        cin>>n>>m;\r\n        int x[m], y[m];\r\n        map <int, int> cnt;\r\n        for(int i=0; i<m; i++)\r\n            ans[i]=0;\r\n        for(int i=0; i<=n; i++)\r\n            adj[i].clear(), visited[i]=par[i]=dep[i]=0;\r\n        for(int i=0; i<m; i++)\r\n        {\r\n            cin>>x[i]>>y[i];\r\n            adj[x[i]].pb({y[i], i});\r\n            adj[y[i]].pb({x[i], i});\r\n        }\r\n        dfs(1);\r\n        set <int> st;\r\n        for(int i=0; i<m; i++)\r\n        {\r\n            if(!ans[i])\r\n                st.insert(x[i]), st.insert(y[i]), cnt[x[i]]++, cnt[y[i]]++;       \r\n        }\r\n        if(st.size()==3&&m==n+2)\r\n        {\r\n            int taken=0;\r\n            vector<pair<int,int>> can;\r\n            for(auto v: st) \r\n                can.push_back({dep[v],v});\r\n            sort(can.rbegin(),can.rend());\r\n            int u=can[0].second;\r\n            for(int i=0; i<m; i++)\r\n            {\r\n                if((x[i]==u&&y[i]==par[u])||(x[i]==par[u]&&y[i]==u))\r\n                    ans[i]=0;\r\n                if(((x[i]==u&&y[i]!=par[u])||(x[i]!=par[u]&&y[i]==u))&&taken==0&&ans[i]==0)\r\n                    ans[i]=taken=1;\r\n            }\r\n        }\r\n        for(int i=0; i<m; i++)\r\n            cout<<ans[i];\r\n        cout<<\"\\n\";\r\n    }\r\n}"
}