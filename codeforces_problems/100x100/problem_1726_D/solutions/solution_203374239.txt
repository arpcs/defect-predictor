{
    "id": 203374239,
    "contestId": 1726,
    "creationTimeSeconds": 1682373437,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "3abqreno"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define allam  ios_base::sync_with_stdio(false);cin.tie(nullptr);\r\n#define all(v) v.begin(),v.end()\r\n#define sortv(v) sort(all(v))\r\nusing namespace std;\r\ntypedef long long ll;\r\n\r\nvector <vector <pair<int, int>>> adj;\r\nvector <array <int, 3>> ex;\r\nvector <bool> vis;\r\nvector <int> dep, par;\r\nset <int> st;\r\n\r\nvoid dfs(int cur = 0)\r\n{\r\n    vis[cur] = true;\r\n    for (auto [ch, ed] : adj[cur]) {\r\n        if (!vis[ch]) {\r\n            par[ch] = ed;\r\n            dep[ch] = dep[cur]+1;\r\n            dfs(ch);\r\n        }\r\n        else if (dep[ch] > dep[cur]) {\r\n            ex.push_back({cur, ch, ed});\r\n            st.insert(cur), st.insert(ch);\r\n        }\r\n    }\r\n}\r\n\r\nvoid solve()\r\n{\r\n    int n, m; cin >> n >> m;\r\n    adj.assign(n, {}), vis.assign(n, false);\r\n    dep.assign(n, 0);\r\n    par.resize(n);\r\n    ex.clear(), st.clear();\r\n    for (int i = 0; i < m; i++) {\r\n        int a, b; cin >> a >> b;\r\n        a--, b--;\r\n        adj[a].push_back({b, i});\r\n        adj[b].push_back({a, i});\r\n    }\r\n    dfs();\r\n    string s(m, '0');\r\n    for (auto [a, b, i] : ex) s[i] = '1';\r\n    if (ex.size() == 3 && st.size() == 3) {\r\n        vector <int> rem(st.begin(), st.end());\r\n        sort(rem.begin(), rem.end(), [&](int f, int s) {\r\n            return dep[f] < dep[s];\r\n        });\r\n        for (auto [a, b, i] : ex) {\r\n            if (a == rem[0] && b == rem[2]) s[i] = '0';\r\n        }\r\n        s[par[rem[2]]] = '1';\r\n    }\r\n    cout << s;\r\n}\r\n\r\n\r\nsigned main() {\r\n//    freopen(\"input.txt\", \"r\", stdin);\r\n//    freopen(\"output.txt\", \"w\", stdout);\r\n    allam\r\n\r\n    int _t = 1;\r\n    cin >> _t;\r\n    while (_t--) {\r\n        solve();\r\n        if (_t)cout << '\\n';\r\n    }\r\n\r\n}\r\n\r\n\r\nsigned main() {\r\n//    freopen(\"input.txt\", \"r\", stdin);\r\n//    freopen(\"output.txt\", \"w\", stdout);\r\n    allam\r\n\r\n    int _t = 1;\r\n    cin >> _t;\r\n    while (_t--) {\r\n        solve();\r\n        if (_t)cout << '\\n';\r\n    }\r\n\r\n}"
}