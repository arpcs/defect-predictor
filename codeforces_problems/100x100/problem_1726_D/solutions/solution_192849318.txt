{
    "id": 192849318,
    "contestId": 1726,
    "creationTimeSeconds": 1675940699,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "canonica1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 307200,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <random>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n#define ld long double\r\n#define uint unsigned long long\r\n#define all(a) (a).begin(), (a).end()\r\n#define rall(a) (a).rbegin(), (a).rend()\r\nconst int N = 2e5;\r\nconst int INF = 1e9;\r\nconst int mod = 1e9 + 7;\r\nconst ld EPS = 1e-6;\r\nrandom_device rn;\r\nmt19937 rnd(rn());\r\nvector<int>ans;\r\nvector<vector<pair<int,int>>> G;\r\nvector<int> used;\r\nvector<int>dep;\r\nint k = 0;\r\nvector<int> par;\r\nvoid dfs(int v, int p) {\r\n    par[v] = p;\r\n    used[v] = true;\r\n    for(auto [u,idx] : G[v]) {\r\n        if (!used[u]) {\r\n            ans[idx]= k;\r\n            dep[v]=dep[u]+1;\r\n            dfs(u,v);\r\n        }\r\n    }\r\n}\r\nbool check(int v, int p) {\r\n    used[v]= true;\r\n    for(auto [u, idx] : G[v]) {\r\n        if (ans[idx] == 0) continue;\r\n        if (u == p) {\r\n            continue;\r\n        }\r\n        if (used[u]) return true;\r\n        return check(u,v);\r\n    }\r\n    return false;\r\n}\r\nsigned main() {\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int tt;\r\n    cin >> tt;\r\n    while(tt--) {\r\n        int n, m;\r\n        cin >> n>> m;\r\n        G.assign(n + 1, {});\r\n        ans.assign(m, 1);\r\n        dep.assign(n, 1);\r\n        par.assign(n + 1, 0);\r\n        used.assign(n + 1, 0);\r\n        vector<pair<int,int>> edg;\r\n        for (int i = 0; i < m; ++i) {\r\n            int u,v;\r\n            cin >> u >> v;\r\n            G[u].push_back({v, i});\r\n            G[v].push_back({u, i});\r\n            edg.push_back({u,v});\r\n        }\r\n        k = 0;\r\n        dfs(1,-1);\r\n        used.assign(n + 1, 0);\r\n        map<int,int> cnt;\r\n        for(int i=0;i<m;i++)\r\n        {\r\n            if(ans[i]=='1')\r\n            {\r\n                cnt[edg[i].first]++;\r\n                cnt[edg[i].second]++;\r\n            }\r\n        }\r\n        if(cnt.size()==3) {\r\n            int mn=2*n+5,mx=0;\r\n            for(auto [_,c]:cnt)\r\n            {\r\n                mn=min(mn,c);\r\n                mx=max(mx,c);\r\n            }\r\n            if(mn==mx && mn==2)\r\n            {\r\n                vector<pair<int,int>> can;\r\n                for(auto [v,_]:cnt) can.push_back({dep[v],v});\r\n                sort(can.rbegin(),can.rend());\r\n                int u=can[0].second;\r\n                int i,j;    //replace edge i with edge j\r\n                for(auto [v,idx]:G[u])\r\n                {\r\n                    if(ans[idx]=='0') i=idx;\r\n                    else if(v==par[u])    j=idx;\r\n                }\r\n                ans[i]='1';\r\n                ans[j]='0';\r\n            }\r\n        }\r\n        for (int i = 0; i < m; ++i) {\r\n            cout << ans[i];\r\n        }\r\n        cout << endl;\r\n    }\r\n }"
}