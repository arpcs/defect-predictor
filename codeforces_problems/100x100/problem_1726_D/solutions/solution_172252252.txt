{
    "id": 172252252,
    "contestId": 1726,
    "creationTimeSeconds": 1663250951,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "goodwoman"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 77,
    "timeConsumedMillis": 857,
    "memoryConsumedBytes": 34304000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define ull unsigned long long\r\nconst int maxn = 1e6+10;\r\n \r\n \r\nint a[maxn],b[maxn];\r\n \r\nint f[maxn];\r\n \r\nint find(int x){\r\n    if(f[x]==x)\r\n        return x;\r\n    return f[x] = find(f[x]);\r\n}\r\n \r\nint same(int x,int y){\r\n    if(find(x)==find(y)){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n \r\nint merge(int x,int y){\r\n    if(same(x,y))\r\n        return 0;\r\n    f[find(x)] = find(y);\r\n    return 1;\r\n}\r\npair<int,int>p[maxn];\r\nvoid solve(){\r\n    int n,m;\r\n    cin>>n>>m;\r\n    for(int i = 1;i<=n;i++){\r\n        f[i] = i;\r\n    }\r\n    int s,e;\r\n    vector<vector<pair<int,int>>>v(n+1);\r\n    vector<int>ans(m+1);\r\n    for(int i = 1;i<=m;i++)\r\n        ans[i] = 1;\r\n    for(int i = 1;i<=m;i++){\r\n        cin>>s>>e;\r\n        p[i] = {s,e};\r\n        if(merge(s,e)){\r\n            v[s].push_back({e,i});\r\n            v[e].push_back({s,i});\r\n        }\r\n        else\r\n            ans[i] = 0;  //\u4e0d\u5728\u6700\u5c0f\u751f\u6210\u6811\u5185\r\n    }\r\n    if(n+2==m){\r\n        set<int>ss;\r\n        int now = 0;\r\n        for(int i = 1;i<=m;i++){\r\n            if(!ans[i]){\r\n                ss.insert(p[i].first);\r\n                ss.insert(p[i].second);\r\n                now = i;\r\n            }\r\n        }\r\n        if(ss.size()==3){//\u8bf4\u660e\u662f\u4e09\u5143\u73af\r\n            ans[now] = 1; //\u6807\u7ea2\r\n            int point = p[now].first; //\u4e00\u4e2a\u7aef\u70b9\r\n            for(auto i:v[point]){\r\n                ans[i.second] = 0;\r\n            }\r\n            for(int i = 1;i<=m;i++){\r\n                cout<<ans[i];\r\n            }\r\n            cout<<endl;\r\n        }\r\n        else{\r\n            for(int i = 1;i<=m;i++){\r\n                cout<<ans[i];\r\n            }\r\n            cout<<endl;\r\n        }\r\n    }//\u53ef\u80fd\u4e09\u5143\u73af\r\n    else{\r\n        for(int i = 1;i<=m;i++){\r\n            cout<<ans[i];\r\n        }\r\n        cout<<endl;\r\n    }\r\n}\r\n \r\nint main(){\r\n    ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);\r\n    int t = 1;\r\n    cin>>t;\r\n    while(t--){\r\n        solve();\r\n    }\r\n}"
}