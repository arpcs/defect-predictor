{
    "id": 223460200,
    "contestId": 1726,
    "creationTimeSeconds": 1694770757,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "zhouyuxuan2023"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 77,
    "timeConsumedMillis": 810,
    "memoryConsumedBytes": 50380800,
    "source": "// LUOGU_RID: 124777146\n#include<string>\r\n#include<iostream>\r\n#define ll long long\r\n#define il inline\r\nusing namespace std;\r\nil ll read(){\r\n\tchar c=getchar();\r\n\tll x=0,f=1;\r\n\twhile(!isdigit(c)){\r\n\t\tif(c=='-') f=-1;\r\n\t\tc=getchar();\r\n\t}\r\n\twhile(isdigit(c)) x=x*10+c-'0',c=getchar();\r\n\treturn x*f;\r\n}\r\nil void write(ll x){\r\n\tif(x<0) putchar('-'),x=-x;\r\n\tif(x>9) write(x/10);\r\n\tputchar(x%10+'0');\r\n}\r\nconst ll N=1e6+5,M=2e6+5;\r\nll n,m,fa[N],du[N],nowid;\r\nstruct Edge{\r\n\tll a,b;\r\n}e[M];\r\nil ll find(ll x){\r\n\treturn fa[x]==x?x:fa[x]=find(fa[x]);\r\n}\r\nil void solve(){\r\n\tstring s;\r\n\tn=read();m=read();\r\n\tfor(ll i=1;i<=n;i++) fa[i]=i,du[i]=0;\r\n\tfor(ll i=0;i<m;i++){\r\n\t\tll u(read()),v(read());\r\n\t\te[i]=(Edge){u,v};\r\n\t\tif(find(u)!=find(v)) s.push_back('0');\r\n\t\telse{\r\n\t\t\ts.push_back('1');\r\n\t\t\tdu[u]++;du[v]++;\r\n\t\t\tnowid=i;\r\n\t\t}\r\n\t\tfa[find(u)]=find(v);\r\n\t}\r\n\tbool flag=(m!=n-1);\r\n\tfor(ll i=1;i<=n;i++){\r\n\t\tif(du[i]&&du[i]!=2){\r\n\t\t\tflag=0;break;\r\n\t\t}\r\n\t}\r\n\tif(!flag){\r\n\t\tcout<<s;\r\n\t\treturn;\r\n\t}\r\n\tfor(ll i=1;i<=n;i++) fa[i]=i;\r\n\tfa[find(e[nowid].a)]=find(e[nowid].b);\r\n\tfor(ll i=0;i<m;i++){\r\n\t\tll u(e[i].a),v(e[i].b);\r\n\t\tif(s[i]=='0'){\r\n\t\t\tif(find(u)==find(v)){\r\n\t\t\t\ts[i]='1';break;\r\n\t\t\t}\r\n\t\t\tfa[find(u)]=find(v);\r\n\t\t}\r\n\t}\r\n\ts[nowid]='0';cout<<s;\r\n}\r\nint main(){\r\n\tll T(read());\r\n\twhile(T--) solve(),putchar('\\n');\r\n\treturn 0;\r\n}///////"
}