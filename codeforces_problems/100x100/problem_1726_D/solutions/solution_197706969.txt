{
    "id": 197706969,
    "contestId": 1726,
    "creationTimeSeconds": 1679016568,
    "relativeTimeSeconds": 4168,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "realSub"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1679012400
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 77,
    "timeConsumedMillis": 670,
    "memoryConsumedBytes": 55500800,
    "source": "#include<bits/stdc++.h>\r\n//#define feyn\r\n#define ptt pair<int,int>\r\n#define mp make_pair \r\nusing namespace std;\r\nconst int N=1000010;\r\ninline void read(int &wh){\r\n\twh=0;char w=getchar();int f=1;\r\n\twhile(w<'0'||w>'9'){if(w=='-')f=-1;w=getchar();}\r\n\twhile(w<='9'&&w>='0'){wh=wh*10+w-'0';w=getchar();}\r\n\twh*=f;return;\r\n}\r\n\r\nint m,n;\r\nstruct edge{\r\n\tint t,v,nxt; \r\n}e[N<<1];\r\nint head[N],esum;\r\ninline void add(int fr,int to,int val){\r\n\te[++esum]=(edge){to,val,head[fr]};head[fr]=esum;\r\n}\r\n\r\nint faId[N],u[N],v[N],dep[N];\r\nbool wr[N];\r\nint ti[N],nt;\r\nvoid dfs(int wh,int fa){\r\n\tti[wh]=nt;dep[wh]=dep[fa]+1;\r\n\tfor(int i=head[wh],th;i;i=e[i].nxt){\r\n\t\tif((th=e[i].t)==fa)continue;\r\n\t\tif(ti[th]==nt){wr[e[i].v]=true;continue;}\r\n\t\tfaId[th]=e[i].v;dfs(th,wh);\r\n\t}\r\n}\r\n\r\nvoid solve(int test){\r\n\tread(m);read(n);\r\n\tesum=0;\r\n\tfor(int i=1;i<=m;i++){\r\n\t\thead[i]=faId[i]=0;\r\n\t}\r\n\tfor(int i=1;i<=n;i++){\r\n\t\twr[i]=false;\r\n\t\tread(u[i]);read(v[i]);\r\n\t\tadd(v[i],u[i],i);add(u[i],v[i],i);\r\n\t}\r\n\tif(n==m-1){\r\n\t\tfor(int i=1;i<=n;i++)putchar('1');\r\n\t\tputchar('\\n');return;\r\n\t}\r\n\t++nt;dfs(1,0);\r\n\tif(n!=m+2){\r\n\t\tfor(int i=1;i<=n;i++)putchar('0'+wr[i]);\r\n\t\tputchar('\\n');return;\r\n\t}\r\n\tint data[10],cnt=0,num=0;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tif(wr[i]==false)continue;\r\n\t\tdata[++cnt]=u[i],data[++cnt]=v[i];\r\n\t\t++num;\r\n\t}\r\n\tsort(data+1,data+cnt+1);\r\n\tcnt=unique(data+1,data+cnt+1)-data-1;\r\n\tif(cnt!=3){\r\n\t\tfor(int i=1;i<=n;i++)putchar('0'+wr[i]);\r\n\t\tputchar('\\n');return;\r\n\t}\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tif(wr[i]==false)continue;\r\n\t\tif(dep[u[i]]>dep[v[i]])wr[faId[u[i]]]=true;\r\n\t\telse wr[faId[v[i]]]=true;\r\n\t\twr[i]=false;break;\r\n\t}\r\n\tfor(int i=1;i<=n;i++)putchar('0'+wr[i]);\r\n\tputchar('\\n');return;\r\n}\r\n\r\nsigned main(){\r\n\t\r\n\t#ifdef feyn\r\n\tfreopen(\"in.txt\",\"r\",stdin);\r\n\t#endif\r\n\t\r\n\tint test;read(test);\r\n\tfor(int i=1;i<=test;i++)solve(i);\r\n\t\r\n\treturn 0;\r\n}"
}