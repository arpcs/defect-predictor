{
    "id": 230130057,
    "contestId": 1726,
    "creationTimeSeconds": 1698479157,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "Qinghuan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 311,
    "memoryConsumedBytes": 3174400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int N = 2e5 + 50;\r\nint n, m;\r\nint fa[N], ans[N], u[N], v[N];\r\nset<int> s;\r\n\r\nint get(int x) {\r\n    return fa[x] == x ? x : fa[x] = get(fa[x]);\r\n}\r\n\r\nvoid solve() {\r\n    s.clear();\r\n    cin >> n >> m;\r\n    for(int i = 1; i <= n; i++) fa[i] = i;\r\n    for(int i = 1; i <= m; i++) ans[i] = 0;\r\n    int bj = 0;\r\n    for(int i = 1; i <= m; i++) {\r\n        cin >> u[i] >> v[i];\r\n        int f1 = get(u[i]), f2 = get(v[i]);\r\n        if(f1 == f2) {\r\n            ans[i] = 1;\r\n            s.insert(u[i]);\r\n            s.insert(v[i]);\r\n            bj = i;\r\n        }\r\n        else fa[f1] = fa[f2];\r\n    }\r\n    if(m == n + 2 && s.size() == 3) {\r\n        ans[bj] = 0;\r\n        for(int i = 1; i <= m; i++) {\r\n            if(i == bj) continue;\r\n            if(u[i] == u[bj] || u[i] == v[bj]) \r\n                ans[i] = 1;\r\n        }\r\n    }\r\n    for(int i = 1; i <= m; i++)\r\n        cout << ans[i];\r\n    cout << '\\n';\r\n}\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\r\n    int T; cin >> T;\r\n    while(T--) solve();\r\n    return 0;\r\n}\r\n"
}