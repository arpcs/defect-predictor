{
    "id": 205962050,
    "contestId": 1726,
    "creationTimeSeconds": 1684142571,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "niao_v"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 6656000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long LL;\r\ntypedef long double LD;\r\n// #define int long long\r\n#define For(i,a,b)  for(int i=(a),(i##i)=(b);i<=(i##i);++i)\r\nconst int maxn = 2e5+9, mod = 1e9 + 7, inf = 0x3f3f3f3f;\r\nconst LL _inf = 0x3f3f3f3f3f3f3f3f;\r\nint T, x, y, z, k, n, m, a[maxn];\r\nLL A, B;\r\n\r\nint head[maxn], Next[maxn<<1], ver[maxn<<1], edge[maxn<<1], tot=1;\r\nvoid adde(int x,int y){\r\n    Next[++tot]=head[x], ver[tot]=y, head[x]=tot;\r\n}\r\nvoid adde(int x,int y,int z){\r\n    Next[++tot]=head[x], ver[tot]=y, edge[tot]=z, head[x]=tot;\r\n}\r\n#define foredge(x)  for(int ii=head[x];ii;ii=Next[ii])\r\nbool v[maxn];\r\nvoid dfs(int f,int x){\r\n    v[x]=1;\r\n    foredge(x){\r\n        int y=ver[ii];\r\n        if(y==f||v[y]==1)    continue;\r\n        edge[ii]=edge[ii^1]=1;\r\n        dfs(x,y);\r\n    }\r\n}\r\n\r\nbool dfs2(int f,int x){\r\n    v[x]=1;\r\n    foredge(x){\r\n        int y=ver[ii];\r\n        if(y==f||edge[ii]==1)   continue;\r\n        if(v[y]==1) return false;\r\n        if(dfs2(x,y)==0)    return false;\r\n    }\r\n    return true;\r\n}\r\nint cur=0;\r\nvoid cut(int f,int x){\r\n    v[x]=1;\r\n    foredge(x){\r\n        if(cur==1)  break;\r\n        int y=ver[ii];\r\n        if(y==f||edge[ii]==0)   continue;\r\n        if(v[y]==1){\r\n            edge[ii]=edge[ii^1]=0;\r\n            cur=1;\r\n        }\r\n        else    cut(x,y);\r\n    }\r\n}\r\n\r\nvoid init(){\r\n    cin>>n>>m;\r\n    For(i,1,m)  cin>>x>>y, adde(x,y), adde(y,x);\r\n    dfs(0,1);\r\n    for(int i=2;i<=tot;i+=2){\r\n        if(edge[i]==0){\r\n            For(i,1,n)  v[i]=0;\r\n            int x=ver[i], y=ver[i^1];\r\n            if(dfs2(0,y)==0){\r\n                edge[i]=edge[i^1]=1;\r\n                For(i,1,n)  v[i]=0;\r\n                cur=0;\r\n                cut(0,y);\r\n                for(int i=2;i<=tot;i+=2)    if(edge[i]==0){\r\n                    For(i,1,n)  v[i]=0;\r\n                    int x=ver[i], y=ver[i^1];\r\n                    if(dfs2(0,y)==0)    exit(1);\r\n                    break;\r\n                }\r\n            }   \r\n            break;\r\n        }\r\n    }\r\n    for(int i=2;i<=tot;i+=2)    cout<<edge[i];\r\n    cout<<'\\n';\r\n    For(i,1,n)  v[i]=head[i]=0;\r\n    For(i,2,tot)    edge[i]=0;\r\n    tot=1;\r\n}\r\n\r\nsigned main(){\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0), cout.tie(0);\r\n    cin>>T;\r\n    while(T--)\r\n    init();\r\n\t\r\n\t\r\n\t\r\n\treturn 0;\r\n}"
}