{
    "id": 185118616,
    "contestId": 1726,
    "creationTimeSeconds": 1670958566,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "0_o.Gypsy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 77,
    "timeConsumedMillis": 1138,
    "memoryConsumedBytes": 45977600,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\n#define ll long long\ntemplate <typename T>   using orderedSet =tree<T, null_type, less<T>,rb_tree_tag, tree_order_statistics_node_update>;\n#define pi acos(-1)\n#define pb push_back\n#define pf push_front\n#define el \"\\n\"\n#define pr pair<ll , ll>\n#define ff first\n#define ss second\n#define pc(x) cout << \"Case \" << x << \":\" <<  \" \";\n#define valid(x , y , i , j) (i >= 0 && i < x && j >= 0 && j < y)\n#define MOD 998244353\n#define setbit(x, k) (x | ((long long)1 << k))\n#define clearbit(x, k) (x & ~((long long)1 << k))\n#define checkbit(x, k) (x & ((long long)1 << k))\n#define inf 1e10\n\n\nvector<ll>parent(1000006);\nvector<ll>sze(1000006);\n\nvoid make_set(int v) {\n    for(ll i = 0 ; i <= v ; i++){parent[i] = i;sze[i] = 1;}\n//    parent[v] = v;sze[v] = 1;\n}\n\nint find_set(int v) {\n    if (v == parent[v])\n        return v;\n    return parent[v] = find_set(parent[v]);\n}\n\nvoid union_sets(int a, int b) {\n    a = find_set(a);\n    b = find_set(b);\n    if (a != b) {\n        if (sze[a] < sze[b])\n            swap(a, b);\n        parent[b] = a;\n        sze[a] += sze[b];\n    }\n}\n\nint main()\n{\n\n#ifndef ROKON\n    ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\n#endif // ONLINE_JUDGE\n\n    ///*\n#ifdef ROKON\n    freopen(\"input.cpp\", \"r\", stdin);\n//    freopen(\"output.txt\" , \"w\" , stdout);\n#endif // ONLINE_JUDGE\n    //*/\n\n//\tfor(ll i = 2797 ; i >= 0 ; i--)cout << i << \" \" ;\n\n    int test = 1;\n    cin >> test;\n\n    for(int te = 1 ; te <= test ; te++){\n\t\tll n , m;cin >> n >> m;\n\t\tmake_set(n + 3);\n\t\tvector<pr>all , rg , lf , ser;\n        for(ll i = 0 ; i < m ; i++){\n            ll a , b;cin >> a >> b;\n            ll pa = find_set(a);\n            ll pb = find_set(b);\n            if(pa == pb){\n                lf.pb({a , b});\n            }\n            else{\n                union_sets(a , b);\n                rg.pb({a , b});\n            }\n            ser.pb({a , b});\n        }\n\n\n        ll fl = 0;\n        make_set(n + 3);\n        for(auto x : lf){\n            ll pa = find_set(x.ff);\n            ll pb = find_set(x.ss);\n            if(pa == pb){\n                fl = 1;\n            }\n            else{\n                union_sets(x.ff , x.ss);\n            }\n        }\n\n//            for(auto x : lf)cout << x.ss << \" \" << x.ff << \" , \" ;cout << el;\n//            for(auto x : rg)cout << x.ss << \" \" << x.ff << \" , \" ;cout << el;\n\n\n\n        ll cnt = 0;\n        while(fl == 1){\n            if(cnt++ == 10)break;\n            make_set(n + 3);\n            all.clear();\n//            cout << el << el;for(auto x : lf)cout << x.ss << \" \" << x.ff << \" , \" ;cout << el;\n//            for(auto x : rg)cout << x.ss << \" \" << x.ff << \" , \" ;cout << el;\n            random_shuffle(lf.begin(), lf.end());\n            for(auto  x : lf)all.pb(x);\n            for(auto x : rg)all.pb(x);\n\n            lf.clear();\n            rg.clear();\n            for(auto x : all){\n                ll a = x.ff , b = x.ss;\n                ll pa = find_set(a) , pb = find_set(b);\n                if(pa == pb){\n                    lf.pb({a , b});\n                }\n                else{\n                    union_sets(a , b);\n                    rg.pb({a , b});\n                }\n            }\n            make_set(n + 3);\n            fl = 0;\n            for(auto x : lf){\n                ll a = x.ff , b = x.ss;\n                ll pa = find_set(a) , pb = find_set(b);\n                if(pa == pb){\n                    fl = 1;\n                }\n                else{\n                    union_sets(a , b);\n                }\n            }\n\n        }\n\n//        assert(fl != 1);\n\n        map<pr , ll>mp;\n        for(auto x : lf)mp[x] = 1;\n        for(auto x : rg)mp[x] = 0;\n\n        vector<ll>ans;\n        for(auto x : ser){\n            ans.pb(mp[x]);\n        }\n\n        for(auto x : ans)cout << x ;cout << el;\n\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    return 0;\n}\n"
}