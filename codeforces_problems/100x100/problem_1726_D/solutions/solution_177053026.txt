{
    "id": 177053026,
    "contestId": 1726,
    "creationTimeSeconds": 1666207183,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "AyanVishwakarma"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 716800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint N,m;\r\nvector<vector<pair<int,int>>> adj;\r\nvector<pair<int,int>> edges;\r\nset<int> inds;\r\nvector<int> color,ans,dp;\r\nint v;\r\n\r\nvoid dfs(int x,int p,int k)\r\n{\r\n    color[x] = 1;\r\n    for(auto [to,num]:adj[x])\r\n    if(to != p)\r\n    {\r\n        if(color[to] == 1 and dp[num] == -1)\r\n        inds.insert(num),dp[num] = k;\r\n        if(color[to] == -1)\r\n        dfs(to,x,num);\r\n    }\r\n}\r\n\r\nvoid procedure()\r\n{\r\n    v = -1;\r\n    inds.clear();\r\n    color.assign(N,-1);\r\n    dp.assign(m,-1);\r\n    dfs(0,-1,-1);\r\n    ans.assign(m,1);\r\n    for(auto e:inds)\r\n    ans[e] = 0;\r\n    if(inds.size() == 3)\r\n    {\r\n        set<int> s;\r\n        for(auto e:inds)\r\n        s.insert(edges[e].first),s.insert(edges[e].second);\r\n        if(s.size() == 3)\r\n        {\r\n            ans[dp[*inds.begin()]] = 0;\r\n            ans[*inds.begin()] = 1;\r\n        }\r\n    }\r\n    for(auto e:ans)\r\n    cout<<e;\r\n    cout<<endl;\r\n}\r\n\r\nint main()\r\n{\r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        cin>>N>>m;\r\n        adj.assign(N,vector<pair<int,int>>());\r\n        for(int i=0;i<m;i++)\r\n        {\r\n            int a,b;\r\n            cin>>a>>b;\r\n            a--,b--;\r\n            adj[a].push_back({b,i});\r\n            adj[b].push_back({a,i});\r\n            edges.push_back({a,b});\r\n        }\r\n        procedure();\r\n    }\r\n    return 0;\r\n}"
}