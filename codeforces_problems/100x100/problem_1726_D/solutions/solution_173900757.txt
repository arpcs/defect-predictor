{
    "id": 173900757,
    "contestId": 1726,
    "creationTimeSeconds": 1664442479,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 77,
    "timeConsumedMillis": 623,
    "memoryConsumedBytes": 21196800,
    "source": "#include<bits/stdc++.h>\n#define fir first\n#define sec second\nusing namespace std;\ntypedef long long ll;\nconst int N=2e5+5;\nint n,m,u,v,ans[N],q[N],hd,tl,id[15],fa[N],e[N];pair<int,int> ed[N];\nvector<pair<int,int> > nbr[N];bool vis[N];\nvoid BFS(){\n\twhile(hd<=tl){\n\t\tint cur=q[hd++];\n\t\tfor(auto k:nbr[cur]){\n\t\t\tint nxt=k.fir;if(vis[nxt]) continue;\n\t\t\tans[k.sec]=vis[nxt]=1,q[++tl]=nxt;fa[nxt]=cur,e[nxt]=k.sec;\n\t\t}\n\t}\n\treturn;\n}\nvoid Solve(){\n\tint tmp=0,siz=0,k;for(int i=1;i<=m;i++) if(!ans[i]) tmp=i,id[++siz]=ed[i].fir,id[++siz]=ed[i].sec;\n\tsort(id+1,id+siz+1);siz=unique(id+1,id+siz+1)-id-1;for(int i=1;i<=3;i++) if(id[i]==ed[tmp].fir){k=i;break;}\n\tif(siz!=3) return;ans[e[id[k]]]=0,ans[tmp]=1;return;\n}\nvoid init(){fill(vis+1,vis+n+1,0);fill(ans+1,ans+m+1,0);return;}\nvoid solve(){\n\tscanf(\"%d%d\",&n,&m);init();\n\tfor(int i=1;i<=n;i++) nbr[i].clear();\n\tfor(int i=1;i<=m;i++){\n\t\tscanf(\"%d%d\",&u,&v);ed[i]=make_pair(u,v);\n\t\tnbr[u].emplace_back(v,i),nbr[v].emplace_back(u,i);\n\t}\n\thd=tl=q[1]=vis[1]=1;BFS();Solve();\n\tfor(int i=1;i<=m;i++) putchar(ans[i]+48);puts(\"\");return;\n}\nint main(){\n\tint T;scanf(\"%d\",&T);while(T--) solve();\n\treturn 0;\n}\n/*\nm=n-1+k\nn+1-k\n*/\n\t \t\t\t\t \t\t  \t\t \t   \t  \t\t \t \t \t\t\t"
}