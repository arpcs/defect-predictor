{
    "id": 172375042,
    "contestId": 1726,
    "creationTimeSeconds": 1663347263,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "xenofil"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 819200,
    "source": "#include<bits/stdc++.h>\r\n#include<iostream>\r\n#include <iomanip>\r\n#include<math.h>\r\n#include<fstream>\r\nusing namespace std;\r\n#define ll long long\r\n#define pii pair<int,int>\r\n#define pll pair<ll,ll>\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n#define gap ' '\r\n#define abs(x) ((x)>0?(x):-(x))\r\n#define INF 1e18\r\n#define mod 1000000007\r\n#define inf 1e9\r\n//#define pi 2*acos(0.0)\r\n#include<time.h>\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\nll my_rand(ll l, ll r)\r\n{\r\n    return uniform_int_distribution<ll>(l,r) (rng);\r\n}\r\n\r\nll powr(ll m,ll n)\r\n{\r\n    if(m==1)\r\n        return 1;\r\n    if(n==0)\r\n        return 1;\r\n    if(n==1)\r\n        return m%mod;\r\n    if(n%2)\r\n    {\r\n        ll te=powr(m,n/2);\r\n        return (((te*te)%mod)*(m%mod))%mod;\r\n    }\r\n    else\r\n    {\r\n        ll te=powr(m,n/2);\r\n        return (te*te)%mod;\r\n    }\r\n}\r\nint p[200005];\r\nint Find(int x)\r\n{\r\n    if(p[x]==x) return x;\r\n    return p[x]=Find(p[x]);\r\n}\r\nvoid Union(int x,int y)\r\n{\r\n    p[Find(x)]=Find(y);\r\n}\r\nint main()\r\n{\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    int tc=1;\r\n    cin>>tc;\r\n    for(int tt=1; tt<=tc; tt++)\r\n    {\r\n      int n,m;\r\n      cin>>n>>m;\r\n      string ans;\r\n      for(int i=0;i<=n;i++) p[i]=i;\r\n      for(int i=0;i<m;i++)\r\n      {\r\n          int x,y;\r\n          cin>>x>>y;\r\n          if(Find(x)==Find(y)) ans+='1';\r\n          else\r\n          {\r\n              ans+='0';\r\n              Union(x,y);\r\n          }\r\n\r\n      }\r\n       cout<<ans<<endl;\r\n\r\n\r\n    }\r\n}\r\n"
}