{
    "id": 201785590,
    "contestId": 1726,
    "creationTimeSeconds": 1681279238,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "Alone_but_mast_07"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 77,
    "timeConsumedMillis": 826,
    "memoryConsumedBytes": 38604800,
    "source": "#include <bits/stdc++.h>\r\ntypedef long double ld;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\n#define vi vector<int>\r\n#define vll vector<long long>\r\n#define test() ll t; cin >> t; while(t--)\r\n#define eb emplace_back;\r\n#define pairs pair<int,int>\r\n#define p_q priority_queue\r\n #define pqmax priority_queue<ll>\r\n#define pqmin priority_queue<ll,vector<ll>,greater<ll>>\r\nll mod  = 1000000007;\r\nusing namespace std;\r\n#define f(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))\r\ntemplate<typename T1, typename T2>\r\nostream& operator<<(ostream &ostream, const pair<T1, T2> &p) { return (ostream << p.first << ' '<< p.second); }\r\ntemplate<typename T>\r\nostream& operator<<(ostream &ostream, const vector<T> &c){ for (auto &k : c) cout << k << ' '; return ostream;}\r\n\r\n\r\ntemplate<typename T1, typename T2>istream& operator>>(istream &istream, pair<T1, T2> &p) { return (istream >> p.first >> p.second); }\r\ntemplate<typename T>\r\nistream& operator>>(istream &istream, vector<T> &c){  int n1 = c.size();for(int i=0;i<n1;++i)cin>>c[i];return istream;}\r\n// save out unordered_map from hacking  by using custom hash\r\nstruct custom_hash {\r\nstatic uint64_t splitmix64(uint64_t x) {// http://xorshift.di.unimi.it/splitmix64.c\r\nx += 0x9e3779b97f4a7c15;x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\nx = (x ^ (x >> 27)) * 0x94d049bb133111eb;return x ^ (x >> 31);}\r\nsize_t operator()(uint64_t x) const {\r\nstatic const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\nreturn splitmix64(x + FIXED_RANDOM);}\r\n};\r\n// seive\r\n// -----------------------------------------------------/\r\nvoid process_sieve(ll a1,vector<bool>&primes,ll n){    \r\nll y1 = a1;ll y2 = a1;y1 = y1*y2;\r\nwhile (y1<n){primes[y1] = false;\r\ny2++;y1 = a1*y2;}return ;}\r\nvector<bool> SEIVE(ll n){\r\nvector<bool>primes(n+1,true);\r\nprimes[0] = false;primes[1] = false;\r\nfor(int i=2;i*i<=n;++i){if (primes[i]){\r\nprocess_sieve(i,primes,n);}}\r\nreturn primes;}\r\n// ---------------------------------------------------------\r\n// ---------------------------------------------------------\r\n// Exponentiation for larger power modulo m\r\n//-----------------------------------\r\nll power(ll x,ll y,ll m){if (y==0)return 1;\r\nll ans = power(x,y/2,m);ans = (ans*ans)%m;\r\nif (y%2==1){ans = (ans*x)%m;}return ans%m;}\r\n//----------------------------------\r\n// linear diaphantine equation\r\n// ---------------------------------\r\n// extended euclid algo\r\nclass triplet{public:ll x; ll y;ll GCD;};\r\ntriplet equation(ll a,ll b){if (b==0){triplet t1;t1 = {1,0,a};return t1;}\r\ntriplet ans = equation(b,a%b);triplet ans1;ans1 = {ans.y,ans.x - ans.y*(a/b),ans.GCD};return ans1;}\r\n// -----------------------------------\r\n// modular inverse (m need to be prime)\r\nll modular_inverse(ll a,ll m){ll a2 = power(a,m-2,m);return a2%m;}\r\n// ------------------------------------\r\nll gcd__(ll a,ll b){if (b==0)return a;return gcd__(b,a%b);}\r\n ll __gcd(ll a,ll b){ll m1 = -1;if (a<0)a =m1*a;if (b<0)b = m1*b; return gcd__(max(a,b),min(a,b));}\r\n            // ----------------------\r\n// nCr value\r\n//-------------------\r\nll nCr(ll n,ll r){if (n<r)return 0;r = max(r,n-r);ll ans = 1;for (int i=r+1;i<=n;++i){ans = ans*(ll)i;ans = (ans)%mod;}\r\nll ans1 = 1;for(int i=1;i<=n-r;++i){ans1 = ans1*(ll)i;ans1 = ans1%mod;}ans1 = modular_inverse(ans1,mod);return (ans*ans1)%mod;}\r\n// ------------------------------\r\n// min  heap \r\ntemplate<typename T>class compare{public:bool operator()(T* &s1,T* &s2){return s1->c1 > s2->c1;}\r\n};\r\n// short hand type for sorting out list\r\n// sort(begin(v), end(v), [] (int a, int b) { return a > b; });\r\n// string a = a+x   ---->> takes O(a+x)  time\r\n// string a+=x    ----->> takes O(x)   time;\r\nvoid dfs(int node,int p,vector<pair<int,int>>adj[],vector<bool>&vis,vector<pair<int,int>>&edges,vector<int>&blue){\r\n    vis[node] = 1;\r\n    vector<int>loop;\r\n    vector<int>loops;\r\n    for(auto k:adj[node]){\r\n        if (vis[k.first]){\r\n            loop.push_back(k.second);\r\n            loops.push_back(k.first);\r\n        }\r\n    }\r\n    if (loop.size()==2){\r\n        blue.push_back(loop[0]);\r\n    }\r\n    else if (loop.size()==3){\r\n        if (blue.size()==0){\r\n            blue.push_back(loop[0]);\r\n            blue.push_back(loop[1]);\r\n        }\r\n        else{\r\n            blue.push_back(loop[0]);\r\n            int a1 = edges[blue[0]].first;\r\n            int a2 = edges[blue[0]].second;\r\n            int a3 = loops[0];\r\n            if ((a1==loops[1] || a2 == loops[1]) && (a3==a1 || a3==a2)){\r\n                blue.push_back(loop[2]);\r\n            }\r\n            else{\r\n                blue.push_back(loop[1]);\r\n            }\r\n        }\r\n    }\r\n    else if(loop.size()==4){\r\n        blue.push_back(loop[0]);\r\n        blue.push_back(loop[1]);\r\n        blue.push_back(loop[2]);\r\n        \r\n    }\r\n    for(auto k:adj[node]){\r\n        if (!vis[k.first]){\r\n            dfs(k.first,node,adj,vis,edges,blue);\r\n        }\r\n    }\r\n}\r\nint main() {\r\nios_base::sync_with_stdio(0);\r\ncin.tie(0); cout.tie(0);\r\ntest(){\r\n    int n,m;cin>>n>>m;\r\n    vector<pair<int,int>>adj[n+1];\r\n    vector<pair<int,int>>edges;\r\n    f(i,0,m){\r\n\r\n        int u,v;cin>>u>>v;\r\n        edges.push_back({u,v});\r\n        adj[u].push_back({v,i});\r\n        adj[v].push_back({u,i});\r\n    }\r\n    vector<int>blue;\r\n    vector<bool>vis(n+1,0);\r\n    dfs(1,-1,adj,vis,edges,blue);\r\n    // cout<<\"blue \"<<blue<<'\\n';\r\n    string s1 = \"\";\r\n    f(i,0,m){\r\n        s1+='0';\r\n    }\r\n    for(auto y:blue){\r\n        s1[y]='1';\r\n    }\r\n    cout<<s1<<'\\n';\r\n\r\n}\r\n      return 0;\r\n\r\n\r\n}\r\n\r\n"
}