{
    "id": 172643324,
    "contestId": 1726,
    "creationTimeSeconds": 1663584173,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "hzy0227"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 77,
    "timeConsumedMillis": 1325,
    "memoryConsumedBytes": 15257600,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <cstring>\r\n#include <vector>\r\n#include <cmath>\r\n#include <map>\r\nusing namespace std;\r\n#define endl \"\\n\"\r\n\r\ntypedef long long ll;\r\ntypedef pair<int, int> PII;\r\n\r\nconst int N = 1e6 + 10;\r\nint n, m;\r\nstruct Edge\r\n{\r\n\tint u, v;\r\n}e[N];\r\n\r\nint blue[4];\r\nbool st[N];\r\nint fa[N], cnt;\r\nmap<int, int> mp;\r\nvoid init()\r\n{\r\n\tfill(st, st + m + 2, false);\r\n\tfor (int i = 1; i <= n; i++)\r\n\t\tfa[i] = i;\r\n\tmp.clear();\r\n\tcnt = 0;\r\n}\r\n\r\nint find(int x)\r\n{\r\n\tif (x == fa[x])\r\n\t\treturn x;\r\n\treturn fa[x] = find(fa[x]);\r\n}\r\n\r\nvoid out_ans()\r\n{\r\n\tfor (int i = 1; i <= m; i++)\r\n\t{\r\n\t\tif (st[i])\r\n\t\t\tprintf(\"1\");\r\n\t\telse\r\n\t\t\tprintf(\"0\");\r\n\t}\r\n\tputs(\"\");\r\n}\r\nvoid solve()\r\n{\r\n\tfor (int i = 1; i <= m; i++)\r\n\t{\r\n\t\tauto [u, v] = e[i];\r\n\t\tint pu = find(u), pv = find(v);\r\n\t\tif (pu == pv)\r\n\t\t{\r\n\t\t\tblue[++cnt] = i;\r\n\t\t\tst[i] = true;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tfa[pu] = pv;\r\n\t}\r\n\tif (cnt <= 2)\r\n\t{\r\n\t\tout_ans();\r\n\t\treturn;\r\n\t}\r\n\tfor (int i = 1; i <= cnt; i++)\r\n\t\tmp[e[blue[i]].u]++, mp[e[blue[i]].v]++;\r\n\tif (mp.size() != 3)\r\n\t{\r\n\t\tout_ans();\r\n\t\treturn;\r\n\t}\r\n\tinit();\r\n\tint x = blue[1], y = blue[2], z = blue[3];\r\n\tfa[find(e[x].u)] = find(e[x].v);\r\n\tst[y] = st[z] = true;\r\n\tfor (int i = 1; i <= m; i++)\r\n\t{\r\n\t\tif (i == x|| i == y || i == z)\r\n\t\t\tcontinue;\r\n\t\tauto [u, v] = e[i];\r\n\t\tint pu = find(u), pv = find(v);\r\n\t\tif (pu == pv)\r\n\t\t{\r\n\t\t\tblue[++cnt] = i;\r\n\t\t\tst[i] = true;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tfa[pu] = pv;\r\n\t}\r\n\tout_ans();\r\n}\r\nint main()\r\n{\r\n\tint T;\r\n\tscanf(\"%d\", &T);\r\n\twhile(T--)\r\n\t{\r\n\t\tscanf(\"%d%d\", &n, &m);\r\n\t\tinit();\r\n\t\tfor (int i = 1; i <= m; i++)\r\n\t\t\tscanf(\"%d%d\", &e[i].u, &e[i].v);\r\n\t\tsolve();\r\n\t}\r\n    return 0;\r\n}"
}