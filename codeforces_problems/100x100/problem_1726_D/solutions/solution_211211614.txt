{
    "id": 211211614,
    "contestId": 1726,
    "creationTimeSeconds": 1687849763,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "bkifhr8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 77,
    "timeConsumedMillis": 592,
    "memoryConsumedBytes": 3993600,
    "source": "#include<bits/stdc++.h>\n// #define int long long\n#define debug(x) cout << #x << \" = \" << x << endl\n#define debug2(x,y) cout << #x << \" = \" << x << \" \" << #y << \" = \"<< y << endl\nusing namespace std;\n\ntypedef long long LL;\ntypedef unsigned long long uLL; \ntypedef pair<int, int> pii;\nconst int mod = 998244353;\nconst int maxn = 2e5 + 10;\nconst double eps = 1e-9;\n\nint gcd(int a, int b) { return b ? gcd(b, a % b) : a; }\ninline LL qpow(int b, int p, int k) { LL ans = 1, base = b; while(p) { if(p & 1) ans = ans * base % k; p >>= 1; base = base * base % k; } return ans; }\n\nint f1[maxn], f2[maxn], ans[maxn];\npii e[maxn];\n\nint find(int x, int* f) { return f[x] == x ? x : f[x] = find(f[x], f); }\n\ninline void solve() {\n    int n, m;\n    cin >> n >> m;\n    for(int i = 1; i <= m; i++) cin >> e[i].first >> e[i].second;\n    \n    while(1) {\n        for(int i = 1; i <= n; i++) f1[i] = f2[i] = i;\n        bool flag = 1;\n        for(int i = 1; i <= m; i++) {\n            auto [u, v] = e[i];\n            int x1 = find(u, f1), y1 = find(v, f1);\n            int x2 = find(u, f2), y2 = find(v, f2);\n            if(x1 != y1 && x2 != y2) {\n                ans[i] = rand() % 2;\n                if(ans[i])\n                    f1[x1] = y1;\n                else f2[x2] = y2;\n            }\n            else if(x1 != y1) {\n                ans[i] = 1;\n                f1[x1] = y1;\n            }\n            else if(x2 != y2) {\n                ans[i] = 0;\n                f2[x2] = y2;\n            }\n            else {\n                flag = 0;\n                break;\n            }\n        }\n        if(flag) {\n            for(int i = 1; i <= m; i++)\n                cout << ans[i];\n            cout << endl;\n            return;\n        }\n    }\n}\n\nsigned main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr); cout.tie(nullptr);\n    \n    int T = 1;\n    cin >> T;\n    while(T--) {\n        solve();\n    }\n    return 0;\n}\n\t\t  \t\t\t\t \t\t\t\t \t\t  \t \t   \t  \t\t\t"
}