{
    "id": 213276138,
    "contestId": 1726,
    "creationTimeSeconds": 1689076641,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "fhq7103"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n#define int long long\r\n#define yes \"Yes\\n\"\r\n#define no \"No\\n\"\r\n#define pii pair<int, int>\r\nconst int N = 500 + 10;\r\n//const int mod = 998244353;\r\nconst int mod = 1e9 + 7;\r\n\r\nint n, m, ans[N], fa[N];\r\nstruct node {\r\n    int x, y, id;\r\n    bool vis;\r\n};\r\nvector<node> e;\r\n\r\nint find(int x) {\r\n    return x == fa[x] ? x : fa[x] = find(fa[x]);\r\n}\r\n\r\nvoid un(int x, int y) {\r\n    fa[find(y)] = find(x);\r\n}\r\n\r\nvoid solve() {\r\n    cin >> n >> m;\r\n    e.clear();\r\n    for (int i = 1; i <= n; i++) fa[i] = i;\r\n    for (int i = 1; i <= m; i++) {\r\n        int x, y;\r\n        cin >> x >> y;\r\n        e.push_back({x, y, i, false});\r\n    }\r\n    for (int i = 0; i < m; i++) {\r\n        int x = e[i].x, y = e[i].y;\r\n        if (find(x) != find(y)) {\r\n            un(x, y);\r\n            e[i].vis = true;\r\n        }\r\n        cout << e[i].vis;\r\n    }\r\n    cout << \"\\n\";\r\n}\r\n\r\nsigned main() {\r\n    ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);\r\n    int T = 1;\r\n    cin >> T;\r\n    while (T--) {\r\n        solve();\r\n    }\r\n}"
}