{
    "id": 189093235,
    "contestId": 1726,
    "creationTimeSeconds": 1673609047,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "hcywoi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 514,
    "memoryConsumedBytes": 3686400,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define x first\r\n#define y second\r\n#define IOS std::ios::sync_with_stdio(false)\r\n#define cit std::cin.tie(0)\r\n#define cot std::cout.tie(0)\r\n#define setp std::setprecision\r\n\r\ntypedef long long LL;\r\ntypedef unsigned long long ULL;\r\ntypedef std::pair<int, int> PII;\r\n\r\nconst int N = 200010, M = 100010, MOD = 1e9 + 7;\r\nconst int INF = 0x3f3f3f3f;\r\nconst LL LLINF = 0x3f3f3f3f3f3f3f3f;\r\nconst double eps = 1e-8;\r\n\r\nint n, m;\r\nint p[N], d[N];\r\n\r\nstruct Edge\r\n{\r\n\tint a, b;\r\n}e[N];\r\n\r\nint find(int x)\r\n{\r\n\tif (p[x] != x) p[x] = find(p[x]);\r\n\treturn p[x];\r\n}\r\n\r\nvoid solve();\r\n\r\nint main()\r\n{\r\n    IOS;\r\n    cit, cot;\r\n    int T = 1;\r\n    std::cin >> T;\r\n    while (T -- ) solve();\r\n    return 0;\r\n}\r\n\r\nvoid solve()\r\n{\r\n\tstd::cin >> n >> m;\r\n\tfor (int i = 1; i <= n; i ++ ) p[i] = i, d[i] = 0;\r\n\t\r\n\tstd::string res;\r\n\tint id;\r\n\tfor (int i = 0; i < m; i ++ )\r\n\t{\r\n\t\tint a, b;\r\n\t\tstd::cin >> a >> b;\r\n\t\te[i] = {a, b};\r\n\t\tif (find(a) != find(b)) res.push_back('0');\r\n\t\telse\r\n\t\t{\r\n\t\t\td[a] ++, d[b] ++ ;\r\n\t\t\tid = i;\r\n\t\t\tres.push_back('1');\r\n\t\t}\r\n\t\tp[find(a)] = find(b);\r\n\t}\r\n\t\r\n\tbool flag = true;\r\n\tfor (int i = 1; i <= n; i ++ )\r\n\t\tif (d[i] && d[i] != 2)\r\n\t\t{\r\n\t\t\tflag = false;\r\n\t\t\tbreak;\r\n\t\t}\r\n\tif (!flag || n == m - 1) std::cout << res << std::endl;\r\n\telse\r\n\t{\r\n\t\tfor (int i = 1; i <= n; i ++ ) p[i] = i;\r\n\t\tp[find(e[id].a)] = find(e[id].b);\r\n\t\tfor (int i = 0; i < m; i ++ )\r\n\t\t\tif (res[i] == '0')\r\n\t\t\t{\r\n\t\t\t\tif (find(e[i].a) == find(e[i].b))\r\n\t\t\t\t{\r\n\t\t\t\t\tres[i] = '1';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tp[find(e[i].a)] = find(e[i].b);\r\n\t\t\t}\r\n\t\tres[id] = '0';\r\n\t\tstd::cout << res << std::endl;\r\n\t}\r\n}\r\n"
}