{
    "id": 175296969,
    "contestId": 1726,
    "creationTimeSeconds": 1665368165,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "cy1999"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 77,
    "timeConsumedMillis": 655,
    "memoryConsumedBytes": 36249600,
    "source": "// Hydro submission #63438062dfbd31945163685b@1665368162778\n#include<iostream>\r\n#include<cstdio>\r\n#include<cstring>\r\n#include<algorithm>\r\n#include<vector>\r\nusing namespace std;\r\nconst int N=2e5+9;\r\nstruct node{\r\n\tint y,id;\r\n};\r\nstruct point{\r\n\tint x,c;\r\n};\r\nint n,m,fa[N],d[N];\r\nvector<node> e[N];\r\nvector<point> p;\r\nshort vis[N],use[N];\r\nvoid dfs(int x,int f)\r\n{\r\n\tvis[x]=1,d[x]=d[f]+1;\r\n\tfor(auto v:e[x])\r\n\t{\r\n\t\tint y=v.y;\r\n\t\tif(y==f || vis[y])\tcontinue;\r\n\t\tdfs(y,x);\r\n\t\tuse[v.id]=1,fa[y]=v.id;\r\n\t}\r\n}\r\nint read()\r\n{\r\n\tint x=0,m=1;char ch=getchar();\r\n\twhile(ch<'0' || ch>'9'){if(ch=='-') m=-1;ch=getchar();}\r\n\twhile(ch>='0' && ch<='9'){x=x*10+ch-'0';ch=getchar();}\r\n\treturn x*m;\r\n}\r\nint main()\r\n{\r\n\tint t=read();\r\n\twhile(t--)\r\n\t{\r\n\t\tn=read(),m=read();\r\n\t\tfor(int i=1;i<=n;i++)\te[i].clear();\r\n\t\tfor(int i=1;i<=m;i++)\r\n\t\t{\r\n\t\t\tint x=read(),y=read();\r\n\t\t\te[x].push_back((node){y,i});\r\n\t\t\te[y].push_back((node){x,i});\r\n\t\t}\r\n\t\tfill(vis+1,vis+n+1,0);\r\n\t\tfill(use+1,use+m+1,0);\r\n\t\tdfs(1,0);\r\n\t\tp.clear();\r\n\t\tfor(int i=1;i<=n;i++)\r\n\t\t{\r\n\t\t\tint cnt=0;\r\n\t\t\tfor(auto v:e[i])\r\n\t\t\t\tif(!use[v.id])\t++cnt;\r\n\t\t\tif(cnt)\tp.push_back((point){i,cnt});\r\n\t\t}\r\n\t\tint tag=0;\r\n\t\tfor(auto v:p)\r\n\t\t\tif(v.c==1)\ttag=1;\r\n\t\tif(!tag)\r\n\t\t{\r\n\t\t\tint now=0;\r\n\t\t\tfor(auto v:p)\r\n\t\t\t\tif(d[v.x]>d[now])\tnow=v.x;\r\n\t\t\tfor(auto v:e[now])\r\n\t\t\t{\r\n\t\t\t\tif(!use[v.id])\r\n\t\t\t\t{\r\n\t\t\t\t\tuse[v.id]=1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tuse[fa[now]]=0;\r\n\t\t}\t\r\n\t\tfor(int i=1;i<=m;i++)\r\n\t\t{\r\n\t\t\tif(use[i])\tputchar('0');\r\n\t\t\telse\tputchar('1');\r\n\t\t}\r\n\t\tputs(\"\");\r\n\t}\r\n\treturn 0;\r\n} \r\n/*\r\n1\r\n5 7\r\n1 2\r\n2 3\r\n3 4\r\n4 5\r\n5 1\r\n1 3\r\n3 5\r\n */"
}