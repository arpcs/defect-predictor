{
    "id": 217840745,
    "contestId": 1726,
    "creationTimeSeconds": 1691486710,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "juan_123"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 1684,
    "memoryConsumedBytes": 24064000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nint fa[500005];\r\nint find(int x){\r\n\tif(fa[x] == x)return x;\r\n\treturn fa[x] = find(fa[x]);\r\n}void merge(int a,int b){fa[find(a)] = find(b);}\r\nint a[500005],b[500005],p[500005],fa1[500005],ans[500005];\r\nint find1(int x){\r\n\tif(fa1[x] == x)return x;\r\n\treturn fa1[x] = find(fa1[x]);\r\n}void merge1(int x,int y){fa1[find1(x)] = find1(y);}\r\nvoid solve(int t,int tot){\r\n\tint n,m;cin >> n >> m;\r\n\tfor(int i = 1;i<=m;i++)cin >> a[i] >> b[i];\r\n\tif(tot >=1000 and t ==149){\r\n\t\tcout << n << \" \" << m<<endl;\r\n\t\tfor(int i = 1;i<=n;i++)cout<<a[i]<<' '<<b[i]<<endl;\r\n\t}\r\n\tfor(int i = 1;i<=m;i++)p[i] = i;int cnt =0;\r\n\twhile(1){cnt++;\r\n\t\tfor(int i = 1;i<=n;i++)fa[i] = fa1[i] = i;\r\n\t\trandom_shuffle(p+1,p+1+m);\r\n\t\tint ok = 1;\r\n\t\tfor(int i =1;i<=m;i++){\r\n\t\t\tint x = a[p[i]],y = b[p[i]];\r\n\t\t\tif(find(x)==find(y)){\r\n\t\t\t\tans[p[i]] = 1;\r\n\t\t\t\tif(find1(x) == find1(y))ok = 0;\r\n\t\t\t\tmerge1(x,y);\r\n\t\t\t}\r\n\t\t\telse ans[p[i]] = 0;\r\n\t\t\tmerge(x,y);\r\n\t\t}if(ok or cnt>1000){\r\n\t\t\tif(tot<1000)for(int i = 1;i<=m;i++)cout << ans[i];cout << endl;break;\r\n\t\t}\r\n\t}\r\n}\r\nsigned main(){\r\n\tsrand(time(0));\r\n\tint t;cin >> t;\r\n\tfor(int  i= 1;i<=t;i++)solve(i,t);\r\n\treturn 0;\r\n\t\r\n}"
}