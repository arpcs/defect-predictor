{
    "id": 59642903,
    "contestId": 1197,
    "creationTimeSeconds": 1567049288,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1197,
        "index": "A",
        "name": "DIY Wooden Ladder",
        "type": "PROGRAMMING",
        "rating": 900,
        "tags": [
            "greedy",
            "math",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1197,
        "members": [
            {
                "handle": "...0o__o0..."
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563806100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 3993600,
    "source": "#include<bits/stdc++.h>\n\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n#define ios ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n#define hell1 1e9+7\n#define hell2 1e9+9\n#define pi 3.1415926535\n#define ms(s, n) memset(s, n, sizeof(s))\n#define prec(n) fixed<<setprecision(n)\n#define eps 0.000001\n#define all(v) v.begin(), v.end()\n#define allr(v) v.rbegin(), v.rend()\n#define ll long long\n#define ld long double \n#define no_of_digits(n) floor(log10(n)) + 1\n#define see(x) cout << (#x) << \" is \" << (x) << endl\n#define INF 1e9\n// memset(array, -1, sizeof(array[0][0]) * row * count)\nusing namespace std;\n\nll mult(ll a,ll b, ll p=hell1){   return ((a%p)*(b%p))%p; }\nll multbig(ll a,ll b,ll mod=hell1){   if(a==0 or b==0) return 0;if(a==1 or b==1) return (a*b)%mod;ll cur=multbig(a,b/2,mod);cur=(2*cur)%mod;if(b%2) cur=(cur+a)%mod;return cur;\n}\nll add(ll a, ll b, ll p=hell1){ if(a>=p) a%=p; if(b>=p) b%=p; if(a+b>p) return (a + b)%p; else return a+b;}\nll sub(ll a, ll b, ll p=hell1){return (a%p - b%p + p)%p;}\nll fpow(ll n, ll k, ll p = hell1) {ll r = 1; for (; k; k >>= 1) {if (k & 1) r = mult(r,n,p); n = mult(n,n,p);} return r;}\nll inv(ll a, ll p = hell1) {return fpow(a, p - 2, p);}\nll inv_euclid(ll a, ll m = hell1){ll m0 = m;ll y = 0, x = 1;if (m == 1)return 0;while (a > 1){ll q = a / m;ll t = m;m = a % m, a = t;t = y;y = x - q * y;x = t;}if (x < 0)x += m0;return x;}\nint isPowerof2(ll x) { return (x && !(x & x-1)); } \nll log2(ll x) { ll res = 0; while (x >>= 1) res++; return res; } \nbool isPerfectSquare(long double x) {long double sr = sqrt(x); return ((sr - floor(sr)) == 0); }\n\n// max({a, b, c, d})\n\nvector<ll>adj[200005];\nll update[200005];\n// ll ans[200005];\n\nint binaryToDecimal(string n) \n{ \n    string num = n; \n    int dec_value = 0; \n  \n    // Initializing base value to 1, i.e 2^0 \n    int base = 1; \n  \n    int len = num.length(); \n    for (int i = len - 1; i >= 0; i--) { \n        if (num[i] == '1') \n            dec_value += base; \n        base = base * 2; \n    } \n  \n    return dec_value; \n} \n\nint main()\n{\n    int t;\n\n    cin >> t;\n\n    while(t--)\n    {\n        int n,k;\n        cin >> n;\n\n        int a[n];\n        ll ans = 0;\n\n        for(int i=0;i<n;i++)\n            cin >> a[i];\n\n        sort(a, a+n);\n        \n        for(int i=n-1;i>0;i--)\n        {\n            if(n-2 >= a[i-1]-1)\n            {\n                ans = a[i-1]-1;\n                break;\n            }\n        }\n\n        cout << ans << \"\\n\";\n    }\n}\n\n\n\n"
}