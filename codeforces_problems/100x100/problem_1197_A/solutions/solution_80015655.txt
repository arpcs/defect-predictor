{
    "id": 80015655,
    "contestId": 1197,
    "creationTimeSeconds": 1589401207,
    "relativeTimeSeconds": 307,
    "problem": {
        "contestId": 1197,
        "index": "A",
        "name": "DIY Wooden Ladder",
        "type": "PROGRAMMING",
        "rating": 900,
        "tags": [
            "greedy",
            "math",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1197,
        "members": [
            {
                "handle": "mban259"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1589400900
    },
    "programmingLanguage": "Mono C#",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 135,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 22835200,
    "source": "using System;\r\nusing System.Linq;\r\nusing CompLib.Util;\r\n\r\npublic class Program\r\n{\r\n\r\n    public void Solve()\r\n    {\r\n        var sc = new Scanner();\r\n        int t = sc.NextInt();\r\n        Console.SetOut(new System.IO.StreamWriter(Console.OpenStandardOutput()) { AutoFlush = false });\r\n        for (int i = 0; i < t; i++)\r\n        {\r\n            Console.WriteLine(Q(sc.NextInt(), sc.IntArray()));\r\n        }\r\n        Console.Out.Flush();\r\n    }\r\n\r\n    string Q(int n, int[] a)\r\n    {\r\n        if (n <= 2) return \"0\";\r\n        Array.Sort(a);\r\n\r\n\r\n        return Math.Min(a[n - 2] - 1, n - 2).ToString();\r\n    }\r\n\r\n    public static void Main(string[] args) => new Program().Solve();\r\n}\r\n\r\nnamespace CompLib.Util\r\n{\r\n    using System;\r\n    using System.Linq;\r\n\r\n    class Scanner\r\n    {\r\n        private string[] _line;\r\n        private int _index;\r\n        private const char Separator = ' ';\r\n\r\n        public Scanner()\r\n        {\r\n            _line = new string[0];\r\n            _index = 0;\r\n        }\r\n\r\n        public string Next()\r\n        {\r\n            while (_index >= _line.Length)\r\n            {\r\n                _line = Console.ReadLine().Split(Separator);\r\n                _index = 0;\r\n            }\r\n\r\n            return _line[_index++];\r\n        }\r\n\r\n        public int NextInt() => int.Parse(Next());\r\n        public long NextLong() => long.Parse(Next());\r\n        public double NextDouble() => double.Parse(Next());\r\n        public decimal NextDecimal() => decimal.Parse(Next());\r\n        public char NextChar() => Next()[0];\r\n        public char[] NextCharArray() => Next().ToCharArray();\r\n\r\n        public string[] Array()\r\n        {\r\n            _line = Console.ReadLine().Split(Separator);\r\n            _index = _line.Length;\r\n            return _line;\r\n        }\r\n\r\n        public int[] IntArray() => Array().Select(int.Parse).ToArray();\r\n        public long[] LongArray() => Array().Select(long.Parse).ToArray();\r\n        public double[] DoubleArray() => Array().Select(double.Parse).ToArray();\r\n        public decimal[] DecimalArray() => Array().Select(decimal.Parse).ToArray();\r\n    }\r\n}\r\n"
}