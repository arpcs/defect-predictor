{
    "id": 73448255,
    "contestId": 1197,
    "creationTimeSeconds": 1584409387,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1197,
        "index": "A",
        "name": "DIY Wooden Ladder",
        "type": "PROGRAMMING",
        "rating": 900,
        "tags": [
            "greedy",
            "math",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1197,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563806100
    },
    "programmingLanguage": "Python 3",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 135,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 7680000,
    "source": "def get_max_steps(l):\n    l.sort()\n    k = 0\n    lower_base = min(l[-1], l[-2])\n\n    for i in range(len(l) - 2):\n        if k + 1 < lower_base:\n            k += 1\n    \n    return k\n\nn = int(input())\n\nfor _ in range(n):\n    t = input()\n    lengths = list(map(int, input().split()))\n\n    print(get_max_steps(lengths))\n    \n  \t \t\t     \t    \t\t\t \t \t  \t\t\t \t"
}