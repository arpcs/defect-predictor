{
    "id": 136100009,
    "contestId": 1197,
    "creationTimeSeconds": 1637259335,
    "relativeTimeSeconds": 635,
    "problem": {
        "contestId": 1197,
        "index": "A",
        "name": "DIY Wooden Ladder",
        "type": "PROGRAMMING",
        "rating": 900,
        "tags": [
            "greedy",
            "math",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1197,
        "members": [
            {
                "handle": "agarwala2512"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1637258700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 135,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 819200,
    "source": "//                                                             Jai Bajrang Bali\r\n\r\n// #pragma GCC optimize(\"O1\")\r\n// #pragma GCC optimize(\"O2\")\r\n// #pragma GCC optimize(\"Ofast\")\r\n// #pragma GCC target(\"avx,avx2,fma\")\r\n\r\n#include<bits/stdc++.h>\r\n// #include <ext/pb_ds/assoc_container.hpp>\r\n// #include <ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\n// using namespace __gnu_pbds;;\r\n//````````````````````````````````````````````````````````````````````````````````````````````````````````````\r\n#define db1(x)                cout<<#x<<\": \"<<x<<\"\\n\"\r\n#define db2(x, y)             cout<<#x<<\": \"<<x<<\" | \"<<#y<<\": \"<<y<<\"\\n\"\r\n#define db3(x, y, z)          cout<<#x<<\":\" <<x<<\" | \"<<#y<<\": \"<<y<<\" | \"<<#z<<\": \"<<z<<\"\\n\"\r\n#define db4(a, b, c, d)       cout<<#a<<\": \"<<a<<\" | \"<<#b<<\": \"<<b<<\" | \"<<#c<<\": \"<<c<<\" | \"<<#d<<\": \"<<d<<\"\\n\"\r\n#define db5(a, b, c, d, e)       cout<<#a<<\": \"<<a<<\" | \"<<#b<<\": \"<<b<<\" | \"<<#c<<\": \"<<c<<\" | \"<<#d<<\": \"<<d<<\" | \"<<#e<<\": \"<<e<<\"\\n\"\r\n\r\n//````````````````````````````````````````````````````````````````````````````````````````````````````````````\r\n#define ll long long\r\n#define int long long\r\n#define ld long double\r\n#define ull unsigned long long\r\n#define  mt make_tuple\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define ins insert\r\n#define setbits(x)      __builtin_popcountll(x)\r\n#define l_zeros(x)      __builtin_clzll(x)\r\n#define t_zeros(x)      __builtin_ctzll(x)\r\n#define fbo(a) find_by_order(a) //will give a-th largest element\r\n#define ook(a) order_of_key(a) //will give no. of elements strictly lesser than a\r\n#define str string\r\n#define fo(i,a,n) for(int i=a;i<n;i++)\r\n#define eb emplace_back\r\n#define ff first\r\n#define ss second\r\n#define pb push_back\r\n#define nl '\\n'\r\n#define sz(x) ((int)(x).size())\r\n\r\n//````````````````````````````````````````````````````````````````````````````````````````````````````````````\r\ntypedef map<int, int> mll;\r\ntypedef unordered_map<int, int> umll;\r\ntypedef vector<int> vll;\r\ntypedef vector<string> vstr;\r\ntypedef pair<int, int> pll;\r\ntypedef vector<pll> vpll;\r\n// typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>ordered_set;\r\n// typedef map < int , tree < int , null_type , less < int > , rb_tree_tag , tree_order_statistics_node_update  > > ordered_map;\r\n\r\n//````````````````````````````````````````````````````````````````````````````````````````````````````````````\r\n#define all(a)     a.begin(),a.end()\r\n#define allr(a)    a.rbegin(),a.rend()\r\n#define mem(a,x)   memset(a,x,sizeof(a))\r\n#define sp(x,y)    fixed<<setprecision(y)<<x\r\n#define bhaag_basanti ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n\r\n//````````````````````````````````````````````````````````````````````````````````````````````````````````````\r\nconst int N = 1e6 + 5;\r\nconst int mod = 1e9 + 7;\r\nconst int M = 998244353;\r\nconst long long inf = 1e18 + 1;\r\n\r\n//````````````````````````````````````````````````````````````````````````````````````````````````````````````\r\nvoid mistakes_imp() {\r\n    // directed mai if (x==par) use maat krna. :)\r\n    // mod ke baad sort krne jesa kaam kch maat kro\r\n    // TREE mai tle dega ki nai isse chk kro (1->2)(1->3)(1->4)..(1->n) wala tree\r\n    // (x^y) isko hamesha bracket mai band rkhna ya koi v bitwise ops ho.\r\n    // if you think your approach is correct (but still wa), generate random tc using generator,and verify youself\r\n    // this will make sure that your implementation is correct or not\r\n    // whenever you are solving a problem of graph, always consider the cases for non-connecetd graph,cycles and related stuff.\r\n}\r\n\r\nvoid code_with_accuracy() {\r\n\r\n    int n;\r\n    cin >> n;\r\n    int a[n];\r\n    fo(i, 0, n) {\r\n        cin >> a[i];\r\n    }\r\n    sort(a, a + n);\r\n    cout << min(n - 2, a[n - 2] - 1) << '\\n';\r\n\r\n}\r\nint32_t main()\r\n{\r\n    bhaag_basanti\r\n    int t = 1;\r\n    cin >> t;\r\n    // cin.ignore(); must be there when using getline(cin, s)\r\n    while (t--) {\r\n        code_with_accuracy();\r\n    }\r\n}"
}