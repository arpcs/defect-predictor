{
    "id": 1499145,
    "contestId": 164,
    "creationTimeSeconds": 1333898654,
    "relativeTimeSeconds": 1154,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "ChuckLin2014"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 3,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 130,
    "memoryConsumedBytes": 7168000,
    "source": "//By Lin\n#include<cstdio>\n#include<cstring>\n#define maxn 100005\nusing namespace std; \n\nint\t\tn,m,cnt,s[maxn]; \nbool\tmark[maxn],ans[maxn]; \nint\t\tdata[maxn][2]; \nbool\tfirst; \n\nstruct\tEdge{\n\tint to; \n\tEdge *next; \n}*mat[maxn], edges[maxn]; \n\nvoid\tlink(int x, int to )\n{\n\tedges[cnt].to = to; \n\tedges[cnt].next =mat[x]; \n\tmat[x] = &edges[cnt++]; \n}\n\nvoid\tdfs(int x ,int k )\n{\n\tmark[x] = true; \n\tif ( !first && s[x] == 1 ) return; \n\tfor ( Edge *p = mat[x]; p ; p = p->next )\n\t{\n\t\tint to =p->to; \n\t\tif (mark[to] ) continue; \n\t\tdfs(to , k+1); \n\t}\n}\n\nint\t\tmain()\n{\n\tscanf(\"%d%d\", &n, &m ); \n\tfor (int i = 1; i<=n; i++) scanf(\"%d\", &s[i] ); \n\tfor (int i = 0; i<m; i++)\n\t\tscanf(\"%d%d\", &data[i][0] , &data[i][1] ); \n\tfor (int i = 0; i<m; i++)\n\t\tlink( data[i][0] , data[i][1] ); \n\tfirst = true; \n\tfor (int i = 1; i<=n; i++)\n\t\tif ( !mark[i] && s[i] == 1 ) dfs( i,0 ); \n\n\tfor (int i = 1; i<=n; i++) ans[i] = mark[i];\n\tmemset( mark , false , sizeof(mark) ); \n\tmemset( mat , 0 , sizeof(mat) ); \n\tcnt = 0; \n\tfor (int i = 0; i<m; i++)\n\t\tlink( data[i][1] , data[i][0] ); \n\tfirst = false; \n\tfor (int i = 1; i<=n; i++)\n\t\tif ( !mark[i] && s[i] == 2 ) dfs( i,0 ); \n\n\tfor (int i = 1; i<=n; i++)\n\t\tif ( ans[i] && mark[i] ) printf(\"1\\n\"); \n\t\telse printf(\"0\\n\"); \n\treturn 0; \n}\n"
}