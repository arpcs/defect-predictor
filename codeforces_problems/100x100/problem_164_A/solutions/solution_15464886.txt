{
    "id": 15464886,
    "contestId": 164,
    "creationTimeSeconds": 1453363344,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 7884800,
    "source": "#include<bits/stdc++.h>\n#define rep(i,n) for(i=1;i<=n;i++)\nusing namespace std;\nconst int maxn=1e5+100;\nstruct Edge\n{\n\tvoid insert(int a,int b)\n\t{\n\t\tx=a,y=b;\n\t}\n\tint x,y;\n};\nmap<int,int>flag[maxn];\nEdge l[maxn];\nint New_n,New_val[maxn];\nint val[maxn],dfn[maxn],low[maxn],belong[maxn],t,n,m;\nint fir[maxn],Next[maxn*2],End[maxn*2],size;\nbool InStack[maxn],ans[maxn],tag[maxn];\nstack<int>sta;\nvoid addedge(int x,int y)\n{\n\t++size;\n\tNext[size]=fir[x];\n\tfir[x]=size;\n\tEnd[size]=y;\n}\nvoid tarjan(int v)\n{\n\tdfn[v]=low[v]=++t;\n\tsta.push(v);\n\tInStack[v]=true;\n\tfor(int u=fir[v];u;u=Next[u])\n\t{\n\t\tint ed=End[u];\n\t\tif(val[ed]==1)continue;\n\t\tif(!dfn[ed])\n\t\t{\n\t\t\ttarjan(ed);\n\t\t\tlow[v]=min(low[v],low[ed]);\n\t\t}\n\t\telse if(InStack[ed])\n\t\t{\n\t\t\tlow[v]=min(low[v],dfn[ed]);\n\t\t}\n\t}\n\tif(dfn[v]==low[v])\n\t{\n\t\t++New_n;\n\t\tint u=0;\n\t//\tcout<<'{';\n\t\twhile(1)\n\t\t{\n\t\t\tint temp=sta.top();\n\t\t\tsta.pop();\n\t\t\tInStack[v]=false;\n\t\t\tbelong[temp]=New_n;\n\t\t//\tcout<<temp<<' ';\n\t\t\tif(val[temp])u=val[temp];\n\t\t\tif(temp==v)break;\n\t\t}\n\t//\tcout<<\"}\\n\";\n\t\tNew_val[New_n]=u;\n\t}\n}\nbool dfs(int v)\n{\n\t//printf(\"v=%d\\n\",v);\n\ttag[v]=true;\n\tif(New_val[v]==1)return true;\n\tfor(int u=fir[v];u;u=Next[u])\n\t{\n\t\tint ed=End[u];\n\t\tif(!tag[ed])\n\t\t\tans[ed]=dfs(ed);\n\t\tif(ans[ed])ans[v]=true;\n\t}\n\treturn ans[v];\n}\nint main()\n{\n\tscanf(\"%d%d\",&n,&m);\n\tint i;\n\trep(i,n)scanf(\"%d\",&val[i]);\n\trep(i,m)\n\t{\n\t\tint x,y;\n\t\tscanf(\"%d%d\",&x,&y);\n\t\taddedge(y,x);\n\t\tl[i].insert(y,x);\n\t}\n\trep(i,n)\n\t\tif(!dfn[i])\n\t\t\ttarjan(i);\n\t//rep(i,New_n)cout<<\"val=\"<<New_val[i]<<endl;\n\tmemset(fir,0,sizeof(fir));\n\tmemset(Next,0,sizeof(Next));\n\tmemset(End,0,sizeof(End));\n\tsize=0;\n\trep(i,m)\n\t{\n\t\tint x=belong[l[i].x],y=belong[l[i].y];\n\t\tif(x!=y && flag[x].find(y)==flag[x].end())\n\t\t{\n\t\t//\tprintf(\"x=%d y=%d\\n\",x,y);\n\t\t\taddedge(x,y);\n\t\t\tflag[x][y]=1;\n\t\t}\n\t}\n\trep(i,New_n)\n\t\tif(New_val[i]==2 && !tag[i])\n\t\t\tans[i]=dfs(i);\n\trep(i,n)\n\t\tif(ans[belong[i]])\n\t\t\tprintf(\"1\\n\");\n\t\telse printf(\"0\\n\");\n\treturn 0;\n}\n\t \t \t  \t\t \t\t   \t\t\t\t \t\t \t  \t   \t"
}