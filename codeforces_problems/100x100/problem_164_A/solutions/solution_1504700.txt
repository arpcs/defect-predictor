{
    "id": 1504700,
    "contestId": 164,
    "creationTimeSeconds": 1333909892,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "MeHdi.KaZemI8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 90,
    "memoryConsumedBytes": 3686400,
    "source": "#include <vector>\r\n#include <vector>\r\n#include <list>\r\n#include <map>\r\n#include <set>\r\n#include <deque>\r\n#include <queue>\r\n#include <stack>\r\n#include <bitset>\r\n#include <algorithm>\r\n#include <functional>\r\n#include <numeric>\r\n#include <utility>\r\n#include <string.h>\r\n#include <sstream>\r\n#include <iostream>\r\n#include <iomanip>\r\n#include <cstdio>\r\n#include <cmath>\r\n#include <cstdlib>\r\n#include <ctime>\r\nusing namespace std;\r\n\r\n#define MOD 1000000007 \r\n#define INF 1000000000\r\ntypedef long long  ll;\r\ntypedef unsigned long long  ull;\r\ntypedef pair<ll,ll> pii;\r\n#define SIZE 100100\r\n\r\nvector <int> adj[SIZE];\r\nint f[SIZE];\r\nint n, m;\r\nvector <int> start;\r\nbool good[SIZE];\r\nbool mark[SIZE];\r\n\r\nbool dfs(int v)\r\n{\r\n\t//cout << \"V \" << v << endl;\r\n\tmark[v] = true;\r\n\tif(f[v] == 2)\r\n\t{\r\n\t\tgood[v] = true;\r\n\t\treturn true;\r\n\t}\r\n\t/*if(good[v] == true)\r\n\t{\r\n\t\treturn good[v];\r\n\t}*/\r\n\t\r\n\tfor(int i = 0; i < adj[v].size(); i ++)\r\n\t{\r\n\t\tint u = adj[v][i];\r\n\t\tif(f[u] != 1)\r\n\t\t{\r\n\t\t\tif(mark[u] == false)\r\n\t\t\t{\r\n\t\t\t\tgood[v] |= dfs(u);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tgood[v] |= good[u];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn good[v];\r\n}\r\n\r\nvector <pii> edge;\r\n\r\nint main()\r\n{\r\n\tcin >> n >> m;\r\n\tfor(int i = 1; i <= n; i ++)\r\n\t{\r\n\t\tcin >> f[i];\r\n\t\tif(f[i] == 1)\r\n\t\t\tstart.push_back(i);\r\n\t}\r\n\tint a, b;\r\n\tfor(int i = 0; i < m; i ++)\r\n\t{\r\n\t\tcin >> a >> b;\r\n\t\tadj[a].push_back(b);\r\n\t\tedge.push_back( pii(a, b) );\r\n\t}\r\n\t\r\n\tmemset(good, 0, sizeof good);\r\n\tfor(int i = 0; i < start.size(); i ++)\r\n\t{\r\n\t\tmemset(mark, 0, sizeof mark);\r\n\t\tdfs(start[i]);\r\n\t\tmemset(mark, 0, sizeof mark);\r\n\t\tdfs(start[i]);\r\n\t}\r\n\t\r\n\tfor(int i = 1; i <= n; i ++)\r\n\t\tcout << good[i] << endl;\r\n\r\n\treturn 0;\r\n}\r\n"
}