{
    "id": 1499015,
    "contestId": 164,
    "creationTimeSeconds": 1333898480,
    "relativeTimeSeconds": 980,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "iwiwi"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 2,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 270,
    "memoryConsumedBytes": 10854400,
    "source": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cctype>\n#include <cmath>\n#include <cassert>\nusing namespace std;\n\n#define all(c) (c).begin(), (c).end()\n#define iter(c) __typeof((c).begin())\n#define cpresent(c, e) (find(all(c), (e)) != (c).end())\n#define rep(i, n) for (int i = 0; i < (int)(n); i++)\n#define tr(c, i) for (iter(c) i = (c).begin(); i != (c).end(); ++i)\n#define pb(e) push_back(e)\n#define mp(a, b) make_pair(a, b)\n\nint N, M;\nint A[100010];\nvector<int> adj[100010];\nvector<int> rev[100010];\n\nbool asg[100010];\nbool usd[100010];\n\nvoid dfs_asg(int v) {\n  if (asg[v]) return;\n  asg[v] = true;\n  // if (A[v] == 2) return;\n\n  rep (i, adj[v].size()) dfs_asg(adj[v][i]);\n}\n\nvoid dfs_usd(int v) {\n  if (usd[v]) return;\n  usd[v] = true;\n  if (A[v] == 1) return;\n\n  rep (i, rev[v].size()) dfs_usd(rev[v][i]);\n}\n\nint main() {\n  bool first = true;\n  while (2 == scanf(\"%d%d\", &N, &M)) {\n    if (first) first = false; else puts(\"\");\n\n    rep (i, N) scanf(\"%d\", &A[i]);\n\n    rep (i, N) adj[i].clear(), rev[i].clear();\n    rep (i, M) {\n      int a, b;\n      scanf(\"%d%d\", &a, &b);\n      --a; --b;\n      adj[a].pb(b);\n      rev[b].pb(a);\n    }\n\n    memset(asg, 0, sizeof(asg));\n    memset(usd, 0, sizeof(usd));\n    rep (v, N) {\n      if (A[v] == 1) dfs_asg(v);\n      if (A[v] == 2) dfs_usd(v);\n    }\n\n    rep (v, N) printf(\"%d\\n\", asg[v] && usd[v] ? 1 : 0);\n  }\n\n  return 0;\n}\n\n\n"
}