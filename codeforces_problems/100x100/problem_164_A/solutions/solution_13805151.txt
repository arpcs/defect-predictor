{
    "id": 13805151,
    "contestId": 164,
    "creationTimeSeconds": 1445590145,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "8Ehsan8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 186,
    "memoryConsumedBytes": 6758400,
    "source": "#include <cstdio>\r\n#include <cstring>\r\n#include <climits>\r\n#include <cmath>\r\n#include <iostream>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <string>\r\n#include <queue>\r\n#include <stack>\r\n#include <map>\r\n\r\nusing namespace std;\r\n\r\n#define MAXN 100001\r\n\r\nvector<int> L[MAXN],L2[MAXN];\r\nint f[MAXN];\r\nbool done1[MAXN],done2[MAXN];\r\n\r\nint main(){\r\n    int n,m;\r\n    \r\n    scanf(\"%d %d\",&n,&m);\r\n    \r\n    for(int i = 1;i <= n;++i)\r\n        scanf(\"%d\",&f[i]);\r\n    \r\n    for(int i = 0,u,v;i < m;++i){\r\n        scanf(\"%d %d\",&u,&v);\r\n        \r\n        L[u].push_back(v);\r\n        L2[v].push_back(u);\r\n    }\r\n    \r\n    queue<int> Q;\r\n    \r\n    for(int i = 1;i <= n;++i)\r\n        if(f[i] == 1){\r\n            done1[i] = true;\r\n            Q.push(i);\r\n        }\r\n    \r\n    while(!Q.empty()){\r\n        int cur = Q.front();\r\n        Q.pop();\r\n        \r\n        for(int j = L[cur].size() - 1;j >= 0;--j){\r\n            int to = L[cur][j];\r\n            \r\n            if(!done1[to] && f[to] != 1){\r\n                done1[to] = true;\r\n                Q.push(to);\r\n            }\r\n        }\r\n    }\r\n    \r\n    for(int i = 1;i <= n;++i)\r\n        if(f[i] == 2){\r\n            done2[i] = true;\r\n            Q.push(i);\r\n        }\r\n    \r\n    while(!Q.empty()){\r\n        int cur = Q.front();\r\n        Q.pop();\r\n        \r\n        for(int j = L2[cur].size() - 1;j >= 0;--j){\r\n            int to = L2[cur][j];\r\n            \r\n            if(!done2[to] && f[to] != 1){\r\n                done2[to] = true;\r\n                Q.push(to);\r\n            }else if(f[to] == 1) done2[to] = true;\r\n        }\r\n    }\r\n    \r\n    for(int i = 1;i <= n;++i)\r\n        puts(done1[i] && done2[i]? \"1\" : \"0\");\r\n    \r\n    return 0;\r\n}"
}