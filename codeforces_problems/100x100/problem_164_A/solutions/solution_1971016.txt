{
    "id": 1971016,
    "contestId": 164,
    "creationTimeSeconds": 1343914518,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 7475200,
    "source": "#include <cstdlib>\n#include <cctype>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <iostream>\n#include <sstream>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <fstream>\n#include <numeric>\n#include <iomanip>\n#include <bitset>\n#include <list>\n#include <stdexcept>\n#include <functional>\n#include <utility>\n#include <ctime>\nusing namespace std;\n\n#define PB push_back\n#define MP make_pair\n\nconst double pi = 3.1415926535;\nconst double eps = 1e-6;\n\nint n, m, now, la[110000], ro[210000], pr[210000], st[110000], bl[110000], s[110000];\nint lar[110000], ror[210000], prr[210000];\nqueue <int> Q;\nvoid ins(int a, int b)\n{\n\tnow++;\n\tpr[now] = la[a];\n\tla[a] = now;\n\tro[now] = b;\n\t\n\tprr[now] = lar[b];\n\tlar[b] = now;\n\tror[now] = a;\n}\n\nint main()\n{\n\tscanf(\"%d%d\", &n, &m);\n\tfor (int i = 1; i <= n; i++)\n\t\tscanf(\"%d\", &st[i]);\n\tmemset(bl, 0, sizeof bl);\n\tfor (int i = 1; i <= n; i++)\n\t\tif (st[i] == 1)\n\t\t\tQ.push(i), bl[i] = 1;\n\tfor (int i = 1; i <= m; i++) {\n\t\tint a1, a2;\n\t\tscanf(\"%d%d\", &a1, &a2);\n\t\tins(a1, a2);\n\t}\n\twhile (!Q.empty()) {\n\t\tint x = Q.front();\n\t\tQ.pop();\n\t\tfor (int tmp = la[x]; tmp; tmp = pr[tmp])\n\t\t\tif (!bl[ro[tmp]]) {\n\t\t\t\tbl[ro[tmp]] = 1;\n\t\t\t\tif (st[ro[tmp]] == 0 || st[ro[tmp]] == 2)\n\t\t\t\t\tQ.push(ro[tmp]);\n\t\t\t}\n\t}\n\tmemcpy(s, bl, sizeof bl);\n\tmemset(bl, 0, sizeof bl);\n\tfor (int i = 1; i <= n; i++)\n\t\tif (st[i] == 2)\n\t\t\tQ.push(i), bl[i] = 1;\n\twhile (!Q.empty()) {\n\t\tint x = Q.front();\n\t\tQ.pop();\n\t\tfor (int tmp = lar[x]; tmp; tmp = prr[tmp])\n\t\t\tif (!bl[ror[tmp]]) {\n\t\t\t\tbl[ror[tmp]] = 1;\n\t\t\t\tif (st[ror[tmp]] == 0 || st[ror[tmp]] == 2)\n\t\t\t\t\tQ.push(ror[tmp]);\n\t\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (s[i] && bl[i])\n\t\t\tprintf(\"%d\\n\", 1);\n\t\telse\n\t\t\tprintf(\"%d\\n\", 0);\n}\n\n\t \t  \t  \t\t  \t \t\t   \t      \t"
}