{
    "id": 1503367,
    "contestId": 164,
    "creationTimeSeconds": 1333904518,
    "relativeTimeSeconds": 7018,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "izban"
            }
        ],
        "participantType": "OUT_OF_COMPETITION",
        "ghost": false,
        "room": 105,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "MS C++",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 300,
    "memoryConsumedBytes": 7372800,
    "source": "#include <iostream>\r\n#include <string>\r\n#include <map> \r\n#include <math.h>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <cstdio>\r\n#include <set>\r\n#include <queue>\r\n#include <sstream>\r\n\r\n\r\nusing namespace std;\r\n\r\n#define sqr(x) ((x)*(x))\r\n#define PB(a) push_back(a)\r\n#define MP(a) make_pair(a)\r\n#define ll long long\r\n\r\nint gcd(int a, int b) {\r\n\twhile (b) b^=a^=b^=a%=b;\r\n\treturn a;\r\n}\r\n\r\nconst int maxn=100100;\r\n\r\nint n,m,ld;\r\nint f[maxn],gf;\r\nint dd[maxn];\r\nvector<int> e[maxn];\r\nbool vis[maxn];\r\nbool ans[maxn];\r\nbool cur[maxn];\r\n\r\n\r\n/*int dfs(int v, bool k) {\r\n\tvector <int> costyl; costyl.clear();\r\n\tint w=-1,ww=0;\r\n\tif (f[v]==2) ans[v]=true;\r\n\tvis[v]=cur[v]=true;\r\n\tif (ans[v]) k=true;\r\n\tfor (int i=0; i<e[v].size(); i++) if (f[e[v][i]]!=1) {\r\n\t\tif (cur[e[v][i]] && k) \r\n\t\t\tans[v]=true;\r\n\t\tif (!vis[e[v][i]]) { \r\n\t\t\tif ((ww=dfs(e[v][i],k))==-1) costyl.push_back(e[v][i]);\r\n\t\t}\r\n\t\tans[v]|=ans[e[v][i]];\r\n\t} else if (cur[e[v][i]]) w=e[v][i];\r\n\tif (ans[v]) {\r\n\t\tfor (int i=0; i<costyl.size(); i++)\r\n\t\t\tdfs(costyl[i],true);\r\n\t}\r\n\tcur[v]=false;\r\n\tif (w!=-1 && ans[w]) {\r\n\t\tans[v]=true;\r\n\t\treturn 0;\r\n\t}\r\n\tif (!ans[v] && w!=-1) return -1;\r\n\treturn ww;\r\n}*/\r\n\r\n/*void dfs(int v, bool k) {\r\n\tif (f[v]==2) ans[v]=true;\r\n\tvis[v]=cur[v]=true;\r\n\tif (ans[v]) k=true;\r\n\tfor (int i=0; i<e[v].size(); i++) if (f[e[v][i]]!=1) {\r\n\t\tif (cur[e[v][i]] && k) \r\n\t\t\tans[v]=true;\r\n\t\tif (!vis[e[v][i]]) { \r\n\t\t\tdfs(e[v][i],k || ans[v]);\r\n\t\t}\r\n\t\tans[v]|=ans[e[v][i]];\r\n\t} else if (cur[e[v][i]] && ans[e[v][i]]) ans[v]=true;\r\n\r\n\tcur[v]=false;\r\n}*/\r\n\r\nvoid dfs(int v, bool k, int d) {\r\n\tdd[v]=d;\r\n\tint pd=-1;\r\n\tif (f[v]==2) ans[v]=true;\r\n\tvis[v]=cur[v]=true;\r\n\tif (ans[v]) {\r\n\t\tk=true;\r\n\t\tpd=ld;\r\n\t\tld=d;\r\n\t}\r\n\tfor (int i=0; i<e[v].size(); i++) if (f[e[v][i]]!=1) {\r\n\t\tif (cur[e[v][i]] && k && dd[e[v][i]]<=ld) \r\n\t\t\tans[v]=true;\r\n\t\tif (!vis[e[v][i]]) { \r\n\t\t\tdfs(e[v][i],k,d+1);\r\n\t\t}\r\n\t\tans[v]|=ans[e[v][i]];\r\n\t}\r\n\tcur[v]=false;\r\n\tif (k) ld=pd;\r\n}\r\n\r\n\r\nint main() {\r\n#ifndef ONLINE_JUDGE\r\n\tfreopen(\"input.txt\", \"r\", stdin);\r\n\tfreopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n\r\n\tcin >> n >> m;\r\n\tfor (int i=0; i<n; i++)\r\n\t\tcin >> f[i];\r\n\tfor (int i=0; i<m; i++) {\r\n\t\tint x,y;\r\n\t\tcin >> x >> y;\r\n\t\te[x-1].push_back(y-1);\r\n\t}\r\n\t\r\n\tfor (int i=0; i<n; i++) {\r\n\t\tif (f[i]==1) {\r\n\t\t\tdfs(i,false,0);\r\n\t\t}\r\n\t}\r\n\t/*for (int i=0; i<n; i++) vis[i]=false;\r\n\tfor (int i=0; i<n; i++) {\r\n\t\tif (f[i]==1) {\r\n\t\t\tdfs(i,false);\r\n\t\t}\r\n\t}*/\r\n\r\n\tfor (int i=0; i<n; i++) \r\n\t\tcout << (int)ans[i] << ' ';\r\n\treturn 0;\r\n}"
}