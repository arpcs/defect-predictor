{
    "id": 15464134,
    "contestId": 164,
    "creationTimeSeconds": 1453360058,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 19148800,
    "source": "#include<iostream>\n#include<algorithm>\n#include<cstdio> \n#include<cstring>\n#include<cmath>\n#include<map>\n#include<queue> \n#include<vector>\n#define endl dsfdsfsdfsd\nusing namespace std;\nint i,j,n,m,t,a[600000],b[600000],x,y,tot,pre[1000000],last[1000000],endl[1000000];\nbool bo[600000],p[1000000],bb[600000];\nvoid setl(int a, int b) {\n\tpre[++tot] = last[a];\n\tlast[a] = tot;\n\tendl[tot] = b;\n\tp[tot] = true;\n}\nbool find(int x) {\n\tif (bb[x]) return (bo[x]);\n\tbb[x] = true;\n\tbool k = false;\n\tif (a[x] == 1) {\n\t\tbo[x] = true;\n\t    return true;\n    }\n\tif (bo[x]) return true;\n\tfor (int i = last[x]; i; i = pre[i]) {\n\t\tif(p[i]) {\n\t\t    p[i] = false;\n\t\t    if (find(endl[i])) {\n\t\t        k = true;\n\t\t        bo[x] = true;\n\t\t    }\n\t\t\tp[i] = true;    \n\t\t}\n\t}\n\treturn k;\n} \nint main() {\n\tscanf(\"%d %d\", &n, &m);\n\tfor (i = 1; i <= n; i++) {\n\t    scanf(\"%d\", &a[i]);\n\t    if (a[i] == 2) b[++t] = i;\n\t}\n\tfor (i = 1; i <= m; i++) {\n\t\tscanf(\"%d %d\", &x, &y);\n\t\tsetl(y, x);\n\t}\n\tfor (i = 1; i <= t; i++) {\n\t\t bb[b[i]] = true;\n\t\t for (j = last[b[i]]; j; j = pre[j]) {\n\t\t\tp[j] = false;\n\t\t\tif (find(endl[j])) bo[b[i]] = true;\n\t\t\tp[j] = true;\n\t\t}\n\t}\n\tfor (i = 1; i <= n; i++) printf(\"%d\\n\", bo[i]);\n} \n\t \t \t   \t \t\t\t    \t\t      \t\t\t \t\t"
}