{
    "id": 1502351,
    "contestId": 164,
    "creationTimeSeconds": 1333903066,
    "relativeTimeSeconds": 5566,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "Hynek"
            }
        ],
        "participantType": "OUT_OF_COMPETITION",
        "ghost": false,
        "room": 106,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 450,
    "memoryConsumedBytes": 7475200,
    "source": "#include <cstdio>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <cmath>\r\n#include <cctype>\r\n#include <iostream>\r\n#include <sstream>\r\n#include <string>\r\n#include <vector>\r\n#include <list>\r\n#include <queue>\r\n#include <set>\r\n#include <map>\r\n#include <stack>\r\n#include <algorithm>\r\n#include <iomanip>\r\n\r\nusing namespace std;\r\n\r\n#define FOR(i,n) for (int i = 0; i < (n); i++)\r\n#define FORTO(i,a,b) for (int i = (a); i <= (b); i++)\r\n#define FORD(i,n) for (int i = (n)-1; i >= 0; i--)\r\n\r\n#define DEBUG(x) cout << '>' << #x << ':' << (x) << endl;\r\n#define SIZE(x) int(x.size())\r\n\r\ntypedef pair<int, int> PII;\r\ntypedef long long ll;\r\n\r\n//////////////////////////////////////////////////////////////////\r\n\r\nint n, m;\r\nint st, a, b;\r\nvector <int> state;\r\nvector <vector <int> > next, prev;\r\nvector <bool> reach, need;\r\nqueue <int> Visit, Needed;\r\n\r\nint main()\r\n{\r\n    //freopen(\"b.in\", \"r\", stdin);\r\n    cin >> n >> m;\r\n    state.resize(n);\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        cin >> st;\r\n        state[i] = st;\r\n\t}\r\n\tnext.resize(n);\r\n\tprev.resize(n);\r\n    for(int i=0; i<m; i++)\r\n    {\r\n        cin >> a >> b;\r\n        a --;\r\n        b --;\r\n        if(state[b] != 1)\r\n        {\r\n            next[a].push_back(b);\r\n            prev[b].push_back(a);\r\n        }\r\n\t}\r\n\treach.resize(n);\r\n\tfor(int i=0; i<n; i++)\r\n    {\r\n        if(state[i] == 1)\r\n        {\r\n            Visit.push(i);\r\n            reach[i] = 1;\r\n        }\r\n    }\r\n    while(!(Visit.empty()))\r\n    {\r\n        int x = Visit.front();\r\n        Visit.pop();\r\n        for(int i=0; i<next[x].size(); i++)\r\n        {\r\n            int y = next[x][i];\r\n            if(!(reach[y]))\r\n            {\r\n                reach[y] = 1;\r\n                Visit.push(y);\r\n            }\r\n        }\r\n    }\r\n    need.resize(n);\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        if(state[i] == 2 && reach[i])\r\n        {\r\n            Needed.push(i);\r\n            need[i] = 1;\r\n        }\r\n    }\r\n    while(!(Needed.empty()))\r\n    {\r\n        int x = Needed.front();\r\n        Needed.pop();\r\n        for(int i=0; i<prev[x].size(); i++)\r\n        {\r\n            int y = prev[x][i];\r\n            if(!(need[y]))\r\n            {\r\n                need[y] = 1;\r\n                Needed.push(y);\r\n            }\r\n        }\r\n    }\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        cout << (reach[i] && need[i] ? 1 : 0) << endl;\r\n    }\r\n    return 0;\r\n}\r\n"
}