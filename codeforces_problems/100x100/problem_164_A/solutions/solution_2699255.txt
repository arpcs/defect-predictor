{
    "id": 2699255,
    "contestId": 164,
    "creationTimeSeconds": 1354780613,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "UESTC_ElemeNtLz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 234,
    "memoryConsumedBytes": 9420800,
    "source": "#include <iostream>\r\n#include <sstream>\r\n#include <string>\r\n#include <vector>\r\n#include <deque>\r\n#include <queue>\r\n#include <set>\r\n#include <map>\r\n#include <algorithm>\r\n#include <functional>\r\n#include <utility>\r\n#include <cmath>\r\n#include <cstdlib>\r\n#include <ctime>\r\n#include <cstring>\r\n#include <cstdio>\r\n\r\nusing namespace std;\r\n\r\n#define mp make_pair\r\n#define MAXN 100005\r\n\r\nint N,M;\r\nint v[MAXN] ;\r\nvector<int> e[MAXN] , e2[MAXN] ;\r\nbool f1[MAXN] , f2[MAXN] ;\r\n\r\nvoid dfs1(int u){\r\n      f1[u] = 1 ;\r\n      for (int i = 0 ; i < e[u].size();i++){\r\n            int v = e[u][i] ;\r\n            if (!f1[v])\r\n                  dfs1(v) ;\r\n      }\r\n}\r\n\r\nvoid dfs2(int u){\r\n      f2[u] = 1 ;\r\n      if (v[u]==1) return ;\r\n      for (int i = 0 ; i < e2[u].size();i++){\r\n            int v = e2[u][i] ;\r\n            if (!f2[v])\r\n                  dfs2(v) ;\r\n      }\r\n}\r\n\r\nint main()\r\n{\r\n      scanf(\"%d%d\",&N,&M);\r\n      for (int i = 0 ; i < N ; i++)\r\n            scanf(\"%d\",&v[i]);\r\n      for (int i = 0 ; i < M ; i++){\r\n            int u , v ; scanf(\"%d%d\",&u,&v);\r\n            u-- ; v-- ;\r\n            e[u].push_back(v);\r\n            e2[v].push_back(u);\r\n      }\r\n      memset(f1,false,sizeof(f1));\r\n      memset(f2,false,sizeof(f2));\r\n      for (int i = 0 ; i < N ; i++)\r\n            if (!f1[i] && v[i]==1)\r\n                  dfs1(i);\r\n      for (int i = 0 ; i < N ; i++)\r\n            if (!f2[i] && v[i]==2)\r\n                  dfs2(i);\r\n      for (int i = 0 ; i < N ; i++)\r\n            printf(\"%d\\n\",f1[i]&f2[i]);\r\n      return 0;\r\n}\r\n"
}