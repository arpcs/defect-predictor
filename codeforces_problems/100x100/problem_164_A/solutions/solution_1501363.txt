{
    "id": 1501363,
    "contestId": 164,
    "creationTimeSeconds": 1333901310,
    "relativeTimeSeconds": 3810,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "vilcheuski"
            }
        ],
        "participantType": "OUT_OF_COMPETITION",
        "ghost": false,
        "room": 104,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "FPC",
    "verdict": "RUNTIME_ERROR",
    "testset": "PRETESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 50,
    "memoryConsumedBytes": 23552000,
    "source": "var n,m,i,j,k,q:longint;\r\n    a,left,right:array[0..200001] of longint;\r\n    used:array[0..200001] of boolean;\r\n    dostup,first,last,dostup2:array[0..200001] of longint;\r\n\r\nprocedure swap(Var t,y:longint);\r\nvar u:longint;\r\nbegin\r\nu:=t; t:=y; y:=u;\r\nend;\r\n\r\nprocedure sort(l,r:longint);\r\nvar i,j,x,y,num:longint;\r\nbegin\r\n num:=random(r-l)+l;\r\n x:=left[num];\r\n y:=right[num];\r\n i:=l; j:=r;\r\n repeat\r\n while (left[i]<x) or ((left[i]=x) and (right[i]<y)) do inc(i);\r\n while (left[j]>X) or ((left[j]=x) and (right[j]>y)) do dec(j);\r\n if i<=j then\r\n  begin\r\n   swap(left[i],left[j]);\r\n   swap(Right[i],right[j]);\r\n   inc(i);\r\n   dec(j);\r\n  end;\r\n until i>j;\r\n if l<J then sort(l,j);\r\n if i<r then sort(i,r);\r\nend;\r\n\r\nprocedure rec(ver:longint);\r\nvar i,num:longint;\r\nbegin\r\n dostup[ver]:=1;\r\n if first[ver]=0 then exit;\r\n for i:= first[ver] to last[ver] do\r\n  begin\r\n\r\n   num:=right[i];\r\n   if num = 0 then exit;\r\n   if a[num]=2 then\r\n    begin\r\n     dostup[num]:=1;\r\n     continue;\r\n    end;\r\n   if a[num]<>0 then continue;\r\n   if used[num]=false then continue;\r\n   rec(num);\r\n  end;\r\nend;\r\n\r\nprocedure rec2(ver:longint);\r\nvar i,num:longint;\r\nbegin\r\n dostup2[ver]:=1;\r\n if first[ver]=0 then exit;\r\n for i:= first[ver] to last[ver] do\r\n  begin\r\n   num:=right[i];\r\n   if num = 0 then exit;\r\n   if a[num]=1 then\r\n    begin\r\n     dostup2[num]:=1;\r\n     continue;\r\n    end;\r\n   if a[num]<>0 then continue;\r\n   if used[num]=false then continue;\r\n\r\n   rec2(num);\r\n  end;\r\nend;\r\n\r\n\r\n\r\n\r\nbegin\r\n fillchar(used,sizeof(used),true);\r\n randomize;\r\n readln(n,m);\r\n for i:= 1 to n do\r\n  read(a[i]);\r\n for i:= 1 to m do\r\n  readln(left[i],right[i]);\r\n sort(1,m);\r\n for i:= 1 to m do\r\n  if first[left[i]]=0 then first[left[i]]:=i;\r\n for i:= 1 to m do\r\n  last[left[i]]:=i;\r\n\r\n for i:= 1 to n do\r\n  if a[i]=1 then\r\n   rec(i);\r\n\r\n for i:= 1 to m do\r\n  swap(left[i],right[i]);\r\n sort(1,m);\r\n fillchar(First,sizeof(first),0);\r\n fillchar(last,sizeof(last),0);\r\n for i:= 1 to m do\r\n  if first[left[i]]=0 then first[left[i]]:=i;\r\n for i:= 1 to m do\r\n  last[left[i]]:=i;\r\n fillchar(used,sizeof(used),true);\r\n for i:= 1 to n do\r\n  if a[i]=2 then\r\n   rec2(i);\r\n\r\n for i:= 1 to n do\r\n  if (dostup[i] = 1) and (dostup2[i] = 1)then\r\n  writeln(1) else\r\n  writeln(0);\r\nend.\r\n"
}