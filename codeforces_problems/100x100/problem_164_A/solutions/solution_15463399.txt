{
    "id": 15463399,
    "contestId": 164,
    "creationTimeSeconds": 1453356443,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "//#include <bits/stdc++.h>\n#include <stdio.h>\n#include <iostream>\n#include <string.h>\n#include <math.h>\n#include <stdlib.h>\n#include <limits.h>\n#include <algorithm>\n#include <queue>\n#include <vector>\n#include <set>\n#include <map>\n#include <stack>\n#include <bitset>\n#include <string>\nusing namespace std;\ndouble esp=1e-11;\n#pragma comment(linker, \"/STACK:1024000000,1024000000\")\n#define fi first\n#define se second\n#define all(a) (a).begin(),(a).end()\n#define cle(a) while(!a.empty())a.pop()\n#define mem(p) memset(p,0,sizeof(p))\n#define memf(p) memset(p,0x3f,sizeof(p))\n#define memn(p) memset(p,-1,sizeof(p))\n#define mp(A, B) make_pair(A, B)\n#define pb push_back\n#define lson l , m , rt << 1\n#define rson m + 1 , r , rt << 1 | 1\ntypedef long long int LL;\nconst double PI = acos(-1.0);\nconst LL INF=0x3f3f3f3f;\nconst LL MOD = 1000000007;\nconst int maxn =100010;\nbool an[maxn];\nbool mark[maxn];\nint val[maxn];\nvector<int>node[maxn];\nint q[maxn];\nvoid dfs(int u,int d,int f)\n{               //printf(\"%d\\n\",u);\n    if(val[u]==2)\n    {\n        for(int y=d;y>=0;y--)\n            if(an[q[y]]==0)\n                an[q[y]]=1;\n            else break;\n    }\n    int len=node[u].size();\n    for(int x=0;x<len;x++)\n    {\n        if(val[node[u][x]]!=1){\n        if(an[node[u][x]]==1)\n        {\n            for(int y=d;y>=0;y--)\n            if(an[q[y]]==0)\n                an[q[y]]=1;\n            else break;\n        }\n        else if(f==-1)\n        {\n            q[d+1]=node[u][x];\n            if(mark[node[u][x]]==1)\n                dfs(node[u][x],d+1,0);\n            else\n            {\n                mark[node[u][x]]=1;\n                dfs(node[u][x],d+1,-1);\n            }\n        }\n        else if(f==0&&mark[node[u][x]]==0)\n        {\n            mark[node[u][x]]=1;\n            q[d+1]=node[u][x];\n            dfs(node[u][x],d+1,-1);\n        }\n        }\n    }\n}\nint main()\n{\n        //freopen(\"in.txt\", \"r\", stdin);\n        //freopen(\"kebab.in\", \"r\", stdin);\n        //freopen(\"kebab.out\", \"w\", stdout);\n        //map<long long int,int>ma;                 %I64d\n        //vector<int>::iterator iter;\n        //memset(m,0,sizeof(int));               for(iter=trtr[rt].begin();iter!=trtr[rt].end();iter++)\n        //for(int x=1;x<=n;x++)\n        //for(int y=1;y<=n;y++)\n        //scanf(\"%d%d\",&a,&b);\n        //scanf(\"%d\",&n);\n        //printf(\"%d\\n\",ans);\n        mem(an);\n        int n,m;\n        int u,v;\n        scanf(\"%d%d\",&n,&m);\n        for(int x=1;x<=n;x++)\n            node[x].clear();\n        for(int x=1;x<=n;x++)\n        {\n            scanf(\"%d\",&val[x]);\n        }\n        for(int x=1;x<=m;x++)\n        {\n            scanf(\"%d%d\",&u,&v);\n            node[u].pb(v);\n        }\n        mem(mark);\n        for(int x=1;x<=n;x++)\n            if(val[x]==1)\n        {\n            memset(mark,0,(n+1)*sizeof(bool))\n            q[0]=x;\n            mark[x]=1;\n            dfs(x,0,-1);\n        }\n        for(int x=1;x<=n;x++)\n            printf(\"%d\\n\",an[x]);\n        return 0;\n}\n\n   \t  \t\t \t\t\t \t\t\t\t\t\t\t\t\t\t \t \t \t \t"
}