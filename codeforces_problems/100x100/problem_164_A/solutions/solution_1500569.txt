{
    "id": 1500569,
    "contestId": 164,
    "creationTimeSeconds": 1333900194,
    "relativeTimeSeconds": 2694,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "towelenee"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 5,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 250,
    "memoryConsumedBytes": 13824000,
    "source": "#include<cassert>\r\n#include<queue>\r\n#include<cstring>\r\n#include<cstdio>\r\n#include<vector>\r\n#include<string>\r\n#include<set>\r\n#include<map>\r\n#include<cmath>\r\n#include<iostream>\r\n#include<algorithm>\r\n#define eprintf(...) {fprintf(stderr, __VA_ARGS__);fflush(stderr);}\r\n\r\n#define eps 1e-12\r\n\r\n#define sqr(a) ((a)*(a))\r\n#define mp(a,b) make_pair(a,b) \r\n#define forn(i,n) for(int i=0;i<(int)n;i++)\r\n#ifdef DEBUG\r\n#define deb(x) cerr<<#x<<'='<<x<<endl\r\n#else\r\n#define deb(x) \r\n#endif\r\ntypedef long long ll;\r\n\r\nusing namespace std;\r\n\r\nconst int N = 200000;\r\nbool reach[2][N];\r\nvector<int> x[N],r[N];\r\nint type[N];\r\n\r\nvoid dfs1(int v){\r\n  reach[0][v] = true;\r\n  forn(i,x[v].size()){\r\n    if(!reach[0][x[v][i]]){\r\n      dfs1(x[v][i]);\r\n    }\r\n  }\r\n}\r\nvoid dfs2(int v){\r\n  reach[1][v] = true;\r\n  if(type[v] == 1)\r\n    return;\r\n  forn(i,r[v].size()){\r\n    if(!reach[1][r[v][i]]){\r\n      dfs2(r[v][i]);\r\n    }\r\n  }\r\n}\r\nint main()         \r\n{\r\n  #ifdef DEBUG\r\n  freopen(\"in\",\"r\",stdin);\r\n  freopen(\"out\",\"w\",stdout);\r\n  #endif\r\n  int n,m;\r\n  scanf(\"%d %d\",&n,&m);\r\n  forn(i,n)\r\n    scanf(\"%d \",&type[i]);\r\n  forn(i,m)              {\r\n    int a,b;\r\n    scanf(\"%d %d\",&a,&b);\r\n    a--,b--;\r\n    x[a].push_back(b);\r\n    r[b].push_back(a);\r\n  }\r\n  forn(i,n)\r\n    if(type[i] == 1 && !reach[0][i])\r\n      dfs1(i);\r\n  forn(i,n)\r\n    if(type[i] == 2 && !reach[1][i])\r\n      dfs2(i);\r\n  forn(i,n)\r\n    printf(\"%d\\n\",reach[1][i]&&reach[0][i]);\r\n  return 0;\r\n}\r\n\r\n"
}