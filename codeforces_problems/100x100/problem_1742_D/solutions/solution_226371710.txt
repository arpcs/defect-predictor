{
    "id": 226371710,
    "contestId": 1742,
    "creationTimeSeconds": 1696306548,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1742,
        "index": "D",
        "name": "Coprime",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "brute force",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1742,
        "members": [
            {
                "handle": "sidhunishan786"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1665671700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 48,
    "timeConsumedMillis": 561,
    "memoryConsumedBytes": 1843200,
    "source": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n// fast input and output \r\nvoid init_code(){\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n}\r\n#define mp make_pair\r\n#define nl \"\\n\"\r\n#define pb push_back\r\n#define mod 1000000007\r\n#define bp __builtin_popcount\r\n#define gd __gcd\r\n#define int long long int\r\n#define ld float\r\nconst double pi=3.1415926;\r\n// seive \r\nvector<int> soe(int n){\r\n    vector<bool> v(n+1,true);\r\n    v[0]=v[1]=false;\r\n\r\n    for (int i = 2; i*i <= n; i++)\r\n    {\r\n        if(v[i]){\r\n            for (int j = i*i; j<v.size(); j=j+i)\r\n            {\r\n            v[j]=false;\r\n            }\r\n        }\r\n\r\n    }\r\n    vector<int> ans;\r\n    for (int i = 0; i < v.size(); i++)\r\n    {\r\n        if(v[i]) ans.push_back(i);\r\n      \r\n    }\r\n    \r\n    \r\n    return ans;\r\n   \r\n}\r\n\r\n// fast exponentation \r\n\r\nint b_expo(int n,int m){\r\n    if(m==0){\r\n        return 1;\r\n    }\r\n    if(m==1) return n%mod;\r\n\r\n    int x=b_expo(n,m/2);\r\n    if(m%2==1){\r\n        return ((x)*(x)*(n))%mod;\r\n    }\r\n    return ((x)*(x))%mod;\r\n}\r\n\r\n// fibonacci series \r\n\r\nvector<int> fibseries(){\r\n    int rem=1;\r\n    int a=0;\r\n    int b=1;\r\n    int c=1;\r\n    vector<int> fib(60);\r\n    for (int i = 0; i < 60; i++)\r\n    {\r\n        \r\n        fib[i]=a%10;\r\n        a=b%10;\r\n        b=c%10;\r\n        c=(a+b)%10;\r\n        \r\n\r\n    }\r\n    return fib;\r\n}\r\n\r\n\r\n// function for printing vector\r\n\r\ntemplate <typename T> void printv(vector<T> v){\r\n    for (int i = 0; i < v.size(); i++)\r\n    {\r\n        cout<<v[i]<<\" \";\r\n\r\n    }\r\n    cout<<endl;\r\n    \r\n}\r\n\r\nvector<int> merge_sorted_vecs(vector<int> v,vector<int> t){\r\n    vector<int> ans(v.size()+t.size());\r\n    int idx=0;\r\n    int iv=0,it=0;\r\n    while (iv<v.size() && it<t.size())\r\n    {\r\n        if(v[iv]<t[it]){\r\n            ans[idx]=v[iv];\r\n            iv++;\r\n        }\r\n        else\r\n        {\r\n            ans[idx]=t[it];\r\n            it++;\r\n        }\r\n        idx++;\r\n        /* code */\r\n    }\r\n    while (iv<v.size())\r\n    {\r\n        ans[idx]=v[iv];\r\n        iv++;\r\n        idx++;\r\n        /* code */\r\n    }\r\n    while (it<t.size())\r\n    {\r\n        ans[idx]=v[it];\r\n        it++;\r\n        idx++;\r\n\r\n   \r\n    }\r\n    \r\n    return ans;\r\n    \r\n\r\n}\r\n\r\n//disjoint set union\r\n\r\nint find(int x,vector<int> &p){\r\n    if(x==p[x]) return x;\r\n\r\n    return p[x]=find(p[x],p);\r\n}\r\n\r\nvoid union_(int x,int y,vector<int> &p){\r\n    x=find(x,p);\r\n    y=find(y,p);\r\n    p[min(x,y)]=max(x,y);\r\n    return ;\r\n}\r\n\r\nint factorial(int n){\r\n    int x=1;\r\n    for (int i = 2; i <=n; i++)\r\n    {\r\n        x=x*i;\r\n   \r\n    }\r\n    return x;\r\n\r\n}\r\nvoid input_arr(vector<int> &v){\r\n    for (int i = 0; i < v.size(); i++)\r\n    {\r\n        cin>>v[i];\r\n   \r\n    }\r\n    \r\n}\r\nbool isprime(int x){\r\n    int y=sqrt(x);\r\n    for (int i = 2; i <=y; i++)\r\n    {\r\n        if(x%i==0) return false;\r\n        /* code */\r\n    }\r\n    return true;\r\n}\r\n\r\nbool issorted(string s){\r\n    for (int i = 1; i < s.size(); i++)\r\n    {\r\n        if(s[i-1]>s[i]) return false;\r\n        /* code */\r\n    }\r\n    return true;\r\n    \r\n}\r\nint sum_of_digs(int n){\r\n    int x=0;\r\n    while (n)\r\n    {\r\n        x+=(n%10);\r\n        n/=10;\r\n        /* code */\r\n    }\r\n    return x;\r\n}\r\n\r\n//------------------------------------------------------------- header files -------------------------------------------------------------------//\r\n\r\n\r\n\r\nint solve(){\r\n\r\n    int n;\r\n    cin>>n;\r\n    vector<int> v(n);\r\n    input_arr(v);\r\n    map<int,int> m;\r\n    for (int i = 0; i < v.size(); i++)\r\n    {\r\n        if(m.find(v[i])==m.end()){\r\n            m.insert(make_pair(v[i],i+1));\r\n\r\n        }\r\n        else\r\n        {\r\n            m[v[i]]=i+1;\r\n            \r\n        }\r\n        \r\n        /* code */\r\n    }\r\n    vector<pair<int,int> > temp;\r\n    for (auto i = m.begin(); i !=m.end(); i++)\r\n    {\r\n        temp.push_back(make_pair(i->first,i->second));\r\n        /* code */\r\n    }\r\n    int ans=-1;\r\n    for (int i = 0; i < temp.size(); i++)\r\n    {\r\n        for (int j = i; j < temp.size(); j++)\r\n        {\r\n            if(gd(temp[i].first,temp[j].first)==1){\r\n                ans=max(ans,temp[i].second+temp[j].second);\r\n            }\r\n\r\n            /* code */\r\n        }\r\n        \r\n        /* code */\r\n    }\r\n    //cout<<\"ans - > \";\r\n    cout<<ans<<nl;\r\n    \r\n    \r\n    \r\n\r\n\r\n    return 1;   \r\n\r\n    \r\n}\r\n\r\nint32_t main()\r\n{  \r\n    \r\n    // list_of_primes=soe(999999);\r\n   \r\n    int t;\r\n\r\n    cin>>t;\r\n\r\n\r\n    while (t--)\r\n    {\r\n        solve();\r\n        \r\n    }\r\n\r\n   \r\n    \r\n    \r\n    return 0;\r\n}\r\n"
}