{
    "id": 232240838,
    "contestId": 1742,
    "creationTimeSeconds": 1699625324,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1742,
        "index": "D",
        "name": "Coprime",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "brute force",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1742,
        "members": [
            {
                "handle": "_adnan34"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1665671700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 3276800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// #define fast_IO ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n#define mod 10\r\n#define pi 3.1416\r\n#define ll long long\r\n#define ull unsigned\r\n#define endl '\\n'\r\n#define yes cout << \"Yes\" << endl\r\n#define no cout << \"No\" << endl\r\nbool isprime(int n) // ----prime check\r\n{\r\n    if (n <= 1) return false;\r\n    for (int i = 2; i <= sqrt(n); i++){\r\n        if (n % i == 0) return false;}\r\n    return true;\r\n}\r\nll int sumn(int a,int n) // ----summation from given number to n;\r\n{\r\n    double x = ((n - a) + 1) / 2.0;\r\n    int y = (n + a);\r\n    return x * y;\r\n}\r\nvoid primefact(int n) //---- print all prime factors of a number\r\n{\r\n    for(int i=2;i*i<=n;i++)\r\n    {\r\n        if (n%i==0)\r\n        {\r\n            int cnt=0;\r\n            while (n%i==0)\r\n            {\r\n                cnt++;\r\n                n=n/i;\r\n            }\r\n            cout << i << \"^\" << cnt << \",\";\r\n        }\r\n    }\r\n    if(n>1) cout << n << \"^\" << 1 << endl;\r\n    else cout << endl;\r\n}\r\nvoid sieve(int n) //---- print all prime numbers from 1 to n\r\n{\r\n    vector<int> prime(n+3,0);\r\n\r\n    for (int i=2;i*i<=n;i++)\r\n    {\r\n        if(prime[i]==0)\r\n        {\r\n            for (int j=i*i;j<=n;j+=i){\r\n                prime[j] = 1;}\r\n        }\r\n    }\r\n    for(int i=2;i<=n;i++)\r\n        if (prime[i] == 0) cout << i << \" \";\r\n}\r\nint div_check(ll int n)    //---- checks number of divisors of a number\r\n{\r\n    int i, j, k;\r\n    set<int> s;\r\n    int num=sqrt(n);\r\n    for(i=1;i<=num;i++)\r\n    {\r\n        if(n%i==0)\r\n        {\r\n            int x=i;\r\n            int y=n/i;\r\n            s.insert(x);\r\n            s.insert(y);\r\n        }\r\n    }\r\n    return s.size();\r\n}\r\nint sumOfDigits(int num) {\r\n    int sum = 0;\r\n    while (num > 0) {\r\n        sum += num % 10;\r\n        num /= 10;\r\n    }\r\n    return sum;\r\n}\r\npair<int,int> digits(int n)\r\n{\r\n    pair<int,int> rec;\r\n    if(n%2==0) return make_pair(n/2,n/2);\r\n    else if(n%2!=0&&n%10!=9) return make_pair(n/2,n-(n/2));\r\n    else rec = digits(n/10);\r\n    if(sumOfDigits(rec.first) > sumOfDigits(rec.second)) return make_pair(10*rec.first+4, 10*rec.second+5);\r\n    else return make_pair(10 * rec.first + 5, 10 * rec.second + 4);\r\n    \r\n}\r\nvector<int> pairs[1001];\r\nvoid gcdsieve()\r\n{\r\n    int i,j;\r\n    for (i=1;i<=1000;i++) \r\n    {\r\n        for (j=1;j<=1000;j++) \r\n        {\r\n            if (__gcd(i, j) == 1)\r\n            {\r\n                pairs[i].push_back(j);\r\n            }\r\n        }\r\n    }\r\n}\r\nint main()\r\n{\r\n    ll int t,x,y,z,num,a,b,e,n,m;\r\n    ll int d;\r\n    ll int i, j, k;\r\n    int arr[200010], brr[200010];\r\n    int f = 0, ans, sum = 0, prod = 1, mid=0,mini=0,maxi=1e18,cnt=0;\r\n    char s[11][11],c;\r\n    string str, str_1, temp;\r\n    vector<ll int> v1(26,0), v2(26,0), w;\r\n    vector<int>::iterator it;\r\n    pair<int,int> mp;\r\n    vector<pair<ll int,ll int>> cst;\r\n    deque<int> q;\r\n\r\n    vector<vector<int>> v(1001);\r\n    cin >> t;\r\n    gcdsieve();\r\n    while (t--) \r\n    { \r\n        cin >> n;\r\n        for(i=0; i<n; i++) \r\n        {\r\n            cin >> x;\r\n            v[x].push_back(i + 1);\r\n        }\r\n        cnt =-1;\r\n        for (i=1;i<=1000;i++) \r\n        {\r\n            for (auto u : pairs[i]) \r\n            {\r\n                if (!v[i].empty() && !v[u].empty()) \r\n                {\r\n                    cnt = max(cnt, v[i].back() + v[u].back());\r\n                }\r\n            }\r\n        }\r\n        cout << cnt << endl;\r\n    }\r\n    return 0;\r\n}"
}