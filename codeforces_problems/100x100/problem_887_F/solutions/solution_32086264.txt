{
    "id": 32086264,
    "contestId": 887,
    "creationTimeSeconds": 1509933974,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 887,
        "index": "F",
        "name": "Row of Models",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2500,
        "tags": [
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 887,
        "members": [
            {
                "handle": "nullstellensatz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509725100
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 106,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 23142400,
    "source": "\r\n\r\n\r\n#include <iostream>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <cmath>\r\n#include <algorithm>\r\nusing namespace std;\r\n#include <vector>\r\n\r\nconst int MaxN = 5000005;\r\n\r\nint n, m;\r\nint h[MaxN];\r\nvector<int> pos;\r\n\r\nbool check() {\r\n    int cnt = 0;\r\n    for (int k = 1; k < pos.size(); ++ k) {\r\n        if (pos[k] - pos[k - 1] > m + m) return false;\r\n        if (pos[k] - pos[k - 1] > m) {\r\n            int t = pos[k];\r\n            for (int s = pos[k] + 1; s < n; ++ s)\r\n                if (h[pos[k - 1]] > h[s] && h[t] < h[s]) t = s;\r\n            if (t == pos[k]) pos[k] = pos[k - 1] + m;\r\n            ++ cnt;\r\n            if (cnt > 1) return false;\r\n        }\r\n    }\r\n    \r\n    return (n - pos[pos.size() - 1] <= m);\r\n}\r\n\r\nint main() {\r\n    scanf(\"%d %d\", &n, &m);\r\n    for (int k = 0; k < n; ++ k)\r\n        scanf(\"%d\", h + k);\r\n    pos.clear();\r\n    \r\n    pos.push_back(0);\r\n    for (int k = 1; k < n; ++ k)\r\n        if (h[k] < h[pos[pos.size() - 1]])\r\n            pos.push_back(k);\r\n        \r\n    puts(check() ? \"YES\" : \"NO\");\r\n    \r\n    return 0;\r\n}\r\n"
}