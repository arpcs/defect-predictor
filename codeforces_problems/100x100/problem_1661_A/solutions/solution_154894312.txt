{
    "id": 154894312,
    "contestId": 1661,
    "creationTimeSeconds": 1650839755,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1661,
        "index": "A",
        "name": "Array Balancing",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1661,
        "members": [
            {
                "handle": "wladyslaw"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649514900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 373,
    "memoryConsumedBytes": 204800,
    "source": "#include <iostream>\n#include <algorithm>\n#include <vector>\n\n#include <stdlib.h>\n\nbool compare(uint32_t a, uint32_t b) {\n    return(a < b);\n}\n\nuint64_t solution(std::vector<int> a, std::vector<int> b) {\n    uint64_t ret = 0;\n\n    uint32_t aa;\n    uint32_t bb;\n    uint32_t ab;\n    uint32_t ba;\n\n    for (int i = 1; i < a.size(); i++) {\n        aa = abs(a[i - 1] - a[i]);\n        bb = abs(b[i - 1] - b[i]);\n        ab = abs(a[i - 1] - b[i]);\n        ba = abs(b[i - 1] - a[i]);\n\n        ret += std::min(aa + bb, ab+ ba);\n    }\n\n    return ret;\n}\n\nint main(int argc, char** argv) {\n    uint16_t t;\n    std::cin >> t;\n\n    std::vector<uint64_t> ret;\n\n    for (uint16_t i = 0; i < t; i++) {\n        int n;\n        std::cin >> n;\n\n        int temp;\n\n        std::vector<int> a;\n        for (int j = 0; j < n; j++) {\n            std::cin >> temp;\n            a.push_back(temp);\n        }\n\n        std::vector<int> b;\n        for (int j = 0; j < n; j++) {\n            std::cin >> temp;\n            b.push_back(temp);\n        }\n\n        ret.push_back(solution(a, b));\n\n        a.erase(a.begin(), a.end());\n        b.erase(b.begin(), b.end());\n    }\n\n    for (auto elem: ret) {\n        std::cout << elem << std::endl;\n    }\n\n    return(0);\n}"
}