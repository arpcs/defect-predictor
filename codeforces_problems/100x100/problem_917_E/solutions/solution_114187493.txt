{
    "id": 114187493,
    "contestId": 917,
    "creationTimeSeconds": 1619342021,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 917,
        "index": "E",
        "name": "Upside Down",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 3400,
        "tags": [
            "data structures",
            "string suffix structures",
            "strings",
            "trees"
        ]
    },
    "author": {
        "contestId": 917,
        "members": [
            {
                "handle": "bkifhr7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1517236500
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 118,
    "timeConsumedMillis": 1076,
    "memoryConsumedBytes": 137523200,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n#define forg(i,x) for(register int i=fir[x];i;i=nxt[i])\n#define FORG(i,x) for(register int i=FIR[x];i;i=NXT[i])\n#define uu unsigned\n#define scanf a14=scanf\n#define rint register int\n#define fre(x) freopen(#x\".in\",\"r\",stdin),freopen(#x\".out\",\"w\",stdout)\ntypedef long long ll;\ntypedef uu long long ull;\ntypedef pair<int,int> pii;\ntypedef vector<int>::iterator VP;\nint a14;\ninline int rd(int l,int r){return rand()%(r-l+1)+l;}\n\nconst int mxn=2e5+3;\nint n,m,qn,to[mxn],nxt[mxn],fir[mxn],gn=1,co[mxn];\ninline void gadd(int x,int y,char c){to[++gn]=y,nxt[gn]=fir[x],fir[x]=gn,co[gn]=c;}\nint lp[mxn],rp[mxn],bs[mxn],sb[mxn];char ss[mxn];\nint a1[mxn],a2[mxn],a3[mxn],a4[mxn],a5[mxn];\nint dfn[mxn],dfa[mxn],siz[mxn],top[mxn],zs[mxn],dep[mxn],fa[mxn],dt,qa[mxn];\nvector<int>jp[mxn];\ninline void dfs1(int x,int f){\n    fa[x]=f,dep[x]=dep[f]+1,siz[x]=1;\n    forg(i,x)if(to[i]!=f){dfs1(to[i],x),siz[x]+=siz[to[i]];if(siz[to[i]]>siz[zs[x]])zs[x]=to[i];}\n}\ninline void dfs2(int x,int f){\n    top[x]=x==zs[f]?top[f]:x,dfn[x]=++dt,dfa[dt]=x;\n    jp[top[x]].push_back(x);\n    if(zs[x])dfs2(zs[x],x);forg(i,x)if(!dfn[to[i]])dfs2(to[i],x);\n}\ninline int lca(int x,int y){while(top[x]!=top[y]){if(dep[top[x]]<dep[top[y]])swap(x,y); x=fa[top[x]];}return dep[x]<dep[y]?x:y;}\ninline int kzx(int x,int k){while(x&&dep[x]-dep[top[x]]<k)k-=dep[x]-dep[top[x]]+1,x=fa[top[x]]; if(!x||!k)return x; return jp[top[x]][dep[x]-dep[top[x]]-k];}\nstruct thr{int a,b,c;};\nstruct awe{\n    int fail[mxn],ac[mxn][26],tt,q[mxn],qh,qt,po[mxn],b1[mxn],b2[mxn],bn;\n    vector<thr>vc[mxn];\n    inline void w1(){\n        for(int i=1;i<=m;++i){\n            int d=0;\n            for(int j=rp[i];j>=lp[i];--j){\n                int c=ss[j]-'a';if(!ac[d][c])ac[d][c]=++tt;d=ac[d][c];\n            }\n            po[i]=d;\n        }\n        W();\n    }\n    inline void w2(){\n        for(int i=1;i<=m;++i){\n            int d=0;\n            for(int j=lp[i];j<=rp[i];++j){\n                int c=ss[j]-'a';if(!ac[d][c])ac[d][c]=++tt;d=ac[d][c];\n            }\n            po[i]=d;\n        }\n        W();\n    }\n    inline void W(){\n        qh=1,qt=0;for(int c=0;c<26;++c)if(ac[0][c])q[++qt]=ac[0][c];\n        while(qh<=qt){\n            int x=q[qh++];\n            for(int c=0;c<26;++c)\n                if(ac[x][c])q[++qt]=ac[x][c],fail[ac[x][c]]=ac[fail[x]][c];\n                else ac[x][c]=ac[fail[x]][c];\n        }\n        for(int i=1;i<=tt;++i)G(fail[i],i);\n        dfs0(0,0);\n        dfs1(1,0);\n    }\n    int TO[mxn],NXT[mxn],FIR[mxn],GN;\n    inline void G(int x,int y){TO[++GN]=y,NXT[GN]=FIR[x],FIR[x]=GN;}\n    inline void dfs0(int x,int f){\n        b1[x]=++bn;\n        FORG(i,x)if(TO[i]!=f)dfs0(TO[i],x);\n        b2[x]=bn;\n    }\n    inline void dfs1(int x,int f,int d=0){\n        add(b1[d],1);\n        for(auto &i:vc[x]){\n            int t=po[i.a];\n            qa[i.c]+=i.b*ask(b1[t],b2[t]);\n        }\n        forg(i,x)if(to[i]!=f)dfs1(to[i],x,ac[d][co[i]-'a']);\n        add(b1[d],-1);\n    }\n    int ar[mxn];\n    inline void add(int x,int y){for(;x<=tt+1;x+=x&-x)ar[x]+=y;}\n    inline int ask(int x){int res=0;for(;x;x-=x&-x)res+=ar[x];return res;}\n    inline int ask(int l,int r){return ask(r)-ask(l-1);}\n}A1,A2;\nconst int B=137,mod=1e9+9;\nll bin[mxn];\nint pp[mxn][2];\nstruct aweg{\n    int sa[mxn],rk[mxn],tmp[mxn],cnt[mxn],h[mxn],sn;\n    char s[mxn],s1[mxn];\n    ll ha[mxn],hs[mxn];\n    vector<thr>oh[mxn];\n    bool rv;\n    inline ll ha1(int l,int r){return (ha[r]-ha[l-1]*bin[r-l+1]%mod+mod)%mod;}\n    inline ll ha2(int l,int r){return (hs[r]-hs[l-1]*bin[r-l+1]%mod+mod)%mod;}\n    int bor[mxn],ju[mxn],der[mxn];\n    inline void SA(int n,char s[],int rk[],int sa[]){\n        for(int i=1;i<=n;++i)rk[i]=s[i],++cnt[rk[i]];for(int i=1;i<=200;++i)cnt[i]+=cnt[i-1];for(int i=n;i;--i)sa[cnt[rk[i]]--]=i;\n        for(int i=0;i<=200;++i)cnt[i]=0;  for(int i=1;i<=2*n;++i)tmp[i]=0;\n        for(int k=1,m=200;;k*=2){\n            int p=0; for(int i=n-k+1;i<=n;++i)tmp[++p]=i;\n            for(int i=1;i<=n;++i)if(sa[i]>k)tmp[++p]=sa[i]-k;\n            for(int i=1;i<=n;++i)++cnt[rk[i]];\n            for(int i=1;i<=m;++i)cnt[i]+=cnt[i-1];\n            for(int i=n;i;--i)sa[cnt[rk[tmp[i]]]--]=tmp[i];\n            for(int i=1;i<=m;++i)cnt[i]=0;\n            memcpy(tmp+1,rk+1,sizeof(int)*n);\n            p=1,rk[sa[1]]=1;\n            for(int i=2;i<=n;++i)rk[sa[i]]=tmp[sa[i]]==tmp[sa[i-1]]&&tmp[sa[i]+k]==tmp[sa[i-1]+k]?p:++p;\n            if(p==n)break;m=p;\n        }\n        for(int i=1,j,k=0;i<=n;++i){\n            if(rk[i]==1)continue;\n            if(k)--k;j=sa[rk[i]-1];\n            while(s[i+k]==s[j+k])++k;\n            h[rk[i]]=k;\n        }\n    }\n    inline void W(bool RV){\n        rv=RV;\n        memcpy(s,ss,sizeof(ss));\n        if(rv)for(int i=1;i<=m;++i)reverse(s+lp[i],s+rp[i]+1);\n        sn=rp[m];\n        for(int k=1;k<=m;++k){\n            int L=lp[k],R=rp[k];\n            bor[R+1]=R+2;\n            for(int i=R,j=R+2;i>=L;--i){\n                while(j!=R+2&&s[j-1]!=s[i])j=bor[j];\n                bor[i]=--j;\n                assert(j>i);\n                if(j==R+1)ju[i]=i,der[i]=0;else der[i]=j-i,ju[i]=der[i]==der[j]?ju[j]:i;\n            }\n        }\n        for(int i=1;i<=sn;++i)ha[i]=(ha[i-1]*B+s[i])%mod;\n        for(int i=1;i<=m;++i)SA(rp[i]-lp[i]+1,s+lp[i]-1,rk+lp[i]-1,sa+lp[i]-1);\n        for(int i=1;i<=m;++i)for(int j=lp[i];j<=rp[i];++j)sa[j]+=lp[i]-1,rk[sa[j]]=j;\n        dfs(1);\n    }\n    inline int llen(int L,int R,int k){\n        int l=0,r=min(R-L+1,sb[k]-k+1),mid;\n        while(l!=r){mid=(l+r+1)>>1;if(ha1(k,k+mid-1)==ha2(L,L+mid-1))l=mid;else r=mid-1;}\n        return l;\n    }\n    inline bool cmp(int L,int R,int k){\n        k=sa[k];\n        int x=llen(L,R,k);\n        if(x==R-L+1||x==sb[k]-k+1)return 1;\n        return s[k+x]<s1[L+x];\n    }\n    inline int gpo(int L,int R,int k){\n        int l=lp[k]-1,r=rp[k],mid;\n        while(l<r){mid=(l+r+1)>>1;if(cmp(L,R,mid))l=mid;else r=mid-1;}\n        if(l==rp[k])return sa[l];\n        if(l==lp[k]-1)return sa[l+1];\n        int x=sa[l],y=sa[l+1];\n        return llen(L,R,x)<llen(L,R,y)?y:x;\n    }\n    inline int gd(int x,int R,int lm){\n        if(lm==0)return 0;\n        while(x<=R&&R-ju[x]+1>lm)x=bor[ju[x]];\n        if(x>R)return 0;\n        int dd=der[x];\n        int ln=R-x+1;\n        if(ln<=lm)return x;\n        int kk=(ln-lm-1)/dd+1;\n        return x+kk*dd;\n    }\n    inline void dfs(int x,int f=0,int d=0){\n        for(auto &h:oh[x]){\n            int L=dep[h.a],xh=h.c,k=h.b;\n            int p=gpo(L,d,k),len=llen(L,d,p);\n            pp[xh][rv]=gd(p,rp[k],len);\n            p=pp[xh][rv];//if(p)assert(llen(L,d,p)==sb[p]-p+1);\n        }\n        forg(i,x)if(to[i]!=f){\n            s1[d+1]=co[i],hs[d+1]=(hs[d]*B+co[i])%mod;\n            dfs(to[i],x,d+1);\n        }\n    }\n}B1,B2;                                                                                                                 \ninline int gcd(int a,int b){int c;for(;b;c=a%b,a=b,b=c);return a;}\ninline int fc(int x,int y,int z,int l1,int l2){\n    if(z<0)return 0;\n    if(x==0&&y==0)return z==0;\n    if(x==0)return z%y==0&&z/y<=l2;\n    if(y==0)return z%x==0&&z/x<=l1;\n//    int X=gcd(x,y);if(z%X)return 0;x/=X,y/=X,z/=X;\n    int res=0;    for(int i=0;i<=l1&&z>=0;++i,z-=x)res+=z%y==0&&z/y<=l2;return res;\n    return 0;\n}\ninline int ask(int x,int y,int h){\n    int*t1=B1.ju,*t2=B2.ju,*d1=B1.der,*d2=B2.der;\n    int L1=sb[x],L2=sb[y],res=0;\n    for(int i=x;i<=L1;i=B1.bor[t1[i]])for(int j=y;j<=L2;j=B2.bor[t2[j]]){\n        res+=fc(d1[i],d2[j],L1-i+1+L2-j+1-h,d1[i]?(t1[i]-i)/d1[i]:-1,d2[j]?(t2[j]-j)/d2[j]:-1);\n    }\n    return res;\n}\nint main(){\n    bin[0]=1;for(int i=1;i<mxn;++i)bin[i]=bin[i-1]*B%mod;\n    scanf(\"%d%d%d\",&n,&m,&qn);{char hh[5];for(int i=1,u,v;i<n;++i)scanf(\"%d%d%s\",&u,&v,hh),gadd(u,v,hh[0]),gadd(v,u,hh[0]);}\n    for(int i=1,j=1;i<=m;++i)scanf(\"%s\",ss+j),lp[i]=j,j+=strlen(ss+j),rp[i]=j-1;\n    for(int i=1;i<=m;++i)for(int j=lp[i];j<=rp[i];++j)bs[j]=i,sb[j]=rp[i];\n    for(int i=1;i<=qn;++i)scanf(\"%d%d%d\",a1+i,a2+i,a3+i);\n    dfs1(1,0),dfs2(1,0);\n    for(int t=1;t<=qn;++t){\n        int x=a1[t],y=a2[t],z=lca(x,y),k=a3[t],len=rp[k]-lp[k]+1;\n        a4[t]=z,a5[t]=len;\n        if(dep[x]-dep[z]>=len){\n            int u=kzx(x,dep[x]-dep[z]-len+1);\n            A1.vc[u].push_back((thr){k,-1,t}),A1.vc[x].push_back((thr){k,1,t});\n        }\n        if(dep[y]-dep[z]>=len){\n            int u=kzx(y,dep[y]-dep[z]-len+1);\n            A2.vc[u].push_back((thr){k,-1,t}),A2.vc[y].push_back((thr){k,1,t});\n        }\n        if(x!=z&&y!=z){\n            B1.oh[x].push_back((thr){z,k,t}),B2.oh[y].push_back((thr){z,k,t});\n        }\n    }\n    A1.w1(),A2.w2();\n    B1.W(1),B2.W(0);\n    for(int t=1;t<=qn;++t)if(pp[t][0]&&pp[t][1])qa[t]+=ask(pp[t][1],pp[t][0],a5[t]);\n    for(int i=1;i<=qn;++i)printf(\"%d\\n\",qa[i]);\n    return 0;\n}\n\n\t\t \t \t    \t    \t\t\t  \t \t\t  \t\t\t \t"
}