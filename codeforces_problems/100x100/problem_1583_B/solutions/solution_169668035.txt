{
    "id": 169668035,
    "contestId": 1583,
    "creationTimeSeconds": 1661492898,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "pacificpi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 4812800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\nusing ll = long  long;\r\nusing vi = vector<int>;\r\nusing pi = pair<int, int>;\r\n\r\ntemplate<class T> bool ckmin(T& a, T b) { return b < a ? a = b, true : false; }\r\ntemplate<class T> bool ckmax(T& a, T b) { return a < b ? a = b, true : false; }\r\n\r\nvoid solve() {\r\n    int n, m; cin >> n >> m;\r\n    set<int> s;\r\n    for (int i = 1; i <= n; ++i) s.insert(i);\r\n    for (int i = 0; i < m; ++i) {\r\n        int a, b, c; cin >> a >> b >> c;\r\n        s.erase(b);\r\n    }\r\n\r\n    int x = *s.begin();\r\n    for (int i = 1; i <= n; ++i) {\r\n        if (i != x) cout << i << \" \" << x << \"\\n\";\r\n    }\r\n}\r\n\r\nint main() {\r\n    ios::sync_with_stdio(0); cin.tie(0);\r\n    int t; cin >> t;\r\n    while (t--) solve();\r\n}"
}