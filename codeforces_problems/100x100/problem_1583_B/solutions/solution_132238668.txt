{
    "id": 132238668,
    "contestId": 1583,
    "creationTimeSeconds": 1634472295,
    "relativeTimeSeconds": 3595,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "Fedorshebanin"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 61,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 5017600,
    "source": "from math import sqrt\r\ndef dfs(v, color):\r\n    global graph\r\n    global used\r\n    global comp\r\n    used[v] = color\r\n    comp[color].append(v)\r\n    for u in graph[v]:\r\n        if used[u] == 0:\r\n            dfs(u, color)\r\n\r\n\r\nfor i in range(int(input())):\r\n    n, m = map(int, input().split())\r\n    mat = [set() for _ in range(n + 1)]\r\n    graph = [set() for _ in range(n + 1)]\r\n    used = [0] * (n + 1)\r\n    used_color = [0] * (n + 1)\r\n    comp = [[] for _ in range(n + 1)]\r\n    for i in range(m):\r\n        a, b, c = map(int, input().split())\r\n        mat[a].add(c)\r\n        graph[a].add(c)\r\n        graph[c].add(a)\r\n    color = 1\r\n    for i in range(1, n):\r\n        if not used[i]:\r\n            dfs(i, color)\r\n            color += 1\r\n    for i in range(2, n):\r\n        if comp[i]:\r\n            mat[comp[i - 1][-1]].add(comp[i][-1])\r\n            graph[comp[i - 1][-1]].add(comp[i][-1])\r\n            graph[comp[i][-1]].add(comp[i - 1][-1])\r\n    for i in range(1, n + 1):\r\n        for j in mat[i]:\r\n            print(i, j)\r\n"
}