{
    "id": 161939451,
    "contestId": 1583,
    "creationTimeSeconds": 1656326726,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "Brokenheart100"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef pair<int, int> pii;\r\nconst int N = 1e4+10;\r\nint n, t, m;\r\nint main()\r\n{\r\n    inputData();\r\n    cin >> t;\r\n \r\n    while (t--)\r\n    {\r\n        cin >> n >> m;\r\n        int a, b, c;\r\n        vector<int> vis(N);\r\n      //  map<int, int> m1;\r\n     //   vector<vector<int>> G(N, vector<int>(N, -1));\r\n        while (m--)\r\n        {\r\n            cin >> a >> b >> c;\r\n            vis[b] = 1;\r\n      //      G[a][c] = b;\r\n      //      G[c][a] = b;\r\n        }\r\n        int root = -1;\r\n        for (int i = 1; i <= n; i++)\r\n        {\r\n            if (!vis[i])\r\n            {\r\n                root = i;\r\n                break;\r\n            }\r\n        }\r\n \r\n        for (int i = 1; i <= n; i++)\r\n        {\r\n            if (root == i)\r\n                continue;\r\n            cout << root << ' ' << i << endl;\r\n        }\r\n    }\r\n \r\n    return 0;\r\n}"
}