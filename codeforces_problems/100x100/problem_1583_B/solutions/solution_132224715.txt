{
    "id": 132224715,
    "contestId": 1583,
    "creationTimeSeconds": 1634470196,
    "relativeTimeSeconds": 1496,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "Takesha"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 2,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 921600,
    "source": "/*\r\n    Code written by Talant I.D.\r\n*/\r\n \r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n \r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n \r\ntypedef long long ll;\r\ntypedef pair <int, int> pii;\r\ntypedef pair <ll, ll> pll;\r\ntypedef tree <ll, null_type, less_equal <ll>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\r\n \r\n#define precision(n) fixed << setprecision(n)\r\n#define pb push_back\r\n#define ub upper_bound\r\n#define lb lower_bound\r\n#define mp make_pair\r\n#define eps (double)1e-9\r\n#define PI 2*acos(0.0)\r\n#define endl \"\\n\"\r\n#define sz(v) int((v).size())\r\n#define all(v) v.begin(),v.end()\r\n#define rall(v) v.rbegin(),v.rend()\r\n#define do_not_disturb ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n#define OK cout << \"OK\" << endl;\r\n \r\nconst int mod = 998244353;\r\n \r\nll mode(ll a) {\r\n    a %= mod;\r\n    while (a < 0) {\r\n        a += mod;\r\n    }\r\n    return a % mod;\r\n}\r\n \r\nll subt(ll a, ll b) {\r\n    return mode(mode(a)-mode(b));\r\n}\r\n \r\nll add(ll a, ll b) {\r\n    return mode(mode(a)+mode(b));\r\n}\r\n \r\nll mult(ll a, ll b) {\r\n    return mode(mode(a)*mode(b));\r\n}\r\n \r\nll binpow(ll a, ll b) {\r\n    ll res = 1;\r\n    while (b) {\r\n        if (b&1) res = mult(res, a);\r\n        a = mult(a, a);\r\n        b >>= 1;\r\n    }\r\n    return res;\r\n}\r\n\r\nbool isprime(int n) {\r\n    if (n%2 == 0 && n != 2) return false;\r\n    if (n == 2) return true;\r\n    if (n == 1) return false;\r\n    for (int i = 3; i*i <= n; i += 2) {\r\n        if (n%i == 0) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nconst int N = 1e5+7;\r\nint link[N], saizu[N];\r\n\r\nint find(int n) {\r\n    if (link[n] == n) return n;\r\n    return link[n] = find(link[n]);\r\n}\r\n\r\nbool same(int a, int b) {\r\n    return find(a) == find(b);\r\n}\r\n\r\nvoid unite(int a, int b) {\r\n    a = find(a); b = find(b);\r\n    if (saizu[a] < saizu[b]) swap(a, b);\r\n    saizu[a] += saizu[b];\r\n    link[b] = a;\r\n}\r\n\r\nint main() {\r\n    do_not_disturb\r\n    \r\n    int t;\r\n    cin >> t;\r\n    while (t--) {\r\n        int n, m;\r\n        cin >> n >> m;\r\n        for (int i = 1; i <= n; i++) {\r\n            link[i] = i; saizu[i] = 1;\r\n        }\r\n        vector <pii> p;\r\n        for (int i = 1; i <= m; i++) {\r\n            int a, b, c;\r\n            cin >> a >> b >> c;\r\n            p.pb(mp(a, c));\r\n        }\r\n        \r\n        sort(all(p));\r\n        for (auto to : p) {\r\n            cout << to.first << ' ' << to.second << endl;\r\n            unite(to.first, to.second);\r\n        }\r\n        set <int> st;\r\n        for (int i = 1; i <= n; i++) {\r\n            st.insert(find(i));\r\n        }\r\n        vector <int> v;\r\n        for (auto to : st) v.pb(to);\r\n        for (int i = 1; i < sz(v); i++) {\r\n            cout << v[i-1] << ' ' << v[i] << endl;\r\n        }\r\n    }\r\n    \r\n    return 0;\r\n}\r\n"
}