{
    "id": 188726133,
    "contestId": 1583,
    "creationTimeSeconds": 1673353317,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "tomatoSword"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nint main() {\r\n\tll t,n,m,i,a,b,c;\r\n\tcin>>t;\r\n\twhile(t--){\r\n\t    cin>>n>>m;\r\n\t    vector<ll> v(n) ; // vector with n ints.\r\n\t    iota (v.begin(), v.end(), 1); // Fill with 1, 2, ..., 99.\r\n\t    for(i=0 ; i<m; i++){\r\n\t       cin>>a>>b>>c;\r\n\t       v.erase(find (v.begin(), v.end(), b));\r\n\t   }\r\n\t    a= v[0];\r\n\t    for(i=1; i<a; i++) cout<<a<<\" \"<<i<<endl;\r\n\t    for(i=a+1; i<=n; i++) cout<<a<<\" \"<<i<<endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n"
}