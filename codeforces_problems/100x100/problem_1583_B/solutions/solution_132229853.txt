{
    "id": 132229853,
    "contestId": 1583,
    "creationTimeSeconds": 1634470868,
    "relativeTimeSeconds": 2168,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "wasvlad"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 29,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 7987200,
    "source": "/*#pragma optimize(\"ofast\")\r\n#pragma optimize(\"unroll-loops\")\r\n#pragma optimize(\"o3\")*/\r\n\r\n\r\n#include <bits/stdc++.h>\r\n#define fr(i,x,y) for(int i=x;i<y;i++)\r\n#define rfr(i,x,y) for(int i=x;i>=y;i--)\r\n//#define int long long\r\nusing namespace std;\r\nconst int N=2e6,INF=1e9+2,MOD=1e9+7;\r\nmt19937 rnd(time(0));\r\nint p[N];\r\nvoid create_set(int a)\r\n{\r\n    p[a]=a;\r\n}\r\nint find_set(int a)\r\n{\r\n    if(p[a]==a)return a;\r\n    return p[a]=find_set(p[a]);\r\n}\r\nvoid union_set(int a,int b)\r\n{\r\n    a=find_set(a);\r\n    b=find_set(b);\r\n    if(a==b)return;\r\n    if(rnd()%2)swap(a,b);\r\n    p[a]=b;\r\n}\r\nvoid solve()\r\n{\r\n    int n,m;\r\n    cin>>n>>m;\r\n    fr(i,1,n+1)create_set(i);\r\n    fr(i,0,m)\r\n    {\r\n        int a,b,c;\r\n        cin>>a>>b>>c;\r\n        if(find_set(a)!=find_set(b))\r\n        {\r\n            union_set(a,b);\r\n            cout<<a<<' '<<b<<'\\n';\r\n        }\r\n        if(find_set(a)!=find_set(c))\r\n        {\r\n            union_set(a,c);\r\n            cout<<a<<' '<<c<<'\\n';\r\n        }\r\n    }\r\n    fr(i,2,n+1)\r\n    {\r\n        if(find_set(i-1)!=find_set(i))\r\n        {\r\n            cout<<i-1<<' '<<i<<'\\n';\r\n            union_set(i-1,i);\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nsigned main()\r\n{\r\n    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\r\n    int t=1;\r\n    cin>>t;\r\n    while(t--)solve();\r\n\r\n}\r\n"
}