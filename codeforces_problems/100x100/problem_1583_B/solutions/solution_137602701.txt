{
    "id": 137602701,
    "contestId": 1583,
    "creationTimeSeconds": 1638361434,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "likhithkr7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 204800,
    "source": "#include \"bits/stdc++.h\"\n// #include<ext/pb_ds/assoc_container.hpp>\n// #include<ext/pb_ds/tree_policy.hpp>\nusing namespace std;\n// using namespace chrono;\n// using namespace __gnu_pbds;\n\n#define nl \"\\n\"\n#define ff first\n#define ss second\n#define pb push_back\n#define ms(a, n) memset(a, n, sizeof(a))\n#define sortem(v) sort(v.begin(),v.end())\n#define debug(x) cerr<<#x<<\" = \";_print(x); cerr << \"\\n\"\n#define left_rotate(v,k) rotate(v.begin(),v.begin()+2,vec.end()) // left rotation 1 2 3 4 5 6 7 8 -> rotate 2 left -> 3 4 5 6 7 8 1 2\n#define Fastio() ios_base::sync_with_stdio(0);cin.tie(0)\n#define right_rotate(v,k) rotate(v.begin(),v.begin()+v.size()-k,v.end()) // right rotation 1 2 3 4 5 6 7 8 -> rotate 3 right -> 6 7 8 1 2 3 4 5\n#define debug2(x,y) cerr << #x << \" = \";_print(x);cerr<< \" , \"<< #y <<\" = \";_print(y); cerr<< '\\n'\n\ntypedef long long ll;\ntypedef long double lld;\ntypedef unsigned long long ull;\n//priority_queue<int, vector<int>, greater<int>> pq;\n// typedef tree<pair<ll, ll>, null_type, less<pair<ll, ll>>, rb_tree_tag, tree_order_statistics_node_update > pbds; // find_by_order, order_of_key\n\nvoid _print(ll t) {cerr << t;}\nvoid _print(ull t) {cerr << t;}\nvoid _print(int t) {cerr << t;}\nvoid _print(lld t) {cerr << t;}\nvoid _print(char t) {cerr << t;}\nvoid _print(string t) {cerr << t;}\nvoid _print(double t) {cerr << t;}\n\ntemplate <class T> void _print(set <T> v);\ntemplate <class T> void _print(vector <T> v);\ntemplate <class T> void _print(multiset <T> v);\ntemplate <class T, class V> void _print(map <T, V> v);\ntemplate <class T, class V> void _print(pair <T, V> p);\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\n\nconst int MOD = 1e9 + 7;\nconst int INF = numeric_limits<int>::max();\nconst int INF_MIN = numeric_limits<int>::min();\nconst ll INF_LL = numeric_limits<ll>::max();\nconst ll INF_MIN_LL = numeric_limits<ll>::min();\n\nll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}\nll mminv(ll a, ll b) {return expo(a, b - 2, b);}\nll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\nll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}\nll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}\nll mod_div(ll a, ll b, ll m) {a = a % m; b = b % m; return (mod_mul(a, mminv(b, m), m) + m) % m;}  //only for prime m\nll combination(ll n, ll r, ll m, ll *fact, ll *ifact) {ll val1 = fact[n]; ll val2 = ifact[n - r]; ll val3 = ifact[r]; return (((val1 * val2) % m) * val3) % m;}\nll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}\nll NCR(ll n, ll r) { ll p = 1, k = 1; if (n - r < r) {r = n - r;} if (r != 0) {while (r) {p *= n; k *= r; ll m = gcd(p, k); p /= m; k /= m; n--; r--;}} else {p = 1;} return p;}\ntuple<ll, ll, ll> ex_gcd(ll a, ll b) {if (b == 0) {return {1, 0, a};} ll x, y, g; tie(x, y, g) = ex_gcd(b, a % b); return {y, x - (a / b)*y, g};}\nvoid precision(int a) {cout << setprecision(a) << fixed;}\n// void _print(pbds v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\n\nvoid Error() {\n#ifndef ONLINE_JUDGE\n  freopen(\"Error.txt\", \"w\", stderr);\n#endif\n}\n/*-----------------------------------------------------------------------------------------------------------------------------------*/\n\nint main()\n{\n  Fastio();\n  Error();\n  ll t;\n  cin >> t;\n  while (t--) {\n    ll n, m;\n    cin >> n >> m;\n    vector<bool> v(n + 1, true);\n    while (m--) {\n      ll a, b, c;\n      cin >> a >> b >> c;\n      v[b] = false;\n    }\n    ll key;\n    for (ll i = 1; i <= n; ++i) {\n      if (v[i]) {\n        key = i;\n        break;\n      }\n    }\n    for (ll i = 1; i <= n; ++i) {\n      if (i == key) {\n        continue;\n      }\n      cout << key << \" \" << i << nl;\n    }\n  }\n  return 0;\n}\n"
}