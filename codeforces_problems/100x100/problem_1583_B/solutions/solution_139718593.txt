{
    "id": 139718593,
    "contestId": 1583,
    "creationTimeSeconds": 1639815825,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "piyush0120"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 2150400,
    "source": "#define pb push_back\r\n#define F first\r\n#define S second\r\n#define MP make_pair\r\n#define tos to_string\r\n#define nline \"\\n\"\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define len(a) a.size()\r\n#define PI pair<int,int>\r\n#define MM(a , x) memset(a , x , sizeof(a))\r\n#define ign ignore(numeric_limits<streamsize>::max(), '\\n')\r\n#define forl(i,b,n) for(int i=b;i<n;i++)\r\n#define rof(i,n,b) for(int i=n;i>=b;--i)\r\n#define testc int t;cin>>t;while(t--)\r\n#define maxN 1000001\r\n#define MOD 1000000007\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nint gcd(int a, int b) { if (a == 0) return b; return gcd(b % a, a);}\r\nbool sortByVal(const pair<int, int> &a, const pair<int, int> &b) {return (a.second < b.second);/*sort(v.begin(), v.end(), sortByVal);*/}\r\n/*****************/\r\nbool check(ll n, ll a[], ll h, ll k) {\r\n    ll points = 0;\r\n    forl(i, 1, n) {\r\n        points += min(a[i] - a[i - 1], k);\r\n    }\r\n    points += k;\r\n    //cout << points << \":points\\n\";\r\n    if (points >= h)\r\n        return true;\r\n    return false;\r\n}\r\n\r\nvoid solve()\r\n{\r\n    int n, m; cin >> n >> m;\r\n    int a[m][3];\r\n    forl(i, 0, m) {\r\n        forl(j, 0, 3) {\r\n            cin >> a[i][j];\r\n        }\r\n    }\r\n    // forl(i, 0, m) {\r\n    //     forl(j, 0, 3)\r\n    //     cout << a[i][j] << \" \";\r\n    //     cout << \"\\n\";\r\n    // }\r\n    int mid[n + 1] = {0};\r\n    forl(i, 0, m) {\r\n        mid[a[i][1]]++;\r\n    }\r\n    // for (auto it : mid)\r\n    //     cout << it << \" \";\r\n    // cout << \"\\n\";\r\n\r\n    std::vector<int> v;\r\n    forl(i, 1, n + 1) {\r\n        if (!mid[i])\r\n            v.pb(i);\r\n    }\r\n    int i = 0;\r\n    while (i + 1 < v.size()) {\r\n        cout << v[i] << \" \" << v[i + 1] << \"\\n\";\r\n        i++;\r\n    }\r\n\r\n\r\n    int e = -1;\r\n    rof(i, n, 0) {\r\n        if (!mid[i]) {\r\n            e = i; break;\r\n        }\r\n    }\r\n    forl(i, 1, n + 1) {\r\n        if (mid[i])\r\n            cout << e << \" \" << i << \"\\n\";\r\n    }\r\n\r\n    return;\r\n}\r\n\r\nint main()\r\n{\r\n\r\n#ifndef ONLINE_JUDGE\r\n\r\n    freopen(\"input2.txt\", \"r\", stdin);\r\n    freopen(\"output2.txt\", \"w\", stdout);\r\n#endif\r\n\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout << fixed;\r\n    cout << setprecision(15);\r\n    testc\r\n    solve();\r\n\r\n}"
}