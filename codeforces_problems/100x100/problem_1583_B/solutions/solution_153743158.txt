{
    "id": 153743158,
    "contestId": 1583,
    "creationTimeSeconds": 1650042170,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "gam_bit"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 204800,
    "source": "//===========bakwass============\r\n\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n#define float double\r\n#define ll long long\r\n#define endl '\\n'\r\n#define gc getchar_unlocked\r\n#define fo(i,n) for(int i=0;i<n;i++)\r\n#define Fo(i,k,n) for(int i=k;k<n?i<n:i>n;k<n?i+=1:i-=1)\r\n#define deb(x) cout << #x << \"=\" << x << endl\r\n#define deb2(x, y) cout << #x << \"=\" << x << \",\" << #y << \"=\" << y << endl\r\n#define pb push_back\r\n#define mp make_pair\r\n#define F first\r\n#define S second\r\n#define all(x) x.begin(), x.end()\r\n#define in(j) int j = 0 ; cin>> j  \r\n#define clr(x) memset(x, 0, sizeof(x))\r\n#define sorta(x) sort(all(x))\r\n#define sortd(x) sort(all(x), greater<>())\r\n#define tr(it, a) for(auto it = a.begin(); it != a.end(); it++)\r\n#define PI 3.1415926535897932384626\r\n#define ed(n) vector<int> *edges = new vector<int>[n] ; \r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, ll> pl;\r\ntypedef vector<int> vi;\r\ntypedef vector<ll> vl;\r\ntypedef vector<pii> vpii;\r\ntypedef vector<pl> vpl;\r\ntypedef vector<vi> vvi;\r\ntypedef vector<vl> vvl;\r\ntypedef priority_queue<int> pqi;\r\n\r\n\r\nmt19937_64 rang(chrono::high_resolution_clock::now().time_since_epoch().count());\r\nint rng(int lim) {\r\n  uniform_int_distribution<int> uid(0,lim-1);\r\n  return uid(rang);\r\n}\r\n\r\n\r\n\r\nint mpow(int base, int exp); \r\nvoid ipgraph(int n, int m);\r\nvoid dfs(int u, int par);\r\n\r\n\r\n\r\nconst int mod = 1'000'000'007;\r\nconst int N = 3e5, M = N;\r\n\r\n\r\n//=============code==============\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvoid dfs(int u,vector<int> *g,  int par){\r\n  if(u!= 1){\r\n    \r\n   }\r\n  for(int v:g[u]){\r\n      if (v == par) continue;\r\n  cout<< v << \" \" << u<<endl;\r\n\r\n       dfs(v,g,  u);\r\n   }\r\n}\r\n\r\n\r\n\r\nvoid solve() {\r\nin(n) ; in(m) ;\r\ned(n+1); \r\nint arr[n] = {0}; \r\n// 1 based \r\nint g = 0 ; \r\nfo(i , m){\r\n  \r\nin(a) ; in(c) ; in(b) ; \r\n arr[i] = c ; \r\n\r\n}\r\nint d = 0;\r\nsort(arr, arr+m) ; \r\n\r\nfo( i , n ){\r\n  if(arr[i] != i+1){\r\n    d =i+1 ;\r\n \r\n  }\r\n}\r\nfo(i , n){\r\n  if(i+1==d) continue;\r\n  edges[i+1].pb(d) ;\r\n  edges[d].pb(i+1); \r\n}\r\n\r\n// cout<<\"J\";\r\ndfs(d ,edges  ,  -1 ) ; \r\n\r\n}\r\n\r\n\r\n\r\n\r\nint32_t main() {\r\n#ifndef ONLINE_JUDGE\r\nfreopen(\"input.txt\", \"r\", stdin);\r\nfreopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n   srand(chrono::high_resolution_clock::now().time_since_epoch().count());\r\n\r\n    int t = 1;\r\n    cin >> t;\r\n    while(t--) {\r\n      solve();\r\n    }\r\n\r\n    return 0;\r\n}"
}