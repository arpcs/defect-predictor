{
    "id": 197888857,
    "contestId": 1583,
    "creationTimeSeconds": 1679131975,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "Mhmd_Bakr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 0,
    "source": "//#pragma once\r\n#include <bits/stdc++.h>\r\n#include <windows.h>\r\n#include <iostream>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\n\r\n//#include <boost/multiprecision/cpp_int.hpp>\r\nusing namespace std;\r\n//using namespace boost::multiprecision;\r\n\r\n// Author: Mohamed Bakr\r\n\r\n#define ll long long int\r\n#define int ll\r\n#define vct vector\r\n//#define int128 number<cpp_int_backend<128, 128, unsigned_magnitude, unchecked, void>>\r\n#define all(v) v.begin(),v.end()\r\n#define rall(v) v.rbegin(),v.rend()\r\n#define sum(v) accumulate(all(v), 0LL)\r\n#define minv(v) *min_element(all(v))\r\n#define maxv(v) *max_element(all(v))\r\n#define umap unordered_map\r\n#define ln \"\\n\"\r\n#define yes cout<<\"YES\"<<ln\r\n#define no cout<<\"NO\"<<ln\r\n#define precision(x,y) fixed<<setprecision(y)<<x\r\n#define fastio ios::sync_with_stdio(0),cin.tie(0),cout.tie(0)\r\n#define PI 3.141592653589793238462643383279502884197\r\n#define ret return void\r\n\r\ntemplate <typename T, typename C>\r\nistream& operator>>(istream& istream, pair<T, C>& pi)\r\n{\r\n\tcin >> pi.first >> pi.second;\r\n\treturn istream;\r\n}\r\ntemplate <typename T>\r\nistream& operator>>(istream& istream, vct<T>& v)\r\n{\r\n\tfor (T& it : v) cin >> it;\r\n\treturn istream;\r\n}\r\ntemplate <typename T>\r\nostream& operator<<(ostream& ostream, vct<T>& v)\r\n{\r\n\tfor (T it : v) cout << it << \" \";\r\n\treturn ostream;\r\n}\r\ntemplate <typename T>\r\nvoid sort(pair<T, T>& pi)\r\n{\r\n\tif (pi.first > pi.second) swap(pi.first, pi.second);\r\n}\r\ntemplate <typename T>\r\nvoid rsort(pair<T, T>& pi)\r\n{\r\n\tif (pi.first < pi.second) swap(pi.first, pi.second);\r\n}\r\nclass Console_Color\r\n{\r\nprivate:\r\n\tHANDLE console_color = GetStdHandle(STD_OUTPUT_HANDLE);\r\npublic:\r\n#define SCT SetConsoleTextAttribute\r\n\tvoid red() { SCT(console_color, FOREGROUND_RED); }\r\n\tvoid green() { SCT(console_color, FOREGROUND_GREEN); }\r\n\tvoid blue() { SCT(console_color, FOREGROUND_BLUE); }\r\n\tvoid cyan() { SCT(console_color, FOREGROUND_BLUE | FOREGROUND_GREEN | FOREGROUND_INTENSITY); }\r\n\tvoid white() { SCT(console_color, FOREGROUND_BLUE | FOREGROUND_GREEN | FOREGROUND_RED); }\r\n\tvoid gray() { SCT(console_color, FOREGROUND_INTENSITY); }\r\n\tvoid yellow() { SCT(console_color, FOREGROUND_GREEN | FOREGROUND_RED); }\r\n};\r\nConsole_Color color;\r\nint fact(int n)\r\n{\r\n\tif (n == 0) return 1;\r\n\treturn n * fact(n - 1);\r\n}\r\nbool prime(int num)\r\n{\r\n\tif (num == 1) return false;\r\n\tint ch = 2;\r\n\twhile (ch * ch <= num)\r\n\t{\r\n\t\tif (!(num % ch)) return false;\r\n\t\tch++;\r\n\t}return true;\r\n}\r\nint nPr(int n, int r) { return fact(n) / fact(n - r); }\r\nint nCr(int n, int r) { return fact(n) / (fact(r) * fact(n - r)); }\r\nint gcd(int a, int b) { if (b == 0) return a; return gcd(b, a % b); }\r\nint lcm(int a, int b) { return (a * b) / gcd(a, b); }\r\n\r\nint xd[8] = { -1,0,1, 0,-1,-1, 1, 1 };\r\nint yd[8] = { 0,1,0,-1, 1,-1, 1,-1 };\r\n\r\n\r\nvoid answer(int test)\r\n{\r\n\tint n, m; cin >> n >> m;\r\n\tvct<bool> forbid(n + 1);\r\n\twhile (m--)\r\n\t{\r\n\t\tint a;\r\n\t\tcin >> a >> a;\r\n\t\tforbid[a] = 1;\r\n\t\tcin >> a;\r\n\t}\r\n\tcolor.cyan();\r\n\tfor (int i = 1; i <= n; i++)\r\n\t{\r\n\t\tif (!forbid[i])\r\n\t\t{\r\n\t\t\tfor (int j = 1; j <= n; j++)\r\n\t\t\t{\r\n\t\t\t\tif (j != i)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (j % 2) cout << i << \" \" << j << ln;\r\n\t\t\t\t\telse cout << j << \" \" << i << ln;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\nbool multiTests = true;\r\nINT main()\r\n{\r\n\t//freopen(\"input.txt\", \"r\", stdin);\r\n\t//freopen(\"out.txt\", \"w\", stdout);\r\n\tfastio;\r\n\tint tests = 1;\r\n\tif (multiTests) cin >> tests;\r\n\tfor (int test = 1; test <= tests; test++)\r\n\t{\r\n\t\t//cout << \"Case \" << test << \": \";\r\n\t\tanswer(test);\r\n\t\tcolor.white();\r\n\t}\r\n}"
}