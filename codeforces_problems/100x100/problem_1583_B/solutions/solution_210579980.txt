{
    "id": 210579980,
    "contestId": 1583,
    "creationTimeSeconds": 1687371311,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "Garry66"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 819200,
    "source": "#include<bits/stdc++.h>\r\n#include<iostream>\r\n#include<cmath>\r\n#include<algorithm>\r\n#include<vector>\r\n#include<cstring>\r\n#include<list>\r\n#include<map>\r\n#include<functional>\r\n#include<set>\r\n#include<numeric>\r\n#include<unordered_map>\r\n#include<unordered_set>\r\n#include<iterator>\r\n#include<deque>\r\n#include<string>\r\n#include<queue>\r\n \r\nusing namespace std;\r\n \r\n#define ll long long int\r\n#define ld long double\r\n \r\nll mod=998244353;\r\n// ll mod=1e7+7;\r\n \r\nconst ll K=1e5+5;\r\nvector<ll> facdp(K,-1);\r\n \r\n \r\n#define arr_input(a,n) ll a[n];for(int i=0;i<n;i++){cin>>a[i];}\r\n#define arr_input_and_sum(a,n) ll a[n],sum=0;for(int i=0;i<n;i++){cin>>a[i];sum+=a[i];}\r\n bool f(string s){\r\n    for(int i=0;i<s.length();i++){\r\n        if(s[i]!=s[s.length()-i-1]){\r\n            return false;\r\n        }\r\n    }\r\nreturn true;\r\n}\r\nbool similar(string s){\r\n    int ones=0;\r\n    int zeroes=0;\r\n    for(int i=0;i<s.length();i++){\r\n        if(s[i]=='1'){\r\n            ones++;\r\n        }\r\n        else zeroes++;\r\n    }\r\n    return ones==zeroes;\r\n}\r\nvoid dfs(long long index,long long woi,vector<long long> &vis,vector<vector<long long>> & v){\r\n    \r\n \r\n    for(auto it:v[index]){\r\n           if(it!=woi){\r\n               dfs(it,index,vis,v);\r\n               vis[index]+=vis[it];\r\n           }\r\n    }\r\n    if(v[index].size()==1){\r\n        if(index!=1){\r\n            vis[index]=1;\r\n        }\r\n    }\r\n    \r\n}\r\nint main(){\r\nint t;\r\ncin>>t;\r\nwhile(t--){\r\n    int n,m;\r\n    cin>>n>>m;\r\n    vector<int> adj[n+1];\r\n    vector<vector<int>> v(m,vector<int> (3,0));\r\n    for(int i=0;i<m;i++){\r\n        cin>>v[i][0]>>v[i][1]>>v[i][2];\r\n    }\r\n    int rt=1;\r\n    for(int i=0;i<m;i++){\r\n        if(v[i][1]==rt){\r\n            rt++;\r\n        }\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        if(i==rt){\r\n            continue;\r\n        }\r\n        cout<<i<<\" \"<<rt<<endl;\r\n    }\r\n       \r\n}\r\nreturn 0;\r\n}"
}