{
    "id": 205256696,
    "contestId": 1583,
    "creationTimeSeconds": 1683653401,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "ritesh160193"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<iostream>\r\n#include<algorithm>\r\n#include<map>\r\n#include<set>\r\n#include<iterator>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        int n,m;\r\n        cin>>n>>m;\r\n        int a,b,c;\r\n        vector<pair<int,int>> v;\r\n        vector<int> remain;\r\n        set<int> s;\r\n        int arr[n];\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            arr[i]=0;\r\n        }\r\n        for(int i=0;i<m;i++)\r\n        {\r\n            cin>>a>>b>>c;\r\n            v.push_back(make_pair(a,c));\r\n            arr[a-1]=1;\r\n            arr[c-1]=1;\r\n        }\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            if(arr[i]!=1)\r\n            {\r\n                remain.push_back(i+1);\r\n            }\r\n        }\r\n        int sz=v.size();\r\n        for(int i=0;i<sz-1;i++)\r\n        {\r\n            s.insert(v[i].first);\r\n            s.insert(v[i].second);\r\n            if(v[i].second!=v[i+1].first&& s.find(v[i+1].first)==s.end())\r\n            {\r\n                v.push_back(make_pair(v[i].second,v[i+1].first));\r\n                s.insert(v[i+1].first);\r\n            }\r\n        }\r\n        for(int i=0;i<remain.size();i++)\r\n        {\r\n            v.push_back(make_pair(v[0].first,remain[i]));\r\n        }\r\n        for(int i=0;i<v.size();i++)\r\n        {\r\n            cout<<v[i].first<<\" \"<<v[i].second<<endl;\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}"
}