{
    "id": 215356057,
    "contestId": 5,
    "creationTimeSeconds": 1690202713,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 5,
        "index": "E",
        "name": "Bindian Signalizing",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 5,
        "members": [
            {
                "handle": "UPC.LJW"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1269100800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 46,
    "timeConsumedMillis": 3742,
    "memoryConsumedBytes": 28672000,
    "source": "// LUOGU_RID: 117267669\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define x first\r\n#define y second\r\n#define endl '\\n'\r\ntypedef long long LL;\r\ntypedef pair<int, int> PII;\r\ntypedef pair<PII, PII> PIII;\r\nconst int N = 2000010, mod = 1e9 + 7;\r\nstack<int> s;\r\nint a[N], b[N];\r\nLL ans;\r\nint n;\r\nint g[N];\r\nvoid solve()\r\n{\r\n    cin >> n;\r\n    int mx = 0, id;\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        cin >> a[i];\r\n        if (a[i] > mx)\r\n        {\r\n            mx = a[i];\r\n            id = i;\r\n        }\r\n    }\r\n    int t = 0;\r\n    ans = n - 1;\r\n    for (int i = id + 1; i <= n; i++)\r\n        b[++t] = a[i];\r\n    for (int i = 1; i < id; i++)\r\n        b[++t] = a[i];\r\n    for (int i = 1; i < n; i++)\r\n    {\r\n        while (s.size() && s.top() < b[i])\r\n        {\r\n            ans += g[s.size()];\r\n            s.pop();\r\n        }\r\n        if (!s.size() || (s.size() && s.top() != b[i]))\r\n        {\r\n            s.push(b[i]);\r\n            g[s.size()] = 0;\r\n        }\r\n        ans += g[s.size()]++;\r\n    }\r\n    while (s.size() > 1)\r\n    {\r\n        ans += g[s.size()];\r\n        s.pop();\r\n    }\r\n    cout << ans << endl;\r\n}\r\nint main()\r\n{\r\n    int t = 1;\r\n    // scanf(\"%d\", &t);\r\n    while (t--)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n"
}