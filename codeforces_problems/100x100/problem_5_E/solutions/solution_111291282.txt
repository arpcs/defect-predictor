{
    "id": 111291282,
    "contestId": 5,
    "creationTimeSeconds": 1616944255,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 5,
        "index": "E",
        "name": "Bindian Signalizing",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 5,
        "members": [
            {
                "handle": "atodo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1269100800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 46,
    "timeConsumedMillis": 654,
    "memoryConsumedBytes": 13004800,
    "source": "/**\r\n ____ ____ ____ ____ ____\r\n||a |||t |||o |||d |||o ||\r\n||__|||__|||__|||__|||__||\r\n|/__\\|/__\\|/__\\|/__\\|/__\\|\r\n\r\n**/\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n\r\nconst int N_MAX = 1000000;\r\n\r\nint n;\r\n\r\nint h[N_MAX + 2];\r\n\r\nint st[N_MAX + 2];\r\nint lg;\r\n\r\nint cntEqSt[N_MAX + 2];\r\n\r\nbool ok[N_MAX + 2];\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    cin >> n;\r\n    for(int i = 1; i <= n; i++)\r\n        cin >> h[i];\r\n    int maxPos = 0;\r\n    for(int i = 1; i <= n; i++)\r\n        if(h[i] > h[maxPos])\r\n            maxPos = i;\r\n    reverse(h + 1, h + maxPos + 1);\r\n    reverse(h + maxPos + 1, h + n + 1);\r\n    h[++n] = h[1];\r\n    ll answer = 0;\r\n    lg = 0;\r\n    for(int i = 1; i < n; i++)\r\n    {\r\n        while(lg > 0 && h[st[lg]] < h[i])\r\n            lg--;\r\n        if(h[i] == h[st[lg]])\r\n            cntEqSt[i] = cntEqSt[st[lg]] + 1;\r\n        else\r\n            cntEqSt[i] = 1;\r\n        answer += cntEqSt[i] - 1;\r\n        if(lg > 0 && h[st[lg]] == h[i])\r\n            lg--;\r\n        answer += (lg > 0);\r\n        ok[i] = (lg > 0 && st[lg] == 1);\r\n        st[++lg] = i;\r\n    }\r\n    lg = 0;\r\n    for(int i = n; i >= 1; i--)\r\n    {\r\n        while(lg > 0 && h[st[lg]] <= h[i])\r\n            lg--;\r\n        if(h[i] == h[st[lg]])\r\n            cntEqSt[i] = cntEqSt[st[lg]] + 1;\r\n        else\r\n            cntEqSt[i] = 1;\r\n        answer += (lg > 0 && !(st[lg] == n && ok[i] == true));\r\n        st[++lg] = i;\r\n    }\r\n    cout << answer << \"\\n\";\r\n    return 0;\r\n}\r\n"
}