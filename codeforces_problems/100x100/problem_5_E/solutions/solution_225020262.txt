{
    "id": 225020262,
    "contestId": 5,
    "creationTimeSeconds": 1695610911,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 5,
        "index": "E",
        "name": "Bindian Signalizing",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 5,
        "members": [
            {
                "handle": "wisoredcf"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1269100800
    },
    "programmingLanguage": "Python 3",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 60,
    "memoryConsumedBytes": 102400,
    "source": "################################################################################\r\n# n=int(input())\r\n# h=list(map(int, input().split()))\r\n\r\n# h=[1,2,4,5,3]\r\n# h=[1,1,1,1] # 6\r\n# h=[1178,1178,2577,2577] # 6\r\n# h=[332,2714,2420,2714] # 5\r\n################################################################################\r\nmax_h,max_index=max( ((v,i) for i,v in enumerate(h)), key=lambda k:k[0] )\r\nh=h[max_index:]+h[:max_index]\r\nh.append(max_h)\r\nn=len(h)\r\n\r\nresult=0\r\n\r\nL=[i for i in range(n)]\r\nc=[0 for i in range(n)]\r\ng=[0 for i in range(n)]\r\nfor i in range(1,n-1):\r\n    j=i-1\r\n    while j>0 and h[i]>=h[j]:\r\n        if h[i]==h[j]:\r\n            c[i]=c[j]+1\r\n        j=L[j]\r\n\r\n    L[i]=j\r\n\r\n    result+=c[i]\r\n    if c[i]>0 and h[i-1]==h[i]:\r\n        result=result-1\r\n    if j!=i-1 and not (i==n-2 and j==0):\r\n        print(i,j)\r\n        result+=1\r\n        if j==0:\r\n            g[i]=1\r\n\r\nR=[i for i in range(n)]\r\nfor i in range(n-1,0,-1):\r\n    j=i+1\r\n    while j<n-1 and h[i]>=h[j]:\r\n        j=R[j]\r\n    R[i]=j\r\n    if j!=i+1 and not (i==1 and j==n-1):\r\n        print(i,j)\r\n        result+=1\r\n    if g[i] and j==n-1:\r\n        result=result-1\r\n\r\nresult=result+n-1\r\nprint(result)\r\n"
}