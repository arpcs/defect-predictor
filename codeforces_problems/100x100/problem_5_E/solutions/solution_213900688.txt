{
    "id": 213900688,
    "contestId": 5,
    "creationTimeSeconds": 1689422092,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 5,
        "index": "E",
        "name": "Bindian Signalizing",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 5,
        "members": [
            {
                "handle": "ryangan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1269100800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 46,
    "timeConsumedMillis": 686,
    "memoryConsumedBytes": 49356800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nlong long a[2000001], b[2000001];\r\n\r\nstruct node\r\n{\r\n    long long v, cnt;\r\n};\r\n\r\nint main()\r\n{\r\n    long long n;\r\n    scanf(\"%lld\", &n);\r\n    for(long long i = 1;i <= n;i++)\r\n    {\r\n        scanf(\"%lld\", &a[i]);\r\n    }\r\n    for(long long i = n + 1;i <= 2 * n;i++)\r\n    {\r\n        a[i] = a[i - n];\r\n    }\r\n    long long pos = 1;\r\n    for(long long i = 2;i <= n;i++)\r\n    {\r\n        if(a[pos] < a[i])\r\n        {\r\n            pos = i;\r\n        }\r\n    }\r\n    n++;\r\n    b[1] = a[pos];\r\n    for(long long i = pos;i <= n + pos - 1;i++)\r\n    {\r\n        b[i - pos + 1] = a[i];\r\n    }\r\n    long long res = 0, last = 0;\r\n    stack<node> st;\r\n    for(long long i = 1;i <= n;i++)\r\n    {\r\n        while(!st.empty() && st.top().v < b[i])\r\n        {\r\n            res += st.top().cnt * 2 + (st.top().cnt - 1) * st.top().cnt / 2;\r\n            last = st.top().cnt;\r\n            st.pop();\r\n        }\r\n        if(!st.empty() && b[i] == st.top().v)\r\n        {\r\n            long long y = st.top().cnt;\r\n            st.pop();\r\n            st.push({b[i], y + 1});\r\n        }    \r\n        else\r\n        {\r\n            st.push({b[i], 1});        \r\n        }\r\n    }\r\n    if(!st.empty() && st.top().cnt > 2)\r\n    {\r\n        res += (st.top().cnt - 2) * (st.top().cnt - 1) / 2;\r\n        last = 0;\r\n    }\r\n    printf(\"%lld\\n\", res - last);\r\n    return 0;\r\n}"
}