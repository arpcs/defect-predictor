{
    "id": 203867662,
    "contestId": 5,
    "creationTimeSeconds": 1682744328,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 5,
        "index": "E",
        "name": "Bindian Signalizing",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 5,
        "members": [
            {
                "handle": "fengziyi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1269100800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 46,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 16691200,
    "source": "// LUOGU_RID: 109157985\n// Problem:      Bindian Signalizing\r\n// Contest:      Luogu\r\n// URL:          https://www.luogu.com.cn/problem/CF5E\r\n// Memory Limit: 250 MB\r\n// Time Limit:   4000 ms\r\n// Created Time: 2023-04-29 10:57:41 \r\n\r\n#include <iostream>\r\n\r\n#include <stack>\r\n#include <cstring>\r\n#include <bitset>\r\n\r\n#define i64 long long\r\n#define reg register\r\n#define qwq puts(\"fzy qwq ~\");\r\n\r\nusing namespace std;\r\nnamespace bufIO\r\n{\r\n    const int _Pu = 1 << 16;\r\n    const int _d = 32;\r\n    char buf[_Pu], obuf[_Pu];\r\n    char *inl = buf + _Pu, *inr = buf + _Pu;\r\n    char *outl = obuf, *outr = obuf + _Pu - _d;\r\n    inline void flushin()\r\n    {\r\n        memmove(buf, inl, inr - inl);\r\n        int rlen = fread(buf + (inr - inl), 1, inl - buf, stdin);\r\n        if (inl - rlen > buf) { buf[inr - inl + rlen] = EOF; }\r\n        inl = buf;\r\n    }\r\n    inline void flushout() { fwrite(obuf, outl - obuf, 1, stdout), outl = obuf; }\r\n    template <typename _Tp>\r\n    inline void read(_Tp &x)\r\n    {\r\n        if (inl + _d > inr) { flushin(); }\r\n        int isne = 0;\r\n        for (; !isdigit(*inl); ++inl) { isne = (*inl == '-'); }\r\n        x = (*inl++ - '0');\r\n        for (; isdigit(*inl); ++inl) { x = x * 10 + (*inl - '0'); }\r\n        if (isne) { x = -x; }\r\n    }\r\n    template <typename _Tp>\r\n    inline void writeln(_Tp x, char end = '\\n')\r\n    {\r\n        if (outl > outr) { flushout(); }\r\n        if (x < 0) { *outl++ = '-'; x = -x; }\r\n        char sta[20]; char *top = sta;\r\n        do { *top++ = (x % 10) + '0'; x /= 10; } while (x);\r\n        do { *outl++ = *--top; } while (top != sta);\r\n        (*outl++) = end;\r\n    }\r\n    template<typename _Tp, typename ...Args>\r\n    inline void read(_Tp& x, Args& ...args) { read(x), read(args...); }\r\n}\r\nusing namespace bufIO;\r\n\r\nint n;\r\nint pos, now, faq;\r\nint a[1000010];\r\nint h[1000010];\r\nint r[1000010];\r\nbitset<1000010> vis;\r\nstack<int> st;\r\ni64 ans;\r\n\r\nint main()\r\n{\r\n\tread(n);\r\n\tfor (reg int i = 1, now = 0; i <= n; ++i)\r\n\t{\r\n\t\tread(a[i]);\r\n\t\tif (a[i] > now)\r\n\t\t{ now = a[i], pos = i; }\r\n\t}\r\n\tfor (reg int i = 1; i <= n; ++i)\r\n\t\th[i] = a[(i + pos - 2) % n + 1];\t\r\n\t\r\n\tfor (reg int i = 1; i <= n; ++i)\r\n    {\r\n    \tr[i] = 1; faq = 0;\r\n        for (; st.size() && h[faq = st.top()] <= h[i]; st.pop())\r\n        {\r\n        \tans += r[faq];\r\n        \tif (h[i] == h[faq])\r\n        \t\tr[i] += r[faq];\r\n        }\r\n        if (st.size())\r\n        {\r\n        \t++ans;\r\n        \tif (st.top() == 1)\r\n        \t\tvis[i] = 1;\r\n        }\r\n        st.push(i);\r\n    }\r\n    \r\n    for (reg int i = n; i > 1; --i)\r\n    {\r\n    \tif (!vis[i] && h[i] != h[1] && h[i] >= now)\r\n    \t\t++ans;\r\n    \tnow = max(now, h[i]);\r\n    }\r\n    \r\n\twriteln(ans);\r\n\tflushout();\r\n\treturn 0;\r\n}"
}