{
    "id": 40108539,
    "contestId": 14,
    "creationTimeSeconds": 1531130809,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "nimishagarg_ng"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 110,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 307200,
    "source": "// g++ -std=c++14\n#include<bits/stdc++.h>\ntypedef long long int lli;\ntypedef long double lld;\nusing namespace std;\n\n#define sd(x) scanf(\"%d\",&x);\n#define sd2(x,y) scanf(\"%d%d\",&x,&y);\n#define sd3(x,y,z) scanf(\"%d%d%d\",&x,&y,&z);\n\n#define fi first\n#define se second\n#define pb(x) push_back(x)\n#define mp(x,y) make_pair(x,y)\n\n#define LET(x, a)  __typeof(a) x(a)\n#define foreach(it, v) for(LET(it, v.begin()); it != v.end(); it++)\n#define _ ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\n#define __ freopen(\"input.txt\",\"r\",stdin);freopen(\"output.txt\",\"w\",stdout);\nvector<vector<int> >vec(4,vector<int>(4));\nbool check(int a,int b,int c,int d){\n  for(int i=0;i<4;i++){\n    if(vec[i][0]==a and vec[i][1]==b and vec[i][2]==c and vec[i][3]==d){\n      return true;\n    }\n    if(vec[i][0]==c and vec[i][1]==d and vec[i][2]==a and vec[i][3]==b){\n      return true;\n    }\n  }\n  return false;\n}\nint main(){\n  _\n  set<int>xcor;\n  set<int>ycor;\n  for(int i=0;i<4;i++){\n    for(int j=0;j<4;j++){\n      cin >> vec[i][j];\n      if(j%2==0){\n        xcor.insert(vec[i][j]);\n      }\n      else{\n        ycor.insert(vec[i][j]);\n      }\n    }\n  }\n  if(xcor.size()!=2 or ycor.size()!=2){\n    cout << \"NO\\n\";\n    return 0;\n  }\n  vector<int>v1,v2;\n  foreach(it,xcor){\n    v1.pb(*it);\n  }\n  foreach(it,ycor){\n    v2.pb(*it);\n  }\n  if(!check(v1[0],v2[0],v1[1],v2[0]) or !check(v1[0],v2[0],v1[0],v2[1]) or !check(v1[0],v2[1],v1[1],v2[1]) or !check(v1[1],v2[1],v1[1],v2[0])){\n    cout << \"NO\\n\";\n    return 0;\n  }\n  cout << \"YES\\n\";\n  return 0;\n}\n"
}