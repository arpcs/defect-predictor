{
    "id": 63431603,
    "contestId": 14,
    "creationTimeSeconds": 1572081471,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "\n\n\n#include <bits/stdc++.h>\n\n#define eps 1e-8\n#define INF 0x3f3f3f3f\n#define PI acos(-1)\n#define lson l,mid,rt<<1\n#define rson mid+1,r,rt<<1|1\n#define CLR(x, y) memset((x),y,sizeof(x))\n#define fuck(x) cerr << #x << \"=\" << x << endl;\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\nconst int seed = 131;\nconst int maxn = 1e5 + 5;\nconst int mod = 1e9 + 7;\n\nstruct point {\n    int x, y;\n\n    point(int x, int y) {\n        x = x;\n        y = y;\n    }\n};\n\nset<point> S;\nset<point>::iterator it;\nset<int> Sx, Sy;\n\nint main() {\n#ifndef ONLINE_JUDGE\n    freopen(\"in.txt\", \"r\", stdin);\n#endif\n    for (int i = 1; i < 4; i++) {\n        int x1, y1, x2, y2;\n        scanf(\"%d%d%d%d\", &x1, &y1, &x2, &y2);\n        S.insert(point(x1, y1));\n        S.insert(point(x2, y2));\n    }\n    if (S.size() != 4) {\n        printf(\"NO\\n\");\n        return 0;\n    }\n    for (it = S.begin(); it != S.end(); it++) {\n        point tmp = *it;\n        Sx.insert(tmp.x);\n        Sy.insert(tmp.y);\n        if (Sx.size() != 2 || Sy.size() != 2) {\n            printf(\"NO\\n\");\n            return 0;\n        } else {\n\n        }\n    }\n    return 0;\n}\n\n\n\n \t\t\t\t \t \t\t\t \t  \t\t \t  \t    \t   \t"
}