{
    "id": 46001812,
    "contestId": 14,
    "creationTimeSeconds": 1542725557,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "ivan100sic"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 110,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 307200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double ld;\r\n\r\nstruct pt {\r\n\tll x, y;\r\n\r\n\tbool operator< (const pt& o) const {\r\n\t\tif (x != o.x)\r\n\t\t\treturn x < o.x;\r\n\t\treturn y < o.y;\r\n\t}\r\n\r\n\tbool operator== (const pt& o) const {\r\n\t\treturn x == o.x && y == o.y;\r\n\t}\r\n\r\n\tpt operator- (const pt& o) const {\r\n\t\treturn {x - o.x, y - o.y};\r\n\t}\r\n};\r\n\r\npt a[4], b[4];\r\n\r\nvoid no() {\r\n\tcout << \"NO\\n\";\r\n\texit(0);\r\n}\r\n\r\nbool orto(pt a, pt b) {\r\n\treturn a.x*b.x + a.y*b.y == 0;\r\n}\r\n\r\nint c[4][4];\r\n\r\nint main() {\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(nullptr);\r\n\tcout.tie(nullptr);\r\n\tcerr.tie(nullptr);\r\n\r\n\tfor (int i=0; i<4; i++)\r\n\t\tcin >> a[i].x >> a[i].y >> b[i].x >> b[i].y;\r\n\r\n\tset<pt> s;\r\n\r\n\tfor (int i=0; i<4; i++) {\r\n\t\ts.insert(a[i]);\r\n\t\ts.insert(b[i]);\r\n\t}\r\n\r\n\tif (s.size() != 4)\r\n\t\tno();\r\n\r\n\tfor (int i=0; i<4; i++)\r\n\t\tif (a[i] == b[i])\r\n\t\t\tno();\r\n\r\n\tfor (int i=0; i<4; i++)\r\n\t\tif (a[i].x != b[i].x && a[i].y != b[i].y)\r\n\t\t\tno();\r\n\r\n\tfor (int i=0; i<4; i++) {\r\n\t\tfor (int j=0; j<4; j++) {\r\n\t\t\tif (a[i] == b[j])\r\n\t\t\t\tc[i][j]++;\r\n\t\t\tif (b[i] == a[j])\r\n\t\t\t\tc[i][j]++;\r\n\t\t\tif (a[i] == a[j])\r\n\t\t\t\tc[i][j]++;\r\n\t\t\tif (b[i] == b[j])\r\n\t\t\t\tc[i][j]++;\r\n\t\t}\r\n\t}\r\n\r\n\tfor (int i=0; i<4; i++)\r\n\t\tfor (int j=0; j<4; j++)\r\n\t\t\tif (i != j && c[i][j] > 1)\r\n\t\t\t\tno();\r\n\r\n\t// otkrij da li je graf dobar (svi stepeni treba da budu 2)\r\n\tfor (int i=0; i<4; i++) {\r\n\t\tint deg = 0;\r\n\t\tfor (int j=0; j<4; j++) {\r\n\t\t\tif (i != j)\r\n\t\t\t\tdeg += c[i][j];\r\n\t\t}\r\n\t\tif (deg != 2)\r\n\t\t\tno();\r\n\t}\r\n\r\n\tint x = 0;\r\n\tint p = -1, q = -1;\r\n\tfor (int j=1; j<4; j++)\r\n\t\tif (c[0][j]) {\r\n\t\t\tif (p == -1)\r\n\t\t\t\tp = j;\r\n\t\t\telse\r\n\t\t\t\tq = j;\r\n\t\t}\r\n\r\n\tint y = p ^ q ^ x;\r\n\r\n\tcerr << \"redosled duzi \" << x << ' ' << p << ' ' << y << ' ' << q << '\\n';\r\n\tint tacke[6] = {x, p, y, q, x, p};\r\n\r\n\tfor (int i=0; i<4; i++) {\r\n\t\tint p = tacke[i];\r\n\t\tint q = tacke[i+1];\r\n\r\n\t\t// b[p] == a[q]\r\n\t\tif (b[p] == a[q]) {\r\n\t\t\t// nista\r\n\t\t} else if (a[p] == a[q]) {\r\n\t\t\tswap(a[p], b[p]);\r\n\t\t} else if (b[p] == b[q]) {\r\n\t\t\tswap(a[q], b[q]);\r\n\t\t} else {\r\n\t\t\tswap(a[p], b[p]);\r\n\t\t\tswap(a[q], b[q]);\r\n\t\t}\r\n\t}\r\n\r\n\tfor (int i=1; i<=4; i++) {\r\n\t\tint j = tacke[i-1];\r\n\t\tint k = tacke[i];\r\n\t\tint l = tacke[i+1];\r\n\t\tif (!orto(a[k] - a[j], a[k] - a[l]))\r\n\t\t\tno();\r\n\t}\r\n\r\n\tcout << \"YES\\n\";\r\n\treturn 0;\r\n}"
}