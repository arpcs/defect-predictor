{
    "id": 36432755,
    "contestId": 14,
    "creationTimeSeconds": 1521549741,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "mohamadshalodi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 110,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 3379200,
    "source": "#include<iostream>\r\n#include<vector>\r\n#include<string>\r\n#include<cmath>\r\n#include<algorithm>\r\n#include<map>\r\nusing namespace std;\r\n\r\nstruct segment\r\n{\r\n\tint x1,y1,x2,y2;\r\n};\r\n\r\nint main()\r\n{\r\n\tvector<segment> v(4);\r\n\tfor(int i=0;i<4;i++)\r\n\t\tcin>>v[i].x1>>v[i].y1>>v[i].x2>>v[i].y2;\r\n\r\n\tpair<int,int> p = make_pair(v[0].x1,v[0].y1);\r\n\tpair<int,int> end = make_pair(v[0].x2,v[0].y2);\r\n\tpair<int,int> pre = end;\r\n\tv.erase(v.begin());\r\n\tbool isok=true;\r\n\twhile(true)\r\n\t{\r\n\t\tbool found=false;\r\n\t\tfor(int i=0;i<v.size();i++)\r\n\t\t{\r\n\t\t\tif(p==make_pair(v[i].x1,v[i].y1))\r\n\t\t\t{\r\n\t\t\t\tif(pre.first==v[i].x2 || pre.second==v[i].y2)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tpre = p;\r\n\t\t\t\tp = make_pair(v[i].x2,v[i].y2);\r\n\t\t\t\tv.erase(v.begin()+i);\r\n\t\t\t\tfound=true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\telse if(p==make_pair(v[i].x2,v[i].y2))\r\n\t\t\t{\r\n\t\t\t\tif(pre.first==v[i].x1 || pre.second==v[i].y1)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tpre = p;\r\n\t\t\t\tp = make_pair(v[i].x1,v[i].y1);\r\n\t\t\t\tv.erase(v.begin()+i);\r\n\t\t\t\tfound = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(v.size()==0)\r\n\t\t\tbreak;\r\n\t\tif(!found)\r\n\t\t{\r\n\t\t\tisok=false;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tif(p!=end)\r\n\t\tisok=false;\r\n\r\n\tif(isok)\r\n\t\tcout<<\"YES\"<<endl;\r\n\telse\r\n\t\tcout<<\"NO\"<<endl;\r\n\r\n\treturn 0;\r\n}"
}