{
    "id": 37837350,
    "contestId": 14,
    "creationTimeSeconds": 1525259204,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "karimelghazouly"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 3379200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nstruct seg{\r\n    int x1,y1,x2,y2,dist;\r\n};\r\nbool check(seg a, seg b)\r\n{\r\n    bool x=0,y=0;\r\n    //cout<<\"a.x1 = \"<<a.x1<<\" a.x2 = \"<<a.x2<<\" b.x1 = \"<<b.x1<<\" b.x2= \"<<b.x2<<endl;\r\n    if((a.x1==b.x1&&a.x2==b.x2)||(a.x2==b.x1&&a.x1==b.x2))x=1;\r\n    if((a.y1==b.y1&&a.y2==b.y2)||(a.y2==b.y1&&a.y1==b.y2))y=1;\r\n    //cout<<\"x = \"<<x<<\" y= \"<<y<<endl;\r\n    return (x&y);\r\n}\r\nbool checkP(seg a, seg b)\r\n{\r\n    float diff1x=a.x2-a.x1,diff1y=a.y2-a.y1,s1,diff2x=b.x2-b.x1,diff2y=b.y2-b.y1,s2;\r\n    //cout<<\" diff1x = \"<<diff1x<<\" diff1y = \"<<diff1y<<\" diff2x = \"<<diff2x<<\" diff2y = \"<<diff2y<<endl;\r\n    s1=diff1y*diff2x;\r\n    s2=diff2y*diff1x;\r\n    return(s1==s2);\r\n}\r\nbool checkt(seg a , seg b)\r\n{\r\n    return((a.x1==b.x1&&a.y1==b.y1)||(a.x1==b.x2&&a.y1==b.y2)||(a.x2==b.x1&&a.y2==b.y1)\r\n        ||(a.x2==b.x2&&a.y2==b.y2));\r\n}\r\nint main()\r\n{\r\n   ios::sync_with_stdio(false);\r\n    cin.tie(0); cout.tie(0);\r\n    vector<seg>vec,g[2];\r\n    int x1,y1,x2,y2,last=0;\r\n    seg s;\r\n    for(int i=0;i<4;i++)\r\n    {\r\n        cin>>s.x1>>s.y1>>s.x2>>s.y2;\r\n        for(int j=0;j<vec.size();j++)\r\n        {\r\n            if(check(s,vec[j]))\r\n            {\r\n                cout<<\"NO\";\r\n                return 0;\r\n            }\r\n        }\r\n        s.dist=sqrt(((s.x1-s.x2)*(s.x1-s.x2))+((s.y1-s.y2)*(s.y1-s.y2)));\r\n        vec.push_back(s);\r\n    }\r\n    for(int i=0;i<4;i++)\r\n    {\r\n        for(int j=i+1;j<4;j++)\r\n        {\r\n            if(checkP(vec[i],vec[j]))\r\n            {\r\n                if(vec[i].dist==vec[j].dist)\r\n                {\r\n                    g[last].push_back(vec[i]);\r\n                    g[last].push_back(vec[j]);\r\n                    last++;\r\n                }\r\n                else\r\n                {\r\n                    cout<<\"NO\";\r\n                    return 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if(g[0].size()!=2||g[1].size()!=2)\r\n    {\r\n        cout<<\"NO\";\r\n        return 0;\r\n    }\r\n    for(int i=0;i<2;i++)\r\n    {\r\n\r\n        if(!(checkt(g[0][i],g[1][0])&&checkt(g[0][i],g[1][1])))\r\n        {\r\n            cout<<\"NO\";\r\n            return 0;\r\n        }\r\n    }\r\n    cout<<\"YES\"<<endl;\r\n  return 0;\r\n}\r\n\r\n"
}