{
    "id": 36264549,
    "contestId": 14,
    "creationTimeSeconds": 1521001137,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "abhi_learner"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 110,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 1945600,
    "source": "//IDGAF\r\n#include<bits/stdc++.h>\r\n#define IOS ios::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\r\n#define mod 1000000007\r\n#define pb push_back\r\n#define f first\r\n#define s second\r\n\r\nusing namespace std;\r\ntypedef long long int ll;\r\ntypedef long double  ld;\r\ntypedef unsigned long long int ull;\r\n\r\nstruct line\r\n{\r\n    ll x1,y1,x2,y2;\r\n};\r\nstruct point\r\n{\r\n    ll x,y;\r\n};\r\nbool cmpx(const line &a, const line & b)\r\n{\r\n    return a.y1<b.y1;\r\n}\r\nbool cmpy(const line &a,const line &b)\r\n{\r\n    return a.x1<b.x1;\r\n}\r\nint main()\r\n{\r\n \t        IOS;\r\n\r\n \t        struct line px[4];\r\n \t        struct line py[4];\r\n \t        ll i,x1,y1,x2,y2,cx=0,cy=0;\r\n \t        for(i=0;i<4;i++)\r\n            {\r\n                cin >> x1 >> y1 >> x2 >> y2;\r\n\r\n                if(y1==y2)\r\n                    px[cx].x1 = x1,px[cx].y1 = y1,px[cx].x2 = x2,px[cx].y2 = y2,cx++;\r\n                else if(x1==x2)\r\n                   py[cy].x1 = x1,py[cy].y1 = y1,py[cy].x2 = x2,py[cy].y2 = y2,cy++;\r\n\r\n            }\r\n\r\n            if(cx==cy && cy==2)\r\n            {\r\n               sort(px,px+2,cmpx); sort(py,py+2,cmpy);\r\n               /*\r\n               ll pxymin = px[0].y1 , pxymax=px[1].y1;\r\n               ll pxL = min(min(px[0].x1,px[0].x2),min(px[1].x1,px[1].x2));\r\n               ll pxR = min(max(px[0].x1,px[0].x2),max(px[1].x1,px[1].x2));\r\n\r\n               ll pyxmin = py[0].x1,pyxmax = py[1].x1;\r\n               ll pyT = min(max(py[0].y1,py[0].y2),max(py[1].y1,py[1].y2));\r\n               ll pyB = min(min(py[0].y1,py[0].y2),min(py[1].y1,py[1].y2));\r\n\r\n               bool check1  =    ((pxymin<pxymax) && (pyxmin<pyxmax) && (pyT>pyB) && (pxL<pxR));\r\n               bool check2  =   (pxymin>=pyB && pxymax<=pyT);\r\n               bool check3  =   (pyxmin>=pxL && pyxmax<=pxR);*/\r\n\r\n\r\n              // wrt to lines parallel to x-axis\r\n              struct point wrtx[4];\r\n              wrtx[0].y = px[1].y1; wrtx[0].x = min(px[1].x1,px[1].x2); // Top Left\r\n              wrtx[1].y = px[1].y1; wrtx[1].x = max(px[1].x1,px[1].x2); // Top Right\r\n              wrtx[2].y = px[0].y1; wrtx[2].x = max(px[0].x1,px[0].x2);//Bottom Right\r\n              wrtx[3].y = px[0].y1; wrtx[3].x = min(px[0].x1,px[0].x2); //Bottom Left\r\n\r\n              struct point wrty[4];\r\n              wrty[0].y = max(py[0].y1,py[0].y2); wrty[0].x = py[0].x1;\r\n              wrty[1].y = max(py[1].y1,py[1].y2); wrty[1].x = py[1].x1;\r\n              wrty[2].y = min(py[1].y1,py[1].y2); wrty[2].x = py[1].x1;\r\n              wrty[3].y = min(py[0].y1,py[0].y2); wrty[3].x = py[0].x1;\r\n\r\n              set< pair<ll,ll> > st;\r\n\r\n              for(i=0;i<4;i++)\r\n              {\r\n                  st.insert({wrtx[i].x,wrtx[i].y});\r\n              }\r\n\r\n              //cout << st.size() << \"\\n\";\r\n              if(st.size()<4) {cout << \"NO\"; return 0;}\r\n\r\n\r\n              for(i=0;i<4;i++)\r\n              {  // cout << wrtx[i].x << \" \" << wrtx[i].y << \" \" << wrty[i].x << \" \" << wrty[i].y << \"\\n\";\r\n                  if((wrtx[i].x!=wrty[i].x) || (wrtx[i].y != wrty[i].y))\r\n                  {\r\n                      cout << \"NO\"; return 0;\r\n                  }\r\n              }\r\n\r\n               cout << \"YES\";\r\n\r\n            }\r\n \t        else\r\n                cout << \"NO\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n   return 0;\r\n}\r\n"
}