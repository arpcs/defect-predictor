{
    "id": 96277944,
    "contestId": 14,
    "creationTimeSeconds": 1603290444,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "Naim"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 110,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nvoid DBG() { cerr << endl; }\r\ntemplate<typename Head, typename... Tail>\r\nvoid DBG(Head H, Tail... T) { cerr << ' ' << H; DBG(T...); }\r\n#define dbg(...) cerr << \"(\" << (#__VA_ARGS__) << \"):\", DBG(__VA_ARGS__)\r\n\r\n#define ll long long\r\n#define siz(a) int(a.size())\r\n#define ints(a...) int a; read(a)\r\n#define all(a) a.begin(), a.end()  // [i, n) => i + all(v)  |  [0, i) => all(v) - n + i\r\n#define rall(a) a.rbegin(), a.rend()\r\n#define rep(i, b, n) for (int i = b; i < n; i++)  // rep(i, start, n + start) => total 'n' length traverse\r\n#define per(i, b, n) for (int i = b; i >= n; i--) // [b, n]\r\n\r\ntemplate<typename... Args>\r\ninline void read(Args&... args) { ((cin >> args), ...); }\r\ntemplate<typename... Args>\r\ninline void show(Args... args) { ((cout << args << \" \"), ...); }\r\ntemplate<typename T>\r\ninline void operator>> (istream& in, vector<T>& v) { rep(i, 0, siz(v)) in >> v[i]; }\r\ntemplate<typename T>\r\ninline void operator<< (ostream& out, const vector<T>& v) { rep(i, 0, siz(v)) out << v[i] << \" \\n\"[i + 1 == siz(v)]; }\r\ntemplate<typename... Args>\r\ninline auto create(size_t n, Args&&... args) { if constexpr(sizeof...(args) == 1) return vector(n, args...); else return vector(n, create(args...)); }\r\n\r\nconst int MOD = 1e9 + 7;\r\n\r\nvoid solve() {\r\n\tmap<array<int, 2>, int> fq;\r\n\tint cntx = 0, cnty = 0, yes = 1;\r\n\trep(i, 0, 4) {\r\n\t\tints(x1, y1, x2, y2);\r\n\t\tcntx += (x1 == x2 && y1 != y2);\r\n\t\tcnty += (y1 == y2 && x1 != x2);\r\n\t\tfq[{x1, y1}]++;\r\n\t\tfq[{x2, y2}]++;\r\n\t}\r\n\tyes &= (cntx == 2 && cnty == 2);\r\n\tfor (auto [x, y] : fq)\r\n\t\tyes &= y == 2;\r\n\tshow((yes ? \"YES\" : \"NO\"));\r\n}\r\n\r\nsigned main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout << fixed << setprecision(12);\r\n    cerr << fixed << setprecision(12);\r\n    int T = 1; \r\n    // cin >> T;\r\n    while (T--) solve();\r\n    return 0;\r\n}"
}