{
    "id": 72606034,
    "contestId": 14,
    "creationTimeSeconds": 1583533498,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "GsjzTle"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 110,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 1638400,
    "source": "#include<bits/stdc++.h>\r\n#define ios std::ios::sync_with_stdio(false)\r\n#define sd(n) scanf(\"%d\",&n)\r\n#define sdd(n,m) scanf(\"%d%d\",&n,&m)\r\n#define sddd(n,m,k) scanf(\"%d%d%d\",&n,&m,&k)\r\n#define pd(n) printf(\"%d\\n\", (n))\r\n#define pdd(n,m) printf(\"%d %d\\n\", n, m)\r\n#define pld(n) printf(\"%lld\\n\", n)\r\n#define pldd(n,m) printf(\"%lld %lld\\n\", n, m)\r\n#define sld(n) scanf(\"%lld\",&n)\r\n#define sldd(n,m) scanf(\"%lld%lld\",&n,&m)\r\n#define slddd(n,m,k) scanf(\"%lld%lld%lld\",&n,&m,&k)\r\n#define sf(n) scanf(\"%lf\",&n)\r\n#define sff(n,m) scanf(\"%lf%lf\",&n,&m)\r\n#define sfff(n,m,k) scanf(\"%lf%lf%lf\",&n,&m,&k)\r\n#define rep(i,a,n) for (int i=a;i<=n;i++)\r\n#define per(i,n,a) for (int i=n;i>=a;i--)\r\n#define mm(a,n) memset(a, n, sizeof(a))\r\n#define pb push_back\r\n#define all(x) (x).begin(),(x).end()\r\n#define fi first\r\n#define se second\r\n#define il inline\r\n#define ll long long\r\n#define lson rt << 1\r\n#define rson rt << 1 | 1\r\n#define MOD 1000000007\r\n#define pi 3.14159265358979323\r\n#define debug(x) \t\t\t  cout <<#x<<\": \"<<x<<endl;\r\n#define debug2(x, y)          cout <<#x<<\": \"<<x<<\" | \"<<#y<<\": \"<<y<<endl;\r\n#define debug3(x, y, z)       cout <<#x<<\": \"<<x<<\" | \"<<#y<<\": \"<<y<<\" | \"<<#z<<\": \"<<z<<endl;\r\n#define debug4(a, b, c, d)    cout <<#a<<\": \"<<a<<\" | \"<<#b<<\": \"<<b<<\" | \"<<#c<<\": \"<<c<<\" | \"<<#d<<\": \"<<d<<endl;\r\nusing namespace std;\r\nconst ll INF (0x3f3f3f3f3f3f3f3fll);\r\nconst int inf (0x3f3f3f3f);\r\ntemplate<typename T>void read(T &res){bool flag=false;char ch;while(!isdigit(ch=getchar()))(ch=='-')&&(flag=true);\r\nfor(res=ch-48;isdigit(ch=getchar());res=(res<<1)+(res<<3)+ch - 48);flag&&(res=-res);}\r\ntemplate<typename T>void Out(T x){if(x<0)putchar('-'),x=-x;if(x>9)Out(x/10);putchar(x%10+'0');}\r\nll gcd(ll a,ll b){return b?gcd(b,a%b):a;}\r\nll lcm(ll a,ll b){return a*b/gcd(a,b);}\r\nll pow_mod(ll x,ll n,ll mod){ll res=1;while(n){if(n&1)res=res*x%mod;x=x*x%mod;n>>=1;}return res;}\r\nll fact_pow(ll n,ll p){ll res=0;while(n){n/=p;res+=n;}return res;}\r\nll mult(ll a,ll b,ll p){a%=p;b%=p;ll r=0,v=a;while(b){if(b&1){r+=v;if(r>p)r-=p;}v<<=1;if(v>p)v-=p;b>>=1;}return r;}\r\nll quick_pow(ll a,ll b,ll p){ll r=1,v=a%p;while(b){if(b&1)r=mult(r,v,p);v=mult(v,v,p);b>>=1;}return r;}\r\nbool CH(ll a,ll n,ll x,ll t)\r\n{ll r=quick_pow(a,x,n);ll z=r;for(ll i=1;i<=t;i++){r=mult(r,r,n);if(r==1&&z!=1&&z!=n-1)return true;z=r;}return r!=1;}\r\nbool Miller_Rabin(ll n)\r\n{if(n<2)return false;if(n==2)return true;if(!(n&1))return false;ll x=n-1,t=0;while(!(x&1)){x>>=1;t++;}srand(time(NULL));\r\nll o=8;for(ll i=0;i<o;i++){ll a=rand()%(n-1)+1;if(CH(a,n,x,t))return false;}return true;}\r\n/*\r\nint prime[100000],minprime[100000];\r\nvoid euler(int n)\r\n{int c=0,i,j;for(i=2;i<=n;i++){if(!minprime[i])prime[++c]=i,minprime[i]=i;for(j=1;j<=c&&i*prime[j]<=n;j++)\r\n{minprime[i*prime[j]]=prime[j];if(i%prime[j]==0)break;}}}\r\nstruct Tree{ll l,r,sum,lazy,maxn,minn;}tree[100000];\r\nil void push_up(ll rt)\r\n{tree[rt].sum=tree[rt<<1].sum+tree[rt<<1|1].sum;\r\ntree[rt].maxn=max(tree[rt<<1].maxn,tree[rt<<1|1].maxn);\r\ntree[rt].minn=min(tree[rt<<1].minn,tree[rt<<1|1].minn);}\r\nil void push_down(ll rt , ll length)\r\n{if(tree[rt].lazy){tree[rt<<1].lazy+=tree[rt].lazy;tree[rt<<1|1].lazy+=tree[rt].lazy;\r\ntree[rt<<1].sum+=(length-(length>>1))*tree[rt].lazy;tree[rt<<1|1].sum+=(length>>1)*tree[rt].lazy;\r\ntree[rt<<1].minn+=tree[rt].lazy;tree[rt<<1|1].minn+=tree[rt].lazy;\r\ntree[rt<<1].maxn+=tree[rt].lazy;tree[rt<<1|1].maxn+=tree[rt].lazy;tree[rt].lazy=0;}}\r\nil void build(ll l , ll r , ll rt , ll *aa)\r\n{tree[rt].lazy=0;tree[rt].l=l;tree[rt].r=r;if(l==r)\r\n{tree[rt].sum=aa[l];tree[rt].minn=tree[rt].sum;tree[rt].maxn=tree[rt].sum;return;}\r\nll mid=(l+r)>>1;build(l,mid,rt<<1,aa);build(mid+1,r,rt<<1|1,aa);push_up(rt);}\r\nil void update_range(ll L , ll R , ll key , ll rt)\r\n{if(tree[rt].r<L||tree[rt].l>R)return;if(L<=tree[rt].l&&R>=tree[rt].r){tree[rt].sum+=(tree[rt].r-tree[rt].l+1)*key;\r\ntree[rt].minn+=key;tree[rt].maxn+=key;tree[rt].lazy+=key;return;}push_down(rt,tree[rt].r-tree[rt].l+1);\r\nll mid=(tree[rt].r+tree[rt].l)>>1;if(L<=mid)update_range(L,R,key,rt << 1);\r\nif(R>mid)update_range(L,R,key,rt << 1 | 1);push_up(rt);}\r\nil ll query_range(ll L, ll R, ll rt)\r\n{if(L<=tree[rt].l&&R>=tree[rt].r){return tree[rt].sum;}push_down(rt,tree[rt].r-tree[rt].l+1);\r\nll mid=(tree[rt].r+tree[rt].l)>>1;ll ans=0;if(L<=mid)ans+=query_range(L,R,rt << 1);\r\nif(R>mid)ans+=query_range(L,R,rt << 1 | 1);return ans;}\r\nil ll query_min(ll L,ll R,ll rt)\r\n{if(L<=tree[rt].l&&R>=tree[rt].r){return tree[rt].minn;}push_down(rt,tree[rt].r-tree[rt].l+1);\r\nll mid=(tree[rt].r+tree[rt].l)>>1;ll ans=(0x3f3f3f3f3f3f3f3fll);if(L<=mid)ans=min(ans,query_min(L,R,rt << 1));\r\nif(R>mid)ans=min(ans,query_min(L,R,rt << 1 | 1));return ans;}\r\nil ll query_max(ll L, ll R, ll rt)\r\n{if(L<=tree[rt].l&&R>=tree[rt].r){return tree[rt].maxn;}push_down(rt,tree[rt].r-tree[rt].l+1);\r\nll mid=(tree[rt].r+tree[rt].l)>>1;ll ans=-(0x3f3f3f3f3f3f3f3fll);if(L<=mid)ans=max(ans,query_max(L,R,rt << 1));\r\nif(R>mid)ans=max(ans,query_max(L,R,rt << 1 | 1));return ans;}\r\n*/\r\nconst int N = 2e5 + 10;\r\nstruct node{\r\n\tint x , y;\r\n}a[N];\r\nint main()\r\n{\r\n\tios;\r\n\tint flag = 0;\r\n\trep(i , 1 , 8) cin >> a[i].x >> a[i].y;\r\n\trep(i , 1 , 8)\r\n\t{\r\n\t\tint cnt = 0;\r\n\t\trep(j , 1 , 8)\r\n\t\t\tif(a[i].x == a[j].x && a[i].y == a[j].y)\r\n\t\t\t\tcnt ++ ;\r\n\t\tif(cnt != 2) flag = 1;\r\n\t}\r\n\tint xx = 0 , yy = 0;\r\n\tfor(int i = 1 ; i <= 8 ; i += 2)\r\n\t{\r\n\t\tif(a[i].x == a[i + 1].x && a[i].y != a[i + 1].y) xx ++ ;\r\n\t\tif(a[i].x != a[i + 1].x && a[i].y == a[i + 1].y) yy ++ ;\r\n\t}\r\n\tif(xx != 2 || yy != 2) flag = 1;\r\n\tif(!flag) cout << \"YES\\n\";\r\n\telse cout << \"NO\\n\";\r\n\treturn 0;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
}