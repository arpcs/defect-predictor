{
    "id": 163005566,
    "contestId": 14,
    "creationTimeSeconds": 1657112782,
    "relativeTimeSeconds": 3622,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "Hard_2_FaceReality"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1657109160
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include \"bits/stdc++.h\"\nusing namespace std; using ll = long long;\n#define fi first\n#define se second\n#define ld long double\n#define all(arr) arr.begin(), arr.end()\n#define pb push_back\n#define ReadInputFile() freopen(\"input.txt\",\"r\",stdin); freopen(\"output.txt\",\"w\",stdout);\n#define speedUP() ios_base::sync_with_stdio(false); cin.tie(nullptr);\n#define print2d(mat,n,m){for(int i=0;i<n;i++){for(int j=0;j<m;j++){cout<<mat[i][j]<<\" \";}cout<< endl;}}\n//INT_MAX , INT_MIN;\nconst long long int mod = 1e9+7; const long long int modd = 998244353;\n//debug template\nvoid __print(int x) {cerr << x;} void __print(long x) {cerr << x;} void __print(long long x) {cerr << x;} void __print(unsigned x) {cerr << x;}\nvoid __print(unsigned long x) {cerr << x;} void __print(unsigned long long x) {cerr << x;} void __print(float x) {cerr << x;} void __print(double x) {cerr << x;}\nvoid __print(long double x) {cerr << x;} void __print(char x) {cerr << '\\'' << x << '\\'';} void __print(const char *x) {cerr << '\\\"' << x << '\\\"';} void __print(const string &x) {cerr << '\\\"' << x << '\\\"';}\nvoid __print(bool x) {cerr << (x ? \"true\" : \"false\");}\n//Print Template.\ntemplate<typename T, typename V> void __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';} template<typename T>\nvoid __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? \",\" : \"\"), __print(i); cerr << \"}\";}\nvoid _print() {cerr << \"]\\n\";} template <typename T, typename... V> void _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << \", \"; _print(v...);}\n#ifndef ONLINE_JUDGE \n#define debug(x...) cerr << \"[\" << #x << \"] = [\"; _print(x)\n#else\n#define debug(x...)\n#endif\ntemplate <typename T> void print(vector <T> v) { for (T i : v) cout << i << \" \"; cout << '\\n'; }\ntemplate <typename T> void print(vector <vector <T>>& v) { for (vector <T>& vv : v) { for (T& i : vv) cout << i << \" \"; cout << '\\n'; } } template <typename T> void read(vector <T>& v) {for (T& i : v) cin >> i;}\ntemplate <typename T> void read(T&& t) {cin >> t;} template <typename T, typename... Args> void read(T&& t, Args&&... args){ cin >> t; read(forward<Args>(args)...); } template <typename T> void print(T&& t) {cout << t << '\\n';}\ntemplate <typename T, typename... Args> void print(T&& t, Args&&... args){ cout << t << \" \"; print(forward<Args>(args)...); }\n\nll add(ll a, ll b) {a = a % mod; b = b % mod; return (((a + b) % mod) + mod) % mod;}\nll mul(ll a, ll b) {a = a % mod; b = b % mod; return (((a * b) % mod) + mod) % mod;}\nll sub(ll a, ll b) {a = a % mod; b = b % mod; return (((a - b) % mod) + mod) % mod;}\n\n#define N 4\n    // coding makes me wet uWu\n\n// structure to represent a segment\nstruct Segment{\n    int ax, ay;\n    int bx, by;\n};\n\nint getDis(pair<int, int> a, pair<int, int> b){\n\n    return (a.first - b.first)*(a.first - b.first) +\n        (a.second - b.second)*(a.second - b.second);\n}\n \n// method returns true if line Segments make\n// a rectangle\nbool isPossibleRectangle(Segment segments[]){\n\n    set< pair<int, int> > st;\n \n    // putting all end points in a set to\n    // count total unique points\n    for (int i = 0; i < N; i++){\n        st.insert(make_pair(segments[i].ax, segments[i].ay));\n        st.insert(make_pair(segments[i].bx, segments[i].by));\n    }\n \n    // If total unique points are not 4, then\n    // they can't make a rectangle\n    if (st.size() != 4)\n        return false;\n \n    // dist will store unique 'square of distances'\n    set<int> dist;\n \n    // calculating distance between all pair of\n    // end points of line segments\n    for (auto it1=st.begin(); it1!=st.end(); it1++)\n        for (auto it2=st.begin(); it2!=st.end(); it2++)\n            if (*it1 != *it2)\n                dist.insert(getDis(*it1, *it2));\n \n    // if total unique distance are more than 3,\n    // then line segment can't make a rectangle\n    if (dist.size() > 3)\n        return false;\n \n    // copying distance into array. Note that set maintains\n    // sorted order.\n    int distance[3];\n    int i = 0;\n    for (auto it = dist.begin(); it != dist.end(); it++)\n        distance[i++] = *it;\n \n    // If line seqments form a square\n    if (dist.size() == 2)\n        return (2*distance[0] == distance[1]);\n \n    // distance of sides should satisfy pythagorean\n    // theorem\n    return (distance[0] + distance[1] == distance[2]);\n}\n\nsigned main(){\n\n    speedUP();\n    Segment segments[N];\n\n    for(int i = 0; i < N; i++){\n        cin >> segments[i].ax >> segments[i].ay >> segments[i].bx >> segments[i].by;\n    }\n\n    if(isPossibleRectangle(segments)){\n        print(\"YES\");\n    }else{\n        print(\"NO\");\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  "
}