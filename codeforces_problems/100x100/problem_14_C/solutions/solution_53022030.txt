{
    "id": 53022030,
    "contestId": 14,
    "creationTimeSeconds": 1555693040,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "nishantwrp"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 110,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 409600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ld long double\r\n#define eps 1e-7\r\ntypedef complex<ld>point;\r\nld x1,x2,x3,x4;\r\nld m1,y2,y3,y4,cx,cy;\r\nld x[4],y[4];\r\nset<ld>distS;\r\nld dist(ld x,ld y,ld x2,ld y2){\r\nreturn pow(x-x2,2)+pow(y-y2,2);\r\n}\r\nbool rect(){\r\ncx=(x[0]+x[1]+x[2]+x[3])/4.0,cy=(y[0]+y[1]+y[2]+y[3])/4.0;\r\nld d1,d2,d3,d4;\r\nd1=dist(x[0],y[0],cx,cy);\r\nd2=dist(x[1],y[1],cx,cy);\r\nd3=dist(x[2],y[2],cx,cy);\r\nd4=dist(x[3],y[3],cx,cy);\r\nreturn abs(d1-d2)<=eps && abs(d1-d3)<=eps && abs(d1-d4)<=eps;\r\n}\r\nint main()\r\n{\r\nbool b=true;\r\npoint p1,p2;\r\nset<pair<int, int>>s;\r\nmap<pair<int,int>,int>m;\r\nmap<point,point>mp;\r\nvector<pair<point,point>>v1,v2;\r\nfor(int i=0;i<4;i++){\r\ncin>>x1>>m1>>x2>>y2;\r\np1=point(x1,m1);\r\np2=point(x2,y2);\r\ns.insert({x1,m1});\r\ns.insert({x2,y2});\r\nif((!(x1-x2==0 || y2-m1==0))||(x1==x2 &&m1==y2) )\r\nb=false;\r\nif(m[{x1,m1}]>=2 ||m[{x2,y2}]>=2)\r\n\tb=false;\r\nm[{x1,m1}]++;\r\nm[{x2,y2}]++;\r\ndistS.insert(dist(x1,m1,x2,y2));\r\nv1.push_back({p1,p2});\r\nfor(int j=0;j<i;j++){\r\n\tif((v1[i].first==v1[j].first &&v1[i].second==v1[j].second) || (v1[i].first==v1[j].second && v1[i].second==v1[j].first)){\r\n\t\tb=false;\r\n\t}\r\n}\r\n\r\n}\r\nint c=0;\r\nfor(set<pair<int,int>>::iterator it=s.begin();it!=s.end();it++,c++)\r\n{\r\nx[c]=(*it).first;\r\ny[c]=(*it).second;\r\n}\r\n\r\nif(c==4&&b&&rect() &&distS.size()<=2)\r\ncout<<\"YES\"<<endl;\r\nelse\r\ncout<<\"NO\"<<endl;\r\n}"
}