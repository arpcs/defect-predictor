{
    "id": 106113377,
    "contestId": 14,
    "creationTimeSeconds": 1612104431,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "Dlxker"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 102,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define st first\r\n#define nd second\r\n#define pb push_back\r\n#define int long long int\r\n#define endl '\\n'\r\n#define MOD (int)(1e9 + 7)\r\n#define all(x) x.begin(), x.end()\r\n#define rall(x) x.rbegin(), x.rend()\r\n#define mid start+(end-start)/2\r\n#define debug(x) cerr << #x << \" = \" << x << endl\r\n#define binary(x) cerr << #x << \" = \" << bitset<8>(x) << endl\r\n#define N (int)(1e6)+5\r\n\r\nint x, y, xi, yi;\r\n\r\nstruct segment{\r\n\tint x1, y1, x2, y2;\r\n}si;\r\n\r\nint32_t main(){\r\n\tios_base::sync_with_stdio(false);cin.tie(0); cout.tie(0);\r\n\tvector<segment> dikler, yataylar;\r\n\tfor(int i = 0; i < 4; i++){\r\n\t\tcin >> x >> y >> xi >> yi;\r\n\t\tif(x == xi && y == yi){\r\n\t\t\tcout << \"NO\" << endl;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tif(x == xi){\r\n\t\t\tsi.x1 = min(x, xi);\r\n\t\t\tsi.x2 = max(x, xi);\r\n\t\t\tsi.y1 = min(y, yi);\r\n\t\t\tsi.y2 = max(y, yi);\r\n\t\t\tdikler.pb(si);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif(y == yi){\r\n\t\t\tsi.x1 = min(x, xi);\r\n\t\t\tsi.x2 = max(x, xi);\r\n\t\t\tsi.y1 = min(y, yi);\r\n\t\t\tsi.y2 = max(y, yi);\r\n\t\t\tyataylar.pb(si);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tcout << \"NO\" << endl;\r\n\t\treturn 0;\r\n\t}\r\n\tif(((int)dikler.size() != 2) || ((int)yataylar.size() != 2)){\r\n\t\tcout << \"NO\" << endl;\r\n\t\treturn 0;\r\n\t}\r\n\tif((dikler[0].y2 != dikler[1].y2) || (yataylar[0].x1 != yataylar[1].x1) || (dikler[0].y1 != dikler[1].y1) || (yataylar[0].x2 != yataylar[1].x2)){\r\n\t\tcout << \"NO\" << endl;\r\n\t\treturn 0;\r\n\t}\r\n\tif((dikler[0].x1 == dikler[1].x1) || (yataylar[0].y1 == yataylar[1].y1) || (dikler[0].x2 == dikler[1].x2) || (yataylar[0].y2 == yataylar[1].y2)){\r\n\t\tcout << \"NO\" << endl;\r\n\t\treturn 0;\r\n\t}\r\n\tcout << \"YES\" << endl;\r\n}"
}