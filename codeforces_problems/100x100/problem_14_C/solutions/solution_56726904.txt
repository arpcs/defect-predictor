{
    "id": 56726904,
    "contestId": 14,
    "creationTimeSeconds": 1562617540,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "nkko.l"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 11,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 0,
    "source": "#include <stdio.h>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <set>\r\n \r\nusing namespace std;\r\n \r\nset<pair<pair<int, int>, pair<int, int> > > all;\r\nset<pair<int, int> > st;\r\nset<long long> dist;\r\n \r\nint main() {\r\n\tbool ok = true;\r\n\tfor(int i = 0; i < 4; ++i) {\r\n\t\tint x1, y1, x2, y2;\r\n\t\tscanf(\"%d %d %d %d\", &x1, &y1, &x2, &y2);\r\n \r\n\t\tif((x1 != x2 && y1 != y2) || (x1 == x2  && y1 == x2))\r\n\t\t\tok = false;\r\n \r\n\t\tst.insert(make_pair(x1, y1));\r\n\t\tst.insert(make_pair(x2, y2));\r\n \r\n\t\tif(x1 <= x2 && y1 <= y2)\r\n\t\t\tall.insert(make_pair(make_pair(x1, y1), make_pair(x2, y2)));\r\n\t\telse\r\n\t\t\tall.insert(make_pair(make_pair(x2, y2), make_pair(x1, y1)));\r\n\t}\r\n \r\n\tfor(set<pair<int, int> >::iterator it1 = st.begin(); it1 != st.end(); ++it1)\r\n\t\tfor(set<pair<int, int> >::iterator it2 = st.begin(); it2 != st.end(); ++it2)\r\n\t\t\tif(it1 != it2)\r\n\t\t\t\tdist.insert(1LL * (it1->first - it2->first) * (it1->first - it2->first) +\r\n\t\t\t\t\t\t\t1LL * (it1->second - it2->second) * (it1->second - it2->second));\r\n \r\n\tif(all.size() != 4 || dist.size() > 3) {\r\n\t\tputs(\"NO\");\r\n\t\treturn 0;\r\n\t}\r\n \r\n\tlong long d[3];\r\n\tint i = 0;\r\n\tfor(set<long long>::iterator it = dist.begin(); it != dist.end(); ++it, ++i)\r\n\t\td[i] = *it;\r\n \r\n\tif((dist.size() == 2 && d[0] == 0) || (dist.size() == 3 && d[0] * d[1] == 0)) {\r\n\t\tputs(\"NO\");\r\n\t\treturn 0;\r\n\t} \r\n \r\n\tint xmn = 1e9 + 10, xmx = -1e9 - 10, ymn = 1e9 + 10, ymx = -1e9 - 10;\r\n\tfor(set<pair<int, int> >::iterator it = st.begin(); it != st.end(); ++it) {\r\n\t\txmn = min(xmn, it->first);\r\n\t\txmx = max(xmx, it->first);\r\n\t\tymn = min(ymn, it->second);\r\n\t\tymx = max(ymx, it->second);\r\n\t}\r\n \r\n\tif(st.count(make_pair(xmn, ymn)) && st.count(make_pair(xmn, ymx)) &&\r\n\t   st.count(make_pair(xmx, ymn)) && st.count(make_pair(xmx, ymx))) \r\n\t\tputs(\"YES\");\r\n\telse\r\n\t\tputs(\"NO\");\r\n \r\n\treturn 0;\r\n}"
}