{
    "id": 93545864,
    "contestId": 14,
    "creationTimeSeconds": 1600852573,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream> #include <cstdio> #include <map> //\u5934\u6587\u4ef6\u4e0d\u591a\u8bf4\u3002 using namespace std; map< pair<int,int>,int> Map; //map + pair \u8bbe\u5b9a\u3002 int tot_x,tot_y,tot; //\u51e0\u4e2a\u5224\u91cd\u590d\u7684\u53d8\u91cf\u3002 signed main() { for (int i=1; i<=4; ++i) { int x=0,y=0,x_=0,y_=0; scanf(\"%d %d %d %d\",&x,&y,&x_,&y_); //\u8bfb\u5165 4 \u4e2a\u70b9\u3002 Map[make_pair(x,y)]++; Map[make_pair(x_,y_)]++; //\u8fd9\u51e0\u4e2a\u5143\u7d20+1\u3002 if (x!=x_ && y!=y_) return 0&puts(\"NO\"); //\u5982\u679c\u662f\u659c\u8fb9\u90a3\u4e48\uff0c\u8f93\u51fa \"NO\"\u3002 if (x==x_) tot_x++; if (y==y_) tot_y++; //\u5224\u65ad\u91cd\u8fb9\u3002 if (Map[make_pair(x,y)]==2) tot++; if (Map[make_pair(x_,y_)]==2) tot++; //\u5224\u65ad\u91cd\u70b9\u3002 } if (tot_x!=2 || tot_y!=2) return 0&puts(\"NO\");//\u5982\u679c\u662f\u91cd\u8fb9\u90a3\u4e48\u8f93\u51fa \"NO\" \u3002 if (tot==4) return 0&puts(\"YES\"); //\u5982\u679c\u8bf4\u4e0d\u662f\u91cd\u70b9\uff0c\u90a3\u4e48\u5c31\u8f93\u51fa \"YES\" \u3002 // puts(\"ok\"); // printf(\"%lld\\n\",Map.size()); return 0&puts(\"NO\");//\u5982\u679c\u662f\u91cd\u70b9\u90a3\u4e48 \u8f93\u51fa \"NO\"\u3002 }\n\t   \t\t\t \t\t \t  \t\t  \t\t\t \t\t \t\t"
}