{
    "id": 37738431,
    "contestId": 14,
    "creationTimeSeconds": 1525059448,
    "relativeTimeSeconds": 808,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "deadRabbit"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1525058640
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 110,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 3379200,
    "source": "#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <ctime>\n#include <queue>\n#include <iostream>\n#include <unordered_map>\n#include <unordered_set>\n#include <map>\n#include <memory.h>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef vector<int> VI;\ntypedef vector<string> VS;\ntypedef vector<VI> VVI;\ntypedef pair<int, int> PII;\nconst double eps = 1e-12;\nconst int INF = 1<<30;\nconst LL LINF = 1ll<<60;\n\n#define pb push_back\n#define mp make_pair\n#define ALL(a) (a).begin(),(a).end()\n#define CLR(a, v) memset((a),(v),sizeof(a))\n#define sqr(a) ((a)*(a))\nconst int BUFFER_SZ = 1<<10;\nconst int MOD = 1000*1000*1000+7;\n\nchar BUFFER[BUFFER_SZ];\nint gi() { int x; scanf(\"%d\", &x); return x; }\ndouble gd() { double x; scanf(\"%lf\", &x); return x; }\nLL gll() { LL x; scanf(\"%lld\", &x); return x; }\nVI gvi(int n) { VI a; while(n-->0) a.pb(gi()); return a;}\nstring gs() { scanf(\"%s\", BUFFER); return string(BUFFER); }\ntemplate <class T> void print(vector<T> &x, string format) { format += \"%c\";for (int i = 0; i < x.size(); ++i) printf(format.c_str(), x[i], i+1==x.size() ? '\\n' : ' '); }\n// ---------------------------------------------------------- //\n\n\nvoid solve() {\n  map<PII,int> v;\n  int ver = 0;\n  int hor = 0;\n  for (int i = 0; i < 4; ++i) {\n    int x1 = gi();\n    int y1 = gi();\n    int x2 = gi();\n    int y2 = gi();\n    v[mp(x1,y1)]++;\n    v[mp(x2,y2)]++;\n    if (x1==x2) ++ver;\n    else if (y1==y2) ++hor;\n    else {\n      printf(\"NO\\n\");\n      return;\n    }\n  }\n  if (ver!=2 || hor!=2 || v.size()!=4) {\n    printf(\"NO\\n\");\n    return;\n  }\n  for (auto x : v) {\n    if (x.second!=2) {\n      printf(\"NO\\n\");\n      return;\n    }\n  }\n  printf(\"YES\\n\");\n}\n\n\nint main() {\n#ifdef DEAD_RABBIT\n  freopen(\"../in.txt\",\"r\",stdin);\n  clock_t start = clock();\n#endif\n  solve();\n#ifdef DEAD_RABBIT\n  fprintf(stdout, \"Time: %.3lf\\n\", 1.0*(clock()-start)/CLOCKS_PER_SEC);\n#endif\n  return 0;\n}\n"
}