{
    "id": 95308140,
    "contestId": 14,
    "creationTimeSeconds": 1602470548,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "ReiAC"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 110,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define f first\r\n#define s second\r\n\r\nusing namespace std;\r\n\r\ntypedef pair<int, int> pii;\r\npii point;\r\npair<pii, pii> segments[10];\r\nset<pii> s;\r\nconst int INF = 1e9+7;\r\n\r\nint main(){\r\n#ifdef LOCAL\r\n\tfreopen(\"input\", \"r\", stdin);\r\n#endif\r\n\r\n\tfor (int i = 0; i < 4; i++){\r\n\t\tint x, y, a, b;\r\n\t\tscanf(\"%d %d %d %d\", &x, &y, &a, &b);\r\n\t\ts.insert({x, y});\r\n\t\ts.insert({a, b});\r\n\t\tsegments[i] = { {x, y}, {a, b} };\r\n\t}\r\n\r\n\tif (s.size() == 4){\r\n\t\tint ymin = INF, xmin = INF,\r\n\t\t\tymax = -INF, xmax = -INF;\r\n\t\tfor (auto a : s){\r\n\t\t\txmin = min(xmin, a.f);\r\n\t\t\txmax = max(xmax, a.f);\r\n\t\t\tymin = min(ymin, a.s);\r\n\t\t\tymax = max(ymax, a.s);\r\n\t\t}\r\n\t\tif (xmin == xmax || ymin == ymax)\r\n\t\t\tprintf(\"NO\\n\");\r\n\t\telse{\r\n\t\t\tpii v1 = {xmax, ymin}, v2 = {xmax, ymax}, \r\n\t\t\t\tv3 = {xmin, ymin}, v4 = {xmin, ymax};\r\n\t\t\tbool top = 0, left = 0, right = 0, bottom = 0;\r\n\t\t\tfor (int i = 0; i < 4; i++){\r\n\t\t\t\tif ((segments[i].f == v1 && segments[i].s == v2) || (segments[i].s == v1 && segments[i].f == v2))\r\n\t\t\t\t\ttop = true;\r\n\t\t\t\tif ((segments[i].f == v2 && segments[i].s == v4) || (segments[i].s == v2 && segments[i].f == v4))\r\n\t\t\t\t\tright = true;\r\n\t\t\t\tif ((segments[i].f == v4 && segments[i].s == v3) || (segments[i].s == v4 && segments[i].f == v3))\r\n\t\t\t\t\tbottom = true;\r\n\t\t\t\tif ((segments[i].f == v1 && segments[i].s == v3) || (segments[i].s == v1 && segments[i].f == v3))\r\n\t\t\t\t\tleft = true;\r\n\t\t\t}\r\n\t\t\tif (top + right + bottom + left == 4) printf(\"YES\\n\");\r\n\t\t\telse printf(\"NO\\n\");\r\n\t\t}\r\n\t} else {\r\n\t\tprintf(\"NO\\n\");\r\n\t}\r\n\r\n\treturn 0;\r\n}//hello"
}