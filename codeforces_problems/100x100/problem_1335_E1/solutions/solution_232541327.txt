{
    "id": 232541327,
    "contestId": 1335,
    "creationTimeSeconds": 1699810473,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "_notAcoder_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586788500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <map>\r\n#include <set>\r\n#include <math.h>\r\n#include <chrono>\r\n#include <iomanip>\r\n#include <unordered_map>\r\n#include <queue>\r\n#include <cstring>\r\n#include <stack>\r\n#include <bitset>\r\nusing namespace std;\r\n#define ll long long\r\nconst int N = 404;\r\nconst ll inf = 1000000000 + 7;\r\n \r\nll gcd(ll a,ll b){\r\n\tif(b == 0) return a;\r\n\treturn gcd(b,a%b);\r\n}\r\n\r\nstruct custom_hash {\r\n\tstatic uint64_t splitmix64(uint64_t x) {\r\n\t\tx += 0x9e3779b97f4a7c15;\r\n\t\tx = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n\t\tx = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n\t\treturn x ^ (x >> 31);\r\n\t}\r\n \r\n\tsize_t operator()(uint64_t x) const {\r\n\t\tstatic const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n\t\treturn splitmix64(x + FIXED_RANDOM);\r\n\t}\r\n};\r\n \r\nbool sortbyCond(const pair<int, int>& a, const pair<int, int>& b){\r\n    if (a.first != b.first) return (a.first < b.first);\r\n    else return (a.second > b.second);\r\n}\r\n// vector<ll> v(N);\r\n// int dfs(int p) {\r\n// \tif(mn[p] != -1) return mn[p];\r\n// \tif(g[p].size() == 0) return v[p];\r\n// \tll sum = 0;\r\n// \tfor(int i=0;i<(int)g[p].size();i++) {\r\n// \t\tsum += dfs(g[p][i]);\r\n// \t}\r\n// \treturn mn[p] = min(v[p], sum);\r\n// }\r\n\r\n// formalize question in equation like the question - good subarray\r\n\r\n// matrix of vector of size n\r\n// vector<vector<long long>> dp(n + 1, vector<long long>(x + 1, -INF64));\r\n// for using (mod) over subbarray use ira and flamenco question - easy question\r\n// hossam and trainee(factors ) -- 388535(bit's) -- lucky chains (for using factors efficeintly)\r\n\r\n// int pr[N];\r\n\r\n// working with factors in logn\r\n// for(int i=2;i<N;i++) {\r\n// \tif(pr[i] == 0) {\r\n// \t\tfor(int j=2*i;j<N;j += i) pr[j] = i;\r\n// \t}\r\n// }\r\n// for(int i=2;i<N;i++) if(pr[i] == 0) pr[i] = i;\r\n\r\nint main() {\r\n\tios_base::sync_with_stdio(0);\r\n\tcin.tie(0);\r\n\tint t;\r\n\tcin >> t;\r\n\twhile(t--) {\r\n\t\tint n;\r\n\t\tcin >> n;\r\n\t\tvector<int> v(n);\r\n\t\tint pr[27][n], pr1[27][n];\r\n\t\tfor(int i=1;i<27;i++) {\r\n\t\t\tfor(int j=0;j<n;j++){\r\n\t\t\t\tpr[i][j] = 0;\r\n\t\t\t\tpr1[i][j] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i=0;i<n;i++) {\r\n\t\t\tcin >> v[i];\r\n\t\t\tpr[v[i]][i] = 1;\r\n\t\t\tpr1[v[i]][i] = 1;\r\n\t\t}\r\n\r\n\t\tfor(int i=1;i<=26;i++) {\r\n\t\t\tfor(int j=1;j<n;j++) {\r\n\t\t\t\tpr[i][j] += pr[i][j-1];\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i=1;i<=26;i++) {\r\n\t\t\tfor(int j=n-2;j>=0;j--) {\r\n\t\t\t\tpr1[i][j] += pr1[i][j+1];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// for(int i=1;i<=26;i++) {\r\n\t\t// \tfor(int j=0;j<n;j++) {\r\n\t\t// \t\tcout<<pr1[i][j]<<\" \";\r\n\t\t// \t}\r\n\t\t// \tcout<<\"\\n\";\r\n\t\t// }\r\n\r\n\t\tint ans = 0;\r\n\t\tfor(int i=1;i<=26;i++) {\r\n\t\t\tint lo = 0, hi = n-1;\r\n\t\t\twhile(hi > lo) {\r\n\t\t\t\twhile(pr[i][lo] == 0 && lo < n) lo++;\r\n\t\t\t\twhile(pr1[i][hi] == 0 && hi >= 0) hi--;\r\n\t\t\t\tif(lo >= hi || lo >= n || hi < 0) break;\r\n\t\t\t\twhile(pr1[i][hi] != pr[i][lo] && hi > lo) {\r\n\t\t\t\t\thi--;\r\n\t\t\t\t}\r\n\t\t\t\tif(lo >= hi) break;\r\n\t\t\t\tif(pr[i][lo] == pr1[i][hi]) {\r\n\t\t\t\t\tfor(int j=1;j<=26;j++) {\r\n\t\t\t\t\t\tif(pr[j][hi] - pr[j][lo] >= pr[i][lo]) {\r\n\t\t\t\t\t\t\tans = max(ans, 2 * pr[i][lo] + pr[j][hi - 1] - pr[j][lo]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlo++;\r\n\t\t\t\thi--;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcout<<max(ans, 1)<<\"\\n\";\r\n\t}\r\n}"
}