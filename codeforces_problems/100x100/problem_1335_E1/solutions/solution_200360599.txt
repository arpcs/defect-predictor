{
    "id": 200360599,
    "contestId": 1335,
    "creationTimeSeconds": 1680430561,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "Aryan_Shrivastava"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586788500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nusing ll = long long;\r\n#define endl '\\n' \r\n#ifdef ONPC\r\n#include \"debug.h\"\r\n#else\r\n#define deb(...)\r\n#endif\r\nconst int M=1e9+7;\r\nll BIN_EXP(ll x, ll y,ll p)\r\n{\r\n    ll res = 1;\r\n    while (y > 0) {\r\n    if (y % 2 == 1)\r\n    res = ((res%M )* (x%M))%M;\r\n    y = y >> 1;\r\n    x = ((x %M)* (x%M))%M;\r\n    }\r\n    return res % M;\r\n}\r\n\r\nvoid solve()\r\n{\r\n    ll n; cin >> n;\r\n    vector<ll> a(n);\r\n    vector<vector<ll>> b(26);\r\n\r\n    for(int i=0;i<n;i++){\r\n        cin >> a[i];\r\n        b[a[i]-1].push_back(i);\r\n    }\r\n    //deb(b);\r\n    ll ans = 1;\r\n    for(int i=0;i<26;i++){\r\n        for(int j=0;j<26;j++){\r\n            if(i==j){\r\n                ans = max(ans,(ll) b[i].size());\r\n            }\r\n            else {\r\n                if(b[i].size()==0 || b[j].size()==0)continue ;\r\n\r\n                for(int k = 0;k<(b[i].size())/2;k++){\r\n                    // deb(i,j);\r\n                   \r\n                    ll x = lower_bound(b[j].begin(),b[j].end(),b[i][k]) - b[j].begin();\r\n                    ll y = upper_bound(b[j].begin(),b[j].end(),b[i][b[i].size()-k-1]) - b[j].begin();\r\n                    if(x>=0 && x<b[j].size() && y>0 && y<=b[j].size()) //deb(x,y,b[j][x],b[j][y-1]);\r\n                    ans = max(ans , 2*(k+1) + max(0ll,y-x) );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    cout<<ans;\r\n    \r\n    \r\n}\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        solve();\r\n        cout << endl;\r\n    }\r\n}"
}