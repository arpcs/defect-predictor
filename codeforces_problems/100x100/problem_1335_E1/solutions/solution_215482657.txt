{
    "id": 215482657,
    "contestId": 1335,
    "creationTimeSeconds": 1690283569,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586788500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n#define fast ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n#define ll long long\n//#define int long long\n#define ull unsigned long long\n#define el \"\\n\"\n#define endl \"\\n\"\n#define pb push_back\n#define sec second\n#define f first\n\n#define tests int T;cin>>T;while(T--)\n// global variableness \nconst ll sz=2e3+9, mod =1e9+7,inf=1e9;\nint n, a[sz], freq[30], mx, lr, mid,dp[sz][3][54000],vis[sz][3][54000],tc;\n// functions\n\nvoid ems7() {\n    mx=0;\n    for(int i=0; i<30; i++)\n        freq[i]=0;\n    // memset(dp, -1, sizeof dp);\n}\n\nint solve(int i, int stat,int sum_left, int  sum_right) {\n\n    if(i == n) {\n\n        if(sum_left != sum_right)\n            return -inf;\n\n        return 0;\n    }\n\n    int ret = dp[i][stat][sum_left] ;\n\n    if(vis[i][stat][sum_left] == tc)\n        return ret;\n\n    if(a[i] != lr and a[i] != mid) {\n\n        ret=solve(i+1,stat,sum_left,sum_right);\n\n    }\n    else {\n        ret = -inf ;\n\n        if(stat == 0) {\n\n            ret = solve(i,1, sum_left, sum_right);\n            if(a[i] == lr) {\n                ret = max(ret,solve(i+1, 0, sum_left + lr, sum_right)+1);\n            }\n\n            ret = max(ret,solve(i+1, 0, sum_left, sum_right));\n\n        }\n        else if(stat == 1) {\n\n            ret = solve(i,2, sum_left, sum_right);\n\n            if(a[i] == mid) {\n                ret = max(ret,solve(i+1, 1, sum_left, sum_right )+1);\n            }\n            ret = max(ret,solve(i+1, 1, sum_left, sum_right));\n\n        }\n        else {\n            if(a[i] == lr)\n                ret = solve(i+1, 2, sum_left, sum_right + lr)+1;\n\n            ret = max(ret,solve(i+1, 2, sum_left, sum_right));\n        }\n    }\n    vis[i][stat][sum_left] = tc;\n\n    return dp[i][stat][sum_left] = ret;\n}\n\nsigned main()\n\n{\n\n    fast\n    tests{\n        ems7();\n        tc++;\n        cin >> n;\n\n        for(int i = 0; i < n ; i++)\n            cin >> a[i], freq[a[i]]++,mx=max(freq[a[i]], mx);\n\n        for(int i = 1 ; i <=26  ; i++) {\n            for(int j = 1; j <= 26 ; j++) {\n                lr=i,mid=j;\n                mx=max(mx,solve(0,0,0,0));\n                tc++;\n\n            }\n        }\n\n        cout << mx << el;\n    }\n}\n\t \t\t\t \t       \t \t \t\t    \t\t\t \t \t"
}