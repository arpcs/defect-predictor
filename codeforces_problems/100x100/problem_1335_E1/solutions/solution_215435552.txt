{
    "id": 215435552,
    "contestId": 1335,
    "creationTimeSeconds": 1690256802,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "TravellerAK"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586788500
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 8396800,
    "source": "for _ in range(int(input())):\r\n\tn = int(input())\r\n\tr = list(map(int, input().split()))\r\n\td = {i: [] for i in range(1, 27)}\r\n\tfor i in range(n):\r\n\t\td[r[i]].append(i)\r\n\tans = 1\r\n\tfor end in range(1, 27):\r\n\t\tc = 1\r\n\t\twhile c * 2 <= len(d[end]):\r\n\t\t\tll, rr = d[end][c - 1] + 1, d[end][-c] - 1\r\n\t\t\tdd = [0] * 27\r\n\t\t\tfor p in range(ll, rr + 1):\r\n\t\t\t\tdd[r[p]] += 1\r\n\t\t\tans = max(ans, max(dd) + 2 * c)\r\n\t\t\tc += 1\r\n\tprint (ans)"
}