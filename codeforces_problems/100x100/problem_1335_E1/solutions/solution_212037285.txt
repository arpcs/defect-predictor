{
    "id": 212037285,
    "contestId": 1335,
    "creationTimeSeconds": 1688453416,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "vanshu05"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586788500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 390,
    "memoryConsumedBytes": 204800,
    "source": "#include \"bits/stdc++.h\"\r\n#define  long long\r\n#define uint unsigned long long\r\n#define vi vector<int>\r\n#define vvi vector<vi >\r\n#define vb vector<bool>\r\n#define vvb vector<vb >\r\n#define fr(i,n) for(int i=0; i<(n); i++)\r\n#define rep(i,a,n) for(int i=(a); i<=(n); i++)\r\n#define nl cout<<\"\\n\"\r\n#define dbg(var) cout<<#var<<\"=\"<<var<<\" \"\r\n#define all(v) v.begin(),v.end()\r\n#define sz(v) (int)(v.size())\r\n#define srt(v)  sort(v.begin(),v.end())         // sort \r\n#define mxe(v)  *max_element(v.begin(),v.end())     // find max element in vector\r\n#define mne(v)  *min_element(v.begin(),v.end())     // find min element in vector\r\n#define unq(v)  v.resize(distance(v.begin(), unique(v.begin(), v.end())));\r\n// make sure to sort before applying unique // else only consecutive duplicates would be removed \r\nusing namespace std;\r\n\r\nint MOD=1e9+7;      // Hardcoded, directly change from here for functions!\r\n\r\n\r\n\r\n// ================================== take ip/op like vector,pairs directly!==================================\r\ntemplate<typename typC,typename typD> istream &operator>>(istream &cin,pair<typC,typD> &a) { return cin>>a.first>>a.second; }\r\ntemplate<typename typC> istream &operator>>(istream &cin,vector<typC> &a) { for (auto &x:a) cin>>x; return cin; }\r\ntemplate<typename typC,typename typD> ostream &operator<<(ostream &cout,const pair<typC,typD> &a) { return cout<<a.first<<' '<<a.second; }\r\ntemplate<typename typC,typename typD> ostream &operator<<(ostream &cout,const vector<pair<typC,typD>> &a) { for (auto &x:a) cout<<x<<'\\n'; return cout; }\r\ntemplate<typename typC> ostream &operator<<(ostream &cout,const vector<typC> &a) { int n=a.size(); if (!n) return cout; cout<<a[0]; for (int i=1; i<n; i++) cout<<' '<<a[i]; return cout; }\r\n// ===================================END Of the input module ==========================================\r\n\r\n\r\n\r\n//==================================== compute higher powers with mod ===================================\r\nuint power(int x, int y, int p =  MOD)\r\n{\r\n    unsigned long long res = 1;\r\n\r\n    x = x % p;\r\n    while (y > 0)\r\n    {\r\n\r\n        if (y & 1)\r\n            res = (res * x) % p;\r\n\r\n        y = y >> 1;\r\n        x = (x * x) % p;\r\n    }\r\n    return res;\r\n}\r\n\r\n// =============================================================================================================\r\n\r\nuint modInverse(int n, int p=MOD)       // using fermats little thm. [p needs to be prime which is mostly the case as mod value generally is 1e9+7]\r\n{\r\n    return power(n, p - 2, p);\r\n}\r\n// can also derive this using extended euclidean... however this has a much simpler code....\r\n\r\n\r\n// =========================================Used to calculate nCr of higher values ===================================\r\nuint nCr(int n, int r, int p=MOD)     // faster calculation.. \r\n{\r\n    if (n < r)\r\n        return 0;\r\n\r\n    if (r == 0)\r\n        return 1;\r\n        \r\n    vector<int> fac(n+1,0);\r\n    fac[0] = 1;\r\n    for (int i = 1; i <= n; i++)\r\n        fac[i] = (fac[i - 1] * i) % p;\r\n\r\n    return (fac[n] * modInverse(fac[r], p) % p * modInverse(fac[n - r], p) % p) % p;\r\n}\r\n\r\n\r\n// ==================================BINARY SEARCH MODULE=========================================\r\nbool poss(int mid,vector<int>& arr){        // evaludate the condition!\r\n    if(mid)   return mid;\r\n    return 1;\r\n}\r\n\r\nint BinSearch(vector<int>& arr ,int lo,int hi, bool pos=1){      // pos means find max ...\r\n    int res=-1;\r\n    while(lo<=hi){\r\n        int mid=(lo+hi+1)/2;\r\n        if(poss(mid,arr)){\r\n            res=mid;\r\n            if(pos)    lo=mid+1;\r\n            else hi=mid-1;\r\n        }\r\n        else{\r\n            if(pos)    hi=mid-1;\r\n            else lo=mid+1;\r\n        }\r\n    }\r\n    return res;\r\n}\r\n// =====================================END of BinSearch Module=========================================\r\n/// ====================================PRIME utility ==================================================\r\n// int sz=1e6+5;\r\n// bool PrimeSieve[1000005];   // 1e6+5\r\n// void buildSieve(){\r\n//     for(int i=2;i<=sz;i++)    PrimeSieve[i]=1;\r\n//     PrimeSieve[0]=0;// \r\n//     PrimeSieve[1]=0;    // 1 is neither prime nor composite \r\n//     for(int i=2;i<sz;i++){\r\n//         if(PrimeSieve[i]==0)    continue;       // the current number itself is composite \r\n//         for(int j=2;j*i<sz;j++){\r\n//             PrimeSieve[i*j]=0;\r\n//         }\r\n//     }\r\n// }\r\n// add SieveOfEratosthenes\r\n// add isPrime ad\r\nbool isPrime(int n){\r\n    for(int i=2;i*i<=n;i++){\r\n        if(n%i==0)  return 0;\r\n    }\r\n    return 1;\r\n}\r\n\r\n/// ====================================PRIME utility ENDS here=========================================\r\n//=========\r\nint f(vector<int>&a,int k,int l,int il,int u,int jl,vector<vector<vector<int>>>&dp){\r\n    if(jl<il || il==a.size() || jl<0){\r\n        if(u==2) return 0;\r\n        return -1e9;\r\n    }\r\n    if(dp[il][jl][u]!=-1) return dp[il][jl][u];\r\n    int x=0,y=0;\r\n    /*if(k==1 && l==2){\r\n        cout<<il<<\" \"<<jl<<endl;\r\n    }*/\r\n    if(a[il]==k && u==0 || a[il]==k && u==1){\r\n        while(jl>il && a[jl]!=a[il]) jl--;\r\n        if(jl==il) return -1e8;\r\n        x=2+f(a,k,l,il+1,1,jl-1,dp);\r\n    }\r\n    if(a[il]==l && u==1 || a[il]==l && u==2){\r\n           while(jl>il && a[jl]!=a[il]) jl--;\r\n        if(jl==il) return 1;\r\n        y=2+f(a,k,l,il+1,2,jl-1,dp);\r\n    }\r\n\r\n    int z=f(a,k,l,il+1,u,jl,dp);\r\n    return dp[il][jl][u]= max(z,max(x,y));\r\n}\r\n\r\n\r\nvoid solve(){\r\n   int n,r,l;\r\n   cin>>n;\r\n   vector<int>a(n);\r\n   cin>>a;\r\n   map<int,int>map;\r\n   for(int i=0;i<n;i++) map[a[i]]++;\r\n   int ans=0;\r\n\r\n   for(int i=1;i<=26;i++){\r\n   // if(map.find(i)!=map.end()){\r\n    for(int j=1;j<=26;j++){\r\n        if(i==j){\r\n            ans=max(ans,map[i]);\r\n        }\r\n        else if(map.find(j)!=map.end()) {\r\n             // if(i==1 && j==2) cout<<\"er\";\r\n             vector<vector<vector<int>>>dp(n,vector<vector<int>>(n,vector<int>(3,-1)));\r\n            ans=max(ans,f(a,i,j,0,0,a.size()-1,dp));\r\n            \r\n        }\r\n    \r\n    }\r\n   }\r\n   cout<<ans<<endl;\r\n}\r\nint main(){\r\n \r\n ios_base::sync_with_stdio(false);\r\n cin.tie(NULL);\r\n\r\n    int T = 1;\r\n   cin >> T;\r\n    while (T--)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}