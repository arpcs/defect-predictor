{
    "id": 210521084,
    "contestId": 1335,
    "creationTimeSeconds": 1687336295,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "asaecs2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586788500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 160358400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n// #define int long long\r\n//stoi(string) -> int //ll for long long\r\n//__builtin_popcount(x) -> no. of set bits //ll for long long\r\n// #pragma GCC optimize(\"O3,unroll-loops\")\r\n// #pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\r\n\r\nint ceil(int a, int b)\r\n{\r\n    if (a%b) return (a/b)+1;\r\n    else return a/b;\r\n}\r\n \r\n// int sqrt_bin(int n)\r\n// {\r\n//     if (n < 0) return LLONG_MIN;\r\n//     else if (n < 2) return n;\r\n//     int l = 1, r = 3e9, ans = 1;\r\n//     while(l <= r)\r\n//     {\r\n//         int m = (l + r) / 2;\r\n//         if (m * m <= n) l = m + 1, ans = m;\r\n//         else r = m - 1;\r\n//     }\r\n//     return ans;\r\n// }\r\n \r\nint bex(int x, int pow, int mod)\r\n{\r\n    if (x == 0 || x == 1) return x;\r\n    int ans = 1LL;\r\n    while(pow!=0)\r\n    {\r\n        if (pow&1LL) ans = (ans * x) % mod;\r\n        x = (x * x) % mod, pow /= 2LL;\r\n    }\r\n    return ans;\r\n}\r\n \r\n//Sieve of eratosthenes\r\nvector<bool> soe(int n)\r\n{\r\n    vector<bool> Prime(n+1, 1);\r\n    Prime[0] = Prime[1] = false;\r\n    for(int i=2; i<=n; i++) {if (Prime[i]) {for(int j=2*i; j<=n; j+=i) Prime[j] = false;}}\r\n    return Prime;\r\n}\r\n\r\nint m1 = (1e9)+7, m2 = 998244353;\r\n\r\n// #define N 1000\r\n// int fac[N+1];\r\n\r\n// void sol()\r\n// {\r\n//     fac[0]=1;\r\n//     for(int i=1; i<=N; i++) fac[i] = (i*fac[i-1])%m1;\r\n// }\r\n\r\n// int ncr(int n, int r)\r\n// {\r\n//     int ans = fac[n];\r\n//     (ans *= bex(fac[n-r], m1-2, m1)) %= m1;\r\n//     (ans *= bex(fac[r], m1-2, m1)) %= m1;\r\n//     return ans;\r\n// }\r\n\r\nint p[200000][200];\r\n\r\nvoid solve()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    vector<vector<int>> v(200);\r\n    int c[200] = {}, a[n];\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        cin >> a[i];\r\n        a[i]--;\r\n        v[a[i]].push_back(i);\r\n        c[a[i]]++;\r\n        for(int j=0; j<200; j++) p[i][j]=c[j];\r\n    }\r\n    for(int i=0; i<200; i++) reverse(v[i].begin(), v[i].end());\r\n    int cnt[200] = {}, j[200] = {}, ans = 1;\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        // cin >> a[i];\r\n        cnt[a[i]]++;\r\n        if (i<v[a[i]][j[a[i]]])\r\n        {\r\n            int mx = 0;\r\n            for(int k=0; k<200; k++) mx = max(mx, p[v[a[i]][j[a[i]]]-1][k]-p[i][k]);\r\n            ans = max(ans, mx+2*cnt[a[i]]);\r\n        }\r\n        j[a[i]]++;\r\n        // cout << j[a[i]] << ' ';\r\n    }\r\n    cout << ans << '\\n';\r\n}\r\n\r\nsigned main()\r\n{\r\n    // time_t start, end; time(&start);\r\n    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);\r\n    int t = 1;\r\n    cin >> t;\r\n    while (t--) solve();\r\n    // time(&end); double time_taken = double(end - start); cout << \"Time taken by program is : \" << fixed << time_taken << setprecision(5) << \" sec \" << '\\n';\r\n    return 0;\r\n}"
}