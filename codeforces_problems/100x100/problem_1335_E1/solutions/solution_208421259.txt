{
    "id": 208421259,
    "contestId": 1335,
    "creationTimeSeconds": 1685880069,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "kaamkliye"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586788500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\nconst ll mod = (long long)(1000000007);\r\nint main() {\r\n    ll t,n,u,v,l,m;\r\n    t=1;\r\n    cin>>t;\r\n    while(t--){\r\n        cin>>n;\r\n        int a[n];\r\n        for(auto &x:a)cin>>x;\r\n        int cnt[n + 1][26];\r\n        for(int i=0;i<=n;++i){\r\n            for(int j=0;j<26;++j){\r\n                if(i == 0){\r\n                    cnt[i][j] = 0;\r\n                    continue;\r\n                }\r\n                cnt[i][j] = cnt[i-1][j] + (a[i-1] == j + 1);\r\n            }\r\n        }\r\n        pair<int,int> dp[n + 1][26][26];\r\n        for(int i=n;i>0;--i){\r\n            for(int j=0;j<26;++j){\r\n                for(int k=0;k<26;++k){\r\n                    if(i == n){\r\n                        dp[i][j][k] = {0,0};\r\n                        continue; \r\n                    }\r\n                    int ks = cnt[n][k] - cnt[i][k];\r\n                    int b = i + 1 , e = n;\r\n                    int till = b;\r\n                    while(b <= e){\r\n                        int mid = b + (e - b)/2;\r\n                        if(cnt[mid][k] - cnt[i][k] > ks){\r\n                            b = mid + 1;\r\n                        }\r\n                        else if(cnt[mid][k] - cnt[i][k] == ks){\r\n                            till = max(till , mid);\r\n                            b = mid + 1;\r\n                        }\r\n                        else{   \r\n                            e = mid - 1;\r\n                        }\r\n                    }\r\n                    if(ks > 0){\r\n                        if(a[i-1] == j+1){\r\n                            if(ks < dp[i+1][j][k].first + dp[i+1][j][k].second){\r\n                                dp[i][j][k] = {dp[i+1][j][k].first + 1,dp[i+1][j][k].second};\r\n                            }\r\n                            else{\r\n                                dp[i][j][k] = {cnt[till - 1][j] - cnt[i][j] + 1, ks};\r\n                            }\r\n                        }\r\n                        else{\r\n                            dp[i][j][k] = {dp[i+1][j][k].first,dp[i+1][j][k].second};\r\n                        }\r\n                    }\r\n                    else{\r\n                        dp[i][j][k] = {0,0};\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        int ans = 0;\r\n        for(int i=1;i<=n;++i){\r\n            // cout<<i<<\" \"<<ans<<\"\\n\";\r\n            if(i == n){\r\n                for(int j=0;j<26;++j){\r\n                    ans = max(ans,cnt[i][j]);\r\n                }\r\n                break;\r\n            }\r\n            for(int j=0;j<26;++j){\r\n                for(int k=0;k<26;++k){\r\n                    if(k == j || cnt[i][j] == 0 || dp[i+1][k][j].second == 0 || dp[i+1][k][j].first == 0)continue;\r\n                    ans = max(ans , 2 * min(cnt[i][j],dp[i+1][k][j].second) + dp[i+1][k][j].first);\r\n                }\r\n            }\r\n        }\r\n        cout<<ans<<\"\\n\";\r\n    }\r\n    return 0;\r\n}"
}