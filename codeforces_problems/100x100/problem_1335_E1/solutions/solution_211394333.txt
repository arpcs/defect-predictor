{
    "id": 211394333,
    "contestId": 1335,
    "creationTimeSeconds": 1688017985,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "praveenseervi5678"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586788500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef vector<ll> vll;\r\n#define all(v) v.begin(), v.end()\r\n#define done(x){ cout << x << endl;return;}\r\n#define f(i, n) for (int i = 0; i < n; i++)\r\n#define f1(i, n) for (int i = 1; i < n; i++)\r\n#define rep(i, st, end) for(ll i = st; i < end; i++)\r\nconst ll mod = 1e9 + 7;\r\nconst ll N = 2e3 + 1;\r\nll arr[N];\r\nll dp[N][N][27][3];\r\nll n;\r\nll memo(int i,int j,int priv,int cnt){\r\n    if(i>j){\r\n        return 0;\r\n    }\r\n    ll &ans=dp[i][j][priv][cnt];\r\n    if(ans!=-1){\r\n        return ans;\r\n    }\r\n    if(arr[i]==arr[j]){\r\n        if(i==j){\r\n            if(arr[i]==priv){\r\n                ans=max(ans,memo(i+1,j-1,priv,cnt)+1);\r\n            }\r\n            else{\r\n                if(cnt==0||cnt==1){\r\n                    ans=max(ans,memo(i+1,j-1,arr[i],cnt+1)+1);\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            if(arr[i]==priv){\r\n                ans=max(ans,memo(i+1,j-1,priv,cnt)+2);\r\n            }\r\n            else{\r\n                if(cnt==0||cnt==1){\r\n                    ans=max(ans,memo(i+1,j-1,arr[i],cnt+1)+2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else{\r\n        ans=max(ans,memo(i+1,j,priv,cnt));\r\n        ans=max(ans,memo(i,j-1,priv,cnt));\r\n    }\r\n    return ans;\r\n}\r\nvoid solve(){\r\n    cin>>n;\r\n    f(i,n){\r\n        cin>>arr[i];\r\n    }\r\n    memset(dp,-1,sizeof dp);\r\n    done(memo(0,n-1,0,0))\r\n}\r\nint main(){\r\n    ll t;\r\n    t = 1;\r\n    scanf(\"%lld\",&t);\r\n    while (t--)\r\n        solve();\r\n    return 0;\r\n}"
}