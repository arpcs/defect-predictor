{
    "id": 219984837,
    "contestId": 1335,
    "creationTimeSeconds": 1692763545,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "Anodite"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586788500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 512000,
    "source": "#include <bits/stdc++.h>\r\n#define debug(x) (cout<<'['<<(#x)<<':'<<(x)<<']'<<'\\n')\r\nusing namespace std;\r\n\r\nint main(){\r\n  ios::sync_with_stdio(0), cin.tie(0);\r\n\r\n  int t_;\r\n  cin>>t_;\r\n  while(t_--){\r\n    int n;\r\n    cin>>n;\r\n    vector<int> a(n);\r\n    map<int,int> mp;\r\n    for(int i=0; i<n; i++){\r\n      cin>>a[i];\r\n      mp[a[i]]++;\r\n    }\r\n    vector<vector<int>> pfx(27,vector<int>(n));\r\n    // pre-processing\r\n    for(int i=1; i<=26; i++){\r\n      pfx[i][0]=(a[0]==i ? 1 : 0);\r\n      for(int j=1; j<n; j++){\r\n        pfx[i][j]=pfx[i][j-1]+(a[j]==i);\r\n      }\r\n    }\r\n    auto get_max=[&](int l, int r){\r\n      int v=0;\r\n      for(int i=1; i<=26; i++){\r\n        int u=pfx[i][r];\r\n        if(l) u-=pfx[i][l-1];\r\n        v=max(v,u);\r\n      }\r\n      return v;\r\n    };\r\n    int best=0;\r\n    for(int x=1; x<=26; x++){\r\n      if(mp[x]<=1){\r\n        best=max(best,mp[x]);\r\n        continue;\r\n      }\r\n      int l=0, r=n-1, cnt=0;\r\n      int rem=mp[x];\r\n      best=max(best,rem);\r\n      while(rem>=2){\r\n        while(a[l]!=x && l<r){\r\n          l++;\r\n        }\r\n        while(a[r]!=x && l<r){\r\n          r--;\r\n        }\r\n        l++, r--;\r\n        cnt+=2;\r\n        // debug(l), debug(r), debug(get_max(l,r));\r\n        if(r>=l) best=max(best,cnt+get_max(l,r));\r\n        rem-=2;\r\n      }\r\n      // debug(x), debug(best);\r\n    }\r\n    cout<<best<<'\\n';\r\n  }\r\n  return 0;\r\n}"
}