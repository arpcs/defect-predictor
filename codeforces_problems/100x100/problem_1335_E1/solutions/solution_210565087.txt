{
    "id": 210565087,
    "contestId": 1335,
    "creationTimeSeconds": 1687361804,
    "relativeTimeSeconds": 5504,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "VoNgocSinh"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1687356300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 32256000,
    "source": "#include<bits/stdc++.h>\r\n// #include <ext/pb_ds/assoc_container.hpp>\r\n\r\n// using namespace __gnu_pbds;\r\nusing namespace std;\r\n\r\n// #define ordered_set tree<int, null_type,less_equal<int>, rb_tree_tag,tree_order_statistics_node_update>\r\n#define            pb push_back\r\n#define            fi first\r\n#define            se second\r\n#define            ll long long\r\n#define      gcd(a,b) __gcd(a,b)\r\n#define      lcm(a,b) (a*b/__gcd(a,b))\r\n#define           ios ios_base::sync_with_stdio(0);cin.tie();cout.tie();\r\n#define     inpout(a) freopen(a\".inp\",\"r\",stdin),freopen(a\".out\",\"w\",stdout)\r\ntemplate<class A> inline A sqr(A a){return a*a;};\r\ntemplate<class A> inline A Pow(A a,long long b,long long MOD){return (b==0 ? 1 : (b==1 ? a : (sqr(Pow(a,b/2,MOD))%MOD)*max(1LL,(b%2)*a)))% MOD;};\r\ntemplate<class A,class B> inline void maximize(A& x, B y) {x = max(x,y);};\r\ntemplate<class A,class B> inline void minimize(A& x, B y) {x = min(x,y);};\r\n\r\nconst long long INF = 1e16;\r\nconst long long mod = 1e9+7;\r\nconst long long N = 2e4+1;\r\n\r\nint n,a[N],dp[N][201],dp2[N][201],v[201];\r\n\r\nvoid komasan(){\r\n\r\n    cin >> n;\r\n    for (int i=1;i<=n;i++) cin >> a[i];\r\n    for (int i=1;i<=n;i++)\r\n        for (int j=1;j<=200;j++) dp[i][j] = 0;\r\n    for (int i=1;i<=200;i++) v[i] = 0;\r\n    for (int i=1;i<=n;i++){\r\n        for (int j=1;j<=200;j++){\r\n            dp[i][j] = max(dp[v[j]][j],dp[v[a[i]]][j])+1;\r\n            if (a[i]!=j && dp[i][j]==1) dp[i][j] = 0;\r\n        }\r\n        v[a[i]]=i;\r\n    }\r\n\r\n    // cout << dp[3][3] << ' ';\r\n\r\n    for (int i=1;i<=200;i++) v[i] = 0;\r\n    for (int i=n;i>=1;i--){\r\n        for (int j=1;j<=200;j++){\r\n            dp2[i][j] = max(dp2[v[j]][j],dp2[v[a[i]]][j])+1;\r\n            if (a[i]!=j && dp2[i][j]==1) dp2[i][j] = 0;\r\n        }\r\n        v[a[i]]=i;\r\n    }\r\n    int res = 0;\r\n    for (int i=1;i<=n;i++)\r\n        for (int j=1;j<=200;j++)\r\n            if (res<(dp[i][j]+dp2[i][j]-1)) res = (dp[i][j]+dp2[i][j]-1);\r\n    cout << res << '\\n';\r\n}\r\n\r\nint main(){\r\n    ios;\r\n    //#ifndef ONLINE_JUDGE\r\n\r\n        //inpout(\"filename\");\r\n\r\n    //#endif\r\n    int t;\r\n    cin >> t;\r\n    while (t--) \r\n        komasan();\r\n}"
}