{
    "id": 23922766,
    "contestId": 280,
    "creationTimeSeconds": 1484745400,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 280,
        "index": "E",
        "name": "Sequence Transformation",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "brute force",
            "data structures",
            "dp",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 280,
        "members": [
            {
                "handle": "lzr_010506"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1362929400
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 2150400,
    "source": "#include <bits/stdc++.h>\r\n#define db double\r\nusing namespace std;\r\nconst db inf = 1e18 + 7;\r\n\r\ndb A[608], Min[608], c[608], q, a, b;\r\nint n;\r\n\r\ndb Find(int i, db x)\r\n{\r\n\tif(x - a < 1.0 || x - b > q) return inf;\r\n\tif(i == 1)\r\n\t{\r\n\t\tif(x - b <= A[i] && A[i] <= x - a) return Min[i];\r\n\t\telse if(x - a <= A[i]) return (x - a - c[i]) * (x - a - c[i]);\r\n\t\telse return (x - b - c[i]) * (x - b - c[i]);\r\n\t}\r\n\tif(x - b <= A[i] && A[i] <= x - a) return Min[i];\r\n\telse if(x - a <= A[i]) return Find(i - 1, x - a) + (x - a - c[i]) * (x - a - c[i]);\r\n\telse return Find(i - 1, x - b) + (x - b - c[i]) * (x - b - c[i]);\r\n}\r\n\r\nvoid find(int i, db x)\r\n{\r\n\tif(i == 1)\r\n\t{\r\n\t\tif(x - b <= A[i] && A[i] <= x - a) printf(\"%.8lf \", A[i]);\r\n\t\telse if(x - a <= A[i]) printf(\"%.8lf \", x - a);\r\n\t\telse printf(\"%.8lf \", x - b);\r\n\t\treturn ;\r\n\t}\r\n\tif(x - b <= A[i] && A[i] <= x - a)\r\n\t\tfind(i - 1, A[i]), printf(\"%.8lf \", A[i]);\r\n\telse if(x - a <= A[i])\r\n\t\tfind(i - 1, x - a),printf(\"%.8lf \", x - a);\r\n\telse\r\n\t\tfind(i - 1, x - b),printf(\"%.8lf \", x - b);\r\n}\r\n\r\nint main()\r\n{\r\n\tscanf(\"%d %lf %lf %lf\", &n, &q, &a, &b);\r\n\tfor(int i = 1; i <= n; i ++) scanf(\"%lf\", c + i);\r\n\tA[1] = c[1];\r\n\tMin[1] = 0;\r\n\tfor(int i = 2; i <= n; i ++)\r\n\t{\r\n\t\tdb l = 1.0 + (i - 1) * a, r = q;\r\n\t\tint times = 50;\r\n\t\twhile(times --)\r\n\t\t{\r\n\t\t\tdb L = (2.0 * l + r) / 3.0, R = (l + 2.0 * r) / 3.0;\r\n\t\t\tif(Find(i - 1, L) + (L - c[i]) * (L - c[i]) >= Find(i - 1, R) + (R - c[i]) * (R - c[i]) ) l = L;\r\n\t\t\telse r = R;\r\n\t\t}\r\n\t\tA[i] = l;\r\n\t\tMin[i] = Find(i - 1, l) + (l - c[i]) * (l - c[i]);\r\n\t}\r\n\tfind(n - 1, A[n]);\r\n\tprintf(\"%.8lf\\n\",A[n]);\r\n\tprintf(\"%.8lf\\n\",Min[n]);\r\n\treturn 0;\r\n}\r\n"
}