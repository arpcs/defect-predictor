{
    "id": 186756969,
    "contestId": 280,
    "creationTimeSeconds": 1672053802,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 280,
        "index": "E",
        "name": "Sequence Transformation",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "brute force",
            "data structures",
            "dp",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 280,
        "members": [
            {
                "handle": "CHK666"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1362929400
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// LUOGU_RID: 98061264\n#include<bits/stdc++.h>\r\nusing namespace std;\r\ndouble eps=1e-7;\r\nint n,m,A,B,a[6010];\r\nint cmp(double x){\r\n\tif(x>eps)return 1;\r\n\tif(x<-eps)return -1;\r\n\treturn 0;\r\n}\r\nstruct line{\r\n\tdouble k,b;\r\n\tline(double _k,double _b){k=_k,b=_b;}\r\n\tline(double __x){k=2,b=-2*__x;}\r\n\tfriend line operator+(const line&u,const line&v){return line(u.k+v.k,u.b+v.b);}\r\n\tvoid operator+=(const line&v){k+=v.k,b+=v.b;}\r\n\tvoid shift(double x){b-=k*x;}\r\n\tdouble f(double x){return k*x+b;}\r\n\tdouble rt(){return -b/k;}\r\n};\r\nvector<line>v;\r\nvector<double>u;\r\nvoid SHIFT(){\r\n//\tprintf(\"[%lf,%lf]\\n\",v[0].f(u[0]),v.back().f(u.back()));\r\n\tint tur=-1;\r\n\tfor(int i=0;i<v.size();i++)if(cmp(v[i].f(u[i+1]))!=-1&&cmp(v[i].f(u[i]))!=1)tur=i;\r\n\tif(tur==-1){\r\n\t\tif(cmp(v[0].f(u[0]))==1)tur=-1;\r\n\t\tif(cmp(v.back().f(u.back()))==-1)tur=v.size();\r\n\t}\r\n\tfor(int i=0;i<v.size();i++){\r\n//\t\tprintf(\"%d:%d,%d\\n\",i,u.size(),v.size());\r\n\t\tdouble x=v[i].rt();\r\n\t\tif(tur==-1&&i==0){\r\n\t\t\tx=u[0],tur++;\r\n\t\t\tu[i]+=A,u[i+1]+=B;\r\n\t\t\tv.insert(v.begin()+i,line(0,0));\r\n\t\t\tu.insert(u.begin()+i+1,x+B);\r\n\t\t\tv[i+1].shift(B);\r\n\t\t\ti+=1;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif(tur==v.size()&&i==v.size()-1){\r\n\t\t\tx=u.back(),tur--;\r\n\t\t\tu[i]+=A,u[i+1]+=B;\r\n\t\t\tu.insert(u.begin()+i,x+A);\r\n\t\t\tv.insert(v.begin()+i,line(0,0));\r\n\t\t\tv[i].shift(A);\r\n\t\t\ti+=1;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif(i<tur)u[i]+=A,v[i].shift(A);\r\n\t\telse if(i>tur)u[i+1]+=B,v[i].shift(B);\r\n\t\telse{\r\n\t\t\tu[i]+=A,u[i+1]+=B;\r\n\t\t\tu.insert(u.begin()+i+1,x+A);\r\n\t\t\tu.insert(u.begin()+i+2,x+B);\r\n\t\t\tv.insert(v.begin()+i+1,line(0,0));\r\n\t\t\tv.insert(v.begin()+i+2,v[i]);\r\n\t\t\tv[i].shift(A);\r\n\t\t\tv[i+2].shift(B);\r\n\t\t\ti+=2;\r\n\t\t}\r\n\t}\r\n\tint i=0;while(i<u.size()&&cmp(u[u.size()-i-1]-m)==1)i++;\r\n//\tfor(auto i:u)printf(\"%lf \",i);puts(\"\");\r\n\tu[u.size()-i]=m;u.erase(u.end()-i+1,u.end()),v.erase(v.end()-i+1,v.end());\r\n//\tfor(int i=0;i<v.size();i++)printf(\"%.2lf[%.2lfx+%.2lf]\",u[i],v[i].k,v[i].b);printf(\"%.2lf\\n\",u.back());\r\n}\r\nvoid ADD(line p){for(auto&i:v)i+=p;}\r\ndouble pos(){\r\n\tif(cmp(v[0].f[u[0]])==1)return u[0];\r\n\tif(cmp(v.bcak().f(u.back()))==-1)return u.back();\r\n\tfor(int i=0;i<v.size();i++)\r\n\t\tif(cmp(v[i].f((u[i+1])))!=-1&&cmp(v[i].f(u[i]))!=1)return v[i].rt();\r\n\tfor(int i=1;i+1<u.size();i++)if(cmp(v[i-1].f(u[i]))==-1&&cmp(v[i].f(u[i]))==1)return u[i];\r\n}\r\ndouble b[6010],res;\r\nint main(){\r\n\tscanf(\"%d%d%d%d\",&n,&m,&A,&B);\r\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&a[i]);\r\n\tv.emplace_back(a[1]);\r\n\tu.pb(1);u.pb(m);\r\n\tfor(int i=2;i<=n;i++){\r\n\t\tb[i-1]=pos();\r\n\t\tSHIFT();ADD(line(a[i]));\r\n\t}\r\n\tb[n]=pos();\r\n\tfor(int i=n;i>=2;i--){\r\n\t\tif(cmp(max(b[i]-B,1.0)-b[i-1])==1)b[i-1]=max(b[i]-B,1.0);\r\n\t\telse if(cmp(b[i-1]-max(b[i]-A,1.0))==1)b[i-1]=max(b[i]-A,1.0);\r\n\t}\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tprintf(\"%lf \",b[i]);\r\n\t\tres+=(b[i]-a[i])*(b[i]-a[i]);\r\n\t}printf(\"%\\n%lf\",res);\r\n}"
}