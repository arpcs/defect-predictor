{
    "id": 17130083,
    "contestId": 280,
    "creationTimeSeconds": 1459600656,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 280,
        "index": "E",
        "name": "Sequence Transformation",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "brute force",
            "data structures",
            "dp",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 280,
        "members": [
            {
                "handle": "freebsdx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1362929400
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 101,
    "timeConsumedMillis": 312,
    "memoryConsumedBytes": 2355200,
    "source": "#include <cstdio>\r\n#include <algorithm>\r\nusing namespace std;\r\nconst int N = 6006;\r\nconst double inf = 2e9;\r\ntypedef pair<double, double> data;\r\n#define x first\r\n#define y second\r\nint n, q, a, b, tot, k;\r\ndouble x[N], tmp, ans[N];\r\ndata c[N * 2];\r\n\r\nint main() {\r\n  scanf(\"%d%d%d%d\", &n, &q, &a, &b);\r\n  for (int i = 1; i <= n; i++) {\r\n    scanf(\"%lf\", &x[i]);\r\n    if (i == 1) {\r\n      c[tot++] = data(1, 2 * (1 - x[i]));\r\n      c[tot++] = data(inf, 2 * (inf - x[i]));\r\n      k = 0;\r\n    } else {\r\n      for (int j = tot - 1; j > k; j--) c[j + 2] = c[j];\r\n      tot += 2;\r\n      c[k + 1] = data(tmp, 0);\r\n      c[k + 2] = data(tmp, 0);\r\n      k++;\r\n      for (int j = 0; j <= k; j++) c[j].x += a;\r\n      for (int j = k + 1; j < tot; j++) c[j].x += b;\r\n      for (int j = 0; j < tot; j++) c[j].y += 2 * (c[j].x - x[i]);\r\n    }\r\n    if (c[0].y >= 0) {\r\n      k = -1;\r\n      tmp = c[0].x;\r\n    } else {\r\n      for (k = 0; k < tot; k++)\r\n        if (c[k].y <= 0 && c[k + 1].y > 0) break;\r\n      tmp = c[k].x - c[k].y / (c[k + 1].y - c[k].y) * (c[k + 1].x - c[k].x);\r\n    }\r\n    ans[i] = tmp;\r\n  }\r\n  ans[n] = min(ans[n], (double)q);\r\n  double sum = 0;\r\n  for (int i = n; i >= 2; i--)\r\n    ans[i - 1] = min(max(ans[i - 1], ans[i] - b), ans[i] - a);\r\n  for (int i = 1; i <= n; i++)\r\n    printf(\"%.9lf \", ans[i]), sum += (ans[i] - x[i]) * (ans[i] - x[i]);\r\n  printf(\"\\n%.9lf\\n\", sum);\r\n}\r\n"
}