{
    "id": 98165128,
    "contestId": 280,
    "creationTimeSeconds": 1605149947,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 280,
        "index": "E",
        "name": "Sequence Transformation",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "brute force",
            "data structures",
            "dp",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 280,
        "members": [
            {
                "handle": "little_waxberry"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1362929400
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 101,
    "timeConsumedMillis": 1934,
    "memoryConsumedBytes": 1433600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int maxn=6005;\r\nint n,a,b,m,len,nlen;\r\nclass Func{\r\npublic:\r\n\tlong double A,B,C;\r\n\tFunc():A(0),B(0),C(0){}\r\n\tFunc(long double _A,long double _B,long double _C):A(_A),B(_B),C(_C){}\r\n\tlong double mnpos(long double l,long double r)const{\r\n\t\tif(A==0)return l;\r\n\t\tlong double cp=-B/(2*A);\r\n\t\tif(cp>=l&&cp<=r)return cp;\r\n\t\telse if(cp>r)return r;\r\n\t\telse return l;\r\n\t}\r\n\tlong double getval(long double x)const{\r\n\t\treturn A*x*x+B*x+C;\r\n\t}\r\n\tFunc shift(long double dx)const{\r\n\t\treturn Func(A,B+2*A*dx,C+A*dx*dx+B*dx);\r\n\t}\r\n\tFunc operator+(const Func &o)const{\r\n\t\treturn Func(A+o.A,B+o.B,C+o.C);\r\n\t}\r\n};\r\nint q[maxn];\r\nlong double p[maxn],v[maxn];\r\ndouble x[maxn],y[maxn];\r\npair<long double,Func>val[maxn*2],nval[maxn*2];\r\n\r\nint main(){\r\n\tscanf(\"%d%d%d%d\",&n,&m,&a,&b);\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tscanf(\"%lf\",&x[i]);\r\n\t\tx[i]-=(i-1)*a;\r\n\t\tnlen=0;\r\n\t\tif(i>1){\r\n\t\t\tlong double l=1;\r\n\t\t\tfor(int j=1;j<=len;j++){\r\n\t\t\t\tlong double r=val[j].first;\r\n\t\t\t\tFunc &cur=val[j].second;\r\n\t\t\t\tif(j<q[i-1])nval[++nlen]=val[j];\r\n\t\t\t\telse if(q[i-1]<j)nval[++nlen]=make_pair(r+b-a,cur.shift(a-b));\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(p[i-1]>l)nval[++nlen]=make_pair(p[i-1],cur);\r\n\t\t\t\t\tnval[++nlen]=make_pair(p[i-1]+b-a,Func(0,0,v[i-1]));\r\n\t\t\t\t\tif(r>p[i-1])nval[++nlen]=make_pair(r+b-a,cur.shift(a-b));\r\n\t\t\t\t}\r\n\t\t\t\tl=r;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse nval[++nlen]=make_pair(m,Func(0,0,0));\r\n\t\tlen=nlen;\r\n\t\tfor(int i=1;i<=len;i++)val[i]=nval[i];\r\n\t\twhile(len>=2&&val[len-1].first>=m-(i-1)*a)len--;\r\n\t\tval[len].first=min(val[len].first,(long double)(m-(i-1)*a));\r\n\t\tv[i]=1e25;\r\n\t\tlong double l=1;\r\n\t\tfor(int j=1;j<=len;j++){\r\n\t\t\tlong double r=val[j].first;\r\n\t\t\tFunc &cur=val[j].second;\r\n\t\t\tcur=cur+Func(1,-2*x[i],x[i]*x[i]);\r\n\t\t\tlong double cp=cur.mnpos(l,r);\r\n\t\t\tif(cur.getval(cp)<v[i])\r\n\t\t\t\tv[i]=cur.getval(cp),p[i]=cp,q[i]=j;\r\n\t\t\tl=r;\r\n\t\t}\r\n\t}\r\n\tlong double cp=p[n];\r\n\tfor(int i=n;i>=1;i--){\r\n\t\ty[i]=cp+(i-1)*a;\r\n\t\tif(i>1){\r\n\t\t\tif(cp>=p[i-1]&&cp-p[i-1]<=b-a)cp=p[i-1];\r\n\t\t\telse if(cp>p[i-1])cp-=b-a;\r\n\t\t}\r\n\t}\r\n\tfor(int i=1;i<=n;i++)printf(\"%.10lf%c\",y[i],i==n?'\\n':' ');\r\n\tprintf(\"%.10lf\\n\",double(v[n]));\r\n\treturn 0;\r\n}"
}