{
    "id": 24669785,
    "contestId": 280,
    "creationTimeSeconds": 1487075656,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 280,
        "index": "E",
        "name": "Sequence Transformation",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "brute force",
            "data structures",
            "dp",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 280,
        "members": [
            {
                "handle": "jzymts"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1362929400
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 101,
    "timeConsumedMillis": 1684,
    "memoryConsumedBytes": 3584000,
    "source": "#include<cstdio>\r\n#include<cstring>\r\n#include<algorithm>\r\nusing namespace std;\r\n\r\nconst int maxn=7010;\r\n\r\nstruct f_nd{\r\n\tdouble a,b,c,l,r;\r\n\r\n\tvoid add(double t){\r\n\t\tl+=t;\r\n\t\tr+=t;\r\n\t\tdouble aa=a;\r\n\t\tdouble bb=b-2.0*a*t;\r\n\t\tdouble cc=c+t*(a*t-b);\r\n\t\ta=aa,b=bb,c=cc;\r\n\t}\r\n\r\n\tdouble f(double x){\r\n\t\treturn a*x*x+b*x+c;\r\n\t}\r\n\r\n\tdouble mn_pos(){\r\n\t\tdouble x=-0.5*b/a;\r\n\t\tif(x>=l&&x<=r) return x;\r\n\t\tif(x<l) return l;\r\n\t\telse return r;\r\n\t}\r\n}seg[2][maxn*2];\r\n\r\nint n,q,a,b,cnt[maxn],pos[maxn];\r\ndouble pp[maxn],x[maxn],ww[maxn];\r\n\r\nvoid print(int k,double k_pos){\r\n\tif(k){\r\n\t\tdouble cur=pp[k-1];\r\n\t\tif(k_pos<cur+a) print(k-1,k_pos-a);\r\n\t\telse{\r\n\t\t\tif(k_pos>cur+b) print(k-1,k_pos-b);\r\n\t\t\telse print(k-1,cur);\r\n\t\t}\r\n\t}\r\n\tww[k]=k_pos;\r\n\tprintf(\"%.10lf \",k_pos);\r\n}\r\n\r\nint main(){\r\n#ifndef ONLINE_JUDGE\r\n\tfreopen(\"a.in\",\"r\",stdin);\r\n\tfreopen(\"a.out\",\"w\",stdout);\r\n#endif\r\n\tscanf(\"%d%d%d%d\",&n,&q,&a,&b);\r\n\tfor(int i=0; i<n; ++i) scanf(\"%lf\",x+i);\r\n\tseg[0][cnt[0]++]=(f_nd){1.0,-2.0*x[0],1.0*x[0]*x[0],1.0,q};\r\n\tpos[0]=0;\r\n\tpp[0]=seg[0][pos[0]].mn_pos();\r\n\tbool t=0;\r\n\tfor(int i=1; i<n; ++i){\r\n\t\tt^=1;\r\n\t\tfor(int j=0; j<pos[i-1]; ++j){\r\n\t\t\tseg[t][cnt[i]]=seg[t^1][j];\r\n\t\t\tseg[t][cnt[i]].add(a);\r\n\t\t\tseg[t][cnt[i]].l=max(seg[t][cnt[i]].l,1.0);\r\n\t\t\tseg[t][cnt[i]].r=min(seg[t][cnt[i]].r,1.0*q);\r\n\t\t\tif(seg[t][cnt[i]].l<seg[t][cnt[i]].r) ++cnt[i];\r\n\t\t}\r\n\t\tdouble cur=seg[t^1][pos[i-1]].mn_pos();\r\n\t\tdouble val=seg[t^1][pos[i-1]].f(cur);\r\n\t\tseg[t][cnt[i]]=seg[t^1][pos[i-1]];\r\n\t\tseg[t][cnt[i]].add(a);\r\n\t\tseg[t][cnt[i]].l=max(seg[t][cnt[i]].l,1.0);\r\n\t\tseg[t][cnt[i]].r=min(seg[t][cnt[i]].r,1.0*q);\r\n\t\tif(seg[t][cnt[i]].l<seg[t][cnt[i]].r) ++cnt[i];\r\n\t\tseg[t][cnt[i]]=(f_nd){0,0,val,cur+a,cur+b};\r\n\t\tseg[t][cnt[i]].l=max(seg[t][cnt[i]].l,1.0);\r\n\t\tseg[t][cnt[i]].r=min(seg[t][cnt[i]].r,1.0*q);\r\n\t\tif(seg[t][cnt[i]].l<seg[t][cnt[i]].r) ++cnt[i];\r\n\t\tseg[t][cnt[i]]=seg[t^1][pos[i-1]];\r\n\t\tseg[t][cnt[i]].add(b);\r\n\t\tseg[t][cnt[i]].l=max(seg[t][cnt[i]].l,1.0);\r\n\t\tseg[t][cnt[i]].r=min(seg[t][cnt[i]].r,1.0*q);\r\n\t\tif(seg[t][cnt[i]].l<seg[t][cnt[i]].r) ++cnt[i];\r\n\t\tfor(int j=pos[i-1]+1; j<cnt[i-1]; ++j){\r\n\t\t\tseg[t][cnt[i]]=seg[t^1][j];\r\n\t\t\tseg[t][cnt[i]].add(b);\r\n\t\t\tseg[t][cnt[i]].l=max(seg[t][cnt[i]].l,1.0);\r\n\t\t\tseg[t][cnt[i]].r=min(seg[t][cnt[i]].r,1.0*q);\r\n\t\t\tif(seg[t][cnt[i]].l<seg[t][cnt[i]].r) ++cnt[i];\r\n\t\t}\r\n\t\tpos[i]=-1;\r\n\t\tdouble ans;\r\n\t\tfor(int j=0; j<cnt[i]; ++j){\r\n\t\t\tseg[t][j].a+=1;\r\n\t\t\tseg[t][j].b-=2.0*x[i];\r\n\t\t\tseg[t][j].c+=1.0*x[i]*x[i];\r\n\t\t\tdouble cur=seg[t][j].mn_pos();\r\n\t\t\tdouble val=seg[t][j].f(cur);\r\n\t\t\tif(pos[i]==-1||val<ans) ans=val,pos[i]=j;\r\n\t\t}\r\n\t\tpp[i]=seg[t][pos[i]].mn_pos();\r\n\t}\r\n\tprint(n-1,pp[n-1]);\r\n\tdouble ans=0;\r\n\tfor(int i=0; i<n; ++i) ans+=(x[i]-ww[i])*(x[i]-ww[i]);\r\n\tprintf(\"\\n%.10lf\\n\",ans);\r\n\treturn 0;\r\n}\r\n"
}