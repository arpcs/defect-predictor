{
    "id": 208052440,
    "contestId": 280,
    "creationTimeSeconds": 1685620850,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 280,
        "index": "E",
        "name": "Sequence Transformation",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "brute force",
            "data structures",
            "dp",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 280,
        "members": [
            {
                "handle": "CC2021zyz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1362929400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 101,
    "timeConsumedMillis": 2558,
    "memoryConsumedBytes": 2457600,
    "source": "// LUOGU_RID: 111767842\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll int\r\n#define mp make_pair\r\n#define inf (ll)1e9\r\n#define pii pair <ll, ll>\r\n#define fr first\r\n#define se second\r\n#define double long double\r\nconst ll mod = 1e9 + 7;\r\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\r\n#define getchar() (p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1 << 18, stdin), p1 == p2) ? EOF : *p1++)\r\ninline ll read() {\r\n\tll x = 0, f = 1;\r\n\tchar ch = getchar();\r\n\twhile(ch < '0' || ch > '9') f = ((ch == '-') ? -1 : f), ch = getchar();\r\n\twhile(ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar();\r\n\treturn x * f;\r\n}\r\ninline void write(ll x) {\r\n\tif(x < 0) x = -x, putchar('-');\r\n\tif(x >= 10) write(x / 10);\r\n\tputchar(x % 10 + '0');\r\n}\r\nll n, m, A, B;\r\ndouble a[6005], b[6005], d[6005], suf[6005];\r\nconst double eps = 1e-5;\r\nint main() {\r\n//\tfreopen(\"anxious.in\", \"r\", stdin);\r\n//\tfreopen(\"anxious.out\", \"w\", stdout);\r\n\tn = read(), m = read(), A = read(), B = read();\r\n\tfor(ll i = 1; i <= n; i++) a[i] = read();\r\n\tdouble lst = m - (1.0 + 1.0 * (n - 1) * A);\r\n\td[1] = 1;\r\n\tfor(ll i = 2; i <= n; i++) d[i] = A;\r\n\twhile(lst) {\r\n\t\tfor(ll i = 1; i <= n; i++) b[i] = b[i-1] + d[i];//, printf(\"?? %f\\n\", b[i]);\r\n\t\tfor(ll i = n; i >= 1; i--) suf[i] = suf[i+1] + b[i] - a[i];\r\n\t\tll pos = 1;\r\n\t\tfor(ll i = 2; i <= n; i++) if((i == 1 || d[i] + eps < B)) if(pos == -1 || suf[pos] + eps >= suf[i]) pos = i;\r\n//\t\tfor(ll i = 2; i <= n; i++) if(d[i] + eps < B && suf[pos] + eps >= suf[i]) pos = i;\r\n\t\tif(suf[pos] >= 0) break;\r\n\t\tdouble dlt = min(lst, -suf[pos] / (n - pos + 1));\r\n\t\tif(pos != 1) dlt = min(dlt, B - d[pos]);\r\n\t\tfor(ll i = pos + 1; i <= n; i++) if(d[i] + eps < B) dlt = min(dlt, (suf[i] - suf[pos]) / (i - pos));\r\n\t\td[pos] += dlt, lst -= dlt;\r\n\t}\r\n\tdouble Ans = 0;\r\n\tfor(ll i = 1; i <= n; i++) b[i] = b[i-1] + d[i], Ans += (a[i] - b[i]) * (a[i] - b[i]), printf(\"%.10Lf \", b[i]);\r\n\tputchar('\\n');\r\n\tprintf(\"%.10Lf\\n\", Ans);\r\n\treturn 0;\r\n}\r\n/*\r\n*/"
}