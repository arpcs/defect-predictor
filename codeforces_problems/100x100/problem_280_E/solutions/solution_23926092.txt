{
    "id": 23926092,
    "contestId": 280,
    "creationTimeSeconds": 1484754597,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 280,
        "index": "E",
        "name": "Sequence Transformation",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "brute force",
            "data structures",
            "dp",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 280,
        "members": [
            {
                "handle": "FizzyDavid"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1362929400
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 2560000,
    "source": "//by yjz\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\ndouble ex[6011],o[6011],ans[6011];\r\nstruct QuadraticFunction\r\n{\r\n\tint n;\r\n\tdouble pt[12011],a[12011],b[12011],c[12011],tmp;\r\n\tvoid set(int i,double A,double B,double C){a[i]=A;b[i]=B;c[i]=C;}\r\n\tvoid add(double na,double nb,double nc){for(int i=0;i<n;i++)a[i]+=na,b[i]+=nb,c[i]+=nc;}\r\n\tdouble qmn(int i)\r\n\t{\r\n\t\tdouble x=-b[i]/(2*a[i]);\r\n\t\tif(i+1<n)x=min(x,pt[i]);\r\n\t\tif(i>0)x=max(x,pt[i-1]);\r\n\t\ttmp=x;\r\n\t\treturn a[i]*x*x+b[i]*x+c[i];\r\n\t}\r\n\tint mni;\r\n\tdouble mn,mnx;\r\n\tvoid query()\r\n\t{\r\n\t\tmn=qmn(0);mnx=0;mnx=tmp;\r\n\t\tfor(int i=1;i<n;i++)\r\n\t\t{\r\n\t\t\tdouble t=qmn(i);\r\n\t\t\tif(t<mn)mn=t,mni=i,mnx=tmp;\r\n\t\t}\r\n\t}\r\n\tvoid minimize(int dlt)\r\n\t{\r\n\t\tquery();\r\n\t\tn+=2;\r\n\t\tfor(int i=n-1;i>=mni+2;i--)pt[i]=pt[i-2],a[i]=a[i-2],b[i]=b[i-2],c[i]=c[i-2];\r\n\t\tfor(int i=0;i<=mni;i++)\r\n\t\t{\r\n\t\t\tpt[i]-=dlt;\r\n\t\t\tc[i]+=b[i]*dlt+a[i]*dlt*dlt;\r\n\t\t\tb[i]+=2*a[i]*dlt;\r\n\t\t}\r\n\t\tpt[mni]=mnx-dlt;\r\n\t\tpt[mni+1]=mnx;\r\n\t\ta[mni+1]=0;b[mni+1]=0;c[mni+1]=mn;\r\n\t}\r\n\tvoid shift(int dlt)\r\n\t{\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tpt[i]-=dlt;\r\n\t\t\tc[i]+=b[i]*dlt+a[i]*dlt*dlt;\r\n\t\t\tb[i]+=2*a[i]*dlt;\r\n\t\t}\r\n\t}\r\n\tvoid out()\r\n\t{\r\n\t\tcout<<\"n=\"<<n<<endl;\r\n\t\tfor(int i=0;i+1<n;i++)cout<<pt[i]<<\" \";cout<<endl;\r\n\t\tfor(int i=0;i<n;i++)cout<<a[i]<<\",\"<<b[i]<<\",\"<<c[i]<<endl;\r\n\t}\r\n}kotori;\r\nint main()\r\n{\r\n\tint n,q,a,b;\r\n\tscanf(\"%d%d%d%d\",&n,&q,&a,&b);\r\n\tb=min(b,n/(q-1)+9);\r\n\tkotori.n=2;\r\n\tkotori.set(0,0,0,1e100);\r\n\tkotori.set(1,0,0,0);\r\n\tkotori.pt[0]=1;\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tint x;\r\n\t\tscanf(\"%d\",&x);\r\n\t\to[i]=x;\r\n\t\tif(i>1)\r\n\t\t{\r\n\t\t\tkotori.shift(-b);\r\n\t\t\tkotori.minimize(b-a);\r\n\t\t}\r\n\t\tkotori.add(1,-2*x,x*x);\r\n\t\tkotori.query();\r\n\t\tex[i]=kotori.mnx;\r\n\t}\r\n\tdouble p=max(1.0,min(ex[n],1.0*q)),sum=0;\r\n\tfor(int i=n;i>=1;i--)\r\n\t{\r\n\t\tans[i]=p;\r\n\t\tsum+=(p-o[i])*(p-o[i]);\r\n\t\tp=max(p-b,min(p-a,ex[i-1]));\r\n\t}\r\n\tfor(int i=1;i<=n;i++)printf(\"%.6lf \",ans[i]);puts(\"\");\r\n\tprintf(\"%.6lf\\n\",sum);\r\n\treturn 0;\r\n}"
}