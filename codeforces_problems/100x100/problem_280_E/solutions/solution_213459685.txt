{
    "id": 213459685,
    "contestId": 280,
    "creationTimeSeconds": 1689143759,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 280,
        "index": "E",
        "name": "Sequence Transformation",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "brute force",
            "data structures",
            "dp",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 280,
        "members": [
            {
                "handle": "jeff_qi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1362929400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 101,
    "timeConsumedMillis": 186,
    "memoryConsumedBytes": 614400,
    "source": "#include<bits/stdc++.h>\r\n#define ll long long\r\n#define vi vector<int>\r\n#define vll vector<ll>\r\n#define eb emplace_back\r\n#define pb push_back\r\n#define all(v) v.begin(),v.end()\r\n#define rall(v) v.rbegin(),v.rend()\r\n#define sz(v) ((int)v.size())\r\n#define pii pair<int,int>\r\n#define pll pair<ll,ll>\r\n#define fi first\r\n#define se second\r\n#define umap unordered_map\r\n#define uset unordered_set\r\n#define mset multiset\r\nusing namespace std;\r\nnamespace qiqi {\r\n\tconst double eps = 1e-8;\r\n\tint cmp(double x) {\r\n\t\treturn x > eps ? 1 : (x < -eps ? -1 : 0);\r\n\t}\r\n\tvoid main() {\r\n\t\tint n,m,a,b;\r\n\t\tcin >> n >> m >> a >> b;\r\n\t\tm -= (n-1)*a+1; b -= a;\r\n\t\tvector<double> p(n),q(n);\r\n\t\tvector<array<double,2>> vec;\r\n\t\tvec.push_back({0,0});\r\n\t\tif (m != 0) {\r\n\t\t\tvec.push_back({(double)m,0});\r\n\t\t}\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tcin >> p[i];\r\n\t\t\tp[i] -= i*a+1;\r\n\t\t\tfor (auto &[x,y]:vec) {\r\n\t\t\t\ty += 2*(x-p[i]);\r\n\t\t\t}\r\n\t\t\tint pos = sz(vec);\r\n\t\t\tq[i] = vec.back()[0];\r\n\t\t\tfor (int j = 0; j < sz(vec); j++) {\r\n\t\t\t\tif (cmp(vec[j][1]) == 1) {\r\n\t\t\t\t\tif (j == 0 || cmp(vec[j][0]-vec[j-1][0]) == 0) {\r\n\t\t\t\t\t\tq[i] = vec[j][0];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tq[i] = vec[j-1][0]-vec[j-1][1]*(vec[j][0]-vec[j-1][0])/(vec[j][1]-vec[j-1][1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpos = j;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (b) {\r\n\t\t\t\tvec.insert(vec.begin()+pos,{q[i],0});\r\n\t\t\t\tvec.insert(vec.begin()+pos,{q[i],0});\r\n\t\t\t\tfor (int j = pos+1; j < sz(vec); j++) {\r\n\t\t\t\t\tvec[j][0] += b;\r\n\t\t\t\t}\r\n\t\t\t\twhile (sz(vec) > 1 && vec.back()[0] > m) {\r\n\t\t\t\t\tif (vec[sz(vec)-2][0] > m) {\r\n\t\t\t\t\t\tvec.pop_back();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdouble k = (vec.back()[1]-vec[sz(vec)-2][1])/(vec.back()[0]-vec[sz(vec)-2][0]);\r\n\t\t\t\t\t\tvec.back() = {(double)m,vec[sz(vec)-2][1]+(m-vec[sz(vec)-2][0])*k};\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (int i = n-2; i >= 0; i--) {\r\n\t\t\tif (q[i] > q[i+1]) {\r\n\t\t\t\tq[i] = q[i+1];\r\n\t\t\t}\r\n\t\t\tif (q[i] < q[i+1]-b) {\r\n\t\t\t\tq[i] = q[i+1]-b;\r\n\t\t\t}\r\n\t\t}\r\n\t\tdouble ans = 0;\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tans += (p[i]-q[i])*(p[i]-q[i]);\r\n\t\t\tq[i] += i*a+1; cout << q[i] << \" \\n\"[i == n-1];\r\n\t\t}\r\n\t\tcout << ans << '\\n';\r\n\t}\r\n}\r\nint main() {\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(nullptr);\r\n\r\n\tcout << fixed << setprecision(10);\r\n\tqiqi::main();\r\n\treturn 0;\r\n}"
}