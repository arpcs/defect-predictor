{
    "id": 36114422,
    "contestId": 949,
    "creationTimeSeconds": 1520597161,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 949,
        "index": "D",
        "name": "Curfew",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 949,
        "members": [
            {
                "handle": "Lollipop"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1520583000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 2764800,
    "source": "#include <bits/stdc++.h>\n\n#define pb push_back\n#define mp make_pair\n#define F first\n#define S second\n\nusing namespace std;\n\nusing ll = long long;\nusing ld = long double;\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    ll n, d, k;\n    cin >> n >> d >> k;\n    vector<int> v(n);\n    for (int i = 0; i < n; ++i) {\n        cin >> v[i];\n    }\n    vector<int> pref(n);\n    pref[0] = v[0];\n    for (int i = 1; i < n; ++i) {\n        pref[i] = v[i] + pref[i - 1];\n    }\n    int a = 0;\n    int b = 0;\n    int j = 0;\n    int up = 0;\n    for (int i = 0; i < n / 2 + n % 2; ++i) {\n        if (pref[min(n - 1, i + d * (i + 1))] - up >= k) {\n            up += k;\n            int temp = k;\n            while (temp != 0) {\n                if (v[j] >= temp) {\n                    v[j] -= temp;\n                    temp = 0;\n                } else {\n                    temp -= v[j];\n                    v[j] = 0;\n                    ++j;\n                }\n            }\n        } else {\n            ++a;\n        }\n    }\n    for (int i = n / 2 + n % 2; i < n; ++i) {\n        while (j < i - (n - i) * d) {\n            up += v[j];\n            v[j] = 0;\n            ++j;\n        }\n        if (pref[n - 1] - up >= k) {\n            up += k;\n            int temp = k;\n            while (temp != 0) {\n                if (v[j] >= temp) {\n                    v[j] -= temp;\n                    temp = 0;\n                } else {\n                    temp -= v[j];\n                    v[j] = 0;\n                    ++j;\n                }\n            }\n        } else {\n            ++b;\n        }\n    }\n    cout << max(a, b) << endl;\n    return 0;\n}"
}