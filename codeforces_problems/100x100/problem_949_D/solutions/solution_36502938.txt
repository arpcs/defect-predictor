{
    "id": 36502938,
    "contestId": 949,
    "creationTimeSeconds": 1521723544,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 949,
        "index": "D",
        "name": "Curfew",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 949,
        "members": [
            {
                "handle": "Lynstery"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1520583000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 4505600,
    "source": "#include<cstdio>\r\n#include<algorithm>\r\nusing namespace std;\r\nconst int maxn=100005;\r\nint n,D,B,ans=1e9,a[maxn],b[maxn],c[maxn],res1,res2,res;\r\nbool check(int mid){\r\n  int now=mid;\r\n  for(int i=1;i<=n;i++) c[i]=a[i], b[i]=0;\r\n  for(int i=1;i<=n&&now;i++){\r\n    int t=min(now,c[i]); now-=t; c[i]-=t; b[i]+=t;\r\n  }\r\n  int sum; res1=0,res2=0;\r\n  sum=b[1];\r\n  for(int i=1,lst=1;i<=(n+1)/2;i++){\r\n    while(lst<n&&lst+1-i*D<=i) sum+=b[++lst];\r\n    if(sum<B) b[i+1]+=b[i], b[i]=0, res1++;\r\n    else if(b[i]>=B) b[i+1]+=b[i]-B, b[i]=B, sum-=B;\r\n    else b[lst]+=b[i]-B, b[i]=B, sum-=B;\r\n  }\r\n  sum=c[n];\r\n  for(int i=n,lst=n;i>=(n+1)/2+1;i--){\r\n    while(lst>1&&lst-1+(n-i+1)*D>=i) sum+=c[--lst];\r\n    if(sum<B) c[i-1]+=c[i], c[i]=0, res2++;\r\n    else if(c[i]>=B) c[i-1]+=c[i]-B, c[i]=B, sum-=B;\r\n    else c[lst]+=c[i]-B, c[i]=B, sum-=B;\r\n  }\r\n  ans=min(ans,max(res1,res2));\r\n  return res1>=res2;\r\n}\r\nint main(){\r\n  scanf(\"%d%d%d\",&n,&D,&B);\r\n  for(int i=1;i<=n;i++) scanf(\"%d\",&a[i]);\r\n  int L=0,R=n*B;\r\n  while(L<=R){\r\n    int mid=(L+R)>>1;\r\n    if(check(mid)) res=mid, L=mid+1; else R=mid-1;\r\n  }\r\n  if(res<n*B) check(res+1); \r\n  printf(\"%d\\n\",ans);\r\n  return 0;\r\n}\r\n"
}