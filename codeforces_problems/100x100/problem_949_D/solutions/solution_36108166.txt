{
    "id": 36108166,
    "contestId": 949,
    "creationTimeSeconds": 1520589427,
    "relativeTimeSeconds": 6427,
    "problem": {
        "contestId": 949,
        "index": "D",
        "name": "Curfew",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 949,
        "members": [
            {
                "handle": "Merkurev"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 20,
        "startTimeSeconds": 1520583000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 61,
    "memoryConsumedBytes": 3276800,
    "source": "#include <iostream>\n#include <vector>\n#include <cstdio>\n#include <algorithm>\n#include <set>\n#include <map>\n#include <cassert>\n#include <numeric>\n#include <string>\n#include <cstring>\n#include <cmath>\nusing namespace std;\n\n#ifdef LOCAL\n\t#define eprintf(...) fprintf(stderr, __VA_ARGS__)\n#else\n\t#define eprintf(...) 42\n#endif\n\ntypedef long long int int64;\n\nconst int N = (int) 1e5 + 100;\nint a[N], x[N];\nint need[N];\nint n, d, b;\n\nbool check()\n{\n    for (int i = 0; i < n; i++)\n        x[i] = a[i];\n    int m = (n + 1) / 2;\n    int pos = 0;\n    for (int i = 0; i < m; i++)\n    {\n        while (true)\n        {\n            int q = min(x[pos], need[i] );\n            x[pos] -= q;\n            need[i] -= q;\n\n            if (q > 0)\n            {\n                int dst = abs(pos - i);\n                int t = (dst + d - 1) / d;\n                if (t > i + 1) return false;\n            }\n\n            if (need[i] > 0) pos++;\n            else break;\n\n        }\n    }\n    pos = n - 1;\n    for (int i = n - 1; i >= m; i--)\n    {\n        while (true)\n        {\n            int q = min(x[pos], need[i] );\n            x[pos] -= q;\n            need[i] -= q;\n\n            if (q > 0)\n            {\n                int dst = abs(pos - i);\n                int t = (dst + d - 1) / d;\n                if (t > (n - 1 - i) + 1) return false;\n            }\n            \n            if (need[i] > 0) pos--;\n            else break;\n        }\n    }\n    return true;\n}\n\n\nint main(int , char *[] )\n{\n#ifdef LOCAL\n//\tfreopen(\"input.txt\", \"r\", stdin);\n#endif\n\n    scanf(\"%d%d%d\", &n, &d, &b);\n    for (int i = 0; i < n; i++)\n        scanf(\"%d\", &a[i] );\n\n    int bl = -1, br = (n + 1) / 2;\n    while (br - bl > 1)\n    {\n        int i = (bl + br) / 2;\n\n        int l = i;\n        int r = n - i - 1;\n        memset(need, 0, sizeof need);\n        for (int it = l; it <= r; it++)\n            need[it] = b;\n        if (check() )\n            br = i;\n        else\n            bl = i;\n    }\n    printf(\"%d\\n\", br);\n\treturn 0;\n}\n"
}