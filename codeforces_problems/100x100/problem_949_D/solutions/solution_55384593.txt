{
    "id": 55384593,
    "contestId": 949,
    "creationTimeSeconds": 1560130149,
    "relativeTimeSeconds": 5769,
    "problem": {
        "contestId": 949,
        "index": "D",
        "name": "Curfew",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 949,
        "members": [
            {
                "handle": "pwild"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1560124380
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 3174400,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<ll> vl;\ntypedef vector<vl> vvl;\ntypedef pair<ll,ll> pll;\ntypedef vector<bool> vb;\nconst ll oo = 0x3f3f3f3f3f3f3f3f;\nconst double eps = 1e-9;\n#define sz(c) ll((c).size())\n#define all(c) begin(c), end(c)\n#define FOR(i,a,b) for (ll i = (a); i < (b); i++)\n#define FORD(i,a,b) for (ll i = (b)-1; i >= (a); i--)\n#define mp make_pair\n#define pb push_back\n#define eb emplace_back\n#define xx first\n#define yy second\n#define TR(X) ({ if(1) cerr << \"TR: \" << (#X) << \" = \" << (X) << endl; })\n\nint main() {\n\tios_base::sync_with_stdio(false);\n\tcin.tie(NULL);\n\t\n\tll n, d, r;\n\tcin >> n >> d >> r;\n\tvl a(n);\n\tFOR(i,0,n) cin >> a[i];\n\t\n\tvl left(n), right(n);\n\tFOR(i,0,n) {\n\t\tif (i > 0) left[i] = left[i-1];\n\t\twhile (left[i] < i && (i-left[i]+d-1)/d > left[i]+1) left[i]++;\n\t}\n\tFOR(i,0,n) right[i] = n-1-left[n-i-1];\n\t\n\t//FOR(i,0,n) cout << left[i] << \" \";\n\t//cout << endl;\n\n\tll xmin = -1, xmax = n/2;\n\twhile (xmax-xmin > 1) {\n\t\tll x = (xmin+xmax)/2;\n\n\t\tvl have = a;\n\n\t\tll j = 0;\n\t\tbool ok = true;\n\t\tFOR(i,x,n-x) {\n\t\t\tll need = r;\n\t\t\twhile (need > 0) {\n\t\t\t\twhile (j < n && right[j] < i) j++;\n\t\t\t\twhile (j < n && have[j] == 0) j++;\n\t\t\t\t\n\t\t\t\tif (j == n || left[j] > i) {\n\t\t\t\t\tok = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tll take = min(have[j],need);\n\t\t\t\tneed -= take;\n\t\t\t\thave[j] -= take;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (ok) xmax = x; else xmin = x;\n\t}\n\tcout << xmax << endl;\n}\n\n"
}