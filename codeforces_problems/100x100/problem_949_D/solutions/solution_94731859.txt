{
    "id": 94731859,
    "contestId": 949,
    "creationTimeSeconds": 1601868096,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 949,
        "index": "D",
        "name": "Curfew",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 949,
        "members": [
            {
                "handle": "RealMikeDuke"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1520583000
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 1638400,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define M 100005\r\n#define int long long\r\n\r\nint n, d, b, mid;\r\nint a[M], sum[M];\r\n\r\ninline int read()\r\n{\r\n\tint x = 0, f = 1; char ch = getchar();\r\n\twhile (!isdigit(ch)) { if (ch == '-') f = -1; ch = getchar(); }\r\n\twhile (isdigit(ch)) { (x *= 10) += ch - '0'; ch = getchar(); }\r\n\treturn x * f;\r\n}\r\n\r\nsigned main()\r\n{\r\n\tn = read(), d = read(), b = read(); mid = (n + 1) / 2;\r\n\tfor (int i = 1; i <= n; i++)\r\n\t\ta[i] = read(), sum[i] = sum[i-1] + a[i];\r\n\r\n\tint avil = 0, avir = 0;\r\n\tfor (int i = 1; i <= mid; i++)\r\n\t\tif (sum[min(i*(d+1), n)] - b * avil >= b)\r\n\t\t\tavil++;\r\n\t\t\t\r\n\tfor (int i = n; i >= mid + 1; i--)\r\n\t\tif (sum[n] - sum[max(0ll, n - (n-i+1)*(d+1))] - b * avir >= b)\r\n\t\t\tavir++;\r\n\t\r\n\tcout << max(mid - avil, n - mid - avir);\r\n\r\n\treturn 0;\r\n}"
}