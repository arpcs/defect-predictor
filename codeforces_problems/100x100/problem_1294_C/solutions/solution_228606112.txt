{
    "id": 228606112,
    "contestId": 1294,
    "creationTimeSeconds": 1697576561,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1294,
        "index": "C",
        "name": "Product of Three Numbers",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1294,
        "members": [
            {
                "handle": "Zena.FA"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1579703700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 15667200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define F first\r\n#define S second\r\n#define yes cout<<\"YES\"<<endl;\r\n#define no cout<<\"NO\"<<endl;\r\n#define t int t; cin>>t; while(t--)\r\n#define what(x) cout<<#x<<\"  :  \" <<x<<\"\\n\";\r\n#define IOS ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\ntypedef long long ll;\r\nconst ll mod = 1e9+7;\r\nconst ll inf = 1LL<<30;\r\nconst ll N =  2e5+10;\r\nfloat sqt= 1.4142135624;\r\ndouble pi=3.14159265;\r\nll a[N],n;\r\nint prime[100010];\r\nvector < ll > vprime; /// if you need prime factorization use long long\r\nmap < ll, ll  > primefact;\r\nvoid sieve ()\r\n{\r\n    prime[1] = 1;\r\n    for(int i=2; i<1e5; i++)\r\n        if(!prime[i])\r\n        {\r\n            vprime.push_back(i);\r\n            for(int j=i+i; j<1e5; j+=i)\r\n                prime[j] = 1;\r\n        }\r\n}\r\n\r\nint main()\r\n{\r\n    IOS\r\n    t\r\n    {\r\n        sieve();\r\n        ll x;\r\n        cin >> x;\r\n        primefact.clear();\r\n        /// prime factorization\r\n        for(auto p : vprime)\r\n        {\r\n            while(!(x%p)) primefact[p] ++, x /= p;\r\n            if(x < p*p)\r\n            {\r\n                if(x != 1) primefact[x]++;\r\n/// x <= 1e10\r\n//        primefact[x]++;\r\n                break;\r\n            }\r\n        }\r\n        bool f=1;\r\n        vector < ll > vans;\r\n        for(auto y : primefact)\r\n        {\r\n            vans.push_back(y.F);\r\n        }\r\n\r\n        if(vans.size()==3)\r\n        {\r\n            yes\r\n            for(auto l:vans)\r\n                cout<<pow(l,primefact[l])<<\" \";\r\n                cout<<endl;\r\n        }\r\n        else if (vans.size()==2)\r\n        {\r\n            if(primefact[vans[0]]>=3)\r\n            {\r\n                yes\r\n                cout<<vans[0]<<\" \";\r\n                primefact[vans[0]]--;\r\n                cout<<pow(vans[0],primefact[vans[0]])<<\" \"<<pow(vans[1],primefact[vans[1]])<<endl;\r\n\r\n            }\r\n                      else if (primefact[vans[1]]>=3)\r\n            {\r\n                yes\r\n                cout<<vans[1]<<\" \";\r\n                primefact[vans[1]]--;\r\n                cout<<pow(vans[1],primefact[vans[1]])<<\" \"<<pow(vans[0],primefact[vans[0]])<<endl;\r\n            }\r\n                      else if(primefact[vans[0]]>=2&&primefact[vans[1]]>=2)\r\n                        {\r\n\r\n                        cout<<vans[0]*vans[1]<<\" \"<<pow(vans[0],primefact[vans[0]]-1)<<\" \"<<pow(vans[1],primefact[vans[0]]-1)<<endl;\r\n\r\n                      }\r\n\r\n            }\r\n        else {\r\n\r\n            if(primefact[vans[0]]>=6)\r\n            {\r\n                yes\r\n                cout<<vans[0]<<\" \"<<pow(vans[0],2)<<\" \"<<pow(vans[0],primefact[vans[0]]-3)<<endl;\r\n            }\r\n            else no\r\n\r\n            }\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"
}