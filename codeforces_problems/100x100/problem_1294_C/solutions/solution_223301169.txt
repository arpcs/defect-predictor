{
    "id": 223301169,
    "contestId": 1294,
    "creationTimeSeconds": 1694668654,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1294,
        "index": "C",
        "name": "Product of Three Numbers",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1294,
        "members": [
            {
                "handle": "0x1radiation"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1579703700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#ifndef ONLINE_JUDGE\r\n#include </home/anurag/cp/upper.h>\r\n#else\r\n#pragma GCC optimize(\"O3,unroll-loops\")\r\n#include<bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\nusing namespace std;\r\nusing namespace chrono;\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n\r\n#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\r\n#define MOD 1000000007\r\n#define MOD1 998244353\r\n#define INF 1e18\r\n#define nline \"\\n\"\r\n#define pb push_back\r\n#define ppb pop_back\r\n#define mp make_pair\r\n#define ff first\r\n#define ss second\r\n#define PI 3.141592653589793238462\r\n#define set_bits __builtin_popcountll\r\n#define sz(x) ((int)(x).size())\r\n#define all(x) (x).begin(), (x).end()\r\n\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double lld;\r\ntypedef tree<pair<ll, ll>, null_type, less<pair<ll, ll>>, rb_tree_tag, tree_order_statistics_node_update > pbds; // find_by_order, order_of_key\r\n\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x) cerr << #x<<\" \"; _print(x); cerr << endl;\r\n#else\r\n#define debug(x);\r\n#endif\r\n\r\nvoid _print(ll t) {cerr << t;}\r\nvoid _print(int t) {cerr << t;}\r\nvoid _print(string t) {cerr << t;}\r\nvoid _print(char t) {cerr << t;}\r\nvoid _print(lld t) {cerr << t;}\r\nvoid _print(double t) {cerr << t;}\r\nvoid _print(ull t) {cerr << t;}\r\n\r\ntemplate <class T, class V> void _print(pair <T, V> p);\r\ntemplate <class T> void _print(vector <T> v);\r\ntemplate <class T> void _print(set <T> v);\r\ntemplate <class T, class V> void _print(map <T, V> v);\r\ntemplate <class T> void _print(multiset <T> v);\r\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\r\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\nvoid _print(pbds v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\n\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\n#endif\r\n\r\nset <ll>s1;\r\n\r\nll rifter(ll n) {\r\n\tfor (ll i = 2; i * i < n; i++) {\r\n\t\tif (n % i == 0 && !s1.count(i)) {\r\n\t\t\tn /= i;\r\n\t\t\ts1.insert(i);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treturn n;\r\n}\r\n\r\n\r\nvoid solve() {\r\n\ts1.clear();\r\n\tll n; cin >> n;\r\n\tll new1 = rifter(n);\r\n\t// debug(new1)\r\n\tnew1 = rifter(new1);\r\n\tdebug(new1);\r\n\tdebug(s1)\r\n\tif (s1.size() < 2 || new1 == 1 || s1.count(new1)) {\r\n\t\tcout << \"NO\" << nline;\r\n\t\treturn;\r\n\t}\r\n\telse {\r\n\t\tcout << \"YES\" << nline;\r\n\t\tdebug(s1)\r\n\t}\r\n\r\n\r\n}\r\n\r\nint main()  {\r\n\tfastio();\r\n#ifndef ONLINE_JUDGE\r\n\tfreopen(\"input1.txt\", \"r\", stdin);\r\n\tfreopen(\"output1.txt\", \"w\", stdout);\r\n\tfreopen(\"Error.txt\", \"w\", stderr);\r\n#endif\r\n\r\n\tauto start1 = high_resolution_clock::now();\r\n\r\n\tll t;\r\n\tcin >> t;\r\n\twhile (t--) {\r\n\t\tsolve();\r\n\t}\r\n\r\n\tauto stop1 = high_resolution_clock::now();\r\n\tauto duration = duration_cast<microseconds>(stop1 - start1);\r\n\r\n#ifndef ONLINE_JUDGE\r\n\tcerr << \"done\" << nline;\r\n\tcerr << \"Time: \" << duration . count() / 1000 << endl;\r\n#endif\r\n\r\n}"
}