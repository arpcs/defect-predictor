{
    "id": 232069273,
    "contestId": 1294,
    "creationTimeSeconds": 1699533793,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1294,
        "index": "C",
        "name": "Product of Three Numbers",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1294,
        "members": [
            {
                "handle": "shmVirus"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1579703700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 102400,
    "source": "/*=============================================================================\n\n            author: @shmVirus --> Sabbir < [email\u00a0protected] >\n\n=============================================================================*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n\nclock_t startTime;\ndouble getCurrentTime() {\n    return (double)(clock() - startTime) / CLOCKS_PER_SEC;\n}\n\n\n/*=====     using     =======================================================*/\n/*---------------aliases: data types                               ----------*/\nusing ll    = long long;\n/*---------------aliases: containers                               ----------*/\nusing vi    = vector<int>;              // vector of integers\n/*---------------aliases: pairs                                    ----------*/\nusing pi    = pair<int, int>;           // pair of integers\n/*---------------aliases: containers of pairs                      ----------*/\nusing vpi   = vector<pair<int, int>>;   // vector of pairs of integers\n/*=====-----using-----=======================================================*/\n\n\n/*=====     const     =======================================================*/\nconst int INF = 2147483647;\nconst long long INF64 = 9223372036854775807;\nconst double PI = 3.1415926535897932384626;\n/*=====-----const-----=======================================================*/\n\n\n/*=====     #define     =====================================================*/\n/*-----------------aliases: functions with arguments               ----------*/\n#define pb      push_back\n#define pob     pop_back\n#define mp      make_pair\n#define all(v)  (v).begin(), (v).end()\n#define rall(v) (v).rbegin(), (v).rend()\n/*-----------------aliases: functions without arguments            ----------*/\n#define fi      first()\n#define se      second()\n#define be      begin()\n#define en      end()\n/*-----------------aliases: miscellaneous functions                ----------*/\n#define sz(v)           (int)(v).size()\n#define countx(v,x)     count((v).begin(),(v).end(), (x))\n#define asrt(v)         sort((v).begin(), (v).end())\n#define dsrt(v)         sort((v).rbegin(), (v).rend())\n#define rev(v)          reverse((v).begin(), (v).end())\n#define mx(v)           *max_element((v).begin(), (v).end())\n#define mn(v)           *min_element((v).begin(), (v).end())\n#define sum(v)          accumulate((v).begin(),(v).end(), 0)\n#define uni(v)          (v).erase(unique((v).begin(),(v).end()), (v).end());\n/*-----------------macros: function like                           ----------*/\n#define sq(a)           ( (a) * (a) )\n#define issq(a)         ( (ll)(sqrt((a))) * (ll)(sqrt((a))) == (a) )\n#define mod(a, m)       ( ((a) % (m) + (m)) % (m) )\n#define gcd(a,b)        ( __gcd((a), (b)) )\n#define lcm(a,b)        ( (a)*(b)/(gcd((a),(b))) )\n/*-----------------macros: loops                                   ----------*/\n#define FOR(i,L,R)      for (int (i) = (L); (i) < (R); ++(i))\n#define FORE(i,L,R)     for (int (i) = (L); (i) <= (R); ++(i))\n#define ROF(i,R,L)      for (int (i) = (R) - 1; (i) >= (L); --(i))\n#define ROFE(i,R,L)     for (int (i) = (R); (i) >= (L); --(i))\n/*-----------------macros: miscellaneous                           ----------*/\n#define FastIO  ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\n#define nl      \"\\n\"\n#define MULTITEST 1\n/*=====-----#define-----=====================================================*/\n\n\nvoid solution () {\n    int n; cin >> n;\n    set<int> used;\n    for (int i = 2; i * i <= n; ++i) {\n        if (n % i == 0 && !used.count(i)) {\n\t\t\tused.insert(i);\n\t\t\tn /= i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor (int i = 2; i * i <= n; ++i) {\n\t\tif (n % i == 0 && !used.count(i)) {\n\t\t\tused.insert(i);\n\t\t\tn /= i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (int(used.size()) < 2 || used.count(n) || n == 1) {\n\t\tcout << \"NO\" << nl;\n\t} else {\n\t\tcout << \"YES\" << nl;\n\t\tused.insert(n);\n\t\tfor (auto it : used) cout << it << \" \";\n\t\tcout << nl;\n\t}\n}\n\nint main (void) {\n    startTime = clock();\n    FastIO;\n\n    int tc=1; if (MULTITEST) cin>>tc;\n    for(int cs=1;cs<=tc;cs++) {\n        cerr << \"\\n--- Case #\"<< cs << \" start ---\\n\";\n        solution();\n        cerr << \"\\ttime = \" << fixed << setprecision(5) << getCurrentTime() << nl;\n    }\n\n    return 0;\n}\n"
}