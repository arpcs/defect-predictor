{
    "id": 162375333,
    "contestId": 1583,
    "creationTimeSeconds": 1656617279,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "D",
        "name": "Omkar and the Meaning of Life",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "codificador10"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n#ifdef crazybarcafan\n#include \"/debug__.hpp\"\n#else\n#define debug__(...)\n#endif\n// clang-format off\n#define ld\t\t\tlong double\n#define sz(x)\t\t\t((int)(x).size())\n#define all(x)\t\t\t(x).begin(), (x).end()\n#define rep(i, a, b)\t\tfor (int i = a; i < b; i++)\ntemplate<typename T1>istream& operator>>(istream& in,vector<T1>&a){for(auto &it:a){in>>it;};return in;}\ntemplate<typename T1>ostream& operator<<(ostream& ot,vector<T1>&a){for(auto &it:a){ot<<it<<' ';}return ot;}\nconst int64_t INF = 1e18+5;\nconst int inf = 1e9+5, mod = 1e9+7;\n// clang-format on\n/*--------------------------------------------------solve----------------------------------------------------*/\n#define int int64_t\n\nconst int32_t N = 1e5 + 5;\n/*\n    3 2 1 5 4  0 0 1 0 0\n    0 1 1 1 1  3\n    0 0 1 1 1  3 2\n//find lst index then find all prior indxes\n\n    */\nvoid solve(int Testo)\n{\n    int n;\n    cin >> n;\n    vector<int> v(n + 1);\n    int lst = n;\n    rep(i, 2, n + 1)\n    {\n        cout << \"? \";\n        rep(h, 1, n) cout << 1 << \" \";\n        cout << i << endl;\n        int qq;\n        cin >> qq;\n        if (qq == 0)\n            break;\n        lst--;\n    }\n    v[n] = lst;\n\n    // for (lst,n] indexes ->make v[n]=i-lst+1;\n    rep(i, lst + 1, n + 1)\n    {\n        cout << \"? \";\n        rep(j, 1, n) cout << \"1 \";\n        cout << i - lst + 1 << endl;\n        int idx;\n        cin >> idx;\n        v[idx] = i;\n    }\n    // for [1,lst) indexes ->make v[i]=n-i;\n    rep(i, 1, lst)\n    {\n        cout << \"? \";\n        rep(j, 1, n) cout << n - i << \" \";\n        cout << 1 << endl;\n        int idx;\n        cin >> idx;\n        v[idx] = i;\n    }\n    rep(i, 1, n + 1) cout << v[i] << \" \";\n    cout << endl;\n}\n\n/*--------------------------------------------------testcase--------------------------------------------------*/\n\nsigned main()\n{\n    ios::sync_with_stdio(0);\n    cin.tie(0), cout.tie(0);\n\n    int32_t Tcase = 1;\n    // cin >> Tcase;\n    for (int32_t T = 1; T <= Tcase; T++)\n    {\n        // cout << \"Case #\" << T << \": \";\n        solve(T);\n    }\n    return 0;\n}"
}