{
    "id": 209936238,
    "contestId": 1583,
    "creationTimeSeconds": 1686989578,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "D",
        "name": "Omkar and the Meaning of Life",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "palsatyam877"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n\r\n#include<ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n// typedef tree<long long, null_type, less<long long>, rb_tree_tag, tree_order_statistics_node_update> pbds; // find_by_order, order_of_key\r\n\r\ntypedef tree<pair<long long , long long>, null_type, less<pair<long long , long long>>, rb_tree_tag, tree_order_statistics_node_update> pbds1; // find_by_order, order_of_key\r\ntypedef tree<pair<long long , long long>, null_type, greater<pair<long long , long long>>, rb_tree_tag, tree_order_statistics_node_update> pbds2; // find_by_order, order_of_key\r\n\r\n#define ll long long\r\n#define ld long double\r\n#define inf 1000000000000000005\r\n// #define inf 1000000005\r\n#define mod 1000000007\r\ntypedef pair<int, int> pii;\r\ntypedef vector<int> vii;\r\ntypedef vector<ll> vll;\r\ntypedef pair<ll, ll> pll;\r\n#define pb push_back\r\n#define ppb pop_back\r\n#define puf push_front\r\n#define pof pop_front\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define fi first\r\n#define se second\r\n#define sz(x) (ll)x.size()\r\n// #define ckmin(a,b) a = min(a,b)\r\n// #define ckmax(a,b) a = max(a,b)\r\n#define _BENZ_ ios_base::sync_with_stdio(false);cin.tie(NULL);\r\nconst int N = 2e5 + 10;\r\n\r\ntemplate<class T> bool ckmin(T&a, T&b) { bool B = a > b; a = min(a,b); return B; }\r\ntemplate<class T> bool ckmax(T&a, T&b) { bool B = a < b; a = max(a,b); return B; }\r\n\r\n// std::cout << std::fixed;\r\n// std::cout << std::setprecision(12);\r\n// floor(2.3)\r\n// ceil(2.3)\r\n\r\nstruct custom_hash {\r\n    static uint64_t splitmix64(uint64_t x) {\r\n        // http://xorshift.di.unimi.it/splitmix64.c\r\n        x += 0x9e3779b97f4a7c15;\r\n        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n        return x ^ (x >> 31);\r\n    }\r\n\r\n    size_t operator()(uint64_t x) const {\r\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n        return splitmix64(x + FIXED_RANDOM);\r\n    }\r\n}; // unordered_map<ll , ll , custom_hash> mp;\r\n\r\nll expo(ll a, ll b, ll mod1) {ll res = 1; while (b > 0) {if (b & 1ll)res = (res * a) % mod1; a = (a * a) % mod1; b = b >> 1ll;} return res;}\r\n\r\n/*::::::::::::::::::::::::::::::::::::::::::::::::::::::: SOLUTION TO THE PROBLEM :::::::::::::::::::::::::::::::::::::::::::::::::*/\r\n\r\n/*--------------------------------------------------------------------------------------------------------------------------------------------*/\r\n/*\r\n\r\n*/\r\n\r\nvoid Pre() {\r\n}\r\n\r\nvoid solve() {\r\n     ll n; cin >> n;\r\n\r\n     vll v(n + 2ll , 1ll);\r\n     vll ans(n + 1ll , 0ll);\r\n\r\n     for(ll i = n; i >= 1ll; --i) {\r\n          v[i + 1] = 1ll;\r\n          v[i] = 2ll;\r\n\r\n          cout << \"?\" << \" \";\r\n\r\n          for(ll j = 1; j <= n; ++j) {\r\n              cout << v[j] << \" \";\r\n          }\r\n          cout << endl;\r\n\r\n          ll x; cin >> x;\r\n          \r\n          if(x == 0ll) mxx = i;\r\n\r\n          if(x == i) continue;\r\n          else {\r\n              ans[x] = i;\r\n          }\r\n     }\r\n\r\n     vll v1(n + 2ll , 2ll);\r\n     ll mxx = 0ll;\r\n\r\n     for(ll i = 1; i <= n; ++i) {\r\n         v1[i] = 1;\r\n         v1[i - 1] = 2;\r\n\r\n         cout << \"?\" << \" \";\r\n\r\n         for(ll j = 1; j <= n; ++j) {\r\n              cout << v1[j] << \" \";\r\n         }\r\n         cout << endl;\r\n\r\n         ll x; cin >> x;\r\n         if(!x) mxx = i;\r\n         if(x == i) continue;\r\n         else {\r\n             ans[i] = x;\r\n         }\r\n     }\r\n\r\n     cout << \"!\" << \" \";\r\n     ll j = mxx;\r\n     map<ll,ll> mp;\r\n\r\n     for(ll t = n; t >= 1; --t) {\r\n          mp[j] = j;\r\n          j = ans[j];\r\n     }\r\n\r\n     for(auto &it : mp) {\r\n          cout << it.se << \" \";\r\n     }\r\n     cout << endl;\r\n\r\n}\r\n\r\nint32_t main(){\r\n\r\n    // freopen(\"teamwork.in\",\"r\",stdin);\r\n    // freopen(\"teamwork.out\",\"w\",stdout);\r\n    // //OR\r\n    // ifstream fin(\"snakes.in\");\r\n    // ofstream fout(\"snakes.out\");\r\n\r\n    _BENZ_\r\n\r\n    Pre();\r\n\r\n    ll t = 1;\r\n    cin >> t;\r\n\r\n    while(t--){\r\n        solve();\r\n    }\r\n\r\n    // for(ll i = 1; i <= t; ++i) {\r\n    //       cout << \"Case #\"<<i<<\": \";\r\n    //       solve();\r\n    // }\r\n\r\n\r\n /*\r\n     Think of the edge case (n == 1 ?).\r\n     Don't get stuck on a single approach for a long time.\r\n     Also don't get stuck on a single problem for a long time :)\r\n */\r\n\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n*/\r\n"
}