{
    "id": 132260420,
    "contestId": 1583,
    "creationTimeSeconds": 1634476668,
    "relativeTimeSeconds": 7968,
    "problem": {
        "contestId": 1583,
        "index": "D",
        "name": "Omkar and the Meaning of Life",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "blkrop"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 52,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\ntypedef pair<int, int> pii;\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef unsigned long long ull;\r\ntypedef pair<ll, ll> pll;\r\n\r\n// #pragma GCC optimize(\"Ofast\")\r\n// #pragma GCC target(\"fma,sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\r\n// #pragma GCC optimize(\"unroll-loops\")\r\n\r\n//#define int ll\r\n#define size(x) int((x).size())\r\n#define all(x) (x).begin(), (x).end()\r\n#define rall(x) (x).rbegin(), (x).rend()\r\n#define pb emplace_back\r\n#define dbg(x) cerr << #x << \" = \" << x << '\\n';\r\n#define fastio() ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\r\n\r\nconst int MAXN = 2e5 + 1;\r\nconst int INF = int(2e9);\r\nconst ll INFLL = ll(4e18);\r\nconst int MOD = (1e9 + 7);\r\nconst int ALPH = 'z' - 'a' + 1;\r\nconst ld EPS = 1e-9;\r\n\r\n\r\n#ifdef _LOCAL\r\n  mt19937 rnd(228);\r\n#else\r\n  mt19937 rnd(chrono::high_resolution_clock::now().time_since_epoch().count());\r\n#endif\r\n\r\nstruct Solution {\r\n  // map<vector<int>, int> ans;\r\n  vector<int> arr;\r\n  int q() {\r\n    // if (ans.find(arr) != ans.end()) {\r\n    //   return ans[arr];\r\n    // }\r\n    cout << \"? \";\r\n    for (auto i : arr) {\r\n      cout << i << ' ';\r\n    }\r\n    cout << endl;\r\n    int res;\r\n    cin >> res;\r\n    // ans[arr] = res;\r\n    return res - 1;\r\n  }\r\n  void solve() {\r\n    int n;\r\n    cin >> n;\r\n    arr.resize(n, 1);\r\n    int id = 0;\r\n    vector<int> ans(n, -1);\r\n    vector<int> f(n);\r\n    for (int i = 0; i < n; i++) { \r\n      arr[i]++;\r\n      f[i]  = q();\r\n      arr[i]--;\r\n    }\r\n    for (int i = 0; i < n; i++) {\r\n      arr[i]++;\r\n    }\r\n    vector<int> s(n);\r\n    for (int i = 0; i < n; i++) {\r\n      arr[i]--;\r\n      s[i] = q();\r\n      arr[i]++;\r\n    }\r\n    queue<int> q;\r\n    int cnt = n;\r\n    for (int i = 0; i < n; i++) {\r\n      if (f[i] == -1) {\r\n        ans[i] = n;\r\n        q.push(i);\r\n        cnt--;\r\n      }\r\n      if (s[i] == -1) {\r\n        ans[i] = 1;\r\n        q.push(i);\r\n        cnt--;\r\n      }\r\n    }\r\n    while (size(q) && cnt) {\r\n      int v = q.front();\r\n      q.pop();\r\n      if (f[v] != v && f[v] != -1 && ans[f[v]] == -1) {\r\n        ans[f[v]] = ans[v] + 1;\r\n        q.push(f[v]);\r\n        cnt--;\r\n      }\r\n      if (s[v] != v && s[v] != -1 && ans[s[v]] == -1) {\r\n        ans[s[v]] = ans[v] - 1;\r\n        q.push(s[v]);\r\n        cnt--;\r\n      }\r\n    }\r\n    cout << \"! \";\r\n    for (auto i : ans) {\r\n      cout << i << ' ';\r\n    }\r\n    cout << endl;\r\n  }\r\n};  \r\nsigned main() {\r\n  #ifdef _LOCAL\r\n    // freopen(\"input.txt\", \"r\", stdin);\r\n    // freopen(\"output.txt\", \"w\", stdout);\r\n  #else\r\n    //freopen(\"input.txt\", \"r\", stdin);\r\n    //freopen(\"output.txt\", \"w\", stdout);\r\n\r\n  #endif\r\n  // fastio();\r\n    int tt = 1;\r\n    // cin >> tt;\r\n    while (tt--) {\r\n        Solution now;\r\n        now.solve();\r\n    }\r\n    return 0;\r\n}"
}