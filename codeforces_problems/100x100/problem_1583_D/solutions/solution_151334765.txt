{
    "id": 151334765,
    "contestId": 1583,
    "creationTimeSeconds": 1648561034,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "D",
        "name": "Omkar and the Meaning of Life",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "omeganot"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n#include <bits/extc++.h>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ost;\n\n#define mpair make_pair\n#define pb push_back\n#define arr vector\n\nusing ll = long long;\nusing pll = pair<ll,ll>;\n\nconst ll mod = 1e9+7;\nconst ll mn = LLONG_MIN; const ll mx = LLONG_MAX;\nint n;\nstring yes = \"YES\"; string no = \"NO\";\narr<ll> d1 = {1,0,-1,0};\narr<ll> d2 = {0,1,0,-1};\n\nint query(int x) {\n  for(int i=0;i<n-1;i++) {\n\tcout << x << \" \";\n  }\n  cout << 0 << endl;\n  int z;\n  cin >> z;\n  return z;\n}\n\nint query2(int x) {\n  for(int i=0;i<n-1;i++) {\n\tcout << 0 << \" \";\n  }\n  cout << x << endl;\n  int z;\n  cin >> z;\n  return z;\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cin >> n;\n  int x;\n  for(int i=n;i>=1;i--) {\n\tif(query(i-1)) {\n\t  x = i;\n\t  break;\n\t}\n  }\n  arr<int> ans(n+1);\n  ans[n] = x;\n  for(int i=x+1;i<=n;i++) {\n\tans[query2(i-x)] = i;\n  }\n  for(int i=x-1;i>=1;i--) {\n\tans[query(x-i)] = i;\n  }\n  cout << \"! \";\n  for(int i=1;i<=n;i++) {\n\tcout << ans[i] << \" \";\n  }\n  cout << endl;\n}\n"
}