{
    "id": 132250393,
    "contestId": 1583,
    "creationTimeSeconds": 1634474605,
    "relativeTimeSeconds": 5905,
    "problem": {
        "contestId": 1583,
        "index": "D",
        "name": "Omkar and the Meaning of Life",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "ToxicChemical"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 7,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 102400,
    "source": "#include<iostream>\r\n#include<algorithm>\r\n#include<utility>\r\n#include<vector>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef pair<int, int> pp;\r\n\r\nint p1(int n, int id) {\r\n    cout << \"? \";\r\n    for (int i = 0; i < n; ++i) {\r\n        if (i != id)\r\n            cout << \"1 \";\r\n        else cout << \"2 \";\r\n    }\r\n    cout << endl;\r\n    int ans;\r\n    cin >> ans;\r\n    return ans;\r\n}\r\n\r\nint m1(int n, int id) {\r\n    cout << \"? \";\r\n    for (int i = 0; i < n; ++i) {\r\n        if (i != id)\r\n            cout << \"2 \";\r\n        else cout << \"1 \";\r\n    }\r\n    cout << endl;\r\n    int ans;\r\n    cin >> ans;\r\n    return ans;\r\n}\r\n\r\nconst int maxn = 101;\r\n\r\nvector<int> g[maxn];\r\nvector<int> p;\r\n\r\nvoid dfs(int v, int pr, int id) {\r\n    p[v] = id;\r\n    for (auto u : g[v]) {\r\n        dfs(u, v,  id + 1);\r\n    }\r\n}\r\n\r\nbool enter[maxn];\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    int id1 = -1;\r\n    for (int i = 0; i < n; ++i) {\r\n        int r1 = p1(n, i);\r\n        if (r1 != 0) {\r\n            r1--;\r\n            if (r1 != i) {\r\n                // cout << \"pushed : \" << i << \" -> \" << r1 << endl;\r\n                g[i].push_back(r1);\r\n                enter[r1] = true;\r\n            }\r\n        }\r\n        r1 = m1(n, i);\r\n        if (r1 == 0) {id1 = i; continue;}\r\n        r1--;\r\n        if (r1 != i) {\r\n            // cout << \"pushed : \" << r1 << \" -> \" << i << endl;\r\n            g[r1].push_back(i);\r\n            enter[i] = true;\r\n        }\r\n    }   \r\n    p.resize(n, -1);\r\n    int idn;\r\n    dfs(id1, -1, 1);\r\n\r\n    // for (int i = 0; i < n; ++i) {\r\n    //     cout << p[i] << \" \"; << enter[i] << endl;\r\n    //     if (!enter[i] && p[i] == -1) {idn = i; break;}\r\n    // }\r\n    // cout << endl;\r\n    // cout << idn << endl;\r\n    // return 0;\r\n    // g[id1].push_back(idn);\r\n    // dfs(id1, -1, 1);\r\n    cout << \"! \";\r\n    for (int i = 0; i < n; ++i) cout << p[i] << \" \";\r\n    cout << endl;\r\n    return 0;\r\n}\r\n"
}