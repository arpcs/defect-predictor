{
    "id": 132729367,
    "contestId": 1583,
    "creationTimeSeconds": 1634931466,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "D",
        "name": "Omkar and the Meaning of Life",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "D_Dima"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "MS C++ 2017",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 1126400,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <queue>\r\n#include <map>\r\n#include <math.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define ld long double\r\n#define vl vector<ll>\r\n#define vvl vector<vl>\r\nconst ll INF = (ll)1e10;\r\nconst ld ESP = 1e-14;\r\nvoid solve() {\r\n\tll n;\r\n\tcin >> n;\r\n\tvector<ll> d(n + 1, -1);\r\n\tvector<ll> obr(n + 1, -1);\r\n\tfor (ll i = 1; i <= n; i++) {\r\n\t\tcout << \"?\";\r\n\t\tfor (ll j = 1; j <= n; j++) {\r\n\t\t\tif (j == i) cout << \" 2\";\r\n\t\t\telse cout << \" 1\";\r\n\t\t}\r\n\t\tcout << '\\n';\r\n\t\tcout.flush();\r\n\t\tll k;\r\n\t\tcin >> k;\r\n\t\tif (k != 0 && k != i) {\r\n\t\t\td[i] = k;\r\n\t\t\tobr[k] = i;\r\n\t\t}\r\n\t}\r\n\tfor (ll i = 1; i <= n; i++) {\r\n\t\tcout << \"?\";\r\n\t\tfor (ll j = 1; j <= n; j++) {\r\n\t\t\tif (j == i) cout << \" 1\";\r\n\t\t\telse cout << \" 2\";\r\n\t\t}\r\n\t\tcout << '\\n';\r\n\t\tcout.flush();\r\n\t\tll k;\r\n\t\tcin >> k;\r\n\t\tif (k != 0 && k != i) {\r\n\t\t\td[k] = i;\r\n\t\t\tobr[i] = k;\r\n\t\t}\r\n\t}\r\n\tvector<ll> ans(n);\r\n\tfor (ll i = 1; i <= n; i++) {\r\n\t\tif (d[i] != -1) continue;\r\n\t\tans[i - 1] = n;\r\n\t\ti = obr[i];\r\n\t\twhile (i != -1) {\r\n\t\t\tans[i - 1] = --n;\r\n\t\t\ti = obr[i];\r\n\t\t}\r\n\t\tcout << \"!\";\r\n\t\tfor (auto h : ans) cout << ' ' << h;\r\n\t\tbreak;\r\n\t}\r\n}\r\nint main() {\r\n\tios_base::sync_with_stdio(0);\r\n\tcin.tie(0);\r\n\tcout.tie(0);\r\n\tsolve();\r\n\t//cout << distance(0, 1, 1, 0.4);\r\n}"
}