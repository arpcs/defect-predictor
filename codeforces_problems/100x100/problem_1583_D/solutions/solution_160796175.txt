{
    "id": 160796175,
    "contestId": 1583,
    "creationTimeSeconds": 1655369293,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "D",
        "name": "Omkar and the Meaning of Life",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "tnakao"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "/* -*- coding: utf-8 -*-\r\n *\r\n * 1583D.cc: D. Omkar and the Meaning of Life\r\n */\r\n\r\n#include<cstdio>\r\n#include<algorithm>\r\n \r\nusing namespace std;\r\n\r\n/* constant */\r\n\r\nconst int MAX_N = 100;\r\n\r\n/* typedef */\r\n\r\n/* global variables */\r\n\r\nint as[MAX_N], prvs[MAX_N], nxts[MAX_N];\r\n\r\n/* subroutines */\r\n\r\nint query(int n, int as[]) {\r\n  putchar('?');\r\n  for (int i = 0; i < n; i++) printf(\" %d\", as[i] + 1);\r\n  putchar('\\n'); fflush(stdout);\r\n\r\n  int k;\r\n  scanf(\"%d\", &k), k--;\r\n\r\n  return k;\r\n}\r\n\r\n/* main */\r\n\r\nint main() {\r\n  //freopen(\"input.txt\", \"r\", stdin);\r\n  //freopen(\"output.txt\", \"w\", stdout);\r\n\r\n  int n;\r\n  scanf(\"%d\", &n);\r\n\r\n  fill(prvs, prvs + n, -1);\r\n  fill(nxts, nxts + n, -1);\r\n\r\n  for (int i = 0; i < n; i++) {\r\n    fill(as, as + n, 0);\r\n    as[i] = 1;\r\n    int k0 = query(n, as);\r\n    if (k0 >= 0 && k0 < i) prvs[k0] = i, nxts[i] = k0;\r\n\r\n    fill(as, as + n, 1);\r\n    as[i] = 0;\r\n    int k1 = query(n, as);\r\n    if (k1 >= 0 && k1 < i) prvs[i] = k1, nxts[k1] = i;\r\n  }\r\n\r\n  int st = 0;\r\n  while (prvs[st] >= 0) st++;\r\n\r\n  for (int i = 0, u = st; i < n; i++, u = nxts[u]) as[u] = i;\r\n\r\n  putchar('!');\r\n  for (int i = 0; i < n; i++) printf(\" %d\", as[i] + 1);\r\n  putchar('\\n'); fflush(stdout);\r\n\r\n  return 0;\r\n}\r\n"
}