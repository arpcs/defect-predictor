{
    "id": 133693322,
    "contestId": 1583,
    "creationTimeSeconds": 1635617815,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "D",
        "name": "Omkar and the Meaning of Life",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "SampsonYW"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1433600,
    "source": "//#include<tr1/unordered_map>\r\n//using namespace std::tr1;\r\n#include<bits/stdc++.h>\r\n#define fastcall __attribute__((optimize(\"-O3\")))\r\n#pragma GCC optimize(1)\r\n#pragma GCC optimize(2)\r\n#pragma GCC optimize(3)\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC optimize(\"inline\")\r\n#pragma GCC optimize(\"-fgcse\")\r\n#pragma GCC optimize(\"-fgcse-lm\")\r\n#pragma GCC optimize(\"-fipa-sra\")\r\n#pragma GCC optimize(\"-ftree-pre\")\r\n#pragma GCC optimize(\"-ftree-vrp\")\r\n#pragma GCC optimize(\"-fpeephole2\")\r\n#pragma GCC optimize(\"-ffast-math\")\r\n#pragma GCC optimize(\"-fsched-spec\")\r\n#pragma GCC optimize(\"unroll-loops\")\r\n#pragma GCC optimize(\"-falign-jumps\")\r\n#pragma GCC optimize(\"-falign-loops\")\r\n#pragma GCC optimize(\"-falign-labels\")\r\n#pragma GCC optimize(\"-fdevirtualize\")\r\n#pragma GCC optimize(\"-fcaller-saves\")\r\n#pragma GCC optimize(\"-fcrossjumping\")\r\n#pragma GCC optimize(\"-fthread-jumps\")\r\n#pragma GCC optimize(\"-funroll-loops\")\r\n#pragma GCC optimize(\"-fwhole-program\")\r\n#pragma GCC optimize(\"-freorder-blocks\")\r\n#pragma GCC optimize(\"-fschedule-insns\")\r\n#pragma GCC optimize(\"inline-functions\")\r\n#pragma GCC optimize(\"-ftree-tail-merge\")\r\n#pragma GCC optimize(\"-fschedule-insns2\")\r\n#pragma GCC optimize(\"-fstrict-aliasing\")\r\n#pragma GCC optimize(\"-fstrict-overflow\")\r\n#pragma GCC optimize(\"-falign-functions\")\r\n#pragma GCC optimize(\"-fcse-skip-blocks\")\r\n#pragma GCC optimize(\"-fcse-follow-jumps\")\r\n#pragma GCC optimize(\"-fsched-interblock\")\r\n#pragma GCC optimize(\"-fpartial-inlining\")\r\n#pragma GCC optimize(\"no-stack-protector\")\r\n#pragma GCC optimize(\"-freorder-functions\")\r\n#pragma GCC optimize(\"-findirect-inlining\")\r\n#pragma GCC optimize(\"-fhoist-adjacent-loads\")\r\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\r\n#pragma GCC optimize(\"inline-small-functions\")\r\n#pragma GCC optimize(\"-finline-small-functions\")\r\n#pragma GCC optimize(\"-ftree-switch-conversion\")\r\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\r\n#pragma GCC optimize(\"-fexpensive-optimizations\")\r\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\r\n#pragma GCC optimize(\"inline-functions-called-once\")\r\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\r\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\r\n#define db double\r\n#define il inline\r\n#define re register\r\n#define ll long long\r\n#define ui unsigned int\r\n#define ull unsigned ll\r\n#define fi first\r\n#define se second\r\n#define pll pair<ll,ll>\r\n#define pil pair<int,ll>\r\n#define pli pair<ll,int>\r\n#define pii pair<int,int>\r\n#define MP(x,y) make_pair(x,y)\r\n#define lowbit(x) ((x)&(~(x)+1))\r\n#define iL (1<<20)\r\n#define TEM template<class T>il void\r\n#define Write(x,LC) write((x)),*iter++=LC\r\n#define Writeneg(x,LC) writeneg((x)),*iter++=LC\r\n#define flush() fwrite(Out,1,iter-Out,stdout),iter=Out\r\n#define gc() ((iS==iT)?(iT=(iS=ibuf)+fread(ibuf,1,iL,stdin),(iS==iT)?EOF:*iS++):*iS++)\r\nusing namespace std;\r\nnamespace IO{\r\n\tchar ibuf[iL],*iS=ibuf+iL,*iT=ibuf+iL,Out[iL],*iter=Out;\r\n\tTEM Readneg(re T &x){re char c;re bool f;for(f=false,c=getchar();!isdigit(c);f|=c=='-',c=getchar());for(x=0;isdigit(c);x=(x<<1)+(x<<3)+(c^48),c=getchar());if(f)x=~x+1;}\r\n\tTEM readneg(re T &x){re char c;re bool f;for(f=false,c=gc();!isdigit(c);f|=c=='-',c=gc());for(x=0;isdigit(c);x=(x<<1)+(x<<3)+(c^48),c=gc());if(f)x=~x+1;}\r\n\tTEM writeneg(re T x){if(x<0)*iter++='-',x=~x+1;re T c[35],l;for(l=0;!l || x;c[l]=x%10,++l,x/=10);for(;l;--l,*iter++=c[l]+'0');flush();}\r\n\tTEM Read(re T &x){re char c;for(c=getchar();!isdigit(c);c=getchar());for(x=0;isdigit(c);x=(x<<1)+(x<<3)+(c^48),c=getchar());}\r\n\tTEM read(re T &x){re char c;for(c=gc();!isdigit(c);c=gc());for(x=0;isdigit(c);x=(x<<1)+(x<<3)+(c^48),c=gc());}\r\n\tTEM write(re T x){re T c[35],l;for(l=0;!l||x;c[l++]=x%10,x/=10);for(;l;*iter++=c[--l]+'0');flush();}\r\n}\r\nusing namespace IO;\r\n#define MAXL 21\r\n#define MAXB 25\r\n#define MAXA 2000005\r\n#define MAXN 100005\r\n#define MAXC 100005\r\n#define MAXM 500005\r\n#define MAXQ 500005\r\n#define MAXK 500005\r\n#define MAXS 500005\r\n#define MAXT 500005\r\n#define mod 10000000073\r\n#define BS 1919810\r\n#define mod1 1000000007\r\n#define mod2 1000000009\r\n//3 2 1 4 5\r\nint n,a[MAXN];\r\n//int n,a[MAXN],b[MAXN];\r\nint main(){\r\n//\tcin>>n;\r\n//\tfor(re int i=1;i<=n;++i)cin>>a[i]>>b[i];\r\n\tcin>>n;\r\n\tfor(re int i=1;i<n;++i){\r\n\t\tcout<<\"? \";\r\n\t\tfor(re int j=1;j<n;++j)cout<<i<<\" \";\r\n\t\tcout<<n<<endl;\r\n\t\tint k;cin>>k;\r\n\t\tif(k!=0){\r\n\t\t\ta[n]=i,a[k]=n;break;\r\n\t\t}\r\n\t}\r\n\tif(!a[n]){\r\n\t\ta[n]=n;\r\n\t\tfor(re int p=1;p<n;++p){\r\n\t\t\tcout<<\"? \";\r\n\t\t\tfor(re int i=1;i<n;++i)cout<<n<<\" \";\r\n\t\t\tcout<<p<<endl;\r\n\t\t\tint k;cin>>k;a[k]=p;\r\n\t\t}\r\n\t}\r\n\telse{\r\n\t\tfor(re int p=1;p<n;++p){\r\n\t\t\tif(p==a[n])continue;\r\n\t\t\tcout<<\"? \";\r\n\t\t\tfor(re int i=1;i<n;++i)cout<<n-p<<\" \";\r\n\t\t\tcout<<n-a[n]<<endl;\r\n\t\t\tint k;cin>>k,a[k]=p;\r\n\t\t}\r\n\t}\r\n\tcout<<\"! \";\r\n\tfor(re int i=1;i<=n;++i)cout<<a[i]<<\" \";\r\n}"
}