{
    "id": 146986281,
    "contestId": 1583,
    "creationTimeSeconds": 1645323227,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "D",
        "name": "Omkar and the Meaning of Life",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "Scalm"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef tree<int,null_type,less<int>,rb_tree_tag,\r\ntree_order_statistics_node_update> indexed_set;\r\nconst int MN=1e5+10;\r\nconst int MOD=1e9+7;\r\nusing pi = pair<ll, ll>;\r\nusing ti = tuple<ll, ll, ll>;\r\n#define pb push_back\r\n#define mp make_pair\r\n#define mt make_tuple\r\n#define MAX LLONG_MAX\r\n#define MIN LLONG_MIN\r\n#define MAX_SIZE 1000005\r\n#define lcm(a, b) (a*b)/__gcd(a, b)\r\nmt19937_64 rng(std::chrono::steady_clock::now().time_since_epoch().count());\r\n\r\n\r\nint main(){\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    \r\n    ll n; cin>>n;\r\n\r\n    ll start=-1;\r\n\r\n    vector<ll> ans(n);\r\n\r\n    for (int i=2; i<=n; i++){\r\n        vector<ll> temp;\r\n        for (int j=0; j<n-1; j++){\r\n            temp.pb(i);\r\n        }\r\n        temp.pb(1);\r\n        cout<<\"? \";\r\n        for (auto num: temp){\r\n            cout<<num<<\" \";\r\n        }\r\n        cout<<endl;\r\n        ll k; cin>>k;\r\n        if (!k){\r\n            start=i-1;\r\n        }\r\n    }\r\n    if (start==-1){\r\n        start=n;\r\n    }\r\n\r\n    ans[n-1]=start;\r\n\r\n    map<ll, bool> used;\r\n    used[start]=true;\r\n\r\n    ll total=1+start;\r\n\r\n    for (int i=2; i<=n; i++){\r\n        ll find=total-i;\r\n        if (find<1 || find>n || used[find]){\r\n            continue;\r\n        }\r\n        vector<ll> temp;\r\n        for (int j=0; j<n-1; j++){\r\n            temp.pb(i);\r\n        }\r\n        temp.pb(1);\r\n        cout<<\"? \";\r\n        for (auto num: temp){\r\n            cout<<num<<\" \";\r\n        }\r\n        cout<<endl;\r\n        ll k; cin>>k;\r\n        k--;\r\n        ans[k]=find;\r\n        used[find]=true;\r\n    }\r\n\r\n    total=n+start;\r\n\r\n    for (int i=n-1; i>=1; i--){\r\n        ll find=total-i;\r\n        if (find<1 || find>n || used[find]){\r\n            continue;\r\n        }\r\n        vector<ll> temp;\r\n        for (int j=0; j<n-1; j++){\r\n            temp.pb(i);\r\n        }\r\n        temp.pb(n);\r\n        cout<<\"? \";\r\n        for (auto num: temp){\r\n            cout<<num<<\" \";\r\n        }\r\n        cout<<endl;\r\n        ll k; cin>>k;\r\n        k--;\r\n        ans[k]=find;\r\n        used[find]=true;\r\n    }\r\n\r\n    cout<<\"! \";\r\n\r\n    for (auto num: ans){\r\n        cout<<num<<\" \";\r\n    }\r\n    cout<<endl;\r\n\r\n\r\n\r\n\r\n}"
}