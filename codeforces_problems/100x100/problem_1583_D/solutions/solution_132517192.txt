{
    "id": 132517192,
    "contestId": 1583,
    "creationTimeSeconds": 1634726518,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "D",
        "name": "Omkar and the Meaning of Life",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "n1nt3nd0"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 1024000,
    "source": "#include <bits/stdc++.h>\r\n//#include <ext/pb_ds/assoc_container.hpp>\r\n//#include <ext/pb_ds/tree_policy.hpp>\r\n#define fi first\r\n#define sd second\r\n#define pb push_back\r\n#define sz(x) (int)x.size()\r\n#define all(x) x.begin(),x.end()\r\n//#pragma GCC optimize(\"unroll-loops\")\r\n//#pragma GCC optimize(\"-O3\")\r\n//#pragma GCC optimize(\"-Ofast\")\r\n//#pragma GCC target(\"avx2\")\r\ntypedef long long ll;\r\n\r\n//using namespace __gnu_pbds;\r\nusing namespace std;\r\n\r\n//typedef tree<int, null_type, less_equal<>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\r\n\r\nvoid solve()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    int ans[n + 10];\r\n    bool used[n + 10] = {};\r\n    int next[n + 10] = {}, prev[n + 10] = {};\r\n    for(int i = 1; i <= n; i++)\r\n    {\r\n        cout << \"? \";\r\n        for(int j = 1; j <= n; j++)\r\n        {\r\n            if (i == j) cout << 2 << ' ';\r\n            else cout << 1 << ' ';\r\n        }\r\n        cout << endl;\r\n        int k;\r\n        cin >> k;\r\n        if (k >= 1 && k < i) next[i] = k, used[k] = 1;\r\n        cout << \"? \";\r\n        for(int j = 1; j <= n; j++)\r\n        {\r\n            if (i == j) cout << 1 << ' ';\r\n            else cout << 2 << ' ';\r\n        }\r\n        cout << endl;\r\n        cin >> k;\r\n        if (k >= 1 && k < i) next[k] = i, used[i] = 1;\r\n    }\r\n    int f;\r\n    for(int i = 1; i <= n; i++)\r\n      if (!used[i])\r\n        {\r\n            f = i;\r\n            break;\r\n        }\r\n     int x = 1;\r\n     while(x != n + 1)\r\n     {\r\n         ans[f] = x;\r\n         f = next[f];\r\n         x++;\r\n     }\r\n     cout << \"! \";\r\n     for(int i = 1; i <= n; i++) cout << ans[i] << ' ';\r\n}\r\n\r\nint main()\r\n{\r\n   //freopen(\"cycle.in\", \"r\", stdin);\r\n   //freopen(\"cycle.out\", \"w\", stdout);\r\n   //ios_base::sync_with_stdio(0); cin.tie(0);\r\n   int t = 1;\r\n   //cin >> t;\r\n   while(t--) solve();\r\n}\r\n"
}