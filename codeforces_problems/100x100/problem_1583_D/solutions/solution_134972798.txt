{
    "id": 134972798,
    "contestId": 1583,
    "creationTimeSeconds": 1636628179,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "D",
        "name": "Omkar and the Meaning of Life",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1126400,
    "source": "#include<iostream>\n#include<cstring>\n#include<cstdio>\n#include<vector>\n#include<algorithm>\nusing namespace std;\nconst int INF = 1e9+7;\nconst long long INFq=1e18+7;\n\nint dif[110];\n\nint main()\n{\n    int T=1;\n//    cin>>T;\n    while(T--)\n    {\n        int n;\n        scanf(\"%d\",&n);\n\n        int k;\n        for(int x=n;x>1;x--)\n        {\n            printf(\"?\");\n            for(int i=1;i<n;i++)printf(\" %d\",x);\n            printf(\" 1\\n\");\n            fflush(stdout);\n            scanf(\"%d\",&k);\n            dif[k] = 1-x;\n        }\n\n        for(int x=2;x<=n;x++)\n        {\n            printf(\"?\");\n            for(int i=1;i<n;i++)printf(\" 1\");\n            printf(\" %d\\n\",x);\n            fflush(stdout);\n            scanf(\"%d\",&k);\n            dif[k] = x-1;\n        }\n\n        int Min=INF,index=0;\n        for(int i=1;i<=n;i++)\n        {\n            if( Min > dif[i] ){\n                Min = dif[i];\n                index = i;\n            }\n        }\n\n        int bias = 1-Min;\n        for(int i=1;i<=n;i++)dif[i] +=bias;\n\n        printf(\"!\");\n        for(int i=1;i<=n;i++)printf(\" %d\",dif[i]);\n        printf(\"\\n\");\n\n    }\n}\n\n\t\t  \t    \t\t      \t \t\t \t"
}