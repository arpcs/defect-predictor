{
    "id": 155541994,
    "contestId": 1582,
    "creationTimeSeconds": 1651450867,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1582,
        "index": "E",
        "name": "Pchelyonok and Segments",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1582,
        "members": [
            {
                "handle": "1DWalker"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1635069900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 1029,
    "memoryConsumedBytes": 185958400,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int MAXN = 1e5 + 2;\r\nint dp[MAXN][460];\r\nlong long pre[MAXN+1];\r\nlong long a[MAXN];\r\n\r\nvoid solve() {\r\n  int n; cin >> n;\r\n  for (int i = 0; i < n; i++) cin >> a[i];\r\n\r\n  for (int i = 0; i < n; i++) {\r\n    pre[i+1] = a[i];\r\n    if (i > 0) pre[i+1] += pre[i];\r\n  }\r\n\r\n  int K = 0;\r\n  while (K*(K-1)/2 < n) K++;\r\n\r\n  for (int i = 0; i < K; i++) {\r\n    dp[n][i] = -1;\r\n  }\r\n  for (int i = 0; i <= n; i++) dp[i][0] = 1e18;\r\n\r\n  int bestk = 1;\r\n\r\n  for (int j = 1; j <= K; j++) {\r\n    for (int i = n - 1; i >= 0; i--) {\r\n      dp[i][j] = dp[i+1][j];\r\n      if (i + j - 1 < n) {\r\n        long long v = pre[i+j] - pre[i];\r\n        if (v < dp[i+j][j-1]) {\r\n          dp[i][j] = max(dp[i][j], (int) v);\r\n          bestk = j;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  cout << bestk << '\\n';\r\n}\r\n\r\nint32_t main() {\r\n  ios::sync_with_stdio(false);\r\n  cin.tie(0);\r\n\r\n  int t = 1;\r\n  cin >> t;\r\n  while (t--) {\r\n    solve();\r\n  }\r\n  return 0;\r\n}\r\n"
}