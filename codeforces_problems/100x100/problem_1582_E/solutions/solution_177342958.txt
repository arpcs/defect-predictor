{
    "id": 177342958,
    "contestId": 1582,
    "creationTimeSeconds": 1666370184,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1582,
        "index": "E",
        "name": "Pchelyonok and Segments",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1582,
        "members": [
            {
                "handle": "abotaha23"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1635069900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 312,
    "memoryConsumedBytes": 3276800,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <random>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef tree<array <int, 3>, null_type, less<>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\r\n#define AboTaha_on_da_code ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\r\n#define X first\r\n#define Y second\r\n\r\nconst int dx[8]={0, 0, 1, -1, 1, -1, -1, 1}, dy[8]={1, -1, 0, 0, 1, -1, 1, -1};\r\nconst int M = 1e9+7, M2 = 998244353;\r\nconst double EPS = 1e-9;\r\n\r\nvoid dracarys(int tc)\r\n{\r\n    int n; cin >> n;\r\n    vector <ll> ps(n), a(n);\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> ps[i];\r\n        a[i] = ps[i];\r\n        if (i) ps[i]+=ps[i-1];\r\n    }\r\n    vector <ll> dp(n, -2e18);\r\n    dp[n-1] = a[n-1];\r\n    for (int i = n-2; ~i; i--) \r\n        dp[i] = max(a[i], dp[i+1]);\r\n    for (int k = 1; ; k++) {\r\n        vector <ll> nxt(n, -2e18);\r\n        for (int l = n-1; ~l; l--) {\r\n            int r = l+k;\r\n            if (r >= n) continue;\r\n            if (l+1 < n) nxt[l] = nxt[l+1];\r\n            ll s = ps[r]-(l ? ps[l-1] : 0);\r\n            if (r+1 < n && s < dp[r+1])\r\n                nxt[l] = max(nxt[l], s);\r\n        }\r\n        if (nxt[0] < 1) return void (cout << k);\r\n        dp = nxt;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    AboTaha_on_da_code\r\n\r\n//    freopen(\"Ain.txt\", \"r\", stdin);\r\n//    freopen(\"Aout.txt\", \"w\", stdout);\r\n\r\n    int T = 1; cin >> T;\r\n\r\n    for (int i = 1; i <= T; i++) {\r\n//        cout << \"Case #\" << i << \": \";\r\n        dracarys(i);\r\n        cout << '\\n';\r\n    }\r\n    return 0;\r\n}"
}