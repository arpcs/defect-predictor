{
    "id": 167719822,
    "contestId": 1582,
    "creationTimeSeconds": 1660117891,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1582,
        "index": "E",
        "name": "Pchelyonok and Segments",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1582,
        "members": [
            {
                "handle": "rabbit_love_penguin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1635069900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 561,
    "memoryConsumedBytes": 421171200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main() {\r\n  int t;\r\n  cin >> t;\r\n  while(t--) {\r\n    int n;\r\n    cin >> n;\r\n    vector<long long> a(n, 0);\r\n    vector<long long> pre(n);\r\n    vector<vector<long long>> f(n, vector<long long>(505, 0));\r\n\r\n    for (int i = 0; i < n; i++) {\r\n      cin >> a[i];\r\n    }\r\n\r\n    reverse(a.begin(), a.end());\r\n    for (int i = 0; i < a.size(); i++) {\r\n      pre[i] = (i ? pre[i - 1] : 0) + a[i];\r\n    }\r\n\r\n    int k = 500;\r\n\r\n    f[0][1] = a[0];\r\n    for (int i = 1; i < a.size(); i++) {\r\n      f[i][1] = max(f[i - 1][1], a[i]);\r\n      for (int j = 2; j <= k; j++) {\r\n        if (i >= j && pre[i] - pre[i - j] < f[i - j][j - 1]) {\r\n          f[i][j] = pre[i] - pre[i - j];\r\n        }\r\n        f[i][j] = max(f[i][j], f[i - 1][j]);\r\n      }\r\n    }\r\n\r\n//    for (int i = 0; i < n; i++) {\r\n//      cout << a[i] << \" \" << pre[i] << \" \" << f[i][1] << endl;\r\n//    }\r\n\r\n    for (int i = k; i; i--) {\r\n      if (f[n - 1][i]) {\r\n        cout << i << endl;\r\n        break;\r\n      }\r\n    }\r\n\r\n  }\r\n}"
}