{
    "id": 175209325,
    "contestId": 1582,
    "creationTimeSeconds": 1665297920,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1582,
        "index": "E",
        "name": "Pchelyonok and Segments",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1582,
        "members": [
            {
                "handle": "kustokonyang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1635069900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1228800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\n\r\nint main() {\r\n      cin.tie(0); ios_base::sync_with_stdio(0);\r\n\r\n      int t;\r\n      cin >> t;\r\n      while(t--) {\r\n            int n;\r\n            cin >> n;\r\n\r\n            vector<ll> a(n), pref(n);\r\n            for(int i = 0; i < n; i++) cin >> a[i], pref[i] += (i == 0 ? 0 : pref[i - 1]) + a[i]; \r\n\r\n            auto sum = [&](int l, int r) -> ll {\r\n                  if(r >= n) return 0;\r\n                  return pref[r] - (l == 0 ? 0 : pref[l - 1]);\r\n            };\r\n\r\n            int b = sqrt(n) + 5;\r\n            vector<vector<ll>> dp(n + 1, vector<ll>(b));\r\n            for(int i = 0; i <= n; i++) dp[i][0] = 2e18;\r\n            for(int i = n - 1; i >= 0; i--) {\r\n                  for(int j = 1; j < b; j++) {\r\n                        dp[i][j] = dp[i + 1][j];\r\n                        if(i + j - 1 < n && sum(i, i + j - 1) < dp[i + j][j - 1]) {\r\n                              dp[i][j] = max(dp[i][j], sum(i, i + j - 1));\r\n                        }\r\n                  }\r\n            }\r\n\r\n            // cout << b << '\\n';\r\n\r\n            int ans = 0;\r\n            for(int i = 0; i < n; i++) {\r\n                  for(int j = 1; j < b; j++) {\r\n                        if(dp[i][j] > 0) ans = max(ans, j);\r\n                  }\r\n            }\r\n\r\n            cout << ans << '\\n';\r\n      }\r\n\r\n}\r\n\r\n"
}