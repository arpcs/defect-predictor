{
    "id": 162425319,
    "contestId": 1582,
    "creationTimeSeconds": 1656672762,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1582,
        "index": "E",
        "name": "Pchelyonok and Segments",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1582,
        "members": [
            {
                "handle": "h_squared"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1635069900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 530,
    "memoryConsumedBytes": 368025600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long int ll;\r\ntypedef double dd;\r\ntypedef long double ldd;\r\n#define tst int tttt;cin>>tttt;for(int TTTT=1;TTTT<=tttt;TTTT++)\r\n#define nl cout<<\"\\n\";\r\n#define forn(a,b) for (int ii=a;ii<b;ii++)\r\nconst ll MOD1=1e9+7;\r\nconst ll MOD2=998244353;\r\n#define pii pair<int,int>\r\n#define mp(a,b) make_pair(a,b)\r\n#define pb push_back\r\n#define all(a) a.begin(),a.end()\r\n#define vi vector<int>\r\n#define vll vector<ll>\r\n#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\r\n#define hhh cout<<\"here\"<<endl;\r\n#define pi 3.14159265\r\n\r\nll mod=MOD1;\r\nll po(ll x,ll y,ll mod=mod) {if(y<0)return 0;y%=(mod-1);ll res=1;while(y>0){if(y&1)res=(res*x)%mod;x=(x*x)%mod;y>>=1;}return (res%mod);}\r\nll gcd(ll a, ll b){if(a<b) swap(a,b);if(b==0) return a;return gcd(a%b,b);}\r\n\r\nvoid solve(){\r\n    int n;cin>>n;\r\n    vll a(n+1);forn(1,n+1)cin>>a[ii];\r\n    int l=sqrt(2*n)+1;\r\n    vector<vll>dp(n+1,vll(l));\r\n    vll p(n+1);\r\n    // p[n][1]=a[n];\r\n    dp[n][1]=a[n];\r\n    dp[n][0]=1e9;\r\n    for(int i=1;i<=n;i++){\r\n        p[i]=p[i-1]+a[i];\r\n    }for(int i=n-1;i>=1;i--){\r\n        for(int j=0;j<l;j++){\r\n            dp[i][j]=dp[i+1][j];\r\n            if(i+j<=n && j>0 && p[i+j-1]-p[i-1]<dp[i+j][j-1]){\r\n                dp[i][j]=max(dp[i][j],p[i+j-1]-p[i-1]);\r\n            }\r\n             // cout<<i<<\" \"<<j<<\" --> \"<<dp[i][j];nl;\r\n        }\r\n    }for(int i=l-1;i>=1;i--){\r\n        if(dp[1][i]){\r\n            cout<<i;return;\r\n        }\r\n    }\r\n}\r\nint main(){\r\n    fastio\r\n    // ++*(int*)0;// crash\r\n    // freopen(\"in.txt\",\"r\",stdin);freopen(\"outt.txt\",\"w\",stdout);\r\n    tst\r\n    {\r\n        solve();nl;\r\n    }\r\n}\r\n/*\r\npref[i][j] = pref min sum of subarrays of length j from ending at i\r\ndp[i][k] -> max sum if partition done and index>=i, length k\r\npref[i][j]=pref[i+1][j-1]+a[i];\r\ndp[i][j]=max(dp[i+1][j],dp[i+k][k-1]+p[i][k])\r\n*/\r\n"
}