{
    "id": 162162468,
    "contestId": 1582,
    "creationTimeSeconds": 1656438981,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1582,
        "index": "E",
        "name": "Pchelyonok and Segments",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1582,
        "members": [
            {
                "handle": "hoangkimtien206"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1635069900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 403251200,
    "source": "#define Task \"\"\r\n#define se second\r\n#define fi first\r\n#define pb push_back\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std ;\r\nusing ll = long long ;\r\nusing ld = long double ;\r\n\r\nconst int Maxn = 1e5+100;\r\nconst ll Maxx = 1e15 ;\r\nint a[Maxn] , n ;\r\nll f[Maxn][500] , g[Maxn] , ps[Maxn] ;\r\nvoid Readinput()\r\n{\r\n    cin >> n ;\r\n    for ( int i = 1 ; i <= n ; ++i ) cin >> a[i] ;\r\n    ps[0]=0;\r\n    for ( int i = 1 ; i <= n ; ++i )\r\n    {\r\n        ps[i] = ps[i-1]+a[i];\r\n    }\r\n}\r\n\r\nvoid Solve ()\r\n{\r\n    g[n+1]=-1 ;\r\n    fill(g+1,g+1+n,Maxx) ;\r\n    for ( int i = 1 ; i <= n ; ++i ) for ( int j = 1 ;j <= n ; ++j ) f[i][j] = 0 ;\r\n    for ( int j = 1 ; j <= min(500,n) ; ++j )\r\n    {\r\n        for ( int i = n ; i >= 1 ; --i )\r\n        {\r\n            ll u = i+j-1;\r\n            ll v = i-j+1;\r\n            //cout << u << 'a' << ' ' << v << 'b' << ' ' ;\r\n            if (u>n) continue ;\r\n            if (v<=0) continue;\r\n            ll x = ps[i]-ps[v-1];\r\n            if (g[u]==-1)\r\n            {\r\n                f[i][j] = -1 ;\r\n                continue ;\r\n            }\r\n            if(g[u]<=x&&g[u]!=-1) f[i][j] = -1 ;\r\n            else\r\n            {\r\n                f[i][j] = x ;\r\n            }\r\n        }\r\n        fill(g+1,g+1+n,-1) ;\r\n        for ( int i = n ; i >= 1 ; --i )\r\n        {\r\n            g[i] = max(g[i+1],f[i][j]) ;\r\n        }\r\n        //cout << '\\n' ;\r\n    }\r\n    int ans = 0 ;\r\n    for ( int j = 1 ; j <= n ; ++j )\r\n    {\r\n        for ( int i = 1 ; i <= n ; ++i )\r\n        {\r\n            if (f[i][j]>0)\r\n            {\r\n                ans++;\r\n                break ;\r\n            }\r\n\r\n        }\r\n    }\r\n    /*for ( int j = 1 ;j <= n ; ++j )\r\n    {\r\n        for ( int i = 1 ; i <= n ; ++i )\r\n        {\r\n            cout << f[i][j] << ' ' ;\r\n        }\r\n        cout << '\\n' ;\r\n    }*/\r\n    cout << ans << '\\n' ;\r\n}\r\n\r\nint main ()\r\n{\r\n    ios_base::sync_with_stdio(false) ;\r\n    cin.tie(nullptr) ;\r\n    //freopen(Task\".inp\" , \"r\" , stdin) ;\r\n    //freopen(Task\".out\" , \"w\" , stdout) ;\r\n    int t ;\r\n    cin >> t ;\r\n    while ( t-- )\r\n    {\r\n    Readinput() ;\r\n    Solve () ;\r\n\r\n    }\r\n}\r\n"
}