{
    "id": 98390818,
    "contestId": 1431,
    "creationTimeSeconds": 1605369625,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1431,
        "index": "H",
        "name": "Rogue-like Game",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "*special",
            "brute force",
            "greedy",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1431,
        "members": [
            {
                "handle": "Son"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1605191700
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 1840,
    "memoryConsumedBytes": 68403200,
    "source": "import sun.font.TrueTypeFont\nimport java.util.*\n\nfun main(args : Array<String> ){\n    var tc = 1\n    var ans : Array < Long > = Array( tc ) { i -> 0L }\n    for ( i in 0..tc-1 ){\n        ans[i] = readInput()\n    }\n    println(ans.joinToString(\"\\n\"))\n}\n\nfun abs( a : Int ) : Int {\n    if ( a < 0 ) return a * -1\n    return a\n}\n\nvar C : Array < Array < Long > > = Array(1505){ i -> Array < Long > (1505) { j -> 0L} }\nvar arr : Array < Long > = Array(1505) { i -> 0L }\nvar A : Array < Long > = Array(1505) { i -> 0L }\nvar B : Array < Long > = Array(1505) { i -> 0L }\nvar AB : Array<Pair<Int, Int>> = Array(3005) { i -> Pair(0,0) }\nvar k : Long = 0L\nvar n : Int = 0\nvar m : Int = 0\n\nfun cmp( it : Pair < Int , Int > ) : Long{\n    if ( it.second == 0 ) return A[it.first]\n    else return B[it.first]\n}\n\nfun readInput() : Long {\n    var lst = readline().split(' ')\n    n = lst[0].toInt()\n    m = lst[1].toInt()\n    k = lst[2].toLong()\n    lst = readline().split(' ')\n    A = Array ( n ) { i -> lst[i].toLong()}\n    lst = readline().split(' ')\n    B = Array ( m ) { i -> lst[i].toLong()}\n    AB = Array(n+m) { i -> Pair(0,0) }\n    for ( i in 0..n-1 ){\n        lst = readline().split(' ')\n        arr = Array( m ) { i -> lst[i].toLong() }\n        for ( j in 0..m-1 ){\n            C[i][j] = arr[j]\n        }\n    }\n\n    for ( i in 0..n-1 ){\n        AB[i] = Pair(i,0)\n    }\n    for ( i in 0..m-1 ){\n        AB[i+n] = Pair(i,1)\n    }\n    AB.sortWith( compareBy{cmp(it)})\n\n    for ( i in 0..n-1 ){\n        for ( j in 0..n-1 ){\n            if ( i > 0 && C[i-1][j] > C[i][j] ) {\n                C[i][j] = C[i-1][j]\n            }\n            if ( j > 0 && C[i][j-1] > C[i][j] ){\n                C[i][j] = C[i][j-1]\n            }\n        }\n    }\n\n    var ans : Long = 1000000000000000000L\n    for ( lmt in 1..n+m ){\n        var pa : Int = 0\n        var pb : Int = 0\n        var turn : Long = 0\n        var Step : Long = C[0][0]\n        var sum : Long = 0\n        while ( pa + pb < n+m && cmp(AB[pa + pb ]) <= sum ) {\n            if (AB[pa + pb].second == 0) {\n                pa += 1\n                if ( pa > 0 && pb > 0 && C[pa-1][pb-1] > Step ){\n                    Step = C[pa-1][pb-1]\n                }\n                if ( pa + pb == lmt ){\n                    Step += k\n                }\n            }\n            else {\n                pb += 1\n                if ( pa > 0 && pb > 0 && C[pa-1][pb-1] > Step ){\n                    Step = C[pa-1][pb-1]\n                }\n                if ( pa + pb == lmt ){\n                    Step += k\n                }\n            }\n        }\n        while ( pa + pb < n + m ){\n            var diff : Long = (cmp(AB[pa+pb]) - sum) / Step\n            if ( (cmp(AB[pa+pb])-sum ) % Step != 0L ) diff += 1\n            //println( \"\" + pa + \" \" + pb + \" \" + sum + \" \" + turn + \" \" + diff + \" \" + Step)\n            turn += diff\n            sum += diff * 1L * Step\n            while ( pa + pb < n + m && cmp(AB[pa+pb]) <= sum ){\n                if (AB[pa + pb].second == 0) {\n                    pa += 1\n                    if ( pa > 0 && pb > 0 && C[pa-1][pb-1] > Step ){\n                        Step = C[pa-1][pb-1]\n                    }\n                    if ( pa + pb == lmt ){\n                        Step += k\n                    }\n                }\n                else {\n                    pb += 1\n                    if ( pa > 0 && pb > 0 && C[pa-1][pb-1] > Step ){\n                        Step = C[pa-1][pb-1]\n                    }\n                    if ( pa + pb == lmt ){\n                        Step += k\n                    }\n                }\n            }\n            //println(\"\" + turn + \" \" + sum + \" \" + pa + \" \" + pb )\n        }\n        if ( turn < ans ) ans = turn\n    }\n\n    return ans\n}\n\nfun readline() : String{\n    var line = readLine()\n    return line.toString()\n}"
}