{
    "id": 98218403,
    "contestId": 1431,
    "creationTimeSeconds": 1605198006,
    "relativeTimeSeconds": 6306,
    "problem": {
        "contestId": 1431,
        "index": "H",
        "name": "Rogue-like Game",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "*special",
            "brute force",
            "greedy",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1431,
        "members": [
            {
                "handle": "Bench0310"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1605191700
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 2433,
    "memoryConsumedBytes": 240025600,
    "source": "import kotlin.math.min\r\nimport kotlin.math.max\r\nimport java.util.*\r\n\r\nprivate fun readLn()=readLine()!!\r\nprivate fun readInt()=readLn().toInt()\r\nprivate fun readLong()=readLn().toLong()\r\nprivate fun readStrings()=readLn().split(\" \")\r\nprivate fun readInts()=readStrings().map {it.toInt()}.toMutableList()\r\nprivate fun readLongs()=readStrings().map {it.toLong()}.toMutableList()\r\n\r\nfun main()\r\n{\r\n    var (n,m,k)=readInts()\r\n    var t=mutableListOf<Pair<Long,Long>>() //req,c\r\n    var a=mutableListOf<Long>(0)+readLongs()\r\n    var b=mutableListOf<Long>(0)+readLongs()\r\n    for(i in 1..n)\r\n    {\r\n        var c=mutableListOf<Long>(0)+readLongs()\r\n        for(j in 1..m) t.add(Pair(max(a[i],b[j]),c[j]))\r\n    }\r\n    t.sortBy{it.first}\r\n    var l=0\r\n    var v=mutableListOf<Pair<Long,Long>>()\r\n    while(l<n*m)\r\n    {\r\n        var r=l\r\n        while(r+1<n*m&&t[r+1].first==t[l].first) r++\r\n        var mx=0L\r\n        for(i in l..r) mx=max(mx,t[i].second)\r\n        v.add(Pair(t[l].first,mx))\r\n        l=r+1\r\n    }\r\n    var res:Long=(1L shl 60)\r\n    var sz=v.size\r\n    fun solve():Unit\r\n    {\r\n        var mv:Long=0\r\n        var idx=0\r\n        var score:Long=0\r\n        var mx:Long=0\r\n        while(idx<sz)\r\n        {\r\n            while(idx<sz&&score>=v[idx].first)\r\n            {\r\n                mx=max(mx,v[idx].second)\r\n                idx++\r\n            }\r\n            if(idx==sz) break\r\n            var x:Long=(v[idx].first-score+mx-1)/mx\r\n            score+=(x*mx)\r\n            mv+=x\r\n        }\r\n        res=min(res,mv)\r\n    }\r\n    for(i in 0..sz-1)\r\n    {\r\n        v[i]=Pair(v[i].first,v[i].second+k)\r\n        solve()\r\n        v[i]=Pair(v[i].first,v[i].second-k)\r\n    }\r\n    print(\"$res\\n\")\r\n}"
}