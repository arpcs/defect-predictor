{
    "id": 17575765,
    "contestId": 666,
    "creationTimeSeconds": 1461950275,
    "relativeTimeSeconds": 2575,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "LVA007"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 10,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 826,
    "memoryConsumedBytes": 38604800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int N = (int)3000 + 4;\r\nconst int inf = (int)1e9 + 7;\r\n\r\nint d[N][N];\r\nvector<int> g[N];\r\npair<int, int> p[N][2][3];\r\n\r\nint main() {\r\n#ifndef ONLINE_JUDGE\r\n\tfreopen(\"input.txt\", \"r\", stdin);\r\n\tfreopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n    int n, m;\r\n    scanf(\"%d%d\", &n, &m);\r\n    for (int i = 0; i < m; ++i) {\r\n        int a, b;\r\n        scanf(\"%d%d\", &a, &b);\r\n        --a, --b;\r\n        g[a].push_back(b);\r\n    }\r\n    for (int i = 0; i < n; ++i) {\r\n        for (int j = 0; j < n; ++j) {\r\n            d[i][j] = inf;\r\n        }\r\n        d[i][i] = 0;\r\n        queue<int> q;\r\n        q.push(i);\r\n        for (; !q.empty(); q.pop()) {\r\n            int v = q.front();\r\n            for (int j = 0; j < (int)g[v].size(); ++j) {\r\n                int to = g[v][j];\r\n                if (d[i][to] > d[i][v] + 1) {\r\n                    d[i][to] = d[i][v] + 1;\r\n                    q.push(to);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    int s1 = 0, s2 = 0, s3 = 0, s4 = 0;\r\n    int ans = 0;\r\n    for (int i = 0; i < n; ++i) {\r\n        for (int f = 0; f < 2; ++f) {\r\n            for (int k = 0; k < 3; ++k) {\r\n                p[i][f][k] = make_pair(0, i);\r\n                for (int j = 0; j < n; ++j) {\r\n                    bool q = 1;\r\n                    for (int t = 0; t < k; ++t) {\r\n                        if (p[i][f][t].second == j) {\r\n                            q = 0;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!q) {\r\n                        continue;\r\n                    }\r\n                    if (f == 0 && d[i][j] > p[i][f][k].first && d[i][j] != inf) {\r\n                        p[i][f][k] = make_pair(d[i][j], j);\r\n                    }\r\n                    if (f == 1 && d[j][i] > p[i][f][k].first && d[j][i] != inf) {\r\n                        p[i][f][k] = make_pair(d[j][i], j);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    for (int i = 0; i < n; ++i) {\r\n        for (int j = 0; j < n; ++j) {\r\n            for (int t = 0; t < 3; ++t) {\r\n                for (int k = 0; k < 3; ++k) {\r\n                    if (i != j && p[i][1][t].second != p[j][0][k].second && p[j][0][k].second != i && p[i][1][t].second != j\r\n                        && d[i][j] + p[i][1][t].first + p[j][0][k].first > ans && p[i][1][t].first != 0 && p[j][0][k].first != 0 && d[i][j] != inf) {\r\n                        ans = d[i][j] + p[i][1][t].first + p[j][0][k].first;\r\n                        s1 = p[i][1][t].second, s2 = i, s3 = j, s4 = p[j][0][k].second;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    printf(\"%d %d %d %d\", ++s1, ++s2, ++s3, ++s4);\r\n    return 0;\r\n}"
}