{
    "id": 17579564,
    "contestId": 666,
    "creationTimeSeconds": 1461952430,
    "relativeTimeSeconds": 4730,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "-Wave-"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 15,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 1403,
    "memoryConsumedBytes": 38604800,
    "source": "// * Potatoes: ONLY THROUGH FIRE MAY OUR BODIES BE PURIFIED\r\n#include <iostream>\r\n#include <vector>\r\n#include <cmath>\r\n#include <algorithm>\r\n#include <string>\r\n#include <set>\r\n#include <map>\r\n#include <queue>\r\n#include <stack>\r\n#include <cstring>\r\n#include <cassert>\r\n#include <unordered_set>\r\nusing namespace std;\r\n#define rep(i,a,n) for (int i=a;i<n;i++)\r\n#define per(i,a,n) for (int i=n-1;i>=a;i--)\r\ntypedef long long ll;\r\nconst int N = 3005;\r\n\r\nvector<int> g[N];\r\nint mat[N][N];\r\nbool seen[N];\r\n\r\nvector<int> inb[N], outb[N];\r\n\r\nint main() {\r\n#ifdef LOCAL\r\n    freopen(\"in.txt\", \"r\", stdin);\r\n#endif\r\n    ios_base::sync_with_stdio(false);\r\n    memset(mat, -1, sizeof(mat));\r\n    int n, m;\r\n    cin >> n >> m;\r\n    rep(i, 0, m) {\r\n        int x, y;\r\n        cin >> x >> y;\r\n        g[x - 1].push_back(y - 1);\r\n    }\r\n\r\n    rep(i, 0, n) {\r\n        memset(seen, 0, sizeof(seen));\r\n        //mat[i][i] = 0;\r\n        queue<int> q;\r\n        q.push(i);\r\n        seen[i] = true;\r\n        while(!q.empty()) {\r\n            int cur = q.front();\r\n            q.pop();\r\n            for(auto x : g[cur]) {\r\n                if(mat[i][x] != -1) continue;\r\n                if(cur == i) {\r\n                    mat[i][x] = 1;\r\n                } else {\r\n                    mat[i][x] = mat[i][cur] + 1;\r\n                }\r\n                seen[x] = true;\r\n                q.push(x);\r\n            }\r\n        }\r\n    }\r\n    /*rep(i, 0, n) {\r\n        rep(j, 0, n)cout << mat[i][j] << \"\\t\";\r\n        cout << endl;\r\n    }*/\r\n\r\n    rep(i, 0, n) {\r\n        rep(j, 0, 3) {\r\n            inb[i].push_back(i);\r\n            outb[i].push_back(i);\r\n        }\r\n\r\n        rep(j, 0, n) {\r\n            if(i == j) continue;\r\n            inb[i].push_back(j);\r\n            sort(inb[i].begin(), inb[i].end(), [&](int a, int b) {\r\n                if(a == i) return false;\r\n                if(b == i) return true;\r\n                return mat[a][i] > mat[b][i];\r\n            });\r\n            inb[i].pop_back();\r\n\r\n\r\n            outb[i].push_back(j);\r\n            sort(outb[i].begin(), outb[i].end(), [&](int a, int b) {\r\n                if(a == i) return false;\r\n                if(b == i) return true;\r\n                return mat[i][a] > mat[i][b];\r\n            });\r\n            outb[i].pop_back();\r\n        }\r\n    }\r\n\r\n    //for(auto x : inb[4]) cout << x << \" \";\r\n    //cout << endl;\r\n    int bv = 0;\r\n    vector<int> res(4, 0);\r\n\r\n    rep(a, 0, n) rep(b, 0, n) {\r\n        if(a == b) continue;\r\n        rep(ia, 0, 3) rep(ib, 0, 3) {\r\n            int x = inb[a][ia];\r\n            int y = outb[b][ib];\r\n            if(a == b || a == x || a == y || b == x || b == y || x == y) continue;\r\n            if(mat[a][b] == -1) continue;\r\n            if(mat[x][a] == -1) continue;\r\n            if(mat[b][y] == -1) continue;\r\n\r\n            int cv = mat[inb[a][ia]][a] + mat[a][b] + mat[b][outb[b][ib]];\r\n            if(cv > bv) {\r\n                bv = cv;\r\n                res = {inb[a][ia], a, b, outb[b][ib]};\r\n            }\r\n        }\r\n    }\r\n\r\n    for(auto x : res)cout << (x + 1) << \" \";\r\n    cout << endl;\r\n\r\n    return 0;\r\n}\r\n"
}