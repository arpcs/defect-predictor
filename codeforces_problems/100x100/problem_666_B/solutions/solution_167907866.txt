{
    "id": 167907866,
    "contestId": 666,
    "creationTimeSeconds": 1660246354,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "akcube"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 1465,
    "memoryConsumedBytes": 236441600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds; \r\ntemplate <class T>\r\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\n#define MOD 1000000007\r\nusing ll = long long;\r\nusing dbl = long double;\r\n//#define int ll /* Comment out if overflow sus & change int main to signed main */\r\n\r\ntypedef pair<int, int> pii;\r\ntypedef vector<int> vi;\r\ntypedef vector<vi> vvi;\r\ntypedef vector<pii> vii;\r\ntypedef vector<vii> vvii;\r\n#define ff first\r\n#define ss second\r\n#define pb push_back\r\n#define all(s) s.begin(), s.end()\r\n#define rep(i, a, b) for(int i = a; i < (b); ++i)\r\n#define sz(x) (int)(x).size()\r\n#define tc int t; cin>>t; while(t--)\r\n#define file_read(x,y) freopen(x, \"r\", stdin); \\\r\n                    freopen(y, \"w\", stdout);\r\n#define fightFight cin.tie(0) -> sync_with_stdio(0)\r\n\r\nvoid solve(){\r\n\r\n    int n, m; cin >> n >> m;\r\n    vvi adj(n), radj(n);\r\n    for(int i=0; i < m; i++){\r\n        int u, v; cin >> u >> v; u--, v--;\r\n        adj[u].pb(v);\r\n        radj[v].pb(u);\r\n    }\r\n\r\n    vvi d(n, vi(n, INT_MAX));\r\n    auto comp = [&](int s, vvi &adj, vvii &pdis, bool x = true){\r\n        queue<pii> q;\r\n        vi vis(n);\r\n        q.push({s, 0}); vis[s] = 1;\r\n\r\n        while(!q.empty()){\r\n            auto [v, dis] = q.front(); q.pop();\r\n            if(x) d[s][v] = dis;\r\n            pdis[s].push_back({dis, v});\r\n            for(auto &to : adj[v])\r\n                if(!vis[to]){\r\n                    vis[to] = true;\r\n                    q.push({to, dis+1});\r\n                }\r\n        }\r\n    };\r\n\r\n    vvii f(n), rf(n);\r\n    for(int v=0; v < n; v++){\r\n        comp(v, adj, f);\r\n        comp(v, radj, rf, false);\r\n        sort(all(f[v]), greater<>()); f[v].pop_back();\r\n        sort(all(rf[v]), greater<>()); rf[v].pop_back();\r\n    }\r\n\r\n    int mdis = 0;\r\n    vi ans;\r\n    for(int b=0; b < n; b++){\r\n        for(int c=0; c < n; c++){\r\n            if(b == c or d[b][c] == INT_MAX) continue;\r\n            int cdis1 = d[b][c], cdis2 = d[b][c], a1, a2, d1, d2;\r\n            a1 = a2 = d1 = d2 = -1;\r\n\r\n            // op1\r\n            for(auto &[dis, v] : rf[b])\r\n                if(v != c) { cdis1 += dis, a1 = v; break; }\r\n            for(auto &[dis, v] : f[c])\r\n                if(v != b and v != a1) { cdis1 += dis, d1 = v; break; }\r\n\r\n            // op2\r\n            for(auto &[dis, v] : f[c])\r\n                if(v != b) { cdis2 += dis, d2 = v; break; }\r\n            for(auto &[dis, v] : rf[b])\r\n                if(v != c and v != d2) { cdis2 += dis, a2 = v; break; }\r\n            \r\n            if(cdis1 > mdis and (a1 != -1 and d1 != -1)){\r\n                mdis = cdis1;\r\n                ans = {a1, b, c, d1};\r\n            }\r\n            if(cdis2 > mdis and (a2 != -1 and d2 != -1)){\r\n                mdis = cdis2;\r\n                ans = {a2, b, c, d2};\r\n            }\r\n        }\r\n    }\r\n\r\n    for(auto &v : ans) cout << v + 1 << \" \";\r\n    cout << endl;\r\n}\r\n\r\nsigned main(){\r\n    fightFight;\r\n    solve();   \r\n}"
}