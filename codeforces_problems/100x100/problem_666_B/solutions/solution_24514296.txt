{
    "id": 24514296,
    "contestId": 666,
    "creationTimeSeconds": 1486506960,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "Sandmann"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 2651,
    "memoryConsumedBytes": 354713600,
    "source": "#include <iostream>\r\n#include <fstream>\r\n#include <string>\r\n#include <vector>\r\n#include <list>\r\n#include <set>\r\n#include <map>\r\n#include <cmath>\r\n#include <stack>\r\n#include <queue>\r\n#include <exception>\r\n#include <numeric>\r\n#include <algorithm> \r\n#include <sstream>\r\n#include <cstring>\r\nusing namespace std;\r\n \r\ntypedef long long lo;\r\ntypedef vector< vector<long long> > vvl;\r\ntypedef vector< long long> vl;\r\ntypedef pair<lo, lo> ll;\r\ntypedef vector< pair<lo, lo> > vll;\r\ntypedef vector< vll > vvll;\r\ntypedef pair<lo, pair<lo, lo> > lll;\r\ntypedef vector<lll> vlll;\r\ntypedef vector<vvl> vvvl;\r\ntypedef vector<set<lo> > vs;\r\ntypedef map<lo, map<lo, lo> > mm;\r\n\r\n#define N 3100\r\n\r\n\r\nset<lo> g[N], rg[N];\r\nvl dist[N], rdist[N];\r\nlo cost[N][N], rcost[N][N];\r\nlo n, m;\r\n\r\nvoid proc(set<lo> *g, lo start, vl *dist, lo *cost){\r\n\tfor (lo i=0;i< n;i++)\r\n\t\tcost[i]=-1;\r\n\tcost[start]=0;\r\n\tdeque<lo> q;\r\n\tq.push_back(start);\r\n\twhile (!q.empty()){\r\n\t\tlo v=q.front(); q.pop_front();\r\n\t\tfor (set<lo>::iterator it=g[v].begin();it!=g[v].end();it++)\r\n\t\t\tif (cost[*it]==-1) {\r\n\t\t\t\tcost[*it]=cost[v]+1;\r\n\t\t\t\tq.push_back(*it);\r\n\t\t\t\tdist[start].push_back(*it);\r\n\t\t\t}\r\n\t}\r\n\treverse(dist[start].begin(), dist[start].end());\r\n\tdist[start].resize(3);\r\n}\r\n\r\nlo curr[4];\r\nlo getDist(lo *p){\r\n\tlo acc=0;\r\n\tfor (lo i=1;i<4;\r\n\t\ti++)\r\n\t\tif (cost[p[i-1]][p[i]]==-1) return -1;\r\n\t\telse acc+=cost[p[i-1]][p[i]];\r\n\treturn acc;\r\n}\r\n\r\nint main() {\r\n\t// freopen(\"input.txt\",\"r\", stdin);\r\n\t// freopen(\"output.txt\",\"w\",stdout);\r\n\tcin >> n >> m;\r\n\tfor (lo i=0;i<m;i++){\r\n\t\tlo u, v;\r\n\t\tcin >>  u>> v;\r\n\t\tu--;v--;\r\n\t\tif (u==v) continue;\r\n\t\tg[u].insert(v);\r\n\t\trg[v].insert(u);\t\t\r\n\t}\r\n\tfor (lo i=0;i< n;i++){\r\n\t\tproc(g, i, dist, cost[i]);\r\n\t\tproc(rg, i, rdist, rcost[i]);\r\n\t}\r\n\tlo ans[4];\r\n\tlo ansval=-1;\r\n\tfor (lo b=0;b< n;b++)\r\n\t\tfor (lo c=0;c< n;c++) \r\n\t\t\tfor (vl::iterator a=rdist[b].begin();a!=rdist[b].end();a++)\r\n\t\t\t\tfor (vl::iterator d=dist[c].begin();d!=dist[c].end();d++){\r\n\t\t\t\t\tif (*a==b || *a == c || *a == *d || b==c || b==*d || c==*d) continue;\r\n\t\t\t\t\tcurr[0]=(*a);\r\n\t\t\t\t\tcurr[1]=(b);\r\n\t\t\t\t\tcurr[2]=(c);\r\n\t\t\t\t\tcurr[3]=(*d);\r\n\t\t\t\t\tif (getDist(curr)==-1) continue;\r\n\t\t\t\t\tif (ansval ==-1 || getDist(curr) > getDist(ans)){\r\n\t\t\t\t\t\tmemcpy(ans, curr, sizeof curr);\r\n\t\t\t\t\t\tansval=getDist(curr);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\tfor (lo i=0;i<4;i++)\r\n\t\tcout << ans[i]+1 << \" \";\r\n\treturn 0;\r\n}"
}