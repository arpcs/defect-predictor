{
    "id": 17576472,
    "contestId": 666,
    "creationTimeSeconds": 1461950629,
    "relativeTimeSeconds": 2928,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "Swistakk"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 8,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 74752000,
    "source": "#include <bits/stdc++.h>\n#define MP make_pair\n#define PB push_back\n#define int long long\n#define st first\n#define nd second\n#define rd third\n#define FOR(i, a, b) for(int i =(a); i <=(b); ++i)\n#define RE(i, n) FOR(i, 1, n)\n#define FORD(i, a, b) for(int i = (a); i >= (b); --i)\n#define REP(i, n) for(int i = 0;i <(n); ++i)\n#define VAR(v, i) __typeof(i) v=(i)\n#define FORE(i, c) for(VAR(i, (c).begin()); i != (c).end(); ++i)\n#define ALL(x) (x).begin(), (x).end()\n#define SZ(x) ((int)(x).size())\nusing namespace std;\ntemplate<typename TH> void _dbg(const char* sdbg, TH h) { cerr<<sdbg<<\"=\"<<h<<\"\\n\"; }\ntemplate<typename TH, typename... TA> void _dbg(const char* sdbg, TH h, TA... t) {\n  while(*sdbg != ',')cerr<<*sdbg++; cerr<<\"=\"<<h<<\",\"; _dbg(sdbg+1, t...);\n}\n#ifdef LOCAL\n#define debug(...) _dbg(#__VA_ARGS__, __VA_ARGS__)\n#define debugv(x) {{cerr <<#x <<\" = \"; FORE(itt, (x)) cerr <<*itt <<\", \"; cerr <<\"\\n\"; }}\n#else\n#define debug(...) (__VA_ARGS__)\n#define debugv(x)\n#define cerr if(0)cout\n#endif\n#define make(type, x) type x; cin>>x;\n#define make2(type, x, y) type x, y; cin>>x>>y;\n#define make3(type, x, y, z) type x, y, z; cin>>x>>y>>z;\n#define make4(type, x, y, z, t) type x, y, z, t; cin>>x>>y>>z>>t;\n#define next ____next\n#define prev ____prev\n#define left ____left\n#define hash ____hash\ntypedef long long ll;\ntypedef long double LD;\ntypedef pair<int, int> PII;\ntypedef pair<ll, ll> PLL;\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<ll> VLL;\ntypedef vector<pair<int, int> > VPII;\ntypedef vector<pair<ll, ll> > VPLL;\n\ntemplate<class C> void mini(C&a4, C b4){a4=min(a4, b4); }\ntemplate<class C> void maxi(C&a4, C b4){a4=max(a4, b4); }\ntemplate<class T1, class T2>\nostream& operator<< (ostream &out, pair<T1, T2> pair) { return out << \"(\" << pair.first << \", \" << pair.second << \")\";}\ntemplate<class A, class B, class C> struct Triple { A first; B second; C third;\n  bool operator<(const Triple& t) const { if (st != t.st) return st < t.st; if (nd != t.nd) return nd < t.nd; return rd < t.rd; } };\ntemplate<class T> void ResizeVec(T&, vector<int>) {}\ntemplate<class T> void ResizeVec(vector<T>& vec, vector<int> sz) {\n  vec.resize(sz[0]); sz.erase(sz.begin()); if (sz.empty()) { return; }\n  for (T& v : vec) { ResizeVec(v, sz); }\n}\ntypedef Triple<int, int, int> TIII;\ntemplate<class A, class B, class C>\nostream& operator<< (ostream &out, Triple<A, B, C> t) { return out << \"(\" << t.st << \", \" << t.nd << \", \" << t.rd << \")\"; }\ntemplate<class T> ostream& operator<<(ostream& out, vector<T> vec) { out<<\"(\"; for (auto& v: vec) out<<v<<\", \"; return out<<\")\"; }\n\nconst int N = 3e3 + 5;\nint dis[N][N];\nint wh_to[N];\nint wh_from[N];\nint len_to[N];\nint len_from[N];\nVI slo[N];\nconst int kInf = 1e9;\n#undef int\nint main() {\n#define int long long\n\n  ios_base::sync_with_stdio(0);\n  cout << fixed << setprecision(10);\n  cerr << fixed << setprecision(10);\n  cin.tie(0);\n  //double beg_clock = 1.0 * clock() / CLOCKS_PER_SEC;\n  \n  int n, m;\n  cin>>n>>m;\n  RE (i, m) {\n    int a, b;\n    cin>>a>>b;\n    slo[a].PB(b);\n  }\n  int best = 0;\n  int k0 = -1, k1, k2, k3;\n  RE (i, n) {\n    wh_to[i] = wh_from[i] = 0;\n  }\n  RE (i, n) {\n    RE (j, n) {\n      dis[i][j] = kInf;\n    }\n    dis[i][i] = 0;\n    vector<int> que;\n    que.PB(i);\n    for (int ii = 0; ii < SZ(que); ii++) {\n      int v = que[ii];\n      for (auto nei : slo[v]) {\n        if (dis[i][nei] == kInf) {\n          dis[i][nei] = dis[i][v] + 1;\n          if (dis[i][nei] > len_from[i]) {\n            len_from[i] = dis[i][nei];\n            wh_from[i] = nei;\n          }\n          if (dis[i][nei] > len_to[nei]) {\n            len_to[nei] = dis[i][nei];\n            wh_to[nei] = i;\n          }\n          que.PB(nei);\n        }\n      }\n    }\n  }\n  RE (i, n) {\n    RE (j, n) {\n      cerr<<dis[i][j]<<\" \";\n      int cand = len_to[i] + dis[i][j] + len_from[j];\n      if (cand < kInf && cand > best) {\n        best = cand;\n        k0 = wh_to[i];\n        k1 = i;\n        k2 = j;\n        k3 = wh_from[j];\n      }\n    }\n    cerr<<endl;\n  }\n  debug(best);\n  cout<<k0<<\" \"<<k1<<\" \"<<k2<<\" \"<<k3<<endl;\n    \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  return 0;\n}\n"
}