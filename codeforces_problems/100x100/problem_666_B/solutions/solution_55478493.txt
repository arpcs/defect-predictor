{
    "id": 55478493,
    "contestId": 666,
    "creationTimeSeconds": 1560308105,
    "relativeTimeSeconds": 5705,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "Torta"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1560302400
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 2121,
    "memoryConsumedBytes": 234393600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int MAXN = 3005;\r\n\r\nint n, m, ui, vi, d[MAXN][MAXN];\r\nvector <int> g[MAXN];\r\nvector < pair <int, int> > A[MAXN], B[MAXN];\r\n\r\nint main(){\r\n    scanf(\"%d %d\", &n, &m);\r\n    for(int i = 0; i < m; i++){\r\n        scanf(\"%d %d\", &ui, &vi);\r\n        ui--, vi--;\r\n\r\n        g[ui].push_back(vi);\r\n    }\r\n\r\n    for(int i = 0; i < n; i++){\r\n        queue <int> q;\r\n\r\n        for(int j = 0; j < n; j++){\r\n            if(j == i)d[i][j] = 0;\r\n            else d[i][j] = -1;\r\n        }\r\n        q.push(i);\r\n\r\n        while(!q.empty()){\r\n            int u = q.front();\r\n            q.pop();\r\n\r\n            for(int v : g[u]){\r\n                if(d[i][v] == -1){\r\n                    d[i][v] = d[i][u] + 1;\r\n                    q.push(v);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    for(int i = 0; i < n; i++){\r\n        for(int j = 0; j < n; j++){\r\n            if(j == i)continue;\r\n            if(d[i][j] != -1){\r\n                A[i].push_back(make_pair(d[i][j], j));\r\n            }\r\n            if(d[j][i] != -1){\r\n                B[i].push_back(make_pair(d[j][i], j));\r\n            }\r\n        }\r\n        sort(A[i].rbegin(), A[i].rend());\r\n        sort(B[i].rbegin(), B[i].rend());\r\n    }\r\n\r\n    int mx = -1;\r\n    vector <int> r;\r\n\r\n    for(int i = 0; i < n; i++)\r\n    for(int j = 0; j < n; j++){\r\n        if(i == j)continue;\r\n        if(d[i][j] == -1)continue;\r\n\r\n        for(int a = 0; a < min(3, (int)A[j].size()); a++)\r\n        for(int b = 0; b < min(3, (int)B[i].size()); b++){\r\n            int x = A[j][a].second, y = B[i][b].second;\r\n            if(x == i)continue;\r\n            if(y == j)continue;\r\n            if(x == y)continue;\r\n\r\n            if(d[y][i] + d[i][j] + d[j][x] > mx){\r\n                mx = d[y][i] + d[i][j] + d[j][x];\r\n\r\n                r.clear();\r\n                r.push_back(y);\r\n                r.push_back(i);\r\n                r.push_back(j);\r\n                r.push_back(x);\r\n            }\r\n        }\r\n    }\r\n\r\n    for(int i = 0; i < r.size(); i++){\r\n        if(i > 0)printf(\" \");\r\n        printf(\"%d\", r[i] + 1);\r\n    }\r\n    printf(\"\\n\");\r\n\r\n    return 0;\r\n}\r\n"
}