{
    "id": 204736911,
    "contestId": 666,
    "creationTimeSeconds": 1683376037,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "Wolowitz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 36147200,
    "source": "#include<bits/stdc++.h>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n \r\n#define ll long long int\r\n \r\n#define pb push_back\r\n#define mp make_pair\r\n#define xx first\r\n#define yy second\r\n \r\n#define pii pair <int, int >\r\n#define pll pair < ll, ll >\r\n#define xx first\r\n#define yy second\r\n#define vi vector < int >\r\n#define vl vector < ll >\r\n#define vp vector < pii >\r\n \r\n  \r\n#define fe(i, c, n) for(int i = c; i <= n; i++)\r\n#define fr(i, n, c) for(int i = n; i >= c; i--)\r\n \r\n#define be(a) a.begin(), a.end()\r\n#define mem(a) memset(a, 0, sizeof(a))\r\n#define memn(a) memset(a, -1, sizeof(a))\r\n#define S \" \"\r\n#define N \"\\n\"\r\n \r\nbool checkBit(ll n, ll i){ return (n&(1LL<<i)); }\r\nll setBit(ll n, ll i){ return (n|(1LL<<i)); }\r\nll resetBit(ll n, ll i){ return (n&(~(1LL<<i))); }\r\n\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x) (cout<<(#x)<<':'<<(x)<<'\\n')\r\n#else\r\n#define debug(x)\r\n#endif\r\n \r\n#define fast ios_base :: sync_with_stdio(0); cin.tie(0); cout.tie(0)\r\n\r\ntemplate<typename temp>using ordered_set = tree<temp, null_type, less_equal<temp>, rb_tree_tag,tree_order_statistics_node_update>;\r\n//order_of_key(k)  : Number of items strictly smaller than k .\r\n//find_by_order(k) : K-th element in a set (counting from zero).//*(ost.find_by_order(k))\r\n\r\nconst ll MX = 1e18;\r\nconst ll mod = 1e9 + 7;\r\n\r\n#define SZ 3003\r\n\r\nvi v[SZ];\r\n\r\nint dis[SZ][SZ];\r\n\r\nvoid dfs(int u) {\r\n    priority_queue < pii, vp, greater<pii>> q;\r\n    q.push({0, u});\r\n    dis[u][u] = 0;\r\n    while(!q.empty()) {\r\n        int x = q.top().yy;\r\n        q.pop();\r\n        for(auto y : v[x]) {\r\n            if(dis[u][x] + 1 < dis[u][y]) {\r\n                dis[u][y] = dis[u][x] + 1;\r\n                q.push({dis[u][y], y});\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvoid solve() {\r\n    int n, m; cin >> n >> m;\r\n    fe(i, 1, n) {\r\n        int x, y; cin >> x >> y;\r\n        v[x].pb(y);\r\n    }\r\n    fe(i, 1, n) {\r\n        fe(j, 1, n) {\r\n            dis[i][j] = 1e9;\r\n        }\r\n    }\r\n\r\n    fe(i, 1, n) {\r\n        dfs(i);\r\n    }\r\n\r\n    vp fst[n + 10], en[n + 10];\r\n\r\n    for(int i = 1; i <= n; i++) {\r\n        for(int j = 1; j <= n; j++) {\r\n            en[i].pb({dis[i][j], j});\r\n        }\r\n        sort(be(en[i]));\r\n        reverse(be(en[i]));\r\n    }\r\n\r\n    for(int i = 1; i <= n; i++) {\r\n        for(int j = 1; j <= n; j++) {\r\n            if(dis[j][i] != 1e9 and i != j) {\r\n                fst[i].pb({dis[j][i], j});\r\n            }\r\n        }\r\n        sort(be(fst[i]));\r\n        reverse(be(fst[i]));\r\n    }\r\n    int ans = 0;\r\n    vi cnt = {0, 0, 0, 0};\r\n    for(int i = 1; i <= n; i++) {\r\n        for(int j = 1; j <= n; j++) {\r\n            if(i == j) continue;\r\n            if(dis[i][j] == 1e9) continue;\r\n            int lm1 = min(2, (int)fst[i].size());\r\n            for(int a = 0; a <= lm1; a++) {\r\n                int val1 = fst[i][a].xx;\r\n                int ind1 = fst[i][a].yy;\r\n                if(val1 == -1 or ind1 == i or ind1 == j or ind1 == -1) continue;\r\n                int lm2 = min(2, (int)en[i].size());\r\n                for(int b = 0; b <= lm2; b++) {\r\n                    int val2 = en[j][b].xx;\r\n                    int ind2 = en[j][b].yy;\r\n                    if(val2 == -1 or ind2 == -1 or ind2 == i or ind2 == j or ind2 == -1) continue;\r\n                    if(val1 + val2 + dis[i][j] > ans) {\r\n                        ans = val1 + val2 + dis[i][j];\r\n                        cnt = {ind1, i, j, ind2};\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    fe(i, 0, 3) {\r\n        cout << cnt[i] << S;\r\n    }\r\n}\r\n\r\nint main() {\r\n    // FILE;\r\n    fast;\r\n    // int t; cin >> t; while(t--)\r\n    solve();\r\n}"
}