{
    "id": 180058754,
    "contestId": 666,
    "creationTimeSeconds": 1667897762,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "yzy1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 18,
    "timeConsumedMillis": 592,
    "memoryConsumedBytes": 36864000,
    "source": "// LUOGU_RID: 93267721\n#include <algorithm>\n#include <array>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <chrono>\n#include <cmath>\n#include <csetjmp>\n#include <csignal>\n#include <cstddef>\n#include <cstdint>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <forward_list>\n#include <fstream>\n#include <functional>\n#include <initializer_list>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <random>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <tuple>\n#include <unordered_map>\n#include <unordered_set>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double lf;\n\n// #define int ll\n#define rep(i, f, t) for (int i = (f), ed##i = (t); i <= ed##i; ++i)\n#define re(i, t) rep (i, 1, t)\n#define per(i, t, f) for (int i = (t), ed##i = (f); i >= ed##i; --i)\n#define ste(i, f, t, s) for (int i = (f), ed##i = (t); i <= ed##i; i += s)\n#define each(i, x) for (auto &&i : (x))\n#define nxt(i, f, g) for (int i = g.h[f]; i; i = g.e[i].n)\n#define umod(x) ((x) >= mo && ((x) -= mo))\n#define dmod(x) ((x) < 0 && ((x) += mo))\n#define y1 y1__\n#define fio(x) (freopen(x \".in\", \"r\", stdin), freopen(x \".out\", \"w\", stdout))\n\n__attribute__((always_inline)) inline void __print(signed x) { cerr << x; }\n__attribute__((always_inline)) inline void __print(long x) { cerr << x; }\n__attribute__((always_inline)) inline void __print(long long x) { cerr << x; }\n__attribute__((always_inline)) inline void __print(unsigned x) { cerr << x; }\n__attribute__((always_inline)) inline void __print(unsigned long x) { cerr << x; }\n__attribute__((always_inline)) inline void __print(unsigned long long x) { cerr << x; }\n__attribute__((always_inline)) inline void __print(float x) { cerr << x; }\n__attribute__((always_inline)) inline void __print(double x) { cerr << x; }\n__attribute__((always_inline)) inline void __print(long double x) { cerr << x; }\n__attribute__((always_inline)) inline void __print(char x) { cerr << '\\'' << x << '\\''; }\n__attribute__((always_inline)) inline void __print(const char *x) { cerr << '\\\"' << x << '\\\"'; }\n__attribute__((always_inline)) inline void __print(const string &x) { cerr << '\\\"' << x << '\\\"'; }\n__attribute__((always_inline)) inline void __print(bool x) { cerr << (x ? \"true\" : \"false\"); }\n\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &x) {\n  cerr << '{', __print(x.first), cerr << ',', __print(x.second), cerr << '}';\n}\ntemplate <typename T>\nvoid __print(const T &x) {\n  int f = 0;\n  cerr << '{';\n  for (auto &i : x) cerr << (f++ ? \",\" : \"\"), __print(i);\n  cerr << \"}\";\n}\n__attribute__((always_inline)) inline void _print() { cerr << \"]\\033[0m\\n\"; }\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {\n  __print(t);\n  if (sizeof...(v)) cerr << \", \";\n  _print(v...);\n}\n#ifndef ONLINE_JUDGE\n#define dbg(x...) cerr << \"\\033[34m[\" << #x << \"] = [\", _print(x)\n#else\n#define dbg(x...)\n#endif\n\ntemplate <class T, class E>\n__attribute__((always_inline)) inline void up(T &x, E &&y) {\n  if (x < y) x = y;\n}\ntemplate <class T, class E>\n__attribute__((always_inline)) inline void down(T &x, E &&y) {\n  if (y < x) x = y;\n}\n\nconst int N = 3000 + 9;\nconst int B = 5;\nint n, m, dis[N][N], ans;\nvector<int> e[N], rnki[N], rnko[N], Ans;\n\ninline void Bfs(int F) {\n  dis[F][F] = 0;\n  queue<int> q;\n  q.push(F);\n  while (q.size()) {\n    int f = q.front();\n    q.pop();\n    each (t, e[f]) {\n      if (dis[F][f] + 1 < dis[F][t]) dis[F][t] = dis[F][f] + 1, q.push(t);\n    }\n  }\n}\n\ninline void Ck(int a, int b, int c, int d) {\n  // dbg(a, b, c, d);\n  if (a == c || a == d || b == d) return;\n  int res = dis[a][b] + dis[b][c] + dis[c][d];\n  if (res > ans) ans = res, Ans = {a, b, c, d};\n}\n\nsigned main() {\n  ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n  cin >> n >> m;\n  re (i, m) {\n    int f, t;\n    cin >> f >> t;\n    e[f].push_back(t);\n  }\n  memset(dis, 0x3f, sizeof dis);\n  re (i, n) Bfs(i);\n  re (i, n) {\n    re (j, n) {\n      if (dis[j][i] != 0x3f3f3f3f) rnki[i].push_back(j);\n      if (dis[i][j] != 0x3f3f3f3f) rnko[i].push_back(j);\n      sort(rnki[i].begin(), rnki[i].end(), [&](int x, int y) { return dis[x][i] > dis[y][i]; });\n      sort(rnko[i].begin(), rnko[i].end(), [&](int x, int y) { return dis[i][x] > dis[i][y]; });\n      while (rnki[i].size() > B) rnki[i].pop_back();\n      while (rnko[i].size() > B) rnko[i].pop_back();\n    }\n  }\n  re (i, n)\n    re (j, n)\n      if (i != j && dis[i][j] != 0x3f3f3f3f)\n        each (k, rnki[i])\n          each (l, rnko[j]) Ck(k, i, j, l);\n  // cout << ans << '\\n';\n  // dbg(ans);\n  each (x, Ans) cout << x << ' ';\n  cout << '\\n';\n  return 0;\n}\n"
}