{
    "id": 96862922,
    "contestId": 976,
    "creationTimeSeconds": 1603806117,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 976,
        "index": "C",
        "name": "Nested Segments",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 976,
        "members": [
            {
                "handle": "_Isheeka_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1525099200
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 17612800,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long int\r\n#define pi 3.141592653\r\n#define pb push_back\r\n#define mp make_pair\r\n#define all(a) a.begin(), a.end()\r\n#define F first\r\n#define S second\r\n#define MAX 100005\r\nusing namespace std;\r\nll count(ll n)\r\n{\r\n    ll c=0;\r\n    while(n!=0)\r\n    {\r\n        \r\n        c++;\r\n        n=n/10;\r\n    }\r\n    \r\n    return c;\r\n}\r\nint isPrime(ll n) \r\n{ \r\n    // Corner case \r\n    if (n <= 1) \r\n        return 0; \r\n  \r\n    // Check from 2 to n-1 \r\n    for (ll i = 2; i < n; i++) \r\n        if (n % i == 0) \r\n            return 0; \r\n  \r\n    return 1; \r\n} \r\nll modFact(ll n, ll p) \r\n{ \r\n    if (n >= p) \r\n        return 0; \r\n  \r\n    ll result = 1; \r\n    for (ll i = 1; i <= n; i++) \r\n        result = (result * i) % p; \r\n  \r\n    return result; \r\n} \r\nll divisor(ll n)\r\n{   ll h=1;\r\n    for(ll i=2;i<=sqrt(n);i++)\r\n    {\r\n        if(n%i==0)\r\n        {\r\n            h=i;\r\n            break;\r\n        }\r\n    }\r\n    return h;\r\n}\r\nbool sortbysec(const pair<ll,ll> &a, \r\n              const pair<ll,ll> &b) \r\n{ \r\n    return (a.second < b.second); \r\n} \r\n const int logN = 20;\r\nint f[MAX][logN],mval[MAX][logN],depth[MAX];\r\nvector<pair<int,int> >v[100005];\r\nvoid dfs(int u)\r\n{\r\n\tfor(int i=1;i<logN;i++)\r\n\t{\r\n\t\tf[u][i]=f[f[u][i-1]][i-1];\r\n\t\tmval[u][i]=max(mval[u][i-1],mval[f[u][i-1]][i-1]);\r\n\t}\r\n\tfor(auto i:v[u])\r\n\t{\r\n\t\tint ver=i.first,w=i.second;\r\n\t\tif(!depth[ver])\r\n\t\t{\r\n\t\t\tf[ver][0]=u;\r\n\t\t\tmval[ver][0]=w;\r\n\t\t\tdepth[ver]=depth[u]+1;\r\n\t\t\tdfs(ver);\r\n\t\t}\r\n\t}\r\n}\r\nll sum(ll x)\r\n{\r\n   ll s = 0;\r\n   while (x != 0) {\r\n      s = s + x % 10;\r\n      x = x / 10;\r\n   }\r\n  return s;\r\n}\r\n\r\n\r\nll fact(ll n); \r\n\r\nll nCr(ll n, ll r) \r\n{ \r\n\treturn fact(n) / (fact(r) * fact(n - r)); \r\n} \r\n\r\n// Returns factorial of n \r\nll fact(ll n) \r\n{ \r\n\tint res = 1; \r\n\tfor (int i = 2; i <= n; i++) \r\n\t\tres = res * i; \r\n\treturn res; \r\n} \r\n\r\n\r\n\r\n  int main()\r\n{\r\nll n;\r\ncin>>n;\r\nvector<pair<ll,ll>>v;\r\nwhile(n--)\r\n{\r\n    ll x,y;\r\n    cin>>x>>y;\r\n    v.pb(mp(x,y));\r\n    \r\n}\r\nsort(all(v));\r\nll m=0;\r\nll mi=-1;\r\nll f=0;\r\nfor(ll i=0;i<v.size();i++)\r\n{\r\n    if(v[i].S>m)\r\n    {\r\n        m=v[i].S;\r\n        mi=i+1;\r\n    }\r\n    if(v[i].S<=m&&i+1!=mi)\r\n    {\r\n        cout<<mi<<\" \"<<i+1;\r\n        f=1;\r\n        break;\r\n    }\r\n}\r\nif(f==0)\r\ncout<<-1<<\" \"<<-1;\r\n\r\n    return 0;\r\n}"
}