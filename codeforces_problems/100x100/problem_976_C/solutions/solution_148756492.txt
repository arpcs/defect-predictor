{
    "id": 148756492,
    "contestId": 976,
    "creationTimeSeconds": 1646715915,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 976,
        "index": "C",
        "name": "Nested Segments",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 976,
        "members": [
            {
                "handle": "CrowdedTunic8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1525099200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 17,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 3584000,
    "source": "#include <algorithm>\r\n#include <array>\r\n#include <bitset>\r\n#include <cassert>\r\n#include <chrono>\r\n#include <cmath>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <functional>\r\n#include <iomanip>\r\n#include <iostream>\r\n#include <map>\r\n#include <numeric>\r\n#include <queue>\r\n#include <random>\r\n#include <set>\r\n#include <stack>\r\n#include <string>\r\n#include <utility>\r\n#include <vector>\r\n#include <queue>\r\n\r\n/* #include <ext/pb_ds/assoc_container.hpp> */\r\n/* #include <ext/pb_ds/tree_policy.hpp> */\r\nusing namespace std;\r\n/* using namespace __gnu_pbds; */\r\n\r\n#define endl '\\n'\r\n#define sz(x) (int)x.size()\r\n#define all(x) begin(x), end(x)\r\n#define rall(x) (x).rbegin(), (x).rend()\r\n#define ar array\r\n#define vt vector\r\n\r\n#define for_base(i, a, b, x) for (int i=((a)<(b))?(a):(a)-1; ((a)<(b))?i<(b):i>=(b); ((a)<(b))?i+=(x):i-=(x))\r\n#define FOR1(a) for_base(i, 0, a, 1)\r\n#define FOR2(i, a) for_base(i, 0, a, 1)\r\n#define FOR3(i, a, b) for_base(i, a, b, 1)\r\n#define FOR4(i, a, b, x) for_base(i, a, b, x)\r\n#define FIFTH(a, b, c, d, e, ...) e\r\n#define FOR(...) FIFTH(__VA_ARGS__, FOR4, FOR3, FOR2, FOR1)(__VA_ARGS__)\r\n#define EACH(a, x) for (auto& a: x)\r\n#define FIT(i, x) for (auto i=(x).begin(); i!=(x).end(); ++i)\r\n#define RIT(i, x) for (auto i=(x).rbegin(); i!=(x).rend(); ++i)\r\n#define finish(...) return void(print(__VA_ARGS__))\r\n\r\ntypedef long long ll;\r\n\r\ntemplate<class T> using min_queue = priority_queue<T, vector<T>, greater<T> >;\r\n\r\n/* find_by_order(x) => returns an iterator to the element at a given position */\r\n/* order_of_key(x) => returns the position of a given element */\r\n/* template<class T> using oset = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>; */\r\n\r\ntemplate<class T> bool umin(T& a, const T& b) { return b < a ? a = b, 1 : 0; }\r\ntemplate<class T> bool umax(T& a, const T& b) { return a < b ? a = b, 1 : 0; }\r\n\r\ntemplate<class T> void read(T& x) { cin >> x; }\r\ntemplate<class H, class T> void read(pair<H, T>& p) { cin >> p.first >> p.second; }\r\ntemplate<class A, size_t S> void read(array<A, S>& x) { EACH(a, x) read(a); }\r\ntemplate<class T> void read(vector<T>& v) { EACH(i, v) read(i); }\r\ntemplate<class H, class... T> void read(H& h, T&... t) { read(h); read(t...); }\r\n\r\ntemplate<class H, class T> ostream &operator<<(ostream &o, pair<H, T> &p) { o << p.first << \" \" << p.second; return o; }\r\ntemplate<class H, class T> ostream &operator<<(ostream &o, vector<pair<H, T> > &v) { string s; EACH(i, v) o << s << i, s = \"\\n\"; return o; }\r\ntemplate<class T, size_t S> ostream &operator<<(ostream &o, array<T, S> &a) { string s; EACH(i, a) o << s << i, s = \" \"; return o; }\r\ntemplate<class T, size_t S> ostream &operator<<(ostream &o, vector<array<T, S> > &v) { string s; EACH(i, v) o << s << i, s = \"\\n\"; return o; }\r\ntemplate<class T> ostream &operator<<(ostream &o, vector<T> &v) { string s; EACH(i, v) o << s << i, s = \" \"; return o; }\r\ntemplate<class T> ostream &operator<<(ostream &o, vector<vector<T> > &v) { string s; EACH(i, v) o << s << i, s = \"\\n\"; return o; }\r\ntemplate<class T> void write(T x) { cout << x; }\r\ntemplate<class H, class... T> void write(const H &h, const T &...t) { write(h); write(t...); }\r\nvoid print() { write('\\n'); }\r\ntemplate<class H, class... T> void print(const H &h, const T &...t) { write(h); if (sizeof...(t)) write(' '); print(t...); }\r\n\r\nvoid DBG() { cerr << \"]\" << endl; }\r\ntemplate<class H, class... T> void DBG(H h, T... t) { cerr << h; if(sizeof...(t)) cerr << \", \"; DBG(t...); }\r\n#ifdef local\r\n#define dbg(...) cerr << \"LINE(\" << __LINE__ << \") -> [\" << #__VA_ARGS__ << \"]: [\", DBG(__VA_ARGS__)\r\n#else\r\n#define dbg(...) 0\r\n#endif\r\n\r\n/* const int dx[4] = {-1, 1, 0, 0}, dy[4] = {0, 0, -1, 1}; */\r\n\r\nvoid solve() {\r\n    int n;\r\n    read(n);\r\n    vt<ar<int, 3> > a(n);\r\n    FOR(n) {\r\n        read(a[i][0], a[i][1]);\r\n        a[i][2] = i + 1;\r\n    }\r\n    sort(all(a), [](auto a, auto b){\r\n            if(a[0] == b[0]) {\r\n            return a[1] > b[1];\r\n            }\r\n            return a[0] < b[0];\r\n            });\r\n    set<ar<int, 2> > st;\r\n    FOR(n) {\r\n        while(sz(st) && (*st.begin())[0] < a[i][1]) {\r\n            st.erase(st.begin());\r\n        }\r\n        if(sz(st) && (*--st.end())[0] >= a[i][1]) {\r\n            finish(i + 1, (*--st.end())[1]);\r\n        }\r\n        st.insert({a[i][1], a[i][2]});\r\n    }\r\n    print(-1, -1);\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n\r\n    int t = 1;\r\n    /* read(t); */\r\n    for(int tc = 1; tc <= t; ++tc) {\r\n        /* write(\"Case #\", tc, \": \"); */\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n\r\n"
}