{
    "id": 38473961,
    "contestId": 976,
    "creationTimeSeconds": 1526877065,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 976,
        "index": "C",
        "name": "Nested Segments",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 976,
        "members": [
            {
                "handle": "Piyuple"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1525099200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 122,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 3891200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nstruct Segment {\r\n\tint l, r, pos;\r\n};\r\n\r\nbool compare(Segment a, Segment b) {\r\n\tif(a.l < b.l) return true;\r\n\telse return (a.l == b.l && a.r > b.r);\r\n}\r\n\r\nint main() {\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(0); cout.precision(10);\r\n//\tint start_time = clock();\r\n//\tifstream in(\"input.txt\"); ofstream out(\"output.txt\");\r\n\r\n\tint n; scanf(\"%d\", &n);\r\n\tSegment segments[n];\r\n\r\n\tfor(int i = 0 ; i < n ; i++) {\r\n\t\tscanf(\"%d %d\", &segments[i].l, &segments[i].r);\r\n\t\tsegments[i].pos = i + 1;\r\n\t}\r\n\t\r\n\tsort(segments, segments + n, compare);\r\n\tpair<int, int> max = make_pair(-1, -1), ans = make_pair(-1, -1);\r\n\tint pos = -1;\r\n\tfor(int i = 0 ; i < n ; i++) {\r\n\t\tif(segments[i].l >= max.first && segments[i].r <= max.second) {\r\n\t\t\tans = make_pair(segments[i].pos, pos);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tif(segments[i].r > max.second) {\r\n\t\t\tmax = make_pair(segments[i].l, segments[i].r);\r\n\t\t\tpos = segments[i].pos;\r\n\t\t}\r\n\t}\r\n\tprintf(\"%d %d\", ans.first, ans.second);\r\n\r\n//\tcout << (clock() - start_time) / (CLOCKS_PER_SEC * 1000) << \" ms\" << endl;\r\n\treturn  0;\r\n}"
}