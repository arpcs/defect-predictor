{
    "id": 43908512,
    "contestId": 976,
    "creationTimeSeconds": 1538838454,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 976,
        "index": "C",
        "name": "Nested Segments",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 976,
        "members": [
            {
                "handle": "FenixxxQ"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1525099200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 122,
    "timeConsumedMillis": 1216,
    "memoryConsumedBytes": 3584000,
    "source": "\r\n#define _CRT_SECURE_NO_WARNINGS\r\n\r\n#include <cstring>\r\n#include <iostream>\r\n#include <map>\r\n#include <set>\r\n#include <queue>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <vector>\r\n#include <climits>\r\n#include <iomanip>\r\n#include <deque>\r\n#include <cstdio>\r\n#include <string>\r\n\r\n\r\n\r\nusing namespace std;\r\n\r\n\r\n\r\n\r\nstruct S\r\n{\r\n\tint ind;\r\n\tint lg;\r\n\tint rg;\r\n};\r\n\r\nbool comp(S& first, S& second)\r\n{\r\n\tif (first.lg == second.lg) return (first.rg > second.rg);\r\n\telse return (first.lg < second.lg);\r\n}\r\n\r\n\r\nint main()\r\n{\r\n\t\r\n\tif (0)\r\n\t{\r\n\t\tfreopen(\"in.txt\", \"r\", stdin);\r\n\t\tfreopen(\"out.txt\", \"w\", stdout);\r\n\t}\r\n  \r\n\tint n; cin >> n;\r\n\tvector<S>vec(n);\r\n\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tint l, r;\r\n\t\tcin >> l >> r;\r\n\t\tvec[i].ind = i+1;\r\n\t\tvec[i].lg = l;\r\n\t\tvec[i].rg = r;\r\n\t}\r\n\r\n\tsort(vec.begin(), vec.end(), comp);\r\n\tint maxrg = -1;\r\n\tint imax = -1;\r\n\tfor(int i =0;i<n;i++) {\r\n\t\r\n\r\n\t\t\tif (maxrg >= vec[i].rg) {\r\n\t\t\t\tcout << vec[i].ind << ' ' << imax;\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmaxrg = vec[i].rg;\r\n\t\t\t\timax = vec[i].ind;\r\n\t\t\t}\r\n\t}\r\n\tcout << -1 << ' ' << -1;\r\n\r\n\treturn 0;\r\n}"
}