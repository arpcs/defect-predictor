{
    "id": 39126451,
    "contestId": 976,
    "creationTimeSeconds": 1528647526,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 976,
        "index": "C",
        "name": "Nested Segments",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 976,
        "members": [
            {
                "handle": "ttymonkey"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1525099200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 122,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 9523200,
    "source": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <unordered_map>\n#include <unordered_set>\n#include <limits>\n#include <cassert>\n#include <fstream>\n#include <array>\n\nusing namespace std;\n\n#define endl '\\n'\n\nstruct Segment {\n    int Start;\n    int End;\n    size_t Id;\n\n    bool operator <(const Segment &other) const {\n        return (Start < other.Start) || (Start == other.Start && End > other.End);\n    }\n};\n\nint main() {\n    std::ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.precision(10);\n\n    int n, l ,r;\n    cin >> n;\n\n    vector<Segment> segments;\n\n    for (size_t i = 0; i < n; ++i) {\n        cin >> l >> r;\n        segments.push_back(Segment{l, r, i + 1});\n    }\n\n    sort(begin(segments), end(segments));\n\n    size_t previousSegment = 0;\n\n    for (size_t i = 1; i < n; ++i) {\n        if (segments[previousSegment].Start <= segments[i].Start && segments[previousSegment].End >= segments[i].End) {\n            cout << segments[i].Id  << ' ' << segments[previousSegment].Id  << endl;\n            return 0;\n        } else {\n            previousSegment = i;\n        }\n    }\n\n    cout << -1 << ' ' << -1 << endl;\n\n    return 0;\n}\n"
}