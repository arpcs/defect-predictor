{
    "id": 228748263,
    "contestId": 976,
    "creationTimeSeconds": 1697690956,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 976,
        "index": "C",
        "name": "Nested Segments",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 976,
        "members": [
            {
                "handle": "IR101"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1525099200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 122,
    "timeConsumedMillis": 467,
    "memoryConsumedBytes": 31334400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n//#define int long long\r\nconst int maxn=1e6+5;\r\nint n,q,a[maxn],maxx,b[maxn],c[maxn];\r\nstruct node{\r\n    int l,r,idx;\r\n};\r\nbool  cmp(node x,node y) {\r\n    if (x.l != y.l)return x.l < y.l;\r\n    return x.r>y.r;\r\n}\r\ninline int lowbit(int a) {\r\n    return a & (-a);\r\n}\r\ninline void update(int x,int y) {\r\n    for (int i = x; i <= n; i += lowbit(i)) {\r\n        b[i] += y;\r\n        c[i] += x * y;\r\n    }\r\n}\r\ninline void range_update(int l,int r,int x) {\r\n    update(l, x);\r\n    update(r + 1, -x);\r\n}\r\ninline int query(int x) {\r\n    int ans = 0;\r\n    for (int i = x; i; i -= lowbit(i)) {\r\n        ans += (x + 1) * b[i] - c[i];\r\n    }\r\n    return ans;\r\n}\r\ninline int range_query(int l,int r) {\r\n    return query(r) - query(l - 1);\r\n}\r\nsigned main(){\r\n    ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);\r\n    cin>>n;\r\n    vector<node>f(n);\r\n    map<int , int > mp;\r\n    for (int i = 0;i< n ; ++i) {\r\n        int l, r;\r\n        cin >> f[i].l >> f[i].r;\r\n        mp[f[i].r]=1;\r\n        f[i].idx = i;\r\n    }\r\n    int cnt=0;\r\n    for (auto i:mp) {\r\n        mp[i.first]=++cnt;\r\n    }\r\n    sort(f.begin(),f.end(),cmp);\r\n    for (int i = 0; i <n ; ++i) {\r\n        f[i].r = mp[f[i].r];\r\n//        cout << f[i].r << ' ';\r\n    }\r\n    vector<int>ans(n);\r\n//    std::reverse(f.begin(), f.end());\r\n    for (int i = 0; i <n ; ++i) {\r\n//        cout<<f[i].idx<<' '<<f[i].l<<' '<<f[i].r<<endl;\r\n        ans[f[i].idx]= range_query(1,f[i].r);\r\n        int g= range_query(f[i].r,cnt);\r\n        if(g!=0){\r\n            for (int j = 0; j <i ; ++j) {\r\n                auto [l,r,idx]=f[j];\r\n                if(r>=f[i].r){\r\n                    cout<<f[i].idx+1<<' '<<f[j].idx+1<<'\\n';\r\n                    return 0;\r\n                }\r\n            }\r\n        }\r\n        range_update(f[i].r,f[i].r,1);\r\n    }\r\n\r\n    cout<<\"-1 -1\\n\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return 0;\r\n}"
}