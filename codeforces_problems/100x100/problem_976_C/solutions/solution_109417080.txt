{
    "id": 109417080,
    "contestId": 976,
    "creationTimeSeconds": 1615223967,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 976,
        "index": "C",
        "name": "Nested Segments",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 976,
        "members": [
            {
                "handle": "camouflage2001"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1525099200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 122,
    "timeConsumedMillis": 327,
    "memoryConsumedBytes": 25292800,
    "source": "#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC target(\"avx,avx2,fma\")\r\n#pragma GCC optimization(\"unroll-loops\")\r\n#include <iostream>\r\n//#include <bits/stdc++.h>\r\nusing namespace std;\r\n#include <string.h>\r\n#include <utility>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <stack>\r\n#include <map>\r\n#include <unordered_map>\r\n#include <queue>\r\n#include <set>\r\n#include <math.h>\r\n#define ll long long\r\nll max(ll a, ll b)\r\n{\r\n    if (a < b)\r\n        return b;\r\n    return a;\r\n}\r\nll min(ll a, ll b)\r\n{\r\n    if (a < b)\r\n        return a;\r\n    return b;\r\n}\r\n#define INPUT_OUTPUT freopen(\"input.txt\", \"r\", stdin), freopen(\"output.txt\", \"w\", stdout)\r\n#define all(v) v.begin(), v.end()\r\n#define lli unsigned long long int\r\n#define f(i, a, b) for (int i = a; i < b; i++)\r\n#define here cout << \"here\\n\"\r\n#define pp pair<ll, ll>\r\n#define vpp vector<pp>\r\n#define vii vector<ll>\r\n#define ss second\r\n#define ff first\r\n#define pb push_back\r\n#define mp make_pair\r\n#define mod 1000000007\r\n#define endl \"\\n\"\r\n#define inside ll, vector<ll>, greater<ll>\r\n#define Minpq priority_queue<inside>\r\n#define Maxpq priority_queue<ll>\r\n#define unm unordered_map<ll, ll>\r\n#define MAX (1LL << 60) - 1\r\n#define MIN -((1LL << 60) - 1)\r\n\r\nll X[] = {-1, 1, 0, 0};                // 4\r\nll Y[] = {0, 0, -1, 1};                // 4\r\nll XX[] = {-1, 1, 0, 0, -1, 1, -1, 1}; // 8\r\nll YY[] = {0, 0, -1, 1, -1, 1, 1, -1}; // 8\r\nll HX[] = {1, -1, 2, -2, 1, -1, -2, 2};\r\nll HY[] = {2, -2, 1, -1, -2, 2, 1, -1};\r\n#define IOS                  \\\r\n    ios::sync_with_stdio(0); \\\r\n    cin.tie(0);              \\\r\n    cout.tie(0)\r\n\r\n// class req\r\n// {\r\n// public:\r\n//     ll len, l, r;\r\n//\r\n//     req(ll a, ll b, ll c)\r\n//         : len(a), l(b), r(c) {}\r\n// };\r\n// make sure that b's value is the desired top values, write priority_queue<req> if spent is max and if spent is equal than ascending by ind\r\n// bool operator<(const req &a, const req &b)\r\n// {\r\n//     if (a.len != b.len)\r\n//         return a.len < b.len; // returns true if descending sort of spent is req\r\n//\r\n//     return a.l > b.l; // return true if ascending sort of ind is req\r\n// }\r\nll fpow(ll x, ll n)\r\n{\r\n    ll res = 1;\r\n    while (n)\r\n    {\r\n        if (n & 1)\r\n        {\r\n            res = res * x % mod;\r\n        }\r\n        x = x * x % mod;\r\n        n >>= 1;\r\n    }\r\n    return (res % mod);\r\n}\r\n\r\nll binomialCoeff(ll n, ll k)\r\n{\r\n    ll C[n + 1][k + 1];\r\n    ll i, j;\r\n    C[0][0] = 1;\r\n    for (i = 1; i <= n; i++)\r\n    {\r\n        for (j = 0; j <= min(i, k); j++)\r\n        {\r\n            // Base Cases\r\n            if (j == 0 || j == i)\r\n                C[i][j] = 1;\r\n\r\n            else\r\n                C[i][j] = (C[i - 1][j - 1] + C[i - 1][j]) % mod;\r\n        }\r\n    }\r\n\r\n    return C[n][k];\r\n}\r\nll gcd(ll a, ll b)\r\n{\r\n    if (b == 0)\r\n        return a;\r\n    return gcd(b, a % b);\r\n}\r\n\r\nll lcm(ll a, ll b)\r\n{\r\n    return a * (b / gcd(a, b));\r\n}\r\n\r\n// Max and min distribute over each other like gcd and lcm, max of min of all pair having A as common is min of A and max of rest, max(min(A,B), min(A,C)) = min(A, max(B,C))\r\n// Neutral element for AND = -1 ( all ones ) , SUM = 0, MULTI = 1, OR = 0 (all zeros )\r\n// advice - always check constraints\r\n// 1. brute force\r\n// 2. trick , think about: this - (combinations), i & i+k, n^2 to n\r\n// 3. gcd/hcf\r\n// 4. reverse array, find max, find min, sorting, heap, tree\r\n// 5. graph, bfs, dfs\r\n//https://cp-algorithms.com\r\n//https://oeis.org\r\n//vector<vector<ll>> v(n, vector<ll>(m, 0))\r\n// ll **arr = new ll*[n]; f(i,0,n){ arr[i] = new ll [m]};\r\n/*\r\n1. segmentTree, SQRT decomposition, BIT\r\n2. User Comparator, PriorityQueue, Stack, Queue, Deque\r\n3. Sorting, Recursion\r\n4. If a+b=n then if either of them is greater than n/2 other is less than n/2 for sure\r\n5. For less than 1e12, use normal to find prime factor, else 902076349729 = 949777*949777,  916517107801 = 957349*957349, 506623120463 = 47^(x), 34359738368 = 2^(x), 912943012301/974059904437/930881829259 = prime\r\n6. There is prime between n and 3n/2 for n<=1000. WOH !\r\n7. Prime gap of numbers less than 1e9 doesn't exceed 300\r\n8. Combinotrics- if you have n identical object and r different object number of ways of arrangement is (n+r-1) C (r-1) or (n+r-1) C (n)\r\n*/\r\n\r\nstruct req\r\n{\r\n    ll l, r, ind, len;\r\n    req(ll a, ll b, ll c)\r\n    {\r\n        l = a, r = b, len = b - a + 1, ind = c;\r\n    }\r\n};\r\n\r\nbool sortby(req &a, req &b)\r\n{\r\n    if (a.r != b.r)\r\n        return a.r < b.r;\r\n\r\n    if (a.l != b.l)\r\n        return a.l > b.l;\r\n\r\n    return a.ind < b.ind;\r\n}\r\n\r\nvoid solve()\r\n{\r\n    ll n;\r\n    cin >> n;\r\n    vector<req> v;\r\n    ll L = -1, R = -1;\r\n    f(i, 0, n)\r\n    {\r\n        ll a, b;\r\n        cin >> a >> b;\r\n        v.pb(req(a, b, i));\r\n    }\r\n\r\n    sort(all(v), sortby);\r\n    for (int i = 1; i < n; i++)\r\n    {\r\n        if (v[i - 1].l >= v[i].l)\r\n        {\r\n            L = i - 1, R = i;\r\n            break;\r\n        }\r\n    }\r\n    if (L == -1 || R == -1 || n == 1)\r\n    {\r\n        cout << L << \" \" << R << \"\\n\";\r\n    }\r\n    else\r\n        cout << v[L].ind + 1 << \" \" << v[R].ind + 1 << \"\\n\";\r\n}\r\nint32_t main()\r\n{\r\n    IOS;\r\n    solve();\r\n}"
}