{
    "id": 214209736,
    "contestId": 153,
    "creationTimeSeconds": 1689599052,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 153,
        "index": "C",
        "name": "Caesar Cipher",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "*special"
        ]
    },
    "author": {
        "contestId": 153,
        "members": [
            {
                "handle": "pmqwerty"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1329922800
    },
    "programmingLanguage": "Cobol",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 60,
    "memoryConsumedBytes": 0,
    "source": "        identification division.\r\n        program-id. 03\r\n \r\n        data division.\r\n        working-storage section.\r\n        01 a    pic 9(10)   value zeroes.\r\n        01 b    pic 9(10).\r\n        01 c    pic 9(10).\r\n        01 i    pic 9(10).\r\n        01 j    pic 9(10).\r\n        01 l    pic 9(10).\r\n        01 v    pic 9(10).\r\n \r\n        01 str  pic X(25).\r\n        01 dd redefines str.\r\n        05 d    occurs 25 times pic X(1).\r\n        01 st2  pic X(25).\r\n        01 ltrs pic X(26) value \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".\r\n        01 ltra redefines ltrs.\r\n        05 ls   occurs 26 times pic X(1).\r\n \r\n        procedure division.\r\n            accept str\r\n            accept st2\r\n            move st2 to b\r\n \r\n            move 1 to v\r\n            perform varying i from 1 by 1 until v = 0\r\n                move 0 to v\r\n                perform varying j from 1 by 1 until j = 27\r\n                    if ls(j) = d(i)\r\n                        add b to j giving c\r\n                        if c > 26\r\n                            subtract 26 from c\r\n                        end-if\r\n                        display ls(c) with no advancing\r\n                        move 1 to v\r\n                    end-if\r\n                end-perform\r\n            end-perform\r\n \r\n            display \"\"\r\n \r\n            stop run."
}