{
    "id": 83728703,
    "contestId": 1356,
    "creationTimeSeconds": 1592122043,
    "relativeTimeSeconds": 144443,
    "problem": {
        "contestId": 1356,
        "index": "D1",
        "name": "Quantum Classification - 1",
        "type": "PROGRAMMING",
        "tags": [
            "*special"
        ]
    },
    "author": {
        "contestId": 1356,
        "members": [
            {
                "handle": "szxnkl"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1591977600
    },
    "programmingLanguage": "Q#",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 342,
    "memoryConsumedBytes": 6963200,
    "source": "\ufeffnamespace Solution {\r\n\r\n    open Microsoft.Quantum.Canon;\r\n    open Microsoft.Quantum.Intrinsic;\r\n    open Microsoft.Quantum.Arithmetic;\r\n    open Microsoft.Quantum.MachineLearning;\r\n\r\n    // @EntryPoint()\r\n    // operation Main():Unit{\r\n    //     let a =Solve();\r\n    //     Message($\"{a}\");\r\n    // }\r\n    operation Set(desired : Result, q1 : Qubit) : Unit {\r\n        if (desired != M(q1)) {\r\n            X(q1);\r\n        }\r\n    }\r\n    operation Solve () : (ControlledRotation[], (Double[], Double)) {\r\n        // return ([ControlledRotation((0, new Int[0]), PauliX, 4),\r\n        //     ControlledRotation((0, new Int[0]), PauliZ, 5),\r\n        //     ControlledRotation((1, new Int[0]), PauliX, 6),\r\n        //     ControlledRotation((1, new Int[0]), PauliZ, 7),\r\n        //     ControlledRotation((0, [1]), PauliX, 0),\r\n        //     ControlledRotation((1, [0]), PauliX, 1),\r\n        //     ControlledRotation((1, new Int[0]), PauliZ, 2),\r\n        //     ControlledRotation((1, new Int[0]), PauliX, 3)]\r\n        //     ,([0.060057,3.00522,2.03083,0.63527,1.03771,1.27881,4.10186,5.34396],0.1276578));\r\n        return ([ControlledRotation((0, new Int[0]), PauliY, 0)],([3.14159],0.0));\r\n        // your code here\r\n    }\r\n}\r\n\r\n"
}