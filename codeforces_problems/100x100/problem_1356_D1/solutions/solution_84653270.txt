{
    "id": 84653270,
    "contestId": 1356,
    "creationTimeSeconds": 1592822582,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1356,
        "index": "D1",
        "name": "Quantum Classification - 1",
        "type": "PROGRAMMING",
        "tags": [
            "*special"
        ]
    },
    "author": {
        "contestId": 1356,
        "members": [
            {
                "handle": "die"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1591977600
    },
    "programmingLanguage": "Q#",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 358,
    "memoryConsumedBytes": 6963200,
    "source": "\ufeffnamespace Solution {\r\n    open Microsoft.Quantum.Arithmetic;\r\n    open Microsoft.Quantum.Canon;\r\n    open Microsoft.Quantum.Convert;\r\n    open Microsoft.Quantum.Diagnostics;\r\n    open Microsoft.Quantum.Intrinsic;\r\n    open Microsoft.Quantum.Math;\r\n    open Microsoft.Quantum.MachineLearning;\r\n\r\n    open Microsoft.Quantum.Measurement;\r\n \r\n    operation Set(u : Qubit, x : Result) : Unit {\r\n        if (x != M(u)) {\r\n            X(u);  \r\n\t\t}\r\n\t}\r\n \r\n    operation Set_m(u : Qubit[], x : Result[]) : Unit {\r\n        mutable ln = Length(x);\r\n        for (i in 0..ln-1) {\r\n            if (M(u[i]) != x[i]) {\r\n                X(u[i]);     \r\n\t\t\t}\r\n        }\r\n\t}\r\n\r\n    operation Solve () : (ControlledRotation[], (Double[], Double)) {\r\n        let a = ControlledRotation((0, new Int[0]), PauliX, 0);\r\n        let b = [PI()];\r\n        let c = 0.0;\r\n        return ([a], (b, c));\r\n    }\r\n}"
}