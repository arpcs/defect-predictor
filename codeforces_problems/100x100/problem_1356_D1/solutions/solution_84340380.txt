{
    "id": 84340380,
    "contestId": 1356,
    "creationTimeSeconds": 1592581026,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1356,
        "index": "D1",
        "name": "Quantum Classification - 1",
        "type": "PROGRAMMING",
        "tags": [
            "*special"
        ]
    },
    "author": {
        "contestId": 1356,
        "members": [
            {
                "handle": "rqi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1591977600
    },
    "programmingLanguage": "Q#",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 358,
    "memoryConsumedBytes": 6963200,
    "source": "namespace Solution {\r\n\r\n    open Microsoft.Quantum.Canon;\r\n    open Microsoft.Quantum.Arithmetic;\r\n    open Microsoft.Quantum.Intrinsic;\r\n    open Microsoft.Quantum.MachineLearning;\r\n\r\n    operation Set (q: Qubit, des: Result) : Unit {\r\n        if(des != M(q)){ X(q); }\r\n    }\r\n\r\n    operation Solve () : (ControlledRotation[], (Double[], Double)) {\r\n        // your code here\r\n        let a = [\r\n            ControlledRotation((0, new Int[0]), PauliY, 0)\r\n        ];\r\n        let b = [3.01603125];\r\n        let c = 0.05930079623709223;\r\n        return (a,(b,c));\r\n    }\r\n \r\n    // @EntryPoint()\r\n    // operation HelloQ() : Unit {\r\n    //     Message(\"Hello quantum world!\");\r\n    //     using (q = Qubit[3]) {\r\n    //         Set(q[0],One);\r\n    //         Set(q[1],One);\r\n    //         for (i in 0..2) {\r\n    //             Set(q[i],Zero);\r\n    //         }\r\n    //     }\r\n    // }\r\n}\r\n\r\n"
}