{
    "id": 83813530,
    "contestId": 1356,
    "creationTimeSeconds": 1592200750,
    "relativeTimeSeconds": 223150,
    "problem": {
        "contestId": 1356,
        "index": "D1",
        "name": "Quantum Classification - 1",
        "type": "PROGRAMMING",
        "tags": [
            "*special"
        ]
    },
    "author": {
        "contestId": 1356,
        "members": [
            {
                "handle": "OceanDiver"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1591977600
    },
    "programmingLanguage": "Q#",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 358,
    "memoryConsumedBytes": 6758400,
    "source": "namespace Solution {\r\n    open Microsoft.Quantum.MachineLearning;\r\n\r\n    operation Solve () : (ControlledRotation[], (Double[], Double)) {\r\n        // your code here\r\n        // let param=[0.586514, 2.271623, 0.7838310000000001, 2.97821, 2.2692, 3.0208];\r\n        let param=[0.586514, 2.271623, 0.7838310000000001];\r\n        // let param=[1.01];\r\n        mutable p=new Double[1];\r\n        set p w/= 0 <- 1.01;\r\n\r\n        // let model=[ControlledRotation((0, new Int[0]), PauliX, 2),ControlledRotation((0, new Int[0]), PauliZ, 3),ControlledRotation((1, new Int[0]), PauliX, 4),ControlledRotation((1, new Int[0]), PauliZ, 5),ControlledRotation((0, [1]), PauliX, 0),ControlledRotation((1, [0]), PauliX, 1)];\r\n        let model=[ControlledRotation((0, new Int[0]), PauliX, 1), ControlledRotation((0, new Int[0]), PauliX, 2)];\r\n        mutable m=new ControlledRotation[1];\r\n        set m w/= 0 <- ControlledRotation((0, [1]), PauliX, 2);\r\n\r\n        let b=0.11209202009436633;\r\n        // mutable t=(p,b);\r\n        return ((model, (param, 0.11209202009436633)));\r\n        // return w;\r\n    }\r\n}"
}