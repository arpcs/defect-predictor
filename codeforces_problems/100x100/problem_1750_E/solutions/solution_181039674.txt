{
    "id": 181039674,
    "contestId": 1750,
    "creationTimeSeconds": 1668488151,
    "relativeTimeSeconds": 7251,
    "problem": {
        "contestId": 1750,
        "index": "E",
        "name": "Bracket Cost",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1750,
        "members": [
            {
                "handle": "ViTe"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1668480900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 29,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 6451200,
    "source": "\r\n#include<iostream>\r\n#include<cstring>\r\n#include<vector>\r\nusing namespace std;\r\nusing LL = long long;\r\nconst int maxn = 2e5 + 5;\r\n\r\ntemplate<typename T>\r\nstruct Fenwick{\r\n    int n;\r\n    vector<T> tr;\r\n\r\n    Fenwick(int n) : n(n), tr(n + 1, 0){}\r\n\r\n    int lowbit(int x){\r\n        return x & -x;\r\n    }\r\n\r\n    void modify(int x, T c){\r\n        for(int i = x; i <= n; i += lowbit(i)) tr[i] += c;\r\n    }\r\n\r\n    void modify(int l, int r, T c){\r\n        modify(l, c);\r\n        if (r + 1 <= n) modify(r + 1, -c);\r\n    }\r\n\r\n    T query(int x){\r\n        T res = 0;\r\n        for(int i = x; i; i -= lowbit(i)) res += tr[i];\r\n        return res;\r\n    }\r\n\r\n    T query(int l, int r){\r\n        return query(r) - query(l - 1);\r\n    }\r\n};\r\nusing BIT = Fenwick<int>;\r\n\r\nint s[maxn], stk[maxn];\r\nint L[maxn], R[maxn];\r\n\r\nint main(){\r\n\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    ios::sync_with_stdio(0);\r\n\r\n    int T;\r\n    cin >> T;\r\n    while(T--){\r\n        int n;\r\n        cin >> n;\r\n        for(int i = 1; i <= n; i++){\r\n            char c;\r\n            cin >> c;\r\n            s[i] = s[i - 1] + (c == '(' ? 1 : -1);\r\n        }\r\n        LL ans = 0;\r\n        BIT bit(2 * n + 5);\r\n        bit.modify(n + 1, 1);\r\n        for(int i = 1; i <= n; i++){\r\n            ans += 1LL * s[i] * bit.query(s[i] + n + 1);\r\n            bit.modify(s[i] + n + 1, 1);\r\n        }\r\n        bit = {2 * n + 5};\r\n        bit.modify(s[n] + n + 1, 1);\r\n        for(int i = n - 1; i >= 0; i--){\r\n            ans += 1LL * s[i] * bit.query(s[i] + n);\r\n            bit.modify(s[i] + n + 1, 1);\r\n        }\r\n        int top = 0;\r\n        stk[top] = -1;\r\n        for(int i = 0; i <= n; i++){\r\n            while(top && s[stk[top]] >= s[i]) top--;\r\n            L[i] = stk[top] + 1;\r\n            stk[++top] = i;\r\n        }\r\n        top = 0;\r\n        stk[top] = n + 1;\r\n        for(int i = n; i >= 0; i--){\r\n            while(top && s[stk[top]] > s[i]) top--;\r\n            R[i] = stk[top] - 1;\r\n            stk[++top] = i;\r\n        }\r\n        for(int i = 0; i <= n; i++)\r\n            ans -= 1LL * s[i] * (1LL * (i - L[i] + 1) * (R[i] - i + 1) - 1);\r\n\r\n        cout << ans << '\\n';\r\n    }\r\n\r\n}"
}