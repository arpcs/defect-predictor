{
    "id": 180070652,
    "contestId": 1750,
    "creationTimeSeconds": 1667904730,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1750,
        "index": "E",
        "name": "Bracket Cost",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1750,
        "members": [
            {
                "handle": "an_da"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1667745300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 2969600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nusing ll = long long;\r\nusing ull = unsigned long long;\r\nusing ld = long double;\r\nusing pii = pair<int, int>;\r\nusing pll = pair<ll, ll>;\r\nusing pdd = pair<ld, ld>;\r\nusing arr = array<int, 3>;\r\nusing vi = vector<int>;\r\nusing vl = vector<ll>;\r\nconstexpr int dx[] = {-1, 0, 1, 0}, dy[] = {0, 1, 0, -1};\r\nconstexpr int inf = 0x3f3f3f3f;\r\nconstexpr ll linf = 0x3f3f3f3f3f3f3f3f;\r\nconstexpr int N = 1e5 + 5, M = N;\r\nconstexpr int mod = 1e9 + 7;\r\nconstexpr ld eps = 1e-8;\r\ntemplate <class T> void Min(T &a, const T b) { if (a > b) a = b; }\r\ntemplate <class T> void Max(T &a, const T b) { if (a < b) a = b; }\r\ntemplate <class T> void Add(T &a, const T b) { a += b; if(a >= mod) a -= mod; }\r\ntemplate <class T> void Sub(T &a, const T b) { a -= b; if(a < 0) a += mod; }\r\n\r\nvoid solve()\r\n{\r\n\tint n;\r\n\tstring s;\r\n\tcin >> n >> s;\r\n\tvi p(n + 1);\r\n\tfor(int i = 0; i < n; i++)\r\n\t{\r\n\t\tp[i + 1] = p[i];\r\n\t\tif(s[i] == '(') p[i + 1]--;\r\n\t\telse p[i + 1]++;\r\n\t}\r\n\r\n\tll ans = 0;\r\n\r\n\tvi stk;\r\n\tvi L(n + 1), R(n + 1, n);\r\n\tstk.push_back(-1);\r\n\tfor(int i = 0; i <= n; i++)\r\n\t{\r\n\t\twhile(stk.size() > 1 && p[stk.back()] <= p[i])\r\n\t\t{\r\n \t\t\tR[stk.back()] = i - 1;\r\n\t\t\tstk.pop_back();\r\n\t\t}\r\n\t\tL[i] = stk.back() + 1;\r\n\t\tstk.push_back(i);\r\n\t}\r\n\tfor(int i = 0; i <= n; i++)\r\n\t\tans += p[i] * ((i - L[i] + 1) * (R[i] - i + 1) - 1);\r\n\r\n\tsort(p.begin(), p.end(), greater<int>());\r\n\tfor(int i = 1; i <= n; i++)\r\n\t\tans -= 1ll * p[i] * i;\r\n\tcout << ans << \"\\n\";\r\n}\r\nint main()\r\n{\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0);\r\n\r\n\tint t;\r\n\tt = 1;\r\n\tcin >> t;\r\n\twhile(t--)\r\n\t\tsolve();\r\n\treturn 0;\r\n}"
}