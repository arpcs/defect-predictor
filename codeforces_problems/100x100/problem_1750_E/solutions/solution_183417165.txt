{
    "id": 183417165,
    "contestId": 1750,
    "creationTimeSeconds": 1669858476,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1750,
        "index": "E",
        "name": "Bracket Cost",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1750,
        "members": [
            {
                "handle": "zlxFTH"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1667745300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 29,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 2560000,
    "source": "// LUOGU_RID: 96190669\n#include <algorithm>\r\n#include <cstdio>\r\n\r\ntypedef long long LL;\r\n\r\nconst int N = 2e5 + 10;\r\n\r\nint n, tp, st[N];\r\nLL sum[N];\r\nchar s[N];\r\n\r\nint main() {\r\n  int T;\r\n  scanf(\"%d\", &T);\r\n  while (T--) {\r\n    tp = 0;\r\n    LL ans = 0;\r\n    scanf(\"%d\", &n);\r\n    scanf(\"%s\", s + 1);\r\n    for (int i = 1; i <= n; ++i)\r\n      ans += 1ll * i * (i + 1) / 2;\r\n    for (int i = 1; i <= n; ++i)\r\n      sum[i] = sum[i - 1] + (s[i] == '(' ? 1 : -1);\r\n    std::sort(sum, sum + n + 1);\r\n    LL res = 0;\r\n    for (int i = 0; i <= n; ++i) {\r\n      ans += (1ll * sum[i] * i - res);\r\n      res += sum[i];\r\n    }\r\n    ans /= 2;\r\n    for (int i = 1; i <= n; ++i) {\r\n      if (s[i] == '(')\r\n        st[++tp] = i;\r\n      else {\r\n        if (tp) {\r\n          int now = st[tp--];\r\n          ans -= 1ll * (n - i + 1) * now;\r\n        } else {\r\n          continue;\r\n        }\r\n      }\r\n    }\r\n    printf(\"%lld\\n\", ans);\r\n  }\r\n  return 0;\r\n}"
}