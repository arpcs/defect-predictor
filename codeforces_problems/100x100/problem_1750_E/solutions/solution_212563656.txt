{
    "id": 212563656,
    "contestId": 1750,
    "creationTimeSeconds": 1688738140,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1750,
        "index": "E",
        "name": "Bracket Cost",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1750,
        "members": [
            {
                "handle": "luogu_bot2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1667745300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 29,
    "timeConsumedMillis": 420,
    "memoryConsumedBytes": 3891200,
    "source": "// LUOGU_RID: 114372499\n\n\n#include<bits/stdc++.h>\n\n#define ll long long\n#define db double\n#define f(i,a,b) for(ll i=a;i<=b;i++)\n\nusing namespace std;\n\nll rd(){\n    ll x=0,w=1;\n    char c=getchar();\n    while(c<'0'||c>'9'){\n        if(c=='-')w=-1;\n        c=getchar();\n    }\n\n    while(c<='9'&&c>='0'){\n        x=x*10+(c-'0');\n        c=getchar();\n    }\n    return x*w;\n}\n\nll T;\nll n;\n\nvoid work(){\n    n=rd();\n    string s;\n    cin>>s;\n    vector<ll> a(1);\n    ll ztt=0;\n\n    f(i,0,n-1){\n        if(s[i]=='('){\n            ztt++;\n        }\n        else {\n            ztt--;//\u524d\u7f00\u548c\n        }\n        a.push_back(ztt);\n    }\n\n    sort(a.begin(),a.end());//\u524d\u7f00\u548c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\n\n    ll ans=0;ztt=0;\n    f(i,0,n){\n        ans+=i*a[i]-ztt;\n        ans+=i*(n-i+1);\n        ztt+=a[i];\n    }\n    ans>>=1;\n    stack <ll>k;\n    f(i,0,n-1){\n        if(s[i]=='('){\n            k.push(i);\n        }\n        else {\n            if(k.empty())continue;\n            ans-=(k.top()+1)*(n-i);\n            k.pop();\n        }\n    }\n    printf(\"%lld\\n\",ans);\n    return ;\n\n}\n\nint main(){\n    T=rd();\n    while(T--){\n        work();\n    }\n    return 0;\n}\n"
}