{
    "id": 180270466,
    "contestId": 1750,
    "creationTimeSeconds": 1668062426,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1750,
        "index": "E",
        "name": "Bracket Cost",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1750,
        "members": [
            {
                "handle": "XueYJ"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1667745300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 20582400,
    "source": "#include<iostream>\r\n#include<algorithm>\r\n#include<cstdio>\r\n#include<cmath>\r\n#include<cstring>\r\n#include<map>\r\n#include<stack>\r\n#include<queue>\r\n#include<ctime>\r\n#include<vector>\r\n#include<set>\r\n#define int long long\r\nusing namespace std;\r\nint a[500000+5],c[500000+5];\r\nint l[500000+5],r[500000+5];\r\nchar s[500000+5],N;\r\nint g[500000+5],top;\r\nint lowbit(int x){return x&(-x);}\r\nvoid modify(int x,int y)\r\n{\r\n    for (int i=x;i<=N;i+=lowbit(i))\r\n        c[i]+=y;\r\n}\r\nint query(int x)\r\n{\r\n    int sum=0;\r\n    for (int i=x;i>0;i-=lowbit(i))\r\n        sum+=c[i];\r\n    return sum;\r\n}\r\nsigned main()\r\n{\r\n    int T,i,j;\r\n    scanf(\"%lld\",&T);\r\n    while (T--)\r\n    {\r\n        int n,i,j;\r\n        scanf(\"%lld\",&n);N=2*n+10;\r\n        scanf(\"%s\",s+1);\r\n        for (i=1;i<=n;i++)\r\n            a[i]=(s[i]=='('?1:-1)+a[i-1];\r\n        long long ans=0;\r\n        top=0;g[0]=-1;\r\n        for (i=0;i<=n;i++)\r\n        {\r\n            while (top&&a[g[top]]>a[i]) top--;\r\n            l[i]=g[top]+1;g[++top]=i;\r\n            ans+=1ll*query(a[i]-1+n+5)*a[i];\r\n            modify(a[i]+n+5,1);\r\n        }\r\n        top=0;g[0]=n+1;\r\n        for (i=1;i<=N;i++)\r\n            c[i]=0;\r\n        for (i=n;i>=0;i--)\r\n        {\r\n            while (top&&a[g[top]]>=a[i]) top--;\r\n            r[i]=g[top]-1;g[++top]=i;\r\n            ans+=1ll*query(a[i]+n+5)*a[i];\r\n            modify(a[i]+n+5,1);\r\n        }\r\n        for (i=1;i<=N;i++)\r\n            c[i]=0;\r\n     //   printf(\"!!! %lld\\n\",ans);\r\n        for (i=1;i<=n;i++)\r\n            ans-=(1ll*(i-l[i]+1)*(r[i]-i+1)-1)*a[i];//printf(\"??? %d : (%d %d , %d)\\n\",i,l[i],r[i],a[i]);\r\n        printf(\"%lld\\n\",ans);\r\n    }\r\n    return 0;\r\n}\r\n"
}