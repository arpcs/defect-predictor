{
    "id": 203250100,
    "contestId": 1750,
    "creationTimeSeconds": 1682342598,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1750,
        "index": "E",
        "name": "Bracket Cost",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1750,
        "members": [
            {
                "handle": "stggg"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1667745300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 29,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 10240000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef double db;\r\ntypedef unsigned long long ull;\r\nconst int INF = 0x3f3f3f3f;\r\nconst ll mod = 998244353;\r\nconst int N = 200010;\r\n\r\nint a[N],n;\r\n\r\nstruct BIT{\r\n\tint tr[N*4];\r\n\tvoid init(){\r\n\t\tfor(int i=0;i<=2*n+2;i++){\r\n\t\t\ttr[i]=0;\r\n\t\t}\r\n\t}\r\n\r\n\tint lowbit(int x){\r\n\t\treturn x&(-x);\r\n\t}\r\n\r\n\tvoid add(int pos,int y){\r\n\t\tpos+=(n+1);\r\n\t\tfor(int i=pos;i<=2*n+2;i+=lowbit(i)){\r\n\t\t\ttr[i]+=y;\r\n\t\t}\r\n\t}\r\n\r\n\tll que(int pos){\r\n\t\tpos+=(n+1);\r\n\t\tif(pos<=0) return 0;\r\n\t\tll ans=0;\r\n\t\tfor(int i=pos;i>=1;i-=lowbit(i)){\r\n\t\t\tans+=tr[i];\r\n\t\t}\r\n\t\treturn ans;\r\n\t}\r\n\r\n\tll que(int x,int y){\r\n\t\tif(x>y)return 0;\r\n\t\treturn que(y)-que(x-1);\r\n\t}\r\n}bit1,bit2;\r\nint ls[N],rs[N],stk[N];\r\nll ans=0;\r\n\r\nvoid dfs(int u,int L,int R){\r\n\tll res=(ll)(u-L+1)*(R-u+1)-1;\r\n\tans-=res*(ll)a[u];\r\n\tif(ls[u]!=-1){\r\n\t\tdfs(ls[u],L,u-1);\r\n\t}\r\n\tif(rs[u]!=-1){\r\n\t\tdfs(rs[u],u+1,R);\r\n\t}\r\n}\r\n\r\ninline void work(){\r\n\tcin>>n;\r\n\tstring s;\r\n\tcin>>s;\r\n\ts=' '+s;\r\n\tans=0;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\ta[i]=a[i-1]+(s[i]=='(' ? 1:-1);\r\n\t}\r\n\tbit1.init();\r\n\tbit2.init();\r\n\tfor(int i=0;i<=n;i++){\r\n\t\tbit1.add(a[i],a[i]);\r\n\t\tbit2.add(a[i],1);\r\n\t}\r\n\tfor(int i=0;i<=n;i++){\r\n\t\tbit1.add(a[i],-a[i]);\r\n\t\tbit2.add(a[i],-1);\r\n\t\tans+=(ll)a[i]*(bit2.que(-n,a[i]));\r\n\t\tans+=(ll)(bit1.que(a[i]+1,n));\r\n\t}\r\n\tfor(int i=0;i<=n+1;i++){\r\n\t\trs[i]=ls[i]=-1;\r\n\t}\r\n\tint top=0;\r\n\tfor(int i=0;i<=n;i++){\r\n\t\tint k=top;\r\n\t\twhile(k&&a[i]<=a[stk[k]])k--;\r\n\t\tif(k) rs[stk[k]]=i;\r\n\t\tif(k<top) ls[i]=stk[k+1];\r\n\t\tstk[++k]=i;top=k;\r\n\t}\r\n\r\n\tdfs(stk[1],0,n);\r\n\tcout<<ans<<endl;\r\n}\r\n\r\nint main () {\r\n    std::ios::sync_with_stdio(false);\r\n    std::cin.tie(nullptr);\r\n    std::cout.tie(nullptr);\r\n    int t;\r\n    t=1;\r\n    cin>>t;\r\n    while (t --) work();\r\n    return 0;\r\n}"
}