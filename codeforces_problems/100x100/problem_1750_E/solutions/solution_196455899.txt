{
    "id": 196455899,
    "contestId": 1750,
    "creationTimeSeconds": 1678244385,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1750,
        "index": "E",
        "name": "Bracket Cost",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1750,
        "members": [
            {
                "handle": "kingjgv5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1667745300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 2457600,
    "source": "//#include <bits/stdc++.h>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <algorithm>\r\nusing namespace std;\r\n#define rep(i,l,r) for(int i=l;i<=r;i++)\r\n#define mp make_pair\r\n#define pb push_back\r\n#define MAXN 100010\r\ntypedef long long ll;\r\nll f[MAXN],q[MAXN],pos[MAXN];\r\nchar s[MAXN];\r\nint n,T,lenq;\r\nll ans;\r\n \r\n \r\nint main()\r\n{\r\n\tscanf(\"%d\",&T);\r\n\twhile(T--)\r\n\t{\r\n\t    scanf(\"%d\",&n);\r\n\t    scanf(\"%s\",s+1);\r\n\t\tans = 0;\r\n\t\tq[1] = 0;\r\n\t\tlenq = 1;\r\n\t\tpos[1] = 0;\r\n\t\tpos[0] = -1;\r\n\t\tf[0] = 0;\r\n\t    rep(i,1,n)\r\n\t    {\r\n\t        if(s[i]=='(')\r\n\t            f[i] = f[i-1] - 1;\r\n\t        else\r\n\t            f[i] = f[i-1] + 1;\r\n\t    }\r\n\t    rep(i,1,n)\r\n\t    {\r\n\t        while(lenq>0 && q[lenq]<=f[i])\r\n\t        {\r\n\t            ans += q[lenq] * (ll(i - pos[lenq]) * ll(pos[lenq] - pos[lenq-1]) - 1ll);\r\n\t            lenq--;\r\n\t        }\r\n\t        q[++lenq] = f[i];\r\n\t        pos[lenq] = i;\r\n\t    }\r\n\t    while(lenq>0 && q[lenq]<=10000000)\r\n        {\r\n            ans += q[lenq] * (ll(n+1 - pos[lenq]) * ll(pos[lenq] - pos[lenq-1]) - 1ll);\r\n            lenq--;\r\n        }\r\n\t\t/*rep(i,1,n)\r\n\t\t{\r\n\t\t\tans -= f[i] * (n-i);\r\n\t\t}*/\r\n        sort(f,f+n+1);\r\n        rep(i,0,n)\r\n        {\r\n            //ans += f[i]*ll(i);\r\n            ans -= f[i]*ll(n-i);\r\n        }\r\n        printf(\"%lld\\n\", ans);\r\n\t}\r\n\treturn 0;\r\n}"
}