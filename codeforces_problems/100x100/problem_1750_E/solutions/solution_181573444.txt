{
    "id": 181573444,
    "contestId": 1750,
    "creationTimeSeconds": 1668842673,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1750,
        "index": "E",
        "name": "Bracket Cost",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1750,
        "members": [
            {
                "handle": "Baiiche"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1667745300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 3788800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n \r\nint main() {\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0);\r\n\t\r\n\r\n\tint T = 1;\r\n\tcin >> T;\r\n\twhile(T--) {\r\n\t\tint n;\r\n\t\tcin >> n;\r\n\t\tstring s;\r\n\t\tcin >> s;\r\n\t\tvector<int> p(n + 1);\r\n\t\tfor(int i = 1; i <= n; ++i){\r\n\t\t\tp[i] = p[i - 1];\r\n\t\t\tif(s[i - 1] == '(') --p[i];\r\n\t\t\telse ++p[i];\r\n\t\t}\r\n\t\t\r\n\t\tvector<int> lf(n + 1), rt(n + 1, n);\r\n\t\tvector<int> st = {-1};\r\n\t\tfor(int i = 0; i <= n; ++i){\r\n\t\t\twhile(st.size() > 1 && p[st.back()] <= p[i]){\r\n\t\t\t\trt[st.back()] = i - 1;\r\n\t\t\t\tst.pop_back();\r\n\t\t\t}\r\n\t\t\tlf[i] = st.back() + 1;\r\n\t\t\tst.push_back(i);\r\n\t\t}\r\n\t\t\r\n\t\tlong long ans = 0;\r\n\t\tvector<int> tp = p;\r\n\t\tsort(p.begin(), p.end());\r\n\t\treverse(p.begin(), p.end());\r\n\t\tfor(int i = 1; i <= n; ++i){\r\n\t\t\tans -= 1ll * p[i] * i;\r\n\t\t}\r\n\t\t\r\n\t\tfor(int i = 1; i <= n; ++i){\r\n\t\t\tans += 1ll * tp[i] * ((i - lf[i] + 1) * (rt[i] - i + 1) - 1);\r\n\t\t}\r\n\r\n\t\tcout << ans << '\\n';\r\n\t}\r\n\treturn 0;\r\n}"
}