{
    "id": 181882571,
    "contestId": 1750,
    "creationTimeSeconds": 1669035324,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1750,
        "index": "E",
        "name": "Bracket Cost",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1750,
        "members": [
            {
                "handle": "Hovery"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1667745300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 29,
    "timeConsumedMillis": 670,
    "memoryConsumedBytes": 2048000,
    "source": "// LUOGU_RID: 94965361\n#include<bits/stdc++.h>\r\n#define int long long\r\nusing namespace std;\r\n\r\nvoid solve()\r\n{\r\n\tint n, summ = 0, ans = 0;\r\n\tstring s;\r\n\tcin >> n;\r\n\tcin >> s;\r\n\tvector<int> sum(n + 1);\r\n\ts = \" \" + s;\r\n\tfor (int i = 1;i <= n;i++)\r\n\t{\r\n\t\tif (s[i] == '(')\r\n\t\tsum[i] = sum[i - 1] + 1;\r\n\t\telse sum[i] = sum[i - 1] - 1;\r\n\t}\r\n\tsort(sum.begin(), sum.end());\r\n\tfor (int i = 0;i <= n;i++)\r\n\t{\r\n//\t\tcout << sum[i] << '\\n';\r\n\t\tans += (sum[i] * i - summ);\r\n\t\tans += (n - i + 1) * i;\r\n\t\tsumm += sum[i];\r\n\t}\r\n\tans /= 2;\r\n\tstack<int> ss;\r\n\tfor (int i = 1;i <= n;i++)\r\n\t{\r\n\t\tif (s[i] == '(')\r\n\t\tss.push(i);\r\n\t\telse {\r\n\t\t\tif (ss.empty())\r\n\t\t\tcontinue;\r\n\t\t\tint l = ss.top(), r = i;\r\n\t\t\tss.pop();\r\n\t\t\tans -= l * (n - r + 1);\r\n\t\t}\r\n\t}\r\n\tcout << ans << '\\n';\r\n}\r\n\r\nsigned main()\r\n{\r\n\tint t;\r\n\tcin >> t;\r\n\twhile (t--)\r\n\t{\r\n\t\tsolve();\r\n\t}\r\n}"
}