{
    "id": 185467205,
    "contestId": 1750,
    "creationTimeSeconds": 1671200557,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1750,
        "index": "E",
        "name": "Bracket Cost",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1750,
        "members": [
            {
                "handle": "035966_L3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1667745300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 29,
    "timeConsumedMillis": 639,
    "memoryConsumedBytes": 19456000,
    "source": "// LUOGU_RID: 97450582\n#include<bits/stdc++.h>\n#define int long long\n#define go for(int i=1;i<=n;i++)\n#define back for(int i=n;i>=1;i--)\nusing namespace std;\nconst int PTA=524287;\nint a[1200012],all[1200012];\nvoid mdf(int l,int r,int v,int ii,int aa,int xb)\n{\n\twhile(1)\n\t{\n\t\tall[xb]+=(r-l+1)*v;\n\t\tif(l==ii&&r==aa) {a[xb]+=v;return;}\n\t\tint lmid=(ii+aa)>>1,rmid=lmid+1;\n\t\ta[xb<<1]+=a[xb],all[xb<<1]+=(lmid-ii+1)*a[xb];a[(xb<<1)+1]+=a[xb],all[(xb<<1)+1]+=(aa-rmid+1)*a[xb];a[xb]=0;\n\t\tif(l>=rmid) {ii=rmid;xb<<=1;xb++;continue;}\n\t\tif(r<=lmid) {aa=lmid;xb<<=1;continue;}\n\t\tif(ii==l) {a[xb<<1]+=v,all[xb<<1]+=(lmid-l+1)*v;ii=rmid;l=rmid;xb<<=1;xb++;continue;}\n\t\tif(aa==r) {a[(xb<<1)+1]+=v,all[(xb<<1)+1]+=(r-rmid+1)*v;aa=lmid;r=lmid;xb<<=1;continue;}\n\t\tmdf(l,lmid,v,ii,lmid,xb<<1);mdf(rmid,r,v,rmid,aa,(xb<<1)+1);\n\t\tbreak;\n\t}\n}\nint qry(int l,int r,int ii,int aa,int xb)\n{\n\tint ans=0;\n\twhile(1)\n\t{\n\t\tif(l==ii&&r==aa) return ans+all[xb];\n\t\tint lmid=(ii+aa)>>1,rmid=lmid+1;\n\t\ta[xb<<1]+=a[xb],all[xb<<1]+=(lmid-ii+1)*a[xb];a[(xb<<1)+1]+=a[xb],all[(xb<<1)+1]+=(aa-rmid+1)*a[xb];a[xb]=0;\n\t\tif(l>=rmid) {ii=rmid;xb<<=1;xb++;continue;}\n\t\tif(r<=lmid) {aa=lmid;xb<<=1;continue;}\n\t\tif(ii==l) {ans+=all[xb<<1];ii=rmid;l=rmid;xb<<=1;xb++;continue;}\n\t\tif(aa==r) {ans+=all[(xb<<1)+1];aa=lmid;r=lmid;xb<<=1;continue;}\n\t\treturn ans+qry(l,lmid,ii,lmid,xb<<1)+qry(rmid,r,rmid,aa,(xb<<1)+1);\n\t}\n}\nint line=0;\nchar k[200012];\nstack<int>ss;\nint f(int x)\n{\n\treturn x+250006;\n}\nsigned main()\n{\n    ios::sync_with_stdio(0);\n    int t;\n    cin>>t;\n    while(t--)\n    {\n    \tint n;\n    \tcin>>n;\n    \tgo cin>>k[i];\n    \tfor(int i=-n;i<=n;i++)\n    \t\tmdf(f(i),f(i),-qry(f(i),f(i),1,PTA+1,1),1,PTA+1,1);\n    \tint s=0,ds=0,dds=0;\n    \tline=0;\n    \tmdf(f(0),f(0),1,1,PTA+1,1);\n    \tback\n    \t{\n    \t\tif(k[i]=='(') line++;\n    \t\telse line--;\n    \t\tif(k[i]==')') s=qry(f(line+1),f(n),1,PTA+1,1);\n    \t\telse s=qry(f(-n),f(line-1),1,PTA+1,1);\n    \t\tds+=s;\n    \t\tdds+=ds;\n    \t\tmdf(f(line),f(line),1,1,PTA+1,1);\n    \t}\n    \tgo\n    \t{\n    \t\tif(k[i]=='(') ss.push(i);\n    \t\telse\n    \t\t{\n    \t\t\tif(!ss.empty())\n    \t\t\t{\n    \t\t\t\tdds-=ss.top()*(n-i+1);\n    \t\t\t\tss.pop();\n    \t\t\t}\n    \t\t}\n    \t}\n    \twhile(!ss.empty()) ss.pop();\n    \tcout<<dds<<endl;\n    }\n    return 0;\n}\n"
}