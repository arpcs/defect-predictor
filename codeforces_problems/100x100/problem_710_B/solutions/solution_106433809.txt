{
    "id": 106433809,
    "contestId": 710,
    "creationTimeSeconds": 1612426757,
    "relativeTimeSeconds": 2177,
    "problem": {
        "contestId": 710,
        "index": "B",
        "name": "Optimal Point on a Line",
        "type": "PROGRAMMING",
        "rating": 1400,
        "tags": [
            "brute force",
            "sortings"
        ]
    },
    "author": {
        "contestId": 710,
        "members": [
            {
                "handle": "Harshit4u"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1612424580
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define pb push_back\r\n#define ll long long\r\n//   cout<<\"Case #\"<<t1-t<<\": \"<<ans<<\"\\n\";\r\nusing namespace std;\r\n/*bool cmp(vector<int>:: iterator it1,vector<int>:: iterator it2)\r\n{\r\n    if(*it1>*it2)\r\n    return true;\r\n    else\r\n    return false; \r\n}*/\r\n/*bool cmp(int a, int b)\r\n{\r\n    if(abs(a)>abs(b))\r\n    return true;\r\n    else\r\n    return false;\r\n}*/\r\n/*ll int gcd(ll int a,ll int b)\r\n{\r\n    if(a==0)\r\n    return b;\r\n    else return gcd(b%a,a);\r\n}*/\r\n/*bool cmp(pair<int,int> p1,pair<int,int> p2)\r\n{\r\n    if(p1.first<p2.first)\r\n    return true;\r\n    else if(p1.first==p2.first)\r\n    {\r\n        if(p1.second<p2.second)\r\n        return true;\r\n        else\r\n        return false;\r\n    }\r\n    else\r\n    return false;\r\n}\r\n*/\r\n/*vector<int> dp(1000000001,-1);\r\nll int knapsack(ll int wt[],ll int val[],ll int W,ll int n)\r\n{\r\n    if(W==0||n==0)\r\n    return 0;\r\n    if(dp[n][W]!=-1)\r\n    return dp[n][W];\r\n    if(wt[n-1]<=W)\r\n    {\r\n        dp[n][W] = max(val[n-1]+knapsack(wt,val,W-wt[n-1],n-1),knapsack(wt,val,W,n-1));\r\n        return dp[n][W];\r\n    }\r\n    dp[n][W] = knapsack(wt,val,W,n-1);\r\n    return dp[n][W];\r\n}*/\r\n/*int vis[100001]={0};\r\n//int res=0;\r\n//vector<int> adj[100001];\r\nint dfs(int node,int res)\r\n{       \r\n    vis[node]=1;\r\n    int ct=0;\r\n    for( auto child : adj[node])\r\n    {\r\n        if(vis[child]==0){\r\n        ct++;\r\n        dfs(child,res);\r\n        }\r\n    }\r\n    if(ct)\r\n    res++;\r\n    return res;\r\n}*/\r\n /*   vector<int> adj[1000001];\r\n    bool vis[1000001];\r\n    vector<int> val,pos;\r\n    int ar[1000001];\r\n    void dfs(int node)\r\n    {\r\n        vis[node]=true;\r\n        pos.pb(node);\r\n        val.pb(ar[node-1]);\r\n        for(auto child : adj[node])\r\n        {\r\n            if(vis[child])\r\n            continue;\r\n            dfs(child);\r\n        }\r\n    }       */\r\nint main() {     \r\n    /* #ifndef\r\n     //For getting input from input.txt file                                \r\n   freopen(\"input.txt\", \"r\", stdin); \r\n    // Printing the Output to output.txt file \r\n    freopen(\"output.txt\", \"w\", stdout); \r\n    #endif*/\r\n    \r\n    \r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n    \r\n    int n;\r\n    cin>>n;\r\n   ll int ar[n];\r\n    for(int i=0;i<n;i++) cin>>ar[i];\r\n    sort(ar,ar+n);\r\n    ll int md;\r\n     int f=0;\r\n    if(n%2)\r\n    {\r\n        md=ar[n/2];\r\n    }\r\n    else\r\n    {\r\n        md=ar[n/2]+ar[(n/2)+1];\r\n        md/=2;\r\n    }\r\n    ll int ans=0;\r\n    for(int i=0;i<n;i++) ans+=abs(md-ar[i]);\r\n        md++;\r\n        ll int ans1=0;\r\n        for(int i=0;i<n;i++) ans1+=abs(md-ar[i]);\r\n   if(ans1<ans) cout<<md;\r\n   else cout<<md-1;\r\nreturn 0;\r\n}"
}