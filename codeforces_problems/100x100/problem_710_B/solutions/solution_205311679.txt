{
    "id": 205311679,
    "contestId": 710,
    "creationTimeSeconds": 1683712349,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 710,
        "index": "B",
        "name": "Optimal Point on a Line",
        "type": "PROGRAMMING",
        "rating": 1400,
        "tags": [
            "brute force",
            "sortings"
        ]
    },
    "author": {
        "contestId": 710,
        "members": [
            {
                "handle": "_zzh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1471875000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 42,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 7270400,
    "source": "//#pragma GCC optimize(2)\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define endl '\\n'\r\n#define int long long\r\ntypedef pair<int,int> PII;\r\ntypedef long long LL;\r\nconst int INF=0x3f3f3f3f,mod=1e9 + 7;\r\nconst double eps=1e-6;\r\nconst double pai=acos(-1.0);\r\n//3.14159\r\ntemplate <class T = int> T read()\r\n{\r\n    T x = 0;\r\n    char ch = getchar(), f = 0;\r\n    while(ch < '0' || ch > '9') f |= (ch == '-'), ch = getchar();\r\n    while(ch >= '0' && ch <= '9')   x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();\r\n    return f ? -x : x;\r\n}\r\ntemplate <class T = int> inline void write(T x,char ed='\\n')\r\n{\r\n    static int sta[111],tp;\r\n    if(x < 0) {\r\n        putchar('-');\r\n        x = -x;\r\n    }\r\n    if(!x){putchar('0'),putchar(ed);return;}\r\n    for(tp=0;x;x/=10)sta[++tp]=x%10;\r\n    for(;tp;putchar(sta[tp--]^48));\r\n    putchar(ed);\r\n}\r\nconst int N = 3e5 + 10;\r\nint a[N],lsum[N],rsum[N];\r\nsigned main()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    int n,sum = 0;\r\n    cin >> n;\r\n    for(int i = 1; i <= n; i++) {\r\n    \tcin >> a[i];\r\n    }\r\n    sort(a + 1,a + 1 + n);\r\n    for(int i = 1; i <= n; i++) {\r\n    \tlsum[i] = lsum[i - 1] + a[i];\r\n    }\r\n    for(int i = n; i >= 1; i--) {\r\n    \trsum[i] = rsum[i + 1] + a[i];\r\n    }\r\n    int res = 1e18;\r\n    int pos = 0;\r\n    for(int i = 1; i <= n; i++) {\r\n    \tint tmp = abs(i * a[i] - lsum[i]) + abs(rsum[i + 1] - (n - i) * a[i]);\r\n    \tif(tmp < res) {\r\n    \t\tres = tmp;\r\n    \t\tpos = a[i];\r\n    \t}\r\n    }\r\n    cout << pos << endl;\r\n    return 0;\r\n}"
}