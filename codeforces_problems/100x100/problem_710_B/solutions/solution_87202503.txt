{
    "id": 87202503,
    "contestId": 710,
    "creationTimeSeconds": 1595054746,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 710,
        "index": "B",
        "name": "Optimal Point on a Line",
        "type": "PROGRAMMING",
        "rating": 1400,
        "tags": [
            "brute force",
            "sortings"
        ]
    },
    "author": {
        "contestId": 710,
        "members": [
            {
                "handle": "anto777"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1471875000
    },
    "programmingLanguage": "Java 8",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 42,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 35942400,
    "source": "//package main;\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\npublic final class Main {\r\n    BufferedReader br;\r\n    StringTokenizer stk;\r\n\r\n    public static void main(String[] args) throws Exception {\r\n        new Main().run();\r\n    }\r\n    \r\n    {\r\n        stk = null;\r\n        br = new BufferedReader(new InputStreamReader(System.in));\r\n    }\r\n    \r\n    long mod = 998244353;\r\n    \r\n    void run() throws Exception {\r\n        int n = ni();\r\n        int[] a = new int[n];\r\n        for(int i = 0; i < n; i++)\r\n            a[i] = ni();\r\n        shuffle(a);\r\n        Arrays.sort(a);\r\n        System.out.println(n % 2 == 0 ? a[n / 2 - 1] : a[n / 2]);\r\n    }\r\n    \r\n    //Reader & Writer\r\n    String nextToken() throws Exception {\r\n        if (stk == null || !stk.hasMoreTokens()) {\r\n            stk = new StringTokenizer(br.readLine(), \" \");\r\n        }\r\n        return stk.nextToken();\r\n    }\r\n\r\n    String nt() throws Exception {\r\n        return nextToken();\r\n    }\r\n\r\n    int ni() throws Exception {\r\n        return Integer.parseInt(nextToken());\r\n    }\r\n\r\n    long nl() throws Exception {\r\n        return Long.parseLong(nextToken());\r\n    }\r\n    \r\n    double nd() throws Exception {\r\n        return Double.parseDouble(nextToken());\r\n    }\r\n    \r\n    //Some Misc methods\r\n    int get(int l, int r, int[] a) {\r\n        return l == 0 ? a[r] : a[r] - a[l - 1];\r\n    }\r\n    \r\n    void shuffle(int[] a) {\r\n        Random r = new Random();\r\n        for(int i = 0; i < a.length; i++) {\r\n            int idx = r.nextInt(a.length);\r\n            int temp = a[i];\r\n            a[i] = a[idx];\r\n            a[idx] = temp;\r\n        }\r\n    }\r\n    \r\n    void reverse(char[] a) {\r\n        for(int i = 0, j = a.length - 1; i < j; i++, j--) {\r\n            char temp = a[i];\r\n            a[i] = a[j];\r\n            a[j] = temp;\r\n        }\r\n    }\r\n}"
}