{
    "id": 129679528,
    "contestId": 509,
    "creationTimeSeconds": 1632405173,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 509,
        "index": "C",
        "name": "Sums of Digits",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 509,
        "members": [
            {
                "handle": "CoOoNaN"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1422705600
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 546,
    "memoryConsumedBytes": 7372800,
    "source": "/*\u0627\u0644\u062d\u0643\u0645\u0629 \u0636\u0627\u0644\u0629 \u0627\u0644\u0645\u0624\u0645\u0646 \u0641\u0623\u0646\u0627 \u0648\u062c\u062f\u0647\u0627 \u0641\u0647\u0648 \u0627\u062d\u0642 \u0628\u0647\u0627*/\r\n#define _CRT_SECURE_NO_WARNINGS\r\n#include<bits/stdc++.h>\r\n//#include <Windows.h>\r\n#include<unordered_map>\r\nusing namespace std;\r\n//<DEFINE>\r\n//void HideConsole()\r\n//{\r\n//    ::ShowWindow(::GetConsoleWindow(), SW_HIDE);\r\n//}\r\n//\r\n//void ShowConsole()\r\n//{\r\n//    ::ShowWindow(::GetConsoleWindow(), SW_SHOW);\r\n//}\r\n\r\nvoid Fast() {\r\n    ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\r\n}\r\nvoid File() {\r\n#ifndef ONLINE_JUDGE\r\n    // HideConsole();\r\n    freopen(\"Input.txt\", \"r\", stdin);\r\n    freopen(\"Output.txt\", \"w\", stdout);\r\n#endif\r\n}\r\n#ifdef _MSC_VER\r\n#include <intrin.h>\r\n#define __builtin_popcount __popcnt\r\n#ifdef _WIN64\r\n#define __builtin_popcountll __popcnt64\r\n#else\r\ninline int __builtin_popcountll(__int64 a) {\r\n    return __builtin_popcount((unsigned int)a) + __builtin_popcount(a >> 32);\r\n}\r\n#endif\r\n#endif\r\nusing ll = long long;\r\nusing ull = unsigned long long;\r\n#define Mod 1000000007\r\nll gcd(ll a, ll b) {\r\n    return!b ? a : gcd(b, a % b);\r\n}\r\n#define fix(n) cout << fixed << setprecision(n);\r\n#define all(a) a.begin(), a.end()\r\n#define rall(a) a.rbegin(), a.rend()\r\n#define skip continue\r\n#define pi  acos(-1)\r\n#define endl \"\\n\"\r\n#define ceil(x,y) (((x)+(y)-1)/(y))\r\n#define clr(v,d) memset(v, d, sizeof v)\r\n//sin(x*pi/180)\r\n//alot of memset may cause TLE\r\n#define TC int t$$t$;cin>>t$$t$;while(t$$t$--)\r\n//</DEFINE>\r\nint dx[] = { 0,0,-1,1,1,1,-1,-1 };\r\nint dy[] = { 1,-1,0,0,1,-1,1,-1 };\r\n//***********stop when you reach the concept of don't stop***********//\r\nint b;\r\nstring lst1, lst2;\r\nint res[305][305][2][2], vis[305][305][2][2], id = 0;\r\n//<FUNCTIONS>\r\nint solve(int idx, int sum, bool flag, bool bigger) {\r\n    int& mn = res[idx][sum][flag][bigger];\r\n    if (sum > b || idx > 303)return mn = 1e9;\r\n    if (sum == b && ((!bigger&& flag&& idx == lst1.size()) || idx > lst1.size()))return mn = 0;\r\n    if (vis[idx][sum][flag][bigger] == id)return mn;\r\n    mn = 1e9, vis[idx][sum][flag][bigger] = id;\r\n    if (idx >= lst1.size() || flag) {\r\n        for (int i = 0; i < 10; i++) {\r\n            mn = min(mn, solve(idx + 1, sum + i, 1, bigger) + 1);\r\n        }\r\n    }\r\n    else {\r\n        for (int i = !idx; i < 10; i++) {\r\n            mn = min(mn, solve(idx + 1, sum + i, i != lst1[idx] - '0', i < lst1[idx] - '0') + 1);\r\n        }\r\n    }\r\n    return mn;\r\n}\r\nvoid build(int idx, int sum, bool flag, bool bigger) {\r\n    if (sum > b || idx > 304)return;\r\n    if (sum == b && (((!bigger && flag && idx == lst1.size())) || idx > lst1.size()))return;\r\n    int& mn = res[idx][sum][flag][bigger];\r\n    if (idx >= lst1.size() || flag) {\r\n        for (int i = 0; i < 10; i++) {\r\n            if (mn == solve(idx + 1, sum + i, 1, bigger) + 1) {\r\n                lst2 += (char)(i + '0');\r\n                build(idx + 1, sum + i, 1, bigger);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (int i = !idx; i < 10; i++) {\r\n            if (mn == solve(idx + 1, sum + i, i != lst1[idx] - '0', i < lst1[idx] - '0') + 1) {\r\n                lst2 += (char)(i + '0');\r\n                build(idx + 1, sum + i, i != lst1[idx] - '0', i < lst1[idx] - '0');\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n    while (n--) {\r\n        id++;\r\n        cin >> b;\r\n        lst1 = lst2;\r\n        lst2.clear();\r\n        solve(0, 0, 0, 0);\r\n        build(0, 0, 0, 0);\r\n        cout << lst2 << endl;\r\n    }\r\n}\r\n//</FUNCTIONS>\t\r\nint main() {\r\n    Fast();\r\n    File();\r\n   // TC\r\n        solve();\r\n} "
}