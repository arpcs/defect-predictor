{
    "id": 145009255,
    "contestId": 509,
    "creationTimeSeconds": 1643877317,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 509,
        "index": "C",
        "name": "Sums of Digits",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 509,
        "members": [
            {
                "handle": "Priyansh31dec"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1422705600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 921600,
    "source": "/* Priyansh Agarwal*/\r\n\r\n#include<bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace chrono;\r\nusing namespace __gnu_pbds;\r\n\r\n#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\r\n#define MOD 1000000007\r\n#define MOD1 998244353\r\n#define INF 1e18\r\n#define nline \"\\n\"\r\n#define pb push_back\r\n#define ppb pop_back\r\n#define mp make_pair\r\n#define ff first\r\n#define ss second\r\n#define PI 3.141592653589793238462\r\n#define set_bits __builtin_popcountll\r\n#define sz(x) ((int)(x).size())\r\n#define all(x) (x).begin(), (x).end()\r\n\r\n#ifdef Priyansh31dec\r\n#define debug(x) cerr << #x<<\" \"; _print(x); cerr << endl;\r\n#else\r\n#define debug(x);\r\n#endif\r\n\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double lld;\r\ntypedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag, tree_order_statistics_node_update > pbds; // find_by_order, order_of_key\r\n\r\nvoid _print(ll t) {cerr << t;}\r\nvoid _print(int t) {cerr << t;}\r\nvoid _print(string t) {cerr << t;}\r\nvoid _print(char t) {cerr << t;}\r\nvoid _print(lld t) {cerr << t;}\r\nvoid _print(double t) {cerr << t;}\r\nvoid _print(ull t) {cerr << t;}\r\n\r\ntemplate <class T, class V> void _print(pair <T, V> p);\r\ntemplate <class T> void _print(vector <T> v);\r\ntemplate <class T> void _print(set <T> v);\r\ntemplate <class T, class V> void _print(map <T, V> v);\r\ntemplate <class T> void _print(multiset <T> v);\r\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\r\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\nvoid _print(pbds v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\n\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n/*---------------------------------------------------------------------------------------------------------------------------*/\r\nll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}\r\nll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}\r\nvoid extendgcd(ll a, ll b, ll*v) {if (b == 0) {v[0] = 1; v[1] = 0; v[2] = a; return ;} extendgcd(b, a % b, v); ll x = v[1]; v[1] = v[0] - v[1] * (a / b); v[0] = x; return;} //pass an arry of size1 3\r\nll mminv(ll a, ll b) {ll arr[3]; extendgcd(a, b, arr); return arr[0];} //for non prime b\r\nll mminvprime(ll a, ll b) {return expo(a, b - 2, b);}\r\nbool revsort(ll a, ll b) {return a > b;}\r\nll combination(ll n, ll r, ll m, ll *fact, ll *ifact) {ll val1 = fact[n]; ll val2 = ifact[n - r]; ll val3 = ifact[r]; return (((val1 * val2) % m) * val3) % m;}\r\nvoid google(int t) {cout << \"Case #\" << t << \": \";}\r\nvector<ll> sieve(int n) {int*arr = new int[n + 1](); vector<ll> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}\r\nll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\r\nll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}\r\nll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}\r\nll mod_div(ll a, ll b, ll m) {a = a % m; b = b % m; return (mod_mul(a, mminvprime(b, m), m) + m) % m;}  //only for prime m\r\nll phin(ll n) {ll number = n; if (n % 2 == 0) {number /= 2; while (n % 2 == 0) n /= 2;} for (ll i = 3; i <= sqrt(n); i += 2) {if (n % i == 0) {while (n % i == 0)n /= i; number = (number / i * (i - 1));}} if (n > 1)number = (number / n * (n - 1)) ; return number;} //O(sqrt(N))\r\nll getRandomNumber(ll l, ll r) {return uniform_int_distribution<ll>(l, r)(rng);} \r\n/*--------------------------------------------------------------------------------------------------------------------------*/\r\nchar dp[501][501][2];\r\nchar helper2(int index, int sum, int tight, string& s){\r\n    if(sum < 0)\r\n        return '!';\r\n    if(index == s.length()){\r\n        if(sum != 0)\r\n            return '!';\r\n        if(tight)\r\n            return '!';\r\n        else\r\n            return '-';\r\n    }\r\n    if(dp[index][sum][tight] != '?')\r\n        return dp[index][sum][tight];\r\n    char min = tight ? s[index] : '0';\r\n    char max = '9';\r\n    char ans = '!';\r\n    for(char ch = min; ch <= max; ch++){\r\n        char ans1 = helper2(index + 1, sum - (ch - '0'), tight ? ch == min : 0, s);\r\n        if(ans1 != '!'){\r\n            ans = ch;\r\n            break;\r\n        }\r\n    }\r\n    dp[index][sum][tight] = ans;\r\n    return ans;\r\n}\r\nstring helper(string s, int sum){\r\n    for(int i = 0; i <= s.length(); i++){\r\n        for(int j = 0; j <= sum; j++){\r\n            dp[i][j][0] = '?';\r\n            dp[i][j][1] = '?';\r\n        }\r\n    }\r\n    helper2(0, sum, 1, s);\r\n    string ans = \"\";\r\n    int tight = 1;\r\n    for(int i = 0; i < s.length(); i++){\r\n        char min = tight ? s[i] : '0';\r\n        char max = '9'; \r\n        char here = dp[i][sum][tight];\r\n        int newTight = tight ? here == min : 0;\r\n        sum -= (here - '0');\r\n        tight = newTight;\r\n        ans += here;\r\n    }\r\n    return ans;\r\n}\r\nvoid solve(){\r\n    int n;\r\n    cin >> n;\r\n    vector<int> b(n);\r\n    string prev(500, '0');\r\n    vector<string> ans(n);\r\n    for(int i = 0; i < n; i++){\r\n        cin >> b[i];\r\n    }\r\n    for(int i = 0; i < n; i++){\r\n        ans[i] = helper(prev, b[i]);\r\n        prev = ans[i];\r\n    }\r\n    for(auto &i : ans){\r\n        reverse(all(i));\r\n        while(sz(i) > 1 && i.back() == '0'){\r\n            i.ppb();\r\n        }\r\n        reverse(all(i));\r\n        cout << i << nline;\r\n    }\r\n}\r\n\r\nint main() {\r\n#ifdef Priyansh31dec\r\n    freopen(\"Error.txt\", \"w\", stderr);\r\n#endif\r\n    fastio();\r\n    auto start1 = high_resolution_clock::now();\r\n    solve();\r\n    auto stop1 = high_resolution_clock::now();\r\n    auto duration = duration_cast<microseconds>(stop1 - start1);\r\n#ifdef Priyansh31dec\r\n    cerr << \"Time: \" << duration . count() / 1000 << endl;\r\n#endif\r\n}"
}