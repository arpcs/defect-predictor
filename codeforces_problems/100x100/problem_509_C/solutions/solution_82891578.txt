{
    "id": 82891578,
    "contestId": 509,
    "creationTimeSeconds": 1591566563,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 509,
        "index": "C",
        "name": "Sums of Digits",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 509,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1422705600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n#include <unordered_map>\n#include <unordered_set>\nusing namespace std;\n#define endl '\\n'\n#define PI acos(-1)\ntypedef long long ll;\n//\tTable is the complete reverse of dp\n//\tAlways think of the pattern (LCM, GCD)\n//\tBe careful of unsigned\n//\tdouble epsilon = FLT_EPSILON;\n//\tThink of a solution that gets TLE and optimize it\nstring solve(int& d, string& x)\n{\n\tbool **dp[2];\n\treverse(x.begin(), x.end());\n\tx += '0';\n\tint k = max((int)x.size(), (d + 8) / 9);\n\tfor(int i = 0; i < 2; i++)\n\t{\n\t\tdp[i] = new bool *[k + 1];\n\t\tfor(int j = 0; j <= k; j++)\n\t\t\tdp[i][j] = new bool[d + 1];\n\t}\n\tmemset(dp[0][k], 0, d + 1);\n\tmemset(dp[1][k] + 1, 0, d);\n\tdp[1][k][0] = 1;\n\tfor(int i = k - 1; i >= 0; i--)\n\t\tfor(int rem = 0; rem <= d; rem++)\n\t\t{\n\t\t\t{\n\t\t\t\tbool &ret = dp[0][i][rem];\n\t\t\t\tret = 0;\n\t\t\t\tfor(int j = min(rem, 9); !ret && j > x[i] - '0'; j--)\n\t\t\t\t\tret = dp[1][i + 1][rem - j];\n\t\t\t\tif(x[i] - '0' <= rem && !ret)\n\t\t\t\t\tret = dp[0][i + 1][rem - x[i] + '0'];\n\t\t\t}\n\t\t\t{\n\t\t\t\tbool &ret = dp[1][i][rem];\n\t\t\t\tret = 0;\n\t\t\t\tfor(int j = min(rem, 9); !ret && j >= 0; j--)\n\t\t\t\t\tret = dp[1][i + 1][rem - j];\n\t\t\t}\n\t\t}\n\tstring ans;\n\t{\n\t\tint i = k - 1, rem = d;\n\t\tbool more = 0;\n\t\twhile(i && dp[more][i - 1][rem])\n\t\t\ti--;\n\t\twhile(i > 0)\n\t\t{\n\t\t\tif(!more)\n\t\t\t{\n\t\t\t\tfor(int j = x[i] - '0'; j <= min(rem, 9); j++)\n\t\t\t\t\tif(dp[j != x[i] - '0'][i - 1][rem - j])\n\t\t\t\t\t{\n\t\t\t\t\t\tans += j + '0';\n\t\t\t\t\t\trem -= j;\n\t\t\t\t\t\tmore = j != x[i] - '0';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor(int j = 0; j <= min(rem, 9); j++)\n\t\t\t\t\tif(dp[1][i - 1][rem - j])\n\t\t\t\t\t{\n\t\t\t\t\t\tans += j + '0';\n\t\t\t\t\t\trem -= j;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\t\t\ti--;\n\t\t}\n\t\tans += rem + '0';\n\t}\n\tfor(int i = 0; i < 2; i++)\n\t{\n\t\tfor(int j = 0; j <= k; j++)\n\t\t\tdelete[] dp[i][j];\n\t\tdelete[] dp[i];\n\t}\n\treturn ans;\n}\nint main()\n{\n    cin.tie(nullptr); cout.tie(nullptr); ios_base::sync_with_stdio(false);\n#ifndef ONLINE_JUDGE\n    freopen(\"in.txt\", \"r\", stdin);\n    freopen(\"out.txt\", \"w\", stdout);\n    clock_t START_TIME = clock();\n#endif\n    int t, n;\n    cin >> t;\n    string s = \"0\";\n    while(t--)\n    {\n    \tcin >> n;\n    \ts = solve(n, s);\n    \tcout << s << endl;\n    }\n#ifndef ONLINE_JUDGE\n    cout << endl << \"// Time taken = \" << fixed << setprecision(5) << (clock() - START_TIME) * 1e3 / CLOCKS_PER_SEC << \" ms\";\n#endif\n}\n\n     \t \t\t\t\t\t\t \t \t\t\t\t \t\t\t\t \t   \t"
}