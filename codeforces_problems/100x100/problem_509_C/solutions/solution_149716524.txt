{
    "id": 149716524,
    "contestId": 509,
    "creationTimeSeconds": 1647349562,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 509,
        "index": "C",
        "name": "Sums of Digits",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 509,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1422705600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 716800,
    "source": "#define _CRT_SECURE_NO_WARNINGS\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\n#define all(x)                 x.begin(),x.end()\n#define allr(x)                x.rbegin(),x.rend()\n#define clr(x,val)           memset((x),(val),sizeof(x))\nconst double EPS = 1e-7;\nint const Mod = 1e9 + 7;\nint dx[] = { 0,-1, 0,1 };\nint dy[] = { 1, 0,-1,0 };\nint setBit1(int num, int idx) { return  num | (1 << idx); }\nint setBit0(int num, int idx) { return  num & ~(1 << idx); }\nint getBit(int num, int idx) { return (num >> idx) & 1; }\nint flibBit(int num, int idx) { return  num ^ (1 << idx); }\nint countBits1(int num) { int cnt = 0; while (num) { cnt++, num &= (num - 1); }return cnt; }\nll gcd(ll a, ll b) { return((b == 0) ? a : gcd(b, a % b)); }\nll lcm(ll a, ll b) { return (b / gcd(a, b)) * a; }\nvoid fast()\n{\n\tios_base::sync_with_stdio(false);\n\tcin.tie(nullptr), cout.tie(nullptr);\n}\nstring prevv, ans, answer;\nint dp[300][300][2];\nstring get_min(string A, string B)\n{\n\tif (A.size() == B.size())\n\t\treturn min(A, B);\n\telse if (A.size() > B.size())\n\t\treturn B;\n\telse\n\t\treturn A;\n}\nint sol(int i, int sum, int flag)\n{\n\tif (sum == 0)\n\t{\n\t\tif (i == prevv.size())\n\t\t\treturn flag;\n\t\telse\n\t\t\treturn 1;\n\t\treturn 0;\n\t}\n\tif (i == 10)\n\t\treturn 0;\n\tint& ret = dp[i][sum][flag];\n\tif (~ret)\n\t\treturn ret;\n\tret = 0;\n\tint limit_L = ((i == 0) ? 1 : 0);\n\tint tem = ((i >= prevv.size()) ? -1 : (prevv[i] - '0'));\n\tfor (int j = limit_L; j <= 9; j++)\n\t{\n\t\tif (sum >= j)\n\t\t\tret |= sol(i + 1, sum - j, flag | (j > tem));\n\t\telse\n\t\t\tbreak;\n\t}\n\treturn ret;\n}\nvoid Build(int i, int sum, int flag)\n{\n\tif (sum == 0)\n\t{\n\t\tstring temp = ans;\n\t\tif (temp.size() < prevv.size())\n\t\t{\n\t\t\twhile (temp.size() < prevv.size())\n\t\t\t\ttemp += '0';\n\t\t\tif (!flag)\n\t\t\t\ttemp += '0';\n\t\t}\n\t\tanswer = get_min(answer, temp);\n\t\treturn;\n\t}\n\tint& ret = dp[i][sum][flag];\n\tint limit_L = ((i == 0) ? 1 : 0);\n\tint tem = ((i >= prevv.size()) ? -1 : (prevv[i] - '0'));\n\tfor (int j = limit_L; j <= 9; j++)\n\t{\n\t\tif (sum >= j)\n\t\t{\n\t\t\tif (ret == sol(i + 1, sum - j, flag | (j > tem)))\n\t\t\t{\n\t\t\t\tans.push_back(char(j + '0'));\n\t\t\t\tBuild(i + 1, sum - j, flag | (j > tem));\n\t\t\t\tans.pop_back();\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tbreak;\n\t}\n}\nvoid solve()\n{\n\tint N, X; cin >> N;\n\twhile (N--)\n\t{\n\t\tcin >> X;\n\t\tclr(dp, -1);\n\t\tans.clear();\n\t\tanswer = string(350, 'Z');\n\t\tsol(0, X, 0);\n\t\tBuild(0, X, 0);\n\t\tcout << answer << \"\\n\";\n\t\tprevv = answer;\n\t}\n}\nint main()\n{\n\t//\u0648\u064e\u0623\u064e\u0646\u0652 \u0644\u064e\u064a\u0652\u0633\u064e \u0644\u0650\u0644\u0652\u0625\u0650\u0646\u0652\u0633\u064e\u0627\u0646\u0650 \u0625\u0650\u0644\u0651\u064e\u0627 \u0645\u064e\u0627 \u0633\u064e\u0639\u064e\u0649\n\tfast();\n\tint T = 1; //cin >> T;\n\twhile (T--)\n\t\tsolve();\n}\n\t\t \t \t \t\t\t\t\t\t\t \t    \t \t \t   \t"
}