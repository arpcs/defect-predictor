{
    "id": 192583422,
    "contestId": 509,
    "creationTimeSeconds": 1675764730,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 509,
        "index": "C",
        "name": "Sums of Digits",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 509,
        "members": [
            {
                "handle": "Azimjonm0012"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1422705600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 204800,
    "source": "/*\r\r\nSubmitted With (^^) by -> Hossam ^_^\r\r\n_____________________\r\r\n|     ___     ___     |\r\r\n|    (^_^)   (^_^)    |\r\r\n|   /( | )\\_/( | )\\   |\r\r\n|_____|_|_____|_|_____|\r\r\n*/\r\r\n\r\r\n#include <bits/stdc++.h>\r\r\n\r\r\nusing namespace std;\r\r\n\r\r\ninline void prep(){cin.tie(0); cin.sync_with_stdio(0);};\r\r\n\r\r\n#define X first\r\r\n#define Y second\r\r\n#define ll long long\r\r\n#define inf (0x7fffffffffffffff)\r\r\n#define all(x) x.begin(), x.end()\r\r\n#define debug(x) cerr << #x << \" = \" << (x) << \" \";\r\r\n#define ZXC cerr << clock() * 1.0 / CLOCKS_PER_SEC << endl;\r\r\n\r\r\nconst int mod = (int)1e9 + 7;\r\r\nconst int MX = (int)1e5 + 5;\r\r\n\r\r\nint main()\r\r\n{\r\r\n    prep();\r\r\n\r\r\n    int n;\r\r\n    cin >> n;\r\r\n\r\r\n    string prv = \"0\";\r\r\n    while(n--){\r\r\n        int X, x;\r\r\n        cin >> X;\r\r\n        x = X;\r\r\n        int sz = prv.size();\r\r\n        int my_sz = (x + 8) / 9;\r\r\n\r\r\n        bool ok = false; // res >= prv\r\r\n        if(my_sz > sz) ok = true;\r\r\n\r\r\n        string res(max(my_sz, sz), '0');\r\r\n\r\r\n        int i = (int)res.size() - 1;\r\r\n\r\r\n        while(i >= 0){\r\r\n\r\r\n            //my_digit\r\r\n            int my_digit = 0;\r\r\n            for(int d = 0; d <= 9; ++d){\r\r\n                if(x - d <= i * 9){\r\r\n                    my_digit = d;\r\r\n                    break;\r\r\n                }\r\r\n            }\r\r\n\r\r\n            if(!ok) my_digit = max(my_digit, prv[i] - '0');\r\r\n\r\r\n            if(my_digit > (prv[i] - '0')) ok = true;\r\r\n\r\r\n            if(my_digit > x || (my_digit == x && !ok)){\r\r\n\r\r\n                do{\r\r\n                    \r\r\n                    if(i + 1 == res.size()){\r\r\n                        res.push_back('1'); x--;\r\r\n                        break;\r\r\n                    }\r\r\n                    if(res[i + 1] != '9'){\r\r\n                        res[i + 1]++; x--; break;\r\r\n                    }\r\r\n                    else{\r\r\n                        i++;\r\r\n                        res[i] = '0'; x += 9;\r\r\n                    }\r\r\n\r\r\n                }while(i < res.size());\r\r\n\r\r\n                ok = true;\r\r\n            }\r\r\n            else{\r\r\n                res[i] = my_digit + '0'; x -= my_digit; --i;\r\r\n            }\r\r\n        }\r\r\n\r\r\n        string pp(all(res));\r\r\n        reverse(all(pp));\r\r\n        cout << pp << \"\\n\";\r\r\n        prv = res;\r\r\n    }\r\r\n\r\r\n    // ZXC\r\r\n    return 0;\r\r\n}"
}