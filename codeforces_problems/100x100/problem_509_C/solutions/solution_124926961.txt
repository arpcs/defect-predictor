{
    "id": 124926961,
    "contestId": 509,
    "creationTimeSeconds": 1628146498,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 509,
        "index": "C",
        "name": "Sums of Digits",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 509,
        "members": [
            {
                "handle": "Arielzz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1422705600
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 3891200,
    "source": "/*\r\nwork by: Ariel\r\n\u9996\u5148\u60f3\u5230\u7684\u662f\u66b4\u529b\uff0c\u5faa\u73af\u6bcf\u4e00\u4f4d\uff0c\u540c\u65f6\u4ece\u5c0f\u5230\u5927\u6a21\u62df\u6570\u5b57\uff0c\u76f4\u5230\u6a21\u62df\u7684\u6570\u5b57\u5408\u6cd5\u4e3a\u6b62\r\n\u53d1\u73b0\u8fd9\u6837\u679a\u4e3e\u7684\u6570\u5b57\u53ef\u80fd\u8fbe\u523030\u591a\u4f4d\uff0c\u4f1a T\r\n\u4e00\u79cd\u6a21\u62df\u7684\u601d\u60f3\uff1a\r\n\u5bf9\u4e8e\u7b2c\u4e00\u4e2a\u6570\u5b57\uff0c\u76f4\u63a5\u6784\u9020\uff0c\u4ece\u4f4e\u4f4d\u5411\u9ad8\u4f4d\u6784\u9020\u51fa\u7b26\u5408\u6761\u4ef6\u7684\u6700\u5c0f\u7684\u6570\r\n\u5bf9\u4e8e\u540e\u9762\u7684\u6570\uff0c\u53ef\u4ee5\u5728\u524d\u4e00\u4e2a\u6570\u7684\u57fa\u7840\u4e0a\r\n\u5982\u679c\u8981\u6c42\u6bcf\u4e00\u4f4d\u7684\u548c\u6bd4\u524d\u4e00\u4e2a\u6570\u5927\uff0c\u90a3\u4e48\u76f4\u63a5\u628a\u5927\u5f97\u5dee\u503c\u8fdb\u884c\u6784\u9020\r\n\u5982\u679c\u5c0f\u7684\u8bdd\uff0c\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u6e05\u7a7a\uff0c\u76f4\u5230\u6e05\u7a7a\u7684\u503c\u5927\u4e8e\u8981\u6c42\u7684\u5dee\u503c\uff0c\u518d\u5728\u4e0b\u4e00\u4f4d(>= 9) +1 \u5c31\u6784\u9020\u51fa\u7b26\u5408\u6761\u4ef6\u7684\u6700\u5c0f\u7684\u6570\u4e86  \r\n*/\r\n#include<iostream>\r\n#include<cstdio>\r\n#include<cstring>\r\n#include<queue>\r\n#include<vector>\r\nusing namespace std;\r\nconst int MAXN = 410;\r\nint read() {\r\n   int x = 0, f = 1; char c = getchar();\r\n   while(c < '0' || c > '9') {if(c == '-') f = -1;c = getchar();}\r\n   while(c >= '0' && c <= '9') {x = x * 10 + c - '0';c = getchar();}\r\n   return x * f;\r\n}\r\nint n, len, a[MAXN], b[MAXN];\r\nvoid get(int num) {\r\n   for (int i = 1; num; i++) {\r\n   \t   while(num && b[i] < 9) {\r\n   \t      num--, b[i]++;\r\n\t   }\r\n\t  if(i > len && !num) len = i;\r\n   }\r\n}\r\nvoid print() {\r\n   for (int i = len; i >= 1; i--) printf(\"%d\", b[i]);\r\n   puts(\"\");\r\n}\r\nint main() {\r\n  n = read();\r\n  for (int i = 1; i <= n; i++) a[i] = read();\r\n  get(a[1]);\r\n  print();\r\n  for (int i = 2; i <= n; i++) {\r\n  \t int delt = a[i] - a[i - 1];\r\n  \t if (delt > 0) {\r\n  \t    get(delt), print();\t\r\n\t }\r\n\t else {\r\n\t   int k = 1;\r\n\t   while(1) {\r\n\t   \t if (k > len) len = k;\r\n\t   \t if (delt > 0 && b[k] < 9) {\r\n\t   \t      b[k]++;\r\n\t\t\t  get(delt - 1);\r\n\t\t\t  print();\r\n\t\t\t  break;\t\r\n\t\t  }\r\n\t\t delt += b[k];\r\n\t\t b[k] = 0, k++;\r\n\t   }\r\n\t }\r\n  }\r\n  return 0;\r\n}\r\n"
}