{
    "id": 121504635,
    "contestId": 509,
    "creationTimeSeconds": 1625594557,
    "relativeTimeSeconds": 7357,
    "problem": {
        "contestId": 509,
        "index": "C",
        "name": "Sums of Digits",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 509,
        "members": [
            {
                "handle": "ProWizard84"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1625587200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 38502400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nint T,t,n,m;\r\nint num[310],val[310][31000],len[310];\r\nbool solve(int pos,int length,int p2){\r\n    int i,j,k;\r\n    for(i=length;i>0;i--){\r\n        if(p2>val[pos-1][i] && val[pos-1][i]!=9)\r\n          return true;\r\n        p2-=val[pos-1][i];\r\n    }\r\n    return false;\r\n}\r\nvoid dfs(int pos,int length1,int length2,int p,bool flag){\r\n    if(length1==0) return;\r\n    int p2;\r\n    if(flag){\r\n        p2=max(0,p-(length1-1)*9);\r\n        if(length1==len[pos]) p2=max(p2,1);\r\n        if(length1==1) p2=p;\r\n        val[pos][length1]=p2;\r\n        dfs(pos,length1-1,length2-1,p-p2,true);\r\n    }\r\n    else{\r\n        p2=max(val[pos-1][length2],p-(length1-1)*9);\r\n        if(length1==len[pos])\r\n          p2=max(p2,1);\r\n        if(length1==1)\r\n          p2=p;\r\n        if(p2>val[pos-1][length2]){\r\n            val[pos][length1]=p2;\r\n            dfs(pos,length1-1,length2-1,p-p2,true);\r\n        }\r\n        else if(solve(pos,length1-1,p-p2)){\r\n            val[pos][length1]=p2;\r\n            dfs(pos,length1-1,length2-1,p-p2,false);\r\n        }\r\n        else{\r\n            p2++;\r\n            val[pos][length1]=p2;\r\n            dfs(pos,length1-1,length2-1,p-p2,true);\r\n        }\r\n    }\r\n}\r\nint main(){\r\n    int i,j,k; scanf(\"%d\",&n);\r\n    for(i=1;i<=n;i++) scanf(\"%d\",&num[i]);\r\n    len[0]=1;\r\n    for(i=1;i<=n;i++){\r\n        if(len[i-1]+1<=(num[i]+8)/9){\r\n            dfs(i,(num[i]+8)/9,len[i-1],num[i],true);\r\n            len[i]=(num[i]+8)/9;\r\n        }\r\n        else if(solve(i,len[i-1],num[i])){\r\n            len[i]=len[i-1];\r\n            dfs(i,len[i-1],len[i-1],num[i],false);\r\n        }\r\n        else{\r\n            len[i]=len[i-1]+1;\r\n            dfs(i,len[i-1]+1,len[i-1],num[i],true);\r\n        }\r\n        for(j=len[i];j>=1;j--) printf(\"%d\",val[i][j]);\r\n        printf(\"\\n\");\r\n    }\r\n}"
}