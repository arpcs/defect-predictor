{
    "id": 93049871,
    "contestId": 509,
    "creationTimeSeconds": 1600349135,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 509,
        "index": "C",
        "name": "Sums of Digits",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 509,
        "members": [
            {
                "handle": "YCE_22"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1422705600
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 204800,
    "source": "#include<cstdio>\r\n#include<cstring>\r\nusing namespace std;\r\nstruct bigint {\r\n\tint a[307]; bigint() {memset(a, 0, sizeof(a)), a[0] = 1;}\r\n\tint& operator [](int n) {return a[n];}\r\n\tvoid out() {for (int i = a[0]; i; --i) printf(\"%d\", a[i]); puts(\"\");}\r\n\tvoid insert(int p, int x) {for (int i = a[0]; i >= p; --i) a[i + 1] = a[i]; a[p] = x; if(a[a[0] + 1]) ++a[0];}\r\n\tfriend int operator <=(bigint a, bigint b) {\r\n\t\tif (a[0] < b[0]) return 1;\r\n\t\tif (a[0] > b[0]) return 0;\r\n\t\tfor (int i = a[0]; i; --i) {\r\n\t\t\tif (a[i] < b[i]) return 1;\r\n\t\t\tif (a[i] > b[i]) return 0; \r\n\t\t} return 1;\r\n\t}\r\n} a[307];\r\nint n, b;\r\nint dfs(bigint& d, bigint p, int res, int len, int eq) {\r\n\tif (res < 0 || res > len * 9) return 0;\r\n\tif (eq && d[len + 1] < p[len + 1]) return 0;\r\n\tif (!len) return !eq; eq = d[len + 1] == p[len + 1];\r\n\tfor (int i = 0; i < 10; ++i) {\r\n\t\td[len] = i; if (dfs(d, p, res - i, len - 1, eq)) return 1;\r\n\t} return 0;\r\n}\r\nint main() {\r\n\tscanf(\"%d\", &n);\r\n\tfor (int i = 1; i <= n; ++i) {\r\n\t\tscanf(\"%d\", &b);\r\n\t\tint det = a[i - 1][0], least = 0, most = 9 * a[i - 1][0];\r\n\t\twhile (det && a[i - 1][det] == 9) --det;\r\n\t\tif (!det) least = 3000;\r\n\t\telse {\r\n\t\t\tleast = a[i - 1][det] + 1;\r\n\t\t\tfor (int j = a[i - 1][0]; j > det; --j) least += a[i - 1][j];\r\n\t\t}\r\n\t\tif (b < least || b > most) {\r\n\t\t\twhile (b > 8) a[i].insert(a[i][a[i][0]] ? a[i][0] + 1 : 1, 9), b -= 9;\r\n\t\t\tif (b) a[i].insert(a[i][a[i][0]] ? a[i][0] + 1 : 1, b);\r\n\t\t\twhile (a[i][0] <= a[i - 1][0]) {\r\n\t\t\t\tif (a[i][a[i][0]] > 1) a[i].insert(a[i][0], a[i][a[i][0]] - 1), a[i][a[i][0]] = 1;\r\n\t\t\t\telse a[i].insert(a[i][0], 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\ta[i][0] = a[i - 1][0];\r\n\t\t\tdfs(a[i], a[i - 1], b, a[i][0], 1);\r\n\t\t}\r\n\t}\r\n\tfor (int i = 1; i <= n; ++i) a[i].out();\r\n\treturn 0;\r\n}"
}