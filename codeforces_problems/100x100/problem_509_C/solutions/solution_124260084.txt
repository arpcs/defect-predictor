{
    "id": 124260084,
    "contestId": 509,
    "creationTimeSeconds": 1627643435,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 509,
        "index": "C",
        "name": "Sums of Digits",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 509,
        "members": [
            {
                "handle": "teraqqq"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1422705600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 170,
    "memoryConsumedBytes": 3891200,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define F first\r\n#define S second\r\n\r\nusing namespace std;\r\nusing ll = long long;\r\nusing pi = pair<int, int>;\r\nusing vi = vector<int>;\r\n\r\ntemplate<class T> bool ckmin(T& a, T b) { return b < a ? a = b, true : false; }\r\ntemplate<class T> bool ckmax(T& a, T b) { return a < b ? a = b, true : false; }\r\n\r\ntemplate<class T> using pq_min = priority_queue<T, vector<T>, greater<T>>;\r\ntemplate<class T> using pq_max = priority_queue<T, vector<T>, less<T>>;\r\n\r\nconst int B = 301;\r\nconst int T = 1000;\r\n\r\nint main() {\r\n    ios::sync_with_stdio(0); cin.tie(0);\r\n\r\n    int n; cin >> n;\r\n    string s(T, '0');\r\n\r\n    for (int iter = n; iter--; ) {\r\n        int b; cin >> b;\r\n\r\n        // cout << \"I need \" << b << endl;\r\n\r\n        vector<array<int, 10>> go(2*T+2);\r\n        for (auto& u : go) fill(u.begin(), u.end(), -1);\r\n\r\n        for (int i = 2*T; i--; ) {\r\n            if (i & 1) {\r\n                fill(go[i].begin(), go[i].end(), i+2);\r\n            } else {\r\n                const int x = s[i/2] - '0';\r\n                go[i][x] = i + 2;\r\n                for (int j = x + 1; j < 10; ++j) go[i][j] = i + 3;\r\n            }\r\n        }\r\n\r\n        vector<bitset<B>> dp(2*T+2);\r\n        for (auto& u : dp) u.reset();\r\n\r\n        dp[2*T+1][0] = true;\r\n        for (int i = 2*T; i--; ) {\r\n            for (int j = 0; j < 10; ++j) if (go[i][j] >= 0) dp[i] |= dp[go[i][j]] << j;\r\n        }\r\n\r\n        string t(T, '0');\r\n        for (int i = 0, v = 0; i < T; ++i) {\r\n            for (int j = 0; j < 10; ++j) {\r\n                if (go[v][j] < 0) continue;\r\n                if (dp[go[v][j]][b - j]) {\r\n                    t[i] = j + '0';\r\n                    b -= j;\r\n                    v = go[v][j];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        s = t;\r\n        for (int i = 0, w = 0; i < T; ++i) {\r\n            if (s[i] == '0') {\r\n                if (w) cout << '0';\r\n            } else {\r\n                cout << s[i];\r\n                w = 1;\r\n            }\r\n        }\r\n        cout << endl;\r\n    }\r\n}"
}