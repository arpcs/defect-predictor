{
    "id": 77170556,
    "contestId": 509,
    "creationTimeSeconds": 1587206166,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 509,
        "index": "C",
        "name": "Sums of Digits",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 509,
        "members": [
            {
                "handle": "shubham0898"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1422705600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 20,
    "timeConsumedMillis": 311,
    "memoryConsumedBytes": 18227200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long int ll;\r\ntypedef pair<int, int> ii;\r\ntypedef vector<int> vi;\r\ntypedef vector<string> vs;\r\ntypedef vector<bool> vb;\r\ntypedef vector<ii> vii;\r\n#define fi first\r\n#define se second\r\n#define pb push_back\r\n#define mp make_pair\r\n#define fr(be, en) for(int i = be; i <= en; i++)\r\nstring addOne(string A) {\r\n\tint n = A.length();\r\n\tint borrow = 1;\r\n\tfor (int i = n - 1; i >= 0; i--) {\r\n\t\tif (borrow == 0) break;\r\n\t\tint cc = A[i] - '0';\r\n\t\tcc += borrow;\r\n\t\tborrow = cc / 10;\r\n\t\tA[i] = (char)((cc % 10 ) + '0');\r\n\t}\r\n\tif(borrow) \r\n\t{\r\n\t\tA[0]++;\r\n\t\tA.pb('0');\r\n\t}\r\n\treturn A;\r\n}\r\nint main()\r\n{\r\n\tios_base::sync_with_stdio(false);\r\n\tcout.tie(NULL);\r\n\tcin.tie(NULL);\r\n\tauto start = chrono::high_resolution_clock::now();\r\n\tvector<vs > dp(301, vector<string> (301, \"\"));\r\n\tdp[1][0] = \"0\";\r\n\tdp[1][1] = \"1\";\r\n\tdp[1][2] = \"2\";\r\n\tdp[1][3] = \"3\";\r\n\tdp[1][4] = \"4\";\r\n\tdp[1][5] = \"5\";\r\n\tdp[1][6] = \"6\";\r\n\tdp[1][7] = \"7\";\r\n\tdp[1][8] = \"8\";\r\n\tdp[1][9] = \"9\";\r\n\tfor (int i = 2; i <= 300; i++)\r\n\t{\r\n\t\tdp[i][0] = dp[i - 1][0];\r\n\t\tdp[i][0].push_back('0');\r\n\t\tfor (int j = 1; j <= 300; j++)\r\n\t\t{\r\n\t\t\tfor (int k = 0; k <= 9; k++)\r\n\t\t\t{\r\n\t\t\t\tif (j < k) continue;\r\n\t\t\t\tif (!dp[i - 1][j - k].empty())\r\n\t\t\t\t{\r\n\t\t\t\t\tstring curr = dp[i - 1][j - k];\r\n\t\t\t\t\tcurr.push_back('0' + k);\r\n\t\t\t\t\tif (!dp[i][j].empty() && curr < dp[i][j]) dp[i][j] = curr;\r\n\t\t\t\t\tif (dp[i][j].empty()) dp[i][j] = curr;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tint n;\r\n\tcin >> n;\r\n\tvi v(n);\r\n\tfr(1, n) cin >> v[i - 1];\r\n\tstring prev;\r\n\tvs ans;\r\n\twhile (v[0] > 9)\r\n\t{\r\n\t\tprev.pb('9');\r\n\t\tv[0] -= 9;\r\n\t}\r\n\tprev.pb('0' + v[0]);\r\n\treverse(prev.begin(), prev.end());\r\n\tans.pb(prev);\r\n\tint cur_sum, temp_sum;\r\n\tfor(int l = 1; l < n; l++)\r\n\t{\r\n\t\tstring curr;\r\n\t\tcur_sum = v[l];\r\n\t\tfor (int i = 0; i < prev.size(); i++)\r\n\t\t{\r\n\t\t\tstring temp;\r\n\t\t\tfor(int j = 0; j <= i; j++) temp.pb(prev[j]);\r\n\t\t\tfor(int k = 1; k <= 9; k++)\r\n\t\t\t{\r\n\t\t\t\ttemp_sum = cur_sum;\r\n\t\t\t\ttemp = addOne(temp);\r\n\t\t\t\tfor(int j = 0; j < temp.size(); j++) temp_sum -= (temp[j] - '0');\r\n\t\t\t\tif (temp_sum >= 0 && !dp[prev.size() - i - 1][temp_sum].empty()) \r\n\t\t\t\t{\r\n\t\t\t\t\tstring temp1 =  temp + dp[prev.size() - i - 1][temp_sum];\r\n\t\t\t\t\tif(temp1.size() < curr.size()) curr = temp1;\r\n\t\t\t\t\tif(temp1.size() == curr.size() && temp1 < curr) curr = temp1;\r\n\t\t\t\t\tif(curr.empty()) curr = temp1;\r\n\t\t\t\t}\r\n\t\t\t\tif(temp_sum == 0 && prev.size() - i - 1 == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(temp.size() < curr.size()) curr = temp;\r\n\t\t\t\t\tif(temp.size() == curr.size() && temp < curr) curr = temp;\r\n\t\t\t\t\tif(curr.empty()) curr = temp;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i = min(9, cur_sum); i >= 1; i--)\r\n\t\t{\r\n\t\t\tstring temp;\r\n\t\t\ttemp.pb(i + '0');\r\n\t\t\tif(!dp[prev.size()][cur_sum - i].empty()) \r\n\t\t\t{\r\n\t\t\t\ttemp = temp + dp[prev.size()][cur_sum - i];\r\n\t\t\t\tif(temp.size() < curr.size()) curr = temp;\r\n\t\t\t\tif(temp.size() == curr.size() && temp < curr) curr = temp;\r\n\t\t\t\tif(curr.empty()) curr = temp;\r\n\t\t\t}\r\n\t\t}\r\n\t\tstring temp;\r\n\t\twhile(cur_sum > 9)\r\n\t\t{\r\n\t\t\ttemp.pb('9');\r\n\t\t\tcur_sum -= 9;\r\n\t\t}\r\n\t\ttemp.pb(cur_sum + '0');\r\n\t\treverse(temp.begin(), temp.end());\r\n\t\tif(temp.size() < curr.size() && temp.size() > prev.size()) curr = temp;\r\n\t\tif(temp.size() == curr.size() && temp < curr && temp > prev) curr = temp;\r\n\t\tif(curr.empty()) curr = temp;\r\n\t\tprev = curr;\r\n\t\tans.pb(prev);\r\n\t}\r\n\tfr(1, n) cout << ans[i - 1] << \"\\n\";\r\n\t// cout << dp[5][18] << \"\\n\";\r\n\t// auto stop = chrono::high_resolution_clock::now();\r\n\t// double time_taken =  chrono::duration_cast<chrono::nanoseconds>(stop - start).count();\r\n\t// time_taken *= 1e-9;\r\n\t// cout << \"Time taken by program is : \" << fixed  << time_taken << setprecision(9);\r\n\t// cout << \" sec\" << endl;\r\n}"
}