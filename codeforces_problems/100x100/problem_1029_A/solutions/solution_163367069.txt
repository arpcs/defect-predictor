{
    "id": 163367069,
    "contestId": 1029,
    "creationTimeSeconds": 1657361158,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1029,
        "index": "A",
        "name": "Many Equal Substrings",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 1029,
        "members": [
            {
                "handle": "Great_20"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1535122200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 78,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "\t\t#include <bits/stdc++.h>\r\n#define inf 1e18\r\nusing namespace std;\r\n\r\n#define ff              first\r\n#define ss              second\r\n#define in             long long int\r\n#define rep(x,n) for(int i = x; i < n; ++i)\r\n#define pb              push_back\r\n#define mp              make_pair\r\n#define pii             pair<in,in>\r\n#define vi              vector<in>\r\n#define mii             map<in,in>\r\n#define mod             1000000007\r\n#define ps(x,y)         fixed<<setprecision(y)<<x\r\n\r\n\r\n\r\n\r\n\r\n                /*----------------------------------------\r\n\r\n                             ME NUB :(\r\n\r\n                ------------------------------------------*/\r\n\r\n\r\n\r\n/*int fib(int n) //returns the n th fibonacci number\r\n{\r\n    int a = 0, b = 1, c, i;\r\n    if( n == 0)\r\n        return a;\r\n    for(i = 2; i <= n; i++)\r\n    {\r\n       c = a + b;\r\n       a = b;\r\n       b = c;\r\n    }\r\n    return b;\r\n}\r\n*/\r\n /*long long gcd(in a, in b)\r\n{\r\n  if (b == 0)\r\n    return a;\r\n  return gcd(b, a % b);\r\n}*/\r\n \r\n// Function to return LCM of two numbers\r\n/*long long lcm(in a, in b)\r\n{\r\n    return (a / gcd(a, b)) * b;\r\n}*/\r\n/*in modi(in a,in b,in c)\r\n{\r\n    in y;\r\n    if(b==0)\r\n    {\r\n        return 1;\r\n    }\r\n    else if(b%2==0)\r\n    {\r\n        y = modi(a,b/2);\r\n        return (y*y)%c;\r\n    }\r\n    return ((a%c)*modi(a,b-1))%c;\r\n}\r\n*/\r\n// in num = 1000001;\r\n// in sieve[1000001] = {0};\r\n// map<in, in>primes;\r\n// void prime()\r\n// {\r\n//     for (in x = 2; x <= num; x++) {\r\n//         if (sieve[x] == 0) primes[x]++;\r\n//         for (in u = 2*x; u <= num; u += x) {\r\n//             sieve[u] = x;\r\n//         }\r\n//     }\r\n// }\r\n\r\n/*bool isPowerOfTwo (int x)\r\n{\r\n    // First x in the below expression is for the case when x is 0 \r\n    return x && (!(x&(x-1)));\r\n}\r\n*/\r\n/*void block(in x)\r\n{\r\n    in c = 0;\r\n    vector<in> v;\r\n    \r\n    // Converting the decimal number\r\n    // into its binary equivalent\r\n    while (x > 0)\r\n    {\r\n        v.push_back(x % 2);\r\n        x = x / 2;\r\n    }\r\n\r\n    // Displaying the output when\r\n    // the bit is '1' in binary\r\n    // equivalent of number.\r\n    for (in i = 0; i < v.size(); i++)\r\n    {\r\n        if (v[i] == 1)\r\n        {\r\n            c++;\r\n        }\r\n    }\r\n    cout<<c<<\"\\n\";\r\n}\r\n*/\r\n/* #define M 1000000007\r\n    long long int fact[1000001], invfact[1000001];\r\n    long long int pw(long long int a,long long int p=M-2,long long int MOD = M)  //binary exponentiation\r\n    {\r\n        long long int result = 1;\r\n        while(p > 0)\r\n        {\r\n            if(p&1)\r\n            {\r\n                result = a*result % MOD;\r\n            }\r\n            a = a * a % MOD;\r\n            p >>=1;\r\n        }\r\n        return result;\r\n    }\r\n    void init()                     // to store factorials and inverse factorials as well\r\n    {\r\n        long long int p = M;\r\n        fact[0] = 1;\r\n        long long int i;\r\n        for(i = 1; i<=1000001 ; i++)\r\n        {\r\n            fact[i] = i*fact[i-1]%p;\r\n        }\r\n        i--;\r\n        invfact[i] = pw(fact[i], p-2, p); // fermat's little theorem \r\n        for(i--; i>=0; i--)\r\n        {\r\n            invfact[i] = invfact[i+1]*(i+1)%p;\r\n        }\r\n    }\r\n    int ncr(int n, int r)                   // returning the value of nCr \r\n    {\r\n        if(r > n || n < 0 || r < 0) return 0;\r\n        return fact[n]*invfact[r]%M*invfact[n-r]%M;\r\n    }\r\n    */\r\nint main()\r\n{ \r\n        ios::sync_with_stdio(0); \r\n        cin.tie(0);\r\n        int n, k;\r\n        cin>>n>>k;\r\n        string s;\r\n        cin>>s;\r\n        string p = \"\";\r\n        string q = \"\";\r\n        string a = \"\";\r\n        if(n == 1)\r\n        {\r\n            while(k--)\r\n            {\r\n                cout<<s;\r\n            }\r\n            cout<<\"\\n\";\r\n        }\r\n        else\r\n        {\r\n            int temp = 0;\r\n            for(int i = 1; i<n; i++)\r\n            {\r\n                bool god = false;\r\n                bool lol = false;\r\n                p = s.substr(i, (n-i));\r\n                //cout<<p<<\"\\n\";\r\n                for(int j = 0; j<p.length(); j++ and !god)\r\n                {\r\n                    lol = true;\r\n                    if(s[j]!=p[j])\r\n                    {\r\n                        god = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if(!god and lol)\r\n                {\r\n                    if(p.length() > q.length())\r\n                    {\r\n                        temp = i;\r\n                        q = p;\r\n                    }\r\n                }\r\n            }\r\n            int x = q.length();\r\n            //cout<<q<<\"\\n\";\r\n            cout<<s;\r\n            k = k - 1;\r\n            a = s.substr(x, (n-x));\r\n            while(k--)\r\n            {\r\n                cout<<a;\r\n            }\r\n            //cout<<q<<\" \"<<temp<<\"\\n\";\r\n        }\r\n        \r\n        \r\n\r\n\r\n}"
}