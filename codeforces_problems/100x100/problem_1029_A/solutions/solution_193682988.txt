{
    "id": 193682988,
    "contestId": 1029,
    "creationTimeSeconds": 1676443540,
    "relativeTimeSeconds": 5140,
    "problem": {
        "contestId": 1029,
        "index": "A",
        "name": "Many Equal Substrings",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 1029,
        "members": [
            {
                "handle": "youzysu"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1676438400
    },
    "programmingLanguage": "Node.js",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "process.stdin.resume();\r\nprocess.stdin.setEncoding('utf-8');\r\n\r\nlet inputString = '';\r\nlet currentLine = 0;\r\n\r\nprocess.stdin.on('data', function (inputStdin) {\r\n  inputString += inputStdin;\r\n});\r\n\r\nprocess.stdin.on('end', function () {\r\n  inputString = inputString\r\n    .trim()\r\n    .split('\\n')\r\n    .map((string) => string.trim());\r\n  main();\r\n});\r\n\r\nconst findOverlapPart = (n, k, t) => {\r\n  const overlaps = [];\r\n\r\n  for (let i = 1; i < k; i++) {\r\n    let p = 0;\r\n    while (p < n && t.substring(i * n + p) !== t.substring(0, n - p)) {\r\n      p++;\r\n    }\r\n    overlaps.push(p);\r\n  }\r\n\r\n  return overlaps;\r\n};\r\n\r\nfunction readLine() {\r\n  return inputString[currentLine++];\r\n}\r\n\r\nfunction buildString(n, k, t) {\r\n  let tempString = t;\r\n  const overlapPart = findOverlapPart(n, k, t);\r\n\r\n  for (let i = 1; i < k; i++) {\r\n    tempString += t.substring(n - overlapPart[i - 1]);\r\n  }\r\n\r\n  return s;\r\n}\r\n\r\nfunction main() {\r\n  const [n, k] = readLine().replace(/\\s+$/g, '').split(' ').map(Number);\r\n  const t = readLine().trim();\r\n\r\n  const s = buildString(n, k, t);\r\n  console.log(s);\r\n}"
}