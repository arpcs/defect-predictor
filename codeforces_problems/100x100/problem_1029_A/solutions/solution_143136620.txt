{
    "id": 143136620,
    "contestId": 1029,
    "creationTimeSeconds": 1642432121,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1029,
        "index": "A",
        "name": "Many Equal Substrings",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 1029,
        "members": [
            {
                "handle": "comrade_16"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1535122200
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n \r\nint main() {\r\n\t// your code goes here\r\n\tint n,k;\r\n\tcin>>n>>k;\r\n\tstring s;\r\n\tcin>>s;\r\n\tstring ans=\"\";\r\n \r\n\tif(n==1)\r\n\t    for(int i=0;i<k;i++)\r\n\t       ans+=s;\r\n\telse{\r\n\t   int i = 1, j = 0;\r\n    \r\n    /* dp[i+1] stores longest proper prefix \r\n    upto index i which also a suffix */ \r\n    vector <int> dp(n+1,0);\r\n    \r\n    /* Traverse the string */\r\n    while(i < n)\r\n    {\r\n        /* if the current character (at index = i) is same as the last \r\n        character of longest common prefix obtained upto index i-1 */\r\n        if(s[i] == s[j]) \r\n        dp[++i] = ++j;\r\n        \r\n        /* if characters don't match */\r\n        else \r\n        {   \r\n            /* when str[0] and str[i] don't match no proper \r\n            prefix which is also a suffix is possible \r\n            so length is 0, simply move on to next character*/\r\n            if(j == 0) \r\n            i++;\r\n            \r\n            /* decrease the length (by 1) of longest proper \r\n            prefix (also suffix) possible upto index i-1 \r\n            and then match the last character of longest \r\n            proper prefix to character at current index */ \r\n            else \r\n            j = dp[j];\r\n        }\r\n    }  \r\n\t   if(dp[n]==0){\r\n\t       for(int i=0;i<k;i++){\r\n\t           ans+=s;\r\n\t       }\r\n\t   }\r\n\t   else{\r\n\t       if(dp[n]%(n-dp[n]) == 0){\r\n\t           string temp=\"\";\r\n\t           for(int i=0;i<(n-dp[n]);i++){\r\n\t               temp+=s[i];\r\n\t           }\r\n\t           ans+=s;\r\n\t           for(int i=0;i<(k-1);i++){\r\n\t               ans+=temp;\r\n\t           }\r\n\t       }\r\n\t       else{\r\n\t           string temp=\"\";\r\n\t            for(int i=(n-dp[n]);i<n;i++){\r\n\t               temp+=s[i];\r\n\t           }\r\n\t           ans+=s;\r\n\t           for(int i=0;i<(k-1);i++){\r\n\t               ans+=temp;\r\n\t           }\r\n\t       }\r\n\t   }\r\n\t}\r\n\t\tcout<<ans;\r\n\treturn 0;\r\n}"
}