{
    "id": 32288390,
    "contestId": 842,
    "creationTimeSeconds": 1510587608,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 732,
    "memoryConsumedBytes": 48947200,
    "source": "// In the name of God\n\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\n#define pb push_back\n#define X first\n#define Y second\n#define mp make_pair\n\nconst ll base = 701, MAX = 2e5+30, MAXL = 20, inf = 1e18 + 9, mod = 1e9 + 7;\n\nint n, m, out[MAX * 20][2], num[MAX * 20], has[MAX], cnt;\n\nvoid add (int x)\n{\n\tint v = 0;\n\tfor (int i = MAXL - 1; i >= 0; i--)\n\t{\n\t\tbool bit = (x >> i) & 1;\n\t\tnum[v] ++;\n\t\tif (!out[v][bit])\n\t\t\tout[v][bit] = ++cnt;\n\t\tv = out[v][bit];\n\t}\n\tnum[v] ++;\n}\n\nvoid query (int x)\n{\n\tint v = 0, res = 0;\n\tfor (int i = MAXL-1; i >= 0; i--)\n\t{\n\t\tbool bit = (x >> i) & 1;\n\t\tif (!out[v][bit])\n\t\t\tbreak;\n\t\tif(num[out[v][bit]] == (1 << i)) \n\t\t{\n\t\t\tres += (1 << i);\n\t\t\tv = out[v][1 - bit];\n\t\t}\n\t\telse\n\t\t\tv = out[v][bit];\n\t}\n\tcout << res << endl;\n}\n\nint main()\n{\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tint a;\n\t\tcin >> a;\n\t\tif (has[a]) continue;\n\t\tadd (a);\n                has[a] = true;\n\t}\n\tint x = 0;\n\twhile (m--)\n\t{\n\t\tint val;\n\t\tcin >> val;\n\t\tx ^= val;\n\t\tquery(x);\n\t}\n\t\n\treturn 0;\n}\n\n \t\t \t\t\t\t\t\t\t \t\t  \t \t\t \t\t   \t  \t\t"
}