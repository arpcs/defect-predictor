{
    "id": 78432633,
    "contestId": 842,
    "creationTimeSeconds": 1588122130,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "JusticeForLoli"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 48128000,
    "source": "#include<vector>\r\n#include<iostream>\r\n#include<algorithm>\r\n\r\n#define M 1000000007\r\n#define base 100000000\r\nusing namespace std;\r\n\r\nstruct node{\r\n   int bit[2];\r\n};\r\nvector<node> Trie;\r\nint leaf[6000010][2],Max;\r\nnode initialize()\r\n{\r\n    node a;\r\n    a.bit[0] = -1;\r\n    a.bit[1] = -1;\r\n    return a;\r\n}\r\nlong long int fast_expo(long long int a,long long int b,long long int m)\r\n{\r\n    a %= m;\r\n    long long res = 1;\r\n    while (b > 0) {\r\n        if (b & 1)\r\n            res = res * a % m;\r\n        a = a * a % m;\r\n        b /= 2;\r\n    }\r\n    return res%m;\r\n}\r\nvoid Insert(int a)\r\n{\r\n    int cur = 0;\r\n    for(int i=Max;i>=0;i--)\r\n    {\r\n        if(Trie[cur].bit[(a>>i)&1] == -1)\r\n        {\r\n            node temp = initialize();\r\n            Trie[cur].bit[(a>>i)&1] = Trie.size();\r\n            Trie.push_back(temp);\r\n        }\r\n        leaf[cur][(a>>i)&1]++;\r\n        cur = Trie[cur].bit[(a>>i)&1];\r\n    }\r\n}\r\nvoid Delete(int a)\r\n{\r\n    int cur = 0;\r\n    for(int i=Max;i>=0;i--)\r\n    {\r\n        if(Trie[cur].bit[(a>>i)&1] == -1)\r\n        {\r\n            return;\r\n        }\r\n        else\r\n        {\r\n            leaf[cur][(a>>i)&1] = 0;\r\n        }\r\n        cur = Trie[cur].bit[(a>>i)&1];\r\n    }\r\n}\r\nint F(int a)\r\n{\r\n    int cur = 0,ans = 0;\r\n    for(int i=Max;i>=0;i--)\r\n    {\r\n        if(leaf[cur][(a>>i)&1] < (1<<i))\r\n        {\r\n            cur = Trie[cur].bit[(a>>i)&1];\r\n            if(cur == -1)\r\n                return ans;\r\n        }\r\n        else\r\n        {\r\n            cur = Trie[cur].bit[1-((a>>i)&1)];\r\n            ans |= (1<<i);\r\n            if(cur == -1)\r\n                return ans;\r\n        }\r\n    }\r\n    return ans;\r\n}\r\nint main(void)\r\n{\r\n    int n,q,i;\r\n    vector<int> arr,ans;\r\n    cin>>n>>q;\r\n    arr.resize(n+1);\r\n    node root = initialize();\r\n    Trie.push_back(root);\r\n    for(i=0;i<6000010;i++)\r\n    {\r\n        leaf[i][0] = 0;\r\n        leaf[i][1] = 0;\r\n    }\r\n    arr[0] = 1e9+7;\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        cin>>arr[i];\r\n    }\r\n    sort(arr.begin(),arr.end());\r\n    //Max = (arr[n] == 0 ? 1 : min((int)log2(arr[n]) + 1, 20));\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        Insert(arr[i]);\r\n    }\r\n    long long int Xor = 0;\r\n    while(q--)\r\n    {\r\n        int lol,x,j,y;\r\n        cin>>x;\r\n        Xor = Xor^x;\r\n        cout<<F(Xor)<<endl;\r\n        /*cin>>lol;\r\n        if(lol == 1)\r\n        {\r\n            cin>>x;\r\n            Xor = Xor^x;\r\n        }\r\n        else if(lol == 2)\r\n        {\r\n            cin>>j>>y;\r\n            y = y^Xor;\r\n            Delete(arr[j]);\r\n            Insert(y);\r\n        }*/\r\n        //ans.push_back(F(Xor));\r\n    }\r\n    //long long int Ans = 1;\r\n    //for(i=0;i<ans.size();i++)\r\n    {\r\n      //  cout<<ans[i]<<endl;\r\n        //Ans = (Ans * fast_expo(base,ans[i],M))%M;\r\n    }\r\n    //cout<<Ans<<endl;\r\n    return 0;\r\n}\r\n"
}