{
    "id": 42019988,
    "contestId": 842,
    "creationTimeSeconds": 1535099602,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 8192000,
    "source": "#include <stdio.h>\nconst int tree_high=19;\nint trie[1<<tree_high][2],cnt[1<<tree_high],tot,vis[1<<tree_high];\n\nvoid insert(int x)\n{\n    if(vis[x]++>0) return;\n    int now=0;\n    for(int i=tree_high-1;i>=0;i--)\n    {\n        int val = (x>>i)&1;\n        if(trie[now][val]==0)\n            trie[now][val] = ++tot;\n        now = trie[now][val];\n        cnt[now]++;\n    }\n}\nint query(int x)\n{\n    int now=0,ans=0;\n    for(int i=tree_high-1;i>=0;i--)\n    {\n        int val = (x>>i)&1;\n        if(cnt[trie[now][val]]==1<<i) now=trie[now][val^1],ans|=1<<i;\n        else now=trie[now][val];\n    }\n    return ans;\n}\n\nint main()\n{\n    int n,m,x;\n    scanf(\"%d%d\",&n,&m);\n    while(n-- && scanf(\"%d\",&x)) insert(x);\n    n=0;\n    while(m--)\n    {\n        scanf(\"%d\",&x);n^=x;\n        printf(\"%d\\n\",query(n));\n    }\n    return 0;\n}\n\n"
}