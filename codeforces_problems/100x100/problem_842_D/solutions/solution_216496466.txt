{
    "id": 216496466,
    "contestId": 842,
    "creationTimeSeconds": 1690747715,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "yottabot"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 1044,
    "memoryConsumedBytes": 19456000,
    "source": "#include <iostream>\r\n#include <string>\r\n#include <cstring>\r\n#include <cmath>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <set>\r\n#include <map>\r\n#include <queue>\r\n#include <iomanip>\r\n#include <functional>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef long double ld;\r\n\r\nstruct Node\r\n{\r\n    struct Node *chn[2];\r\n};\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    int t;\r\n    t=1;//cin >> t;\r\n\r\n\r\n    for (int test=0;test<t;test++)\r\n    {\r\n        ll n,q;\r\n        cin>>n>>q;\r\n        set<ll>ex;\r\n        for(ll i=0;i<300005;i++)\r\n        {\r\n            ex.insert(i);\r\n        }\r\n        for(ll i=0;i<n;i++)\r\n        {\r\n            ll ai;\r\n            cin>>ai;\r\n            ex.erase(ai);\r\n        }\r\n        Node *root = new Node;\r\n        root->chn[0]=NULL;\r\n        root->chn[1]=NULL;\r\n        for(ll i:ex)\r\n        {\r\n            Node *curr = root;\r\n            for(ll j=18;j>=0;j--)\r\n            {\r\n                ll b = ((1ll<<j)&i)?1:0;\r\n                if(curr->chn[b] == NULL)\r\n                {\r\n                    curr->chn[b] = new Node;\r\n                    curr->chn[b]->chn[0]=NULL;\r\n                    curr->chn[b]->chn[1]=NULL;\r\n                }\r\n                curr = curr->chn[b];\r\n            }\r\n        }\r\n        ll xr=0;\r\n        for(ll i=0;i<q;i++)\r\n        {\r\n            ll xi;\r\n            cin>>xi;\r\n            xr^=xi;\r\n            Node *curr = root;\r\n            ll ans = 0;\r\n            for(ll j=18;j>=0;j--)\r\n            {\r\n                ll b = ((1ll<<j)&xr)?1:0;\r\n                if(curr->chn[b] == NULL)\r\n                {\r\n                    curr = curr->chn[1-b];\r\n                    ans += (1ll<<j);\r\n                }\r\n                else\r\n                {\r\n                    curr = curr->chn[b];\r\n                }\r\n            }\r\n            cout<<ans<<endl;\r\n        }\r\n\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}