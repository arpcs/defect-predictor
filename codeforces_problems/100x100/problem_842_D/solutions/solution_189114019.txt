{
    "id": 189114019,
    "contestId": 842,
    "creationTimeSeconds": 1673620817,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "libolin1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 73318400,
    "source": "#include<cstdio>\r\n#include<iostream>\r\n#include<algorithm>\r\n\r\nusing namespace std;\r\nconst int N=3e5+10;\r\nint ch[N*20][2],cnt=1,siz[N*20],n,m,s,a[N];\r\n\r\ninline int read(){\r\n    int x=0,f=1;\r\n    char ch=getchar();\r\n    while(!isdigit(ch)){if(ch=='-') f=-1;ch=getchar();}\r\n    while(isdigit(ch)){x=x*10+(ch^48);ch=getchar();}\r\n    return x*f;\r\n}\r\n\r\nvoid insert(int x){\r\n    int now=1;\r\n    for(int i=20;i>=1;i--){\r\n        siz[now]++;\r\n        ch[now][((x&(1<<(i-1)))!=0)]==0?now=ch[now][((x&(1<<(i-1)))!=0)]=++cnt:now=ch[now][((x&(1<<(i-1)))!=0)];\r\n    }\r\n    siz[now]++;\r\n}\r\n\r\nint query(){\r\n    int now=1,ans=0;\r\n    for(int i=20;i>=1;i--){\r\n    \tif(ch[now][s&(1<<(i-1))]==0){\r\n    \t\treturn ans;\r\n\t\t}\r\n        if(siz[ch[now][s&(1<<(i-1))]]>=(1<<(i-1))){\r\n        \tnow=ch[now][s&(1<<(i-1))^1];\r\n\t\t\tans+=(1<<(i-1));\r\n\t\t}\r\n        else now=ch[now][s&(1<<(i-1))];\r\n\t}\r\n    return ans;\r\n}\r\n\r\nint main(){\r\n    scanf(\"%d%d\",&n,&m);\r\n    for(int i=1;i<=n;i++) \r\n        scanf(\"%d\",&a[i]);\r\n    sort(a+1,a+n+1);\r\n    n=unique(a+1,a+n+1)-a-1;\r\n    for(int i=1;i<=n;i++)\r\n        insert(a[i]);\r\n    int x;\r\n    while(m--){\r\n        scanf(\"%d\",&x);\r\n        s^=x;\r\n        printf(\"%d\\n\",query());\r\n    }\r\n    return 0;\r\n}"
}