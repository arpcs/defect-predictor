{
    "id": 45114764,
    "contestId": 842,
    "creationTimeSeconds": 1540931838,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "mrboorger"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 16384000,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define pb push_back\r\n#define ll long long\r\n#define ld long double\r\n#define ull unsigned long long\r\n#define F first\r\n#define S second\r\n#define uint unsigned int\r\n\r\n#define forn(i, n) for (int i = 0; i < n; i++)\r\nusing namespace std;\r\nvector <vector <int>> nxt(5e5, vector <int> (2, 0));\r\nint sz = 0;\r\nvector <int> k(5e5, 0);\r\nvoid add(int x)\r\n{\r\n    int v = 0;\r\n    bool b = false;\r\n    for(int i = 19; i >= 0; i--)\r\n    {\r\n        int to = 0;\r\n        if (((1 << i) & x) > 0) to = 1;\r\n        if (nxt[v][to] == 0) {sz++; nxt[v][to] = sz; if(i == 0) b = true;}\r\n        v = nxt[v][to];\r\n        k[v]++;\r\n    }\r\n    if (b)\r\n    for(int i = 19; i >= 0; i--)\r\n    {\r\n        int to = 0;\r\n        if (((1 << i) & x) > 0) to = 1;\r\n        if (nxt[v][to] == 0) {sz++; nxt[v][to] = sz;}\r\n        v = nxt[v][to];\r\n        k[v]--;\r\n    }\r\n    return;\r\n}\r\nint r = 0;\r\nint dfs(int v, int t)\r\n{\r\n    int to = 0;\r\n    int z = 0;\r\n    if (((1 << t) & r) > 0) {to = 1; z = 1;}\r\n    if (t == 0)\r\n        forn(i, 2) if (nxt[v][i ^ to] == 0)  {return (1 << t) * (i ^ to ^ z);}\r\n    forn(i, 2)\r\n    {\r\n        if (nxt[v][i ^ to] == 0)  {return (1 << t) * (i ^ to ^ z);}\r\n        if (k[nxt[v][i ^ to]] < (1 << t)) return ((1 << t) * (i ^ to ^ z)) +  dfs(nxt[v][i ^ to], t - 1);\r\n    }\r\n}\r\nint main()\r\n{\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n//    cout << 300000 << ' ' << 300000 << endl;\r\n//    forn(i, 3e5)\r\n//        cout << i << endl;\r\n//    forn(i, 3e5)\r\n//        cout << i << endl;\r\n//    cin.tie(0);\r\n//    cout.tie(0);\r\n//    ios_base::sync_with_stdio(false);\r\n    int n, q;\r\n    scanf(\"%d %d\", &n, &q);\r\n    forn(i, n)\r\n    {\r\n        int x;\r\n        scanf(\"%d\", &x);\r\n        add(x);\r\n    }\r\n    forn(i, q)\r\n    {\r\n        int x;\r\n        scanf(\"%d\", &x);\r\n        r ^= x;\r\n        printf(\"%d\\n\", dfs(0, 19));\r\n    }\r\n    return 0;\r\n}\r\n"
}