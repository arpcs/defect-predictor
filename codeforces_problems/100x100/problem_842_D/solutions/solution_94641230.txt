{
    "id": 94641230,
    "contestId": 842,
    "creationTimeSeconds": 1601811714,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "zhangwen123"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "MS C++ 2017",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <cstring>\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <set>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int maxn = 6e5+111;\r\n\r\nint n,m;\r\nint vis[maxn];\r\nint tree[maxn*31][33];\r\nint cnt = 0;\r\nint list[maxn*31];\r\n\r\nint add(int x){\r\n    int root = 0;\r\n    for(int i=30;i>=0;i--){\r\n        int t = (x>>i)&1;\r\n        if(tree[root][t] == 0) tree[root][t] = ++cnt;\r\n        root  = tree[root][t];\r\n    }\r\n    list[root] = x;\r\n    return 0;\r\n}\r\nint find(int cns){\r\n    int root = 0;\r\n    for(int i = 30;i>=0;i--){\r\n        int t = (cns>>i)&1;\r\n        if(tree[root][t] == 0) root = tree[root][t^1];\r\n        else root = tree[root][t];\r\n    }\r\n    return list[root]^cns;\r\n}\r\n\r\nint main(){\r\n    cin>>n>>m;\r\n    int x;\r\n    for(int i=0;i<n;i++){\r\n        cin>>x;\r\n        vis[x] = 1;        \r\n    }\r\n    for(int i=0;i<maxn;i++){\r\n        if(vis[i] == 0){\r\n            add(i);\r\n//            cout<<cnt<<endl;\r\n        }\r\n    }\r\n    int ans = 0;\r\n//    cout<<\"ok\"<<endl; \r\n    for(int i=0;i<m;i++){\r\n        cin>>x;\r\n        ans ^= x;\r\n        cout<<find(ans)<<endl;\r\n    }\r\n    return 0;\r\n}"
}