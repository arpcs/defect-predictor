{
    "id": 49877143,
    "contestId": 842,
    "creationTimeSeconds": 1550075125,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "Baraa_Armoush"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 1185,
    "memoryConsumedBytes": 24166400,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\n\r\nusing namespace std;\r\n\r\ntypedef struct LL\r\n{\r\n    ll bit;\r\n    LL* nxt[2];\r\n\r\n    LL(ll b)    {   bit = b , nxt[0] = nxt[1] = NULL;   }\r\n};\r\n\r\nconst ll B = 22;\r\nconst ll N = 1<<(B+1);\r\n\r\nLL* Root = new LL(0);\r\n\r\nmap < LL* , bool > All;\r\n\r\nvoid Add(ll y);\r\nbool Set(ll i = B-1,LL* Last = Root);\r\nll GetMin(ll i = B-1,LL* Last = Root);\r\nvoid Print(ll i = B-1,LL* Last = Root,string s = \"\");\r\n\r\nll X = 0;\r\n\r\nint main()\r\n{\r\n    ll n,m; cin>>n>>m;\r\n\r\n    for(ll i=0,a;i<n;i++)   scanf(\"%I64d\",&a) , Add(a);\r\n\r\n    //Print();\r\n\r\n    Set();\r\n\r\n    while(m--)\r\n    {\r\n        ll x;   scanf(\"%I64d\",&x);\r\n\r\n        X ^= x;\r\n\r\n        printf(\"%I64d\\n\",GetMin());\r\n    }\r\n\r\n}\r\n\r\nvoid Print(ll i,LL* Last,string s)\r\n{\r\n    if(Last==NULL)  return ;\r\n\r\n    if(i<0)\r\n    {\r\n        cout<<s<<endl;\r\n        return ;\r\n    }\r\n\r\n    Print(i-1,Last->nxt[0],s+\"0\");\r\n    Print(i-1,Last->nxt[1],s+\"1\");\r\n}\r\n\r\nvoid Add(ll y)\r\n{\r\n    LL* Last = Root;\r\n\r\n    for(ll i=B-1;i>=0;i--)\r\n    {\r\n        ll b = ((y&(1<<i))>0);\r\n\r\n        if(Last->nxt[b]==NULL)  Last->nxt[b] = new LL(b);\r\n\r\n        Last = Last->nxt[b];\r\n    }\r\n}\r\n\r\nbool Set(ll i,LL* Last)\r\n{\r\n    if(Last==NULL)  return false;\r\n    if(i<0)         return true;\r\n\r\n    if(All.count(Last)) return All[Last];\r\n\r\n    bool Res1 = Set(i-1,Last->nxt[0]);\r\n    bool Res2 = Set(i-1,Last->nxt[1]);\r\n\r\n    return All[Last] = Res1 && Res2;\r\n}\r\n\r\nll GetMin(ll i,LL* Last)\r\n{\r\n    if(Last==NULL)  return 0;\r\n    if(i<0)         return 0;\r\n\r\n    bool b = ((X&(1<<i))>0);\r\n\r\n    if(!Set(i-1,Last->nxt[b]))  return GetMin(i-1,Last->nxt[b]);\r\n\r\n    return (1<<i) + GetMin(i-1,Last->nxt[!b]);\r\n}\r\n\r\n"
}