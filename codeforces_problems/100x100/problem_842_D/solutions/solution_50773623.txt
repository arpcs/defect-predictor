{
    "id": 50773623,
    "contestId": 842,
    "creationTimeSeconds": 1551682421,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 841,
    "memoryConsumedBytes": 85401600,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n//#define endl \"\\n\"\n#define inf 0x3f3f3f3f\n#define me(a,b) memset(a,b,sizeof(a))\n#define maxn  300005\n#define N 21\nint n,m;\nstruct Trie\n{\n    int ch[maxn*N][2];\n    int val[maxn*N];\n    int sz;\n    Trie()\n    {\n        sz=0;\n        me(ch[sz],0);\n    }\n    void insert(int num)\n    {\n        int u=0;\n        for(int i=N-1;i>=0;i--){\n            int c=num>>i&1;\n            if(!ch[u][c]) {\n                sz++;\n                me(ch[sz],0);\n                ch[u][c]=sz;\n            }\n            val[u]++;\n            u=ch[u][c];\n        }\n        val[u]++;\n    }\n    int cal(int num)\n    {\n        int u=0,ans=0;\n        for(int i=N-1;i>=0;i--){\n            int c=num>>i&1;\n            if(!ch[u][c]) return ans;\n            else {\n                if(val[ch[u][c]]<(1<<i)) u=ch[u][c];\n                else {\n                    ans|=(1<<i);\n                    if(!ch[u][c^1]) return ans;\n                    u=ch[u][c^1];\n                }\n            }\n        }\n        return ans;\n    }\n}trie;\nset<int> s;\nint main()\n{\n    cin>>n>>m;\n    for(int i=1;i<=n;i++){\n        int x;\n        scanf(\"%d\",&x);\n        if(!s.count(x)) trie.insert(x);\n        s.insert(x);\n    }\n    int pre=0;\n    while(m--){\n        int x;\n        scanf(\"%d\",&x);\n        pre^=x;\n        cout<<trie.cal(pre)<<endl;\n    }\n}\n"
}