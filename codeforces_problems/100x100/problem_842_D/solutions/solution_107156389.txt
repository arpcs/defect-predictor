{
    "id": 107156389,
    "contestId": 842,
    "creationTimeSeconds": 1613089005,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "Alx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 296,
    "memoryConsumedBytes": 79564800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n \r\n#define int long long\r\n#define all(x) (x).begin(),(x).end()\r\n#define pb push_back\r\n\r\nstruct trie {\r\n  int val, sz, bt, in;\r\n  trie* c[2];\r\n};\r\n\r\ntrie *root;\r\n\r\ntrie *newNode() {\r\n  trie *temp = new trie;\r\n  temp->val = 0;\r\n  temp->sz = temp->bt = temp->in = 0;\r\n  temp->c[0] = temp->c[1] = NULL;\r\n  return temp;\r\n}\r\n\r\nvoid insert(int x, bool in) {\r\n  trie *temp = root;\r\n  for(int i = 20; i >= 0; --i) {\r\n    bool val = x & (1 << i);\r\n    if(temp->c[val] == NULL) {\r\n      temp->c[val] = newNode();\r\n      temp->c[val]->bt = i;\r\n    }\r\n    temp = temp->c[val];\r\n  }\r\n  temp->sz = in;\r\n  temp->val = x;\r\n  temp->in = in;\r\n}\r\n\r\nvoid dfs(trie* rt) {\r\n  if(rt->c[0] != NULL) {\r\n    dfs(rt->c[0]);\r\n    rt->sz += rt->c[0]->sz;\r\n  }\r\n  if(rt->c[1] != NULL) {\r\n    dfs(rt->c[1]);\r\n    rt->sz += rt->c[1]->sz;\r\n  }\r\n}\r\n\r\nint solve(int x) {\r\n  trie *temp = root;\r\n  for(int i = 20; i >= 0; --i) {\r\n    bool val = x & (1 << i);\r\n    if(temp->c[val] != NULL && temp->c[val]->sz == ((1 << (temp->c[val]->bt)))) {\r\n      temp = temp->c[val ^ 1];\r\n    } else {\r\n      temp = temp->c[val];\r\n    }\r\n    if(temp == NULL) return 0;\r\n  }\r\n  return temp->val ^ x;\r\n}\r\n\r\nsigned main(){\r\n  ios_base::sync_with_stdio(0);\r\n  cin.tie(0);\r\n  int n, m; cin >> n >> m;\r\n  int a[n];\r\n  root = newNode();\r\n  bitset<600001> in;\r\n  for(int i = 0; i < n; ++i) {\r\n    cin >> a[i];\r\n    in[a[i]] = 1;\r\n  }\r\n  for(int i = 0; i <= 600000; ++i) {\r\n    insert(i, in[i]);\r\n  }\r\n  dfs(root);\r\n  int x = 0;\r\n  while(m--) {\r\n    int cur; cin >> cur;\r\n    x ^= cur;\r\n    cout << solve(x) << \"\\n\";\r\n  }\r\n}"
}