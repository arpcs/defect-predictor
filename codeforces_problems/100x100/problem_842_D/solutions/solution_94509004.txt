{
    "id": 94509004,
    "contestId": 842,
    "creationTimeSeconds": 1601656869,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "not_slacker"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n\r\nconst int N = 300010;\r\nconst int M = 20;\r\n\r\nnamespace trie {\r\n    struct node {\r\n        int next[2] = { -1, -1 };\r\n        int size = 0;\r\n    } t[N * M];\r\n\r\n    int node_count = 1;\r\n\r\n    void insert(int u, int x, int p) {\r\n        if (p < 0) { t[u].size = 1; return; }\r\n        int v = ((x >> p) & 1);\r\n        if (t[u].next[v] == -1) t[u].next[v] = node_count++;\r\n        insert(t[u].next[v], x, p - 1);\r\n        t[u].size = 0;\r\n        if (t[u].next[0] != -1) t[u].size += t[t[u].next[0]].size;\r\n        if (t[u].next[1] != -1) t[u].size += t[t[u].next[1]].size;\r\n    }\r\n\r\n    void query(int u, int x, int p, int &y) {\r\n        if (u == -1) return;\r\n        int v = ((x >> p) & 1);\r\n        v ^= t[t[u].next[v]].size == (1 << p);\r\n        y |= ((v ^ ((x >> p) & 1)) << p);\r\n        query(t[u].next[v], x, p - 1, y);\r\n    }\r\n}\r\n\r\nint main() {\r\n    std::ios_base::sync_with_stdio(false);\r\n    std::cout.tie(nullptr);\r\n    std::cin.tie(nullptr);\r\n    \r\n    int n, m;\r\n    std::cin >> n >> m;\r\n\r\n    for (int i = 0, a; i < n; i++) {\r\n        std::cin >> a;\r\n        trie::insert(0, a, M - 1);\r\n    }\r\n\r\n    for (int i = 0, x = 0, y = 0, t; i < m; y = 0, i++) {\r\n        std::cin >> t;\r\n        trie::query(0, x ^= t, M - 1, y);\r\n        std::cout << y << '\\n';\r\n    }\r\n}"
}