{
    "id": 55093570,
    "contestId": 842,
    "creationTimeSeconds": 1559663386,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "shivashishsuman"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 1107,
    "memoryConsumedBytes": 16896000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define REP(i,a,b) \t  for(int i=a;i<b;i++)\r\n#define FOR(i,n) \t  for(int i=0;i<n;i++)\r\n#define IOS ios::sync_with_stdio(false)\r\n#define TIE cin.tie(NULL);cout.tie(NULL)\r\n#define lli long long int\r\n#define pb push_back\r\n\r\nstruct TrieNode { \r\n    struct TrieNode* children[2];  \r\n    bool isEnd; \r\n}; \r\n\r\nstruct TrieNode* getNode(void) \r\n{ \r\n    struct TrieNode* pNode = new TrieNode; \r\n    pNode->isEnd = false; \r\n    for (int i = 0; i < 2; i++) \r\n        {\r\n            pNode->children[i] = NULL;\r\n        }\r\n    return pNode; \r\n} \r\n\r\nvoid insert(struct TrieNode* root, string key) \r\n{ \r\n    struct TrieNode* pCrawl = root; \r\n  \r\n    for (int i = 0; i < 20; i++) { \r\n        int index = key[i] - '0'; \r\n        if (!pCrawl->children[index]) \r\n            pCrawl->children[index] = getNode();\r\n        if (i == key.length() - 1) \r\n        {\r\n            pCrawl->children[index]->isEnd = true;\r\n        }\r\n  \r\n        pCrawl = pCrawl->children[index]; \r\n    } \r\n} \r\n\r\nstring getString(lli val)\r\n{\r\n\tstring temp=\"\";\r\n\tfor(int i=0;i<20;i++)\r\n\t{\r\n\t\tif(val&1)\r\n\t\t\ttemp=temp+'1';\r\n\t\telse\r\n\t\t\ttemp=temp+'0';\r\n\t\tval=val/2;\r\n\t}\r\n\treverse(temp.begin(),temp.end());\r\n\treturn temp;\r\n}\r\n\r\nint getNumber(string s)\r\n{\r\n\tint po=1;\r\n\tint ans=0;\r\n\tfor(int i=19;i>=0;i--)\r\n\t{\r\n\t\tif(s[i]=='1')\r\n\t\t\tans+=po;\r\n\t\tpo=2*po;\r\n\t}\r\n\treturn ans;\r\n}\r\n\r\nstring search(struct TrieNode* root, string key) \r\n{ \r\n    struct TrieNode* pCrawl = root;  \r\n  \tstring tem = \"\";\r\n\r\n    for (int i = 0; i < 20; i++) { \r\n        int index = key[i] - '0'; \r\n        if (!pCrawl->children[index]) \r\n        {\r\n        \ttem=tem+'1';\r\n        \tpCrawl = pCrawl->children[1-index]; \r\n        }\r\n        else\r\n        {\r\n        \ttem=tem+'0';\r\n        \tpCrawl = pCrawl->children[index];\r\n        }\r\n    }\r\n    return tem; \r\n}\r\nint main()\r\n{\r\n\r\n\tIOS;TIE;\r\n\tstruct TrieNode* root = getNode(); \r\n\tint n,m;\r\n\tlli x;\r\n\tcin>>n>>m;\r\n\tbool vis[300001]={false};\r\n\tFOR(i,n){\r\n\t\tcin>>x;\r\n\t\tvis[x]=true;\r\n\t}\r\n\tint l=0;\r\n\tvector<int> b;\r\n\tfor(int i=0;i<=300000;i++)\r\n\t{\r\n\t\tif(!vis[i])\r\n\t\t    b.pb(i);\r\n\t}\r\n\tint r1=b.size();\r\n\t//cout<<r1<<endl;\r\n\tfor(int i=0;i<r1;i++)\t\r\n\t{\r\n\t\tstring s1=getString(b[i]);\r\n\t\tinsert(root,s1);\r\n\t}\r\n\tlli xr=0;\r\n\twhile(m--)\r\n\t{\r\n\t\tcin>>x;\r\n\t\txr=xr^x;\r\n\t\tstring s1=getString(xr);\r\n\t\tstring s2=search(root,s1);\r\n\t\t//cout<<s2.length()<<\"**\";\r\n\t\tint rez=getNumber(s2);\r\n\t\trez=min(rez,300000);\r\n\t\tcout<<rez<<\"\\n\";\r\n\t}\r\n\treturn 0;\r\n}"
}