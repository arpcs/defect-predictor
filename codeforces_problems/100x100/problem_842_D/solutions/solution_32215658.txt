{
    "id": 32215658,
    "contestId": 842,
    "creationTimeSeconds": 1510393020,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "yelghareeb"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#include <streambuf>\r\nusing namespace std;\r\n\r\n#define loop(i,n) for(int i = 0; i < n; i++)\r\n#define pii pair<int, int>\r\ntypedef unsigned long long LL;\r\n\r\nconst int INF = 1e9 + 7;\r\nconst int mod = 1e9 + 7;\r\nconst int MX = 3 * 1e5 + 5;\r\n\r\nint n, m;\r\n\r\nstruct Trie {\r\n    Trie *ch[2];\r\n    int cnta;\r\n    Trie() {\r\n        ch[0] = ch[1] = NULL;\r\n        cnta = 0;\r\n    }\r\n    int insert(int val, int lev = 20) {\r\n        if (lev < 0) { \r\n            if (cnta == 0) {cnta++; return cnta;} \r\n            else return 0;\r\n        }\r\n        int d = (val >> lev) & 1;\r\n        if (!ch[d]) ch[d] = new Trie();\r\n        cnta += ch[d]->insert(val, lev - 1);\r\n    }\r\n    int query(int val, int lev = 20, int ans = 0) {\r\n        int d = (val >> lev) & 1;\r\n        if (d == 0) { // go left\r\n            if (!ch[0]) return ans;\r\n            if (ch[0]->cnta == (1 << lev)) {\r\n                if (!ch[1]) return ans + (1 << (lev));\r\n                return ch[1]->query(val, lev - 1, (ans + (1 << (lev))));\r\n            }\r\n            else return ch[0]->query(val, lev - 1, ans);\r\n        }\r\n        else {\r\n            if (!ch[1]) return ans;\r\n            if (ch[1]->cnta == (1 << lev)) {\r\n                if (!ch[0]) return ans + (1 << (lev));\r\n                return ch[0]->query(val, lev - 1, (ans + (1 << (lev))));\r\n            }\r\n            else return ch[1]->query(val, lev - 1, ans);\r\n        }\r\n    }\r\n};\r\n\r\nint main()\r\n{\r\n#ifdef DEBUG\r\n    freopen(\"in.txt\", \"r\", stdin);\r\n#endif\r\n    int n, m;\r\n    scanf(\"%d%d\", &n, &m);\r\n    Trie trie;\r\n    loop(i, n) {\r\n        int val;\r\n        scanf(\"%d\", &val);\r\n        trie.insert(val);\r\n    }\r\n    int xr = 0;\r\n    loop(i, m) {\r\n        int x;\r\n        scanf(\"%d\", &x);\r\n        xr ^= x;\r\n        printf(\"%d\\n\", trie.query(xr));\r\n    }\r\n    return 0;\r\n}"
}