{
    "id": 95524422,
    "contestId": 842,
    "creationTimeSeconds": 1602692455,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "Cold_blooded_man"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 374,
    "memoryConsumedBytes": 25907200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define vl vector<ll>\r\n#define pb push_back\r\n#define mp make_pair\r\n#define f(i, l, r) for(ll i = int(l); i < int(r); i++)\r\n#define fr(i, l, r) for(ll i = int(l); i >= int(r); i--)\r\n#define fi first\r\n#define se second\r\n#define all(x) x.begin(), x.end()\r\n#define allr(x) x.rbegin(), x.rend()\r\n#define sz(x) ((int)x.size())\r\n#define ln(x) ((int)x.length())\r\n#define setbits(x)  __builtin_popcountll(x)\r\n#define clr(x,v) memset(x, v, sizeof(x))\r\n#define endl \"\\n\"\r\n#define ins insert\r\n#define fast ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)\r\ntypedef pair<ll,ll> pll;\r\n#define uml unordered_map<ll,ll>\r\n#define vpl vector <pll > \r\nconst int MAXN = 2e5 + 5;\r\nll MAX= 1e18+7;\r\nll mod=1e9+7;\r\nll grev[200001];\r\nvl gr[100005];\r\nset<ll> a;\r\nvl b;\r\nclass trie{\r\npublic:\r\n\ttrie *child[2];\r\n\ttrie(){\r\n\t\tchild[0]=child[1]=NULL;\r\n\t}\r\n};\r\n\r\nvoid insert(trie *root,ll x){\r\n\tfr(i,19,0){\r\n\t\tll bit=((x>>i)&1);\r\n\t\tif(root->child[bit]==NULL){\r\n\t\t\troot->child[bit] = new trie();\r\n\t\t}\r\n\t\troot=root->child[bit];\r\n\t}\r\n}\r\n\r\nll minxor(trie *root,ll x){\r\n\tll res=0;\r\n\tfr(i,19,0){\r\n\t\tll bit=((x>>i)&1);\r\n\t\tif(root->child[bit]==NULL){\r\n\t\t\tres += (1ll<<i);\r\n\t\t\troot=root->child[!bit];\r\n\t\t}\r\n\t\telse{\r\n\t\t\troot=root->child[bit];\r\n\t\t}\r\n\t}\r\n\treturn res;\r\n}\r\n\r\nvoid solve(){\r\n\t//Is it with Binary Search Or Dynamic Programming \r\n\t//You should find pattern\r\n\tll n,m;\r\n\tcin>>n>>m;\r\n\ttrie* root = new trie();\r\n\tf(i,0,n){\r\n\t\tll x;\r\n\t\tcin>>x;\r\n\t\ta.ins(x);\r\n\t}\r\n\tb.clear();\r\n\tf(i,0,1<<19){\r\n\t\tif(a.find(i)==a.end()) b.pb(i);\r\n\t}\r\n\tfor(ll x:b){\r\n\t\tinsert(root,x);\r\n\t}\r\n\tll prev=0;\r\n\tf(i,0,m){\r\n\t\tll x;\r\n\t\tcin>>x;\r\n\t\tprev^=x;\r\n\t\tll ans=minxor(root,prev);\r\n\t\tif(ans>=300000) ans=300000;\r\n\t\tcout<<ans<<endl;\r\n\t}\r\n}\r\n\r\nint main() \r\n{ \tfast;\r\n\t ll t;\r\n\t t=1;\r\n//  \t cin>>t;\r\n\t while(t--){\t\r\n\t \tsolve();\r\n\t }\r\n\treturn 0; \r\n}\r\n\r\n"
}