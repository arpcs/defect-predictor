{
    "id": 36238090,
    "contestId": 842,
    "creationTimeSeconds": 1520911304,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "lrvideckis"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 530,
    "memoryConsumedBytes": 78950400,
    "source": "#include <bits/stdc++.h>\n#include <unordered_map>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\ntemplate<class TI>\nusing indexed_set = tree<TI,null_type,less<TI>,rb_tree_tag,tree_order_statistics_node_update>;\n#define ll long long\n#define ld long double\n#define pb push_back\n#define mp make_pair\n#define D(x) cout<<#x<<\" -> \"<<x<<'\\n'\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define uni(x) (x).erase(unique(all(x)), (x).end())\n#define rep(i, n) for (int32_t i = 0; i < (int32_t)(n); ++i)\n#define rep1(i, n) for (int32_t i = 1; i <= (int32_t)(n); ++i)\nconst ld pi = 4.0*atanl(1.0);\nconst ll infll = (ll)(1e18) + 10;\nconst ll mod = powl(10, 9) + 7;\n\nconst int Max = 3e5+1;//maxBit = 19\nint child[Max*21+1][2], cnt[Max*21+1], ptr = 1;\n\n\nvoid insert(int x) {\n    int curr = 0;\n    for(int bit = 20; bit >= 0; --bit) {\n        int i;\n        if(x&(1<<bit)) i = 1;\n        else i = 0;\n        if(child[curr][i] == -1) child[curr][i] = ptr++;\n        curr = child[curr][i];\n        cnt[curr]++;\n    }\n}\n\nint main() {ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n    rep(i,Max*21) child[i][0] = child[i][1] = -1;\n    int n, m;\n    cin >> n >> m;\n    vector<int> arr(n);\n    rep(i,n) cin >> arr[i];\n    sort(all(arr));\n    uni(arr);\n    n = arr.size();\n    rep(i,n) insert(arr[i]);\n    int query = 0, temp;\n    rep(i,m) {\n        cin >> temp;\n        query ^= temp;\n        int curr = 0, answer = 0;\n        for(int bit = 20; bit >= 0; --bit) {\n            int j;\n            if(query&(1<<bit)) j = 1;\n            else j = 0;\n            if(child[curr][j] == -1) break;\n            if(cnt[child[curr][j]] == (1<<bit)) {//full subtree\n                answer |= (1<<bit);\n                j ^= 1;\n            }\n            if(child[curr][j] == -1) break;\n            curr = child[curr][j];\n        }\n        cout << answer << '\\n';\n    }\n    return 0;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
}