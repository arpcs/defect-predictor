{
    "id": 97151458,
    "contestId": 842,
    "creationTimeSeconds": 1604046901,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "I_Can_AC"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 919,
    "memoryConsumedBytes": 154009600,
    "source": "#include<iostream>\r\n#include<vector>\r\n#include<queue>\r\n#include<cstring>\r\n#include<cmath>\r\n#include<map>\r\n#include<set>\r\n#include<cstdio>\r\n#include<algorithm>\r\n#define debug(a) cout<<#a<<\"=\"<<a<<endl;\r\nusing namespace std;\r\nconst int maxn=3e5+100;\r\ntypedef long long LL;\r\nLL tree[maxn*21][2],siz[maxn*21],a[maxn];\r\nLL tot=1,root=1,flag=0;\r\nvoid insert(LL x)\r\n{\r\n    LL p=root;\r\n    for(LL i=21;i>=0;i--)\r\n    {\r\n        siz[p]++;\r\n        LL t=x>>i&1;\r\n        if(!tree[p][t]) tree[p][t]=++tot;\r\n        p=tree[p][t];\r\n    }\r\n    siz[p]++;\r\n}\r\ninline LL query(LL x)\r\n{\r\n    LL p=root;LL res=0;\r\n    for(LL i=21;i>=0;i--)\r\n    {\r\n        LL t=x>>i&1;\r\n        if(t==1){///\u8981\u53cd\u65b9\u5411\u641c\r\n                if(!tree[p][t]) return res;///\u8be5\u8282\u70b9\u4e0d\u5b58\u5728\r\n                else if(siz[tree[p][1]]<(1<<i)){\r\n                    p=tree[p][1];\r\n                }\r\n                else p=tree[p][0],res+=(1<<i);\r\n        }\r\n        else if(t==0){///\u8bf4\u660e\u7ee7\u7eed\u6309\u521d\u59cb\u65b9\u5411\u641c\u5b50\u6811\uff1a\u5de6\u7a7a\u53bb\u5de6\uff0c\u4e0d\u7136\u53bb\u53f3\r\n            if(!tree[p][t]) return res;///\u8be5\u7ed3\u70b9\u4e3a\u7a7a\r\n            else if(siz[tree[p][0]]<(1<<i)){\r\n                p=tree[p][0];\r\n            }\r\n            else p=tree[p][1],res+=(1<<i);\r\n        }\r\n       /// debug(res);\r\n    }\r\n    return res;\r\n}\r\nint main(void)\r\n{\r\n  cin.tie(0);std::ios::sync_with_stdio(false);\r\n  LL n,m;cin>>n>>m;\r\n  for(LL i=1;i<=n;i++){\r\n      cin>>a[i];\r\n  }\r\n  sort(a+1,a+1+n);\r\n  n=unique(a+1,a+1+n)-a-1;\r\n  for(LL i=1;i<=n;i++){\r\n      insert(a[i]);\r\n  }\r\n  while(m--){\r\n    LL x;cin>>x;\r\n    flag=flag^x;\r\n  ///  debug(flag);\r\n    LL ans=query(flag);\r\n    cout<<ans<<endl;\r\n  }\r\n  return 0;\r\n}\r\n///"
}