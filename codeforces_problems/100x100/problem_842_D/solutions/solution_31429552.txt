{
    "id": 31429552,
    "contestId": 842,
    "creationTimeSeconds": 1508179316,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "yEmre"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 6963200,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int inf = 1000000000, N = 300000, LOG = 3;\r\n\r\nint n, m, k = 1;\r\nint a[N+5];\r\nint trie[N+5][2];\r\nint cnt[N+5];\r\n\r\nint main()\r\n{\r\n    scanf(\"%d %d\", &n, &m);\r\n\r\n    for (int i = 1; i <= n; i++) {\r\n        scanf(\"%d\", &a[i]);\r\n\r\n        int q = 1;\r\n\r\n        for (int j = LOG; j >= 0; j--) {\r\n            bool d = a[i] & (1 << j);\r\n\r\n            cnt[q]++;\r\n\r\n            if (trie[q][d] == 0) {\r\n                trie[q][d] = ++k;\r\n            }\r\n\r\n            q = trie[q][d];\r\n        }\r\n        cnt[q]++;\r\n    }\r\n\r\n    int x = 0, t;\r\n\r\n    for (int i = 1; i <= m; i++) {\r\n        scanf(\"%d\", &t);\r\n        x ^= t;\r\n\r\n        int q = 1;\r\n        int ans = 0;\r\n        for (int j = LOG; j >= 0; j--) {\r\n            bool d = x & (1 << j);\r\n\r\n            int le = trie[q][0];\r\n            int ri = trie[q][1];\r\n\r\n            ans <<= 1;\r\n\r\n\r\n            if (d == 0) {\r\n                if (cnt[le] < (1 << (j))) {\r\n                    q = le;\r\n                }\r\n                else {\r\n                    q = ri;\r\n                    ans += 1;\r\n                }\r\n            } else {\r\n                swap(le, ri);\r\n                if (cnt[le] < (1 << (j))) {\r\n                    q = le;\r\n                }\r\n                else {\r\n                    q = ri;\r\n                    ans += 1;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        printf(\"%d\\n\", ans);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}