{
    "id": 195433739,
    "contestId": 1605,
    "creationTimeSeconds": 1677666338,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1605,
        "index": "A",
        "name": "A.M. Deviation",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1605,
        "members": [
            {
                "handle": "marco.bonizzi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1636727700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <algorithm>\r\n#include<bits/stdc++.h>\r\n#include <climits>\r\n#include <ostream>\r\n#include <sstream>\r\n#include <type_traits>\r\n \r\n \r\n// #include <ext/pb_ds/assoc_container.hpp>\r\n// #include <ext/pb_ds/tree_policy.hpp>\r\n \r\n \r\nusing namespace std;\r\n// using namespace __gnu_pbds;\r\n \r\n \r\n#define md                  1000000007\r\n#define pb                  push_back\r\n#define eb                  emplace_back\r\n#define em                  emplace\r\n#define mp                  make_pair\r\n#define fr(i,n)             for(ll i=0;i<n;i++)\r\n#define fr1(i,k,n)          for(ll i=k;i<n;i++)\r\n#define endl                \"\\n\"\r\n#define F                   first\r\n#define S                   second\r\n#define inp(v)              for(auto &x: v) cin>>x  \r\n#define all(x)              (x).begin(), (x).end() \r\n#define fast_io             ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\r\n#define file_io             freopen(\"D:/cp/input.txt\", \"r+\", stdin);freopen(\"D:/cp/output.txt\", \"w+\", stdout);\r\n#define DEBUG\r\n#undef  DEBUG\r\n \r\ntypedef long long ll;\r\ntypedef pair<ll,ll> pll;\r\ntypedef pair<int,int>pii;\r\ntypedef unsigned long long ull;\r\ntypedef long double lld;\r\n#define sc static_cast<ll>\r\n#define ONEPROBLEM\r\n#if defined(ONEPROBLEM)\r\n#undef ONEPROBLEM\r\n#endif\r\n#define ONEPROBLEM\r\n#undef ONEPROBLEM\r\n\r\ntemplate<typename C> constexpr auto Size(const C& c) -> decltype(c.size()){\r\n  return c.size();\r\n}\r\ntemplate<typename T,std::size_t N> constexpr auto Size(const T(&)[N]) -> decltype(N){\r\n  return N;\r\n}\r\n\r\n// typedef tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> pbds; // find_by_order, order_of_key\r\nbool ispossible(const vector<ll>& a,int n,ll d,ll k,ll gain){\r\n  //cout << \"IN HERE\\n\";\r\n  int i=0;\r\n  ll elapsed{1};\r\n  ll nextime{elapsed+1LL+k};\r\n  while(d > 0){\r\n    gain-=a[i];\r\n    if(gain<=0)return true;\r\n    if(elapsed+1LL==nextime){\r\n      nextime+=1LL+k;\r\n      i=0;\r\n      --d;\r\n      ++elapsed;\r\n    }\r\n    else{\r\n      i=(i+1)%n;\r\n      if(i==0){\r\n        d-=(nextime-elapsed);\r\n        elapsed=nextime;\r\n        nextime+=1LL+k;\r\n      }\r\n      else{\r\n        ++elapsed;\r\n        --d;\r\n      }\r\n    }\r\n    //cout << \"Day \" << d << \" elapsed is \" << elapsed << \" next time is \" << nextime << \" gain is \" <<\r\n   // gain  << \" index is \" << i << \" and k is \" << k << \"\\n\"; \r\n  }\r\n  return gain<=0 and d<=0;\r\n}\r\nint dx[4]={1,-1,0,0};\r\nint dy[4]={0,0,-1,1};\r\nstruct HashStruct{\r\n  template<typename T,typename U> std::size_t operator()(const pair<T,U>& other) const{\r\n    auto first{std::hash<T>{}(other.first)};\r\n    auto second{std::hash<U>{}(other.second)};\r\n    return (first^(second<<1));\r\n  }\r\n}; \r\n#define GET(a) (a-'A')\r\n//#define PRINT\r\nstd::ofstream Result(\"output.txt\",ios::out);\r\ntypedef typename std::priority_queue<pii,\r\ntypename std::vector<pii>,\r\ntypename std::less<pii>> pq;\r\nstatic constexpr int MOD{ 998244353 };\r\n#define ms(a,b) (((a%MOD)+(b%MOD))%MOD)\r\n#define ps(a,b) (((a%MOD)*(b%MOD))%MOD)\r\nmap<int,int> h{};\r\nvoid dfs(const string& s,int i,int l,int num,int c){\r\n  if(i==l){\r\n    if(num%7==0){\r\n      h[c]=num;\r\n    }\r\n    return;\r\n  }\r\n  if(i==0){\r\n    for(int j{1};j<10;++j){\r\n      num=j;\r\n      if((s[i]-'0')!=j){\r\n        dfs(s,i+1,l,num,c+1);\r\n      }\r\n      else{\r\n        dfs(s,i+1,l,num,c);\r\n      }\r\n    }\r\n  }\r\n  else{\r\n    for(int j{0};j<10;++j){\r\n      auto x=num*10+j;\r\n      if((s[i]-'0')!=j){\r\n        dfs(s,i+1,l,x,c+1);\r\n      }\r\n      else{\r\n        dfs(s,i+1,l,x,c);\r\n      }\r\n    }\r\n  }\r\n}\r\nnamespace details{\r\n  vector<int> primes{};\r\n  void init();\r\n}\r\nvoid details::init(){\r\n  static constexpr int n{1000};\r\n  static constexpr int SIZE{10000};\r\n  bool isPrime[SIZE];\r\n  memset(isPrime,true,sizeof(isPrime));\r\n  static_assert(sizeof(isPrime)==(sizeof(bool)*std::size(isPrime)));\r\n  for(int i{2};;++i){\r\n    if(isPrime[i]){\r\n      details::primes.pb(i);\r\n      if(std::size(details::primes)==static_cast<std::size_t>(n))break;\r\n      for(int j{i*2};j<=SIZE;j+=i){\r\n        isPrime[j]=false;\r\n      }\r\n    }\r\n  }\r\n}\r\nbool isKalindrome(const vector<int>& a,int low,int high,int del){\r\n  if(low>=high)return true;\r\n  bool ans=false;\r\n  if(a[low]==a[high]){\r\n    ans=ans or isKalindrome(a, low+1, high-1, del);\r\n  }\r\n  else if(del==-1){\r\n    ans = ans or isKalindrome(a, low, high-1, a[high]) or\r\n    isKalindrome(a, low+1, high, a[low]);\r\n  }\r\n  else if(a[low]==del){\r\n    ans = ans or isKalindrome(a, low+1, high, del);\r\n  }\r\n  else if(a[high]==del){\r\n    ans = ans or isKalindrome(a, low, high-1, del);\r\n  }\r\n  return ans;\r\n}\r\nmap<string,int> dp{};\r\nint dfs(string& s){\r\n  if(s.empty())return 99999;\r\n  auto it=dp.find(s);\r\n  if(it!=end(dp))return it->second;\r\n  auto num=stoll(s);\r\n  if(num%25==0)return 0;\r\n  const auto& l{int(size(s))};\r\n  int ret=INT_MAX;\r\n  for(int i{};i<l;++i){\r\n    auto t=s;\r\n    t.erase(i,1);\r\n    ret=min(ret,1+dfs(t));\r\n  }\r\n  return dp[s]=ret;\r\n}\r\nvoid kill(){\r\n  int a,b,c;\r\n  cin >> a >> b >> c;\r\n  int val=a+c-2*b;\r\n  if(val%3==0)cout << \"0\\n\";\r\n  else cout << \"1\\n\";\r\n  return;  \r\n}\r\n\r\nint main()\r\n{ \r\n    fast_io;\r\n    \r\n    //#ifndef ONLINE_JUDGE\r\n    //file_io;\r\n    //freopen(\"D:/cp/error.txt\", \"w+\", stderr);\r\n    //#endif\r\n#if !defined(ONEPROBLEM)\r\n    int n=1;\r\n    cin>>n;\r\n    //cin.ignore(std::numeric_limits<std::streamsize>::max(), '\\n');\r\n    for(int i=0;i<n;i++){\r\n       kill();\r\n   }\r\n#elif defined(ONEPROBLEM)\r\n   kill();\r\n#endif\r\n  return 0;\r\n}"
}