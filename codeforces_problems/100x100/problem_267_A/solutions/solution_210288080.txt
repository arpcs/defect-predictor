{
    "id": 210288080,
    "contestId": 267,
    "creationTimeSeconds": 1687209425,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 267,
        "index": "A",
        "name": "Subtractions",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 900,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 267,
        "members": [
            {
                "handle": "nabil_salah"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1358002800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 35,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <unordered_map>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <cstring>\r\n#include <set>\r\n#include <map>\r\n#include <cmath>\r\n#include <iomanip>\r\n#include <stack>\r\n#include <queue>\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <ext/numeric>\r\n#define int long long\r\n#define Fi first\r\n#define Se second\r\ntypedef long long ll;\r\ntypedef long long ull;\r\ntypedef long double ld;\r\nusing namespace std ;\r\nusing namespace __gnu_cxx;\r\nusing namespace __gnu_pbds;\r\ntypedef vector<vector<int>> matrix;\r\n//type to store     ,     c    ,define order can be greater<> or less_equal,c,c>\r\n#define ordered_set tree<long long, null_type,less_equal<long long>, rb_tree_tag,tree_order_statistics_node_update>\r\nconst ll mod = 998244353;/*1e9+7 ;*/\r\nconst long long oo = 3e18l+5;\r\nconst ld eps = 1e-9;\r\nstring ys = \"YES\", no = \"NO\";\r\n#define all(v) v.begin(), v.end()\r\n#define mem(v) memset(v,-1,sizeof v);\r\n#define getunique(v) {sort(all(v)); v.erase(unique(all(v)), v.end());}\r\nbool sortbysec(const pair<int,int> &a,const pair<int,int> &b){\r\n    return (a.second < b.second);\r\n}\r\nbool valid(int i,int j,int n,int m){\r\n    if(i>=0&&i<n&&j>= 0 && j<m)return true;\r\n    return 0;\r\n}\r\nvoid fast(){cin.sync_with_stdio(0);cin.tie(0);cout.tie(0);}\r\nint dx[] = { -1, 0, 0, 1, -1, -1, 1, 1};\r\nint dy[] = { 0, 1, -1, 0, -1, 1,  1, -1};\r\nint cntsrc[26]; // don't forget to memset it but not cnt\r\nint* cntchar = cntsrc - 'a'; // so cnt['a'] = cntsrc[0] and so on\r\nstruct myComp {\r\n    constexpr bool operator()(\r\n            pair<int, int> const& a,\r\n            pair<int, int> const& b)\r\n    const noexcept\r\n    {\r\n        return a.second> b.second;\r\n    }\r\n};\r\n\r\n\r\n\r\n::int32_t main() {\r\n    fast();\r\n    //freopen(\"input.txt\", \"r\", stdin);freopen(\"output.txt\", \"w\", stdout);\r\n    //cout << setprecision(10) << fixed;\r\n    int t = 1;cin >> t;\r\n    for (int tcc = 1; tcc <= t; tcc++) {\r\n        int a,b;cin>>a>>b;\r\n        int cnt = 0;\r\n        while (a != 0 && b!= 0){\r\n            if(a>b){\r\n                int dec = a/b;\r\n                cnt+=dec;\r\n                a-=b*dec;\r\n            }else{\r\n                int dec = b/a;\r\n                cnt+=dec;\r\n                b-=a*dec;\r\n            }\r\n        }\r\n        cout<<cnt<<'\\n';\r\n    }\r\n}"
}