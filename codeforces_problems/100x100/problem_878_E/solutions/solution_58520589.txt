{
    "id": 58520589,
    "contestId": 878,
    "creationTimeSeconds": 1565410786,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 878,
        "members": [
            {
                "handle": "pufanyi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509029100
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 9420800,
    "source": "#define _CRT_SECURE_NO_WARNINGS\r\n\r\n#include <map>\r\n#include <ctime>\r\n#include <cmath>\r\n#include <cstdio>\r\n#include <cctype>\r\n#include <vector>\r\n#include <bitset>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <fstream>\r\n#include <iostream>\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long LL;\r\n\r\ninline char gc() {\r\n\tstatic const LL L = 233333;\r\n\tstatic char sxd[L], *sss = sxd, *ttt = sxd;\r\n\tif (sss == ttt) {\r\n\t\tttt = (sss = sxd) + fread(sxd, 1, L, stdin);\r\n\t\tif (sss == ttt) {\r\n\t\t\treturn EOF;\r\n\t\t}\r\n\t}\r\n\treturn *sss++;\r\n}\r\n\r\n#define dd c = getchar()\r\n#ifndef dd\r\n#define dd c = gc()\r\n#endif\r\ninline char readalpha() {\r\n\tchar dd;\r\n\tfor (; !isalpha(c); dd);\r\n\treturn c;\r\n}\r\n\r\ninline char readchar() {\r\n\tchar dd;\r\n\tfor (; c == ' '; dd);\r\n\treturn c;\r\n}\r\n\r\ntemplate <class T>\r\ninline bool read(T& x) {\r\n\tbool flg = false;\r\n\tchar dd;\r\n\tx = 0;\r\n\tfor (; !isdigit(c); dd) {\r\n\t\tif (c == '-') {\r\n\t\t\tflg = true;\r\n\t\t} else if(c == EOF) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tfor (; isdigit(c); dd) {\r\n\t\tx = (x << 1) + (x << 3) + (c ^ 48);\r\n\t}\r\n\tif (flg) {\r\n\t\tx = -x;\r\n\t}\r\n\treturn true;\r\n}\r\n#undef dd\r\n\r\ntemplate <class T>\r\ninline void write(T x) {\r\n\tif (x < 0) {\r\n\t\tputchar('-');\r\n\t\tx = -x;\r\n\t}\r\n\tif (x < 10) {\r\n\t\tputchar(x | 48);\r\n\t\treturn;\r\n\t}\r\n\twrite(x / 10);\r\n\tputchar((x % 10) | 48);\r\n}\r\n\r\nconst LL maxn = 100005;\r\nconst LL mod = 1000000007;\r\nconst LL inf = 0x3f3f3f3f;\r\n\r\nLL n, Q;\r\nLL fa[maxn];\r\nLL aa[maxn];\r\nLL gg[maxn];\r\nLL sum[maxn];\r\nLL qian[maxn];\r\nLL sumall[maxn];\r\nLL S[maxn];\r\nLL ans[maxn];\r\n\r\ninline LL getfa(LL x) {\r\n\treturn fa[x] == x ? x : fa[x] = getfa(fa[x]);\r\n}\r\n\r\nstruct Query {\r\n\tLL l, r, id;\r\n\tfriend bool operator < (Query a, Query b) {\r\n\t\treturn a.r < b.r;\r\n\t}\r\n} q[maxn];\r\n\r\ninline void Merge(LL x) {\r\n\tLL y = qian[x];\r\n//\tcout << \"merge \" << y << ' ' << x << ' ' << sumall[y] << ' ' << sumall[x] << endl;\r\n\tif ((sumall[x] && y - qian[y] > 31) || sumall[y] + (((LL) sumall[x]) << (y - qian[y])) >= mod) {\r\n\t\tsumall[x] = inf;\r\n\t} else {\r\n\t\tsumall[x] = sumall[y] + (sumall[x] << (y - qian[y]));\r\n\t}\r\n\tfa[getfa(y)] = getfa(x);\r\n\tqian[x] = qian[y];\r\n}\r\n\r\ninline LL getsum(LL l, LL r) {\r\n\treturn ((sum[l] - (LL) sum[r + 1] * gg[r - l + 1] % mod) % mod + mod) % mod;\r\n}\r\n\r\nint main() {\r\n\tread(n), read(Q);\r\n\tgg[0] = 1;\r\n\tfor (LL i = 1; i <= n; ++i) {\r\n\t\tgg[i] = (gg[i - 1] << 1) % mod;\r\n\t}\r\n\tfor (LL i = 1; i <= n; ++i) {\r\n\t\tread(aa[i]);\r\n\t\tfa[i] = i;\r\n\t\tqian[i] = i - 1;\r\n\t}\r\n\tfor (LL i = n; i; --i) {\r\n\t\tsum[i] = (((sum[i + 1] << 1) % mod + aa[i]) % mod + mod) % mod;\r\n\t}\r\n\t// cout << \"sum = \";\r\n\t// for (LL i = 1; i <= n; ++i) {\r\n\t// cout << sum[i] << ' ';\r\n\t// }\r\n\t// cout << endl;\r\n\tfor (LL i = 1; i <= Q; ++i) {\r\n\t\tread(q[i].l), read(q[i].r), q[i].id = i;\r\n\t}\r\n\tsort(q + 1, q + Q + 1);\r\n\tLL now = 1;\r\n\tfor (LL i = 1; i <= n; ++i) {\r\n\t\tsumall[i] = aa[i];\r\n\t\twhile (qian[i] && sumall[i] >= 0) {\r\n\t\t\tMerge(i);\r\n//\t\t\tcout << i << ' ' << qian[i] << ' ' << getsum(qian[i] + 1, i) << ' ' << sumall[i] << endl;\r\n\t\t}\r\n//\t\tcout << i << ' ' << qian[i] << ' ' << getsum(qian[i] + 1, i) << ' ' << sumall[i] << endl;\r\n\t\tS[i] = ((S[qian[i]] + (getsum(qian[i] + 1, i) << 1) % mod) % mod + mod) % mod;\r\n\t\twhile (now <= Q && q[now].r == i) {\r\n\t\t\tLL kuai = getfa(q[now].l);\r\n\t\t\tans[q[now].id] = (((S[i] - S[kuai]) % mod + getsum(q[now].l, kuai)) % mod + mod) % mod;\r\n\t\t\t// cout << \"ask \" << endl;\r\n\t\t\tnow++;\r\n\t\t}\r\n\t}\r\n\tfor (LL i = 1; i <= Q; ++i) {\r\n\t\twrite(ans[i]);\r\n\t\tputs(\"\");\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n/*\r\n7 2\r\n845337335\r\n918157931\r\n-393208824\r\n-795497732\r\n-208348583\r\n521115289\r\n619393959\r\n1 7\r\n1 1\r\n*/"
}