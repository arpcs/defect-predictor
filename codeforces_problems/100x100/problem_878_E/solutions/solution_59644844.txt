{
    "id": 59644844,
    "contestId": 878,
    "creationTimeSeconds": 1567054869,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 878,
        "members": [
            {
                "handle": "AKCqhzdy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509029100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 6041600,
    "source": "#include<cstdio>\r\n#include<iostream>\r\n#include<cstring>\r\n#include<cstdlib>\r\n#include<algorithm>\r\n#include<cmath>\r\nusing namespace std;\r\ntypedef long long LL;\r\nconst int _=1e2;\r\nconst int maxn=1e5+_;\r\nconst int mod=1e9+7;\r\nconst LL inf=(1LL<<60);\r\ninline int ad(int x,int y){return x>=mod-y?x-mod+y:x+y;}\r\ninline int re(int x,int y){return x<y?x-y+mod:x-y;}\r\ninline int mu(int x,int y){return (LL)x*y%mod;}\r\ninline int qp(int x,int y){int r=1;while(y){if(y&1)r=mu(r,x);x=mu(x,x);y>>=1;}return r;}\r\ninline int dv(int x,int y){return mu(x,qp(y,mod-2));}\r\n\r\nint a[maxn],s[maxn],Bin[maxn];\r\nint calc(int l,int r){return dv(re(s[r],s[l-1]),Bin[l-1]);}\r\n\r\nstruct query{int l,r,id;}q[maxn];int pr[maxn];\r\nbool cmp(query q1,query q2){return q1.r<q2.r;}\r\n\r\nint L[maxn],tot[maxn],len,as[maxn],d[maxn];LL g[maxn];\r\nint sa[maxn],Rank[maxn];\r\nint findL(int x)\r\n{\r\n\tif(x==L[x])return x;\r\n\tL[x]=findL(L[x]);return L[x];\r\n}\r\nLL gao(LL x,LL y,int mi)\r\n{\r\n\tif(y>0&&(inf-x)/y<=(1<<mi))return inf;\r\n\treturn x+y*(1<<mi);\r\n}\r\nvoid merge(int i)\r\n{\r\n\td[len-1]=ad(d[len-1],mu(d[len],Bin[tot[sa[len-1]]]));\r\n\tg[len-1]=gao(g[len-1],g[len],tot[sa[len-1]]);\r\n\tint l=findL(i),ll=findL(l-1);\r\n\ttot[ll]+=tot[l];\r\n\tL[l]=ll;\r\n}\r\n\r\nint main()\r\n{\r\n\tint n,Q;\r\n\tscanf(\"%d%d\",&n,&Q); Bin[0]=1;\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\tBin[i]=ad(Bin[i-1],Bin[i-1]);\r\n\t\ts[i]=ad(s[i-1],mu(Bin[i-1],re(a[i],0)));\r\n\t}\r\n\tfor(int i=1;i<=Q;i++)\r\n\t\tscanf(\"%d%d\",&q[i].l,&q[i].r),q[i].id=i;\r\n\tsort(q+1,q+Q+1,cmp);\r\n\t\r\n\tint tp=1;\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tL[i]=i,tot[i]=1;\r\n\t\tRank[i]=++len,sa[len]=i;\r\n\t\td[len]=re(a[i],0);\r\n\t\tg[len]=a[i];\r\n\t\twhile(len>1&&g[len]>=0)merge(i),len--;\r\n\t\tas[len]=ad(as[len-1],d[len]);\r\n\t\t\r\n\t\twhile(tp<=Q&&q[tp].r==i)\r\n\t\t{\r\n\t\t\tint p=Rank[findL(q[tp].l)];\r\n\t\t\tif(p==len)pr[q[tp].id]=calc(q[tp].l,i);\r\n\t\t\telse pr[q[tp].id]=ad(mu(2,re(as[len],as[p])),calc(q[tp].l,sa[p+1]-1));\r\n\t\t\ttp++;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor(int i=1;i<=Q;i++)printf(\"%d\\n\",pr[i]);\r\n\t\r\n\treturn 0;\r\n}"
}