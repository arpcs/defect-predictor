{
    "id": 211205409,
    "contestId": 878,
    "creationTimeSeconds": 1687844616,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 878,
        "members": [
            {
                "handle": "kkio"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509029100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 38,
    "timeConsumedMillis": 296,
    "memoryConsumedBytes": 13824000,
    "source": "#include <bits/stdc++.h>\r\n#define int long long\r\nusing namespace std;\r\nconst int maxn=1e5+10,mod=1e9+7;\r\nint a[maxn],n,q,ans[maxn],pw[maxn];\r\nvector< pair<int,int> > vec[maxn]; \r\nint fa[maxn],len[maxn],sur[maxn],val[maxn],rval[maxn];\r\nint find(int x){return x==fa[x]?x:fa[x]=find(fa[x]);}\r\nvoid merge(int u,int v)\r\n{\r\n    u=find(u),v=find(v);\r\n    if((pw[len[u]]>40&&rval[v]>0)||(rval[v]*pw[len[u]]+rval[u])>1e12)rval[u]=1e12;\r\n    else rval[u]=(rval[v]*pw[len[u]]+rval[u]);\r\n    val[u]=(1ll*val[v]*pw[len[u]]%mod+val[u])%mod;\r\n    len[u]+=len[v];\r\n    fa[v]=u;\r\n}\r\nint tot;\r\nint g[maxn];\r\nsigned main()\r\n{\r\n    scanf(\"%lld%lld\",&n,&q);\r\n    pw[0]=1;\r\n    for(int i=1;i<=n;i++)pw[i]=1ll*pw[i-1]*2%mod;\r\n    for(int i=1;i<=n;i++)\r\n        scanf(\"%lld\",&a[i]);\r\n    for(int i=1;i<=q;i++)\r\n    {\r\n        int l,r;\r\n        scanf(\"%lld%lld\",&l,&r);\r\n        vec[r].push_back({l,i});\r\n    }\r\n    for(int i=1;i<=n;i++)fa[i]=i,len[i]=1,rval[i]=a[i],val[i]=(a[i]%mod+mod)%mod;\r\n    for(int i=n;i>=1;i--)sur[i]=(1ll*sur[i+1]*2%mod+a[i]%mod+mod)%mod;\r\n    for(int r=1;r<=n;r++)\r\n    {\r\n        while(rval[find(r)]>=0&&find(r)>1)\r\n            merge(find(find(r)-1),find(r));\r\n        g[find(r)]=(g[find(find(r)-1)]+val[find(r)])%mod;\r\n        for(auto [l,id]:vec[r])\r\n        {\r\n            int val=(g[find(r)]-g[find(l)]+mod)%mod*2%mod;\r\n            int tmp=find(l)+len[find(l)]-1;\r\n            val=(val+(sur[l]-1ll*sur[tmp+1]*pw[tmp-l+1]%mod+mod)%mod)%mod;\r\n            ans[id]=val;\r\n        }\r\n    }\r\n    for(int i=1;i<=q;i++)\r\n        printf(\"%lld\\n\",ans[i]);\r\n    return 0;\r\n}"
}