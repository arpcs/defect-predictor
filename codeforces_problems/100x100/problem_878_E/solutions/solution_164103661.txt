{
    "id": 164103661,
    "contestId": 878,
    "creationTimeSeconds": 1657778169,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 878,
        "members": [
            {
                "handle": "liuyaningqwq"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509029100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 10035200,
    "source": "#include<bits/stdc++.h>\n#define LL long long\nusing namespace std;\nint const mo=1e9+7,N=1e5+10,inf=1e9+10;\nint n,fa[N],q,len[N];\nLL pw[N],f[N],pre_f[N],ans[N],suf_v[N],a[N],s[N];\nvector<pair<int ,int> > qus[N];\ninline int add(int x,int y){\n    x+=y;\n    return(x>=mo?x-mo:x);\n}\ninline int calc(int l,int r){\n    return add(suf_v[l],mo-1ll*suf_v[r+1]*pw[r-l+1]%mo);\n}\nint gf(int x){\n    if(x==fa[x]) return x;\n    return fa[x]=gf(fa[x]);\n}\nvoid Merge(int x,int y){\n    fa[y]=x;  //\u5bb9\u6613\u77e5\u9053 \u4e00\u4e2a\u8d1f\u6570\u6bb5\u6700\u4f4e1e9 \u53c8\u5bb9\u6613\u77e5\u9053 \u53ea\u6709y>0\u624d\u4f1a\u5f80\u524d\u5408\u5e76\n    if((s[y]>0&&len[x]>30)||(s[x]+(s[y]<<len[x]))>=inf) s[x]=inf;\n    else s[x]+=s[y]<<len[x];\n    f[x]=add(f[x],f[y]*pw[len[x]]%mo);\n    len[x]+=len[y];\n}\nint main(){\n    scanf(\"%d%d\",&n,&q);\n    pw[0]=1;\n    for(int i=1;i<=n;i++) scanf(\"%lld\",&a[i]),f[i]=s[i]=a[i],f[i]=a[i]=(mo+f[i])%mo,pw[i]=pw[i-1]*2ll%mo,fa[i]=i,len[i]=1;\n    for(int i=n;i;i--) suf_v[i]=add(suf_v[i+1]*2ll%mo,a[i]);\n    int l,r,id;\n    for(int i=1;i<=q;i++) scanf(\"%d%d\",&l,&r),qus[r].push_back(make_pair(l,i));\n    int pre;\n    for(int i=1;i<=n;i++){\n        while(gf(i)!=1&&s[gf(i)]>=0) Merge(gf(gf(i)-1),gf(i));\n        pre=gf(i);\n        pre_f[pre]=add(pre_f[gf(pre-1)],f[pre]);\n        for(auto dq:qus[i]){\n            l=dq.first; id=dq.second;\n            ans[id]=add(2ll*add(pre_f[pre],mo-pre_f[gf(l)])%mo,calc(l,gf(l)+len[gf(l)]-1));\n        }\n    }\n\n    for(int i=1;i<=q;i++) printf(\"%lld\\n\",ans[i]);\n}\n"
}