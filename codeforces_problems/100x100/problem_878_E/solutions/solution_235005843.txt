{
    "id": 235005843,
    "contestId": 878,
    "creationTimeSeconds": 1701320965,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 878,
        "members": [
            {
                "handle": "oj_sloj"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509029100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 108,
    "memoryConsumedBytes": 6860800,
    "source": "// Hydro submission #656818dfd0a8f0e6df5105ad@1701320947854\n#include<bits/stdc++.h>\r\nusing i64 = long long;\r\nusing namespace std;\r\nconstexpr int _N = 1e5 + 5, mod = 1e9 + 7;\r\nconstexpr i64 inf = 1e14;\r\nint n, q, sta[_N], top, ans[_N];\r\ni64 a[_N], pw[_N], inv[_N], mul[_N], sum[_N], sum2[_N];\r\nstruct Query { int l, r, id; } qr[_N];\r\nsigned main() {\r\n\tios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n\tcin >> n >> q;\r\n\tpw[0] = inv[0] = 1;\r\n\tfor (int i = 1; i <= n; ++i) {\r\n\t\tcin >> a[i];\r\n\t\tpw[i] = 2ll * pw[i - 1] % mod;\r\n\t\tinv[i] = 1ll * (mod + 1) / 2 * inv[i - 1] % mod;\r\n\t\t(mul[i] = mul[i - 1] + 1ll * pw[i] * a[i]) %= mod;\r\n\t}\r\n\tfor (int i = 1; i <= q; ++i) {\r\n\t\tcin >> qr[i].l >> qr[i].r;\r\n\t\tqr[i].id = i;\r\n\t}\r\n\tsort(qr + 1, qr + q + 1, [](const Query &A, const Query &B) {\r\n\t\treturn A.r < B.r;\r\n\t});\r\n\tfor (int i = 1, j = 1; i <= q; ++i) {\r\n\t\tint l = qr[i].l, r = qr[i].r;\r\n\t\tfor (; j <= r; ++j) {\r\n\t\t\tsta[++top] = j, sum[top] = a[j];\r\n\t\t\twhile (top > 1 && sum[top] > 0) {\r\n\t\t\t\tint len = sta[top] - sta[top - 1];\r\n\t\t\t\tif (len >= 50 || (1 << len) > (inf - sum[top - 1]) / sum[top])\r\n\t\t\t\t\tsum[top - 1] = inf;\r\n\t\t\t\telse sum[top - 1] += (1 << len) * sum[top];\r\n\t\t\t\t--top;\r\n\t\t\t}\r\n\t\t\tif (sum[top] < inf) sum2[top] = (sum2[top - 1] + sum[top]) % mod;\r\n\t\t\telse sum2[top] = mul[j];\r\n\t\t}\r\n\t\tsta[top + 1] = r + 1;\r\n\t\tint p = upper_bound(sta + 1, sta + top + 2, l) - sta;\r\n\t\tans[qr[i].id] = ((sum2[top] - sum2[p - 1]) * 2 + (mul[sta[p] - 1] - mul[l - 1]) * inv[l]) % mod;\r\n\t}\r\n\tfor (int i = 1; i <= q; ++i)\r\n\t\tcout << (ans[i] + mod) % mod << '\\n';\r\n}"
}