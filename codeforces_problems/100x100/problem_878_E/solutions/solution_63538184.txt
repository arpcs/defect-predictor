{
    "id": 63538184,
    "contestId": 878,
    "creationTimeSeconds": 1572165862,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 878,
        "members": [
            {
                "handle": "hengheng"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509029100
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<cstdio>\r\n#include<algorithm>\r\n#define int long long\r\nusing namespace std;\r\nconst int mod=1e9+7;\r\nint n,q;\r\nint fa[500010],pre[500010],sum[500010],tot[500010],ans[500010],pow[500010],haha[500010],a[500010];\r\nstruct arr {\r\n\tint l,r,n;\r\n}ask[500010];\r\nint cmp(arr x,arr y) {\r\n\treturn x.r<y.r;\r\n}\r\nvoid merge(int x,int y) {\r\n\tfa[x]=y;pre[y]=pre[x];\r\n\tint len=x-pre[x];\r\n\tif ((len>=30 && sum[y]>=0) || sum[x]+(sum[y]<<len)>=mod) sum[y]=mod;else sum[y]=sum[x]+(sum[y]<<len); \r\n}\r\nint find(int u) {\r\n\tif (fa[u]==u) return u;\r\n\tfa[u]=find(fa[u]);\r\n\treturn fa[u];\r\n}\r\nint calc(int x,int y) {\r\n\treturn ((haha[x]-haha[y+1]*pow[y-x+1]%mod)+mod)%mod;\r\n}\r\nsigned main() {\r\n\t//freopen(\"border.in\",\"r\",stdin);\r\n\t//freopen(\"border.out\",\"w\",stdout);\r\n\t\r\n\tscanf(\"%lld%lld\",&n,&q);\r\n\tfor (int i=1; i<=n; i++) scanf(\"%lld\",&a[i]);\r\n\tfor (int i=1; i<=q; i++) {\r\n\t\tscanf(\"%lld%lld\",&ask[i].l,&ask[i].r);\r\n\t\task[i].n=i;\r\n\t}\r\n\tsort(ask+1,ask+1+q,cmp);\r\n\tpow[0]=1;\r\n\tfor (int i=1; i<=n; i++) pow[i]=pow[i-1]*2%mod;\r\n\thaha[n]=a[n];\r\n\tfor (int i=n-1; i>=1; i--) haha[i]=((haha[i+1]*2%mod+a[i])%mod+mod)%mod;\r\n\tfor (int i=1; i<=n; i++) pre[i]=i-1,fa[i]=i,sum[i]=a[i];\r\n\tint j=1;\r\n\tfor (int i=1; i<=n; i++) {\r\n\t\twhile (pre[i] && sum[i]>=0) merge(pre[i],i);\r\n\t\ttot[i]=((tot[pre[i]]+(calc(pre[i]+1,i)<<1)%mod)%mod+mod)%mod;\r\n\t\twhile (j<=q && ask[j].r==i) {\r\n\t\t\tint num=find(ask[j].l);\r\n\t\t\tans[ask[j].n]=((((tot[i]-tot[num])%mod+mod)%mod+calc(ask[j].l,num))%mod+mod)%mod;\r\n\t\t\tj++;\r\n\t\t}\r\n\t}\r\n\tfor (int i=1; i<=q; i++) printf(\"%lld\\n\",ans[i]);\r\n\treturn 0;\r\n}"
}