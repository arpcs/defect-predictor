{
    "id": 64106526,
    "contestId": 878,
    "creationTimeSeconds": 1572713551,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 878,
        "members": [
            {
                "handle": "Dream-Reality"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509029100
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 9830400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define rep(i,a,b) for (int i=a;i<=b;i++)\r\n#define per(i,a,b) for (int i=a;i>=b;i--)\r\n#define Rep(i,a,b) for (int i=a;i<b;i++)\r\n#define Per(i,a,b) for (int i=a;i>b;i--)\r\n#define maxn 100005\r\n#define mod 1000000007\r\nint n,q,a[maxn];\r\nint sum[maxn],p2[maxn],ans[maxn];\r\nint top=0;\r\nvector<pair<int,int> >qy[maxn];\r\nnamespace Tree{\r\nint sl[maxn<<2],sr[maxn<<2],s[maxn<<2];\r\nvoid build(int rot,int l,int r){\r\n\tsl[rot]=l;sr[rot]=r;s[rot]=(a[l]+mod)%mod;if (l==r)return;\r\n\tint mid=(l+r)>>1;build(rot<<1,l,mid),build(rot<<1|1,mid+1,r);\r\n\ts[rot]=(1ll*p2[sr[rot<<1]-sl[rot<<1]+1]*s[rot<<1|1]+s[rot<<1])%mod;\r\n}\r\nint ask(int rot,int l,int r){\r\n\tif (l>r)return 0;\r\n\tif (l==sl[rot]&&r==sr[rot])return s[rot];\r\n\tint mid=(sl[rot]+sr[rot])>>1;\r\n\tif (r<=mid)return ask(rot<<1,l,r);\r\n\telse if (l>mid)return ask(rot<<1|1,l,r);\r\n\telse return (1ll*p2[mid-l+1]*ask(rot<<1|1,mid+1,r)+ask(rot<<1,l,mid))%mod;\r\n}\r\n}\r\nstruct Node{\r\n\tint be,sm;Node(){}\r\n\tNode(int be,int sm):be(be),sm(sm){}\r\n}stk[maxn];\r\nint bin(int x){\r\n\tint l=1,r=top;\r\n\twhile (l<=r){\r\n\t\tint mid=(l+r)>>1;\r\n\t\tif (stk[mid].be>x)r=mid-1;else l=mid+1;\r\n\t}\r\n\treturn l;\r\n}\r\nint main(){\r\n\tscanf(\"%d%d\",&n,&q);\r\n\trep(i,1,n)scanf(\"%d\",&a[i]);\r\n\tp2[0]=1;rep(i,1,n)p2[i]=p2[i-1]*2%mod;\r\n\tTree::build(1,1,n);\r\n\trep(i,1,q){\r\n\t\tint l,r;scanf(\"%d%d\",&l,&r);\r\n\t\tqy[r].push_back(make_pair(l,i));\r\n\t}\r\n\trep(i,1,n){\r\n\t\tint sm=a[i],be=i;bool flag=false;\r\n\t\twhile (top&&sm>0){\r\n\t\t\tif (be-stk[top].be>=31)flag=true;\r\n\t\t\tif (1ll*sm*p2[be-stk[top].be]>=2000000000)flag=true;\r\n\t\t\tsm=(1ll*sm*p2[be-stk[top].be]+stk[top].sm)%mod;\r\n\t\t\tif (flag)sm+=mod;\r\n\t\t\tbe=stk[top--].be;\r\n\t\t}\r\n\t\tstk[++top]=Node(be,sm%mod);\r\n\t\tif (top>1)sum[top]=((sum[top-1]+stk[top].sm)%mod+mod)%mod;\r\n\t\telse sum[top]=stk[top].sm;\r\n\t\tRep(k,0,qy[i].size()){\r\n\t\t\tint lst=bin(qy[i][k].first);\r\n\t\t\tans[qy[i][k].second]=(2ll*(sum[top]-sum[lst-1]+mod)%mod+Tree::ask(1,qy[i][k].first,lst>top?i:stk[lst].be-1))%mod;\r\n\t\t}\r\n\t}\r\n\trep(i,1,q)printf(\"%d\\n\",ans[i]);\r\n\treturn 0;\r\n}\r\n/*\r\n\r\n10 1\r\n593536087 56559483 -439122178 -126803734 606390399 -809361217 444436245 71742850 -477364598 -818526589\r\n2 4\r\n*/"
}