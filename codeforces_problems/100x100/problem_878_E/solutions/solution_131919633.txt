{
    "id": 131919633,
    "contestId": 878,
    "creationTimeSeconds": 1634205731,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 878,
        "members": [
            {
                "handle": "StaroForgin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509029100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 8806400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define MAXN 100005\r\n#define lowbit(x) (x&-x)\r\n#define reg register\r\n#define pb push_back\r\n#define mkpr make_pair\r\n#define fir first\r\n#define sec second\r\ntypedef long long LL;\r\ntypedef unsigned long long uLL;     \r\nconst LL INF=0x3f3f3f3f3f3f3f3f;  \r\nconst int mo=1e9+7;\r\nconst int inv2=5e8+4;\r\nconst int jzm=2333;\r\nconst int n1=50;\r\nconst int zero=10000;\r\nconst LL lim=1000000000000000LL;\r\nconst int orG=3,invG=332748118;\r\nconst double Pi=acos(-1.0);\r\nconst double eps=1e-5;\r\ntypedef pair<LL,int> pii;\r\ntemplate<typename _T>\r\n_T Fabs(_T x){return x<0?-x:x;}\r\ntemplate<typename _T>\r\nvoid read(_T &x){\r\n\t_T f=1;x=0;char s=getchar();\r\n\twhile(s>'9'||s<'0'){if(s=='-')f=-1;s=getchar();}\r\n\twhile('0'<=s&&s<='9'){x=(x<<3)+(x<<1)+(s^48);s=getchar();}\r\n\tx*=f;\r\n}\r\ntemplate<typename _T>\r\nvoid print(_T x){if(x>9)print(x/10);putchar(x%10+'0');}\r\nLL gcd(LL a,LL b){return !b?a:gcd(b,a%b);}\r\nint add(int x,int y,int p){return x+y<p?x+y:x+y-p;}\r\nvoid Add(int &x,int y,int p){x=add(x,y,p);}\r\nint qkpow(int a,int s,int p){int t=1;while(s){if(s&1LL)t=1ll*a*t%p;a=1ll*a*a%p;s>>=1LL;}return t;}\r\nint n,q,iv2[MAXN],stak,siz[MAXN],pre[MAXN],b[MAXN];LL a[MAXN];\r\nint fa[MAXN],R[MAXN],summ[MAXN],belong[MAXN],ans[MAXN];\r\npii pow2[MAXN],sta[MAXN];\r\nstruct ming{int l,r,id;}s[MAXN];\r\nbool cmp(ming x,ming y){return x.r<y.r;}\r\nint findSet(int x){return fa[x]==x?x:fa[x]=findSet(fa[x]);}\r\nLL merge(LL x,LL y){\r\n\tif(x==lim||y==lim)return lim;\r\n\tif(lim/x<=y)return lim;\r\n\treturn min(x*y,lim);\r\n}\r\nsigned main(){\r\n\t//freopen(\"D.in\",\"r\",stdin);\r\n\t//freopen(\"D.out\",\"w\",stdout);\r\n\tread(n);read(q);pow2[0]=mkpr(1,1);iv2[0]=1;\r\n\tfor(int i=1;i<=n;i++)read(a[i]),b[i]=(a[i]%mo+mo)%mo;\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tiv2[i]=1ll*inv2*iv2[i-1]%mo,\r\n\t\tpow2[i].fir=min(pow2[i-1].fir+pow2[i-1].fir,lim),\r\n\t\tpow2[i].sec=add(pow2[i-1].sec,pow2[i-1].sec,mo);\r\n\tfor(int i=1;i<=n;i++)pre[i]=add(pre[i-1],1ll*pow2[i].sec*b[i]%mo,mo);//,printf(\"pre %d:%d\\n\",i,pre[i]);\r\n\tfor(int i=1;i<=q;i++)read(s[i].l),read(s[i].r),s[i].id=i;\r\n\tsort(s+1,s+q+1,cmp);\r\n\tfor(int i=1,j=1;i<=n;i++){\r\n\t\tstak++;sta[stak]=mkpr(a[i],b[i]);\r\n\t\tsiz[stak]=1;fa[i]=i,R[stak]=i;belong[i]=stak;\r\n\t\tsumm[stak]=add(summ[stak-1],b[i],mo);\r\n\t\twhile(stak>1&&sta[stak].fir>=0){\r\n\t\t\t//printf(\"merge %d %d:%d\\n\",sta[stak].fir,sta[stak-1].fir,merge(sta[stak].fir,sta[stak-1].fir));\r\n\t\t\tsta[stak-1].fir=min(merge(sta[stak].fir,pow2[siz[stak-1]].fir)+sta[stak-1].fir,lim);\r\n\t\t\tsta[stak-1].sec=add(1ll*sta[stak].sec*pow2[siz[stak-1]].sec%mo,sta[stak-1].sec,mo);\r\n\t\t\tfa[R[stak-1]]=R[stak];belong[R[stak-1]=R[stak]]=stak-1;siz[stak-1]+=siz[stak];\r\n\t\t\tsumm[stak-1]=add(summ[stak-2],sta[stak-1].sec,mo);stak--;\r\n\t\t}\r\n\t\t//printf(\"Right to %d\\n\",i);\r\n\t\t//for(int k=1;k<=stak;k++)\r\n\t\t//\tprintf(\"block %d:%d %d %d\\n\",k,sta[k].fir,sta[k].sec,R[k]);\r\n\t\twhile(j<=q&&s[j].r==i){\r\n\t\t\tint tp=belong[findSet(s[j].l)];\r\n\t\t\t//printf(\"ask %d from %d to %d\\n\",s[j].id,tp,stak);\r\n\t\t\tans[s[j].id]=2ll*add(summ[stak],mo-summ[tp],mo)%mo;\r\n\t\t\t//printf(\"the back part:%d\\n\",ans[s[j].id]);\r\n\t\t\t//printf(\"question %d the front part:%d\\n\",s[j].id,add(pre[R[tp]],mo-pre[s[j].l-1],mo));\r\n\t\t\tans[s[j].id]=add(ans[s[j].id],1ll*iv2[s[j].l]*add(pre[R[tp]],mo-pre[s[j].l-1],mo)%mo,mo);\r\n\t\t\tj++;\r\n\t\t}\r\n\t}\r\n\tfor(int i=1;i<=q;i++)print(ans[i]),putchar('\\n');\r\n\treturn 0;\r\n}\r\n/*\r\n*/"
}