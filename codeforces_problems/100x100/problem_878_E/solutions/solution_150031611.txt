{
    "id": 150031611,
    "contestId": 878,
    "creationTimeSeconds": 1647612240,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 878,
        "members": [
            {
                "handle": "KyuushuKyuuhai"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509029100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 25,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 9318400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 100005,P = 1000000007;\r\nusing ll = long long;\r\nint n,q,a[N],f[N],pre[N];ll pw[N],s[N],sum[N],realsum[N],ans[N];\r\nint getf(int v) {return f[v] == v ? v : f[v] = getf(f[v]);}\r\nvoid merge(int x,int y)\r\n{\r\n    if ((x - pre[x] >= 32 && sum[y] > 0) || sum[x] + (sum[y] << (x - pre[x])) >= P) sum[y] = P;\r\n    else sum[y] = sum[x] + (sum[y] << (x - pre[x]));\r\n    pre[y] = pre[x];f[x] = f[y];\r\n}\r\ninline ll query(int x,int y) {return (s[x] - s[y + 1] * pw[y - x + 1] % P + P) % P;}\r\nvector<pair<int,int>> qq[N];\r\nint main ()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin >> n >> q;pw[0] = 1;\r\n    for (int i = 1;i <= n;i++) cin >> a[i],f[i] = i,pre[i] = i - 1,pw[i] = pw[i - 1] * 2 % P;\r\n    for (int i = n;i > 0;--i) s[i] = (s[i + 1] * 2 + a[i]) % P;\r\n    int t1,t2;\r\n    for (int i = 1;i <= q;i++) cin >> t1 >> t2,qq[t2].push_back({t1,i});\r\n    for (int i = 1;i <= n;i++)\r\n    {\r\n        sum[i] = a[i];while (pre[i] && sum[i] >= 0) merge(pre[i],i);\r\n        realsum[i] = (realsum[pre[i]] + query(pre[i] + 1,i) * 2) % P;\r\n        for (auto &j : qq[i])\r\n        { int tt = getf(j.first);ans[j.second] = (realsum[i] - realsum[tt] + P + query(j.first,tt)) % P; }\r\n    }\r\n    for (int i = 1;i <= q;i++) cout << ans[i] << '\\n';\r\n    return 0;\r\n}"
}