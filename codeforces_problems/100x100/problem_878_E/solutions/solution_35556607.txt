{
    "id": 35556607,
    "contestId": 878,
    "creationTimeSeconds": 1519237564,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 878,
        "members": [
            {
                "handle": "Noche_4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509029100
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 436,
    "memoryConsumedBytes": 13414400,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\n#define pb push_back\n#define int ll\n\nconst int maxn = 1e5 + 20;\nconst int mod = 1e9 + 7;\n\nint pw[maxn] , a[maxn] , sum[maxn] , l[maxn] , r[maxn] , ans[maxn] , ps[maxn] , sz;\n\nvector<int> query[maxn];\n\nvector<pair<int , int> > block;\n\nvoid ok(int &a)\n{\n\twhile(a >= mod)\n\t\ta -= mod;\n\twhile(a < 0)\n\t\ta += mod;\n}\n\nint get(int l , int r)\n{\n\tif(l > r)\n\t\treturn 0;\n\tint res = (sum[l] - 1LL * sum[r + 1] * pw[r - l + 1]) % mod;\n\tok(res);\n\n\treturn res;\n}\n\nll get1(int l , int r)\n{\n\tll s = 0;\n\tfor(int i = r; i >= l; i--)\n\t\ts = s * 2 + a[i];\n\treturn s;\n}\n\nint32_t main()\n{\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\n\tpw[0] = 1;\n\tfor(int i = 1; i < maxn; i++)\n\t\tpw[i] = pw[i - 1] * 2 % mod;\n\n\tint n , q;\n\tcin >> n >> q;\n\n\tfor(int i = 0; i < n; i++)\n\t\tcin >> a[i];\n\tfor(int i = 0; i < q; i++)\n\t{\n\t\tcin >> l[i] >> r[i];\n\t\tl[i]--;\n\t\tr[i]--;\n\t\tquery[r[i]].pb(i);\n\t}\n\n\tfor(int i = n - 1; i >= 0; i--)\n\t\tsum[i] = (1LL * sum[i + 1] * 2 + a[i]) % mod;\n\t\n\tfor(int i = 0; i < n; i++)\n\t{\n\t\tif(a[i] <= 0)\n\t\t{\n\t\t\tblock.pb({i , i});\n\t\t\tok(ps[sz] = (sz? ps[sz - 1] : 0) + a[i]);\n\t\t\tsz++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tll sum = a[i];\n\t\t\tbool f = 1;\n\t\t\tfor(int j = (int)block.size() - 1; j >= 0; j--)\n\t\t\t{\n\t\t\t\tauto seg = block[j];\n\t\t\t\tblock.pop_back();\n\t\t\t\tif(seg.second - seg.first + 1 >= 30)\n\t\t\t\t\tbreak;\n\n\t\t\t\tll s = get1(seg.first , seg.second);\n\t\t\t\tsum *= pw[seg.second - seg.first + 1];\n\t\t\t\tsum += s;\n\t\t\t\tif(sum < 0)\n\t\t\t\t{\n\t\t\t\t\tok(ps[j] = (j? ps[j - 1] : 0) + get(seg.first , i));\n\t\t\t\t\tblock.pb({seg.first , i});\n\t\t\t\t\tf = 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif(sum >= mod)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(f)\n\t\t\t{\n\t\t\t\tblock.clear();\n\t\t\t\tps[0] = get(0 , i);\n\t\t\t\tblock.pb({0 , i});\n\t\t\t}\n\t\t}\n\n\t\tsz = block.size();\n\n\t\tfor(auto j : query[i])\n\t\t{\n\t\t\tint k = upper_bound(block.begin() , block.end() , make_pair(l[j] , maxn)) - block.begin();\n\n\t\t\tif(k < (int)block.size())\n\t\t\t{\n\t\t\t\tans[j] = get(l[j] , block[k].first - 1);\n\t\t\t\tok(ans[j] += 2LL * (ps[sz - 1] - (k? ps[k - 1] : 0)) % mod);\n\t\t\t}\n\t\t\telse\n\t\t\t\tans[j] = get(l[j] , i);\n\t\t}\n\t}\n\n\tfor(int i = 0; i < q; i++)\n\t\tcout << ans[i] << endl;\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
}