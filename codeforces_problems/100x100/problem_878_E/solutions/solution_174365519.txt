{
    "id": 174365519,
    "contestId": 878,
    "creationTimeSeconds": 1664713889,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 878,
        "members": [
            {
                "handle": "AL_fly"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509029100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 8806400,
    "source": "#include<bits/stdc++.h>\r\n#define int long long\r\nusing namespace std;\r\nconst int N=1e5+5,mod=1e9+7;\r\nint pw[N],qq,inv[N],n,s[N],cnt,s1[N],s2[N],ans[N],mul[N],a[N];\r\nstruct o{\r\n    int l,r,id;\r\n}q[N];\r\ninline bool cmp(o a,o b){\r\n    return a.r<b.r;\r\n}\r\nsigned main(){\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0),cout.tie(0);\r\n    cin>>n>>qq;\r\n    inv[0]=pw[0]=1;\r\n    for(int i=1;i<=n;i++){\r\n        cin>>a[i];\r\n        pw[i]=(pw[i-1]<<1)%mod;\r\n        inv[i]=(inv[i-1]*500000004)%mod;\r\n        mul[i]=(mul[i-1]+pw[i]*a[i]%mod)%mod;\r\n    }\r\n    for(int i=1;i<=qq;i++){\r\n        cin>>q[i].l>>q[i].r;\r\n        q[i].id=i;\r\n    }\r\n    sort(q+1,q+qq+1,cmp);\r\n    int j=1;\r\n    for(int i=1;i<=qq;i++){\r\n        int l=q[i].l,r=q[i].r;\r\n        while(j<=r){\r\n            s[++cnt]=j,s1[cnt]=a[j];\r\n            while(cnt>1&&s1[cnt]>0){\r\n                if((s[cnt]-s[cnt-1])>=50||((1ll<<(s[cnt]-s[cnt-1]))>(1e18-s1[cnt-1])/s1[cnt]))s1[cnt-1]=1e18;\r\n                else s1[cnt-1]+=(1ll<<(s[cnt]-s[cnt-1]))*s1[cnt];\r\n                cnt--;\r\n            }\r\n            if(s1[cnt]==1e18)s2[cnt]=mul[j];\r\n            else s2[cnt]=(s2[cnt-1]+s1[cnt])%mod;\r\n            j++;\r\n        }\r\n        s[cnt+1]=r+1;\r\n        int p=upper_bound(s+1,s+cnt+2,l)-s;\r\n        ans[q[i].id]=((s2[cnt]-s2[p-1]+mod)%mod*2%mod+(mul[s[p]-1]-mul[l-1]+mod)%mod*inv[l])%mod;\r\n    }\r\n    for(int i=1;i<=qq;i++)cout<<ans[i]<<'\\n';\r\n    return 0;\r\n}"
}