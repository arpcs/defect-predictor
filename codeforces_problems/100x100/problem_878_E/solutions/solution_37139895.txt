{
    "id": 37139895,
    "contestId": 878,
    "creationTimeSeconds": 1523351342,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 878,
        "members": [
            {
                "handle": "Dreamchaser101"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509029100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 13414400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define N 100005\r\n#define M 1000000007LL\r\n#define ll long long\r\nll n,q,a[N],bin[N],b[N],p[N],pp[N],w[N],Ans[N];\r\nlong double s[N];\r\ndouble d2[N];\r\nstruct node{\r\n\tll l,r,id;\r\n}c[N];\r\nbool cmp(node a,node b){return a.r<b.r;}\r\nll get(ll l,ll r){\r\n\tif (!l) return 0; \r\n\treturn (b[r]-b[l-1])*bin[l-1]%M;\r\n}\r\nint main(){\r\n\tscanf(\"%lld%lld\",&n,&q);\r\n\tbin[0]=1;//\r\n\td2[0]=1;//2^..\r\n\tfor (ll i=1,now=1;i<=n;i++){\r\n\t\tscanf(\"%lld\",&a[i]);\r\n\t\tb[i]=(b[i-1]+a[i]*now)%M;\r\n\t\tnow=now*2%M;\r\n\t\tbin[i]=bin[i-1]*((M+1)/2)%M;\r\n\t\td2[i]=d2[i-1]*2.0;\r\n\t}\r\n\tfor (ll i=1;i<=q;i++){\r\n\t\tscanf(\"%lld%lld\",&c[i].l,&c[i].r);\r\n\t\tc[i].id=i;\r\n\t}\r\n\tsort(c+1,c+1+q,cmp);\r\n\tll top=1;\r\n\ts[1]=0;\r\n\tp[1]=0;\r\n\tpp[1]=0;\r\n\tw[1]=0;\r\n\tfor (ll i=1,j=1;i<=n;i++){\r\n\t\tlong double tmp=a[i]; \r\n\t\tif (a[i]<0){\r\n\t\t\ts[++top]=a[i]; p[top]=a[i]; w[top]=i;\r\n\t\t\tpp[top]=(pp[top-1]+p[top])%M;\r\n\t\t}else{\r\n\t\t\tll now=i;\r\n\t\t\twhile (top>1 && s[top]+(tmp?tmp*d2[now-w[top]]:0)>0){\r\n\t\t\t\ttmp=s[top]+(tmp?tmp*d2[now-w[top]]:0);\r\n\t\t\t\tnow=w[top];\r\n\t\t\t\ttop--;\r\n\t\t\t}\r\n\t\t\ttmp=s[top]+(tmp?tmp*d2[now-w[top]]:0);\r\n\t\t\ts[top]=tmp; p[top]=get(w[top],i);\r\n\t\t\tpp[top]=(pp[top-1]+p[top])%M;\r\n\t\t}\r\n\t\twhile (j<=q && c[j].r==i){\r\n\t\t\tll l=1,r=top,mid,ans=1;\r\n\t\t\twhile (l<=r){\r\n\t\t\t\tmid=l+r>>1;\r\n\t\t\t\tif (w[mid]<=c[j].l) ans=mid,l=mid+1;\r\n\t\t\t\telse r=mid-1;\r\n\t\t\t}\r\n\t\t\tAns[c[j].id]=((pp[top]-pp[ans])*2LL+get(c[j].l,ans==top?c[j].r:w[ans+1]-1))%M;\r\n\t\t\tj++;\r\n\t\t}\r\n\t}\r\n\tfor (ll i=1;i<=q;i++) printf(\"%lld\\n\",(Ans[i]%M+M)%M);\r\n\treturn  0;\r\n}"
}