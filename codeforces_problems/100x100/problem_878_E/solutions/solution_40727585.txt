{
    "id": 40727585,
    "contestId": 878,
    "creationTimeSeconds": 1532498284,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 878,
        "members": [
            {
                "handle": "lllllllllllllllllllllll"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509029100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 7782400,
    "source": "#include<bits/stdc++.h>\r\n#define rep(i,a,b) for (int i=(a); i<=(b); i++)\r\n#define per(i,a,b) for (int i=(a); i>=(b); i--)\r\n#define fi first\r\n#define se second\r\nusing namespace std;\r\ntypedef pair<int,int> pii;\r\n\r\nconst int maxn = 100005;\r\nconst int mod = 1000000007;\r\nint suf[maxn], sum[maxn], v[maxn], s[maxn];\r\nint bin[maxn], pa[maxn], L[maxn], ans[maxn];\r\nvector<pii> q[maxn];\r\nint n, m, l, r, sz;\r\n\r\nvoid merge(int a, int b) {\r\n\tif (a - L[a] > 35 || ((1ll * sum[b]) << (a - L[a] + 1)) + sum[a] > mod)\r\n\t\tsum[b] = mod;\r\n\telse\r\n\t\tsum[b] = (sum[b] << (a - L[a] + 1)) + sum[a];\r\n\tpa[a] = b; L[b] = L[a];\r\n\tv[b] = (v[a] + 1ll * bin[a - L[a] + 1] * v[b]) % mod;\r\n}\r\n\r\nint getpa(int x) {\r\n\treturn pa[x] == x ? x : pa[x] = getpa(pa[x]);\r\n}\r\n\r\nint query(int l, int r) {\r\n\tint ans = 0, t = getpa(l);\r\n\tans = (s[r] + mod - s[t]) % mod;\r\n\tans = (ans + suf[l] - 1ll * bin[t-l+1] * suf[t+1] % mod + mod) % mod;\r\n\treturn ans;\r\n}\r\n\r\nint main() {\r\n\tscanf(\"%d%d\", &n, &m); bin[0] = 1;\r\n\trep (i, 1, n) {\r\n\t\tscanf(\"%d\", &v[i]);\r\n\t\tbin[i] = 2 * bin[i-1] % mod;\r\n\t}\r\n\trep (i, 1, m) {\r\n\t\tscanf(\"%d%d\", &l, &r);\r\n\t\tq[r].push_back(make_pair(l, i));\r\n\t}\r\n\tper (i, n, 1)\r\n\t\tsuf[i] = (2ll * suf[i+1] + v[i]) % mod;\r\n\trep (i, 1, n) {\r\n\t\tpa[i] = i; sum[i] = v[i]; L[i] = i;\r\n\t\twhile (L[i] && sum[i] >= 0) merge(L[i]-1, i);\r\n\t\ts[i] = (s[L[i]-1] + 2ll * v[i]) % mod;\r\n\t\tsz = q[i].size();\r\n\t\trep (j, 0, sz - 1)\r\n\t\t\tans[q[i][j].se] = query(q[i][j].fi, i);\r\n\t}\t\r\n\trep (i, 1, m) printf(\"%d \", (ans[i] + mod) % mod);\r\n\treturn 0;\r\n}"
}