{
    "id": 155507845,
    "contestId": 1000,
    "creationTimeSeconds": 1651407843,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1000,
        "index": "G",
        "name": "Two-Paths",
        "type": "PROGRAMMING",
        "rating": 2700,
        "tags": [
            "data structures",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 1000,
        "members": [
            {
                "handle": "Booksnow"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1530110100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 48,
    "timeConsumedMillis": 1216,
    "memoryConsumedBytes": 59392000,
    "source": "#include <bits/stdc++.h>\r\n#define int long long\r\nusing namespace std;\r\nconst int N = 3e5 + 10;\r\ninline int read()\r\n{\r\n\tint s = 0, w = 1;\r\n\tchar ch = getchar();\r\n\twhile(ch < '0' || ch > '9') { if(ch == '-') w *= -1; ch = getchar(); }\r\n\twhile(ch >= '0' && ch <= '9') s = s * 10 + ch - '0', ch = getchar();\r\n\treturn s * w;\r\n}\r\nint n, Q;\r\nint A[N];\r\nint siz[N], son[N], fa[N], dep[N], top[N];\r\nint f[N], g[N], sub[N], sum[N], up[N];\r\nint tot, v[2 * N], w[2 * N], nex[2 * N], first[N];\r\ninline void Add(int x, int y, int z)\r\n{\r\n\tnex[++tot] = first[x];\r\n\tfirst[x] = tot, v[tot] = y, w[tot] = z; \r\n}\r\ninline int LCA(int u, int v)\r\n{\r\n\twhile(top[u] != top[v])\r\n\t\tdep[top[u]] > dep[top[v]] ? u = fa[top[u]] : v = fa[top[v]];\r\n\treturn dep[u] > dep[v] ? v : u;\r\n}\r\ninline void DFS1(int x)\r\n{\r\n\tsiz[x] = 1, sub[x] = A[x];\r\n\tfor(register int i = first[x]; i; i = nex[i]){\r\n\t\tint to = v[i];\r\n\t\tif(to != fa[x]){\r\n\t\t\tfa[to] = x, dep[to] = dep[x] + 1, g[to] = w[i];\r\n\t\t\tDFS1(to), siz[x] += siz[to], sub[x] += f[to];\r\n\t\t\tif(siz[to] > siz[son[x]]) son[x] = to;\r\n\t\t}\r\n\t}\r\n\tf[x] = max((int)0, sub[x] - 2 * g[x]);\r\n}\r\ninline void update(int x)\r\n{\r\n\tsum[x] = sub[fa[x]] - f[x] - g[x];\r\n\tup[x] = max((int)0, up[fa[x]] + sum[x] - g[x]);\r\n\tsum[x] += sum[fa[x]];\r\n}\r\ninline void DFS2(int x, int tp)\r\n{\r\n\ttop[x] = tp, update(x);\r\n\tif(son[x]){\r\n\t\tDFS2(son[x], tp);\r\n\t\tfor(register int i = first[x]; i ; i = nex[i])\r\n\t\t\tif(v[i] != fa[x] && v[i] != son[x]) DFS2(v[i], v[i]);\r\n\t}\r\n}\r\nsigned main()\r\n{\r\n\tn = read(), Q = read();\r\n\tfor(register int i = 1; i <= n; i++) A[i] = read();\r\n\tfor(register int i = 1; i < n; i++){\r\n\t\tint x = read(), y = read(), z = read();\r\n\t\tAdd(x, y, z), Add(y, x, z);\r\n\t}\r\n\tDFS1(1), DFS2(1, 1);\r\n\tfor(register int i = 1; i <= Q; i++){\r\n\t\tint x = read(), y = read(), z = LCA(x, y);\r\n\t\tprintf(\"%lld\\n\", sum[x] + sum[y] - (sum[z] << 1) + sub[x] + sub[y] - sub[z] + up[z]);\r\n\t}\r\n\treturn 0;\r\n}\r\n"
}