{
    "id": 107513087,
    "contestId": 1000,
    "creationTimeSeconds": 1613463554,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1000,
        "index": "G",
        "name": "Two-Paths",
        "type": "PROGRAMMING",
        "rating": 2700,
        "tags": [
            "data structures",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 1000,
        "members": [
            {
                "handle": "LiuRunkY"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1530110100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 48,
    "timeConsumedMillis": 2074,
    "memoryConsumedBytes": 62668800,
    "source": "//14:59-16:13\r\n#include <cstdio>\r\n#include <vector>\r\n#include <cstring>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef pair<int,int> pii;\r\nconst int N=300005;\r\n\r\ninline char nc()\r\n{\r\n\treturn getchar();\r\n//\tstatic char buf[2000000],*p1=buf,*p2=buf;\r\n//\treturn p1==p2&&(p2=(p1=buf)+fread(buf,1,2000000,stdin),p1==p2)?EOF:*p1++;\r\n}\r\ninline void read(int &x)\r\n{\r\n\tchar ch=nc();int sum=0;\r\n\twhile(!(ch>='0'&&ch<='9'))ch=nc();\r\n\twhile(ch>='0'&&ch<='9')sum=sum*10+ch-48,ch=nc();\r\n\tx=sum;\r\n}\r\ninline void write(ll x)\r\n{\r\n\tif(x<0)\r\n\t\tputchar('-'),x=-x;\r\n\tif(x>9)\r\n\t\twrite(x/10);\r\n\tputchar(x%10+'0');\r\n}\r\n\r\nint t_sz=1;\r\nll t[N<<2];\r\n//ll t_add[N<<2],t_sub[N<<2],t_path[N<<2];\r\n\r\ninline void add(ll *t,int k,ll x)\r\n{\r\n\tk=k+t_sz-1;\r\n\tt[k]+=x;\r\n\tk>>=1;\r\n\t\r\n\twhile(k)\r\n\t{\r\n\t\tt[k]=t[k<<1]+t[k<<1|1];\r\n\t\tk>>=1;\r\n\t}\r\n}\r\n\r\nll query(ll *t,int k,int l,int r,int a,int b)\r\n{\r\n\tif(a>r || b<l)\r\n\t\treturn 0LL;\r\n\tif(a>=l && b<=r)\r\n\t\treturn t[k];\r\n\t\r\n\tint mid=(a+b)>>1;\r\n\treturn query(t,k<<1,l,r,a,mid)+query(t,k<<1|1,l,r,mid+1,b);\r\n}\r\n\r\ninline ll query(ll *t,int l,int r)\r\n{\r\n\tif(l>r)\r\n\t\treturn 0LL;\r\n\treturn query(t,1,l,r,1,t_sz);\r\n}\r\n\r\nint n,q;\r\nint a[N];\r\nvector<pii> v[N];\r\n\r\n//\ufffd\ufffd\ufffd\u02b1\ufffd\ufffdson\ufffd\ufffdtot\ufffd\u01f5\ufffd\ufffd\ufffd\ufffd \r\n//\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffddfs1(1,0),dfs2(1,1) \r\n//\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u07f6\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05b1\ufffd\ufffd\ufffd\ufffdid[top[x]],id[x]\ufffd\ufffd\u0225\ufffd\ufffd\ufffd\ufffd\ufffd\u03fd\ufffd\ufffd\ufffd\r\n//\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u07b8\ufffd\ufffd\u07f6\ufffd\ufffd\ufffd\u04aa\ufffd\u01f5\ufffdpushup\ufffd\ufffd\ufffd\ufffdtag++\ufffd\ufffdpushdown\ufffd\ufffd \r\nint fa[N],wfa[N],dep[N],sz[N],son[N];\r\n\r\nvoid dfs1(int x,int f)\r\n{\r\n    sz[x]=1;\r\n    fa[x]=f;\r\n    dep[x]=dep[f]+1;\r\n    \r\n    for(int i=0;i<v[x].size();i++)\r\n    {\r\n        int y=v[x][i].first;\r\n        if(y==f)\r\n            continue;\r\n        wfa[y]=v[x][i].second;\r\n        \r\n        dfs1(y,x);\r\n        sz[x]+=sz[y];\r\n        if(!son[x] || sz[son[x]]<sz[y])\r\n            son[x]=y;\r\n    }\r\n}\r\n\r\nint tot;\r\nint id[N],rnk[N],top[N];\r\n\r\nvoid dfs2(int x,int t)\r\n{\r\n    top[x]=t;\r\n    id[x]=++tot;\r\n    rnk[tot]=x;\r\n    \r\n    if(son[x])\r\n        dfs2(son[x],t);\r\n    \r\n    for(int i=0;i<v[x].size();i++)\r\n    {\r\n        int y=v[x][i].first;\r\n        if(y==fa[x] || y==son[x])\r\n            continue;\r\n        \r\n        dfs2(y,y);\r\n    }\r\n}\r\n\r\ninline int lca(int x,int y)\r\n{\r\n    while(top[x]!=top[y])\r\n        if(dep[top[x]]>dep[top[y]])\r\n            x=fa[top[x]];\r\n        else\r\n            y=fa[top[y]];\r\n    \r\n    return (dep[x]<dep[y]?x:y);\r\n}\r\n\r\nll up[N],down[N];\r\n\r\nvoid dp_down(int x,int f)\r\n{\r\n\tfor(int i=0;i<v[x].size();i++)\r\n\t{\r\n\t\tint y=v[x][i].first,w=v[x][i].second;\r\n\t\tif(y==f)\r\n\t\t\tcontinue;\r\n\t\t\r\n\t\tdp_down(y,x);\r\n\t\tadd(t,id[y],a[y]-w);\r\n//\t\tadd(t_path,id[y],a[y]-w);\r\n\t\t\r\n\t\tll val=down[y]-2LL*w+a[y];\r\n\t\tif(val>0)\r\n\t\t{\r\n\t\t\tdown[x]+=val;\r\n\t\t\tadd(t,id[y],-val);\r\n//\t\t\tadd(t_sub,id[y],val);\r\n\t\t}\r\n\t}\r\n\t\r\n\tadd(t,id[x],down[x]);\t\r\n//\tadd(t_add,id[x],down[x]);\r\n}\r\n\r\nvoid dp_up(int x,int f)\r\n{\r\n\tfor(int i=0;i<v[x].size();i++)\r\n\t{\r\n\t\tint y=v[x][i].first,w=v[x][i].second;\r\n\t\tif(y==f)\r\n\t\t\tcontinue;\r\n\t\t\r\n\t\tll val=up[x]+down[x]-max(0LL,down[y]-2LL*w+a[y])+a[x]-2LL*w;\r\n\t\tup[y]=max(0LL,val);\r\n\t\tdp_up(y,x);\r\n\t}\r\n}\r\n\r\nint main()\r\n{\r\n\tread(n),read(q);\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tread(a[i]);\r\n\tfor(int i=1;i<n;i++)\r\n\t{\r\n\t\tint x,y,w;\r\n\t\tread(x),read(y),read(w);\r\n\t\tv[x].emplace_back(pii(y,w));\r\n\t\tv[y].emplace_back(pii(x,w));\r\n\t}\r\n\t\r\n\tdfs1(1,0);\r\n\tdfs2(1,1);\r\n\t\r\n\twhile(t_sz<n)\r\n\t\tt_sz<<=1;\r\n\t\r\n\tdp_down(1,0);\r\n\tdp_up(1,0);\r\n\t\r\n\twhile(q--)\r\n\t{\r\n\t\tint x,y;\r\n\t\tread(x),read(y);\r\n\t\t\r\n\t\tll ans=0;\r\n\t\tint cur=x,_lca=lca(x,y);\r\n\t\twhile(top[cur]!=top[_lca])\r\n\t\t{\r\n\t\t\tans+=query(t,id[top[cur]],id[cur]);\r\n//\t\t\tans+=query(t_add,id[top[cur]],id[cur]);\r\n//\t\t\tans-=query(t_sub,id[top[cur]],id[cur]);\r\n//\t\t\tans+=query(t_path,id[top[cur]],id[cur]);\r\n\t\t\tcur=fa[top[cur]];\r\n\t\t}\r\n\t\tans+=query(t,id[_lca]+1,id[cur]);\r\n//\t\tans+=query(t_add,id[_lca],id[cur]);\r\n//\t\tans-=query(t_sub,id[_lca]+1,id[cur]);\r\n//\t\tans+=query(t_path,id[_lca]+1,id[cur]);\r\n\t\t\r\n\t\tcur=y;\r\n\t\twhile(top[cur]!=top[_lca])\r\n\t\t{\r\n\t\t\tans+=query(t,id[top[cur]],id[cur]);\r\n//\t\t\tans+=query(t_add,id[top[cur]],id[cur]);\r\n//\t\t\tans-=query(t_sub,id[top[cur]],id[cur]);\r\n//\t\t\tans+=query(t_path,id[top[cur]],id[cur]);\r\n\t\t\tcur=fa[top[cur]];\r\n\t\t}\r\n\t\tans+=query(t,id[_lca]+1,id[cur]);\r\n//\t\tans+=query(t_add,id[_lca],id[cur]);\r\n//\t\tans-=query(t_sub,id[_lca]+1,id[cur]);\r\n//\t\tans+=query(t_path,id[_lca]+1,id[cur]);\r\n\r\n\t\tans+=down[_lca]+up[_lca]+a[_lca];\t\t\r\n//\t\tans+=up[_lca]+a[_lca];\r\n\t\twrite(ans),putchar('\\n');\r\n\t}\r\n\treturn 0;\r\n}\r\n"
}