{
    "id": 155760029,
    "contestId": 1000,
    "creationTimeSeconds": 1651580406,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1000,
        "index": "G",
        "name": "Two-Paths",
        "type": "PROGRAMMING",
        "rating": 2700,
        "tags": [
            "data structures",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 1000,
        "members": [
            {
                "handle": "JerryMao"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1530110100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 48,
    "timeConsumedMillis": 1434,
    "memoryConsumedBytes": 87859200,
    "source": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define fore(i, l, r) for(int i = int(l); i < int(r); i++)\r\n\r\n#define sz(a) int((a).size())\r\n#define all(a) (a).begin(), (a).end()\r\n\r\n#define x first\r\n#define y second\r\n\r\ntypedef long long li;\r\ntypedef long double ld;\r\ntypedef pair<int, int> pt;\r\n\r\ntemplate<class A, class B> ostream& operator <<(ostream& out, const pair<A, B> &p) {\r\n\treturn out << \"(\" << p.x << \", \" << p.y << \")\";\r\n}\r\n\r\ntemplate<class A> ostream& operator <<(ostream& out, const vector<A> &v) {\r\n\tout << \"[\";\r\n\tfore(i, 0, sz(v)) {\r\n\t\tif(i) out << \", \";\r\n\t\tout << v[i];\r\n\t}\r\n\treturn out << \"]\";\r\n}\r\n\r\nconst int M = 400 * 1000 + 555;\r\nconst int N = 300 * 1000 + 555;\r\nconst int LOGN = 19;\r\n\r\nint n, m, a[N];\r\nvector<pt> g[N];\r\n\r\ninline bool read() {\r\n\tif(!(cin >> n >> m))\r\n\t\treturn false;\r\n\tfore(i, 0, n)\r\n\t\tassert(scanf(\"%d\", &a[i]) == 1);\r\n\tfore(i, 0, n - 1) {\r\n\t\tint u, v, w;\r\n\t\tassert(scanf(\"%d%d%d\", &u, &v, &w) == 3);\r\n\t\tu--, v--;\r\n\t\t\r\n\t\tg[u].emplace_back(v, w);\r\n\t\tg[v].emplace_back(u, w);\r\n\t}\r\n\tfore(i, 0, n)\r\n\t\tsort(all(g[i]));\r\n\treturn true;\r\n}\r\n\r\nint tin[N], tout[N], T = 0;\r\nint p[N][LOGN];\r\n\r\nint h[N];\r\nli d1[N];\r\n\r\nvoid calc1(int v, int pr) {\r\n\ttin[v] = T++;\r\n\tp[v][0] = pr;\r\n\tfore(st, 1, LOGN)\r\n\t\tp[v][st] = p[p[v][st - 1]][st - 1];\r\n\t\r\n\td1[v] = a[v];\r\n\tfore(i, 0, sz(g[v])) {\r\n\t\tint to = g[v][i].x;\r\n\t\tint w = g[v][i].y;\r\n\t\t\r\n\t\tif(to == pr)\r\n\t\t\tcontinue;\r\n\r\n\t\th[to] = h[v] + 1;\r\n\t\tcalc1(to, v);\r\n\t\td1[v] += max(0ll, d1[to] - 2ll * w);\r\n\t}\r\n\ttout[v] = T++;\r\n}\r\n\r\nli dp[N];\r\nvector<li> dto[N];\r\n\r\nvoid calcRRT(int v) {\r\n\tdp[v] = a[v];\r\n\tdto[v].assign(sz(g[v]), 0ll);\r\n\t\r\n\tfore(i, 0, sz(g[v])) {\r\n\t\tint to = g[v][i].x;\r\n\t\tint w = g[v][i].y;\r\n\t\t\r\n\t\tli curVal = max(0ll, d1[to] - 2ll * w);\r\n\t\tdp[v] += curVal;\r\n\t\tdto[v][i] = curVal;\r\n\t}\r\n\t\r\n\tfore(i, 0, sz(g[v])) {\r\n\t\tint to = g[v][i].x;\r\n\t\tif(h[to] < h[v])\r\n\t\t\tcontinue;\r\n\t\t\r\n\t\tli tmp = d1[v];\r\n\t\td1[v] = dp[v] - dto[v][i];\r\n\t\tcalcRRT(to);\r\n\t\td1[v] = tmp;\r\n\t}\r\n}\r\n\r\ninline bool isP(int l, int v) {\r\n\treturn tin[l] <= tin[v] && tout[v] <= tout[l];\r\n}\r\n\r\nint lca(int u, int v) {\r\n\tif(isP(u, v)) return u;\r\n\tif(isP(v, u)) return v;\r\n\t\r\n\tfor(int st = LOGN - 1; st >= 0; st--)\r\n\t\tif(!isP(p[v][st], u))\r\n\t\t\tv = p[v][st];\r\n\treturn p[v][0];\r\n}\r\n\r\n\r\nli getDto(int v, int to) {\r\n\tint pos = int(lower_bound(all(g[v]), pt(to, -1)) - g[v].begin());\r\n\tif(pos >= sz(g[v]) || g[v][pos].x != to)\r\n\t\treturn 0;\r\n\treturn dto[v][pos];\r\n}\r\n\r\nli f[N];\r\n\r\ninline void inc(int pos, li val) {\r\n\tfor(; pos < N; pos |= pos + 1)\r\n\t\tf[pos] += val;\r\n}\r\n\r\ninline li sum(int pos) {\r\n\tli ans = 0;\r\n\tfor(; pos >= 0; pos = (pos & (pos + 1)) - 1)\r\n\t\tans += f[pos];\r\n\treturn ans;\r\n}\r\n\r\ninline li getSum(int l, int r) {\r\n\treturn sum(r) - sum(l);\r\n}\r\n\r\nli ans[M];\r\nvector<pt> qs[N];\r\n\r\nvoid calcAns(int v) {\r\n\tli vAdd = dp[v] - getDto(v, p[v][0]);\r\n\tinc(h[v], vAdd);\r\n\t\r\n\tfor(pt &q : qs[v]) {\r\n\t\tint up = q.x, id = q.y;\r\n\t\tans[id] += getSum(h[up] - 1, h[v]) + getDto(up, p[up][0]);\r\n\t}\r\n\t\r\n\tfore(i, 0, sz(g[v])) {\r\n\t\tint to = g[v][i].x;\r\n\t\tint w = g[v][i].y;\r\n\t\tif(h[to] < h[v])\r\n\t\t\tcontinue;\r\n\t\t\r\n\t\tli curSub = dto[v][i] + w;\r\n\t\tinc(h[v], -curSub);\r\n\t\t\r\n\t\tcalcAns(to);\r\n\t\tinc(h[v], +curSub);\r\n\t}\r\n\tinc(h[v], -vAdd);\r\n}\r\n\r\ninline void solve() {\r\n\tT = 0;\r\n\th[0] = 0;\r\n\tcalc1(0, 0);\r\n\tcalcRRT(0);\r\n\t\r\n\tfore(i, 0, m) {\r\n\t\tint u, v;\r\n\t\tassert(scanf(\"%d%d\", &u, &v) == 2);\r\n\t\tu--, v--;\r\n\t\t\r\n\t\tint l = lca(u, v);\t\t\r\n\t\tans[i] = -dp[l];\r\n\t\t\r\n\t\tqs[u].emplace_back(l, i);\r\n\t\tqs[v].emplace_back(l, i);\r\n\t}\r\n\t\r\n\tcalcAns(0);\r\n\tfore(i, 0, m)\r\n\t\tprintf(\"%lld\\n\", ans[i]);\r\n}\r\n\r\nint main() {\r\n#ifdef _DEBUG\r\n\tfreopen(\"input.txt\", \"r\", stdin);\r\n\tint tt = clock();\r\n#endif\r\n\tcout << fixed << setprecision(15);\r\n\t\r\n\tif(read()) {\r\n\t\tsolve();\r\n/*\t\t\r\n#ifdef _DEBUG\r\n\t\tcerr << \"TIME = \" << clock() - tt << endl;\r\n\t\ttt = clock();\r\n#endif*/\r\n\t}\r\n\treturn 0;\r\n}"
}