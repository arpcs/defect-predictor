{
    "id": 30081873,
    "contestId": 850,
    "creationTimeSeconds": 1504551247,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 850,
        "index": "B",
        "name": "Arpa and a list of numbers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2100,
        "tags": [
            "implementation",
            "number theory"
        ]
    },
    "author": {
        "contestId": 850,
        "members": [
            {
                "handle": "sokokaleb"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504535700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 153,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 32153600,
    "source": "#include <bits/stdc++.h>\n\n#define __INIT_CC__ ios::sync_with_stdio(false); \\\n\tcin.tie(0);\n\n#ifdef __WIN32__\n\tchar getchar_unlocked() {return getchar();}\n#endif\n\n#define FOR(_i,_n,_m) for(int (_i)=(_n),_t=(_m);_i<(_t);++(_i))\n#define FORN(_i,_n,_m) for(int (_i)=(_n),_t=(_m);_i<=(_t);++(_i))\n#define FORD(_i,_n,_m) for(int (_i)=(_n),_t=(_m);_i>=(_t);--(_i))\n#define RESET(_a,_value) memset(_a,_value,sizeof(_a))\n#define pb push_back\n#define ppb pop_back\n#define pf push_front\n#define ppf pop_front\n#define ff first\n#define ss second\n#define mp make_pair\n#define SIZE(_a) (int)_a.size()\n#define VSORT(_a) sort(_a.begin(),_a.end())\n#define SSORT(_a,_val) sort(_a,_a+(_val))\n#define ALL(_a) _a.begin(),_a.end()\n#define mt make_tuple\n#define _get(_tuple,_i) get<_i>(_tuple)\n#define eb emplace_back\n\nusing namespace std;\n\nusing vi = vector<int>;\nusing ii = pair<int,int>;\nusing vii = vector<ii>;\nusing ll = long long;\nusing ull = unsigned long long;\nusing pll = pair<ll,ll>;\nusing vpll = vector<pll>;\nusing vll = vector<ll>;\nusing pdd = pair<double,double>;\nusing vpdd = vector<pdd>;\ntemplate <typename T> using uset = unordered_set<T>;\ntemplate <typename T> using umultiset = unordered_multiset<T>;\ntemplate <typename K, typename V> using umap = unordered_map<K, V>;\ntemplate <typename K, typename V> using umultimap = unordered_multimap<K, V>;\n\nconst int dr[] = { 1, 0,-1, 0, 1, 1,-1,-1};\nconst int dc[] = { 0, 1, 0,-1, 1,-1,-1, 1};\nconst double eps = 1e-9;\nconst int INF = 0x7FFFFFFF;\nconst ll INFLL = 0x7FFFFFFFFFFFFFFFLL;\nconst double pi = acos(-1);\n\ntemplate <typename T> T take(queue<T> &O) {T tmp=O.front();O.pop();return tmp;}\ntemplate <typename T> T take(stack<T> &O) {T tmp=O.top();O.pop();return tmp;}\ntemplate <typename T> T take(priority_queue<T> &O) {T tmp=O.top();O.pop();return tmp;}\ntemplate <typename T>\ninline bool inRange(const T& z, const T& a, const T& b){return a <= z && z <= b;}\n\nvoid OPEN(const string& in = \"input.txt\", const string& out = \"output.txt\")\n{\n\tfreopen(in.c_str(), \"r\", stdin);\n\tfreopen(out.c_str(), \"w\", stdout);\n\treturn ;\n}\n\n//using sokokaleb's template v4.0\n\nll cnt[2000005];\nll kurang[2000005];\nint n, a;\nll x, y;\nll ans = INFLL;\n\nbitset<1000001> isp;\n\nint main(int argc, char** argv) {\n\t__INIT_CC__\n\tcin >> n >> x >> y;\n\tFOR (i, 0, n) {\n\t\tcin >> a;\n\t\t++cnt[a];\n\t}\n\tFORN (i, 1, 2000000) {\n\t\tcnt[i] += cnt[i - 1];\n\t\tkurang[i] = kurang[i - 1] + cnt[i - 1];\n\t}\n\n\tll garugi = x / y + 1;\n\tisp.set();\n\tFORN (i, 2, 1000000) {\n\t\tif (isp.test(i)) {\n\t\t\tll tmpCost = 0LL;\n\t\t\tint c = 0;\n\t\t\twhile (c <= 1000000) {\n\t\t\t\tc += i;\n\t\t\t\tif (c <= 1000000)\n\t\t\t\t\tisp.set(c, 0);\n\n\t\t\t\tll ccnt = 0;\n\t\t\t\tll ckurang = 0LL;\n\n\t\t\t\tif (i > garugi) {\n\t\t\t\t\tccnt = 0;\n\t\t\t\t\tif (c - garugi >= 0) ccnt += cnt[c - garugi];\n\t\t\t\t\tif (c - i >= 0) ccnt -= cnt[c - i];\n\t\t\t\t\ttmpCost += x * ccnt;\n\t\t\t\t\t//if (i == 2 && c <= 100) {\n\t\t\t\t\t//\n\t\t\t\t\t\t//cerr << ccnt << \" di \" << c << endl;\n\t\t\t\t\t//}\n\n\t\t\t\t\tckurang = kurang[c];\n\t\t\t\t\tif (c - garugi + 1 >= 0)\n\t\t\t\t\t\tckurang -= kurang[c - garugi + 1];\n\t\t\t\t\tif (c - garugi >= 0)\n\t\t\t\t\t\tckurang -= cnt[c - garugi] * (garugi - 1);\n\t\t\t\t\ttmpCost += y * ckurang;\n\t\t\t\t\t//if (i == 2 && c <= 100) {\n\t\t\t\t\t\t//cerr << ccnt << \" di \" << c << endl;\n\t\t\t\t\t//}\n\t\t\t\t} else {\n\t\t\t\t\t// i <= garugi\n\t\t\t\t\t// garugi > 0\n\t\t\t\t\tckurang = kurang[c];\n\t\t\t\t\tckurang -= kurang[c - i + 1];\n\t\t\t\t\tckurang -= cnt[c - i] * (i - 1);\n\t\t\t\t\ttmpCost += y * ckurang;\n\t\t\t\t\t//if (i == 2 && c <= 100) {\n\t\t\t\t\t\t//cerr << ckurang << \" dzi \" << c << endl;\n\t\t\t\t\t//}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//if (tmpCost < ans) {\n\t\t\t\t//cerr << tmpCost << \" = \" << i << endl;\n\t\t\t//}\n\t\t\tans = min(ans, tmpCost);\n\t\t}\n\t}\n\n\tans = min(ans, x * n);\n\tcout << ans << \"\\n\";\n}\n"
}