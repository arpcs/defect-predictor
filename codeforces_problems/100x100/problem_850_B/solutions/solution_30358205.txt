{
    "id": 30358205,
    "contestId": 850,
    "creationTimeSeconds": 1505458112,
    "relativeTimeSeconds": 8732,
    "problem": {
        "contestId": 850,
        "index": "B",
        "name": "Arpa and a list of numbers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2100,
        "tags": [
            "implementation",
            "number theory"
        ]
    },
    "author": {
        "contestId": 850,
        "members": [
            {
                "handle": "Faimerth"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1505449380
    },
    "programmingLanguage": "GNU C",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "//Preface Version -- 2017.9.14\r\n#include <stdio.h>\r\n#include <string.h>\r\n#include <ctype.h>\r\n#define LL long long\r\n#define uLL unsigned long long\r\n#define uL unsigned long\r\n#define uC unsigned char\r\n\r\n#define NODES 1000007\r\n#define NNNN 2000007\r\n#define MemoryStackTotal 10000000\r\n#define error 1e-8\r\n\r\nstatic unsigned char BakaMemoryStack[MemoryStackTotal];static unsigned char *MemoryStackTop=BakaMemoryStack;void *Allocates(unsigned long size){MemoryStackTop+=size;return MemoryStackTop-size;}void Releases(unsigned long size){MemoryStackTop-=size;if (MemoryStackTop<BakaMemoryStack) {MemoryStackTop=BakaMemoryStack;}}\r\nvoid swap(uL *a,uL *b){*a=*a^*b;*b=*a^*b;*a=*a^*b;}void swap64(uLL *a,uLL *b){*a=*a^*b;*b=*a^*b;*a=*a^*b;}uL bsf(uL a){__asm__ __volatile__(\"bsfl %0,%0\":\"+r\"(a));return a;}uL bsr(uL a){__asm__ __volatile__(\"bsrl %0,%0\":\"+r\"(a));return a;}uL imin(uL a,uL b){__asm__ __volatile__(\"cmpl %0,%1\\n\"\"cmovll %1,%0\":\"+&r\"(a):\"g\"(b));return a;}uL imax(uL a,uL b){__asm__ __volatile__(\"cmpl %0,%1\\n\"\"cmovgl %1,%0\":\"+&r\"(a):\"g\"(b));return a;}uL min(uL a,uL b){__asm__ __volatile__(\"cmpl %0,%1\\n\"\"cmovbl %1,%0\":\"+&r\"(a):\"g\"(b));return a;}uL max(uL a,uL b){__asm__ __volatile__(\"cmpl %0,%1\\n\"\"cmoval %1,%0\":\"+&r\"(a):\"g\"(b));return a;}\r\nvoid print(long *a,long size){long i;for (i=0;i<size;i++){printf(\"%ld \",a[i]);}printf(\"%ld\\n\",a[i]);}void printll(LL *a,long size){long i;for (i=0;i<size;i++){printf(\"%I64d \",a[i]);}printf(\"%I64d\\n\",a[i]);}\r\nuLL bsf64(uLL a){__asm__ __volatile__(\"bsfq %0,%0\":\"+r\"(a));return a;}uLL bsr64(uLL a){__asm__ __volatile__(\"bsrq %0,%0\":\"+r\"(a));return a;}uLL min63(uLL a,uLL b){__asm__ __volatile__(\"cmpq %0,%1\\n\"\"cmovlq %1,%0\":\"+&r\"(a):\"g\"(b));return a;}uLL max63(uLL a,uLL b){__asm__ __volatile__(\"cmpq %0,%1\\n\"\"cmovgq %1,%0\":\"+&r\"(a):\"g\"(b));return a;}uLL min64(uLL a,uLL b){__asm__ __volatile__(\"cmpq %0,%1\\n\"\"cmovbq %1,%0\":\"+&r\"(a):\"g\"(b));return a;}uLL max64(uLL a,uLL b){__asm__ __volatile__(\"cmpq %0,%1\\n\"\"cmovaq %1,%0\":\"+&r\"(a):\"g\"(b));return a;}\r\nvoid mergesort(long *ds,int (*compare)(long a,long b),long size){long i,j,k,s,b,e;long *ms=(long*)Allocates(sizeof(long)*(size+1));\tfor (k=1;k<=size;k=k<<1)\t{\t\tfor (i=1;i+k<=size;i+=k<<1)\t\t{\t\t\ts=i;b=i+k;e=b+k-1;\t\t\tif (e>size) {e=size;}\t\t\tfor (j=1;(s<i+k)&&(b<=e);j++)\t\t\t{\t\t\t\tif (compare(ds[s],ds[b])<=0)\t\t\t\t{\t\t\t\t\tms[j]=ds[s++];\t\t\t\t}\t\t\t\telse\t\t\t\t{\t\t\t\t\tms[j]=ds[b++];\t\t\t\t}\t\t\t}\t\t\tfor (b=i+k-1;b>=s;b--)\t\t\t{\t\t\t\tds[e--]=ds[b];\t\t\t}\t\t\tfor (b=1;b<j;b++)\t\t\t{\t\t\t\tds[i+b-1]=ms[b];\t\t\t}\t\t}\t}\tReleases(sizeof(long)*(size+1));}\r\n\r\nlong prime[NNNN];\r\nvoid euler(long n)\r\n{\r\n\tlong i,j,a;\r\n\tmemset(prime,0,sizeof(long)*(n+1));\r\n\tfor (i=2,*prime=0;i<=n;i++)\r\n\t{\r\n\t\tif (prime[i]==0)\r\n\t\t{\r\n\t\t\tprime[++(*prime)]=i;\r\n\t\t}\r\n\t\tfor (j=1;j<=*prime;j++)\r\n\t\t{\r\n\t\t\tif (prime[j]*i>n) {break;}\r\n\t\t\tprime[i*prime[j]]=prime[j];\r\n\t\t\tif (prime[j]==prime[i]) {break;}\r\n\t\t}\r\n\t}\r\n}\r\nlong count[NNNN],num[NNNN];\r\nLL sum[NNNN];\r\nint main()\r\n{\r\n\tlong i,j,k,a,b,c,n,x,y,skip,low,up,l;\r\n\tLL ans,t1,t2,t3,preface;\r\n//\tfreopen(\"in.in\",\"r\",stdin);\r\n\tscanf(\"%ld %ld %ld\",&n,&x,&y);\r\n\tup=0;low=0x7FFFFFFF;skip=x/y;\r\n\tpreface=0;\r\n\tfor (i=1;i<=n;i++)\r\n\t{\r\n\t\tscanf(\"%ld\",&num[i]);\r\n\t\tif (num[i]==1) {i--;n--;preface+=(LL)x;continue;}\r\n\t\tif (num[i]>up) {up=num[i];}\r\n\t\tif (num[i]<low) {low=num[i];}\r\n\t}\r\n//\tprintf(\"%ld\\n\",n);\r\n\tif (n>0)\r\n\t{\r\n\t\teuler(up);\r\n\t\tmemset(count,0,sizeof(long)*(up<<1));\r\n\t\tfor (i=1;i<=n;i++)\r\n\t\t{\r\n\t\t\tcount[num[i]]+=1;\r\n\t\t}\r\n//\t\tprint(count,up);\r\n\t\t*num=0;\r\n\t\tfor (i=low;i<=up;i++)\r\n\t\t{\r\n\t\t\tfor (j=1;j<=count[i];j++)\r\n\t\t\t{\r\n\t\t\t\tnum[++(*num)]=i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tmemset(sum,0,sizeof(LL)*(up+1));\r\n\t\tfor (i=low;i<=(up<<1);i++)\r\n\t\t{\r\n\t\t\tsum[i]=sum[i-1]+count[i]*i;\r\n\t\t}\r\n//\t\tprintll(sum,up);\r\n\t\tfor (i=low;i<=(up<<1);i++)\r\n\t\t{\r\n\t\t\tcount[i]=count[i-1]+count[i];\r\n\t\t}\r\n//\t\tprint(count,up);\r\n\t\tans=(uLL)0x7FFFFFFFFFFFFFFF;\r\n//\t\tprintf(\"%ld %ld\\n\",low,up);\r\n\t\tfor (i=1;i<=*prime;i++)\r\n\t\t{\r\n//\t\t\tprintf(\"%ld\\n\",prime[i]);\r\n\t\t\tt1=0;\r\n\t\t\tfor (j=prime[i];;j+=prime[i])\r\n\t\t\t{\r\n\t\t\t\tk=j-skip-1;l=j-prime[i];\r\n\t\t\t\tif (k<l) {k=l;}\r\n\t\t\t\tt1+=(uLL)x*(count[k]-count[l])+(uLL)y*((uLL)j*(count[j-1]-count[k])-(sum[j-1]-sum[k]));\r\n//\t\t\t\tprintf(\"%lld %ld %ld\\n\",t1,j,k);\r\n\t\t\t\tif (j>up) {break;}\r\n\t\t\t}\r\n//\t\t\tprintf(\"*%lld\\n\",t1);\r\n\t\t\tif (t1<ans) {ans=t1;}\r\n\t\t\tif (prime[i]>up) {break;}\r\n\t\t}\r\n\t}\r\n\telse {ans=0;}\r\n\tprintf(\"%lld\\n\",ans+preface);\r\n\treturn 0;\r\n}"
}