{
    "id": 30065826,
    "contestId": 850,
    "creationTimeSeconds": 1504538362,
    "relativeTimeSeconds": 2662,
    "problem": {
        "contestId": 850,
        "index": "B",
        "name": "Arpa and a list of numbers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2100,
        "tags": [
            "implementation",
            "number theory"
        ]
    },
    "author": {
        "contestId": 850,
        "members": [
            {
                "handle": "natsugiri"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 12,
        "startTimeSeconds": 1504535700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 153,
    "timeConsumedMillis": 967,
    "memoryConsumedBytes": 50073600,
    "source": "#include<stdio.h>\n#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<string>\n#include<string.h>\nusing namespace std;\n\ntypedef long long LL;\ntypedef vector<int> VI;\n\n#define REP(i,n) for(int i=0, i##_len=(n); i<i##_len; ++i)\n#define EACH(i,c) for(__typeof((c).begin()) i=(c).begin(),i##_end=(c).end();i!=i##_end;++i)\n#define eprintf(...) fprintf(stderr, __VA_ARGS__)\n\ntemplate<class T> inline void amin(T &x, const T &y) { if (y<x) x=y; }\ntemplate<class T> inline void amax(T &x, const T &y) { if (x<y) x=y; }\ntemplate<class Iter> void rprintf(const char *fmt, Iter begin, Iter end) {\n    for (bool sp=0; begin!=end; ++begin) { if (sp) putchar(' '); else sp = true; printf(fmt, *begin); }\n    putchar('\\n');\n}\n\nint N;\nLL X, Y;\nint A[500111];\n\nconst int MAX = 2000111;\nLL C[MAX];\nLL sumC[MAX+11];\nLL sumD[MAX+11];\n\nvoid MAIN() {\n    scanf(\"%d%lld%lld\", &N, &X, &Y);\n    REP (i, N) {\n\tint x;\n\tscanf(\"%d\", &x);\n\tC[x]++;\n    }\n\n    REP (i, MAX) {\n\tsumC[i+1] = sumC[i] + C[i];\n\tsumD[i+1] = sumD[i] - C[i] * i;\n    }\n\n    LL ans = min(N * X, N * Y);\n\n    for (LL z=2; z<MAX; z++) {\n\tLL lo = 0, hi = z;\n\twhile (hi - lo > 1) {\n\t    LL mid = (lo + hi) / 2;\n\t    if ((z - mid) * Y < X) hi = mid;\n\t    else lo = mid;\n\t}\n\n\tLL p = hi;\n\n\tLL tmp = 0;\n\tfor (int i=0; i+z<MAX; i+=z) {\n\t    tmp += (sumC[i+p] - sumC[i+1]) * X;\n\t    LL mv = (sumD[i+z] - sumD[i+p]) + (sumC[i+z] - sumC[i+p]) * (i+z);\n\t    if (mv > ans / Y + 1 + Y) {\n\t\ttmp = ans;\n\t\tbreak;\n\t    }\n\t    tmp += mv * Y;\n\t    if (tmp >= ans) break;\n\t}\n\n\tamin(ans, tmp);\n    }\n\n    printf(\"%lld\\n\", ans);\n}\n\nint main() {\n    int TC = 1;\n//    scanf(\"%d\", &TC);\n    REP (tc, TC) MAIN();\n    return 0;\n}\n\n"
}