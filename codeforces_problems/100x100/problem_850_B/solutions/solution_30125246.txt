{
    "id": 30125246,
    "contestId": 850,
    "creationTimeSeconds": 1504683170,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 850,
        "index": "B",
        "name": "Arpa and a list of numbers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2100,
        "tags": [
            "implementation",
            "number theory"
        ]
    },
    "author": {
        "contestId": 850,
        "members": [
            {
                "handle": "Jian_Ron"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504535700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 561,
    "memoryConsumedBytes": 18022400,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <vector>\r\n#include <cmath>\r\n#include <queue>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\nconst int maxn = 500000 + 10;\r\nconst int maxm = 1000000 + 10;\r\nconst ll INF = 2e18;\r\nint a[maxn];\r\nll cnt[maxm];\r\nll sum[maxm];\r\n\r\nint main(){\r\n    int n,x,y,up = 0;\r\n    ll ans = INF;\r\n    scanf(\"%d%d%d\",&n,&x,&y);\r\n    memset(cnt,0,sizeof cnt);\r\n    memset(sum,0,sizeof sum);\r\n    for(int i = 0;i < n;i++) scanf(\"%d\",&a[i]);\r\n    for(int i = 0;i < n;i++) up = max(up,a[i]);\r\n    for(int i = 0;i < n;i++) cnt[a[i]]++;\r\n    for(int i = 0;i < maxm;i++) sum[i] = 1ll * i * cnt[i];\r\n    for(int i = 1;i < maxm;i++) cnt[i] += cnt[i - 1],sum[i] += sum[i - 1];\r\n    for(int i = 2;i <= up;i++){\r\n        ll temp = 0;\r\n        int p = i,f = i - min(x/y,i - 1) - 1;\r\n\r\n        while(p - i<= up){\r\n            temp += (cnt[f] - cnt[p - i]) * x + ((cnt[p] - cnt[f]) * p - (sum[p] - sum[f])) * y;\r\n            p += i;\r\n            f += i;\r\n        }\r\n        ans = min(ans,temp);\r\n    }\r\n    printf(\"%I64d\\n\",ans);\r\n    return 0;\r\n}\r\n"
}