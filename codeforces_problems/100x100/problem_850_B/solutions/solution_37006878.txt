{
    "id": 37006878,
    "contestId": 850,
    "creationTimeSeconds": 1522958364,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 850,
        "index": "B",
        "name": "Arpa and a list of numbers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2100,
        "tags": [
            "implementation",
            "number theory"
        ]
    },
    "author": {
        "contestId": 850,
        "members": [
            {
                "handle": "RobeZH"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504535700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 153,
    "timeConsumedMillis": 951,
    "memoryConsumedBytes": 18432000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\nconst ll INF = (ll)1e18;\r\nconst int MAXN = (int)5e5 + 500;\r\nconst int MAXA = (int)1e6 + 500;\r\n\r\nint n,x,y;\r\nint num[MAXN];\r\nint cnt[MAXA];\r\nbool prime[MAXA];\r\nll psum[MAXA];\r\n\r\nll get(int k){\r\n    ll tcnt = 0, res = 0;\r\n    for(int i = k; i <= 1000000 + k; i += k){\r\n        int l = i - k + max(1, k - x/y), r = i;\r\n        l = min(l, (int)1e6 + 1), r = min(r, (int)1e6);\r\n        tcnt += (cnt[r] - cnt[l-1]);\r\n        res += 1LL * i * (cnt[r] - cnt[l-1]) - (psum[r] - psum[l-1]);\r\n    }\r\n    return res * y + (n - tcnt) * x;\r\n}\r\n\r\nint main(){\r\n    cin >> n >> x >> y;\r\n    fill(cnt, cnt + MAXA, 0);\r\n    fill(psum, psum + MAXA, 0);\r\n    fill(prime, prime + MAXA, 1);\r\n    for(int i = 0; i < n; i++){\r\n        cin >> num[i];\r\n        cnt[num[i]] ++;\r\n        psum[num[i]] += num[i];\r\n    }\r\n    for(int i = 1; i <= (int)1e6; i++) cnt[i] += cnt[i-1], psum[i] += psum[i-1];\r\n    ll minCost = INF;\r\n    for(int gcd = 2; gcd <= 1000000; gcd++){\r\n        if(!prime[gcd]) continue;\r\n        for(int k = gcd * 2; k <= 1000000; k += gcd){prime[k] = 0;}\r\n        minCost = min(minCost, get(gcd));\r\n    }\r\n    cout << minCost;\r\n}"
}