{
    "id": 30060181,
    "contestId": 850,
    "creationTimeSeconds": 1504536857,
    "relativeTimeSeconds": 1157,
    "problem": {
        "contestId": 850,
        "index": "B",
        "name": "Arpa and a list of numbers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2100,
        "tags": [
            "implementation",
            "number theory"
        ]
    },
    "author": {
        "contestId": 850,
        "members": [
            {
                "handle": "Egor.Lifar"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 18,
        "startTimeSeconds": 1504535700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 113,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 22118400,
    "source": "/*\n\u0421\u0422\u0420\u041e\u0418\u041c \u0421\u0422\u0415\u041d\u0423 \u0420\u0410\u0411\u041e\u0422\u042f\u0413\u0418!\n\u2588\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2588\n\u2588\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2588\n\u2588\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2588\n\u2588\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2588\n\u2588\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2588\n\u2588\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2588\n\u2588\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2588\n\u2588\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2588\n\u2588\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2588\n\u2588\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2588\n*/\n#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cstdio>\n#include <numeric>\n#include <cstring>\n#include <ctime>\n#include <cstdlib>\n#include <set>\n#include <map>\n#include <unordered_map>\n#include <unordered_set>\n#include <list>\n#include <cmath>\n#include <bitset>\n#include <cassert>\n#include <queue>\n#include <stack>\n#include <deque>\n    \n     \n     \nusing namespace std;\ntemplate<typename T1, typename T2>inline void chkmin(T1 &x, T2 y) { if (x > y) x = y; }\ntemplate<typename T1, typename T2>inline void chkmax(T1 &x, T2 y) { if (x < y) x = y; }\n/** Interface */\n     \ninline int readChar();\ntemplate <class T = int> inline T readInt(); \ntemplate <class T> inline void writeInt( T x, char end = 0 );\ninline void writeChar( int x ); \ninline void writeWord( const char *s );\n     \n/** Read */\n     \nstatic const int buf_size = 4096;\n     \ninline int getChar() {\n    static char buf[buf_size];\n    static int len = 0, pos = 0;\n    if (pos == len) {\n        pos = 0, len = fread(buf, 1, buf_size, stdin);\n    }\n    if (pos == len) {\n        return -1;\n    }\n    return buf[pos++];\n}\n     \ninline int readChar() {\n    int c = getChar();\n    while (c <= 32) {\n        c = getChar();\n    }\n    return c;\n}\n     \ntemplate <class T>\ninline T readInt() {\n    int s = 1, c = readChar();\n    T x = 0;\n    if (c == '-')\n        s = -1, c = getChar();\n    while ('0' <= c && c <= '9')\n        x = x * 10 + c - '0', c = getChar();\n    return s == 1 ? x : -x;\n}\n     \n/** Write */\n     \nstatic int write_pos = 0;\nstatic char write_buf[buf_size];\n     \ninline void writeChar( int x ) {\n    if (write_pos == buf_size)\n        fwrite(write_buf, 1, buf_size, stdout), write_pos = 0;\n    write_buf[write_pos++] = x;\n}\n     \ntemplate <class T> \ninline void writeInt( T x, char end ) {\n    if (x < 0)\n        writeChar('-'), x = -x;\n     \n    char s[24];\n    int n = 0;\n    while (x || !n)\n        s[n++] = '0' + x % 10, x /= 10;\n    while (n--)\n        writeChar(s[n]);\n    if (end)\n        writeChar(end);\n}\n     \ninline void writeWord( const char *s ) {     while (*s)\nwriteChar(*s++); }\n     \nstruct Flusher {\n    ~Flusher() {\n        if (write_pos)\n            fwrite(write_buf, 1, write_pos, stdout), write_pos = 0;\n    }\n} flusher;   \n#define sz(c) (int)(c).size()\n#define all(c) (c).begin(), (c).end()\n#define rall(c) (c).rbegin(), (c).rend()\n#define left left228\n#define right right228\n#define next next228\n#define rank rank228\n#define prev prev228\n#define get get228\n#define y1 y1228    \nconst int MAXN = 700001;\n\n\nint n, x, y;\nint a[MAXN];\nbool np[2 * MAXN];\nint cnt[2 * MAXN];\nlong long sum[2 * MAXN];\n\nint getcnt(int l, int r) {\n    if (l > r) {\n        return 0;\n    }\n    return cnt[r] - (l ? cnt[l - 1]: 0);\n}\n\n\nlong long getsum(int l, int r) {\n    if (l > r) {\n        return 0LL;\n    }\n    return sum[r] - (l ? sum[l - 1]: 0);\n}\n\n\nint main() {\n    n = readInt(), x = readInt(), y = readInt();\n    for (int i = 0; i < n; i++) {\n        a[i] = readInt();\n    }\n    vector<int> primes;\n    for (int i = 2; i <= 1200000; i++) {\n        if (!np[i]) {\n            primes.push_back(i);\n            if (1LL * i * i > 1200000) {\n                continue;\n            }\n            for (int j = i * i; j <= 1200000; j += i) {\n                np[j] = true;\n            }\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        cnt[a[i]]++;\n        sum[a[i]] += a[i];\n    }\n    for (int i = 1; i <= 1200000; i++) {\n        cnt[i] += cnt[i - 1];\n        sum[i] += sum[i - 1];\n    }\n    long long ans = 1LL * n * x;\n    for (auto xx: primes) {\n        int last = 0;\n        long long res = 0;\n        for (int i = xx; i <= 1200000; i += xx) {\n            int dist = min(xx - 1, x / y);\n            res += 1LL * x * getcnt(last + 1, i - dist - 1);\n            res += (1LL * getcnt(i - dist, i) * i - getsum(i - dist, i)) * y;\n            last = i;\n        }\n        chkmin(ans, res);\n    }\n    cout << ans << endl;\n    return 0;\n}\n \n"
}