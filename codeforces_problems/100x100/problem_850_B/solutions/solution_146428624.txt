{
    "id": 146428624,
    "contestId": 850,
    "creationTimeSeconds": 1644856851,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 850,
        "index": "B",
        "name": "Arpa and a list of numbers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2100,
        "tags": [
            "implementation",
            "number theory"
        ]
    },
    "author": {
        "contestId": 850,
        "members": [
            {
                "handle": "Anadii"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504535700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 63,
    "timeConsumedMillis": 296,
    "memoryConsumedBytes": 25702400,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <ext/pb_ds/detail/standard_policies.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n// #define endl \"\\n\" //interactive\r\n#define int long long\r\n#define ll long long\r\n#define ld long double\r\n#define pii pair<ll, ll>\r\ntypedef vector<int> vi;\r\ntypedef vector<vector<int>> vvi;\r\ntypedef vector<pair<int, int>> vpi;\r\n#define all(value) value.begin(), value.end()\r\n\r\ntemplate <class T>\r\nusing pq = priority_queue<T>;\r\ntemplate <class T>\r\nusing pqg = priority_queue<T, vector<T>, greater<T>>;\r\n\r\ntemplate <class T>\r\nbool ckmin(T &a, const T &b)\r\n{\r\n    return b < a ? a = b, 1 : 0;\r\n}\r\ntemplate <class T>\r\nbool ckmax(T &a, const T &b)\r\n{\r\n    return a < b ? a = b, 1 : 0;\r\n}\r\nmt19937 rng((unsigned int)chrono::steady_clock::now().time_since_epoch().count());\r\n#define deb(value) cout << #value << \" is =\" << value << endl;\r\n#define derun deb(\"running\");\r\ntypedef tree<pair<ll, ll>, null_type, less<pair<ll, ll>>, rb_tree_tag, tree_order_statistics_node_update> omultiset;\r\ntypedef tree<long long, null_type, less<long long>, rb_tree_tag, tree_order_statistics_node_update> oset;\r\ntypedef tree<long long, null_type, greater<long long>, rb_tree_tag, tree_order_statistics_node_update> oset1;\r\ntypedef tree<pair<ll, ll>, null_type, greater<pair<ll, ll>>, rb_tree_tag, tree_order_statistics_node_update> omultiset1;\r\n/*  member functions :\r\n                1. order_of_key(k) : number of elements strictly lesser than k\r\n                2. find_by_order(k) : k-th element in the set (counting from zero)  */\r\n#define fast                          \\\r\n        ios_base::sync_with_stdio(false); \\\r\n        cin.tie(NULL);                    \\\r\n        cout.tie(NULL);\r\n\r\nint dx[4] = {1, 0, 0, -1}, dy[4] = {0, -1, 1, 0};\r\nconst int mod = 1e9 + 7, mod2 = 998244353, inf = 1e18;\r\nlong long binpow(int a, int b, int m = mod)\r\n{\r\n    a %= m;\r\n    int res = 1;\r\n    while (b > 0)\r\n    {\r\n        if (b & 1)\r\n            res = (res * a) % m;\r\n        a = (a * a) % m;\r\n        b /= 2;\r\n    }\r\n    return res;\r\n}\r\nint modinv(int n, int m = mod)\r\n{\r\n    return binpow(n, m - 2, m);\r\n}\r\n\r\n/*...........................................*/\r\n\r\nvoid solve()\r\n{\r\n    int n, x, y, N = 1e6 + 5;\r\n    cin >> n >> x >> y;\r\n    vi pre(N, 0), sum(N, 0);\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        int a;\r\n        cin >> a;\r\n        pre[a]++;\r\n    }\r\n    for (int i = 1; i < N; i++)\r\n        sum[i] = sum[i - 1] + pre[i] * i, pre[i] += pre[i - 1];\r\n    int ans = inf;\r\n    vi prime;\r\n    vi p(N, 0);\r\n    for (int i = 2; i < N; i++)\r\n    {\r\n        if (p[i] == 0)\r\n        {\r\n            prime.push_back(i);\r\n            for (int j = i; j < N; j += i)\r\n                p[j] = 1;\r\n        }\r\n    }\r\n    for (int g : prime)\r\n    {\r\n        int cur = 0, cnt = 0, move = min(x / y+1, g);\r\n        for (int A = g; A < N; A += g)\r\n        {\r\n            int num = pre[A] - pre[A - move];\r\n            int add = sum[A] - sum[A - move];\r\n            cnt += num;\r\n            cur += (A * num- add) * y;\r\n        }\r\n\r\n        cur += (n - cnt) * x;\r\n        // if(g==17)\r\n        // {\r\n        //     deb(cnt)\r\n        ckmin(ans, cur);\r\n        \r\n    }\r\n    cout << ans << endl;\r\n}\r\n\r\nsigned main()\r\n{\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n    fast;\r\n    int t = 1;\r\n    // cin >> t;\r\n    while (t--)\r\n        solve();\r\n}"
}