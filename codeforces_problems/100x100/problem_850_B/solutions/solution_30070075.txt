{
    "id": 30070075,
    "contestId": 850,
    "creationTimeSeconds": 1504539874,
    "relativeTimeSeconds": 4174,
    "problem": {
        "contestId": 850,
        "index": "B",
        "name": "Arpa and a list of numbers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2100,
        "tags": [
            "implementation",
            "number theory"
        ]
    },
    "author": {
        "contestId": 850,
        "members": [
            {
                "handle": "Fekete"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 15,
        "startTimeSeconds": 1504535700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "PRETESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int MAXN = 100 + 10;\r\ntypedef long long ll;\r\nint n;\r\nll prefCnt[MAXN], prefSum[MAXN];\r\n\r\n\r\nint main() {\r\n    #ifdef Fekete\r\n        freopen(\"input.txt\", \"r\", stdin);\r\n        freopen(\"output.txt\", \"w\", stdout);\r\n    #else\r\n\r\n    #endif // Fekete\r\n\r\n//    ios::sync_with_stdio(false);\r\n//    cin.tie(nullptr);\r\n\r\n    ll x, y;\r\n    scanf(\"%d%lld%lld\", &n, &x, &y);\r\n    for(int i = 0; i < n; i++) {\r\n        int a;\r\n        scanf(\"%d\", &a);\r\n        prefCnt[a]++;\r\n        prefSum[a] += a;\r\n    }\r\n    for(int i = 1; i < MAXN; i++) {\r\n        prefSum[i] += prefSum[i - 1];\r\n        prefCnt[i] += prefCnt[i - 1];\r\n    }\r\n\r\n    ll ans = 1e18;\r\n    for(int i = 2; i < MAXN; i++) {\r\n//        cerr << i << \" : \" << endl;\r\n        ll cur = 0;\r\n        for(int j = i; j < MAXN; j += i) {\r\n            int l = j - i + 1, r = j;\r\n//            cerr << j << \" : \" << cur << endl;\r\n            ll pos = max(1ll * l, r - x / y);\r\n//            cerr << pos << endl;\r\n            cur += (prefCnt[pos - 1] - prefCnt[l - 1]) * 1ll * x;\r\n//            cerr << \"curr \" << cur << endl;\r\n            cur += (r * ll(prefCnt[r] - prefCnt[pos - 1]) - (prefSum[r] - prefSum[pos - 1]) )* 1ll * y;\r\n//            cerr << \"curr2 \" << cur << endl;\r\n        }\r\n//        cerr << i << \" \" << cur << endl;\r\n        ans = min(ans, cur);\r\n    }\r\n    cout << ans;\r\n}\r\n"
}