{
    "id": 82224845,
    "contestId": 850,
    "creationTimeSeconds": 1591020524,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 850,
        "index": "B",
        "name": "Arpa and a list of numbers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2100,
        "tags": [
            "implementation",
            "number theory"
        ]
    },
    "author": {
        "contestId": 850,
        "members": [
            {
                "handle": "giovanadanieles"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504535700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 20,
    "timeConsumedMillis": 655,
    "memoryConsumedBytes": 2969600,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nint v[500007];\r\n\r\nint n, x, y;\r\nint maxp = -1;\r\n\r\nvoid sieve(int n){\r\n    bool prime[n + 1];\r\n    memset(prime, true, sizeof(prime));\r\n\r\n    for(int p = 2; p * p <= n; p++){\r\n        if(prime[p] == true){\r\n            for(int i = p * p; i <= n; i += p){\r\n                prime[i] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    for(int p = 2; p <= n; p++){\r\n        if(prime[p] && p > maxp) maxp = p;\r\n    }\r\n\r\n    prime[0] = false;\r\n    prime[1] = false;\r\n}\r\n\r\nint main(int argc, char* const argv[]){\r\n    cin >> n >> x >> y;\r\n\r\n    cin >> v[0];\r\n    int maximo = v[0];\r\n    for(int i = 1; i < n; i++){\r\n        cin >> v[i];\r\n        maximo = max(maximo, v[i]);\r\n    }\r\n\r\n    sieve(maximo);\r\n\r\n    long long ans = 0LL;\r\n    int nroRem = 0, flag = 0;\r\n\r\n    if(maxp != -1){\r\n        for(int i = 0; i < n; i++){\r\n            if(v[i] % maxp != 0){\r\n                int aux = (maxp - v[i] % maxp) % maxp;\r\n\r\n                if(1LL * x < 1LL * y * aux) nroRem++;\r\n                if(nroRem >= (n - 1)) flag = 1;\r\n\r\n                flag != 1 ? ans += min(1LL * x, 1LL * y * aux) : ans += (1LL * y * aux);\r\n            }\r\n        }\r\n    }\r\n\r\n    long long count = 0LL;\r\n    for(int i = 0; i < n; i++){\r\n        if(v[i] % 2 != 0) count++;\r\n    }\r\n\r\n    long long aux = count;\r\n    count *= y;             // transformo impares em pares\r\n                            // ou removo impares\r\n\r\n    if(maxp != -1){\r\n        if(ans < count){\r\n            if(ans < (aux * x) || aux >= (n - 1)){\r\n                cout << ans << endl;\r\n\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    if(y <= x) cout << count << endl;\r\n    else if(aux >= (n - 1)) cout << (n - 2) * x + (aux - (n - 2)) * y << endl;\r\n    else cout << aux * x << endl;;\r\n\r\n    return 0;\r\n}\r\n"
}