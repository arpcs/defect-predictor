{
    "id": 61592061,
    "contestId": 850,
    "creationTimeSeconds": 1569914635,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 850,
        "index": "B",
        "name": "Arpa and a list of numbers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2100,
        "tags": [
            "implementation",
            "number theory"
        ]
    },
    "author": {
        "contestId": 850,
        "members": [
            {
                "handle": "luogu_bot1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504535700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 153,
    "timeConsumedMillis": 686,
    "memoryConsumedBytes": 36044800,
    "source": "#include <bits/stdc++.h>\r\n#define INF 0x7fffffffffffffff\r\n#define int long long\r\n#define MAXN 2000005\r\n#define MAXM 500010\r\nusing namespace std;\r\ninline int read()\r\n{\r\n\tint x=0;\r\n\tint f=1;\r\n\tchar ch=getchar();\r\n\twhile(ch<'0'||ch>'9')\r\n\t{\r\n\t\tif(ch=='-')\r\n\t\t{\r\n\t\t\tf=-1;\r\n\t\t}\r\n\t\tch=getchar();\r\n\t}\r\n\twhile(ch>='0'&&ch<='9')\r\n\t{\r\n\t\tx=(x<<3)+(x<<1)+(ch^48);\r\n\t\tch=getchar();\r\n\t}\r\n\treturn f*x;\r\n}\r\nint n;\r\nint N;\r\nint x,y;\r\nint nowans;\r\nint ans=INF;\r\nint a[MAXM];\r\nint sum[MAXN];\r\nint cnt[MAXN];\r\nsigned main()\r\n{\r\n    n=read();\r\n    x=read();\r\n    y=read();\r\n    for(int i=1;i<=n;i++)\r\n\t{\r\n        a[i]=read();\r\n        cnt[a[i]]++;\r\n        sum[a[i]]+=a[i];\r\n    }\r\n    N=*max_element(a+1,a+n+1);\r\n    if(N==1)\r\n\t{\r\n        printf (\"%lld\\n\",n*min(x,y));\r\n        return 0;\r\n    }\r\n    for(int i=2;i<=N*2;i++)\r\n\t{\r\n        cnt[i]+=cnt[i-1];\r\n        sum[i]+=sum[i-1];\r\n    }\r\n    for(int i=2;i<=N;i++)\r\n\t{\r\n        nowans=0;\r\n        for(int j=i;j<=N+i;j+=i)\r\n\t\t{\r\n            int R=j;\r\n            int L=R-i+1;\r\n            int upd=R-(int)(ceil((double)x/(double)y)+0.5);\r\n            if(upd>=L)\r\n\t\t\t{\r\n                nowans+=x*(cnt[upd]-cnt[L-1]);\r\n            }\r\n            else\r\n\t\t\t{\r\n                upd=L-1;\r\n            }\r\n            nowans+=y*((cnt[R]-cnt[upd])*R-(sum[R]-sum[upd]));\r\n        }\r\n        ans=min(ans,nowans);\r\n    }\r\n    printf (\"%lld\\n\",ans);\r\n    return 0;\r\n}"
}