{
    "id": 189721142,
    "contestId": 850,
    "creationTimeSeconds": 1674120665,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 850,
        "index": "B",
        "name": "Arpa and a list of numbers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2100,
        "tags": [
            "implementation",
            "number theory"
        ]
    },
    "author": {
        "contestId": 850,
        "members": [
            {
                "handle": "_RedWine_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504535700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 153,
    "timeConsumedMillis": 858,
    "memoryConsumedBytes": 36044800,
    "source": "#define _CRT_SECURE_NO_WARNINGS\r\n#include <bits/stdc++.h>\r\n//#include \"temp.cpp\"\r\n#include <cstdio>\r\nusing namespace std;\r\n \r\n#ifndef ONLINE_JUDGE\r\n#define dbg(x) cerr << #x <<\" \"; print(x); cerr << endl;\r\n#else\r\n#define dbg(x)\r\n#endif\r\n \r\n#define sz(x) (int)x.size()\r\n#define len(x) (int)x.length()\r\n#define all(x) (x).begin(), (x).end()\r\n#define rall(x) (x).rbegin(), (x).rend()\r\n#define clr(x) (x).clear()\r\n#define uniq(x) x.resize(unique(all(x)) - x.begin());\r\n#define blt __builtin_popcount\r\n \r\n#define pb push_back\r\n#define popf pop_front\r\n#define popb pop_back\r\n#define ld long double\r\n \r\nvoid print(long long t) {cerr << t;}\r\nvoid print(int t) {cerr << t;}\r\nvoid print(string t) {cerr << t;}\r\nvoid print(char t) {cerr << t;}\r\nvoid print(double t) {cerr << t;}\r\nvoid print(long double t) {cerr << t;}\r\nvoid print(unsigned long long t) {cerr << t;}\r\n \r\ntemplate <class T, class V> void print(pair <T, V> p);\r\ntemplate <class T> void print(vector <T> v);\r\ntemplate <class T> void print(set <T> v);\r\ntemplate <class T, class V> void print(map <T, V> v);\r\ntemplate <class T> void print(multiset <T> v);\r\ntemplate <class T, class V> void print(T v[],V n) {cerr << \"[\"; for(int i = 0; i < n; i++) {print(v[i]); cerr << \" \"; } cerr << \"]\";}\r\ntemplate <class T, class V> void print(pair <T, V> p) {cerr << \"{\"; print(p.first); cerr << \",\"; print(p.second); cerr << \"}\";}\r\ntemplate <class T> void print(vector <T> v) {cerr << \"[ \"; for (T i : v) {print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void print(set <T> v) {cerr << \"[ \"; for (T i : v) {print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void print(deque <T> v) {cerr << \"[ \"; for (T i : v) {print(i); cerr << \" \";} cerr << \"]\";}\r\n \r\n#include <ext/pb_ds/assoc_container.hpp>\r\nusing namespace __gnu_pbds;\r\n#define nl '\\n'\r\n \r\n// for random generations\r\nmt19937 myrand(chrono::steady_clock::now().time_since_epoch().count());\r\n// mt19937 myrand(373);\r\n \r\n// for grid problems\r\nint dx[8] = {-1,0,1,0,1,-1,1,-1};\r\nint dy[8] = {0,1,0,-1,1,1,-1,-1};\r\n \r\n// lowest / (1 << 17) >= 1e5 / (1 << 18) >= 2e5 / (1 << 21) >= 1e6\r\nvoid fastIO() {\r\n  ios_base::sync_with_stdio(false);\r\n  cin.tie(nullptr); cout.tie(nullptr);\r\n}\r\n// file in/out\r\nvoid setIO(string str = \"\") {\r\n  fastIO();\r\n \r\n  if(str == \"input\") {\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n  } else if(str != \"\") {\r\n    freopen((str + \".in\").c_str(), \"r\", stdin);\r\n    freopen((str + \".out\").c_str(), \"w\", stdout);\r\n  }\r\n}\r\n// Indexed Set  \r\ntemplate <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\nconst long long inf = 1e18;\r\nconst int N = 5e5 + 10, M = 4 * N;\r\nlong long n, x, y;\r\nlong long a[N], p[M], summary[M];\r\n\r\nvoid solve_() {\r\n  cin >> n >> x >> y;\r\n\r\n  for(int i = 1; i <= n; i++) {\r\n    cin >> a[i];\r\n    p[a[i]] += 1;\r\n    summary[a[i]] += a[i];\r\n  }\r\n\r\n  for(int i = 1; i < M; i++) {\r\n    p[i] += p[i - 1];\r\n    summary[i] += summary[i - 1];\r\n  }\r\n\r\n  long long answ = inf;\r\n  long long div = x / y;\r\n\r\n  for(int g = 2; g < M; g++) {\r\n    long long s = 0;\r\n    for(int i = g; i < M; i += g) {\r\n      if(x <= y) {\r\n        s += x * (p[i - 1] - p[i - g]);\r\n      } else {\r\n        long long min_bound = i - div - 1;\r\n        min_bound = max(min_bound, (long long)(i - g));\r\n\r\n        long long sm = summary[i - 1] - summary[min_bound];\r\n        long long cnt = p[i - 1] - p[min_bound];\r\n        cnt *= i;\r\n        cnt -= sm;\r\n\r\n        s += y * cnt;\r\n\r\n        if(min_bound > (i - g)) {\r\n          s += x * (p[min_bound] - p[i - g]);\r\n        }\r\n      }\r\n    }\r\n    answ = min(answ, s);\r\n  }\r\n\r\n  cout << answ << '\\n';\r\n}\r\n \r\nint main() {\r\n  setIO();\r\n \r\n  auto solve = [&](int test_case)-> void {\r\n    while(test_case--) {\r\n      solve_();\r\n    }\r\n  };\r\n \r\n  int test_cases = 1;\r\n  solve(test_cases);\r\n \r\n  return 0;\r\n}\r\n"
}