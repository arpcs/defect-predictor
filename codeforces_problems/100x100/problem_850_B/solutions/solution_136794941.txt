{
    "id": 136794941,
    "contestId": 850,
    "creationTimeSeconds": 1637818176,
    "relativeTimeSeconds": 4476,
    "problem": {
        "contestId": 850,
        "index": "B",
        "name": "Arpa and a list of numbers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2100,
        "tags": [
            "implementation",
            "number theory"
        ]
    },
    "author": {
        "contestId": 850,
        "members": [
            {
                "handle": "eggag32"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1637813700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 153,
    "timeConsumedMillis": 421,
    "memoryConsumedBytes": 26112000,
    "source": "#pragma GCC optimize (\"O3\")\n#pragma GCC target (\"sse4\")\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef pair<int, int> pi;\n#define debug(x) cerr << #x << \": \" << x << '\\n'\n#define debug2(x, y) debug(x), debug(y)\n#define repn(i, a, b) for(int i = (int)(a); i < (int)(b); i++)\n#define rep(i, a) for(int i = 0; i < (int)(a); i++)\n#define all(v) v.begin(), v.end()\n#define mp make_pair\n#define pb push_back\n#define lb lower_bound\n#define ub upper_bound\n#define fi first\n#define se second\n#define sq(x) ((x) * (x))\nconst int mxN = 1e6 + 5;\n\ntemplate<class T> T gcd(T a, T b){ return ((b == 0) ? a : gcd(b, a % b)); }\n\npair<ll, ll> cnt[mxN];\nint p[mxN], vis[mxN];\n\nvoid sieve(){\n\trepn(i, 2, mxN) if(!p[i]){\n\t\tp[i] = i;\n\t\tfor(int j = i + i; j < mxN; j += i) if(!p[j]) p[j] = i;\n\t}\n}\n\nint main(){\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0);\n\t//freopen(\"input.in\", \"r\", stdin);\n\t//freopen(\"output.out\", \"w\", stdout);\n\tint n;\n\tll x, y;\n\tcin >> n >> y >> x;\n\tvi a(n);\n\tint g = 0;\n\trep(i, n) cin >> a[i], g = gcd(a[i], g);\n\tif(g != 1){\n\t\tcout << \"0\\n\";\n\t\treturn 0;\n\t}\n\tsieve();\n\tll uwu = 0;\n\trep(i, n) if(a[i] & 1) uwu += min(x, y);\n\trep(i, mxN) cnt[i] = mp(0, i);\n\tmemset(vis, -1, sizeof(vis));\n\trep(i, n){\n\t\tint cur = a[i];\n\t\twhile(cur != 1){\n\t\t\tif(vis[p[cur]] != i){\n\t\t\t\tcnt[p[cur]].fi++;\n\t\t\t\tvis[p[cur]] = i;\n\t\t\t}\n\t\t\tcur /= p[cur];\n\t\t}\n\t}\n\tsort(cnt, cnt + mxN);\n\treverse(cnt, cnt + mxN);\n\tint nm = 0;\n\trep(i, mxN) if(cnt[i].fi){\n\t\tif(min(x, y) * (n - cnt[i].fi) > uwu) break;\n\t\tll owo = min(x, y) * (n - cnt[i].fi);\n\t\trep(j, n) if(a[j] % cnt[i].se != 0){\n\t\t\towo -= min(x, y);\n\t\t\towo += min(x * (cnt[i].se - (a[j] % cnt[i].se)), y);\n\t\t\tif(owo > uwu) break;\n\t\t}\n\t\tuwu = min(uwu, owo);\n\t\tnm++;\n\t\tif(nm > 500) break;\n\t}\n\tcout << uwu << '\\n';\n\treturn 0;\n}\n/*\nThings to look out for:\n\t- Integer overflows\n\t- Make sure that max is large enough (2e9, 4e18)\n\t- Special cases\nBe careful!\n*/\n"
}