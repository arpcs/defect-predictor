{
    "id": 95303855,
    "contestId": 850,
    "creationTimeSeconds": 1602459409,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 850,
        "index": "B",
        "name": "Arpa and a list of numbers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2100,
        "tags": [
            "implementation",
            "number theory"
        ]
    },
    "author": {
        "contestId": 850,
        "members": [
            {
                "handle": "lookcook"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504535700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 153,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 22220800,
    "source": "#include <bits/stdc++.h>\n\n#define int long long\n\nusing namespace std;\n\nsigned main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    int n, x, y;\n    cin >> n >> x >> y;\n    int maxa = 1000005;\n    int psum[maxa];\n    int freq[maxa];\n    for (int i = 0; i < maxa; i++) psum[i] = freq[i] = 0;\n    for (int i = 0; i < n; i++) {\n        int p;\n        cin >> p;\n        psum[p] += p;\n        freq[p]++;\n    }\n    for (int i = 1; i < maxa; i++) {\n        psum[i] += psum[i-1];\n        freq[i] += freq[i-1];\n    }\n    vector<int> primes;\n    bool vis[2*maxa];\n    for (int i = 0; i < 2*maxa; i++) vis[i] = false;\n    for (int i = 2; i < 2*maxa; i++) {\n        if (!vis[i]) {\n            primes.push_back(i);\n            for (int j = i; j < 2*maxa; j += i) vis[j] = true;\n        }\n    }\n    int mini = 1e18;\n    int len = x/y;\n    for (int p : primes) {\n        int last = 0;\n        int fixed = 0;\n        int res = 0;\n        for (int i = p; i < 2*maxa; i += p) {\n            int l = min(maxa-1,max(last, i-len-1));\n            int r = min(maxa-1, i);\n            int contrib = (freq[r]-freq[l])*i - (psum[r]-psum[l]);\n            res += contrib*y;\n            fixed += freq[r]-freq[l];\n            if (i >= maxa) break;\n            else last = i;\n        }\n        res += (n-fixed)*x;\n        mini = min(res, mini);\n    }\n    cout << mini << '\\n';\n}\n/*\n\n */"
}