{
    "id": 211310713,
    "contestId": 117,
    "creationTimeSeconds": 1687935746,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 117,
        "index": "E",
        "name": "Tree or not Tree",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2900,
        "tags": [
            "data structures",
            "divide and conquer",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 117,
        "members": [
            {
                "handle": "MIKEFENG"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1316790000
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 12492800,
    "source": "bool M1;\r\n#include<iostream>\r\n#include<algorithm>\r\n#include<cstring>\r\n#include<cstdlib>\r\n#include<climits>\r\n#include<iomanip>\r\n#include<cassert>\r\n#include<random>\r\n#include<cstdio>\r\n#include<vector>\r\n#include<bitset>\r\n#include<stack>\r\n#include<queue>\r\n#include<deque>\r\n#include<cmath>\r\n#include<ctime>\r\n#include<map>\r\n#include<set>\r\n//#include<ext/pb_ds/assoc_container.hpp>\r\n//#include<ext/pb_ds/hash_policy.hpp>\r\n//#include<ext/pb_ds/priority_queue.hpp>\r\n#define fi first\r\n#define se second\r\n#define LD double\r\n#define name(x) #x\r\n#define ll long long\r\n#define Vector Point\r\n#define I128 __int128\r\n#define ull unsigned ll\r\n#define pii pair<int,int>\r\n#define pb(x) push_back(x)\r\n#define dek(x) debug(x)<<\" \"\r\n#define deh(x) debug(x)<<endl\r\n#define syt cerr<<\"sytakioi\\n\"\r\n#define debug(x) cout<<name(x)<<\":\"<<x\r\n#define F(i,a,b) for(int i=a,i##end=b;i<=i##end;++i)\r\n#define UF(i,a,b) for(int i=a,i##end=b;i>=i##end;--i)\r\n#define look_memory cerr<<abs(&M2-&M1)/1024.0/1024<<'\\n'\r\n#define rd_i(l,r) uniform_int_distribution<int>(l,r)(rd)\r\n#define rd_r(l,r) uniform_real_distribution<double>(l,r)(rd)\r\n#define look_time cerr<<(clock()-Time)*1.0/CLOCKS_PER_SEC<<'\\n'\r\nusing namespace std;\r\n//using namespace __gnu_cxx;\r\nmt19937 rd(time(0));\r\nconst int N=1e5+5;\r\nint n,m,q,ans,flg;\r\nint rt[N];\r\nvector<int> e[N],tmp;  \r\nbool vis[N],ok[N];\r\ninline void get_loop(int u,int fa){\r\n\tif(flg==1) return;\r\n\tvis[u]=1;\r\n\tfor(int v:e[u]) if(v!=fa){\r\n\t\tif(vis[v]) return void(ok[u]=ok[v]=flg=1);\r\n\t\tif(flg==2) return;\r\n\t\tget_loop(v,u);\r\n\t\tif(ok[u]) flg=2;\r\n\t\tif(ok[v]) ok[u]=1;\r\n\t}\r\n}\r\nint fa[N],dep[N],siz[N],son[N],id[N],top[N],cnt;\r\ninline void dfs(int u,int fath){\r\n\tsiz[u]=1;\r\n\tfa[u]=fath;\r\n\tdep[u]=dep[fath]+1;\r\n\trt[u]=(!fath?u:rt[fath]);\r\n\tfor(int v:e[u]) if(v!=fath&&!ok[v]){\r\n\t\tdfs(v,u);\r\n\t\tsiz[u]+=siz[v];\r\n\t\tif(siz[v]>siz[son[u]]) son[u]=v;\r\n\t}\r\n}\r\ninline void dfs1(int u,int topf){\r\n\tid[u]=++cnt;\r\n\ttop[u]=topf;\r\n\tif(son[u]) dfs1(son[u],topf);\r\n\tfor(int v:e[u]) if(v!=fa[u]&&v!=son[u]&&!ok[v]) dfs1(v,v);\r\n}\r\n#define ls k<<1\r\n#define rs k<<1|1\r\nstruct SEG{\r\n\tstruct tree{\r\n\t\tint sum,tag;\r\n\t}tr[N<<2];\r\n\tinline void build(int k,int l=1,int r=n){\r\n\t\ttr[k].sum=r-l+1;\r\n\t\tif(l==r) return;\r\n\t\tint mid=(l+r)>>1;\r\n\t\tbuild(ls,l,mid);build(rs,mid+1,r);\r\n\t}\r\n\tinline void pushup(int k){tr[k].sum=tr[ls].sum+tr[rs].sum;}\r\n\tinline void push(int k){tr[k].sum*=-1;tr[k].tag^=1;}\r\n\tinline void pushdown(int k){if(tr[k].tag) push(ls),push(rs),tr[k].tag=0;}\r\n\tinline void add(int k,int l,int r,int l1=1,int r1=n){\r\n\t\tif(l>r) return;\r\n\t\tif(l<=l1&&r1<=r) return push(k);\r\n\t\tpushdown(k);\r\n\t\tint mid=(l1+r1)>>1;\r\n\t\tif(l<=mid) add(ls,l,r,l1,mid);\r\n\t\tif(mid<r) add(rs,l,r,mid+1,r1);\r\n\t\tpushup(k);\r\n\t}\r\n\tinline int query(int k,int l,int r,int l1=1,int r1=n){\r\n\t\tif(l>r) return 0;\r\n\t\tif(l<=l1&&r1<=r) return tr[k].sum;\r\n\t\tpushdown(k);\r\n\t\tint mid=(l1+r1)>>1,res=0;\r\n\t\tif(l<=mid) res+=query(ls,l,r,l1,mid);\r\n\t\tif(mid<r) res+=query(rs,l,r,mid+1,r1);\r\n\t\treturn res;\r\n\t}\r\n}T1,T2;\r\nint rk[N],tot;\r\ninline void get_rk(int u,int fa){\r\n\tif(rk[u]) return;\r\n\trk[u]=++tot;\r\n\ttmp.emplace_back(u);\r\n\tfor(int v:e[u]) if(v!=fa&&ok[v]) get_rk(v,u);\r\n}\r\ninline void build(){\r\n\tget_loop(1,0);\r\n\tif(!flg) ok[1]=1;\r\n\tF(i,1,n) if(ok[i]) dfs(i,0),dfs1(i,i);\r\n\tF(i,1,n) if(ok[i]) return get_rk(i,0);\r\n}\r\ninline int ask(int x,int y){\r\n\tint res=0;\r\n\twhile(top[x]!=top[y]){\r\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\r\n\t\tres+=T1.query(1,id[top[x]],id[x]);\r\n\t\tx=fa[top[x]];\r\n\t}\r\n\tif(x==y) return res;\r\n\tif(id[x]>id[y]) swap(x,y);\r\n\treturn res+T1.query(1,id[x]+1,id[y]);\r\n}\r\ninline void change(int x,int y){\r\n\tans-=ask(x,y);\r\n\twhile(top[x]!=top[y]){\r\n\t\tif(dep[top[x]]<dep[top[y]]) swap(x,y);\r\n\t\tT1.add(1,id[top[x]],id[x]);\r\n\t\tx=fa[top[x]];\r\n\t}\r\n\tif(x==y) return;\r\n\tif(id[x]>id[y]) swap(x,y);\r\n\tT1.add(1,id[x]+1,id[y]);\r\n}\r\nint t;\r\ninline void solve(int x,int y){\r\n\tassert(x!=y);\r\n\tif(T2.query(1,1,tot)==-tot) --ans;\r\n//\tif(t==7) cerr<<ans<<'\\n';\r\n//\tif(t==7) cerr<<tot<<' '<<T2.query(1,1,tot)<<'\\n';\r\n//\tcout<<ans<<'\\n';\r\n//\tcout<<x<<' '<<y<<' '<<rk[x]<<' '<<rk[y]<<'\\n';\r\n\tif(rk[x]<rk[y]){\r\n\t\tif(rk[y]-rk[x]<tot-(rk[y]-rk[x])||(rk[y]-rk[x]==tot-(rk[y]-rk[x])&&tmp[rk[x]]<=(rk[x]==1?tmp.back():tmp[rk[x]-2]))){\r\n//\t\t\tsyt;\r\n\t\t\tans-=T2.query(1,rk[x]+1,rk[y]);\r\n\t\t\tT2.add(1,rk[x]+1,rk[y]);\r\n\t\t}else{\r\n//\t\t\tsyt;\r\n\t\t\tans-=T2.query(1,1,rk[x])+T2.query(1,rk[y]+1,tot);\r\n\t\t\tT2.add(1,1,rk[x]);T2.add(1,rk[y]+1,tot);\r\n\t\t}\r\n\t}else{\r\n\t\tif(rk[x]-rk[y]<tot-(rk[x]-rk[y])||(rk[x]-rk[y]==tot-(rk[x]-rk[y])&&tmp[rk[x]-2]<=(rk[x]==tot?tmp.front():tmp[rk[x]]))){\r\n//\t\t\tsyt;\r\n\t\t\tans-=T2.query(1,rk[y]+1,rk[x]);\r\n\t\t\tT2.add(1,rk[y]+1,rk[x]);\r\n\t\t}else{\r\n//\t\t\tsyt;\r\n\t\t\tans-=T2.query(1,1,rk[y])+T2.query(1,rk[x]+1,tot);\r\n\t\t\tT2.add(1,1,rk[y]);T2.add(1,rk[x]+1,tot);\r\n\t\t}\r\n\t}\r\n//\tif(t==7) cerr<<ans<<'\\n';\r\n//\tif(t==7) cerr<<tot<<' '<<T2.query(1,1,tot)<<'\\n';\r\n\tif(T2.query(1,1,tot)==-tot) ++ans;\r\n}\r\nbool M2;\r\nint main(){\r\n\tint Time=clock();\r\n\tlook_memory;\r\n\tcin.tie(nullptr)->sync_with_stdio(false);\r\n//\tfreopen(\"sample.in\",\"r\",stdin);\r\n//\tfreopen(\"1.out\",\"w\",stdout);\r\n//\tfreopen(\"zood.in\",\"r\",stdin);\r\n//\tfreopen(\"zood.out\",\"w\",stdout);\r\n\tcin>>n>>m>>q;\r\n\tF(i,1,m){\r\n\t\tint u,v;\r\n\t\tcin>>u>>v;\r\n\t\te[u].emplace_back(v);\r\n\t\te[v].emplace_back(u);\r\n\t}\r\n\tbuild();\r\n//\tcerr<<tot<<'\\n';\r\n\tF(i,1,tot) assert(rk[tmp[i-1]]==i);\r\n//\tfor(int x:tmp) cerr<<x<<' ';cerr<<'\\n';\r\n\tans=n;\r\n\tassert(cnt==n);\r\n\tT1.build(1);\r\n\tT2.build(1);\r\n\tF(i,1,q){\r\n\t\t++t;\r\n\t\tint x,y;\r\n\t\tcin>>x>>y;\r\n\t\tif(rt[x]==rt[y]) change(x,y);\r\n\t\telse{\r\n\t\t\tchange(x,rt[x]);change(y,rt[y]);\r\n\t\t\tsolve(rt[x],rt[y]);\r\n\t\t}\r\n\t\tcout<<ans<<'\\n';\r\n\t}\r\n\tlook_time;\r\n\treturn 0;\r\n}"
}