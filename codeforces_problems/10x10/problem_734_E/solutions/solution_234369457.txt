{
    "id": 234369457,
    "contestId": 734,
    "creationTimeSeconds": 1700985650,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 734,
        "index": "E",
        "name": "Anton and Tree",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "dfs and similar",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 734,
        "members": [
            {
                "handle": "lusiyuan2021"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1479227700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 45,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 9113600,
    "source": "#include<cstdio>\r\n#define ri register int\r\n#define rc register char\r\nusing namespace std;\r\nconst int maxn=200005;\r\ntemplate<typename TP>inline void read(TP&x){\r\n    x=0;ri f=1;rc c=getchar();\r\n    while(c>'9'||c<'0'){if(c=='-')f=-1;c=getchar();}\r\n    while(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+(c^48);c=getchar();}\r\n    x*=f;\r\n}\r\ntemplate<typename TP>inline void write(TP x){\r\n    if(x==0){putchar('0');return;}\r\n    rc father[100]={0};ri i=0;\r\n    if(x<0){putchar('-'),x=-x;}\r\n    while(x){++i,father[i]=x%10+48;x/=10;}\r\n    while(i){putchar(father[i]),--i;}\r\n}\r\nint head[maxn],tot;\r\nstruct node{int to,nxt;}e[maxn<<1];\r\ninline void add(int from,int to){\r\n    ++tot;\r\n    e[tot].to=to;\r\n    e[tot].nxt=head[from];\r\n    head[from]=tot;\r\n}\r\nint father[maxn];\r\ninline int find(int x){if(father[x]!=x)father[x]=find(father[x]);return father[x];}\r\ninline void join(int x,int y){father[x]=y;}\r\nint maxdep,maxw;\r\ninline void dfs(int dep,int x,int fa){\r\n    if(dep>maxdep)\r\n        maxdep=dep,maxw=x;\r\n    for(ri i=head[x];i;i=e[i].nxt)\r\n        if(e[i].to!=fa)\r\n            dfs(dep+1,e[i].to,x);\r\n}\r\nint tempa,tempb;\r\nint n,a[maxn],b[maxn];\r\nbool color[maxn];\r\nint main(){\r\n    read(n);\r\n    for(ri i=1;i<=n;++i){\r\n        read(color[i]);\r\n        father[i]=i;\r\n    }\r\n    for(ri i=1;i<n;++i){\r\n        read(a[i]),read(b[i]);\r\n        tempa=find(a[i]),tempb=find(b[i]);\r\n        if(color[tempa]==color[tempb])\r\n            father[tempa]=father[tempb];\r\n    }\r\n    for(ri i=1;i<=n;++i)\r\n    \tfather[i]=find(father[i]);\r\n    for(ri i=1;i<=n;++i)\r\n        if(father[a[i]]!=father[b[i]])\r\n            add(father[a[i]],father[b[i]]),add(father[b[i]],father[a[i]]);\r\n    dfs(0,father[1],0);\r\n    dfs(0,maxw,0);\r\n    write((maxdep+1)>>1);\r\n    return 0;\r\n}\r\n"
}