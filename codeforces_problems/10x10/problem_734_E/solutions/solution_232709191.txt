{
    "id": 232709191,
    "contestId": 734,
    "creationTimeSeconds": 1699943078,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 734,
        "index": "E",
        "name": "Anton and Tree",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "dfs and similar",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 734,
        "members": [
            {
                "handle": "sadra_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1479227700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 45,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 37683200,
    "source": "# include <bits/stdc++.h> \r\n\r\nusing namespace std;\r\nconst int maxn = 2e5+7; \r\nint n;\r\nint color[maxn], mark[maxn], dist[maxn]; \r\nvector<int> g[maxn], g2[maxn];\r\n\r\nvoid f(int v, int c, int last) \r\n{\r\n\tif (mark[v]) return ; \r\n\tmark[v] = 1;\r\n\tif (color[v]!=c) \r\n\t{\r\n\t\tg2[last].push_back(v);\r\n\t\tg2[v].push_back(last);\r\n\t\tfor (int x : g[v]) f(x, color[v], v);\r\n\r\n\t} \r\n\telse \r\n\t{\r\n\t\tfor (int x : g[v]) f(x, c, last);\t\r\n\t}\r\n\t\r\n} \r\nint find_farthest(int v, int c) \r\n{\r\n\tqueue<int> q; \r\n\tq.push(v); \r\n\tint mx = 0, ans = v;\r\n\twhile (!q.empty()) \r\n\t{\r\n\t\tint p = q.front(); \r\n\t\tq.pop(); \r\n\t\tmark[p] = 1;\r\n\t\tfor (int x : g2[p]) \r\n\t\t{\r\n\t\t\tif (!mark[x]) \r\n\t\t\t{\r\n\t\t\t\tdist[x] = dist[p]+1;\r\n\t\t\t\tif (dist[x]>mx) \r\n\t\t\t\t{\r\n\t\t\t\t\tmx = dist[x]; \r\n\t\t\t\t\tans = x;\r\n\t\t\t\t}\r\n\t\t\t\tq.push(x);\r\n\t\t\t\tmark[x] = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (c) return mx; \r\n\treturn ans;\r\n}\r\n\r\nint main() \r\n{\r\n\tios_base::sync_with_stdio(0); cin.tie(0); \r\n\tcin>>n; \r\n\tfor (int i = 1; i<=n;i++) cin>>color[i]; \r\n\tfor (int i = 0; i<n-1;i++) \r\n\t{\r\n\t\tint u,v;\r\n\t\tcin>>u>>v; \r\n\t\tg[u].push_back(v); \r\n\t\tg[v].push_back(u);\r\n\t}\r\n\tf(1, color[1], 1); \r\n\t/*for (int i = 1; i<=n;i++) \r\n\t{\r\n\t\tfor (int j: g2[i]) cout<<i<<\" \"<<j<<endl;\r\n\t}*/\r\n\tfill(mark, mark+n+1, 0); \r\n\t\r\n\tint u = find_farthest(1, 0); \r\n\t//cout<<u<<\" \"<<dist[u]<<endl;\r\n\tfill(mark, mark+n+1, 0); \r\n\tfill(dist, dist+n+1, 0); \r\n\tint d = find_farthest(u, 1); \r\n\tcout<<(d+1)/2<<endl;\r\n\r\n\t\r\n}\r\n\r\n\r\n\r\n"
}