{
    "id": 231687066,
    "contestId": 734,
    "creationTimeSeconds": 1699344297,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 734,
        "index": "E",
        "name": "Anton and Tree",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "dfs and similar",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 734,
        "members": [
            {
                "handle": "nssymcb"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1479227700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 45,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 22425600,
    "source": "#include<bits/stdc++.h>\r\n#define rep(i, s, t) for (int i = s; i <= t; i++)\r\n#define drep(i, s, t) for (int i = s; i >= t; i--)\r\n#define ll long long\r\nconst int N = 2e5 + 7;\r\nusing namespace std;\r\nint n, p, ans = 1e9 + 7, hd[N], nx[N << 1], to[N << 1], col[N], f[N], sum[N], g[N], fa[N];\r\nint vis[N], _p, _hd[N], _nx[N << 2], _to[N << 2], st;\r\nint Find(int u) { return (fa[u] == u ? u : fa[u] = Find(fa[u])); }\r\nvoid Add(int u, int v)\r\n{\r\n\tif (col[u] == col[v]) fa[Find(u)] = Find(v);\r\n\tnx[++p] = hd[u], hd[u] = p, to[p] = v;\r\n}\r\nvoid _Add(int u, int v)\r\n{\r\n\tif (u == v) return;\r\n\t_nx[++_p] = _hd[u], _hd[u] = _p, _to[_p] = v;\r\n}\r\nvoid Init()\r\n{\r\n\tscanf(\"%d\", &n);\r\n\trep(i, 1, n) scanf(\"%d\", &col[i]), fa[i] = i;\r\n\tint u, v;\r\n\trep(i, 1, n - 1) scanf(\"%d%d\", &u, &v), Add(u, v), Add(v, u);\r\n\trep(i, 1, n) for (int j = hd[i]; j; j = nx[j]) _Add(Find(fa[i]), Find(fa[to[j]])), _Add(Find(fa[to[j]]), Find(fa[i]));\r\n    return;\r\n}\r\nvoid Search(int u, int pre)\r\n{\r\n\tif (vis[u]) return;\r\n\tvis[u] = 1;\r\n\tif (f[u] > f[st]) st = u;\r\n\tfor (int i = _hd[u]; i; i = _nx[i])\r\n\t{\r\n\t\tint v = _to[i];\r\n\t\tif (v == pre) continue;\r\n\t\tf[v] = f[u] + 1;\r\n\t\tSearch(v, u);\r\n\t}\r\n\treturn;\r\n}\r\nint Sol()\r\n{\r\n    st = Find(fa[1]);\r\n    f[st] = 1;\r\n    Search(st, 0);\r\n    memset(f, 0, sizeof f);\r\n    memset(vis, 0, sizeof vis);\r\n    Search(st, 0);\r\n    return (f[st] + 1) / 2;\r\n}\r\nint main()\r\n{\r\n\t// freopen(\"734E.in\", \"r\", stdin);\r\n    Init();\r\n    printf(\"%d\\n\", Sol());\r\n    return 0;\r\n}\r\n"
}