{
    "id": 228505956,
    "contestId": 1736,
    "creationTimeSeconds": 1697527071,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1736,
        "index": "C1",
        "name": "Good Subarrays (Easy Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1300,
        "tags": [
            "binary search",
            "data structures",
            "schedules",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1736,
        "members": [
            {
                "handle": "songrui111"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1665412500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 11264000,
    "source": "// LUOGU_RID: 129910996\n#include<bits/stdc++.h>\r\n#define ll long long\r\nusing namespace std;\r\nconst int N=2e5+5;\r\nint t[N],L[N];\r\nstruct Segment {\r\n    int maxa[N<<2];\r\n\tll S[N<<2];\r\n    int merge(int k,int l,int r,int mx) {\r\n    \tif(l==r) return max(mx,maxa[k]);\r\n    \tint mid=(l+r)/2;\r\n        if(maxa[2*k]>mx) return merge(2*k,l,mid,maxa[2*k])+S[k]-S[2*k];\r\n        else return (mid-l+1)*mx+merge(2*k+1,mid+1,r,mx);\r\n    }\r\n    void push_up(int k,int l,int r) {\r\n    \tint mid=(l+r)/2;\r\n        maxa[k]=max(maxa[2*k],maxa[2*k+1]);\r\n        S[k]=S[2*k]+merge(2*k+1,mid+1,r,maxa[2*k]);\r\n    }\r\n    void build(int k,int l,int r) {\r\n        if(l==r) {maxa[k]=S[k]=L[l]; return ;}\r\n        int mid=(l+r)/2;\r\n        build(2*k,l,mid);\r\n        build(2*k+1,mid+1,r);\r\n        push_up(k,l,r);\r\n    }\r\n    void updata(int k,int l,int r,int x) {\r\n        if(l==r) {\r\n            maxa[k]=S[k]=L[l]; return ;\r\n        }\r\n        int mid=(l+r)/2;\r\n        if(x<=mid) updata(2*k,l,mid,x);\r\n        if(x>mid) updata(2*k+1,mid+1,r,x);\r\n        push_up(k,l,r);\r\n    }\r\n}T ;\r\nint main() {\r\n    int n; cin>>n;\r\n    for(int i=1;i<=n;i++) {scanf(\"%d\",&t[i]); L[i]=max(0,i-t[i]);}\r\n    T.build(1,1,n);\r\n    int Q; cin>>Q;\r\n    while(Q) {\r\n        Q--;\r\n        int  x,p; scanf(\"%d%d\",&x,&p);\r\n        int t=L[x];\r\n        L[x]=max(x-p,0);\r\n        T.updata(1,1,n,x);\r\n        ll ans=n*(n+1)/2;\r\n        printf(\"%lld\\n\",ans-T.S[1]);   \r\n\t\tL[x]=t;\r\n        T.updata(1,1,n,x); \r\n    }\r\n    return 0;\r\n} "
}