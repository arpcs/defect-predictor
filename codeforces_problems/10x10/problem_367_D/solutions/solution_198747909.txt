{
    "id": 198747909,
    "contestId": 367,
    "creationTimeSeconds": 1679578762,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 367,
        "index": "D",
        "name": "Sereja and Sets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "bitmasks",
            "dfs and similar"
        ]
    },
    "author": {
        "contestId": 367,
        "members": [
            {
                "handle": "BlueDiamond"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1385479800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 614400,
    "source": "#include <cmath>\r\n#include <functional>\r\n#include <fstream>\r\n#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <string>\r\n#include <set>\r\n#include <map>\r\n#include <list>\r\n#include <time.h>\r\n#include <math.h>\r\n#include <random>\r\n#include <deque>\r\n#include <queue>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\n#include <iomanip>\r\n#include <cassert>\r\n#include <bitset>\r\n#include <sstream>\r\n#include <stack>\r\n#include <chrono>\r\n#include <cstring>\r\n#include <numeric>\r\n\r\nusing namespace std;\r\n\r\nconst int INF = (int)1e9 + 7;\r\n\r\nsigned main() {\r\n#ifdef ONPC\t\r\n\tFILE* stream;\r\n\tfreopen_s(&stream, \"input.txt\", \"r\", stdin);\r\n#else\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0);\r\n#endif\r\n\r\n\tint limit, n, d;\r\n\tcin >> limit >> n >> d;\r\n\tvector<vector<int>> v(n);\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tint len;\r\n\t\tcin >> len;\r\n\t\tv[i].resize(len);\r\n\t\tfor (auto& x : v[i]) {\r\n\t\t\tcin >> x;\r\n\t\t}\r\n\t\tsort(v[i].begin(), v[i].end());\r\n\t}\r\n\tn++;\r\n\tv.push_back({ 0, limit + 1 });\r\n\tvector<bool> isvalid(1 << (n - 1), true);\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tvector<int> pivots(n, 0);\r\n\t\tfor (int pz = 0; pz < (int)v[i].size(); pz++) {\r\n\t\t\tint now = 0;\r\n\t\t\tif (v[i][pz] == limit + 1) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (pz + 1 < (int)v[i].size() && v[i][pz + 1] - v[i][pz] <= d) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tfor (int j = 0; j < n; j++) {\r\n\t\t\t\tif (i == j) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\twhile (pivots[j] < (int)v[j].size() && v[j][pivots[j]] <= v[i][pz]) {\r\n\t\t\t\t\tpivots[j]++;\r\n\t\t\t\t}\r\n\t\t\t\tif (pivots[j] < (int)v[j].size()) {\r\n\t\t\t\t\tif (v[j][pivots[j]] - v[i][pz] <= d) {\r\n\t\t\t\t\t\tnow += (1 << j);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (now & (1 << (n - 1))) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tnow = (1 << (n - 1)) - 1 - now;\r\n\t\t\tisvalid[now] = false;\r\n\t\t}\r\n\t}\r\n\tfor (int mask = (1 << (n - 1)) - 1; mask >= 0; mask--) {\r\n\t\tif (!isvalid[mask]) {\r\n\t\t\tfor (int bit = 0; bit < n - 1; bit++) {\r\n\t\t\t\tif (mask & (1 << bit)) {\r\n\t\t\t\t\tisvalid[mask - (1 << bit)] = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tint optimal = INF;\r\n\tfor (int mask = 0; mask < (1 << (n - 1)); mask++) {\r\n\t\tif (!isvalid[mask]) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tint have = 0;\r\n\t\tfor (int i = 0; i < n - 1; i++) {\r\n\t\t\tif (mask & (1 << i)) {\r\n\t\t\t\thave++;\r\n\t\t\t}\r\n\t\t}\r\n\t\toptimal = min(optimal, have);\r\n\t}\r\n\tcout << optimal << \"\\n\";\r\n\treturn 0;\r\n}"
}