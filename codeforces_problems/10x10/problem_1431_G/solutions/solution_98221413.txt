{
    "id": 98221413,
    "contestId": 1431,
    "creationTimeSeconds": 1605200307,
    "relativeTimeSeconds": 8607,
    "problem": {
        "contestId": 1431,
        "index": "G",
        "name": "Number Deletion Game",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "*special",
            "dp",
            "games",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1431,
        "members": [
            {
                "handle": "pseuda"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1605191700
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 512000,
    "source": "import java.util.*\r\nimport kotlin.collections.*\r\nimport kotlin.math.*\r\n\r\nprivate fun readLn() = readLine()!! // string line\r\nprivate fun readInt() = readLn().toInt() // single int\r\nprivate fun readLong() = readLn().toLong() // single long\r\nprivate fun readDouble() = readLn().toDouble() // single double\r\nprivate fun readStrings() = readLn().split(\" \") // list of strings\r\nprivate fun readInts() = readStrings().map { it.toInt() } // list of ints\r\nprivate fun readLongs() = readStrings().map { it.toLong() } // list of longs\r\nprivate fun readDoubles() = readStrings().map { it.toDouble() } // list of doubles\r\n\r\nconst val mod = (1e9 + 7).toInt()\r\n\r\nconst val inf = (1e18 + 2).toLong()\r\nconst val maxn = (1e6 + 5).toInt()\r\n\r\nfun solve() {\r\n    var (n, k) = readInts()\r\n    var a = ArrayList(readLongs())\r\n    a.sort()\r\n\r\n    var ans = 0\r\n\r\n    var dp = Array(n + 1) { LongArray(k + 1) }\r\n\r\n    var kek = Array(n + 1) { LongArray(n + 1) }\r\n\r\n    for (i in 0 until n) {\r\n        kek[i][i] = a[i]\r\n        for (j in i + 1 until n) {\r\n            kek[i][j] = a[j] + kek[i][j - 1]\r\n        }\r\n    }\r\n\r\n\r\n    for (i in 1 until n) {\r\n        for (j in 1..((i + 1) / 2)) {\r\n            dp[i][j] = max(dp[i - 1][j], dp[i][j])\r\n            for (jj in 1..j) {\r\n                val dp1 = if (i - 2 * jj >= 0) dp[i - 2 * jj][j - jj] else 0\r\n                dp[i][j] = max(dp1 + kek[i - jj + 1][i] - kek[i - 2 * jj + 1][i - jj], dp[i][j])\r\n                val roflan = dp[i][j]\r\n                val ttt = 0\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n/*\r\n    for (i in 0 until n) {\r\n        for (j in i + 1 until n) {\r\n            for (c in j + 1 until n) {\r\n                for (ii in 0 until n) {\r\n                    for (jj in ii + 1 until n) {\r\n                        for (cc in jj + 1 until n) {\r\n                            var hs = hashSetOf(i, j, c)\r\n                            var hs1 = hashSetOf(ii, jj, cc)\r\n                            for (x in hs1) if (hs.contains(x)) {\r\n                                continue\r\n                            }\r\n                            val ans1 = a[ii] + a[jj] + a[cc] - a[i] - a[j] - a[c]\r\n                            if (ans1 == 283) {\r\n                                println(hs.joinToString(\" \"))\r\n                                println(hs1.joinToString(\" \"))\r\n                            }\r\n                            ans = max(ans, ans1)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n*/\r\n\r\n    /* for (i in 0 until n - 2 * k) {\r\n        var ans1 = 0\r\n        for (j in i until i + k) ans1 -= a[j]\r\n        for (j in i + k until i + 2 * k) ans1 += a[j]\r\n        ans = max(ans, ans1)\r\n    } */\r\n\r\n\r\n\r\n\r\n    println(dp[n - 1][k])\r\n\r\n}\r\n\r\nfun main() {\r\n    var q = 1\r\n    //q = readInt()\r\n    repeat(q) {\r\n        solve()\r\n    }\r\n}\r\n\r\n// trash\r\n\r\ndata class Edge(val to: Int, val w: Int)\r\n\r\n// my pair\r\ndata class Pair<K, V>(val first: Int, val second: Int) : Comparable<Pair<K, V>> {\r\n    override fun compareTo(other: Pair<K, V>) = when {\r\n        first != other.first -> (first - other.first)\r\n        else -> (second - other.second)\r\n    }\r\n}\r\n\r\nfun mul(a: Long, b: Long): Long {\r\n    var value = a * b - (a.toDouble() * b / mod).toLong() * mod;\r\n    if (value < 0) value += mod\r\n    if (value >= mod) value -= mod\r\n    return value\r\n}\r\n\r\nfun poww(A: Long, B: Long): Long {\r\n    var value = 1L\r\n    var a = A\r\n    var b = B\r\n    a %= mod\r\n    while (b > 0) {\r\n        if (b % 2 != 0L) value = mul(a, value)\r\n        a = mul(a, a)\r\n        b = b shr 1\r\n    }\r\n    return value % mod\r\n}\r\n\r\nfun inv(a: Long): Long {\r\n    return poww(a, mod - 2L)\r\n}\r\n\r\ntailrec fun gcd(a: Long, b: Long): Long {\r\n    return if (a == 0L) b else gcd(b % a, a)\r\n}\r\n\r\nfun <T : Comparable<T>> ArrayList<T>.upperBound(x: T): Int {\r\n    if (this[0] > x) return 0\r\n    if (this.last() <= x) return this.size\r\n    var l = 0\r\n    var r = this.size - 1\r\n    while (l != r) {\r\n        val m = (l + r) / 2\r\n        if (this[m] > x) r = m else l = m + 1\r\n    }\r\n    return l\r\n}\r\n\r\nfun <T : Comparable<T>> ArrayList<T>.lowerBound(x: T): Int {\r\n    if (this.last() < x) return this.size\r\n    var l = 0\r\n    var r = this.size - 1\r\n    while (l != r) {\r\n        val m = (l + r) / 2\r\n        if (this[m] >= x) r = m else l = m + 1\r\n    }\r\n    return l\r\n}"
}