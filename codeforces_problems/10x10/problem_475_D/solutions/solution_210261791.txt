{
    "id": 210261791,
    "contestId": 475,
    "creationTimeSeconds": 1687190315,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 475,
        "index": "D",
        "name": "CGCDSSQ",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 475,
        "members": [
            {
                "handle": "yashnator"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1412514000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 872,
    "memoryConsumedBytes": 62668800,
    "source": "// #define NDBEUG\n#include <iostream>\n#include <algorithm>\n#include <unordered_map>\n#include <unordered_set>\n#include <set>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <utility>\n#include <map>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <cstring>\n#include <bitset>\n#include <numeric>\n#include <strings.h>\n#include <random>\n#include <cassert>\n\n#ifdef __GNUC__\n#define ffs(x) __builtin_ffs(x)\n#endif\n// #elif __INTEL_COMPILER\n// #  define ffs(x) _bit_scan_forward(x)\n\n// std::mt19937 rng(std::chrono::steady_clock::now().time_since_epoch().count());\n\n// Custom Hash functions\n\n//\nusing namespace std;\n\ntypedef unsigned long long ull;\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef pair<int, int> pi;\ntypedef vector<ll> vll;\n\n#define F first\n#define S second\n#define PB push_back\n#define MP make_pair\n#define REP(i, a, b) for (ll i = a; i < b; i++)\n#define yes cout << \"YES\\n\";\n#define no cout << \"NO\\n\";\n#define rsz resize\n#define all(x) begin(x), end(x)\n#define sz(x) (int)(x).size()\n\nconst ll MOD = 1000000007;\n// const ll MOD = 998244353;\nconst ld EPS = 1e-9;\nconst ll MAXN = 1e6 + 1;\n// const ll MAXN = 10000001;\nconst ll INF = 5e18;\nconst ll MINF = -INF;\n\n//--DEBUG STATEMENTS--//\n\n#ifndef ONLINE_JUDGE\n#define debug(x)       \\\n\tcerr << #x << \" \"; \\\n\t_print(x);         \\\n\tcerr << endl;\n#define debugar(x, n)  \\\n\tcerr << #x << \" \"; \\\n\t_printar(x, n);    \\\n\tcerr << endl;\n#else\n#define debug(x)\n#define debugar(x, n)\n#endif\n\nvoid _print(ll t){cerr << t;}\nvoid _print(int t) { cerr << t; }\nvoid _print(string t) { cerr << t; }\nvoid _print(char t) { cerr << t; }\nvoid _print(long double t) { cerr << t; }\nvoid _print(double t) { cerr << t; }\nvoid _print(unsigned long long t) { cerr << t; }\nvoid _printar(int arr[], int size){cerr << \"[ \";for (int i = 0; i < size; i++){cerr << arr[i] << \" \";}cerr << \"]\";}\nvoid _printar(char arr[], int size) {cerr << \"[ \";for (int i = 0; i < size; i++){cerr << arr[i] << \" \";}cerr << \"]\";} \nvoid _printar(ll arr[], int size) {cerr << \"[ \";for (int i = 0; i < size; i++){cerr << arr[i] << \" \";}cerr << \"]\";}\ntemplate <class T, class V> void _print(pair<T, V> p);\ntemplate <class T> void _print(vector<T> v);\ntemplate <class T> void _print(set<T> v);\ntemplate <class T, class V> void _print(map<T, V> v);\ntemplate <class T> void _print(multiset<T> v);\ntemplate <class T, class V> void _print(pair<T, V> p) {cerr << \"{\";_print(p.first);cerr << \",\";_print(p.second);cerr << \"}\";}\ntemplate <class T> void _print(vector<T> v){cerr << \"[ \";for (T i : v){_print(i);cerr << \" \";}cerr << \"]\";}\ntemplate <class T> void _print(set<T> v){cerr << \"[ \";for (T i : v){_print(i);cerr << \" \";}cerr << \"]\";}\ntemplate <class T> void _print(multiset<T> v) {cerr << \"[ \";for (T i : v){_print(i);cerr << \" \";}cerr << \"]\";}\ntemplate <class T, class V> void _print(map<T, V> v){cerr << \"[ \";for (auto i : v){_print(i);cerr << \" \";}cerr << \"]\";}\n\n//----//\n\nint gcd(int a, int b) {if (b == 0)return a;else return gcd(b, a % b);} int lcm(int a, int b) { return a * b / gcd(a, b); }\nll min(ll a, ll b) {if (a > b){return b;}return a;} ll max(ll a, ll b){if (a < b){return b;}return a;}\nll min(ll a, ll b, ll c){return min(a,min(b,c));} ll max(ll a, ll b, ll c){ return max(a, max(b,c)); }\nll count_one(ll x){x = (x & (0x55555555)) + ((x >> 1) & (0x55555555));x = (x & (0x33333333)) + ((x >> 2) & (0x33333333));x = (x & (0x0f0f0f0f)) + ((x >> 4) & (0x0f0f0f0f));x = (x & (0x00ff00ff)) + ((x >> 8) & (0x00ff00ff));x = (x & (0x0000ffff)) + ((x >> 16) & (0x0000ffff));return x;}\nll fac[MAXN + 1], inv[MAXN + 1], invfac[MAXN+1];\nll exp(ll x,ll y,ll p){ll res = 1;x %= p;while (y){if (y & 1){res *= x;res %= p;}x *= x;x %= p;y >>= 1;}return res;}\nint spf[MAXN]; void sieve() {spf[1] = 1;for (int i=2; i<MAXN; i++)spf[i] = i;for (int i=4; i<MAXN; i+=2)spf[i] = 2;for (int i=3; i*i<MAXN; i++){if (spf[i] == i){for (int j=i*i; j<MAXN; j+=i)if (spf[j]==j)spf[j] = i;}}}\nbool isPrime(ll x){return (spf[x]==x);}\nvll factorize(ll x) {vll ret;while (x != 1){ret.push_back(spf[x]); x = x / spf[x];}return ret;}\nvoid factorial() {fac[0] = 1;for (int i = 1; i <= MAXN; i++){fac[i] = fac[i - 1] * i % MOD;}}\nvoid inverses() {inv[MAXN] = exp(fac[MAXN], MOD - 2, MOD);for (int i = MAXN; i >= 1; i--){inv[i - 1] = inv[i] * i % MOD;}}\nvoid InverseofFactorial() {invfac[0] = invfac[1] = 1; for (int i = 2; i <= MAXN; i++) invfac[i] = (inv[i] * invfac[i - 1]) % MOD; } \n/** Computes nCr mod p */\nlong long choose(long long n, long long r, long long p){if (n < r)return 0;return fac[n] * inv[r] % p * inv[n - r] % p;}\nint log2_floor(unsigned long long i) { return i ? __builtin_clzll(1) - __builtin_clzll(i) : -1; }\nvoid setIO(string name = \"\") {ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);if (sz(name)){freopen((name + \".in\").c_str(), \"r\", stdin);freopen((name + \".out\").c_str(), \"w\", stdout);}}\n\n//--Data structures--//\n\nstruct DSU {\n\tvector<int> e;\n\tDSU(int N) { e = vector<int>(N, -1); }\n\tint get(int x) { return e[x] < 0 ? x : e[x] = get(e[x]); }\n\tbool same_set(int a, int b) { return get(a) == get(b); }\n\tint size(int x) { return -e[get(x)]; }\n\tbool unite(int x, int y)\n\t{ // union by size\n\t\tx = get(x), y = get(y);\n\t\tif (x == y)\n\t\t\treturn false;\n\t\tif (e[x] > e[y])\n\t\t\tswap(x, y);\n\t\te[x] += e[y];\n\t\te[y] = x;\n\t\treturn true;\n\t} \n};\n\n//\n\n//--starts here--//\n\nint main() {\n\n\t#ifndef ONLINE_JUDGE\n\t\tfreopen(\"input.txt\", \"r\", stdin);\n\t\tfreopen(\"output.txt\", \"w\", stdout);\n\t\tfreopen(\"Error.txt\", \"w\", stderr);\n\t#endif\n\t\tsetIO();\n\n\t// sieve();\n\n\t// factorial();\n\t// inverses();\n\t// InverseofFactorial();\n\n\t// in bin search, for min true, hi++ and lo + (hi-lo)/2\n\t// for max true, lo-- and lo + (r-l+1)/2; ans-> lo always\n\n\t// ll _t; cin>>_t;\n\t// while(_t--){\n\t\t\n    // }\n\n\tfunction f = [&](vector<vector<ll>> & sparseTable, ll l, ll r){\n\t\tll i = log2_floor(r - l + 1);\n\t\treturn gcd(sparseTable[i][l], sparseTable[i][r - (1<<i) + 1]);\n\t};\n\n\tll LOGG = 25;\n\n\tll n; cin>>n;\n\tvll a(n);\n\tREP(i,0,n){\n\t\tcin>>a[i];\n\t}\n\tvector<vector<ll>> st(LOGG+1, vector<ll> (n));\n\tREP(i,0,n){\n\t\tst[0][i] = a[i];\n\t}\n\tfor(ll i = 1; i<=LOGG; i++){\n\t\tfor(ll j = 0; j + (1<<i) <= n; j++){\n\t\t\tst[i][j] = gcd(st[i-1][j], st[i-1][j + (1<<(i-1))]);\n\t\t}\n\t}\n\tmap<ll,ll> freq;\n\tREP(i,0,n){\n\t\tll al = a[i];\n\t\tll curr = st[0][i];\n\t\tll r = i;\n\t\twhile(r < n){\n\t\t\tll lo = i-1;\n\t\t\tll hi = n-1;\n\t\t\twhile(lo < hi){\n\t\t\t\tll mid = lo + (hi - lo +1)/2;\n\t\t\t\tif(f(st, i, mid) < curr){\n\t\t\t\t\thi = mid - 1;\n\t\t\t\t} else{\n\t\t\t\t\tlo = mid;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfreq[curr] += lo - r + 1;\n\t\t\tr = lo+1; \n\t\t\tif(r<n) curr = f(st, i, r);\n\t\t}\n\t}\n\tll q; cin>>q;\n\twhile(q--){\n\t\tll x; cin>>x;\n\t\tcout<<freq[x]<<endl;\n\t}\n\n    return 0;\n}\n\n//--end--//"
}