{
    "id": 191370543,
    "contestId": 159,
    "creationTimeSeconds": 1675166407,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 159,
        "index": "E",
        "name": "Zebra Tower",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 1700,
        "tags": [
            "*special",
            "data structures",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 159,
        "members": [
            {
                "handle": "Flatday"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1331280000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 139,
    "memoryConsumedBytes": 11878400,
    "source": "#include <bits/stdc++.h>\n#ifndef ONLINE_JUDGE\n#include \"Debug.h\"\n#else\n#define debug(...)\n#endif\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\nconst double PI = acos(-1.0);\nconst double eps = 1e-8;\nconst int mod = 1e9 + 7;\nconst int maxn = 2e5 + 10;\nstruct node\n{\n    ll c, s;\n    ll id;\n};\nvoid solve()\n{\n    ll n;\n    cin >> n;\n    map<ll, vector<node>> mp;\n    map<ll, pll> ms;\n    for (int i = 1; i <= n; i++)\n    {\n        ll c, s;\n        cin >> c >> s;\n        mp[c].push_back({c, s, i});\n    }\n    vector<pll> vec;\n    for (auto &x : mp)\n        vec.push_back({x.second.size(), x.first});\n    sort(vec.begin(), vec.end(), greater<pll>());\n    ll ans = 0, c1, c2;\n    for (auto &x : vec)\n    {\n        vector<node> &v = mp[x.second];\n        auto cmp = [](const node &xx, const node &yy)\n        {\n            return xx.s > yy.s;\n        };\n        sort(v.begin(), v.end(), cmp);\n        pll mx;\n        if (ms.size())\n        {\n            mx = max(ms[x.first], ms[x.first - 1]);\n        }\n        ll sum = 0;\n        for (int i = 0; i < v.size(); i++)\n        {\n            sum += v[i].s;\n            ms[i] = max(ms[i], {sum, v[i].c});\n        }\n        if (sum + mx.first > ans)\n        {\n            ans = sum + mx.first;\n            c1 = mx.second;\n            c2 = x.second;\n        }\n    }\n    cout << ans << '\\n';\n    vector<ll> res;\n    for (int i = 0; i < mp[c2].size(); i++)\n        res.push_back(mp[c1][i].id), res.push_back(mp[c2][i].id);\n    if (mp[c1].size() != mp[c2].size())\n        res.push_back(mp[c1][mp[c2].size()].id);\n    cout << res.size() << '\\n';\n    for (auto x : res)\n        cout << x << ' ';\n}\n\nint main()\n{\n    ios::sync_with_stdio(0);\n    cin.tie(0), cout.tie(0);\n    int t = 1;\n    // cin >> t;\n    for (int i = 1; i <= t; i++)\n    {\n        debug(i, t);\n        solve();\n    }\n    return 0;\n}"
}