{
    "id": 155697055,
    "contestId": 159,
    "creationTimeSeconds": 1651515265,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 159,
        "index": "E",
        "name": "Zebra Tower",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 1700,
        "tags": [
            "*special",
            "data structures",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 159,
        "members": [
            {
                "handle": "lunch_break"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1331280000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include \"bits/stdc++.h\"\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n#define all(x)      x.begin(), x.end()\r\n#define pb          push_back\r\n#define sz(x)       (int)(x.size())\r\n#define ll          long long\r\n#define fi          first\r\n#define se          second\r\n#define lbd         lower_bound\r\n#define ubd         upper_bound\r\n\r\ntemplate <typename T>\r\nusing ordered_set = tree<T, null_type,\r\n      less<T>, rb_tree_tag,\r\n      tree_order_statistics_node_update>;\r\n\r\nconst int MOD = 1e9 + 7;\r\nconst double eps = 1e-10;\r\nconst long long INF = 1e18;\r\nconst int N = 2e5 + 10;\r\n\r\n\r\nvoid solve() {\r\n\tint n;\r\n\tcin >> n;\r\n\tmap<int, vector<pair<ll, int>>> mp;\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tint x, y;\r\n\t\tcin >> x >> y;\r\n\t\tmp[x].pb({y, i + 1});\r\n\t}\r\n\tvector<vector<pair<ll, int>>> cnt(n);\r\n\tfor (auto &[x, arr] : mp) {\r\n\t\tsort(all(arr), greater<pair<int, int>>());\r\n\t\tcnt[0].pb({arr[0].fi, x});\r\n\t\tfor (int i = 1; i < sz(arr); i++) {\r\n\t\t\tarr[i].fi += arr[i - 1].fi;\r\n\t\t\tcnt[i].pb({arr[i].fi, x});\r\n\t\t}\r\n\t}\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tif (cnt[i].empty()) break;\r\n\t\tsort(all(cnt[i]), greater<pair<ll, int>>());\r\n\t}\r\n\tpair<pair<int, int>, pair<int, int>> ans = {{0, 0}, {0, 0}};\r\n\tfor (int i = 1; i < n; i++) {\r\n\t\tif (cnt[i].empty()) break;\r\n\t\tpair<int, int> x = ans.fi, y = ans.se;\r\n\t\tif (sz(cnt[i]) >= 2 && cnt[x.fi][x.se].fi + cnt[y.fi][y.se].fi\r\n\t\t        < cnt[i][0].fi + cnt[i][1].fi) {\r\n\t\t\tans = {{i, 0}, {i, 1}};\r\n\t\t}\r\n\t\tx = ans.fi, y = ans.se;\r\n\t\tif (cnt[i][0].se != cnt[i - 1][0].se) {\r\n\t\t\tif (cnt[x.fi][x.se].fi + cnt[y.fi][y.se].fi < cnt[i][0].fi + cnt[i - 1][0].fi) {\r\n\t\t\t\tans = {{i - 1, 0}, {i, 0}};\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (sz(cnt[i - 1]) >= 2 && cnt[x.fi][x.se].fi + cnt[y.fi][y.se].fi\r\n\t\t\t        < cnt[i][0].fi + cnt[i - 1][1].fi) {\r\n\t\t\t\tans = {{i - 1, 1}, {i, 0}};\r\n\t\t\t}\r\n\t\t\tx = ans.fi, y = ans.se;\r\n\t\t\tif (sz(cnt[i]) >= 2 && cnt[x.fi][x.se].fi + cnt[y.fi][y.se].fi\r\n\t\t\t        < cnt[i][1].fi + cnt[i - 1][0].fi) {\r\n\t\t\t\tans = {{i - 1, 0}, {i, 1}};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tauto [x, y] = ans;\r\n\tcout << cnt[x.fi][x.se].fi + cnt[y.fi][y.se].fi << '\\n';\r\n\tcout << x.fi + y.fi + 2 << '\\n';\r\n\tvector<int> v(x.fi + y.fi + 2);\r\n\tif (x.fi == y.fi) {\r\n\t\tint a = cnt[x.fi][x.se].se;\r\n\t\tfor (int i = 0; i <= x.fi; i++) {\r\n\t\t\tv[2 * i] = mp[a][i].se;\r\n\t\t}\r\n\t\ta = cnt[y.fi][y.se].se;\r\n\t\tfor (int i = 0; i <= y.fi; i++) {\r\n\t\t\tv[2 * i + 1] = mp[a][i].se;\r\n\t\t}\r\n\t} else {\r\n\t\tint a = cnt[y.fi][y.se].se;\r\n\t\tfor (int i = 0; i <= y.fi; i++) {\r\n\t\t\tv[2 * i] = mp[a][i].se;\r\n\t\t}\r\n\t\ta = cnt[x.fi][x.se].se;\r\n\t\tfor (int i = 0; i <= x.fi; i++) {\r\n\t\t\tv[2 * i + 1] = mp[a][i].se;\r\n\t\t}\r\n\t}\r\n\tfor (auto it : v) cout << it << ' ';\r\n}\r\n\r\nint main() {\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0);\r\n\r\n\tint tt = 1;\r\n\t//cin >> tt;\r\n\twhile (tt--) {\r\n\t\tsolve();\r\n\t\tcout << '\\n';\r\n\t}\r\n\treturn 0;\r\n}"
}