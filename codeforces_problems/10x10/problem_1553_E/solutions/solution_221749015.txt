{
    "id": 221749015,
    "contestId": 1553,
    "creationTimeSeconds": 1693773389,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1553,
        "index": "E",
        "name": "Permutation Shift",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2100,
        "tags": [
            "brute force",
            "combinatorics",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1553,
        "members": [
            {
                "handle": "pranav.02"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1626964500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 49,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 6041600,
    "source": "#include<bits/stdc++.h>\r\ntypedef long long ll;\r\ntypedef long double ld;\r\n#define forf(i, a, b) for (int i = a; i <= b; ++i)\r\n#define frof(i, a, b) for (int i = a; i >= b; --i)\r\n#define pb push_back\r\n#define endl '\\n'\r\n//#define int long long // 256MB ~= 6.7e7 32-bit integers\r\nusing namespace std;\r\nconst int nax = 1e5 + 10;\r\nconst int mod = 1e9 + 7;\r\nconst ll INF = 9e18; \r\nmt19937 rng32(chrono::steady_clock::now().time_since_epoch().count());\r\n// Compiling: g++ -std=c++17 q.cpp -o q , Running: ./q\r\nconst ld one=1.0,epislon=1e-18,pi=acos(-1.0);// use (x>=epsilon) instead of (x>=0.0) if x is a double val\r\n// priority_queue <int, vector<int>, greater<int>> gq; : Priority queue as min heap\r\nvoid solve()\r\n{\r\n   int n,m;\r\n   cin>>n>>m;\r\n   vector<int> p(n+1);\r\n   forf(i,1,n) cin>>p[i];\r\n   vector<int> cnt(n,0);\r\n   forf(i,1,n) {\r\n      if(p[i]<=i) cnt[(n-i+p[i])%n]++;\r\n      else cnt[(p[i]-i)]++;\r\n   }\r\n   vector<int> poss;\r\n   forf(i,0,n-1){\r\n      if(cnt[i]>=(n/3)) poss.pb((n-i)%n);\r\n   }\r\n   sort(poss.begin(),poss.end());\r\n   vector<int> ans;\r\n   for(auto k: poss){\r\n      vector<int> pos(n+1,-1);\r\n      vector<int> v1(n+1);\r\n      forf(i,1,n){\r\n        if(i<=k) v1[i]=n-k+i;\r\n        else v1[i]=i-k;\r\n      }\r\n      forf(i,1,n) pos[v1[i]]=i;\r\n      vector<int> visited(n+1,-1);\r\n      int ops=0,c=0;\r\n      forf(i,1,n){\r\n        if(visited[p[i]]!=-1) continue;\r\n        int x=0,curr=p[i];\r\n        c++;\r\n        while(visited[curr]==-1){\r\n            visited[curr]=c;\r\n            x++;\r\n            curr=p[pos[curr]];\r\n        }        ops+=x-1;\r\n      }\r\n      if(ops<=m){\r\n         ans.pb(k);\r\n      }\r\n   }\r\n   cout<<(int)ans.size()<<\" \";\r\n   for(auto x: ans) cout<<x<<\" \";\r\n   cout<<endl;\r\n}\r\nsigned main()\r\n{\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n    int t = 1;\r\n    cin >> t;\r\n    int c=1;\r\n    while (t--)\r\n        {\r\n         //   cout<<\"Case # \"<<c<<\": \";\r\n            solve();\r\n            c++;\r\n        }\r\n}"
}