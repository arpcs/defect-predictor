{
    "id": 226278307,
    "contestId": 1553,
    "creationTimeSeconds": 1696242989,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1553,
        "index": "E",
        "name": "Permutation Shift",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2100,
        "tags": [
            "brute force",
            "combinatorics",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1553,
        "members": [
            {
                "handle": "michaelmonir"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1626964500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// \u0627\u0646\u0627 \u0627\u0644\u0645\u0634\u0637\u0634\u0637\n//#pragma GCC optimize(\"O3\")\n//#pragma GCC optimize(\"unroll-loops\")\n//#pragma GCC target(\"avx,avx2,fma\")\n#include<bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\n#define int long long\n#define pb push_back\n#define all(v) v.begin(), v.end()\ntypedef long long ll;\n#define compact(v) sort(all(v)); v.erase(unique(all(v)), v.end())\ntypedef pair<int, int> pi;\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<vii> viii;\ntypedef vector<viii> viiii;\n\n\ntypedef vector<bool> vb;\n//#define endl '\\n'\n#define clr(v, d)            memset(v, d, sizeof(v))\n#define max3(a, b, c)         max(a, max(b, c))\nconst int Min = -1e16;\nconst int Max = 1e16;\n\ntypedef tree< pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\n\nvoid dfs(int x, vii &roads, vector<bool> &visited, int &sz)\n{\n    if (visited[x]) return;\n    visited[x] = true;\n    sz++;\n    for (int child : roads[x])\n        dfs(child, roads, visited, sz);\n}\n\nbool check(vector<int> &arr, int k, int m)\n{\n    // arr[i] - pos = k\n    // pos = arr[i] - k\n    int n = arr.size();\n    vii roads(n);\n    for (int i = 0; i < n; i++)\n    {\n        int pos = arr[i]-1 - k + n; pos %= n;\n        roads[i].pb(pos);\n    }\n    vector<bool> visited(n, false);\n    int ans = 0;\n    for (int i = 0; i < n; i++)\n    {\n        if (visited[i]) continue;\n        int sz = 0;\n        dfs(i, roads, visited, sz);\n        ans += sz-1;\n    }\n    return (ans <= m);\n}\n\nvoid solve(int kkkk, int tttt)\n{\n    int n, m; cin >> n >> m;\n    vector<int> arr(n); for (int i = 0; i < n; i++) cin >> arr[i];\n    map<int, int> mapp;\n    for (int i = 0; i < n; i++)\n        mapp[arr[i]-1-i]++;\n    vector<int> answers;\n    for (auto it : mapp)\n    {\n        if (it.second+10 < n/3) continue;\n        int g = -it.first; if (g < 0) g += n;\n        if (check(arr, it.first, m))\n            answers.pb(g);\n    }\n    sort(answers.begin(), answers.end());\n    cout << answers.size() << \" \";\n    for (int i : answers)\n        cout << i << \" \";\n    cout << endl;\n}\n\nvoid fast() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); }\n\nsigned main()\n{\n//    freopen(\"input.txt\",\"rt\",stdin);\n//    freopen(\"output.txt\",\"wt\",stdout);\n    fast();\n\n//    int t = 0, i = 0;\n    int t; cin >> t;\n    for (int i = 1; i <= t; i++)\n    solve(t, i);\n    return 0;\n}"
}