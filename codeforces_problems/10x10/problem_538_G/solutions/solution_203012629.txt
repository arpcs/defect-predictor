{
    "id": 203012629,
    "contestId": 538,
    "creationTimeSeconds": 1682143868,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 538,
        "index": "G",
        "name": "Berserk Robot ",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3100,
        "tags": [
            "constructive algorithms",
            "math",
            "sortings"
        ]
    },
    "author": {
        "contestId": 538,
        "members": [
            {
                "handle": "xukai"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1430064000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 405,
    "memoryConsumedBytes": 143052800,
    "source": "// LUOGU_RID: 108678900\n#include<bits/stdc++.h>\r\n#define int long long\r\n#define double long double\r\nusing namespace std;\r\n\r\nconst int N=2000010,M=800010;\r\nint n,m;\r\n\r\nstruct Point{\r\n\tint p,t,x,y;\r\n\tbool operator<(const Point&a)const{\r\n\t\treturn p<a.p;\r\n\t}\r\n}a[N];\r\n\r\nstruct Seg{\r\n\tdouble a,b;\r\n\tdouble calc(int x){\r\n\t\treturn a*x+b;\r\n\t}\r\n};\r\nstruct LiChao1{\r\n\tstruct Node{\r\n\t\tint ch[2];\r\n\t\tSeg L,R;bool hL,hR;\r\n\t}tr[M];int tot;\r\n\tvoid InsertL(int&p,int l,int r,Seg s){\r\n\t\tif(!p)p=++tot;\r\n\t\tif(!tr[p].hL){\r\n\t\t\ttr[p].L=s;\r\n\t\t\ttr[p].hL=1;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tint mid=(l+r)>>1;\r\n\t\tdouble v1=tr[p].L.calc(mid),v2=s.calc(mid);\r\n\t\tif(v1<v2)swap(tr[p].L,s);\r\n\t\tif(l!=r){\r\n\t\t\tif(tr[p].L.a<s.a){\r\n\t\t\t\tInsertL(tr[p].ch[1],mid+1,r,s);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tInsertL(tr[p].ch[0],l,mid,s);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tvoid InsertR(int&p,int l,int r,Seg s){\r\n\t\tif(!p)p=++tot;\r\n\t\tif(!tr[p].hR){\r\n\t\t\ttr[p].R=s;\r\n\t\t\ttr[p].hR=1;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tint mid=(l+r)>>1;\r\n\t\tdouble v1=tr[p].R.calc(mid),v2=s.calc(mid);\r\n\t\tif(v1>v2)swap(tr[p].R,s);\r\n\t\tif(l!=r){\r\n\t\t\tif(tr[p].R.a>s.a){\r\n\t\t\t\tInsertR(tr[p].ch[1],mid+1,r,s);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tInsertR(tr[p].ch[0],l,mid,s);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tvoid Query(int p,int l,int r,int x,double&L,double&R){\r\n\t\tif(!p)return;\r\n\t\tif(!tr[p].hL&&!tr[p].hR)return;\r\n\t\tif(tr[p].hL){\r\n\t\t\tL=max(L,tr[p].L.calc(x));\r\n\t\t}\r\n\t\tif(tr[p].hR){\r\n\t\t\tR=min(R,tr[p].R.calc(x));\r\n\t\t}\r\n\t\tif(l==r)return;\r\n\t\tint mid=(l+r)>>1;\r\n\t\tif(x<=mid)Query(tr[p].ch[0],l,mid,x,L,R);\r\n\t\telse Query(tr[p].ch[1],mid+1,r,x,L,R);\r\n\t}\r\n}seg;int rt;\r\nvoid Put(int a,int b,int c,int d,int l){\r\n\tassert(d);\r\n\tif(d<0)d=-d,c=-c;\r\n//\tcerr<<\"Condition \"<<a<<' '<<b<<' '<<c<<' '<<d<<' '<<l<<'\\n';\r\n//\tSeg s1={(double)-b/d,(double)(l-a-c)/d},s2={(double)b/d,(double)-(l-a-c)/d};\r\n//\tcerr<<s1.calc(0)<<' '<<s2.calc(0)<<'\\n';\r\n\tseg.InsertR(rt,-m,m,{(double)-b/d,(double)(l-a-c)/d});\r\n\tseg.InsertL(rt,-m,m,{(double)b/d,(double)-(l-a+c)/d});\r\n\tseg.InsertR(rt,-m,m,{(double)b/d,(double)(l+a-c)/d});\r\n\tseg.InsertL(rt,-m,m,{(double)-b/d,(double)-(l+a+c)/d});\r\n}\r\npair<int,int>sol[2][2];bool vis[2][2];\r\nint Ceil(double x){\r\n\tint y=ceil(x);\r\n\tif(y<x)y++;\r\n\tif(y-1>=x)y--;\r\n\treturn y;\r\n}\r\nint Floor(double x){\r\n\tint y=floor(x);\r\n\tif(y>x)y--;\r\n\tif(y+1<=x)y++;\r\n\treturn y;\r\n}\r\nchar ans[N];\r\nbool cons(int l,int r,int x,int y){\r\n\tif(((r-l+1)&1)^(abs(x+y)&1))return false;\r\n\tif(abs(x)+abs(y)>r-l+1){\r\n//\t\tcerr<<\"Strange\\n\";\r\n\t\treturn false;\r\n\t}\r\n\tint cur=l;\r\n\tfor(int i=1;i<=abs(x);i++)ans[cur++]=(x>0?'R':'L');\r\n\tfor(int i=1;i<=abs(y);i++)ans[cur++]=(y>0?'U':'D');\r\n\tfor(int i=1;i<=r-l+1-abs(x)-abs(y);i++)ans[cur++]=((i&1)?'R':'L');\r\n\treturn true;\r\n}\r\nint X(int i,int x){\r\n\treturn a[i].x-a[i].t*x;\r\n}\r\nint Y(int i,int y){\r\n\treturn a[i].y-a[i].t*y;\r\n}\r\nbool check(int x,int y){\r\n//\tcerr<<\"Check \"<<x<<' '<<y<<'\\n';\r\n\tif(!cons(1,a[1].p,X(1,x),Y(1,y)))return false;\r\n\tfor(int i=1;i<n;i++){\r\n\t\tif(!cons(a[i].p+1,a[i+1].p,X(i+1,x)-X(i,x),Y(i+1,y)-Y(i,y)))return false;\r\n\t}\r\n\tif(!cons(a[n].p+1,m,x-X(n,x),y-Y(n,y)))return false;\r\n\tfor(int i=1;i<=m;i++)cout<<ans[i];\r\n\treturn true;\r\n}\r\nsigned main(){\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0);\r\n\tcout.tie(0);\r\n\t\r\n//\tfreopen(\"data.in\",\"r\",stdin);\r\n//\tfreopen(\"data.out\",\"w\",stdout);\r\n\tcin>>n>>m;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tint t;\r\n\t\tcin>>t>>a[i].x>>a[i].y;\r\n\t\ta[i].t=t/m,a[i].p=t%m;\r\n\t\tif(a[i].p==0){\r\n\t\t\ta[i].p=m,a[i].t--;\r\n\t\t}\r\n\t}\r\n\tsort(a+1,a+1+n);\r\n\t\r\n\tif(a[1].t)Put(a[1].x,-a[1].t,a[1].y,-a[1].t,a[1].p);\r\n\tfor(int i=1;i<n;i++){\r\n\t\tif(a[i].t!=a[i+1].t)Put(a[i].x-a[i+1].x,-(a[i].t-a[i+1].t),a[i].y-a[i+1].y,-(a[i].t-a[i+1].t),a[i+1].p-a[i].p);\r\n\t}\r\n\tPut(a[n].x,-(a[n].t+1),a[n].y,-(a[n].t+1),m-a[n].p);\r\n\t\r\n\tfor(int i=-m;i<=m;i++){\r\n\t\tdouble yl=-1e18,yr=1e18;\r\n\t\tseg.Query(rt,-m,m,i,yl,yr);\r\n//\t\tcerr<<\"Range \"<<i<<' '<<yl<<' '<<yr<<'\\n';\r\n\t\tint Yl=Ceil(yl),Yr=Floor(yr);\r\n\t\tif(Yl<=Yr){\r\n\t\t\tfor(int j=Yl;j<=min(Yr,Yl+1);j++)sol[(i%2!=0)][(j%2!=0)]={i,j},vis[(i%2!=0)][(j%2!=0)]=1;\r\n\t\t}\r\n\t}\r\n\tfor(int i=0;i<2;i++)\r\n\t\tfor(int j=0;j<2;j++)\r\n\t\t\tif(vis[i][j]&&check(sol[i][j].first,sol[i][j].second)){\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n//\tif(check(0,0)){\r\n//\t\treturn 0;\r\n//\t}\r\n//\tassert(false);\r\n\tcout<<\"NO\";\r\n}"
}