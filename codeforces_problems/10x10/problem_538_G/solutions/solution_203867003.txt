{
    "id": 203867003,
    "contestId": 538,
    "creationTimeSeconds": 1682743692,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 538,
        "index": "G",
        "name": "Berserk Robot ",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3100,
        "tags": [
            "constructive algorithms",
            "math",
            "sortings"
        ]
    },
    "author": {
        "contestId": 538,
        "members": [
            {
                "handle": "Matutino"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1430064000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#define reg register\r\n#define int long long\r\ninline int read(){\r\n\treg int k=1,x=0;char ch=getchar();\r\n\twhile (ch<'0'||ch>'9'){if(ch=='-') k=-1;ch=getchar();}\r\n\twhile (ch>='0'&&ch<='9') x=(x<<3)+(x<<1)+ch-48,ch=getchar();\r\n\treturn k*x;\r\n}\r\ninline bool cmax(reg int &x,reg int y){return x<y?x=y,1:0;}\r\ninline bool cmin(reg int &x,reg int y){return x>y?x=y,1:0;}\r\nconst int N=2e5+10,INF=4e18;\r\n#define Fail printf(\"NO\"), exit(0)\r\nint n,m,lx=-INF,rx=INF,ly=-INF,ry=INF,P,q;\r\nstruct Node{\r\n\tint t,x,y,d,k;\r\n\r\n\tinline void in() {\r\n\t\t// t=read(), p=read(), q=read();\r\n\t\tscanf(\"%lld %lld %lld\",&t,&P,&q);\r\n\t\t// printf(\"%lld %lld %lld\\n\",t,p,q);\r\n\t\tif ((t ^ p ^ q) & 1) Fail;\r\n\t\td = t / m, k = t % m;\r\n\t\tx = (p + q + t) / 2, y = (q - p + t) / 2;\r\n\t}\r\n\r\n\tinline bool operator<(const Node &rhs)const{return k<rhs.k;}\r\n}p[N];\r\n \r\nsigned main(){\r\n\tscanf(\"%lld %lld\",&n,&m);\r\n\tfor (reg int i=1;i<=n;i++) p[i].in();\r\n \tstd::sort(p+1,p+n+1),++n,p[n].d=-1,p[n].k=m; \r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tint d = p[i].d - p[i-1].d;\r\n\t\tint k = p[i].k - p[i-1].k;\r\n\t\tif (!d) {\r\n\t\t\tif (p[i].x - p[i-1].x - k > 0 || p[i].x - p[i-1].x < 0) Fail;\r\n\t\t\tif (p[i].y - p[i-1].y - k > 0 || p[i].y - p[i-1].y < 0) Fail;\r\n\t\t} else if (d > 0) {\r\n\t\t\tlx = std::max(lx, (int)ceil(1.0L * (p[i].x - p[i-1].x - k) / d));\r\n\t\t\trx = std::min(rx, (int)floor(1.0L * (p[i].x - p[i-1].x) / d));\r\n\t\t\tly =std:: max(ly, (int)ceil(1.0L * (p[i].y - p[i-1].y - k) / d));\r\n\t\t\try =std:: min(ry, (int)floor(1.0L * (p[i].y - p[i-1].y) / d));\r\n\t\t} else {\r\n\t\t\td *= -1;\r\n\t\t\tlx = std::max(lx, (int)ceil(1.0L * (p[i-1].x - p[i].x) / d));\r\n\t\t\trx = std::min(rx, (int)floor(1.0L * (p[i-1].x - p[i].x + k) / d));\r\n\t\t\tly = std::max(ly, (int)ceil(1.0L * (p[i-1].y - p[i].y) / d));\r\n\t\t\try = std::min(ry, (int)floor(1.0L * (p[i-1].y - p[i].y + k) / d));\r\n\t\t}\r\n\t}\r\n\tif (lx>rx||ly>ry) return printf(\"NO\"),0;\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tint dx = (p[i].x - p[i].d * lx) - (p[i-1].x - p[i-1].d * lx);\r\n\t\tint dy = (p[i].y - p[i].d * ly) - (p[i-1].y - p[i-1].d * ly);\r\n\t\tint t = p[i].k - p[i-1].k, x = 0, y = 0;\r\n\t\twhile (t--)\r\n\t\t\tif (x < dx) {\r\n\t\t\t\t++x;\r\n\t\t\t\tif (y < dy) putchar('U'), ++y;\r\n\t\t\t\telse putchar('R');\r\n\t\t\t} else {\r\n\t\t\t\tif (y < dy) putchar('L'), ++y;\r\n\t\t\t\telse putchar('D');\r\n\t\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
}