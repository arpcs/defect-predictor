{
    "id": 217606793,
    "contestId": 538,
    "creationTimeSeconds": 1691414568,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 538,
        "index": "G",
        "name": "Berserk Robot ",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3100,
        "tags": [
            "constructive algorithms",
            "math",
            "sortings"
        ]
    },
    "author": {
        "contestId": 538,
        "members": [
            {
                "handle": "yingluosanqian"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1430064000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 14438400,
    "source": "// LUOGU_RID: 119564588\n#include <bits/stdc++.h>\r\n#define GG std::cout << \"NO\\n\", exit(0)\r\n\r\nusing i64 = int64_t;\r\n\r\nstruct P {\r\n\ti64 t, x, y, d, r;\r\n};\r\n\r\nint main() {\r\n\tstd::ios::sync_with_stdio(false);\r\n\tstd::cin.tie(0);\r\n\tstd::cout.tie(0);\r\n\t\r\n\tint n, len;\r\n\tstd::cin >> n >> len;\r\n\tstd::vector<P> p(n + 2);\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tstd::cin >> p[i].t >> p[i].x >> p[i].y;\r\n\t\tif ((p[i].x ^ p[i].y ^ p[i].t) & 1) GG;\r\n\t\tstd::tie(p[i].x, p[i].y) = std::make_pair((p[i].x + p[i].y + p[i].t) / 2, (p[i].y - p[i].x + p[i].t) / 2);\r\n\t\tp[i].d = p[i].t / len;\r\n\t\tp[i].r = p[i].t % len;\r\n\t}\r\n\tstd::sort(p.begin() + 1, p.begin() + n + 1, [&](const auto& l, const auto& r) {\r\n\t\treturn l.r < r.r;\r\n\t\t});\r\n\tp[++n] = {0, 0, 0, -1, len};\r\n\tconst i64 INF = (i64)4e18;\r\n\ti64 xl = -INF, xr = INF, yl = -INF, yr = INF;\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\ti64 div = p[i].d - p[i - 1].d;\r\n\t\ti64 dx = p[i].x - p[i - 1].x;\r\n\t\ti64 dy = p[i].y - p[i - 1].y;\r\n\t\ti64 dr = p[i].r - p[i - 1].r;\r\n\t\tif (div == 0) {\r\n\t\t\tif (!(dx >= 0 && dx <= dr)) GG;\r\n\t\t\tif (!(dy >= 0 && dy <= dr)) GG;\r\n\t\t} else if (div > 0) {\r\n\t\t\txl = std::max(xl, (i64)std::ceil(1.0L * (dx - dr) / div));\r\n\t\t\txr = std::min(xr, (i64)std::floor(1.0L * dx / div));\r\n\t\t\tyl = std::max(yl, (i64)std::ceil(1.0L * (dy - dr) / div));\r\n\t\t\tyr = std::min(yr, (i64)std::floor(1.0L * dy / div));\r\n\t\t} else if (div < 0) {\r\n\t\t\txl = std::max(xl, (i64)std::ceil(1.0L * dx / div));\r\n\t\t\txr = std::min(xr, (i64)std::floor(1.0L * (dx - dr) / div));\r\n\t\t\tyl = std::max(yl, (i64)std::ceil(1.0L * dy / div));\r\n\t\t\tyr = std::min(yr, (i64)std::floor(1.0L * (dy - dr) / div));\r\n\t\t}\r\n\t}\r\n\tif (xl > xr || yl > yr) GG;\r\n\t//\tstd::cerr << xl << ' ' << xr << ' ' << yl << ' ' << yr << '\\n';\r\n\tstd::string ans;\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\ti64 x = 0, y = 0;\r\n\t\ti64 dx = (p[i].x - p[i].d * xl) - (p[i - 1].x - p[i - 1].d * xl);\r\n\t\ti64 dy = (p[i].y - p[i].d * yl) - (p[i - 1].y - p[i - 1].d * yl);\r\n\t\tfor (int j = p[i - 1].r + 1; j <= p[i].r; j++) {\r\n\t\t\tif (x < dx) {\r\n\t\t\t\tif (y < dy) ans.append(1, 'U');\r\n\t\t\t\telse ans.append(1, 'R');\r\n\t\t\t} else {\r\n\t\t\t\tif (y < dy) ans.append(1, 'L');\r\n\t\t\t\telse ans.append(1, 'D');\r\n\t\t\t}\r\n\t\t\tx = std::min(dx, x + 1);\r\n\t\t\ty = std::min(dy, y + 1);\r\n\t\t}\r\n\t}\r\n\tstd::cout << ans << '\\n';\r\n\t\r\n\treturn 0;\r\n}\r\n"
}