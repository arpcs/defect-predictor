{
    "id": 213234115,
    "contestId": 1693,
    "creationTimeSeconds": 1689059516,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1693,
        "index": "E",
        "name": "Outermost Maximums",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3400,
        "tags": [
            "data structures",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1693,
        "members": [
            {
                "handle": "Zzt13579"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1655390100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 42,
    "timeConsumedMillis": 108,
    "memoryConsumedBytes": 9625600,
    "source": "// LUOGU_RID: 114889274\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef double db;\n\ntemplate<typename T>void read(T&num){\n    int f=1,ch=getchar();num=0;\n    while(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\n    while(isdigit(ch)){num=num*10+(ch^48);ch=getchar();}\n    num=num*f;\n}\n\nconst int MAXN=2e5+5;\nint n,a[MAXN],tr[MAXN];\nll ans;\nvector<int>p[MAXN];\nvoid add(int x){for(;x<=n;x+=x&-x)tr[x]++;}\nint query(int x){int res=0;for(;x;x-=x&-x)res+=tr[x];return res;}\n\nint main(){\n    read(n);\n    for(int i=1;i<=n;i++){\n        read(a[i]);p[a[i]].push_back(i);\n    }\n    for(int i=n,l=1,r=n;i;i--)if(!p[i].empty()){\n        int L=p[i][0],R=p[i].back();ans+=(int)p[i].size();\n        ans+=query(R)-query(L);\n        if(r<L){ans+=query(L)-query(r);l=r+1;r=R;}\n        else if(R<l){ans+=query(l-1)-query(R);r=l-1;l=L;}\n        else {l=L;r=R;}\n        for(int u:p[i])add(u);\n    }\n    cout<<ans<<'\\n';\n    return 0;\n}\n"
}