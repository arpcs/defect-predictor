{
    "id": 225479335,
    "contestId": 1693,
    "creationTimeSeconds": 1695803973,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1693,
        "index": "E",
        "name": "Outermost Maximums",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3400,
        "tags": [
            "data structures",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1693,
        "members": [
            {
                "handle": "_LiMLE_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1655390100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 42,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 32563200,
    "source": "// LUOGU_RID: 126324849\n#include<bits/stdc++.h>\r\n#define int long long\r\n#define IL inline \r\n#define FOR(i, s, t) for(int i = (s); i <= (t); ++i)\r\n#define ROF(i, s, t) for(int i = (s); i >= (t); --i)\r\n#define pb push_back\r\n\r\nusing namespace std;\r\n\r\nconst int N = 1e6 + 5;\r\n\r\nint n;\r\nint a[N];\r\nvector<int> V[N];\r\n\r\nnamespace BIT {\r\n    int BIT[N];\r\n\r\n    IL int lowbit(int x) {\r\n        return x & (-x);\r\n    }\r\n\r\n    IL void update(int x, int k) {\r\n        for(int i = x; i <= n; i += lowbit(i)) BIT[i] += k;\r\n        return;\r\n    }\r\n\r\n    IL int query(int x) {\r\n        int Ansn = 0;\r\n        for(int i = x; i >= 1; i -= lowbit(i)) Ansn += BIT[i];\r\n        return Ansn;\r\n    }\r\n}\r\n\r\nsigned main() {\r\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n    cin >> n;\r\n    FOR(i, 1, n) cin >> a[i], V[a[i]].pb(i);\r\n    int l = 1, r = n, Ansn = 0;\r\n    ROF(k, n, 1) {\r\n        if(!V[k].size()) continue;\r\n        int L = V[k][0], R = V[k].back();   \r\n        Ansn += V[k].size();\r\n        Ansn += BIT::query(R) - BIT::query(L - 1);\r\n        if(r < L) Ansn += BIT::query(L) - BIT::query(r), l = r + 1, r = R;\r\n        else if(R < l) Ansn += BIT::query(l - 1) - BIT::query(R), r = l - 1, l = L;\r\n        else l = L, r = R;\r\n        for(int t : V[k]) BIT::update(t, 1);\r\n    }\r\n    cout << Ansn << '\\n';\r\n    return 0;\r\n}"
}