{
    "id": 216823920,
    "contestId": 1693,
    "creationTimeSeconds": 1690967717,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1693,
        "index": "E",
        "name": "Outermost Maximums",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3400,
        "tags": [
            "data structures",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1693,
        "members": [
            {
                "handle": "QAQ_QWQ"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1655390100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 42,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 9625600,
    "source": "// LUOGU_RID: 118643799\n#include<bits/stdc++.h>\r\nusing namespace std;\r\ninline int read(){\r\n\tint sum=0,d=1;\r\n\tchar c=getchar();\r\n\twhile(c<'0'||c>'9'){\r\n\t\tif(c=='-')d=-1;\r\n\t\tc=getchar();\r\n\t}\r\n\twhile(c>='0'&&c<='9'){\r\n\t\tsum=sum*10+c-'0';\r\n\t\tc=getchar();\r\n\t}\r\n\treturn sum*d;\r\n}\r\n#define maxn 200009\r\nint n,a[maxn];\r\n#define pb push_back\r\nvector<int > id[maxn];\r\nint tre[maxn];\r\nvoid add(int x,int w){\r\n\twhile(x<maxn){\r\n\t\ttre[x]+=w;\r\n\t\tx+=x&(-x);\r\n\t}\r\n\treturn ;\r\n}\r\nint quer(int x){\r\n\tint sum=0;\r\n\twhile(x){\r\n\t\tsum+=tre[x];\r\n\t\tx-=x&(-x);\r\n\t}\r\n\treturn sum;\r\n}\r\nlong long ans=0;\r\nint main(){\r\n//\tfreopen(\".in\",\"r\",stdin);\r\n//\tfreopen(\".out\",\"w\",stdout);\r\n\tn=read();\r\n\tfor(int i=1;i<=n;i++)a[i]=read(),id[a[i]].pb(i);\r\n\tint l=1,r=n;\r\n\tfor(int i=n;i;i--)if(!id[i].empty()){\r\n\t\tint nl=*id[i].begin(),nr=id[i].back();\r\n\t\tans+=id[i].size();\r\n\t\tans+=quer(nr)-quer(nl);\r\n\t\tif(r<nl)ans+=quer(nl)-quer(r),l=r+1,r=nr;\r\n\t\telse if(nr<l)ans+=quer(l-1)-quer(nr),r=l-1,l=nl;\r\n\t\telse l=nl,r=nr;\r\n\t\tfor(auto x:id[i])add(x,1);\r\n\t}\r\n\tcout<<ans;\r\n//\tfclose(stdin);\r\n//\tfclose(stdout);\r\n\treturn 0;\r\n}"
}