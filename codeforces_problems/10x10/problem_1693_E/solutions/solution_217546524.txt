{
    "id": 217546524,
    "contestId": 1693,
    "creationTimeSeconds": 1691388893,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1693,
        "index": "E",
        "name": "Outermost Maximums",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3400,
        "tags": [
            "data structures",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1693,
        "members": [
            {
                "handle": "cqbzly"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1655390100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#define ll long long\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n#define inf 0x3f3f3f3f\r\nusing namespace std;\r\nconst int N=2e5+5;\r\nint n,a[N];\r\nvector<int>nums[N];\r\nint sz;\r\nll res;\r\nstruct Data{\r\n    int a11,a12,a21,a22,a33;\r\n    Data(){a11=a22=a33=0,a12=a21=inf;}\r\n    Data operator +(const Data &r)const{\r\n        Data res;\r\n        res.a11=min(a11+r.a11,a12+r.a21);\r\n        res.a12=min(a11+r.a12,a12+r.a22);\r\n        res.a21=min(a21+r.a11,a22+r.a21);\r\n        res.a22=min(a21+r.a12,a22+r.a22);\r\n        res.a33=a33+r.a33;\r\n        return res;\r\n    }\r\n};\r\nData t[N<<2];\r\nvoid pushdown(int p){\r\n    t[p<<1]=t[p<<1]+t[p],t[p<<1|1]=t[p<<1|1]+t[p];\r\n    t[p].a11=t[p].a22=t[p].a33=0,t[p].a12=t[p].a21=inf;\r\n}\r\nvoid update(int p,int l,int r,int ql,int qr,Data x){\r\n    if(ql<=l&&r<=qr){\r\n        t[p]=t[p]+x;\r\n        return;\r\n    }\r\n    int mid=l+r>>1;pushdown(p);\r\n    if(ql<=mid)update(p<<1,l,mid,ql,qr,x);\r\n    if(mid<qr)update(p<<1|1,mid+1,r,ql,qr,x);\r\n}\r\nint query(int p,int l,int r,int x){\r\n    if(l==r)return min({t[p].val.a11,t[p].val.a12,t[p].val.a21,t[p].val.a22});\r\n    int mid=l+r>>1;pushdown(p);\r\n    return x<=mid?query(p<<1,l,mid,x):query(p<<1|1,mid+1,r,x);\r\n}\r\nint main(){\r\n    //freopen(\"onesan1.in\",\"r\",stdin);\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0),cout.tie(0);\r\n    cin>>n;for(int i=1;i<=n;i++)cin>>a[i],nums[a[i]].pb(i);\r\n    for(int i=1;i<=n;i++){\r\n        sz=nums[i].size();if(sz==0)continue;\r\n        for(int j=0;j<sz;j++)res+=query(1,1,n,nums[i][j])+1;\r\n        update(1,1,n,nums[i][0],n,{1,inf,inf,0,0});\r\n        update(1,1,n,1,nums[i].back(),{0,inf,inf,1,0});\r\n        update(1,1,n,1,nums[i].back(),{0,inf,0,0,0});\r\n        update(1,1,n,nums[i][0],n,{0,0,inf,0,0});\r\n    }cout<<res;\r\n}"
}