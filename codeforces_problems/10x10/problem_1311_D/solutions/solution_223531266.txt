{
    "id": 223531266,
    "contestId": 1311,
    "creationTimeSeconds": 1694806003,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1311,
        "index": "D",
        "name": "Three Integers",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "brute force",
            "math"
        ]
    },
    "author": {
        "contestId": 1311,
        "members": [
            {
                "handle": "de_coding_life"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1582554900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 103,
    "timeConsumedMillis": 327,
    "memoryConsumedBytes": 0,
    "source": "/*\r\n|| \u0950 \u0924\u094d\u0930\u094d\u092f\u092e\u094d\u092c\u0915\u0902 \u092f\u091c\u093e\u092e\u0939\u0947 \u0938\u0941\u0917\u0928\u094d\u0927\u093f\u0902 \u092a\u0941\u0937\u094d\u091f\u093f\u0935\u0930\u094d\u0927\u0928\u092e\u094d \u0909\u0930\u094d\u0935\u093e\u0930\u0941\u0915\u092e\u093f\u0935 \u092c\u0928\u094d\u0927\u0928\u093e\u0928\u094d\u092e\u0943 \u0924\u094d\u092f\u094b\u0930\u094d\u092e\u0941\u0915\u094d\u0937\u0940\u092f \u092e\u093e\u092e\u0943\u0924\u093e\u0924\u094d ||\r\n*/\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n// Policy Based Data Structure\r\n// Note:Upper Bound would work as lower bound and vice versa\r\n//  Find won't work in less_equal, so use find_by_order(order_of_key(a[i]))\r\n//  OR store pairs in less\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\ntemplate <class T>\r\nusing pbds = tree<T, null_type, less_equal<T>, rb_tree_tag,\r\n\t\t\t\t  tree_order_statistics_node_update>;\r\n#define ld long double\r\n#define md 1000000007\r\n#define vll vector<ll>\r\n#define v2(dt, name, n, m, ini) vector<vector<dt>> name(n, vector<dt>(m, ini))\r\n#define pll pair<ll, ll>\r\n#define pb push_back\r\n#define ub upper_bound\r\n#define lb lower_bound\r\n#define endl \"\\n\"\r\n#define fori(i, xx, yy) for (int i = xx; i < yy; i++)\r\n#define forl(i, xx, yy) for (ll i = xx; i < yy; i++)\r\n#define forir(i, xx, yy) for (int i = xx; i >= yy; i--)\r\n#define forlr(i, xx, yy) for (ll j = xx; j >= yy; j--)\r\n#define all(i) i.begin(), i.end()\r\n#define yn(i)            \\\r\n\tif (i)               \\\r\n\t\tcout << \"YES\\n\"; \\\r\n\telse                 \\\r\n\t\tcout << \"NO\\n\";\r\n#define debug(i) cout << #i << \" = \" << i << endl\r\nint main()\r\n{\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(0);\r\n\tint t = 1;\r\n\tcin >> t;\r\n\tfor (int ii = 1; ii <= t; ii++)\r\n\t{\r\n\t\tll a, b, c;\r\n\t\tcin >> a >> b >> c;\r\n\t\tll ans = INT_MAX;\r\n\t\tll na, nb, nc;\r\n\t\tfor (int i = 1; i <= 30000; i++)\r\n\t\t{\r\n\t\t\tfor (int j = i; j <= 30000; j += i)\r\n\t\t\t{\r\n\t\t\t\tll curr = abs(i - a) + abs(j - b) + c % j;\r\n\t\t\t\tif (curr < ans && c / j != 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tans = curr;\r\n\t\t\t\t\tna = i;\r\n\t\t\t\t\tnb = j;\r\n\t\t\t\t\tnc = (c / j) * j;\r\n\t\t\t\t}\r\n\t\t\t\tcurr = abs(i - a) + abs(j - b) + (j - c % j);\r\n\t\t\t\tif (curr < ans)\r\n\t\t\t\t{\r\n\t\t\t\t\tans = curr;\r\n\t\t\t\t\tna = i;\r\n\t\t\t\t\tnb = j;\r\n\t\t\t\t\tnc = ((c / j) + 1) * j;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcout << ans << endl;\r\n\t\tcout << na << \" \" << nb << \" \" << nc << endl;\r\n\t}\r\n\treturn 0;\r\n}\r\n/*\r\n|| \u0950 \u0924\u094d\u0930\u094d\u092f\u092e\u094d\u092c\u0915\u0902 \u092f\u091c\u093e\u092e\u0939\u0947 \u0938\u0941\u0917\u0928\u094d\u0927\u093f\u0902 \u092a\u0941\u0937\u094d\u091f\u093f\u0935\u0930\u094d\u0927\u0928\u092e\u094d \u0909\u0930\u094d\u0935\u093e\u0930\u0941\u0915\u092e\u093f\u0935 \u092c\u0928\u094d\u0927\u0928\u093e\u0928\u094d\u092e\u0943 \u0924\u094d\u092f\u094b\u0930\u094d\u092e\u0941\u0915\u094d\u0937\u0940\u092f \u092e\u093e\u092e\u0943\u0924\u093e\u0924\u094d ||\r\n*/"
}