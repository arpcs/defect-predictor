{
    "id": 145179514,
    "contestId": 856,
    "creationTimeSeconds": 1644023323,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 856,
        "index": "C",
        "name": "Eleventh Birthday",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ]
    },
    "author": {
        "contestId": 856,
        "members": [
            {
                "handle": "kevinyang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1505050500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 32051200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nvector<int>fact(2000010);\r\nvector<int>inv(2000010);\r\nconst int mod = 998244353;\r\nint modpow(int x, int y) {\r\n\treturn !y?1:((y % 2 ? x : 1) * modpow((x * x) % mod, y / 2)) % mod;\r\n}\r\nint choose(int x, int y){\r\n\tif(y>x)return 0;\r\n\treturn (fact[x]*inv[y]%mod)*inv[x-y]%mod;\r\n}\r\nint permute(int x, int y){\r\n\tif(y>x)return 0;\r\n\treturn (fact[x]*inv[x-y])%mod;\r\n}\r\nvoid precalc(){\r\n\tfact[0] = 1; inv[0] = 1;\r\n\tfor(int i = 1; i<=2000000; i++){\r\n\t\tfact[i] = fact[i-1]*i%mod;\r\n\t}\r\n\tinv[2000000] = modpow(fact[2000000],mod-2);\r\n\tfor(int i = 1999999; i>0; i--){\r\n\t\tinv[i] = inv[i+1]*(i+1)%mod;\r\n\t}\r\n}\r\nsigned main(){\r\n\tcin.tie(nullptr)->sync_with_stdio(false); precalc();\r\n\tint t;\r\n\tcin >> t;\r\n\twhile(t--){\r\n\t\tint n;\r\n\t\tcin >> n;\r\n\t\tint odd = 0; int even = 0;\r\n\t\tvector<int>arr(n+1);\r\n\t\tfor(int i = 1; i<=n; i++){\r\n\t\t\tcin >> arr[i];\r\n\t\t}\r\n\t\tvector<int>odds;\r\n\t\todds.push_back(0);\r\n\t\tvector<int>evens;\r\n\t\tevens.push_back(0);\r\n\t\tvector<vector<int>>freq(2,vector<int>(11));\r\n\t\tfor(int i = 1; i<=n; i++){\r\n\t\t\tstring s = to_string(arr[i]);\r\n\t\t\tfreq[(int)s.size()%2][arr[i]%11]++;\r\n\t\t\tif((int)s.size()%2==0){\r\n\t\t\t\teven++;\r\n\t\t\t\tevens.push_back(arr[i]%11);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\todd++;\r\n\t\t\t\todds.push_back(arr[i]%11);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(odd==0){\r\n\t\t\tint sum = 0;\r\n\t\t\tfor(int i = 1; i<=n; i++){\r\n\t\t\t\tsum+=arr[i];\r\n\t\t\t}\r\n\t\t\tsum%=11;\r\n\t\t\tif(sum==0){\r\n\t\t\t\tcout << fact[n] << \"\\n\";\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tcout << \"0\\n\";\r\n\t\t\t}\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tvector<vector<vector<int>>>dp(odd+1,vector<vector<int>>(odd+1,vector<int>(11)));\r\n\t\tvector<vector<vector<int>>>dp2(odd+1,vector<vector<int>>(odd+1,vector<int>(11)));\r\n\t\tdp[0][0][0] = 1;\r\n\t\tfor(int i = 1; i<=odd; i++){\r\n\t\t\tfor(int j = 0; j<odd; j++){\r\n\t\t\t\tfor(int k = 0; k<11; k++){\r\n\t\t\t\t\tdp[i][j+1][(k+odds[i])%11]+=dp[i-1][j][k];\r\n\t\t\t\t\tdp[i][j+1][(k+odds[i])%11]%=mod;\r\n\t\t\t\t\tdp[i][j][(k+11-odds[i])%11]+=dp[i-1][j][k];\r\n\t\t\t\t\tdp[i][j][(k+11-odds[i])%11]%=mod;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tdp2[0][0][0] = 1;\r\n\t\t\r\n\t\tfor(int i = 1; i<=even; i++){\r\n\t\t\tfor(int j = 0; j<even; j++){\r\n\t\t\t\tfor(int k = 0; k<11; k++){\r\n\t\t\t\t\tdp2[i][j+1][(k+evens[i])%11]+=dp2[i-1][j][k];\r\n\t\t\t\t\tdp2[i][j+1][(k+evens[i])%11]%=mod;\r\n\t\t\t\t\tdp2[i][j][(k+11-evens[i])%11]+=dp2[i-1][j][k];\r\n\t\t\t\t\tdp2[i][j][(k+11-evens[i])%11]%=mod;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tint ans = 0;\r\n\t\tfor(int i = 0; i<=even; i++){\r\n\t\t\tfor(int k = 0; k<11; k++){\r\n\t\t\t\tint val = dp2[even][i][k]*dp[odd][(odd+1)/2][(11-k)%11]%mod;\r\n\t\t\t\tval*=choose(i+odd/2+1-1,odd/2+1-1); val%=mod;\r\n\t\t\t\tval*=fact[i]; val%=mod;\r\n\t\t\t\tval*=choose(even-i+(odd+1)/2-1,(odd+1)/2-1); val%=mod;\r\n\t\t\t\tval*=fact[even-i]; val%=mod;\r\n\t\t\t\tval*=fact[odd/2]; val%=mod;\r\n\t\t\t\tval*=fact[(odd+1)/2]; val%=mod;\r\n\t\t\t\tans+=val; ans%=mod;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcout << ans << \"\\n\";\r\n\t}\r\n\treturn 0;\r\n}\r\n/*\r\ntwo properties for a number\r\nproperty 1 is the parity of length of the original number\r\neven length doesn't affect anything on the other numbers \r\nodd length changes sign on the numbers in front of it in decimal notation\r\n\r\nproperty 2 is the modulo 11 value \r\ndo dp on this \r\nlike n^2 * 11\r\nor something \r\nidk\r\n\r\nhow to do dp on odd positioning \r\n\r\n\r\n*/"
}