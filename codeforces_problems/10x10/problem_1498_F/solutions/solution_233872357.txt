{
    "id": 233872357,
    "contestId": 1498,
    "creationTimeSeconds": 1700722837,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1498,
        "index": "F",
        "name": "Christmas Game",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2500,
        "tags": [
            "bitmasks",
            "data structures",
            "dfs and similar",
            "dp",
            "games",
            "math",
            "trees"
        ]
    },
    "author": {
        "contestId": 1498,
        "members": [
            {
                "handle": "Yang_Rick"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1617028500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 25292800,
    "source": "// LUOGU_RID: 136458411\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define pb push_back\r\n#define pa pair<int,int>\r\n#define mp make_pair\r\n#define fi first\r\n#define se second\r\ninline int read()\r\n{\r\n\tint x=0,f=1;\r\n\tchar ch=getchar();\r\n\twhile(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\r\n\twhile(isdigit(ch)){x=x*10+ch-'0';ch=getchar();}\r\n\treturn x*f;\r\n}\r\ninline ll lread()\r\n{\r\n\tll x=0,f=1;\r\n\tchar ch=getchar();\r\n\twhile(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\r\n\twhile(isdigit(ch)){x=x*10+ch-'0';ch=getchar();}\r\n\treturn x*f;\r\n}\r\nvoid file()\r\n{\r\n\tstring file_name=\"\";\r\n\tfreopen((file_name+\".in\").c_str(),\"r\",stdin);\r\n\tfreopen((file_name+\".out\").c_str(),\"w\",stdout);\r\n}\r\nconst int N=1e5+10,K=20+10;\r\nint n,k;\r\nbool a[N];\r\nvector<int>e[N];\r\nbool f[N][K][2];\r\nbool ans[N];\r\nvoid merge(int x,int y)\r\n{\r\n\tfor(int i=0;i<k;i++)\r\n\t\tfor(int j=0;j<2;j++)\r\n\t\t\tf[x][(i+1)%k][j^((i+1)/k)]^=f[y][i][j];\r\n}\r\nvoid dfs1(int x,int fa)\r\n{\r\n\tf[x][0][0]=a[x];\r\n\tfor(auto y:e[x])\r\n\t{\r\n\t\tif(y==fa)continue;\r\n\t\tdfs1(y,x);\r\n\t\tmerge(x,y);\r\n\t}\r\n}\r\nvoid dfs2(int x,int fa)\r\n{\r\n\tif(fa)merge(x,fa);\r\n\tbool g[K][2];\r\n\tmemcpy(g,f[x],sizeof(f[x]));\r\n\tfor(auto y:e[x])\r\n\t{\r\n\t\tif(y==fa)continue;\r\n\t\tmerge(x,y);\r\n\t\tdfs2(y,x);\r\n\t\tmemcpy(f[x],g,sizeof(g));\r\n\t}\r\n}\r\nsigned main()\r\n{\r\n\t// file();\r\n\tn=read(),k=read();\r\n\tfor(int i=1;i<=n-1;i++)\r\n\t{\r\n\t\tint x=read(),y=read();\r\n\t\te[x].pb(y);\r\n\t\te[y].pb(x);\r\n\t}\r\n\tfor(int i=1;i<=n;i++)a[i]=read()&1;\r\n\tdfs1(1,0);\r\n\tdfs2(1,0);\r\n\tfor(int x=1;x<=n;x++)\r\n\t{\r\n\t\tbool ans=0;\r\n\t\tfor(int i=0;i<k;i++)ans^=f[x][i][1];\r\n\t\tprintf(\"%d \",ans);\r\n\t}\r\n\treturn 0;\r\n}"
}