{
    "id": 233357463,
    "contestId": 1774,
    "creationTimeSeconds": 1700340096,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1774,
        "index": "F2",
        "name": "Magician and Pigs (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1774,
        "members": [
            {
                "handle": "juliany2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1671287700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 19251200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nusing ll = long long;\r\n#define all(x) (x).begin(), (x).end()\r\n\r\nconst int N = 8e5 + 7, mod = 998244353;\r\nint n;\r\nll a[N], d[N], o[N];\r\n\r\nll binpow(ll x, ll y) {\r\n    ll ret = 1;\r\n    for (; y; y >>= 1, (x *= x) %= mod)\r\n        if(y & 1)\r\n            (ret *= x) %= mod;\r\n    return ret;\r\n}\r\n\r\nint main() {\r\n    cin.tie(0)->sync_with_stdio(false);\r\n\r\n    memset(o, -1, sizeof(o));\r\n\r\n    cin >> n;\r\n\r\n    ll sum = 0;\r\n    for (int i = 1; i <= n; i++) {\r\n        int t;\r\n        cin >> t;\r\n\r\n        if (t == 1) {\r\n            int x;\r\n            cin >> x;\r\n\r\n            a[i] = x;\r\n        }\r\n        else if (t == 2) {\r\n            int x;\r\n            cin >> x;\r\n\r\n            sum = min(sum + x, (ll) 2e9);\r\n            d[i] = x;\r\n        }\r\n        else {\r\n            o[i] = sum;\r\n            sum = min(sum * 2, (ll) 2e9);\r\n        }\r\n    }\r\n\r\n    ll ans = 0, rem = 0;\r\n    vector<ll> p;\r\n\r\n    for (int i = n; i >= 1; i--) {\r\n        rem += d[i];\r\n        if (~o[i] && o[i] <= 1e9)\r\n            p.push_back(o[i]);\r\n\r\n        if (a[i]) {\r\n            if (a[i] >= rem) {\r\n                a[i] -= rem;\r\n\r\n                ll ways = 1;\r\n                for (int j = 0; j < p.size(); j++) {\r\n                    if (a[i] > p[j]) {\r\n                        a[i] -= p[j];\r\n                        (ways += binpow(2, (int) p.size() - j - 1)) %= mod;\r\n                    }\r\n                }\r\n\r\n                (ans += ways) %= mod;\r\n            }\r\n        }\r\n    }\r\n\r\n    cout << ans << '\\n';\r\n\r\n    return 0;\r\n}\r\n\r\n"
}