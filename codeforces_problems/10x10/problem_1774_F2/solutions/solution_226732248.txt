{
    "id": 226732248,
    "contestId": 1774,
    "creationTimeSeconds": 1696507811,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1774,
        "index": "F2",
        "name": "Magician and Pigs (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1774,
        "members": [
            {
                "handle": "adam01"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1671287700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 23961600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\n\r\n#define int ll\r\n\r\nconst int N = 2e5 + 5, p = 998244353;\r\nint a[N], pos[N], w[N], h, n;\r\nint suf[N], d[N], sz[N];\r\nint xop[N], xv[N], p2[N], e[N], sw[N];\r\n\r\nusing pii = pair<int, int>;\r\nvector<pii> v;\r\n\r\nsigned main()\r\n{\r\n    ios::sync_with_stdio(0);cin.tie(0);\r\n    cin >> n;\r\n\r\n    p2[0] = 1;\r\n    for(int i = 1; i <= n; i ++) p2[i] = p2[i - 1] * 2 % p;\r\n\r\n    int sdel = 0;\r\n    for(int i = 1; i <= n; i ++)\r\n    {\r\n        int op, x;cin >> op;\r\n        xop[i] = op;\r\n        if(op == 1) cin >> x, v.push_back({i, x});\r\n        else if(op == 2) cin >> x, sdel += x, xv[i] = x;\r\n        else a[++h] = 2, pos[h] = i, w[h] = sdel, sdel = 0;\r\n    }\r\n    a[++h] = 1, pos[h] = n + 1, w[h] = sdel, sdel = 0;\r\n\r\n    for(int i = 1; i <= h; i ++)\r\n        e[i] = min((ll)(1e9), e[i - 1] * a[i] + w[i]);\r\n    for(int i = h; i >= 1; i --)\r\n        sw[i] = min((ll)1e9, sw[i + 1] + w[i]);\r\n    for(int i = 1; i <= h; i ++)\r\n        if(w[i] || i == h)\r\n        {\r\n            for(int j = i - 1; j; j --)\r\n                sz[j] = i - j;\r\n            break;\r\n        }\r\n\r\n    int sum = 0;\r\n    for(int i = n; i; i --)\r\n    {\r\n        if(xop[i] == 3) sum = 0;\r\n        else if(xop[i] == 2) sum += xv[i];\r\n        else d[i] = sum;\r\n    }\r\n\r\n    int ans = 0;\r\n    for(auto i : v)\r\n    {\r\n        int id = i.first, val = i.second;\r\n        int k = lower_bound(pos + 1, pos + h + 1, id) - pos;\r\n        // if(!check(id, k)) break;\r\n        \r\n        int nw = d[id];\r\n        \r\n        val -= nw + sw[k + 1];\r\n        if(val <= 0) continue;\r\n\r\n        // cerr << \":\" << val << \":\";\r\n\r\n        int cnt = p2[sz[k]], k1 = k;\r\n        k += sz[k];\r\n\r\n        int j = min(h - 1, k + 32);\r\n        for(int t = j; t >= k; t --)\r\n        {\r\n            if(val > e[t])\r\n                val -= e[t], (cnt += p2[t - k1]) %= p;//, cerr << \"!\";\r\n            // cerr << e[t] << \" \";\r\n        }\r\n        (ans += cnt) %= p;\r\n        // cerr << cnt << \"\\n\";\r\n    }\r\n    cout << ans;\r\n\r\n    return 0;\r\n}"
}