{
    "id": 223459791,
    "contestId": 1286,
    "creationTimeSeconds": 1694770527,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1286,
        "index": "C2",
        "name": "Madhouse (Hard version)",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2800,
        "tags": [
            "brute force",
            "constructive algorithms",
            "hashing",
            "interactive",
            "math"
        ]
    },
    "author": {
        "contestId": 1286,
        "members": [
            {
                "handle": "Liuxizai"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1578233100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 47,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 102400,
    "source": "// LUOGU_RID: 124776773\n#include <bits/stdc++.h>\r\n#define File(name) freopen(#name\".in\", \"r\", stdin); freopen(#name\".out\", \"w\", stdout);\r\nusing namespace std;\r\nusing ll = long long;\r\nusing ull = unsigned long long;\r\ntemplate<typename T>\r\ninline T read(){\r\n    T n = 0; int f = 1; char ch = getchar();\r\n    while(!isdigit(ch)){\r\n        if(ch == '-') f = -1;\r\n        ch = getchar();\r\n    }\r\n    while(isdigit(ch)){\r\n        n = n * 10 + ch - '0';\r\n        ch = getchar();\r\n    }\r\n    return f * n;\r\n}\r\ntemplate<typename T>\r\nvoid write(T n){\r\n    if(n / 10) write(n / 10);\r\n    putchar(n % 10 + '0');\r\n}\r\nvoid input() {}\r\ntemplate<typename Type, typename... Types>\r\nvoid input(Type &arg, Types&... args){\r\n    arg = read<Type>();\r\n    input(args...);\r\n}\r\nnamespace Main{\r\n    const int N = 105;\r\n    int n;\r\n    char ans[N];\r\n    void Main(){\r\n        cin >> n;\r\n        if(n <= 3){\r\n            for(int i = 1; i <= n; i++){\r\n                cout << \"? \" << i << ' ' << i << endl;\r\n                cin >> ans[i];\r\n            }\r\n        }\r\n        else{\r\n            multiset<string> substr;\r\n            string tmp;\r\n            cout << \"? \" << 1 << ' ' << n / 2 << endl;\r\n            for(int i = 0; i < (n / 2 + 1) * (n / 2) / 2; i++){\r\n                cin >> tmp; sort(tmp.begin(), tmp.end());\r\n                substr.insert(tmp);\r\n            }\r\n            cout << \"? \" << 2 << ' ' << n / 2 << endl;\r\n            for(int i = 0; i < (n / 2) * (n / 2 - 1) / 2; i++){\r\n                cin >> tmp; sort(tmp.begin(), tmp.end());\r\n                substr.erase(substr.find(tmp));\r\n            }\r\n            vector<string> suf(n / 2);\r\n            for(string x: substr) suf[x.size() - 1] = x;\r\n            for(int i = 0; i < n / 2; i++){\r\n                ans[i + 1] = suf[i][0];\r\n                for(int j = i + 1; j < n / 2; j++) suf[j].erase(suf[j].begin() + suf[j].find(suf[i][0]));\r\n            }\r\n            cout << \"? \" << 1 << ' ' << n << endl;\r\n            vector<vector<int>> cnt(n, vector<int>(26)); vector<int> rest(26);\r\n            for(int i = 0; i < (n + 1) * n / 2; i++){\r\n                cin >> tmp;\r\n                for(char c: tmp) cnt[tmp.size() - 1][c - 'a']++;\r\n            }\r\n            rest = cnt[0];\r\n            for(int i = 1; i < (n + 1) / 2; i++){\r\n                vector<char> ch;\r\n                for(int j = 0; j < 26; j++){\r\n                    if(cnt[i][j] != cnt[i - 1][j] + rest[j]){\r\n                        int delta = cnt[i - 1][j] + rest[j] - cnt[i][j];\r\n                        for(int k = 0; k < delta; k++) ch.push_back('a' + j);\r\n                        rest[j] -= delta;\r\n                    }\r\n                }\r\n                assert(ch.size() == 2);\r\n                if(ans[i] == ch[0]) ans[n + 1 - i] = ch[1];\r\n                else ans[n + 1 - i] = ch[0];\r\n            }\r\n            bool flag = n & 1;\r\n            for(int i = 0; i < 26; i++){\r\n                for(int j = 0; j < rest[i]; j++){\r\n                    if(flag) { ans[n + 1 - (n + 1) / 2] = 'a' + i; break; }\r\n                    if(ans[(n + 1) / 2] == 'a' + i) flag = true;\r\n                    else { ans[n + 1 - (n + 1) / 2] = 'a' + i; break; }\r\n                }\r\n            }\r\n        }\r\n        cout << \"! \";\r\n        for(int i = 1; i <= n; i++) cout << ans[i];\r\n        return;\r\n    }\r\n} // namespace Main\r\nint main(){\r\n    Main::Main();\r\n    return 0;\r\n}"
}