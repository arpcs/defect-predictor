{
    "id": 207003461,
    "contestId": 665,
    "creationTimeSeconds": 1684902025,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 665,
        "index": "E",
        "name": "Beautiful Subarrays",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "data structures",
            "divide and conquer",
            "strings",
            "trees"
        ]
    },
    "author": {
        "contestId": 665,
        "members": [
            {
                "handle": "OMG_78"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461164400
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 384716800,
    "source": "// LUOGU_RID: 111121893\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <ext/pb_ds/hash_policy.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n#ifdef LOCAL\r\n#include \"algo/debug.h\"\r\n#else\r\n#define debug(...) 42\r\n#endif\r\ntypedef long long ll;\r\ntypedef pair < int, int > PII;\r\ntypedef int itn;\r\nmt19937 RND_MAKER (chrono :: steady_clock :: now ().time_since_epoch ().count ());\r\ninline ll randomly (const ll l, const ll r) {return (RND_MAKER () ^ (1ull << 63)) % (r - l + 1) + l;}\r\n#define rep(i, l, r) for(int i = l;i <= r; ++ i)\r\n#define per(i, r, l) for(int i = r;i >= l; -- i)\r\n//#define int long long\r\nconst double pi = acos (-1);\r\n//__gnu_pbds :: tree < Key, Mapped, Cmp_Fn = std :: less < Key >, Tag = rb_tree_tag, Node_Upadte = null_tree_node_update, Allocator = std :: allocator < char > > ;\r\n//__gnu_pbds :: tree < PPS, __gnu_pbds :: null_type, less < PPS >, __gnu_pbds :: rb_tree_tag, __gnu_pbds :: tree_order_statistics_node_update > tr;\r\ninline int read () {\r\n\tint x = 0, f = 0;\r\n\tchar c = getchar ();\r\n\tfor ( ; c < '0' || c > '9' ; c = getchar ()) f |= (c == '-');\r\n\tfor ( ; c >= '0' && c <= '9' ; c = getchar ()) x = (x << 1) + (x << 3) + (c & 15);\r\n\treturn !f ? x : -x;\r\n}\r\nconst int N = 3e7 + 5, S = 2, M = 3e6 + 5;\r\nint a[M], n, k, tot, tr[N][S], siz[N], res, sm[M];\r\ninline void ins (int x) {\r\n\tint u = 0;\r\n\tper (i, 29, 0) {\r\n\t\tint w;\r\n\t\tif (x & (1 << i)) w = 1; else w = 0;\r\n\t\tif (!tr[u][w]) tr[u][w] = ++ tot;\r\n\t\tu = tr[u][w], siz[u] ++;\r\n\t}\r\n}\r\ninline int query (int x) {\r\n\tint ans = 0, u = 0, ok = 1;\r\n\tper (i, 29, 0) {\r\n\t\tint w = (x & (1 << i));\r\n\t\tw = w > 0 ? 1 : 0;\r\n\t\tint K = (k & (1 << i));\r\n\t\tK = K > 0 ? 1 : 0;\r\n\t\tif (K == 0 && tr[u][!w]) ans += siz[tr[u][!w]];\r\n\t\tif (!K && !tr[u][w] && i) ok = 0;\r\n\t\tif (K && !tr[u][!w] && i) ok = 0;\r\n\t\tif (!ok) break;\r\n\t\tif (K == 0) u = tr[u][w];\r\n\t\telse u = tr[u][!w];\r\n\t}\r\n\treturn ans;\r\n}\r\nsigned main () {\r\n\tn = read (), k = read () - 1;\r\n\tsm[0] = 0;\r\n\trep (i, 1, n) a[i] = read (), sm[i] = (sm[i - 1] ^ a[i]);\r\n\trep (i, 0, n) ins (sm[i]);\r\n\trep (i, 0, n) res += query (sm[i]);\r\n\tprintf (\"%d\\n\", res / 2);\r\n\treturn 0;\r\n}\r\n// Always keep it simple and stupid"
}