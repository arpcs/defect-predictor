{
    "id": 208679064,
    "contestId": 813,
    "creationTimeSeconds": 1686044871,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 813,
        "index": "E",
        "name": "Army Creation",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 813,
        "members": [
            {
                "handle": "Otalp"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1496675100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 421,
    "memoryConsumedBytes": 192307200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#pragma optimization_level 3\r\n#pragma GCC optimize(\"Ofast,no-stack-protector,unroll-loops,fast-math,O3\")\r\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\r\n#define pb push_back\r\n#define pf push_front\r\n#define ff first\r\n#define ss second\r\n#define mp make_pair\r\n#define ll long long\r\n#define ld long double\r\n#define all(x) x.begin(), x.end()\r\n#define pii pair<int, int>\r\n#define unm unordered_map\r\n#define pll pair<ll, ll>\r\n#define vout(x) for(int asdasd=0; asdasd<x.size(); asdasd++) cout<<x[asdasd]<<' ';\r\n#define vpout(x) for(int asdasd=0; asdasd<x.size(); asdasd++) cout<<x[asdasd].ff<<' '<<x[asdasd].ss<<'\\n';\r\n#define pout(x) cout<<x.ff<<' '<<x.ss<<'\\n';\r\n#define mout(x, n) for(int i=1; i<=n; i++) cout<<x[i]<<' ';\r\n#define piii pair<int, pair<int, int> >\r\n#define bir 1\r\n#define eki 2\r\n#define ush 3\r\n#define tort 4\r\n#define bes 5\r\n#define alti 6\r\n#define szheti 7\r\n#define segiz 8\r\n#define togiz 9\r\n#define on 10\r\n#define bk back()\r\n#define fr front()\r\nconst double PI = 3.14159265359;\r\nconst ll mod = 1e9 + 7;\r\nconst ll INF = 1e18;\r\n\r\n\r\nstruct node{\r\n\tnode *l, *r;\r\n\tll sum = 0;\r\n\tnode(){}\r\n\tnode(ll ss): sum(ss){}\r\n\tnode(node *cl, node *cr, ll csum): l(cl), r(cr), sum(csum){}\r\n\t\r\n};       \r\n\r\nnode *t[100100];\r\nvector<node*> tt;\r\n\r\nvoid build(node *v, int l, int r){\r\n\tif(l == r){\r\n\t\tv -> sum = 0;\r\n\t\treturn;\r\n\t}\r\n\tint mid=(l+r)/2;\r\n\tv -> l = new node();\r\n\tv -> r = new node();\r\n\tbuild(v -> l, l, mid);\r\n\tbuild(v -> r, mid+1, r);\r\n\tv -> sum = v -> l -> sum + v -> r -> sum;\r\n}\r\n\r\nnode* upd(node *v, int l, int r, int pos, ll x){\r\n\tif(l == r){      \r\n\t\treturn new node(x);\r\n\t}\r\n\tint mid = (l + r) / 2;\r\n\tnode *u;\r\n\tif(mid >= pos){\r\n\t\tu = upd(v -> l, l, mid, pos, x);       \r\n\t\treturn new node(u, v -> r, u -> sum + v -> r -> sum);\r\n\t}\r\n\telse{\t\t\r\n\t\tu = upd(v -> r, mid+1, r, pos, x);       \r\n\t\treturn new node(v -> l, u, u -> sum + v -> l -> sum);\r\n\t}\r\n}\r\n\r\nll get(node *v, int l, int r, int L, int R){\r\n\tif(r < L or R < l){\r\n\t\treturn 0;\r\n\t}\r\n\tif(L <= l and r <= R){\r\n\t\treturn v -> sum;\r\n\t}\r\n\tint mid=(l+r)/2;\r\n\treturn get(v -> l, l, mid, L, R) + get(v -> r, mid+1, r, L, R);\r\n}\r\nint n, k;\r\ndeque<int> pos[100100];\r\n\r\n\r\n\r\n\r\nvoid solve(int casenum){\r\n\tcin>>n>>k;\r\n\tt[0] = new node();\r\n\tbuild(t[0], 1, n);\r\n\ttt.pb(t[0]);          \r\n\tfor(int i=1; i<=n; i++){\r\n\t\tint x;\r\n\t\tcin>>x;\r\n\t\tif(pos[x].size() == k){\r\n\t\t\ttt.pb(upd(tt.bk, 1, n, pos[x][0], 0));\r\n\t\t\tpos[x].pop_front();\r\n\t\t}        \r\n\t\tpos[x].pb(i);\r\n\t\ttt.pb(upd(tt.bk, 1, n, i, 1));\r\n\t\tt[i] = tt.bk;\r\n\t}\r\n\tint ls = 0;\r\n\tint q;\r\n\tcin>>q;\r\n\twhile(q--){\r\n\t\tint l, r;\r\n\t\tcin>>l>>r;\r\n\t\tl = ((l + ls) % n) + 1;\r\n\t\tr = ((r + ls) % n) + 1;\r\n\t\tif(l > r) swap(l, r);\r\n\t\tls =  get(t[r], 1, n, l, r);\r\n\t\tcout<<ls<<'\\n';\r\n\t}\r\n}\r\nint main(){\r\n    int t=1;\r\n    // cout<<dp[300000];\r\n    //mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\r\n    // freopen(\"input.txt\", \"r\", stdin);\r\n    // freopen(\"output.txt\", \"w\", stdout);\r\n    // cin>>t;\r\n    int casenum = 0;\r\n    while(t--){\r\n        casenum ++;\r\n        //cout<<t;\r\n        solve(casenum);\r\n        if(t) cout<<\"\\n\";\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ...---..."
}