{
    "id": 184432628,
    "contestId": 860,
    "creationTimeSeconds": 1670572833,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 860,
        "index": "E",
        "name": "Arkady and a Nobody-men",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2700,
        "tags": [
            "data structures",
            "dfs and similar",
            "trees"
        ]
    },
    "author": {
        "contestId": 860,
        "members": [
            {
                "handle": "husongjin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1505653500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// LUOGU_RID: 96888874\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nconst int maxn=5e5+10;\r\nint n,root;\r\nint ans[maxn];\r\ninline int read()\r\n{\r\n    char c=getchar();int res=0,f=1;\r\n    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\r\n    while(c>='0'&&c<='9')res=res*10+c-'0',c=getchar();\r\n    return res*f;\r\n}\r\nint cnt_edge;\r\nint head[maxn];\r\nstruct edge{int to,nxt;}e[maxn<<1];\r\ninline void add_edge(int u,int v)\r\n{\r\n\te[++cnt_edge]=(edge){v,head[u]};\r\n\thead[u]=cnt_edge;\r\n}\r\nint size[maxn],son[maxn],pre[maxn],dep[maxn];\r\nvector<int>ve[maxn];\r\nvoid dfs1(int x,int fa)\r\n{\r\n\tsize[x]=1;\r\n\tve[dep[x]=dep[pre[x]=fa]+1].push_back(x);\r\n\tfor(int i=head[x];i;i=e[i].nxt)\r\n\t{\r\n\t\tint y=e[i].to;\r\n\t\tif(y==fa)continue;\r\n\t\tdfs1(y,x);size[x]+=size[y];\r\n\t\tif(size[son[x]]<size[y])son[x]=y;\r\n\t}\r\n}\r\nint tim;\r\nint dfn[maxn],pos[maxn],top[maxn];\r\nvoid dfs2(int x,int tp)\r\n{\r\n\ttop[x]=tp;\r\n\tpos[dfn[x]=++tim]=x;\r\n\tif(son[x])dfs2(son[x],tp);\r\n\tfor(int i=head[x];i;i=e[i].nxt)\r\n\t{\r\n\t\tint y=e[i].to;\r\n\t\tif(y==pre[x]||y==son[x])continue;\r\n\t\tdfs2(y,y);\r\n\t}\r\n}\r\ninline int lca(int x,int y)\r\n{\r\n\twhile(top[x]!=top[y])\r\n\t\tif(dep[top[x]]>dep[top[y]])x=pre[top[x]];\r\n\t\telse y=pre[top[y]];\r\n\treturn dep[x]<dep[y]?x:y;\r\n}\r\nint tp;\r\nstruct node\r\n{\r\n\tint x,d,pos;\r\n}sta[maxn];\r\ninline int calc()\r\n{\r\n\tif(!tp)return 0;\r\n\treturn (sta[tp].pos-sta[tp-1].pos)*sta[tp].d;\r\n}\r\ninline void solve(vector<int> ve)\r\n{\r\n\ttp=0;\r\n\tint res=0;\r\n\tfor(unsigned int i=0;i<ve.size();i++)\r\n\t{\r\n\t\tint x=ve[i];\r\n\t\tif(!i)sta[++tp]=(node){x,0,0};\r\n\t\telse\r\n\t\t{\r\n\t\t\twhile(2333)\r\n\t\t\t{\r\n\t\t\t\tint y=lca(sta[tp].x,x);\r\n\t\t\t\tif(dep[y]>=sta[tp].d){sta[++tp]=(node){x,dep[y],i};break;}\r\n\t\t\t\tres-=calc();\r\n\t\t\t\ttp--;\r\n\t\t\t}\r\n\t\t\tres+=calc();\r\n\t\t}\r\n\t\tans[x]+=res;\r\n\t}\r\n}\r\nsigned main()\r\n{\r\n\tn=read();\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tint x=read();\r\n\t\tif(x)add_edge(x,i),add_edge(i,x);\r\n\t\telse root=i;\r\n\t} \r\n\tdfs1(root,0),dfs2(root,root);\r\n\tfor(int d=1;d<=n;d++)\r\n\t{\r\n\t\tfor(unsigned int i=0;i<ve[d].size();i++)ans[ve[d][i]]+=ans[pre[ve[d][i]]]+d-1;\r\n\t\tsolve(ve[d]);\r\n\t\treverse(ve[d].begin(),ve[d].end());\r\n\t\tsolve(ve[d]);\r\n\t}\r\n\tfor(int i=1;i<=n;i++)printf(\"%lld \",ans[i]);\r\n\treturn 0;\r\n}"
}