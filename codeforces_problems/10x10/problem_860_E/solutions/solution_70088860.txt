{
    "id": 70088860,
    "contestId": 860,
    "creationTimeSeconds": 1580665560,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 860,
        "index": "E",
        "name": "Arkady and a Nobody-men",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2700,
        "tags": [
            "data structures",
            "dfs and similar",
            "trees"
        ]
    },
    "author": {
        "contestId": 860,
        "members": [
            {
                "handle": "AM."
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1505653500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 1403,
    "memoryConsumedBytes": 130457600,
    "source": "/* be name khoda */\n\n// #define stream_enable\n// #define long_enable\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <numeric>\n#include <iomanip>\n#include <sstream>\n#include <vector>\n#include <queue>\n#include <set>\n#include <map>\nusing namespace std;\n\n#ifdef stream_enable\n#define cin sss\n#endif\n#ifdef long_enable\ntypedef long long int ll;\n#else\ntypedef int ll;\n#endif\n\ntypedef pair<ll, ll> pii;\ntypedef pair<pii, ll> ppi;\ntypedef pair<ll, pii> pip;\ntypedef vector<ll> vi;\ntypedef vector<pii> vpii;\n\nconst ll MOD = 1000000007;\nconst long long BIG = 1446803456761533460;\nconst int Big = 336860180;\n\n#define F first\n#define S second\n#define pb push_back\n#define eb emplace_back\n#define all(x) (x).begin(), (x).end()\n\n#define debug(x) cout << #x << \" -> \" << (x) << endl;\n#define debug2(x, y) cout << #x << ' ' << #y << \" -> \" << (x) << ' ' << (y) << endl;\n#define debug3(x, y, z) cout << #x << ' ' << #y << ' ' << #z << \" -> \" << (x) << ' ' << (y) << ' ' << (z) << endl;\n#define debug4(x, y, z, t) cout << #x << ' ' << #y << ' ' << #z << ' ' << #t << \" -> \" << (x) << ' ' << (y) << ' ' << (z) << ' ' << (t) << endl;\n#define debugp(x) cout << #x << \" -> \" << \"(\" << (x).F << \", \" << (x).S << \")\" << endl;\n#define debuga(x, n) cout << #x << \" -> \"; fori (i1_da, n) { cout << (x)[i1_da] << ' '; } cout << endl\n#define debugap(x, n) cout << #x << \" ->\\n\"; fori (i1_dap, n) { cout << \"(\" << (x)[i1_dap].F << \", \" << (x)[i1_dap].S << \")\\n\"; } cout << endl\n#define debugaa(x, n, m) cout << #x << \" ->\\n\"; fori (i1_daa, n) { fori (i2_daa, m) { cout << (x)[i1_daa][i2_daa] << ' '; } cout << '\\n'; } cout << endl\n#define debugav(x, n) cout << #x << \" ->\\n\"; fori (i1_dav, n) { fori (i2_dav, (x)[i1_dav].size()) { cout << (x)[i1_dav][i2_dav] << ' '; } cout << '\\n'; } cout << endl\n#define debugia(x, n) cout << #x << \" ->\\n\"; fori (i1_dia, n) { cout << i1_dia << \" : \" << (x)[i1_dia] << '\\n'; } cout << endl\n\n#define forifrom(i, s, n) for(ll i = (s); i < (n); ++i)\n#define forirto(i, n, e) for(ll i = (n) - 1; i >= (e); --i)\n#define fori(i, n) forifrom (i, 0, n)\n#define forir(i, n) forirto (i, n, 0)\n\n#define smin(a, b) a = min(a, (b))\n#define smax(a, b) a = max(a, (b))\n\n#define Add(a, b) a = (a + (b)) % MOD\n#define Mul(a, b) a = (a * (b)) % MOD\n\nstringstream sss;\n\n// -----------------------------------------------------------------------\n\nconst ll maxn = 500010;\nconst ll maxn2 = maxn * 2;\nconst ll maxnlg = 20;\n\nll n;\nvi subt[maxn];\nll ht[maxn], st[maxn], ft[maxn], pars[maxnlg][maxn];\nvi levels[maxn];\nll lev[maxn2], lt[maxn2], rt[maxn2];\nlong long ps[maxn2], val[maxn];\n\nll tim = 0;\nvoid dfs_init(ll x) {\n    st[x] = tim++;\n    fori (i, maxnlg - 1) {\n        pars[i + 1][x] = pars[i][pars[i][x]];\n    }\n    for (auto y : subt[x]) {\n        ht[y] = ht[x] + 1;\n        levels[ht[y]].eb(y);\n        pars[0][y] = x;\n        dfs_init(y);\n    }\n    ft[x] = tim;\n}\n\nll LCA(ll a, ll b) {\n    if (st[a] > st[b]) swap(a, b);\n    if (ft[a] >= ft[b]) return a;\n    forir (i, maxnlg) {\n        if (ft[pars[i][a]] < ft[b]) a = pars[i][a];\n    }\n    return pars[0][a];\n}\n\nvoid dfs_sum(ll x) {\n    for (auto y : subt[x]) {\n        val[y] += val[x];\n        dfs_sum(y);\n    }\n}\n\nvoid MAIN() {\n\n    cin >> n;\n    ll rot;\n    fori (i, n) {\n        ll p; cin >> p;\n        if (p == 0) rot = i;\n        else subt[p - 1].eb(i);\n    }\n    pars[0][rot] = rot;\n    dfs_init(rot);\n    forifrom (h, 1, n) {\n        if (levels[h].empty()) break;\n        ll m = 0;\n        lev[m++] = levels[h][0];\n        forifrom (i, 1, levels[h].size()) {\n            lev[m] = LCA(lev[m - 1], levels[h][i]); ++m;\n            lev[m++] = levels[h][i];\n        }\n        lev[m++] = n;\n        lt[0] = -1;\n        forifrom (i, 1, m - 1) {\n            lt[i] = i - 1;\n            while (lt[i] >= 0 && ht[lev[lt[i]]] >= ht[lev[i]]) lt[i] = lt[lt[i]];\n        }\n        rt[m - 2] = m - 1;\n        forir (i, m - 2) {\n            rt[i] = i + 1;\n            while (rt[i] < m - 1 && ht[lev[rt[i]]] > ht[lev[i]]) rt[i] = rt[rt[i]];\n        }\n\n        fill(ps, ps + m, 0);\n        for (ll i = 1; i < m - 1; i += 2) {\n            long long l = 1LL * (ht[lev[i]] + 1) * (rt[i] - i) / 2;\n            long long r = 1LL * (ht[lev[i]] + 1) * (i - lt[i]) / 2;\n            ps[lt[i] + 1] += l, ps[i] -= l;\n            ps[i + 1] += r, ps[rt[i]] -= r;\n        }\n        fori (i, m - 1) ps[i + 1] += ps[i];\n        for (ll i = 0; i < m - 1; i += 2) {\n            val[lev[i]] += ps[i] + ht[lev[i]];\n        }\n    }\n    dfs_sum(rot);\n    fori (i, n) cout << val[i] << ' ';\n    cout << '\\n';\n\n}\n\n// -----------------------------------------------------------------------\n\nint main() {\n    ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n    cout << fixed << setprecision(10);\n    sss << R\"(\n\n5\n2 3 4 5 0\n    )\";\n    MAIN();\n    return 0;\n}\n"
}