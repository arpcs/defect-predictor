{
    "id": 230769393,
    "contestId": 1476,
    "creationTimeSeconds": 1698817699,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1476,
        "index": "E",
        "name": "Pattern Matching",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "bitmasks",
            "data structures",
            "dfs and similar",
            "graphs",
            "hashing",
            "sortings",
            "strings"
        ]
    },
    "author": {
        "contestId": 1476,
        "members": [
            {
                "handle": "onepercentbetter"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1611930900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 49,
    "timeConsumedMillis": 998,
    "memoryConsumedBytes": 39321600,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag,\r\n             tree_order_statistics_node_update>\r\n    indexed_set;\r\n#define iset indexed_set\r\n#define int long long\r\n#define mod 1000000007\r\n#define ff first\r\n#define ss second\r\n#define mk make_pair\r\n#define pb push_back\r\n#define rep(i, start, end) for (int i = start; i < end; i++)\r\n#define ld long double\r\n#define fast ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);\r\nusing ii = pair<int, int>;\r\nconst static int mx = 2e5 + 100;\r\nvector<int> g[mx];\r\nint vis[mx];\r\nint col[mx];\r\nvector<int> topo;\r\nbool is_cycle;\r\nvoid dfs(int node, int par)\r\n{\r\n    col[node] = 1;\r\n    for (auto v : g[node])\r\n    {\r\n        if (!col[v])\r\n        {\r\n            dfs(v, node);\r\n        }\r\n        else if (col[v] == 1)\r\n        {\r\n            is_cycle = 1;\r\n        }\r\n    }\r\n    col[node] = 2;\r\n}\r\nvoid dfs(int node)\r\n{\r\n    vis[node] = 1;\r\n    for (auto e : g[node])\r\n    {\r\n        if (!vis[e])\r\n        {\r\n            dfs(e);\r\n        }\r\n    }\r\n    topo.pb(node);\r\n}\r\nvoid solve()\r\n{\r\n    int n, m, k;\r\n    cin >> n >> m >> k;\r\n    map<string, int> mp;\r\n    rep(i, 0, n)\r\n    {\r\n        string s;\r\n        cin >> s;\r\n        mp[s] = i + 1;\r\n    }\r\n    rep(i, 0, m)\r\n    {\r\n        string s;\r\n        cin >> s;\r\n        int ind;\r\n        cin >> ind;\r\n        int flag = 0;\r\n        rep(i, 0, (1 << k))\r\n        {\r\n            string p = \"\";\r\n            rep(j, 0, k)\r\n            {\r\n                if (i & (1 << j))\r\n                {\r\n                    p += s[j];\r\n                }\r\n                else\r\n                {\r\n                    p += \"_\";\r\n                }\r\n            }\r\n            if (mp.find(p) != mp.end())\r\n            {\r\n                if (mp[p] == ind)\r\n                {\r\n                    flag = 1;\r\n                }\r\n                else\r\n                {\r\n                    // cout << ind << \" \" << mp[p] << \"\\n\";\r\n                    g[ind].pb(mp[p]);\r\n                }\r\n            }\r\n        }\r\n        if (!flag)\r\n        {\r\n            cout << \"NO\\n\";\r\n            return;\r\n        }\r\n    }\r\n    rep(i, 1, n + 1)\r\n    {\r\n        if (!col[i])\r\n        {\r\n            dfs(i, 0);\r\n            if (is_cycle)\r\n            {\r\n                cout << \"NO\\n\";\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    vector<int> final;\r\n    rep(i, 1, n + 1)\r\n    {\r\n        if (!vis[i])\r\n        {\r\n            //topo.clear();\r\n            dfs(i);\r\n            // reverse(topo.begin(), topo.end());\r\n            // for (auto e : topo)\r\n            // {\r\n            //     final.pb(e);\r\n            // }\r\n        }\r\n    }\r\n    reverse(topo.begin(), topo.end());\r\n    cout << \"YES\\n\";\r\n    for (auto e : topo)\r\n    {\r\n        cout << e << \" \";\r\n    }\r\n}\r\nsigned main()\r\n{\r\n    fast\r\n    // int t;\r\n    //  cin >> t;\r\n    //  while (t--)\r\n    solve();\r\n    return 0;\r\n}"
}