{
    "id": 211591551,
    "contestId": 1060,
    "creationTimeSeconds": 1688115646,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1060,
        "index": "C",
        "name": "Maximum Subrectangle",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "implementation",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1060,
        "members": [
            {
                "handle": "ziche"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1538636700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 87,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nlong long n[2001], m[2001];\nint main() {\n  long long s_n, s_m, t, N, M, x, min_n = 1, max_n, mid_n, min_m = 1, max_m,\n                                  mid_m, ans = 0, col;\n  cin >> N >> M;\n  max_n = N;\n  for (long long i = 1; i <= N; i++) {\n    cin >> t;\n    n[i] = t + n[i - 1];\n  }\n  for (long long j = 1; j <= M; j++) {\n    cin >> t;\n    m[j] = t + m[j - 1];\n  }\n  cin >> x;\n  for (int n_i = 1; n_i <= N; n_i++) {\n    min_m = 1;\n    max_m = M;\n    s_n = 10e10;\n    for (int i = n_i; i <= N; i++)\n      s_n = min(s_n, n[i] - n[i - n_i]);\n    while (min_m <= max_m) {\n      mid_m = (min_m + max_m) / 2;\n      s_m = 10e10;\n      for (int i = mid_m; i <= M; i++)\n        s_m = min(s_m, m[i] - m[i - mid_m]);\n      if (s_m * s_n <= x) {\n        ans = max(ans, mid_m * n_i);\n        min_m = mid_m + 1;\n      } else\n        max_m = mid_m - 1;\n    }\n  }\n  cout << ans;\n  return 0;\n}\n\n// TtXQPIskcUjqvfodRDfQNgyjOpAiZbRWYPfSeHZxEjxNQvlnXkqnFASfXDxugPaqopKdvxSGTkRPnOKLvrHtkgADNPAvgLFRzNphLBVHlIRlQSvYNdrWgPwxBQhzqbyw"
}