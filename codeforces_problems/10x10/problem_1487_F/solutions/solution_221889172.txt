{
    "id": 221889172,
    "contestId": 1487,
    "creationTimeSeconds": 1693887890,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1487,
        "index": "F",
        "name": "Ones",
        "type": "PROGRAMMING",
        "rating": 2900,
        "tags": [
            "dp",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1487,
        "members": [
            {
                "handle": "Nabuko"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613399700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 82,
    "timeConsumedMillis": 1325,
    "memoryConsumedBytes": 28569600,
    "source": "#include <iostream>\r\n#include <string>\r\n#include <algorithm>\r\nusing namespace std;\r\nconst int N=250;\r\nconst int M=28;\r\nconst int INF=1e9;\r\nint dp[2][M*2+1][N][N];\r\nint main(){\r\n  string s;\r\n  cin>>s;\r\n  reverse(s.begin(),s.end());\r\n  s+=\"0\";\r\n  for(int carry=0;carry<M*2+1;carry++)\r\n    for(int cp=0;cp<N;cp++) for(int cn=0;cn<N;cn++) dp[0][carry][cp][cn]=INF;\r\n  dp[0][M][N-1][N-1]=0;\r\n  for(int i=0;i<s.size();i++){\r\n    for(int carry=0;carry<M*2+1;carry++)\r\n    for(int cp=0;cp<N;cp++) for(int cn=0;cn<N;cn++) dp[1][carry][cp][cn]=INF;\r\n    for(int carry=0;carry<M*2+1;carry++)\r\n        for (int cp=N-1;cp>=0;--cp)\r\n            for (int cn=N-1;cn>=0;--cn)\r\n                if (dp[0][carry][cp][cn]!=INF){\r\n                    if(cp>0)\r\n                        dp[0][carry][cp-1][cn]=min(dp[0][carry][cp-1][cn],dp[0][carry][cp][cn]);\r\n                    if (cn>0)\r\n                        dp[0][carry][cp][cn-1]=min(dp[0][carry][cp][cn-1],dp[0][carry][cp][cn]);\r\n                int rcarry=carry-M;\r\n                int val=rcarry+cp-cn;\r\n                int digit=val%10;\r\n                if(digit<0) digit+=10;\r\n                int ncarry=val/10;\r\n                if(val<0&&digit!=0) --ncarry;\r\n                if(digit==s[i]-'0')\r\n                    dp[1][ncarry+M][cp][cn]=min(dp[1][ncarry+M][cp][cn],dp[0][carry][cp][cn]+cp+cn);\r\n        }\r\n    swap(dp[0],dp[1]);\r\n  }\r\n  int ans=INF;\r\n  for(int i=0;i<N;i++) for(int j=0;j<N;j++) ans=min(ans,dp[0][M][i][j]);\r\n  cout<<ans<<endl;\r\n}\r\n"
}