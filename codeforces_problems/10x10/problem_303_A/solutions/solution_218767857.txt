{
    "id": 218767857,
    "contestId": 303,
    "creationTimeSeconds": 1692002555,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 303,
        "index": "A",
        "name": "Lucky Permutation Triple",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1300,
        "tags": [
            "constructive algorithms",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 303,
        "members": [
            {
                "handle": "Aragon_Gt"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1368363600
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 2867200,
    "source": "from sys import stdin,stdout\r\ninput=lambda: stdin.readline()\r\nprint=lambda: stdout.write()\r\ndef solve(n):\r\n    if n<3:\r\n        return -1\r\n    dp1=[0]*n\r\n    dp2=[0]*n\r\n    dp3=[0]*n\r\n    res=[[],[],[]]\r\n    for i in range(n):\r\n        if dp1[i]==0:\r\n            for j in range(n):\r\n                 if dp2[j]==0:\r\n                     r=(i+j)%n\r\n                     if dp3[r]==0:\r\n                        res[0].append(str(i))\r\n                        res[1].append(str(j))\r\n                        res[2].append(str(r))\r\n                        dp1[i]=1\r\n                        dp2[j]=1\r\n                        dp3[r]=1\r\n                        #print(dp1,dp2,dp3)\r\n                        #print(1,res)\r\n                        break\r\n    return f\"{' '.join(res[0])}\\n{' '.join(res[1])}\\n{' '.join(res[2])}\"\r\nn=int(input())\r\nres=solve(n)\r\n#res1=f\"{' '.join(res[0])}\\n{' '.join(res[1])}\\n{' '.join(res[2])}\"\r\nprint(res)\r\n"
}