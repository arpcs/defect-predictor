{
    "id": 236018762,
    "contestId": 1896,
    "creationTimeSeconds": 1701852220,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1896,
        "index": "F",
        "name": "Bracket Xoring",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1896,
        "members": [
            {
                "handle": "SoiMae"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1700923800
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#define INT long long\r\n#define pii pair<int,int>\r\nusing namespace std;\r\nconst int NN = 1e6 + 10;\r\nchar s[NN], ans[NN];\r\nint main(){\r\n#ifndef ONLINE_JUDGE\r\n\tfreopen(\"in.in\", \"r\", stdin);\r\n\tfreopen(\"out.out\", \"w\", stdout);\r\n#endif\r\n\tint t; cin >> t;\r\n\twhile(t --){\r\n\t\tint n; scanf(\"%d\", &n);\r\n\t\tscanf(\"%s\", s + 1);\r\n\t\tint cnt = 0;\r\n\t\tfor(int i = 1; i <= 2 * n; i ++) if(s[i] == '1') cnt ++;\r\n\t\tif(cnt % 2 != 0 or s[1] != s[2 * n]) {\r\n\t\t\tputs(\"-1\"); continue;\r\n\t\t}\r\n\t\tif(s[1] == '1'){\r\n\t\t\tputs(\"3\");\r\n\t\t\tfor(int i = 1; i <= n; i ++) printf(\"()\");\r\n\t\t\tputs(\"\");\r\n\t\t\tfor(int i = 1; i <= 2 * n; i ++){\r\n\t\t\t\tif(s[i] == '1') s[i] = '0';\r\n\t\t\t\telse s[i] = '1';\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tputs(\"2\");\r\n\t\t}\r\n\t\tint flag = 0;\r\n\t\tcnt = 0;\r\n\t\tfor(int i = 1; i <= 2 * n; i ++) if(s[i] == '1'){\r\n\t\t\tif(flag == 0) ans[i] = '(';\r\n\t\t\telse ans[i] = ')';\r\n\t\t\tflag ^= 1;\r\n\t\t}else cnt ++;\r\n\t\tcnt /= 2;\r\n\t\tfor(int i = 1; i <= 2 * n; i ++){\r\n\t\t\tif(s[i] == '0'){\r\n\t\t\t\tif(cnt) {\r\n\t\t\t\t\tans[i] = '(';\r\n\t\t\t\t\tcnt --;\r\n\t\t\t\t}else {\r\n\t\t\t\t\tans[i] = ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i = 1; i <= 2 * n; i ++) printf(\"%c\", ans[i]);\r\n\t\tputs(\"\");\r\n\t\tans[1] = '(';\r\n\t\tans[2 * n] = ')';\r\n\t\tflag = 0;\r\n\t\tcnt = 0;\r\n\t\tfor(int i = 2; i < 2 * n; i ++){\r\n\t\t\tif(s[i] == '1'){\r\n\t\t\t\tif(flag == 0) ans[i] = ')';\r\n\t\t\t\telse ans[i] = '(';\r\n\t\t\t\tflag ^= 1;\r\n\t\t\t}else cnt ++;\r\n\t\t}\r\n\t\tcnt /= 2;\r\n\t\tfor(int i = 2; i < 2 * n; i ++){\r\n\t\t\tif(s[i] == '0'){\r\n\t\t\t\tif(cnt) {\r\n\t\t\t\t\tans[i] = '(';\r\n\t\t\t\t\tcnt --;\r\n\t\t\t\t}else ans[i] = ')';\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i = 1; i <= 2 * n; i ++) printf(\"%c\" ,ans[i]);\r\n\t\tputs(\"\");\r\n\t}\r\n\treturn 0;\r\n}a"
}