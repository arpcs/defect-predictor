{
    "id": 235219961,
    "contestId": 120,
    "creationTimeSeconds": 1701435012,
    "relativeTimeSeconds": 312,
    "problem": {
        "contestId": 120,
        "index": "A",
        "name": "Elevator",
        "type": "PROGRAMMING",
        "rating": 1000,
        "tags": [
            "brute force",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 120,
        "members": [
            {
                "handle": "morge_Kon567889"
            },
            {
                "handle": "SerzhRedAlert"
            },
            {
                "handle": "Tim_on"
            }
        ],
        "participantType": "VIRTUAL",
        "teamId": 115687,
        "teamName": "Fun-club Billy H",
        "ghost": false,
        "startTimeSeconds": 1701434700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 307200,
    "source": "\ufeff//The code was created by Tim _on \r\n#include <vector>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <iostream>\r\n#include <iomanip>\r\n#include <string>\r\n#include <stack>\r\n#include <set>\r\n#include <deque>\r\n#include <queue>\r\n#include <fstream>\r\n#include <map>\r\n#include <random>\r\n#include <numeric>\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define ld long double\r\n#define all(x) x.begin(), x.end()\r\n#define rall(x) x.rbegin(), x.rend()\r\nconst ull inf = 1e18;\r\nusing namespace std;\r\nclass Do_some_fucking_magic {\r\nprivate:\r\n    bool used[1000];\r\n    vector<vector<ll>> g;\r\n    vector<ll> dist;\r\n    queue<ll> q;\r\npublic:\r\n    ll isPrime(ll n) {\r\n        for (ll i = 2; i * i <= n; ++i) {\r\n            if (n % i == 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    void dfs(int v) {\r\n        used[v] = 1;\r\n        for (auto i : g[v]) {\r\n            if (!used[i]) {\r\n                dfs(i);\r\n            }\r\n        }\r\n    }\r\n    void bfs(ll v) {\r\n        used[v] = 1;\r\n        q.push(v);\r\n        while (!q.empty()) {\r\n            v = q.front();\r\n            q.pop();\r\n            for (auto u : g[v]) {\r\n                if (!used[u]) {\r\n                    used[u] = 1;\r\n                    q.push(u);\r\n                    dist[u] = dist[v] + 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ll gcd_ext(ll a, ll b, ll& x, ll& y) {\r\n        if (b == 0) {\r\n            x = 1;\r\n            y = 0;\r\n            return a;\r\n        }\r\n        ll x1, y1;\r\n        ll d = gcd_ext(b, a % b, x1, y1);\r\n        x = y1;\r\n        y = x1 - y1 * (a / b);\r\n        return d;\r\n    }\r\n    struct fuu {\r\n        ll a, b, c;\r\n        fuu(ll _a, ll _b, ll _c) : a(_a), b(_b), c(_c) {}\r\n        //bool operator<(fuu other) {\r\n        //    return w < other.w;\r\n        //}\r\n    };\r\n    vector< bool> resheto(ll k) {\r\n        vector<bool>prime(k, 1);\r\n        for (ll i = 2; i < k; ++i) {\r\n            if (prime[i]) {\r\n                for (ll j = 2 * i; j * j <= k; j += i) {\r\n                    prime[j] = false;\r\n                }\r\n            }\r\n        }\r\n        return prime;\r\n    }\r\n    ll gcd(ll a, ll b) {\r\n        /*if (b == 0) {\r\n            return a;\r\n        }\r\n        return gcd(b, a % b);*/\r\n        while (b != 0) {\r\n            a = b;\r\n            b = a % b;\r\n        }\r\n        return a;\r\n    }\r\n    ll lcm(ll a, ll b) {\r\n        return (a * b) / gcd(a, b);\r\n    }\r\n    ll binpow(ll a, ll n) {\r\n        if (n == 0) {\r\n            ll x = 1;\r\n            return x;\r\n        }\r\n        if (n % 2 == 0) {\r\n            ll cur = binpow(a, n / 2);\r\n            ll x = cur * cur;\r\n            return x;\r\n        }\r\n        ll x = a * binpow(a, n - 1);\r\n        return x;\r\n    }\r\n    ll factorial(ll n) {\r\n        ll ans = 1;\r\n        for (ll i = 1; i <= n; ++i) {\r\n            ans *= i;\r\n            //ans %= 1000000007;\r\n        }\r\n        return ans;\r\n    }\r\n    ll fib(ll n) {\r\n        vector<ll> a(n + 1);\r\n        a[0] = 1;\r\n        a[1] = 2;\r\n        for (ll i = 2; i <= n; ++i) {\r\n            a[i] = a[i - 1] + a[i - 2];\r\n        }\r\n        return a[n];\r\n    }\r\n};\r\n\r\n/*         ______,\r\n         \uff0f\uff1e \u3000  \u30d5\r\n\u3000\u3000\u3000\u3000\u3000| \u3000_\u3000 _|\r\n\u3000 \u3000\u3000\u3000\uff0f`\u30df _x \u5f61\r\n\u3000\u3000 \u3000 /\u3000\u3000\u3000 \u3000 |\r\n\u3000\u3000\u3000 /\u3000 \u30fd\u3000\u3000 \uff89\r\n\u3000\uff0f\uffe3|\u3000\u3000 |\u3000|\u3000|\r\n\u3000| (\uffe3\u30fd\uff3f_\u30fd_)_)\r\n\u3000\uff3c\u4e8c\u3064\r\n*/\r\n\r\nstruct SegmentTree {\r\nprivate:\r\n    vector<ll>t, a;\r\n\r\n    void build(int v, int l, int r) {\r\n        if (r - l == 1) {\r\n            t[v] = a[l];\r\n            return;\r\n        }\r\n        int m = (r + l) >> 1;\r\n        build(2 * v + 1, l, m);\r\n        build(2 * v + 2, m, r);\r\n        t[v] = std::min(t[2 * v + 1], t[2 * v + 2]);\r\n    }\r\n\r\n    int get(int v, int l, int r, int ql, int qr) {\r\n        if (qr <= l or r <= ql) {\r\n            return 1e9;\r\n        }\r\n        if (ql <= l and r <= qr) {\r\n            return t[v];\r\n        }\r\n        int m = (r + l) >> 1;\r\n        return std::min(get(2 * v + 1, l, m, ql, qr), get(2 * v + 2, m, r, ql, qr));\r\n    }\r\npublic:\r\n    SegmentTree(std::vector<ll>&data) {\r\n        a = data;\r\n        t.resize(4 * (int)a.size());\r\n        build(0, 0, (int)a.size());\r\n    }\r\n\r\n    int get(int ql, int qr) {\r\n        return get(0, 0, (int)a.size(), ql, qr);\r\n    }\r\n};\r\nint main() {\r\n    Do_some_fucking_magic A;\r\n    ld TIME1 = clock();\r\n    setlocale(LC_ALL, \"rus\");\r\n    ifstream fin(\"input.txt\");\r\n    ofstream fout(\"output.txt\");\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    // \u043d\u0430\u0447\u0430\u043b\u043e...\r\n\r\n    string s;\r\n    ll a;\r\n    fin >> s >> a;\r\n    if (s == \"front\") {\r\n        if (a == 1) {\r\n            fout << \"L\";\r\n        }\r\n        if (a == 2) {\r\n            fout << \"R\";\r\n        }\r\n    }\r\n    if (s == \"back\") {\r\n        if (a == 1) {\r\n            fout << \"R\";\r\n        }\r\n        if (a == 2) {\r\n            fout << \"L\";\r\n        }\r\n    }\r\n\r\n    // \u043a\u043e\u043d\u0435\u0446...\r\n    ld TIME2 = clock();\r\n    //cout << endl << (TIME2 - TIME1) / CLOCKS_PER_SEC;\r\n    return 0;\r\n}\r\n// C++ one love"
}