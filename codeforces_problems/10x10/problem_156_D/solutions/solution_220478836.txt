{
    "id": 220478836,
    "contestId": 156,
    "creationTimeSeconds": 1693036769,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 156,
        "index": "D",
        "name": "Clues",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2500,
        "tags": [
            "combinatorics",
            "graphs"
        ]
    },
    "author": {
        "contestId": 156,
        "members": [
            {
                "handle": "Mikasa_Akkerman"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1330536600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 10240000,
    "source": "#include<bits/stdc++.h>\r\n\r\n#define endl '\\n'\r\n\r\n#define il inline\r\nnamespace FastIO {\r\n#define iL (1 << 20)\r\n#define gc() ((iS == iT) ? (iT = (iS = ibuf) + fread(ibuf, 1, iL, stdin), (iS == iT) ? EOF : *iS++) : *iS++)\r\n  char ibuf[iL], *iS = ibuf + iL, *iT = ibuf + iL;\r\n  template<class T> il void read(T &x) {\r\n    char c = gc(); bool f = 0; x = 0;\r\n    while(!isdigit(c)) f |= c == '-', c = gc();\r\n    while(isdigit(c)) x = (x << 1) + (x << 3) + (c & 15), c = gc();\r\n    if(f) x = -x;\r\n  }\r\n#undef iL\r\n#undef gc\r\n}\r\nusing namespace FastIO;\r\n\r\n#define ll long long\r\n#define forp(i, a, b) for (int i = a; i <= b; ++i)\r\n#define forc(i, a, b) for (int i = a; i >= b; --i)\r\n\r\n#define suc() cerr << < endl\r\n#define debug(u) cerr << #u << \" = \" << u << endl\r\n\r\nusing namespace std;\r\n\r\nint n, m, p;\r\nclass modint{\r\n\tprivate:\r\n\t\tint v;\r\n\tpublic:\r\n\t\tmodint(){}\r\n\t\tmodint(const int& x){v=x;}\r\n\t\tmodint operator+(const modint& a)const{\r\n\t\t\treturn v + a.v >= p ? v + a.v - p : v + a.v;\r\n\t\t}\r\n\t\tmodint operator-(const modint& a)const{\r\n\t\t\treturn v < a.v ? v - a.v + p : v - a.v;\r\n\t\t}\r\n\t\tmodint operator*(const modint& a)const{\r\n\t\t\treturn 1ll * v * a.v % p;\r\n\t\t}\r\n\t\tint operator()(void)const{\r\n\t\t\treturn v;\r\n\t\t}\r\n};\r\n\r\n#define mint modint\r\n\r\ntemplate<typename T> bool chkmin(T &a, T b) { return b < a ? (a = b, 1) : 0; }\r\ntemplate<typename T> bool chkmax(T &a, T b) { return a < b ? (a = b, 1) : 0; }\r\nint read() { int a;cin >> a;return a; }\r\n\r\nconst int N = 1e5 + 5;\r\n\r\nint fa[N], si[N], ton[N];\r\nvector<int> s;\r\n\r\nmint qpow(mint u, int v) {\r\n  mint ans = mint(1);\r\n  while (v > 0) {\r\n    if (v & 1) ans = ans * u;\r\n    u = u * u, v >>= 1;\r\n  }\r\n  return ans;\r\n}\r\n\r\nsigned main() {\r\n// \tfreopen(\"text.in\", \"r\", stdin);\r\n//   freopen(\"text.out\", \"w\", stdout);\r\n  ios::sync_with_stdio(false);\r\n  cin.tie(0);\r\n  cout.tie(0);\r\n\r\n  cin >> n >> m >> p;\r\n  if (n == 1) return puts(\"0\"), 0;\r\n  function<int(int)> find = [&](int u) { return fa[u] == u ? fa[u] : fa[u] = find(fa[u]); };\r\n  auto merge = [&](int u, int v) { int U = find(u), V = find(v);if (U != V) fa[U] = V, si[V] += si[U]; };\r\n  for (int i = 1; i <= n; ++i) fa[i] = i, si[i] = 1;\r\n  for (int i = 1, u, v; i <= m; ++i) cin >> u >> v, merge(u, v);\r\n  for (int i = 1; i <= n; ++i) { int f = find(i);if (ton[f] == 0) ton[f] = 1, s.push_back(f); }\r\n  if (s.size() == 1) return puts(\"1\"), 0;\r\n  mint ans = mint(1);\r\n  for (auto i : s) ans = ans * mint(si[i]); \r\n  cout << (ans * qpow(n, s.size() - 2))() << endl; \r\n\r\n  return 0;\r\n}"
}