{
    "id": 236024786,
    "contestId": 96,
    "creationTimeSeconds": 1701855869,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 96,
        "index": "B",
        "name": "Lucky Numbers (easy)",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "binary search",
            "bitmasks",
            "brute force"
        ]
    },
    "author": {
        "contestId": 96,
        "members": [
            {
                "handle": "The_Mask_Man"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1310137200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 204800,
    "source": "                                                  //   Bismillahir Rahmanir Rahim      //\r\n                                                 //     After hardship comes ease     //\r\n                                                //         AUTHOR : iamarman         //\r\n\r\n// pragmas\r\n// #pragma GCC optimize(\"Ofast\")\r\n// #pragma GCC target(\"avx,avx2,fma\")\r\n// #pragma GCC optimization (\"unroll-loops\")\r\n// #pragma GCC optimization (\"strict-overflow\")\r\n \r\n#include<bits/stdc++.h>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n                                                    ////       TEMPLATE       ////\r\n\r\n//---------------------------------------------------------------------------------------------------------------------------------|\r\n\r\ntypedef     vector<int> vii;\r\ntypedef     vector<long long> vll;\r\ntypedef     vector<pair<int,int> > vpi;\r\ntypedef     vector<pair<long long,long long > > vpl;\r\n\r\n# define    el '\\n'\r\n# define    ff first\r\n# define    ss second\r\n# define    R0 return 0\r\n# define    ll long long\r\n# define    noo1 cout<<-1<<el;  \r\n# define    ull unsigned long long                                                                                                         \r\n# define    rep(i,a,b) for(int i=a;i<b;i++)\r\n# define    rep_n(i,a,b) for(int i=a;i<=b;i++)\r\n# define    test int test; cin>>test; while(test--)\r\n# define    rep_rev(i,a,b) for(int i=b;a>=1;i--)\r\n# define    allr(v) v.rbegin(),v.rend()\r\n# define    all(v) v.begin(),v.end()\r\n# define    yess cout<<\"YES\"<<el\r\n# define    siz(x) (int)x.size()\r\n# define    noo cout<<\"NO\"<<el\r\n# define     yess1 cout<<1<<el\r\n# define    pb push_back\r\n# define    mp make_pair\r\n# define    sp \" \"\r\n\r\n\r\nconstexpr ll mod=1000000000+7;\r\nconstexpr ll INF=LLONG_MAX;\r\nconstexpr double PI= acos(-1);\r\nconstexpr double eps=1e-9;\r\n\r\n# define mem(a,b) memset(a,b,sizeof(a))\r\n# define sqr(a) ((a)*(a))\r\n# define lcm(a,b) (a*b)/__gcd(a,b)\r\n\r\n# define optimise   { ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL); }\r\n# define fraction(a) cout.unsetf(ios::floatfield); cout.precision(a); cout.setf(ios::fixed,ios::floatfield);\r\n# define ordered_set tree<ll, null_type,less_equal<ll>, rb_tree_tag,tree_order_statistics_node_update>\r\n\r\n// find_by_order() - Returns an iterator to the k-th largest element (counting from zero)\r\n// order_of_key()  - The number of items in a set that are strictly smaller than our item \r\n// greater instead of less for descending order\r\n// less_equal works as ordered multiset\r\n// we can use pair<int,int> instead of int for pair of orderd set\r\n// for multiset st.lower_bound(x) works as upper bound and st.upper_bound(x) works as lower bound\r\n\r\ninline void file() {\r\n#ifndef ONLINE_JUDGE  \r\nfreopen(\"input.txt\", \"r\", stdin);\r\nfreopen(\"output.txt\", \"w\", stdout);\r\n#endif // ONLINE_JUDGE\r\n}\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------|\r\n\r\n\r\n\r\n                                                               // DEBUGGER //\r\n\r\n\r\n//----------------------------------------------------------------------------------------------------------------------------------|\r\n\r\ntemplate < typename F, typename S > ostream& operator << ( ostream& os, const pair< F, S > & p ) { return os << \"(\" << p.first << \", \" << p.second << \")\"; }\r\ntemplate < typename T > ostream &operator << ( ostream & os, const vector< T > &v ) { os << \"{\"; for(auto it = v.begin(); it != v.end(); ++it) { if( it != v.begin() ) os << \", \";  os << *it; }  return os << \"}\";  }\r\ntemplate < typename T >  ostream &operator << ( ostream & os, const set< T > &v ) { os << \"[\"; for(auto it = v.begin(); it != v.end(); ++it) { if( it != v.begin() ) os << \", \"; os << *it;  } return os << \"]\"; }\r\ntemplate < typename T > ostream &operator << ( ostream & os, const multiset< T > &v ) { os << \"[\"; for(auto it = v.begin(); it != v.end(); ++it) { if( it != v.begin() ) os << \", \"; os << *it; } return os << \"]\"; }\r\ntemplate < typename F, typename S > ostream &operator << ( ostream & os, const map< F, S > &v ) { os << \"[\"; for(auto it = v.begin(); it != v.end(); ++it) { if( it != v.begin() ) os << \", \"; os << it -> first << \" = \" << it -> second ; } return os << \"]\";  }\r\n#define dbg(args...) do {cerr << #args << \" : \"; iamarman(args); } while(0)\r\nvoid iamarman () { cerr << endl; }\r\ntemplate <typename T> void iamarman( T a[], int n ) {   for(int i = 0; i < n; ++i) cerr << a[i] << ' '; cerr << endl;  }\r\ntemplate <typename T, typename ... hello>  void iamarman( T arg, const hello &... rest) {   cerr << arg << ' ';  iamarman(rest...);  }\r\n\r\n//--------------------------------------------------------------------------------------------------------------------------------------|\r\n\r\n\r\n\r\n                                                           /////    FUNCTIONS     /////\r\n\r\n\r\n\r\nll bigmod(ll base,ll power){ ll res=1; ll p=base%mod; while(power>0) { if(power%2==1) {  res=((res%mod)*(p%mod))%mod; }  power/=2; p=((p%mod)*(p%mod))%mod; } return res; }\r\n\r\nll inversemod(ll base) { return bigmod(base,mod-2); }\r\n\r\nll poww(ull a,ull b) { ull ans=1; if(!b) return 1; while(b>1) {  if(b&1) { ans=ans*a%mod; } a=a*a%mod; b/=2; }return a*ans%mod; }\r\n\r\nint gcd(ll a,ll b) { ll rem; while(b%a!=0)  {  rem=b%a;  b=a;  a=rem; } return a; }\r\n\r\nmt19937 rng(chrono::high_resolution_clock::now().time_since_epoch().count());\r\n\r\n \r\nint dx[]={-1, 1 , 0 , 0 , -1 ,-1, 1, 1};\r\nint dy[]={ 0, 0 ,-1 , 1 , -1 , 1,-1, 1};\r\n\r\n// up = { -1,0 } , down = { 1,0 } , right = { 0,1 } , left = { 0,-1 }\r\n// up-right = { -1,1 } , up-left = { -1,-1 } , down-right = { 1,1 } , down-left = { 1,-1 }\r\n\r\n\r\n\r\n\r\n                                                   ///  ____________CODE STARTS FROM HERE____________    ///\r\n\r\n\r\n\r\n\r\nvoid solve()\r\n{   \r\n    \r\n   int n;\r\n   cin>>n;\r\n\r\n   set<ll> lucky;   \r\n\r\n   int lim=(1LL<<12);\r\n\r\n   for(int i=0;i<=lim;i++)\r\n   {\r\n        bitset<15> b(i);\r\n        int start=0;\r\n\r\n        for(int j=0;j<12;j++)\r\n        {\r\n            if(b[j]==1) start=j;\r\n        }\r\n\r\n        int set=0,unset=0;\r\n\r\n        for(int j=0;j<=start;j++)\r\n        {\r\n            if(b[j]==1) set++;\r\n            else unset++;\r\n        }\r\n\r\n        if(set==unset)\r\n        {\r\n            string s=\"\";\r\n            string k=\"\";\r\n            for(int j=0;j<=start;j++)\r\n            {\r\n                if(b[j]==1) s+='7';\r\n                else s+='4';\r\n\r\n                if(b[j]==1) k+='4';\r\n                else k+='7';\r\n            }\r\n\r\n            lucky.insert(stol(s));\r\n            lucky.insert(stol(k));\r\n        }\r\n   }\r\n\r\n\r\n   // dbg(lucky);\r\n\r\n    cout<<(int)*lucky.lower_bound(n)<<el;\r\n\r\n\r\n \r\n  \r\n}\r\nint main()\r\n{\r\n    optimise;\r\n   // file();\r\n\r\n    clock_t start= clock();\r\n//     int t;\r\n//    cin>>t;\r\n//    for(int i=1;i<=t;i++)\r\n    {\r\n        solve();\r\n       \r\n    }\r\n    cerr << \"Run Time : \" <<((double)(clock() - start) / CLOCKS_PER_SEC)<<el;\r\n  \r\n}"
}