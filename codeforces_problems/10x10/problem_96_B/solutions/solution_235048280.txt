{
    "id": 235048280,
    "contestId": 96,
    "creationTimeSeconds": 1701346758,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 96,
        "index": "B",
        "name": "Lucky Numbers (easy)",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "binary search",
            "bitmasks",
            "brute force"
        ]
    },
    "author": {
        "contestId": 96,
        "members": [
            {
                "handle": "bkifhr6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1310137200
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n\nset<long long> luckynumbers ;\n\nvoid getSlucky(long long number, int fours, int sevens) {\n    if(number > 1e10) \n        return;\n  \n    if(fours == sevens)\n        luckynumbers.insert(number);\n  \n    getSlucky(number * 10 + 7, fours, sevens + 1);\n    getSlucky(number * 10 + 4, fours + 1, sevens);\n}\n\nint main(){\n    std::ios_base::sync_with_stdio(0) ;\n    std::cin.tie(0); std::cout.tie(0);\n\n    getSlucky(4, 1, 0);\n    getSlucky(7, 0, 1);\n    \n    int n ; cin >> n ;\n    cout << *(luckynumbers.lower_bound(n)) ;\n\n    return 0 ;\n\n}\n\t\t \t\t\t         \t \t \t\t\t\t\t \t \t \t"
}