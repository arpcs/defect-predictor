{
    "id": 221484850,
    "contestId": 1467,
    "creationTimeSeconds": 1693592015,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1467,
        "index": "B",
        "name": "Hills And Valleys",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1467,
        "members": [
            {
                "handle": "notzaidkhan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1610116500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 530,
    "memoryConsumedBytes": 1228800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n    \r\n    int t;\r\n    cin >> t;\r\n\r\n    while (t--) {\r\n        int n;\r\n        cin >> n;\r\n        vector<int> inp(n);\r\n        vector<bool> hills(n, false);\r\n        vector<bool> valleys(n, false);\r\n        bool double_hill_valley = false;\r\n        bool triple_hill_valley = false;\r\n        int hill = 0, valley = 0;\r\n\r\n        for (int i = 0; i < n; i++) {\r\n            cin >> inp[i];\r\n        }\r\n\r\n        for (int i = 1; i < n - 1; i++) {\r\n            if (inp[i] > inp[i - 1] && inp[i] > inp[i + 1]) {\r\n                hill++;\r\n                hills[i] = true;\r\n            }\r\n            if (inp[i] < inp[i - 1] && inp[i] < inp[i + 1]) {\r\n                valley++;\r\n                valleys[i] = true;\r\n            }\r\n        }\r\n\r\n        if ((hills[0] && valleys[1]) || (hills[1] && valleys[0])) {\r\n            double_hill_valley = true;\r\n        }\r\n\r\n        for (int i = 1; i < n - 1; i++) {\r\n            if ((hills[i - 1] && hills[i + 1] && valleys[i]) || (valleys[i - 1] && valleys[i - 1] && hills[i])) {\r\n                triple_hill_valley = true;\r\n            }\r\n            if ((hills[i] && valleys[i + 1]) || (hills[i + 1] && valleys[i])) {\r\n                double_hill_valley = true;\r\n            }\r\n        }\r\n\r\n        if (triple_hill_valley) {\r\n            cout << max(0, hill + valley - 3) << endl;\r\n        } else if (double_hill_valley) {\r\n            cout << max(0, hill + valley - 2) << endl;\r\n        } else {\r\n            cout << max(0, hill + valley - 1) << endl;\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}