{
    "id": 193802692,
    "contestId": 843,
    "creationTimeSeconds": 1676536662,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 843,
        "index": "D",
        "name": "Dynamic Shortest Path",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 3400,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 843,
        "members": [
            {
                "handle": "Antichain"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1503592500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 195,
    "timeConsumedMillis": 9937,
    "memoryConsumedBytes": 79155200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\nconst ll maxn=1e5+5,inf=0x3f3f3f3f3f3f3f3f;\r\n\r\nll n,m,Q;\r\nll fir[maxn], ver[maxn], wei[maxn], nxt[maxn], vis[maxn], dis[maxn], add[maxn];\r\n\r\nqueue<ll> q[maxn];\r\n\r\nstruct node {\r\n\tll id,val;\r\n\tbool operator <(const node &other) const {\r\n\t\treturn val>other.val;\r\n\t} \r\n};\r\n\r\nvoid dj() {\r\n\tmemset(dis,0x3f,sizeof(dis));\r\n\tpriority_queue<node> q;\r\n\tq.push((node){1,dis[1]=0});\r\n\twhile(q.size()) {\r\n\t\tll x=q.top().id; q.pop();\r\n\t\tif(vis[x]) continue;\r\n\t\tvis[x]=1;\r\n\t\tfor(ll j=fir[x];j!=0;j=nxt[j]) {\r\n\t\t\tll y=ver[j],z=wei[j];\r\n\t\t\tif(dis[y]>dis[x]+z) dis[y]=dis[x]+z, q.push((node){y,dis[y]});\r\n\t\t}\r\n\t}\r\n\treturn ;\r\n}\r\n\r\nint main() {\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0), cout.tie(0);\r\n\t\r\n\tcin>>n>>m>>Q;\r\n\tfor(ll i=1,u,v,w;i<=m;i++) {\r\n\t\tcin>>u>>v>>w;\r\n\t\tver[i]=v, wei[i]=w, nxt[i]=fir[u], fir[u]=i;\r\n\t}\r\n\tdj();\r\n\tfor(ll i=1,op;i<=Q;i++) {\r\n\t\tcin>>op;\r\n\t\tif(op==1) {\r\n\t\t\tll x; cin>>x;\r\n\t\t\tif(dis[x]==inf) cout<<\"-1\\n\";\r\n\t\t\telse cout<<dis[x]<<'\\n';\r\n\t\t}else {\r\n\t\t\tll c,x; cin>>c;\r\n\t\t\tfor(ll j=1;j<=c;j++) {\r\n\t\t\t\tcin>>x;\r\n\t\t\t\twei[x]++;\r\n\t\t\t}\r\n\t\t\tfor(ll j=1;j<=n;j++) add[j]=c+1, vis[j]=0;\r\n\t\t\tadd[1]=0; q[0].push(1);\r\n\t\t\tfor(ll j=0;j<=c;j++) {\r\n\t\t\t\twhile(q[j].size()) {\r\n\t\t\t\t\tx=q[j].front(); q[j].pop();\r\n\t\t\t\t\tif(vis[x]) continue;\r\n\t\t\t\t\tvis[x]=1;\r\n\t\t\t\t\tfor(ll k=fir[x];k!=0;k=nxt[k]) {\r\n\t\t\t\t\t\tll y=ver[k], z=wei[k];\r\n\t\t\t\t\t\tif(add[y]>dis[x]+add[x]+z-dis[y]) {\r\n\t\t\t\t\t\t\tadd[y]=dis[x]+add[x]+z-dis[y];\r\n\t\t\t\t\t\t\tif(add[y]<=c) q[add[y]].push(y);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(int j=1;j<=n;j++) if(add[j]!=c+1) dis[j]+=add[j];\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn 0;\r\n}"
}