{
    "id": 233375497,
    "contestId": 514,
    "creationTimeSeconds": 1700368893,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 514,
        "index": "C",
        "name": "Watto and Mechanism",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures",
            "hashing",
            "string suffix structures",
            "strings"
        ]
    },
    "author": {
        "contestId": 514,
        "members": [
            {
                "handle": "SquirrelLover"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1423931400
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 4915200,
    "source": "#include <iostream>\r\n#include <set>\r\n#include <vector>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int n, m;\r\n    cin >> n >> m;\r\n    long long M = (long long)1e9+9;\r\n    long long B = 9973;\r\n    vector<long long> hash(6*(long long)1e5);\r\n    hash[0] = 1;\r\n    for(int i = 1; i < 6*(long long)1e5; i++)\r\n        hash[i] = hash[i-1] * B % M; \r\n    \r\n    set<long long> s;\r\n    for(int i = 0; i < n; i++)\r\n    {\r\n        string x;\r\n        cin >> x;\r\n        long long h = 0;\r\n        for(int j = 0; j < x.size(); j++) //solve hash of original\r\n        {\r\n            h = (h+hash[j]*(x[j]-'a'+1)%M)%M;\r\n        }\r\n        for(int j = 0; j < x.size(); j++) // altered letter\r\n        {\r\n            switch(x[j]) {\r\n                case 'a':\r\n                    s.insert((h+hash[j])%M);\r\n                    s.insert((h+2*hash[j])%M);\r\n                    break;\r\n                case 'b':\r\n                    s.insert(h-hash[j]);\r\n                    s.insert((h+hash[j])%M);\r\n                    break;\r\n                case 'c':\r\n                    s.insert(h-2*hash[j]);\r\n                    s.insert(h-hash[j]);\r\n                    break; \r\n            }\r\n        }\r\n        //cout << h << endl;\r\n    }\r\n\r\n    for(int i = 0; i < m; i++)\r\n    {\r\n        string x;\r\n        cin >> x;\r\n        long long h = 0;\r\n        for(int j = 0; j < x.size(); j++)\r\n            h = (h+hash[j]*(x[j]-'a'+1)%M)%M;\r\n        if(s.find(h) != s.end())\r\n            cout << \"YES\\n\";\r\n        else\r\n            cout << \"NO\\n\";\r\n    }\r\n}"
}