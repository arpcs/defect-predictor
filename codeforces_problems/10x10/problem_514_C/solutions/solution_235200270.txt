{
    "id": 235200270,
    "contestId": 514,
    "creationTimeSeconds": 1701424917,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 514,
        "index": "C",
        "name": "Watto and Mechanism",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures",
            "hashing",
            "string suffix structures",
            "strings"
        ]
    },
    "author": {
        "contestId": 514,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1423931400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 6860800,
    "source": "// // LUOGU_RID: 129204732\n// #include <bits/stdc++.h>\n// using namespace std;\n// using LL = long long;\n// int main() {\n// \tios::sync_with_stdio(false);\n// \tcin.tie(nullptr);\n\n// \tint n, m;\n// \tcin >> n >> m;\n// \tconstexpr LL N = 6e5, B = 131, P = 1e12 + 39;\n// \tvector<LL> pw(N + 1);\n// \tpw[0] = 1;\n// \tfor (int i = 1; i <= N; i++) { pw[i] = pw[i - 1] * B % P; }\n\n// \tset<LL> S;\n// \tfor (int i = 0; i < n; i++) {\n// \t\tstring s;\n// \t\tcin >> s;\n// \t\tLL h = 0;\n// \t\tfor (int j = 0; j < s.size(); j++) {\n// \t\t\th = (h * B % P + s[j]) % P;\n// \t\t}\n// \t\tS.insert(h);\n// \t}\n// \tfor (int i = 0; i < m; i++) {\n// \t\tstring s;\n// \t\tcin >> s;\n// \t\tint a = s.size();\n\n// \t\tLL h = 0;\n// \t\tfor (int i = 1; i <= a; i++) {\n// \t\t\th = (h * B % P + s[i - 1]) % P;\n// \t\t}\n\n// \t\tbool ok = false;\n// \t\tfor (int j = 0; j < s.size(); j++) {\n// \t\t\tfor (auto c : {'a', 'b', 'c'}) {\n// \t\t\t\tif (c == s[j]) continue;\n// \t\t\t\tif (S.count(\n// \t\t\t\t\t  (h + pw[s.size() - j - 1] * (c - s[j]) % P + P) % P)) {\n// \t\t\t\t\tok = true;\n// \t\t\t\t}\n// \t\t\t}\n// \t\t}\n// \t\tcout << (ok ? \"YES\" : \"NO\") << \"\\n\";\n// \t}\n// \treturn 0;\n// }\n\n#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n\nconst int maxn = 6e5 + 5, base = 7, mod = 1e15 + 7;\nint n, m, pw[maxn];\n\nvoid init_pw() {\n\tpw[0] = 1;\n\tfor (int i = 1; i < maxn; i++) {\n\t\tpw[i] = pw[i - 1] * base % mod;\n\t}\n}\n\nint get_hash(const string& s) {\n\tint res = 0;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tres = (res * base % mod + s[i]) % mod;\n\t}\n\treturn res;\n}\n\nint32_t main() {\n\tcin.tie(nullptr)->sync_with_stdio(false);\n\tinit_pw();\n\tcin >> n >> m;\n\tset<int> s;\n\tstring str;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> str;\n\t\ts.insert(get_hash(str));\n\t}\n\tfor (int i = 0; i < m; i++) {\n\t\tcin >> str;\n\t\tint h = get_hash(str);\n\t\tbool ok = false;\n\t\tfor (int j = 0; j < str.size(); j++) {\n\t\t\tfor (char c : {'a', 'b', 'c'}) {\n\t\t\t\tif (c == str[j]) continue;\n\t\t\t\tint nh = (h + (c - str[j]) * pw[str.size() - j - 1] % mod + mod)\n\t\t\t\t\t   % mod;\n\t\t\t\tif (s.count(nh)) {\n\t\t\t\t\tok = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << (ok ? \"YES\" : \"NO\") << \"\\n\";\n\t}\n\treturn 0;\n}\n\t\t\t \t\t\t\t \t\t \t \t  \t  \t   \t \t  \t"
}