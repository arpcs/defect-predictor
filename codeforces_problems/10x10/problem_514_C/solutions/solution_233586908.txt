{
    "id": 233586908,
    "contestId": 514,
    "creationTimeSeconds": 1700493810,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 514,
        "index": "C",
        "name": "Watto and Mechanism",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures",
            "hashing",
            "string suffix structures",
            "strings"
        ]
    },
    "author": {
        "contestId": 514,
        "members": [
            {
                "handle": "Nabeel_Ismaeel"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1423931400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 702,
    "memoryConsumedBytes": 48435200,
    "source": "#include<bits/stdc++.h>\r\n#define fastIO ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\r\n#define fileIO freopen(\"input.in\", \"r\", stdin); freopen(\"output.in\", \"w\", stdout);\r\n#define all(x) (x).begin(),(x).end()\r\n#define endl \"\\n\" ; \r\ntypedef long long ll;\r\nusing namespace std ;\r\n\r\n\r\nstruct Node {\r\n    int nxt [3]  , end ;  \r\n    Node() {\r\n        memset(nxt , -1 , sizeof nxt) ; \r\n        end= 0  ;\r\n    }\r\n} ; \r\n\r\n\r\nvoid add(string &str ,  vector<Node> & trie) {\r\n    int cur = 0 ; \r\n    for (int i = 0 ; i< str.size() ; i++) {\r\n        if (trie[cur].nxt[str[i] - 'a'] == -1) {\r\n            trie[cur].nxt[str[i] - 'a'] = trie.size() ; \r\n            trie.push_back(Node()) ; \r\n        }\r\n        cur = trie[cur].nxt[str[i] - 'a'] ; \r\n    }\r\n    trie[cur].end = 1 ; \r\n}\r\n\r\n\r\nint rec (int pos ,int cur  , int cnt , string &str , vector<Node> &trie) { \r\n\r\n    if (pos==str.size()) {\r\n        if (cnt==1 && trie[cur].end) \r\n            return 1 ; \r\n        return 0 ; \r\n    }\r\n    \r\n    int ret = 0 ; \r\n    for (int i = 0 ; i<3 ; i++)  {\r\n        if (i == str[pos]-'a' && trie[cur].nxt[i]!=-1 ) { \r\n            ret|=rec(pos+1 ,trie[cur].nxt[i] , cnt , str , trie ) ; \r\n        }\r\n        if (i!= str[pos] - 'a' && trie[cur].nxt[i]!=-1 && cnt==0) {\r\n            ret|=rec(pos+1 ,trie[cur].nxt[i] , cnt+1 , str , trie ) ; \r\n        }\r\n    }\r\n    return ret ; \r\n}\r\n\r\n\r\nint  main() {\r\n    fastIO   \r\n    \r\n    int n , q ; cin>>n>>q ; \r\n    vector<Node> trie(1) ; \r\n    string str ; \r\n\r\n    for (int i = 0  ; i<n ; i++) {\r\n        cin>>str ; \r\n        add(str , trie)  ;\r\n    }\r\n\r\n    for (int i = 0 ; i<q ; i++) {\r\n        cin>>str  ; \r\n        rec(0 , 0 , 0 , str , trie) ? cout<<\"YES\\n\" : cout<<\"NO\\n\" ; \r\n    }\r\n\r\n\r\n\r\n\r\n    return 0 ;  \r\n}"
}