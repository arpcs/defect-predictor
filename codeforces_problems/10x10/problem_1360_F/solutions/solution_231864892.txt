{
    "id": 231864892,
    "contestId": 1360,
    "creationTimeSeconds": 1699396497,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1360,
        "index": "F",
        "name": "Spy-string",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "bitmasks",
            "brute force",
            "constructive algorithms",
            "dp",
            "hashing",
            "strings"
        ]
    },
    "author": {
        "contestId": 1360,
        "members": [
            {
                "handle": "kauperwood"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1590327300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ld = long double;\n#define debug(x) std::cerr << __FUNCTION__ << \":\" << __LINE__ << \" \" << #x << \" = \" << x << '\\n';\nconst ll INF = 4e18;\n//#pragma GCC optimize(\"Ofast\")\n//#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,sse4.1,sse4.2,popcnt,abm,mmx,avx,avx2,tune=native\")\n//#pragma GCC optimize(\"unroll-loops\")\nbool control(vector<string> &ar, string &s){\n    ll cnt;\n    for (int i =0; i < ar.size(); i++){\n        cnt = 0;\n        for (int j = 0; j < ar[i].size(); j++){\n            if (s[j] != ar[i][j]){\n                cnt++;\n            }\n        }\n        if (cnt > 1){\n            return false;\n        }\n    }\n    return true;\n}\nvoid solve(){\n    ll n, m;\n    cin >> n >> m;\n    vector<string> ar(n);\n    for (int i = 0; i < n; i++){\n        cin >> ar[i];\n    }\n    string checker;\n    if (control(ar, ar[0])){\n        cout << ar[0] << '\\n';\n        return;\n    }\n    for (int i =0; i < m; i++){\n        for (char c ='a'; c<='z';c++){\n            checker = (ar[0].substr(0, i));\n            checker.push_back(c);\n            checker+=(ar[0].substr(i + 1, ar[0].size()));\n            if (control(ar, checker)){\n                cout << checker << \"\\n\";\n                return;\n            }\n        }   \n    }\n    cout << \"-1\\n\";\n}\nint main(){\n    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n    int t;\n    cin >> t;\n    while(t--){\n        solve();\n    }\n    return 0;\n}"
}