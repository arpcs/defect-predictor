{
    "id": 221620896,
    "contestId": 1015,
    "creationTimeSeconds": 1693700226,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1015,
        "index": "D",
        "name": "Walking Between Houses",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1015,
        "members": [
            {
                "handle": "hahatest"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1533047700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\n\n#include <limits>\n#include <vector>\n#include <map>\n#include <set>\n#include <cmath>\n\ntypedef long long ll;\n\nusing namespace std;\n\nll N, K, S;\n\n\nvoid print(int x, int y, int z) {\n    // cout<<x<<\" \"<<y<<\" \"<<z<<endl;\n    ll cur = 1;\n    vector<int> ans;\n\n    while(x > 0) {\n        if(cur == 1) {\n            cur = N;\n        } else if (cur == N){\n            cur = 1;\n        }\n        // ans.push_back(cur);\n        cout<<cur<<\" \";\n        x --;\n    }\n\n    if(z > 0) {\n        if(cur == 1) {\n            cur += z;\n        } else {\n            cur -= z;\n        }\n        //ans.push_back(cur);\n        cout<<cur<<\" \";\n    }\n\n    while(y > 0) {\n        if(cur + 1 <= N) {\n            cur += 1;\n        } else if(cur - 1 >= 1) {\n            cur -= 1;\n        }\n        // ans.push_back(cur);\n        cout<<cur<<\" \";\n        y -= 1;\n    }\n\n    cout<<endl;\n}\n\nbool ok(int m) {\n    ll tmp = S - K + 1 - (N-2) * m;\n    return tmp < N;\n}\n\nvoid solve() {\n    cin>>N>>K>>S;\n\n    //pii range = make_pair(K, (N-1) * K);\n\n    if(!(K <= S && S <= (N-1) * K)) {\n        cout<<\"NO\"<<endl;\n        return; \n    }\n    cout<<\"YES\"<<endl;\n\n    ll x, y, z;\n\n    if((S-K) % (N-2) == 0) {\n        x = (S - K) / (N-2);\n        y = K - x;\n        print(x, y, 0);\n    } else {\n        // binary search on z\n\n        /*\n        for(z=1; z<N; z++) {\n            ll right = S - K + 1 - z;\n            if(right % (N-2) == 0) {\n                x = right / (N-2);\n                break;\n            }\n        }\n        */\n        ll low = -1, high = S+1;\n        while(low + 1 < high) {\n            ll mid = (low + high) / 2;\n            if(ok(mid)) {\n                high = mid;\n            } else {\n                low = mid;\n            }\n        }\n        // cout<<\"low high = \"<<low<<\" \"<<high<<endl;\n        x = high;\n        y = K - x - 1;\n        z = S-K+1-(N-2)*x;\n        // cout<<\"so x = \"<<low<<\" y = \"<<y<<\" z = \"<<z<<endl;\n        print(x, y, z);\n    }\n}\n\n\nint main() {\n    // speed up\n    ios::sync_with_stdio(0);\n\tcin.tie(0);\n\n    solve();\n\n    return 0;\n}\n"
}