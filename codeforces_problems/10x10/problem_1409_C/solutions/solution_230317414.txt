{
    "id": 230317414,
    "contestId": 1409,
    "creationTimeSeconds": 1698559797,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1409,
        "index": "C",
        "name": "Yet Another Array Restoration",
        "type": "PROGRAMMING",
        "rating": 1200,
        "tags": [
            "brute force",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1409,
        "members": [
            {
                "handle": "daank"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599230100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int t;\r\n    cin >> t;\r\n    while (t--) {\r\n        int n, x, y;\r\n        cin >> n >> x >> y;\r\n        vector<int> a(n); // stores the array for each case\r\n        int min_last = 1e9;\r\n        int A, D;\r\n        for (int i = 0; i < n; i++) {\r\n            for (int j = i + 1; j < n; j++) {\r\n                int val_diff = y - x;\r\n                int pos_diff = j - i;\r\n                if (val_diff % pos_diff == 0) {\r\n                    // reconstruction of the array\r\n                    int common_diff = val_diff / pos_diff;\r\n                    a[i] = x, a[j] = y;\r\n                    for (int k = i - 1; k >= 0; k--) { // reconstruct the elements before y\r\n                        a[k] = a[k + 1] - common_diff;\r\n                    }\r\n                    for (int k = i + 1; k < n; k++) {\r\n                        a[k] = a[k - 1] + common_diff;\r\n                    }\r\n                    int last_term = a[n - 1];\r\n                    if (last_term < min_last && a[0] > 0) {\r\n                        min_last = last_term;\r\n                        A = a[0];\r\n                        D = common_diff;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (int i = 1; i <= n; i++) {\r\n            cout << A + (i - 1) * D << ' ';\r\n        }\r\n        cout << '\\n';\r\n    }\r\n}"
}