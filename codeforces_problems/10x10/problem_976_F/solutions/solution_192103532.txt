{
    "id": 192103532,
    "contestId": 976,
    "creationTimeSeconds": 1675489887,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 976,
        "index": "F",
        "name": "Minimal k-covering",
        "type": "PROGRAMMING",
        "rating": 2500,
        "tags": [
            "flows",
            "graphs"
        ]
    },
    "author": {
        "contestId": 976,
        "members": [
            {
                "handle": "AL_fly"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1525099200
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=8005;\r\nint n1,n2,m,tot=1,head[N],dep[N],s,t,a[N],d[N],sum;\r\nstruct o{\r\n    int ne,to,dis,id;\r\n}e[N<<4];\r\ninline void ad(int x,int y,int k,int i){\r\n    e[++tot].ne=head[x];\r\n    head[x]=tot;\r\n    e[tot].to=y;\r\n    e[tot].dis=k;\r\n    e[tot].id=i;\r\n}\r\ninline void add(int x,int y,int k,int i){\r\n    ad(x,y,k,i),ad(y,x,0,i);\r\n}\r\nvector<int>ans;\r\ninline bool bfs(){\r\n    queue<int>q;#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=8005;\r\nint n1,n2,m,tot=1,head[N],dep[N],s,t,a[N],d[N],sum;\r\nstruct o{\r\n    int ne,to,dis,id;\r\n}e[N<<4];\r\ninline void ad(int x,int y,int k,int i){\r\n    e[++tot].ne=head[x];\r\n    head[x]=tot;\r\n    e[tot].to=y;\r\n    e[tot].dis=k;\r\n    e[tot].id=i;\r\n}\r\ninline void add(int x,int y,int k,int i){\r\n    ad(x,y,k,i),ad(y,x,0,i);\r\n}\r\nvector<int>ans;\r\ninline bool bfs(){\r\n    queue<int>q;\r\n    memset(dep,0,sizeof(dep));\r\n    dep[s]=1,q.push(s);\r\n    while(q.size()){\r\n        int x=q.front();\r\n        q.pop();\r\n        for(int i=head[x];i;i=e[i].ne){\r\n            int to=e[i].to;\r\n            if(dep[to]||!e[i].dis)continue;\r\n            dep[to]=dep[x]+1;\r\n            q.push(to);\r\n        }\r\n    }\r\n    return dep[t];\r\n}\r\ninline int dinic(int x,int sum){\r\n    if(x==t)return sum;\r\n    int in=sum,out=0;\r\n    for(int i=head[x];i;i=e[i].ne){\r\n        int to=e[i].to;\r\n        if(dep[to]!=dep[x]+1||!e[i].dis)continue;\r\n        int res=dinic(to,min(in,e[i].dis));\r\n        in-=res,out+=res,e[i].dis-=res,e[i^1].dis+=res;\r\n        if(!res)dep[to]=0;\r\n        if(!in)break;\r\n    }\r\n    return out;\r\n}\r\nsigned main(){\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0),cout.tie(0);\r\n    cin>>n1>>n2>>m;\r\n    s=0,t=n1+n2+1;\r\n    for(int i=1;i<=m;i++){\r\n        int x,y;\r\n        cin>>x>>y;\r\n        add(x,y+n1,1,i);\r\n        d[x]++,d[y+n1]++;\r\n    }\r\n    for(int i=1;i<=n1;i++)add(s,i,0,0);\r\n    for(int i=1;i<=n2;i++)add(i+n1,t,0,0);\r\n    int mx=m;\r\n    for(int i=1;i<=n1+n2;i++)mx=min(mx,d[i]);\r\n    cout<<0<<'\\n';\r\n    for(int k=1;k<=mx;k++){\r\n        for(int i=head[s];i;i=e[i].ne){\r\n            e[i].dis++;\r\n        }\r\n        for(int i=head[t];i;i=e[i].ne){\r\n            e[i^1].dis++;\r\n        }\r\n        ans.clear();\r\n        while(bfs())sum+=dinic(s,1e9);\r\n        for(int i=head[s];i;i=e[i].ne){\r\n            int to=e[i].to;\r\n            a[to]=e[i].dis;\r\n        }\r\n        for(int i=head[t];i;i=e[i].ne){\r\n            int to=e[i].to;\r\n            a[to]=e[i^1].dis;\r\n        }int now=sum;\r\n        for(int x=1;x<=n1;x++){\r\n            now+=a[x];\r\n            for(int i=head[x];i;i=e[i].ne){\r\n                int to=e[i].to;\r\n                if(to==s)continue;\r\n                if(!e[i].dis)ans.emplace_back(e[i].id);\r\n                else if(a[x])ans.emplace_back(e[i].id),a[x]--;\r\n            }\r\n        }\r\n        for(int x=1+n1;x<=n1+n2;x++){\r\n            if(!a[x])continue;now+=a[x];\r\n            for(int i=head[x];i;i=e[i].ne){\r\n                int to=e[i].to;\r\n                if(to==t)continue;\r\n                if(!e[i].dis)ans.emplace_back(e[i].id),a[x]--;\r\n                if(!a[x])break;\r\n            }\r\n        }//ans.size()>now\r\n        //now<0\r\n        cout<<ans.size()<<' ';\r\n        for(int x:ans)cout<<x<<' ';\r\n        cout<<'\\n';\r\n    }\r\n    return 0;\r\n}\r\n    memset(dep,0,sizeof(dep));\r\n    dep[s]=1,q.push(s);\r\n    while(q.size()){\r\n        int x=q.front();\r\n        q.pop();\r\n        for(int i=head[x];i;i=e[i].ne){\r\n            int to=e[i].to;\r\n            if(dep[to]||!e[i].dis)continue;\r\n            dep[to]=dep[x]+1;\r\n            q.push(to);\r\n        }\r\n    }\r\n    return dep[t];\r\n}\r\ninline int dinic(int x,int sum){\r\n    if(x==t)return sum;\r\n    int in=sum,out=0;\r\n    for(int i=head[x];i;i=e[i].ne){\r\n        int to=e[i].to;\r\n        if(dep[to]!=dep[x]+1||!e[i].dis)continue;\r\n        int res=dinic(to,min(in,e[i].dis));\r\n        in-=res,out+=res,e[i].dis-=res,e[i^1].dis+=res;\r\n        if(!res)dep[to]=0;\r\n        if(!in)break;\r\n    }\r\n    return out;\r\n}\r\nsigned main(){\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0),cout.tie(0);\r\n    cin>>n1>>n2>>m;\r\n    s=0,t=n1+n2+1;\r\n    for(int i=1;i<=m;i++){\r\n        int x,y;\r\n        cin>>x>>y;\r\n        add(x,y+n1,1,i);\r\n        d[x]++,d[y+n1]++;\r\n    }\r\n    for(int i=1;i<=n1;i++)add(s,i,0,0);\r\n    for(int i=1;i<=n2;i++)add(i+n1,t,0,0);\r\n    int mx=m;\r\n    for(int i=1;i<=n1+n2;i++)mx=min(mx,d[i]);\r\n    cout<<0<<'\\n';\r\n    for(int k=1;k<=mx;k++){\r\n        for(int i=head[s];i;i=e[i].ne){\r\n            e[i].dis++;\r\n        }\r\n        for(int i=head[t];i;i=e[i].ne){\r\n            e[i^1].dis++;\r\n        }\r\n        ans.clear();\r\n        while(bfs())sum+=dinic(s,1e9);\r\n        for(int i=head[s];i;i=e[i].ne){\r\n            int to=e[i].to;\r\n            a[to]=e[i].dis;\r\n        }\r\n        for(int i=head[t];i;i=e[i].ne){\r\n            int to=e[i].to;\r\n            a[to]=e[i^1].dis;\r\n        }int now=sum;\r\n        for(int x=1;x<=n1;x++){\r\n            now+=a[x];\r\n            for(int i=head[x];i;i=e[i].ne){\r\n                int to=e[i].to;\r\n                if(to==s)continue;\r\n                if(!e[i].dis)ans.emplace_back(e[i].id);\r\n                else if(a[x])ans.emplace_back(e[i].id),a[x]--;\r\n            }\r\n        }\r\n        for(int x=1+n1;x<=n1+n2;x++){\r\n            if(!a[x])continue;now+=a[x];\r\n            for(int i=head[x];i;i=e[i].ne){\r\n                int to=e[i].to;\r\n                if(to==t)continue;\r\n                if(!e[i].dis)ans.emplace_back(e[i].id),a[x]--;\r\n                if(!a[x])break;\r\n            }\r\n        }//ans.size()>now\r\n        //now<0\r\n        cout<<ans.size()<<' ';\r\n        for(int x:ans)cout<<x<<' ';\r\n        cout<<'\\n';\r\n    }\r\n    return 0;\r\n}"
}