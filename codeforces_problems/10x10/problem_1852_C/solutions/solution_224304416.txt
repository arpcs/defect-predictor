{
    "id": 224304416,
    "contestId": 1852,
    "creationTimeSeconds": 1695303459,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1852,
        "index": "C",
        "name": "Ina of the Mountain",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2400,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1852,
        "members": [
            {
                "handle": "251Sec"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1690122900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1740800,
    "source": "// LUOGU_RID: 125487507\n#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nint n, k, T;\r\nll a[200005], ans;\r\nstruct Node {\r\n    int id;\r\n    ll val;\r\n    bool operator<(const Node &o) const { return val > o.val; }\r\n};\r\npriority_queue<Node> q;\r\nint main() {\r\n    scanf(\"%d\", &T);\r\n    q = priority_queue<Node>();\r\n    while (T--) {\r\n        scanf(\"%d%d\", &n, &k);\r\n        for (int i = 1; i <= n; i++) scanf(\"%lld\", a + i), a[i] %= k;\r\n        for (int i = n; i; i--) a[i] -= a[i - 1];\r\n        for (int i = 1; i <= n; i++) {\r\n            while (q.size()) {\r\n                Node u = q.top(); q.pop();\r\n                if (a[i] - k >= 0) {\r\n                    int t = a[i] / k; a[i] %= k;\r\n                    a[u.id] += k * t;\r\n                }\r\n                else {\r\n                    if (a[i] >= (u.val + k) - max(u.val, 0ll)) {\r\n                        a[i] -= k;\r\n                        a[u.id] += k;\r\n                    } else {\r\n                        q.push(u);\r\n                        break;\r\n                    }\r\n                }\r\n                u.val = a[u.id];\r\n                q.push(u);\r\n            }\r\n            q.push({ i, a[i] });\r\n        }\r\n        ans = 0;\r\n        for (int i = 1; i <= n; i++) ans += a[i] * (a[i] > 0);\r\n        printf(\"%lld\\n\", ans);\r\n    }\r\n    return 0;\r\n}"
}