{
    "id": 136326744,
    "contestId": 207,
    "creationTimeSeconds": 1637492075,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 207,
        "index": "A2",
        "name": "Beaver's Calculator 1.0",
        "type": "PROGRAMMING",
        "points": 30.0,
        "rating": 1800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 207,
        "members": [
            {
                "handle": "mtfffj"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1341730800
    },
    "programmingLanguage": "GNU C11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS2",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <string>\r\n#include <deque>\r\n#include <chrono>\r\n\r\n#include <ctime>\r\n#include <random>\r\n\r\nusing namespace std;\r\n\r\ntypedef unsigned long long ll;\r\n\r\nstruct s_request\r\n{\r\n    deque<ll> f; int id;\r\n\r\n    /**\r\n    * @details construct a sequence for which f[i] = (f[i - 1] * x + y ) % m.\r\n    * @param k length of sequence\r\n    * @param a first element of the sequence or f[0].\r\n    */\r\n    s_request(int k, ll a, ll x, ll y, ll m, int id) : id(id)\r\n    {\r\n        this->f.push_back(a); \r\n        for (int i = 1; i < k; i++)\r\n        {\r\n            int j = f.back();\r\n            this->f.push_back(\r\n                ( (j * (x % m) % m) + (y % m) ) % m\r\n            );\r\n        }\r\n    }\r\n    s_request(vector<ll> arr, int id)\r\n    {\r\n        this->id = id;\r\n        for (auto item : arr) f.push_back(item); \r\n    }\r\n    s_request (int id) : id(id) {}\r\n\r\n    void alloc(int k, ll a, ll x, ll y, ll m)\r\n    {\r\n        this->f.push_back(a); \r\n        for (int i = 1; i < k; i++)\r\n        {\r\n            int j = f.back();\r\n            this->f.push_back(\r\n                ( (j * (x % m) % m) + (y % m) ) % m\r\n            );\r\n        }\r\n    }\r\n\r\n    void f_debug_output()\r\n    { for (auto it : f) { cout << it << \" \"; } cout << endl; }\r\n};\r\n\r\n#define SIZE 20000\r\nint main()\r\n{\r\n    srand(time(NULL));\r\n\r\n    ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);\r\n    int n; ll tot = 0; cin >> n; vector<s_request> v; \r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        ll k, a, x, y, m; \r\n        v.push_back(s_request(i));\r\n        cin >> k >> a >> x >> y >> m;\r\n        tot += k; v.rbegin()->alloc(k, a, x, y, m);\r\n    }\r\n    \r\n    int top_val = 0, ans = 0; vector<pair<ll, int>> ans_arr;\r\n    #define __ERR_NOT_FOUND 1e10\r\n    \r\n    auto start = std::chrono::system_clock::now();\r\n\r\n    for (int i = 1; i <= tot; i++)\r\n    {\r\n        int min_id, max_min_id;\r\n        ll min_val = __ERR_NOT_FOUND, max_min_val = __ERR_NOT_FOUND;\r\n        for (int j = 0; j < v.size(); j++)\r\n        {\r\n            if (v[j].f.empty()) continue;\r\n            int p = v[j].f.front();\r\n\r\n            if (p <= min_val)\r\n            { min_id     = v[j].id; min_val = p; }\r\n            if (p >= top_val && p <= max_min_val)\r\n            { max_min_id = v[j].id; max_min_val = p; }\r\n        }\r\n        \r\n        if (max_min_val == __ERR_NOT_FOUND)\r\n        {\r\n            top_val = min_val;\r\n            v[min_id].f.pop_front(); ans++;\r\n            if (i <= 200000)\r\n                ans_arr.push_back(make_pair(top_val, min_id));\r\n        }\r\n        else\r\n        {\r\n            top_val = max_min_val;\r\n            v[max_min_id].f.pop_front();\r\n            if (i <= 200000)\r\n                ans_arr.push_back(make_pair(top_val, max_min_id));\r\n        }\r\n    }\r\n\r\n    cout << ans << endl;\r\n    for (auto item : ans_arr) { cout << item.first << \" \" << item.second + 1 << endl; }\r\n    return 0;\r\n}"
}