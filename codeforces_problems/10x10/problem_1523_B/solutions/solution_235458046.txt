{
    "id": 235458046,
    "contestId": 1523,
    "creationTimeSeconds": 1701571617,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1523,
        "index": "B",
        "name": "Lord of the Values",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1100,
        "tags": [
            "constructive algorithms"
        ]
    },
    "author": {
        "contestId": 1523,
        "members": [
            {
                "handle": "KaliGa70"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1622385300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/** \r\n * @author KaliGa70\r\n * \r\n * Github: https://github.com/KaliGa70\r\n * \r\n**/\r\n\r\n#include <bits/stdc++.h>\r\n\r\n/*============================================================================*/\r\n\r\n#define kaliga70 '\\n'\r\n#define yes cout << \"YES\" << kaliga70;\r\n#define no cout << \"NO\" << kaliga70;\r\n#define _ ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n\r\n/*============================================================================*/\r\n\r\ntypedef long long ll;\r\ntypedef double dd;\r\ntypedef long long int lli;\r\ntypedef unsigned long long ull;\r\n\r\n/*============================================================================*/\r\n\r\nusing namespace std;\r\n\r\n/*============================================================================*/\r\n\r\nvoid solve() {\r\n\r\n    int t;\r\n    cin >> t;\r\n\r\n    while (t--) {\r\n        int n;\r\n        cin >> n;\r\n\r\n        vector<int> a(n);\r\n        for (int i = 0; i < n; ++i) {\r\n            cin >> a[i];\r\n        }\r\n\r\n        vector<pair<int, pair<int, int>>> acciones;\r\n\r\n        for (int i = 0; i < n - 1; i += 2) {\r\n            acciones.push_back({2, {i + 1, i + 2}});\r\n            acciones.push_back({2, {i + 1, i + 2}});\r\n            acciones.push_back({2, {i + 1, i + 3}});\r\n            acciones.push_back({2, {i + 1, i + 3}});\r\n            acciones.push_back({2, {i + 2, i + 4}});\r\n            acciones.push_back({2, {i + 2, i + 4}});\r\n            acciones.push_back({1, {i + 1, i + 2}});\r\n            acciones.push_back({1, {i + 1, i + 2}});\r\n        }\r\n\r\n        cout << acciones.size() << endl;\r\n        for (const auto& accion : acciones) {\r\n            cout << accion.first << \" \" << accion.second.first << \" \" << accion.second.second << endl;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n/*============================================================================*/\r\n\r\nint main(){_\r\n\r\n    int casos = 1;\r\n    //cin >> casos;\r\n\r\n    while(casos != 0){solve(); casos--;}\r\n    \r\n    return 0;\r\n\t\r\n}\r\n"
}