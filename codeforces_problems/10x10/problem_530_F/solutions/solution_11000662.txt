{
    "id": 11000662,
    "contestId": 530,
    "creationTimeSeconds": 1430769701,
    "relativeTimeSeconds": 401,
    "problem": {
        "contestId": 530,
        "index": "F",
        "name": "Jumping frogs",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "*special"
        ]
    },
    "author": {
        "contestId": 530,
        "members": [
            {
                "handle": "K_D_M"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1427562000
    },
    "programmingLanguage": "Picat",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 20,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 3993600,
    "source": "table(+, +, +, max)\r\njump(X, Y, K, Dist) ?=>\r\n    (\r\n      NewX = X + K, NewY = Y ;\r\n      NewX = X - K, NewY = Y ;\r\n      NewX = X, NewY = Y + K ;\r\n      NewX = X, NewY = Y - K\r\n    ),\r\n    land(NewX, NewY),\r\n    jump(NewX, NewY, K, Dist).\r\njump(X, Y, _K, Dist) =>\r\n    Dist = abs(X) + abs(Y).\r\n\r\ntable(-, max)\r\nbest_frog(K, Dist) ?=>\r\n    between(1, 10, K),\r\n    jump(0, 0, K, Dist).\r\n\r\nmain =>\r\n    N = read_int(),\r\n    Facts = [$land(X, Y) : _I in 1..N, X = read_int(), Y = read_int()],\r\n    cl_facts(Facts),\r\n    best_frog(_K, Dist),\r\n    println(Dist)."
}