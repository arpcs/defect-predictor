{
    "id": 221232880,
    "contestId": 530,
    "creationTimeSeconds": 1693467380,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 530,
        "index": "F",
        "name": "Jumping frogs",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "*special"
        ]
    },
    "author": {
        "contestId": 530,
        "members": [
            {
                "handle": "sha7dow"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1427562000
    },
    "programmingLanguage": "Picat",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define endl \"\\n\"\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n#define all(x) (x).begin(), (x).end()\r\n#define SZ(x) ((int)(x).size())\r\n#define Bit(x) (1 << (x))\r\n#define DB cout << \"---------- \" << __LINE__ << \" ----------\" << endl;\r\nusing PII = pair<int, int>;\r\nusing ll = long long;\r\nusing db = double;\r\nusing u64 = unsigned long long;\r\nusing VI = vector<int>;\r\nusing VL = vector<ll>;\r\nusing VVI = vector<VI>;\r\nusing VVL = vector<VL>;\r\ntemplate<class T>inline bool ckmin(T &x, const T &y){ return x > y ? x = y, 1: 0; }\r\ntemplate<class T>inline bool ckmax(T &x, const T &y){ return x < y ? x = y, 1: 0; }\r\nconst int IINF = (1 << 30);  // add 2 IINF will exceed int. \r\nconst ll LINF = (1ll << 60);\r\nconst db DINF = (1e100);\r\nmt19937 mrand(time(0));\r\n// Header\r\n\r\nint dx[] = {1, -1, 0, 0}, dy[] = {0, 0, 1, -1};\r\nbool vis[11][50][50];\r\n\r\ninline void solve() {\r\n    int n;\r\n    cin >> n;    \r\n    VVI h(50, VI(50));\r\n    int ox = 25, oy = 25;\r\n    for (int i = 1; i <= n; i++) {\r\n        int x, y;\r\n        cin >> x >> y;\r\n        h[x + ox][y + oy] = 1;\r\n    }\r\n    queue<array<int, 3>> q;\r\n    for (int i = 1; i <= 10; i++) q.push({ox, oy, i});\r\n    int ans = 0;\r\n    while (!q.empty()) {\r\n        auto [x, y, d] = q.front();\r\n        ckmax(ans, abs(x - ox) + abs(y - oy));\r\n        q.pop();\r\n        for (int k = 0; k < 4; k++) {\r\n            int nx = x + d * dx[k], ny = y + d * dy[k]; \r\n            if (h[nx][ny] && !vis[d][nx][ny]) {\r\n                vis[d][nx][ny] = true;\r\n                q.push({nx, ny, d});\r\n            }\r\n        }\r\n    }\r\n    cout << ans << endl;\r\n}\r\n\r\n\r\nint main(void) {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    // cout << fixed << setprecision(10);\r\n    int tc = 1;\r\n    // cin >> tc;\r\n    for (int i = 1; i <= tc; i++) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}