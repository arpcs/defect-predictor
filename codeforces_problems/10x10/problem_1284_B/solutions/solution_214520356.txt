{
    "id": 214520356,
    "contestId": 1284,
    "creationTimeSeconds": 1689787334,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1284,
        "index": "B",
        "name": "New Year and Ascent Sequence",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1400,
        "tags": [
            "binary search",
            "combinatorics",
            "data structures",
            "dp",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1284,
        "members": [
            {
                "handle": "kartikchauhan189"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1578139500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 72,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 3276800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define frl(i,j,n) for(int i =j; i<n; ++i)\r\n#define all(x) (x).begin(), (x).end() // 1 + all(x) - 2 gives element from index 1  and from 2 elements before end()\r\n#define lower_case(str) transform(str.begin(), str.end(), str.begin(), ::tolower)\r\n#define vi(v,n) vector<int> v(n);\r\n#define int long long\r\n#define ld long double\r\n#define printv(v) for(auto x : v) cout << x << ' ';\r\n\r\nint32_t main(){\r\nios::sync_with_stdio(0);\r\ncin.tie(0);\r\ncout.tie(0);\r\n//*look out for out of bounds\r\n    vector<pair<int,int>> pr;\r\n    int n;\r\n    cin >> n;\r\n    int ans = n*n;\r\n\r\n    frl(i,0,n){\r\n        int l;\r\n        cin >> l;\r\n        vector<int> v(l);\r\n        frl(j,0,l){\r\n            cin >> v[j];\r\n        }\r\n        reverse(all(v));\r\n        if(is_sorted(all(v))){\r\n            pr.emplace_back(v[0], v.back());\r\n        }\r\n    }\r\n    sort(all(pr));\r\n\r\n    frl(i,0,pr.size()){\r\n        ans -= pr.end() - lower_bound(all(pr), make_pair(pr[i].second, - 1ll) ); //okk aise search krte he pairs ko\r\n    }\r\n    cout << ans << \"\\n\";\r\n}"
}