{
    "id": 208016771,
    "contestId": 1284,
    "creationTimeSeconds": 1685593890,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1284,
        "index": "B",
        "name": "New Year and Ascent Sequence",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1400,
        "tags": [
            "binary search",
            "combinatorics",
            "data structures",
            "dp",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1284,
        "members": [
            {
                "handle": "hzgang07"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1578139500
    },
    "programmingLanguage": "GNU C11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// Hydro submission #647767d72d3446abf9c2e60a@1685593888926\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define int long long\r\n\r\nconst int N = 100007;\r\n\r\nint n, ans, len = 1, flag, Min[N], Max[N];\r\n\r\nsigned main ()\r\n{\r\n\tcin >> n;\r\n\tans = n * n;\r\n\tfor (int i = 1, m; i <= n; ++ i)\r\n\t{\r\n\t\tcin >> m;\r\n\t\tflag = 0, Min[len] = INT_MAX, Max[len] = INT_MIN;\r\n\t\tfor (int j = 1, x; j <= m; ++ j)\r\n\t\t{\r\n\t\t\tcin >> x;\r\n\t\t\tMin[len] = min (Min[len], x);\r\n\t\t\tMax[len] = max (Max[len], x);\r\n\t\t\tif (Min[len] < x)\r\n\t\t\t\tflag = 1;\r\n\t\t}\r\n\t\tif (!flag)\r\n\t\t\t++ len;\r\n\t}\r\n\tsort (Max + 1, Max + len);\r\n\tfor (int i = 1; i < len; ++ i)\r\n\t\tans -= upper_bound (Max + 1, Max + len, Min[i]) - Max - 1;\r\n\tcout << ans << '\\n';\r\n\treturn 0;\r\n}"
}