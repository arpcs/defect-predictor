{
    "id": 200981337,
    "contestId": 103,
    "creationTimeSeconds": 1680789256,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 103,
        "index": "B",
        "name": "Cthulhu",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1500,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs"
        ]
    },
    "author": {
        "contestId": 103,
        "members": [
            {
                "handle": "SunnyYuan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1312714800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 18,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "// LUOGU_RID: 107208699\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int N = 100;\r\n\r\nint n, m;\r\nint fa[N];\r\n\r\nint find(int x) {\r\n    if (x == fa[x]) return x;\r\n    return fa[x] = find(fa[x]);\r\n}\r\n\r\nint merge(int x, int y) {\r\n    int fx = find(x), fy = find(y);\r\n    if (fx == fy) return fx;\r\n    fa[fx] = fy;\r\n    return fy;\r\n}\r\n\r\nint main() {\r\n    #ifdef DEBUG\r\n    freopen(\"D:/Exercise/Test.in\", \"r\", stdin);\r\n    clock_t st, ed;\r\n    cout << \"===================START===================\" << endl;\r\n    st = clock();\r\n    #endif\r\n\r\n    cin >> n >> m;\r\n    if (n != m) {\r\n        cout << \"NO\\n\";\r\n        return 0;\r\n    }\r\n    for (int i = 1; i <= n; i++) fa[i] = i;\r\n    for (int i = 1; i <= m; i++) {\r\n        int x, y;\r\n        cin >> x >> y;\r\n        merge(x, y);\r\n    }\r\n\r\n    for (int i = 2; i <= n; i++) {\r\n        if (find(i) != find(i - 1)) {\r\n            cout << \"NO\\n\";\r\n            return 0;\r\n        }\r\n    }\r\n    cout << \"FHTAGN!\\n\";\r\n    #ifdef DEBUG\r\n    ed = clock();\r\n    cout << \"====================END====================\" << endl;\r\n    cout << \"Time:\" << (ed - st) * 1.0 / CLOCKS_PER_SEC << \" sec\" << endl;\r\n    #endif\r\n    return 0;\r\n}"
}