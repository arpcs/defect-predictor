{
    "id": 216641040,
    "contestId": 103,
    "creationTimeSeconds": 1690846636,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 103,
        "index": "B",
        "name": "Cthulhu",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1500,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs"
        ]
    },
    "author": {
        "contestId": 103,
        "members": [
            {
                "handle": "crimcrim"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1312714800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 47,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nvector<int> parent;\nvector<int> children;\nvoid make_set(int v){\n    parent[v] = v;\n    children[v] = 1;\n}\nint find_set(int v){\n    if(parent[v] == v)  \n        return v;\n    return parent[v] = find_set(parent[v]);\n}\nvoid union_set(int u,int v){\n    int a = find_set(u);\n    int b = find_set(v);\n    if(a != b){\n        if(children[a] < children[b])\n            swap(a,b);\n        parent[b] = a;\n        children[a] +=  children[b];\n    }\n}\nint main(){\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    vector<pair<int,int>> a(m);\n    for(int i=0;i<m;i++){\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        u--;\n        v--;\n        a[i] = {u,v};\n    }\n\n    parent = vector<int>(n);\n    children = vector<int>(n);\n    for(int i=0;i<n;i++)\n        make_set(i);\n\n    int cycleFlag = 1;\n    int flag = 1;\n    for(int i=0;i<m;i++){\n        int u,v;\n        u = find_set(a[i].first);\n        v = find_set(a[i].second);\n        if(u!=v)\n            union_set(a[i].first,a[i].second);\n        else if(cycleFlag){\n            union_set(a[i].first,a[i].second);\n            cycleFlag = 0;\n        }\n        else{\n            flag = 0;\n            break;\n        }\n    }\n    if(flag && cycleFlag == 0){\n        set<int> s;\n        for(int i=0;i<n;i++)\n            s.insert(find_set(i));\n        if(s.size() == 1)\n            printf(\"FHTAGN!\\n\");\n        else\n            printf(\"NO\\n\");\n    }\n    else\n        printf(\"NO\\n\");\n    return 0;\n}"
}