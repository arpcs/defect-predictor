{
    "id": 31585859,
    "contestId": 644,
    "creationTimeSeconds": 1508616158,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 644,
        "index": "B",
        "name": "Processing Queries",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1700,
        "tags": [
            "*special",
            "constructive algorithms",
            "data structures",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 644,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1458118800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 841,
    "memoryConsumedBytes": 8704000,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn = 2e5 + 500;\nlong long st[maxn], ti[maxn], ans[maxn];\nqueue <long long> qu;\n\n\nint main() {\n    long long n, b, time = 0;\n    cin >> n >> b;\n    for (int i = 0; i < n; i++){\n        cin >> st[i] >> ti[i];\n        if (qu.empty()){\n            if (time < st[i])\n                time = st[i];\n            qu.push(i);\n        }\n        else if (ti[qu.front()] + time <= st[i]){\n            while (!qu.empty() && ti[qu.front()] + time <= st[i]){\n                time += ti[qu.front()];\n                ans[qu.front()] = time;\n                qu.pop();\n            }\n            if (qu.empty() && time < st[i])\n                time = st[i];\n            qu.push(i);\n        }\n        else if (qu.size() <= b)\n            qu.push(i);\n        else{\n            ans[i] = -1;\n        }\n    }\n    while (!qu.empty()){\n        ans[qu.front()] = time + ti[qu.front()];\n        time += ti[qu.front()];\n        qu.pop();\n    }\n    for (int i = 0; i < n; i++)\n        cout << ans[i] << \" \";\n}\n\n  \t\t\t\t\t   \t \t    \t\t\t\t \t   \t\t\t \t"
}