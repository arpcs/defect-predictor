{
    "id": 197491421,
    "contestId": 644,
    "creationTimeSeconds": 1678875810,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 644,
        "index": "B",
        "name": "Processing Queries",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1700,
        "tags": [
            "*special",
            "constructive algorithms",
            "data structures",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 644,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1458118800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 1325,
    "memoryConsumedBytes": 1945600,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nint a[10002];\nqueue<long long>q; \nlong long n,b,t,d,x;\nint main(){\n\tscanf(\"%d%d\",&n,&b);\n\tfor(int i = 1;i <= n;i++){\n\t\tcin >> t >> d;   \n\t\twhile(q.size() && q.front() <= t){\n\t\t\tq.pop();\n\t\t}\n\t\tif(q.size() <= b){\n\t\t\tx = max(t,x) + d;\n\t\t\tq.push(x);\n\t\t\tcout << x;\n\t\t}\n\t\telse{\n\t\t\tcout << -1;\n\t\t}\n\t\tprintf(\" \");\n\t}\n\treturn 0;\n}\n\t \t \t\t    \t \t\t \t\t\t\t\t \t\t\t\t\t   \t\t"
}