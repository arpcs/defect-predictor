{
    "id": 235506143,
    "contestId": 1515,
    "creationTimeSeconds": 1701599767,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1515,
        "index": "D",
        "name": "Phoenix and Socks",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1500,
        "tags": [
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1515,
        "members": [
            {
                "handle": "bkifhr6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619966100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 20,
    "timeConsumedMillis": 451,
    "memoryConsumedBytes": 48230400,
    "source": "/*\n\n_/_/_/_/     _/      _/    _/\n_/     _/    _/      _/    _/\n_/      _/   _/      _/    _/\n_/      _/   _/_/_/_/_/    _/\n_/     _/    _/      _/    _/\n_/    _/     _/      _/    _/\n_/_/_/       _/      _/    _/_/_/_/_/\n\n*/\n#include<bits/stdc++.h>\nusing namespace std;\ntypedef   long long ll;\nconstexpr ll P = 998244353;\nconst int N = 1e5 + 50;\nconst int M = 500010;\nconst double PI = acos(-1);\n#define INF  10000000007\nll gcd(ll a, ll b) { return b ? gcd(b, a % b) : a; }\nll lcm(ll a, ll b) { return a / gcd(a, b) * b; }\nll  Exgcd(ll a, ll b, ll& x, ll& y) {\n\tif (!b)\n\t{\n\t\tx = 1, y = 0;\n\t\treturn a;\n\t}\n\tll d = Exgcd(b, a % b, y, x);\n\ty -= a / b * x;\n\treturn d;\n}\nll fpm(ll x, ll power, ll mod) {\n\t//if (power < 0)return 0;\n\t//x %= mod;\n\tll ans = 1;\n\twhile (power)\n\t{\n\t\tif (power & 1)\n\t\t{\n\t\t\tans = (ans * x) % mod;\n\t\t}\n\t\tx = (x * x) % mod;\n\t\tpower >>= 1;\n\t}\n\treturn ans;\n}\nll fp(ll x, ll power) {\n\t//if (power < 0)return 0;\n\t//x %= mod;\n\tll ans = 1;\n\twhile (power)\n\t{\n\t\tif (power & 1)\n\t\t{\n\t\t\tans = (ans * x);\n\t\t}\n\t\tx = (x * x);\n\t\tpower >>= 1;\n\t}\n\treturn ans;\n}\nll fac[M];\nll C(ll n, ll m)\n{\n\tif (m > n)return 0;\n\treturn fac[n] * fpm(fac[n - m], P - 2, P) % P * fpm(fac[m], P - 2, P) % P;\n}\n//template <typename dhl>\n//struct ddhhll\n//{\n//\tvector < dhl> tr;\n//\tconst ll n;\n//\tddhhll(ll n) : n(n), tr(n + 1) {}\n//\tvoid add(ll x, dhl c)\n//\t{\n//\t\twhile (x <= n)\n//\t\t{\n//\t\t\ttr[x] += c;\n//\t\t\tx += x & -x;\n//\t\t}\n//\t}\n//\tdhl sum(ll x)\n//\t{\n//\t\tdhl res = 0;\n//\t\twhile (x)\n//\t\t{\n//\t\t\tres += tr[x];\n//\t\t\tx -= x & -x;\n//\t\t}\n//\t\treturn res;\n//\t}\n//};\n//priority_queue<ll, vector<ll>, greater<ll>> qq;\n//ll b[M], c[M];\nll n, m, k, x, y, z, l, r, u, v, w;\nll   cnt1, res, anss1, anss, minn, maxn, sum[M], ans = LLONG_MAX;\nstring  s, ss, sss;\n//ll a[M], b[M], c[M][36], d, fa[M], dp[20][11][11][2][2][2], summ, num[100], now;\nll a[M],b[M],c[M];\n//ll son[N], id[N];\nvector<vector<int>> dv(N + 1);\nvoid solve() {\n\t\n\tcin >> n >> l >> r;\n\tmap<pair<ll, ll>, ll>mp;\n\tll ans = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tcin >> a[i];\n\t\tif (i <= l)\n\t\t\tmp[{a[i], 1}]++;\n\t\telse\n\t\t\tmp[{a[i], 2}]++;\n\t}\n\tll x = 0;\n\tll y = 0;\n\tfor (int i = 1; i <= n; i++)\n\t{\n\t\tm = min(mp[{a[i], 1}], mp[{a[i], 2}]);\n\t\tmp[{a[i], 1}] -= m;\n\t\tmp[{a[i], 2}] -= m;\n\t\tl -= m;\n\t\tr -= m;\n\t\tx += mp[{a[i], 1}] / 2;\n\t\tmp[{a[i], 1}] = 0;\n\t\ty += mp[{a[i], 2}] / 2;\n\t\tmp[{a[i], 2}] = 0;\n\n\t}\n\tans = (r + l) / 2 + max({ 0LL,(l - r) / 2 - x,(r - l) / 2 - y });\n\tcout << ans << endl;\n}\nint main()\n{\n\tios::sync_with_stdio(false);\n\tcin.tie(0), cout.tie(0);\n\tint T = 1;\n\tcin >> T;\n\twhile (T--)\n\t{\n\t\tsolve();\n\t}\n\treturn 0;\n}\n\n\n//ll pri[M], st[M], phi[M];\n//void is_prime(ll n)\n//{\n//\tphi[1] = 1;\n//\tfor (register int i = 2; i <= n; i++)\n//\t{\n//\t\tif (!st[i])pri[++cnt] = i, phi[i] = i - 1;\n//\t\tfor (int j = 1; j <= cnt && pri[j] <= n / i; j++)\n//\t\t{\n//\t\t\tst[pri[j] * i] = 1;\n//\t\t\tif (i % pri[j] == 0)\n//\t\t\t{\n//\t\t\t\tphi[i * pri[j]] = phi[i] * pri[j];\n//\t\t\t\tbreak;\n//\t\t\t}\n//\t\t\telse\n//\t\t\t{\n//\t\t\t\tphi[i * pri[j]] = phi[i] * phi[pri[j]];\n//\t\t\t}\n//\t\t}\n//\t}\n//}\n\n\n//int bsgs(int a, int b, int p)\n//{\n//\tint k = sqrt(p) + 1;\n//\tunordered_map<int, int>mp\n//\tfor (int i = 0, j = b % p; i < k; i++)\n//\t{\n//\t\tmp[j] = i;\n//\t\tj = 1LL * j * a % p;\n//\t}\n//\tint ak = fpm(a, k, p);\n//\tfor (int i = 1, j = ak % p; i <= k; i++)\n//\t{\n//\t\tif (mp.count(j))return 1LL * i * k - mp[j];\n//\t\tj = 1LL * j * ak % p;\n//\t}\n//\treturn-2;\n//}\n//int exbsgs(int a, int b, int p)\n//{\n//\tb = (b % p + p) % p;\n//\tif (1 % p == b % p)return 0;\n//\tint d = Exgcd(a, p, x, y);\n//\tif (d > 1)\n//\t{\n//\t\tif (b % d) return -INF;\n//\t\tExgcd(a / d, p / d, x, y);\n//\t\treturn exbsgs(a, b / d * x % (p / d), p / d) + 1;\n//\t}\n//\telse\n//\t{\n//\t\treturn bsgs(a, b, p);\n//\t}\n//}\n\t  \t \t\t\t \t\t\t\t\t \t          \t\t \t"
}