{
    "id": 234189088,
    "contestId": 154,
    "creationTimeSeconds": 1700895322,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 154,
        "index": "B",
        "name": "Colliders",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1600,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 154,
        "members": [
            {
                "handle": "abdod3severy1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1330095600
    },
    "programmingLanguage": "Clang++17 Diagnostics",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 17817600,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <unordered_map>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    int n, k;\r\n    cin >> n >> k;\r\n    vector<bool> primes(n + 1);\r\n    vector<unordered_map<int, bool>> arr(n + 1);\r\n\r\n    for (int i = 2; i <= n; i++)\r\n    {\r\n        primes[i] = true;\r\n    }\r\n\r\n    primes[0] = false;\r\n    primes[1] = false;\r\n\r\n    for (int i = 2; i < n; i++)\r\n    {\r\n        if (primes[i])\r\n        {\r\n            for (int j = i + i; j <= n; j += i)\r\n            {\r\n                arr[j][i] = 1;\r\n                primes[j] = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    vector<int> activated(n);\r\n\r\n    for (int i = 0; i < k; i++)\r\n    {\r\n        string operation;\r\n        cin >> operation;\r\n        int index;\r\n        cin >> index;\r\n\r\n        if (operation == \"-\")\r\n        {\r\n            if (activated[index] == 0)\r\n            {\r\n                cout << \"Already off\" << endl;\r\n            }\r\n\r\n            if (activated[index] == 1)\r\n            {\r\n                cout << \"Success\" << endl;\r\n                activated[index] = 0;\r\n            }\r\n        }\r\n\r\n        if (operation == \"+\")\r\n        {\r\n            bool hasConflict = false;\r\n            int conflictWith = -1;\r\n            unordered_map<int, bool> factors = arr[index];\r\n\r\n            for (int i = 0; i < activated.size(); i++)\r\n            {\r\n                if (activated[i] == 1)\r\n                {\r\n                    unordered_map<int, bool> factors2 = arr[activated[i]];\r\n\r\n                    for (const auto &pair : factors)\r\n                    {\r\n                        int key = pair.first;\r\n                        bool value = pair.second;\r\n                        if (factors[key] == 1)\r\n                        {\r\n                            hasConflict = true;\r\n                            conflictWith = i;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (hasConflict)\r\n            {\r\n                cout << \"Conflict with \" << conflictWith << endl;\r\n            }\r\n            else if (activated[index] == 0 && !hasConflict)\r\n            {\r\n                cout << \"Success\" << endl;\r\n                activated[index] = 1;\r\n            }\r\n            else if (activated[index] == 1 && !hasConflict)\r\n            {\r\n                cout << \"Already on\" << endl;\r\n            }\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}"
}