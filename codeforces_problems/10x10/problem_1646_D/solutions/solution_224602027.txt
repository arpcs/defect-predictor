{
    "id": 224602027,
    "contestId": 1646,
    "creationTimeSeconds": 1695384090,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1646,
        "index": "D",
        "name": "Weight the Tree",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1646,
        "members": [
            {
                "handle": "CYK147"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1646408100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 67,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 36761600,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\nusing ll=long long;\r\nconst int N=2e5+10;\r\nconst int mod=998244353;\r\n#define x first\r\n#define y second\r\n\r\nll n,c,m;\r\nint s[N],t[N],st[N];\r\nll to=0;\r\nvector<int> tr[N];\r\npair<ll,ll> f[N][2];\r\nint ans[N];\r\n\r\nvoid dfs(int a,int fa)\r\n{\r\n    f[a][1].x=1,f[a][1].y=1,f[a][0].y=1;\r\n    \r\n    for(auto i:tr[a]) \r\n    {\r\n        if(i==fa) continue;\r\n        dfs(i,a);\r\n        f[a][0].x+=max(f[i][1].x,f[i][0].x);\r\n        if(f[i][1].x>f[i][0].x) f[a][0].y+=f[i][1].y;\r\n        else if(f[i][1].x<f[i][0].x) f[a][0].y+=f[i][0].y;\r\n        else f[a][0].y+=min(f[i][1].y,f[i][0].y);\r\n        f[a][1].x+=f[i][0].x,f[a][1].y+=f[i][0].y+1;\r\n    }\r\n    \r\n}\r\n\r\n\r\nvoid  dfs2(int a,int fa,int bo)\r\n{\r\n    int ke=0;\r\n    if(bo==1)  ans[a]=1;\r\n    else\r\n    {\r\n        if(f[a][1].x>f[a][0].x)\r\n        {\r\n            ans[a]+=tr[a].size();\r\n            ke=1;\r\n        }\r\n        else if(f[a][1].x<f[a][0].x) ans[a]=1;\r\n        else if(f[a][1].y<f[a][0].y) \r\n        {\r\n            ans[a]+=tr[a].size(); \r\n            //if(a==1) ans[a]--;\r\n            ke=1;\r\n        }\r\n        else  ans[a]=1;\r\n\r\n\r\n    }\r\n    \r\n    for(auto j:tr[a])\r\n    {\r\n        if(j==fa) continue;\r\n        dfs2(j,a,ke);\r\n    }\r\n        \r\n        \r\n}\r\nvoid  solve()\r\n{\r\n    cin>>n;\r\n    for(int i=1;i<n;i++)\r\n    {\r\n        int a,b;\r\n        cin>>a>>b;\r\n        tr[a].push_back(b);\r\n        tr[b].push_back(a);\r\n        \r\n    }\r\n    if(n==2)\r\n    {\r\n        cout <<2<<' '<<2<<endl;\r\n        cout <<1<<' '<<1<<endl;\r\n        return;\r\n    }\r\n    \r\n    dfs(1,-1);\r\n    f[1][1].y--;\r\n    dfs2(1,-1,0);\r\n    \r\n    ll to=0;\r\n    for(int i=1;i<=n;i++ ) to+=ans[i];\r\n  //  cout <<f[1][1].y<<' '<<f[1][0].y<<' ';\r\n    cout <<max(f[1][1].x,f[1][0].x)<<' '<<to<<endl;\r\n    for(int i=1;i<=n;i++) cout <<ans[i]<<' ';\r\n    cout <<endl;\r\n}\r\nint main()\r\n{\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    int t=1;\r\n    //cin>>t;\r\n    while(t--) solve();\r\n\r\n    \r\n    return 0;\r\n}"
}