{
    "id": 223333382,
    "contestId": 1646,
    "creationTimeSeconds": 1694688816,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1646,
        "index": "D",
        "name": "Weight the Tree",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1646,
        "members": [
            {
                "handle": "JuanJL"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1646408100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp> // Common file\r\n//#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update\r\n//#include <ext/pb_ds/detail/standard_policies.hpp>\r\n\r\n#define fst first \r\n#define snd second\r\n#define pb push_back\r\n#define forn(i,a,b) for(int i = a; i < b; i++)\r\n#define ALL(x) x.begin(),x.end()\r\n#define SZ(x) (int)x.size()\r\n#define mset(a,v) memset((a),(v),sizeof(a))\r\n#define FIN ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\ntypedef long long ll;\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\ntypedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> indexed_set;\r\ntypedef tree<int,null_type,less_equal<int>,rb_tree_tag,tree_order_statistics_node_update> indexed_multiset;\r\n\r\nvector<vector<ll>> adj;\r\nvector<bool> visitado;\r\nvector<ll> peso;\r\nvector<ll> color;\r\nll blue=0,red=0;\r\n\r\n\r\nvoid dfs(ll nd, ll c, ll ant){\r\n\tvisitado[nd]=1;\r\n\tcolor[nd]=c;\r\n\tif(c==1) blue++;\r\n\telse red++;\r\n\t\r\n\tforn(i,0,SZ(adj[nd])) if(adj[nd][i]!=ant) dfs(adj[nd][i],c*-1,nd);\r\n}\r\n\r\nint main(){FIN;\r\n\tll n; cin>>n;\r\n\tadj.resize(n);\r\n\tpeso.resize(n,0);\r\n\tvisitado.resize(n,0);\r\n\tcolor.resize(n,0);\r\n\tll a,b;\r\n\tforn(i,0,n-1){\r\n\t\tcin>>a>>b;\r\n\t\tadj[a-1].pb(b-1);\r\n\t\tadj[b-1].pb(a-1);\r\n\t}\r\n\tforn(i,0,n) if(!visitado[i]) dfs(i,1,i);\r\n\t//cout<<blue<<\" \"<<red<<endl;\r\n\tll c;\r\n\tif(n==2) cout<<2<<\" \"<<2<<'\\n';\r\n\tif(blue>red){ c=-1;if(n!=2) cout<<blue<<\" \"<<n<<'\\n';}\r\n\telse{ c=1;if(n!=2) cout<<red<<\" \"<<n<<'\\n';}\r\n\tforn(i,0,n){\r\n\t\tif(color[i]==c){ \r\n\t\t\tpeso[i]=1;\r\n\t\t\tforn(j,0,SZ(adj[i])){\r\n\t\t\t\tpeso[adj[i][j]]+=peso[i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tforn(i,0,n) cout<<peso[i]<<\" \";\r\n\tcout<<'\\n';\r\n\treturn 0;\r\n}"
}