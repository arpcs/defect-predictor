{
    "id": 221653782,
    "contestId": 1644,
    "creationTimeSeconds": 1693730453,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1644,
        "index": "F",
        "name": "Basis",
        "type": "PROGRAMMING",
        "rating": 2900,
        "tags": [
            "combinatorics",
            "fft",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1644,
        "members": [
            {
                "handle": "thebighead"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1645540500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 17,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 6348800,
    "source": "#include<bits/stdc++.h>\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define db double\r\n#define ldb long double\r\n#define pb push_back\r\n#define mp make_pair\r\n#define pii pair<int, int>\r\n#define FR first\r\n#define SE second\r\nusing namespace std;\r\ninline int read() {\r\n  int x = 0; bool op = 0;\r\n  char c = getchar();\r\n  while(!isdigit(c))op |= (c == '-'), c = getchar();\r\n  while(isdigit(c))x = (x << 1) + (x << 3) + (c ^ 48), c = getchar();\r\n  return op ? -x : x;\r\n}\r\nconst int N = 2e5 + 10;\r\nconst int P = 998244353;\r\nvoid add(int &a, int b) {a += b; a >= P ? a -= P : 0;}\r\nvoid sub(int &a, int b) {a -= b; a < 0 ? a += P : 0;}\r\nint ksm(int x, int k) {\r\n  int res = 1;\r\n  for(int pw = x; k; (k & 1) ? res = 1ll * res * pw % P : 0, pw = 1ll * pw * pw % P, k >>= 1);\r\n  return res;\r\n}\r\nint n, k, tot;\r\nint pw[N], vis[N], pri[N], mu[N], fac[N], ifac[N];\r\nvoid init() {\r\n  fac[0] = ifac[0] = mu[1] = 1;\r\n  for(int i = 1; i < N; i++)fac[i] = 1ll * fac[i - 1] * i % P;\r\n  ifac[N - 1] = ksm(fac[N - 1], P - 2);\r\n  for(int i = N - 2; i; i--)ifac[i] = 1ll * ifac[i + 1] * (i + 1) % P;\r\n  for(int i = 2; i < N; i++) {\r\n    if(!vis[i])pri[++tot] = i, mu[i] = P - 1;\r\n    for(int j = 1; j <= tot && i * pri[j] < N; j++) {\r\n      vis[i * pri[j]] = true;\r\n      if(i % pri[j] == 0)break;\r\n      mu[i * pri[j]] = P - mu[i];\r\n    }\r\n  }\r\n  return ;\r\n}\r\nint f[N], g[N];\r\nint calc(int n) {\r\n  pw[0] = (n == 0); k = min(k, n);\r\n  for(int i = 1; i <= k; i++) {\r\n    if(!vis[i])pw[i] = ksm(i, n);\r\n    for(int j = 1; j <= tot && i * pri[j] <= k; j++) {\r\n      pw[i * pri[j]] = 1ll * pw[i] * pw[pri[j]] % P;\r\n      if(i % pri[j] == 0)break;\r\n    }\r\n  }\r\n  for(int i = 0; i <= k; i++)f[i] = 1ll * ifac[i] * pw[i] % P;\r\n  for(int i = 0; i <= k; i++)g[i] = 1ll * ifac[i] * ((i & 1) ? P - 1 : 1) % P;\r\n  for(int i = 1; i <= k; i++)add(g[i], g[i - 1]);\r\n  int res = 0;\r\n  for(int i = 0; i <= k; i++)add(res, 1ll * f[i] * g[k - i] % P);\r\n  return res - 1;\r\n}\r\nint main() { \r\n  init();\r\n  n = read(); k = read();\r\n  if(n == 1 || k == 1)return puts(\"1\"), 0;\r\n  int ans = 0;\r\n  for(int i = 1; i <= n; i++)if(mu[i])add(ans, 1ll * mu[i] * calc((n - 1) / i + 1) % P);\r\n  printf(\"%d\\n\", ans);\r\n  return 0;\r\n}"
}