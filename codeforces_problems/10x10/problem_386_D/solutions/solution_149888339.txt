{
    "id": 149888339,
    "contestId": 386,
    "creationTimeSeconds": 1647501891,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 386,
        "index": "D",
        "name": "Game with Points",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "dp",
            "graphs",
            "implementation",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 386,
        "members": [
            {
                "handle": "Setytousi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1389906900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 60,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 5939200,
    "source": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <queue>\n#include <stack>\n#include <iomanip>\n#include <cassert>\n#include <cstring>\n#include <sstream>\n#include <numeric>\n#include <cstdio>\n#include <bitset>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\n\nconst ll MAXN = 75;\nconst ll MOD = 1e9 + 7;\nconst ll INF = 1e18;\n\n#define fast_io     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n#define file_io     freopen(\"input.txt\", \"r+\", stdin);freopen(\"output.txt\", \"w+\", stdout);\n#define pb          push_back\n#define F           first\n#define S           second\n#define Sz(x)       ll((x).size())\n#define all(x)      (x).begin(), (x).end()\n#define cl          clear()\n#define endll       '\\n'\n\n\nint adj[MAXN][MAXN], n;\nint dist[MAXN][MAXN][MAXN];\nqueue<pair<int, pii> > que;\nint tmp[3];\npii par[MAXN][MAXN][MAXN];\n\nvoid bfs(int a, int b, int c){\n    dist[a][b][c] = 0;\n    par[a][b][c] = {0, 0};\n    que.push({a, {b, c}});\n    while(!que.empty()){\n        pair<int, pii> i = que.front();\n        que.pop();\n        int a = i.F, b = i.S.F, c = i.S.S;\n        if (a == 1 && b == 2 && c == 3) return;\n        for (int i = 1; i <= n; i++){\n            if (i == b || i == c || i == a) continue;\n            if (adj[a][b] != adj[c][i]) continue;\n            tmp[0] = a, tmp[1] = b, tmp[2] = i;\n            sort(tmp, tmp + 3);\n            if (dist[tmp[0]][tmp[1]][tmp[2]] != -1) continue;\n            dist[tmp[0]][tmp[1]][tmp[2]] = dist[a][b][c] + 1;\n            par[tmp[0]][tmp[1]][tmp[2]] = {c, i};\n            que.push({tmp[0], {tmp[1], tmp[2]}});\n        }\n        for (int i = 1; i <= n; i++){\n            if (i == b || i == c || i == a) continue;\n            if (adj[a][c] != adj[b][i]) continue;\n            tmp[0] = a, tmp[1] = c, tmp[2] = i;\n            sort(tmp, tmp + 3);\n            if (dist[tmp[0]][tmp[1]][tmp[2]] != -1) continue;\n            dist[tmp[0]][tmp[1]][tmp[2]] = dist[a][b][c] + 1;\n            par[tmp[0]][tmp[1]][tmp[2]] = {b, i};\n            que.push({tmp[0], {tmp[1], tmp[2]}});\n        }\n        for (int i = 1; i <= n; i++){\n            if (i == b || i == c || i == a) continue;\n            if (adj[c][b] != adj[a][i]) continue;\n            tmp[0] = c, tmp[1] = b, tmp[2] = i;\n            sort(tmp, tmp + 3);\n            if (dist[tmp[0]][tmp[1]][tmp[2]] != -1) continue;\n            dist[tmp[0]][tmp[1]][tmp[2]] = dist[a][b][c] + 1;\n            par[tmp[0]][tmp[1]][tmp[2]] = {a, i};\n            que.push({tmp[0], {tmp[1], tmp[2]}});\n        }\n    }\n}\n\n\nint main(){\n    fast_io;\n    cin >> n;\n    int a, b, c;\n    cin >> a >> b >> c;\n    for (int i = 0; i <= n; i++){\n        for (int j = 0; j <= n; j++){\n            fill(dist[i][j], dist[i][j] + n + 1, -1);\n        }\n    }\n    for (int i = 1; i <= n; i++){\n        for (int j = 1; j <= n; j++){\n            char s;\n            cin >> s;\n            if (i == j) continue;\n            adj[i][j] = s - 'a';\n        }\n    }\n    tmp[0] = a, tmp[1] = b, tmp[2] = c;\n    sort(tmp, tmp + 3);\n    bfs(tmp[0], tmp[1], tmp[2]);\n    if (dist[tmp[0]][tmp[1]][tmp[2]] == -1) cout << -1 << endl;\n    else{\n        vector<pii> ans;\n        cout << dist[1][2][3] << endl;\n        int a = 1, b = 2, c = 3;\n        while(par[a][b][c].F != par[a][b][c].S){\n            ans.pb({par[a][b][c].F, par[a][b][c].S});\n            if (a == par[a][b][c].S) a = par[a][b][c].F;\n            else if (b == par[a][b][c].S) b = par[a][b][c].F;\n            else c = par[a][b][c].F;\n            tmp[0] = c, tmp[1] = b, tmp[2] = a;\n            sort(tmp, tmp + 3);\n            a = tmp[0], b = tmp[1], c = tmp[2];\n        }\n        reverse(all(ans));\n        for (auto i : ans) cout << i.F << ' ' << i.S << endl;\n    }\n    return 0;\n}\n"
}