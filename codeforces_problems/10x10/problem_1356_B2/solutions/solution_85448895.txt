{
    "id": 85448895,
    "contestId": 1356,
    "creationTimeSeconds": 1593428788,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1356,
        "index": "B2",
        "name": "Decrement",
        "type": "PROGRAMMING",
        "tags": [
            "*special"
        ]
    },
    "author": {
        "contestId": 1356,
        "members": [
            {
                "handle": "kerO_o"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1591977600
    },
    "programmingLanguage": "Q#",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 14131200,
    "source": "namespace Solution {\r\n\r\n    open Microsoft.Quantum.Canon;\r\n    open Microsoft.Quantum.Intrinsic;\r\n    open Microsoft.Quantum.Measurement;\r\n    open Microsoft.Quantum.Diagnostics;\r\n    open Microsoft.Quantum.Math;\r\n    open Microsoft.Quantum.Arithmetic;\r\n\r\n    operation Solve (register : LittleEndian) : Unit is Adj+Ctl {\r\n       let qarray = register!;\r\n       let l = Length(qarray);\r\n       X(qarray[0]);\r\n       if(l > 1) {\r\n           Controlled Solve(qarray[0..0], LittleEndian(qarray[1...]));\r\n       }\r\n    }\r\n\r\n    operation run() : Unit {\r\n        \r\n    }\r\n}\r\n\r\n"
}