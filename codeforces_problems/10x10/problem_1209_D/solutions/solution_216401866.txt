{
    "id": 216401866,
    "contestId": 1209,
    "creationTimeSeconds": 1690697009,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1209,
        "index": "D",
        "name": "Cow and Snacks",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs"
        ]
    },
    "author": {
        "contestId": 1209,
        "members": [
            {
                "handle": "chenglexing2020"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1568466300
    },
    "programmingLanguage": "Python 3",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 1045,
    "memoryConsumedBytes": 104550400,
    "source": "from collections import defaultdict\r\nimport sys\r\n\r\n# sys.stdin = open(\"4.in\", \"r\")\r\n\r\n# basically num cycles in graph, guests fav snacks are edges\r\nV, M = map(int, input().split())\r\ne = [list(map(int, input().split())) for _ in range(M)]\r\nedges = defaultdict(lambda: set())\r\nres = 0\r\nfor x in e:\r\n    if x[1] in edges[x[0]]:\r\n        res += 1\r\n        continue\r\n    edges[x[0]].add(x[1])\r\n    edges[x[1]].add(x[0])\r\n\r\nbeen = set()\r\nnoGo = defaultdict(lambda: set())\r\nfor i in range(1, V+1):\r\n    if i in been: continue\r\n    stack1 = [[i, -1]]\r\n    while stack1:\r\n        v, prev = stack1.pop()\r\n        if v in noGo[prev]: continue\r\n        if v in been:\r\n            noGo[v].add(prev)\r\n            res += 1\r\n            continue\r\n        been.add(v)\r\n        noGo[v].add(prev)\r\n        for x in edges[v]: stack1.append([x, v])\r\n\r\nprint(res)"
}