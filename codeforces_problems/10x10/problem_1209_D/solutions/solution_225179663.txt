{
    "id": 225179663,
    "contestId": 1209,
    "creationTimeSeconds": 1695673270,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1209,
        "index": "D",
        "name": "Cow and Snacks",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs"
        ]
    },
    "author": {
        "contestId": 1209,
        "members": [
            {
                "handle": "Roshan_1810"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1568466300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#include <iostream>\r\n#include <istream>\r\n#include <fstream>\r\nusing namespace std;\r\nmt19937_64 RNG(chrono::steady_clock::now().time_since_epoch().count());\r\n#define int long long\r\n#define ll long long\r\n#define endl \"\\n\"\r\n#define Fast ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);\r\n#define no cout << \"NO\" << endl\r\n#define yes cout << \"YES\" << endl\r\n#define R return\r\n#define pb push_back\r\n#define all(mp) mp.begin(), mp.end()\r\n#define sz(cur) ((int)(cur).size())\r\n#define ff first\r\n#define ss second\r\n#define vi vector<int>\r\n#define vvi vector<vector<int>>\r\n#define pii pair<int, int>\r\n#define vpii vector<pii>\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define rep(i, sttt, ennn) for (int i = sttt; i < ennn; i++)\r\n#define repr(i, sttt, ennn) for (int i = sttt; i >= ennn; i--)\r\n#define inv(tttt) for (int i = 0; i < tttt.size(); i++) cin >> tttt[i];\r\n#define seev(tttt) rep(i, 0, sz(tttt)) cout << tttt[i] << \" \";\r\n#define ret(arr) cout << arr << \"\\n\"\r\nvector<string> vec_splitter(string arr){arr += ',';vector<string> res;while (!arr.empty()){res.pb(arr.substr(0, arr.find(',')));arr = arr.substr(arr.find(',') + 1);}return res;}\r\nvoid debug_out(vector<string> __attribute__((unused)) args, __attribute__((unused)) int in, __attribute__((unused)) int LINE_n){cerr << endl;}\r\ntemplate <typename Head, typename... Tail>\r\nvoid debug_out(vector<string> args, int in, int LINE_n, Head H, Tail... T){if (in > 0)cerr << \", \";else cerr << \"Line(\" << LINE_n << \") \";stringstream ss;ss << H;cerr << args[in] << \" = \" << ss.str();debug_out(args, in + 1, LINE_n, T...);}\r\n#ifndef ONLINE_JUDGE\r\n#define debug(...) debug_out(vec_splitter(#__VA_ARGS__), 0, __LINE__, __VA_ARGS__)\r\n#else\r\n#define debug(...) 42\r\n#endif\r\nvoid _print(int t) {cerr << t;}\r\nvoid _print(string t) {cerr << t;}\r\nvoid _print(char t) {cerr << t;}\r\nvoid _print(long double t) {cerr << t;}\r\nvoid _print(double t) {cerr << t;}\r\nvoid _print(unsigned int t) {cerr << t;}\r\ntemplate <class T, class V> void _print(pair <T, V> arr);\r\ntemplate <class T> void _print(vector <T> arr);\r\ntemplate <class T> void _print(set <T> arr);\r\ntemplate <class T, class V> void _print(map <T, V> arr);\r\ntemplate <class T> void _print(multiset <T> arr);\r\ntemplate <class T, class V> void _print(pair <T, V> arr) {cerr << \"{\"; _print(arr.ff); cerr << \",\"; _print(arr.ss); cerr << \"}\";}\r\ntemplate <class T> void _print(vector <T> arr) {cerr << \"[ \"; for (T i : arr) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(set <T> arr) {cerr << \"[ \"; for (T i : arr) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(multiset <T> arr) {cerr << \"[ \"; for (T i : arr) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void _print(map <T, V> arr) {cerr << \"[ \"; for (auto i : arr) {_print(i); cerr << \" \";} cerr << \"]\";}\r\nvoid Solve();\r\nint32_t main()\r\n{\r\n      auto begin = chrono::high_resolution_clock::now();\r\n      ios_base::sync_with_stdio(false);\r\n      cin.tie(0);\r\n      cout.tie(0);\r\n#ifndef ONLINE_JUDGE\r\n      freopen(\"input.txt\", \"r\", stdin);\r\n      freopen(\"output.txt\", \"w\", stdout);\r\n      freopen(\"Error.txt\", \"w\", stderr);\r\n#endif\r\n      Fast;\r\n      int t = 1;\r\n      // cin >> t;  \r\n      for (int i = 1; i <= t; i++)\r\n      {\r\n            Solve();\r\n      }\r\n      auto end = chrono::high_resolution_clock::now();\r\n      auto elapsed = chrono::duration_cast<chrono::nanoseconds>(end - begin);\r\n      cerr << \"Time measured: \" << elapsed.count() * 1e-6 << \"ms\\n\";\r\n}     \r\nunordered_map<int,vector<int>>adj;\r\nvoid dfs(int i,vi &vis) {\r\n      vis[i] = 1;\r\n      for(auto it:adj[i]) {\r\n            if(!vis[it]) {\r\n                  dfs(it,vis);\r\n            }\r\n      }\r\n}\r\nvoid Solve()\r\n{\r\n      int n,k;\r\n      cin >> n >> k;\r\n      rep(i,0,k) {\r\n            int a,b;\r\n            cin >> a >> b;\r\n            adj[a].pb(b);\r\n            adj[b].pb(a);\r\n      }\r\n      int cmp = 0;\r\n      vi vis(n+1,0);\r\n      rep(i,1,n+1) {\r\n            if(!vis[i]) {\r\n                  cout <<\" i \"<<i<<endl;\r\n                  cmp++;\r\n                  dfs(i,vis);\r\n            }\r\n      }\r\n      cout << k - n + cmp << endl;\r\n     \r\n      \r\n}\r\n"
}