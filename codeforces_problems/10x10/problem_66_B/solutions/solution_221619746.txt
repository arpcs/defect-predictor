{
    "id": 221619746,
    "contestId": 66,
    "creationTimeSeconds": 1693697956,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 66,
        "index": "B",
        "name": "Petya and Countryside",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1100,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    "author": {
        "contestId": 66,
        "members": [
            {
                "handle": "fullhaider"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1299513600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <random>\r\n#include <regex>\r\n#include <map>\r\n#include <set>\r\n#include <complex>\r\n#include <map>\r\n#include <set>\r\n#include <unordered_set>\r\n#include <list>\r\n#include <cmath>\r\n#include <stack>\r\n#include <queue>\r\n#include <bitset>\r\n#include <cstdio>\r\n#include <climits>\r\n#include <vector>\r\n#include <cstdlib>\r\n#include <numeric>\r\n#include <iostream>\r\n#include <iomanip>\r\n#include <string>\r\n#include <cstring>\r\n#include <algorithm>\r\n#include <array>\r\n#include <assert.h>\r\n#include <functional>\r\n#define _USE_MATH_DEFINES\r\n#include <math.h>\r\n#include <complex>\r\n#include <atomic>\r\n#include <thread>\r\n\r\nusing namespace std;\r\ntypedef long long ll;\r\n#define ln '\\n'\r\n#define rep(i,n) for(int i=0;i<(n);++i)\r\n#define drep(i,n) int i = 0;for(;i<(n);++i)\r\n#define FOR(i,s,e) for(int i=s;i<=(e);++i)\r\n#define DFOR(i,s,e) int i = s;for(;i<=(e);++i)\r\n#define FORR(i,s,e) for(int i=s;i>=(e);--i)\r\n#define DFORR(i,s,e) int i = s;for(;i>=(e);--i)\r\n#define fore(a, x) for(auto& a : x)\r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, ll> pll;\r\n#define ft first\r\n#define sd second\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define all(a) a.begin(),a.end()\r\n#define Fill(a,b) memset(a,b,sizeof(a))\r\n#define DEBUG(x) std:: cout << '>' << #x << ':' << x << std::endl;\r\n#define FLAG(x) std:: cout << \"flag \" << #x << std::endl;\r\n#define f(i,s,n) for(int i=s;i<n;i++)\r\n#define que_max priority_queue <int>\r\n#define que_min priority_queue <int,vi greater<int>>\r\ntemplate<typename T1, typename T2> bool Max(T1& a, T2 b) { return a<b ? a = b, 1 : 0; }\r\ntemplate<typename T1, typename T2> bool Min(T1& a, T2 b) { return a>b ? a = b, 1 : 0; }\r\n\r\n\r\ntemplate<int MOD>\r\nstruct ModInt {\r\n  unsigned x;\r\n  ModInt() : x(0) { }\r\n  ModInt(signed sig) : x(sig) {  }\r\n  ModInt(signed long long sig) : x(sig%MOD) { }\r\n  int get() const { return (int)x; }\r\n  ModInt pow(ll p) { ModInt res = 1, a = *this; while (p) { if (p & 1) res *= a; a *= a; p >>= 1; } return res; }\r\n \r\n  ModInt &operator+=(ModInt that) { if ((x += that.x) >= MOD) x -= MOD; return *this; }\r\n  ModInt &operator-=(ModInt that) { if ((x += MOD - that.x) >= MOD) x -= MOD; return *this; }\r\n  ModInt &operator*=(ModInt that) { x = (unsigned long long)x * that.x % MOD; return *this; }\r\n  ModInt &operator/=(ModInt that) { return (*this) *= that.pow(MOD - 2); }\r\n \r\n  ModInt operator+(ModInt that) const { return ModInt(*this) += that; }\r\n  ModInt operator-(ModInt that) const { return ModInt(*this) -= that; }\r\n  ModInt operator*(ModInt that) const { return ModInt(*this) *= that; }\r\n  ModInt operator/(ModInt that) const { return ModInt(*this) /= that; }\r\n  bool operator<(ModInt that) const { return x < that.x; }\r\n  friend ostream& operator<<(ostream &os, ModInt a) { os << a.x; return os; }\r\n};\r\n\r\n\r\nbool comparePairs(const std::pair<long double, long double>& pair1, const std::pair<long double, long double>& pair2) {\r\n    return pair1.first > pair2.first;\r\n}\r\n\r\n\r\n\r\nint main(int argc, char **argv)\r\n{\r\n\t\r\n\t int n;\r\n\t  int max = 0;\r\n\t std::cin >> n;\r\n\t std::vector<int> vec(n);\r\n\t for(int i=0; i<n; i++){\r\n\t\t std::cin >> vec[i];\r\n\t }\r\n\t \r\n\t if (n == 1){\r\n\t\t std::cout << 1;\r\n\t\t return 0;\r\n\t }\r\n\t \r\n\t for(int i=0; i<n; i++){\r\n\t\t \r\n\t\t int l = 0;\r\n\t\t int r = 0 ;\r\n\t\t int ele = vec[i];\r\n\t\r\n\t\t //search right\r\n\t\t \r\n\t\t for(int j= i ; j<n; j++){\r\n\t\t\t \r\n\t\t\t if(vec[j] >= vec[j +1])\r\n\t\t\t   {\r\n\t\t\t\t   r++;\r\n\t\t\t   }\r\n\t\t\t \r\n\t\t }\r\n\t\t \r\n\t\t //search left\r\n\t\t  if (i > 1){\r\n\t\t  for(int j=i; j>0; j--){\r\n\t\t\t  // std::cout << vec[j] << \" \";\r\n\t\t\t   if( vec[j -1 ] <= vec[j]){\r\n\t\t\t\t   l++;\r\n\t\t\t   }\r\n\t\t     }\r\n\t\t }\r\n\t\t     \r\n\t\t     \r\n\t\t    // DEBUG(r + l);\r\n\t\t if ((r + l) > max) {\r\n\t\t\t max = r+ l;\r\n\t\t }\r\n\t\t \r\n\t\t\r\n\t }\r\n\t \r\n\t\r\n\t \r\n\t std::cout << max;\r\n\t \r\n\t\r\n\t\r\n\t\r\n\t\r\n\treturn 0;\r\n}\r\n\r\n"
}