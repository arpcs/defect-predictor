{
    "id": 72003590,
    "contestId": 1297,
    "creationTimeSeconds": 1582838218,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1297,
        "index": "F",
        "name": "Movie Fan",
        "type": "PROGRAMMING",
        "tags": [
            "*special",
            "data structures",
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1297,
        "members": [
            {
                "handle": "darnley"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1582810500
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "package codeforces.kotlinheroes3\n\nprivate fun solve() {\n\tval (n, m) = readInts()\n\tdata class Segment(val start: Int, val end: Int, val id: Int)\n\tval segments = List(n) { val data = readInts(); Segment(data[0], data[1], it) }\n\tval byOpening = segments.sortedBy { it.start }\n\tval ans = MutableList(n) { 0 }\n\tvar time = 0\n\tvar i = 0\n\tval toWatch = sortedSetOf<Segment>(compareBy({ it.end }, { it.id }))\n\tvar worstGap = 0\n\twhile (true) {\n\t\tif (toWatch.isEmpty()) {\n\t\t\tif (i == n) break\n\t\t\ttime = byOpening[i].start\n\t\t}\n\t\twhile (i < n && byOpening[i].start == time) toWatch.add(byOpening[i++])\n\t\tfor (temp in 0 until m) {\n\t\t\tval v = toWatch.pollFirst() ?: break\n\t\t\tworstGap = maxOf(worstGap, time - v.end)\n\t\t\tans[v.id] = time\n\t\t}\n\t\ttime++\n\t}\n\tprintln(worstGap)\n\tprintln(ans.joinToString(\" \"))\n}\n\nfun main() = repeat(readInt()) { solve() }\n\nprivate fun readLn() = readLine()!!\nprivate fun readInt() = readLn().toInt()\nprivate fun readStrings() = readLn().split(\" \")\nprivate fun readInts() = readStrings().map { it.toInt() }\n"
}