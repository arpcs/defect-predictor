{
    "id": 212902676,
    "contestId": 1063,
    "creationTimeSeconds": 1688865807,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1063,
        "index": "D",
        "name": "Candies for Children",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "brute force",
            "math"
        ]
    },
    "author": {
        "contestId": 1063,
        "members": [
            {
                "handle": "bal.bla.bla"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1539511500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n using namespace std;\r\n // Function to calculate the maximum number of sweet tooths\r\n int maxSweetTooths(int n, int l, int r, int k) {\r\n   int candies = k;\r\n   int sweetTooths = 0;\r\n   for (int i = l; i != r; i = (i + 1) % n) {\r\n     if (candies >= 2) {\r\n       candies -= 2;\r\n       sweetTooths++;\r\n     } else {\r\n       candies--;\r\n     }\r\n   }\r\n   if (candies == 1) {\r\n     sweetTooths++;\r\n   }\r\n   return sweetTooths;\r\n }\r\n int main() {\r\n   int n, l, r, k;\r\n   cin >> n >> l >> r >> k;\r\n   if (k % 2 == 1) {\r\n     cout << \"-1\" << endl;\r\n     return 0;\r\n   }\r\n   int maxSweetTooths = maxSweetTooths(n, l, r, k);\r\n   cout << maxSweetTooths << endl;\r\n   return 0;\r\n }\r\n"
}