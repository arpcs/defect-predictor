{
    "id": 228885407,
    "contestId": 82,
    "creationTimeSeconds": 1697784664,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 82,
        "index": "C",
        "name": "General Mobilization",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "data structures",
            "dfs and similar",
            "sortings"
        ]
    },
    "author": {
        "contestId": 82,
        "members": [
            {
                "handle": "luogu_bot3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1304694000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 103,
    "timeConsumedMillis": 342,
    "memoryConsumedBytes": 1228800,
    "source": "// LUOGU_RID: 130555367\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=10010;\r\nint n,tot=1;\r\nint a[N],fa[N],c[N],ans[N],depth[N];\r\nstruct ED{\r\n    int x,val;\r\n}e[N];\r\nstruct node{\r\n    int v,w;\r\n};\r\nstruct E{\r\n    int id,w;\r\n    bool operator<(const E &x)const{\r\n        return w>x.w;\r\n    }\r\n};\r\nvector<node> tr[N] ;\r\nvoid add(int x,int y,int w){\r\n    tr[x].push_back((node){y,w});\r\n    return;\r\n}\r\n \r\npriority_queue<E> q[N];\r\nbool cmp(ED x,ED y){\r\n    return x.val<y.val;\r\n}\r\nvoid dfs(int x,int f){\r\n    fa[x]=f;\r\n    depth[x]=depth[f]+1;\r\n    e[x]=ED{x,depth[x]};\r\n    for(int i=0;i<tr[x].size();i++){\r\n        int y=tr[x][i].v,w=tr[x][i].w;\r\n        if(y==f) continue;\r\n        c[y]=w;\r\n        dfs(y,x);\r\n    }\r\n    return;\r\n}\r\nint main(){\r\n    cin>>n;\r\n    for(int i=1;i<=n;i++){\r\n        cin>>a[i];\r\n    }\r\n    for(int i=1;i<n;i++){\r\n        int x,y,z;\r\n        cin>>x>>y>>z;\r\n        add(x,y,z);\r\n        add(y,x,z);\r\n    }\r\n    for(int i=2;i<=n;i++){\r\n        q[i].push((E){i,a[i]});\r\n    }\r\n    dfs(1,0);\r\n    sort(e+1,e+1+n,cmp);\r\n//    for(int i=1;i<=n;i++){\r\n//        cout<<fa[i]<<\" \";\r\n//    }\r\n    for(int tim=1;tim<=2*n;tim++){\r\n        for(int tt=2;tt<=n;tt++){\r\n            int i=e[tt].x;\r\n            for(int j=1;j<=c[i] && !q[i].empty();j++){\r\n                E x=q[i].top();\r\n                q[i].pop();\r\n                if(fa[i]==1){\r\n                    ans[x.id]=tim;\r\n                    tot++;\r\n                }else{\r\n                    q[fa[i]].push(x);\r\n                }\r\n                if(tot>=n){\r\n                    for(int i=1;i<=n;i++){\r\n                        cout<<ans[i]<<\" \";\r\n                    }\r\n                    cout<<'\\n';\r\n                    return 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        cout<<ans[i] <<\" \";\r\n    }\r\n    cout<<'\\n';\r\n \r\n \r\n \r\n\treturn 0;\r\n}"
}