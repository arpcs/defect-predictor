{
    "id": 199462414,
    "contestId": 82,
    "creationTimeSeconds": 1679949626,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 82,
        "index": "C",
        "name": "General Mobilization",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "data structures",
            "dfs and similar",
            "sortings"
        ]
    },
    "author": {
        "contestId": 82,
        "members": [
            {
                "handle": "lotusblume"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1304694000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 103,
    "timeConsumedMillis": 186,
    "memoryConsumedBytes": 819200,
    "source": "#include <algorithm>\n#include <functional>\n#include <iostream>\n#include <vector>\n\nint main() {\n\tint n;\n\tstd::cin >> n;\n\n\tstd::vector<std::pair<int, int>> a(n);\n\t\n\tfor (int i = 0; i < n; ++i) {\n\t\tstd::cin >> a[i].first;\n\t\ta[i].second = i + 1;\n\t}\n\n\tstd::sort(a.begin(), a.end());\n\n\tstd::vector<std::vector<std::pair<int, int>>> tree(n + 1);\n\n\tfor (int i = 0; i < n - 1; ++i) {\n\t\tint u, v, w;\n\t\tstd::cin >> u >> v >> w;\n\t\ttree[u].emplace_back(v, w);\n\t\ttree[v].emplace_back(u, w);\n\t}\n\n\tstd::vector<int> parent(n + 1);\n\tstd::vector<int> cap(n + 1);\n\n\tstd::function<void(int)> dfs = [&](int v) {\n\t\tfor (auto [u, w] : tree[v]) {\n\t\t\tif (u == parent[v]) continue;\n\t\t\tparent[u] = v;\n\t\t\tcap[u] = w;\n\t\t\tdfs(u);\n\t\t}\n\t};\n\n\tdfs(1);\n\n\tstd::vector<int> cur(n + 1);\n\n\tfor (int i = 1; i <= n; ++i) {\n\t\tcur[i] = i;\n\t}\n\n\tstd::vector<int> ans(n + 1);\n\n\tfor (int time = 1; time <= n; ++time) {\n\t\tstd::vector<int> used(n + 1, 0);\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tint v = a[i].second;\n\t\t\tif (cur[v] == 1) continue;\n\t\t\tif (used[cur[v]] == cap[cur[v]]) continue;\n\t\t\t++used[cur[v]];\n\t\t\tcur[v] = parent[cur[v]];\n\t\t\tif (cur[v] == 1) ans[v] = time;\n\t\t}\n\t}\n\n\tfor (int i = 1; i <= n; ++i) {\n\t\tstd::cout << ans[i] << ' ';\n\t}\n\n\tstd::cout << '\\n';\n\n\treturn 0;\n}\n\n"
}