{
    "id": 203839021,
    "contestId": 82,
    "creationTimeSeconds": 1682709228,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 82,
        "index": "C",
        "name": "General Mobilization",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "data structures",
            "dfs and similar",
            "sortings"
        ]
    },
    "author": {
        "contestId": 82,
        "members": [
            {
                "handle": "bot669"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1304694000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 103,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 1024000,
    "source": "#include <cstdio>\r\n#include <string>\r\n#include <vector>\r\n#include <memory.h>\r\n#include <cstring>\r\n#include <ctime>\r\n#include <cmath>\r\n#include <set>\r\n#include <map>\r\n#include <algorithm>\r\nusing namespace std;\r\n \r\n#define forn( i,n ) for ( int i=0; i<(int)(n); i++ )\r\n#define pb push_back\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef pair<int,int> pii;\r\n \r\nint n;\r\npii a[5010];\r\nvector<int> g[5010], w[5010];\r\nint p[5010];\r\nint pc[5010], maxpc[5010], where[5010];\r\nint ans[5010];\r\n \r\nvoid dfs( int i, int pr ) {\r\n//  printf( \"dfs %d %d\\n\", i, pr );\r\n  forn( j, g[i].size() )\r\n    if ( g[i][j] != pr ) {\r\n      p[ g[i][j] ] = i;\r\n      dfs( g[i][j], i );\r\n      maxpc[ g[i][j] ] = pc[ g[i][j] ] = w[i][j];\r\n    }\r\n}\r\n \r\nint main()\r\n{\r\n  scanf( \"%d\", &n );\r\n  forn( i, n ) scanf( \"%d\", &a[i].first ), a[i].second = i;\r\n \r\n  forn( i, n-1 ) {\r\n    int a, b, c;\r\n    scanf( \"%d %d %d\", &a, &b, &c );\r\n    a--, b--;\r\n    g[a].pb( b );\r\n    w[a].pb( c );\r\n    g[b].pb( a );\r\n    w[b].pb( c );\r\n  }\r\n/*\r\n  forn( i, n ) {\r\n    printf( \"%d: \", i );\r\n    forn( j, g[i].size() ) printf( \" %d\", g[i][j] );\r\n    printf( \"\\n\" );\r\n  }\r\n*/\r\n  dfs( 0, -1 );\r\n  p[0] = -1;\r\n \r\n  sort( a, a+n );\r\n \r\n  forn( i, n ) ans[i] = -1, where[i] = i;\r\n  int ready = 0;\r\n \r\n  for ( int day=0; ready < n; day++ ) {\r\n \r\n    forn( i, n ) pc[i] = maxpc[i];\r\n \r\n    forn( i, n ) {\r\n      int q = a[i].second;\r\n      if ( where[q] == 0 ) {\r\n        if ( ans[q] == -1 ) {\r\n          ans[q] = day;\r\n          ready++;\r\n        }\r\n        continue;\r\n      }\r\n \r\n      int x = where[q];\r\n      if ( pc[x] > 0 ) {\r\n        where[q] = p[ where[q] ];\r\n        pc[x]--;\r\n      }\r\n    }\r\n  }\r\n \r\n  forn( i, n ) {\r\n    if ( i ) printf( \" \" );\r\n    printf( \"%d\", ans[i] );\r\n  }\r\n  \r\n  return 0;\r\n}"
}