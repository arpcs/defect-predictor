{
    "id": 165767961,
    "contestId": 1157,
    "creationTimeSeconds": 1658830660,
    "relativeTimeSeconds": 520,
    "problem": {
        "contestId": 1157,
        "index": "A",
        "name": "Reachable Numbers",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 1157,
        "members": [
            {
                "handle": "superEgo99"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1658830140
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 130,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "/*\\ . \\*/\r\n\r\n#include<bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace chrono;\r\nusing namespace __gnu_pbds;\r\n\r\n// Flags to use: -std=c++17 -O2 -DLOCAL_PROJECT -Wshadow -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -fsanitize=address -fsanitize=undefined\r\n\r\n//Pragmas\r\n// #pragma GCC target (\"avx2\")\r\n// #pragma GCC optimize (\"O3\")\r\n// #pragma GCC optimize (\"unroll-loops\")\r\n\r\n//Vectors:\r\n#define pb push_back\r\n#define pf push_front\r\n#define vi vector<int>\r\n#define vc vector<char>\r\n#define vll vector<long long>\r\n#define vvll vector<vector<long long>>\r\n#define vs vector<string>\r\n\r\n//Macros:\r\n#define FOR(i,a,b) for (long long i = (a); i < (b); ++i)\r\n#define Minato ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\r\n#define all(c) (c).begin(), (c).end() \r\n#define nline \"\\n\"\r\n#define MOD 1000000007\r\n#define INF 1e18\r\n#define MAXINF 9223372036854775807\r\n#define PI 3.141592653589793238462\r\n#define ffo find_first_of\r\n#define flo find_last_of\r\n#define gcd __gcd\r\n#define ff first\r\n#define ss second\r\n#define pll pair<long long, long long>\r\n#define stoi stoll\r\n#define nl \"\\n\"\r\n#define setbits(n) __builtin_popcountll(n)\r\n#define clz(n) __builtin_clzll(n)\r\n#define ctz(n) __builtin_clzll(n)\r\n#define minv(v) *min_element(all(v))\r\n#define maxv(v) *max_element(all(v))\r\n#define pbds_getIndex order_of_key\r\n\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double lld;\r\n\r\n/*-------------------------------------------------------------------------*/\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x) cerr << #x <<\" \"; _print(x); cerr << endl;\r\n#else\r\n#define debug(x);\r\n#endif\r\n/*--------------------------------------------------------------------------*/\r\n\r\n//Debug stuff:\r\ntemplate <typename T>\r\nvoid _print(T &t) {cerr << t;}\r\ntemplate <class T, class V> void _print(pair <T, V> p);\r\ntemplate <class T> void _print(vector <T> v);\r\ntemplate <class T> void _print(set <T> v);\r\ntemplate <class T, class V> void _print(map <T, V> v);\r\ntemplate <class T> void _print(multiset <T> v);\r\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\r\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(unordered_set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\n\r\n/*-----------------------------------------------------------------------------*/\r\ntemplate<typename T> \r\nistream& operator >>(istream& istream, vector<T>& v) {\r\n  for(auto& element : v) {\r\n    cin >> element;\r\n  }\r\n  return istream;\r\n}\r\n\r\ntemplate<typename T>\r\nostream& operator <<(ostream& ostream, vector<T>& v) {\r\n  for(auto& element : v) {\r\n    cout << element << \" \";\r\n  }\r\n  return ostream;\r\n}\r\n\r\ntemplate<typename T> \r\nistream &operator >>(istream &istream, vector<vector<T>> &v){\r\n  for(auto &row : v) {\r\n    for(auto &cell : row) {\r\n      cin >> cell;\r\n    }\r\n  }\r\n  return istream;\r\n}\r\n\r\ntemplate<typename T> \r\nostream& operator <<(ostream& ostream, vector<vector<T>>& v) {\r\n  for(auto& row : v) {\r\n    for(auto& cell : row) {\r\n      cout << cell << \" \";\r\n    }\r\n    cout << \"\\n\";\r\n  }\r\n  return ostream;\r\n}\r\n/*----------------------------------------------------------------------------------*/\r\n\r\n//Math: \r\n//ETF: phi(n) = n*summation(1-1/p) | p = unique prime factors\r\nll phi(ll n){ll result=n;for(ll i=2;i*i<=n;i++){if(n%i==0){while(n%i==0)n/=i;result-=result/i;}}if(n > 1)result-=result/n;return result;}\r\nll binexp(ll a, ll b, ll m){\r\n  ll ans=1;\r\n  while(b){\r\n    if(b&1){\r\n      ans = (ans * 1LL * a)%m;\r\n    }\r\n    a = (a*1LL*a)%m;\r\n    b>>=1;\r\n  }\r\n  return ans;\r\n}\r\nll gcd(ll a, ll b){\r\n  if(a>b){return gcd(b,a);}\r\n  if(a == 0){return b;}\r\n  return gcd(a, b%a);\r\n}\r\nll lcm(ll a, ll b){\r\n  return (a*b)/gcd(a,b);\r\n}\r\nll modinv(ll n){\r\n  return binexp(n,MOD-2,MOD);\r\n}\r\n//Returns 2*(Area of triangle)\r\nll aot(ll x1, ll y1, ll x2, ll y2, ll x3, ll y3){\r\n  return abs(x1*y2 + x2*y3 + x3*y1 - x2*y1 - x3*y2 - x1*y3);\r\n}\r\n\r\n\r\n/*-----------------------------------------------------------------------------------*/\r\n/* --- PBDS --- */\r\ntemplate<typename T>\r\nusing oset = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update >; \r\n//less -> regular set, greater -> descending order, less_equal -> mutliset (not recommended - messes up upper_bound and lower_bound)\r\n//find_by_order: returns an iterator to the k-th largest element (counting from zero)\r\n//order_of_key: returns the number of items in a set that are strictly smaller than our item (used for finding the index)\r\n/*-----------------------------------------------------------------------------------*/\r\n\r\n//Misc functions: \r\nvoid rotateLeft(vector<long long> &v, long long shift){ll n = v.size();shift %= n;vector<ll> r;for(int i = 0; i < n; i++){r.pb(v[(i+shift)%n]);}v = r;}\r\nvoid rotateRight(vector<long long> &v, long long shift){long long n = v.size();shift %= n;vector<ll> r;for(int i = 0; i < n; i++){r.pb(v[(i-shift+n)%n]);}v = r;}\r\nll modmul(ll a, ll b){return (((a%MOD)*(b%MOD))%MOD);}\r\nchar to_lower(char c){if(c>=97)return c;return c+32;}\r\nchar to_upper(char c){if(c<97)return c;return c-32;}\r\nbool isPalindrome(vll &v){ll n = v.size();FOR(i,0,n/2){if(v[i] != v[n-i-1]) return false;}return true;}\r\nbool isPalindrome(string &v){ll n = v.size();FOR(i,0,n/2){if(v[i] != v[n-i-1]) return false;}return true;}\r\nstring to_binary(ll n){if(n==0){return \"0\";}string s;while(n){s += to_string(n%2);n/=2;}reverse(all(s));return s;}\r\n\r\n//Note: clz and ctz crashes when arguement = 0\r\nbool isPowOf2(ll n){if(n==0) return false;if(n&(n-1)){return false;}return true;}\r\nll _msb(ll n){return (63 - __builtin_clzll(n));}\r\nll _lsb(ll n){return (__builtin_ctzll(n));}\r\n//Bitset -> ll ==> ll variable = bitset_name.to_ullong(); \r\n\r\n//-- Sieve -- (0 -> Composite | 1 -> Prime)\r\n//In case of MLE (rare), go for v<bool> instead since it consumes lesser memory. (n^2 bytes -> n/8 bytes) \r\n// const ll NSIEVE = 1e6+1; vll sieve(NSIEVE,1);for(ll i=2; i*i<NSIEVE; i++){if(sieve[i]){for(ll j=2*i; j<NSIEVE; j+=i){sieve[j]=0;}}}\r\n/*----------------------------------------------------------------------------------*/\r\n/* Comparators MUST return false if the elements are equal */\r\n\r\nvoid PreCompute() {}\r\nll f(ll n){\r\n  ll temp = n+1;\r\n  while(temp != 0 && temp %10 == 0){\r\n    temp /= 10;\r\n  }\r\n  return temp;\r\n}\r\nvoid FinalGambit()\r\n{\r\n  ll n; cin >> n;\r\n  map<ll,ll> mp;\r\n  mp[n] = 1;\r\n  ll ans = 1;\r\n  while(1){\r\n    ll newVal = f(n);\r\n    if(mp.count(newVal)){\r\n      break;\r\n    }\r\n    else{\r\n      n = newVal;\r\n      mp[newVal] = 1;\r\n      ans++;\r\n    }\r\n  }\r\n  cout << ans << nl;\r\n} \r\nint main(){\r\n#ifndef ONLINE_JUDGE\r\n  freopen(\"input.txt\", \"r\", stdin);\r\n  freopen(\"output.txt\", \"w\", stdout);\r\n  freopen(\"error.txt\", \"w\", stderr);\r\n#endif \r\n  Minato;\r\n  auto start1 = high_resolution_clock::now();\r\n  PreCompute();\r\n  ll t = 1; \r\n  // cin >> t;\r\n  FOR(tt,0,t){\r\n    //Google:\r\n    // cout << \"Case #\" << tt+1 << \": \";\r\n    FinalGambit();\r\n  }\r\n  auto stop1 = high_resolution_clock::now();\r\n  auto duration = duration_cast<microseconds>(stop1 - start1);\r\n#ifndef ONLINE_JUDGE\r\n  cerr << \"Time: \" << duration . count() / 1000 << endl;\r\n#endif\r\n  return 0;\r\n} \r\n \r\n/*Mistakes not to be repeated:\r\n1) Not adding LL after constants while performing mathematical \r\n   calcs purely involving constants.\r\n   This could lead to overflow.\r\n\r\n2) Not taking in the inputs completely for the test case.\r\n  - This could happen when you are using break statements.\r\n    (esp in query problems).\r\n  - Ex: Robot Breakout\r\n*/\r\n\r\n/*Graphs:\r\n\r\nvll dx = {-1,0,1,0}, dy = {0,1,0,-1};\r\n\r\nMovements: Adjacent + diagonals\r\nvector<pair<ll,ll>> movements = {\r\n  {0,1},{0,-1},{1,0},{-1,0},{1,1},{-1,-1},{-1,1},{1,-1}\r\n};\r\n\r\nKnight's movements:\r\nvector<pair<ll,ll>> movements = {\r\n  {-2,1},{-1,2},{1,2},{2,1},{2,-1},{1,-2},{-1,-2},{-2,-1}\r\n};\r\n\r\nbool isValid(ll v_x, ll v_y){\r\n  if(v_x<0 || v_x>=n || v_y<0 || v_y>=m) return false;\r\n  return true;\r\n}\r\n*/\r\n\r\n/*\r\n//Set comparator syntax: \r\nstruct cmp{\r\n  bool operator() (pair<ll,ll> a, pair<ll,ll> b) const {\r\n    if(a.ss >= b.ss) return true;\r\n    return false;\r\n  }\r\n};\r\n*/\r\n\r\n/* TODO:\r\n - //https://codeforces.com/contest/1594/problem/D - Bipartite graph\r\n - //https://codeforces.com/contest/1637/problem/D DP\r\n - //https://codeforces.com/contest/1422/problem/C DP\r\n - //https://codeforces.com/contest/2/problem/B DP on grid\r\n - //https://codeforces.com/problemset/problem/1633/D - Double DP (MUST DO)\r\n - //https://codeforces.com/contest/1625/problem/C - DP (MUST DO)\r\n - //https://codeforces.com/problemset/problem/987/D (Shortest paths)\r\n - //https://codeforces.com/contest/633/problem/A\r\n - //https://codeforces.com/contest/59/problem/E 2000 rated graph\r\n - //https://codeforces.com/problemset/problem/1607/F SCC + DP\r\n - //https://codeforces.com/contest/1557/problem/C XOR + DP\r\n - //https://codeforces.com/blog/entry/66176 - Derangements in unsorted array\r\n - //https://codeforces.com/contest/61/problem/E Fenwick Tree/Ordered Set\r\n - //https://codeforces.com/contest/1462/problem/D DP + Prefix sums and  maps/binary search\r\n - //https://codeforces.com/contest/1475/problem/D Greedy + Binary search\r\n - //https://codeforces.com/contest/1624/problem/G MST\r\n - //https://codeforces.com/problemset/problem/1650/E - Binary search\r\n - //https://www.codechef.com/START30B/problems/MLIS - LIS variant\r\n*/\r\n\r\n//https://www.shortcutfoo.com/app/dojos/sublime-text-3-win/cheatsheet\r\n\r\n\r\n"
}