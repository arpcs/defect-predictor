{
    "id": 120741777,
    "contestId": 1157,
    "creationTimeSeconds": 1624804418,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1157,
        "index": "A",
        "name": "Reachable Numbers",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 1157,
        "members": [
            {
                "handle": "vballem"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1556289300
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "\r\nclass Reachable {\r\n    companion object {\r\n        @JvmStatic\r\n        fun main(args: Array<String>) {\r\n            val list = reachableList(args[0].toInt())\r\n            println(list)\r\n        }\r\n\r\n        private fun reachableList(input: Int, reachableList: MutableList<Int> = mutableListOf()): Int {\r\n            if (reachableList.contains(input)) {\r\n                return reachableList.size\r\n            }\r\n            reachableList.add(input)//1098\r\n            var x = input + 1;//1099\r\n            while ((x % 10 == 0)) {\r\n                x /= 10\r\n            }\r\n            return reachableList(x, reachableList)//{1099,1098}\r\n        }\r\n    }\r\n}"
}