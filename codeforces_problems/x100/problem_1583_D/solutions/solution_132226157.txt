{
    "id": 132226157,
    "contestId": 1583,
    "creationTimeSeconds": 1634470375,
    "relativeTimeSeconds": 1675,
    "problem": {
        "contestId": 1583,
        "index": "D",
        "name": "Omkar and the Meaning of Life",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "Mangooste"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 63,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "PRETESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\nusing ld = long double;\r\n\r\n#define all(a) begin(a), end(a)\r\n#define rall(a) rbegin(a), rend(a)\r\n#define len(a) ((int)((a).size()))\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false), cin.tie(nullptr);\r\n\r\n    int n;\r\n    cin >> n;\r\n\r\n    vector<int> nxt(n, -1);\r\n    for (int i = 0; i < n; i++) {\r\n        cout << '?';\r\n        for (int j = 0; j < n; j++)\r\n            cout << ' ' << 1 + (i == j);\r\n\r\n        cout << endl;\r\n\r\n        int pos;\r\n        cin >> pos;\r\n        pos--;\r\n        if (pos != -1 && pos < i) {\r\n            assert(nxt[i] == -1);\r\n            nxt[i] = pos;\r\n        }\r\n    }\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        cout << '?';\r\n        for (int j = 0; j < n; j++)\r\n            cout << ' ' << 2 - (i == j);\r\n\r\n        cout << endl;\r\n\r\n        int pos;\r\n        cin >> pos;\r\n        pos--;\r\n        if (pos != -1 && pos < i) {\r\n            assert(nxt[pos] == -1);\r\n            nxt[pos] = i;\r\n        }\r\n    }\r\n\r\n    assert(count(all(nxt), -1) == 1);\r\n\r\n    vector<bool> good(n, false);\r\n    for (int i = 0; i < n; i++)\r\n        if (nxt[i] != -1)\r\n            good[nxt[i]] = false;\r\n\r\n    int c = 0;\r\n    while (!good[c])\r\n        c++;\r\n\r\n    vector<int> perm(n);\r\n    for (int i = 1; i <= n; i++, c = nxt[c])\r\n        perm[c] = i;\r\n\r\n    cout << \"! \";\r\n    for (int i = 0; i < n; i++)\r\n        cout << perm[i] + 1 << \" \\n\"[i == n - 1];\r\n}\r\n"
}