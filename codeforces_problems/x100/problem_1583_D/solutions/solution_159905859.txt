{
    "id": 159905859,
    "contestId": 1583,
    "creationTimeSeconds": 1654669754,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "D",
        "name": "Omkar and the Meaning of Life",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "sugam10"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define int      long long\r\n#define all(xs)   xs.begin(), xs.end()\r\n#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())\r\n\r\nsigned main() {\r\n  ios::sync_with_stdio(false);\r\n  cin.tie(0);\r\n  int n;\r\n  cin >> n;\r\n\r\n  auto query = [&](int x) {\r\n\r\n    cout << \"? \" ;\r\n    for (int j = 0; j < n; j++) {\r\n      if (j == x) {\r\n        cout << 1 << \" \";\r\n      }\r\n      else {\r\n        cout << 2 << \" \";\r\n      }\r\n    }\r\n    cout << endl;\r\n    int y;\r\n    cin >> y;\r\n    return y;\r\n  };\r\n  set<int> s;\r\n  for (int i = 0; i < n; i++) {\r\n    s.insert(i);\r\n  }\r\n  int last = n - 1;\r\n\r\n  vector<int> p(n);\r\n  vector<int> ans(n , -1);\r\n  int fir = 0;\r\n  for (int i = n - 1; i >= 0; i--) {\r\n    int qans = query(i);\r\n    // cout << i << \" \" << qans - 1 << \"\\n\";\r\n    if (qans == 0) {\r\n      p[i] = 0;\r\n      ans[i] = 1;\r\n      fir = i + 1;\r\n    }\r\n    else {\r\n      p[i] = qans ;\r\n    }\r\n  }\r\n  // for (int i = 0; i < n; i++) {\r\n  //   cout << p[i]  << \" \";\r\n  // }\r\n  // cout << endl;\r\n  int st = 2;\r\n  for (int i = 2; i <= n; i++) {\r\n\r\n    int found = -1;\r\n    for (int j = 0; j < n; j++) {\r\n      if (p[j] == fir and  j + 1 != fir) {\r\n        found = j;\r\n      }\r\n    }\r\n    if (found == -1) {\r\n      int qans = query(fir - 1);\r\n      // cout << fir << \" \" << qans << \"\\n\";\r\n\r\n      ans[qans - 1] = st;\r\n      // for (int i : ans) {\r\n      // cout << i << \" \";\r\n      // }\r\n      // cout << endl;\r\n      fir = qans;\r\n      // cout << fir << \"\\n\";\r\n      st++;\r\n    }\r\n    else {\r\n      // cout << fir << \" @ \" << found << \"\\n\";\r\n\r\n      ans[found ] = st;\r\n      // for (int i : ans) {\r\n      //   cout << i << \" \";\r\n      // }\r\n      // cout << endl;\r\n      fir = found + 1;\r\n      st++;\r\n      // cout << fir << \"\\n\";\r\n    }\r\n  }\r\n\r\n\r\n  cout << \"! \";\r\n  for (int i : ans) {\r\n    cout << i << \" \";\r\n  }\r\n  cout << endl;\r\n}\r\n// 3 2 1 5 4"
}