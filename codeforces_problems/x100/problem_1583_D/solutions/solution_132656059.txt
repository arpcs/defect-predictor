{
    "id": 132656059,
    "contestId": 1583,
    "creationTimeSeconds": 1634859019,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "D",
        "name": "Omkar and the Meaning of Life",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "F4llen4ngel"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1228800,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define magic_define ios_base::sync_with_stdio(0); cin.tie(0); cout << fixed; cout.precision(17);\n#define ll long long\n#define pii pair<int, int>\n#define pb push_back\n#define vi vector<int>\n\nvoid solve() {\n   int n;\n   cin >> n;\n   vi q(n);\n   vi a(n);\n   for (int x=-n+1;x<n;++x){\n       if (!x) continue;\n       if (x > 0) {\n           vi cur_req(n, n);\n           cur_req[n - 1] = n - x;\n           cout << \"? \";\n           for (auto elem : cur_req)\n               cout << elem << \" \";\n           cout << endl;\n       } else {\n           vi cur_req(n, n + x);\n           cur_req[n - 1] = n;\n           cout << \"? \";\n           for (auto elem : cur_req)\n               cout << elem << \" \";\n           cout << endl;\n       }\n       int cur_k;\n       cin >> cur_k;\n       if (cur_k) {\n           q[cur_k - 1] = x;\n       }\n   }\n   int min_elem = q[0];\n   for (auto elem : q)\n       min_elem = min(min_elem, elem);\n   cout << \"! \";\n   for (auto elem : q)\n       cout << n - elem + min_elem << \" \";\n   cout << endl;\n}\n\nint32_t main() {\n    magic_define;\n    solve();\n    return 0;\n}\n"
}