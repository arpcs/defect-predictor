{
    "id": 132500204,
    "contestId": 1583,
    "creationTimeSeconds": 1634712993,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "D",
        "name": "Omkar and the Meaning of Life",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "ilyakrasnovv"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 1228800,
    "source": "#pragma GCC optimize(\"Ofast,no-stack-protector\") // #\r\n//#pragma GCC\r\n// target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\r\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2\") // #\r\n#pragma GCC optimize(\"unroll-loops\")                                   // #\r\n#pragma GCC optimize(\"fast-math\")                                      // #\r\n//#pragma GCC optimize(\"section-anchors\")\r\n//#pragma GCC optimize(\"profile-values,profile-reorder-functions,tracer\")\r\n//#pragma GCC optimize(\"vpt\")\r\n//#pragma GCC optimize(\"rename-registers\")\r\n//#pragma GCC optimize(\"move-loop-invariants\")\r\n//#pragma GCC optimize(\"unswitch-loops\")\r\n//#pragma GCC optimize(\"function-sections\")\r\n//#pragma GCC optimize(\"data-sections\")\r\n//#pragma GCC optimize(\"branch-target-load-optimize\")\r\n//#pragma GCC optimize(\"branch-target-load-optimize2\")\r\n//#pragma GCC optimize(\"btr-bb-exclusive\")\r\n//#pragma GCC optimize(\"O3\")\r\n\r\n#define _USE_MATH_DEFINES\r\n\r\n#include <algorithm>\r\n#include <array>\r\n#include <bitset>\r\n#include <cassert>\r\n#include <chrono>\r\n#include <cmath>\r\n#include <complex>\r\n#include <deque>\r\n#include <fstream>\r\n#include <functional>\r\n#include <iomanip>\r\n#include <iostream>\r\n#include <list>\r\n#include <map>\r\n#include <math.h>\r\n#include <numeric>\r\n#include <queue>\r\n#include <random>\r\n#include <set>\r\n#include <sstream>\r\n#include <stack>\r\n#include <string>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\n#include <utility>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\n#define INF (2e9)\r\n#define INF_LL ((ll)1e18)\r\n#define filin(x) freopen(x, \"r\", stdin)\r\n#define filout(x) freopen(x, \"w\", stdout)\r\n\r\ntypedef int64_t ll;\r\ntypedef long double ld;\r\n\r\n//#define map unordered_map\r\n//#ifndef __APPLE__\r\n//#include <ext/pb_ds/assoc_container.hpp>\r\n// using namespace __gnu_pbds;\r\n//#define map gp_hash_table\r\n//#endif\r\n\r\nint ask(vector<int> &ar) {\r\n    cout << \"? \";\r\n    for (auto &it : ar)\r\n        cout << it + 1 << \" \";\r\n    cout << endl;\r\n    int res;\r\n    cin >> res;\r\n    return res - 1;\r\n}\r\n\r\nsigned main() {\r\n    int n;\r\n    cin >> n;\r\n    vector<int> lk(n, -1);\r\n    vector<int> dd(n, 0), ss(n, 1);\r\n    for (int i = 0; i < n; ++i) {\r\n        dd[i] = 1;\r\n        ss[i] = 0;\r\n        int gd = ask(dd);\r\n        if (gd != -1 && gd != i) {\r\n            lk[gd] = i;\r\n        }\r\n        dd[i] = 0;\r\n        ss[i] = 1;\r\n    }\r\n    int st = -1;\r\n    for (int i = 0; i < n; ++i) {\r\n        if (lk[i] == -1) {\r\n            st = i;\r\n            break;\r\n        }\r\n    }\r\n    vector<int> vl(n);\r\n    vector<bool> vis(n);\r\n    vl[st] = 0;\r\n    deque<int> tps = {st};\r\n    while (!tps.empty()) {\r\n        int cur = tps.front();\r\n        tps.pop_front();\r\n        if (vis[cur])\r\n            continue;\r\n        vis[cur] = 1;\r\n        if (lk[cur] != -1 && !vis[lk[cur]]) {\r\n            vl[lk[cur]] = vl[cur] - 1;\r\n            tps.push_back(lk[cur]);\r\n        }\r\n    }\r\n    cout << \"! \";\r\n    for (auto &it : vl)\r\n        cout << it + 1 << \" \";\r\n    cout << endl;\r\n    return 0;\r\n}\r\n"
}