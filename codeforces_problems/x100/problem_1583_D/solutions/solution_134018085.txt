{
    "id": 134018085,
    "contestId": 1583,
    "creationTimeSeconds": 1635834085,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "D",
        "name": "Omkar and the Meaning of Life",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "starboy_99"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 1024000,
    "source": "//#include <bits/stdc++.h>\r\n#include <math.h>\r\n#include <string>\r\n#include <map>\r\n#include <set>\r\n#include <stack>\r\n#include <queue>\r\n#include <array>\r\n#include <limits>\r\n#include <numeric>\r\n#include <climits>\r\n#include <cstdio>\r\n#include <vector>\r\n#include <iomanip>\r\n#include <unordered_set>\r\n#include <bitset>\r\n#include <queue>\r\n#include <iostream>\r\n#include <algorithm>\r\n#define fastIO ios::sync_with_stdio(0);cin.tie(0),cout.tie(0);\r\n#define ll long long\r\n#define fi first\r\n#define pno cout<<\"NO\\n\";\r\n#define pys cout<<\"YES\\n\";\r\n#define se second\r\n#define pb push_back\r\n#define eb emplace_back //faster than push_back\r\n#define mod1 1000000007\r\n#define mod2 998244353\r\n#define INF 9223372036854775807\r\n#define dist(x, y) sqrt(abs(x) +abs(y))\r\n//const int SZ=1E6;\r\nusing namespace std;\r\n \r\n//ll lcm(ll a, ll b){\r\n//    return (a/__gcd(a, b) * b);\r\n//}\r\n \r\n//int isPrime(int n)\r\n//{\r\n//    for(int i=2;i<=sqrt(n);i++)\r\n//    if(n%i==0)\r\n//        return 0;\r\n//    return 1;\r\n//}\r\n \r\n//void dfs(int i)\r\n//{\r\n//    vis[i]=1;\r\n//    for(auto x:adj[i])\r\n//    {\r\n//        if(!vis[x])\r\n//            dfs(x);\r\n//    }\r\n//}\r\n \r\n//--------------------------------CODE STARTS HERE----------------------------------------\r\n \r\n//Our main goal in this question is to find the element at rightmost position and the offset of all other elements\r\n//with respect to it\r\n//Example 1:3 2 1 5 4 ->rightmost element is 4 offset array=>{-1,-2,-3,1,0}\r\n//\r\n//To find positive offset we run queries of type \"? 1 1 1 1 i\"\r\n//->QUERY 1: 1 1 1 1 2 will return 4 so we store the offset(2-1) at index 4\r\n//->QUERY 2: 1 1 1 1 3 will return 0 by this we can compute our rightmost element,k=n-(offset)+1.In this case\r\n//5-(3-1)+1=4\r\n//\r\n//To find negative offset we run queries of type \"? i i i i 1\"\r\n//->QUERY 3: 2 2 2 2 1 will return 1 so we store offset(1-2) at index 1\r\n//->QUERY 4: 3 3 3 3 1 will return 2 so we store offset(1-3) at index 2\r\n//->QUERY 3: 4 4 4 4 1 will return 3 so we store offset(1-4) at index 3\r\n//\r\n//Offset array becomes {-1,-2,-3,1,0}\r\n//\r\n//Now to print the answer we print k+offset(i)\r\n//Resultant array becomes {4-1,4-2,4-3,4+1,4+0}=>{3,2,1,5,4}\r\n \r\n \r\nvoid solve()\r\n{\r\n    int n;\r\n    cin>>n;\r\n    vector<int> v(n+1,0);\r\n    int res=0,k=1;\r\n    for(int i=2;i<=n;i++)\r\n    {\r\n        cout<<\"? \";\r\n        for(int j=0;j<n-1;j++)\r\n        cout<<\"1 \";\r\n        cout<<i<<\" \";\r\n        cin>>res;\r\n        if(res)\r\n            v[res]=i-1;\r\n        else\r\n        {\r\n            k=n-(i-1)+1;\r\n            break;\r\n        }\r\n    }\r\n    for(int i=2;i<=k;i++)\r\n    {\r\n        cout<<\"? \";\r\n        for(int j=0;j<n-1;j++)\r\n        cout<<i<<\" \";\r\n        cout<<\"1 \";\r\n        cin>>res;\r\n        v[res]=1-i;\r\n    }\r\n    cout<<\"! \";\r\n    for(int i=1;i<=n;i++)\r\n    cout<<k+v[i]<<\" \";\r\n}\r\n \r\nint32_t main()\r\n{\r\n    solve();\r\n}"
}