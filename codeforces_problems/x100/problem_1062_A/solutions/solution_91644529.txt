{
    "id": 91644529,
    "contestId": 1062,
    "creationTimeSeconds": 1599053365,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1062,
        "index": "A",
        "name": "A Prank",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1300,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1062,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542209700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 99,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main (){\n\tint n;\n\tcin >> n;\n\tint arr[n+1];\n\tarr[n] = -1;\n\tfor(int i = 0; i < n; i++){\n\t\tcin >> arr[i];\n\t}\n\t\n\tint temp = 1;\n\tint count = 0;\n\tint max, min;\n\tfor(int i = 0; i < n; i++){\n\t\tif(arr[i+1] - arr[i] == 1){\n\t\t\tif(temp == 1){\n\t\t\t\tmin = arr[i];\n\t\t\t}\n\t\t\ttemp++;\n\t\t}else{\n\t\t\tif(temp > 1){\n\t\t\t\tmax = arr[i];\n\t\t\t\tif(min != 1){\n\t\t\t\t\ttemp--;\n\t\t\t\t}\n\t\t\t\tif(max != 1000){\n\t\t\t\t\ttemp--;\n\t\t\t\t}\n\t\t\t\tif(count < temp){\n\t\t\t\t\tcount = temp;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\ttemp = 1;\n\t\t}\n\t}\n\tcout << count << endl;\n\t\n\n\treturn 0;\n}\n\t  \t \t\t \t \t\t\t\t\t\t\t \t\t\t\t\t   \t  \t",
    "suggested_categories": [
        "algorithm",
        "data structure",
        "dynamic programming",
        "array manipulation",
        "input processing",
        "output formatting",
        "conditional logic",
        "integer operations",
        "code optimization",
        "code efficiency",
        "c++ programming",
        "standard template library (stl)",
        "iterative loops",
        "variable declaration",
        "input validation",
        "output handling",
        "edge cases",
        "error handling",
        "boundary checking",
        "code testing"
    ]
}