{
    "id": 204359468,
    "contestId": 1821,
    "creationTimeSeconds": 1683133918,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1821,
        "index": "F",
        "name": "Timber",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1821,
        "members": [
            {
                "handle": "ZergTricky"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682001300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 99,
    "timeConsumedMillis": 108,
    "memoryConsumedBytes": 16076800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define flush cout.flush\r\n\r\nusing ll = long long;\r\nusing ull = unsigned long long;\r\nusing ld = long double;\r\nusing pl = pair<ll, ll>;\r\nconst ll INF = 1e9 + 7;\r\nconst ll mod = 1e9 + 7;\r\nconst ll mod2 = 998244353;\r\nconst ld eps = 1e-9;\r\nconst ld PI = acos(-1);\r\n\r\nconst ll N = 1e6 + 500;\r\n\r\nll modPow(ll x, ll n, ll m) {\r\n    if (n == 0)return 1;\r\n    ll u = modPow(x, n / 2, m);\r\n    u = (u * u) % m;\r\n    if (n % 2 == 1) u = (u * x) % m;\r\n    return u;\r\n}\r\n\r\nll fact[N + 1], inv[N + 1];\r\n\r\nll C(ll n, ll k) {\r\n    if (n < k || k < 0)return 0;\r\n    return fact[n] * inv[k] % mod2 * inv[n - k] % mod2;\r\n}\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    fact[0] = 1;\r\n    for (ll i = 1; i <= N; ++i) {\r\n        fact[i] = (i * fact[i - 1]) % mod2;\r\n    }\r\n    inv[N] = modPow(fact[N], mod2 - 2, mod2);\r\n    for (ll i = N - 1; i >= 0; --i) {\r\n        inv[i] = ((i + 1) * inv[i + 1]) % mod2;\r\n    }\r\n    ll n, m, k;\r\n    cin >> n >> m >> k;\r\n    ll b = m * (k + 1);\r\n    n -= b;\r\n    ll res = 0;\r\n    for (ll i = 0; i <= m; ++i) {\r\n        ll w = n - i * k;\r\n        ll val = C(m, i) * C(m + w, w) % mod2 * modPow(2ll, m - i, mod2) % mod2;\r\n        if (i % 2)val = -val;\r\n        res = (res + val) % mod2;\r\n        res += mod2;\r\n        res %= mod2;\r\n    }\r\n    cout << res;\r\n    return 0;\r\n}"
}