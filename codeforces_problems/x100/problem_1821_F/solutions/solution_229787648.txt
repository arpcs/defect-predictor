{
    "id": 229787648,
    "contestId": 1821,
    "creationTimeSeconds": 1698303176,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1821,
        "index": "F",
        "name": "Timber",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1821,
        "members": [
            {
                "handle": "warlikevulture"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682001300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 2355200,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 300005, P = 998244353;\nint n, m, k, fac[N], inv[N];\nint qp(int a, int b = P - 2) {\n  int r = 1;\n  for (; b; b >>= 1, a = a * 1ll * a % P)\n    if (b & 1) r = r * 1ll * a % P;\n  return r;\n}\nvoid init() {\n  fac[0] = 1;\n  for (int i = 1; i <= n; ++i) fac[i] = fac[i - 1] * 1ll * i % P;\n  inv[n] = qp(fac[n]);\n  for (int i = n; i; --i) inv[i - 1] = inv[i] * 1ll * i % P;\n}\nint C(int n, int m) {\n  return n < m ? 0 : fac[n] * 1ll * inv[m] % P * inv[n - m] % P;\n}\nint main() {\n  scanf(\"%d%d%d\", &n, &m, &k);\n  if (k * m > n) {\n    puts(\"0\");\n    return 0;\n  }\n  init();\n  int ans = 0;\n  for (int i = 0; i <= m; ++i) {\n    int j = m - i, t = n - i * (2 * k + 1) - j * (k + 1);\n    if (t < 0) continue;\n    (ans += ((i & 1) ? -1ll : 1ll) * C(m, i) * C(t + m, m) % P * qp(2, j)) %= P;\n  }\n  printf(\"%d\\n\", (ans + P) % P);\n  return 0;\n}\n"
}