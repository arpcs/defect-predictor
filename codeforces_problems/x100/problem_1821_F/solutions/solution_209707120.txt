{
    "id": 209707120,
    "contestId": 1821,
    "creationTimeSeconds": 1686782026,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1821,
        "index": "F",
        "name": "Timber",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1821,
        "members": [
            {
                "handle": "juliany2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682001300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 99,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 2457600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nusing ll = long long;\r\n#define all(x) (x).begin(), (x).end()\r\n\r\n// fix i segments which take up (k + 1) with (k) blank on left side (can be facing left as well)\r\n\r\ntemplate<int MD> struct mi {\r\n   int v;\r\n   explicit operator int() const { return v; }\r\n   mi(long long _v = 0) {\r\n       v = (-MD <= _v && _v < MD) ? _v : _v % MD;\r\n       if (v < 0) v += MD;\r\n   }\r\n \r\n   mi &operator+=(const mi &o) { if ((v += o.v) >= MD) v -= MD; return *this; }\r\n   mi &operator-=(const mi &o) { if ((v -= o.v) < 0) v += MD; return *this; }\r\n   mi &operator*=(const mi &o) { v = 1LL * v * o.v % MD; return *this; }\r\n   mi &operator/=(const mi &o) { return (*this) *= inv(o); }\r\n \r\n   friend mi operator+(mi a, const mi &b) { return a += b; }\r\n   friend mi operator-(mi a, const mi &b) { return a -= b; }\r\n   friend mi operator*(mi a, const mi &b) { return a *= b; }\r\n   friend mi operator/(mi a, const mi &b) { return a /= b; }\r\n \r\n   friend mi inv(const mi &m) { return binpow(m, MD - 2); }\r\n   friend mi binpow(mi b, long long e) {\r\n       mi ret = 1;\r\n       for (; e; e >>= 1, b *= b) if (e & 1) ret *= b;\r\n       return ret;\r\n   }\r\n \r\n   friend bool operator==(const mi &a, const mi &b) { return a.v == b.v; }\r\n   friend bool operator!=(const mi &a, const mi &b) { return !(a == b); }\r\n   friend bool operator<(const mi &a, const mi &b) { return a.v < b.v; }\r\n \r\n   friend istream &operator>>(istream &i, mi &m) { long long x; i >> x; m.v = x; return i; }\r\n   friend ostream &operator<<(ostream &o, const mi &m) { o << m.v; return o; }\r\n};\r\n\r\nconst int N = 3e5 + 7, mod = 998244353;\r\nusing Mint = mi<mod>;\r\nMint fac[N], ifac[N];\r\n\r\nMint nck(ll n, ll k) {\r\n    if(n < 0 || k < 0 || n < k)\r\n        return 0;\r\n\r\n    return fac[n] * ifac[n - k] * ifac[k];\r\n}\r\n\r\nint main() {\r\n    cin.tie(0)->sync_with_stdio(false);\r\n\r\n    fac[0] = ifac[0] = 1;\r\n    for(int i = 1; i < N; i++) {\r\n        fac[i] = fac[i - 1] * i;\r\n        ifac[i] = binpow(fac[i], mod - 2);\r\n    }\r\n\r\n    int n, m, k;\r\n    cin >> n >> m >> k;\r\n\r\n    Mint ans = 0;\r\n    for(int i = 0; i <= m; i++) {\r\n        Mint f = nck((ll) n - ((ll) i * (2 * k + 1)) - ((ll) (m - i) * (k + 1)) + m, m);\r\n\r\n        ans += nck(m, i) * binpow((Mint) 2, m - i) * f * (i % 2 ? -1 : 1);\r\n    }\r\n\r\n    cout << ans << '\\n';\r\n\r\n    return 0;\r\n}\r\n\r\n"
}