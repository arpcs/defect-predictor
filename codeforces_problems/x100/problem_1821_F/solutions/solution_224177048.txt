{
    "id": 224177048,
    "contestId": 1821,
    "creationTimeSeconds": 1695218115,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1821,
        "index": "F",
        "name": "Timber",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1821,
        "members": [
            {
                "handle": "flyfeng"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682001300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 9625600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nlong long ksm(long long a,long long b,long long mod){\r\n    long long res=1;\r\n    a%=mod;\r\n    while(b){\r\n        if(b&1) res=res*a%mod;\r\n        a=a*a%mod;\r\n        b>>=1;\r\n    }\r\n    return res;\r\n}\r\nconst int N=6e5+10,mod=998244353;\r\nlong long fac[N],inv[N];\r\nvoid init(int n=N-10){\r\n    fac[0]=1;\r\n    for(int i=1;i<=n;i++){\r\n        fac[i]=fac[i-1]*i%mod;\r\n    }\r\n    inv[n]=ksm(fac[n],mod-2,mod);\r\n    for(int i=n-1;i>=0;i--){\r\n        inv[i]=inv[i+1]*(i+1)%mod;\r\n    }\r\n}\r\nlong long C(int n,int m){\r\n    if(n<0||m<0||n<m) return 0;\r\n    return fac[n]*inv[m]%mod*inv[n-m]%mod;\r\n}\r\n\r\nvoid solve(){\r\n     int n,m,k;\r\n     cin>>n>>m>>k;\r\n     init();\r\n     long long ans=0,res=1;\r\n     for(int i=0,f=(m&1)?mod-1:1;i<=m;i++,f=(mod-f)%mod,res=res*2%mod){\r\n         long long t=1ll*(k+1)*i,tt=1ll*(m-i)*(2*k+1);\r\n         ans=(ans+f*res%mod*C(n+m-t-tt,m)%mod*C(m,i)%mod)%mod;\r\n     }\r\n     cout<<ans<<'\\n';\r\n}\r\n\r\nint main(){\r\n    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\r\n    int t=1;\r\n    while(t--){\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n"
}