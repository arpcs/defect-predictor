{
    "id": 210594855,
    "contestId": 1821,
    "creationTimeSeconds": 1687383664,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1821,
        "index": "F",
        "name": "Timber",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1821,
        "members": [
            {
                "handle": "KrK"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682001300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 3584000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n\r\nconst int Maxn = 300005;\r\nconst int mod = 998244353;\r\n\r\nint fac[Maxn], ifac[Maxn];\r\nint pw2[Maxn];\r\nint n, m, k;\r\n\r\nint toPower(int a, int p)\r\n{\r\n    int res = 1;\r\n    while (p) {\r\n        if (p & 1) res = ll(res) * a % mod;\r\n        p >>= 1; a = ll(a) * a % mod;\r\n    }\r\n    return res;\r\n}\r\n\r\nint Inv(int x) { return toPower(x, mod - 2); }\r\n\r\nint C(int n, int k)\r\n{\r\n    if (n < 0 || k < 0 || k > n) return 0;\r\n    return ll(fac[n]) * ifac[k] % mod * ifac[n - k] % mod;\r\n}\r\n\r\nint main()\r\n{\r\n    fac[0] = ifac[0] = 1;\r\n    pw2[0] = 1;\r\n    for (int i = 1; i < Maxn; i++) {\r\n        fac[i] = ll(i) * fac[i - 1] % mod;\r\n        ifac[i] = Inv(fac[i]);\r\n        pw2[i] = 2ll * pw2[i - 1] % mod;\r\n    }\r\n    scanf(\"%d %d %d\", &n, &m, &k);\r\n    int res = 0;\r\n    for (int i = 0; i <= m; i++)\r\n        if (ll(m + i) * k <= n) {\r\n            int val = ll(C(n - (m + i) * k, m)) * C(m, i) * pw2[m - i] % mod;\r\n            if (i % 2 == 0) res = (res + val) % mod;\r\n            else res = (res - val + mod) % mod;\r\n        }\r\n    printf(\"%d\\n\", res);\r\n    return 0;\r\n}\r\n"
}