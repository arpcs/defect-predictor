{
    "id": 209676882,
    "contestId": 1821,
    "creationTimeSeconds": 1686753608,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1821,
        "index": "F",
        "name": "Timber",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1821,
        "members": [
            {
                "handle": "K-H"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682001300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 99,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 6041600,
    "source": "// LUOGU_RID: 112710321\n# include <bits/stdc++.h>\n\nusing namespace std;\n\nnamespace {\n\n  typedef uint32_t uint;\n\n  constexpr uint P(998'244'353);\n  constexpr uint pow(uint a, uint n) {\n    uint r(1);\n    while (n) {\n      r = 1ull * r * (n & 1 ? a : 1) % P;\n      a = 1ull * a * a % P, n >>= 1;\n    }\n    return r;\n  }\n\n  constexpr uint N(300'000);\n\n  uint n, m, k;\n  uint f[N + 1];\n  uint ans;\n\n  uint fact[2][2 * N + 1];\n  inline uint binom(uint const n, uint const k)\n  { return fact[0][n] * (1ull * fact[1][k] * fact[1][n - k] % P) % P; }\n  \n  void solve() {\n    cin >> n >> m >> k;\n    if (1ull * m * (k + 1) > n)\n      return cout << 0 << endl, void();\n    fact[0][0] = 1;\n    for (uint i(1); i <= 2 * n; ++i)\n      fact[0][i] = 1ull * fact[0][i - 1] * i % P;\n    fact[1][2 * n] = pow(fact[0][2 * n], P - 2);\n    for (uint i(2 * n); i >= 1; --i)\n      fact[1][i - 1] = 1ull * fact[1][i] * i % P;\n    for (uint i(0), j(1); i <= m; ++i, j = 2 * j % P)\n      f[(m - i) * k] = 1ull * binom(m, i) * j % P;\n    for (uint i(1); i <= m; i += 2)\n      f[i * k] = (-f[i * k] + P) % P;\n    for (uint i(n); i >= m * (k + 1); --i)\n      f[i] = f[i - m * (k + 1)];\n    memset(f, 0x00, sizeof(uint[m * (k + 1)]));\n    for (uint i(0); i <= n; ++i)\n      ans = (ans + 1ull * binom(n - i + m, m) * f[i]) % P;\n    cout << ans << endl;\n  }\n\n}\n\nint main() { solve(); }"
}