{
    "id": 208894967,
    "contestId": 1821,
    "creationTimeSeconds": 1686142444,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1821,
        "index": "F",
        "name": "Timber",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1821,
        "members": [
            {
                "handle": "A_Croco"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682001300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 99,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 4710400,
    "source": "/*\r\n\r\n\r\n               AAA                                               CCCCCCCCCCCCC\r\n              A:::A                                           CCC::::::::::::C\r\n             A:::::A                                        CC:::::::::::::::C\r\n            A:::::::A                                      C:::::CCCCCCCC::::C\r\n           A:::::::::A                                    C:::::C       CCCCCCrrrrr   rrrrrrrrr      ooooooooooo       cccccccccccccccc   ooooooooooo\r\n          A:::::A:::::A                                  C:::::C              r::::rrr:::::::::r   oo:::::::::::oo   cc:::::::::::::::c oo:::::::::::oo\r\n         A:::::A A:::::A                                 C:::::C              r:::::::::::::::::r o:::::::::::::::o c:::::::::::::::::co:::::::::::::::o\r\n        A:::::A   A:::::A                                C:::::C              rr::::::rrrrr::::::ro:::::ooooo:::::oc:::::::cccccc:::::co:::::ooooo:::::o\r\n       A:::::A     A:::::A                               C:::::C               r:::::r     r:::::ro::::o     o::::oc::::::c     ccccccco::::o     o::::o\r\n      A:::::AAAAAAAAA:::::A                              C:::::C               r:::::r     rrrrrrro::::o     o::::oc:::::c             o::::o     o::::o\r\n     A:::::::::::::::::::::A                             C:::::C               r:::::r            o::::o     o::::oc:::::c             o::::o     o::::o\r\n    A:::::AAAAAAAAAAAAA:::::A                             C:::::C       CCCCCC r:::::r            o::::o     o::::oc::::::c     ccccccco::::o     o::::o\r\n   A:::::A             A:::::A                             C:::::CCCCCCCC::::C r:::::r            o:::::ooooo:::::oc:::::::cccccc:::::co:::::ooooo:::::o\r\n  A:::::A               A:::::A                             CC:::::::::::::::C r:::::r            o:::::::::::::::o c:::::::::::::::::co:::::::::::::::o\r\n A:::::A                 A:::::A                              CCC::::::::::::C r:::::r             oo:::::::::::oo   cc:::::::::::::::c oo:::::::::::oo\r\nAAAAAAA                   AAAAAAA                                CCCCCCCCCCCCC rrrrrrr               ooooooooooo       cccccccccccccccc   ooooooooooo\r\n                                 ________________________\r\n                                 _::::::::::::::::::::::_\r\n                                 ________________________\r\n\r\n\r\n\r\n\r\n */\r\n#include <stdio.h>\r\n\r\n#define N\t300000\r\n#define MD\t998244353\r\n\r\nint vv[N + 1], ff[N + 1], gg[N + 1], pp2[N + 1];\r\n\r\nvoid init() {\r\n    int i;\r\n\r\n    ff[0] = gg[0] = 1, pp2[0] = 1;\r\n    for (i = 1; i <= N; i++) {\r\n        vv[i] = i == 1 ? 1 : (long long) vv[i - MD % i] * (MD / i + 1) % MD;\r\n        ff[i] = (long long) ff[i - 1] * i % MD;\r\n        gg[i] = (long long) gg[i - 1] * vv[i] % MD;\r\n        pp2[i] = pp2[i - 1] * 2 % MD;\r\n    }\r\n}\r\n\r\nint choose(int n, int k) {\r\n    return k < 0 || k > n ? 0 : (long long) ff[n] * gg[k] % MD * gg[n - k] % MD;\r\n}\r\n\r\nint main() {\r\n    int n, m, l, k, ans;\r\n\r\n    init();\r\n    scanf(\"%d%d%d\", &n, &m, &l), l++;\r\n    ans = 0;\r\n    for (k = 0; k <= m && (long long) (l * 2 - 1) * k + (long long) l * (m - k) <= n; k++)\r\n        ans = (ans + (long long) choose(m, k) * pp2[m - k] % MD * choose(n - (l * 2 - 1) * k - l * (m - k) + m, m) % MD * (k % 2 == 0 ? 1 : -1)) % MD;\r\n    if (ans < 0)\r\n        ans += MD;\r\n    printf(\"%d\\n\", ans);\r\n    return 0;\r\n}"
}