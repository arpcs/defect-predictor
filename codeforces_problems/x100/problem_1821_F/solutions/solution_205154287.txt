{
    "id": 205154287,
    "contestId": 1821,
    "creationTimeSeconds": 1683569876,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1821,
        "index": "F",
        "name": "Timber",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1821,
        "members": [
            {
                "handle": "ahshafi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682001300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 99,
    "timeConsumedMillis": 312,
    "memoryConsumedBytes": 39424000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define rng_23 mt19937 rng(chrono::steady_clock::now().time_since_epoch().count())\r\n#ifdef LOCAL\r\n#include \"debug.h\"\r\n#else\r\n#define dbg1(args...) \r\n#define dbg2(x) \r\n#define stop \r\n#define endl '\\n'\r\n#endif\r\ntypedef long long LL;\r\ntypedef unsigned long long uLL;\r\n//typedef __int128_t LLL;\r\ntypedef vector<int> vi;\r\ntypedef pair<int,int> pii;\r\ntypedef pair<LL, int> pli;\r\ntypedef pair<LL, LL> pll;\r\ntypedef tuple<int ,int , int > tiii;\r\nconst int INF=1e9;\r\nconst LL MOD=998244353;\r\n\r\nnamespace NTT {\r\n    vector<int> perm, wp[2];\r\n    const int mod = 998244353, G = 3;    ///G is the primitive root of M\r\n    int root, inv, N, invN;\r\n\r\n    int power(int a, int p) {\r\n        int ans = 1;\r\n        while (p) {\r\n            if (p & 1) ans = (1LL*ans*a)%mod;\r\n            a = (1LL*a*a)%mod;\r\n            p >>= 1;\r\n        }\r\n        return ans;\r\n    }\r\n\r\n    void precalculate(int n) {\r\n        assert( (n&(n-1)) == 0 && (mod-1)%n==0);\r\n        N = n;\r\n        invN = power(N, mod-2);\r\n        perm = wp[0] = wp[1] = vector<int>(N);\r\n\r\n        perm[0] = 0;\r\n        for (int k=1; k<N; k<<=1)\r\n            for (int i=0; i<k; i++) {\r\n                perm[i] <<= 1;\r\n                perm[i+k] = 1 + perm[i];\r\n            }\r\n\r\n        root = power(G, (mod-1)/N);\r\n        inv = power(root, mod-2);\r\n        wp[0][0]=wp[1][0]=1;\r\n\r\n        for (int i=1; i<N; i++) {\r\n            wp[0][i] = (wp[0][i-1]*1LL*root)%mod;\r\n            wp[1][i] = (wp[1][i-1]*1LL*inv)%mod;\r\n        }\r\n    }\r\n\r\n    void fft(vector<int> &v, bool invert = false) {\r\n        if (v.size() != perm.size())   precalculate(v.size());\r\n        for (int i=0; i<N; i++)\r\n            if (i < perm[i])\r\n                swap(v[i], v[perm[i]]);\r\n\r\n        for (int len = 2; len <= N; len *= 2) {\r\n            for (int i=0, d = N/len; i<N; i+=len) {\r\n                for (int j=0, idx=0; j<len/2; j++, idx += d) {\r\n                    int x = v[i+j];\r\n                    int y = (wp[invert][idx]*1LL*v[i+j+len/2])%mod;\r\n                    v[i+j] = (x+y>=mod ? x+y-mod : x+y);\r\n                    v[i+j+len/2] = (x-y>=0 ? x-y : x-y+mod);\r\n                }\r\n            }\r\n        }\r\n        if (invert) {\r\n            for (int &x : v) x = (x*1LL*invN)%mod;\r\n        }\r\n    }\r\n\r\n    vector<int> multiply(vector<int> a, vector<int> b) {\r\n        int n = 1;\r\n        while (n < a.size()+ b.size())  n<<=1;\r\n        a.resize(n);\r\n        b.resize(n);\r\n\r\n        fft(a);\r\n        fft(b);\r\n        for (int i=0; i<n; i++) a[i] = (a[i] * 1LL * b[i])%mod;\r\n        fft(a, true);\r\n        return a;\r\n    }\r\n};\r\n\r\n//MOD expo\r\nLL bigmod(LL a,LL b){//MOD should be <32 bit\r\n    LL ans=1;\r\n    while(b>0){\r\n        if(b&1)ans=(ans*a)%MOD;\r\n        b=b>>1;\r\n        a=(a*a)%MOD;\r\n    }\r\n    return ans;\r\n}\r\n//MOD expo\r\n\r\n//factorial\r\nLL fact[1000001], ifact[1000001];\r\n\r\nvoid build_fact(int n)\r\n{\r\n    fact[0]=1;\r\n    for(int i=1;i<=n;i++) fact[i]=(i*fact[i-1])%MOD;\r\n\r\n    ifact[0]=1;\r\n    for(int i=1;i<=n;i++) ifact[i]=(bigmod(i, MOD-2)*ifact[i-1])%MOD;\r\n}\r\n//factorial\r\n\r\n//ncr\r\nLL ncr(int n, int r)\r\n{\r\n    if(n<0 or r<0 or r>n) return 0;\r\n    return fact[n]*ifact[r]%MOD*ifact[n-r]%MOD;\r\n}\r\n//ncr\r\nvoid brute()\r\n{\r\n    vector<int> poly1 = {2, 0, 1, 0, 1, 0, 1};\r\n    vector<int> poly2 = {1, 1};\r\n    vector<int> poly3 = {1, 1, 1, 1, 1, 1, 1};\r\n\r\n    vector<int> poly = {1};\r\n    poly = NTT::multiply(poly, poly1);\r\n    poly = NTT::multiply(poly, poly1);\r\n    poly = NTT::multiply(poly, poly1);\r\n    poly = NTT::multiply(poly, poly2);\r\n    poly = NTT::multiply(poly, poly2);\r\n    poly = NTT::multiply(poly, poly2);\r\n    poly = NTT::multiply(poly, poly3);\r\n    \r\n    dbg2(poly);\r\n}\r\nvoid solve(int csno)\r\n{\r\n    LL n, m, k;\r\n    cin >> n >> m >> k;\r\n    \r\n    if(m * (k + 1) > n)\r\n    {\r\n        cout << 0 << endl;\r\n        return;\r\n    }\r\n\r\n    build_fact(3 * n);\r\n\r\n    vector<int> poly1(m + 1, 0), poly2(m * k + 1, 0), poly3(n + 1, 0);\r\n\r\n    // for(int i = 0; i <= m; i++)\r\n    // {\r\n    //     poly1[i] = bigmod(2, m - i) * ncr(m, i) % MOD;\r\n    // }\r\n\r\n    for(int i = 0; i <= m; i++)\r\n    {\r\n        poly2[i * k] = ncr(m, i) * bigmod(2, m - i) % MOD;\r\n        if(i & 1)\r\n        {\r\n            poly2[i * k] = -poly2[i * k];\r\n            poly2[i * k] += MOD;\r\n            poly2[i * k] %= MOD;\r\n        }\r\n            \r\n    }\r\n\r\n    for(int i = 0; i <= n; i++)\r\n    {\r\n        poly3[i] = ncr(m + i, i);\r\n    }\r\n\r\n    dbg2(poly2);\r\n    dbg2(poly3);\r\n\r\n    vector<int> poly = NTT::multiply(poly2, poly3);\r\n\r\n    cout << poly[n - m * (k + 1)] << endl;\r\n}\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);cin.tie(NULL);\r\n    int T = 1;\r\n    //cin>>T;\r\n    for(int csno = 1; csno <= T; csno++)\r\n        solve(csno);\r\n}\r\n///////"
}