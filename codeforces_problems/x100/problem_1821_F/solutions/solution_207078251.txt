{
    "id": 207078251,
    "contestId": 1821,
    "creationTimeSeconds": 1684954070,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1821,
        "index": "F",
        "name": "Timber",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1821,
        "members": [
            {
                "handle": "el_tunel"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682001300
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 99,
    "timeConsumedMillis": 374,
    "memoryConsumedBytes": 21094400,
    "source": "md = 998244353\r\n\r\nfac_arr = [1]\r\nfinv_arr = [1]\r\n\r\ndef enlarge_fac():\r\n    old_size = len(fac_arr)\r\n    new_size = old_size * 2\r\n    for i in range(old_size, new_size + 1):\r\n        fac_arr.append((fac_arr[-1] * i) % md)\r\n        finv_arr.append(pow(fac_arr[-1], -1, md))\r\n\r\ndef fac(n):\r\n    assert n >= 0\r\n    while n >= len(fac_arr): enlarge_fac()\r\n    return fac_arr[n]\r\n\r\ndef finv(n):\r\n    assert n >= 0\r\n    while n >= len(finv_arr): enlarge_fac()\r\n    return finv_arr[n]\r\n\r\ndef binom(n, k):\r\n    assert n >= 0\r\n    if k < 0 or k > n: return 0\r\n    return ((fac(n) * finv(k)) % md * finv(n - k)) % md\r\n\r\nn, m, k = [int(x) for x in input().split()]\r\nans = 0\r\nn -= m * (k + 1)\r\nfor i in range(m + 1):\r\n    if n < 0:\r\n        break\r\n    val = (pow(-2, m - i, md) * binom(m, i)) % md\r\n    val *= binom(n + m, m)\r\n    val %= md \r\n    ans = (ans + val) % md\r\n    n -= k\r\nif m % 2 == 1: ans = (-ans) % md\r\nprint(ans)"
}