{
    "id": 205543848,
    "contestId": 1821,
    "creationTimeSeconds": 1683899344,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1821,
        "index": "F",
        "name": "Timber",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1821,
        "members": [
            {
                "handle": "crescent_yhw"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682001300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 99,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 11878400,
    "source": "#include <cstdio>\r\nusing namespace std;\r\n\r\nint main() {\r\n    static const long long mod = 998244353;\r\n    static const int maxn = 300010;\r\n    int n, m, k;\r\n    scanf(\"%d %d %d\", &n, &m, &k);\r\n    if (n < (long long)m * (k + 1)) {\r\n        printf(\"0\\n\");\r\n        return 0;\r\n    }\r\n    n -= m * (k + 1);\r\n    static long long fac[maxn << 1], ifac[maxn << 1], pw[maxn];\r\n    fac[0] = fac[1] = ifac[0] = ifac[1] = pw[0] = 1;\r\n    for (int i = 2; i <= n + m; i++) ifac[i] = -mod / i * ifac[mod % i] % mod;\r\n    for (int i = 2; i <= n + m; i++) fac[i] = fac[i - 1] * i % mod, ifac[i] = ifac[i - 1] * ifac[i] % mod;\r\n    for (int i = 1; i <= m; i++) pw[i] = (pw[i - 1] << 1) % mod;\r\n    auto C = [](const int n, const int k) { return fac[n] * ifac[k] % mod * ifac[n - k] % mod; };\r\n    long long ans = 0;\r\n    for (int i = 0; i <= m && i * k <= n; i++)\r\n        ans += C(m, i) * (i & 1 ? -1 : 1) * pw[m - i] % mod * C(n + m - i * k, m) % mod;\r\n    printf(\"%lld\\n\", (ans % mod + mod) % mod);\r\n    return 0;\r\n}\r\n"
}