{
    "id": 204291936,
    "contestId": 1821,
    "creationTimeSeconds": 1683057049,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1821,
        "index": "F",
        "name": "Timber",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1821,
        "members": [
            {
                "handle": "HeiYeTang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682001300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 3584000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int MOD = 998244353;\r\nconst int N = 300005;\r\n// const int M = 205;\r\nint inv[N];\r\nint fac[N];\r\nint p[N], base = 2;\r\nint fastq(int a, int q) {\r\n    if (q == 0) return 1;\r\n    if (q == 1) return a;\r\n    int x = fastq(a, q/2) ;\r\n    x = 1ll * x * x % MOD;\r\n    if(q%2 == 1)\r\n        x = 1LL * x * a % MOD;\r\n    return x;\r\n}\r\nvoid init() {\r\n    \r\n    fac[0] = fac[1] = 1;\r\n    p[0] = 1; p[1] = base;\r\n    for (int i = 2; i < N; ++i) p[i] = (1LL * p[i - 1] * base) % MOD;\r\n    for (int i = 2; i < N; i++) fac[i] = (1LL * fac[i - 1] * i) % MOD;\r\n\r\n    for (int i = 0; i < N; i++)  inv[i] = fastq(fac[i], MOD - 2);\r\n    \r\n}\r\nvoid add(int& x, int y) {\r\n    x = x + y;\r\n    x %= MOD;\r\n    x = (x + MOD) % MOD;\r\n}\r\nvoid mul(int& x, int y) {\r\n    x = 1LL * x * y % MOD;\r\n}\r\nint main() {\r\n    init();\r\n    int n, m, k;\r\n    cin >> n >> m >> k;\r\n    if (n < (k + 1) * m) {\r\n        cout << 0 << endl;\r\n        return 0;\r\n    }\r\n    int ans = 0;\r\n    for (int t = 0; t <= m; ++t) {\r\n        int x = (n - t*k -  m * (k + 1) );\r\n        if (x < 0) break;\r\n        int num = 1;\r\n        mul(num, p[m - t]);\r\n        mul(num, fac[x + m]);\r\n        mul(num, inv[t]);\r\n        mul(num, inv[m - t]);\r\n        mul(num, inv[x]);\r\n        if (t % 2 == 0)\r\n            add(ans, num);\r\n        else \r\n            add(ans, -num);\r\n    }\r\n    cout << ans << endl;\r\n\treturn 0;\r\n}\r\n"
}