{
    "id": 227797096,
    "contestId": 1821,
    "creationTimeSeconds": 1697108391,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1821,
        "index": "F",
        "name": "Timber",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1821,
        "members": [
            {
                "handle": "nguyenquocthinhhung"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682001300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 99,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 2457600,
    "source": "#pragma GCC optimize(\"Ofast\",\"inline\",\"-ffast-math\")\r\n#pragma GCC target(\"avx,sse2,sse3,sse4,mmx\")\r\n#include <bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/hash_policy.hpp>\r\n#define MOD 998244353\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n\r\nstruct custom_hash {\r\n    static uint64_t splitmix64(uint64_t x) {\r\n        x += 0x9e3779b97f4a7c15;\r\n        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n        return x ^ (x >> 31);\r\n    }\r\n\r\n    size_t operator()(uint64_t x) const {\r\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n        return splitmix64(x + FIXED_RANDOM);\r\n    }\r\n};\r\n\r\nint n,m,k,pw[300010],rev[300010];\r\n\r\ninline void add1(int &x,int y)\r\n{\r\n\tx+=y;\r\n\tif(x>=MOD) x-=MOD;\r\n}\r\n\r\ninline int my_pow(int x,int y)\r\n{\r\n\tif(y==0) return 1;\r\n\tif(y==1) return x;\r\n\tint res=my_pow(x,y/2);\r\n\tif(y%2==0) return 1ll*res*res%MOD;\r\n\telse return 1ll*res*res%MOD*x%MOD; \r\n}\r\n\r\nsigned main()\r\n{\r\n\tios::sync_with_stdio(false);cin.tie(0);\r\n\tcin>>n>>m>>k;\r\n\tpw[0]=1;\r\n\tfor(int i=1;i<=n;i++) pw[i]=1ll*pw[i-1]*i%MOD;\r\n\trev[n]=my_pow(pw[n],MOD-2);\r\n\tfor(int i=n-1;i>=0;i--) rev[i]=1ll*rev[i+1]*(i+1)%MOD;\r\n\tint now=1,ans=0;\r\n\tfor(int i=0;i<=m;i++){\r\n\t\tlong long val=1ll*i*(k+1)+1ll*(m-i)*(2*k+1);\r\n\t\tif(val<=1ll*n){\r\n\t\t\tint cur=1ll*pw[n-val+m]*rev[i]%MOD*rev[m-i]%MOD*rev[n-val]%MOD;\r\n\t\t\tcur=1ll*cur*now%MOD;\r\n\t\t\tif((m-i)&1) cur=(MOD-cur)%MOD;\r\n\t\t\tadd1(ans,cur);\r\n\t\t}\r\n\t\tnow=1ll*now*2%MOD;\r\n\t}\r\n\tcout<<ans<<'\\n';\r\n\treturn 0;\r\n}"
}