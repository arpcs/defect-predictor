{
    "id": 204675886,
    "contestId": 1821,
    "creationTimeSeconds": 1683329734,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1821,
        "index": "F",
        "name": "Timber",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1821,
        "members": [
            {
                "handle": "canine"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682001300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 99,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 2457600,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <climits>\r\n#include <set>\r\n#include <map>\r\n#include <stack>\r\n#include <algorithm>\r\n#include <cassert>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(nullptr);\r\n\r\n\tuint64_t m = 998244353, n,trees,k;\r\n\tcin>>n>>trees>>k;\r\n\r\n\tstd::vector<uint64_t> fax(n+1);\r\n\tfax[0]=1;\r\n\tfor (uint64_t i=1; i<fax.size(); i++) {\r\n\t\tfax[i] = (fax[i-1]*i) % m;\r\n\t}\r\n\r\n\tauto modpow = [m](uint64_t x, unsigned y) {\r\n\t\tuint64_t ret=1;\r\n\t\tfor (; y>0; y>>=1) {\r\n\t\t\tif (y&1) ret=ret*x %m;\r\n\t\t\tx=x*x %m;\r\n\t\t}\r\n\r\n\t\treturn ret;\r\n\t};\r\n\r\n\tauto inverse = [m, modpow](uint64_t x) {\r\n\t\treturn modpow(x, m-2);\r\n\t};\r\n\r\n\tauto binom = [&](unsigned n, unsigned k) {\r\n\t\tif (k>n) return 0llu;\r\n\t\treturn fax[n] * inverse(fax[k] * fax[n-k] %m) %m;\r\n\t};\r\n\r\n\tuint64_t out = 0, inv2=inverse(2), pow2=1;\r\n\tfor (uint64_t i=1; i<=trees; i++) pow2=pow2*2 %m;\r\n\r\n\tfor (uint64_t i=0; i+trees<=n/k && i<=m; i++) {\r\n\t\tuint64_t amt = pow2 * (binom(trees, i) * binom(n-(trees+i)*k, trees) %m) %m;\r\n\t\tpow2 = pow2*inv2 %m;\r\n\t\tif (i%2==0) out = (out+amt)%m;\r\n\t\telse out=(out+m-amt)%m;\r\n\t}\r\n\r\n\tcout<<out<<\"\\n\";\r\n}\r\n"
}