{
    "id": 206696855,
    "contestId": 1821,
    "creationTimeSeconds": 1684639912,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1821,
        "index": "F",
        "name": "Timber",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1821,
        "members": [
            {
                "handle": "KevinLikesCoding"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682001300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 733,
    "memoryConsumedBytes": 28057600,
    "source": "// LUOGU_RID: 110899208\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 1e6 + 5;\r\nconst int P = 998244353;\r\nconst int G = 3;\r\nconst int GI = 332748118;\r\nint r[N];\r\nint c[N], p[N], q[N], u[N];\r\nint f[N], g[N];\r\nint fp(int x,int y) {\r\n\tint res = 1;\r\n\tfor(;y;y >>= 1) {\r\n\t\tif(y & 1) res = (1ll * res * x) % P;\r\n\t\tx = (1ll * x * x) % P;\r\n\t}\r\n\treturn res;\r\n}\r\nvoid NTT(int *a, int lim, int opt) {\r\n\tfor(int i=0;i<lim;i++) {\r\n\t\tif(i < r[i]) swap(a[i], a[r[i]]);\r\n\t}\r\n\tfor(int i=1;i<lim;i<<=1) {\r\n\t\tint wn = fp((opt == 1 ? G : GI), (P - 1) / (i << 1));\r\n\t\tfor(int j=0;j<lim;j+=(i<<1)) {\r\n\t\t\tint w = 1;\r\n\t\t\tfor(int k=0;k<i;k++, w = (1ll * w * wn) % P) {\r\n\t\t\t\tint x = a[j + k];\r\n\t\t\t\tint y = (1ll * w * a[j + k + i]) % P;\r\n\t\t\t\ta[j + k] = (x + y) % P;\r\n\t\t\t\ta[j + k + i] = (x - y + P) % P;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif(opt == 1) return;\r\n\tint inv = fp(lim, P - 2);\r\n\tfor(int i=0;i<lim;i++) a[i] = (1ll * a[i] * inv) % P;\r\n}\r\nvoid invs(int *a,int *b,int d) {\r\n\tif(d == 1) {\r\n\t\tb[0] = fp(a[0], P - 2);\r\n\t\treturn;\r\n\t}\r\n\tinvs(a, b, (d + 1) >> 1);\r\n\tint lim = 1,l = 0;\t\r\n\twhile(lim < (d << 1)) {\r\n\t\tlim <<= 1;\r\n\t\tl++;\r\n\t}\r\n\tfor(int i=0;i<lim;i++) c[i] = a[i];\r\n\tfor(int i=d;i<lim;i++) c[i] = 0;\r\n\tfor(int i=0;i<lim;i++) r[i] = (r[i >> 1] >> 1) | ((i & 1) << (l - 1));\r\n\tNTT(b, lim, 1);\r\n\tNTT(c, lim , 1);\r\n\tfor(int i=0;i<lim;i++) b[i] = (2 - 1ll * c[i] * b[i] % P + P) % P * 1ll * b[i] % P;\r\n\tNTT(b, lim, -1);\r\n\tfor(int i=d;i<lim;i++) b[i] = 0;\r\n}\r\nvoid lns(int *a,int *b,int d) {\r\n\tfor(int i=1;i<d;i++) p[i - 1] = (1ll * i * a[i]) % P;\r\n\tp[d - 1] = 0;\r\n\tinvs(a, q, d);\r\n\tint lim = 1,l = 0;\t\r\n\twhile(lim < (d << 1)) {\r\n\t\tlim <<= 1;\r\n\t\tl++;\r\n\t}\r\n\tfor(int i=0;i<lim;i++) r[i] = (r[i >> 1] >> 1) | ((i & 1) << (l - 1));\r\n\tNTT(p, lim, 1);\r\n\tNTT(q, lim, 1);\r\n\tfor(int i=0;i<lim;i++) p[i] = (1ll * p[i] * q[i]) % P;\r\n\tNTT(p, lim, -1);\r\n\tfor(int i=1;i<d;i++) b[i] = (1ll * p[i - 1] * fp(i, P - 2)) % P;\r\n\tb[0] = 0;\r\n\tfor(int i=0;i<lim;i++) p[i] = q[i] = 0;\r\n}\r\nvoid exps(int *a,int *b,int d){\r\n\tif(d == 1){\r\n\t\tb[0] = 1;\r\n\t\treturn;\r\n\t}\r\n\texps(a, b, (d + 1) >> 1);\r\n\tlns(b, u, d);\r\n\tu[0] = (a[0] + 1 - u[0] + P) % P;\r\n\tfor(int i=1;i<d;i++) u[i] = (a[i] - u[i] + P) % P;\r\n\tint lim = 1,l = 0;\r\n\twhile(lim < (d << 1)) {\r\n\t\tlim <<= 1;\r\n\t\tl++;\r\n\t}\r\n\tfor(int i=0;i<lim;i++) r[i] = (r[i >> 1] >> 1) | ((i & 1) << (l - 1));\r\n\tNTT(b,lim,1);\r\n\tNTT(u,lim,1);\r\n\tfor(int i=0;i<lim;i++) b[i] = (1ll * b[i] * u[i]) % P;\r\n\tNTT(b,lim,-1);\r\n\tfor(int i=d;i<lim;i++) u[i] = b[i] = 0;\r\n}\r\nvoid fps(int *a, int *b, int d, int x) {\r\n\tint pos = 0;\r\n\tfor(int i=0;i<d;i++) if(a[i]) {pos = i; break;}\r\n\tfor(int i=0;i<d;i++) a[i] = a[i + pos];\r\n\tif(1ll * pos * x > 1ll * d) {\r\n\t\tfor(int i=0;i<d;i++) a[i] = 0;\r\n\t\treturn;\r\n\t}\r\n\tpos *= x;\r\n\tint val = a[0];\r\n\tfor(int i=0;i<d;i++) a[i] = (1ll * a[i] * fp(val, P - 2)) % P;\r\n\tlns(a, b, d);\r\n\tfor(int i=0;i<d;i++) b[i] = (1ll * b[i] * x) % P;\r\n\tfor(int i=0;i<d;i++) a[i] = 0;\r\n\texps(b, a, d);\r\n\tfor(int i=0;i<d;i++) a[i] = (1ll * a[i] * fp(val, x)) % P;\r\n\tfor(int i=d-1;i>=pos;i--) a[i] = a[i - pos];\r\n\tfor(int i=0;i<pos;i++) a[i] = 0;\r\n}\r\nvoid solve() {\r\n\tint n, m, k;\r\n\tcin >> n >> m >> k;\r\n\tfor(int i=k + 1;i<=k * 2;i++) f[i] += 2;\r\n\tfor(int i=k * 2 + 1;i<=n;i++) f[i] += 1;\r\n\tint d = max(n, 2 * k) + 2;\r\n\tfps(f, g, d, m);\r\n\tint ans = 0;\r\n\tfor(int i=1;i<=n;i++) ans = (ans + f[i]) % P;\r\n\tcout << ans << endl;\r\n}\r\nint main() {\r\n\tios :: sync_with_stdio(0);\r\n\tcin.tie(0); cout.tie(0);\r\n\tsolve();\r\n\treturn 0;\r\n}"
}