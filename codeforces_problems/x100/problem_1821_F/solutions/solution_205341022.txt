{
    "id": 205341022,
    "contestId": 1821,
    "creationTimeSeconds": 1683729758,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1821,
        "index": "F",
        "name": "Timber",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1821,
        "members": [
            {
                "handle": "LeoSama"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682001300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 99,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 24064000,
    "source": "// LUOGU_RID: 110024142\n#include <bits/stdc++.h>\r\n#define int long long\r\n\r\nusing namespace std ;\r\n\r\nconst int N = 1e6 + 5 , mod = 998244353 ;\r\n\r\nnamespace BINOM {\r\n    int inv[N] , ifac[N] , fac[N] ;\r\n    int binom_init(int n = N) {\r\n        inv[1] = fac[0] = ifac[0] = 1 ; \r\n        for (int i = 2 ; i < n ; ++ i) inv[i] = 1ll * (mod - mod / i) * inv[mod % i] % mod ; \r\n        for (int i = 1 ; i < n ; ++ i) {\r\n            fac[i] = 1ll * fac[i - 1] * i % mod ; \r\n            ifac[i] = 1ll * ifac[i - 1] * inv[i] % mod ; \r\n        }\r\n        return 0 ; \r\n    }int get_binom = binom_init() ;\r\n    int C(int n , int m) {\r\n        if (n < m || m < 0) return 0 ; \r\n        return 1ll * fac[n] * ifac[m] % mod * ifac[n - m] % mod ; \r\n    }\r\n} \r\nusing namespace BINOM ; \r\n\r\nvoid add(int &x , int y) { if ((x += y) >= mod) x -= mod ; }\r\n\r\nint n , m , k ; \r\nsigned main()\r\n{\r\n    cin >> n >> m >> k ; \r\n    auto cal = [&](int n , int m) { // n -> m\r\n        return C(n + m - 1 , m - 1) ; \r\n    };\r\n    int res = 0 , pw2 = 1 ; \r\n    for (int i = 1 ; i <= m ; ++ i) pw2 = pw2 * 2 % mod ; \r\n    for (int i = 0 ; i <= m ; ++ i) {\r\n        int inc = pw2 * C(m , i) % mod ; \r\n        if (i & 1) inc = mod - inc ; \r\n        inc = inc * cal(n - m * (k + 1) - k * i , m + 1) % mod ;\r\n        // cout << i << ' ' << pw2 << '\\n' ; \r\n        pw2 = pw2 * inv[2] % mod ;  \r\n        add(res , inc) ; \r\n    }\r\n    cout << res << '\\n' ;\r\n    return 0 ; \r\n}"
}