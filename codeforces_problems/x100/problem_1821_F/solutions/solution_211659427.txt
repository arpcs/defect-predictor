{
    "id": 211659427,
    "contestId": 1821,
    "creationTimeSeconds": 1688159791,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1821,
        "index": "F",
        "name": "Timber",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1821,
        "members": [
            {
                "handle": "trainwithoutpain"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682001300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 99,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 9216000,
    "source": "#include <bits/stdc++.h>\n#include <ext/random>\n\nusing namespace std;\n\n#define all(v) (v).begin(), (v).end()\n#define rall(v) (v).rbegin(), (v).rend()\n\ntypedef long long ll;\ntypedef pair<int, int> pii;\n\n__gnu_cxx::sfmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n\ntemplate<typename T>\nstd::ostream& operator << (std::ostream& os, const vector<T>& a) {\n    for (const T& x : a) {\n        os << x << ' ';\n    }\n    return os;\n}\n\nconst int MOD = 998244353;\n\nstruct Mint {\n    int value;\n\n    Mint(): value(0) {\n    }\n    Mint(int64_t value): value(value % MOD) {\n    }\n\n    Mint& operator+=(const Mint& other) {\n        value += other.value;\n        if (value >= MOD) value -= MOD;\n        return *this;\n    }\n    friend Mint operator+(Mint lhs, const Mint& rhs) {\n        return lhs += rhs;\n    }\n    friend Mint operator*(Mint lhs, const Mint& rhs) {\n        return Mint(lhs.value * 1LL * rhs.value);\n    }\n    Mint& operator*=(const Mint& other) {\n        value = (value * 1LL * other.value) % MOD;\n        return *this;\n    }\n\n    Mint bin_pow(int n) const {\n        Mint res = 1;\n        Mint a = *this;\n        for (; n; n >>= 1, a *= a) {\n            if (n & 1) {\n                res *= a;\n            }\n        }\n        return res;\n    }\n    Mint inverse() const {\n        return this->bin_pow(MOD - 2);\n    }\n\n    friend ostream& operator<<(ostream& os, const Mint& num) {\n        return os << num.value;\n    }\n};\n\nMint slow(int N, int M, int k) {\n    const int MAXN = 101;\n    Mint f[MAXN][MAXN];\n    N += 5;\n    for (int n = 0; n <= N; ++n) {\n        f[0][n] = 1;\n    }\n    for (int m = 1; m <= M; ++m) {\n        for (int n = 0; n <= N; ++n) {\n            for (int t = 1; t <= n - k; ++t) {\n                f[m][n] += f[m - 1][t - 1];\n            }\n            for (int t = max(k + 1, n - k + 1); t <= n; ++t) {\n                f[m][n] += f[m - 1][t - k - 1];\n            }\n            cout << f[m][n] << ' ';\n        }\n        cout << '\\n';\n    }\n    return f[M][N];\n}\n\nconst int MAXN = 1e6;\nMint fact[MAXN], rfact[MAXN];\n\nvoid init() {\n    fact[0] = 1;\n    for (int i = 1; i < MAXN; ++i) {\n        fact[i] = fact[i - 1] * i;\n    }\n    rfact[MAXN - 1] = fact[MAXN - 1].inverse();\n    for (int i = MAXN - 1; i > 0; --i) {\n        rfact[i - 1] = rfact[i] * i;\n    }\n}\n\nMint C(int n, int k) {\n    return fact[n] * rfact[k] * rfact[n - k];\n}\n\nMint fast(int N, int M, int k) {\n    if (M * 1LL * (k + 1) > N) {\n        return 0;\n    }\n    vector<Mint> a(N + 1);\n    Mint coeff = ((M & 1) ? MOD - 1 : 1);\n    for (int i = M * (k + 1), j = 0; i <= N && j <= M; i += k, ++j) {\n        a[i] = coeff * Mint(MOD - 2).bin_pow(M - j) * C(M, j);\n    }\n    Mint ans = 0;\n    for (int n = 0; n <= N; ++n) {\n        ans += a[N - n] * C(n + M, n);\n    }\n    return ans;\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n\n    init();\n\n    int N, M, k;\n    cin >> N >> M >> k;\n\n    //slow(N, M, k);\n    cout << fast(N, M, k);\n\n    return 0;\n}\n"
}