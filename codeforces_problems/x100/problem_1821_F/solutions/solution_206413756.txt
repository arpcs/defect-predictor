{
    "id": 206413756,
    "contestId": 1821,
    "creationTimeSeconds": 1684479872,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1821,
        "index": "F",
        "name": "Timber",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1821,
        "members": [
            {
                "handle": "CNBI"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682001300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\nconst int MOD = 998244353;\r\nint n, m, k;\r\nint a[\u89e3\u9898\u65f6\u8f93\u5165\u7684\u683c\u5b50\u4e2a\u6570\uff0c \u6839\u8282\u70b9 2\uff0c\u6811\u8282\u70b9 -2];\r\nint getMaxTrees() {\r\n    int res = 0;\r\n    for (int i = 1; i <= n; i++) {\r\n        for (int j = 1; j <= m; j++) {\r\n            int left = i - j;\r\n            int right = i + j;\r\n            if (left < 0 || right >= n) continue;\r\n            int mid = left + (right - left) / 2;\r\n            if (a[i] + a[mid] + a[right] == k) {\r\n                res += mid;\r\n            }\r\n        }\r\n    }\r\n    return res % MOD;\r\n}\r\nint main() {\r\n    cin >> n >> m >> k;\r\n    int ans = getMaxTrees();\r\n    cout << ans << endl;\r\n    return 0;\r\n}"
}