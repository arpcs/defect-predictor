{
    "id": 168498332,
    "contestId": 14,
    "creationTimeSeconds": 1660650834,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "dynamic_gupta"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "GNU C11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "def slope(seg):\n\tif seg[0] == seg[2]:\n\t\treturn 1\n\telif seg[1] == seg[3]:\n\t\treturn 0\n\telse:\n\t\treturn -1\n\t\nsegs = []\nfor i in range(4):\n\tsegs.append(list(map(int,input().split())))\nslopes = [slope(seg) for seg in segs]\nisRect = \"NO\"\nif slopes.count(0) == 2 and slopes.count(1) == 2:\n\tslopes0 = [seg for seg in segs if slope(seg) == 0]\n\tslopes1 = [seg for seg in segs if slope(seg) == 1]\n\tif abs(slopes0[0][0]-slopes0[0][2]) == abs(slopes0[1][0]-slopes0[1][2]) and abs(slopes1[0][1]-slopes1[0][3]) == abs(slopes1[1][1]-slopes1[1][3]) and abs(slopes0[0][1]-slopes0[1][1]) == abs(slopes1[0][1]-slopes1[0][3]):\n\t\tpoints = [str(seg[0])+\"_\"+str(seg[1]) for seg in segs]+[str(seg[2])+\"_\"+str(seg[3]) for seg in segs]\n\t\tif(len(set(points)) == 4):\n\t\t\tisRect=\"YES\"\n\t\t\n\t\t\nprint(isRect)"
}