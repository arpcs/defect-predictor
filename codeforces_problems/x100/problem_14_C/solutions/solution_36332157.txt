{
    "id": 36332157,
    "contestId": 14,
    "creationTimeSeconds": 1521218902,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "MohamedAlmograby"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 60,
    "memoryConsumedBytes": 3481600,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define loop(n) for(int  i= 0 ; i< (n) ; i++)\r\n#define ll long long\r\n#define vi vector<int>\r\n#define ii pair<int,int>\r\n#define inf 20000\r\n#define MAX_NODE 500\r\n#define all(x) x.begin(),x.end()\r\n\r\nusing namespace std;\r\n\r\n\r\nint main() {\r\n\r\n\r\n    //freopen(\"small.in\" , \"r\" , stdin) ;\r\n    //freopen(\"1.txt\" , \"w\" , stdout) ;\r\n\r\n    cin.tie(0);\r\n    cin.sync_with_stdio(0);\r\n\r\n    set<pair<ii,ii> >s ;\r\n\r\n    set<ii> p ;\r\n    int o = 0 ;\r\n    loop(4){\r\n        int x0 , y0 , x1 , y1 ;\r\n        cin >> x0 >> y0 >> x1 >> y1 ;\r\n        ii p1 = make_pair(x0,y0) ;\r\n        ii p2 = make_pair(x1,y1) ;\r\n\r\n        p.insert(p1) ;\r\n        p.insert(p2) ;\r\n        s.insert(make_pair(p1,p2)) ;\r\n    }\r\n\r\n    if(p.size()!=4){\r\n        cout << \"NO\" ;\r\n        return 0 ;\r\n    }\r\n\r\n    vector<ii> v (4);\r\n    v[0] = *p.begin() ;\r\n    v[1] = *next(p.begin(),1) ;\r\n    v[2] = *next(p.begin(),3) ;\r\n    v[3] = *next(p.begin(),2) ;\r\n\r\n    loop(3){\r\n        ii p1 = v[i] ;\r\n        ii p2 = v[i+1] ;\r\n        if(p1==p2)continue ;\r\n        if(s.find(make_pair(p1,p2))==s.end() && s.find(make_pair(p2,p1) )==s.end() ){\r\n            //cout << p1.first <<\" \" <<p1.second <<\" , \" << p2.first <<\" \" <<p2.second <<'\\n' ;\r\n            cout << \"NO\" ;\r\n            return 0 ;\r\n        }\r\n\r\n    }\r\n    ii p1 = v[0] ;\r\n    ii p2 = v[3] ;\r\n\r\n\r\n    if(s.find(make_pair(p1,p2))==s.end() && s.find(make_pair(p2,p1) )==s.end() ){\r\n        cout << \"NO\" ;\r\n        return 0 ;\r\n    }\r\n\r\n    cout <<\"YES\" ;\r\n}\r\n"
}