{
    "id": 38705586,
    "contestId": 14,
    "creationTimeSeconds": 1527547441,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "Sohrabi_Alir"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "Python 3",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 154,
    "memoryConsumedBytes": 102400,
    "source": "s=input()\r\na=[int(i) for i in s.split()]\r\n\r\ns=input()\r\nb=[int(i) for i in s.split()]\r\n\r\ns=input()\r\nc=[int(i) for i in s.split()]\r\n\r\ns=input()\r\nd=[int(i) for i in s.split()]\r\nf=0\r\nv=[]\r\nh=[]\r\nif a[0]==a[2]:\r\n    if a[1]>a[3]:\r\n        a[1],a[3]=a[3],a[1]\r\n    v.append(a)\r\nelif a[1]==a[3]:\r\n    if a[0]>a[2]:\r\n        a[0],a[2]=a[2],a[0]\r\n    h.append(a)\r\nelse:\r\n    print(\"NO\")\r\n    exit()\r\n    f=1\r\nif a[0]==a[1]==a[2]==a[3]:\r\n    print(\"NO\")\r\n    exit()\r\n    f=1\r\n\r\nif b[0]==b[2]:\r\n    if b[1]>b[3]:\r\n        b[1],b[3]=b[3],b[1]\r\n    v.append(b)\r\nelif b[1]==b[3]:\r\n    if b[0]>b[2]:\r\n        b[0],b[2]=b[2],b[0]\r\n    h.append(b)\r\nelse:\r\n    print(\"NO\")\r\n    exit()\r\n    f=1\r\nif b[0]==b[1]==b[2]==b[3]:\r\n    print(\"NO\")\r\n    exit()\r\n    f=1\r\n\r\nif c[0]==c[2]:\r\n    if c[1]>c[3]:\r\n        c[1],c[3]=c[3],c[1]\r\n    v.append(c)\r\nelif c[1]==c[3]:\r\n    if c[0]>c[2]:\r\n        c[0],c[2]=c[2],c[0]\r\n    h.append(c)\r\nelse:\r\n    print(\"NO\")\r\n    exit()\r\n    f=1\r\nif c[0]==c[1]==c[2]==c[3]:\r\n    print(\"NO\")\r\n    exit()\r\n    f=1\r\n\r\nif d[0]==d[2]:\r\n    if d[1]>d[3]:\r\n        d[1],d[3]=d[3],d[1]\r\n    v.append(d)\r\nelif d[1]==d[3]:\r\n    if d[0]>d[2]:\r\n        d[0],d[2]=d[2],d[0]\r\n    h.append(d)\r\nelse:\r\n    print(\"NO\")\r\n    exit()\r\n    f=1\r\nif d[0]==d[1]==d[2]==d[3]:\r\n    print(\"NO\")\r\n    exit()\r\n    f=1\r\n\r\nif f==1:\r\n    print(\"NO\")\r\n    exit()\r\nelse:\r\n    #for verticals:\r\n    if v[0][0]>v[1][0]:\r\n        v[0],v[1]=v[1],v[0]\r\n    #for horizontals:\r\n    if h[0][0]>h[1][0]:\r\n        h[0],h[1]=h[1],h[0]\r\n    arz=v[0][3]-v[0][1]\r\n    tool=h[0][2]-h[0][0]\r\n    arz2=v[1][3]-v[1][1]\r\n    tool2=h[1][2]-h[1][0]\r\n    if v[0][0]>v[1][0]:\r\n        v[0],v[1]=v[1],v[0]\r\n    if h[0][1]>h[1][1]:\r\n        h[0],h[1]=h[1],h[0]\r\n    if tool!=tool2 or arz!=arz2:\r\n        print(\"NO\")\r\n        exit()\r\n    else:\r\n        if v[0][:2]==h[0][:2] and v[1][2:]==h[1][2:]:\r\n            print(\"YES\")\r\n        else:\r\n            print(\"NO\")\r\n\r\n\r\n\r\n"
}