{
    "id": 107723356,
    "contestId": 14,
    "creationTimeSeconds": 1613589191,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "_kira_1008"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 102400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define tezi ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\r\n#define pb push_back\r\n#define rep(i,a,b) for(int i=a;i<b;i++)\r\n#define all(c) c.begin(),c.end()\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define traverse(c,it) for(auto it=c.begin();it!=c.end();it++)\r\n#define lowerb(v,a) lower_bound(v.begin(),v.end(),a)\r\n#define lowerbarr(v,n,a) lower_bound(v,v+n,a)\r\n#define upperb(v,a) upper_bound(v.begin(),v.end(),a)\r\n#define upperbarr(v,n,a) upper_bound(v,v+n,a)\r\n#define maxval(v) max_element(v.begin(),v.end())\r\n#define maxarr(v,n) max_element(v,v+n)\r\n#define minval(v) min_element(v.begin(),v.end())\r\n#define minarr(v,n) min_element(v,v+n)\r\n#define sz(a) (ll)a.size()\r\n#define fr first\r\n#define se second\r\n#define PI 3.1415926536\r\n#define vi vector<int>\r\n#define pii pair<int,int>\r\n#define mem0(v) memset(v,0,sizeof(v))\r\n#define memf(v) memset(v,false,sizeof(v))\r\n#define memt(v) memset(v,true,sizeof(v))\r\n#define mem(v,a) memset(v,a,sizeof(v))\r\n#define npos string::npos\r\n#define MAX 100000\r\n#define MOD 1000000007\r\n#define precision(x) setprecision(x)\r\n#define mp make_pair\r\n#define inf (int)1e8\r\n\r\n                   /**************SIEVE****************/\r\n\r\nbool prime[MAX+1];\r\nvector<ll> v;\r\nvoid sieve(){ \r\n    // Create a boolean array \"prime[0..n]\" and initialize \r\n    // all entries it as true. A value in prime[i] will \r\n    // finally be false if i is Not a prime, else true.\r\n   \r\n    memset(prime, true, sizeof(prime)); \r\n  \r\n    for (long p=2; p*p<=MAX; p++) \r\n    { \r\n        // If prime[p] is not changed, then it is a prime \r\n        if (prime[p] == true) \r\n        { \r\n            // Update all multiples of p greater than or  \r\n            // equal to the square of it \r\n            // numbers which are multiple of p and are \r\n            // less than p^2 are already been marked.  \r\n            for (long i=p*p; i<=MAX; i += p) \r\n                prime[i] = false; \r\n        } \r\n    } \r\n    for(long p=2;p<=MAX;p++)\r\n    {\r\n      if(prime[p])v.pb(p);\r\n    }\r\n \r\n  \r\n   \r\n    \r\n   \r\n}\r\n \r\n                                        /**************gcd****************/\r\n\r\nll gcd(ll a,ll b) \r\n{ if(a>b)swap(a,b);\r\n    if (a == 0) \r\n        return b; \r\n return gcd(b%a, a); \r\n}\r\n \r\n \r\n \r\n                                         /**************POWER****************/\r\n ll binpow(ll a, ll b) {\r\n    if (b == 0)\r\n        return 1;\r\n    ll res = binpow(a, b / 2)%MOD;\r\n    if (b % 2)\r\n        return (((ll)res * (ll)res %MOD)* (ll)a)%MOD;\r\n    else\r\n        return ((ll)res * (ll)res)%MOD;\r\n}\r\n \r\n   \r\n\r\n \r\n \r\n \r\n \r\n                                     /**************MAIn****************/\r\n\r\n\r\nvoid solve()\r\n{ vector<ll> x,y;\r\n  map<pair<int,int>,int> m;\r\n  for(int i=0;i<4;i++)\r\n  {\r\n    ll x1,y1,x2,y2;\r\n    cin>>x1>>y1>>x2>>y2;\r\n    m[mp(x1,y1)]++;\r\n    m[mp(x2,y2)]++;\r\n    if(x1!=x2&&y1!=y2)\r\n    {\r\n      cout<<\"NO\";\r\n      return;\r\n    }\r\n    if(x1==x2)\r\n    {\r\n      y.pb(abs(y1-y2));\r\n    }\r\n    else\r\n    {\r\n      x.pb(abs(x1-x2));\r\n    }\r\n\r\n  }\r\n  auto it=m.begin();\r\n  traverse(m,it)\r\n  {\r\n    if(it->se!=2)\r\n    {\r\n      cout<<\"NO\\n\";\r\n      return;\r\n    }\r\n  }\r\n  if(x[0]==x[1]&&y[0]==y[1])\r\n  {\r\n    cout<<\"YES\";\r\n  }\r\n  else cout<<\"NO\";\r\n}\r\nint main()\r\n{   tezi\r\n\r\n  #ifndef ONLINE_JUDGE\r\n   freopen(\"input.txt\",\"r\",stdin);\r\n   freopen(\"output.txt\",\"w\",stdout);\r\n   #endif\r\nint T=1;\r\n //cin>>T;\r\n\r\n  \r\n while(T--)\r\n {\r\n  \r\n  solve();\r\n}\r\n    cerr << \"Time elapsed: \" << 1.0 * clock() / CLOCKS_PER_SEC << \" s.\\n\";\r\n\r\n\r\n\r\n  }\r\n \r\n \r\n \r\n \r\n \r\n  \r\n \r\n",
    "defect_evaluation_v4": {
        "good solution": 70,
        "wrong solution": 30,
        "compilation error": 0,
        "runtime error": 0
    },
    "category_evaluation": {
        "mathematics": 10,
        "dynamic programming": 0,
        "bit manipulation": 0,
        "greedy": 0,
        "brute force": 0,
        "graphs": 0,
        "sortings": 0,
        "search": 0,
        "trees": 0,
        "strings": 10,
        "number theory": 0,
        "combinatorics": 0,
        "two pointers": 0,
        "geometry": 0,
        "shortest paths": 0,
        "divide and conquer": 0,
        "probabilities": 0,
        "data structures": 0,
        "game theory": 0,
        "2d, 3d": 0,
        "recursive": 0,
        "well-commented": 0,
        "self-documenting": 0,
        "complex": 0,
        "readable": 0,
        "well-named": 0,
        "efficient": 0,
        "reusable": 0,
        "documented": 0,
        "good error-handling": 0,
        "good solution": 10,
        "compilation error": 0,
        "runtime error": 0
    }
}