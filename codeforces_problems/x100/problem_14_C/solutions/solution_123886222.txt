{
    "id": 123886222,
    "contestId": 14,
    "creationTimeSeconds": 1627350135,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "Doc_Di"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 110,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 3788800,
    "source": "#pragma GCC optimize(1)\r\n#pragma GCC optimize(2)\r\n#pragma GCC optimize(3)\r\n#include<cstdio>\r\n#include<algorithm>\r\n#include<cstring>\r\n#include<iostream>\r\n#include<cmath>\r\n#include<map>\r\n#include<vector>\r\n#include<queue>\r\n#include<stack>\r\n#include<string>\r\n#include<ctime>\r\n#include<list>\r\n#define ll long long\r\nusing namespace std;\r\nconst int mo=998244353;\r\n\r\nmap< pair<int,int>,int> Map;\r\nint tot_x,tot_y,tot;\r\nint main(){\r\n    #ifdef LOCAL\r\n    freopen(\"in.in\",\"r\",stdin);\r\n    freopen(\"out.out\",\"w\",stdout);\r\n    #endif\r\n    for(int i=1;i<=4;i++){\r\n            int x=0,y=0,x_=0,y_=0;\r\n            scanf(\"%d %d %d %d\",&x,&y,&x_,&y_);\r\n            Map[make_pair(x,y)]++;\r\n            Map[make_pair(x_,y_)]++;\r\n            if (x!=x_ && y!=y_) return 0&puts(\"NO\");\r\n            if (x==x_) tot_x++;\r\n            if (y==y_) tot_y++;\r\n            if (Map[make_pair(x,y)]==2) tot++;\r\n            if (Map[make_pair(x_,y_)]==2) tot++;\r\n    }\r\n    if (tot_x!=2 || tot_y!=2) return 0&puts(\"NO\");\r\n    puts(tot==4?\"YES\":\"NO\");\r\n}\r\n",
    "defect_evaluation_v4": {
        "good solution": 55,
        "wrong solution": 40,
        "compilation error": 5,
        "runtime error": 0
    },
    "category_evaluation": {
        "mathematics": 20,
        "dynamic programming": 0,
        "bit manipulation": 0,
        "greedy": 0,
        "brute force": 0,
        "graphs": 0,
        "sortings": 0,
        "search": 0,
        "trees": 0,
        "strings": 0,
        "number theory": 0,
        "combinatorics": 0,
        "two pointers": 0,
        "geometry": 0,
        "shortest paths": 0,
        "divide and conquer": 0,
        "probabilities": 0,
        "data structures": 0,
        "game theory": 0,
        "2d, 3d": 0,
        "recursive": 0,
        "well-commented": 0,
        "self-documenting": 0,
        "complex": 20,
        "readable": 0,
        "well-named": 0,
        "efficient": 20,
        "reusable": 0,
        "documented": 0,
        "good error-handling": 0,
        "good solution": 0,
        "compilation error": 0,
        "runtime error": 0
    }
}