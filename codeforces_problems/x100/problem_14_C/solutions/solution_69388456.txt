{
    "id": 69388456,
    "contestId": 14,
    "creationTimeSeconds": 1579742287,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "cor001"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 110,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef pair<int,int> pii;\r\n\r\nstruct line{\r\n    pii l, r;\r\n};\r\nline l[10];\r\nvector<line> vx, vy;\r\n\r\nint main(){\r\n    for(int i = 1; i <= 4; i ++){\r\n        scanf(\"%d%d%d%d\", &l[i].l.first, &l[i].l.second, &l[i].r.first, &l[i].r.second);\r\n        if(l[i].l.first == l[i].r.first) vx.push_back(l[i]);\r\n        else if(l[i].l.second == l[i].r.second) vy.push_back(l[i]);\r\n    }\r\n    if(vx.size() == 2 && vy.size() == 2){\r\n        if(vx[0].l.second > vx[0].r.second) swap(vx[0].l, vx[0].r);\r\n        if(vx[1].l.second > vx[1].r.second) swap(vx[1].l, vx[1].r);\r\n        if(vy[0].l.first > vy[0].r.first) swap(vy[0].l, vy[0].r);\r\n        if(vy[1].l.first > vy[1].r.first) swap(vy[1].l, vy[1].r);\r\n        if(vx[0].l.first > vx[1].l.first) swap(vx[0], vx[1]);\r\n        if(vy[0].l.second > vy[1].l.second) swap(vy[0], vy[1]);\r\n        if(vx[0].l == vy[0].l && vx[0].r == vy[1].l && vy[1].r == vx[1].r && vx[1].l == vy[0].r){\r\n            if(1ll * (vx[1].l.first - vx[0].l.first) * (vy[1].l.second - vy[0].l.second) > 0) puts(\"YES\");\r\n            else puts(\"NO\");\r\n        }\r\n        else puts(\"NO\");\r\n    }\r\n    else puts(\"NO\");\r\n    return 0;\r\n}\r\n\r\n                                                                                          "
}