{
    "id": 38326845,
    "contestId": 14,
    "creationTimeSeconds": 1526487648,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "3AQ"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 3379200,
    "source": "#include<bits/stdc++.h>\r\n#define ll long long\r\n#define pb push_back\r\n#define omar ios::sync_with_stdio(0),ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);\r\nusing namespace std;\r\nstruct point\r\n{\r\n    ll x,y,xx,yy;\r\n    int slope()\r\n    {\r\n        if (!abs(x-xx)) return 2;\r\n        else if (!abs(y-yy)&&abs(x-xx)) return 1;\r\n        else return -1;\r\n    }\r\n    ll calc()\r\n    {\r\n        return abs(x-xx)+abs(y-yy);\r\n    }\r\n};\r\nint main()\r\n{\r\n    omar;\r\n    point arr[5];\r\n    bool is=false;\r\n    for (int i=0; i<4; ++i)\r\n    {\r\n        ll x,y,xx,yy;\r\n        cin>>x>>y>>xx>>yy;\r\n        arr[i].x=min(x,xx);\r\n        arr[i].xx=max(x,xx);\r\n        arr[i].y=min(y,yy);\r\n        arr[i].yy=max(y,yy);\r\n        if (arr[i].slope()==-1) is=true;\r\n    }\r\n    if (is) return cout<<\"NO\\n\",0;\r\n    vector<int>vx,vy;\r\n    for (int i=0; i<4; ++i)\r\n    {\r\n        if (arr[i].slope()==1)\r\n        {\r\n            vx.pb(i);\r\n        }\r\n        else\r\n        {\r\n            vy.pb(i);\r\n        }\r\n    }\r\n    if (vx.size()!=2||vy.size()!=2) return cout<<\"NO\\n\",0;\r\n    if (arr[vx[0]].calc()!=arr[vx[1]].calc()||arr[vy[0]].calc()!=arr[vy[1]].calc()) return cout<<\"NO\\n\",0;\r\n    if (arr[vx[0]].x==arr[vx[1]].x&&arr[vx[0]].xx==arr[vx[1]].xx&&\r\n            arr[vy[0]].y==arr[vy[1]].y&&arr[vy[0]].yy==arr[vy[1]].yy&&\r\n            abs(arr[vx[0]].y-arr[vx[1]].y)==arr[vy[0]].calc())\r\n    {\r\n        return cout<<\"YES\\n\",0;\r\n    }\r\n    cout<<\"NO\\n\";\r\n    return 0;\r\n}\r\n"
}