{
    "id": 126671898,
    "contestId": 14,
    "creationTimeSeconds": 1629617008,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 14,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "geometry",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 14,
        "members": [
            {
                "handle": "luogu_bot2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1274283000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 110,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 3788800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nstruct node\r\n{\r\n    int x,y;\r\n    bool used;\r\n}a[10];\r\nint tot,cntx,cnty,sum;\r\n\r\nint main()\r\n{\r\n    bool flag=1;\r\n    for(int i=0;i<4;++i){\r\n        int x1,y1,x2,y2;\r\n        scanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);\r\n        a[++tot]=(node){x1,y1};\r\n        a[++tot]=(node){x2,y2};\r\n        if(x1!=x2&&y1!=y2){\r\n            flag=0;\r\n        }\r\n        else {\r\n            if(x1==x2) ++cntx;\r\n            if(y1==y2) ++cnty;\r\n        }\r\n    }\r\n    if(cntx!=2||cnty!=2) flag=0;\r\n    for(int i=1;i<=tot;++i){\r\n        if(!a[i].used){\r\n            int cnt=0;\r\n            for(int j=i+1;j<=tot;++j)\r\n                if(a[i].x==a[j].x&&a[i].y==a[j].y){\r\n                    ++cnt;\r\n                    a[j].used=1;\r\n            }\r\n            if(cnt!=1) flag=0;\r\n            ++sum;\r\n        }\r\n    }\r\n    if(sum==4&&flag) printf(\"YES\");\r\n    else printf(\"NO\");\r\n    return 0;\r\n}\r\n",
    "defect_evaluation_v4": {
        "good solution": 20,
        "wrong solution": 75,
        "compilation error": 5,
        "runtime error": 0
    },
    "category_evaluation": {
        "mathematics": 10,
        "dynamic programming": 0,
        "bit manipulation": 0,
        "greedy": 0,
        "brute force": 80,
        "graphs": 0,
        "sortings": 0,
        "search": 0,
        "trees": 0,
        "strings": 0,
        "number theory": 0,
        "combinatorics": 0,
        "two pointers": 0,
        "geometry": 0,
        "shortest paths": 0,
        "divide and conquer": 0,
        "probabilities": 0,
        "data structures": 20,
        "game theory": 0,
        "2d, 3d": 0,
        "recursive": 0,
        "well-commented": 0,
        "self-documenting": 0,
        "complex": 10,
        "readable": 10,
        "well-named": 0,
        "efficient": 10,
        "reusable": 10,
        "documented": 0,
        "good error-handling": 0,
        "good solution": 50,
        "compilation error": 0,
        "runtime error": 0
    }
}