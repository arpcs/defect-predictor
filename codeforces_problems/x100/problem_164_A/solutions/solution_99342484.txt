{
    "id": 99342484,
    "contestId": 164,
    "creationTimeSeconds": 1606151922,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "newbie_for_eternity"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "//Fox And Names\r\n#include<bits/stdc++.h>\r\n\r\n#define int long long \r\n#define sq(a) (a*a)\r\n#define mp make_pair\r\n#define tp tuple\r\n#define mt make_tuple\r\n#define pb push_back\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define ff first\r\n#define ss second\r\n#define mod (int)(1e9+7)\r\n#define endl \"\\n\"\r\n#define N (int)(1000001)\r\n#define inf (int)(1e18)\r\n#define fastIO ios::sync_with_stdio(0); cin.tie(0); cout.tie(0)\r\n\r\nusing namespace std;\r\n\r\nvector<int> g[N],a(N);\r\nvector<bool> v1(N),v2(N);\r\n\r\nvoid dfs_1(int a)\r\n{\r\n    for(auto x:g[a])\r\n    {\r\n        if(v1[x])continue;\r\n        v1[x]=1; dfs_1(x);\r\n    }\r\n}\r\n\r\nvoid dfs_2(int a)\r\n{\r\n    for(auto x:g[a])\r\n    {\r\n        if(v2[x])\r\n            continue;\r\n        v2[x]=1; \r\n        if(a[x]!=1)\r\n            dfs_2(x);\r\n    }\r\n}\r\n\r\nint32_t main()\r\n{\r\n    int n,m;cin>>n>>m;\r\n    for(int i=1;i<=n;i++)\r\n        cin>>a[i];\r\n    for(int a,b,i=0;i<m;i++)\r\n    {\r\n        cin >>a>>b;\r\n        g[a].pb(b);\r\n        g[b].pb(a);\r\n    }\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        if(a[i]==1 and !v1[i])\r\n            {v1[i]=1;dfs_1(i);}\r\n        if(a[i]==2 and !v2[i])\r\n            {v2[i]=1;dfs_2(i);}\r\n    }\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        if(v1[i] and v2[i])\r\n            cout<<1<<endl;\r\n        else cout<<0<<endl;\r\n    }\r\n    return 0;\r\n}"
}