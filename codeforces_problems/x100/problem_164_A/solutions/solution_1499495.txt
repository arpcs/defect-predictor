{
    "id": 1499495,
    "contestId": 164,
    "creationTimeSeconds": 1333899030,
    "relativeTimeSeconds": 1530,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "magicdlf"
            }
        ],
        "participantType": "OUT_OF_COMPETITION",
        "ghost": false,
        "room": 106,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 220,
    "memoryConsumedBytes": 4915200,
    "source": "\r\n#include \"iostream\"\r\n#include \"string\"\r\n#include \"string.h\"\r\n#include \"stdio.h\"\r\n#include \"algorithm\"\r\n#include \"vector\"\r\n#include \"math.h\"\r\n\r\nusing namespace std;\r\n\r\nint f[100005]={};\r\nint used[100005]={};\r\nint ans[100005]={};\r\nvector<int> edges[100005];\r\n\r\nint dfs(int cur)\r\n{\r\n    if(used[cur])\r\n    {\r\n        return ans[cur];\r\n    }\r\n    used[cur]=1;\r\n    int ret=0;\r\n    if(f[cur]==2) \r\n    {\r\n        ans[cur]=1;\r\n        ret=1;\r\n    }\r\n    for(int i=0;i<edges[cur].size();i++)\r\n    {\r\n        int j=edges[cur][i];\r\n        if(f[j]!=1)\r\n        {\r\n            if(dfs(j))\r\n            {\r\n                ans[cur]=1;\r\n                ret=1;\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n\r\nint main()\r\n{\r\n    int n,m;\r\n    cin>>n>>m;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        cin>>f[i];\r\n    }\r\n    for(int i=0;i<m;i++)\r\n    {\r\n        int a,b;\r\n        cin>>a>>b;\r\n        a--;b--;\r\n        edges[a].push_back(b);\r\n    }\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        if(f[i]==1 && used[i]==0)\r\n        {\r\n            dfs(i);\r\n        }\r\n    }\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        cout<<ans[i]<<endl;\r\n    }\r\n    return 0;\r\n}\r\n"
}