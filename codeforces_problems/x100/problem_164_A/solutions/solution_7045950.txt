{
    "id": 7045950,
    "contestId": 164,
    "creationTimeSeconds": 1404807968,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "Logsha"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 9625600,
    "source": "#include<cstdio>\r\n#include<cstring>\r\n#include<algorithm>\r\n#include<iostream>\r\n#include<cmath>\r\n#include<set>\r\n#include<vector>\r\n#include<map>\r\n#include<queue>\r\n#include<deque>\r\n#define mkp make_pair\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef pair<int,int> pi;\r\n\r\nconst int maxn = 100005;\r\nconst int inf = 1<<29;\r\nconst int mod = 1000000007;\r\nconst double eps = 1e-8;\r\n\r\nint data[maxn],n,m;bool vx[maxn],vy[maxn];\r\nvector<int> v[maxn],r[maxn];\r\n\r\nvoid dfs(int x)\r\n{\r\n    vx[x] = 1;\r\n    for(int i=0;i<v[x].size();i++)\r\n    {\r\n        int toit = v[x][i];\r\n        if(!vx[toit])\r\n            dfs(toit);\r\n    }\r\n}\r\n\r\nvoid go(int x)\r\n{\r\n    vy[x] = 1;\r\n    if(data[x]==1)\r\n        return ;\r\n    for(int i=0;i<r[x].size();i++)\r\n    {\r\n        int toit = r[x][i];\r\n        if(!vy[toit])\r\n            go(toit);\r\n    }\r\n}\r\nint main()\r\n{\r\n    int a,b;\r\n    scanf(\"%d%d\",&n,&m);\r\n    for(int i=1;i<=n;i++)\r\n        scanf(\"%d\",data+i);\r\n    for(int i=0;i<m;i++)\r\n    {\r\n        scanf(\"%d%d\",&a,&b);\r\n        v[a].push_back(b);\r\n        r[b].push_back(a);\r\n    }\r\n    for(int i=1;i<=n;i++)\r\n        if(vx[i]==0&&data[i]==1)\r\n            dfs(i);\r\n    for(int i=1;i<=n;i++)\r\n        if(vy[i]==0&&data[i]==2)\r\n            go(i);\r\n    for(int i=1;i<=n;i++)\r\n        printf(\"%d\\n\",vx[i]&&vy[i]);\r\n}\r\n"
}