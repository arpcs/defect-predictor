{
    "id": 195925718,
    "contestId": 164,
    "creationTimeSeconds": 1677915315,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "Mark2012"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nvoid dfs(int v, vector<vector<int>> g, vector<int> &used) {\r\n    used[v] = 1;\r\n    for (auto to : g[v]) {\r\n        if (!used[to]) {\r\n            dfs(to, g, used);\r\n        }\r\n    }\r\n}\r\n\r\nvoid dfs2(int v, vector<vector<int>> g, vector<int> &used, vector<int> pr) {\r\n    used[v] = 2;\r\n    for (auto to : g[v]) {\r\n        if (!used[to] && upper_bound(pr.begin(), pr.end(), to) - lower_bound(pr.begin(), pr.end(), to) == 0) {\r\n            dfs2(to, g, used);\r\n        }\r\n    }\r\n}\r\nint main() {\r\n    int n, m;\r\n    cin >> n >> m;\r\n    vector<int> f;\r\n    vector<int> pr;\r\n    vector<int> isp;\r\n    for (int i = 0; i < n; ++i) {\r\n        int tmp;\r\n        cin >> tmp;\r\n        f.push_back(tmp);\r\n        if (tmp == 1)\r\n            pr.push_back(i);\r\n        if (tmp == 2)\r\n            isp.push_back(i);\r\n    }\r\n    vector<vector<int>> g(n);\r\n    vector<vector<int>> g1(n);\r\n    for (int i = 0; i < m; ++i) {\r\n        int u, v;\r\n        cin >> u >> v;\r\n        u--;\r\n        v--;\r\n        g[u].push_back(v);\r\n        g1[v].push_back(u);\r\n    }\r\n    vector<int> used(n, 0);\r\n    for (int i = 0; i < pr.size(); ++i) {\r\n        dfs(pr[i], g, used);\r\n    }\r\n    for (int i = 0; i < isp.size(); ++i) {\r\n        dfs2(isp[i], g1, used, pr);\r\n    }\r\n    for (int i = 0; i < n; ++i) {\r\n        if (used[i] == 2) {\r\n            cout << 1 << '\\n';\r\n        } else {\r\n            cout << 0 << '\\n';\r\n        }\r\n    }\r\n}"
}