{
    "id": 1503738,
    "contestId": 164,
    "creationTimeSeconds": 1333906972,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "Timur_Keks"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "Delphi",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 60,
    "memoryConsumedBytes": 28057600,
    "source": "program Project2;\r\n\r\n{$APPTYPE CONSOLE}\r\n\r\nuses\r\n  SysUtils;\r\n\r\nvar\r\n  was1, was2:array[1..1000000] of boolean;\r\n  first, data, next, ss, ff, a:array[1..1000000] of integer;\r\n  i, n, m:integer;\r\n\r\nprocedure dfs1(v:integer);\r\nvar\r\n  t:integer;\r\nbegin\r\n  was1[v] := true;\r\n  t := first[v];\r\n  while t > 0 do begin\r\n    if (a[data[t]] <> 1) and (not was1[data[t]]) then\r\n      dfs1(data[t]);\r\n    t := next[t];\r\n  end;\r\nend;\r\n\r\nprocedure dfs2(v:integer);\r\nvar\r\n  t:integer;\r\nbegin\r\n  was2[v] := true;\r\n  if a[v] = 1 then exit;\r\n  t := first[v];\r\n  while t > 0 do begin\r\n    if (not was2[data[t]]) then\r\n      dfs2(data[t]);\r\n    t := next[t];\r\n  end;\r\nend;\r\n\r\n\r\nbegin\r\n  //reset(input, 'input.txt');\r\n  //rewrite(output, 'output.txt');\r\n  read(n, m);\r\n  for i := 1 to n do begin\r\n    read(a[i]);\r\n  end;\r\n  for i := 1 to m do begin\r\n    read(ss[i], ff[i]);\r\n    next[i] := first[ss[i]];\r\n    data[i] := ff[i];\r\n    first[ss[i]] := i;\r\n  end;\r\n  fillchar(was1, sizeof(was1), false);\r\n  fillchar(was2, sizeof(was2), false);\r\n  for i := 1 to n do begin\r\n    if (a[i] = 1) then\r\n      dfs1(i);\r\n  end;\r\n  fillchar(first, sizeof(first), 0);\r\n  for i := 1 to m do begin\r\n    next[i] := first[ff[i]];\r\n    data[i] := ss[i];\r\n    first[ff[i]] := i;\r\n  end;\r\n  for i := 1 to n do begin\r\n    if (a[i] = 2) then\r\n      dfs2(i);\r\n  end;\r\n  for i := 1 to n do begin\r\n    if was1[i] and was2[i] then\r\n      writeln(1) else\r\n      writeln(0);\r\n  end;\r\n\r\nend.\r\n"
}