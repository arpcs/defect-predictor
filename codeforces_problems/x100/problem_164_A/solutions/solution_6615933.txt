{
    "id": 6615933,
    "contestId": 164,
    "creationTimeSeconds": 1400079172,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 186,
    "memoryConsumedBytes": 7270400,
    "source": "#include<iostream>\n#include<cstring>\n#include<cstdlib>\n#include<cstdio>\n#include<vector>\n#include<queue>\nusing namespace std;\n#define MAX 100010\nint cnt[MAX],n,m;\nint vis[MAX];\nvector<int >G[MAX];\nvector<int >C[MAX];\nqueue<int >Q;\nint main()\n{\n    while (scanf(\"%d%d\",&n,&m)!=EOF)\n    {\n        int i,j,u,v;\n        for (i=1;i<=n;i++)\n        {\n            scanf(\"%d\",&cnt[i]);\n        }\n        for (i=0;i<=n+1;i++)\n        {\n            G[i].clear();\n            C[i].clear();\n            vis[i]=-1;\n        }\n        for (i=0;i<m;i++)\n        {\n            scanf(\"%d%d\",&u,&v);\n            if (cnt[v]==1)\n                continue;\n            if (cnt[u]==1)\n            {\n                G[0].push_back(u);\n            }\n            if (cnt[u]==2)\n            {\n                C[n+1].push_back(u);\n            }\n            if (cnt[v]==2)\n            {\n                C[n+1].push_back(v);\n            }\n            G[u].push_back(v);\n            C[v].push_back(u);\n        }\n        Q.push(0);\n        vis[0]=0;\n        while (!Q.empty())\n        {\n            u=Q.front();\n            Q.pop();\n            for (i=0;i<G[u].size();i++)\n            {\n                v=G[u][i];\n                if (vis[v]==-1)\n                {\n                    vis[v]++;\n                    Q.push(v);\n                }\n            }\n        }\n        Q.push(n+1);\n        while (!Q.empty())\n        {\n            u=Q.front();\n            Q.pop();\n            for (i=0;i<C[u].size();i++)\n            {\n                v=C[u][i];\n                if (vis[v]==0)\n                {\n                    vis[v]++;\n                    Q.push(v);\n                }\n            }\n        }\n        for (i=1;i<=n;i++)\n        {\n            printf(\"%d\\n\",vis[i]>0?1:0);\n        }\n    }\n    return 0;\n}\n\n \t\t\t\t\t\t \t  \t\t\t  \t\t      \t \t"
}