{
    "id": 6826833,
    "contestId": 164,
    "creationTimeSeconds": 1402060132,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "zjsyhjh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 528,
    "memoryConsumedBytes": 12185600,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <algorithm>\r\n#include <vector>\r\n#define REP(i, a, b) for (int i = (a); i < (b); ++i)\r\n#define FOR(i, a, b) for (int i = (a); i <= (b); ++i)\r\nusing namespace std;\r\n\r\nconst int MAX_N = (100000 + 100);\r\nint N, M, val[MAX_N], vis1[MAX_N], vis2[MAX_N];\r\nint path[MAX_N];\r\nvector<int > g1[MAX_N], g2[MAX_N];\r\n\r\nvoid dfs(int u, int fa)\r\n{\r\n\tvis1[u] = 1;\r\n\tREP(i, 0, (int)g1[u].size()) {\r\n\t\tint v = g1[u][i];\r\n\t\tif (!vis1[v] && v != fa && val[v] != 1) dfs(v, u);\r\n\t}\r\n}\r\n\r\nvoid rdfs(int u, int fa)\r\n{\r\n\tvis2[u] = 1;\r\n\tif (val[u] == 1) return;\r\n\tREP(i, 0, (int)g2[u].size()) {\r\n\t\tint v = g2[u][i];\r\n\t\tif (!vis2[v] && v != fa) rdfs(v, u);\r\n\t}\r\n}\r\n\r\n\r\n\r\nint main()\r\n{\r\n\tcin >> N >> M;\r\n\tFOR(i, 1, N) cin >> val[i];\r\n\tFOR(i, 1, M) {\r\n\t\tint u, v; cin >> u >> v;\r\n\t\tg1[u].push_back(v);\r\n\t\tg2[v].push_back(u);\r\n\t}\r\n\tFOR(i, 1, N)  {\r\n\t\tif (val[i] == 1) dfs(i, -1);\r\n\t\telse if (val[i] == 2) rdfs(i, -1);\r\n\t}\r\n\tFOR(i, 1, N) printf(\"%d\\n\", (vis1[i] & vis2[i]));\r\n\treturn 0;\r\n}"
}