{
    "id": 12667154,
    "contestId": 164,
    "creationTimeSeconds": 1440296563,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 409600,
    "source": "//\n//  main.cpp\n//  proii\n//\n//  Created by \u83ab\u4e0e on 15/8/22.\n//  Copyright (c) 2015\u5e74 \u83ab\u4e0e. All rights reserved.\n//\n\n#include <iostream>\n#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#include <vector>\n#include <cstdio>\nusing namespace std;\nlong long a[10000]={0};\nlong long b[10000]={0};\nlong long c[10000]={0};\nlong long i,j,k,l,m,n,ans,xx=0;\nchar s[100000]={0};\nchar cs[100000]={0};\nvoid dfs(long long x);//table\nlong long dfss(long long x);//tr\nvoid dfsss(long long x);//td\n\n\nlong long  dfss(long long x) //tr\n{\n\tlong long l=0;\n    while (   1  )\n    {\n        while (s[k]!='<')k++;\n        if (s[k+1]=='t' && s[k+2]=='d')\n        {\n            dfsss(1);\n\t\t\tl++;\n        }\n        else if (s[k+1]=='/')\n        {\n            k++;\n            return l;\n            break;\n        }\n        k++;\n    }\n    return l;\n}\n\nvoid dfsss(long long x) //td\n{\n    while ( 1 )\n    {\n        while (s[k]!='<')k++;\n        if (s[k+1]=='t' && s[k+2]=='a')\n        {\n            dfs(1);\n        }\n        else if (s[k+1]=='/')\n        {\n            k++;\n\t\t\treturn;\n            break;\n        }\n        k++;\n    }\n    return ;\n}\n\n\n\nvoid dfs(long long x) //table\n{\n\tlong long l=0;\n    while (   1  )\n    {\n        while (s[k]!='<') k++;\n        if (s[k+1]=='t' && s[k+2]=='r')\n        {\n            l+=dfss(1);\n        }\n        else if (s[k+1]=='/')\n        {\n            break;\n        }\n        k++;\n    }\n    k=k+7;\n    a[ans]=l;\n    ans++;\n    return;\n}\n\nint main(int argc, const char * argv[]) {\n    //freopen(\"input.txt\",\"r\",stdin);\n    while ( gets(cs) )\n    {\n        strcat(s,cs);\n    }\n\t//puts(s);\n    k=0;\n    ans=0;\n    l=strlen(s)-1;\n    while (k<l)\n    {\n        dfs(1);\n        if (!(k==l))\n        {\n            while (!((s[k-6]=='<' && s[k-5]=='t' &&s[k-4]=='a')||(k==l))) k++;\n        }\n    }\n\tsort(a,a+ans);\n    for (int i=0;i<ans;i++) printf(\"%I64d \",a[i]);\n    return 0;\n}\n\t \t\t \t\t  \t \t\t\t\t \t \t\t  \t\t \t \t\t"
}