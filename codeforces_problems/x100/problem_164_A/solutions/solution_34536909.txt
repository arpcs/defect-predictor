{
    "id": 34536909,
    "contestId": 164,
    "creationTimeSeconds": 1516860524,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "bthero"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 342,
    "memoryConsumedBytes": 11468800,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define pb push_back\r\n\r\nusing namespace std;\r\n\r\nvector <int> adj2[100005];\r\n\r\nvector <int> adj[100005];\r\n\r\nint state[100005];\r\n\r\nbool vis2[100005];\r\n\r\nbool vis[100005];\r\n\r\nint n, m;\r\n\r\nvoid dfs (int v){\r\n   vis[v] = 1;\r\n\r\n   for (int to : adj[v]){\r\n      if (vis[to]){\r\n         continue;\r\n      }\r\n\r\n      dfs (to);\r\n   }\r\n}\r\n\r\nvoid dfs2 (int v){\r\n   vis2[v] = 1;\r\n\r\n   if (state[v] == 1){\r\n      return;\r\n   }\r\n\r\n   for (int to : adj2[v]){\r\n      if (vis2[to]){\r\n         continue;\r\n      }\r\n\r\n      dfs2 (to);\r\n   }\r\n}\r\n\r\nvoid solve (){\r\n   scanf (\"%d %d\", &n, &m);\r\n\r\n   for (int i = 1; i <= n; ++ i){\r\n      scanf (\"%d\", &state[i]);\r\n   }\r\n\r\n   for (int i = 1, v, to; i <= m; ++ i){\r\n      scanf (\"%d %d\", &v, &to);\r\n\r\n      adj[v].pb (to);\r\n      adj2[to].pb (v);\r\n   }\r\n\r\n   for (int i = 1; i <= n; ++ i){\r\n      if (vis[i]){\r\n         continue;\r\n      }\r\n\r\n      if (state[i] == 1){\r\n         dfs (i);\r\n      }\r\n   }\r\n\r\n   for (int i = 1; i <= n; ++ i){\r\n      if (vis2[i]){\r\n         continue;\r\n      }\r\n\r\n      if (state[i] == 2){\r\n         dfs2 (i);\r\n      }\r\n   }\r\n\r\n   for (int i = 1; i <= n; ++ i){\r\n      printf (\"%d\\n\", vis[i] & vis2[i]);\r\n   }\r\n}\r\n\r\nint main (){\r\n   int tt = 1;\r\n\r\n   while (tt --){\r\n      solve ();\r\n   }\r\n\r\n   return 0;\r\n}"
}