{
    "id": 1500900,
    "contestId": 164,
    "creationTimeSeconds": 1333900586,
    "relativeTimeSeconds": 3086,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "Martynas"
            }
        ],
        "participantType": "OUT_OF_COMPETITION",
        "ghost": false,
        "room": 106,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 230,
    "memoryConsumedBytes": 13721600,
    "source": "#include <cstdio>\n#include <vector>\n#define MAXN 100000\n#define MAXM 100000\nusing namespace std;\nchar state[MAXN + 1];\nbool r1[MAXN + 1];\nbool r2[MAXN + 1];\nvector<int> e12[MAXN + 1];\nvector<int> e21[MAXN + 1];\nvoid dfs(vector<int>* e, bool* r, int v, bool z)\n{\n    if (r[v]) return;\n    r[v] = true;\n    for (int i = 0; i < e[v].size(); ++i)\n    {\n        if (state[e[v][i]] == 1 && z)\n        {\n            r[e[v][i]] = true;\n        }\n        else\n        {\n            dfs(e, r, e[v][i], z);\n        }\n    }\n}\nint main()\n{\n    int n, m;\n    scanf(\"%d%d\", &n, &m);\n    for (int i = 0; i < n; ++i)\n    {\n        char s;\n        scanf(\"%hhd\", &s);\n        state[i] = s;\n    }\n    for (int i = 0; i < m; ++i)\n    {\n        int a, b;\n        scanf(\"%d%d\", &a, &b);\n        --a;\n        --b;\n        e12[a].push_back(b);\n        e21[b].push_back(a);\n    }\n    for (int i = 0; i < n; ++i)\n    {\n        if (state[i] == 1)\n        {\n            dfs(e12, r1, i, false);\n        }\n        else if (state[i] == 2)\n        {\n            dfs(e21, r2, i, true);\n        }\n    }\n    for (int i = 0; i < n; ++i)\n    {\n        printf(\"%d\\n\", r1[i] && r2[i]);\n    }\n    return 0;\n}\n"
}