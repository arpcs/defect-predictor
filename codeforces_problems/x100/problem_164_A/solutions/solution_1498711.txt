{
    "id": 1498711,
    "contestId": 164,
    "creationTimeSeconds": 1333898194,
    "relativeTimeSeconds": 694,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "it4.kp"
            }
        ],
        "participantType": "OUT_OF_COMPETITION",
        "ghost": false,
        "room": 102,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "Mono C#",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 410,
    "memoryConsumedBytes": 30924800,
    "source": "\ufeffusing System;\r\nusing System.Text;\r\nusing System.IO;\r\nusing System.Diagnostics;\r\nusing System.Globalization;\r\nusing System.Collections.Generic;\r\nusing System.Threading;\r\n\r\nnamespace CodeForces\r\n{\r\n\r\n\tclass A\r\n\t{\r\n\r\n\r\n\t\tprivate void Solve()\r\n\t\t{\r\n\t\t\tint n = NextInt(), m = NextInt();\r\n\t\t\tint[] f = new int[n];\r\n\t\t\tfor ( int i = 0; i < n; ++i )\r\n\t\t\t{\r\n\t\t\t\tf[i] = NextInt();\r\n\t\t\t}\r\n\t\t\tList<int>[] mates = new List<int>[n];\r\n\t\t\tList<int>[] mates2 = new List<int>[n];\r\n\t\t\tfor ( int i = 0; i < n; ++i )\r\n\t\t\t{\r\n\t\t\t\tmates[i] = new List<int>();\r\n\t\t\t\tmates2[i] = new List<int>();\r\n\t\t\t}\r\n\t\t\tfor ( int i = 0; i < m; ++i )\r\n\t\t\t{\r\n\t\t\t\tint x = NextInt() - 1, y = NextInt() - 1;\r\n\t\t\t\tif ( f[y] != 1 )\r\n\t\t\t\t{\r\n\t\t\t\t\tmates[x].Add( y );\r\n\t\t\t\t\tmates2[y].Add( x );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tint[] ans = new int[n];\r\n\t\t\tint[] ans2 = new int[n];\r\n\r\n\t\t\tbool[] was = new bool[n];\r\n\t\t\tfor ( int i = 0; i < n; ++i )\r\n\t\t\t\tif ( !was[i] && f[i] == 1 )\r\n\t\t\t\t{\r\n\t\t\t\t\tQueue<int> q = new Queue<int>();\r\n\t\t\t\t\twas[i] = true;\r\n\t\t\t\t\tq.Enqueue( i );\r\n\t\t\t\t\twhile ( q.Count > 0 )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tint u = q.Dequeue();\r\n\t\t\t\t\t\tans[u] = 1;\r\n\t\t\t\t\t\tforeach ( var v in mates[u] )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif ( !was[v] )\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tq.Enqueue( v );\r\n\t\t\t\t\t\t\t\twas[v] = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\twas = new bool[n];\r\n\t\t\tfor ( int i = 0; i < n; ++i )\r\n\t\t\t\tif ( !was[i] && f[i] == 2 )\r\n\t\t\t\t{\r\n\t\t\t\t\tQueue<int> q = new Queue<int>();\r\n\t\t\t\t\twas[i] = true;\r\n\t\t\t\t\tq.Enqueue( i );\r\n\t\t\t\t\twhile ( q.Count > 0 )\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tint u = q.Dequeue();\r\n\t\t\t\t\t\tans2[u] = 1;\r\n\t\t\t\t\t\tforeach ( var v in mates2[u] )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif ( !was[v] )\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tq.Enqueue( v );\r\n\t\t\t\t\t\t\t\twas[v] = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\tfor ( int i = 0; i < n; ++i ) Out.WriteLine( ans[i] * ans2[i] );\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t#region Local wireup\r\n\r\n\t\tpublic int NextInt()\r\n\t\t{\r\n\t\t\treturn _in.NextInt();\r\n\t\t}\r\n\r\n\t\tpublic long NextLong()\r\n\t\t{\r\n\t\t\treturn _in.NextLong();\r\n\t\t}\r\n\r\n\t\tpublic string NextLine()\r\n\t\t{\r\n\t\t\treturn _in.NextLine();\r\n\t\t}\r\n\r\n\t\tpublic double NextDouble()\r\n\t\t{\r\n\t\t\treturn _in.NextDouble();\r\n\t\t}\r\n\r\n\t\treadonly Scanner _in = new Scanner();\r\n\t\tstatic readonly TextWriter Out = Console.Out;\r\n\r\n\t\tvoid Start()\r\n\t\t{\r\n#if !ONLINE_JUDGE\r\n\t\t\tvar timer = new Stopwatch();\r\n\t\t\ttimer.Start();\r\n#endif\r\n\t\t\tvar t = new Thread( Solve, 20000000 );\r\n\t\t\tt.Start();\r\n\t\t\tt.Join();\r\n#if !ONLINE_JUDGE\r\n\t\t\ttimer.Stop();\r\n\t\t\tConsole.WriteLine( string.Format( CultureInfo.InvariantCulture, \"Done in {0} seconds.\\nPress <Enter> to exit.\", timer.ElapsedMilliseconds / 1000.0 ) );\r\n\t\t\tConsole.ReadLine();\r\n#endif\r\n\t\t}\r\n\r\n\t\tstatic void Main()\r\n\t\t{\r\n\t\t\tnew A().Start();\r\n\t\t}\r\n\r\n\t\tclass Scanner : IDisposable\r\n\t\t{\r\n\t\t\t#region Fields\r\n\r\n\t\t\treadonly TextReader _reader;\r\n\t\t\treadonly int _bufferSize;\r\n\t\t\treadonly bool _closeReader;\r\n\t\t\treadonly char[] _buffer;\r\n\t\t\tint _length, _pos;\r\n\r\n\t\t\t#endregion\r\n\r\n\t\t\t#region .ctors\r\n\r\n\t\t\tpublic Scanner( TextReader reader, int bufferSize, bool closeReader )\r\n\t\t\t{\r\n\t\t\t\t_reader = reader;\r\n\t\t\t\t_bufferSize = bufferSize;\r\n\t\t\t\t_closeReader = closeReader;\r\n\t\t\t\t_buffer = new char[_bufferSize];\r\n\t\t\t\tFillBuffer( false );\r\n\t\t\t}\r\n\r\n\t\t\tpublic Scanner( TextReader reader, bool closeReader ) : this( reader, 1 << 16, closeReader ) { }\r\n\r\n\t\t\tpublic Scanner( string fileName ) : this( new StreamReader( fileName, Encoding.Default ), true ) { }\r\n\r\n#if ONLINE_JUDGE\r\n\t\t\tpublic Scanner() : this( Console.In, false ) { }\r\n#else\r\n\t\t\tpublic Scanner() : this( \"input.txt\" ) { }\r\n#endif\r\n\r\n\t\t\t#endregion\r\n\r\n\t\t\t#region IDisposable Members\r\n\r\n\t\t\tpublic void Dispose()\r\n\t\t\t{\r\n\t\t\t\tif ( _closeReader )\r\n\t\t\t\t{\r\n\t\t\t\t\t_reader.Close();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t#endregion\r\n\r\n\t\t\t#region Properties\r\n\r\n\t\t\tpublic bool Eof\r\n\t\t\t{\r\n\t\t\t\tget\r\n\t\t\t\t{\r\n\t\t\t\t\tif ( _pos < _length ) return false;\r\n\t\t\t\t\tFillBuffer( false );\r\n\t\t\t\t\treturn _pos >= _length;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t#endregion\r\n\r\n\t\t\t#region Methods\r\n\r\n\t\t\tprivate char NextChar()\r\n\t\t\t{\r\n\t\t\t\tif ( _pos < _length ) return _buffer[_pos++];\r\n\t\t\t\tFillBuffer( true );\r\n\t\t\t\treturn _buffer[_pos++];\r\n\t\t\t}\r\n\r\n\t\t\tprivate char PeekNextChar()\r\n\t\t\t{\r\n\t\t\t\tif ( _pos < _length ) return _buffer[_pos];\r\n\t\t\t\tFillBuffer( true );\r\n\t\t\t\treturn _buffer[_pos];\r\n\t\t\t}\r\n\r\n\t\t\tprivate void FillBuffer( bool throwOnEof )\r\n\t\t\t{\r\n\t\t\t\t_length = _reader.Read( _buffer, 0, _bufferSize );\r\n\t\t\t\tif ( throwOnEof && Eof )\r\n\t\t\t\t{\r\n\t\t\t\t\tthrow new IOException( \"Can't read beyond the end of file\" );\r\n\t\t\t\t}\r\n\t\t\t\t_pos = 0;\r\n\t\t\t}\r\n\r\n\t\t\tpublic int NextInt()\r\n\t\t\t{\r\n\t\t\t\tvar neg = false;\r\n\t\t\t\tint res = 0;\r\n\t\t\t\tSkipWhitespaces();\r\n\t\t\t\tif ( !Eof && PeekNextChar() == '-' )\r\n\t\t\t\t{\r\n\t\t\t\t\tneg = true;\r\n\t\t\t\t\t_pos++;\r\n\t\t\t\t}\r\n\t\t\t\twhile ( !Eof && !IsWhitespace( PeekNextChar() ) )\r\n\t\t\t\t{\r\n\t\t\t\t\tvar c = NextChar();\r\n\t\t\t\t\tif ( c < '0' || c > '9' ) throw new ArgumentException( \"Illegal character\" );\r\n\t\t\t\t\tres = 10 * res + c - '0';\r\n\t\t\t\t}\r\n\t\t\t\treturn neg ? -res : res;\r\n\t\t\t}\r\n\r\n\t\t\tpublic long NextLong()\r\n\t\t\t{\r\n\t\t\t\tvar neg = false;\r\n\t\t\t\tlong res = 0;\r\n\t\t\t\tSkipWhitespaces();\r\n\t\t\t\tif ( !Eof && PeekNextChar() == '-' )\r\n\t\t\t\t{\r\n\t\t\t\t\tneg = true;\r\n\t\t\t\t\t_pos++;\r\n\t\t\t\t}\r\n\t\t\t\twhile ( !Eof && !IsWhitespace( PeekNextChar() ) )\r\n\t\t\t\t{\r\n\t\t\t\t\tvar c = NextChar();\r\n\t\t\t\t\tif ( c < '0' || c > '9' ) throw new ArgumentException( \"Illegal character\" );\r\n\t\t\t\t\tres = 10 * res + c - '0';\r\n\t\t\t\t}\r\n\t\t\t\treturn neg ? -res : res;\r\n\t\t\t}\r\n\r\n\t\t\tpublic string NextLine()\r\n\t\t\t{\r\n\t\t\t\tSkipUntilNextLine();\r\n\t\t\t\tif ( Eof ) return \"\";\r\n\t\t\t\tvar builder = new StringBuilder();\r\n\t\t\t\twhile ( !Eof && !IsEndOfLine( PeekNextChar() ) )\r\n\t\t\t\t{\r\n\t\t\t\t\tbuilder.Append( NextChar() );\r\n\t\t\t\t}\r\n\t\t\t\treturn builder.ToString();\r\n\t\t\t}\r\n\r\n\t\t\tpublic double NextDouble()\r\n\t\t\t{\r\n\t\t\t\tSkipWhitespaces();\r\n\t\t\t\tvar builder = new StringBuilder();\r\n\t\t\t\twhile ( !Eof && !IsWhitespace( PeekNextChar() ) )\r\n\t\t\t\t{\r\n\t\t\t\t\tbuilder.Append( NextChar() );\r\n\t\t\t\t}\r\n\t\t\t\treturn double.Parse( builder.ToString(), CultureInfo.InvariantCulture );\r\n\t\t\t}\r\n\r\n\t\t\tprivate void SkipWhitespaces()\r\n\t\t\t{\r\n\t\t\t\twhile ( !Eof && IsWhitespace( PeekNextChar() ) )\r\n\t\t\t\t{\r\n\t\t\t\t\t++_pos;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tprivate void SkipUntilNextLine()\r\n\t\t\t{\r\n\t\t\t\twhile ( !Eof && IsEndOfLine( PeekNextChar() ) )\r\n\t\t\t\t{\r\n\t\t\t\t\t++_pos;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tprivate static bool IsWhitespace( char c )\r\n\t\t\t{\r\n\t\t\t\treturn c == ' ' || c == '\\t' || c == '\\n' || c == '\\r';\r\n\t\t\t}\r\n\r\n\t\t\tprivate static bool IsEndOfLine( char c )\r\n\t\t\t{\r\n\t\t\t\treturn c == '\\n' || c == '\\r';\r\n\t\t\t}\r\n\r\n\t\t\t#endregion\r\n\t\t}\r\n\r\n\t\t#endregion\r\n\t}\r\n}"
}