{
    "id": 1499286,
    "contestId": 164,
    "creationTimeSeconds": 1333898798,
    "relativeTimeSeconds": 1298,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "package.zaic"
            }
        ],
        "participantType": "OUT_OF_COMPETITION",
        "ghost": false,
        "room": 101,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++0x",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 10,
    "memoryConsumedBytes": 4403200,
    "source": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cassert>\n#include <cmath>\n#include <ctime>\n\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <iostream>\n#include <vector>\n#include <list>\n#include <set>\n#include <map>\n\nusing namespace std;\n\n#ifdef ILIKEGENTOO\n#define Eo(x) { cerr << #x << \" = \" << (x) << endl; }\n#define E(x) { cerr << #x << \" = \" << (x) << \"   \"; }\n#else\n#define Eo(x)\n#define E(x)\n#endif\n#if defined ILIKEGENTOO || !(defined __GNUC__ ) || (__GNUC__ < 4 || (__GNUC__ == 4 && __GNUC_MINOR__ < 6))\ntemplate<typename T, size_t N> struct array { T val[N]; T& operator[](size_t n) { if(n >= N) assert(false); return val[n]; } T* begin() { return &val[0]; } T* end() { return &val[0]+N; } };\n#else\n#include <array>\n#endif\n#define EO(x) Eo(x)\n#define Sz(x) (int((x).size()))\n#define All(x) (x).begin(),(x).end()\n\ntemplate<typename A, typename B> ostream& operator<<(ostream& os, const pair<A, B>& p) { return os << '(' << p.first << \", \" << p.second << ')'; }\n\ntypedef double real;\ntypedef long long int64;\ntypedef unsigned long long uint64;\ntypedef pair<int, int> pip;\n\nconst int inf = 0x3f3f3f3f;\nconst int64 inf64 = 0x3f3f3f3f3f3f3f3fLL;\nconst real eps = 1e-8;\n\nconst int maxn = 100500;\nint action[maxn];\nvector<int> g[2][maxn];\n\nbool visit[2][maxn];\n\nvoid dfs(int num, int v) {\n\tvisit[num][v] = true;\n\tfor(int i : g[num][v]) {\n\t\tif(!visit[num][i]) dfs(num, i);\n\t}\n}\n\nint main() {\n\tios_base::sync_with_stdio(false);\n\tint n, m; cin >> n >> m;\n\tfor(int i =0; i <n; i++) cin >> action[i];\n\tfor(int i =0; i< m; i++) {\n\t\tint a, b; cin >> a >> b; a--; b--;\n\t\tg[0][a].push_back(b);\n\t\tg[1][b].push_back(a);\n\t}\n\n\tfor(int i = 0; i < n; i++) {\n\t\tif(action[i] > 0) {\n\t\t\tint num = action[i] - 1;\n\t\t\tif(!visit[num][i]) dfs(num, i);\n\t\t}\n\t}\n\tfor(int i = 0; i < n; i++) puts(visit[0][i] && visit[1][i] ? \"1\" : \"0\");\n\n\treturn 0;\n}\n"
}