{
    "id": 1498724,
    "contestId": 164,
    "creationTimeSeconds": 1333898205,
    "relativeTimeSeconds": 705,
    "problem": {
        "contestId": 164,
        "index": "A",
        "name": "Variable, or There and Back Again",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 164,
        "members": [
            {
                "handle": "ifsmirnov"
            }
        ],
        "participantType": "OUT_OF_COMPETITION",
        "ghost": false,
        "room": 107,
        "startTimeSeconds": 1333897500
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 170,
    "memoryConsumedBytes": 9011200,
    "source": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#include <set>\n#include <map>\n#include <string>\n#include <cstring>\n#include <cstdlib>\nusing namespace std;\n#define forn(i, n) for (int i = 0; i < (int)(n); i++)\n#define pb push_back\n#define se second\n#define fi first\n#define mp make_pair\ntypedef pair<int, int> pii;\ntypedef long long i64;\nconst int inf = 1e9+100500;\nconst int maxn = 100500;\n\nint n, m;\nint act[maxn];\nvector<int> e[maxn], er[maxn];\n\nvoid scan()\n{\n\tcin >> n >> m;\n\tforn(i, n) cin >> act[i];\n\tforn(i, m)\n\t{\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\t--u,--v;\n\t\te[u].pb(v);\n\t\ter[v].pb(u);\n\t}\n}\n\nint q[maxn];\nint b[maxn];\nint ok1[maxn], ok2[maxn];\n\nvoid bfs1()\n{\n\tint lq = 0, rq = 0;\n\tmemset(b, 0, sizeof b);\n\tforn(i, n) if (act[i] == 1)\n\t\tb[i] = 1, q[rq++] = i;\n\t\n\twhile (lq != rq)\n\t{\n\t\tint v = q[lq++];\n\t\tforn(i, e[v].size())\n\t\t{\n\t\t\tint to = e[v][i];\n\t\t\tif (b[to]) continue;\n\t\t\tb[to] = 1;\n\t\t\tq[rq++] = to;\n\t\t}\n\t}\n\tmemcpy(ok1, b, sizeof b);\n}\nvoid bfs2()\n{\n\tint lq = 0, rq = 0;\n\tmemset(b, 0, sizeof b);\n\tforn(i, n) if (act[i] == 2)\n\t\tb[i] = 1, q[rq++] = i;\n\t\n\twhile (lq != rq)\n\t{\n\t\tint v = q[lq++];\n\t\tif (act[v] == 1) continue;\n\t\tforn(i, er[v].size())\n\t\t{\n\t\t\tint to = er[v][i];\n\t\t\tif (b[to]) continue;\n\t\t\tb[to] = 1;\n\t\t\tq[rq++] = to;\n\t\t}\n\t}\n\tmemcpy(ok2, b, sizeof b);\n}\n\nint main()\n{\n\t//freopen(\"input.txt\", \"r\", stdin);\n\t\n\tios :: sync_with_stdio(false);\n\t\n\tscan();\n\tbfs1();\n\tbfs2();\n\t//forn(i, n) cout << ok1[i] << \" \" << ok2[i] << endl;\n\tforn(i, n) cout << (bool)(ok1[i] && ok2[i]) << \"\\n\";\n\t\n\treturn 0;\n}\n"
}