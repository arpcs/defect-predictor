{
    "id": 168773262,
    "contestId": 1307,
    "creationTimeSeconds": 1660808731,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3100,
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "HYLTianMeng"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 53,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 204800,
    "source": "#include<bits/stdc++.h>\n#define mset(a,b) memset((a),(b),sizeof((a)))\n#define rep(i,l,r) for(int i=(l);i<=(r);i++)\n#define dec(i,l,r) for(int i=(r);i>=(l);i--)\n#define cmax(a,b) (((a)<(b))?(a=b):(a))\n#define cmin(a,b) (((a)>(b))?(a=b):(a))\n#define Next(k) for(int x=head[k];x;x=li[x].next)\n#define vc vector\n#define ar array\n#define pi pair\n#define fi first\n#define se second\n#define mp make_pair\n#define pb push_back\n#define N 54\n#define M number\nusing namespace std;\n\ntypedef double dd;\ntypedef long double ld;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\n#define int long long\ntypedef pair<int,int> P;\ntypedef vector<int> vi;\n\nconst int INF=0x3f3f3f3f;\nconst dd eps=1e-9;\n\ntemplate<typename T> inline void read(T &x) {\n    x=0; int f=1;\n    char c=getchar();\n    for(;!isdigit(c);c=getchar()) if(c == '-') f=-f;\n    for(;isdigit(c);c=getchar()) x=x*10+c-'0';\n    x*=f;\n}\n\nint n,m;\n\nstruct edge{\n    int to,next,w,f;\n    inline void Init(int to_,int ne_,int w_,int f_){\n        to=to_;next=ne_;w=w_;f=f_;\n    }\n}li[N*N*2];\nint head[N],tail=1,now[N],d[N],s,t,Ans,A[N],ans,Q;\nbool vis[N];\nqueue<int> q;\n\ninline void Add(int from,int to,int w,int f){\n    li[++tail].Init(to,head[from],w,f);head[from]=tail;swap(from,to);\n    li[++tail].Init(to,head[from],-w,0);head[from]=tail;\n}\ninline bool spfa(int s){\n    while(q.size()) q.pop();\n    bool op=0;\n    mset(d,INF);mset(vis,0);d[s]=0;q.push(s);vis[s]=1;now[s]=head[s];\n    while(q.size()){\n        int top=q.front();q.pop();vis[top]=0;\n        Next(top){\n            int to=li[x].to,f=li[x].f,w=li[x].w;if(!f||d[to]<=d[top]+w)continue;\n            d[to]=d[top]+w;if(!vis[to]) vis[to]=1,q.push(to);now[to]=head[to];\n        }\n    }\n    if(d[t]>=INF) return 0;else return 1;\n}\ninline int dinic(int k,int flow){\n    if(k==t) return flow;int rest=flow,x;vis[k]=1;\n    for(x=now[k];x&&rest;x=li[x].next){\n        int to=li[x].to,f=li[x].f,w=li[x].w;\n        if(!f||d[to]!=d[k]+w||(vis[to]&&to!=t)) continue;int val=dinic(to,min(rest,f));\n        if(!val) d[to]=INF;li[x].f-=val;li[x^1].f+=val;rest-=val;Ans+=val*w;\n    }\n    now[k]=x;\n    return flow-rest;\n}\n\nsigned main(){\n    // freopen(\"my.in\",\"r\",stdin);\n    // freopen(\"my.out\",\"w\",stdout);\n    read(n);read(m);\n    rep(i,1,m){\n        int from,to;read(from);read(to);int w;read(w);\n        Add(from,to,w,1);\n    }\n    s=1,t=n;\n    rep(i,1,n){\n        if(!spfa(s)) break;\n        ans+=dinic(s,1);\n        A[i]=Ans;\n    }\n    read(Q);\n    rep(i,1,Q){\n        int x;read(x);\n        ld nowans=INF;\n        rep(i,1,n){\n            if(!A[i]) break;\n            cmin(nowans,(ld)(A[i]+x)/(ld)(i));\n        }\n        printf(\"%0.7Lf\\n\",nowans);\n    }\n    return 0;\n}"
}