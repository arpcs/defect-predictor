{
    "id": 107181575,
    "contestId": 1307,
    "creationTimeSeconds": 1613130413,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3100,
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "bkifhr8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 53,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 40140800,
    "source": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cctype>\n#include <vector>\n#define N 111\ntemplate<typename T> inline void read(T &x) {\n\tx = 0; char c = getchar(); bool flag = false;\n\twhile (!isdigit(c)) { if (c == '-') flag = true; c = getchar(); }\n\twhile (isdigit(c)) x = x * 10 + (c ^ 48), c =getchar();\n\tif (flag)\tx = -x;\n}\nusing namespace std;\nconst int inf = 987654321;\ntemplate<typename T> inline void MIN(T &a, T b) {\n\tif (b < a)\ta = b;\n}\nint n, m, s, t;\nstruct edge {\n\tint nxt, to, val, fare;\n\tedge(){}\n\tedge(int jzp, int zzz, int lsr, int chr) { nxt = jzp, to = zzz, val = lsr, fare = chr; }\n}e[2001000];\nint head[N], ecnt = 1, hcur[N];\ninline void addedge(int from, int to, int val, int fare) {\n\te[++ecnt] = edge(head[from], to, val, fare);\n\thead[from] = ecnt;\n}\ninline void Addedge(int u, int v, int w, int f) {\n\taddedge(u, v, w, f), addedge(v, u, 0, -f);\n}\n\nint que[2001000], front, rear, dis[N];\nbool vis[N];\ninline bool spfa() {\n\tmemset(dis, 0x3f, sizeof(dis));\n\tfront = rear = 0;\n\tmemcpy(hcur, head, sizeof(head));\n\n\tque[++rear] = s; dis[s] = 0; vis[s] = true;\n\twhile (front < rear) {\n\t\tint cur = que[++front]; vis[cur] = false;\n\t\tfor (int i = head[cur]; i; i = e[i].nxt) {\n\t\t\tint to  =e[i].to; if (!e[i].val || dis[to] <= dis[cur] + e[i].fare)\tcontinue;\n\t\t\tdis[to] = dis[cur] + e[i].fare;\n\t\t\tif (!vis[to])\tvis[to] = true, que[++rear] = to;\n\t\t}\n\t}\n\treturn dis[t] <= 1e9;\n}\nint dfs(int cur, int limi) {\n\tif (cur == t || !limi)\treturn limi;\n\tint flow = 0; vis[cur] = true;\n\tfor (int i = hcur[cur]; i; i = e[i].nxt) {\n\t\tint to = e[i].to; hcur[cur] = i;\n\t\tif (vis[to] || dis[to] != dis[cur] + e[i].fare)\tcontinue;\n\t\tint tmp = dfs(to, min(e[i].val, limi));\n\t\tif (!tmp)\tcontinue;\n\t\te[i].val -= tmp; e[i ^ 1].val += tmp;\n\t\tflow += tmp; limi -= tmp;\n\t\tif (!limi)\tbreak;\n\t}\n\tvis[cur] = false;\n\treturn flow;\n}\n\nvector<int> vec;\nint main() {\n\tread(n), read(m); s = 1, t = n;\n\tfor (int i = 1; i <= m; ++i) {//Bug\n\t\tint u, v, w; read(u), read(v), read(w);\n\t\tAddedge(u, v, 1, w);\n\t}\n\tint mxflow = 0;\n\twhile (spfa()) {\n\t\tint tmp = dfs(s, inf);\n\t\tfor (int i = 1; i <= tmp; ++i)\tvec.push_back(dis[t]);\n\t\tmxflow += tmp;\n\t}\n\tfor (int i = 1; i < mxflow; ++i)\tvec[i] += vec[i - 1];\n\tint  q; read(q);\n\twhile (q--) {\n\t\tint x; read(x);\n\t\tdouble ans = inf;\n\t\tfor (int i = 0; i < mxflow; ++i)\tMIN(ans, 1.0 * (vec[i] + x) / (i + 1));//bug\n\t\tprintf(\"%.8f\\n\", ans);\n\t}\n\treturn 0;\n}\n\t \t\t   \t\t  \t \t\t\t   \t\t \t \t \t \t\t"
}