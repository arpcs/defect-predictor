{
    "id": 148076302,
    "contestId": 1307,
    "creationTimeSeconds": 1646192107,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3100,
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "bkifhr8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 53,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 307200,
    "source": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <queue>\n\ntypedef long long ll;\ntypedef std::pair<int, int> pr;\n\n#define fir first \n#define sec second \n\n#define sz(x) int((x).size())\n#define pb(x) push_back(x)\n#define st(x) (x).begin()\n#define ed(x) (x).end()\n\nconst int N = 60;\nconst int inf = 0x3f3f3f3f;\nconst ll INF = 0x3f3f3f3f3f3f3f3f;\n\nint n, m, q;\nstd::vector<pr> fc;\n\nint fn, s, t;\nstd::vector<int> e[N], to, fw, co;\n\ninline void add(int u,int v,int f,int c){\n\te[u].pb(sz(to)), to.pb(v), fw.pb(f), co.pb(+c);\n\te[v].pb(sz(to)), to.pb(u), fw.pb(0), co.pb(-c);\n}\n\nint dep[N], p[N], vis[N];\n\ninline bool bfs() {\n\tfor(int i = 1; i <= fn; i++) dep[i] = inf, vis[i] = 0;\n\tstd::queue<int> q; q.push(s), vis[s] = 1, dep[s] = 0;\n\twhile (sz(q)) {\n\t\tint u = q.front(); q.pop(), vis[u] = 0;\n\t\tfor (int& v : e[u]) if (fw[v] && dep[to[v]] > dep[u] + co[v]) {\n\t\t\tdep[to[v]] = dep[u] + co[v], p[to[v]] = v;\n\t\t\tif (!vis[to[v]]) vis[to[v]] = 1, q.push(to[v]);\n\t\t}\n\t}\n\treturn dep[t] < inf;\n}\n\nint flow, cost;\n\nvoid EK() {\n\twhile (bfs()) {\n\t\tint f = inf;\n\t\tfor (int i = t; i != s; i = to[p[i]^1])\n\t\t\tf = std::min(f, fw[p[i]]);\n\t\tflow += f, cost += dep[t] * f;\n\t\tfor (int i = t; i != s; i = to[p[i]^1])\n\t\t\tfw[p[i]] -= f, fw[p[i]^1] += f;\n\t\tfc.pb(pr(flow, cost));\n\t}\n}\n\ninline int read() {\n\tint w = 0, f = 1;\n\tchar ch = std::getchar();\n\twhile (ch < '0' || ch > '9') {\n\t\tif (ch == '-') f = -1;\n\t\tch = std::getchar();\n\t}\n\twhile (ch >= '0' && ch <= '9') {\n\t\tw = (w<<3) + (w<<1) + ch - '0';\n\t\tch = std::getchar();\n\t}\n\treturn w * f;\n}\n\nint main() {\n\tn = read(); m = read();\n\tfor (int i = 1; i <= m; i++) {\n\t\tint u = read(), v = read(), w = read();\n\t\tadd(u, v, 1, w);\n\t}\n\ts = 1, t = fn = n; EK();\n\tq = read();\n\tfor (int i = 1; i <= q; i++) {\n\t\tint x = read();\n\t\tdouble res = inf;\n\t\tfor (auto d : fc)\n\t\t\tres = std::min(res, (double)(d.sec + x) / (double)d.fir);\n\t\tstd::printf(\"%.10lf\\n\", res);\n\t}\n\treturn 0;\n}\n\t\t \t\t      \t\t \t  \t  \t\t  \t\t \t\t \t"
}