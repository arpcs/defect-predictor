{
    "id": 162551586,
    "contestId": 1307,
    "creationTimeSeconds": 1656769400,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3100,
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "ThunderSpirit"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 53,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 7065600,
    "source": "#include<bits/stdc++.h>\r\n#define INF 1000000007\r\n#define _gc getchar()\r\n#define llf long double\r\n#define FOR(i,a,b) for(register int i=a;i<=b;i++)\r\n#define ROF(i,b,a) for(register int i=b;i>=a;i--)\r\n#define REP(i,x) for(int i=adj[x];i;i=e[i].next)\r\nusing namespace std;\r\ninline int read(){\r\n\tint x=0;char s=_gc;\r\n\twhile('0'>s||s>'9')s=_gc;\r\n\twhile('0'<=s&&s<='9'){x=x*10+s-48;s=_gc;}\r\n\treturn x;\r\n} \r\nstruct edge{int to,next,flo,w;};\r\n\r\nconst int N=100011;\r\nint n,m,Q,num,u,v,w,tot=1,dis[N],adj[N],adv[N];\r\nbool vis[N],Vis[N];\r\nllf minfee,lim,X[N],Y[N]; \r\nedge e[2*N];\r\n\r\nvoid fcreat(int x,int y,int F,int W){\r\n\te[++tot].to=y,e[tot].next=adj[x],e[tot].flo=F,e[tot].w=W;adj[x]=tot;\r\n\te[++tot].to=x,e[tot].next=adj[y],e[tot].flo=0,e[tot].w=-W;adj[y]=tot;\r\n}\r\nbool SPFA(){\r\n\tqueue<int>q;\r\n\tFOR(i,1,n)dis[i]=INF;\r\n\tdis[1]=0,q.push(1);\r\n\twhile(!q.empty()){\r\n\t\tint tp=q.front();q.pop();\r\n\t\tvis[tp]=0;\r\n\t\tREP(i,tp){\r\n\t\t\tint t=e[i].to;\r\n\t\t\tif(e[i].flo&&dis[t]>dis[tp]+e[i].w){\r\n\t\t\t\tdis[t]=dis[tp]+e[i].w;\r\n\t\t\t\tif(!vis[t])vis[t]=1,q.push(t);\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t}\r\n\treturn dis[n]!=INF;\r\n}\r\nint dfs(int x,int flow){\t\r\n\tif(x==n)return flow;\r\n\tint res=flow;\r\n\tVis[x]=1;\r\n\tfor(int i=adv[x];i;i=e[i].next){\r\n\t\tint t=e[i].to;\r\n\t\tadv[x]=i;\r\n\t\tif(!Vis[t]&&e[i].flo&&dis[t]==dis[x]+e[i].w){\r\n\t\t\tint df=dfs(t,min(e[i].flo,res));\t\t\t\t\r\n\t\t\te[i].flo-=df,e[i^1].flo+=df,res-=df,minfee+=e[i].w*df;\r\n\t\t\tif(!res)break;\r\n\t\t}\r\n\t}\r\n\tVis[x]=0;\r\n\treturn flow-res;\r\n}\r\nint Dinic(){\t\r\n\tint now=0;\r\n\twhile(SPFA()){FOR(i,1,n)adv[i]=adj[i];now+=dfs(1,INF);X[++num]=now,Y[num]=minfee;}\r\n\treturn now;\r\n}\r\n\r\nint main(){\r\n\tn=read(),m=read();\r\n\tFOR(i,1,m)u=read(),v=read(),w=read(),fcreat(u,v,1,w);\r\n\tDinic();\r\n\tQ=read();\r\n\tFOR(qq,1,Q){\r\n\t\tlim=read();\r\n\t\tllf now=INF;\r\n\t\tFOR(i,1,num)now=min(now,(Y[i]+lim)/X[i]);\r\n\t\tprintf(\"%.7Lf\\n\",now);\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n"
}