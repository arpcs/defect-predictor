{
    "id": 159684534,
    "contestId": 1307,
    "creationTimeSeconds": 1654578400,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3100,
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "crazy_sea"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 3174400,
    "source": "#include<cstdio>\r\n#include<algorithm>\r\n#define M 100010\r\n#define N 10010\r\nusing namespace std;\r\nstruct edge{\r\n\tint next,to,flow,cost;\r\n}e[M];\r\nconst int inf=0x3f3f3f3f;\r\nint first[N],len=1,n;\r\nstruct my_queue{\r\n\tint head,tail,q[N<<5],p[N];\r\n\tvoid clear()\r\n\t{\r\n\t\tfor(int i=head;i<=tail;i++) p[q[i]]=0;\r\n\t\thead=tail=0;\r\n\t}\r\n\tint size(){return tail-head;}\r\n\tvoid push(int x)\r\n\t{\r\n\t\tif(p[x]) return;\r\n\t\tp[q[tail++]=x]=1;\r\n\t}\r\n\tint top()\r\n\t{\r\n\t\tp[q[head]]=0;\r\n\t\treturn q[head++];\r\n\t}\r\n}q;\r\nvoid add(int a,int b,int c,int d)\r\n{\r\n\te[++len]=(edge){first[a],b,c,d};\r\n\tfirst[a]=len;\r\n}\r\nint dis[N],f[N],s,t,x,y,k[N],lst[N];\r\nint spfa()\r\n{\r\n\tfor(int i=1;i<=n;i++) dis[i]=inf,f[i]=0;\r\n\tdis[s]=0,f[s]=inf;\r\n\tq.clear();\r\n\tq.push(s);\r\n\twhile(q.size())\r\n\t{\r\n\t\tx=q.top();\r\n\t\tfor(int i=first[x];i;i=e[i].next)\r\n\t\t{\r\n\t\t\tif(e[i].flow==0) continue;\r\n\t\t\tif(dis[e[i].to]>dis[x]+e[i].cost)\r\n\t\t\t{\r\n\t\t\t\tdis[e[i].to]=dis[x]+e[i].cost;\r\n\t\t\t\tlst[e[i].to]=x,k[e[i].to]=i;\r\n\t\t\t\tf[e[i].to]=min(e[i].flow,f[x]);\r\n\t\t\t\tq.push(e[i].to);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn f[t];\r\n}\r\nint s1[N],s2[N],l,p;\r\nvoid mcmf()\r\n{\r\n\tint mx;\r\n\twhile(mx=spfa())\r\n\t{\r\n\t\tfor(int x=t,y;x!=s;x=lst[x])\r\n\t\t{\r\n\t\t\ty=k[x];\r\n\t\t\te[y].flow-=mx;\r\n\t\t\te[y^1].flow+=mx;\r\n\t\t\tp+=e[y].cost;\r\n\t\t}\r\n\t\ts1[++l]=p,p=0;\r\n\t\ts2[l]=s2[l-1]+s1[l]-s1[1];\r\n\t}\r\n}\r\nint m,z,c,Q;\r\ndouble ans;\r\nint main()\r\n{\r\n\tscanf(\"%d%d\",&n,&m);\r\n\ts=1,t=n;\r\n\tfor(int i=1;i<=m;i++)\r\n\t{\r\n\t\tscanf(\"%d%d%d\",&x,&y,&c);\r\n\t\tadd(x,y,1,c), add(y,x,0,-c);\r\n\t}\r\n\tmcmf();\r\n\tscanf(\"%d\",&Q);\r\n\twhile(Q--)\r\n\t{\r\n\t\tscanf(\"%d\",&x);\r\n\t\tans=1e18;\r\n\t\tfor(int i=1;i<=l;i++)\r\n\t\t\tif(x>=s2[i]) ans=min(ans,1.0/i*(x-s2[i])+s1[i]);\r\n\t\t\telse break;\r\n\t\tprintf(\"%lf\\n\",ans);\r\n\t}\r\n}"
}