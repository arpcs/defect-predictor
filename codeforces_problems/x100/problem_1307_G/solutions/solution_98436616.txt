{
    "id": 98436616,
    "contestId": 1307,
    "creationTimeSeconds": 1605442613,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3100,
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "Grice"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 53,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 409600,
    "source": "#include<bits/stdc++.h>\r\ntypedef int LL;\r\ntypedef double dl;\r\n#define opt operator\r\n#define pb push_back\r\nconst LL maxn=1e4+9,mod=998244353,inf=0x3f3f3f3f;\r\nLL Read(){\r\n\tLL x(0),f(1); char c=getchar();\r\n\twhile(c<'0' || c>'9'){\r\n\t\tif(c=='-') f=-1; c=getchar();\r\n\t}\r\n\twhile(c>='0' && c<='9'){\r\n\t\tx=(x<<3ll)+(x<<1ll)+c-'0'; c=getchar();\r\n\t}return x*f;\r\n}\r\nvoid Chkmin(LL &x,LL y){\r\n\tif(y<x) x=y;\r\n}\r\nvoid Chkmax(LL &x,LL y){\r\n\tif(y>x) x=y;\r\n}\r\nLL add(LL x,LL y){\r\n\treturn x+=y,x>=mod?x-mod:x;\r\n}\r\nLL dec(LL x,LL y){\r\n\treturn x-=y,x<0?x+mod:x;\r\n}\r\nLL mul(LL x,LL y){\r\n\treturn 1ll*x*y%mod;\r\n}\r\nLL Pow(LL base,LL b){\r\n\tLL ret(1); while(b){\r\n\t\tif(b&1) ret=mul(ret,base); base=mul(base,base); b>>=1;\r\n\t}return ret;\r\n}\r\nLL tot;\r\nLL qy[maxn];\r\nnamespace Net{\r\n\tstruct node{\r\n\t\tLL to,nxt,flow,cost;\r\n\t}dis[maxn];\r\n\tLL s,t,num,nod;\r\n\tLL lu[maxn],head[maxn],pre[maxn],id[maxn],vis[maxn];\r\n\tvoid Add(LL u,LL v,LL flow,LL cost){\r\n\t\tdis[++num]=(node){v,head[u],flow,cost}; head[u]=num;\r\n\t\tdis[++num]=(node){u,head[v],0,-cost}; head[v]=num;\r\n\t}\r\n\tvoid Init(LL N){\r\n\t\ts=N; t=1; nod=N;\r\n\t\tfor(LL i=1;i<=N;++i) head[i]=-1;\r\n\t\tnum=-1;\r\n\t}\r\n\tstd::queue<LL> que;\r\n\tLL Spfa(){\r\n\t\tfor(LL i=1;i<=nod;++i) lu[i]=-inf,vis[i]=0;\r\n\t\tlu[s]=0;\r\n\t\tque.push(s);\r\n\t\twhile(que.size()){\r\n\t\t\tLL u(que.front()); que.pop();\r\n\t\t\tvis[u]=0;\r\n\t\t\tfor(LL i=head[u];i!=-1;i=dis[i].nxt){\r\n\t\t\t\tLL v(dis[i].to); if(!dis[i].flow) continue;\r\n\t\t\t\tif(lu[v]<lu[u]+dis[i].cost){\r\n\t\t\t\t\tpre[v]=u; id[v]=i;\r\n\t\t\t\t\tlu[v]=lu[u]+dis[i].cost;\r\n\t\t\t\t\tif(!vis[v]){\r\n\t\t\t\t\t\tvis[v]=1; que.push(v);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t//printf(\"(%d):\",t); for(LL i=1;i<=nod;++i) printf(\"%d \",lu[i]); puts(\"\");\r\n\t\tif(lu[t]!=-inf){\r\n\t\t\tfor(LL x=t;x!=s;x=pre[x]){\r\n\t\t\t\tLL id0(id[x]);\r\n\t\t\t\tdis[id0].flow--; dis[id0^1].flow++;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//printf(\"(%d)\",lu[t]);\r\n\t\treturn lu[t];\r\n\t}\r\n\tvoid Solve(){\r\n\t\tLL x(0),ret(0);\r\n\t\twhile(true){\r\n\t\t\tx=Spfa();\r\n\t\t\tif(x==-inf) break;\r\n\t\t\tqy[++tot]=(ret+=x);\r\n\t\t\t//printf(\"%d\\n\",x);\r\n\t    }\r\n\t}\r\n}\r\nLL n,m,q;\r\nint main(){\r\n\tn=Read(); m=Read();\r\n\tNet::Init(n);\r\n\tfor(LL i=1;i<=m;++i){\r\n\t\tLL x(Read()),y(Read()),w(Read());\r\n\t\tNet::Add(y,x,1,-w);\r\n\t}\r\n\tNet::s=n; Net::t=1;\r\n\tNet::Solve();\r\n\t//for(LL i=1;i<=tot;++i) printf(\"%d \",qy[i]); puts(\"\");\r\n\tq=Read();\r\n\twhile(q--){\r\n\t\tLL x(Read());\r\n\t\tdl ans(inf);\r\n\t\tfor(LL i=1;i<=tot;++i){\r\n\t\t\tans=std::min(ans,(1.0*x-qy[i])/(1.0*i));\r\n\t\t}\r\n\t\tprintf(\"%.10lf\\n\",ans);\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n\r\n"
}