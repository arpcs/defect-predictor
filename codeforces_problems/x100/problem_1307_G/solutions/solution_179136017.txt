{
    "id": 179136017,
    "contestId": 1307,
    "creationTimeSeconds": 1667533359,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3100,
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "DJRzjl"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 53,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 64204800,
    "source": "// LUOGU_RID: 92734095\n#include<bits/stdc++.h>\r\n#define int long long\r\n#define pb emplace_back\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int N=108,M=2e6+10;\r\n\r\nvector<pair<int,int> >tmp;\r\n\r\nstruct SSP{\r\n\tint s,t,now[N],dis[N],vis[N],incf[N],p[N];\r\n\tint to[M],c[M],pre[M],cst[M],tot=1;\r\n\tqueue<int>q;\r\n\tvoid add(int u,int v,int w,int x){\r\n\t\tto[++tot]=v,c[tot]=w,cst[tot]=x,pre[tot]=now[u],now[u]=tot;\r\n\t\tto[++tot]=u,c[tot]=0,cst[tot]=-x,pre[tot]=now[v],now[v]=tot;\r\n\t}\r\n\tbool spfa(){\r\n\t\tmemset(vis,0,sizeof vis);\r\n\t\tmemset(dis,63,sizeof dis);\r\n\t\twhile(!q.empty()) q.pop();\r\n\t\tvis[s]=1,q.push(s);\r\n\t\tincf[s]=INT_MAX,dis[s]=0;\r\n\t\twhile(!q.empty()){\r\n\t\t\tint u=q.front(); q.pop();\r\n\t\t\tvis[u]=0;\r\n\t\t\tfor(int i=now[u],v;i;i=pre[i])\r\n\t\t\t\tif(c[i]&&dis[v=to[i]]>dis[u]+cst[i]){\r\n\t\t\t\t\tincf[v]=min(incf[u],c[i]);\r\n\t\t\t\t\tdis[v]=dis[u]+cst[i];\r\n\t\t\t\t\tp[v]=i;\r\n\t\t\t\t\tif(!vis[v]) vis[v]=1,q.push(v);\r\n\t\t\t\t}\r\n\t\t}\r\n\t\treturn dis[t]!=dis[N-1];\r\n\t}\r\n\tint ans1,ans2;\r\n\tvoid update(){\r\n\t\tint u=t;\r\n\t\twhile(u!=s){\r\n\t\t\tint i=p[u];\r\n\t\t\tc[i]-=incf[t],c[i^1]+=incf[t];\r\n\t\t\tu=to[i^1];\r\n\t\t}\r\n\t\tans1+=incf[t],ans2+=incf[t]*dis[t];\r\n\t\ttmp.pb(ans2,ans1);\r\n\t}\r\n\tpair<int,int> EK(int fs,int ft){\r\n\t\ts=fs,t=ft;ans1=ans2=0;\r\n\t\twhile(spfa()) update();\r\n\t\treturn make_pair(ans1,ans2);\r\n\t}\r\n\tvoid clear(){memset(now,0,sizeof now),tot=1;};\r\n}F;\r\n\r\nint n,m,q;\r\n\r\nsigned main(){\r\n\tscanf(\"%lld%lld\",&n,&m);\r\n\tint s=1,t=n;\r\n\tfor(int i=1,x,y,w;i<=m;i++){\r\n\t\tscanf(\"%lld%lld%lld\",&x,&y,&w);\r\n\t\tF.add(x,y,1,w);\r\n\t}\r\n\tF.EK(s,t);\r\n\tscanf(\"%lld\",&q);\r\n\tfor(int i=1,x;i<=q;i++){\r\n\t\tscanf(\"%lld\",&x);\r\n\t\tdouble ans=1e9;\r\n\t\tfor(auto[a,b]:tmp) ans=fmin(ans,(a+x+0.0)/(1.0*b));\r\n\t\tprintf(\"%.8lf\\n\",ans);\r\n\t}\r\n\treturn 0;\r\n}"
}