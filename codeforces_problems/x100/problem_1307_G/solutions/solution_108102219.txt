{
    "id": 108102219,
    "contestId": 1307,
    "creationTimeSeconds": 1613909894,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3100,
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "Mackerel_Pike"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 343,
    "memoryConsumedBytes": 204800,
    "source": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define FOR(i, x, y) for(int i = (x); i < (y); ++i)\r\n#define REP(i, x, y) for(int i = (x); i <= (y); ++i)\r\n#define eprintf(...) fprintf(stderr, __VA_ARGS__)\r\n#define PB push_back\r\n#define MP make_pair\r\n#define PH push\r\n#define fst first\r\n#define snd second\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef double lf;\r\ntypedef long double Lf;\r\ntypedef pair<int, int> pii;\r\n\r\nconst int maxn = 55;\r\nconst int maxm = maxn * maxn;\r\n\r\nint n, m, q;\r\nint ans[maxm];\r\n\r\nnamespace Dinic{\r\n\tint tot, hd, tl;\r\n\tint head[maxn], que[maxn * maxn], dis[maxn], vis[maxn], fe[maxn], fv[maxn];\r\n\tint to[maxm << 1], nxt[maxm << 1], cap[maxm << 1], cost[maxm << 1];\r\n\t\r\n\tinline void init(){ tot = 0; memset(head, -1, sizeof(head)); return; }\r\n\t\r\n\tinline void add(int u, int v, int w, int c){\r\n//\t\tprintf(\"tot = %d u = %d v = %d w = %d c = %d\\n\", tot, u, v, w, c);\r\n\t\tto[tot] = v, cap[tot] = w, cost[tot] = c, nxt[tot] = head[u], head[u] = tot++;\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tinline void addEdge(int u, int v, int w){\r\n\t\tadd(u, v, 1, w);\r\n\t\tadd(v, u, 0, -w);\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tinline void spfa(int s){\r\n\t\thd = tl = 0;\r\n\t\tvis[s] = true;\r\n\t\tmemset(dis, 0x3f, sizeof(dis));\r\n\t\tdis[0] = 0, vis[0] = true;\r\n\t\tfor(que[tl++] = s; hd < tl; ++hd){\r\n\t\t\tint u = que[hd];\r\n\t\t\tvis[u] = false;\r\n\t\t\tfor(int i = head[u]; ~i; i = nxt[i]) if(cap[i]){\r\n\t\t\t\tint v = to[i], w = cost[i];\r\n\t\t\t\tif(dis[v] > dis[u] + w){\r\n\t\t\t\t\tdis[v] = dis[u] + w;\r\n\t\t\t\t\tfv[v] = u;\r\n\t\t\t\t\tfe[v] = i;\r\n\t\t\t\t\tif(!vis[v]){\r\n\t\t\t\t\t\tvis[v] = true;\r\n\t\t\t\t\t\tque[tl++] = v;\r\n\t\t\t\t\t} \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tinline void work(){\r\n\t\tans[0] = 0;\r\n\t\tREP(i, 1, m){\r\n\t\t\tspfa(0);\r\n//\t\t\tFOR(u, 0, n)\r\n//\t\t\t\tprintf(\"%d \", dis[u]); puts(\"\");\r\n\t\t\tans[i] = ans[i - 1] + dis[n - 1];\r\n\t\t\tfor(int u = n - 1; u; u = fv[u]){\r\n//\t\t\t\tprintf(\"u = %d\\n\", u);\r\n\t\t\t\tint e = fe[u];\r\n\t\t\t\t--cap[e], ++cap[e ^ 1];\r\n//\t\t\t\tprintf(\"id = %d cap %d -> %d = %d\\n\", e, fv[u], u, cap[e]);\r\n\t\t\t}\r\n//\t\t\tprintf(\"i = %d %d\\n\", i, ans[i]);\r\n\t\t}\r\n//\t\tputs(\"\");\r\n\t\treturn;\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tscanf(\"%d%d\", &n, &m);\r\n\tDinic::init();\r\n\t\r\n\tFOR(i, 0, m){\r\n\t\tint u, v, w; scanf(\"%d%d%d\", &u, &v, &w);\r\n\t\t--u; --v;\r\n\t\tDinic::addEdge(u, v, w);\r\n\t}\r\n\t\r\n\tDinic::work();\r\n\t\r\n//\tREP(j, 1, m)\r\n//\t\tprintf(\"%d \", ans[j]); puts(\"\");\r\n\t\r\n\tscanf(\"%d\", &q);\r\n\tFOR(i, 0, q){\r\n\t\tint x; scanf(\"%d\", &x);\r\n\t\tlf res = 0x3f3f3f3f;\r\n\t\tREP(j, 1, m)\r\n\t\t\tres = min(res, 1.0 * (ans[j] + x) / j);\r\n\t\tprintf(\"%.10lf\\n\", res);\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n"
}