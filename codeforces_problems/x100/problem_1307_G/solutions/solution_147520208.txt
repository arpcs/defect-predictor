{
    "id": 147520208,
    "contestId": 1307,
    "creationTimeSeconds": 1645658758,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3100,
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "DRYAYST"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 53,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 44134400,
    "source": "#include<bits/stdc++.h>\r\n#define g() getchar()\r\n#define il inline\r\n#define eps 1e-10\r\n#define LL long long\r\n#define pa pair<int, int>\r\n#define for_1(i, n) for(int i = 1; i <= (n); ++i)\r\n#define for_0(i, n) for(int i = 0; i < (n); ++i)\r\n#define for_xy(i, x, y) for(int i = (x); i <= (y); ++i)\r\n#define for_yx(i, y, x) for(int i = (y); i >= (x); --i)\r\n#define for_edge(i, x) for(int i = head[x]; i; i = nxt[i])\r\n// #define int long long\r\n#define DB double\r\n#define m_p make_pair\r\n#define p_b push_back\r\n#define fir first\r\n#define sec second\r\n// #define mid ((l + r) >> 1)\r\nusing namespace std;\r\nconst int N = 1e6 + 10;\r\nconst int INF = 0x3f3f3f3f;\r\nconst int mod = 1000000007;\r\nconst int up = 259;\r\n\r\ninline int re()\r\n{\r\n\tint x = 0, p = 1;\r\n\tchar ch = getchar();\r\n\twhile(ch > '9' || ch < '0') {if(ch == '-') p = -1; ch = getchar();}\r\n\twhile(ch <= '9' and ch >= '0') {x = (x << 3) + (x << 1) + (ch ^ 48); ch = getchar();}\r\n\treturn x * p;\r\n}\r\n\r\nint head[N], ver[N], edge[N], tot = 1, nxt[N], cost[N];\r\nil void add(int x, int y, int z, int co) {ver[++tot] = y; nxt[tot] = head[x]; head[x] = tot; edge[tot] = z; cost[tot] = co; }\r\nil void addedge(int x, int y, int z, int co ) {add(x, y, z, co); add(y, x, 0, -co); }\r\n//n^2 m \r\nint n, m, s, t, mincost, maxflow; \r\nint vis[N], incf[N], dis[N], pre[N]; \r\nqueue<int> q; \r\n\r\nbool spfa()\r\n{\r\n\tmemset(vis, 0, sizeof(vis)); \r\n\tmemset(dis, 0x3f, sizeof(dis)); \r\n\twhile(q.size()) q.pop(); \r\n\tq.push(s); incf[s] = 1LL<<30; vis[s] = 1; dis[s] = 0; \r\n\twhile(q.size())\r\n\t{\r\n\t\tint x = q.front(); q.pop(); vis[x] = 0; \r\n\t\tfor_edge(i, x)\r\n\t\t{\r\n\t\t\tint y = ver[i], z = edge[i], co = cost[i];\r\n\t\t\tif(dis[y] > dis[x] + co and z)\r\n\t\t\t{\r\n\t\t\t\tincf[y] = min(incf[x], z); \r\n\t\t\t\tdis[y] = dis[x] + co; \r\n\t\t\t\tpre[y] = i; \r\n\t\t\t\tif(!vis[y]) q.push(y); \r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn dis[t] != INF; \r\n}\r\npa a[N];  int cnt;\r\nil void ML()\r\n{\r\n\twhile(spfa())\r\n\t{\r\n\t\tmaxflow += incf[t]; mincost += incf[t] * dis[t]; \r\n\t\tint x = t; \r\n\t\twhile(x)\r\n\t\t{\r\n\t\t\tint i = pre[x]; \r\n\t\t\tedge[i] -= incf[t]; edge[i ^ 1] += incf[t]; \r\n\t\t\tx = ver[i ^ 1]; \r\n\t\t}\r\n//\t\tcout<<cnt<<end\r\n        a[++cnt] = m_p(maxflow, mincost);\r\n\t}\r\n}\r\n\r\nsigned main()\r\n{\r\n\tn = re(), m = re(); s = 1, t = n; \r\n\tfor_1(i, m)\r\n\t{\r\n\t\tint x = re(), y = re(), co = re(); \r\n\t\taddedge(x, y, 1, co); \r\n\t}\r\n\tML(); \r\n\tint q = re(); \r\n    for(int i = 1; i <= q; ++i)\r\n    {\r\n        DB ans = INF; int x = re();\r\n        for(int j = 1; j <= cnt; ++j)\r\n        {\r\n            ans = min(ans, 1.0 * (a[j].second + x) / a[j].first);\r\n        }\r\n        printf(\"%0.6lf\\n\", ans);\r\n    }\r\n}"
}