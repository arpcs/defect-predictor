{
    "id": 188994683,
    "contestId": 1307,
    "creationTimeSeconds": 1673529718,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3100,
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "CrTsIr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 53,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 307200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std; \r\nstruct edge{\r\n\tint to,cap;\r\n\tint cst;\r\n\tint rev;\r\n};\r\nvector<edge>g[53];\r\nvoid add_edge(int x,int y,int cap,int cst){\r\n\tg[x].push_back((edge){y,cap,cst,g[y].size()});\r\n\tg[y].push_back((edge){x,0,-cst,g[x].size()-1});\r\n}\r\nint prevv[53],preve[53];\r\nint dist[53];\r\nint min_cost_flow(int s,int t){\r\n\tint ret=0;\r\n\twhile(1){\r\n\t\tmemset(dist,31,sizeof(dist));\r\n\t\tpriority_queue<pair<int,int> >Q;\r\n\t\tdist[s]=0;\r\n\t\tQ.push(make_pair(0,s));\r\n\t\twhile(Q.size()){\r\n\t\t\tint len=-Q.top().first;\r\n\t\t\tint nw=Q.top().second;Q.pop();\r\n\t\t\tif(dist[nw]<len)continue;\r\n\t\t\tfor(int i=0;i<g[nw].size();i++){\r\n\t\t\t\tedge &e=g[nw][i];\r\n\t\t\t\tif(e.cap>0&&dist[e.to]>dist[nw]+e.cst)\r\n\t\t\t\t\tdist[e.to]=dist[nw]+e.cst,\r\n\t\t\t\t\tprevv[e.to]=nw,preve[e.to]=i,\r\n\t\t\t\t\tQ.push(make_pair(-dist[e.to],e.to));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(dist[t]>=192608172)break;\r\n\t\tint f=1;\r\n\t\tfor(int v=t;v!=s;v=prevv[v])\r\n\t\t\tf=min(f,g[prevv[v]][preve[v]].cap);\r\n\t\tret+=1ll*f*dist[t];\r\n\t\tfor(int v=t;v!=s;v=prevv[v]){\r\n\t\t\tedge &e=g[prevv[v]][preve[v]];\r\n\t\t\te.cap-=f,g[v][e.rev].cap+=f;\r\n\t\t}\r\n\t\tbreak;\r\n\t}return ret;\r\n}int n,m;\r\nint main(){\r\n\tios::sync_with_stdio(0);\r\n\tcin.tie(NULL);\r\n\tcout.tie(NULL);\r\n\tcin>>n>>m;\r\n\twhile(m--){\r\n\t\tint x,y,w;\r\n\t\tcin>>x>>y>>w;\r\n\t\tx--;y--;\r\n\t\tadd_edge(x,y,1,w);\r\n\t}\r\n\tvector<int>v;\r\n\twhile(1){\r\n\t\tint tmp=min_cost_flow(0,n-1);\r\n\t\tif(tmp)\r\n\t\t\tv.push_back(tmp);\r\n\t\telse\r\n\t\t\tbreak;\r\n\t}\r\n\tint q;\r\n\tcin>>q;\r\n\twhile(q--){\r\n\t\tdouble ans=1e9,sum;\r\n\t\tint t;\r\n\t\tcin>>t;sum=t;\r\n\t\tfor(int i=0;i<v.size();i++)\r\n\t\t\tsum+=v[i],\r\n\t\t\tans=min(ans,sum/(i+1));\r\n\t\tcout<<fixed<<setprecision(10)<<ans<<'\\n'; \r\n\t}\r\n}\r\n"
}