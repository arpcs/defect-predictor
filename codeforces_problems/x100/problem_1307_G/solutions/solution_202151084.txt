{
    "id": 202151084,
    "contestId": 1307,
    "creationTimeSeconds": 1681534962,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3100,
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "wuzr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 53,
    "timeConsumedMillis": 234,
    "memoryConsumedBytes": 204800,
    "source": "// LUOGU_RID: 108111589\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define rep(i,a,b) for(int i=a;i<=(b);i++)\r\n#define per(i,a,b) for(int i=a;i>=(b);i--)\r\n#define endl '\\n'\r\ninline ll rd() {\r\n\tll now = 0, f = 1;\r\n\tchar xr = getchar();\r\n\twhile ('0' > xr || xr > '9') {\r\n\t\tif (xr == '-') f = -1;\r\n\t\txr = getchar();\r\n\t}\r\n\twhile ('0' <= xr && xr <= '9')\r\n\t\tnow = (now << 1) + (now << 3) + (xr ^ 48), xr = getchar();\r\n\treturn now * f;\r\n}\r\ninline void wr(ll sq) {\r\n\tif (sq > 9) wr(sq / 10);\r\n\tputchar(sq % 10 + 48);\r\n\treturn ;\r\n}\r\nconst int N = 55, inf = 0x3f3f3f3f;\r\nint n, m, q;\r\nvector<pair<int, int>> ans;\r\nint fn, s, t;\r\nvector<int> e[N], to, fw, co;\r\nvoid add(int u, int v, int f, int c) {\r\n\te[u].push_back(to.size()), to.push_back(v), fw.push_back(f), co.push_back(+c);\r\n\te[v].push_back(to.size()), to.push_back(u), fw.push_back(0), co.push_back(-c);\r\n}\r\nint dep[N], p[N], vis[N];\r\nint bfs() {\r\n\trep(i, 1, fn) dep[i] = inf, vis[i] = 0;\r\n\tqueue<int> q;\r\n\tq.push(s), vis[s] = 1, dep[s] = 0;\r\n\twhile (q.size()) {\r\n\t\tint u = q.front();\r\n\t\tq.pop(), vis[u] = 0;\r\n\t\tfor (int v : e[u]) if (fw[v] && dep[to[v]] > dep[u] + co[v]) {\r\n\t\t\t\tdep[to[v]] = dep[u] + co[v], p[to[v]] = v;\r\n\t\t\t\tif (!vis[to[v]]) vis[to[v]] = 1, q.push(to[v]);\r\n\t\t\t}\r\n\t}\r\n\treturn dep[t] < inf;\r\n}\r\nint flow, cost;\r\nvoid ek() {\r\n\twhile (bfs()) {\r\n\t\tint f = inf;\r\n\t\tfor (int i = t; i != s; i = to[p[i] ^ 1]) f = min(f, fw[p[i]]);\r\n\t\tflow += f, cost += dep[t] * f;\r\n\t\tfor (int i = t; i != s; i = to[p[i] ^ 1]) fw[p[i]] -= f, fw[p[i] ^ 1] += f;\r\n\t\tans.push_back(make_pair(flow, cost));\r\n\t}\r\n}\r\nsigned main() {\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0), cout.tie(0);\r\n\tcin >> n >> m;\r\n\trep(i, 1, m) {\r\n\t\tint u, v, w;\r\n\t\tcin >> u >> v >> w;\r\n\t\tadd(u, v, 1, w);\r\n\t}\r\n\ts = 1, t = fn = n, ek();\r\n\tcin >> q;\r\n\twhile (q--) {\r\n\t\tint x;\r\n\t\tcin >> x;\r\n\t\tdouble res = inf;\r\n\t\tfor (pair<int, int> d : ans) res = min(res, double(d.second + x) / d.first);\r\n\t\tprintf(\"%.10lf\\n\", res);\r\n\t}\r\n\treturn 0;\r\n}"
}