{
    "id": 172558581,
    "contestId": 1307,
    "creationTimeSeconds": 1663504154,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3100,
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "Jack00"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 53,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 2048000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int inf=5e8;\r\nint head[111],nxt[11111],to[11111],cap[11111],cost[11111],cnt,x,y,z;\r\nint dist[111],h[111],n,m,s,t,flow,f,prevv[111],preve[111],q,pos;\r\npair<int,int> que[111111];\r\nlong long ans[5555],curans;\r\ndouble res[111111];\r\nvoid addedge(int x,int y,int cp,int cst)\r\n{\r\n\t++cnt;cost[cnt]=cst;\r\n\tcap[cnt]=cp;to[cnt]=y;nxt[cnt]=head[x];head[x]=cnt;\r\n}\r\nvoid dijkstra()\r\n{\r\n\tfor (int i=1;i<=t;i++) dist[i]=1e9;\r\n\tdist[s]=0;\r\n\tpriority_queue<pair<int,int> > pq;\r\n\tpq.push(make_pair(0,s));\r\n\twhile(!pq.empty())\r\n\t{\r\n\t\tint x=pq.top().second,y=-pq.top().first;pq.pop();\r\n\t\tfor (int i=head[x];i;i=nxt[i])\r\n\t\t{\r\n\t\t\tif (!cap[i]) continue;\r\n\t\t\tif (dist[to[i]]>dist[x]+cost[i]+h[x]-h[to[i]])\r\n\t\t\t{\r\n\t\t\t\tdist[to[i]]=dist[x]+cost[i]+h[x]-h[to[i]];\r\n\t\t\t\tprevv[to[i]]=x;preve[to[i]]=i;\r\n\t\t\t\tpq.push(make_pair(-dist[to[i]],to[i]));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nvoid mcf()\r\n{\r\n\twhile(1)\r\n\t{\r\n\t\tdijkstra();\r\n\t\tif (dist[t]>inf) break;\r\n\t\tfor (int i=1;i<=n;i++) h[i]+=dist[i];\r\n\t\tf=inf;\r\n\t\tfor (int i=t;i!=s;i=prevv[i]) f=min(f,cap[preve[i]]);\r\n\t\tfor (int i=flow+1;i<=flow+f;i++) ans[i]=ans[i-1]+h[t];\r\n\t\tflow+=f;\r\n\t\tfor (int i=t;i!=s;i=prevv[i])\r\n\t\t{\r\n\t\t\tcap[preve[i]]-=f;\r\n\t\t\tcap[preve[i]^1]+=f;\r\n\t\t}\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tscanf(\"%d%d\",&n,&m);cnt=1;\r\n\tfor (int i=1;i<=m;i++)\r\n\t{\r\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\r\n\t\taddedge(x,y,1,z);\r\n\t\taddedge(y,x,0,-z);\r\n\t}\r\n\ts=1;t=n;\r\n\tmcf();\r\n\tscanf(\"%d\",&q);\r\n\tfor (int i=1;i<=q;i++)\r\n\t{\r\n\t\tscanf(\"%d\",&que[i].first);\r\n\t\tque[i].second=i;\r\n\t}\r\n\tsort(que+1,que+q+1);pos=1;\r\n\tfor (int i=1;i<=q;i++)\r\n\t{\r\n\t\twhile(pos<flow && 1ll*(ans[pos]+que[i].first)*(pos+1)>=1ll*(ans[pos+1]+que[i].first)*pos) pos++;\r\n\t\tres[que[i].second]=(double)(ans[pos]+que[i].first)/(double)pos;\r\n\t}\r\n\tfor (int i=1;i<=q;i++) printf(\"%.9lf\\n\",res[i]);\r\n\treturn 0;\r\n} "
}