{
    "id": 223825384,
    "contestId": 1307,
    "creationTimeSeconds": 1695034978,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3100,
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "NATURAL6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 102400,
    "source": "// LUOGU_RID: 125109657\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define inf 1061109567\r\ninline int qread()\r\n{\r\n    int a=0,f=1;char ch=getchar();\r\n    while(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\r\n    while(isdigit(ch)){(a*=10)+=(ch^48);ch=getchar();}\r\n    return a*f;\r\n}\r\nint n,m,q,s,t,max_flow,min_cost,now_flow,p;\r\nint tot=1,nex[5010],to[5010],head[100],flow[5010],cost[5010];\r\nint dis[100],vis[100],da[100];\r\nvector< pair<int,int> >an;\r\nqueue<int>que;\r\ninline void adde(int x,int y,int f,int w)\r\n{\r\n    to[++tot]=y;nex[tot]=head[x];head[x]=tot;flow[tot]=f;cost[tot]=w;\r\n    to[++tot]=x;nex[tot]=head[y];head[y]=tot;flow[tot]=0;cost[tot]=-w;\r\n    return ;\r\n}\r\ninline bool bfs()\r\n{\r\n    memset(dis,63,(t+1)<<2);\r\n    memset(vis,0,(t+1)<<2);\r\n    que.push(s);vis[s]=1;dis[s]=0;\r\n    while(!que.empty())\r\n    {\r\n        p=que.front();que.pop();vis[p]=0;\r\n        for(int i=head[p];i;i=nex[i])\r\n        {\r\n            if(flow[i]&&dis[to[i]]>dis[p]+cost[i])\r\n            {\r\n                dis[to[i]]=dis[p]+cost[da[to[i]]=i];\r\n                if(!vis[to[i]])que.push(to[i]),vis[to[i]]=1;\r\n            }\r\n        }\r\n    }\r\n    return dis[t]<inf;\r\n}\r\nint main()\r\n{\r\n    n=qread();m=qread();\r\n    for(int i=1,u,v,w;i<=m;++i)\r\n    {\r\n        u=qread();v=qread();w=qread();\r\n        adde(u,v,1,w);\r\n    }\r\n    s=1,t=n;\r\n    while(bfs())\r\n    {\r\n        now_flow=inf;\r\n        for(int i=t;i^s;i=to[da[i]^1])now_flow=min(now_flow,flow[da[i]]);\r\n        max_flow+=now_flow;min_cost+=dis[t]*now_flow;\r\n        for(int i=t;i^s;i=to[da[i]^1])flow[da[i]]-=now_flow;\r\n        an.emplace_back(make_pair(min_cost,max_flow));\r\n    }\r\n    q=qread();\r\n    for(int i=1,x;i<=q;++i)\r\n    {\r\n\t\tx=qread();\r\n\t\tdouble ans=inf;\r\n\t\tfor(pair<int,int> j:an)ans=min(ans,(1.0*j.first+x)/j.second);\r\n\t\tprintf(\"%.10lf\\n\",ans);\r\n\t}\r\n    return 0;\r\n}"
}