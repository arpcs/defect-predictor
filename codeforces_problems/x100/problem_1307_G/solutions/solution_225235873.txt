{
    "id": 225235873,
    "contestId": 1307,
    "creationTimeSeconds": 1695721002,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3100,
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "orz_z"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 614400,
    "source": "// LUOGU_RID: 126203880\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\ntypedef pair<int, int> pii;\r\ntypedef vector<int> vi;\r\ntypedef double db;\r\n#define F(i, a, b) for(int i = a; i <= (b); ++i)\r\n#define F2(i, a, b) for(int i = a; i < (b); ++i)\r\n#define each(i, v) for(auto i : v)\r\n#define dF(i, a, b) for(int i = a; i >= (b); --i)\r\n#define debug(...) fprintf(stderr, __VA_ARGS__)\r\n#define Debug debug(\"Passing [%s] in LINS %d\\n\", __FUNCTION__, __LINE__)\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n#define Mry debug(\"%.3lf MB\\n\", (&Mbe - &Med) / 1048576.0)\r\n#define Try cerr << 1e3 * clock() / CLOCKS_PER_SEC << \" ms\\n\";\r\ntypedef long long ll;\r\n// namespace Fread {const int SIZE = 1 << 17; char buf[SIZE], *S, *T; inline char getchar() {if (S == T) {T = (S = buf) + fread(buf, 1, SIZE, stdin); if (S == T) return '\\n';} return *S++;}}\r\n// namespace Fwrite {const int SIZE = 1 << 17; char buf[SIZE], *S = buf, *T = buf + SIZE; inline void flush() {fwrite(buf, 1, S - buf, stdout), S = buf;} inline void putchar(char c) {*S++ = c;if (S == T) flush();} struct NTR {~NTR() {flush();}} ztr;}\r\n// #ifdef ONLINE_JUDGE\r\n// #define getchar Fread::getchar\r\n// #define putchar Fwrite::putchar\r\n// #endif\r\ninline int ri() {\r\n\tint x = 0;\r\n\tbool t = 0;\r\n\tchar c = getchar();\r\n\twhile (c < '0' || c > '9') t |= c == '-', c = getchar();\r\n\twhile (c >= '0' && c <= '9') x = (x << 3) + (x << 1) + (c ^ 48), c = getchar();\r\n\treturn t ? -x : x;\r\n}\r\ninline void wi(int x) {\r\n\tif (x < 0) {\r\n\t\tputchar('-'), x = -x;\r\n\t}\r\n\tif (x > 9) wi(x / 10);\r\n\tputchar(x % 10 + 48);\r\n}\r\ninline void wi(int x, char s) {\r\n\twi(x), putchar(s);\r\n}\r\nbool Mbe;\r\nconst int mod = 998244353;\r\nconst int inf = 1e9;\r\nconst ll infll = 0x3f3f3f3f3f3f3f3f;\r\nconst int _ = 55;\r\nint m, k;\r\ntemplate <int N, int M> struct MCMF {\r\n\tint n, s, t, vis[N], pre[N];\r\n\tint tot = 1, head[N], to[M << 1], nxt[M << 1];\r\n\tint dis[N], w[M << 1], fl[M << 1];\r\n\tvoid add(int u, int v, int dis, int c) {\r\n\t\tto[++tot] = v, nxt[tot] = head[u], fl[tot] = dis, w[tot] = c, head[u] = tot;\r\n\t}\r\n\tvoid Add(int u, int v, int dis, int c) {\r\n\t\tadd(u, v, dis, c), add(v, u, 0, -c);\r\n\t}\r\n\tbool bfs() {\r\n\t\tF(i, 1, n) dis[i] = infll, vis[i] = 0;\r\n\t\tdis[s] = 0;\r\n\t\tpriority_queue<pii> q;\r\n\t\tq.push({0, s});\r\n\t\twhile(!q.empty()) {\r\n\t\t\tint p = q.top().se;\r\n\t\t\tq.pop();\r\n\t\t\tif(vis[p]) continue;\r\n\t\t\tvis[p] = 1;\r\n\t\t\tfor(int eg = head[p]; eg; eg = nxt[eg]) {\r\n\t\t\t\tint v = to[eg], vol = fl[eg];\r\n\t\t\t\tif(vol > 0 && dis[v] > dis[p] + w[eg]) {\r\n\t\t\t\t\tdis[v] = dis[p] + w[eg];\r\n\t\t\t\t\tq.push({-dis[v], v}), pre[v] = eg;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn dis[t] < infll;\r\n\t}\r\n\tvector<pii> d;\r\n\tvoid dinic() {\r\n\t\tpii res = {0, 0};\r\n\t\tF(i, 1, n) dis[i] = 0;\r\n\t\twhile(bfs()) {\r\n//\t\t\tcout <<\"1\\n\";\r\n\t\t\tint c = infll;\r\n\t\t\tfor(int x = t; x != s; x = to[pre[x] ^ 1]) c = min(c, fl[pre[x]]);\r\n\t\t\tres.fi += c;\r\n\t\t\tfor(int x = t; x != s; x = to[pre[x] ^ 1]) fl[pre[x]] -= c, fl[pre[x] ^ 1] += c;\r\n//\t\t\tcout << \"1\\n\";\r\n\t\t\tres.se += c * dis[t];\r\n\t\t\td.pb(make_pair(res.se, res.fi));\r\n\t\t}\r\n\t}\r\n};\r\nMCMF<_, 10000> G;\r\nint q;\r\nbool Med;\r\nsigned main() {\r\n\t// Mry;\r\n\tG.n = ri(), m = ri();\r\n\tG.s = 1, G.t = G.n;\r\n\tF(i, 1, m) {\r\n\t\tint x = ri(), y = ri(), z = ri();\r\n\t\tG.Add(x, y, 1, z);\r\n\t}\r\n\tG.dinic();\r\n\tq = ri();\r\n\twhile(q--) {\r\n\t\tint x = ri();\r\n\t\tdb ans = 1.0 * infll;\r\n\t\tfor(auto v : G.d) {\r\n\t\t\tans = min(ans, 1.0 * (v.fi + x) / v.se);\r\n\t\t}\r\n\t\tprintf(\"%.10lf\\n\", ans);\r\n\t}\r\n\t// Try;\r\n\treturn 0;\r\n}"
}