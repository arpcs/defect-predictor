{
    "id": 88135945,
    "contestId": 1307,
    "creationTimeSeconds": 1595860895,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3100,
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "sys."
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 53,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 4300800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int Maxn = 2505;\r\nint n, m, T, cnt, flow, sum, head[Maxn], dis[Maxn], las[Maxn], from[Maxn];\r\nbool vis[Maxn];\r\nvector <pair <int, int> > Ve;\r\nstruct edg\r\n{\r\n\tint nxt, to, w, c;\r\n} edge[2 * Maxn];\r\nvoid add(int x, int y, int w, int c)\r\n{\r\n\tedge[++cnt] = (edg){head[x], y, w, c};\r\n\thead[x] = cnt;\r\n\tedge[++cnt] = (edg){head[y], x, 0, -c};\r\n\thead[y] = cnt;\r\n}\r\nqueue <int> Qu;\r\nbool SPFA(void)\r\n{\r\n\tmemset(dis, 0x3f, sizeof(int[n + 1]));\r\n\tQu.push(1);\r\n\tdis[1] = 0;\r\n\twhile (!Qu.empty())\r\n\t{\r\n\t\tint u = Qu.front();\r\n\t\tQu.pop();\r\n\t\tvis[u] = false;\r\n\t\tfor (int i = head[u]; i; i = edge[i].nxt)\r\n\t\t{\r\n\t\t\tint to = edge[i].to;\r\n\t\t\tif (dis[to] > dis[u] + edge[i].c && edge[i].w)\r\n\t\t\t{\r\n\t\t\t\tdis[to] = dis[u] + edge[i].c;\r\n\t\t\t\tfrom[to] = u;\r\n\t\t\t\tlas[to] = i;\r\n\t\t\t\tif (!vis[to]) Qu.push(to), vis[to] = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn dis[n] != 0x3f3f3f3f;\r\n}\r\nvoid MCMF(void)\r\n{\r\n\twhile (SPFA())\r\n\t{\r\n\t\tflow++;\r\n\t\tsum += dis[n];\r\n\t\tVe.push_back(make_pair(flow, sum));\r\n\t\tint u = n;\r\n\t\twhile (u != 1)\r\n\t\t{\r\n\t\t\tedge[las[u]].w--, edge[((las[u] - 1) ^ 1) + 1].w++;\r\n\t\t\tu = from[u];\r\n\t\t}\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tscanf(\"%d%d\", &n, &m);\r\n\tfor (int i = 1; i <= m; i++)\r\n\t{\r\n\t\tint x, y, w;\r\n\t\tscanf(\"%d%d%d\", &x, &y, &w);\r\n\t\tadd(x, y, 1, w);\r\n\t}\r\n\tMCMF();\r\n\tscanf(\"%d\", &T);\r\n\twhile (T--)\r\n\t{\r\n\t\tdouble ans = 1e18;\r\n\t\tint x;\r\n\t\tscanf(\"%d\", &x);\r\n\t\tfor (vector <pair <int, int> > :: iterator it = Ve.begin(); it != Ve.end(); it++)\r\n\t\t\tans = min(ans, (it -> second + x) / (double) it -> first);\r\n\t\tprintf(\"%.10lf\\n\", ans);\r\n\t}\r\n\treturn 0;\r\n}"
}