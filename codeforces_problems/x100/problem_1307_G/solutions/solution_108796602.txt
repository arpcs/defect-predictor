{
    "id": 108796602,
    "contestId": 1307,
    "creationTimeSeconds": 1614596410,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3100,
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "Minus_Stardust"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 1126400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int N=1e2+10,M=2e4+10,P=2e5+10;\r\nconst int INF=0x3f3f3f3f;\r\nint n,m,q,s,t,cur[N],dis[N],vis[N],qt[P];\r\nint ans1,ans2;\r\nint fst[N],nxt[M],to[M],val[M],pay[M],tot=2;\r\nvector<pair<int,int> > ans;\r\ninline int read()\r\n{\r\n\tint s=0,w=1;\r\n\tchar ch=getchar();\r\n\twhile(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\r\n\twhile(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\r\n\treturn s*w;\r\n}\r\ninline void add(int u,int v,int w,int c)\r\n{\r\n\tnxt[tot]=fst[u];\r\n\tto[tot]=v,val[tot]=1ll*w,pay[tot]=c;\r\n\tfst[u]=tot;++tot;\r\n\tnxt[tot]=fst[v];\r\n\tto[tot]=u,val[tot]=0,pay[tot]=-c;\r\n\tfst[v]=tot;++tot;\r\n}\r\nint spfa()\r\n{\r\n\tfor(int i=1;i<=n;++i)dis[i]=INF,vis[i]=0;\r\n\tint hd=0,tl=1;\r\n\tqt[tl]=s,dis[s]=0;\r\n\twhile(hd<tl)\r\n\t{\r\n\t\tint u=qt[++hd];vis[u]=0;\r\n\t\tfor(int i=fst[u];i;i=nxt[i])\r\n\t\t{\r\n\t\t\tint v=to[i];\r\n//\t\t\tif(!val[i])continue;\r\n\t\t\tif(dis[u]+pay[i]<dis[v]&&val[i]>0)\r\n\t\t\t{\r\n\t\t\t\tdis[v]=dis[u]+pay[i];\r\n\t\t\t\tif(!vis[v])\r\n\t\t\t\t{\r\n\t\t\t\t\tif(dis[v]<dis[qt[hd+1]])qt[hd--]=v;\r\n\t\t\t\t\telse qt[++tl]=v;\r\n\t\t\t\t\tvis[v]=1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn dis[t]!=INF;\r\n}\r\nint dfs(int u,int lim)\r\n{\r\n\tif(u==t||(!lim))return lim;\r\n\tvis[u]=1;\r\n\tint ans=0,tmp;\r\n\tfor(int i=cur[u];i;i=nxt[i])\r\n\t{\r\n\t\tint v=to[i];\r\n\t\tcur[u]=i;\r\n\t\tif(dis[v]!=dis[u]+pay[i])continue;\r\n\t\tif(!vis[v]&&val[i]&&(tmp=dfs(v,min(lim,val[i]))))\r\n\t\t{\r\n\t\t\tans2+=tmp*pay[i];\r\n\t\t\tval[i]-=tmp,lim-=tmp;\r\n\t\t\tans+=tmp,val[i^1]+=tmp;\r\n\t\t}\r\n\t}\r\n\tvis[u]=0;\r\n\treturn ans;\r\n}\r\ninline void dinic()\r\n{\r\n\twhile(spfa())\r\n\t{\r\n\t\tfor(int i=1;i<=n;++i)cur[i]=fst[i];\r\n\t\tans1+=dfs(s,INF);\r\n\t\tans.push_back(make_pair(ans1,ans2));\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tn=read(),m=read(),s=1,t=n;\r\n\tfor(int i=1;i<=m;++i)\r\n\t{\r\n\t\tint u=read(),v=read(),c=read();\r\n\t\tadd(u,v,1,c);\r\n\t}\r\n\tdinic();\r\n\tq=read();\r\n\twhile(q--)\r\n\t{\r\n\t\tint x=read();\r\n\t\tdouble tmp=INF;\r\n\t\tfor(int i=0;i<ans.size();++i)\r\n\t\t{\r\n\t\t\tif(tmp>1.0*(ans[i].second+x)/ans[i].first)\r\n\t\t\ttmp=1.0*(ans[i].second+x)/ans[i].first;\r\n\t\t}\r\n\t\tprintf(\"%.10lf\\n\",tmp);\r\n\t}\r\n\treturn 0;\r\n}"
}