{
    "id": 208877576,
    "contestId": 1307,
    "creationTimeSeconds": 1686130759,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3100,
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "AmurAdonisHerb"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 53,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 102400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\nbool memBeg;\r\nconst int maxn=55;\r\nconst int maxm=maxn*maxn;\r\nconst int inf=0x3f3f3f3f;\r\nint n,m,head[maxn],to[maxm<<1],c[maxm<<1],cost[maxm<<1],nxt[maxm<<1],tot;\r\nvoid add_edge(int u,int v,int w,int t) {\r\n    to[tot]=v; c[tot]=w; cost[tot]=t; nxt[tot]=head[u]; head[u]=tot++;\r\n    to[tot]=u; c[tot]=0; cost[tot]=-t; nxt[tot]=head[v]; head[v]=tot++;\r\n}\r\nint S,T,dis[maxn],que[maxn],frm[maxn];\r\nbool inque[maxn];\r\nbool spfa() {\r\n    memset(dis,0x3f,sizeof(dis));\r\n    dis[S]=0; int tead=0,rail=0;\r\n    que[rail++]=S; inque[S]=true;\r\n    while(tead!=rail) {\r\n        int cur=que[tead++];\r\n        if(tead==maxn) tead=0;\r\n        inque[cur]=false;\r\n        for(int i=head[cur];~i;i=nxt[i])\r\n            if(c[i]&&dis[cur]+cost[i]<dis[to[i]]) {\r\n                dis[to[i]]=dis[cur]+cost[i];\r\n                frm[to[i]]=i;\r\n                if(!inque[to[i]]) {\r\n                    inque[to[i]]=true;\r\n                    que[rail++]=to[i];\r\n                    if(rail==maxn) rail=0;\r\n                }\r\n            }\r\n    }\r\n    return dis[T]<inf;\r\n}\r\nint EK() {\r\n    int flow=1,ret=0,cur=T;\r\n    while(cur!=S) {\r\n        c[frm[cur]]-=flow;\r\n        c[frm[cur]^1]+=flow;\r\n        ret+=cost[frm[cur]];\r\n        cur=to[frm[cur]^1];\r\n    }\r\n    return ret;\r\n}\r\nint minn[maxn],siz;\r\nvoid init() {\r\n    while(spfa()) {\r\n        siz++;\r\n        minn[siz]=minn[siz-1]+EK();\r\n    }\r\n}\r\nbool memEn;\r\nint main() {\r\n\tfprintf(stderr,\"%.24lf\\n\",fabs(&memEn-&memBeg)/1024.0/1024.0);\r\n    scanf(\"%d%d\",&n,&m);\r\n    memset(head,-1,sizeof(head));\r\n    for(int i=1;i<=m;i++) {\r\n        int u,v,w;\r\n        scanf(\"%d%d%d\",&u,&v,&w);\r\n        add_edge(u,v,1,w);\r\n    }\r\n    S=0; T=n+1;\r\n    add_edge(S,1,inf,0);\r\n    add_edge(n,T,inf,0);\r\n    init();\r\n    int q; scanf(\"%d\",&q);\r\n    while(q--) {\r\n        int x; scanf(\"%d\",&x);\r\n        double ret=inf;\r\n        for(int i=1;i<=siz;i++)\r\n            ret=min(ret,1.0*(minn[i]+x)/i);\r\n        printf(\"%.10lf\\n\",ret);\r\n    }\r\n\treturn 0;\r\n}\r\n//4495457127739545929"
}