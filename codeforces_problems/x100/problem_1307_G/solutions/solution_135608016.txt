{
    "id": 135608016,
    "contestId": 1307,
    "creationTimeSeconds": 1636962660,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3100,
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "imzzy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 53,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 3174400,
    "source": "#include<bits/stdc++.h>\nnamespace imzzy{\n\ttypedef long long ll;\n\ttypedef unsigned long long ull;\n\ttypedef std::pair<int,int> pii;\n\t#define endl std::endl\n\t#define rgi register int\n\t#define fout std::cout\n\tclass fastin{public:int _ch,_f;\n\tinline fastin&operator>>(char&a){a=getchar();return*this;}\n\ttemplate<typename _Tp>inline fastin&operator>>(_Tp&_x){\n\t_x=0;while(!isdigit(_ch))_f|=(_ch==45),_ch=getchar();\n\twhile(isdigit(_ch))_x=(_x<<1)+(_x<<3)+(_ch^48),_ch=getchar();\n\t_f&&(_x=-_x,_f=0);return*this;}fastin(){_ch=_f=0;}\n\t}fin;\n}using namespace imzzy;\n// ----------------------------\n// #define int ll\n// using namespace std;\nconst ll mod=1000000007,inf=1000000007;\nconst int maxn=54,maxm=200004;\n\nint n,m;\nstd::vector<std::pair<ll,ll> >  co;\nnamespace FLOWS{\n\tstruct EDGE{int v,w,c,nxt;} e[maxm];\n\tint first[maxn],cnte=1;\n\tinline void addedge(int u,int v,int c,int w) {e[++cnte]={v,w,c,first[u]},first[u]=cnte;}\n\tinline void add(int u,int v,int c) {addedge(u,v,c,1),addedge(v,u,-c,0);}\n}\nnamespace MCMF{\n\tusing namespace FLOWS;\n\tint s,t;\n\tstd::queue<int> q;\n\tint dist[maxn],pre[maxn];\n\tbool book[maxn];\n\tinline bool spfa() {\n\t\tfor(rgi i=1;i<=n;++i) dist[i]=pre[i]=inf;\n\t\tdist[s]=0,q.push(s);\n\t\twhile(!q.empty()) {\n\t\t\tint u=q.front(); q.pop();\n\t\t\tbook[u]=0;\n\t\t\tfor(rgi i=first[u];i;i=e[i].nxt) if(e[i].w>0)\n\t\t\t\tif(dist[e[i].v]>dist[u]+e[i].c) {\n\t\t\t\t\tdist[e[i].v]=dist[u]+e[i].c;\n\t\t\t\t\tpre[e[i].v]=i^1;\n\t\t\t\t\tif(!book[e[i].v]) q.push(e[i].v),book[e[i].v]=1;\n\t\t\t\t}\n\t\t}\n// for(rgi i=1;i<=n;++i) fout<<dist[i]<<' '; fout<<endl;\n\t\treturn dist[t]<inf;\n\t}\n\tvoid work(int _s,int _t) {\n\t\ts=_s,t=_t;\n\t\tll flow=0,cost=0;\n\t\twhile(spfa()) {\n\t\t\t++flow,cost+=dist[t];\n\t\t\tco.push_back({flow,cost});\n\t\t\tfor(rgi u=t;u!=s;u=e[pre[u]].v)\n\t\t\t\t++e[pre[u]].w,--e[pre[u]^1].w;\n\t\t}\n\t}\n}\n\nsigned main(){\n\t// freopen(\"tt.in\",\"r\",stdin);\n\t// freopen(\"tt.out\",\"w\",stdout);\n\tfin>>n>>m;\n\tint u,v,w;\n\tfor(rgi i=1;i<=m;++i) fin>>u>>v>>w,MCMF::add(u,v,w);\n\tMCMF::work(1,n);\n// for(rgi i=1;i<=n;++i) fout<<co[i]<<' '; fout<<endl;\n\tfin>>w;\n\twhile(w--) {\n\t\tfin>>v;\n\t\tdouble ans=inf;\n\t\tfor(auto d:co) ans=std::min(ans,double(d.second+v)/d.first);\n\t\tprintf(\"%.9lf\\n\",ans);\n\t}\n\treturn 0;\n}\n// by imzzy\n// ----------------------------\n"
}