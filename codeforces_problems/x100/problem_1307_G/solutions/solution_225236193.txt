{
    "id": 225236193,
    "contestId": 1307,
    "creationTimeSeconds": 1695721178,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3100,
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "orz_z"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<stdio.h>\r\n#include<queue>\r\n#include<vector>\r\n#define inf 1000000000\r\nusing namespace std;\r\nconst int maxn=55,maxm=5005;\r\nint n,m,Q,e,flow,cost;\r\nint start[maxn],to[maxm],then[maxm],limit[maxm],worth[maxm],rev[maxm],dis[maxn],vis[maxn],rec[maxn];\r\nqueue<int>q;\r\nvector< pair<int,int> >v;\r\ninline int min(int a,int b){\r\n    return a<b? a:b;\r\n}\r\ninline void add(int x,int y,int z,int w,int r){\r\n    then[++e]=start[x],start[x]=e,to[e]=y,limit[e]=z,worth[e]=w,rev[e]=r;\r\n}\r\ninline void addedge(int x,int y,int z,int w){\r\n\tadd(x,y,z,w,e+2),add(y,x,0,-w,e);\r\n}\r\nint check(int s,int t){\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tdis[i]=inf,vis[i]=0;\r\n\twhile(!q.empty())\r\n\t\tq.pop();\r\n\tdis[s]=0,vis[s]=1,q.push(s);\r\n\twhile(!q.empty()){\r\n\t\tint x=q.front();\r\n\t\tvis[x]=0,q.pop();\r\n\t\tfor(int i=start[x];i;i=then[i]){\r\n\t\t\tint y=to[i];\r\n\t\t\tif(limit[i]&&dis[y]>dis[x]+worth[i]){\r\n\t\t\t\tdis[y]=dis[x]+worth[i],rec[y]=i;\r\n\t\t\t\tif(vis[y]==0)\r\n\t\t\t\t\tvis[y]=1,q.push(y);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn dis[t]==inf? 0:1;\r\n}\r\nvoid work(int s,int t){\r\n\tint minn=inf;\r\n\tfor(int i=t;i!=s;i=to[rev[rec[i]]])\r\n\t\tminn=min(minn,limit[rec[i]]);\r\n\tflow+=minn;\r\n\tfor(int i=t;i!=s;i=to[rev[rec[i]]])\r\n\t\tlimit[rec[i]]-=minn,limit[rev[rec[i]]]+=minn\uff1b\r\n\tcost+=dis[t] * minn;\r\n}\r\nint main(){\r\n\tscanf(\"%d%d\",&n,&m);\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tint x,y,z;\r\n\t\tscanf(\"%d%d%d\",&x,&y,&z);\r\n\t\taddedge(x,y,1,z);\r\n\t}\r\n\twhile(check(1,n))\r\n\t\twork(1,n),v.push_back(make_pair(cost,flow));\r\n\tscanf(\"%d\",&Q);\r\n\twhile(Q--){\r\n\t\tint x;\r\n\t\tdouble ans=1.0*inf;\r\n\t\tscanf(\"%d\",&x);\r\n\t\tfor(int i=0;i<v.size();i++)\r\n\t\t\tans=min(ans,1.0*(v[i].first+x)/v[i].second);\r\n\t\tprintf(\"%.10lf\\n\",ans);\r\n\t}\r\n\treturn 0;\r\n}\r\n"
}