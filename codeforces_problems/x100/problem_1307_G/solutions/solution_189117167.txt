{
    "id": 189117167,
    "contestId": 1307,
    "creationTimeSeconds": 1673622559,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "G",
        "name": "Cow and Exercise",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3100,
        "tags": [
            "flows",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 53,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 3686400,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n\n#define rep(i,a,b) for(int i=(a),i##end=(b);i<=i##end;++i)\n#define per(i,a,b) for(int i=(a),i##end=(b);i>=i##end;--i)\nmt19937 Rnd(chrono::high_resolution_clock::now().time_since_epoch().count());\ntemplate<typename T>void chkmax(T&x,T y){if(x<y)x=y;}\ntemplate<typename T>void chkmin(T&x,T y){if(x>y)x=y;}\n\n#define pb push_back\n#define ALL(x) (x).begin(),(x).end()\n#define mem(x) memset((x),0,sizeof(x))\n\ntypedef double db;\ntypedef long long ll;\ntypedef vector<int>vi;\ntypedef pair<int,int>pii;\n\ntypedef unsigned u32;\ntypedef unsigned uint;\ntypedef unsigned long long u64;\n\nnamespace orzjk{\n  const int SZ=1e6;\n  char buf[SZ],*p1=buf,*p2=buf;\n  char nc(){\n    return p1==p2&&(p2=(p1=buf)+fread(buf,1,SZ,stdin),p1==p2)?EOF:*p1++;\n  }\n  char fub[SZ],*p3=fub,*p4=fub+SZ;\n  void pc(char c){\n    p3==p4&&(fwrite(fub,1,SZ,stdout),p3=fub);\n    *p3++=c;\n  }\n  void flush(){\n    fwrite(fub,1,p3-fub,stdout),p3=fub;\n  }\n}\nusing orzjk::nc;\nusing orzjk::pc;\n\n//#define nc getchar\n//#define pc putchar\n\nint read(){\n  int x=0,f=1;char c=nc();\n  while(c<48)c=='-'&&(f=-1),c=nc();\n  while(c>47)x=x*10+(c^48),c=nc();\n  return x*f;\n}\ntemplate<class T>void write(T x){\n  static char st[21];\n  if(!x)return pc(48),void();\n  char*p=st;\n  if(x<0)x=-x,pc('-');\n  for(;x;x/=10)*p++=x%10|48;\n  do{\n    pc(*--p);\n  }while(p!=st);\n}\n\n//const int P=1e9+7;\nconst int P=998244353;\nint qp(int a,int k){\n  int res=1;for(;k;k>>=1,a=1ll*a*a%P)if(k&1)res=1ll*res*a%P;return res;\n}\n\nconst int maxn=1e5+10;\n\nvector<pii>vec;\n\nnamespace EK{\n  static const int inf=INT_MAX;\n  static const int maxN=5010;\n  static const int maxM=1e5+10;\n  int ecnt,h[maxN];\n  struct edges{\n    int nxt,to,w,c;\n  }E[maxM];\n  void addline(int u,int v,int w,int c){\n    E[++ecnt]={h[u],v,w,c},h[u]=ecnt;\n    E[++ecnt]={h[v],u,0,-c},h[v]=ecnt;\n  }\n  bool inq[maxN];\n  int S,T,fl[maxN],dis[maxN],pre[maxN];\n  void gnxt(int&x){if(++x==maxN)x=0;}\n  bool spfa(){\n    static int Q[maxN];\n    memset(dis,0x3f,sizeof dis);\n    int l=0,r=1;Q[0]=S,dis[S]=0,fl[S]=inf;\n    while(l!=r){\n      int u=Q[l];gnxt(l),inq[u]=0;\n      for(int i=h[u];i;i=E[i].nxt){\n        int v=E[i].to;\n        if(E[i].w&&dis[v]>dis[u]+E[i].c){\n          pre[v]=i,fl[v]=min(fl[u],E[i].w),dis[v]=dis[u]+E[i].c;\n          if(!inq[v]){\n            Q[r]=v,inq[v]=1;if(l!=r&&dis[Q[l]]>dis[Q[r]])swap(Q[l],Q[r]);gnxt(r);\n          }\n        }\n      }\n    }\n    return dis[T]<1e9;\n  }\n  void EK(){\n    int f=0,c=0;\n    while(spfa()){\n      vec.pb({f+=fl[T],c+=fl[T]*dis[T]});\n      for(int u=T;u!=S;u=E[pre[u]^1].to){\n        E[pre[u]].w-=fl[T],E[pre[u]^1].w+=fl[T];\n      }\n    }\n  }\n}\n\nvoid solve(){\n  int n=read(),m=read();\n  EK::ecnt=1;\n  EK::S=1,EK::T=n;\n  rep(i,1,m){\n    int u=read(),v=read(),w=read();\n    EK::addline(u,v,1,w);\n  }\n  EK::EK();\n  int q=read();\n  while(q--){\n    int x=read();\n    db ans=1e18;\n    for(auto[a,b]:vec)chkmin(ans,(db)(b+x)/a);\n    printf(\"%.9lf\\n\",ans);\n  }\n}\n\nsigned main(){\n//  freopen(\".in\",\"r\",stdin);\n//  freopen(\".out\",\"w\",stdout);\n//  int T;cin>>T;while(T--)solve();\n  solve();\n  orzjk::flush();\n  return 0;\n}\n\n   \t \t \t\t\t \t \t \t \t\t \t     \t  \t\t"
}