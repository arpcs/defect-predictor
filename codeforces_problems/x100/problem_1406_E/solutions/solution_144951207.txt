{
    "id": 144951207,
    "contestId": 1406,
    "creationTimeSeconds": 1643813587,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "ytkn"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 102,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 204800,
    "source": "#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <vector>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <tuple>\n#include <cmath>\n#include <numeric>\n#include <functional>\n#include <cassert>\n#include <random>\n\n#define debug_value(x) cerr << \"line\" << __LINE__ << \":<\" << __func__ << \">:\" << #x << \"=\" << x << endl;\n#define debug(x) cerr << \"line\" << __LINE__ << \":<\" << __func__ << \">:\" << x << endl;\n\ntemplate<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }\ntemplate<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }\n\nusing namespace std;\ntypedef long long ll;\n\ntemplate<typename T>\nvector<vector<T>> vec2d(int n, int m, T v){\n    return vector<vector<T>>(n, vector<T>(m, v));\n}\n\ntemplate<typename T>\nvector<vector<vector<T>>> vec3d(int n, int m, int k, T v){\n    return vector<vector<vector<T>>>(n, vector<vector<T>>(m, vector<T>(k, v)));\n}\n\ntemplate<typename T>\nvoid print_vector(vector<T> v, char delimiter=' '){\n    if(v.empty()) {\n        cout << endl;\n        return;\n    }\n    for(int i = 0; i+1 < v.size(); i++) cout << v[i] << delimiter;\n    cout << v.back() << endl;\n}\n\nclass Eratosthenes{\n    public:\n    int m;\n    vector<bool> is_prime;\n    vector<int> primes;\n    Eratosthenes(int m_){\n        m = m_;\n        init();\n    }\n    private:\n    void init(){\n        is_prime.assign(m+1, true);\n        is_prime[0] = false, is_prime[1] = false;\n        for(int i = 2; i <= m; i++){\n            if(is_prime[i]){\n                primes.push_back(i);\n                for(int j = 2; i*j <= m; j++) is_prime[i*j] = false;\n            }\n        }\n    }\n};\n\nauto et = Eratosthenes(100000);\n\nclass Simulator{\n    public:\n    int n;\n    Simulator(int n): n(n) {\n        random_device rnd;\n        mt19937 mt(rnd());\n        x = 1+mt()%n;\n        // x = 71011;\n        n_asked = 0;\n        erased.assign(n+1, false);\n    }\n    \n    int ask_multiple(int a){\n        n_asked++;\n        int ans = 0;\n        for(int i = 1; i*a <= n; i++){\n            if(!erased[i*a]) ans++;\n        }\n        return ans;\n    }\n    int erase_multiple(int a){\n        n_asked++;\n        int ans = 0;\n        for(int i = 1; i*a <= n; i++){\n            if(!erased[i*a]) ans++;\n            if(i*a != x) erased[i*a] = true;\n        }\n        return ans;\n    }\n    void verify(int a){\n        cout << \"asked: \" << n_asked << endl;\n        cout << \"truth: \" << x << endl;\n        cout << \"your answer: \" << a << endl;\n        assert(n_asked <= 10000);\n        assert(x == a);\n    }\n    private:\n    int x;\n    int n_asked;\n    vector<bool> erased;\n};\n\n// #define DEBUG\n\nint main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout << setprecision(10) << fixed;\n    int n; cin >> n;\n    #ifdef DEBUG\n    auto sim = Simulator(n);\n    #endif\n    auto ask_multiple = [&](ll a){\n        if(a > n) return 0;\n    #ifdef DEBUG\n        return sim.ask_multiple(a);\n    #else\n        cout << \"A \" << a << endl;\n        int ans; cin >> ans;\n        return ans;\n    #endif\n    };\n    auto erase_multiple = [&](ll a){\n    #ifdef DEBUG\n        return sim.erase_multiple(a);\n    #else\n        cout << \"B \" << a << endl;\n        int ans; cin >> ans;\n        return ans;\n    #endif\n    };\n    auto verify = [&](int a){\n    #ifdef DEBUG\n        sim.verify(a);\n    #else\n        cout << \"C \" << a << endl;\n    #endif\n    };\n    vector<int> small_primes, large_primes;\n    for(ll p: et.primes){\n        if(p > n) break;\n        if(p*p > n) large_primes.push_back(p);\n        else small_primes.push_back(p);\n    }\n    for(ll p: small_primes){\n        erase_multiple(p);\n    }\n    vector<vector<int>> bucktes;\n    for(int i = 0; i < large_primes.size(); i++){\n        int p = large_primes[i];\n        if(i%100 == 0){\n            bucktes.push_back({p});\n        }else{\n            bucktes.back().push_back(p);\n        }\n    }\n    int n_buckets = bucktes.size();\n    vector<int> rem(n_buckets+1);\n    rem[0] = ask_multiple(1);\n    int ans = 1;\n    for(int i = 0; i < n_buckets; i++){\n        for(int p: bucktes[i]){\n            if(erase_multiple(p) > 1) ans *= p;\n        }\n        rem[i+1] = ask_multiple(1);\n    }\n    for(int i = 0; i < n_buckets; i++){\n        if(rem[i]-rem[i+1] < bucktes[i].size()){\n            for(int p: bucktes[i]){\n                if(ask_multiple(p) != 0) ans *= p;\n            }\n        }\n    }\n    \n    for(ll p: small_primes){\n        ll q = p;\n        while(q/p <= n){\n            int x = ask_multiple(q);\n            if(x == 0){\n                ans *= q/p;\n                break;\n            }\n            q *= p;\n        }\n    }\n    verify(ans);\n}"
}