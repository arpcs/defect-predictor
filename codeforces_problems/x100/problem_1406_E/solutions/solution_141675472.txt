{
    "id": 141675472,
    "contestId": 1406,
    "creationTimeSeconds": 1641322344,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "harikiran3553"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 1228800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long   ll;\r\n\r\n\r\nconst ll mod =  1000000007;\r\nconst ll fact_length = 100001;\r\nll Fact[fact_length];\r\nbool isprime[100001];\r\n\r\nvector<ll> p;\r\n\r\nll fun(ll x, ll n)\r\n{\r\n   ll t = x;\r\n   ll res = 0;\r\n   while(t <= n)\r\n   {\r\n       res++;\r\n       t*=x;\r\n   }\r\n   return res;\r\n}\r\n\r\n\r\nll get_prime()\r\n{\r\n\tisprime[0] = false;\r\n\tisprime[1] = false;\r\n\tfor (ll i = 2; i < fact_length; i++) isprime[i] = true;\r\n\tfor (ll i = 2; i < fact_length; i++)\r\n\t{\r\n\t\tif (isprime[i])\r\n\t\t{\r\n\t\t\tfor (ll j = i * i; j < fact_length; j += i) isprime[j] = false;\r\n\t\t}\r\n\t}\r\n\r\n\tfor(ll i=2;i<fact_length;i++)\r\n\t{\r\n\t    if(isprime[i]) p.push_back(i);\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\nll get_PRIME = get_prime();\r\n\r\nll bin_exp(ll a, ll b)\r\n{\r\n\ta %= mod;\r\n\tll res = 1;\r\n\r\n\twhile (b)\r\n\t{\r\n\t\tif (b & 1)\r\n\t\t{\r\n\t\t\tres *= a; res %= mod;\r\n\t\t}\r\n\t\ta *= a; a %= mod; b = b >> 1;\r\n\t}\r\n\treturn res;\r\n}\r\n\r\n\r\nll mod_inv(ll n)\r\n{\r\n\tn %= mod; n  = bin_exp(n, mod - 2); return n;\r\n}\r\n\r\n\r\nll get_fact()\r\n{\r\n\tFact[0] = 1;\r\n\tfor (ll i = 1; i < fact_length; i++) {  Fact[i] = (i * Fact[i - 1] * 1LL) % mod; }\r\n\treturn 0;\r\n}\r\nll get_FACT = get_fact();\r\n\r\n\r\nll nCr(ll n, ll r)\r\n{\r\n\tif (n < r) return 0;\r\n\tll ans = Fact[n]; ans %= mod;\r\n\tans *= mod_inv(Fact[n - r]); ans %= mod;\r\n\tans *= mod_inv(Fact[r]); ans %= mod;\r\n\treturn ans;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nint main()\r\n{\r\n\r\n\tios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);\r\n\t\r\n\tll n;\r\n\tcin>>n;\r\n\t\r\n\tll i = 0;\r\n\tll ans = 1;\r\n\tfor(i=0;i<p.size();i++)\r\n\t{\r\n\t    ll temp = p[i];\r\n\t    if(temp*temp > n) break;\r\n\t    \r\n\t    ll xi = temp;\r\n\t    while(xi*temp <= n)\r\n\t    {\r\n\t        xi*=temp;\r\n\t    }\r\n\t     bool cond = false;\r\n\t    while(xi > 1)\r\n\t    {\r\n\t        ll x,y;\r\n\t       \r\n\t      cout<<\"B \"<<xi<<endl;\r\n\t       cin>>x;\r\n\t       cout<<\"A \"<<xi<<endl;\r\n\t        cin>>y;\r\n\t       if(y==1 && !cond) {ans*=xi;cond = true;}\r\n\t        xi/=temp;\r\n\t    }\r\n\t}\r\n\r\n\tfor(ll j = i;j<p.size();j++)\r\n\t{\r\n\t \r\n\t    ll temp = p[j];\r\n\t       if(temp > n) break;\r\n\t    ll x ;\r\n    cout<<\"A \"<<temp<<endl;\r\n\t    cin>>x;\r\n\t    if(x > 1) ans*=temp;\r\n\t}\r\n\tcout<<\"C \"<<ans<<endl;\r\n\t\r\n\t\r\n\t\r\n\treturn 0;\r\n}\r\n\r\n\r\n"
}