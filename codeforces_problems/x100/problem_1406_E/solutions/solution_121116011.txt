{
    "id": 121116011,
    "contestId": 1406,
    "creationTimeSeconds": 1625233613,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "SophieRodriguez"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 409600,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <ext/pb_ds/detail/standard_policies.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n#define int long long\r\n\r\ntemplate <typename T>\r\nusing ordered_set = tree <T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;\r\n\r\nint32_t main() {\r\nsrand(time(0));\r\nint n;\r\ncin>>n;\r\nvector <int> q;\r\nfor (int i = 2;i <= n;i++)\r\n{\r\n    bool prime = true;\r\n    for (int j = 2;j <= sqrt(i);j++)\r\n    if (!(i % j)) {prime = false;break;}\r\n    if (prime) q.push_back(i);\r\n}\r\nbool J = true;\r\nint ans = 1;\r\nint qu = 1;\r\n        vector <int> u;\r\nfor (int i = 0;i < q.size();i++)\r\n{\r\n    if (q[i] <= sqrt(n)) {\r\n        cout<<\"B \"<<q[i]<<'\\n';\r\n        ++qu;\r\n        int x;\r\n        cin>>x;\r\n        cout<<\"A \"<<q[i]<<'\\n';\r\n        ++qu;\r\n        cin>>x;\r\n        if (x != 0) {\r\n            int pw = q[i] * q[i];\r\n            while (pw <= n) {\r\n                cout<<\"A \"<<pw<<'\\n';\r\n                ++qu;\r\n                cin>>x;\r\n                if (x == 0) {pw/=q[i];break;}\r\n                pw*=q[i];\r\n            }\r\n            ans*=pw;\r\n            J = false;\r\n        }\r\n    }\r\n    else {\r\n        for (int j = i;j < q.size();j++)\r\n            u.push_back(q[j]);\r\n        break;\r\n    }\r\n}\r\nrandom_shuffle(u.begin(),u.end());\r\nfor (int i = 0;i < u.size();i++)\r\n{\r\n    if (rand() % 5 == 0) continue;\r\n    cout<<\"B \"<<u[i]<<'\\n';\r\n    int v;\r\n    cin>>v;\r\n    if (v == 0) continue;\r\n    ++qu;\r\n    if (qu == 1e4) {\r\n            cout<<\"C \"<<ans;return 0;\r\n    }\r\n    cout<<\"A \"<<u[i]<<'\\n';\r\n    cin>>v;\r\n    ++qu;\r\n    if (v == 1) {\r\n            ans*=u[i];\r\n    }\r\n    if (qu == 1e4) {\r\n        cout<<\"C \"<<ans;\r\n        return 0;\r\n    }\r\n}\r\ncout<<\"C \"<<ans;\r\nreturn 0;\r\n}\r\n"
}