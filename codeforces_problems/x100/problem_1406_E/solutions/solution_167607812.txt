{
    "id": 167607812,
    "contestId": 1406,
    "creationTimeSeconds": 1660034531,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "Billy2007"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 102,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 1024000,
    "source": "#include<bits/stdc++.h>\r\n#define fs(i,x,y,z) for(int i=x;i<=y;i+=z)\r\n#define ft(i,x,y,z) for(int i=x;i>=y;i+=z)\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define db double\r\n#define ms(a,b) memset(a,b,sizeof(a))\r\n#define sz(a) sizeof(a)\r\nusing namespace std;\r\nconst int rw[]={-1,0,1,0,-1,1,-1,1},cl[]={0,1,0,-1,-1,1,1,-1};\r\nconst int N=200001,inf=0x3f3f3f3f;\r\ninline int read(){\r\n\tint date=0,w=1;char c=0;\r\n\twhile(c<'0'||c>'9'){if(c=='-')w=-1;c=getchar();}\r\n\twhile(c>='0'&&c<='9'){date=date*10+c-'0';c=getchar();}\r\n\treturn date*w;\r\n}\r\nint srq,brest,tot,prms[N],n,ss,bigger,ans;//ss\u4ee3\u8868\u96c6\u5408\u7684\u5927\u5c0f\uff0cbigger\u8868\u793a\u90a3\u4e2a\u5927\u4e8esqrtn\u7684\t \r\nbool prm[N];\r\nint ask(int op,int val){\r\n\tcout<<char(op+'A')<<' '<<val<<endl;\r\n\tif(op!=2) return read();\r\n\telse return 0;\r\n}\r\nvoid gen(int need){\r\n\tint cur=ask(1,need),now=1;\r\n\twhile(1){\r\n\t\tnow*=need;if(now>n) break;\r\n\t\tcur=ask(0,now);//\u5982\u679c\u6ca1\u4e86\u90a3\u8bf4\u660e\u6700\u591a\u5230\u4e0a\u4e00\u6b21\u65b9\r\n\t\tif(!cur) return;\r\n\t\tans*=need;\r\n\t}\r\n}\r\nint main(){\r\n\tn=read(),srq=sqrt(n);\r\n\tfs(i,2,n,1){\r\n\t\tif(!prm[i]) prms[++tot]=i;\r\n\t\tfor(int j=1;i*prms[j]<=n&&j<=tot;j++){\r\n\t\t\tprm[prms[j]*i]=1;\r\n\t\t\tif(i%prms[j]==0) break;\r\n\t\t}\r\n\t}\r\n\tss=n;\r\n\tbrest=upper_bound(prms+1,prms+tot+1,srq)-prms-1;//\u7b2c\u4e00\u4e2a<=srq\r\n\t//cerr<<\"total primes is\"<<tot<<\",the first able(bigger than sqrt(n)) is\"<<brest+1<<\"\\n\";\r\n\tfs(i,1,100,1){\r\n\t\tint l=max(brest,(i-1)*100)+1,r=min(i*100,tot);//\u5904\u7406[L,R]\u8fd9\u4e00\u5757\u7684\r\n\t\tfs(j,l,r,1){\r\n\t\t\tint cur=ask(1,prms[j]);\r\n\t\t\tss-=cur;\r\n\t\t} \r\n\t\tint cur=ask(0,1);//\u5927\u5c0f\r\n\t\tif(ss!=cur){//\u5bc4\u4e86\uff01 \r\n\t\t\tfs(j,l,r,1){\r\n\t\t\t\tint cur=ask(0,prms[j]);\r\n\t\t\t\tif(cur){\r\n\t\t\t\t\tbigger=prms[j];\r\n\t\t\t\t\tbreak; \r\n\t\t\t\t} \r\n\t\t\t} \r\n\t\t\tbreak;\r\n\t\t} \r\n\t\tif(r==tot) break;//\u627e\u5b8c\u4e86 \r\n\t}\r\n\t//cerr<<\"the biggest prime is \"<<bigger<<'\\n';\r\n\tans=bigger?bigger:1;\r\n\tfs(i,1,brest,1) gen(prms[i]);\r\n\treturn ask(2,ans);\r\n}\r\n//\u8003\u8651\u52202\u7684\u500d\u6570\r\n//\u5982\u679cX\u8fd8\u5728\u91cc\u8fb9\uff0c\u8bf4\u660e2|X\r\n//\u52203 \r\n//\u4f1a\u8d85\r\n//\u8003\u8651\u5206\u5757\uff0cx>=sqrtn\u7684\u8d28\u56e0\u6570\u6700\u591a\u53ea\u67091\u4e2a\r\n//\u5148\u628a<=sqrtn\u4e2dx\u7684\u8d28\u56e0\u6570\u7b97\u51fa\u6765\r\n//\u7136\u540e\u4e00\u4e2a\u4e2a\u679a\u4e3e\r\n//\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7b97\u51fa\u6240\u6709\\le srq\u7684\u8d28\u56e0\u6570 \r\n//\u90a3>= srq\u7684\u600e\u4e48\u7b97\uff1f\r\n//\u5206\u5757\u3002\r\n//\u6309\u7167100\u4e2a\uff0c100\u4e2a\u8fd9\u6837\u5206\u5757 \r\n//\u6bcf\u6b21\u6da6\u5b8c\u5982\u679c\u53d1\u73b0delta\u4e0d\u4e00\u6837\uff0c\u90a3\u4e48\u5c31\u2014\u2014\u5bc4\u4e86\uff01 "
}