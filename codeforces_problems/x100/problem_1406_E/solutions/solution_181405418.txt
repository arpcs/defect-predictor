{
    "id": 181405418,
    "contestId": 1406,
    "creationTimeSeconds": 1668770046,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "Cxny"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 921600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define min(x, y) ((x) < (y) ? (x) : (y))\r\n#define max(x, y) ((x) > (y) ? (x) : (y))\r\n#define pb push_back\r\n#define ppb pop_back\r\n#define pf push_front\r\n#define ppf pop_front\r\n#define eb emplace_back\r\n#define ef emplace_front\r\n#define lowbit(x) (x & (-x))\r\n#define ti chrono::system_clock::now().time_since_epoch().count()\r\n#define Fin(x) freopen(x, \"r\", stdin)\r\n#define Fout(x) freopen(x, \"w\", stdout)\r\n#define Fio(x) Fin(x\".in\"), Fout(x\".out\");\r\n// #define SGT\r\n// #define int long long // int main() -> signed\r\n// #define PAIR\r\n#define ll long long\r\n#ifdef PAIR\r\n#define fi first\r\n#define se second\r\n#endif\r\n#ifdef SGT\r\n#define lson (p << 1)\r\n#define rson (p << 1 | 1)\r\n#define mid ((l + r) >> 1)\r\n#endif\r\n// #define DBG\r\nconst int maxn = 1e5 + 10, len = 100;\r\nint n;\r\nnamespace Interactor{\r\n    int x, num, lim = 1e4;\r\n    bool vis[maxn];\r\n    int runQuery(int type, int k){\r\n#ifdef DBG\r\n        if(++num > lim) cerr << \"Wrong Answer Too Many Querys\\n\", exit(3);\r\n        if(type == 1){int ret = 0; for(int i = k; i <= n; i += k) ret += (!vis[i]); return printf(\"%d\\n\", ret), fflush(stdout), ret;}\r\n        else if(type == 2){\r\n            for(int i = k; i <= n; i += k) if(!vis[i] && i != x) vis[i] = 1;\r\n            return 1;\r\n        }else if(type == 3){\r\n            if(k == x) cerr << \"ok Accepted using \" << num << \"querys\";\r\n            else cerr << \"Wrong Anser expected \" << x << \" found \" << k ;\r\n            exit(0);\r\n        }\r\n        return 114514;\r\n#else\r\n        // printf(\"%c %d\\n\", 'A' + type - 1, k), fflush(stdout); \r\n        int ret = 0;\r\n        if(type != 3) scanf(\"%d\", &ret);\r\n        return ret;\r\n#endif\r\n    }\r\n}\r\nint A(int x){\r\n    printf(\"A %d\\n\", x), fflush(stdout);\r\n    int ret; // scanf(\"%d\", &ret);\r\n    ret = Interactor::runQuery(1, x);\r\n    return ret;\r\n}\r\nvoid B(int x){printf(\"B %d\\n\", x), fflush(stdout); /*scanf(\"%d\", &x);*/ Interactor::runQuery(2, x);}\r\nint C(int x){printf(\"C %d\\n\", x), fflush(stdout); Interactor::runQuery(3, x); exit(0);}\r\nvector<int> s, b, pr;\r\nbool vis[maxn];\r\nsigned main(){\r\n    scanf(\"%d\", &n);\r\n    // n = 10000, Interactor::x = 99991;\r\n    // scanf(\"%d%d\", &n, &Interactor::x);\r\n    for(int i = 2; i <= n; i++){\r\n        if(!vis[i]){pr.pb(i); if(1ll * i * i <= n) s.pb(i); else b.pb(i);}\r\n        for(int j : pr){\r\n            if(i * j > n) break;\r\n            vis[i * j] = 1;\r\n            if(i % j == 0) break;\r\n        }\r\n    }\r\n    int x = 1;\r\n    for(int i : s){\r\n       B(i); int k = 1, pw = i;\r\n        while(A(pw)) k++, x *= i, pw *= i;\r\n    }\r\n    if(x != 1){\r\n        for(int i : s){\r\n            if(i * x > n) C(x);\r\n            if(A(i * x)) C(i * x);\r\n        }\r\n    }else{\r\n        // assert(A(1) + 1 != )\r\n        int rem = b.size() + 1;\r\n        for(int i = 0; i < b.size(); i++){\r\n            B(b[i]), rem--;\r\n            if(!((i + 1) % len) || i + 1 == b.size()){\r\n                int pre = i - i % len - 100, res = A(1);\r\n                if(res != rem){\r\n                    printf(\"! %d : %d\\n\", rem, res), fflush(stdout);\r\n                    // printf(\"qaq %d\\n\", pre);\r\n                    for(int j = max(pre, 0); j <= i; j++) if(A(b[j])) C(b[j]);\r\n                    assert(i + 1 == b.size());\r\n                    C(1);\r\n                }\r\n            }\r\n        }\r\n        C(1);\r\n    }\r\n    return 0;\r\n}"
}