{
    "id": 138522571,
    "contestId": 1406,
    "creationTimeSeconds": 1639042943,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "Wayne_Yan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 102,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 921600,
    "source": "#include <bits/extc++.h>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n#define int long long\r\ntypedef int64_t ll;\r\ntypedef long double ld;\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n#define pb emplace_back\r\n#define mp make_pair\r\n#define mt make_tuple\r\n#define pii pair<int,int>\r\n#define F(n) Fi(i,n)\r\n#define Fi(i,n) Fl(i,0,n)\r\n#define Fl(i,l,n) for(int i=l;i<n;i++)\r\n#define RF(n) RFi(i,n)\r\n#define RFi(i,n) RFl(i,0,n)\r\n#define RFl(i,l,n) for(int i=n-1;i>=l;i--)\r\n#define all(v) begin(v),end(v)\r\n#define siz(v) (ll(v.size()))\r\n#define get_pos(v,x) (lower_bound(all(v),x)-begin(v))\r\n#define sort_uni(v) sort(begin(v),end(v)),v.erase(unique(begin(v),end(v)),end(v))\r\n#define mem(v,x) memset(v,x,sizeof v)\r\n#define ff first\r\n#define ss second\r\n#define mid ((l+r)>>1)\r\n#define RAN(a,b) uniform_int_distribution<int> (a, b)(rng)\r\n\r\ntemplate <typename T> using max_heap = __gnu_pbds::priority_queue<T,less<T> >;\r\ntemplate <typename T> using min_heap = __gnu_pbds::priority_queue<T,greater<T> >;\r\ntemplate <typename T> using rbt = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;\r\n\r\nconst int maxN = 1e5+10;\r\nvector<int> primes;\r\nbool isprime[maxN];\r\n\r\nint n;\r\n\r\nint qA(int x){\r\n  if(x > n) return -1;\r\n  if(x <= 0) return -1;\r\n  printf(\"A %d\\n\", x);\r\n  cout.flush();\r\n  int a;\r\n  cin >> a;\r\n  return a;\r\n}\r\n\r\nint qB(int x){\r\n  if(x > n) return -1;\r\n  if(x <= 0) return -1;\r\n  printf(\"B %d\\n\", x);\r\n  cout.flush();\r\n  int a;\r\n  cin >> a;\r\n  return a;\r\n}\r\n\r\nvoid op(int x){\r\n  printf(\"C %d\\n\", x);\r\n  cout.flush();\r\n  exit(0);\r\n}\r\n\r\nvector<int> remain;\r\nbool inremain[maxN];\r\nsigned main(){\r\n  \r\n  fill(isprime, isprime+maxN, 1);\r\n  primes.pb(1);\r\n\r\n  Fl(i, 2, 100001){\r\n    if(isprime[i]){\r\n      primes.pb(i);\r\n      for(int j = 2; i * j < maxN; j++){\r\n        isprime[i*j] = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  cin >> n;\r\n\r\n  F(66){\r\n    qB(primes[i+1]);\r\n  }\r\n\r\n  int rest_size1 = qA(1);\r\n  \r\n  for(int i : primes){\r\n    if(i <= n && (i==1 || i>primes[66])) {remain.pb(i); inremain[i] = true;}\r\n  }\r\n  \r\n  if(rest_size1 > (int)remain.size()){\r\n    int ans = 1;\r\n    for(int i : primes){\r\n      if(i == 1) continue;\r\n      if(i > n) break;\r\n\r\n      int curr = i;\r\n      while(true){\r\n        int res = qA(curr);\r\n        if(res == -1 || res == inremain[curr]){\r\n          ans *= curr/i;\r\n          \r\n          break;\r\n        }else{\r\n          curr *= i;\r\n        }\r\n      }\r\n    }\r\n\r\n    op(ans);\r\n\r\n  }else if(rest_size1 == (int)remain.size()){\r\n    vector<int> erased;\r\n\r\n    while(true){\r\n      if(remain.size() < 10){\r\n        for(int i : remain){\r\n          if(i == 1) continue;\r\n          else qB(i);\r\n        }\r\n        for(int i : remain){\r\n          if(i == 1) continue;\r\n          if(qA(i) == 1){\r\n            op(i);\r\n          }\r\n        }\r\n        op(1);\r\n      }\r\n\r\n      int m = remain.size()/2;\r\n      F(m){\r\n        int bk = remain.back();\r\n        remain.pop_back();\r\n        erased.pb(bk);\r\n        qB(bk);\r\n      }\r\n\r\n      int rest_size2 = qA(1);\r\n      if(rest_size2 == (int)remain.size()){\r\n        erased.clear();\r\n      }else{\r\n        for(int i : erased){\r\n          if(qA(i) == 1) op(i);\r\n        }\r\n      }\r\n    }\r\n\r\n  }else{\r\n    assert(0);\r\n  }\r\n\r\n\r\n  return 0;\r\n}\r\n"
}