{
    "id": 128043279,
    "contestId": 1406,
    "creationTimeSeconds": 1630931424,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "perdu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 4300800,
    "source": "#include <bits/stdc++.h>\r\n#define N 100010\r\n#define ll long long\r\n#define Re register\r\n#define mo 998244353//((int)1e9+7)\r\n#define squ(x) ((x)*(x))\r\n#define db double\r\n#define cmax(a,b) a=max(a,b)\r\n#define cmin(a,b) a=min(a,b)\r\n#define rep(i,l,r) for(Re int i=l;i<=r;++i)\r\n#define drep(i,r,l)for(Re int i=r;i>=l;--i)\r\n#define pb push_back\r\nusing namespace std;\r\n\r\ninline ll read() {\r\n\tll x = 0, f = 1; char ch = getchar();\r\n\twhile (ch < '0' || ch > '9') {if (ch == '-')f = -1; ch = getchar();}\r\n\twhile (ch >= '0' && ch <= '9') {x = x * 10 + ch - '0'; ch = getchar();}\r\n\treturn x * f;\r\n}\r\nint cnt, pri[N];\r\nbool isp[N];\r\nvoid Pri(int n) {\r\n\tfor (int i = 2; i <= n; ++i) {\r\n\t\tif (!isp[i])pri[++cnt] = i;\r\n\t\tfor (int j = 1; j <= cnt && i * pri[j] <= n; ++j) {\r\n\t\t\tisp[i * pri[j]] = 1;\r\n\t\t\tif (!(i % pri[j])) break;\r\n\t\t}\r\n\t}\r\n}\r\nint sum, lim, n, p, l;\r\nbool f[N];\r\nvoid ask(char ch, int s) {printf(\"%c %d\\n\", ch, s); fflush(stdout);}\r\nvoid del(int t) {sum -= f[t]; f[t] = 0;}\r\nvoid Find() {\r\n\tfor (l = 1; l <= cnt; ++l)if (pri[l] > lim)break;\r\n\tp = 1;\r\n\tint k = 0, pre = l - 1, x;\r\n\trep(i, l, cnt) {\r\n\t\t++k;\r\n\t\task('B', pri[i]);\r\n\t\tscanf(\"%d\", &x);\r\n\t\tfor (int j = pri[i]; j <= n; j += pri[i])del(j);\r\n\t\tif (k == 100 || i == cnt) {\r\n\t\t\task('A', 1);\r\n\t\t\tscanf(\"%d\", &x);\r\n\t\t\tif (x != sum) {\r\n\t\t\t\trep(j, pre + 1, i) {\r\n\t\t\t\t\task('A', pri[j]);\r\n\t\t\t\t\tscanf(\"%d\", x);\r\n\t\t\t\t\tif (x == 1) {p = pri[j]; return;}\r\n\t\t\t\t}\r\n\t\t\t} k = 0, pre = i;\r\n\t\t}\r\n\t}\r\n}\r\nint main() {\r\n\t//freopen(\"in.txt\", \"r\", stdin);\r\n\tPri(100000);\r\n\tn = read(), lim = (int)sqrt(n);\r\n\trep(i, 1, n)f[i] = 1; sum = n;\r\n\tFind();\r\n\trep(i, 1, cnt)if (f[pri[i]]) {\r\n\t\task('B', pri[i]);\r\n\t\tint x; scanf(\"%d\", &x);\r\n\t\tfor (int j = pri[i]; j <= n; j += pri[i])del(j);\r\n\t}\r\n\tint ans = p;\r\n\trep(i, 1, l - 1) {\r\n\t\tint cur = pri[i], x;\r\n\t\twhile (cur <= n) {\r\n\t\t\task('A', cur);\r\n\t\t\tscanf(\"%d\", &x);\r\n\t\t\tif (x)ans *= pri[i];\r\n\t\t\telse break;\r\n\t\t\tif (cur <= n / pri[i])cur *= pri[i];\r\n\t\t\telse break;\r\n\t\t}\r\n\t}\r\n\task('C', ans);\r\n\treturn 0;\r\n}"
}