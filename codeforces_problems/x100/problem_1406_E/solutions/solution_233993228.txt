{
    "id": 233993228,
    "contestId": 1406,
    "creationTimeSeconds": 1700802630,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "BeezMinh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 204800,
    "source": "/*\r\nBeezMinh\r\n08:45 UTC+7\r\n24/11/2023\r\n*/\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int N = 1e5 + 0;\r\nint n;\r\n\r\nvector<int> small; // small primes, <= sqrt(n)\r\nvector<int> big; // big primes\r\nbool notP[N + 8], mark[N + 8];\r\n\r\nvoid sieve() {\r\n\tnotP[1] = 1; int p, kp;\r\n\tfor (p = 2; p <= N; ++p) if (!notP[p]) \r\n\t\tfor (kp = p + p; kp <= N; kp += p) notP[kp] = 1;\r\n\tfor (p = 1; p * p <= n; ++p) if (!notP[p]) small.push_back(p);\r\n\tfor (; p <= n; ++p) if (!notP[p]) big.push_back(p);\r\n}\r\n\r\nint A(int x) {int res; cout << \"A \" << x << endl; cin >> res; return res;}\r\nint B(int x) {int res; cout << \"B \" << x << endl; cin >> res; return res;}\r\nvoid C(int x) {cout << \"C \" << x << endl;}\r\n\r\nint custom_log(int x) {\r\n\tint cur = 1, res = 0;\r\n\twhile (cur * x <= n) cur *= x, ++res;\r\n\treturn res;\r\n}\r\n\r\nint pw(int p, int exp) {\r\n\tint res = 1;\r\n\tfor (int i = 0; i < exp; ++i) res *= p;\r\n\treturn res;\r\n}\r\n\r\nint ans = 1;\r\nvoid farm() {\r\n\tint p, exp, l, r, mid, tmp;\r\n\tfor (int p : small) {\r\n\t\ttmp = B(p); \r\n\t\tl = 1; r = custom_log(p); \r\n\t\twhile (l <= r) {\r\n\t\t\tmid = (l + r) / 2;\r\n\t\t\tif (A(pw(p, mid))) l = mid + 1;\r\n\t\t\telse r = mid - 1;\r\n\t\t}\r\n\t\texp = l - 1;\r\n\t\twhile (exp > 0) ans *= p, --exp;\r\n\t}\r\n}\r\n\r\nset<int> remaining;\r\nvoid skill() {\r\n\tfor (int i : big) remaining.insert(i);\r\n\tint l = 0, r = big.size() - 1, mid, sz, tmp;\r\n\twhile (l <= r) {\r\n\t\tmid = (l + r) / 2;\r\n\t\tfor (int i = l; i <= mid; ++i) {\r\n\t\t\ttmp = B(big[i]); \r\n\t\t\tif (tmp > mark[big[i]]) {ans *= big[i]; return;}\r\n\t\t\tmark[big[i]] = 1;\r\n\t\t\tremaining.erase(big[i]);\r\n\t\t}\r\n\t\tsz = remaining.size();\r\n\t\tif (A(1) > sz + 1) {\r\n\t\t\tfor (int i = l; i <= mid; ++i) if (A(big[i])) {\r\n\t\t\t\tans *= big[i];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse l = mid + 1;\r\n\t}\r\n}\r\n\r\nsigned main() {\r\n\t// ios_base::sync_with_stdio(0);\r\n\t// cin.tie(0); cout.tie(0);\r\n\tcin >> n; sieve();\r\n\tfarm(); skill();\r\n\tC(ans);\r\n}"
}