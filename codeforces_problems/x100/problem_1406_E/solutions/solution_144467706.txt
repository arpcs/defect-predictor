{
    "id": 144467706,
    "contestId": 1406,
    "creationTimeSeconds": 1643513316,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "continue_and_break"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "PyPy 3",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 102,
    "timeConsumedMillis": 545,
    "memoryConsumedBytes": 9932800,
    "source": "def SieveOfEratosthenes(limit=10**6):\r\n    isPrime = [True]*(limit+1)\r\n    isPrime[0] = isPrime[1] = False\r\n    primes = []\r\n    for i in range(2, limit+1):\r\n        if not isPrime[i]:continue\r\n        primes += [i]\r\n        for j in range(i*i, limit+1, i):\r\n            isPrime[j] = False\r\n    return primes\r\nn = int(input())\r\nprimes = SieveOfEratosthenes(n)\r\nif n == 1:\r\n    print(\"C\", n, flush=True)\r\n    quit()\r\nans = 1\r\nsq = n**0.5\r\nfor prime in primes:\r\n    if prime <= sq:\r\n        print(\"B\", prime, flush=True)\r\n        q = int(input())\r\n        nex = prime\r\n        while nex <= n:\r\n            print(\"B\", nex, flush=True)\r\n            q = int(input())\r\n            if q == 1: ans*= prime\r\n            else:break\r\n            nex *= prime\r\n    else:break\r\nprint(\"A\", 1, flush=True)\r\nleft = int(input())\r\nalpha = primes.index(prime)\r\nomega = len(primes) - 1\r\nexists=False\r\nwhile alpha < omega:\r\n    mid = (alpha+omega)//2\r\n    count = 0\r\n    for i in range(alpha, mid+1):\r\n        print(\"B\", primes[i], flush=True)\r\n        x=int(input())\r\n        count += x\r\n    print(\"A\", 1, flush=True)\r\n    result = int(input())\r\n    if result == left - count:\r\n        left = left - count\r\n        alpha = mid+1\r\n    else:\r\n        for i in range(alpha, mid + 1):\r\n            print(\"B\", primes[i], flush=True)\r\n            x = int(input())\r\n            if x == 1:\r\n                ans *= primes[i]\r\n                break\r\n        exists = True\r\n        omega = mid\r\n        break\r\nif not exists:\r\n    print(\"B\", primes[omega], flush=True)\r\n    cur = int(input())\r\n    print(\"B\", primes[omega], flush=True)\r\n    cur2 = int(input())\r\n    if cur2 == cur:ans*=primes[omega]\r\nprint(\"C\", ans, flush=True)"
}