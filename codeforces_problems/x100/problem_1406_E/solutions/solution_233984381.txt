{
    "id": 233984381,
    "contestId": 1406,
    "creationTimeSeconds": 1700793668,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "CDuongg"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 716800,
    "source": "/*\r\n#pragma GCC optimize(\"Ofast,unroll-loops\")\r\n#pragma GCC target(\"avx2,fma,bmi,bmi2,sse4.2,popcnt,lzcnt\")\r\n*/\r\n\r\n#include <bits/stdc++.h>\r\n#define taskname \"\"\r\n#define all(x) x.begin(), x.end()\r\n#define rall(x) x.rbegin(), x.rend()\r\n#define i64 long long\r\n#define pb push_back\r\n#define ff first\r\n#define ss second\r\n#define isz(x) (int)x.size()\r\nusing namespace std;\r\n\r\nconst int mxN = 2e5 + 5;\r\nconst int mod = 1e9 + 7;\r\nconst i64 oo = 1e18;\r\n\r\nint n, res, primeleft, cope;\r\nbool prime[mxN];\r\n\r\nvoid solve() {\r\n    cin >> n; res = 1; cope = 3;\r\n    for (int i = 2; i * i <= n; ++i, ++cope) if (!prime[i]) {\r\n        cout << \"B \" << i << endl; int cnt; cin >> cnt;\r\n        bool flag = true;\r\n        int cur = i;\r\n        while (flag && cur <= n) {\r\n            cout << \"A \" << cur << endl;\r\n            int cnt; cin >> cnt;\r\n            if (cnt == 0) flag = false;\r\n            else cur *= i, res *= i;\r\n        }\r\n    }\r\n\r\n    cout << \"A \" << 1 << endl;\r\n    cin >> primeleft;\r\n\r\n    vector<int> allnum;\r\n    for (int i = cope; i <= n; ++i)\r\n        if (!prime[i]) allnum.emplace_back(i);\r\n\r\n    if (isz(allnum) + 2 != primeleft) {\r\n        cout << \"C \" << res << endl;\r\n    }\r\n\r\n    assert(isz(allnum) + 2 == primeleft);\r\n\r\n    int l = 0, r = isz(allnum) - 1;\r\n    while (l <= r) {\r\n        int mid = (l + r) >> 1;\r\n        for (int i = l; i <= mid; ++i) {\r\n            cout << \"B \" << allnum[i] << endl;\r\n            int cnt; cin >> cnt;\r\n            --primeleft;\r\n        }\r\n        cout << \"A \" << 1 << endl;\r\n        int cleft; cin >> cleft;\r\n        if (cleft == primeleft) l = mid + 1;\r\n        else { r = mid; break; }\r\n    }\r\n\r\n    for (int i = l; i <= r; ++i) {\r\n        cout << \"A \" << allnum[i] << endl;\r\n        int cnt; cin >> cnt;\r\n        if (cnt) res *= allnum[i];\r\n    }\r\n\r\n    cout << \"C \" << res << endl;\r\n}\r\n\r\nsigned main() {\r\n\r\n#ifndef CDuongg\r\n    if(fopen(taskname\".inp\", \"r\"))\r\n        assert(freopen(taskname\".inp\", \"r\", stdin)), assert(freopen(taskname\".out\", \"w\", stdout));\r\n#else\r\n    freopen(\"bai3.inp\", \"r\", stdin);\r\n    freopen(\"bai3.out\", \"w\", stdout);\r\n    auto start = chrono::high_resolution_clock::now();\r\n#endif\r\n\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    \r\n    prime[0] = prime[1] = true;\r\n    for (int i = 2; i * i < mxN; ++i) if (!prime[i]) {\r\n        for (int j = i * i; j < mxN; j += i) prime[j] = true;\r\n    }\r\n\r\n    int t = 1; //cin >> t;\r\n    while(t--) solve();\r\n\r\n#ifdef CDuongg\r\n   auto end = chrono::high_resolution_clock::now();\r\n   cout << \"\\n\"; for(int i = 1; i <= 100; ++i) cout << '=';\r\n   cout << \"\\nExecution time: \" << chrono::duration_cast<chrono::milliseconds> (end - start).count() << \"[ms]\" << endl;\r\n#endif\r\n\r\n}\r\n"
}