{
    "id": 233998158,
    "contestId": 1406,
    "creationTimeSeconds": 1700806264,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "peepdamonster"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 108,
    "memoryConsumedBytes": 614400,
    "source": "// #pragma GCC optimize(\"Ofast,unroll-loops\")\r\n// #pragma GCC target(\"avx2,popcnt,lzcnt,abm,bmi,bmi2,fma,tune=native\")\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#include <bits/extc++.h>\r\nusing namespace __gnu_pbds;\r\n\r\ntemplate<class T>\r\nusing ordered_set = tree< T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\ntemplate<class T>\r\nusing ordered_multiset = tree< T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\n\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define ld long double\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define setpre(i) setprecision(i)<<fixed\r\n#define foru(i, a, b) for(int i=a;i<=b;++i)\r\n#define ford(i, a, b) for(int i=a;i>=b;--i)\r\n#define mp make_pair\r\n#define moo cout<<\"moo \"\r\n#define fi first\r\n#define se second\r\n\r\nll lmod = 1e9 + 7;\r\ntypedef vector<int> vi;\r\ntypedef vector< vector<int> > vvi;\r\ntypedef pair<int, int> ii;\r\ntypedef pair<double, double> dd;\r\n\r\nbool composite[100001];\r\nvi prime;\r\nvoid sieve(){\r\n    foru(i, 2, 100000){\r\n        for(int j = (i << 1); j <= 100000; j += i) composite[j] = 1;\r\n    }\r\n    foru(i, 2, 100000) if(!composite[i]) prime.pb(i);\r\n}\r\n\r\nint main(){\r\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n\r\n    sieve();\r\n\r\n    int n; cin >> n;\r\n    if(n == 1){\r\n        cout << \"C 1\" << endl;\r\n        return 0;\r\n    } \r\n    int cur = n;\r\n\r\n    int ub = upper_bound(prime.begin(), prime.end(), n) - 1 - prime.begin();\r\n\r\n    int pos = 0;\r\n    foru(i, 0, prime.size() - 1){\r\n        if(prime[i] > sqrt(n) + 5) {\r\n            pos = i;\r\n            break;\r\n        }\r\n\r\n        cout << \"B \" << prime[i] << endl;\r\n        int z; cin >> z;\r\n        cur -= z;\r\n    }\r\n\r\n    cout << \"A \" << 1 << endl;\r\n    int temp2; cin >> temp2;\r\n    if(cur != temp2){\r\n        if(n == 100000) assert(0);\r\n        vi z;\r\n        foru(i, 0, pos - 1){\r\n            cout << \"A \" << prime[i] << endl;  \r\n            int temp; cin >> temp;\r\n            if(temp) z.pb(prime[i]);\r\n        }\r\n        int ans = 1;\r\n        for(int i: z){\r\n            int temp = 1;\r\n            int cur = i;\r\n            while(temp){\r\n                cur *= i;\r\n                cout << \"A \" << cur << endl;  \r\n                cin >> temp;\r\n            }\r\n            ans *= cur / i;\r\n        }\r\n\r\n        cout << \"C \" << ans << endl;\r\n    }\r\n    else{\r\n        bool zz = false;\r\n        int l = pos, r = ub;\r\n        while(l <= r){\r\n            int mid = (l + r) >> 1;\r\n            if(!zz){\r\n                foru(i, l, mid){\r\n                    cout << \"B \" << prime[i] << endl;\r\n                    int temp; cin >> temp;\r\n                    cur -= temp;\r\n                }\r\n                cout << \"A \" << 1 << endl;\r\n                int temp; cin >> temp;\r\n                if(temp != cur) {\r\n                    zz = true;\r\n                    r = mid;\r\n                }\r\n                else l = mid + 1;\r\n            }\r\n            else{\r\n                foru(i, l, mid){\r\n                    cout << \"A \" << prime[i] << endl;\r\n                    int temp; cin >> temp;\r\n                    if(temp) {\r\n                        cout << \"C \" << prime[i] << endl;\r\n                        return 0;\r\n                    }\r\n                }\r\n                l = mid + 1;\r\n                \r\n            }\r\n        }\r\n        cout << \"C \" << prime[r] << endl;\r\n    }\r\n\r\n\r\n\r\n    return 0;\r\n}"
}