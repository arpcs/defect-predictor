{
    "id": 236366020,
    "contestId": 1406,
    "creationTimeSeconds": 1702044711,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "sdffg"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long LL;\r\n\r\nconst int N = 100010, BLOCK = 97, SQRT = 316;\r\nconst int INF = 0x3f3f3f3f;\r\n\r\nint n;\r\nint pri[N], cnt, ans;\r\nbool st[N];\r\n/*\r\nint ask_del(int x)\r\n{\r\n    cout << \"B \" << x << \"\\n\";\r\n    int res;\r\n    cin >> res;\r\n    return res;\r\n}\r\n\r\nint ask(int x)\r\n{\r\n    cout << \"A \" << x << \"\\n\";\r\n    int res;\r\n    cin >> res;\r\n    return res;\r\n}\r\n\r\nvoid print_ans(int x)\r\n{\r\n    cout << \"C \" << x << \"\\n\";\r\n}\r\n\r\nvoid init(int n)\r\n{\r\n    for(int i = 2; i <= n; i ++ )\r\n    {\r\n        if(!st[i]) pri[++ cnt] = i;\r\n        for(int j = 1; j <= cnt && pri[j] * i <= n; j ++ )\r\n        {\r\n            st[pri[j] * i] = true;\r\n            if(i % pri[j] == 0) break;\r\n        }\r\n    }   \r\n}*/\r\n\r\nint ask(int x) {\r\n\tcout << \"A \" << x << endl;\r\n\tint res; cin >> res;\r\n\treturn res;\r\n}\r\nint ask_del(int x) {\r\n\tcout << \"B \" << x << endl;\r\n\tint res; cin >> res;\r\n\treturn res;\r\n}\r\nvoid report_ans(int x) {\r\n\tcout << \"C \" << x << endl;\r\n}\r\nvoid sieve(int lim) {\r\n\tfor (int i = 2; i <= lim; ++i) {\r\n\t\tif (!v[i]) {\r\n\t\t\tpri[++cnt] = i;\r\n\t\t}\r\n\t\tfor (int j = 1; j <= cnt && pri[j] * i <= lim; ++j) {\r\n\t\t\tv[i * pri[j]] = 1;\r\n\t\t\tif (i % pri[j] == 0) break;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nint main()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    \r\n    cin >> n;\r\n    sieve(n);\r\n    int sec = cnt + 1;\r\n    ans = 1; \r\n\r\n    for(int i = 1; i <= cnt; i ++ )\r\n    {\r\n        if(pri[i] > SQRT)\r\n        {\r\n            sec = i;\r\n            break;\r\n        }\r\n        int res = ask_del(pri[i]);\r\n        if(!res) continue;\r\n        int last = 0;\r\n        bool falg = false;\r\n        for(LL j = pri[i]; j <= n; j *= pri[i])\r\n        {\r\n            if(!ask(j))\r\n            {\r\n                falg = true;\r\n                ans *= j / pri[i];\r\n                break;\r\n            }\r\n            last = j;\r\n        }\r\n        if(!falg) ans *= last;\r\n    }\r\n    \r\n    if(ans > 1)\r\n    {\r\n        for(int j = sec; j <= cnt; j ++ )\r\n        {\r\n           if(1ll * pri[j] * ans > n) continue;\r\n           if(ask(ans * pri[j]))\r\n           {\r\n               ans *= pri[j];\r\n               break;\r\n           }\r\n        }   \r\n        report_ans(ans);\r\n    }\r\n    else\r\n    {\r\n        for(int i = sec; i <= cnt; i += BLOCK )\r\n        {\r\n            int j = min(cnt, i + BLOCK - 1);\r\n            for(int k = i; k <= j; k ++ )\r\n               ask_del(pri[k]);\r\n            \r\n            int res = ask(1);\r\n            if(res > cnt - j + 1)\r\n            {\r\n                assert(res == 1 + cnt - j + 1);\r\n                for(int k = i; k <= j; k ++ )\r\n                   if(ask(pri[k])) \r\n                   {\r\n                       ans = pri[k];\r\n                       break;\r\n                   }\r\n                break;   \r\n            }\r\n        }\r\n        report_ans(ans);\r\n    }\r\n    return 0;\r\n}"
}