{
    "id": 212037206,
    "contestId": 1406,
    "creationTimeSeconds": 1688453373,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "lijiahe2333"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 102,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 512000,
    "source": "// problem: CF1406E\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define pb push_back\r\n#define mk make_pair\r\n#define lob lower_bound\r\n#define upb upper_bound\r\n#define fi first\r\n#define se second\r\n#define SZ(x) ((int)(x).size())\r\n\r\ntypedef unsigned int uint;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef pair<int, int> pii;\r\n\r\ntemplate<typename T> inline void ckmax(T& x, T y) { x = (y > x ? y : x); }\r\ntemplate<typename T> inline void ckmin(T& x, T y) { x = (y < x ? y : x); }\r\n\r\nconst int MAXN = 1e5;\r\nconst int SQRT = 316;\r\nconst int BLOCK_SIZE = 97;\r\n\r\nint ask(int x) {\r\n\tcout << \"A \" << x << endl;\r\n\tint res; cin >> res;\r\n\treturn res;\r\n}\r\nint ask_and_del(int x) {\r\n\tcout << \"B \" << x << endl;\r\n\tint res; cin >> res;\r\n\treturn res;\r\n}\r\nvoid report_ans(int x) {\r\n\tcout << \"C \" << x << endl;\r\n}\r\n\r\nint n, ans;\r\nint p[MAXN + 5], cnt_p;\r\nbool v[MAXN + 5];\r\nvoid sieve(int lim) {\r\n\tfor (int i = 2; i <= lim; ++i) {\r\n\t\tif (!v[i]) {\r\n\t\t\tp[++cnt_p] = i;\r\n\t\t}\r\n\t\tfor (int j = 1; j <= cnt_p && p[j] * i <= lim; ++j) {\r\n\t\t\tv[i * p[j]] = 1;\r\n\t\t\tif (i % p[j] == 0) break;\r\n\t\t}\r\n\t}\r\n}\r\nint main() {\r\n\tcin >> n;\r\n\tsieve(n);\r\n\tans = 1;\r\n\t// first part: \r\n\tint second_part_start = cnt_p + 1;\r\n\tfor (int i = 1; i <= cnt_p; ++i) {\r\n\t\tif (p[i] > SQRT) {\r\n\t\t\tsecond_part_start = i;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tint res = ask_and_del(p[i]);\r\n\t\tif (!res) continue;\r\n\t\tint lastval = 0, flag = 0;\r\n\t\tfor (ll j = p[i]; j <= n; j *= p[i]) {\r\n\t\t\tif (!ask(j)) {\r\n\t\t\t\tans *= j / p[i];\r\n\t\t\t\tflag = 1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tlastval = j;\r\n\t\t}\r\n\t\tif (!flag) {\r\n\t\t\tans *= lastval;\r\n\t\t}\r\n\t} // 238\r\n\t\r\n\t// second part:\r\n\tif (ans > 1) {\r\n\t\tfor (int i = second_part_start; i <= cnt_p; ++i) {\r\n\t\t\tif ((ll)p[i] * ans > n)\r\n\t\t\t\tcontinue;\r\n\t\t\tif (ask(p[i] * ans)) {\r\n\t\t\t\tans *= p[i];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} // 9765\r\n\t\treport_ans(ans);\r\n\t} else {\r\n\t\t// \u5206\u5757\r\n\t\tfor (int i = second_part_start; i <= cnt_p; i += BLOCK_SIZE) {\r\n\t\t\tint j = min(cnt_p, i + BLOCK_SIZE - 1);\r\n\t\t\tfor (int k = i; k <= j; ++k) {\r\n\t\t\t\task_and_del(p[k]);\r\n\t\t\t}\r\n\t\t\tint res = ask(1);\r\n\t\t\tif (res > 1 + cnt_p - j) {\r\n\t\t\t\tassert(res == 1 + cnt_p - j + 1);\r\n\t\t\t\tfor (int k = i; k <= j; ++k) {\r\n\t\t\t\t\tif (ask(p[k])) {\r\n\t\t\t\t\t\tans = p[k];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} // 9961\r\n\t\treport_ans(ans);\r\n\t}\r\n\treturn 0;\r\n}\r\n"
}