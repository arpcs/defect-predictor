{
    "id": 122418219,
    "contestId": 1406,
    "creationTimeSeconds": 1626249892,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "SoiMae"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 102,
    "timeConsumedMillis": 170,
    "memoryConsumedBytes": 7065600,
    "source": "#include<bits/stdc++.h>\n#define NN 200100\n\nusing namespace std;\nusing INT=long long;\n\nconst int M = 10000;\n\nint flag[NN], prime[NN], vst[NN];\nint nn;\nint n;\n\nint oper = 0;\n\nvoid pre() {\n\tint tot = 0;\n\tfor(int i = 2; i <= n; i ++) {\n\t\tif(flag[i]) continue;\n\t\tprime[++nn] = i;\n\t\tfor(int j = i; j <= n; j += i) {\n\t\t\tif(flag[j]) continue;\n\t\t\tflag[j] = i;\n\t\t}\n\t}\n}\n\nint ask(int a, int op) {\n\toper ++;\n\tif(oper >= M) assert(0);\n\tchar c = 'A';\n\tif(op == 2) c = 'B';\n\tprintf(\"%c %d\\n\", c, a);\n\tfflush(stdout);\n\tint b; scanf(\"%d\", &b);\n\treturn b;\n}\nvoid ask(int a) {\n\tprintf(\"C %d\\n\", a);\n\tfflush(stdout);\n\texit(0);\n}\n\nvoid solve(int x) {\n\tfor(int i = 1; i <= n; i ++) if(i % x) vst[i] = 0;\n\tint tot = 0;\n\tfor(int j = 1; j <= n; j ++) if(vst[j]) tot ++;\n\tif(tot <= 8000) {\n\t\tfor(int j = n; j >= 1; j --) {\n\t\t\tif(!vst[j]) continue;\n\t\t\tint cnt = ask(j, 1);\n\t\t\tif(cnt) ask(j);\n\t\t}\n\t}\n\tvector <int> vec;\n\tfor(int i = 1; i <= n; i ++) if(vst[i]) vec.push_back(i);\n\tint st = 0;\n\tfor(int i = 1; i <= nn; i ++) {\n\t\tif(prime[i] <= x) continue;\n\t\tst = i;\n\t\tbreak;\n\t}\n\twhile(vec.size() > 8000 && st <= nn) {\n\t\tvector <int> tmp;\n\t\tint p = prime[st];\n\t\tint cnt = ask(p, 2);\n\t\tcnt = ask(p, 1);\n\t\tfor(int v : vec) {\n\t\t\tif(v % p == 0 && cnt) tmp.push_back(v);\n\t\t\tif(v % p && cnt == 0) tmp.push_back(v);\n\t\t}\n\t\tvec.clear();\n\t\tvec = tmp;\n\t\tst ++;\n\t}\n\treverse(vec.begin(), vec.end());\n\tfor(int v : vec) {\n\t\tint cnt = ask(v, 1);\n\t\tif(cnt) ask(v);\n\t}\n}\n\nint main() {\n\tcin >> n;\n\tfor(int i = 1; i <= n; i ++) vst[i] = 1;\n\tpre();\n\tint st = 0;\n\tfor(int i = 1; i <= nn; i ++) {\n\t\tif(prime[i] <= 320) {\n\t\t\tint x = ask(prime[i], 2);\n\t\t\tx = ask(prime[i], 1);\n\t\t\tif(x) solve(prime[i]);\n\t\t\tfor(int j = prime[i]; j <= n; j += prime[i]) vst[j] = 0;\n\t\t\tcontinue;\n\t\t}\n\t\tst = i - 1;\n\t\tbreak;\n\t}\n\tif(st == 0) ask(1);\n\tint ed = nn + 1;\n\tint tot = ed - st;\n\twhile(st + 1 < ed) {\n\t\tint md = (st + ed) >> 1;\n\t\ttot = ask(1, 1);\n\t\tfor(int i = st + 1; i <= md; i ++) {\n\t\t\task(prime[i], 2);\n\t\t\ttot --;\n\t\t}\n\t\tint cnt = ask(1, 1);\n\t\tif(cnt == tot) st = md;\n\t\telse {\n\t\t\tfor(int i = st + 1; i <= md; i ++) {\n\t\t\t\tint cnt = ask(prime[i], 1);\n\t\t\t\tif(cnt) ask(prime[i]);\n\t\t\t}\n\t\t\tassert(0);\n\t\t}\n\t}\n\task(1);\n\t\n\treturn 0;\n}\n           "
}