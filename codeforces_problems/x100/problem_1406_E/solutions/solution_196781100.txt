{
    "id": 196781100,
    "contestId": 1406,
    "creationTimeSeconds": 1678448383,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "KseniaShk"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\nusing ld = long double;\r\nusing pi = pair<int, int>;\r\nusing pl = pair<ll, ll>;\r\n\r\ntemplate<class T>\r\nbool Max(T& a, const T& b) {\r\n    if (b > a) {\r\n        a = b;\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\ntemplate<class T>\r\nbool Min(T& a, const T& b) {\r\n    if (b < a) {\r\n        a = b;\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n//#define int int64_t\r\n#define vec vector\r\n//#define mp make_pair\r\n#define pb push_back\r\n#define all(x) x.begin(), x.end()\r\n#define rall(a) a.rbegin(), a.rend()\r\n#define input(x) for (int i = 0; i < (int)x.size(); ++i) cin >> x[i];\r\n#define print(x) for (int i = 0; i < (int)x.size(); ++i) cout << x[i] << \" \";\r\n#define prinT(x) for (int i = 0; i < (int)x.size(); ++i) cout << x[i] << '\\n';\r\n#define sz(x) (int)x.size()\r\n\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC target(\"avx,avx2,fma\")\r\n\r\nvoid file_input() {\r\n    freopen(\"multiply.in\", \"r\", stdin);\r\n    freopen(\"multiply.out\", \"w\", stdout);\r\n}\r\n\r\n//#define int long long\r\n//#define endl '\\n'\r\n\r\nconst int INF = 1e18 + 333, N = (1 << 23), K = 450;\r\n\r\nsigned main() {\r\n    //file_input();\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    int n;\r\n    cin >> n;\r\n    vec<bool> p(n + 1);\r\n    vec<int> c, d;\r\n    for (int i = 2; i <= n; ++i) {\r\n        if (!p[i]) {\r\n            if (i * i <= n) c.push_back(i);\r\n            else d.push_back(i);\r\n            for (int j = i * 2; j <= n; j += i) p[j] = 1;\r\n        }\r\n    }\r\n    int ans = 1;\r\n    for (int i : c) {\r\n        cout << \"B\" << \" \" << i << endl;\r\n        int a;\r\n        cin >> a;\r\n        cout << \"A\" << \" \" << i << endl;\r\n        int b;\r\n        cin >> b;\r\n        if (b == 1) {\r\n            ll s = i * i;\r\n            ans *= i;\r\n            for (int j = 1; s <= n && j <= 30; ++j) {\r\n                cout << \"A \" << s << endl;\r\n                cin >> b;\r\n                if (b == 0) break;\r\n                ans *= i; s *= i;\r\n            }\r\n        }\r\n    }\r\n    int sz = (int)d.size() + 1, pred = 0;\r\n    for (int i = 0; i < (int)d.size(); ++i) {\r\n        cout << \"B \" << d[i] << endl;\r\n        sz--;\r\n        int a; cin >> a;\r\n        if (i % 100 || i + 1 == (int)d.size()) {\r\n            cout << \"A \" << 1 << endl;\r\n            cin >> a;\r\n            if (sz != a) {\r\n                for (int j = pred + 1; j <= i; ++j) {\r\n                    cout << \"B \" << d[i] << endl;\r\n                    cin >> a;\r\n                    if (a == 1) {\r\n                        ans *= d[j];\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            pred = i + 1;\r\n        }\r\n    }\r\n    cout << ans;\r\n}",
    "suggested_categories": [
        "algorithm",
        "prime numbers",
        "mathematics",
        "optimization",
        "coding standards",
        "performance",
        "input/output handling",
        "data structures",
        "debugging",
        "compiler directives",
        "code quality",
        "code optimization",
        "bit manipulation",
        "template metaprogramming",
        "i/o redirection",
        "binary operations",
        "looping constructs",
        "conditional statements",
        "code efficiency",
        "library usage"
    ]
}