{
    "id": 223985927,
    "contestId": 1406,
    "creationTimeSeconds": 1695106001,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "edwardnvv57k"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 307200,
    "source": "// Author: edwardnvv57k\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define solveT() {int t; cin >> t; while (t--) solve();} // if t given\r\n#define endl endl;fflush(stdout)\r\n\r\nvoid solve() {\r\n    long long n, temp;\r\n    cin >> n;\r\n    vector <long long> primes, facs;\r\n    vector <bool> isp (n + 1);\r\n    isp[0] = true;\r\n    isp[1] = true;\r\n    for (int i = 2; i * i <= n; i++){\r\n        if (isp[i]) continue;\r\n        for (int j = i * i; j <= n; j += i) isp[j] = true;\r\n    }\r\n    for (int i = 2; i < n + 1; i++){\r\n        if (!isp[i]) primes.push_back(i);\r\n    }\r\n    // cout << primes.back();\r\n\r\n    int tracker = 0, rut;\r\n    for (int i = 1; i * i <= n; i++){\r\n        rut = i;\r\n    }\r\n    while (primes[tracker] <= rut){\r\n        cout << \"B \" << primes[tracker] << endl;\r\n        cin >> temp;\r\n        tracker++;\r\n    }\r\n    tracker = 0;\r\n    while (primes[tracker] <= rut){\r\n        cout << \"A \" << primes[tracker] << endl;\r\n        cin >> temp;\r\n        if (temp) facs.push_back(primes[tracker]);\r\n        tracker++;\r\n    }\r\n    long long ans = 1, y;\r\n    if (facs.size()){\r\n        while (tracker < primes.size() && primes[tracker] <= n){\r\n            cout << \"B \" << primes[tracker] << endl;\r\n            cin >> temp;\r\n            if (temp == 2) facs.push_back(primes[tracker]);\r\n            tracker++;\r\n        }\r\n        for (auto x: facs){\r\n            ans *= x;\r\n            y = x * x;\r\n            while (temp && y <= n){\r\n                cout << \"B \" << y << endl;\r\n                cin >> temp;\r\n                if (temp) ans *= x;\r\n                y *= x;\r\n            }\r\n        }\r\n        cout << \"C \" << ans << endl;\r\n        return;\r\n    }\r\n    else{\r\n        int left = primes.size() - tracker + 1, rut2 = 1, tracker2 = 0, exp, there = 0;\r\n        for (rut2 = 1; rut2 * rut2 <= left; rut2++);\r\n        rut2--;\r\n        // cout << rut2;\r\n        cout << \"A 1\" << endl;\r\n        cin >> exp;\r\n        while (tracker < primes.size() && primes[tracker] <= n){\r\n            for (int i = 0; i < rut2; i++){\r\n                if (tracker + i > primes.size() - 1) break;\r\n                cout << \"B \" << primes[tracker + i] << endl;\r\n                cin >> temp;\r\n                tracker2++;\r\n            }\r\n            cout << \"A 1\" << endl;\r\n            cin >> temp;\r\n            if (exp - temp != tracker2){\r\n                there = 1;\r\n                break;\r\n            }\r\n            exp = temp;\r\n            tracker += tracker2;\r\n            tracker2 = 0;\r\n        }\r\n        if (there){\r\n            for (int i = 0; i < rut2; i++){\r\n                if (tracker + i > primes.size() - 1) break;\r\n                cout << \"A \" << primes[tracker + i] << endl;\r\n                cin >> temp;\r\n                if (temp){\r\n                    cout << \"C \" << primes[tracker + i] << endl;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        else cout << \"C 1\" << endl;\r\n        return;\r\n    }\r\n}\r\n\r\nint main(void) {\r\n    \r\n    // freopen(\"input.txt\", \"r\", stdin);\r\n    // freopen(\"output.txt\", \"w\", stdout);\r\n\r\n    std::ios::sync_with_stdio(false);\r\n    cin.tie(0); cout.tie(0);\r\n    solve();\r\n    return 0;\r\n    \r\n}"
}