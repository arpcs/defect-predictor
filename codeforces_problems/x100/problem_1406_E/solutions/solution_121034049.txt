{
    "id": 121034049,
    "contestId": 1406,
    "creationTimeSeconds": 1625151202,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "mewnian"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 102,
    "timeConsumedMillis": 139,
    "memoryConsumedBytes": 5222400,
    "source": "#include <bits/stdc++.h>\r\n#define sze(x) (ll)x.size()\r\n#define idx(x, a) get<x>(a)\r\n#define LID(x) (x << 1LL)\r\n#define RID(x) (x << 1LL) + 1LL\r\n#define ID(x) (x + MAXN)\r\n#define CONV(x) (x - MAXN)\r\n#define countbit(x) __builtin_popcountll(x)\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n#define x real()\r\n#define y imag()\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n\r\nconst ll MAXN = 100'003;\r\nconst ll INTERVAL = 100;\r\n\r\nvector<ll> divs[MAXN];\r\nvector<ll> primes[2];\r\nll n, cntp[MAXN], remov[MAXN], minp[MAXN], sqt[2];\r\n\r\nvoid eratos(ll N)\r\n{\r\n    fill(minp, minp + N + 1, -1);\r\n    minp[0] = minp[1] = 0;\r\n    for (ll i = 2; i <= N; ++i)\r\n    {\r\n        if (minp[i] != -1) continue;\r\n        primes[i * i > n].pb(i);\r\n        for (ll j = i; j <= N; j += i)\r\n            minp[j] = (minp[j] == -1 ? i : minp[j]);\r\n        for (ll j = i; j <= N; j *= i) divs[i].pb(j);\r\n    }\r\n    for (ll i = 1; i <= N; ++i) ++remov[minp[i]];\r\n}\r\n\r\nll query(const vector<ll>& p)\r\n{\r\n    ll lo = 1, hi = (ll)p.size() - 1, res = p[0];\r\n    while (lo <= hi)\r\n    {\r\n        ll mid = (lo + hi) / 2, val = p[mid], ans;\r\n        cout << \"A \" << val << endl;\r\n        cin >> ans;\r\n        if (ans) res = val, lo = mid + 1;\r\n        else hi = mid - 1;\r\n    }\r\n    return res;\r\n}\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n//    #ifdef OFFLINE\r\n//    freopen(\"input.inp\", \"r\", stdin);\r\n//    #endif\r\n    cin >> n;\r\n    eratos(n);\r\n    ll res = 1, cnt = n, act = n;\r\n    bool found = 0;\r\n    vector<ll> base;\r\n    for (ll v : primes[0])\r\n    {\r\n        ll ans1, ans2;\r\n        cout << \"B \" << v << endl; cin >> ans1;\r\n        cout << \"A \" << v << endl; cin >> ans2;\r\n        if (ans2 > 0) base.pb(v);\r\n        cnt -= (ans1 - ans2);\r\n        if (ans1 == ans2 || found) act -= remov[v];\r\n        else act -= (remov[v] - 1), found = 1;\r\n    }\r\n    if (base.empty())\r\n    {\r\n        ll m = (ll)primes[1].size(), boundl = -1, boundr = -1;\r\n        for (ll i = 0; i < m; ++i)\r\n        {\r\n            ll ans; cout << \"B \" << primes[1][i] << endl; cin >> ans; --cnt;\r\n            if ((i + 1) % INTERVAL == 0 || i + 1 == m)\r\n            {\r\n                cout << \"A 1\" << endl; cin >> ans;\r\n                if (ans != cnt)\r\n                {\r\n                    boundl = max(0LL, i + 1 - INTERVAL), boundr = i;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (boundl == -1)\r\n        {\r\n            cout << \"C 1\" << endl;\r\n            return 0;\r\n        }\r\n        for (ll i = boundl; i <= boundr; ++i)\r\n        {\r\n            ll ans; cout << \"A \" << primes[1][i] << endl; cin >> ans;\r\n            if (ans)\r\n            {\r\n                cout << \"C \" << primes[1][i] << endl;\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n    else\r\n    {\r\n        for (ll v : primes[1])\r\n        {\r\n            ll ans; cout << \"A \" << v << endl;\r\n            cin >> ans;\r\n            if (ans == 2)\r\n            {\r\n                cout << \"B \" << v << endl; cin >> ans;\r\n                base.pb(v);\r\n                break;\r\n            }\r\n        }\r\n        for (ll v : base) res *= query(divs[v]);\r\n        cout << \"C \" << res << endl;\r\n        return 0;\r\n    }\r\n}\r\n"
}