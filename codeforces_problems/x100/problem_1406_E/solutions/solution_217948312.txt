{
    "id": 217948312,
    "contestId": 1406,
    "creationTimeSeconds": 1691548818,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "kuchibi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 819200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\ntypedef pair<int,int> PII;\r\ntypedef long long LL;\r\nconst int INF=0x3f3f3f3f;\r\nconst long long LNF=0x3f3f3f3f3f3f3f3f;\r\nconst int mod=998244353;\r\nconst int N=100010,M=N<<1;\r\ninline int read(){ \r\n    int f=1,x=0;char s=getchar();\r\n    while(s<'0'||s>'9'){if(s=='-')f=-1;s=getchar();}\r\n    while(s>='0'&&s<='9'){x=x*10+s-'0';s=getchar();}\r\n    return x*f;\r\n}\r\n\r\nint n;\r\nvector<int>minp(N),primes;\r\nvector<int>query;\r\n\r\nvoid init(int n=100000){\r\n    for(int i=2;i<=n;++i){\r\n        if(!minp[i])minp[i]=i,primes.push_back(i);\r\n        for(auto it:primes){\r\n            if(it*i>n)break;\r\n            minp[i*it]=it;\r\n            if(minp[i]==it)break;\r\n        }\r\n    }\r\n\r\n    vector<int>v;int now=1,cnt=0;\r\n    for(int i=0;i<(int)primes.size();++i){\r\n        if(now*primes[i]>100000){\r\n            // cout<<++cnt<<\" : \";\r\n            // for(auto it:v)cout<<it<<' ';\r\n            // cout<<\" = \"<<now<<'\\n';\r\n            query.push_back(now);\r\n            now=primes[i];\r\n            v.clear();\r\n            v.push_back(primes[i]);\r\n        }\r\n        else now*=primes[i],v.push_back(primes[i]);\r\n    }\r\n}\r\n\r\nint askA(int x){\r\n    printf(\"A %d\\n\",x),fflush(stdout);\r\n    cin>>x;return x;\r\n}\r\nint askB(int x){\r\n    printf(\"B %d\\n\",x);fflush(stdout);\r\n    cin>>x;return x;\r\n}\r\nvoid askC(int x){printf(\"C %d\\n\",x);fflush(stdout);exit(0);}\r\n\r\nvoid solve(){\r\n    for(int i=0;i<29;++i){\r\n        askB(query[i]);\r\n    }\r\n\r\n    if(askA(1)!=n-65){\r\n        int ans=1;\r\n        for(int i=0;i<65;++i){\r\n            if(askA(primes[i])==0)continue;ans*=primes[i];\r\n            int x=primes[i];\r\n            while(askA(x*primes[i]))x*=primes[i],ans*=primes[i];\r\n        }\r\n        askC(ans);\r\n        return;\r\n    }\r\n\r\n    int cnt=444,lost=primes.size()-65;\r\n    for(int i=30,len=0;i<(int)query.size();++i){\r\n        askB(query[i]);len++;\r\n        if(len==cnt/2){\r\n            if(askA(1)==lost-len)lost-=len,--cnt,len=0;\r\n            else{\r\n                for(int j=i-len+1;j<=i;++j){\r\n                    if(askA(query[j])==0)continue;\r\n                    else {\r\n                        askC(query[j]);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    askC(0);\r\n}\r\n\r\nvoid solve2(){\r\n    for(int i=2;i<=n;++i)askB(i);\r\n\r\n    for(int i=n;i>=1;--i){\r\n        if(askA(i)==1){\r\n            askC(i);\r\n            return;\r\n        }\r\n    }\r\n    askC(0);\r\n}\r\n\r\nsigned main(){\r\n    // ios::sync_with_stdio(false),cin.tie(nullptr);\r\n    int Tt=1;\r\n    // cin>>Tt;\r\n    while(Tt--){\r\n        // check();\r\n        n=read();\r\n        if(n<=5000)solve2();\r\n        else solve();\r\n    }\r\n    return 0;\r\n}"
}