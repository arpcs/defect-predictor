{
    "id": 178116738,
    "contestId": 1406,
    "creationTimeSeconds": 1666882340,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "Sakuyalove"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 716800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define int long long\r\n\r\nconst int _ = 2e5 + 5;\r\n\r\nconst int M = 1e5;\r\n\r\nbool np[_];\r\nvector<int> p;\r\nint n;\r\n\r\nset<int> pri;\r\nbool out[_];\r\n\r\nvoid solve() {\r\n  for (int i = 2; i <= M; i++) {\r\n    if (!np[i]) p.push_back(i);\r\n    for (auto j : p) {\r\n      if (i * j > M) break;\r\n      np[i * j] = 1;\r\n      if (i % j == 0) break;\r\n    }\r\n  }\r\n  cin >> n;\r\n  int tot = n;\r\n  int B = 100;\r\n  bool found = 0;\r\n  int ret = 1;\r\n  for (int i = 0; i < p.size(); i++) {\r\n    int q = p[i];\r\n    if (q > n) break;\r\n    int use = 0;\r\n    for (int j = q; j <= n; j += q) {\r\n      if (!out[j]) {\r\n        out[j] = 1;\r\n        tot--;\r\n        use++;\r\n      }\r\n    }\r\n    cout << \"B \" << q << endl;\r\n    int res;\r\n    cin >> res;\r\n    if (res != use) {\r\n      pri.insert(q);\r\n    }\r\n    if (i == B && !found) {\r\n      cout << \"A \" << 1 << endl;\r\n      cin >> res;\r\n      if (res != tot) {\r\n        for (int j = B - 100; j < B; j++) {\r\n          cout << \"B \" << p[j] << endl;\r\n          cin >> res;\r\n          if (res != 0) pri.insert(p[j]);\r\n        }\r\n        found = 1;\r\n      }\r\n      B += 100;\r\n    }\r\n  }\r\n  if (!found) {\r\n    for (int i = B - 100; i < p.size(); i++) {\r\n      if (p[i] > n) break;\r\n      cout << \"B \" << p[i] << endl;\r\n      int res;\r\n      cin >> res;\r\n      if (res != 0) pri.insert(p[i]);\r\n    }\r\n  }\r\n  for (auto v : pri) {\r\n    int now = v;\r\n    while (1) {\r\n      cout << \"B \" << now << endl;\r\n      int res;\r\n      cin >> res;\r\n      if (res != 0) now *= v;\r\n      else {\r\n        ret *= now;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  cout << \"C \" << ret << endl; \r\n  return ;\r\n}\r\n\r\nsigned main() {\r\n  ios::sync_with_stdio(false);\r\n  cin.tie(0);\r\n  cout.tie(0);\r\n  int T = 1;\r\n  // cin >> T;\r\n  while (T--) solve();\r\n  return 0;\r\n}"
}