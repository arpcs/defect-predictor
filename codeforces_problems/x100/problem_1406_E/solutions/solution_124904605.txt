{
    "id": 124904605,
    "contestId": 1406,
    "creationTimeSeconds": 1628117495,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "DesalotAge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 102,
    "timeConsumedMillis": 264,
    "memoryConsumedBytes": 7372800,
    "source": "/*\n                            . .  ,  ,\n                            |` \\/ \\/ \\,',\n                            ;          ` \\/\\,.\n                        :               ` \\,/\n                        |                  /\n                        ;                 :\n                        :                  ;\n                        |      ,---.      /\n                        :     ,'     `,-._ \\\n                        ;    (   o    \\   `'\n                    _:      .      ,'  o ;\n                    /,.`      `.__,'`-.__,\n                    \\_  _               \\\n                    ,'  / `,          `.,'\n            ___,'`-._ \\_/     `,._       ;\n            __;_,'      `-.`-'./ `--.____)\n        ,-'           _,--\\^-'\n    ,:_____      ,-'     \\\n    (,'     `--.  \\;-._    ;\n    :    Y      `-/    `,  :\n    :    :       :     /_;'\n    :    :       |    :\n    \\    \\      :    :\n    `-._ `-.__, \\    `.\n        \\   \\  `. \\     `.\n        ,-;    \\---)_\\ ,','/\n        \\_ `---'--'\" ,'^-;'\n        (_`     ---'\" ,-')\n        / `--.__,. ,-'    \\\n-hrr-    )-.__,-- ||___,--' `-.\n        /._______,|__________,'\\\n        `--.____,'|_________,-'\n\n                            __\n                _ ,___,-'\",-=-.\n    __,-- _ _,-'_)_  (\"\"`'-._\\ `.\n    _,'  __ |,' ,-' __)  ,-     /. |\n,'_,--'   |     -'  _)/         `\\\n,','      ,'       ,-'_,`           :\n,'     ,-'       ,(,-(              :\n    ,'       ,-' ,    _            ;\n    /        ,-._/`---'            /\n/        (____)(----. )       ,'\n/         (      `.__,     /\\ /,\n:           ;-.___         /__\\/|\n|         ,'      `--.      -,\\ |\n:        /            \\    .__/\n\\      (__            \\    |_\n\\       ,`-, *       /   _|,\\\n\\    ,'   `-.     ,'_,-'    \\\n(_\\,-'    ,'\\\")--,'-'       __\\\n    \\       /  // ,'|      ,--'  `-.\n    `-.    `-/ \\'  |   _,'         `.\n        `-._ /      `--'/             \\\n-hrr-      ,'           |              \\\n        /             |               \\\n    ,-'              |               /\n    /                 |             -'\n\n*/\n\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\nusing namespace std;\nusing ll = long long;\nusing ld = long double;\nusing pi = pair<ll, ll>;\nusing vi = vector<ll>;\nusing vpi = vector<pi>;\nusing vvi = vector<vi>;\nusing vvpi = vector<vpi>;\nusing ordered_set = tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update>;\n\nld PI = 4;\nld EPS = 1e-10;\nll MOD = 1e9 + 7;\n\nll get_rand_ll(ll l, ll r){\n    ll numb = rand() * rand() * rand() * rand();\n    numb %= (r - l + 1);\n    numb += (r - l + 1);\n    numb %= (r - l + 1);\n    return numb + l;\n}\n\n\nbool check_prime(ll numb) {\n    for (int i = 2; i * i <= numb; i++) {\n        if (numb % i == 0) {\n            return 0;\n        }\n    }\n    return 1;\n}\nvector<int> primes;\n\nvoid solution() {\n    int n;\n    cin >> n;   \n    // if (n < 50) {\n    //     int ans = 0;\n    //     for (int i = 1; i <= n; i++) {\n    //         int x;\n    //         cout << \"B \" << i << endl;\n    //         cin >> x;\n    //         cout << \"A \" << i << endl;\n    //         cin >> x;\n    //         if (x == 1) {\n    //             ans = i;\n    //         }\n    //     }\n    //     cout << ans << endl;\n    //     return;\n    // }\n    unordered_set<int> numbers;\n    for (int i = 1; i<= n; i++) {\n        numbers.insert(i);\n    }\n    for (int i = 2; i <= n; i++) {\n        if (check_prime(i)) {\n            primes.push_back(i);\n        }\n    }\n    // for (auto i : primes) {\n    //     cout << i << ' ';\n    // }\n    // cout << endl;;\n    int to_ind = 0;\n    for (int i = 0; i < primes.size(); i++) {\n        if (primes[i] * primes[i] > n) {\n            to_ind = i;\n            break;\n        }\n    }\n    ll ans = 1;\n    for (int i = 0; i < to_ind; i++) {\n        int cur_pow = primes[i]; \n        for (;; cur_pow *= primes[i]) {\n            if (cur_pow > n) {\n                break;\n            }\n            cout << \"B \" << cur_pow << endl;\n            int x;\n            cin >> x;\n            cout << \"A \" << cur_pow << endl;\n            cin >> x;\n            if (x == 0) {\n                break;\n            }\n        }\n        ans *= cur_pow /  primes[i];\n    }\n\n    for (int i = 0; i < to_ind; i++) {\n        unordered_set<int> new_numbers;\n        for (auto item : numbers) {\n            if (item % primes[i] != 0) {\n                new_numbers.insert(item);\n            }\n        }\n        numbers = new_numbers;\n    }\n    // cout << \"numbers - \";\n    // for (auto i : numbers) {\n    //     cout << i << ' ';\n    // }\n    // cout << endl;\n    \n    // cout << numbers.size() << ' ' << primes.size() << ' ' << to_ind  << endl;\n    if (ans == 1) {\n        for (int i = 0; i < (primes.size() + 99) / 100; i++) {\n            for (int j = to_ind + i * 100; j < min((int)primes.size(), to_ind + i * 100 + 100); j++) {\n                cout << \"B \" << primes[j] << endl;\n                int x;\n                cin >> x;\n                numbers.erase(primes[j]);\n            }\n            cout << \"A \" << 1 << endl;\n            int x;\n            cin >> x;\n            if (x != numbers.size()) {\n                for (int j = to_ind + i * 100; j < min((int)primes.size(), to_ind + i * 100 + 100); j++) {\n                    cout << \"A \" << primes[j] << endl;\n                    int x;\n                    cin >> x;\n                    if (x == 1) {\n                        ans *= primes[j];\n                        cout << \"C \" << ans << endl;\n                        return ;\n                    }\n                }\n            }\n        }\n    } else {\n        for (int i = to_ind; i < primes.size(); i++) {\n            cout << \"A \" << primes[i] << endl;\n            int x;\n            cin >> x;\n            if (x != 1) {\n                ans *= primes[i];\n                break;\n            }\n            // if (counter != x) {\n            //     ans *= primes[i];\n            //     break;\n            // }\n        }\n    }\n\n\n    cout << \"C \" << ans << endl;\n\n}\n\nint main(){\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    srand(time(0));\n    \n    // for (auto i : primes) {\n    //     cout << i << ' ';\n    // }\n    // cout << endl;\n    // cout << primes.size()  << endl;\n    // \n    ll t;\n    // cin >> t;\n    t = 1;  \n    while (t--){\n        solution();\n    }    \n    return 0;\n}"
}