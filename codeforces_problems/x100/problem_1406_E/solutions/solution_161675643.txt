{
    "id": 161675643,
    "contestId": 1406,
    "creationTimeSeconds": 1656101698,
    "relativeTimeSeconds": 6598,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "FatihSolak"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1656095100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 61,
    "memoryConsumedBytes": 2662400,
    "source": "#include <bits/stdc++.h>\r\n#define N 200005\r\nusing namespace std;\r\nvector<int> primes;\r\nint p[N];\r\nint cnt[N];\r\nvector<int> v;\r\nint hidden;\r\nint rem_queries = 10000;\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\nint ask(int x){\r\n    assert(rem_queries--);\r\n    // int ret = 0;\r\n    // for(auto u:v){\r\n    //     if(u % x == 0)ret++;\r\n    // }\r\n    cout << \"A \" << x << endl;\r\n    int ret;\r\n    cin >> ret;\r\n    return ret;\r\n}\r\nint del(int x){\r\n    assert(rem_queries--);\r\n    // int ret = 0;\r\n    // vector<int> nw;\r\n    // for(auto u:v){\r\n    //     if(u % x == 0){\r\n    //         ret++;\r\n    //         if(u == hidden)\r\n    //             nw.push_back(u);\r\n    //     }\r\n    //     else nw.push_back(u);\r\n    // }\r\n    // v = nw;\r\n    cout << \"B \" << x << endl;\r\n    int ret;\r\n    cin >> ret;\r\n    return ret;\r\n}\r\nvoid solve(){\r\n    int n;\r\n    cin >> n;\r\n    // n = 100000;\r\n    // hidden = rng() % n + 1;\r\n    for(int i = 1;i<=n;i++){\r\n        v.push_back(i);\r\n    }\r\n    for(int i = 2;i<=n;i++){\r\n        if(!p[i]){\r\n            primes.push_back(i);\r\n            for(int j = i;j<=n;j+=i){\r\n                cnt[i] += !p[j];\r\n                p[j] = 1;\r\n            }\r\n        }\r\n    }\r\n    set<int> nowprimes;\r\n    int last = primes.size()-1;\r\n    int block = 100;\r\n    int tot = n;\r\n    int first = 1e9;\r\n    for(int i = 0;i<(int)primes.size();i++){\r\n        tot -= cnt[primes[i]];\r\n        if(del(primes[i]) != cnt[primes[i]]){\r\n            first = min(first,i);\r\n            nowprimes.insert(primes[i]);\r\n        }\r\n        if(i % block == 0 && tot != ask(1)){\r\n            last = min(last,i);\r\n        }\r\n    }\r\n    if(ask(1) == 1){\r\n        cout << \"C 1\" << endl;\r\n        return;\r\n    }\r\n    assert(ask(1) == 2);\r\n    for(int i = min(first-1,last);i>=max(0,min(first-1,last) - 5*block);i--){\r\n        if(ask(primes[i]) == 1)\r\n            nowprimes.insert(primes[i]);\r\n    }\r\n    int num = 1;\r\n    for(auto u:nowprimes){\r\n        int tmp = u;\r\n        while(tmp <= n && ask(tmp) == 1){\r\n            num *= u;\r\n            tmp *= u;\r\n        }\r\n    }\r\n    assert(ask(num) == 1);\r\n    cout << \"C \" << num << endl;\r\n}\r\n\r\nint32_t main(){\r\n    int t=1;\r\n    //cin>>t;\r\n    while(t--){\r\n        solve();\r\n    }\r\n}",
    "suggested_categories": [
        "algorithms",
        "number theory",
        "mathematics",
        "randomized algorithms",
        "debugging",
        "quality assurance",
        "input/output handling",
        "assert testing",
        "code efficiency",
        "random number generation",
        "error handling",
        "optimization",
        "code structure",
        "loop optimization",
        "data structures",
        "bit manipulation",
        "prime numbers",
        "conditional statements",
        "function implementation",
        "c++ programming"
    ]
}