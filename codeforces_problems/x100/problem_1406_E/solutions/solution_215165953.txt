{
    "id": 215165953,
    "contestId": 1406,
    "creationTimeSeconds": 1690111566,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1406,
        "index": "E",
        "name": "Deleting Numbers",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "interactive",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1406,
        "members": [
            {
                "handle": "ShiTieBi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1599918300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nusing pii = pair<int,int>;\r\nint n,spr;\r\nvector<int> pr,ans;\r\ninline void GetPrime(){\r\n\tfor(int i = 2;i <= n;i++){\r\n\t\tbool ISP = true;\r\n\t\tfor(int j = 2;j * j <= i;j++){\r\n\t\t\tif(i % j == 0)ISP = false;\r\n\t\t}\r\n\t\tif(ISP)pr.push_back(i);\r\n\t}\r\n\treturn ;\r\n}\r\ninline pair<bool,int> Del(const vector<pii>& del,int preSize){\r\n\tint delnum = 0;\r\n\tfor(auto i : del){\r\n\t\tdelnum += i.second;\r\n\t}\r\n\tint nowSize = 0;\r\n\tcout<<\"A 1\"<<endl;fflush(stdout);\r\n\tcin>>nowSize;\r\n\treturn make_pair(preSize-nowSize != delnum,nowSize);\r\n}\r\ninline void Solve(const vector<pii>& vec,bool NEED_DEL){\r\n\tfor(auto i : vec){\r\n\t\tif(NEED_DEL){\r\n\t\t\tint useless;\r\n\t\t\tcout<<\"B \"<<i.first<<endl;fflush(stdout);\r\n\t\t\tcin>>useless;\r\n\t\t}\r\n\t\tcout<<\"A \"<<i.first<<endl;fflush(stdout);\r\n\t\tint res = 0;\r\n\t\tcin>>res;\r\n\t\tif(res >= 1){\r\n\t\t\tans.push_back(i.first);\r\n\t\t}\r\n\t}\r\n\treturn ;\r\n}\r\ninline void Calc(int l,int r,int blk,int lasta){\r\n\tvector<pii> now;\r\n\tnow.reserve(blk);\r\n\tfor(auto p : pr){\r\n\t\tif(p < l)continue;\r\n\t\tif(p > r)break;\r\n\t\t//lasta known\r\n\t\tcout<<\"B \"<<p<<endl;fflush(stdout);\r\n\t\tpii getin = make_pair(p,0);\r\n\t\tcin>>getin.second;\r\n\t\tnow.push_back(getin);\r\n\t\tif(now.size() == blk){\r\n\t\t\t//\r\n\t\t\tauto res = Del(now,lasta);\r\n\t\t\tlasta = res.second;\r\n\t\t\tif(res.first){\r\n\t\t\t\tSolve(now,false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif(now.size() != 0){\r\n\t\tauto res = Del(now,lasta);\r\n\t\tlasta = res.second;\r\n\t\tif(res.first){\r\n\t\t\tSolve(now,false);\r\n\t\t}\r\n\t}\r\n\treturn ;\r\n}\r\ninline int SolvePow(){\r\n\tint ret = 1;\r\n\tfor(auto p : ans){\r\n\t\tint now = p,getin = 0;\r\n\t\twhile(now <= n){\r\n\t\t\tnow = now * p;\r\n\t\t\tcout<<\"A \"<<now<<endl;fflush(stdout);\r\n\t\t\tcin>>getin;\r\n\t\t\tif(getin == 0){\r\n\t\t\t\tret *= now / p;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\nint main(){\r\n\tcin>>n;\r\n\tspr = sqrt(n);\r\n\tGetPrime();\r\n\tCalc(spr,n,spr,n);\r\n\tvector<pii> pre;\r\n\tfor(auto p : pr){\r\n\t\tif(p >= spr)break;\r\n\t\tpre.push_back(make_pair(p,0));\r\n\t}\r\n\tSolve(pre,true);\r\n\tcout<<\"C \"<<SolvePow()<<endl;fflush(stdout);\r\n\treturn 0;\r\n}"
}