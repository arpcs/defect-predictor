{
    "id": 148778886,
    "contestId": 1571,
    "creationTimeSeconds": 1646731672,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "sd0061"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.5",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 88,
    "timeConsumedMillis": 296,
    "memoryConsumedBytes": 41369600,
    "source": "import kotlin.math.max\r\n\r\nfun main(args: Array<String>) {\r\n    val (n, m) = readLine()!!.split(' ').map {it.toInt()}\r\n    val a = IntArray(n)\r\n    val t = IntArray(n)\r\n    val res = IntArray(n)\r\n    var sumOne = 0\r\n    var sumTwo = 0\r\n    val f = Array(n + 1) { BooleanArray(m + 1) }\r\n    f[0][0] = true\r\n    for (i in 0 until n) {\r\n        val (x, y) = readLine()!!.split(' ').map {it.toInt()}\r\n        a[i] = x\r\n        t[i] = y\r\n        for (j in 0..m) {\r\n            f[i + 1][j] = f[i][j]\r\n        }\r\n        if (t[i] == 2) {\r\n            sumTwo += a[i]\r\n            for (j in x..m) {\r\n                f[i + 1][j] = f[i + 1][j] or f[i][j - x]\r\n            }\r\n        } else {\r\n            sumOne += a[i]\r\n        }\r\n    }\r\n    var found = -1\r\n    for (i in 0..m) {\r\n        if (f[n][i]) {\r\n            var j = sumTwo - i\r\n            var slot = if (i == j) i + j else max(i, j) * 2 - 1\r\n            if (slot + sumOne <= m) {\r\n                found = i\r\n                break\r\n            }\r\n        }\r\n    }\r\n    if (found == -1) {\r\n        println(-1)\r\n    } else {\r\n        var cur = found\r\n        var odd = 1\r\n        var even = 2\r\n        var back = m\r\n        var i = n - 1\r\n        while (i >= 0) {\r\n            if (t[i] == 1) {\r\n                back -= a[i]\r\n                res[i] = back + 1\r\n            } else if (f[i][cur]) {\r\n                res[i] = odd\r\n                odd += a[i] * 2\r\n            } else {\r\n                res[i] = even\r\n                even += a[i] * 2\r\n                cur -= a[i]\r\n            }\r\n            i --\r\n        }\r\n        println(res.joinToString(separator= ' '.toString()))\r\n    }\r\n}"
}