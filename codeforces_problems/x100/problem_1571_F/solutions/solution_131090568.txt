{
    "id": 131090568,
    "contestId": 1571,
    "creationTimeSeconds": 1633626428,
    "relativeTimeSeconds": 9128,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "kachhuaa"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.5",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 88,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 26316800,
    "source": "object P1571FKotlinForces {\r\n    val nm = readLine()!!.split(\" \").map { it.toInt() }\r\n    val n = nm[0]\r\n    val m = nm[1]\r\n\r\n    fun solve() {\r\n        val l1 = mutableListOf<Pair<Int, Int>>()\r\n        val l2 = mutableListOf<Pair<Int, Int>>()\r\n        for (i in 1..n) {\r\n            val kt = readLine()!!.split(\" \").map { it.toInt() }\r\n            if (kt[1] == 2) l2.add(Pair(kt[0], i))\r\n            else l1.add(Pair(kt[0], i))\r\n        }\r\n\r\n        var fChain = -1\r\n        var sChain = 0\r\n        var notPoss = false\r\n        var ans = MutableList<Int>(n + 1) { 0 }\r\n        for (e in l2) {\r\n            ans[e.second] = fChain + 2\r\n            fChain += e.first * 2\r\n            if (fChain > sChain) {\r\n                val t = fChain\r\n                fChain = sChain\r\n                sChain = t\r\n            }\r\n            if (sChain > m) {\r\n                notPoss = true\r\n                break\r\n            }\r\n        }\r\n\r\n        if (notPoss) {\r\n            notPoss = false\r\n            fChain = 0\r\n            sChain = -1\r\n            ans = MutableList<Int>(n + 1) { 0 }\r\n            for (e in l2) {\r\n                ans[e.second] = fChain + 2\r\n                fChain += e.first * 2\r\n                if (fChain > sChain) {\r\n                    val t = fChain\r\n                    fChain = sChain\r\n                    sChain = t\r\n                }\r\n                if (sChain > m) {\r\n                    notPoss = true\r\n                    break\r\n                }\r\n            }\r\n        }\r\n\r\n        if (notPoss) {\r\n            println(-1)\r\n            return\r\n        }\r\n\r\n        var tChain = m + 1\r\n        for (e in l1) {\r\n            tChain -= e.first\r\n            ans[e.second] = tChain\r\n            if (tChain <= sChain) {\r\n                println(-1)\r\n                return\r\n            }\r\n        }\r\n\r\n        for (i in 1..n) {\r\n            print(\"${ans[i]} \")\r\n        }\r\n    }\r\n}\r\n\r\nfun main() {\r\n    P1571FKotlinForces.solve()\r\n}"
}