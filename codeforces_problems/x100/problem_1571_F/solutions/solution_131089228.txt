{
    "id": 131089228,
    "contestId": 1571,
    "creationTimeSeconds": 1633624788,
    "relativeTimeSeconds": 7488,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "_The_Mastermind_"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 576,
    "memoryConsumedBytes": 167936000,
    "source": "var f = Array(5010) { Array(5010) { 0 } }\r\nvar pivot = 1\r\nvar pivot1 = 0\r\nvar pivot2 = 0\r\nval a = mutableListOf<Pair<Int, Int>>()\r\nval ans = mutableListOf<Int>()\r\n\r\nfun avail(x: Int, y: Int, m: Int): Boolean {\r\n    return x <= (m + 1) / 2 && y <= m / 2\r\n}\r\n\r\nfun track(i: Int, v1: Int) {\r\n    if (i == -1) return\r\n    if (f[i][v1] == 1) {\r\n        track(i - 1, v1 - a[i].first)\r\n        ans[a[i].second] = pivot1\r\n        pivot1 += a[i].first * 2\r\n    }\r\n    else {\r\n        track(i - 1, v1)\r\n        ans[a[i].second] = pivot2\r\n        pivot2 += a[i].first * 2\r\n    }\r\n}\r\n\r\nfun main() {\r\n    var (n, m) = readLine()!!.split(' ').map { it.toInt() }\r\n\r\n    for (i in 0 until n) {\r\n        val (x, y) = readLine()!!.split(' ').map { it.toInt() }\r\n        if (y == 1) {\r\n            m -= x\r\n            ans.add(pivot)\r\n            pivot += x\r\n        } else {\r\n            ans.add(0)\r\n            a.add(Pair(x, i))\r\n        }\r\n    }\r\n\r\n    val l = a.size - 1\r\n    var sum = a[0].first\r\n\r\n    if (avail(a[0].first, 0, m)) f[0][a[0].first] = 1\r\n    if (avail(0, a[0].first, m)) f[0][0] = 2\r\n\r\n    for (i in 0 until l) {\r\n        for (v1 in 0..(m + 1) / 2)\r\n            if (f[i][v1] != 0) {\r\n                val v2 = sum - v1\r\n                if (avail(v1 + a[i + 1].first, v2, m)) f[i + 1][v1 + a[i + 1].first] = 1\r\n                if (avail(v1, v2 + a[i + 1].first, m)) f[i + 1][v1] = 2\r\n            }\r\n        sum += a[i+1].first\r\n    }\r\n\r\n    var ok = false\r\n    for (v1 in 0..(m + 1) / 2)\r\n        if (f[l][v1] != 0) {\r\n            ok = true\r\n            pivot1 = pivot\r\n            pivot2 = pivot + 1\r\n            track(l, v1)\r\n            for (i in 0 until n)\r\n                print(\"${ans[i]} \")\r\n        }\r\n    if (!ok) {\r\n        print(-1)\r\n    }\r\n}"
}