{
    "id": 131090883,
    "contestId": 1571,
    "creationTimeSeconds": 1633626633,
    "relativeTimeSeconds": 9333,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "madmax"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 88,
    "timeConsumedMillis": 1075,
    "memoryConsumedBytes": 274841600,
    "source": "import kotlin.math.abs\r\n\r\nprivate fun readLn() = readLine()!! // string line\r\nprivate fun readInt() = readLn().toInt() // single int\r\nprivate fun readLong() = readLn().toLong() // single long\r\nprivate fun readDouble() = readLn().toDouble() // single double\r\nprivate fun readStrings() = readLn().split(\" \") // list of strings\r\nprivate fun readInts() = readStrings().map { it.toInt() } // list of ints\r\nprivate fun readLongs() = readStrings().map { it.toLong() } // list of longs\r\nprivate fun readDoubles() = readStrings().map { it.toDouble() } // list of doubles\r\n\r\n\r\nconst val INF = 1_000_000_000\r\n\r\n\r\nfun main(args: Array<String>) {\r\n    var (n, m) = readInts()\r\n    val a = mutableListOf<Pair<Int, Int>>()\r\n    val ans = MutableList(n) { 0 }\r\n    var sum = 0\r\n    for (i in 0 until n) {\r\n        val (k, t) = readInts()\r\n        if (t == 1) {\r\n            ans[i] = m - k + 1\r\n            m -= k\r\n        }\r\n        else {\r\n            a.add(Pair(k, i))\r\n            sum += k\r\n        }\r\n    }\r\n    if (m < 0) {\r\n        println(-1)\r\n        return\r\n    }\r\n    val cnt0 = m / 2\r\n    val cnt1 = m / 2 + m % 2\r\n    var dp = Array(a.size + 1) { Array(m + 1) { false } }\r\n    val from = Array(a.size + 1) { Array(m + 1) { false } }\r\n    dp[0][0] = true\r\n    for (i in 1..a.size) {\r\n        for (j in 0..m) {\r\n            val k = a[i - 1].first\r\n            if (dp[i - 1][j])\r\n                dp[i][j] = true\r\n            if (dp[i - 1][j] && j + k <= m) {\r\n                dp[i][j + k] = true\r\n                from[i][j + k] = true\r\n            }\r\n        }\r\n    }\r\n    var m_val = Int.MAX_VALUE\r\n    var mi = 0\r\n    for (i in 0..m)\r\n        if (dp[a.size][i] && i >= sum - i) {\r\n            val d = abs(i - (sum - i))\r\n            if (d < m_val) {\r\n                m_val = d\r\n                mi = i\r\n            }\r\n        }\r\n    var cur = mi\r\n    var ci = a.size\r\n    var s1 = mutableListOf<Int>()\r\n    while (cur > 0) {\r\n        if (from[ci][cur]) {\r\n            s1.add(ci - 1)\r\n            cur -= a[ci - 1].first\r\n        }\r\n        --ci\r\n    }\r\n    var s2 = ((0 until a.size).toSet() - s1.toSet()).toMutableList()\r\n    if (2 * mi - 1 > m || 2 * (sum - mi) > m) {\r\n        println(-1)\r\n        return\r\n    }\r\n\r\n    var m1 = 0\r\n    for (i in s1) {\r\n        ans[a[i].second] = 1 + 2 * m1\r\n        m1 += a[i].first\r\n    }\r\n    var m2 = 0\r\n    for (i in s2) {\r\n        ans[a[i].second] = 2 + 2 * m2\r\n        m2 += a[i].first\r\n    }\r\n\r\n    for (an in ans) {\r\n        print(\"$an \")\r\n    }\r\n}"
}