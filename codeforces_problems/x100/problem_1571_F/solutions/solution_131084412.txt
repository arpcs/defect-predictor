{
    "id": 131084412,
    "contestId": 1571,
    "creationTimeSeconds": 1633621049,
    "relativeTimeSeconds": 3749,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "wifiiii"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 88,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 107417600,
    "source": "import java.lang.Math.*\r\nimport java.lang.reflect.Array\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\n\r\nprivate fun read() = readLine()!!\r\nprivate fun readi() = read().toInt()\r\nprivate fun reads() = read().split(\" \")\r\nprivate fun readii() = reads().map {it.toInt()}\r\nprivate fun readl() = read().toLong()\r\nprivate fun readll() = reads().map {it.toLong()}\r\nprivate fun exit() { kotlin.system.exitProcess(0); }\r\n\r\n// 101010101010101\r\n// 5 3 -> 2 * 5 - 1\r\n// 111111101\r\n// 3 12\r\n// 5 2\r\n// 3 2\r\n// 3 1\r\nfun main() {\r\n    var (n, m) = readii()\r\n    var a = ArrayList<Pair<Int,Int>>()\r\n    var sum1 = 0\r\n    var nn = m\r\n    var sum2 = 0\r\n    var ans = IntArray(n)\r\n    for (i in 0..n-1) {\r\n        var (x, y) = readii()\r\n        if(y == 2) {\r\n            a.add(Pair<Int,Int>(i, x))\r\n            sum2 += x\r\n        } else {\r\n            sum1 += x\r\n            nn -= x\r\n            ans[i] = nn + 1\r\n        }\r\n    }\r\n    if(sum1 > m || sum2 > m) {\r\n        println(-1)\r\n        exit()\r\n    }\r\n    var dp = Array(a.size + 1) { IntArray(m + 1) }\r\n    dp[0][0] = 1\r\n    for (i in 0..a.size-1) {\r\n        var p = a[i].second\r\n        for (j in 0..m) {\r\n            dp[i+1][j] = dp[i][j]\r\n        }\r\n        for (j in p..m) {\r\n            if(dp[i][j-p] == 1) dp[i+1][j] = 1\r\n        }\r\n    }\r\n    var mn = 1000000000\r\n    var mi = -1\r\n    for (i in 0..m) {\r\n        if (dp[a.size][i] == 1) {\r\n            if (max(sum2 - i, i) <= mn) {\r\n                mn = max(sum2 - i, i)\r\n                mi = i\r\n            }\r\n        }\r\n    }\r\n    var use = sum1\r\n    if(a.size > 0) {\r\n        if(mi == -1) {\r\n            println(-1)\r\n            exit()\r\n        }\r\n        use += max(sum2 - mi, mi) * 2 - 1\r\n    }\r\n    if(use > m) {\r\n        println(-1)\r\n        exit()\r\n    }\r\n    var cur = mi\r\n    var p1 = 1\r\n    var p2 = 2\r\n    for (i in a.size-1 downTo 0) {\r\n        val q = a[i].first\r\n        val p = a[i].second\r\n        if (cur >= p && dp[i][cur-p] == 1) {\r\n            ans[q] = p1\r\n            p1 += p * 2\r\n            cur -= p\r\n        } else {\r\n            ans[q] = p2\r\n            p2 += p * 2\r\n        }\r\n    }\r\n    println(ans.joinToString(\" \"))\r\n}"
}