{
    "id": 131085666,
    "contestId": 1571,
    "creationTimeSeconds": 1633621738,
    "relativeTimeSeconds": 4438,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "Ra16bit"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 88,
    "timeConsumedMillis": 358,
    "memoryConsumedBytes": 104550400,
    "source": "import java.util.*\nimport java.io.*\n\nclass IOStream {\n    val br = BufferedReader(InputStreamReader(System.`in`))\n    var st: StringTokenizer? = null\n\n    fun nextToken(): String? {\n        while (st == null || !st!!.hasMoreTokens())\n            st = StringTokenizer(br.readLine())\n        return st!!.nextToken()\n    }\n\n    fun nextInt(): Int {\n        return nextToken()!!.toInt()\n    }\n\n    fun nextLong(): Long {\n        return nextToken()!!.toLong()\n    }\n}\n\nfun main(args: Array<String>) {\n    val inp = IOStream()\n    val out = PrintWriter(System.out)\n    val n = inp.nextInt()\n    val m = inp.nextInt()\n    var a = ArrayList<Int>();\n    var b = ArrayList<Int>();\n    var idxa = ArrayList<Int>();\n    var idxb = ArrayList<Int>();\n    var tota=0;\n    var totb=0;\n    for (i in 1..n) {\n        val x=inp.nextInt()\n        val y=inp.nextInt()\n        if (y==2) {\n            tota+=x;\n            a.add(x);\n            idxa.add(i);\n        } else {\n            totb+=x;\n            b.add(x);\n            idxb.add(i);\n        }\n    }\n    if (tota+totb<=m) {\n        val len = a.size\n        var dp = Array(len + 1, { i -> Array(tota + 1, { j -> false }) })\n        dp[0][0] = true;\n        for (i in 0..len - 1) for (j in 0..tota) if (dp[i][j]) {\n            dp[i + 1][j] = true;\n            dp[i + 1][j + a.get(i)] = true;\n        }\n        var ok = false;\n        var r1 = ArrayList<Int>();\n        var r2 = ArrayList<Int>();\n        var len1 = ArrayList<Int>();\n        var len2 = ArrayList<Int>();\n        for (j in 0..tota) if (dp[len][j] && Math.max(tota, 2 * Math.max(j, tota - j) - 1) + totb <= m) {\n            ok = true;\n            var i = len;\n            var jj = j;\n            while (i>0) {\n                if (dp[i-1][jj]) {\n                    r1.add(idxa.get(i-1));\n                    len1.add(a.get(i-1));\n                } else {\n                    r2.add(idxa.get(i-1));\n                    len2.add(a.get(i-1));\n                    jj-=a.get(i-1);\n                }\n                --i;\n            }\n            break;\n        }\n        if (ok) {\n            if (r1.size < r2.size) {\n                var rs = r1;\n                r1=r2;\n                r2=rs;\n            }\n            var res=Array(n+1,{i->0});\n            var num1=1;\n            var curlen=b.size;\n            for (i in 0..curlen-1) {\n                res[idxb.get(i)]=num1;\n                num1+=b.get(i)\n            };\n            var num2=num1+1;\n            curlen=r1.size;\n            for (i in 0..curlen-1) {\n                res[r1.get(i)]=num1;\n                num1+=2*len1.get(i);\n            }\n            curlen=r2.size;\n            for (i in 0..curlen-1) {\n                res[r2.get(i)]=num2;\n                num2+=2*len2.get(i);\n            }\n            for (i in 1..n) out.print(\"${res[i]} \");\n            out.println();\n        } else out.println(-1)\n    } else out.println(-1);\n    out.close();\n}"
}