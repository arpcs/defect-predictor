{
    "id": 131151625,
    "contestId": 1571,
    "creationTimeSeconds": 1633696735,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "titia"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.5",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 88,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 107929600,
    "source": "fun main() {\r\n    val (n, m) = kotlin.io.readLine()!!.split(' ').map { it.toInt() }\r\n    val AB= Array(n) {IntArray(2)}\r\n\r\n    for (i in 0..n-1){\r\n        val (x, y) = kotlin.io.readLine()!!.split(' ').map { it.toInt() }\r\n        AB[i][0]=x\r\n        AB[i][1]=y\r\n    }\r\n    val ANS=IntArray(n)\r\n    val USE=IntArray(m)\r\n\r\n    var now=0\r\n    var flag=1\r\n\r\n    for (i in 0..n-1){\r\n        if (AB[i][1]==1){\r\n            ANS[i]=now+1\r\n            if (now+AB[i][0]>m){\r\n                flag=0\r\n            }\r\n            else{\r\n                for (j in now..now+AB[i][0]-1){\r\n                    USE[j]=1\r\n                }\r\n                now=now+AB[i][0]\r\n            }\r\n        }\r\n    }\r\n    if (flag==0){\r\n        println(-1)\r\n        return\r\n    }\r\n\r\n    var fi=now\r\n    var se=now+1\r\n\r\n    var fi_ko=(m - now +1) / 2\r\n    var se_ko=(m - now ) - fi_ko\r\n\r\n    val DP=Array(n+1){IntArray(fi_ko+1){-1} }\r\n    // \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u70b7\ufffd\ufffd\ufffd\uf414\ufffd\ufffd\ufffd\ufffd\ufffd\u70b7\ufffd\ufffd\r\n    // \ufffdc\ufffd\ufffd\ufffdm-now+1\ufffd\ufffd\r\n\r\n    var SUM=0\r\n\r\n    DP[0][0]=0\r\n    var ip=0\r\n\r\n    val C= mutableListOf<Int>()\r\n\r\n    for (i in 0..n-1){\r\n        if (AB[i][1]==2){\r\n            C.add(i)\r\n\r\n            val k=AB[i][0]\r\n            SUM+=k\r\n\r\n            for (j in 0..fi_ko){\r\n                if (DP[ip][j]!=-1){\r\n                    if (j+k<=fi_ko) {\r\n                        DP[ip + 1][j + k] = j\r\n                    }\r\n                    if (SUM-j<=se_ko){\r\n                        DP[ip+1][j] = j\r\n                    }\r\n                }\r\n            }\r\n            ip+=1\r\n        }\r\n    }\r\n\r\n    //println(fi)\r\n    //println(se)\r\n\r\n    //println(fi_ko)\r\n    //println(se_ko)\r\n\r\n    //for (i in 0..n){\r\n    //    println(DP[i].joinToString (\" \"))\r\n    //}\r\n\r\n    flag=0\r\n    var nowx=0\r\n\r\n    for (j in 0..fi_ko){\r\n        if (DP[ip][j]!=-1){\r\n            flag=1\r\n            nowx=j\r\n            break\r\n        }\r\n    }\r\n    if (flag==0){\r\n        println(-1)\r\n        return\r\n    }\r\n\r\n    //println(C)\r\n\r\n    for (i in ip downTo 1){\r\n        //println(nowx)\r\n        val k=DP[i][nowx]\r\n        //println(k)\r\n        //println(\"!\")\r\n        if (k!=nowx){\r\n            ANS[C[i-1]]=fi+1\r\n            fi+=2*AB[C[i-1]][0]\r\n        }\r\n        else{\r\n            ANS[C[i-1]]=se+1\r\n            se+=2*AB[C[i-1]][0]\r\n        }\r\n        nowx=k\r\n    }\r\n\r\n    println(ANS.joinToString (\" \"))\r\n\r\n\r\n}"
}