{
    "id": 131091366,
    "contestId": 1571,
    "creationTimeSeconds": 1633627032,
    "relativeTimeSeconds": 9732,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "ck98"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 614400,
    "source": "import java.lang.AssertionError\r\n\r\nprivate fun readLn() = readLine()!! // string line\r\nprivate fun readInt() = readLn().toInt() // single int\r\nprivate fun readLong() = readLn().toLong() // single long\r\nprivate fun readDouble() = readLn().toDouble() // single double\r\nprivate fun readStrings() = readLn().split(\" \") // list of strings\r\nprivate fun readInts() = readStrings().map { it.toInt() } // list of ints\r\nprivate fun readLongs() = readStrings().map { it.toLong() } // list of longs\r\nprivate fun readDoubles() = readStrings().map { it.toDouble() } // list of doubles\r\n\r\nprivate fun myAssert(x: Boolean) {\r\n    if (!x) {\r\n        throw AssertionError()\r\n    }\r\n}\r\n\r\nfun main(args: Array<String>) {\r\n    var (n,m) = readInts()\r\n    val a = Array(n){IntArray(2)}\r\n    val b = IntArray(n)\r\n    val c = IntArray(n)\r\n    var sum=0\r\n    var sum1=0\r\n    for (i in 0 until n) {\r\n        var (x,y) = readInts()\r\n        a[i][0] = x\r\n        a[i][1]=y\r\n        b[i]=0\r\n        sum += x\r\n        c[i]=-1\r\n        if (y==1)sum1+=x\r\n    }\r\n    if(sum>m) println(-1)\r\n    else {\r\n        m-=sum1\r\n        sum-=sum1\r\n        var g=m\r\n        m++\r\n        for (i in 0 until n) {\r\n            if (a[i][1]==1){\r\n                c[i]=m\r\n                m+=a[i][0]\r\n                b[i]=1\r\n            }\r\n        }\r\n        val d = Array(n+1){IntArray(m/2+1)}\r\n        var ez=1\r\n        var maxi=-1\r\n        for (i in 0 until n+1) {\r\n            for (j in 0 until m/2+1) {\r\n                if(i==0 && j==0)d[i][j]=-2;\r\n                else if(i==0)d[i][j]=-1\r\n                else if(j==0)d[i][j]=-2\r\n                else if(b[i-1]==1)d[i][j]=d[i-1][j]\r\n                else if(j>=a[i-1][0] && d[i][j-a[i-1][0]]!=-1) {\r\n                    d[i][j]=i\r\n                    maxi= maxOf(j,maxi)\r\n                }\r\n                else d[i][j]=d[i-1][j]\r\n            }\r\n        }\r\n        if(sum-maxi>maxi) {\r\n            println(-1)\r\n        }\r\n        else {\r\n            var qw=1\r\n            var i=n-1\r\n            while (i>=0 && maxi>0) {\r\n                if(b[i]==1)i--\r\n                else if(d[i][maxi]!=i)i--\r\n                else {\r\n                    b[i]=1\r\n                    c[i]=qw\r\n                    qw += 2 * (a[i][0])\r\n                    i--\r\n                }\r\n            }\r\n            qw=2\r\n            for (i in 0 until n) {\r\n                if(b[i]==1)continue\r\n                c[i]=qw\r\n                qw += 2*(a[i][0])\r\n            }\r\n            for (i in 0 until n){\r\n                print(c[i])\r\n                print(\" \")\r\n            }\r\n        }\r\n    }\r\n}"
}