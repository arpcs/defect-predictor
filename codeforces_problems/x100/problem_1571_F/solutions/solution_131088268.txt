{
    "id": 131088268,
    "contestId": 1571,
    "creationTimeSeconds": 1633623354,
    "relativeTimeSeconds": 6054,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "gleb.astashkin"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.5",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 88,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 26316800,
    "source": "import java.lang.Exception\r\nimport java.lang.Integer.max\r\nimport java.lang.Integer.min\r\nimport java.lang.StringBuilder\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\nimport kotlin.collections.HashMap\r\nimport kotlin.math.abs\r\nimport kotlin.math.sqrt\r\n\r\n/*\r\n    println(r.iterator().next().value)\r\n    var r = TreeMap<Int, String>(Comparator<Int> { p0, p1 -> p1 - p0 })\r\n    fun solve(a: Int): Int {\r\n\r\n    var (n, m) = readLine()!!.split(' ').map{it.toInt()}\r\n    var r = readLine()!!.split(' ').map { it.toInt() }.toMutableList()\r\n    String.format(\"%.8g%n\", d)\r\n    println(String.format(\"%d %d\", l, r))\r\n\r\n    var a = Array(n, {IntArray(n)})\r\n    var b = Array(n){Pair<Int, Int>(0, 0)}\r\n\r\n    a = b.also { b = a }\r\n    var q = TreeSet<Pair<Int, Int>>(pairComparator(naturalOrder(), naturalOrder()))\r\n\r\n    fun calc(qn: Long, qs: Long, qx: Long): Boolean\r\n */\r\n\r\n/*\r\nfun <T, U> pairComparator(firstComparator: Comparator<T>, secondComparator: Comparator<U>): Comparator<Pair<T, U>> =\r\n    compareBy(firstComparator) { p: Pair<T, U> -> p.first }.thenBy(secondComparator) { p: Pair<T, U> -> p.second }\r\n\r\nb.sortWith(pairComparator(naturalOrder(), reverseOrder()))\r\n*/\r\n\r\nprivate fun readInt() = readLine()!!.toInt()\r\nprivate fun readInts() = readLine()!!.split(\" \").map {it.toInt()}\r\n\r\nfun main() {\r\n    var sb = StringBuffer()\r\n\r\n    var (n, m) = readInts()\r\n    var a = Array<Pair<Int, Int>>(n) {Pair(0, 0)}\r\n\r\n    for (i in 0 until n) {\r\n        var t = readInts().toMutableList()\r\n        a[i] = Pair(t[0], t[1])\r\n    }\r\n\r\n    if (a.sumOf { it.first } > m) {\r\n        println(-1)\r\n        return\r\n    }\r\n\r\n    var c = a.count { it.second == 2 }\r\n\r\n    var b = Array<Pair<Int, Int>>(c) {Pair(0, 0)}\r\n    var s = 0\r\n    if (true) {\r\n        var j = 0\r\n        for (i in 0 until n) {\r\n            if (a[i].second != 2) {\r\n                continue\r\n            }\r\n\r\n            b[j++] = Pair(a[i].first, i)\r\n            s += a[i].first\r\n        }\r\n    }\r\n\r\n\r\n    var dp = IntArray(s + 1) {-1}\r\n    dp[0] = 0\r\n\r\n    for (i in 0 until c) {\r\n        for (j in s downTo 0) {\r\n            if (dp[j] < 0) {\r\n                continue\r\n            }\r\n\r\n            var v = b[i].first + j\r\n\r\n            if (v > s) {\r\n                continue\r\n            }\r\n\r\n            if (dp[v] < 0) {\r\n                dp[v] = i + 1\r\n            }\r\n        }\r\n    }\r\n\r\n    var vmax = 0\r\n    var vmin = 0\r\n\r\n    for (j in s / 2 downTo 0) {\r\n        if (dp[j] < 0) {\r\n            continue\r\n        }\r\n\r\n        vmin = j\r\n        vmax = s - j\r\n        break\r\n    }\r\n\r\n    var emax = TreeSet<Int>()\r\n    while (vmax > 0) {\r\n        var i = dp[vmax] - 1\r\n        emax.add(b[i].second)\r\n        vmax -= b[i].first\r\n    }\r\n\r\n    var emin = TreeSet<Int>()\r\n    for (e in b) {\r\n        if (emax.contains(e.second)) {\r\n            continue\r\n        }\r\n        emin.add(e.second)\r\n    }\r\n\r\n    var R = IntArray(n)\r\n\r\n    var l1 = 1\r\n    for (i in emax) {\r\n        R[i] = l1\r\n        l1 += a[i].first * 2\r\n    }\r\n\r\n    var l2 = 2\r\n    for (i in emin) {\r\n        R[i] = l2\r\n        l2 += a[i].first * 2\r\n    }\r\n\r\n    var l = max(l1 - 1, l2 - 1)\r\n\r\n    for (i in 0 until n) {\r\n        if (a[i].second != 1) {\r\n            continue\r\n        }\r\n\r\n        R[i] = l\r\n        l += a[i].first\r\n    }\r\n\r\n    if (l > m + 1) {\r\n        println(-1)\r\n    } else {\r\n        for (e in R) {\r\n            sb.append(e)\r\n            sb.append(' ')\r\n        }\r\n        println(sb.toString())\r\n    }\r\n}"
}