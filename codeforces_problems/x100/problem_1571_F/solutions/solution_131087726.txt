{
    "id": 131087726,
    "contestId": 1571,
    "creationTimeSeconds": 1633622947,
    "relativeTimeSeconds": 5647,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "Noam13"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 88,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 100454400,
    "source": "private fun readLn() = readLine()!! // string line\r\nprivate fun readInt() = readLn().toInt() // single int\r\nprivate fun readStrings() = readLn().split(\" \") // list of strings\r\nprivate fun readInts() = readStrings().map { it.toInt() } // list of ints\r\nprivate fun readLong() = readLn().toLong() // single long\r\nprivate fun readLongs() = readStrings().map { it.toLong() } // list of longs\r\n\r\nval INF = 1000000000\r\nfun main() {\r\n    fun min(x: Int, y :Int) :Int = if(x>y) y else x\r\n    fun max(x: Int, y :Int) :Int = if(x<y) y else x\r\n    fun abs(x: Int):Int = if(x<0) -x else x\r\n    var (n,m) = readInts()\r\n    var res = IntArray(n)\r\n    var cur = 0\r\n    var a = arrayListOf<Pair<Int, Int>>()\r\n    var bad = false\r\n    var sum = 0\r\n    for(i in 0..n-1){\r\n        var (k,t) = readInts()\r\n        if (t==1){\r\n            if (cur + k > m) {\r\n                bad = true\r\n                break\r\n            }\r\n            res[i] = cur\r\n            cur += k\r\n        }\r\n        else {\r\n            a.add(Pair(k, i))\r\n            sum += k\r\n        }\r\n    }\r\n    //var arr = a.sortedWith(compareBy({ -it.first }))\r\n    var left = m - cur\r\n    if (sum > left) bad = true\r\n    if (!bad && sum > 0){\r\n        var sz = a.size\r\n        var dp = Array<IntArray>(sz+1, {IntArray(left+1)})\r\n        dp[0][0] = 1\r\n        for(i in 0..sz-1){\r\n            var k = a[i].first\r\n            for(l in 0..left) {\r\n                if(dp[i][l]!=0){\r\n                    if (l+k<=left) {\r\n                        dp[i+1][l+k] = 1\r\n                    }\r\n                    dp[i+1][l] = -1\r\n                }\r\n            }\r\n        }\r\n        //println(dp[sz].joinToString(\" \"))\r\n        var amt = -1\r\n        for(x in 0..((left+1)/2) ){\r\n            if (dp[sz][x]!=0 && sum-x<=left/2){\r\n                amt = x\r\n            }\r\n        }\r\n        if (amt == -1) bad = true\r\n        else{\r\n            var took = IntArray(sz){0}\r\n            var c0 = cur\r\n            for(i in 0..sz-1){\r\n                if (dp[sz-i][amt]==1){\r\n                    var p = a[sz-i-1]\r\n                    amt -= p.first\r\n                    res[p.second] = c0\r\n                    c0 += 2*p.first\r\n                    took[sz-i-1] = 1\r\n                }\r\n            }\r\n            var c1 = cur + 1\r\n            for(i in 0..sz-1) if(took[i]==0){\r\n                var p = a[i]\r\n                res[p.second] = c1\r\n                c1 += 2*p.first\r\n            }\r\n        }\r\n    }\r\n    if (bad) println(-1)\r\n    else println(res.map({x -> x+1}).joinToString(\" \"))\r\n    \r\n    \r\n    // for(i in 1..t){\r\n    //     var (a,b) = readInts()\r\n    //     println(a+b)\r\n    // }\r\n\r\n//     var qur = Array(q, {i -> Pair(-1, -1)})\r\n//     var dec = IntArray(n+1){INF}\r\n//     var inds = LongArray(n+1){-1}\r\n//     var qq = qur.sortedWith(compareBy({ it.second }, { it.first }))\r\n//     for(i in qur.indices){\r\n//         val p = readInts()\r\n//         qur[i] = Pair(i, p[1]-1)\r\n//         st[i] = p[0] - 1\r\n//     }\r\n    \r\n\r\n    \r\n    \r\n\r\n//     println(ans.joinToString(\" \"))\r\n\r\n}"
}