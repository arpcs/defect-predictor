{
    "id": 131088261,
    "contestId": 1571,
    "creationTimeSeconds": 1633623344,
    "relativeTimeSeconds": 6044,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "tabr"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 23961600,
    "source": "import java.io.BufferedReader\r\nimport java.io.InputStreamReader\r\nimport java.util.*\r\nimport java.lang.AssertionError\r\nimport kotlin.math.*\r\n\r\nval input = BufferedReader(InputStreamReader(System.`in`))\r\nval output = StringBuilder()\r\n\r\nfun main() {\r\n    var (n, m) = ints()\r\n    var a = ArrayList<Pair<Int, Int>>()\r\n    var ans = IntArray(n)\r\n    var d = 0\r\n    var s = 0\r\n    var ck = IntArray(n) { -1 }\r\n    for (i in 1..n) {\r\n        var (k, t) = ints()\r\n        if (t == 2) {\r\n            a.add(Pair(k, i))\r\n            s += k\r\n            ck[i - 1] = k\r\n        } else {\r\n            ans[i - 1] = d + 1\r\n            d += k\r\n        }\r\n    }\r\n    var k = a.size\r\n    var dp = Array<IntArray>(k + 1) { IntArray(m + 10) { 0 } }\r\n    dp[0][0] = 1\r\n    for (i in 0..k - 1) {\r\n        for (j in 0..m + 5 - a[i].first) {\r\n            if (dp[i][j] == 0) {\r\n                continue\r\n            }\r\n            dp[i + 1][j] = 1\r\n            dp[i + 1][j + a[i].first] = 1\r\n        }\r\n    }\r\n    var id = -1\r\n    for (i in 0..m) {\r\n        if (dp[k][i] == 1 && d + 2 * i - 1 <= m && d + 1 + d * (s - i) - 1 <= m) {\r\n            id = i\r\n            break\r\n        }\r\n    }\r\n    if (id == -1 || d > m) {\r\n        cout(-1)\r\n        print(output)\r\n        return\r\n    }\r\n    var x = ArrayList<Int>()\r\n    var y = ArrayList<Int>()\r\n    for (i in k downTo 1) {\r\n        if (id >= a[i - 1].first && dp[i - 1][id - a[i - 1].first] == 1) {\r\n            x.add(a[i - 1].second)\r\n            id -= a[i - 1].first\r\n        } else {\r\n            y.add(a[i - 1].second)\r\n        }\r\n    }\r\n    assert(id == 0)\r\n    var nd = d\r\n    for (i in x) {\r\n        ans[i - 1] = nd + 1\r\n        nd += ck[i - 1] * 2\r\n    }\r\n    nd = d + 1\r\n    for (i in y) {\r\n        ans[i - 1] = nd + 1\r\n        nd += ck[i - 1] * 2\r\n    }\r\n    cout(ans)\r\n    print(output)\r\n}\r\n\r\nfun string() = input.readLine()\r\nfun int() = string().toInt()\r\nfun long() = string().toLong()\r\nfun strings() = ArrayList(string().split(\" \"))\r\nfun ints() = ArrayList(string().split(\" \").map { it.toInt() })\r\nfun longs() = ArrayList(string().split(\" \").map { it.toLong() })\r\nfun cout(s: String) = output.appendLine(s)\r\nfun <T> cout(s: T) = output.appendLine(s.toString())\r\nfun cout(s: IntArray) = output.appendLine(s.joinToString(\" \"))\r\nfun cout(s: LongArray) = output.appendLine(s.joinToString(\" \"))\r\nfun <T> cout(s: Array<T>) = output.appendLine(s.joinToString(\" \"))\r\nfun <T> cout(s: Iterable<T>) = output.appendLine(s.joinToString(\" \"))\r\nfun assert(x: Boolean) {\r\n    if (!x) throw AssertionError()\r\n}"
}