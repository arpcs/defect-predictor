{
    "id": 131085303,
    "contestId": 1571,
    "creationTimeSeconds": 1633621525,
    "relativeTimeSeconds": 4225,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "timmyfeng"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 30105600,
    "source": "fun main() {\r\n    var (n, m) = readLine()!!.split(\" \").map { it.toInt() }\r\n\r\n    val length = mutableListOf<Int>()\r\n    val index = mutableListOf<Int>()\r\n    val startDays = IntArray(n)\r\n    var totalSum = 0\r\n\r\n    for (i in 0 until n) {\r\n        val (k, t) = readLine()!!.split(\" \").map { it.toInt() }\r\n\r\n        if (t == 1) {\r\n            m -= k\r\n            startDays[i] = m + 1\r\n        } else {\r\n            totalSum += k\r\n            length.add(k)\r\n            index.add(i)\r\n        }\r\n    }\r\n\r\n    n = length.size\r\n\r\n    val possibleSum = Array(n + 1) { BooleanArray(m + 1) }\r\n    possibleSum[0][0] = true\r\n\r\n    for (i in 0 until n) {\r\n        for (j in 0..m) {\r\n            if (possibleSum[i][j]) {\r\n                if (j + length[i] <= m) {\r\n                    possibleSum[i + 1][j + length[i]] = true\r\n                }\r\n                possibleSum[i + 1][j] = true\r\n            }\r\n        }\r\n    }\r\n\r\n    var evenSum = -1\r\n    for (i in 0..m) {\r\n        if (possibleSum[n][i] && i <= m / 2 && totalSum - i <= (m + 1) / 2) {\r\n            evenSum = i\r\n            break\r\n        }\r\n    }\r\n\r\n    if (evenSum == -1) {\r\n        println(-1)\r\n        return\r\n    }\r\n\r\n    var oddPtr = 1\r\n    var evenPtr = 2\r\n    for (i in n - 1 downTo 0) {\r\n        if (possibleSum[i][evenSum]) {\r\n            startDays[index[i]] = oddPtr\r\n            oddPtr += 2 * length[i]\r\n        } else {\r\n            startDays[index[i]] = evenPtr\r\n            evenPtr += 2 * length[i]\r\n            evenSum -= length[i]\r\n        }\r\n    }\r\n\r\n    println(startDays.joinToString(\" \"))\r\n}"
}