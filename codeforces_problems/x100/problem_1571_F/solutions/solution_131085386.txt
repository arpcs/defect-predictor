{
    "id": 131085386,
    "contestId": 1571,
    "creationTimeSeconds": 1633621572,
    "relativeTimeSeconds": 4272,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "bicsi"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 88,
    "timeConsumedMillis": 311,
    "memoryConsumedBytes": 218521600,
    "source": "fun main() {\r\n\r\n    var (n, m) = readInts()\r\n    var ans = IntArray(n) {0}\r\n\r\n    var dp = Array(n + 1) {IntArray(m + 1) {0} }\r\n    dp[0][0] = 1\r\n    var sum = 0\r\n    var ts = IntArray(n)\r\n    var ks = IntArray(n)\r\n    for (i in 0 until n) {\r\n        var (ki, ti) = readInts()\r\n        dp[i + 1] = dp[i].clone()\r\n        if (ti == 1) {\r\n            ans[i] = m - ki + 1\r\n            m -= ki\r\n        } else {\r\n            for (j in 0 until m) {\r\n                if (dp[i][j] == 1 && j + ki <= m) {\r\n                    dp[i + 1][j + ki] = 1\r\n                }\r\n            }\r\n            sum += ki\r\n        }\r\n        ts[i] = ti\r\n        ks[i] = ki\r\n    }\r\n    if (m < 0) {\r\n        println(-1)\r\n        return\r\n    }\r\n\r\n//    for (i in 0 until n) {\r\n//        println(dp[i].joinToString())\r\n//    }\r\n\r\n    for (i in 0 until m + 1) {\r\n        if (dp[n][i] == 0) continue\r\n        var m1 = m / 2\r\n        var m2 = (m + 1) / 2\r\n        if (m1 >= i && m2 >= (sum - i)) {\r\n//            println(\"i=$i j=${sum-i} m1=$m1 m2=$m2\")\r\n            var bla = i\r\n            for (j in (0 until n).reversed()) {\r\n                assert(dp[j + 1][bla] == 1)\r\n                if (ts[j] == 1) continue\r\n                if (dp[j][bla] == 1) {\r\n                    ans[j] = 2 * (m2 - ks[j] + 1) - 1\r\n                    m2 -= ks[j]\r\n                } else {\r\n                    ans[j] = 2 * (m1 - ks[j] + 1)\r\n                    m1 -= ks[j]\r\n                    bla -= ks[j]\r\n                }\r\n            }\r\n            assert(m1 >= 0)\r\n            assert(m2 >= 0)\r\n\r\n            println(ans.joinToString(\" \"))\r\n            return\r\n        }\r\n    }\r\n\r\n    println(-1)\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nprivate fun readLn() = readLine()!! // string line\r\nprivate fun readInt() = readLn().toInt() // single int\r\nprivate fun readStrings() = readLn().split(\" \") // list of strings\r\nprivate fun readInts() = readStrings().map { it.toInt() } // list of ints"
}