{
    "id": 131084532,
    "contestId": 1571,
    "creationTimeSeconds": 1633621117,
    "relativeTimeSeconds": 3817,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "lightseba"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.5",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 88,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 172646400,
    "source": "import kotlin.math.*\r\nimport java.io.*\r\nimport java.util.*\r\n    \r\nfun solve() {\r\n    val n = nextInt()\r\n    var m = nextInt()\r\n    val ks = Array(3) { ArrayList<Pair<Int, Int>>() }\r\n    val ans = IntArray(n + 1) { -1 }\r\n\r\n    for (i in 1..n) {\r\n        val k = nextInt()\r\n        val t = nextInt()\r\n\r\n        ks[t].add(k to i)\r\n    }\r\n\r\n    var day = 1\r\n    for ((k, i) in ks[1]) {\r\n        if (k > m) {\r\n            println(-1)\r\n            return\r\n        }\r\n\r\n        ans[i] = day\r\n        m -= k\r\n        day += k\r\n    }\r\n\r\n    val len1 = m / 2\r\n    val len0 = m - len1 // even index from 0\r\n    val n2 = ks[2].size\r\n\r\n    val dp = Array(n2) { IntArray(len0 + 1) { -1 } }\r\n    val dir = Array(n2) { IntArray(len0 + 1) { -1 } }\r\n\r\n    fun go(i: Int, sum0: Int, sum1: Int): Boolean {\r\n        if (sum0 > len0 || sum1 > len1)\r\n            return false\r\n\r\n        if (i == n2)\r\n            return true\r\n\r\n        if (dp[i][sum0] != -1)\r\n            return dp[i][sum0] == 1\r\n\r\n        val k = ks[2][i].first\r\n        \r\n        if (go(i + 1, sum0 + k, sum1)) {\r\n            dp[i][sum0] = 1\r\n            dir[i][sum0] = 0\r\n            return true\r\n        }\r\n\r\n        if (go(i + 1, sum0, sum1 + k)) {\r\n            dp[i][sum0] = 1\r\n            dir[i][sum0] = 1\r\n            return true\r\n        }\r\n\r\n        dp[i][sum0] = 0\r\n        return false\r\n    }\r\n\r\n    if (!go(0, 0, 0)) {\r\n        println(-1)\r\n        return\r\n    }\r\n\r\n    var day0 = day\r\n    var day1 = day + 1\r\n    var sum0 = 0\r\n\r\n    for (i in 0 until n2) {\r\n        val (k, idx) = ks[2][i]\r\n\r\n        if (dir[i][sum0] == 0) {\r\n            ans[idx] = day0\r\n            day0 += 2 * k\r\n            sum0 += k\r\n        }\r\n        else {\r\n            ans[idx] = day1\r\n            day1 += 2 * k\r\n        }\r\n    }\r\n\r\n    println(ans.drop(1).joinToString(\" \"))\r\n}\r\n    \r\nfun main() {\r\n    // val t = nextInt(); for (i in 1..t)\r\n    solve()\r\n    \r\n    pw.close()\r\n}\r\n    \r\nval pw = PrintWriter(System.out)\r\nval br = BufferedReader(InputStreamReader(System.`in`))\r\nvar st = StringTokenizer(\"\")\r\nfun next(): String {\r\n    while (!st.hasMoreTokens()) st = StringTokenizer(br.readLine())\r\n    return st.nextToken()\r\n}\r\nfun nextInt() = next().toInt()\r\nfun nextLong() = next().toLong()\r\nfun nextDouble() = next().toDouble()\r\nfun <T> print(x: T) = pw.print(x)\r\nfun <T> println(x: T) = pw.println(x)\r\nfun println() = pw.println()"
}