{
    "id": 229772447,
    "contestId": 1571,
    "creationTimeSeconds": 1698290805,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "cliu123"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.6",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include \"bits/stdc++.h\"\r\nusing namespace std;\r\nint n,m;\r\nstruct node{\r\n    int k;\r\n    int t;\r\n    int id;\r\n    int op;\r\n    int an=0;\r\n}no[5005];\r\nint dp[25000006];\r\nint pan[1000006];\r\nint ans=1;\r\nvoid dfs(int x){\r\n    if(x==0){\r\n        int ans1=ans;\r\n        ans=2;\r\n        for(int i=1;i<=n;i++){\r\n            if(no[i].op==2&&no[i].an==0){\r\n                no[i].an=ans;\r\n                ans=ans+no[i].k;\r\n            }\r\n        }\r\n        ans=max(ans1-1,ans-1);\r\n        for(int i=1;i<=n;i++){\r\n            if(no[i].op==1){\r\n                no[i].an=ans;\r\n                ans=ans+no[i].k;\r\n            }\r\n        }\r\n        return;\r\n    }\r\n    no[dp[x]].an=ans;\r\n    //cout<<x<<\" \"<<ans<<\" \"<<dp[x]<<\"\\n\";\r\n    ans=ans+(no[dp[x]].k)*2;\r\n    dfs(x-no[dp[x]].k);\r\n}\r\nint main(){\r\n    cin>>n>>m;\r\n    int ge2=0;\r\n    int ge1=0;\r\n    int siz1=0;\r\n    int siz2=0;\r\n    for(int i=1;i<=n;i++) {\r\n        int k;\r\n        int t;\r\n        cin >> k >> t;\r\n        if (t == 1) {\r\n            no[i].k = k;\r\n            no[i].t = t;\r\n            no[i].id = i;\r\n            no[i].op = 1;\r\n            ge1 = ge1 + k;\r\n        } else {\r\n            no[i].k = k;\r\n            no[i].t = t;\r\n            no[i].id = i;\r\n            no[i].op = 2;\r\n            ge2 = ge2 + k;\r\n        }\r\n    }\r\n       int cnt=0;\r\n       pan[++cnt]=0;\r\n       int zhen=0;\r\n       for(int i=1;i<=n;i++){\r\n           if(no[i].op==2){\r\n               int cnt1=cnt;\r\n               for(int j=1;j<=cnt1;j++){\r\n                   int ou=pan[j];\r\n                  if(dp[ou+no[i].k]==0) {\r\n                      pan[++cnt] = ou + no[i].k;\r\n                      dp[ou + no[i].k] = no[i].id;\r\n                      int gh = max((pan[cnt] - 1) * 2 + 1, (ge2 - pan[cnt]) * 2);\r\n                      if (gh + ge1 <= m) {\r\n                          zhen = 1;\r\n                          dfs(pan[cnt]);\r\n                          break;\r\n                      }\r\n                  }\r\n               }\r\n               if(zhen==1){\r\n                   break;\r\n               }\r\n           }\r\n       }\r\n    if(zhen==0){\r\n        cout<<-1<<\"\\n\";\r\n    }\r\n    else{\r\n        for(int i=1;i<=n;i++){\r\n            cout<<no[i].an<<\" \";\r\n        }\r\n    }\r\n}\r\n"
}