{
    "id": 131089217,
    "contestId": 1571,
    "creationTimeSeconds": 1633624775,
    "relativeTimeSeconds": 7475,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "tob123"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.5",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 88,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 27648000,
    "source": "import java.util.*\r\n\r\nprivate fun readLn() = readLine()!!\r\nprivate fun readInt() = readLn().toInt()\r\nprivate fun readLong() = readLn().toLong()\r\nprivate fun readStrings() = readLn().split(\" \")\r\nprivate fun readInts() = readStrings().map { it.toInt() }\r\nprivate fun readLongs() = readStrings().map { it.toLong() }\r\nprivate fun <T>printColl(a : Collection<T>){\r\n\tfor(x in a)\r\n\t\tprint(\"$x \")\r\n\tprintln()\r\n}\r\n\r\n/*\r\ntoIntArray()\r\nIntArray(sz) {initVal}\r\nArrayList<T>(...)\r\nIntArrayOf(a, b, c)\r\nminOf(x, y)\r\n1 shl 10\r\nprintln(res.joinToString(\" \"))\r\na.map {it.toString()}\r\nl.toIntArray()\r\n*/\r\n/*\r\nfun getElem(oth: Set<Int>, pq: PriorityQueue<Pair<Long, Int>>): Pair<Long,Int>?{\r\n\tvar p1: Pair<Long, Int>? = null\r\n\twhile(pq.isNotEmpty()) {\r\n\t\tval (c, ind) = pq.poll()\r\n\t\tif(oth.contains(ind)){\r\n\t\t\tp1 = Pair(c, ind)\r\n\t\t\tbreak\r\n\t\t}\r\n\t}\r\n    return p1\r\n}\r\n*/\r\n\r\nfun main(){\r\n  /*\r\n  val (n, m) = readInts()\r\n\tval a = readLongs()\r\n\tval G = Array(n) { mutableListOf<Pair<Int,Long>>() }\r\n\tfor(i in 0 until m){\r\n\t\tvar (x, y, w) = readLongs()\r\n\t\tx--\r\n\t\ty--\r\n\t}\r\n  */\r\n\tvar (n, m) = readInts()\r\n\tval K = IntArray(n)\r\n\tval T = IntArray(n)\r\n\tval res = mutableListOf<Pair<Int,Int>>()\r\n\tfor(i in 0 until n){\r\n\t\tval (k, t) = readInts()\r\n\t\tK[i] = k; T[i] = t\r\n\t\tif(t == 1){\r\n\t\t\tm -= k\r\n\t\t\tres.add(Pair(i, m))\r\n\t\t}\r\n\t}\r\n\tif(m < 0){\r\n\t\tprintln(-1)\r\n\t\treturn\r\n\t}\r\n\tval dp = IntArray(m+1) {-1}\r\n\tdp[0] = 0\r\n\tvar sum = 0\r\n\tfor(i in 0 until n){\r\n\t\tif(T[i] == 1) continue\r\n\t\tsum += K[i]\r\n\t\tfor(j in dp.size-1 downTo K[i]){\r\n\t\t\tif(dp[j] == -1 && dp[j-K[i]] != -1){\r\n\t\t\t\tdp[j] = i\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//printColl(dp.toCollection(ArrayList<Int>()))\r\n\tval hf = (m+1)/2\r\n\tvar bst = 0\r\n\tfor(i in 0 .. hf)\r\n\t\tif(dp[i] != -1)\r\n\t\t\tbst = i\r\n\tif(sum - bst > m/2){\r\n\t\tprintln(-1)\r\n\t\treturn\r\n\t}\r\n\tval ind1 = mutableSetOf<Int>()\r\n\tvar cur = bst\r\n\twhile(cur > 0){\r\n\t\tind1.add(dp[cur])\r\n\t\tcur -= K[dp[cur]]\r\n\t}\r\n\tval ind2 = mutableSetOf<Int>()\r\n\tfor(i in 0 until n){\r\n\t\tif(T[i] != 1 && !ind1.contains(i))\r\n\t\t\tind2.add(i)\r\n\t}\r\n\tfor((st,coll) in listOf(Pair(0,ind1), Pair(1,ind2))){\r\n\t\tvar cur = st\r\n\t\t//println(coll.joinToString(\" \") {it.toString()})\r\n\t\tfor(x in coll){\r\n\t\t\tres.add(Pair(x, cur))\r\n\t\t\tcur += 2*K[x]\r\n\t\t}\r\n\t}\r\n\tres.sortBy { it.first }\r\n\tprintln(res.joinToString(\" \") { it.second.inc().toString() })\r\n}\r\n"
}