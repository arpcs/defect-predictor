{
    "id": 131272173,
    "contestId": 1571,
    "creationTimeSeconds": 1633756909,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "zhanghengrui"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 88,
    "timeConsumedMillis": 234,
    "memoryConsumedBytes": 24883200,
    "source": "import kotlin.math.abs\n\nfun main() {\n    val (n, m) = readLine()!!.split(' ').map(String::toInt)\n    val v1: ArrayList<Int> = ArrayList()\n    val v2: ArrayList<Int> = ArrayList()\n    val p1: ArrayList<Int> = ArrayList()\n    val p2: ArrayList<Int> = ArrayList()\n    var s = 0\n    var s0 = 0\n    for (i in 0 until n) {\n        val (k, t) = readLine()!!.split(' ').map(String::toInt)\n        s += k\n        assert(t == 1 || t == 2)\n        when (t) {\n            1 -> {\n                v1.add(k)\n                p1.add(i)\n            }\n            2 -> {\n                v2.add(k)\n                p2.add(i)\n                s0 += k\n            }\n        }\n    }\n    if (s > m)\n        println(-1)\n    else {\n        val f: Array<Boolean> = Array(s0 + 1) { it == 0 }\n        val last: Array<Int> = Array(s0 + 1) { 0 }\n        for (i in 0 until v2.size) {\n            for (j in s0.downTo(v2[i])) {\n                if (f[j])\n                    continue\n                if (f[j - v2[i]]) {\n                    f[j] = true\n                    last[j] = i\n                }\n            }\n        }\n        var s1 = 0\n        var s2 = s0\n        for (i in 0..s0) {\n            if (!f[i])\n                continue\n            if (abs(i * 2 - s0) < abs(s1 - s2)) {\n                s1 = i\n                s2 = s0 - i\n            }\n        }\n        if (s2 * 2 - 1 + s - s0 <= m) {\n            var s3 = m + 1\n            val answer: Array<Int> = Array(n) { 0 }\n            for (i in 0 until v1.size) {\n                s3 -= v1[i]\n                answer[p1[i]] = s3\n            }\n            s3 = 1\n            var p = s2\n            while (p != 0) {\n                answer[p2[last[p]]] = s3\n                s3 += v2[last[p]] * 2\n                p -= v2[last[p]]\n            }\n            s3 = 2\n            for (i in 0 until v2.size) {\n                if (answer[p2[i]] == 0) {\n                    answer[p2[i]] = s3\n                    s3 += v2[i] * 2\n                }\n            }\n            println(answer.joinToString(\" \"))\n        } else\n            println(\"-1\")\n    }\n}"
}