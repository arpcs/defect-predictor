{
    "id": 131085898,
    "contestId": 1571,
    "creationTimeSeconds": 1633621868,
    "relativeTimeSeconds": 4568,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "mip182"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.5",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 88,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 26316800,
    "source": "import java.util.*\r\nimport kotlin.Comparator\r\nimport kotlin.collections.HashMap\r\n\r\n// Thanks BenQ!\r\n/* sorting\r\n * 1 (ok)\r\n\tval a = nextLongs().sorted() // a is mutable list\r\n * 2 (ok)\r\n\tval a = arrayListOf<Long>() // or ArrayList<Long>()\r\n\ta.addAll(nextLongs())\r\n\ta.sort()\r\n * 3 (ok)\r\n\tval A = nextLongs()\r\n\tval a = Array<Long>(n,{0})\r\n\tfor (i in 0..n-1) a[i] = A[i]\r\n\ta.sort()\r\n * 4 (ok)\r\n\tval a = ArrayList(nextLongs())\r\n\ta.sort()\r\n * 5 (NOT ok, quicksort)\r\n\tval a = LongArray(N) // or nextLongs().toLongArray()\r\n\tArrays.sort(a)\r\n */\r\n/* 2D array\r\n * val ori = Array(n, {IntArray(n)})\r\n * val ori = arrayOf(\r\n\tintArrayOf(8, 9, 1, 13),\r\n\tintArrayOf(3, 12, 7, 5),\r\n\tintArrayOf(0, 2, 4, 11),\r\n\tintArrayOf(6, 10, 15, 14)\r\n\t)\r\n */\r\n/* printing variables:\r\n * println(\"${l+1} and $r\")\r\n * print d to 8 decimal places: String.format(\"%.8g%n\", d)\r\n * try to print one stringbuilder instead of multiple prints\r\n */\r\n/* comparing pairs\r\n\tval pq = PriorityQueue<Pair<Long,Int>>({x,y -> x.first.compareTo(y.first)})\r\n\t\t\t\t\t\t\t\t\t\t~ (compareBy {it.first})\r\n\tval A = arrayListOf(Pair(1,3),Pair(3,2),Pair(2,3))\r\n\tval B = A.sortedWith(Comparator<Pair<Int,Int>>{x,y -> x.first.compareTo(y.first)})\r\n\tsortBy\r\n */\r\n/* hashmap\r\n\tval h = HashMap<String,Int>()\r\n\tfor (i in 0..n-2) {\r\n\t\tval w = s.substring(i,i+2)\r\n\t\tval c = h.getOrElse(w){0}\r\n\t\th.put(w,c+1)\r\n\t}\r\n */\r\n/* basically switch, can be used as expression\r\n\twhen (x) {\r\n\t\t0,1 -> print(\"x <= 1\")\r\n\t\t2 -> print(\"x == 2\")\r\n\t\telse -> { // Note the block\r\n\t\t\tprint(\"x is neither 1 nor 2\")\r\n\t\t}\r\n\t}\r\n*/\r\n// swap : a = b.also { b = a }\r\n// arraylist remove element at index: removeAt, not remove ...\r\n// lower bound: use .binarySearch()\r\n//----------------------------------------------------------------------------------\r\n//fun dfs(a: Int, b: Int) {\r\n//    if (cur == k) return\r\n//    ans[a] = true\r\n//    if (b != 0) {\r\n//        cur ++\r\n//        deg[a] ++\r\n//        if (deg[b] == 1) cur --\r\n//        deg[b] ++\r\n//        if (deg[b] == 1) cur ++\r\n//    }\r\n//    for (i in adj[a]) if (i != b) {\r\n//        dfs(i,a)\r\n//    }\r\n//}\r\n// \u0440\u0430\u0431\u043e\u0447\u0438\u0439 \u0434\u0444\u0441\r\n//----------------------------------------------------------------------------------\r\n// fun go(a: Int) : Int {\r\n//    return a\r\n//}\r\n//----------------------------------------------------------------------------------\r\n// Thanks BenQ xD\r\nconst val MOD = 998244353\r\nconst val INFLL = (1e18).toLong()\r\nconst val INF = (1e9).toInt()\r\nconst val SZ = 1 shl 17\r\nfun YN(b: Boolean): String {\r\n    return if (b) \"YES\" else \"NO\"\r\n}\r\n\r\nfun add(a: Int, b: Int) = (a + b) % MOD // from tourist :o\r\nfun sub(a: Int, b: Int) = (a - b + MOD) % MOD\r\nfun mul(a: Int, b: Int) = ((a.toLong() * b) % MOD).toInt()\r\nfun gcd(a: Int, b: Int): Int = if (b == 0) a else gcd(b, a % b)\r\n\r\nfun example() {\r\n    println(String.format(\"%.8f\", 5.25)) // print to 8 decimals\r\n    val arr2D = Array<IntArray>(5, { IntArray(5, { 5 }) })\r\n    var (x, y) = arrayOf(3, 2) // or rInts(2)\r\n    when (x) { //  switch, can be used as expression\r\n        0, 1 -> println(\"x <= 1\")\r\n        2 -> println(\"x == 2\") // Note the block\r\n        else -> {\r\n            println(\"x is neither 1 nor 2\")\r\n        }\r\n    }\r\n    x = y.also { y = x } // swap x and y\r\n    println(\"${maxOf(x + 2, y)}\") // (x,y)=(4,3) -> 4\r\n    val h = HashMap<String, Int>()\r\n    val s = \"ababa\"\r\n    for (i in 0..s.length - 2) {\r\n        val w = s.substring(i, i + 2)\r\n        val c = h.getOrElse(w, { 0 })\r\n        h[w] = c + 1\r\n    }\r\n    for ((a, b) in h) println(\"${a} ${b}\") // key,value\r\n    val pq = PriorityQueue<Pair<Long, Int>>() { x, y ->\r\n        x.first.compareTo(y.first)\r\n    } // or compareBy{it.first}\r\n    val A = arrayListOf(Pair(1, 3), Pair(3, 2), Pair(2, 3))\r\n    val B = A.sortedWith(Comparator<Pair<Int, Int>> { x, y ->\r\n        x.first.compareTo(y.first)\r\n    }) // or sortBy{it.first}\r\n    val list = arrayListOf('a', 'b', 'c', 'd', 'e')\r\n    println(list.binarySearch('d')) // 3\r\n    list.remove('d')\r\n    val actualInsertPoint = -(list.binarySearch('d') + 1) // 3\r\n    list.add(actualInsertPoint, 'd') // [a,b,c,d,e]\r\n    list.removeAt(1) // remove at index -> [a,c,d,e]\r\n}\r\n\r\nprivate fun readLn() = readLine()!! // string line\r\nprivate fun readInt() = readLn().toInt() // single int\r\nprivate fun readLong() = readLn().toLong() // single long\r\nprivate fun readDouble() = readLn().toDouble() // single double\r\nprivate fun readStrings() = readLn().split(\" \") // list of strings\r\nprivate fun readInts() = readStrings().map { it.toInt() } // list of ints\r\nprivate fun readLongs() = readStrings().map { it.toLong() } // list of longs\r\nprivate fun readDoubles() = readStrings().map { it.toDouble() } // list of doubles\r\n\r\n// var g = Array<MutableList<Int>>(n, { i -> mutableListOf() }) \u0435\u0449\u0435 \u0433\u0440\u0430\u0444, \u043d\u043e \u043c\u0431 \u043d\u0435\u0440\u0430\u0431\u043e\u0447\u0438\u0439\r\n// ArrayList - \u043c\u0430\u0441\u0441\u0438\u0432, \u043a\u0443\u0434\u0430 \u043c\u043e\u0436\u043d\u043e \u043f\u0443\u0448\u0431\u0435\u043a\u0430\u0442\u044c\r\n// Array<Int>(n){0} - \u043c\u0430\u0441\u0441\u0438\u0432, \u0433\u0434\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0443 \u043f\u0443\u0448\u0431\u0435\u043a\u0430\u0442\u044c\r\n// ArrayList< ArrayList<Int> >() - \u0433\u0440\u0430\u0444\r\n// Array(n, { ArrayList<Pair<Int, Int>>() }) - \u0433\u0440\u0430\u0444 \u0442\u0443\u0440\u0438\u0441\u0442\u0430, \u043d\u043e \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442\r\n// var g = Array(n) { ArrayList<Int>() } - \u0440\u0430\u0431\u043e\u0447\u0438\u0439 \u0433\u0440\u0430\u0444\r\n// val \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0430, var \u0433\u0443\u0434\r\n// ---------------------------------------------------\r\n// var cnt = IntArray(MAX)\r\n// var r = readInts()\r\n//    for (x in r) cnt[x]++\r\n//    3 (ok)\r\n//val A = nextLongs()\r\n//val a = Array<Long>(n,{0})\r\n//for (i in 0..n-1) a[i] = A[i]\r\n// \u0432 ArrayList \u043c\u043e\u0436\u043d\u043e \u043f\u0443\u0448\u0431\u0435\u043a\u0430\u0442\u044c\r\n//a.sort()\r\n// for (x in a), \u0433\u0434\u0435 a - \u043c\u0430\u0441\u0441\u0438\u0432, \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442\r\n//----------------------------------------------------\r\n// \u0432\u0441\u0435\u0433\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c var\r\n// mutableListOf<Int>() - \u0435\u0449\u0435 \u043e\u0434\u0438\u043d \u0441\u043f\u043e\u0441\u043e\u0431 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043c\u0430\u0441\u0441\u0438\u0432 \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u043d\u043e \u043f\u0443\u0448\u0431\u0435\u043a\u0430\u0442\u044c\r\n// \u0432\u044b\u0432\u043e\u0434 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u0432 \u0441\u0442\u0440\u043e\u043a\u0435 - $x,$a\r\n// var b = Array<Pair<Int, Int>>(n, {i -> Pair(a[i], i)}) - quick initialize\r\n// b.sortWith(compareBy({it.first}, {it.second})) - sort pairs\r\n//var A: Array<Int> = TODO() , initialize global array\r\n// use it for custom comparator\r\n// sort \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442, sorted \u043d\u0435 \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043d\u043e\u0432\u0443\u044e\r\nfun solve() {\r\n    var (m, n) = readInts()\r\n    var a = mutableListOf<Pair<Int, Int>>()\r\n    var b = Array<Int>(m) { 0 }\r\n    var current_free = n\r\n    var ans = Array<Int>(m) { -1 }\r\n    var total = 0\r\n    for (i in 0 until m) {\r\n        var (k, t) = readInts()\r\n        if (t == 1) {\r\n            ans[i] = current_free - k + 1\r\n            current_free -= k\r\n        } else {\r\n            b[i] = k\r\n            a.add(Pair(k, i))\r\n            total += k\r\n        }\r\n    }\r\n    if (current_free == 0) {\r\n        if (a.isEmpty()) {\r\n            for (j in 0 until m) {\r\n                print(\"${ans[j]} \")\r\n            }\r\n            println()\r\n        } else\r\n            println(-1)\r\n    } else if (current_free < 1) {\r\n        println(-1)\r\n    } else {\r\n        n = current_free\r\n        var odd = (n + 1) / 2\r\n        var even = n / 2\r\n        var dp = Array<Boolean>(odd + 1) { false }\r\n        var par = Array<Pair<Int, Int>>(odd + 1) { Pair(-1, -1) }\r\n        dp[0] = true\r\n        for (to in a) {\r\n            var was = odd - to.first\r\n            while (was >= 0) {\r\n                if (dp[was] && !dp[was + to.first]) {\r\n                    dp[was + to.first] = true\r\n                    par[was + to.first] = Pair(was, to.second)\r\n                }\r\n                was--\r\n            }\r\n        }\r\n        var ok = 0\r\n        for (got in 0 until odd + 1) {\r\n            var not_got = total - got\r\n            if (not_got > even || !dp[got]) {\r\n                continue\r\n            }\r\n            var now = got\r\n            var now_pos = 1\r\n            while (now > 0) {\r\n                ans[par[now].second] = now_pos\r\n                now_pos += b[par[now].second] * 2\r\n                now = par[now].first\r\n            }\r\n            now_pos = 2\r\n            for (j in 0 until m) {\r\n                if (ans[j] == -1) {\r\n                    ans[j] = now_pos\r\n                    now_pos += b[j] * 2\r\n                }\r\n            }\r\n            ok = 1\r\n            break\r\n        }\r\n        if (ok == 0)\r\n            println(-1)\r\n        else {\r\n            for (j in 0 until m) {\r\n                print(\"${ans[j]} \")\r\n            }\r\n            println()\r\n        }\r\n    }\r\n}\r\n\r\nfun main(args: Array<String>) {\r\n    var t = 1\r\n//    t = readInt()\r\n    while (t-- > 0)\r\n        solve()\r\n}"
}