{
    "id": 211589593,
    "contestId": 1571,
    "creationTimeSeconds": 1688114432,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "Lin_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.6",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 88,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 1638400,
    "source": "import java.util.*\r\nimport kotlin.math.*\r\n\r\nfun readint()=readLine()!!.toInt()\r\nfun readll()=readLine()!!.toLong()\r\nfun readdb()=readLine()!!.toDouble()\r\nfun readstring()=readLine()!!\r\nfun readline_int()=(readLine()!!.split(\" \").map{it.toInt()}).toIntArray()\r\nfun readline_ll()=(readLine()!!.split(\" \").map{it.toLong()}).toLongArray()\r\nfun readline_db()=(readLine()!!.split(\" \").map{it.toDouble()}).toDoubleArray()\r\nfun main(args: Array<String>){go()}\r\n/*\r\n---------------c++->kotlin-------------------\r\nswap(a,b)                    a=b.also{b=a}\r\nfor(i=0;i<n;i++)             for(i in 0 until n) / for(i in 0..n-1)\r\nfor(i=n-1;i>=0;i--)          for(i in n-1 downTo 0)\r\nfor(auto it:s)               for(it in s)\r\nprintf                       println(\"${ans}\")\r\nprintln(res)                 println(res.joinToString(\" \"))\r\nll a[n]                      var a=Array<Long>(n){}\r\nint a[n+2][m+2]              var a=Array(n+2){Array<Int>(m+2){0}}\r\na&b                          a and b\r\na|b                          a or b\r\na^b                          a xor b\r\nint gao(int a,int b)         fun gao(a:Int,b:Int):Int\r\n---------sort---------\r\nres.sortBy({it.fi})\r\nres.sortWith({it.fi},{it.se})\r\n--------vector--------\r\nvector<int> res;             var res=mutableListOf<Int>()\r\nres.push_back                res.add\r\nvector<int> mp[n];           var mp=Array(n){mutableListOf<Int>()}\r\n---------set----------\r\nset<int> s;                  var s=TreeSet<Int>()\r\ns.insert                     s.add\r\ns.erase                      s.remove\r\ns.count                      s.contains\r\ns.begin                      s.first\r\ns.rbegin                     s.last\r\nset<pair<int,int>> s;        var s=TreeSet<Pair<Int,Int>>(compareBy({it.first},{it.second}))\r\n-----unordered_map-----\r\nunordered_map<int,int>       var mp:MutableMap<Int,Int> = mutableMapOf()\r\nmp[x]++                      mp[x]=(mp[x]?:0)+1\r\nsum+=mp[x]                   sum+=mp[x]?:0\r\n-----priority_queue-----\r\nstruct node{int a;}          data class node(var a:Int)\r\npriority_queue<node> q;      var q=PriorityQueue<node>(compareBy({it.a}))\r\nq.top                        q.peek\r\nq.pop                        q.poll\r\nq.push                       q.add\r\n---------deque----------\r\ndeque<int> dq;               var dq=ArrayDeque<Int>()\r\ndq.push_front()              dq.offerFirst()\r\ndq.front()                   dq.peekFirst()\r\ndq.pop_front()               dq.pollFirst()\r\n{dq.front(),dq.pop_front()}  dq.pollFirst()\r\n\r\ndq.push_back()               dq.offerLast()\r\ndq.back()                    dq.peekLast()\r\ndq.pop_back()                dq.pollLast()\r\n{dq.back(),dq.pop_back()}    dq.pollLast()\r\n---------------------------------------------\r\n */\r\ndata class pair(var fi:Int,var se:Int,var id:Int)\r\n/*using: xxx.sortWith(cmp)*/\r\nval cmp: Comparator<pair> = Comparator{ a,b->\r\n    if (a.fi==b.fi) a.se.compareTo(b.se)\r\n    else a.fi.compareTo(b.fi)\r\n}\r\nval INF=0x3f3f3f3f\r\nval LLINF=0x3f3f3f3f3f3f3f3fL\r\n/*------------------------------------------------------------*/\r\n\r\nfun go()\r\n{\r\n    var tmp_line=readline_int()\r\n    var n=tmp_line[0]\r\n    var m=tmp_line[1]\r\n    var res=mutableListOf<pair>()\r\n    for(i in 0..n-1)\r\n    {\r\n        tmp_line=readline_int()\r\n        var a=tmp_line[0]\r\n        var b=tmp_line[1]\r\n        res.add(pair(-a,b,i))\r\n    }\r\n    res.sortWith(cmp)\r\n    var ans = Array<Int>(n) {0}\r\n    fun gao(p:Int):Int {\r\n        var flag=Array<Int>(m+1){0}\r\n        var two=0\r\n        for (i in 0..res.size - 1) {\r\n            var a = -res[i].fi\r\n            if (res[i].se == 1) continue\r\n            var pos = -1\r\n            for (j in 1..m) {\r\n                if (flag[j] == 0) {\r\n                    pos = j\r\n                    break\r\n                }\r\n            }\r\n            if (pos == -1) return 0\r\n            if(two==0) pos=p\r\n            two=1\r\n            ans[res[i].id] = pos\r\n            while (pos <= m && a > 0) {\r\n                assert(flag[pos] == 0)\r\n                flag[pos] = 1\r\n                pos += 2\r\n                a--\r\n            }\r\n            if (a > 0) return 0\r\n        }\r\n\r\n        for (i in 0..res.size - 1) {\r\n            var a = -res[i].fi\r\n            if (res[i].se == 2) continue\r\n            var pos = -1\r\n            for (j in 1..m) {\r\n                if (flag[j] == 0) {\r\n                    if(a==1 || (j+1<=m&&flag[j+1]==0)) {\r\n                        pos = j\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n            if (pos == -1) return 0\r\n            ans[res[i].id] = pos\r\n            while (pos <= m && a > 0) {\r\n                assert(flag[pos] == 0)\r\n                flag[pos] = 1\r\n                pos += 1\r\n                a--\r\n            }\r\n            if (a > 0) return 0\r\n        }\r\n        return 1\r\n    }\r\n    if(gao(1)==1) println(ans.joinToString(\" \"))\r\n    else if(gao(2)==1) println(ans.joinToString(\" \"))\r\n    else println(\"-1\")\r\n\r\n}\r\n"
}