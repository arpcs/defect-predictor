{
    "id": 131086258,
    "contestId": 1571,
    "creationTimeSeconds": 1633622083,
    "relativeTimeSeconds": 4783,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "AliceG"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 88,
    "timeConsumedMillis": 561,
    "memoryConsumedBytes": 102400000,
    "source": "import kotlin.math.*\r\n\r\nprivate fun readLn() = readLine()!!\r\nprivate fun readInt() = readLn().toInt()\r\nprivate fun readStrings() = readLn().split(\" \")\r\nprivate fun readInts() = readStrings().map { it.toInt() }\r\n\r\nfun solve(a : MutableList<Pair<Int, Int>>, sum : Int) : Triple<Int, List<Int>, List<Int>> {\r\n    val n = a.size\r\n    val dp = List(n + 1) {MutableList(sum / 2 + 1) {0} }\r\n    val p = List(n + 1) {MutableList(sum / 2 + 1) {-1} }\r\n    dp[0][0] = 1\r\n    for (i in 0 until n) {\r\n        for (j in 0..sum / 2) {\r\n            if (dp[i][j] == 1) {\r\n                dp[i + 1][j] = 1\r\n                p[i + 1][j] = 0\r\n                if (j + a[i].first <= sum / 2) {\r\n                    dp[i + 1][j + a[i].first] = 1\r\n                    p[i + 1][j + a[i].first] = 1\r\n                }\r\n            }\r\n        }\r\n    }\r\n    var mn = 2 * sum + 1\r\n    var s = 0\r\n    for (i in 0..sum / 2) {\r\n        if (dp[n][i] == 0)\r\n            continue\r\n        var x = max(i, sum - i) * 2 - 1\r\n        if (i == sum - i)\r\n            ++x\r\n        if (x < mn) {\r\n            mn = x\r\n            s = i\r\n        }\r\n    }\r\n    val ch = MutableList(n) {0}\r\n    var i = n\r\n    var j = s\r\n    while (i != 0) {\r\n        if (p[i][j] == 1) {\r\n            ch[i - 1] = 1\r\n            j -= a[i - 1].first\r\n        }\r\n        --i\r\n    }\r\n    val lst1 : MutableList<Int> = mutableListOf()\r\n    val lst2 : MutableList<Int> = mutableListOf()\r\n    for (i in 0 until n) {\r\n        if (ch[i] == 1)\r\n            lst1.add(i)\r\n        else\r\n            lst2.add(i)\r\n    }\r\n    return Triple(mn, lst1, lst2)\r\n}\r\n\r\nfun main() {\r\n    val (n, m) = readInts()\r\n    val a1 : MutableList<Pair<Int, Int>> = mutableListOf()\r\n    val a2 : MutableList<Pair<Int, Int>> = mutableListOf()\r\n    for (i in 0 until n) {\r\n        val (k, t) = readInts()\r\n        if (t == 1)\r\n            a1.add(k to i)\r\n        else\r\n            a2.add(k to i)\r\n    }\r\n    val sum1 = a1.sumOf { it.first }\r\n    val sum2 = a2.sumOf { it.first }\r\n    if (sum1 + sum2 > m) {\r\n        println(-1)\r\n        return\r\n    }\r\n    val (mn, lst1, lst2) = solve(a2, sum2)\r\n    if (sum1 + mn > m) {\r\n        println(-1)\r\n        return\r\n    }\r\n    val ans = MutableList(n) {0}\r\n    var cur = 1\r\n    a1.forEach {\r\n        ans[it.second] = cur\r\n        cur += it.first\r\n    }\r\n    var st = cur\r\n    var s = 0\r\n    for (i in lst1)\r\n        s += a2[i].first\r\n    if (s < sum2 - s)\r\n        st += 1\r\n    var cur1 = st\r\n    for (i in lst1) {\r\n        ans[a2[i].second] = cur1\r\n        cur1 += a2[i].first * 2\r\n    }\r\n    cur1 = cur * 2 + 1 - st\r\n    for (i in lst2) {\r\n        ans[a2[i].second] = cur1\r\n        cur1 += a2[i].first * 2\r\n    }\r\n    println(ans.joinToString(\" \"))\r\n}"
}