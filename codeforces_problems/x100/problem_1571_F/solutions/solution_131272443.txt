{
    "id": 131272443,
    "contestId": 1571,
    "creationTimeSeconds": 1633757111,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "zhanghengrui"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.5",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 88,
    "timeConsumedMillis": 295,
    "memoryConsumedBytes": 28467200,
    "source": "import kotlin.math.abs\r\n\r\nfun main() {\r\n    val (n, m) = readLine()!!.split(' ').map(String::toInt)\r\n    val v1: ArrayList<Int> = ArrayList()\r\n    val v2: ArrayList<Int> = ArrayList()\r\n    val p1: ArrayList<Int> = ArrayList()\r\n    val p2: ArrayList<Int> = ArrayList()\r\n    var s = 0\r\n    var s0 = 0\r\n    for (i in 0 until n) {\r\n        val (k, t) = readLine()!!.split(' ').map(String::toInt)\r\n        s += k\r\n        assert(t == 1 || t == 2)\r\n        when (t) {\r\n            1 -> {\r\n                v1.add(k)\r\n                p1.add(i)\r\n            }\r\n            2 -> {\r\n                v2.add(k)\r\n                p2.add(i)\r\n                s0 += k\r\n            }\r\n        }\r\n    }\r\n    if (s > m)\r\n        println(-1)\r\n    else {\r\n        val f: Array<Boolean> = Array(s0 + 1) { it == 0 }\r\n        val last: Array<Int> = Array(s0 + 1) { 0 }\r\n        for (i in 0 until v2.size) {\r\n            for (j in s0.downTo(v2[i])) {\r\n                if (f[j])\r\n                    continue\r\n                if (f[j - v2[i]]) {\r\n                    f[j] = true\r\n                    last[j] = i\r\n                }\r\n            }\r\n        }\r\n        var s1 = 0\r\n        var s2 = s0\r\n        for (i in 0..s0) {\r\n            if (!f[i])\r\n                continue\r\n            if (abs(i * 2 - s0) < abs(s1 - s2)) {\r\n                s1 = i\r\n                s2 = s0 - i\r\n            }\r\n        }\r\n        if (s2 * 2 - 1 + s - s0 <= m) {\r\n            var s3 = m + 1\r\n            val answer: Array<Int> = Array(n) { 0 }\r\n            for (i in 0 until v1.size) {\r\n                s3 -= v1[i]\r\n                answer[p1[i]] = s3\r\n            }\r\n            s3 = 1\r\n            var p = s2\r\n            while (p != 0) {\r\n                answer[p2[last[p]]] = s3\r\n                s3 += v2[last[p]] * 2\r\n                p -= v2[last[p]]\r\n            }\r\n            s3 = 2\r\n            for (i in 0 until v2.size) {\r\n                if (answer[p2[i]] == 0) {\r\n                    answer[p2[i]] = s3\r\n                    s3 += v2[i] * 2\r\n                }\r\n            }\r\n            println(answer.joinToString(\" \"))\r\n        } else\r\n            println(\"-1\")\r\n    }\r\n}"
}