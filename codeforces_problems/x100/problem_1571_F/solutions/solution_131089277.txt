{
    "id": 131089277,
    "contestId": 1571,
    "creationTimeSeconds": 1633624877,
    "relativeTimeSeconds": 7577,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "Heart_Blue"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 14,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 24064000,
    "source": "private fun readLn() = readLine()!! // string line\r\nprivate fun readInt() = readLn().toInt() // single int\r\nprivate fun readLong() = readLn().toLong() // single long\r\nprivate fun readDouble() = readLn().toDouble() // single double\r\nprivate fun readStrings() = readLn().split(\" \") // list of strings\r\nprivate fun readInts() = readStrings().map { it.toInt() } // list of ints\r\nprivate fun readLongs() = readStrings().map { it.toLong() } // list of longs\r\nprivate fun readDoubles() = readStrings().map { it.toDouble() } // list of doubles\r\nvar pre = Array(5010, {-1})\r\nvar flag = Array(5010,{0})\r\nfun main() {\r\n    var (n,m) = readInts()\r\n    var a = IntArray(5010)\r\n    var ans = IntArray(n)\r\n    var last = 0\r\n    pre[0] = 0\r\n    var tot = 0\r\n    for(i in 1..n)\r\n    {\r\n        var (k,t) = readInts()\r\n        if(t == 1)\r\n        {\r\n            flag[i-1] =1\r\n            ans[i-1] = last+1\r\n            last += k\r\n        }\r\n        else\r\n        {\r\n            tot += k\r\n            a[i-1] = k\r\n            for(j in m downTo k)\r\n            {\r\n                if(pre[j] == -1 && pre[j-k] >= 0)\r\n                {\r\n                    pre[j] = i-1\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if(last > m)\r\n    {\r\n        println(-1)\r\n        return\r\n    }\r\n    last = last+1\r\n    var rest1 = 0\r\n    var rest2 = 0\r\n    for(i in last..m)\r\n    {\r\n        if((i-last) % 2 == 0) rest1++\r\n        else rest2++\r\n    }\r\n    var last1 = last\r\n    var last2 = last+1\r\n    var ok = 0\r\n    for(i in rest1 downTo 1)\r\n    {\r\n        if(pre[i] != -1)\r\n        {\r\n            if(i + rest2 < tot)\r\n                continue\r\n\r\n            ok = 1\r\n            var o = i\r\n            while(o > 0)\r\n            {\r\n                var x = pre[o]\r\n                ans[x] = last1\r\n                last1 += a[x]*2\r\n                flag[x] = 1\r\n                o = o - a[x]\r\n            }\r\n            break\r\n        }\r\n    }\r\n    if(ok == 0)\r\n    {\r\n        println(-1)\r\n        return\r\n    }\r\n    for(i in 0 until n)\r\n    {\r\n        if(flag[i] == 1)\r\n            continue\r\n        ans[i] = last2\r\n        last2 += a[i]*2\r\n    }\r\n    println(ans.joinToString(\" \"))\r\n}\r\n\r\n"
}