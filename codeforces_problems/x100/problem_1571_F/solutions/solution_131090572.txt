{
    "id": 131090572,
    "contestId": 1571,
    "creationTimeSeconds": 1633626433,
    "relativeTimeSeconds": 9133,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "YouStill_DontKnowMeYet"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 88,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 42496000,
    "source": "var Memo  = Array (200100) { IntArray (17) {0} }\r\nvar s = CharArray (200100 , {'0'})\r\nvar a=  CharArray (200100 , {'0'})\r\nfun main(args: Array<String>) {\r\n    var (n , m) = ArR ()\r\n    var Days = Array (m + 1) { -1 }\r\n    var One = Array (n) {Pair(0,0)}\r\n    var Two = Array (n) {Pair(0,0)}\r\n    var n1 =0\r\n    var n2 =0\r\n    for (i in 0..n-1) {\r\n        var (k , t) = ArR ()\r\n        if (t == 2)\r\n            Two [n2 ++] = Pair (k , i + 1) ;\r\n        else\r\n            One [n1 ++] = Pair (k , i + 1) ;\r\n    }\r\n    var Ans = Array (n + 1) { -1 }\r\n    //One.sort (0,n1)\r\n    //Two.sort (0,n2)\r\n    for (i in 0..n1-1) {\r\n        for (j in i..n1-1) {\r\n            if (One [j].first < One [i].first) {\r\n                var p = One [j]\r\n                One [j] = One [i]\r\n                One [i] = p\r\n            }\r\n        }\r\n    }\r\n    for (i in 0..n2-1) {\r\n        for (j in i..n2-1) {\r\n            if (Two [j].first < Two [i].first) {\r\n                var p = Two [j]\r\n                Two [j] = Two [i]\r\n                Two [i] = p\r\n            }\r\n        }\r\n    }\r\n    var Ok = true\r\n    var k2 = n2\r\n    while (k2 --> 0) {\r\n        var k = Two [k2].first\r\n        var t = 1 \r\n        while (t <= m && Days [t] != -1)\r\n            ++ t\r\n\r\n        Ans [Two [k2].second] = t\r\n        while (k -- >0) {\r\n            if (t > m) {\r\n                Ok = false\r\n                break\r\n            }\r\n            Days [t] = 1\r\n            t += 2\r\n        }\r\n        if (Ok == false)\r\n            break\r\n    }\r\n    var k1 = n1 \r\n    while (k1 -- > 0) {\r\n        var k = One [k1].first\r\n        var t = 1\r\n        while (t <= m && Days [t] != -1) {\r\n            ++ t\r\n        }\r\n        if (t > m) {\r\n            Ok = false\r\n            break\r\n        }\r\n        if (k == 1) {\r\n            Ans [One [k1].second] = t \r\n            Days [t] = 1\r\n            continue\r\n        }\r\n        if (t + 1 > m) {\r\n            Ok = false\r\n            break\r\n        }\r\n        while (t + 1 <= m && (Days [t] != -1 || Days [t + 1] != -1) ) {\r\n            ++ t\r\n        }\r\n        Ans[ One [k1].second] = t \r\n        while (k -- >0) {\r\n            if (t > m) {\r\n                Ok = false\r\n                break\r\n            }\r\n            Days [t] = 1\r\n            t ++\r\n        }\r\n    }\r\n    if (Ok == true) {\r\n        for (i in 1..n)\r\n            print (\"${Ans [i]} \")\r\n    } else {\r\n        Ok = true\r\n        for (i in 1..n)\r\n            Ans [i] = -1 \r\n        for (i in 1..m)\r\n            Days [i] = -1\r\n        k2 = n2\r\n     while (k2 --> 0) {\r\n        var k = Two [k2].first\r\n        var t = 1 \r\n        if (k2 == n2 - 1)\r\n            t = 2\r\n        while (t <= m && Days [t] != -1)\r\n            ++ t\r\n\r\n        Ans [Two [k2].second] = t\r\n        while (k -- >0) {\r\n            if (t > m) {\r\n                Ok = false\r\n                break\r\n            }\r\n            Days [t] = 1\r\n            t += 2\r\n        }\r\n        if (Ok == false)\r\n            break\r\n    }\r\n    k1 = n1 \r\n    while (k1 -- > 0) {\r\n        var k = One [k1].first\r\n        var t = 1\r\n        while (t <= m && Days [t] != -1) {\r\n            ++ t\r\n        }\r\n        if (t > m) {\r\n            Ok = false\r\n            break\r\n        }\r\n        if (k == 1) {\r\n            Ans [One [k1].second] = t \r\n            Days [t] = 1\r\n            continue\r\n        }\r\n        if (t + 1 > m) {\r\n            Ok = false\r\n            break\r\n        }\r\n        while (t + 1 <= m && (Days [t] != -1 || Days [t + 1] != -1) ) {\r\n            ++ t\r\n        }\r\n        Ans[ One [k1].second] = t \r\n        while (k -- >0) {\r\n            if (t > m) {\r\n                Ok = false\r\n                break\r\n            }\r\n            Days [t] = 1\r\n            t ++\r\n        }\r\n    }\r\n    if (Ok == true) {\r\n        for (i in 1..n)\r\n            print (\"${Ans [i]} \")\r\n    } else \r\n        print (-1)\r\n    }\r\n    \r\n}\r\n\r\nfun Read() = readLine()!!.toInt()\r\nfun ArR () = readLine()!!.split(\" \").map {it.toInt()}"
}