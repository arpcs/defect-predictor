{
    "id": 231066051,
    "contestId": 1571,
    "creationTimeSeconds": 1698988535,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "XiangZhiTing"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.6",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 88,
    "timeConsumedMillis": 296,
    "memoryConsumedBytes": 7270400,
    "source": "import kotlin.math.max\r\n\r\nfun main() {\r\n    fun readInt() = readLine()!!.toInt()\r\n    fun readInts() = readLine()!!.split(' ').map { it.toInt() }.toIntArray()\r\n    val (n, m) = readInts()\r\n    val kt = Array(n){readInts()}\r\n    val dp = Array(n + 1){BooleanArray(m / 2 + 2)}\r\n    dp[0][0] = true\r\n    var one = 0\r\n    var two = 0\r\n    for (i in 0 until n) {\r\n        val (k, t) = kt[i]\r\n        for (j in 0 .. m / 2 + 1) dp[i + 1][j] = dp[i][j]\r\n        if (t == 1) one += k\r\n        else {\r\n            two += k\r\n            if (k <= m / 2 + 1) for (j in k .. m / 2 + 1) if (dp[i][j - k]) dp[i + 1][j] = true\r\n        }\r\n    }\r\n    var p = -1\r\n    for (i in 0 .. m / 2 + 1) if (dp[n][i]) {\r\n        val j = two - i\r\n        if (i >= j && i * 2 - (if (i > j) 1 else 0) + one <= m)\r\n            p = i\r\n    }\r\n    if (p == -1) println(p)\r\n    else {\r\n        val first = BooleanArray(n)\r\n        for (i in n - 1 downTo 0) {\r\n            val (k, t) = kt[i]\r\n            if (t == 2 && p >= k && dp[i][p - k]) {\r\n                p -= k\r\n                first[i] = true\r\n            }\r\n        }\r\n        var oneDay = 1\r\n        var firstDay = one + 1\r\n        var secondDay = one + 2\r\n        for (i in 0 until n) {\r\n            val (k, t) = kt[i]\r\n            if (t == 1) {\r\n                print(\"$oneDay \")\r\n                oneDay += k\r\n            }\r\n            else if (first[i]) {\r\n                print(\"$firstDay \")\r\n                firstDay += k * 2\r\n            }\r\n            else {\r\n                print(\"$secondDay \")\r\n                secondDay += k * 2\r\n            }\r\n        }\r\n    }\r\n}"
}