{
    "id": 131092625,
    "contestId": 1571,
    "creationTimeSeconds": 1633628116,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "IMAN_GH"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 88,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 22016000,
    "source": "import java.lang.Integer.min\nimport java.lang.Math.max\nimport java.util.Scanner\n\nval input = Scanner(System.`in`)\n\nfun solve() {\n    val n = input.nextInt()\n    var m = input.nextInt()\n    var all = mutableListOf<Int>()\n    var allInd = mutableListOf<Int>()\n    var mark = mutableListOf<Int>()\n    val ans = MutableList(n) { i -> 0 }\n    var tot = 0\n    for (i in 0..n - 1) {\n        val x = input.nextInt()\n        val t = input.nextInt()\n        if (t == 1) {\n            ans[i] = m - x + 1\n            m -= x\n        } else {\n            all.add(x)\n            allInd.add(i)\n            mark.add(0)\n            tot += x\n        }\n    }\n    if (m < 0) {\n        println(-1)\n        return\n    }\n    var dp = MutableList(m + 1) { i -> -1 }\n    dp[0] = 0\n    for (i in 0..all.size - 1) {\n        val x = all[i]\n        for (i in m - x downTo 0) {\n            if (dp[i] != -1)\n                dp[i + x] = i + 1\n        }\n    }\n    var a = 2\n    var b = 1\n    for (i in 0..m)\n        if (dp[i] != -1 && i <= m / 2 && tot - i <= (m + 1) / 2) {\n            var tmp = i\n            while (dp[tmp] != 0) {\n                val x = all[dp[tmp] - 1]\n                val ind = allInd[dp[tmp] - 1]\n                mark[dp[tmp] - 1] = 1\n                ans[ind] = a\n                a += 2 * x\n                tmp -= x\n            }\n            for (j in 0..all.size - 1) {\n                if (mark[j] == 0) {\n                    val x = all[j]\n                    val ind = allInd[j]\n                    ans[ind] = b\n                    b += 2 * x\n                }\n            }\n            for (x in ans)\n                println(x)\n            return\n        }\n    println(-1)\n}\n\nfun main() {\n    val n = 1\n    for (i in 1..n) {\n        solve()\n    }\n}"
}