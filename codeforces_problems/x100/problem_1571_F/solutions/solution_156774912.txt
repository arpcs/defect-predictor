{
    "id": 156774912,
    "contestId": 1571,
    "creationTimeSeconds": 1652237713,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1571,
        "index": "F",
        "name": "Kotlinforces",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "*special",
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 1571,
        "members": [
            {
                "handle": "jack-hui6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1633617300
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 5005;\r\nint dp[N][N],pos[N][N],ans[N],pre[N][N];\r\nint k[N],t[N],sm[N],n,m;\r\nvoid solve(){\r\n    cin>>n>>m;\r\n    int l = 0;\r\n    for(int i = 1;i<=n;i++){\r\n         cin>>k[i]>>t[i];\r\n        sm[i] = sm[i-1]+k[i];\r\n        if(t[i] == 1) ans[i] = l,l+=k[i],sm[i]-=k[i];\r\n    }\r\n    dp[0][0] = 1;//\u7b2c\u4e8c\u7ef4\u7a7a\u683c\u4e2a\u6570\r\n    for(int i = 1;i<=n;i++){\r\n        for(int j = 0;j<=m;j++){\r\n            if(dp[i-1][j]){\r\n                if(t[i] == 1){\r\n                    if(j+sm[i]+l<=m)\r\n                        dp[i][j] = 1;\r\n                }else{\r\n                    //\u653e\u5165\r\n                    if(k[i] <= j){\r\n                        if(l+j-k[i]+sm[i]<=m)\r\n                            dp[i][j-k[i]] = 1,pos[i][j-k[i]] = sm[i-1]+l-j+1,pre[i][j-k[i]] = j;\r\n                    }else{\r\n                        if(l+k[i]-j-1+sm[i]<=m)\r\n                            dp[i][k[i]-j-1] = 1,pos[i][k[i]-j-1] = sm[i-1]+l-j+1,pre[i][k[i]-j-1] = j;\r\n                    }\r\n\r\n                    //\u672b\u5c3e\r\n                    if(l+k[i]+j<=m && l+k[i]+j+sm[i]<=m)\r\n                         dp[i][k[i]+j] = 1,pos[i][k[i]+j] = sm[i-1]+l+j+2,pre[i][k[i]+j] = j;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    bool fg = false;\r\n    int lft = m-sm[n];\r\n    for(int j = 0;j<=lft;j++){\r\n        if(dp[n][j]){\r\n            fg = true;\r\n            for(int i = n;i;i--){\r\n                if(t[i] == 2){\r\n                    ans[i] = pos[i][j];\r\n                    j = pre[i][j];\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    if(fg){\r\n        for(int i = 1;i<=n;i++){\r\n            cout<<ans[i]<<\" \";\r\n        }\r\n    }else{\r\n        cout<<-1<<\"\\n\";\r\n    }\r\n}\r\nsigned main(){\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    solve();\r\n    return 0;\r\n}"
}