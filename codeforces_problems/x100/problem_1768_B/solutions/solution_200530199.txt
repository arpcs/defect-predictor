{
    "id": 200530199,
    "contestId": 1768,
    "creationTimeSeconds": 1680504707,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1768,
        "index": "B",
        "name": "Quick Sort",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 900,
        "tags": [
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1768,
        "members": [
            {
                "handle": "AFSCODE"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1672929300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 14,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 819200,
    "source": "/*AJAY_SABAL*/\r\n#include <bits/stdc++.h>\r\n// Program showing a policy-based data structure.\r\n#include <ext/pb_ds/assoc_container.hpp> \r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <functional> \r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag,tree_order_statistics_node_update>ordered_set;\r\n//find by order// order of key\r\n#define int long long\r\n#define mod 1000000007\r\n#define pb push_back\r\n#define ff first\r\n#define ss second\r\n#define PI 3.141592653589793238462\r\n#define set_bits(x) __builtin_popcountll(x)\r\n#define sz(x) ((int)(x).size())\r\n#define all(x) (x).begin(), (x).end()\r\nint binpow(int a, int b, int m)\r\n{\r\na %= m;\r\nint res = 1;\r\nwhile (b > 0)\r\n{\r\nif (b & 1)\r\nres = res * a % m;\r\na = a * a % m;\r\nb >>= 1;\r\n}\r\nreturn res;\r\n}\r\nvoid SieveOfEratosthenes(int n,vector<int>&pm)\r\n{\r\nbool prime[n + 1];\r\nmemset(prime, true, sizeof(prime));\r\n\r\nfor (int p = 2; p * p <= n; p++)\r\n{\r\nif (prime[p] == true)\r\n{\r\n\r\nfor (int i = p * p; i <= n; i += p)\r\nprime[i] = false;\r\n}\r\n}\r\nfor(int i=2;i<=n;i++){\r\nif(prime[i]){\r\npm.pb(i);\r\n}\r\n}\r\n}\r\nbool cmp(pair<int, int> &a, pair<int, int> &b)\r\n{\r\nreturn a.second > b.second;\r\n}\r\n\r\nvoid map_sort(map<int, int> &mp, vector<int> &ans)\r\n{\r\nvector<int> a;\r\nvector<pair<int, int>> b;\r\nfor (auto &it : mp)\r\n{\r\nb.push_back(it);\r\n}\r\nsort(b.begin(), b.end(), cmp);\r\nfor (auto &it : b)\r\n{\r\n\r\na.push_back(it.first);\r\n}\r\nans = a;\r\n}\r\n//***************************************Solution*********************************************\r\nvoid solve(){\r\n        int n,k;\r\n        cin>>n>>k;\r\n        int arr[n];\r\n        for(int i=0;i<n;i++){\r\n            cin>>arr[i];\r\n        }\r\n        int cnt=0;\r\n        int c=1;\r\n        for(int i=0;i<n;i++){\r\n            if(arr[i]==c){\r\n                cnt++;\r\n                c++;\r\n            }\r\n        }\r\n        int ans=((n-cnt)%k)?1+(n-cnt)/k:(n-cnt)/k;\r\n        cout<<ans<<\"\\n\";\r\n    \r\n}\r\n\r\nsigned main(){\r\n    fastio();\r\n    \r\n    int t;cin>>t;\r\n    \r\n    while(t--){\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}