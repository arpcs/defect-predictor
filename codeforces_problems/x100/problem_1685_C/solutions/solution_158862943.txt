{
    "id": 158862943,
    "contestId": 1685,
    "creationTimeSeconds": 1653905977,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1685,
        "index": "C",
        "name": "Bring Balance",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1685,
        "members": [
            {
                "handle": "yzc2005"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1653500100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 1024000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 2e5 + 5;\r\nint n, sum[N];\r\nchar s[N];\r\nvoid solve() {\r\n    cin >> n >> (s + 1);\r\n    for (int i = 1; i <= 2 * n; ++i) {\r\n        sum[i] = sum[i - 1] + (s[i] == '(' ? 1 : -1);\r\n    }\r\n    if (*min_element(sum, sum + 2 * n + 1) >= 0) {\r\n        cout << \"0\\n\";\r\n        return;\r\n    }\r\n    int pos = max_element(sum, sum + 2 * n + 1) - sum;\r\n    int pos1 = 0, pos2 = 2 * n;\r\n    while (sum[pos1 + 1] >= 0) {\r\n        ++pos1;\r\n    }\r\n    while (sum[pos2 - 1] >= 0) {\r\n        --pos2;\r\n    }\r\n    pos1 = max_element(sum, sum + pos1 + 1) - sum;\r\n    pos2 = max_element(sum + pos2, sum + 2 * n + 1) - sum;\r\n    if (sum[pos1] + sum[pos2] >= sum[pos]) {\r\n        cout << \"1\\n\";\r\n        cout << pos1 + 1 << \" \" << pos2 << \"\\n\";\r\n    } else {\r\n        cout << \"2\\n\";\r\n        cout << pos1 + 1 << \" \" << pos << \"\\n\";\r\n        cout << pos + 1 << \" \" << pos2 << \"\\n\";\r\n    }\r\n}\r\nint main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    int t;\r\n    cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}