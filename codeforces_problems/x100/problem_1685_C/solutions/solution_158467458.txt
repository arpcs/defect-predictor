{
    "id": 158467458,
    "contestId": 1685,
    "creationTimeSeconds": 1653508135,
    "relativeTimeSeconds": 8035,
    "problem": {
        "contestId": 1685,
        "index": "C",
        "name": "Bring Balance",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1685,
        "members": [
            {
                "handle": "David-M"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 13,
        "startTimeSeconds": 1653500100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 32358400,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\n#define F first\r\n#define S second\r\n#define all(x) (x).begin(), (x).end()\r\n#define pii pair<int, int>\r\n#define FF first.first\r\n#define FS first.second\r\n#define pb push_back\r\nusing namespace std;\r\nconst ll N=1000006, INF=1e18, P=998244353;\r\n\r\nll q=1, n, m, x, y, z, l, r, k, a[N], b[N], f[N], o, u, Ans[N];\r\nvector <array<int, 2>> ans;\r\nstring s,t;\r\n\r\nvoid solve(int h, int l){\r\n\r\n    int L=l, H=h, mx=h, idl=l;\r\n    while(L<n && H>=0){\r\n        H+=a[L];\r\n        L++;\r\n        if(H>mx){\r\n            mx=H;\r\n            idl=L;\r\n        }\r\n    }\r\n//    cout<<\"[idl, L, mx, H]: \"<<idl<<\" \"<<L<<\" \"<<mx<<\" \"<<H<<endl;\r\n    if(L>=n)return;\r\n    int mn=H, idr=L-1;\r\n    assert(mn==-1);\r\n    while(L<n && H<=2*mx){\r\n        H+=a[L];\r\n        if(H<mn){\r\n            mn=H;\r\n            idr=L;\r\n        }\r\n        L++;\r\n    }\r\n//    cout<<\"[idr, L, mn, H]: \"<<idr<<\" \"<<L<<\" \"<<mn<<\" \"<<H<<endl;\r\n    if(L>=n){\r\n        idr=n-1;\r\n    }\r\n    ans.pb({idl, idr});\r\n    solve(mx+(mx-mn), idr+1);\r\n\r\n}\r\n\r\n\r\n\r\nmain(){ios_base::sync_with_stdio(false), cin.tie(0);\r\n\r\n\tcin>>q;\r\n\twhile(q--){\r\n\r\n        cin>>n>>s;\r\n        n*=2;\r\n        for (int i=0; i<n; i++){\r\n            a[i]=(s[i]=='(')?1:-1;\r\n        }\r\n        solve(0, 0);\r\n        cout<<ans.size()<<'\\n';\r\n        for (auto [x,y]:ans){\r\n            cout<<x<<\" \"<<y<<'\\n';\r\n        }\r\n        ans.clear();\r\n    }\r\n\r\n\r\n}\r\n"
}