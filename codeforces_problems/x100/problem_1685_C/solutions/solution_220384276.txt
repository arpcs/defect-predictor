{
    "id": 220384276,
    "contestId": 1685,
    "creationTimeSeconds": 1692971341,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1685,
        "index": "C",
        "name": "Bring Balance",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1685,
        "members": [
            {
                "handle": "bkifhr6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1653500100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 1024000,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+5;\nint n;\nint sum[N];\nchar s[N];\nint read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch<'0'||'9'<ch){\n\t\tif(ch=='-') f=-1;\n\t\tch=getchar();\n\t}\n\twhile('0'<=ch&&ch<='9'){\n\t\tx=(x<<1)+(x<<3)+(ch&15);\n\t\tch=getchar();\n\t}\n\treturn x*f;\n}\nbool check(int l,int r){\n\tfor(int i=l; i<=r; i++)\n\t\tif(sum[r]-sum[i]+sum[l-1]<0) return 0;\n\treturn 1;\n}\nvoid doit(){\n\tn=read();\n\tscanf(\"%s\",s+1);\n\tbool f=0;\n\tint ms=0,p;\n\tfor(int i=1; i<=n<<1; i++){\n\t\tif(s[i]=='(')sum[i]=sum[i-1]+1;\n\t\telse sum[i]=sum[i-1]-1;\n\t\tif(sum[i]<0) f=1;\n\t\tif(ms<sum[i]) ms=sum[i],p=i;\n\t}\n\tif(!f){\n\t\tprintf(\"0\\n\");\n\t\treturn ;\n\t}\n\tint L=0,R=0,t1=0,t2=0;\n\tfor(int i=1; i<=n<<1; i++)\n\t\tif(sum[i]>=0){\n\t\t\tif(t1<=sum[i]) L=i+1,t1=sum[i];\n\t\t}else break;\n\tfor(int i=n<<1; i; i--)\n\t\tif(sum[i]>=0){\n\t\t\tif(t2<=sum[i]) R=i,t2=sum[i];\n\t\t}else break;\n\tif(!L) L=1;\n\tif(R>n<<1) R--;\n\tif(check(L,R)) printf(\"1\\n%d %d\\n\",L,R);\n\telse printf(\"2\\n1 %d\\n%d %d\\n\",p,p+1,n<<1);\n}\nsigned main(){\n\tint T=read();\n\twhile(T--) doit();\n}\n\t \t   \t \t    \t\t\t\t\t \t  \t\t\t \t\t\t\t"
}