{
    "id": 159201480,
    "contestId": 1685,
    "creationTimeSeconds": 1654121654,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1685,
        "index": "C",
        "name": "Bring Balance",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1685,
        "members": [
            {
                "handle": "bloodbound"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1653500100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 61,
    "memoryConsumedBytes": 102400,
    "source": "#include <iostream>\r\n#include <stack>\r\n#include <vector>\r\n#include <cassert>\r\nusing namespace std;\r\n \r\nint n;\r\n \r\nvoid solve(string st) {\r\n    int ln = st.size();\r\n    vector <pair<int,int> > ans;\r\n    vector<int> sum;\r\n    int max_ind = 0;\r\n \r\n    int l = -1, rd = -1;\r\n    sum.resize(ln + 1);\r\n    for (int k = 0; k < ln; ++ k) {\r\n        int r = (st[k] == '(') ? 1:-1;\r\n        \r\n        if (k == 0){\r\n            sum[k] = r;\r\n            max_ind = r;\r\n            if (sum[k] < 0) {\r\n                if (l == -1) \r\n                    l = k;\r\n                rd = k;            \r\n            }\r\n\r\n            continue;\r\n        }\r\n        \r\n        sum[k] = sum[k-1] + r; \r\n        \r\n        if (sum[k] > sum[max_ind])   \r\n            max_ind = k;   \r\n        \r\n        if (sum[k] < 0) {\r\n            if (l == -1) \r\n                l = k;\r\n            rd = k;            \r\n        }\r\n         \r\n    }\r\n \r\n    if (l == -1) {\r\n        cout << 0 << endl;\r\n        return;\r\n    }\r\n    \r\n    int x=0, y=ln-1, mx = -1000000;\r\n    for (int k = 0; k < ln; ++k) {\r\n        if (k < l)  {\r\n            if (sum[k] > sum[x]) \r\n                x=k;            \r\n        }      \r\n        \r\n        if (k > rd) {\r\n            if (sum[k] > sum[y]) \r\n                y=k;            \r\n        }\r\n        \r\n        if (k >= l && k <= rd) {\r\n            mx = max(sum[k], mx);\r\n        }\r\n    }\r\n    \r\n    if (l==0) \r\n        x=-1;\r\n \r\n    if (sum[x] + sum[y] >= mx) {\r\n        cout << \"1\" << endl;\r\n        cout << x + 2 << \" \" << y + 1 << endl;\r\n        return;\r\n    }\r\n    \r\n    cout << \"2\" << endl;\r\n    cout << 1 << \" \" << max_ind + 1 << endl;\r\n    cout << max_ind + 2 << \" \" << ln << endl;\r\n}\r\n \r\nint main() {\r\n    \r\n  cin >> n;\r\n  \r\n  for (int k = 0; k < n; ++ k) {\r\n      int cnt;\r\n      string st;\r\n      cin >> cnt;\r\n      cin >> st;\r\n      solve(st);\r\n  }\r\n  \r\n  return 0;\r\n}\r\n"
}