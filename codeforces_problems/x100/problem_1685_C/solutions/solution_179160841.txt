{
    "id": 179160841,
    "contestId": 1685,
    "creationTimeSeconds": 1667551939,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1685,
        "index": "C",
        "name": "Bring Balance",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1685,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1653500100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 1126400,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 2.2e5;\nint T, n, len, a[N];\nchar ch[N];\nvoid work() {\n    cin >> n;\n    len = n << 1;\n    cin >> (ch + 1);\n    for (int i = 1; i <= len; ++i) {\n        a[i] = a[i - 1] + (ch[i] == '(' ? 1 : -1);\n    }\n    int l = len + 1, r = 0, mx = 1;\n    for (int i = 1; i <= len; ++i) if (a[i] < 0) {\n        l = min(l, i);\n        r = max(r, i);\n    }\n    for (int i = 1; i <= len; ++i) if (a[i] > a[mx]) {\n        mx = i;\n    }\n    if (r == 0) {\n        printf(\"%d\\n\", 0);\n        return;\n    }\n    int L = 0, R = len;\n    for (int i = l; i >= 1; --i)\n        if (a[i] > a[L]) {\n            L = i;\n        }\n    for (int i = r; i <= len; ++i)\n        if (a[i] > a[R]) {\n            R = i;\n        }\n    // printf(\"%d %d\\n\", L, R);\n    reverse(ch + L + 1, ch + R + 1);\n    int cnt = 0, flag = 0;\n    for (int i = 1; i <= len; ++i) {\n        cnt += ch[i] == '(' ? +1 : -1;\n        if (cnt < 0) flag = 1;\n    }\n    if (!flag) printf(\"1\\n%d %d\\n\", L + 1, R);\n    else printf(\"2\\n%d %d\\n%d %d\\n\", 1, mx, mx + 1, len);\n}\nsigned main() {\n    ios::sync_with_stdio(0);\n    for (cin >> T; T; T--) {\n        work();\n    }\n    return 0;\n}\n\t\t   \t\t\t \t  \t \t \t\t\t \t \t  \t\t \t\t\t"
}