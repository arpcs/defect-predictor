{
    "id": 181255330,
    "contestId": 1685,
    "creationTimeSeconds": 1668648909,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1685,
        "index": "C",
        "name": "Bring Balance",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1685,
        "members": [
            {
                "handle": "luogu_bot4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1653500100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1843200,
    "source": "// LUOGU_RID: 94308408\n#include<bits/stdc++.h>\r\nusing namespace std;using ll=long long;const int N=2e5+10;\r\nint T,n,top,s[N],nex[N]/*,p[N],stk[N],mx[N],c[N]*/;char a[N];vector<pair<int,int> >ans;\r\n//void add(int x,int y){for(x+=n+1;x<=n*2+1;x+=x&-x)c[x]=max(c[x],y);}\r\n//int get(int x){int y=n*2+1;for(x+=n+1;x;x-=x&-x)y=max(y,c[x]);return y;}\r\nvoid calc(int l,int r){\r\n\tfor(int i=l;i<=r;i++)s[i]=s[i-1]+(a[i]=='('?1:-1);\r\n}\r\nvoid rev(int l,int r){ans.push_back({l,r});for(int i=l,j=r;i<j;i++,j--)swap(a[i],a[j]);calc(l,r);}\r\nvoid get(){\r\n\tscanf(\"%d%s\",&n,a+1);calc(1,n*2);s[n*2+1]=-N;\r\n\tnex[n*2+1]=n*2+1;for(int i=n*2;i>=1;i--)if(s[i]>s[nex[i+1]])nex[i]=i;else nex[i]=nex[i+1];\r\n//\tfill(c,c+n*2+2,n*2+1);\r\n//\tstk[top=0]=n*2+1;for(int i=n*2;i>=1;i--){\r\n//\t\tfor(;top&&s[stk[top]]>s[i];top--);p[i]=stk[top];stk[++top]=i;\r\n//\t}\r\n\tfor(int i=1,j,x=0,y,z;i<=n*2;){\r\n\t\tfor(j=i;j<=n*2&&s[j]>=0;j++);if(j>n*2)break;for(int k=i;k<j;k++)if(s[k]>s[x])x=k;\r\n\t\tfor(int k=z=nex[j];k<=n*2&&s[z]<=s[x]+s[nex[k]];k++)if(s[z]<=s[x]+s[k])y=k;\r\n\t\trev(x+1,y);for(int k=j;k<y;k++)if(s[k]>s[x])x=k;i=y;\r\n\t}\r\n\tcalc(1,n*2);for(int i=1;i<=n*2;i++)assert(s[i]>=0);\r\n\tprintf(\"%d\\n\",ans.size());for(auto [l,r]:ans)printf(\"%d %d\\n\",l,r);\r\n}\r\nint main(){\r\n\tfor(scanf(\"%d\",&T);T--;ans.clear())get();return 0;\r\n}\r\n"
}