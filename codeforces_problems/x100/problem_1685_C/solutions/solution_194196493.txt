{
    "id": 194196493,
    "contestId": 1685,
    "creationTimeSeconds": 1676793006,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1685,
        "index": "C",
        "name": "Bring Balance",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1685,
        "members": [
            {
                "handle": "propane"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1653500100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 3174400,
    "source": "#include<iostream>\r\n#include<cstring>\r\n#include<algorithm>\r\nusing namespace std;\r\nusing LL = long long;\r\nconst int maxn = 4e5 + 5;\r\nint s[maxn], a[maxn];\r\n\r\nint main(){\r\n\r\n#ifdef LOCAL\r\n    freopen(\"data.in\", \"r\", stdin);\r\n    freopen(\"data.out\", \"w\", stdout);\r\n#endif\r\n\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    ios::sync_with_stdio(0);\r\n\r\n    int T;\r\n    cin >> T;\r\n    while(T--){\r\n        int n;\r\n        cin >> n;\r\n        bool success = 1;\r\n        for(int i = 1; i <= 2 * n; i++){\r\n            char c;\r\n            cin >> c;\r\n            a[i] = c == '(' ? 1 : -1;\r\n            s[i] = s[i - 1] + a[i];\r\n            success &= (s[i] >= 0);\r\n        }\r\n        if (success){\r\n            cout << 0 << '\\n';\r\n            continue;\r\n        }\r\n        int L = 1, R = 2 * n;\r\n        while(s[L] >= 0) L++;\r\n        while(s[R] >= 0) R--;\r\n        int pos = max_element(s + 1, s + 2 * n + 1) - s;\r\n        L = max_element(s, s + L) - s;\r\n        R = max_element(s + R, s + 2 * n + 1) - s;\r\n        L++;\r\n        reverse(a + L, a + R + 1);\r\n        success = 1;\r\n        for(int i = 1; i <= 2 * n; i++){\r\n            s[i] = s[i - 1] + a[i];\r\n            success &= (s[i] >= 0);\r\n        }\r\n        if (success){\r\n            cout << 1 << '\\n';\r\n            cout << L << ' ' << R << '\\n';\r\n        }\r\n        else{\r\n            cout << 2 << '\\n';\r\n            cout << 1 << ' ' << pos << '\\n';\r\n            cout << pos + 1 << ' ' << 2 * n << '\\n';\r\n        }\r\n    }\r\n\r\n}"
}