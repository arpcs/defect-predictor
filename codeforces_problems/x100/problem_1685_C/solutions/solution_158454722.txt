{
    "id": 158454722,
    "contestId": 1685,
    "creationTimeSeconds": 1653504911,
    "relativeTimeSeconds": 4811,
    "problem": {
        "contestId": 1685,
        "index": "C",
        "name": "Bring Balance",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1685,
        "members": [
            {
                "handle": "AndreySergunin"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 6,
        "startTimeSeconds": 1653500100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 3788800,
    "source": "#pragma GCC optimize(\"Ofast\", \"unroll-loops\", \"no-stack-protector\")\r\n \r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n \r\n#define all(a) (a).begin(), (a).end()\r\n#define sz(a) (int)(a).size()\r\n \r\nusing ll = long long;\r\nusing ld = long double;\r\nusing pii = pair<int, int>;\r\nusing pll = pair<ll, ll>;\r\nusing uint = unsigned int;\r\nusing ull = unsigned long long;\r\n \r\nmt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());\r\ndefault_random_engine generator;\r\n \r\nvoid solve();\r\n \r\nint task;\r\n \r\nint main() {\r\n#ifdef LOCAL\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    // freopen(\"output.txt\", \"w\", stdout);  \r\n#endif \r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    cout << setprecision(12) << fixed;\r\n    cerr << setprecision(12) << fixed;  \r\n \r\n    int tests = 1;\r\n    cin >> tests;\r\n \r\n    for (int test = 1; test <= tests; ++test) {\r\n        // cout << \"Case #\" << test << \": \";\r\n        solve();\r\n    }\r\n \r\n#ifdef LOCAL\r\n    cerr << \"Time: \" << double(clock()) / CLOCKS_PER_SEC << endl;\r\n#endif\r\n}\r\n \r\n// ----------------------------------------------------------------- \r\n\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n    string s;\r\n    cin >> s;\r\n\r\n    vector<int> b(2 * n + 1);\r\n    for (int i = 0; i < 2 * n; ++i) {\r\n        b[i + 1] = b[i] + (s[i] == '(' ? 1 : -1);\r\n    }\r\n\r\n    int d = b[2 * n] / 2;\r\n    vector<int> pref(2 * n + 1), suff(2 * n + 1);\r\n    pref[0] = true;\r\n    for (int i = 1; i <= 2 * n; ++i) {\r\n        pref[i] = pref[i - 1] & (b[i] >= 0);\r\n    }\r\n    suff[2 * n] = true;\r\n    for (int i = 2 * n - 1; i >= 0; --i) {\r\n        suff[i] = suff[i + 1] & (b[i] >= 0);\r\n    }\r\n\r\n    if (pref[2 * n]) {\r\n        cout << 0 << \"\\n\";\r\n        return;\r\n    }\r\n\r\n    int max_pos = max_element(all(b)) - b.begin();\r\n\r\n    int u = 0, v = 2 * n;\r\n\r\n    for (int i = 0; i <= 2 * n; ++i) {\r\n        if (pref[i]) {\r\n            if (b[u] < b[i]) {\r\n                u = i;\r\n            }\r\n        }\r\n        if (suff[i]) {\r\n            if (b[v] < b[i]) {\r\n                v = i;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (b[u] + b[v] >= b[max_pos]) {\r\n        cout << 1 << \"\\n\";\r\n        cout << u + 1 << \" \" << v << \"\\n\";\r\n        return;\r\n    }\r\n\r\n\r\n    cout << 2 << \"\\n\";\r\n    cout << 1 << \" \" << max_pos << \"\\n\";\r\n    cout << max_pos + 1 << \" \" << 2 * n << \"\\n\";\r\n}\r\n"
}