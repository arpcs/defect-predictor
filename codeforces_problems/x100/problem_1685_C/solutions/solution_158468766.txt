{
    "id": 158468766,
    "contestId": 1685,
    "creationTimeSeconds": 1653509650,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1685,
        "index": "C",
        "name": "Bring Balance",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1685,
        "members": [
            {
                "handle": "0e4ef622"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1653500100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n#define F first\n#define S second\n#define rep(i, a, b) for(int i = (a); i < (b); ++i)\n#define per(i, a, b) for(int i = (b)-1; i >= (a); --i)\n#define bck(i, a, b) if ((i) >= (a) && (i) < (b))\n#define trav(x, a) for (auto &x : (a))\n#define sz(a) (int)(a).size()\n#define all(x) (x).begin(), (x).end()\n#define mp make_pair\n#define pb push_back\n#define eb emplace_back\n#define dbg(X) std::cerr << \"[DBG](\"<<__FUNCTION__<<\":\"<<__LINE__<<\") \" << #X << \": \" << X << std::endl;\nusing namespace std;\ntypedef long long ll;\ntypedef string str;\ntemplate<typename T> using vec = vector<T>;\ntemplate<typename T> using pq = priority_queue<T, vector<T>, std::greater<T>>;\ntemplate<typename T> using mxpq = priority_queue<T>;\ntypedef pair<int,int> pii;\ntypedef vec<int> vi;\ntypedef vec<pii> vii;\ntypedef vec<vi> vvi;\ntypedef pair<ll,ll> pll;\ntypedef vec<ll> vl;\ntypedef vec<pll> vll;\ntypedef vec<vl> vvl;\ntemplate<class T> bool ckmin(T& a, const T& b) { return b < a ? a = b, 1 : 0; }\ntemplate<class T> bool ckmax(T& a, const T& b) { return a < b ? a = b, 1 : 0; }\ntemplate<typename A, typename B>\nistream& operator>>(istream& s, pair<A,B>& p) { return s>>p.first>>p.second; }\ntemplate<template<typename...> typename U, typename ...T>\nostream& operator<<(ostream& s, const U<T...>& p);\ntemplate<typename A, typename B>\nostream& operator<<(ostream& s, const pair<A,B>& p) { s << \"(\" << p.F << \", \" << p.S << \")\"; return s; }\ntemplate<template<typename...> typename U, typename ...T>\nostream& operator<<(ostream& s, const U<T...>& p) { for (const auto& t : p) s << t << \" \"; return s; }\nostream& operator<<(ostream& s, const str& p) { for (const auto& t : p) s << t; return s; }\ntemplate<typename T>\nistream& operator>>(istream& s, vec<T>& p) { for (T& t : p) s >> t; return s; }\n\n#define inf int(1e9)\n\nint main() {\n    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n    int t; cin >> t;\n    while (t--) {\n        int n; cin >> n;\n        vi cn{0};\n        vi neg;\n        rep(i,0,2*n) {\n            char c; cin >> c;\n            if (c == '(') {\n                cn.pb(cn.back()+1);\n            } else {\n                cn.pb(cn.back()-1);\n                if (cn.back() == -1) neg.pb(i);\n            }\n        }\n        assert(cn.back()==0);\n        assert(sz(cn) == 2*n+1);\n        map<int, set<int>> cnp;\n        rep(i,0,sz(cn)) cnp[cn[i]].insert(i);\n\n        set<int> walls;\n        walls.insert(0);\n        walls.insert(2*n);\n        vi cnix(sz(cn)); iota(all(cnix), 0);\n        sort(all(cnix), [&](int a, int b) { return cn[a] > cn[b]; });\n        vi max_flip(2*n+1, inf); // leftmost index I can reverse with\n        trav(i, cnix) {\n            if (cn[i] < 0) break;\n            auto l = walls.upper_bound(i);\n            auto r = walls.lower_bound(i);\n            assert(l != walls.begin());\n            --l;\n            int v = (cn[i] + 1) / 2;\n            if (!cnp.count(v)) continue;\n            l = cnp[v].lower_bound(*l);\n            r = cnp[v].upper_bound(*r);\n            /* cout<<v<<\" \"<<*l<<\" \"<<*r<<endl; */\n            if (r == cnp[v].begin()) continue;\n            if (l == cnp[v].end()) continue;\n            --r;\n            if (*l == *r) continue;\n            ckmin(max_flip[*r], *l);\n\n            walls.insert(i);\n        }\n        /* cout<<max_flip<<endl; */\n        vii dp(2*n+1, {0,0});\n        vi take(2*n+1, inf);\n        rep(i,1,2*n+1) {\n            dp[i] = dp[i-1];\n            if (max_flip[i] != inf) {\n                auto it = lower_bound(all(neg), max_flip[i]);\n                auto it2 = lower_bound(all(neg), i);\n                if (it == neg.end() || *it >= i) continue;\n                int c = it2 - it;\n                auto nu = mp(dp[max_flip[i]].F + 1, dp[max_flip[i]].S + c);\n                if (nu.S > dp[i].S || nu.S == dp[i].S && nu.F < dp[i].F) {\n                    dp[i] = nu;\n                    take[i] = max_flip[i];\n                }\n            }\n        }\n        int x = 2*n;\n        vii mv;\n        while (x) {\n            if (take[x] != inf) {\n                mv.pb({max_flip[x], x});\n                x = take[x];\n                continue;\n            }\n            x--;\n        }\n        cout<<sz(mv)<<endl;\n        trav(v, mv) cout<<v.F+1<<\" \"<<v.S<<endl;\n    }\n}\n"
}