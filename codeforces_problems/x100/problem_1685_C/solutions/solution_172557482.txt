{
    "id": 172557482,
    "contestId": 1685,
    "creationTimeSeconds": 1663503461,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1685,
        "index": "C",
        "name": "Bring Balance",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1685,
        "members": [
            {
                "handle": "thebighead"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1653500100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 2969600,
    "source": "#include<bits/stdc++.h>\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define db double\r\n#define ldb long double\r\n#define pb push_back\r\n#define mp make_pair\r\n#define pii pair<int, int>\r\n#define FR first\r\n#define SE second\r\nusing namespace std;\r\ninline int read() {\r\n    int x = 0; bool op = 0;\r\n    char c = getchar();\r\n    while(!isdigit(c))op |= (c == '-'), c = getchar();\r\n    while(isdigit(c))x = (x << 1) + (x << 3) + (c ^ 48), c = getchar();\r\n    return op ? -x : x;\r\n}\r\nconst int N = 2e5 + 10;\r\nint n;\r\nchar s[N], t[N], tmp[N];\r\nint top, stk[N], f[N], sum[N];\r\nbool chk(int l, int r) {\r\n    memcpy(tmp, s, sizeof(tmp));\r\n    reverse(tmp + l, tmp + r + 1);\r\n    int c = 0;\r\n    for(int i = 1; i <= n; i++) {\r\n        c += (tmp[i] == '(' ? 1 : -1);\r\n        if(c < 0)return false;\r\n    }\r\n    return true;\r\n}\r\nvoid solve() {\r\n    n = read(); n <<= 1;\r\n    scanf(\"%s\", s + 1);\r\n    memcpy(t, s, sizeof(s));\r\n    top = 0;\r\n    for(int i = 1; i <= n; i++)sum[i] = sum[i - 1] + (s[i] == '(' ? 1 : -1);\r\n    for(int i = 1; i <= n; i++) {\r\n        if(s[i] == '(')stk[++top] = i;\r\n        else if(top)top--;\r\n        else f[i] = true;\r\n    }\r\n    for(int i = 1; i <= top; i++)f[stk[i]] = true;\r\n    int L = -1, R = -1;\r\n    for(int i = 1; i <= n; i++) {\r\n        if(f[i]) {L = i; break;}\r\n    }\r\n    for(int i = n; i; i--) {\r\n        if(f[i]) {R = i; break;}\r\n    }\r\n    if(L == -1 || R == -1)return puts(\"0\"), void();\r\n    int pl = 0, pr = 0;\r\n    for(int i = 1; i <= L; i++) {\r\n        if(pl == 0 || sum[i] > sum[pl])pl = i;\r\n    }\r\n    for(int i = R; i <= n; i++) {\r\n        if(pr == 0 || sum[i] > sum[pr])pr = i;\r\n    }\r\n    if(chk(pl + 1, pr))return printf(\"1\\n%d %d\\n\", pl + 1, pr), void();\r\n    int pos = 0;\r\n    for(int i = 1; i <= n; i++) {\r\n        if(pos == 0 || sum[i] > sum[pos])pos = i;\r\n    }\r\n    printf(\"2\\n%d %d\\n%d %d\\n\", 1, pos, pos + 1, n);\r\n    return ;\r\n}\r\nint main() { \r\n    int test = read();\r\n    while(test--)solve();\r\n    return 0;\r\n}"
}