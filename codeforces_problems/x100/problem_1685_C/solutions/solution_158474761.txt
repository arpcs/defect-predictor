{
    "id": 158474761,
    "contestId": 1685,
    "creationTimeSeconds": 1653515402,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1685,
        "index": "C",
        "name": "Bring Balance",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1685,
        "members": [
            {
                "handle": "collares"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1653500100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 1331200,
    "source": "#include <algorithm>\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint acc[200001];\n\nint main() {\n    ios::sync_with_stdio(false);\n    int t;\n    cin >> t;\n\n    while (t--) {\n        int n;\n        string s;\n        cin >> n >> s;\n\n        for (int i = 0; i < 2*n; i++)\n            acc[i+1] = acc[i] + (s[i] == '(' ? 1 : -1);\n\n        vector<pair<int, int>> ans;\n        for (int i = 1; i <= 2*n; i++)\n            if (acc[i] == -1) {\n                int pl = max_element(acc, acc+i) - acc;\n                int pr = max_element(acc+i, acc+2*n+1) - acc;\n                int best = -1;\n\n                for (int j = i+1; j <= 2*n; j++)\n                    if (acc[j] >= acc[pr] - acc[pl])\n                        best = j;\n\n                ans.emplace_back(pl, best-1);  \n                i = best;\n\n                reverse(s.begin()+pl, s.begin()+best);\n                for (int j = pl; j < best; j++)\n                    acc[j+1] = acc[j] + (s[j] == '(' ? 1 : -1);\n            }\n\n        cout << ans.size() << endl;\n        for (auto [a, b] : ans)\n            cout << a+1 << \" \" << b+1 << endl;\n    }\n}\n"
}