{
    "id": 212965382,
    "contestId": 1685,
    "creationTimeSeconds": 1688905755,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1685,
        "index": "C",
        "name": "Bring Balance",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1685,
        "members": [
            {
                "handle": "windy_k"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1653500100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 3174400,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define LHK_AK_IOI true\r\n#define ll long long\r\n#define dub double\r\n#define mar(x) for(int i = head[x]; i; i = e[i].nxt)\r\n#define car(a) memset(a, 0, sizeof(a))\r\n#define cap(a, b) memcpy(a, b, sizeof(b))\r\nconst int inf = 1e9 + 7;\r\nconst int MAXN = 4e5;\r\n\r\nusing namespace std;\r\n\r\ninline int read( ){\r\n    int x = 0 ; short w = 0 ; char ch = 0;\r\n    while( !isdigit(ch) ) { w|=ch=='-';ch=getchar();}\r\n    while( isdigit(ch) ) {x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\r\n    return w ? -x : x;\r\n}\r\n\r\nint ans, n;\r\nint a[MAXN], sum[MAXN];\r\n\r\nbool check( ){\r\n\tfor(int i = 1; i <= n; i++)\r\n\t\tif(sum[i] < 0) return 0;\r\n\treturn 1;\r\n}\r\n\r\nsigned main( ){\r\n\t\r\n\t// freopen(\"changer.in\", \"r\", stdin);\r\n\t// freopen(\"changer.out\", \"w\", stdout);\r\n//\r\n\tint T = read( );\r\n\t// int T; cin >> T;\r\n\t\r\n\twhile(T--){\r\n\t\t// cin >> n; n *= 2;\r\n\t\tn = (read( ) << 1);\r\n\t\tint l = 0, r = 0, mx = -10, pos = 0;\r\n\t\t// car(sum);\r\n\t\tsum[0] = 0;\r\n\t\tfor(int i = 1; i <= n; i++){\r\n\t\t\tchar ch; ch = getchar( );\r\n\t\t\twhile(ch != ')' and ch != '(') ch = getchar( );\r\n\t\t\tif(ch == '(') sum[i] = sum[i-1] + 1;\r\n\t\t\tif(ch == ')') sum[i] = sum[i-1] - 1;\r\n\t\t\tif(sum[i] == -1){\r\n\t\t\t\tif(!l) l = i;\r\n\t\t\t\tr = i;\r\n\t\t\t}\r\n\t\t\tif(sum[i] > mx){\r\n\t\t\t\tpos = i;\r\n\t\t\t\tmx = sum[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(check( )){\r\n\t\t\tcout << \"0\\n\";\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tint L = l, R = r, flag = 0;\r\n\t\t\r\n\t\tfor(int i = 0; i <= l; i++)\r\n\t\t\tif(sum[i] > sum[L]) L = i;\r\n\t\tfor(int i = r; i <= n; i++)\r\n\t\t\tif(sum[i] > sum[R]) R = i;\r\n\t\tfor(int i = l; i <= r; i++)\r\n\t\t\tif(sum[i] > sum[L] + sum[R]) flag = 1;\r\n\t\tif(!flag){\r\n\t\t\tcout << \"1\\n\" << L + 1 << ' ' << R << endl;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tcout << \"2\\n1 \" << pos << \"\\n\" << pos + 1 << \" \" << n << endl; \r\n\t}\r\n\t\r\n\tfclose(stdin);\r\n\tfclose(stdout);\r\n\t\r\n\treturn (0-0);\r\n}"
}