{
    "contestId": 1685,
    "index": "C",
    "name": "Bring Balance",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "brute force",
        "constructive algorithms",
        "greedy"
    ],
    "desc": {
        "title": "C. Bring Balance",
        "statement": "<p>Alina has a bracket sequence $$$s$$$ of length $$$2n$$$, consisting of $$$n$$$ opening brackets <span class=\"tex-font-style-tt\">'('</span> and $$$n$$$ closing brackets <span class=\"tex-font-style-tt\">')'</span>. As she likes balance, she wants to turn this bracket sequence into a balanced bracket sequence.</p><p>In one operation, she can reverse any substring of $$$s$$$.</p><p>What's the smallest number of operations that she needs to turn $$$s$$$ into a balanced bracket sequence? It can be shown that it's always possible in at most $$$n$$$ operations.</p><p>As a reminder, a sequence of brackets is called balanced if one can turn it into a valid math expression by adding characters <span class=\"tex-font-style-tt\">+</span> and <span class=\"tex-font-style-tt\">1</span>. For example, sequences <span class=\"tex-font-style-tt\">(())()</span>, <span class=\"tex-font-style-tt\">()</span>, and <span class=\"tex-font-style-tt\">(()(()))</span> are balanced, while <span class=\"tex-font-style-tt\">)(</span>, <span class=\"tex-font-style-tt\">(()</span>, and <span class=\"tex-font-style-tt\">(()))(</span> are not.</p>",
        "inputSpecification": "<p>The first line of the input contains a single integer $$$t$$$ ($$$1 \\le t \\le 2 \\cdot 10^4$$$) \u00a0\u2014 the number of test cases. The description of the test cases follows.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 10^5$$$).</p><p>The second line of each test case contains a string $$$s$$$ of length $$$2n$$$, consisting of $$$n$$$ opening and $$$n$$$ closing brackets.</p><p>The sum of $$$n$$$ over all test cases doesn't exceed $$$2\\cdot 10^5$$$.</p>",
        "outputSpecification": "<p>For each test case, in the first line output a single integer $$$k$$$ $$$(0 \\le k \\le n)$$$ \u00a0\u2014 the smallest number of operations required.</p><p>The $$$i$$$-th of the next $$$k$$$ lines should contain two integers $$$l_i, r_i$$$ ($$$1 \\le l_i \\le r_i \\le 2n$$$), indicating that in the $$$i$$$-th operation, Alina will reverse the substring $$$s_ls_{l+1} \\ldots s_{r-1}s_r$$$. Here the numeration starts from $$$1$$$.</p><p>If there are multiple sequences of operations with the smallest length which transform the sequence into a balanced one, you can output any of them.</p>",
        "samples": [
            {
                "input": "<div class=\"test-example-line test-example-line-even test-example-line-0\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">(())</div><div class=\"test-example-line test-example-line-even test-example-line-2\">5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">())((()))(</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">6</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">())((()))(()</div>",
                "output": "\n0\n2\n3 4\n9 10\n1\n2 11"
            }
        ],
        "note": "<p>In the first test case, the string is already balanced.</p><p>In the second test case, the string will be transformed as follows: <span class=\"tex-font-style-tt\">())((()))(</span> $$$\\to$$$ <span class=\"tex-font-style-tt\">()()(()))(</span> $$$\\to$$$ <span class=\"tex-font-style-tt\">()()(())()</span>, where the last string is balanced.</p><p>In the third test case, the string will be transformed to <span class=\"tex-font-style-tt\">((()))((()))</span>, which is balanced.</p>"
    }
}