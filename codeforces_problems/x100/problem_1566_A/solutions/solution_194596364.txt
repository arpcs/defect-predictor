{
    "id": 194596364,
    "contestId": 1566,
    "creationTimeSeconds": 1677086694,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1566,
        "index": "A",
        "name": "Median Maximization",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "binary search",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1566,
        "members": [
            {
                "handle": "GlowHP"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631457300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 11,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 16076800,
    "source": "//#include <bits\\stdc++.h>\r\n#include <iostream>\r\n#include <vector>\r\n#include <cmath>\r\n#include <algorithm>\r\n#include <string>\r\n#define int long long\r\n#define ld long double\r\n#define endl '\\n'\r\n#define all(x) begin(x), end(x)\r\n#define rall(x) rbegin(x), rend(x)\r\n#define pb(x) push_back(x)\r\n//freopen(\"input.txt\", \"r\",stdin);\r\n//freopen(\"oupput.txt\", \"w\",stdout);\r\nusing namespace std;\r\nconst int mod = 1e9 + 7;\r\nconst int NMAX = 1e6 + 1;\r\nint NOD(int a, int b) {\r\n    if (a == 0) return b;\r\n    if (b == 0) return a;\r\n    if (a > b) return NOD(a % b, b);\r\n    return NOD(a, b % a);\r\n}\r\nint NOK(int a, int b) {\r\n    return a * b / NOD(a, b);\r\n}\r\nint fact[NMAX + 1];\r\nint ifact[NMAX + 1];\r\nint binpow(int a, int n, int mod) {\r\n    if (n == 0)\r\n        return 1;\r\n    if (n == 1)\r\n        return a;\r\n    if (n % 2 == 0) {\r\n        a = a * a % mod;\r\n        return binpow(a, n / 2, mod) % mod;\r\n    }\r\n    if (n % 2 != 0) {\r\n        int tmp = a;\r\n        a = a * a % mod;\r\n        return tmp * binpow(a, n / 2, mod) % mod;\r\n    }\r\n}\r\nvoid fill_fact(int mod) {\r\n    fact[0] = 1;\r\n    for (int i = 1; i <= NMAX; ++i) {\r\n        fact[i] = i * fact[i - 1] % mod;\r\n    }\r\n}\r\nvoid fill_ifact(int mod) {\r\n    ifact[NMAX] = binpow(fact[NMAX], mod - 2, mod);\r\n    for (int i = NMAX - 1; i >= 0; --i) {\r\n        ifact[i] = ((i + 1) * ifact[i + 1] % mod);\r\n    }\r\n}\r\n\r\nvoid solve() {\r\n    int n, s; cin >> n >> s;\r\n    n = n / 2 + 1;\r\n    cout << s / n << endl;\r\n}\r\n\r\nsigned main() {\r\n    fill_fact(mod);\r\n    fill_ifact(mod);\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int t = 1; cin >> t;\r\n    while(t--) {\r\n        solve();\r\n    }\r\n}\r\n"
}