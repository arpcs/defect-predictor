{
    "id": 131351935,
    "contestId": 1566,
    "creationTimeSeconds": 1633800019,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1566,
        "index": "A",
        "name": "Median Maximization",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "binary search",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1566,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631457300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 11,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 6348800,
    "source": "\n#include <vector>\n#include <bits/stdc++.h>\n#include <iostream>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\ntypedef long long int ll;\nusing namespace __gnu_pbds;\n#define ordered_set tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update>\n#define rep(i, a, b) for (ll i = a; i < b; i++)\n#define rrep(i, a, b) for (ll i = a; i >= b; i--)\n#define repe(i, a, b) for (ll i = a; i <= b; i++)\n#define repi(it, x) for (__typeof((x).begin()) it = (x).begin(); it != (x).end(); it++)\n#define endl '\\n'\n#define sz(x) x.size()\n#define clr(x) memset((x), 0, sizeof(x))\n#define all(x) (x).begin(), (x).end()\n#define pb push_back\n#define ff first\n#define ss second\n#define lb lower_bound\n#define ub upper_bound\n#define pq priority_queue\n#define MOD 1000000007\n#define PI 3.14159265\n#define printVector(v) copy(v.begin(), v.end(), ostream_iterator<int>(cout, \" \"));\n#define printArray(arr, n) copy(arr, arr + n, ostream_iterator<int>(cout, \" \"));\n#define Glory                         \\\n    ios_base::sync_with_stdio(false); \\\n    cin.tie(0);                       \\\n    cout.tie(0);\nusing ull = unsigned long long int;\nusing dd = double;\nusing ldd = long double;\nusing namespace std;\nchar arr[1000000], tmp[1000000];\nvoid merge(int beg1, int end1, int beg2, int end2)\n{\n    int ind = beg1, beg = beg1;\n    while (beg1 <= end1 and beg2 <= end2)\n    {\n        if (arr[beg1] > arr[beg2])\n            tmp[ind++] = arr[beg2++];\n        else\n            tmp[ind++] = arr[beg1++];\n    }\n    for (; beg1 <= end1; beg1++)\n        tmp[ind++] = arr[beg1];\n    for (; beg2 <= end2; beg2++)\n        tmp[ind++] = arr[beg2];\n    memcpy(arr + beg, tmp + beg, (ind - beg) * sizeof(char));\n}\nvoid mergeSort(int beg, int end)\n{\n    if (beg >= end)\n        return;\n    int mid = beg + (end - beg) / 2;\n    mergeSort(beg, mid);\n    mergeSort(mid + 1, end);\n    merge(beg, mid, mid + 1, end);\n}\nint main()\n{\n    Glory \n    int t;\n    cin>>t;\n    while (t--)\n    {\n        int n,s;\n        cin>>n>>s;\n        int f=n/2+1;\n        cout<<s/f<<endl;\n    }\n}\n    \t   \t\t  \t\t \t\t \t  \t\t\t\t \t\t\t\t\t"
}