{
    "id": 226758653,
    "contestId": 1566,
    "creationTimeSeconds": 1696519133,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1566,
        "index": "A",
        "name": "Median Maximization",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "binary search",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1566,
        "members": [
            {
                "handle": "A.M.Q"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631457300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define all(v) v.begin(), v.end()\r\n\r\n#define pb push_back\r\n#define pf push_front\r\n#define popf pop_front\r\n#define popb pop_back\r\n\r\n#define nl cout << endl;\r\n#define none \"\"\r\n\r\n#define out(a, separator) cout << (a) << separator;\r\n#define in(a)     \\\r\n    ({            \\\r\n        cin >> a; \\\r\n        a;        \\\r\n    })\r\nvoid inm()\r\n{\r\n}\r\ntemplate <class header, typename... trailer>\r\nvoid inm(header &h, trailer &...t)\r\n{\r\n    in(h);\r\n    return inm(t...);\r\n}\r\n#define outc(__container, separator) \\\r\n    ({                               \\\r\n        for (auto &&i : __container) \\\r\n        {                            \\\r\n            out(i, separator);       \\\r\n        }                            \\\r\n    })\r\n\r\ntemplate <typename Container>\r\nvoid inc_helper(Container &c, size_t size, random_access_iterator_tag)\r\n{\r\n    typename Container::value_type t;\r\n    while (size--)\r\n    {\r\n        c.pb(in(t));\r\n    }\r\n}\r\n\r\ntemplate <typename Container>\r\nvoid inc_helper(Container &c, size_t size, bidirectional_iterator_tag)\r\n{\r\n    typename Container::value_type t;\r\n    while (size--)\r\n    {\r\n        c.pf(in(t));\r\n    }\r\n}\r\n\r\ntemplate <typename Container>\r\nvoid inc_helper(Container &c, size_t size, std::forward_iterator_tag)\r\n{\r\n    typename Container::value_type t;\r\n    while (size--)\r\n    {\r\n        c.insert(in(t));\r\n    }\r\n}\r\ntemplate <typename Container>\r\nvoid inc(Container &c, size_t size)\r\n{\r\n    inc_helper(c, size, typename iterator_traits<typename Container::iterator>::iterator_category{});\r\n}\r\n\r\n#define vi vector<int>\r\n#define vl vector<long long>\r\n#define pi pair<int, int>\r\n#define pl pair<long long, long long>\r\n#define vpi vector<pi>\r\n#define vpl vector<pl>\r\n#define vvi vector<vi>\r\n#define vd vector<double>\r\n#define vstr vector<str>\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define str string\r\n#define __none []() {}\r\n#define int long long\r\n\r\nistream &operator>>(istream &_in, pi &p)\r\n{\r\n    _in >> p.first >> p.second;\r\n    return _in;\r\n}\r\nostream &operator<<(ostream &_out, pi &p)\r\n{\r\n    _out << p.first << \" \" << p.second;\r\n    return _out;\r\n}\r\n\r\nbool check_prime(int n)\r\n{\r\n    if(n <= 1)\r\n    {\r\n        return false;\r\n    }\r\n    if(n == 2)\r\n    {\r\n        return true;\r\n    }\r\n    int i = 2;\r\n \r\n \r\n    int k = ceil(sqrt(n));\r\n\r\n    while(i<= k)\r\n    {\r\n        if(n % i == 0)\r\n            return false;\r\n        i += 1;\r\n    }\r\n \r\n    return true;\r\n}\r\n\r\nsigned main()\r\n{\r\n    int t;\r\n    in(t);\r\n\r\n    while (t--)\r\n    {\r\n        int n, s;\r\n        inm(n, s);\r\n\r\n        int median = ceil(n/2.0), r = n - median + 1;\r\n        out(floor(1.0*s/r), \"\\n\");\r\n    }\r\n}\r\n"
}