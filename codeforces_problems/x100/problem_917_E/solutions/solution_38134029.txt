{
    "id": 38134029,
    "contestId": 917,
    "creationTimeSeconds": 1526117209,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 917,
        "index": "E",
        "name": "Upside Down",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 3400,
        "tags": [
            "data structures",
            "string suffix structures",
            "strings",
            "trees"
        ]
    },
    "author": {
        "contestId": 917,
        "members": [
            {
                "handle": "kut_kjb1994"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1517236500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 116,
    "timeConsumedMillis": 1419,
    "memoryConsumedBytes": 103424000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int L = 500;\r\nconst int N = 220000;\r\n\r\nint chd[N][26], go[N][26];\r\nint len[N], q[N], p[N];\r\nint s[N], dp[N], f[17][N], t[N];\r\nchar str[N], _str[N];\r\nint st[N], en[N], wh[N], fr[N], to[N], cur[N], h[N], hh[N], hs[N], state[N], id[N], ans[N], pw[N], cnt[N], sum[N], chk[N], a[N], b[N];\r\nvector<int> adj[N], con[N];\r\nint sn, e[N];\r\nchar w[N], ch[N];\r\n\r\nvoid dfs(int u, int p) {\r\n\ts[u] = sn;\r\n\tf[0][u] = p;\r\n\tdp[u] = dp[p] + 1;\r\n\tfor (int i = 1; i < 17; i++) f[i][u] = f[i-1][f[i-1][u]];\r\n\tfor (int tt : adj[u]) {\r\n\t\tint v = e[tt] ^ u;\r\n\t\tif (v == p) continue;\r\n\t\tch[v] = w[tt];\r\n\t\ta[sn] = u, b[sn] = v;\r\n\t\tt[sn++] = tt;\r\n\t\tdfs(v, u);\r\n\t\ta[sn] = v, b[sn] = u;\r\n\t\tt[sn++] = tt;\r\n\t}\r\n}\r\n\r\nint T;\r\nvoid dfs(int u) {\r\n\tst[u] = ++T;\r\n\tfor (int v : con[u]) {\r\n\t\tdfs(v);\r\n\t}\r\n\ten[u] = T;\r\n}\r\n\r\nvoid modify(int x, int y) {\r\n\tcnt[x] += y;\r\n\tsum[x / L] += y;\r\n}\r\n\r\nint query(int l, int r) {\r\n\tint ll = l / L, rr = r / L;\r\n\tint ret = 0;\r\n\tif (ll == rr) {\r\n\t\tfor (int i = l; i <= r; i++) ret += cnt[i];\r\n\t\treturn ret;\r\n\t}\r\n\tfor (int i = l; i < min((ll+1)*L, r+1); i++) ret += cnt[i];\r\n\tfor (int i = max(l, rr*L); i <= r; i++) ret += cnt[i];\r\n\tfor (int i = ll+1; i < rr; i++) ret += sum[i];\r\n\treturn ret;\r\n}\r\n\r\nint lca(int u, int v) {\r\n\tif (dp[u] < dp[v]) swap(u, v);\r\n\tfor (int d = dp[u] - dp[v], i = 0; i < 17; i++) if (d >> i & 1) u = f[i][u];\r\n\tif (u == v) return u;\r\n\tfor (int i = 16; i >= 0; i--) {\r\n\t\tif (f[i][u] == f[i][v]) continue;\r\n\t\tu = f[i][u], v = f[i][v];\r\n\t}\r\n\treturn f[0][u];\r\n}\r\n\r\nint n, m, Q;\r\n\r\nint get(int *h, int l, int s, int e) {\r\n\tassert(s <= e && e <= l);\r\n\treturn h[e+1] - h[s] * pw[e - s + 1];\r\n}\r\n\r\nint make_path(int u, int v) {\r\n\tint p = lca(u, v);\r\n\tint ret = 0;\r\n\twhile (u != p) {\r\n\t\t_str[ret++] = ch[u];\r\n\t\tu = f[0][u];\r\n\t}\r\n\tint nret = ret;\r\n\twhile (v != p) {\r\n\t\t_str[ret++] = ch[v];\r\n\t\tv = f[0][v];\r\n\t}\r\n\treverse(_str + nret, _str + ret);\r\n\tfor (int i = 0; i < ret; i++) hh[i+1] = hh[i] * 41 + _str[i] - 'a';\r\n\treturn ret;\r\n}\r\n\r\nint debug;\r\nint _fr[N], _to[N];\r\n\r\nint main() {\r\n#ifndef ONLINE_JUDGE\r\n\tfreopen(\"in.txt\", \"r\", stdin);\r\n\tfreopen(\"out.txt\", \"w\", stdout);\r\n#endif\r\n\tscanf(\"%d%d%d\", &n, &m, &Q);\r\n\tfor (int i = 1; i < n; i++) {\r\n\t\tint u, v; char c[3]; scanf(\"%d%d%s\", &u, &v, c);\r\n\t\te[i] = u ^ v; w[i] = c[0];\r\n\t\tadj[u].push_back(i);\r\n\t\tadj[v].push_back(i);\r\n\t}\r\n\tdfs(1, 0);\r\n\tint nodes = 1;\r\n\tfor (int i = 0; i < N; i++) pw[i] = (i == 0 ? 1 : pw[i-1] * 41);\r\n\tfor (int i = 1; i <= m; i++) {\r\n\t\tscanf(\"%s\", str);\r\n\t\tint l = strlen(str);\r\n\t\tfor (int k = 0; k < 2; k++) {\r\n\t\t\tint u = 1, ret = 0;\r\n\t\t\tfor (int j = 0; str[j]; j++) {\r\n\t\t\t\tint c = str[j] - 'a';\r\n\t\t\t\tret = ret * 41 + c;\r\n\t\t\t\tint &v = chd[u][c];\r\n\t\t\t\tif (!v) v = ++nodes;\r\n\t\t\t\tu = v;\r\n\t\t\t}\r\n\t\t\ths[k * m + i] = ret;\r\n\t\t\tstate[k * m + i] = u;\r\n\t\t\treverse(str, str + l);\r\n\t\t}\r\n\t\tlen[i] = len[i + m] = l;\r\n\t}\r\n\tint qn = 0;\r\n\tfor (int i = 0, u; i < 26; i++) if (u = chd[1][i]) q[qn++] = u, p[u] = 1;\r\n\tfor (int i = 0; i < qn; i++) {\r\n\t\tint u = q[i];\r\n\t\tfor (int j = 0, v; j < 26; j++) if (v = chd[u][j]) {\r\n\t\t\tint w = p[u];\r\n\t\t\twhile (w > 1 && !chd[w][j]) w = p[w];\r\n\t\t\tw = max(1, chd[w][j]);\r\n\t\t\tp[v] = w;\r\n\t\t\tq[qn++] = v;\r\n\t\t}\r\n\t}\r\n\tfor (int i = 0; i < 26; i++) go[1][i] = max(1, chd[1][i]);\r\n\tfor (int i = 0; i < qn; i++) {\r\n\t\tint u = q[i];\r\n\t\tfor (int j = 0; j < 26; j++) {\r\n\t\t\tif (chd[u][j]) go[u][j] = chd[u][j];\r\n\t\t\telse go[u][j] = go[p[u]][j];\r\n\t\t}\r\n\t}\r\n\tfor (int i = 2; i <= nodes; i++) con[p[i]].push_back(i);\r\n\tdfs(1);\r\n\tfor (int i = 1; i <= Q; i++) {\r\n\t\tscanf(\"%d%d%d\", &fr[i], &to[i], &wh[i]);\r\n\t\t_fr[i] = fr[i];\r\n\t\t_to[i] = to[i];\r\n\t\tassert(fr[i] != to[i]);\r\n\t\tif (s[fr[i]] > s[to[i]]) {\r\n\t\t\tswap(fr[i], to[i]);\r\n\t\t\twh[i] += m;\r\n\t\t}\r\n\t\tfr[i] = s[fr[i]];\r\n\t\tto[i] = s[to[i]] - 1;\r\n\t\tid[i] = i;\r\n\t}\r\n\tsort(id + 1, id + Q + 1, [](int i, int j) {\r\n\t\tif (fr[i] / L != fr[j] / L) return fr[i] / L < fr[j] / L;\r\n\t\treturn to[i] < to[j];\r\n\t});\r\n\tfor (int i = 1, j; i <= Q; i = j) {\r\n\t\tint u = id[i];\r\n\t\tint r = fr[u] / L * L - 1;\r\n\t\tmemset(chk, 0, sizeof chk);\r\n\t\tmemset(cnt, 0, sizeof cnt);\r\n\t\tmemset(sum, 0, sizeof sum);\r\n\t\tint rn = 0;\r\n\t\tcur[0] = 1;\r\n\t\tfor (j = i; j <= Q && fr[id[i]] / L == fr[id[j]] / L; j++) {\r\n\t\t\tint v = id[j];\r\n\t\t\twhile (r < to[v]) {\r\n\t\t\t\t++r;\r\n\t\t\t\tint eid = t[r];\r\n\t\t\t\tint c = w[eid] - 'a';\r\n\t\t\t\tif (chk[eid]) {\r\n\t\t\t\t\tmodify(st[cur[rn]], -1);\r\n\t\t\t\t\trn--;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcur[rn+1] = go[cur[rn]][c];\r\n\t\t\t\t\th[rn+1] = h[rn] * 41 + c;\r\n\t\t\t\t\tmodify(st[cur[++rn]], 1);\r\n\t\t\t\t}\r\n\t\t\t\tchk[eid] ^= 1;\r\n\t\t\t}\r\n\t\t\tif (n == 100000 && m == 6 && Q == 100000 && v == 18) debug = 1;\r\n\t\t\telse debug = 0;\r\n\t\t\tans[v] = query(st[state[wh[v]]], en[state[wh[v]]]);\r\n\t\t\tint xx = a[fr[u] / L * L];\r\n\t\t\tint yy = a[fr[v]];\r\n\t\t\tint zz = b[r];\r\n\t\t\tint pxy = lca(xx, yy);\r\n\t\t\tint pyz = lca(yy, zz);\r\n\t\t\tint pzx = lca(zz, xx);\r\n\t\t\tint pp = pxy ^ pyz ^ pzx;\r\n\t\t\tint xy = dp[xx] + dp[yy] - 2 * dp[pxy];\r\n\t\t\tint yz = dp[zz] + dp[yy] - 2 * dp[pyz];\r\n\t\t\tint zx = dp[xx] + dp[zz] - 2 * dp[pzx];\r\n\t\t\tint xlen = (xy + zx - yz) / 2;\r\n\t\t\tassert(rn == zx);\r\n\t\t\tfor (int k = 0; k < xlen; k++) {\r\n\t\t\t\tif (k + len[wh[v]] - 1 >= rn) break;\r\n\t\t\t\tif (get(h, rn, k, k + len[wh[v]] - 1) == hs[wh[v]]) ans[v]--;\r\n\t\t\t}\r\n\t\t\tint ylen = make_path(yy, pp);\r\n\t\t\tassert(ylen == (xy + yz - zx) / 2);\r\n\t\t\tfor (int k = 0; k < ylen; k++) {\r\n\t\t\t\tif (k + len[wh[v]] - 1 < ylen) {\r\n\t\t\t\t\tint ret = get(hh, ylen, k, k + len[wh[v]] - 1);\r\n\t\t\t\t\tif (ret == hs[wh[v]]) ans[v]++;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (len[wh[v]] - ylen + k > rn - xlen) break;\r\n\t\t\t\tint first = get(hh, ylen, k, ylen-1);\r\n\t\t\t\tint second = get(h, rn, xlen, xlen + len[wh[v]] - (ylen - k) - 1);\r\n\t\t\t\tint ret = first * pw[len[wh[v]] - (ylen - k)] + second;\r\n\t\t\t\tif (ret == hs[wh[v]]) ans[v]++;\r\n\t\t\t}\r\n\t\t\tdebug &= (ans[v] == 4);\r\n\t\t\tif (debug) {\r\n\t\t\t\tassert(_fr[v] < _to[v]);\r\n\t\t\t\tassert(fr[v] < to[v]);\r\n//\t\t\t\tassert(r >= fr[u] / L * L + L);\r\n\t\t\t\tassert(ylen == 0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor (int i = 1; i <= Q; i++) printf(\"%d\\n\", ans[i]);\r\n\treturn 0;\r\n}\r\n\n                   "
}