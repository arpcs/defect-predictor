{
    "id": 69549907,
    "contestId": 917,
    "creationTimeSeconds": 1580018040,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 917,
        "index": "E",
        "name": "Upside Down",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 3400,
        "tags": [
            "data structures",
            "string suffix structures",
            "strings",
            "trees"
        ]
    },
    "author": {
        "contestId": 917,
        "members": [
            {
                "handle": "Wechselhau"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1517236500
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 732,
    "memoryConsumedBytes": 256614400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define nn 200366\r\n#define lg 20\r\n#define mn nn\r\n#define pii pair<int,int>\r\n#define mp make_pair\r\nstruct bit{\r\n\tint tree[nn];\r\n\tvoid add(int x,int y) {for(;x<nn;x+=x&-x) tree[x]+=y;}\r\n\tint ask(int x) {int y=0;for(;x;x-=x&-x) y+=tree[x];return y;}\r\n\tint ask(int l,int r) {return ask(r)-ask(l-1);}\r\n};\r\nstruct bbit{\r\n\tint tree[mn];vector<int> inv;\r\n\tvoid add(int x,int y) {for(;x<mn;x+=x&-x) tree[x]+=y,inv.push_back(x);}\r\n\tint ask(int x) {int y=0;for(;x;x-=x&-x) y+=tree[x];return y;}\r\n\tint ask(int l,int r) {return ask(r)-ask(l-1);}\r\n\tvoid cls() {for(int i=0;i<inv.size();i++) tree[inv[i]]=0;inv.clear();}\r\n}flame;\r\n\r\n\r\nint ans[nn];\r\nnamespace ptilopsis{\r\n\tstruct pts{\r\n\t\tint x,y,id;\r\n\t\tpts(int a=0,int b=0,int c=0){\r\n\t\t\tx=a,y=b,id=c;\r\n\t\t}\r\n\t};struct ppts{\r\n\t\tpii x,y;int id;\r\n\t\tppts(pii a=mp(0,0),pii b=mp(0,0),int c=0){\r\n\t\t\tx=a,y=b,id=c;\r\n\t\t}\r\n\t};\r\n\tbool operator<(ppts a,ppts b){\r\n\t\treturn a.x<b.x;\r\n\t}\r\n\t\r\n\tvector<ppts> vp[nn];\r\n\tvoid ins(pii a,pii b,int c,int d){\r\n\t\tvp[d].push_back(ppts(a,b,c));\r\n\t}\r\n\tvector<pii> ac;\r\n\tint ff(pii x){\r\n\t\treturn lower_bound(ac.begin(),ac.end(),x)-ac.begin()+1;\r\n\t}\r\n\tvoid solve(){\r\n\t\t\r\n\t\tfor(int ii=0;ii<nn;ii++) if(vp[ii].size()){\r\n\t\t\tvector<ppts> vip=vp[ii];flame.cls();\r\n\t\t\tsort(vip.begin(),vip.end());ac.clear();\r\n\t\t\tfor(int i=0;i<vip.size();i++) ac.push_back(vip[i].y);\r\n\t\t\tsort(ac.begin(),ac.end());\r\n\t\t\t\r\n\t\t\tfor(int i=0;i<vip.size();i++){\r\n\t\t\t\tint j=i;for(;j<vip.size();j++) if(vip[j].x!=vip[i].x) break;j--;\r\n\t\t\t\tfor(int k=i;k<=j;k++) if(vip[k].id==0) flame.add(ff(vip[k].y),1);\r\n\t\t\t\tfor(int k=i;k<=j;k++) if(vip[k].id==-1) flame.add(ff(vip[k].y),-1);\r\n\t\t\t\tfor(int k=i;k<=j;k++) if(vip[k].id>0) ans[vip[k].id]+=flame.ask(ff(vip[k].y));\r\n\t\t\t\ti=j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\nnamespace easypartofstring{\r\n\tstruct acam{\r\n\t\tint ch[nn][26];int tot;int fail[nn];\r\n\t\tint uid;bit canon;int ep[nn];\r\n\t\tvoid ins(string s){\r\n\t\t\tint now=0;\r\n\t\t\tfor(int i=0;i<s.size();i++){\r\n\t\t\t\tint c=s[i]-'a';\r\n\t\t\t\tif(!ch[now][c]) ch[now][c]=++tot;\r\n\t\t\t\tnow=ch[now][c];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tep[++uid]=now;\r\n\t\t}\r\n\t\tvector<int> v[nn];int dfn[nn],rdfn[nn],DFN;\r\n\t\tvoid dfs(int x){\r\n\t\t\tdfn[x]=++DFN;\r\n\t\t\tfor(int i=0;i<v[x].size();i++) dfs(v[x][i]);\r\n\t\t\trdfn[x]=DFN;\r\n\t\t}\r\n\t\tvoid build(){\r\n\t\t\tqueue<int> q;\r\n\t\t\tfor(int i=0;i<26;i++) if(ch[0][i]) q.push(ch[0][i]);\r\n\t\t\twhile(q.size()){\r\n\t\t\t\tint x=q.front();q.pop();\r\n\t\t\t\tfor(int i=0;i<26;i++) if(ch[x][i])\r\n\t\t\t\t\tq.push(ch[x][i]),fail[ch[x][i]]=ch[fail[x]][i];\r\n\t\t\t\telse ch[x][i]=ch[fail[x]][i];\r\n\t\t\t}\r\n\t\t\tfor(int i=1;i<=tot;i++) v[fail[i]].push_back(i);dfs(0);\r\n\t\t}\r\n\t\t\r\n\t\tint now=0;\r\n\t\tvector<int> ops;\r\n\t\tvoid walk(int x){\r\n\t\t\tops.push_back(now);\r\n\t\t\tnow=ch[now][x];\r\n\t\t\tcanon.add(dfn[now],1);\r\n\t\t}\r\n\t\tvoid back(){\r\n\t\t\tcanon.add(dfn[now],-1);\r\n\t\t\tnow=ops[ops.size()-1];\r\n\t\t\tops.pop_back();\r\n\t\t}\r\n\t\tint devote(int x){\r\n\t\t\treturn canon.ask(dfn[ep[x]],rdfn[ep[x]]);\r\n\t\t}\r\n\t}nor,rev;\r\n\t\r\n\r\n}\r\nusing namespace easypartofstring;\r\n\r\nnamespace hardpartforstring{\r\n\tstruct sam{\r\n\t\tint ch[mn][27];int pa[mn],len[mn];int rig[mn];\r\n\t\tint to[nn][27];\r\n\t\tint tot=1,lst=1;int all[nn],zzz;int fa[nn][lg];\r\n\t\t\r\n\t\tint extend(int c){\r\n\t\t\tall[++zzz]=c;\r\n\t\t\tint p=lst,q=++tot;len[q]=len[p]+1,lst=q;rig[q]=zzz;\r\n\t\t\twhile(p and !ch[p][c]) ch[p][c]=q,p=pa[p];\r\n\t\t\t\r\n\t\t\tif(!p){\r\n\t\t\t\tpa[q]=1;return q;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tint x=ch[p][c];\r\n\t\t\tif(len[x]==len[p]+1){\r\n\t\t\t\tpa[q]=x;return q;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tint y=++tot;pa[y]=pa[x],pa[x]=pa[q]=y;len[y]=len[p]+1;\r\n\t\t\tfor(int i=0;i<27;i++) ch[y][i]=ch[x][i];\r\n\t\t\twhile(p and ch[p][c]==x) ch[p][c]=y,p=pa[p];\r\n\t\t\treturn q;\r\n\t\t}\r\n\t\tvoid news(){\r\n\t\t\textend(26);\r\n\t\t}\r\n\t\tvector<int> v[nn];int dfn[nn],rdfn[nn],DFN;\r\n\t\tvoid dfs(int x){\r\n\t\t\tdfn[x]=++DFN;fa[x][0]=pa[x];for(int i=1;i<lg;i++) fa[x][i]=fa[fa[x][i-1]][i-1];\r\n\t\t\tfor(int i=0;i<v[x].size();i++) dfs(v[x][i]),rig[x]=rig[v[x][i]];\r\n\t\t\t\r\n\t\t\tint cl=len[x]+1;\r\n\t\t\tfor(int i=0;i<v[x].size();i++)if(len[v[x][i]]>len[x]){\r\n\t\t\t\tint y=v[x][i];if(to[x][all[rig[y]-cl+1]]) cout<<\"shite\";\r\n\t\t\t\tto[x][all[rig[y]-cl+1]]=y;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\trdfn[x]=DFN;\r\n\t\t}\r\n\t\tvoid build(){\r\n\t\t\tfor(int i=2;i<=tot;i++) v[pa[i]].push_back(i);\r\n\t\t\tdfs(1);\r\n\t\t}\r\n\t\t\r\n\t\tint cl=0;int now=1;vector<int> ops;vector<int> zero,zcl;\r\n\t\tvoid walk(int x){\r\n\t\t\tif(zero.size()==0) zero.push_back(1);\r\n\t\t\tif(zcl.size()==0) zcl.push_back(0);\r\n\t\t\tops.push_back(now);cl++;\r\n\t\t\tif(now){\r\n\t\t\t\tif(cl<=len[now]) now=now*(x==all[rig[now]-cl+1]);\r\n\t\t\t\telse now=to[now][x];\r\n\t\t\t}\r\n\t\t\tif(!now) zero.push_back(zero[zero.size()-1]),zcl.push_back(zcl[zcl.size()-1]);\r\n\t\t\telse zero.push_back(now),zcl.push_back(cl);\r\n\t\t}\t\r\n\t\tvoid back(){\r\n\t\t\tnow=ops[ops.size()-1];cl--;ops.pop_back();zero.pop_back();zcl.pop_back();\r\n\t\t}\r\n\t\tpii ask(){\r\n\t\t\tif(zero.size()==0) zero.push_back(1);\r\n\t\t\tif(zcl.size()==0) zcl.push_back(0);\r\n\t\t\tint x=zero[zero.size()-1];\r\n\t\t\treturn mp(dfn[x],zcl[zcl.size()-1]);\r\n\t\t}\r\n\t\t\r\n\t\tvoid climb(int &x,int l){\r\n\t\t\tfor(int i=lg-1;i>=0;i--) if(len[fa[x][i]]>=l) x=fa[x][i];\r\n\t\t}\r\n\t}rnor,rrev;\r\n\t\r\n\t\r\n\tint uid;\r\n\tvector<int> sst[nn],rsst[nn];\r\n\tvoid bark(string s){vector<int> _,r_;\r\n\t\tfor(int i=0;i<s.size();i++){\r\n\t\t\t_.push_back(rnor.extend(s[i]-'a'));r_.push_back(rrev.extend(s[s.size()-i-1]-'a'));\r\n\t\t}\r\n\t\t++uid;\r\n\t\tswap(sst[uid],_);swap(rsst[uid],r_);\r\n\t\trnor.news();rrev.news();\r\n\t}\r\n};\r\nusing namespace hardpartforstring;\r\n\r\nshort used[nn];\r\nint xi[nn],yi[nn],zi[nn];\r\nvector<int> v[nn],g[nn];\r\nstring str[nn];\r\n\r\nchar ch[nn];\r\nstring ins(){\r\n\tscanf(\"%s\",ch);int n=strlen(ch);\r\n\tstring s;for(int i=0;i<n;i++) s+=ch[i];\r\n\treturn s;\r\n}\r\n\r\n\r\nint n,m,q;\r\nint all;int size[nn],dep[nn];\r\nint era[nn];\r\nint bst,bstid;\r\nvector<int> query[nn];\r\nvoid cc(int x,int p){\r\n\tint cp=0;size[x]=1+query[x].size();\r\n\tfor(int i=0;i<v[x].size();i++) if(v[x][i]!=p and !era[v[x][i]]) cc(v[x][i],x),size[x]+=size[v[x][i]],cp=max(cp,size[v[x][i]]);\r\n\tcp=max(cp,all-size[x]);\r\n\tif(cp<bst) bst=cp,bstid=x;\r\n}\r\nvoid dc(int x,int p){\r\n\tvector<int> kl;for(int i=0;i<query[x].size();i++) if(!used[query[x][i]]) kl.push_back(query[x][i]);swap(kl,query[x]);\r\n\t\r\n\tsize[x]=1+query[x].size();\r\n\tfor(int i=0;i<v[x].size();i++) if(v[x][i]!=p and !era[v[x][i]]) dc(v[x][i],x),size[x]+=size[v[x][i]];\r\n}\r\nvector<int> inv;int bap[nn],cap[nn];\r\npii fst[nn],sec[nn];\r\nvoid dfs(int x,int p){\r\n\tif(p) bap[x]=bap[p];else bap[x]=x;\r\n\tfor(int i=0;i<v[x].size();i++) if(v[x][i]!=p and !era[v[x][i]])\r\n\t\tdfs(v[x][i],x);\r\n\tfor(int i=0;i<query[x].size();i++){\r\n\t\tint y=query[x][i];inv.push_back(y);\r\n\t\tif(cap[y] and cap[y]!=bap[x]) used[y]=1;\r\n\t\telse cap[y]=bap[x];\r\n\t}\r\n}\r\n\r\n\r\nvoid efs(int x,int p){\r\n\tfor(int i=0;i<v[x].size();i++) if(v[x][i]!=p and !era[v[x][i]]){\r\n\t\tnor.walk(g[x][i]),rev.walk(g[x][i]);\r\n\t\trnor.walk(g[x][i]),rrev.walk(g[x][i]);\r\n\t\tefs(v[x][i],x);\r\n\t\tnor.back(),rev.back();\r\n\t\trnor.back(),rrev.back();\r\n\t}\r\n\t\r\n\tfor(int i=0;i<query[x].size();i++)if(used[query[x][i]]){\r\n\t\tint z=query[x][i];\r\n\t\tif(xi[z]==x){\r\n\t\t\tused[z]++;\r\n\t\t\tans[z]+=rev.devote(zi[z]);\r\n\t\t\tfst[z]=rnor.ask();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tused[z]++;\r\n\t\t\tans[z]+=nor.devote(zi[z]);\r\n\t\t\tsec[z]=rrev.ask();\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\nvoid solve(int x,int _all){\r\n\tall=bst=_all;cc(x,0);x=bstid;//cout<<x<<\"\\n\";\r\n//\t/**/x=2;\r\n\tera[x]=1;inv.clear();\r\n\t\r\n\tfor(int i=0;i<query[x].size();i++) used[query[x][i]]=2;\r\n\tfor(int i=0;i<v[x].size();i++) if(!era[v[x][i]])\r\n\t\tdfs(v[x][i],0);\r\n\tfor(int i=0;i<v[x].size();i++) if(!era[v[x][i]]){\r\n\t\tnor.walk(g[x][i]),rev.walk(g[x][i]);\r\n\t\trnor.walk(g[x][i]),rrev.walk(g[x][i]);\r\n\t\tefs(v[x][i],0);\r\n\t\tnor.back(),rev.back();\r\n\t\trnor.back(),rrev.back();\r\n\t}\r\n\t\r\n//\t/**/return ;\r\n\tdc(x,0);for(int i=0;i<inv.size();i++) cap[inv[i]]=0;\r\n\tfor(int i=0;i<v[x].size();i++) if(!era[v[x][i]]) solve(v[x][i],size[v[x][i]]);\r\n}\r\nvoid addedge(int x,int y,int z){\r\n\tv[x].push_back(y);v[y].push_back(x);\r\n\tg[x].push_back(z);g[y].push_back(z);\r\n}\r\nint main(){\r\n\tscanf(\"%d%d%d\",&n,&m,&q);\r\n\tfor(int i=1;i<n;i++){\r\n\t\tint x,y;char c[2];scanf(\"%d%d%s\",&x,&y,c);\r\n\t\taddedge(x,y,c[0]-'a');\r\n\t}\r\n\tfor(int i=1;i<=m;i++) str[i]=ins(),nor.ins(str[i]),reverse(str[i].begin(),\r\n\t\tstr[i].end()),rev.ins(str[i]),reverse(str[i].begin(),str[i].end()),bark(str[i]);\t\r\nif(81235==m) cout<<\"asd\";\r\n\tnor.build(),rev.build();\r\n\t\t\r\nif(81235==m) cout<<\"asd\";\r\n\trnor.build(),rrev.build();\r\n\tfor(int i=1;i<=q;i++){\r\n\t\tint x,y,z;scanf(\"%d%d%d\",&x,&y,&z);\r\n\t\tif(x==y){\r\n\t\t\tused[i]=3;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tquery[x].push_back(i);query[y].push_back(i);\r\n\t\txi[i]=x,yi[i]=y,zi[i]=z;\r\n\t}\t\r\nif(81235==m) cout<<\"asd\";\r\n\tsolve(1,n+q+q);\r\n\t\t\r\nif(81235==m) cout<<\"asd\";\r\n\t\r\n\tfor(int i=1;i<=m;i++) for(int j=0;j<sst[i].size()-1;j++) {\r\n\t\t\tint k=sst[i].size()-j-2;\r\n\t\t\trnor.climb(sst[i][j],j+1);\r\n\t\t\trrev.climb(rsst[i][k],k+1);\r\n\t\t\t\r\n\t\t\tptilopsis::ins(mp(rnor.dfn[sst[i][j]],j+1),mp(rrev.dfn[rsst[i][k]],k+1),0,i);\r\n\t\t\tptilopsis::ins(mp(1+rnor.rdfn[sst[i][j]],0),mp(rrev.dfn[rsst[i][k]],k+1),-1,i);\r\n\t\t\tptilopsis::ins(mp(rnor.dfn[sst[i][j]],j+1),mp(1+rrev.rdfn[rsst[i][k]],0),-1,i);\r\n\t\t\tptilopsis::ins(mp(1+rnor.rdfn[sst[i][j]],0),mp(1+rrev.rdfn[rsst[i][k]],0),0,i);\r\n\t\t}\r\n\r\n\tfor(int i=1;i<=q;i++) ptilopsis::ins(fst[i],sec[i],i,zi[i]);\t\r\nif(81235==m) cout<<\"asd\";\r\n\tptilopsis::solve();\r\n\t\r\n\tfor(int i=1;i<=q;i++) if(used[i]!=3) exit(0);else printf(\"%d\\n\",ans[i]);\r\n\treturn 0;\r\n}\r\n/*\r\n6 1 1\r\n1 6 b\r\n2 3 a\r\n1 2 b\r\n5 3 b\r\n4 5 b\r\nab\r\n2 5 1\r\n\r\n*/"
}