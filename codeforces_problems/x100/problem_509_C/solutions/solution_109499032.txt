{
    "id": 109499032,
    "contestId": 509,
    "creationTimeSeconds": 1615304298,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 509,
        "index": "C",
        "name": "Sums of Digits",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 509,
        "members": [
            {
                "handle": "tiagodias"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1422705600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\nusing namespace std; \n     \n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n      \ntypedef long long ll;\ntypedef vector< int > vi;\ntypedef vector< vi > vvi;\ntypedef pair< int,int > pi;\ntypedef pair< ll,ll > pll;\ntypedef vector <pi> vii;\ntypedef vector < ll > vll;\ntypedef vector < pll > vpll;\ntypedef vector< vll > vvll;\ntypedef pair < double,double > pd;\n#define size(a) int((a).size())\n#define pb push_back\n#define vt vector\n#define ar array\n#define all(c) (c).begin(),(c).end()\n#define tr(c,i) for(auto i = (c).begin(); i != (c).end(); i++)\n#define present(c,x) (c.find(x) != c.end())\n#define cpresent(c,x) (find(all(c),x) != c.end())\n#define REP(i,a,b) for(int i =a;i<b;i++)\n#define F first\n#define S second\n#define cp(a,b) ( (conj(a)*b).imag() )\n#define dprod(a,b)  ( (conj(a)*b).real() )\n#define M 1000000007\n#define EACH(x, a) for (auto& x: a)\n\nll absolute(ll a , ll b){\n    return max(a,b)-min(a,b);\n}\n\ntemplate<class T> bool umin(T& a, const T& b) {\n    return b<a?a=b, 1:0;\n}\ntemplate<class T> bool umax(T& a, const T& b) { \n    return a<b?a=b, 1:0;\n} \n \nll FIRSTTRUE(function<bool(ll)> f, ll lb, ll rb) {\n    while(lb<rb) {\n        ll mb=(lb+rb)/2;\n        f(mb)?rb=mb:lb=mb+1; \n    } \n    return lb;\n}\nll LASTTRUE(function<bool(ll)> f, ll lb, ll rb) {\n    while(lb<rb) {\n        ll mb=(lb+rb+1)/2;\n        f(mb)?lb=mb:rb=mb-1; \n    } \n    return lb;\n}\n \ntemplate<class A> void read(vt<A>& v);\ntemplate<class A, size_t S> void read(ar<A, S>& a);\ntemplate<class T> void read(T& x) {\n    cin >> x;\n}\nvoid read(double& d) {\n    string t;\n    read(t);\n    d=stod(t);\n}\nvoid read(long double& d) {\n    string t;\n    read(t);\n    d=stold(t);\n}\ntemplate<class H, class... T> void read(H& h, T&... t) {\n    read(h);\n    read(t...);\n}\ntemplate<class A> void read(vt<A>& x) {\n    EACH(a, x)\n        read(a);\n}\ntemplate<class A, size_t S> void read(array<A, S>& x) {\n    EACH(a, x)\n        read(a);\n}\n \nstring to_string(char c) {\n    return string(1, c);\n}\nstring to_string(bool b) {\n    return b?\"true\":\"false\";\n}\nstring to_string(const char* s) {\n    return string(s);\n}\nstring to_string(string s) {\n    return s;\n}\nstring to_string(vt<bool> v) {\n    string res;\n    REP(i,0,size(res))\n        res+=char('0'+v[i]);\n    return res;\n}\n \ntemplate<size_t S> string to_string(bitset<S> b) {\n    string res;\n    REP(i,0,size(res))\n        res+=char('0'+b[i]);\n    return res;\n}\ntemplate<class T> string to_string(T v) {\n    bool f=1;\n    string res;\n    EACH(x, v) {\n        if(!f)\n            res+=' ';\n        f=0;\n        res+=to_string(x);\n    }\n    return res;\n}\n \ntemplate<class A> void write(A x) {\n    cout << to_string(x);\n}\ntemplate<class H, class... T> void write(const H& h, const T&... t) { \n    write(h);\n    write(t...);\n}\nvoid print() {\n    write(\"\\n\");\n}\ntemplate<class H, class... T> void print(const H& h, const T&... t) { \n    write(h);\n    if(sizeof...(t))\n        write(' ');\n    print(t...);\n}\n \nvoid DBG() {\n    cerr << \"]\" << endl;\n}\ntemplate<class H, class... T> void DBG(H h, T... t) {\n    cerr << to_string(h);\n    if(sizeof...(t))\n        cerr << \", \";\n    DBG(t...);\n}\n#ifndef ONLINE_JUDGE\n#define dbg(...) cerr << \"LINE(\" << __LINE__ << \") -> [\" << #__VA_ARGS__ << \"]: [\", DBG(__VA_ARGS__)\n#else\n#define dbg(...) 0\n#endif\n \ntemplate<class T> void offset(ll o, T& x) {\n    x+=o;\n}\ntemplate<class T> void offset(ll o, vt<T>& x) {\n    EACH(a, x)\n        offset(o, a);\n}\ntemplate<class T, size_t S> void offset(ll o, ar<T, S>& x) {\n    EACH(a, x)\n        offset(o, a);\n}\n \nmt19937 mt_rng(chrono::steady_clock::now().time_since_epoch().count());\nll randint(ll a, ll b) {\n    return uniform_int_distribution<ll>(a, b)(mt_rng);\n}\n \ntemplate<class T, class U> void vti(vt<T> &v, U x, size_t n) {\n    v=vt<T>(n, x);\n}\ntemplate<class T, class U> void vti(vt<T> &v, U x, size_t n, size_t m...) {\n    v=vt<T>(n);\n    EACH(a, v)\n        vti(a, x, m);\n}\n         \nconst int d4i[4]={-1, 0, 1, 0}, d4j[4]={0, 1, 0, -1};\nconst int d8i[8]={-1, -1, 0, 1, 1, 1, 0, -1}, d8j[8]={0, 1, 1, 1, 0, -1, -1, -1};\nconst int MAX = 10e5+5;\nconst ll INF = 10e12 + 4;\nvll primes;\nvoid SieveOfEratosthenes(ll n){\n    vector < bool > prime(n+1000,true);\n    for (ll p=2; p*p<=n; p++)\n    {\n        if (prime[p] == true)\n        {\n            for (ll i=p*p; i<=n; i += p)\n                prime[i] = false;\n        }\n    }\n\n    for (ll p=2; p<=n; p++)\n       if (prime[p]){\n           primes.pb(p);\n       }\n    return;\n}\n\nbool is_prime(ll n){\n    if(n == 1)\n        return false;\n    REP(i,2,sqrt(n)+1)\n        if(n % i == 0)\n            return false;\n    return true;\n}\n\n#define PI 3.141592653589793238462643383279\nconst ll MOD = 1e9 + 7;\n\nclass SegTree{\n    vi tree;\n    vi ar;\n    int n = 0;\n    void build(int p,int l, int r ){\n        if(r - l < 2){\n            tree[p] = ar[l];\n            return;\n        }\n        int mid = (l+r)/2;\n        build(p*2 , l , mid);\n        build((2*p) + 1 , mid , r);\n        tree[p] = tree[p*2] + tree[p*2LL + 1];\n        return;\n    }\n    int range_sum(int x , int y , int id , int l, int r){\n        if(x >= r || y <= l)\n            return 0;\n        if(x <= l && y >= r)\n            return tree[id];\n        int mid = (l+r)/2;\n        return range_sum(x,y , (id*2) , l , mid  ) + range_sum(x,y, (id*2) + 1,mid , r);\n    }\n    void update(int p , int val , int id  , int l , int r){\n        tree[id] += val - ar[p];\n        if(r-l < 2){\n            ar[p] = val;\n            return;\n        }\n        int mid = (l+r)/2;\n        if(p < mid)\n            update(p , val , id * 2 , l , mid);\n        else\n            update(p, val , id*2 + 1 , mid , r);\n        return;\n    }\n    public:\n    SegTree(vi in){\n        n = size(in);\n        ar= in;\n        tree.assign(4*n + 5,0);\n        build(1,0,n);\n    }\n    int query(int a,int b){\n        return range_sum(a-1,b,1,0,n);\n    }\n    void modify(int pos , int val){\n        update(pos,val,1 ,0,n);\n        return;\n    }\n    void print(){\n        int power = 1;\n        int rev = pow(2,5);\n        int copy = power;\n        REP(i,1,2*n){\n            if(copy == 0){\n                power *= 2;\n                rev /= 2;\n                copy = power;\n                cout << endl;\n            }\n            if(copy == power)\n                REP(l,0,rev)\n                    cout << \" \";\n            else\n                REP(l,0,rev)\n                    cout << \"  \";\n            cout << tree[i]; \n            copy--;\n        }\n        cout << endl << endl;\n    }\n};\n\nstruct Matrix{\n    int n;\n    vector < vll > a;\n    Matrix operator * (Matrix other){\n        Matrix product = {3};\n        REP(i,0,n)\n            REP(j,0,n)\n                REP(k,0,n){\n                    product.a[i][k] += a[i][j]*other.a[j][k];\n                    product.a[i][k] %= MOD;\n                }\n        return product;\n    }\n};\n\nvoid NO(){cout << \"NO\\n\"; return;}\nvoid YES(){cout << \"YES\\n\"; return;}\n \n\nbool compare(string a  , string b){\n    if(size(b) > size(a))\n        return true;\n    else if(size(b) < size(a))\n        return false;\n    else\n        if(a < b)\n            return true;\n        else\n            return false;\n    \n    return true;\n}\n\nint Max = 1000;\nvoid solve(){\n    int n;\n    cin >> n;\n    vi b(n);\n    read(b);\n    vector < int > a(Max+1,0);\n    for(int index = 0; index < n ; index++){\n        int left = 0;\n        for(auto i : a)\n            left += i;\n        for(int val = Max ; val >= 0 ; val--){\n            left -= a[val];\n            if(a[val] == 9)\n                continue;\n            ll k = Max-val;\n            dbg(index , k , left);\n            if(b[index] <= (k+1LL)*9LL +left && b[index] >= left + a[val] + 1LL){\n                ll need = b[index] - left - a[val];\n                dbg(need);\n                if(need > 9LL*k){\n                    a[val] += (need-9*k);\n                    need = 9LL*k;\n                }\n                else{\n                    need--;\n                    a[val]++;\n                }\n                for(int ch = Max ; ch >= val + 1 ;ch--){\n                    if(need > 9)\n                        a[ch] = 9;\n                    else\n                        a[ch] = need;\n                    need -= min(need, 9LL);\n                }\n                break;\n            }\n        }\n        bool start = false;\n        for(auto i : a){\n            if(i == 0 && !start)\n                continue;\n            start = true;\n            cout << i;\n        }\n        cout << endl;\n    }\n\n    return;\n}\n\n   \nint main(){\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    #ifndef ONLINE_JUDGE\n       freopen (\"input.txt\",\"r\",stdin);\n       freopen (\"output.txt\",\"w\",stdout);\n    #endif\n    // int t;\n    // cin >> t;\n    // REP(i,0,t)\n        solve();\n    return 0;\n}"
}