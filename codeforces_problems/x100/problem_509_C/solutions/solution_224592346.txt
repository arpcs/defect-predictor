{
    "id": 224592346,
    "contestId": 509,
    "creationTimeSeconds": 1695379626,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 509,
        "index": "C",
        "name": "Sums of Digits",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 509,
        "members": [
            {
                "handle": "wj123_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1422705600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 1536000,
    "source": "// LUOGU_RID: 125569030\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define all(x) (x).begin(), (x).end()\r\n#define x first\r\n#define y second\r\n#define endl \"\\n\"\r\n#define int long long\r\n#define sz(x) ((int)(x).size())\r\ntypedef long long ll;\r\ntypedef pair<int, int> pii;\r\ntypedef double db;\r\ntypedef long double ld;\r\nconst int N = 310, M = 1e4 + 20, B = 500, mod = 998244853, inf = 1e18;\r\nconst ld eps = 1e-12;\r\nint lowbit(int x) { return x & -x; }\r\nll gcd(ll a, ll b) { return b ? gcd(b, a % b) : a; }\r\nll qmi(ll a, ll b, ll mod)\r\n{\r\n    ll res = 1;\r\n    a %= mod;\r\n    assert(b >= 0);\r\n    for (; b; b >>= 1)\r\n    {\r\n        if (b & 1)\r\n            res = res * a % mod;\r\n        a = a * a % mod;\r\n    }\r\n    return res;\r\n}\r\n// head\r\nint dp[N][N][2];\r\nint b[N];\r\nint a[N], v[N], f = 0;\r\nvoid dfs(int u, int s, int o)\r\n{\r\n    if(f) return;\r\n    if(!u)\r\n    {\r\n        if(o && !s) \r\n        {\r\n            f = 1;\r\n            int t = N - 1;\r\n            for(int i = 1; i < N; ++i) a[i] = v[i];\r\n            while(v[t] == 0) t--;\r\n            while(t >= 1) cout<<v[t], t--;\r\n            cout<<endl;\r\n        }\r\n        return;\r\n    }\r\n    if(~dp[u][s][o]) return;\r\n    dp[u][s][o] = 0;\r\n    for(int i = 0; i <= 9; ++i)\r\n    {\r\n        v[u] = i;\r\n        if(s >= i)\r\n        {\r\n            if(!o && (i < a[u])) return;\r\n            dfs(u - 1, s - i, o|(i > a[u]));\r\n        }\r\n    }\r\n}\r\nvoid calc(int x)\r\n{\r\n    f = 0;\r\n    memset(dp, -1, sizeof dp);\r\n    dfs(N - 1, x, 0);\r\n}\r\nvoid solve()\r\n{\r\n    int n;\r\n    cin >>n;\r\n    while(n--)\r\n    {\r\n        int x;\r\n        cin >>x;\r\n        calc(x);\r\n    }\r\n}\r\n\r\nsigned main()\r\n{\r\n    std::ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    cout << fixed << setprecision(12);\r\n    int t = 1;\r\n    // cin >> t;\r\n    while (t--)\r\n    {\r\n        solve();\r\n    }\r\n}"
}