{
    "id": 194888413,
    "contestId": 509,
    "creationTimeSeconds": 1677313116,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 509,
        "index": "C",
        "name": "Sums of Digits",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 509,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1422705600
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 701,
    "memoryConsumedBytes": 4198400,
    "source": "#pragma GCC optimize (\"O3\")\n#include <iostream>\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define loop(start,end) for(int i=start;i<end;i++)\n#define loopD(start,end) for(int i=start;i>=end;i--)\n#define mems(array,set) memset(array,set,sizeof(array));\n#define FastIO ios::sync_with_stdio(0), ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\nconst ll inf = 1e18;\nconst int N = 400+5;\nconst int mod = 1e9+7;\nconst double pi = 3.14159265;\nll tt,n,k;\nll b[N],mem[N][N][3];\nstring last,tmp;\n\nll dp(int idx,int sumOfDigit,bool isGreater)\n{\n    //cout<<\"dp(\"<<idx<<\",\"<<sumOfDigit<<\",\"<<isGreater<<\")\\n\";\n   if(idx==last.size())\n   {\n       return (sumOfDigit==0 && isGreater);\n   }\n   ll &ret=mem[idx][sumOfDigit][isGreater];\n   if(~ret)return ret;\n\n   ret=0;\n   int i=0;\n   if(isGreater==0)i=last[idx]-'0';\n   for(;i<=9;i++)\n   {\n      ret=max(ret,dp(idx+1,sumOfDigit-i,(isGreater || (i>last[idx]-'0'))));\n   }\n   return ret;\n}\n\nvoid print(int idx,int sumOfDigit,bool isGreater)\n{\n   if(idx==last.size())\n   {\n       return ;\n   }\n   int i=0;\n   if(isGreater==0)i=last[idx]-'0';\n   for(;i<=9;i++)\n   {\n      if (dp(idx + 1, sumOfDigit - i, isGreater || (i > last[idx] - '0')))\n      {\n\t\t\ttmp += to_string(i);\n\t\t\tprint(idx+1 , sumOfDigit-i , isGreater || (i > last[idx]- '0'));\n\t\t\treturn;\n      }\n   }\n}\n\nstring minNumber(int num){\n   string ans=\"\";\n   while(num>=9){\n    num-=9;\n    ans+='9';\n   }\n   if(num)ans+=char(num+'0');\n   reverse(ans.begin(),ans.end());\n   return ans;\n}\n\n\n\nvoid solve()\n{\n    cin>>n;\n    loop(0,n)cin>>b[i];\n    last=minNumber(b[0]);\n    cout<<last<<\"\\n\";\n\n    loop(1,n){\n        mems(mem,-1);\n       tmp=\"\";\n       if(dp(0,b[i],0)){\n            print(0,b[i],0);\n            last=tmp;\n       }\n       else{\n        tmp=minNumber(b[i]-1);\n        while(tmp.size()<last.size())tmp='0'+tmp;\n        tmp='1'+tmp;\n        last=tmp;\n       }\n\n       cout<<last<<\"\\n\";\n    }\n}\n\nint main()\n{\n    FastIO\n    //cin>>tt;\n    tt=1;\n    while(tt--)\n    {\n        solve();\n    }\n}\n\n  \t\t\t \t  \t\t   \t \t\t\t \t\t   \t"
}