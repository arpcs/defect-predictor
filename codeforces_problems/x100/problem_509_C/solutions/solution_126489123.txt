{
    "id": 126489123,
    "contestId": 509,
    "creationTimeSeconds": 1629414606,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 509,
        "index": "C",
        "name": "Sums of Digits",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 509,
        "members": [
            {
                "handle": "binary1011"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1422705600
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 4300800,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\n//Macro fun\r\n//#pragma GCC optimize (\"Ofast\")\r\n//#pragma GCC target (\"avx2\")\r\nusing ld = long double;\r\nusing ll = long long;\r\n#define pb push_back\r\n#define all(x) x.begin(), x.end()\r\n#define sz(x) (int)x.size()\r\n#define vi vector<int>\r\n#define vl vector<ll>\r\n#define pii pair<int,int>\r\n#define vii vector<pii>\r\n#define pll pair<ll,ll>\r\n#define vs vector<string>\r\n#define vll vector<pll>\r\n#define F first\r\n#define S second\r\nconst int mod = (int)1e9+7;\r\n#define FOR(i,a,b) for (int i = (a); i < (b); i++)\r\n#define F0R(i,a) FOR(i,0,a)\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\ntypedef tree<\r\nint,\r\nnull_type,\r\nless<int>,\r\nrb_tree_tag,\r\ntree_order_statistics_node_update>\r\nordered_set;\r\n\r\nstruct custom_hash {\r\n    static uint64_t splitmix64(uint64_t x) {\r\n        // http://xorshift.di.unimi.it/splitmix64.c\r\n        x += 0x9e3779b97f4a7c15;\r\n        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n        return x ^ (x >> 31);\r\n    }\r\n\r\n    size_t operator()(uint64_t x) const {\r\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n        return splitmix64(x + FIXED_RANDOM);\r\n    }\r\n};\r\n\r\nvoid solve() {\r\n    int n; cin >> n;\r\n    string last = \"0\";\r\n    F0R(i, n) {\r\n        string ans;\r\n        int sum;\r\n        cin >> sum;\r\n        int sum1 = sum;\r\n        int digits = max((sum+8)/9,sz(last));\r\n        bool good = false;\r\n        bool dig = digits > sz(last);\r\n        if (digits == sz(last)) {\r\n            int total = 0;\r\n            F0R(j, sz(last)) {\r\n                total += last[j]-'0';\r\n            }\r\n            if (sum > total) {\r\n                good = true;\r\n                ans = last;\r\n                sum -= total;\r\n                reverse(all(ans));\r\n                F0R(j, digits) {\r\n                    if (sum > 9-ans[j]+'0') {\r\n                        sum -= 9-ans[j]+'0';\r\n                        ans[j] = '9';\r\n                    }\r\n                    else {\r\n                        ans[j] +=sum;\r\n                        reverse(all(ans));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                ans = last;\r\n                reverse(all(ans));\r\n                F0R(j, digits) {\r\n                    if (sum > total) {\r\n                        int j1 = j;\r\n                        FOR(k, j1, digits) {\r\n                            if (ans[k] != '9') {\r\n                                ans[k]++;\r\n                                sum -= total+1;\r\n                                F0R(l, k) {\r\n                                    if (sum > 9) {\r\n                                        ans[l] = '9';\r\n                                        sum -= 9;\r\n                                    }\r\n                                    else {\r\n                                        ans[l] = sum+'0';\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                good = true;\r\n                                reverse(all(ans));\r\n                                break;\r\n                            }\r\n                            else {\r\n                                ans[k] = '0';\r\n                                total -= 9;\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    int e = ans[j]-'0';\r\n                    total -= e;\r\n                    ans[j] = '0';\r\n                }\r\n            }\r\n        }\r\n        if (!good) {\r\n            if (!dig) digits++;\r\n            ans = \"\";\r\n            sum = sum1;\r\n            F0R(j, digits) {\r\n                if (j == digits-1) {\r\n                    ans += to_string(sum);\r\n                    reverse(all(ans));\r\n                    continue;\r\n                }\r\n                if (sum > 9) {\r\n                    ans += \"9\";\r\n                    sum -= 9;\r\n                }\r\n                else if (sum > 1) {\r\n                    ans += to_string(sum-1);\r\n                    sum = 1;\r\n                }\r\n                else {\r\n                    ans += \"0\";\r\n                }\r\n            }\r\n        }\r\n        cout << ans << endl;\r\n        last = ans;\r\n    }\r\n}\r\nint main()\r\n{\r\n    #ifndef ONLINE_JUDGE\r\nfreopen(\"input.in\", \"r\", stdin);\r\nfreopen(\"output.out\", \"w\", stdout);\r\n#endif\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    int t = 1;\r\n    //cin>>t;\r\n    while(t--){\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}