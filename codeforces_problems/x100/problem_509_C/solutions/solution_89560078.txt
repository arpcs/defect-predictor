{
    "id": 89560078,
    "contestId": 509,
    "creationTimeSeconds": 1597133339,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 509,
        "index": "C",
        "name": "Sums of Digits",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 509,
        "members": [
            {
                "handle": "Aaplloo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1422705600
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 5939200,
    "source": "#include <cstdio>\n#include <vector>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#define LL long long\n#define MAXN 505\n#define Mod 1000000007\n#define Int register long long\nusing namespace std;\ninline LL Min(LL x,LL y)\n{\n\treturn x < y ? x : y; \n}\ninline LL Max(LL x,LL y)\n{\n\treturn x > y ? x : y;\n}\ninline void read(LL &x)\n{\n\tx = 0;\n\tLL f = 1;\n\tchar s = getchar();\n\twhile (s < '0' || s > '9')\n\t{\n\t\tif (s == '-')\n\t\t\tf = -1;\n\t\ts = getchar();\n\t}\n\twhile (s >= '0' && s <= '9')\n\t{\n\t\tx = (x << 3) + (x << 1) + (s ^ 48);\n\t\ts = getchar();\n\t}\n\tx *= f;\n}\nLL n, a[MAXN][MAXN], b[MAXN], l[MAXN];\nint main()\n{\n    LL n;\n    read( n );\n    for (Int i = 1; i <= n; ++ i)\n\t\tread( b[i] );\n    l[0] = 1;\n    for (Int i = 1; i <= n; ++ i)\n    {\n        if (b[i] > b[i - 1])\n        {\n           \tLL Now = 1, Rem = b[i] - b[i - 1];\n            for ( ; Rem; Now ++)\n            {\n                LL t = Min(Rem, 9 - a[i - 1][Now]);\n                a[i][Now] = a[i - 1][Now] + t; Rem -= t;\n            }\n            for (Int j = Now; j <= l[i - 1]; ++ j)\n\t\t\t\ta[i][j] = a[i - 1][j];\n            l[i] = Max(Now - 1, l[i - 1]);\n        }\n        else \n        {\n            LL Now = 1, Rem = b[i] - b[i - 1] - 1, Sum = 1;\n            for (; Rem < 0 || a[i - 1][Now] == 9 || Sum < b[i] - b[i - 1]; Now ++)\n            {\n                Rem += a[i - 1][Now];\n                Sum += (9 - a[i - 1][Now]);\n            }\n            a[i][Now] = a[i - 1][Now] + 1;\n            for (Int j = Now + 1; j <= l[i - 1]; ++ j)\n\t\t\t\ta[i][j] = a[i - 1][j];\n            for (Int j = 1; Rem > 0; ++ j)\n                a[i][j] = Min(Rem, 9), Rem -= a[i][j];\n            l[i] = Max(Now, l[i - 1]);\n        }\n        for (Int j = l[i]; j ; -- j)\n            printf(\"%lld\", a[i][j]);\n        puts(\"\");\n    }\n    return 0;\n}"
}