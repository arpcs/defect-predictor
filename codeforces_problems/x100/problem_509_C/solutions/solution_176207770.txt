{
    "id": 176207770,
    "contestId": 509,
    "creationTimeSeconds": 1665777654,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 509,
        "index": "C",
        "name": "Sums of Digits",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 509,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1422705600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 1466,
    "memoryConsumedBytes": 1843200,
    "source": "#define _CRT_SECURE_NO_WARNINGS\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\nvoid Fast(){\n    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n}\nvoid File(){\n#ifndef ONLINE_JUDGE\n    freopen(\"Input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif\n}\ntemplate <class T>\nusing ordered_set = tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update>;\ntypedef long long ll;\n#define watch(x) cout << (#x) << \" = \" << x << '\\n'\n#define endl '\\n'\n#define all(a) a.begin(), a.end()\n#define fix(n) cout << fixed << setprecision(n)\n#define skip continue\nconst long double pi = acos(-1);\nint dx[] = {0, 0, 1, -1, 1, -1, 1, -1}, dx4[] = {0, 1, 0, -1};\nint dy[] = {1, -1, 0, 0, 1, -1, -1, 1}, dy4[] = {1, 0, -1, 0};\nint dx1[] = {1, 1, -1, -1};\nint dy1[] = {1, -1, 1, -1};\n\nint n , dp[444][333][3];\nstring s , res;\nint sol(int idx , int rem , int ok){\n    if(idx == 444)return !rem && ok;\n    int &ret = dp[idx][rem][ok];\n    if(~ret)return ret;\n    ret = 0;\n    for(int i = (ok ? 0 : s[idx] - '0'); i <= 9 && rem >= i;i++){\n        ret |= sol(idx + 1 , rem - i , ok || (i > (s[idx] - '0')));\n    }\n    return ret;\n}\nvoid build(int idx , int rem , int ok){\n    if(idx == 444)return;\n    for(int i = (ok ? 0 : s[idx] - '0'); i <= 9 && rem >= i;i++){\n        if(sol(idx + 1 , rem - i , ok || (i > (s[idx] - '0')))){\n            res += (i + '0');\n            return build(idx + 1 , rem - i, ok || (i > (s[idx] - '0')));\n        }\n    }\n}\nvoid solve(){\n    cin >> n;\n    s = string(444 , '0');\n    for(int i = 0 ; i < n;i++){\n        int x;cin >> x;\n        res.clear();\n        memset(dp , -1 , sizeof(dp));\n        build(0 , x , 0);\n        s = res;\n        reverse(all(res));\n        while(res.size() > 1 && res.back() == '0')res.pop_back();\n        reverse(all(res));\n        cout << res << endl;\n    }\n\n}\n\nint main(){\n    File();\n    Fast();\n    int t = 1;\n    for(int i = 1; i <= t;i++){\n        solve();\n    }\n}\n\t\t  \t\t\t\t   \t\t \t\t\t \t\t    \t  \t \t\t"
}