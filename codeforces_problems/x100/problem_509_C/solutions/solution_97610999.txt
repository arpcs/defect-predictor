{
    "id": 97610999,
    "contestId": 509,
    "creationTimeSeconds": 1604472801,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 509,
        "index": "C",
        "name": "Sums of Digits",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 509,
        "members": [
            {
                "handle": "tepamid"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1422705600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 483,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <string>\n#include <map>\n#include <unordered_map>\n#include <random>\n#include <set>\n#include <queue>\n\nusing namespace std;\n\n// mt19937 rng(5);\n// mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n\n#define fo(i, n) for (int i = 0; i < n; ++i)\n#define foback(i, n) for (int i = n - 1; i >= 0; --i)\n#define fo1(i, n) for (ll i = 1; i <= n; ++i)\n\ntypedef long long ll;\n\nvoid fastio()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n}\n\nvoid one();\n\nint main()\n{\n    fastio();\n\n    int t = 1;\n    // cin >> t;\n    fo(i, t)\n    {\n        one();\n    }\n\n    return 0;\n}\n\nint n;\nvector<int> a;\n\nint cntdigits(int x)\n{\n    int sum = 0;\n    while (x > 0)\n    {\n        sum += x % 10;\n        x /= 10;\n    }\n\n    return sum;\n}\n\nbool solve(int i, int prev, vector<int> &path)\n{\n    if (i == n)\n    {\n        return true;\n    }\n\n    for (int x = prev + 1; x < 1e6; x++)\n    {\n        if (cntdigits(x) == a[i])\n        {\n            auto res = solve(i + 1, x, path);\n\n            if (res)\n            {\n                path.push_back(x);\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nvoid one()\n{\n\n    cin >> n;\n\n    a.resize(n);\n    fo(i, n) cin >> a[i];\n\n    vector<int> path;\n    solve(0, 0, path);\n\n    foback(i, n)\n            cout\n        << path[i] << \"\\n\";\n}\n"
}