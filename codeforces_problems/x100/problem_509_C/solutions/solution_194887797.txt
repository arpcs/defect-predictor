{
    "id": 194887797,
    "contestId": 509,
    "creationTimeSeconds": 1677312798,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 509,
        "index": "C",
        "name": "Sums of Digits",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 509,
        "members": [
            {
                "handle": "Solver_-_NaDooDa"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1422705600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#pragma GCC optimize (\"O3\")\r\n#include <iostream>\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define loop(start,end) for(int i=start;i<end;i++)\r\n#define loopD(start,end) for(int i=start;i>=end;i--)\r\n#define mems(array,set) memset(array,set,sizeof(array));\r\n#define FastIO ios::sync_with_stdio(0), ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\nconst ll inf = 1e18;\r\nconst int N = 400+5;\r\nconst int mod = 1e9+7;\r\nconst double pi = 3.14159265;\r\nll tt,n,k;\r\nll b[N],mem[N][N][3];\r\nstring last,tmp;\r\n\r\nll dp(int idx,int sumOfDigit,bool isGreater)\r\n{\r\n    //cout<<\"dp(\"<<idx<<\",\"<<sumOfDigit<<\",\"<<isGreater<<\")\\n\";\r\n   if(sumOfDigit<0)return 0;\r\n   if(idx==last.size())\r\n   {\r\n       return (sumOfDigit==0 && isGreater);\r\n   }\r\n   ll &ret=mem[idx][sumOfDigit][isGreater];\r\n   if(~ret)return ret;\r\n\r\n   ret=0;\r\n   int i=0;\r\n   if(isGreater==0)i=last[idx]-'0';\r\n   for(;i<=9;i++)\r\n   {\r\n      ret=max(ret,dp(idx+1,sumOfDigit-i,(isGreater || (i>last[idx]-'0')));\r\n   }\r\n   return ret;\r\n}\r\n\r\nvoid print(int idx,int sumOfDigit,bool isGreater)\r\n{\r\n    if(sumOfDigit<0)return ;\r\n   if(idx==last.size())\r\n   {\r\n       return ;\r\n   }\r\n   int i=0;\r\n   if(isGreater==0)i=last[idx]-'0';\r\n   for(;i<=9;i++)\r\n   {\r\n      if (dp(idx + 1, sumOfDigit - i, isGreater || (i > last[idx] - '0')))\r\n      {\r\n\t\t\ttmp += to_string(i);\r\n\t\t\tprint(idx+1 , sumOfDigit-i , isGreater || (i > last[idx]- '0'));\r\n\t\t\treturn;\r\n      }\r\n   }\r\n}\r\n\r\nstring minNumber(int num){\r\n   string ans=\"\";\r\n   while(num>=9){\r\n    num-=9;\r\n    ans+='9';\r\n   }\r\n   if(num)ans+=char(num+'0');\r\n   reverse(ans.begin(),ans.end());\r\n   return ans;\r\n}\r\n\r\n\r\n\r\nvoid solve()\r\n{\r\n    cin>>n;\r\n    loop(0,n)cin>>b[i];\r\n    last=minNumber(b[0]);\r\n    cout<<last<<\"\\n\";\r\n\r\n    loop(1,n){\r\n        mems(mem,-1);\r\n       tmp=\"\";\r\n       if(dp(0,b[i],0)){\r\n            print(0,b[i],0);\r\n            last=tmp;\r\n       }\r\n       else{\r\n        tmp=minNumber(b[i]-1);\r\n        while(tmp.size()<=last.size())tmp='0'+tmp;\r\n        tmp='1'+tmp;\r\n        last=tmp;\r\n       }\r\n\r\n       cout<<last<<\"\\n\";\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    FastIO\r\n    //cin>>tt;\r\n    tt=1;\r\n    while(tt--)\r\n    {\r\n        solve();\r\n    }\r\n}\r\n"
}