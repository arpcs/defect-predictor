{
    "id": 211422347,
    "contestId": 509,
    "creationTimeSeconds": 1688037919,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 509,
        "index": "C",
        "name": "Sums of Digits",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 509,
        "members": [
            {
                "handle": "luogu_bot2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1422705600
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 16076800,
    "source": "// LUOGU_RID: 113545275\n#include<bits/stdc++.h>\r\n#define LL long long\r\n#define U unsigned\r\n#define INF 0x7fffffffffffffff\r\n#define MINF -0x8000000000000000\r\n#define rep(i,a,b) for(LL i=(a);i<=(b);i++)\r\n#define per(i,a,b) for(LL i=(a);i>=(b);i--)\r\n#define lc(x) (x<<1)\r\n#define rc(x) (lc(x)|1)\r\n#define lowbit(x) (x&-x)\r\n#define mp(x,y) make_pair(x,y)\r\n#define pb(x) push_back(x)\r\n#define pii pair<LL,LL>\r\n#define fi first\r\n#define se second\r\n#define vii vector<vector<LL> >\r\n#define vi vector<LL>\r\nusing namespace std;\r\nbool isp(LL x){\r\n\tif(x<2)return 0;\r\n\tfor(LL i=2;i<=sqrt(x);i++){\r\n\t\tif(x%i==0) return 0;\r\n\t}\r\n\treturn 1;\r\n}\r\ninline LL read()\r\n{\r\n\tLL x=0,f=1;char ch=getchar();\r\n\twhile (!isdigit(ch)){if (ch=='-') f=-1;ch=getchar();}\r\n\twhile (isdigit(ch)){x=x*10+ch-48;ch=getchar();}\r\n\treturn x*f;\r\n}\r\nLL gcd(LL x,LL y){\r\n\treturn !y?x:gcd(y,x%y);\r\n}\r\nLL FPW(LL x,LL y,LL mod){\r\n\tLL res=1;\r\n\tfor(;y;y>>=1){\r\n\t\tif(y%2)res=res*x%mod;\r\n\t\tx=x*x%mod;\r\n\t}\r\n\treturn res;\r\n}\r\n/*LL N,M,S,T,l,r=0x7f7f7f7f,m,h[600000],n[600000],w[600000],dt[600000],en,dis[600000];\r\nstruct node{\r\n\tLL id,dis;\r\n\tbool operator < (const node &B) const{return dis>B.dis;}\r\n};\r\nvoid dij(){\r\n\tpriority_queue<node>q;\r\n\tbool vis[600000]={};\r\n\tmemset(dis,0x7f7f7f7f,sizeof dis);\r\n\tdis[S]=0;\r\n\tq.push((node){S,0});\r\n\twhile(q.size()){\r\n\t\tLL x=q.top().id;\r\n\t\tq.pop();\r\n\t\tif(vis[x])continue;\r\n\t\tvis[x]=1;\r\n\t\tfor(LL j=h[x];j;j=n[j]){\r\n\t\t\tLL y=dt[j],ww=w[j];\r\n\t\t\tif(dis[y]<=dis[x]+ww)continue;\r\n\t\t\tdis[y]=dis[x]+ww;\r\n\t\t\tq.push((node){y,dis[y]});\r\n\t\t}\r\n\t}\r\n    return ;\r\n}\r\nvoid add(LL x,LL y,LL z=0){\r\n\tdt[++en]=y,n[en]=h[x],w[en]=z,h[x]=en;\r\n\treturn ;\r\n}*/\r\n/*\r\nLL phi[19198100],prime[19198100],pc;\r\nvoid ETB_PRM_init(LL MAXN){\r\n\tphi[1]=1;\r\n\tfor(LL i=2;i<MAXN;i++){\r\n\t\tif(phi[i]==0){\r\n\t\t\tprime[pc++]=i;\r\n\t\t\tphi[i]=i-1;\r\n\t\t}\r\n\t\tfor(LL j=0;j<pc&&i*prime[j]<MAXN;j++){\r\n\t\t\tif(i%prime[j]==0){\r\n\t\t\t\tphi[i*prime[j]]=prime[j]*phi[i];\r\n\t\t\t\tbreak;\r\n\t\t\t}else{\r\n\t\t\t\tphi[i*prime[j]]=(prime[j]-1)*phi[i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nLL exgcd(LL a,LL b,LL &x,LL &y){\r\n\tif(b==0){\r\n\t\tx=1;\r\n\t\ty=0;\r\n\t\treturn a;\r\n\t}\r\n\tLL r=exgcd(b,a%b,x,y);\r\n\tLL t=x;\r\n\tx=y;\r\n\ty=t-a/b*y;\r\n\treturn r;\r\n}\r\nLL jc[200000];\r\nLL C(LL n,LL m,LL mod){\r\n    if(m>n)return 0;\r\n    return ((jc[n]*FPW(jc[m],mod-2,mod))%mod*FPW(jc[n-m],mod-2,mod)%mod);\r\n}\r\nLL lucas(LL n,LL m,LL mod){\r\n    if(!m)return 1;\r\n    return C(n%mod,m%mod,mod)*lucas(n/mod,m/mod,mod)%mod;\r\n}\r\n\r\n\r\n*/\r\nnamespace segtree{\r\n\tLL a[200000],tag[600000][2],tree[600000],cnt;\r\n\tvoid push_up(LL now){\r\n\t\ttree[now]=tree[now*2]+tree[now*2+1];\r\n\t\treturn ;\r\n\t}\r\n\tvoid build(LL now,LL l,LL r){\r\n\t\ttag[now][0]=1;\r\n\t    tag[now][1]=0;\r\n\t\tif(l==r){\r\n\t\t\ttree[now]=a[l];\r\n\t\t}else{\r\n\t\t\tLL mid=(l+r)/2;\r\n\t\t\tbuild(now*2,l,mid);\r\n\t\t\tbuild(now*2+1,mid+1,r);\r\n\t\t\tpush_up(now);\r\n\t\t}\r\n\t\treturn ;\r\n\t}\r\n\tvoid push_down(LL now,LL l,LL r){\r\n\t\tLL mid=(l+r)/2;\r\n\t\ttree[now*2]=(tree[now*2]*tag[now][0]+(mid-l+1)*tag[now][1]);\r\n\t\ttree[now*2+1]=(tree[now*2+1]*tag[now][0]+(r-mid)*tag[now][1]);\r\n\t\ttag[now*2][0]=(tag[now*2][0]*tag[now][0]);\r\n\t    tag[now*2+1][0]=(tag[now*2+1][0]*tag[now][0]);\r\n\t    tag[now*2][1]=(tag[now*2][1]*tag[now][0]+tag[now][1]);\r\n\t    tag[now*2+1][1]=(tag[now*2+1][1]*tag[now][0]+tag[now][1]);\r\n\t\ttag[now][0]=1;\r\n\t\ttag[now][1]=0;\r\n\t\treturn ;\r\n\t}\r\n\tvoid update(LL now,LL l,LL r,LL x,LL y,LL t){\r\n\t\tif(y<l||r<x){\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tif(x<=l&&y>=r){\r\n\t\t\ttree[now]=(tree[now]*t);\r\n\t\t\ttag[now][0]=(tag[now][0]*t);\r\n\t\t\ttag[now][1]=(tag[now][1]*t);\r\n\t\t}else{\r\n\t\t\tpush_down(now,l,r);\r\n\t\t\tLL mid=(l+r)/2;\r\n\t\t\tupdate(now*2,l,mid,x,y,t);\r\n\t\t\tupdate(now*2+1,mid+1,r,x,y,t);\r\n\t\t\tpush_up(now);\r\n\t\t}\r\n\t\treturn ;\r\n\t}\r\n\tvoid update2(LL now,LL l,LL r,LL x,LL y,LL t){\r\n\t\tif(y<l||r<x){\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tif(x<=l&&y>=r){\r\n\t\t\ttree[now]=(tree[now]+(r-l+1)*t);\r\n\t\t\ttag[now][1]=(tag[now][1]+t);\r\n\t\t}else{\r\n\t\t\tpush_down(now,l,r);\r\n\t\t\tLL mid=(l+r)/2;\r\n\t\t\tupdate2(now*2,l,mid,x,y,t);\r\n\t\t\tupdate2(now*2+1,mid+1,r,x,y,t);\r\n\t\t\tpush_up(now);\r\n\t\t}\r\n\t\treturn ;\r\n\t}\r\n\tLL query(LL now,LL stdl,LL stdr,LL l,LL r){\r\n\t\tif(r<stdl||stdr<l){\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tif(l<=stdl&&stdr<=r){\r\n\t\t\treturn tree[now];\r\n\t\t}\r\n\t\tpush_down(now,stdl,stdr);\r\n\t\tLL m=(stdl+stdr)/2;\r\n\t\treturn(query(now*2,stdl,m,l,r)+query(now*2+1,m+1,stdr,l,r));\r\n\t}\r\n}\r\nLL N,M,K,lsts,nowl,a[1005],nxtl,qzh[1005],g[1005];\r\nstring s;\r\nvoid solve(){\r\n\tN=read();\r\n\trep(i,1,N){\r\n\t\tLL nows=read();\r\n\t\tif(nows>lsts){\r\n\t\t\tLL difs=nows-lsts;\r\n\t\t\tnxtl=0;while(difs>0){difs+=a[++nxtl]-9,a[nxtl]=9;}\r\n\t\t\ta[nxtl]+=difs;\r\n\t\t\tnxtl=max(nxtl,nowl);\r\n\t\t}else{\r\n\t\t\tLL fwz=upper_bound(qzh+1,qzh+1+nowl,lsts-nows)-qzh;\r\n\t\t\trep(j,1,fwz)a[j]=g[j]=0;\r\n\t\t\tfwz++;while(a[fwz]==9)fwz++;a[fwz]++;\r\n\t\t\tLL lss=nows-lsts+qzh[fwz-1]-1;\r\n\t\t\tnxtl=max(nxtl,fwz);\r\n\t\t\tLL enn=0,difs=lss;while(difs>0){difs+=g[++enn]-9,g[enn]=9;}\r\n\t\t\tg[enn]+=difs;\r\n\t\t\trep(j,1,fwz-1)a[j]=g[j];\r\n\t\t}\r\n\t\tper(j,nxtl,1)printf(\"%lld\",a[j]);puts(\"\");\r\n\t\tnowl=nxtl;\r\n\t\tqzh[0]=0;rep(j,1,nxtl)qzh[j]=qzh[j-1]+a[j];\r\n\t\tlsts=nows;\r\n\t}\r\n}\r\nint main(){\r\n\tLL T=1;\r\n\twhile(T--){\r\n\t\tsolve();\r\n\t}\r\n    return 0;\r\n}\r\n//\u00d6\u00d2\u00a3\u00a1\u00b3\u00cf\u00a3\u00a1\r\n//\u00cd\u00c5\u00a3\u00a1\u00bd\u00e1\u00a3\u00a1\r\n//\u00b1\u00d8\u00a3\u00a1\u00ca\u00a4\u00a3\u00a1\r\n\r\n"
}