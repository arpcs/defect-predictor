{
    "id": 184324902,
    "contestId": 918,
    "creationTimeSeconds": 1670501235,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 918,
        "index": "B",
        "name": "Radio Station",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 900,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 918,
        "members": [
            {
                "handle": "Borsha30"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1517236500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define mem(a,b) memset(a, b, sizeof(a) )\r\n#define gcd(a,b) __gcd(a,b)\r\n#define sqr(a) ((a) * (a))\r\n\r\n#define faster() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n#define fraction(a) cout.unsetf(ios::floatfield); cout.precision(a); cout.setf(ios::fixed,ios::floatfield);\r\n\r\ntypedef vector<int> vi;\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef double D;\r\ntypedef pair<int, int> ii;\r\ntypedef vector<ii> vii;\r\ntypedef vector<string> vs;\r\ntypedef vector<vi> vvi;\r\nconst int mod = (int)1e7+7;\r\n\r\n\r\ntemplate < typename F, typename S >\r\nostream& operator << ( ostream& os, const pair< F, S > & p ) {\r\n            return os << \"(\" << p.first << \", \" << p.second << \")\";\r\n}\r\n\r\ntemplate < typename T >\r\nostream &operator << ( ostream & os, const vector< T > &v ) {\r\n            os << \"{\";\r\n                for(auto it = v.begin(); it != v.end(); ++it) {\r\n                                if( it != v.begin() ) os << \", \";\r\n                                        os << *it;\r\n                                            }\r\n                    return os << \"}\";\r\n}\r\n\r\ntemplate < typename T >\r\nostream &operator << ( ostream & os, const set< T > &v ) {\r\n            os << \"[\";\r\n                for(auto it = v.begin(); it != v.end(); ++it) {\r\n                                if( it != v.begin() ) os << \", \";\r\n                                        os << *it;\r\n                                            }\r\n                    return os << \"]\";\r\n}\r\n\r\ntemplate < typename T >\r\nostream &operator << ( ostream & os, const multiset< T > &v ) {\r\n            os << \"[\";\r\n                for(auto it = v.begin(); it != v.end(); ++it) {\r\n                                if( it != v.begin() ) os << \", \";\r\n                                        os << *it;\r\n                                            }\r\n                    return os << \"]\";\r\n}\r\n\r\ntemplate < typename F, typename S >\r\nostream &operator << ( ostream & os, const map< F, S > &v ) {\r\n            os << \"[\";\r\n                for(auto it = v.begin(); it != v.end(); ++it) {\r\n                                if( it != v.begin() ) os << \", \";\r\n                                        os << it -> first << \" = \" << it -> second ;\r\n                                            }\r\n                    return os << \"]\";\r\n}\r\n\r\n#define dbg(args...) do {cerr << #args << \" : \"; faltu(args); } while(0)\r\n\r\nvoid faltu () {\r\n            cerr << endl;\r\n}\r\n\r\ntemplate <typename T>\r\nvoid faltu( T a[], int n ) {\r\n            for(int i = 0; i < n; ++i) cerr << a[i] << ' ';\r\n                cerr << endl;\r\n}\r\n\r\ntemplate <typename T, typename ... hello>\r\nvoid faltu( T arg, const hello &... rest) {\r\n            cerr << arg << ' ';\r\n                faltu(rest...);\r\n}\r\n\r\n\r\n\r\nint main()\r\n{\r\n    faster();\r\n    //freopen(\"in.txt\", \"r\", stdin);\r\n    //freopen(\"out.txt\", \"w\", stdout);\r\n\r\n    int n,m;\r\n    cin>>n>>m;\r\n\r\n    map<string, string> mp;\r\n    for(int i=0;i<n;i++){\r\n        string name, ip;\r\n        cin>>name>>ip;\r\n        mp[ip] = name;\r\n    }\r\n    map<string, string>mp1;\r\n    for(int i=0;i<m;i++){\r\n        string na, ip;\r\n        cin>>na>>ip;\r\n        ip.pop_back();\r\n        mp1[na] = ip;\r\n    }\r\n    for(auto u:mp1){\r\n        cout<<u.first<<\" \"<<u.second<<\"; #\"<<mp[u.second]<<endl;\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n\r\n"
}