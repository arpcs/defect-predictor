{
    "id": 38897655,
    "contestId": 918,
    "creationTimeSeconds": 1527956079,
    "relativeTimeSeconds": 879,
    "problem": {
        "contestId": 918,
        "index": "B",
        "name": "Radio Station",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 900,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 918,
        "members": [
            {
                "handle": "AJ47"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1527955200
    },
    "programmingLanguage": "Java 8",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 20275200,
    "source": "import java.io.OutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.StringTokenizer;\nimport java.util.HashMap;\nimport java.io.IOException;\nimport java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.io.InputStream;\n\n/**\n * Built using CHelper plug-in\n * Actual solution is at the top\n */\npublic class Main {\n    public static void main(String[] args) {\n        InputStream inputStream = System.in;\n        OutputStream outputStream = System.out;\n        InputReader in = new InputReader(inputStream);\n        PrintWriter out = new PrintWriter(outputStream);\n        TaskB solver = new TaskB();\n        solver.solve(1, in, out);\n        out.close();\n    }\n\n    static class TaskB {\n        public void solve(int testNumber, InputReader in, PrintWriter out) {\n            int a = in.ni();\n            int b = in.ni();\n            int c = a + b;\n            HashMap<String, String> hm1 = new HashMap<>();\n            HashMap<String, String> hm2 = new HashMap<>();\n            for (int i = 0; i < c; ++i) {\n                String x = in.next();\n                String y = in.next();\n                if (y.charAt(y.length() - 1) == ';') hm2.put(y.substring(0, y.length() - 1), x);\n                else hm1.put(y, x);\n            }\n            for (String l : hm1.keySet()) {\n                out.println(hm2.get(l) + \" \" + l + \"; \" + \"#\" + hm1.get(l));\n            }\n        }\n\n    }\n\n    static class InputReader {\n        public BufferedReader reader;\n        public StringTokenizer tokenizer;\n\n        public InputReader(InputStream stream) {\n            reader = new BufferedReader(new InputStreamReader(stream), 32768);\n            tokenizer = null;\n        }\n\n        public String next() {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                try {\n                    tokenizer = new StringTokenizer(reader.readLine());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            return tokenizer.nextToken();\n        }\n\n        public int ni() {\n            return Integer.parseInt(next());\n        }\n\n    }\n}\n\n"
}