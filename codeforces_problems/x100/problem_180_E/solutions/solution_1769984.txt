{
    "id": 1769984,
    "contestId": 180,
    "creationTimeSeconds": 1339090412,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "practice_guy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "GNU C++",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 35,
    "timeConsumedMillis": 80,
    "memoryConsumedBytes": 3276800,
    "source": "#include <iostream>\r\n#include <cstdio>\r\nusing namespace std;\r\n\r\n#include <bitset>\r\n#include <algorithm>\r\n#include <iomanip>\r\n#include <cmath>\r\n#include <cstring>\r\n#include <vector>\r\n\r\n# define FR(i, n)           for( int i = 0; i<=n; i++)\r\n# define FRm(i, m, n)     for( int i = m; i <=n; i++)\r\n# define FRrev(i, n)         for( int i = n; i >= 0; i-- )\r\n# define FRrevm(i,n,m)         for( int i = n; i >= m; i-- )\r\n\r\n# define PF       printf\r\n# define PFS PF(\" \")\r\n# define PFd(x)   printf(\"%d\" , x )\r\n# define PFdS(x)   printf(\"%d \" , x )\r\n# define PFdN(x)  printf(\"%d\\n\" , x )\r\n# define PFN      printf(\"\\n\")\r\n# define SF    scanf\r\n# define SFd(x) scanf(\"%d\",&x)\r\n# define SFd2(x,y) scanf(\"%d%d\",&x,&y)\r\n\r\n#define PB push_back\r\n\r\nstruct node\r\n{\r\n    int x,y;\r\n};\r\n\r\n\r\n\r\n\r\nint main()\r\n{\r\n    int nmax=100000+1;\r\n    vector<node> arr[nmax];\r\n    int n,k,m;\r\n    SFd(n);\r\n    SFd2(m,k);\r\n    \r\n    int inp[nmax];\r\n    \r\n    int ptr1,ptr2,tans,tk;\r\n    \r\n    FR(i,n-1)\r\n    {\r\n        SFd(inp[i]);\r\n    }\r\n    \r\n    int ii=0;\r\n    node nd; //=new node();\r\n    //nd=new node;\r\n    /*SFd(temp); nd.x=0; prev=temp;\r\n    i++; nd.y=i;*/\r\n    \r\n    //nd.x=4;\r\n    //cout<<nd.x<<endl;\r\n    \r\n    for(;ii<n;ii++)\r\n    {\r\n            //temp=arr[i];\r\n            nd.x=ii;\r\n            while(ii+1<n && inp[ii+1]==inp[ii])\r\n            {\r\n                ii++;\r\n            }\r\n            nd.y=ii;\r\n            //cout<<nd.x<<endl;\r\n            \r\n            (arr[ inp[ii] ]).push_back(nd);\r\n    }\r\n    \r\n    int ans=0;\r\n    int len,j;\r\n    \r\n    FRm(i,1,n)\r\n    {\r\n        len=arr[i].size();\r\n        if(len==0)continue;\r\n        \r\n        //cout<<i<<\" ;;; \"<<len<<endl;\r\n        \r\n        ptr1=0;\r\n        ptr2=0;\r\n        tk=0;\r\n        tans=(arr[i])[0].y - (arr[i])[0].x + 1;\r\n        ans=max(ans,tans);\r\n        \r\n        while(ptr1<=ptr2 && ptr2< len)\r\n        {\r\n            j=ptr2+1;\r\n            if(j<len &&  (tk + (arr[i])[j].x - (arr[i])[j-1].y - 1 ) <= k)\r\n            {\r\n                tk+=( (arr[i])[j].x - (arr[i])[j-1].y - 1 ) ;\r\n                tans+=(arr[i])[j].y - (arr[i])[j].x + 1;\r\n                ptr2++;\r\n            }\r\n            else\r\n            {\r\n                if(ptr2>ptr1)\r\n                {\r\n                tk-= ( (arr[i])[ptr1+1].x - (arr[i])[ptr1].y - 1)  ;\r\n                tans-= (arr[i])[ptr1].y - (arr[i])[ptr1].x + 1;\r\n                ptr1++;\r\n                }\r\n                else\r\n                {\r\n                    ptr1++; ptr2++;\r\n                    if(ptr1<len)\r\n                    {\r\n                        tk=0;\r\n                        tans=(arr[i])[ptr1].y - (arr[i])[ptr1].x + 1;\r\n                    }\r\n                }\r\n            \r\n            }\r\n            ans=max(tans,ans);\r\n            //cout<<\"....\"<<i<<\"  \"<<ans<<endl;\r\n        } // while loop ends here\r\n        \r\n    }\r\n    \r\n    cout<<ans<<endl;\r\n    \r\n    return 0;\r\n}\r\n"
}