{
    "id": 62677626,
    "contestId": 180,
    "creationTimeSeconds": 1571226813,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 1228800,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\nvector<int> v[100005];\nint main(){\n\n    int n, m, k, x;\n    scanf(\"%d%d%d\", &n, &m, &k);\n    for(int i=1; i<=n; i++){\n        scanf(\"%d\", &x);\n        v[x].push_back(i);\n    }\n    int MAX=0;\n    for(int i=1; i<=m; i++){\n        int Len=v[i].size();\n        int L=0, R=1, cut=0;\n        cut=v[i][R]-v[i][L]-1;\n        while(R>=L&&R<Len){\n            if(cut>k){\n                cut-=v[i][L+1]-v[i][L]-1;\n                L++;\n            }\n            else{\n                if(R+1<=n)\n                cut+=v[i][R+1]-v[i][R]-1;\n                MAX=max(MAX, R-L+1);\n\n                R++;\n            }\n        }\n    }\n    printf(\"%d\\n\", MAX);\n\n    return 0;\n}\n\n\t   \t  \t\t\t\t\t\t\t\t    \t\t\t \t\t    \t\t"
}