{
    "id": 44431192,
    "contestId": 180,
    "creationTimeSeconds": 1539762216,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "tenkei"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 50,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 2252800,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <queue>\r\n#include <string>\r\n#include <cstring>\r\n#include <cmath>\r\n#include <set>\r\n#include <map>\r\n#include <cstdio>\r\n#include <stdlib.h>\r\n#include <stack>\r\n#include <numeric>\r\n#include <bitset>\r\n#include <cctype>\r\ntypedef long long ll;\r\n#define MAX 100005\r\nusing namespace std;\r\n#define INF 2147483647\r\n#define inf 1<<30\r\n#define MOD 1000000007\r\n#define EPS 1e-20\r\n#define G 9.8\r\n#define PI acos(-1)\r\n#define REP(i,n) for(int (i)=0;(i)<(int)(n);(i)++)\r\nbool debug = false;\r\nint n,m,k;\r\nint dx[4] = {0,1,0,-1}, dy[4] = {1,0,-1,0};\r\n\r\nvector<pair<int,int>> mp[MAX];\r\nint gg(pair<int,int> p) {return p.second-p.first+1;}\r\nint main(){\r\n    scanf(\"%d%d%d\", &n, &m, &k);\r\n    int x, s=-1, l=-1;\r\n    REP(i,n) {\r\n        scanf(\"%d\", &x);\r\n        if (l==-1) {\r\n            s=i; l=x;\r\n        } else if ( l!= x){\r\n            mp[l].push_back({s,i-1});\r\n            s=i; l=x;\r\n        }\r\n    }\r\n    mp[l].push_back({s,n-1});\r\n    int ans = 0;\r\n    for(int i=1;i<=m;i++) if (mp[i].size() > 0) {\r\n        int t = gg(mp[i][0]);\r\n        ans = max(ans, t);\r\n        for(int l=0,r=1,dis=0;r<mp[i].size();) {\r\n            int tp = mp[i][r].first - mp[i][r-1].second - 1;\r\n            if (dis + tp <= k) {\r\n                dis += tp;\r\n                t += gg(mp[i][r]); ans = max(ans, t);\r\n                r++;\r\n            } else {\r\n                if (r==l+1) {\r\n                    t = gg(mp[i][r]); ans = max(ans, t);\r\n                    l=r; dis=0; r++;\r\n                } else {\r\n                    dis -= mp[i][l+1].first - mp[i][l].second - 1;\r\n                    t -= gg(mp[i][l]);\r\n                    l++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    printf(\"%d\\n\", ans);\r\n    return 0;\r\n}\r\n"
}