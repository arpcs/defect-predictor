{
    "id": 230671556,
    "contestId": 180,
    "creationTimeSeconds": 1698753282,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "__Whisper"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 2048000,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\nusing ll = long long;\r\nusing ld = long double;\r\nusing T = tuple<ll, ll, ll, ll>;\r\n\r\n#define int long long\r\n#define Base 41\r\n#define sz(a) (int)a.size()\r\n#define FOR(i, a, b) for ( int i = a ; i <= b ; i++ )\r\n#define FORD(i, a, b) for (int i = a; i >= b; i --)\r\n#define all(x) x.begin() , x.end()\r\n#define pii pair<int , int>\r\n#define fi first\r\n#define se second\r\n#define Lg(x) 31 - __builtin_clz(x)\r\n\r\nconstexpr ll LINF = (1ll << 62);\r\nconstexpr int INF = (1ll << 30);\r\nconstexpr int MAX = 1e5 + 5;\r\nconstexpr int Mod = 1e9 + 7;\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nvoid setupIO(){\r\n    #define name \"Whisper\"\r\n    //Phu Trong from Nguyen Tat Thanh High School for gifted student\r\n    srand(time(NULL));\r\n    cin.tie(nullptr)->sync_with_stdio(false); cout.tie(nullptr);\r\n    // freopen(name\".inp\", \"r\", stdin);\r\n    // freopen(name\".out\", \"w\", stdout);\r\n    cout << fixed << setprecision(2);\r\n}\r\n\r\nbool minimize(int&a , int b){\r\n    if (a > b){\r\n        a = b; return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nbool maximize(int&a, int b){\r\n    if (a < b){\r\n        a = b; return 1;\r\n    }\r\n    return 0;\r\n}\r\nint n, m, k;\r\nint a[MAX];\r\nvector<pii> pos[MAX];\r\nvoid Whisper(){\r\n    cin >> n >> m >> k;\r\n    for (int i = 1; i <= n; ++i) cin >> a[i];\r\n\r\n    int ans = 0;\r\n    for (int i = 1; i <= n; i++){\r\n        int color = a[i];\r\n        int j = i;\r\n        while (a[j] == color){\r\n            j++;\r\n        }\r\n        j--;\r\n        pos[color].push_back({i, j});\r\n        ans = max(ans, j - i + 1);\r\n        i = j;\r\n    }\r\n    for (int c = 1; c <= m; ++c){\r\n\r\n        int sz = sz(pos[c]);\r\n        vector<int> dist(n + 5);\r\n        vector<int> sum(n + 5);\r\n        for (int i = 2; i <= sz; ++i){\r\n            dist[i] = dist[i - 1] + pos[c][i - 1].fi - pos[c][i - 2].se - 1;\r\n        }\r\n        sum[1] = pos[c][0].se - pos[c][0].fi + 1;\r\n        for (int i = 2; i <= sz; i++){\r\n            sum[i] = sum[i - 1] + pos[c][i - 1].se - pos[c][i - 1].fi + 1;\r\n        }\r\n        for (int i = 1; i <= sz; i++){\r\n            int l = 1, r = i - 1;\r\n            int pos = -1;\r\n            while (l <= r){\r\n                int mid = (l + r) >> 1;\r\n                if (dist[i] - dist[mid] <= k) r = mid - 1, pos = mid;\r\n                else l = mid + 1;\r\n            }\r\n            if (pos != -1){\r\n                ans = max(ans, sum[i] - sum[pos - 1]);\r\n            }\r\n        }\r\n    }\r\n    cout << ans;\r\n}\r\n\r\n\r\nsigned main(){\r\n    setupIO();\r\n    int Test = 1;\r\n//    cin >> Test;\r\n    for ( int i = 1 ; i <= Test ; i++ ){\r\n        Whisper();\r\n        if (i < Test) cout << '\\n';\r\n    }\r\n}\r\n"
}