{
    "id": 3498032,
    "contestId": 180,
    "creationTimeSeconds": 1365544826,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "Qubit01"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 24,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 3276800,
    "source": "#include <cstdio>\n#include <algorithm>\n#include <fstream>\n#include <iostream>\n#include <vector>\n#include <queue>\n#include <map>\n#include <cstring>\n#include <string>\n\n\n#define pb push_back\n#define mp make_pair\n#define f first\n#define s second\n#define ll long long\n\nconst int MAXN = 200005; \nusing namespace std;\n\nint N, M, K;\nint A[MAXN], ans;\nvector <int> V[MAXN];\n\nint main() {\n/*\n    freopen(\"test.in\", \"r\", stdin);\n    freopen(\"test.out\", \"w\", stdout);\n*/\n    cin >> N >> M >> K;\n\n    for (int i = 1; i <= M; ++i)\n\tV[i].push_back(0);\n\n    for (int i = 1; i <= N; ++i) {\n\tcin >> A[i];\n\tV[A[i]].push_back(i);\n    }\n    for(int i = 1; i <= M; ++i) {\n\n\tif(V[i].size() == 0) continue;\n/*\t\n\tfor (int j = 0; j < V[i].size(); ++j)\n\t   cout << V[i][j] << \" \" ;\n*/\t\n//\tcout << \"\\n\";\n\t\t\n\tint current = 1;\n\n\tfor (int j = 1 ; j < V[i].size(); ++j) {\n\t    \n\t    while (current < j && V[i][j] - V[i][current] - K - (j - current) > 0) \n\t\tcurrent++;\n\t    \n//\t    cerr << i << \" current: \" << current << \" j: \" << j << \" V[i][j]: \" << V[i][j] << \" V[i][current]: \" << V[i][current] << \"\\n\";\t    \n\t    int del = V[i][j] - V[i][current] - (j - current);\n\n\t    if (N - del < K) \n\t\tans = max(ans, j - current + 1 - (K - (N - del) ) );\n\t    else ans = max(ans, j - current + 1);\n\t}\n    }\n\n    cout << ans << \"\\n\";\n\n    return 0;\n}\n"
}