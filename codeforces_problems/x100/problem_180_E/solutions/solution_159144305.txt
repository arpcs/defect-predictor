{
    "id": 159144305,
    "contestId": 180,
    "creationTimeSeconds": 1654075672,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "vl342"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nint n, m, k;\r\n\r\nint one_color(vector<int> &a) {\r\n    int ansp = -1;\r\n    int len = (int) a.size();\r\n    vector<int> free;\r\n    vector<int> pref_free = {0};\r\n    auto get_free = [&](int left, int right) {\r\n        return pref_free[right] - pref_free[left];\r\n    };\r\n    for (int i = 0; i < len; i++) {\r\n        if (i != n - 1) {\r\n            free.push_back(a[i + 1] - a[i] - 1);\r\n            pref_free.push_back(pref_free.back() + free.back());\r\n        }\r\n        int left = -1;\r\n        int right = i;\r\n        while (right - left != 1) {\r\n            int mid = (left + right) / 2;\r\n            if (get_free(mid, i + 1) <= k) {\r\n                right = mid;\r\n            } else {\r\n                left = mid;\r\n            }\r\n        }\r\n        ansp = max(ansp, i - right);\r\n    }\r\n    return min(n, ansp);\r\n}\r\n\r\nint32_t main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cin >> n >> m >> k;\r\n    vector<vector<int>> color(m);\r\n    for (int i = 0; i < n; i++) {\r\n        int x;\r\n        cin >> x;\r\n        --x;\r\n        color[x].push_back(i);\r\n    }\r\n    int ans = -1;\r\n    for (int i = 0; i < m; i++) {\r\n        ans = max(ans, one_color(color[i]));\r\n    }\r\n    cout << ans << '\\n';\r\n    return 0;\r\n}",
    "suggested_categories": [
        "algorithm",
        "data structures",
        "dynamic programming",
        "binary search",
        "vector",
        "input/output",
        "code quality",
        "code optimization",
        "integer operations",
        "variable scope",
        "conditional statements",
        "looping",
        "c++",
        "stl",
        "software design",
        "performance optimization",
        "code efficiency",
        "error handling",
        "code refactoring",
        "debugging"
    ]
}