{
    "id": 1613993,
    "contestId": 180,
    "creationTimeSeconds": 1335119893,
    "relativeTimeSeconds": 1273,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "Acko"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1335118620
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 3788800,
    "source": "#include <cstdio>\r\n#include <iostream>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <cstring>\r\n#include <vector>\r\n#include <list>\r\n#include <map>\r\n#include <set>\r\n#include <queue>\r\n#include <deque>\r\n#include <stack>\r\n#include <bitset>\r\n#include <functional>\r\n#include <numeric>\r\n#include <sstream>\r\n#include <iomanip>\r\n#include <cstdlib>\r\n#include <ctime>\r\n#include <utility>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long int lld;\r\n\r\ntypedef pair < int, int > pii;\r\n\r\nconst int MaxN = 200000 + 5;\r\n\r\nint N, M, K, Color;\r\nvector < int > Pos[MaxN];\r\n\r\nint main ( void )\r\n{\r\n    scanf ( \"%d %d %d\", &N, &M, &K );\r\n\r\n    for ( int i = 0; i < N; i++ )\r\n    {\r\n        scanf ( \"%d\", &Color );\r\n\r\n        Color--;\r\n\r\n        Pos[Color].push_back ( i );\r\n    }\r\n\r\n    int Sol = 0;\r\n\r\n    for ( int i = 0; i < M; i++ )\r\n    {\r\n        if ( Pos[i].empty ( ) ) continue;\r\n\r\n        int idx = 0, Size = Pos[i].size ( );\r\n\r\n        while ( idx < Size )\r\n        {\r\n            int idy = idx;\r\n\r\n            while ( idy < Size )\r\n            {\r\n                int DiffPos = Pos[i][idy] - Pos[i][idx] + 1;\r\n                int Cnt = idy - idx + 1;\r\n\r\n                if ( DiffPos - Cnt > K ) break;\r\n\r\n                idy++;\r\n            }\r\n\r\n            int Remove = 0;\r\n\r\n            if ( idy == Size ) Remove = 1;\r\n\r\n            if ( idy - idx + 1 - Remove > Sol ) Sol = idy - idx + 1 - Remove;\r\n\r\n            idx = idy;\r\n        }\r\n    }\r\n\r\n    printf ( \"%d\\n\", Sol );\r\n\r\n    return 0;\r\n}\r\n"
}