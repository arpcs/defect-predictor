{
    "id": 99025538,
    "contestId": 180,
    "creationTimeSeconds": 1605872882,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "zhoujiaj77"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "Java 8",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 154,
    "memoryConsumedBytes": 0,
    "source": "import java.io.*;\r\nimport java.math.BigInteger;\r\nimport java.util.*;\r\n\r\npublic class test1 {\r\n    public static void main(String[] args) {\r\n        new test1().run();\r\n    }\r\n\r\n    BufferedReader br;\r\n    StringTokenizer in;\r\n    PrintWriter out;\r\n\r\n    public String nextToken() throws IOException {\r\n        while (in == null || !in.hasMoreTokens()) {\r\n            in = new StringTokenizer(br.readLine());\r\n        }\r\n        return in.nextToken();\r\n    }\r\n\r\n    public int nextInt() throws IOException {\r\n        return Integer.parseInt(nextToken());\r\n    }\r\n\r\n    public long nextLong() throws IOException {\r\n        return Long.parseLong(nextToken());\r\n    }\r\n\r\n    public double nextDouble() throws IOException {\r\n        return Double.parseDouble(nextToken());\r\n    }\r\n\r\n    void solve() throws IOException {\r\n        int n = nextInt();\r\n        int m = nextInt();\r\n        int[] a = new int[n + 1];\r\n        int k = nextInt();\r\n        for (int i = 0; i < n; i++) {\r\n            a[i] = nextInt() - 1;\r\n        }\r\n        int[] next = new int[n + 1];\r\n        int[] pos = new int[m];\r\n        int[] num = new int[n + 1];\r\n        a[n] = -2;\r\n        Arrays.fill(pos, n);\r\n        for (int i = n - 1; i >= 0; i--) {\r\n            next[i] = pos[a[i]];\r\n            num[i] = num[next[i]] + 1;\r\n            pos[a[i]] = i;\r\n        }\r\n\r\n        int l = 1;\r\n        int r = 200000;\r\n        while (l < r - 1) {\r\n            int x = (l + r) / 2;\r\n            boolean fl = false;\r\n            int[] left = new int[m];\r\n            Arrays.fill(left, -1);\r\n            for (int i = 0; i < n; i++) {\r\n                while (left[a[i]] == -1 || num[left[a[i]]] - num[i] + 1 > x) {\r\n                    if (left[a[i]] == -1) {\r\n                        left[a[i]] = i;\r\n                    } else {\r\n                        System.out.println(\"num=\"+num[i]+\"num-left=\"+num[left[a[i]]]+\"i=\"+i);\r\n                        left[a[i]] = next[left[a[i]]];\r\n                    }\r\n                }\r\n                if ((num[left[a[i]]] - num[i] + 1 == x)\r\n                        && (i - left[a[i]] + 1 - x <= k)) {\r\n                    fl = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(l==1&&r==200000){\r\n                for(int i=0;i<m;i++){\r\n                    System.out.println(\"i=\"+i+\"left=\"+left[i]);\r\n                }\r\n            }\r\n\r\n            if (fl) {\r\n                l = x;\r\n            } else {\r\n                r = x;\r\n            }\r\n        }\r\n        out.println(l);\r\n\r\n    }\r\n\r\n    public void run() {\r\n        try {\r\n            br = new BufferedReader(new InputStreamReader(System.in));\r\n            out = new PrintWriter(System.out);\r\n            solve();\r\n            out.close();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n            System.exit(1);\r\n        }\r\n    }\r\n}"
}