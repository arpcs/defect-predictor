{
    "id": 1617716,
    "contestId": 180,
    "creationTimeSeconds": 1335163229,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "yjxyjx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 13414400,
    "source": "#include<cstdio>\r\n#include<iostream>\r\n#include<cstring>\r\n#include<algorithm>\r\n#include<map>\r\n#include<cmath>\r\n#include<vector>\r\nusing namespace std;\r\n//int a[1000005];\r\nint n,m,k;\r\nvector<int>a[1000005];\r\nint main()\r\n{\r\n    \r\n    while(~scanf(\"%d%d%d\",&n,&m,&k))\r\n    {\r\n       int i,j;\r\n       for(i=1;i<=n;i++)\r\n        {\r\n         scanf(\"%d\",&j);\r\n         a[j].push_back(i);\r\n        }\r\n       int M=0;\r\n       for(i=1;i<=m;i++)\r\n       {\r\n        int l=0,r=0;\r\n        while(r<a[i].size()&&a[i][r]-a[i][l]-(r-l)<=k)\r\n            r++;\r\n          M=max(M,r-l);              \r\n       }\r\n       printf(\"%d\\n\",M);\r\n    }\r\n}\r\n",
    "suggested_categories": [
        "algorithm implementation",
        "data structures",
        "c++ programming",
        "array operations",
        "input/output handling",
        "complexity analysis",
        "code optimization",
        "integer operations",
        "loop structures",
        "conditional statements",
        "error handling",
        "stl containers",
        "memory management",
        "vector operations",
        "bitwise operations",
        "searching and sorting",
        "mathematical calculations",
        "performance tuning",
        "error checking",
        "variable declaration"
    ]
}