{
    "id": 3788885,
    "contestId": 180,
    "creationTimeSeconds": 1369764631,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "ali_hasan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "MS C++",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 2867200,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <vector>\r\n#include <cstring>\r\nusing namespace std;\r\n\r\n\r\nconst int MAXN = 100100;\r\n\r\nint x[2 * MAXN];\r\nvector <int> v[MAXN];\r\nint cnt[MAXN];\r\nbool processed[MAXN];\r\n\r\nint main() {\r\n    int n, m, k;\r\n    scanf(\"%d %d %d\", &n, &m, &k);\r\n    for(int i = 0; i < n; i ++) {\r\n            scanf(\"%d\", x + i);\r\n    }\r\n    memset(cnt, 0, sizeof(cnt));\r\n    for(int i = 0; i < n ; i ++) {\r\n            cnt[x[i]] ++;\r\n            v[x[i]].push_back(i);\r\n    }\r\n    memset(processed, false, sizeof(processed));\r\n    for(int i = 0; i < n; i  ++) {\r\n            if(!processed[x[i]]) {\r\n                                 processed[x[i]] = true;\r\n                                 int size = cnt[x[i]];\r\n                                 int last = v[x[i]][0];\r\n                                 v[x[i]][0] = 0;\r\n                                 for(int j = 1; j < size; j ++) {\r\n                                         int temp = v[x[i]][j];\r\n                                         v[x[i]][j] = v[x[i]][j - 1] + v[x[i]][j] - last - 1;\r\n                                         last = temp;\r\n                                 }\r\n            }\r\n    }\r\n  /* for(int i = 0; i < n; i ++) {\r\n            int q = v[x[i]].size();\r\n            for(int j = 0; j < q; j ++) {\r\n                    printf(\"%d \", v[x[i]][j]);\r\n            }\r\n            printf(\"\\n\");\r\n    }\r\n    */\r\n    int ans = 0;\r\n    for(int i = 0; i < n; i ++) {\r\n            if(cnt[x[i]]) {\r\n                          int size = cnt[x[i]];\r\n                          cnt[x[i]] = 0;\r\n            \r\n                          for(int j = 0; j < size; j ++) {\r\n                                  int begin = j;\r\n                                  int end = size - 1;\r\n                                  int idx = -1;\r\n                                  while(begin <= end) {\r\n                                              int mid = (begin + end) / 2;\r\n                                              int sum = 0;\r\n                                              for(int q = j + 1; q <= mid; q ++) {\r\n                                                      sum += v[x[i]][q] - v[x[i]][q - 1];\r\n                                              }\r\n                                              if(sum <= k) {\r\n                                                              idx = mid;\r\n                                                              begin = mid + 1;\r\n                                              }\r\n                                              else  {\r\n                                                    end = mid - 1;\r\n                                              }\r\n                                  }\r\n                                  int length = (idx == -1) ? 1 : idx - j + 1;\r\n                                  ans = max(ans, length);\r\n                                  \r\n                          }\r\n            }\r\n    }\r\n    printf(\"%d\\n\", ans);\r\n    system(\"PAUSE\");\r\n    return 0;\r\n}\r\n"
}