{
    "id": 1611419,
    "contestId": 180,
    "creationTimeSeconds": 1335083903,
    "relativeTimeSeconds": 5903,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "luckyi"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "MS C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 10,
    "memoryConsumedBytes": 2969600,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <string>\r\n#include <vector>\r\n#include <cmath>\r\n#include <algorithm>\r\n#include <set>\r\n#include <queue>\r\n#include <map>\r\n#include <deque>\r\n\r\nusing namespace std;\r\n\r\n#define pii pair <int, int>\r\n#define mp make_pair\r\n#define ll long long\r\n\r\nconst int MN = 1000 * 100 + 10;\r\nconst int inf = (1 << 29);\r\n\r\ndeque <int> d;\r\n\r\nvector <int> sp[MN];\r\n\r\nint main() {\r\n\t//freopen(\"input.txt\", \"r\", stdin);\r\n\t//freopen(\"output.txt\", \"w\", stdout);\r\n\tint n, m, k;\r\n\tint ans = 0;\r\n\tcin >> n >> m >> k;\r\n\tfor(int i = 0; i < n; i ++) {\r\n\t\tint c;\r\n\t\tscanf(\"%d\", &c);\r\n\t\tc --;\r\n\t\tsp[c].push_back(i);\r\n\t}\r\n\tfor(int i = 0; i < m; i ++) {\r\n\t\td.clear();\r\n\t\tint curr = 0;\r\n\t\tint curr_ans = 0;\r\n\t\t//sp[i].push_back(sp[i][ sp[i].size() - 1 ] + 1);\r\n\t\tfor(int j = 0; j < (int)sp[i].size() - 1; j ++) {\r\n\t\t\tint len = sp[i][j + 1] - sp[i][j] - 1;\r\n\t\t\twhile (!d.empty() && curr + len > k) {\r\n\t\t\t\tint pos = d.front();\r\n\t\t\t\tcurr -= (sp[i][pos + 1] - sp[i][pos] - 1);\r\n\t\t\t\tcurr_ans --;\r\n\t\t\t\td.pop_front();\r\n\t\t\t}\r\n\t\t\tif (d.empty())\r\n\t\t\t\tcurr_ans = 0;\r\n\t\t\tif (curr + len <= k) {\r\n\t\t\t\tcurr += len;\r\n\t\t\t\tcurr_ans ++;\r\n\t\t\t\td.push_back(j);\r\n\t\t\t\tans = max(curr_ans + !d.empty(), ans);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcout << ans << endl;\r\n\treturn 0;\r\n}"
}