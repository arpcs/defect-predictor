{
    "id": 1612684,
    "contestId": 180,
    "creationTimeSeconds": 1335087729,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "osa_k"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 10,
    "memoryConsumedBytes": 1433600,
    "source": "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n\n    int N, M, K;\n    cin >> N >> M >> K;\n\n    vector<vector<int> > vs(M+1);\n    for(int i = 0; i < N; ++i) {\n        int v;\n        cin >> v;\n        vs[v].push_back(i);\n    }\n\n    int ans = 1;\n    for(int i = 0; i < M+1; ++i) {\n        vector<int> &vv = vs[i];\n        if(vv.size() == 0) continue;\n        vv.push_back(vv.back()+K*2);\n\n        int left = 0, right = 0;\n        int delcnt = 0;\n        while(right < vv.size()) {\n            int nr = right+1;\n            delcnt += vv[nr]-vv[right]-1;\n            right = nr;\n\n            while(delcnt > K) {\n                int nl = left+1;\n                int dc = vv[nl]-vv[left]-1;\n                delcnt -= dc;\n                left = nl;\n            }\n            ans = max(ans, right-left+1);\n        }\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n"
}