{
    "id": 1880241,
    "contestId": 180,
    "creationTimeSeconds": 1341864350,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "littlepanda"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 1433600,
    "source": "#include <functional>\r\n#include <algorithm>\r\n#include <iostream>\r\n#include <iomanip>\r\n#include <bitset>\r\n#include <string>\r\n#include <cstdio>\r\n#include <vector>\r\n#include <queue>\r\n#include <stack>\r\n#include <cmath>\r\n#include <set>\r\n#include <map>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef unsigned int ull;\r\ntypedef pair<int,int> pii;\r\n\r\nconst int INF = 1000*1000*1000;\r\nconst double EPS = 1e-9;\r\n\r\n#define ALL(v) v.begin(),v.end()\r\n#define SZ(v) (int)v.size()\r\n#define SQR(x) ((x)*(x))\r\n#define MP make_pair\r\n\r\nint main() \r\n{\r\n    #ifndef ONLINE_JUDGE\r\n        freopen (\"input.txt\",\"r\",stdin);\r\n        freopen (\"output.txt\",\"w\",stdout);\r\n    #endif\r\n    int n, m, k;\r\n    scanf(\"%d%d%d\", &n, &m, &k);\r\n    map<int, vector<int> > M;\r\n    for (int i = 0; i < n; ++i)\r\n    {\r\n        int x;\r\n        scanf(\"%d\", &x);\r\n        if (M.find(x) == M.end())\r\n        {\r\n            vector<int> iv;\r\n            iv.push_back(i);\r\n            M.insert(MP(x, iv));\r\n        }\r\n        else\r\n            M[x].push_back(i);\r\n    }\r\n    int res = 1;\r\n    for (map<int, vector<int> >::iterator it = M.begin(); it != M.end(); ++it)\r\n    {\r\n        int lf = 0, rg = 1, dif = 0;\r\n        while (lf < SZ(it->second))\r\n        {\r\n            while (rg < SZ(it->second) && (dif < k || dif == k && it->second[rg] == it->second[rg - 1] + 1))\r\n            {\r\n                dif += it->second[rg] - it->second[rg - 1] - 1;\r\n                ++rg;\r\n            }\r\n            res = max(res, rg - lf);\r\n            dif -= it->second[lf + 1] - it->second[lf] - 1;\r\n            ++lf;\r\n        }\r\n    }\r\n    printf(\"%d\", res);\r\n    return 0;\r\n}"
}