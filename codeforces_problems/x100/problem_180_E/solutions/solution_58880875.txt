{
    "id": 58880875,
    "contestId": 180,
    "creationTimeSeconds": 1565902781,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "_nEhrA"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 122,
    "memoryConsumedBytes": 137728000,
    "source": "    #include \"bits/stdc++.h\"\r\n    #include<stdio.h>\r\n    #include <sstream>\r\n    #define pi 3.141592653589793238462\r\n    #define limit 100005\r\n    #define mo 1000000007;\r\n    typedef long long int lli;\r\n    typedef unsigned long long int ulli;\r\n    const lli mod=9999999999999983;\r\n    lli primes[6]={1125899906842597,1495921043,1005985879,1495921043,1005985879,1495921043};\r\n    using namespace std;\r\n    vector<lli>adj[2000009];\r\n    lli parent[2000009];\r\n    lli vis[200009];\r\n    lli level[2000009];\r\n    lli dist[2000009];\r\n    lli dp[100009];\r\n    lli arr[100009];\r\n    lli brr[2000009];\r\n    lli crr[2000009];\r\n    lli hashing[2000009];\r\n    lli ar[509][509];\r\n    lli br[509][509];\r\n    lli cr[509][509];\r\n    lli multiply(lli a,lli b){return ((a%mod)*(b%mod))%mod;}\r\n    lli add(lli a,lli b){return ((a%mod)+(b%mod))%mod;}\r\n    lli sub(lli a,lli b){return ((a%mod)-(b%mod)+mod)%mod;}\r\n    unordered_set<lli>st;\r\n    unordered_set<lli>::iterator it;\r\n    lli mp[1000001];\r\n    //unordered_map<lli,lli>mp;\r\n    //unordered_map<lli,lli>::iterator itr;\r\n     \r\n     \r\n     \r\n    int main()\r\n    {\r\n        //freopen(\"input.txt\",\"r\",stdin);\r\n    \t//freopen(\"output.txt\",\"w\",stdout);\r\n        int start_s = clock();\r\n        ios_base::sync_with_stdio(false);\r\n        cin.tie(NULL); cout.tie(NULL);\r\n     \r\n        //vector<lli>vect,vt,vct;\r\n        ////vector<lli>::iterator itt;\r\n        //set<lli>st;\r\n        //set<lli>::iterator it;\r\n        //map<lli,lli>mp,mpp,mp1,mp2;\r\n       // map<lli,lli>::iterator itrr;\r\n     \r\n        lli i,j,k,n,m,p,res1,res2,q,t,a,b,c,maxi=INT_MIN,mini=INT_MAX,sum=0,ans=0,res=0,val=0,ans1=0,ans2=0,rem=0,diff=0,cnt=0,l,r,flag=0,e,index,val1=0,val2=0,z,h=0,u,v,mid,len,tot,fl=0;\r\n        string str,str1,str2;\r\n     \r\n        cin>>n>>m>>k;\r\n     \r\n        lli arr[n+1];\r\n     \r\n        for(i=1;i<=n;i++)\r\n        {\r\n            cin>>arr[i];\r\n        }\r\n     \r\n        l=1;\r\n        r=n+k;\r\n     \r\n        while(l<=r)\r\n        {\r\n            mid=(l+r)/2;\r\n     \r\n            flag=0;\r\n            maxi=0;\r\n     \r\n            //cout<<\"mid=\"<<mid<<endl;\r\n            memset(vis,0,sizeof(vis));\r\n            memset(mp,0,sizeof(mp));\r\n            //for(i=0;i<1000001;i++)\r\n                //mp[i]=0;\r\n     \r\n            for(i=1;i<=mid;i++)\r\n            {\r\n                if(i>n)\r\n                    continue;\r\n     \r\n                mp[arr[i]]++;\r\n                vis[mp[arr[i]]]++;\r\n                vis[mp[arr[i]]-1]--;\r\n     \r\n                st.insert(-1*mp[arr[i]]);\r\n     \r\n                if(vis[mp[arr[i]]-1]==0)\r\n                {\r\n                    st.erase(st.find(-1*(mp[arr[i]]-1)));\r\n                }\r\n                /*\r\n                if(mp[arr[i]]>1)\r\n                {\r\n                    st.erase(st.find(-1*(mp[arr[i]]-1)));\r\n                    st.insert(-1*mp[arr[i]]);\r\n                }\r\n                else\r\n                {\r\n                    st.insert(-1*mp[arr[i]]);\r\n                }\r\n                */\r\n            }\r\n     \r\n            //for(i=1;i<=7;i++)\r\n            //{\r\n             //   cout<<\"i=\"<<i<<\" \"<<\"vis=\"<<vis[i]<<endl;\r\n            //}\r\n     \r\n           // for(it=st.begin();it!=st.end();it++)\r\n            //{\r\n              //  cout<<\"it=\"<<-1*(*it)<<endl;\r\n            //}\r\n     \r\n            if((-1*(*st.begin()))+k>=mid)\r\n            {\r\n                ans=max(ans,mid);\r\n                l=mid+1;\r\n                st.clear();\r\n                continue;\r\n            }\r\n     \r\n            for(i=mid+1;i<=n;i++)\r\n            {\r\n                //cout<<\"i=\"<<i<<endl;\r\n                if(arr[i-mid]==arr[i])\r\n                    continue;\r\n     \r\n                vis[mp[arr[i-mid]]]--;\r\n                vis[mp[arr[i-mid]]-1]++;\r\n     \r\n                st.insert(-1*(mp[arr[i-mid]]-1));\r\n     \r\n                if(vis[mp[arr[i-mid]]]==0)\r\n                {\r\n                    st.erase(st.find(-1*mp[arr[i-mid]]));\r\n                }\r\n     \r\n                mp[arr[i-mid]]--;\r\n     \r\n     \r\n                mp[arr[i]]++;\r\n                vis[mp[arr[i]]]++;\r\n                vis[mp[arr[i]]-1]--;\r\n     \r\n                st.insert(-1*mp[arr[i]]);\r\n     \r\n                if(vis[mp[arr[i]]-1]==0)\r\n                {\r\n                    st.erase(st.find(-1*(mp[arr[i]]-1)));\r\n                }\r\n     \r\n                /*\r\n                st.erase(st.find(-1*mp[arr[i-mid]]));\r\n                mp[arr[i-mid]]--;\r\n     \r\n                if(mp[arr[i-mid]]>0)\r\n                    st.insert(-1*mp[arr[i-mid]]);\r\n     \r\n                mp[arr[i]]++;\r\n     \r\n               // cout<<\"midway=\"<<\"prev=\"<<arr[i-mid]<<\" \"<<\"next=\"<<arr[i]<<endl;\r\n     \r\n                if(mp[arr[i]]>1)\r\n                {\r\n                    st.erase(st.find(-1*(mp[arr[i]]-1)));\r\n                    st.insert(-1*mp[arr[i]]);\r\n                }\r\n                else\r\n                {\r\n                    st.insert(-1*mp[arr[i]]);\r\n                }\r\n                */\r\n                //cout<<\"*it=\"<<*it<<endl;\r\n     \r\n                if((-1*(*st.begin()))+k>=mid)\r\n                {\r\n                 flag=1;\r\n                 break;\r\n                }\r\n            }\r\n     \r\n            if(flag==1)\r\n            {\r\n                ans=max(ans,mid);\r\n                l=mid+1;\r\n            }\r\n            else\r\n            {\r\n                r=mid-1;\r\n            }\r\n     \r\n            st.clear();\r\n            //mp.clear();\r\n        }\r\n     \r\n        cout<<ans-k;\r\n     \r\n    }"
}