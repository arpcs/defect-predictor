{
    "id": 216784578,
    "contestId": 180,
    "creationTimeSeconds": 1690944577,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "FoceIess"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 14,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 819200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define endl '\\n'\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef pair<ll, ll> PLL;\r\ntypedef pair<int, int> PII;\r\ntypedef pair<int, string> PIS;\r\ntypedef pair<double, double> PDD;\r\nconst double eps = 1e-6;\r\nconst int N = 2e5 + 10, M = 4e4 + 10, P = 998244353, INF = 0x3f3f3f3f;\r\n\r\nint n, m;\r\nint a[N], k, res;\r\nmap<int, int> cnt;\r\n\r\nbool check(int mid)\r\n{\r\n    int tmp = 0;\r\n    cnt.clear();\r\n    for (int i = 1; i < mid; i++)\r\n    {\r\n        cnt[a[i]]++;\r\n    }\r\n    for (int i = mid; i <= n; i++)\r\n    {\r\n        cnt[a[i - mid]]--;\r\n        cnt[a[i]]++;\r\n        if (cnt[a[i]] >= mid - k)\r\n        {\r\n            tmp = (tmp, cnt[a[i]]);\r\n        }\r\n    }\r\n    if (tmp)\r\n    {\r\n        res = max(res, tmp);\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nint binary_search2(int l, int r) // \u533a\u95f4[l, r]\u88ab\u5212\u5206\u6210[l, mid - 1]\u548c[mid, r]\r\n{\r\n    while (l < r)\r\n    {\r\n        int mid = (l + r + 1) >> 1;\r\n        if (check(mid)) //\u7b54\u6848\u8fd8\u53ef\u4ee5\u66f4\u5927\r\n        {\r\n            l = mid;\r\n        }\r\n        else\r\n        {\r\n            r = mid - 1;\r\n        }\r\n    }\r\n    return l;\r\n}\r\n\r\nvoid solve()\r\n{\r\n    cin >> n >> m >> k;\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        cin >> a[i];\r\n    }\r\n    binary_search2(0, n);\r\n    cout << res << endl;\r\n}\r\n\r\nint main()\r\n{\r\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n    int T = 1;\r\n    //cin >> T;\r\n    while (T--)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}