{
    "id": 114489561,
    "contestId": 180,
    "creationTimeSeconds": 1619653480,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "Josetapia"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 50,
    "timeConsumedMillis": 498,
    "memoryConsumedBytes": 5939200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int MaxN = 2e5+10;\r\nint N, P, M;\r\nint p[MaxN];\r\n\r\nvector<int> buck[MaxN];\r\nint main() {\r\n    cin>>N>>P>>M;\r\n    for(int i = 0; i < N; i++) {\r\n        cin>>p[i];\r\n        buck[p[i]].push_back(i);\r\n    }\r\n    int ans = 1;\r\n    queue<int> line;\r\n    for(int c = 0; c < MaxN; c++) {\r\n       // if(buck[c].size() == 0) continue;\r\n        for(int i = 0; i < buck[c].size(); i++) {\r\n            line.push(buck[c][i]);\r\n            while(!line.empty() && buck[c][i]-line.front()+1-line.size() > M) {\r\n                line.pop();\r\n            } \r\n            ans = max((int) line.size(), ans);  \r\n        }\r\n        while(!line.empty()) line.pop();\r\n    }\r\n    cout<<ans<<\"\\n\";\r\n}"
}