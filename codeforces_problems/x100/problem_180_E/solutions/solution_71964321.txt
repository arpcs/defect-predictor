{
    "id": 71964321,
    "contestId": 180,
    "creationTimeSeconds": 1582797942,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "WIZNAT3R"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 50,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 2355200,
    "source": "#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp> \n#include <ext/pb_ds/tree_policy.hpp> \n\n#pragma GCC optimize (\"O3\")\n#pragma GCC optimize (\"unroll-loops\")\n#pragma GCC target(\"avx2,sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n\n//namespaces\nusing namespace __gnu_pbds; \nusing namespace std;\n\n//MACROS\n#define ld long double\n#define pb push_back\n#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n#define ll long long\n#define ull unsigned long long \n#define For(i,s,e) for (int i=(s); i<(e); i++)\n#define Fod(i,s,e) for (int i=(s); i>=(e); i--)\n#define pii pair<ll,ll>\n#define f first\n#define s second\n#define endl \"\\n\"\n#define all(container) container.begin(), container.end()\n#define mp make_pair\n#define int ll\n\n//debug\n#define TRACE\n#ifndef ONLINE_JUDGE\n#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)\ntemplate <typename Arg1>\nvoid __f(const char* name, Arg1&& arg1){\n    cerr << name << \" : \" << arg1 << endl;\n}\ntemplate <typename Arg1, typename... Args>\nvoid __f(const char* names, Arg1&& arg1, Args&&... args){\n    const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << \" : \" << arg1<<\" | \";__f(comma+1, args...);\n}\n#else\n#define trace(...)\n#endif\n\n//Templates\ntemplate <typename T>\nusing ordered_set =tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\ntemplate <class T> ostream& operator << (ostream &os, const vector<T> &v) { for (T i : v) os << i << ' '; return os; }\ntemplate <class T> ostream& operator << (ostream &os, const set<T> &v) { for (T i : v) os << i << ' '; return os; }\ntemplate <class T, class S> ostream& operator << (ostream &os, const pair<T, S> &v) { os << v.first << ' ' << v.second; return os; }\ntemplate <class T, class S> ostream& operator << (ostream &os, const unordered_map<T, S> &v) { for (auto i : v) os << '(' << i.first << \"=>\" << i.second << ')' << ' '; return os; }\n\n//globals\nll const prime1 = 304933;\nll const prime2 = 15486277;\nll const mod = 1e9+7;\nll const inf = 1e18;\nll const mod2 = 1e17 + 7;\nll const mult = 53;\nll const size_1d = 1e6 + 7;\nll const size_2d = 1e3 + 7;\n\n//functions\nll power(ll x, ll y, ll mod = 2e18){ ll ans = 1;x %= mod;while(y){if(y&1)ans = (x * ans) % mod;x = (x * x) % mod;y >>= 1;}return ans;}\nll modInverse(ll a, ll m){ll m0 = m;ll y = 0, x = 1;if (m == 1) return 0;while (a > 1){ ll q = a / m;ll t = m;m = a % m,a = t;t = y;y = x - q * y;x = t;}if(x < 0) x += m0;return x;} \nll gcdext(ll a,ll b,ll *x = 0, ll *y = 0){if(a == 0){*x = 0;*y = 1;return b;}ll x1,y1;ll gcd1 = gcdext(b%a,a,&x1,&y1);*x = y1 - (b/a)*x1;*y = x1;return gcd1;}\nint randomize(){return (rand()%10000);} \n\n// CODE STARTS HERE\nbool check(int mid,int k,int n,int m,std::vector<int> &v){\n    int freq[m + 1] = {0};\n    int ans = 0;\n    bool check = false;\n    for (int i = 0; i < min(mid + k,n); ++i)\n    {\n        freq[v[i]]++;\n        if(freq[v[i]] >= mid)\n            check = true;\n    }\n    // trace(s);\n    for (int i = mid + k; i < n; ++i)\n    {\n        freq[v[i]]++;\n        freq[v[i - mid - k]]--;\n        if(freq[v[i]] >= mid)\n            check = true;\n    }\n    // trace(ans,mid);\n    return check;\n}\nsigned main(){\n    IOS\n    int n,m,k;cin >> n >> m >> k;\n    std::vector<int> v(n);\n    for (int i = 0; i < n; ++i)\n    {\n        cin >> v[i];\n    }\n    int low = 0,high = n;\n    int ans = -1;\n    while(low <= high){\n        int mid = (high + low) >> 1;\n        if(check(mid,k,n,m,v)){\n            ans = mid;\n            low = mid + 1;\n        }\n        else high = mid - 1;\n    }\n    cout << ans << endl;\n    return 0;\n}"
}