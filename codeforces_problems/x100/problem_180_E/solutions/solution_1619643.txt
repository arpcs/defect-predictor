{
    "id": 1619643,
    "contestId": 180,
    "creationTimeSeconds": 1335263002,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "bigoceanlhy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 10,
    "memoryConsumedBytes": 4198400,
    "source": "#include<cstdio>\r\n#include<cstring>\r\n#include<cmath>\r\n#include<iostream>\r\n#include<string>\r\n#include<algorithm>\r\n#include<vector>\r\n#include<queue>\r\n#include<map>\r\nusing namespace std;\r\nconst int MAXN = 200000+5, MAXM = 100000+5;\r\nconst int MAXH = 1000007;\r\nint n, m, k, c[MAXN];\r\nint s, r, ans, p[MAXN];\r\nvector<int> V[MAXM];\r\nvoid find(int x, int y)\r\n{\r\n    int mid = (x+y)>>1;\r\n    int z = (V[r][mid]-s)-(mid-p[s]);\r\n    if (z <= k)\r\n    {\r\n        ans = max(ans, mid-p[s]+1);\r\n        if (x != y) find(mid+1, y);\r\n    }\r\n}\r\nint main()\r\n{\r\n\r\n//    freopen(\"output.txt\", \"w\", stdout);\r\n    scanf(\"%d%d%d\", &n, &m, &k);\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        scanf(\"%d\", &c[i]);\r\n        V[c[i]].push_back(i);\r\n        p[i] = V[c[i]].size()-1;\r\n    }\r\n//    for (int i = 1; i <= m; i++)\r\n//        for (int j = 0; j < V[i].size(); j++)\r\n//            printf(\"%d\\n\", V[i][j]);\r\n    ans = 0;\r\n    for (s = 1; s <= n; s++)\r\n    {\r\n        r = c[s];\r\n        find(p[s], V[r].size()-1);\r\n    }\r\n    printf(\"%d\\n\", ans);\r\n    return 0;\r\n}\r\n"
}