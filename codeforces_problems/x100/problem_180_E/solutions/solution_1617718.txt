{
    "id": 1617718,
    "contestId": 180,
    "creationTimeSeconds": 1335163310,
    "relativeTimeSeconds": 5930,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "jskhirtladze"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1335157380
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 35,
    "timeConsumedMillis": 80,
    "memoryConsumedBytes": 7884800,
    "source": "#include <algorithm>\r\n#include <stdio.h>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nconst int N=100000+10;\r\nconst int maxmax=2*N;\r\nint n,m,x[2*N],kk,i,j,z,res,dif[2*N],all[N],h[N],r,l,tmp,k;\r\nvector <int> start[N],last[N],cnt[N];\r\n\r\nmain()\r\n{\r\n scanf(\"%d%d%d\",&n,&m,&kk);\r\n for ( i=0;i<n;i++ )\r\n  scanf(\"%d\",&x[i]);\r\n\r\n for ( i=0;i<n;i++ )\r\n  if ( i>0 && x[i]==x[i-1] )\r\n   {\r\n    j=x[i];\r\n    all[j]++; h[j]++;\r\n    z=start[j].size()-1;\r\n    last[j][z]=i;\r\n    cnt[j][z]++;\r\n   }\r\n  else\r\n   {\r\n    j=x[i];\r\n    all[j]++; h[j]++;\r\n    start[j].push_back(i);\r\n    last[j].push_back(i);\r\n    cnt[j].push_back(1);\r\n   }\r\n\r\n sort(h+1,h+m+1);\r\n for (k=1;k<=m;k++ )\r\n  if ( all[k]>h[max(0,m-70)] )\r\n  {\r\n   n=start[k].size();\r\n   if ( n==0 ) continue;\r\n //  if ( n==1 ) { res=max(res,cnt[k][0]); continue; };\r\n   for ( j=1;j<n;j++ )\r\n     dif[j]=dif[j-1]+start[k][j]-last[k][j-1]-1;\r\n   dif[n]=dif[n-1]+maxmax;\r\n\r\n   tmp=cnt[k][0];\r\n   r=0;\r\n   for (l=0;l<n;l++ )\r\n    {\r\n     while ( dif[r+1]-dif[l]<=kk )\r\n      {\r\n       r++;\r\n       tmp+=cnt[k][r];\r\n      }\r\n     res=max(res,tmp);\r\n     if ( r==n-1 ) break;\r\n     tmp-=cnt[k][l];\r\n    }\r\n  }\r\n\r\n printf(\"%d\\n\",res);\r\n}\r\n"
}