{
    "id": 1611474,
    "contestId": 180,
    "creationTimeSeconds": 1335084005,
    "relativeTimeSeconds": 6005,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "xianbin5"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 7065600,
    "source": "#include <stdio.h>\r\n#include <string.h>\r\n#include <iostream>\r\n#include <algorithm>\r\nusing namespace std;\r\n#define min(a,b) (a)<(b)?(a):(b)\r\n#define max(a,b) (a)>(b)?(a):(b)\r\n\r\nstruct node\r\n{\r\n    int value;\r\n    int tag;\r\n    int last;\r\n    int next;\r\n    int num;\r\n}list[200003];\r\nint tt[200003];\r\n\r\nint total[200003]={0};\r\nint main()\r\n{\r\n    int i,n,m,k,ans = 0;\r\n    memset(tt,-1,sizeof(tt));\r\n    scanf(\"%d%d%d\",&n,&m,&k);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        list[i].tag = i+1;\r\n        scanf(\"%d\",&list[i].value);\r\n        total[list[i].value]++;\r\n        if(tt[list[i].value] == -1)\r\n            list[i].num = 1;\r\n        else list[i].num = list[tt[list[i].value]].num + 1;\r\n        list[i].last = tt[list[i].value];\r\n        if(tt[list[i].value] != -1)\r\n            list[tt[list[i].value]].next = i;\r\n        tt[list[i].value] = i;\r\n    }\r\n    ans = k;\r\n\r\n    for(i=n-1;i>=0;i--)\r\n    {\r\n        if(i == tt[list[i].value])\r\n            continue;\r\n        if(tt[list[i].value] - i > k + list[tt[list[i].value]].num - list[i].num)\r\n        {\r\n            ans = max(ans,list[tt[list[i].value]].num - list[list[i].next].num +1);\r\n            while(tt[list[i].value] - i > k + list[tt[list[i].value]].num - list[i].num)\r\n              tt[list[i].value] = list[tt[list[i].value]].last;\r\n        }\r\n    }\r\n    for(i=1;i<=m;i++)\r\n    if(tt[i]>=0)\r\n        ans = max(ans,list[tt[i]].num);\r\n    printf(\"%d\\n\",ans);\r\n    return 0;\r\n}\r\n"
}