{
    "id": 3338661,
    "contestId": 180,
    "creationTimeSeconds": 1363538161,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 180,
        "index": "E",
        "name": "Cubes",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 180,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335078000
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1228800,
    "source": "#include<iostream>\n#include<vector>\n\nusing namespace std;\n\n\nint main()\n{\n    vector<int> vec[100005];\n    int n,m,k;\n    cin>>n>>m>>k;\n    for(int i=1;i<=m;i++)\n        vec[i].push_back(0);\n    int x,j;\n    for(int i=0;i<n;i++)\n    {\n        cin>>x;\n        j = vec[x].size();\n        if(vec[x][j-1] >-1)\n            vec[x][j-1]++;\n        else\n            vec[x].push_back(1);\n        for(int l=1;l<x;l++)\n        {\n            j = vec[l].size();\n            if(vec[l][j-1] < 1)\n                vec[l][j-1]--;\n            else\n                vec[l].push_back(-1);\n        }\n        for(int l=x+1;l<=m;l++)\n        {\n            j = vec[l].size();\n            if(vec[l][j-1] < 1)\n                vec[l][j-1]--;\n            else\n                vec[l].push_back(-1);\n        }\n    }\n\n//    for(int i=1;i<=m;i++)\n//    {\n//        for(j=0;j<vec[i].size();j++)\n//            cout<<vec[i][j]<<\" \";\n//        cout<<endl;\n//    }\n\n    int MAX=-1,mx=-1;\n    for(int i=1;i<=m;i++)\n    {\n        j=0;\n        if(vec[i][j] < 0)\n            j = 1;\n        int total,lim=0,start=j ;\n        total = vec[i][j];\n        //cout<<total<<endl;\n        mx = total;\n        j +=2;\n        for(;j<vec[i].size();j+=2)\n        {\n            lim += vec[i][j-1];\n            while(lim*-1 > k)\n            {\n                total -= vec[i][start];\n                lim -= vec[i][start+1];\n                start += 2;\n            }\n            total += vec[i][j];\n            //cout<<total<<endl;\n            mx = max(mx,total);\n        }\n\n        MAX  = max(MAX,mx);\n\n    }\n\n    cout<<MAX<<endl;\n\n\n}\n\n    \t  \t \t\t  \t\t   \t \t  \t  \t"
}