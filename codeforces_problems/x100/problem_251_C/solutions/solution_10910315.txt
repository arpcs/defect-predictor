{
    "id": 10910315,
    "contestId": 251,
    "creationTimeSeconds": 1430146374,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 251,
        "members": [
            {
                "handle": "1401826426"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354807800
    },
    "programmingLanguage": "GNU C++",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 2457600,
    "source": "#include<cstdio>\r\n#include<cstring>\r\n#include<iostream>\r\n#include<queue>\r\nusing namespace std ;\r\nconst int maxn = 100010 ;\r\nint vis[maxn] ;\r\nstruct node\r\n{\r\n    __int64 step;\r\n    __int64 value ;\r\n};\r\nint gcd(int a , int b)\r\n{\r\n    if(a < b)\r\n    swap(a,b);\r\n    if(b == 0)\r\n    return a ;\r\n    return gcd(b, a%b) ;\r\n}\r\nint lcm(int a,int b)\r\n{\r\n    return a*b/gcd(a,b) ;\r\n}\r\nqueue<struct node>que;\r\n__int64 bfs(__int64 n ,__int64 k ,__int64 en)\r\n{\r\n    while(que.size())que.pop();\r\n    struct node first = {0,n} ;\r\n    que.push(first) ;\r\n    vis[n] = 1;\r\n    memset(vis, 0 ,sizeof(vis)) ;\r\n    while(que.size())\r\n    {\r\n        struct node now = que.front() ;\r\n        que.pop() ;\r\n        //cout<<now.value<<\" \"<<now.step<<\" \"<<en<<endl;\r\n        if((__int64)now.value == en)\r\n            return now.step;\r\n        for(int i = 1;i <= k;i++)\r\n        {\r\n           __int64 t ;\r\n           if(i == 1)t = now.value - 1;\r\n           else t = now.value - now.value%i;\r\n           if(t<0 || vis[t])continue ;\r\n           struct node next = {now.step+1 , t} ;\r\n           que.push(next) ;\r\n           vis[t] = 1;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\nint main()\r\n{\r\n    //freopen(\"input.txt\",\"r\",stdin) ;\r\n    __int64 a , b , k;\r\n    while(~scanf(\"%I64d%I64d%I64d\" ,&a ,&b ,&k))\r\n    {\r\n        int sum= 2;\r\n        if(k == 2)\r\n        {\r\n            printf(\"%I64d\\n\" ,b - a) ;\r\n            continue ;\r\n        }\r\n        for(int i = 3;i <= k;i++)\r\n        sum = lcm(sum , i) ;\r\n        __int64 first = (b+(__int64)sum-1)/(__int64)sum;\r\n        __int64 last = a/(__int64)sum;\r\n        __int64 ans ;\r\n        //cout<<first<<\" \"<<last<<\" \"<<sum<<endl;\r\n        if(last > 0)\r\n        {\r\n            ans=(last - first)*(bfs((sum-1) , k , 0) + 1);\r\n           // cout<<ans<<endl;\r\n            ans += bfs(sum,k,b%sum);\r\n           // cout<<ans<<endl;\r\n            ans += bfs(a,k,sum);\r\n            //cout<<ans<<endl;\r\n        }\r\n        else ans = bfs(a , k ,(__int64)b);\r\n        printf(\"%I64d\\n\" ,ans) ;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
}