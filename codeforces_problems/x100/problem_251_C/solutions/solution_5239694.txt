{
    "id": 5239694,
    "contestId": 251,
    "creationTimeSeconds": 1385430209,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 251,
        "members": [
            {
                "handle": "PIAOYI"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354807800
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "//#include<cstdio>\r\n//#include<cstring>\r\n//#include<string>\r\n//#include<iostream>\r\n//#include<algorithm>\r\n//using namespace std;\r\n//\r\n//struct mF {\r\n//    int date[24];\r\n//}m1;\r\n//int ans, n;\r\n//int dir[][24] = {\r\n//    {2, 0, 1, 3, 6, 7, 11, 10, 23, 22, 15, 14, 8, 9, 13, 12, 4, 5, 20, 21, 16, 17, 19, 18},\r\n//    {0, 1, 3, 2, 4, 5, 13, 12, 8, 9, 20, 21, 6, 7, 15, 14, 23, 22, 11, 10, 17, 19, 18, 16},\r\n//    {20, 1, 3, 22, 10, 4, 5, 11, 8, 9, 15, 14, 0, 7, 13, 2, 23, 18, 16, 21, 6, 17, 19, 12},\r\n//    {0, 21, 23, 2, 4, 5, 11, 10, 9, 15, 14, 8, 6, 1, 3, 12, 19, 22, 20, 17, 16, 7, 13, 18},\r\n//    {10, 14, 3, 2, 18, 5, 11, 19, 8, 0, 1, 4, 6, 7, 13, 12, 22, 20, 21, 23, 16, 17, 9, 15},\r\n//    {0, 1, 5, 11, 4, 16, 17, 10, 2, 9, 15, 3, 12, 6, 7, 13, 23, 22, 20, 21, 14, 8, 19, 18},\r\n//};\r\n//\r\n//int check(mF m, int a, int b, int c, int d)\r\n//{\r\n//    if(m.date[a] == m.date[b] && m.date[b] == m.date[c] && m.date[c] == m.date[d])\r\n//        return 1;\r\n//    return 0;\r\n//}\r\n//int Cal(mF m)\r\n//{\r\n//    int sum = 0;\r\n//    sum += check(m, 0, 1, 2, 3);\r\n//    sum += check(m, 4, 5, 10, 11);\r\n//    sum += check(m, 6, 7, 12, 13);\r\n//    sum += check(m, 8, 9, 14, 15);\r\n//    sum += check(m, 16, 17, 18, 19);\r\n//    sum += check(m, 20, 21, 22, 23);\r\n//    return sum;\r\n//}\r\n//void dfs(mF f, int k)\r\n//{\r\n//    ans = max(ans, Cal(f));\r\n//    if(k > n || ans == 6)\r\n//        return;\r\n//    for(int i = 0;i <= 5;i++)\r\n//    {\r\n//        mF tmpF;\r\n//        for(int j = 0;j < 24;j++)\r\n//            tmpF.date[i] = f.date[ dir[i][j] ];\r\n//        dfs(tmpF, k+1);\r\n//    }\r\n//}\r\n//int main()\r\n//{\r\n//    freopen(\"input.txt\", \"r\", stdin);\r\n//    int i, j;\r\n//    while(~scanf(\"%d\", &n))\r\n//    {\r\n//        ans = 0;\r\n//        for(i = 0;i < 24;i++)\r\n//            scanf(\"%d\", &m1.date[i]);\r\n//        dfs(m1, 1);\r\n//        printf(\"%d\\n\", ans);\r\n//    }\r\n//}\r\n\r\n#include<cstdio>\r\n#include<iostream>\r\n#include<map>\r\n#include<algorithm>\r\n#include<queue>\r\nusing namespace std;\r\ntypedef long long LL;\r\n\r\nclass oper {\r\n    public :\r\n        LL k, g;\r\n        LL a, b;\r\n        oper() {}\r\n        oper(LL aa, LL bb, LL kk) {\r\n            a = aa;\r\n            b = bb;\r\n            k = kk;\r\n            g = 1;\r\n        }\r\n        LL gcd(LL x, LL y) {\r\n            return y ? gcd(y, x%y) : x;\r\n        }\r\n        LL lcm(LL x, LL y) {\r\n            return x * y / gcd(x, y);\r\n        }\r\n        void setg() {\r\n            for(int i = 2;i <= k;i++)\r\n                g = lcm(g, i);\r\n        }\r\n        LL solve() {\r\n            LL ans = 0;\r\n            LL bx = b / g * g + g;\r\n            LL ax = a / g * g;\r\n            if(bx > ax)\r\n                ans = bfs(a, b);\r\n            else\r\n                ans = bfs(a, ax) + bfs(2*g, g)*(ax - bx)/g + bfs(bx, b);\r\n        }\r\n        LL bfs(LL x, LL y){\r\n            pair<LL ,LL> p, p1;\r\n            map<LL, int> M;\r\n            queue< pair<LL, LL> > Q;\r\n            p = make_pair(x, 0);\r\n            Q.push(p);\r\n            while(!Q.empty()) {\r\n                p = Q.front();\r\n                Q.pop();\r\n                for(int i = 2;i <= k+1;i++) {\r\n                    LL tmp = p.first % i;\r\n                    if(i == k+1)\r\n                        tmp = 1;\r\n                    LL res = p.first - tmp;\r\n                    if(M[res])    continue;\r\n                    M[res] = 1;\r\n                    if(res == y)\r\n                        return p.second + 1;\r\n                    if(res < 0)\r\n                        continue;\r\n                    p1 = make_pair(res, p.second+1);\r\n                    Q.push(p1);\r\n                }\r\n            }\r\n            return 0;\r\n        }\r\n};\r\nint main()\r\n{\r\n    LL i, j, a, b, k;\r\n   \r\n    while(cin >> a >> b >> k)\r\n    {\r\n        oper p(a, b, k);\r\n        p.setg();\r\n        \r\n        cout << p.solve() <<endl;\r\n    }\r\n}\r\n"
}