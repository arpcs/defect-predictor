{
    "id": 42273346,
    "contestId": 251,
    "creationTimeSeconds": 1535622247,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 251,
        "members": [
            {
                "handle": "toxzi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354807800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n\r\nll a, b, k;\r\n\r\nint solve(ll b, ll a){\r\n    int an = 0;\r\n    vector < int > x;\r\n    for(int i = 2; i <= k; i++){\r\n        x.push_back(i);\r\n    }\r\n    while(a != b){\r\n        vector < int > tmp;\r\n        ll mn = a - 1;\r\n        for(int u : x){\r\n            int t = u;\r\n            ll v = a - (a % t);\r\n            if(v >= b){\r\n                tmp.push_back(u);\r\n                mn = min(mn, v);\r\n            }\r\n        }\r\n        a = mn;\r\n        x = tmp;\r\n        an++;\r\n    }\r\n    return an;\r\n}\r\n\r\nint LCM(int a, int b){\r\n    return a * b / __gcd(a, b);\r\n}\r\n\r\nint main()\r\n{\r\n    scanf(\"%I64d %I64d %I64d\", &a, &b, &k);\r\n    int lcm = 2;\r\n    for(int i = 3; i <= k; i++){\r\n        lcm = LCM(lcm, i);\r\n    }\r\n    if(a - b < 1500000) printf(\"%d\", solve(b, a));\r\n    else{\r\n        ll l = (b + lcm - 1) / lcm * lcm;\r\n        ll r = (a + lcm - 1) / lcm * lcm - lcm;\r\n        ll an1 = solve(b, l-1);\r\n        ll an2 = solve(r, a);\r\n        ll an3 = (solve(l, l + lcm-1) + 1) * ((r - l) / lcm);\r\n        printf(\"%I64d\\n\", an1 + an2 + an3 + 1);\r\n    }\r\n    return 0;\r\n}\r\n"
}