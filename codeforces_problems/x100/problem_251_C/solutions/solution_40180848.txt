{
    "id": 40180848,
    "contestId": 251,
    "creationTimeSeconds": 1531248068,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 251,
        "members": [
            {
                "handle": "mredigonda"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354807800
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 1528,
    "memoryConsumedBytes": 13824000,
    "source": "#include <vector>\r\n#include <map>\r\n#include <set>\r\n#include <algorithm>\r\n#include <iostream>\r\n#include <cstdio>\r\n#include <cmath>\r\n#include <cstring>\r\n#include <cassert>\r\n#include <queue>\r\n#include <bitset>\r\n#include <unordered_map>\r\nusing namespace std;\r\n#define forr(i, a, b) for(ll i = (a); i < (ll) (b); i++)\r\n#define forn(i, n) forr(i, 0, n)\r\n#define pb push_back\r\n#define fst first\r\n#define snd second\r\n#define SZ(x) ((int)x.size())\r\ntypedef long long ll;\r\n#define dforn(i, n) for(ll i = n - 1; i >= 0; i--)\r\nconst int MAXN=-1;\r\nconst ll INF=1e18;\r\n\r\nll a,b,k,l,lo,hi,fact[20];\r\nunordered_map<ll,ll>DP;\r\n\r\nll gcd(ll a, ll b){\r\n  if(b==0)return a;\r\n  return gcd(b,a%b);\r\n}\r\n\r\nll solve(ll a, ll b){ // returns min number of steps to get from a to b\r\n  //~ printf(\"Calculando solve(%lld,%lld)\\n\",a,b);\r\n  DP.clear();\r\n  if(a==b)return 0;\r\n  forr(i,b,a+1)DP[i]=INF;\r\n  DP[a]=0;\r\n  for(ll t=a;t>b;t--){\r\n    //~ printf(\"DP[%lld]=%lld\\n\",t,DP[t]);\r\n    DP[t-1]=min(DP[t-1],DP[t]+1);\r\n    forr(d,2,k+1){\r\n      DP[t-t%d]=min(DP[t-t%d],DP[t]+1);\r\n    }\r\n  }\r\n  //~ printf(\"Get => %lld\\n\",DP[b]);\r\n  return DP[b];\r\n}\r\n\r\nint main() {\r\n  fact[2]=2;\r\n  fact[3]=4;\r\n  fact[4]=6;\r\n  fact[5]=24;\r\n  fact[6]=20;\r\n  fact[7]=108;\r\n  fact[8]=184;\r\n  fact[9]=476;\r\n  fact[10]=410;\r\n  fact[11]=3946;\r\n  fact[12]=3722;\r\n  fact[13]=41784;\r\n  fact[14]=38382;\r\n  fact[15]=35242;\r\n  //~ freopen(\"input.in\",\"r\",stdin);\r\n  while(scanf(\"%lld%lld%lld\",&a,&b,&k)>=1){\r\n    l=1; forr(f,2,k+1) l=(l*f)/gcd(l,f);\r\n    hi=a/l;lo=(b+l-1)/l;\r\n    if(lo<=hi){\r\n      printf(\"%lld\\n\",solve(a,hi*l)+fact[k]*(hi-lo)+solve(lo*l,b));\r\n    } else {\r\n      printf(\"%lld\\n\",solve(a,b));\r\n    }\r\n  }\r\n  return 0;\r\n}\r\n"
}