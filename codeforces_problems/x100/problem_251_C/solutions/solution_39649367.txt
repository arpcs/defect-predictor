{
    "id": 39649367,
    "contestId": 251,
    "creationTimeSeconds": 1529929697,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 251,
        "members": [
            {
                "handle": "amnesiac_dusk"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354807800
    },
    "programmingLanguage": "Java 8",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 312,
    "memoryConsumedBytes": 0,
    "source": "import java.io.*;\r\nimport java.util.*;\r\n/*\r\n * Heart beats fast\r\n * \t\tColors and promises\r\n * \t\t\tHow to be brave\r\n * \t\t\t\tHow can I love when I am afraid...\r\n */\r\n//read the question correctly (is y a vowel? what are the exact constraints?)\r\n//look out for SPECIAL CASES (n=1?) and overflow (ll vs int?)\r\n//always declare multidimensional arrays as [2][n] not [n][2]\r\n//it can lead to upto 2-3x diff in runtime\r\n//declare int/long tries with 16 array size due to object overhead :D\r\npublic class Main\r\n{\r\n\tpublic static void main(String[] args) throws Exception\r\n\t{\r\n\t\tlong a=nl(),b=nl(),k=ni();\r\n\t\tlong lcm=1;\r\n\t\tfor(int i=2; i<=k; i++)\r\n\t\t\tlcm=(i*lcm)/gcd(i,lcm);\r\n\t\tint ct=0;\r\n\t\tlong ub=((b+lcm-1)/lcm)*lcm,la=a-a%lcm;\r\n\t\tlong dif=(la-ub)/lcm;\r\n\t\twhile(lcm>0)\r\n\t\t{\r\n\t\t\tct++;\r\n\t\t\tlong te=lcm-1;\r\n\t\t\tfor(int i=2; i<=k; i++)\r\n\t\t\t\tif(lcm-lcm%i>=0)\r\n\t\t\t\t\tte=Math.min(te,lcm-lcm%i);\r\n\t\t\tlcm=te;\r\n\t\t}\r\n\t\tlong ans=0;\r\n\t\tif(ub>=la)\r\n\t\t{\r\n\t\t\twhile(a>b)\r\n\t\t\t{\r\n\t\t\t\tans++;\r\n\t\t\t\tlong te=a-1;\r\n\t\t\t\tfor(int i=2; i<=k; i++)\r\n\t\t\t\t\tif(a-a%i>=b)\r\n\t\t\t\t\t\tte=min(te,a-a%i);\r\n\t\t\t\ta=te;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twhile(a>la)\r\n\t\t\t{\r\n\t\t\t\tans++;\r\n\t\t\t\tlong te=a-1;\r\n\t\t\t\tfor(int i=2; i<=k; i++)\r\n\t\t\t\t\tif(a-a%i>=la)\r\n\t\t\t\t\t\tte=min(te,a-a%i);\r\n\t\t\t\ta=te;\r\n\t\t\t}\r\n\t\t\twhile(ub>b)\r\n\t\t\t{\r\n\t\t\t\tans++;\r\n\t\t\t\tlong te=ub-1;\r\n\t\t\t\tfor(int i=2; i<=k; i++)\r\n\t\t\t\t\tif(ub-ub%i>=b)\r\n\t\t\t\t\t\tte=min(te,ub-ub%i);\r\n\t\t\t\tub=te;\r\n\t\t\t}\r\n\t\t\tans+=ct*(dif);\r\n\t\t}\r\n\t\tpr(ans);\r\n\t\tSystem.out.print(output);\r\n\t}\r\n\t///////////////////////////////////////////\r\n\t///////////////////////////////////////////\r\n\t///template from here\r\n\tstatic class pair\r\n\t{\r\n\t\tint a, b;\r\n\t\tpair(){}\r\n\t\tpair(int c,int d){a=c;b=d;}\r\n\t}\r\n\tstatic interface combiner\r\n\t{\r\n\t\tpublic int combine(int a, int b);\r\n\t}\r\n\tstatic final int mod=1000000007;\r\n\tstatic final double eps=1e-9;\r\n\tstatic final long inf=100000000000000000L;\r\n\tstatic Reader in=new Reader();\r\n\tstatic StringBuilder output=new StringBuilder();\r\n\tstatic Random rn=new Random();\r\n\tstatic void reverse(int[]a){for(int i=0; i<a.length/2; i++){a[i]^=a[a.length-i-1];a[a.length-i-1]^=a[i];a[i]^=a[a.length-i-1];}}\r\n\tstatic void sort(int[]a)\r\n\t{\r\n\t\tint te;\r\n\t\tfor(int i=0; i<a.length; i+=2)\r\n\t\t{\r\n\t\t\tte=rn.nextInt(a.length);\r\n\t\t\tif(i!=te)\r\n\t\t\t{\r\n\t\t\t\ta[i]^=a[te];\r\n\t\t\t\ta[te]^=a[i];\r\n\t\t\t\ta[i]^=a[te];\r\n\t\t\t}\r\n\t\t}\r\n\t\tArrays.sort(a);\r\n\t}\r\n\tstatic void sort(long[]a)\r\n\t{\r\n\t\tint te;\r\n\t\tfor(int i=0; i<a.length; i+=2)\r\n\t\t{\r\n\t\t\tte=rn.nextInt(a.length);\r\n\t\t\tif(i!=te)\r\n\t\t\t{\r\n\t\t\ta[i]^=a[te];\r\n\t\t\ta[te]^=a[i];\r\n\t\t\ta[i]^=a[te];\r\n\t\t\t}\r\n\t\t}\r\n\t\tArrays.sort(a);\r\n\t}\r\n\tstatic void sort(double[]a)\r\n\t{\r\n\t\tint te;\r\n\t\tdouble te1;\r\n\t\tfor(int i=0; i<a.length; i+=2)\r\n\t\t{\r\n\t\t\tte=rn.nextInt(a.length);\r\n\t\t\tif(i!=te)\r\n\t\t\t{\r\n\t\t\tte1=a[te];\r\n\t\t\ta[te]=a[i];\r\n\t\t\ta[i]=te1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tArrays.sort(a);\r\n\t}\r\n\tstatic void sort(int[][]a)\r\n\t{\r\n\t\tArrays.sort(a, new Comparator<int[]>()\r\n\t\t{\r\n\t\t\tpublic int compare(int[]a,int[]b)\r\n\t\t\t{\r\n\t\t\t\tif(a[0]>b[0])\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\tif(b[0]>a[0])\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tstatic void sort(pair[]a)\r\n\t{\r\n\t\tArrays.sort(a,new Comparator<pair>()\r\n\t\t\t\t{\r\n\t\t\t@Override\r\n\t\t\tpublic int compare(pair a,pair b)\r\n\t\t\t{\r\n\t\t\t\tif(a.a>b.a)\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\tif(b.a>a.a)\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\t\t});\r\n\t}\r\n\tstatic int log2n(long a)\r\n\t{\r\n\t\tint te=0;\r\n\t\twhile(a>0)\r\n\t\t{\r\n\t\t\ta>>=1;\r\n\t\t\t++te;\r\n\t\t}\r\n\t\treturn te;\r\n\t}\r\n\tstatic class vectorl implements Iterable<Long>\r\n\t{\r\n\t\tlong a[];\r\n\t\tint size;\r\n\t\tvectorl(){a=new long[10];size=0;}\r\n\t\tvectorl(int n){a=new long[n];size=0;}\r\n\t\tpublic void add(long b){if(++size==a.length)a=Arrays.copyOf(a, 2*size);a[size-1]=b;}\r\n\t\tpublic void sort(){Arrays.sort(a, 0, size);}\r\n\t\tpublic void sort(int l, int r){Arrays.sort(a, l, r);}\r\n\t\t@Override\r\n\t\tpublic Iterator<Long> iterator() {\r\n\t\t\tIterator<Long> hola=new Iterator<Long>()\r\n\t\t\t\t\t{\r\n\t\t\t\tint cur=0;\r\n\t\t\t\t\t\t@Override\r\n\t\t\t\t\t\tpublic boolean hasNext() {\r\n\t\t\t\t\t\t\treturn cur<size;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t@Override\r\n\t\t\t\t\t\tpublic Long next() {\r\n\t\t\t\t\t\t\treturn a[cur++];\r\n\t\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t\t};\r\n\t\t\treturn hola;\r\n\t\t}\r\n\t}\r\n\tstatic class vector implements Iterable<Integer>\r\n\t{\r\n\t\tint a[],size;\r\n\t\tvector(){a=new int[10];size=0;}\r\n\t\tvector(int n){a=new int[n];size=0;}\r\n\t\tpublic void add(int b){if(++size==a.length)a=Arrays.copyOf(a, 2*size);a[size-1]=b;}\r\n\t\tpublic void sort(){Arrays.sort(a, 0, size);}\r\n\t\tpublic void sort(int l, int r){Arrays.sort(a, l, r);}\r\n\t\t@Override\r\n\t\tpublic Iterator<Integer> iterator() {\r\n\t\t\tIterator<Integer> hola=new Iterator<Integer>()\r\n\t\t\t\t\t{\r\n\t\t\t\tint cur=0;\r\n\t\t\t\t\t\t@Override\r\n\t\t\t\t\t\tpublic boolean hasNext() {\r\n\t\t\t\t\t\t\treturn cur<size;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t@Override\r\n\t\t\t\t\t\tpublic Integer next() {\r\n\t\t\t\t\t\t\treturn a[cur++];\r\n\t\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t\t};\r\n\t\t\treturn hola;\r\n\t\t}\r\n\t}\r\n\t//output functions////////////////\r\n\tstatic void pr(Object a){output.append(a+\"\\n\");}\r\n\tstatic void pr(){output.append(\"\\n\");}\r\n\tstatic void p(Object a){output.append(a);}\r\n\tstatic void pra(int[]a){for(int i:a)output.append(i+\" \");output.append(\"\\n\");}\r\n\tstatic void pra(long[]a){for(long i:a)output.append(i+\" \");output.append(\"\\n\");}\r\n\tstatic void pra(String[]a){for(String i:a)output.append(i+\" \");output.append(\"\\n\");}\r\n\tstatic void pra(double[]a){for(double i:a)output.append(i+\" \");output.append(\"\\n\");}\r\n\tstatic void sop(Object a){System.out.println(a);}\r\n\tstatic void flush(){System.out.println(output);output=new StringBuilder();}\r\n\t//////////////////////////////////\r\n\t//input functions/////////////////\r\n\tstatic int ni(){return Integer.parseInt(in.next());}\r\n\tstatic long nl(){return Long.parseLong(in.next());}\r\n\tstatic String ns(){return in.next();}\r\n\tstatic double nd(){return Double.parseDouble(in.next());}\r\n\tstatic int[] nia(int n){int a[]=new int[n];for(int i=0; i<n; i++)a[i]=ni();return a;}\r\n\tstatic int[] pnia(int n){int a[]=new int[n+1];for(int i=1; i<=n; i++)a[i]=ni();return a;}\r\n\tstatic long[] nla(int n){long a[]=new long[n];for(int i=0; i<n; i++)a[i]=nl();return a;}\r\n\tstatic String[] nsa(int n){String a[]=new String[n];for(int i=0; i<n; i++)a[i]=ns();return a;}\r\n\tstatic double[] nda(int n){double a[]=new double[n];for(int i=0; i<n; i++)a[i]=nd();return a;}\r\n\t//////////////////////////////////\r\n\t//some utility functions\r\n\tstatic void exit(){System.out.print(output);System.exit(0);}\r\n\tstatic int min(int... a){int min=a[0];for(int i:a)min=Math.min(min, i);return min;}\r\n\tstatic int max(int... a){int max=a[0];for(int i:a)max=Math.max(max, i);return max;}\t\r\n\tstatic int gcd(int... a){int gcd=a[0];for(int i:a)gcd=gcd(gcd, i);return gcd;}\t\r\n\tstatic long min(long... a){long min=a[0];for(long i:a)min=Math.min(min, i);return min;}\r\n\tstatic long max(long... a){long max=a[0];for(long i:a)max=Math.max(max, i);return max;}\t\r\n\tstatic long gcd(long... a){long gcd=a[0];for(long i:a)gcd=gcd(gcd, i);return gcd;}\t\r\n\tstatic String pr(String a, long b){String c=\"\";while(b>0){if(b%2==1)c=c.concat(a);a=a.concat(a);b>>=1;}return c;}\r\n\tstatic long powm(long a, long b, long m){long an=1;long c=a;while(b>0){if(b%2==1)an=(an*c)%m;c=(c*c)%m;b>>=1;}return an;}\r\n\tstatic int gcd(int a, int b){if(b==0)return a;return gcd(b, a%b);}\r\n\tstatic long gcd(long a, long b){if(b==0)return a;return gcd(b, a%b);}\r\n\tstatic class Reader {\r\n        public BufferedReader reader;\r\n        public StringTokenizer tokenizer;\r\n        public Reader() {\r\n            reader = new BufferedReader(new InputStreamReader(System.in), 32768);\r\n            tokenizer = null;\r\n        }\r\n        public String next() {\r\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\r\n                try {\r\n                    tokenizer = new StringTokenizer(reader.readLine());\r\n                } catch (IOException e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n            }\r\n            return tokenizer.nextToken();\r\n        }\r\n    }\r\n}"
}