{
    "id": 28966998,
    "contestId": 251,
    "creationTimeSeconds": 1501316997,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 251,
        "members": [
            {
                "handle": "xiaoSuSu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354807800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 2048000,
    "source": "#include<cstdio>\r\n#include<queue>\r\n#include<cstring>\r\n#include<vector>\r\n#include<map>\r\nusing namespace std;\r\n\r\nvector<pair<long long,long long> > range;\r\nmap<long long,long long> step;\r\nmap<long long,bool> vis;\r\n\r\nlong long gcd(long long a,long long b)\r\n{\r\n    return b==0?a:gcd(b,a%b);\r\n}\r\n\r\nlong long lcm(long long a,long long b)\r\n{\r\n    return a/gcd(a,b)*b;\r\n}\r\n\r\nlong long cal(long long start,long long finish,long long k)\r\n{\r\n    queue<long long> q;\r\n    while(!q.empty()) q.pop();\r\n    step.clear();\r\n    vis.clear();\r\n    q.push(start);\r\n    vis[start]=true;\r\n    step[start]=0;\r\n    while(!q.empty())\r\n    {\r\n        long long cur=q.front();\r\n//        printf(\"%I64d\\n\",cur);\r\n        q.pop();\r\n        if(cur==finish) return step[cur];\r\n        if(!vis[cur-1])\r\n        {\r\n            q.push(cur-1);\r\n            vis[cur-1]=true;\r\n            step[cur-1]=step[cur]+1;\r\n        }\r\n        for(int i=2;i<=k;i++)\r\n        {\r\n            if(!vis[cur-cur%i])\r\n            {\r\n                q.push(cur-cur%i);\r\n                vis[cur-cur%i]=true;\r\n                step[cur-cur%i]=step[cur]+1;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nlong long solve(long long a,long long b,long long k)\r\n{\r\n    long long L;\r\n    if(k==2)\r\n    {\r\n        L=2;\r\n    }\r\n    else\r\n    {\r\n        L=2;\r\n        for(long long i=3;i<=k;i++)\r\n        {\r\n            L=lcm(L,i);\r\n        }\r\n    }\r\n\r\n    long long cnt=0;\r\n    long long start1=a,finish1=a;\r\n    while(finish1%L!=0)\r\n    {\r\n        finish1--;\r\n        if(finish1<b)\r\n        {\r\n            range.push_back(make_pair(start1,b));\r\n            break;\r\n        }\r\n    }\r\n    if(finish1>=b)\r\n    {\r\n        range.push_back(make_pair(start1,finish1));\r\n        long long start2=b,finish2=b;\r\n        while(start2%L!=0)\r\n        {\r\n            start2++;\r\n        }\r\n        range.push_back(make_pair(start2,finish2));\r\n\r\n        if(start2<finish1)\r\n        {\r\n            cnt=(finish1-start2)/L;\r\n            range.push_back(make_pair(finish1,finish1-L+1));\r\n        }\r\n    }\r\n\r\n//    printf(\"%d:\\n\",range.size());\r\n//    for(int i=0;i<range.size();i++)\r\n//    {\r\n//        printf(\"%I64d %I64d\\n\",range[i].first,range[i].second);\r\n//    }\r\n\r\n    long long sum=0;\r\n    if(cnt==0)\r\n    {\r\n        for(int i=0;i<range.size();i++)\r\n        {\r\n            sum+=cal(range[i].first,range[i].second,k);\r\n        }\r\n    }\r\n    else\r\n    {\r\n        for(int i=0;i<2;i++)\r\n        {\r\n            sum+=cal(range[i].first,range[i].second,k);\r\n        }\r\n        sum+=cnt*cal(range[2].first,range[2].second,k);\r\n    }\r\n    return sum;\r\n}\r\n\r\nint main()\r\n{\r\n    long long a,b,k;\r\n    scanf(\"%I64d%I64d%I64d\",&a,&b,&k);\r\n    printf(\"%I64d\\n\",solve(a,b,k));\r\n    return 0;\r\n}\r\n"
}