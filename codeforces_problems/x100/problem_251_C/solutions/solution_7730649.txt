{
    "id": 7730649,
    "contestId": 251,
    "creationTimeSeconds": 1410289506,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 251,
        "members": [
            {
                "handle": "itukh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354807800
    },
    "programmingLanguage": "Java 7",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 780,
    "memoryConsumedBytes": 19456000,
    "source": "import java.io.*;\r\nimport java.util.*;\r\n\r\npublic class c {\r\n\r\n\tstatic int nok = 2522520;\r\n\r\n\tpublic static void main(String[] args) throws FileNotFoundException {\r\n\t\tScanner in = new Scanner(System.in);\r\n\t\tPrintWriter out = new PrintWriter(System.out);\r\n\t\tlong a = in.nextLong();\r\n\t\tlong b = in.nextLong();\r\n\t\tint k = in.nextInt();\r\n\t\t/*for (int i = 2; i < nok; i++) {\r\n\t\t\tboolean flag = true;\r\n\t\t\tfor (int j = 2; j <= k; j++) {\r\n\t\t\t\tif (!(i % j == 0)) {\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (flag == true) {\r\n\t\t\t\tnok = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}*/\r\n\t\tint d[] = new int[nok + 1];\r\n\t\tArrays.fill(d, nok);\r\n\t\td[0] = 0;\r\n\t\tfor (int i = 1; i < nok + 1; i++) {\r\n\t\t\tint cur = nok;\r\n\t\t\tcur = Math.min(cur, d[i - 1] + 1);\r\n\t\t\tfor (int x = 1; x <= k; x++) {\r\n\t\t\t\tcur = Math.min(d[i - i % k] + 1, cur);\r\n\t\t\t}\r\n\t\t\td[i] = cur;\r\n\t\t}\r\n\t\tint d1[] = new int[nok + 1];\r\n\t\tArrays.fill(d1, nok);\r\n\t\td1[(int) b % nok] = 0;\r\n\t\tfor (int i = (int)b % nok + 1; i < nok + 1; i++) {\r\n\t\t\tint cur = nok;\r\n\t\t\tcur = Math.min(cur, d1[i - 1] + 1);\r\n\t\t\tfor (int j = 1; j <= k; j++) {\r\n\t\t\t\tcur = Math.min(d1[i - i % j] + 1, cur);\r\n\t\t\t}\r\n\t\t\td1[i] = cur;\r\n\t\t}\r\n\t\tlong ans = 0;\r\n\t\tif (a - a % nok >= b) {\r\n\t\t\tans = d[(int) (a % nok)];\r\n\t\t}\r\n\t\tans += 1l * d[nok] * Math.max((((a - a % nok - b)) / nok), 0);\r\n\t\tif (nok <= a){\r\n\t\t\tans += d1[nok];\r\n\t\t}\r\n\t\telse{\r\n\t\t\tans += d1[(int)a];\r\n\t\t}\r\n\t\tout.print(ans);\r\n\t\tout.close();\r\n\t}\r\n}"
}