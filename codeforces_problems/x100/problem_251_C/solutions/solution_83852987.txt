{
    "id": 83852987,
    "contestId": 251,
    "creationTimeSeconds": 1592233116,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 251,
        "members": [
            {
                "handle": "Shayan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354807800
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <queue>\n#include <stack>\n#include <iomanip>\n#include <cassert>\n#include <cstring>\n#include <sstream>\n#include <numeric>\n#include <cstdio>\n\nusing namespace std;\n\n#define int ll\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair <int, int> pii;\n\n#define pb push_back\n#define F first\n#define S second\n\nconst int LG = 60 + 2, N = 4e5 + 20, K = 15 + 5, inf = 2e18 + 20;\nint a, b, k;\n\nint last[K];\nint n;\nint to[LG][N];\n\nbool mark[K];\nint d[K];\n\nint32_t main()\n{\n    ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n\n    cin >> a >> b >> k;\n\n    int n = 1;\n    for (int i = 2; i <= k; i++) {\n        n = n * i / gcd(n, i);\n    }\n\n    to[0][0] = 1;\n    for (int i = 1; i < n; i++) {\n        to[0][i] = 1;\n        for (int j = 2; j <= k; j++) {\n            if (i % j == 0) last[j] = i;\n            to[0][i] = max(to[0][i], i - last[j]);\n        }\n    }\n    \n    for (int j = 1; j < LG; j++) {\n        for (int i = 0; i < n; i++) {\n            int m = ((i - to[j - 1][i]) % n + n) % n;\n            to[j][i] = min(inf, to[j - 1][i] + to[j - 1][m]);\n        }\n    }\n\n    int cur = a % n, rem = a - b, ans = 0;\n    for (int j = LG - 1; j >= 0; j--) {\n        if (to[j][cur] < rem) {\n            rem -= to[j][cur];\n            cur = ((cur - to[j][cur]) % n + n) % n;\n            ans += (1ll << j);\n        }\n    }\n\n    memset(d, 127, sizeof d);\n    d[rem] = 0;\n    for (int i = b + rem; i >= b; i--) {\n        memset(mark, 0, sizeof mark);\n\n        for (int j = i; j >= b; j--) {\n            for (int c = 2; c <= k; c++) {\n                if (j % c == 0 && !mark[c]) {\n                    d[j - b] = min(d[j - b], d[i - b] + 1);\n                    mark[c] = 1;\n                }\n            }\n        }\n        d[i - b - 1] = min(d[i - b - 1], d[i - b] + 1);\n    }\n\n    cout << ans + d[0] << '\\n';\n}\n"
}