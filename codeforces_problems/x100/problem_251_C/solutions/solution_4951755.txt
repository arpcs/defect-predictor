{
    "id": 4951755,
    "contestId": 251,
    "creationTimeSeconds": 1383316267,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 251,
        "index": "C",
        "name": "Number Transformation",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 251,
        "members": [
            {
                "handle": "nhandi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354807800
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 404,
    "memoryConsumedBytes": 2048000,
    "source": "#include<stdio.h>\r\n#include<algorithm>\r\n#include<map>\r\n#include<iostream>\r\n#include<cmath>\r\n#include<string>\r\n#include<cstring>\r\n\r\nusing namespace std;\r\n\r\n#define maxN 500021\r\n#define baseD 1000000007\r\n\r\nlong long a , b , ta , tb , res;\r\nint f[maxN] , k , l;\r\n\r\nint lcm( int a , int b ) {\r\n        int pro = a * b;\r\n        while( a > 0 && b > 0 ) {\r\n                if ( a > b ) a = a % b; else b = b % a;\r\n        }\r\n        return ( pro / ( a + b ) );\r\n}\r\n\r\nlong long move( long long a , long long b ) {\r\n        for( int i = 0; i <= a - b; i ++ ) f[i] = 0;\r\n        long long t = b;\r\n        for( long long i = 1; i <= a - b; i ++ ) {\r\n                f[i] = f[i - 1] + 1; t ++;\r\n                for( int j = 2; j <= k; j ++ )\r\n                if ( i >= t % j && f[i] > f[i - t % j] + 1 ) f[i] = f[i - t % j] + 1;\r\n        }\r\n        return f[a - b];\r\n}\r\n\r\nint main(){\r\n        cin >> a >> b >> k; l = 2;\r\n        for( int i = 3; i <= k; i ++ ) l = lcm( l , i );\r\n        ta = a - a % l; tb = b - b % l + l;\r\n        if ( ta >= tb ) {\r\n                long long front = move( a , ta );\r\n                long long back = move( tb , b );\r\n                long long multi = move( l , 0 );\r\n                res = front + back + multi * ( ( ta - tb ) / l );\r\n        }\r\n        else res = move( a , b );\r\n        printf( \"%I64d\" , res );\r\n}\r\n"
}