{
    "id": 88346522,
    "contestId": 1192,
    "creationTimeSeconds": 1596038240,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1192,
        "index": "A",
        "name": "Building Skyscrapers",
        "type": "PROGRAMMING",
        "tags": [
            "*special"
        ]
    },
    "author": {
        "contestId": 1192,
        "members": [
            {
                "handle": "Peti"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1564063500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "points": 0.0,
    "source": "#include <iostream>\r\n#include <utility>\r\n#include <vector>\r\n#include <map>\r\n\r\nusing namespace std;\r\n\r\nstruct pont{\r\n    int x, y;\r\n    vector<int> p;\r\n\r\n    bool operator < (const pont &a) const{\r\n        if(x == a.x)\r\n            return y < a.y;\r\n        return x < a.x;\r\n    }\r\n};\r\n\r\nint koordX[8] = {-1, -1, -1, 0, 1, 1, 1, 0}, koordY[8] = {1, 0, -1, -1, -1, 0, 1, 1};\r\n\r\nvector<pont> g;\r\nvector<bool> volt;\r\nvector<int> erintett;\r\n\r\nvoid Bejar(int akt)\r\n{\r\n    volt[akt] = true;\r\n\r\n    for(int x : g[akt].p)\r\n        if(!volt[x])\r\n            Bejar(x);\r\n\r\n    return;\r\n}\r\n\r\nvoid Burok(int akt, int elozo, int s)\r\n{\r\n    erintett[akt]++;\r\n\r\n    int x = 0;\r\n    while(g[akt].p[x] != elozo)\r\n        x++;\r\n\r\n    x++;\r\n    if(x >= g[akt].p.size())\r\n        x = 0;\r\n\r\n    while(volt[g[akt].p[x]])\r\n    {\r\n        x++;\r\n        if(x >= g[akt].p.size())\r\n            x = 0;\r\n    }\r\n\r\n    if(akt == s && x == 0 && erintett[g[akt].p[x]] != 0)\r\n        return;\r\n\r\n    Burok(g[akt].p[x], akt, s);\r\n\r\n    return;\r\n}\r\n\r\nint main()\r\n{\r\n    cin.sync_with_stdio(false);\r\n    cin.tie(0);\r\n\r\n    int n, t;\r\n    cin>>n>>t;\r\n\r\n    g.resize(n);\r\n    erintett.resize(n, 0);\r\n    volt.resize(n, false);\r\n\r\n    map<pair<int, int>, int> inds;\r\n\r\n    for(int i = 0; i < n; i++)\r\n    {\r\n        cin>>g[i].x>>g[i].y;\r\n\r\n        inds[make_pair(g[i].x, g[i].y)] = i;\r\n    }\r\n\r\n    for(int i = 0; i < n; i++)\r\n    {\r\n        for(int j = 0; j < 8; j++)\r\n        {\r\n            auto it = inds.find(make_pair(g[i].x + koordX[j], g[i].y + koordY[j]));\r\n\r\n            if(it != inds.end())\r\n                g[i].p.push_back(it->second);\r\n        }\r\n    }\r\n\r\n    Bejar(0);\r\n\r\n    bool jo = true;\r\n    for(int i = 0; i < n; i++)\r\n    {\r\n        if(volt[i])\r\n            continue;\r\n\r\n        cout<<\"NO\\n\";\r\n        return 0;\r\n    }\r\n\r\n    cout<<\"YES\\n\";\r\n\r\n    volt.assign(n, false);\r\n    for(int i = 0; i < n; i++)\r\n    {\r\n        int start = 0;\r\n        for(int j = 0; j < n; j++)\r\n            if(!volt[j] && g[j].x < g[start].x)\r\n                start = j;\r\n\r\n        bool mehet = false;\r\n        for(y : g[start].p)\r\n            if(!volt[y])\r\n                mehet = true;\r\n\r\n        if(!mehet)\r\n        {\r\n            volt[start] = true;\r\n            cout<<start+1<<\"\\n\";\r\n            continue;\r\n        }\r\n\r\n        erintett.assign(n, 0);\r\n        Burok(start, g[start].p[(int)g[start].p.size()-1], start);\r\n        erintett[start]--;\r\n\r\n        /*cout<<\"erintett: \";\r\n        for(int j = 0; j < n; j++)\r\n            cout<<erintett[j]<<\" \";\r\n        cout<<\"\\n\";*/\r\n\r\n        int ind = -1;\r\n        for(int j = n-1; j >= 0; j--)\r\n            if(erintett[j] == 1 && ind == -1)\r\n                ind = j;\r\n\r\n        volt[ind] = true;\r\n\r\n        cout<<ind+1<<\"\\n\";\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}