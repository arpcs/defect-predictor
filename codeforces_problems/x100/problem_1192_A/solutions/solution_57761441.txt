{
    "id": 57761441,
    "contestId": 1192,
    "creationTimeSeconds": 1564078239,
    "relativeTimeSeconds": 14739,
    "problem": {
        "contestId": 1192,
        "index": "A",
        "name": "Building Skyscrapers",
        "type": "PROGRAMMING",
        "tags": [
            "*special"
        ]
    },
    "author": {
        "contestId": 1192,
        "members": [
            {
                "handle": "Yasseenkamel"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1564063500
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "PARTIAL",
    "testset": "TESTS",
    "passedTestCount": 25,
    "timeConsumedMillis": 3500,
    "memoryConsumedBytes": 6656000,
    "points": 8.0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nint n,t,mnx = INT_MAX,mxx = INT_MIN,mny = INT_MAX,mxy = INT_MIN;\r\nvector<pair<int,int> > v;\r\nmap<int,vector<int> > adj;\r\nvector<int> ans,ans1;\r\nmap<pair<int,int>,bool> vis,vis1;\r\nbool b = 0;\r\n\r\nvoid dfs1(int x,int y){\r\n    if(x < mnx || y < mny || x > mxx || y > mxy){\r\n        b = 1;\r\n        return;\r\n    }\r\n    if(b){\r\n        return;\r\n    }\r\n    vis1[make_pair(x,y)] = 1;\r\n    if(!vis[make_pair(x - 1,y)] && !vis1[make_pair(x - 1,y)]){\r\n        dfs1(x - 1,y);\r\n    }\r\n    if(!vis[make_pair(x + 1,y)] && !vis1[make_pair(x + 1,y)]){\r\n        dfs1(x + 1,y);\r\n    }\r\n    if(!vis[make_pair(x,y - 1)] && !vis1[make_pair(x,y - 1)]){\r\n        dfs1(x,y - 1);\r\n    }\r\n    if(!vis[make_pair(x,y + 1)] && !vis1[make_pair(x,y + 1)]){\r\n        dfs1(x,y + 1);\r\n    }\r\n}\r\n\r\nbool bll = 0;\r\n\r\nvoid dfs(int node){\r\n    vis[v[node]] = 1;\r\n    if(ans.size() == n){\r\n        ans1 = ans;\r\n        bll = 1;\r\n        return;\r\n    }\r\n    if(bll){\r\n        return;\r\n    }\r\n    for(int i = 0 ; i < adj[node].size() ; i ++){\r\n        int f = adj[node][i];\r\n        b = 0;\r\n        vis1.clear();\r\n        if(!vis[v[f]]){\r\n            dfs1(v[f].first,v[f].second);\r\n            if(b){\r\n                ans.push_back(f + 1);\r\n                dfs(f);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    cin >> n >> t;\r\n    for(int i = 0 ; i < n ; i ++){\r\n        int a,b;\r\n        cin >> a >> b;\r\n        v.push_back(make_pair(a,b));\r\n        mnx = min(mnx,a);\r\n        mxx = max(mxx,a);\r\n        mny = min(mny,b);\r\n        mxy = max(mxy,b);\r\n    }\r\n    for(int i = 0 ; i < n ; i ++){\r\n        for(int j = 0 ; j < n ; j ++){\r\n            if(i == j){\r\n                continue;\r\n            }\r\n            if(abs(v[i].first - v[j].first) <= 1 && abs(v[i].second - v[j].second) <= 1){\r\n                adj[i].push_back(j);\r\n                adj[j].push_back(i);\r\n            }\r\n        }\r\n    }\r\n    for(int i = 0 ; i < n ; i ++){\r\n        vis.clear();\r\n        ans.push_back(i + 1);\r\n        dfs(i);\r\n        if(bll){\r\n            cout << \"YES\\n\";\r\n            for(int j = 0 ; j < n ; j ++){\r\n                cout << ans1[j] << endl;\r\n            }\r\n            return 0;\r\n        }\r\n        ans.clear();\r\n    }\r\n    cout << \"NO\\n\";\r\n    return 0;\r\n}\r\n"
}