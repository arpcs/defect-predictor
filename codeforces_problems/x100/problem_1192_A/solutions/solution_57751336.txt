{
    "id": 57751336,
    "contestId": 1192,
    "creationTimeSeconds": 1564066395,
    "relativeTimeSeconds": 2895,
    "problem": {
        "contestId": 1192,
        "index": "A",
        "name": "Building Skyscrapers",
        "type": "PROGRAMMING",
        "tags": [
            "*special"
        ]
    },
    "author": {
        "contestId": 1192,
        "members": [
            {
                "handle": "mrboorger"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1564063500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "PARTIAL",
    "testset": "TESTS",
    "passedTestCount": 29,
    "timeConsumedMillis": 342,
    "memoryConsumedBytes": 18534400,
    "points": 8.0,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define ld long double\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define F first\r\n#define S second\r\n#define pb push_back\r\n#define sqr(x) (x) * (x)\r\n\r\nusing namespace std;\r\n\r\nconst int maxn = 150005;\r\nconst int si[8] {1, 1, 1, 0, 0, -1, -1, -1};\r\nconst int sj[8] {-1, 0, 1, -1, 1, -1, 0, 1};\r\n\r\nmap <pair <int, int>, int> mp;\r\npair <int, int> a[maxn];\r\nbool used[maxn];\r\nvector <int> ans;\r\n\r\nvoid dfs(int nm)\r\n{\r\n    int r = a[nm].F;\r\n    int c = a[nm].S;\r\n    used[nm] = true;\r\n    ans.pb(nm);\r\n    for(int i = 0; i < 8; ++i)\r\n    {\r\n        int R = r + si[i];\r\n        int C = c + sj[i];\r\n        if (mp.find({R, C}) == mp.end()) continue;\r\n        int NM = mp[{R, C}];\r\n        if (used[NM]) continue;\r\n        dfs(NM);\r\n    }\r\n    return;\r\n}\r\n\r\n\r\nint main()\r\n{\r\n#ifdef LOCAL\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#else\r\n\r\n#endif\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    int n, t;\r\n    cin >> n >> t;\r\n    int p = 0;\r\n    for(int i = 0; i < n; ++i)\r\n    {\r\n        int r, c;\r\n        cin >> r >> c;\r\n        a[i] = {r, c};\r\n        if (a[i].F > a[p].F || (a[i].F == a[p].F && a[i].S < a[p].S))\r\n            p = i;\r\n        mp[a[i]] = i;\r\n    }\r\n    dfs(p);\r\n    if (int(ans.size()) < n) cout << \"NO\";\r\n    else\r\n    {\r\n        cout << \"YES\\n\";\r\n        for(int i : ans)\r\n            cout << i + 1 << '\\n';\r\n    }\r\n    return 0;\r\n}\r\n"
}