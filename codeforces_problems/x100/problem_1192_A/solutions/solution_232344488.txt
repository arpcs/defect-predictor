{
    "id": 232344488,
    "contestId": 1192,
    "creationTimeSeconds": 1699692515,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1192,
        "index": "A",
        "name": "Building Skyscrapers",
        "type": "PROGRAMMING",
        "tags": [
            "*special"
        ]
    },
    "author": {
        "contestId": 1192,
        "members": [
            {
                "handle": "leifangyu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1564063500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "points": 0.0,
    "source": "// generated by GPT4 2023-11-11 16:48:19\n#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define rep(i,a,b) for(int i=a;i<=b;i++)\n#define rep2(i,a,b) for(int i=a;i>=b;i--)\n#define pii pair<int,int>\n#define mp make_pair\n#define x first\n#define y second\nconst int maxn=150010;\npii a[maxn],b[maxn];\nint n,fa[maxn],rk[maxn],id[maxn],res[maxn],f[maxn],g[maxn];\nvector<int> e[maxn],vec[maxn];\nbool cmp(pii a,pii b){\n    return a.x==b.x?a.y<b.y:a.x<b.x;\n}\nint find(int x){\n    return fa[x]==x?x:fa[x]=find(fa[x]);\n}\nvoid add(int x,int y){\n    e[x].push_back(y),e[y].push_back(x);\n}\nbool cmp2(int x,int y){\n    return a[x]<a[y];\n}\nvoid dfs(int x){\n    printf(\"%d\\n\",x);\n    for(auto y:vec[x])if(y!=f[x])f[y]=x,dfs(y);\n}\nint main(){\n    scanf(\"%d\",&n);\n    rep(i,1,n)scanf(\"%d%d\",&a[i].x,&a[i].y),a[i].x+=1e9,a[i].y+=1e9,id[i]=i;\n    sort(id+1,id+n+1,cmp2),sort(a+1,a+n+1);\n    rep(i,1,n){\n        if(i>1&&a[i].x==a[i-1].x&&a[i].y==a[i-1].y+1)add(id[i],id[i-1]);\n        while(b[0].x&&b[b[0].x].y<a[i].y)b[0].x--;\n        if(b[0].x)add(id[i],b[b[0].x].x);\n        while(b[0].x&&a[i].x-a[b[b[0].x].x].x>=a[i].y-a[b[b[0].x].y].y)b[0].x--;\n        b[++b[0].x]=mp(id[i],a[i]);\n    }\n    rep(i,1,n){\n        fa[i]=i;\n        for(auto j:e[i])if(a[i]>a[j])fa[find(i)]=find(j);\n    }\n    rep(i,1,n)if(find(i)==i)vec[0].push_back(i);\n    rep(i,1,n)for(auto j:e[i])if(a[i]>a[j]&&find(i)!=find(j))vec[find(j)].push_back(i);\n    dfs(0);\n    return 0;\n}\n"
}