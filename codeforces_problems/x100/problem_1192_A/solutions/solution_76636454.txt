{
    "id": 76636454,
    "contestId": 1192,
    "creationTimeSeconds": 1586810058,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1192,
        "index": "A",
        "name": "Building Skyscrapers",
        "type": "PROGRAMMING",
        "tags": [
            "*special"
        ]
    },
    "author": {
        "contestId": 1192,
        "members": [
            {
                "handle": "TadijaSebez"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1564063500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 185,
    "timeConsumedMillis": 1403,
    "memoryConsumedBytes": 153292800,
    "points": 100.0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define pt pair<int,int>\r\n#define x first\r\n#define y second\r\n#define mp make_pair\r\n#define pb push_back\r\npt operator + (pt a,pt b){return mp(a.x+b.x,a.y+b.y);}\r\npt operator / (pt a,int b){return mp(a.x/b,a.y/b);}\r\nconst int N=150005;\r\nconst int M=9*N;\r\nvector<pt> pts,mv={{-1,-1},{0,-1},{1,-1},{1,0},{1,1},{0,1},{-1,1},{-1,0}};\r\nvector<int> E8[M],E4[M];\r\nint n,cmp[M],my[M],ym[N],csz,out;\r\npt a[N];\r\nset<int> act;\r\nbool huo[M];\r\nvoid Consider(int x){\r\n\tif(huo[x])act.erase(my[x]);\r\n\tbool rch=0;\r\n\tfor(int y:E4[x])if(cmp[y]==out)rch=1;\r\n\tbool art=0;\r\n\tassert(E8[x].size()==8);\r\n\tfor(int i=0;i<8;i++){\r\n\t\tint y=E8[x][i];\r\n\t\tif(cmp[y]==-1){\r\n\t\t\tvector<int> qq;\r\n\t\t\tfor(int j=(i+1)%8,las=-1,in=0;j!=i;j=(j+1)%8){\r\n\t\t\t\tint z=E8[x][j];\r\n\t\t\t\tif(las!=cmp[z])las=cmp[z],in=0;\r\n\t\t\t\tif(j%2==1 && !in && las!=-1)\r\n\t\t\t\t\tqq.pb(las),\r\n\t\t\t\t\tin=1;\r\n\t\t\t}\r\n\t\t\tsort(qq.begin(),qq.end());\r\n\t\t\tfor(int j=1;j<qq.size();j++)\r\n\t\t\t\tif(qq[j]==qq[j-1])\r\n\t\t\t\t\tart=1;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\thuo[x]=rch&&!art;\r\n\tif(huo[x])act.insert(my[x]);\r\n}\r\nvector<int> all[M];\r\nvoid Merge(int a,int b){\r\n\tif(b==out || (a!=out && all[a].size()<all[b].size()))swap(a,b);\r\n\tfor(int i:all[b])\r\n\t\tcmp[i]=a,\r\n\t\tall[a].pb(i);\r\n\tfor(int i:all[b])\r\n\t\tfor(int j:E4[i])\r\n\t\t\tif(cmp[j]==-1)\r\n\t\t\t\tConsider(j);\r\n}\r\nint ans[N];\r\nbool was[M];\r\nint main(){\r\n\tscanf(\"%i %*i\",&n);\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tscanf(\"%i %i\",&a[i].x,&a[i].y);\r\n\t\tfor(int dx=-1;dx<=1;dx++)\r\n\t\t\tfor(int dy=-1;dy<=1;dy++)\r\n\t\t\t\tpts.pb(mp(a[i].x+dx,a[i].y+dy));\r\n\t}\r\n\tsort(pts.begin(),pts.end());\r\n\tpts.erase(unique(pts.begin(),pts.end()),pts.end());\r\n\tfor(int i=0;i<pts.size();i++){\r\n\t\tfor(pt d:mv){\r\n\t\t\tpt b=pts[i]+d;\r\n\t\t\tint j=lower_bound(pts.begin(),pts.end(),b)-pts.begin();\r\n\t\t\tif(j<pts.size() && pts[j]==b){\r\n\t\t\t\tE8[i].pb(j);\r\n\t\t\t\tif(d.x*d.y==0)\r\n\t\t\t\t\tE4[i].pb(j);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tint j=lower_bound(pts.begin(),pts.end(),a[i])-pts.begin();\r\n\t\t//assert(j<pts.size() && pts[j]==a[i]);\r\n\t\tcmp[j]=-1;\r\n\t\tmy[j]=i;\r\n\t\tym[i]=j;\r\n\t}\r\n\tqueue<int> q;\r\n\tfor(int i=0;i<pts.size();i++){\r\n\t\tif(cmp[i]==0){\r\n\t\t\tq.push(i);\r\n\t\t\tcmp[i]=++csz;\r\n\t\t\twhile(q.size()){\r\n\t\t\t\tint u=q.front();\r\n\t\t\t\tq.pop();\r\n\t\t\t\tfor(int v:E4[u]){\r\n\t\t\t\t\tif(cmp[v]==0){\r\n\t\t\t\t\t\tcmp[v]=csz;\r\n\t\t\t\t\t\tq.push(v);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tq.push(ym[1]);\r\n\twas[ym[1]]=1;\r\n\tint num=0;\r\n\twhile(q.size()){\r\n\t\tint u=q.front();\r\n\t\tnum++;\r\n\t\tq.pop();\r\n\t\tfor(int v:E8[u]){\r\n\t\t\tif(cmp[v]==-1 && !was[v]){\r\n\t\t\t\twas[v]=1;\r\n\t\t\t\tq.push(v);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif(num<n)return 0*printf(\"NO\\n\");\r\n\tout=cmp[0];\r\n\t//assert(out!=-1);\r\n\tfor(int i=0;i<pts.size();i++){\r\n\t\tif(cmp[i]==-1)\r\n\t\t\tConsider(i);\r\n\t\telse\r\n\t\t\tall[cmp[i]].pb(i);\r\n\t}\r\n\tfor(int pos=n;pos>=1;pos--){\r\n\t\t//assert(act.size());\r\n\t\tint x=*act.rbegin();\r\n\t\tact.erase(x);\r\n\t\tans[pos]=x;\r\n\t\tx=ym[x];\r\n\t\tfor(int y:E4[x])if(cmp[y]!=-1){cmp[x]=cmp[y];all[cmp[x]].pb(x);break;}\r\n\t\t//assert(cmp[x]!=-1);\r\n\t\tfor(int y:E8[x])if(cmp[y]==-1)Consider(y);\r\n\t\tfor(int y:E4[x])if(cmp[y]!=-1 && cmp[y]!=cmp[x])Merge(cmp[x],cmp[y]);\r\n\t}\r\n\tprintf(\"YES\\n\");\r\n\tfor(int i=1;i<=n;i++)printf(\"%i\\n\",ans[i]);\r\n\treturn 0;\r\n}"
}