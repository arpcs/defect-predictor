{
    "id": 57756010,
    "contestId": 1192,
    "creationTimeSeconds": 1564071569,
    "relativeTimeSeconds": 8069,
    "problem": {
        "contestId": 1192,
        "index": "A",
        "name": "Building Skyscrapers",
        "type": "PROGRAMMING",
        "tags": [
            "*special"
        ]
    },
    "author": {
        "contestId": 1192,
        "members": [
            {
                "handle": "Capitan"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1564063500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "PARTIAL",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 3500,
    "memoryConsumedBytes": 4300800,
    "points": 0.0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nstruct node {\r\n    long long x, y;\r\n    int ind;\r\n};\r\n\r\nbool is(node a, node b) {\r\n    return abs(a.x - b.x) <= 1 && abs(a.y - b.y) <= 1;\r\n}\r\n\r\nbool comp(node a, node b) {\r\n    return a.x < b.x || (a.x == b.x && a.y < b.y);\r\n}\r\n\r\nvoid solve() {\r\n    int n, tt;\r\n    cin >> n >> tt;\r\n    vector<node> vt(n);\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> vt[i].x >> vt[i].y;\r\n        vt[i].ind = i;\r\n    }\r\n    queue<node> q;\r\n    q.push(vt[0]);\r\n    vector<int> used(n, 0);\r\n    used[0] = 1;\r\n    while (q.size() > 0) {\r\n        node v = q.front();\r\n        q.pop();\r\n        for (int i = 0; i < n; i++) {\r\n            if (i == v.ind || used[i])\r\n                continue;\r\n            if (is(v, vt[i])) {\r\n                used[i] = 1;\r\n                q.push(vt[i]);\r\n            }\r\n        }\r\n    }\r\n    int ok = 1;\r\n    for (int i = 0; i < n; i++) {\r\n        ok &= used[i];\r\n    }\r\n    if (!ok) {\r\n        cout << \"NO\" << endl;\r\n    } else {\r\n        sort(vt.begin(), vt.end(), comp);\r\n        for (int i = 0; i < n; i++) {\r\n            cout << vt[i].ind + 1 << endl;\r\n        }\r\n    }\r\n}\r\n\r\nint main() {\r\n    ios::sync_with_stdio(NULL), cin.tie(0), cout.tie(0);\r\n    cout.setf(ios::fixed), cout.precision(20);\r\n    solve();\r\n    return 0;\r\n}\r\n"
}