{
    "id": 57751522,
    "contestId": 1192,
    "creationTimeSeconds": 1564066609,
    "relativeTimeSeconds": 3109,
    "problem": {
        "contestId": 1192,
        "index": "A",
        "name": "Building Skyscrapers",
        "type": "PROGRAMMING",
        "tags": [
            "*special"
        ]
    },
    "author": {
        "contestId": 1192,
        "members": [
            {
                "handle": "HMS_Belfast"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1564063500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "PARTIAL",
    "testset": "TESTS",
    "passedTestCount": 14,
    "timeConsumedMillis": 1201,
    "memoryConsumedBytes": 33587200,
    "points": 0.0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n\r\ntypedef pair<ll,ll> ii;\r\ntypedef pair<ii, ll > iii;\r\n\r\nconst int kn = 15* (1e4) + 69, N = 1e5+5;\r\nconst ll mod = 1e9 + 7, inf = 1e18 ;\r\n\r\n#define x first\r\n#define y second\r\n\r\n#define pb push_back\r\n#define popb pop_back\r\n#define pf push_front\r\n#define popf pop_front\r\n\r\n#define ff(i,n) for(int i=1;i<=n;i++)\r\n#define _ff(i,n) for(int i=n;i>=1;i--)\r\n#define f(i,a,b) for(int i = a; i <=b; i++)\r\n#define _f(i,a,b) for(int i = b; i>=a;i--)\r\n\r\nint n, sz[kn], t, top=0, ans[kn];\r\nint par[kn];\r\nll r[kn], c[kn];\r\n\r\nbool vis[kn];\r\n\r\nmap< pair<ll,ll>, int> mm;\r\n\r\nint di[] = {-1,-1,-1,0,0,1,1,1};\r\nint dj[] = {1,0,-1,1,-1,1,0,-1};\r\n\r\nvector<int> G[kn];\r\n\r\nbool invalid(ll R, ll C)\r\n{\r\n\tif(abs(R)>1e9 || abs(C) >1e9) return false;\r\n\treturn true;\r\n}\r\n\r\nint fin(int i)\r\n{\r\n\treturn (par[i] == i) ? i : par[i] = fin(par[i]);\r\n}\r\n\r\nbool option(int i, int j)\r\n{\r\n\treturn i>j;\r\n}\r\n\r\nvoid unite(int i, int j)\r\n{\r\n\tint pi = fin(i), pj = fin(j);\r\n\tif(pi == pj) return;\r\n\t//cout <<\"unite \"<<i<<\" \"<<j<<endl;\r\n\tif(sz[pi] > sz[pj]) swap(pi,pj);\r\n\tpar[pi] = pj; sz[pj] += sz[pi];\r\n}\r\n\r\nvoid DFS(int i)\r\n{\r\n\t//cout << \"dfs \" << i << endl;\r\n\tif(vis[i]) return;\r\n\tvis[i] = true;\r\n\tans[++top] = i;\r\n\tfor(int u : G[i]) DFS(u);\r\n}\r\n\r\nint main() {\r\n\tscanf(\"%d %d\", &n, &t);\r\n\tff(i,n)\r\n\t{\r\n\t\tpar[i] = i; sz[i] = 1; vis[i] = false;\r\n\t\tscanf(\"%lld %lld\",&r[i], &c[i]);\r\n\t\tmm[{r[i],c[i]}] = i;\r\n\t\tfor(int hi = 0; hi < 8; hi++)\r\n\t\t{\r\n\t\t\tint nxti = r[i] + di[hi], nxtj = c[i] + dj[hi];\r\n\t\t\tif(invalid(nxti,nxtj) && mm.count({nxti,nxtj})) \r\n\t\t\t{\r\n\t\t\t\tint tmp = mm[{nxti,nxtj}];\r\n\t\t\t\tunite(i,tmp);\r\n\t\t\t\tG[i].pb(tmp); G[tmp].pb(i);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif(sz[fin(1)] != n)\r\n\t{\r\n\t\tputs(\"NO\");\r\n\t\treturn 0;\t\r\n\t}\r\n\tff(i,n)\r\n\t{\r\n\t\tfor(int hi = 0; hi < 8; hi++)\r\n\t\t{\r\n\t\t\tint nxti = r[i] + di[hi], nxtj = c[i] + dj[hi];\r\n\t\t\tif(invalid(nxti,nxtj) && mm.count({nxti,nxtj})) \r\n\t\t\t{\r\n\t\t\t\tint tmp = mm[{nxti,nxtj}];\r\n\t\t\t\tG[i].pb(tmp);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tff(i,n) sort(G[i].begin(), G[i].end(), option);\r\n\tputs(\"YES\");\r\n\t\tDFS(n);\r\n\t_ff(i,n) printf(\"%d \",ans[i]);\r\n\t\r\n}\r\n//hahahahahahahahahhahahahahahaahahahahhahahahahahahah\r\n"
}