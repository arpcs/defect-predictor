{
    "id": 166781937,
    "contestId": 1612,
    "creationTimeSeconds": 1659515544,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1612,
        "index": "F",
        "name": "Armor and Weapons",
        "type": "PROGRAMMING",
        "rating": 2800,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1612,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1637573700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 110,
    "timeConsumedMillis": 530,
    "memoryConsumedBytes": 73113600,
    "source": "#include <bits/stdc++.h>\n#define fi first\n#define se second\n#define mp make_pair\n#define TASK \"\"\n#define bit(x) (1LL << (x))\n#define getbit(x, i) (((x) >> (i)) & 1)\n#define ALL(x) (x).begin(), (x).end() \nusing namespace std;\ntemplate <typename T1, typename T2> bool mini(T1 &a, T2 b) {\n\tif (a > b) {a = b; return true;} return false;\n}\ntemplate <typename T1, typename T2> bool maxi(T1 &a, T2 b) {\n\tif (a < b) {a = b; return true;} return false;\n}\nmt19937_64 rd(chrono::steady_clock::now().time_since_epoch().count());\n\nint rand(int l, int r) {\n\treturn l + rd() % (r - l + 1);\n}\nconst int N = 2e5 + 5; \nconst int oo = 1e9;\nconst long long ooo = 1e18;\nconst int mod = 1e9 + 7; // 998244353;\nconst long double pi = acos(-1);\n\nint n, m, q;\nint d[N][33];\nmap<int, bool> appear[N];\nint main() {\n\tios_base::sync_with_stdio(0);\n\tcin.tie(0);\n\t#ifdef ONLINE_JUDGE\n\t// freopen(TASK\".inp\",\"r\",stdin);\n\t// freopen(TASK\".out\",\"w\",stdout);\n\t#endif\n\tcin >> n >> m >> q;\n\twhile(q--)\n\t{\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tif(n > m) swap(x, y);\n\t\tappear[x][y] = true;\n\t}\n\tif(n > m) swap(n, m); \n\tmemset(d, -0x3f, sizeof d);\n\td[1][0] = 1;\n\tfor(int k = 0; k < 30; k++)\n\tfor(int i = 1; i <= n; i++)\n\t\t{\n\t\t\tif(d[i][k] == d[0][0]) continue;\n\t\t\tint j = d[i][k];\n\t\t\tmaxi(d[min(i + j + appear[i][j], n)][k + 1], j);\n\t\t\tmaxi(d[i][k + 1], min(m, i + j + appear[i][j]));\n\t\t}\n\n\tint ans = oo;\n\tfor(int k = 0; k < 30; k++) {\n\t\tint j = d[n][k];\n\t\tint cnt = k;\n\t\tif(j == d[0][0]) continue;\n\t\twhile(j < m) {\n\t\t\tj = j + n + appear[n][j];\n\t\t\t++cnt;\n\t\t}\n\t\tmini(ans, cnt);\n\t}\n\tcout << ans;\n\treturn 0;\n}\n\t \t\t\t  \t\t\t\t \t   \t \t   \t\t\t\t \t \t"
}