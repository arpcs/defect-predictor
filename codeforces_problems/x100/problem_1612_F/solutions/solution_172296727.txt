{
    "id": 172296727,
    "contestId": 1612,
    "creationTimeSeconds": 1663281093,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1612,
        "index": "F",
        "name": "Armor and Weapons",
        "type": "PROGRAMMING",
        "rating": 2800,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1612,
        "members": [
            {
                "handle": "FelixArg"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1637573700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 936,
    "memoryConsumedBytes": 241254400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int sz = 2e5 + 1;\r\n\r\nint dp[sz][17][17];\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n\r\n    for (int i = 0; i < sz; i++){\r\n        for (int j = 0; j < 17; j++){\r\n            for (int k = 0; k < 17; k++){\r\n                dp[i][j][k] = -1;\r\n            }\r\n        }\r\n    }\r\n\r\n    int n, m;\r\n    cin >> n >> m;\r\n    int q;\r\n    cin >> q;\r\n\r\n    vector<set<int>> g(n + 1);\r\n    for (int i = 0; i < q; i++){\r\n        int f,t;\r\n        cin >> f >> t;\r\n        g[f].insert(t);\r\n    }\r\n\r\n    struct state{\r\n        int x_c;\r\n        int y_c;\r\n        int v;\r\n        int u;\r\n        int val;\r\n\r\n        bool operator <(const state& other) const{\r\n            return val < other.val; \r\n        }\r\n    };\r\n\r\n    priority_queue<state> pq;\r\n\r\n    pq.push({0, 0, 1, 1, int(g[1].count(1)) + 2});\r\n\r\n    while(!pq.empty()){\r\n        auto x = pq.top();\r\n        pq.pop();\r\n        if (dp[x.v][x.x_c][x.y_c] >= x.u){\r\n            continue;\r\n        }\r\n\r\n        dp[x.v][x.x_c][x.y_c] = x.u;\r\n\r\n        int to1 = min(n, x.val);\r\n        int val1 = to1 + x.u;\r\n        if (g[to1].count(x.u)){\r\n            val1++;\r\n        }\r\n\r\n        int to2 = min(m, x.val);\r\n        int val2 = to2 + x.v;\r\n        if (g[to1].count(x.u)){\r\n            val2++;\r\n        }\r\n        \r\n        if (x.x_c + 1 < 17){\r\n            pq.push({x.x_c + 1, x.y_c, to1, x.u, val1});\r\n        }\r\n        if (x.y_c + 1 < 17){\r\n            pq.push({x.x_c, x.y_c + 1, x.v, to2, val2});\r\n        }\r\n    }\r\n\r\n    int ans = 50;\r\n    for (int i = 0; i < 17; i++){\r\n        for (int j = 0; j < 17; j++){\r\n            if (dp[n][i][j] == m){\r\n                ans = min(ans, i + j);\r\n            }\r\n        }\r\n    }\r\n\r\n    cout << ans;\r\n\r\n\r\n    return 0;\r\n}"
}