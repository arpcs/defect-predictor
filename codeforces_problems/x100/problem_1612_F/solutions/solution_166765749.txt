{
    "id": 166765749,
    "contestId": 1612,
    "creationTimeSeconds": 1659504274,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1612,
        "index": "F",
        "name": "Armor and Weapons",
        "type": "PROGRAMMING",
        "rating": 2800,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1612,
        "members": [
            {
                "handle": "doanxem99"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1637573700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 61235200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ar array<int, 2>\r\n#define int long long\r\n#define task \"armor_weapons\"\r\nconst int MAX = 2e5 + 100, INFL = 1e9 + 7, INFLL = 1e18 + 7;\r\nset< int > A[MAX];\r\nint n, m, q, x[MAX], y[MAX], dp[MAX][33];\r\nvoid maxX(int &x, int y)\r\n{\r\n    if (x < y) x = y;\r\n}\r\nint32_t main()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    //freopen(task\".INP\",\"r\",stdin);\r\n    //freopen(task\".OUT\",\"w\",stdout);\r\n    cin >> n >> m;\r\n    cin >> q;\r\n    for (int i = 1; i <= q; i++)\r\n    {\r\n        cin >> x[i] >> y[i];\r\n    }\r\n    if (n > m)\r\n    {\r\n        swap(n, m);\r\n        for (int i = 1; i <= q; i++)\r\n            swap(x[i], y[i]);\r\n    }\r\n    for (int i = 1; i <= q; i++)\r\n        A[x[i]].insert(y[i]);\r\n    dp[1][0] = 1;\r\n    for (int k = 0; k <= 30; k++)\r\n    {\r\n        for (int i = 1; i <= n; i++)\r\n        {\r\n            if (dp[i][k] == 0) continue;\r\n            //cout << i << \" \" << dp[i][k] << '\\n' ;\r\n            maxX(dp[min(n, i + dp[i][k] + A[i].count(dp[i][k]))][k + 1], dp[i][k]);\r\n            maxX(dp[i][k + 1], i + dp[i][k] + A[i].count(dp[i][k]));\r\n        }\r\n    }\r\n    int ans = 0;\r\n    for (int k = 1; k <= 30; k++)\r\n    {\r\n        //cout << dp[n][k] << \" \" << k << '\\n' ;\r\n        if (dp[n][k] >= m && ans == 0)\r\n        {\r\n            ans = k;\r\n            //break;\r\n        }\r\n    }\r\n    if (ans == 0)\r\n    {\r\n        ans = 30;\r\n        m -= dp[n][30];\r\n        while (m > 0)\r\n        {\r\n            m -= n;\r\n            ans++;\r\n        }\r\n    }\r\n    cout << ans;\r\n}\r\n"
}