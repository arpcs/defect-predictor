{
    "id": 206994800,
    "contestId": 1612,
    "creationTimeSeconds": 1684887016,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1612,
        "index": "F",
        "name": "Armor and Weapons",
        "type": "PROGRAMMING",
        "rating": 2800,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1612,
        "members": [
            {
                "handle": "ahmedmekawyxa"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1637573700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 110,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 6656000,
    "source": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nint n, m;\r\n\r\n#define x first\r\n#define y second\r\n\r\ntypedef pair<int, int> comb;\r\n\r\ncomb norm(const comb& a)\r\n{\r\n    return make_pair(min(a.x, n), min(a.y, m));\r\n}\r\n\r\nbool good(const comb& a)\r\n{\r\n    return a.x == n || a.y == m;\r\n}\r\n\r\nbool comp(const comb& a, const comb& b)\r\n{\r\n    if(a.x != b.x)\r\n        return a.x > b.x;\r\n    return a.y > b.y;\r\n}\r\n\r\nint main()\r\n{\r\n    scanf(\"%d %d\", &n, &m);\r\n    int v;\r\n    scanf(\"%d\", &v);\r\n    set<comb> s;\r\n    for(int i = 0; i < v; i++)\r\n    {\r\n        int x, y;\r\n        scanf(\"%d %d\", &x, &y);\r\n        s.insert(make_pair(x, y));\r\n    }\r\n    int steps = 0;\r\n    vector<comb> cur;\r\n    cur.push_back(make_pair(1, 1));\r\n    while(true)\r\n    {\r\n        if(cur[0] == make_pair(n, m))\r\n            break;\r\n        vector<comb> ncur;\r\n        for(auto x : cur)\r\n        {\r\n            int sum = x.x + x.y;\r\n            if(s.count(x))\r\n                sum++;\r\n            comb z = x;\r\n            z.x = sum;\r\n            ncur.push_back(norm(z));\r\n            z = x;\r\n            z.y = sum;\r\n            ncur.push_back(norm(z));\r\n        }\r\n        sort(ncur.begin(), ncur.end(), comp);\r\n        int mx = 0;\r\n        vector<comb> ncur2;\r\n        for(auto x : ncur)\r\n        {\r\n            if(x.y <= mx) continue;\r\n            mx = max(mx, x.y);\r\n            ncur2.push_back(x);\r\n        }\r\n        cur = ncur2;\r\n        steps++;\r\n    }\r\n    printf(\"%d\\n\", steps);\r\n}"
}