{
    "id": 23811257,
    "contestId": 722,
    "creationTimeSeconds": 1484414108,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 722,
        "index": "B",
        "name": "Verse Pattern",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1200,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 722,
        "members": [
            {
                "handle": "MDL"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475330700
    },
    "programmingLanguage": "Java 8",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 20582400,
    "source": "\r\nimport java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\n\r\npublic class Checker1\r\n{\r\n\tstatic int imax=Integer.MAX_VALUE,imin=Integer.MIN_VALUE;\r\n\tstatic long lmax=Long.MAX_VALUE,lmin=Long.MIN_VALUE;\r\n\tstatic long mod=(long)1e9+7;\r\n\tpublic static void main (String[] args) throws java.lang.Exception\r\n\t{\r\n\t\tInputReader in =new InputReader(System.in);\r\n\t\tPrintWriter out=new PrintWriter(System.out);\r\n//\t\tint test=in.ni();\r\n \t\tint test=1;\r\n \t\tint i=0,j=0;\t\r\n\t\twhile(test-->0){\r\n\t\t\tint n=in.ni();\r\n\t\t\tint arr[]=new int[n];\r\n\t\t\tfor(i=0;i<n;i++)\r\n\t\t\t\tarr[i]=in.ni();\r\n\t\t\tfor(i=0;i<n;i++){\r\n\t\t\t\tint cnt=0;\r\n\t\t\t\tString str=in.nLine();\r\n\t\t\t\tfor(j=0;j<str.length();j++){\r\n\t\t\t\t\tchar c=str.charAt(j);\r\n\t\t\t\t\tif(c=='a'||c=='e'||c=='i'||c=='o'||c=='u'||c=='y'){\r\n\t\t\t\t\t\tcnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(cnt!=arr[i]){\r\n\t\t\t\t\tSystem.out.println(\"NO\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tout.println(\"YES\");\r\n\t\t}\r\n\tout.close();\r\n\t}\r\n\t\r\n\tstatic class Pair{\r\n\t\tint x,y;\r\n\t\tPair(int x,int y){\r\n\t\t\tthis.x=x;\r\n\t\t\tthis.y=y;\r\n\t\t}\r\n\t\tpublic String toString(){\r\n\t\t\treturn x+\" \"+y;\r\n\t\t}\r\n\t}\r\n\tstatic void print(int arr[],int len){\r\n\t\tfor(int i=0;i<len;i++)\r\n\t\tSystem.out.print(arr[i]+\" \");\r\n\t\tSystem.out.println();\r\n\t}\r\n\t\r\n\tstatic class InputReader\r\n\t{\r\n\t \r\n\t    private InputStream stream;\r\n\t    private byte[] buf = new byte[1024];\r\n\t    private int curChar;\r\n\t    private int numChars;\r\n\t \r\n\t    public InputReader(InputStream stream) {\r\n\t        this.stream = stream;\r\n\t    }\r\n\t \r\n\t    public int read() {\r\n\t        if (numChars == -1)\r\n\t            throw new InputMismatchException();\r\n\t        if (curChar >= numChars) {\r\n\t            curChar = 0;\r\n\t            try {\r\n\t                numChars = stream.read(buf);\r\n\t            } catch (IOException e) {\r\n\t                throw new InputMismatchException();\r\n\t            }\r\n\t            if (numChars <= 0)\r\n\t                return -1;\r\n\t        }\r\n\t        return buf[curChar++];\r\n\t    }\r\n\t \r\n\t    public int ni() {\r\n\t        int c = read();\r\n\t        while (isSpaceChar(c))\r\n\t            c = read();\r\n\t        int sgn = 1;\r\n\t        if (c == '-') {\r\n\t            sgn = -1;\r\n\t            c = read();\r\n\t        }\r\n\t        int res = 0;\r\n\t        do {\r\n\t            if (c < '0' || c > '9')\r\n\t                throw new InputMismatchException();\r\n\t            res *= 10;\r\n\t            res += c & 15;\r\n\t            c = read();\r\n\t        } while (!isSpaceChar(c));\r\n\t        return res * sgn;\r\n\t    }\r\n\t \r\n\t    public long nl() {\r\n\t        int c = read();\r\n\t        while (isSpaceChar(c))\r\n\t            c = read();\r\n\t        int sgn = 1;\r\n\t        if (c == '-') {\r\n\t            sgn = -1;\r\n\t            c = read();\r\n\t        }\r\n\t        long res = 0;\r\n\t        do {\r\n\t            if (c < '0' || c > '9')\r\n\t                throw new InputMismatchException();\r\n\t            res *= 10;\r\n\t            res += c & 15;\r\n\t            c = read();\r\n\t        } while (!isSpaceChar(c));\r\n\t        return res * sgn;\r\n\t    }\r\n\t \r\n\t    public String ns() {\r\n\t        int c = read();\r\n\t        while (isSpaceChar(c))\r\n\t            c = read();\r\n\t        StringBuilder res = new StringBuilder();\r\n\t        do {\r\n\t            res.appendCodePoint(c);\r\n\t            c = read();\r\n\t        } while (!isSpaceChar(c));\r\n\t        return res.toString();\r\n\t    }\r\n\t \r\n\t    public String nLine() {\r\n\t        int c = read();\r\n\t        //while (c != '\\n' && c != '\\r' && c != '\\t' && c != -1)\r\n\t        //c = read();\r\n\t        StringBuilder res = new StringBuilder();\r\n\t        do {\r\n\t            res.appendCodePoint(c);\r\n\t            c = read();\r\n\t        } while (c != '\\n' && c != '\\r' && c != '\\t' && c != -1);\r\n\t        return res.toString();\r\n\t    }\r\n\t \r\n\t    public static boolean isSpaceChar(int c) {\r\n\t        return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\r\n\t    }\r\n\t \r\n\t}   \r\n\r\n}\r\n"
}