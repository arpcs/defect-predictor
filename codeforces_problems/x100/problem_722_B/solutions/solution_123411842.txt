{
    "id": 123411842,
    "contestId": 722,
    "creationTimeSeconds": 1627029338,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 722,
        "index": "B",
        "name": "Verse Pattern",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1200,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 722,
        "members": [
            {
                "handle": "RHandarov"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475330700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 3891200,
    "source": "#include <bits/stdc++.h>\r\n\r\n#pragma GCC optimize \"-O3\"\r\n\r\n#define endl '\\n'\r\n\r\nusing namespace std;\r\n\r\nvoid setIO() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n}\r\n\r\nchar vowels[6] = {'a', 'e', 'i', 'o', 'u', 'y'};\r\n\r\nbool isVowel(char letter) {\r\n    for (int i = 0; i < 6; i++) {\r\n        if (vowels[i] == letter) {\r\n            return true;\r\n        }\r\n    }\r\n    \r\n    return false;\r\n}\r\n\r\nvoid split(vector<string> &tokens, string line) {\r\n    string token = \"\";\r\n    for (int i = 0; i < (int)line.size(); i++) {\r\n        if (line[i] == ' ') {\r\n            tokens.emplace_back(token);\r\n            token = \"\";\r\n        } else {\r\n            token.push_back(line[i]);\r\n        }\r\n    }\r\n    tokens.emplace_back(token);\r\n}\r\n\r\nint main() {\r\n    setIO();\r\n    \r\n    int n;\r\n    cin >> n;\r\n    \r\n    vector<int> p(n);\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> p[i];\r\n    }\r\n    \r\n    cin.ignore();\r\n    \r\n    for (int i = 0; i < n; i++) {\r\n        string line;\r\n        getline(cin, line);\r\n        \r\n        vector<string> tokens;\r\n        split(tokens, line);\r\n        \r\n        int total = 0;\r\n        for (int j = 0; j < (int)tokens.size(); j++) {\r\n            for (int k = 0; k < (int)tokens[j].size(); k++) {\r\n                if (isVowel(tokens[j][k])) {\r\n                    total++;\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (total != p[i]) {\r\n            cout << \"NO\\n\";\r\n            return 0;\r\n        }\r\n    }\r\n    \r\n    cout << \"YES\\n\";\r\n}"
}