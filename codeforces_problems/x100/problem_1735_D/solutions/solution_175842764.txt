{
    "id": 175842764,
    "contestId": 1735,
    "creationTimeSeconds": 1665645268,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "YHT_CC"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 296,
    "memoryConsumedBytes": 2355200,
    "source": "#include <bits/stdc++.h>\nnamespace IO {\n  #define iL (1 << 20)\n  char ibuf[iL], *iS = ibuf + iL, *iT = ibuf + iL;\n  #define gc() ((iS == iT) ? (iT = (iS = ibuf) + fread(ibuf, 1, iL, stdin), iS == iT ? EOF : *iS ++) : *iS ++)\n  template<class T> inline void read(T &x) {\n    x = 0;int f = 0;char ch = gc();\n    for (; !isdigit(ch); f |= ch == '-', ch = gc());\n    for (; isdigit(ch); x = (x << 1) + (x << 3) + (ch ^ 48), ch = gc());\n    x = (f == 1 ? ~ x + 1 : x);\n  }\n  char Out[iL], *iter = Out;\n  #define flush() fwrite(Out, 1, iter - Out, stdout), iter = Out\n  template<class T> inline void write(T x, char ch = '\\n') {\n    T l, c[35];\n    if (x < 0) *iter ++ = '-', x = ~ x + 1;\n    for (l = 0; !l || x; c[l] = x % 10, l++, x /= 10);\n    for (; l; -- l, *iter ++ = c[l] + '0');*iter ++ = ch;\n    flush();\n  }\n}\nusing namespace IO;\n#define N 1005\n#define M 25\n#define ll long long\n#define DEBUG\nusing namespace std;\nint n, k, a[N][M], u[N], v[N], chk[3][3];\nint main() {\n#ifndef ONLINE_JUDGE\n  freopen(\"test.in\", \"r\", stdin);\n  freopen(\"test.out\", \"w\", stdout);\n#endif\n  read(n), read(k); int ans = 0;\n  chk[0][2] = chk[1][2] = chk[2][1] = 1;\n  for (int i = 1; i <= n; i++) for (int j = 0; j < k; j++) read(a[i][j]);\n  for (int i = 1; i <= n; i++) {\n    int sum = 0; \n    set<pair<int, int> > ps;\n    for (int j = 1; j <= n; j++) u[j] = v[j] = 0;\n    for (int j = 1; j <= n; j++) {\n      if (i == j) continue;\n      for (int p = 0; p < k; p++) {\n        if (a[i][p] == a[j][p]) { \n          u[j] |= 1 << p; continue; \n        }\n        if (chk[a[i][p]][a[j][p]]) v[j] |= 1 << p;\n      }\n      ps.insert(make_pair(u[j], v[j]));\n    }\n    for (int j = 1; j <= n; j++) {\n      if (i == j) continue;\n      if (ps.count(make_pair(u[j], u[j] ^ v[j] ^ ((1 << k) - 1)))) sum ++;\n    }\n    sum /= 2; \n    ans += sum * (sum - 1) / 2;\n  }\n  write(ans);\n  return 0;\n}"
}