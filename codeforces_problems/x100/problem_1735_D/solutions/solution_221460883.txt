{
    "id": 221460883,
    "contestId": 1735,
    "creationTimeSeconds": 1693579875,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "CardboardTank"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\n//#include <fstream>\n#include <string>\n#include <cstring>\n#include <vector>\n#include <iterator>\n#include <numeric>\n#include <unordered_map>\n#include <map>\n#include <unordered_set>\n#include <set>\n#include <bitset>\n//#include <limits>\n#include <climits>\n#include <queue>\n#include <stack>\n#include <deque>\n#include <tuple>\n#include <list>\n#include <math.h> \n//#include <cmath> \n#include <algorithm>\n#include <chrono>\n#include <iomanip>\n#include <bitset>\n\n//#include <ext/pb_ds/assoc_container.hpp>\n//#include <ext/pb_ds/tree_policy.hpp>\n\n// g++-13 -std=c++11 codeforce.cpp -o codeforce\n// ./codeforce <codef.txt \nusing namespace std;\n//using namespace __gnu_pbds;\ntypedef long long ll;\ntypedef long double ld;\n//typedef string str;\n\nvector<int> manacher(string &s){\n    string sd=\"$\";\n    for(int i=0;i<s.size();++i){\n        sd+=s[i];\n        sd+=\"#\";\n    } \n    sd[sd.size()-1]='^';\n    // O[i]-1 is radi with #, O[i]-1/2 is radi without\n    vector<int> O(sd.size(),0);\n    for(int i=1,l=1, r=1;i<=sd.size();++i){\n        O[i]=max(0, min(r-i, O[l+(r-i)]));\n        while(sd[i-O[i]]==sd[i+O[i]]){\n            O[i]++;\n        }\n        if(i+O[i]>r){\n            l=i-O[i];\n            r=i+O[i];\n        }\n    }\n    // convert\n    for(int i=1;i<=sd.size();++i){\n        if(sd[i]=='#'){\n            O[i]= O[i]==1? 0:O[i];\n        }else{\n            O[i]= O[i]==2? 1: O[i];\n        }\n    }\n    return vector<int>(O.begin()+1, O.end()-1);\n}\n\nvector<int> Manch(string&s){\n    vector<int>pal(s.size(),0);\n    int n=s.size();\n    for (int i = 0, l = 0, r = 0; i < n; i++) {\n        pal[i] = i >= r ? 0 : min(pal[l + r - i], r - i);\n        while (i + pal[i] < n && i - pal[i] - 1 >= 0 && s[i + pal[i]] == s[i - pal[i] - 1]) pal[i]++;\n        if (i + pal[i] > r) {\n            l = i - pal[i]; r = i + pal[i];\n        }\n    }\n    return pal;\n}\nvector<vector<int> >v;\nint n, k;\nvector<int> get_comp(vector<int>&a, vector<int>&b){\n    vector<int>res(k);\n    for(int i=0;i<k;++i){\n        res[i]=(6-(a[i]+b[i]))%3;\n    }\n    return res;\n}\nvoid solve(){\n    \n    cin>>n>>k;\n    v.resize(n);\n    for(auto &vec:v){\n        vec.resize(k);\n        for(auto &i:vec){\n            cin>>i;\n        }\n    }\n    map<vector<int>,ll>cnt;\n    for(int i=0;i<n;++i){\n        for(int j=i+1;j<n;++j){\n            auto comp=get_comp(v[i],v[j]);\n            cnt[comp]++;\n        }\n    }\n    ll ans=0;\n    for(auto vec:v){\n        ans+= (cnt[vec]*(cnt[vec]-1))/2;\n    }\n    cout<<ans<<endl;\n}\n\nint main(int argc, char *argv[]) {\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n    cout<<std::setprecision(16);\n    int t=1;\n    cin>>t;\n    while(t--){\n        solve();\n    }\n}"
}