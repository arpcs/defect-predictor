{
    "id": 175227838,
    "contestId": 1735,
    "creationTimeSeconds": 1665309984,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "SYCHHA_KEY"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "PyPy 3",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 2150400,
    "source": "# happy_zig_user\r\nn,k = map(int,input().split())\r\ncards = [list(map(int, input().split())) for i in range(n)]\r\n\r\ncards_lookup, counter = {card: i for i, card in enumerate(cards)}, [0] * (n + 1)\r\nfor i in range(n - 1):\r\n    for j in range(i + 1, n):\r\n        counter[cards_lookup.get(tuple(x if x == y else ((x + 1) ^ (y + 1)) - 1 for x, y in zip(cards[i], cards[j])), -1)] += 1\r\nprint(sum(x * (x - 1) // 2 for x in counter[:-1]))"
}