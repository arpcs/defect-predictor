{
    "id": 176187025,
    "contestId": 1735,
    "creationTimeSeconds": 1665766595,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "spiros_gal"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <map>\r\n\r\nusing namespace std;\r\n\r\nmap <long long, int> m;\r\nvector <int> ns;\r\n\r\nint main() {\r\n\tint n, k;\r\n\tcin >> n >> k;\r\n\tlong long temp;\r\n\tlong long curr;\r\n\tint p;\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tcurr = 0;\r\n\t\tp = 1;\r\n\t\tfor (int j = 0; j < k; j++) {\r\n\t\t\tcin >> temp;\r\n\t\t\tcurr += temp * p;\r\n\t\t\tp *= 3;\r\n\t\t}\r\n\r\n\t\tm[curr] = 0;\r\n\t\tns.push_back(curr);\r\n\t}\r\n\r\n\tlong long n1, n2;\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tfor (int j = 0; j < n; j++) {\r\n\t\t\tn1 = ns[i];\r\n\t\t\tn2 = ns[j];\r\n\t\t\tif (i == j) continue;\r\n\t\t\tcurr = 0;\r\n\t\t\tp = 1;\r\n\t\t\tfor (int s = 0; s < k; s++) {\r\n\t\t\t\tif (n1 % 3 == n2 % 3) curr += (n1 % 3) * p;\r\n\t\t\t\telse curr += (3 - (n1 % 3) - (n2 % 3)) * p;\r\n\t\t\t\tp *= 3;\r\n\t\t\t\tn1 /= 3;\r\n\t\t\t\tn2 /= 3;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(m.find(curr) != m.end()) m[curr]++;\r\n\t\t}\r\n\t}\r\n\r\n\tint res = 0;\r\n\tfor (auto u : m) {\r\n\t\tu.second /= 2;\r\n\t\tres += u.second * (u.second - 1) / 2;\r\n\t}\r\n\r\n\tcout << res << endl;\r\n}"
}