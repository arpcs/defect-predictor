{
    "id": 175672874,
    "contestId": 1735,
    "creationTimeSeconds": 1665512105,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "Meet__Vyas"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\n#define mod 1000000007\r\n#define ll long long int\r\nusing namespace std ;\r\n\r\n\r\n\r\nvoid solve() {\r\n    int n , k ; cin >> n >> k ;\r\n    int arr[n][k];\r\n\r\n    for ( int i = 0 ; i< n ;i++){\r\n        for (int j = 0 ; j<k ; j++){\r\n            cin >> arr[i][j] ;\r\n        }\r\n    }\r\n    vector <int> vec ;\r\n\r\n    map <int,int> m ;\r\n    for (int i =0 ;i<n ;i++){\r\n        int sum = 0 ; \r\n        for (int j = 0 ;j< k ; j++ ){\r\n            sum = sum + arr[i][j]*pow(3,j) ;\r\n        }\r\n        //cout << sum << endl;\r\n        vec.push_back(sum) ;\r\n        m[sum] = 0 ;\r\n    }\r\n\r\n    for (int i = 0 ; i< n ; i++){\r\n        for (int j = i+1 ; j<n ;j++){\r\n            int sum = 0 ;\r\n            for (int l = 0 ; l<k ;l++){\r\n                if (arr[i][l] == arr[j][l]){\r\n                    sum = sum + arr[i][l]*pow(3,l) ;\r\n                }\r\n                else {\r\n                    if (arr[i][l] == 0 && arr[j][l]==1){\r\n                        sum = sum + 2*pow(3,l) ;\r\n                    }\r\n                    else if (arr[i][l] == 0 && arr[j][l]==2){\r\n                        sum = sum + 1*pow(3,l) ;\r\n                    }\r\n                    else if (arr[i][l] == 1 && arr[j][l]==0){\r\n                        sum = sum + 2*pow(3,l) ;\r\n                    }\r\n                    else if (arr[i][l] == 2 && arr[j][l]==0){\r\n                        sum = sum + 1*pow(3,l) ;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            if (m.find(sum)!=m.end()){\r\n                m[sum] = m[sum] + 1 ;\r\n            }\r\n        }\r\n    }\r\n\r\n    int ans = 0 ;\r\n    for (int i = 0 ; i<n ;i++){\r\n        int s = m[vec[i]] ;\r\n       // cout << s << \" s s \" << vec[i] <<endl;\r\n        ans = ans + (s*(s-1))/2 ;\r\n    }\r\n\r\n    cout << ans << endl ;\r\n\r\n\r\n\r\n}\r\n\r\n\r\nint main (void) {\r\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n    \r\n        solve() ;\r\n}   "
}