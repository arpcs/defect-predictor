{
    "id": 206629660,
    "contestId": 1735,
    "creationTimeSeconds": 1684580154,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "Insanity_123"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 936,
    "memoryConsumedBytes": 44441600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long int ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double lld;\r\nconst ll mod = 1e9+7;\r\nconst ll mod1 = 998244353;\r\nconst ll inf = 9e18+5;\r\nconst double pi = acosl(-1.0l);\r\n#define rep(i,a,b) for(ll i=a;i<b;i++)\r\n#define ff first\r\n#define ss second\r\nconst long double eps = 1e-9;\r\n\r\nbool equalTo ( double a, double b ){ if ( fabs ( a - b ) <= eps ) return true; else return false; }\r\nbool notEqual ( double a, double b ){if ( fabs ( a - b ) > eps ) return true; else return false; }\r\nbool lessThan ( double a, double b ){ if ( a + eps < b ) return true; else return false; }\r\nbool lessThanEqual ( double a, double b ){if ( a < b + eps ) return true;   else return false;}\r\nbool greaterThan ( double a, double b ){if ( a > b + eps ) return true;else return false;}\r\nbool greaterThanEqual ( double a, double b ){if ( a + eps > b ) return true;else return false;}\r\n\r\n\r\n#ifndef ONLINE_JUDGE\r\nvector<string> vec_splitter(string s) {s += ',';vector<string> res;while(!s.empty()) {res.push_back(s.substr(0, s.find(',')));s = s.substr(s.find(',') + 1);}return res;}\r\nvoid debug_out(vector<string> __attribute__ ((unused)) args,__attribute__ ((unused)) int idx,__attribute__ ((unused)) int LINE_NUM) { cerr << endl; }template <typename Head, typename... Tail>\r\nvoid debug_out(vector<string> args, int idx, int LINE_NUM, Head H, Tail... T) {if(idx == 0) {cerr << \"Line(\" << LINE_NUM << \") \";}stringstream ss; ss << H;cerr << \" [\" << args[idx] << \" = \" << ss.str() <<\"] \";debug_out(args, idx + 1, LINE_NUM, T...);}\r\n\r\nvoid _print(ll t) {cerr << t;}\r\nvoid _print(int t) {cerr << t;}\r\nvoid _print(string t) {cerr << t;}\r\nvoid _print(char t) {cerr << t;}\r\nvoid _print(lld t) {cerr << t;}\r\nvoid _print(double t) {cerr << t;}\r\nvoid _print(ull t) {cerr << t;}\r\n\r\ntemplate <class T, class V> void _print(pair <T, V> p);\r\ntemplate <class T> void _print(vector <T> v);\r\ntemplate <class T> void _print(set <T> v);\r\ntemplate <class T, class V> void _print(map <T, V> v);\r\ntemplate <class T> void _print(multiset <T> v);\r\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\r\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\n\r\n\r\n#define dbg(...) debug_out(vec_splitter(#__VA_ARGS__), 0, __LINE__, __VA_ARGS__)\r\n#else\r\n#define dbg(...)\r\n#endif\r\n\r\n\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x) cerr << #x<<\" \"; _print(x); cerr << endl;\r\n#else\r\n#define debug(x);\r\n#endif\r\n\r\nvoid swap(ll &a , ll &b){ll t = a;a = b;b = t;}\r\n\r\nll min(ll a, ll b){if(a<b)return a;return b;}\r\n\r\nll max(ll a, ll b){if(a>b)return a;return b;}\r\n\r\nll add(ll a, ll b){ll t = a+b;if(t>=mod){return t -= mod;}return t;}\r\n\r\nll sub(ll a, ll b){return (a-b+mod)%mod;}\r\n\r\nll mul(ll a, ll b){return (a*b)%mod;}\r\n\r\nll power(ll a, ll b) {a %= mod;ll ans = 1;while (b > 0) {if (b & 1)ans = ans * a % mod;a = a * a % mod;b /= 2;}return ans;}\r\n\r\nll modInverse(ll a){return power(a,mod-2);}\r\n\r\n\r\nstring xor3(string &a, string &b) {\r\n    string ans = \"\";\r\n    for (int i =0;i<(int)a.size();i++) {\r\n        int curr = int(a[i]-'0') + int(b[i]-'0');\r\n\r\n        \r\n       \r\n        curr %= 3;\r\n        if (curr != 0) {\r\n            curr = 3-curr;\r\n        } \r\n        ans += (curr+'0');\r\n        \r\n    }\r\n\r\n\r\n\r\n    return ans;\r\n}\r\n\r\nll ncr(ll n , ll r) {\r\n    \r\n    if (n<r) return 0;\r\n\r\n    return (n*(n-1))/2;\r\n\r\n}\r\n\r\nint main()\r\n{\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\",\"r\",stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n    freopen(\"error.txt\", \"w\", stderr);\r\n#endif\r\n    ios_base::sync_with_stdio(false); cin.tie(0);\r\n        \r\n    // auto xor3 = [] (string &a, string &b) {\r\n        \r\n    // };\r\n    // string t = \"0011\";\r\n    // string t1 = \"0120\";\r\n    // cout << xor3(t,t1) << \"\\n\";\r\n\r\n    ll n,k;\r\n    cin >> n >> k;\r\n    vector<string> a;\r\n    map<string,int> mp;\r\n    rep (i,0,n) {\r\n        string t = \"\";\r\n        rep (j,0,k) {\r\n            char c;\r\n            cin >> c;\r\n            t += c;\r\n        }\r\n        // mp[t]++;\r\n        a.push_back(t);\r\n    }\r\n    debug(a);\r\n    ll ans  = 0;\r\n    // map<string,vector<string>> vp;\r\n    map<vector<int>, int> cnt;\r\n    for (int i =0;i<n;i++) {\r\n        for (int j =i+1;j<n;j++) {\r\n            string curr_xor = xor3(a[i],a[j]);\r\n            mp[curr_xor]++; \r\n            // vp[curr_xor].push_back(a[i]);\r\n            // vp[curr_xor].push_back(a[j]);\r\n           \r\n        }\r\n    }\r\n\r\n    debug(cnt);\r\n    //debug(mp);\r\n    // debug(vp[\"0000\"]);\r\n    for (auto i : a) {\r\n\r\n        ll x = mp[i];\r\n        ans += ncr(x,2);\r\n    }\r\n\r\n    cout << ans ;    \r\n}\r\n"
}