{
    "id": 174822830,
    "contestId": 1735,
    "creationTimeSeconds": 1665042548,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "vashweek"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "D",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 702,
    "memoryConsumedBytes": 6144000,
    "source": "import std.stdio;\r\nimport std.typecons;\r\nimport core.stdc.stdio : scanf;\r\nimport std.conv;\r\nimport std.array;\r\nimport std.string;\r\nimport std.range;\r\nimport std.algorithm;\r\n\r\nvoid main() {\r\n    int N, K; readf(\"%d %d\\n\", &N, &K);\r\n    long[] X = new long[N];\r\n\r\n    long encode(in int[] xs) {\r\n        long r = 0;\r\n        foreach_reverse (x; xs) {\r\n            r = r * 3 + x;\r\n        }\r\n        return r;\r\n    }\r\n    int[] decode(long x) {\r\n        int[] r = new int[K];\r\n        foreach (k; 0 .. K) {\r\n            r[k] = x % 3;\r\n            x /= 3;\r\n        }\r\n        return r;\r\n    }\r\n\r\n    foreach (n; 0 .. N) {\r\n        auto L = readln.chomp.split(\" \").map!(to!int).array;\r\n        X[n] = encode(L);\r\n    }\r\n\r\n    long f(long a, long b) {\r\n        int[] buf = new int[K];\r\n        foreach (k; 0 .. K) {\r\n            int ak = a % 3, bk = b % 3;\r\n            int ck = (ak == bk ? ak : 3 - ak - bk);\r\n            buf[k] = ck;\r\n            a /= 3;\r\n            b /= 3;\r\n        }\r\n        return encode(buf);\r\n    }\r\n\r\n    bool[long] s;\r\n    foreach (x; X) {\r\n        s[x] = true;\r\n    }\r\n    long ans = 0;\r\n    for (int i = 0; i < N; i++) {\r\n        bool[long] used;\r\n        used[X[i]] = true;\r\n        long c = 0;\r\n        for (int j = 0; j < N; j++) {\r\n            if (X[j] in used) continue;\r\n            long r = f(X[i], X[j]);\r\n            /*\r\n            writefln(\"%s %s -> %s\", i, j, decode(r));\r\n            writeln(r in used);\r\n            writeln(r in s);\r\n            */\r\n            used[r] = true;\r\n            if (r in s) { c++; }\r\n        }\r\n        //writeln([i, c]);\r\n        ans += c * (c-1) / 2;\r\n    }\r\n    writeln(ans);\r\n}\r\n"
}