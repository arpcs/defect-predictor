{
    "id": 176913817,
    "contestId": 1735,
    "creationTimeSeconds": 1666111996,
    "relativeTimeSeconds": 7996,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "Alcatraz_1"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1666104000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\n#define dd double \r\n#define dll deque<long long>\r\n#define vll vector<long long>\r\n#define vc vector<char>\r\n#define sll stack<long long>\r\n#define sc stack<char>\r\n#define mll map<long long,long long>\r\n#define pll pair<long long,long long>\r\n#define mcl map<char,long long>\r\n#define pcl pair<char,long long>\r\n#define f first\r\n#define s second\r\nusing namespace std;\r\n\r\nconst ll m = 998244353;\r\nconst ll M = 1e9+7;\r\nconst ll INF = 100000000000000;\r\n\r\nvoid print(const vector<ll> &v)\r\n{\r\n    for(auto &e : v)\r\n    {\r\n        cout<<e<<\" \";\r\n    }cout<<\"\\n\";\r\n}\r\n\r\nvoid newPrint(const vector<ll> &v)\r\n{\r\n    cout<<\"(\";\r\n    for(auto &x : v)\r\n    {\r\n        cout<<x<<\",\";\r\n    }\r\n    cout<<\") \";\r\n}\r\n\r\n//Among 5 cards -> 10 possible sets exists\r\n//If number of sets in a 5 cards >= 2 -> meta-set\r\nvoid solve()\r\n{\r\n    ll n,k;\r\n    cin>>n>>k;\r\n\r\n    if(n == 1 || n==2)\r\n    {\r\n        cout<<0<<\"\\n\";\r\n        return;\r\n    }\r\n\r\n    map<vector<ll>, ll> mp;\r\n    vector<vector<ll>> cards;\r\n    for(ll i=1; i<=n; i++)\r\n    {\r\n        vector<ll> temp;\r\n\r\n        for(ll j=1;j<=k;j++)\r\n        {\r\n            ll x;\r\n            cin>>x;\r\n            temp.push_back(x);\r\n        }\r\n\r\n        cards.push_back(temp);\r\n        mp[temp] = i-1;\r\n    }\r\n\r\n    sort(cards.begin(), cards.end());\r\n\r\n    // for(ll i=0;i<n;i++)\r\n    // {\r\n    //     cout<<i<<\"-->\";\r\n    //     newPrint(cards[i]);\r\n    //     cout<<\"\\n\";\r\n    // }\r\n\r\n    set<vector<ll>> sets;\r\n\r\n    for(ll i=0; i<n; i++)\r\n    {\r\n        for(ll j=i+1; j<n; j++)\r\n        {\r\n            vector<ll> third;\r\n            for(ll ind=0; ind<k; ind++)\r\n            {\r\n                if(cards[i][ind] == cards[j][ind])\r\n                {\r\n                    third.push_back(cards[i][ind]);\r\n                }\r\n                else\r\n                {\r\n                    ll v1 = cards[i][ind];\r\n                    ll v2 = cards[j][ind];\r\n\r\n                    if((v1 == 0 && v2 == 1) || (v1 == 1 && v2 == 0))\r\n                    {\r\n                        third.push_back(2);\r\n                    }\r\n                    else if((v1 == 0 && v2 == 2) || (v1 == 2 && v2 == 0))\r\n                    {\r\n                        third.push_back(1);\r\n                    }\r\n                    else if((v1 == 1 && v2 == 2) || (v1 == 2 && v2 == 1))\r\n                    {\r\n                        third.push_back(0);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // if(i==2 && j==4)\r\n            // {\r\n            //     cout<<\"For (0,2) -->\"; newPrint(third);\r\n            //     cout<<\"\\n\";\r\n            // }\r\n\r\n            if(mp.find(third) != mp.end())\r\n            {\r\n                vector<ll> temp1;\r\n                temp1.push_back(i);\r\n                temp1.push_back(j);\r\n                temp1.push_back(mp[third]);\r\n                sort(temp1.begin(), temp1.end());\r\n                sets.insert(temp1);\r\n            }\r\n        }\r\n    }\r\n\r\n    // cout<<sets.size()<<\"\\n\";\r\n    // for(auto &cardSet : sets)\r\n    // {\r\n    //     ll c1 = cardSet[0];\r\n    //     ll c2 = cardSet[1];\r\n    //     ll c3 = cardSet[2];\r\n\r\n    //     cout<<\"(\"<<c1<<\",\"<<c2<<\",\"<<c3<<\")\"<<\"--->\";\r\n    //     vector<ll> cc1 = cards[c1];\r\n    //     vector<ll> cc2 = cards[c2];\r\n    //     vector<ll> cc3 = cards[c3];\r\n\r\n    //     newPrint(cc1);\r\n    //     newPrint(cc2);\r\n    //     newPrint(cc3);\r\n\r\n    //     cout<<\"\\n\";\r\n    // }\r\n\r\n    vector<ll> cnt(n,0);\r\n\r\n    for(auto &cardSet : sets)\r\n    {\r\n        ll c1 = cardSet[0];\r\n        ll c2 = cardSet[1];\r\n        ll c3 = cardSet[2];\r\n\r\n        cnt[c1]++;\r\n        cnt[c2]++;\r\n        cnt[c3]++;\r\n    }\r\n\r\n    // print(cnt);\r\n\r\n    ll ans = 0;\r\n\r\n    for(ll i=0;i<n;i++)\r\n    {\r\n        ans = ans + (cnt[i]*(cnt[i]-1))/2;\r\n    }\r\n\r\n    cout<<ans<<\"\\n\";\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false); \r\n    cin.tie(NULL);\r\n    int t=1; \r\n    // cin>>t;\r\n    ll total = t;\r\n    while(t--)\r\n    {\r\n    //   cout<<total - t<<\": \";\r\n       solve();\r\n    }\r\n}\r\n\r\n//(0,1,2)"
}