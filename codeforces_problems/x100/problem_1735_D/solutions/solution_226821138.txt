{
    "id": 226821138,
    "contestId": 1735,
    "creationTimeSeconds": 1696569118,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "Capron"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 234,
    "memoryConsumedBytes": 307200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n \r\n#define pb push_back\r\n#define nline \"\\n\"\r\n#define ff first\r\n#define ss second\r\n#define ll long long\r\n#define nline \"\\n\"\r\n#define int long long\r\n#define INF 1e15\r\n\r\nint MOD = 1e9 + 7;\r\n\r\n\r\nvoid solve(){\r\n    int n, K; cin >> n >> K;\r\n    vector<string> v(n);\r\n    for (int i = 0; i < n; i++) {\r\n        for (int j = 0; j < K; j++) {\r\n            int x; cin >> x;\r\n            v[i] += char(x + '0');\r\n        }\r\n    }\r\n \r\n    map<string, int> M;\r\n    for (int i = 0; i < n; i++) {\r\n        M[v[i]] = i;\r\n    }\r\n \r\n    vector<int> freq(n);\r\n    for (int i = 0; i < n; i++) {\r\n        for (int j = i + 1; j < n; j++) {\r\n            string need;\r\n            for (int k = 0; k < K; k++) {\r\n                int A = v[i][k] - '0';\r\n                int B = v[j][k] - '0';\r\n                if (A == B) {\r\n                    need += (A + '0');\r\n                } else {\r\n                    need += ((3 ^ A ^ B) + '0');\r\n                }\r\n            }\r\n            if (M.find(need) != M.end()) {\r\n                freq[M[need]] += 1;\r\n            }\r\n        }\r\n    }\r\n \r\n    int ans = 0;\r\n    for (int i = 0; i < n; i++) {\r\n        ans += freq[i] * (freq[i] - 1) / 2;\r\n    }\r\n    cout << ans << endl;\r\n}\r\n\r\n\r\nsigned main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    int t = 1;\r\n  //  cin >> t;\r\n    \r\n    while (t--)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}