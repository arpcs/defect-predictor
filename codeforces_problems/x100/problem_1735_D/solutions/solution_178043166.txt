{
    "id": 178043166,
    "contestId": 1735,
    "creationTimeSeconds": 1666831464,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "evking"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <string>\r\n#include <vector>\r\n#include <array>\r\n#include <cstdlib>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <numeric>\r\n#include <iomanip>\r\n#include <cassert>\r\n//#include <bit>\r\n#include <map>\r\n\r\nint main()\r\n{\r\n\tstd::ios_base::sync_with_stdio(0);\r\n\tstd::cin.tie(0);\r\n\tstd::cout.tie(0);\r\n\r\n\tint T{};\r\n\tstd::cin >> T;\r\n\tint n{ 0 };\r\n\tstd::cin >> n;\r\n\r\n\tfor (int L{ 0 }; L < 1; L++)\r\n\t{\r\n\t\t\r\n\t\tint ans{ 0 };\r\n\t\tstd::vector<std::vector<int>> arr;\r\n\t\tint numCommon{ 0 };\r\n\r\n\t\tfor (int i{ 0 }; i < T; i++)\r\n\t\t{\r\n\t\t\tstd::vector<int> entry;\r\n\t\t\tfor (int j{ 0 }; j < n; j++)\r\n\t\t\t{\r\n\t\t\t\tint inp{ 0 };\r\n\t\t\t\tstd::cin >> inp;\r\n\t\t\t\tentry.push_back(inp);\r\n\t\t\t}\r\n\t\t\tarr.push_back(entry);\r\n\t\t}\r\n\r\n\t\tstd::vector<int> count(T, 0);\r\n\r\n\t\tfor (int i{ 0 }; i < T - 2; i++)\r\n\t\t{\r\n\t\t\tfor (int j{ i + 1 }; j < T - 1; j++)\r\n\t\t\t{\r\n\t\t\t\tfor (int k{ j + 1 }; k < T; k++)\r\n\t\t\t\t{\r\n\t\t\t\t\tbool isSet{ true };\r\n\t\t\t\t\tfor (int l{ 0 }; l < n; l++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tint hash{ arr[i][l] + arr[j][l] + arr[k][l] };\r\n\t\t\t\t\t\tif (hash == 0 || hash == 3 || hash == 6)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tisSet = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (isSet)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t//ans++;\r\n\t\t\t\t\t\tcount[i]++;\r\n\t\t\t\t\t\tcount[j]++;\r\n\t\t\t\t\t\tcount[k]++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (int i{ 0 }; i < T; i++)\r\n\t\t{\r\n\t\t\tint top{ static_cast<int>(std::tgamma(count[i] + 1)) };\r\n\t\t\tint bot{ 2 * static_cast<int>(std::tgamma((count[i] - 2) + 1)) };\r\n\t\t\tif (bot == 0)\r\n\t\t\t{\r\n\t\t\t\tbot = 1;\r\n\t\t\t\ttop = 0;\r\n\t\t\t}\r\n\t\t\tint com{ top / bot };\r\n\t\t\tans += com;\r\n\t\t}\r\n\t\t\r\n\r\n\t\tstd::cout << ans;\r\n\t\t//for (int i{ 0 }; i < T; i++)\r\n\t\t//{\r\n\t\t//\tstd::cout << count[i] << \" \";\r\n\t\t//}\r\n\t}\r\n\r\n}"
}