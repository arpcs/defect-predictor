{
    "id": 204058873,
    "contestId": 1735,
    "creationTimeSeconds": 1682868233,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "Syara__"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 343,
    "memoryConsumedBytes": 1740800,
    "source": "#include<bits/stdc++.h>\r\n#define int long long\r\nusing namespace std;\r\nint read(){\r\n    int s=0,f=1;\r\n    char ch=getchar();\r\n    while(ch>'9'||ch<'0'){\r\n        if(ch=='-'){\r\n            f=-1;\r\n        }\r\n        ch=getchar();\r\n    }\r\n    while(ch>='0'&&ch<='9'){\r\n        s=s*10+(ch-'0');\r\n        ch=getchar();\r\n    }\r\n    return s*f;\r\n}\r\nstruct node{\r\n    int x,y;\r\n    node(int _x=0,int _y=0){\r\n        x=_x,y=_y;\r\n    }\r\n    bool operator <(const node &rhs)const{\r\n        return x==rhs.x?y<rhs.y:x<rhs.x;\r\n    }\r\n}ans[2000];\r\nint n,m,a[2000][100],_ans;\r\nsigned main(){\r\n    n=read(),m=read();\r\n    for(int i=1;i<=n;i++){\r\n        for(int j=1;j<=m;j++){\r\n            a[i][j]=read();\r\n        }\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        set<node>s;\r\n        for(int j=1;j<=n;j++){\r\n            ans[j].x=0,ans[j].y=0;\r\n            if(i==j)continue;\r\n            for(int k=1;k<=m;k++){\r\n                if(a[i][k]==a[j][k]){//\u7edf\u8ba1a[i][k]=a[j][k]\r\n                    ans[j].x|=(1<<(k-1));\r\n                }\r\n                if(a[i][k]==0&&a[j][k]==1){\r\n                    ans[j].y|=(1<<(k-1));\r\n                }\r\n                if(a[i][k]==1&&a[j][k]==2){\r\n                    ans[j].y|=(1<<(k-1));\r\n                }\r\n                if(a[i][k]==2&&a[j][k]==0){\r\n                    ans[j].y|=(1<<(k-1));\r\n                }//\u7edf\u8ba1(a[i][k]+1==a[j][k])\r\n            }\r\n            s.insert(ans[j]);//\u653e\u5165s\u4e2d\u7edf\u8ba1\r\n        }\r\n        int cnt=0;\r\n        for(int j=1;j<=n;j++){\r\n            if(i==j)continue;\r\n            cnt+=s.count(node(ans[j].x,ans[j].x^ans[j].y^((1<<m)-1)));//\u5bfb\u627e\u5339\u914d\u7ec4\r\n        }\r\n        _ans+=(cnt/2)*(cnt/2-1)/2;//\u56e0\u4e3a\u6709\u91cd\u590d\u7edf\u8ba1\uff0c\u6240\u4ee5\u8981cnt\u9664\u4ee52\u540e\u518d\u7edf\u8ba1\u7b54\u6848\r\n    }\r\n    printf(\"%d\\n\",_ans);\r\n    return 0;\r\n}\r\n"
}