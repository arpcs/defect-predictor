{
    "id": 177483287,
    "contestId": 1735,
    "creationTimeSeconds": 1666460296,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "Ali_cs7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 717,
    "memoryConsumedBytes": 20275200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nstruct Node {\r\n    int value = -1;\r\n};\r\n\r\nlong long int find_apt(long long int p, long long int q)\r\n{\r\n    long long int r=1;\r\n    long long int ans=0;\r\n    while(p>0 || q>0)\r\n    {\r\n    if((p%3+q%3)==1 && p%3!=q%3)\r\n    {\r\n        ans=ans+2*r;        \r\n    }\r\n    else if((p%3+q%3)==2 && p%3!=q%3)\r\n    {\r\n        ans=ans+1*r;        \r\n    }\r\n    else if((p%3+q%3)==3 && p%3!=q%3)\r\n    {\r\n        ans=ans+0*r;        \r\n    }\r\n    else\r\n    {\r\n        ans= ans+(p%3)*r;\r\n    }\r\n    r=r*3;\r\n    p=p/3;\r\n    q=q/3;\r\n    }\r\n    return ans;\r\n}\r\n \r\nint main()\r\n{\r\n    int n, k;\r\n    cin>>n>>k;\r\n    vector<long long int> v;\r\n    long long int y;\r\n    map<long long int, Node> Map;\r\n\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        long long int sum=0;\r\n\r\n        for(int j=0; j<k; j++)\r\n        {\r\n            cin>>y;\r\n            sum=sum*3+y;\r\n        }\r\n        v.push_back(sum);\r\n        Map[sum].value=0;\r\n\r\n    }\r\n\r\n\r\n\r\n    for(int i=0; i<(n-1); i++)\r\n    {\r\n        for(int j=(i+1); j<n; j++)\r\n        {\r\n            long long int z=find_apt(v[i], v[j]);\r\n            if(Map[z].value>=0)\r\n            Map[z].value++;\r\n        }\r\n    }\r\n\r\n    long long int ans=0;\r\n\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        if(Map[v[i]].value>=2)\r\n        {\r\n            ans=ans+(Map[v[i]].value*(Map[v[i]].value-1))/2;\r\n        }\r\n    }\r\n    cout<<ans<<endl;\r\n \r\n  return 0;\r\n}"
}