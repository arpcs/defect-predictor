{
    "id": 178907943,
    "contestId": 1735,
    "creationTimeSeconds": 1667357846,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "davigbc"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 8396800,
    "source": "#include <bits/stdc++.h>\r\n#define int long long\r\n#define maxn 1010\r\n#define maxk 20\r\n#define choose2(i) (i*(i-1)/2)\r\n\r\nusing namespace std;\r\n\r\nint x[maxn][maxk], v[maxn], tab[maxn][maxn], cnt[maxn];\r\n\r\nvoid mark(int x, int y, int z){\r\n\r\n  int tmp[3] = {x, y, z};\r\n\r\n  for(int i = 0; i < 3; i++)\r\n    for(int j = i+1; j < 3; j++)\r\n      tab[v[i]][v[j]] = 1;\r\n}\r\n\r\nint32_t main(){\r\n\r\n  int n, k, ans = 0;\r\n\r\n  cin >> n >> k;\r\n  \r\n  map < int, int > M;\r\n\r\n  for(int i = 0; i < n; i++){\r\n    for(int j = 0; j < k; j++){\r\n      cin >> x[i][j];\r\n\r\n      v[i] += pow(3, j)*x[i][j];\r\n    }\r\n\r\n    cout << v[i] << \" \";\r\n    \r\n    M[v[i]] = i;\r\n  }\r\n\r\n  memset(tab, -1, sizeof(tab));\r\n\r\n  for(int i = 0; i < n; i++){\r\n    for(int j = i+1; j < n; j++){\r\n      \r\n      int t = 0;\r\n      \r\n      for(int h = 0; h < k; h++){\r\n        if(x[i][h] == x[j][h])\r\n          t += pow(3, h)*x[i][h];\r\n        else\r\n          t += pow(3, h)*(3 - x[i][h] - x[j][h]);\r\n      }\r\n\r\n      if(M.find(t) != M.end() && tab[i][j] == -1){\r\n        mark(i, j, M[t]);\r\n        cnt[i]++;\r\n      }\r\n    }\r\n  }\r\n\r\n  for(int i = 0; i < n; i++) cout << cnt[i] << \"\\n\";\r\n  \r\n  for(int i = 0; i < n; i++){\r\n    for(int j = 0; j < n; j++){\r\n      if(tab[i][j] != -1){\r\n        cnt[tab[i][j]]--;\r\n        cnt[j]--;\r\n      }\r\n    }\r\n\r\n    ans += choose2(cnt[i]);\r\n  }\r\n\r\n  cout << ans << \"\\n\";\r\n\r\n  return 0; \r\n}"
}