{
    "id": 174610933,
    "contestId": 1735,
    "creationTimeSeconds": 1664880004,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "jai6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// #include <ext/pb_ds/tree_policy.hpp>\r\n// #include <ext/pb_ds/assoc_container.hpp>\r\n// using namespace __gnu_pbds;\r\n// typedef tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update > Tree;\r\n// // find_by_order, order_of_key\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef complex<ld> cd;\r\ntypedef unsigned long long ull;\r\n \r\ntypedef pair<int, int> pi;\r\ntypedef pair<ll,ll> pl;\r\ntypedef pair<ld,ld> pd;\r\n \r\ntypedef vector<int> vi;\r\ntypedef vector<vector<int>> vvi;\r\ntypedef vector<ld> vd;\r\ntypedef vector<ll> vl;\r\ntypedef vector<pi> vpi;\r\ntypedef vector<pl> vpl;\r\ntypedef vector<cd> vcd;\r\n\r\ntemplate<class T> using pq = priority_queue<T>;\r\ntemplate<class T> using pqg = priority_queue<T, vector<T>, greater<T>>;\r\n\r\n#define FIO ios_base::sync_with_stdio(false);cin.tie(NULL);\r\n#define FOR(i, a, b) for (int i=a; i<(b); i++)\r\n#define F0R(i, a) for (int i=0; i<(a); i++)\r\n#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)\r\n#define F0Rd(i,a) for (int i = (a)-1; i >= 0; i--)\r\n#define trav(a,x) for (auto& a : x)\r\n#define uid(a, b) uniform_int_distribution<long long>(a, b)(rng)\r\n\r\n#define sz(x) (long long)(x).size()\r\n#define mp make_pair\r\n#define pb push_back\r\n#define ff first\r\n#define ss second\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define all(x) x.begin(), x.end()\r\n#define ins insert\r\n\r\n#define PI 3.1415926535897932384626\r\n\r\ntemplate<class T> bool ckmin(T& a, const T& b) { return b < a ? a = b, 1 : 0; }\r\ntemplate<class T> bool ckmax(T& a, const T& b) { return a < b ? a = b, 1 : 0; }\r\n\r\nconst int M1 = 1000000007;\r\nconst int M2 = 998244353;\r\nconst char nl = '\\n';\r\n\r\n/***************************************************************************************************************************/\r\n\r\nll modExp(ll a, ll b, ll m) {\r\n    a %= m;\r\n    ll res = 1;\r\n    while (b > 0) {\r\n        if (b & 1)\r\n            res = res * a % m;\r\n        a = a * a % m;\r\n        b >>= 1;\r\n    }\r\n    return res;\r\n}\r\n\r\n\r\nvector<bool> sieve(){\r\n\tint n = 1e6;\r\n\tvector<bool> prime(n+1,true);\r\n\t\r\n    for (int p = 2; p * p <= n; p++)\r\n    {\r\n \r\n        if (prime[p] == true)\r\n        {\r\n \r\n            for (int i = p * p; i <= n; i += p)\r\n                prime[i] = false;\r\n        }\r\n    }\r\n\treturn prime;\r\n}\r\n\r\n#define MOD_VAL M1\r\n\r\nll inv(ll base) { return modExp(base, MOD_VAL-2, MOD_VAL); }\r\n\r\n// Add template for extended euclidean algo to calculate inv for non-prime modulus\r\n\r\nll combination(ll n, ll r, ll m, ll *fact, ll *ifact) {ll val1 = fact[n]; ll val2 = ifact[n - r]; ll val3 = ifact[r]; return (((val1 * val2) % m) * val3) % m;}\r\n\r\nll add(ll a, ll b) { a = a % MOD_VAL; b = b % MOD_VAL; return (((a + b) % MOD_VAL) + MOD_VAL) % MOD_VAL; }\r\nll mul(ll a, ll b) { a = a % MOD_VAL; b = b % MOD_VAL; return (((a * b) % MOD_VAL) + MOD_VAL) % MOD_VAL; }\r\nll sub(ll a, ll b) {a = a % MOD_VAL; b = b % MOD_VAL; return (((a - b) % MOD_VAL) + MOD_VAL) % MOD_VAL;}\r\nll dvd(ll a, ll b) { a = a % MOD_VAL; b = b % MOD_VAL; return (mul(a, inv(b)) + MOD_VAL) % MOD_VAL; }\r\n\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\n/*************************************************DEBUGGING*****************************************************************/\r\nvoid __print(int x) {cerr << x;}\r\nvoid __print(long x) {cerr << x;}\r\nvoid __print(long long x) {cerr << x;}\r\nvoid __print(unsigned x) {cerr << x;}\r\nvoid __print(unsigned long x) {cerr << x;}\r\nvoid __print(unsigned long long x) {cerr << x;}\r\nvoid __print(float x) {cerr << x;}\r\nvoid __print(double x) {cerr << x;}\r\nvoid __print(long double x) {cerr << x;}\r\nvoid __print(char x) {cerr << '\\'' << x << '\\'';}\r\nvoid __print(const char *x) {cerr << '\\\"' << x << '\\\"';}\r\nvoid __print(const string &x) {cerr << '\\\"' << x << '\\\"';}\r\nvoid __print(bool x) {cerr << (x ? \"true\" : \"false\");}\r\n \r\ntemplate<typename T, typename V>\r\nvoid __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}\r\ntemplate<typename T>\r\nvoid __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? \",\" : \"\"), __print(i); cerr << \"}\";}\r\nvoid _print() {cerr << \"]\\n\";}\r\ntemplate <typename T, typename... V>\r\nvoid _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << \", \"; _print(v...);}\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x...) cerr << \"[\" << #x << \"] = [\"; _print(x)\r\n#else\r\n#define debug(x...)\r\n#endif\r\n/***************************************************************************************************************************/\r\n\r\nint nc2(int x){\r\n\treturn x*(x-1)/2;\r\n}\r\n\r\nvoid solve(){\r\n\tint n,k_len;cin>>n>>k_len;\r\n\r\n\tvvi c(n, vi(k_len,0));\r\n\r\n\tF0R(i,n){\r\n\t\tF0R(j,k_len) cin>>c[i][j];\r\n\t}\r\n\r\n\tmap<string,int> mp;\r\n\r\n\tfor(int i=0;i<n;i++){\r\n\t\tfor(int j=i+1;j<n;j++){\r\n\t\t\tstring s = \"\";\r\n\t\t\tfor(int k=0;k<k_len;k++){\r\n\t\t\t\tint lambda = c[i][k] ^ c[j][k];\r\n\r\n\t\t\t\tif(lambda == 0) s += to_string(c[i][k]);\r\n\t\t\t\telse s += to_string(lambda^3);\r\n\t\t\t}\r\n\r\n\t\t\t// debug(s);\r\n\t\t\tmp[s]++;\r\n\t\t}\r\n\t}\r\n\r\n\tdebug(mp);\r\n\r\n\tint ans = 0;\r\n\ttrav(x,mp){\r\n\t\tans += nc2(x.ss);\r\n\t}\r\n\r\n\tcout<<ans<<nl;\r\n}\r\n \r\n/* \r\n    * check number of test cases (Are there multiple test cases?)\r\n    * int overflow, array bounds\r\n    * special cases (n=1?)\r\n    * WRITE STUFF DOWN\r\n    * DON'T GET STUCK ON ONE APPROACH\r\n*/\r\n\r\nsigned main(){\r\n\tFIO\r\n\r\n\tint t=1;\r\n\r\n\twhile(t--){\r\n\t\tsolve();\r\n\t}\t\r\n\r\n\treturn 0;\r\n}\r\n"
}