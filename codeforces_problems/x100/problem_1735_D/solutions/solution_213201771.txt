{
    "id": 213201771,
    "contestId": 1735,
    "creationTimeSeconds": 1689039671,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "shraddha__gulati"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 1122,
    "memoryConsumedBytes": 128819200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long int\r\nvector<ll> findComplementCard(vector<ll> a, vector<ll> b)\r\n{\r\n    vector<ll> c;\r\n    for (int i = 0; i < a.size(); i += 1)\r\n    {\r\n        if (a[i] == b[i])\r\n            c.push_back(a[i]);\r\n        else if (a[i] != 0 && b[i] != 0)\r\n            c.push_back(0);\r\n        else if (a[i] != 1 && b[i] != 1)\r\n            c.push_back(1);\r\n        else if (a[i] != 2 && b[i] != 2)\r\n            c.push_back(2);\r\n    }\r\n    return c;\r\n}\r\nint main()\r\n{\r\n\r\n    ll n, m;\r\n    cin >> n >> m;\r\n    vector<vector<ll>> v(n, vector<ll>(m));\r\n    map<vector<ll>, ll> centralCard;\r\n    for (int i = 0; i < n; i += 1)\r\n    {\r\n        for (int j = 0; j < m; j += 1)\r\n        {\r\n            cin >> v[i][j];\r\n        }\r\n    }\r\n    for (int i = 0; i < n; i += 1)\r\n    {\r\n        for (int j = i + 1; j < n; j += 1)\r\n        {\r\n            vector<ll> c = findComplementCard(v[i], v[j]);\r\n            centralCard[c] += 1;\r\n        }\r\n    }\r\n    ll ans = 0;\r\n    for (int i = 0; i < n; i += 1)\r\n    {\r\n        vector<ll> card;\r\n        for (int j = 0; j < m; j += 1)\r\n        {\r\n            card.push_back(v[i][j]);\r\n        }\r\n        if (centralCard[card] >= 2)\r\n        {\r\n            ll val = centralCard[card];\r\n            ans += (val * (val - 1)) / 2;\r\n        }\r\n    }\r\n    cout << ans << endl;\r\n}\r\n"
}