{
    "id": 186483257,
    "contestId": 1735,
    "creationTimeSeconds": 1671809332,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "ks89417"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 748,
    "memoryConsumedBytes": 22425600,
    "source": "// C Submitted by Kunal Singh\r\n\r\n#include<bits/stdc++.h>\r\n \r\n#define ll long long \r\n#define vl vector<long long>\r\n#define vc vector<char>\r\n#define vvl vector<vector<long long>>\r\n#define eb emplace_back\r\n#define pb push_back\r\n#define F first\r\n#define S second\r\n#define endl \"\\n\"\r\n#define N cout<<\"NO\"<<endl\r\n#define Y cout<<\"YES\"<<endl\r\n#define loop(n) for(ll i=0;i<n;i++)\r\n#define fr(i,x,n) for(ll i=x;i<n;i++)\t\r\n#define all(v) v.begin(),v.end() \r\n#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL)\r\n#define each(seq) for(auto ele:seq) \r\n\r\n\r\nusing namespace std;\r\n\r\n \r\nll mod(ll n)\r\n{\r\n\tll m = 998244353;\r\n    return n%m;\r\n}\r\n\r\nll findXor(ll n) // to find XOR(1->n)\r\n{\r\n    ll rem=n%4;\r\n    if(rem==0)\r\n    {\r\n        return n;\r\n    }\r\n    else if(rem==1)\r\n    {\r\n        return 1;\r\n    }\r\n    else if(rem==2)\r\n    {\r\n        return n+1;\r\n    }\r\n    else\r\n    {\r\n        return 0;\r\n    }\r\n}\r\n \r\nll FindGCD(ll a , ll b)\r\n{\r\n    if(b==0){return a;}\r\n    return FindGCD(b,a%b);\r\n}\r\n \r\nll FindNumofDivisors(ll n)\r\n{\r\n    ll res = 0;\r\n    for(ll i=1;i*i<=n;i++)\r\n    {\r\n        if(!(n%i))\r\n        {\r\n            res+=2;\r\n        }\r\n    }\r\n    \r\n    ll chk = sqrt(n);\r\n    if(chk*chk==n)\r\n    {\r\n        // THEN n is a perfect sqaure so root n ek single number hai jise do baar gin liya in factors for ex: 16 ke lie 4 2 baar count ho gaya\r\n        res--;\r\n    }\r\n    \r\n    return res;\r\n    \r\n}\r\n\r\nbool overlapping_llervals(ll s1,ll s2,ll e1,ll e2)\r\n{\r\n    return (e1>=s2 && s1<=e2);\r\n}\r\n\r\nvl temppp(1e6+10,1);\r\nvl PrimeSiv;\r\nvoid Fill_PrimeSiv()\r\n{\r\n\ttemppp[0]=temppp[1]=0;\r\n\tfr(i,2,1e6+1)\r\n\t{\r\n\t    if(temppp[i]==0) continue;\r\n\t\tfor(ll j=2;j*i<=1e6+1;j++)\r\n\t\t{\r\n\t\t\ttemppp[j*i] = 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfr(i,0,1e6+1)\r\n\t{\r\n\t\tif(temppp[i]) PrimeSiv.eb(i);\r\n\t}\r\n}\r\n\r\nvoid RotateMatrixBy90Degrees(vvl &res)\r\n{\r\n\tll n=res.size();\r\n\t// Lets first take transpose of the matrix\r\n\tfr(i,0,n)\r\n\t{\r\n\t\tfr(j,i+1,n)\r\n\t\t{\r\n\t\t\tswap(res[i][j],res[j][i]);\r\n\t\t}\r\n\t}\r\n\t// Lets swap rows and make the matrix 90 Degree rotated\r\n\tfr(i,0,n)\r\n\t{\r\n\t\tfr(j,0,n/2)\r\n\t\t{\r\n\t\t\tswap(res[i][j],res[i][n-1-j]);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nll FINDLen(ll n)\r\n{\r\n\tll res=0;\r\n\twhile(n)\r\n\t{\r\n\t\tres++;\r\n\t\tn/=10;\r\n\t}\r\n\treturn res;\r\n}\r\n\r\nbool AreOfSameParity(ll a,ll b)\r\n{\r\n\tif(a&1 && b&1){return true;}\r\n\telse if(!(a&1) && !(b&1)){return true;}\r\n\treturn false;\r\n}\r\n\r\nbool isPrime(ll n)\r\n{\r\n\tif(n==1) return 0;\r\n\tll div = 1;\r\n\tfor(ll i = 2;i*i<=n;i++)\r\n\t{\r\n\t\tif(n%i==0){div++;}\r\n\t}\r\n\treturn div==1;\r\n}\r\n\r\nll binpow(ll a,ll b)\r\n{\r\n\tll res = 1;\r\n\twhile(b>0)\r\n\t{\r\n\t\tif(b&1)\r\n\t\t{\r\n\t\t\tres = mod(mod(res)*mod(a));\r\n\t\t}\r\n\t\ta = mod(mod(a)*mod(a));\r\n\t\tb>>=1;\r\n\t}\r\n\treturn mod(res);\r\n}\r\n\r\n// Fermat's Little Theorem \r\nll invmod(ll n,ll p)\r\n{\r\n\treturn binpow(n,p-2);\r\n}\r\n\r\n// ll ncr(ll a,ll b)\r\n// {\r\n\t// ll num1 = mod(fact(a));\r\n\t// ll num2 = mod(fact(b));\r\n\t// ll num3 = mod(fact(a-b));\r\n\t\r\n\t// return mod(mod(num1)*mod(mod(invmod(num2,998244353))*mod(invmod(num3,998244353))));\t\r\n// }\r\n\r\nll digSum(ll n){\r\n\tll s = 0;\r\n\twhile(n > 0 ){\r\n\t\ts += n%10;\r\n\t\tn/=10;\r\n\t}\r\n\treturn s;\r\n}\r\nll digitCount(ll n)\r\n{\r\n\tll ret = 0;\r\n\twhile(n > 0)\r\n\t{\r\n\t\tret++;\r\n\t\tn/=10;\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nll fact(ll n,ll x)\r\n{\r\n\tll res = 1;\r\n\tfr(i,2,n+1)\r\n\t{\r\n\t\tres = (res*i)%x;\r\n\t}\r\n\treturn res%x;\r\n}\r\n\r\nvoid debugvvl(vvl &a)\r\n{\r\n\tfor(auto vec:a)\r\n\t{\r\n\t\tfor(auto ele:vec)\r\n\t\t{\r\n\t\t\tcout<<ele<<\" \";\r\n\t\t}\r\n\t\tcout<<endl;\r\n\t}\r\n}\r\n\r\n\r\n// SOLUTION STARTS HERE\r\n\r\n\r\nvoid ERROR_404_MY_BRAIN_NOT_FOUND()\r\n{\r\n    ll n,k;cin>>n>>k;\r\n    vvl a(n,vl(k));\r\n    map<vl,ll> mp;\r\n    fr(i,0,n)\r\n    {\r\n        fr(j,0,k)\r\n        {\r\n            cin>>a[i][j];\r\n        }\r\n        mp.insert({a[i],i});\r\n    }\r\n    vvl res;\r\n    set<vl> s;\r\n    vl cnt(n,0);\r\n    fr(i,0,n-1)\r\n    {\r\n        fr(j,i+1,n)\r\n        {\r\n            vl temp;\r\n            fr(z,0,k)\r\n            {\r\n                if(a[i][z]==a[j][z]) temp.eb(a[i][z]);\r\n                else temp.eb(3-a[i][z]-a[j][z]);\r\n            }\r\n            if(mp.find(temp)!=mp.end())\r\n            {\r\n                vl xx(3);\r\n                xx[0] = i;xx[1] = j;xx[2] = mp[temp];\r\n                sort(all(xx));\r\n                if(s.find(xx)!=s.end()){continue;}\r\n                cnt[i]++;cnt[j]++;cnt[mp[temp]]++;\r\n                res.eb(xx);\r\n                s.insert(xx);\r\n            }\r\n        }\r\n    }\r\n    \r\n    ll ans = 0;\r\n    \r\n    for(auto ele:cnt)\r\n    {\r\n        ans+=(ele*(ele-1))/2;\r\n    }\r\n    \r\n    cout<<ans<<endl;\r\n    \r\n}\r\n\r\nint main()       \r\n{\r\n\tfast_io;\r\n\tFill_PrimeSiv();\r\n\t\r\n\tll tc=1;\r\n    // cin>>tc;\r\n\tloop(tc)\r\n\t{\r\n\t\tERROR_404_MY_BRAIN_NOT_FOUND();\r\n\t}\r\n    return 0;\r\n}"
}