{
    "id": 176240297,
    "contestId": 1735,
    "creationTimeSeconds": 1665812604,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "traqq3d"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "PyPy 3",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 2457600,
    "source": "import math\r\n\r\n\r\nn, k = map(int, input().split())\r\n\r\ncards = set()\r\nsetAnchors = {}\r\n\r\n\r\ndef get_card_3(card1, card2):\r\n    return tuple(\r\n        [\r\n            feature1 if feature1 == feature2 else 3 - feature1 - feature2\r\n            for feature1, feature2 in zip(card1, card2)\r\n        ]\r\n    )\r\n\r\n\r\nfor _ in range(n):\r\n    card = tuple(map(int, input().split()))\r\n    cards.add(card)\r\n\r\nfor card1 in cards:\r\n    for card2 in cards:\r\n\r\n        if card1 == card2:\r\n            continue\r\n\r\n        card3 = get_card_3(card1, card2)\r\n\r\n        if not card3 in cards:\r\n            continue\r\n\r\n        if card3 in setAnchors:\r\n            setAnchors[card3] += 1\r\n        else:\r\n            setAnchors[card3] = 1\r\n\r\nL = lambda x: x//2\r\nG = lambda x: math.comb(x, 2)\r\nF = lambda x: G(L(x))\r\nprint(sum(list(map(F,setAnchors.values()))))\r\n"
}