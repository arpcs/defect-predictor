{
    "id": 174904689,
    "contestId": 1735,
    "creationTimeSeconds": 1665085418,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "vaibhav_gupta7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 1123,
    "memoryConsumedBytes": 64512000,
    "source": "#include <bits/stdc++.h>\r\n \r\nusing namespace std;\r\n \r\n#define F first\r\n#define S second\r\ntypedef long long       ll;\r\ntypedef long double     ld;\r\ntypedef pair<ll, ll>   pll; \r\ntypedef pair<int, int> pii; \r\n \r\nint n, k;\r\nvector<vector<int>> v;\r\n \r\nvector<int> get_comp(vector<int> a, vector<int> b) {\r\n\tvector<int> res(k);\r\n\tfor (int i = 0; i < k; i++)\r\n\t\tres[i] = (6 - (a[i] + b[i])) % 3;\r\n\treturn res;\r\n}\r\n \r\nvoid solve() {\r\n\tcin >> n >> k;\r\n\tv.resize(n);\r\n\tfor (auto &vec : v) {\r\n\t\tvec.resize(k);\r\n\t\tfor (auto &i : vec)\r\n\t\t\tcin >> i;\r\n\t}\r\n\tmap<vector<int>, int> cnt;\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tfor (int j = i + 1; j < n; j++) {\r\n\t\t\tauto comp = get_comp(v[i], v[j]);\r\n\t\t\tcnt[comp]++;\r\n\t\t}\r\n\t}\r\n\tll ans = 0;\r\n\tfor (auto vec : v) {\r\n\t\tans += (ll)cnt[vec] * (cnt[vec] - 1) / 2;\r\n\t}\r\n\tcout << ans << '\\n';\r\n}\r\n \r\nint main() {\r\n\t// viv = true;\r\n\tios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n\tcout << fixed << setprecision(20);\r\n\tint t = 1; \r\n\t// cin >> t;\r\n\twhile (t--)\r\n\t\tsolve();\r\n \r\n\t#ifdef DEBUG\r\n\t\tcerr << \"Runtime is: \" << clock() * 1.0 / CLOCKS_PER_SEC << endl;\r\n\t#endif\r\n}"
}