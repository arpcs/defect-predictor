{
    "id": 174746733,
    "contestId": 1735,
    "creationTimeSeconds": 1664976154,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "abhinavkgrd"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef vector<int> vi;\r\ntypedef pair<int, int> pi;\r\n\r\n#define F first\r\n#define S second\r\n#define PB push_back\r\n#define MP make_pair\r\n\r\n#define REP(i, a, b) for (int i = a; i < b; i++)\r\n\r\nll MOD = 10e7 + 9;\r\n\r\nvoid setupFileIO()\r\n{\r\n    freopen(\"../input.txt\", \"r\", stdin);\r\n    freopen(\"../output.txt\", \"w\", stdout);\r\n}\r\nvoid setup()\r\n{\r\n    // setupFileIO();\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n}\r\n\r\nvoid solve()\r\n{\r\n    // solution goes here\r\n    int n, k;\r\n    cin >> n >> k;\r\n    string a[n];\r\n    set<string> aSet;\r\n    REP(i, 0, n)\r\n    {\r\n        a[i] = \"\";\r\n        REP(j, 0, k)\r\n        {\r\n            char c;\r\n            cin >> c;\r\n            a[i] += c;\r\n            aSet.insert(a[i]);\r\n        }\r\n    }\r\n\r\n    map<string, int> cnt;\r\n    REP(i, 0, n)\r\n    {\r\n        aSet.erase(a[i]);\r\n        REP(j, i + 1, n)\r\n        {\r\n            aSet.erase(a[j]);\r\n            string b = \"\";\r\n            REP(kx, 0, k)\r\n            {\r\n                if (a[i][kx] == a[j][kx])\r\n                {\r\n                    b += a[i][kx];\r\n                }\r\n                else if (a[i][kx] == '1' && a[j][kx] == '2')\r\n                {\r\n                    b += '0';\r\n                }\r\n                else if (a[i][kx] == '0' && a[j][kx] == '2')\r\n                {\r\n                    b += '1';\r\n                }\r\n                else\r\n                {\r\n                    b += '2';\r\n                }\r\n            }\r\n            if (aSet.find(b) != aSet.end())\r\n            {\r\n                cnt[b]++;\r\n            }\r\n        }\r\n    }\r\n    ll ans = 0;\r\n    for (auto x : cnt)\r\n    {\r\n        if (x.S >= 2)\r\n        {\r\n            ans += x.S * (x.S + 1) / 2;\r\n        }\r\n    }\r\n    cout << ans << \"\\n\";\r\n}\r\n\r\nint main()\r\n{\r\n\r\n    setup();\r\n\r\n    int t;\r\n    t = 1;\r\n    while (t--)\r\n    {\r\n        solve();\r\n    }\r\n}"
}