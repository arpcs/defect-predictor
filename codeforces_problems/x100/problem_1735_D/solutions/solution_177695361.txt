{
    "id": 177695361,
    "contestId": 1735,
    "creationTimeSeconds": 1666555962,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "sanskar_jain"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 374,
    "memoryConsumedBytes": 921600,
    "source": "#include <bits/stdc++.h>\r\n// #define testPrint  \r\nusing namespace std;\r\nbool testing = false;\r\nbool stress = false;\r\nbool recursion = false;\r\n#define templatify template<typename T>\r\nusing ll = long long;\r\nusing ull = unsigned long long;\r\nusing ld = long double;\r\n\r\ntemplate<typename T1,typename T2> ostream& operator<<(ostream &os,pair<T1,T2> &p){os<<p.first<<\" \"<<p.second;return os;}\r\ntemplate<typename T1,typename T2> istream& operator>>(istream &is,pair<T1,T2> &p){is>>p.first>>p.second;return is;}\r\ntemplatify istream& operator>>(istream &is,vector<T>&vec){for(int i =0;i<vec.size();i++){ cin>>vec[i]; }  return is;}\r\ntemplatify void print(T var){\r\n    cerr<<var<<\" \";\r\n}\r\ntemplatify void print(vector<T> vec){\r\nfor(auto itr = vec.begin();itr!=vec.end();itr++){\r\n    print(*itr);\r\n}\r\n}\r\n\r\ntemplatify void print(T arr[],ll n){\r\n    for(ll i = 0;i<n;i++){\r\n        print(arr[i]);\r\n    }\r\n}\r\n\r\ntemplatify void print(set<T> st){\r\n    for(auto itr = st.begin();itr!=st.end();itr++){\r\n        print(*itr);\r\n    }\r\n}\r\n\r\ntemplate<class T1,class T2> void print(map<T1,T2> mp){\r\n    for(auto itr = mp.begin();itr!=mp.end();itr++){\r\n        print(\"key: \"); print(itr->first);\r\n        print(\"value: \");print(itr->second);\r\n    }\r\n\r\n}\r\n\r\ntemplatify class Debugger{\r\nvoid print(T var){\r\n    cerr<<var<<\" \";\r\n}\r\nvoid print(vector<T> vec){\r\nfor(auto itr = vec.begin();itr!=vec.end();itr++){\r\n    print(*itr);\r\n}\r\n}\r\n\r\n\r\nDebugger operator<<(T var){\r\n print(var);\r\n return Debugger();\r\n}\r\n\r\n};\r\n\r\n\r\n\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x) cerr<<#x<<\" \";print(x);cerr<<endl;\r\n#define debArr(x,y) cerr<<#x<<\" \";print(x,y);cerr<<endl;\r\n#else\r\n#define debug(x) \r\n#define debArr(x,y) \r\n#endif\r\n\r\ntemplate<class T> void arrInput(T arr[], int n)\r\n{\r\n    \r\n    \r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        T el;\r\n        cin >> el;\r\n        arr[i] = el;\r\n    }\r\n}\r\n\r\ntemplate<class T1,class T2> void arrInput(pair<T1,T2> arr[],int n){\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        pair<T1,T2> el;\r\n        cin >> el;\r\n        arr[i] = el;\r\n    }\r\n\r\n}\r\n\r\ntemplate<class T> void arrInput(vector<T> &arr, int n)\r\n{\r\n    \r\n    \r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        T el;\r\n        cin >> el;\r\n        arr.push_back(el);\r\n    }\r\n}\r\n\r\ntemplate<class T> void arrInput(vector<T> &arr)\r\n{\r\n    \r\n    \r\n    for (int i = 0; i < arr.size(); i++)\r\n    {\r\n        T el;\r\n        cin >> el;\r\n        arr[i] = el;\r\n    }\r\n}\r\n\r\n// void printMap(map<int, float> infected[], int n, string message = \"printing map function\")\r\n// {\r\n//     if (testing)\r\n//     {\r\n//         cout << message << \" \"\r\n//              << \"new print\" << endl\r\n//              << endl;\r\n\r\n//         for (int i = 0; i < n; i++)\r\n//         {\r\n//             cout << endl\r\n//                  << \"map \" << i << \" \" << endl;\r\n//             for (auto j = infected[i].begin(); j != infected[i].end(); j++)\r\n//             {\r\n//                 cout << j->first << \" \" << j->second << endl;\r\n//             }\r\n//         }\r\n//         cout << endl;\r\n//     }\r\n// }\r\n\r\n// void printArray(int n, int arr[], bool forcePrint = false, string message = \"printing array\")\r\n// {\r\n//     if (testing)\r\n//     { \r\n//         cout<<message<<\" \";\r\n//     }\r\n//     if( testing ||forcePrint)\r\n//         for (int j = 0; j < n; j++)\r\n//         {\r\n//             cout << arr[j] << \" \";\r\n//         }\r\n    \r\n// }\r\n\r\n// void printSet(set<int,greater<int>> arr){\r\n// if(testing)\r\n// {for(auto i = arr.begin();i!=arr.end();i++){\r\n//     cout<<*i<<\" \";\r\n// }\r\n// cout<<endl;}\r\n// }\r\n\r\nint placeHigh(int arr[],int low,int high){\r\n    int less = low;\r\n    for(low;low<high;low++){\r\n        if (arr[low]<=arr[high])\r\n        {\r\n            swap(arr[less],arr[low]);\r\n            less++;\r\n        }\r\n        \r\n    }\r\n    swap(arr[less],arr[high]);\r\n    return less;\r\n}\r\n\r\nvoid quicksort(int arr[],int low,int high){\r\n    if(low<high){\r\n        int pi = placeHigh(arr,low,high);\r\n        quicksort(arr,low,pi-1);\r\n        quicksort(arr,pi+1,high);\r\n    }\r\n}\r\n\r\n// void printValue(string value,string message = \"value = \"){\r\n//  if(testing)\r\n//  cout<<message<<value<<endl;\r\n// }\r\n\r\nvoid inputSet(set<int,greater<int>> *mySet,int n){\r\n    \r\n    for (int i = 0; i < n; i++)\r\n    {   int el;\r\n    cin>>el;\r\n        (*mySet).insert(el);\r\n    }\r\n    \r\n}\r\n\r\ntemplatify long long binarySearch(vector<T> vec,T el){\r\n    long long low = 0,high = vec.size()-1;\r\n    while(low<=high){\r\n        long long mid = low + abs((high-low)/2);\r\n        if(vec[mid]==el){\r\n            return mid;\r\n        }\r\n        if(el<vec[mid]){\r\n            high = mid-1;\r\n        }else{\r\n            low = mid + 1;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\nvoid solve()\r\n{\r\n    int n,k;\r\n    cin >> n>>k;\r\n    vector<vector<ll>> arr(n);\r\n    set<vector<ll>> st;\r\n    for(int i = 0;i<n;i++){\r\n        arrInput(arr[i],k);\r\n        // debug(arr[i]);\r\n        st.insert(arr[i]);\r\n    }\r\n    map<vector<ll>,ll> s;\r\n    for(int i =0;i<n;i++){\r\n        for(int j = i+1;j<n;j++){\r\n            vector<ll> card(k);\r\n            for(int l = 0;l<k;l++){\r\n                if(arr[i][l]==arr[j][l]){\r\n                    card[l]=arr[i][l];\r\n                }else{\r\n                    card[l] = arr[i][l]^arr[j][l]^3;\r\n                }\r\n                \r\n            }\r\n            debug(card);\r\n            if(st.find(card)!=st.end()){\r\n                s[card]++;\r\n            }\r\n            \r\n        } \r\n    }\r\n    ll sum = 0;\r\n    for(auto itr = s.begin();itr!=s.end();itr++){\r\n        if(itr->second>1){\r\n            ll num = itr->second;\r\n            num = (num*(num-1))/2;\r\n            sum+=num;\r\n        }\r\n    }\r\n    cout<<sum;\r\n\r\n}\r\n\r\n\r\ntemplatify void resultPrinter(T var){\r\n    cout<<var<<\" \";\r\n}\r\ntemplatify void resultPrinter(vector<T> vec){\r\n    cout<<vec.size()<<endl;\r\n    for(int i =0;i<vec.size();i++){\r\n        resultPrinter(vec[i]);\r\n        // cout<<endl;\r\n    }\r\n}\r\n\r\n\r\nvoid resultPrinter(bool var){\r\n    cout<<(var?\"Yes\":\"No\");\r\n}\r\n\r\n\r\nvoid takeInput(){\r\n\r\n}\r\nbool test(){\r\n    return true;\r\n}\r\nsigned main(int arg, char **args)\r\n{\r\n\r\n    for(long long i = 1;i<arg;i++){\r\n        char ar = *args[i];\r\n        if(ar =='d'){\r\n            testing = true;\r\n        }else{\r\n            if(ar == 's'){\r\n                stress = true;\r\n            }else{\r\n                if(ar == 'r'){\r\n                    recursion = true;\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n    // if (arg > 1)\r\n    //     *args[1] == 'd' ? testing = true : testing = false;\r\n    // if(arg>2){\r\n    //     stress = (*args[2] == 's' );\r\n    // }\r\n    if(recursion){\r\n        takeInput();\r\n        return 0;\r\n    }\r\n    if(stress){\r\n        return test();\r\n    }else{\r\n\r\n    \r\n    long long t=1;\r\n    // cin >> t;\r\n    while (t-- > 0)\r\n    {\r\n        // resultPrinter(solve());\r\n        solve();\r\n        cout<<endl;\r\n    }\r\n    }\r\n    return 0;\r\n}"
}