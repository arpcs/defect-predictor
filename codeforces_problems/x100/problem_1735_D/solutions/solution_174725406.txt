{
    "id": 174725406,
    "contestId": 1735,
    "creationTimeSeconds": 1664964797,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "lqmm"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 732,
    "memoryConsumedBytes": 64512000,
    "source": "#include <iostream>\r\n#include <cstring>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <map>\r\n\r\nusing namespace std;\r\n\r\nconst int N = 1e3+5;\r\ntypedef long long ll; \r\nvector<int> a[N];\r\n\r\nvoid solve() {\r\n    int n, k;\r\n    scanf(\"%d%d\", &n, &k);\r\n    for(int i = 1; i<=n; i++) {\r\n        a[i].resize(k);\r\n        for(int j = 0; j<k; j++) {\r\n            int x;\r\n            scanf(\"%d\", &a[i][j]);\r\n        }\r\n    }\r\n    map<vector<int>, int> ma;\r\n    for(int i = 1; i<=n; i++) {\r\n        vector<int> v(k);\r\n        for(int j = i+1; j<=n; j++) {\r\n            for(int p = 0; p<k; p++) {\r\n                if(a[i][p] == a[j][p]) v[p] = a[j][p];\r\n                else {\r\n                    int x = 3 - a[j][p] - a[i][p];\r\n                    v[p] = x;\r\n                }\r\n            }\r\n            ma[v]++;\r\n        }\r\n    }\r\n    ll ans = 0;\r\n    for(int i = 1; i<=n; i++) {\r\n        ll res = ma[a[i]];\r\n\r\n        ans+=1LL*res*(res-1)/2;\r\n    }\r\n    cout<<ans<<endl;\r\n}\r\n\r\nint main()\r\n{\r\n    int t = 1;\r\n    // scanf(\"%d\", &t);\r\n    while(t--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}