{
    "id": 186711875,
    "contestId": 1735,
    "creationTimeSeconds": 1672011412,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "mrmoooo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 53,
    "timeConsumedMillis": 405,
    "memoryConsumedBytes": 307200,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <utility>\r\n#include <map>\r\n#include <algorithm>\r\n#include <cassert>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef pair<int, int> simps;\r\ntypedef pair<int, simps> threesome;\r\n\r\n#define sec second.first\r\n#define third second.second\r\n#define all(v) v.begin(), v.end()\r\n#define rall(v) v.rbegin(), v.rend()\r\n\r\nint n, k;\r\nll ans = 0;\r\nvector<ll> pow3 = {1};\r\nvector<vector<int>> card;\r\nmap<ll, int> cardhsh;\r\n\r\nvoid genpow3() {\r\n    for (int i = 1; i < k; i++) pow3[i] = pow3[i - 1] * 3;\r\n    return;\r\n}\r\n\r\nll hsh(vector<int>& curcard) {\r\n    ll curhsh = 0;\r\n    for (int i = 0; i < k; i++) curhsh += pow3[i] * curcard[i];\r\n    return curhsh;\r\n}\r\n\r\nint main() {\r\n    cin >> n >> k;\r\n    card.resize(n, vector<int>(k));\r\n    genpow3();\r\n    for (int i = 0; i < n; i++) {\r\n        for (int j = 0; j < k; j++) cin >> card[i][j];\r\n        cardhsh[hsh(card[i])] = 0;\r\n    }\r\n    for (int i = 0; i < n; i++) {\r\n        for (int j = i + 1; j < n; j++) {\r\n            ll curhsh;\r\n            vector<int> other;\r\n            for (int l = 0; l < k; l++) {\r\n                int a = card[i][l], b = card[j][l];\r\n                if (a == b) {\r\n                    other.push_back(a);\r\n                    continue;\r\n                }\r\n                for (int m = 0; m < 3; m++) {\r\n                    if (a != m and b != m) other.push_back(m);\r\n                }\r\n            }\r\n            curhsh = hsh(other);\r\n            if (cardhsh.count(curhsh) == 0) continue;\r\n            cardhsh[curhsh]++;\r\n        }\r\n    }\r\n    for (auto u : cardhsh) ans += (ll) u.second * (u.second - 1) / 2;\r\n    cout << ans << \"\\n\";\r\n\treturn 0;\r\n}"
}