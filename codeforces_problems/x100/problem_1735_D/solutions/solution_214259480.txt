{
    "id": 214259480,
    "contestId": 1735,
    "creationTimeSeconds": 1689624832,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "shadow_sami"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 436,
    "memoryConsumedBytes": 512000,
    "source": "\t#include<bits/stdc++.h>\r\n\t#include <ext/pb_ds/assoc_container.hpp>\r\n\t#include <ext/pb_ds/tree_policy.hpp>\r\n\tusing namespace __gnu_pbds;\r\n\tusing namespace std;\r\n\ttypedef long long int ll;\r\n\ttypedef vector<ll> vi;\r\n\ttypedef vector<vector<ll>> vvi;\r\n\ttypedef pair<ll,ll> pi;\r\n\ttypedef map<ll,ll> mi;\r\n\ttypedef long double ld;\r\n\ttypedef vector<ld> vd;\r\n\ttypedef vector<vector<ld>> vvd;\r\n\ttypedef pair<ld,ld> pd;\r\n\t#define ff first\r\n\t#define ss second\r\n\t#define srt(a) sort(a.begin(),a.end());\r\n\t#define fip(k, n) for (ll i = k; i < n; i++)\r\n\t#define fjp(k, n) for (ll j = k; j < n; j++)\r\n\t#define fin(k, n) for (ll i = k; i >= n; i--)\r\n\t#define fjn(k, n) for (ll j = k; j >= n; j--)\r\n\t#define fp(k, n, m) for (ll k = n; k < m; k++)\r\n\t#define fn(k, n, m) for (ll k = n; k >= m; k--)\r\n\t#define ordered_set tree<pi, null_type,less< pi >, rb_tree_tag,tree_order_statistics_node_update>\r\n\t#define totalOne(n) __builtin_popcount(n)\r\n\t#define backZero(n) __builtin_ctzll(n)\r\n\t#define frontZero(n) __builtin_clzll(n)\r\n\t#define fx(k) for ( auto x : k )\r\n\t#define test ll t;cin >> t;while (t--)\r\n\t#define nli \"\\n\"\r\n\r\n\t// ==========================(debug)============================================================================================== //\r\n\r\n\t#ifndef ONLINE_JUDGE\r\n\t#define debug(x) cerr << #x <<\" \"; _printn(x); cerr << nli;\r\n\t#else\r\n\t#define debug(x)\r\n\t#endif\r\n\r\n\tvoid _printn(ll x){ cerr<<x<<\" \"; }\r\n\tvoid _printn(int x){ cerr<<x<<\" \"; }\r\n\tvoid _printn(ld x){ cerr<<x<<\" \"; }\r\n\tvoid _printn(double x){ cerr<<x<<\" \"; }\r\n\tvoid _printn(string x){ cerr<<x<<\" \"; }\r\n\tvoid _printn(char x){ cerr<<x<<\" \"; }\r\n\tvoid _printn(bool x){ cerr<<x<<\" \"; }\r\n\ttemplate<class T,class V>void _printn(pair<T,V> vv);\r\n\ttemplate<class T> void _printn(vector<T> vv);\r\n\ttemplate<class T> void _printn(set<T> vv);\r\n\ttemplate<class T,class V> void _printn(map<T,V> vv);\r\n\ttemplate<class T> void _printn(multiset<T> vv);\r\n\ttemplate<class T,class V>void _printn(pair<T,V> vv){ cerr<<\"( \";_printn(vv.ff);cerr<<\",\";_printn(vv.ss);cerr<<\")\";}\r\n\ttemplate<class T> void _printn(vector<T> vv){ cerr<<\"[ \"; for(auto xx:vv){ _printn(xx);cerr<<\" \"; } cerr<<\"]\"; };\r\n\ttemplate<class T> void _printn(set<T> vv){ cerr<<\"{ \"; for(auto xx:vv){ _printn(xx);cerr<<\" \"; } cerr<<\"}\"; };\r\n\ttemplate<class T> void _printn(multiset<T> vv){ cerr<<\"{ \"; for(auto xx:vv){ _printn(xx);cerr<<\" \"; } cerr<<\"}\"; };\r\n\ttemplate<class T,class V> void _printn(map<T,V> vv){ cerr<<\"{ \"; for(auto xx:vv){ _printn(xx);cerr<<\" \"; } cerr<<\"}\"; };\r\n\r\n\t// ==========================(debug)============================================================================================== //\r\n\r\n\tll n,m,tp,tp2,res,cnt,sum,tptp,ans;\r\n\tconst ll mx = 1e3+5;\r\n\tconst ll mod = 1e9+7;\r\n\r\n\t// ==========================(MOD)=============================================================================================== //\r\n\r\n\tll mod_add(ll aa,ll bb){ return ((aa%mod)+(bb%mod))%mod; }\r\n\tll mod_minus(ll aa,ll bb){ return (((aa%mod)-(bb%mod))+10*mod)%mod; }\r\n\tll mod_mul(ll aa,ll bb){ return ((aa%mod)*(bb%mod))%mod; }\r\n\tll mod_power(ll aa,ll bb){ aa%=mod; ll empowered = 1; bb%=mod-1; while(bb > 0){ if(bb & 1) empowered = mod_mul(empowered,aa); bb = bb >> 1; aa = mod_mul(aa,aa); } return empowered; }\r\n\tll mod_divi(ll aa,ll bb){ aa=mod_mul(aa,mod_power(bb,mod-2)); return aa; }\r\n\r\n\t// ==========================(MOD)=============================================================================================== //\r\n\r\n\tbool f = false;\r\n\tstring s[mx];\r\n\tstring ss;\r\n\tset<string> st;\r\n\tvector<string> v;\r\n\tchar c;\r\n\r\n\tstring tt(string a,string b){\r\n\t\tstring u = a;\r\n\t\tfip(0,m){\r\n\t\t\tif(a[i] != b[i]){\r\n\t\t\t\tfor(char d = '0' ; d <= '3' ; d++)\r\n\t\t\t\t\tif(a[i] != d && b[i] != d){\r\n\t\t\t\t\t\tu[i] = d;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn u;\r\n\t}\r\n\r\n\tll calc(ll nn){\r\n\t\treturn ( (nn * (nn - 1) ) / 2);\r\n\t}\r\n\r\n\tint main(){\r\n\t    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\r\n\t    #ifndef ONLINE_JUDGE\r\n\t        freopen(\"input1.txt\", \"r\", stdin);\r\n\t        freopen(\"output1.txt\", \"w\", stdout);\r\n\t        freopen(\"error1.txt\", \"w\", stderr);\r\n\t    #endif // ONLINE_JUDGE\r\n\r\n\t        cin>>n>>m;\r\n\t        st.clear();\r\n\t        fip(0,n){\r\n\t        \tss = \"\";\r\n\t        \tfjp(0,m){\r\n\t        \t\tcin>>c;\r\n\t        \t\tss += c;\r\n\t        \t}\r\n\t        \ts[i] = ss;\r\n\t        \tst.insert(ss);\r\n\t        \tv.push_back(ss);\r\n\t        }\r\n\t        ans = 0;\r\n\t        fip(0,n){\r\n\t        \tcnt = 0;\r\n\t        \tfx(v){\r\n\t        \t\tif(s[i]==x)\r\n\t        \t\t\tcontinue;\r\n\t        \t\tss = tt(s[i],x);\r\n\t        \t\tif(st.find(ss) != st.end())\r\n\t        \t\t\tcnt++;\r\n\t        \t}   \r\n\t        \tcnt = cnt >> 1;\r\n\t        \tans += calc(cnt);\r\n\t        }    \r\n\t        cout<<ans<<nli;\r\n\t        \r\n\t    cerr << \"Time elapsed: \" << setprecision(6) << 1000.0 * clock() / CLOCKS_PER_SEC << \"ms\\n\";\r\n\t    return 0;\r\n\t}"
}