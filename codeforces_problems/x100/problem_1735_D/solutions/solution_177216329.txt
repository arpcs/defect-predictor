{
    "id": 177216329,
    "contestId": 1735,
    "creationTimeSeconds": 1666285394,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1735,
        "index": "D",
        "name": "Meta-set",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "hashing",
            "math"
        ]
    },
    "author": {
        "contestId": 1735,
        "members": [
            {
                "handle": "PrafulSinghal"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664721300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 1013,
    "memoryConsumedBytes": 68608000,
    "source": "#include<bits/stdc++.h> \r\nusing namespace std;\r\nusing namespace chrono;\r\n \r\n#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\r\n#define fo(a,n,i) for(ll i=a;i<n;i++)\r\n#define FO(a,n,i) for(ll i=n;i>=a;i--)\r\n#define fo1(a,n,i) for(ll i=a;i<=n;i++)\r\n#define pa pair<ll,ll>\r\n#define vec vector<ll>\r\n#define vpa vector<pair<ll,ll>>\r\n#define vecs vector<vector<ll>>\r\n#define pb push_back\r\n#define ff first\r\n#define ss second\r\n#define INF 1e18\r\n#define nline \"\\n\"\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x) cerr << #x<<\" \"; _print(x); cerr << endl;\r\n#else\r\n#define debug(x);\r\n#endif\r\n#define all(a) a.begin(),a.end()\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double lld;\r\nvoid _print(ll t) {cerr << t;}\r\nvoid _print(int t) {cerr << t;}\r\nvoid _print(string t) {cerr << t;}\r\nvoid _print(char t) {cerr << t;}\r\nvoid _print(lld t) {cerr << t;}\r\nvoid _print(double t) {cerr << t;}\r\nvoid _print(ull t) {cerr << t;}\r\n \r\ntemplate <class T, class V> void _print(pair <T, V> p);\r\ntemplate <class T> void _print(vector <T> v);\r\ntemplate <class T> void _print(set <T> v);\r\ntemplate <class T, class V> void _print(map <T, V> v);\r\ntemplate <class T> void _print(multiset <T> v);\r\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\r\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\nll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\r\nll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}\r\nll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}\r\nconst ll mxm=2*1e5;\r\nll M=1e9+7;\r\n\r\n\r\nll LNIS(vector<ll>&a){\r\n  int n=a.size();\r\n  vector<ll>dp(n+1,INF);\r\n  dp[0]=-1*INF;\r\n\r\n  for(int i=0;i<n;i++){\r\n    int j=upper_bound(dp.begin(),dp.end(),a[i])-dp.begin();\r\n    dp[j]=a[i];\r\n  }\r\n\r\n  ll ans=0;\r\n  for(int i=1;i<=n;i++){\r\n    if(dp[i]!=INF)ans=i;\r\n  }\r\n  return ans;\r\n}\r\n\r\nll LIS(vector<ll>&a){\r\n  int n=a.size();\r\n  vector<ll>dp(n+1,INF);\r\n  dp[0]=-1*INF;\r\n\r\n  for(int i=0;i<n;i++){\r\n    int j=upper_bound(dp.begin(),dp.end(),a[i])-dp.begin();\r\n    if(dp[j-1]<a[i] && a[i]<dp[j])dp[j]=a[i];\r\n  }\r\n\r\n  ll ans=0;\r\n  for(int i=1;i<=n;i++){\r\n    if(dp[i]!=INF)ans=i;\r\n  }\r\n  return ans;\r\n}\r\n\r\nll gcd(ll a,ll b){\r\nif(b==0){\r\nreturn a;\r\n}\r\nelse{\r\nreturn gcd(b,a%b);}\r\n}\r\n\r\nll expo(ll a,ll b,ll m){\r\nif(b==0){\r\nreturn 1;}\r\nif(b%2==0){\r\nll temp=expo(a,b/2,m);\r\nreturn (temp%m * temp%m)%m;}\r\nelse{\r\nll temp=expo(a,b/2,m);\r\nreturn(a%m * temp%m * temp%m)%m;}\r\n}\r\n\r\nll modInverse(ll a,ll m){\r\nreturn (expo(a,m-2,m));\r\n}\r\n\r\n/*\r\nll spf[mxm];\r\n\r\nvoid primefactor(){\r\n  memset(spf,-1,sizeof(spf));\r\n  \r\n  for(ll i=2;i<mxm;i++){\r\n    if(spf[i]==-1){\r\n      spf[i]=i;\r\n      for(ll j=i;j<mxm;j+=i){\r\n        if(spf[j]==-1){\r\n          spf[j]=i;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n*/\r\n\r\nvector<int> find(vector<int>&a,vector<int>&b){\r\n    int k = a.size();\r\n\r\n    vector<int> res;\r\n\r\n    for (int i = 0; i < k;i++){\r\n        res.push_back((6 - a[i] - b[i]) % 3);\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\nvoid solve(){\r\n    int t = 1;\r\n    // cin >> t;\r\n    while(t--){\r\n        int n, k;\r\n        cin >> n >> k;\r\n\r\n        vector<vector<int>> v(n, vector<int>(k));\r\n\r\n        for (int i = 0; i < n;i++){\r\n            for (int j = 0; j < k;j++)\r\n                cin >> v[i][j];\r\n        }\r\n\r\n        map<vector<int>, ll> m;\r\n\r\n        for (int i = 0; i < n;i++){\r\n            for (int j = i + 1; j < n;j++){\r\n                auto x = find(v[i], v[j]);\r\n                m[x]++;\r\n            }\r\n        }\r\n\r\n        ll ans = 0;\r\n        for (int i = 0; i < n;i++){\r\n            ans += ((m[v[i]] * (m[v[i]] - 1))) / 2;\r\n        }\r\n\r\n        cout << ans << endl;\r\n    }\r\n}\r\n\r\nint main(){\r\n  #ifndef ONLINE_JUDGE\r\n  freopen(\"inputf.txt\",\"r\",stdin);\r\n  freopen(\"outputf.txt\",\"w\",stdout);\r\n  freopen(\"error.txt\",\"w\",stderr);\r\n  #endif\r\n  fastio();\r\n    auto start1 = high_resolution_clock::now();\r\n    solve();\r\n    auto stop1 = high_resolution_clock::now();\r\n    auto duration = duration_cast<microseconds>(stop1 - start1);\r\n  #ifndef ONLINE_JUDGE\r\n    cerr << \"Time: \" << duration . count() / 1000 << endl;\r\n  #endif\r\n  return 0;\r\n}\r\n\r\n//Remember in a min max problem or max min problem apply BINARY SEARCH\r\n/*\r\nWhy? Because we can make a check function to check if mid gives us \r\nright answer or not and accordingly manipulate low and high\r\n\r\nWhile designing the comparator function for inbuilt sort never use <= or >= as inbuilt sort works on strictly decreasing principle so using \r\nf(x,x) should return false but if we use >= it will return true.\r\n*/"
}