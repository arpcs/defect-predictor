{
    "id": 165521947,
    "contestId": 1706,
    "creationTimeSeconds": 1658665955,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "E",
        "name": "Qpwoeirut and Vertices",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "divide and conquer",
            "dsu",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 59289600,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+5;\nconst int M=4e5+5;\nint n,m;\nint fa[N],val[N],tt;\nint anc[N][30],dep[N];\nint f[N][30];\nstruct E{\n\tint from,to,w;\n}temp[M];\nint to[M],nxt[M],fir[N],tot;\nbool cmp(E a,E b){return a.w<b.w;}\nint find(int x){return fa[x]==x?x:fa[x]=find(fa[x]);}\nvoid add(int u,int v){\n\tto[++tot]=v;\n\tnxt[tot]=fir[u];\n\tfir[u]=tot;\n\treturn ;\n}\nvoid reset(){\n\ttot=0;\n\tfor(int i=1;i<=3*n;i++) fa[i]=i,fir[i]=0;\n\treturn ;\n}\nvoid dfs(int k){\n\tif(k==tt) dep[k]=1;\n//\tcout<<k<<\" \";\n\tfor(int i=fir[k];i;i=nxt[i]){\n\t\tint t=to[i];\n\t\tif(t==anc[k][0]) continue;\n\t\tanc[t][0]=k;\n\t\tdep[t]=dep[k]+1;\n\t\tdfs(t);\n\t}\n\treturn ;\n}\nint lca(int x,int y){\n\tif(dep[x]<dep[y]) swap(x,y);\n\tfor(int k=20;k>=0;k--)\n\t\tif(dep[anc[x][k]]>=dep[y])\n\t\t\tx=anc[x][k];\n\tif(x==y) return x;\n\tfor(int k=20;k>=0;k--)\n\t\tif(anc[x][k]!=anc[y][k])\n\t\t\tx=anc[x][k],y=anc[y][k];\n\treturn anc[x][0];\n}\nvoid prework(){\n\t\n\tsort(temp+1,temp+m+1,cmp);\n\ttt=n;\n\tfor(int i=1,g=0;i<=m;i++){\n\t\tint x=temp[i].from,y=temp[i].to;\n\t\tint fx=find(x),fy=find(y);\n\t\tif(fx!=fy){\n\t\t\tg++;\n\t\t\tval[++tt]=temp[i].w;\n\t\t\tfa[fx]=fa[fy]=tt;\n\t\t\tadd(fx,tt);add(tt,fx);\n\t\t\tadd(fy,tt);add(tt,fy);\n\t\t}\n\t\tif(g==n-1) break;\n\t}\n\tdfs(tt);\n//\tfor(int i=1;i<=tt;i++)\n//\t\tcout<<i<<\" val:\"<<val[i]<<\"\\n\";\n\tfor(int k=1;k<=20;k++)\n\t\tfor(int i=1;i<=tt;i++)\n\t\t\tanc[i][k]=anc[anc[i][k-1]][k-1];\n\tfor(int i=1;i<=n;i++){\n\t\tf[i][0]=val[lca(i,i-1)];\n//\t\tcout<<i-1<<\" \"<<i<<\" \"<<lca(i,i-1)<<\"\\n\";\n\t}\n\tfor(int k=1;(1<<k)<=n;k++)\n\t\tfor(int i=1;i+(1<<k)-1<=n;i++)\n\t\t\tf[i][k]=max(f[i][k-1],f[i+(1<<k-1)][k-1]);\n\treturn ;\n}\nint query(int l,int r){\n\tif(l>r) return 0;\n\tint k=log2(r-l+1);\n\treturn max(f[l][k],f[r-(1<<k)+1][k]);\n}\nint main(){                 \n\tcin.tie(0);cout.tie(0);\n\tios::sync_with_stdio(false);\n\tint t;\n\tcin>>t;\n\twhile(t--){\n\t\tint q;\n\t\tcin>>n>>m>>q;\n\t\treset();\n\t\tfor(int i=1;i<=m;i++)\n\t\t\tcin>>temp[i].from>>temp[i].to,temp[i].w=i;\n//\t\tcout<<\"ok\\n\";\n\t\tprework();\n\t\twhile(q--){\n\t\t\tint l,r;\n\t\t\tcin>>l>>r;\n\t\t\tcout<<query(l+1,r)<<\" \";\n\t\t}\n\t\tcout<<\"\\n\";\n\t}\n\treturn 0;\n}\n/*\n\u300cCF1706E\u300d Qpwoeirut and Vertices\n*/\n\n\t \t\t    \t\t\t  \t   \t  \t \t   \t\t\t"
}