{
    "id": 230597663,
    "contestId": 1706,
    "creationTimeSeconds": 1698695092,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "E",
        "name": "Qpwoeirut and Vertices",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "divide and conquer",
            "dsu",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "Sparkle_Twilight"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 1871,
    "memoryConsumedBytes": 70656000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;using I=int;enum{N=1<<17};\r\nstruct O{I o,i;};basic_string<O>q[N];set<I>S[N];I n,m,Q,f[N],g[18][N];\r\nvoid D(){\r\nfor(I i=1;i<=n;++i)S[i].clear(),S[f[i]=i].insert(i),q[i].clear();\r\nfor(I i=n;--i;)q[i]+={i+1,i},q[i+1]+={i,i};\r\nfor(I u,v,i=1;i<=m;++i)if(cin>>u>>v,u=f[u],v=f[v],u^v){\r\nif(size(q[u])>size(q[v]))swap(u,v);q[v]+=q[u];\r\nfor(O p:q[u])if(S[v].count(p.o))g[0][p.i]=i;\r\nif(size(S[u])>size(S[v]))swap(q[u],q[v]),swap(u,v);\r\nfor(I p:S[u])S[f[p]=v].insert(p);\r\n}\r\nfor(I i=1;i<18;++i)for(I j=1;j+(1<<i)<=n;++j)\r\ng[i][j]=max(g[i-1][j],g[i-1][j+(1<<i-1)]);\r\nfor(I l,r,o;Q--;cout<<(l^r?o=__lg(r-l),\r\nmax(g[o][l],g[o][r-(1<<o)]):0)<<\" \\n\"[!Q])cin>>l>>r;\r\n}\r\nmain(){for(cin>>n;cin>>n>>m>>Q;)D();}"
}