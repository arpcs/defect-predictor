{
    "id": 223452143,
    "contestId": 1706,
    "creationTimeSeconds": 1694766481,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "E",
        "name": "Qpwoeirut and Vertices",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "divide and conquer",
            "dsu",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "Hyojin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 1107,
    "memoryConsumedBytes": 56217600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define bit(n,i) ((n>>i)&1) \r\n#define all(a) (a).begin(),(a).end()\r\n#define pb push_back\r\n#define ep emplace_back\r\n#define pii pair<int,int>\r\n#define piii pair<int,pii> \r\n#define fi first\r\n#define se second\r\n#define ll long long\r\n#define debug(x) cerr << #x << ' ' << x << '\\n'\r\n#define dbg(x) cerr<<#x<<' '<<x<<' '\r\nconst int base=31;\r\nconst int MOD=1e9+7;\r\nconst int N=2e5+5;\r\nint n,m,q,p[N][18],depth[N],t[N],lab[N],in[N],timeDfs,f1[N][18],f2[N][18],lg2[N];\r\nvector<int>adj[N];\r\nint find_set(int v)\r\n{\r\n\treturn (lab[v]==v?v:lab[v]=find_set(lab[v]));\r\n}\r\nbool join(int u,int v,int id)\r\n{\r\n\tu=find_set(u);\r\n\tv=find_set(v);\r\n\tif (u==v) return 0;\r\n\tn++;\r\n\tadj[n].pb(u),adj[n].pb(v);\r\n\tlab[n]=n,lab[u]=n,lab[v]=n;\r\n\tt[n]=id;\r\n\treturn 1;\r\n}\r\nvoid dfs(int u,int par)\r\n{\r\n\tin[u]=++timeDfs;\r\n\tf1[u][0]=u;\r\n\tf2[u][0]=u;\r\n\tfor (int v:adj[u])\r\n\t{\r\n\t\tif (v==par) continue;\r\n\t\tp[v][0]=u;\r\n\t\tdepth[v]=depth[u]+1;\r\n\t\tdfs(v,u);\r\n\t}\r\n}\r\nint lca(int u,int v)\r\n{\r\n\tif (depth[u]<depth[v]) swap(u,v);\r\n\tfor (int i=17;~i;i--)\r\n\t{\r\n\t\tif (depth[u]-(1<<i)>=depth[v]) u=p[u][i];\r\n\t}\r\n\tif (u==v) return u;\r\n\tfor (int i=17;~i;i--)\r\n\t{\r\n\t\tif (~p[u][i]&&p[u][i]!=p[v][i])\r\n\t\t{\r\n\t\t\tu=p[u][i];\r\n\t\t\tv=p[v][i];\r\n\t\t}\r\n\t}\r\n\treturn p[u][0];\r\n}\r\nint getMin(int l,int r)\r\n{\r\n\tint k=lg2[r-l+1];\r\n\tint Left=f1[l][k];\r\n\tint Right=f1[r-(1<<k)+1][k];\r\n\tif (in[Left]<in[Right]) return Left;\r\n\treturn Right;\r\n}\r\nint getMax(int l,int r)\r\n{\r\n\tint k=lg2[r-l+1];\r\n\tint Left=f2[l][k];\r\n\tint Right=f2[r-(1<<k)+1][k];\r\n\tif (in[Left]>in[Right]) return Left;\r\n\treturn Right;\r\n}\r\nint main()\r\n{\r\n\tios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n\t#ifdef Amon\r\n    \tfreopen(\"Amon.in\",\"r\", stdin);\r\n    \tfreopen(\"Amon.out\",\"w\", stdout);\r\n\t#endif \r\n    for (int i=1;i<=N-5;i++)\r\n    {\r\n    \tlg2[i]=lg2[i-1];\r\n    \twhile ((1<<lg2[i])<=i) lg2[i]++;\r\n    \tlg2[i]--;\r\n    }\r\n    int ttest;\r\n    cin>>ttest;\r\n    while (ttest--)\r\n    {\r\n    \tmemset(p,-1,sizeof p);\r\n    \tcin>>n>>m>>q;\r\n    \ttimeDfs=0;\r\n    \tfor (int i=1;i<=n;i++) lab[i]=i;\r\n    \tfor (int i=1;i<=m;i++)\r\n    \t{\r\n    \t\tint u,v;\r\n    \t\tcin>>u>>v;\r\n    \t\tjoin(u,v,i);\r\n    \t}\r\n    \tfor (int i=1;i<=n;i++)\r\n    \t{\r\n    \t\tif (lab[i]!=i) continue;\r\n    \t\tdfs(i,i);\r\n    \t}\r\n    \tfor (int j=1;(1<<j)<=n;j++)\r\n    \t{\r\n    \t\tfor (int i=1;i<=n;i++)\r\n    \t\t{\r\n    \t\t\tif (~p[i][j-1])\r\n    \t\t\t{\r\n    \t\t\t\tp[i][j]=p[p[i][j-1]][j-1];\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n    \tfor (int j=1;(1<<j)<=n;j++)\r\n    \t{\r\n    \t\tfor (int i=1;i+(1<<j)-1<=n;i++)\r\n    \t\t{\r\n    \t\t\tif (in[f1[i][j-1]]<in[f1[i+(1<<j-1)][j-1]])\r\n    \t\t\t\tf1[i][j]=f1[i][j-1];\r\n    \t\t\telse f1[i][j]=f1[i+(1<<j-1)][j-1];\r\n    \t\t\tif (in[f2[i][j-1]]<in[f2[i+(1<<j-1)][j-1]])\r\n    \t\t\t\tf2[i][j]=f2[i+(1<<j-1)][j-1];\r\n    \t\t\telse f2[i][j]=f2[i][j-1];\r\n    \t\t}\r\n    \t}\r\n    \twhile (q--)\r\n    \t{\r\n    \t\tint u,v;\r\n    \t\tcin>>u>>v;\r\n    \t\tif (u==v) {\r\n    \t\t\tcout<<0<<' ';\r\n    \t\t\tcontinue;\r\n    \t\t}\r\n    \t\tint x=getMin(u,v);\r\n    \t\tint y=getMax(u,v);\r\n    \t\tcout<<t[lca(x,y)]<<' ';\r\n    \t}\r\n    \tcout<<\"\\n\";\r\n    \tfor (int i=1;i<=n;i++) adj[i].clear();\r\n    }\r\n\treturn 0;\r\n}\r\n"
}