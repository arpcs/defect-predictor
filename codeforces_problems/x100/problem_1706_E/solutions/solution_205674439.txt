{
    "id": 205674439,
    "contestId": 1706,
    "creationTimeSeconds": 1683956978,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "E",
        "name": "Qpwoeirut and Vertices",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "divide and conquer",
            "dsu",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "bkifhr7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 1637,
    "memoryConsumedBytes": 29286400,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std; \n\ntypedef long long ll; \ntypedef pair<int,int> ii; \n\n#define f(i,a,b) for(int i = a; i < b; i++)\n#define fa(i,a,b) for(int i = a; i >= b; i--)\n\nconst int N = 1e5 + 5; \n\n\nint n, m, q, id; \nint v[2*N], p[2*N], tin[2*N], tout[2*N], w; \nint up[2*N][18], d[N][17], adj[2*N][2]; \n\nvoid clear(){\n    w = 0; \n    f(i,1,id) adj[i][0] = adj[i][1] = 0; \n}\n\nvoid ini(){\n    id = n+1; \n    f(i,1,n+1) p[i] = i, v[i] = 0; \n}\n\nint find(int x){\n    if(p[x] == x) return x; \n    return p[x] = find(p[x]); \n}\n\nvoid uni(int x, int y, int time){\n    x = find(x), y = find(y);\n    if(x == y) return; \n    p[x] = p[y] = p[id] = id;  \n    adj[id][0] = x, adj[id][1] = y; \n    v[id] = time; \n    id++; \n}\n\nvoid dfs(int u, int f){\n    up[u][0] = f; \n    f(i,1,18) up[u][i] = up[up[u][i-1]][i-1];\n    tin[u] = w++; \n\n    f(i,0,2){\n        if(adj[u][i] == 0) continue; \n        dfs(adj[u][i], u); \n    }\n    tout[u] = w++;  \n}\nbool is(int u, int v){\n    return tin[u] <= tin[v] and tout[u] >= tout[v]; \n}\n\nint lca(int u, int v){\n    if(is(u, v)) return u; \n    if(is(v, u)) return v; \n    fa(i,17,0){\n        if(up[u][i] == 0 or is(up[u][i], v)) continue; \n        u = up[u][i]; \n    }\n    return up[u][0]; \n}\nint get(int l, int r){\n    int log = 31 - __builtin_clz(r-l+1); \n    return lca(d[l][log], d[r-(1<<log)+1][log]); \n}\n\nvoid build_st(){\n    f(i,1,n+1) d[i][0] = i; \n\n    f(k,1,17){\n        f(i,1,n+1){\n            int x = i + (1<<(k-1)); \n            if(x > n) break; \n            d[i][k] = lca(d[i][k-1], d[x][k-1]); \n        }\n    }\n}\nvoid solve(){\n    cin >> n >> m >> q; \n\n    ini(); \n\n    f(i,1,m+1){\n        int u, v; \n        cin >> u >> v; \n        uni(u, v, i); \n    }\n\n    dfs(id-1, 0); \n\n    build_st(); \n\n    while(q--){\n        int l, r; \n        cin >> l >> r; \n        cout << v[get(l, r)] << \" \"; \n    }\n    cout << \"\\n\"; \n    clear(); \n}\n\nint main(){\n    int t; cin >> t; \n    while(t--) solve(); \n    return 0; \n}\n\t \t  \t\t \t\t \t\t\t\t\t\t\t\t\t  \t\t\t \t\t\t"
}