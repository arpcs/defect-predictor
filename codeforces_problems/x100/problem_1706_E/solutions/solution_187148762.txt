{
    "id": 187148762,
    "contestId": 1706,
    "creationTimeSeconds": 1672322873,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "E",
        "name": "Qpwoeirut and Vertices",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "divide and conquer",
            "dsu",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "HeHuanglu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 3174400,
    "source": "#include <bits/stdc++.h>\r\n#define ii pair<int, int>\r\n#define iii pair<int, ii>\r\n#define fi first\r\n#define se second\r\nusing namespace std;\r\n\r\nconst int N = 1e5 + 5;\r\nint n, m, q, c[N], ans[N];\r\nvector <ii> ke[N];\r\n\r\nvoid dij(int x)\r\n{\r\n    memset(c, 127, sizeof(c));\r\n    priority_queue <ii, vector <ii>, greater <ii> > pq;\r\n    c[x] = 0; pq.push({0, x});\r\n    while (!pq.empty())\r\n    {\r\n        ii e = pq.top(); pq.pop();\r\n        int u = e.se;\r\n//        cout << u << \"*\\n\";\r\n        if(c[u] != e.fi) continue;\r\n        for(auto &v : ke[u])\r\n        {\r\n            if(c[v.fi] > max(c[u], v.se))\r\n            {\r\n//                cout << u << \" \" << v.fi << \"^^\\n\";\r\n                c[v.fi] = max(c[u], v.se);\r\n                pq.push({c[v.fi], v.fi});\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvoid solve(int l, int r, vector <iii> lst)\r\n{\r\n    vector <iii> vl, vr;\r\n//    cout << l << \" \" << r << \" \" << mid << \"\\n\";\r\n    if(l == r) return ;\r\n    int mid = (l + r) / 2;\r\n//    cout << l << \" \" << r << \" \" << mid << \"\\n\";\r\n    dij(mid);\r\n//    for(int i = 1; i <= n; i++) cout << c[i] << \" \"; cout << \"\\n**\\n\";\r\n    for(auto &e : lst)\r\n    {\r\n//        cout << e.fi << \"^\\n\";\r\n        if(e.se.fi > mid) vr.push_back(e);//, cout << e.se.fi << \" \" << e.se.se << \"*\\n\";\r\n        else if(e.se.se < mid) vl.push_back(e);//, cout << \"**\\n\";\r\n        else\r\n        {\r\n//            cout << l << \" \" << r << \"\\n\";\r\n            int id = e.fi, L = e.se.fi, R = e.se.se;\r\n            ans[id] = max(c[L], c[R]);\r\n        }\r\n    }\r\n    if(!vl.empty()) solve(l, mid, vl);\r\n    if(!vr.empty()) solve(mid + 1, r, vr);\r\n}\r\n\r\nvoid sol()\r\n{\r\n    cin >> n >> m >> q;\r\n    for(int i = 1; i <= m; i++)\r\n    {\r\n        int u, v, w; cin >> u >> v;\r\n        ke[u].push_back({v, i});\r\n        ke[v].push_back({u, i});\r\n    }\r\n    vector <iii> lst;\r\n    for(int i = 1; i <= q; i++)\r\n    {\r\n        int l, r; cin >> l >> r;\r\n//        cout << l << \" \" << r << \"%$\\n\";\r\n        lst.push_back({i, {l, r}});\r\n    }\r\n//    for(auto &e : lst) cout << e.fi << \" \" << e.se.fi << \" \" << e.se.se << \"\\n\";\r\n    solve(1, n, lst);\r\n    for(int i = 1; i <= q; i++) cout << ans[i] << \" \"; cout << \"\\n\";\r\n    for(int i = 1; i <= n; i++) ke[i].clear(), ans[i] = 0;\r\n}\r\n\r\nmain ()\r\n{\r\n    cin.tie(0)->sync_with_stdio(0);\r\n    if(fopen(\"task.inp\", \"r\"))\r\n    {\r\n        freopen(\"task.inp\", \"r\", stdin);\r\n        freopen(\"wa.out\", \"w\", stdout);\r\n    }\r\n    int ntest; cin >> ntest;\r\n    while (ntest--) sol();\r\n}\r\n"
}