{
    "id": 165525036,
    "contestId": 1706,
    "creationTimeSeconds": 1658667905,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "E",
        "name": "Qpwoeirut and Vertices",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "divide and conquer",
            "dsu",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "yu_xuan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 358,
    "memoryConsumedBytes": 13619200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define sf(n) scanf(\"%d\",&n)\r\n#define rep(i,a,b) for(int i=a;i<=b;i++)\r\n#define rev(i,a,b) for(int i=a;i>=b;i--)\r\n#define eb emplace_back\r\n#define inf 0x3f3f3f3f\r\nconst int N=1e5+3;\r\nconst int M=2e5+3;\r\nint clr[N],head[N],cnt,need[N];\r\nvector<int> s[N];\r\nint max1[N<<2];\r\nvoid build(int l,int r,int id){\r\n\tmax1[id]=0;\r\n\tif(l==r){\r\n\t\tmax1[id]=need[l];return ;\r\n\t}\r\n\tint mid=l+r>>1;\r\n\tbuild(l,mid,id<<1);\r\n\tbuild(mid+1,r,id<<1|1);\r\n\tmax1[id]=max(max1[id<<1],max1[id<<1|1]);\r\n}\r\nint query(int x,int y,int l,int r,int id){\r\n\tif(l>=x&&r<=y)return max1[id];\r\n\tint ans=0;\r\n\tint mid=l+r>>1;\r\n\tif(x<=mid)ans=max(ans,query(x,y,l,mid,id<<1));\r\n\tif(y>mid)ans=max(ans,query(x,y,mid+1,r,id<<1|1));\r\n\treturn ans;\r\n}\r\nvoid merge(int u,int v,int w){\r\n\tif(clr[u]==clr[v])return ;\r\n\tif(s[clr[u]].size()<s[clr[v]].size())swap(u,v);\r\n\tvector<int>::iterator it=s[clr[v]].begin();\r\n\tint c=clr[v];\r\n\twhile(it!=s[c].end()){\r\n\t\tint tmp=*it;\r\n\t\tif(tmp>1&&need[tmp-1]==inf){\r\n\t\t\tif(clr[tmp-1]==clr[u])need[tmp-1]=w;\r\n\t\t}\r\n\t\tif(need[tmp]==inf&&clr[tmp+1]==clr[u])need[tmp]=w;\r\n\t\ts[clr[u]].eb(tmp);clr[tmp]=clr[u];\r\n\t\tit++;\r\n\t}\r\n\ts[c].clear();\r\n}\r\nint main(){\r\n\tint t;sf(t);\r\n\twhile(t--){\r\n\t\tint n,m,q;sf(n),sf(m),sf(q);\r\n\t\trep(i,1,n)head[i]=0,need[i]=inf;cnt=0;\r\n\t\trep(i,1,n)clr[i]=i,s[i].clear(),s[i].eb(i);\r\n\t\trep(i,1,m){\r\n\t\t\tint u,v;sf(u),sf(v);\r\n\t\t\tmerge(u,v,i);\r\n\t\t}\r\n\t\t//rep(i,1,n-1)cout<<need[i]<<\" \";cout<<endl;\r\n\t\tbuild(1,n-1,1);\r\n\t\trep(i,1,q){\r\n\t\t\tint u,v;sf(u);sf(v);\r\n\t\t\tint res; \r\n\t\t\tif(u==v)res=0;\r\n\t\t\telse res=query(u,v-1,1,n-1,1);\r\n\t\t\tprintf(\"%d%c\",res,i==q?'\\n':'\\n');\r\n\t\t}\r\n\t}\r\n}\r\n",
    "defect_evaluation_v4": {
        "good solution": 80,
        "wrong solution": 20,
        "compilation error": 0,
        "runtime error": 0
    },
    "category_evaluation": {
        "mathematics": 5,
        "dynamic programming": 0,
        "bit manipulation": 0,
        "greedy": 5,
        "brute force": 25,
        "graphs": 0,
        "sortings": 0,
        "search": 5,
        "trees": 0,
        "strings": 0,
        "number theory": 0,
        "combinatorics": 0,
        "two pointers": 0,
        "geometry": 0,
        "shortest paths": 5,
        "divide and conquer": 0,
        "probabilities": 0,
        "data structures": 5,
        "game theory": 0,
        "2d, 3d": 0,
        "recursive": 5,
        "well-commented": 0,
        "self-documenting": 0,
        "complex": 5,
        "readable": 5,
        "well-named": 0,
        "efficient": 5,
        "reusable": 0,
        "documented": 0,
        "good error-handling": 0,
        "good solution": 25,
        "compilation error": 0,
        "runtime error": 0
    }
}