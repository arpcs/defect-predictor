{
    "id": 225200976,
    "contestId": 1706,
    "creationTimeSeconds": 1695697905,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "E",
        "name": "Qpwoeirut and Vertices",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "divide and conquer",
            "dsu",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "luogu_bot2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 311,
    "memoryConsumedBytes": 29286400,
    "source": "// LUOGU_RID: 126159641\n#include<cstdio>\r\n#include<vector>\r\n#include<cstring>\r\n#include<algorithm>\r\n#include<iostream>\r\n#include<cmath>\r\n#include<map>\r\n#include<queue>\r\n#include<functional>\r\n#include<set>\r\n#include<bitset>\r\n#include<random>\r\n#include<ctime>\r\ninline long long read()\r\n{\r\n\tlong long x=0,f=1;\r\n\tchar ch=getchar();\r\n\twhile(ch>'9'||ch<'0')\r\n\t{\r\n\t\tif(ch=='-')\r\n\t\t\tf=-1;\r\n\t\tch=getchar();\r\n\t}\r\n\twhile(ch<='9'&&ch>='0')\r\n\t{\r\n\t\tx=(x<<1)+(x<<3)+(ch^48);\r\n\t\tch=getchar();\r\n\t}\r\n\treturn x*f;\r\n}\r\nconst int maxn=1e5+10;\r\nconst int TIAO=0;\r\nconst long long mod=998244353;\r\nstd::mt19937 rng(time(0));\r\nint n,m,q;\r\nint fa_dsu[maxn*3],vis[maxn*3],st[20][maxn],LG[maxn];\r\nstd::vector<int>bian[maxn*3];\r\nint getf_dsu(int x)\r\n{\r\n\treturn x==fa_dsu[x]?x:fa_dsu[x]=getf_dsu(fa_dsu[x]);\r\n}\r\nint getmax(int l,int r)\r\n{\r\n\tint len=LG[r-l+1];\r\n\treturn std::max(st[len][l],st[len][r-(1<<len)+1]);\r\n}\r\nvoid Tarjan(int u,int v)\r\n{\r\n\tfor(auto vv:bian[v])\r\n\t{\r\n\t\tTarjan(v,vv);\r\n\t\tfa_dsu[getf_dsu(vv)]=v;\r\n\t\tvis[vv]=1;\r\n\t}\r\n\tif(v-1>0&&vis[v-1])\r\n\t\tst[0][v-1]=getf_dsu(v-1)-n;\r\n\tif(v+1<=n&&vis[v+1])\r\n\t\tst[0][v]=getf_dsu(v+1)-n;\r\n}\r\nvoid solve()\r\n{\r\n\tn=read(),m=read(),q=read();\r\n\tint cnt=n;\r\n\tfor(int i=1; i<=n+m; i++)\r\n\t\tfa_dsu[i]=i,vis[i]=0;\r\n\tint root;\r\n\tfor(int i=1; i<=m; i++)\r\n\t{\r\n\t\tint x=read(),y=read();\r\n\t\t++cnt;\r\n\t\tx=getf_dsu(x),y=getf_dsu(y);\r\n\t\tif(x==y)\r\n\t\t\tcontinue;\r\n\t\troot=cnt;\r\n\t\tfa_dsu[x]=fa_dsu[y]=cnt;\r\n\t\tbian[cnt].push_back(x);\r\n\t\tbian[cnt].push_back(y);\r\n\t}\r\n\tfor(int i=1; i<=n+m; i++)\r\n\t\tfa_dsu[i]=i;\r\n\tTarjan(0,root);\r\n\tfor(int i=n+1;i<=cnt;i++)\t\r\n\t\tbian[i].clear();\r\n\tfor(int i=1; (1<<i)<n; i++)\r\n\t\tfor(int j=1; j+(1<<i)-1<n; j++)\r\n\t\t\tst[i][j]=std::max(st[i-1][j],st[i-1][j+(1<<(i-1))]);\r\n\twhile(q--)\r\n\t{\r\n\t\tint l=read(),r=read();\r\n\t\tif(l==r)\r\n\t\t{\r\n\t\t\tprintf(\"0 \");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tprintf(\"%d \",getmax(l,r-1));\r\n\t}\r\n\tprintf(\"\\n\");\r\n}\r\nint main()\r\n{\r\n\tint T=1;\r\n\tLG[0]=-1;\r\n\tfor(int i=1; i<=1e5; i++)\r\n\t\tLG[i]=LG[i>>1]+1;\r\n\tT=read();\r\n\twhile(T--)\r\n\t\tsolve();\r\n\treturn 0;\r\n}//adsa"
}