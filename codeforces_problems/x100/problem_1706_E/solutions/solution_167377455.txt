{
    "id": 167377455,
    "contestId": 1706,
    "creationTimeSeconds": 1659865681,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "E",
        "name": "Qpwoeirut and Vertices",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "divide and conquer",
            "dsu",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "lovro_nidogon1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 373,
    "memoryConsumedBytes": 62361600,
    "source": "#include<bits/stdc++.h>\r\n#define breturn return\r\nusing namespace std;\r\nint tc, n, q, m, bn, par[30][200001], siz[200001], tour[1<<19], val[30][200001], dep[200001], a, b;\r\nvector<pair<int, int> > mst[200001];\r\nint gp(int x) {\r\n\tif(x == par[0][x]) breturn x;\r\n\tbreturn par[0][x] = gp(par[0][x]);\r\n}\r\nvoid con(int x, int y, int z) {\r\n\tint xx = gp(x), yy = gp(y);\r\n\tif(xx == yy) breturn;\r\n\tif(siz[xx] < siz[yy]) swap(xx, yy);\r\n\tpar[0][yy] = xx;\r\n\tsiz[xx] += siz[yy];\r\n\tmst[x].push_back({y, z});\r\n\tmst[y].push_back({x, z});\r\n}\r\nvoid root(int x = 1, int d = 0, int p = 1) {\r\n\tdep[x] = d;\r\n\tfor(auto t:mst[x]) if(p != t.first) val[0][t.first] = t.second, par[0][t.first] = x, root(t.first, d + 1, x);\t\r\n} \r\nint lca(int x, int y) {\r\n\tint ans = 0;\r\n\tif(dep[y] < dep[x]) swap(x, y);\r\n\tint del = dep[y] - dep[x];\r\n\tfor(int k = 20; ~k; k--) if(del >= (1 << k)) ans = max(ans, val[k][y]), y = par[k][y], del -= (1 << k);\r\n\tif(x == y) breturn ans;\r\n\tfor(int k = 20; ~k; k--) if(par[k][x] != par[k][y]) ans = max(ans, max(val[k][x], val[k][y])), x = par[k][x], y = par[k][y];\r\n\tbreturn max(ans, max(val[0][x], val[0][y])); \r\n}\r\nint quer(int ax, int bx, int x = 1, int l = 0, int r = bn - 1) {\r\n\tif(l > bx or r < ax) breturn 0;\r\n\tif(l >= ax and r <= bx) breturn tour[x];\r\n\tint mid = (l + r)/2;\r\n\tbreturn max(quer(ax, bx, x * 2, l, mid), quer(ax, bx, x * 2 + 1, mid + 1, r));\r\n}\r\nint main() {\r\n\tios::sync_with_stdio(false), cin.tie(0);\r\n\tcin >> tc;\r\n\twhile(tc--) {\r\n\t\tcin >> n >> m >> q;\r\n\t\tfor(bn = 1;bn<n;bn*=2);\r\n\t\tfor(int i = 1; i <= n; i++) siz[i] = 1, par[0][i] = i, mst[i].clear();\r\n\t\tfor(int i = 1; i <= m; i++) {\r\n\t\t\tcin >> a >> b;\r\n\t\t\tcon(a, b, i);\r\n\t\t}\r\n\t\troot();\r\n\t\tfor(int k = par[0][1] = 1 ; k < 21; k++) for(int i = 1; i <= n; i++) \r\n\t\t\tval[k][i] = max(val[k - 1][i], val[k - 1][par[k - 1][i]]), par[k][i] = par[k - 1][par[k - 1][i]];\t\r\n\t\t\r\n\t\tfor(int i = 1; i <= bn; i++) tour[i + bn] = (i < n?lca(i, i + 1):0);\r\n\t\tfor(int i = bn - 1; i; i--) tour[i] = max(tour[i * 2], tour[i * 2 + 1]);\t\r\n\t\twhile(q--) {\r\n\t\t\tcin >> a >> b;\r\n\t\t\tcout << quer(a, b - 1) << \" \";\t\t\t\r\n\t\t}\r\n\t\tcout << '\\n';\r\n\t}\r\n}\r\n"
}