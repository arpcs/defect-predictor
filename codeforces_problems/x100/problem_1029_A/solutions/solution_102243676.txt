{
    "id": 102243676,
    "contestId": 1029,
    "creationTimeSeconds": 1608822133,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1029,
        "index": "A",
        "name": "Many Equal Substrings",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 1029,
        "members": [
            {
                "handle": "Mango-man"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1535122200
    },
    "programmingLanguage": "Java 8",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 78,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 0,
    "source": "import java.util.*; \r\nimport java.io.*;\r\n \r\npublic class Main {\r\n\t\r\n\tpublic static int mod = 1000000007;\r\n\t\r\n\tpublic static void solve(InputReader in) {\r\n\t\tint n = in.readInt(); \r\n\t\tint k = in.readInt();\r\n\t\tString s = in.readString();\r\n\t\tint cnt = 1; \r\n\t\tint pos = 1;\r\n\t\tString ans = new String(s); \r\n\t\twhile(cnt < k) {\r\n\t\t\tif(pos >= ans.length()) {\r\n\t\t\t\tans += s;\r\n\t\t\t\tcnt++; \r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tint temp = 0; \r\n\t\t\t\tboolean ok = true; \r\n\t\t\t\tfor(int i = 0; i<n; i++) {\r\n\t\t\t\t\tif(i+pos >= ans.length()) break; \r\n\t\t\t\t\ttemp++; \r\n\t\t\t\t\tif(ans.charAt(pos+i) != s.charAt(i)) ok = false; \r\n\t\t\t\t}\r\n\t\t\t\tif(ok) {\r\n\t\t\t\t\tans += s.substring(temp);\r\n\t\t\t\t\tcnt++; \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tpos++; \r\n\t\t}\r\n\t\tSystem.out.println(ans);\r\n\t}\r\n\t\r\n \r\n\tpublic static void main(String[] args) {\r\n\t\t// jai shree krishna\r\n\t\tInputReader in = new InputReader(System.in); \r\n\t\tint t = 1;\r\n\t\twhile (t-- > 0)\r\n\t\t\tsolve(in);\r\n\t}\r\n}\r\n \r\n \r\nclass InputReader{\r\n\tprivate InputStream stream;\r\n\tprivate byte[] buf = new byte[1024];\r\n\tprivate int curChar;\r\n\tprivate int numChars;\r\n\tprivate SpaceCharFilter filter;\r\n \r\n\tpublic InputReader(InputStream stream) {\r\n\t\tthis.stream = stream;\r\n\t}\r\n \r\n\tpublic int read() {\r\n\t\tif (numChars == -1)\r\n\t\t\tthrow new InputMismatchException();\r\n\t\tif (curChar >= numChars) {\r\n\t\t\tcurChar = 0;\r\n\t\t\ttry {\r\n\t\t\t\tnumChars = stream.read(buf);\r\n\t\t\t} catch (IOException e) {\r\n\t\t\t\tthrow new InputMismatchException();\r\n\t\t\t}\r\n\t\t\tif (numChars <= 0)\r\n\t\t\t\treturn -1;\r\n\t\t}\r\n\t\treturn buf[curChar++];\r\n\t}\r\n \r\n\tpublic int readInt() {\r\n\t\tint c = read();\r\n\t\twhile (isSpaceChar(c))\r\n\t\t\tc = read();\r\n\t\tint sgn = 1;\r\n\t\tif (c == '-') {\r\n\t\t\tsgn = -1;\r\n\t\t\tc = read();\r\n\t\t}\r\n\t\tint res = 0;\r\n\t\tdo {\r\n\t\t\tif (c < '0' || c > '9')\r\n\t\t\t\tthrow new InputMismatchException();\r\n\t\t\tres *= 10;\r\n\t\t\tres += c - '0';\r\n\t\t\tc = read();\r\n\t\t} while (!isSpaceChar(c));\r\n\t\treturn res * sgn;\r\n\t}\r\n \r\n\tpublic String readString() {\r\n\t\tint c = read();\r\n\t\twhile (isSpaceChar(c))\r\n\t\t\tc = read();\r\n\t\tStringBuilder res = new StringBuilder();\r\n\t\tdo {\r\n\t\t\tres.appendCodePoint(c);\r\n\t\t\tc = read();\r\n\t\t} while (!isSpaceChar(c));\r\n\t\treturn res.toString();\r\n\t}\r\n \r\n\tpublic long readLong() {\r\n\t\tint c = read();\r\n\t\twhile (isSpaceChar(c)) {\r\n\t\t\tc = read();\r\n\t\t}\r\n\t\tint sgn = 1;\r\n\t\tif (c == '-') {\r\n\t\t\tsgn = -1;\r\n\t\t\tc = read();\r\n\t\t}\r\n\t\tlong res = 0;\r\n\t\tdo {\r\n\t\t\tif (c < '0' || c > '9') {\r\n\t\t\t\tthrow new InputMismatchException();\r\n\t\t\t}\r\n\t\t\tres *= 10;\r\n\t\t\tres += c - '0';\r\n\t\t\tc = read();\r\n\t\t} while (!isSpaceChar(c));\r\n\t\treturn res * sgn;\r\n\t}\r\n\t\r\n\tpublic boolean isSpaceChar(int c) {\r\n\t\tif (filter != null)\r\n\t\t\treturn filter.isSpaceChar(c);\r\n\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\r\n\t}\r\n     \r\n\tpublic String next() {\r\n\t\treturn readString();\r\n\t}\r\n    \r\n    public interface SpaceCharFilter {\r\n\t\tpublic boolean isSpaceChar(int ch);\r\n\t}\r\n}\r\n \r\n \r\n \r\nclass pair implements Comparable<pair> {\r\n\tlong first;\r\n\tlong second;\r\n \r\n\tpair(long a, long b) {\r\n\t\tthis.first = a;\r\n\t\tthis.second = b;\r\n\t}\r\n \r\n\tpublic long getFirst() {\r\n\t\treturn first;\r\n\t}\r\n \r\n\tpublic long getSecond() {\r\n\t\treturn second;\r\n\t}\r\n \r\n\tpublic String toString() {\r\n\t\treturn first + \" \" + second;\r\n\t}\r\n \r\n\tpublic boolean equals(Object o) {\r\n\t\treturn o instanceof pair && ((pair) o).first == first && ((pair) o).second == second;\r\n\t}\r\n \r\n\tpublic int compareTo(pair a) {\r\n\t\treturn Long.compare(first, a.first);\r\n\t}\r\n \r\n\tpublic int hashCode() {\r\n\t\treturn (31 * (int) first + (int) second);\r\n\t}\r\n}\r\n"
}