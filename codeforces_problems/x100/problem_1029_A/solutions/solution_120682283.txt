{
    "id": 120682283,
    "contestId": 1029,
    "creationTimeSeconds": 1624722378,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1029,
        "index": "A",
        "name": "Many Equal Substrings",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 1029,
        "members": [
            {
                "handle": "AbhilashaBansal"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1535122200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long int\r\n#define pii pair<int,int>\r\n#define piii pair <int, pair<int,int>>\r\n\r\nint main(){\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n\r\n    int n, k;\r\n    cin>>n>>k;\r\n\r\n    string s;\r\n    cin>>s;\r\n\r\n    int cnt=1;\r\n    int last_idx=0;\r\n    vector<int> v;\r\n    v.push_back(0);\r\n\r\n    for(int i=1; i<n; i++){\r\n        string s1 = s.substr(i);\r\n        if(s1==s.substr(0, n-i)){\r\n            cnt++;\r\n            last_idx = i;\r\n            v.push_back(i);\r\n        }\r\n    }\r\n\r\n    if(cnt>=k){\r\n        // just find the index of kth occurence and repeat string from there\r\n        int idx = v[k-1];\r\n        int l1 = n-idx;\r\n        s += s.substr(n-l1);\r\n        cout<<s;\r\n        return 0;\r\n    }\r\n\r\n    if(cnt==1){\r\n        while(k--){\r\n            cout<<s;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    int div = (k-1)/(cnt-1);\r\n    int rem = (k-1)%(cnt-1);\r\n    // cout<<rem<<endl;\r\n\r\n    string t=s;\r\n    while(div>1){\r\n        int idx = v[cnt-1];\r\n        int len_to_leave = n-idx;\r\n        t += s.substr(len_to_leave);\r\n\r\n        div--;\r\n    }\r\n\r\n    if(rem){\r\n        int idx = v[rem];\r\n\r\n        int len_to_leave = n-v[cnt-1];\r\n        t += s.substr(len_to_leave, idx-len_to_leave);\r\n        t += s;\r\n    }\r\n    else{\r\n        int idx = v[cnt-1];\r\n        int l1 = n-idx;\r\n        t += s.substr(l1);\r\n    }\r\n\r\n    cout<<t;\r\n    return 0;\r\n}"
}