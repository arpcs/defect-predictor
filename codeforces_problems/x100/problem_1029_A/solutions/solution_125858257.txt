{
    "id": 125858257,
    "contestId": 1029,
    "creationTimeSeconds": 1628953409,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1029,
        "index": "A",
        "name": "Many Equal Substrings",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 1029,
        "members": [
            {
                "handle": "liheman"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1535122200
    },
    "programmingLanguage": "Java 11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 78,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 24371200,
    "source": "import java.util.*;\r\npublic class ManyEqualSubstrings {\r\n    public static void main(String[] args) {\r\n        Scanner scan = new Scanner(System.in);\r\n        int len = scan.nextInt();\r\n        int rep = scan.nextInt();\r\n        String in = scan.next();\r\n        int maxReuse = 0;\r\n        for(int i=1; i<len; i++) {\r\n            if(in.substring(in.length()-i).equals(in.substring(0, i))) {\r\n                maxReuse = i;\r\n            }\r\n        }\r\n        // System.out.println(maxReuse);\r\n        StringBuilder sb = new StringBuilder(in);\r\n        for(int i=1; i<rep; i++) {\r\n            sb.append(in.substring(maxReuse));\r\n        }\r\n        \r\n        System.out.println(sb.toString());\r\n        \r\n    }\r\n}\r\n\r\n"
}