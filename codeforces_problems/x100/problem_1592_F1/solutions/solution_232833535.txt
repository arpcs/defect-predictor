{
    "id": 232833535,
    "contestId": 1592,
    "creationTimeSeconds": 1700038601,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1592,
        "index": "F1",
        "name": "Alice and Recoloring 1",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1592,
        "members": [
            {
                "handle": "phtniit"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1633271700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 67,
    "timeConsumedMillis": 655,
    "memoryConsumedBytes": 2764800,
    "source": "//#pragma GCC optimize(\"Ofast\",\"-funroll-loops\")\n//#pragma GCC target(\"sse4.1\",\"sse4.2\",\"ssse3\",\"sse3\",\"sse2\",\"sse\",\"avx2\",\"avx\",\"popcnt\",\"tune=native\")\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long double ldb;\ntypedef long long i64;\ntypedef unsigned long long u64;\ntypedef unsigned int u32;\ntypedef pair<int, int> pii;\n\n// std::mt19937_64 rng(std::chrono::steady_clock::now().time_since_epoch().count());\n// priority_queue<int, vector<int>, greater<int>> minq;\n// ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n// fflush(stdout);\n\nconst int inf = 1000000007;\nconst i64 prm = 998244353;\nconst i64 inf2 = ((i64)inf) * inf;\nconst int maxn = 1100010; // 1.1e6\n\ninline int read(){\n  int x=0,f=0; char ch=getchar();\n  while(!isdigit(ch)) f|=(ch==45),ch=getchar();\n  while(isdigit(ch)) x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\n  return f?-x:x;\n}\n\nchar s[550][550];\nint c[550][550], v[550][550];\nint cnt;\nvoid up(int i, int j) {\n  cnt -= v[i][j];\n  v[i][j] = c[i][j] ^ c[i+1][j] ^ c[i][j+1] ^ c[i+1][j+1];\n  cnt += v[i][j];\n}\nvoid init(int n, int m) {\n  for (int i = 1; i <= n; ++i)\n    for (int j = 1; j <= m; ++j) \n      c[i][j] = (s[i][j] == 'B');\n  for (int i = 1; i <= n; ++i)\n    for (int j = 1; j <= m; ++j) \n      up(i, j);\n}\nint gao(int n, int m, int x, int y) {\n  for (int i = x; i <= n; ++i)\n    c[i][y] = (s[i][y] == 'W');\n  for (int i = max(1, x-1); i <= n; ++i) \n    for (int j = max(1, y-1); j <= y; ++j) \n      up(i, j);\n  return cnt;\n}\nint main() {\n  int n = read(), m = read();\n  for (int i = 1; i <= n; ++i) scanf(\"%s\", &s[i][1]);\n  init(n, m);\n  int res = cnt;\n  for (int i = 1; i <= n; ++i) {\n    init(n, m);\n    for (int j = m; j > 0; --j) {\n      res = min(res, gao(n, m, i, j) + 3);\n    }\n  }\n  cout << res << endl;\n  return 0;\n}\n"
}