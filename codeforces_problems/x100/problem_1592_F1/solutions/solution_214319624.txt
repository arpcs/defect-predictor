{
    "id": 214319624,
    "contestId": 1592,
    "creationTimeSeconds": 1689670033,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1592,
        "index": "F1",
        "name": "Alice and Recoloring 1",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1592,
        "members": [
            {
                "handle": "00cuob"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1633271700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 53760000,
    "source": "// LUOGU_RID: 116228878\n#include <bits/stdc++.h>\r\n#define int long long\r\n#define db double\r\nusing namespace std;\r\nconst int N = 600+10,p=1e9+7;\r\n#define out(a) {for(int __=1; __<=n;__++)print(a[__]);cout<<\"\\n\";}\r\ntemplate<typename T>void print(T x){cout<<x<<\" \";}\r\nint read(){\r\n    static int fu,num;\r\n    static char ch;\r\n    fu=1,num=0;\r\n    while(!isdigit(ch)){\r\n        if(ch=='-')fu=-1;\r\n        ch=getchar();\r\n    }\r\n    while(isdigit(ch)){\r\n        num=(num<<3)+(num<<1)+ch-'0';\r\n        ch=getchar();\r\n    }\r\n    return fu*num;\r\n}\r\nint n,m,k,T,cnt=2,ans,mp[N][N],cot[N][N],h[N*8],mch[N*8];\r\nstruct edge{\r\n    int v,n;\r\n}e[N*N*8];\r\nvoid add(int u,int v){\r\n    e[++cnt]={v,h[u]};h[u]=cnt;\r\n    e[++cnt]={u,h[v]};h[v]=cnt;\r\n}\r\nint vis[N*8];\r\n// int dfs(int u){\r\n    // for(int i=h[u];i;i=e[i].n){\r\n        // int v=e[i].v;\r\n        // if(vis[v])continue;\r\n        // vis[v]=1;\r\n        // if(!mch[v]||dfs(mch[v])){\r\n            // mch[v]=u;//mch[u]=v;\r\n            // return 1;\r\n        // }\r\n    // }\r\n    // return 0;\r\n// }\r\nint dfs(int p) {\r\n\tif(vis[p]) return 0;\r\n    for (int i = h[p]; i; i = e[i].n) {\r\n        if(!vis[e[i].v]){\r\n        \tvis[e[i].v]=1;\r\n            if (!mch[e[i].v]|| dfs(mch[e[i].v])) {\r\n            \tmch[e[i].v] = p;\r\n            \tmch[p] = e[i].v;\r\n            \treturn 1;\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}\r\nsigned main(){\r\n    //freopen(\".in\",\"r\",stdin);\r\n    //freopen(\".out\",\"w\",stdout);\r\n    cin>>n>>m;\r\n    for(int i=1;i<=n;i++){\r\n        string s;\r\n        cin>>s;\r\n        s=\" \"+s;\r\n        for(int j=1;j<=m;j++){\r\n            mp[i][j]=(s[j]=='B'?1:0);\r\n            // cout<<mp[i][j]<<\" \";\r\n            if(mp[i][j]){\r\n                cot[i][j]++;cot[i-1][j-1]++;cot[i-1][j]++;cot[i][j-1]++;\r\n            }\r\n        }\r\n        // cout<<endl;\r\n    }\r\n    // cout<<endl;\r\n    // for(int i=1;i<=n;i++)out(cot[i])\r\n    // cout<<endl;\r\n    for(int i=1;i<=n;i++){\r\n        for(int j=1;j<=m;j++){\r\n            cot[i][j]%=2;\r\n            if(cot[i][j])ans++;\r\n        }\r\n        // out(cot[i])\r\n    }\r\n    // cout<<endl;\r\n    for(int i=1;i<n;i++){\r\n        for(int j=1;j<m;j++){\r\n            if(cot[i][j]&&cot[i][m]&&cot[n][j]){\r\n                add(i,j+n);\r\n                // cout<<i<<\" \"<<j+n<<endl;\r\n            }\r\n        }\r\n    }\r\n    int tmp=0;\r\n    for(int i=1;i<n;i++){\r\n        memset(vis,0,sizeof(vis));\r\n        if(dfs(i))tmp++;\r\n    }\r\n    // cout<<ans<<\" \"<<tmp<<endl;\r\n    if(tmp){\r\n        if(cot[n][m]){\r\n        \tans=ans-2-(tmp-1)/2*2;\r\n        }else ans=ans-tmp/2*2;\r\n    }\r\n    cout<<ans;\r\n    fclose(stdin);\r\n    fclose(stdout);\r\n}"
}