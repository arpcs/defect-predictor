{
    "id": 214750796,
    "contestId": 1592,
    "creationTimeSeconds": 1689945673,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1592,
        "index": "F1",
        "name": "Alice and Recoloring 1",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1592,
        "members": [
            {
                "handle": "Echo_Long"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1633271700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 20275200,
    "source": "// LUOGU_RID: 116830913\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define endl '\\n'\r\n#define mid (l+r>>1)\r\n#define pb push_back\r\nconst int N = 1e3 + 5;\r\nint read ()\r\n{\r\n\tint x = 0 , f = 1;\r\n\tchar ch = cin.get();\r\n\twhile ( !isdigit ( ch ) ) { if ( ch == '-' ) f = -1; ch = cin.get(); }\r\n\twhile ( isdigit ( ch ) ) { x = ( x << 1 ) + ( x << 3 ) + ( ch ^ 48 ); ch = cin.get(); }\r\n\treturn x * f;\r\n}\r\n\r\nint n , m , link[N] , vis[N] , ans , mp[N][N] , a[N][N] , res;\r\n\r\nvector<int> e[N*N] , lsh;\r\nvoid add ( int u , int v ) { e[u].pb(v); }\r\n \r\nint hungry ( int u )\r\n{\r\n\tfor ( auto v : e[u] )\r\n\t\tif ( !vis[v] ) \r\n\t\t{\r\n\t\t\tvis[v] = 1;\r\n\t\t\tif ( link[v] == -1 || hungry ( link[v] ) ) return link[v] = u , 1;\r\n\t\t}\r\n\treturn 0;\r\n}\r\n \r\nchar ch;\r\nstring s;\r\nsigned main ()\r\n{\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0) , cout.tie(0);\r\n\tmemset ( link , -1 , sizeof link );\r\n\tn = read() , m = read();\r\n\tfor ( int i = 1 ; i <= n ; i ++ )\r\n\t\tfor ( int j = 1 ; j <= m ; j ++ )\r\n\t\t\tcin >> ch , mp[i][j] = ( ch == 'B' );\r\n\tfor ( int i = 1 ; i <= n ; i ++ )\r\n\t\tfor ( int j = 1 ; j <= m ; j ++ )\r\n\t\t\ta[i][j] = mp[i][j] ^ mp[i+1][j] ^ mp[i][j+1] ^ mp[i+1][j+1];\r\n\tfor ( int i = 1 ; i <= n ; i ++ )\r\n\t\tfor ( int j = 1 ; j <= m ; j ++ ) \r\n\t\t\tans += a[i][j];\r\n\tint flag = 0;\r\n\tif ( a[n][m] ) \r\n\t\tfor ( int i = 1 ; i < n ; i ++ )\r\n\t\t\tfor ( int j = 1 ; j < m ; j ++ )\r\n\t\t\t\tif ( a[i][j] && a[n][j] && a[i][m] ) flag = 1 , ans -- , cout << ans << endl;\r\n\tif ( !flag ) cout << ans << endl;\r\n\treturn 0;\r\n}\r\n"
}