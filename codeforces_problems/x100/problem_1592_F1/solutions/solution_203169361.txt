{
    "id": 203169361,
    "contestId": 1592,
    "creationTimeSeconds": 1682264303,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1592,
        "index": "F1",
        "name": "Alice and Recoloring 1",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1592,
        "members": [
            {
                "handle": "Nightmaresss"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1633271700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 67,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 2560000,
    "source": "#include <bits/stdc++.h>\r\n#include<unordered_map>\r\n#include<cmath>\r\nusing namespace std;\r\n#define ll long long \r\n\r\nsigned main() {\r\n    cin.tie(0)->sync_with_stdio(0);\r\n    int t = 1;\r\n    while (t--) {\r\n        int n; cin >> n;\r\n        int m; cin >> m;\r\n        vector<string> a(n);\r\n        for (int i = 0; i < n; i++) {\r\n            cin >> a[i];\r\n        }\r\n        vector opr(n, vector<int> (m, 0)), sum(n, vector<int> (m, 0));\r\n        auto get = [&] (int x, int y) {\r\n            if (x == n - 1 && y == m - 1) {\r\n                return 0;\r\n            }\r\n            else if (x == n - 1) {\r\n                return sum[x][y + 1];\r\n            }\r\n            else if (y == m - 1) {\r\n                return sum[x + 1][y];\r\n            }\r\n            else {\r\n                return sum[x + 1][y] ^ sum[x][y + 1] ^ sum[x + 1][y + 1];\r\n            }\r\n        };\r\n        auto gc = [&](int x, int y) {\r\n            if (a[x][y] == 'W') return 0;\r\n            else return 1;\r\n        };\r\n        int ans = 0;\r\n        for (int i = n - 1; i >= 0; i--) {\r\n            for (int j = m - 1; j >= 0; j--) {\r\n                opr[i][j] = (get(i, j) != gc(i, j));\r\n                sum[i][j] = get(i, j) ^ opr[i][j];\r\n                ans += opr[i][j];\r\n            }\r\n        }\r\n\r\n        if (!opr[n - 1][m - 1]) {\r\n            cout << ans << endl; return 0;\r\n        }\r\n        \r\n        for (int i = 0; i < n - 1; i++) {\r\n            for (int j = 0; j < m - 1; j++) {\r\n                if (opr[i][j] && opr[n - 1][j] && opr[i][m - 1]) {\r\n                    cout << ans - 1 << endl;\r\n                    return 0;\r\n                }\r\n            }\r\n        }\r\n        \r\n        cout << ans << endl;\r\n        \r\n    }\r\n    \r\n    \r\n    \r\n    \r\n\r\n\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"
}