{
    "id": 189636105,
    "contestId": 1592,
    "creationTimeSeconds": 1674043120,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1592,
        "index": "F1",
        "name": "Alice and Recoloring 1",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1592,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1633271700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <iomanip>\n#include <deque>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <vector>\n#include <numeric>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<string> plain(n);\n    for (int i = 0; i < n; ++i) {\n        cin >> plain[i];\n    }\n    int cur = 0;\n    vector<bool> subs(m, false);\n    for (int i = n - 1; i >= 0; --i) {\n        bool summ = false;\n        for (int j = m - 1; j >= 0; --j) {\n            if(subs[j]) {\n                summ = !summ;\n            }\n            if((summ && plain[i][j] == 'W') || (!summ && plain[i][j] == 'B')) {\n                ++cur;\n                summ = !summ;\n                subs[j] = !subs[j];\n            }\n        }\n    }\n    int current = 3;\n    int k = m - 1;\n    int r = n - 1;\n    while(k >= 0 && plain[r][k] == 'B') {\n        --k;\n    }\n    while(r >= 0) {\n        bool flag = true;\n        for (int i = n - 1; i > k && flag; --i) {\n            flag = (plain[r][i] == 'B');\n        }\n        if(flag) {\n            --r;\n        }\n        else {\n            break;\n        }\n    }\n    for (int i = n - 1; i > k; --i) {\n        for (int j = m - 1; j > r; --j) {\n            if(plain[i][j] == 'W') {\n                plain[i][j] = 'R';\n            }\n            else {\n                plain[i][j] = 'W';\n            }\n        }\n    }\n    subs.resize(m, false);\n    for (int i = n - 1; i >= 0; --i) {\n        bool summ = false;\n        for (int j = m - 1; j >= 0; --j) {\n            if(subs[j]) {\n                summ = !summ;\n            }\n            if((summ && plain[i][j] == 'W') || (!summ && plain[i][j] == 'B')) {\n                ++current;\n                summ = !summ;\n                subs[j] = !subs[j];\n            }\n        }\n    }\n    cout << min(cur, current) << endl;\n    return 0;\n}\n\t\t\t \t  \t \t \t\t   \t \t\t\t  \t\t   \t\t"
}