{
    "id": 236031731,
    "contestId": 1592,
    "creationTimeSeconds": 1701860115,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1592,
        "index": "F1",
        "name": "Alice and Recoloring 1",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1592,
        "members": [
            {
                "handle": "WaterSL"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1633271700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 67,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 6553600,
    "source": "// LUOGU_RID: 138447944\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nnamespace IO {\r\n\t#if ONLINE_JUDGE\r\n\t#define getc() (IS == IT && (IT = (IS = ibuf) + fread(ibuf, 1, IL, stdin), IS == IT) ? EOF : *IS++)\r\n\t#else\r\n\t#define getc() getchar()\r\n\t#endif\r\n\tconst int IL = 1 << 21, OL = 1 << 21;\r\n\tint olen = 0;\r\n\tchar ibuf[IL], *IS = ibuf, *IT = ibuf, obuf[OL];\r\n\tinline int read() {\r\n\t\tregister char ch = getc(); register int x = 0, f = 1;\r\n\t\twhile(!isdigit(ch)) { if(ch == '-') f = -1; ch = getc(); }\r\n\t\twhile(isdigit(ch)) x = x * 10 + ch - 48, ch = getc();\r\n\t\treturn x * f;\r\n\t}\r\n\tinline double readdb() {\r\n\t\tregister char ch = getc(); register double x = 0, f = 1;\r\n\t\twhile(!isdigit(ch)) { if(ch == '-') f = -1; ch = getc(); }\r\n\t\twhile(isdigit(ch)) x = x * 10 + ch - 48, ch = getc();\r\n\t\tif(ch == '.') {\r\n\t\t\tregister double b = 0.1;\r\n\t\t\tch = getc();\r\n\t\t\twhile(isdigit(ch)) x += (ch - 48) * b, b *= 0.1, ch = getc();\r\n\t\t}\r\n\t\treturn x * f;\r\n\t}\r\n\tinline int readstr(char *s) {\r\n\t\tregister char ch = getc(); register int len = 0;\r\n\t\twhile(!isalpha(ch)) ch = getc();\r\n\t\twhile(isalpha(ch)) s[++len] = ch, ch = getc();\r\n\t\treturn len;\r\n\t}\r\n\tinline void flush() { fwrite(obuf, 1, olen, stdout); olen = 0; }\r\n\tinline void putc(register char ch) { obuf[olen++] = ch; }\r\n\ttemplate<class T>\r\n\tinline void write(register T x) {\r\n\t\tif(x < 0) obuf[olen++] = '-', x = -x;\r\n\t\tif(x > 9) write(x / 10);\r\n\t\tobuf[olen++] = x % 10 + 48;\r\n\t}\r\n} using namespace IO;\r\nconst int N = 5e2 + 10;\r\nint n, m, a[N][N], b[N][N];\r\nchar s[N][N];\r\nvector<int> e[N];\r\nbool vis[N];\r\nint col[N];\r\nbool dfs(int u) {\r\n\tfor(auto v : e[u]) {\r\n\t\tif(vis[v]) continue;\r\n\t\tvis[v] = 1;\r\n\t\tif(!col[v] || dfs(col[v])) {\r\n\t\t\tcol[v] = u;\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\nint main() {\r\n\tn = read(), m = read();\r\n\tfor(int i = 1; i <= n; i++)\r\n\t\treadstr(s[i]);\r\n\tfor(int i = 1; i <= n; i++)\r\n\t\tfor(int j = 1; j <= m; j++)\r\n\t\t\ta[i][j] = s[i][j] == 'B';\r\n\tfor(int i = 1; i <= n; i++)\r\n\t\tfor(int j = 1; j <= m; j++)\r\n\t\t\tb[i][j] = a[i][j] ^ a[i + 1][j] ^ a[i][j + 1] ^ a[i + 1][j + 1];\r\n\tint ans = 0, cnt = 0;\r\n\tfor(int i = 1; i < n; i++)\r\n\t\tfor(int j = 1; j < m; j++)\r\n\t\t\tif(b[i][j] && b[n][j] && b[i][m] && b[n][m]) {\r\n\t\t\t\tcnt = 1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\tfor(int i = 1; i <= n; i++)\r\n\t\tfor(int j = 1; j <= m; j++)\r\n\t\t\tans += b[i][j];\r\n//\tcout << ans << endl;\r\n\tprintf(\"%d\\n\", ans - cnt);\r\n\treturn 0;\r\n}\r\n"
}