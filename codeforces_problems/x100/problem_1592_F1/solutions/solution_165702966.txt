{
    "id": 165702966,
    "contestId": 1592,
    "creationTimeSeconds": 1658770710,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1592,
        "index": "F1",
        "name": "Alice and Recoloring 1",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1592,
        "members": [
            {
                "handle": "userbot"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1633271700
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 61,
    "memoryConsumedBytes": 1024000,
    "source": "import sys\r\n\r\n# store inf in a variable called inf\r\ninf = float('inf')\r\n\r\n\r\n# change stdout buffer size\r\nbuffer = open(1, 'w', 10**6)\r\n\r\n\r\n# fast printing function\r\ndef print(*args, sep=' ', end='\\n'):\r\n    buffer.write(sep.join(str(arg) for arg in args) + end)\r\n\r\n\r\n# flush stdout\r\ndef flush():\r\n    buffer.flush()\r\n\r\n\r\n# fast input\r\ndef input():\r\n    return sys.stdin.readline()\r\n\r\n\r\n# read a list of integers from stdin\r\ndef read_ints(index=None):\r\n    return [int(x) for x in input().split()]\r\n\r\n\r\ndef read_ints_indexed(index):\r\n    return [(int(x), i + index) for i, x in enumerate(input().split())]\r\n\r\n\r\ndef solve():\r\n    n, m = read_ints()\r\n    board = []\r\n    for i in range(n):\r\n        board.append([x == 'B' for x in input()])\r\n        board[i].append(False)\r\n    board.append([False] * (m + 1))\r\n\r\n    a = [[False] * m for _ in range(n)]\r\n\r\n    for i in range(n):\r\n        for j in range(m):\r\n            a[i][j] = board[i][j] ^ board[i][j+1] ^ board[i+1][j] ^ board[i+1][j+1]\r\n\r\n    [print(*x, sep='\\t') for x in a]\r\n\r\n    count = 0\r\n    operation4 = 0\r\n    for i in range(n):\r\n        for j in range(m):\r\n            count += a[i][j]\r\n            if i < n - 1 and j < m - 1 and a[i][j] and a[i][m - 1] and a[n-1][j] and a[n-1][m-1]:\r\n                print(i, j)\r\n                operation4 = 1\r\n\r\n    print(count - operation4)\r\n\r\n\r\nif __name__ == '__main__':\r\n    solve()\r\n"
}