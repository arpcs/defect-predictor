{
    "id": 223083660,
    "contestId": 1110,
    "creationTimeSeconds": 1694521427,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1110,
        "index": "H",
        "name": "Modest Substrings",
        "type": "PROGRAMMING",
        "points": 4000.0,
        "rating": 3500,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1110,
        "members": [
            {
                "handle": "sidekick257"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1549546500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nint n,cnt,root,ans,ansq;\r\nstring anss,l,r;\r\nqueue<int> q;\r\nstruct tree{\r\n\tint fail=-1,ed[2005],nx[10],ans[2005],g[2005];\r\n\tchar c;\r\n}t[80005];\r\nbool is[50005];\r\nvoid getfail(){\r\n\tfor(int i=0;i<10;i++){\r\n\t\tint y=t[root].nx[i];\r\n\t\tif(!y) continue;\r\n\t\tt[y].fail=root;\r\n\t\tq.push(y);\r\n\t}\r\n\twhile(!q.empty()){\r\n\t\tint x=q.front();\r\n\t\tq.pop();\r\n\t\tfor(int i=0;i<10;i++){\r\n\t\t\tint &y=t[x].nx[i];\r\n\t\t\tif(y){\r\n\t\t\t\tt[y].fail=t[t[x].fail].nx[i];\r\n\t\t\t\tif(!is[y]){\r\n\t\t\t\t\tq.push(y);\r\n\t\t\t\t\tis[y]=1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse y=t[t[x].fail].nx[i];\r\n\t\t}\r\n\t}\r\n\tfor(int x=0;x<=cnt;x++){\r\n\t\tfor(int k=0;k<=n;k++){\r\n\t\t\tfor(int p=x;p!=-1;p=t[p].fail){\r\n                t[x].g[k]+=t[p].ed[k];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nvoid AC(){\r\n\tfor(int j=0;j<n;j++)\r\n\t\tfor(int i=0;i<=cnt;i++) t[i].ans[j]=-1e9;\r\n\tt[root].ans[0]=0;\r\n\tfor(int q=0;q<n;q++){\r\n\t\tfor(int i=0;i<=cnt;i++){\r\n\t\t\tfor(int j=0;j<10;j++){\r\n\t\t\t\tint y=t[i].nx[j];\r\n\t\t\t\tif(t[y].ans[q+1]<t[i].ans[q]+t[y].g[n-1-q]){\r\n                    t[y].ans[q+1]=t[i].ans[q]+t[y].g[n-1-q];\r\n\t\t\t\t\t// if(q==0) cout<<j<<\" \"<<t[y].ans[q+1]<<\"\\n\";\r\n\t\t\t\t\tans=max(ans,t[y].ans[q+1]);\r\n                }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nvoid add(int x,int l,int r,int len){\r\n\tfor(int i=l;i<=r;i++){\r\n\t\tint &y=t[x].nx[i];\r\n\t\tif(!y){\r\n\t\t\ty=++cnt;\r\n\t\t\tt[y].c=i+'0';\r\n\t\t}\r\n\t\tt[y].ed[len]++;\r\n\t}\r\n}\r\nvoid move(int &x,int b){\r\n\tint &y=t[x].nx[b];\r\n\tif(!y){\r\n\t\ty=++cnt;\r\n\t\tt[y].c=b+'0';\r\n\t}\r\n\tx=y;\r\n}\r\nvoid build_tree(){\r\n\tint nl=l.size(),nr=r.size();\r\n\tif(nl==nr){\r\n\t\tbool bj=0;\r\n\t\tint x=root,x1=root;\r\n\t\tfor(int i=0;i<nl;i++){\r\n\t\t\tint last=nl-i-1;\r\n\t\t\tif(l[i]==r[i]&&!bj) move(x,l[i]-'0');\r\n\t\t\telse{\r\n\t\t\t\tif(!bj){\r\n\t\t\t\t\tx1=x;\r\n\t\t\t\t\tadd(x,l[i]-'0'+1,r[i]-'0'-1,last);\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tadd(x,l[i]-'0'+1,9,last);\r\n\t\t\t\t\tadd(x1,0,r[i]-'0'-1,last);\r\n\t\t\t\t}\r\n\t\t\t\tmove(x,l[i]-'0');\r\n\t\t\t\tmove(x1,r[i]-'0');\r\n\t\t\t\tbj=1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tt[x].ed[0]++;\r\n\t\tt[x1].ed[0]++;\r\n\t}\r\n\telse{\r\n\t\tbool bj=0;\r\n\t\tint x=root,x1=root;\r\n\t\tfor(int i=0;i<nl;i++){\r\n\t\t\tint last=nl-i-1;\r\n\t\t\tadd(x,l[i]-'0'+1,9,last);\r\n\t\t\tmove(x,l[i]-'0');\r\n\t\t\tbj=1;\r\n\t\t}\r\n\t\tt[x].ed[0]++;\r\n\t\tfor(int i=0;i<nr;i++){\r\n\t\t\tint last=nr-i-1;\r\n\t\t\tadd(x1,0+(x1==root),r[i]-'0'-1,last);\r\n\t\t\tmove(x1,r[i]-'0');\r\n\t\t\tbj=1;\r\n\t\t}\r\n\t\tt[x1].ed[0]++;\r\n\t\tfor(int i=0;i<=9;i++){\r\n\t\t\tfor(int j=nl+1-1;j<=nr-1-1;j++){\r\n\t\t\t\tif(!t[root].nx[i]){\r\n\t\t\t\t\tt[root].nx[i]=++cnt;\r\n\t\t\t\t\tt[t[root].nx[i]].c=i;\r\n\t\t\t\t}\r\n\t\t\t\tt[t[root].nx[i]].ed[j]++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor(int i=0;i<=cnt;i++){\r\n\t\tfor(int j=1;j<=n;j++){\r\n\t\t\tt[i].ed[j]+=t[i].ed[j-1];\r\n\t\t}\r\n\t}\r\n}\r\nbool res[80005][2005];\r\nvoid find(){\r\n\tfor(int i=0;i<=cnt;i++){\r\n\t\tif(t[i].ans[n]==ans) res[i][n]=1; \r\n\t}\r\n\tfor(int i=n-1;i>=0;i--){\r\n\t\tfor(int j=0;j<=cnt;j++){\r\n\t\t\tfor(int k=0;k<=9;k++){\r\n\t\t\t\tint nx=t[j].nx[k];\r\n\t\t\t\tif(res[nx][i+1]&&t[j].ans[i]+t[nx].g[n-i-1]==t[nx].ans[i+1]){\r\n\t\t\t\t\tres[j][i]=1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tint x=root;\r\n\t// cout<<\"\\n\";\r\n\tfor(int i=0;i<n;i++){\r\n\t\tfor(int j=0;j<=9;j++){\r\n\t\t\tint nx=t[x].nx[j];\r\n\t\t\tif(res[nx][i+1]&&t[x].ans[i]+t[nx].g[n-i-1]==t[nx].ans[i+1]){\r\n\t\t\t\t// cout<<\"!!\\n\";\r\n\t\t\t\tcout<<char(j+'0');\r\n\t\t\t\tx=nx;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nint main(){\r\n    cin>>l>>r>>n;\r\n\tbuild_tree();\r\n    getfail();\r\n    AC();\r\n\tcout<<ans<<\"\\n\";\r\n\tfind();\r\n\treturn 0;\r\n}"
}