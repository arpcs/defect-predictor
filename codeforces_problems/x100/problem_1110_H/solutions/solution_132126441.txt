{
    "id": 132126441,
    "contestId": 1110,
    "creationTimeSeconds": 1634387043,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1110,
        "index": "H",
        "name": "Modest Substrings",
        "type": "PROGRAMMING",
        "points": 4000.0,
        "rating": 3500,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1110,
        "members": [
            {
                "handle": "ZXyang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1549546500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 542003200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define fi first\r\n#define se second\r\n#define SZ(x) ((int)x.size())\r\n#define lowbit(x) x&-x\r\n#define pb push_back\r\n#define ALL(x) (x).begin(),(x).end()\r\n#define UNI(x) sort(ALL(x)),x.resize(unique(ALL(x))-x.begin())\r\n#define GETPOS(c,x) (lower_bound(ALL(c),x)-c.begin())\r\n#define LEN(x) strlen(x)\r\n#define MS0(x) memset((x),0,sizeof((x)))\r\n#define Rint register int\r\n#define ls (u<<1)\r\n#define rs (u<<1|1)\r\ntypedef unsigned int unit;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef double db;\r\ntypedef pair<int,int> pii;\r\ntypedef pair<ll,ll> pll;\r\ntypedef vector<int> Vi;\r\ntypedef vector<ll> Vll;\r\ntypedef vector<pii> Vpii;\r\ntemplate<class T> void _R(T &x) { cin >> x; }\r\nvoid _R(int &x) { scanf(\"%d\", &x); }\r\nvoid _R(ll &x) { scanf(\"%lld\", &x); }\r\nvoid _R(ull &x) { scanf(\"%llu\", &x); }\r\nvoid _R(double &x) { scanf(\"%lf\", &x); }\r\nvoid _R(char &x) { scanf(\" %c\", &x); }\r\nvoid _R(char *x) { scanf(\"%s\", x); }\r\nvoid R() {}\r\ntemplate<class T, class... U> void R(T &head, U &... tail) { _R(head); R(tail...); }\r\ntemplate<class T> void _W(const T &x) { cout << x; }\r\nvoid _W(const int &x) { printf(\"%d\", x); }\r\nvoid _W(const ll &x) { printf(\"%lld\", x); }\r\nvoid _W(const double &x) { printf(\"%.16f\", x); }\r\nvoid _W(const char &x) { putchar(x); }\r\nvoid _W(const char *x) { printf(\"%s\", x); }\r\ntemplate<class T,class U> void _W(const pair<T,U> &x) {_W(x.fi);putchar(' '); _W(x.se);}\r\ntemplate<class T> void _W(const vector<T> &x) { for (auto i = x.begin(); i != x.end(); _W(*i++)) if (i != x.cbegin()) putchar(' '); }\r\ntemplate<class T> void _WW(const T &x) { cerr << x; }\r\n\r\nvoid W() {}\r\ntemplate<class T, class... U> void W(const T &head, const U &... tail) { _W(head); putchar(sizeof...(tail) ? ' ' : '\\n'); W(tail...); }\r\nvoid WW() {}\r\ntemplate<class T, class... U> void WW(const T &head, const U &... tail) { _WW(head); cerr<<(sizeof...(tail) ? ' ' : '\\n'); WW(tail...); }\r\n\r\n\r\nconst int MOD=1e9+7,mod=998244353;\r\nll qpow(ll a,ll b) {ll res=1;a%=MOD; assert(b>=0); for(;b;b>>=1){if(b&1)res=res*a%MOD;a=a*a%MOD;}return res;}\r\nconst int MAXN=4e5+10,MAXM=2e6+10;\r\nconst int INF=INT_MAX,SINF=0x3f3f3f3f;\r\nconst ll llINF=LLONG_MAX;\r\nconst int inv2=(MOD+1)/2;\r\nconst int Lim=1<<20;\r\n\r\nint ch[MAXN][11],fail[MAXN];\r\nstring s,t;\r\nint n,cnt=0,rt;\r\n\r\nll dp[2005][20005];\r\nint g[2005][20005];\r\nbool ok[2005][20005];\r\n\r\nvoid dfs(int &u,int dep,int lim1,int lim2,int mxdep,int zero)\r\n{\r\n    if(!u)u=++cnt;\r\n    if(dep==mxdep)\r\n    {\r\n        g[u][0]+=1;\r\n        return;\r\n    }\r\n    if(!lim1&&!lim2)\r\n    {\r\n        for(int i=SZ(t)-dep;i>=SZ(s)-dep+1;i--)\r\n            g[u][i]+=1;\r\n        return;\r\n    }\r\n    for(int i=zero;i<10;i++)\r\n    {\r\n        if(lim1&&s[dep]-'0'>i)continue;\r\n        if(lim2&&t[dep]-'0'<i)continue;\r\n        dfs(ch[u][i],dep+1,lim1&(s[dep]-'0'==i),lim2&(t[dep]-'0'==i),mxdep,0);\r\n        WW(u,i,dep,ch[u][i],g[ch[u][i]][0],g[ch[u][i]][1]);\r\n    }\r\n}\r\n\r\nqueue<int> q;\r\n\r\nvoid getfail()\r\n{\r\n    for(int i=1;i<=cnt;i++)fail[i]=rt;\r\n    for(int i=0;i<10;i++)if(ch[rt][i])\r\n        q.push(ch[rt][i]);\r\n    else ch[rt][i]=rt;\r\n    while(!q.empty())\r\n    {\r\n        int u=q.front();q.pop();\r\n        for(int i=0;i<=n;i++)\r\n        {\r\n            g[u][i+1]+=g[u][i];\r\n            g[u][i]+=g[fail[u]][i];\r\n        }\r\n        for(int i=0;i<10;i++)\r\n        {\r\n            if(ch[u][i])fail[ch[u][i]]=ch[fail[u]][i],q.push(ch[u][i]);\r\n            else ch[u][i]=ch[fail[u]][i];\r\n        }\r\n    }\r\n}\r\n\r\nvoid solve()\r\n{\r\n   R(s,t,n);\r\n   if(SZ(s)==SZ(t))\r\n        dfs(rt,0,1,1,SZ(t),1);\r\n   else\r\n   {\r\n       dfs(rt,0,1,0,SZ(s),1);\r\n       dfs(rt,0,0,1,SZ(t),1);\r\n   }\r\n   getfail();\r\n   memset(dp,-0x3f,sizeof(dp));\r\n   dp[0][rt]=0;\r\n   for(int i=1;i<=n;i++)\r\n   {\r\n       for(int j=1;j<=cnt;j++)\r\n       {\r\n           for(int k=0;k<10;k++)\r\n           {\r\n               ll &v=dp[i][ch[j][k]];\r\n               if(v<dp[i-1][j]+g[ch[j][k]][n-i])\r\n               {\r\n                   v=dp[i-1][j]+g[ch[j][k]][n-i];\r\n               }\r\n           }\r\n       }\r\n   }\r\n   for(int i=1;i<=cnt;i++)\r\n    for(int j=0;j<10;j++)WW(\"ch\",i,j,ch[i][j]);\r\n   int ans=0;\r\n   for(int i=1;i<=cnt;i++)\r\n   {\r\n       if(ans<dp[n][i])ans=dp[n][i];\r\n   }\r\n   for(int i=1;i<=cnt;i++)if(dp[n][i]==ans)ok[n][i]=1;\r\n   for(int i=1;i<=n;i++)\r\n    for(int j=1;j<=cnt;j++)\r\n    WW(i,j,\"dp:\",dp[i][j],\"ok:\",ok[i][j]);\r\n   for(int i=n-1;i;i--)\r\n   {\r\n       for(int j=1;j<=cnt;j++)\r\n       {\r\n           for(int k=0;k<10;k++)if(dp[i][j]+g[ch[j][k]][n-i-1]==dp[i+1][ch[j][k]])\r\n                ok[i][j]|=ok[i+1][ch[j][k]];\r\n       }\r\n   }\r\n   W(ans);\r\n   string res;\r\n   int u=rt;\r\n   for(int i=1;i<=n;i++)\r\n   {\r\n       for(int j=0;j<10;j++)if(ok[i][ch[u][j]]&&dp[i-1][u]+g[ch[u][j]][n-i]==dp[i][ch[u][j]])\r\n       {\r\n           res+=j+'0';\r\n           u=ch[u][j];\r\n           break;\r\n       }\r\n   }\r\n   W(res);\r\n}\r\n\r\nint main()\r\n{\r\n    int T=1;\r\n    //R(T);\r\n    for(int kase=1;kase<=T;kase++)\r\n    {\r\n        //printf(\"Case #%d: \",kase);\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n"
}