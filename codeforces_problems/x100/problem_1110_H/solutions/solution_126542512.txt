{
    "id": 126542512,
    "contestId": 1110,
    "creationTimeSeconds": 1629467549,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1110,
        "index": "H",
        "name": "Modest Substrings",
        "type": "PROGRAMMING",
        "points": 4000.0,
        "rating": 3500,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1110,
        "members": [
            {
                "handle": "czyer"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1549546500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 295,
    "memoryConsumedBytes": 367718400,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing std::cin;\r\nusing std::cout;\r\n\r\n#define R register\r\nstd::string a, b, c;\r\nint n, m, ch, son[20010][10], cnt, tp[20010][2010], fail[20010], dp[2010][20010];\r\nbool czy[2010][20010];\r\nstd::vector<int> E[20010];\r\nstd::queue<int> q;\r\nvoid ins(int r) {\r\n\tint l = std::min(ch, r), now = 0;\r\n\tfor (R int i = l; i <= r; i ++) {\r\n\t\tint c = a[i] - '0';\r\n\t\tif (!son[now][c]) son[now][c] = ++cnt;\r\n\t\tnow = son[now][c];\r\n\t}\r\n\ttp[now][m - r - 1] = 1;\r\n}\r\nvoid gao() {\r\n\tif ((a.size() > b.size() || a > b) && a.size() >= b.size()) std::swap(a, b);\r\n\tch = b.size() - a.size(); \r\n\tfor (R int i = 0; i < ch; i ++) c += '0';\r\n\tfor (R int i = 0; i < a.size(); i ++) c += a[i];\r\n\ta = c;\r\n\tint dif = b.size();\r\n\tm = b.size();\r\n\tfor (R int i = 0; i < m; i ++) \r\n\t\tif (a[i] != b[i]) {\r\n\t\t\tdif = i; break;\r\n\t\t}\r\n\t\r\n\tbool flag = 1;\r\n\tfor (R int i = m - 1; i >= dif; i --) {\r\n\t\tint st = flag && i >= ch ? a[i] - '0' : a[i] - '0' + 1;\r\n\t\tint ed = i == dif ? b[i] - '0' : 10; \r\n\t\tflag &= (a[i] == '0');\r\n\t\tfor (R int d = st; d < ed; d ++) {\r\n\t\t\ta[i] = (char)(d + '0'); ins(i);\r\n\t\t}\r\n \t}\r\n \ta = b; ch = 0;\r\n \tfor (R int i = dif; i < m; i ++) {\r\n \t\tflag = 1;\r\n \t\tchar qwq = a[i];\r\n \t\tfor (R int j = i + 1; j < m; j ++)\r\n \t\t\tflag &= (a[i] == '9');\r\n \t\t\r\n \t\tint st = i == dif ? a[i] - '0' : 0;\r\n \t\tint ed = flag ? a[i] - '0' : a[i] - '0' - 1;\t\r\n \t\tfor (R int d = st; d <= ed; d ++) {\r\n \t\t\ta[i] = (char)(d + '0'); ins(i);\r\n\t\t}\r\n\t\ta[i] = qwq;\r\n\t\tif (flag) break;\r\n\t}\r\n}\r\n\r\nvoid build_ac() {\r\n\tfor (R int i = 0; i < 10; i ++) \r\n\t\tif (son[0][i]) q.push(son[0][i]), fail[son[0][i]] = 0;\r\n\twhile (!q.empty()) {\r\n\t\tint u = q.front(); q.pop();\r\n\t\tfor (R int i = 0; i < 10; i ++) {\r\n\t\t\tif (son[u][i]) q.push(son[u][i]), fail[son[u][i]] = son[fail[u]][i];\r\n\t\t\telse son[u][i] = son[fail[u]][i];\r\n\t\t}\r\n\t}\r\n\tfor (R int i = 1; i <= cnt; i ++) \r\n\t\tE[fail[i]].push_back(i);\r\n\tfor (R int i = 1; i <= cnt; i ++)\r\n\t\tfor (R int j = 1; j <= n; j ++)\r\n\t\t\ttp[i][j] += tp[i][j - 1];\r\n\t\r\n}\r\n\r\nvoid dfs(int u) {\r\n\tfor (R int i = 0; i < E[u].size(); i ++) {\r\n\t\tint v = E[u][i];\r\n\t\tfor (R int j = 0; j <= n; j ++)\r\n\t\t\ttp[v][j] += tp[u][j];\r\n\t\tdfs(v);\r\n\t} \r\n}\r\nint main() {\r\n\tcin >> a >> b >> n;\r\n\tgao();\r\n\tbuild_ac();\r\n\tdfs(0);\r\n\tmemset(dp, -0x3f3f3f3f, sizeof(dp));\r\n\tdp[0][0] = 0;\r\n\tfor (R int i = 0; i < n; i ++) \r\n\t\tfor (R int j = 0; j <= cnt; j ++) \r\n\t\t\tfor (R int k = 0; k < 10; k ++) {\r\n\t\t\t\tR int cur = son[j][k];\r\n\t\t\t\tif (dp[i + 1][cur] < dp[i][j] + tp[cur][n - i - 1]) {\r\n\t\t\t\t\tdp[i + 1][cur] = dp[i][j] + tp[cur][n - i - 1];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\tint mxn = 0;\r\n\tfor (R int i = 0; i <= cnt; i ++) mxn = std::max(mxn, dp[n][i]);\r\n\tprintf(\"%d\\n\", mxn);\r\n\tfor (R int i = 0; i <= cnt; i ++)\r\n\t\tif (dp[n][i] == mxn) czy[n][i] = 1;\r\n\t\r\n\tfor (R int i = n - 1; ~i; i --) {\r\n\t\tfor (R int j = 0; j <= cnt; j ++) {\r\n\t\t\tfor (R int k = 0; k < 10; k ++) {\r\n\t\t\t\tR int cur = son[j][k];\r\n\t\t\t\tif ((dp[i][j] + tp[cur][n - i - 1] == dp[i + 1][cur]) && czy[i + 1][cur]) {\r\n\t\t\t\t\tczy[i][j] = 1; break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\r\n\t} \r\n\tint now = 0;\r\n\t\r\n\tfor (R int i = 0; i < n; i ++) {\r\n\t\tfor (R int j = 0; j < 10; j ++) {\r\n\t\t\tint cur = son[now][j];\r\n\t\t\tif (czy[i + 1][cur] && dp[i][now] + tp[cur][n - i - 1] == dp[i + 1][cur]) {\r\n\t\t\t\tnow = son[now][j]; \r\n\t\t\t\tcout << (char)(j + '0');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} \r\n\t}\r\n\treturn 0;\r\n} "
}