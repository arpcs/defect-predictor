{
    "id": 25623287,
    "contestId": 771,
    "creationTimeSeconds": 1489857901,
    "relativeTimeSeconds": 6601,
    "problem": {
        "contestId": 771,
        "index": "B",
        "name": "Bear and Different Names",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 771,
        "members": [
            {
                "handle": "slimshura"
            },
            {
                "handle": "Simon23Rus"
            }
        ],
        "participantType": "CONTESTANT",
        "teamId": 28602,
        "teamName": "JI_A_JI_A_K_u",
        "ghost": false,
        "room": 7,
        "startTimeSeconds": 1489851300
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 59,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 2048000,
    "source": "//\n//  main.cpp\n//  Round1\n//\n//  Created by Simon Fedotov on 18.03.17.\n//  Copyright \u00a9 2017 Simon23Rus. All rights reserved.\n//\n\n#include <iostream>\n#include <vector>\n#include <string>\n\nusing namespace std;\n\nstring from_int (int t) {\n    string ans;\n    ans.push_back(char(int('A') + t/100));\n    ans.push_back(char(int('a') + (t/10)%10));\n    ans.push_back(char(int('a') + t%10));\n    return ans;\n}\n\n\nint main() {\n    int n, k;\n    cin >> n >> k;\n    int cur_num = 0;\n    vector <string> names;\n    for (int i = 0; i < k - 1; ++i) {\n        names.push_back(from_int(cur_num));\n        ++cur_num;\n    }\n    vector <bool> ans;\n    for (int i =0; i < n-k+1; ++i) {\n        string tmp;\n        cin >> tmp;\n        if (tmp == \"YES\") {\n            ans.push_back(true);\n        } else {\n            ans.push_back(false);\n        }\n    }\n    int counter = 0;\n    for (int i = 0; i< n - k +1; ++i) {\n        if (ans[i] == true || counter > 0) {\n            names.push_back(from_int(cur_num));\n            ++cur_num;\n            if (counter >0) {\n                --counter;\n            }\n        } else {\n            int j = i;\n            while (j < n-k+1 && ans[j] == false) {\n                ++j;\n            }\n            if (j == n-k+1) {\n                names.push_back(names.back());\n            } else {\n                int dist = j - i;\n                dist = k - dist;\n                if (dist <= 0) {\n                    names.push_back(names.back());\n                } else {\n                    counter = k - dist;\n                    names.push_back(names[(k - 1) + i -dist]);\n                }\n            }\n        }\n    }\n    for (int i = 0; i + 1 < names.size(); ++i) {\n        cout << names[i] <<  \" \";\n    }\n    cout<<names.back()<<\"\\n\";\n    return 0;\n}\n"
}