{
    "id": 216048876,
    "contestId": 771,
    "creationTimeSeconds": 1690525141,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 771,
        "index": "B",
        "name": "Bear and Different Names",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 771,
        "members": [
            {
                "handle": "ivls"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1489851300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n, k;\r\n    cin >> n >> k;\r\n    string f[n + 10];\r\n    for (int i = 1; i <= n - k + 1; i++) {\r\n        cin >> f[i];\r\n    }\r\n    vector<string> names;\r\n    for (char a = 'A'; a <= 'Z'; a++) {\r\n        for (char b = 'a'; b <= 'z'; b++) {\r\n                string s = \"\";\r\n                s += a;\r\n                s += b;\r\n                names.push_back(s);\r\n        }\r\n    }\r\n    string ans[n + 10];\r\n    for (int i = 1; i < k; i++) {\r\n        ans[i] = names[i];\r\n    }\r\n    for (int i = 1; i <= n - k + 1; i++) {\r\n        if (f[i] == \"NO\") {\r\n            ans[i + k - 1] = ans[i];\r\n        }\r\n        else {\r\n            set<string> inBlock;\r\n            for (int j = i; j < n + k - 1; j++) {\r\n                inBlock.insert(ans[j]);\r\n            }\r\n            for (int j = 1; ; j++) {\r\n                if (!inBlock.count(names[j])) {\r\n                        ans[i + k - 1] = names[j];\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    for (int i = 1; i <= n; i++) {\r\n        cout << ans[i] << ' ';\r\n    }\r\n}"
}