{
    "id": 184350629,
    "contestId": 771,
    "creationTimeSeconds": 1670514227,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 771,
        "index": "B",
        "name": "Bear and Different Names",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 771,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1489851300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 59,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "// Author:Md. Liad Hossain\n// KUET ECE 2K18\n\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp> // Common file\n#include <ext/pb_ds/tree_policy.hpp>\n// #pragma GCC optimize(\"O3,unroll-loops\")\n// #pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\nusing namespace std;\nusing namespace __gnu_pbds;\n// void __print(int x) { cout << x; }\n// void __print(long long x) { cout << x; }\n// void __print(double x) { cout << x; }\n// void __print(long double x) { cout << x; }\n// void __print(char x) { cout << '\\'' << x << '\\''; }\n// void __print(const char *x) { cout << '\\\"' << x << '\\\"'; }\n// void __print(const string &x) { cout << '\\\"' << x << '\\\"'; }\n// void __print(bool x) { cout << (x ? \"True\" : \"False\"); }\n// template <typename T, typename V>\n// void __print(const pair<T, V> &x){cout << '{';__print(x.first);cout << ',';__print(x.second);cout << '}';}\n// template <typename T>\n// void __print(const T &x){int f = 0;cout << '{';for (auto &i : x)cout << (f++ ? \",\" : \"\"), __print(i);cout << \"}\";}\n// void _print() { cout << \"]\\n\"; }\n// template <typename T, typename... V>\n// void _print(T t, V... v){__print(t);if (sizeof...(v))cout << \", \";_print(v...);}\n// #ifndef ONLINE_JUDGE\n// #define debug(x...)cout << \"[\" << #x << \"] = [\"; _print(x)\n// #else\n// #define debug(x...)\n// #endif\n#define int long long int\n#define nl '\\n'\n#define ff first\n#define ss second\n#define pf push_front\n#define pb push_back\n#define eb emplace_back\n#define pof pop_front\n#define pob pop_back\n#define fbo find_by_order\n#define ook order_of_key\n#define FOR(i, n) for (int i = 0; i < n; i++)\n#define F0R(j, n) for (int j = 1; j <= n; j++)\n#define ROF(i, n) for (int i = n - 1; i >= 0; i--)\n#define R0F(i, n) for (int i = n; i >= 1; i--)\n#define all(v) v.begin(), v.end()\n#define lb lower_bound\n#define ub upper_bound\n#define yes cout << \"YES\" << nl\n#define no cout << \"NO\" << nl\n#define mod 1000000007\n#define MOD 998244353\n#define setbit __builtin_popcount\n#define elif else if\n#define mem0(a) memset(a, 0, sizeof(a))\n#define mem1(a) memset(a, -1, sizeof(a))\n#define inf 9000000000000000000\n#define eps 1e-9\n//#define pi 2.0 * acos(0.0)\ntemplate <class T>\nusing oset = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\n// knight moves...\n// int dx[]={-1,-2,-2,-1,1,2,2,1};\n// int dy[]={-2,-1,1,2,2,1,-1,-2};\n\n// grid moves without diagonal\n// int dx[]={0,-1,0,1};\n// int dy[]={-1,0,1,0};\n\n//only all diagonal moves\n// int dx[]={-1,-1,1,1};\n// int dy[]={-1,1,1,-1};\n\n// grid moves with diagonal\n// int dx[]={0,-1,-1,-1,0,1,1,1};\n// int dy[]={-1,-1,0,1,1,1,0,-1};\n\n//*************************Code Begins Here*************************//\n\n\n\nvoid solve(){\n    int n,k;\n    cin>>n>>k;\n    vector<string>name;\n    FOR(i,26){\n        char ch=i+'A';\n        string s;\n        s+=ch;\n        name.pb(s);\n    }\n    FOR(i,26){\n        string s=\"A\";\n        char ch=i+'a';\n        s+=ch;\n        name.pb(s);\n    }\n\n    FOR(i,26){\n        string s=\"B\";\n        char ch=i+'a';\n        s+=ch;\n        name.pb(s);\n    }\n\n    //cout<<name.size()<<nl;\n    vector<string>res;\n    int id=0;\n    FOR(i,k-1){\n        res.pb(name[id]);\n        id++;\n    }\n\n    FOR(i,n-k+1){\n        string s;\n        cin>>s;\n        if(s==\"YES\"){\n            res.pb(name[id++]);\n        }\n        else res.pb(res[i]);\n    }\n\n    FOR(i,res.size()){\n        cout<<res[i]<<' ';\n    }\n}   \n\n\nsigned main()\n{\n#ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"r\",stdin);\n    freopen(\"output.txt\", \"w\",stdout);\n#endif\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t = 1;\n    //cin >> t;\n    while (t--)\n    {\n        solve();\n    }\n    return 0;\n}\n\n\t\t      \t\t   \t  \t     \t  \t \t  \t"
}