{
    "id": 81707500,
    "contestId": 771,
    "creationTimeSeconds": 1590671055,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 771,
        "index": "B",
        "name": "Bear and Different Names",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 771,
        "members": [
            {
                "handle": "Dumped"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1489851300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define vi vector<int>\r\n#define all(v) v.begin(),v.end()\r\n#define ll long long int\r\n#define  IOS    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\r\nconst ll MOD=1e9+7;\r\n\r\nvoid solve(){\r\n   int n,k;\r\n   cin >> n >> k;\r\n   int k1 = n-k+1;\r\n   vector<string> v(k1);\r\n   for(int i=0;i<k1;i++)cin >> v[i];\r\n   vector<string> ans(0);\r\n   vector<string> dictionary(900);\r\n   int o =0;\r\n   for(int i=0;i<26;i++){\r\n     for(int j=0;j<26;j++){\r\n      string t = string(1,'A'+i);\r\n      t += string(1,'a'+j);\r\n      dictionary[o++]=t;\r\n    }\r\n   }\r\n   int cnt=0;\r\n   for(int i=0;i<k-1;i++){\r\n     ans.push_back(dic[cnt++]);\r\n   }\r\n   if(v[0]==\"NO\")ans.push_back(dic[0]);\r\n   else ans.push_back(dic[cnt++]);\r\n   int j = 1;\r\n   for(int i = k;i<n&&j<k1;j++,i++){\r\n      if(v[j]==\"YES\"){\r\n          ans.push_back(dic[cnt++]);\r\n      }\r\n      else ans.push_back(ans[i-k+1]);\r\n   }\r\n   for(string x:ans)cout << x <<' ';\r\n }\r\n\r\n\r\nint main(){\r\n  IOS\r\n     solve();\r\n}\r\n// integer overflow\r\n// remember to clear visited array\r\n// take input as vector<string> while using grid\r\n"
}