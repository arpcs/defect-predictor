{
    "id": 58568929,
    "contestId": 771,
    "creationTimeSeconds": 1565514669,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 771,
        "index": "B",
        "name": "Bear and Different Names",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 771,
        "members": [
            {
                "handle": "noob_learner"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1489851300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n/* This solution is valid but is very naive \r\nlack of graph theory hurted us\r\nint main()\r\n{\r\n\tint n,m;cin>>n>>m;\r\n\tvector<unordered_set<int>> v(n+1);\r\n\tint j,k;\r\n\tfor(int i=0;i<m;++i)\r\n\t{\r\n\t\tcin>>j>>k;\r\n\t\tv[j].insert(k);v[k].insert(j);\r\n\t}\r\n\t//int visited[n+1];\r\n\r\n\tbool flag=true;\r\n\tfor(int i=1;i<=n;++i)\r\n\t{\r\n\t\tif(v[i].size()>0)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tfor(auto j=v[i].begin();j!=v[i].end();++j)\r\n\t\t\t{\r\n\t\t\t\tfor(auto k=v[*j].begin();k!=v[*j].end();++k)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(*k!=i && v[i].count(*k)>0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tflag=true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(*k!=i && v[i].count(*k)==0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcout<<\"NO\";return 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif(flag){cout<<\"YES\";return 0;}\r\n}*/\r\nvoid dfs(int a,int & vert, int & edge,bool *vis,vector<vector<int>> v1)\r\n{\r\n\tvert++;\r\n\tedge++;\r\n\t(*vis)[a]=true;\r\n\tfor(int b:v1[a])\r\n\t{\r\n\t\tif(!vis[b])\r\n\t\t{\r\n\t\t\tdfs(b,vert,edge,vis,v1);\r\n\t\t}\r\n\t}\r\n}\r\nint main()\r\n{\r\n\t\r\n\tint n,m;cin>>n>>m;\r\n\tvector<vector<int>> v(n+1);\r\n\tbool vis[n+1];\r\n\tmemset(vis,0,n+1);\r\n\tint a,b;\r\n\tfor(int i=0;i<m;++i)\r\n\t{\r\n\t\tcin>>a>>b;\r\n\t\tv[a].push_back(b)\r\n\t\tv[b].push_back(a);\r\n\t}\r\n\tfor(int i=1;i<=n;++i)\r\n\t{\r\n\t\tif(!vis[i])\r\n\t\t{\r\n\t\t\tint vert=0,edge=0;\r\n\t\t\tdfs(i,vert,edge,vis,v)\r\n\t\t\tif(edge!=(long long)((vert*(vert-1))/2) )\r\n\t\t\t{\r\n\t\t\t\tcout<<\"NO\";return 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcout<<\"YES\";return 0;\r\n}"
}