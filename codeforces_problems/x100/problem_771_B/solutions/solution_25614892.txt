{
    "id": 25614892,
    "contestId": 771,
    "creationTimeSeconds": 1489853935,
    "relativeTimeSeconds": 2635,
    "problem": {
        "contestId": 771,
        "index": "B",
        "name": "Bear and Different Names",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 771,
        "members": [
            {
                "handle": "Koala13"
            },
            {
                "handle": "Darui99"
            }
        ],
        "participantType": "CONTESTANT",
        "teamId": 27094,
        "teamName": "\u042f \u043f\u043e\u0434\u0436\u0438\u0433\u0430\u044e \u0434\u0436\u043e\u0439\u043d\u0442, \u043e\u043d \u043e\u0441\u0432\u0435\u0449\u0430\u0435\u0442 \u043f\u0443\u0442\u044c \u0432 \u041a\u043e\u043d\u043e\u0445\u0443",
        "ghost": false,
        "room": 7,
        "startTimeSeconds": 1489851300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 59,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 2048000,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <math.h>\r\n#include <stdio.h>\r\n#include <set>\r\n#include <map>\r\n#include <string>\r\n#include <queue>\r\n#include <algorithm>\r\n#include <bitset>\r\n#include <ctime>\r\n#include <stack>\r\n#include <deque>\r\n#include <limits.h>\r\n\r\nusing namespace std;\r\n\r\n#define FILE \"name\"\r\n#define mp make_pair\r\n#define pb push_back      \r\n#define F first\r\n#define S second\r\n#define forn(i, n) for (ll i = 0 ; (i) < (n) ; ++i)\r\n#define all(arr) arr.begin(), arr.end()\r\n#define lucky 13373228\r\n#define TL 0\r\n\r\ntypedef long long ll;\r\ntypedef double dbl;\r\n\r\nset<string> words;\r\nvoid gen() {\r\n\twhile (words.size() < 60) {\r\n\t\tint len = rand() % 9 + 1;\r\n\t\tstring cur = \"A\";\r\n\t\tfor (int i = 1; i < len; ++i) {\r\n\t\t\tchar c = (char)(rand() % 26 + 97);\r\n\t\t\tcur += c;\r\n\t\t}\r\n\t\twords.insert(cur);\r\n\t}\r\n}\r\n\r\nint main() {\r\n#ifdef SOLVE\r\n\tfreopen(\"input.txt\", \"r\", stdin);\r\n\t//freopen(\"output.txt\", \"w\", stdout);\r\n#else\r\n\t//freopen(FILE\".in\", \"r\", stdin);\r\n\t//freopen(FILE\".out\", \"w\", stdout);\r\n#endif\r\n\r\n\tios_base::sync_with_stdio(false);\r\n\tsrand(time(NULL));\r\n\r\n\tgen();\r\n\tint n, k;\r\n\tset<string>::iterator it = words.begin();\r\n\tcin >> n >> k;\r\n\tvector <string> arr(n - k + 1);\r\n\tforn(i, n - k + 1) {\r\n\t\tcin >> arr[i];\r\n\t}\r\n\tvector <string> ans(n);\r\n\tforn(i, k - 1) {\r\n\t\tans[i] = *it;\r\n\t\t++it;\r\n\t}\r\n\tfor (int i = k - 1; i < n; ++i) {\r\n\t\tif (arr[i - k + 1] == \"YES\") {\r\n\t\t\tans[i] = *it;\r\n\t\t\t++it;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tans[i] = ans[i - k + 1];\r\n\t\t}\r\n\t}\r\n\tforn(i, n) {\r\n\t\tcout << ans[i] << \" \";\r\n\t}\r\n\r\n#if TL\r\n\tcerr << \"TIME = \" << 1. * clock() / CLOCKS_PER_SEC << \"\\n\";\r\n#endif\r\n\r\n\treturn 0;\r\n}"
}