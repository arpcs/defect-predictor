{
    "id": 115100575,
    "contestId": 771,
    "creationTimeSeconds": 1620113581,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 771,
        "index": "B",
        "name": "Bear and Different Names",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 771,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1489851300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#define _for(i, a, b) for(int i = a; i < b; i++)\n#define _rep(i, a, b) for(int i = a; i <= b; i++)\n#define x first\n#define y second\nusing namespace std;\n\ntypedef pair<int, int> PII;\ntypedef long long LL;\n\nconst int MAXN = 1e5 + 10;\n\nint n, k;\n\nvector<string> ans, v;\n\nstring s, buf;\n\nint ys, ns;\n\nint main() {\n    cin >> n >> k;\n    buf = \"a\";\n    _for(i, 0, k) {\n        v.push_back(buf);\n        buf += 'a';\n    }\n    _for(i, 0, k - 1) ans.push_back(v[i]);\n    ns = 0, ys = k - 1;\n    while(cin >> s) {\n        if(s == \"YES\") {\n            ans.push_back(v[ys]);\n            ns = k - ys;\n            ys = (ys + 1) % k;\n        } else {\n            ans.push_back(v[ns]);\n            ns = (ns + 1) % k;\n        }\n    }\n    for(auto u : ans) cout << u << ' ';\n    // system(\"pause\");\n    // system(\"pasue\");\n    return 0;\n}\n\t  \t     \t \t\t \t\t\t   \t\t\t   \t   \t",
    "defect_evaluation_gpt4_v4": {
        "good_solution": 0,
        "wrong_solution": 95,
        "compilation_error": 0,
        "runtime_error": 5
    },
    "defect_evaluation_v4": {
        "good solution": 40,
        "wrong solution": 40,
        "compilation error": 20,
        "runtime error": 0
    },
    "category_evaluation": {
        "mathematics": 30,
        "dynamic programming": 10,
        "bit manipulation": 5,
        "greedy": 15,
        "brute force": 15,
        "graphs": 0,
        "sortings": 10,
        "search": 0,
        "trees": 0,
        "strings": 10,
        "number theory": 0,
        "combinatorics": 5,
        "two pointers": 0,
        "geometry": 0,
        "shortest paths": 0,
        "divide and conquer": 0,
        "probabilities": 0,
        "data structures": 10,
        "game theory": 0,
        "2d, 3d": 0,
        "recursive": 0,
        "well-commented": 0,
        "self-documenting": 10,
        "complex": 10,
        "readable": 10,
        "well-named": 10,
        "efficient": 10,
        "reusable": 0,
        "documented": 0,
        "good error-handling": 0,
        "good solution": 0,
        "compilation error": 0,
        "runtime error": 0
    }
}