{
    "id": 112314340,
    "contestId": 771,
    "creationTimeSeconds": 1617894061,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 771,
        "index": "B",
        "name": "Bear and Different Names",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 771,
        "members": [
            {
                "handle": "LIGHT_SUN"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1489851300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define _for(i, a, b) for (int i = (a); i < (b); ++i)\r\n#define _rfor(i, a, b) for(int i = (a); i > (b); --i)\r\n#define _rep(i, a, b) for (int i = (a); i <= (b); ++i)\r\n#define _rrep(i, a, b) for(int i = (a); i >= (b); --i)\r\n#define _toTransform(a,b) ss << (a);ss >> (b);ss.clear()\r\n#define debug(x) cout << \"DEBUG: \" << (x) << endl\r\n#define reset(a,b) std::memset((a),(b),sizeof(a))\r\n#define ll long long\r\n#define mp make_pair\r\n#define pii pair<int,int>\r\n#define inf (ll)1e18\r\nusing namespace std;\r\nstringstream ss;\r\n\r\nvoid undefined(string x = \"\u6a21\u677f\u9700\u8981\u8865\u5145\") {cout <<\"\u6a21\u677f\u8865\u5145\u4fe1\u606f: \"<< x << endl;}\r\nll gcd(ll a, ll b) { return b ? gcd(b, a % b) : a; }\r\nll lcm(ll a, ll b) { return a * b / gcd(a, b); }\r\n\r\nstring ans[60];\r\n\r\nint main(){\r\n  ios::sync_with_stdio(0);\t//\u89e3\u51b3c++\u8f93\u5165\u8f93\u51fa\u6d41\u88ab\u5361\u95ee\u9898\r\n  cin.tie(0);\r\n  cout.tie(0);\r\n  int n,k;\r\n  cin >> n >> k;\r\n  int len = 1;\r\n  char cc = 'a';\r\n  _rep(i,1,n){\r\n    if(len > 10){\r\n      len = 1;\r\n      cc += 1;\r\n    }\r\n    string temp = \"\";\r\n    _rep(j,1,len){\r\n      temp += cc;\r\n    }\r\n    ans[i] = temp;\r\n    len ++;\r\n  }\r\n\r\n  _rep(i,1,n){\r\n    ans[i][0] += ('A' - 'a');\r\n  }\r\n  _rep(i,1,n-k+1){\r\n    string temp;\r\n    cin >> temp;\r\n    if(temp == \"NO\"){\r\n      ans[i] = ans[i+k-1];\r\n    }\r\n  }\r\n\r\n  _rep(i,1,n){\r\n    cout << ans[i] << \" \";\r\n  }\r\n  cout << endl;\r\n\r\n  return 0;\r\n}",
    "defect_evaluation_gpt4_v4": {
        "good_solution": 70,
        "wrong_solution": 25,
        "compilation_error": 5,
        "runtime_error": 0
    },
    "defect_evaluation_v4": {
        "good solution": 90,
        "wrong solution": 10,
        "compilation error": 0,
        "runtime error": 0
    },
    "category_evaluation": {
        "mathematics": 5,
        "dynamic programming": 2,
        "bit manipulation": 0,
        "greedy": 5,
        "brute force": 20,
        "graphs": 0,
        "sortings": 5,
        "search": 5,
        "trees": 0,
        "strings": 0,
        "number theory": 0,
        "combinatorics": 0,
        "two pointers": 0,
        "geometry": 0,
        "shortest paths": 0,
        "divide and conquer": 0,
        "probabilities": 0,
        "data structures": 5,
        "game theory": 0,
        "2d, 3d": 0,
        "recursive": 0,
        "well-commented": 15,
        "self-documenting": 10,
        "complex": 15,
        "readable": 10,
        "well-named": 15,
        "efficient": 5,
        "reusable": 5,
        "documented": 10,
        "good error-handling": 5,
        "good solution": 10,
        "compilation error": 0,
        "runtime error": 0
    }
}