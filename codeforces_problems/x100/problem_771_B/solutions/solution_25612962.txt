{
    "id": 25612962,
    "contestId": 771,
    "creationTimeSeconds": 1489853255,
    "relativeTimeSeconds": 1955,
    "problem": {
        "contestId": 771,
        "index": "B",
        "name": "Bear and Different Names",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 771,
        "members": [
            {
                "handle": "kodek"
            },
            {
                "handle": "bitcom"
            }
        ],
        "participantType": "CONTESTANT",
        "teamId": 28712,
        "teamName": "\u30c4",
        "ghost": false,
        "room": 5,
        "startTimeSeconds": 1489851300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1945600,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nstring name_counter = \"abcdefgh\";\n\nstring next_name() {\n    next_permutation(name_counter.begin(), name_counter.end());\n    return name_counter;\n}\n\nint main() {\n    int n, k;\n    cin >> n >> k;\n\n    vector<char> squads(n - k + 1);\n    for (int i = 0; i < n - k + 1; i++) {\n        string s;\n        cin >> s;\n        squads[i] = s == \"YES\";\n    }\n\n    vector<string> names(n, \"\");\n\n    for (int i = 0; i < int(squads.size()); i++) {\n        if (squads[i]) {\n            for (int j = i; j < i + k; j++) {\n                if (names[j] == \"\") {\n                    names[j] = next_name();\n                }\n            }\n        }\n    }\n\n    /* for (int i = 0; i < int(squads.size()); i++) { */\n    /*     if (!squads[i]) { */\n    /*         string name = names[i]; */\n    /*         if (name == \"\") name = names[i + k - 1]; */\n    /*         if (name == \"\") name = next_name(); */\n\n    /*         for (int j = i; j < i + k; j++) { */\n    /*             if (names[j] == \"\") { */\n    /*                 names[j] = name; */\n    /*             } */\n    /*         } */\n    /*     } */\n    /* } */\n\n    string name_to_right = \"\";\n    for (int i = n - 1; i >= 0; i--) {\n        if (names[i] == \"\") {\n            names[i] = name_to_right;\n        } else {\n            name_to_right = names[i];\n        }\n    }\n\n    string name_to_left = \"\";\n    for (int i = 0; i < n; i++) {\n        if (names[i] == \"\") {\n            names[i] = name_to_left;\n        } else {\n            name_to_left = names[i];\n        }\n    }\n\n    string name_for_all = next_name();\n    for (int i = 0; i < n; i++) {\n        if (names[i] == \"\") {\n            names[i] = name_for_all;\n        }\n    }\n\n    for (string& s: names) {\n        s[0] = toupper(s[0]);\n    }\n\n    for (string s: names) {\n        cout << s << ' ';\n    }\n\n    cout << endl;\n}\n"
}