{
    "id": 212190873,
    "contestId": 1822,
    "creationTimeSeconds": 1688545140,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "Memo_Century"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 217,
    "memoryConsumedBytes": 5324800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nusing loint = long long;\r\n\r\nvoid solve(){\r\n\tint n;cin>>n;\r\n\tvector<int>a(n);\r\n\tmap<int,int>cnt;\r\n\tfor(int i = 0;i<n;i++){\r\n\t\tcin>>a[i];\r\n\t\tcnt[a[i]]++;\r\n\t}\r\n\tint mx = *max_element(a.begin(), a.end());\r\n\tint mxb = 1E6;\r\n\tloint aws = 0;\r\n\tfor(auto [aj,y]:cnt){\r\n\t\taws+=1LL*y*(y-1)*(y-2);\r\n\t\tif(aj>mxb){\r\n\t\t\tfor(int b = 2;1LL*b*aj<=mx;b++){\r\n\t\t\t\tif(aj%b!=0)continue;\r\n\t\t\t\tif(cnt.count(aj/b)&&cnt.count(aj*b))\r\n\t\t\t\t\taws+=1LL*y*cnt[aj/b]*cnt[aj*b];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvector<int>divs;\r\n\t\t\tfor(int b = 2;b*b<=aj;b++){\r\n\t\t\t\tif(aj%b!=0)continue;\r\n\t\t\t\tdivs.push_back(b);\r\n\t\t\t\tif(b*b!=aj)divs.push_back(aj/b);\r\n\t\t\t}\r\n\t\t\tif(aj!=1)divs.push_back(aj);\r\n\t\t\tfor(auto d:divs){\r\n\t\t\t\tif(cnt.count(aj/d)&&cnt.count(1LL*aj*d))\r\n\t\t\t\t\taws+=1LL*y*cnt[aj/d]*cnt[1LL*aj*d];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcout<<aws<<\"\\n\";\r\n}\r\n\r\nint main(){\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(nullptr);\r\n\tint t;cin>>t;\r\n\twhile(t--){\r\n\t\tsolve();\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n"
}