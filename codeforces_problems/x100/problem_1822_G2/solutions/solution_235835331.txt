{
    "id": 235835331,
    "contestId": 1822,
    "creationTimeSeconds": 1701774913,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "andvikpro"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 358,
    "memoryConsumedBytes": 24780800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int M = 1e6;\r\nconst int oo = 1e9;\r\nconst int SQRT = 31623;\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n    vector < int > a(n);\r\n    unordered_map < int , long long > cnt;\r\n    for (int i = 0; i < n; i++) { cin >> a[i]; cnt[a[i]]++; }\r\n    sort(begin(a),end(a));\r\n    a.erase(unique(begin(a),end(a)),end(a));\r\n    long long ans = 0;\r\n    n = a.size();\r\n    for (int i = 0; i < n; i++) ans += 1LL * cnt[a[i]] * (cnt[a[i]]-1) * (cnt[a[i]]-2);\r\n    for (int i = 0; i < n; i++) {\r\n        if (a[i] < M) {\r\n            if (a[i] < SQRT && a[i] != 1) ans += cnt[a[i]] * cnt[1] * cnt[a[i]*a[i]];\r\n            for (int b = 2; b * b <= a[i]; b++) if (a[i] % b == 0) {\r\n                ans += 1LL * cnt[a[i]] * cnt[a[i]/b] * cnt[a[i]*b];\r\n                if (b * b != a[i]) {\r\n                    b = a[i] / b;\r\n                    ans += 1LL * cnt[a[i]] * cnt[a[i]/b] * cnt[a[i]*b];\r\n                    b = a[i] / b;\r\n                }\r\n            }\r\n        } else {\r\n            for (int b = 2; b <= oo/a[i] + 1; b++) if (a[i] % b == 0) {\r\n                ans += 1LL * cnt[a[i]] * cnt[a[i]/b] * cnt[a[i]*b];\r\n            }\r\n        }\r\n    }\r\n    printf(\"%I64d\\n\", ans);\r\n}\r\n\r\nmain() {\r\n    ios_base::sync_with_stdio(0); cin.tie(0);\r\n    int n;\r\n    cin >> n;\r\n    while (n--) {\r\n        solve();\r\n    }\r\n\r\n}\r\n"
}