{
    "id": 213498097,
    "contestId": 1822,
    "creationTimeSeconds": 1689161828,
    "relativeTimeSeconds": 7208,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "TraianDanciu"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1689154620
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 5324800,
    "source": "#include <bits/stdc++.h>\r\n\r\n/// im dying(correct spelling?) here\r\n/// daca asta merge ma las de fifa(rip) 22(si imi iau 23)\r\n\r\nusing namespace std;\r\n\r\n#ifdef TEST\r\n    ifstream fin(\"input.txt\");\r\n    ofstream fout(\"output.txt\");\r\n    #define cin fin \r\n    #define cout fout\r\n#endif\r\n\r\nconst int NMAX = 2e5;\r\n\r\nclass Query {\r\n    private:\r\n\t\tint a[NMAX+5], n;\r\n\t\tmap<int, int> freq;\r\n\t\t\r\n        void read() {\r\n            cin>>n;\r\n            for (int i = 1; i <= n; i++)\r\n                cin>>a[i], freq[a[i]]++;\r\n        }\r\n\t\t\r\n        void solve() {\r\n            long long ans = 0;\r\n            for (int i = 1; i <= n; i++)\r\n                ans += 1ll*(freq[a[i]]-1)*(freq[a[i]]-2);\r\n            for (auto it : freq) {\r\n                int number = it.first, frequency = it.second;\r\n                if (number > 1e6)\r\n                    for (int b = 2; 1ll*b*number <= 1e9; b++)\r\n                        if (number%b == 0 && freq.find(number/b) != freq.end() \r\n                            && freq.find(number*b) != freq.end())\r\n                            ans += 1ll*freq[number/b]*freq[number*b]*frequency;\r\n                        else;\r\n                else {\r\n                    for (int b = 2; 1ll*b*b <= number; b++)\r\n                        if (number%b == 0) {\r\n                            if (1ll*number*b <= 1e9 && freq.find(number/b) != freq.end()\r\n                                && freq.find(number*b) != freq.end())\r\n                                ans += 1ll*freq[number/b]*freq[number*b]*frequency;\r\n                            if (1ll*b*b < number)\r\n                                if (1ll*number/b*number <= 1e9 && freq.find(b) != freq.end()\r\n                                    && freq.find(number/b*number) != freq.end())\r\n                                    ans += 1ll*freq[b]*freq[number/b*number]*frequency;\r\n                        }\r\n                    if (number > 1 && 1ll*number*number <= 1e9 && freq.find(1) != freq.end()\r\n                        && freq.find(number*number) != freq.end())\r\n                        ans += freq[1]*freq[number*number]*frequency;\r\n                }\r\n                \r\n            }\r\n            cout<<ans<<'\\n';\r\n        }\r\n    \r\n    public:\r\n        Query() {\r\n            read(), solve();\r\n        }\r\n};\r\n\r\nsigned main() {\r\n    ios_base :: sync_with_stdio(false);\r\n    cin.tie(nullptr), cout.tie(nullptr);\r\n\t\r\n    int t;\r\n    cin>>t;\r\n    while (t--)\r\n\t\tQuery query;\r\n\t\r\n    return 0;\r\n}"
}