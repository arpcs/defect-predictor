{
    "id": 223290315,
    "contestId": 1822,
    "creationTimeSeconds": 1694658095,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "JCS"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 1372,
    "memoryConsumedBytes": 8192000,
    "source": "#include <cstdio>\r\n#include <iostream>\r\n#include <cstring>\r\n#include <algorithm>\r\n#include <map>\r\n#include <bitset>\r\n#include <stack>\r\n#include <vector>\r\n#include <cmath>\r\n#include <unordered_map>\r\n#include <queue>\r\n#include <set>\r\n#define forn(i,aa,bb) for(int i=aa;i<=bb;++i)\r\n#define LL long long \r\nusing namespace std;\r\nconst LL mod=998244353;\r\nconst int N=2e5+5;\r\nint n;\r\nLL a[N];\r\nmap <int,int> cnt;\r\nint find(int x){\r\n    int l=0,r=1e3;\r\n    while (l<r){\r\n        int mid=(l+r+1)>>1;\r\n        if (mid*mid*mid<=x) l=mid;\r\n        else r=mid-1;\r\n    }\r\n    return l;\r\n}\r\nint main(){\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0); \r\n    int T;\r\n    cin>>T;\r\n    while (T--){\r\n        cin>>n;\r\n        LL maxm=0;\r\n        forn(i,1,n){\r\n            cin>>a[i];\r\n            maxm=max(maxm,a[i]);\r\n            cnt[a[i]]++;\r\n        }\r\n        sort(a+1,a+n+1);\r\n        int M=1e6;\r\n\t\tLL ans=0;\r\n        forn(i,1,n){\r\n            LL now=cnt[a[i]];\r\n            if (now>=3) {\r\n                ans+=(LL)now*(now-1)*(now-2);\r\n            }\r\n            if (a[i]<=M){\r\n                LL k=sqrt(a[i]);\r\n                LL num;\r\n                num=(LL)a[i]*a[i];\r\n                if (num<=maxm && a[i]!=1 && cnt.find(1)!=cnt.end() && cnt.find(num)!=cnt.end()) ans+=(LL)cnt[1]*cnt[num]*now;\r\n                forn(j,2,k){\r\n                    if (a[i]%j==0){\r\n                        num=(LL)a[i]/j*a[i];\r\n                        if (num<=maxm && cnt.find(j)!=cnt.end() && cnt.find(num)!=cnt.end()) ans+=(LL)cnt[j]*cnt[num]*now;\r\n                        if (a[i]!=j*j) {\r\n                            num=(LL)j*a[i];\r\n                            if (num<=maxm && cnt.find(a[i]/j)!=cnt.end() && cnt.find(num)!=cnt.end()) ans+=(LL)cnt[a[i]/j]*cnt[num]*now;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                LL k=maxm/a[i];\r\n                forn(j,2,k){\r\n                    if (a[i]%j==0){\r\n                        if ((LL)a[i]*j<=maxm && cnt.find(a[i]/j)!=cnt.end() && cnt.find(a[i]*j)!=cnt.end()) ans+=(LL)cnt[a[i]/j]*cnt[a[i]*j]*now;\r\n                    }\r\n                }\r\n            }\r\n            while (i+1<=n && a[i+1]==a[i]) i++;\r\n        }\r\n        cout<<ans<<'\\n';\r\n        cnt.clear();\r\n    }\r\n}"
}