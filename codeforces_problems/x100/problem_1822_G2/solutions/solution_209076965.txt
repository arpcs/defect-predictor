{
    "id": 209076965,
    "contestId": 1822,
    "creationTimeSeconds": 1686302705,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "ilefbenrahma"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 1185,
    "memoryConsumedBytes": 9830400,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\nusing namespace std;\r\nconst int N = 400010;\r\nconst int M = 200000;\r\nconst int MOD = 998244353;\r\nconst int INF = 1e9;\r\nint n, t, a[N];\r\nint len[N];\r\nvoid solve() {\r\n    cin >> n;\r\n    for (int i = 1; i <= n; i++) {\r\n    cin >> a[i];}\r\n    sort(a + 1, a + n + 1);\r\n    map <int, int> cnt;\r\n    for (int i = 1; i <= n; i++){\r\n         cnt[a[i]]++;}\r\n    ll ans = 0;\r\n    for (auto p : cnt) {\r\n        ll tmp = p.second;\r\n        ans += 1ll * tmp * (tmp - 1) * (tmp - 2);\r\n    }\r\n    int prv = 1;\r\n    for (int i = 1; i <= n; i++) {\r\n        if (i == n || a[i] != a[i + 1]) {\r\n            for (int j = prv; j <= i; j++) {\r\n            len[j] = i - prv + 1;}\r\n            prv = i + 1;\r\n        }\r\n    }\r\n    for (int b = 2; b <= 1000; b++) {\r\n        int i = 0, k = 2;\r\n        for (int j = 1; j <= n; j++) {\r\n            if (a[j] % b != 0)\r\n            {continue;}\r\n            while (i < j && a[i] * b < a[j]) {\r\n            i++;}\r\n            k = max(k, j + 1);\r\n            while (k <= n && a[k] < a[j] * b) {\r\n                k++;}\r\n            if (i < j && k <= n && a[i] * b == a[j] && a[j] * b == a[k]) {\r\n                    ans += 1ll * len[i] * len[k];\r\n            }\r\n        }\r\n    }\r\n    for (int i = 1; i <= n; i++) {\r\n        if (a[i] >= 1000) {\r\n            break;}\r\n        if (i > 1 && a[i] == a[i - 1]) {\r\n        continue;}\r\n        int k = i;\r\n        for (int j = i + 1; j <= n; j++) {\r\n            if (a[j] % a[i] != 0){\r\n                 continue;}\r\n            int b = a[j] / a[i];\r\n            if (b <= 1000) {\r\n                continue;}\r\n            k = max(k, j + 1);\r\n            while (k <= n && a[k] < a[j] * b)\r\n            {k++;}\r\n            if (k <= n && a[j] * b == a[k]){\r\n            ans += 1ll * len[i] * len[k];}\r\n        }\r\n    }\r\n    cout << ans << \"\\n\";\r\n}\r\n \r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    int T;\r\n    T = 1;\r\n    cin >> T;\r\n    while (T--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}