{
    "id": 235677824,
    "contestId": 1822,
    "creationTimeSeconds": 1701679249,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "takeuchi-masaki"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 1840,
    "memoryConsumedBytes": 6451200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\n#define all(x) x.begin(), x.end()\r\n#define rall(x) x.rbegin(), x.rend()\r\n#define rep(i, a, b) for (ll i = (a); i < (b); i++)\r\n\r\ntemplate<typename A, typename B> ostream& operator<<(ostream& os, const pair<A, B>& p) { return os << '(' << p.first << \", \" << p.second << ')'; }\r\ntemplate<typename T_container, typename T = typename enable_if<!is_same<T_container, string>::value, typename T_container::value_type>::type> ostream& operator<<(ostream& os, const T_container& v) { os << '{'; string sep; for (const T& x : v) os << sep << x, sep = \", \"; return os << '}'; }\r\nvoid dbg_out() {}\r\ntemplate<typename Head, typename... Tail> void dbg_out(Head H, Tail... T) { cout << H << \" \"; dbg_out(T...); }\r\n#ifndef ONLINE_JUDGE\r\n#define dbg(...) dbg_out(__VA_ARGS__), cout << \"(\" << #__VA_ARGS__ << \") [\" << __LINE__ << \"]\" << endl;\r\n#define pr(s) cout << s << endl;\r\n#else\r\n#define dbg(...)\r\n#define pr(s)\r\n#endif\r\n\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n    vector<ll> a(n);\r\n    for (ll& i : a) cin >> i;\r\n\r\n    sort(all(a));\r\n    vector<ll> b = a;\r\n    a.erase(unique(all(a)), a.end());\r\n    n = a.size();\r\n\r\n    vector<ll> cnt(n);\r\n    rep(i, 0, b.size()) {\r\n        int idxa = lower_bound(all(a), b[i]) - a.begin();\r\n        auto [lb, ub] = equal_range(all(b), b[i]);\r\n        int curr = ub - lb;\r\n        cnt[idxa] = curr;\r\n        i = (ub - b.begin()) - 1;\r\n    }\r\n\r\n    ll ans = 0;\r\n    for (ll l : cnt) {\r\n        if (l > 2) {\r\n            ans += l * (l - 1) * (l - 2);\r\n        }\r\n    }\r\n\r\n    ll mx = a.back();\r\n    for (ll i = 2; i <= 1000; i++) {\r\n        ll sq = i * i;\r\n        rep(j, 0, n) {\r\n            ll iij = sq * a[j];\r\n            if (iij > mx) break;\r\n\r\n            ll ij = i * a[j];\r\n            auto it1 = lower_bound(all(a), ij);\r\n            if (it1 == a.end() || *it1 != ij) continue;\r\n\r\n            auto it2 = lower_bound(all(a), iij);\r\n            if (it2 == a.end() || *it2 != iij) continue;\r\n\r\n            int idxij = it1 - a.begin();\r\n            int idxiij = it2 - a.begin();\r\n            ans += cnt[j] * cnt[idxij] * cnt[idxiij];\r\n        }\r\n    }\r\n\r\n    int small = upper_bound(all(a), 1000) - a.begin();\r\n    vector<ll> sq(n);\r\n    rep(i, small, n) {\r\n        sq[i] = a[i] * a[i];\r\n    }\r\n    rep(i, 0, small) {\r\n        ll currmx = mx * a[i];\r\n        auto it = lower_bound(all(a), a[i] * 1001);\r\n        for (it; it != a.end(); it++) {\r\n            int idxij = it - a.begin();\r\n            if (sq[idxij] > currmx) break;\r\n            if (a[idxij] % a[i]) continue;\r\n\r\n            ll ijj = sq[idxij] / a[i];\r\n            auto f = lower_bound(all(a), ijj);\r\n            if (f == a.end() || *f != ijj) continue;\r\n\r\n            int idxijj = f - a.begin();\r\n            ans += cnt[i] * cnt[idxij] * cnt[idxijj];\r\n        }\r\n    }\r\n\r\n    cout << ans << '\\n';\r\n}\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.exceptions(cin.failbit);\r\n#ifndef LOCAL\r\n    cin.tie(nullptr);\r\n#endif\r\n    int T = 1;\r\n    cin >> T;\r\n    for (int i = 1; i <= T; i++) {\r\n        solve();\r\n    }\r\n}"
}