{
    "id": 209622397,
    "contestId": 1822,
    "creationTimeSeconds": 1686713308,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "SolarRabbit"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 5120000,
    "source": "#include <bits/stdc++.h>\r\n#define N int(2e5)\r\n#define LSOne(bm) (bm & -bm)\r\n#define has_bit(bm, x) (bm & (1LL << x))\r\n#define turn_on(bm, x) (bm |= (1LL << x))\r\n#define turn_off(bm, x) (bm &= (~(1LL << x)))\r\n#define smallest_on(bm) (__builtin_ctzll(bm))\r\n#define largest_on(bm) (63 - __builtin_clzll(bm))\r\n#define mp make_pair\r\n#define mt make_tuple\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef vector<int> vi;\r\ntypedef pair<int, int> ii;\r\ntypedef vector<ii> vii;\r\n\r\nint main() {\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int t; cin >> t;\r\n    while(t--) {\r\n        int n; cin >> n;\r\n        unordered_map<int, int> cnt;\r\n        for(int i=0; i<n; i++) {\r\n            int a; cin >> a;\r\n            cnt[a]++;\r\n        }\r\n        ll ans = 0;\r\n        for(auto [i, a] : cnt) {\r\n            ans += (ll)a*(a-1)*(a-2);\r\n            if(i == 1) continue;\r\n            if(i <= 1e6) {\r\n                for(int j=2; j*j<=i; j++)\r\n                    if(!(i%j)) {\r\n                        if(cnt.count(i/j) && cnt.count(i*j))\r\n                            ans += (ll)a*cnt[i/j]*cnt[i*j];\r\n                        if(j*j!=i && (ll)i*i/j<=1e9 && cnt.count(j) && cnt.count(i/j*i))\r\n                            ans += (ll)a*cnt[j]*cnt[i*i/j];\r\n                    }\r\n                if((ll)i*i<=1e9 && cnt.count(1) && cnt.count(i*i))\r\n                    ans += (ll)a*cnt[1]*cnt[i*i];\r\n            } else {\r\n                for(int j=2; j*i<=1e9; j++)\r\n                    if(!(i%j) && cnt.count(i/j) && cnt.count(i*j))\r\n                        ans += (ll)a*cnt[i/j]*cnt[i*j];\r\n            }\r\n        }\r\n        cout << ans << \"\\n\";\r\n    }\r\n}"
}