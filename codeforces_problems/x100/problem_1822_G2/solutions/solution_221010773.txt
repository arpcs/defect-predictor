{
    "id": 221010773,
    "contestId": 1822,
    "creationTimeSeconds": 1693334342,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "SlowKnight10"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n// #include <ext/pb_ds/assoc_container.hpp>\n// #include <ext/pb_ds/tree_policy.hpp>\n// using namespace __gnu_pbds;\nusing namespace std;\n\n// #pragma GCC optimize(\"Ofast\")\n// #pragma GCC target(\"avx,avx2,fma\")\n// #pragma GCC optimization (\"O3\")\n// #pragma GCC optimization (\"unroll-loops\")\n\n#define lli long long int \n#define ld long double\n#define vi vector<int>\n#define vlli vector<lli>\n#define vpii vector<pair<int, int>>\n#define pb push_back \n\ntemplate<typename T> void debug(T _a) {cout << _a << \" \";}\ntemplate<typename T1, typename T2> void debug(pair<T1, T2> _p) {cout<<\"{\";debug(_p.first);cout<<\": \";debug(_p.second);cout<<\"}\\n\";}\ntemplate<typename T> void debug(vector<T> _aa) {for (auto h: _aa) debug(h); cout << endl;}\ntemplate<typename T> void debug(deque<T> _aa) {for (auto h: _aa) debug(h); cout << endl;}\ntemplate<typename T> void debug(multiset<T> _aa) {for (auto h: _aa) debug(h); cout << endl;}\ntemplate<typename T> void debug(set<T> _aa) {for (auto h: _aa) debug(h); cout << endl;}\ntemplate<typename T1, typename T2> void debug(map<T1, T2> _mm) {for (auto h: _mm) debug(h);}\n\n// typedef tree<int, null_type, less<int>, \n//             rb_tree_tag, tree_order_statistics_node_update> ordered_set;\n\nconst lli INF = 1e18, MOD = 1e9 + 7;\nconst int N = 1e6;\nconst int di[] = {-1,0,1,0}, dj[] = {0,1,0,-1};\nconst string YN[] = {\"NO\", \"YES\"};\nconst double PI = acos(-1);\n\nvlli getDivisors(lli n) {\n    vlli res;\n    for (lli i = 1; i * i <= n; i++) {\n        if (n % i == 0) {\n            int d1 = i, d2 = n/i;\n            res.pb(d1);\n            if (d1 != d2) res.pb(d2);\n        }\n    }\n    return res;\n}\n\nvoid solve() {\n    int n; cin >> n;\n    unordered_map<lli, lli> mp;\n    lli mx = 0;\n    vlli a(n); for (auto &i: a) cin >> i, mp[i]++, mx = max(mx, i);\n\n    set<lli> s(a.begin(), a.end());\n    vlli v(s.begin(), s.end());\n    \n    lli ans = 0;\n    for (lli aj: v) {\n        lli x = mp[aj];\n        if (aj >= N) {\n            ans += x * (x-1) * (x-2);\n            for (lli b = 2; b*aj <= mx; b++) {\n                lli ai = aj/b;\n                if (ai * b == aj && mp.find(ai) != mp.end() && mp.find(aj) != mp.end()) {\n                    lli ak = ai*b*b;\n                    lli y = mp[ai], z = mp[ak];\n                    ans += x * y * z;\n                }\n            }\n        } else {\n            // vlli d = getDivisors(aj);\n            for (lli j = 1; j * j <= aj; j++) {\n                if (aj % j == 0) {\n                    lli ai = j;\n                    lli b = aj/ai;\n                    lli ak = ai*b*b;\n                    if (b == 1) ans += x * (x - 1) * (x - 2);\n                    else if (mp.find(ai) != mp.end() && mp.find(ak) != mp.end()) {\n                        lli y = mp[ai], z = mp[ak];\n                        ans += x * y * z;\n                    }\n \n                    if (j*j != aj) {\n                        ai = aj/j;\n                        b = aj/ai;\n                        ak = ai*b*b;\n                        if (b == 1) ans += x * (x - 1) * (x - 2);\n                        else if (mp.find(ai) != mp.end() && mp.find(ak) != mp.end()) {\n                            lli y = mp[ai], z = mp[ak];\n                            ans += x * y * z;\n                        }\n                    }\n                }\n            }\n            // for (lli ai: d) {\n            //     lli b = aj/ai;\n            //     lli ak = ai*b*b;\n            //     if (b == 1) ans += x * (x - 1) * (x - 2);\n            //     else ans += x * mp[ai] * mp[ak];\n            // }\n        }\n    }\n    cout << ans << endl;\n}\n  \nint main() {\n    #ifndef ONLINE_JUDGE\n        freopen(\"input.txt\",\"r\",stdin);\n        freopen(\"output.txt\",\"w\",stdout);\n    #endif\n    ios::sync_with_stdio(false);\n    cin.tie(NULL); cout.tie(0);\n    cout << fixed << setprecision(9);\n    int t = 1; cin >> t;\n    for (int _i = 1; _i <= t; _i++) {\n        //cout << \"Case #\" << _i << \": \";\n        solve();\n    }\n}"
}