{
    "id": 220852240,
    "contestId": 1822,
    "creationTimeSeconds": 1693227243,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "Wood"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 2761,
    "memoryConsumedBytes": 9932800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing i64 = long long;\r\n\r\nstd::vector<int> minp, primes;\r\n \r\nvoid sieve(int n) {\r\n    minp.assign(n + 1, 0);\r\n    primes.clear();\r\n    \r\n    for (int i = 2; i <= n; i++) {\r\n        if (minp[i] == 0) {\r\n            minp[i] = i;\r\n            primes.push_back(i);\r\n        }\r\n        \r\n        for (auto p : primes) {\r\n            if (i * p > n) {\r\n                break;\r\n            }\r\n            minp[i * p] = p;\r\n            if (p == minp[i]) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nstd::vector<int> div(int n) {\r\n    std::vector<int> ans{1};\r\n    for (auto p : primes) {\r\n        std::vector<int> now;\r\n        int mul = 1;\r\n        while (!(n % (p * p))) {\r\n            mul *= p;\r\n            for (auto x : ans) {\r\n                now.push_back(x * mul);\r\n            }\r\n            n /= p * p;\r\n        }\r\n        ans.insert(ans.end(), now.begin(), now.end());\r\n    }\r\n    ans.erase(ans.begin());\r\n    return ans;\r\n}\r\n\r\nvoid solve() {\r\n    int n;\r\n    std::cin >> n;\r\n\r\n    std::map<int, int> cnt;\r\n    for (int i = 0; i < n; i++) {\r\n        int a;\r\n        std::cin >> a;\r\n        cnt[a]++;\r\n    }\r\n\r\n    i64 ans = 0;\r\n    for (auto &[x, y] : cnt) {\r\n        if (y > 2) {\r\n            ans += 1LL * y * (y - 1) * (y - 2); \r\n        }\r\n        for (auto p : div(x)) {\r\n            if (cnt.count(x / p) && cnt.count(x / p / p)) {\r\n                ans += 1LL * y * cnt[x / p] * cnt[x / p / p];\r\n            }\r\n        }\r\n    }\r\n\r\n    std::cout << ans << \"\\n\";\r\n}\r\n\r\nint main() {\r\n    std::ios::sync_with_stdio(false);\r\n    std::cin.tie(nullptr);\r\n\r\n    sieve(4E4);\r\n\r\n    int t;\r\n    std::cin >> t;\r\n\r\n    while (t--) {\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n}"
}