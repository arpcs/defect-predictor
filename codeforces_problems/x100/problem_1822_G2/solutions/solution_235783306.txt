{
    "id": 235783306,
    "contestId": 1822,
    "creationTimeSeconds": 1701740942,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "WaterSL"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 421,
    "memoryConsumedBytes": 27750400,
    "source": "// LUOGU_RID: 138254964\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\nnamespace IO {\r\n\t#if ONLINE_JUDGE\r\n\t#define getc() (IS == IT && (IT = (IS = ibuf) + fread(ibuf, 1, IL, stdin), IS == IT) ? EOF : *IS++)\r\n\t#else\r\n\t#define getc() getchar()\r\n\t#endif\r\n\tconst int IL = 1 << 21, OL = 1 << 21;\r\n\tint olen = 0;\r\n\tchar ibuf[IL], *IS = ibuf, *IT = ibuf, obuf[OL];\r\n\tinline int read() {\r\n\t\tregister char ch = getc(); register int x = 0, f = 1;\r\n\t\twhile(!isdigit(ch)) { if(ch == '-') f = -1; ch = getc(); }\r\n\t\twhile(isdigit(ch)) x = x * 10 + ch - 48, ch = getc();\r\n\t\treturn x * f;\r\n\t}\r\n\tinline double readdb() {\r\n\t\tregister char ch = getc(); register double x = 0, f = 1;\r\n\t\twhile(!isdigit(ch)) { if(ch == '-') f = -1; ch = getc(); }\r\n\t\twhile(isdigit(ch)) x = x * 10 + ch - 48, ch = getc();\r\n\t\tif(ch == '.') {\r\n\t\t\tregister double b = 0.1;\r\n\t\t\tch = getc();\r\n\t\t\twhile(isdigit(ch)) x += (ch - 48) * b, b *= 0.1, ch = getc();\r\n\t\t}\r\n\t\treturn x * f;\r\n\t}\r\n\tinline int readstr(char *s) {\r\n\t\tregister char ch = getc(); register int len = 0;\r\n\t\twhile(!isalpha(ch)) ch = getc();\r\n\t\twhile(isalpha(ch)) s[++len] = ch, ch = getc();\r\n\t\treturn len;\r\n\t}\r\n\tinline void flush() { fwrite(obuf, 1, olen, stdout); olen = 0; }\r\n\tinline void putc(register char ch) { obuf[olen++] = ch; }\r\n\ttemplate<class T>\r\n\tinline void write(register T x) {\r\n\t\tif(x < 0) obuf[olen++] = '-', x = -x;\r\n\t\tif(x > 9) write(x / 10);\r\n\t\tobuf[olen++] = x % 10 + 48;\r\n\t}\r\n} using namespace IO;\r\nconst int N = 2e5 + 10;\r\nint n, a[N], B;\r\nunordered_map<int, int> mp;\r\nint lsh[N], m, cnt[N];\r\nvoid MAIN() {\r\n\tn = read();\r\n\tmp.clear();\r\n\tfor(int i = 1; i <= n; i++)\r\n\t\ta[i] = read(), mp[a[i]]++, lsh[++m] = a[i];\r\n\tsort(lsh + 1, lsh + 1 + m);\r\n\tm = unique(lsh + 1, lsh + 1 + m) - lsh - 1;\r\n\tB = 1e6;\r\n\tll ans = 0;\r\n\tfor(int i = 1; i <= m; i++) {\r\n\t\ta[i] = lsh[i];\r\n\t\tint cnt = mp[a[i]];\r\n\t\tans += 1ll * cnt * (mp[a[i]] - 1) * (mp[a[i]] - 2);\r\n\t\tif(a[i] <= B) {\r\n\t\t\tfor(int j = 1; j * j <= a[i]; j++)\r\n\t\t\t\tif(a[i] % j == 0) {\r\n\t\t\t\t\tif(j != 1) ans += 1ll * cnt * mp[a[i] / j] * mp[a[i] * j];\r\n\t\t\t\t\tif(j * j != a[i] && 1ll * cnt * a[i] / j * a[i] <= 1e9) {\r\n\t\t\t\t\t\tans += 1ll * cnt * mp[j] * mp[a[i] / j * a[i]];\r\n\t\t\t\t\t} \r\n\t\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfor(int j = 2; j * a[i] <= 1e9; j++)\r\n\t\t\t\tif(a[i] % j == 0) ans += 1ll * cnt * mp[a[i] / j] * mp[a[i] * j];\r\n\t\t}\r\n\t}\r\n\tprintf(\"%lld\\n\", ans);\r\n}\r\nint main() {\r\n\tint T = read();\r\n\twhile(T--) MAIN();\r\n\treturn 0;\r\n}"
}