{
    "id": 209709999,
    "contestId": 1822,
    "creationTimeSeconds": 1686789187,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "BernatP"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define endl '\\n'\r\nusing namespace std;\r\nconst int INF = 1e15;\r\nconst int maxN = 1e6+5;\r\nvector<int>primes;\r\nint isComposite[maxN];\r\nint smallest[maxN];\r\nvoid sieve(){\r\n\tisComposite[0] = 1;\r\n\tisComposite[1]= 1;\r\n\tfor(int i = 2;i<maxN;i++){\r\n\t\tif(!isComposite[i]){\r\n\t\t\tprimes.push_back(i);\r\n\t\t\tsmallest[i] = i;\r\n\t\t}\r\n\t\tfor(int j = 0; j<primes.size() && primes[j]*i<maxN;j++){\r\n\t\t\tisComposite[i*primes[j]] = 1;\r\n\t\t\tsmallest[i*primes[j]] = primes[j];\r\n\t\t\tif(i%primes[j]==0)break;\r\n\t\t}\r\n\t}\r\n}\r\nvector<int>divisors(int x){\r\n\tvector<int>ans;\r\n\tans.push_back(1);\r\n\twhile(x!=1){\r\n\t\tint p = smallest[x];\r\n\t\tint cnt = 0;\r\n\t\twhile(x%p==0){\r\n\t\t\tx/=p;\r\n\t\t\tcnt++;\r\n\t\t}\r\n\t\tauto aux = ans;\r\n\t\tint m = p;\r\n\t\tfor(int i = 0;i<cnt;i++){\r\n\t\t\tfor(auto u : aux)ans.push_back(u*m);\r\n\t\t\tm*=p;\r\n\t\t}\r\n\t}\r\n\treturn ans;\r\n}\r\nsigned main(){\r\n\tios::sync_with_stdio(0);\r\n  \tcin.tie(0);\r\n\tsieve();\r\n\t//for(auto u : divisors(20))cout<<u<<\" \";\r\n\t//\tcout<<endl;\r\n\tint t;\r\n\tcin>>t;\r\n\twhile(t--){\r\n\t\tint n;\r\n\t\tcin>>n;\r\n\t\tvector<int>a(n);\r\n\t\tunordered_map<int,int>m;\r\n\t\tint maxM = 0;\r\n\t\tfor(int i = 0;i<n;i++){\r\n\t\t\tcin>>a[i];\r\n\t\t\tm[a[i]]++;\r\n\t\t\tmaxM = max(maxM,a[i]);\r\n\t\t}\r\n\t\tint SPLIT = pow(maxM,(long double)2/3);\r\n\t\tint ans = 0;\r\n\t\tfor(int i = 0;i<n;i++){\r\n\t\t\tif(a[i]<SPLIT){\r\n\t\t\t\tfor(auto b : divisors(a[i])){\r\n\t\t\t\t\tif(a[i]*b>maxM)continue;\r\n\t\t\t\t\tif(b!=1 && m.count(a[i]*b) && m.count(a[i]/b))ans+= m[a[i]/b]*m[a[i]*b];\r\n\t\t\t\t}\r\n\t\t\t\t//for(int b = (SPLIT-1)/a[i] + 1;b*b<=maxM/a[i];b++){\r\n\t\t\t\t//\tif(m.count(a[i]*b) &&m.count(a[i]*b*b)) ans+= m[a[i]*b]*m[a[i]*b*b];\r\n\t\t\t\t//}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tfor(int b = 2;b*a[i]<=maxM;b++){\r\n\t\t\t\t\tif(a[i]%b==0 && m.count(a[i]/b) &&m.count(a[i]*b)) ans+= m[a[i]*b]*m[a[i]/b];\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i = 0;i<n;i++){\r\n\t\t\tans+= max(0LL,(m[a[i]]-1)*(m[a[i]]-2));\r\n\t\t}\r\n\t\tcout<<ans<<endl;\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\n}"
}