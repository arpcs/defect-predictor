{
    "id": 227040667,
    "contestId": 1822,
    "creationTimeSeconds": 1696697158,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "SharpEdged"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 1653,
    "memoryConsumedBytes": 23756800,
    "source": "#include <bits/stdc++.h>\r\n#pragma GCC optimize (\"O3,unroll-loops\")\r\n#pragma GCC target (\"avx2,bmi,bmi2,lzcnt,popcnt\")\r\n \r\nusing namespace std;\r\n \r\n#define f first\r\n#define s second\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define mp make_pair\r\n#define all(x) x.begin(), x.end()\r\n#define rall(x) x.rbegin(), x.rend()\r\n#define LSB(x) ((x) & -(x))\r\n#define sz(x) (int)(x.size())\r\n#define uid(a, b) uniform_int_distribution<int>(a, b)(rng)\r\n#define uld(a, b) uniform_int_distribution<ll>(a, b)(rng)\r\n#define __lcm(a, b) ((a) * (b)) / __gcd(a, b)\r\n \r\ntemplate<class T> bool ckmin(T& a, const T& b) { return b < a ? a = b, 1 : 0; }\r\ntemplate<class T> bool ckmax(T& a, const T& b) { return a < b ? a = b, 1 : 0; }\r\n \r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef unsigned long long ull;\r\n \r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n \r\nvoid __print(int x) {cerr << x;}\r\nvoid __print(long x) {cerr << x;}\r\nvoid __print(long long x) {cerr << x;}\r\nvoid __print(unsigned x) {cerr << x;}\r\nvoid __print(unsigned long x) {cerr << x;}\r\nvoid __print(unsigned long long x) {cerr << x;}\r\nvoid __print(float x) {cerr << x;}\r\nvoid __print(double x) {cerr << x;}\r\nvoid __print(long double x) {cerr << x;}\r\nvoid __print(char x) {cerr << '\\'' << x << '\\'';}\r\nvoid __print(const char *x) {cerr << '\\\"' << x << '\\\"';}\r\nvoid __print(const string &x) {cerr << '\\\"' << x << '\\\"';}\r\nvoid __print(bool x) {cerr << (x ? \"true\" : \"false\");}\r\n \r\ntemplate<typename T, typename V>\r\nvoid __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << \", \"; __print(x.second); cerr << '}';}\r\ntemplate<typename T>\r\nvoid __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? \", \" : \"\"), __print(i); cerr << \"}\";}\r\nvoid _print() {cerr << \"]\\n\";}\r\ntemplate <typename T, typename... V>\r\nvoid _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << \", \"; _print(v...);}\r\n#ifdef DEBUG\r\n#define dbg(x...) cerr << \"[DEBUG] \"<<__func__<<\": \"<<__LINE__<<\", [\" << #x << \"] = [\"; _print(x);\r\n#else\r\n#define dbg(x...)\r\n#endif\r\n \r\nstruct custom_hash {\r\n\tstatic uint64_t splitmix64(uint64_t x) {\r\n\t\t// http://xorshift.di.unimi.it/splitmix64.c\r\n\t\tx += 0x9e3779b97f4a7c15;\r\n\t\tx = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n\t\tx = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n\t\treturn x ^ (x >> 31);\r\n\t}\r\n \r\n\tsize_t operator()(uint64_t x) const {\r\n\t\tstatic const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n\t\treturn splitmix64(x + FIXED_RANDOM);\r\n\t}\r\n\t\r\n\tsize_t operator()(string x) const {\r\n\t\tstatic const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n\t\tuint64_t res = 0;\r\n\t\tfor (int i = 0; i < sz(x); i++){\r\n\t\t\tres ^= x[i] + FIXED_RANDOM;\r\n\t\t\tres = splitmix64(res);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n};\r\n \r\nconst ll MOD = 998244353;\r\nconst ll INFLL = 1e18 + 5;\r\nconst int INF = 1e9 + 5;\r\n \r\nchar nl = '\\n';\r\n\r\nconst int N = 32000;\r\narray<bool, N> p;\r\nvector<int> primes;\r\n\r\nint Reduce(int x){\r\n    int y = 1;\r\n    for (int pr : primes){\r\n        int cnt = 0;\r\n        while (x % pr == 0){\r\n            x /= pr; \r\n            cnt++;\r\n            if (cnt % 2 == 0) y *= pr;\r\n        }\r\n    }\r\n    return y;\r\n}\r\n\r\nvoid TestCase(){\r\n    int n; cin >> n;\r\n    ll ans = 0;\r\n    vector<int> a(n);\r\n    map<int, ll> freq;\r\n    for (int i = 0; i < n; i++){\r\n        cin >> a[i];\r\n        freq[a[i]]++;\r\n    }\r\n    sort(all(a));\r\n    a.erase(unique(all(a)), a.end());\r\n    for (int i = 0; i < sz(a); i++){\r\n        // b = 1\r\n        int cnt = freq[a[i]];\r\n        if (cnt >= 3) ans += (cnt * (cnt-1) * (cnt-2));\r\n        // b > 1\r\n        int y = Reduce(a[i]);\r\n        if (y > 1) ans += freq[a[i] / y / y] * freq[a[i] / y] * freq[a[i]];\r\n        for (int b = 2; b * b <= y; b++){\r\n            int b2 = y / b;\r\n            if (a[i] % (b * b) == 0){\r\n                ans += freq[a[i] / b / b] * freq[a[i] / b] * freq[a[i]];   \r\n                if (b != b2) ans += freq[a[i] / b2 / b2] * freq[a[i] / b2] * freq[a[i]];\r\n            }\r\n        }\r\n    }\r\n    cout << ans << nl;\r\n}\r\n \r\nint main(){\r\n\tios_base::sync_with_stdio(0);\r\n\tcin.tie(0);\r\n    p.fill(1);\r\n    for (int i = 2; i < N; i++){\r\n        if (p[i]){\r\n            primes.pb(i);\r\n            for (int j = 2 * i; j < N; j += i){\r\n                p[j] = 0;\r\n            }\r\n        }\r\n    }\r\n    dbg(sz(primes));\r\n\tint T = 1;\r\n\tcin >> T;\r\n\twhile (T--){\r\n\t\tTestCase();\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n"
}