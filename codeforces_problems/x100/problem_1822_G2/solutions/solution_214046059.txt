{
    "id": 214046059,
    "contestId": 1822,
    "creationTimeSeconds": 1689516614,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "IssamOtoz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 1684,
    "memoryConsumedBytes": 187904000,
    "source": "#include <bits/stdc++.h>\r\n#define FIO  freopen(\"input.txt\",\"r\",stdin);  freopen(\"output.txt\",\"w\",stdout);\r\n#define ull unsigned long long\r\n#define ll long long\r\n#define ld long double\r\n#define sint short int\r\n#define f first\r\n#define s second\r\n#define INF 1e17\r\n#define eps 0.0000000001\r\nusing namespace std;\r\n\r\nvoid cincout()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    cout << fixed << setprecision(16);\r\n}\r\ninline int readint() // don't use it for negative numbers\r\n{\r\n    int res = 0;\r\n    char c = 0;\r\n    while(!isdigit(c))\r\n        c = getchar();\r\n    while(isdigit(c))\r\n        res = res*10+c-'0', c = getchar();\r\n    return res;\r\n}\r\ninline string read_string() {\r\n    static char buffer[205];\r\n    scanf(\" %s\", buffer);\r\n    return buffer;\r\n};\r\ninline string readstring(){ // you must use it with fast I/O\r\n    string t_temp;\r\n    getline(cin, t_temp);\r\n    return t_temp;\r\n}\r\nll gcd(ll a, ll b)\r\n{\r\n    return b == 0 ? a : gcd(b, a % b);\r\n}\r\nll lcm(ll a, ll b)\r\n{\r\n    return a / gcd(a, b) * b;\r\n}\r\nbool cmp(const pair<pair<ll,ll>,pair<ll,ll> > a,const pair<pair<ll,ll>,pair<ll,ll> > b)\r\n{\r\n    if (a.f.f == b.f.f){\r\n        if (a.f.s==b.f.s) return a.s.s>b.s.s; // cost\r\n        return a.f.s>b.f.s;// inner\r\n    }\r\n    return a.f.f>b.f.f; // outer\r\n}\r\nconst ll mod = 1e9+7;\r\n\r\nll n,m,k;\r\nconst int N = 1e6+5;\r\nvoid pp(vector<ll> &a,bool f=0){\r\n    for(auto i: a) cout<<i+f<<\" \";\r\n    cout<<endl;\r\n}\r\nvector<ll> con(vector<ll> &a){\r\n   vector<ll>temp;\r\n   ll x=0;\r\n    for(auto i: a){\r\n        x += i;\r\n        x %= n;\r\n        temp.push_back(x);\r\n    }\r\n    return temp;\r\n}\r\nbool check(vector<ll> &a){\r\n    map<ll,ll>vis;\r\n    for(auto i: a){\r\n        ll x = i+1;\r\n        x %= n;\r\n        if (vis[x]){\r\n            return 0;\r\n        }\r\n        vis[x] = 1;\r\n    }\r\n    return 1;\r\n}\r\n// Function to get the divisors with N log(N)\r\nvector<ll> divs[1000006];\r\nvoid getdividors(ll N)\r\n{\r\n    for(ll i = 1; i <= N; i++){\r\n        for(ll j = i; j <= N; j = j+i){\r\n            divs[j].push_back(i);\r\n        }\r\n    }\r\n}\r\nint main()\r\n{\r\n    // cincout();\r\n    int t = 1;\r\n    // cin>>t; \r\n    scanf(\"%d\",&t);\r\n    // scanf(\"%d\",&t);\r\n    getdividors(1e6+2);\r\n    while(t--){\r\n        scanf(\"%lld\",&n);\r\n        map<ll,ll>mp;\r\n        ll mx = 0;\r\n        ll a[n]; for(auto &i : a) scanf(\"%lld\",&i),mp[i]++, mx = max(mx, i);\r\n        ll ans = 0;\r\n        for(int ind=0;ind<n;ind++){\r\n            auto i = a[ind];\r\n            if (i>1e6) continue;\r\n            for(auto j : divs[i]){\r\n                ll x = i/j;\r\n                ll y = i;\r\n                ll z = i*j;\r\n                ll c = 0;\r\n                \r\n                if (j == 1){\r\n                    auto it = mp.find(y);\r\n                    if (it != mp.end()){\r\n                        ll cnty = (*it).s;\r\n                        c = (cnty - 1ll)*(cnty - 2ll);\r\n                    }\r\n                }else{\r\n                    auto itx = mp.find(x);\r\n                    auto itz = mp.find(z);\r\n                    if (itx != mp.end() && itz != mp.end()){\r\n                        ll cnty = (*itx).s;\r\n                        ll cntz = (*itz).s;\r\n                        c = cnty * cntz; \r\n                    }\r\n                }\r\n                ans += c;\r\n            }\r\n        }\r\n        for(auto i : a){\r\n            if (i>1e6){\r\n                for(ll j = 1;j*i<=mx;j++){\r\n                    if (i % j != 0)continue;\r\n                    ll x=i*j;\r\n                    ll y=i/j;\r\n                    ll c = 0;\r\n                    if (j == 1){\r\n                        auto it = mp.find(i);\r\n                        if (it != mp.end()){\r\n                            ll cnti = (*it).s;\r\n                            c = (cnti - 1ll)*(cnti - 2ll);\r\n                        }\r\n                    }else{\r\n                        auto itx = mp.find(x);\r\n                        auto ity = mp.find(y);\r\n                        if (itx != mp.end() && ity != mp.end()){\r\n                            ll cntx = (*itx).s;\r\n                            ll cnty = (*ity).s;\r\n                            c = cntx * cnty; \r\n                        }\r\n                    }\r\n                    ans += c;\r\n                    if (j >= sqrt(i))continue;\r\n                    j = i/j;\r\n                    x=i*j;\r\n                    y=i/j;\r\n                    c = 0;\r\n                    if (j == 1){\r\n                        auto it = mp.find(i);\r\n                        if (it != mp.end()){\r\n                            ll cnti = (*it).s;\r\n                            c = (cnti - 1ll)*(cnti - 2ll);\r\n                        }\r\n                    }else{\r\n                        auto itx = mp.find(x);\r\n                        auto ity = mp.find(y);\r\n                        if (itx != mp.end() && ity != mp.end()){\r\n                            ll cntx = (*itx).s;\r\n                            ll cnty = (*ity).s;\r\n                            c = cntx * cnty; \r\n                        }\r\n                    }\r\n                    ans += c;\r\n                }\r\n            }\r\n        }\r\n        // cout<<ans<<\"\\n\";\r\n        printf(\"%lld\\n\",ans);\r\n\r\n    }\r\n\r\n    return 0;\r\n}"
}