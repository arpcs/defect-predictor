{
    "id": 222412338,
    "contestId": 1822,
    "creationTimeSeconds": 1694156558,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1822,
        "index": "G2",
        "name": "Magic Triples (Hard Version)",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "brute force",
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1822,
        "members": [
            {
                "handle": "karansrivastava"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682346900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 2371,
    "memoryConsumedBytes": 9830400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nusing i64 = long long;\r\nusing vll = vector<long long>;\r\n#define all(x) x.begin(), x.end()\r\n#define rall(x) x.rbegin(), x.rend()\r\n#define sz(a) long long(size_of(a))\r\n#define fi first\r\n#define pb push_back\r\n#define se second               \r\n\r\nvoid solve() {                                    \r\n\t\ti64 n;\r\n\t\tcin >> n;\r\n\t\ti64 MAX = 1e9;\r\n\t\tvll a(n);\r\n\t\ti64 cur = 0;\r\n\t\tmap<i64, i64> mp;\r\n\t\ti64 ans = 0;\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tcin >> a[i];\r\n\t\t}\r\n\t\tsort(all(a));                          \r\n\t  for (int j = 0; j < n; j++){\r\n      ans += (long long) mp[a[j]] * (mp[a[j]] - 1) * 3;\r\n      mp[a[j]]++;\r\n    }\r\n    for (int j = 2; j <= 1000; j++){\r\n      for (int k = 0; k < n; k++){\r\n        if (a[k] % (j * j) == 0){\r\n          if (mp.count(a[k] / j) == 1 && mp.count(a[k] / j / j) == 1){\r\n            ans += (long long) mp[a[k] / j] * mp[a[k] / j / j];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for (int j = 1; j <= 1000; j++){\r\n      if (mp.count(j) == 1){\r\n        int x = mp[j];\r\n        for (int k = 0; k < n; k++){\r\n          if (a[k] > j * 1000 && a[k] % j == 0){\r\n            long long q = a[k] / j;\r\n            if (q * q <= MAX){\r\n              if (j * q * q <= MAX){\r\n                if (mp.count(j * q * q) == 1){\r\n                  ans += (long long) x * mp[j * q * q];\r\n                }\r\n              } else {\r\n                break;\r\n              }\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    cout << ans << endl;\r\n\t\r\n}\r\n\r\nsigned main() {\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(nullptr); cout.tie(nullptr);\r\n\r\n  int t = 1;\r\n  cin >> t;\r\n  while (t --> 0) { \r\n  \tsolve();\r\n  }\r\n\r\n  return 0;\r\n}"
}