{
    "id": 190207384,
    "contestId": 1371,
    "creationTimeSeconds": 1674478512,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "parsa-golestani"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 2560000,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nconst int N = 100 * 1000 +10;\r\n\r\nint a[N], mod[N];\r\n\r\nvector<int> candi, ans;\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);\r\n    int n, p; cin>>n>>p;\r\n    for(int i=1; i<=n; i++)\r\n        cin>>a[i];\r\n    sort(a+1, a+n+1);\r\n\r\n    for(int i=max(1, a[n] - n + 1); i<a[n]; i++)\r\n        candi.push_back(i);\r\n    int mn = 0;\r\n    for(int i=n; i>=1; i--)\r\n    {\r\n        int index = p - ((i  - a[i]) % p + p) % p;\r\n        if(index == p) index = 0;\r\n        mod[index] = 1;\r\n\r\n        if(i - a[i] < 0)\r\n            mn = max(abs(i - a[i]), mn);\r\n        if(a[i] != a[i-1] && i <= p)\r\n        {\r\n            while(!candi.empty() && a[i-1] <= candi.back())\r\n            {\r\n                int x = candi.back();\r\n                candi.pop_back();\r\n                if(mod[x % p] == 0 && mn < x)\r\n                    ans.push_back(x);\r\n            }\r\n        }\r\n    }\r\n    cout<<(int)ans.size()<<'\\n';\r\n    sort(ans.begin(), ans.end());\r\n    for(auto x : ans)\r\n        cout<<x<<' ';\r\n    cout.flush();\r\n    return 0;\r\n}\r\n"
}