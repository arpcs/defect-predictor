{
    "id": 187964672,
    "contestId": 1371,
    "creationTimeSeconds": 1672860843,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "ezraft"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 7680000,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n    int n,p;\n    cin >> n >> p;\n    \n    vector<int>a(n);\n    for (int i = 0; i < n; i++)\n    {\n        cin >> a[i];\n    }\n    \n    \n    sort(a.begin(), a.end());\n    int z = 0;\n    \n    for (int i = n-1; i >= 0; i--)\n    {\n        z = max(z, a[i] + (n - 1 - i));\n    }\n    \n    z -= n - 1;\n    \n    int c = 0;\n    \n    multiset<int> st;\n    vector<int> cur;\n    for (int i = 0; i < n; i++)\n    {\n        while (c < n && a[c] <= z + i)\n        {\n            c++;\n        }\n        cur.push_back((c - i) % p);\n        st.insert((c - i) % p);\n    }\n    \n    vector<int> ans;\n    \n    if (!st.count(0) && !st.count(p))\n    {\n        ans.push_back(z);\n    }\n    \n    \n    \n    for (int i = 1; i < n; i++)\n    {\n        st.erase(st.lower_bound(cur[i-1]));\n        cur.push_back((1 - i + p) % p);\n        st.insert((1 - i + p) % p);\n        \n        if (!st.count(p - i) && !st.count(2 * p - i))\n        {\n            ans.push_back(z + i);\n        }\n        \n    }\n    \n    \n    cout << ans.size() << \"\\n\";\n    \n    for (auto x : ans)\n    {\n        cout << x << \" \";\n    }\n    cout << \"\\n\";\n return 0;\n}\n"
}