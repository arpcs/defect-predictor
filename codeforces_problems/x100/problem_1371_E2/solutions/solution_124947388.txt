{
    "id": 124947388,
    "contestId": 1371,
    "creationTimeSeconds": 1628161033,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "SAMSans"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 14131200,
    "source": "//#pragma GCC optimize(2)\r\n#include<bits/stdc++.h>\r\n#define CT printf(\"\\n-------------------------\\n\");\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int inf=1<<30;\r\nconst ll Inf=1ll<<60ll;\r\nnamespace io{\r\n\t#define bufsize (1<<23)\r\n\tchar buf[bufsize],*p1=buf,*p2=buf,c;int f;\r\n\t#define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,bufsize,stdin),p1==p2)?EOF:*p1++)\r\n\ttemplate<typename T>T read(){\r\n\t\tT x=0;f=0;c=getchar();\r\n\t\twhile(!isdigit(c))(c=='-')&&(f=1),c=getchar();\r\n\t\twhile(isdigit(c))x=x*10+(c&15),c=getchar();\r\n\t\treturn f?-x:x;\r\n\t}\r\n\t#undef bufsize\r\n}\r\n#define readi io::read<int>\r\nconst int N=100005;\r\nint n,p,a[N],mp[N];\r\nvector<int> ans;\r\nint main(){\r\n//\tios::sync_with_stdio(0);\r\n//\tcin.tie(0);cout.tie(0);\r\n//\tfreopen(\".in\",\"r\",stdin);\r\n//\tfreopen(\".out\",\"w\",stdout);\r\n\r\n\tn=readi();\r\n\tp=readi();\r\n\tfor(int i=1;i<=n;++i)\r\n\t\ta[i]=readi();\r\n\tsort(a+1,a+n+1);\r\n\ta[n+1]=a[n]+1;\r\n\tfor(int i=a[n]-n+1;i<=a[n];++i){\r\n\t\tint id=upper_bound(a+1,a+n+1,i)-a-1;\r\n\t\tmp[((i-id)%p+p)%p]++;\r\n\t}\r\n\tint k=max(0,a[n]-n+1);\r\n\tfor(int i=k;i<=a[n];++i){\r\n\t\tif(!mp[i%p])\r\n\t\t\tans.push_back(i);\r\n\t\tmp[((i-(upper_bound(a+1,a+n+1,i)-a-1))%p+p)%p]--;\r\n\t\tmp[((i+n-(upper_bound(a+1,a+n+1,i+n)-a-1))%p+p)%p]++;\r\n\t}\r\n\tprintf(\"%d\\n\",ans.size());\r\n\tfor(int i=0;i<ans.size();++i)\r\n\t\tprintf(\"%d \",ans[i]);\r\n\tputs(\"\");\r\n\r\n//\tfclose(stdin);fclose(stdout);\r\n\treturn 0;\r\n}\r\n"
}