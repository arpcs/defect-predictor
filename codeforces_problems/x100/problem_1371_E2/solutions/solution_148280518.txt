{
    "id": 148280518,
    "contestId": 1371,
    "creationTimeSeconds": 1646395272,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "chen_zida"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 2355200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int NR=2e5+10;\r\nvoid Min(int& x,int y){x=min(x,y);}\r\nvoid Max(int& x,int y){x=max(x,y);}\r\nint read()\r\n{\r\n\tint x=0,f=1;char ch=getchar();\r\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\r\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+(ch^48);ch=getchar();}\r\n\treturn x*f;\r\n}\r\nint n,p,st;\r\nint a[NR],cnt[NR],f[NR];\r\nint main()\r\n{\r\n\tn=read(),p=read();\r\n\tfor(int i=1;i<=n;i++)a[i]=read();sort(a+1,a+n+1);st=a[n]-n+1;\r\n\tint now=1;\r\n\tfor(int i=st;i<=a[n];i++){\r\n\t\twhile(now<=n&&a[now]<=i)now++;\r\n\t\tcnt[i-st+1]=now-1;\r\n\t}\r\n\tfor(int i=1;i<=n*2;i++){\r\n\t\tcnt[i]=max(cnt[i],cnt[i-1]);\r\n\t\tint tp=cnt[i]%p;\r\n\t\tif(i-tp>=1)f[i-tp]++;\r\n\t\tif(i-cnt[i]>=1)f[i-cnt[i]]--;\r\n\t}\r\n\tint ss=0;\r\n\tfor(int i=1;i<=n;i++)ss=max(ss,i-cnt[i-1]);\r\n\tfor(int i=n*2;i>=1;i--)if(i+p<=n*2)f[i]+=f[i+p];\r\n\tint ans=0; \r\n\tfor(int i=ss;i<=n;i++)if(!f[i])ans++;\r\n\tprintf(\"%d\\n\",ans);\r\n\tfor(int i=ss;i<=n;i++)if(!f[i])printf(\"%d \",i+st-1);\r\n\treturn 0;\r\n}\r\n/*\r\n5 5\r\n292213182 292213182 292213182 292213183 292213182\r\n*/"
}