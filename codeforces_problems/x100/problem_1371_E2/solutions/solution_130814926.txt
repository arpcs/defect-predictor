{
    "id": 130814926,
    "contestId": 1371,
    "creationTimeSeconds": 1633359018,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "WindFromTmw"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 4096000,
    "source": "#include <bits/stdc++.h>\r\n#define debug(a) cout << #a << \" = \" << a << '\\n';\r\nusing namespace std;\r\n\r\nconst long long MOD = 1000000007LL;\r\nconst int N = 100009;\r\n\r\nint n, p;\r\nint a[N];\r\n\r\nint main() {\r\n\tios::sync_with_stdio(0); cin.tie(0);\r\n\t\r\n\tcin >> n >> p;\r\n\tfor (int i = 1; i <= n; ++ i) cin >> a[i];\r\n\t\r\n\tsort(a + 1, a + n + 1, greater<int>());\r\n\t\r\n\tauto chk = [&](int x) -> bool {\r\n\t\tfor (int i = 1; i <= n; ++ i)\r\n\t\t\tif (n - (a[i] - x) - (i - 1) <= 0)\r\n\t\t\t\treturn false;\r\n\t\treturn true;\r\n\t};\r\n\t\r\n\tint l = 0, r = 1000000000;\r\n\twhile (r - l > 1) {\r\n\t\tint mid = (l + r) >> 1;\r\n\t\t\r\n\t\tif (chk(mid)) r = mid;\r\n\t\telse l = mid + 1;\r\n\t}\r\n\twhile (r != 0 && chk(r - 1)) r -= 1;\r\n\t\r\n\tint mx = -MOD, ed = MOD, x = r;\r\n\tfor (int i = 1; i <= n; ++ i) {\r\n\t\tmx = max(mx, n - max(0, a[i] - x) - (i - 1));\r\n\t\tif (p <= n - (i - 1))\r\n\t\t\ted = min(ed, p - n + a[i] + (i - 1));\r\n\t}\r\n\t\r\n\tif (p <= mx) return cout << 0, 0;\r\n\tcout << ed - x << '\\n';\r\n\tfor (int i = x; i < ed; ++ i)\r\n\t\tcout << i << ' ';\r\n}"
}