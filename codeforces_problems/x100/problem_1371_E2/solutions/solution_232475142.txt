{
    "id": 232475142,
    "contestId": 1371,
    "creationTimeSeconds": 1699776897,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "EnDeRBeaT"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 3174400,
    "source": "#include \"bits/stdc++.h\"\r\n#define int long long\r\n#define pii pair<int, int>\r\n#define f first\r\n#define s second\r\n#define all(x) (x).begin(), (x).end()\r\n\r\nusing namespace std;\r\n\r\n\r\nsigned main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int n, p;\r\n    cin >> n >> p;\r\n    vector<int>a(n);\r\n    for(auto &x: a) cin >> x;\r\n    sort(all(a));\r\n    auto pred = [&](int m){\r\n        auto oth = a;\r\n        for(int i = 0; i < n; i++){\r\n            oth[i] = min(n, n - (oth[i] - m));\r\n        }\r\n        reverse(all(oth));\r\n        for(int i = 0; i < n; i++){\r\n            int x = oth[i] - i;\r\n            if(x > 0 && x % p == 0) return 0;\r\n        }\r\n        return 1;\r\n    };\r\n    int lo = -1, hi = 1e10;\r\n    while(lo + 1 < hi){\r\n        int m = (lo + hi) / 2;\r\n        if(pred(m)){\r\n            lo = m;\r\n        }\r\n        else{\r\n            hi = m;\r\n        }\r\n    }\r\n    for(int i = 0; i < n; i++) a[i] -= i;\r\n    vector<int>ans;\r\n    for(int i = *max_element(all(a)); i < hi; i++){\r\n        ans.push_back(i);\r\n    }\r\n    cout << ans.size() << '\\n';\r\n    for(auto x: ans) cout << x << ' ';\r\n}"
}