{
    "id": 209495967,
    "contestId": 1371,
    "creationTimeSeconds": 1686601729,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "PiyushSharma_it_is"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 7270400,
    "source": "#include <algorithm>\r\n#include <array>\r\n#include <bitset>\r\n#include <cassert>\r\n#include <climits>\r\n#include <cstdint>\r\n#include <cmath>\r\n#include <complex>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <functional>\r\n#include <iomanip>\r\n#include <iostream>\r\n#include <map>\r\n#include <memory>\r\n#include <numeric>\r\n#include <queue>\r\n#include <random>\r\n#include <set>\r\n#include <stack>\r\n#include <string>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\n#include <vector>\r\nusing namespace std;\r\n \r\n \r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n \r\n// using namespace __gnu_pbds;\r\n// #define ordered_set tree< int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>\r\n#define int long long\r\n#define endl '\\n'\r\ntypedef long long ll;\r\n \r\n#define pb push_back\r\n \r\n \r\n \r\nint power( int x, int y,\r\n           int p)\r\n{\r\n    int res = 1;      // Initialize result\r\n \r\n    x = x % p;  // Update x if it is more than or\r\n    // equal to p\r\n \r\n    while (y > 0)\r\n    {\r\n        // If y is odd, multiply x with result\r\n        if (y & 1)\r\n            res = (res*x) % p;\r\n \r\n        // y must be even now\r\n        y = y>>1; // y = y/2\r\n        x = (x*x) % p;\r\n    }\r\n    return res;\r\n}\r\nint sqr( int n){\r\n if( n==0)return 0;\r\n   int l=1;\r\n   int r=1e9;\r\n   while( l<r){\r\n    int mid=(l+r)/2;\r\n   mid++;\r\n    if( mid*mid<=n){\r\n         l=mid;\r\n \r\n    }\r\n    else {\r\n       r=mid-1;\r\n    }\r\n   }\r\nreturn l;\r\n \r\n}\r\nint givemebitch(string s,int n,int k){\r\n     vector<int>v[2];\r\n       for( int i=0;i<n;i++){\r\n           v[s[i]-'0'].pb(i);\r\n       }\r\n       int d=1;\r\n       if(v[0].size()==0 || v[1].size()==0){\r\n           return 1;\r\n       }\r\n       if( v[0].back()-v[0].front()<k || v[1].back()-v[1].front()<k ){\r\n           return 1;\r\n       }\r\n       return 0;\r\n}\r\nint sz=0;\r\nint df( int x,int p,int vis[],vector<int>v[]){\r\n    vis[x]=1;\r\n    sz++;\r\n    for( auto y:v[x]){\r\n        if( y!=p ){\r\n            df(y,x,vis,v);\r\n        }\r\n    }\r\n}\r\n \r\n \r\n \r\nint32_t main()\r\n{\r\n \r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n \r\n    int te=1;\r\n    ////cin>>te;\r\n \r\n    int p=1e9+7;\r\n    ///int p=998244353;\r\n \r\n    \r\n \r\n \r\n \r\n////cout<<v.size();\r\n    \r\n    for (int tt = 0; tt < te; tt++)\r\n   {\r\n    int n,p;\r\n    cin>>n>>p;\r\n    int a[n];\r\n    map<int,int>m;\r\n    int ma=0;\r\n    for( int i=0;i<n;i++){\r\n        cin>>a[i];\r\n        m[a[i]]++;\r\n        ma=max(ma,m[a[i]]);\r\n    }\r\n    if( ma>=p){\r\n        cout<<0<<endl;\r\n        continue;\r\n    }\r\n    sort(a,a+n);\r\n    int ans=-1e12;\r\n    for( int i=0;i<n;i++){\r\n        ans=max(ans,a[i]-i);\r\n        \r\n    }\r\n    int last=p+ans-1-1;\r\n    cout<<max(last-ans+1,0ll)<<endl;\r\n    for( int i=ans;i<=last;i++)cout<<i<<\" \";\r\n    cout<<endl;\r\n     \r\n     \r\n   }\r\n \r\n    return 0;\r\n}"
}