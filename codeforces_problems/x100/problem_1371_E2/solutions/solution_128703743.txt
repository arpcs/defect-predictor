{
    "id": 128703743,
    "contestId": 1371,
    "creationTimeSeconds": 1631518106,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "EmanuelDicu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 4710400,
    "source": "#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntemplate <typename T>\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\n#pragma GCC optimize(\"Ofast,unroll-loops\")\n#pragma GCC target(\"avx,avx2,sse,sse2\")\n\n#define mp make_pair\n#define sz(x) (int)((x).size())\n#define all(x) (x).begin(),(x).end()\n#define FO(x) {freopen(#x\".in\",\"r\",stdin);freopen(#x\".out\",\"w\",stdout);}\n#define eb emplace_back\n\n#define sim template < class c\n#define ris return * this\n#define dor > debug & operator <<\n#define eni(x) sim > typename \\\n  enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\nsim > struct rge { c b, e; };\nsim > rge<c> range(c i, c j) { return rge<c>{i, j}; }\nsim > auto dud(c* x) -> decltype(cerr << *x, 0);\nsim > char dud(...);\nstruct debug {\n#ifdef HOME\n~debug() { cerr << endl; }\neni(!=) cerr << boolalpha << i; ris; }\neni(==) ris << range(begin(i), end(i)); }\nsim, class b dor(pair < b, c > d) {\n  ris << \"(\" << d.first << \", \" << d.second << \")\";\n}\nsim dor(rge<c> d) {\n  *this << \"[\";\n  for (auto it = d.b; it != d.e; ++it)\n    *this << \", \" + 2 * (it == d.b) << *it;\n  ris << \"]\";\n}\n#else\nsim dor(const c&) { ris; }\n#endif\n};\n#define imie(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\nconst int DIM = 1e5 + 5;\n\nint arr[DIM];\n\nint main(void) {\n  ios::sync_with_stdio(false);\n  cin.tie(0); cout.tie(0);\n#ifdef HOME\n  freopen(\"test.in\", \"r\", stdin);\n  freopen(\"test.out\", \"w\", stdout);\n#endif\n  int n, p; cin >> n >> p;\n  for (int i = 1; i <= n; ++i)\n    cin >> arr[i];\n  sort(arr + 1, arr + n + 1);\n  int le = 1, ri = 1e9;\n  while (le <= ri) {\n    int md = (le + ri) >> 1;\n    bool ok = true;\n    for (int i = 1; i <= n; ++i)\n      if (md + (i - 1) < arr[i])\n        ok = false;\n    if (ok)\n      ri = md - 1;\n    else\n      le = md + 1;\n  }\n  int st = le;\n  le = st, ri = 1e9;\n  debug() << imie(st);\n  while (le <= ri) {\n    int md = (le + ri) >> 1;\n    int vl = 1;\n    bool ok = true;\n    for (int i = 1, ps = 1; i <= n; ++i) {\n      while (ps <= n && arr[ps] <= md + (i - 1))\n        ++ps;\n      vl = 1LL * vl * ((ps - 1) - (i - 1)) % p;\n      if (vl == 0) {\n        ok = false;\n        break;\n      }\n    }\n    if (ok)\n      le = md + 1;\n    else\n      ri = md - 1;\n  }\n  int en = ri;\n  cout << en - st + 1 << \"\\n\";\n  for (int i = st; i <= en; ++i)\n    cout << i << \" \";\n  return 0;\n}"
}