{
    "id": 167990400,
    "contestId": 1371,
    "creationTimeSeconds": 1660318352,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "omeganot"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 8601600,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\ntemplate<class T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\n#define pb push_back\r\n#define pqueue priority_queue\r\n\r\nusing ll = long long;\r\nusing ld = long double;\r\nusing pll = pair<ll,ll>;\r\nusing pii = pair<int,int>;\r\n\r\nconst ll mod = 1e9+7;\r\nconst int inf = 1e9; const ll infll = 1e18;\r\nint n; int p;\r\nstring yes = \"YES\"; string no = \"NO\";\r\nint d1[4] = {1,0,-1,0};\r\nint d2[4] = {0,1,0,-1};\r\n\r\nint main() {\r\n  ios_base::sync_with_stdio(false);\r\n  cin.tie(0);\r\n  cin >> n >> p;\r\n  vector<int> a(n+1);\r\n  for(int i=1;i<=n;i++) {\r\n\t  cin >> a[i];\r\n  }\r\n  sort(a.begin(),a.end());\r\n  int start = 0;\r\n  int curr = 0;\r\n  map<int,int> mp;\r\n  for(int i=1;i<=n;i++) {\r\n    if(start+curr<a[i]) {\r\n      start += a[i]-(start+curr);\r\n    }\r\n    curr++;\r\n    mp[a[i]]++;\r\n  }\r\n  curr = 0;\r\n  for(int i=1;i<=n&&start>=a[i];i++) {\r\n    curr++; \r\n  }\r\n  vector<int> b(p);\r\n  int off = start;\r\n  vector<int> c(n+1);\r\n  vector<int> d(n+1);\r\n  vector<int> e(n+1);\r\n  for(int i=start;i<=a.back();i++) {\r\n    if(i!=start) {\r\n      curr += mp[i]-1;\r\n    }\r\n    b[curr%p]++;\r\n    c[i-off] = curr%p;\r\n    d[i-off] = curr;\r\n  }\r\n  curr = 0;\r\n  for(int i=1;i<=n&&start>a[i];i++) {\r\n    curr++; \r\n  }\r\n  e[n] = d[n];\r\n  for(int i=n-1;i>=0;i--) {\r\n    e[i] = d[i];\r\n    d[i] = max(d[i],d[i+1]);\r\n  }\r\n  vector<int> ans;\r\n  for(int i=start;i<a.back();i++) {\r\n    curr += mp[i];\r\n    int need = (c[i-off]+(p-(curr%p))%p)%p;\r\n    if(!b[need]&&curr+d[i-off]-e[i-off]<p) {\r\n      ans.pb(i);\r\n    }\r\n    b[c[i-off]]--;\r\n  }\r\n  cout << ans.size() << \"\\n\";\r\n  for(auto x:ans) {\r\n    cout << x << \" \";\r\n  }\r\n  cout << \"\\n\";\r\n}"
}