{
    "id": 166299382,
    "contestId": 1371,
    "creationTimeSeconds": 1659235600,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "RGB_ICPC7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 4403200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int MN = 100005;\r\n\r\nvector <int> vx;\r\nvector <int> ans;\r\nint a[MN], sc[MN], sy[MN], y[MN];\r\nint miny[MN], maxy[MN], c[MN];\r\n\r\nint main() {\r\n\tint n, p;\r\n#ifndef ONLINE_JUDGE\t\r\n\tfreopen(\"in.txt\", \"r\", stdin);\r\n#endif\t\r\n\tcin >> n >> p;\r\n\tfor (int i = 1; i <= n; i ++) cin >> a[i], vx.push_back(a[i]);\r\n\tsort (vx.begin(), vx.end());\r\n\tvx.erase(unique(vx.begin(), vx.end()), vx.end());\r\n\tfor (int i = 1; i <= n; i ++) {\r\n\t\ta[i] = lower_bound(vx.begin(), vx.end(), a[i]) - vx.begin() + 1;\r\n\t\tc[a[i]] ++;\r\n\t}\r\n\tn = vx.size();\r\n\tfor (int i = 1; i <= n; i ++) sc[i] = sc[i - 1] + c[i];\r\n\tfor (int i = 1; i < n; i ++) sy[i] = sy[i - 1] + vx[i] - vx[i - 1];\r\n\tfor (int i = 1; i <= n; i ++) y[i] = sc[i] - sy[i - 1];\r\n\tmaxy[n] = y[n];\r\n\tminy[n] = y[n] - c[n];\r\n\tfor (int i = n - 1; i >= 1; i --) {\r\n\t\tmaxy[i] = max(maxy[i + 1], y[i]);\r\n\t\tminy[i] = min(miny[i + 1], y[i] - c[i]);\r\n\t}\r\n\tfor (int i = 2; i <= n; i ++) {\r\n\t\t//case: x < ai\r\n\t\tif (sc[i - 1] >= p) break;\r\n\t\tint ret1 = miny[i] + sy[i - 1];\r\n\t\tint ret2 = maxy[i] + sy[i - 1]; // ret + x - ai < p -- x < p + ai - ret\r\n\t\tret2 = p + vx[i - 1] - ret2;\r\n\t\tfor (int j = max(vx[i - 2], vx[i - 1] - ret1); j < min(ret2, vx[i - 1]); j ++) ans.push_back(j);\r\n\t}\r\n\tcout << ans.size() << endl;\r\n\tfor (auto v : ans) cout << v << ' ';\r\n\t\r\n}\r\n"
}