{
    "id": 170409853,
    "contestId": 1371,
    "creationTimeSeconds": 1661964563,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "myau_c"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 7987200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nusing ll = long long;\r\nusing ld = long double;\r\n\r\n#pragma GCC target(\"avx2\")\r\n#pragma GCC optimize(\"O3\")\r\n#pragma GCC optimize(\"unroll-loops\")\r\n\r\n//only for atcoder\r\n//#include<atcoder/all>\r\n//using namespace atcoder;\r\n\r\n#define rep(i,l,r) for(ll i=(l); i<(r); i++)\r\n#define rrep(i,l,r) for(ll i=(r)-1; i>=(l); i--)\r\n#define ALL(c) (c).begin(), (c).end()\r\n#define RALL(c) (c).rbegin(), (c).rend()\r\n#define SORT(c) sort(ALL(c))\r\n#define RSORT(c) sort(RALL(c))\r\n#define MINV(c) *min_element(ALL(c))\r\n#define MAXV(c) *max_element(ALL(c))\r\n\r\nusing VI = vector<int>;\r\nusing VVI = vector<VI>;\r\nusing VL = vector<ll>;\r\nusing VVL = vector<VL>;\r\nusing VS = vector<string>;\r\nusing VVS = vector<VS>;\r\nusing VB = vector<bool>;\r\nusing VVB = vector<VB>;\r\nusing VC = vector<char>;\r\nusing VVC = vector<VC>;\r\nusing VD = vector<ld>;\r\nusing VVD = vector<VD>;\r\nusing P = pair<ll,ll>;\r\nusing VP = vector<P>;\r\nusing VVP = vector<vector<P>>;\r\nconst ll LINF = 2e18;\r\nconst int INF = 2e9;\r\n\r\nvoid solve(){\r\n  ll N, p;\r\n  cin >> N >> p;\r\n  VL vec(N);\r\n  ll m = 0;\r\n  rep(i,0,N){\r\n    cin >> vec[i];\r\n    m = max(vec[i],m);\r\n  }\r\n  SORT(vec);\r\n  \r\n  ll X = 1;\r\n  rep(i,0,N){\r\n    X = max(X,vec[i]-i);\r\n  }\r\n  VL cnt(N);\r\n  rep(i,0,N){\r\n    vec[i] = max(0LL,vec[i]-X);\r\n    cnt[vec[i]]++;\r\n  }\r\n  \r\n  VL ans(0);\r\n  VVL G(N,VL(0));\r\n  \r\n  rep(i,0,N-1){\r\n    cnt[i+1] += cnt[i];\r\n  }\r\n  \r\n  rep(i,0,N){\r\n    if(X+i < m){\r\n      G[(-i+p*100000)%p].push_back(X+i);\r\n    }\r\n    int c = (cnt[i]-i+p*100000)%p;\r\n    //cout << i << \" \" << cnt[i] << \" \" << c << endl;\r\n    while(G[c].size()){\r\n      //cout << \"ERASE\" << i << \" \" << G[c].back() << endl;\r\n      G[c].pop_back();\r\n    }\r\n  }\r\n  \r\n  rep(i,0,N){\r\n    rep(j,0,G[i].size()){\r\n      if(G[i][j]-X >= p){\r\n        continue;\r\n      }\r\n      ans.push_back(G[i][j]);\r\n    }\r\n  }\r\n  \r\n  cout << ans.size() << endl;\r\n  SORT(ans);\r\n  rep(i,0,ans.size()){\r\n    cout << ans[i] << \" \\n\"[i==ans.size()-1];\r\n  }\r\n}\r\n\r\nint main(){\r\n  ios::sync_with_stdio(false);\r\n  cin.tie(nullptr);\r\n  int T;\r\n  //cin >> T;\r\n  T = 1;\r\n  for(int i=0; i<T; i++){\r\n    solve();\r\n  }\r\n}"
}