{
    "id": 220929448,
    "contestId": 1371,
    "creationTimeSeconds": 1693287465,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "Magician_Mathematician1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 7884800,
    "source": "#include<bits/stdc++.h>\r\n#define int long long\r\n#define sc(x) scanf(\"%lld\", &x);\r\n#define pr(x) printf(\"%lld\", x);\r\n#define prs(x) printf(\"%lld \", x);\r\n#define prl(x) printf(\"%lld\\n\", x);\r\nusing namespace std;\r\nconst int N = 3e5 + 7;\r\nint a[N];\r\nmain()\r\n{\r\n    int n,p; sc(n); sc(p);\r\n    for(int i = 0; i < n; i++)\r\n        sc(a[i]);\r\n    sort(a, a + n);\r\n    int mnx = 0;\r\n    for(int i = 0; i < n; i++)\r\n        mnx = max(mnx, a[i] - i);\r\n    int l; int cnt = 0;\r\n    vector<int>vec; \r\n    for(int i = n - 1; i >= 0; i--){\r\n        if(a[i] > mnx){\r\n            vec.push_back(n - (a[i] - mnx) - cnt++);\r\n            l = i;\r\n        }\r\n    }\r\n    multiset<int>st;\r\n    for(auto it: vec) \r\n        st.insert((p - it % p) % p);\r\n    vector<int>ans;\r\n    for(int x = mnx; x < a[p - 1]; x++){\r\n        int mod = (x - mnx) % p;\r\n        if(st.find(mod) == st.end())\r\n            ans.push_back(x);\r\n        while(x >= a[l] && !vec.empty()){\r\n            l++; \r\n            int v = (p - vec.back() % p) % p; \r\n            st.erase(st.find(v)); vec.pop_back();\r\n        }\r\n    }\r\n    int sz = ans.size();\r\n    prl(sz);\r\n    for(auto it: ans)\r\n        prs(it);\r\n}"
}