{
    "id": 156938142,
    "contestId": 1371,
    "creationTimeSeconds": 1652371156,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "AugustinasJucas"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 6860800,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nint n, p;\nvector<int> mas;\nbool f(int x) {\n    for(auto &y : mas) {\n        if(y > x) return false;\n        x++;\n    }\n    return true;\n}\nint main () {\n    cin >> n >> p;\n    mas.resize(n);\n    for(auto &x : mas) cin >> x;\n\n    sort(mas.begin(), mas.end());\n\n    long long l = 0, r = 1e9, mid, rt;\n    while(l <= r) {\n        mid = (l + r) / 2;\n        if(f(mid)) {\n            rt = mid;\n            r = mid-1;\n        }else{ \n            l = mid+1;\n        }\n    }\n    map<int, int> mapas;\n    vector<int> vec;\n    int nl = 0;\n    int initRt = rt;\n    for(auto &x : mas) {\n        mapas[x]++;\n        nl += ((x - rt) <= 0);\n    }\n//    cout << \"init nl = \" << nl << endl; \n    for(auto &x : mas) {\n        vec.push_back(nl);\n        rt++;\n        if(mapas.count(rt)) nl += mapas[rt];\n        nl--;\n    }\n    \n    vector<int> kek(p, 0);\n    for(auto &x : vec) {\n        kek[x % p]++;\n    }\n    rt = initRt;\n//    cout << \"rt = \" << rt << endl;\n//    cout << \"vec: \"; for(auto &x : vec) cout << x << \" \";\n//    cout << endl;\n    vector<int> ans;\n    int kur = 0;\n    int sm = 0;\n    for(int i = 0; i < n; i++) {\n        \n        if(kek[kur] == 0) ans.push_back(i + rt);\n        sm += vec[i];\n        kek[sm%p]--;\n\n        kur = (kur - 1 + p) % p;\n    }\n    \n    cout << ans.size() << \"\\n\";\n    for(auto &x : ans) {\n        cout << x << \" \";\n    }\n    return 0;\n}\n"
}