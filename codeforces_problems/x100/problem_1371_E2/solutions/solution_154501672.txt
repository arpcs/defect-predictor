{
    "id": 154501672,
    "contestId": 1371,
    "creationTimeSeconds": 1650633719,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "KingRayuga"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 5734400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#pragma GCC optimize(\"O3,unroll-loops\")\r\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\r\n#define int long long\r\n#define endl '\\n'\r\n#define fastio ios_base::sync_with_stdio(false);cin.tie(NULL);\r\n\r\nstruct custom_hash {\r\n    static uint64_t splitmix64(uint64_t x) {\r\n        x += 0x9e3779b97f4a7c15;\r\n        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n        return x ^ (x >> 31);\r\n    }\r\n\r\n    size_t operator()(uint64_t x) const {\r\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n        return splitmix64(x + FIXED_RANDOM);\r\n    }\r\n};\r\n\r\nsigned main(void)\r\n{\r\n    fastio;\r\n    int t = 1;\r\n    //cin>>t;\r\n    while(t--){\r\n        int n,p;\r\n        cin>>n>>p;\r\n        int arr[n];\r\n        for(int i=1;i<=n;i++){ \r\n            cin>>arr[i];\r\n        }\r\n        sort(arr+1,arr+n+1);\r\n        int mx = 0;\r\n        for(int i=1;i<=n;i++){\r\n            mx=max(mx,arr[i]-i+1);\r\n        }\r\n        set<int>s1;\r\n        for(int i=mx;i<=arr[n];i++){ \r\n            s1.insert(i);\r\n        }\r\n        for(int i=mx;i<=arr[n]+n;i++)\r\n        {\r\n            int cur = upper_bound(arr+1,arr+n+1,i) - arr;\r\n            if(cur>p)\r\n            {\r\n                if(cur-p>=1 && cur-p<=n){\r\n                    s1.erase(i-(cur-p)+1);\r\n                }\r\n            }\r\n        }\r\n        cout<<s1.size()<<endl;\r\n        for(auto x:s1){\r\n            cout<<x<<endl;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n"
}