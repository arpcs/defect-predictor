{
    "id": 184300872,
    "contestId": 1371,
    "creationTimeSeconds": 1670486477,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "doraty228"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 1638400,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <set>\r\n#include <string>\r\n#include <cstring>\r\n#include <algorithm>\r\n#include <deque>\r\n#include <stack>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\n#include <map>\r\n#include <cmath>\r\n#include<queue>\r\n#include <algorithm>\r\n#include <iomanip>\r\n#define MAX(a, b) if(a < b) swap(a, b)\r\n#define MIN(a, b) if(b < a) swap(a, b)\r\n#define sz(a) ((int32_t)(a).size())\r\n#define _ << \" \" << \r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma optimize(\"O3\")\r\n#define int long long\r\nusing namespace std;\r\n\r\nconst int MAXN = 1e5+100, INF = 1e15, MAXA = 1e6 + 100, base = 31;\r\nconst double eps = 1e-9;\r\nint n, p, a[MAXN], tree[MAXN];\r\nbool f(int x) {\r\n    int ans = 1;\r\n    int pos = 1;\r\n    for (int i = 0; i < n; i++) {\r\n        while (pos < n && a[pos + 1] <= x) pos++;\r\n        int cnt = pos - i;\r\n        ans *= max(0ll, cnt);\r\n        ans %= p;\r\n        x++;\r\n    }\r\n    return ans;\r\n}\r\nvoid solve()\r\n{\r\n    cin >> n >> p;\r\n    for (int i = 1; i <= n; i++) cin >> a[i];\r\n    sort(a + 1, a + n + 1);\r\n    int mn = 0;\r\n    for (int i = 1; i <= n; i++) mn = max(mn, a[i] - i + 1);\r\n    int l = mn, r = 1e9 + 3;\r\n\r\n    if (!f(l)) {\r\n        cout << 0 << '\\n';\r\n        return;\r\n    }\r\n    while (r - l > 1) {\r\n        int mid = (l + r) / 2;\r\n        if (f(mid)) {\r\n            l = mid;\r\n        }\r\n        else r = mid;\r\n    }\r\n    cout << l - mn + 1 << '\\n';\r\n    for (int i = mn; i <= l; i++) cout << i << ' ';\r\n    cout << '\\n';\r\n}\r\nint32_t main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    std::cout.tie(0);\r\n    //freopen(\"input.txt\", \"r\", stdin);\r\n    int t = 1;\r\n    //cin >> t;\r\n    while (t--)\r\n    {\r\n        solve();\r\n    }\r\n}"
}