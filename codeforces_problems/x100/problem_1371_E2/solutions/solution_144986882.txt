{
    "id": 144986882,
    "contestId": 1371,
    "creationTimeSeconds": 1643856050,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "fxhd"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 1433600,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nvector<int> solve(const vector<int>& a, int p) {\r\n  int n = a.size();\r\n  int lower = 0, upper = 1000000007;\r\n  for (int i = 0; i < n; ++i) {\r\n    lower = max(lower, a[i] - i);\r\n    if ((p + i - 1) < n) {\r\n      upper = min(upper, a[p + i - 1] - i);\r\n    }\r\n  }\r\n  vector<int> ans;\r\n  for (int i = lower; i < upper; ++i) {\r\n    ans.push_back(i);\r\n  }\r\n  return ans;\r\n}\r\n\r\nint main() {\r\n  ios_base::sync_with_stdio(false);\r\n  cin.tie(NULL);\r\n  int n, p;\r\n  cin >> n >> p;\r\n  vector<int> a(n);\r\n  for (int i = 0; i < n; ++i) {\r\n    cin >> a[i];\r\n  }\r\n  sort(a.begin(), a.end());\r\n  vector<int> ans = solve(a, p);\r\n  int n_x = ans.size();\r\n  cout << n_x << '\\n';\r\n  for (int i = 0; i < n_x; ++i) {\r\n    if (i > 0) cout << ' ';\r\n    cout << ans[i];\r\n  }\r\n  cout << endl;\r\n}\r\n"
}