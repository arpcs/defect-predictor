{
    "id": 209901725,
    "contestId": 1371,
    "creationTimeSeconds": 1686946347,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "kingmessi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 819200,
    "source": "#include<bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp> // Common file\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#define ll long long\r\n#define int long long\r\n#define rep(i,a,b) for(int i=a;i<b;i++)\r\n#define rrep(i,a,b) for(int i=a;i>=b;i--)\r\n#define repin rep(i,0,n)\r\n#define di(a) int a;cin>>a;\r\n#define precise(i) cout<<fixed<<setprecision(i)\r\n#define vi vector<int>\r\n#define si set<int>\r\n#define mii map<int,int>\r\n#define take(a,n) for(int j=0;j<n;j++) cin>>a[j];\r\n#define give(a,n) for(int j=0;j<n;j++) cout<<a[j]<<' ';\r\n#define vpii vector<pair<int,int>>\r\n#define sis string s;\r\n#define sin string s;cin>>s;\r\n#define db double\r\n#define be(x) x.begin(),x.end()\r\n#define pii pair<int,int>\r\n#define pb push_back\r\n#define pob pop_back\r\n#define ff first\r\n#define ss second\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define bpc(x) __builtin_popcountll(x) \r\n#define btz(x) __builtin_ctz(x)\r\nusing namespace std;\r\n\r\nusing namespace __gnu_pbds;\r\n\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag,tree_order_statistics_node_update> ordered_set;\r\ntypedef tree<pair<int, int>, null_type,less<pair<int, int> >, rb_tree_tag,tree_order_statistics_node_update> ordered_multiset;\r\n\r\nconst long long INF=1e18;\r\nconst long long M=1e9+7;\r\nconst long long MM=998244353;\r\n  \r\nint power( int N, int M){\r\n    int power = N, sum = 1;\r\n    if(N == 0) sum = 0;\r\n    while(M > 0){if((M & 1) == 1){sum *= power;}\r\n    power = power * power;M = M >> 1;}\r\n    return sum;\r\n}\r\n\r\nint p;\r\n\r\nbool good(int m,vi &a){\r\n    int temp = 0;\r\n    int ind = 0;\r\n    while(ind != (int)a.size()){\r\n        if(a[ind]<=m){\r\n            ind ++;\r\n        }\r\n        else{\r\n            m++;\r\n            if((ind-temp)<=0)return 0;\r\n            temp++;\r\n        }\r\n    }\r\n    return 1;\r\n}\r\n\r\nbool good1(int m,vi &a){\r\n    int temp = 0;\r\n    int ind = 0;\r\n    int mx = 0;\r\n    while(ind != (int)a.size()){\r\n        if(a[ind]<=m){\r\n            ind ++;\r\n        }\r\n        else{\r\n            m++;\r\n            if((ind-temp)<=0)return 0;\r\n            mx=max(mx,ind-temp);\r\n            temp++;\r\n        }\r\n    }\r\n    mx=max(mx,(int)a.size()-temp);\r\n    return ((mx<p)?1:0);\r\n}\r\n\r\nvoid solve()\r\n{\r\n    di(n) cin>>p;\r\n    vi a(n);\r\n    take(a,n);\r\n    sort(be(a));\r\n    int l=0,r=1e9+1;\r\n    while(r>l+1){\r\n        int m = (r+l)/2;\r\n        if(good(m,a))r=m;\r\n        else l = m;\r\n    }\r\n    // cout<<r<<\"hi\\n\";\r\n    if(r==1e9+1){cout<<\"0\\n\";return;}\r\n    if(!good1(r,a)){cout<<\"0\\n\";return;}\r\n    l=r;r=1e9+1;\r\n    int re = l;\r\n    // cout<<good1(4,a)<<\"\\n\";\r\n    while(r>l+1){\r\n        int m = (r+l)/2;\r\n        if(good1(m,a))l=m;\r\n        else r = m;\r\n    }\r\n    cout<<r-re<<\"\\n\";\r\n    rep(i,re,r){cout<<i<<\" \";}cout<<\"\\n\";\r\n}\r\n\r\nsigned main(){\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    #ifdef NCR\r\n        init();\r\n    #endif\r\n    #ifdef SIEVE\r\n        sieve();\r\n    #endif\r\n        solve();\r\n    return 0;\r\n}"
}