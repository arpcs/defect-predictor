{
    "id": 150411630,
    "contestId": 1371,
    "creationTimeSeconds": 1647915494,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "SF-Manman"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 10444800,
    "source": "#include <bits/stdc++.h>\r\n// #include \"atcoder/all\"\r\n// using namespace atcoder;\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int MOD = 1e9 + 7;\r\nconst ll maxn = 2e5 + 5;\r\nvector<ll> arr, brr, crr;\r\nvoid solve();\r\n\r\nint main()\r\n{\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n    cout.precision(10);\r\n    cout << fixed;\r\n\r\n#ifdef LOCAL\r\n    freopen(\"in.txt\", \"r\", stdin);\r\n    // freopen(\"out.txt\", \"w\", stdout);\r\n#endif\r\n\r\n    // freopen(\"input.txt\", \"r\", stdin);\r\n    // freopen(\"output.txt\", \"w\", stdout);\r\n\r\n    solve();\r\n\r\n#ifdef LOCAL\r\n    cerr << endl;\r\n    cerr << \"Time elapsed: \" << 1.0 * clock() / CLOCKS_PER_SEC << \" s.\\n\";\r\n#endif\r\n    return 0;\r\n}\r\n\r\nvoid solve()\r\n{\r\n    int n, p;\r\n    cin >> n >> p;\r\n    arr.resize(n);\r\n    for (int i = 0; i < n; i++)\r\n        cin >> arr[i];\r\n    sort(begin(arr), end(arr));\r\n    int x = 0, c = 0;\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        if (arr[i] > c)\r\n        {\r\n            x += arr[i] - c;\r\n            c = arr[i];\r\n        }\r\n        c += 1;\r\n    }\r\n    vector<int> ans;\r\n    function<int(int, int, int)> dfs = [&](int pos, int cs, int st)\r\n    {\r\n        int ans;\r\n        if (cs >= p)\r\n            return 0;\r\n        else if (pos == n)\r\n            return 1;\r\n        else if (st < arr[pos])\r\n            return dfs(pos + 1, cs + 1 - arr[pos] + st, arr[pos]);\r\n        else\r\n            return dfs(pos + 1, cs + 1, st);\r\n    };\r\n    int pos = 0;\r\n    int l = x - 1, r = arr[n - 1];\r\n    while (l < r)\r\n    {\r\n        int mn = (l + r + 1) / 2;\r\n        int pos = lower_bound(begin(arr), end(arr), mn + 1) - begin(arr) - 1;\r\n        int pk = dfs(pos, pos, mn);\r\n        if (pk)\r\n            l = mn;\r\n        else\r\n            r = mn - 1;\r\n    }\r\n    if (l >= x)\r\n    {\r\n        cout << l - x + 1 << endl;\r\n        for (int i = x; i <= l; i++)\r\n            cout << i << \" \";\r\n        cout << endl;\r\n    }\r\n    else\r\n    {\r\n        cout << 0 << endl;\r\n    }\r\n}"
}