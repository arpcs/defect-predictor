{
    "id": 176807075,
    "contestId": 1371,
    "creationTimeSeconds": 1666039421,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "AboAbdoMC"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 11673600,
    "source": "/*\n           _                   _         _       __  __  _____ \n     /\\   | |            /\\   | |       | |     |  \\/  |/ ____|\n    /  \\  | |__   ___   /  \\  | |__   __| | ___ | \\  / | |     \n   / /\\ \\ | '_ \\ / _ \\ / /\\ \\ | '_ \\ / _` |/ _ \\| |\\/| | |     \n  / ____ \\| |_) | (_) / ____ \\| |_) | (_| | (_) | |  | | |____ \n /_/    \\_\\_.__/ \\___/_/    \\_\\_.__/ \\__,_|\\___/|_|  |_|\\_____|\n*/\n\n// build command:\n// g++ -o \"exe\" \"%f\" -Wall -Wextra -pedantic -std=c++11 -O2 -Wshadow -Wformat=2 -Wfloat-equal -Wconversion -Wlogical-op -Wshift-overflow=2 -Wduplicated-cond -Wcast-qual -Wcast-align -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -D_FORTIFY_SOURCE=2 -fsanitize=address -fsanitize=undefined -fno-sanitize-recover -fstack-protector -D LOCAL -Wno-unused-result\n\n#include <bits/stdc++.h>\nusing namespace std;\n\n#pragma GCC optimize(\"O3,unroll-loops\")\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\n\ntemplate<typename A, typename B> ostream& operator<<(ostream &os, const pair<A, B> &p) { return os << '(' << p.first << \", \" << p.second << ')'; }\ntemplate<typename T_container, typename T = typename enable_if<!is_same<T_container, string>::value, typename T_container::value_type>::type> ostream& operator<<(ostream &os, const T_container &v) { os << '{'; string sep; for (const T &x : v) os << sep << x, sep = \", \"; return os << '}'; }\nvoid dbg_out() { cerr << endl; }\ntemplate<typename Head, typename... Tail> void dbg_out(Head H, Tail... T) { cerr << ' ' << H; dbg_out(T...); }\n#ifdef LOCAL\n#define dbg(...) cerr << \"(\" << #__VA_ARGS__ << \"):\", dbg_out(__VA_ARGS__)\n#else\n#define dbg(...)\n#endif\n\n#define F first\n#define S second\n#define pb push_back\n#define all(x) (x).begin(), (x).end()\n#define sz(x) ((int)(x).size())\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\n\n// -------------------------<RNG>------------------------- \n// RANDOM NUMBER GENERATOR\nmt19937 RNG(chrono::steady_clock::now().time_since_epoch().count());  \n#define SHUF(v) shuffle(all(v), RNG); \n// Use mt19937_64 for 64 bit random numbers.\n\nint getrand(int l,int r) {\n\treturn uniform_int_distribution<int>(l, r)(RNG);\n}\n\nconst ld eps = 1e-9;\nconst int mod = 1e9 + 7;\nconst int oo = 1e9 + 7;\nconst ll lloo = 1e18 + 7;\nconst int N = 1e6 + 7;\n\nint n,p,a[N];\n\nint add(int x,int y) {\n\tint ret = ((ll)x+y+p)%p;\n\treturn ret;\n}\n\nvoid solve() {\n\tscanf(\"%d %d\",&n,&p);\n\tfor(int i = 0 ; i < n ; i++) scanf(\"%d\",a+i);\n\tsort(a,a+n);\n\tint L = 0,R = 0;\n\tfor(int i = 0 ; i < n ; i++) {\n\t\tL = max(L,a[i]-i);\n\t\tR = max(R,a[i]);\n\t}\n\tint ptr = 0;\n\tmap<int,int> freq;\n\tmultiset<int> st;\n\tfor(int i = L ; i <= R ; i++) {\n\t\twhile(ptr < n && a[ptr] <= i) ptr++;\n\t\tfreq[i] = ptr-i;\n\t\tst.insert(ptr-i);\n\t}\n\tvector<int> vec;\n\tfor(int x = L ; x <= R ; x++) {\n\t\tauto it = st.end();\n\t\tit--;\n\t\tif ((*it)+x < p) vec.pb(x);\n\t\tst.erase(st.find(freq[x]));\n\t}\n\tprintf(\"%d\\n\",sz(vec));\n\tfor(auto x:vec) printf(\"%d \",x);\n\tputs(\"\");\n}\n\nint main() {\n\t// freopen(\"in\",\"r\",stdin);\n\t// freopen(\"out\",\"w\",stdout);\n\tint T = 1;\n\t//scanf(\"%d\",&T);\n\twhile(T--) solve();\n\treturn 0;\n}\n"
}