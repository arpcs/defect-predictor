{
    "id": 161330684,
    "contestId": 1371,
    "creationTimeSeconds": 1655747172,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "Weobe"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 20,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 3788800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define sp \" \"\r\n#define endl \"\\n\"\r\n#define rep(i, a, b) for(int i = a; i < b; i++)\r\n#define modulo 1000000007\r\n#define pb push_back\r\n#define debug(v) for(int i = 0; i < v.size(); i++) cout<<v[i]<<sp, cout<<endl;\r\n#define fileio() freopen(\"input.txt\", \"r\", stdin), freopen(\"output.txt\", \"w\", stdout);\r\n#define st first\r\n#define nd second\r\n#define pii pair<int, int>\r\n#define N 100005\r\n\r\n\r\nint arr[N], diff[N], mini[N], maks[N];\r\n\r\nint main()\r\n{\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(NULL);\r\n\r\n\t#ifndef ONLINE_JUDGE\r\n\tfileio();\r\n\t#endif\r\n\r\n\tint n, p;\r\n\tcin>>n>>p;\r\n\tfor (int i = 1; i <= n; i++) cin>>arr[i];\r\n\tsort(arr + 1, arr + 1 + n);\r\n\tint it = 1, lim = arr[n];\r\n\tvector<pii> v;\r\n\twhile(it <= n)\r\n\t{\r\n\t\tint last = arr[it], cnt = 0;\r\n\t\twhile(it <= n && arr[it] == last) it++, cnt++;\r\n\t\tv.pb({last, cnt});\r\n\t}\r\n\tit = 0;\r\n\tint last = v[0].st - v[0].nd;\r\n\tfor (int i = 0; i < v.size(); i++)\r\n\t{\r\n\t\tdiff[i + 1] = diff[i] - (v[i].st - last) + v[i].nd;\r\n\t\tlast = v[i].st;\r\n\t\t//cout<<i<<sp<<diff[i + 1]<<endl;\r\n\t}\r\n\tmaks[v.size() + 1] = -modulo, mini[v.size() + 1] = modulo;\r\n\tfor (int i = v.size(); i >= 1; i--)\r\n\t{\r\n\t\tmaks[i] = max(maks[i + 1], diff[i]), mini[i] = min(mini[i + 1], diff[i]);\r\n\t\t///cout<<i<<sp<<diff[i]<<sp<<maks[i]<<sp<<mini[i]<<endl;\r\n\t}\r\n\r\n\tit = 0;\r\n\tint sum = 0;\r\n\tvector<int> ans;\r\n\tmaks[v.size() + 1] = modulo;\r\n\tv.pb({v.back().st + 1, v.back().nd});\r\n\tfor (int i = 0; i < v.size() - 1; i++)\r\n\t{\r\n\t\tint curr = v[i].st;\r\n\t\tint lim = v[i + 1].st;\r\n\t\twhile(it < v.size() && v[it].st <= v[i].st)\r\n\t\t{\r\n\t\t\tsum += v[it].nd;\r\n\t\t\tit++;\r\n\t\t}\r\n\t\tint d = sum - diff[i + 1];\r\n\t\tint l = curr;\r\n\t\tl = max(l, -mini[i + 1] - d + 1 + curr);\r\n\t\tint r = min(lim, diff[i + 1] + i - maks[i + 2] + 1);\r\n\t\tif (p - d - diff[i + 1] > 0) for (int i = l; i < r; i++) ans.pb(i);\r\n\t\tl = max(l, diff[i + 1] + i - maks[i + 2] + 1);\r\n\t\tr = min(lim, p - maks[i + 2] - d + curr);\r\n\t\t//cout<<i<<sp<<mini[i + 1]<<sp<<maks[i + 2]<<sp<<d<<sp<<l<<sp<<r<<endl;\r\n\t\tfor (int i = l; i < r; i++) ans.pb(i);\r\n\t}\r\n\tcout<<ans.size()<<endl;\r\n\tfor (auto i : ans) cout<<i<<sp;\r\n\tcout<<endl;\r\n\tcerr << \"time taken : \" << (float)clock() / CLOCKS_PER_SEC << \" secs\" << endl;\r\n\treturn 0;\r\n}\r\n\r\n"
}