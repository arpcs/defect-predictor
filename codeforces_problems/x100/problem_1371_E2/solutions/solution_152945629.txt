{
    "id": 152945629,
    "contestId": 1371,
    "creationTimeSeconds": 1649348079,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "sushmanth.dampur8780"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "PyPy 3",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 655,
    "memoryConsumedBytes": 12083200,
    "source": "from sys import stdin\r\ninput = stdin.readline\r\n\r\ndef b_s(key):\r\n\r\n    l , h = 0 , n - 1\r\n    ans = 0\r\n    while(l <= h):\r\n\r\n        mid = (l + h)//2\r\n\r\n        if(a[mid] <= key):\r\n            ans = mid + 1\r\n            l = mid + 1\r\n        else:\r\n            h = mid - 1\r\n\r\n    return ans\r\n\r\n\r\ndef possible(x):\r\n\r\n    for i in range(n):\r\n\r\n        count = b_s(x + i) - i\r\n\r\n        if(count == 0):return False\r\n\r\n    return True\r\n\r\n\r\ndef check(x):\r\n\r\n    for i in range(n):\r\n\r\n        count = b_s(x + i) - i\r\n\r\n        if(count >= p):return True\r\n\r\n    return False\r\n\r\n\r\ndef answer():\r\n\r\n    l , h = 0 , 10 ** 9\r\n\r\n    lower = 0\r\n    while(l <= h):\r\n\r\n        mid = (l + h)//2\r\n\r\n        if(possible(mid)):\r\n            lower = mid\r\n            h = mid - 1\r\n        else:\r\n            l = mid + 1\r\n\r\n\r\n    l , h = lower , 10 ** 9\r\n    upper = lower\r\n    while(l <= h):\r\n\r\n        mid = (l + h)//2\r\n\r\n        if(check(mid)):\r\n            h = mid - 1\r\n        else:\r\n            upper = mid + 1\r\n            l = mid + 1\r\n\r\n\r\n    print(upper - lower)\r\n    ans = []\r\n    for i in range(lower , upper):\r\n        ans.append(i)\r\n\r\n    print(*ans)\r\n\r\n\r\nfor T in range(1):\r\n\r\n    n , p = map(int,input().split())\r\n    a = sorted(list(map(int,input().split())))\r\n\r\n\r\n    answer()\r\n"
}