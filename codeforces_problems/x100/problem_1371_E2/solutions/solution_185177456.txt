{
    "id": 185177456,
    "contestId": 1371,
    "creationTimeSeconds": 1671019577,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "world_classic"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 717,
    "memoryConsumedBytes": 88576000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\n//#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\r\n//order_of_key (k) : Number of items strictly smaller than k .\r\n//find_by_order(k) : K-th element in a set (counting from zero).\r\ntypedef long long int ll;\r\nint main()\r\n{\r\n    ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n    mt19937 rng((unsigned int) chrono::steady_clock::now().time_since_epoch().count());\r\n    auto start=chrono::high_resolution_clock::now();\r\n    default_random_engine generator;\r\n    //uniform_int_distribution<int> distribution(l,r); \r\n    //int nn=distribution(generator); A random number from l to r\r\n    //code here\r\n    int t=1;\r\n    // cin>>t;\r\n    while(t--)\r\n    {\r\n    \tint n,p;\r\n    \tcin>>n>>p;\r\n    \tint a[n];\r\n    \tmap<int,ll> cnt;\r\n    \tfor(int i=0;i<n;i++){\r\n    \t\tcin>>a[i];\r\n    \t\tcnt[a[i]]++;\r\n    \t}\r\n    \tsort(a,a+n);\r\n    \tvector<int> ans;\r\n    \tll l=a[0];\r\n    \tll r=a[n-1];\r\n    \tll l1;\r\n    \twhile(l<=r){\r\n    \t\tll x=(l+r)/2;\r\n    \t\tint fl=1;\r\n    \t\tll temp=0;\r\n    \t\tfor(int i=0;i<n;i++)\r\n    \t\t{\r\n    \t\t\tif(a[i]<=x)\r\n    \t\t\t\ttemp++;\r\n    \t\t}\r\n    \t\tif(temp==0)\r\n    \t\t{\r\n    \t\t\tl=x+1;\r\n    \t\t\tcontinue;\r\n    \t\t}\r\n    \t\tfor(int i=1;i<n;i++)\r\n    \t\t{\r\n    \t\t\ttemp--;\r\n    \t\t\ttemp+=cnt[x+i];\r\n    \t\t\tif(temp==0)\r\n    \t\t\t{\r\n    \t\t\t\tfl=0;\r\n    \t\t\t\tbreak;\r\n    \t\t\t}\r\n    \t\t}\r\n    \t\tif(fl)\r\n    \t\t{\r\n    \t\t\tl1=x;\r\n    \t\t\tr=x-1;\r\n    \t\t}\r\n    \t\telse\r\n    \t\t\tl=x+1;\r\n    \t}\r\n    \tll st=l1;\r\n    \tll r1=a[n-1];\r\n    \tll end=-1;\r\n    \twhile(l1<=r1)\r\n    \t{\r\n    \t\tll x=(l1+r1)/2;\r\n    \t\tll temp=0;\r\n    \t\tfor(int i=0;i<n;i++)\r\n    \t\t{\r\n    \t\t\tif(a[i]<=x)\r\n    \t\t\t\ttemp++;\r\n    \t\t}\r\n    \t\tll rem=(temp%p);\r\n    \t\tfor(int i=1;i<n;i++)\r\n    \t\t{\r\n    \t\t\ttemp--;\r\n    \t\t\ttemp+=cnt[x+i];\r\n    \t\t\trem=(rem%p*temp%p)%p;\r\n    \t\t}\r\n    \t\tif(rem==0)\r\n    \t\t{\r\n    \t\t\tr1=x-1;\r\n    \t\t}\r\n    \t\telse\r\n    \t\t{\r\n    \t\t\tend=x;\r\n    \t\t\tl1=x+1;\r\n    \t\t}\r\n    \t}\r\n    \tif(end==-1)\r\n    \t{\r\n    \t\tcout<<0<<endl;\r\n    \t}\r\n    \telse\r\n    \t{\r\n    \t\tcout<<end-st+1<<endl;\r\n    \t\tfor(int i=st;i<=end;i++)\r\n    \t\t{\r\n    \t\t\tcout<<i<<\" \";\r\n    \t\t}\r\n    \t}\r\n    \t// for(int x=a[0];x<=a[n-1];x++)\r\n    \t// {\r\n    \t// \tll temp=0;\r\n    \t// \tfor(int i=0;i<n;i++)\r\n    \t// \t{\r\n    \t// \t\tif(a[i]<=x)\r\n    \t// \t\t\ttemp++;\r\n    \t// \t}\r\n    \t// \tll rem=(temp%p);\r\n    \t// \tfor(int i=1;i<n;i++)\r\n    \t// \t{\r\n    \t// \t\ttemp--;\r\n    \t// \t\ttemp+=cnt[x+i];\r\n    \t// \t\trem=(rem%p*temp%p)%p;\r\n    \t// \t}\r\n    \t// \tif(rem!=0)\r\n    \t// \t{\r\n    \t// \t\tans.push_back(x);\r\n    \t// \t}\r\n    \t// }\r\n    \t// cout<<ans.size()<<endl;\r\n    \t// for(int i=0;i<ans.size();i++)\r\n    \t// \tcout<<ans[i]<<\" \";\r\n    }\r\n    auto stop=chrono::high_resolution_clock::now();\r\n    auto duration=chrono::duration_cast<chrono::microseconds>(stop-start);\r\n    cerr<<duration.count()/1000.0<<\" ms\\n\";\r\n}"
}