{
    "id": 172540755,
    "contestId": 1371,
    "creationTimeSeconds": 1663493107,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "Prgl2001"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 8601600,
    "source": "#include<bits/stdc++.h>\r\n#include<unordered_map>\r\n#include<unordered_set>\r\nusing namespace std;\r\nusing LL = long long;\r\nusing ULL = unsigned long long;\r\nusing PII = pair<int, int>;\r\nusing TP = tuple<int, int, int>;\r\n#define all(x) x.begin(),x.end()\r\n#define mk make_pair\r\n//#define int LL\r\n//#define lc tr[p].ch[0]\r\n//#define rc tr[p].ch[1]\r\n#define endl '\\n'\r\n#define inf 0x3f3f3f3f\r\n#define INF 0x3f3f3f3f3f3f3f3f\r\n#pragma warning(disable : 4996)\r\n#define IOS ios::sync_with_stdio(0),cin.tie(0),cout.tie(0)\r\nconst double eps = 1e-8;\r\nconst LL MOD = 1000000007;\r\nconst LL mod = 998244353;\r\nconst int maxn = 400010;\r\n\r\nLL N, P, A[maxn], D[maxn];\r\n\r\nvoid solve()\r\n{\r\n\tvector<LL>ans;\r\n\tsort(A + 1, A + N + 1);\r\n\tLL mxa = A[N];\r\n\tfor (LL i = max(0LL, mxa - N + 1); i <= max(0LL, mxa - N + 1) + N - 1; i++)\r\n\t{\r\n\t\tLL t = upper_bound(A + 1, A + N + 1, i) - A - 1;\r\n\t\t\tD[((i - t) % P + P) % P]++;\r\n\t}\r\n\tfor (LL x = max(0LL, mxa - N + 1); x < mxa + N - 1; x++)\r\n\t{\r\n\t\tif (!D[x % P])\r\n\t\t\tans.push_back(x);\r\n\t\tLL t = upper_bound(A + 1, A + N + 1, x) - A - 1;\r\n\t\tD[((x - t) % P + P) % P]--;\r\n\t\tt = upper_bound(A + 1, A + N + 1, x + N) - A - 1;\r\n\t\tD[((x + N - t) % P + P) % P]++;\r\n\t}\r\n\tcout << ans.size() << endl;\r\n\tfor (auto& c : ans)\r\n\t\tcout << c << ' ';\r\n\tcout << endl;\r\n}\r\n\r\nint main()\r\n{\r\n\tIOS;\r\n\tcin >> N >> P;\r\n\tfor (int i = 1; i <= N; i++)\r\n\t\tcin >> A[i];\r\n\tsolve();\r\n\r\n\treturn 0;\r\n}"
}