{
    "id": 145480274,
    "contestId": 1371,
    "creationTimeSeconds": 1644178382,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "Naruto_Uzamaki"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 234,
    "memoryConsumedBytes": 24268800,
    "source": "#include <bits/stdc++.h>\r\n//#include <ext/pb_ds/assoc_container.hpp>\r\n//#include <ext/pb_ds/tree_policy.hpp>\r\n#define lli int\r\ntypedef long long ll;\r\n#define rep(i,n) for(lli i = 0; i < n; i++)\r\n#define reps(i,a,n) for(lli i = a; i < n; i++)\r\n#define reps1(i,a,n) for(int i = a; i>=n; i--)\r\n#define s(n) cin >> n\r\n#define MAXN 2000010\r\n#define MOD 1000000007\r\n#define csl ios_base::sync_with_stdio(false); cin.tie(NULL)\r\n#define rsz(x,n) x.clear(); x.resize(n)\r\n#define rrsz(x,a,n) x.clear(); x.resize(n,a)\r\n#define wt while(true)\r\n#define all(x) x.begin(),x.end()\r\n#define pb push_back\r\n#define pp pair\r\n#define ff first\r\n#define ss second\r\n#define ls(x) ((2*(x)) + 1)\r\n#define rs(x) ((ls(x)) + 1)\r\n#define md(a,b) (((a) + (b))/2)\r\n#define INF (1e9 + 7)\r\n//#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\r\nusing namespace std;\r\n//using namespace __gnu_pbds;\r\nvector<lli> primes;\r\nvoid Sieve(lli n)\r\n{\r\n    vector<bool>prime(n+1,true);\r\n    for(lli p=2; p*p<=n; p++)\r\n    {\r\n        if (prime[p] == true)\r\n        {\r\n            for (lli i=p*p; i<=n; i += p)\r\n                prime[i] = false;\r\n        }\r\n    }\r\n    for (lli p=2; p<=n; p++)\r\n       if (prime[p])\r\n          primes.push_back(p);\r\n}\r\nlli add(lli a,lli b)\r\n{\r\n    return (((a+b)%MOD)+MOD)%MOD;\r\n}\r\nlli product(lli a,lli b)\r\n{\r\n    return (((ll)a*(ll)b%MOD)+MOD)%MOD;\r\n}\r\nlli f[MAXN+1],inv[MAXN+1];\r\nlli dnc(lli bas,lli power,lli mod) {\r\n  if(power==0)  return 1;\r\n  if(power%2==0) {\r\n    int res=dnc(bas,power/2,mod);\r\n    return product(res,res);\r\n  }\r\n  return product(bas,dnc(bas,power-1,mod));\r\n}\r\nvoid precalc() {\r\n  f[0] = inv[0]=1;\r\n  for(lli temp=1;temp<=MAXN;temp++) {\r\n    f[temp]=product(temp,f[temp-1]);\r\n    inv[temp]=product(dnc(temp,MOD-2,MOD),inv[temp-1]);\r\n  }\r\n}\r\nlli comb(lli n,lli k) {\r\n  if(k>n || k<0) return 0;\r\n  return 1ll*f[n]*inv[k]%MOD*inv[n-k]%MOD;\r\n}\r\n// order_of_key (val): returns the no. of values less than val\r\n// find_by_order (k): returns the kth largest element.(0-based)\r\nint n,q;\r\nvector<int>a;\r\nvector<pp<lli,lli>>vec;\r\nvoid solve(int x)\r\n{\r\n    for(int j=0;j<a.size();j++)\r\n    {\r\n    ll c=max(a[j]-x,0);\r\n    vec.pb({(j-c+1)%q,c});\r\n    }\r\n}\r\nint main()\r\n{\r\n    cin>>n>>q;\r\n    a=vector<int>(n);\r\n    int maxi=0,mini=1;\r\n    rep(i,n){\r\n    cin>>a[i];\r\n    maxi=max(maxi,a[i]);}\r\n    sort(all(a));\r\n    for(int i=0;i<n;i++)mini=max(mini,a[i]-i);\r\n    solve(mini);\r\n    vector<int>ans;\r\n    vector<vector<int>>b(100005);\r\n    multiset<int>st;\r\n    for(auto j:vec){\r\n    b[j.ss].pb(j.ff);\r\n    st.insert(j.ff);}\r\n   // cout<<mini<<endl;\r\n    //for(auto j:vec)cout<<j.ff<<\" \"<<j.ss<<endl;\r\n    for(int i=mini;i<maxi;i++)\r\n    {\r\n        int x=i-mini;\r\n        int y=(q-x%q)%q;\r\n        bool f=0;\r\n        for(auto j:b[x])\r\n        {\r\n            if((j+x)%q==0)f=1;\r\n            st.erase(st.find(j));\r\n        }\r\n        if(f)break;\r\n        if(st.find(y)==st.end())ans.pb(i);\r\n    }\r\n    cout<<ans.size()<<endl;\r\n    for(auto j:ans)cout<<j<<\" \";\r\n    return 0;\r\n}"
}