{
    "id": 149712672,
    "contestId": 1371,
    "creationTimeSeconds": 1647347294,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "devans"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 108,
    "memoryConsumedBytes": 12492800,
    "source": "#include<bits/stdc++.h>\n//#include\"testlib.h\"\nusing namespace std;\n//She is... Dancing Till Her Head Explodes\n#define int long long\ntemplate<typename T> void read(T &x) {\n\tx=0;int f=1;\n\tchar c=getchar();\n\tfor(;!isdigit(c);c=getchar()) if(c=='-') f=-1;\n\tfor(;isdigit(c);c=getchar()) x=(x<<3)+(x<<1)+c-'0';\n\tx=x*f;\n}\nconst int N=200020;\nint n,mod,d[N],e[N],f[N],l,r,mid,s1,s2,s3;\nvector<int>g;\nint qpow(int m,int p){\n\tint res=1;\n\twhile(p){\n\t\tif(p%2==1) res=res*m%mod;\t\n\t\tm=m*m%mod,p/=2;\n\t}\n\treturn res;\n}\nint query(int x){\n\tint l=1,r=n,res=0;\t\n\twhile(l<=r){\n\t\tmid=l+r>>1;\t\n\t\tif(d[mid]<=x) res=mid,l=mid+1;\n\t\telse r=mid-1;\n\t}\n\treturn res;\n}\n/*\n1 2 4 5 5\n2,3,4\n\n2 3 4 5 6 7 8\n2 2 3 5 5 5 5\n2*1*1*2*1\n  2*2*3*2*1\n    3*4*3*2*1\n    \n1 3 5 5 6 6\n\n3,4,5\n\n3 4 5 6 7 8 9 A\n2 2 4 6 6 6 6 6\n2*1*2*3*2*1\n  2*3*4*3*2*1\n    4*5*4*3*2*1\n    \n3 4 5 6\n2 2 3 4\n2*1*1*1\n  2*2*2*1\n  \t3*3*2*1\n\n6 7 8 9 0 1 2\n3 3 3 4 4 4 4\n3*2*1*1\n  3*2*2*2\n    3*3*3*2\n*/\nmap<int,int>mp;\nsigned main(){\n\tread(n),read(mod);\n\tfor(int i=1;i<=n;i++) read(d[i]);\n\tsort(d+1,d+1+n);\n\tl=1,r=d[n];\n\twhile(l<=r){\n\t\tmid=l+r>>1,s3=mid;\n\t\tfor(int i=1;i<=n;i++) if(s3>=d[i]) s3++;\n\t\tif(s3>=d[n]) s1=mid,r=mid-1;\n\t\telse l=mid+1;\n\t}\n\ts2=d[n]-1;\n\tfor(int i=s1;i<=s1+n-1;i++) e[i-s1+1]=query(i);\n\tf[0]=1;\n\tfor(int i=1;i<=n;i++) f[i]=e[i]-(i-1),mp[f[i]%mod]++;\n\tfor(int i=s1;i<=s2;i++){\n\t\tif(mp[((s1-i)%mod+mod)%mod]==0) g.push_back(i);\t\n\t\tmp[f[i-s1+1]%mod]--;\n\t\tf[i-s1+n+1]=((s1-i)%mod+mod)%mod;\n\t\tmp[f[i-s1+n+1]%mod]++;\n\t}\n\tcout<<g.size()<<endl;\n\tfor(int i=0;i<g.size();i++) cout<<g[i]<<' ';cout<<endl;\n\treturn 0;\n}\n"
}