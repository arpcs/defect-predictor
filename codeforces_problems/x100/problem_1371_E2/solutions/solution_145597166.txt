{
    "id": 145597166,
    "contestId": 1371,
    "creationTimeSeconds": 1644285800,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1371,
        "index": "E2",
        "name": "Asterism (Hard Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1371,
        "members": [
            {
                "handle": "tnakao"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1593610500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 409600,
    "source": "/* -*- coding: utf-8 -*-\r\n *\r\n * 1371E2.cc: E2. Asterism (Hard Version)\r\n */\r\n\r\n#include<cstdio>\r\n#include<algorithm>\r\n \r\nusing namespace std;\r\n\r\n/* constant */\r\n\r\nconst int MAX_N = 100000;\r\nconst int MAX_A = 1000000000;\r\n\r\n/* typedef */\r\n\r\n/* global variables */\r\n\r\nint as[MAX_N];\r\n\r\n/* subroutines */\r\n\r\nbool check(int n, int p, int x) {\r\n  for (int i = 0, j = 0; i < n; i++) {\r\n    while (j < n && x + i >= as[j]) j++;\r\n    if (j - i >= p) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\n/* main */\r\n\r\nint main() {\r\n  //freopen(\"input.txt\", \"r\", stdin);\r\n  //freopen(\"output.txt\", \"w\", stdout);\r\n\r\n  int n, p;\r\n  scanf(\"%d%d\", &n, &p);\r\n\r\n  for (int i = 0; i < n; i++) scanf(\"%d\", as + i);\r\n  sort(as, as + n);\r\n\r\n  int minx = as[0];\r\n  for (int i = 1; i < n; i++) minx = max(minx, as[i] - i);\r\n  //printf(\"minx=%d\\n\", minx);\r\n\r\n  int x0 = minx - 1, x1 = MAX_A;\r\n  while (x0 + 1 < x1) {\r\n    int x = (x0 + x1) / 2;\r\n    if (check(n, p, x)) x0 = x;\r\n    else x1 = x;\r\n  }\r\n\r\n  printf(\"%d\\n\", x0 - (minx - 1));\r\n  for (int i = minx; i <= x0; i++)\r\n    printf(\"%d%c\", i, (i < x0) ? ' ' : '\\n');\r\n  return 0;\r\n}\r\n",
    "suggested_categories": [
        "algorithm",
        "binary search",
        "data structures",
        "sorting",
        "efficient code",
        "optimization",
        "numeric computation",
        "problem solving",
        "code quality",
        "code efficiency",
        "code optimization",
        "programming contest",
        "competitive programming",
        "mathematics",
        "computer science",
        "c++ programming",
        "algorithmic thinking",
        "programming logic",
        "logical thinking",
        "programming competitions"
    ]
}