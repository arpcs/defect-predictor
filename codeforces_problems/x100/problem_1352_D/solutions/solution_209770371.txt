{
    "id": 209770371,
    "contestId": 1352,
    "creationTimeSeconds": 1686837796,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1352,
        "index": "D",
        "name": "Alice, Bob and Candies",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 1352,
        "members": [
            {
                "handle": "pring"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1589034900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define int long long\r\ntypedef pair<int, int> pii;\r\n\r\nconst int MXN = 1005;\r\nint n, a, b, pre, r;\r\ndeque<int> dq;\r\n\r\nint EAT(int &p, int pre, bool isback) {\r\n    // cout << \"EAT \" << p << ' ' << pre << ' ' << isback << endl;\r\n    int now = 0;\r\n    while (dq.size() && now <= pre) {\r\n        if (isback) {\r\n            now += dq.back();\r\n            dq.pop_back();\r\n        } else {\r\n            now += dq.front();\r\n            dq.pop_front();\r\n        }\r\n    }\r\n    p += now;\r\n    return now;\r\n}\r\n\r\nvoid solve() {\r\n    cin >> n;\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> a;\r\n        dq.push_back(a);\r\n    }\r\n    a = 0;\r\n    b = 0;\r\n    pre = 0;\r\n    r = 0;\r\n    while (dq.size()) {\r\n        pre = EAT((r & 1 ? b : a), pre, r & 1);\r\n        r++;\r\n    }\r\n    cout << r << ' ' << a << ' ' << b << endl;\r\n}\r\n\r\nint32_t main() {\r\n    cin.tie(0) -> sync_with_stdio(false);\r\n    int t;\r\n    cin >> t;\r\n    while (t--) solve();\r\n    return 0;\r\n}"
}