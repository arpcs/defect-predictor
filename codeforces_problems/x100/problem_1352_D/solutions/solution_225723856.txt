{
    "id": 225723856,
    "contestId": 1352,
    "creationTimeSeconds": 1695953055,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1352,
        "index": "D",
        "name": "Alice, Bob and Candies",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 1352,
        "members": [
            {
                "handle": "gxful_Angindem"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1589034900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n#define debug(x...) cerr << (#x) << \" -> \"; err(x)\r\n#define debugv(x) cerr << (#x) << \" -> \" << \"[ \"; Pv(x); cerr << \" ]\" << endl;\r\n\r\n// \u5feb\u8bfb\u5feb\u5199\r\ninline int read(){int x = 0, f = 1;char ch = getchar();\r\nwhile (ch < '0' || ch > '9'){if (ch == '-')f = -1;ch = getchar();}\r\nwhile (ch >= '0' && ch <= '9')x = x * 10 + ch - '0', ch = getchar();return x * f;}\r\ninline void write(int x){string buffer = \"\";int len = 0;if (x == 0){putchar('0');\r\nreturn ;}if (x < 0){putchar('-');x = -x;}while (x > 0){buffer += char('0' + (x % 10));\r\nx /= 10;len++;}for (int i = len - 1; ~i; --i){putchar(buffer[i]);}return ;}\r\n\r\n// \u8c03\u8bd5\u5de5\u5177\r\ninline void err(){cerr << endl;}template<class _T, class ..._Ts>\r\ninline void err(_T &x, _Ts &...y){cerr << (x) << ' ';err(y...);}\r\ntemplate <class _T>inline void Pv(_T &v){bool idx = false;;for (auto i : v)\r\n{if (idx)cerr << ',';cerr << i;idx = true;}}\r\n\r\n#define x first\r\n#define y second\r\n#define endl '\\n'\r\n#define pc(x) putchar(x)\r\n//#pragma GCC optimize(2)\r\n#pragma GCC optimize(3,\"Ofast\",\"inline\")\r\n#define umap unordered_map\r\n#define uset unordered_set\r\n#define mk make_pair\r\n#define YES puts(\"YES\")\r\n#define NO puts(\"NO\")\r\n#define Yes puts(\"Yes\")\r\n#define No puts(\"No\")\r\n#define yes puts(\"yes\")\r\n#define no puts(\"no\")\r\n#define sget(x) getline(cin,(x))\r\n#define All(x) (x).begin(),(x).end()\r\n#define isf(x) ((x) >= 'a' && (x) <= 'z')\r\n#define isF(x) ((x) >= 'A' && (x) <= 'Z')\r\n#define ___G std::ios::sync_with_stdio(false),cin.tie(0), cout.tie(0)\r\n\r\nconst int MOD = 1000000007;\r\n\r\nint dx[4] = {1, 0, -1, 0};\r\nint dy[4] = {0, 1, 0, -1};\r\n\r\nconst int N = 2e6 + 10, M = 508;\r\n\r\nusing PII = pair<int, int>;\r\n\r\n\r\ninline void solve()\r\n{\r\n\tumap<int,int>a;\r\n\tint n = read();\r\n\tfor(int i = 1;i <= n;++i)\r\n\t{\r\n\t\ta[i] = read();\r\n\t}\r\n\tint Alice = 1,Bob = n,rem = a[Alice++],step = 1;\r\n\tbool who = false;\r\n\tint r[2] = {0,rem};\r\n\twhile(Alice <= Bob)\r\n\t{\r\n\t\tint sum = 0;\r\n\t\tif(!who)\r\n\t\t{\r\n\t\t\twhile(sum <= rem && Alice <= Bob) sum += a[Bob--];\r\n\r\n\t\t\trem = sum;\r\n\t\t}else\r\n\t\t{\r\n\t\t\twhile(sum <= rem && Alice <= Bob) sum += a[Alice++];\r\n\t\t\trem = sum;\r\n\t\t}\r\n\t\tr[who] += rem;\r\n\t\twho = !who;\r\n\t\t++step;\r\n\t}\r\n\tcout << step << ' ' << r[1] << ' ' << r[0] << endl;\r\n}\r\n\r\nsigned main()\r\n{\r\n\tint ___t = 1, ___tt = N;\r\n\t//___G;\r\n//\tfreopen(\"a.txt\",\"r\",stdin);\r\n\t//cin >> ___t;\r\n\t___t = read();\r\n\twhile (___t--)\r\n\t{\r\n\t\tsolve();\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n",
    "suggested_categories": [
        "algorithm",
        "data structures",
        "c++",
        "code optimization",
        "debugging",
        "input/output handling",
        "mathematical computations",
        "problem solving",
        "error handling",
        "performance tuning",
        "code reading",
        "standard template library",
        "io streams",
        "variable naming",
        "variable initialization",
        "bit manipulation",
        "conditional statements",
        "loop optimization",
        "code styling",
        "function definition"
    ]
}