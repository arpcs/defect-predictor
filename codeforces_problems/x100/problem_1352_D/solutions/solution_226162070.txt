{
    "id": 226162070,
    "contestId": 1352,
    "creationTimeSeconds": 1696164177,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1352,
        "index": "D",
        "name": "Alice, Bob and Candies",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 1352,
        "members": [
            {
                "handle": "Yoystc0n"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1589034900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define ull unsigned ll\r\n#define eps 1e-6\r\n// const ll mod=1e9+7;\r\nconst int N = 1e4;\r\nint a[N], pre[N], suf[N];\r\nint last;\r\nbool check1(int idx, int lf)\r\n{\r\n    return pre[idx] - pre[lf] > last;\r\n}\r\nbool check2(int idx, int rf)\r\n{\r\n    return suf[idx] - suf[rf] > last;\r\n}\r\n\r\nsigned main()\r\n{\r\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n    int t;\r\n    cin >> t;\r\n    while (t--)\r\n    {\r\n        int n;\r\n        cin >> n;\r\n        memset(pre, 0, sizeof pre / N * (n + 3));\r\n        memset(pre, 0, sizeof suf / N * (n + 3));\r\n        for (int i = 1; i <= n; i++)\r\n            cin >> a[i];\r\n        for (int i = 1; i <= n; i++)\r\n            pre[i] = pre[i - 1] + a[i];\r\n        for (int i = n; i >= 1; i--)\r\n        {\r\n            suf[i] = suf[i + 1] + a[i];\r\n        }\r\n        int cnt = 1, alice = 0, bob = 0;\r\n        last = alice = a[1];\r\n        int lf = 1, rf = n + 1;\r\n        while (1)\r\n        {\r\n            if (lf + 1 < rf)\r\n                cnt++;\r\n            int l = lf, r = rf;\r\n            if (cnt & 1)\r\n            {\r\n                while (l + 1 < r)\r\n                {\r\n                    int mid = l + r >> 1;\r\n                    if (check1(mid, lf))\r\n                    {\r\n                        r = mid;\r\n                    }\r\n                    else\r\n                    {\r\n                        l = mid;\r\n                    }\r\n                }\r\n                if (r == rf)\r\n                {\r\n                    alice += pre[rf - 1] - pre[lf];\r\n                    break;\r\n                }\r\n                last = pre[r] - pre[lf];\r\n                alice += last;\r\n                lf = r;\r\n            }\r\n\r\n            else\r\n            {\r\n                while (l + 1 < r)\r\n                {\r\n                    int mid = l + r >> 1;\r\n                    if (check2(mid, rf))\r\n                    {\r\n                        l = mid;\r\n                    }\r\n                    else\r\n                    {\r\n                        r = mid;\r\n                    }\r\n                }\r\n                if (l == lf)\r\n                {\r\n                    bob += suf[lf + 1] - suf[rf];\r\n                    break;\r\n                }\r\n                last = suf[l] - suf[rf];\r\n                bob += last;\r\n                rf = l;\r\n            }\r\n        }\r\n        cout << cnt << \" \" << alice << \" \" << bob << \"\\n\";\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}