{
    "id": 208168323,
    "contestId": 758,
    "creationTimeSeconds": 1685710706,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 758,
        "index": "C",
        "name": "Unfair Poll",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 758,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1484838300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// Author:Md. Liad Hossain\n// KUET ECE 2K18\n\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp> // Common file\n#include <ext/pb_ds/tree_policy.hpp>\n#pragma GCC optimize(\"O3,unroll-loops\")\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\nusing namespace std;\nusing namespace __gnu_pbds;\n#define int long long int\n#define ll long long \n#define nl '\\n'\n#define ff first\n#define ss second\n#define pf push_front\n#define pb push_back\n#define eb emplace_back\n#define pof pop_front\n#define pob pop_back\n#define fbo find_by_order\n#define ook order_of_key\n#define FOR(i, n) for (int i = 0; i < (int)n; i++)\n#define F0R(j, n) for (int j = 1; j <= (int)n; j++)\n#define ROF(i, n) for (int i =(int) n - 1; i >= 0; i--)\n#define R0F(i, n) for (int i = (int)n; i >= 1; i--)\n#define all(v) v.begin(), v.end()\n#define lb lower_bound\n#define ub upper_bound\n#define yes cout << \"YES\" << nl\n#define no cout << \"NO\" << nl\n#define mod 1000000007 //1000000007 998244353\n#define setbit __builtin_popcount\n#define elif else if\n#define mem0(a) memset(a, 0, sizeof(a))\n#define mem1(a) memset(a, -1, sizeof(a))\n#define inf 9000000000000000000\n#define eps 1e-9\n// #define pi 2.0 * acos(0.0)\ntemplate <class T>\nusing oset = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\n// struct custom_hash {\n//   static uint64_t splitmix64(uint64_t x) {\n//     x += 0x9e3779b97f4a7c15;\n//     x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\n//     x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\n//     return x ^ (x >> 31);\n//   }\n//   size_t operator()(uint64_t x) const {\n//     static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\n//     return splitmix64(x + FIXED_RANDOM);\n//   }\n// };\n\n// knight moves...\n// int dx[]={-1,-2,-2,-1,1,2,2,1};\n// int dy[]={-2,-1,1,2,2,1,-1,-2};\n\n// grid moves without diagonal\n// int dx[] = {0, -1, 0, 1};\n// int dy[] = {-1, 0, 1, 0};\n\n// only all diagonal moves\n//  int dx[]={-1,-1,1,1};\n//  int dy[]={-1,1,1,-1};\n\n// grid moves with diagonal\n// int dx[]={0,-1,-1,-1,0,1,1,1};\n// int dy[]={-1,-1,0,1,1,1,0,-1};\n\n//*************************Code Begins Here*************************//\n\n\nvoid solve(){   \n    int n,m,k,x,y;\n    cin>>n>>m>>k>>x>>y;\n    if(k<=n*m){\n        int have=(x-1)*m+y;\n        int sergie=(k>=have?1:0);\n        int mini=1;\n        if(k<n*m)mini=0;\n        cout<<1<<' '<<mini<<' '<<sergie<<nl;\n        return;\n    }\n    \n    if(n==1){\n        int maxi=k/m,mini=k/m,sergie=k/m;\n        if(k%m)maxi++;\n        k%=m;\n        if(k>=y)sergie++;\n        cout<<maxi<<' '<<mini<<' '<<sergie<<nl;\n        return;\n    }\n\n    int div=1+(k-n*m)/((n-1)*m);\n\n    //cout<<div<<nl;\n    if(div==0){\n        int maxi=1,mini=0,sergie=0;\n        if(k>=(x-1)*m+y)sergie++;\n        cout<<maxi<<' '<<mini<<' '<<sergie<<nl;\n        return;\n    }\n    if(div==1){\n        int maxi=1,mini=1,sergie=1;\n        k-=(n*m);\n        if(k)maxi++;\n        if(x!=n){\n            if(k>=(n-x-1)*m+y)sergie++;\n        }\n        cout<<maxi<<' '<<mini<<' '<<sergie<<nl;\n        return;\n    }\n\n    int n1=0,n2=0;\n    n1=(div-1)/2+1;\n    if(div&1)n2=n1;\n    else n2=n1+1;\n    int maxi=div;\n    int cnt=(n1*m)+(n2*m)+(div*m*(n-2));\n    if(k-cnt)maxi++;\n    int mini=n1;\n    //cout<<div<<' '<<n1<<' '<<n2<<' '<<mini<<nl;\n    int sergie;\n    if(x==1)sergie=n2;\n    else if(x==n)sergie=n1;\n    else sergie=div;\n    k-=cnt;\n    if(div&1){\n        if(x!=n){\n            if(k>=(n-x-1)*m+y)sergie++;\n        }\n    }\n    else{\n        if(x!=1){\n            if(k>=(x-2)*m+y)sergie++;\n        }\n    }\n\n    cout<<maxi<<' '<<mini<<' '<<sergie<<nl;\n}\n\nsigned main()\n{\n    //#ifndef ONLINE_JUDGE\n        // freopen(\"input.txt\", \"r\", stdin);\n        // freopen(\"output.txt\", \"w\", stdout);\n    //#endif\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int t = 1;\n    //cin >> t;\n    while (t--)\n    {\n        solve();\n    }\n    return 0;\n}\n \t    \t  \t\t\t \t  \t\t\t \t\t   \t"
}