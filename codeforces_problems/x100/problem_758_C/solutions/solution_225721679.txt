{
    "id": 225721679,
    "contestId": 758,
    "creationTimeSeconds": 1695949899,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 758,
        "index": "C",
        "name": "Unfair Poll",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 758,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1484838300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 111,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "// Judges with GCC >= 12 only needs Ofast\n// #pragma GCC optimize(\"O3,no-stack-protector,fast-math,unroll-loops,tree-vectorize\")\n// MLE optimization\n// #pragma GCC optimize(\"conserve-stack\")\n// Old judges\n// #pragma GCC target(\"sse4.2,popcnt,lzcnt,abm,mmx,fma,bmi,bmi2\")\n// New judges. Test with assert(__builtin_cpu_supports(\"avx2\"));\n// #pragma GCC target(\"avx2,popcnt,lzcnt,abm,bmi,bmi2,fma,tune=native\")\n// Atcoder\n// #pragma GCC target(\"avx2,popcnt,lzcnt,abm,bmi,bmi2,fma\")\n/*\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\ntypedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;\n- insert(x),erase(x)\n- find_by_order(k): return iterator to the k-th smallest element\n- order_of_key(x): the number of elements that are strictly smaller\n*/\n\n#include<bits/stdc++.h>\nusing namespace std;\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\nuniform_real_distribution<> pp(0.0,1.0);\n#define int long long\n#define ld long double\n#define pii pair<int,int>\n#define piii pair<pii,int>\n#define mpp make_pair\n#define fi first\n#define se second\nconst int inf=1e18;\nconst int mod=998244353;\nconst int maxn=200005;\nconst int bl=650;\nconst int maxs=655;\nconst int maxm=200005;\nconst int maxq=1000005;\nconst int maxl=20;\nconst int maxa=1000000;\nconst int root=3;\nint power(int a,int n){\n    int res=1;\n    while(n){\n        if(n&1) res=res*a%mod;\n        a=a*a%mod;n>>=1;\n    }\n    return res;\n}\nconst int iroot=power(3,mod-2);\nconst int base=101;\n\nint a[105][105];\n\nvoid solve(){\n    int n,m,k,x,y;cin >> n >> m >> k >> x >> y;\n    if(n==1){\n        int d=k/(n*m),r=k%(n*m);\n        cout << d+(r!=0) << ' ' << d << ' ' << d+(y<=r) << '\\n';\n    }\n    else{\n        if(k<=n*m){\n            cout << 1 << ' ' << (k==n*m) << ' ' << ((x-1)*m+y<=k) << '\\n';\n        }\n        else{\n            k-=n*m;\n            int d=k/((n-1)*m),mm=d,up=(d+1)/2,down=d-up;k%=(n-1)*m;\n\n            for(int i=1;i<=n;i++){\n                for(int j=1;j<=m;j++){\n                    if(i==1) a[i][j]=up+1;\n                    else if(i==n) a[i][j]=down+1;\n                    else a[i][j]=mm+1;\n                }\n            }\n\n            if(d%2==1){\n                for(int i=2;i<=n;i++){\n                    for(int j=1;j<=m;j++){\n                        if(k==0) break;\n                        k--;a[i][j]++;\n                    }\n                }\n            }\n            else{\n                for(int i=n-1;i>=1;i--){\n                    for(int j=1;j<=m;j++){\n                        if(k==0) break;\n                        k--;a[i][j]++;\n                    }\n                }\n            }\n            int Max=0,Min=inf;\n            for(int i=1;i<=n;i++){\n                for(int j=1;j<=m;j++){\n                    Max=max(Max,a[i][j]);\n                    Min=min(Min,a[i][j]);\n                }\n            }\n            cout << Max << ' ' << Min << ' ' << a[x][y] << '\\n';\n        }\n    }\n}\n\nsigned main(){\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);cout.tie(NULL);\n    int test=1;//cin >> test;\n    while(test--) solve();\n}\n\n\t    \t \t\t\t\t    \t\t \t \t\t  \t   \t"
}