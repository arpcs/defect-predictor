{
    "id": 217094393,
    "contestId": 758,
    "creationTimeSeconds": 1691140343,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 758,
        "index": "C",
        "name": "Unfair Poll",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 758,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1484838300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 111,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include<bits/stdc++.h>\n#define ll long long\n#define ull unsigned long long\n#define oo 0x3f3f3f3fLL\n#define INF 0x3f3f3f3f3f3f3f3fLL\n#define mem(a,n) memset((a),n,sizeof (a))\n#define sz(s) (int) (s.size())\n#define all(v) v.begin(), v.end()\nvoid fast();\nll gcd(ll x, ll y) { return(!y ? x : gcd(y, x % y)); }\nll lcm(ll x, ll y) { return x / gcd(x, y) * y; }\nint dx[]{ 1, -1, 0, 0, 1, 1, -1, -1 };\nint dy[]{ 0, 0, 1, -1, 1, -1, 1, -1 };\nusing namespace std;\nvoid solve() {\n    int n, m, x, y;\n    ll k;\n    cin >> n >> m >> k >> x >> y;\n    vector<vector<ll>>v(n + 1, vector<ll>(m + 1));\n    for (int i = 1; i <= n && k; i++)\n        for (int j = 1; j <= m && k; j++) {\n            v[i][j]++;\n            k--;\n        }\n    for (int i = n - 1; i >= 1 && k; i--) {\n        for (int j = 1; j <= m&&k; j++) {\n            v[i][j]++;\n            k--;\n        }\n    }\n    ll mn = LLONG_MAX, mx = LLONG_MIN;\n    if (n == 1) {\n        ll cnt = k / m;\n        k %= m;\n        for (int i = 1; i <= m; i++) {\n            v[1][i] += cnt;\n            if (k) {\n                v[1][i]++;\n                k--;\n            }\n            mx = max(mx, v[1][i]);\n            mn = min(mn, v[1][i]);\n        }\n    }\n    else {\n        ll cnt = k / ((n - 1)*m);\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= m; j++) {\n                if (i == 1 || i == n) {\n                    v[i][j] += (cnt + (i == n)) / 2;\n                }\n                else {\n                    v[i][j] += cnt;\n                }\n            }\n        }\n        ll rem = (k % ((n - 1)*m));\n        \n        if (cnt % 2) {\n            for (int j = 1; j <= m; j++) {\n                mn = min(mn, v[n][j]);\n                mx = max(mx, v[n][j]);\n            }\n            for (int i = n - 1; i > 0; i--)\n                for (int j = 1; j <= m; j++) {\n                    if (rem) {\n                        v[i][j]++;\n                        rem--;\n                    }\n                    mn = min(mn, v[i][j]);\n                    mx = max(mx, v[i][j]);\n\n                }\n        }\n        else {\n            for (int j = 1; j <= m; j++) {\n                mn = min(mn, v[1][j]);\n                mx = max(mx, v[1][j]);\n            }\n            for (int i = 2; i <= n ; i++)\n                for (int j = 1; j <= m ; j++) {\n                    if (rem) {\n                        v[i][j]++;\n                        rem--;\n                    }\n                    mn = min(mn, v[i][j]);\n                    mx = max(mx, v[i][j]);\n                }\n        }\n    }\n    cout << mx << \" \" << mn << \" \" << v[x][y];\n\n}\nint main() {\n\n    fast();\n    int t=1; //cin >> t;\n    while (t--)\n        solve();\n\n    return 0;\n}\nvoid fast() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n}\n\n   \t\t    \t\t\t\t     \t\t \t\t  \t\t\t \t\t"
}