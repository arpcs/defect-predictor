{
    "id": 194736411,
    "contestId": 758,
    "creationTimeSeconds": 1677205119,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 758,
        "index": "C",
        "name": "Unfair Poll",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 758,
        "members": [
            {
                "handle": "smitbarmase"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1484838300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 111,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\nconst int MOD = 1000000007;\r\n\r\nint main() {\r\n  ios_base::sync_with_stdio(false);\r\n  cin.tie(NULL);\r\n  int n, m, x, y;\r\n  ll k;\r\n  cin >> n >> m >> k >> x >> y;\r\n  vector<vector<ll>> a(n, vector<ll>(m));\r\n  if (n == 1) {\r\n    ll x = k / m;\r\n    for (int j = 0; j < m; j++) a[0][j] += x;\r\n    int rem = k % m;\r\n    for (int j = 0; j < rem; j++) a[0][j]++;\r\n  } else {\r\n    if (k >= n * m) {\r\n      k -= n * m;\r\n      for (int i = 0; i < n; i++) {\r\n        for (int j = 0; j < m; j++) {\r\n          a[i][j]++;\r\n        }\r\n      }\r\n\r\n      int t = (n - 1) * m;\r\n      ll cnt = k / t;\r\n      k %= t;\r\n      if (cnt & 1) {\r\n        for (int i = 0; i < n; i++) {\r\n          for (int j = 0; j < m; j++) {\r\n            if (i == 0) {\r\n              a[i][j] += (cnt + 1) / 2;\r\n            } else if (i == n - 1) {\r\n              a[i][j] += cnt / 2;\r\n            } else {\r\n              a[i][j] += cnt;\r\n            }\r\n          }\r\n        }\r\n        for (int i = 1; i < n; i++) {\r\n          for (int j = 0; j < m; j++) {\r\n            if (k > 0) {\r\n              a[i][j]++;\r\n              k--;\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n          if (k == 0) break;\r\n        }\r\n      } else {\r\n        for (int i = 0; i < n; i++) {\r\n          for (int j = 0; j < m; j++) {\r\n            if (i == 0 || i == n - 1) {\r\n              a[i][j] += cnt / 2;\r\n            } else {\r\n              a[i][j] += cnt;\r\n            }\r\n          }\r\n        }\r\n        for (int i = n - 2; i >= 0; i--) {\r\n          for (int j = 0; j < m; j++) {\r\n            if (k > 0) {\r\n              a[i][j]++;\r\n              k--;\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n          if (k == 0) break;\r\n        }\r\n      }\r\n    } else {\r\n      for (int i = 0; i < n; i++) {\r\n        for (int j = 0; j < m; j++) {\r\n          if (k > 0) {\r\n            a[i][j]++;\r\n            k--;\r\n          } else {\r\n            break;\r\n          }\r\n        }\r\n        if (k == 0) break;\r\n      }\r\n    }\r\n  }\r\n  ll mx = -__LONG_LONG_MAX__, mn = __LONG_LONG_MAX__;\r\n  for (int i = 0; i < n; i++) {\r\n    for (int j = 0; j < m; j++) {\r\n      mx = max(mx, a[i][j]);\r\n      mn = min(mn, a[i][j]);\r\n    }\r\n  }\r\n  cout << mx << \" \" << mn << \" \" << a[x - 1][y - 1];\r\n  return 0;\r\n}\r\n"
}