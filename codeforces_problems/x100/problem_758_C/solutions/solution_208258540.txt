{
    "id": 208258540,
    "contestId": 758,
    "creationTimeSeconds": 1685771189,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 758,
        "index": "C",
        "name": "Unfair Poll",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 758,
        "members": [
            {
                "handle": "MH_Parag"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1484838300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 111,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 409600,
    "source": "/// Author: Mazed Hossain Parag ([email\u00a0protected])\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long int ll;\r\n#define print(x) cout<< #x <<\" = \"<< x<<\"\\n\";\r\n#define nl \"\\n\"\r\n#define sp \" \"\r\n#define sz(v) (int)v.size()\r\n#define all(v) v.begin(),v.end()\r\n\r\nvoid solve(){\r\n    ll n,m,k,x,y;\r\n    cin>>n>>m>>k>>x>>y;\r\n    ll dat[n+1][m+1];\r\n   \tll lo=0, hi=k;\r\n   \tif(n==1 && m==1) hi=k;\r\n   \telse if(m==1) hi = (k/(n-1))+(n-1);\r\n   \telse if(n==1) hi = (k/(m-1))+(m-1);\r\n   \telse hi = k/((n-1)*(m-1)) + n+m;\r\n   \tll best = 0, reduced_up=0, reduced_down=0, asked=0;\r\n   \twhile(lo<=hi){\r\n   \t\tll mid = (lo+hi)/2;\r\n   \t\tll total = n*m*mid;\r\n   \t\tll up = (n==1) ? 0 : (mid-1)/2;\r\n   \t\tll down = (n==1) ? 0 : mid/2;\r\n   \t\ttotal -= (up*m);\r\n   \t\ttotal -= (down*m);\r\n   \t\tif(total<=k){\r\n   \t\t\tbest = mid, reduced_up = up, reduced_down = down, asked=total;\r\n   \t\t\tlo = mid+1;\r\n   \t\t}\r\n   \t\telse{\r\n   \t\t\thi = mid-1;\r\n   \t\t}\r\n   \t}\r\n   \tfor(ll i=1 ;i<=n; i++){\r\n   \t\tfor(ll j=1; j<=m; j++){\r\n   \t\t\tif(i==1) dat[i][j] = best-reduced_up;\r\n   \t\t\telse if(i==n) dat[i][j] = best-reduced_down;\r\n   \t\t\telse dat[i][j] = best;\r\n   \t\t}\r\n   \t}\r\n\r\n   \tll rem = k-asked;\r\n   \tif(best==0){\r\n   \t\tfor(ll i=1; i<=n && rem>0; i++){\r\n   \t\t\tfor(ll j=1; j<=m && rem>0; j++){\r\n   \t\t\t\tdat[i][j]++;\r\n   \t\t\t\trem--;\r\n   \t\t\t}\r\n   \t\t}\r\n   \t}\r\n   \telse if(best&1){\r\n   \t\tfor(ll i=max(1ll,n-1); i>=1 && rem>0; i--){\r\n   \t\t\tfor(ll j=1; j<=m && rem>0; j++){\r\n   \t\t\t\tdat[i][j]++;\r\n   \t\t\t\trem--;\r\n   \t\t\t}\r\n   \t\t}\r\n   \t}\r\n   \telse{\r\n   \t\tfor(ll i=min(2ll, n); i<=n && rem>0; i++){\r\n   \t\t\tfor(ll j=1; j<=m && rem>0; j++){\r\n   \t\t\t\tdat[i][j]++;\r\n   \t\t\t\trem--;\r\n   \t\t\t}\r\n   \t\t}\r\n   \t}\r\n   \tll mn=1e18, mx=-1, me=dat[x][y], cnt=0;\r\n   \tfor(ll i=1; i<=n; i++){\r\n   \t\tfor(ll j=1; j<=m; j++){\t\r\n   \t\t\tcnt+=dat[i][j];\r\n   \t\t\tmn = min(mn, dat[i][j]);\r\n   \t\t\tmx = max(mx, dat[i][j]);\r\n   \t\t}\r\n   \t}\r\n   \tassert(cnt==k);\r\n   \tcout<<mx<<sp<<mn<<sp<<me<<nl;\r\n}\r\n\r\nint main(){\r\n    ios_base::sync_with_stdio(0);cout.tie(nullptr);cin.tie(nullptr);\r\n    int t=1;\r\n    while(t--) solve();\r\n    return 0;\r\n}\r\n"
}