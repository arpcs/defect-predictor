{
    "id": 161006379,
    "contestId": 758,
    "creationTimeSeconds": 1655522677,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 758,
        "index": "C",
        "name": "Unfair Poll",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 758,
        "members": [
            {
                "handle": "XYShaoKang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1484838300
    },
    "programmingLanguage": "Node.js",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 32,
    "timeConsumedMillis": 61,
    "memoryConsumedBytes": 1228800,
    "source": "'use strict';\r\n\r\nfunction solve(a) {\r\n  let k = a[2];\r\n  const [n, m,, x, y] = a.map(Number);\r\n  if (n === 1) {\r\n    const b = k % BigInt(m);\r\n    let min = k / BigInt(m),\r\n        max = min;\r\n    if (b) {\r\n      max++;\r\n      return `${max} ${min} ${y <= b ? max : min}`;\r\n    } else {\r\n      return `${max} ${min} ${min}`;\r\n    }\r\n  }\r\n  const b = BigInt((n - 1) * m * 2);\r\n  const up = k / b;\r\n  const res = Array.from({\r\n    length: Number(n)\r\n  }, () => new Array(Number(m)));\r\n  for (let i = 0; i < n; i++) {\r\n    for (let j = 0; j < m; j++) {\r\n      if (i === 0 || i === n - 1) {\r\n        res[i][j] = up;\r\n      } else {\r\n        res[i][j] = up * 2n;\r\n      }\r\n    }\r\n  }\r\n  k -= up * b;\r\n  let i = 0;\r\n  while (k) {\r\n    for (let j = 0; j < m; j++) {\r\n      if (k) {\r\n        res[i][j] += 1n;\r\n        k--;\r\n      } else break;\r\n    }\r\n    if (++i === n) i = n - 2;\r\n  }\r\n  let min = 10n ** 18n,\r\n      max = 0n;\r\n  for (let i = 0; i < n; i++) {\r\n    for (let j = 0; j < m; j++) {\r\n      const c = res[i][j];\r\n      if (min > c) min = c;\r\n      if (max < c) max = c;\r\n    }\r\n  }\r\n  return `${max} ${min} ${res[x - 1][y - 1]}`;\r\n}\r\n\r\nasync function main(read) {\r\n  try {\r\n    let t = 1;\r\n    let res = new Array(t);\r\n    for (let i = 0; i < t; i++) {\r\n      const a = (await read()).split(' ').map(BigInt);\r\n      res[i] = solve(a);\r\n    }\r\n    return res.join('\\n');\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nlet inputs,\r\n    str = '';\r\nfunction read() {\r\n  return inputs.next().value.trim();\r\n}\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding('utf8');\r\nprocess.stdin.on('data', input => str += input);\r\nprocess.stdin.on('end', async () => {\r\n  inputs = str.split('\\n').values();\r\n  const output = await main(read);\r\n  process.stdout.write(output);\r\n});\r\n"
}