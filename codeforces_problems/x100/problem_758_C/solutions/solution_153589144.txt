{
    "id": 153589144,
    "contestId": 758,
    "creationTimeSeconds": 1649879347,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 758,
        "index": "C",
        "name": "Unfair Poll",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 758,
        "members": [
            {
                "handle": "Sawafta.J"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1484838300
    },
    "programmingLanguage": "Java 11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 111,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 0,
    "source": "import java.util.Scanner;\r\n \r\npublic class Questions {\r\n \r\n\tpublic static void main(String[] args) {\r\n\t\tScanner s=new Scanner(System.in);\r\n\t\tint height=s.nextInt();\r\n\t\tint width=s.nextInt();\r\n\t\tlong numberOfQuestions=s.nextLong();\r\n\t\tint yMainPerson=s.nextInt();\r\n\t\tint xMainPerson=s.nextInt();\r\n\t\tlong[][] students=new long[width][height];\r\n\t\t\r\n\t\tint studentsFirstCount=width*height;\r\n\t\tint studentsSecondCount=Math.max(0, width*(height-2));\r\n\t\tlong fullPasses=numberOfQuestions/(studentsFirstCount+studentsSecondCount);\r\n\t\tfor (int x=0; x<width; x++) {\r\n\t\t\tfor (int y=0; y<height; y++) {\r\n\t\t\t\tstudents[x][y]+=fullPasses;\r\n\t\t\t}\r\n\t\t\tfor (int y=1; y<height-1; y++) {\r\n\t\t\t\tstudents[x][y]+=fullPasses;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (long[] array:students) {\r\n\t\t\tfor (long l:array) {\r\n\t\t\t\t//System.err.println(l);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tnumberOfQuestions%=(studentsFirstCount+studentsSecondCount);\r\n\t\t\r\n\t\tfor (int y=0; y<height; y++) {\r\n\t\t\tfor (int x=0; x<width; x++) {\r\n\t\t\t\tif (numberOfQuestions>0) {\r\n\t\t\t\t\tnumberOfQuestions--;\r\n\t\t\t\t\tstudents[x][y]++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (int y=height-2; y>0; y--) {\r\n\t\t\tfor (int x=0; x<width; x++) {\r\n\t\t\t\tif (numberOfQuestions>0) {\r\n\t\t\t\t\tnumberOfQuestions--;\r\n\t\t\t\t\tstudents[x][y]++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tlong max=-1, min=Long.MAX_VALUE;\r\n\t\tfor (long[] array:students) {\r\n\t\t\tfor (long l:array) {\r\n\t\t\t\t//System.err.print(l+\" \");\r\n\t\t\t\tmax=Math.max(max, l);\r\n\t\t\t\tmin=Math.min(min, l);\r\n\t\t\t}\r\n\t\t\t//System.err.println();\r\n\t\t}\r\n\t\t\r\n\t\tSystem.out.println(max+\" \"+min+\" \"+students[xMainPerson-1][yMainPerson-1]);\r\n \r\n\t}\r\n \r\n}"
}