{
    "id": 143278975,
    "contestId": 758,
    "creationTimeSeconds": 1642564231,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 758,
        "index": "C",
        "name": "Unfair Poll",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 758,
        "members": [
            {
                "handle": "amr_abdelazim"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1484838300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 23,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n\r\nusing namespace __gnu_pbds;\r\n\r\ntemplate<class myType>\r\nauto ordered_set() {\r\n    return tree<myType, null_type, std::less<myType>, rb_tree_tag, tree_order_statistics_node_update>();\r\n}\r\n\r\n#define getVName(VariableName) # VariableName\r\n#define debug(x) cerr << getVName(x) <<\" = \" << x << '\\n';\r\n#define ll long long\r\n#define ld long double\r\n#define all(v) v.begin(),v.end()\r\n#define rall(v) v.rbegin(),v.rend()\r\nusing namespace std;\r\nconst int N = 1e6 + 9, mod = 998244353;\r\n\r\nll a[100 + 9][100 + 9];\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n\r\n    int n, m, x, y;\r\n    ll k;\r\n    cin >> n >> m >> k >> x >> y;\r\n    ll s = 0, e = 1e18 / 1000, ans = 0, nnk = k;\r\n    while (s <= e) {\r\n        ll md = (s + e) >> 1;\r\n        ll num = (md * (n - 2) * m) + m * ((md + 1) / 2 + (max((md - 2),0ll) / 2 + min(md, 2ll)));\r\n        if (num <= k) {\r\n            ll nk = k;\r\n            nk -= num;\r\n            ans = md;\r\n            nnk = nk;\r\n            s = md + 1;\r\n        } else e = md - 1;\r\n    }\r\n    if (n == 1) {\r\n        ans = k / m;\r\n        k -= ans * m;\r\n    } else k = nnk;\r\n    for (int i = 0; i < n; ++i) {\r\n        for (int j = 0; j < m; ++j) {\r\n            if (i == n - 1 && n > 1)a[i][j] = (ans + 1) / 2;\r\n            else if (!i && n > 1)a[i][j] = (max((ans - 2),0ll) / 2 + min(ans, 2ll));\r\n            else a[i][j] = ans;\r\n        }\r\n    }\r\n\r\n    ll dir = 0, i = 0, mx = 0;\r\n    if (n != 1)i++;\r\n    while (k > 0) {\r\n        for (int j = 0; j < m && k; ++j) {\r\n            a[i][j]++;\r\n            mx = max(mx, a[i][j]);\r\n            k--;\r\n        }\r\n        if (n == 1)continue;\r\n        if (dir) {\r\n            if (!i)i++, dir ^= 1;\r\n            else i--;\r\n        } else {\r\n            if (i == n - 1)i--, dir ^= 1;\r\n            else i++;\r\n        }\r\n    }\r\n    ll mn = 1e18;\r\n    for (int j = 0; j < n; ++j) {\r\n        for (int l = 0; l < m; ++l) {\r\n            mn = min(mn, a[j][l]);\r\n            mx = max(a[j][l], mx);\r\n        }\r\n    }\r\n    cout << mx << \" \" << mn << \" \" << a[x - 1][y - 1] << \"\\n\";\r\n\r\n    return 0;\r\n}"
}