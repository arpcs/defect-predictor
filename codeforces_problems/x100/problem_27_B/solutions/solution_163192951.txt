{
    "id": 163192951,
    "contestId": 27,
    "creationTimeSeconds": 1657273727,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 27,
        "index": "B",
        "name": "Tournament",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "bitmasks",
            "brute force",
            "dfs and similar",
            "greedy"
        ]
    },
    "author": {
        "contestId": 27,
        "members": [
            {
                "handle": "Vats101"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1284130800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nbool dfs(int node,int dest,vector<vector<int>>&adj,vector<int>&visited)\r\n{\r\n    visited[node]=1;\r\n    if(node==dest)\r\n    return true;\r\n    for(auto it:adj[node])\r\n    {\r\n        if(visited[it]==-1 && dfs(it,dest,adj,visited))\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nint32_t main() {\r\n     ios_base::sync_with_stdio(false);\r\n     cin.tie(NULL);\r\n     cout.tie(NULL);\r\n     int dx[4]={0,0,1,-1};\r\n     int dy[4]={1,-1,0,0};\r\n     int n;\r\n\t cin>>n;\r\n\t map<int,int>mpp;\r\n\t vector<vector<int>>adj(n+1);\r\n\t for(int i=0;i<(n*(n-1))/2-1;i++)\r\n\t {\r\n\t int x;\r\n\t cin>>x;\r\n\t int y;\r\n\t cin>>y;\r\n\t adj[x].push_back(y);\r\n\t mpp[x]++;\r\n\t mpp[y]++;\r\n\t }\r\n\t vector<int>candidates;\r\n\t for(auto it:mpp)\r\n\t {\r\n\t     if(it.second!=n-1)\r\n\t     candidates.push_back(it.first);\r\n\t }\r\n\t int winner;int loser;\r\n\t for(int i=0;i<2;i++)\r\n\t {\r\n\t     vector<int>visited(n+1,-1);\r\n\t     if(visited[candidates[i]]==-1 && dfs(candidates[i],candidates[1-i],adj,visited))\r\n\t     {\r\n\t     winner=candidates[i];\r\n\t     loser=candidates[1-i];\r\n\t     break;\r\n\t     }\r\n\t }\r\n\t cout<<winner<<\" \"<<loser<<endl;\r\n     return 0;\r\n}"
}