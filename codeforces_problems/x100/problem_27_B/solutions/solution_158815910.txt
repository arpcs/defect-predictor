{
    "id": 158815910,
    "contestId": 27,
    "creationTimeSeconds": 1653840851,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 27,
        "index": "B",
        "name": "Tournament",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "bitmasks",
            "brute force",
            "dfs and similar",
            "greedy"
        ]
    },
    "author": {
        "contestId": 27,
        "members": [
            {
                "handle": "strangerisback12"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1284130800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "//we can map each number with the number of times it is present\r\n//now we just need to find the two numbers which are present one less time as compared to others\r\n/// in the mentioned test case mp[1] = 3. mp[2] = 3, mp[3]= 2, mp[4] = 2 so the answer is 4 3\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int n ;\r\n    cin >> n;\r\n    int total = (n*(n-1))/2-1;\r\n    unordered_map<int,int> mp;\r\n    vector<unordered_set<int>> less(n+1), more(n+1);\r\n    for(int i = 0;i< total; i++ )\r\n    {\r\n        int x , y;\r\n        cin>> x>>y;\r\n        less[y].insert(x);\r\n        more[x].insert(y);\r\n        mp[y]++;\r\n        mp[x]++;\r\n    }\r\n    vector<int> p;\r\n    for(auto &ele: mp)\r\n    {\r\n        if(ele.second<(n-1))\r\n        {\r\n            p.push_back(ele.first);\r\n        }\r\n    }\r\n    int x=0, y=0;\r\n    for(int i = 1; i<=total ; i++)\r\n    {\r\n        if(less[i].find(p[0])!=less[i].end()&& more[i].find(p[1])!=more[i].end())\r\n        {\r\n            x = p[0];\r\n            y = p[1];\r\n            break;\r\n        }\r\n        else if(less[i].find(p[1])!=less[i].end()&& more[i].find(p[0])!=more[i].end())\r\n        {\r\n            x = p[1];\r\n            y = p[0];\r\n            break;\r\n        }\r\n    }\r\n    if(x==0 && y==0)\r\n    {\r\n        cout<<p[0]<<\" \"<<p[1]<<\"\\n\";\r\n        return 0;\r\n    }\r\n    cout<<x<<\" \"<<y<<\"\\n\";\r\n    return 0;\r\n}"
}