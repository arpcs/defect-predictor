{
    "id": 97809708,
    "contestId": 27,
    "creationTimeSeconds": 1604706324,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 27,
        "index": "B",
        "name": "Tournament",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "bitmasks",
            "brute force",
            "dfs and similar",
            "greedy"
        ]
    },
    "author": {
        "contestId": 27,
        "members": [
            {
                "handle": "Miizu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1284130800
    },
    "programmingLanguage": "Java 11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 35,
    "timeConsumedMillis": 404,
    "memoryConsumedBytes": 0,
    "source": "import com.sun.jdi.ArrayReference;\r\nimport jdk.swing.interop.SwingInterOpUtils;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.lang.reflect.Array;\r\nimport java.math.BigInteger;\r\nimport java.text.DecimalFormat;\r\nimport java.util.*;\r\n\r\npublic class Main {\r\n\r\n    public static void main(String[] args) {\r\n        FastScanner fs = new FastScanner();\r\n        int n = fs.nextInt();\r\n        int matches = (n*(n-1))/2 - 1;\r\n        HashMap<Integer, int[]> stats = new HashMap<>();\r\n\r\n        for (int i = 0; i<matches; i++) {\r\n            int a = fs.nextInt(), b = fs.nextInt();\r\n\r\n            if (stats.containsKey(a)) {\r\n                int[] temp = stats.get(a);\r\n                temp[1]++;\r\n                temp[0]++;\r\n                stats.put(a, temp);\r\n\r\n            } else {\r\n                int[] temp = {1,1};\r\n                stats.put(a, temp);\r\n            }\r\n            if (stats.containsKey(b)) {\r\n                int[] temp = stats.get(b);\r\n                temp[0]++;\r\n                stats.put(b, temp);\r\n            } else {\r\n                int[] temp = {1,0};\r\n                stats.put(b, temp);\r\n            }\r\n        }\r\n        int ans1 = -1;\r\n        int ans2 = -1;\r\n        int wins1 = -1;\r\n        int wins2 = -1;\r\n        for (Integer i : stats.keySet()) {\r\n            if (stats.get(i)[0] == n-2) {\r\n                if (ans1 == -1) {\r\n                    ans1 = i;\r\n                    wins1 = stats.get(i)[1];\r\n                } else {\r\n                    ans2 = i;\r\n                    wins2 = stats.get(i)[1];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (wins1 > wins2) {\r\n            System.out.println(ans1 + \" \" + ans2);\r\n        } else {\r\n            System.out.println(ans2 + \" \" + ans1);\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    static class FastScanner {\r\n        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));\r\n        StringTokenizer st=new StringTokenizer(\"\");\r\n        String next() {\r\n            while (!st.hasMoreTokens())\r\n                try {\r\n                    st=new StringTokenizer(br.readLine());\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            return st.nextToken();\r\n        }\r\n\r\n        int nextInt() {\r\n            return Integer.parseInt(next());\r\n        }\r\n        int[] readArray(int n) {\r\n            int[] a=new int[n];\r\n            for (int i=0; i<n; i++) a[i]=nextInt();\r\n            return a;\r\n        }\r\n        long nextLong() {\r\n            return Long.parseLong(next());\r\n        }\r\n    }\r\n\r\n}"
}