{
    "id": 177012105,
    "contestId": 27,
    "creationTimeSeconds": 1666184637,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 27,
        "index": "B",
        "name": "Tournament",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "bitmasks",
            "brute force",
            "dfs and similar",
            "greedy"
        ]
    },
    "author": {
        "contestId": 27,
        "members": [
            {
                "handle": "Banda."
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1284130800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 35,
    "timeConsumedMillis": 60,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n\r\nint main(){\r\n\r\n    int t = 1;\r\n    //cin >> t;\r\n    while(t--){\r\n        \r\n        map<int,vector<int>> wins;\r\n        map<int,vector<int>> loses;\r\n        map<pair<int,int>, bool>found;\r\n        int n;\r\n        cin >> n;\r\n        for(int i = 0; i < ((n * (n - 1))/ 2) - 1; i++){\r\n            pair<int,int> P;\r\n            cin >> P.first >> P.second;\r\n            found[P] = true;\r\n            wins[P.first].push_back(P.second);\r\n            loses[P.second].push_back(P.first);\r\n        }\r\n\r\n        pair<int,int>missing;\r\n        for(int i = 1; i <= n; i++){\r\n            for(int j = i + 1; j <= n; j++){\r\n                if(!found[{i,j}] && !found[{j,i}]){\r\n                    missing.first = i;\r\n                    missing.second = j;\r\n                }   \r\n            }\r\n        }\r\n        \r\n        int winner = missing.first;\r\n        int loser = missing.second;\r\n        int flg = 0;\r\n        for(int i = 0; i < loses[winner].size(); i++){\r\n            for(int j = 0; j < wins[loser].size(); j++){\r\n                if(loses[winner][i] == wins[loser][j]){\r\n                    flg = 1;\r\n                    break;\r\n                }\r\n            }\r\n            if(flg)break;\r\n        }\r\n        if(flg){\r\n            swap(winner, loser);\r\n        }\r\n        cout << winner << ' ' << loser << '\\n';\r\n    }\r\n    \r\n    \r\n    return 0;\r\n}"
}