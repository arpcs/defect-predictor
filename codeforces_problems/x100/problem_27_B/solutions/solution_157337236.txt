{
    "id": 157337236,
    "contestId": 27,
    "creationTimeSeconds": 1652638803,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 27,
        "index": "B",
        "name": "Tournament",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "bitmasks",
            "brute force",
            "dfs and similar",
            "greedy"
        ]
    },
    "author": {
        "contestId": 27,
        "members": [
            {
                "handle": "nandyboy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1284130800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 35,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 1228800,
    "source": "// clang-format off\n#include<bits/stdc++.h>\nusing namespace std;\n\nint main() {\n  int n; cin>>n;\n  int e = (n*(n-1))/2;\n\n  vector<int> cnt(n+1,0);\n\n  vector<vector<int>> g(n+1);\n  for(int i=0; i<e-1; ++i){\n    int a,b; cin>>a>>b;\n    g[a].push_back(b);\n\n    cnt[a]++;\n    cnt[b]++;\n  }\n\n  int S=-1,E=-1;\n  for(int i=1; i<=n; ++i){\n    if(cnt[i]==n-2){\n      if(S==-1)\n        S = i;\n      else\n        E = i;\n    }\n  }\n\n  //Check if path from S to E exists\n  bool fnd = false;\n\n  queue<int> q;\n\n  vector<bool> inQ(n+1,false);\n  inQ[S] = 1;\n  q.push(S);\n\n  while(!q.empty()){\n    int nd = q.front();\n    q.pop();\n\n    if(nd == E){\n      fnd = true;\n      break;\n    }\n\n    for(int i=0; i<(int)g[nd].size(); ++i){\n      if(!inQ[g[nd][i]]){\n        q.push(g[nd][i]);\n        inQ[g[nd][i]]=1;\n      }\n    }\n  }\n\n  if(fnd) cout<<S<<' '<<E<<endl;\n  else cout<<E<<' '<<S<<endl;\n\n  return 0;\n}\n"
}