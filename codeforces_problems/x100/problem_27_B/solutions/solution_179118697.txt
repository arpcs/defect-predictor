{
    "id": 179118697,
    "contestId": 27,
    "creationTimeSeconds": 1667507676,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 27,
        "index": "B",
        "name": "Tournament",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "bitmasks",
            "brute force",
            "dfs and similar",
            "greedy"
        ]
    },
    "author": {
        "contestId": 27,
        "members": [
            {
                "handle": "hamzasorani83"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1284130800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 1126400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define endl '\\n'\r\n#define ll long long\r\n#define Endl '\\n'\r\n#define ENDL '\\n'\r\n#define enld '\\n'\r\n#define bitsN(n)  __builtin_popcount(n)\r\n#define bitsN_ll(n)  __builtin_popcountll(n)\r\n#define lz(n) __builtin_clz(n) //  leading zeros of the integer\r\n#define lzll(n) __builtin_clzll(n) //  leading zeros of the integer\r\n#define tz(n) __builtin_ctz(n) // count the trailing zeros \r\n#define tzll(n) __builtin_ctzll(n) // count the trailing zeros \r\n#define lpn(a,n,x) (lower_bound(a,a+n,x)-a)\r\n#define upn(a,n,x) (upper_bound(a,a+n,x)-a)\r\n#define lp(a,x) (lower_bound(a.begin(),a.end(),x)-a.begin())\r\n#define up(a,x) (upper_bound(a.begin(),a.end(),x)-a.begin())\r\n#define memset0(a) memset(a, 0, sizeof a)\r\n#define memset1(a) memset(a,-1, sizeof a)\r\n#define frn(x,n) for(int i=x;i<n;i++)\r\n#define max_int INT_MAX\r\n#define max_long LLONG_MAX\r\n#define eb emplace_back\r\n#define em emplace_back\r\n#define pb push_back\r\n#define mp make_pair\r\n#define mb make_pair\r\n#define sort(v) sort(v.begin(), v.end())\r\n#define lop(n) for(int i=0; i<n; i++)\r\n#define lop1(n) for(int i=1; i<=n; i++)\r\nll lcm(ll a, ll b) { return (a*b/__gcd(a,b));}\r\nll lowbit(ll x){return x&(-x);}\r\nbool NPrime[1000010];\r\n// bool isPrime(int n) {if(n==0 || n==1) return 0; for(int i=2; i*i<=n; i++) if(n%i == 0) return 0;return 1;}\r\n// for(ll i=2; i<= 1000000; i++) {\r\n//     if(!NPrime[i]) {\r\n//         for(ll j=i+i; j*j<=1000000; j+=i) {\r\n//             NPrime[j] = 1;   \r\n//         }\r\n//     }\r\n// }\r\n\r\n// int mx[4] = {1,0,-1,0};\r\n// int my[4] = {0,1,0,-1};\r\n// int mx1[8] = {1,1,0,-1,-1,-1,0,1};\r\n// int my1[8] = {0,1,1,1,0,-1,-1,-1};\r\n\r\n// freopen(\"input.txt\", \"r\", stdin);\r\n// freopen(\"output.txt\", \"w\", stdout);\r\n\r\nint vis[5000];\r\nvector<ll> v[5000], ans;\r\n\r\nvoid dfs(int node) {\r\n    vis[node]++;\r\n    for(auto it: v[node]) {\r\n        if(!vis[it]) dfs(it);\r\n        else vis[it]++;\r\n    }\r\n}\r\n    \r\nvoid solve() {\r\n    ll n; cin>>n;\r\n    ll n1 = n*(n-1)/2;\r\n    lop(n1-1) {\r\n        int x,y; cin>>x>>y;\r\n        v[x].emplace_back(y);\r\n        v[y].emplace_back(x);\r\n    }\r\n    memset0(vis);\r\n    lop1(n) {\r\n        if(!vis[i]) dfs(i);\r\n    }\r\n    lop1(n) {\r\n        if(vis[i] == n-2) {\r\n            ans.eb(i);\r\n        }\r\n    }\r\n    if(v[ans[0]].size() > v[ans[1]].size()) cout<<ans[0]<<\" \"<<ans[1];\r\n    else cout<<ans[1]<<\" \"<<ans[0];\r\n}\r\n\r\n\r\nint main(){\r\n    ios::sync_with_stdio(NULL);cin.tie(0);cout.tie(0);\r\n\r\n    int t = 1;\r\n    // cin>>t;\r\n    while(t--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}