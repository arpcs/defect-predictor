{
    "id": 100333602,
    "contestId": 27,
    "creationTimeSeconds": 1607071101,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 27,
        "index": "B",
        "name": "Tournament",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "bitmasks",
            "brute force",
            "dfs and similar",
            "greedy"
        ]
    },
    "author": {
        "contestId": 27,
        "members": [
            {
                "handle": "JarvisCelsius"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1284130800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 60,
    "memoryConsumedBytes": 8089600,
    "source": "#include<bits/stdc++.h>\r\n\r\n#define LL long long int\r\n#define FOR(i,a,b) for(int i=a;i<=b;++i)\r\n#define Pii pair<int,int>\r\n#define pb push_back\r\n\r\nusing namespace std;\r\n\r\nconst int N=200010;\r\n\r\nint deg[N];\r\n\r\nvector<int>Edge[N];\r\nvector<LL>Father(N),P(N),King(N);\r\nvector<bool>vis(N,0);\r\nvector<vector<char> >a;\r\n\r\n\r\nvoid DFS(int u,int x,int y)\r\n{\r\n      vis[u]=1;\r\n      if(u==y)\r\n      {\r\n            cout<<x<<\" \"<<y;\r\n            exit(0);\r\n      }\r\n\r\n      //if(Edge[u].size())\r\n      for(int v:Edge[u])\r\n      {\r\n            if(!vis[v])\r\n                  DFS(v,x,y);\r\n      }\r\n      vis[u]=0;\r\n}\r\n\r\nint main()\r\n{\r\n\r\n      int n;\r\n      cin>>n;\r\n      int m=n*(n-1)/2;\r\n      FOR(i,1,m-1)\r\n      {\r\n            int u,v;\r\n            cin>>u>>v;\r\n            Edge[u].pb(v);\r\n            deg[u]++;\r\n            deg[v]++;\r\n      }\r\n\r\n\r\n      vector<int>got;\r\n\r\n      FOR(i,1,n)\r\n      {\r\n            if(deg[i]<(m/2))\r\n            {\r\n                  got.pb(i);\r\n                  //cout<<i<<endl;\r\n            }\r\n      }\r\n\r\n      int u=got[0],v=got[1];\r\n\r\n      DFS(u,u,v);\r\n\r\n      fill(vis.begin(),vis.begin()+1+n+100,0);\r\n\r\n      DFS(v,v,u);\r\n\r\n      cout<<u<<\" \"<<v;\r\n\r\n}\r\n"
}