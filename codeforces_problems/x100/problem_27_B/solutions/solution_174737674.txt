{
    "id": 174737674,
    "contestId": 27,
    "creationTimeSeconds": 1664971489,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 27,
        "index": "B",
        "name": "Tournament",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "bitmasks",
            "brute force",
            "dfs and similar",
            "greedy"
        ]
    },
    "author": {
        "contestId": 27,
        "members": [
            {
                "handle": "Rahul_abr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1284130800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 35,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 204800,
    "source": "#include<iostream>\r\nusing namespace std;\r\n#include<bits/stdc++.h>\r\n#include<cmath>\r\n#include<string.h>\r\n#define ll long long int\r\nconst ll m = 1000000000+7;\r\n/*\r\nCode to set Precision\r\nstd::cout << std::fixed;\r\nstd::cout << std::setprecision(6);// value after decimal\r\nstd::cout << (double)vk[i] << std::endl;\r\n*/\r\n/*\r\nHow to use floor and ceil function\r\nfloat f1 = l/(float)d;\r\nfloat f2 = r/(float)d;\r\nll ba = ceil(f1);\r\nll ne = floor(f2);\r\nWe can also do ceil(3.23);.........\r\n*/\r\n/*\r\nstring s = \"abcdacacaaca\";\r\nint pos = s.find(\"aca\");\r\ncout<<pos<<endl; - > We will get the index of first occurrence.\r\n*/\r\n/*\r\nHow to erase a single char from a string\r\nstr.erase(str.begin()+4);\r\ncout<<str<<endl;\r\n*/\r\n/*\r\n2 2 2 1 1 0 2 2 3 4 5 5 4\r\nans should be 3 2 1 2 1 2 2 1 \r\n    ll count = 1;\r\n    vector<ll>ans;\r\n    for(ll i =1;i<n;i++){\r\n        if(v[i]==v[i-1]){\r\n            count++;\r\n        }\r\n        else{\r\n            ans.push_back(count);\r\n            count = 0;\r\n            count++;\r\n        }\r\n    }\r\n*/\r\nint main(){\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(0);\r\n\tcin.exceptions(ios::badbit | ios::failbit);\r\n\tll n;\r\n\tcin>>n;\r\n\tvector<ll>ans;\r\n\tll val = (n*(n-1))/2 - 1;\r\n\tmap<ll,ll>mpn;\r\n\tfor(ll i =0;i<val;i++){\r\n\t    ll a,b;\r\n\t    cin>>a>>b;\r\n\t    ans.push_back(a);\r\n\t    mpn[a]++;\r\n\t    ans.push_back(b);\r\n\t}\r\n\tmap<ll,ll>mp;\r\n\tsort(ans.begin(),ans.end());\r\n\tfor(ll i =0;i<ans.size();i++){\r\n\t    mp[ans[i]]++;\r\n\t}\r\n\tvector<ll>noted;\r\n\tfor(auto i:mp){\r\n\t    if(i.second!=n-1){\r\n\t        noted.push_back(i.first);\r\n\t    }\r\n\t}\r\n\tif(mpn[noted[0]]>mpn[noted[1]]){\r\n\t    cout<<noted[0]<<\" \"<<noted[1]<<endl;\r\n\t}\r\n\telse{\r\n\t    cout<<noted[1]<<\" \"<<noted[0]<<endl;\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
}