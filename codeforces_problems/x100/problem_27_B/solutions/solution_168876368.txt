{
    "id": 168876368,
    "contestId": 27,
    "creationTimeSeconds": 1660843656,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 27,
        "index": "B",
        "name": "Tournament",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "bitmasks",
            "brute force",
            "dfs and similar",
            "greedy"
        ]
    },
    "author": {
        "contestId": 27,
        "members": [
            {
                "handle": "ankitramlu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1284130800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nint main(){\r\n\r\n   int n,t;\r\n   cin>>n;\r\n   t=(n*(n-1))/2;\r\n   //cout<<t;\r\n   vector<vector<int>> matches(t,vector<int> (2));\r\nfor(int i=0;i<t;i++){\r\n  cin>>matches[i][0];cin>>matches[i][1];}\r\n    \r\n  sort(matches.begin(),matches.end(),[&](auto p,auto q){\r\n  return p[0]<q[0];});\r\nvector<int> left(n),right(n);\r\nint num=matches[0][0];\r\nint count=1;\r\nfor(int i=1;i<t;i++){\r\n if(num==matches[i][0]){\r\n      count++;\r\n }else {\r\n    left[num-1]=count;\r\n    count=1;\r\n    num=matches[i][0];\r\n }\r\n}\r\n   sort(matches.begin(),matches.end(),[&](auto p,auto q){\r\n      return p[1]<q[1];\r\n   });\r\n   \r\n    num=matches[0][1];\r\n count=1;\r\nfor(int i=1;i<t;i++){\r\n if(num==matches[i][1]){\r\n      count++;\r\n }else {\r\n    right[num-1]=count;\r\n    count=1;\r\n    num=matches[i][1];\r\n }\r\n}\r\nfor(int i=0;i<n;i++)\r\ncout<<left[i]<<\" \"<<right[i];\r\n/*vector<int> pt;\r\nvector<int> sum(n);\r\nfor(int i=0;i<n;i++){\r\n   sum[i]=left[i]+right[i];\r\n   if(sum[i]==n-2){\r\n      pt.push_back(i);\r\n   }\r\n   }\r\n   if(left[pt[0]]<left[pt[1]])cout<<pt[1]+1<<\" \"<<pt[0]+1;\r\n   else cout<<pt[0]+1<<\" \"<<pt[1]+1;\r\n*/\r\n    return 0;\r\n}"
}