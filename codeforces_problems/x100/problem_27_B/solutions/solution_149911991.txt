{
    "id": 149911991,
    "contestId": 27,
    "creationTimeSeconds": 1647518479,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 27,
        "index": "B",
        "name": "Tournament",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "bitmasks",
            "brute force",
            "dfs and similar",
            "greedy"
        ]
    },
    "author": {
        "contestId": 27,
        "members": [
            {
                "handle": "chetan_saini"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1284130800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "/*\r\n        \u0950 \u0924\u094d\u0930\u094d\u092f\u092e\u094d\u092c\u0915\u0902 \u092f\u091c\u093e\u092e\u0939\u0947 \u0938\u0941\u0917\u0928\u094d\u0927\u093f\u0902 \u092a\u0941\u0937\u094d\u091f\u093f\u0935\u0930\u094d\u0927\u0928\u092e\u094d\u0964\r\n        \u0909\u0930\u094d\u0935\u093e\u0930\u0941\u0915\u092e\u093f\u0935 \u092c\u0928\u094d\u0927\u0928\u093e\u0928 \u092e\u0943\u0924\u094d\u092f\u094b\u0930\u094d\u092e\u0941\u0915\u094d\u0937\u0940\u092f \u092e\u093e\u092e\u0943\u0924\u093e\u0924\u094d\u0965\r\n                                                */\r\n\r\n/*        Author - Chetan Saini          */\r\n\r\n#include <iostream>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <iomanip>\r\n#include <string>\r\n#include <bits/stdc++.h>\r\n#include <math.h>\r\n#include <climits>\r\n#include <list>\r\n#include <map>\r\n#include <queue>\r\n#include <set>\r\n#include <stack>\r\n#include <utility>\r\n#define ll long long int\r\n#define ull unsigned long long int\r\n#define int6 int64_t\r\n#define vi vector<int>\r\n#define vii vector<pair<int, int>>\r\n#define vs vector<string>\r\n#define vc vector<char>\r\n#define vb vector<bool>\r\n#define pb push_back\r\n#define vvi vector<vector<int>>\r\n#define pii pair<int, int>\r\n#define mp make_pair\r\n#define all(x) (x).begin(), (x).end()\r\n#define vin(x, v)      \\\r\n     for (auto &x : v) \\\r\n          cin >> x;\r\n#define vout(x, v)    \\\r\n     for (auto x : v) \\\r\n          cout << x << \" \";\r\n#define MEM(a, b) memset(a, (b), sizeof(a))\r\n#define forl for (int i = 0; i < n; i++)\r\n#define loop(i, j, k) for (int i = j; i < k; i += 1)\r\n#define rloop(i, j, k) for (int i = j; i >= k; i -= 1)\r\n#define rep(i, j) loop(i, 0, j)\r\n#define rrep(i, j) rloop(i, j, 0)\r\n#define MP make_pair\r\n#define endl \"\\n\"\r\n#define INF (int)1e18\r\n#define EPS 1e-18\r\n#define PI 3.1415926535897932384626433832795\r\n#define MOD 1000000007\r\n#define MODD 998244353\r\n\r\n#define isortarr(arr, n) sort(arr, arr + n)\r\n#define dsortarr(arr, n) sort(arr, arr + n, greater<int>())\r\n#define isortvect(v) sort(v.begin(), v.end())\r\n#define dsortvect(v) sort(v.begin(), v.end(), greater<int>());\r\n#define isortstrng(str) sort(str.begin(), str.end())\r\n#define dsortstrng(str) sort(str.begin(), str.end(), greater<char>())\r\n#define ltransfr(str) transform(str.begin(), str.end(), str.begin(), ::tolower)\r\n#define utransfr(str) transform(str.begin(), str.end(), str.begin(), ::toupper)\r\n#define cp(t)  \\\r\n     int t;    \\\r\n     cin >> t; \\\r\n     while (t--)\r\n\r\n//  cout<<fixed<<setprecision(15)<<\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\r\n     ios_base::sync_with_stdio(false);\r\n     cin.tie(NULL);\r\n     cout.tie(NULL);\r\n\r\n     int n;\r\n     cin >> n;\r\n     int k = ((n) * (n - 1)) / 2;\r\n     int left[n + 1] = {0}, right[n + 1] = {0};\r\n     loop(i, 0, k - 1)\r\n     {\r\n          int llp, rr;\r\n          cin >> llp >> rr;\r\n          left[llp]++;\r\n          right[rr]++;\r\n     }\r\n     int aa = 0, bb = 0;\r\n     int alef = 0, arig = 0;\r\n     int blef = 0, brig = 0;\r\n     loop(i, 1, n + 1)\r\n     {\r\n          if (((left[i] + right[i]) != n - 1) && (aa == 0))\r\n          {\r\n               aa = i;\r\n               if (left[i] > right[i])\r\n               {\r\n                    alef = 1;\r\n               }\r\n               else if (left[i] < right[i])\r\n               {\r\n                    arig = 1;\r\n               }\r\n          }\r\n          else if (((left[i] + right[i]) != n - 1) && (bb == 0))\r\n          {\r\n               bb = i;\r\n               if (left[i] > right[i])\r\n               {\r\n                    blef = 1;\r\n               }\r\n               else if (left[i] < right[i])\r\n               {\r\n                    brig = 1;\r\n               }\r\n          }\r\n     }\r\n     if ((alef == 1) && (blef != 1))\r\n     {\r\n          cout << aa << \" \" << bb;\r\n     }\r\n     else if ((alef != 1) && (blef == 1))\r\n     {\r\n          cout << bb << \" \" << aa;\r\n     }\r\n     else\r\n     {\r\n          cout << aa << \" \" << bb;\r\n     }\r\n\r\n     return 0;\r\n}\r\n"
}