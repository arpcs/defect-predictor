{
    "id": 10392235,
    "contestId": 521,
    "creationTimeSeconds": 1427000253,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 521,
        "index": "D",
        "name": "Shop",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 521,
        "members": [
            {
                "handle": "AceLove"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1425279600
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 5324800,
    "source": "#include <iostream>\r\n#include <fstream>\r\n#include <algorithm>\r\n#include <math.h>\r\n#include <string.h>\r\n#include <string>\r\n#include <time.h>\r\n#include <stdlib.h>\r\n#include <vector>\r\n#include <map>\r\n#include <queue>\r\nusing namespace std;\r\n#define uint long long // unimaginable big int!\r\n#define ctoi(u) ((u) - 'a')\r\n#define mcode(a, b) ((a) * (m) + b + 1)\r\n#define inf 2000000001\r\n#define Inf 20000000000000000LL\r\n#define P pair<int, int>\r\n#define hd first\r\n#define rr second\r\n\r\nconst int maxn = 100000 + 2;\r\n\r\nstruct Tnode {\r\n    int t, i, b, id;\r\n} d[maxn];\r\n\r\nbool cmp(Tnode a, Tnode b) {\r\n    if (a.i != b.i) return a.i < b.i;\r\n    if (a.t != b.t) return a.t < b.t;\r\n    return a.b > b.b;\r\n}\r\n\r\nint n, m, k;\r\nint ori[maxn];\r\n\r\nvoid Init() {\r\n    scanf(\"%d%d%d\", &k, &n, &m);\r\n    for (int i = 1; i <= k; i++) scanf(\"%d\", &ori[i]);\r\n    for (int i = 1; i <= n; i++) {\r\n        scanf(\"%d%d%d\", &d[i].t, &d[i].i, &d[i].b);\r\n        d[i].id = i;\r\n    }\r\n    sort(d + 1, d + n + 1, cmp);\r\n}\r\n\r\nint size;\r\nint a[maxn], b[maxn], c[maxn], out[maxn];\r\nbool ans[maxn];\r\npair <double, int> p[maxn];\r\nvoid Solve() {\r\n    for (int h = 1; h <= n; h++) {\r\n        int t = h;\r\n        int stA = n + 1, stB = n + 1, stC = n + 1;\r\n        while (t <= n && d[h].i == d[t].i) t++;\r\n        int A = 0, B = 0, C = 0;\r\n        for (int i = h; i < t; i++)\r\n            if (d[i].t == 1) {\r\n                a[A++] = d[i].b;\r\n                if (A == 1) stA = i;\r\n            }\r\n            else if (d[i].t == 2) {\r\n                b[B++] = d[i].b;\r\n                if (B == 1) stB = i;\r\n            }\r\n            else {\r\n                c[C++] = d[i].b;\r\n                if (C == 1) stC = i;\r\n            }\r\n        int nx = 0, ny = 0, nz = 0;\r\n        int s = ori[ d[h].i ];\r\n        A = min(A, 1);\r\n        while (nx < A || ny < B || nz < C) {\r\n            int tx = nx, ty = ny, tz = nz, ts = s; \r\n            double ratio = 1;\r\n            if (nx == 0 && A && 1.0 * (a[nx] - ori[ d[h].i ]) / s + 1 > ratio) {\r\n                ratio = 1.0 * (a[nx] - ori[ d[h].i ]) / s + 1;\r\n                tx = 1; ty = ny; tz = nz; ts = s + a[nx] - ori[ d[h].i ];\r\n                p[size].rr = stA;\r\n            }\r\n            if (ny < B && 1.0 * b[ny] / s + 1 > ratio) {\r\n                ratio = 1.0 * b[ny] / s + 1;\r\n                tx = nx; ty = ny + 1; tz = nz; ts = s + b[ny];\r\n                p[size].rr = stB + ny; \r\n            }\r\n            if (nz < C && c[nz] > ratio) {\r\n                ratio = c[nz];\r\n                tx = nx; ty = ny; tz = nz + 1;\r\n                p[size].rr = stC + nz;\r\n            }\r\n            if (nx == tx && ny == ty && nz == tz) break;\r\n            p[size++].hd = ratio;\r\n            nx = tx; ny = ty; nz = tz; s = ts;\r\n        }\r\n        h = t - 1;\r\n    }\r\n    int c = min(size, m);\r\n    sort(p, p + size);\r\n    printf(\"%d\\n\", c);\r\n    for (int i = size - 1; i >= size - c; i--) ans[p[i].rr] = true;\r\n    \r\n    size = 0;\r\n    for (int i = 1; i <= n; i++)\r\n        if (ans[i]) out[size++] = d[i].id;\r\n    for (int i = 0; i < size; i++) printf(\"%d \", out[i]);\r\n    printf(\"\\n\");\r\n}\r\n\r\nint main() {\r\n    Init();\r\n    Solve();\r\n    return 0;\r\n}"
}