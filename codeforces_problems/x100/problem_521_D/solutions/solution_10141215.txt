{
    "id": 10141215,
    "contestId": 521,
    "creationTimeSeconds": 1425450564,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 521,
        "index": "D",
        "name": "Shop",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 521,
        "members": [
            {
                "handle": "ikbal"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1425279600
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 7168000,
    "source": "#include <algorithm>\n#include <iostream>\n#include <iomanip>\n#include <cstring>\n#include <complex>\n#include <cassert>\n#include <cstdlib>\n#include <cstdio>\n#include <bitset>\n#include <vector>\n#include <string>\n#include <cmath>\n#include <ctime>\n#include <stack>\n#include <queue>\n#include <list>\n#include <map>\n#include <set>\n\n#define all(x) (x).begin(), (x).end()\n#define type(x) __typeof((x).begin())\n#define foreach(it, x) for(type(x) it = (x).begin(); it != (x).end(); it++)\n\n#ifdef KAZAR\n    #define eprintf(...) fprintf(stderr,__VA_ARGS__)\n#else\n    #define eprintf(...) 0\n#endif\n\nusing namespace std;\n\ntemplate<class T> inline void umax(T &a,T b){if(a<b) a = b ; }\ntemplate<class T> inline void umin(T &a,T b){if(a>b) a = b ; }\ntemplate<class T> inline T abs(T a){return a>0 ? a : -a;}\ntemplate<class T> inline T gcd(T a,T b){return __gcd(a, b);}\ntemplate<class T> inline T lcm(T a,T b){return a/gcd(a,b)*b;}\n\ntypedef long long ll;\ntypedef pair<int, int> ii;\n\nconst int inf = 1e9 + 143;\nconst ll longinf = 1e18 + 143;\n\ninline int read(){int x;scanf(\" %d\",&x);return x;}\n\nconst int N = 101010;\n\nint a[N], as[N];\nint op[N], id[N], v[N];\nbool used[N];\n\npriority_queue<ii> add[N];\n\ntypedef pair<long double, ii> base;\n\npriority_queue<base> Q;\n\nvoid nextone(int i){\n    if(add[i].empty())\n        return;\n    int val = add[i].top().first;\n    Q.push(make_pair((long double)(val + a[i]) / a[i], ii(add[i].top().second, i)));\n    add[i].pop();\n    a[i] += val;\n}\n\nint main(){\n\n#ifdef KAZAR\n    freopen(\"f.input\",\"r\",stdin);\n    freopen(\"f.output\",\"w\",stdout);\n    freopen(\"error\",\"w\",stderr);\n#endif\n\n    int k = read();\n    int n = read();\n    int m = read();\n\n    for(int i = 1; i <= k; i++)\n        a[i] = read();\n\n    vector<ii> muls;\n    for(int i = 1; i <= n; i++){\n        op[i] = read();\n        id[i] = read();\n        v[i] = read();\n        if(op[i] == 1){\n            if(!as[id[i]] || v[as[id[i]]] < v[i]){\n                as[id[i]] = i;\n            }\n        }else if(op[i] == 2){\n            add[id[i]].push(ii(v[i], i));\n        }else{\n            if(v[i] > 1)\n                muls.push_back(ii(v[i], i));\n        }\n    }\n\n    sort(muls.begin(), muls.end());\n\n    reverse(all(muls));\n    while(muls.size() > m)\n        muls.pop_back();\n    while(muls.size() < m)\n        muls.push_back(ii(1, 0));\n    reverse(all(muls));\n\n    for(int i = 0; i < muls.size(); i++){\n        used[muls[i].second] = 1;\n    }\n\n    for(int i = 1; i <= k; i++){\n        int mxid = as[i];\n        if(mxid && v[mxid] > a[i]){\n            if(add[i].empty() || v[mxid] - a[i] > add[i].top().first){\n                add[i].push(ii(v[mxid] - a[i], mxid));\n            }\n        }\n        nextone(i);\n    }\n\n    for(int i = 0; i < muls.size(); i++){\n        if(Q.empty())\n            break;\n        long double out_prod = muls[i].first;\n        long double in_prod = Q.top().first;\n        int in_id = Q.top().second.first;\n        int who = Q.top().second.second;\n        Q.pop();\n        eprintf(\"out = %d, in = %d\\n\", muls[i].second, in_id);\n        eprintf(\"%lf %lf\\n\", in_prod, out_prod);\n        if(in_prod < out_prod)\n            break;\n        used[muls[i].second] = 0;\n        used[in_id] = 1;\n        nextone(who);\n    }\n\n    vector<int> ans;\n    int order[] = {2, 1, 3};\n    for(int it = 0; it < 3; it++){\n        int now = order[it];\n        for(int i = 1; i <= n; i++)\n            if(used[i] && op[i] == now){\n                ans.push_back(i);\n            }\n    }\n\n    printf(\"%d\\n\", ans.size());\n    foreach(it, ans)\n        printf(\"%d \", *it);\n\n    return 0;\n}\n"
}