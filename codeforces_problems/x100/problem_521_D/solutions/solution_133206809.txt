{
    "id": 133206809,
    "contestId": 521,
    "creationTimeSeconds": 1635297690,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 521,
        "index": "D",
        "name": "Shop",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 521,
        "members": [
            {
                "handle": "HuaShanLunJian"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1425279600
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 9318400,
    "source": "#include<stdio.h>\r\n#include<vector>\r\n#include<algorithm>\r\n#include<queue>\r\nusing std::priority_queue;\r\nusing std::sort;\r\nusing std::vector;\r\n\r\nconst int P=1e9+7;\r\ninline int pow(int a,int n){ int c=1; for(;n;n>>=1,a=(long long)a*a%P) if(n&1) c=(long long)c*a%P; return c; }\r\ninline int max(int x,int y){ return x>y?x:y; }\r\nstruct Frac{ long long x,y;int p,i,id; inline bool operator < (Frac b) const { return (long long)x*b.y<(long long)b.x*y; } };\r\npriority_queue<Frac> q;\r\n\r\nint n,m,k,ans=1;\r\nlong long a[100002];\r\nstruct Pair{ int x,id; };\r\ninline Pair max(Pair x,Pair y){ return x.x>y.x?x:y; }\r\nPair fuck[100002];\r\ninline bool cmp(Pair x,Pair y){ return x.x>y.x; }\r\nvector<Pair> v[100002];\r\nbool used[100002];\r\n\r\nint main()\r\n{\r\n\tscanf(\"%d%d%d\",&n,&m,&k);\r\n\tfor(int i=1;i<=n;i++) scanf(\"%lld\",&a[i]),ans=(long long)ans*a[i]%P;\r\n\tfor(int i=1,t,p,b;i<=m;i++)\r\n\t{\r\n\t\tscanf(\"%d%d%d\",&t,&p,&b);\r\n\t\tif(t==1) fuck[p]=max(fuck[p],{b,i});\r\n\t\telse if(t==2) v[p].push_back({b,i});\r\n\t\telse if(t==3) q.push({b,1,-1,0,i});\r\n\t}\r\n\tfor(int i=1;i<=n;i++) if(fuck[i].id&&fuck[i].x>a[i]) v[i].push_back({fuck[i].x-a[i],fuck[i].id});\r\n\tfor(int i=1;i<=n;i++) sort(v[i].begin(),v[i].end(),cmp),v[i].size()?q.push({v[i][0].x+a[i],a[i],i,0,v[i][0].id}):(void)0;\r\n\tfor(int i=1;i<=k;i++)\r\n\t{\r\n\t\tif(q.empty()){ k=i-1;break; }\r\n\t\tFrac now=q.top();q.pop();\r\n\t\tused[now.id]=1;\r\n\t\tans=(long long)ans*pow(now.y,P-2)%P*now.x%P;\r\n\t\tif(now.p!=-1&&now.i+1<v[now.p].size())\r\n\t\t\ta[now.p]=(long long)a[now.p]*pow(now.y,P-2)%P*now.x%P,\r\n\t\t\tq.push({v[now.p][now.i+1].x+a[now.p],a[now.p],now.p,now.i+1,v[now.p][now.i+1].id});\r\n\t}\r\n\tprintf(\"%d\\n\",k);\r\n\tfor(int i=1;i<=m;i++) if(used[i]) printf(\"%d \",i);\r\n\t//printf(\"%d\",ans);\r\n\treturn 0;\r\n}"
}