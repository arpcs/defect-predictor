{
    "id": 67416042,
    "contestId": 521,
    "creationTimeSeconds": 1577008526,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 521,
        "index": "D",
        "name": "Shop",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 521,
        "members": [
            {
                "handle": "AprilGrimoire"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1425279600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 3993600,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int MAX_N = 1e5 + 10;\n\nint K, N, M, A[MAX_N];\n\nstruct Item {\n    int t, i, b;\n};\nItem items[MAX_N];\nvector<pair<int, int>> assign[MAX_N], add[MAX_N];\nvector<pair<double, int>> opers;\n\nint main() {\n    scanf(\"%d%d%d\", &K, &N, &M);\n    for (int i = 1; i <= K; i++) scanf(\"%d\", &A[i]);\n    for (int i = 1; i <= N; i++) {\n        scanf(\"%d%d%d\", &items[i].t, &items[i].i, &items[i].b);\n        if (items[i].t == 1) {\n            assign[items[i].i].emplace_back(items[i].b, i);\n        } else if (items[i].t == 2) {\n            add[items[i].i].emplace_back(items[i].b, i);\n        } else {\n            opers.emplace_back(items[i].b, i);\n        }\n    }\n    for (int i = 1; i <= K; i++) {\n        sort(assign[i].begin(), assign[i].end(), greater<pair<int, int>>());\n        if (assign[i][0].first > A[i]) {\n            add[i].emplace_back(assign[i][0].first - A[i], assign[i][0].second);\n        }\n        sort(add[i].begin(), add[i].end(), greater<pair<int, int>>());\n        double x = A[i];\n        for (auto j : add[i]) {\n            double nx = x + j.first;\n            opers.emplace_back(nx / x, j.second);\n            x = nx;\n        }\n    } \n    sort(opers.begin(), opers.end(), greater<pair<double, int>>());\n    vector<int> ans;\n    for (int i = 0; i < min(int(opers.size()), M); i++)\n        ans.push_back(opers[i].second);\n    sort(ans.begin(), ans.end(), [](int a, int b) {\n                                     return items[a].t < items[b].t;\n                               });\n    printf(\"%zu\\n\", ans.size());\n    for (int i : ans) printf(\"%d \", i);\n    printf(\"\\n\");\n}\n"
}