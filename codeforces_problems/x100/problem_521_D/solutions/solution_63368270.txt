{
    "id": 63368270,
    "contestId": 521,
    "creationTimeSeconds": 1571991740,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 521,
        "index": "D",
        "name": "Shop",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 521,
        "members": [
            {
                "handle": "hyjhyj"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1425279600
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream> \n#include <cstdio> \n#include <cstdlib> \n#include <cstring> \n#include <cmath> \n#include <algorithm> \n#include <vector> \nusing namespace std; \ninline int gi() { \n    register int data = 0, w = 1; \n    register char ch = 0; \n    while (!isdigit(ch) && ch != '-') ch = getchar(); \n    if (ch == '-') w = -1, ch = getchar(); \n    while (isdigit(ch)) data = 10 * data + ch - '0', ch = getchar(); \n    return w * data; \n} \nconst int MAX_N = 2e5 + 5; \nint N, M, K, a[MAX_N], op[MAX_N]; \npair<int, int> mx[MAX_N]; \nvector<pair<int, int> > add[MAX_N]; \nstruct Node {\n\tlong long x, y; \n\tint id; \n} p[MAX_N]; \nint cnt; \nbool operator < (const Node &l, const Node &r) \n    { return (__int128)l.x * r.y > (__int128)l.y * r.x; } \n\nint main () { \n#ifndef ONLINE_JUDGE \n    freopen(\"cpp.in\", \"r\", stdin); \n#endif \n\tN = gi(), M = gi(), K = gi(); \n\tfor (int i = 1; i <= N; i++) a[i] = gi(); \n\tfor (int i = 1; i <= M; i++) { \n\t\top[i] = gi(); int x = gi(), y = gi(); \n\t\tif (op[i] == 1) mx[x] = max(mx[x], make_pair(y, i)); \n\t\tif (op[i] == 2) add[x].push_back(make_pair(y, i)); \n\t\tif (op[i] == 3) p[++cnt] = (Node){1ll * y, 1ll, i}; \n\t} \n\tfor (int i = 1; i <= N; i++) \n\t\tsort(add[i].begin(), add[i].end(), greater<pair<int, int> >()); \n\tfor (int i = 1; i <= N; i++) \n\t\tif (mx[i].first > a[i]) p[++cnt] = (Node){1ll * mx[i].first, 1ll * a[i], mx[i].second}; \n\tfor (int x = 1; x <= N; x++) { \n\t\tlong long res = a[x]; \n\t\tfor (auto ite : add[x]) \n\t\t\tp[++cnt] = (Node){res + ite.first, res, ite.second}, res += ite.first; \n\t} \n\tsort(&p[1], &p[cnt + 1]); \n\tK = min(K, cnt); \n\tstable_sort(&p[1], &p[K + 1], [](const Node &i, const Node &j){ return op[i.id] < op[j.id]; }); \n\tprintf(\"%d\\n\", K); \n\tfor (int i = 1; i <= K; i++) printf(\"%d \", p[i].id); \n\tputchar('\\n'); \n    return 0; \n} "
}