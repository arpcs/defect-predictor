{
    "id": 181062506,
    "contestId": 521,
    "creationTimeSeconds": 1668504490,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 521,
        "index": "D",
        "name": "Shop",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 521,
        "members": [
            {
                "handle": "bkifhr7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1425279600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 6451200,
    "source": "#include <bits/stdc++.h>\n#define ll long long\n#define int long long\n#define INF 0x3f3f3f3f\n#define pii pair<int, int>\n#define fi first\n#define se second\n#define ALL(v) (v).begin(), (v).end()\n#define popcount(x) __builtin_popcount(x)\n#define setp(x) setprecision(x)\n#define MASK(x) (1LL << (x))\n#define BIT(x, i) ((x) >> (i) & 1)\n#define FastIO ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\nusing namespace std;\n\ntemplate<class X, class Y>\n\tinline bool maximize(X &x, const Y &y) {return (x < y ? x = y, 1 : 0);}\ntemplate<class X, class Y>\n\tinline bool minimize(X &x, const Y &y) {return (x > y ? x = y, 1 : 0);}\n\ntypedef long double ld;\n\nconst int NM = 1e5 + 10;\nint n, m, k;\nint a[NM];\npair<ll, int> b[NM];\nll s[NM];\n\nstruct Data {\n    int t, u, x, id;\n};\nData query[NM];\n\nstruct Choose {\n    ld fi;\n    int se, id;\n};\n\nvoid xuli() {\n    vector<Data> Q;\n    for(int i = 1; i <= n; i++)\n        if(b[i].fi) Q.push_back({1, i, b[i].fi - a[i], b[i].se});\n    for(int i = 1; i <= m; i++)\n        if(query[i].t > 1) Q.push_back(query[i]);\n\n\n    for(int i = 1; i <= n; i++) s[i] = a[i];\n\n    sort(ALL(Q), [](const Data A, const Data B){\n        return (A.t == B.t) ? A.x > B.x : A.t < B.t;\n    });\n\n    //for(Data u : Q) cout << u.t << ' ' << u.u << ' ' << u.x << ' ' << u.id << '\\n';\n\n    vector<Choose> vec;\n    for(Data u : Q) {\n        if(u.t < 3) {\n            ll preSum = s[u.u];\n            s[u.u] += u.x;\n            vec.push_back({ld(s[u.u]) / ld(preSum), u.t, u.id});\n        }\n        else\n        if(u.t == 3) vec.push_back({u.x, u.t, u.id});\n    }\n\n    //for(auto u : vec) cout << u.fi << ' ' << u.se << ' ' << u.id << '\\n';\n\n    sort(ALL(vec), [](const Choose A, const Choose B){\n        return A.fi > B.fi;\n    });\n\n    vector<int> ans[5];\n    for(int i = 0; i < k; i++) ans[vec[i].se].push_back(vec[i].id);\n\n    cout << k << '\\n';\n    for(int i = 1; i <= 3; i++)\n        for(int u : ans[i]) cout << u << \" \";\n}\nint32_t main()\n{\n    FastIO\n    cin >> n >> m >> k;\n    for(int i = 1; i <= n; i++) cin >> a[i];\n\n    for(int i = 1; i <= m; i++) {\n        int t, u, x;\n        cin >> t >> u >> x;\n        query[i] = {t, u, x, i};\n        if(t == 1)\n            if(maximize(b[u].fi, x)) b[u].se = i;\n    }\n\n    xuli();\n    return 0;\n}\n\n\t\t\t  \t\t \t\t  \t \t \t\t  \t\t  \t  \t \t"
}