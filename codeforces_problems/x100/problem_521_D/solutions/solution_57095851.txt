{
    "id": 57095851,
    "contestId": 521,
    "creationTimeSeconds": 1563192882,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 521,
        "index": "D",
        "name": "Shop",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 521,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1425279600
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 4403200,
    "source": "#include <bits/stdc++.h>\n\n// {{{\n#define PI pair<int, int>\n#define mk make_pair\n#define reg register\n#define ll long long\n#define rep(i, a, b) for(reg int i = a; i <= b; ++i)\n#define per(i, a, b) for(reg int i = a; i >= b; --i)\n// }}}\n\nusing namespace std;\n\ninline int min(reg int a, reg int b) { return a < b ? a : b; }\ninline int max(reg int a, reg int b) { return a > b ? a : b; }\ninline int read() {\n    reg int s = 0, f = 1; reg char ch = getchar();\n    while (!isdigit(ch)) { if (ch == '-') f = -1; ch = getchar(); }\n    while (isdigit(ch)) s = (s << 1) + (s << 3) + (ch ^ 48), ch = getchar();\n    return s * f;\n}\n\n#define N 100005\n\nint k, n, m;\nlong double a[N];\nll Max[N];\n\nclass Option {\n    public:\n        int Type, id, pos;\n        long double val;\n} opt[N];\n\nbool cmp1(Option a, Option b) { return a.val > b.val; }\n\nbool cmp2(Option a, Option b) { \n    if (a.Type == b.Type) return a.val < b.val;\n    return a.Type < b.Type; \n}\n\nint main() {\n    k = read(), n = read(), m = read();\n    rep (i, 1, k) a[i] = read();\n    rep (i, 1, n) {\n        opt[i].Type = read(), opt[i].id = read(), opt[i].val = read() * 1.0, opt[i].pos = i;\n        switch (opt[i].Type) {\n            case 1: \n                if (Max[opt[i].id] >= opt[i].val || opt[i].val <= a[i]) { opt[i].val = -1; break; }\n                Max[opt[i].id] = opt[i].val;\n                opt[i].val = 1.0 * opt[i].val / a[opt[i].id];\n            case 2: opt[i].val = 1.0 * (opt[i].val + a[opt[i].id]) / a[opt[i].id]; break;\n        }\n    }\n    sort(opt + 1, opt + n + 1, cmp1);\n    sort(opt + 1, opt + m + 1, cmp2);\n    int now = m;\n    rep (i, 1, m) {\n        if (1.0 * opt[i].val < 1.0) {\n            opt[i].Type = 0x7fffffff;\n            now--;\n            continue;\n        }\n    }\n    sort(opt + 1, opt + m + 1, cmp2);\n    printf(\"%d\\n\", now);\n    rep (i, 1, now) {\n        printf(\"%d \", opt[i].pos);\n    }\n    return 0; \n}\n\n/*\n ________________________________________ \n< Shop.cpp is created by zrz who is weak >\n ---------------------------------------- \n        \\   ^__^\n         \\  (oo)\\_______\n            (__)\\       )\\/\\\n                ||----w |\n                ||     ||\n*/\n\n\t \t     \t \t\t\t\t\t\t\t\t\t   \t   \t\t \t\t"
}