{
    "id": 68837525,
    "contestId": 521,
    "creationTimeSeconds": 1579061193,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 521,
        "index": "D",
        "name": "Shop",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 521,
        "members": [
            {
                "handle": "yuhaw"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1425279600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 5324800,
    "source": "// No.20200115110355\n#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <vector>\n#include <queue>\n#define mk make_pair\n#define pii pair<int, int>\n#define fi first\n#define se second\n#define N 100005\nusing namespace std;\ntypedef long long ll;\n\ntemplate <typename T> inline void cmax(T &x, const T &y) {\n    if (x < y) x = y;\n}\n\nstruct Node {\n    ll a, b; int id;\n    Node(ll x = 0, ll y = 0, int q = 0) { a = x, b = y, id = q; }\n    friend bool operator<(const Node &x, const Node &y) {\n        return 1.0 * x.b / (double) x.a < 1.0 * y.b / (double) y.a;\n    }\n};\n\nint K, n, m, a[N], ans[N], top;\npii b[N];\nvector<pii> p[N], mul;\n\nbool cmp(pii x, pii y) {\n    return x > y;\n}\n\nint main() {\n#ifdef LOCAL_JUDGE\n    freopen(\".in\", \"r\", stdin);\n    freopen(\".out\", \"w\", stdout);\n#endif\n\n    cin >> K >> n >> m;\n\n    for (int i = 1; i <= K; ++i)\n        scanf(\"%d\", a + i);\n\n    for (int i = 1, op, x, w; i <= n; ++i) {\n        scanf(\"%d%d%d\", &op, &x, &w);\n        if (op == 1) cmax(b[x], mk(w, i));\n        if (op == 2) p[x].push_back(mk(w, i));\n        if (op == 3) mul.push_back(mk(w, i));\n    }\n\n    priority_queue<Node> q;\n\n    for (int i = 1; i <= n; ++i) {\n        if (b[i].fi > a[i]) b[i].fi -= a[i], p[i].push_back(b[i]);\n        sort(p[i].begin(), p[i].end(), cmp);\n        for (int j = 0, sz = p[i].size(); j < sz; ++j)\n            q.push(Node(a[i], p[i][j].fi, p[i][j].se)), a[i] += p[i][j].fi;\n    }\n\n    for (int i = mul.size() - 1; ~i; --i)\n        if (mul[i].fi - 1) q.push(Node(1, mul[i].fi - 1, mul[i].se));\n\n    while (m && !q.empty())\n        ans[++top] = q.top().id, --m, q.pop();\n\n    sort(ans + 1, ans + top + 1);\n\n    cout << top << endl;\n\n    for (int i = 1; i <= top; ++i)\n        printf(\"%d \", ans[i]);\n\n    return 0;\n}\n"
}