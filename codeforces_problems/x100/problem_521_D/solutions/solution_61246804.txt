{
    "id": 61246804,
    "contestId": 521,
    "creationTimeSeconds": 1569373878,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 521,
        "index": "D",
        "name": "Shop",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 521,
        "members": [
            {
                "handle": "0724zcs"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1425279600
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 155,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 26316800,
    "source": "#include <cstdio>\r\n#include <cstring>\r\n#include <algorithm>\r\nusing namespace std;\r\n#define ll long long\r\nconst int N = 200020;\r\n#define Min(a, b) ((a) < (b) ? (a) : (b))\r\nstruct node\r\n{\r\n    int opt, id, x;\r\n    ll v, w;\r\n}m1[N], m2[N], m3[N], ans[N];\r\nint n, m, k;\r\nint tot1, tot2, tot3, cnt;\r\nint w[N];\r\ninline bool cmp1(node a, node b){return (a.x != b.x) ? (a.x < b.x) : (a.v < b.v);}\r\ninline bool cmp2(node a, node b){return (a.x != b.x) ? (a.x < b.x) : (a.v > b.v);}\r\ninline bool cmp3(node a, node b){return a.opt < b.opt;}\r\ninline bool cmp4(node a, node b){return a.v * b.w > a.w * b.v;}\r\nint main()\r\n{\r\n    scanf(\"%d%d%d\", &n, &m, &k);\r\n    for(int i = 1 ; i <= n ; i ++)\r\n        scanf(\"%d\", &w[i]);\r\n    for(int i = 1 ; i <= m ; i ++)\r\n    {\r\n        int a, b, c;\r\n        scanf(\"%d%d%d\", &a, &b, &c);\r\n        if(a == 1 && c > w[b])\r\n            m1[++ tot1] = (node) {1, i, b, c, 1};\r\n        else\r\n            if(a == 2)\r\n                m2[++ tot2] = (node) {2, i, b, c, 1};\r\n        else\r\n            if(a == 3)\r\n                m3[++ tot3] = (node) {3, i, b, c, 1};\r\n    }\r\n    sort(m1 + 1, m1 + 1 + tot1, cmp1);\r\n    int tmp = 0;\r\n    for(int i = 1 ; i <= tot1 ; i ++)\r\n        if(m1[i].x != m1[i + 1].x)\r\n            m1[++ tmp] = m1[i];\r\n    tot1 = tmp;\r\n    for(int i = 1 ; i <= tot1 ; i ++)\r\n    {\r\n        m1[i].v = m1[i].v - w[m1[i].x];\r\n        m2[++ tot2] = m1[i];\r\n    }\r\n    sort(m2 + 1, m2 + 1 + tot2, cmp2);\r\n    ll sum = 0;\r\n    for(int i = 1 ; i <= tot2 ; i ++)\r\n    {\r\n        if(m2[i].x != m2[i - 1].x)\r\n            sum = w[m2[i].x];\r\n        m2[i].w = sum;\r\n        sum += m2[i].v;\r\n    }\r\n    for(int i = 1 ; i <= tot3 ; i ++)\r\n        m3[i].v --;\r\n    for(int i = 1 ; i <= tot2 ; i ++)\r\n        m3[++ tot3] = m2[i];\r\n    sort(m3 + 1, m3 + 1 + tot3, cmp4);\r\n    tmp = Min(tot3, k);\r\n    for(int i = 1 ; i <= tmp ; i ++)\r\n        ans[++ cnt] = m3[i];\r\n    printf(\"%d\\n\", cnt);\r\n    sort(ans + 1, ans + 1 + cnt, cmp3);\r\n    for(int i = 1 ; i <= cnt ; i ++)\r\n        printf(\"%d \", ans[i].id);\r\n    return 0;\r\n}\r\n"
}