{
    "id": 178651747,
    "contestId": 521,
    "creationTimeSeconds": 1667200639,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 521,
        "index": "D",
        "name": "Shop",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 521,
        "members": [
            {
                "handle": "Dorost"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1425279600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/* \t* In the name of GOD  */\n\n#include \"bits/stdc++.h\"\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int, int> pii;\n#define F first\n#define S second\n#define mk make_pair\n#define int long long\nconst int N = 101234;\nint a[N];\nvector <pii> add[N];\npii mx[N];\nvector <pair <pii, int>> all;\nint b[N], tt[N];\n\nbool cmp (pair <pii, int> p, pair <pii, int> q) \n\tassert(p.F.F < 2000000);\n\tassert(q.F.F < 2000000);\n\tassert(p.F.S < 2000000);\n\tassert(q.F.F < 2000000000000);\n\treturn (p.F.F * q.F.S > p.F.S * q.F.F);\n}\n\nint32_t main() {\n\tios::sync_with_stdio(false);\n\tcin.tie();\n\tcout.tie();\n\tint k, n, m;\n\tcin >> k >> n >> m;\n\tfor (int i = 0; i < k; i++)\n\t\tcin >> a[i];\n\tfor (int i = 1; i <= n; i++) {\n\t\tint t, j, b;\n\t\tcin >> t >> j >> b;\n\t\ttt[i] = t;\n\t\t--j;\n\t\tif (t == 3)\n\t\t\tall.push_back(mk(mk(b - 1, 1), i));\n\t\telse if (t == 2) {\n\t\t\tadd[j].push_back(mk(b, i));\n\t\t} else {\n\t\t\tif (b > mx[j].F)\n\t\t\t\tmx[j] = mk(b - a[j], i);\n\t\t}\n\t}\n\tfor (int j = 0; j < k; j++) {\n\t\tif (mx[j].F != 0) {\n\t\t\tadd[j].push_back(mk(mx[j].F, mx[j].S));\n\t\t}\n\t\tsort(add[j].begin(), add[j].end());\n\t\treverse(add[j].begin(), add[j].end());\n\t\tint ps = a[j];\n\t\tfor (auto [x, i] : add[j]) {\n\t\t\tall.push_back(mk(mk(x, ps), i));\n\t\t\tps += x;\n\t\t}\n\t}\n\tsort (all.begin(), all.end(), cmp);\n\tint sz = min((int)all.size(), m);\n\tvector <int> wef[3];\n\tcout << sz << '\\n';\n\tfor (int i = 0; i < sz; i++) {\n\t\tint j = all[i].S;\n\t\twef[tt[j] - 1].push_back(j);\n\t}\n\tfor (int i = 0; i < 3; i++)\n\t\tfor (int k : wef[i])\n\t\t\tcout << k << ' ';\n}\n\n\n"
}