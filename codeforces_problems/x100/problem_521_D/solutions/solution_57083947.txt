{
    "id": 57083947,
    "contestId": 521,
    "creationTimeSeconds": 1563178068,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 521,
        "index": "D",
        "name": "Shop",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 521,
        "members": [
            {
                "handle": "hsl2363"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1425279600
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 155,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 8294400,
    "source": "#include <bits/stdc++.h>\r\n#define Inf 0x3f3f3f3f\r\n#define rg register\r\nusing namespace std;\r\ntypedef long long ll;\r\ninline ll min(ll x, ll y) { return x < y ? x : y; }\r\ninline ll max(ll x, ll y) { return x > y ? x : y; }\r\nconst int Maxn = 1e5 + 5;\r\ninline int read()\r\n{\r\n\trg int res = 0;\r\n\trg char ch = getchar();\r\n\twhile (!isdigit(ch))\r\n\t\tch = getchar();\r\n\tdo\r\n\t{\r\n\t\tres = (res << 3) + (res << 1) + (ch ^ 48);\r\n\t\tch = getchar();\r\n\t} while (isdigit(ch));\r\n\treturn res;\r\n}\r\nstruct str1\r\n{\r\n\tint id;\r\n\tlong double cnt;\r\n\tbool operator<(str1 an) const\r\n\t{\r\n\t\treturn cnt < an.cnt;\r\n\t}\r\n};\r\nstruct str2\r\n{\r\n\tint id, cnt;\r\n\tbool operator<(str2 an) const\r\n\t{\r\n\t\treturn cnt > an.cnt;\r\n\t}\r\n} change[Maxn];\r\nint n, m, k, a[Maxn], opt[Maxn];\r\nbool used[Maxn];\r\nlong double cnt;\r\nvector<str2> add[Maxn];\r\nvector<int> ans[4];\r\npriority_queue<str1> q;\r\nint main()\r\n{\r\n\trg int x, y;\r\n\trg ll sum;\r\n\tcin >> n >> m >> k;\r\n\tfor (int i = 1; i <= n; i++)\r\n\t\ta[i] = read();\r\n\tfor (int i = 1; i <= m; i++)\r\n\t{\r\n\t\topt[i] = read();\r\n\t\tx = read();\r\n\t\ty = read();\r\n\t\tif (opt[i] == 1)\r\n\t\t{\r\n\t\t\tif (y > change[x].cnt)\r\n\t\t\t{\r\n\t\t\t\tchange[x].cnt = y;\r\n\t\t\t\tchange[x].id = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (opt[i] == 2)\r\n\t\t\tadd[x].push_back({i, y});\r\n\t\telse\r\n\t\t\tq.push({i, y});\r\n\t}\r\n\tfor (int i = 1; i <= n; i++)\r\n\t{\r\n\t\tif (change[i].id)\r\n\t\t\tadd[i].push_back({change[i].id, change[i].cnt - a[i]});\r\n\t\tsort(add[i].begin(), add[i].end());\r\n\t\tsum = a[i];\r\n\t\tfor (int j = 0; j < add[i].size(); j++)\r\n\t\t{\r\n\t\t\tq.push({add[i][j].id, (long double)(sum + add[i][j].cnt) / sum});\r\n\t\t\tsum += add[i][j].cnt;\r\n\t\t}\r\n\t}\r\n\tfor (int i = 1; i <= k && !q.empty(); i++)\r\n\t{\r\n\t\tif (q.top().cnt <= 1)\r\n\t\t\tbreak;\r\n\t\tcnt = i;\r\n\t\tans[opt[q.top().id]].push_back(q.top().id);\r\n\t\tq.pop();\r\n\t}\r\n\tcout << cnt << endl;\r\n\tfor (int t = 1; t <= 3; t++)\r\n\t\tfor (int i = 0; i < ans[t].size(); i++)\r\n\t\t\tprintf(\"%d \", ans[t][i]);\r\n\treturn 0;\r\n}\r\n"
}