{
    "id": 207756182,
    "contestId": 1665,
    "creationTimeSeconds": 1685364087,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 7782400,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N=2e5+10;\n\nint T,n,m;\nvector<int> sons[N];\n\nbool check(int x,vector<int> &q)\n{\n    int res=0;\n    for(int i=0;i<q.size()-1;i++) res=max(res,q[i]+i-1);\n\n    int t=q.size()-1;\n    if(q.back()>=res) t+=q.back();\n    else t+=q.back()+(res-q.back()+1)/2;\n\n    return t>=x;\n}\n\nvoid solve()\n{\n    cin>>n;\n    for(int i=1;i<=n;i++) sons[i].clear();\n\n    for(int i=2;i<=n;i++)\n    {\n        int x;\n        cin>>x;\n        sons[x].push_back(i);\n    }\n\n    map<int,int> mp;\n    mp[1]++;\n    for(int i=1;i<=n;i++)\n    {\n        if(sons[i].size()>=1) mp[sons[i].size()]++;\n    }\n\n    // for(auto it:mp) cout<<it.first<<' '<<it.second<<endl;\n    // cout<<endl;\n\n    vector<int> q;\n    auto it=mp.end();it--;\n    while(1)\n    {\n        if(it==mp.begin())\n        {\n            q.push_back(it->second);\n            break;\n        }\n\n        for(int i=0;i<it->second;i++) q.push_back(it->first);\n        it--;\n    }\n\n    priority_queue<int,vector<int>,less<int> > p;\n    int ans=1;\n\n    // for(int i=0;i<q.size();i++) cout<<q[i]<<' ';\n    // cout<<endl;\n\n    for(int i=0;i<q.size();i++) p.push(q[i]+i),ans++;\n    while(ans<p.top())\n    {\n        int t=p.top();\n        p.pop();\n\n        p.push(t-1);\n        ans++;\n    }\n\n    cout<<ans<<endl;\n}\n\nsigned main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0),cout.tie(0);\n\n    cin>>T;\n    //T=1;\n    \n    while(T--) \n        solve();\n    \n    return 0;\n}\n\t   \t\t \t \t  \t \t\t\t\t\t \t \t\t \t"
}