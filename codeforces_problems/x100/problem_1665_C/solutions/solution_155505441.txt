{
    "id": 155505441,
    "contestId": 1665,
    "creationTimeSeconds": 1651405818,
    "relativeTimeSeconds": 2418,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "Kyooma"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1651403400
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 20377600,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n#define dbg(x...) \\\r\n    do { \\\r\n        cout << #x << \" -> \"; \\\r\n        err(x); \\\r\n    } while (0)\r\n\r\nvoid err() {\r\n    cout << endl;\r\n}\r\n\r\ntemplate<class T, class... Ts>\r\nvoid err(T arg, Ts &... args) {\r\n    cout << arg << ' ';\r\n    err(args...);\r\n}\r\n\r\ntypedef long long ll;\r\ntypedef pair<int, int> pii;\r\nconst int N = 2e5 + 10, Log = 20, inf = 0x3f3f3f3f;\r\n\r\nvector<int> e[N], p;\r\n\r\nvoid dfs(int u){\r\n    int c = 0;\r\n    for(int i : e[u]){\r\n        dfs(i);\r\n        c++;\r\n    }\r\n    if(c) p.push_back(c);\r\n}\r\n\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n    for(int i = 2, fa; i <= n; i++){\r\n        cin >> fa;\r\n        e[fa].push_back(i);\r\n    }\r\n    dfs(1);\r\n    p.push_back(1);\r\n    sort(p.begin(), p.end(), [](const int &k1, const int &k2){\r\n        return k1 > k2;\r\n    });\r\n    int t = (int)p.size(), ans = 0;\r\n    priority_queue<int> q;\r\n    for(int i = 0; i < p.size(); i++){\r\n        p[i] -= t - i;\r\n        if(p[i] > 0) q.push(p[i]);\r\n    }\r\n    while(!q.empty()){\r\n        int x = q.top();\r\n        q.pop();\r\n        if(x <= ans) continue;\r\n        ans++;\r\n        x--;\r\n        q.push(x);\r\n    }\r\n    cout << ans + t << '\\n';\r\n    for(int i = 1; i <= n; i++) e[i].clear();\r\n    p.clear();\r\n}\r\n\r\nint main() {\r\n    int T = 1;\r\n    ios::sync_with_stdio(false);\r\n    cin >> T;\r\n    while (T--) solve();\r\n    return 0;\r\n}"
}