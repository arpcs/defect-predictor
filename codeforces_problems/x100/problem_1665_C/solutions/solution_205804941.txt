{
    "id": 205804941,
    "contestId": 1665,
    "creationTimeSeconds": 1684052334,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "gtheoden42"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 17920000,
    "source": "\r\n\r\n/* author: (g)theoden42 */\r\n\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n#define all(a) a.begin(), a.end()\r\n#ifdef ON_PC\r\n    #include <debug.h>\r\n#else\r\n    #define debug(x...)\r\n#endif\r\n\r\ntemplate<typename T>\r\nusing ordset = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\nusing ll =  long long;\r\nusing ld = long double;\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nconst int MAX_N = 1e6 + 5;\r\nconst ll MOD = 1e9 + 7;\r\nconst ll INF = 1e9;\r\n\r\nvoid dfs(int source, int parent, vector<vector<int>>& adj, vector<int>& temp){\r\n\tif(source == 0){\r\n\t\tif(adj[source].size() != 0)\r\n\t\t\ttemp.push_back(adj[source].size());\r\n\t}\r\n\telse{\r\n\t\tif(adj[source].size() != 1)\r\n\t\t\ttemp.push_back(adj[source].size() - 1);\r\n\t}\r\n\tfor(auto x: adj[source]){\r\n\t\tif(x != parent){\r\n\t\t\tdfs(x, source, adj, temp);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvoid solve() {\r\n\tint n;\r\n\tcin >> n;\r\n\tvector<vector<int>> adj(n);\r\n\tfor(int i = 1; i <= n - 1; i++){\r\n\t\tint p;\r\n\t\tcin >> p;\r\n\t\tp--;\r\n\t\tadj[p].push_back(i);\r\n\t\tadj[i].push_back(p);\r\n\t}\r\n\r\n\tvector<int> temp;\r\n\ttemp.push_back(1);\r\n\tdfs(0, -1, adj, temp);\r\n\r\n\r\n\r\n\tsort(temp.rbegin(), temp.rend());\r\n\tint x = temp.size();\r\n\tint count = x;\r\n\tmultiset<int> mst;\r\n\r\n\tfor(int i = 0; i < x; i++){\r\n\t\ttemp[i] = max(0, temp[i] - x - i);\r\n\t\tif(temp[i] != 0){\r\n\t\t\tmst.insert(temp[i]);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tint temp_count = 0;\r\n\twhile(!mst.empty()){\r\n\t\tauto it = *(--mst.end());\r\n\t\tif(it <= temp_count)break;\r\n\t\tmst.erase(--mst.end());\r\n\t\tmst.insert(it - 1);\r\n\t\ttemp_count++;\r\n\t}\r\n\r\n\tcount += temp_count;\r\n\tcout << count << \"\\n\";\r\n}\r\n\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0); cout.tie(0);\r\n    int tc = 1;\r\n    cin >> tc;\r\n    for (int t = 1; t <= tc; t++) {\r\n        // cout << \"Case #\" << t << \": \";\r\n        solve();\r\n    }\r\n}"
}