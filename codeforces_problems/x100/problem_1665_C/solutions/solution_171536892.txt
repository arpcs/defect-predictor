{
    "id": 171536892,
    "contestId": 1665,
    "creationTimeSeconds": 1662748067,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "evenvalue"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 8908800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define int long long\r\n\r\n#ifdef evenvalue\r\n  #include \"debug.h\"\r\n  #define debug(...) print(#__VA_ARGS__, __VA_ARGS__)\r\n#else\r\n  #define debug(...)\r\n#endif\r\n\r\nusing int64 = long long;\r\nusing ld = long double;\r\n\r\ntemplate<typename T>\r\nusing min_heap = priority_queue<T, vector<T>, greater<T>>;\r\ntemplate<typename T>\r\nusing max_heap = priority_queue<T, vector<T>, less<T>>;\r\n\r\nnamespace read {\r\nint Int() {\r\n  int x;\r\n  cin >> x;\r\n  return x;\r\n}\r\nint64 Int64() {\r\n  int64 x;\r\n  cin >> x;\r\n  return x;\r\n}\r\nchar Char() {\r\n  char c;\r\n  cin >> c;\r\n  return c;\r\n}\r\nstring String() {\r\n  string s;\r\n  cin >> s;\r\n  return s;\r\n}\r\ndouble Double() {\r\n  return stod(String());\r\n}\r\nld LongDouble() {\r\n  return stold(String());\r\n}\r\ntemplate<typename T1, typename T2>\r\npair<T1, T2> Pair() {\r\n  pair<T1, T2> p;\r\n  cin >> p.first >> p.second;\r\n  return p;\r\n}\r\ntemplate<typename T>\r\nvector<T> Vec(const int n) {\r\n  vector<T> v(n);\r\n  for (T &x : v) {\r\n    cin >> x;\r\n  }\r\n  return v;\r\n}\r\ntemplate<typename T>\r\nvector<vector<T>> VecVec(const int n, const int m) {\r\n  vector<vector<T>> v(n);\r\n  for (vector<T> &vec : v) {\r\n    vec = Vec<T>(m);\r\n  }\r\n  return v;\r\n}\r\n}//namespace read\r\n\r\nconstexpr int kInf = 1e9 + 10;\r\nconstexpr int64 kInf64 = 1e15 + 10;\r\nconstexpr int kMod = 1e9 + 7;\r\n\r\ninline void solution() {\r\n  const int n = read::Int();\r\n  vector<int> par = read::Vec<int>(n - 1);\r\n  vector<vector<int>> g(n);\r\n  for (int i = 1; i < n; i++) {\r\n    g[par[i - 1] - 1].push_back(i);\r\n  }\r\n\r\n  vector<int> depth(n + 1);\r\n\r\n  par.erase(unique(par.begin(), par.end()), par.end());\r\n  const int force = par.size() + 1;\r\n  const int extra = n - 2 * force + 1;\r\n  cout << force + (max(0LL, extra) + 1) / 2 << '\\n';\r\n}\r\n\r\nint32_t main() {\r\n  ios_base::sync_with_stdio(false);\r\n  cin.tie(nullptr);\r\n\r\n  // freopen(\".in\", \"r\", stdin);\r\n  // freopen(\".out\", \"w\", stdout);\r\n\r\n  cout << fixed << setprecision(10);\r\n\r\n  int testcases = 1;\r\n  cin >> testcases;\r\n  while (testcases--) {\r\n    solution();\r\n  }\r\n}"
}