{
    "id": 169458736,
    "contestId": 1665,
    "creationTimeSeconds": 1661284191,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "Eggz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 921600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define endl '\\n'\r\n#define ll long long\r\n\r\nint main() {\r\n\tcin.sync_with_stdio(0);\r\n\tcin.tie(0);\r\n\r\n\tint T; cin>>T;\r\n\twhile (T--) {\r\n\t\tint N, t=0; cin>>N;\r\n\t\tvector<int> cnt(N);\r\n\t\tfor (int i=0,p; i<N-1; i++) cin>>p, cnt[p-1]++;\r\n\t\tsort(cnt.begin(), cnt.end());\r\n\t\tint e=0;\r\n\t\tfor (int i=0, cut=-1; i<N; i++) {\r\n\t\t\tif (cnt[i]==0) cut=i;\r\n\t\t\telse cnt[i]=max(0,cnt[i]-(i-cut)), e++;\r\n\t\t}\r\n\t\tvector<int> V;\r\n\t\tfor (int i : cnt) if (i) V.push_back(i);\r\n\t\tN=V.size();\r\n\t\twhile (N) {\r\n\t\t\tvector<int> mx={0,0}; //val, ind\r\n\t\t\tint at=0;\r\n\t\t\tfor (int i=0; i<N; i++) {\r\n\t\t\t\tif (V[i]) V[i]--;\r\n\t\t\t\tif (V[i]) {\r\n\t\t\t\t\tV[at]=V[i], at++;\r\n\t\t\t\t\tif (V[at]>mx[0]) mx={V[at-1], at-1};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (mx[0]) V[mx[1]]--;\r\n\t\t\tat=0;\r\n\t\t\tfor (int i=0; i<N; i++) if (V[i]) V[at]=V[i], at++;\r\n\t\t\tN=at;\r\n\t\t\tt++;\r\n\t\t}\r\n\t\tcout << t+e+1 << endl;\r\n\t}\t\r\n}"
}