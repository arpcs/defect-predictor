{
    "id": 165904376,
    "contestId": 1665,
    "creationTimeSeconds": 1658932924,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "tanu24"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 11878400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n// Uncomment them for optimisations\r\n//#pragma GCC optimize(\"Ofast\")\r\n//#pragma GCC target(\"avx,avx2,fma\")\r\n#define popcount(x) __builtin_popcount(x)\r\n#define GET_MACRO(_1,_2,_3,_4,NAME,...) NAME\r\n#define range(...) GET_MACRO(__VA_ARGS__, r4, r3, r2, r1)(__VA_ARGS__)\r\n#define r4(var, start, stop, step) for(ll var=start;step>=0?var<stop:var>stop;var=var+step)\r\n#define r3(var, start, stop) for(ll var = start; var < stop; var++)\r\n#define r2(var, stop) for(ll var = 0; var < stop; var++)\r\n#define r1(stop) for(ll start_from_0 = 0; start_from_0 < stop; start_from_0++)\r\n#define newint(...) ll __VA_ARGS__; take_input(__VA_ARGS__)\r\n#define min(...) min({__VA_ARGS__})\r\n#define max(...) max({__VA_ARGS__})\r\n#define give(...) {print(__VA_ARGS__); return ;}\r\n#define endl \"\\n\"\r\n#define FULL_INF numeric_limits<double>::infinity()\r\n#define INF LONG_LONG_MAX\r\n#define INT_INF INT_MAX\r\n#define ld long double\r\n#define V vector\r\n#define P pair\r\n#define S set\r\n#define MS multiset\r\n#define M map\r\n#define UM unordered_map\r\n#define US unordered_set\r\n#define MM multimap\r\n#define mt make_tuple\r\n#define mp make_pair\r\n#define pb push_back\r\n#define pf push_front\r\nconst ll mod = 1000000007; \r\n//const ll mod = 998244353; \r\n#define FAST ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n#define all(a) a.begin(), a.end()\r\n#define db(x) cout << #x << \" = \" << x << \"\\n\"\r\n#define newstring(str) string str; cin >> str;\r\n#define foreach(a, x) for (auto &a : x)\r\nconst ld pi = acos(-1);\r\ntypedef vector<string> vs; typedef pair<ll, ll> pii;typedef vector<ll> vi;typedef map<ll, ll> mii; typedef set<ll> si; typedef vector<vector<ll>> vvi; \r\ntemplate<typename ...T>void take_input(T&&...args){((cin >> args), ...);}\r\nvi inputvec(ll n, ll start = 0){vi vec(n);range(i, start, n)cin >> vec[i];return vec;}\r\ntemplate<typename T>bool btn(T a, T b, T c){if((a <= b && b <= c) || (a >= b && b >= c)) return true; return false;}\r\ntemplate<typename T>ostream& operator<<(ostream& os,const V<T>& v){for(int i=0;i<v.size();++i){os<<v[i];if(i!=v.size()-1)os<<\" \";}return os;}\r\ntemplate <typename _A, typename _B>ostream &operator<<(ostream &os, const pair<_A, _B> &p){os<<\"[\"<<p.first<<\", \"<<p.second<<\"]\";return os;}\r\ntemplate<typename... T>void print(T &&...args){((cout<<args<< \" \"), ...);cout<<endl;}\r\ntemplate<typename... T>void printl(T &&...args){ ((cout << args << \" \"), ...);}\r\ninline ld TLD(ll n) {return n;}\r\nll gcd(ll __m, ll __n) { return __n == 0 ? __m : gcd(__n, __m % __n);}\r\ninline ll rs(ll n){return n%mod >= 0 ? n % mod : (n%mod)+mod;}\r\nll power(ll x, ll y){ ll res = 1;while (y){if (y % 2 == 1)res = (res * x) % mod; y = y >> 1;x = (x * x) % mod;}return res % mod;}\r\n/* -------------------------------------------------------------------------------------------------------------------------------------------------------- */\r\nll c=0;\r\n\r\nvoid dfs(vi &parent, ll v, ll u, vvi &g, vi& dp)\r\n{\r\n    parent[v]=u;\r\n    foreach(i,g[v])\r\n    {   \r\n        if(i==u)continue;\r\n        dfs(parent,i,v,g,dp);\r\n        dp[v]=max(dp[v],1+dp[i]);\r\n    }\r\n\r\n    return ;\r\n}\r\n\r\nvoid func()\r\n{\r\n    newint(n);\r\n    vvi g(n+1);\r\n    range(i,n-1)\r\n    {   \r\n        newint(u);\r\n        g[i+2].push_back(u);\r\n        g[u].push_back(i+2);\r\n    }\r\n    vi dp(n+1,0);\r\n    vi parent(n+1);\r\ndfs(parent,1,-1,g,dp);\r\n\r\n    map<ll,ll> mpp;\r\n    range(i,1,n+1)\r\n    {\r\n        mpp[parent[i]]++;\r\n    }\r\n    \r\n    ll ans=0;\r\n    ll x = 1,y=1;\r\n    foreach(i,mpp)\r\n    {   \r\n        if(i.second>=x){x=i.second;y=i.first;}\r\n        ans+=(i.second+1)/2;\r\n    }\r\n    // print(y);\r\n    print(ans-dp[y]+1);\r\n\r\n\r\n\r\n\r\n}\r\nint main()\r\n{\r\n    // Uncomment for faster I/O\r\n    // FAST;\r\n    newint(t);\r\n    range(t)\r\n    {\r\n        func();\r\n    }\r\n}\r\n"
}