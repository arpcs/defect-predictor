{
    "id": 157017858,
    "contestId": 1665,
    "creationTimeSeconds": 1652452502,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "DK_Pluto"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 819200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\nconst int maxn=1e5+10;\r\nconst ll mod=998244353;\r\nconst int inf=__INT_MAX__;\r\nconst ll lnf=__LONG_LONG_MAX__;\r\nconst int xi[8]={0,1,0,-1,1,1,-1,-1};\r\nconst int yi[8]={1,0,-1,0,1,-1,-1,1};\r\nint tre[maxn],cnt[maxn];\r\nint main(void)\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);cout.tie(0);\r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        int n;\r\n        cin>>n;\r\n        for(int i=1;i<=n;++i) tre[i]=0,cnt[i]=0;\r\n        tre[1]=1;\r\n        for(int i=2;i<=n;++i) cin>>tre[i];\r\n        for(int i=2;i<=n;++i) cnt[tre[i]]++;\r\n        sort(cnt+1,cnt+1+n,[](const int a,const int b){return a>b;});\r\n        int maxx=cnt[1];\r\n        int cnt1=0;\r\n        for(int i=1;i<=n;++i)\r\n        {\r\n            if(cnt[i]>0)\r\n                ++cnt1;\r\n        }\r\n        if(cnt1>=maxx)\r\n        {\r\n            cout<<cnt1+1<<'\\n';\r\n        }\r\n        else if(maxx>cnt1)\r\n        {\r\n            int tp=ceil(((double)maxx-(double)(cnt1+1))/2.0);\r\n            cout<<cnt1+1+tp<<'\\n';\r\n        }\r\n    }\r\n}"
}