{
    "id": 178938647,
    "contestId": 1665,
    "creationTimeSeconds": 1667384723,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "Buqiujun"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 8396800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int maxn = 2e5 + 10;\r\n\r\nint ans;\r\n\r\nvoid moni(vector<int> a) //\u6bcf\u4e00\u79d2\u949f\u7684\u60c5\u51b5\u3002\r\n{\r\n    if (a.empty())\r\n        return;   //\u5df2\u7ecf\u611f\u67d3\u5b8c\u4e86\r\n    int last = 0; //\r\n    int n = a.size();\r\n    while (last < n && a[last] == a[0])\r\n        last++;\r\n    last--; //\u5f53\u524d\u6307\u5411\u7684\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u6700\u5927\u7684\u3002\r\n    a[last]--;\r\n    ans++;\r\n    for (int i = 0; i < n; i++)\r\n        a[i]--;\r\n    while (!a.empty() && a.back() <= 0)\r\n        a.pop_back();\r\n    moni(a);\r\n}\r\n\r\nvoid solve() //\r\n{\r\n    int n;\r\n    ans = 0;\r\n    cin >> n;\r\n    vector<int> a(n + 1);\r\n    for (int i = 2; i <= n; i++)\r\n    {\r\n        int x;\r\n        cin >> x;\r\n        a[x]++;\r\n    }\r\n    a.emplace_back(1);\r\n    sort(a.rbegin(), a.rend());\r\n    while (!a.empty() && a.back() <= 0)\r\n        a.pop_back();\r\n    n = a.size();\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        a[i] -= n - i;\r\n        ++ans;\r\n    }\r\n    sort(a.rbegin(), a.rend());\r\n    while (!a.empty() && a.back() <= 0)\r\n        a.pop_back();\r\n    moni(a);\r\n    cout << ans << '\\n';\r\n}\r\nint main()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr), cout.tie(nullptr);\r\n    int t;\r\n    cin >> t;\r\n    while (t--)\r\n        solve();\r\n}"
}