{
    "id": 168391776,
    "contestId": 1665,
    "creationTimeSeconds": 1660572456,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "MaroonSky"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 11264000,
    "source": "#include<bits/stdc++.h>\r\n#define inf INT_MAX\r\n#define ll long long\r\n#define sc(a) scanf(\"%d\",&a)\r\n#define scc(a,b) scanf(\"%d %d\",&a,&b)\r\n#define sccc(a,b,c) scanf(\"%d %d %d\",&a,&b,&c)\r\n#define lsc(a) scanf(\"%lld\",&a)\r\n#define lscc(a,b) scanf(\"%lld %lld\",&a,&b)\r\n#define lsccc(a,b,c) scanf(\"%lld %lld %lld\",&a,&b,&c)\r\n#define pf(a) printf(\"%d\",a)\r\n#define pff(a,b) printf(\"%d %d\",a,b)\r\n#define pfff(a,b,c) printf(\"%d %d %d\",a,b,c)\r\n#define pb(a) push_back(a)\r\n#define em empty()\r\n#define fr front()\r\n#define cl clear()\r\n#define sz size()\r\n#define mp(a,b) make_pair(a,b)\r\n#define fri(b) freopen(b,\"r\",stdin)\r\n#define fro(b) freopen(b,\"w\",stdout)\r\n#define bassifir(a) __builtin_clz(a)\r\n#define sonsifir(a) __builtin_ctz(a)\r\n#define birsay(a) __builtin_popcount(a)\r\n\r\n\r\n\r\nusing namespace std;\r\n\r\nint arr[200013];\r\nint st[1000052];\r\nint lazy[1000052];\r\nconst int N = 200000;\r\n\r\nint cnt[200013];\r\nvector < int > vec;\r\n\r\n\r\nvoid build(int v,int tl,int tr){\r\n    if(tl>tr){\r\n        return;\r\n    }\r\n    if(tl==tr){\r\n        st[v]=arr[tl];\r\n        return;\r\n    }\r\n    int tm=(tl+tr)/2;\r\n    build(2*v,tl,tm);\r\n    build(2*v+1,tm+1,tr);\r\n    st[v]=st[2*v]+st[2*v+1];\r\n    return;\r\n}\r\n\r\nvoid update(int v,int tl,int tr,int l,int r,int add){\r\n    if(lazy[v]){\r\n        st[v]+=(tr-tl+1)*lazy[v];\r\n        lazy[2*v]+=lazy[v];\r\n        lazy[2*v+1]+=lazy[v];\r\n        lazy[v]=0;\r\n    }\r\n    if(tl>tr || tl>r || tr<l || l>r){\r\n        return;\r\n    }\r\n    if(tl>=l && tr<=r){\r\n        st[v]+=(tr-tl+1)*add;\r\n        lazy[2*v]+=add;\r\n        lazy[2*v+1]+=add;\r\n        return;\r\n    }\r\n    int tm=(tl+tr)/2;    \r\n    update(2*v,tl,tm,l,r,add);\r\n    update(2*v+1,tm+1,tr,l,r,add);\r\n    st[v]=st[2*v]+st[2*v+1];\r\n    return;\r\n}\r\n\r\nint query(int v,int tl,int tr,int l,int r){\r\n    if(tl>tr || tl>r || tr<l || l>r){\r\n        return 0;\r\n    }\r\n    if(lazy[v]){\r\n        st[v]+=(tr-tl+1)*lazy[v];\r\n        lazy[2*v]+=lazy[v];\r\n        lazy[2*v+1]+=lazy[v];\r\n        lazy[v]=0;\r\n    }\r\n    if(tl>=l && tr<=r){\r\n        return st[v];\r\n    }    \r\n    int tm=(tl+tr)/2;\r\n    return query(2*v,tl,tm,l,r)+query(2*v+1,tm+1,tr,l,r);\r\n}\r\n\r\nint main(){\r\n\tios_base::sync_with_stdio(0); \r\n\tcin.tie(0);\r\n\tcout.tie(0);\r\n\t// fri(\"contestgir.txt\");\r\n\t// fro(\"contestcik.txt\");\r\n\r\n\tint t;\r\n\tcin>>t;\r\n\tfor(int u = 1; u <= t; u++) {\r\n\t\tint n;\r\n\t\tcin>>n;\r\n\t\tbuild(1,1,n);\r\n\t\tarr[0] = 1;\r\n\t\tfor(int i = 0; i <= n; i++) {\r\n\t\t\tarr[i] = 0;\r\n\t\t\tst[i] = 0;\r\n\t\t\tlazy[i] = 0;\r\n\t\t\tcnt[i] = 0;\r\n\t\t}\r\n\t\tfor(int i = n+1; i <= 4*n; i++) {\r\n\t\t\tst[i] = 0;\r\n\t\t\tlazy[i] = 0;\r\n\t\t}\r\n\t\tfor(int i = 2; i <= n; i++) {\r\n\t\t\tint k;\r\n\t\t\tcin>>k;\r\n\t\t\tcnt[k]++;\r\n\t\t}\r\n\t\tcnt[0] = 1; \r\n\t\tfor(int i = 0; i <= n; i++) {\r\n\t\t\tif(cnt[i] > 0) {\r\n\t\t\t\tvec.pb(cnt[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsort(vec.rbegin(),vec.rend());\r\n\r\n\r\n\r\n\t\tint sec = 1;\r\n\r\n\t\tfor(int i = 0; i < vec.size(); i++) {\r\n\t\t\tupdate(1,1,n,sec,sec+vec[i]-1,1);\r\n\t\t\tsec ++;\r\n\t\t}\r\n\t\tupdate(1,1,n,vec.size()+1,n + 13,1);\r\n\r\n\t\tint l = 1;\r\n\t\tint r = n + 13;\r\n\r\n\t\twhile(l + 1 < r) {\r\n\t\t\tint mid = (l+r)/2;\r\n\t\t\tint q = query(1,1,n,1,mid);\r\n\t\t\tif (q >= n) {\r\n\t\t\t\tr = mid;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tl = mid;\r\n\t\t\t}\r\n\t\t}\r\n\t\tint ans = l + 1;\r\n\r\n\r\n\t\tcout<<ans<<endl;\r\n\r\n\t\tvec.clear();\r\n\r\n\t} \r\n\r\n\treturn 0;\r\n}\r\n\r\n"
}