{
    "id": 159874138,
    "contestId": 1665,
    "creationTimeSeconds": 1654627801,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "sourav900"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "Python 3",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "t = int(input()) \r\nfor _ in range(t): \r\n    n = int(input()) \r\n    p = list(map(int,input().split())) \r\n    groups = Counter(p) \r\n    g = len(groups) \r\n    time_needed = [] \r\n    infection_time = 0 \r\n    for _,group_size in groups.most_common(): \r\n        time_needed.append(infection_time+group_size) \r\n    infection_time+=1 \r\n    while infection_time<max(time_needed): \r\n        while(g==1 or time_needed[0]>=time_needed[1]) and infection_time<time_needed[0]: \r\n            time_needed[0]-=1 \r\n            infection_time+=1 \r\n        \r\n        if(g>1): \r\n            for group_id in range(1,g): \r\n                if time_needed[group_id]>time_needed[0] and infection_timer<time_needed[group_id]: \r\n                    time_needed[group_id]-=1 \r\n                    infection_time+=1 \r\n    print(infection_time) \r\n    "
}