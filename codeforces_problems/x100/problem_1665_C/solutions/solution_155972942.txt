{
    "id": 155972942,
    "contestId": 1665,
    "creationTimeSeconds": 1651764712,
    "relativeTimeSeconds": 2212,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "demantarnir"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1651762500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 296,
    "memoryConsumedBytes": 2457600,
    "source": "#pragma GCC optimize(\"Ofast\", \"unroll-loops\")\n#pragma GCC target(\"avx2,fma\")\n#include <bits/stdc++.h>\nusing namespace std;\n#define rep(i, a, b) for (__typeof(a) i = (a); i < (b); ++i)\n#define iter(it, c) \\\n  for (__typeof((c).begin()) it = (c).begin(); it != (c).end(); ++it)\ntypedef pair<int, int> ii;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\ntypedef long long ll;\nconst int INF = ~(1 << 31);\n\n#define sc second\n#define fs first\n#define pb push_back\n\nconst double EPS = 1e-9;\nconst double pi = acos(-1);\ntypedef unsigned long long ull;\ntypedef vector<vi> vvi;\ntypedef vector<vii> vvii;\ntemplate <class T>\nT smod(T a, T b) {\n  return (a % b + b) % b;\n}\n// vim: cc=60 ts=2 sts=2 sw=2:\n\nvoid solve() {\n  int n;\n  cin >> n;\n\n  // cout << \"---\" << endl;\n  vi cnt(n, 0);\n  rep(i, 0, n - 1) {\n    int p;\n    cin >> p;\n    p--;\n    cnt[p]++;\n  }\n\n  cnt.pb(1);\n  sort(cnt.rbegin(), cnt.rend());\n\n  int res = 0;\n  int cntch = 0;\n  while (cntch < n && cnt[cntch] != 0) cntch++;\n\n  rep(i, 0, cntch) {\n    cnt[i] -= cntch - i;\n    cnt[i] = max(cnt[i], 0);\n  }\n  res += cntch;\n\n  // cout << res << endl;\n\n  priority_queue<int> q;\n  rep(i, 0, cntch) {\n    if (cnt[i] != 0) q.push(cnt[i]);\n  }\n\n  int ch = 0;\n  while (!q.empty()) {\n    int x = q.top();\n    q.pop();\n    if (x - ch > 0) {\n      ch++;\n      res++;\n      q.push(x - 1);\n    }\n  }\n\n  cout << res << endl;\n  // cout << \"---\" << endl;\n}\n\nint main() {\n  // code\n\n  int t;\n  cin >> t;\n\n  while (t--) {\n    solve();\n  }\n\n  // codend\n}\n"
}