{
    "id": 180463904,
    "contestId": 1665,
    "creationTimeSeconds": 1668170185,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "utkarshshukla7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 482,
    "memoryConsumedBytes": 35635200,
    "source": "#I = lambda: [int(i) for i in input().split()]\r\n#import io, os, sys\r\n#input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\r\n \r\n \r\n# n = int(input())\r\n# l1 = list(map(int,input().split()))\r\n# n,x = map(int,input().split())\r\n# s = input()\r\nmod = 1000000007\r\n# print(\"Case #\"+str(_+1)+\":\",)\r\n \r\nfrom collections import Counter,defaultdict,deque\r\n#from heapq import heappush,heappop,heapify\r\nimport sys\r\nimport math\r\nimport bisect\r\ndef lcm(a,b):\r\n    return ((a*b)//math.gcd(a,b))\r\n \r\n \r\n \r\n\r\nfor _ in range(int(input())):\r\n    n = int(input())\r\n    l = list(map(int,input().split()))\r\n    d = defaultdict(list)\r\n    d[0].append(1)\r\n    for i in range(len(l)):\r\n        d[l[i]].append(1)\r\n    h = []\r\n    for i in d:\r\n        h.append(len(d[i]))\r\n    h.sort(reverse = True)\r\n    ans = len(h) ; a = []\r\n    for i in range(ans):\r\n        h[i] -= ans-i\r\n        if h[i] > 0:\r\n            a.append(h[i])\r\n    a.sort()\r\n    f = True\r\n    g = 0\r\n    s = sum(a)\r\n    while f:\r\n        a = sorted([i for i in a if i > 0])\r\n        if len(a) == 0:\r\n            print(ans)\r\n            break\r\n \r\n        for i in range(len(a)):\r\n            a[i] -= 1\r\n            s -= 1\r\n        ans += 1\r\n        g += 1\r\n        if s <= g:\r\n            print(ans)\r\n            break\r\n\r\n    \r\n    \r\n            \r\n        \r\n        \r\n            \r\n                \r\n\r\n\r\n        \r\n            \r\n            \r\n"
}