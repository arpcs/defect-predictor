{
    "id": 213976496,
    "contestId": 1665,
    "creationTimeSeconds": 1689476282,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "wzxssf"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 3174400,
    "source": "// LUOGU_RID: 115805230\n#include <bits/stdc++.h>\r\nusing namespace std;\r\ninline int read(){\r\n\tint x=0,f=1;\r\n\tchar c=getchar();\r\n\twhile(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}\r\n\twhile(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\r\n\treturn x*f;\r\n}\r\nconst int N=4e5+10;\r\nint n,m,a[N];\r\nint main()\r\n{\r\n\tint T=read();\r\n\twhile(T--){\r\n\t\tint n=read();\r\n\t\tfor(int i=1;i<n;i++)\r\n\t\t{\r\n\t\t\tint x=read();\r\n\t\t\ta[x]++;\r\n\t\t}\r\n\t\ta[0]=1;\r\n\t\tsort(a,a+n+1);\r\n\t\tfor(int i=0;i<=n;i++)\r\n\t\t{\r\n\t\t\tif(a[i]!=0)\r\n\t\t\t{\r\n\t\t\t\tpriority_queue<int> q;\r\n\t\t\t\tfor(int j=i;j<=n;j++)\r\n\t\t\t\t\tq.push(a[j]-(j-i+1));\r\n\t\t\t\tint ans=n-i+1,top=0;\r\n\t\t\t\twhile(q.top()>top)\r\n\t\t\t\t{\r\n\t\t\t\t\ttop++;\r\n\t\t\t\t\tint x=q.top();\r\n\t\t\t\t\tq.pop();\r\n\t\t\t\t\tq.push(x-1);\r\n\t\t\t\t\tans++;\r\n\t\t\t\t}\r\n\t\t\t\tcout<<ans<<endl;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i=1;i<=n;i++)\r\n\t\t\ta[i]=0;\r\n\t}\r\n\treturn 0;\r\n}\r\n"
}