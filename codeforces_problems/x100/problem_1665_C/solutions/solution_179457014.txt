{
    "id": 179457014,
    "contestId": 1665,
    "creationTimeSeconds": 1667665671,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "ING__"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 6860800,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <cstring>\r\n#include <cstdio>\r\n#include <vector>\r\n#include <cmath>\r\n#include <map>\r\n#include <set>\r\n#include <stack>\r\n#include <queue>\r\n#include <numeric>\r\n#include <sstream>\r\n#include <unordered_map>\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define re return\r\n#define pb push_back\r\n#define Endl \"\\n\"\r\n#define endl \"\\n\"\r\n#define x first\r\n#define y second\r\n#define all(x) (x).begin(),(x).end()\r\n\r\nusing namespace std;\r\n\r\nusing PII = pair<int, int>;\r\n\r\nconst int N = 2e5 + 10;\r\nconst int M = 1e5 + 10;\r\nconst int mod = 1000000007;\r\nconst int INF = 0x3f3f3f3f;\r\n\r\nint dx[4] = {-1,0,1,0};\r\nint dy[4] = {0,1,0,-1};\r\n\r\nint T;\r\nint n;\r\nvector<int> g[N];\r\nint c[N];\r\nint d[N];\r\n\r\nvoid dfs(int u, int fa){\r\n    d[u] = d[fa] + 1;\r\n    for(auto v: g[u]){\r\n        dfs(v, u);\r\n    }\r\n}\r\n\r\nbool check(int mid, int dmax){\r\n    int ans = dmax; // \u6bcf\u4e00\u5c42\u9700\u8981\u8fd9\u4e9b\r\n    for (int i = 1; i <= dmax; i++){\r\n        // \u7b97\u4e00\u4e0b\u9700\u8981\u5355\u72ec\u611f\u67d3\u7684\u6b21\u6570\r\n        if(c[i] <= mid - i + 1)\r\n            continue;\r\n        else{\r\n            ans += max(0, c[i] - (mid - i + 1));\r\n        }\r\n    }\r\n    return ans <= mid;\r\n}\r\n\r\nvoid solve(){\r\n    cin >> n;\r\n    for (int i = 2; i <= n; i++){\r\n        int x;\r\n        cin >> x;\r\n        g[x].pb(i);\r\n    }\r\n\r\n    int dmax = 1;\r\n    c[dmax] = 1;\r\n    for (int i = 1; i <= n; i++){\r\n        if(g[i].size())\r\n            c[++dmax] = g[i].size();\r\n    }\r\n    sort(c + 1, c + 1 + dmax);\r\n    reverse(c + 1, c + 1 + dmax);\r\n    // for (int i = 1; i <= dmax; i++){\r\n    //     cout << c[i] << ' ';\r\n    // }\r\n    // cout << endl;\r\n\r\n    int l = 0;\r\n    int r = n;\r\n\r\n    while(l < r){\r\n        int mid = l + r >> 1;\r\n        int x = check(mid, dmax);\r\n        // cout << x << endl;\r\n        if(x)\r\n            r = mid;\r\n        else\r\n            l = mid + 1;\r\n    }\r\n    cout << l << endl;\r\n\r\n    for (int i = 1; i <= max(dmax, n); i++)\r\n    {\r\n        g[i].clear();\r\n        c[i] = d[i] = 0;\r\n    }\r\n}\r\n\r\nint main(){\r\n    ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\r\n    T = 1;\r\n    cin >> T;\r\n    while(T--){\r\n        solve();\r\n    }\r\n}"
}