{
    "id": 160272725,
    "contestId": 1665,
    "creationTimeSeconds": 1655039033,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "YorkTsai"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 2457600,
    "source": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nvoid solution(int t) {\r\n    int n;\r\n    cin >> n;\r\n    vector<int> sum(n+1, 0);\r\n    for (int i = 1; i < n; i++) {\r\n        int a;\r\n        cin >> a;\r\n        // \u540c\u4e00\u4e2a\u7236\u8282\u70b9 \u5f52\u4e3a\u4e00\u7ec4\r\n        sum[a]++;\r\n    }\r\n    vector<int> v;\r\n    // root \u8282\u70b9\u5355\u72ec\u4e00\u7ec4\r\n    v.push_back(1);\r\n    for (int i = 1; i <= n; i++) {\r\n        if (sum[i] > 0) {\r\n            v.push_back(sum[i]);\r\n        }\r\n    }\r\n    sort(v.rbegin(), v.rend());\r\n    // \u6bcf\u4e2a\u7ec4 \u81f3\u5c11inject\u4e00\u6b21\r\n    int res = v.size();\r\n    priority_queue<int> q;//\u9ed8\u8ba4\u6700\u5927\u5806\r\n    for (int i = 0; i < res; i++) {\r\n        // \u7ecf\u8fc7 res\u6b21 \u4f20\u67d3 \u6bcf\u7ec4\u8fd8\u5269\u4e0b\u591a\u5c11 heathy\r\n        v[i] -= res - i;\r\n        if (v[i] > 0) {\r\n            q.push(v[i]);\r\n        }\r\n    }\r\n    /*\r\n      Spreading \u662f\u5e76\u53d1\u8fdb\u884c\u7684\r\n      cnt \u8fd8\u9700\u8981operation\u7684\u6b21\u6570 inject + spread\r\n    */\r\n    int cnt = 0;\r\n    while (!q.empty() && q.top() > cnt) {\r\n        auto tmp = q.top();\r\n        q.pop();\r\n        q.push(tmp - 1);\r\n        cnt++;\r\n    }\r\n    cout << res + cnt << endl;\r\n}\r\n\r\nint main() {\r\n    int T;\r\n    cin >> T;\r\n    int t = 0;\r\n    while (t < T) {\r\n        t++;\r\n        solution(t);\r\n    }\r\n    return 0;\r\n}",
    "suggested_categories": [
        "algorithm",
        "data structure",
        "graph",
        "priority queue",
        "input/output",
        "error handling",
        "looping",
        "mathematics",
        "code quality",
        "code quantity",
        "concurrent programming",
        "recursive function",
        "bit manipulation",
        "optimization",
        "stl (standard template library)",
        "error handling",
        "complexity analysis",
        "concurrency",
        "efficiency",
        "recursion"
    ]
}