{
    "id": 167044068,
    "contestId": 1665,
    "creationTimeSeconds": 1659662699,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 409600,
    "source": "#include<cstdio>\n#include<algorithm>\nusing namespace std;\nint child[100010],t,n,tx,times,ans;\nint main(){\n\tscanf(\"%d\",&t);\n\twhile(t--){\n\t\tscanf(\"%d\",&n);times=1;child[0]=1;ans=0;\n\t\tfor(int i=1;i<n;i++){\n\t\t\tscanf(\"%d\",&tx);\n\t\t\tif(child[tx]==0) times++;\n\t\t\tchild[tx]++;\n\t\t}\n\t\tsort(child+0,child+n+1);\n\t\t//printf(\"times=%d\\n\",times);\n\t\t//for(int i=1;i<=n;i++)\n\t\t//printf(\"%d \",child[i]);\n\t\t//printf(\"\\n\");\n\t\t\n\t\tfor(int i=n;i>=0;i--){\n\t\t\tif(child[i]==0) break;\n\t\t\tans++;child[i]=child[i]-times;times--;\n\t\t}\n\t\twhile(times<child[n]){\n\t\t\twhile(child[n]>=child[n-1]){ans++;times++;child[n]--;if(times>=child[n]) break;}\n\t\t\tfor(int i=n;child[i]<child[i-1]&&i>=0;i--){\n\t\t\t\ttx=child[i];child[i]=child[i-1];child[i-1]=tx;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%d\\n\",ans);\n\t\tans=times=0;\n\t\tfor(int i=0;i<=n;i++) child[i]=0;\n\t}\n}\n\t   \t      \t\t   \t\t\t  \t\t\t   \t\t"
}