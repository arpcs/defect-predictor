{
    "id": 174757976,
    "contestId": 1665,
    "creationTimeSeconds": 1664982236,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "monadtransformer"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 1638400,
    "source": "#include <bits/stdc++.h>\r\n\r\n//#define INTERACTIVE\r\n\r\n#ifdef INTERACTIVE\r\n#undef NOT_ONLINE_JUDGE\r\n#endif\r\n\r\nusing namespace std;\r\n\r\nvoid solve();\r\n\r\nint main() {\r\n\r\n#ifdef NOT_ONLINE_JUDGE\r\n  freopen(\"input.txt\", \"r\", stdin);\r\n  freopen(\"output.txt\", \"w\", stdout);\r\n  auto start = chrono::high_resolution_clock::now();\r\n#endif\r\n\r\n  ios_base::sync_with_stdio(false);\r\n  cin.tie(NULL);\r\n  cout << setprecision(20) << fixed;\r\n  solve();\r\n\r\n#ifdef NOT_ONLINE_JUDGE\r\n  auto stop = chrono::high_resolution_clock::now();\r\n  auto duration = chrono::duration_cast<chrono::microseconds>(stop - start);\r\n  cout << fixed\r\n       << \"\\n----------------\\nTIME: \" << (double)duration.count() / 1e6\r\n       << \" s\\n\";\r\n#endif\r\n\r\n  return 0;\r\n}\r\n\r\n#define int int64_t\r\n\r\n#define pb push_back\r\n#define mp make_pair\r\n\r\n#define yes \"Yes\"\r\n#define no \"No\"\r\n#define yn(x) ((x) ? yes : no)\r\n\r\n#define all(a) a.begin(), a.end()\r\n\r\n#define print(x) cout << (x) << \"\\n\";\r\n\r\nvoid testcase();\r\nvoid pre();\r\n\r\nvoid solve() {\r\n  int testcases = 1;\r\n\r\n  cin >> testcases; // comment if 1 test case\r\n\r\n  pre();\r\n\r\n  while (testcases--)\r\n    testcase();\r\n}\r\n\r\n///////////////////////////////////////////////////////////\r\n\r\nvoid pre() {}\r\n\r\nvoid testcase() {\r\n  int n;\r\n  cin>>n;\r\n\r\n  //vector<vector<int>> children(n);\r\n  vector<int> rows(n, 0);\r\n\r\n  for (int i = 0; i < n - 1; ++i) {\r\n    int x;\r\n    cin>>x;\r\n    x--;\r\n    //children[x].pb(i+1);\r\n    rows[x]++;\r\n  }\r\n\r\n  int res = 0;\r\n  \r\n  sort(all(rows));\r\n//return;\r\n  reverse(all(rows));\r\n\r\n  for (int i = 0; i < rows.size(); ++i) {\r\n    if (rows[i]) res++;\r\n    else {\r\n      res++;\r\n      rows[i] = 1;\r\n      break;\r\n    }\r\n  }\r\n\r\n  while (!rows.empty() && rows.back() == 0) {\r\n    rows.pop_back();\r\n  }\r\n\r\n  \r\n  for (int i = rows.size() - 1; i >= 0; --i) {\r\n\r\n    rows[i] -= rows.size() - i;\r\n  }\r\n  \r\n  int additional = 0;\r\n  \r\n  priority_queue<int> pq;\r\n  \r\n  for (int i = 0; i < rows.size(); ++i) {\r\n    if (rows[i] >= 1) {\r\n      pq.push(rows[i]);\r\n    }  \r\n  }\r\n\r\n  \r\n\r\n  while (!pq.empty()) {\r\n    if (pq.top() - additional <= 0) break;\r\n    int x = pq.top();\r\n    pq.pop();\r\n    additional++;\r\n    x--;\r\n    if (x - additional > 0) pq.push(x);\r\n  }\r\n\r\n  print(additional + res);\r\n  \r\n}\r\n"
}