{
    "id": 180560044,
    "contestId": 1665,
    "creationTimeSeconds": 1668236638,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "luogu_bot1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 819200,
    "source": "// LUOGU_RID: 93717955\n#include<bits/stdc++.h> \r\nusing namespace std;\r\nint f[200005],n,t,a,l,r,ans;\r\nvector<int>vi;\r\nbool check(int x){\r\n\tint sum=0;\r\n\tfor(int i=0;i<vi.size();i++){\r\n\t\tsum+=max(0,vi[i]-x-i-1); \r\n\t}\r\n\treturn sum<=x;\r\n}\r\nint main(){\r\n\tcin>>t;\r\n\tfor(int u=1;u<=t;u++){\r\n\t\tmemset(f,0,sizeof(f));\r\n\t\tvi.clear();\r\n\t\tcin>>n;\r\n\t\tfor(int i=1;i<n;i++){\r\n\t\t\tcin>>a;\r\n\t\t\tf[a]++;\r\n\t\t}\r\n\t\tvi.push_back(1);\r\n\t\tfor(int i=1;i<=n;i++){\r\n\t\t\tif(f[i]>0){\r\n\t\t\t\tvi.push_back(i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsort(vi.begin(),vi.end());\r\n\t\tl=0;\r\n\t\tr=n+1;\r\n\t\tans=0;\r\n\t\twhile(l<=r){\r\n\t\t\tint mid=(l+r)/2;\r\n\t\t\tif(check(mid)){\r\n\t\t\t\tr=mid-1;\r\n\t\t\t\tans=mid;\r\n\t\t\t} \r\n\t\t\telse{\r\n\t\t\t\tl=mid+1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcout<<ans+vi.size()<<endl;\r\n\t} \r\n}"
}