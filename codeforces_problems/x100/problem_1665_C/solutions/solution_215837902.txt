{
    "id": 215837902,
    "contestId": 1665,
    "creationTimeSeconds": 1690445904,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1665,
        "index": "C",
        "name": "Tree Infection",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1665,
        "members": [
            {
                "handle": "zkm0313"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649428500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 2457600,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing i64 = long long ;\r\n\r\nusing namespace std;\r\n\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    vector<int> sz(n + 1);\r\n    for (int i = 2; i <= n; i ++ ) {\r\n        int p;\r\n        cin >> p;\r\n        sz[p] ++ ;\r\n    }\r\n\r\n    vector<int> s;\r\n    s.push_back(1);\r\n    for (int i = 1; i <= n; i ++ ) {\r\n        if (sz[i]) {\r\n            s.push_back(sz[i]);\r\n        }\r\n    }\r\n\r\n    sort(s.begin(), s.end());\r\n\r\n    auto check = [&](int mid) -> bool {\r\n        int now = 0;\r\n        for (int i = 0; i < s.size(); i ++ ) {\r\n            now += max(0, s[i] - i - 1 - mid);\r\n            if (now > mid) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    int l = 0, r = n;\r\n    while (l < r) {\r\n        int mid = l + r >> 1;\r\n        if (check(mid)) r = mid;\r\n        else l = mid + 1;\r\n    }\r\n\r\n    cout << r + s.size() << \"\\n\";\r\n}\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false);\r\n    std::cin.tie(nullptr);\r\n\r\n    int _ = 1; \r\n    cin >> _;\r\n\r\n    while (_ -- ) { \r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n}\r\n    "
}