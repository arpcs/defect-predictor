{
    "id": 53024224,
    "contestId": 976,
    "creationTimeSeconds": 1555697212,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 976,
        "index": "C",
        "name": "Nested Segments",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 976,
        "members": [
            {
                "handle": "springroll"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1525099200
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include \"bits/stdc++.h\"\r\nusing namespace std;\r\n\r\n#define int long long\r\n#define MAX_N (200005)\r\n#define INF (1LL<<60)\r\n#define debug(x) cerr << #x <<\":\"<< x << endl;\r\n#define debugVec(x) for(auto p:(x)) cerr << p <<\" \"; cerr << endl;\r\n#define debugVecPair(x) for(auto p:(x)) cerr << #x <<\": \"<< p.first <<\", \"<< p.second << endl;\r\n#define debug2(x, y) cerr << #x <<\" : \"<< x <<\", \"<< #y <<\" : \"<< y << endl;\r\n#define debug3(x, y, z) cerr << #x <<\" : \"<< x <<\", \"<< #y <<\" : \"<< y <<\", \"<< #z <<\" : \"<< z << endl;\r\nconst int MOD = (int)1e9+7;\r\n\r\nbool comp(pair<int,int> &a, pair<int,int> &b){\r\n    if(a.first == b.first) return a.second >= b.second;\r\n    else return a.first < b.first;\r\n}\r\n\r\nsigned main() {\r\n    int n;\r\n    cin >> n;\r\n    vector<pair<int,int> > p(n), l(n), r(n);\r\n    map<pair<int,int>, vector<int> > mp;\r\n    for(int i=0; i<n; i++) cin >> l[i] >> r[i];\r\n    for(int i=0; i<n; i++) {\r\n        p[i].first = l[i];\r\n        p[i].second = r[i];\r\n        mp[make_pair(l[i],r[i])].push_back(i+1);\r\n        if(mp[make_pair(l[i],r[i])].size()>=2){\r\n            cout << mp[make_pair(l[i],r[i])][0] <<\" \"<< mp[make_pair(l[i],r[i])][1] << endl;\r\n            return 0;\r\n        }\r\n    }\r\n    sort(p.begin(), p.end(), comp);\r\n    //debugVecPair(p);\r\n\r\n    set<pair<int,int>> st;\r\n    for(int i=0; i<n; i++){\r\n        auto it = st.lower_bound(make_pair(p[i].second, 0));\r\n        if((*it).first > 1e9 || (*it).second > 1e9) {\r\n            st.insert(make_pair(p[i].second, p[i].first));\r\n            continue;\r\n        }\r\n        //cout << (*it).first <<\" \"<< (*it).second << endl;\r\n        //debug2((*it).first, (*it).second);\r\n        //debug2(p[i].first, p[i].second);\r\n        if(p[i].first == (*it).second && p[i].second == (*it).first){\r\n            cout << mp[make_pair(p[i].first, p[i].second)][0] <<\" \"<< mp[make_pair(p[i].first, p[i].second)][1] << endl;\r\n        } else {\r\n            cout << mp[make_pair(p[i].first, p[i].second)][0] <<\" \"<< mp[make_pair((*it).second, (*it).first)][0] << endl;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    cout << -1 <<\" \"<< -1 << endl;\r\n}"
}