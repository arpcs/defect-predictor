{
    "id": 142952903,
    "contestId": 842,
    "creationTimeSeconds": 1642337070,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "Ausmosian"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 1013,
    "memoryConsumedBytes": 21708800,
    "source": "#include <iostream>\n\n#include <map>\n#include <set>\n#include <list>\n#include <cmath>\n#include <deque>\n#include <stack>\n#include <queue>\n#include <array>\n#include <bitset>\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <random>\n#include <chrono>\n#include <utility>\n#include <numeric>\n#include <cstdlib>\n#include <cstring>\n#include <climits>\n#include <sstream>\n#include <assert.h>\n#include <iomanip>\n#include <algorithm>\n#include <functional>\n#include <unordered_map>\n\nusing namespace std;\nstruct _ { ios_base::Init i; _() { ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL); } } _;\n\n#define sim template < class c\n#define ris return * this\n#define dor > debug & operator <<\n#define eni(x) sim > typename \\\n  enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\nsim > struct rge { c b, e; };\nsim > rge<c> range(c i, c j) { return rge<c> {i, j}; }\nsim > auto dud(c* x) -> decltype(cerr << *x, 0);\nsim > char dud(...);\nstruct debug {\n#ifdef HOME\n\t~debug() { cerr << endl; }\n\teni( != ) cerr << boolalpha << i; ris;\n}\neni( == ) ris << range(begin(i), end(i));\n}\nsim, class b dor(pair < b, c > d) {\n\tris << \"(\" << d.first << \", \" << d.second << \")\";\n}\nsim dor(rge<c> d) {\n\t*this << \"[\";\n\tfor (auto it = d.b; it != d.e; ++it)\n\t\t*this << \", \" + 2 * (it == d.b) << *it;\n\tris << \"]\";\n}\n#else\n\tsim dor(const c&) { ris; }\n#endif\n};\n#define imie(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\n\n\n#define ff first\n#define ss second\n#define REP(i,st,en) for (int i = st; i <= en; i++)\n#define REPR(i,st,en) for (int i = st; i >= en; i--)\n\nconst int MOD = 1e9 + 7;\nconst int maxb = 31;\n\n\nclass Trie {\npublic:\n\n\tclass Node {\n\tpublic:\n\n\t\tint val, cnt = 0;\n\t\tNode* left = NULL;\n\t\tNode* right = NULL;\n\n\t\tNode(int val = 0, int cnt = 0, Node* left = NULL, Node* right = NULL) {\n\t\t\tthis->val = val;\n\t\t\tthis->cnt = cnt;\n\t\t\tthis->left = left;\n\t\t\tthis->right = right;\n\t\t}\n\t};\n\n\tNode* root = new Node();\n\n\tvoid insert(int x) {\n\t\tNode* curr = root;\n\t\tfor (int j = maxb; j >= 0; j--) {\n\t\t\tif (x & (1 << j)) {\n\t\t\t\tif (!curr->right) curr->right = new Node(1);\n\t\t\t\tcurr = curr->right;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!curr->left) curr->left = new Node(0);\n\t\t\t\tcurr = curr->left;\n\t\t\t}\n\t\t\tcurr->cnt++;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tint getCnt(Node* curr) {\n\t\tif (!curr) return 0;\n\t\treturn curr->cnt;\n\t}\n\n\tbool isMex(int md, int xr) {\n\t\tint res = 0;\n\t\tNode* curr = root;\n\n\t\tfor (int j = maxb; j >= 0; j--) {\n\t\t\tif (md & (1 << j)) {\n\t\t\t\tif (xr & (1 << j)) {\n\t\t\t\t\tres += getCnt(curr->right);\n\t\t\t\t\tcurr = curr->left;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres += getCnt(curr->left);\n\t\t\t\t\tcurr = curr->right;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (xr & (1 << j)) {\n\t\t\t\t\tcurr = curr->right;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcurr = curr->left;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!curr) break;\n\t\t}\n\t\tres += getCnt(curr);\n\n\t\treturn res <= md;\n\t}\n};\n\nclass MainClass {\npublic:\n\n\tint n, m;\n\tvector<int> a, queries;\n\n\tMainClass() {\n\t\t//Input\n\n\t\tcin >> n >> m;\n\t\ta.resize(n); for (auto& i : a) cin >> i;\n\t\tqueries.resize(m); for (auto& i : queries) cin >> i;\n\t}\n\n\tvoid solve() {\n\t\t//Process\n\n\t\tsort(a.begin(), a.end());\n\t\ta.resize(unique(a.begin(), a.end()) - a.begin());\n\n\t\tTrie T;\n\t\tfor (auto i : a) T.insert(i);\n\n\t\tint xr = 0;\n\n\t\tfor (auto x : queries) {\n\t\t\txr ^= x;\n\n\t\t\tint lo = 0, hi = 6e5, ans = -1;\n\t\t\twhile (lo <= hi) {\n\t\t\t\tint mid = lo + (hi - lo) / 2;\n\t\t\t\tif (T.isMex(mid, xr)) ans = mid, hi = mid - 1;\n\t\t\t\telse lo = mid + 1;\n\t\t\t}\n\n\t\t\tassert(ans != -1);\n\t\t\tcout << ans << '\\n';\n\t\t}\n\n\n\t\treturn;\n\t}\n\n\t~MainClass() {\n\t\t//Output\n\n\n\t\tcout << '\\n';\n\t}\n};\n\nint main() {\n\n\tint test = 1; //cin >> test;\n\tfor (int tst = 1; tst <= test; ++tst) {\n\t\tMainClass Ausmosian;\n\n\t\tAusmosian.solve();\n\t}\n\n\treturn 0;\n}"
}