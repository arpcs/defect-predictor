{
    "id": 117049554,
    "contestId": 842,
    "creationTimeSeconds": 1621720701,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "bbcf13"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 546,
    "memoryConsumedBytes": 62771200,
    "source": "#pragma GCC optimize(\"Ofast\")\r\n#include \"bits/stdc++.h\"\r\n#define rep(i,j,n) for(int i=(j);i<=((int)n);++i)\r\n#define rev(i,n,j) for(int i=(n);i>=((int)j);--i)\r\ntypedef long long int ll;\r\n#define int long long int\r\nconst ll INFL=0x3f3f3f3f3f3f3f3fLL;\r\nconst int INF=0x3f3f3f3f;\r\nconst int mod=1000000007;\r\n#define endl \"\\n\"\r\n#define mem(a,val) memset(a,val,sizeof(a))\r\n#define all(c) (c).begin(),(c).end()\r\n#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++)\r\n#define present(container, element) (container.find(element) != container.end())\r\n#define pb push_back\r\n#define FAST ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n#define readmat(a, n, m) int a[n + 5][m + 5] = {}; rep(i, 1, n) {rep(j, 1, m) cin >> a[i][j];}\r\n#define printmat(a, n, m) rep (i, 1, n) {rep (j, 1, m) cout << a[i][j] << \" \"; cout << endl;} cout << endl;\r\n#define printarr(a, n) rep(i, 1, n) cout << a[i] << \" \"; cout << endl;\r\ntypedef std::map< int,int> mii;\r\ntypedef std::vector< int > vi;\r\ntypedef std::vector< vi > vvi;\r\ntypedef std::pair< int,int > ii;\r\nusing namespace std;\r\n#define cerr cout\r\n#define error(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }\r\nvoid err(istream_iterator<string> it) {}\r\ntemplate<typename T, typename... Args>\r\nvoid err(istream_iterator<string> it, T a, Args... args) {\r\n    cout << *it << \" = \" << a << endl;\r\n    err(++it, args...);}\r\nconst int N = 1e6+5, M = N;\r\nvector <int>g[N];\r\n\r\ntypedef struct trie\r\n{\r\n\ttypedef struct node\r\n\t{\r\n\t\tnode* nxt[2];\r\n\t\tint cnt = 0;\r\n\r\n\t\tnode()\r\n\t\t{\r\n\t\t\tnxt[0] = nxt[1] = NULL;\r\n\t\t\tcnt = 0;\r\n\t\t}\r\n\r\n\t}Node;\r\n\r\n\tNode* head;\r\n\r\n\ttrie() { head = new Node(); }\r\n\r\n\tvoid insert(int x)\r\n\t{\r\n\t\tNode* cur = head;\r\n\t\tfor(int i = 30; i >= 0; i--)\r\n\t\t{\r\n\t\t\tint b = (x >> i) & 1;\r\n\t\t\tif(!cur -> nxt[b])\r\n\t\t\t\tcur -> nxt[b] = new Node();\r\n\t\t\tcur = cur -> nxt[b];\r\n\t\t\tcur -> cnt++;\r\n\t\t}\r\n\t}\r\n\r\n\tvoid remove(int x)\r\n\t{\r\n\t\tNode* cur = head;\r\n\t\tfor(int i = 30; i >= 0; i--)\r\n\t\t{\r\n\t\t\tint b = (x >> i) & 1;\r\n\t\t\tcur = cur -> nxt[b];\r\n\t\t\tcur -> cnt--;\r\n\t\t}\r\n\t}\r\n\r\n\tint maxxor(int x)\r\n\t{\r\n\t\tNode* cur = head;\r\n\t\tint ans = 0;\r\n\t\tfor(int i = 30; i >= 0; i--)\r\n\t\t{\r\n\t\t\tint b = (x >> i) & 1;\r\n\t\t\tif(cur -> nxt[!b] && cur -> nxt[!b] -> cnt > 0)\r\n\t\t\t{\r\n\t\t\t\tans += (1LL << i);\r\n\t\t\t\tcur = cur -> nxt[!b];\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tcur = cur -> nxt[b];\r\n\t\t}\r\n\t\treturn ans;\r\n\t}\r\n\r\n\tint query(int x)\r\n\t{\r\n\t\tNode* cur=head;\r\n\t\tint ans=0;\r\n\t\tfor(int i = 30; i >=0 ; --i) \r\n\t\t{\r\n\t\t\tint b = (x >> i) & 1;\r\n\t\t\tif (cur->nxt[b] && cur -> nxt[b] -> cnt > 0)\r\n\t\t\t{\r\n\t\t\t\tcur = cur -> nxt[b];\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tans += (1LL << i);\t\t\t\t\r\n\t\t\t\tcur = cur -> nxt[!b];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ans;\r\n\t}\r\n\r\n}Trie;\r\n\r\nvoid solve()\r\n{\r\n\tint n,m;\r\n\tcin>>n>>m;\r\n\tint a[n+6];\r\n\tset<int> s;\r\n\tTrie t;\r\n\tfor(int i = 1; i <=n; ++i) \r\n\t{\r\n\t\tcin>>a[i];\r\n\t\ts.insert(a[i]);\r\n\t}\r\n\r\n\r\n\tfor(int i = 0; i <=1e6; ++i) \r\n\t{\r\n\t\tif (!present(s,i))\r\n\t\t\tt.insert(i);\r\n\t}\r\n\r\n\tint x=0;\r\n\tfor(int i = 1; i <=m; ++i) \r\n\t{\r\n\t\tint q;\r\n\t\tcin>>q;\r\n\t\tx^=q;\r\n\t\tcout<<t.query(x)<<endl;\r\n\t}\r\n\r\n\r\n  \r\n\r\n}\r\n\r\n\r\n\r\nsigned main()\r\n{\r\n  FAST;\r\n#ifdef LOCAL\r\n    freopen(\"C:\\\\Users\\\\hp\\\\Documents\\\\input.txt\", \"r\", stdin);\r\n    freopen(\"C:\\\\Users\\\\hp\\\\Documents\\\\output.txt\", \"w\", stdout);\r\n    std::chrono::time_point<std::chrono::high_resolution_clock> start, end;\r\n    start = std::chrono::high_resolution_clock::now();\r\n#endif\r\n\r\nsolve();\r\n\r\n#ifdef LOCAL\r\n    end = std::chrono::high_resolution_clock::now();\r\n    ll elapsed_time = std::chrono::duration_cast<std::chrono::milliseconds>(end-start).count();\r\n    cout<<endl;\r\n    cout << \"\\nElapsed Time: \" << elapsed_time << \"ms\\n\";\r\n#endif\r\n\r\nreturn 0;\r\n\r\n}\r\n\r\n// vector string set map first second continue break return upper_bound lower_bound length void sort\r\n// stack queue pop size erase empty insert\r\n// #Hala BBCF\r\n\r\n"
}