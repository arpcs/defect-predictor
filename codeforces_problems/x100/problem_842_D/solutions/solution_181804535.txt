{
    "id": 181804535,
    "contestId": 842,
    "creationTimeSeconds": 1668965995,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "TheJesterMan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 204800,
    "source": "#include <iostream>\r\n#include <string>\r\n#include <cstring>\r\n#include <math.h>\r\n#include <set>\r\n#include <map>\r\n#include <queue>\r\n#include <utility>\r\n#include <algorithm>\r\n#include <stack>\r\n#include <bitset>\r\nusing namespace std;\r\n#define pb push_back\r\n#define ll long long\r\n \r\nvoid compile(){\r\n    #ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n    #endif\r\n}\r\n\r\nvector<vector<int>>trie;\r\nvector<int>subtree;\r\n\r\nvoid insert(int x){\r\n    int cur = 0;\r\n    bitset<20>bt(x);\r\n    for(int i = 19 ; i >= 0 ; i--){\r\n        if(trie[cur][bt[i]] == -1){\r\n            trie[cur][bt[i]] = trie.size();\r\n            trie.pb(vector<int>(2, -1));\r\n            subtree.pb(1);\r\n        }\r\n        cur = trie[cur][bt[i]];\r\n    }\r\n}\r\n\r\nvoid dfs(int cur, int p){\r\n    if(cur == -1)return;\r\n\r\n    dfs(trie[cur][0], cur);\r\n    dfs(trie[cur][1], cur);\r\n\r\n    if(p != -1)\r\n        subtree[p] += subtree[cur];\r\n}\r\n\r\nint find(int xr){\r\n    int cur = 0, can = 0, i = 19;\r\n    int val = 0;\r\n    bitset<20>bt(xr);\r\n\r\n    while(1){\r\n        if(trie[cur][bt[i]] != -1 && subtree[trie[cur][bt[i]]] != (1 << (i + 1)) - 1){\r\n            cur = trie[cur][bt[i]];\r\n            i--;\r\n        }\r\n        else if(trie[cur][!bt[i]] != -1 && subtree[trie[cur][!bt[i]]] != (1 << (i + 1)) - 1){\r\n            val += (1 << i);\r\n            cur = trie[cur][!bt[i]];\r\n            i--;\r\n        }\r\n        else if(trie[cur][bt[i]] == -1){\r\n            break;\r\n        }\r\n        else{\r\n            val += (1 << (i));\r\n            break;\r\n        }\r\n\r\n    }\r\n    return val;\r\n    \r\n}\r\n\r\n\r\n\r\n\r\nint main(){\r\n    compile();\r\n    ios_base::sync_with_stdio(0); cin.tie(0);\r\n    int t = 1;  \r\n    // cin >> t;\r\n    while(t--){\r\n\r\n        trie.pb(vector<int>(2, -1));\r\n        subtree.pb(1);\r\n\r\n        int n, m;\r\n        cin >> n >> m;\r\n        int a[n];\r\n        for(int i = 0 ; i < n ; i++){\r\n            cin >> a[i];\r\n            insert(a[i]);\r\n        }\r\n\r\n        dfs(0, -1);\r\n        int xr = 0;\r\n        for(int i = 0 ; i < m ; i++){\r\n            int x;\r\n            cin >> x;\r\n            xr ^= x;\r\n            cout<<find(xr)<<\"\\n\";\r\n        }\r\n        \r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n"
}