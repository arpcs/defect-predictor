{
    "id": 163360493,
    "contestId": 842,
    "creationTimeSeconds": 1657356384,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "4smds"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 36454400,
    "source": "/*\nProblem Link: https://codeforces.com/problemset/problem/842/D\n*/\n#include<bits/stdc++.h>\nusing namespace std;\n#define int                    long long\n#define double                 long double\n#define PI                     3.1415926535897932384626\n#define mod                    1000000007\n#define inf                    LONG_LONG_MAX\n#define minf                   LONG_LONG_MIN\n#define pb                     push_back\n#define F                      first\n#define S                      second\n#define all(x)                 x.begin(), x.end()\n#define rall(x)                x.rbegin(), x.rend()\n#define sortall(x)             sort(all(x))\ntypedef pair<int , int>         pii;\ntypedef vector<int>            vi;\ntypedef vector<pii>            vpii;\ntypedef vector<vi>             vvi;\n#define endl                   \"\\n\"\n#define w(x)                   int x; cin >> x; while (x--)\n\n/* Vector overload */\ntemplate <typename T> //vector output using <<\nostream& operator<<(ostream& os , const vector<T>& v)\n{\n    for (int i = 0; i < v.size(); ++i)\n    {\n        os << v[i] << \" \";\n    }\n    return os;\n}\ntemplate<typename T> //vector input using >>\nstd::istream& operator>>(std::istream& input , std::vector<T>& data)\n{\n    for (auto& item : data)\n    {\n        input >> item;\n    }\n    return input;\n}\n\n#define deb(...) logger(#__VA_ARGS__, __VA_ARGS__)//debugger\ntemplate<typename ...Args>\nvoid logger(string vars , Args&&... values)\n{\n#ifndef ONLINE_JUDGE //will debug only when not in oj\n    cout << vars << \" = \";\n    string delim = \"\";\n    (... , (cout << delim << values , delim = \", \"));\n#endif\n}\ninline void fileio()\n{\n#ifndef ONLINE_JUDGE\n\n    freopen(\"input.txt\" , \"r\" , stdin);\n    // freopen(\"output.txt\" , \"w\" , stdout);\n#endif\n}\n\n/* ========== YOUR CODE HERE ========= */\nclass Node\n{\n    public:\n    vector<Node*>children;\n    Node()\n    {\n        children = vector<Node*>(2);\n        children[0] = children[1] = NULL;\n    }\n    ~Node()\n    {\n        delete children[0];\n        delete children[1];\n    }\n};\nvoid putt(Node* root , const int& val)\n{\n    Node* temp = root;\n    for (int i = 31; i >= 0; --i)\n    {\n        int bit = ((val >> i) & 1);\n        if (temp->children[bit] == NULL)\n        {\n            temp->children[bit] = new Node();\n        }\n        temp = temp->children[bit];\n    }\n}\nint getAns(Node* root , const int& query)\n{\n    Node* temp = root;\n    //we must try to find the smallest number present, so if bit is 1 we try to match it with 1 and if it is 0 we try to match it with 0.\n    int ans = 0;\n    for (int i = 31; i >= 0; --i)\n    {\n        int bit = (query >> i) & 1;\n        if (temp->children[bit])\n        {\n            temp = temp->children[bit];\n        }\n        else\n        {\n            if (temp->children[bit ^ 1] == NULL)\n                return ans;\n            ans = ans | (1 << i);\n            temp = temp->children[bit ^ 1];\n        }\n    }\n    return ans;\n}\nint32_t main()\n{\n    std::ios::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(0);\n    cout << setprecision(12) << fixed;\n    //fileio();\n    // Start from here\n    int n , queries;\n    cin >> n >> queries;\n    map<int , int>mp;\n    int num;\n    for (int i = 0; i < n; i++)\n    {\n        cin >> num;\n        mp[num] = 1;\n    }\n    Node* root = new Node();\n    int range = 3e5 - 1;\n    for (int i = 0; i <= range; i++)\n    {\n        if (mp[i] == 0)\n            putt(root , i);\n    }\n    int query = 0;\n    for (int i = 0; i < queries; i++)\n    {\n        int x; cin >> x;\n        query ^= x;\n        cout << getAns(root , query) << endl;\n    }\n    delete root;\n    return 0;\n}\n\n"
}