{
    "id": 107021353,
    "contestId": 842,
    "creationTimeSeconds": 1612919296,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "Apelpul"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 1653,
    "memoryConsumedBytes": 108851200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int maxn = 3e5 + 2;\r\nint triesize = 0;\r\nbool visited[(int)6e5 + 1];\r\nstruct node{\r\n    int child[2];\r\n    int val;  \r\n};\r\nnode trie[30 * maxn];\r\nvoid init(int u){\r\n    memset(trie[u].child, - 1, sizeof(trie[u].child));\r\n    trie[u].val = 0;\r\n}\r\nvoid add(int u){\r\n    int p = 0;\r\n    for(int i = 30; i >= 0; i--){\r\n        int t;\r\n        if(u & (1 << i)) t = 1;\r\n        else t = 0;\r\n        if(trie[p].child[t] == -1){\r\n            init(++triesize);\r\n            trie[p].child[t] = triesize;\r\n        }\r\n        p  = trie[p].child[t];\r\n    }\r\n    trie[p].val = u;\r\n}\r\nint query(int u){\r\n    int p = 0;\r\n    for(int i = 30; i >= 0; i--){\r\n        int t;\r\n        if(u & (1 << i)) t = 1;\r\n        else t = 0;\r\n        if(trie[p].child[t] != -1) p = trie[p].child[t];\r\n        else p = trie[p].child[1 - t];\r\n    }\r\n    return trie[p].val ^ u;\r\n}\r\nint main()\r\n{\r\n    memset(visited, false, sizeof(visited));\r\n    int n, m;\r\n    cin >> n >> m;\r\n    init(0);\r\n    for(int i = 1; i <= n; i++){\r\n        int x;\r\n        cin >> x;\r\n        visited[x] = true;\r\n    }\r\n    for(int i = 0; i <= 600000; i++){\r\n        if(!visited[i])\r\n        add(i);\r\n    }\r\n    int c = 0;\r\n    for(int i = 1; i <= m; i++){\r\n        int x;\r\n        cin >> x;\r\n        c = c ^ x;\r\n        int res = query(c);\r\n        cout << res << endl;\r\n    }\r\n}"
}