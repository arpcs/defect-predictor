{
    "id": 155306182,
    "contestId": 842,
    "creationTimeSeconds": 1651247338,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "recollector"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 343,
    "memoryConsumedBytes": 72192000,
    "source": "#include <cstdio>\r\n#include <cstring>\r\n#include <cctype>\r\n#include <algorithm>\r\n#include <iostream>\r\n#include <queue>\r\nusing namespace std;\r\ninline int read() {\r\n    int num = 0 ,f = 1; char c = getchar();\r\n    while (!isdigit(c)) f = c == '-' ? -1 : f ,c = getchar();\r\n    while (isdigit(c)) num = (num << 1) + (num << 3) + (c ^ 48) ,c = getchar();\r\n    return num * f;\r\n}\r\nconst int N = 3e5 + 5 ,LG = 20;\r\nstruct Trie {\r\n    int t[2][LG * N] ,siz[N * LG] ,idx;\r\n    Trie () : idx(1) {memset(t ,0 ,sizeof(t)); memset(siz ,0 ,sizeof(siz));}\r\n    #define Yuki_Full(x ,i) (siz[x] >= (1 << (i)))\r\n\tinline bool insert(int now ,int x ,int i) {\r\n\t\tif (i < 0) return siz[now] ? 0 : (siz[now] = 1 ,1);\r\n\t\tint k = x >> i & 1;\r\n\t\tif(!t[k][now]) t[k][now] = ++idx;\r\n\t\tbool res = insert(t[k][now] ,x ,i - 1);\r\n\t\tif (res) siz[now]++;\r\n\t\treturn res;\r\n\t}\r\n    inline int query(int x) {\r\n        int now = 1 ,res = 0;\r\n        for (int i = LG - 1; i >= 0; i--) {\r\n            int k = x >> i & 1;\r\n            if (Yuki_Full(t[k][now] ,i)) now = t[!k][now] ,res |= 1 << i;\r\n            else now = t[k][now];\r\n        }\r\n        return res;\r\n    }\r\n    #undef Yuki_Full\r\n}t;\r\nint n ,m ,k;\r\nsigned main() {\r\n    n = read() ,m = read();\r\n    for (int i = 1; i <= n; i++) t.insert(1 ,read() ,LG - 1);\r\n    while (m--) {\r\n        k ^= read();\r\n        printf(\"%d\\n\" ,t.query(k));\r\n    }\r\n    return 0;\r\n}"
}