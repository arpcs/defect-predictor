{
    "id": 60180670,
    "contestId": 842,
    "creationTimeSeconds": 1567786284,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "LawrenceMelo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 14950400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\nstruct node\r\n{\r\n\tint sz[2];\r\n\tnode* v[2];\r\n\r\n\tnode()\r\n\t{\r\n\t\tsz[0] = sz[1] = 0;\r\n\t\tv[0] = v[1] = nullptr;\r\n\t}\r\n};\r\n\r\n\r\nvoid insert(node* trie, int x)\r\n{\r\n\tfor(int i = 20; i >= 0; i--)\r\n\t{\r\n\t\tint bit = ((x & (1 << i)) > 0);\r\n\r\n\t\tif(trie -> v[bit] == nullptr) trie -> v[bit] = new node();\r\n\t\t\r\n\t\ttrie -> sz[bit]++;\r\n\t\ttrie = trie -> v[bit];\r\n\t}\r\n}\r\n\r\n\r\nint find(node *trie, int x)\r\n{\r\n\tnode *t = trie;\r\n\tint ans = 0;\r\n \r\n\tfor (int i = 20; i >= 0; i--)\r\n\t{\r\n\t\tint bit = ((x & (1 << i)) > 0);\r\n\r\n\t\tif(bit == 0)\r\n\t\t{\r\n\t\t\tif(t -> v[0] == nullptr) return ans;\r\n\t\t\telse if(t -> sz[0] != (1 << i)) t = t -> v[0];\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tans += (1 << i);\r\n\t\t\t\tif(!t -> sz[1]) return ans;\r\n\t\t\t\telse t = t -> v[1];\r\n\t\t\t}\t\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(t -> v[1] == nullptr) return ans;\r\n\t\t\telse if(t -> sz[1] != (1 << i)) t = t -> v[1];\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tans += (1 << i);\r\n\t\t\t\tif(!t -> sz[0]) return ans;\r\n\t\t\t\telse t = t -> v[0];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t}\r\n \r\n\treturn ans;\r\n}\r\n\r\nbool mark[301010];\r\n\r\nint main()\r\n{\r\n\tios::sync_with_stdio(false), cin.tie(nullptr);\r\n\tnode* trie = new node();\r\n\r\n\tint n, m;\r\n\tcin >> n >> m;\r\n\r\n\tfor(int i = 0; i < n; i++)\r\n\t{\r\n\t\tint a;\r\n\t\tcin >> a;\r\n\t\tif(!mark[a]) insert(trie, a);\r\n\t\tmark[a] = true;\r\n\t}\r\n\r\n\tint x = 0;\r\n\r\n\twhile(m--)\r\n\t{\r\n\t\tint val;\r\n\t\tcin >> val;\r\n\r\n\t\tx ^= val;\r\n\r\n\t\tcout << find(trie, x) << \"\\n\";\r\n\t}\r\n}"
}