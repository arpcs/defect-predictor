{
    "id": 73797164,
    "contestId": 842,
    "creationTimeSeconds": 1584711292,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 149094400,
    "source": "#include<bits/stdc++.h>\ntypedef long long ll;\nconst int maxx=300010;\nconst int maxn=2;\nusing namespace std;\nint Trie[31*maxx][maxn];\nint color[31*maxx];\nint vis[31*maxx];\nint k;\nint n,m,a,b,ans;\nvoid ini()\n{\n    memset(Trie,0,sizeof(Trie));\n    memset(color,0,sizeof(color));\n    k=0;\n}\nvoid insert(int w)\n{\n    int p=0;\n    for(int i=31; i>=0; i--)\n    {\n        int c=(w>>i)&1;\n        if(!Trie[p][c])\n        {\n            memset(Trie[k],0,sizeof(Trie[k]));\n            Trie[p][c]=++k;\n        }\n        p=Trie[p][c];\n    }\n    color[p]=w;\n}\nint search(int w)\n{\n    int p=0;\n    for(int i=31; i>=0; i--)\n    {\n        int c=(w>>i)&1;\n        if(Trie[p][c])\n            p=Trie[p][c];\n        else\n            p=Trie[p][1-c];\n    }\n    return color[p]^w;\n}\nint main()\n{\n    ini();\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1; i<=n; i++)\n    {\n        scanf(\"%d\",&a);\n        vis[a]=1;\n    }\n    for(int i=0; i<=600000; i++)\n    {\n        if(!vis[i])\n        {\n            insert(i);\n        }\n    }\n    for(int i=1; i<=m; i++)\n    {\n        scanf(\"%d\",&b);\n        ans^=b;\n        printf(\"%d\\n\",search(ans));\n    }\n    return 0;\n}\n\n\t   \t\t \t \t\t  \t\t \t \t  \t\t\t \t   \t"
}