{
    "id": 228674508,
    "contestId": 842,
    "creationTimeSeconds": 1697631726,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "wyb_codeforces"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 1871,
    "memoryConsumedBytes": 116633600,
    "source": "// LUOGU_RID: 130203121\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int N = 3e5 + 5;\r\nconst int M = 2e7 + 5;\r\n\r\nint n, m, tag;\r\nint a[N];\r\n\r\nint idx;\r\nint son[N * 32][2], siz[N * 32];\r\n\r\nvoid insert ( int x ) {\r\n\tint p = 0;\r\n\tfor ( int i = 31; i >= 0; i -- ) {\r\n\t\tint tmp = x >> i & 1;\r\n\t\tif ( !son[p][tmp] ) {\r\n\t\t\tson[p][tmp] = ++ idx;\r\n\t\t}\r\n\t\tp = son[p][tmp];\r\n\t\tsiz[p] ++;\r\n\t}\r\n}\r\n\r\nint query ( int x ) {\r\n\tint p = 0, sum = 0;\r\n\tfor ( int i = 31; i >= 0; i -- ) {\r\n\t\tint tmp = x >> i & 1;\r\n\t\tif ( !son[p][tmp] ) {\r\n\t\t\treturn sum;\r\n\t\t}\r\n\t\tif ( siz[son[p][tmp]] == ( 1 << i ) ) {\r\n\t\t\tsum += ( 1 << i );\r\n\t\t\tp = son[p][tmp ^ 1];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tp = son[p][tmp];\r\n\t\t}\r\n\t}\r\n\treturn sum;\r\n}\r\n\r\nsigned main () {\r\n\tcin >> n >> m;\r\n\tfor ( int i = 1; i <= n; i ++ ) {\r\n\t\tcin >> a[i];\r\n\t}\r\n\tsort ( a + 1, a + 1 + n );\r\n\tint len = unique ( a + 1, a + 1 + n ) - a - 1;\r\n\tfor ( int i = 1; i <= len; i ++ ) {\r\n\t\tinsert ( a[i] );\r\n\t}\r\n\twhile ( m -- ) {\r\n\t\tint x;\r\n\t\tcin >> x;\r\n\t\ttag ^= x;\r\n\t\tcout << query ( tag ) << '\\n';\r\n\t}\r\n\treturn 0;\r\n}"
}