{
    "id": 71360303,
    "contestId": 842,
    "creationTimeSeconds": 1582010813,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 1715,
    "memoryConsumedBytes": 257536000,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int N = 1000005; \n\nint a[N]; \nbool vis[N]; \n\nstruct node {\n    int son[2]; \n    int c; \n}t[N * 21]; int cnt, root;\n\nvoid insert(int &u, int dep, int x) {\n    if (!u) u = ++cnt; \n    ++t[u].c; \n    if (dep == -1) return ; \n    bool w = ((x & (1 << dep)) > 0); \n    insert(t[u].son[w], dep - 1, x); \n}\n\nint query(int u, int dep, int x) {\n    if (dep == -1) return 0; \n    bool w = ((x & (1 << dep)) > 0);\n    if (t[t[u].son[w]].c > 0) return query(t[u].son[w], dep - 1, x); \n    else return (1 << dep) + query(t[u].son[w ^ 1], dep - 1, x); \n}\n\nint main() {\n    int n, q; \n    cin >> n >> q;\n    for (int i = 0; i < n; ++i) {\n        cin >> a[i];\n        vis[a[i]] = 1; \n    }\n    for (int i = 0; i <= 1000000; ++i) {\n        if (vis[i] == 0) {\n            insert(root, 20, i); \n        }\n    }\n    int x, last; \n    last = 0; \n    while (q--) {\n        cin >> x; \n        last ^= x; \n        cout << query(root, 20, last) << endl; \n    }\n    return 0; \n}\n  \t \t\t  \t\t \t \t\t\t   \t  \t  \t\t\t \t"
}