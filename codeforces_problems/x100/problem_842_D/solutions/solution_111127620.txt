{
    "id": 111127620,
    "contestId": 842,
    "creationTimeSeconds": 1616758182,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 842,
        "index": "D",
        "name": "Vitya and Strange Lesson",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 842,
        "members": [
            {
                "handle": "hackerbhaiya"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504019100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 1138,
    "memoryConsumedBytes": 24268800,
    "source": "/*\r\nID: shubham147\r\nTASK: gift1\r\nLANG: C++14                 \r\n*/\r\n// #include <ext/pb_ds/assoc_container.hpp> // Common file \r\n// #include <ext/pb_ds/tree_policy.hpp> \r\n// #include <functional> // for less\r\n#include<bits/stdc++.h>\r\n// #pragma GCC optimize(\"Ofast\")\r\n// #pragma GCC target(\"avx,avx2,fma\")\r\n// #pragma GCC optimization(\"unroll-loops\")\r\n// #pragma GCC optimize(\"unroll-loops\")\r\n// #pragma GCC optimize(\"fast-math\")\r\n// #pragma GCC optimize(\"no-stack-protector\")\r\n#define ll long long\r\n#define f(i,a,b) for(ll i=a;i<b;i++)\r\n#define mod 1000000007\r\n#define mp make_pair\r\n#define ff first\r\n#define ss second\r\n#define rf(i,a,b) for(ll i=a;i>=b;i--)\r\n#define sc(a) scanf(\"%lld\",&a)\r\n#define pf printf\r\n#define sz(a) (int)(a.size())\r\n#define psf push_front\r\n#define ppf pop_front\r\n#define ppb pop_back\r\n#define pb push_back\r\n#define pq priority_queue\r\n#define all(s) s.begin(),s.end()\r\n#define sp(a) setprecision(a)\r\n#define rz resize\r\n#define ld long double\r\n#define inf (ll)1e18\r\n#define ub upper_bound\r\n#define lb lower_bound\r\n#define bs binary_search\r\n#define eb emplace_back\r\nconst double pi = acos(-1);\r\nll binpow(ll a, ll b){ll res=1;while(b!=0){if(b&1)res*=a;a*=a;b>>=1;}return res;}\r\n \r\n// using namespace __gnu_pbds; \r\nusing namespace std;\r\n\r\nconst int N=20;\r\n\r\nstruct node\r\n{\r\n    node *child[2];\r\n    int cnt;\r\n    node()\r\n    {\r\n        child[0]=child[1]=NULL,cnt=0;\r\n    }\r\n};\r\n\r\nvoid insert(node *root, int num)\r\n{\r\n    node *cur=root;\r\n    cur->cnt++;\r\n    rf(i,N-1,0)\r\n    {\r\n        if(num&(1<<i))\r\n        {\r\n            if(cur->child[1]==NULL)\r\n                cur->child[1]=new node();\r\n            cur=cur->child[1];\r\n        }\r\n        else\r\n        {\r\n            if(cur->child[0]==NULL)\r\n                cur->child[0]=new node();\r\n            cur=cur->child[0];\r\n        }\r\n        cur->cnt++;\r\n    }\r\n}\r\n\r\nint query(node *root, int depth, int val, int mx, int ans)\r\n{\r\n    if(depth==0 || root==NULL)\r\n        return ans;\r\n    node *cur=root;\r\n    int digit=(val&(1<<(depth-1))),id=digit;\r\n    if(digit>0)\r\n        digit=1,id=1;\r\n    // cout<<digit<<\" dig \";\r\n    if(cur->child[digit]==NULL)\r\n    {\r\n        while(depth>0)\r\n            ans+=(val&(1<<(depth-1))),depth--;\r\n        return ans;\r\n    }\r\n    if((cur->child[digit]->cnt)>=mx)\r\n        id=(id^1);\r\n    // cout<<id<<\" \"<<\" \"<<root->cnt<<endl;\r\n    if(cur->child[id]==NULL)\r\n    {\r\n        if(id)\r\n            ans|=(1<<(depth-1));\r\n        depth--;\r\n        while(depth>0)\r\n            ans+=(val&(1<<(depth-1))),depth--;\r\n        return ans;\r\n    }\r\n    return query(cur->child[id],depth-1,val,mx/2,id?(ans|(1<<(depth-1))):ans);\r\n}\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    // freopen(\"gift1.in\",\"r\",stdin);\r\n    // freopen(\"gift1.out\",\"w\",stdout);\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\",\"r\",stdin);\r\n    freopen(\"output.txt\",\"w\",stdout);\r\n#endif\r\n    ll t=1;\r\n    int mx=(1<<(N-1));\r\n    // cout<<mx<<endl;\r\n    // cin>>t;\r\n    while(t--)\r\n    {\r\n        int n,m;\r\n        cin>>n>>m;\r\n        set<int> s;\r\n        node *root=new node();\r\n        f(i,0,n)\r\n        {\r\n            int num;\r\n            cin>>num;\r\n            if(s.empty() || s.find(num)==s.end())\r\n                insert(root,num);\r\n            s.insert(num);\r\n        }\r\n        node *cur=root;\r\n        // cout<<cur->cnt<<\"\\n\";\r\n        int val=0;\r\n        while(m--)\r\n        {\r\n            int num;\r\n            cin>>num;\r\n            val^=num;\r\n            // cout<<val<<endl;\r\n            int ans=(query(root,N,val,mx,0)^val);\r\n            cout<<ans<<endl;\r\n        }\r\n    }\r\n}"
}