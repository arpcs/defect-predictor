{
    "id": 228455844,
    "contestId": 1881,
    "creationTimeSeconds": 1697478423,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1881,
        "index": "D",
        "name": "Divide and Equalize",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1881,
        "members": [
            {
                "handle": "premiitn"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1697121300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 10547200,
    "source": "//JAI BAJRANGBALI\r\n#include<bits/stdc++.h>  // Header\r\nusing namespace std::chrono;\r\nusing namespace std; // std is a namespace\r\n#define startt ios_base::sync_with_stdio(false);cin.tie(0);\r\n#define fastio ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL)\r\n#define boolalpha std::cout << std::boolalpha;\r\n#pragma GCC optimize(\"Ofast\")\r\n\r\n// operator overloads\r\ntemplate<typename T1, typename T2> // cin >> pair<T1, T2>\r\nistream& operator>>(istream &istream, pair<T1, T2> &p) { return (istream >> p.first >> p.second); }\r\ntemplate<typename T> // cin >> vector<T>\r\nistream& operator>>(istream &istream, vector<T> &v){for (auto &it : v)cin >> it;return istream;}\r\ntemplate<typename T1, typename T2> // cout << pair<T1, T2>\r\nostream& operator<<(ostream &ostream, const pair<T1, T2> &p) { return (ostream << p.first << \" \" << p.second); }\r\ntemplate<typename T> // cout << vector<T>\r\nostream& operator<<(ostream &ostream, const vector<T> &c) { for (auto &it : c) cout << it << \" \"; return ostream; }\r\ntemplate <typename T, typename S> // cout << map<T1, T2>\r\nostream& operator<<(ostream& os, const map<T, S>& v){for (auto it : v)os << it.first << \" : \"<< it.second << \"\\n\";return os;}\r\n// constants\r\nconst unsigned int M = 1e9+7;\r\nconst long double pi= 3.141592653589793238;\r\n//type defines\r\ntypedef long long int ll;\r\ntypedef long double lld;\r\ntypedef std::vector<ll> vll;\r\ntypedef std::set<ll> sll;\r\ntypedef std::multiset<ll> mstll;\r\ntypedef std::unordered_map<ll, ll> umll;\r\ntypedef std::map<ll, ll> mll;\r\ntypedef unordered_map<char, ll> umcll;\r\ntypedef std::map<char, ll> mcll;\r\ntypedef pair<ll,ll> pll;\r\ntypedef vector<pll> vpll;\r\ntypedef unordered_map<string , ll> umsll;\r\ntypedef std::map<string , ll> msll;\r\ntypedef pair<string,ll> psll;\r\ntypedef vector<psll> vpsll;\r\n\r\n// checks\r\nbool isPrime(ll n){if(n<=1)return false;if(n<=3)return true;if(n%2==0||n%3==0)return false;for(int i=5;i*i<=n;i=i+6)if(n%i==0||n%(i+2)==0)return false;return true;}\r\nbool isPowerOfTwo(ll n){if(n==0)return false;return (ceil(log2(n)) == floor(log2(n)));}\r\nbool isPerfectSquare(ll x){if (x >= 0) {ll sr = sqrt(x);return (sr * sr == x);}return false;}\r\nbool isEven(ll n){if(n%2==0) return true;return false;}\r\nbool isOdd(ll n){if(n%2==0) return false;return true;}\r\n\r\n// modulo functions\r\nll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}\r\nll moduloinverseprime(ll a, ll b) {return expo(a, b - 2, b);}\r\nll moduloaddition(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\r\nll modulomultiply(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}\r\nll modulosubstraction(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}\r\nll modulodivison(ll a, ll b, ll m) {a = a % m; b = b % m; return (modulomultiply(a, moduloinverseprime(b, m), m) + m) % m;}  //only for prime m\r\n\r\n// utility functions\r\ntemplate <typename T>\r\nvoid print(T &&t)  { cout << t << \"\\n\"; }\r\n\r\n\r\n// sort according to the second element of the pair a is for ascending and d is for descending.\r\n// check last line of the code to get an idea.\r\nbool sorta(const pair<ll,ll> &a,const pair<ll,ll> &b){return (a.second < b.second);}\r\nbool sortd(const pair<ll,ll> &a,const pair<ll,ll> &b){return (a.second > b.second);}\r\nbool sorts(const pair<ll,string> &a,const pair<ll,string> &b){return (a.second > b.second);}\r\n\r\n// bits converter decimal to binary and binary to decimal.\r\nstring decimalToBinary(ll n){string s=\"\";ll i = 0;while (n > 0) {s =to_string(n % 2)+s;n = n / 2;i++;}return s;}\r\nll binaryToDecimal(string n){string num = n;ll dec_value = 0;int base = 1;int len = num.length();for(int i = len - 1; i >= 0; i--){if (num[i] == '1')dec_value += base;base = base * 2;}return dec_value;}\r\n//change case\r\nchar changecase(char a){return a^' ';}\r\n\r\nll gcd(ll a, ll b){if(a==0ll) {return b;} return gcd(b%a,a);}\r\nll lcm(ll a, ll b){return (a*b)/(gcd(a,b));}\r\nll binary_Exponentiation(ll a, ll b){ll z=1;while(b){if(b%2) z=z*a;a=a*a;b=b/2;}return z;}\r\nll logab(ll a,ll b){ll ans=log2(b)/log2(a);return ans;}\r\nll logdivisors(ll n,ll i){ll count=0;while(n%i==0){count++;n=n/i;}return count;}\r\n#define endl '\\n'\r\nvoid dfs(vector<vector<int>> &grid,vector<vector<int>> &vis,vector<pair<int,int>> &moves,int i,int j,int n,int m)\r\n{\r\n    if(!vis[i][j]){\r\n        vis[i][j]=1;\r\n        // s=s+grid[i][j];\r\n        //cout<< s<<endl;\r\n    }\r\n    for(auto x:moves)\r\n    {\r\n        int nrow=i+x.first;\r\n        int ncol=j+x.second;\r\n        if(nrow>=0 && ncol>=0 && nrow<n && ncol<m && !vis[nrow][ncol]&& grid[nrow][ncol]>0)\r\n            dfs(grid,vis,moves,nrow,ncol,n,m);\r\n    }\r\n}\r\nbool ed(ll x,vll &v){\r\n    ll c=1,maxy=v[0],miny=v[0];\r\n    for(int i=0;i<v.size();i++)\r\n    {\r\n        maxy=v[i];\r\n        cout<<\"maxy=\"<<maxy<<endl<<\"miny=\"<<miny<<endl;\r\n        if(((maxy-miny+1)/2)>x) {\r\n            c++;\r\n            cout<<c<<endl;\r\n            miny = v[i];\r\n        }}\r\n    if(c>3)\r\n        return false;\r\n    return true;\r\n}\r\nbool bb(vll v,ll mid,ll pos)\r\n{\r\n    ll c=0;\r\n    cout<<\"mid=\"<<mid<<endl;\r\n    cout<<\"element selected\"<<v[pos]<<endl;\r\n    for(int i=0;i<v.size();i++)\r\n    {\r\n        if(v[pos]%v[i]==0)\r\n            c++;\r\n    }\r\n    cout<<\"count found\"<<c<<endl;\r\n    if(c>=mid)\r\n        return true;\r\n    return false;\r\n}\r\nbool cmp(pair<ll,ll> a,pair<ll,ll> b)\r\n{\r\n    if(b.second>a.second)\r\n        return true;\r\n    else if(b.second==a.second)\r\n        return b.first>a.first;\r\n    else\r\n        return false;\r\n}\r\nvoid dfss(ll node,vll &dist,vll &vis,vpll adj[]) {\r\n    vis[node] = 1;\r\n    for (auto x: adj[node]) {\r\n        if (!vis[x.first]) {\r\n            dist[x.first] = dist[node] + x.second;\r\n            dfss(x.first, dist, vis, adj);\r\n        }\r\n    }\r\n}\r\nvoid hashstr(string pat, string txt)\r\n{\r\n    const int d=26;const int p=5381;\r\n    int patHash = 0; // Hash value of pattern\r\n    int txtHash = 0; // Hash value of text\r\n\r\n    for (int i = 0; i < pat.length(); i++) // Generating Hash values for pattern and first window text\r\n    {\r\n        patHash = patHash * d;\r\n        txtHash = txtHash * d;\r\n        patHash = patHash + ((pat[i] - 'A' + 1) % p);\r\n        txtHash = txtHash + ((txt[i] - 'A' + 1) % p);\r\n    }\r\n    for (int i = 0; i < txt.length() - pat.length(); i++) // Loop of text size minus  window\r\n    {\r\n        if (patHash == txtHash)\r\n        {\r\n            cout<<\"Pattern found at index \"<<i;\r\n        }\r\n\r\n        if (i < txt.length() - pat.length())\r\n        {\r\n            txtHash = txtHash - ((txt[i] - 'A' + 1) * (int)pow(d, pat.length() - 1));  // Subtracting first element from current hash of d^window-1\r\n            txtHash = txtHash * d + (txt[i + pat.length()] - 'A' + 1);  // multiplying obtained hash with d to left shift the number and then adding the next new element\r\n        }\r\n    }\r\n}\r\nint kmp(string haystack, string needle,int start) {\r\n    int n = needle.length();\r\n    vector<int>lps(n,0);\r\n    int i=start;\r\n    int j=start+1;\r\n    while(j<n){\r\n        while(i>start && needle[j]!=needle[i])\r\n            i = lps[i-1];\r\n        if(needle[i] == needle[j])\r\n            i++;\r\n        lps[j]= i;\r\n        j++;\r\n    }\r\n    i=start;\r\n    j=start;\r\n    // for(auto a:lps)cout<<a<<endl;\r\n    while(i<haystack.size()){\r\n        while(j>start &&j<n && needle[j]!= haystack[i]){\r\n            j = lps[j-1];\r\n        }\r\n        if(j<n &&needle[j] == haystack[i]){\r\n            j++;\r\n        }\r\n        i++;\r\n        if(j==n)return i-n;\r\n    }\r\n    return -1;\r\n}\r\nll toi(string str)\r\n{\r\n    ll res = 0;\r\n    for (int i = 0; str[i] != '\\0'; ++i)\r\n        res = res * 10 + str[i] - '0';\r\n    return res;\r\n}\r\n// macros\r\n#define Endl endl;\r\n#define sz(x) ((int)(x).size())\r\n#define debug(x) cout << #x << \" ---> \" << x << endl;\r\n#define pb push_back\r\n//#define pop pop_back\r\n#define forf(i,a,b) for(int i=a; i<b; i++)\r\n#define forb(i,a,b) for(int i=a; i>=b; i--)\r\n#define cyes cout << \"YES\" << endl\r\n#define cno cout << \"NO\" << endl\r\n#define cmo cout << -1 << endl\r\n#define all(x) x.begin(), x.end()\r\n#define c(demoralizer) cout << (demoralizer ? \"YES\" : \"NO\") << endl\r\n#define vsorta(v) sort(v.begin(),v.end());\r\n#define vsortd(v) sort(v.begin(),v.end(),greater<int>());\r\n#define vreverse(v) reverse(v.begin(),v.end());\r\n#define vminimum_Element(v) *min_element(v.begin(), v.end());\r\n#define vmaximum_Element(v) *max_element(v.begin(), v.end());\r\n#define vminimum_Element_Index(v) min_element(v.begin(), v.end()) - v.begin();\r\n#define vmaximum_Element_Index(v) max_element(v.begin(),v.end()) - v.begin();\r\n#define vsum(v) accumulate(v.begin(), v.end(), 0*1LL);\r\n#define vcount_Frequency(v,x) count(v.begin(), v.end(), x);\r\n#define vfind(v,x) find(v.begin(), v.end(), x);\r\n#define verase(v,i) v.erase(v.begin() + i);\r\n#define setbits(x) __builtin_popcountll(x);\r\n#define pfsorta(v) sort(v.begin(),v.end());\r\n#define pfsorta(v) sort(v.begin(),v.end());\r\n#define pssorta(v) sort(v.begin(),v.end(),sorta);\r\n#define pssorta(v) sort(v.begin(),v.end(),sortd);\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef pair<ll, ll> pll;\r\nconst unsigned int siz=5e5+5;\r\nint fact[siz];\r\nvoid fac()\r\n{\r\n    fact[0]=1;\r\n    for(int i=1;i<siz;i++)\r\n    {\r\n        fact[i]= modulomultiply(fact[i-1],i,M);\r\n    }\r\n}\r\nbool isInteger(long double number) {\r\n    double epsilon = 1e-6; // Adjust the epsilon as needed\r\n    return abs(number - round(number)) < epsilon;\r\n}\r\n#define MAXN 1000001\r\nll spf[MAXN];\r\nunordered_map<ll,ll> mp;\r\nvoid sieve()\r\n{\r\n    spf[1] = 1;\r\n    for (int i = 2; i < MAXN; i++)\r\n        spf[i] = i;\r\n    for (int i = 4; i < MAXN; i += 2)\r\n        spf[i] = 2;\r\n    for (int i = 3; i * i < MAXN; i++) {\r\n        if (spf[i] == i) {\r\n            for (int j = i * i; j < MAXN; j += i){\r\n                if (spf[j] == j)\r\n                    spf[j] = i;}\r\n        }\r\n    }\r\n}\r\nvoid pfac(ll x)\r\n{\r\n    while (x != 1) {\r\n        mp[spf[x]]++;\r\n        x = x / spf[x];\r\n    }\r\n}\r\n\r\nvoid solve() {\r\n    ll n;\r\n    cin>>n;\r\n    vll v(n);\r\n    cin>>v;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        pfac(v[i]);\r\n    }\r\n    for(auto [x,y]:mp)\r\n    {\r\n        if(y%n!=0)\r\n        {\r\n            cno;\r\n            return;\r\n        }\r\n    }\r\n    cyes;\r\n}\r\n\r\n\r\n\r\nmt19937 rng(chrono::system_clock::now().time_since_epoch().count());\r\nint32_t main()\r\n{\r\n    fastio;\r\n    startt\r\n    cout<<fixed<<setprecision(10);\r\n#ifdef prem\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n            freopen(\"output.txt\", \"w\", stdout);\r\n            freopen(\"error.txt\", \"w\", stderr);\r\n#endif\r\n    auto start = high_resolution_clock::now();\r\n    int t;\r\n    cin>>t;\r\n    int i=1;\r\n    sieve();\r\n    while(i<=t)\r\n    {\r\n\r\n        // cout<<\"Case #\"<<i<<\": \";\r\n        solve();\r\n        i++;\r\n        mp.clear();\r\n    }\r\n    auto stop = high_resolution_clock::now();\r\n    auto duration = duration_cast<microseconds>(stop - start);\r\n#ifdef prem\r\n    cout<<endl<<\"Time: \"<< (float)duration.count()/1000000<<\" s\"<<endl;\r\n#endif\r\n}\r\n\r\n// size_t = unsigned long long int in c++ ;"
}