{
    "id": 229671526,
    "contestId": 1881,
    "creationTimeSeconds": 1698228173,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1881,
        "index": "D",
        "name": "Divide and Equalize",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1881,
        "members": [
            {
                "handle": "bhav_khurana"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1697121300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 24678400,
    "source": "#include <bits/stdc++.h>\r\n#define rep(i,n) for (long long i = 0; i < n; ++i)\r\n#define pb push_back\r\n#define all(v) v.begin(),v.end()\r\n#define IOS ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)\r\n#define pll pair<ll,ll>\r\n#define llrp(x,y) ((ll)round(pow(x,y)))\r\n#define coutyes cout << \"YES\" << endl\r\n#define coutno cout << \"NO\" << endl\r\n#define endl '\\n'\r\nusing namespace std;\r\nusing ll = long long;\r\nusing ld = long double;\r\n\r\nconst int32_t MOD=1e9+7;\r\nconst int N = 1e6+1;\r\n\r\nvector<ll> prime(N+1, 1);\r\nvector<ll> lpf(N, 0), hpf(N, 0);\r\n\r\nbool checkXmodA(map<ll,ll> &primes, ll a) {\r\n    ll cp = a;\r\n    while (cp > 1) {\r\n        ll lp = lpf[cp];\r\n        ll ct = 0;\r\n        while (cp % lp == 0) {\r\n            ct++;\r\n            cp /= lp;\r\n        }\r\n        // cout << ct << endl;\r\n        if (primes[lp] == 0 || primes[lp] % ct != 0) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nbool checkAmodX(map<ll,ll> &primes, ll a) {\r\n    ll cp = a;\r\n    while (cp > 1) {\r\n        ll lp = lpf[cp];\r\n        ll ct = 0;\r\n        while (cp % lp == 0) {\r\n            ct++;\r\n            cp /= lp;\r\n        }\r\n        if ((primes[lp] != 0) && (ct % primes[lp] != 0)) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nvoid Sieve()\r\n{\r\n    prime[0] = prime[1] = false;\r\n    for (ll i = 2; i < N; i++)\r\n    {\r\n        if (prime[i])\r\n        {\r\n            lpf[i] = hpf[i] = i;\r\n            for (ll j = 2 * i; j < N; j += i)\r\n            {\r\n                prime[j] = false;\r\n                hpf[j] = i;\r\n                if (lpf[j] == 0) lpf[j] = i;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvoid solve()\r\n{\r\n    ll n;\r\n    cin >> n;\r\n    vector<ll> v(n);\r\n    rep(i,n) cin >> v[i];\r\n    map<ll,ll> primes;\r\n    for (ll i = 0; i < n; i++) {\r\n        ll cp = v[i];\r\n        while (cp > 1) {\r\n            ll lp = lpf[cp];\r\n            // cout << lp << endl;\r\n            while (cp % lp == 0) {\r\n                primes[lp]++;\r\n                cp /= lp;\r\n            }\r\n        }\r\n    }\r\n    for (auto &val : primes) {\r\n        if (val.second % n != 0) {\r\n            coutno;\r\n            return;\r\n        }\r\n        val.second /= n;\r\n    }\r\n    // for (ll i = 0; i < n; i++) {\r\n    //     if (!checkAmodX(primes, v[i]) && !checkXmodA(primes, v[i])) {\r\n    //         coutno;\r\n    //         return;\r\n    //     }\r\n    // }\r\n    coutyes;\r\n}\r\n\r\nsigned main()\r\n{\r\n    IOS;\r\n    Sieve();\r\n    int t;\r\n    cin >> t;\r\n    while (t--)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}