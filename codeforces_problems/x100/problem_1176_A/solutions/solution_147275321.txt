{
    "id": 147275321,
    "contestId": 1176,
    "creationTimeSeconds": 1645538624,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1176,
        "index": "A",
        "name": "Divide it!",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1176,
        "members": [
            {
                "handle": "Enigma_31"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560090900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/* Enigma_31 */\n\n#include<bits/stdc++.h>\n// #include<ext/pb_ds/assoc_container.hpp>\n// #include<ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace chrono;\n// using namespace __gnu_pbds;\n\n#define w(x)int x;cin>>x;while(x--)\n#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\n#define MOD 1000000007\n#define MOD1 998244353\n#define INF 1e18\n#define nline \"\\n\"\n#define pb push_back\n#define ppb pop_back\n#define f(i, n) for (int i = 0; i < n; i++)\n#define rf(i, n) for (int i = n - 1; i >= 0; i--)\n#define mp make_pair\n#define pii pair<int, int>\n#define vi vector<int>\n#define mii map<int, int>\n#define pqb priority_queue<int>\n#define pqs priority_queue<int, vi, greater<int> >\n#define setbits(x) __builtin_popcountll(x)\n#define zrobits(x) __builtin_ctzll(x)\n#define ps(x, y) fixed << setprecision(y) << x\n#define mk(arr, n, type) type *arr = new type[n];\n#define ff first\n#define ss second\n#define PI 3.141592653589793238462\n#define sz(x) ((int)(x).size())\n#define all(x) (x).begin(), (x).end()\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double lld;\n// typedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag, tree_order_statistics_node_update > pbds; // find_by_order, order_of_key\n/*---------------------------------------------------------------------------------------------------------------------------*/\n//DEBUGGING\n/*---------------------------------------------------------------------------------------------------------------------------*/\n#ifndef Enigma_31\n#define debug(x) cerr << #x<<\" \"; _print(x); cerr << endl;\n#else\n#define debug(x)\n#endif\n\nvoid _print(ll t) {cerr << t;}\nvoid _print(int t) {cerr << t;}\nvoid _print(string t) {cerr << t;}\nvoid _print(char t) {cerr << t;}\nvoid _print(lld t) {cerr << t;}\nvoid _print(double t) {cerr << t;}\nvoid _print(ull t) {cerr << t;}\n\ntemplate <class T, class V> void _print(pair <T, V> p);\ntemplate <class T> void _print(vector <T> v);\ntemplate <class T> void _print(set <T> v);\ntemplate <class T, class V> void _print(map <T, V> v);\ntemplate <class T> void _print(multiset <T> v);\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\n// void _print(pbds v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\n/*---------------------------------------------------------------------------------------------------------------------------*/\n//FUNCTIONS\n/*---------------------------------------------------------------------------------------------------------------------------*/\nll cntDig(ll n) { return floor(log10(n) + 1); }\nll digSum(ll n) { ll sum = 0; while (n != 0) { sum += n % 10; n = n / 10; } return sum;}\nll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}\nll lcm(ll a, ll b) { ll val = gcd(a, b); return (a * b) / val;}\nll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}\nvoid extendgcd(ll a, ll b, ll*v) {if (b == 0) {v[0] = 1; v[1] = 0; v[2] = a; return ;} extendgcd(b, a % b, v); ll x = v[1]; v[1] = v[0] - v[1] * (a / b); v[0] = x; return;} //pass an arry of size1 3\nll mminv(ll a, ll b) {ll arr[3]; extendgcd(a, b, arr); return arr[0];} //for non prime b\nll mminvprime(ll a, ll b) {return expo(a, b - 2, b);}\nbool revsort(ll a, ll b) {return a > b;}\nvoid swap(int &x, int &y) {int temp = x; x = y; y = temp;}\nll combination(ll n, ll r, ll m, ll *fact, ll *ifact) {ll val1 = fact[n]; ll val2 = ifact[n - r]; ll val3 = ifact[r]; return (((val1 * val2) % m) * val3) % m;}\nvoid google(int t) {cout << \"Case #\" << t << \": \";}\nbool isPrime(int n) {if (n == 1) return false; if (n == 2 || n == 3) return true; if (n % 2 == 0 || n % 3 == 0) return false; for (int i = 5; i * i <= n; i = i + 6) {if (n % i == 0 || n % (i + 2) == 0) return false;} return true;}\nvector<ll> sieve(int n) {int*arr = new int[n + 1](); vector<ll> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}\nll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\nll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}\nll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}\nll mod_div(ll a, ll b, ll m) {a = a % m; b = b % m; return (mod_mul(a, mminvprime(b, m), m) + m) % m;}  //only for prime m\nll phin(ll n) {ll number = n; if (n % 2 == 0) {number /= 2; while (n % 2 == 0) n /= 2;} for (ll i = 3; i <= sqrt(n); i += 2) {if (n % i == 0) {while (n % i == 0)n /= i; number = (number / i * (i - 1));}} if (n > 1)number = (number / n * (n - 1)) ; return number;} //O(sqrt(N))\n/*--------------------------------------------------------------------------------------------------------------------------*/\n//SOLUTION\n/*---------------------------------------------------------------------------------------------------------------------------*/\n\nvoid solve() {\n\t//Enigma_31\n\tw(t) {\n\n\n\t\tint n, k;\n\t\tcin >> n >> k\n\n\t}\n}\n\nint main() {\n#ifndef Enigma_31\n\tfreopen(\"Error.txt\", \"w\", stderr);\n#endif\n\tfastio();\n\tauto start1 = high_resolution_clock::now();\n\tsolve();\n\tauto stop1 = high_resolution_clock::now();\n\tauto duration = duration_cast<microseconds>(stop1 - start1);\n#ifdef Enigma_31\n\tcerr << \"Time: \" << duration . count() / 1000 << endl;\n#endif\n}"
}