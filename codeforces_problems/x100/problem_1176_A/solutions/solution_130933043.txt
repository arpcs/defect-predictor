{
    "id": 130933043,
    "contestId": 1176,
    "creationTimeSeconds": 1633480617,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1176,
        "index": "A",
        "name": "Divide it!",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1176,
        "members": [
            {
                "handle": "bkifhr7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560090900
    },
    "programmingLanguage": "Kotlin 1.5",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 24883200,
    "source": "import kotlin.math.min\n\nfun main() {\n    val t = readLine()!!.toInt()\n    val cache = HashMap<Long, Int>()\n\n    fun calc(num: Long): Int {\n        if (num == 1L) return 0\n        if (num < 1L) return Int.MAX_VALUE - 1\n        if (cache.containsKey(num)) return cache[num]!!\n        val div2 = if ((num % 2) == 0L) calc(num / 2) else Int.MAX_VALUE - 1\n        val div3 = if ((num % 3) == 0L) calc((2 * num) / 3) else Int.MAX_VALUE - 1\n        val div5 = if ((num % 5) == 0L) calc((4 * num) / 5) else Int.MAX_VALUE - 1\n        val ans = min(div2, min(div3, div5)) + 1\n        cache[num] = ans\n        return ans\n    }\n\n    repeat(t) {\n        val n = readLine()!!.toLong()\n\n        val ans = calc(n)\n        println(if (ans == Int.MAX_VALUE) -1 else ans);\n    }\n}\n \t\t\t \t \t\t       \t \t \t\t  \t   \t\t"
}