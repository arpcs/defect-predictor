{
    "id": 128862023,
    "contestId": 1176,
    "creationTimeSeconds": 1631668158,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1176,
        "index": "A",
        "name": "Divide it!",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1176,
        "members": [
            {
                "handle": "Luan_Pedrosa"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560090900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 3686400,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing vi = vector<int>;\nusing vvi = vector<vi>;\nconst ll mod = 1e9 + 7,inf = 1e18;\n#define pb push_back\n#define fast ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\nvoid setIO()\n{\n    fast;\n    #ifndef ONLINE_JUDGE\n    #endif\n}\nstruct DSU\n{\n    int n;\n    vi p;\n    DSU(int N)\n    {\n        n = N;\n        p.assign(n + 1,-1);\n        for (int i = 0;i<=n;i++)p[i] = i;\n    }\n    int Find(int i)\n    {\n        if (p[i] == i)return i;\n        return p[i] = Find(p[i]);\n    }\n    void Merge(int a,int b)\n    {\n        a = Find(a),b = Find(b);\n        if (a != b)p[b] = a;\n    }\n};\nint main()\n{\n    setIO();\n    int n,m1,m2;\n    cin>>n>>m1>>m2;\n    DSU val1(n + 1),val2(n + 1);\n    vvi a;\n    while (m1--){\n        int u,v;\n        cin>>u>>v;\n        val1.Merge(u,v);\n    }\n    while (m2--){\n        int u,v;\n        cin>>u>>v;\n        val2.Merge(u,v);\n    }\n    int ans = 0;\n    for (int i = 1;i<=n;i++){\n        for (int j = i + 1;j<=n;j++){\n            if (val1.Find(i) != val1.Find(j) && val2.Find(i) != val2.Find(j)){\n                val1.Merge(i,j);\n                val2.Merge(i,j);\n                a.pb({i,j});\n                ans++;\n            }\n        }\n    }\n    cout<<ans<<endl;\n    for (auto it:a)cout<<it[0]<<\" \"<<it[1]<<endl;\n    return 0;\n}"
}