{
    "id": 210745284,
    "contestId": 1176,
    "creationTimeSeconds": 1687514820,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1176,
        "index": "A",
        "name": "Divide it!",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1176,
        "members": [
            {
                "handle": "ANIK027"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560090900
    },
    "programmingLanguage": "Java 17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 0,
    "source": "import java.math.BigInteger;\r\nimport java.util.Scanner;\r\n\r\npublic class runner {\r\n\r\n    public static void main(String[] args) {\r\n        Scanner sc = new Scanner(System.in);\r\n        \r\n        int q = sc.nextInt();\r\n        BigInteger[] arr = new BigInteger[q]; // Use BigInteger array\r\n        \r\n        for (int i = 0; i < q; i++) {\r\n            arr[i] = sc.nextBigInteger(); // Use nextBigInteger() to read large numbers\r\n        }\r\n        \r\n        int count;\r\n        for (int j = 0; j < q; j++) {\r\n            count = 0;\r\n            BigInteger n = arr[j];\r\n            \r\n            while (!n.equals(BigInteger.ONE)) {\r\n                if (n.mod(BigInteger.TWO).equals(BigInteger.ZERO)) {\r\n                    n = n.divide(BigInteger.TWO);\r\n                } else if (n.mod(BigInteger.valueOf(3)).equals(BigInteger.ZERO)) {\r\n                    n = n.multiply(BigInteger.TWO).divide(BigInteger.valueOf(3));\r\n                } else if (n.mod(BigInteger.valueOf(5)).equals(BigInteger.ZERO)) {\r\n                    n = n.multiply(BigInteger.valueOf(4)).divide(BigInteger.valueOf(5));\r\n                } else if (n.mod(BigInteger.valueOf(2)).compareTo(BigInteger.ZERO) != 0 \r\n                           && n.mod(BigInteger.valueOf(3)).compareTo(BigInteger.ZERO) != 0 \r\n                           && n.mod(BigInteger.valueOf(5)).compareTo(BigInteger.ZERO) != 0) {\r\n                    // Additional condition for numbers not divisible by 2, 3, or 5\r\n                    break;\r\n                }else {\r\n                \tcount=-1;\r\n                \tbreak;\r\n                }\r\n                count++;\r\n            }\r\n            \r\n            System.out.println(count);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n"
}