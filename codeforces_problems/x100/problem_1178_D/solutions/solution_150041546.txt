{
    "id": 150041546,
    "contestId": 1178,
    "creationTimeSeconds": 1647617862,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "Matveyko"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "//#include <bits\\stdc++.h>\r\n#include <bitset>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <iostream>\r\n#include <chrono>\r\n#include <math.h>\r\n#define pb push_back\r\n#define int int64_t\r\n#define uint uint64_t\r\n#define cyes cout << \"YES\\n\"\r\n#define cno cout << \"NO\\n\"\r\n#define mat(type, h, l) vector<vector<type>> a(h, vector<type>(l));\r\n#define all(a) (a).begin(), (a).end()\r\n#define MIN(a, other) a = min(a, other);\r\n#define MAX(a, other) a = max(a, other); \r\n//#define lzcnt(x) countl_zero(x)\r\nusing namespace std;\r\nconstexpr int mod = 1000000007;\r\nstruct custom_hash {\r\n\tstatic uint64_t splitmix64(uint64_t x) {\r\n\t\tx += 0x9e3779b97f4a7c15;\r\n\t\tx = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n\t\tx = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n\t\treturn x ^ (x >> 31);\r\n\t}\r\n\tsize_t operator()(uint64_t x) const {\r\n\t\tstatic const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n\t\treturn splitmix64(x + FIXED_RANDOM);\r\n\t}\r\n};\r\n\r\nint nxt(){\r\n\tint x;\r\n\tcin >> x;\r\n\treturn x;\r\n}\r\nvoid solve(vector<int>& p){\r\n}\r\nint32_t main(){\r\n\tcin.tie(nullptr)->ios_base::sync_with_stdio(false);\r\n\tsetvbuf(stdout, nullptr, _IOFBF, BUFSIZ);\r\n\tint n = nxt();\r\n\tint k = n;\r\n\twhile(true){\r\n\t\tbool flag = true;\r\n\t\tfor (int i = 2; i <= sqrt(k); ++i){\r\n\t\t\tif (k%i == 0){\r\n\t\t\t\tflag = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(flag)\r\n\t\t\tbreak;\r\n\t\t++k;\r\n\t}\r\n\tcout << k << '\\n';\r\n\tfor (int i = 1; i <= n-1; ++i){\r\n\t\tcout << i << ' ' << i+1 << '\\n';\r\n\t}\r\n\tcout << n << ' ' << 1 << '\\n';\r\n\tfor (int i = 1; i <= (k-n); i++){\r\n\t\tcout << i << ' ' << n/2+i << '\\n';\r\n\t}\r\n\t//}\r\n\t//max_element\r\n\t//reverse(begin,end)\r\n\t//is_sorted\r\n\t//merge(all(a), all(b), c.begin())\r\n\t//generate(all(a), nxt)\r\n\t//rotate(a.begin(), a.begin()+k, a.end())\r\n\t//unique(all(a)). to make set should be sorted (removes consecutive elements)\r\n\t//partition_point\r\n\t//!!\r\n}"
}