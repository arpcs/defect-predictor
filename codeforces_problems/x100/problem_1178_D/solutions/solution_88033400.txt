{
    "id": 88033400,
    "contestId": 1178,
    "creationTimeSeconds": 1595746055,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 5017600,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5+100;\nstruct edge{\n\tint u,v;\n}ans[N];\n\n\nint n;\nint tot;\n\nbool vis[N];\nint prime[N],top;\nvoid getprime(int x)\n{\n\tvis[1] = 1;\n\tfor(int i=2;i<=x;i++)\n\t{\n\t\tif(!vis[i])\n\t\t{\n\t\t\tprime[++top] = i;\n\t\t\tfor(int j=i*2;j<=x;j+=i)\n\t\t\t\tvis[j] = true;\n\t\t}\n\t}\n}\n\nint main()\n{\n\tcin >> n;\n\tgetprime(10000);\n\ttot = n;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tans[i].u=i;\n\t\tans[i].v= i==n?1:i+1;\n\t}\n\tif(!vis[n])\t\n\t{\n\t\tcout << tot << endl;\n\t\tfor(int i=1;i<=n;i++)\n\t\t\tcout << ans[i].u <<\" \"<< ans[i].v<<endl;\n\t\treturn 0;\n\t}\n\tint cnt = 1;\n\twhile(prime[cnt]<=n)\tcnt++;\n\tint add = prime[cnt] - n;\n\t\n\tif(n%2==0)//\u7279\u5224\uff0c\u9632\u6b62\u8fde\u51fa\u91cd\u8fb9 \n\t{\n\t\tif(add>=2)\n\t\t{\n\t\t\tans[++tot].u = 1;\n\t\t\tans[tot].v\t = n/2;\n\t\t\tans[++tot].u = n/2+1;\n\t\t\tans[tot].v   = n;\n\t\t\tadd-=2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans[++tot].u = 1;\n\t\t\tans[tot].v   = n/2+1;\n\t\t\tadd--; \n\t\t}\n\t\t\n\t}\n\tint l = 2, r = n-1;\n\twhile(add--)\n\t{\n\t\tans[++tot].u = l;\n\t\tans[tot].v\t = r;\n\t\tl++;\n\t\tr--;\n\t}\n\t\n\t\n\t\n\tcout << tot <<endl;\n\tfor(int i=1;i<=tot;i++)\n\t\tcout << ans[i].u <<\" \"<< ans[i].v <<endl;\n\treturn 0;\n}\n\t\t \t\t  \t\t  \t \t\t\t\t\t   \t\t \t \t\t\t\t\t"
}