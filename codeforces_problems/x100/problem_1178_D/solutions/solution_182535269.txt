{
    "id": 182535269,
    "contestId": 1178,
    "creationTimeSeconds": 1669396812,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "I_mm_possible"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 33689600,
    "source": "#include<bits/stdc++.h>\r\n// #include <ext/pb_ds/assoc_container.hpp> // Common file\r\n// #include <ext/pb_ds/tree_policy.hpp>\r\n// #include <functional> // for less\r\n// #include <iostream>\r\n// using namespace __gnu_pbds;\r\nusing namespace std;\r\n// typedef tree<int, null_type, less<int>, rb_tree_tag,\r\n//              tree_order_statistics_node_update>\r\n//     ordered_set;\r\nconst int mod = 1e9+7;\r\n \r\n#define rep(i,j,n) for(long long i=j;i<n;i++)\r\n#define rrep(i,j) for(ll i=j;i>=0;i--)\r\n#define DEB(x) cout<<\"##\"<<x<<\"##\"<<endl\r\n#define see(x) cout<<x<<\"\\n\";\r\n#define ll long long int\r\n#define pb push_back\r\n#define ft first\r\n#define se second\r\n#define vvi vector<vector<int>>\r\n#define vi vector<int>\r\n#define vll vector<ll>\r\n#define all(v) v.begin(),v.end()\r\n#pragma GCC optimize \"trapv\"// Detects overflow.....(RE)\r\ntemplate <typename Type>\r\nistream &operator>>(istream &in, vector<Type> &vec) {\r\n    int n = vec.size();\r\n    for (int i = 0; i < n; i++)\r\n        in >> vec[i];\r\n    return in;\r\n}\r\ntemplate <typename Type>\r\nostream &operator<<(ostream &out, vector<Type> &vec) {\r\n    for (auto val : vec)\r\n        out << val << \" \";\r\n    return out;\r\n}\r\nvoid reduceFraction(ll &x, ll &y)\r\n{\r\n    int d;\r\n    d = __gcd(x, y); \r\n    x = x / d;\r\n    y = y / d;\r\n}\r\n \r\nstring str(int i) {\r\n    return i < 0 ? \"\" : str((i / 26) - 1) + (char)(97 + i % 26);\r\n}\r\nconst int MX = 6e6 + 5; \r\n \r\n// ll fact[MX];\r\n// ll ifact[MX];//Inverse of factorial\r\n \r\n// ll bin_power(ll a,ll b,ll mod){\r\n//     ll res=1;\r\n//     while (b){\r\n//         if (b&1)\r\n//             res=(res*a)%mod;\r\n//         a=(a*a)%mod;\r\n//         b>>=1;\r\n//     }\r\n//     return res;\r\n// }\r\n// ll ncr(ll n,ll r){\r\n//     if(r>n)\r\n//         return 0;\r\n//     return (fact[n]*ifact[n-r]%mod)*ifact[r]%mod;\r\n// }\r\n/*\r\n    fact[0]=1;\r\n    ifact[0]=1;\r\n    rep(i,1,MX-1){\r\n        fact[i]=(i*fact[i-1])%mod;\r\n        ifact[i]=bin_power(fact[i],mod-2,mod); \r\n    }\r\n*/\r\nconst int MAX_SIZE = 2800001;\r\nvector<int>isprime(MAX_SIZE , true);\r\nvector<int> idx(MAX_SIZE);\r\nvector<int> prime;\r\nvector<int>SPF(MAX_SIZE);//SPF[i]=smallest prime factor of number i\r\n\r\nvoid manipulated_seive(int N) {\r\n    isprime[0] = isprime[1] = false ;\r\n    for (int i = 2; i < N ; i++) {\r\n        if (isprime[i]) {\r\n            prime.push_back(i);\r\n            SPF[i] = i;\r\n        }\r\n        for (int j = 0; j < (int)prime.size() && i * prime[j] < N && prime[j] <= SPF[i]; j++) {\r\n            isprime[i * prime[j]] = false;\r\n            SPF[i * prime[j]] = prime[j] ;\r\n        }\r\n    }\r\n    for (int i = 0; i < (int)prime.size(); i++) {\r\n        idx[prime[i]] = i + 1;\r\n    }\r\n}\r\n//With sieve\r\n// vector<int> primeFactors(int n) {\r\n//     vector<int> factors;\r\n//     while (n > 1) {\r\n//         factors.insert(SPF[n]);\r\n//         n /= SPF[n];\r\n//     }\r\n//     return factors;\r\n// }\r\n// //Without sieve\r\n// bool isprime_n(ll n){\r\n//   for(ll i=2;i*i<=n;i++){\r\n//     if(n%i==0)return false;\r\n//   }\r\n//   return true;\r\n// }\r\n// vector<int>divisors(1e6,0);\r\n\r\n// void precompute_divisors(){\r\n//     for(int i=1;i<=1e6;i++){\r\n//         for(int j=i;j<=1e6;j+=i){\r\n//             divisors[j]++;\r\n//         }\r\n//     }\r\n// }\r\n\r\n//  Try to do dry run on large no. of testcases (If not provided make some big tc)\r\n//  to observe the pattern.\r\n//  Edge cases : All elements 0, all -ve .........\r\n\r\n// // ********************Think mathematically**************************\r\n\r\n// class Pair{\r\n// public:\r\n//     int x,y,d;\r\n//     Pair(int x,int y,int d){\r\n//         this->x=x;\r\n//         this->y=y;\r\n//         this->d=d;\r\n//     }\r\n// };\r\nint d1[8][2]={{1,2},{2,1},{-1,2},{-2,1},{1,-2},{2,-1},{-1,-2},{-2,-1}};\r\n// int d[4][2]={{0,-1},{-1,0},{1,0},{0,1}};\r\n//count dearrangements\r\n// P * Q^-1 mod 998244353\r\nlong long fraction_modulo(long long p,long long q)\r\n{\r\n    long long mod = 998244353, expo;\r\n    expo = mod - 2;\r\n    while (expo) {\r\n        if (expo & 1) {\r\n            p = (p * q) % mod;\r\n        }\r\n        q = (q * q) % mod;\r\n        expo >>= 1;\r\n    }\r\n    return p;\r\n}\r\nll countDer(int n)\r\n{\r\n    ll der[n + 1] = {0};\r\n    der[1] = 0;\r\n    der[2] = 1;\r\n    for (int i = 3; i <= n; ++i)\r\n        der[i] = (i - 1) * (der[i - 1] +\r\n                            der[i - 2]);\r\n    return der[n];\r\n}\r\n// finding ncr of larger numbers upto 1000 iteratively\r\nll ncr1(int n , int r){\r\n    if(n<0 || r<0 || r>n) return 0;\r\n    if(r==0)return 1;\r\n    if(r==1)return n;\r\n    ll ans = 1 ; \r\n    ll k=1;\r\n    for(int i=n ; i>n-r ;i--){\r\n        ans *= i;\r\n        ans/=k;\r\n        k++;\r\n    }\r\n    return ans;\r\n}\r\n#define int long long\r\nlong long lcm(long long a,long long b){\r\n    return (a*b)/(__gcd(a,b));\r\n}\r\nvi find_factors(int x){\r\n    vi ans;\r\n    for(int i=2;i*i<=x;i++){\r\n        if(x%i==0){\r\n            ans.pb(i);\r\n            if(x/i!=i){\r\n                ans.pb(x/i);\r\n            }\r\n        }\r\n    }\r\n    return ans;\r\n}\r\nvoid solve(){\r\n\tint n;\r\n\tcin>>n;\r\n\tint req=n;\r\n\twhile(!isprime[req]){\r\n\t\treq++;\r\n\t}\r\n\treq-=n;\r\n\tif(req>n/2){\r\n\t\tsee(-1);\r\n\t\treturn;\r\n\t}\r\n\tvector<pair<int,int>>ans;\r\n\tfor(int i=0;i<n;i++){\r\n\t\tint x=i;\r\n\t\tint y=(i+1)%n;\r\n\t\tans.pb({x,y});\r\n\t}\r\n\tint k=0;\r\n\twhile(req--){\r\n\t\tans.pb({k,k+2});\r\n\t\tk++;\r\n\t}\r\n\tsee(ans.size());\r\n\tfor(int i=0;i<ans.size();i++){\r\n\t\tcout<<(ans[i].ft+1)<<\" \"<<(ans[i].se+1)<<\"\\n\";\r\n\t}\r\n}\r\nint32_t main()\r\n{\r\n   ios_base::sync_with_stdio(false);\r\n   cin.tie(NULL);   \r\n   int t=1;\r\n   // cin>>t;\r\n   int k=1;\r\n   manipulated_seive(2e3);\r\n   while(t--){\r\n   \t\tsolve();\r\n   }\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"
}