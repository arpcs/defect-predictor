{
    "id": 162394790,
    "contestId": 1178,
    "creationTimeSeconds": 1656648109,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "MiyukiKazuya"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<cstdio>\r\n\r\nbool is_prime(int x)\r\n{\r\n    if(n < 2)   return false;\r\n    for(int i = 2;i <= x / i;i ++)\r\n        if(x % i == 0)\r\n            return false;\r\n    return true;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    int m = n;\r\n    while(!is_prime(m)) m ++;\r\n    printf(\"%d\\n1 %d\\n\",m,n);\r\n    for(int i = 1;i < n;i ++)\r\n        printf(\"%d %d\\n\",i,i + 1);\r\n    for(int i = 1;i <= m - n;i ++)\r\n        printf(\"%d %d\\n\",i,i + n / 2);\r\n    return 0;\r\n}"
}