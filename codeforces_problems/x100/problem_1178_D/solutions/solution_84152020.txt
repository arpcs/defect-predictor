{
    "id": 84152020,
    "contestId": 1178,
    "creationTimeSeconds": 1592479361,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "shruti_smrn"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define db double\r\n#define pll pair<ll,ll>\r\n#define pb push_back\r\n#define fr first\r\n#define se second\r\n#define vpll vector<pair<ll,ll> >\r\n#define vll vector<ll>\r\n#define f(i,a,b) for(ll i=a;i<b;i++)\r\n#define rf(i,a,b) for(ll i=a-1;i>=b;i--)\r\n#define PI 3.14159265\r\n\r\n/* vector<vector<ll> > v(n, vector<ll> (m, 0))\r\n\r\nint power(int x, unsigned int y)\r\n{\r\n    if (y == 0)\r\n        return 1;\r\n    else if (y % 2 == 0)\r\n        return power(x, y / 2) * power(x, y / 2);\r\n    else\r\n        return x * power(x, y / 2) * power(x, y / 2);\r\n}\r\nvoid dfs(vector<vector<ll> >&ar,ll x,ll y)\r\n{\r\n    ar[x][y]=c;\r\n    c++;\r\n    for (ll i=0;i<4;i++)\r\n    {\r\n        if (x+a[i]<n && x+a[i]>=0 && y+b[i]<m && y+b[i]>=0)\r\n        {\r\n            if (ar[x+a[i]][y+b[i]]==0)\r\n                dfs(ar,x+a[i],y+b[i]);\r\n        }\r\n    }\r\n}\r\nint gcd(int a, int b)\r\n{\r\n    if (b == 0)\r\n        return a;\r\n    return gcd(b, a % b);\r\n}\r\nll findlcm(int arr[], int n)\r\n{\r\n    ll ans = arr[0];\r\n    for (int i = 1; i < n; i++)\r\n        ans = (((arr[i] * ans)) /\r\n                (gcd(arr[i], ans)));\r\n    return ans;\r\n}\r\nll binsearch(ll x,vector<ll> v)\r\n{\r\n    ll l=0,r=v.size()-1,mid,ans=0;\r\n    while (l<=r)\r\n    {\r\n        mid=(l+r)/2;\r\n        if (v[mid]<x)\r\n            l=mid+1,ans=mid;\r\n        else if (v[mid]>x)\r\n            r=mid-1;\r\n        else\r\n            return mid;\r\n    }\r\n    return ans;\r\n}\r\nll cubic_root(ll x){\r\n    ll l = 1 , r=1000001;\r\n    while(l<=r){\r\n        ll m = (l+r)/2;\r\n        if((m*m*m) == x)\r\n            return m;\r\n        else if(m*m*m > x)\r\n            r = m-1;\r\n        else\r\n            l = m + 1;\r\n    }\r\n    return -1;\r\n}\r\n*/\r\n// a^b = a+b-2*(a&b)\r\nconst int mod=1e9+7;\r\nconst int inf=INT_MAX;\r\nbool sortbyse(const pair<int,int> &a,\r\n              const pair<int,int> &b)\r\n{\r\n    return (a.second < b.second);\r\n}\r\nvll v;\r\nvoid fins(){\r\n    f(i,2,1100){\r\n    ll k=0;\r\n    f(j,2,sqrt(i)+1){\r\n        if (i%j==0) k=1;\r\n    }\r\n    if (k==0) v.pb(i);\r\n}\r\n}\r\n\r\nvoid solve(){\r\n    ll n; cin>>n;\r\n    auto x=lower_bound(v.begin(),v.end(),n)\r\n    if (*x==n){\r\n        cout<<n;\r\n        f(i,1,n) cout<<i<<\" \"<<i+1;\r\n        cout<<n<<\" 1\";\r\n    }\r\n    else {\r\n        cout<<*x;\r\n        ll m=*x-n;\r\n        f(i,1,n) cout<<i<<i+1;\r\n        cout<<n<<\" 1\";\r\n        ll j=2,l=n-1;\r\n        f(i,0,m){\r\n            cout<<j<<\" \"<<l;\r\n            j++;l--;\r\n        }\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n     ll q;\r\n    q=1;\r\n   //cin>>q;\r\n    while (q--)\r\n     {fins();\r\n     solve();cout<<endl;}\r\n\treturn 0;\r\n}\r\n\r\n"
}