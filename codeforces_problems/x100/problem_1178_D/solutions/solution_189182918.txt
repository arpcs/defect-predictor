{
    "id": 189182918,
    "contestId": 1178,
    "creationTimeSeconds": 1673682790,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "prac_345"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define ll long long int\r\n#define vl vector<ll>\r\n#define vi vector<int>\r\n#define vp vector<pair<int, int>>\r\n#define si set<int>\r\n#define sl set<ll>\r\n#define mpi map<int, int>\r\n#define mpl map<ll, ll>\r\n#define mpsi map<string, int>\r\n#define mpsl map<string, ll>\r\n#define mpci map<char, int>\r\n#define pi pair<int, int>\r\n#define pl pair<ll, ll>\r\n#define pb push_back\r\n#define pri priority_queue<int>\r\n#define prl priority_queue<ll>\r\n#define prs priority_queue<string>\r\n#define qi queue<int>\r\n#define ql queue<ll>\r\n#define qs queue<string>\r\n#define fi first\r\n#define se second\r\n\r\nll mod = 998244353;\r\n\r\nbool isprime(int k)\r\n{\r\n    int q = sqrt(k);\r\n    for (int i = 2; i <= q; i++)\r\n    {\r\n        if (k % i == 0)\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nvoid print(vi *adj, int m,int n)\r\n{\r\n    cout << m << endl;\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        for (int j = 0; j < adj[i].size(); j++)\r\n        {\r\n            cout << i << \" \" << adj[i][j] << endl;\r\n        }\r\n    }\r\n}\r\nvoid solve()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    vector<int> *adj;\r\n    adj = new vector<int>[n + 1];\r\n    for (int i = 1; i < n; i++)\r\n        adj[i].pb(i + 1);\r\n    adj[n].pb(1);\r\n    int m = n;\r\n    if (isprime(n))\r\n        print(adj,m,n);\r\n    \r\n    int cnt = 0;\r\n    int z = 1;\r\n    int p = n / 2;\r\n    while (isprime(m) == false && cnt < n/2 && z+p <= n)\r\n    {\r\n        adj[z].pb(z+p);\r\n        z++;\r\n        cnt++;\r\n        m++;\r\n    }\r\n    print(adj,m,n);\r\n}\r\nint main()\r\n{\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int t;\r\n    t = 1;\r\n    // cin >> t;\r\n    while (t--)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}