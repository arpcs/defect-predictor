{
    "id": 122648324,
    "contestId": 1178,
    "creationTimeSeconds": 1626418525,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "clams"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 3788800,
    "source": "// Problem: D. Prime Graph\r\n// Contest: Codeforces - Codeforces Global Round 4\r\n// URL: https://codeforces.com/problemset/problem/1178/D\r\n// Memory Limit: 256 MB\r\n// Time Limit: 1000 ms\r\n// \r\n// Powered by CP Editor (https://cpeditor.org)\r\n\r\n/*\r\n * Author: bubu2006\r\n**/\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nvector<pair<int,int>> ans;\r\n\r\nint main() {\r\n    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n    \r\n\tint n;\r\n\tcin >> n;\r\n\t\r\n\tvector<bool> is_prime(499500 + 50, 1);\r\n\tis_prime[0] = is_prime[1] = 0;\r\n\t\r\n\tfor(int i = 3; i * i <= 499500; i++) {\r\n\t\tif(is_prime[i]) {\r\n\t\t\tfor(int j = i * i; j <= 499500; j += i)\r\n\t\t\t\tis_prime[j] = 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// vector<int> primes;\r\n\t// for(int i = 3; i <= 499500; i += 2)\r\n\t\t// if(is_prime[i]) primes.push_back(i);\r\n\r\n\tfor(int i = 1; i < n; i++) ans.push_back({i,i+1});\r\n\tans.push_back({n,1});\r\n\t\r\n\tfor(int i = n; i <= n + n - 2; i++) {\r\n\t\tif((i & 1) && (is_prime[i])) {\r\n\t\t\tint diff = i - n;\r\n\t\t\tfor(int i = 1; diff > 0 && i <= n; i++, diff--) {\r\n\t\t\t\tif(i == n-2) ans.push_back({i, n});\r\n\t\t\t\telse ans.push_back({i, (i+2)%n});\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\tassert((int)ans.size() <= n * (n - 1) / 2);\r\n\t\r\n\tcout << ans.size() << '\\n';\r\n\tfor(auto i : ans) cout << i.first << ' ' << i.second << '\\n';\r\n\t\r\n}\r\n"
}