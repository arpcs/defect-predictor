{
    "id": 223346452,
    "contestId": 1178,
    "creationTimeSeconds": 1694694697,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "HVCYM"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main() {\r\n   ios_base::sync_with_stdio(false);\r\n   cin.tie(0);\r\n   \r\n   int n;\r\n   cin >> n;\r\n\r\n   auto isPrime = [&](int x) -> bool {\r\n      for(int i = 2; i * i <= x; i++) {\r\n         if(x % i == 0) {\r\n            return false;\r\n         }\r\n      }\r\n      return true;\r\n   };\r\n\r\n   int m = n;\r\n   while(!isPrime(m)) {\r\n      m++;\r\n   }\r\n\r\n   cout << m << '\\n';\r\n   for(int i = 1; i < n; i++) {\r\n      cout << i << ' ' << i + 1 << '\\n';\r\n   }\r\n\r\n   cout << 1 << ' ' << n << '\\n';\r\n   for(int i = 1; i <= m - n; i++) {\r\n      cout << i << ' ' << i + n / 2 << '\\n';\r\n   }\r\n\r\n   return 0;\r\n}"
}