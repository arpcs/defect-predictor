{
    "id": 88707551,
    "contestId": 1178,
    "creationTimeSeconds": 1596349486,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "Khuch_Nahi_Aata"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 3686400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n// -----------------<fast IO>------------------\r\n#define IOS             ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n#define FLSH             fflush(stdout)\r\n#define fileIO(name) \\\r\n    freopen(name\".in\", \"r\", stdin); \\\r\n    freopen(name\".out\", \"w\", stdout);\r\n#define PRECISION(x)     cout << fixed << setprecision(x);\r\n// -----------------<TypeDef Start>------------------\r\ntypedef long double ld;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\n// -----------------<Constants>------------------\r\nconst int MAXN = 1000005;\r\nconst int SQRTN = 1003;\r\nconst int LOGN = 22;\r\nconst double PI=acos(-1);\r\n\r\nconst int INF=1e9;\r\n\r\nint MOD = 1000000007;\r\nconst int FMOD = 998244353;\r\nconst double eps = 1e-9;\r\nll gcd(ll a,ll b)\r\n{\r\n    if(a==0)\r\n    return(b);\r\n    return(gcd(b%a,a));\r\n}\r\nll lcm(ll a,ll b)\r\n{\r\n    return(a/gcd(a,b)*b);\r\n}\r\n/*ll gcdExtended(ll a,ll b,ll *x,ll *y)\r\n{\r\n    if(a==0)\r\n    {\r\n        *x=0,*y=1;\r\n        return(b);\r\n    }\r\n    ll x1,y1;\r\n    ll gcd=gcdExtended(b%a,a,&x1,&y1);\r\n    *x=y1-(b/a)*x1;\r\n    *y=x1;\r\n    return(gcd);\r\n}*/\r\nll power(ll a,ll b,ll p)\r\n{\r\n    ll res=1;\r\n    a%=p;\r\n    while(b>0)\r\n    {\r\n        if(b&1)\r\n        res=res*a%p;\r\n        a=a*a%p;\r\n        b>>=1;\r\n    }\r\n    return(res);\r\n}\r\n/*ll modInverse(ll a, ll m)\r\n{\r\n    ll x,y;\r\n    ll g = gcdExtended(a, m,&x,&y);\r\n    return((x%m+m)%m);\r\n}*/\r\n/*long combi(int n,int k)\r\n{\r\n    long ans=1;\r\n    k=k>n-k?n-k:k;\r\n    int j=1;\r\n    for(;j<=k;j++,n--)\r\n    {\r\n        if(n%j==0)\r\n        {\r\n            ans*=n/j;\r\n        }else\r\n        if(ans%j==0)\r\n        {\r\n            ans=ans/j*n;\r\n        }else\r\n        {\r\n            ans=(ans*n)/j;\r\n        }\r\n    }\r\n    return ans;\r\n}*/\r\n/*struct cmp{\r\n    bool operator()(const pair<ll,ll>&a,const pair<ll,ll>&b)\r\n    const{\r\n        int lena=a.second-a.first+1;\r\n        int lenb=b.second-b.first+1;\r\n        if(lena==lenb) return a.first<b.first;\r\n        return lena>lenb;\r\n    }\r\n};*/\r\nbool isprime(ll n)\r\n{\r\n    for(ll i=2;i*i<=n;i++)\r\n    {\r\n        if(n%i==0)\r\n            return(false);\r\n    }\r\n    return(true);\r\n}\r\nvoid solve()\r\n{\r\n    ll n;\r\n    cin>>n;\r\n    if(n==3)\r\n    {\r\n        cout<<3<<endl;\r\n        cout<<1<<\" \"<<2<<endl;\r\n        cout<<1<<\" \"<<3<<endl;\r\n        cout<<2<<\" \"<<3<<endl;\r\n    }\r\n    else\r\n    {\r\n        ll cnt=0;\r\n        cnt=n;\r\n        if(!isprime(n))\r\n        {\r\n            while(!isprime(n))\r\n            {\r\n                n++;\r\n            }\r\n        }\r\n        cout<<n<<endl;\r\n        for(ll i=1;i<=cnt;i++)\r\n        {\r\n            //cout<<i<<\" \"<<(i+1)%cnt<<endl;\r\n            if(i!=cnt)\r\n                cout<<i<<\" \"<<i+1<<endl;\r\n            else\r\n                cout<<i<<\" \"<<1<<endl;\r\n        }\r\n        for(ll i=1;i<=(n-cnt);i++)\r\n            cout<<i<<\" \"<<i+(cnt/2)<<endl;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    IOS\r\n    ll t=1;\r\n    //cin>>t;\r\n    while(t--)\r\n    {\r\n        solve();\r\n    }\r\n    return(0);\r\n}\r\n"
}