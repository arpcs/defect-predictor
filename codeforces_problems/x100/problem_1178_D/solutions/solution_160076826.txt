{
    "id": 160076826,
    "contestId": 1178,
    "creationTimeSeconds": 1654865630,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "debosmita1919"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 1638400,
    "source": "// Joy maa\r\n//gl ms am meta fb\r\n// I'm trying........still trying....success is not that much easy....\r\n#include<bits/stdc++.h> \r\nusing namespace std;\r\n#define lli long long \r\n#define pb push_back\r\n#define pp pop_back\r\n#define f1(i,n) for(int i=0;i<n;i++)\r\n#define fr(i,n) for(int i=n-1;i>=0;i--)\r\n#define flli(i,n) for(lli i=0;i<n;i++)\r\n#define f2(i,x,n) for(int i=x;i<=n;i++)\r\n#define allv(v) v.begin(),v.end()\r\n#define vi vector<int>\r\n#define vb vector<bool>\r\n#define vlli vector<lli>\r\n#define vs vector<string>\r\n#define vpi vector<pair<int,int>> \r\n#define vplli vector<pair<lli,lli>>\r\n#define mapi map<int,int>\r\n#define maplli map<lli,lli>\r\n#define si set<int>\r\n#define pi pair<int,int>\r\n#define plli pair<lli,lli>\r\n#define sortv(v) sort(v.begin(),v.end())\r\n#define autom(i,mp) for(auto i:mp)\r\n#define F first\r\n#define S second\r\n#define input(a,n) for(int i=0;i<n;i++)cin>>a[i]\r\nconst lli mod= 1000000007;\r\n \r\n#include<ext/pb_ds/assoc_container.hpp>\r\nusing namespace __gnu_pbds;\r\ntypedef tree<pair<int,int>,null_type,less<pair<int,int>>,rb_tree_tag,tree_order_statistics_node_update> pbds1;\r\ntypedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> pbds;\r\n// order_of_key (k):for finding elements strictly less than k\r\n// find_by_order(k):find kth element of the set\r\n \r\n \r\nvlli primes;\r\nconst int INF = int(1e9);\r\nconst int  M=998244353;\r\n       \r\nlli power(lli n,lli k){\r\n    if(k==0)return 1;\r\n    if(k==1)return n;\r\n    lli ans;\r\n    ans=power(n,k/2);\r\n    ans=((ans%mod)*(ans%mod))%mod;\r\n    if(k%2==0)return ans;\r\n    return ((ans%mod)*(n%mod))%mod;\r\n}\r\nint no_dig(int n){\r\n    int cnt=0;\r\n    while(n>0){\r\n        cnt++;n/=10;\r\n    }\r\n    return cnt;\r\n}\r\nint binary_search(vector<int> v,int target,int l,int h){\r\n        if(l>h)return -1;\r\n        if(target>v[h]||target<v[l])return -1;\r\n        int low=l,high=h;\r\n        while(low<=high){\r\n            int mid=low+(high-low)/2;\r\n            if(v[mid]==target){return mid;}\r\n            if(v[mid]>target){high=mid-1;}\r\n            else{low=mid+1;}\r\n        }\r\n        return -1;\r\n}\r\nbool is_prime(lli n){\r\n    if(n<=1)return false;\r\n    if(n<=3)return true;\r\n    if(n%2==0 || n%3==0)return false;\r\n    for(lli i=5;i*i<=n;i+=6){\r\n        if(n%i==0 || n%(i+2)==0)return false;\r\n    }\r\n    return true;\r\n}\r\nvoid sieve(){\r\n    lli m=100005;\r\n    primes.clear();\r\n    vector<bool> v(m+1,true);\r\n    for(lli i=2;i*i<=m;i++){\r\n        if(v[i]){\r\n            for(lli j=i*i;j<=m;j+=i){v[j]=false;}\r\n        }\r\n    }\r\n    for(lli i=2;i<=m;i++){\r\n        if(v[i])primes.push_back(i);\r\n    }\r\n}\r\nvlli fact(200015,1);\r\n \r\nvoid factorial(){\r\n    fact[0]=1;\r\n    for(int i=1;i<=20;i++){fact[i]=((fact[i-1])*1LL*(i))%mod;}\r\n}\r\n \r\nint median(int a,int b,int c,int d){\r\n    int v[4];\r\n    v[0]=a,v[1]=b,v[2]=c,v[3]=d;\r\n    sort(v,v+4);\r\n    return (v[1]+v[2])/2;\r\n}\r\nlli gcd(lli a,lli b){\r\n    if(a==0)return b;\r\n    if(b==0)return a;\r\n    while(a>0 && b>0){\r\n        lli tempa=a,tempb=b;\r\n        a=tempb,b=tempa%tempb;\r\n    }\r\n    if(a==0)return b;\r\n    else return a;\r\n}\r\nbool is_palindrome(string s){\r\n    if(s.size()<=1)return true;\r\n    int n=s.size();\r\n    int i=0,j=n-1;\r\n    while(i<=j){\r\n        if(s[i]!=s[j])return false;\r\n        i++;j--;\r\n    }\r\n    return true;\r\n}\r\nlli ncr(lli n,lli r){\r\n    if(n<r)return 0;\r\n    if(r>n-r)r=n-r;\r\n    lli c[r+1];\r\n    memset(c,0,sizeof(c));\r\n    c[0]=1;\r\n    for(lli i=1;i<=n;i++){\r\n        for(lli j=min(i,r);j>0;j--){\r\n            c[j]=(c[j]+c[j-1]);\r\n        }\r\n    }\r\n    return c[r];\r\n} \r\nint dig_sum(lli n){\r\n    int ans=0;\r\n    while(n>0){\r\n        ans+=n%10;n/=10;\r\n    }\r\n    return ans;\r\n}\r\nlli inv(lli n){\r\n    return (power(n,mod-2)%mod+mod)%mod;\r\n}\r\n \r\n \r\n// CODE FOR SEGMENT TREE\r\n// \r\n// int a[100005],seg[4*100005];\r\n// void build(int ind,int low,int hi){\r\n//     if(low==hi){seg[ind]=a[low];return;}\r\n//     int mid=(low+hi)/2;\r\n//     build(2*ind+1,low,mid);\r\n//     build(2*ind+2,mid+1,hi);\r\n//     seg[ind]=max(seg[2*ind+1],seg[2*ind+2]);\r\n// }\r\n// int query(int ind,int low,int hi,int l,int r){\r\n//     if(low>=l && hi<=r){return seg[ind];}\r\n//     if(low>r || hi<l)return INT_MIN;\r\n//     int mid=(low+hi)/2;\r\n//     int left=query(2*ind+1,low,mid,l,r);\r\n//     int right=query(2*ind+2,mid+1,hi,l,r);\r\n//     return max(left,right);\r\n// }\r\n\r\nint main(){\r\n    // Joy maa\r\n    cin.tie(0);\r\n    ios_base::sync_with_stdio(false);\r\n    int t; \r\n    cin>>t;\r\n    while(t--){\r\n        int n;\r\n        cin>>n;\r\n        string s;\r\n        cin>>s;\r\n        vlli p(n),vis(n,0);\r\n        f1(i,n)cin>>p[i],p[i]--;\r\n        lli ans=1;\r\n        f1(i,n){\r\n            if(vis[i])continue;\r\n            int j=i;\r\n            string temp=\"\";\r\n            while(vis[j]==0){\r\n                temp+=s[j];\r\n                vis[j]=1;\r\n                j=p[j];\r\n            }\r\n            lli ind=temp.size();\r\n            // cout<<ind<<\"\\n\";\r\n            for(int k=0;k<temp.size();k++){\r\n                if(temp==temp.substr(k+1)+temp.substr(0,k+1)){ind=k;break;}\r\n            }\r\n            ind++;\r\n            ans=(ans*ind)/__gcd(ans,ind);\r\n        }\r\n        cout<<ans<<\"\\n\";\r\n    }\r\n    return 0;\r\n}  \r\n"
}