{
    "id": 117818384,
    "contestId": 1178,
    "creationTimeSeconds": 1622327938,
    "relativeTimeSeconds": 4558,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "Satwik_Tiwari"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1622323380
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/*    Author - Satwik_Tiwari  */\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define sim template < class c\r\n#define ris return * this\r\n#define dor > debug & operator <<\r\n#define eni(x) sim > typename \\\r\n  enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\r\nsim > struct rge { c b, e; };\r\nsim > rge<c> range(c i, c j) { return rge<c>{i, j}; }\r\nsim > auto dud(c* x) -> decltype(cerr << *x, 0);\r\nsim > char dud(...);\r\nstruct debug {\r\n#ifndef ONLINE_JUDGE\r\n    ~debug() { cerr << endl; }\r\n    eni(!=) cerr << boolalpha << i; ris; }\r\n    eni(==) ris << range(begin(i), end(i)); }\r\n    sim, class b dor(pair < b, c > d) {\r\n        ris << \"(\" << d.first << \", \" << d.second << \")\";\r\n    }\r\n    sim dor(rge<c> d) {\r\n        *this << \"[\";\r\n        for (auto it = d.b; it != d.e; ++it)\r\n            *this << \", \" + 2 * (it == d.b) << *it;\r\n        ris << \"]\";\r\n    }\r\n#else\r\n    sim dor(const c&) { ris; }\r\n#endif\r\n};\r\n#define print(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\r\n\r\n#define int long long\r\n#define FastIO ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)\r\n#define ff first\r\n#define ss second\r\n#define all(x) (x).begin(),(x).end()\r\n#define minheap priority_queue <ll, vector<ll>, greater<>>\r\n#define endl \"\\n\"\r\n#define google cout << \"Case #\" << casee << \": \" ;\r\n\r\nint power(int x, int y, int M) {int res = 1; while (y > 0) {if (y & 1) res = (res * x) % M; y >>= 1; x = (x * x) % M;} return res % M;}\r\nint power(int x, int y) {int res = 1; while (y > 0) {if (y & 1) res = (res * x); y >>= 1; x = (x * x);} return res;}\r\nconst int mxn = 1e6 + 6, mod = 998244353, inf = 1e18 ; int t,casee = 1;\r\n\r\nconst int N = 1010;\r\nint spf[N + 1];\r\nvector<int> pr;\r\nvoid precompute(){\r\n    for (int i = 2; i <= N; ++i){\r\n        if (spf[i] == 0){\r\n            spf[i] = i;\r\n            pr.push_back(i);\r\n        }\r\n        for (int j = 0; j < (int)pr.size() && pr[j] <= spf[i] && i * pr[j] <= N; ++j)\r\n            spf[i * pr[j]] = pr[j];\r\n    }\r\n}\r\n\r\nvector<int> getprimes(int x){\r\n    vector<int> temp;\r\n    while(x != 1){\r\n        temp.push_back(spf[x]);\r\n        x/=spf[x];\r\n    }\r\n    return temp;\r\n}\r\n\r\nvoid test_case() {\r\n    precompute();\r\n    set<int> primes;\r\n    for(int i=0;i<pr.size();i++) primes.insert(pr[i]);\r\n\r\n    int n; cin >> n;\r\n    vector<pair<int,int>> ans;\r\n    for(int i=1;i<n;i++){\r\n        ans.push_back({i,i+1});\r\n    }\r\n    ans.push_back({1,n});\r\n\r\n    // now everyone has degree 2.\r\n    int m = n;\r\n    deque<int> temp;\r\n    for(int i=1;i<=n;i++) temp.push_back(i);\r\n\r\n    while(primes.find(m) == primes.end() and temp.size() > 1){\r\n        int u = temp.back(); temp.pop_back();\r\n        int v = temp.back(); temp.pop_back();\r\n        ans.push_back({u,v});\r\n        m++;\r\n    }\r\n\r\n    assert(primes.find(m) != primes.end());\r\n\r\n    map<int,int> cnt;\r\n    for(int i=0;i<ans.size();i++){\r\n        cnt[ans[i].ff]++; cnt[ans[i].ss]++;\r\n    }\r\n\r\n    for(auto i: cnt){\r\n        assert(primes.find(i.ss) != primes.end());\r\n    }\r\n\r\n    cout << ans.size() << endl;\r\n    for(int i=0;i<ans.size();i++){\r\n        cout << ans[i].ff << \" \" << ans[i].ss << endl;\r\n    }\r\n\r\n}\r\n\r\nint32_t main() {\r\n    FastIO;\r\n    t = 1;\r\n//    cin >> t;\r\n    while (t--) {\r\n        test_case();\r\n        casee++;\r\n    }\r\n    return 0;\r\n}\r\n\r\n"
}