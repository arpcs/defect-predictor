{
    "id": 84068746,
    "contestId": 1178,
    "creationTimeSeconds": 1592394836,
    "relativeTimeSeconds": 1556,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "bhagatsunny96"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1592393280
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 24576000,
    "source": "/* Author:bhagatsunny96\r\n         JGEC\r\n\t   template*/\r\n#include <bits/stdc++.h>\r\n#define mp make_pair\r\n#define pb push_back\r\n#define ll long long int \r\n#define ld long double\r\n#define fi first\r\n#define se second\r\n#define mod 1000000007\r\n#define test long long int t; cin>>t; while(t-->0)\r\n#define fIO ios_base::sync_with_stdio(false); cin.tie(NULL);\r\n#define loop(n) for(long long int i=0;i<n;i++)\r\n#define loopr(n) for(long long int i=n-1;i>=0;i--)\r\n#define lrp(a,b) for(long long int i=a;i<=b;i++)\r\n#define lrn(a,b) for(long long int i=b;i>=a;i--)\r\n#define endl '\\n'\r\n#define ivec vector<ll>\r\n#define ivecp vector<pair<ll,ll>>\r\n#define imap map<ll,ll>\r\n#define uimap unordered_map<ll,ll>\r\n#define iset set<ll>\r\n#define cvec vector<char>\r\n#define civecp vector<pair<char,ll>>\r\n#define cimap map<char,ll>\r\n#define ucimap unordered_map<char,ll>\r\n#define cset set<char>\r\n#define rr return 0\r\nusing namespace std;\r\n//Declaration\r\nconst ll N=5e5+5;\r\nvector<ll>adj[N];\r\nbool visited[N]={false};\r\nll parent[N];\r\nll rnk[N];\r\nll degree[N];\r\nvector<ll>ax;\r\n\r\n\r\n\r\n//Function call\r\nbool isPrime(ll n);\r\nbool ispalin(ll num);\r\nll lcm(ll a, ll b); \r\nll power(ll x,ll y);\r\nll sumofdigits(ll n);\r\nbool sortinrev(const pair<ll,ll>&a,const pair<ll,ll>&b);\r\nbool sortbysec(const pair<string,ll> &a, const pair<string,ll> &b);\r\nvoid make(ll a);\r\nll find(ll a);\r\nvoid Union(ll a,ll b);\r\nbool isSubSequence(string& str1, string& str2, ll m, ll n);\r\nvoid luck(ll n);\r\nbool isSubstring(string s1, string s2);\r\nll setBitNumber(ll n);\r\nvector<ll>lucky;\r\n\r\n\r\n//solve\r\nvoid solve()\r\n{\r\n    ll n;\r\n    cin>>n;\r\n    if(n<3)\r\n    cout<<-1<<endl;\r\n    else if(n==3)\r\n    {\r\n        cout<<3<<endl;\r\n        cout<<1<<\" \"<<2<<endl;\r\n        cout<<2<<\" \"<<3<<endl;\r\n        cout<<3<<\" \"<<1<<endl;\r\n    }\r\n    else if(n>=4)\r\n    {\r\n        ll edge=n;\r\n        while(isPrime(edge)==false)\r\n        {\r\n            edge++;\r\n        }\r\n        cout<<edge<<endl;\r\n        ll q=abs(n-edge);\r\n        for(ll i=1;i<n;i++)\r\n        {\r\n            cout<<i<<\" \"<<i+1<<endl;\r\n        }\r\n        for(ll i=1;i<=q;i++)\r\n        {\r\n            cout<<i<<\" \"<<i+(n/2)<<endl;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//--------------------------------------------------------------------------------------------------//\r\n//Functions\r\nll setBitNumber(ll n) \r\n{ \r\n    if (n == 0) \r\n        return 0; \r\n  \r\n    ll msb = 0; \r\n    while (n != 0) { \r\n        n = n / 2; \r\n        msb++; \r\n    } \r\n  \r\n    return (1LL << msb); \r\n}\r\nbool isSubstring(string s1, string s2) \r\n{ \r\n    ll M = s1.length(); \r\n    ll N = s2.length(); \r\n  \r\n    /* A loop to slide pat[] one by one */\r\n    for (ll i = 0; i <= N - M; i++) { \r\n        ll j; \r\n  \r\n        /* For current index i, check for pattern match */\r\n        for (j = 0; j < M; j++) \r\n            if (s2[i + j] != s1[j]) \r\n                break; \r\n  \r\n        if (j == M) \r\n            return true; \r\n    } \r\n  \r\n    return false; \r\n}\r\nvoid luck(ll n)\r\n{\r\n    lucky.pb(n);\r\n    if(n>1e9)\r\n    return;\r\n    luck(n*10+4);\r\n    luck(n*10+7);\r\n}\r\nbool isSubSequence(string& str1, string& str2, ll m, ll n) \r\n{ \r\n    if (m == 0) return true; \r\n    if (n == 0) return false; \r\n  \r\n    if (str1[m-1] == str2[n-1]) \r\n        return isSubSequence(str1, str2, m-1, n-1); \r\n    return isSubSequence(str1, str2, m, n-1); \r\n}\r\nll lcm(ll a, ll b)  \r\n{  \r\n    return (a*b)/__gcd(a, b);  \r\n}\r\nll power(ll x, ll y) \r\n{ \r\n    ll temp; \r\n    if( y == 0) \r\n        return 1; \r\n    temp = power(x, y/2); \r\n    if (y%2 == 0) \r\n        return temp*temp; \r\n    else\r\n        return x*temp*temp; \r\n}\r\nbool isPrime(ll n) \r\n{ \r\n    // Corner case \r\n    if (n <= 1) \r\n        return false; \r\n  \r\n    // Check from 2 to n-1 \r\n    for (int i = 2; i < n; i++) \r\n        if (n % i == 0) \r\n            return false; \r\n  \r\n    return true; \r\n}\r\nbool isPalin(ll num)\r\n{\r\n    bool flag=false;\r\n    ll digit,rev=0,n=num;\r\n    do\r\n     {\r\n         digit = num % 10;\r\n         rev = (rev * 10) + digit;\r\n         num = num / 10;\r\n     } while (num != 0);\r\n     if(rev==n)\r\n     flag=true;\r\n     return flag;\r\n}\r\nll sumofdigits(ll n)\r\n{\r\n    ll c=0;\r\n    while(n>0)\r\n    {\r\n        c+=(n%10);\r\n        n/=10;\r\n    }\r\n    return c;\r\n}\r\nbool sortinrev(const pair<ll,ll>&a,const pair<ll,ll>&b) \r\n{ \r\n    return (a.first > b.first); \r\n}\r\nbool sortbysec(const pair<string,ll> &a, const pair<string,ll> &b) \r\n{ \r\n    return (a.second < b.second); \r\n}\r\n//DSU//\r\nvoid make(ll a)\r\n{\r\n    parent[a]=a;\r\n    rnk[a]=1;\r\n}\r\nll find(ll a)\r\n{\r\n    if(parent[a]==a)\r\n    return a;\r\n    return parent[a]=find(parent[a]);\r\n}\r\nvoid Union(ll a,ll b)\r\n{\r\n    a=find(a);\r\n    b=find(b);\r\n    if(a==b)\r\n    return;\r\n    if(rnk[a]>rnk[b])\r\n    {\r\n        parent[b]=a;\r\n        rnk[a]+=rnk[b];\r\n    }\r\n    else\r\n    {\r\n        parent[a]=b;\r\n        rnk[b]+=rnk[a];\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n//Driver Code\r\nint main() \r\n{\r\n    fIO\r\n    solve();\r\n\trr;\r\n}\r\n"
}