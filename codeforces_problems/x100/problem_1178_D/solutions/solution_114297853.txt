{
    "id": 114297853,
    "contestId": 1178,
    "creationTimeSeconds": 1619454163,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "Shohan2000"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n\r\n\r\n//defines...\r\n#define ll           long long\r\n#define boost        ios_base::sync_with_stdio(false);cin.tie(NULL);\r\n#define pb           push_back\r\n#define mp           make_pair\r\n#define in           insert\r\n#define pi           2*acos(0.0)\r\n#define srt(s)       sort(s.begin(),s.end())\r\n#define rsrt(s)      sort(s.rbegin(),s.rend())\r\n#define all(x)       x.begin(),x.end()\r\n#define mem(a, b)    memset(a, b, sizeof(a))\r\n#define c_test       printf(\"Case %lld: \",t)\r\n\r\nconst ll mod=1e9+7;\r\nconst ll MX=2e5+5;\r\n\r\n\r\ninline void norm(ll &a) {a%=mod; (a<0) && (a+=mod) ;}                            //positive mod value\r\ninline ll modAdd(ll a,ll b) {a%=mod, b%=mod; norm(a),norm(b); return (a+b)%mod;} //modular addition\r\ninline ll modSub(ll a,ll b) {a%=mod, b%=mod; norm(a),norm(b); return (a-b)%mod;} //modular subtraction\r\ninline ll modMul(ll a,ll b) {a%=mod, b%=mod; norm(a),norm(b); return (a*b)%mod;} //modular multiplication\r\n\r\ninline ll bigMod(ll b,ll p)  {ll r=1; while(p) {if(p & 1LL) r=modMul(r,b) ;b=modMul(b,b) ; p>>=1LL ; } return r; }\r\ninline ll modInverse(ll a) {return bigMod(a,mod-2); }\r\ninline ll modDiv(ll a ,ll b) { return modMul(a,modInverse(b)) ;}\r\n\r\n\r\ntypedef tree<ll,null_type,less<ll>,rb_tree_tag,tree_order_statistics_node_update>ordered_set;\r\n\r\nint dRow[] = { -1, 0, 1, 0 };\r\nint dCol[] = { 0, 1, 0, -1 };\r\n\r\n//code goes from here...\r\n\r\nbool is_prime(ll x)\r\n{\r\n    for(int i=2;i*i<=x;i++)\r\n    {\r\n        if(x%i==0) return false;\r\n    \r\n    }\r\n    return true;\r\n}\r\n\r\nint main()\r\n{\r\n//#ifndef ONLINE_JUDGE\r\n    //freopen(\"input.txt\", \"r\", stdin);\r\n    \r\n    //freopen(\"output.txt\", \"w\", stdout);\r\n//#endif\r\n\r\n    boost\r\n    //---------------------------------\r\n    int n;\r\n    cin >> n;\r\n    \r\n    ll x;\r\n    \r\n    for(int i=n;i<=2*n;i++)\r\n    {\r\n        if(is_prime(i))\r\n        {\r\n            x=i;\r\n            break;\r\n        }\r\n    }\r\n\r\n    cout << x << endl;\r\n\r\n    for(int i=1;i<n;i++) cout << i << ' ' << i+1 << endl;\r\n    cout << n << ' ' << 1 << endl;\r\n    x-=n;\r\n    for(int i=1;i<x;i++) cout << i << ' ' << i+2 << endl;\r\n    if(x==n-1) cout << x << ' ' << 1 << endl;\r\n    else cout << x << ' ' << x+2 << endl;\r\n    \r\n    //---------------------------------\r\n    \r\n    return 0;\r\n}\r\n"
}