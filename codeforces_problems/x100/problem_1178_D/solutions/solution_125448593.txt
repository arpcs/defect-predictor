{
    "id": 125448593,
    "contestId": 1178,
    "creationTimeSeconds": 1628576728,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "NotANoob"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 3993600,
    "source": "#include<bits/stdc++.h>\r\n#define int long long\r\nusing namespace std;\r\n\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x) cerr << #x << \": \"; _print(x); cerr << endl;\r\n#define debug_array(x, n) cerr << #x << \": \"; _print(x, n); cerr << endl;\r\n#else\r\n#define debug(x)\r\n#define debug_array(x, n)\r\n#endif\r\n\r\nvoid _print(bool t) {cerr << t;}\r\nvoid _print(int t) {cerr << t;}\r\nvoid _print(string t) {cerr << t;}\r\nvoid _print(char t) {cerr << t;}\r\nvoid _print(double t) {cerr << t;}\r\n\r\ntemplate <class T> void _print(vector <T> v) {cerr << \"[  \"; for (T i : v) {_print(i); cerr << \"  \";} cerr << \"]\\n\";}\r\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.first); cerr << \", \"; _print(p.second); cerr << \"}\";}\r\ntemplate <class T> void _print(set <T> v) {cerr << \"[  \"; for (T i : v) {_print(i); cerr << \"  \";} cerr << \"]\\n\";}\r\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[  \"; for (T i : v) {_print(i); cerr << \"  \";} cerr << \"]\\n\";}\r\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[  \"; for (auto i : v) {_print(i); cerr << \"  \";} cerr << \"]\\n\";}\r\ntemplate <class T> void _print(T v[], int n) {cerr << \"[  \"; for (int i = 0; i < n; i++) {_print(v[i]); cerr << \"  \";} cerr << \"]\\n\";}\r\n\r\n\r\nconst int MAX = 1e4;\r\nvector<int> lp(MAX+1);\r\nvector<int> pr;\r\n\r\nvoid sieve(){\r\n\r\n    for (int i=2; i<=MAX; ++i) {\r\n        if (lp[i] == 0) {\r\n            lp[i] = i;\r\n            pr.push_back (i);\r\n        }\r\n        for (int j=0; j<(int)pr.size() && pr[j]<=lp[i] && i*pr[j]<=MAX; ++j)\r\n            lp[i * pr[j]] = pr[j];\r\n    }  \r\n}\r\n\r\nvoid run(){\r\n\r\n    int n;\r\n    cin >> n;\r\n\r\n    int p = *lower_bound(pr.begin(), pr.end(), n);\r\n\r\n    set<pair<int,int>> edges;\r\n\r\n    for(int i = 2; i <= n; i++){\r\n        edges.insert({i-1, i});\r\n    }\r\n    edges.insert({1, n});\r\n\r\n    int extra = p - n;\r\n\r\n    for(int i = 1; i <= n / 2 && extra > 0; i++, extra--) edges.insert({i, i + n/2});\r\n\r\n    cout << edges.size() << '\\n';\r\n    for(auto p : edges) cout << p.first << ' ' << p.second << '\\n';\r\n\r\n}\r\n\r\nint32_t main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0), cout.tie();\r\n\r\n    sieve();\r\n    int t;\r\n    // cin >> t;\r\n    t = 1;\r\n\r\n    while(t--){\r\n        run();\r\n    }\r\n\r\n}\r\n\r\n/*\r\n\r\n\r\n13 \r\n\r\n(f+x)\r\n\r\n\r\n13 - 6 = 7  8 \r\n*/\r\n\r\n\r\n"
}