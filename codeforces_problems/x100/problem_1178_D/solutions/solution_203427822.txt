{
    "id": 203427822,
    "contestId": 1178,
    "creationTimeSeconds": 1682422940,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "linguini_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 3993600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\n#define Linguini ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n#define re   \t\t\treturn\r\n#define el endl\r\ntypedef vector<int> vi;\r\ntypedef vector<vi> vvi;\r\n#define pb\tpush_back\r\nconst int N = 2e3+5 ;\r\nint prime[N];\r\nvector<int> primes;\r\nvoid sieve() {\r\n    for (int i = 2; i < N; ++i) prime[i] = 1;\r\n    for (int i = 2; i < N; ++i) if (prime[i]) for (int j = 2 * i; j < N; j += i) prime[j] = 0;\r\n    for (int i = 0; i < N; ++i) if (prime[i]) primes.push_back(i);\r\n}\r\nint adj[N/2][N/2];\r\nvoid solve () {\r\nint n ; cin>>n ;\r\nvector<pair<int,int>> edges;\r\nvi deg(n+1) ;\r\nint cnt = n ;\r\n    for (int i = 1; i < n; ++i) edges.emplace_back(i,i+1),deg[i]=2,adj[i][i+1]++;\r\n    edges.emplace_back(1 , n) ; deg[n] = 2;  \r\n    adj[1][n]++;\r\n    while (!prime[cnt] && cnt<= n *(n-1)/2){\r\n        for (int i = 1; i <= n&& !prime[cnt]; ++i) {\r\n            if(deg[i]>2) continue;\r\n            for (int j = i+1; j <= n && !prime[cnt]; ++j) {\r\n                if(deg[j]>2 || adj[i][j]) continue;\r\n                deg[i]++ ; deg[j]++;  cnt++; edges.emplace_back(i,j);\r\n                adj[i][j]++;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    if(cnt > n*(n-1)/2) re void(cout<<-1<<el) ;\r\n    for (int i = 1; i <= n; ++i) {\r\n        cout<<deg[i]<<' ';\r\n    }\r\n    cout<<(int)edges.size()<<el;\r\n    for(auto & p:edges)cout<<p.first<<\" \"<<p.second<<el;\r\n}\r\nint main()\r\n{\r\n    Linguini\r\n    sieve();\r\n    int tt=  1;\r\n    for (int i = 1; i <=tt; ++i) solve();\r\n    return  0;\r\n}"
}