{
    "id": 205504734,
    "contestId": 1178,
    "creationTimeSeconds": 1683873107,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "gladiator2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// --------------------<optimizations>--------------------\r\n#pragma GCC optimize(\"O3\")\r\n//(UNCOMMENT WHEN HAVING LOTS OF RECURSIONS)\\\r\n#pragma comment(linker, \"/stack:200000000\")\r\n//(UNCOMMENT WHEN TRYING TO BRUTEFORCE WITH A LOT OF LOOPS)\\\r\n#pragma GCC optimize(\"unroll-loops\")\r\n\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC target(\"avx,avx2,fma\")\r\n#pragma GCC optimization (\"unroll-loops\")\r\n\r\n#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define int long long\r\n#define ll long long\r\n#define mp make_pair\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define pii pair<ll,ll>\r\n#define vpii vector<pair<ll,ll> >\r\n#define F first\r\n#define S second\r\n#define ld long double\r\n#define built __builtin_popcountll\r\n#define mst(a,i) memset(a,i,sizeof(a))\r\n#define all(x) x.begin(),x.end()\r\n#define itit(it,a) for(auto it=(a).begin(); it!=(a).end(); it++)\r\n#define rep(i,a,b) for(ll i=a; i<b; i++)\r\n#define repr(i,a,b) for(ll i=a; i>b; i--)\r\n#define reprr(i,a,b) for(ll i=a; i>=b; i--)\r\n#define pi 3.14159265358979323846264338327950288419716939937510582097494459230\r\nll max3(ll x,ll y,ll z) {return max(max(x,y),z);}\r\nll min3(ll x,ll y,ll z) {return min(min(x,y),z);}\r\nconst ll N=1e5+10,M=2e5+10,M2=1e6+10,mod=1e9+7,inf=1e17+10;\r\nconst int INF=1e9+7;\r\nvoid add(int& a, int b) {a+=b;if(a>=mod){a-=mod;}}\r\n\r\n#define trace(...) cerr<<\"Line:\"<<__LINE__<<\" \"; __f(#__VA_ARGS__, __VA_ARGS__)\r\ntemplate<typename Arg1>\r\nvoid __f(const char *name, Arg1 &&arg1) {\r\n    cerr<<name<<\" : \"<<arg1<<endl;\r\n}\r\ntemplate<typename Arg1, typename ... Args>\r\nvoid __f(const char *names, Arg1 &&arg1, Args &&... args) {\r\n    const char *comma=strchr(names+1,',');\r\n    cerr.write(names,comma-names)<<\" : \"<<arg1<<\" | \";\r\n    __f(comma+1,args...);\r\n}\r\n\r\nint X[] = {0, 1, 0, -1};\r\nint Y[] = {-1, 0, 1, 0};\r\n//assic value of ('0'-'9') is(48 - 57) and (a-z) is (97-122) and (A-Z) is(65-90) and 32 for space\r\nll power(ll x,ll n){ll result=1;while(n>0){if(n%2==1)result=(result*x)%mod; x=((x%mod)*(x%mod))%mod;n=n/2;}return result;}\r\n\r\nvector<bool> isPrime(1002,true);\r\nvoid sieve() {\r\n    isPrime[0] = false;\r\n    isPrime[1] = false;\r\n    for(int i=2; i*i<=1001; i++) {\r\n        if(isPrime[i]){\r\n            for(int j=i*i; j<=1001; j+=i) {\r\n                isPrime[j] = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nint32_t main()\r\n{\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    int n;\r\n    cin >> n;\r\n    sieve();\r\n    int minEdges = n;\r\n    for(int i=n; i<=1001; i++){\r\n        if(isPrime[i]){\r\n            minEdges = i;\r\n            break;\r\n        }\r\n    }\r\n    cout << minEdges << \"\\n\";\r\n    vector<pair<int,int>> ans;\r\n    for(int i=1; i<=n; i++){\r\n        if(i<n) ans.push_back({i,i+1});\r\n        else ans.push_back({i,1});\r\n        minEdges--;\r\n    }\r\n    while(minEdges){\r\n        for(int i=1; i<=n; i++) {\r\n            for(int j=i+2; j<=n; j++) {\r\n                if(i==1 && j==n) continue;\r\n                ans.push_back({i,j});\r\n                minEdges--;\r\n                if(minEdges == 0) break;\r\n            }\r\n            if(minEdges == 0) break;\r\n        }\r\n    }\r\n    cout << ans.size() << \"\\n\";\r\n    for(auto u: ans) cout << u.first << \" \" << u.second << \"\\n\";\r\n    return 0;\r\n}\r\n"
}