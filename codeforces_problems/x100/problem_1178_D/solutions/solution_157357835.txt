{
    "id": 157357835,
    "contestId": 1178,
    "creationTimeSeconds": 1652674478,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 9113600,
    "source": "//BISMILAHIRAHMANIR RAHIM\n//Author : Md. Mehrab Hossain\n\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define int               long long int\n#define endl              \"\\n\"\n\nconst int mx = 1e6;\nvector<pair<int,int>>pr;\n\nint vs[mx];\n\nvoid seive(){\n\tfor( int i = 2; i<= mx; i++){\n\t\tif(vs[i]==0){\n\t\t\tfor( int j = i+i; j<= mx; j+=i){\n\t\t\t\tvs[j] = 1;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nsigned main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);cout.tie(0);\n\n    seive();\n\n    int n;\n    cin >> n;\n\n    int nextPr = 0;\n\n    for( int i = n; i<= n + (n-1);i++){\n    \tif(vs[i]==0){\n    \t\tnextPr = i;\n    \t\tbreak;\n    \t}\n    }\n   // cout << nextPr <<endl;\n\n    for( int i = 1; i+1 <= n; i++){\n    \tpr.push_back({i,i+1});\n    }\n\n    pr.push_back({1,n});\n\n    int rem = nextPr - n;\n\n    //cout << rem <<endl;\n    int i = 3;\n\n    while(rem--){\n    \tpr.push_back({1,i});\n    \ti++;\n\n    }\n\n    //cout << pr.size() <<endl;\n\n    for(auto x : pr){\n    \tcout << x.first <<\" \"<<x.second <<endl;\n    }\n\n\n   \n    \n\n\n    \n    \n}\n///ALHAMDULILLAH//\n\n\t  \t\t \t\t \t\t\t  \t  \t  \t\t   \t \t"
}