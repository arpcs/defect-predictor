{
    "id": 98413553,
    "contestId": 1178,
    "creationTimeSeconds": 1605418014,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "KickAss"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "/* Author : Mohd Athar */\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define MAX 2500\r\nint primes[MAX] = {0};\r\nvoid primesieve(){\r\n    for(int i = 2 ; i*i<MAX ; i++){\r\n        if(primes[i] == 1)\r\n            continue;\r\n\r\n        for(int j = 2*i ; j<MAX ; j+=i){\r\n                primes[j] = 1;\r\n        }\r\n    }\r\n}\r\nint main(){\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n\r\n    int n;\r\n    cin>>n;\r\n\r\n    primesieve();\r\n\r\n    map<int,vector<int>>adj;\r\n    for(int i = 1 ; i<=n ; i++){\r\n        adj[i].push_back(i+1);\r\n        // adj[i+1].push_back(i);\r\n    }\r\n\r\n    int x = MAX + 1;\r\n    for(int i = n; i<=MAX; i++){\r\n        if(primes[i] == 0){\r\n            x = i - n;\r\n            break;\r\n        }\r\n    }\r\n\r\n    if(x > n){\r\n        cout<<\"-1\";\r\n        return 0;\r\n    }\r\n\r\n    int cnt = x;\r\n    for(int i = 1; i<=n ; i++){\r\n        adj[i].push_back(i+2);\r\n        x--;\r\n        if(x == 0){\r\n            break;\r\n        }\r\n    }\r\n\r\n    cout<<adj.size() + cnt<<\"\\n\";\r\n    for(auto temp : adj){\r\n        for(auto run : temp.second){\r\n            cout<<temp.first<<\" \"<<run<<\"\\n\";\r\n        }\r\n    }\r\n\r\n\r\n    return 0;\r\n}"
}