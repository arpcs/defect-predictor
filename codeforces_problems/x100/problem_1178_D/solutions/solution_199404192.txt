{
    "id": 199404192,
    "contestId": 1178,
    "creationTimeSeconds": 1679919186,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "bkifhr10"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<iostream>\nusing namespace std;\n\nint z[1000];\nbool v[3000];\n\nint main()\n{\n\tios::sync_with_stdio(0);\n\tint n, i, j, k=0, ans;\n\tfor(i=2;i<=3000;i++)\n\t{\n\t\tif (v[i] == 0)\n\t\t{\n\t\t\tz[k++] = i;\n\t\t\tfor (j = 2; i * j <= 3000; j++)\n\t\t\t\tv[i * j] = 1;\n\t\t}\n\t}\n\tcout.tie(0);\n\tcin >> n;\n\tans = *lower_bound(z, z + k, n);\n\tcout << ans << '\\n';\n\tfor (i = 1; i < n; i++)cout << i << ' ' << i + 1 << '\\n';\n\tcout << 1 << ' ' << n << ' '<<'\\n';\n\tans -= n;\n\tfor (i = 1; i <= n - 2&&ans > 0; i+=4)\n\t{\n\t\tif (ans == 0)break;\n\t\tcout << i << ' ' << i + 2 << '\\n';\n\t\tans--;\n\t\tif (ans == 0)break;\n\t\tcout << i + 1 << ' ' << i + 3 << '\\n';\n\t\tans--;\n\t}\n\treturn 0;\n}\n\t\t\t\t \t\t \t\t    \t    \t \t \t\t   \t\t\t"
}