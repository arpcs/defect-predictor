{
    "id": 101823908,
    "contestId": 1178,
    "creationTimeSeconds": 1608446933,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "Idvzchuscvol"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 5017600,
    "source": "#include <cstdio>\r\n#include <cstring>\r\n#include <algorithm>\r\n#include <queue>\r\n#include <iostream>\r\n#include <map>\r\n#include <vector>\r\n\r\nusing std :: vector;\r\nusing std :: priority_queue;\r\nusing std :: swap;\r\nusing std :: cin;\r\nusing std :: map;\r\nusing std :: cout;\r\nusing std :: make_pair;\r\nusing std :: queue;\r\nusing std :: endl;\r\nusing std :: pair;\r\n\r\ntemplate <typename Tp>Tp Max(const Tp &a, const Tp &b) {return a > b ? a : b;}\r\ntemplate <typename Tp>Tp Min(const Tp &a, const Tp &b) {return a < b ? a : b;}\r\ntemplate <typename Tp>Tp Abs(const Tp &a) {return a > 0 ? a : -a;}\r\n\r\ntemplate <typename Tp>void Read(Tp &x) {\r\n    Tp in = 0, f = 1; char ch = getchar();\r\n    while(ch < '0' || ch > '9') {if(ch == '-') f = -1; ch = getchar();}\r\n    while(ch >= '0' && ch <= '9') {in = in * 10 + ch - '0'; ch = getchar();}\r\n    x = in * f;\r\n}\r\n\r\ntypedef long long LL;\r\n\r\nconst int SN = 1000000 + 10;\r\n\r\nbool vis[SN];\r\n\r\nint prime[SN];\r\n\r\nvoid pre() {\r\n    int limits = SN - 10;\r\n    \r\n    vis[1] = 1;\r\n    \r\n    for(int i = 2; i <= limits; i++) {\r\n        if(!vis[i]) prime[++prime[0]] = i;\r\n        for(int j = 1; j <= prime[0] && prime[j] * i <= limits; j++) {\r\n            vis[i * prime[j]] = 1;\r\n            if(i % prime[j] == 0) break;\r\n        }\r\n    }\r\n}\r\n\r\nint main() {\r\n    \r\n    pre();\r\n    \r\n    int n;\r\n    \r\n    Read(n);\r\n    \r\n    int m = std :: lower_bound(prime + 1, prime + prime[0] + 1, n) - prime;\r\n    m = prime[m];\r\n    \r\n    printf(\"%d\\n\", m);\r\n    \r\n    for (int i = 1; i < n; i++) printf(\"%d %d\\n\", i, i + 1);\r\n    \r\n    printf(\"%d %d\\n\", 1, n);\r\n    \r\n    for (int i = 1; i <= m - n; i++) printf(\"%d %d\\n\", i, i + n / 2);\r\n    \r\n    return 0;\r\n}"
}