{
    "id": 204289629,
    "contestId": 1178,
    "creationTimeSeconds": 1683054978,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "_Source"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define Source ios_base::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL);\r\n#define ll long long\r\n#define int long long\r\n#define ld long double\r\n#define Endl '\\n'\r\n//#define t int t;cin>>t;while(t--)\r\n#define all(x) x.begin(),x.end()\r\n#define allr(x) x.rbegin(),x.rend()\r\n#define sz(a) (int)(a).size()\r\nusing namespace std;\r\nconst int N = 1005;\r\nconst ll mod = 1e9 + 7;\r\nconst double pi = 3.14159265358979323846;\r\nint dx[] = {+0, +0, +1, -1, -1, +1, -1, +1};\r\nint dy[] = {+1, -1, +0, +0, +1, -1, -1, +1};\r\nint prime[N];\r\n\r\nvoid Sieve() {\r\n    for (int i = 0; i < N; ++i) {\r\n        prime[i] = 1;\r\n    }\r\n    for (int i = 2; i < N; ++i) {\r\n        if (prime[i]) {\r\n            for (int j = 2 * i; j < N; j += i) {\r\n                prime[j] = 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvoid testCase(int cs) {\r\n    int n;\r\n    cin >> n;\r\n    vector<pair<int,int>>vp;\r\n    for (int i = 1; i <= n; ++i) {\r\n        if(i == n)\r\n            vp.push_back({i, 1});\r\n        else\r\n            vp.push_back({i, i + 1});;\r\n    }\r\n    int tot = n; // (deg * n) / 2\r\n    for (int i = 1; i <= n / 2; ++i) {\r\n        if(prime[tot])\r\n        {\r\n            break;\r\n        }\r\n        vp.push_back({i, i + n / 2});\r\n        tot++\r\n    }\r\n    cout << sz(vp) << endl;\r\n    for (int i = 0; i < sz(vp); ++i) {\r\n        cout << vp[i].first <<\" \" << vp[i].second << endl;\r\n    }\r\n}\r\n\r\nsigned main() {\r\n    // files();\r\n    Source\r\n    Sieve();\r\n    ll t = 1;\r\n    int cs = 0;\r\n//    cin >> t;\r\n    while (t--) {\r\n        testCase(++cs);\r\n    }\r\n    return 0;\r\n}"
}