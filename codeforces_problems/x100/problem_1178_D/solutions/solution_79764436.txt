{
    "id": 79764436,
    "contestId": 1178,
    "creationTimeSeconds": 1589213493,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "Theparasitic"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "PyPy 3",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 23040000,
    "source": "import math\r\nn=int(input())\r\ndef isprime(x):\r\n    if x<2:\r\n        return False\r\n    for i in range(2,int(math.sqrt(x))+1):\r\n        if x%i==0:\r\n            return False\r\n    return True\r\nm=n\r\n\r\n\r\nedges=[(i,i+1) for i in range(1,n)]+[(n,1)]\r\ni=1\r\nwhile not isprime(m):\r\n    m+=1\r\n    edges.append((i,i+n//2))\r\n    i+=1\r\n    \r\nprint(len(edges))\r\nfor i in edges:\r\n    print(*i)\r\n"
}