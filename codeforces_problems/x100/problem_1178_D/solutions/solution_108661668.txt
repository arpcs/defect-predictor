{
    "id": 108661668,
    "contestId": 1178,
    "creationTimeSeconds": 1614511296,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "HimanshuG"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 102400,
    "source": "#include<bits/stdc++.h>\r\n#include<algorithm>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\nconst double pi=3.141592653589;\r\nlong long int mod = 1000000007;\r\nlong long int mod2 = 1000000009;\r\nconst long long int inf = 1e9;\r\nconst long long int inff = 9000000000000000000;\r\nlong double eps = 1e-9;\r\nconst long long int maxn=1000000+3;\r\n#define pry  cout<<\"YES\\n\"\r\n#define prn  cout<<\"NO\\n\"\r\n#define prm cout<<\"-1\\n\"\r\n#define nl cout<<\"\\n\"\r\n#define loop(i,a,b) for(ll i=a;i<b;i+=1)\r\n#define rloop(i,a,b) for(ll i=a;i>=b;i-=1)\r\n#define ll long long int\r\n#define ld long double\r\n#define pb push_back\r\n#define pf push_front\r\n#define ft first\r\n#define sd second\r\n#define pii pair<int,int>\r\n#define pll pair<long long int, long long int>\r\n#define vit(a) vector<ll>:: iterator a\r\n#define sit(a) set<ll>:: iterator a\r\n#define msit(a) multiset<ll>:: iterator a\r\n#define vitp(a) vector<pll>:: iterator a\r\n#define sitp(a) set<pll>:: iterator a\r\n#define msitp(a) multiset<pll>:: iterator a\r\n#define mysort(a) sort(a.begin(),a.end())\r\n#define myreverse(a) reverse(a.begin(),a.end())\r\n#define mylb(a,val) lower_bound(a.begin(),a.end(),val)\r\n#define myub(a,val) upper_bound(a.begin(),a.end(),val)\r\n#define mem(a,vall) memset(a, vall, sizeof(a))\r\n#define ordered_set tree< pll, null_type,less< pll >, rb_tree_tag,tree_order_statistics_node_update>\r\n\r\nld power(ll x, ll y, ll p)\r\n{\r\n    ll res = 1;\r\n\r\n    x = x % p;\r\n    while (y > 0)\r\n    {\r\n        if (y & 1)\r\n            res = (res*x) % p;\r\n        y = y>>1;\r\n        x = (x*x) % p;\r\n    }\r\n    return res;\r\n}\r\n\r\nll modInverse(ll n, ll p)\r\n{\r\n    return power(n, p-2, p);\r\n}\r\n\r\n/*ll fac[maxn];\r\nll invfac[maxn];\r\nll ncr(ll n, ll r, ll p)\r\n{\r\n    if(r>n) return 0;\r\n\r\n    if (r==0) return 1;\r\n\r\n    return (fac[n]* modInverse(fac[r], p) % p *\r\n            modInverse(fac[n-r], p) % p) % p;\r\n}*/\r\n\r\n/*ll log(ll a,ll b)\r\n{\r\n    if(a==1)\r\n        return b;\r\n    ll ans = 0;\r\n    while(b)\r\n    {\r\n        ans++;\r\n        b/=a;\r\n    }\r\n    return ans-1;\r\n}*/\r\n\r\nint is_prime[2001];\r\nvoid sieve()\r\n{\r\n    for(ll i=2; i<=2000; i++)\r\n    {\r\n        if(is_prime[i])\r\n        {\r\n            for(ll j=i*i; j<=2000; j+=i)\r\n            {\r\n                if(is_prime[j]==1)\r\n                {\r\n                    is_prime[j]=0;\r\n                    //smallestfactor[j]=i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/*ll lp[maxn]; // Caution :  set lp first as : lp[i] = i;\r\nvector<ll> pr;\r\nvoid sieve2()\r\n{\r\n    loop(i,2,1)\r\n    {\r\n        if(lp[i]==i){pr.pb(i);}\r\n\r\n        for(ll j=0; j<(int)pr.size() && i*pr[j]<=1-1 && pr[j]<=lp[i]; j++)\r\n        {\r\n            lp[i*pr[j]]=pr[j];\r\n        }\r\n    }\r\n}*/\r\n\r\n\r\n\r\n\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);cout.tie(0);\r\n    int test=1;\r\n    //freopen(\"dull.in\", \"r\", stdin);       // file open for input\r\n    //freopen(\"output.txt\", \"w\", stdout);   // file open for output\r\n    //cin>>test;                              // comment this when number of testcases = 1\r\n\r\n    while(test--)\r\n    {\r\n        ll n;\r\n        cin>>n;\r\n        is_prime[0]=is_prime[1]=0;\r\n        loop(i,2,2001){is_prime[i]=1;}\r\n        sieve();\r\n\r\n        vector<pll> v;\r\n        loop(i,1,n){v.pb({i,i+1});}\r\n        v.pb({n,1});\r\n        ll edges=n,cur=1;\r\n\r\n        while(!is_prime[edges])\r\n        {\r\n            v.pb({cur,cur+n/2});\r\n            cur++;\r\n            edges++;\r\n        }\r\n        cout<<v.size();\r\n        nl;\r\n        for(pll u : v) cout<<u.ft<<\" \"<<u.sd<<endl;\r\n    }\r\n\r\n   return 0;\r\n}\r\n"
}