{
    "id": 71912715,
    "contestId": 1178,
    "creationTimeSeconds": 1582719584,
    "relativeTimeSeconds": 1484,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "ltf0501"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1582718100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nconst int kN = 1e3 + 10;\nint pr[10000];\nint main() {\n\tfor(int i = 2; i < 10000; i++) {\n\t\tint j;\n\t\tfor(j = 2; j * j <= i; j++) if(i % j == 0) break;\n\t\tif(j * j > i) pr[i] = 1;\n\t}\n\tint n;\n\tscanf(\"%d\", &n);\n\tvector<pair<int, int>> ans;\n\tfor(int i = 0; i < n; i++) ans.emplace_back(i, (i + 1) % n);\n\tint now = n;\n\tint l = 0, r = n / 2;\n\twhile(!pr[now]) {\n\t\tans.emplace_back(l++, r++);\n\t\tnow++;\n\t}\n\tprintf(\"%d\\n\", int(ans.size()));\n\tfor(auto p : ans) printf(\"%d %d\\n\", p.first + 1, p.second + 1);\n\treturn 0;\n}\n"
}