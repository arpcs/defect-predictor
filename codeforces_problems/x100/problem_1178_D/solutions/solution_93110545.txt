{
    "id": 93110545,
    "contestId": 1178,
    "creationTimeSeconds": 1600427212,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1228800,
    "source": "/*****************************************************************\\\nIN THE NAME OF ALLAH, MOST GRACIOUS AND MOST MERCIFUL\n|                                                                 |\n|     Author     : Mahabub Rahman                                 |\n|     Email      : [email\u00a0protected]                     |\n|     University : Comilla University, Bangladesh                 |\n|                  Department of Computer Science & Engineering   |\n\\*****************************************************************/\n\n\n/*...................................Data_Types............................................*/\n#include<bits/stdc++.h>\n\nusing namespace std;\n#define FastIO ios::sync_with_stdio(false); cin.tie(0);cout.tie(0)\n#define       ll                  long long int\n#define       ull                  unsigned long long int\n#define       veci                 vector<int>\n#define       vecc                 vector<char>\n#define       vecs                 vector<string>\n#define       vecl                 vector<long long int>\n#define       vecp                 vector<  pair<int,int> >\n#define       mapstrint            map< string , int >\n#define       mapstrstr            map< string , string >\n#define       mapint               map< int, int >\n#define       pb                   push_back\n#define       newline cerr << endl\n#define       pob                  pop_back\n#define       mp                   make_pair\n#define       pii                  pair<int, int>\n#define       F                    first\n#define       S                    second\n#define       sc(x)                scanf(\"%d\",&x)\n#define       sc2(xx,zz)           scanf(\"%d %d\",&xx,&zz)\n#define       scl(x)               scanf(\"%lld\",&x)\n#define       scl2(xx,zz)          scanf(\"%lld %lld\",&xx,&zz)\n#define       pf                   printf\n#define       min3(a,b,c)          min(a,b<c?b:c)\n#define       max3(a,b,c)          max(a,b>c?b:c)\n#define       all(v)               v.begin(), v.end()\n///=============== Debugging ============================///\n#define       debug(x) cerr << #x << \" = \" << x << endl\n#define       debug2(x, y)             cerr << #x << \": \" << x << \" | \" << #y << \": \" << y << endl;\n#define       debug3(x, y, z)          cerr << #x << \": \" << x << \" | \" << #y << \": \" << y << \" | \" << #z << \": \" << z << endl;\n#define       debug4(a, b, c, d)       cerr << #a << \": \" << a << \" | \" << #b << \": \" << b << \" | \" << #c << \": \" << c << \" | \" << #d << \": \" << d << endl;\n//#define f(x) (64 - __builtin_clzll(x))\n///============ CONSTANT ===============///\n#define mx9   1000000007\n#define mx7   10000007\n#define mx6   2000006\n#define mx5   100005\n#define inf   1<<30                                           //infinity value\n#define eps   1e-9\n#define mod   mx9\n///==============================TEMPLATES===============================///\n\nlong double PI = acosl(-1);\nbool compare_int(int a, int b){return (a>b);} //This function is use for descending order.\nbool compare_string (string a, string b){return a.size()<b.size();}\nbool compare_pair(const pair<int,int> &a,\n                    const pair<int,int> &b){if(a.second==b.second)return a.first<b.first; else return (a.second > b.second);}\nbool cmp(pair<string ,int > x , pair<string ,int > y){return (x.S < y.S);}\n///=====================Graph Moves================///\n//const int fx[]= {+1,-1,+0,+0};\n//const int fy[]= {+0,+0,+1,-1};\n//const int fx[]={+0,+0,+1,-1,-1,+1,-1,+1};   // Kings Move\n//const int fy[]={-1,+1,+0,+0,+1,+1,-1,-1};  // Kings Move\n//const int fx[]={-2, -2, -1, -1,  1,  1,  2,  2};  // Knights Move\n//const int fy[]={-1,  1, -2,  2, -2,  2, -1,  1}; // Knights Move\n\n///=====================Bitmask===================///\n//int Set(int N,int pos){return N=N | (1<<pos);}\n//int reset(int N,int pos){return N= N & ~(1<<pos);}\n//bool check(int N,int pos){return (bool)(N & (1<<pos));}\n\n///========================================FUNCTION=========================================///\n//bool check(int n){if(n==1) return false; for(int i=2; i*i<=n; i++){if(n%i==0) return false;} return true;}\n//ll bigmod(ll a, ll b, ll m){if(b==0) return 1%m;ll x=bigmod(a, b/2, m);x=(x*x)%m;if(b%2==1)x=(x*a)%m;return x;}\nbool flag[mx5];veci prime;\nvoid sieve(){prime.pb(2);for(ll i=3; i*i<=mx5; i+=2){if(flag[i]) continue;for(ll j=i*i; j<=mx5; j+=i+i) flag[j]=true;}for(ll i=3; i<=mx5; i+=2) if(!flag[i]) prime.pb(i);}\n//ll fact(ll n){if(n==0 or n==1)return 1; else return n*fact(n-1);}\nvoid NA(){printf(\"NO\\n\");exit(0);}\nvoid YA(){printf(\"YES\\n\");exit(0);}\n\n///=================START_FROM_HERE=====================///\n\nint32_t main()\n{\n    ///Don't see test case until get 7/8 times wrong submission..!!\n    ///Try to make Corner, Even, Odd or Prime case..!!\n    FastIO;\n    sieve();\n    int n;\n    cin >> n;\n    /*for(int i=3; i<=n; i+=2)\n    {\n        if(!flag[i]) cout << i << endl;\n    }*/\n    if(!flag[n] and n%2)\n    {\n        cout << n << endl;\n        for(int i=1; i<=n; i++)\n        {\n            if(i==n) cout << n << ' ' << 1 << endl;\n            else cout << i << ' ' << i+1 << endl;\n        }\n        exit(0);\n    }\n    int tot = n+n/2;\n    int x = upper_bound(prime.begin(), prime.end(), n)-prime.begin();\n\n    if(prime[x]>tot) cout << -1 << endl;\n    else\n    {\n        int rem = prime[x]-n;\n        cout << prime[x] << endl;\n        for(int i=1; i<=n; i++)\n        {\n            if(i==n) cout << n << ' ' << 1 << endl;\n            else\n            {\n                cout << i << ' ' << i+1 << endl;\n            }\n        }\n        for(int i=1; i<=rem; i++) cout << i << ' ' << i+n/2 << endl;\n    }\n\n\n}\n///Created:\n\n \t\t  \t \t \t\t\t\t\t\t   \t \t\t  \t\t\t  \t\t"
}