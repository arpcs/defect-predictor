{
    "id": 82904689,
    "contestId": 1178,
    "creationTimeSeconds": 1591589703,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "juancarlovieri"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "// This template belongs to Juan Carlo Vieri\n\n/*   ____   __\n    /  _/  |  |    __         __\n __|  |__  |  |   /_/        |  |\n|__    __| |  |   __    ____ |  | __   ___   _  ___\n   |  |    |  |  |  |  /  _/ |  |/ /  / _ \\ | |/ _/\n   |  |    |  |  |  | |  |_  |     \\ |  __/ |   /\n   |__|    |__|  |__|  \\___\\ |__|\\__\\ \\___\\ |__|\n*/\n\n#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef int_fast64_t ll;\ntypedef long double ld;\ntypedef int_fast32_t intt;\ntypedef int_fast32_t tmp_m;\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"unroll-loops\")\n#define deb(x) cout << #x << ' ' << x << endl\n#define rep(i, cmp1, cmp2) for (tmp_m i = cmp1; i < cmp2; ++i)\n#define repp(i, cmp1, cmp2) for (tmp_m i = cmp1; i >= cmp2; --i)\n#define pb push_back\n#define st stack\n#define pa pair\n#define vc vector\n#define qu queue\n#define pq priority_queue\n#define fr first\n#define sc second\n#define mp map\nconst ld pi = acos(-1.0);\nconst intt mod = 1e9 + 7;\n\nstruct pr {\n  intt x;\n  intt y;\n  intt dst;\n  pr() {}\n  pr(intt x, intt y, intt dst) : x(x), y(y), dst(dst) {}\n  inline bool operator<(const pr& cmp2) const {\n    if (dst != cmp2.dst) return dst < cmp2.dst;\n    if (x != cmp2.x) return x < cmp2.x;\n    return y < cmp2.y;\n  }\n  inline bool operator==(const pr& cmp2) const {\n    return (cmp2.dst == dst) && (cmp2.x == x) && (cmp2.y == y);\n  }\n  inline bool operator>(const pr& cmp2) const {\n    if (dst != cmp2.dst) return dst > cmp2.dst;\n    if (x != cmp2.x) return x > cmp2.x;\n    return y > cmp2.y;\n  }\n};\n\nstruct point {\n  intt x;\n  intt y;\n  point() {}\n  point(intt x, intt y) : x(x), y(y) {}\n  inline bool operator<(const point& cmp2) const {\n    if (cmp2.x != x) return cmp2.x < x;\n    return cmp2.y < y;\n  }\n  inline bool operator==(const point& cmp2) const {\n    return (cmp2.x == x) && (cmp2.y == y);\n  }\n  inline bool operator>(const point& cmp2) const {\n    if (cmp2.x != x) return cmp2.x > x;\n    return cmp2.y > y;\n  }\n};\n\nclass prHash {\n public:\n  size_t operator()(const pr& cmp1) const {\n    return (hash<intt>()(cmp1.x)) ^ (hash<intt>()(cmp1.y)) ^\n           (hash<intt>()(cmp1.dst));\n  }\n};\n\nclass pointHash {\n public:\n  size_t operator()(const point& cmp1) const {\n    return (hash<intt>()(cmp1.x)) ^ (hash<intt>()(cmp1.y));\n  }\n};\n\ninline bool spoint(const point& cmp1, const point& cmp2) {\n  // swap(cmp1, cmp2);\n  if (cmp1.x != cmp2.x) return cmp1.x < cmp2.x;\n  return cmp1.y < cmp2.y;\n}\n\ninline bool spr(const pr& cmp1, const pr& cmp2) {\n  // swap(cmp1, cmp2);\n  if (cmp1.dst != cmp2.dst) return cmp1.dst < cmp2.dst;\n  if (cmp1.x != cmp2.x) return cmp1.x < cmp2.x;\n  return cmp1.y < cmp2.y;\n}\n\nvoid sub() {\n  \n}\n\nintt flag[1005];\n\nvoid solve() {\n  // intt t; cin >> t;\n  // while (t--) sub();\n  intt n;\n  cin >> n;\n  if(n == 3){\n    cout << \"3\\n1 2\\n2 3\\n3 1\\n\";\n    return;\n  }\n  intt target;\n  for(intt i = 3;;i += 2){\n    if(flag[i] == 0){\n      if(i > n){\n        target = i;\n        break;\n      }\n      for(intt j = i; j <= 2 * n; j += i){\n        flag[j] = 1;\n      }\n    }\n  }\n  cout << target << endl;\n  rep(i, 0, n - 1){\n    cout << i + 1 << ' ' << i + 2 << endl;\n  }\n  cout << n << ' ' << 1 << endl;\n  rep(i, 0, target - n){\n    cout << i + 1 << ' ' << i + n / 2 + 1 << endl;\n  }\n}\n\nvoid init() {\n  // remove if interactive\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  srand(time(0));\n  // memset(dp, -1, sizeof dp);\n}\n\nint main() {\n  init();\n  solve();\n  return 0;\n}\n"
}