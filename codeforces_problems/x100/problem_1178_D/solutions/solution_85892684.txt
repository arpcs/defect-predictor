{
    "id": 85892684,
    "contestId": 1178,
    "creationTimeSeconds": 1593834383,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "1412neerujjain"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <math.h>\r\nusing namespace std;\r\nbool nt(int m)\r\n{\r\n    for (int i=2; i<=round(sqrt(m)); i++)\r\n        if (!(m % i)) return 0;\r\n    return 1;\r\n}\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    int m = n;\r\n    while (!nt(m)) m++;\r\n    cout << m << endl;\r\n    for (int i=1; i<n; i++) cout << i << ' ' << i+1 << endl;\r\n    cout << n << ' ' << 1 << endl;\r\n    for (int i=1; i<=m-n; i++) cout << i << ' ' << i + n / 2 << endl;\r\n}\r\n"
}