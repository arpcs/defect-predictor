{
    "id": 153604794,
    "contestId": 1178,
    "creationTimeSeconds": 1649909051,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "hurricanex"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 25,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 614400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n\r\nsigned main(){\r\n    cin.tie(0) -> ios_base::sync_with_stdio(0);\r\n\r\n    vector<bool> prime(3100, 1);\r\n    prime[1] = 0;\r\n    for(int i = 2; i <= 3100; i++)\r\n    {\r\n        for(int j = i * i; j <= 3100; j += i)\r\n        {\r\n            prime[j] = 0;\r\n        }\r\n    }\r\n\r\n    int n;\r\n    cin >> n;\r\n\r\n    vector<pair<int,int>> ans;\r\n    vector<int> deg(n + 1);\r\n    vector<vector<bool>> used(n + 1, vector<bool>(n + 1));\r\n    int i = 1;\r\n    for(; i <= n - 2; i += 3)\r\n    {\r\n        ans.push_back({i, i + 1});\r\n        used[i][i + 1] = 1;\r\n        ans.push_back({i + 1, i + 2});\r\n        used[i + 1][i + 2] = 1; \r\n        ans.push_back({i + 2, i});\r\n        used[i + 2][i] = 1;\r\n        deg[i] += 2, deg[i + 1] += 2, deg[i + 2] += 2;\r\n\r\n    }\r\n    if(n % 3 == 1)\r\n    {\r\n        ans.push_back({n, 2});\r\n        ans.push_back({n, 3});\r\n        deg[n] += 2, deg[2]++, deg[3]++;\r\n        used[n][2] = 1;\r\n        used[n][3] = 1;\r\n    }\r\n    if(n % 3 == 2)\r\n    {\r\n        ans.push_back({n - 1, 2});\r\n        ans.push_back({n - 1, 3});\r\n        ans.push_back({n, 1});\r\n        ans.push_back({n, n - 1});\r\n        used[n - 1][2] = used[n - 1][3] = used[n][1] = used[n][n - 1] = 1;\r\n        deg[n] += 2, deg[n - 1] += 3, deg[2]++, deg[3]++, deg[1]++;\r\n    }\r\n\r\n    for(int i = 0; !prime[ans.size()]; i++)\r\n    {\r\n        int a = -1, b = -1;\r\n        for(int j = 1; j <= n; j++)\r\n        {\r\n            if(deg[j] == 2)\r\n            {\r\n                a = j;\r\n                break;\r\n            }\r\n        }\r\n        assert(a != -1);\r\n        for(int j = 1; j <= n; j++)\r\n        {\r\n            if(used[j][a] || used[a][j] || j == a) continue;\r\n            if(deg[j] == 2)\r\n            {\r\n                b = j;\r\n                break;\r\n            }\r\n        }\r\n        assert(b != -1);\r\n        used[a][b] = 1;\r\n        deg[a]++, deg[b]++;\r\n        ans.push_back({a, b});\r\n    }\r\n\r\n    assert(prime[ans.size()]);\r\n\r\n    cout << ans.size() << '\\n';\r\n    for(auto &[u, v] : ans) cout << u << \" \" << v << '\\n';\r\n\r\n}\r\n    "
}