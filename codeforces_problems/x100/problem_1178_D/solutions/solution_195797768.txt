{
    "id": 195797768,
    "contestId": 1178,
    "creationTimeSeconds": 1677842615,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "sunhengtei"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 1024000,
    "source": "#include <bits/stdc++.h>\r\n#define int long long\r\n#define fi first\r\n#define se second\r\n#define pdd pair<double, double>\r\n#define pii pair<int,int>\r\n#define endl '\\n'\r\nconst int INF = 1e9+10;\r\nconst int MOD = 1e9+7;\r\nusing namespace std;\r\n\r\nbool prima[1000005];\r\n\r\nvoid precompute_prima(){\r\n  for(int i=1;i<=100000;i++){\r\n    prima[i] = 1;\r\n  }\r\n  prima[1] = 0;\r\n  for(int i=2;i<=100000;i++){\r\n    if(prima[i]){\r\n      for(int j=i*i;j<=100000;j+=i){\r\n        prima[j] = 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// -----------------------------------------------------------------------------------------------\r\nvector<pair<pii,int> > luar;\r\nvector<pair<pii,int> > dala;\r\nvector<pii> ans;\r\nbool tmp[1005];\r\n\r\nsigned main(){\r\n  ios_base::sync_with_stdio(0);\r\n  cin.tie(0);cout.tie(0);\r\n  //  freopen(\"input.txt\", \"r\", stdin);\r\n  //  freopen(\"output.txt\", \"w\", stdout);\r\n\r\n  precompute_prima();\r\n  int n;cin >> n;\r\n  if(n == 3){\r\n    cout << 1 << \" \" << 2 << endl;\r\n    cout << 2 << \" \" << 3 << endl;\r\n    cout << 1 << \" \" << 3 << endl;\r\n    return 0;\r\n  }\r\n  int bupus = 0;\r\n  int budal = 0;\r\n  int tot = 2*(n-1);\r\n  int dal = (n-1);\r\n  int now = dal;\r\n  while(!prima[now]){\r\n    now--;\r\n    budal++;\r\n  }\r\n  if(n%2 == 0){\r\n    now--;\r\n    budal++;\r\n    while(!prima[now]){\r\n      now--;\r\n      budal++;\r\n    }\r\n  }\r\n  bupus = budal;\r\n  now = tot-budal;\r\n  while(!prima[now]){\r\n    now--;\r\n    bupus++;\r\n  }\r\n  int bular = bupus-budal;\r\n//  cout << bupus << \" \" << budal << \" \" << bular << endl;\r\n  for(int i=2;i<=n;i++){\r\n    if(i == n){\r\n      luar.push_back({{n,2},1});\r\n      continue;\r\n    }\r\n    luar.push_back({{i,i+1},1});\r\n  }\r\n  for(int i=2;i<=n;i++){\r\n    dala.push_back({{1,i},1});\r\n  }\r\n  now = 0;\r\n  for(int i=1;i<=bular;i++){\r\n    luar[now].se = 0;\r\n    tmp[luar[now].fi.fi] = true;\r\n    tmp[luar[now].fi.se] = true;\r\n    now += 2;\r\n  }\r\n  int hmm = 2;\r\n  while(hmm <= n && budal > 0){\r\n    while(tmp[hmm]){\r\n      hmm++;\r\n    }\r\n//    cout << budal << \" \" << hmm << endl;\r\n    dala[hmm-2].se = 0;\r\n    hmm++;\r\n    budal--;\r\n  }\r\n  for(int i=0;i<luar.size();i++){\r\n    if(luar[i].se) ans.push_back({luar[i].fi.fi,luar[i].fi.se});\r\n  }\r\n  for(int i=0;i<dala.size();i++){\r\n    if(dala[i].se) ans.push_back({dala[i].fi.fi,dala[i].fi.se});\r\n  }\r\n  cout << ans.size() << endl;\r\n  for(int i=0;i<ans.size();i++){\r\n    cout << ans[i].fi << \" \" << ans[i].se << endl;\r\n  }\r\n}\r\n\r\n"
}