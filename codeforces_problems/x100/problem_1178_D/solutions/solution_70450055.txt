{
    "id": 70450055,
    "contestId": 1178,
    "creationTimeSeconds": 1581005416,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "Kavit_Kheni"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long int ll;\r\n\r\nbool isprime(int n)\r\n{\r\n    for(int i=2 ; i<=sqrt(n) ; i++)\r\n    {\r\n        if(n%i==0)\r\n            return 0;\r\n    }\r\n    return 1;\r\n}\r\n\r\nint main()\r\n{\r\n    int n,m;\r\n    cin >> n;\r\n    m=n;\r\n    int deg[n];\r\n    for(int i=0 ; i<n;  i++)\r\n        deg[i] = 2;\r\n\r\n    for(int i=n ; ; i++)\r\n    {\r\n       if(isprime(i))\r\n       {\r\n           n=i;\r\n           break;\r\n       }\r\n    }\r\n\r\n    int ka = 2*(n-m);\r\n\r\n    while(ka>0)\r\n    {\r\n       for(int i=0 ; i<n ; i++)\r\n       {\r\n           int p = deg[i],z=deg[i];\r\n           for(int j=p+1 ; ; j++)\r\n           {\r\n               if(isprime(j))\r\n               {\r\n                   z=j;\r\n                   break;\r\n               }\r\n           }\r\n           int kh = z-p;\r\n           if(kh <= ka)\r\n           {\r\n               ka-=kh;\r\n               deg[i]=z;\r\n           }\r\n           if(ka==0)\r\n            break;\r\n       }\r\n    }\r\n\r\n    n=m;\r\n    int tot=0;\r\n    for(int i=0 ; i<n ; i++)\r\n       tot += deg[i];\r\n    cout << tot/2 << \"\\n\";\r\n    int deg2[n]={0};\r\n\r\n    vector<int> rem;\r\n    map<pair<int,int> ,bool> mp;\r\n\r\n    for(int i=1 ; i<n ; i++)\r\n    {\r\n        if(deg[i-1] == 3)\r\n            rem.push_back(i);\r\n        cout << i << \" \"<<i+1 << \"\\n\";\r\n        mp[{i-1,i}]=1;\r\n        deg2[i]++;\r\n        deg2[i+1]++;\r\n    }\r\n    if(deg[n-1]==3)\r\n        rem.push_back(n);\r\n    cout << n << \" \" << 1 << \"\\n\";\r\n    mp[{n-1,0}]=1;\r\n    deg2[n]++;\r\n    deg2[1]++;\r\n    int gg=rem.size();\r\n\r\n    for(int i=0 ; i<n ; i++)\r\n    {\r\n        for(int j=0 ;j<n ;j++)\r\n        {\r\n            if(i!=j && mp.find({i,j}) == mp.end() && deg2[i]==2 && deg2[j]==2  && gg>0)\r\n            {\r\n                   mp[{i,j}]=1;\r\n                   cout << i+1 << \" \" << j+1 << \"\\n\";\r\n                   deg2[i]++;\r\n                   deg2[j]++;\r\n                   gg-=2;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n"
}