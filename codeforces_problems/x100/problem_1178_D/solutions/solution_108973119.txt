{
    "id": 108973119,
    "contestId": 1178,
    "creationTimeSeconds": 1614746331,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "singh_tanmay"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "// C\r\n#pragma GCC optimize(\"O3\")\r\n#include <iostream>\r\n#include <cmath>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <cstring>\r\n#include <set>\r\n#include <map>\r\n#include <cstdio>\r\n#include <iterator>\r\n#include <string>\r\n#include <stack>\r\n#include <deque>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\n#define mod 1000000007\r\n#define endl \"\\n\"\r\n\r\n\r\nusing namespace std ;\r\n\r\nusing lli = long long int ;\r\n\r\nusing vi = vector<int> ;\r\n\r\nusing vll = vector<long long int> ;\r\n\r\nbool isPrime[2002];\r\nvi primes;\r\nvoid sieve(){\r\n    memset(isPrime, true, sizeof(isPrime));\r\n    isPrime[1] = isPrime[0] = false;\r\n    for( int i = 2; i * i <= 2000; i++ ){\r\n        if( isPrime[i] ){\r\n            for( int j = i * i; j <= 2000; j += i ){\r\n                isPrime[j] = false;\r\n            }\r\n        }\r\n    }\r\n    primes.push_back(2);\r\n    for( int i = 3; i <= 2000; i += 2 )\r\n        if( isPrime[i] )\r\n            primes.push_back(i);\r\n}\r\nint main(){\r\n    sieve();\r\n    int N; cin >> N;\r\n    int nextPrime = *upper_bound(primes.begin(), primes.end(), N);\r\n    if( isPrime[N] ){\r\n        cout << N << endl;\r\n        for( int i = 1; i <= N - 1; i++ ){\r\n            cout << i << \" \" << i + 1 << endl;\r\n        }\r\n        cout << N << \" \" << 1 << endl;\r\n        return 0;\r\n    }\r\n    \r\n    cout << nextPrime << endl;\r\n    for( int i = 1; i <= N - 1; i++ ){\r\n            cout << i << \" \" << i + 1 << endl;\r\n    }\r\n    cout << N << \" \" << 1 << endl;\r\n    int left = nextPrime - N;\r\n    for( int i = 1; i <= N - 1 && left > 0; i ++ ){\r\n        for( int j = i + 2; j <= N && left > 0; j++ ){\r\n            cout << i << \" \" << j << endl;\r\n            left--;\r\n        }\r\n    }\r\n    \r\n    return 0;\r\n}\r\n\r\n\r\n// 1 2 5\r\n// 1 2 5\r\n\r\n// 2 3 5\r\n"
}