{
    "id": 103090894,
    "contestId": 1178,
    "creationTimeSeconds": 1609673193,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "Shivanshu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 2048000,
    "source": "#include<bits/stdc++.h>\r\n#define pb push_back \r\n #define fo(i,n) for(int i=0;i<n;i++)\r\n#define ll long long \r\n#define int long long \r\n#define Mod 1000000007\r\n#define maxn 200005\r\n#define MAX 4294967296  // 2^32\r\nconst int M=1e9+7;\r\n#define ip pair<int,int>\r\n#define test(t) ll t;cin>>t;while(t--)\r\n  \r\nusing namespace std;\r\n\r\nlong long power(int x,int y){\r\nif(y==0)return 1;\r\n\r\nlong long res=1;\r\nwhile(y>0){\r\n    if(y&1){\r\n        res=(res*x)%Mod;\r\n \r\n    }\r\n    x=x*x%Mod;\r\n  y/=2;\r\n}\r\nreturn res;\r\n\r\n}\r\n\r\n\r\nll power(ll x, ll y, ll p)\r\n{\r\n    ll res = 1;      // Initialize result\r\n \r\n    x = x % p;  // Update x if it is more than or\r\n                // equal to p\r\n \r\n    while (y > 0)\r\n    {\r\n        // If y is odd, multiply x with result\r\n        if (y & 1)\r\n            res = (res*x) % p;\r\n \r\n        // y must be even now\r\n        y = y>>1; // y = y/2\r\n        x = (x*x) % p;\r\n    }\r\n    return res;\r\n}\r\nlong long gcd(int x,int y){\r\n    // if(y>x)swap(x,y);\r\n    if(y==0)return x;\r\n    return gcd(y,x%y);\r\n}\r\n// const int N=200005;\r\n// int dp[N];\r\n// int r=1000000000000000005;\r\nint fact[250005];\r\n// int prime[25]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97};\r\n// set<int>st;\r\nint mul(int l,int r){\r\n    return ((l%Mod)%Mod*(r%Mod)%Mod)%Mod;\r\n}\r\nint nCr(int n,int k){\r\nif(n<k)return 0;\r\nint ans=fact[n]%Mod;\r\nans=mul(ans,power(fact[n-k],Mod-2));\r\n ans=mul(ans,power(fact[k],Mod-2));\r\nreturn ans;\r\n}\r\n\r\n// int n;\r\n// int v=100000000000000;\r\n// void dfs(int i,int j){\r\n// size[i]=1;\r\n// bool is=1;\r\n// for(auto it:adj[i]){\r\n//     if(!vis[it]){\r\n//         dfs(it,i);\r\n//         size[i]+=size[it];\r\n        \r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n// }\r\nbool prime(int x){\r\n\r\nif(x<2)return false;\r\n\r\nfor(int i=2;i*i<=x;i++){\r\n    if(x%i==0)return false;\r\n\r\n}\r\nreturn true;\r\n\r\n\r\n}\r\n\r\nvoid solve(){\r\n  \r\nint n;\r\ncin>>n;\r\nint m=n;\r\nwhile(!prime(m))m++;\r\n\r\ncout<<m<<\"\\n1 \"<<n<<\"\\n\"; \r\n\r\nfor(int i=0;i<n-1;i++)cout<<i+1<<\" \"<<i+2<<\"\\n\";\r\n\r\n    for(int i=0;i<m-n;i++){\r\n        cout<<i+1<<\" \"<<i+1+n/2<<\"\\n\";\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nsigned main(){\r\n\r\n\r\n    // std::string binary = std::bitset<8>(n).to_string();\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n   // memset(fact,0,sizeof(fact));\r\n\r\n // test(t)\r\n solve();\r\n\r\n\r\n  \r\n\r\n\r\n}"
}