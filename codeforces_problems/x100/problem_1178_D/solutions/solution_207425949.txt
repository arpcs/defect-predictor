{
    "id": 207425949,
    "contestId": 1178,
    "creationTimeSeconds": 1685165525,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "AkibAzmain"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 31,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1228800,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\nint\nmain ()\n{\n  int n;\n  cin >> n;\n  vector < int > pr;\n  vector < bool > se (n * n, true);\n  for (int i = 2; i <= n * n; ++i)\n    if (se[i])\n      {\n        pr.push_back (i);\n        for (int j = i + i; j <= n * n; j += i)\n          se[j] = false;\n      }\n  int nd = *lower_bound (pr.begin (), pr.end (), n) - n;\n  cout << n + nd << '\\n';\n  for (int i = 1; i <= n; ++i)\n    cout << i << ' ' << (i == n ? 1 : i + 1) << '\\n';\n  for (int i = 1; i <= nd; ++i)\n    cout << i << ' ' << ((i + n / 2 - 1) % n) + 1 << '\\n';\n}\n"
}