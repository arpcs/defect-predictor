{
    "id": 72111516,
    "contestId": 1178,
    "creationTimeSeconds": 1582996142,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "Mostafa_ELbadawy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1024000,
    "source": "#include <bits/stdc++.h>\r\ntypedef long long ll;\r\ntypedef long double ld;\r\nusing namespace std;\r\n#define endl \"\\n\"\r\n#define FIO ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\nconst int N=1e6+5;\r\nll mod=998244353;\r\n\r\nll fast_pow(ll b, ll p)\r\n{\r\n    if(p==0)\r\n        return 1;\r\n    ll m=fast_pow(b,p/2);\r\n    m=((m%mod)*(m%mod))%mod;\r\n    if(p%2==1)\r\n        m=((m%mod)*(b%mod))%mod;\r\n    return m;\r\n\r\n\r\n}\r\nbool not_prime[N+9];\r\n\r\nvoid saive()\r\n{\r\n    not_prime[0]=1;\r\n    not_prime[1]=1;\r\n    for(int i=2;i<N;i+=2)\r\n    {\r\n        if(!not_prime[i])\r\n        {\r\n            for(int j=i*i;j<N;j+=i)\r\n            {\r\n                not_prime[j]=1;\r\n\r\n            }\r\n        }\r\n\r\n    if (i==2)\r\n        i--;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nint main()\r\n{\r\n    FIO\r\nint n;\r\ncin>>n;\r\nvector<pair<int,int > > ans;\r\nsaive();\r\nint co=0;\r\nfor(int i=1;i<n;i++)\r\n{\r\n    ans.push_back({i,i+1});\r\n}\r\nans.push_back({n,1});\r\n\r\n    int i=1;\r\n    while(not_prime[ans.size()])\r\n    {\r\n        ans.push_back({i,i+n/2});\r\n        i++;\r\n    }\r\ncout<<ans.size()<<endl;\r\nfor(int i=0;i<ans.size();i++)\r\n    cout<<ans[i].first<<\" \"<<ans[i].second<<endl;\r\n\r\n    return 0;\r\n\r\n}\r\n"
}