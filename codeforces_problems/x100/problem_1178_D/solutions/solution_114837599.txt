{
    "id": 114837599,
    "contestId": 1178,
    "creationTimeSeconds": 1619945134,
    "relativeTimeSeconds": 5734,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "rainbow_no_hydrogen"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1619939400
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int MAX = 2e3 + 10;\r\nconst int INF = 1e9 + 7;\r\nconst int MOD = 998244353;\r\n\r\nbool is_pri[MAX];\r\nint pri[MAX];\r\nint cnt = 0;\r\n\r\nvoid prime() {\r\n    is_pri[0] = is_pri[1] = 1;\r\n    for(int i = 2; i <= MAX; i++) {\r\n        if(!is_pri[i]) pri[cnt++] = i;\r\n        for(int j = 0; j < cnt && pri[j] * i <= MAX; j++) {\r\n            is_pri[pri[j] * i] = 1;\r\n            if(i % pri[j] == 0) break;\r\n        }\r\n    }\r\n}\r\nint main() {\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    prime();\r\n    if(is_pri[n] == 0) {\r\n        printf(\"%d\\n\", n);\r\n        for(int i = 1; i < n; i++) {\r\n            printf(\"%d %d\\n\", i, i + 1);\r\n        }\r\n        printf(\"%d 1\\n\", n);\r\n    }\r\n    else {\r\n        int tmp = 0;\r\n        for(int i = n; i <= n + n / 2; i++) {\r\n            if(is_pri[i] == 0) {\r\n                tmp = i;\r\n                break;\r\n            }\r\n        }\r\n        printf(\"%d\\n\", tmp);\r\n        for(int i = 1; i < n; i++) {\r\n            printf(\"%d %d\\n\", i, i + 1);\r\n        }\r\n        printf(\"%d 1\\n\", n);\r\n        tmp -= n;\r\n        int i = 1, j = i + n / 2;\r\n        while(tmp--) {\r\n            printf(\"%d %d\\n\", i, j);\r\n            i++; j++;\r\n        }\r\n    }\r\n}"
}