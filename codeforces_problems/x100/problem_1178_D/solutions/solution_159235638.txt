{
    "id": 159235638,
    "contestId": 1178,
    "creationTimeSeconds": 1654163333,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "absolute-mess"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "// Hi! One day, you'll do it:) \r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#pragma gcc optiminize(\"Ofast\")\r\n#pragma gcc target(\"fma,sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmaxi,avx,avx2,tune=native\")\r\n#pragma gcc optiminize(\"unroll-loops\")\r\n#pragma GCC target(\"fpmath=sse,sse2\")\r\n#define all(z)              (z).begin(), (z).end()       \r\n#define int                 long long          \r\n#define fi(n)               for(int i=0;i<n;i++)\r\n#define fj(n)               for(int j=0;j<n;j++)\r\n#define fk(n)               for(int k=0;k<n;k++) \r\n#define setp(x)\t            fixed<<setprecision(x)  \r\n#define rep(i,a,b)          for(int i=a;i<b;i++)\r\n#define mem(a,b)            memset(a,b,sizeof(a))\r\n#define endl                \"\\n\"\r\n#define yes                 cout<<\"YES\\n\";\r\n#define no                  cout<<\"NO\\n\";\r\n#define uniq(v)             v.erase(unique(v.begin(),v.end()),v.end())\r\n#define coutar(array,size)  fi(size) cout<<array[i]<<\" \"; cout<<\"\\n\";               \r\n#define dbg(dt)             cout<<#dt<<\": \"<<dt<<\" \";\r\n#define db1(dt)             cout<<#dt<<\": \"<<dt;\r\n#define db2(dt)             cout<<#dt<<\":\"<<\"\\n\"<<dt;\r\ntypedef bitset<21> bit;            int mod99=998244353;\r\ntypedef long double ld;            const ld pi=3.141592653589;               const int mod10 = 1000000007;     const int INF = 5e18;                             \r\ntypedef pair<int, int> pii;        typedef vector<int> vi;                   typedef vector<pii> vpii;       typedef vector<vi> vvi;    \r\ntypedef set<int> si;               typedef set<pii> spi;                     typedef multiset<int> msl;      typedef vector<string> vs; \r\n\r\nmt19937 sresy (chrono::high_resolution_clock::now().time_since_epoch().count());\r\ntemplate <typename A, typename B> ostream& operator<<(ostream &ostr, const pair<A, B> &pp) {return ostr<<'{'<<pp.first<<\", \"<<pp.second<<'}';}\r\ntemplate <typename T_container, typename T = typename enable_if<!is_same<T_container, string>::value, typename T_container::value_type>::type> ostream& operator<<(ostream &ostr, const T_container &vec) \r\n{ for(const T &vv:vec) ostr<<vv<<\" \"; return ostr<<endl;  }\r\ntemplate <typename A> ostream& operator<< (ostream &ostr, vector<A> const &v) { fi(v.size()) {cout<<v[i]<<\" \";} return cout<<\"\\n\";}\r\ntemplate <typename A, typename B> istream& operator>> (istream& cin, pair<A, B> &pp) {cin>>pp.first; return cin>>pp.second;}\r\ntemplate <typename A> istream& operator>> (istream& cin, vector<A> &vv){ fi(vv.size()-1) cin>>vv[i]; return cin>>vv[vv.size()-1];}\r\n\r\nvi primes,fibonacci;        int xorval(int n);\r\nbool isPrime(int n);        void sieve(int N);\r\nint lcm(int a,int b);       int poww(int n,int k);\r\nint nCr(int n,int r);       int leap(int y);    \r\nvoid fiboseries(int n);     int fiboN(int n);\r\nbool isvowel(char c) { c=tolower(c); if(c=='a'||c=='e'||c=='i'||c=='o'||c=='u') return 1; else return 0;}\r\nint modInverse(int a,int m);\r\nstring baseto10(string s,int b);   \r\nstring basefrom10(string s,int b); \r\nbool ispow2 (int n) {return n and  (!(n&(n-1)));}\r\nld dis_p(int x1,int y1,int x2,int y2);\r\nint days[12]={31,28,31,30,31,30,31,31,30,31,30,31};    \r\nstring months[12]={\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"Falsevember\",\"December\"};\r\n\r\n// USE stoll for string to integer //DIVIDE MOD dekhlena\r\n// (first sort then )v.erase(unique(v.begin(),v.end()),v.end()); //for unique\r\n// MAP,SET-i->first (For lb and  ub, use [name.lb/ub(val)]; \r\n// (n & ~n) returns rightmost 1 bit in n  || s.find==-1 meval absent\r\n// n<<i == n*(2^i)   while n>>i== n/(2^i)  closing side is used\r\n// if  ((it&(1ll<<i))) for checking ith bit is 1 or 0\r\n// When n%n==n, use (n-1)%n +1 == n (1487B)\r\n// 279C (calc False. from back of array,q=0; q+=(p*s[i]); p*=10; )\r\n// Max GCD is (a-b) and  max when a,a/2 --> a/2 is max \r\n// Copy vector by '=' //MAP,SET-  auto(add is Falset int)\r\n// INTERACTIVE: use flush between cout and  cin: cout--flush--cin\r\n// TRY TO AVOID FLOATING NUMBERS BY MULTIPLY //488B\r\n// CODE STARTS (template FUNCTIONS ARE BELOW THE MAIN FUNCTIONS)\r\n// IF TLE + Q can be solved by int, remove longlong (int is fast)\r\n\r\nvoid sweetheart()   { \r\n    int n; cin>>n;\r\n    int ans=n;\r\n    ans+=(n-1)/2;\r\n    if(n==3) {\r\n        cout<<\"3\\n1 2\\n2 3\\n3 1\\n\"; return;\r\n    }\r\n    cout<<ans<<endl;\r\n    fi(n) {\r\n        cout<<i+1<<\" \"<<(i+1)%(n)+1<<endl;\r\n    }\r\n    fi((n-1)/2) {\r\n        cout<<i+1<<\" \"<<i+n/2+1<<endl;\r\n    }\r\n}\r\n// EDGE CASES DEKHA KAR CHUTIYE, HAR BAAR CHOR DETA HAI\r\n///////// MAIN FUNCTION ///////////////////////////////////////////\r\nint32_t main()\r\n{\r\n    // freopen(\"input.txt\",\"r\",stdin);\r\n    // freopen(\"output.txt\",\"w\",stdout);\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);    cout.tie(0);  cerr.tie(0);\r\n    string jaaneman = \"1\";\r\n    //getline(cin, jaaneman);\r\n    int me = stoll(jaaneman);    int you = 0;\r\n    while ((you++) < me)    {\r\n        //cout<<\"Case #\"<<you<<\": \";\r\n        sweetheart();\r\n    }\r\n    cerr << \"Time: \" << 1000 * clock() / CLOCKS_PER_SEC<< \" milliseconds\";\r\n    return 0;\r\n}\r\n\r\n//CODE BELOW FOR template FUNCTIONS (Changed at 1520 F1)\r\nbool isPrime(int n) {\r\n    if (n<2)               return 0;\r\n    if (n<4)               return 1;\r\n    if (!(n%2) || !(n%3))   return 0;\r\n    for (int i = 5; i * i <= n; i += 6)\r\n    if (!(n % i) || !(n % (i + 2)))\r\n    return 0;\r\n    return 1;\r\n}\r\nvoid sieve(int N){\r\nvi check(N+1);\r\nfor (int i=2;i<=N;i++) {\r\n    if (!check[i]) \r\n    check[i] = i,primes.push_back(i);\r\n    for (int j=0;j<primes.size() and  primes[j]<=check[i] and  i*primes[j]<=N;j++) \r\n    check[i * primes[j]] = primes[j];   }   \r\n}\r\nld dis_p(int x1, int y1, int x2, int y2)    { \r\n    ld distance = sqrt(((x1 - y1)*(x1 - y1) + (x2 - y2)*(x2 - y2)*1.00));\r\n    return distance;\r\n}  \r\nint lcm(int a, int b){\r\n    return ((a * b) / lcm(a, b));       }\r\nint poww(int n, int k)   { \r\n    int x=1;   //if mod (mod on 13th straight)\r\n    while (k)   {\r\n        if (k & 1)   \r\n\t\t{ x*= n; x%=mod10; }\r\n        n*=n;\r\n\t\tn%=mod10;\r\n        k>>=1;\r\n    }\r\n    return x;\r\n}   //multi n^k\r\nint nCr(int n, int r)   { // n C r coeresicient\r\n    if(r>n) return 0;\r\n    if(r>n-r) r=n-r;\r\n    int calc=1;\r\n    for(int i=1;i<=r;i++) {\r\n        calc*=(n-r+i);\r\n        calc/=i;\r\n    }\r\n    return calc;   \r\n}\r\nint modInverse(int a, int m)  { \r\n    if (m==1) \r\n    return 0; //edge case\r\n    int initialmod=m, y=0,x=1; \r\n    while (a>1)   { \r\n    //changing (A,B)--> (B, A%B) till a>1\r\n        int q=a/m;  // q is quotient \r\n        int t=m;\r\n        m=a%m;  // m->remainder(from q)\r\n        a=t;    // process same as\r\n        t=y;    // Euclid's algo \r\n        y=x-q*y; \r\n        x=t;   // Update y and  x \r\n    }   //ax + bm = 1 (gcd(a,m)==1 (coprime))\r\n    if (x<0) \r\n    x+=initialmod; \r\n    return x; \r\n} \r\nvoid fiboseries(int n)  {   \r\n    fibonacci.push_back(0);     fibonacci.push_back(1);\r\n    int nu=0,c2=1;  int c3=nu+c2;\r\n    while(c2<n) {\r\n        c3=nu+c2;   nu=c2;      c2|=c3;\r\n        fibonacci.push_back(c3);      \r\n    }// Series upto N\r\n}   \r\nint fiboN(int n)    {   \r\n    //For DIRECTLY Nth TERM: Fn = {[(\u221a5 + 1)/2] ^ n} / \u221a5 \r\n    if(n<=1) return n;\r\n    return fiboN(n-1) + fiboN(n-2);\r\n}   // n as indexing starts from 0\r\nstring baseto10(string s, int b) {\r\n    int num=0; \r\n    fi(s.size()){\r\n        if(isdigit(s[i]))\r\n        num=num*b+(s[i]-'0');\r\n        else \r\n        num=num*b+(s[i]-'A'+10);\r\n    }\r\n    return to_string(num);\r\n} \r\nstring basefrom10(string s,int b) {\r\n    string num; \r\n    int n=stoll(s);\r\n    while(n) {\r\n        int x=n%b;  n/=b;\r\n        if(x<10)\r\n        num+=char('0'+x);\r\n        else \r\n        num+=char('A'+x-10);\r\n    }\r\n    reverse(all(num));\r\n    return num;\r\n}\r\nint leap(int y) {\r\n    if (y%400 == 0)         return 1;\r\n    else if (y%100 == 0)    return 0;\r\n    else if (y%4 == 0)      return 1;\r\n    else                    return 0;\r\n}\r\nint xorval(int n){\r\n    if (n%4==0)             return n; //0,4,8,12\r\n    else if (n%4==1)        return 1; //1,5,9\r\n    else if (n%4==2)        return n; //2,6,10\r\n    return 0;\r\n}\r\n        "
}