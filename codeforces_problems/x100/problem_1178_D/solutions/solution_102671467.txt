{
    "id": 102671467,
    "contestId": 1178,
    "creationTimeSeconds": 1609231812,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "batflarrow"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <stdio.h>\r\n#include <bits/stdc++.h>\r\n#define ll long long int \r\nusing namespace std;\r\n//=\r\n \r\n \r\n vector <int> prime;\r\n void generateprime()\r\n {  \r\n    prime.push_back(2);\r\n for(int i=3;i<1200;i++)\r\n    {   int flag=0;\r\n        for(int j=2;j<=sqrt(i);j++)\r\n        {\r\n            if(i%j==0)\r\n            {\r\n                flag=1;\r\n                break;\r\n            }\r\n        }\r\n        if(flag==0)\r\n        {\r\n            prime.push_back(i);\r\n        }\r\n        \r\n    }\r\n }\r\nint checkprime(int abc)\r\n{\r\n    if(find(prime.begin(),prime.end(),abc)!=prime.end())\r\n    {\r\n        return true;\r\n    }\r\n    else\r\n    return false;\r\n  }\r\n\r\nint main() {\r\n\tgenerateprime();\r\n\tll n;\r\n\tcin>>n;\r\n\t\r\n// \tmap <int,int> m;\r\n\tvector <pair<int,int>> v;\r\n\t\r\n\tfor(int i=1;i<n;i++)\r\n\t{\r\n\t    \r\n\t    v.push_back(make_pair(i,i+1));\r\n\t    \r\n\t}\r\n\tll ansedges;\r\n\tv.push_back(make_pair(1,n));\r\n\tif(n==3)\r\n\t{\r\n\t    cout<<3<<endl;\r\n\tfor(int i=0;i<v.size();i++)\r\n\t{   \r\n\t    cout<<v[i].first<<\" \"<<v[i].second<<endl;\r\n\t}\r\n\t\r\n\t}\r\n\telse\r\n\t{\r\n\t    for(int i=n;i<=n*(n-1)/2;i++)\r\n\t    {\r\n\t        if(checkprime(i))\r\n\t        {\r\n\t            ansedges=i;\r\n\t            break;\r\n\t        }\r\n\t    }\r\n\t    \r\n\t    \r\n\t    ll edgeleft=ansedges-n;\r\n\t    \r\n\t    int imp=1;\r\n\t    ll laganewaleedges=3;\r\n\t   // cout<<\"edgeleft\"<<\" \"<<edgeleft;\r\n\t    \r\n\t    ll veryimp=0;\r\n\t    while(edgeleft>0)\r\n\t    { \r\n\t        for(int i=edgeleft;i>=0;i--)\r\n\t        {   \r\n\t      \r\n\t            if(checkprime(i+2)&&(i+2)<=(n-1))\r\n\t            {   \r\n\t             laganewaleedges=i;\r\n\t             break;\r\n\t            }\r\n\t            else\r\n\t            continue;\r\n\t        }\r\n\t        \r\n\t        \r\n\t    for(ll i=1;i<=laganewaleedges;i++)\r\n\t    {\r\n\t        v.push_back(make_pair(imp,imp+1+i+veryimp));\r\n\t    }\r\n\t    imp=imp+1+i+veryimp;\r\n\t    veryimp+=veryimp+imp+laganewaleedges;\r\n\t    edgeleft=edgeleft-laganewaleedges;\r\n\t    \r\n\t    \r\n\t    \r\n\t  }\r\n\t    \r\n\t     cout<<ansedges<<endl;\r\n\t    \tfor(int i=0;i<v.size();i++)\r\n\t{  \r\n\t    cout<<v[i].first<<\" \"<<v[i].second<<endl;\r\n\t}\r\n\t    \r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n"
}