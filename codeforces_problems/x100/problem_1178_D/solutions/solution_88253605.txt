{
    "id": 88253605,
    "contestId": 1178,
    "creationTimeSeconds": 1596001787,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "vdv09"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 4300800,
    "source": "/**\r\n *      author:   vdv09/op_invalid\r\n *      created:  29.07.2020\r\n**/\r\n\r\n#pragma gcc optimize(\"Ofast,no-stack-protector,tune=native\")\r\n#pragma gcc optimize(\"sse,sse2,sse3,sse4,ssse3\")\r\n#pragma gcc optimize(\"abm,mmx,avx,avx2,unroll-loops,fast-math,section-anchors\")\r\n\r\n#include <iostream>\r\n#include <vector>\r\n#include <cmath>\r\n#include <algorithm>\r\n#include <string>\r\n#include <queue>\r\n#include <set>\r\n#include <map>\r\n#include <deque>\r\n#include <fstream>\r\n#include <stack>\r\n#include <random>\r\n#include <fstream>\r\n#include <iomanip>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\n\r\nusing namespace std;\r\n\r\n#define int long long\r\n#define ld long double\r\n#define pb push_back\r\n#define pf push_front\r\n#define mp make_pair\r\n#define INF 1e18\r\n#define MOD 1000000007\r\n#define all(c) c.begin(), c.end()\r\n#define parai pair <int, int>\r\n#define flush cout.flush()\r\n\r\nvoid fast_stream() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n}\r\n\r\nvector <int> z_function(string s) {\r\n    int n = s.length();\r\n    vector<int> z(n);\r\n    for (int i = 1, l = 0, r = 0; i < n; ++i) {\r\n        if (i <= r) {\r\n            z[i] = min(r - i + 1, z[i - l]);\r\n        }\r\n        while (i+z[i] < n && s[z[i]] == s[i+z[i]]) {\r\n            ++z[i];\r\n        }\r\n        if (i+z[i]-1 > r) {\r\n            l = i;\r\n            r = i + z[i] - 1;\r\n        }\r\n    }\r\n    return z;\r\n}\r\n\r\nparai find_max_podotrsok(vector <int> a) {\r\n    int ans = a[0], ans_l = 0, ans_r = 0, sum = 0, minus_pos = -1;\r\n    for (int r = 0; r < a.size(); ++r) {\r\n        sum += a[r];\r\n        if (sum > ans) {\r\n            ans = sum;\r\n            ans_l = minus_pos + 1;\r\n            ans_r = r;\r\n        }\r\n        if (sum == ans && ans_r == r) {\r\n            ans_l = max(ans_l, minus_pos + 1);\r\n        }\r\n        if (0 >= sum) {\r\n            sum = 0;\r\n            minus_pos = r;\r\n        }\r\n    }\r\n    return {ans_l, ans_r};\r\n}\r\n\r\nbool is_prost(int n) {\r\n    int i = 2;\r\n    while (i * i <= n) {\r\n        if (n % i == 0) {\r\n            return false;\r\n        }\r\n        ++i;\r\n    }\r\n    return true;\r\n}\r\n\r\nsigned main() {\r\n    // freopen(\"stdin\", \"r\", stdin);\r\n    // freopen(\"stdout\", \"w\", stdout);\r\n    fast_stream();\r\n    int n;\r\n    cin >> n;\r\n    vector <parai> ans;\r\n    for (int i = 1; i < n; ++i) {\r\n        ans.pb({i, i + 1});\r\n    }\r\n    ans.pb({n, 1});\r\n    int now = 2;\r\n    while (!is_prost(ans.size())) {\r\n        ans.pb({now, n - now + 2});\r\n        ++now;\r\n    }\r\n    cout << ans.size() << '\\n';\r\n    for (auto i : ans) {\r\n        cout << i.first << ' ' << i.second << '\\n';\r\n    }\r\n}"
}