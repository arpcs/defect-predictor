{
    "id": 132638559,
    "contestId": 1178,
    "creationTimeSeconds": 1634835061,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "ps_12"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "PyPy 3",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 24985600,
    "source": "inf = float('inf')\r\nimport sys\r\nimport pprint\r\nimport logging\r\nfrom logging import getLogger\r\nimport array\r\n\r\n# sys.setrecursionlimit(10 ** 9)\r\n\r\ndef input(): return sys.stdin.readline().rstrip(\"\\r\\n\")\r\n\r\ndef maps(): return [int(i) for i in input().split()]\r\n\r\n\r\nlogging.basicConfig(\r\n    format=\"%(message)s\",\r\n    level=logging.WARNING,\r\n)\r\nlogger = getLogger(__name__)\r\nlogger.setLevel(logging.INFO)\r\n\r\n\r\ndef debug(msg, *args):\r\n    logger.info(f'{msg}={pprint.pformat(args)}')\r\n\r\n\r\ndef seive():\r\n    n = 1204\r\n    ok = [True] * n\r\n    ok[0] = ok[1] = False\r\n    for i in range(2, n):\r\n        if ok[i]:\r\n            for j in range(2 * i, n, i):\r\n                ok[j] = False\r\n    return [i for i in range(n) if ok[i]]\r\n\r\n\r\nx = seive()\r\nfrom collections import deque\r\nn, = maps()\r\nif n in x and n > 2:\r\n    print(n)\r\n    print(1, n)\r\n    print(1, 2)\r\n    for i in range(2, n):\r\n        print(i, i + 1)\r\n\r\nelse:\r\n    A = []\r\n    l = deque(range(1, n + 1))\r\n    for i in range(n // 3):\r\n        a, b, c = l.popleft(), l.popleft(), l.popleft()\r\n        A.append([a, b])\r\n        A.append([b, c])\r\n        A.append([c, a])\r\n    ll = len(A)\r\n    if len(l) == 1:\r\n        A.append([l[0], l[0] - 1])\r\n        A.append([l[0], l[0] - 2])\r\n        ll += 2\r\n\r\n    elif len(l) == 2:\r\n        A.append([l[0], l[1]])\r\n        A.append([1, l[0]])\r\n        A.append([2, l[1]])\r\n        ll += 3\r\n\r\n    k = 3\r\n    while ll not in x and ll < n * (n - 1) // 2:\r\n        A.append([k, k + 1])\r\n        k += 3\r\n        ll += 1\r\n    if ll in x:\r\n        print(ll)\r\n        [print(*i) for i in A]\r\n    else:\r\n        print(-1)\r\n"
}