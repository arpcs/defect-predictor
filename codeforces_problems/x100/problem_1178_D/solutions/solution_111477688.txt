{
    "id": 111477688,
    "contestId": 1178,
    "creationTimeSeconds": 1617111134,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "WillBeBackSoon"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 3993600,
    "source": "#include<bits/stdc++.h>\t\t\t\t\t\t\t\r\n#define pb push_back\r\n#define ld long double\r\n#define ll long long \r\n#define lld long double\r\n#define print(x) cerr << \"[\" << #x << \": \" << x << \"]\";\r\n#define println(x) cerr << \"[\" << #x << \": \" << x << \"]\\n\";\r\n#define show(v) for(int i = 0; i < (int)v.size(); ++i) cout << v[i] << (i == (int)v.size() - 1 ? \"\\n\" : \" \" );\r\n#define debug(v) for(int i = 0; i < (int)v.size(); ++i) {print(i); cout << \"   \"; println(v[i])}\r\nusing namespace std;\r\n\r\nclock_t time_p=clock();\r\nvoid Time() {\r\n\ttime_p=clock()-time_p;\r\n\tcerr<<\"Time Taken : \"<<(float)(time_p)/CLOCKS_PER_SEC<<\"\\n\";\r\n}\r\n\r\n\r\nconst int INF = 1e9 + 7;\r\nlld pi=3.1415926535897932;\r\nconst long long INF64 = 9e18;\r\nconst long long mod = 998244353;\r\n\r\nbool isPrime(int n) {\r\n\tfor(int i = 2; i <= sqrt(n);) {\r\n\t\tif(n % i == 0) return false;\r\n\t\tif(n == 2) i++;\r\n\t\telse i += 2;\r\n\t\t}\r\n\t\treturn true;\r\n}\r\n\r\nconst int mxN = 100;\r\nvector<int> primetable(mxN, 1);\r\nint mark[1002][1002];\r\n\r\nvoid sieve() {\r\n\tfor(int i = 2; i <= 100; ++i) {\r\n\t\tif(primetable[i]) {\r\n\t\t\tfor(int j = i * i; j <= 100; j += i) {\r\n\t\t\t\tprimetable[j] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n}\r\n\r\nvoid solve() {\r\n\tint n;\r\n\tcin >> n;\r\n\tvector<int> v;\r\n\tif(n == 3) {\r\n\t\tcout << 3 << endl;\r\n\t\tcout << 1 << \" \" << 2 << endl;\r\n\t\tcout << 2 << \" \" << 3 << endl;\r\n\t\tcout << 1 << \" \" << 3 << endl;\r\n\t\treturn;\r\n\t\t}\r\n\t\tint primevalue = n;\r\n\t\tfor(int i = 0; i <= 1000; ++i) {\r\n\t\t\tprimevalue += i;\r\n\t\t\tif(primetable[primevalue]) break;\r\n\t\t\t}\r\n\t\t\tint remain = 0;\r\n\t\t\tvector<pair<int, int>> ans;\r\n\t\t\tfor(int i = 1; i < n; ++i) {\r\n\t\t\t\tif(i == 1) {\r\n\t\t\t\t\tans.pb({1, 2});\r\n\t\t\t\t\tans.pb({1, n});\r\n\t\t\t\t\tmark[1][2] = 1;\r\n\t\t\t\t\tmark[1][n] = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\telse ans.pb({i, i + 1}), mark[i][i + 1] = 1;\r\n\t\t\t\t}\r\n\t\t\t\tremain = primevalue - n;\r\n\t\t\t\tfor(int i = 1; i <= n && remain; ++i) {\r\n\t\t\t\t\tans.pb({i, i + n / 2});\r\n\t\t\t\t\tremain--;\r\n\t\t\t\t\t} \r\n\t\t\t\t\tcout << ans.size() << endl;\r\n\t\t\t\t\tfor(auto it : ans) cout << it.first << \" \" << it.second << endl;\t\r\n}\r\n\r\nint main() {\r\n\tios_base :: sync_with_stdio(0);\r\n\tcin.tie(NULL);\r\n\tcout.tie(NULL);\t\r\n\t//cout.precision(35);\r\n\tint t;\r\n\tsieve();\r\n\tsolve(); \r\n\tTime();\r\n\treturn 0;\r\n}\r\n"
}