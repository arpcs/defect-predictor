{
    "id": 81757571,
    "contestId": 1178,
    "creationTimeSeconds": 1590679743,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "nagaraj41"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define fastIO ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\r\n#define int long long int\r\n#define fi first\r\n#define se second\r\n#define pub push_back\r\n#define mkp make_pair\r\n#define pi pair<int,int>\r\n#define push push\r\n#define all(v) (v).begin(), (v).end()\r\n#define rep(i, l, r) for(int i=(int)(l);i<(int)(r);i++)\r\n#define repd(i, l, r) for (int i=(int)(l);i>=(int)(r);i--)\r\n#define clrg(i, l, r) for(int i=(int)(l);i<(int)(n);i++)vis[i]=0,v[i].clear();\r\nint power(int x, unsigned int y){int res = 1;while (y > 0){ if (y & 1){res = res*x;} y = y>>1;x = x*x;}return res;}\r\nint gcd(int a, int b){if (b == 0)return a; return gcd(b, a % b);}\r\nint powermod(int x, unsigned int y, int p){int res = 1;x = x % p;while (y > 0){if (y & 1){res = (res*x) % p;}y = y>>1; x = (x*x) % p;}return res;}\r\n#define print2d(mat,n,m){for(int i=0;i<(int)(n);i++){for(int j=0;j<(m);j++){cout<<mat[i][j]<<\" \";}cout<< endl;}}\r\n#define print1d(mat,n){for(int i=0;i<(int)(n);i++)cout<<mat[i]<<\" \";cout<<endl;}\r\n#define clr(a,x) memset(a,x,sizeof(a))\r\n#define rr(v) for(auto &val:v)\r\n#define mpt(m)  for(auto it=m.begin();it!=m.end();it++)\r\n#define print(v) for (const auto itr : v){cout<<itr<<' ';}cout<<endl;\r\n#define init(v,x) for (auto &itr:v){itr=x;}\r\n#define ln length()\r\n#define sz size()\r\n#define inf 1e18;\r\n#define mod 1000000007\r\n#define elif else if\r\nbool prime[1000+50]; \r\nvoid SieveOfEratosthenes(int n=1000+50) \r\n{ \r\n\t// Create a boolean array \"prime[0..n]\" and initialize \r\n\t// all entries it as true. A value in prime[i] will \r\n\t// finally be false if i is Not a prime, else true. \r\n\tmemset(prime, true, sizeof(prime)); \r\n  \r\n\tfor (int p=2; p*p<=n; p++) \r\n\t{ \r\n\t\t// If prime[p] is not changed, then it is a prime \r\n\t\tif (prime[p] == true) \r\n\t\t{ \r\n\t\t\t// Update all multiples of p greater than or  \r\n\t\t\t// equal to the square of it \r\n\t\t\t// numbers which are multiple of p and are \r\n\t\t\t// less than p^2 are already been marked.  \r\n\t\t\tfor (int i=p*p; i<=n; i += p) \r\n\t\t\t\tprime[i] = false; \r\n\t\t} \r\n\t} \r\n} \r\nint32_t main(){\r\n   int n;\r\n   cin>>n;\r\n   SieveOfEratosthenes();\r\n   int ans=n;\r\n   rep(i,n,1050){\r\n\t   if(prime[i]){\r\n\t\t   ans=i;\r\n\t\t   break;\r\n\t   }\r\n   }\r\n   int cnt=0;\r\n   cout<<ans<<\"\\n\";\r\n   rep(i,1,n+1){\r\n\t   int c=0;\r\n\t   rep(j,0,n-i+1){\r\n\t\t   if(i>=2&&c==2)j+=2,c=0;\r\n\t\t   cout<<j+1<<\" \"<<(j+i)%(n) + 1<<\"\\n\";\r\n\t\t   cnt++;c++;\r\n\t\t   if(cnt>=ans)break;\r\n\t   }\r\n\t\t   if(cnt>=ans)break;\r\n   }\r\n\treturn 0;\r\n}"
}