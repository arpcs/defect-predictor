{
    "id": 122767221,
    "contestId": 1178,
    "creationTimeSeconds": 1626526176,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "D",
        "name": "Prime Graph",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "alexander707070"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 4812800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nint n,sum;\r\nint d[1007];\r\nlong long res;\r\nbool pr(int x){\r\n    for(int i=2;i*i<=x;i++){\r\n        if(x%i==0)return false;\r\n    }\r\n    return true;\r\n}\r\nbool used[1007][1007],dali;\r\nvector< pair<int,int> > edges;\r\nint main(){\r\n    cin>>n;\r\n    res=2*n;\r\n    for(int i=1;i<=n;i++)d[i]=2;\r\n    if(pr(res/2))dali=true;\r\n    if(!dali){\r\n        for(int i=1;i<=n;i+=2){\r\n            d[i]++;\r\n            d[i+1]++;\r\n            res+=2;\r\n            if(pr(res/2)){dali=true;break;}\r\n        }\r\n    }\r\n    if(!dali){\r\n        for(int i=1;i<=n;i++){\r\n            d[i]+=2;\r\n            res+=2;\r\n            if(pr(res/2))break;\r\n        }\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        for(int f=i+1;f<=n;f++){\r\n            if(d[i]>0 and d[f]>0){\r\n                edges.push_back(make_pair(i,f));\r\n                d[i]--;d[f]--;\r\n            }\r\n        }\r\n    }\r\n    cout<<res/2<<\"\\n\";\r\n    for(int i=0;i<edges.size();i++){\r\n        cout<<edges[i].first<<\" \"<<edges[i].second<<\"\\n\";\r\n    }\r\n    return 0;\r\n}\r\n\r\n\r\n"
}