{
    "id": 190874653,
    "contestId": 1359,
    "creationTimeSeconds": 1674838044,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1359,
        "index": "A",
        "name": "Berland Poker",
        "type": "PROGRAMMING",
        "rating": 1000,
        "tags": [
            "brute force",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1359,
        "members": [
            {
                "handle": "Sy_03"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1590676500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nusing ui = unsigned int;\r\nusing ull = unsigned long long;\r\nusing ll = long long;\r\n#define endl '\\n'\r\nusing pii = pair<int, int>;\r\nusing pll = pair<ll, ll>;\r\nconst int maxn = 2e5 + 10;\r\nconst int mod = 1000000007;\r\n#define inl inline\r\n#define fr(i, a, b) for (int i = a; i <= b; i++)\r\n#define ford(i, a, b) for (int i = a; i >= b; i--)\r\n#define forall(i, a) for (auto &i : a)\r\n/*\r\nC++20 bit\r\nhas_single_bit: \u662f\u5426\u53ea\u6709\u4e00\u4e2a\u6bd4\u7279\u4f4d\u4e3a1\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u662f\u5426\u4e3a2\u7684\u6b21\u5e42\u3002\r\nbit_width: bit\u6709\u6548\u4f4d\uff0c\u4e5f\u5c31\u662f\u6700\u5c11\u6709\u591a\u5c11\u4f4d\u53ef\u4ee5\u8868\u793a\u8be5\u6570\u5b57\u3002\r\ncountl_zero, countl_one,: \u5de6\u7aef\u70b9\u5f00\u59cb\u8fde\u7eed0/1\u4e2a\u6570\u3002\r\ncountr_zero, countr_one: \u53f3\u4fa7\u5f00\u59cb\u8fde\u7eed0/1\u4e2a\u6570\r\nbit_ceil, bit_floor \u8fd4\u56de n \u4ee5\u4e0a\u6700\u5c0f\u76842\u7684\u6b21\u5e42\u6216\u8005\u4ee5\u4e0b\u6700\u5927\u76842\u7684\u6b21\u5e42\u3002\r\n\r\nC++20 string\r\n\r\nstarts_with \u4e0e ends_with \u7528\u4e8e\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u67d0\u4e2a\u5b57\u7b26\u4e32\u5f00\u5934\u6216\u7ed3\u5c3e\u3002\r\nsearch(haystack.begin(), haystack.end(),\r\n                      std::boyer_moore_searcher(needle.begin(), needle.end()));\r\n      it != haystack.end()\r\nstring_view & split \u5206\u5272\u8f93\u51fa\r\n\r\nC++ 20 numbers\r\npi_v<long double> = 3.14159\r\ne_v<long double> = 2.71828\r\ninv_pi<long double> = 0.31831\r\n\r\nmultiset, set, map, unordered_set\r\n\u6709contains\u65b9\u6cd5\uff0c\u8fd4\u56debool\u503c\uff0c\u8868\u793a\u662f\u5426\u5305\u542b\u67d0\u4e2a\u5143\u7d20\u3002\r\n*/\r\nistream &operator>>(istream &in, vector<int> &v)\r\n{\r\n    for (auto &i : v)\r\n        in >> i;\r\n    return in;\r\n}\r\nostream &operator<<(ostream &out, vector<int> &v)\r\n{\r\n    for (auto &i : v)\r\n        out << i << \" \";\r\n    return out;\r\n}\r\nbool _output = 1;\r\n\r\nvoid solve()\r\n{\r\n    int n, m, k;\r\n    cin >> n >> m >> k;\r\n    int p = n / k;\r\n    //   cout<<p<<endl;\r\n    // \u5355\u4eba\u724c\u6570\u91cf\r\n    if (m < p)\r\n    {\r\n        cout << m << endl;\r\n        return;\r\n    }\r\n    else\r\n    {\r\n        m -= p;\r\n        int t = k - 1;\r\n        int q = m / t;\r\n        int r = m % t;\r\n        //   cout << \"!\" << q << endl;\r\n        if (r == 0)\r\n        {\r\n            //  cout << \"??\" << endl;\r\n            cout << p - q << endl;\r\n        }\r\n        else\r\n        {\r\n            cout << p - q - 1 << endl;\r\n        }\r\n    }\r\n}\r\nsigned main()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    int _ = 1;\r\n    if (_output)\r\n        cin >> _;\r\n    while (_--)\r\n        solve();\r\n    return 0;\r\n}"
}