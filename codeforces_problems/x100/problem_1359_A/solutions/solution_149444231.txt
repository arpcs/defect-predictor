{
    "id": 149444231,
    "contestId": 1359,
    "creationTimeSeconds": 1647102010,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1359,
        "index": "A",
        "name": "Berland Poker",
        "type": "PROGRAMMING",
        "rating": 1000,
        "tags": [
            "brute force",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1359,
        "members": [
            {
                "handle": "_null_ptr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1590676500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 5939200,
    "source": "#include <iostream>\r\n#include <string>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <sstream>\r\n#include <queue>\r\n#include <deque>\r\n#include <bitset>\r\n#include <iterator>\r\n#include <list>\r\n#include <stack>\r\n#include <map>\r\n#include <set>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\n#include <functional>\r\n#include <numeric>\r\n#include <utility>\r\n#include <limits>\r\n#include <time.h>\r\n#include <math.h>\r\n#include <stdio.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n#include <assert.h>\r\n#define INF (int)1e9\r\n#ifdef LOCAL\r\n#define dbg(...) cerr << \"(\" << #__VA_ARGS__ << \"):\", dbg_out(__VA_ARGS__)\r\n#else\r\n#define dbg(...)\r\n#endif\r\n/*@author Alright*/\r\n#define fo(i,n) for(int i=0; i<n; i++)\r\n#define ar array\r\n#define Endl endl\r\n#define ll long long\r\n#define ld long double\r\n#define ull unsigned long long\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define PI 3.1415926535897932384626433832795l \r\n#define pb push_back\r\n#define pii pair<int,int>\r\n#define po pop_back\r\n#define all(x) x.begin(),x.end()\r\n#define sz(x) ((int)x.size())\r\n#define sqr(x) ((x)*(x))\r\n#define getunique(v) {sort(all(v)); v.erase(unique(all(v)), v.end());}\r\n#define mx 100005\r\n#define fi first\r\n#define se second\r\nusing namespace std;\r\n\r\n bool isPrime(int num){\r\n    bool flag=true;\r\n    for(int i = 2; i * i <= num; i++) {\r\n       if(num % i == 0) {\r\n          flag = false;\r\n          break;\r\n       }\r\n    }\r\n    return flag;}\r\n    bool isVowel(char ch) {\r\n\r\n    if(ch=='a' || ch=='e' || ch=='i' || ch=='o' || ch=='u')\r\n\r\n         return true;\r\n\r\n    else return false;\r\n\r\n}\r\n\r\nconst int M=1e9+7;\r\n        long long mod(long long x){\r\n            return ((x%M + M)%M);\r\n        }\r\n        long long add(long long a, long long b){\r\n            return mod(mod(a)+mod(b));\r\n        }\r\n        long long mul(long long a, long long b){\r\n            return mod(mod(a)*mod(b));\r\n        }\r\n    \r\n        ll modPow(ll a, ll b){\r\n            if(b==0)\r\n                return 1LL;\r\n            if(b==1)\r\n                return a%M;\r\n            ll res=1;\r\n            while(b){\r\n                if(b%2==1)\r\n                    res=mul(res,a);\r\n                a=mul(a,a);\r\n                b=b/2;\r\n            }\r\n            return res;\r\n        }\r\nbool sortbysec(const pair<int,int> &a,\r\n              const pair<int,int> &b)\r\n{\r\n    return (a.second < b.second);\r\n}\r\n\r\nll digitSum(ll n){\r\n    ll total=0;\r\n    while(n){\r\n        total+=n%10;\r\n        n=n/10;\r\n    }\r\n    return total;\r\n}\r\nvoid SieveOfEratosthenes(int n)\r\n{\r\n    bool prime[n+1];\r\n    memset(prime, true, sizeof(prime));\r\n  \r\n    for (int p=2; p*p<=n; p++)\r\n    {\r\n      \r\n        if (prime[p] == true)\r\n        { \r\n            \r\n            for (int i=p*2; i<=n; i += p)\r\n                prime[i] = false;\r\n        }\r\n    }\r\n    for (int p=2; p<=n; p++)\r\n       if (prime[p])\r\n          cout << p << \" \";\r\n}\r\nstring intobinary(int n) {\r\n    return bitset<8>(n).to_string();\r\n}\r\n\r\nbool isPowerOfTwo (ll x)\r\n{\r\n    \r\n    return x && (!(x&(x-1)));\r\n}\r\nll factorial(ll n)\r\n{\r\n    \r\n  return (n==1 || n==0) ? 1: n * factorial(n - 1);\r\n} \r\n\r\nll gcd(ll a, ll b)\r\n{\r\n  if(b==0)\r\n    return a;\r\n  return gcd(b,a%b);\r\n}\r\n\r\nll lcm(ll a, ll b)\r\n{\r\n  return (a/gcd(a,b))*b;\r\n}\r\n\r\nvector<int> adj[110000];\r\nll a[200005],b[200005];\r\nll n,m,x,k,y,i,j,t;\r\nstring st,str;\r\nll cnt=0;\r\nll sol=0;\r\nll sum=0,sum1=0,sum2=0;\r\nbool vis[100005];\r\nll dfs(ll node){\r\n    ll mi=a[node];\r\n    vis[node]=true;\r\n    for(auto child:adj[node]){\r\n        if(vis[child]) continue;\r\n       mi=min(mi,dfs(child));\r\n        vis[child]=1;\r\n    }\r\n    return mi;\r\n}\r\nvoid ans(){\r\ncin>>n>>m>>k;\r\nx=n/k;\r\nll a;\r\nif(x<m){\r\n     a=x;\r\n}\r\nelse  a=m;\r\nll b=((m-a)+(k-2))/(k-1);\r\ncout<<a-b<<endl;\r\n        }\r\n\r\nint main()\r\n{\r\nios_base::sync_with_stdio(false);\r\n  cin.tie(NULL);\r\nll testcase;\r\ncin>>testcase;\r\nwhile(testcase--){\r\n    ans();\r\n}\r\n    //dfs(i);\r\n}\r\n/*\r\n  ->Things to be careful for-\r\n     &floating point exception and with loop limits\r\n     & corner cases\r\n     & try to thunk of brute force approach\r\n     & keep rough copy\r\n     & try different approaches if one doesn't work\r\n     &be careful about RE\r\n                       -Alright\r\n*/\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n"
}