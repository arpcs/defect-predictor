{
    "id": 177691419,
    "contestId": 1359,
    "creationTimeSeconds": 1666552483,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1359,
        "index": "A",
        "name": "Berland Poker",
        "type": "PROGRAMMING",
        "rating": 1000,
        "tags": [
            "brute force",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1359,
        "members": [
            {
                "handle": "og_Saint"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1590676500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 4403200,
    "source": "/* Praveen Kumar */\r\n\r\n#include<bits/stdc++.h>\r\n#include <map>\r\n// #include<ext/pb_ds/assoc_container.hpp>\r\n// #include<ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace chrono;\r\n// using namespace __gnu_pbds;\r\n\r\n#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\r\n#define MOD 1000000007\r\n#define MOD1 998244353\r\n#define INF 1e18\r\n#define nline \"\\n\"\r\n#define pb push_back\r\n#define ppb pop_back\r\n#define mp make_pair\r\n#define ff first\r\n#define ss second\r\n#define PI 3.141592653589793238462\r\n#define set_bits __builtin_popcountll\r\n#define sz(x) ((int)(x).size())\r\n#define all(x) (x).begin(), (x).end()\r\n\r\n#ifdef og_saint\r\n#define debug(x) cerr << #x<<\" \"; _print(x); cerr << endl;\r\n#else\r\n#define debug(x);\r\n#endif\r\n\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double lld;\r\n// typedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag, tree_order_statistics_node_update > pbds; // find_by_order, order_of_key\r\n\r\nvoid _print(ll t) {cerr << t;}\r\nvoid _print(int t) {cerr << t;}\r\nvoid _print(string t) {cerr << t;}\r\nvoid _print(char t) {cerr << t;}\r\nvoid _print(lld t) {cerr << t;}\r\nvoid _print(double t) {cerr << t;}\r\nvoid _print(ull t) {cerr << t;}\r\n\r\ntemplate <class T, class V> void _print(pair <T, V> p);\r\ntemplate <class T> void _print(vector <T> v);\r\ntemplate <class T> void _print(set <T> v);\r\ntemplate <class T, class V> void _print(map <T, V> v);\r\ntemplate <class T> void _print(multiset <T> v);\r\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\r\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\n// void _print(pbds v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\n\r\n/*---------------------------------------------------------------------------------------------------------------------------*/\r\nll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}\r\nll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}\r\nvoid extendgcd(ll a, ll b, ll*v) {if (b == 0) {v[0] = 1; v[1] = 0; v[2] = a; return ;} extendgcd(b, a % b, v); ll x = v[1]; v[1] = v[0] - v[1] * (a / b); v[0] = x; return;} //pass an arry of size1 3\r\nll mminv(ll a, ll b) {ll arr[3]; extendgcd(a, b, arr); return arr[0];} //for non prime b\r\nll mminvprime(ll a, ll b) {return expo(a, b - 2, b);}\r\nbool revsort(ll a, ll b) {return a > b;}\r\nvoid swap(int &x, int &y) {int temp = x; x = y; y = temp;}\r\nll combination(ll n, ll r, ll m, ll *fact, ll *ifact) {ll val1 = fact[n]; ll val2 = ifact[n - r]; ll val3 = ifact[r]; return (((val1 * val2) % m) * val3) % m;}\r\nvoid google(int t) {cout << \"Case #\" << t << \": \";}\r\nvector<ll> sieve(int n) {int*arr = new int[n + 1](); vector<ll> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}\r\nll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\r\nll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}\r\nll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}\r\nll mod_div(ll a, ll b, ll m) {a = a % m; b = b % m; return (mod_mul(a, mminvprime(b, m), m) + m) % m;}  //only for prime m\r\nll phin(ll n) {ll number = n; if (n % 2 == 0) {number /= 2; while (n % 2 == 0) n /= 2;} for (ll i = 3; i <= sqrt(n); i += 2) {if (n % i == 0) {while (n % i == 0)n /= i; number = (number / i * (i - 1));}} if (n > 1)number = (number / n * (n - 1)) ; return number;} //O(sqrt(N))\r\n/*--------------------------------------------------------------------------------------------------------------------------*/\r\nbool isSquare(int x){\r\n\tint y = sqrt(x);\r\n\treturn y*y == x;\r\n}\r\nconst int N = 1e5 + 5;\r\n\r\nint n, a[N];\r\n// T(O) = O(log(n));\r\nvoid db(int n){\r\n    if(n == 1){\r\n        cout << 1;\r\n    }else{\r\n        db(n/2);\r\n        cout << n%2;\r\n    }\r\n}\r\n// int sol(char c, int n){\r\n//     int ans = 0;\r\n//         for(int i = 0; i < n; i++){\r\n//             if(isdigit(c)){\r\n//                 ans += (c-'0');\r\n//                 ans *= 10;\r\n//             }\r\n//         }\r\n//     cout << ans << endl;\r\n// }\r\nint arr[(int)1e6+10];\r\nset<long long int> t_prime;\r\nvoid t_primes(){\r\n    t_prime.insert(4);\r\n    for(long long int i = 3; i < (int)1e6+1; i+=2){\r\n        if(arr[i] == 0){\r\n            t_prime.insert(i*i);\r\n            for(long long int j = i; j <= 1e6; j+=i){\r\n                arr[j] = 1;\r\n            }\r\n        }\r\n    }\r\n}\r\nvoid solve(){\r\n    int  t;\r\n    cin >> t;\r\n    while(t--){\r\n        long long int n, m, k;\r\n        cin >> n >> m >> k;\r\n        \r\n        if(n == k || n == m){\r\n            if(m == 1){\r\n                cout << 1 << endl;\r\n            }else{\r\n                cout << 0 << endl;\r\n            }\r\n        }else{\r\n            int x = n/k;\r\n            if(m <= x){\r\n                cout << m << endl;\r\n            }else{\r\n                long long int ans = 0;\r\n                if((m-x) <= k-1){\r\n                    ans = x-1;\r\n                }else{\r\n                    if((m-x)%2 == 0){\r\n                        if((k-1)%2 == 0){\r\n                            ans = x-(m-x)/(k-1);\r\n                        }else{\r\n                            ans = x-(m-x)/(k-2);\r\n                        }\r\n                    }else{\r\n                        if((k-1)%2 == 0){\r\n                            ans = x-(m-x+1)/(k-1);\r\n                        }else{\r\n                            ans = x-(m-x+1)/(k-2);\r\n                        }\r\n                    }\r\n                    // ans = x-(((m-x))/(k-1));\r\n                }\r\n                cout << ans << endl;\r\n            }\r\n            \r\n            // eo o+1/e\r\n            // ee e/e\r\n            // oe \r\n            // oo\r\n        }\r\n    }\r\n}\r\n// 111\r\n// 111\r\n\r\n// 1l1\r\nint main() {\r\n#ifdef og_saint\r\n\tfreopen(\"Error.txt\", \"w\", stderr);\r\n#endif\r\n\tfastio();\r\n\tauto start1 = high_resolution_clock::now();\r\n\tsolve();\r\n\tauto stop1 = high_resolution_clock::now();\r\n\tauto duration = duration_cast<microseconds>(stop1 - start1);\r\n#ifdef og_saint\r\n\tcerr << \"Time: \" << duration . count() / 1000 << endl;\r\n#endif\r\n}\r\n// 2 2 2 2"
}