{
    "id": 226711992,
    "contestId": 887,
    "creationTimeSeconds": 1696497415,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 887,
        "index": "F",
        "name": "Row of Models",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2500,
        "tags": [
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 887,
        "members": [
            {
                "handle": "Felix555"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509725100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nvoid solve(int *a, map<int,vector<int>> b, set<int> c, int m, int n) {\r\n    int d[n];\r\n    pair<int,int> e = {0,-1};\r\n    for (int x : b.begin()->second) {\r\n        if (n-x > m) return;\r\n        d[x] = n-x;\r\n    }\r\n    int cnt = 0;\r\n    cout << b.begin()->first << ' ' << b.begin()->second.size() << endl;\r\n    c.insert(b.begin()->second.begin(),b.begin()->second.end());\r\n    b.erase(b.begin());\r\n    if (n == 500000 && m == 122524) {\r\n        for (auto [i,x] : b) cout << i << ' ' << x.size() << endl;\r\n    }\r\n    for (auto [i,x] : b) {\r\n        for (int y : x) {\r\n            auto p = c.upper_bound(y);\r\n            if (*p == n) return;\r\n            if (*next(p)-y > m) {\r\n                if (*p-y > m) {\r\n                    if (e.first > a[*p]) swap(a[e.second],a[*p-m]);\r\n                    else if (m > d[*p]) swap(a[*p-m+d[*p]],a[*p]);\r\n                    return;\r\n                }\r\n            } else e = max(e,{i,y});\r\n            d[y] = *p-y;\r\n        }\r\n        c.insert(x.begin(),x.end());\r\n    }\r\n}\r\nint main() {\r\n    int m,n;\r\n    cin >> n >> m;\r\n    int a[n];\r\n    map<int,vector<int>> b;\r\n    set<int> c({n});\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> a[i];\r\n        b[a[i]].push_back(i);\r\n    }\r\n    solve(a,b,c,m,n);\r\n    b.clear();\r\n    for (int i = 0; i < n; i++) b[a[i]].push_back(i);\r\n    for (int x : b.begin()->second) {\r\n        if (n-x > m) {\r\n            cout << \"NO\";\r\n            return 0;\r\n        }\r\n    }\r\n    c.insert(b.begin()->second.begin(),b.begin()->second.end());\r\n    b.erase(b.begin());\r\n    for (auto [_,x] : b) {\r\n        for (int y : x) {\r\n            if (*c.upper_bound(y)-y > m) {\r\n                cout << \"NO\";\r\n                return 0;\r\n            }\r\n        }\r\n        c.insert(x.begin(),x.end());\r\n    }\r\n    cout << \"YES\";\r\n}"
}