{
    "id": 32082227,
    "contestId": 887,
    "creationTimeSeconds": 1509908892,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 887,
        "index": "F",
        "name": "Row of Models",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2500,
        "tags": [
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 887,
        "members": [
            {
                "handle": "farqd"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509725100
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 3276800,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <queue>\r\n#include <algorithm>\r\n#include <set>\r\n#include <map>\r\n#include <bits/stdc++.h>\r\n\r\n\r\nusing namespace std;\r\n\r\nint n,k;\r\nconst int N = 100005;\r\nint hei[N];\r\nint mi[N];\r\nvector<int> only[N];\r\nvector<int> smaller[N];\r\nvector<int> bad;\r\n\r\nint main()\r\n{\r\n    ios::sync_with_stdio(0);\r\n    cin>>n>>k; for(int i=0; i<n; i++)\r\n    {\r\n        cin>>hei[i];\r\n    }\r\n    set<pair<int, int> > s;\r\n    s.insert({0, n});\r\n\r\n    for(int i=n-1; i>=0; i--)\r\n    {\r\n        while(s.begin()->second > i + k)\r\n            s.erase(s.begin());\r\n\r\n        while(!s.size() == 1)\r\n        {\r\n            auto it = s.begin();\r\n            it++;\r\n            if(it->second > i + k)\r\n                s.erase(it);\r\n        }\r\n\r\n        vector<int> sm;\r\n        auto it = s.begin();\r\n        if(it->first <= hei[i])\r\n            sm.push_back(it->second);\r\n\r\n        it++; \r\n        if(it != s.end() && it->first <= hei[i])\r\n            sm.push_back(it->second);\r\n\r\n        if(sm.size() == 0)\r\n            bad.push_back(i);\r\n        if(sm.size() == 1)\r\n            only[sm[0]].push_back(i);\r\n        for(int x : sm)\r\n            smaller[i].push_back(x);\r\n        mi[i] = s.begin()->first;\r\n        s.insert({hei[i] + 1, i});\r\n    }\r\n\r\n    // for(int x : bad) cerr<< x<<endl;\r\n    if(bad.size() == 0)\r\n    {\r\n        cout << \"YES\"<<endl; return 0;\r\n    }\r\n    reverse(bad.begin(), bad.end());\r\n    int toFix = bad[0] + k;\r\n    toFix = min(n-1, toFix);\r\n    if(toFix < bad.back())\r\n    {\r\n        cout << \"NO\"<<endl; return 0;\r\n    }\r\n \r\n    int reqH = 1000000000; \r\n    \r\n    for(int x : bad)\r\n        reqH = min(reqH, hei[x]-1);\r\n        \r\n    if(mi[toFix] > reqH)\r\n    {\r\n        cout << \"NO\"<<endl; return 0;\r\n    }\r\n\r\n    for(int i=toFix+1; i<n; i++)\r\n    {\r\n        if(hei[i] > reqH)\r\n            continue;\r\n        if(mi[toFix] > hei[i])\r\n            continue;\r\n        bool br = false;\r\n        for(int x : only[i])\r\n        {\r\n            if(i - x > k && hei[x] <= hei[toFix]) \r\n            {\r\n                br = true;\r\n            }\r\n        }\r\n        if(br) \r\n            break;\r\n        // cerr << toFix <<\" \" << i<<endl;\r\n        cout << \"YES\"<<endl; return 0;\r\n    }\r\n\r\n    cout <<\"NO\"<<endl;\r\n\r\n\r\n}\r\n"
}