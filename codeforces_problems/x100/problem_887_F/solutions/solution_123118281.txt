{
    "id": 123118281,
    "contestId": 887,
    "creationTimeSeconds": 1626795450,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 887,
        "index": "F",
        "name": "Row of Models",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2500,
        "tags": [
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 887,
        "members": [
            {
                "handle": "Berl1n"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509725100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 52531200,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n#define ll  long long\r\n#define pll pair<ll,ll>\r\n#define ff first\r\n#define ss second\r\n#define pb push_back\r\n#define endl \"\\n\"\r\nmt19937_64 rnd;\r\n\r\nconst ll maxn=5e5+30;\r\nconst ll mod =1e9+7 ;\r\nconst ll base=2e9;\r\n/// you will be the best but now you just are trash\r\n/// goal 2/7\r\nll a[maxn];\r\nvector<ll> adj[maxn];\r\n\r\npll st[4*maxn];\r\nstruct Seqment_tree\r\n{\r\n    pll mer(pll a,pll b)\r\n    {\r\n        if (b.ff) a.ss=b.ss;\r\n        a.ff+=b.ff;\r\n        return a;\r\n    }\r\n    pll  get(ll id,ll left,ll right,ll x,ll y)\r\n    {\r\n        if (left>y||right<x)\r\n            return make_pair(0,0);\r\n        if (x<=left&&right<=y)\r\n        {\r\n            return st[id];\r\n        }\r\n        ll mid =(left+right)/2;\r\n        return mer(get(id*2,left,mid,x,y),get(id*2+1,mid+1,right,x,y));\r\n\r\n    }\r\n    void update(ll id,ll left,ll right, ll pos,ll diff)\r\n    {\r\n        if (pos<left||pos>right)\r\n            return ;\r\n        if (left==right)\r\n        {\r\n            st[id].ff=diff;\r\n            if (st[id].ff) st[id].ss=left;\r\n            return;\r\n        }\r\n        ll mid =(left+right)/2;\r\n        update(id*2,left,mid,pos,diff);\r\n        update(id*2+1,mid+1,right,pos,diff);\r\n        st[id]=mer(st[id*2],st[id*2+1]);\r\n\r\n    }\r\n}man;\r\n\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    if (fopen(\"t.inp\", \"r\"))\r\n    {\r\n        freopen(\"test.inp\", \"r\", stdin);\r\n        freopen(\"test.out\", \"w\", stdout);\r\n    }\r\n    ll n, k;\r\n    cin>> n>> k;\r\n    vector<ll> vt;\r\n    for (int i=1; i<=n; i++)\r\n    {\r\n        cin>>a[i];\r\n        vt.pb(a[i]);\r\n    }\r\n    sort(vt.begin(),vt.end());\r\n    vt.resize(unique(vt.begin(),vt.end())-vt.begin());\r\n    for (int i=1; i<=n; i++)\r\n    {\r\n        a[i]=lower_bound(vt.begin(),vt.end(),a[i])-vt.begin()+1;\r\n        adj[a[i]].pb(i);\r\n    }\r\n    ll len=vt.size();\r\n    vector<ll> vt1;\r\n    for (int i=1;i<=len;i++)\r\n    {\r\n        for (auto to:adj[i])\r\n        {\r\n           man.update(1,1,n,to,1);\r\n           auto p=man.get(1,1,n,to+1,min(n,to+k));\r\n           cout <<to<<\" \"<<p.ff<<endl;\r\n           if (to+k>n||p.ff)\r\n           {\r\n            //  if (p.ff==1) adj1[p.ss].pb(to);\r\n           }\r\n           else\r\n           {\r\n               vt1.pb(to);\r\n           }\r\n        }\r\n    }\r\n    if (!vt1.size())\r\n    {\r\n        cout <<\"YES\"<<endl;\r\n        return 0;\r\n    }\r\n    sort(vt1.begin(),vt1.end());\r\n    ll l=vt1.back()+1;\r\n    ll r=vt1[0]+k;\r\n    if (l>r)\r\n    {\r\n        cout <<\"NO\";\r\n        return 0;\r\n    }\r\n    ll t=base;\r\n    if(r+k>n) t=0;\r\n    else\r\n    {\r\n        for (int j=l;j<=r+k;j++)\r\n        {\r\n            t=min(t,a[j]);\r\n        }\r\n    }\r\n  //  cout <<t<<endl;\r\n    for (int j=r;j<=n;j++)\r\n    {\r\n        if (a[j]<a[vt1.back()]&&a[j]>t)\r\n        {\r\n           cout <<\"YES\"<<endl;\r\n           return 0;\r\n        }\r\n    }\r\n    cout <<\"NO\"<<endl;\r\n}\r\n"
}