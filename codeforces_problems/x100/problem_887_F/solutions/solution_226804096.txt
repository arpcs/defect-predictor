{
    "id": 226804096,
    "contestId": 887,
    "creationTimeSeconds": 1696549061,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 887,
        "index": "F",
        "name": "Row of Models",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2500,
        "tags": [
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 887,
        "members": [
            {
                "handle": "Felix555"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509725100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 106,
    "timeConsumedMillis": 1543,
    "memoryConsumedBytes": 78336000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#pragma GCC optimize(\"Ofast\") \r\n#pragma GCC target(\"avx,avx2,fma\")\r\nbool process(int *a, vector<int> &b, set<int> &c, int idx, int p, int &q, int m, int n) {\r\n    for (int i = p+1; i < n; i++) {\r\n        if (b[i] <= m && a[idx] > a[i] && a[i] > a[p]) {\r\n            q = i;\r\n            c.erase(q);\r\n            c.insert(p-m);\r\n            return 1;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\nvoid solve(int *a, map<int,vector<int>> &b, int m, int n) {\r\n    int q=-1,e[n];\r\n    set<int> c({n});\r\n    vector<int> d(n);\r\n    for (int &x : b.begin()->second) {\r\n        if (n-x > m) {\r\n            printf(\"NO\");\r\n            return;\r\n        }\r\n        e[x] = n-x;\r\n    }\r\n    c.insert(b.begin()->second.begin(),b.begin()->second.end());\r\n    b.erase(b.begin());\r\n    for (auto &[i,x] : b) {\r\n        for (int &y : x) {\r\n            if (q+1) {\r\n                if (c.count(y) && *c.upper_bound(q)-q > m || *c.upper_bound(y)-y > m) {\r\n                    printf(\"NO\");\r\n                    return;\r\n                }\r\n            } else {\r\n                auto p = c.upper_bound(y);\r\n                if (*p-y > m) {\r\n                    if (process(a,d,c,y,*p,q,m,n)) continue;\r\n                    if (m > e[*p] && *p+e[*p] >= m) {\r\n                        q = *p;\r\n                        c.erase(q);\r\n                        c.insert(q-m+e[q]);\r\n                    } else {\r\n                        printf(\"NO\");\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (int &y : x) {\r\n            auto p = c.upper_bound(y);\r\n            if (*p != n) {\r\n                if (*next(p)-y > m) d[*p] = INT_MAX;\r\n                else d[*p] = max(*next(p)-y,d[*p]);\r\n            }\r\n            e[y] = *p-y;\r\n        }\r\n        c.insert(x.begin(),x.end());\r\n    }\r\n    printf(\"YES\");\r\n}\r\nint main() {\r\n    int m,n;\r\n    scanf(\"%d%d\",&n,&m);\r\n    int a[n];\r\n    map<int,vector<int>> b;\r\n    for (int i = 0; i < n; i++) {\r\n        scanf(\"%d\",&a[i]);\r\n        b[a[i]].push_back(i);\r\n    }\r\n    for (auto &[_,x] : b) reverse(x.begin(),x.end());\r\n    solve(a,b,m,n);\r\n}"
}