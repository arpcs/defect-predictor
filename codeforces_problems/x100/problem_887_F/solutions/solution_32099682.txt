{
    "id": 32099682,
    "contestId": 887,
    "creationTimeSeconds": 1509982285,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 887,
        "index": "F",
        "name": "Row of Models",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2500,
        "tags": [
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 887,
        "members": [
            {
                "handle": "mibig"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509725100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 96,
    "timeConsumedMillis": 530,
    "memoryConsumedBytes": 31948800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll  long long\r\n#define pb  push_back\r\n#define vi  vector<int>\r\n#define vvi vector<vi >\r\n#define all(x) x.begin(), x.end()\r\n\r\nint n, k;\r\nvi  a, bad, sbad, ubound, lbound, az, lb;\r\nset<pair<int, int> > se;\r\nvector<pair<int, int> > p;\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin >> n >> k;\r\n    a.resize(n);\r\n    for (int i = 0; i < n; ++i)\r\n        cin >> a[i];\r\n    bad.assign(n, 0);\r\n    ubound.assign(n, 1e9 + 1);\r\n    lbound.assign(n, 0);\r\n    for (int i = n - k + 1; i < n; ++i)\r\n        se.insert(make_pair(a[i], i));\r\n    for (int i = n - k - 1; i >= 0; --i) {\r\n        se.insert(make_pair(a[i + 1], i + 1));\r\n        int ind = se.begin()->second;\r\n        if (se.begin()->first >= a[i])\r\n            bad[i] = 1;\r\n        else if (k == 1 || (++se.begin())->first >= a[i])\r\n            ubound[ind] = min(ubound[ind], a[i]);\r\n        lbound[i] = se.begin()->first;\r\n        se.erase(make_pair(a[i + k], i + k));\r\n    }\r\n    sbad = bad;\r\n    for (int i = 1; i < n; ++i)\r\n        sbad[i] += sbad[i - 1];\r\n    int x = 0;\r\n    while (x < n && !bad[x]) ++x;\r\n    if (x == n) {\r\n        cout << \"YES\" << endl;\r\n        return 0;\r\n    }\r\n    if (x + k + 1 >= n || sbad[n - 1] - sbad[x + k] > 1) {\r\n        cout << \"NO\" << endl;\r\n        return 0;\r\n    }\r\n    if (sbad[n - 1] - sbad[x + k] == 1) {\r\n        int y = x + k + 1;\r\n        while (!bad[y]) ++y;\r\n        if (a[x] <= a[y]) {\r\n            cout << \"NO\" << endl;\r\n            return 0;\r\n        }\r\n        for (int z = x + 1; z <= x + k; ++z) {\r\n            if (sbad[y - 1] - sbad[z] > 0) continue;\r\n            if (lbound[y] < a[z] && a[z] < ubound[y] && lbound[z] < a[y]) {\r\n                cout << \"YES\" << endl;\r\n                return 0;\r\n            }\r\n        }\r\n        cout << \"NO\" << endl;\r\n        return 0;\r\n    }\r\n    int z = x + 1;\r\n    while (sbad[x + k] - sbad[z] > 0) ++z;\r\n    for (; z <= x + k; ++z)\r\n        p.pb(make_pair(a[z], lbound[z]));\r\n    sort(all(p));\r\n    for (int i = 0; i < p.size(); ++i)\r\n        if (az.empty() || p[i].second < lb.back())\r\n            az.pb(p[i].first), lb.pb(p[i].second);\r\n    for (int y = x + k + 1; y < n; ++y) {\r\n        if (a[x] <= a[y]) continue;\r\n        int s = upper_bound(all(az), ubound[y] - 1) - az.begin();\r\n        if (s > 0 && lb[s - 1] < a[y]) {\r\n            cout << \"YES\" << endl;\r\n            return 0;\r\n        }\r\n    }\r\n    cout << \"NO\" << endl;\r\n\r\n    return 0;\r\n}"
}