{
    "id": 32095744,
    "contestId": 887,
    "creationTimeSeconds": 1509972019,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 887,
        "index": "F",
        "name": "Row of Models",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2500,
        "tags": [
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 887,
        "members": [
            {
                "handle": "Krydom_Yuudachi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509725100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 106,
    "timeConsumedMillis": 561,
    "memoryConsumedBytes": 47923200,
    "source": "#include <cstdio>\n#include <set>\n#include <vector>\n#define FOR(i, l, r) for(int i = l; i <= r; ++i)\n\nusing namespace std;\n\nconst int N = 1000010, inf = 2e9;\n\nstruct poi\n{\n\tint val, pos;\n\tpoi(){}\n\tpoi(int x, int y) {val = x; pos = y;}\n};\nbool operator < (poi a, poi b) {return a.val == b.val ? a.pos < b.pos : a.val < b.val;}\nset <poi> m;\nset <poi> :: iterator it;\nvector <int> mx[N];\n\nint n, k, high, mn, tot, top;\nint a[N], un[N], ch[N], st[N], posi[N];\n\nvoid get_un()\n{\n\tm.insert(poi(0, n + 1));\n\tfor(int i = n; i; --i)\n\t{\n\t\tif (i + k <= n)\n\t\t\tm.erase(m.lower_bound(poi(a[i + k + 1], i + k - 1)));\n\t\tint cnt = 0;\n\t\tfor(it = m.begin(); it != m.end() && it -> val < a[i] && cnt <= 1; ++it) ++cnt;\n\t\tif (!cnt)\n\t\t{\n\t\t\tun[++tot] = i;\n\t\t\thigh = min(high, a[i]);\n\t\t}\n\t\telse if (cnt == 1 && i + k <= n) mx[m.begin() -> pos].push_back(i);\n\t\tm.insert(poi(a[i], i));\n\t}\n}\n\nvoid get_posi()\n{\n\tst[top = 1] = n + 1;\n\tfor(int i = n; i; --i)\n\t{\n\t\tint l = 1, r = top, ans;\n\t\twhile (l <= r)\n\t\t{\n\t\t\tint mid = (l + r) >> 1;\n\t\t\tif (a[st[mid]] < a[i]) ans = mid, l = mid + 1; else r = mid - 1;\n\t\t}\n\t\tposi[i] = st[ans];\n\t\twhile (a[i] < a[st[top]]) --top;\n\t\tst[++top] = i;\n\t}\n}\nint main()\n{\n\tscanf(\"%d%d\", &n, &k); high = inf;\n\tFOR(i, 1, n) scanf(\"%d\", &a[i]);\n\tget_un(); if (!tot) {puts(\"YES\"); return 0;}\n\tif (un[1] - un[tot] >= k) {puts(\"NO\"); return 0;}\n\tmn = inf; FOR(i, un[1] + 1, un[tot] + k) mn = min(mn, a[i]);\n\tFOR(i, un[1] + 1, un[tot] + k) if (a[i] == mn) ch[i] = 1;\n\tget_posi();\n\tFOR(i, un[1] + k + 1, n) if (a[i] < high)\n\t{\n\t\tint tmp = inf, cm = 0;\n\t\tfor(int j = 0; j < mx[i].size(); ++j) tmp = min(tmp, a[mx[i][j]]);\n\t\tif (mn < tmp) {puts(\"YES\"); return 0;}\n\t\tfor(int j = 0; j < mx[i].size(); ++j) cm = max(cm, mx[i][j]);\n\t\tcm = max(cm, posi[i] - k);\n\t\tif (cm <= un[1] + k) {puts(\"YES\"); return 0;}\n\t}\n\tputs(\"NO\");\n\treturn 0;\n}\n"
}