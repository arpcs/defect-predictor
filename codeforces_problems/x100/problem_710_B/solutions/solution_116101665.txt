{
    "id": 116101665,
    "contestId": 710,
    "creationTimeSeconds": 1620907691,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 710,
        "index": "B",
        "name": "Optimal Point on a Line",
        "type": "PROGRAMMING",
        "rating": 1400,
        "tags": [
            "brute force",
            "sortings"
        ]
    },
    "author": {
        "contestId": 710,
        "members": [
            {
                "handle": "Hunkihas"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1471875000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 5324800,
    "source": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\ntypedef long long ll;\r\n\r\nint idx = 1;\r\nll n, a[100005], avg=0, x[100005];\r\n\r\n\r\nint main() {\r\n\tscanf(\"%lld\", &n);\r\n\tfor(int i=0;i<n;i++) {\r\n\t\tscanf(\"%lld\", &a[i]);\r\n\t\tavg += a[i];\r\n\t}\r\n\tavg *= n;\r\n\tsort(a, a+n);\r\n\tif(n == 1 ||  n == 2) {\r\n\t\tprintf(\"%d\\n\", a[0]);\r\n\t} else {\r\n\t\tint id;\r\n\t\tfor(int i=0;i<n;i++) {\r\n\t\t\tif(a[i] >= avg && a[i+1] <= avg) {\r\n\t\t\t\tid = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tll ans1=0, ans2=0;\r\n\t\tfor(int i=0;i<n;i++) {\r\n\t\t\tans1 += abs(a[id] - a[i]);\r\n\t\t\tans2 += abs(a[id] - a[i]);\r\n\t\t}\r\n\t\tif(id+1 == n) printf(\"%lld\\n\", a[id]);\r\n\t\telse {\r\n\t\t\tif(ans1 <= ans2) printf(\"%lld\\n\", a[id]);\r\n\t\t\telse printf(\"%lld\\n\", a[id+1]);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}",
    "suggested_categories": [
        "algorithm",
        "sorting",
        "input/output",
        "integer",
        "array",
        "mathematics",
        "average",
        "loop",
        "conditional statements",
        "logic",
        "data structure",
        "c++",
        "code quality",
        "code metrics",
        "programming",
        "computational complexity",
        "optimization",
        "debugging",
        "efficiency",
        "numerical analysis"
    ]
}