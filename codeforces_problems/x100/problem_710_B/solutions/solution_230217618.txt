{
    "id": 230217618,
    "contestId": 710,
    "creationTimeSeconds": 1698506531,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 710,
        "index": "B",
        "name": "Optimal Point on a Line",
        "type": "PROGRAMMING",
        "rating": 1400,
        "tags": [
            "brute force",
            "sortings"
        ]
    },
    "author": {
        "contestId": 710,
        "members": [
            {
                "handle": "qzx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1471875000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <string>\r\n#include <map>\r\n#include <set>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <iomanip>\r\n#include <stdlib.h>\r\n\r\n\r\nusing namespace std;\r\n\r\nint partion(vector<int>& nums, int left, int right,int k){\r\n    if(right = left){\r\n        return nums[right];\r\n    }\r\n    else{\r\n        int random = left + (rand() % (right - left));\r\n        \r\n        int equal_counter = 0;\r\n        int i = left;\r\n        for(int j = left; j <= right; j++){\r\n            if(nums[j] == nums[random]){\r\n                equal_counter++;\r\n            }\r\n            else if(nums[j] < nums[random]){\r\n                swap(nums[i],nums[j]);\r\n                i++;\r\n            }\r\n        }\r\n\r\n        int tmp = i;\r\n        for(int j = i; j <= right; j++){\r\n            if(nums[j] == nums[random]){\r\n                swap(nums[i],nums[j]);\r\n            }\r\n        }\r\n\r\n        if(k < tmp){\r\n            return partion(nums,left,tmp-1,k);\r\n        }\r\n        else if(k < tmp + equal_counter){\r\n            return nums[random];\r\n        }\r\n        else{\r\n            return partion(nums,tmp + equal_counter, right , k - tmp - equal_counter);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\n\r\nint main() {\r\n    std::ios::sync_with_stdio(0);\r\n    std::cin.tie(0);\r\n\r\n    int n;\r\n    cin >> n;\r\n    vector<int> nums(n);\r\n    for(int i = 0; i < n; i++){\r\n        cin >> nums[i];\r\n    }\r\n    if(n % 2 == 0){\r\n        cout << partion(nums,0,n-1,(n/2) - 1);\r\n    }\r\n    else{\r\n        cout <<  partion(nums,0,n-1,n/2);\r\n    }\r\n    return 0;\r\n}\r\n"
}