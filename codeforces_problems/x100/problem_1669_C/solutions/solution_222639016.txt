{
    "id": 222639016,
    "contestId": 1669,
    "creationTimeSeconds": 1694285769,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1669,
        "index": "C",
        "name": "Odd/Even Increments",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "greedy",
            "greedy",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1669,
        "members": [
            {
                "handle": "ReemRefaat"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1650551700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define Friendy ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n#define ll long long\r\n#define sz size\r\nbool comp(pair<ll,ll>p1,pair<ll,ll>p2){\r\nreturn p1.first<p2.first;\r\n}\r\nll mult(ll a,ll b, ll m)\r\n{\r\n    return ((a%m)*(b%m))%m;\r\n}\r\n/*ll fastPower(ll x, ll n)\r\n{\r\n    ll res=1;\r\n    while(n>0)\r\n    {\r\n        if(n%2==1)\r\n        res*=x;\r\n        x=x*x;\r\n        n/=2;\r\n    }\r\n    return res;\r\n}*/\r\n/*bool isBinaryPalindrome(int n){\r\n    string  binary=\"\";\r\n    while(n>0){\r\n        binary+=to_string(n%2);\r\n        n/=2;\r\n    }\r\n    int l=0,r=binary.sz()-1;\r\n    while(l<r){\r\n        if(binary[l]!=binary[r])\r\n        return false;\r\n        l++;\r\n        r--;\r\n    }\r\n}*/\r\n/*void merge(int arr[],int lb,int ub){\r\n     int mid=(lb+ub)/2;\r\n    int i=lb,j=mid+1,k=lb;\r\n    int b[ub-lb+1];\r\n    while(i<=mid&&j<=ub){\r\n        if(arr[i]<arr[j])\r\n            b[k++]=arr[i++];\r\n        else\r\n            b[k++]=arr[j++];\r\n    }\r\n\r\n    while(i<=mid){\r\n    b[k++]=arr[i++];\r\n}\r\n while(j<=ub){\r\n    b[k++]=arr[j++];\r\n}\r\nfor(i=0;i<(ub-lb+1);i++)\r\narr[i]=b[i];\r\n}\r\nvoid mergesort(int arr[],int lb,int ub){\r\n\r\n        int mid=(lb+ub)/2;\r\n        if(lb>=ub)\r\n        return;\r\n\r\n        mergesort(arr,lb,mid);\r\n        mergesort(arr,mid+1,ub);\r\n        merge(arr,lb,ub);\r\n    return;\r\n}*/\r\n/*bool isPalindrome(string s){\r\n     int l=0,r=s.sz()-1;\r\n    while(l<r){\r\n        if(s[l]!=s[r])\r\n        return false;\r\n        l++;\r\n        r--;\r\n\r\n    }\r\n    return true;\r\n}*/\r\nbool PowOfTwo(ll n)\r\n{\r\n    return (n>0)&&((n&(n-1))==0);\r\n}\r\n/*bool isSqr(ll x){\r\n    ll y=sqrt(x);\r\n    return y*y==x;\r\n}*/\r\n/*bool isPrime(int n)\r\n{\r\n    if(n==0||n==1) return false;\r\n    for(int i=2;i<=sqrt(n);i++)\r\n    {\r\n        if(n%i==0)\r\n        return false;\r\n    }\r\n    return true;\r\n}*/\r\n\r\n/*void addEdge(int v, int u) {\r\n\tadj[v].push_back(u);\r\n\tadj[u].push_back(v);\r\n}*/\r\n\r\nint main()\r\n{ //Don't stop until u r proud <3\r\n Friendy\r\nint t; cin>>t;\r\nwhile(t--){\r\nint n; cin>>n;\r\nint a[n];\r\nfor(int i=0;i<n;i++) cin>>a[i];\r\nbool ch1=0,ch2=0,ch3=0,ch4=0;\r\n  for(int i=0;i<n;i++){\r\n            if(i%2==0){\r\n                if(a[i]%2==1) ch1=1;\r\n                else ch2=1;\r\n            }\r\n                else {\r\n                if(a[i]%2==1) ch3 = 1;\r\n                else ch4=1;\r\n            }\r\n        }\r\n\r\n        if(ch1&&ch2)\r\n            cout<<\"NO\\n\";\r\n        else if(ch3&&ch4)\r\n            cout<<\"NO\\n\";\r\n        else\r\n            cout<<\"YES\\n\";\r\n\r\n}\r\nreturn 0;\r\n}\r\n"
}