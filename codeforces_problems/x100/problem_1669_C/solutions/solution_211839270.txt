{
    "id": 211839270,
    "contestId": 1669,
    "creationTimeSeconds": 1688308211,
    "relativeTimeSeconds": 1211,
    "problem": {
        "contestId": 1669,
        "index": "C",
        "name": "Odd/Even Increments",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "greedy",
            "greedy",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1669,
        "members": [
            {
                "handle": "knightstour"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1688307000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#pragma GCC optimize(\"O3\")\r\n#pragma GCC optimize(\"Ofast,unroll-loops\")\r\n\r\n#include<bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n#define debug(x) cout<<\"#\"<<\" \"<<x<<endl;\r\n#define debugset(st) cout<<\"[\"; for(auto it:st) {cout<<it<<\",\";} cout<<\"]\"<<endl;\r\n#define debugmap(mp) cout<<\"[\"; for(auto it:mp) {cout<<\"[\"<<it.first<<\",\"<<it.second<<\"]\"<<\",\";} cout<<\"]\"<<endl;\r\n#define forl(i,n) for(int i=0;i<n;i++)\r\n#define endl \"\\n\"\r\n#define pr(n) cout<<setprecision(n)<<endl;\r\n#define ll long long int\r\n#define sz(a) (int)a.size()\r\n#define pb(x) push_back(x)\r\n#define pp pop_back\r\n#define all(a) a.begin(),a.end()\r\n#define rall(a) a.rbegin(),a.rend()\r\n\r\ntemplate<typename T>\r\nT add(T a, T b)\r\n{\r\n    return a+b;\r\n}\r\ntemplate<typename T>\r\nT mul(T a,T b)\r\n{\r\n    return a*b;\r\n}\r\n\r\ntemplate<typename T>\r\nvoid func(T n)\r\n{\r\n    cout<<n<<endl;//exit stratgy for one argument\r\n}\r\ntemplate<typename T,typename... Args>\r\nvoid func(T a,Args... b)\r\n{\r\n    cout<<a<<endl;\r\n    func(b...);\r\n}\r\n\r\ntypedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> indexed_set;\r\n\r\nconst int M=1e9+7;\r\nconst int  N=1e7+19;\r\nll calpow(ll base,ll n)\r\n{\r\n    ll res=1;\r\n    while(n>0)\r\n    {\r\n        if(n&1)\r\n        {\r\n            res=res*base;\r\n            res%=M;\r\n\r\n        }\r\n        n=n>>1;\r\n        base=(base*base)%M;\r\n    }\r\n return res;\r\n}\r\nll modinv(ll base)\r\n{\r\n    return calpow(base,M-2);\r\n}\r\nll ncr(ll n,ll r)\r\n{\r\n    vector<ll>fact(n+1,1);\r\n    for(ll i=2;i<=n;i++)\r\n    {\r\n        fact[i]=(fact[i-1]*i)%M;\r\n    }\r\n    ll inv=modinv(fact[r])*modinv(fact[r]);\r\n    inv%=M;\r\n    return (fact[n]*inv)%M;\r\n}\r\nll getMSB(ll n) {\r\n      n|=(n>>1);\r\n      n|=(n>>2);\r\n      n|=(n>>4);\r\n      n|=(n>>8);\r\n      n|=(n>>16);\r\n      return n - (n>>1);\r\n}\r\nbool isSubsequence(string s1, string s2) {\r\n    int index = -1;\r\n    for (char c : s1) {\r\n        index = s2.find(c, index + 1);\r\n        if (index == string::npos) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nbool check(int mid,vector<int>&v)\r\n{\r\n    int val=v[0]-mid;\r\n    int ct=0;\r\n    for(int i=1;i<(int)v.size();i++)\r\n    {\r\n        if(abs(val-v[i])>mid)\r\n        {\r\n            val=v[i]-mid;\r\n            ct++;\r\n        }\r\n    }\r\n    if(ct<=2)\r\n    return true;\r\n    else\r\n    return false;\r\n\r\n}\r\nvoid knightstour()\r\n{\r\n   int n;\r\n   cin>>n;\r\n   vector<int>v(n,0);\r\n   int opo=0,ope=0,epo=0,epe=0;\r\n   for(int i=0;i<n;i++)\r\n   {\r\n    cin>>v[i];\r\n    if(i%2==0)\r\n    {\r\n        if(v[i]%2==0)\r\n        epe++;\r\n        else\r\n        epo++;\r\n    }\r\n    else\r\n    {\r\n        if(v[i]%2==0)\r\n        ope++;\r\n        else\r\n        opo++;\r\n    }\r\n\r\n   }\r\n   if((epe==0&&(ope==0||opo==0))||(epo==0&&(ope==0||opo==0)))\r\n   cout<<\"YES\"<<endl;\r\n   else\r\n   cout<<\"NO\"<<endl;\r\n\r\n   \r\n\r\n}\r\nint main()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n         knightstour();\r\n    }\r\n}\r\n"
}