{
    "id": 115851744,
    "contestId": 682,
    "creationTimeSeconds": 1620641327,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 682,
        "index": "E",
        "name": "Alyona and Triangles",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2600,
        "tags": [
            "geometry",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 682,
        "members": [
            {
                "handle": "keta_tsimakuridze"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1466181300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 8499200,
    "source": "#include<bits/stdc++.h>\r\n#define f first\r\n#define int  long long\r\n#define s second\r\n#define pii pair<int,int>\r\nusing namespace std;\r\nconst int N=2e5+5,mod=1e9+7;\r\nint t,n,S,F;\r\nvector<pair<pii,int> >st;\r\nvector<pair<int,int> > tr,P;\r\npair<pii,int> p[N];\r\nstring s;\r\nint area(pii p,pii p1,pii p2){\r\n\treturn  abs((p1.f-p.f)*(p2.s-p.s)-(p1.s-p.s)*(p2.f-p.f));\r\n}\r\nbool dist(pii p1,pii p2){\r\n\treturn (p1.f - p[1].f.f)*(p1.f - p[1].f.f) -(p2.f - p[1].f.f)*(p2.f - p[1].f.f) -(p2.s-p[1].f.s)*(p2.s-p[1].f.s) + (p1.s-p[1].f.s)*(p1.s-p[1].f.s) < 0;\r\n}\r\nint O(pii p,pii p1,pii p2){\r\n\tif((p1.s-p.s)*(p2.f-p1.f) > (p1.f-p.f)*(p2.s-p1.s) )  {\r\n\t\treturn 1;\r\n\t}\r\n\tif((p1.s-p.s)*(p2.f-p1.f) < (p1.f-p.f)*(p2.s-p1.s)) {\r\n\t\treturn 0;\t\r\n\t}\r\n\treturn -1;\r\n}\r\nbool compare(pair<pii,int> p1 ,pair<pii,int>  p2) {\r\n\tint o = O(p1.f,p[1].f,p2.f);\r\n\tif(o==1) return 0;\r\n\tif(o==0) return 1;\r\n\t\r\n\treturn 0;\r\n}\r\nvoid ConvexHull(){\r\n\tint mn=p[1].f.s, ind=p[1].f.f;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tif(mn>p[i].f.s || (mn==p[i].f.s && p[i].f.f<p[ind].f.f)) ind=i,mn=p[i].f.s;\r\n\t}\r\n\tswap(p[1],p[ind]); \r\n\tsort(p+2,p+n+1,compare);\r\n\tst.push_back(p[1]);\r\n\tst.push_back(p[2]); \r\n\tfor(int i=3;i<=n;i++){ \r\n\t\twhile(st.size()>=2) {\r\n\t\t\tpair<pii,int> bef1= st.back();\r\n\t\t\tpair<pii,int> bef2 = st[(int)st.size()-2];\r\n\t\t\tif(O(bef2.f,bef1.f,p[i].f)==0) { \r\n\t\t\t\tst.pop_back();\r\n\t\t\t\t\r\n\t\t\t}else break;\r\n\t\t}\r\n\t\tst.push_back(p[i]);\r\n \t}\r\n \twhile(st.size()){\r\n \t\tP.push_back(st.back().f);\r\n \r\n \t\tst.pop_back();\r\n\t }\r\n}\r\n main(){\r\n \tt=1;\r\n \twhile(t--) {\r\n \t\tcin>>n>>S; if(n==0) break;\r\n\t\tfor(int i=1;i<=n;i++){\r\n\t\t\tcin>>p[i].f.f>>p[i].f.s;\r\n\t\t}\t \r\n\t\tConvexHull();//cout<<\"+\"<<endl;\r\n\t\tint Mx=0;\r\n\t\tfor(int i=0;i<P.size();i++){ \r\n\t\t\tint L = (int)P.size()-1;\r\n\t\t\t//cout<<P[i].f<<\"__\"<<P[i].s<<endl;\r\n\t\t\tfor(int j=L;j>i;j--) {\r\n\t\t\t\twhile(L>i && area(P[i],P[j],P[L]) < area(P[i],P[j],P[L-1])) L--;\r\n\t\t\t\tif(area(P[i],P[j],P[L]) > Mx ){ \r\n\t\t\t\t\tMx=area(P[i],P[j],P[L]); \r\n\t\t\t\t\ttr.clear();\r\n\t\t\t\t\ttr.push_back(P[i]);\r\n\t\t\t\t\ttr.push_back(P[j]);\r\n\t\t\t\t\ttr.push_back(P[L]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} \r\n\t\tpii p1 = tr[0];\r\n\t\tpii p2 = tr[1];\r\n\t\tpii p3 = tr[2];\r\n\t\tcout<<p2.f+p3.f-p1.f<<\" \"<<p2.s+p3.s-p1.s<<endl;\r\n\t\tcout<<p2.f-p3.f+p1.f<<\" \"<<p2.s-p3.s+p1.s<<endl;\r\n\t\tcout<<-p2.f+p3.f+p1.f<<\" \"<<-p2.s+p3.s+p1.s<<endl;\r\n\t}\r\n}\r\n"
}