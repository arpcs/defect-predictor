{
    "id": 206607760,
    "contestId": 682,
    "creationTimeSeconds": 1684568414,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 682,
        "index": "E",
        "name": "Alyona and Triangles",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2600,
        "tags": [
            "geometry",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 682,
        "members": [
            {
                "handle": "Liang_Yusong"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1466181300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 66,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 102400,
    "source": "// LUOGU_RID: 110816032\n#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long LL;\r\nstruct Point\r\n{\r\n    LL x,y;\r\n};\r\ntypedef Point Vector;\r\ntypedef vector<Point> Poly;\r\ninline Vector operator+(const Vector &v,const Vector &w)\r\n{return {v.x+w.x,v.y+w.y};}\r\ninline Vector operator-(const Vector &v,const Vector &w)\r\n{return {v.x-w.x,v.y-w.y};}\r\ninline LL Cross(const Vector &v,const Vector &w)\r\n{return v.x*w.y-v.y*w.x;}\r\ninline LL Area(const Point &p,const Point &a,const Point &b)\r\n{return Cross(a-p,b-p);}\r\nconst int N=5e3+5;\r\nint n,x=1,y=2,z=3;\r\nPoint p[N];\r\nmt19937 rnd(random_device{}());\r\ninline LL Calc(const Point &a,const Point &b,const Point &c)\r\n{return abs(Cross(a-b,c-b)/2);}\r\nsigned main()\r\n{\r\n    scanf(\"%d%d\",&n);\r\n    for(int i=1;i<=n;++i)\r\n        scanf(\"%lld%lld\",&p[i].x,&p[i].y);\r\n    LL maxS=0;\r\n    while(true)\r\n    {\r\n        bool updated=false;\r\n        for(int i=1;i<=n;++i)\r\n        {\r\n            LL nowS=Calc(p[i],p[x],p[y]);\r\n            if(nowS>maxS) maxS=nowS,z=i,updated=true;\r\n            nowS=Calc(p[i],p[x],p[z]);\r\n            if(nowS>maxS) maxS=nowS,y=i,updated=true;\r\n            nowS=Calc(p[i],p[y],p[z]);\r\n            if(nowS>maxS) maxS=nowS,x=i,updated=true;\r\n        }\r\n        if(!updated) break;\r\n    }\r\n    Point A=p[x]+p[y]-p[z],B=p[x]+p[z]-p[y],C=p[y]+p[z]-p[x];\r\n    printf(\"%lld %lld\\n%lld %lld\\n%lld %lld\",A.x,A.y,B.x,B.y,C.x,C.y);\r\n    return 0;\r\n}"
}