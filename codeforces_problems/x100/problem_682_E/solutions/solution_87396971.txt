{
    "id": 87396971,
    "contestId": 682,
    "creationTimeSeconds": 1595218289,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 682,
        "index": "E",
        "name": "Alyona and Triangles",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2600,
        "tags": [
            "geometry",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 682,
        "members": [
            {
                "handle": "cinnabar233"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1466181300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 3891200,
    "source": "#include<iostream>\r\n#include<vector>\r\n#include<algorithm>\r\nusing namespace std;\r\n#define pb push_back\r\n#define ll long long int\r\n# define pll pair<ll,ll>\r\n# define pii pair<int,int>\r\n# define fio ios_base::sync_with_stdio(false); cin.tie(NULL)\r\n# define forn(i,n) for(int i=0;i<n;i++)\r\nstruct pt {\r\n    double x, y;\r\n};\r\n\r\nbool cmp(pt a, pt b) {\r\n    return a.x < b.x || (a.x == b.x && a.y < b.y);\r\n}\r\n\r\nbool cw(pt a, pt b, pt c) {\r\n    return a.x*(b.y-c.y)+b.x*(c.y-a.y)+c.x*(a.y-b.y) < 0;\r\n}\r\n\r\nbool ccw(pt a, pt b, pt c) {\r\n    return a.x*(b.y-c.y)+b.x*(c.y-a.y)+c.x*(a.y-b.y) > 0;\r\n}\r\n\r\nvoid convex_hull(vector<pt>& a) {\r\n    if (a.size() == 1)\r\n        return;\r\n\r\n    sort(a.begin(), a.end(), &cmp);\r\n    pt p1 = a[0], p2 = a.back();\r\n    vector<pt> up, down;\r\n    up.push_back(p1);\r\n    down.push_back(p1);\r\n    for (int i = 1; i < (int)a.size(); i++) {\r\n        if (i == a.size() - 1 || cw(p1, a[i], p2)) {\r\n            while (up.size() >= 2 && !cw(up[up.size()-2], up[up.size()-1], a[i]))\r\n                up.pop_back();\r\n            up.push_back(a[i]);\r\n        }\r\n        if (i == a.size() - 1 || ccw(p1, a[i], p2)) {\r\n            while(down.size() >= 2 && !ccw(down[down.size()-2], down[down.size()-1], a[i]))\r\n                down.pop_back();\r\n            down.push_back(a[i]);\r\n        }\r\n    }\r\n\r\n    a.clear();\r\n    for (int i = 0; i < (int)up.size(); i++)\r\n        a.push_back(up[i]);\r\n    for (int i = down.size() - 2; i > 0; i--)\r\n        a.push_back(down[i]);\r\n}\r\nvector<pt>pts;\r\nll area( pt p1 , pt p2 , pt p3)\r\n{\r\n    ll a=p1.x*(p2.y-p3.y)+p2.x*(p3.y-p1.y)+p3.x*(p1.y-p2.y);\r\n    return a;\r\n}\r\nll binary_search(ll l, ll r)\r\n{\r\n    if(l<r)\r\n    {\r\n        ll mid=(l+r)/2;\r\n        if (area(pts[l],pts[r],pts[mid]) > area(pts[l],pts[r],pts[mid+1])) return binary_search(l,mid);\r\n        return binary_search(mid+1,r);\r\n    }\r\n    return l;\r\n}\r\nint main()\r\n{\r\n    ll n,S;\r\n    ll maxx=0;\r\n    cin>>n>>S;\r\n    ll p1,p2,p3;\r\n    pts.resize(n);\r\n    for(int i=0;i<n;i++) cin>>pts[i].x>>pts[i].y;\r\n    convex_hull(pts);\r\n    //for(auto x : pts) cout<<x.x<<\" \"<<x.y<<\"\\n\";\r\n    for(int i=0;i<pts.size();i++)\r\n    {\r\n        for(int j=i+1;j<pts.size();j++)\r\n        {\r\n            ll z = binary_search(i,j);\r\n            ll Area=area(pts[i],pts[j],pts[z]);\r\n            if(Area>maxx)\r\n            {\r\n                maxx=Area;\r\n                p1=i;\r\n                p2=j;\r\n                p3=z;\r\n                \r\n            }\r\n        }\r\n    }\r\n    cout<<pts[p1].x+pts[p2].x-pts[p3].x<<\" \"<<pts[p1].y+pts[p2].y-pts[p3].y<<\"\\n\";\r\n    cout<<pts[p2].x+pts[p3].x-pts[p1].x<<\" \"<<pts[p2].y+pts[p3].y-pts[p1].y<<\"\\n\";\r\n    cout<<pts[p1].x+pts[p3].x-pts[p2].x<<\" \"<<pts[p1].y+pts[p3].y-pts[p2].y<<\"\\n\";\r\n}\r\n"
}