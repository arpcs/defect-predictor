{
    "id": 199763608,
    "contestId": 682,
    "creationTimeSeconds": 1680129370,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 682,
        "index": "E",
        "name": "Alyona and Triangles",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2600,
        "tags": [
            "geometry",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 682,
        "members": [
            {
                "handle": "liuyubobobo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1466181300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 66,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 307200,
    "source": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cassert>\n\nusing namespace std;\n\n\nlong long get_triangle_area_2x(const vector<long long>& a, const vector<long long>& b, const vector<long long>& c){\n\n    long long x1 = a[0], y1 = a[1];\n    long long x2 = b[0], y2 = b[1];\n    long long x3 = c[0], y3 = c[1];\n\n    return abs(x1 * y2 - x2 * y1 + x2 * y3 - x3 * y2 + x3 * y1 - x1 * y3);\n}\n\nint main() {\n\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n\n    int n; long long S; cin >> n >> S;\n\n    vector<vector<long long>> p(n, vector<long long>(2));\n    for(int i = 0; i < n; i ++)\n        cin >> p[i][0] >> p[i][1];\n\n    int aindex = 0, bindex = 1, cindex = 2;\n    long long maxS = get_triangle_area_2x(p[aindex], p[bindex], p[cindex]);\n    while(true){\n        bool update = false;\n        for(int i = 0; i < n; i ++){\n            long long tS;\n\n            if((tS = get_triangle_area_2x(p[i], p[bindex], p[cindex])) > maxS)\n                maxS = tS, aindex = i, update = true;\n\n            if((tS = get_triangle_area_2x(p[aindex], p[i], p[cindex])) > maxS)\n                maxS = tS, bindex = i, update = true;\n\n            if((tS = get_triangle_area_2x(p[aindex], p[bindex], p[i])) > maxS)\n                maxS = tS, cindex = i, update = true;\n        }\n\n        if(!update) break;\n    }\n\n    vector<long long> resa = p[aindex], resb = p[bindex], resc = p[cindex];\n    cout << resc[0] - resb[0] + resa[0] << ' ' << resc[1] - resb[1] + resa[1] << '\\n';\n    cout << resa[0] + resb[0] - resc[0] << ' ' << resa[1] + resb[1] - resc[1] << '\\n';\n    cout << resb[0] - resa[0] + resc[0] << ' ' << resb[1] - resa[1] + resc[1] << '\\n';\n\n    return 0;\n}\n"
}