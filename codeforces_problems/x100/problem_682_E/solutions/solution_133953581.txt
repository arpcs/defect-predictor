{
    "id": 133953581,
    "contestId": 682,
    "creationTimeSeconds": 1635774372,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 682,
        "index": "E",
        "name": "Alyona and Triangles",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2600,
        "tags": [
            "geometry",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 682,
        "members": [
            {
                "handle": "ToiBiCungChim"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1466181300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 1024000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nconst int N = 1e3 + 7;\r\nconst int inf = 1e9 + 7;\r\ntypedef struct Vector {\r\n\tint x,y;\r\n\tVector operator - (Vector &oth) {\r\n\t\treturn {x - oth.x , y - oth.y};\r\n\t}\r\n\tint dot (Vector &oth) {\r\n\t\treturn oth.x * x + y * oth.y;\r\n\t}\r\n\tint cross (Vector &oth) {\r\n\t\treturn oth.y * x - y * oth.x;\r\n\t}\r\n\tbool operator < (const Vector&oth) const {\r\n\t\treturn x < oth.x || (x==oth.x && y < oth.y);\r\n\t}\r\n} point;\r\nint direc (point a,point b,point c) {\r\n\tVector x = b - a;\r\n\tVector y = c - b;\r\n\treturn x.cross (y);\r\n}\r\nbool ccw (point a,point b,point c) {\r\n\treturn direc (a , b, c) > 0;\r\n}\r\nbool cw (point a,point b,point c) {\r\n\treturn direc (a , b  , c) < 0;\r\n}\r\nint n;\r\nvector<point> poly;\r\nint dak;\r\npoint a[4] , res[4];\r\nvoid convex_hull (vector<point> &a) {\r\n\tsort (a .begin() ,a .end());\r\n\tvector<point> up , down;\r\n\tpoint first = a[0] , last = a.back();\r\n\tup.push_back (first);\r\n\tdown.push_back (first);\r\n\tint p = a.size() - 1;\r\n\tfor (int i=1;i<(int ) a.size();i++) {\r\n\t\tif (i==p || cw (first , a[i] , last)) {\r\n\t\t\twhile (up.size() >=2 && !cw (up[(int) up.size() - 2] , up.back() , a[i])) up.pop_back ();\r\n\t\t\tup.push_back (a[i]);\r\n\t\t}\r\n\t\tif (i==p || ccw (first , a[i] , last)) {\r\n\t\t\twhile (down.size() >=2 && !ccw (down[(int) down.size() - 2] , down.back() , a[i])) down.pop_back ();\r\n\t\t\tdown.push_back (a[i]);\r\n\t\t}\r\n\t}\r\n\ta.clear();\r\n\tfor (int i=1;i<(int) down.size() - 1;i++) {\r\n\t\ta.push_back (down[i]);\r\n\t}\r\n\tfor (int i= (int)up.size() - 1;i>=0;i--) {\r\n\t\ta.push_back (up[i]);\r\n\t\r\n\t}\r\n\t\r\n}\r\nint area (point a,point b,point c) {\r\n\tVector AB = b - a;\r\n\tVector AC = c - a;\r\n\treturn AB.cross (AC);\r\n}\r\nsigned main () {\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0);\r\n\t\r\n\tcin>>n;\r\n\tfor (int i=1;i<=n;i++) {\r\n\t\tint x,y;\r\n\t\tcin>>x>>y;\r\n\t\tpoly.push_back ({x,y});\r\n\t}\r\n\tconvex_hull (poly);\r\n\tint m = poly.size();\r\n\tif (m==3) {\r\n\t\tfor (point &x : poly) {\r\n\t\t\tcout<<x.x<<\" \"<<x.y<<'\\n';\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\tfor (int i=0;i<m;i++) {\r\n\t\tpoly.push_back (poly[i]);\r\n\t}\r\n\tfor (int i=0;i<m;i++) {\r\n\t\tint last = i + 1;\r\n\t\tfor (int j= i + 2;j<i + m ; j++) {\r\n\t\t\twhile (1) {\r\n\t\t\t\tif (last==j - 1 || area (poly[i] , poly[last] , poly[j]) > area (poly[i] , poly[last + 1] , poly[j])) {\r\n\t\t\t\t\tint tmp = area (poly[i] , poly[last] , poly[j] );\r\n\t\t\t\t\tif (dak < tmp) {\r\n\t\t\t\t\t\tdak = tmp;\r\n\t\t\t\t\t\ta[1] = poly[i] , a[2] = poly[last];\r\n\t\t\t\t\t\ta[3] = poly[j];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t++last;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tsort (a + 1, a + 1 + 3);\r\n\tif (ccw (a[1] , a[2] , a[3]) ) {\r\n\t\tswap (a[2] , a[3]);\r\n\t}\r\n\tpoint A = a[1];\r\n\tpoint B = a[2];\r\n\tpoint C = a[3];\r\n\tVector BC = C - B , BA = A - B;\r\n\tres[1] = A - BC;\r\n\tres[2] = {A.x + BC.x , A.y + BC.y};\r\n\tres[3] = C - BA;\r\n\tfor (int i=1;i<=3;i++) {\r\n\t\tcout<<res[i].x<<\" \"<<res[i].y<<'\\n';\r\n\t}\r\n}"
}