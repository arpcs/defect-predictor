{
    "id": 86739894,
    "contestId": 682,
    "creationTimeSeconds": 1594637403,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 682,
        "index": "E",
        "name": "Alyona and Triangles",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2600,
        "tags": [
            "geometry",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 682,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1466181300
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 5529600,
    "source": "#include<iostream> \n#include<algorithm>\n#include<iomanip>\n#include<cstdio>\nusing namespace std;              //\u627earea\u6700\u5927\u7684\u4e09\u89d2\u5f62 \nconst double eps=1e-8;\nconst int maxn=1e5;\nint dcmp(double x)\n{\n\tif(fabs(x)<eps) return 0;\n\treturn x<0?-1:1;\n}\nstruct point{\n\tint x,y;\n\tpoint() {}\n\tpoint(double a,double b):x(a),y(b){}\n}p[maxn]; \npoint operator -(point a,point b){\n\treturn point(a.x-b.x,a.y-b.y);\n}\npoint operator +(point a,point b){\n                return point(a.x+b.x,a.y+b.y);\n}\ndouble cross(point a,point b) {   //\u53c9\u4e58 \n\treturn a.x*b.y-a.y*b.x;\n}\ndouble dot(point a,point b){     //\u70b9\u4e58 \n\treturn a.x*b.x+a.y*b.y;\n}\ndouble dis(point a)    //\u8ba1\u7b97\u5411\u91cf a\u7684\u957f\u5ea6\n{                // \u4e5f\u53ef\u4ee5\u7528\u70b9\u79ef\u5199\uff0creturn sqrt(dot(a,a));                                      \n\treturn sqrt(a.x*a.x+a.y*a.y);\n} \ndouble area(point *p,int n)\n{\n\tdouble area1=0;\n\tif(n<3) return area1;\n\tfor(int i=2;i<n;i++)\n\tarea1+=fabs(cross(p[1]-p[i],p[1]-p[i+1]));\n\treturn area1;\n}\npoint ch[maxn];\nint top;\nbool cmp(point x1,point y1)\n{\n\tif(x1.x==y1.x) return x1.y<y1.y;\n\treturn x1.x<y1.x;\n} \nvoid andrew(point a[],int n)   //O(nlogn)\n{\n\tsort(a+1,a+1+n,cmp);\n\ttop=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\twhile(top>1 && cross(ch[top]-ch[top-1],a[i]-ch[top])<=0) top--;\n\t\tch[++top]=a[i];\n\t}\n\tint tmp=top;\n\tfor(int i=n-1;i>=1;i--)\n\t{\n\t\twhile(top>tmp && cross(ch[top]-ch[top-1],a[i]-ch[top])<=0) top--;\n\t\tch[++top]=a[i];\n\t}\n\ttop--;\n}\npoint a1,b1,c1;\nint getmax()     \n{\n\tif(top==2) { return dis(ch[1]-ch[2]);}  \n\tdouble ans=0;\n\tch[top+1]=ch[1];\n\tint j=3;              \n\tfor(int i=1;i<top-1;i++)    \n\t{\n\t\tint q=i+1;\n\t\tfor(int j=i+1;j<=top;j++) \n\t\t{\n\t\t\twhile(fabs(cross(ch[i]-ch[q],ch[i]-ch[j])) < fabs(cross(ch[i]-ch[q+1],ch[i]-ch[j])))\n\t\t    {\n\t\t    \tq++;\n\t\t\t    if(q>top) q=1;    \n\t\t    }\n\t\t    if(dcmp(ans-fabs(cross(ch[i]-ch[q],ch[i]-ch[j])))<0)\n\t\t    {\n\t\t    \tans=fabs(cross(ch[i]-ch[q],ch[i]-ch[j]));\n\t\t    \ta1=ch[i];b1=ch[q];c1=ch[j];\n\t\t\t}\n\t\t}    \n\t}\n}\n\nint main()\n{\n\tint n,s;\n\tcin>>n>>s;\n\tfor(int i=1;i<=n;i++)\n\tcin>>p[i].x>>p[i].y;\n\tandrew(p,n);\t\n\tgetmax();\n\tpoint a2,b2,c2;\n\ta2=a1+b1-c1;b2=a1-b1+c1;c2=c1+b1-a1;\n\tcout<<(int)(a2.x)<<\" \"<<(int)a2.y<<endl;\n\tcout<<(int)b2.x<<\" \"<<(int)b2.y<<endl;\n\tcout<<(int)c2.x<<\" \"<<(int)c2.y<<endl;\n\treturn 0;\n}\n\n\n    \t \t\t\t    \t \t\t  \t\t    \t  \t"
}