{
    "id": 93948855,
    "contestId": 682,
    "creationTimeSeconds": 1601204291,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 682,
        "index": "E",
        "name": "Alyona and Triangles",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2600,
        "tags": [
            "geometry",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 682,
        "members": [
            {
                "handle": "Flying2018"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1466181300
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 102400,
    "source": "#include<iostream>\r\n#include<cstdio>\r\n#include<cstring>\r\n#include<algorithm>\r\n#define N 3010\r\n#define ll long long\r\nusing namespace std;\r\nstruct node{\r\n\tll x,y;\r\n\tnode(ll X=0,ll Y=0):x(X),y(Y){}\r\n\tbool operator <(const node a)const{return x==a.x?y<a.y:x<a.x;}\r\n\tnode operator +(node a){return node(x+a.x,y+a.y);}\r\n\tnode operator -(node a){return node(x-a.x,y-a.y);}\r\n\tll operator *(node a){return x*a.y-y*a.x;}\r\n}p[N],q[N],a,b,c;\r\nll cross(node x,node o,node y){return (x-o)*(y-o);}\r\nint t;\r\nvoid print(node a){printf(\"%lld %lld\\n\",a.x,a.y);}\r\nint main()\r\n{\r\n\tint n;\r\n\tll s;\r\n\tscanf(\"%d%lld\",&n,&s);\r\n\tfor(int i=1;i<=n;i++) scanf(\"%lld%lld\",&p[i].x,&p[i].y);\r\n\tsort(p+1,p+n+1);\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tfor(;t>1 && cross(q[t],q[t-1],p[i])<=0;t--);\r\n\t\tq[++t]=p[i];\r\n\t}\r\n\tint s0=t;\r\n\tfor(int i=n-1;i>=1;i--)\r\n\t{\r\n\t\tfor(;t>s0 && cross(q[t],q[t-1],p[i])<=0;t--);\r\n\t\tq[++t]=p[i];\r\n\t}\r\n\t--t;\r\n\tll sm=0;\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tfor(int j=i+1,k=j%t+1;j<=t && k!=i;j++)\r\n\t\t{\r\n\t\t\tfor(;cross(q[j],q[i],q[k])<cross(q[j],q[i],q[k+1]);k=k%t+1);\r\n\t\t\tif(k!=i && k!=j && cross(q[j],q[i],q[k])>sm) sm=cross(q[j],q[i],q[k]),a=q[i],b=q[j],c=q[k];\r\n\t\t}\r\n\tprint(a-c+b),print(b-a+c),print(c-b+a);\r\n\treturn 0;\r\n}\r\n"
}