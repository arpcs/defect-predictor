{
    "id": 133953704,
    "contestId": 682,
    "creationTimeSeconds": 1635774442,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 682,
        "index": "E",
        "name": "Alyona and Triangles",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2600,
        "tags": [
            "geometry",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 682,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1466181300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 66,
    "timeConsumedMillis": 514,
    "memoryConsumedBytes": 1740800,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int N = 1e3 + 7;\nconst int inf = 1e9 + 7;\ntypedef struct Vector {\n\tint x,y;\n\tVector operator - (Vector &oth) {\n\t\treturn {x - oth.x , y - oth.y};\n\t}\n\tint dot (Vector &oth) {\n\t\treturn oth.x * x + y * oth.y;\n\t}\n\tint cross (Vector &oth) {\n\t\treturn oth.y * x - y * oth.x;\n\t}\n\tbool operator < (const Vector&oth) const {\n\t\treturn x < oth.x || (x==oth.x && y < oth.y);\n\t}\n} point;\nint direc (point a,point b,point c) {\n\tVector x = b - a;\n\tVector y = c - b;\n\treturn x.cross (y);\n}\nbool ccw (point a,point b,point c) {\n\treturn direc (a , b, c) > 0;\n}\nbool cw (point a,point b,point c) {\n\treturn direc (a , b  , c) < 0;\n}\nint n;\nvector<point> poly;\nint dak;\nint S;\npoint a[4] , res[4];\nvoid convex_hull (vector<point> &a) {\n\tsort (a .begin() ,a .end());\n\tvector<point> up , down;\n\tpoint first = a[0] , last = a.back();\n\tup.push_back (first);\n\tdown.push_back (first);\n\tint p = a.size() - 1;\n\tfor (int i=1;i<(int ) a.size();i++) {\n\t\tif (i==p || cw (first , a[i] , last)) {\n\t\t\twhile (up.size() >=2 && !cw (up[(int) up.size() - 2] , up.back() , a[i])) up.pop_back ();\n\t\t\tup.push_back (a[i]);\n\t\t}\n\t\tif (i==p || ccw (first , a[i] , last)) {\n\t\t\twhile (down.size() >=2 && !ccw (down[(int) down.size() - 2] , down.back() , a[i])) down.pop_back ();\n\t\t\tdown.push_back (a[i]);\n\t\t}\n\t}\n\ta.clear();\n\tfor (int i=1;i<(int) down.size() - 1;i++) {\n\t\ta.push_back (down[i]);\n\t}\n\tfor (int i= (int)up.size() - 1;i>=0;i--) {\n\t\ta.push_back (up[i]);\n\t\n\t}\n\t\n}\nint area (point a,point b,point c) {\n\tVector AB = b - a;\n\tVector AC = c - a;\n\treturn AB.cross (AC);\n}\nsigned main () {\n\tios::sync_with_stdio(false);\n\tcin.tie(0);\n\t\n\tcin>>n>>S;\n\tfor (int i=1;i<=n;i++) {\n\t\tint x,y;\n\t\tcin>>x>>y;\n\t\tpoly.push_back ({x,y});\n\t}\n\tconvex_hull (poly);\n\tint m = poly.size();\n\tif (m==3) {\n\t\tfor (point &x : poly) {\n\t\t\tcout<<x.x<<\" \"<<x.y<<'\\n';\n\t\t}\n\t\treturn 0;\n\t}\n\tfor (int i=0;i<m;i++) {\n\t\tpoly.push_back (poly[i]);\n\t}\n\tfor (int i=0;i<m;i++) {\n\t\tint last = i + 1;\n\t\tfor (int j= i + 2;j<i + m ; j++) {\n\t\t\twhile (1) {\n\t\t\t\tif (last==j - 1 || area (poly[i] , poly[last] , poly[j]) > area (poly[i] , poly[last + 1] , poly[j])) {\n\t\t\t\t\tint tmp = area (poly[i] , poly[last] , poly[j] );\n\t\t\t\t\tif (dak < tmp) {\n\t\t\t\t\t\tdak = tmp;\n\t\t\t\t\t\ta[1] = poly[i] , a[2] = poly[last];\n\t\t\t\t\t\ta[3] = poly[j];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t++last;\n\t\t\t}\n\t\t}\n\t}\n\tsort (a + 1, a + 1 + 3);\n\tif (ccw (a[1] , a[2] , a[3]) ) {\n\t\tswap (a[2] , a[3]);\n\t}\n\tpoint A = a[1];\n\tpoint B = a[2];\n\tpoint C = a[3];\n\tVector BC = C - B , BA = A - B;\n\tres[1] = A - BC;\n\tres[2] = {A.x + BC.x , A.y + BC.y};\n\tres[3] = C - BA;\n\tfor (int i=1;i<=3;i++) {\n\t\tcout<<res[i].x<<\" \"<<res[i].y<<'\\n';\n\t}\n}\n \t\t \t\t  \t\t \t \t \t \t    \t\t \t  \t\t"
}