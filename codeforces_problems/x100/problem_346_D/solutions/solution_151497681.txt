{
    "id": 151497681,
    "contestId": 346,
    "creationTimeSeconds": 1648730329,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "yspm"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 11366400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define pii pair<int,int>\r\n#define ll long long\r\n#define sec second\r\n#define fir first\r\n#define int long long\r\n#define ull unsigned long long\r\n#define pb push_back\r\n#define rep(i,a,b) for(int i=a;i<=b;++i) \r\n#define Down(i,a,b) for(int i=a;i>=b;--i)\r\ntemplate<typename T>inline void ckmax(T &x,T y){x=x<y?y:x; return ;}\r\ntemplate<typename T>inline void ckmin(T &x,T y){x=x<y?x:y; return ;}\r\ninline char Getalpha(){char k=getchar(); while(!isalpha(k)) k=getchar(); return k;}\r\nnamespace FastIO{\r\n    template<typename T=int>inline T read(){\r\n        T res=0,f=1; char k;\r\n        while(!isdigit(k=getchar())) if(k=='-') f=-1;\r\n        while(isdigit(k)) res=res*10+k-'0',k=getchar();\r\n        return res*f;\r\n    }\r\n    char OPUT[100];\r\n    template<typename T>inline void print(T x){\r\n        if(x<0) putchar('-'),x=-x; \r\n        int cnt=0; do OPUT[++cnt]=x%10,x/=10; while(x); \r\n        Down(i,cnt,1) putchar(OPUT[i]+'0'); putchar(' '); return ;\r\n    }\r\n    #define read() read<int>()\r\n}using namespace FastIO;\r\nconst int N=2e5+10;\r\nint n,m;\r\nvector<int> G[N],revG[N];\r\nsigned main(){\r\n    n=read(); m=read();\r\n    for(int i=1;i<=m;++i){\r\n        int u=read(),v=read();\r\n        G[u].emplace_back(v);\r\n        revG[v].emplace_back(u);\r\n    }\r\n    int S=read(),T=read();\r\n\r\n    vector<int> dp(n+1,n+1);\r\n    vector<bool> vis(n+1);\r\n    queue<int> q;\r\n    q.push(T);\r\n    dp[T]=0;\r\n    while(q.size()){\r\n        int fr=q.front(); vis[fr]=0;\r\n        q.pop();\r\n        for(auto t:revG[fr]) if(dp[fr]+1<=dp[t]){\r\n            dp[t]=dp[fr]+1;\r\n            if(!vis[t]) q.push(t),vis[t]=1;\r\n        } \r\n        int Mx=0;\r\n        for(auto t:G[fr]) ckmax(Mx,dp[t]);\r\n        if(Mx<dp[fr]){\r\n            dp[fr]=Mx;\r\n            q.push(fr);\r\n            vis[fr]=1;\r\n        }\r\n    }\r\n    if(dp[S]==n+1) puts(\"-1\");\r\n    else print(dp[S]);\r\n    return 0;\r\n}"
}