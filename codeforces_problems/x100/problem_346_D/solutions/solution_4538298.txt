{
    "id": 4538298,
    "contestId": 346,
    "creationTimeSeconds": 1379870033,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "pedrovictor"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 716,
    "memoryConsumedBytes": 46182400,
    "source": "#include <bits/stdc++.h>\r\n#define fr(i,a,b) for(int i=a;i<b;i++)\r\n#define rep(i,b) fr(i,0,b)\r\n#define oo 1000000000\r\n#define pb push_back\r\n#define mp make_pair\r\n#define F first\r\n#define S second\r\n\r\nusing namespace std;\r\ntypedef pair<int,int> pii;\r\n\r\n#define N 1000100\r\nint maxi[N], mini[N], pd[N], cnt[N];\r\nbool mk[N];\r\nvector<int> adj[N];\r\npriority_queue< pii > f;\r\n\r\nint main(){\r\n    int n, m;\r\n    scanf(\"%d %d\",&n,&m);\r\n    rep(i,n+1){\r\n        cnt[i]=0;\r\n        maxi[i]=0;\r\n        mini[i]=oo;\r\n        pd[i] = oo;\r\n        mk[i]=false;\r\n    }\r\n    rep(i,m){\r\n        int a, b;\r\n        scanf(\"%d %d\",&a,&b);\r\n        adj[b].pb(a);\r\n        cnt[a]++;\r\n    }\r\n    int s, t;\r\n    scanf(\"%d %d\",&s,&t);\r\n    pd[t] = 0;\r\n    f.push(mp(-pd[t],t));\r\n    while(f.size()){\r\n        int v = f.top().S;\r\n        f.pop();\r\n        if(!mk[v]){\r\n            mk[v]=true;\r\n            rep(i,adj[v].size()){\r\n                int w = adj[v][i];\r\n                maxi[w] = max(maxi[w], pd[v]);\r\n                mini[w] = min(mini[w], pd[v]);\r\n                cnt[w]--;\r\n                int cs = mini[w]+1;\r\n                if(cnt[w]==0) cs = min(cs, maxi[w]);\r\n                if(cs<pd[w]){\r\n                    pd[w] = cs;\r\n                    f.push(mp(-pd[w],w));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if(pd[s]==oo)\r\n        printf(\"-1\\n\");\r\n    else\r\n        printf(\"%d\\n\",pd[s]);\r\n    return 0;\r\n}\r\n"
}