{
    "id": 4530165,
    "contestId": 346,
    "creationTimeSeconds": 1379763054,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "alpq654321"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 530,
    "memoryConsumedBytes": 20992000,
    "source": "#include <cmath>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <iostream>\r\n#include <algorithm>\r\nusing namespace std;\r\nint i,n,m,o,A,B,du[1000005],e[1000005],next[1000005],head[1000005],L,R,l,r,S[1000005],s,t,now,p;\r\nbool v[1000005];\r\nvoid add(int a,int b,int c)\r\n{\r\n     e[a]=c;\r\n     next[a]=head[b];\r\n     head[b]=a;\r\n}\r\nint main()\r\n{\r\n    scanf(\"%d%d\",&n,&m);\r\n    for (i=1; i<=m; i++)\r\n    {\r\n        scanf(\"%d%d\",&A,&B);\r\n        add(++o,B,A);\r\n        du[A]++;\r\n      //  ADD(++o,B,A);\r\n    }\r\n    scanf(\"%d%d\",&s,&t);\r\n    l=0; r=1; S[1]=t;\r\n    for (i=1; i<=n; i++) v[i]=false; v[t]=true;\r\n    for (i=0; i<=n; i++)\r\n    {\r\n        L=l;\r\n        while (l!=r)\r\n        {\r\n              now=S[++l];\r\n              p=head[now];\r\n              while (p!=0)\r\n              {\r\n                    if (!v[e[p]])\r\n                    {\r\n                        du[e[p]]--;\r\n                        if (du[e[p]]==0) \r\n                        {\r\n                                         if (e[p]==s) {cout<<i<<endl; return 0;}\r\n                                         S[++r]=e[p];\r\n                                         v[e[p]]=true;\r\n                        }\r\n                    }\r\n                    p=next[p];\r\n              }\r\n        }\r\n        R=r;\r\n        while (L!=R)\r\n        {\r\n              now=S[++L];\r\n              p=head[now];\r\n              while (p!=0)\r\n              {\r\n                   if (!v[e[p]])\r\n                   {\r\n                                v[e[p]]=true; \r\n                                S[++r]=e[p];\r\n                                if (e[p]==s) {cout<<i+1<<endl;  return 0;}\r\n                   }\r\n                   p=next[p];\r\n              }\r\n        }\r\n    }\r\n    cout<<-1<<endl;\r\n   // system(\"pause\");\r\n    return 0;\r\n}\r\n          \r\n          \r\n"
}