{
    "id": 11266473,
    "contestId": 346,
    "creationTimeSeconds": 1432565293,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "KuribohG"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 530,
    "memoryConsumedBytes": 37068800,
    "source": "#include<iostream>\r\n#include<cstdio>\r\n#include<algorithm>\r\n#include<cstring>\r\n#define next next2\r\nusing namespace std;\r\nconst int MAXN=1000010;\r\nconst int INF=1000000000;\r\nint n,m,x,y,S,T;\r\nint head[MAXN],to[MAXN<<1],next[MAXN<<1],cnt=1;\r\nint q[MAXN<<1],l=1000010,r=1000009;\r\nint d[MAXN],ind[MAXN];\r\nbool used[MAXN];\r\ninline void adde(int f,int t)\r\n{\r\n    cnt++,to[cnt]=t,next[cnt]=head[f],head[f]=cnt;\r\n}\r\nint main()\r\n{\r\n    scanf(\"%d%d\",&n,&m);\r\n    for(int i=1;i<=m;i++) scanf(\"%d%d\",&x,&y),adde(y,x),ind[x]++;\r\n    scanf(\"%d%d\",&S,&T);\r\n    for(int i=1;i<=n;i++) d[i]=INF;\r\n    d[T]=0,q[++r]=T;    \r\n    while(l<=r)\r\n    {\r\n        int x=q[l++];\r\n        if(used[x]) continue;\r\n        used[x]=true;\r\n        for(int i=head[x];i;i=next[i])\r\n        {\r\n            ind[to[i]]--;\r\n            if(ind[to[i]]==0)\r\n            {\r\n                if(d[to[i]]>d[x])\r\n                    d[to[i]]=d[x],q[--l]=to[i];\r\n            }\r\n            else\r\n            {\r\n                if(d[to[i]]>d[x]+1)\r\n                    d[to[i]]=d[x]+1,q[++r]=to[i];\r\n            }\r\n        }\r\n    }\r\n    if(d[S]==INF) d[S]=-1;\r\n    printf(\"%d\\n\",d[S]);\r\n    return 0;\r\n}\r\n"
}