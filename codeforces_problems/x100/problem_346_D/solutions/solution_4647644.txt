{
    "id": 4647644,
    "contestId": 346,
    "creationTimeSeconds": 1380789073,
    "relativeTimeSeconds": 6673,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "uncleFun"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1380782400
    },
    "programmingLanguage": "MS C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 624,
    "memoryConsumedBytes": 57241600,
    "source": "/**\r\n* @(#)  \r\n* @problem  Robot Control\r\n* @type     \r\n* @author   \u9634\u96f7\r\n* @version  1.00 2013/03/10\r\n*/\r\n#pragma warning(disable : 4786)\r\n//#pragma comment(linker, \"/STACK:1024000000,1024000000\")\r\n#include\"ctime\"\r\n#include\"iostream\"\r\n#include\"cstdio\"\r\n#include\"cstring\"\r\n#include\"string\"\r\n#include\"map\"\r\n#include\"algorithm\"\r\n#include\"vector\"\r\n#include\"cmath\"\r\n#include\"queue\"\r\n#include\"stack\"\r\n#include\"set\"\r\n#include\"sstream\"\r\nusing namespace std;\r\ntypedef __int64 LL;\r\ntypedef unsigned __int64 LLU;\r\ntypedef pair<int,int> PII;\r\nint const MAX=1000005;\r\nint const MAXN=664579;\r\nint const MAXM=20202;\r\nLL const INF=0x7fffffff;\r\nLL  const LINF=0x7FFFFFFFFFFFFFFF;\r\ndouble const EPS=1e-8;\r\ndouble const DINF=1e30;\r\nLL  const MOD=1000000007;\r\ndouble const E=2.7182818284590452;\r\ndouble const PI=acos(-1.0);\r\nint const move[4][2]={{-1,0},{0,-1},{0,1},{1,0}};    //\u4e0b\u53f3\r\nvector<int> eg[MAX];\r\nint n, m, s, t, drgee[MAX], order[MAX];\r\n//queue<int> que;\r\nint que[4*MAX];\r\nbool flag[MAX];\r\n\r\n//inline double myfabs(double x){ return x > EPS ? x : -x; }\r\n//inline int dbcmp(double x) { if(myfabs(x)<EPS) return 0; return x < 0 ? -1 : 1; }\r\n//inline int min(int a,int b){ return a<b ? a : b; }\r\n//inline int max(int a,int b){ return a>b ? a : b; }\r\n//inline double max(double a,double b){ return dbcmp(a-b)>0 ? a : b; }\r\n//inline double min(double a,double b){ return dbcmp(a-b)<0 ? a : b; }\r\n//inline double get_length(point a,point b) { return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y)); }\r\n//inline double get_length(point a,point b) { return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y)+(a.z-b.z)*(a.z-b.z)); }\r\n//inline int myabs(int x) { return x > 0 ? x : -x ; }\r\n\r\nvoid bfs()\r\n{\r\n    memset(order,0xff,sizeof(order));\r\n    memset(flag,false,sizeof(flag));\r\n    int u, v, i, fi, fr;\r\n    order[t] = 0, que[2*MAX] = t, fi = 2*MAX, fr = 2*MAX + 1;\r\n    while(fi < fr)\r\n    {\r\n        u = que[fi++];\r\n        if(u == s) return ;\r\n        if(flag[u]) continue;\r\n        flag[u] = true;\r\n        for(i=0; i<eg[u].size(); i++)\r\n        {\r\n            v = eg[u][i];\r\n            if(--drgee[v] == 0)\r\n            {\r\n                if(order[v] > order[u] || order[v] == -1) \r\n                {\r\n                    order[v] = order[u] ;\r\n                    que[--fi] = v;\r\n                }\r\n            }\r\n            else if(order[v] == -1)\r\n            {\r\n                order[v] = order[u] + 1 ;\r\n                que[fr++] = v;\r\n            }\r\n        }\r\n    }\r\n}\r\nint main()\r\n{\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"in.txt\",\"r\",stdin);\r\n    //freopen(\"out.txt\",\"w\",stdout);\r\n#endif\r\n    int i, a, b;\r\n    while(~scanf(\"%d%d\",&n,&m))\r\n    {\r\n        for(i=0; i<m; i++)\r\n        {\r\n            scanf(\"%d%d\",&a,&b);\r\n            eg[b].push_back(a);\r\n            drgee[a] ++ ;\r\n        }\r\n        scanf(\"%d%d\",&s,&t);\r\n        bfs();\r\n        printf(\"%d\\n\",order[s]);\r\n    }\r\n    return 0;\r\n}\r\n"
}