{
    "id": 21857252,
    "contestId": 346,
    "creationTimeSeconds": 1477682674,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "retired_coder"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 3584000,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <string>\r\n#include <cstring>\r\n#include <map>\r\n#include <set>\r\n#include <bitset>\r\n#include <cassert>\r\n#include <cstdlib>\r\n#include <ctime>\r\n#include <unordered_map>\r\nusing namespace std;\r\n\r\n#define PB(x) push_back(x)\r\n#define SZ(x) ((int)(x).size())\r\n#define ERR(x) cerr << #x\" = \" << x << \"  \"\r\n#define ALL(x) (x).begin(), (x).end()\r\n#define NL cerr << endl\r\n#define X first\r\n#define Y second\r\ntypedef long long llint;\r\n\r\ntypedef pair<int,int> pii;\r\nconst int N = 100100;\r\nvector<int> rg[N];\r\nint n, m, dp[N], deg[N];\r\nset<pii> s;\r\n\r\nint main(){\r\n\tscanf(\"%d%d\", &n, &m);\r\n\tint u, v;\r\n\twhile (m--){\r\n\t\tscanf(\"%d%d\", &u, &v);\r\n\t\trg[v].PB(u);  ++deg[u];\r\n\t}\r\n\tint beg, en;\r\n\tscanf(\"%d%d\", &beg, &en);\r\n\tmemset(dp, 63, sizeof dp);\r\n\r\n\tdp[en] = 0;\r\n\tfor (int i = 1; i <= n; i++) s.insert({dp[i], i});\r\n\twhile ((int)s.size()){\r\n\t\tu = s.begin()->Y;\r\n\t\ts.erase(s.begin());\r\n\t\tfor (int to: rg[u]){\r\n\t\t\tdeg[to]--;\r\n\t\t\tif (deg[to] == 0 && dp[u] < dp[to]){\r\n\t\t\t\ts.erase({dp[to], to});\r\n\t\t\t\ts.insert({dp[to] = dp[u], to});\r\n\t\t\t} else if (deg[to] && dp[u]+1 < dp[to]){\r\n\t\t\t\ts.erase({dp[to], to});\r\n\t\t\t\ts.insert({dp[to] = dp[u] + 1, to});\r\n\t\t\t}\r\n\t\t} //end of for\r\n\t}\r\n\tprintf(\"%d\\n\", dp[beg] > n ? -1: dp[beg]);\r\n\r\n\treturn 0;\r\n}\r\n"
}