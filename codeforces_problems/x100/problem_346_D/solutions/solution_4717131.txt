{
    "id": 4717131,
    "contestId": 346,
    "creationTimeSeconds": 1381327005,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "paopao123"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 3788800,
    "source": "#include<iostream>\r\n#include<cstdio>\r\n#include<cstring>\r\n#include<queue>\r\n#include<algorithm>\r\nusing namespace std;\r\n\r\nconst int MAXN=100005;\r\n\r\nstruct Edge\r\n{\r\n    int u,v;\r\n    Edge* next;\r\n}E[MAXN],*tot,*head[MAXN];\r\n\r\nint deg[MAXN],inq[MAXN],dis[MAXN],path[MAXN],vis[MAXN];\r\n\r\nvoid init()\r\n{\r\n//    memset(head,0,sizeof(head));\r\n    tot=E;\r\n}\r\n\r\nvoid Add(int u,int v)\r\n{\r\n    tot->u=u;tot->v=v;tot->next=head[u];head[u]=tot++;\r\n}\r\n\r\nint SPFA()\r\n{\r\n    int s,t;cin>>s>>t;\r\n    memset(dis,0x3f,sizeof(dis));\r\n    dis[t]=0;\r\n    queue<int> Q;\r\n    Q.push(t);inq[t]=1;\r\n    while(!Q.empty())\r\n    {\r\n        int u=Q.front();Q.pop();\r\n        inq[u]=0;\r\n        if(u==s) return dis[s];\r\n        for(Edge* p=head[u];p;p=p->next)\r\n        {\r\n            --deg[p->v];\r\n            int w=deg[p->v]>0;\r\n            if(dis[p->v]>dis[u]+w)\r\n            {\r\n                dis[p->v]=dis[u]+w;\r\n                if(!inq[p->v]) {Q.push(p->v);inq[p->v]=1;}\r\n            }\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\nint main()\r\n{\r\n    int n,m,u,v;\r\n    cin>>n>>m;\r\n    init();\r\n    while(m--) {cin>>u>>v;++deg[u];Add(v,u);}\r\n    cout<<SPFA()<<endl;\r\n    return 0;\r\n}\r\n"
}