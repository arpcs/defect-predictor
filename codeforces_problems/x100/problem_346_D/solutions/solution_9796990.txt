{
    "id": 9796990,
    "contestId": 346,
    "creationTimeSeconds": 1423648081,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "zhabo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "GNU C++0x",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 2712,
    "memoryConsumedBytes": 53145600,
    "source": "#include<iostream>\r\n#include<cstdio>\r\n#include<vector>\r\n#include<cstring>\r\n#include<queue>\r\nusing namespace std;\r\n#define pb push_back\r\n#define sz size()\r\n\r\nconst int maxn = int(1e6) + 123;\r\n\r\nbool used[maxn];\r\nvector < int > g[maxn];\r\nint s, t, degree[maxn], cnt[maxn], n, m;\r\n\r\nvoid dfs(int v) {\r\n\tused[v] = 1;\r\n\tfor(int i = 0; i < g[v].sz; i++) {\r\n\t\tint to = g[v][i];\r\n\t\tif(!used[to]) dfs(to);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tios_base::sync_with_stdio(0);\r\n\tcin.tie(0);\r\n\t\tcin >> n >> m;\r\n\t\tfor(int i = 1; i <= m; i++) {\r\n\t\t\tint a, b;\r\n\t\t\tcin >> a >> b;\r\n\t\t\tdegree[a]++;\r\n\t\t\tg[b].pb(a);\r\n\t\t}\r\n\t\tcin >> s >> t;\r\n\t\tdfs(t);\r\n\t\tif(used[s] == 0) {\r\n\t\t\tcout << -1;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tmemset(used, 0, sizeof used);\r\n\t\tused[t] = 1;\r\n\t\tqueue < int > cur;\r\n\t\tcur.push(t);\r\n\t\twhile(!cur.empty()) {\r\n\t\t\tqueue < int > q;\r\n\t\t\twhile(!cur.empty()) {\r\n\t\t\t\tint v = cur.front(); cur.pop();\r\n\t\t\t\tq.push(v);\r\n\t\t\t\tfor(int i = 0; i < g[v].sz; i++) {\r\n\t\t\t\t\tint to = g[v][i];\r\n\t\t\t\t\tif(!used[to]) {\r\n\t\t\t\t\t\tdegree[to]--;\r\n\t\t\t\t\t\tif(degree[to] == 0) {\r\n\t\t\t\t\t\t\tused[to] = 1;\r\n\t\t\t\t\t\t\tcnt[to] = cnt[v];\r\n\t\t\t\t\t\t\tcur.push(to);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile(!q.empty()) {\r\n\t\t\t\tint v = q.front(); q.pop();\r\n\t\t\t\tfor(int i = 0; i < g[v].sz; i++) {\r\n\t\t\t\t\tint to = g[v][i];\r\n\t\t\t\t\tif(!used[to]) {\r\n\t\t\t\t\t\tused[to] = 1;\r\n\t\t\t\t\t\tcnt[to] = cnt[v] + 1;\r\n\t\t\t\t\t\tcur.push(to);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcout << cnt[s];\r\n\treturn 0;\r\n}\r\n"
}