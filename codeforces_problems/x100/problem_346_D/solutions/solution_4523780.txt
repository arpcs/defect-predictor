{
    "id": 4523780,
    "contestId": 346,
    "creationTimeSeconds": 1379702437,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "natalia"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "MS C++",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 7270400,
    "source": "#pragma comment(linker, \"/STACK:256000000\")\r\n#define _CRT_SECURE_NO_WARNINGS\r\n\r\n#include <iostream>\r\n#include <vector>\r\n#include <string>\r\n#include <map>\r\n#include <set>\r\n#include <queue>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <cassert>\r\n#include <sstream>\r\n\r\nusing namespace std;\r\n\r\n#define forn(i, n) for (int i = 0; i < int(n); i++)\r\n#define for1(i, n) for (int i = 1; i <= int(n); i++)\r\n#define forv(i, v) forn(i, v.size())\r\n\r\n#define all(x) x.begin(), x.end()\r\n#define pb push_back\r\n#define mp make_pair\r\n\r\n#define CIN_FILE \"input.txt\"\r\n#define COUT_FILE \"output.txt\"\r\n\r\ntypedef long double ld;\r\ntypedef long long ll;\r\ntypedef pair<int, int> pii;\r\n\r\n#define NMAX 100005\r\n\r\nint n, m;\r\nvector<int> g[NMAX];\r\nvector<int> gt[NMAX];\r\n\r\nint deg[NMAX];\r\nint d[NMAX];\r\n\r\nint main()\r\n{\r\n  \r\n\r\n    scanf(\"%d %d\", &n, &m);\r\n    forn(i, m)\r\n    {\r\n        int u, v;\r\n        scanf(\"%d %d\", &u, &v);\r\n        --u; --v;\r\n        g[u].pb(v);\r\n        gt[v].pb(u);\r\n        deg[u]++;\r\n    }\r\n\r\n    int s, t;\r\n    cin >> s >> t;\r\n    --s; --t;\r\n\r\n    memset(d, -1, sizeof(d));\r\n\r\n    queue<int> q;\r\n    q.push(t);    \r\n    d[t] = 0;\r\n\r\n    queue<int> nq;\r\n    nq.push(t);\r\n\r\n    while (!q.empty())\r\n    {\r\n\r\n    while (!q.empty())\r\n    {\r\n        int v = q.front(); q.pop();\r\n\r\n        forv(i, gt[v])\r\n        {\r\n            int u = gt[v][i];\r\n\r\n            if (d[u] != -1) continue;\r\n\r\n            deg[u]--;\r\n\r\n            if (deg[u] == 0)\r\n            {\r\n                q.push(u);\r\n                d[u] = d[v];\r\n                nq.push(u);\r\n            }\r\n        }\r\n    }\r\n\r\n    while (!nq.empty())\r\n    {\r\n        int v = nq.front(); nq.pop();\r\n\r\n        forv(i, gt[v])\r\n        {\r\n            int u = gt[v][i];\r\n\r\n            if (d[u] == -1)\r\n            {\r\n                d[u] = d[v] + 1;\r\n                q.push(u);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    nq = q;\r\n\r\n    }\r\n\r\n    cout << d[s] << endl;\r\n    return 0;\r\n}"
}