{
    "id": 15405841,
    "contestId": 346,
    "creationTimeSeconds": 1452959309,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "Ali_shf"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 20992000,
    "source": "//in the name of god\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int MAXN = 1001 * 1001 , MOD =  (1e9+7) ;\r\n\r\nvector < int > a [ MAXN ] ;\r\n\r\nint mark [ MAXN ] = {}, dp [ MAXN ] = {};\r\n\r\nint s , t;\r\n\r\nvoid dfs(int u)\r\n{\r\n    mark[u]=1;\r\n    int f=1 , mn=1e9 , mx=0 ;\r\n    for(auto v : a[u])\r\n    {\r\n        if(mark[v])\r\n        {\r\n            if(mark[v]==1)\r\n            {\r\n                f=0;\r\n            }\r\n            else\r\n            {\r\n                mn = min (mn,dp[v]);\r\n                mx= max( mx , dp[v]);\r\n            }\r\n            continue;\r\n        }\r\n        dfs(v);\r\n        mn = min (mn,dp[v]);\r\n        mx= max( mx , dp[v]);\r\n\r\n    }\r\n    dp[u]=mn+1;\r\n    if(f&&mn<1e9)\r\n        dp[u] = min(dp[u],mx);\r\n    mark[u]=2;\r\n}\r\n main()\r\n{\r\n    ios::sync_with_stdio(0);cin.tie(0);\r\n    int n , m;\r\n    cin >> n >> m;\r\n    int x , y;\r\n    for(int i = 0 ; i < m ; i ++)\r\n    {\r\n        cin >> x >> y ;\r\n        a[x].push_back(y);\r\n    }\r\n    cin >> s >> t;\r\n    mark[t]=2;\r\n    dp[t]=0;\r\n    dfs(s);\r\n    if(dp[s]>1e8)\r\n        return cout<<-1,0;\r\n    cout << dp[s];\r\n\r\n\r\n\r\n}"
}