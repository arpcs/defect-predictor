{
    "id": 135077369,
    "contestId": 346,
    "creationTimeSeconds": 1636710957,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "Misaka10039"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 45260800,
    "source": "#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <queue>\n#define eb emplace_back\nusing namespace std;\n\nconst int N = 1000100;\nint dis[N], flag[N];\nvector<int> e[N], er[N];\n\nstruct Node {\n\tint x, y;\n\tbool operator < (const Node &a) const {\n\t\treturn y > a.y;\n\t}\n};\npriority_queue<Node> q;\nstruct Node2 {\n\tint x, y;\n\tbool operator < (const Node2 &a) const {\n\t\treturn y < a.y;\n\t}\n};\nint mn[N], mx[N], num[N];\n\ninline void upd(int v, int x) {\n\tmn[v] = min(mn[v], dis[x]);\n\tmx[v] = max(mx[v], dis[x]);\n\tnum[v]--;\n\tif (!num[v]) dis[v] = min(mn[v] + 1, mx[v]);\n\telse dis[v] = mn[v] + 1;\n}\n\nint main() {\n\tint n, m, s, t;\n\tscanf(\"%d %d\", &n, &m);\n\tfor (int i = 1, u, v; i <= m; i++)\n\t\tscanf(\"%d %d\", &u, &v), e[u].eb(v), er[v].eb(u);\n\tscanf(\"%d %d\", &s, &t);\n\tmemset(dis, 0x3f, sizeof(dis));\n\tmemset(mn, 0x3f, sizeof(mn));\n\tfor (int i = 1; i <= n; i++) num[i] = e[i].size();\n\tdis[t] = 0, q.push((Node){t, 0});\n\n\twhile (!q.empty()) {\n\t\tint x = q.top().x; q.pop();\n\t\tif (flag[x]) continue; flag[x] = 1;\n\t\tfor (int v: er[x]) upd(v, x), q.push((Node){v, dis[v]});\n\t}\n\tprintf(\"%d\\n\", dis[s]);\n}\n"
}