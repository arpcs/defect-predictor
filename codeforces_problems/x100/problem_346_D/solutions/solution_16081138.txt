{
    "id": 16081138,
    "contestId": 346,
    "creationTimeSeconds": 1455722387,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "leeson"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 622,
    "memoryConsumedBytes": 23244800,
    "source": "#include <cstdio>\r\n#include <cstdlib>\r\n#include <algorithm>\r\n#include <cstring>\r\n#include <cmath>\r\n#include <functional>\r\n#include <queue>\r\n#include <vector>\r\n#include <set>\r\n#include <map>\r\n#include <string>\r\n#include <ctime>\r\n#include <climits>\r\n#include <iostream>\r\n#include <cassert>\r\nusing namespace std;\r\n\r\n#define LL long long\r\n#define X first\r\n#define Y second\r\n#define mp make_pair\r\n#define bkp fprintf(stderr, \"break point\\n\")\r\n#define sp putchar(' ')\r\n#define ln putchar('\\n')\r\n#define pii pair<int, int>\r\n#define Debug(...) fprintf(stderr, __VA_ARGS__)\r\n#define Dispp(x) cerr << #x << '=' << x << ' '\r\n#define Dispn(x) cerr << #x << '=' << x << endl\r\n#define dispp(x) cout << #x << '=' << x << ' '\r\n#define dispn(x) cout << #x << '=' << x << endl\r\n\r\nconst int maxN = 1e6 + 5;\r\nconst int maxM = 1e6 + 5;\r\nconst int INF = 0x3f3f3f3f;\r\n\r\nstruct Edge {\r\n    int v, next;\r\n\r\n    Edge() {}\r\n}G[maxM];\r\n\r\nint st[maxN], e;\r\n\r\nvoid addedge(int u, int v) {\r\n    G[++e].v = v; G[e].next = st[u]; st[u] = e;\r\n}\r\n\r\nint main() {\r\n#ifdef Leeson\r\n    freopen(\"tmp.in\", \"r\", stdin);\r\n    freopen(\"tmp.out\", \"w\", stdout);\r\n#endif\r\n\r\n    static int ind[maxN];\r\n    static int ans[maxN];\r\n    static bool vis[maxN];\r\n\r\n    int N, M;\r\n    scanf(\"%d%d\", &N, &M);\r\n    for(int i = 1; i <= M; ++i) {\r\n        int u, v;\r\n        scanf(\"%d%d\", &u, &v);\r\n        addedge(v, u);\r\n        ind[u]++;\r\n    }\r\n\r\n    int S, T;\r\n    scanf(\"%d%d\", &S, &T);\r\n//    dispp(S); dispn(T);\r\n\r\n    deque<int> q;\r\n    memset(ans, INF, sizeof(ans));\r\n    memset(vis, 0, sizeof(vis));\r\n    ans[T] = 0;\r\n    q.push_back(T);\r\n    while(!q.empty()) {\r\n        int u = q.front(); q.pop_front();\r\n        if(vis[u]) continue; vis[u] = 1;\r\n\r\n        for(int e = st[u]; e; e = G[e].next) {\r\n            int v = G[e].v;\r\n\r\n            if(!--ind[v]) {\r\n                if(ans[v] > ans[u]) {\r\n                    ans[v] = ans[u];\r\n                    q.push_front(v);\r\n                }\r\n            } else if(ans[v] > ans[u] + 1) {\r\n                ans[v] = ans[u] + 1;\r\n                q.push_back(v);\r\n            }\r\n        }\r\n    }\r\n\r\n    // for(int i = 1; i <= N; ++i) {\r\n    //     dispp(i); dispn(ans[i]);\r\n    // }\r\n\r\n    cout << ((ans[S] == INF) ? -1 : ans[S]) << endl;\r\n\r\n    return 0;\r\n}\r\n"
}