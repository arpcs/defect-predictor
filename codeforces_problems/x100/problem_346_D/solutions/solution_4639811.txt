{
    "id": 4639811,
    "contestId": 346,
    "creationTimeSeconds": 1380715628,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "SepehrZmn"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 2808,
    "memoryConsumedBytes": 68505600,
    "source": "#include <iostream>\n#include <vector>\n#include <set>\nusing namespace std;\nconst int INF = 1000 * 1000 * 1000 + 7;\n\nvector<int> in[1000005];\nvector<int> out[1000005];\nset<int> A, B;\nint d[1000005], ans[1000005];\n\nint main()\n{\n\tint n, m;\n\tcin >> n >> m;\n\tfor (int i = 0; i < m; i++)\n\t{\n\t\tint x, y;\n\t\tcin >> x >> y;\n\t\tx--; y--;\n\t\tout[x].push_back(y);\n\t\tin[y].push_back(x);\n\t\td[x]++;\n\t}\n\tfor (int i = 0; i < n; i++)\n\t\tans[i] = -1;\n\tint s, t, c = 0;\n\tcin >> s >> t;\n\ts--;\n\tt--;\n\tA.insert(t);\n\twhile(A.size())\n\t{\n\t\twhile(A.size())\n\t\t{\n\t\t\tint now = *(A.begin());\n\t\t\td[now] = 0;\n\t\t\tans[now] = c;\n\t\t\tfor(int i = 0; i < in[now].size(); i++)\n\t\t\t{\n\t\t\t\td[in[now][i]]--;\n\t\t\t\tif(!d[in[now][i]])\n\t\t\t\t{\n\t\t\t\t\tB.erase(in[now][i]);\n\t\t\t\t\tA.insert(in[now][i]);\n\t\t\t\t}\n\t\t\t\telse if (d[in[now][i]] > 0)\n\t\t\t\t\tB.insert(in[now][i]);\n\t\t\t}\n\t\t\tA.erase(now);\n\t\t}\n\t\tA = B;\n\t\tB.clear();\n\t\tc++;\n\t}\n\tcout << ans[s] << endl;\n\treturn 0;\n}"
}