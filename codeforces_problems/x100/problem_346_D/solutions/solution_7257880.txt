{
    "id": 7257880,
    "contestId": 346,
    "creationTimeSeconds": 1406471566,
    "relativeTimeSeconds": 7066,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "erfanmi"
            },
            {
                "handle": "contest1234"
            }
        ],
        "participantType": "VIRTUAL",
        "teamId": 5638,
        "teamName": "Team name",
        "ghost": false,
        "startTimeSeconds": 1406464500
    },
    "programmingLanguage": "GNU C++0x",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": " By Tparsa, contest: Codeforces Round #201 (Div. 1), problem: (D) Robot Control, Accepted, #\r\n\r\n#include <cstring>\r\n#include <iostream>\r\n#include <algorithm>\r\n#include <queue>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nint N, M, A, B;\r\nvector<int> V[1000002], W[1000002];\r\nqueue<int> Q;\r\nbool inQ[1000002];\r\nint minC[1000002];\r\n\r\nint main()\r\n{\r\n    cin.sync_with_stdio(false);\r\n    \r\n    cin >> N >> M;\r\n    for (int i = 1, nod1, nod2; i <= M; ++i)\r\n    {\r\n        cin >> nod1 >> nod2;\r\n        V[nod1].push_back(nod2);\r\n        W[nod2].push_back(nod1);\r\n    }\r\n    cin >> A >> B;\r\n    \r\n    memset(minC, -1, sizeof(minC));\r\n    \r\n    minC[B] = 0;\r\n    for (vector<int>::iterator it = W[B].begin(); it != W[B].end(); ++it)\r\n    {\r\n        Q.push(*it);\r\n        inQ[*it] = true;\r\n    }\r\n    \r\n    while (!Q.empty())\r\n    {\r\n        int now = Q.front();\r\n        Q.pop();\r\n        \r\n        inQ[now] = false;\r\n        \r\n        bool any = false, all = true;\r\n        int maxnow = 0;\r\n        \r\n        for (vector<int>::iterator it = V[now].begin(); it != V[now].end(); ++it)\r\n            if (minC[*it] != -1)\r\n            {\r\n                maxnow = max(maxnow, minC[*it]);\r\n                any = true;\r\n            }\r\n            else\r\n                all = false;\r\n        \r\n        bool changed = false;\r\n        if (any && all && (minC[now] == -1 || maxnow < minC[now]))\r\n        {\r\n            minC[now] = maxnow;\r\n            changed = true;\r\n        }\r\n        \r\n        int minnow = -1;\r\n        for (vector<int>::iterator it = V[now].begin(); it != V[now].end(); ++it)\r\n            if (minC[*it] != -1 && (minnow == -1 || minC[*it] < minnow))\r\n                minnow = minC[*it];\r\n        \r\n        if (minnow != -1 && (minC[now] == -1 || minnow + 1 < minC[now]))\r\n        {\r\n            minC[now] = minnow + 1;\r\n            changed = true;\r\n        }\r\n        \r\n        if (changed)\r\n            for (vector<int>::iterator it = W[now].begin(); it != W[now].end(); ++it)\r\n                if (!inQ[*it])\r\n                {\r\n                    Q.push(*it);\r\n                    inQ[*it] = true;\r\n                }\r\n    }\r\n    \r\n    cout << minC[A] << '\\n';\r\n}\r\n"
}