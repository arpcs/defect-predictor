{
    "id": 4548997,
    "contestId": 346,
    "creationTimeSeconds": 1380029866,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "xtalclr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 32665600,
    "source": "#include <cstdio>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nconst int max_n = 1000000;\r\nconst int max_m = 1000000;\r\nint n, m, st[max_m], ed[max_m], s, t; \r\nint deg[max_n];\r\nvector<int> rev[max_n];\r\nint q[max_n], q_st, q_ed;\r\nint ans[max_n];\r\n\r\nint main()\r\n{\r\n    scanf(\"%d %d\", &n, &m);\r\n    for(int i = 0; i < m; i++)\r\n        scanf(\"%d %d\", &st[i], &ed[i]), st[i]--, ed[i]--;\r\n    scanf(\"%d %d\", &s, &t), s--, t--;\r\n\r\n    for(int i = 0; i < n; i++)\r\n        deg[i] = 0, rev[i].clear();\r\n    for(int i = 0; i < m; i++)\r\n        if(st[i] != t)\r\n            deg[st[i]]++, rev[ed[i]].push_back(st[i]);\r\n\r\n    for(int i = 0; i < n; i++)\r\n        ans[i] = -1;\r\n    q_st = q_ed = 0;\r\n    q[q_ed++] = t;\r\n    int cans = 0;\r\n    while(q_st < q_ed)\r\n    {\r\n        int cst = q_st;\r\n        while(q_st < q_ed)\r\n        {\r\n            int nd = q[q_st++];\r\n            ans[nd] = cans;\r\n            for(int j = 0; j < int(rev[nd].size()); j++)\r\n            {\r\n                int pnd = rev[nd][j];\r\n                deg[pnd]--;\r\n                if(deg[pnd] == 0)\r\n                    q[q_ed++] = pnd;\r\n            }\r\n        }\r\n        int ced = q_ed;\r\n        for(int i = cst; i < ced; i++)\r\n        {\r\n            int nd = q[i];\r\n            for(int j = 0; j < int(rev[nd].size()); j++)\r\n            {\r\n                int pnd = rev[nd][j];\r\n                if(ans[pnd] == -1)\r\n                    q[q_ed++] = pnd;\r\n            }\r\n        }\r\n        cans++;\r\n    }\r\n\r\n    printf(\"%d\\n\", ans[s]);\r\n\r\n    return 0;\r\n}\r\n"
}