{
    "id": 5821592,
    "contestId": 346,
    "creationTimeSeconds": 1390851206,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "NuM"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "MS C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 872,
    "memoryConsumedBytes": 80384000,
    "source": "#include <stdio.h>\r\n#include <iostream>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <string>\r\n#include <queue>\r\n#include <map>\r\n#include <set>\r\n#include <cmath>\r\n#include <sstream>\r\n#include <stack>\r\n#include <cassert>\r\n#include <string.h>\r\n#include <ctime>\r\n\r\n#define pb push_back\r\n#define mp make_pair\r\n#define PI 3.1415926535897932384626433832795\r\n#define sqr(x) (x)*(x)\r\n#define forn(i, n) for(int i = 0; i < n; ++i)\r\n#define ALL(x) x.begin(), x.end()\r\n#define sz(x) int((x).size())\r\n#define X first\r\n#define Y second\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double ld;\r\nusing namespace std;\r\ntypedef pair<int,int> pii;\r\nconst int INF = 2147483647;\r\nconst ll LLINF = 9223372036854775807LL;\r\n\r\nconst int maxn = 1000010;\r\nvector<int> a[maxn];\r\nvector<int> arev[maxn];\r\nbool u[maxn];\r\nint mx[maxn];\r\nint mn[maxn];\r\nint d[maxn];\r\nint rem[maxn];\r\n\r\nint main()\r\n{\r\n#ifndef ONLINE_JUDGE\r\n\tfreopen(\"input.txt\", \"r\", stdin);\r\n\t//freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n\tint n, m; scanf(\"%d%d\", &n, &m);\r\n\tforn(i, m) {\r\n\t\tint fr, to; scanf(\"%d%d\", &fr, &to); --fr, --to;\r\n\t\ta[fr].pb(to);\r\n\t\tarev[to].pb(fr);\r\n\t\trem[fr]++;\r\n\t}\r\n\tconst int cinf = 1000000000;\r\n\tfill(mx,mx+maxn,-cinf);\r\n\tfill(mn,mn+maxn,cinf);\r\n\tfill(d,d+maxn,cinf);\r\n\tint s, t; scanf(\"%d%d\", &s, &t); --s, --t;\r\n\tpriority_queue<pii> q;\r\n\tu[t] = true;\r\n\td[t] = 0;\r\n\tq.push(mp(-d[t],t));\r\n\twhile (!q.empty()) {\r\n\t\tpii cur = q.top(); q.pop();\r\n\t\tcur.X = -cur.X;\r\n\t\tif (d[cur.Y] != cur.X) continue;\r\n\t\tint curd = cur.X;\r\n\t\tint curv = cur.Y;\r\n\t\tu[curv] = 1;\r\n\t\tforn(i, sz(arev[curv])) {\r\n\t\t\tint to = arev[curv][i];\r\n\t\t\tif (u[to]) continue;\r\n\t\t\tmn[to] = min(mn[to], curd);\r\n\t\t\tmx[to] = max(mx[to], curd);\r\n\t\t\tint prevd = d[to];\r\n\t\t\td[to] = mn[to]+1;\r\n\t\t\trem[to]--;\r\n\t\t\tif (rem[to] == 0) d[to] = min(d[to], mx[to]);\r\n\t\t\tif (d[to] < prevd) q.push(mp(-d[to],to));\r\n\t\t}\r\n\t}\r\n\tif (d[s] == cinf) d[s] = -1;\r\n\tprintf(\"%d\\n\", d[s]);\r\n\treturn 0;\r\n}"
}