{
    "id": 6944282,
    "contestId": 346,
    "creationTimeSeconds": 1403470477,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "ahmad.soliman"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 60,
    "memoryConsumedBytes": 20070400,
    "source": "#include <iostream>\r\n#include <fstream>\r\n#include <string>\r\n#include <string.h>\r\n#include <stdio.h>\r\n#include <map>\r\n#include <vector>\r\n#include <queue>\r\n#include <algorithm>\r\n#include <set>\r\n#include <math.h>\r\n#include <bitset>\r\n\r\n#define pb push_back\r\n\r\nusing namespace std;\r\n\r\ntypedef pair<int, int> ii;\r\ntypedef pair<int, ii> iii;\r\ntypedef pair<ii, ii> iiii;\r\ntypedef pair<double, int> di;\r\ntypedef vector<int> vi;\r\ntypedef vector<di> vdi;\r\ntypedef vector<vi> vvi;\r\ntypedef vector<ii> vii;\r\ntypedef vector<vii> vvii;\r\n\r\nvector<int> g[1000005];\r\n\r\nint vis[1000005], solv[1000005];\r\n\r\nint dfs(int u, int t){\r\n    if(vis[u]) return solv[u];\r\n    vis[u]=1;\r\n    solv[u]=0;\r\n    if(u==t) return solv[u]=1;\r\n    for(int i=0; i<g[u].size(); i++){\r\n        solv[u] |= dfs(g[u][i], t);\r\n    }\r\n    return solv[u];\r\n}\r\n\r\nint main() {\r\n    int n,m,u,v,s,t;\r\n    scanf(\"%d %d\", &n, &m);\r\n\r\n    for(int i=0; i<m; i++){\r\n        scanf(\"%d %d\", &u, &v);\r\n        u--,v--;\r\n        g[u].push_back(v);\r\n    }\r\n    scanf(\"%d %d\", &s, &t);\r\n    s--,t--;\r\n    dfs(s,t);\r\n\r\n    if(solv[s]==0){\r\n        printf(\"-1\\n\");\r\n        return 0;\r\n    }\r\n\r\n    queue<ii> q, q2;\r\n    q.push(ii(0,s));\r\n\r\n    int maxv=0;\r\n    vector<int> lev;\r\n    memset(vis, 0, sizeof vis);\r\n    while(!q.empty()){\r\n        ii p = q.front(); q.pop();\r\n        u = p.second;\r\n\r\n        if(u==t) maxv = max(maxv, p.first);\r\n\r\n        if(vis[u]) continue;\r\n        lev.pb(u);\r\n\r\n        bool notvalid=0;\r\n        for(int i=0; i<g[u].size(); i++){\r\n            if(vis[g[u][i]] || solv[g[u][i]]==0) {notvalid=1; break;}\r\n        }\r\n\r\n        for(int i=0; i<g[u].size(); i++){\r\n            q2.push(ii(p.first+notvalid, g[u][i]));\r\n        }\r\n\r\n        if(q.empty()){\r\n            q = q2;\r\n            for(int i=0; i<lev.size(); i++) vis[lev[i]]=1;\r\n            lev.clear();\r\n        }\r\n    }\r\n    printf(\"%d\\n\", maxv);\r\n\r\n    return 0;\r\n\r\n}\r\n"
}