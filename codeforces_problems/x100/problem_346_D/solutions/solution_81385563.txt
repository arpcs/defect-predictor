{
    "id": 81385563,
    "contestId": 346,
    "creationTimeSeconds": 1590412012,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "hieulaptop"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 810,
    "memoryConsumedBytes": 37273600,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define fi first\r\n#define se second\r\n#define mp make_pair\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define ar array\r\n\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef pair<int, int> ii;\r\n\r\nconst int maxn = 1e6 + 5;\r\n\r\nint N, M, s, t;\r\nvector<int> adj[maxn];\r\nint out[maxn];\r\nint dist[maxn];\r\nbool vis[maxn];\r\n\r\nsigned main(void)\r\n{\r\n  ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n  #ifdef LOCAL\r\n    freopen(\"A.INP\", \"r\", stdin);\r\n    freopen(\"A.OUT\", \"w\", stdout);\r\n  #endif // LOCAL\r\n  cin >> N >> M;\r\n  while(M--){\r\n    int u, v; cin >> u >> v;\r\n    adj[v].eb(u);\r\n    out[u]++;\r\n  }\r\n  cin >> s >> t;\r\n  deque<int> dq;\r\n  memset(dist, -1, sizeof dist);\r\n  dist[t] = 0;\r\n  dq.pb(t);\r\n  while(dq.size()){\r\n    int u = dq.front(); dq.pop_front();\r\n    if(u == s) break;\r\n    if(vis[u]) continue;\r\n    vis[u] = true;\r\n    for(int v : adj[u]){\r\n      out[v]--;\r\n      if(out[v] == 0){\r\n        if(dist[v] == -1 || dist[v] > dist[u]){\r\n          dist[v] = dist[u];\r\n          dq.push_front(v);\r\n        }\r\n      }\r\n      else{\r\n        if(dist[v] == -1 || dist[v] > dist[u] + 1){\r\n          dist[v] = dist[u] + 1;\r\n          dq.push_back(v);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  cout << dist[s];\r\n}\r\n"
}