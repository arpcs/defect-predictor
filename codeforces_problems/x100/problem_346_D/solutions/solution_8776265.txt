{
    "id": 8776265,
    "contestId": 346,
    "creationTimeSeconds": 1416587441,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "Olaf"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 25088000,
    "source": "#include <bits/stdc++.h>\n\n#define mp make_pair\n#define pb push_back\n\nusing namespace std; // review algorithm, debug\n\nconst int maxl = 1000 * 1000 + 2;\nconst int INF = 1000 * 1000 * 100;\n\nvector < pair < int, int > > v [ maxl ];\nbool w [ maxl ];\nint n, m;\n\nint s, t;\n\nint res [ maxl ];\nint marked [ maxl ];\n\nint dis [ maxl ];\n\n\n\nvoid dfs ( int index ){\n\tmarked [ index ] = 1;\n\n\tint mn = INF, mx = -1, tmp = INF;\n\tfor ( int i = 0 ; i < v [ index ].size () ; i++ ){\n\t\tint node = v [ index ][ i ].first;\n\n\t\tif ( marked [ node ] == 0 )\n\t\t\tdfs ( node );\n\n\t\tmx = max ( mx, res [ node ] );\n\t\tmn = min ( mn, res [ node ] );\n\t\tif ( res [ node ] >= 0 )\n\t\t\ttmp = min ( tmp, res [ node ] );\n\t}\n\n\tbool flg = ( mn != mx );\n\tfor ( int i = 0, edge ; i < v [ index ].size () ; i++ )\n\t\tedge = v [ index ][ i ].second,\n\t\tw [ edge ] = flg;\n\n\tmarked [ index ] = 2;\n\n\tif ( mx == -1 )\n\t\tres [ index ] = -1;\n\telse\n\t\tres [ index ] = tmp + ( mn != mx );\n//printf ( \"at node %d, mn = %d, mx = %d, tmp = %d, res = %d\\n\", index, mn, mx, tmp, res [ index ] );\n}\n\n\n\nint main (){\n\tcin >> n >> m;\n\tfor ( int i = 0, a, b ; i < m ; i++ )\n\t\tcin >> a >> b,\n\t\ta--, b--,\n\n\t\tv [ a ].pb ( mp ( b, i ) );\n\tcin >> s >> t;\n\ts--, t--;\n\n\n\n\tmemset ( res, -1, sizeof res );\n\tmarked [ t ] = 2; res [ t ] = 0;\n\n\tfor ( int i = 0 ; i < n ; i++ )\n\t\tif ( marked [ i ] == 0 )\n\t\t\tdfs ( i );\n\n\n\n\tmemset ( dis, 63, sizeof dis );\n\n\tdeque < int > dq;\n\tdq.push_front ( s ); dis [ s ] = 0;\n\twhile ( !dq.empty () ){\n\t\tint ind = dq.front ();\n\n\t\tfor ( int i = 0 ; i < v [ ind ].size () ; i++ ){\n\t\t\tint node = v [ ind ][ i ].first, edge = v [ ind ][ i ].second;\n\n\t\t\tif ( dis [ node ] > dis [ ind ] + w [ edge ] ){\n\t\t\t\tdis [ node ] = dis [ ind ] + w [ edge ];\n\n\t\t\t\tif ( w [ edge ] )\n\t\t\t\t\tdq.push_back ( node );\n\t\t\t\telse\n\t\t\t\t\tdq.push_front ( node );\n\t\t\t}\n\t\t}\n\n\t\tdq.pop_front ();\n\t}\n\n\tif ( res [ s ] == -1 )\n\t\tcout << -1 << endl;\n\telse\n\t\tcout << res [ s ] << endl;\n}\n"
}