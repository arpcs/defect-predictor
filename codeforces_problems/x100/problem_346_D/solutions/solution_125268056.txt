{
    "id": 125268056,
    "contestId": 346,
    "creationTimeSeconds": 1628477420,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "SoondieTarow"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 3891200,
    "source": " #include <bits/stdc++.h>\r\nusing namespace std;\r\nusing ll = long long;\r\nconst ll INF = (1LL << 60);\r\n#define rep(i, n) for (ll i = 0; i < (ll)(n); i++)\r\nvector<vector<ll>>G;\r\nint main() {\r\n    ll n,m;cin>>n>>m;\r\n    G.resize(n);\r\n    rep(i,m){\r\n        ll x,y;cin>>x>>y;\r\n        x--;y--;\r\n        G[x].push_back(y);\r\n        G[y].push_back(x);\r\n    }\r\n    ll s,g;cin>>s>>g;\r\n    s--;g--;\r\n    vector<ll>dp(n,INF);\r\n    vector<bool>seen(n,false);\r\n    dp[s]=0;\r\n    deque<ll>dq;\r\n    dq.push_front(s);\r\n    seen[s]=true;\r\n    while(!dq.empty()){\r\n        int p=dq.front();\r\n        dq.pop_front();\r\n        int v = p;\r\n        seen[v]=true;\r\n        int j=0;\r\n        for(auto y:G[v])if(!seen[y])j++;\r\n        for(auto y:G[v]){\r\n            if(seen[y])continue;\r\n            if(j==1){\r\n                dp[y]=min(dp[y],dp[v]);\r\n                dq.push_front(y);\r\n            }\r\n            else{\r\n                dp[y]=min(dp[y],dp[v]+1);\r\n                dq.push_back(y);\r\n            }\r\n        }\r\n    }\r\n    cout<<dp[g]<<endl;\r\n\r\n}"
}