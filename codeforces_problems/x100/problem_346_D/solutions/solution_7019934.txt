{
    "id": 7019934,
    "contestId": 346,
    "creationTimeSeconds": 1404631725,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "Arterm"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "GNU C++0x",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 592,
    "memoryConsumedBytes": 45363200,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <queue>\r\n#include <string>\r\n#include <algorithm>\r\n#include <set>\r\n#include <deque>\r\n\r\nusing namespace std;\r\n\r\n#define M 1001000\r\n#define INF 1000000000\r\n\r\nint n, s, t, m, d[M], mn[M], mx[M], p[M];\r\nvector<int> in[M];\r\ndeque<int> q;\r\nbool u[M];\r\n\r\nvoid read() {\r\n    cin >> n >> m;\r\n    for (int i = 0, x, y; i < m; ++i) {\r\n        cin >> x >> y;\r\n        ++p[x];\r\n        in[y].push_back(x);\r\n    }\r\n    cin >> s >> t;\r\n}\r\n\r\nvoid relax(int v) {\r\n    u[v] = true;\r\n    for (auto &to : in[v]) {\r\n            if (d[to] > d[v] + 1) {\r\n                d[to] = d[v] + 1;\r\n                q.push_back(to);\r\n            }\r\n            mx[to] = max(mx[to], d[v]);\r\n            mn[to] = min(mn[to], d[v]);\r\n            --p[to];\r\n            if (p[to] == 0 && mn[to] == mx[to] && d[to] > d[v]) {\r\n                q.push_front(to);\r\n                d[to] = d[v];\r\n            }\r\n        }\r\n}\r\n\r\nvoid run() {\r\n    fill(d, d + M, INF);\r\n    fill(mn, mn + M, INF);\r\n    fill(mx, mx + M, -INF);\r\n    d[t] = 0;\r\n    q.push_back(t);\r\n\r\n    while (!q.empty()) {\r\n        int v = q.front();\r\n        q.pop_front();\r\n        if (u[v])\r\n            continue;\r\n        relax(v);\r\n    }\r\n\r\n    if (d[s] == INF)\r\n        cout << \"-1\\n\";\r\n    else\r\n        cout << d[s] << \"\\n\";\r\n}\r\n\r\nint main() {\r\n#ifdef TROLL\r\n    freopen(\"test.in\", \"r\", stdin);\r\n    freopen(\"test.out\", \"w\", stdout);\r\n#else\r\n    ios_base::sync_with_stdio(0);\r\n#endif\r\n\r\n    read();\r\n    run();\r\n\r\n\r\n    return 0;\r\n}"
}