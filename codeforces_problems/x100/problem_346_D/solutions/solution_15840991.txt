{
    "id": 15840991,
    "contestId": 346,
    "creationTimeSeconds": 1454756661,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "PedramAghazadeh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 60,
    "memoryConsumedBytes": 33075200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define pf pop_front\r\n#define pb push_back\r\n#define ulli unsigned long long int\r\n#define LL __int64\r\n#define FOR(i,begin,end) for (LL i=begin;i<=end;i++)\r\n#define rep(i,t) for (LL i=0;i<t;i++)\r\n#define pii pair<int,int>\r\nconst int MAX=1e6+7;\r\nLL n,x,y,m,s,t,d[MAX];\r\nbool v[MAX],bad;\r\nset<pii>q;\r\nvector<LL>a[MAX],b[MAX];\r\nint main()\r\n{\r\n  cin>>n>>m;\r\n  FOR(i,1,m)\r\n  {\r\n    cin>>x>>y;\r\n    a[y].pb(x);\r\n    b[x].pb(y);\r\n  }\r\n  cin>>s>>t;\r\n  q.insert(pii(d[t],t));\r\n  while(q.size())\r\n  {\r\n    LL cur=q.begin()->second,dis=q.begin()->first;\r\n    if(cur==s)return cout<<dis<<\"\\n\",0;\r\n    q.erase(pii(dis,cur));\r\n    v[cur]=true;\r\n    rep(i,a[cur].size())\r\n    {\r\n      LL now=a[cur][i],maxi,mini,backup;\r\n      if(!v[now])\r\n      {\r\n        bad=false;\r\n        maxi=dis;\r\n        mini=dis;\r\n        rep(j,b[now].size())\r\n        {\r\n          backup=b[now][j];\r\n          if(v[backup])\r\n          {\r\n            maxi=max(maxi,d[backup]);\r\n            mini=min(mini,d[backup]);\r\n          }\r\n          else\r\n          {\r\n            bad=true;\r\n          }\r\n        }\r\n        d[now]=min(maxi,mini+1);\r\n        v[now]=true;\r\n        if(bad){d[now]=mini+1;}\r\n        if(now==s)return cout<<d[now]<\"\\n\",0;\r\n        q.insert(pii(d[now],now));\r\n      }\r\n    }\r\n  }\r\n  return cout<<d[s]<<\"\\n\",0;\r\n}"
}