{
    "id": 5095560,
    "contestId": 346,
    "creationTimeSeconds": 1384419749,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "iamminh96"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "FPC",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 374,
    "memoryConsumedBytes": 37171200,
    "source": "{$coperators on}\r\n\r\nuses            math;\r\n\r\ntype            int     = longint;\r\n                ll      = int64;\r\n                bool    = boolean;\r\n\r\nconst           fi      = '';\r\n                fo      = '';\r\n                nmax    = 1000010;\r\n                oo      = trunc(1e9)+7;\r\n\r\nvar             a       : array[1..nmax] of int;\r\n                de      : array[1..nmax] of int;\r\n                k       : array[0..nmax] of int;\r\n                w       : array[1..nmax] of int;\r\n                x , y   : array[1..nmax] of int;\r\n                top , bot       : int;\r\n                count           : int;\r\n                q       : array[1..nmax] of int;\r\n                mark    : array[1..nmax] of bool;\r\n                d       : array[1..nmax] of int;\r\n                c       : array[1..nmax] of int;\r\n                n , m   : int;\r\n                s , f   : int;\r\n\r\nprocedure       enter;\r\n  var\r\n                i       : int;\r\n  begin\r\n                readln(n , m);\r\n                for i := 1 to m do\r\n                   begin\r\n                      readln(x[i] , y[i]);\r\n                      de[x[i]] += 1;\r\n                      k[y[i]]+=1;\r\n                   end;\r\n\r\n                readln(s , f);\r\n\r\n                for i := 1 to n do k[i] += k[i-1];\r\n\r\n                for i := 1 to m do\r\n                   begin\r\n                      w[y[i]] += 1;\r\n                      a[k[y[i]-1]+w[y[i]]] := x[i];\r\n                   end;\r\n  end;\r\n\r\nprocedure       push_back(u : int);\r\n  begin\r\n                top += 1;\r\n                if top = nmax then top := 1;\r\n                q[top] := u;\r\n                count += 1;\r\n                mark[u] := true;\r\n  end;\r\n\r\nprocedure       push_front(u : int);\r\n  begin\r\n                bot -= 1;\r\n                if bot = 0 then bot := nmax-1;\r\n                q[bot] := u;\r\n                count += 1;\r\n                mark[u] := true;\r\n  end;\r\n\r\nprocedure       pop(var u : int);\r\n  begin\r\n                u := q[bot];\r\n                bot += 1;\r\n                if bot = nmax then bot := 1;\r\n                count -= 1;\r\n  end;\r\n\r\nprocedure       bfs;\r\n  var\r\n                i       : int;\r\n                u       : int;\r\n  begin\r\n                while count > 0 do\r\n                   begin\r\n                      pop(u);\r\n\r\n                      if (c[u] = de[u]) then d[u] := max(0,d[u]-ord(de[u] > 1));\r\n\r\n                      for i := k[u-1]+1 to k[u] do\r\n                         begin\r\n                            if d[a[i]] = d[u]+ord(de[a[i]] > 1) then\r\n                               c[a[i]] += 1;\r\n                            if d[a[i]] > d[u]+ord(de[a[i]] > 1) then\r\n                               begin\r\n                                  d[a[i]] := d[u]+ord(de[a[i]] > 1);\r\n                                  c[a[i]] := 1;\r\n                                  if d[a[i]] = d[u] then push_front(a[i])\r\n                                  else push_back(a[i]);\r\n                               end;\r\n                         end;\r\n                   end;\r\n  end;\r\n\r\nprocedure       solve;\r\n  var\r\n                i       : int;\r\n  begin\r\n                top := 0;\r\n                bot := 1;\r\n\r\n                push_back(f);\r\n\r\n                for i := 1 to n do d[i] := oo;\r\n                d[f] := 0;\r\n\r\n                bfs;\r\n\r\n                if d[s] = oo then writeln(-1) else writeln(d[s]);\r\n  end;\r\n\r\n\r\nbegin\r\n                assign(input,fi);\r\n                reset(input);\r\n                assign(output,fo);\r\n                rewrite(output);\r\n\r\n                enter;\r\n                solve;\r\n\r\n                close(input);\r\n                close(output);\r\nend.\r\n"
}