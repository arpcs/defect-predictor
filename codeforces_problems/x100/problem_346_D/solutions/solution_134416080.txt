{
    "id": 134416080,
    "contestId": 346,
    "creationTimeSeconds": 1636126816,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 346,
        "index": "D",
        "name": "Robot Control",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 346,
        "members": [
            {
                "handle": "Parisa.Razzazi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1379691000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 904,
    "memoryConsumedBytes": 38400000,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int MAXN = 1e6 + 10, MOD = 1e9 + 7;\r\ndeque<int> dq;\r\nint d[MAXN], dp[MAXN];\r\nvector <int> in[MAXN];\r\nbool visited[MAXN];\r\n\r\nint main(){\r\n\tios::sync_with_stdio(false),cin.tie(0),cout.tie(0);\r\n\tlong long n, m, u, v, s, t;\r\n\tcin >> n >> m;\r\n\tfor (int i = 0; i < m; i++){\r\n\t\tcin >> u >> v;\r\n\t\tin[v].push_back(u);\r\n\t\td[u]++;\r\n\t}\r\n\tcin >> s >> t;\r\n\tfill (dp, dp + n + 1, INT_MAX / 2);\r\n\tdp[t] = 0;\r\n\tdq.push_back(t);\r\n\twhile (dq.size()){\r\n\t\tint v = dq.front();\r\n\t\t//cout << v << ' ' << dp[v] << endl;\r\n\t\tdq.pop_front();\r\n\t\tif (visited[v]) continue;\r\n\t\tvisited[v] = true;\r\n\t\tfor (auto u : in[v]){\r\n\t\t\td[u]--;\r\n\t\t\tif (d[u] == 0){\r\n\t\t\t\tdq.push_front(u);\r\n\t\t\t\tdp[u] = min(dp[u], dp[v]);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tdq.push_back(u);\r\n\t\t\t\tdp[u] = min(dp[u], dp[v] + 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (dp[s] == INT_MAX / 2)\r\n\t\tcout << -1 << endl;\r\n\telse \r\n\t\tcout << dp[s] << endl;\r\n}\r\n//1400/8/14"
}