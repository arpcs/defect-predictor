{
    "id": 1485374,
    "contestId": 173,
    "creationTimeSeconds": 1333739554,
    "relativeTimeSeconds": 3154,
    "problem": {
        "contestId": 173,
        "index": "A",
        "name": "Rock-Paper-Scissors",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1300,
        "tags": [
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 173,
        "members": [
            {
                "handle": "wind772"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1333736400
    },
    "programmingLanguage": "GNU C",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <stdio.h>\r\n#include <string.h>\r\n\r\nlong lcm(long a, long b);\r\n\r\nint main() {\r\n    int ncase, i;\r\n    char nike[1000];\r\n    char poly[1000];\r\n    char res[2000];\r\n    int nlen, plen, nlose=0, plose=0;\r\n    char n, p;\r\n    long r;\r\n\r\n    scanf(\"%d\", &ncase);\r\n    scanf(\"%s\", nike);\r\n    scanf(\"%s\", poly);\r\n\r\n    nlen = strlen(nike);\r\n    plen = strlen(poly);\r\n    r = lcm(nlen, plen);\r\n\r\n    for(i=0 ; i%nlen || i%plen ; i++) {\r\n        res[i] = nike[i%nlen] - poly[i%plen];\r\n    }\r\n\r\n\r\n    for(i=0 ; i<ncase && i<r ; i++) {\r\n        switch(res[i%r]) {\r\n            case -1:\r\n            case -2:\r\n            case 3:\r\n                plose++;\r\n                break;\r\n            case 1:\r\n            case 2:\r\n            case -3:\r\n                nlose++;\r\n                break;\r\n        }\r\n    }\r\n\r\n    if(ncase > r) {\r\n        plose *= (ncase/r);\r\n        nlose *= (ncase/r);\r\n    }\r\n\r\n    if(ncase > r)\r\n    for(i=r*(ncase/r) ; i<ncase ; i++) {\r\n        switch(res[i%r]) {\r\n            case -1:\r\n            case -2:\r\n            case 3:\r\n                plose++;\r\n                break;\r\n            case 1:\r\n            case 2:\r\n            case -3:\r\n                nlose++;\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    printf(\"%d %d\\n\", nlose, plose);\r\n    return 0;\r\n}\r\n"
}