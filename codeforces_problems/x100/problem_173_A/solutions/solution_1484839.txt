{
    "id": 1484839,
    "contestId": 173,
    "creationTimeSeconds": 1333735359,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 173,
        "index": "A",
        "name": "Rock-Paper-Scissors",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1300,
        "tags": [
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 173,
        "members": [
            {
                "handle": "Malinovsky239"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1333724400
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 60,
    "memoryConsumedBytes": 1638400,
    "source": "#include <algorithm>\r\n#include <iostream>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <cassert>\r\n#include <cstdio>\r\n#include <vector>\r\n#include <cctype>\r\n#include <string>\r\n#include <ctime>\r\n#include <cmath>\r\n#include <set>\r\n#include <map>\r\n\r\ntypedef long double LD;\r\ntypedef long long LL;\r\n\r\nusing namespace std;\r\n\r\n#define sz(A) (A).size()\r\n#define mp make_pair\r\n#define pb push_back\r\n\r\nconst int N = 255;\r\nint points[N][N], res1, res2;\r\n\r\nint main() {\r\n    points['S']['R'] = points['P']['S'] = points['R']['P'] = 1;\r\n    int n;\r\n    string s1, s2;\r\n    cin >> n >> s1 >> s2;\r\n\r\n    int l1 = sz(s1), l2 = sz(s2);\r\n    int lcm = l1 * l2 / __gcd(l1, l2);\r\n\r\n    if (n >= lcm) {\r\n        for (int i = 0; i < lcm; i++) {\r\n            char sym1 = s1[i % l1], sym2 = s2[i % l2];\r\n            res1 += points[sym1][sym2];\r\n            res2 += points[sym2][sym1];                     \r\n        }\r\n    }\r\n\r\n    res1 *= n / lcm;\r\n    res2 *= n / lcm;\r\n    n %= lcm;\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        char sym1 = s1[i % l1], sym2 = s2[i % l2];\r\n        res1 += points[sym1][sym2];\r\n        res2 += points[sym2][sym1];                     \r\n    }\r\n\r\n    cout << res1 << \" \" << res2 << endl;\r\n\r\n    return 0;\r\n}\r\n"
}