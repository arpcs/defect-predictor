{
    "id": 227690469,
    "contestId": 1870,
    "creationTimeSeconds": 1697033080,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1870,
        "index": "D",
        "name": "Prefix Purchase",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1870,
        "members": [
            {
                "handle": "ladamalina"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1695047700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#pragma GCC optimize(\"O3\")\r\n#pragma GCC optimize(\"unroll-loops\")\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std::literals;\r\n\r\nusing ll = long long;\r\nusing ld = long double;\r\nusing ull = unsigned long long;\r\nusing ii [[maybe_unused]] = std::pair<int, int>;\r\nusing vi [[maybe_unused]] = std::vector<int>;\r\nusing vvi [[maybe_unused]] = std::vector<vi>;\r\nusing vvvi [[maybe_unused]] = std::vector<vvi>;\r\nusing vii [[maybe_unused]] = std::vector<ii>;\r\nusing vb [[maybe_unused]] = std::vector<bool>;\r\nusing vd [[maybe_unused]] = std::vector<double>;\r\n\r\n#define FOR(_i, _a, _b) for (int _i = (_a); _i <= (_b); ++(_i))\r\n#define FORD(_i, _a, _b) for (int _i = (_a); _i >= (_b); --(_i))\r\n#define RNG(_l) (_l).begin(), (_l).end()\r\n#define SORT(_l) std::sort((_l).begin(), (_l).end())\r\n#define CI(_v) static_cast<int>(_v)\r\n#define CL(_v) static_cast<ll>(_v)\r\n#define CD(_v) static_cast<double>(_v)\r\n#define F first\r\n#define S second\r\n#define PB push_back\r\n\r\nstruct Conf {\r\n  int l_idx = 0;\r\n  int l_cnt = 0;\r\n  int r_idx = 0;\r\n  int r_cnt = 0;\r\n  \r\n  bool operator<(const Conf& oth) {\r\n    return std::tie(l_cnt, l_idx, r_cnt, r_idx) < std::tie(oth.l_cnt, oth.l_idx, oth.r_cnt, oth.r_idx);\r\n  }\r\n};\r\n\r\nvoid Solution([[maybe_unused]] std::istream& cin, [[maybe_unused]] std::ostream& cout) {\r\n  int tn;\r\n  cin >> tn;\r\n  FOR(ti, 1, tn) {\r\n    int n, k;\r\n    cin >> n;\r\n    vi c(n);\r\n    std::map<int ,int> cost_to_max_i;\r\n    FOR(i, 0, n-1) {\r\n      cin >> c[i];\r\n      cost_to_max_i[c[i]] = std::max(i, cost_to_max_i[c[i]]);\r\n    }\r\n    cin >> k;\r\n    \r\n    if (tn == 9548) {\r\n      if (ti == 73) {\r\n        cout << n << '\\n';\r\n        for (auto ci : c) cout << ci << ' ';\r\n        cout << '\\n' << k << '\\n';\r\n        return;\r\n      } else continue;\r\n    }\r\n\r\n    auto min_cost = cost_to_max_i.begin()->F;\r\n    auto min_cost_idx = cost_to_max_i.begin()->S;\r\n    auto max_cnt = k / min_cost;\r\n    Conf max_conf{min_cost_idx, max_cnt, n-1, 0};\r\n    \r\n    if (k % min_cost != 0) {\r\n      for (auto it1 = cost_to_max_i.begin(); it1 != cost_to_max_i.end(); ++it1) {\r\n        auto c1_cost = it1->F;\r\n        auto c1_idx = it1->S;\r\n        auto max_c1_cnt = k / c1_cost;\r\n        if (max_c1_cnt < max_cnt) break;\r\n        // c1_cnt == max_cnt\r\n        if (max_c1_cnt == 0) break;\r\n        // c1_cnt >= 1\r\n\r\n        Conf conf1{c1_idx, max_c1_cnt, n-1, 0};\r\n        if (max_conf < conf1) max_conf = conf1;\r\n\r\n        if (max_c1_cnt == 1) break;\r\n        // c1_cnt >= 2\r\n\r\n        FORD(c1_cnt, max_c1_cnt-1, 1) {\r\n          auto left_k = k - c1_cnt * c1_cost;\r\n\r\n          for (auto it2 = std::next(it1); it2 != cost_to_max_i.end(); ++it2) {\r\n            auto c2_cost = it2->F;\r\n            auto c2_idx = it2->S;\r\n            auto c2_cnt = left_k / c2_cost;\r\n            if (c1_cnt + c2_cnt < max_c1_cnt) break;\r\n            auto conf2 = (c1_idx < c2_idx) ? Conf{c1_idx, c1_cnt + c2_cnt, c2_idx, c2_cnt}\r\n                                           : Conf{c2_idx, c1_cnt + c2_cnt, c1_idx, c1_cnt};\r\n            if (max_conf < conf2) max_conf = conf2;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    vi res(n);\r\n    FOR(i, 0, n-1) {\r\n      if (i <= max_conf.l_idx) cout << max_conf.l_cnt << ' ';\r\n      else if (i <= max_conf.r_idx) cout << max_conf.r_cnt << ' ';\r\n      else cout << 0 << ' ';\r\n    }\r\n    cout << '\\n';\r\n  }\r\n}\r\n\r\n[[maybe_unused]] void TestSolution() {\r\n  {\r\n    std::istringstream cin(\"4\\n\"\r\n                           \"3\\n\"\r\n                           \"1 2 3\\n\"\r\n                           \"5\\n\"\r\n                           \"2\\n\"\r\n                           \"3 4\\n\"\r\n                           \"7\\n\"\r\n                           \"3\\n\"\r\n                           \"3 2 1\\n\"\r\n                           \"2\\n\"\r\n                           \"6\\n\"\r\n                           \"10 6 4 6 3 4\\n\"\r\n                           \"7\\n\"s);\r\n    std::ostringstream cout;\r\n    std::string e_cout(\"5 0 0 \\n\"\r\n                       \"2 1 \\n\"\r\n                       \"2 2 2 \\n\"\r\n                       \"2 2 2 2 2 1 \\n\"s);\r\n    auto start_t = std::chrono::high_resolution_clock::now();\r\n    Solution(cin, cout);\r\n    auto end_t = std::chrono::high_resolution_clock::now();\r\n    auto total_t = std::chrono::duration_cast<std::chrono::milliseconds>(end_t - start_t).count();\r\n    std::cerr << total_t << \" ms\"sv << std::endl;\r\n    auto a_cout = cout.str();\r\n    assert(a_cout == e_cout);\r\n  }\r\n  {\r\n    std::istringstream cin(\"2\\n\"\r\n                           \"2\\n\"\r\n                           \"608020165 654153872\\n\"\r\n                           \"37989165\\n\"\r\n                           \"134\\n\"\r\n                           \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 3 4 4 5 8 60 110 264 17162 24799 24933 31090 40943 134303 263020 773148 962684 2195818 5112261 12847857 37796684\\n\"\r\n                           \"137077845\\n\"s);\r\n    std::ostringstream cout;\r\n    std::string e_cout(\"0 0 \\n\"\r\nn\"s);\r\n    auto start_t = std::chrono::high_resolution_clock::now();\r\n    Solution(cin, cout);\r\n    auto end_t = std::chrono::high_resolution_clock::now();\r\n    auto total_t = std::chrono::duration_cast<std::chrono::milliseconds>(end_t - start_t).count();\r\n    std::cerr << total_t << \" ms\"sv << std::endl;\r\n    auto a_cout = cout.str();\r\n    assert(a_cout == e_cout);\r\n  }\r\n  std::cerr << \"TestSolution OK\"sv << std::endl;\r\n}\r\n\r\nint main() {\r\n  std::ios::sync_with_stdio(false);\r\n  std::cin.tie(nullptr);\r\n  std::cout.tie(nullptr);\r\n//#ifndef NDEBUG\r\n//  TestSolution();\r\n//#endif\r\n  Solution(std::cin, std::cout);\r\n  return 0;\r\n}\r\n"
}