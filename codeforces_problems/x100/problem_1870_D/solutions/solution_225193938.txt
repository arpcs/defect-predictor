{
    "id": 225193938,
    "contestId": 1870,
    "creationTimeSeconds": 1695690721,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1870,
        "index": "D",
        "name": "Prefix Purchase",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1870,
        "members": [
            {
                "handle": "bardend"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1695047700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 5017600,
    "source": "\n#include <bits/stdc++.h>\nusing namespace std;\n#define all(c) (c).begin(), (c).end()\n#define rall(A) A.rbegin(),A.rend()\n#define pb push_back \n#define dbg(x) do {cerr << #x <<\" = \" << (x) << endl; } while (false)\n#define f first \n#define s second \ntypedef long long ll;\ntypedef pair<int, int> ii;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\nconst int inf = 1e9+7;\n//int dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction\n//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction\n//int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction\n//int dx[]={2,1,-1,-2,-1,1};int dy[]={0,1,1,0,-1,-1}; //Hexagonal Direction\n\nint main(){\n\tios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n\n    int t;cin>>t;\n    while(t--){\n        int n,k;\n        cin>>n;\n        priority_queue<ii>pq;\n        for(int i=0;i<n;i++){\n            int x;cin>>x;\n            pq.push({-x,i});\n        }\n        cin>>k;\n        int bound = -1;\n        vector<ii>v;\n        while(!pq.empty()){\n            auto e = pq.top();\n            pq.pop();\n            if(e.s > bound){\n                v.pb({-e.f, e.s});\n                bound = e.s;\n            }\n        }\n        vector<int>pre(n+1,0);\n\n        pre[v[0].s] = k/v[0].f;\n        k = k%v[0].f;\n\n        int nl = (int)v.size();\n        for(int i=0;i<(nl-1);i++){\n            int best = min(pre[v[i].s], k/(v[i+1].f-v[i].f));\n            pre[v[i].s] -= best;\n            pre[v[i+1].s] += best;\n            k -= (best*(v[i+1].f-v[i].f));\n        }\n\n        for(int i=n-1;i>=0;i--) pre[i] += pre[i+1];\n        for(int i=0;i<n;i++) cout<<pre[i]<<\" \";\n        cout<<endl;\n    }\n    return 0;\n}\n"
}