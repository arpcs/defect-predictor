{
    "id": 227483558,
    "contestId": 1870,
    "creationTimeSeconds": 1696915476,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1870,
        "index": "D",
        "name": "Prefix Purchase",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1870,
        "members": [
            {
                "handle": "expertcoderhk"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1695047700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 3174400,
    "source": "#include<bits/stdc++.h>\r\n#include <iterator>\r\n#include <iostream>\r\n#include <numeric>\r\n#include <math.h>\r\n#define ll long long\r\n#define ull long\r\n#define mpa make_pair\r\n#define pb push_back\r\n#define ff first\r\n#define pii pair<ll,ll>\r\n#define dd long double\r\n#define trace(x) cerr << #x << \" : \" << x << endl\r\n#define ss second\r\n#define boost ios_base::sync_with_stdio(0)\r\n#define forp(i,a,b) for(ll i=a;i<=b;i++)\r\n#define rep(i,n)    for(ll i=0;i<n;++i)\r\n#define ren(i,n)    for(ll i=n-1;i>=0;i--)\r\n#define forn(i,a,b) for(ll i=a;i>=b;i--)\r\n#define all(c) (c).begin(),(c).end()\r\n#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end();\r\n#define sc(x) scanf(\"%lld\",&x)\r\n#define clr(x,val) memset(x,val,sizeof(x))\r\n#define pr(x) printf(\"%lld\\n\",x) \r\n#define gc getchar\r\n#define pdd pair<dd,dd>\r\n#define prec(x) cout<<fixed<<setprecision(x)\r\n#define fre freopen(\"rental.in\",\"r\",stdin),freopen(\"rental.out\",\"w\",stdout)\r\n#define arr array \r\nusing namespace std;\r\n//Buy segments in such a way that sum is lexicographicaally is maximum.\r\n//If a longer prefix with smaller cost is availabale then shorter prefix with larger cost is reducndant.\r\n//Start with buying max possible nnumber of preifx of length 1.\r\n//then start to replace these .\r\n//Question:https://codeforces.com/contest/1870/problem/D\r\nll c[200005];\r\nll sol[200005];\r\nvoid solve(ll tc){\r\n\r\n    ll n;\r\n    cin>>n;\r\n\r\n    for(ll i=1;i<=n;i++){\r\n        cin>>c[i];\r\n        sol[i]=0;\r\n    }   \r\n\r\n    ll mi=1e18;\r\n    for(ll i=n;i>=1;i--){\r\n        mi=min(mi,c[i]);\r\n        c[i]=mi;//Miniumm cost to buy prefix of length atleast i;\r\n    }\r\n\r\n    ll k;\r\n    cin>>k;\r\n\r\n    sol[1]=k/c[1];\r\n    k%=c[1];\r\n\r\n\r\n    for(ll i=2;i<=n;i++){\r\n        if(c[i]==c[i-1]){\r\n            sol[i]=sol[i-1];\r\n            sol[i-1]=0;\r\n        }else{\r\n            ll max_replacement_poss=k/(c[i]-c[i-1]);\r\n            max_replacement_poss=min(max_replacement_poss,sol[i-1]);\r\n            //How much of the previous one to replace.?\r\n\r\n            sol[i]+=max_replacement_poss;\r\n            sol[i-1]-=max_replacement_poss;\r\n\r\n            k-=max_replacement_poss*(c[i]-c[i-1]);\r\n\r\n        }\r\n    }\r\n\r\n    sol[n+1]=0;\r\n    for(ll i=n;i>=1;i--){\r\n        sol[i]+=sol[i+1];\r\n    }\r\n\r\n    for(ll i=1;i<=n;i++){\r\n        cout<<sol[i]<<\" \";\r\n    }\r\n    cout<<endl;\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    \r\n\r\n}   \r\n\r\nint main(){\r\n    boost;\r\n\r\n    //pre_cum();\r\n    //prec(20);\r\n\t//fre;\r\n\r\n\r\n    ll t=1;\r\n    ll tc=1;\r\n    cin>>t;\r\n\r\n\twhile(t--){\r\n\t\tsolve(tc);\r\n        tc++;\r\n\r\n\t}\r\n\r\n    return 0;\r\n    \r\n     \r\n}"
}