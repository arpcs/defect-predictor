{
    "id": 233363840,
    "contestId": 1870,
    "creationTimeSeconds": 1700349503,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1870,
        "index": "D",
        "name": "Prefix Purchase",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1870,
        "members": [
            {
                "handle": "tusharc31"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1695047700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 545,
    "memoryConsumedBytes": 4812800,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n \r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n \r\ntemplate <class T>\r\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\ntemplate<class T> \r\nusing ordered_multiset = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update> ;\r\ntemplate<class T>\r\nusing max_heap = priority_queue<T,vector<T> >; \r\ntemplate<class T>\r\nusing min_heap = priority_queue<T,vector<T>,greater<T> >; \r\n \r\ntemplate <typename T>\r\nvoid dout(string name, T arg)\r\n{\r\n\tcerr << \"\\e[91m\" << name << \" = \" << arg << \"\\e[39m\" << endl;\r\n}\r\n \r\ntemplate <typename T1, typename... T2>\r\nvoid dout(string names, T1 arg, T2... args)\r\n{\r\n\tcerr << \"\\e[91m\" << names.substr(0, names.find(',')) << \" = \" << arg << \"   |   \\e[39m\";\r\n\tdout(names.substr(names.find(',') + 2), args...);\r\n}\r\n \r\n#ifdef LOCAL\r\n#define debug(...) dout(#__VA_ARGS__, __VA_ARGS__)\r\n#else\r\n#define debug(...) 42\r\n#endif\r\n \r\ntemplate <class Ch, class Tr, class Container>\r\nbasic_ostream<Ch, Tr> &operator<<(basic_ostream<Ch, Tr> &os, Container const &x)\r\n{\r\n\tos << \"{ \";\r\n\tfor (auto &y : x)\r\n\t\tos << y << \" ; \";\r\n\treturn os << \"}\";\r\n}\r\n \r\ntemplate <class X, class Y>\r\nostream &operator<<(ostream &os, pair<X, Y> const &p)\r\n{\r\n\treturn os << \"[ \" << p.first << \", \" << p.second << \"]\";\r\n}\r\n \r\ntypedef pair<long long int, long long int> ii;\r\ntypedef vector<long long int> vi;\r\ntypedef vector<vector<long long int>> vvi;\r\ntypedef vector<pair<long long int, long long int>> vii;\r\n \r\n#define pb push_back\r\n#define mp make_pair\r\n#define ff first\r\n#define ss second\r\n#define all(c) (c).begin(), (c).end()\r\n#define sz(a) ((long long int)(a).size())\r\n#define lli long long int\r\n#define ull unsigned long long int\r\n#define ld long double\r\n#define ref(i, x, y) for (long long int i = (x); i <= (y); ++i)\r\n#define reb(i, x, y) for (long long int i = (x); i >= (y); --i)\r\n#define trf(c, it) for (auto it = (c).begin(); it != (c).end(); ++it)\r\n#define trb(c, it) for (auto it = (c).end() - 1; it != (c).begin() - 1; --it)\r\n#define tc(t) int t; cin >> t; while (t--)\r\n#define endl '\\n'\r\n \r\nconst long long int mod = 1e9 + 7;\r\nconst long long int pinf = 9223372036854775807;\r\nconst long long int ninf = -9223372036854775807;\r\n \r\n/*/----------------------------Code begins----------------------------/*/\r\n \r\nint main(void)\r\n{\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(NULL);\r\n\tcout.tie(NULL);\r\n\t// auto start = std::chrono::high_resolution_clock::now();\r\n\t// freopen(\"input.txt\", \"r\", stdin);\r\n\t// freopen(\"output.txt\", \"w\", stdout);\r\n\r\n\r\n\ttc(t)\r\n\t{\r\n\t\tlli n, k, c[200005], m[200005];\r\n\t\tlli ans[200005]={0};\r\n\t\t\r\n\t\tcin>>n;\r\n\r\n\t\tref(i,0,n-1)\r\n\t\t\tcin>>c[i];\r\n\r\n\t\tcin>>k;\r\n\r\n\t\tlli mn=pinf, mni=-1;\r\n\r\n\t\treb(i,n-1,0)\r\n\t\t{\r\n\t\t\tm[i] = mni;\r\n\r\n\t\t\tif(c[i]<mn)\r\n\t\t\t{\r\n\t\t\t\tmn = c[i];\r\n\t\t\t\tmni = i;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlli idx1, idx2, rem;\r\n\r\n\t\tidx1 = mni;\r\n\t\tidx2 = m[idx1];\r\n\t\trem = k;\r\n\r\n\t\twhile(idx2!=-1 && rem>=0)\r\n\t\t{\r\n\t\t\tlli cnt = rem/c[idx1];\r\n\t\t\tlli y = (rem - cnt*c[idx1]) / (c[idx2] - c[idx1]);\r\n\r\n\t\t\tif(y<0) y=0;\r\n\t\t\tif(y>cnt) y=cnt;\r\n\r\n\t\t\tans[idx1] += cnt-y;\r\n\t\t\trem -= (cnt-y)*c[idx1];\r\n\t\t\tidx1 = idx2;\r\n\t\t\tidx2 = m[idx1];\r\n\t\t}\r\n\r\n\t\tans[idx1] += rem/c[idx1];\r\n\r\n\t\treb(i,n-1,0)\r\n\t\t\tans[i] += ans[i+1];\r\n\t\t\t\r\n\t\tref(i,0,n-1)\r\n\t\t\tcout<<ans[i]<<\" \";\r\n\t\tcout<<endl;\r\n\t}\r\n \r\n\t// auto stop = std::chrono::high_resolution_clock::now();\r\n\t// auto duration = std::chrono::duration_cast<std::chrono::nanoseconds>(stop - start);\r\n\t// #ifdef LOCAL\r\n\t// cerr << \"\\e[91mTime taken : \" << ((long double)duration.count())/((long double) 1e9) <<\"s\\e[39m\"<< endl;\r\n\t// #endif\r\n \r\n\treturn 0;\r\n}\r\n \r\n// WA\r\n// 1. overflow\r\n// 2. re-initialize global variables for every test case.\r\n// 3. edge cases like n=1\r\n \r\n// Run time error\r\n// 1. division by zero.\r\n// 2. array bounds.\r\n \r\n// TLE\r\n// 1. move declarations outside\r\n"
}