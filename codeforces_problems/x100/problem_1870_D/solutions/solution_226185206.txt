{
    "id": 226185206,
    "contestId": 1870,
    "creationTimeSeconds": 1696175348,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1870,
        "index": "D",
        "name": "Prefix Purchase",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1870,
        "members": [
            {
                "handle": "shift."
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1695047700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 3174400,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing i64 = long long;\r\n\r\nconstexpr int N = 2E5 + 10;\r\n\r\nstd::vector<int> b, c;\r\nstd::vector<int> tr(N << 2);\r\n\r\nvoid build(int u, int l, int r) {\r\n    if(l == r) {\r\n        tr[u] = c[r];\r\n    } else {\r\n        int mid = l + r >> 1;\r\n        build(u << 1, l, mid);\r\n        build(u << 1 | 1, mid + 1, r);\r\n        tr[u] = std::max(tr[u << 1], tr[u << 1 | 1]);\r\n    }\r\n}\r\n\r\nint query(int u, int st, int ed, int l, int r) {\r\n    if(st >= l && ed <= r) {\r\n        return tr[u];\r\n    } else {\r\n        int mid = st + ed >> 1;\r\n        if(r <= mid) {\r\n            return query(u << 1, st, mid, l, r);\r\n        } else if(l > mid) {\r\n            return query(u << 1 | 1, mid + 1, ed, l, r);\r\n        } else {\r\n            return std::min(query(u << 1, st, mid, l, r), query(u << 1 | 1, mid + 1, ed, l, r));\r\n        }\r\n    }\r\n}\r\n\r\nvoid solve() {\r\n    b.clear(), c.clear();\r\n\r\n    int n, k;\r\n    std::cin >> n;\r\n\r\n    std::map<int, int> mp;\r\n    for(int i = 1; i <= n; i ++ ) {\r\n        int x;\r\n        std::cin >> x;\r\n        mp[x] = i;\r\n    }\r\n\r\n    std::cin >> k;\r\n    \r\n    for(auto [x, y] : mp) {\r\n        b.push_back(x);\r\n        c.push_back(y);\r\n    }\r\n\r\n    build(1, 0, int(c.size()) - 1);\r\n\r\n\r\n    int o = -1;\r\n    // for(auto x : b) std::cout << x << ' '; std::cout << '\\n';\r\n    // std::cout << b.size() << '\\n';\r\n    // std::cout << t << '\\n';\r\n\r\n    std::vector<int> ans;\r\n    for(int i = 0, l = b.size(); i < l; i ++ ) {\r\n        if((o == -1 && k / b[i]) || k / b[i] > ans.size() + 1 || (ans.size() + 1 == k / b[i] && c[i] > ans[0])) {\r\n            ans.clear();\r\n            int t = k / b[i] - 1;\r\n            if(t) while(t --) ans.push_back(c[i]);\r\n            t = k % b[i] + b[i];\r\n            t = std::lower_bound(b.begin(), b.end(), t) - b.begin();\r\n            t = query(1, 0, l - 1, i, t);\r\n            o = t;\r\n        }\r\n    }\r\n    \r\n    if(o == -1) {\r\n        for(int i = 0; i < n; i ++ ) {\r\n            std::cout << 0 << \" \\n\"[i == n - 1];\r\n        }\r\n        return ;\r\n    }\r\n    \r\n    int val = ans.size(), m;\r\n    if(!ans.size()) m = 0;\r\n    else m = ans[0];\r\n    // std::cout << val << ' ' << m << ' ' << o << '\\n';\r\n\r\n    for(int i = 0; i < n; i ++ ) {\r\n        int now = 0;\r\n        if(m) now += val, m --;\r\n        if(o) now ++, o --;\r\n        std::cout << now << \" \\n\"[i == n - 1];\r\n    }\r\n\r\n}\r\n\r\nint main() {\r\n    std::ios::sync_with_stdio(false);\r\n    std::cin.tie(nullptr);\r\n    \r\n    int T = 1;\r\n    std::cin >> T;\r\n\r\n    while(T -- ) {\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n}"
}