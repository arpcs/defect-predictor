{
    "id": 225646717,
    "contestId": 1870,
    "creationTimeSeconds": 1695903194,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1870,
        "index": "D",
        "name": "Prefix Purchase",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1870,
        "members": [
            {
                "handle": "2020TAndr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1695047700
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 468,
    "memoryConsumedBytes": 33382400,
    "source": "from itertools import accumulate\r\n\r\nfor _ in range(int(input())):\r\n  n = int(input())\r\n  c = (int(x) for x in input().split()[::-1])\r\n  c = list(accumulate(c, min))\r\n\r\n  money, last_option = int(input()), 0\r\n  arr = [0] * n\r\n\r\n  amount = money\r\n  for i in range(n):\r\n    price = c.pop()\r\n\r\n    if price > last_option:\r\n      amount = min(amount, money // (price - last_option))\r\n    # else amount remains the same as on previous step\r\n\r\n    money -= (price - last_option) * amount\r\n    last_option = price\r\n\r\n    arr[i] = amount\r\n\r\n  print(*arr)"
}