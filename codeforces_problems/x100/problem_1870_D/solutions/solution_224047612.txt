{
    "id": 224047612,
    "contestId": 1870,
    "creationTimeSeconds": 1695131467,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1870,
        "index": "D",
        "name": "Prefix Purchase",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1870,
        "members": [
            {
                "handle": "Sk21_code"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1695047700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 436,
    "memoryConsumedBytes": 10240000,
    "source": "#include<bits/stdc++.h>\n#define ll long long\n#define all(a) begin(a) ,end(a)\n#define nline \"\\n\"\n#define ff first\n#define ss second\n#define pb push_back\nusing namespace std ;\n\n\nvoid solve() {\n\tll n  ;\n\tcin >> n ;\n\tvector<ll>a(n)  ;\n\tfor (auto &x : a)cin >> x ;\n\tll k  ;\n\tcin >> k ;\n\tll mn = *min_element(all(a)) ;\n\n\tint mnIndex  ;\n\tfor (int i = n - 1; i >= 0 ; -- i) {\n\t\tif (a[i] == mn) {\n\t\t\tmnIndex = i ;\n\t\t\tbreak ;\n\t\t}\n\t}\n\tmap<ll, int>after  ;\n\tfor (int i = mnIndex ; i < n ; ++ i) {\n\t\tafter[a[i]] =   i ;\n\t}\n\n\tvector<ll>ans(n , 0) ;\n\tll prevOpr = 1e18 ;\n\tll prevEle = 0 ;\n\tll left = k  ;\n\tll prevIndex = -1 ;\n\tfor (auto p : after) {\n\t\tll currEle = p.ff ;\n\t\tll currDiff = currEle - prevEle ;\n\t\tll newOpr = min(prevOpr , left / currDiff) ;\n\t\tleft -= (currDiff * newOpr) ;\n\t\tll currIndex = p.ss ;\n\t\tif (newOpr == 0)break;\n\t\tfor (int i = prevIndex + 1 ; i <= currIndex ; ++ i ) {\n\t\t\tans[i] = newOpr ;\n\t\t}\n\t\tprevOpr = newOpr ;\n\t\tprevIndex = currIndex ;\n\t\tprevEle = currEle ;\n\n\t}\n\tfor (int i = 0 ; i < n ;  ++ i) {\n\t\tcout << ans[i] << \" \\n\"[i == n - 1] ;\n\t}\n\n}\n\n\nint main() {\n\tsrand(time(0)) ;\n\tint t ;\n\tcin >> t ;\n\t// t = 1;\n\tfor (int i = 0 ; i < t ; ++i ) {\n\t\t// optimal() ;\n\t\tsolve() ;\n\t\t// debugger();\n\t}\n}"
}