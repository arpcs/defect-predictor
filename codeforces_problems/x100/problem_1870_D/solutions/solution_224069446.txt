{
    "id": 224069446,
    "contestId": 1870,
    "creationTimeSeconds": 1695141476,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1870,
        "index": "D",
        "name": "Prefix Purchase",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1870,
        "members": [
            {
                "handle": "palsatyam877"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1695047700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\n \r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n \r\n// typedef tree<long long, null_type, less<long long>, rb_tree_tag, tree_order_statistics_node_update> pbds; // find_by_order, order_of_key\r\n \r\ntypedef tree<pair<long long , long long>, null_type, less_equal<pair<long long , long long>>, rb_tree_tag, tree_order_statistics_node_update> pbds1; // find_by_order, order_of_key\r\n// typedef tree<pair<long long , long long>, null_type, greater<pair<long long , long long>>, rb_tree_tag, tree_order_statistics_node_update> pbds2; // find_by_order, order_of_key\r\n \r\n#define ll long long\r\n// #define ll int\r\n#define ld long double\r\n#define int long long\r\n#define inf 1000000000000000005\r\n// #define inf 1000000005\r\n#define mod 1000000007\r\ntypedef pair<int, int> pii;\r\ntypedef vector<int> vii;\r\ntypedef vector<ll> vll;\r\ntypedef pair<ll, ll> pll;\r\n#define pb push_back\r\n#define ppb pop_back\r\n#define puf push_front\r\n#define pof pop_front\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define fi first\r\n#define se second\r\n#define sz(x) (ll)x.size()\r\n// #define ckmin(a,b) a = min(a,b)\r\n// #define ckmax(a,b) a = max(a,b)\r\n#define _BENZ_ ios_base::sync_with_stdio(false);cin.tie(NULL);\r\n// const int N = 2e5 + 10;\r\n \r\ntemplate<class T> bool ckmin(T&a, T&b) { bool B = a > b; a = min(a,b); return B; }\r\ntemplate<class T> bool ckmax(T&a, T&b) { bool B = a < b; a = max(a,b); return B; }\r\n \r\n// std::cout << std::fixed;\r\n// std::cout << std::setprecision(12);\r\n// floor(2.3)\r\n// ceil(2.3)\r\n \r\nstruct custom_hash {\r\n    static uint64_t splitmix64(uint64_t x) {\r\n        // http://xorshift.di.unimi.it/splitmix64.c\r\n        x += 0x9e3779b97f4a7c15;\r\n        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n        return x ^ (x >> 31);\r\n    }\r\n \r\n    size_t operator()(uint64_t x) const {\r\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n        return splitmix64(x + FIXED_RANDOM);\r\n    }\r\n}; // unordered_map<ll , ll , custom_hash> mp;\r\n \r\nlong long expo(long long a, long long b, long long mod1) {long long res = 1; while (b > 0) {if (b & 1ll)res = (res * a) % mod1; a = (a * a) % mod1; b = b >> 1ll;} return res;}\r\n \r\n/*::::::::::::::::::::::::::::::::::::::::::::::::::::::: SOLUTION TO THE PROBLEM :::::::::::::::::::::::::::::::::::::::::::::::::*/\r\n \r\n/*--------------------------------------------------------------------------------------------------------------------------------------------*/\r\n/* \r\n     ~By Editorial.\r\n     ANALYSE THE SAMPLES.\r\n     Kuch bold mein likha hai toh use dyan se do bar padho.\r\n     Think of the edge case (n == 1 ?).\r\n     Don't get stuck on a single approach for a long time.\r\n     Also don't get stuck on a single problem for a long time :)\r\n     target : want to be in top 100 of div2 contest.\r\n     Agar kabhi koi easy problem kafi tough lagne lage problem ko do bar padh aur samples ko analyse kar\r\n*/ \r\n \r\n/* \r\n\r\n*/\r\n \r\nvoid Pre() {\r\n}\r\n\r\nvoid solve() { \r\n     ll n; cin >> n;\r\n\r\n     vll c(n + 1ll , 0ll);\r\n\r\n     for(ll i = 1; i <= n; ++i) {\r\n          cin >> c[i];\r\n     }\r\n\r\n     ll k; cin >> k;\r\n\r\n     ll cnt = 0ll , ind = -1;\r\n\r\n     for(ll i = 1; i <= n; ++i) {\r\n          // cnt = max(cnt , k / c[i]);\r\n\r\n          if((k / c[i]) >= cnt) {\r\n               cnt = k / c[i];\r\n               ind = i;\r\n          }\r\n     }\r\n\r\n     if(!cnt) {\r\n          for(ll i = 1; i <= n; ++i) {\r\n               cout << \"0\" << \" \";\r\n          } cout << \"\\n\";\r\n          return;\r\n     }\r\n\r\n     vll _v(n + 1ll , 0ll);\r\n\r\n     for(ll i = 1; i <= n; ++i) {\r\n          _v[i] = c[i];\r\n\r\n          if(i > ind) {\r\n               _v[i] -= c[ind];\r\n          }\r\n     }\r\n\r\n     ll exe = k % c[ind];\r\n\r\n     vll ans(n + 2ll , 0ll);\r\n\r\n     for(ll i = n; i > ind; --i) {\r\n          while((cnt > 0ll) and (exe - _v[i] >= 0ll)) {\r\n               ans[i]++;\r\n               --cnt;\r\n               exe -= _v[i]; \r\n          }\r\n     }\r\n\r\n     ans[ind] = cnt;\r\n\r\n     for(ll i = n; i >= 1ll; --i) {\r\n          ans[i] += ans[i + 1ll];\r\n     }\r\n\r\n     for(ll i = 1; i <= n; ++i) {\r\n          cout << ans[i] << \" \";\r\n     } cout << \"\\n\";\r\n}  \r\n\r\nint32_t main(){\r\n \r\n    // freopen(\"teamwork.in\",\"r\",stdin); \r\n    // freopen(\"teamwork.out\",\"w\",stdout); \r\n    // //OR \r\n    // ifstream fin(\"input.in\"); \r\n    // ofstream fout(\"output.out\");   \r\n \r\n    _BENZ_  \r\n \r\n    Pre();\r\n \r\n    ll t = 1;\r\n    cin >> t;\r\n \r\n    while(t--){\r\n        solve();\r\n    } \r\n \r\n    // for(ll i = 1; i <= t; ++i) {\r\n    //       cout << \"Case \"<<i<<\": \";\r\n    //       solve();  \r\n    // }\r\n \r\n    return 0;\r\n}    "
}