{
    "id": 193483275,
    "contestId": 1335,
    "creationTimeSeconds": 1676299178,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "icpctrain"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586788500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define lol long long\r\nusing namespace std;\r\nint main()\r\n{\r\n    std::ios::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n    lol t;\r\n    cin >> t;\r\n    while (t--)\r\n    {\r\n        lol n;\r\n        cin >> n;\r\n        lol a[n];\r\n        for (lol i = 0; i < n; i++)\r\n        {\r\n            cin >> a[i];\r\n        }\r\n        lol ans = 0;\r\n        lol dp[n][n][27];\r\n        memset(dp, 0, sizeof(dp));\r\n        for (lol l = 0; l < n; l++)\r\n        {\r\n            for (lol i = 0, j = l; j < n; i++, j++)\r\n            {\r\n                if (l == 0)\r\n                {\r\n                    for (lol k = 0; k < 27; k++)\r\n                    {\r\n                        dp[i][j][k] = (a[i] == k);\r\n                        ans = max(ans, dp[i][j][k]);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    for (lol k = 0; k < 27; k++)\r\n                    {\r\n                        dp[i][j][k] = dp[i][i][k] + dp[i + 1][j][k];\r\n                        ans = max(ans, dp[i][j][k]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (lol i = 0; i < n; i++)\r\n        {\r\n            for (lol j = i + 1; j < n; j++)\r\n            {\r\n                for (lol k1 = 0; k1 < 27; k1++)\r\n                {\r\n                    for (lol k = 0; k < 27; k++)\r\n                    {\r\n                        if (i - 1 >= 0 && j + 1 < n)\r\n                            ans = max(ans, 2ll * min(dp[0][i - 1][k], dp[j + 1][n - 1][k]) + dp[i][j][k1]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        cout << ans << '\\n';\r\n    }\r\n\r\n    return 0;\r\n}"
}