{
    "id": 228653994,
    "contestId": 1335,
    "creationTimeSeconds": 1697621089,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "ahmedalaa22"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586788500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 48230400,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\nusing namespace std;\r\nconst ll oo = 1e9,mod = 1e9 + 7, N = 1e5+ 9;\r\nint dp[2003][2003][3] , n , a[2003];\r\nint rec(int i , int j ,  int lst , int g , int sz , vector<int>vec)\r\n{\r\n  if(i > j)return 0;\r\n  int& ret = dp[i][j][g];\r\n  if(~ret)return ret; \r\n  ret = 0;\r\n  if(vec[i] == vec[j])\r\n   {\r\n          if(!g)\r\n           {\r\n                ret = max(ret , rec(i + 1 , j - 1 , vec[i] , 1 , sz , vec) + 1 + (i != j));\r\n           }\r\n           else \r\n           {\r\n             if(vec[i] == lst)\r\n             {\r\n            ret = max(ret , rec(i + 1 , j - 1 , vec[i] , 1 , sz , vec) + 1 + (i != j));\r\n             }\r\n          else if(g == 1)\r\n            {\r\n            ret = max(ret , rec(i + 1 , j - 1 , vec[i] , 2 , sz , vec) + 1 + (i != j));\r\n            ret = max(ret , rec(i + 1 , j - 1 , lst , 1 , sz , vec));\r\n            }   \r\n           }\r\n      \r\n   }\r\n   \r\n   ret = max(ret , rec(i + 1 , j , lst , g , sz , vec));\r\n   ret = max(ret , rec(i , j - 1 , lst , g , sz , vec));\r\n   ret = max(ret , rec(i + 1 , j - 1  , lst , g , sz , vec));\r\n   \r\n return ret;  \r\n}\r\nvoid solve()\r\n{\r\ncin >> n;\r\nvector<int>v[27];\r\nfor(int i{} ; i < n; ++i)\r\n{\r\n  cin >> a[i];\r\n  v[a[i]].emplace_back(i);\r\n} \r\n\r\nint ans{};\r\nfor(int i{1} ; i < 27 ; i++)\r\n  for(int j{1} ; j < 27 ; ++j)\r\n   {\r\n    if(v[i].empty() || v[j].empty())\r\n      {\r\n        continue;\r\n      }\r\n    vector<int>b , vec;\r\n    for(auto x : v[i])b.emplace_back(x);\r\n  if(i != j) for(auto x : v[j])b.emplace_back(x);\r\n\r\n    sort(b.begin() , b.end());\r\n    int sz = b.size();\r\n if(!b.empty()) {\r\n    for(int x{} ; x < sz ; ++x)\r\n        vec.emplace_back(a[ b[x] ]);\r\n\r\n  for(int x{} ; x <= sz ; x++)for(int y{} ; y <= sz; y++)for(int z{} ; z < 3 ; z++)dp[x][y][z] = -1;\r\n  ans = max(ans , rec(0 , sz - 1, 0 , 0 , 0 , vec));\r\n }\r\n   }cout<<ans<<'\\n';\r\n}\r\nint main()\r\n{\r\n    //  freopen(\"input.txt\",\"r\",stdin);\r\n//   freopen(\"output.txt\",\"w\",stdout);\r\n    std:: ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n    ll t = 1;\r\n    cin>>t;\r\n while(t--)\r\n      solve();\r\n}"
}