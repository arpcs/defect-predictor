{
    "id": 211612720,
    "contestId": 1335,
    "creationTimeSeconds": 1688129035,
    "relativeTimeSeconds": 3835,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "Dhruv_Singh_Negi"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1688125200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 577,
    "memoryConsumedBytes": 1126400,
    "source": "#pragma GCC optimize(\"Ofast,unroll-loops\")\r\n#pragma GCC target(\"avx,avx2,fma\")\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n\r\n#ifndef ONLINE_JUDGE\r\n    #include \"debug.h\"\r\n#endif\r\n\r\nvoid solve() \r\n{    \r\n    ll n;\r\n    cin>>n;\r\n    vector<ll>v(n);\r\n    for (ll i = 0; i < n; i++)\r\n    {\r\n        cin>>v[i];\r\n    }\r\n    vector<vector<ll>>prefix(n,vector<ll>(27));\r\n    prefix[0][v[0]]++;\r\n    for (ll i = 1; i < n; i++)\r\n    {\r\n        for (ll k = 1; k <= 26; k++)\r\n        {\r\n            prefix[i][k] = prefix[i - 1][k];\r\n        }\r\n        prefix[i][v[i]]++;\r\n    }\r\n    vector<vector<ll>>suffix(n,vector<ll>(27));\r\n    suffix[n - 1][v[n - 1]]++;\r\n    for (ll i = n - 2; i >= 0; i--)\r\n    {\r\n        for (ll k = 1; k <= 26; k++)\r\n        {\r\n            suffix[i][k] = suffix[i + 1][k];\r\n        }\r\n        suffix[i][v[i]]++;\r\n    }\r\n    ll ans = 1;\r\n    for (ll k = 1; k <= 26; k++)\r\n    {\r\n        ans = max(ans,prefix[n - 1][k]);\r\n    }\r\n    for (ll start = 0; start < n; start++)\r\n    {\r\n        for (ll end = start; end < n; end++)\r\n        {\r\n            if(start == 0) continue;\r\n            if(end == n - 1) continue;\r\n            for (ll mid = 1; mid <= 26; mid++)\r\n            {\r\n                for (ll side = 1; side <= 26; side++)\r\n                {\r\n                    ll mn = min(prefix[start - 1][side],suffix[end + 1][side]);\r\n                    ll x = 2*mn + prefix[end][mid] - prefix[start - 1][mid];\r\n                    ans = max(ans,x);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    cout<<ans<<\"\\n\";\r\n}\r\n\r\nint main ()\r\n{\r\n    #ifndef ONLINE_JUDGE\r\n    \r\n        // For getting input from input.txt file\r\n        freopen(\"input.txt\", \"r\", stdin);\r\n    \r\n        // Printing the Output to output.txt file\r\n        freopen(\"output.txt\", \"w\", stdout);\r\n\r\n        // Printing the run time of code in Terminal\r\n        class Timer { chrono::time_point <chrono::steady_clock> B, E; public: Timer () : B(), E()\r\n        { B = chrono::steady_clock::now(); } ~Timer () { E = chrono::steady_clock::now();\r\n        cerr << \"\\nDuration: \" << ((chrono::duration <double>)(E - B)).count() << \"s\\n\"; } } TimerT;\r\n    \r\n    #endif\r\n\r\n    // For faster Input/Output\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    int testcase = 1;\r\n    cin >> testcase;;\r\n    for(int t = 0; t < testcase; t++) \r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}