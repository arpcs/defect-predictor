{
    "id": 191274346,
    "contestId": 1335,
    "creationTimeSeconds": 1675093390,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "faizanhussain2310"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586788500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 204800,
    "source": "#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC target(\"avx,avx2,fma\")\r\n#pragma GCC optimization(\"unroll-loops\")\r\n\r\n#include<iostream>\r\n#include<iomanip>\r\n#include<algorithm>\r\n#include<vector>\r\n#include<utility>\r\n#include<set>\r\n#include<unordered_set>\r\n#include<list>\r\n#include<iterator>\r\n#include<deque>\r\n#include<queue>\r\n#include<stack>\r\n#include<set>\r\n#include<bitset>\r\n#include<random>\r\n#include<map>\r\n#include<unordered_map>\r\n#include<stdio.h>\r\n#include<complex>\r\n#include<math.h>\r\n#include<cstring>\r\n#include<chrono>\r\n#include<string>\r\n#include \"ext/pb_ds/assoc_container.hpp\"\r\n#include \"ext/pb_ds/tree_policy.hpp\"\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\ntemplate<class T>\r\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update> ;\r\n \r\ntemplate<class key, class value, class cmp = std::less<key>>\r\nusing ordered_map = tree<key, value, cmp, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\n// find_by_order(k)  returns iterator to kth element starting from 0;\r\n// order_of_key(k) returns count of elements strictly smaller than k;\r\n\r\n#define inf 2e18\r\n#define ll long long\r\n#define FAIZAN ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\r\nconst ll mod = 1e9 + 7;\r\n\r\nvector<ll> sieve(int n) {int*arr = new int[n + 1](); vector<ll> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}\r\n\r\nll inv(ll i) {if (i == 1) return 1; return (mod - ((mod / i) * inv(mod % i)) % mod) % mod;}\r\n \r\nll mod_mul(ll a, ll b) {a = a % mod; b = b % mod; return (((a * b) % mod) + mod) % mod;}\r\n \r\nll mod_add(ll a, ll b) {a = a % mod; b = b % mod; return (((a + b) % mod) + mod) % mod;}\r\n \r\nll gcd(ll a, ll b) { if (b == 0) return a; return gcd(b, a % b);}\r\n \r\nll ceil_div(ll a, ll b) {return a % b == 0 ? a / b : a / b + 1;}\r\n \r\nll pwr(ll a, ll b) {a %= mod; ll res = 1; while (b > 0) {if (b & 1) res = res * a % mod; a = a * a % mod; b >>= 1;} return res;}\r\n\r\nbool check(ll val,vector<ll> &v) {\r\n    ll just=0;\r\n    for(int i=1; i<=26; i++) {\r\n        ll tmp=0;\r\n        for(int j=0; j<v.size(); j++) {\r\n            if(v[j]==i) {\r\n                tmp++;\r\n            }\r\n        }\r\n        for(int j=1; j<=26; j++) {\r\n            if(i==j) {\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n\r\n    return just>=val;\r\n}\r\n\r\nint main() {\r\n    FAIZAN;\r\n    int t;\r\n    cin>>t;\r\n    while(t--) {\r\n        ll n;\r\n        cin>>n;\r\n        vector<ll> v(n);\r\n        vector<vector<ll>> pos(27);\r\n        for(int i=0; i<n; i++) {\r\n            cin>>v[i];\r\n            pos[v[i]].push_back(i);\r\n        }\r\n        ll ans=0;\r\n        for(int i=1; i<=26; i++) {\r\n            if(pos[i].size()==0) {\r\n                continue;\r\n            }\r\n            if(pos[i].size()==1) {\r\n                ans=max(ans,1ll);\r\n                continue;\r\n            }\r\n            ll l=0,r=pos[i].size()-1;\r\n            ll just=2;\r\n            while(l<r) {\r\n                vector<ll> freq(27,0);\r\n                for(int j=pos[i][l]+1; j<pos[i][r]; j++) {\r\n                    freq[v[j]]++;\r\n                }\r\n                ll large=0;\r\n                for(int j=1; j<=26; j++) {\r\n                    large=max(large,freq[j]);\r\n                }\r\n                ans=max(ans,just+large);\r\n                l++;\r\n                r--;\r\n                just+=2;\r\n            }\r\n        }\r\n        cout<<ans<<\"\\n\";\r\n    }   \r\n    return 0;\r\n}"
}