{
    "id": 231629648,
    "contestId": 1335,
    "creationTimeSeconds": 1699294201,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "mute_me"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586788500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 161177600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n//#define int long long\r\n#define ll long long\r\n#define pb push_back\r\n#define lcm(a, b) a *b / __gcd(a, b)\r\n#define endl \"\\n\"\r\n#define start()                   \\\r\n    ios_base::sync_with_stdio(0); \\\r\n    cin.tie(0);                   \\\r\n    cout.tie(0)\r\n#define lop(i, n) for (int i = 0; i < n; i++)\r\n#define f first\r\n#define sec second\r\n// #define file() freopen(\"input.txt\",\"r\",stdin);freopen(\"output.txt\",\"w\",stdout)\r\nusing namespace __gnu_pbds;\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag,\r\n             tree_order_statistics_node_update>\r\n    ordered_set;\r\n\r\nbool myfnc(const pair<int, int> &a, const pair<int, int> &b)\r\n{\r\n    return a.f > b.f;\r\n}\r\nbool myfnc1(const pair<int, int> &a, const pair<int, int> &b)\r\n{\r\n    return a.f > b.f;\r\n}\r\nbool sortbysec(const tuple<int, int, int> &a,\r\n               const tuple<int, int, int> &b)\r\n{\r\n    // if(get<0>(a) == get<0>(b)) return get<1>(a) < get<1>(b);\r\n    return (get<0>(a) < get<0>(b));\r\n}\r\nstruct compare_first\r\n{\r\n    bool operator()(const pair<int, char> &p, const int &x) const\r\n    {\r\n        return p.first < x;\r\n    }\r\n    bool operator()(const int &x, const pair<int, char> &p) const\r\n    {\r\n        return x < p.first;\r\n    }\r\n};\r\n\r\ninline void in(int &x) { scanf(\"%d\", &x); }\r\ninline void outN(int &x) { printf(\"%d\\n\", x); }\r\ninline void outS(int &x) { printf(\"%lld \", x); }\r\nlong long binpow(long long a, long long b, long long m)\r\n{\r\n    a %= m;\r\n    long long res = 1;\r\n    while (b > 0)\r\n    {\r\n        if (b & 1)\r\n            res = res * a % m;\r\n        a = a * a % m;\r\n        b >>= 1;\r\n    }\r\n    return res;\r\n}\r\n\r\nbool bit(int n, int k)\r\n{\r\n    if (n & (1LL << k))\r\n        return true;\r\n    return false;\r\n}\r\n\r\nstruct pair_hash\r\n{\r\n    template <class T1, class T2>\r\n    std::size_t operator()(const std::pair<T1, T2> &pair) const\r\n    {\r\n        auto h1 = std::hash<T1>{}(pair.first);\r\n        auto h2 = std::hash<T2>{}(pair.second);\r\n\r\n        std::size_t seed = h1;\r\n        seed ^= h2 + 0x9e3779b9 + (seed << 6) + (seed >> 2);\r\n\r\n        return seed;\r\n    }\r\n};\r\n\r\n\r\nconst int mx=201;\r\nconst int mx2=2e5+1;\r\n\r\n int preCnt[mx2][mx];\r\n\r\n int get_It(int i,int j)\r\n {\r\n    int  best=0;\r\n\r\n     for(int k=1;k<mx;k++)\r\n     {\r\n        int cur=preCnt[j][k]-preCnt[i-1][k];\r\n        best=max(best,cur);\r\n     }\r\n\r\n      return best;\r\n\r\n }\r\nvoid solve(int tc)\r\n{\r\n\r\n    int n;\r\n    cin>>n;\r\n    int a[n];\r\n     vector<int>idx[mx];\r\n\r\n      for(int i=0;i<=n;i++)\r\n      {\r\n        for(int j=0;j<mx;j++)preCnt[i][j]=0;\r\n      }\r\n\r\n      int ans=0;\r\n\r\n    for( int i=0;i<n;i++)\r\n    {\r\n        cin>>a[i];\r\n         idx[a[i]].pb(i+1);\r\n        for(int j=1;j<mx;j++)\r\n        {\r\n            preCnt[i+1][j]=preCnt[i][j]+ (a[i]==j);\r\n            ans=max(preCnt[i+1][j],ans);\r\n        }\r\n\r\n    }\r\n\r\n      //cout<<ans<<endl;\r\n\r\n\r\n\r\n\r\n     for(int i=1;i<mx;i++)\r\n     {\r\n        int sz=idx[i].size();\r\n        if(sz<2) continue;\r\n         int p=-1,p1=sz;\r\n         int left=0,right=0;\r\n\r\n         while(p<p1)\r\n         {\r\n            if(left<right)\r\n            {\r\n                left++;\r\n                p++;\r\n\r\n            }\r\n            else if( left>right)\r\n            {\r\n                right++;\r\n                p1--;\r\n\r\n            }\r\n            else\r\n            {\r\n\r\n                 \r\n                  if(p!=-1 && p1!=sz)\r\n                  {\r\n                   // cout<<idx[i][p]+1<<\" \"<<idx[i][p1]-1<<endl;\r\n\r\n                int best=get_It(idx[i][p]+1,idx[i][p1]-1);\r\n                ans=max(ans,left+right+best);\r\n                  }\r\n                left++;\r\n                p++;\r\n\r\n            }\r\n\r\n\r\n         }\r\n     }\r\n\r\n     cout<<ans<<endl;\r\n\r\n   \r\n    \r\n}\r\n\r\nsigned main()\r\n{\r\n\r\n\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n\r\n    int t = 1;\r\n\r\n    cin >> t;\r\n    //  in(t);\r\n    //  cin.ignore();\r\n\r\n    //   start();\r\n    for (int i = 1; i <= t; i++)\r\n    {\r\n        solve(i);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}