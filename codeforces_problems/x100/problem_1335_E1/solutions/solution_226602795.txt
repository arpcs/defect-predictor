{
    "id": 226602795,
    "contestId": 1335,
    "creationTimeSeconds": 1696429678,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "-VIBE"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586788500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 716800,
    "source": "// Problem: E2. Three Blocks Palindrome (hard version)\r\n// Contest: Codeforces - Codeforces Round 634 (Div. 3)\r\n// URL: https://codeforces.com/problemset/problem/1335/E2\r\n// Memory Limit: 256 MB\r\n// Time Limit: 2000 ms\r\n// Author->VIBE<3\r\n// Date:2023-10-04 18:25:04\r\n\r\n\r\n\r\n\r\n    \r\n/*************************************************************************************************************\r\n                                        \u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u283f\u281b\u281b\u281b\u280b\u2809\u2808\u2809\u2809\u2809\u2809\u281b\u283b\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n                                        \u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u280b\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2809\u281b\u28bf\u28ff\u28ff\u28ff\u28ff\r\n                                        \u28ff\u28ff\u28ff\u28ff\u284f\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u28e4\u28e4\u28e4\u28c4\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u28bf\u28ff\u28ff\r\n                                        \u28ff\u28ff\u28ff\u288f\u28f4\u28ff\u28f7\u2800\u2800\u2800\u2800\u2800\u28be\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2846\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u28ff\u28ff\r\n                                        \u28ff\u28ff\u28df\u28fe\u28ff\u285f\u2801\u2800\u2800\u2800\u2800\u2800\u2880\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28a2\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28ff\r\n                                        \u28ff\u28ff\u28ff\u28ff\u28df\u2800\u2874\u2804\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u283b\u28ff\u28ff\u28ff\u28ff\u28f7\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28ff\r\n                                        \u28ff\u28ff\u28ff\u281f\u283b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2836\u28b4\u28ff\u28ff\u28ff\u28ff\u28ff\u28e7\u2800\u2800\u2800\u2800\u2800\u2800\u28ff\r\n                                        \u28ff\u28c1\u2840\u2800\u2800\u28b0\u28a0\u28e6\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28fc\u28ff\u28ff\u28ff\u28ff\u28ff\u2844\u2800\u28f4\u28f6\u28ff\u2844\u28ff\r\n                                        \u28ff\u284b\u2800\u2800\u2800\u280e\u28b8\u28ff\u2846\u2800\u2800\u2800\u2800\u2800\u2800\u28f4\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2817\u2898\u28ff\u28df\u281b\u283f\u28fc\r\n                                        \u28ff\u28ff\u280b\u2880\u284c\u28b0\u28ff\u287f\u28bf\u2840\u2800\u2800\u2800\u2800\u2800\u2819\u283f\u28ff\u28ff\u28ff\u28ff\u28ff\u2847\u2800\u28b8\u28ff\u28ff\u28e7\u2880\u28fc\r\n                                        \u28ff\u28ff\u28f7\u28bb\u2804\u2818\u281b\u280b\u281b\u2803\u2800\u2800\u2800\u2800\u2800\u28bf\u28e7\u2808\u2809\u2819\u281b\u280b\u2800\u2800\u2800\u28ff\u28ff\u28ff\u28ff\u28ff\r\n                                        \u28ff\u28ff\u28e7\u2800\u2808\u28b8\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u281f\u2800\u2800\u2800\u2800\u2880\u2883\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u28ff\r\n                                        \u28ff\u28ff\u287f\u2800\u2834\u2897\u28e0\u28e4\u28f4\u2876\u2836\u2816\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u2878\u2800\u28ff\u28ff\u28ff\u28ff\r\n                                        \u28ff\u28ff\u28ff\u2840\u28a0\u28fe\u28ff\u280f\u2800\u2820\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u281b\u2809\u2800\u28ff\u28ff\u28ff\u28ff\r\n                                        \u28ff\u28ff\u28ff\u28e7\u2808\u28b9\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f0\u28ff\u28ff\u28ff\u28ff\r\n                                        \u28ff\u28ff\u28ff\u28ff\u2844\u2808\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28e0\u28f4\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\r\n                                        \u28ff\u28ff\u28ff\u28ff\u28e7\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28e0\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n                                        \u28ff\u28ff\u28ff\u28ff\u28f7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28f4\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n                                        \u28ff\u28ff\u28ff\u28ff\u28ff\u28e6\u28c4\u28c0\u28c0\u28c0\u28c0\u2800\u2800\u2800\u2800\u2818\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n                                        \u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u2844\u2800\u2800\u2800\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n                                        \u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28e7\u2800\u2800\u2800\u2819\u28ff\u28ff\u285f\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n                                        \u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2807\u2800\u2801\u2800\u2800\u2839\u28ff\u2803\u2800\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n                                        \u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u281b\u28ff\u28ff\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2890\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n                                        \u28ff\u28ff\u28ff\u28ff\u283f\u281b\u2809\u2809\u2801\u2800\u28bb\u28ff\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2808\u28ff\u28ff\u287f\u2809\u281b\u281b\u281b\u2809\u2809\r\n                                        \u28ff\u287f\u280b\u2801\u2800\u2800\u2880\u28c0\u28e0\u2874\u28f8\u28ff\u28c7\u2844\u2800\u2800\u2800\u2800\u2880\u287f\u2804\u2819\u281b\u2800\u28c0\u28e0\u28e4\u28e4\u2804\r\n*************************************************************************************************************/       \r\n\r\n#include \"bits/stdc++.h\"\r\n \r\nusing namespace std;\r\n \r\n#define ll long long int\r\n#define pll pair<ll,ll> \r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\nusing namespace chrono;\r\n#define ordered_set tree<ll, null_type,less_equal<ll>,rb_tree_tag,tree_order_statistics_node_update>\r\ntypedef tree<pll, null_type,less<pll>, rb_tree_tag,tree_order_statistics_node_update>ordered_multiset;\r\n#define ugp gp_hash_table<ll,ll,custom_hash>\r\n#define umap unordered_map<ll,ll,custom_hash>\r\n#define pb push_back\r\n#define len(v) ((ll)(v.size()))\r\n#define all(v) v.begin(),v.end()\r\n#define rall(v) v.rbegin(),v.rend()\r\n#define ff first\r\n#define ss second\r\n#define inp(a) for(auto &x:a) cin>>x;\r\n#define vll vector<ll>\r\n#define vvll vector<vector<ll>>\r\n#define vs vector<string>\r\n#define vpll vector<pair<ll,ll>> \r\n#define pn cout<<\"NO\\n\"\r\n#define py cout<<\"YES\\n\"\r\n#define mid(s,e) s+(e-s)/2\r\n#define endl '\\n'\r\nconst ll MAX_SIZE = 200005;\r\nconst ll ninf = (-1)*(1ll<<60);\r\nconst ll inf = 1ll<<60;\r\nconst ll mod = 1000000007;\r\n\r\n//typedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double lld;\r\n\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x) cerr << #x <<\" \"; _print(x); cerr << endl;\r\n#else\r\n#define debug(x)\r\n#endif\r\n\r\nvoid _print(ll t) {cerr << t;}\r\nvoid _print(int t) {cerr << t;}\r\nvoid _print(string t) {cerr << t;}\r\nvoid _print(char t) {cerr << t;}\r\nvoid _print(lld t) {cerr << t;}\r\nvoid _print(double t) {cerr << t;}\r\nvoid _print(ull t) {cerr << t;}\r\n\r\ntemplate <class T, class V> void _print(pair <T, V> p);\r\ntemplate <class T> void _print(vector <T> v);\r\ntemplate <class T> void _print(set <T> v);\r\ntemplate <class T, class V> void _print(map <T, V> v);\r\ntemplate <class T> void _print(multiset <T> v);\r\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\r\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\nstruct custom_hash {\r\n    static uint64_t splitmix64(uint64_t x) {\r\n        // http://xorshift.di.unimi.it/splitmix64.c\r\n        x += 0x9e3779b97f4a7c15;\r\n        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n        return x ^ (x >> 31);\r\n    }\r\n\r\n    size_t operator()(uint64_t x) const {\r\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n        return splitmix64(x + FIXED_RANDOM);\r\n    }\r\n};\r\n\r\nll setbits(ll x){\r\n    return __builtin_popcountll(x);\r\n}\r\nll tz(ll x){\r\n    return __builtin_ctz(x);\r\n}\r\nll fastpow(ll a ,ll b){\r\n    ll res=1;\r\n    while(b){\r\n       if(b&1) res*=a;\r\n       a*=a;\r\n       b/=2;\r\n    }\r\n    return res;\r\n}\r\n//bitset<1000001> isprime; \r\n//void seive(){\r\n//    isprime.set();\r\n//    isprime[1]=0;\r\n//    for(ll i=4;i<MAX_SIZE;i+=2) isprime[i]=false;\r\n//\r\n//    for(ll i=3;i<MAX_SIZE;i+=2){\r\n//        if(isprime[i]){\r\n//            ll j=i;\r\n//            while(j*i<MAX_SIZE){\r\n//                isprime[j*i]=false;\r\n//                j+=2;\r\n//            }\r\n//        }\r\n//    }\r\n//\r\n//} \r\n\r\n\r\n\r\n \r\n\r\n\r\nvoid Excuse_Me(ll TC)\r\n{\r\n    ll n;\r\n    cin>>n;\r\n    \r\n    vll a(n);\r\n    inp(a);\r\n    \r\n   \r\n    \r\n    vvll pre(n+1,vll(27,0));\r\n    \r\n    ll ans=0;\r\n    \r\n    for(ll i=1;i<=n;i++){\r\n    \tpre[i][a[i-1]]++;\r\n    \tfor(ll j=1;j<=26;j++) pre[i][j]+=pre[i-1][j];\r\n    }\r\n    \r\n    for(ll i=1;i<=n;i++){\r\n    \tfor(ll j=i;j<=n;j++){\r\n    \t\tif(a[j-1]!=a[i-1] || (pre[i][a[i-1]]!=pre[n][a[i-1]]-pre[j-1][a[i-1]])) continue;\r\n    \t\tif(j-i==0) ans=max(ans,(ll)1);\r\n    \t\telse if(j-i==1) ans=max(ans,(ll)2);\r\n    \t\telse{\r\n    \t\t\tfor(ll k=1;k<=26;k++){\r\n    \t\t\t\tans=max(ans,pre[i][a[i-1]]+pre[n][a[i-1]]-pre[j-1][a[j-1]]+pre[j-1][k]-pre[i][k]);\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n    }\r\n    \r\n    cout<<ans<<endl;\r\n    \r\n    \r\n    \r\n}\r\n \r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);\r\n//     \r\n    // #ifndef ONLINE_JUDGE\r\n    // freopen(\"Error.txt\", \"w\", stderr);\r\n    // #endif\r\n    \r\n     #ifdef ONLINEJUDGE\r\n       freopen(\"input.txt\",\"r\",stdin); //can need to change file . this one for taking input\r\n       freopen(\"output.txt\",\"w\",stdout); // this one for output\r\n     #endif\r\n     auto start1 = high_resolution_clock::now(); \r\n    //seive();\r\n    ll Tc=1;\r\n    cin>>Tc;\r\n \r\n    for(ll tc=1;tc<=Tc;tc++)\r\n    {\r\n        Excuse_Me(tc);\r\n    }\r\n     auto stop1 = high_resolution_clock::now();\r\n    auto duration = duration_cast<microseconds>(stop1 - start1);\r\n    #ifndef ONLINE_JUDGE\r\n    cerr << \"Time: \" << duration . count() / 1000 << endl;\r\n    #endif    \r\n \r\nreturn 0;\r\n}\r\n/*\r\n1. Initialize all variables! Arrays etc.\r\n2. Min of Max and Max of Min, such type of problems usually require Binary Search\r\n3. Use to_string and stoi,atoi for conversions to suitable types.\r\n4. For setting precision of n digits after decimal, use cout<<fixed;cout<<setprecision(n); before output, or at start of code if all outputs have same precision(include ios and iomanip header files.\r\n5. Instead os using ceil(a/b), use (a+b-1)/b or (a-1)/b+1.\r\n6. For char to int, subtract '0', for int to char add'0'\r\n*/\r\n"
}