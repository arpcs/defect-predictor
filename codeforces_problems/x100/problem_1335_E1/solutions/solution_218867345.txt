{
    "id": 218867345,
    "contestId": 1335,
    "creationTimeSeconds": 1692069818,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "FranceWhale"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586788500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n//#define int long long \n\nsigned main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<int> arr(n + 5);\n\t\tfor (int i = 1; i <= n; i++) cin >> arr[i];\n\t\tvector<vector<vector<int>>> dp(n + 5, vector<vector<int>>(30, vector<int>(2)));\n\t\tfor (int i = n; i >= 1; i--) {\n\t\t\tvector<vector<vector<int>>> dq(n + 5, vector<vector<int>>(30, vector<int>(2)));\n\t\t\tdq[i][arr[i]][0] = dq[i][arr[i]][1] = 1;\n\t\t\tfor (int j = i + 1; j <= n; j++) {\n\t\t\t\tfor (int k = 1; k <= 26; k++) {\n\t\t\t\t\tdq[j][arr[i]][1] = max({dq[j][arr[i]][1], dp[j][k][1], dq[j - 1][k][1]});\n\t\t\t\t\tdq[j][arr[i]][0] = max({dq[j][arr[i]][0], dp[j][k][0], dq[j - 1][k][0]});\n\t\t\t\t}\n\t\t\t\tif (arr[i] == arr[j]) {\n\t\t\t\t\tdq[j][arr[i]][1] = max(dq[j][arr[i]][1], dp[j - 1][arr[i]][1] + 2);\n\t\t\t\t\tfor (int k = 1; k <= 26; k++) dq[j][arr[i]][0] = max(dq[j][arr[i]][0], dp[j - 1][k][k != arr[i]] + 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tswap(dp, dq);\n\t\t}\n\t\tint ans = 0;\n\t\tfor (int k = 1; k <= 26; k++) ans = max({ans, dp[n][k][0], dp[n][k][1]});\n\t\tcout << ans << '\\n';\n\t}\n\treturn 0;\n}\n"
}