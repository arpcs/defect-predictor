{
    "id": 234947366,
    "contestId": 1335,
    "creationTimeSeconds": 1701270911,
    "relativeTimeSeconds": 3071,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "Murinh0"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1701267840
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 819200,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\n#define pb push_back\r\n#define ld long double\r\n#define nl '\\n'\r\n#define fast cin.tie(0), cout.tie(0), ios_base::sync_with_stdio(false)\r\n#define fore(i,a,b) for(ll i=a;i<b;++i)\r\n#define ALL(s) s.begin(),s.end()\r\n#define vi vector <ll>\r\n#define vvi vector<vi>\r\n#define PI 3.1415926535\r\n    \r\n    \r\nusing namespace std;\r\n\r\nconst ll INF = 1e18;\r\nconst ll mod = 1e9+7;\r\nconst ll maxn = 1e5+5;\r\nll tc,n,k,ans,ini;\r\nvector <ll> a;\r\nvector < vector <ll> > sum;\r\n\r\nvoid init(){\r\n    ans = 1;\r\n    a.clear(), a.resize(n+1);\r\n    sum.clear(), sum.resize(n+1);\r\n    fore(i,0,n+1) sum[i].resize(30);\r\n}\r\n\r\nint main()\r\n{\r\n    fast;\r\n    cin>>tc;\r\n    while(tc--){\r\n        cin>>n;\r\n        init();\r\n        fore(i,1,n+1){ //sum[pos][number]\r\n            cin>>a[i];\r\n            sum[i][a[i]]++;\r\n            fore(j,1,29) sum[i][j] += sum[i-1][j];\r\n        }\r\n        fore(i,1,n+1){\r\n            fore(j,i,n+1){\r\n                if (a[i] == a[j]){\r\n                    ll res = sum[j][a[i]] - sum[i-1][a[i]];\r\n                    ans = max(ans,res);\r\n                    fore(k,1,29){\r\n                        if (k == a[i]) continue;\r\n                        ans = max(ans,res + (min(sum[i-1][k],sum[n][k] - sum[j][k])*2));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        cout<<ans<<nl;\r\n    }\r\n    return 0;\r\n}"
}