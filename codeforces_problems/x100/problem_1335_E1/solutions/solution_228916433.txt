{
    "id": 228916433,
    "contestId": 1335,
    "creationTimeSeconds": 1697803182,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "Webbly"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586788500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n//\r\n//                  Solution\r\n//                    Webbly, 27.01.2023\r\n//\r\n//\r\n//                    Arsen ne katai\r\n//\r\n//\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n//#include<bits/stdc++.h>\r\n#include <algorithm>\r\n#include <iostream>\r\n#include <vector>\r\n#include <queue>\r\n#include <cmath>\r\n#include <map>\r\n#include <set>\r\n//#pragma GCC optimize(\"O3\")\r\n//#pragma GCC optimize(\"fast-loops\")\r\n/**\r\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\r\n#pragma GCC optimize(\"-funroll-loops\")\r\n#pragma GCC optimize(\"-fwhole-program\")\r\n#pragma GCC optimize(\"Ofast,no-stack-protector\")\r\n#pragma GCC optimize(\"-fthread-jumps\")\r\n#pragma GCC optimize(\"-falign-functions\")\r\n#pragma GCC optimize(\"-falign-jumps\")\r\n#pragma GCC optimize(\"-falign-loops\")\r\n#pragma GCC optimize(\"-falign-labels\")\r\n#pragma GCC optimize(\"-fcaller-saves\")\r\n#pragma GCC optimize(\"-fcrossjumping\")\r\n#pragma GCC optimize(\"-fcse-follow-jumps\")\r\n#pragma GCC optimize(\"-fcse-skip-blocks\")\r\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\r\n#pragma GCC optimize(\"-fdevirtualize\")\r\n#pragma GCC optimize(\"-fexpensive-optimizations\")\r\n#pragma GCC optimize(\"-fgcse\")\r\n#pragma GCC optimize(\"-fgcse-lm\")\r\n#pragma GCC optimize(\"-fhoist-adjacent-loads\")\r\n#pragma GCC optimize(\"-finline-small-functions\")\r\n#pragma GCC optimize(\"-findirect-inlining\")\r\n#pragma GCC optimize(\"-fipa-sra\")\r\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\r\n#pragma GCC optimize(\"-fpartial-inlining\")\r\n#pragma GCC optimize(\"-fpeephole2\")\r\n#pragma GCC optimize(\"-freorder-blocks\")\r\n#pragma GCC optimize(\"-freorder-functions\")\r\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\r\n#pragma GCC optimize(\"-fsched-interblock\")\r\n#pragma GCC optimize(\"-fsched-spec\")\r\n#pragma GCC optimize(\"-fschedule-insns\")\r\n#pragma GCC optimize(\"-fschedule-insns2\")\r\n#pragma GCC optimize(\"-fstrict-aliasing\")\r\n#pragma GCC optimize(\"-fstrict-overflow\")\r\n#pragma GCC optimize(\"-ftree-switch-conversion\")\r\n#pragma GCC optimize(\"-ftree-tail-merge\")\r\n#pragma GCC optimize(\"-ftree-pre\")\r\n#pragma GCC optimize(\"-ftree-vrp\")\r\n#pragma GCC target(\"avx\")\r\n*/\r\n#define ll long long\r\n#define pb push_back\r\n#define mp make_pair\r\n#define all(x) x.begin(),x.end()\r\n#define flush cout.flush()\r\n\r\nusing namespace std;\r\n\r\nconst int mod = (ll)1e9 + 7, mod3 = 998244353, inf = (ll)2e1, P = 31;\r\n\r\nll binpow (ll a, ll b){\r\n    ll ans = 1;\r\n    while(b){\r\n        if (b & 1){\r\n            ans *= a;\r\n        }\r\n\r\n        b >>= 1;\r\n        a *= a;\r\n\r\n        a %= mod;\r\n    }\r\n    return ans;\r\n}\r\nll gcd(ll a, ll b){\r\n    return (b ? gcd(b, a % b) : a);\r\n}\r\nll nums(ll g){\r\n    ll cur = 0;\r\n    while(g){\r\n        cur++, g /= 10;\r\n    }\r\n\r\n    return cur;\r\n}\r\nll lcm(ll a, ll b){\r\n    return a / gcd(a, b) * b;\r\n}\r\n\r\nvector <ll> fac(ll n){\r\n    ll i = 2;\r\n\r\n    vector <ll> ans;\r\n\r\n    ll save = n;\r\n\r\n    while(i * i <= save){\r\n        while(n % i == 0){\r\n            ans.pb(i);\r\n\r\n            n /= i;\r\n        }\r\n\r\n        i++;\r\n    }\r\n\r\n    if (n > 1) ans.pb(n);\r\n\r\n    return ans;\r\n}\r\n\r\nll get1(ll q, ll g){\r\n    ll cur = 1;\r\n\r\n    for (ll i = q; i > g; i--){\r\n        cur *= i;\r\n    }\r\n\r\n    return cur;\r\n}\r\nstruct T{\r\n    ll x, y;\r\n};\r\n\r\nstruct tr{\r\n    ll x, y;\r\n};\r\n\r\nll n, m, k, a[500005], b[500005], p[27][2005], link[27][2005];\r\n\r\nvoid query(){\r\n    cin >> n;\r\n\r\n    for (ll i = 1; i <= n; i++){\r\n        cin >> a[i];\r\n\r\n        for (ll j = 1; j <= 26; j++){\r\n            p[j][i] = p[j][i - 1];\r\n        }\r\n\r\n        p[a[i]][i]++;\r\n\r\n        link[a[i]][p[a[i]][i]] = i;\r\n    }\r\n\r\n    ll ans = 0;\r\n\r\n    for (ll i = 1; i <= 26; i++){\r\n        ans = max(ans, p[i][n]);\r\n    }\r\n\r\n    for (ll i = 1; i <= n; i++){\r\n        for (ll j = 1; j < p[a[i]][i]; j++){\r\n            for (ll k = 1; k <= 26; k++){\r\n                if (k == a[i]) continue;\r\n\r\n                ll cur = min(j, p[a[i]][i] - j);\r\n\r\n                ans = max(ans, cur * 2 + p[k][link[a[i]][p[a[i][i] - cur + 1]]] - p[k][link[a[i]][j]]);\r\n            }\r\n        }\r\n    }\r\n\r\n    cout << ans << '\\n';\r\n}\r\n\r\nint main(){\r\n    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n\r\n    //freopen(\"justforfood.in\", \"r\", stdin);\r\n    //freopen(\"justforfood.out\", \"w\", stdout);\r\n\r\n    ll TT = 1, tests = 1;\r\n\r\n    cin >> TT;\r\n\r\n    while(TT--){\r\n        //cout << \"Case \" << tests << \": \";\r\n\r\n        query();\r\n\r\n        //tests++;\r\n    }\r\n\r\n    return 0;\r\n}\r\n/**\r\n\r\n36 48\r\n2 2 3 3\r\n2 2 2 2 3\r\n\r\n9\r\n\r\nx x x x x x x\r\n3\r\n\r\n9\r\n2 2 1 1 2 1 2 1 1\r\n\r\n1 1 1 1 1 2 2 2 2\r\n\r\n1 2 1 2 1 2 1 2 1\r\n\r\n10\r\n4 4 3 2 4 1 3 4 1 2\r\n\r\n1 1 2 2 3 3 4 4 4 4\r\n\r\n4 1 2 4 1 2 4 3 3 4\r\n*/\r\n"
}