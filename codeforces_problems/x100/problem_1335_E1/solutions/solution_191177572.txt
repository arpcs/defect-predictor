{
    "id": 191177572,
    "contestId": 1335,
    "creationTimeSeconds": 1675022447,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "Bo0tstrap"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586788500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 11,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 131379200,
    "source": "//Bismillahi Rahmanir Rahim\r\n#include <bits/stdc++.h>\r\nusing namespace std; \r\ntypedef long long LL;\r\ntypedef long long int ll;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<LL, LL> pll;\r\ntypedef pair<string, string> pss;\r\ntypedef vector<ll> vi;\r\ntypedef vector<vi> vvi;\r\ntypedef vector<pll> vii;\r\ntypedef vector<LL> vl;\r\ntypedef vector<vl> vvl;\r\ndouble EPS = 1e-9;\r\nconst int N = (int)1e6 + 77;\r\nconst ll inf =1000001;\r\ndouble PI = acos(-1);\r\nint dirx[8] = { -1, 0, 0, 1, -1, -1, 1, 1 };\r\nint diry[8] = { 0, 1, -1, 0, -1, 1, -1, 1 };\r\nll m,n,k,g,x,y,u,b[inf],a[inf],ans,fact[1000001],d[inf],r,cur,ans1,flag,flag1,flag2,flag3,flag4,cnt,cnt1,cnt2,cnt3,minn,maxx,maxx1,sum,sum1,ans2,ans3;\r\nvector<ll> adj[200000];\r\nll c[inf];\r\nll visited[200001];\r\nll dis[200001];\r\nll mat[1001][1001]; \r\nstring str,str1,str2,str3;\r\nconst int md = 1e9+7;\r\nvector<pair<ll,ll>>v;\r\nvl v2,res;\r\npriority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>>pq;\r\nmap<ll,ll>mp;\r\nmap<char,ll>mp1;\r\nqueue<ll> q;\r\nset<ll>s;\r\nunordered_set<LL> ms;\r\nstack<LL>st;\r\ndouble pi=3.14159265358979323846;\r\nbool ok[1000][1000];\r\nll dp[200001];\r\nvector<ll> v1[200000];\r\nll check[2001][2001];\r\nll prime[5000005];\r\n#define FOR(a, b, c) for (int(a) = (b); (a) < (c); ++(a))\r\n#define FORN(a, b, c) for (int(a) = (b); (a) <= (c); ++(a))\r\n#define FORD(a, b, c) for (int(a) = (b)-1; (a) >= (c); --(a))\r\n#define FORSQ(a, b, c) for (int(a) = (b); (a) * (a) <= (c); ++(a))\r\n#define FORC(a, b, c) for (char(a) = (b); (a) <= (c); ++(a))\r\n#define FOREACH(a, b) for (auto&(a) : (b))\r\n#define REP(i, n) FOR(i, 0, n)\r\n#define REPN(i, n) FORN(i, 1, n)\r\n#define MAX(a,b) a=max(a,b)\r\n#define MIN(a, b) a = min(a, b)\r\n#define SQR(x) ((LL)(x) * (x))\r\n#define RESET(a, b) memset(a, b, sizeof(a))\r\n#define fi first\r\n#define se second\r\n#define pb push_back\r\n#define ALL(v) v.begin(), v.end()\r\n#define ALLA(arr, sz) arr, arr + sz\r\n#define SIZE(v) (int)v.size()\r\n#define SORT(v) sort(ALL(v))\r\n#define REVERSE(v) reverse(ALL(v))\r\n#define SORTA(arr, sz) sort(ALLA(arr, sz))\r\n#define REVERSEA(arr, sz) reverse(ALLA(arr, sz))\r\n#define TC(t) while (t--)\r\n#define ins insert\r\n#define PERMUTE next_permutation\r\n\r\n/*********/\r\nvoid solve()\r\n{\r\n\r\n    cin >> n;\r\n    ans=0;\r\n    FOR(i,0,n)\r\n    {\r\n        cin >> a[i];\r\n    }\r\n    vector<vector<ll>> b(26, vector<ll>(n + 1));\r\n    FOR(i,0,n)\r\n    {\r\n        FOR(j,0,26)\r\n        {\r\n            b[j][i+1]=b[j][i];\r\n        }\r\n        b[a[i]-1][i+1]++;\r\n    }\r\n    FOR(i,0,n)\r\n    {\r\n        ans=max(ans,b[i][n-1]);\r\n    }\r\n    FOR(i,0,n)\r\n    {\r\n        FOR(j,i,n)\r\n        {\r\n            cnt=0,cnt1=0;\r\n            FOR(bit,0,26)\r\n            {\r\n                cnt=max(cnt,b[bit][j+1]-b[bit][i]);\r\n                cnt1=max(cnt1,min(b[bit][i],b[bit][n]-b[bit][j+1])*2);\r\n            }\r\n            ans=max(ans,cnt+cnt1);\r\n        }\r\n    }\r\n    cout<<ans<<endl;\r\n\r\n    \r\n\r\n}\r\n\r\n/*********/\r\n \r\nint main()\r\n{       \r\n    ios::sync_with_stdio(0);    \r\n    cin.tie(0);\r\n    int t=1;\r\n    int i =1;\r\n    cin >> t;\r\n    //freopen(\"closing.in\", \"r\", stdin);\r\n    //freopen(\"closing.out\", \"w\", stdout); \r\n    TC(t)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n"
}