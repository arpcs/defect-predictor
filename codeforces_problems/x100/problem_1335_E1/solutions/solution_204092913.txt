{
    "id": 204092913,
    "contestId": 1335,
    "creationTimeSeconds": 1682902999,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "Thenthungnhinequaygot"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586788500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 24268800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst long long N=1e6+1;\r\nconst long long INF=1e18;\r\nconst long long mod=1e9+7;\r\nlong long f[N], c[N], pre[N];\r\n#define ll long long\r\n#define all(s) (s).begin(), (s).end()\r\nlong long n, q, m;\r\nbool checksquare(ll n)\r\n{\r\n    ll p=sqrt(n);\r\n    if (p*p==n) return true;\r\n    return false;\r\n}\r\nvoid solve()\r\n{\r\n    ll n;\r\n    cin>>n;\r\n    vector <ll> a(n+1);\r\n    vector <ll> fre[201];\r\n    for (ll i=1; i<=n; i++)\r\n    {\r\n        cin>>a[i];\r\n        fre[a[i]].push_back(i);\r\n    }\r\n    vector <ll> b=a;\r\n    sort(all(b));\r\n    b.resize(unique(all(b))-b.begin());\r\n    ll ans=0;\r\n    for (auto x : b)\r\n    {\r\n        ans=max(ans, (ll) fre[x].size());\r\n    }\r\n    for (auto i : b)\r\n    {\r\n        for (auto j : b)\r\n        {\r\n            if (fre[i].empty()||fre[j].empty()) continue;\r\n            if (i==j) continue;\r\n            ll l=0, r=fre[i].size()-1;\r\n            ll lo=0, hi=fre[j].size()-1;\r\n            while (l<r)\r\n            {\r\n                while (fre[i][l]>fre[j][lo]) lo++;\r\n                while (fre[i][r]<fre[j][hi]) hi--;\r\n                ans=max(ans, hi-lo+1+2*l+2);\r\n                l++;\r\n                r--;\r\n            }\r\n        }\r\n    }\r\n    cout<<ans<<endl;\r\n}\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\r\n    ll t=1;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        solve();\r\n    }\r\n}\r\n"
}