{
    "id": 224293698,
    "contestId": 1335,
    "creationTimeSeconds": 1695299103,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1335,
        "index": "E1",
        "name": "Three Blocks Palindrome (easy version)",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dp",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1335,
        "members": [
            {
                "handle": "learn_review"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586788500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#include \"debugging.h\"\r\nusing namespace std;\r\nconst int MX = 2e3 + 1;\r\nint nums[MX];\r\nint T,n,k;\r\n\r\nvoid solve(){\r\n\r\n}\r\nint main(){\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    \r\n    int T = 1;\r\n    cin>>T;\r\n    while(T--){\r\n        cin>>n;\r\n        vector<vector<int>> pre(n+2,vector<int>(26));\r\n        vector<vector<int>> suf(n+2,vector<int>(26));\r\n        vector<vector<int>> pos(26);\r\n        for(int i=1;i<=n;i++){\r\n            cin>>nums[i];\r\n            pre[i] = pre[i-1];\r\n            pre[i][nums[i]-1]++;\r\n            pos[nums[i]-1].push_back(i);\r\n        }\r\n\r\n        for(int i=n;i>=1;i--){\r\n            suf[i] = suf[i+1];\r\n            suf[i][nums[i]-1]++;\r\n        }\r\n        int ans = 0;\r\n        for(int i=0;i<26;i++)\r\n            ans = max(ans,suf[1][i]);\r\n        for(int k=0;k<26;k++){\r\n            int sz = pos[k].size();\r\n            for(int i=0;i<sz;i++)\r\n                for(int j=i;j<sz;j++){\r\n                    int a = pos[k][i];\r\n                    int b = pos[k][j];\r\n                    for(int t=0;t<26;t++){\r\n                        if(pre[a-1][t]>0&&suf[b+1][t]>0)\r\n                            ans = max(ans,j-i+1 + pre[a-1][t] + suf[b+1][t]);\r\n                    }\r\n\r\n                }\r\n        }\r\n        cout<<ans<<endl;\r\n\r\n    }\r\n    cin>>T;\r\n    return 0;\r\n}"
}