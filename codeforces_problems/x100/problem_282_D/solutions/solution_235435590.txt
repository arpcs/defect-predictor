{
    "id": 235435590,
    "contestId": 282,
    "creationTimeSeconds": 1701545729,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 282,
        "index": "D",
        "name": "Yet Another Number Game",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "dp",
            "games"
        ]
    },
    "author": {
        "contestId": 282,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1363188600
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 117,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 1638400,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\n\nconst ll MAXN = 3E2 + 5;\n\nint main () {\n    cin.tie(nullptr) -> sync_with_stdio(false);\n    ll n;\n    cin >> n;\n    if (n == 1) {\n        ll a;\n        cin >> a;\n        cout << (a != 0 ? \"BitLGM\" : \"BitAryo\") << '\\n';\n        return 0;\n    }\n    if (n == 2) {\n        vector <bool> visCol(MAXN, false);\n        vector <ll> col(MAXN);\n        vector <bool> visDiag(MAXN, false);\n        vector <ll> diag(MAXN);\n        for (ll i = 0; i < MAXN; i++) {\n            for (ll j = i; j < MAXN; j++) {\n                if (visDiag[abs(i - j)] && min(i, j) >= diag[abs(i - j)] || visCol[i] && j >= col[i] || visCol[j] && i >= col[j]) continue;\n                visDiag[abs(i - j)] = true;\n                diag[abs(i - j)] = min(i, j) + 1;\n                visCol[i] = true;\n                col[i] = j + 1;\n                visCol[j] = true;\n                col[j] = i + 1;\n            }\n        }\n        ll a, b;\n        cin >> a >> b;\n        cout << ((visDiag[abs(a - b)] && min(a, b) >= diag[abs(a - b)] || visCol[a] && b >= col[a] || visCol[b] && a >= col[b]) ? \"BitLGM\" : \"BitAryo\") << '\\n';\n        return 0;\n    }\n    vector <vector <bool> > visCol(MAXN, vector <bool> (MAXN, false));\n    vector <vector <ll> > col(MAXN, vector <ll> (MAXN));\n    vector <vector <bool> > visDiag(MAXN, vector <bool> (MAXN, false));\n    vector <vector <ll> > diag(MAXN, vector <ll> (MAXN));\n    for (ll i = 0; i < MAXN; i++) {\n        for (ll j = i; j < MAXN; j++) {\n            for (ll k = j; k < MAXN; k++) {\n                if (visDiag[j - i][k - i] && i >= diag[j - i][k - i] || visCol[i][j] && k >= col[i][j] || visCol[i][k] && j >= col[i][k] || visCol[j][k] && i >= col[j][k]) continue;\n                visDiag[j - i][k - i] = true;\n                diag[j - i][k - i] = i + 1;\n                visCol[i][j] = true;\n                col[i][j] = k + 1;\n                visCol[i][k] = true;\n                col[i][k] = j + 1;\n                visCol[j][k] = true;\n                col[j][k] = i + 1;\n            }\n        }\n    }\n    ll a, b, c;\n    cin >> a >> b >> c;\n    if (a > b) swap(a, b);\n    if (b > c) swap(b, c);\n    if (a > b) swap(a, b);\n    assert(a <= b && b <= c);\n    cout << ((visDiag[b - a][c - a] && a >= diag[b - a][c - a] || visCol[a][b] && c >= col[a][b] || visCol[a][c] && b >= col[a][c] || visCol[b][c] && a >= col[b][c]) ? \"BitLGM\" : \"BitAryo\") << '\\n';\n    return 0;\n}\n\t \t\t \t\t\t   \t  \t \t\t\t \t \t \t \t\t \t\t"
}