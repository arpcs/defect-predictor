{
    "id": 136948998,
    "contestId": 581,
    "creationTimeSeconds": 1637879895,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 581,
        "index": "B",
        "name": "Luxurious Houses",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1100,
        "tags": [
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 581,
        "members": [
            {
                "handle": "Muhamed_Morsi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1443430800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 9830400,
    "source": "#define _CRT_SECURE_NO_WARNINGS\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nvoid Fast()\r\n{\r\n    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n}\r\nvoid File() {\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"Input.txt\", \"r\", stdin);\r\n    freopen(\"Output.txt\", \"w\", stdout);\r\n    /*freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);*/\r\n#endif\r\n}\r\ntypedef long long ll;\r\n#define watch(x) cout << (#x) << \" = \" << x << '\\n'\r\n#define endl '\\n'\r\n#define all(a)  a.begin(), a.end()\r\n#define fix(n) cout << fixed << setprecision(n)\r\n#define skip continue\r\nconst int oo = 1e9 + 7;\r\nconst long double pi = acos(-1);\r\nll gcd(ll a , ll b){\r\n    if(!b){\r\n        return a;\r\n    }\r\n    return gcd(b , a % b);\r\n}\r\n\r\nint main() {\r\n    File();\r\n    Fast();\r\n    int n;cin >> n;\r\n    vector<int>v(n) , cnt(n+1);\r\n    map<int,set<int>>mst;\r\n    for(int i = 0 ; i < n;i++){\r\n        cin >> v[i];\r\n        mst[v[i]].insert(i);\r\n    }\r\n    cnt[n-1] = v[n-1];\r\n    for(int i = n - 2; i >= 0 ;i--){\r\n        cnt[i] = max(cnt[i+1] , v[i]);\r\n    }\r\n    for(int i = 0 ; i < n;i++){\r\n        if(v[i] == cnt[i]){\r\n//            auto it = mst[v[i]].lower_bound(i);\r\n//            if(*it > i){\r\n//                cout << 1 << ' ';\r\n//            }\r\n//            else{\r\n//                cout << 0 << ' ';\r\n//            }\r\n            cout << 0 << ' ';\r\n        }\r\n        else if(v[i] > cnt[i]){\r\n            cout << 0 << ' ';\r\n        }\r\n        else {\r\n            cout << cnt[i] - v[i] + 1 << ' ';\r\n        }\r\n    }\r\n}\r\n\r\n/*\r\nEvery Thing is always seems impossible until someone does it.\r\nwhen you find a good move always look for a better one.\r\n*/"
}