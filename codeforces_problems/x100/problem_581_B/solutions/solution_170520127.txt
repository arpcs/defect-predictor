{
    "id": 170520127,
    "contestId": 581,
    "creationTimeSeconds": 1662060330,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 581,
        "index": "B",
        "name": "Luxurious Houses",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1100,
        "tags": [
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 581,
        "members": [
            {
                "handle": "avci"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1443430800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 1536000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\n/*void cleara(int a, int b){\r\n    for(int i = a; i < b; i++){\r\n        fr[s[i] - 65] = -1;\r\n    }\r\n}*/\r\nint fact(int i, int n){\r\n    if(i == n){\r\n        return 1;\r\n    }\r\n    if(i > n){\r\n        return 0;\r\n    }\r\n    return 1 + fact(i * 10 + 4, n);\r\n    return 1 + fact(i * 10 + 7 , n);\r\n}\r\n/*bool sec(const pair<float , int> &a, const pair<double , int> &b){\r\n    if(a.first == b.first){\r\n        return (a.second > b.second);\r\n    }\r\n    return a.first > b.first;\r\n}*/\r\n/*int cntdiv(int n){\r\n    int cnt = 0;\r\n    for(int i = 1; i <= sqrt(n); i++){\r\n        if(n % i == 0){\r\n            if(n / i == i){\r\n                cnt++;\r\n            }\r\n            else{\r\n                cnt += 2;\r\n            }\r\n        }\r\n    }\r\n    return cnt;\r\n}*/\r\n/*ll rec(ll x, ll y, ll z){\r\n    ll l = 0, r = z, cnt = 0;\r\n    while(l <= r){\r\n        int mid = (l + r) / 2;\r\n        if(v[mid].first <= x){\r\n            if(v[mid].second <= y && v[mid].first == x){\r\n                cnt = mid + 1;\r\n                l = mid + 1;\r\n            }\r\n            else if(v[mid].second > y && v[mid].first == x){\r\n                r = mid - 1;\r\n            }\r\n            else{\r\n                cnt = mid + 1;\r\n                l = mid + 1;\r\n            }\r\n        }\r\n        else{\r\n            r = mid - 1;\r\n        }\r\n    }\r\n    return cnt;\r\n}*/\r\nvoid heapify(int arr[] , int n, int i){\r\n    int r = i * 2 + 2;\r\n    int l = i * 2 + 1;\r\n    int max = i;\r\n    if(l < n && arr[l] > arr[max]){\r\n        max = l;\r\n    }\r\n    if(r < n && arr[r] > arr[max]){\r\n        max = r;\r\n    }\r\n    if(max != i){\r\n        swap(arr[i] , arr[max]);\r\n        heapify(arr, n, max);\r\n    }\r\n}\r\nvoid build_heap(int arr[] , int n){\r\n    for(int i = n / 2 - 1; i >= 0; i--){\r\n        heapify(arr , n , i);\r\n    }\r\n}\r\nvoid heapsort(int arr[] , int n){\r\n    build_heap(arr , n);\r\n    for(int i = n - 1; i >= 0; i--){\r\n        swap(arr[0], arr[i]);\r\n        heapify(arr, i, 0);\r\n    }\r\n}\r\nint main(){\r\n \r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int n;\r\n    cin >> n;\r\n    vector<int> v(n);\r\n    for(auto &x : v){\r\n        cin >> x;\r\n    }\r\n    ll m = 0;\r\n    vector<int> v1;\r\n    for(int i = n - 1; i >= 0; i--){\r\n        if(v[i] >= m){\r\n            v1.push_back(0);\r\n            m = v[i];\r\n        }\r\n        else{\r\n            v1.push_back(m - v[i] + 1);\r\n        }\r\n    }\r\n    reverse(v1.begin() , v1.end());\r\n    for(auto r : v1){\r\n        cout << r << ' ';\r\n    }\r\n    return 0;\r\n}"
}