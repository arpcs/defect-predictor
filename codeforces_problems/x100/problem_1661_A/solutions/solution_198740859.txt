{
    "id": 198740859,
    "contestId": 1661,
    "creationTimeSeconds": 1679575687,
    "relativeTimeSeconds": 487,
    "problem": {
        "contestId": 1661,
        "index": "A",
        "name": "Array Balancing",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1661,
        "members": [
            {
                "handle": "neerajgartia211002"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1679575200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#include<numeric>\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma\")\r\n#pragma GCC optimize(\"unroll-loops\")\r\n#define check cout << \"Check\" << endl\r\n#define int long long\r\n#define vi vector<int>\r\n#define mp make_pair\r\n#define pb push_back\r\n#define loop(i, a, b) for(int i=a;i<b;i++)\r\n\r\nconst int N=200010;\r\nconst int mod1=1e9+7;\r\nconst int mod2 = 998244353;\r\n\r\n\r\nvoid solved()\r\n{\r\n    int n;\r\n    cin>>n;\r\n    int a[n],b[n];\r\n    vector<int> arr,brr;\r\n    for(int i=0;i<n;i++){\r\n        cin>>a[i];\r\n    }\r\n    for(int i=0;i<n;i++){\r\n        cin>>b[i];\r\n    }\r\n    for(int i=0;i<n;i++){\r\n        arr.push_back(min(a[i],b[i]));\r\n        brr.push_back(max(a[i],b[i]));\r\n    }\r\n    int ans=0;\r\n    for(int i=1;i<n;i++){\r\n        ans+=abs(arr[i]-arr[i-1]);\r\n    }\r\n    for(int i=1;i<n;i++){\r\n        ans+=abs(brr[i]-brr[i-1]);\r\n    }\r\n    cout<<ans<<endl;\r\n}\r\n\r\nsigned main()\r\n{\r\n\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n    int t;\r\n    cin >> t;\r\n    // t=1;\r\n    while (t--)\r\n    {\r\n        solved();\r\n    }\r\n    return 0;\r\n}\r\n\r\n//segment tree\r\n\r\n// void update(int tree[],int node, int start, int end, int l, int r, int val) {\r\n//     if(start > r || end < l) return;\r\n//     if(start >= l && end <= r) {\r\n//         tree[node] += val;\r\n//         return;\r\n//     }\r\n//     int mid = (start + end) / 2;\r\n//     update(tree,2 * node, start, mid, l, r, val);\r\n//     update(tree,2 * node + 1, mid + 1, end, l, r, val);\r\n// }\r\n\r\n// int query(int tree[],int node, int start, int end, int idx) {\r\n//     if(start == end) return tree[node];\r\n//     int mid = (start + end) / 2;\r\n//     if(idx <= mid) return tree[node] + query(tree,2 * node, start, mid, idx);\r\n//     return tree[node] + query(tree,2 * node + 1, mid + 1, end, idx);\r\n// }"
}