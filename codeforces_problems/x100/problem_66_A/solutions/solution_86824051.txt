{
    "id": 86824051,
    "contestId": 66,
    "creationTimeSeconds": 1594725178,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 66,
        "index": "A",
        "name": "Petya and Java",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1300,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 66,
        "members": [
            {
                "handle": "Ziad_Abdelshafi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1299513600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 3686400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    int n;  cin>>n;\r\n    vector<int> heights(n);\r\n\r\n    for (int i = 0; i < n; ++i)\r\n        cin>>heights[i];\r\n\r\n    int maximal = 0;\r\n    for (int i = 0; i < n; ++i)\r\n    {\r\n        int curr_watered_sections = 1;\r\n        int right_idx = i, left_idx = i;\r\n        while ((right_idx+1 < n) && (heights[right_idx+1] <= heights[right_idx]))\r\n            ++curr_watered_sections, ++right_idx;\r\n\r\n        while ((left_idx-1 >= 0) && (heights[left_idx-1] <= heights[left_idx]))\r\n            ++curr_watered_sections, --left_idx;\r\n\r\n        maximal = max(maximal, curr_watered_sections);\r\n    }\r\n\r\n    cout<<maximal<<endl;\r\n\r\n    return 0;\r\n}\r\n"
}