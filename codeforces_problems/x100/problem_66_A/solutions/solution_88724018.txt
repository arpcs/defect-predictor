{
    "id": 88724018,
    "contestId": 66,
    "creationTimeSeconds": 1596365237,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 66,
        "index": "A",
        "name": "Petya and Java",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1300,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 66,
        "members": [
            {
                "handle": "Dmohan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1299513600
    },
    "programmingLanguage": "Java 11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 29,
    "timeConsumedMillis": 374,
    "memoryConsumedBytes": 24166400,
    "source": "import java.util.*;\r\n//warm-up\r\npublic class PetyaAndJava {\r\n    \r\n    // Could just be handled using BigInteger library i guess.\r\n    // But handled it as a string problem.\r\n    static boolean isOverFlow(String a, String b, boolean neg){\r\n        int len = a.length(), i = 0;\r\n        boolean greater = false;\r\n        i = (a.charAt(i)==b.charAt(i)) ? 1 : 0;\r\n        while (i<len) {\r\n            if (Character.getNumericValue(a.charAt(i))>Character.getNumericValue(b.charAt(i++))) {\r\n                greater = true; break;\r\n            }\r\n        }\r\n        greater=(neg&&greater&&(i==len)) \r\n                ? !(Character.getNumericValue(a.charAt(i-1))-1==Character.getNumericValue(b.charAt(i-1))) \r\n                : greater;  \r\n        return greater;\r\n    }\r\n\r\n    static void solve(){\r\n        Scanner sc = new Scanner(System.in);\r\n        String tok = sc.next(), t = null;\r\n        boolean neg = (tok.charAt(0)=='-');\r\n        if (neg) tok = tok.substring(1);\r\n        int len = tok.length();\r\n        if (len>19) t=\"BigInteger\";\r\n        else if (len>10 && len<20) if (len==19) {\r\n            t = (isOverFlow(tok,\"\"+Long.MAX_VALUE, neg)) ? \"BigInteger\" : \"long\";\r\n        } else {\r\n            t=\"long\";   \r\n        }\r\n        else if (len>5 && len<=10)  if (len==10) {\r\n            t = (isOverFlow(tok,\"\"+Integer.MAX_VALUE, neg)) ? \"long\" : \"int\";\r\n        } else {\r\n            t=\"int\";   \r\n        }\r\n        else if (len>3 && len<=5)   if (len==5) {\r\n            t = (isOverFlow(tok,\"\"+Short.MAX_VALUE, neg)) ? \"int\" : \"short\";\r\n        } else {\r\n            t=\"short\";   \r\n        }\r\n        else if (len<=3) if (len==3) {\r\n            t = (isOverFlow(tok,\"\"+Byte.MAX_VALUE, neg)) ? \"short\" : \"byte\"; \r\n        } else {\r\n            t=\"byte\";\r\n        }            \r\n        System.out.println(t);\r\n        sc.close();\r\n    }\r\n    \r\n    public static void main(String args[]) {\r\n        solve();\r\n    }\r\n}   \r\n"
}