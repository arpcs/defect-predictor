{
    "id": 212831498,
    "contestId": 66,
    "creationTimeSeconds": 1688822024,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 66,
        "index": "A",
        "name": "Petya and Java",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1300,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 66,
        "members": [
            {
                "handle": "fatandbroke"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1299513600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    vector<int> heights(n);\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> heights[i];\r\n    }\r\n\r\n    int max_watered_sections = 0;\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        int watered_sections = 1;\r\n        int left = i - 1;\r\n        int right = i + 1;\r\n\r\n        while (left >= 0 && heights[left] <= heights[left + 1]) {\r\n            watered_sections++;\r\n            left--;\r\n        }\r\n\r\n        while (right < n && heights[right] <= heights[right - 1]) {\r\n            watered_sections++;\r\n            right++;\r\n        }\r\n\r\n        max_watered_sections = max(max_watered_sections, watered_sections);\r\n    }\r\n\r\n    cout << max_watered_sections << endl;\r\n\r\n    return 0;\r\n}\r\n"
}