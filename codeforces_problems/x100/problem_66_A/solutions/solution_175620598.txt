{
    "id": 175620598,
    "contestId": 66,
    "creationTimeSeconds": 1665502388,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 66,
        "index": "A",
        "name": "Petya and Java",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1300,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 66,
        "members": [
            {
                "handle": "thuha17180"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1299513600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 20,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nbool ss(string t)\r\n{\r\n    string digit=\"9223372036854775807\";\r\n    for(int i=0;i<t.size();i++)\r\n    {\r\n        if(int(t[i])>int(digit[i]))\r\n        {\r\n             return true;\r\n        }\r\n        if(int(t[i])<int(digit[i]))\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n}\r\nstring s;\r\nint main()\r\n{\r\n    cin >> s;\r\n    if(s.size()==19 && ss(s)==true)\r\n    {\r\n        cout << \"BigInteger\";\r\n        return 0;\r\n    }\r\n    if(s.size()<=19 && stoll(s)<=9223372036854775807)\r\n    {\r\n         if(stoll(s)>=-128 && stoll(s)<=127)\r\n         {\r\n            cout << \"byte\";\r\n            return 0;\r\n         }\r\n         if(stoll(s)>=-32768 && stoll(s)<=32767)\r\n         {\r\n            cout << \"short\";\r\n            return 0;\r\n         }\r\n         if(stoll(s)>=-2147483648 && stoll(s)<=2147483647)\r\n         {\r\n            cout << \"int\";\r\n            return 0;\r\n         }\r\n         if(stoll(s)>=-9223372036854775808 && stoll(s)<=9223372036854775807)\r\n         {\r\n            cout << \"long\";\r\n            return 0;\r\n         }\r\n    } \r\n    else cout << \"BigInteger\";\r\n    return 0;\r\n}"
}