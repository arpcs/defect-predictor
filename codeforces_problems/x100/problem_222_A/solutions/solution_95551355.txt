{
    "id": 95551355,
    "contestId": 222,
    "creationTimeSeconds": 1602731333,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 222,
        "index": "A",
        "name": "Shooshuns and Sequence ",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1200,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    "author": {
        "contestId": 222,
        "members": [
            {
                "handle": "figuraestelar"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1347291900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 47,
    "timeConsumedMillis": 248,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\n\nusing namespace std;\n\nint main() {\n  int n,k;\n\n  cin >> n >> k;\n\n  if(n==1) {\n    cout << 0;\n    return 0;\n  }\n\n  int pos = 1;\n  int last = -1;\n  for(int i=1; i<=n; ++i) {\n    int e;\n    cin >> e;\n\n    // Explanation [*]\n    if(last != e) {\n      pos = i;\n      if(i > k) {\n        cout << -1;\n        return 0;\n      }\n    }\n\n    last = e;\n  }\n\n  cout << pos-1;\n\n  return 0;\n}\n\n\n/*\n\n  [*] Explanation\n\n  The only way we can do this is if ALL elements in the list are the same after k\n\n  3 4 1 [1] 1\n  4 1 1 [1] 1\n  1 1 1 [1] 1\n\n\n\n\n  However\n\n  3 1\n  [3] 1 1\n\n  It's impossible because we will start doing this:\n\n  Iteration     Result\n  0             3 1 1\n  1             1 1 3\n  2             1 3 1\n  3             3 1 1    <<< repeating the sequence at iteration 0\n\n\n  */\n"
}