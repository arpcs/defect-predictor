{
    "id": 69859110,
    "contestId": 222,
    "creationTimeSeconds": 1580406957,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 222,
        "index": "A",
        "name": "Shooshuns and Sequence ",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1200,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    "author": {
        "contestId": 222,
        "members": [
            {
                "handle": "klyn"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1347291900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 60,
    "memoryConsumedBytes": 49356800,
    "source": "#include<bits/stdc++.h>\r\n#define ll long long int\r\n#include <stdlib.h>\r\n#include <vector>\r\n#define pi acos(-1)\r\n#define pb push_back\r\n#define MOD 1e9+7\r\n#define highest(x) numeric_limits<x>::max()\r\n#define lowest(x) numeric_limits<x>::min()\r\n///s1.substr(1,3);///STARTING FROM INDEX 1, 3 LNEGTH SUBSTRING.\r\n///s1.find(\"adn\")///RETURNS STARTING INDEX OF THE SUBSTRING\r\n///\"adn\" IF IT EXISTS IN THE STRING S1.///\r\n///s1.find(\"adn\",int pos);///RETURNS STARTING INDEX OF THE\r\n///SUBSTRING \"adn\" SEARCHING FROM INDEX POS OF STRING s1.///\r\n///string::npos returns a garbage value if not found...\r\n///reverse(s1.begin(),s1.end())-> to reverse a string.\r\n///next_permutation(f,f+n)->f array er next permutation return korbe..\r\n///str.erase(1,2)->deletes 2 char from index 1..\r\n///for(auto i:p2)->i=p2.begin() theke p2.end() er ag porjonto..\r\n///max_element(v,v+4);->return a pointer to the max element\r\n///in a array/vector.. v from 1st element to 4th element.\r\n///same for min_element(v,v+4);\r\n#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n#define gcd(a,b) __gcd(a,b)\r\nusing namespace std;\r\n\r\n//vector<int>prime(8000000,0);\r\nvector<bool>mark(100000000,false);\r\nint prime[8000000];\r\nint nprime;\r\n\r\nvoid sieve(int n)\r\n{\r\n    int limit=sqrt(n*1.0)+1,s=0;nprime=0;\r\n    mark[1]=true;///1 if not prime.\r\n    mark[2]=false;prime[nprime++]=2;//cout<<2<<endl;\r\n    for(int i=4;i<=n;i+=2)mark[i]=true;\r\n    for(int i=3;i<=n;i+=2){\r\n        if(!mark[i]){prime[nprime++]=i;//cout<<i<<endl;\r\n        if(i<=limit){///karon limit er upor theke n porjonto not prime gula already cuta hoise.\r\n            for(int j=i*i;j<=n;j+=i*2){\r\n                mark[j]=true;\r\n            }\r\n          }\r\n        }\r\n    }\r\n    //puts(\"2\");\r\n    //cout<<nprime<<endl;\r\n    for(int i=1;i<=nprime;i+=100)cout<<prime[i-1]<<endl;\r\n    //return nprime;\r\n}\r\nll l1[100005],l2[]={1,2,3,4,5},vis[100005],s=0,m;\r\nll dx[]={1,0,-1,0};\r\nll dy[]={0,-1,0,1};\r\n\r\nll arr[200005];\r\nll tree[200005];\r\n\r\nvoid update(ll idx,ll val,ll n)\r\n{\r\n    while(idx<=n){\r\n        tree[idx]+=val;\r\n        idx+=(idx & -idx);\r\n    }\r\n}\r\n\r\nint read(ll idx)\r\n{\r\n    ll sum=0;\r\n    while(idx>0){\r\n        sum+=tree[idx];\r\n        idx-=(idx & -idx);\r\n    }\r\n    return sum;\r\n}\r\n\r\nvector<ll>v;\r\nset<ll>v2;\r\nmap<ll,ll>m2;\r\nvector<pair<ll,ll>>p2;\r\n\r\n//void dfs(int a)\r\n//{\r\n//    if(vis[a])return;\r\n//    vis[a]=1;\r\n//    if(!v[a].size()){s++;return;}\r\n//    for(int i=0;i<v[a].size();i++){\r\n//        if(!vis[v[a][i]]&&l1[a]+l1[v[a][i]]<=m)dfs(v[a][i]);\r\n//    }\r\n//    //cout<<s<<endl;\r\n//}\r\n\r\nint main()\r\n{\r\n    //freopen(\"input.in\", \"r\", stdin);\r\n    //freopen(\"output.out\", \"w\", stdout);\r\n    ll t,i,q,n,k,l,c,d,p,nl,np,a,e=0,b,x2=-1,x1=1000000005,x3=0,x4=0,x5=0,x6=0,x8=0;\r\n    double x10=0;char x11;\r\n    string s2,s3,s4,s5,s6,s7;\r\n    cin>>n>>q;\r\n    for(int i=0;i<n;i++){\r\n        cin>>a;\r\n        v.push_back(a);\r\n    }if(v.size()==1){cout<<0;return 0;}\r\n    for(int j=1;j<v.size()-1;j++){\r\n            if(v[j]!=v[j+1]){e=5;break;}\r\n        }\r\n        if(e!=5&&v[0]==v[1]){cout<<0;return 0;}\r\n        //cout<<e<<\" \"<<v[q-1]<<endl;\r\n        if(e!=5&&k==1&&v[q-1]!=v[n-1]){cout<<-1;return 0;}\r\n    cout<<1;\r\n\r\n    return 0;\r\n}\r\n"
}