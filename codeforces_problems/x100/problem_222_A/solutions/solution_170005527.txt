{
    "id": 170005527,
    "contestId": 222,
    "creationTimeSeconds": 1661713084,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 222,
        "index": "A",
        "name": "Shooshuns and Sequence ",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1200,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    "author": {
        "contestId": 222,
        "members": [
            {
                "handle": "kaljfasdjnlsdkfj"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1347291900
    },
    "programmingLanguage": "Java 11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 47,
    "timeConsumedMillis": 374,
    "memoryConsumedBytes": 0,
    "source": "//  A. Shooshuns and Sequence\r\n\r\nimport java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\n\r\npublic class Main {\r\n    static FastScanner in = new FastScanner();\r\n    static PrintWriter out = new PrintWriter(System.out);\r\n\r\n    static void solve() {\r\n        int n = in.nextInt(), k = in.nextInt();\r\n        Set<Integer> set = new HashSet<>();\r\n        int[] arr = in.nextArray(n);\r\n        for(int i=k-1;i<arr.length;i++) set.add(arr[i]);\r\n\r\n        if(set.size() > 1){\r\n            out.print(-1);\r\n        } else {\r\n            int cnt = n-k+1;\r\n            for(int i=k-2;i>=0;i--){\r\n                if(arr[i] != arr[k-1]) break;\r\n                cnt++;\r\n            }\r\n//            out.printf(\"n: %d, cnt: %d, arr[k-1]: %d, k: %d%n\", n, cnt, arr[k-1],k);\r\n            out.print(n-cnt);\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n//        int T = fs.nextInt();\r\n        int T = 1;\r\n        for (int i = 0; i < T; i++) {\r\n            solve();\r\n        }\r\n\r\n        out.close();\r\n    }\r\n\r\n    static class FastScanner {\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n        StringTokenizer st = new StringTokenizer(\"\");\r\n\r\n        String next() {\r\n            while (!st.hasMoreTokens())\r\n                try {\r\n                    st = new StringTokenizer(br.readLine());\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            return st.nextToken();\r\n        }\r\n\r\n        int nextInt() {\r\n            return Integer.parseInt(next());\r\n        }\r\n\r\n        int[] nextArray(int n) {\r\n            int[] a = new int[n];\r\n            for (int i = 0; i < n; i++) a[i] = nextInt();\r\n            return a;\r\n        }\r\n\r\n        long nextLong() {\r\n            return Long.parseLong(next());\r\n        }\r\n    }\r\n}\r\n"
}