{
    "id": 145900968,
    "contestId": 1627,
    "creationTimeSeconds": 1644541714,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "thilio"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 17612800,
    "source": "#include \"bits/stdc++.h\"\nusing namespace std;\n\n#define pb push_back\n#define mp make_pair\n#define fst first\n#define snd second\n\n#define fr(i,n) \tfor(int i=0;i<n;i++)\n#define frr(i,n)\tfor(int i=1;i<=n;i++)\n\n#define ms(x,i)\tmemset(x,i,sizeof(x))\n#define endl '\\n'\n#define dbg(x)\tcout << #x << \" = \" << x << endl\n#define all(x)\tx.begin(),x.end()\n\n#define gnl cout << endl\n#define olar cout << \"olar\" << endl\n#define fastio ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\n\ntypedef long long int ll;\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\ntypedef vector<pii> vii;\ntypedef pair<ll,ll> pll;\n\nconst int INF = 0x3f3f3f3f;\nconst ll llINF = 0x3f3f3f3f3f3f3f;\nconst int MOD = 1e9+7;\n\nvector<ll> room[100100];\n\nmap<ll, ll> dp[100100];\n\nmap<ll, pii> adj[100100];\nmap<ll, ll> h[100100];\nll x[100100];\n\nint n, m, k;\n\nvoid reset(){\n\tfrr(i, n){\n\t\troom[i].clear();\n\t\tdp[i].clear();\n\t\tadj[i].clear();\n\t\th[i].clear();\n\t}\n}\nint main(){\n\n\tfastio;\n\tint T;\n\tcin >> T;\n\twhile(T--){\n\t\tcin >> n >> m >> k;\n\t\treset();\n\n\t\tfrr(i, n) cin >> x[i];\n\n\t\tfr(i, k){\n\t\t\tint a, b, c, d, he;\n\t\t\tcin >> a >> b >> c >> d >> he;\n\t\t\tadj[a][b] = {c, d};\n\t\t\th[a][b] = he;\n\n\t\t\troom[a].pb(b);\n\t\t\troom[c].pb(d);\n\n\t\t\tdp[a][b] = llINF;\n\t\t\tdp[c][d] = llINF;\n\t\t}\n\n\t\tif(room[n].empty() || room[n][room[n].size() - 1] != m) room[n].pb(m);\n\t\tif(room[1].empty() || room[1][0] != 1) room[1].pb(1);\n\n\t\tdp[n][m] = llINF;\n\t\tdp[1][1] = 0;\n\n\t\tfrr(i, n) sort(all(room[i]));\n\n\n\n\t\tfor(ll i = 1; i <= n; i++){\n\t\t\tfor(ll j = 1; j < room[i].size(); j++){\n\t\t\t\tdp[i][room[i][j]] = min(dp[i][room[i][j]], dp[i][room[i][j - 1]] + x[i]*(room[i][j] - room[i][j - 1]));\n\t\t\t}\n\t\t\t//dbg(dp[1][1]);\n\t\t\tfor(ll j = (ll)(room[i].size()) - 2; j >= 0; j--){\n\t\t\t\tdp[i][room[i][j]] = min(dp[i][room[i][j]], dp[i][room[i][j + 1]] + x[i]*(room[i][j + 1] - room[i][j]));\t\n\t\t\t}\n\t\t\t//dbg(dp[1][1]);\n\n\t\t\tfor(auto y: room[i]){\n\t\t\t\tif(adj[i].count(y)){\n\t\t\t\t\tdp[adj[i][y].fst][adj[i][y].snd] = min(dp[adj[i][y].fst][adj[i][y].snd], dp[i][y] - h[i][y]);\n\t\t\t\t}\t\n\t\t\t}\t\t\t\n\t\t}\n\n\t\tfor(ll i = 1; i <= n; i++){\n\t\t\tfor(auto x: room[i]){\n\t\t\t//\tcout << i << ' ' << x << ' ' << dp[i][x] << endl;\n\t\t\t}\n\t\t}\n\n\t\tif(dp[n][m] > 1e16){\n\t\t\tcout << \"NO ESCAPE\" << endl;\n\t\t}\n\t\telse{\n\t\t\tcout << dp[n][m] << endl;\n\t\t}\n\t}\n\n}\n"
}