{
    "id": 184302381,
    "contestId": 1627,
    "creationTimeSeconds": 1670487608,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "_RedWine_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 608,
    "memoryConsumedBytes": 59494400,
    "source": "// #define _CRT_SECURE_NO_WARNINGS\r\n#include <bits/stdc++.h>\r\n// #include \"temp.cpp\"\r\n#include <cstdio>\r\nusing namespace std;\r\n \r\n#ifndef ONLINE_JUDGE\r\n#define dbg(x) cerr << #x <<\" \"; print(x); cerr << endl;\r\n#else\r\n#define dbg(x)\r\n#endif\r\n \r\n#define sz(x) (int((x).size()))\r\n#define len(x) (int)x.length()\r\n#define all(x) (x).begin(), (x).end()\r\n#define rall(x) (x).rbegin(), (x).rend()\r\n#define clr(x) x.clear()\r\n#define uniq(x) x.resize(unique(all(x)) - x.begin());\r\n#define blt __builtin_popcount\r\n \r\n#define pb push_back\r\n#define pf push_front\r\n#define popf pop_front\r\n#define popb pop_back\r\n \r\nvoid print(long long t) {cerr << t;}\r\nvoid print(int t) {cerr << t;}\r\nvoid print(string t) {cerr << t;}\r\nvoid print(char t) {cerr << t;}\r\nvoid print(double t) {cerr << t;}\r\nvoid print(long double t) {cerr << t;}\r\nvoid print(unsigned long long t) {cerr << t;}\r\n \r\ntemplate <class T> void print(set <T> v);\r\ntemplate <class T> void print(vector <T> v);\r\ntemplate <class T> void print(multiset <T> v);\r\ntemplate <class T, class V> void print(map <T, V> v);\r\ntemplate <class T, class V> void print(pair <T, V> p);\r\ntemplate <class T, class V> void print(T v[],V n) {cerr << \"[\"; for(int i = 0; i < n; i++) {print(v[i]); cerr << \" \"; } cerr << \"]\";}\r\ntemplate <class T, class V> void print(pair <T, V> p) {cerr << \"{\"; print(p.first); cerr << \",\"; print(p.second); cerr << \"}\";}\r\ntemplate <class T> void print(vector <T> v) {cerr << \"[ \"; for (T i : v) {print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void print(deque<T> v) {cerr << \"[ \"; for (T i : v) {print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void print(set <T> v) {cerr << \"[ \"; for (T i : v) {print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void print(unordered_map<T, V> v) {cerr << \"[ \"; for (auto i : v) {print(i); cerr << \" \";} cerr << \"]\";}\r\n \r\n#include <ext/pb_ds/assoc_container.hpp>\r\nusing namespace __gnu_pbds;\r\n#define nl '\\n'\r\n \r\n// for grid problems\r\nint dx[8] = {-1,0,1,0,1,-1,1,-1};\r\nint dy[8] = {0,1,0,-1,1,1,-1,-1};\r\n \r\n// for random generations\r\nmt19937 myrand(131);\r\n \r\n// lowest / (1 << 17) >= 1e5 / (1 << 18) >= 2e5 / (1 << 21) >= 1e6\r\nvoid fastIO() {\r\n  ios_base::sync_with_stdio(false);\r\n  cin.tie(nullptr); cout.tie(nullptr);\r\n}\r\n \r\n// file in/out\r\nvoid setIO(string str = \"\") {\r\n  // fastIO();\r\n \r\n  if (str != \"\" && str != \"input\") {\r\n    freopen((str + \".in\").c_str(), \"r\", stdin);\r\n    freopen((str + \".out\").c_str(), \"w\", stdout);\r\n  }\r\n \r\n  if(str == \"input\") {\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n  }\r\n}\r\n// Indexed Set\r\ntemplate <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\nlong long inf = 1e15;\r\nconst int N = 2e5 + 10, M = 1e6 + 100;\r\nvector<pair<long long, long long>> to_add[M], to_del[M];\r\nlong long x[N], h[N];\r\nlong long n, m, k; \r\n\r\nlong long a[N], b[N], c[N], d[N];\r\nlong long answ[N];\r\n\r\nbool vis[N];\r\n\r\n// void print(long long x) {\r\n//   if (x < 0) {\r\n//     putchar('-');\r\n//     x = -x;\r\n//   }\r\n//   if (x > 9) print(x / 10);\r\n//   putchar(x % 10 + '0');\r\n// }\r\n\r\nvoid solve_() {\r\n  cin >> n >> m >> k;\r\n  for(int i = 1; i <= n; i++) {\r\n    cin >> x[i];\r\n  }\r\n\r\n  for(int i = 1; i <= k; i++) {\r\n    cin >> a[i] >> b[i] >> c[i] >> d[i] >> h[i];\r\n    to_add[a[i]].push_back({b[i], i});\r\n    to_del[c[i]].push_back({d[i], i});\r\n    answ[i] = inf;\r\n  }\r\n\r\n  for(auto i: to_add[1]) {\r\n    answ[i.second] = (i.first - 1) * x[1];\r\n  }\r\n  to_add[1].clear();\r\n  to_del[1].clear();\r\n\r\n  for(int i = 2; i < n; i++) {\r\n    if(to_add[i].empty() || to_del[i].empty()) {\r\n      to_add[i].clear();\r\n      to_del[i].clear();\r\n      continue;\r\n    }\r\n\r\n    priority_queue<pair<long long, pair<long long, long long>>> q;\r\n    for(auto j: to_add[i]) {\r\n      vis[j.second] = false;\r\n    }\r\n\r\n    for(auto j: to_del[i]) {\r\n      to_add[i].push_back(j);\r\n      if(answ[j.second] == inf) continue;\r\n      vis[j.second] = false;\r\n      answ[j.second] -= h[j.second];\r\n      q.push({-answ[j.second], {j.first, j.second}});\r\n    } \r\n    sort(all(to_add[i]));\r\n    // dbg(to_add[i])\r\n\r\n    while(!q.empty()) {\r\n      auto u = q.top();\r\n      q.pop();\r\n\r\n      if(vis[u.second.second]) {\r\n        continue;\r\n      }\r\n      vis[u.second.second] = true;\r\n\r\n      auto it = upper_bound(all(to_add[i]), make_pair(u.second.first, u.second.second));\r\n      auto it_ = lower_bound(all(to_add[i]), make_pair(u.second.first, u.second.second));\r\n\r\n      if(it != to_add[i].end()) {\r\n        long long dist = it->first - u.second.first;\r\n        dist *= x[i];\r\n        answ[it->second] = min(answ[it->second], -u.first + dist);\r\n        q.push({-answ[it->second], {it->first, it->second}});\r\n      }\r\n\r\n      if(it_ != to_add[i].begin()) {\r\n        it_ = prev(it_);\r\n        long long dist = u.second.first - it_->first;\r\n        dist *= x[i];\r\n        answ[it_->second] = min(answ[it_->second], -u.first + dist);\r\n        q.push({-answ[it_->second], {it_->first, it_->second}});\r\n      }\r\n    }\r\n\r\n    to_add[i].clear();\r\n    to_del[i].clear();\r\n  }\r\n\r\n  long long pat = inf;\r\n  for(auto i: to_del[n]) {\r\n    if(answ[i.second] == inf) continue;\r\n    answ[i.second] -= h[i.second];\r\n    pat = min(pat, answ[i.second] + x[n] * (m - i.first));\r\n  }\r\n\r\n  if(pat == inf) {\r\n    cout << \"NO ESCAPE\" << endl;\r\n  } else {\r\n    // print(pat);\r\n    cout << pat << endl;\r\n  }\r\n\r\n  to_add[n].clear();\r\n  to_del[n].clear();\r\n} \r\n \r\nint main() {\r\n  setIO();\r\n \r\n  auto solve = [&](int test_case)-> void {\r\n    while(test_case--) {\r\n      solve_();\r\n    }\r\n  };\r\n \r\n  int test_cases = 1;\r\n  cin >> test_cases;\r\n  solve(test_cases);\r\n \r\n  return 0;\r\n}  \r\n"
}