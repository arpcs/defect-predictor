{
    "id": 146339662,
    "contestId": 1627,
    "creationTimeSeconds": 1644836741,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "hopelessRomantic"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 343,
    "memoryConsumedBytes": 31232000,
    "source": "#include \"bits/stdc++.h\"\r\nusing namespace std;\r\n\r\n// #define int             long long\r\n#define ld              long double\r\n#define pb              push_back\r\n#define P               pair<int,int>\r\n#define F               first\r\n#define S               second\r\n#define inf             1e18\r\n#define mod             1000000007\r\n#define vi              vector<int>\r\n#define ps(x,y)         fixed<<setprecision(y)<<x\r\n#define pqb             priority_queue<int>\r\n#define pqs             priority_queue<int,vi,greater<int> >\r\n#define FIO             ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)\r\n\r\nconst int N = 100005;\r\n\r\nint32_t main() {\r\n\r\n    FIO;\r\n\r\n    int t; cin >> t; while (t--)\r\n    {\r\n        int i, j, k, n, m, ans = 0, cnt = 0, sum = 0;\r\n        cin >> n >> m >> k;\r\n\r\n        vi healthDecrease(n + 1);\r\n        for (i = 1; i <= n; i++) {\r\n            cin >> healthDecrease[i];\r\n            healthDecrease[i] = -healthDecrease[i];\r\n        }\r\n\r\n        map<P, vector<vi>> mp;\r\n        vector<vi> ladders(k, vi(5));\r\n\r\n        vector<vi> events;\r\n        for (i = 0; i < k; i++) {\r\n            for (j = 0; j < 5; j++)\r\n                cin >> ladders[i][j];\r\n            mp[ {ladders[i][0], ladders[i][1]}].pb({ladders[i][2], ladders[i][3], ladders[i][4]});\r\n\r\n            events.pb({ladders[i][0], ladders[i][1], 1});\r\n            events.pb({ladders[i][2], ladders[i][3], 0});\r\n        }\r\n        events.pb({1, 1, 0});\r\n        events.pb({n, m, 0});\r\n        sort(events.begin(), events.end());\r\n\r\n        cnt = events.size();\r\n\r\n        vector<long long> dp(cnt, -inf);\r\n        dp[0] = 0;\r\n\r\n        vi floor_ladder[n + 1];\r\n        map<P, int> mp2;\r\n        for (i = 0; i < cnt; i++) {\r\n            floor_ladder[(events[i][0])].pb(i);\r\n            if (events[i][2] == 0)\r\n                mp2[ {events[i][0], events[i][1]}] = i;\r\n        }\r\n\r\n\r\n\r\n        for (i = 1; i <= n; i++) {\r\n            int sz = floor_ladder[i].size();\r\n            long long mx = -inf;\r\n            for (int j = 0; j < sz; j++) {\r\n                int ind = floor_ladder[i][j];\r\n                int room = events[ind][1];\r\n                dp[ind] = max(dp[ind], room * healthDecrease[i] + mx);\r\n                mx = max(mx, dp[ind] - room * healthDecrease[i]);\r\n            }\r\n            mx = -inf;\r\n            for (int j = sz - 1; j >= 0; j--) {\r\n                int ind = floor_ladder[i][j];\r\n                int room = events[ind][1];\r\n                dp[ind] = max(dp[ind], mx - room * healthDecrease[i]);\r\n                mx = max(mx, dp[ind] + room * healthDecrease[i]);\r\n            }\r\n\r\n            for (int j = 0; j < sz; j++) {\r\n                if (events[floor_ladder[i][j]][2] == 1) {\r\n                    int ind = floor_ladder[i][j];\r\n                    int room = events[ind][1];\r\n\r\n                    for (auto v : mp[ {i, room}]) {\r\n                        int next_ind = mp2[ {v[0], v[1]}];\r\n                        dp[next_ind] = max(dp[next_ind], dp[ind] + v[2]);\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        if (dp[cnt - 1] < -1e17) {\r\n            cout << \"NO ESCAPE\\n\";\r\n            continue;\r\n        }\r\n        cout << -dp[cnt - 1] << \"\\n\";\r\n\r\n\r\n    }\r\n    return 0;\r\n}"
}