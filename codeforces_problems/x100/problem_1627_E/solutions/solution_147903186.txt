{
    "id": 147903186,
    "contestId": 1627,
    "creationTimeSeconds": 1646014171,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "hero123dk"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 8806400,
    "source": "// ConsoleApplication10.cpp : \u6b64\u6587\u4ef6\u5305\u542b \"main\" \u51fd\u6570\u3002\u7a0b\u5e8f\u6267\u884c\u5c06\u5728\u6b64\u5904\u5f00\u59cb\u5e76\u7ed3\u675f\u3002\r\n//\r\n\r\n#include <iostream>\r\n#include <algorithm>\r\n#define ll long long\r\nusing namespace std;\r\nconst int maxn = 2e5;\r\n\r\nint n, m, k, t;\r\nll  dp[maxn],  x[maxn],  wsl[maxn];\r\n\r\nint read() {\r\n\tint k = 0, f = 1;\r\n\tchar c = getchar();\r\n\twhile (c > '9' || c < '0') {\r\n\t\tif (c == '-') {\r\n\t\t\tf = -1;\r\n\t\t}\r\n\t\tc = getchar();\r\n\t}\r\n\twhile (c <= '9' && c >= '0') {\r\n\t\tk = k * 10 + c - '0';\r\n\t\tc = getchar();\r\n\t}\r\n\treturn k * f;\r\n}\r\n\r\nll readl() {\r\n\tll k = 0, f = 1;\r\n\tchar c = getchar();\r\n\twhile (c > '9' || c < '0') {\r\n\t\tif (c == '-') {\r\n\t\t\tf = -1;\r\n\t\t}\r\n\t\tc = getchar();\r\n\t}\r\n\twhile (c <= '9' && c >= '0') {\r\n\t\tk = k * 10 + c - '0';\r\n\t\tc = getchar();\r\n\t}\r\n\treturn k * f;\r\n}\r\n\r\nstruct edge {\r\n\tint a, b, c, d, h;\r\n}e[maxn];\r\n\r\nint min(int x, int y) {\r\n\treturn x < y ? x : y;\r\n}\r\n\r\nbool comp1(edge e1, edge e2) {\r\n\treturn e1.a < e2.a;\r\n}\r\n\r\n\r\n\r\nint main()\r\n{\r\n\tt = read();\r\n\twhile (t--) {\r\n\t\tn = read(); m = read(); k = read();\r\n\t\tfor (int i = 1; i <= n; ++i) {\r\n\t\t\tx[i] = readl();\r\n\t\t\twsl[i] = 0;\r\n\t\t}\r\n\t\tfor (int i = 1; i <= k; ++i) {\r\n\t\t\te[i].a = read();\r\n\t\t\te[i].b = read();\r\n\t\t\te[i].c = read();\r\n\t\t\te[i].d = read();\r\n\t\t\te[i].h = read();\r\n\r\n\t\t}\r\n\t\tsort(e + 1, e + k + 1, comp1);\r\n\t\tfor (int i = 1; i <= k; ++i) {\r\n\t\t\tdp[i] = 1e16;\r\n\t\t}\r\n\t\tint ss = -1;\r\n\t\tfor (int i = 1; i <= k; ++i) {\r\n\t\t\tif (ss != e[i].a) {\r\n\t\t\t\tss = e[i].a;\r\n\t\t\t\twsl[ss] = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\te[0].c = e[0].d = 1;\r\n\t\te[0].h = 0;\r\n\t\tfor (int i = 0; i <= k; ++i) {\r\n\t\t\tfor (int j = wsl[e[i].c]; e[j].a == e[i].c; ++j) {\r\n\t\t\t\tdp[j] = min(dp[j], dp[i] - e[i].h + abs(e[i].d - e[j].b) * x[e[i].c]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tll ans = 1e16, ans2 = 1e16;\r\n\t\tfor (int i = 1; i <= k; ++i) {\r\n\t\t\tif (e[i].c == n) {\r\n\t\t\t\tans = min(ans, dp[i] - e[i].h + (m - e[i].d) * x[n]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (ans == ans2) {\r\n\t\t\tcout << \"NO ESCAPE\" << endl;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcout << ans << endl;\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n}\r\n\r\n\r\n"
}