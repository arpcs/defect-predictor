{
    "id": 192989271,
    "contestId": 1627,
    "creationTimeSeconds": 1675974999,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "Archaeopteryx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 312,
    "memoryConsumedBytes": 27443200,
    "source": "#include<bits/stdc++.h>\r\n#define int long long\n#define x first\n#define y second\n#define pb push_back\nusing namespace std;\nusing pii=pair <int,int>;\nvoid solve(){\nint n,m,k;\ncin>>n>>m>>k;\nint X[n+1];\nfor (int i=1; i<=n; i++) cin>>X[i];\nvector <pair <pii,pii> > v[n+1];\nmap <int,int> mp[n+1];\nwhile (k--){\nint a,b,c,d,h;\ncin>>a>>b>>c>>d>>h;\nv[a].pb({{c,d},{b,-h}});\nmp[a][b]=1e18;\nmp[c][d]=1e18;\n}\nmp[1][1]=0;\nmp[n][m]=1e18;\nfor (int i=1; i<=n; i++){\nint prvidx=-1,prvval=0;\nfor (auto it=mp[i].begin(); it!=mp[i].end(); it++){\nif (prvidx!=-1) it->y=min(it->y,prvval+X[i]*(it->x-prvidx));\nprvidx=it->x;\nprvval=it->y;\n}\nprvidx=-1; prvval=0;\nfor (auto it=mp[i].rbegin(); it!=mp[i].rend(); it++){\nif (prvidx!=-1) it->y=min(it->y,prvval+X[i]*(prvidx-it->x));\nprvidx=it->x;\nprvval=it->y;\n}\nfor (auto j:v[i]){\nmp[j.x.x][j.x.y]=min(mp[j.x.x][j.x.y],mp[i][j.y.x]+j.y.y);\n}\n}\nif (mp[n][m]>=1e16) cout<<\"NO ESCAPE\\n\";\nelse cout<<mp[n][m]<<'\\n';\n}\nmain(){\nios_base::sync_with_stdio(false); cin.tie(NULL);\nint T;\ncin>>T;\nfor (int i=0; i<T; i++){\nsolve();\n}\n}"
}