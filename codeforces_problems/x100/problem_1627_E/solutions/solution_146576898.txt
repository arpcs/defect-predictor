{
    "id": 146576898,
    "contestId": 1627,
    "creationTimeSeconds": 1644979520,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "Harold01"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 13414400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nlong long x[100005];\r\nstruct node{\r\n\tint tp,col,row,heal;\r\n}l[400005];\r\nvector<int>s[100005],e[100005];\r\nlong long f[400005];\r\nint tag[100005];\r\nbool cmp(int x,int y)\r\n{\r\n\treturn l[x].col<l[y].col;\r\n}\r\nvoid update(int x,int len,int u)\r\n{\r\n\twhile(x<=len)\r\n\t{\r\n\t\ttag[x]+=u;\r\n\t\tx+=x&(-x);\r\n\t}\r\n}\r\nint get(int x)\r\n{\r\n\tint s=0;\r\n\twhile(x>0)\r\n\t{\r\n\t\ts+=tag[x];\r\n\t\tx-=x&(-x);\r\n\t}\r\n\treturn s;\r\n}\r\nint main()\r\n{\r\n\tint t,n,m,k,i,j;\r\n\tios::sync_with_stdio(false);\r\n\tcin>>t;\r\n\tmemset(tag,0,sizeof(tag));\r\n\twhile(t--)\r\n\t{\r\n\t\tcin>>n>>m>>k;\r\n\t\tint flag=0,flaq=0;\r\n\t\tfor(i=1;i<=n;i++) \r\n\t\t{\r\n\t\t\tcin>>x[i];\r\n\t\t\ts[i].clear();e[i].clear();\r\n\t\t}\r\n\t\tfor(i=0;i<=2*k;i++) f[i]=1e18;\r\n\t\tfor(i=1;i<=k;i++)\r\n\t\t{\r\n\t\t\tint a,b,c,d,h;\r\n\t\t\tcin>>a>>b>>c>>d>>h;\r\n\t\t\tl[i*2-2].col=b;l[i*2-2].heal=h;\r\n\t\t\tl[i*2-1].col=d;l[i*2-1].heal=h;\r\n\t\t\ts[a].push_back(i*2-2);e[c].push_back(i*2-1);\r\n\t\t}\r\n\t\tfor(i=1;i<=n;i++) sort(s[i].begin(),s[i].end(),cmp);\r\n\t\tfor(i=1;i<=n;i++) sort(e[i].begin(),e[i].end(),cmp);\r\n\t\tfor(i=0;i<s[1].size();i++) f[s[1][i]^1]=(l[s[1][i]].col-1)*x[1]-l[s[1][i]].heal;\r\n\t\tvector<int>ch;\r\n\t\tfor(i=2;i<=n;i++)\r\n\t\t{\r\n\t\t\tif(e[i].size()==0||s[i].size()==0) continue;\r\n\t\t\tch.clear();\r\n\t\t\tfor(j=1;j<e[i].size();j++)\r\n\t\t\t{\r\n\t\t\t\tint ll=0,mid,rr=s[i].size()-1,ans=s[i].size();\r\n\t\t\t\twhile(ll<=rr)\r\n\t\t\t\t{\r\n\t\t\t\t\tmid=(rr-ll)/2+ll;\r\n\t\t\t\t\tint num=get(mid);\r\n\t\t\t\t\tif(f[e[i][num]]+x[i]*abs(l[s[i][mid]].col-l[e[i][num]].col)>f[e[i][j]]+x[i]*abs(l[s[i][mid]].col-l[e[i][j]].col))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trr=mid-1;ans=min(mid,ans);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse ll=mid+1;\r\n\t\t\t\t}\r\n\t\t\t\tif(ans!=s[i].size())\r\n\t\t\t\t{\r\n\t\t\t\t\tupdate(ans+1,s[i].size(),1);ch.push_back(ans+1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(j=0;j<s[i].size();j++)\r\n\t\t\t{\r\n\t\t\t\tf[s[i][j]^1]=f[e[i][get(j+1)]]+x[i]*abs(l[s[i][j]].col-l[e[i][get(j+1)]].col)-l[s[i][j]].heal;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor(j=0;j<ch.size();j++) update(ch[j],s[i].size(),-1);\r\n\t\t}\r\n\t\tlong long r=1e18;\r\n\t\tfor(i=0;i<e[n].size();i++) if(f[e[n][i]]!=1e18) r=min(r,f[e[n][i]]+abs(m-l[e[n][i]].col)*x[n]);\r\n\t\tif(r!=1e18) cout<<r<<endl; \r\n\t\telse cout<<\"NO ESCAPE\\n\";\r\n\t}\r\n\treturn 0;\r\n}\r\n"
}