{
    "id": 223981146,
    "contestId": 1627,
    "creationTimeSeconds": 1695102415,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "LP_bonney"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 204800,
    "source": "typedef long long ll;\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define rep(i, a, b) for (int i = (a); i < (b); i++)\r\n#define all(cont) cont.begin(), cont.end()\r\n#define ms(a) memset(a, 0, sizeof(a))\r\n#define pb push_back\r\n\t\r\ntemplate <class T> void oa(const vector<T>& a) { for (int i = 0; i < a.size(); ++i) cout << a[i] << \" \\n\"[i + 1 == a.size()]; }\r\ntemplate <class T> void dedup(vector<T>& v) { sort(v.begin(), v.end()); v.erase(unique(v.begin(), v.end()), v.end()); }\r\ntypedef long long ll;\r\ntypedef array<ll, 2> A;\r\nll mod = 1e4 + 7;\r\n\r\nvoid add(ll &x, ll a) {\r\n\tx += a;\r\n\tif (x >= mod) x -= mod;\r\n}\r\nvoid sub(ll& x, ll a) {\r\n\tx = ((x - a) % mod + mod) % mod;\r\n}\r\n\r\nint fastpow(int a, int b, int m){\r\n\tint ans = 1;\r\n\twhile(b){\r\n\t\tif (b&1) ans = (ans*a) % m;\r\n\t\tb /= 2;\r\n\t\ta = (a*a) % m;\r\n\t}\r\n\treturn ans;\r\n}\r\n\r\nll lcm(ll a, ll b) {\r\n    return (a / __gcd(a, b)) * b;\r\n}\r\n\r\n// ###################### CODE START ######################\r\n\r\nvoid solve() {\r\n\tint n, m; cin >> n >> m;\r\n\tint k; cin >> k;\r\n\tvector<int> arr(n + 1);\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tcin >> arr[i];\r\n\t}\r\n\t\r\n\tvector<vector<array<ll, 4>>> edges(n + 1);\r\n\tvector<vector<ll>> ladders(n + 1);\r\n\tladders[n].pb(m);\r\n\tfor (int i = 0; i < k; i++) {\r\n\t\tll a, b, c, d, h; cin >> a >> b >> c >> d >> h;\r\n\t\tedges[c].pb({d, a, b, h});\r\n\t\tladders[c].pb(d);\r\n\t\tladders[a].pb(b);\r\n\t}\r\n\t\r\n\tvector<vector<ll>> dp(n + 1);\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tdedup(ladders[i]);\r\n\t\tdp[i].resize(ladders[i].size(), -1e17);\r\n\t}\r\n\t\r\n\tint fine = 0;\r\n\tfunction<ll(int, int)> dfs;\r\n\tdfs = [&](int i, int id) {\r\n\t\tif (dp[i][id] != -1e17) {\r\n\t\t\treturn dp[i][id];\r\n\t\t}\r\n\t\t\r\n\t\tif (i == 1) {\r\n\t\t\tfine = 1;\r\n\t\t\treturn abs(ladders[i][id] - 1) * arr[1];\r\n\t\t}\r\n\t\t\r\n\t\tint t = ladders[i].size();\r\n\t\t\r\n\t\tfor (int j = t - 1; j > 0; j--) {\r\n            dp[i][j - 1] = min(dp[i][j - 1], arr[i] * (ladders[i][j] - ladders[i][j - 1]));\r\n        }\r\n\t\tfor (int j = 0; j + 1 < t; j++) {\r\n            dp[i][j + 1] = min(dp[i][j + 1], arr[i] * (ladders[i][j + 1] - ladders[i][j]));\r\n        }\r\n\t\t\r\n\t\tll an = 1e17;\r\n\t\tfor (auto& [b, c, d, h] : edges[i]) {\r\n\t\t\tll needed = abs(ladders[i][id] - b) * arr[i];\r\n\t\t\tint _d = lower_bound(all(ladders[c]), d) - ladders[c].begin();\r\n\t\t\tan = min(an, needed - h + dfs(c, _d));\r\n\t\t}\r\n\t\treturn dp[i][id] = an;\r\n\t};\r\n\tll ans = dfs(n, (int)ladders[n].size() - 1);\r\n\tcout << (fine ? to_string(ans) : \"NO ESCAPE\") << endl;\r\n}\r\n\r\n\r\nint main() {\r\n\tios_base::sync_with_stdio(0);\r\n\tcin.tie(nullptr);\r\n\r\n\tint q;\r\n\tcin >> q;\r\n\twhile (q--) {\r\n\t\tsolve();\r\n\t}\r\n}"
}