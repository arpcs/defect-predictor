{
    "id": 145146006,
    "contestId": 1627,
    "creationTimeSeconds": 1643989235,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "Sahaj_08"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 5836800,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n#define fastio() ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n#define ll long long int\n#define f first\n#define s second\n#define mp make_pair\n#define pb push_back\n#define inf 1e9\n#define pi 3.1415926536\n#define mod 1000000007\n#define fr(i,a,b,in) for(int i=a;i<b;i+=in)\n#define frn(i,a,b,dc) for(int i=a;i>=b;i-=dc)\n#define test(t) int t; cin>>t; while(t--)\n\nclass lad{\npublic:\n\tll a,b,c,d,h;\n\tll cur;\n};\n\nint main()\n{\n\tfastio();\n\ttest(t){\n\t\tint n,m,k;\n\t\tcin>>n>>m>>k;\n\t\tll x[n];\n\t\tfr(i,0,n,1) cin>>x[i];\n\t\tvector<lad*> in[n],out[n];\n\t\tfr(i,0,k,1){\n\t\t\tlad* l = new lad();\n\t\t\tcin>>l->a>>l->b>>l->c>>l->d>>l->h;\n\t\t\tl->a--; l->b--; l->c--; l->d--;\n\t\t\tl->cur=1e17;\n\t\t\tin[l->c].pb(l);\n\t\t\tout[l->a].pb(l);\n\t\t}\n\t\tfor(auto l:out[0]){\n\t\t\tl->cur = (l->b*x[0]) - l->h;\n\t\t\t// cout<<l->cur<<endl;\n\t\t}\n\t\t// fr(i,0,n,1) cout<<in[i].size()<<' ';\n\t\tfr(i,1,n-1,1){\n\t\t\tif(in[i].size() == 0) continue;\n\t\t\tll pre[m],suf[m];\n\t\t\tfr(j,0,m,1){\n\t\t\t\tpre[j]=1e17; suf[j]=1e17;\n\t\t\t}\n\t\t\tfor(auto l:in[i]){\n\t\t\t\tif(l->cur == 1e17) continue;\n\t\t\t\tpre[l->d]=l->cur;\n\t\t\t\tsuf[l->d]=l->cur;\n\t\t\t}\n\t\t\tint j=0;\n\t\t\twhile(j<m && pre[j]==1e17) j++;\n\t\t\tif(j==m) continue;\n\t\t\tll mn=pre[j]; j++;\n\t\t\twhile(j<m){\n\t\t\t\tmn+=x[i];\n\t\t\t\tmn=min(mn,pre[j]);\n\t\t\t\tpre[j]=mn;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tj=m-1;\n\t\t\twhile(j>=0 && suf[j]==1e17) j--;\n\t\t\tmn=suf[j]; j--;\n\t\t\twhile(j>=0){\n\t\t\t\tmn+=x[i];\n\t\t\t\tmn=min(mn,suf[j]);\n\t\t\t\tsuf[j]=mn;\n\t\t\t\tj--;\n\t\t\t}\n\t\t\tfor(auto l:out[i]){\n\t\t\t\tl->cur = min(pre[l->b],suf[l->b]) - l->h;\n\t\t\t}\n\t\t}\n\t\tll ans=1e17;\n\t\tfor(auto l:in[n-1]){\n\t\t\tans=min(ans, l->cur + x[n-1]*(m-1- l->d));\n\t\t}\n\t\tif(ans != 1e17) cout<<ans<<endl;\n\t\telse cout<<\"NO ESCAPE\"<<endl;\n\t}\n}"
}