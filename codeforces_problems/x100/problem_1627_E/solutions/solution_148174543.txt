{
    "id": 148174543,
    "contestId": 1627,
    "creationTimeSeconds": 1646292933,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "CWJ_123"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=1e5+10;\r\n\r\nstruct node{\r\n\tint loc,x,y,w;\r\n\tnode(int tloc,int tx,int ty,int tw){\r\n\t\tloc=tloc,x=tx,y=ty,w=tw;\r\n\t}\r\n};\r\nint T,n,m,k,a[N];\r\nvector<node>b[N];\r\ngp_hash_table<pair<int,int>,long long>dis,vis;\r\nlong long inf=1e18;\r\n\r\nvoid spfa(int sx,int sy){\r\n    queue<pair<int,int> >q;\r\n\tq.push(make_pair(sx,sy));\r\n\twhile(!q.empty()){\r\n\t\tint nowx=q.front().first,nowy=q.front().second;\r\n\t\tq.pop();\r\n\t\tvis[make_pair(nowx,nowy)]=0;\r\n\t\tfor(auto [loc,x,y,w]:b[nowx]){\r\n\t\t\tif(dis[make_pair(x,y)]>dis[make_pair(nowx,nowy)]-w+1ll*abs(nowy-loc)*a[nowx]){\r\n\t\t\t\tdis[make_pair(x,y)]=dis[make_pair(nowx,nowy)]-w+1ll*abs(nowy-loc)*a[nowx];\r\n\t\t\t\tif(vis[make_pair(x,y)]==0){\r\n\t\t\t\t\tvis[make_pair(x,y)]=1;\r\n\t\t\t\t\tq.push(make_pair(x,y));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tlong long ans=inf;\r\n\tfor(int j=1;j<=m;j++){\r\n\t\tans=min(ans,dis[make_pair(n,j)]+1ll*abs(j-m)*a[n]);\r\n\t}\r\n\tif(ans==inf)cout<<\"NO ESCAPE\"<<'\\n';\r\n\telse cout<<ans<<\"\\n\";\r\n}\r\nint main(){\r\n\tios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n\tint u1,v1,u2,v2,w;\r\n\tcin>>T;\r\n\twhile(T--){\r\n\t\tcin>>n>>m>>k;\r\n\r\n\t\tdis.clear();\r\n\t\tvis.clear();\r\n\t\tfor(int i=1;i<=n;i++)b[i].clear();\r\n\r\n\t\tfor(int i=1;i<=n;i++)cin>>a[i];\r\n\t\tfor(int i=1;i<=k;i++){\r\n\t\t\tcin>>u1>>v1>>u2>>v2>>w;\r\n\t\t\tb[u1].push_back(node(v1,u2,v2,w));\r\n\t\t\tdis[make_pair(u1,v1)]=inf;\r\n\t\t\tdis[make_pair(u2,v2)]=inf;\r\n\t\t}\r\n\t\tfor(int j=1;j<=m;j++)dis[make_pair(n,j)]=inf;\r\n\t\tdis[make_pair(1,1)]=0;\r\n\t\tdis[make_pair(n,m)]=inf;\r\n\t\tspfa(1,1);\r\n\t}\r\n\treturn 0;\r\n}"
}