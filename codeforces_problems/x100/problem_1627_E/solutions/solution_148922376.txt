{
    "id": 148922376,
    "contestId": 1627,
    "creationTimeSeconds": 1646766738,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "E",
        "name": "Not Escaping",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "data structures",
            "dp",
            "implementation",
            "shortest paths",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "Eva_heng"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 1740800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define x first\r\n#define y second\r\ntypedef long long LL;\r\ntypedef long double LD;\r\ntypedef pair<int,int> PII;\r\n\r\nconst int N=200010,mod=1e9+7;\r\nconst LL INF=1e18;\r\n\r\nint n,m,k;\r\nLL w[N];\r\n\r\nvoid solve(){\r\n    scanf(\"%d %d %d\",&n,&m,&k);\r\n    for(int i=1;i<=n;i++) scanf(\"%lld\",&w[i]);\r\n    unordered_map<int,LL> g[n+5];\r\n    map<PII,LL> hval;\r\n    map<PII,PII> ht;\r\n    unordered_map<int,vector<PII> > mp;\r\n    \r\n    mp[1].push_back({1,0});\r\n    mp[n].push_back({m,1});\r\n    for(int i=1;i<=k;i++){\r\n        int y1,y2,x1,x2,d;\r\n        scanf(\"%d %d %d %d %d \",&y1,&x1,&y2,&x2,&d);\r\n        g[y1][x1]=g[y2][x2]=INF;\r\n        mp[y1].push_back({x1,1});\r\n        mp[y2].push_back({x2,0});\r\n        hval[{y1,x1}]=d;\r\n        ht[{y1,x1}]={y2,x2};\r\n    }\r\n    g[1][1]=0;\r\n    g[n][m]=INF;\r\n    for(int i=1;i<=n;i++){\r\n        sort(mp[i].begin(),mp[i].end());\r\n        LL last=-1;\r\n        for(int j=0;j<mp[i].size();j++){\r\n            int y=i,x=mp[i][j].x;\r\n            //printf(\"%d %d    \",y,x);\r\n            if(mp[i][j].y==0){\r\n                if(last==-1) last=x;\r\n                else{\r\n                    if(g[y][x]<g[i][last]+(x-last)*w[i]) last=x;\r\n                }\r\n            }else{\r\n                if(last!=-1)    g[y][x]=min(g[i][last]+(x-last)*w[i],g[y][x]);\r\n            }\r\n        }\r\n        //printf(\"\\n\");\r\n        last=-1;\r\n        for(int j=mp[i].size()-1;j>=0;j--){\r\n            int y=i,x=mp[i][j].x;\r\n            if(mp[i][j].y==0){\r\n                if(last==-1) last=x;\r\n                else{\r\n                    if(g[y][x]<g[i][last]+(last-x)*w[i]) last=x;\r\n                }\r\n            }else{\r\n                if(last!=-1)     g[y][x]=min(g[i][last]+(last-x)*w[i],g[y][x]);\r\n            }\r\n        }\r\n        for(int j=0;j<mp[i].size();j++){\r\n            int y=i,x=mp[i][j].x;\r\n            if(mp[i][j].y==1){\r\n                if(y==n && x==m) continue;\r\n                auto it=ht[{y,x}];\r\n                g[it.first][it.second]=min(g[y][x]-hval[{y,x}],g[it.first][it.second]);\r\n            }\r\n        }\r\n    }\r\n    //printf(\"%lld\\n\",g[5][3]);\r\n    if(g[n][m]>=1e17) puts(\"NO ESCAPE\");\r\n    else printf(\"%lld\\n\",g[n][m]);\r\n}\r\n\r\nint main(){ \r\n    //ios::sync_with_stdio(0);\r\n    int T=1;\r\n    cin>>T;\r\n    while(T--) solve();\r\n    return 0;\r\n}"
}