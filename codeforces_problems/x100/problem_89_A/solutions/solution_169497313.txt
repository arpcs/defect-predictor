{
    "id": 169497313,
    "contestId": 89,
    "creationTimeSeconds": 1661331949,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 89,
        "index": "A",
        "name": "Robbery",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 89,
        "members": [
            {
                "handle": "serxio_yerkes"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1308236400
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <cstdarg>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <algorithm>\r\n#include <string>\r\n#include <iostream>\r\n#include <cmath>\r\n#include <vector>\r\n#include <queue>\r\n#include <set>\r\n#include <sstream>\r\n#include <map>\r\n#include <cstring>\r\n#include <complex>\r\n#include <numeric>\r\n#include <functional>\r\n#include <cassert>\r\n#include <iterator>\r\n#include <limits>\r\n#include <valarray>\r\nusing namespace std;\r\n//** Start of Macro and typedef \r\n#ifndef NDEBUG\r\n    #define debug(x) cerr<<#x<<\"=\\\"\"<<x<<\"\\\"\"<<\" at line#\"<<__LINE__<<endl;\r\n    #define hline() cerr<<\"-----------------------------------------\"<<endl;\r\n#else\r\n    #define debug(x)\r\n    #define hline()\r\n#endif\r\n#define Throw(x) fprintf(stderr,\"%s at [line:%d] [file:%s]\\n\",x,__LINE__,__FILE__);throw x;\r\ntypedef long long int llint;\r\n#define Low(x) ((((x)^((x)-1))&x))\r\n#define Two(x)  ((1)<<(x))\r\n#define PB(x) push_back((x))\r\n#define SORT(x) sort(x.begin(),x.end())\r\n#define GOOD(grid,r,c) (((r)>=0&&(r)<grid.size())&&((c)>=0&&(c)<grid[0].length()))\r\n#define BCNT(x) __builtin_popcount(x)\r\n#define Min(out, ... ) do{typeof(out) X[]={__VA_ARGS__};out=*min_element(X,X+sizeof(X)/sizeof(X[0]));}while(0)\r\n#define Max(out, ... ) do{typeof(out) X[]={__VA_ARGS__};out=*max_element(X,X+sizeof(X)/sizeof(X[0]));}while(0)\r\n#define uMin(out, ... ) do{typeof(out) X[]={out,__VA_ARGS__};out=*min_element(X,X+sizeof(X)/sizeof(X[0]));}while(0)\r\n#define uMax(out, ... ) do{typeof(out) X[]={out,__VA_ARGS__};out=*max_element(X,X+sizeof(X)/sizeof(X[0]));}while(0)\r\n\r\n#define Back(str) (str)[(str).length()-1]\r\n#define SZ(vec) ((int)(vec).size())\r\n#define All(vec) (vec).begin(),(vec).end()\r\n#define Rep(i,n) for(int i=0;i<(n);++i)\r\n#define For(i,a,b) for(typeof(a) i=a;i<b;++i)\r\n#define Bit(x,b) (1&((x)>>(b)))\r\n#define Foreach(itr,con) typedef typeof(con) _type_of_ ## con; for(_type_of_ ## con::iterator itr=con.begin();itr!=con.end();++itr)\r\n#define Make_vector(vec,...) do{typedef typeof(vec) _T;const _T::value_type _tmp[]={ __VA_ARGS__ };vec=_T(_tmp,_tmp+sizeof(_tmp)/sizeof(_tmp[0]));}while(0)\r\n#define Union(out,...) do{typeof(out) _v; Make_vector(_v,__VA_ARGS__);out=interval_union(_v);}while(0)\r\nstatic const int bitindex_map[32]={};\r\n#define BitIndex(x) (((unsigned int)(x)*0x077CB531U)>>27)\r\n//***************End of Macro and typedef**************\r\n\r\nconst int dir[][2]={{-1,0},{0,1},{1,0},{0,-1},{1,1},{1,-1},{-1,1},{-1,-1}};\r\nconst char dname[]=\"NWSE\";\r\n//const char dname[]=\"URDL\";\r\n// Tool functions\r\ntemplate<typename T>\r\ninline void updateMax(T& a,const T& b){a=max(a,b);}\r\ntemplate<typename T>\r\ninline void updateMin(T& a,const T& b){a=min(a,b);}\r\ntemplate<typename T>\r\ninline vector<T> erase(vector<T> table,int ind)\r\n{\r\n\tassert(ind<table.size());\r\n\ttable.erase(table.begin()+ind);\r\n\treturn table;\r\n}\r\ntemplate<typename T>\r\nvector<T> unique(vector<T> table)\r\n{\r\n\tSORT(table);\r\n  vector<T> res;\r\n  unique_copy(table.begin(),table.end(),back_inserter(res));\r\n  return res;\r\n\t//return vector<T>(table.begin(),unique(table.begin(),table.end()));\r\n}\r\ntemplate<typename A,typename B>\r\nostream& operator<<(ostream& out,const pair<A,B>& pp)\r\n{\r\n\tout<<\"(\"<<pp.first<<\",\"<<pp.second<<\")\";\r\n\treturn out;\r\n}\r\ntemplate<typename A,typename B>\r\nistream& operator<<(istream& in,pair<A,B>& pp)\r\n{\r\n\tcerr<<\"A pair wanted\"<<endl;\r\n\tin>>pp.first>>pp.second;\r\n\treturn in;\r\n}\r\n\r\ntemplate<typename T>\r\nostream& operator<<(ostream& out,const vector<T>& vect)\r\n{\r\n  copy(vect.begin(),vect.end(),ostream_iterator<T>(out,\" \"));\r\n  return out;\r\n\tout<<\"length = \"<<vect.size()<<endl;\r\n\tfor(int i=0;i<vect.size();i++)out<<vect[i]<<\" \";\r\n\tout<<endl;\r\n\treturn out;\r\n}\r\nostream& operator<<(ostream& out,const vector<string>& vect)\r\n{\r\n\tout<<vect.size()<<\" X \"<<vect[0].length()<<endl;\r\n\tfor(int i=0;i<vect.size();i++)out<<vect[i]<<endl;\r\n\treturn out;\r\n}\r\ntemplate<typename T>\r\nistream& operator>>(istream& in,vector<T>& vect)\r\n{\r\n\tvect.clear();\r\n\tint n;\r\n\tcerr<<\"A integer of length wanted\"<<endl;\r\n\tin>>n;\r\n\tvect.resize(n);\r\n\tcerr<<n<<\" elements wanted\"<<endl;\r\n\tfor(int i=0;i<n;i++)in>>vect[i];\r\n\treturn in;\r\n}\r\n\r\ntemplate<typename T>\r\nostream& operator<<(ostream& out,const vector<vector<T> >& vect)\r\n{\r\n\tout<<\"row number=\"<<vect.size()<<endl;\r\n\tfor(int i=0;i<vect.size();i++)\r\n\t{\r\n\t\tout<<\"row #\"<<i<<\":\";\r\n\t\tfor(int j=0;j<vect[i].size();j++)\r\n\t\t\tout<<\" \"<<vect[i][j];\r\n\t\tout<<endl;\r\n\t}\r\n\treturn out;\r\n}\r\ntemplate<typename T>\r\nistream& operator>>(istream& in,vector<vector<T> >& vect)\r\n{\r\n\tvect.clear();\r\n\tint n,m;\r\n\tcerr<<\"Two integers wanted\"<<endl;\r\n\tin>>n>>m;\r\n\tvect.resize(n);\r\n\tcerr<<\"A matrix \"<<n<<\" X \"<<m<<\" wanted\"<<endl;\r\n\tfor(int i=0;i<n;i++)\r\n\t{\r\n\t\tvect[i].resize(m);\r\n\t\tfor(int j=0;j<m;j++)in>>vect[i][j];\r\n\t}\r\n\treturn in;\r\n}\r\n\r\n\r\n\r\n// Convert anything to string\r\ntemplate<class T>\r\nstring convert(T vv)\r\n{\r\n\tostringstream re;\r\n\tre<<vv;\r\n\treturn re.str();\r\n}\r\ntemplate<typename T>\r\nT convert(const string& ss)\r\n{\r\n\tistringstream is(ss);\r\n\tT tmp;\r\n\tis>>tmp;\r\n\treturn tmp;\r\n}\r\n//convert vector to string\r\ntemplate<class T>\r\nstring convert(vector<T> vv)\r\n{\r\n\tostringstream re;\r\n\tfor(int i=0;i<vv.size();i++)\r\n\t{\r\n\t\tif(i)re<<\" \";\r\n\t\tre<<vv[i];\r\n\t}\r\n\treturn re.str();\r\n}\r\n\r\n//Be carefull for cut into strings!!!!\r\ntemplate<class T>\r\nvector<T> parse(const string& ss,const char* cut=\" \")\r\n{\r\n\tvector<T> re;\r\n\tfor(int j=0;j<ss.size();j++)\r\n\t{\r\n\t\tstring s;\r\n\t\twhile(j<ss.size()&&NULL==strchr(cut,ss[j]))\r\n\t\t\ts+=ss[j++];\r\n\t\tif(!s.empty())\r\n\t\t{\r\n\t\t\tT tmp;\r\n\t\t\tistringstream is(s);\r\n\t\t\tis>>tmp;\r\n\t\t\tre.push_back(tmp);\r\n\t\t}\r\n\t}\r\n\treturn re;\r\n}\r\ntemplate<>\r\nvector<string> parse(const string& ss,const char* cut)\r\n{\r\n\tvector<string> re;\r\n\tfor(int j=0;j<ss.size();j++)\r\n\t{\r\n\t\tstring s;\r\n\t\twhile(j<ss.size()&&NULL==strchr(cut,ss[j]))\r\n\t\t\ts+=ss[j++];\r\n\t\tif(!s.empty())\r\n\t\t{\r\n\t\t\tre.push_back(s);\r\n\t\t}\r\n\t}\r\n\treturn re;\r\n}\r\n/************ bitwise functions  ************/\r\nint countBit(int n)\r\n{\r\n  return __builtin_popcount(n);\r\n\tint re=0;\r\n\twhile(n)re++,n^=Low(n);\r\n\treturn re;\r\n}\r\n// Most significant bit\r\nint MSB(int n)\r\n{\r\n\tif(n==0)return 0;\r\n\twhile(Low(n)!=n)n^=Low(n);\r\n\treturn n;\r\n}\r\nvoid initHash(int n,int hash[])\r\n{\r\n\tfor(int i=0;i<n;i++)\r\n\t\thash[Two(i)]=i;\r\n}\r\nvoid initBcnt(int n,int bcnt[])\r\n{\r\n\tbcnt[0]=0;\r\n\tfor(int i=1;i<Two(n);i++)\r\n\t\tbcnt[i]=bcnt[i^Low(i)]+1;\r\n}\r\nint print(int aa[]) {\r\n\treturn 0;\r\n}\r\n\r\ntemplate<typename T>\r\nvector<pair<T,T> >  interval_union(vector<pair<T,T> > all) {\r\n\tvector<pair<T,T> > res;\r\n\tif(all.empty())return res;\r\n\tsort(all.begin(),all.end());\r\n\tres.push_back(all[0]);\r\n\tfor(int i=1;i<all.size();i++) {\r\n\t\tif(all[i].first<=res.back().second) {\r\n\t\t\tres.back().second=max(res.back().second,all[i].second);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tres.push_back(all[i]);\r\n\t\t}\r\n\t}\r\n\treturn res;\r\n}\r\ntemplate<typename T>\r\nclass CPoint : public complex<T> {\r\n  public:\r\n    CPoint(const T& x=T(),const T& y=T()):complex<T>(x,y){};\r\n    T& x() {\r\n      return complex<T>::real();\r\n    }\r\n    T& y() {\r\n      return complex<T>::imag();\r\n    }\r\n};\r\ntemplate<typename T>\r\nvector<T> set_diff(vector<T>& a,vector<T>& b) {\r\n  vector<T> c;\r\n  sort(a.begin(),a.end());\r\n  sort(b.begin(),b.end());\r\n  set_difference(a.begin(),a.end(),b.begin(),b.end(),inserter(c,c.begin()));\r\n  return c;\r\n}\r\ntemplate<typename T>\r\nostream& operator<<(ostream& out,const valarray<T>& val) {\r\n  for(int i=0;i<val.size();i++) {\r\n    cout<<val[i]<<\" \";\r\n  }\r\n  return out;\r\n}\r\nvector<string> transpose(const vector<string>& grid) {\r\n  vector<string> res((grid[0].size()),string((grid.size()),' '));\r\n  for(int i=0;i<grid.size();i++)for(int j=0;j<grid[i].size();j++) {\r\n    res[j][i]=grid[i][j];\r\n  }\r\n  return res;\r\n}\r\ndouble nextGaussian()\r\n{\r\n    double x,y,r;\r\n    for(;;)\r\n    {\r\n        x=2.0*rand()/(RAND_MAX+1.0)-1.0;\r\n        y=2.0*rand()/(RAND_MAX+1.0)-1.0;\r\n        r=x*x+y*y;\r\n        if(r>=1.0)continue;\r\n        break;\r\n    }\r\n    double re=sqrt(-2.0*log(r)/(r))*x;\r\n    return re;\r\n}\r\n\r\n// Code review!!!!!!!!!!!!!!!!!!!!!!!!\r\nint main()\r\n{\r\n  int n,m,k;\r\n  cin>>n>>m>>k;\r\n  vector<int> dia(n);\r\n  if(0==(n&1)) {\r\n    cout<<0<<endl;\r\n    return 0;\r\n  }\r\n  Rep(i,n) cin>>dia[i];\r\n  llint ans=m/((n+1)/2)*k;\r\n  for(int i=0;i<n;i+=2) {\r\n    ans=min(ans,dia[i]);\r\n  }\r\n  cout<<ans<<endl;\r\n\treturn 0;\r\n}"
}