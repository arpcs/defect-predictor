{
    "id": 15143483,
    "contestId": 89,
    "creationTimeSeconds": 1451604067,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 89,
        "index": "A",
        "name": "Robbery",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 89,
        "members": [
            {
                "handle": "HappyNewYearMike"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1308236400
    },
    "programmingLanguage": "Mono C#",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "?using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace Codeforces\r\n{\r\n\tclass Task89A\r\n\t{\r\n\t\tstatic void Main()\r\n\t\t{\r\n\t\t\tvar input = new InputTokenizer(Console.In.ReadToEnd());\r\n\r\n\t\t\tint n, m, k;\r\n\t\t\tinput.Read(out n).Read(out m).Read(out k);\r\n\r\n\t\t\tint[] cells = new int[n];\r\n\t\t\tinput.Read(cells);\r\n\r\n\t\t\tlong answer = n % 2 == 0\r\n\t\t\t\t? 0\r\n\t\t\t\t: Math.Min(\r\n\t\t\t\t\t(long) cells.Where((int value, int pos) => pos % 2 == 0).Min(),\r\n\t\t\t\t\tm / (n / 2 + 1L) * k);\r\n\r\n\t\t\tConsole.Out.WriteLine(answer);\r\n\t\t}\r\n\r\n\t\tprivate class InputTokenizer\r\n\t\t{\r\n\t\t\tprivate string[] _tokens;\r\n\t\t\tprivate int _offset;\r\n\r\n\t\t\tpublic InputTokenizer(string input)\r\n\t\t\t{\r\n\t\t\t\t_tokens = input.Split().Where((string x) => x != \"\").ToArray();\r\n\t\t\t}\r\n\r\n\t\t\tpublic InputTokenizer Read(out int v)\r\n\t\t\t{\r\n\t\t\t\tv = int.Parse(_tokens[_offset++]);\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\r\n\t\t\tpublic InputTokenizer Read(int[] v)\r\n\t\t\t{\r\n\t\t\t\tfor (int i = 0; i < v.Length; ++i)\r\n\t\t\t\t\tv[i] = int.Parse(_tokens[_offset++]);\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"
}