{
    "id": 491249,
    "contestId": 89,
    "creationTimeSeconds": 1308239174,
    "relativeTimeSeconds": 2774,
    "problem": {
        "contestId": 89,
        "index": "A",
        "name": "Robbery",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 89,
        "members": [
            {
                "handle": "Aleksander"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 9,
        "startTimeSeconds": 1308236400
    },
    "programmingLanguage": "MS C++",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 2150400,
    "source": "#include <cstdio>\r\n#include <iostream>\r\n#include <cstring>\r\n#include <string>\r\n#include <cmath>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <set>\r\n#include <map>\r\nusing namespace std;\r\n\r\nint g[100005], g1[100005];\r\nint n, m, k;\r\n\r\nbool goodpos(int cur){\r\n    int i;\r\n    for (i = 0;i < n;i++){\r\n        g1[i] = g[i];\r\n    }\r\n    g1[0] -= cur;\r\n    int kol = 0;\r\n    for (i = 1;i < n;i++){\r\n        kol += abs((g[i - 1] + g[i]) - (g1[i - 1] + g1[i]));\r\n        g1[i] += (g[i - 1] + g[i]) - (g1[i - 1] + g1[i]);\r\n        if (g1[i] < 0){\r\n            break;\r\n        }\r\n    }\r\n    if (i < n)\r\n        return false;\r\n    kol /= 2;\r\n    kol += cur;\r\n    return (kol <= m);\r\n}\r\n\r\nint main(){\r\n    //freopen(\"input.txt\",\"rt\",stdin);\r\n    //freopen(\"output.txt\",\"wt\",stdout);\r\n    int i, l, r, res, mid;\r\n    scanf(\"%d%d%d\",&n,&m,&k);\r\n    for (i = 0;i < n;i++){\r\n        scanf(\"%d\",&g[i]);\r\n    }\r\n    if (n == 1){\r\n        printf(\"%d\",min(k * m, g[0]));\r\n        return 0;\r\n    }\r\n    if (n == 2){\r\n        printf(\"0\");\r\n        return 0;\r\n    }\r\n    l = 0;\r\n    r = min(g[0], g[2]);\r\n    res = 0;\r\n    while (l < r + 1){\r\n        mid = (l + r) / 2;\r\n        if (goodpos(mid)){\r\n            res = mid;\r\n            l = mid + 1;\r\n        }else\r\n        {\r\n            r = mid - 1;\r\n        }\r\n    }\r\n    res *= k;\r\n    int mn = 2147483647;\r\n    for (i = 0;i < n;i += 2){\r\n        mn = min(mn, g[i]);\r\n    }\r\n    res = min(res, mn);\r\n    printf(\"%d\",res);\r\n    return 0;\r\n}"
}