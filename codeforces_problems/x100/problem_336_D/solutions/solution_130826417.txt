{
    "id": 130826417,
    "contestId": 336,
    "creationTimeSeconds": 1633366527,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 336,
        "index": "D",
        "name": "Vasily the Bear and Beautiful Strings",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 336,
        "members": [
            {
                "handle": "Curd"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1376062200
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 94,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 7475200,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n#define long long long\nconst long mod = 1000000007;\nconst long N = 200000;\nlong n, m, g, fac[N + 5], r[N + 5];\n\nlong modpower(long a, long n, long m) // O(log n)\n{\n    long res = 1;\n\n    while (n > 0)\n    {\n        if (n & 1)\n        {\n            res =  ((res) % m * (a % m)) % m;\n            n--;\n        }\n        else\n        {\n            a = ((a % m) * (a % m)) % m;\n            n /= 2;\n        }\n    }\n\n    return res % m;\n}\n\nlong C(long k, long n) {\n    long res = (fac[n]) * r[k] % mod;\n    res = (res) * r[n - k] % mod;\n    return res;\n}\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cin >> n >> m >> g;\n    // n times 0\n    // m times 1\n    fac[0] = fac[1] = 1;\n    for (long i = 2; i <= N; i++)fac[i] = ( fac[i - 1] * i) % mod;\n    for (long i = 0; i <= N; i++)r[i] = modpower(fac[i], mod - 2, mod);\n\n    if (m == 0) // if number of 1's is zero then answer will only depend on number of 0's and will depend on number of 0's\n    {\n        if (g == 0)\n        {\n            if (n & 1)cout << \"1\";\n            else cout << \"0\\n\";\n            return 0;\n        }\n        else\n        {\n            if (n & 1)cout << \"0\";\n            else cout << \"1\\n\";\n            return 0;\n        }\n    }\n\n    long res(0);\n    for (int i = g; i <= n; i += 2) //calulation of number of beautiful string as described in editorial\n        if (i + 1 < n + m)\n            res = (res + C(n - i, n + m - i - 1)) % mod;\n\n    if ((n % 2 != g) && (m == 1))res++;\n    cout << res << '\\n';\n    return 0;\n}"
}