{
    "id": 4252261,
    "contestId": 336,
    "creationTimeSeconds": 1376065802,
    "relativeTimeSeconds": 3602,
    "problem": {
        "contestId": 336,
        "index": "D",
        "name": "Vasily the Bear and Beautiful Strings",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 336,
        "members": [
            {
                "handle": "Hamition"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 5,
        "startTimeSeconds": 1376062200
    },
    "programmingLanguage": "GNU C++0x",
    "verdict": "COMPILATION_ERROR",
    "testset": "PRETESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<iostream>\r\n#include<cstring>\r\n#include<cstdio>\r\n#include<map>\r\n#include<string>\r\n#include<vector>\r\nusing namespace std;\r\ntypedef long long int64;\r\n#define SZ(x) (int)x.size()\r\n#define two(x) ((1)<<(x))\r\n\r\nconst int mod = int(1e9) + 7 ; \r\nint n , m , g; \r\nconst int maxn =2* 100000 + 10 ;\r\nint64 fac[ maxn ];  \r\nint64 inv[ maxn ];  \r\n\r\nint64 fast_power( int64 x, int y ){ \r\n    int64 res = 1, tmp= x % mod ; \r\n    for( ; y ; y >>= 1 ){\r\n        if( y & 1 ) res = (res* tmp ) % mod ; \r\n        tmp = tmp*tmp % mod ; \r\n    }\r\n    return res; \r\n}\r\n\r\nvoid init (){\r\n    fac[0]=1; \r\n    for(int i=1; i < maxn ; ++i)\r\n        fac[i] = 1LL*fac[i-1] * i % mod ; \r\n    for(int i=0; i < maxn ; ++i) \r\n        inv[i] = fast_power( fac[i], mod-2) ; \r\n    return ; \r\n}\r\n\r\nint64 cal( int x,  int y ){\r\n    if( x < 0 || y < 0 || x < y ) return 0;\r\n    return fac[x] * inv[y] % mod * inv[ x- y ] % mod; \r\n}\r\n\r\nint gao( string x, int g){\r\n    \r\n    if(x==\"\") return 0; \r\n    \r\n    int res = (x[0]-'0');  \r\n    for(int i=1; i < SZ(x); ++i){ \r\n        res |= (x[i]-'0'); \r\n        res ^=1;\r\n    }\r\n    return res ==g ; \r\n}\r\n\r\nint main (){\r\n    init(); \r\n    while( cin >> n >> m >> g ){\r\n        int64 ans = 0 ; \r\n        int tot = n + m ;  \r\n        int bg = 2 + ((tot & 1)==g);\r\n       // cout << bg << endl; \r\n        for(int i = bg ; i < tot ; i+=2){\r\n            int left0 = n - ( tot - i -1) , left1 = m - 1;  \r\n            ans = ans + cal(i, left1 )  ;\r\n            if( ans >= mod) ans-=mod; \r\n        }     \r\n           // if( g == 0 ) ans += m==0 ;\r\n        //vector< string > x;\r\n        string x = \"\" ; \r\n        \r\n        if( m <= 2 ){ \r\n            for(int i =0 ; i < m ; ++i)\r\n                    x +=\"1\"; \r\n            for(int i=0;  i < (n%2);++i)\r\n                    x= \"0\"+x;  \r\n        }\r\n        \r\n        do{\r\n            ans = ans + gao( x, g) ; \r\n        } while(next_permutation(x.begin(), x.end())) ;  \r\n        cout << ans % mod << endl ; \r\n    }\r\n    return 0; \r\n}\r\n\r\n"
}