{
    "id": 4269709,
    "contestId": 336,
    "creationTimeSeconds": 1376314392,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 336,
        "index": "D",
        "name": "Vasily the Bear and Beautiful Strings",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 336,
        "members": [
            {
                "handle": "GateOne"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1376062200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <cstdio>\r\nusing namespace std;\r\n\r\nconst int SIZE = 400009;\r\nint ftable[SIZE];\r\nconst int MOD = 1000000007;\r\n\r\nlong long int mpow(long long int a, int b)\r\n{\r\n    int ret = 1;\r\n    while(b)\r\n    {\r\n    if(b & 1)\r\n        ret = ret * a % MOD;\r\n    b >>= 1;\r\n    a = a * a % MOD;    \r\n    }\r\n    return ret;\r\n}\r\n\r\nint g(int, int);\r\nint f(int n, int m)\r\n{\r\n    if(n + m == 1)\r\n    return n;\r\n\r\n    int ret = 0;\r\n    if(m)\r\n    ret = ftable[n + m - 1] * mpow(ftable[n], MOD - 2) % MOD * mpow(ftable[m - 1], MOD - 2) % MOD;\r\n    if(n)\r\n    ret = (ret + g(n - 1, m)) % MOD;\r\n    return ret;\r\n}\r\n\r\nint g(int n, int m)\r\n{\r\n    if(n + m == 1)\r\n    return m;\r\n    else \r\n    return n? f(n - 1, m): 0;\r\n}\r\n\r\n\r\n\r\nint main()\r\n{\r\n    ftable[0] = ftable[1] = 1;\r\n    for(long long int i = 2; i < SIZE; i++)\r\n    ftable[i] = ftable[i - 1] * i % MOD;\r\n\r\n    int N, M, G;\r\n    scanf(\"%d%d%d\", &N, &M, &G);\r\n    printf(\"%d\\n\", G? g(N, M): f(N, M));\r\n\r\n    return 0;\r\n}\r\n#include <cstdio>\r\nusing namespace std;\r\n\r\nconst int SIZE = 400009;\r\nint ftable[SIZE];\r\nconst int MOD = 1000000007;\r\n\r\nlong long int mpow(long long int a, int b)\r\n{\r\n    int ret = 1;\r\n    while(b)\r\n    {\r\n    if(b & 1)\r\n        ret = ret * a % MOD;\r\n    b >>= 1;\r\n    a = a * a % MOD;    \r\n    }\r\n    return ret;\r\n}\r\n\r\nint g(int, int);\r\nint f(int n, int m)\r\n{\r\n    if(n + m == 1)\r\n    return n;\r\n\r\n    int ret = 0;\r\n    if(m)\r\n    ret = ftable[n + m - 1] * mpow(ftable[n], MOD - 2) % MOD * mpow(ftable[m - 1], MOD - 2) % MOD;\r\n    if(n)\r\n    ret = (ret + g(n - 1, m)) % MOD;\r\n    return ret;\r\n}\r\n\r\nint g(int n, int m)\r\n{\r\n    if(n + m == 1)\r\n    return m;\r\n    else\r\n    return f(n - 1, m);\r\n}\r\n\r\n\r\n\r\nint main()\r\n{\r\n    ftable[0] = ftable[1] = 1;\r\n    for(long long int i = 2; i < SIZE; i++)\r\n    ftable[i] = ftable[i - 1] * i % MOD;\r\n\r\n    int N, M, G;\r\n    scanf(\"%d%d%d\", &N, &M, &G);\r\n    printf(\"%d\\n\", G? g(N, M): f(N, M));\r\n\r\n    return 0;\r\n}\r\n"
}