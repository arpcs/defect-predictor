{
    "id": 4257379,
    "contestId": 336,
    "creationTimeSeconds": 1376070682,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 336,
        "index": "D",
        "name": "Vasily the Bear and Beautiful Strings",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 336,
        "members": [
            {
                "handle": "bluemao"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1376062200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 94,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 11161600,
    "source": "#include<cstdio>\r\n#include<iostream>\r\n#include<cstring>\r\n#include<algorithm>\r\nusing namespace std;\r\n\r\nconst long long MOD = 1000000007;\r\n\r\nconst int N = 100005;\r\nlong long f[N + N + 5], fi[N + N + 5];\r\n\r\nlong long inv(long long a) {\r\n\treturn a == 1 ? 1 : (MOD - MOD / a) * inv(MOD % a) % MOD;\r\n}\r\n\r\nvoid prepare() {\r\n\tf[0] = 1;\r\n\tfor (int i = 1; i <= N + N; ++i) {\r\n\t\tf[i] = f[i - 1] * i % MOD;\r\n\t}\r\n\tfor (int i = 0; i <= N + N; ++i) {\r\n\t\tfi[i] = inv(f[i]);\r\n\t}\r\n}\r\n\r\nlong long binom(const int n, const int m) {\r\n\treturn f[n] * fi[m] % MOD * fi[n - m] % MOD;\r\n}\r\n\r\nlong long dp[N][2];\r\n\r\nlong long cal(const int n, const int m, const int g) {\r\n\tif (n + m == 1) {\r\n\t\tif (n == 0) {\r\n\t\t\treturn g == 1;\r\n\t\t} else {\r\n\t\t\treturn g == 0;\r\n\t\t}\r\n\t}\r\n\tif (dp[n][g] != -1) {\r\n\t\treturn dp[n][g];\r\n\t}\r\n\tlong long ret = 0;\r\n\tif (g == 1) {\r\n\t\tif (n > 0) {\r\n\t\t\tret = cal(n - 1, m, 0);\r\n\t\t}\r\n\t} else {\r\n\t\tif (n > 0) {\r\n\t\t\tret = cal(n - 1, m, 1);\r\n\t\t}\r\n\t\tif (m > 0) {\r\n\t\t\t(ret += binom(n + m - 1, m - 1)) %= MOD;\r\n\t\t}\r\n\t}\r\n\treturn dp[n][g] = ret;\r\n}\r\n\r\nint main() {\r\n\tmemset(dp, -1, sizeof(dp));\r\n\tprepare();\r\n\tint n, m, g;\r\n\tscanf(\"%d%d%d\", &n, &m, &g);\r\n\tcout << cal(n, m, g) << endl;\r\n\treturn 0;\r\n}"
}