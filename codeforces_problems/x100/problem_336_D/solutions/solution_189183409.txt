{
    "id": 189183409,
    "contestId": 336,
    "creationTimeSeconds": 1673683060,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 336,
        "index": "D",
        "name": "Vasily the Bear and Beautiful Strings",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 336,
        "members": [
            {
                "handle": "qdd"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1376062200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 94,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 3174400,
    "source": "// qdd on Jan 13, 2023\r\n\r\n#ifdef qdd\r\n#include <ringo>\r\n#else\r\n#include <bits/stdc++.h>\r\n#define dbg(...)\r\n#define dbgr(x, y)\r\n#endif\r\n\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\n\r\n#define ALL(x) begin(x), end(x)\r\n\r\ntemplate <class T>\r\nistream& operator>>(istream& is, vector<T>& v) {\r\n  for (T& x : v) is >> x;\r\n  return is;\r\n}\r\n\r\ntemplate <class T>\r\nostream& operator<<(ostream& os, const vector<T>& v) {\r\n  bool f = 0;\r\n  for (const T& x : v) (f ? os << ' ' : os) << x, f = 1;\r\n  return os;\r\n}\r\n\r\nconstexpr ll qk(ll a, ll b, ll p) {\r\n  ll ans = 1 % p;\r\n  for (a %= p; b; b >>= 1, a = a * a % p)\r\n    if (b & 1) ans = ans * a % p;\r\n  return ans;\r\n}\r\n\r\nconst int N = 2e5 + 10;\r\nconst int P = 1e9 + 7;\r\n\r\nll fac[N], ifac[N];\r\n\r\nvoid init_inv() {\r\n  fac[0] = 1;\r\n  for (int i = 1; i < N; i++) {\r\n    fac[i] = fac[i - 1] * i % P;\r\n  }\r\n  ifac[N - 1] = qk(fac[N - 1], P - 2, P);\r\n  for (int i = N - 2; i >= 0; i--) {\r\n    ifac[i] = ifac[i + 1] * (i + 1) % P;\r\n  }\r\n}\r\n\r\nll C(int n, int m) {\r\n  if (n < m || m < 0) return 0;\r\n  return fac[n] * ifac[m] % P * ifac[n - m] % P;\r\n}\r\n\r\nvoid sol() {\r\n  int n, m, g;\r\n  cin >> n >> m >> g;\r\n  vector<ll> ans(2);\r\n  if (m == 0) {\r\n    ans[0] = n % 2 == 1;\r\n    ans[1] = n % 2 == 0;\r\n  } else {\r\n    for (int i = 0; i <= n; i++) {\r\n      ll cnt = C(n + m - i - 1, m - 1);\r\n      ll lst = i == n + m - 1 ? 0 : 1;\r\n      (ans[0] += cnt * ((i + lst) % 2 == 1)) %= P;\r\n      (ans[1] += cnt * ((i + lst) % 2 == 0)) %= P;\r\n    }\r\n  }\r\n  cout << ans[g] << '\\n';\r\n}\r\n\r\nint main() {\r\n  ios::sync_with_stdio(false);\r\n  cin.tie(nullptr);\r\n  init_inv();\r\n  sol();\r\n  return 0;\r\n}"
}