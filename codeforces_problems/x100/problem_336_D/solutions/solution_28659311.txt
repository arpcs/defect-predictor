{
    "id": 28659311,
    "contestId": 336,
    "creationTimeSeconds": 1500361069,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 336,
        "index": "D",
        "name": "Vasily the Bear and Beautiful Strings",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 336,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1376062200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 94,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 9113600,
    "source": "#pragma comment(linker, \"/STACK:1024000000,1024000000\")\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\ntypedef long long LL;\n\nconst int MaxN = 2e5, Pt = 1e9 + 7;\nint g;\nLL n, m, fac[MaxN * 2 + 5];\n\nLL qwr(LL x, LL y)\n{\n\tLL res = 1;\n\twhile (y != 0) {\n\t\tif (y & 1) res = (res * x) % Pt;\n\t\ty >>= 1LL;\n\t\tx = (x * x) % Pt;\n\t}\n\treturn res % Pt;\n}\n\nLL C(LL n, LL m)\n{\n\tif (n < m) return 0;\n\tif (n == m) return 1;\n\tif (m == 0) return 1;\n\treturn (fac[n] * qwr(fac[n - m] * fac[m] % Pt, Pt - 2)) % Pt;\n}\n\nLL f(LL len, LL n, int g)\n{\n\t//printf(\"%lld %lld %d\\n\", len, n, g);\n\tif (n < 0) return 0;\n\tif (len < n) return 0;\n\tif (len <= 0) return 0;\n\tif (len == 1 && n == 0 && g == 1) return 1;\n\tif (len == 1 && n == 0 && g == 0) return 0;\n\tif (len == 1 && n == 1 && g == 0) return 1;\n\tif (len == 1 && n == 1 && g == 1) return 0;\n\t//printf(\"%lld %lld %lld\\n\", len - 1, n, C(len - 1, n));\n\t//printf(\"%lld %lld %d\\n\", len, n, g);\n\tif (g == 0) return (C(len - 1, n) + f(len - 1, n - 1, 1)) % Pt;\n\telse return f(len - 1, n - 1, 0);\n}\n\nint main()\n{\n\tfac[0] = 1;\n\tfor (int i = 1; i <= 2 * MaxN; i++) fac[i] = (fac[i - 1] * (LL)i) % Pt;\n\twhile (~scanf(\"%lld%lld%d\", &n, &m, &g)) printf(\"%lld\\n\", f(n + m, n, g));\n\treturn 0;\n}\n\t   \t \t    \t\t \t\t \t\t \t \t    \t \t\t"
}