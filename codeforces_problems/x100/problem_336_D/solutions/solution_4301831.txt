{
    "id": 4301831,
    "contestId": 336,
    "creationTimeSeconds": 1376723448,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 336,
        "index": "D",
        "name": "Vasily the Bear and Beautiful Strings",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 336,
        "members": [
            {
                "handle": "lyxuan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1376062200
    },
    "programmingLanguage": "FPC",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 819200,
    "source": "const\r\n  mn=1000000007;\r\nvar\r\n  n,m,g:longint;\r\n  s:array[1..100000]of int64;\r\n  ans:int64;\r\n\r\nprocedure init;\r\nbegin\r\n  readln(n,m,g);\r\nend;\r\n\r\nprocedure prepare;\r\nvar i:longint;\r\nbegin\r\n  s[1]:=1;\r\n  for i:=2 to 100000 do begin\r\n    s[i]:=(s[i-1]*i)mod mn;\r\n  end;\r\nend;\r\n\r\nfunction qm(x,y:int64):int64;\r\nvar t:int64;\r\nbegin\r\n  if y=1 then exit(x);\r\n  t:=qm(x,y div 2);\r\n  t:=(t*t)mod mn;\r\n  if y and 1=1 then t:=(t*x)mod mn;\r\n  exit(t);\r\nend;\r\n\r\nfunction combine(x,y:longint):int64;\r\nvar up,down:int64;\r\nbegin\r\n  if (y<=0) then exit(0);\r\n  if (x=y) then exit(1);\r\n  up:=s[x];\r\n  down:=s[y];\r\n  down:=(down*s[x-y]) mod mn;\r\n  down:=qm(down,mn-2);\r\n  exit((up*down)mod mn);\r\nend;\r\n\r\nprocedure work;\r\nvar i,j,k,num0:longint;\r\nbegin\r\n  if (n=0) then begin\r\n    if (g=0)and(m>1) then ans:=1;\r\n    if (g=1)and(m=1) then ans:=1;\r\n    exit;\r\n  end;\r\n  if (m=0) then begin\r\n    if (g=0)and(n and 1=1) then ans:=1;\r\n    if (g=1)and(n and 1=0) then ans:=1;\r\n    exit;\r\n  end;\r\n  for i:=0 to n-1 do begin\r\n    if i and 1=0 then begin\r\n      if g=0 then ans:=(ans+combine(n+m-i-1,n-i))mod mn;\r\n    end else begin\r\n      if g=1 then ans:=(ans+combine(n+m-i-1,n-i))mod mn;\r\n    end;\r\n  end;\r\n  if (g=0)and((n and 1=0)and(m>1)or(n and 1=1)and(m=1)) then ans:=(ans+1) mod mn;\r\n  if (g=1)and((n and 1=0)and(m=1)or(n and 1=1)and(m>1)) then ans:=(ans+1) mod mn;\r\nend;\r\n\r\nprocedure print;\r\nbegin\r\n  writeln(ans);\r\nend;\r\n\r\nbegin\r\n  init;\r\n  prepare;\r\n  work;\r\n  print;\r\nend.\r\n"
}