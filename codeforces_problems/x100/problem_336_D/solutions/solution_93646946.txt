{
    "id": 93646946,
    "contestId": 336,
    "creationTimeSeconds": 1600955059,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 336,
        "index": "D",
        "name": "Vasily the Bear and Beautiful Strings",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 336,
        "members": [
            {
                "handle": "zhjxaoini"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1376062200
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 94,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 7475200,
    "source": "#ifndef DEBUG\r\n    #define NDEBUG\r\n#endif\r\n#include <bits/stdc++.h>\r\n#define def(v) int &v = e[i].v\r\n#define cls(a) memset (a, 0, sizeof (a))\r\n#define mset(a, b) memset (a, b, sizeof (a))\r\n#define go(i,e,...) for (int i = __VA_ARGS__; i; i = e[i].nt)\r\n#define fir(i,a,...) for (int i = a, i ## _end = __VA_ARGS__; i <= i ## _end; ++i)\r\n#define firr(i,a,...) for (int i = a, i ## _end = __VA_ARGS__; i >= i ## _end; --i)\r\n#ifdef DEBUG\r\n    #define debug(...) (void)(fprintf (stderr, \"debug in %d: \", __LINE__), fprintf (stderr, __VA_ARGS__), fprintf (stderr, \"\\n\"))\r\n    #define dbug(x) (std::cerr << #x \" = \" << (x) << std::endl)\r\n#else\r\n    #define debug(...)\r\n    #define dbug(...)\r\n#endif\r\ntypedef long long LL;\r\ntypedef long double LD;\r\ntypedef unsigned long long ULL;\r\n#ifndef DEBUG\r\n    namespace IO {\r\n        char ibuf[1 << 21], *p1 = ibuf, *p2 = ibuf, obuf[1 << 21], *p = obuf;\r\n        #define getchar() (::IO::p1 == ::IO::p2 && (::IO::p2 = (::IO::p1 = ::IO::ibuf) + fread (::IO::ibuf, 1, 1 << 21, stdin), ::IO::p1 == ::IO::p2) ? EOF : *::IO::p1++)\r\n        #define putchar(x) (::IO::p == ::IO::obuf + sizeof (::IO::obuf) && (fwrite (::IO::obuf, 1, 1 << 21, stdout), ::IO::p = ::IO::obuf), *::IO::p++ = x)\r\n        #define ioflush() (void)(fwrite (::IO::obuf, 1, ::IO::p - ::IO::obuf, stdout), fflush (stdout), ::IO::p = ::IO::obuf)\r\n        struct outflush {~outflush () {ioflush ();}} flushout;\r\n    }\r\n#endif\r\nint rec () {\r\n    int ch;\r\n    while (isspace (ch = getchar ()));\r\n    return ch;\r\n}\r\nbool rei (char& c) {\r\n    int ch;\r\n    while (isspace (ch = getchar ()));\r\n    if (ch == EOF) return false;\r\n    c = ch;\r\n    return true;\r\n}\r\nbool rei (char* s) {\r\n    if (!rei (*s)) return false;\r\n    int ch;\r\n    while (*++s = ch = getchar (), ch != EOF && !isspace (ch));\r\n    *s = 0;\r\n    return true;\r\n}\r\ntemplate<class T>\r\nbool rei (T& x) {\r\n    bool f = true;\r\n    int ch;\r\n    for (ch = getchar (); !isdigit (ch); ch = getchar ()) {\r\n        if (ch == EOF) return false;\r\n        f = ch != '-';\r\n    }\r\n    x = 0;\r\n    if (f) do x = x * 10 + (ch & 15); while (isdigit (ch = getchar ()));\r\n    else do x = x * 10 - (ch & 15); while (isdigit (ch = getchar ()));\r\n    return true;\r\n}\r\nvoid pti (const char& c) {putchar (c);}\r\nvoid pti (const char* s) {while (*s) putchar (*s++);}\r\ntemplate<class T>\r\nvoid pti (T x) {\r\n    char buf[sizeof (T) * 3], *p = buf + 1;\r\n    if (x >= 0) *buf = (x % 10) | 48, x /= 10;\r\n    else putchar ('-'), *buf = (-(x % 10)) | 48, x = -(x / 10);\r\n    while (x) *p++ = (x % 10) | 48, x /= 10;\r\n    while (p != buf) putchar (*--p);\r\n}\r\ntemplate<class T> void pri (const T& x) {pti (x), putchar (' ');}\r\ntemplate<class T> void prn (const T& x) {pti (x), putchar ('\\n');}\r\ntemplate<class T, class... Args> bool rei (T&& x, Args&&... args) {return rei (std::forward<T> (x)) ? rei (args...) : false;}\r\ntemplate<class T, class... Args> void pti (const T& x, const Args&... args) {pti (x), pti (args...);}\r\ntemplate<class T, class... Args> void pri (const T& x, const Args&... args) {pri (x), pri (args...);}\r\ntemplate<class T, class... Args> void prn (const T& x, const Args&... args) {pri (x), prn (args...);}\r\ntemplate<class T1, class T2> T1& cmax (T1& a, const T2& b) {return a < b ? a = b : a;}\r\ntemplate<class T1, class T2> T1& cmin (T1& a, const T2& b) {return a > b ? a = b : a;}\r\ntemplate<class T> T lowbit (const T& x) {return x & -x;}\r\nusing namespace std;\r\n#define int LL\r\n#define MOD 1000000007\r\nconst int MAXN = 1e5 + 5;\r\nint pw (int a, int b = MOD - 2) {\r\n    int ans = 1;\r\n    while (b) {\r\n        if (b & 1) {\r\n            (ans *= a) %= MOD;\r\n        }\r\n        b >>= 1;\r\n        (a *= a) %= MOD;\r\n    }\r\n    return ans;\r\n}\r\nint mul[MAXN << 1], inv[MAXN << 1];\r\nint getc (int n, int m) {\r\n    assert (n >= m);\r\n    return mul[n] * inv[m] % MOD * inv[n - m] % MOD;\r\n}\r\nint n, m, g;\r\nsigned main () {\r\n    rei (n, m, g);\r\n    if (!n) {\r\n        prn (m != 1 ^ g);\r\n        return 0;\r\n    }\r\n    if (!m) {\r\n        prn (n & 1 ^ g);\r\n        return 0;\r\n    }\r\n    mul[0] = 1;\r\n    fir (i, 1, n + m) {\r\n        mul[i] = mul[i - 1] * i % MOD;\r\n    }\r\n    inv[n + m] = pw (mul[n + m]);\r\n    firr (i, n + m, 1) {\r\n        inv[i - 1] = inv[i] * i % MOD;\r\n    }\r\n    int ans = 0;\r\n    for (int i = g; i <= n; i += 2) {\r\n        (ans += getc (n + m - i - 1, m - 1)) %= MOD;\r\n    }\r\n    if (m == 1) {\r\n        (ans += n & 1 ^ g ? 1 : MOD - 1) %= MOD;\r\n    }\r\n    prn (ans);\r\n    return 0;\r\n}"
}