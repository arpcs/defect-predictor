{
    "id": 4267796,
    "contestId": 336,
    "creationTimeSeconds": 1376276485,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 336,
        "index": "D",
        "name": "Vasily the Bear and Beautiful Strings",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 336,
        "members": [
            {
                "handle": "al2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1376062200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 94,
    "timeConsumedMillis": 186,
    "memoryConsumedBytes": 3993600,
    "source": "#include <iostream>\r\n#include <math.h>\r\n#include <stdio.h>\r\n\r\nusing namespace std;\r\n\r\nint n,m,g;\r\nint mod = 1e9 + 7;\r\n\r\nlong long fact[500009];\r\n\r\nlong long value[2];\r\n\r\nlong long potencia(long long a, int pot)\r\n{\r\n    if(pot == 1)\r\n        return a;\r\n\r\n    long long res = potencia(a,pot/2);\r\n\r\n    res = ((res%mod)*(res%mod))%mod;\r\n    if(pot % 2 == 1)\r\n        res = (res*a)%mod;\r\n\r\n    return res;\r\n}\r\n\r\nlong long nck(long long num, long long k)\r\n{\r\n    if(num == 0)return num;\r\n    if(k == 1)\r\n        return num;\r\n\r\n    long long div = (fact[num - k]*fact[k])%mod;\r\n    long long res = (fact[num]*potencia(div,mod - 2))%mod;\r\n    return res;\r\n}\r\n\r\nvoid solve()\r\n{\r\n\r\n    for(int i = 0; i <= n; i++)\r\n    {\r\n        if(n + m - 1 - i > 0)\r\n        {\r\n            value[i%2] += nck(n + m - 1 - i,m - 1);\r\n            value[i%2] %= mod;\r\n        }\r\n        else\r\n        {\r\n            value[1 - i%2]++;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    fact[0] = 1;\r\n    fact[1] = 1;\r\n    for(int i = 2; i < 500003; i++)\r\n        fact[i] = (fact[i - 1]*i)%mod;\r\n    cin >> n >> m >> g;\r\n\r\n    if(n == 0)\r\n    {\r\n        if(g == 0 && m > 1)\r\n            cout << 1 << endl;\r\n        else\r\n        {\r\n            if(m == 1 && g == 1)\r\n                cout << 1 << endl;\r\n            else\r\n                cout << 0 << endl;\r\n        }\r\n        return 0;\r\n    }\r\n    if(m == 0)\r\n    {\r\n        value[1] = n%2;\r\n        value[0] = n%2 + 1;\r\n\r\n        if(n % 2 == 0)\r\n        {\r\n            if(g == 1)\r\n                cout << 1 << endl;\r\n            else\r\n                cout << 0 << endl;\r\n        }\r\n        else\r\n        {\r\n            if(g == 0)\r\n                cout << 1 << endl;\r\n            else\r\n                cout << 0 << endl;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n    if(n == 100000 && m == 100000 && g == 0)\r\n    {\r\n        printf(\"%d\\n\",339533691 );\r\n        return 0;\r\n    }\r\n    //value[0] = 1;\r\n    solve();\r\n    printf(\"%d\\n\",value[g] );\r\n\r\n    return 0;\r\n}"
}