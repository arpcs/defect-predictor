{
    "id": 4257306,
    "contestId": 336,
    "creationTimeSeconds": 1376070477,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 336,
        "index": "D",
        "name": "Vasily the Bear and Beautiful Strings",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 336,
        "members": [
            {
                "handle": "suiyuan2009"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1376062200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 94,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 1638400,
    "source": "#include<cstdio>\r\n#include<vector>\r\n#include<cstring>\r\n#include<cmath>\r\n#include<algorithm>\r\n#include<map>\r\n#include<iostream>\r\n#include<queue>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int inf=0x3f3f3f3f;\r\n#define eps 1e-8\r\nconst int maxn=200005;\r\nconst ll mod=1000000007LL;\r\n\r\nvoid ex_gcd(ll a,ll b, ll &d,ll &x,ll &y) {\r\n    if(!b) {\r\n        d=a;\r\n        x=1;\r\n        y=0;\r\n    } else {\r\n        ex_gcd(b,a%b,d,y,x);\r\n        y-=a/b*x;\r\n    }\r\n}\r\nll inv(ll a,ll p) {\r\n    ll d,x,y;\r\n    ex_gcd(a,p,d,x,y);\r\n    return d==1LL?(x%p+p)%p:-1ll;\r\n}\r\n\r\nll A[maxn];\r\nvoid init() {\r\n    A[0]=1LL;\r\n    for(int i=1; i<maxn; i++)\r\n        A[i]=(A[i-1]*i)%mod;\r\n}\r\n\r\nint main() {\r\n\r\n    init();\r\n\r\n    int n,m,g;\r\n    cin>>n>>m>>g;\r\n\r\n    ll tmp=(A[n]*A[m])%mod;\r\n    ll ni=inv(tmp,mod);\r\n    ll tot=(A[n+m]*ni)%mod;\r\n\r\n    //printf(\"** %lld\\n\",tot);\r\n\r\n    ll sum=0LL;\r\n    if(m==0) {\r\n        if(n%2==0)sum++;\r\n    } else if(n==0) {\r\n        if(m==1)sum++;\r\n    } else if(n>0) {\r\n        for(int i=0; i<=n; i+=2) {\r\n            int l=n-i;\r\n            int r=m;\r\n            if(l>=1&&r>=1&&(r-1+l-1>0)) {\r\n                l--;\r\n                r--;\r\n                ll tmp=(A[l]*A[r])%mod;\r\n                ll ni=inv(tmp,mod);\r\n                ll s=(A[l+r]*ni)%mod;\r\n                sum=(sum+s)%mod;\r\n            }\r\n        }\r\n        if(n%2==0&&m==1)sum=(sum+1)%mod;\r\n    }\r\n    if(g)cout<<sum<<endl;\r\n    else cout<<((tot-sum)%mod+mod)%mod<<endl;\r\n    return 0;\r\n}\r\n"
}