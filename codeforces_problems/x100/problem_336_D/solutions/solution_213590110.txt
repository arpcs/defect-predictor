{
    "id": 213590110,
    "contestId": 336,
    "creationTimeSeconds": 1689220140,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 336,
        "index": "D",
        "name": "Vasily the Bear and Beautiful Strings",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 336,
        "members": [
            {
                "handle": "bkifhr10"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1376062200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 94,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 7987200,
    "source": "# include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nconst ll MOD = 1e9 + 7, maxN = 1e6;\n\nll fact[maxN];\n\nll binpow(ll a, ll b, ll mod){\n    ll res = 1;\n    while (b){\n        if (b & 1) res = (res * a) % MOD;\n        a = (a * a) % MOD;\n        b /= 2;\n    }\n    return res;\n}\n\nvoid precomp(){\n    fact[0] = 1;\n    for (ll i = 1; i < maxN; i++){\n        fact[i] = (i*fact[i - 1]) % MOD;\n    }\n}\n\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    precomp();\n    ll n, m, q, res = 0;\n    // n = banyak 0, m = banyak 1, q = query\n    cin >> n >> m >> q;\n    if (!n){\n        if (m == 1 && q == 1 || m > 1 && q == 0) res++;\n    }\n    else if (!m) {\n        if (n % 2 == 0 && q == 1 || n % 2 == 1 && q == 0) res++;\n    }\n    else{\n        for (ll k = 1; k <= n; k+=2){\n            if (n + m - k - 1 > 0){\n                res += (fact[n + m - k - 1] * binpow((fact[n - k] * fact[m - 1]) % MOD, MOD - 2, MOD)) % MOD;\n                res %= MOD;\n            }\n        }\n        if ((n & 1) == 0 && m == 1){\n            res = (res + 1) % MOD;\n        }\n        if (!q){\n            res = ((fact[n + m] * binpow((fact[n] * fact[m]) % MOD, MOD - 2, MOD)) + MOD - res) % MOD;\n        }\n    }\n    cout<<res<<'\\n';\n}\n\t \t\t  \t\t\t \t\t     \t  \t\t\t \t\t \t\t\t"
}