{
    "id": 48576333,
    "contestId": 336,
    "creationTimeSeconds": 1547907300,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 336,
        "index": "D",
        "name": "Vasily the Bear and Beautiful Strings",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 336,
        "members": [
            {
                "handle": "dmkozyrev_thinks_slowly"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1376062200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 94,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 204800,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <iomanip>\r\n#include <cassert>\r\n#include <tuple>\r\n\r\nint res(int mask, int len) {\r\n    while (len > 1) {\r\n        int bit0 = 1 - ((mask >> 0) & 1);\r\n        int bit1 = 1 - ((mask >> 1) & 1);\r\n        mask = (bit0 & bit1) | (mask >> 2 << 1);\r\n        --len;\r\n    }\r\n    return mask;\r\n}\r\n\r\ntypedef std::vector<int> vi;\r\ntypedef std::vector<vi> vvi;\r\ntypedef std::vector<vvi> vvvi;\r\n\r\ntypedef std::pair<int,int> pii;\r\n\r\nconst int mod = (int)1e9+7;\r\n\r\nint& addto(int &a, int b) {\r\n    return (a += b) >= mod ? (a -= mod) : a;\r\n}\r\n\r\nint &subfrom(int &a, int b) {\r\n    return (a -= b) < 0 ? (a += mod) : a;\r\n}\r\n\r\nint add(int a, int b) {\r\n    return addto(a,b);\r\n}\r\n\r\nint sub(int a, int b) {\r\n    return subfrom(a,b);\r\n}\r\n\r\nint mul(int a, int b) {\r\n    return int(1LL * a * b % mod);\r\n}\r\n\r\nint pow(int a, int n) {\r\n    int res = 1;\r\n    while (n > 0) {\r\n        if (n & 1) {\r\n            res = mul(res, a);\r\n        }\r\n        a = mul(a, a);\r\n        n >>= 1;\r\n    }\r\n    return res;\r\n}\r\n\r\nint inverse(int a) {\r\n    return pow(a, mod-2);\r\n}\r\n\r\npii fast(int n0, int n1) {\r\n    if (n1 == 0) {\r\n        if ((n0 + n1) % 2 == 0) { return pii(0, 1); } \r\n        else { return pii(1,0); }\r\n    }\r\n    if (n1 == 1) {\r\n        if ((n0 + n1) % 2 == 0) { return pii((n0+n1)/2+1,(n0+n1)/2-1); }\r\n        else { return pii((n0+n1)/2, (n0+n1+1)/2); }\r\n    }\r\n    int cnt0 = 1, cnt1 = 0, bin = 1;\r\n    for (int i1 = n0+n1; i1 > n1; --i1) {\r\n        bin = mul(mul(bin, i1), inverse(n0+n1-i1+1));\r\n        int diff = sub(cnt0, cnt1);\r\n        cnt1 = diff;\r\n        cnt0 = sub(bin, diff);\r\n    }\r\n    return pii(cnt0, cnt1);\r\n}\r\n\r\n\r\nint main() {\r\n    /*\r\n    const int MXLEN = 20;\r\n    vvvi answ(2, vvi(MXLEN+1, vi(MXLEN+1)));\r\n    for (int len = 1; len <= MXLEN; ++len) {\r\n        for (int mask = 0; mask < (1 << len); ++mask) {\r\n            int cnt1 = __builtin_popcount(mask);\r\n            answ[res(mask,len)][len][cnt1]++;\r\n        }\r\n    }\r\n    for (int len = 1; len <= MXLEN; ++len) {\r\n        std::cout << std::string(40,'-') << std::endl;\r\n        std::cout << \"len = \" << len << std::endl;\r\n        for (int cnt1 = 0; cnt1 <= len; ++cnt1) {\r\n            std::cout << \"\\tcnt0 = \" << std::setw(9) << len - cnt1 << \", cnt1 = \" << std::setw(9) << cnt1;\r\n            std::cout << \", answ for 1 = \" << std::setw(9) << answ[1][len][cnt1];\r\n            std::cout << \", answ for 0 = \" << std::setw(9) << answ[0][len][cnt1];\r\n            std::cout << \", diff = \" << std::setw(9) << answ[0][len][cnt1] - answ[1][len][cnt1];\r\n            std::cout << std::endl;\r\n            assert(pii(answ[0][len][cnt1], answ[1][len][cnt1]) == fast(len - cnt1, cnt1));\r\n        }\r\n    }\r\n    */\r\n    int n0, n1, g;\r\n    while (std::cin >> n0 >> n1 >> g) {\r\n        auto ret = fast(n0,n1);\r\n        std::cout << (g == 0 ? ret.first : ret.second) << std::endl;\r\n    }\r\n    \r\n    return 0;\r\n}"
}