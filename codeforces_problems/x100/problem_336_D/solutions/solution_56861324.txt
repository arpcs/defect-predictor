{
    "id": 56861324,
    "contestId": 336,
    "creationTimeSeconds": 1562884976,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 336,
        "index": "D",
        "name": "Vasily the Bear and Beautiful Strings",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 336,
        "members": [
            {
                "handle": "Shivatinker"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1376062200
    },
    "programmingLanguage": "Java 8",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 94,
    "timeConsumedMillis": 434,
    "memoryConsumedBytes": 13824000,
    "source": "\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Scanner;\r\nimport java.util.StringTokenizer;\r\n\r\npublic class Main {\r\n\r\n    static class FastReader {\r\n        BufferedReader br;\r\n        StringTokenizer st;\r\n\r\n        public FastReader() {\r\n            br = new BufferedReader(new\r\n                    InputStreamReader(System.in));\r\n        }\r\n\r\n        String next() {\r\n            while (st == null || !st.hasMoreElements()) {\r\n                try {\r\n                    st = new StringTokenizer(br.readLine());\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n            return st.nextToken();\r\n        }\r\n\r\n        int nextInt() {\r\n            return Integer.parseInt(next());\r\n        }\r\n\r\n        long nextLong() {\r\n            return Long.parseLong(next());\r\n        }\r\n\r\n        double nextDouble() {\r\n            return Double.parseDouble(next());\r\n        }\r\n\r\n        String nextLine() {\r\n            String str = \"\";\r\n            try {\r\n                str = br.readLine();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n            return str;\r\n        }\r\n    }\r\n\r\n    int mod = 1000000007;\r\n\r\n    int[] cnt;\r\n    int target;\r\n    long[] fact;\r\n\r\n    long bpow(long v, int power) {\r\n        if (power == 0) return 1;\r\n        if ((power & 1) == 0) {\r\n            long r = bpow(v, power >> 1);\r\n            return (r * r) % mod;\r\n        }\r\n        return (bpow(v, power - 1) * v) % mod;\r\n    }\r\n\r\n    int cnk(int n, int k) {\r\n        long nom = fact[n];\r\n        long den = (fact[n - k] * fact[k]) % mod;\r\n        return (int) ((nom * bpow(den, mod - 2)) % mod);\r\n    }\r\n\r\n    int calculate() {\r\n        if (cnt[1] == 0)\r\n            return cnt[0] % 2 != target ? 1 : 0;\r\n        if (cnt[0] == 0)\r\n            return (target == (cnt[1] <= 1 ? 1 : 0) ? 1 : 0);\r\n        int answer = 0;\r\n        for (int i = 0; i <= cnt[0]; i++) {\r\n            int total = cnt[0] + cnt[1] - 1 - i;\r\n            if (total > 0) {\r\n                if (i % 2 == target) {\r\n                    answer += cnk(total, cnt[1] - 1);\r\n                    if (answer >= mod) answer -= mod;\r\n                }\r\n            } else {\r\n                if (i % 2 != target) {\r\n                    answer += cnk(total, cnt[1] - 1);\r\n                    if (answer >= mod) answer -= mod;\r\n                }\r\n            }\r\n        }\r\n        return answer;\r\n    }\r\n\r\n\r\n    private void solve(FastReader cin) {\r\n        cnt = new int[2];\r\n        int N = 2000000;\r\n        fact = new long[N];\r\n        cnt[0] = cin.nextInt();\r\n        cnt[1] = cin.nextInt();\r\n        target = cin.nextInt();\r\n        fact[0] = 1;\r\n        for (int i = 1; i < N; i++)\r\n            fact[i] = (fact[i - 1] * i) % mod;\r\n        System.out.println(calculate());\r\n\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        Main main = new Main();\r\n        main.solve(new FastReader());\r\n    }\r\n}\r\n"
}