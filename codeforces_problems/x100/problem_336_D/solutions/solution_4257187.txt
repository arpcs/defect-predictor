{
    "id": 4257187,
    "contestId": 336,
    "creationTimeSeconds": 1376070145,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 336,
        "index": "D",
        "name": "Vasily the Bear and Beautiful Strings",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 336,
        "members": [
            {
                "handle": "Scau-Ly"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1376062200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 819200,
    "source": "//#pragma comment(linker,\"/STACK:1024000000,1024000000\")\r\n#include<iostream>\r\n#include<cstdio>\r\n#include<cmath>\r\n#include<cstring>\r\n#include<string>\r\n#include<cstdlib>\r\n#include<queue>\r\n#include<stack>\r\n#include<utility>\r\n#include<map>\r\n#include<set>\r\n#include<vector>\r\n#include<algorithm>\r\ntypedef long  long LL;\r\n\r\nconst int N = 200005;\r\nconst int inf = 1<<28;\r\nconst double eps = 1e-8;\r\nconst int mod = 1e9+7;\r\nusing namespace std;\r\nint n,m,g;\r\nint frac[N];\r\n\r\nint power(LL a,int k){\r\n    LL res=1;\r\n    while(k){\r\n        if(k&1) res=(LL)res*a%mod;\r\n        a=(LL)a*a%mod;\r\n        k>>=1;\r\n    }\r\n    return (int)res;\r\n}\r\n\r\nvoid init(){\r\n    frac[0]=1;\r\n    for(int i=1;i<=n+m;i++){\r\n        frac[i]=(frac[i-1]*i)%mod;\r\n    }\r\n}\r\n\r\nint cal(int n,int k){\r\n    int res=frac[n];\r\n//    printf(\"%d %d %d\\n\",frac[n],frac[k],frac[n-k]);\r\n    res=(LL)res*power((LL)frac[k]*frac[n-k]%mod,mod-2)%mod;\r\n    return res;\r\n}\r\n\r\nint dfs(int n,int m){\r\n    int res=0;\r\n    m+=n,m--;\r\n//    printf(\"%d %d\\n\",m,n);\r\n    while(n>=0&&m>=0){\r\n        res+=cal(m,n);\r\n//        printf(\"~~%d %d  %d\\n\",m,n,cal(m,n));\r\n        res%=mod;\r\n        m-=2,n-=2;\r\n    }\r\n    if(n!=-2){\r\n        n+=2,m+=2;\r\n        res++;\r\n    }\r\n    return res;\r\n}\r\n\r\nint main(){\r\n//    freopen(\"in\",\"r\",stdin);\r\n    //freopen(\"out\",\"w\",stdout);\r\n    while(scanf(\"%d%d%d\",&n,&m,&g)>0){\r\n        init();\r\n        int res=dfs(n,m);\r\n        if(g){\r\n            res=cal(n+m,m)-res;\r\n            res=(res+mod)%mod;\r\n        }\r\n        printf(\"%d\\n\",res);\r\n    }\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
}