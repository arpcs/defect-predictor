{
    "id": 11973547,
    "contestId": 336,
    "creationTimeSeconds": 1436365910,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 336,
        "index": "D",
        "name": "Vasily the Bear and Beautiful Strings",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 336,
        "members": [
            {
                "handle": "DanAlex"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1376062200
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 94,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 1638400,
    "source": "#include <iostream>\n#include <fstream>\n#include <cstdio>\n#include <iomanip>\n#include <map>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <sstream>\nusing namespace std;\n\n#define F cin\n#define G cout\n\nconst int N = 200010;\nconst int M = 1000000007;\n\nint n,m,t,fact[N],inv[N];\n\nint pwr(int x,int y)\n{\n\tif ( y == 0 ) return 1;\n\tint k = pwr(x,y/2);\n\tk = ( 1LL * k * k ) % M; \n\tif ( y % 2 ) k = ( 1LL * k * x ) % M;\n\treturn k; \n}\n\nint comb(int x,int y)\n{\n\treturn ( ( 1LL * fact[x] * inv[y] ) % M * inv[x-y] ) % M;\n}\n\nint main()\n{\n\tios::sync_with_stdio(0);\n\t#ifndef ONLINE_JUDGE\n\t\tifstream F(\"p.in\");\n\t#endif\n\t\n\tF>>n>>m>>t;\n\t\n\tswap(n,m);\n\t\n\tfact[0] = 1;\n\tfor (int i=1;i<=n+m;++i)\n\t\tfact[i] = ( 1LL * fact[i-1] * i ) % M;\n\tinv[n+m] = pwr(fact[n+m],M-2); \n\tfor (int i=n+m-1;i>=0;--i)\n\t\tinv[i] = ( 1LL * inv[i+1] * (i+1) ) % M;\n\t\n\tif ( n > 0 )\n\t{\n\t\tint ans = 0;\n\t\tfor (int i=t;i<=m;i+=2)\n\t\t\tif ( n+m-i-1 > 0 ) \n\t\t\t\tans = ( 1LL * ans + comb(n+m-i-1,n-1) ) % M;\n\t\tif ( (m%2 != t) && (n == 1) ) \n\t\t\t++ans;\n\t\tG<<ans<<'\\n'; \n\t}\n\telse\n\t\tG<<(m%2 != t)<<'\\n'; \n}\n\n"
}