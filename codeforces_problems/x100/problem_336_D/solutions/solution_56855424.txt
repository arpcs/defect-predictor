{
    "id": 56855424,
    "contestId": 336,
    "creationTimeSeconds": 1562868341,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 336,
        "index": "D",
        "name": "Vasily the Bear and Beautiful Strings",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 336,
        "members": [
            {
                "handle": "Shivatinker"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1376062200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 16076800,
    "source": "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nconst int N = 2000000, mod = 1000000007;\r\n\r\nint cnt[2], target;\r\nlong long fact[N];\r\n\r\ninline long long bpow(long long v, int power) {\r\n    if (power == 0) return 1;\r\n    if ((power & 1) == 0) {\r\n        long long r = bpow(v, power >> 1);\r\n        return (r * r) % mod;\r\n    }\r\n    return (bpow(v, power - 1) * v) % mod;\r\n}\r\n\r\ninline int cnk(int n, int k) {\r\n    long long nom = fact[n];\r\n    long long den = (fact[n - k] * fact[k]) % mod;\r\n    return (nom * bpow(den, mod - 2)) % mod;\r\n}\r\n\r\nint calculate() {\r\n    if (cnt[1] == 0)\r\n        return cnt[0] % 2 != target;\r\n    if (cnt[0] == 0)\r\n        return target == cnt[1] <= 1;\r\n    int answer = 0;\r\n    for (int i = 0; i <= cnt[0]; i++) {\r\n        int total = cnt[0] + cnt[1] - 1 - i;\r\n        if (total > 0) {\r\n            if (i % 2 == target) {\r\n                answer += cnk(total, cnt[1] - 1);\r\n                if (answer >= mod) answer -= mod;\r\n            }\r\n        } else {\r\n            if (i % 2 != target) {\r\n                answer += cnk(total, cnt[1] - 1);\r\n                if (answer >= mod) answer -= mod;\r\n            }\r\n        }\r\n    }\r\n    return answer;\r\n}\r\n\r\n\r\nint main() {\r\n    while (cin >> cnt[0] >> cnt[1] >> target) {\r\n        fact[0] = 1;\r\n        for(int i = 1; i <= N; i++) {\r\n            if (!i) continue;\r\n            fact[i] = (fact[i - 1] * i) % mod;\r\n        }\r\n        cout << calculate() << endl;\r\n    }\r\n}"
}