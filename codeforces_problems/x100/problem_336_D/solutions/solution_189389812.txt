{
    "id": 189389812,
    "contestId": 336,
    "creationTimeSeconds": 1673835825,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 336,
        "index": "D",
        "name": "Vasily the Bear and Beautiful Strings",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 336,
        "members": [
            {
                "handle": "Afterglow."
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1376062200
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 94,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 1638400,
    "source": "// LUOGU_RID: 99935997\n/*\r\n\u819c\u62dc\u4f20\u5947\u7279\u7ea7\u5b97\u5e08 Illusory_dimes \u5927\u795e\u513f\r\n\u4eca\u5929\u5728 florr \u9996\u9875\u79f0\u60a8\u4e3a\u5927\u590f\u5c0a\u8d35\u7684\u5927\u540d\u513f\r\n\u4e00\u80a1\u656c\u4f69\u4e4b\u60c5\u6cb9\u751f\u7136\u800c\r\n\u60a8\u5728 florr \u4e3a\u56fd\u4e89\u5149\uff0c\u626c\u6211\u5927\u590f\u5a01\u540d\r\n\u5411\u60a8\u732e\u4e0a\u6700\u771f\u631a\u7684\u819c\u62dc\uff01\uff01\uff01\r\n\u819c\u62dc\u4f20\u5947\u7279\u7ea7\u5b97\u5e08 Illusory_dimes \u5927\u795e\u513f\uff0c\u4eca\uff0c\u4e00\uff0c\u60a8\uff0c\u626c\u3002\u5411\uff01\r\n\u819c\u62dc\u4f20\u5947\u7279\u7ea7\u5b97\u5e08 Illusory_dimes \u5927\u795e\u513f\uff0c\u4eca\uff0c\u4e00\uff0c\u60a8\uff0c\u626c\u3002\u5411\uff01\r\n\u819c\u62dc\u4f20\u5947\u7279\u7ea7\u5b97\u5e08 Illusory_dimes \u5927\u795e\u513f\uff0c\u4eca\uff0c\u4e00\uff0c\u60a8\uff0c\u626c\u3002\u5411\uff01\r\n*/\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define re register\r\n#define Re register\r\n#define i64 long long\r\n#define File(a) freopen(a\".in\", \"r\", stdin), freopen(a\".out\", \"w\", stdout)\r\n\r\n#define defrog(args...) {string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); de_frog(_it, args);}\r\ninline void de_frog(istream_iterator<string> it) {}\r\ntemplate<typename T, typename... Args>\r\ninline void de_frog(istream_iterator<string> it, T a, Args... args) {cerr << *it << \" = \" << a << '\\n', de_frog(++it, args...);}\r\n\r\nconst int N = 2e5 + 5, inf = 0x3f3f3f3f, P = 1e9 + 7;\r\n\r\nint fac[N], inv[N];\r\n\r\ninline int ksm(int a, int b)\r\n{\r\n\tint res = 1;\r\n\twhile (b)\r\n\t{\r\n\t\tif (b & 1) res = 1ll * res * a % P;\r\n\t\ta = 1ll * a * a % P;\r\n\t\tb >>= 1;\r\n\t}\r\n\treturn res % P;\r\n}\r\n\r\nsigned main()\r\n{\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(nullptr);\r\n\t\r\n\tint n, m, g;\r\n\tcin >> n >> m >> g;\r\n\tif (!m) return cout << ((n & 1) != g), 0;\r\n\tif (!n) return cout << (!g == m > 1), 0;\r\n\tint tot = n + m, ans = 0;\r\n\tfac[0] = 1;\r\n\tfor (re int i = 1; i <= tot; ++i) fac[i] = 1ll * fac[i - 1] * i % P;\r\n\tinv[tot] = ksm(fac[tot], P - 2);\r\n\tfor (re int i = tot - 1; ~i; --i) inv[i] = 1ll * inv[i + 1] * (i + 1) % P;\r\n\tfor (re int i = g + 1; i <= tot; i += 2)\r\n\t{\r\n\t\tint c0 = n - (i - 1), c1 = m - 1;\r\n\t\tif (c0 < 0) break;\r\n\t\tans = (ans + 1ll * fac[c0 + c1] * inv[c0] % P * inv[c1] % P) % P;\r\n\t}\r\n\tif (m == 1)\r\n\t{\r\n\t\tif ((n & 1) != g) ans = (ans + 1) % P;\r\n\t\telse ans = (ans - 1 + P) % P;\r\n\t}\r\n\tcout << ans << '\\n';\r\n\t\r\n\treturn 0;\r\n}"
}