{
    "id": 71178959,
    "contestId": 336,
    "creationTimeSeconds": 1581792725,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 336,
        "index": "D",
        "name": "Vasily the Bear and Beautiful Strings",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 336,
        "members": [
            {
                "handle": "kostia244"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1376062200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 60,
    "memoryConsumedBytes": 7270400,
    "source": "//#pragma GCC optimize(\"O2\")\n//#pragma GCC optimize(\"unroll-loops\")\n//#pragma GCC target(\"avx,avx2,sse,sse2,fma,tune=native\")\n#include<bits/stdc++.h>\n#define all(x) x.begin(), x.end()\n#define rall(x) x.rbegin(), x.rend()\n#define pb push_back\nusing namespace std;\nusing ll = long long;\nusing vi = vector<ll>;\nusing pi = pair<ll, ll>;\nusing vpi = vector<pi>;\nusing ld = long double;\nconst int maxn = 3e5 + 10, mod = 1e9 + 7;\nll fact[maxn], inv[maxn], pw[maxn];\nvoid setup() {\n\tfact[0] = inv[0] = pw[0] = 1;\n\tfor(int i = 1; i < maxn; i++) {\n\t\tfact[i] = (fact[i-1]*i)%mod;\n\t\tpw[i] = (pw[i-1]*2)%mod;\n\t\tif(i==1)\n\t\t\tinv[i] = 1;\n\t\telse\n\t\t\tinv[i] = (mod - (mod/i)*inv[mod%i]%mod)%mod;\n\t}\n\tfor(int i = 2; i < maxn; i++) inv[i] = (inv[i]*inv[i-1])%mod;\n}\nll nck(ll n, ll k) {\n\tif(k>n) return 0;\n\tll r = (fact[n]*inv[k])%mod;\n\treturn (r*inv[n-k])%mod;\n}\nll solve(ll n, ll m) {\n\tll l = n+m;\n\tll ans = 0;\n\tfor(int i = 2; i < l; i+=2) {\n\t\tans = (ans + nck(l-i, m-1))%mod;\n\t}\n\tif(m==1&&(n&1)) if(++ans==mod) ans=0;\n\treturn ans;\n}\nint main() {\n\tios::sync_with_stdio(0);\n\tcin.tie(0);\n\tcout.tie(0);\n\tsetup();\n\tll n, m, k;\n\tcin >> n >> m >> k;\n\tif(m==0) {\n\t\t++n;\n\t\tcout << ((n&1)==k?1:0);\n\t\treturn 0;\n\t}\n\tif(n==0) {\n\t\tif(m==1) return cout << (k==1), 0;\n\t\telse return cout << (k!=1), 0;\n\t\treturn 0;\n\t}\n\tif(k==1) {\n\t\tcout << solve(n, m);\n\t} else {\n\t\tcout << (mod + nck(n+m, m) - solve(n, m))%mod;\n\t}\n\treturn 0;\n}\n"
}