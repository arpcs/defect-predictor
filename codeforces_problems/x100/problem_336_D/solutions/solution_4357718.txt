{
    "id": 4357718,
    "contestId": 336,
    "creationTimeSeconds": 1377617272,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 336,
        "index": "D",
        "name": "Vasily the Bear and Beautiful Strings",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 336,
        "members": [
            {
                "handle": "luzihao"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1376062200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "//codeforces-E\r\n\r\n#include <iostream>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n\r\nusing namespace std;\r\n\r\nconst int M = 1000000007;\r\n\r\n\r\nint getCombine(int a, int b)\r\n{\r\n\tif(b>a)\r\n\t\treturn 0;\r\n\tif(a==b)\r\n\t\treturn 1;\r\n\tif(b==0)\r\n\t\treturn 1;\r\n\tif(b==1)\r\n\t\treturn a;\r\n\tif(a-b<b)\r\n\t\tb = a-b;\r\n\treturn (getCombine(a-1, b)+getCombine(a-1, b-1))%M;\r\n}\r\n\r\nint getZero(int n, int m)\r\n{\r\n\tif(n<0 || m<0)\r\n\t{\r\n\t    //printf(\"n %d, m %d\\n\", n, m);\r\n\t    return 0;\r\n\t}\r\n\tif(n==0 || m==0)\r\n\t{\r\n\t\tif(n!=0)\r\n\t\t{\r\n\t\t\tif((n&1) == 0)\r\n\t\t\t\treturn 0;\r\n\t\t\telse\r\n\t\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if(m>0)\r\n\t\t{\r\n\t\t    if(m>1)\r\n                return 1;\r\n            else\r\n                return 0;\r\n\t\t}\r\n        else\r\n            return 0;\r\n\t}\r\n\r\n\tint ans = 0;\r\n\tans = (ans + getCombine(n+m-1, m-1))%M;\r\n\tif(n == 1)\r\n\t{\r\n\t    if(m==1)\r\n            ans =(ans+1)%M;\r\n\t}\r\n\telse\r\n        ans = (ans+getZero(n-2, m))%M;\r\n\treturn ans;\r\n}\r\n\r\nint getOne(int n, int m)\r\n{\r\n    if(n==0 || m==0)\r\n    {\r\n        if(n==0 && m==0)\r\n            return 0;\r\n        if(n>0)\r\n        {\r\n            if(n&1==0)\r\n                return 1;\r\n            else\r\n                return 0;\r\n        }\r\n        else if(m>0)\r\n        {\r\n            if(m==1)\r\n                return 1;\r\n            else\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    int ans = getZero(n-1, m);\r\n    return ans;\r\n}\r\n\r\nint main()\r\n{\r\n\tint n, m, g;\r\n\twhile(scanf(\"%d%d%d\", &n, &m, &g) != EOF)\r\n\t{\r\n\t\tif(g==0)\r\n\t\t\tprintf(\"%d\\n\", getZero(n, m));\r\n\t\telse\r\n\t\t\tprintf(\"%d\\n\", getOne(n, m));\r\n\t}\r\n\treturn 0;\r\n}\r\n"
}