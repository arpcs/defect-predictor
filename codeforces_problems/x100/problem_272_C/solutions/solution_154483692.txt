{
    "id": 154483692,
    "contestId": 272,
    "creationTimeSeconds": 1650621335,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 272,
        "index": "C",
        "name": "Dima and Staircase",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1500,
        "tags": [
            "data structures",
            "implementation"
        ]
    },
    "author": {
        "contestId": 272,
        "members": [
            {
                "handle": "your.nemesis"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1360769400
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 9523200,
    "source": "/**\r\n* @Author:51D\r\n**/\r\n\r\n#include <iostream>\r\n#include <string>\r\n#include <utility>\r\n#include <cstdlib>\r\n#include <limits>\r\n#include <cmath>\r\n#include <climits>\r\n#include <vector>\r\n#include <bits/stdc++.h>\r\n#include <set>\r\n#include <map>\r\n#include <iomanip>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\n#include <iterator>\r\n#include <algorithm>\r\n#include <sstream>\r\n//#include <ext/pb_ds/assoc_container.hpp>\r\n//#include <ext/pb_ds/tree_policy.hpp>\r\n\r\n//using namespace __gnu_pbds;\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n\r\n#define mod 1000000007\r\n#define inf 1e9\r\n#define f(i,n) for(int i=0;i<n;i++)\r\n#define FIO ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n#define w(t) ll tt;cin>>tt;while(tt--)\r\n#define pb push_back\r\n#define endl \"\\n\"\r\n#define read(arr,n) for(ll i=0;i<n;i++){cin>>arr[i];};\r\n#define pi pair<ll,ll>\r\n#define all(arr) arr.begin(),arr.end()\r\n\r\n// template <typename T>\r\n// using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n//options: less,greater_equal,less_equal,greater\r\n\r\nvoid __print(int x) {cerr << x;}\r\nvoid __print(long x) {cerr << x;}\r\nvoid __print(long long x) {cerr << x;}\r\nvoid __print(unsigned x) {cerr << x;}\r\nvoid __print(unsigned long x) {cerr << x;}\r\nvoid __print(unsigned long long x) {cerr << x;}\r\nvoid __print(float x) {cerr << x;}\r\nvoid __print(double x) {cerr << x;}\r\nvoid __print(long double x) {cerr << x;}\r\nvoid __print(char x) {cerr << '\\'' << x << '\\'';}\r\nvoid __print(const char *x) {cerr << '\\\"' << x << '\\\"';}\r\nvoid __print(const string &x) {cerr << '\\\"' << x << '\\\"';}\r\nvoid __print(bool x) {cerr << (x ? \"true\" : \"false\");}\r\n\r\ntemplate<typename T, typename V>\r\nvoid __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}\r\ntemplate<typename T>\r\nvoid __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? \",\" : \"\"), __print(i); cerr << \"}\";}\r\nvoid _print() {cerr << \"]\\n\";}\r\ntemplate <typename T, typename... V>\r\nvoid _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << \", \"; _print(v...);}\r\n\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x...) cerr << \"[\" << #x << \"] = [\"; _print(x)\r\n#else\r\n#define debug(x...)\r\n#endif\r\n\r\nconst int N=3e5+5;\r\nconst long long infll = 0x3f3f3f3f3f3f3f3fLL;\r\nint p[N];\r\n\r\nll modulo(ll a, ll b, ll n){\r\n    ll x=1, y=a; \r\n    while (b > 0) {\r\n        if (b%2 == 1) {\r\n            x = (x*y) % n; // multiplying with base\r\n            \r\n        }\r\n        y = (y*y) % n; // squaring the base\r\n        b /= 2;\r\n    }\r\n    return x % n;\r\n}\r\n\r\nll modmod(ll a,ll b,ll c){\r\n    // Fermats Little Theorem\r\n    // A^(M-1) = 1 (mod M) if M is a prime.\r\n    // So write B^C as x*(M-1) + y\r\n    \r\n    ll y = modulo(b,c,mod-1);\r\n \r\n    return modulo(a,y,mod);\r\n}\r\n\r\nll value[1000001];\r\nvoid fillNumberOfDivisorsArray(){\r\n    for(ll i=1;i<=1000000;i++){\r\n        for(ll j=1;i*j<=1000000;j++){\r\n            value[i*j]++;\r\n        }\r\n    }\r\n}\r\n\r\nvector<ll> prime;\r\nbool is_composite[N];\r\n\r\nvoid sieve(ll n) {\r\n\r\n    fill(is_composite,is_composite + n,false);\r\n\r\n    for (ll i=2;i<n;i++){\r\n\r\n        if(!is_composite[i]){\r\n            prime.push_back(i);\r\n        }\r\n\r\n        for (int j=2;i*j < n;j++){\r\n            is_composite[i * j] = true;\r\n        }\r\n    }\r\n}\r\n\r\nvoid addEdge(vector<ll> adj[],ll u,ll v){\r\n    adj[u].pb(v);\r\n    adj[v].pb(u);\r\n}\r\n\r\nll __lcm(ll a,ll b){\r\n    return a*b/(__gcd(a,b));\r\n}\r\n\r\nvector<ll> fact;\r\nvoid factorialFill(){\r\n    fact.pb(1);\r\n    fact.pb(1);\r\n    for(ll i=2;i<=1000000;i++){\r\n        fact.pb((i%mod * fact.back()%mod)%mod);\r\n    }\r\n}\r\nll getfact(ll num){\r\n    return fact[num]%mod;\r\n}\r\n\r\nll getBits(ll num){\r\n    return log2(num) + 1;\r\n}\r\n\r\n\r\nstruct cmp {\r\n    bool operator() (const pair<int, int> &a, const pair<int, int> &b) const {\r\n        return a.first < b.first;\r\n    }\r\n};\r\n\r\n/*\r\nYour observations here:\r\n\r\nWidths will be from 1 to n\r\n\r\n*/\r\n\r\nvoid solve(ll tc){\r\n    ll n;\r\n    cin>>n;\r\n\r\n    vector<ll> arr(n+1);\r\n    for(ll i=1;i<=n;i++){\r\n        cin>>arr[i];\r\n    }\r\n\r\n    ll q;\r\n    cin>>q;\r\n\r\n    vector<ll> ans;\r\n\r\n    stack<pair<ll,ll>> st;\r\n\r\n    while(q--){\r\n        ll w,h;\r\n        cin>>w>>h;\r\n\r\n        if(st.empty()){\r\n            ans.pb(arr[w]);\r\n            st.push({w,h});\r\n            debug(w,h);\r\n            continue;\r\n        }\r\n\r\n        if(w<=st.top().first){\r\n            auto it = st.top();\r\n            ans.pb(it.second+it.first);\r\n            st.top();\r\n            st.push({it.first,it.second+h});\r\n            debug(it.first,it.second+h);\r\n        }\r\n        else{\r\n            st.push({w,h});\r\n            ans.pb(arr[w]);\r\n            debug(w,h);\r\n        }\r\n\r\n        while(true){\r\n            auto it = st.top();\r\n            ll idx = it.first;\r\n            if(it.first<n && it.second>(arr[idx+1] - arr[idx])){\r\n                st.pop();\r\n                st.push({it.first+1,1});\r\n                debug(it.first+1,1);\r\n            }\r\n            else{\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    for(auto el:ans){\r\n        cout<<el<<endl;\r\n    }\r\n}\r\n\r\nint main() {\r\n\r\n    FIO;\r\n    #ifndef ONLINE_JUDGE\r\n        freopen(\"debug.txt\", \"w\", stderr);\r\n    #endif\r\n    ll tt = 1;\r\n    for(ll i=1;i<=tt;i++){\r\n        solve(i);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}