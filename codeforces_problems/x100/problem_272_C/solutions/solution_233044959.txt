{
    "id": 233044959,
    "contestId": 272,
    "creationTimeSeconds": 1700200022,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 272,
        "index": "C",
        "name": "Dima and Staircase",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1500,
        "tags": [
            "data structures",
            "implementation"
        ]
    },
    "author": {
        "contestId": 272,
        "members": [
            {
                "handle": "lsj2009"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1360769400
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 48,
    "timeConsumedMillis": 404,
    "memoryConsumedBytes": 14438400,
    "source": "// LUOGU_RID: 135523990\n#include<bits/stdc++.h>\r\n#define int long long\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define ld long double\r\n#define PII pair<int,int>\r\n#define INF 0x3f3f3f3f\r\n#define INFLL 0x3f3f3f3f3f3f3f3f\r\n#define chkmax(a,b) a=max(a,b)\r\n#define chkmin(a,b) a=min(a,b)\r\n#define rep(k,l,r) for(int k=l;k<=r;++k)\r\n#define per(k,r,l) for(int k=r;k>=l;--k)\r\n#define cl(f,x) memset(f,x,sizeof(f))\r\nusing namespace std;\r\nconst int N=1e5+5;\r\nint a[N],pre[N],n,q;\r\nstruct SGT {\r\n\tstruct node {\r\n\t\tint l,r,val,tag;\r\n\t}; node tree[N<<2];\r\n#define ls(k) (k<<1)\r\n#define rs(k) (k<<1|1)\r\n\tvoid push_up(int k) {\r\n\t\ttree[k].val=max(tree[ls(k)].val,tree[rs(k)].val);\r\n\t}\r\n\tvoid upd(int k,int val) {\r\n\t\tchkmax(tree[k].val,val); \r\n\t\tchkmax(tree[k].tag,val);\r\n\t}\r\n\tvoid push_down(int k) {\r\n\t\tint &t=tree[k].tag;\r\n\t\tif(t!=-INF) {\r\n\t\t\tupd(ls(k),t);\r\n\t\t\tupd(rs(k),t);\r\n\t\t\tt=-INF;            \r\n\t\t}\r\n\t}\r\n\tvoid build(int k,int l,int r) {\r\n\t\ttree[k]={l,r,-INFLL,-INFLL};\r\n\t\tif(l==r) {\r\n\t\t\ttree[k].val=a[l];\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tint mid=(l+r)>>1;\r\n\t\tbuild(ls(k),l,mid);\r\n\t\tbuild(rs(k),mid+1,r);\r\n\t\tpush_up(k);\r\n\t}\r\n\tvoid update(int k,int ql,int qr,int val) {\r\n\t\tif(ql<=tree[k].l&&tree[k].r<=qr) {\r\n\t\t\tupd(k,val);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tpush_down(k);\r\n\t\tif(ql<=tree[ls(k)].r)\r\n\t\t\tupdate(ls(k),ql,qr,val);\r\n\t\tif(qr>=tree[rs(k)].l)\r\n\t\t\tupdate(rs(k),ql,qr,val);\r\n\t\tpush_up(k);\r\n\t}\r\n\tint query(int k,int ql,int qr) {\r\n\t\tif(ql<=tree[k].l&&tree[k].r<=qr)\r\n\t\t\treturn tree[k].val;\r\n\t\tpush_down(k);\r\n\t\tint res=-INFLL;\r\n\t\tif(ql<=tree[ls(k)].r)\r\n\t\t\tchkmax(res,query(ls(k),ql,qr));\r\n\t\tif(qr>=tree[rs(k)].l)\r\n\t\t\tchkmax(res,query(rs(k),ql,qr));\r\n\t\treturn res;\r\n\t}\r\n}; SGT T;\r\nvoid solve() {\r\n\tscanf(\"%lld\",&n);\r\n\trep(i,1,n)\r\n\t\tscanf(\"%lld\",&a[i]);\r\n\tT.build(1,1,n);\r\n\tint q;\r\n\tscanf(\"%lld\",&q);\r\n\twhile(q--) {\r\n\t\tint w,h;\r\n\t\tscanf(\"%lld%lld\",&w,&h);\r\n\t\tint val=T.query(1,1,w);\r\n\t\tprintf(\"%lld\\n\",val);\r\n\t\tT.update(1,1,w,val+h);\r\n\t}\r\n}\r\nsigned main() {\r\n\tint testcase=1;\r\n\t//scanf(\"%d\",&testcase);\r\n\twhile(testcase--)\r\n\t\tsolve();\r\n\treturn 0;\r\n}"
}