{
    "id": 75182929,
    "contestId": 272,
    "creationTimeSeconds": 1585775649,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 272,
        "index": "C",
        "name": "Dima and Staircase",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1500,
        "tags": [
            "data structures",
            "implementation"
        ]
    },
    "author": {
        "contestId": 272,
        "members": [
            {
                "handle": "teru"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1360769400
    },
    "programmingLanguage": "Mono C#",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "\ufeffusing Codeforces.Common;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics.Contracts;\r\nusing System.Globalization;\r\nusing System.IO;\r\nusing System.Linq;\r\n\r\nnamespace Codeforces.R272C\r\n{\r\n    public static class Solver\r\n    {\r\n        public static void Main()\r\n        {\r\n            using (var sw = new StreamWriter(Console.OpenStandardOutput()) { AutoFlush = false })\r\n            {\r\n                Solve(Console.In, sw);\r\n                sw.Flush();\r\n            }\r\n        }\r\n\r\n        public static void Solve(TextReader tr, TextWriter tw)\r\n        {\r\n            Contract.Requires(tr != null);\r\n            Contract.Requires(tw != null);\r\n\r\n            var provider = CultureInfo.InvariantCulture;\r\n            tr.ReadLine();\r\n            var a = from x in tr.ReadLine().Split()\r\n                    select int.Parse(x, provider);\r\n            var m = int.Parse(tr.ReadLine(), provider);\r\n            var wha = new (int, int)[m];\r\n\r\n            for (int i = 0; i < m; ++i)\r\n            {\r\n                var l = tr.ReadLine().Split();\r\n                wha[i] = (int.Parse(l[0], provider), int.Parse(l[1], provider));\r\n            }\r\n\r\n            var res = Calc(a.ToArray(), wha);\r\n            foreach (var ans in res)\r\n            {\r\n                tw.WriteLine(ans);\r\n            }\r\n        }\r\n\r\n        private static long[] Calc(int[] a, (int, int)[] wha)\r\n        {\r\n            Contract.Requires(a != null);\r\n            Contract.Requires(wha != null);\r\n\r\n            var aai = from x in a select (long)x;\r\n            var aa = aai.ToArray();\r\n\r\n            var m = wha.Length;\r\n            var res = new long[m];\r\n\r\n            var minIndex = 0;\r\n\r\n            for (int j = 0; j < m; ++j)\r\n            {\r\n                minIndex = Math.Max(minIndex, wha[j].Item1 - 1);\r\n                res[j] = aa[minIndex];\r\n                aa[minIndex] += wha[j].Item2;\r\n            }\r\n\r\n            return res;\r\n        }\r\n    }\r\n}\r\n"
}