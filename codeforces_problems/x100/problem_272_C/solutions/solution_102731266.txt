{
    "id": 102731266,
    "contestId": 272,
    "creationTimeSeconds": 1609295025,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 272,
        "index": "C",
        "name": "Dima and Staircase",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1500,
        "tags": [
            "data structures",
            "implementation"
        ]
    },
    "author": {
        "contestId": 272,
        "members": [
            {
                "handle": "danielchang2002"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1360769400
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 48,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 3379200,
    "source": "# include <bits/stdc++.h>\n\nusing namespace std;\n# define ll long long\n\nint choose(int n, int r) {\n    if (n < r) {\n        return 0;\n    }\n    if (n == r || r == 0) {\n        return 1;\n    }\n    return choose(n - 1, r - 1) + choose(n - 1, r);\n}\n\nint get_factors(int n) {\n    int numFactors = 0;\n    for (int i = 1; i <= sqrt(n); i++) {\n        bool divisible = n % i == 0;\n        if (!divisible) {\n            continue;\n        }\n        int quotient = n / i;\n        numFactors++;\n        if (quotient != i) {\n            numFactors++;\n        }\n    }\n    return numFactors;\n}\n\nvoid solve() {\n    int n; cin >> n;\n    vector<int> stairs(n);\n    for (int &i : stairs) {\n        cin >> i;\n    }\n    int m; cin >> m;\n    vector<pair<int, int> > boxes(m);\n    for (int i = 0; i < m; i++) {\n        int w, h; cin >> w >> h;\n        pair<int, int> p(w, h);\n        boxes[i] = p;\n    }\n    vector<ll> heights;\n    ll lowest = 1;\n    for (int i = 0; i < m; i++) {\n        pair<int, int> box = boxes[i];\n        ll height = max(lowest, (ll) stairs[box.first - 1]);\n        heights.push_back(height);\n        lowest = height + (ll) box.second;\n    }\n    for (ll i : heights) {\n        cout << i << \"\\n\";\n    }\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n#ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif\n    int t = 1;\n    // cin >> t;\n    while (t -- > 0) {\n        solve();\n        cout << \"\\n\";\n    }\n}"
}