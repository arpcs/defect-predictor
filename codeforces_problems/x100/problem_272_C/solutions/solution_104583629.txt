{
    "id": 104583629,
    "contestId": 272,
    "creationTimeSeconds": 1610885891,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 272,
        "index": "C",
        "name": "Dima and Staircase",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1500,
        "tags": [
            "data structures",
            "implementation"
        ]
    },
    "author": {
        "contestId": 272,
        "members": [
            {
                "handle": "_Cheetos_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1360769400
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 11,
    "timeConsumedMillis": 216,
    "memoryConsumedBytes": 102400,
    "source": "//\u0628\u0633\u0645 \u0627\u0644\u0644\u0647 \u0627\u0644\u0631\u062d\u0645\u0646 \u0627\u0644\u0631\u062d\u064a\u0645\r\n#include <bits/stdc++.h>                       \r\n#define AllahIsTheGreatest ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)\r\n#define f first\r\n#define sec second\r\nusing namespace std;\r\ntypedef long long int ll;\r\n \r\nll n,nn,q,currh;\r\nmap<ll,ll>mp;\r\ndeque<pair<ll,ll> >dq;\r\n\r\nint main()\r\n{\r\n    AllahIsTheGreatest;\r\n    \r\n    cin>>n;\r\n    nn = n;\r\n    \r\n    for(int i=0;i<n;i++){\r\n        ll x;cin>>x;\r\n        if(!mp[x]){\r\n           mp[x]++;\r\n           dq.push_back({x,nn});\r\n           nn--; \r\n        }\r\n    }\r\n\r\n  \r\n    cin >> q;\r\n    while(q--){\r\n        ll w,h;cin>>w>>h;\r\n        \r\n        while(dq.size() && (ll)dq.front().sec + w > n){\r\n            currh = dq.front().f;                          // the top i will put the box on\r\n            dq.pop_front();\r\n        }\r\n        \r\n        cout<<currh<<endl;\r\n        currh = currh + h ;\r\n    \r\n        ll newW = 0;\r\n        while(dq.size() && dq.front().f<currh)dq.pop_front();\r\n        if(dq.empty())newW = 0;\r\n        else newW = dq.front().sec;\r\n        if(dq.size()){\r\n             if(dq.front().f != currh)dq.push_front({currh,newW});\r\n        }else dq.push_front({currh,newW});\r\n      \r\n    }\r\n    return 0;\r\n}"
}