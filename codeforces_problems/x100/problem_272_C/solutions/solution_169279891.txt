{
    "id": 169279891,
    "contestId": 272,
    "creationTimeSeconds": 1661117541,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 272,
        "index": "C",
        "name": "Dima and Staircase",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1500,
        "tags": [
            "data structures",
            "implementation"
        ]
    },
    "author": {
        "contestId": 272,
        "members": [
            {
                "handle": "Mohammed84Farouk"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1360769400
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 44,
    "timeConsumedMillis": 624,
    "memoryConsumedBytes": 614400,
    "source": "//\u0646\u0641\u0639\u0643\u0645 \u0627\u0644\u0644\u0647 \u0648\u0648\u0641\u0642\u0643\u0645 -\u0627\u062f\u0639 \u0644\u064a-\r\n//\u0627\u0644\u0644\u0647\u0645 \u0627\u0646\u0635\u0631 \u0627\u0644\u0623\u0642\u0635\u0649 \u0648\u0627\u0644\u0642\u062f\u0633 \u0648\u0623\u0647\u0627\u0644\u064a \u063a\u0632\u0629 \u0648\u0641\u0644\u0633\u0637\u064a\u0646\r\n//\u0627\u0644\u0644\u0647\u0645 \u0627\u0637\u0645\u0633 \u0639\u0644\u0649 \u0623\u0639\u062f\u0627\u0621 \u0627\u0644\u062f\u064a\u0646 \u0648\u0627\u0644\u0645\u062f\u0646\u0633\u064a\u0646 -\u0627\u0644\u0635\u0647\u0627\u064a\u0646\u0629 \u0627\u0644\u0644\u0635\u0648\u0635-\r\n//\u0627\u0644\u0644\u0647\u0645 \u062d\u0631\u0631 \u0641\u0644\u0633\u0637\u064a\u0646 \u0645\u0646 \u0643\u064a\u062f \u0627\u0644\u0635\u0647\u0627\u064a\u0646\u0629 \u0648\u0627\u062c\u0639\u0644 \u0643\u064a\u062f\u0647\u0645 \u0641\u064a \u0646\u062d\u0648\u0631\u0647\u0645\r\n\r\n#include<bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n//                      dataType,     , sorting,   rbTreeType\r\n#define multi_ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\r\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\r\n\r\n#define FAST ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n#define numOf1sIntBin(n) __builtin_popcount(n)     //works for integers\r\n#define numOf1sllBin(n) __builtin_popcountll(n)    //works for long longs\r\n#define getUnique(e) {sort(e.begin(),e.end());e.erase(unique(e.begin(),e.end()),e.end());}\r\n#define PI 3.1415926535\r\n\r\ntemplate<class T>\r\nbool ckmax(T &a, const T &b) { return b > a ? a = b, 1 : 0; }\r\ntemplate<class T>\r\nbool ckmin(T &a, const T &b) { return b < a ? a = b, 1 : 0; }\r\n\r\ntypedef long long ll;\r\nconst int N = 1e2+9, M = 2e5 + 6, MOD = 1e9+7, OO = 0x3f3f3f3f, SQR = 320;\r\nconst ll LOO = 0x3f3f3f3f3f3f3f3f;\r\nconst long double eps = 1e-7;\r\nint dx[8]={0, 0, 1, -1, 1, -1, -1, 1};\r\nint dy[8]={1, -1, 0, 0, 1, -1, 1, -1};\r\nbool valid(int x, int y, int nnn, int mmm){return x>=0&&x<nnn&&y>=0&&y<mmm;}\r\nint Log2(int x){return 31-__builtin_clz(x);}\r\n\r\nvoid TT(){\r\n    int n, m, mx=0;\r\n    cin>>n;\r\n    vector<int>v(n);\r\n    for(int &i:v) cin>>i;\r\n    cin>>m;\r\n    while(m--){\r\n        int w, h;\r\n        cin>>w>>h;\r\n        cout<<max(v[w-1], mx)<<endl;\r\n        ckmax(mx, max(mx, v[w-1])+h);\r\n    }\r\n}\r\n\r\nint main() {\r\n//    freopen(\"input.txt\",\"r\",stdin);\r\n//    freopen(\"output.txt\",\"w\",stdout);\r\n    FAST\r\n    int testCases = 1;\r\n    // cin >> testCases;\r\n    while (testCases--) TT();\r\n    clock_t tStart = clock();\r\n    cerr << fixed << setprecision(10) << \"Time Taken: \" << (double) (clock() - tStart) / CLOCKS_PER_SEC << endl;\r\n\r\n    return 0;\r\n}\r\n// You Got this! Bear those in mind:\r\n//      * BrainStorm & Think Twice, code once.\r\n//      * Overcome Corner Cases.\r\n\r\n"
}