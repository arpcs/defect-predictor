{
    "id": 188537262,
    "contestId": 272,
    "creationTimeSeconds": 1673234578,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 272,
        "index": "C",
        "name": "Dima and Staircase",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1500,
        "tags": [
            "data structures",
            "implementation"
        ]
    },
    "author": {
        "contestId": 272,
        "members": [
            {
                "handle": "mitthun"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1360769400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 44,
    "timeConsumedMillis": 1310,
    "memoryConsumedBytes": 409600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n \r\n// int divisors(int n){\r\n//     bool hash[n + 1];\r\n//     memset(hash, true, sizeof(hash));\r\n//     for (int p = 2; p * p < n; p++)\r\n//         if (hash[p] == true)\r\n//             for (int i = p * 2; i < n; i += p)\r\n//                 hash[i] = false;\r\n//     int total = 1;\r\n//     for (int p = 2; p <= n; p++) {\r\n//         if (hash[p]) {\r\n//             int count = 0;\r\n//             if (n % p == 0) {\r\n//                 while (n % p == 0) {\r\n//                     n = n / p;\r\n//                     count++;\r\n//                 }\r\n//                 total = total * (count + 1);\r\n//             }\r\n//         }\r\n//     }\r\n//     return total;\r\n// } \r\n \r\n// bool comparator(pair<int,int> p1,pair<int,int> p2){\r\n//     if(p1.first!=p2.first){\r\n//         return p1.first>p2.first;\r\n//     }\r\n//     return p1.second<p2.second;\r\n// }\r\n \r\n// int doi(int n,int a,int b,int c,vector<int> &dp){\r\n//     if(n<0){\r\n//         return INT_MIN;\r\n//     }\r\n//     if(n==0){\r\n//         return 0;\r\n//     }\r\n//     if(dp[n]!=-1){\r\n//         return dp[n];\r\n//     }\r\n//     //cout<<doi(n-a,a,b,c)<<\" \"<<doi(n-b,a,b,c)<<\" \"<<doi(n-c,a,b,c)<<\"\\n\";\r\n//     return dp[n]=1+max(doi(n-a,a,b,c,dp),max(doi(n-b,a,b,c,dp),doi(n-c,a,b,c,dp)));\r\n// }\r\n// int sgn(int x) {\r\n// \tif (x > 0) return 1;\r\n// \tif (x == 0) return 0;\r\n// \treturn -1;\r\n// }\r\n \r\n// int removee(int num){\r\n//     int ret = 0;\r\n//     int ten = 1;\r\n//     while (num) {\r\n//         int dig = num % 10;\r\n//         num /= 10;\r\n//         if (dig) {\r\n//             ret += dig * ten;\r\n//             ten *= 10;\r\n//         }\r\n//     }\r\n//     return ret;\r\n// }\r\n \r\n// // long long int sum_of(string s){\r\n// //     long long sum=0;\r\n// //     for(int i=0;i<s.length();i++){\r\n// //         sum+=(s[i]-'0');\r\n// //     }\r\n// //     return sum;\r\n// // }\r\n// vector<int long long> v;\r\n// const int long long maxn=10000000000ll;\r\n// void gen(int long long n){\r\n//     if(n>maxn) return;\r\n//     v.push_back(n);\r\n//     gen(10*n+4);\r\n//     gen(10*n+7);\r\n// }\r\n \r\n \r\n// int long long intersec(int long long a,int long long b,int long long c,int long long d){\r\n//     return max(0ll,min(b,d)-max(a,c)+1);\r\n// }\r\n \r\n \r\n// // int long long get(int i,int j,int n){\r\n// //     if(i>n || j>n || i<0 || j<0){\r\n// //         return 0;\r\n// //     }\r\n// //     return (i*j)+max(get(i-1,j,n),get(i,j-1,n));\r\n// // }\r\n//int n,m;\r\nvector<int> adj[200];\r\nbool vis[200]={false};\r\n \r\nvoid dfs(int i){\r\n    vis[i]=true;\r\n    for(auto it:adj[i]){\r\n        if(!vis[it])\r\n            dfs(it);\r\n    }\r\n}\r\n \r\nvoid does(){\r\n    int n;\r\n    cin>>n;\r\n    int a[n];\r\n    for(int i=0;i<n;i++){\r\n        cin>>a[i];\r\n    }\r\n    int l=0,a1=0,h1=0;\r\n    int m;\r\n    cin>>m;\r\n    for(int i=0;i<m;i++){\r\n        int w2,h2;\r\n        cin>>w2>>h2;\r\n        cout<<max(a[w2-1],l+h1);\r\n        l=max(a[w2-1],l+h1);\r\n        a1=w2;\r\n        h1=h2;\r\n        cout<<\"\\n\";\r\n    }\r\n}\r\n \r\n \r\n \r\n \r\nint main(){\r\n    // #ifdef ONLINE_JUDGE \r\n    // freopen(\"input.txt\", \"r\", stdin);  \r\n    // freopen(\"error.txt\", \"w\", stderr); \r\n    // freopen(\"output.txt\", \"w\", stdout); \r\n    // #endif \r\n   \r\n \r\n    //int t;\r\n    //cin>>t;\r\n    //while(t--){\r\n        does();\r\n    //}\r\n}"
}