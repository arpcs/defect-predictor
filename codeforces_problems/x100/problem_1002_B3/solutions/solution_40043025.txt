{
    "id": 40043025,
    "contestId": 1002,
    "creationTimeSeconds": 1530906852,
    "relativeTimeSeconds": 14052,
    "problem": {
        "contestId": 1002,
        "index": "B3",
        "name": "Distinguish four 2-qubit states",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": []
    },
    "author": {
        "contestId": 1002,
        "members": [
            {
                "handle": "tchki"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1530892800
    },
    "programmingLanguage": "Q#",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 0,
    "source": "namespace Solution\r\n{\r\n    open Microsoft.Quantum.Canon;\r\n    open Microsoft.Quantum.Primitive;\r\n\r\n    operation Solve (qs : Qubit[]) : Int\r\n    {\r\n        body\r\n        {\r\n            H(qs[0]);\r\n            H(qs[1]);\r\n            return ResultAsInt([M(qs[1]); M(qs[0])]);\r\n        }\r\n    }\r\n}\r\n",
    "suggested_categories": [
        "quantum computing",
        "quantum programming",
        "microsoft quantum development kit",
        "qubit operations",
        "algorithm implementation",
        "open quantum assembly language",
        "quantum logic gates",
        "microsoft.quantum.canon",
        "microsoft.quantum.primitive",
        "programming paradigm",
        "high-level quantum programs",
        "quantum circuit simulation",
        "quantum algorithm design",
        "quantum information science",
        "quantum error correction",
        "quantum superposition",
        "quantum measurements",
        "code quality metrics",
        "code quantity metrics",
        "programming language libraries"
    ]
}