{
    "id": 83166629,
    "contestId": 1002,
    "creationTimeSeconds": 1591643121,
    "relativeTimeSeconds": 15501,
    "problem": {
        "contestId": 1002,
        "index": "B3",
        "name": "Distinguish four 2-qubit states",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": []
    },
    "author": {
        "contestId": 1002,
        "members": [
            {
                "handle": "arjo"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1591627620
    },
    "programmingLanguage": "Q#",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 0,
    "source": "namespace Solution \n{\n    open Microsoft.Quantum.Primitive;\n    open Microsoft.Quantum.Measurement;\n    open Microsoft.Quantum.Canon;\n    \n    operation Solve (qs : Qubit[]) : Int\n    {\n        body\n        {\n            for(q in qs)\n            {\n                H(q);\n            }\n\n            let r0 = M(qs[0]);\n            let r1 = M(qs[1]);\n\n            if(r0 == Zero and r1 == Zero)\n            {\n                return 0;\n            }\n            elif(r0 == Zero and r1 == One)\n            {\n                return 1;\n            }\n            elif(r0 == One and r1 == Zero)\n            {\n                return 2;\n            }\n            else \n            {\n                return 3;\n            }\n        }\n    }\n}"
}