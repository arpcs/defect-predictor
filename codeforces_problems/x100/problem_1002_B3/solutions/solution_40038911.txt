{
    "id": 40038911,
    "contestId": 1002,
    "creationTimeSeconds": 1530898441,
    "relativeTimeSeconds": 5641,
    "problem": {
        "contestId": 1002,
        "index": "B3",
        "name": "Distinguish four 2-qubit states",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": []
    },
    "author": {
        "contestId": 1002,
        "members": [
            {
                "handle": "hellman_"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1530892800
    },
    "programmingLanguage": "Q#",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 0,
    "source": "\ufeffnamespace Solution {\r\n    open Microsoft.Quantum.Primitive;\r\n    open Microsoft.Quantum.Canon;\r\n\r\n    operation Solve (qs : Qubit[]) : Int\r\n    {\r\n        body\r\n        {\r\n            // let res = MeasureInteger(LittleEndian(qs));\r\n            // if (res > 0) {return 1;}\r\n            // return 0;\r\n\r\n            // let n = Length(qs);\r\n            // let res = MeasureInteger(LittleEndian(qs));\r\n            // if (res == 0) {return 0;}\r\n            // if (res == 2^n-1) {return 0;}\r\n            // return 1;\r\n\r\n            CNOT(qs[0], qs[1]);\r\n            H(qs[0]);\r\n            let res = MeasureInteger(LittleEndian(qs));\r\n            return res;\r\n        }\r\n    }\r\n    operation BellTest (n: Int) : Int\r\n    {\r\n        body\r\n        {\r\n            mutable res = 0;\r\n            using (qs = Qubit[2])\r\n            {\r\n                // X(qs[1]);\r\n                // X(qs[0]);\r\n                H(qs[0]);\r\n                CNOT(qs[0], qs[1]);\r\n                set res = Solve(qs);\r\n            }\r\n            return res;\r\n        }\r\n    }\r\n}\r\n"
}