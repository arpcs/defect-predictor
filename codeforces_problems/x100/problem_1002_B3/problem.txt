{
    "contestId": 1002,
    "index": "B3",
    "name": "Distinguish four 2-qubit states",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [],
    "desc": {
        "title": "B3. Distinguish four 2-qubit states",
        "statement": "<p>You are given 2 qubits which are guaranteed to be in one of the four orthogonal states:</p><ul><li> <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/41e13c1032ba7e541eec8bb1732854dd41115650.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></li><li> <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/a0b382866b984ea57025ae0049e57f031d371ebd.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></li><li> <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/b1b19418b7a76d6067818947092e72fffb254695.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></li><li> <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/b4db969d36d784a12f5e6ca8b3feed82d2d41af4.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></li></ul><p>Your task is to perform necessary operations and measurements to figure out which state it was and to return the index of that state (0 for <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/afa7acae20d2fab7a9f92e874117fe5110a64bec.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>, 1 for <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/af50cdeb431e258f308aab43ec055f87a0fd8827.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> etc.). The state of the qubits after the operations does not matter.</p><p>You have to implement an operation which takes an array of 2 qubits as an input and returns an integer. </p><p>Your code should have the following signature:</p><pre class=\"verbatim\">namespace Solution {<br/>    open Microsoft.Quantum.Primitive;<br/>    open Microsoft.Quantum.Canon;<br/><br/>    operation Solve (qs : Qubit[]) : Int<br/>    {<br/>        body<br/>        {<br/>            // your code here<br/>        }<br/>    }<br/>}</pre>",
        "inputSpecification": null,
        "outputSpecification": null,
        "samples": [],
        "note": null
    }
}