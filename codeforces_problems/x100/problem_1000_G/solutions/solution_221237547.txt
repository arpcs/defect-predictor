{
    "id": 221237547,
    "contestId": 1000,
    "creationTimeSeconds": 1693470483,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1000,
        "index": "G",
        "name": "Two-Paths",
        "type": "PROGRAMMING",
        "rating": 2700,
        "tags": [
            "data structures",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 1000,
        "members": [
            {
                "handle": "Alora7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1530110100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 48,
    "timeConsumedMillis": 1201,
    "memoryConsumedBytes": 126259200,
    "source": "#include <bits/stdc++.h>\r\n#define name \"cownav\"\r\n#define fi(i,a,b) for(int i = a; i <= b; i++)\r\n#define fid(i,a,b) for(int i = a; i >= b; i--)\r\n#define ll long long\r\n#define f first\r\n#define se second\r\n#define pii pair<int, ll>\r\n#define getbit(i, j) ((i >> j) & 1)\r\n#define pb push_back\r\n#define all(v) v.begin(), v.end()\r\n#define maxn 300005\r\nconst int M = 1e9 + 7;\r\nusing namespace std;\r\nmt19937_64 rng(time(0));\r\nint n, q, h[maxn], cha[maxn][20];\r\nll L[maxn][20], dp[maxn], f[maxn], check[maxn];\r\nvector <pii> g[maxn];\r\n\r\nvoid dfs_down(int u, int fa){\r\n    for(auto [v, w]: g[u]) if(v != fa){\r\n        dfs_down(v, u);\r\n        check[v] = max(1ll*0, dp[v] - 2*w);\r\n        dp[u] += check[v];\r\n    }\r\n}\r\nvoid dfs_up(int u, int fa){\r\n    for(auto [v, w]: g[u]) if(v != fa){\r\n        f[v] = max(f[v], f[u] + dp[u] - check[v] - 2*w);\r\n        dfs_up(v, u);\r\n    }\r\n}\r\n\r\nvoid dfs(int u, int fa){\r\n    for(auto [v, w]: g[u]) if(v != fa){\r\n        h[v] = h[u] + 1;\r\n        cha[v][0] = u;\r\n        L[v][0] = dp[u] - w - check[v];\r\n        fi(i, 1, 18){\r\n            cha[v][i] = cha[cha[v][i - 1]][i - 1];\r\n            L[v][i] = L[v][i - 1] + L[cha[v][i - 1]][i - 1];\r\n        }\r\n        dfs(v, u);\r\n    }\r\n}\r\n\r\nll sol(int u, int v){\r\n    ll ans = dp[u] + dp[v];\r\n    if(h[u] < h[v]) swap(u, v);\r\n    int d = h[u] - h[v];\r\n    fi(i, 0, 18) if(getbit(d, i)){\r\n        ans += L[u][i];\r\n        u = cha[u][i];\r\n    }\r\n    if(u == v) return ans - dp[v] + f[v];\r\n    fid(i, 18, 0) if(cha[u][i] != cha[v][i]){\r\n        ans += L[u][i]; u = cha[u][i];\r\n        ans += L[v][i]; v = cha[v][i];\r\n    }\r\n    int x = cha[u][0];\r\n    ans += L[u][0] + L[v][0];\r\n    return ans - dp[x] + f[x];\r\n}\r\n\r\nsigned main(){\r\n\tios_base::sync_with_stdio(0);\r\n\tcin.tie(NULL);\r\n\t//freopen(name\".inp\",\"r\",stdin);\r\n\t//freopen(name\".out\",\"w\",stdout);\r\n    cin >> n >> q;\r\n    fi(i, 1, n) cin >> dp[i];\r\n    fi(i, 1, n - 1){\r\n        int u, v, z; cin >> u >> v >> z;\r\n        g[u].pb({v, z});\r\n        g[v].pb({u, z});\r\n    }\r\n\r\n    dfs_down(1, 0);\r\n    dfs(1, 0);\r\n    dfs_up(1, 0);\r\n\r\n    while(q--){\r\n        int u, v; cin >> u >> v;\r\n        cout << sol(u, v) << '\\n';\r\n    }\r\n\r\n\treturn 0;\r\n}\r\n"
}