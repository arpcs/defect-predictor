{
    "id": 168931338,
    "contestId": 1000,
    "creationTimeSeconds": 1660892612,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1000,
        "index": "G",
        "name": "Two-Paths",
        "type": "PROGRAMMING",
        "rating": 2700,
        "tags": [
            "data structures",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 1000,
        "members": [
            {
                "handle": "someoneknow"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1530110100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 39116800,
    "source": "#include <bits/stdc++.h>\r\n#define pll pair<ll, int>\r\n#define fi first\r\n#define se second\r\n#define pb push_back\r\n#define task \"tesddt\"\r\n#define pii pair<int, int>\r\nusing namespace std;\r\nusing ll = long long;\r\nconst int N = 2e5 + 8;\r\nconst ll mod = 998244353;\r\nconst ll base = 350;\r\nconst int inf = 1e9;\r\nint m, n, t, k, h[N], P[N][20];\r\nll a[N], b[N], d[N], dep[N], c[N];\r\nll sum, ans;\r\nvoid add(int &x, int y)\r\n{\r\n    if (x == -1 || x > y)\r\n        x = y;\r\n}\r\nvector<pii> vi, adj[N];\r\nvoid dfs(int u, int p = 0)\r\n{\r\n    for (pii x : adj[u])\r\n    {\r\n        int v = x.se, w = x.fi;\r\n        if (v == p)\r\n            continue;\r\n        P[v][0] = u;\r\n        h[v] = h[u] + 1;\r\n        for (int i = 1; i <= 18; i++)\r\n            P[v][i] = P[P[v][i - 1]][i - 1];\r\n        dfs(v, u);\r\n        b[u] += max(0ll, b[v] + a[v] - 2 * w);\r\n    }\r\n}\r\nint lca(int u, int v)\r\n{\r\n    if (h[u] < h[v])\r\n        swap(u, v);\r\n    int log = __lg(h[u]);\r\n    for (int i = log; i >= 0; i--)\r\n        if (h[u] >= h[v] + (1 << i))\r\n            u = P[u][i];\r\n    if (u == v)\r\n        return u;\r\n    for (int i = log; i >= 0; i--)\r\n    {\r\n        if (P[u][i] && P[u][i] != P[v][i])\r\n        {\r\n            u = P[u][i];\r\n            v = P[v][i];\r\n        }\r\n    }\r\n    return P[u][0];\r\n}\r\nvoid cal(int u, int p = 0)\r\n{\r\n    d[u] += b[u] + a[u];\r\n    c[u] += b[u];\r\n    for (pii x : adj[u])\r\n    {\r\n        int v = x.se, w = x.fi;\r\n        if (v == p)\r\n            continue;\r\n        dep[v] = dep[u] - w - max(0ll, b[v] + a[v] - 2 * w);\r\n        d[v] = d[u];\r\n        c[v] = max(0ll, c[u] - max(0ll, b[v] + a[v] - 2 * w) + a[u] - 2 * w);\r\n        cal(v, u);\r\n    }\r\n    // cout << u <<\" \"<<b[u]<<\" \"<<c[u]<<\" \"<<d[u]<<\" \"<<dep[u] << '\\n';\r\n}\r\nvoid sol()\r\n{\r\n    cin >> n >> m;\r\n    for (int i = 1; i <= n; i++)\r\n        cin >> a[i];\r\n    for (int i = 1; i < n; i++)\r\n    {\r\n        int x, y, w;\r\n        cin >> x >> y >> w;\r\n        adj[x].pb({w, y});\r\n        adj[y].pb({w, x});\r\n    }\r\n    dfs(1);\r\n    cal(1);\r\n    while (m-- > 0)\r\n    {\r\n        int x, y;\r\n        cin >> x >> y;\r\n        int z = lca(x, y);\r\n        cout << d[x] + d[y] - d[z] * 2 + c[z] + a[z] + dep[x] + dep[y] - 2 * dep[z] << '\\n';\r\n    }\r\n}\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    if (fopen(task \".inp\", \"r\"))\r\n    {\r\n        freopen(task \".inp\", \"r\", stdin);\r\n        freopen(task \".out\", \"w\", stdout);\r\n    }\r\n    int ntest = 1;\r\n    // cin >> ntest;\r\n    while (ntest-- > 0)\r\n        sol();\r\n}"
}