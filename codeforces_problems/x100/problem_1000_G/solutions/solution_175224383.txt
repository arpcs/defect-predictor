{
    "id": 175224383,
    "contestId": 1000,
    "creationTimeSeconds": 1665307507,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1000,
        "index": "G",
        "name": "Two-Paths",
        "type": "PROGRAMMING",
        "rating": 2700,
        "tags": [
            "data structures",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 1000,
        "members": [
            {
                "handle": "YaliCai"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1530110100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 137113600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\ninline int read(){\r\n\tint s=0,w=1;char ch=getchar();\r\n\twhile((ch<'0')||(ch>'9')){if(ch=='-'){w=-1;}ch=getchar();}\r\n\twhile((ch>='0')&&(ch<='9')){s=(s<<3)+(s<<1)+ch-'0';ch=getchar();}\r\n\treturn s*w;\r\n}\r\nconst int N=300005;\r\nconst int M=600005;\r\nconst int K=22; \r\nint T,n,q,tot,a[N],dp2[N],dp[N],dep[N],HeadL[N],dp1[N][K],fa[N][K];\r\nstruct Edge{int from,to,val,nxt;}edge[M];\r\ninline void AddLine(int x,int y,int z){\r\n\tedge[tot].from=x;edge[tot].to=y;edge[tot].val=z;edge[tot].nxt=HeadL[x];HeadL[x]=tot++;return ;\r\n}\r\ninline void dfs1(int x,int fath){\r\n\tdp[x]=a[x];\r\n\tint i=HeadL[x];\r\n\twhile(i!=-1){\r\n\t\tif(edge[i].to!=fath){\r\n\t\t\tdfs1(edge[i].to,x);\r\n\t\t\tif(dp[edge[i].to]-edge[i].val-edge[i^1].val>0){\r\n\t\t\t\tdp[x]+=dp[edge[i].to]-edge[i].val-edge[i^1].val;\r\n\t\t\t}\r\n\t\t}\r\n\t\ti=edge[i].nxt;\r\n\t}\r\n}\r\ninline void dfs2(int x,int fath){\r\n\tdep[x]=dep[fa[x][0]=fath]+1;\r\n\tfor(int i=1;i<=20;i++){\r\n\t\tfa[x][i]=fa[fa[x][i-1]][i-1];\r\n\t\tdp1[x][i]=dp1[x][i-1]+dp1[fa[x][i-1]][i-1]-dp[fa[x][i-1]];\r\n\t}\r\n\tint i=HeadL[x];\r\n\twhile(i!=-1){\r\n\t\tif(edge[i].to!=fath){\r\n\t\t\tdp1[edge[i].to][0]=dp[edge[i].to]+dp[x]-edge[i^1].val;\r\n\t\t\tif(dp[edge[i].to]-2*edge[i].val>0)dp1[edge[i].to][0]-=dp[edge[i].to]-edge[i].val-edge[i^1].val;\r\n\t\t\tdp2[edge[i].to]=max(dp2[edge[i].to],dp2[x]+dp1[edge[i].to][0]-edge[i].val-dp[edge[i].to]);\r\n\t\t\tdfs2(edge[i].to,x);\r\n\t\t} \r\n\t\ti=edge[i].nxt;\r\n\t}\r\n\treturn ;\r\n}\r\ninline int Query(int x,int y){\r\n\tint a=x,b=y,res=0;\r\n\tif(dep[y]>dep[x])swap(x,y);\r\n\tfor(int i=20;i>=0;i--)\r\n\t\tif(dep[fa[x][i]]>=dep[y]){\r\n\t\t\tres+=dp1[x][i]-dp[x];\r\n\t\t\tx=fa[x][i];\r\n\t\t}\r\n\tif(x==y)return res+((dep[a]>dep[b])?dp[a]:dp[b])+dp2[x];\r\n\tfor(int i=20;i>=0;i--)\r\n\t\tif(fa[x][i]!=fa[y][i]){\r\n\t\t\tres+=dp1[x][i]-dp[x]+dp1[y][i]-dp[y];\r\n\t\t\tx=fa[x][i];y=fa[y][i];\r\n\t\t}\r\n\treturn res+dp1[x][0]-dp[x]+dp1[y][0]-dp[x]-dp[fa[x][0]]+dp[a]+dp[b]+dp2[fa[x][0]];\r\n}\r\ninline void Solve(){\r\n\tn=read();q=read();\r\n\tfor(int i=1;i<=n;i++)a[i]=read();\r\n\tmemset(HeadL,-1,sizeof(int)*(n+5));\r\n\tfor(int i=1,x,y,z;i<=n-1;i++){\r\n\t\tx=read();y=read();z=read();\r\n\t\tAddLine(x,y,z);AddLine(y,x,z);\r\n\t}\r\n\tdfs1(1,0);\r\n\tdfs2(1,0);\r\n\twhile(q--){\r\n\t\tint x=read(),y=read();\r\n\t\tprintf(\"%lld\\n\",Query(x,y));\r\n\t}\r\n\treturn ;\r\n}\r\nsigned main(){\r\n\tSolve();\r\n\treturn 0;\r\n}"
}