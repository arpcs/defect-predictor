{
    "id": 129625277,
    "contestId": 1000,
    "creationTimeSeconds": 1632345497,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1000,
        "index": "G",
        "name": "Two-Paths",
        "type": "PROGRAMMING",
        "rating": 2700,
        "tags": [
            "data structures",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 1000,
        "members": [
            {
                "handle": "disastah"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1530110100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 45772800,
    "source": "#pragma GCC optimize(\"-Ofast,unroll-loops\")\r\n#pragma GCC target(\"avx2\")\r\n#include <bits/stdc++.h>\r\n#define ar array\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef long double ld;\r\nconst int N=3e5;\r\nint n, q, a[N], par[N], tin[N], tout[N], timer=0, bup[N][20];\r\nvector<ar<int,2>> g[N];\r\nll dist[N], sa[N], up[N], down[N];\r\nvoid dfs(int v, int p=-1) {\r\n\ttin[v]=timer++;\r\n\tdown[v]=a[v];\r\n\tsa[v]+=a[v];\r\n\tfor (auto &[u,w] : g[v]) {\r\n\t\tif (u^p) {\r\n\t\t\tdist[u]=dist[v]+w;\r\n\t\t\tpar[u]=v, sa[u]=sa[v];\r\n\t\t\tdfs(u,v);\r\n\t\t\tdown[v]+=max(0LL,down[u]-ll(w)*2);\r\n\t\t}\r\n\t}\r\n\ttout[v]=timer++;\r\n}\r\nvoid dfs2(int v, int p=-1) {\r\n\tup[v]=a[v];\r\n\tfor (auto &[u,w] : g[v]) {\r\n\t\tif (u^p) dfs2(u,v);\r\n\t\telse up[v]+=max(0LL,down[u]+up[u]-a[u]-max(0LL,down[v]-2*ll(w))-2*ll(w));\r\n\t}\r\n}\r\nint lca(int a, int b, int d=19) {\r\n\twhile(tin[a]>tin[b]||tout[a]<tout[b]) {\r\n\t\twhile(d&&tin[bup[a][d]]<tin[b]&&tout[bup[a][d]]>tout[b])--d;\r\n\t\ta=bup[a][d];\r\n\t}\r\n\treturn a;\r\n}\r\nvoid solve() {\r\n\tcin >> n >> q;\r\n\tfor (int i=0; i<n; ++i) cin >> a[i];\r\n\tfor (int i=0; i<n-1; ++i) {\r\n\t\tint u, v, w; cin >> u >> v >> w; --u, --v;\r\n\t\tg[u].push_back({v,w});\r\n\t\tg[v].push_back({u,w});\r\n\t}\r\n\tdfs(0), dfs2(0);\r\n\tfor (int d=0; d<20; ++d) {\r\n\t\tfor (int i=0; i<n; ++i) {\r\n\t\t\tif (!d) bup[i][d]=par[i];\r\n\t\t\telse bup[i][d]=bup[bup[i][d-1]][d-1];\r\n\t\t}\r\n\t}\r\n\twhile(q--) {\r\n\t\tint u, v; cin >> u >> v; --u, --v;\r\n\t\tint c=lca(u,v);\r\n\t\tif (c==v) swap(u,v);\r\n\t\tif (c==u) cout << down[v]+up[c]+(sa[v]-sa[c]+a[c])-(dist[v]-dist[c])-(a[v]+a[c]) << \"\\n\";\r\n\t\telse cout << down[u]+down[v]+up[c]+(sa[u]+sa[v]-2*sa[c]+a[c])-\r\n\t\t\t(dist[u]+dist[v]-2*dist[c])-(a[u]+a[v]+a[c]) << \"\\n\";\r\n\t}\r\n}\r\nsigned main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0); cout.tie(0);\r\n#ifdef disastah\r\n    cout << \"Output\\n\\n\";\r\n#endif\r\n    int tt=1;\r\n    //cin>>tt;\r\n    while (tt--) {\r\n\t\tsolve();\r\n        cout << \"\\n\";\r\n    }\r\n}\r\n\r\n"
}