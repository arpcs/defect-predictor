{
    "id": 122323589,
    "contestId": 1000,
    "creationTimeSeconds": 1626178825,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1000,
        "index": "G",
        "name": "Two-Paths",
        "type": "PROGRAMMING",
        "rating": 2700,
        "tags": [
            "data structures",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 1000,
        "members": [
            {
                "handle": "shangcheng"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1530110100
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <cstdio>\r\n#define int long long\r\nconst int maxn = 3e5+5;\r\ninline int max(int a,int b){return a>b?a:b;}\r\nlong long ans;\r\nint n,m,a[maxn],head[maxn],tot=1;\r\nstruct Edge{int next,to,val;}e[maxn<<1];\r\nvoid add_edge(int x,int y,int z){e[++tot] = (Edge){head[x],y,z},head[x] = tot;}\r\nint fa[maxn],siz[maxn],son[maxn],dep[maxn],top[maxn],f[maxn],fs[maxn],g[maxn],sumf[maxn],dd[maxn],du[maxn],vals[maxn];\r\nvoid dfs1(int u,int F){\r\n\tfa[u] = F,siz[u] = 1,dep[u] = dep[F] + 1,vals[u] = vals[F] + a[u];\r\n\tfor(int i=head[u],v;v=e[i].to,i;i=e[i].next){\r\n\t\tif(v == F)continue ;\r\n\t\tdd[v] = dd[u] + e[i].val,du[v] = du[u] + e[i^1].val,dfs1(v,u);\r\n\t\tsiz[u] += siz[v],fs[u] += (f[v]=max(0,fs[v]+a[v]-e[i].val-e[i^1].val)),(siz[son[u]]<siz[v]?son[u]=v:0);\r\n\t}\r\n}\r\nvoid dfs2(int u,int T){\r\n\ttop[u] = T;if(son[u])dfs2(son[u],T);\r\n\tfor(int i=head[u],v;v=e[i].to,i;i=e[i].next)\r\n\t\tif(v != fa[u] && v != son[u])dfs2(v,v);\r\n}\r\nvoid dfs3(int u){\r\n\tfor(int i=head[u],v;v=e[i].to,i;i=e[i].next)\r\n\t\tif(v != fa[u])sumf[v] = sumf[u] + fs[u] - f[v],g[v] = max(0,a[u]+g[u]+fs[u]-f[v]-(e[i].val+e[i^1].val)),dfs3(v);\r\n}\r\nint LCA(int x,int y){while(top[x]^top[y])(dep[top[x]]<dep[top[y]]?y=fa[top[y]]:x=fa[top[x]]);return dep[x]<dep[y]?x:y;}\r\nint main(){\r\n\tscanf(\"%lld %lld\",&n,&m);\r\n\tfor(int i=1;i<=n;++i)scanf(\"%lld\",&a[i]);\r\n\tfor(int i=1,x,y,z;i<n;++i)scanf(\"%lld %lld %lld\",&x,&y,&z),add_edge(x,y,z),add_edge(y,x,z);\r\n\tdfs1(1,0),dfs2(1,1),dfs3(1);\r\n\tfor(int i=1,x,y,lca;i<=m;++i){\r\n\t\tscanf(\"%lld %lld\",&x,&y),lca = LCA(x,y),ans = 0;\r\n\t\tans += 1ll*vals[x]+vals[y]-vals[lca]-vals[fa[lca]];\r\n\t\tans -= 1ll*(du[x]-du[lca])+(dd[y]-dd[lca]),ans += 1ll*fs[x]+fs[y]+g[lca];\r\n\t\tans += 1ll*sumf[x]+sumf[y]-2*sumf[lca],ans -= fs[lca],printf(\"%lld\\n\",ans);\r\n\t}\r\n\treturn 0;\r\n}"
}