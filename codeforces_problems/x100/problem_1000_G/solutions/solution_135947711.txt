{
    "id": 135947711,
    "contestId": 1000,
    "creationTimeSeconds": 1637137812,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1000,
        "index": "G",
        "name": "Two-Paths",
        "type": "PROGRAMMING",
        "rating": 2700,
        "tags": [
            "data structures",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 1000,
        "members": [
            {
                "handle": "diefish"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1530110100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 93798400,
    "source": "//#pragma GCC optimize(\"Ofast\")\r\n#include <bits/stdc++.h>\r\n#define int long long\r\n#define IN inline\r\n#define rg register\r\n#define re(i,a,b) for(rg int i=a,i##up=b;i<=i##up;i++)\r\n#define er(i,a,b) for(rg int i=a,i##dw=b;i>=i##dw;i--)\r\n#define go(i,x) for(rg int i=head[x];i;i=nxt[i])\r\n#define fa(x) st[x][0]\r\nusing namespace std;\r\nconst int N=3e5+5,T=19;\r\ninline int read(){\r\n\trg int ret=0, k=1; rg char c; do if((c=getchar())=='-') k=-1; while(c<'0' || c>'9');\r\n\twhile(c>='0' && c<='9') ret=(ret<<1)+(ret<<3)+(c^48), c=getchar(); return k*ret;\r\n}\r\nIN int max(int a,int b){return a>b?a:b;}\r\nIN void swap(int &a,int &b){rg int tmp=a; a=b,b=tmp;}\r\nint tot=1,head[N],ver[N<<1],nxt[N<<1],edge[N<<1];\r\nIN void add(int x,int y,int z){ver[++tot]=y,nxt[tot]=head[x],head[x]=tot,edge[tot]=z;}\r\nint n,a[N],q;\r\nint f[N],st[N][25],dep[N],h[N];\r\nIN void dfs1(int x,int fa){\r\n\tint y; dep[x]=dep[fa]+1,f[x]=a[x];\r\n\tre(i,1,(st[x][0]=fa,T)) st[x][i]=st[st[x][i-1]][i-1];\r\n\tgo(i,x) if((y=ver[i])^fa)\r\n\t\tdfs1(y,x),f[x]+=h[y]=max(f[y]-edge[i]-edge[i^1],0);\r\n}\r\nint g[N],up[N],dw[N];\r\nIN void dfs2(int x,int fa){\r\n\tint y; go(i,x) if((y=ver[i])^fa)\r\n\t\tg[y]=max(g[x]+f[x]-h[y]-edge[i]-edge[i^1],0),\r\n\t\tup[y]=up[x]+f[x]-h[y]-edge[i^1],dw[y]=dw[x]+f[x]-h[y]-edge[i],dfs2(y,x);\r\n}\r\nIN int lca(int x,int y){\r\n\tif(dep[x]<dep[y]) swap(x,y);\r\n\ter(i,T,0) if(dep[st[x][i]]>=dep[y]) x=st[x][i]; if(x==y) return x;\r\n\ter(i,T,0) if(st[x][i]^st[y][i]) x=st[x][i],y=st[y][i];\r\n\treturn fa(x);\r\n}\r\nIN int query(int x,int y){rg int l=lca(x,y); return f[x]+f[y]+up[x]-up[l]+dw[y]-dw[l]-f[l]+g[l];}\r\nsigned main(){\r\n//\tfreopen(\".in\",\"r\",stdin),freopen(\"me.out\",\"w\",stdout);\r\n\tre(i,1,(n=read(),q=read(),n)) a[i]=read();\r\n\tre(i,2,n){rg int u=read(),v=read(),w=read(); add(u,v,w),add(v,u,w);}\r\n\tfor(dfs1(1,0),dfs2(1,0);q--;){rg int u=read(),v=read(); printf(\"%d\\n\",query(u,v));}\r\n\treturn 0;\r\n}\r\n"
}