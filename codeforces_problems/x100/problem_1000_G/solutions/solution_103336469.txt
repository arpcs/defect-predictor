{
    "id": 103336469,
    "contestId": 1000,
    "creationTimeSeconds": 1609813458,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1000,
        "index": "G",
        "name": "Two-Paths",
        "type": "PROGRAMMING",
        "rating": 2700,
        "tags": [
            "data structures",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 1000,
        "members": [
            {
                "handle": "wlzhouzhuan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1530110100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 48,
    "timeConsumedMillis": 2137,
    "memoryConsumedBytes": 131584000,
    "source": "// Author: wlzhouzhuan\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define pii pair<int, int>\r\n#define pb push_back\r\n#define fir first\r\n#define sec second\r\n#define rep(i, l, r) for (int i = l; i <= r; i++)\r\n#define per(i, l, r) for (int i = l; i >= r; i--)\r\n#define mset(s, t) memset(s, t, sizeof(s))\r\n#define mcpy(s, t) memcpy(s, t, sizeof(t))\r\ntemplate<typename T1, typename T2> void ckmin(T1 &a, T2 b) { if (a > b) a = b; }\r\ntemplate<typename T1, typename T2> void ckmax(T1 &a, T2 b) { if (a < b) a = b; }\r\nint read() {\r\n  int x = 0, f = 0; char ch = getchar();\r\n  while (!isdigit(ch)) f |= ch == '-', ch = getchar();\r\n  while (isdigit(ch)) x = 10 * x + ch - '0', ch = getchar();\r\n  return f ? -x : x;\r\n}\r\ntemplate<typename T> void print(T x) {\r\n  if (x < 0) putchar('-'), x = -x;\r\n  if (x >= 10) print(x / 10);\r\n  putchar(x % 10 + '0');\r\n}\r\ntemplate<typename T> void print(T x, char let) {\r\n  print(x), putchar(let);\r\n}\r\nconst int N = 300005;\r\nstruct Edge {\r\n  int to, nxt, val;\r\n} edge[N << 1];\r\nint head[N], tot;\r\nvoid add(int u, int v, int w) {\r\n  edge[++tot] = {v, head[u], w};\r\n  head[u] = tot;\r\n}\r\nint a[N], n, q;\r\n\r\nint dep[N];\r\nint F[N][19], anc[N][19], f[N], g[N];\r\nvoid dfs1(int u, int fa) {\r\n  dep[u] = dep[fa] + 1, f[u] = a[u];\r\n  for (int i = head[u]; i; i = edge[i].nxt) {\r\n    int v = edge[i].to;\r\n    if (v == fa) continue;\r\n    dfs1(v, u);\r\n    f[u] += max(0ll, f[v] - 2 * edge[i].val);\r\n  }\r\n}\r\nvoid dfs2(int u, int fa) {\r\n  for (int j = 1; j < 19; j++) {\r\n    anc[u][j] = anc[anc[u][j - 1]][j - 1];\r\n    F[u][j] = F[u][j - 1] + F[anc[u][j - 1]][j - 1] - f[anc[u][j - 1]];\r\n  }\r\n  for (int i = head[u]; i; i = edge[i].nxt) {\r\n    int v = edge[i].to;\r\n    if (v == fa) continue;\r\n    F[v][0] = f[u] + f[v] - edge[i].val - max(0ll, f[v] - 2 * edge[i].val);\r\n    anc[v][0] = u;\r\n    g[v] = max(0ll, g[u] + f[u] - max(0ll, f[v] - 2 * edge[i].val) - 2 * edge[i].val);\r\n    dfs2(v, u);\r\n  }\r\n}\r\nint query(int u, int v) {\r\n  if (dep[u] < dep[v]) swap(u, v);\r\n  int ans = 0, _u = u, _v = v;\r\n  for (int i = 18; i >= 0; i--) {\r\n    if (dep[anc[u][i]] >= dep[v]) {\r\n      ans += F[u][i] - f[u];\r\n      u = anc[u][i];\r\n    }\r\n  }\r\n  if (u == v) return ans + f[_u] + g[u];\r\n  for (int i = 18; i >= 0; i--) {\r\n    if (anc[u][i] && anc[u][i] != anc[v][i]) {\r\n      ans += F[u][i] - f[u] + F[v][i] - f[v];\r\n      u = anc[u][i], v = anc[v][i];\r\n    }\r\n  } \r\n  return ans + F[u][0] - f[u] + F[v][0] - f[v] - f[anc[u][0]] + f[_u] + f[_v] + g[anc[u][0]];\r\n}\r\nsigned main() {\r\n  n = read(), q = read();\r\n  for (int i = 1; i <= n; i++) a[i] = read();\r\n  for (int i = 1; i < n; i++) {\r\n    int u = read(), v = read(), w = read();\r\n    add(u, v, w), add(v, u, w);\r\n  }\r\n  dfs1(1, 0), dfs2(1, 0);\r\n  while (q--) {\r\n    int u = read(), v = read();\r\n    print(query(u, v), '\\n');\r\n  }\r\n  return 0;\r\n}"
}