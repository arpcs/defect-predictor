{
    "id": 173098588,
    "contestId": 1000,
    "creationTimeSeconds": 1663871014,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1000,
        "index": "G",
        "name": "Two-Paths",
        "type": "PROGRAMMING",
        "rating": 2700,
        "tags": [
            "data structures",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 1000,
        "members": [
            {
                "handle": "lukameladze1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1530110100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "# include <bits/stdc++.h>\r\nusing namespace std;\r\n#define f first\r\n#define s second\r\n#define int long long\r\n#define pii pair <int, int>\r\n#define pb push_back\r\nconst int N = 3e5 + 5;\r\nint t,n,a[N],par[N][20],dp_sub[N],in[N],out[N],dp[N],dpr[N],tin;\r\nint val[N],q,z;\r\nvector <pii> v[N];\r\nvoid dfs(int a, int p, int cost) {\r\n    par[a][0] = p;\r\n    tin++;\r\n    in[a] = tin;\r\n    for (int i = 1; i <= 18; i++) {\r\n        if (par[a][i - 1]) par[a][i] = par[par[a][i - 1]][i - 1];\r\n    }\r\n    dp_sub[a] = val[a];\r\n    for (pii x : v[a]) {\r\n        int to = x.f; int c = x.s;\r\n        if (to == p) continue;\r\n        dfs(to,a,c);\r\n        dp_sub[a] += max(0LL, (dp_sub[to] - 2 * c));\r\n    }\r\n    out[a] = tin;\r\n}\r\nvoid dfs1(int a, int p, int cost) {\r\n    dp[a] = max(dp[a],dp_sub[a]);\r\n    for (pii x : v[a]){\r\n        int to = x.f; int c = x.s;\r\n        if (to == p) continue;\r\n        dp[to] = dp_sub[to] + max(0LL, dp[a] - max(0,dp_sub[to] - 2 * c) - 2 * c);\r\n        dpr[to] = dpr[a] - max(0LL, dp_sub[to] - 2 * c) + dp_sub[to] - c;\r\n        dfs1(to,a,c); \r\n    }\r\n}\r\nint upper(int a, int b) {\r\n    return (in[a] <= in[b] && out[a] >= out[b]);\r\n}\r\nint lca(int a, int b) {\r\n    if (upper(a,b)) return a;\r\n    for (int i = 18; i >= 0; i--) {\r\n        if (par[a][i] && !upper(par[a][i], a)) a = par[a][i];\r\n    }\r\n    return par[a][0];\r\n}\r\nint get(int x, int y) {\r\n    int lc = lca(x,y);\r\n    return dpr[x] + dpr[y] - 2 * dpr[lc] + dp[lc];\r\n}\r\nmain() {\r\n    std::ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);\r\n    cin>>n>>q;\r\n    for (int i = 1; i <= n ;i++) {\r\n        cin>>val[i];\r\n    }\r\n    for (int i = 1; i <= n - 1; i++) {\r\n        int x, y;\r\n        cin>>x>>y>>z;\r\n        v[x].pb({y,z}); \r\n        v[y].pb({x,z});\r\n    }\r\n    dfs(1,0,0);\r\n    dpr[1] = dp_sub[1];\r\n    dfs1(1,0,0);\r\n    while (q--) {\r\n        int x, y;\r\n        cin>>x>>y;\r\n        cout<<get(x,y)<<\"\\n\";\r\n    }\r\n}"
}