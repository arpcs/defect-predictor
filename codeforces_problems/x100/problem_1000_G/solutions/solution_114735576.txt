{
    "id": 114735576,
    "contestId": 1000,
    "creationTimeSeconds": 1619836615,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1000,
        "index": "G",
        "name": "Two-Paths",
        "type": "PROGRAMMING",
        "rating": 2700,
        "tags": [
            "data structures",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 1000,
        "members": [
            {
                "handle": "ZHUHAORENQaQ"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1530110100
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 133427200,
    "source": "#include<bits/stdc++.h>\r\n#define N 300005\r\n#define int long long\r\nusing namespace std;\r\nint n,m,u,v,w,f[N][25],dp[N],sum[N],a[N],dep[N],num[N][25];\r\nstruct node {\r\n\tint to,w;\r\n};\r\nvector<node>ve[N];\r\nvoid dfs1(int now,int fa) {\r\n\tdp[now]=a[now];\r\n\tdep[now]=dep[fa]+1;\r\n\tf[now][0]=fa;\r\n\tfor(int i=1; i<=20; i++)f[now][i]=f[f[now][i-1]][i-1];\r\n\tfor(int i=0; i<ve[now].size(); i++) {\r\n\t\tint y=ve[now][i].to;\r\n\t\tif(y==fa)continue;\r\n\t\tdfs1(y,now);\r\n\t\tif(dp[y]-ve[now][i].w*2<=0)continue;\r\n\t\tdp[now]+=dp[y]-ve[now][i].w*2;\r\n\t}\r\n}\r\nvoid dfs2(int now,int fa) {\r\n\tfor(int i=1; i<=20; i++)num[now][i]=num[now][i-1]+num[f[now][i-1]][i-1]-dp[f[now][i-1]];\r\n\tfor(int i=0; i<ve[now].size(); i++) {\r\n\t\tint y=ve[now][i].to;\r\n\t\tif(y==fa)continue;\r\n\t\tnum[y][0]=dp[y]+dp[now]-ve[now][i].w;\r\n\t\tif(dp[y]-ve[now][i].w*2>0)num[y][0]+=ve[now][i].w*2-dp[y];\r\n\t\tif(sum[now]+num[y][0]-ve[now][i].w-dp[y]>0)sum[y]=sum[now]+num[y][0]-ve[now][i].w-dp[y];\r\n\t\tdfs2(y,now);\r\n\t}\r\n}\r\nint query(int x,int y) {\r\n\tint res=0,t1=x,t2=y;\r\n\tif(dep[x]<dep[y])swap(x,y);\r\n\tfor(int i=20; i>=0; i--)\r\n\t\tif(dep[f[x][i]]>=dep[y]) {\r\n\t\t\tres+=num[x][i];\r\n\t\t\tx=f[x][i];\r\n\t\t}\r\n\tif(x==y) {\r\n\t\tif(dep[t1]>dep[t2])res+=dp[t1];\r\n\t\telse res+=dp[t2];\r\n\t\treturn res+sum[x];\r\n\t}\r\n\tfor(int i=20; i>=0; i--) {\r\n\t\tif(f[x][i]==f[y][i])continue;\r\n\t\tres+=num[x][i]+num[y][i];\r\n\t\tx=f[x][i],y=f[u][i];\r\n\t}\r\n\tres=res+num[x][0]+num[y][0];\r\n\tres=res+dp[t1]+dp[t2];\r\n\tres=res-dp[f[x][0]]+sum[f[x][0]];\r\n\treturn res;\r\n}\r\nsigned main() {\r\n\tcin>>n>>m;\r\n\tfor(int i=1; i<=n; i++)cin>>a[i];\r\n\tfor(int i=1; i<n; i++) {\r\n\t\tcin>>u>>v>>w;\r\n\t\tve[u].push_back((node) {\r\n\t\t\tv,w\r\n\t\t});\r\n\t\tve[v].push_back((node) {\r\n\t\t\tu,w\r\n\t\t});\r\n\t}\r\n\tdfs1(1,0);\r\n\tdfs2(1,0);\r\n\tfor(int i=1; i<=n; i++)\r\n\t\tfor(int j=0; j<=20; j++)num[i][j]-=dp[i];\r\n\twhile(m--) {\r\n\t\tcin>>u>>v;\r\n\t\tcout<<query(u,v)<<endl;\r\n\t}\r\n}"
}