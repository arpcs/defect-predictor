{
    "id": 215845275,
    "contestId": 1000,
    "creationTimeSeconds": 1690449260,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1000,
        "index": "G",
        "name": "Two-Paths",
        "type": "PROGRAMMING",
        "rating": 2700,
        "tags": [
            "data structures",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 1000,
        "members": [
            {
                "handle": "tomas_fang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1530110100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include \"bits/stdc++.h\"\nusing namespace std;\n#define ios                                                                    \\\n  ios_base::sync_with_stdio(0);                                                \\\n  cin.tie(0);\n#define FOR(i, a, b) for (int i = a; i < b; i++)\n#define pb push_back\ntypedef long long ll;\ntypedef long double db;\ntypedef pair<int, int> ii;\nconst int N = 3e5 + 5;\nconst int mod = 1e9 + 7;\nint n, q, u, v, w;\nint a[N];\nvector<ii> adj[N];\nll dpU[N], dpD[N];\nint tb[18][N], lvl[N];\nll sv1[N], sv2[N], sv3[N];\nvoid dfs0(int u, int p) {\n  tb[0][u] = p;\n  for (int i = 1; i < 19; i++)\n    tb[i][u] = tb[i - 1][tb[i - 1][u]];\n  for (auto v : adj[u])\n    if (v.first != p) {\n      lvl[v.first] = lvl[u] + 1;\n      dfs0(v.first, u);\n    }\n}\nint LCA(int u, int v) {\n  int d = lvl[v] - lvl[u];\n  for (int i = 0; i < 19; i++)\n    if (d >> i & 1)\n     \n// BZPDEPXRfDpEchUprqdxaHgpkAeJuuBSjeFsDyDokzFrhWrChcQHxJnYOUtcCaMLcNOIhxFwABCrGLpkXkUXfiqybbjyNQKhtNgkRYXSTLYKVAVPcKDrHMjdmNuaXaEu"
}