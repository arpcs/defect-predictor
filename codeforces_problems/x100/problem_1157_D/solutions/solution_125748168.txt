{
    "id": 125748168,
    "contestId": 1157,
    "creationTimeSeconds": 1628850314,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1157,
        "index": "D",
        "name": "N Problems During K Days",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1157,
        "members": [
            {
                "handle": "asrinivasan007"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1556289300
    },
    "programmingLanguage": "PyPy 3",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 25497600,
    "source": "n, k = map(int, input().split())\r\n\r\nif n == k == 1:\r\n    print(\"YES\")\r\n    print('1')\r\n    exit()\r\n\r\nres = []\r\nfor i in range(k):\r\n    res.append(i+1)\r\n\r\nsres = (k) * (k+1) // 2\r\n\r\nfor i in range(k):\r\n\r\n    res[i] += max(0, (n - sres)) // k\r\n\r\nleftover = max(0, n-sres) % k\r\ni = -1\r\nwhile leftover > 0 and i > -k:\r\n    tobeadded = res[i-1] * 2 - res[i]\r\n\r\n    res[i] += min(leftover, tobeadded)\r\n\r\n    leftover -= min(leftover, tobeadded)\r\n\r\n    i -= 1\r\n\r\nbigjump = False\r\n\r\nfor i in range(1, k):\r\n    if res[i] > 2*res[i-1]:\r\n        bigjump = True\r\n        break\r\n\r\nif sum(res) != n or bigjump:\r\n    print(\"NO\")\r\nelse:\r\n    print(\"YES\")\r\n    print(*res)\r\n\r\n"
}