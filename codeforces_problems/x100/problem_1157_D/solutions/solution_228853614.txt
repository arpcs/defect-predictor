{
    "id": 228853614,
    "contestId": 1157,
    "creationTimeSeconds": 1697746616,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1157,
        "index": "D",
        "name": "N Problems During K Days",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1157,
        "members": [
            {
                "handle": "jamesbang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1556289300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#pragma GCC optimize(\"Ofast,unroll-loops\")\n#pragma GCC target(\"avx,avx2,sse,sse2\")\n\n// I'm no longer including <bits/stdc++.h> becos it takes forever to compile\n#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\n#include <chrono>\n#include <random>\n#include <bitset>\n#include <array>\n#include <typeinfo>\n#include <iomanip>\n#include <functional>\nusing namespace std;\n\n#define X first\n#define Y second\n#define pb push_back\n\nusing ld = long double;\n// using ld = __float128;\nusing ull = unsigned long long;\nusing ll = long long;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\n\nconst int INF = 1e9 + 1;\nconst ll inf = 1e18 + 1;\n// const ll MOD = 1e9 + 7;\nconst ll MOD = 998244353;\n\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\nll _rand(ll p) {return (ull)rng()%p;}\n\ntemplate<typename T>T _ceil(T a,T b){return(a+b-1)/b;}\ntemplate<typename T>T _min(T a,T b){return a>b?b:a;};\ntemplate<typename T>T _max(T a,T b){return a>b?a:b;};\ntemplate<typename T>T _abs(T a){return a>0?a:-a;};\ntemplate<typename T>T _gcd(T a,T b){return a?_gcd(b%a,a):b;};\n\nvoid precompute() {\n\n}\n\nvoid solve() {\n    ll n, k; cin >> n >> k;\n    /*\n    so how is this gonna work\n    need to find a length k sequence\n    so obviously there's a size barrier to this\n    clearly: n >= 1 + 2 + ... + k = k(k+1)/2\n    is everything else possible?\n    for k = 1: yes\n    for k = 2:\n    3 = 1+2\n    4 is impossible!\n    5 = 2+3\n    6 = 2+4\n    7 = 3+5 etc etc.\n    for k = 3:\n    6 = 1+2+3\n    7 = 1+2+4\n    8 is impossible\n    9 = 2+3+4\n    for k = 4:\n    10 = 1+2+3+4\n    ...\n    12 = 1+2+3+6\n    I'm not sure now\n    so let's say we have n >= k(k+1)/2 or whatever.\n    2+3+...+(k+1) -> 2+3+...+2k.\n\n    (k+1)(k+2)/2 - 1 = k(k+3) / 2. Everything at least this is possible.\n\n    1+2+...(k-1)+2(k-1)?\n    this is: k(k-1)/2 + 2(k-1) = (k-1)(k+4)/2 = (k^2+3k)/2 - 2.\n\n    So what happens for (k^2+3k)/2 - 1?\n    */\n    if(n < k * (k+1) / 2) {\n        cout << \"NO\\n\"; return;\n    }\n\n    if(n <= k*(k+3)/2 - 2) {\n        cout << \"YES\\n\";\n        ll count = 0;\n        for(int i=1;i<=k-1;i++) {\n            cout << i << \" \";\n            count += i;\n        }\n        cout << n - count << \"\\n\"; return;\n    }\n    if(n == k*(k+3)/2 - 1) {\n        if(k == 1) {\n            cout << \"YES\\n\";\n            cout << n << \"\\n\"; return;\n        }\n        if(2 <= k and k <= 3) {\n            cout << \"NO\\n\"; return;\n        }\n        // if k >= 4 then ugh what do you do\n        // 1+2+...(k-2) + k + x\n        // difference?\n        // x + k = 3(k-1) or x = 2*k - 3.\n        // do we have k-2 < 2k-3? or k > 1 yes\n        cout << \"YES\\n\";\n        ll count = 0;\n        for(int i=1;i<=k-2;i++) {\n            cout << i << \" \";\n            count += i;\n        }\n        cout << k << \" \"; count += k;\n        cout << n-count << \"\\n\"; return;\n    }\n    // cout << \"YES\\n\";\n    ll N = n - k * (k+1) / 2;\n    ll x = N / k;\n    assert(x >= 1);\n    cout << \"YES\\n\";\n    ll count = 0;\n    for(int i=1;i<=k-1;i++) {\n        cout << x+i << \" \";\n        count += x+i;\n    }\n    cout << n-count << \"\\n\"; return;\n}\n\nint main() {\nios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\nprecompute();\nint t = 1;\n// cin>>t;\nfor(int i=1;i<=t;i++)solve();\nreturn 0;\n}"
}