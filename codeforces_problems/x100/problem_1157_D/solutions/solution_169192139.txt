{
    "id": 169192139,
    "contestId": 1157,
    "creationTimeSeconds": 1661050336,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1157,
        "index": "D",
        "name": "N Problems During K Days",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1157,
        "members": [
            {
                "handle": "MinhNguyen546"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1556289300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\r\n#define uint unsigned int\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define sqr(a) (1LL * (a) * (a))\r\nusing namespace std;\r\n\r\n#ifdef LOCAL\r\n#include <bug.h>\r\n#else\r\n#define mt(...)\r\n#endif\r\n\r\ntemplate<typename T, typename G> bool chmax(T &a, const G &b) { return 0 (a < b ? a = b, true : false); }\r\ntemplate<typename T, typename G> bool chmin(T &a, const G &b) { return 0 (a > b ? a = b, true : false); }\r\n\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nconst int mod = 1000000007;\r\nconst int inf = 0x3f3f3f3f;\r\n\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false); cin.tie(nullptr);\r\n    // freopen(\"input.txt\", \"r\", stdin);\r\n    // freopen(\"output.txt\", \"w\", stdout);\r\n\r\n    int n, k;\r\n    cin >> n >> k;\r\n    long long s = (long long) k * (k + 1) / 2;\r\n    if (s > n) {\r\n        cout << \"NO\\n\";\r\n        return 0;\r\n    }\r\n    // s + k * add <= n\r\n    // add <= (n - s) / k;\r\n    int add = (n - s) / k + 1;\r\n    vector<int> ans(k);\r\n    for (int i = 0; i < k; ++i) {\r\n        ans[i] = add;\r\n        add++;\r\n        n -= ans[i];\r\n    }\r\n    mt(ans, n)\r\n    while (n > 0) {\r\n        bool any = false;\r\n        for (int i = k - 1; i >= 0 && n > 0; --i) {\r\n            int x = n;\r\n            if (i + 1 < k) {\r\n                x = min(x, ans[i + 1] - 1 - ans[i]);\r\n            }\r\n            if (i - 1 >= 0) {\r\n                x = min(x, 2 * ans[i - 1] - ans[i]);\r\n\r\n            }\r\n            ans[i] += x;\r\n            n -= x;\r\n            if (x > 0) any = true;\r\n        }\r\n        if (!any) break;\r\n    }\r\n    if (n > 0) {\r\n        cout << \"NO\\n\";\r\n        return 0;\r\n    }\r\n    cout << \"YES\\n\";\r\n    for (int i = 0; i < k; ++i) {\r\n        cout << ans[i] << ' ';\r\n    }\r\n    cout << '\\n';\r\n\r\n    return 0;\r\n}"
}