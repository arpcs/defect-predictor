{
    "id": 67984987,
    "contestId": 1158,
    "creationTimeSeconds": 1577742467,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "zxyl"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1557671700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag,tree_order_statistics_node_update> ordered_set;\r\ntypedef gp_hash_table<int, null_type,hash<int>, equal_to<int>, direct_mask_range_hashing<int>, linear_probe_fn<>,\r\n    hash_standard_resize_policy<hash_exponential_size_policy<>, hash_load_check_resize_trigger<true>,true>> hash_set;\r\n\r\n#define scan(x) do{while((x=getchar())<'0'); for(x-='0'; '0'<=(_=getchar()); x=(x<<3)+(x<<1)+_-'0');}while(0)\r\nchar _;\r\n#define complete_unique(a) a.erase(unique(a.begin(),a.end()),a.end())\r\n#define all(a) a.begin(),a.end()\r\n#define println printf(\"\\n\");\r\n#define readln(x) getline(cin,x);\r\n#define pb push_back\r\n#define endl \"\\n\"\r\n#define INT_INF 0x3f3f3f3f\r\n#define LL_INF 0x3f3f3f3f3f3f3f3f\r\n#define EPS 1e-9\r\n#define MOD 1000000007\r\n#define MOD2 1494318097\r\n#define SEED 131\r\n#define mp make_pair\r\n#define fastio cin.tie(0); cin.sync_with_stdio(0);\r\n\r\n#define MAXN 2005\r\n\r\ntypedef unsigned long long ull;\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef pair<int,int> pii;\r\ntypedef pair<double,double> pdd;\r\ntypedef pair<ll,ll> pll;\r\ntypedef pair<int,pii> triple;\r\ntypedef int8_t byte;\r\n\r\nmt19937 g1(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nint randint(int a, int b){return uniform_int_distribution<int>(a, b)(g1);}\r\nll randlong(ll a,ll b){return uniform_int_distribution<long long>(a, b)(g1);}\r\n\r\nll gcd(ll a, ll b){return b == 0 ? a : gcd(b, a % b);}\r\nll lcm(ll a, ll b){return a*b/gcd(a,b);}\r\nll fpow(ll  b, ll exp, ll mod){if(exp == 0) return 1;ll t = fpow(b,exp/2,mod);if(exp&1) return t*t%mod*b%mod;return t*t%mod;}\r\nll divmod(ll i, ll j, ll mod){i%=mod,j%=mod;return i*fpow(j,mod-2,mod)%mod;}\r\n\r\nint len,st=1;\r\nbool done[MAXN];\r\nchar s[MAXN];\r\npii points[MAXN];\r\nvector<int> res;\r\n\r\ninline double todeg(double rad){\r\n    return rad*180/M_PI;\r\n}\r\n\r\nint main(){\r\n    scanf(\"%d\",&len);\r\n    for(int i=1; i<=len; i++){\r\n        scanf(\" %d %d\",&points[i].first,&points[i].second);\r\n        if(mp(points[i].second,points[i].first) < mp(points[st].second,points[st].first))\r\n            st = i;\r\n    }\r\n    res.pb(st);\r\n    done[st] = true;\r\n    scanf(\" %s\",s+1);\r\n    for(int q=1; q<=len-2; q++){\r\n        pair<double,int> most = mp(INT_MIN,-1), least = mp(INT_MAX,-1);\r\n        int lst = res.back();\r\n        for(int i=1; i<=len; i++){\r\n            if(done[i]) continue;\r\n            double ang = atan2(points[i].second-points[lst].second,points[i].first-points[lst].first);\r\n            most = max(most,mp(ang,i));\r\n            least = min(least,mp(ang,i));\r\n        }\r\n        if(s[q] == 'R') lst = most.second;\r\n        else lst = least.second;\r\n        res.pb(lst);\r\n        done[lst] = true;\r\n    }\r\n    for(int i=1; i<=len; i++) if(!done[i]) res.pb(i);\r\n    for(int check:res) printf(\"%d \",check);\r\n}"
}