{
    "id": 58956563,
    "contestId": 1158,
    "creationTimeSeconds": 1566047803,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "Scut22"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1557671700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 75,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\n#define pb push_back\nusing namespace std;\ntypedef long long LL;\ntypedef vector<int> VI;\n\nstruct point{\n  int x, y;\n  point(int x=0, int y=0) : x(x), y(y) {}\n  point operator + (point a) { return {x+a.x, y+a.y}; }\n  point operator - (point a) { return {x-a.x, y-a.y}; }\n  LL operator ^ (point a) { return (LL)x*a.y-(LL)y*a.x; }\n  bool operator < (point a) { if(x == a.x) return y<a.y; return x<a.x; }\n  void in() { scanf(\"%d %d\", &x, &y); }\n  void pr() { cout<<x<<' '<<y<<endl; }\n};\n\nconst int NN = 2222;\nint flag[NN];\npoint p[NN];\nchar s[NN];\nint I[NN], nn;\n\nint main() {\n#ifndef ONLINE_JUDGE\n  freopen(\"in.in\", \"r\", stdin);\n  freopen(\"out.out\", \"w\", stdout);\n#endif\n  int n, m=0;\n  VI ans;\n  scanf(\"%d\", &n);\n  for(int i=0; i<n; i++) p[i].in();\n  for(int i=0; i<n; i++) if(p[i]<p[m]) m=i;\n  flag[m]=1; ans.pb(m);\n  scanf(\"%s\", s+1);\n  for(int i=1; i<n; i++) {\n    for(int j=0; j<n; j++) if(flag[j] == 0) p[j]=p[j]-p[m];\n    for(int j=0; j<n; j++) if(flag[j] == 0) {m=j;break;}\n    if(s[i] == 'L') {\n      for(int j=0; j<n; j++) if(flag[j] == 0 && (p[j]^p[m])>0) m=j;\n    }else for(int j=0; j<n; j++) if(flag[j] == 0 && (p[j]^p[m])<0) m=j;\n    flag[m]=1;\n    ans.pb(m);\n  }\n  for(auto r:ans) printf(\"%d \", r+1);\n  puts(\"\");\n  return 0;\n}\n                      "
}