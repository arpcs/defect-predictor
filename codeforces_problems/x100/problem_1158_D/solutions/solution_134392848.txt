{
    "id": 134392848,
    "contestId": 1158,
    "creationTimeSeconds": 1636112252,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "Clovers"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1557671700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 75,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 1331200,
    "source": "/*\r\nthe vast starry sky,\r\nbright for those who chase the light.\r\n*/\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef pair<int,int> pii;\r\n#define mk make_pair\r\nconst int inf=(int)1e9;\r\nconst ll INF=(ll)5e18;\r\nconst int MOD=998244353;\r\nint _abs(int x){return x<0 ? -x : x;}\r\nint add(int x,int y){x+=y; return x>=MOD ? x-MOD : x;}\r\nint sub(int x,int y){x-=y; return x<0 ? x+MOD : x;}\r\n#define mul(x,y) (ll)(x)*(y)%MOD\r\nvoid Add(int &x,int y){x+=y; if(x>=MOD) x-=MOD;}\r\nvoid Sub(int &x,int y){x-=y; if(x<0) x+=MOD;}\r\nvoid Mul(int &x,int y){x=mul(x,y);}\r\nint qpow(int x,int y){int ret=1; while(y){if(y&1) ret=mul(ret,x); x=mul(x,x); y>>=1;} return ret;}\r\nvoid checkmin(int &x,int y){if(x>y) x=y;}\r\nvoid checkmax(int &x,int y){if(x<y) x=y;}\r\nvoid checkmin(ll &x,ll y){if(x>y) x=y;}\r\nvoid checkmax(ll &x,ll y){if(x<y) x=y;}\r\n#define out(x) cerr<<#x<<'='<<x<<' '\r\n#define outln(x) cerr<<#x<<'='<<x<<endl\r\n#define sz(x) (int)(x).size()\r\ninline int read(){\r\n    int x=0,f=1; char c=getchar();\r\n    while(c>'9'||c<'0'){if(c=='-') f=-1; c=getchar();}\r\n    while(c>='0'&&c<='9') x=(x<<1)+(x<<3)+(c^48),c=getchar();\r\n    return x*f;\r\n}\r\nconst int N=2005;\r\nstruct node{\r\n    int x,y,id;\r\n}a[N],b[N];\r\nbool cmprad(node A,node B){return (ll)A.x*B.y-(ll)A.y*B.x>0;}\r\nbool cmpx(node A,node B){return A.x<B.x||(A.x==B.x&&A.y<B.y);}\r\nint n,vis[N];\r\nchar s[N];\r\n\r\nint main()\r\n{\r\n    n=read(); \r\n    for(int i=1;i<=n;i++) a[i].x=read(),a[i].y=read(),a[i].id=i;\r\n    scanf(\"%s\",s+1);\r\n    int p=1;\r\n    for(int i=2;i<=n;i++) if(cmpx(a[i],a[p])) p=i;\r\n    printf(\"%d \",p); vis[p]=1;\r\n    int nowx=a[p].x,nowy=a[p].y;\r\n    for(int rnd=2;rnd<n;rnd++){\r\n        vector<node> v;\r\n        for(int i=1;i<=n;i++) if(!vis[a[i].id])\r\n            v.push_back({a[i].x-nowx,a[i].y-nowy,a[i].id});\r\n        sort(v.begin(),v.end(),cmprad);\r\n        node u=(s[rnd-1]=='L' ? v[0] : v.back());\r\n        vis[u.id]=1; nowx=a[u.id].x; nowy=a[u.id].y;\r\n        printf(\"%d \",u.id);\r\n    }\r\n    for(int i=1;i<=n;i++) if(!vis[i]) printf(\"%d\\n\",i);\r\n    return 0;\r\n}"
}