{
    "id": 54041538,
    "contestId": 1158,
    "creationTimeSeconds": 1557676712,
    "relativeTimeSeconds": 5012,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "uwi"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 12,
        "startTimeSeconds": 1557671700
    },
    "programmingLanguage": "Java 8",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 75,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 0,
    "source": "import java.io.ByteArrayInputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.PrintWriter;\r\nimport java.util.Arrays;\r\nimport java.util.InputMismatchException;\r\n\r\npublic class D2 {\r\n\tInputStream is;\r\n\tPrintWriter out;\r\n\tString INPUT = \"\";\r\n\t\r\n\tvoid solve()\r\n\t{\r\n\t\tint n = ni();\r\n\t\tint[][] co = new int[n][];\r\n\t\tfor(int i = 0;i < n;i++){\r\n\t\t\tco[i] = new int[]{ni(), ni()};\r\n\t\t}\r\n\t\tchar[] s = ns(n-2);\r\n\t\tint arg = 0;\r\n\t\tfor(int i = 0;i < n;i++){\r\n\t\t\tif(co[i][1] < co[arg][1] || \r\n\t\t\t\t\tco[i][1] == co[arg][1] &&\r\n\t\t\t\t\tco[i][0] < co[arg][0]){\r\n\t\t\t\targ = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tboolean[] done = new boolean[n];\r\n\t\tint[] perm = new int[n];\r\n\t\tperm[0] = arg;\r\n\t\tdone[arg] = true;\r\n\t\t{\r\n\t\t\tint larg = -1;\r\n\t\t\tint[] b = new int[]{-1000000007, co[arg][1]+1};\r\n\t\t\tfor(int j = 0;j < n;j++){\r\n\t\t\t\tif(done[j])continue;\r\n\t\t\t\tif(larg == -1){\r\n\t\t\t\t\tlarg = j;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif(inArg(\r\n\t\t\t\t\t\tco[arg][0]-b[0], co[arg][1]-b[1],\r\n\t\t\t\t\t\tco[larg][0]-co[arg][0], co[larg][1]-co[arg][1], \r\n\t\t\t\t\t\tco[j][0]-co[arg][0], co[j][1]-co[arg][1]\r\n\t\t\t\t\t\t) >= 0){\r\n\t\t\t\t\tlarg = j;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(s[0] == 'L'){\r\n\t\t\t\tperm[1] = larg;\r\n\t\t\t}else{\r\n\t\t\t\tperm[1] = perm[0];\r\n\t\t\t\tperm[0] = larg;\r\n\t\t\t}\r\n\t\t\tdone[larg] = true;\r\n\t\t}\r\n\t\t\r\n\t\tfor(int i = 1;i < n-1;i++){\r\n\t\t\tif(s[i-1] == 'L'){\r\n\t\t\t\tif(i == n-2 || s[i] == 'L'){\r\n\t\t\t\t\tint larg = -1;\r\n\t\t\t\t\tfor(int j = 0;j < n;j++){\r\n\t\t\t\t\t\tif(done[j])continue;\r\n\t\t\t\t\t\tif(larg == -1){\r\n\t\t\t\t\t\t\tlarg = j;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(inArg(\r\n\t\t\t\t\t\t\t\tco[perm[i]][0]-co[perm[i-1]][0], co[perm[i]][1]-co[perm[i-1]][1],\r\n\t\t\t\t\t\t\t\tco[larg][0]-co[perm[i]][0], co[larg][1]-co[perm[i]][1], \r\n\t\t\t\t\t\t\t\tco[j][0]-co[perm[i]][0], co[j][1]-co[perm[i]][1]\r\n\t\t\t\t\t\t\t\t) >= 0){\r\n\t\t\t\t\t\t\tlarg = j;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tperm[i+1] = larg;\r\n\t\t\t\t\tdone[larg] = true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tint larg = -1;\r\n\t\t\t\t\tfor(int j = 0;j < n;j++){\r\n\t\t\t\t\t\tif(done[j])continue;\r\n\t\t\t\t\t\tif(larg == -1){\r\n\t\t\t\t\t\t\tlarg = j;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(inArg(\r\n\t\t\t\t\t\t\t\tco[perm[i]][0]-co[perm[i-1]][0], co[perm[i]][1]-co[perm[i-1]][1],\r\n\t\t\t\t\t\t\t\tco[j][0]-co[perm[i]][0], co[j][1]-co[perm[i]][1],\r\n\t\t\t\t\t\t\t\tco[larg][0]-co[perm[i]][0], co[larg][1]-co[perm[i]][1]\r\n\t\t\t\t\t\t\t\t) >= 0){\r\n\t\t\t\t\t\t\tlarg = j;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tperm[i+1] = larg;\r\n\t\t\t\t\tdone[larg] = true;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(i == n-2 || s[i] == 'R'){\r\n\t\t\t\t\tint larg = -1;\r\n\t\t\t\t\tfor(int j = 0;j < n;j++){\r\n\t\t\t\t\t\tif(done[j])continue;\r\n\t\t\t\t\t\tif(larg == -1){\r\n\t\t\t\t\t\t\tlarg = j;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(inArg(\r\n\t\t\t\t\t\t\t\tco[larg][0]-co[perm[i]][0], co[larg][1]-co[perm[i]][1], \r\n\t\t\t\t\t\t\t\tco[perm[i]][0]-co[perm[i-1]][0], co[perm[i]][1]-co[perm[i-1]][1],\r\n\t\t\t\t\t\t\t\tco[j][0]-co[perm[i]][0], co[j][1]-co[perm[i]][1]\r\n\t\t\t\t\t\t\t\t) >= 0){\r\n\t\t\t\t\t\t\tlarg = j;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tperm[i+1] = larg;\r\n\t\t\t\t\tdone[larg] = true;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tint larg = -1;\r\n\t\t\t\t\tfor(int j = 0;j < n;j++){\r\n\t\t\t\t\t\tif(done[j])continue;\r\n\t\t\t\t\t\tif(larg == -1){\r\n\t\t\t\t\t\t\tlarg = j;\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(inArg(\r\n\t\t\t\t\t\t\t\tco[larg][0]-co[perm[i]][0], co[larg][1]-co[perm[i]][1], \r\n\t\t\t\t\t\t\t\tco[j][0]-co[perm[i]][0], co[j][1]-co[perm[i]][1],\r\n\t\t\t\t\t\t\t\tco[perm[i]][0]-co[perm[i-1]][0], co[perm[i]][1]-co[perm[i-1]][1]\r\n\t\t\t\t\t\t\t\t) >= 0){\r\n\t\t\t\t\t\t\tlarg = j;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tperm[i+1] = larg;\r\n\t\t\t\t\tdone[larg] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor(int v : perm){\r\n\t\t\tout.print(v + 1  +\" \");\r\n\t\t}\r\n\t\tout.println();\r\n\t}\r\n\t\r\n\tpublic static int inArg(long ax, long ay, long bx, long by, long cx, long cy)\r\n\t{\r\n\t\treturn (int)(Long.signum(ax*cy-ay*cx)-Long.signum(bx*cy-by*cx)-Long.signum(ax*by-ay*bx));\r\n\t}\r\n\t\r\n\tpublic static int inArg(long x, long y, long ax, long ay, long bx, long by, long cx, long cy)\r\n\t{\r\n\t\treturn inArg(ax-x, ay-y, bx-x, by-y, cx-x, cy-y);\r\n\t}\r\n\t\r\n\tpublic static int inArg(long[] t, long[] a, long[] b, long[] c){ return inArg(a[0]-t[0], a[1]-t[1], b[0]-t[0], b[1]-t[1], c[0]-t[0], c[1]-t[1]); }\r\n\tpublic static int inArg(int[] t, int[] a, int[] b, int[] c){ return inArg(a[0]-t[0], a[1]-t[1], b[0]-t[0], b[1]-t[1], c[0]-t[0], c[1]-t[1]); }\r\n\r\n\t\r\n\tvoid run() throws Exception\r\n\t{\r\n\t\tis = oj ? System.in : new ByteArrayInputStream(INPUT.getBytes());\r\n\t\tout = new PrintWriter(System.out);\r\n\t\t\r\n\t\tlong s = System.currentTimeMillis();\r\n\t\tsolve();\r\n\t\tout.flush();\r\n\t\ttr(System.currentTimeMillis()-s+\"ms\");\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) throws Exception { new D2().run(); }\r\n\t\r\n\tprivate byte[] inbuf = new byte[1024];\r\n\tpublic int lenbuf = 0, ptrbuf = 0;\r\n\t\r\n\tprivate int readByte()\r\n\t{\r\n\t\tif(lenbuf == -1)throw new InputMismatchException();\r\n\t\tif(ptrbuf >= lenbuf){\r\n\t\t\tptrbuf = 0;\r\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\r\n\t\t\tif(lenbuf <= 0)return -1;\r\n\t\t}\r\n\t\treturn inbuf[ptrbuf++];\r\n\t}\r\n\t\r\n\tprivate boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\r\n\tprivate int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\r\n\t\r\n\tprivate double nd() { return Double.parseDouble(ns()); }\r\n\tprivate char nc() { return (char)skip(); }\r\n\t\r\n\tprivate String ns()\r\n\t{\r\n\t\tint b = skip();\r\n\t\tStringBuilder sb = new StringBuilder();\r\n\t\twhile(!(isSpaceChar(b))){ // when nextLine, (isSpaceChar(b) && b != ' ')\r\n\t\t\tsb.appendCodePoint(b);\r\n\t\t\tb = readByte();\r\n\t\t}\r\n\t\treturn sb.toString();\r\n\t}\r\n\t\r\n\tprivate char[] ns(int n)\r\n\t{\r\n\t\tchar[] buf = new char[n];\r\n\t\tint b = skip(), p = 0;\r\n\t\twhile(p < n && !(isSpaceChar(b))){\r\n\t\t\tbuf[p++] = (char)b;\r\n\t\t\tb = readByte();\r\n\t\t}\r\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\r\n\t}\r\n\t\r\n\tprivate char[][] nm(int n, int m)\r\n\t{\r\n\t\tchar[][] map = new char[n][];\r\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\r\n\t\treturn map;\r\n\t}\r\n\t\r\n\tprivate int[] na(int n)\r\n\t{\r\n\t\tint[] a = new int[n];\r\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\r\n\t\treturn a;\r\n\t}\r\n\t\r\n\tprivate int ni()\r\n\t{\r\n\t\tint num = 0, b;\r\n\t\tboolean minus = false;\r\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\r\n\t\tif(b == '-'){\r\n\t\t\tminus = true;\r\n\t\t\tb = readByte();\r\n\t\t}\r\n\t\t\r\n\t\twhile(true){\r\n\t\t\tif(b >= '0' && b <= '9'){\r\n\t\t\t\tnum = num * 10 + (b - '0');\r\n\t\t\t}else{\r\n\t\t\t\treturn minus ? -num : num;\r\n\t\t\t}\r\n\t\t\tb = readByte();\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate long nl()\r\n\t{\r\n\t\tlong num = 0;\r\n\t\tint b;\r\n\t\tboolean minus = false;\r\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\r\n\t\tif(b == '-'){\r\n\t\t\tminus = true;\r\n\t\t\tb = readByte();\r\n\t\t}\r\n\t\t\r\n\t\twhile(true){\r\n\t\t\tif(b >= '0' && b <= '9'){\r\n\t\t\t\tnum = num * 10 + (b - '0');\r\n\t\t\t}else{\r\n\t\t\t\treturn minus ? -num : num;\r\n\t\t\t}\r\n\t\t\tb = readByte();\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate boolean oj = System.getProperty(\"ONLINE_JUDGE\") != null;\r\n\tprivate void tr(Object... o) { if(!oj)System.out.println(Arrays.deepToString(o)); }\r\n}\r\n"
}