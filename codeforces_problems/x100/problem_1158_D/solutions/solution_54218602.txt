{
    "id": 54218602,
    "contestId": 1158,
    "creationTimeSeconds": 1557969376,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "Marckess"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1557671700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 75,
    "timeConsumedMillis": 312,
    "memoryConsumedBytes": 307200,
    "source": "#include <bits/stdc++.h>\n\n#define endl '\\n'\n#define fi first\n#define se second\n#define MOD(n,k) ( ( ((n) % (k)) + (k) ) % (k))\n#define forn(i,n) for (int i = 0; i < n; i++)\n#define forr(i,a,b) for (int i = a; i <= b; i++)\n#define all(v) v.begin(), v.end()\n#define pb(x) push_back(x)\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> ii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<ii> vii;\n\nconst int MX = 2005;\nint n;\nstring s;\nvii p, hull;\nii act;\nmap<ii, int> mp;\n\nii operator - (ii a, ii b) { return {a.fi - b.fi, a.se - b.se}; }\nll operator ^ (ii a, ii b) { return 1ll * a.fi * b.se - 1ll * a.se * b.fi; }\nint md (ii &o, ii &p, ii &q) {\n\tll a = (p - o) ^ (q - o);\n\treturn a ? (a > 0 ? 1 : -1) : 0;\n}\n\nvii convex_hull (vii &p) {\n\tsort(all(p));\n\tsort(p.begin()+1, p.end(), [&] (ii &a, ii &b) {\n\t\treturn md(p[0], a, b) == 1;\n\t});\n\n\tvii res;\n\tfor (int i = 0; i < p.size(); i++) {\n\t\twhile (res.size() > 2 && md(*(res.end()-2), res.back(), p[i]) == -1)\n\t\t\tres.pop_back();\n\t\tres.pb(p[i]);\n\t}\n\treturn res;\n}\n\nint main () {\n\tios_base::sync_with_stdio(0); cin.tie(0);\n\t\n\tcin >> n;\n\tp.resize(n);\n\tforn(i,n) {\n\t\tcin >> p[i].fi >> p[i].se;\n\t\tmp[p[i]] = i + 1;\n\t}\n\tcin >> s;\n\n\thull = convex_hull(p);\n\tact = hull[0];\n\n\tfor (char c : s) {\n\t\tcout << mp[act] << \" \";\n\t\t\n\t\tint i = 0;\n\t\twhile (hull[i] != act) i++;\n\t\tif (c == 'L') i++;\n\t\telse i = i - 1 + (int)hull.size();\n\t\tif (i >= hull.size()) i -= (int)hull.size();\n\n\t\tauto it = find(all(p), act);\n\t\tact = hull[i];\n\t\tp.erase(it);\n\t\thull = convex_hull(p);\n\t}\n\n\tcout << mp[act] << \" \";\n\tif (hull[0] == act) cout << mp[hull[1]];\n\telse cout << mp[hull[0]];\n\tcout << endl;\n\n\treturn 0;\n}\n"
}