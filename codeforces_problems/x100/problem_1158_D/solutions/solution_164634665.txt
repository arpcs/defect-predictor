{
    "id": 164634665,
    "contestId": 1158,
    "creationTimeSeconds": 1658075125,
    "relativeTimeSeconds": 5425,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "mana"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1658069700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\nusing ll = long long;\r\n\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n    vector<ll> x(n), y(n);\r\n    for (int i = 0; i < n; i++)\r\n        cin >> x[i] >> y[i];\r\n    string s;\r\n    cin >> s;\r\n    vector<int> p(n);\r\n    iota(p.begin(), p.end(), 0);\r\n    shuffle(p.begin(), p.end(), rng);\r\n    auto get = [&](int pos) {\r\n        ll x1 = x[p[pos + 1]] - x[p[pos]];\r\n        ll y1 = y[p[pos + 1]] - y[p[pos]];\r\n        ll x2 = x[p[pos + 2]] - x[p[pos + 1]];\r\n        ll y2 = y[p[pos + 2]] - y[p[pos + 1]];\r\n        return (x1 * y2 - x2 * y1 > 0) ^ (s[pos] == 'R');\r\n    };\r\n    for (int i = 0; i < n; i++) {\r\n        for (int j = 0; j + 2 < n; j++) {\r\n            if (!get(j))\r\n                swap(p[j + 1], p[j + 2]);\r\n        }\r\n    }\r\n    for (int i = 0; i < n; i++)\r\n        cout << p[i] + 1 << \" \\n\"[i + 1 == n];\r\n}\r\n\r\nsigned main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    int T = 1;\r\n    // cin >> T;\r\n    while (T--) {\r\n        solve();\r\n    }\r\n}"
}