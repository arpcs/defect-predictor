{
    "id": 54046068,
    "contestId": 1158,
    "creationTimeSeconds": 1557678863,
    "relativeTimeSeconds": 7163,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "DeadlyPillow"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 14,
        "startTimeSeconds": 1557671700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 16076800,
    "source": "/*\r\n    Prodigia comploratus,\r\n    silens, oro:\r\n    \"Regnet exitium.\"\r\n*/\r\n#include \"bits/stdc++.h\"\r\nusing namespace std;\r\nusing ll = long long;\r\nconst int N = 2e3 + 5, MOD = 1e9 + 7;\r\nvector<pair<int,int>>pts;\r\nint n;\r\nstring s;\r\nbool vis[N];\r\nint pos[N][N];\r\nint main(){\r\n    cin >> n;\r\n    pts.resize(n);\r\n    for(auto & x : pts)\r\n        cin >> x.first >> x.second;\r\n    cin >> s;\r\n    for(int i = 0; i < n; i++){\r\n        vector<int> v;\r\n        for(int j = 0; j < n; j++){\r\n            v.push_back(j);\r\n        }\r\n        sort(v.begin(),v.end(),[&](int x, int y){\r\n                int a = pts[x].first - pts[i].first;\r\n                int b = pts[x].second - pts[i].second;\r\n                int c = pts[y].first - pts[i].first;\r\n                int d = pts[y].second - pts[i].second;\r\n                ///a/b<c/d\r\n                return 1ll * a * d < 1ll * c * b;\r\n             });\r\n        for(int j = 0; j < n; j++)\r\n            pos[i][v[j]] = j;\r\n    }\r\n\r\n    vis[0] = vis[1] = 1;\r\n\r\n    vector<int>v;\r\n    v.push_back(0);   v.push_back(1);\r\n\r\n    for(int k = 0; k < n - 2; k++){\r\n        for(int y = 0; y < n; y++)\r\n        if(!vis[y]){\r\n            vector<int>per; per.push_back(v.back());    per.push_back(v[v.size()-2]);\r\n            per.push_back(y);\r\n            sort(per.begin(),per.end());\r\n            int b4 = -1;\r\n            if(k)b4 = v[v.size() - 3];\r\n            bool ok = false;\r\n            do{\r\n                bool f = true;\r\n                if(~b4){\r\n                    if(pos[per[0]][b4] < pos[per[0]][per[1]] && s[k-1] == 'L')f = false;\r\n                    if(pos[per[0]][b4] > pos[per[0]][per[1]] && s[k-1] == 'R')f = false;\r\n                }\r\n                if(pos[per[1]][per[0]] < pos[per[1]][per[2]] && s[k-1] == 'L')f = false;\r\n                if(pos[per[1]][per[0]] > pos[per[1]][per[2]] && s[k-1] == 'R')f = false;\r\n                if(f){\r\n                    v[v.size()-2] = per[0];\r\n                    v.back() = per[1];\r\n                    v.push_back(per[2]);\r\n                    ok = true;\r\n                    break;\r\n                }\r\n            }while(next_permutation(per.begin(),per.end()));\r\n            if(ok){\r\n                vis[y] = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    for(auto x : v)cout << x+1 << \" \";\r\n\r\n\r\n    return 0;\r\n}\r\n"
}