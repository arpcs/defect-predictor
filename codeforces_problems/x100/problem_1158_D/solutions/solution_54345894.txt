{
    "id": 54345894,
    "contestId": 1158,
    "creationTimeSeconds": 1558182372,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "Cyanic"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1557671700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 75,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\r\n#define per(i,a,b) for(int i=(a);i>=(b);i--)\r\n#define REP(i,n) for(int i=(0);i<(n);i++)\r\n#define fi first\r\n#define se second\r\n#define pb push_back\r\n#define mp make_pair\r\nusing namespace std;\r\ntypedef pair<int,int> pii;\r\ntypedef vector<int> vi;\r\ntypedef long long ll;\r\n\r\nconst int N=2005;\r\nstruct pt{\r\n\tint x,y;\r\n}p[N];\r\nint vis[N],n,u,v;\r\nchar s[N];\r\n\r\nvoid push(int x){\r\n\tprintf(\"%d \",x);\r\n\tvis[x]=1;\r\n}\r\n\r\nll cross(pt p,pt a,pt b){\r\n\treturn (ll)(a.x-p.x)*(b.y-p.y)-(ll)(a.y-p.y)*(b.x-p.x);\r\n}\r\n\r\nint main(){\r\n\tscanf(\"%d\",&n);\r\n\trep(i,1,n)scanf(\"%d%d\",&p[i].x,&p[i].y);\r\n\tscanf(\"%s\",s+1);\r\n\r\n\tu=1;\r\n\trep(i,1,n)\r\n\t\tif(p[i].x<p[u].x)u=i;\r\n\tpush(u);\r\n\t\r\n\trep(i,1,n-2){\r\n\t\tv=0;\r\n\t\trep(j,1,n)\r\n\t\t\tif(!vis[j]){\r\n\t\t\t\tif(!v)v=j;\r\n\t\t\t\telse if(s[i]=='L'&&cross(p[u],p[v],p[j])<0)v=j;\r\n\t\t\t\telse if(s[i]=='R'&&cross(p[u],p[v],p[j])>0)v=j;\r\n\t\t\t}\r\n\t\tpush(u=v);\r\n\t}\r\n\r\n\trep(i,1,n)\r\n\t\tif(!vis[i])u=i;\r\n\tpush(u);\r\n\tputs(\"\");\r\n\r\n\treturn 0;\r\n}"
}