{
    "id": 74384916,
    "contestId": 1158,
    "creationTimeSeconds": 1585225470,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "yhx-12243"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1557671700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define cross(x, y, z) (((y) - (x)) ^ ((z) - (x)))\r\n\r\ntypedef long long ll;\r\nconst int N = 1054;\r\n\r\nstruct vec2 {\r\n\tint x, y;\r\n\tvec2 (int x0 = 0, int y0 = 0) : x(x0), y(y0) {}\r\n\tvec2 * read() {scanf(\"%d%d\", &x, &y); return this;}\r\n\tinline vec2 operator - (const vec2 &B) const {return vec2(x - B.x, y - B.y);}\r\n\tinline ll operator ^ (const vec2 &B) const {return (ll)x * B.y - (ll)y * B.x;}\r\n\tinline bool operator < (const vec2 &B) const {return x < B.x || (x == B.x && y < B.y);}\r\n} p[N];\r\n\r\nint n;\r\nint o[N];\r\nchar s[N];\r\nbool used[N];\r\n\r\nint main() {\r\n\tint i, j;\r\n\tscanf(\"%d\", &n);\r\n\tfor (i = 0; i < n; ++i) p[i].read();\r\n\tscanf(\"%s\", s + 1);\r\n\t*o = std::min_element(p, p + n) - p, used[*o] = true;\r\n\tfor (i = 1; i < n - 1; ++i) {\r\n\t\tvec2 &base = p[o[i - 1]]; int &ret = o[i]; ret = -1;\r\n\t\tfor (j = 0; j < n; ++j) if (!used[j])\r\n\t\t\tif (!~ret || (s[i] == 76 ? cross(base, p[j], p[ret]) > 0 : cross(base, p[j], p[ret]) < 0)) ret = j;\r\n\t\tused[ret] = true;\r\n\t}\r\n\to[n - 1] = std::find(used, used + n, false) - used;\r\n\tfor (i = 0; i < n; ++i) printf(\"%d%c\", o[i] + 1, i == n - 1 ? 10 : 32);\r\n\treturn 0;\r\n}"
}