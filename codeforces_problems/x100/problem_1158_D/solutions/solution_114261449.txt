{
    "id": 114261449,
    "contestId": 1158,
    "creationTimeSeconds": 1619425642,
    "relativeTimeSeconds": 5242,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "tap_tapii"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1619420400
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 75,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 307200,
    "source": "\n#include <bits/stdc++.h>\n#define int long long\n#define ld long double\n#define vc vector\n#define s second\n#define f first\n\n#define p(v) cout << #v << \": \" << v << endl;\n#define print(v) cout << #v << \": \"; for (auto x : v )cout << x << \" \"; cout << endl;\n\n\n//#include 'prettyprint.hpp'\n\nusing namespace std;\n\n\ntypedef pair <int, int> pii;\n\n\nint xmax(int & a, int b){\n    return a = max(a, b);\n}\nint xmin(int & a, int b){\n    return a = min(a, b);\n}\ntypedef pair <int, pii> i_point;\n\nchar ccw (pii a, pii b){\n    int res = a.f*b.s - a.s *b.f;\n    if (res == 0) return '5';\n    if (res < 0) return 'R';\n    return 'L';\n}\n\nchar ccw (i_point a, i_point b, i_point c){\n    return ccw ({b.s.f - c.s.f, b.s.s - c.s.s}, {a.s.f - c.s.f, a.s.s - c.s.s});\n}\n\nvoid do_test(){\n\n\n    int n; cin >> n;\n    vc <pii > pr (n);\n    set <pair <int, pii> > pts;\n    vc <int> hat (n, n);\n    int s_ind = 0;\n\n    for (int i=0; i<n; i++){\n        cin >> pr[i].f >> pr[i].s;\n        if (pr[i].f < pr[s_ind].f) s_ind = i;\n        pts.insert({i, pr[i]});\n    }\n    hat[s_ind] = 1;\n\n    string s; cin >> s;\n    pts.erase({s_ind, pr[s_ind]});\n    i_point last = {s_ind, pr[s_ind]};\n    for (int i=0; i+2<n; i++){\n        auto tap = pts.begin();\n        auto cur = *tap;\n\n        for (auto tapii : pts){\n            if (ccw (cur, tapii, last) == s[i]){\n                cur = tapii;\n            }\n        }\n        hat[cur.f] = i+2;\n        pts.erase(cur);\n        last = cur;\n\n    }\n\n    for (int i=1; i<=n; i++){\n        for (int j=0; j<n; j++){\n            if (hat[j] == i) cout << j+1 << \" \";\n        }\n    }\n    cout << \"\\n\";\n\n\n\n}\n\n\nsigned main(){\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n\n    //cout << ccw ({0, {0, 1}}, {0, {1, 0}}, {0, {0, 0}}) << endl;\n    do_test();\n}\n"
}