{
    "id": 54055479,
    "contestId": 1158,
    "creationTimeSeconds": 1557734114,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "skrydg"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1557671700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 409600,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <string>\r\n#include <vector>\r\n#include <queue>\r\n#include <stack>\r\n#include <set>\r\n#include <map>\r\n#include <deque>\r\n#include <list>\r\n#include <iterator>\r\n#include <functional>\r\n#include <sstream>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <cctype>\r\n#include <cmath>\r\n#include <climits>\r\n#include <ctime>\r\n#include <cassert>\r\n#include <bitset>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\n#include <iomanip>\r\n#include <random>\r\n#include <chrono>\r\n\r\nusing namespace std;\r\n\r\ntypedef unsigned long long ull;\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, ll> pll;\r\ntypedef pair<ld, ld> pld;\r\ntypedef pair<short, short> pss;\r\n\r\n#define fi first\r\n#define se second\r\n#define mp make_pair\r\n#define pb push_back\r\n#define pset set <int>*\r\n#define vi vector <int>\r\n#define vll vector <ll>\r\n#define sz(a) ((int)(a.size()))\r\n//#define clear(a) memset((a), 0, sizeof (a))\r\n\r\npii a[20000];\r\n\r\npld operator - (pld a, pld b) {\r\n    return {a.fi - b.fi, a.se - b.se};\r\n}\r\n\r\nld len(pld a) {\r\n    return sqrt(a.fi * a.fi + a.se * a.se);\r\n}\r\n\r\nld S(pld a, pld b) {\r\n    return a.fi * b.fi + a.se * b.se;\r\n}\r\n\r\nld V(pld a, pld b) {\r\n    return a.fi * b.se - a.se * b.fi;\r\n}\r\n\r\nld get_u(pld a, pld b) {\r\n    return atan2(S(a, b), V(a, b));\r\n}\r\n\r\nld get_u(pii prev, pii a, pii b) {\r\n    pii _a = a - prev;\r\n    pii _b = b - a;\r\n    return get_u((pld)_a, (pld)_b);\r\n}\r\n\r\nbool was[200000];\r\n\r\nint main(int argc, const char * argv[]) {\r\n   // assert(freopen(\"input.txt\", \"r\", stdin));\r\n   // freopen(\"output.txt\", \"w\", stdout);\r\n    int n;\r\n    cin >> n;\r\n    pii mi = {1e9, 1e9};\r\n    int ind_mi = -1;\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> a[i].fi >> a[i].se;\r\n        if (mi > a[i]) {\r\n            mi = a[i];\r\n            ind_mi = i;\r\n        }\r\n    }\r\n    string s;\r\n    cin >> s;\r\n    assert(ind_mi != -1);\r\n    \r\n    pii prev = {-1e9, -1e9};\r\n    \r\n    vector<int> ans;\r\n    \r\n    for (int i = 1; i < n - 1; i++) {\r\n        ans.pb(ind_mi);\r\n        was[ind_mi] = 1;\r\n        \r\n        ld u = 10000;\r\n        int ind_u = -1;\r\n        if (s[i - 1] == 'R') {\r\n            u = 1000;\r\n            ind_u = -1;\r\n            \r\n            for (int j = 0; j < n; j++) {\r\n                if (!was[j]) {\r\n                    //cout <<  ind_mi << \" \" << j << \" \" << get_u(prev, a[ind_mi], a[j]) << endl;\r\n                    if (u > get_u(prev, a[ind_mi], a[j])) {\r\n                        u = get_u(prev, a[ind_mi], a[j]);\r\n                        ind_u = j;\r\n                    }\r\n                }\r\n            }\r\n        \r\n        } else {\r\n            u = -1;\r\n            ind_u = -1;\r\n            \r\n            for (int j = 0; j < n; j++) {\r\n                if (!was[j]) {\r\n                    //cout << ind_mi << \" \" << j << \" \" << get_u(prev, a[ind_mi], a[j]) << endl;\r\n                    if (u < get_u(prev, a[ind_mi], a[j])) {\r\n                        u = get_u(prev, a[ind_mi], a[j]);\r\n                        ind_u = j;\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        assert(ind_u != -1);\r\n        prev = a[ind_mi];\r\n        ind_mi = ind_u;\r\n    }\r\n    \r\n    for (int i = 0; i < n; i++) {\r\n        if (!was[i]) {\r\n            ans.pb(i);\r\n        }\r\n    }\r\n    \r\n    \r\n    for (int i = 0; i < n; i++) {\r\n        printf(\"%i \", ans[i] + 1);\r\n    }\r\n    return 0;\r\n}\r\n\r\n"
}