{
    "id": 54046264,
    "contestId": 1158,
    "creationTimeSeconds": 1557678894,
    "relativeTimeSeconds": 7194,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "Ilya_MSU"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 8,
        "startTimeSeconds": 1557671700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#define _CRT_SECURE_NO_WARNINGS\r\n#pragma comment(linker, \"/STACK:256000000\")\r\n#define _USE_MATH_DEFINES\r\n#include<iostream>\r\n#include<vector>\r\n#include<string>\r\n#include<stack>\r\n#include<algorithm>\r\n#include<cmath>\r\n#include<set>\r\n#include<queue>\r\n#include<sstream>\r\n#include<utility>\r\n#include<map>\r\n#include<ctime>\r\n#include<cstdio>\r\n#include<cassert>\r\n#include<functional>\r\n\r\n\r\n\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef unsigned int uint;\r\ntypedef unsigned long long ull;\r\ntypedef pair<ll, ll> pll;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<char, char> pcc;\r\ntypedef pair<double, double> pdd;\r\n\r\n#define show(x) cerr << x\r\n#define debug(x) show(#x << \": \" << (x) << endl)\r\n\r\nconst long double PI = 3.14159265358979323846;\r\nconst long double eps = 1e-5;\r\nconst int INF = numeric_limits<int>::max();\r\nconst ll LINF = numeric_limits<ll>::max();\r\nconst ll mod = 1000 * 1000 * 1000 + 7;\r\n\r\n\r\nbool f(pll a, pll b, pll c) {\r\n    return a.first * (b.second - c.second)\r\n        + b.first * (c.second - a.second) + c.first * (a.second - b.second) < 0;\r\n}\r\n\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n    vector<pair<pll, int> > p(n);\r\n    for (int i = 0; i < n; ++i) {\r\n        cin >> p[i].first.first >> p[i].first.second;\r\n        p[i].second = i;\r\n    }\r\n    sort(p.begin(), p.end());\r\n    string s;\r\n    cin >> s;\r\n    vector<int> res(n, 0);\r\n    vector<int> used(n, 0);\r\n    used[0] = 1;\r\n    pll pr(p[0].first);\r\n    pr.second += 1;\r\n    for (int i = 1; i < n - 1; ++i) {\r\n        ll x = p[res[i - 1]].first.first - pr.first, y = p[res[i - 1]].first.second - pr.second;\r\n        ll rec1 = -(LINF - 10);\r\n        ll rec2 = LINF;\r\n        int id1, id2;\r\n        for (int j = 0; j < n; ++j) {\r\n            if (used[j])\r\n                continue;\r\n            ll x1 = p[j].first.first - p[res[i - 1]].first.first;\r\n            ll y1 = p[j].first.second - p[res[i - 1]].first.second;\r\n            double cur = (x1 * x + y1 * y) / sqrt(x1 * x1 + y1 * y1);\r\n            if (cur > rec1) {\r\n                rec1 = cur;\r\n                id1 = j;\r\n            }\r\n            if (cur < rec2) {\r\n                rec2 = cur;\r\n                id2 = j;\r\n            }\r\n        }\r\n        if (s[i - 1] == 'L') {\r\n            res[i] = id1;\r\n            used[id1] = 1;\r\n        }\r\n        else {\r\n            res[i] = id2;\r\n            used[id2] = 1;\r\n        }\r\n    }\r\n    for (int i = 0; i < n; ++i)\r\n        if (used[i] == 0)\r\n            res[n - 1] = i;\r\n    for (int i = 0; i < n; ++i) {\r\n        cout << p[res[i]].second + 1 << \" \";\r\n    }\r\n    cout << endl;\r\n\r\n}\r\n\r\n//#define LOCAL\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0);cin.tie(nullptr);cout.tie(nullptr);\r\n\r\n#ifdef LOCAL\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    //freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n    solve();\r\n\r\n\r\n#ifdef LOCAL\r\n    cerr << \"Time elapsed: \" << 1.0 * clock() / CLOCKS_PER_SEC << \" s.\\n\";\r\n#endif\t\r\n    return 0;\r\n}"
}