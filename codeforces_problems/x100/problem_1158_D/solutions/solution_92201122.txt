{
    "id": 92201122,
    "contestId": 1158,
    "creationTimeSeconds": 1599560648,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "Qingyu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1557671700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 75,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 1331200,
    "source": "// by qingyu\n#include <bits/stdc++.h>\n\ntypedef long long ll;\nconst int N = 1e4 + 50;\n\nint n, x[N], y[N], d[N];\nbool ban[N];\n\ninline ll cross(ll x1, ll y1, ll x2, ll y2)\n{\n\treturn x1 * y2 - y1 * x2;\n}\n\ninline char nc()\n{\n\tstatic char buf[1000000], *p1 = buf, *p2 = buf;\n\treturn p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1000000, stdin), p1 == p2) ? EOF : *p1++;\n}\n\ninline int read()\n{\n\tint res = 0, neg = 1;\n\tchar ch;\n\tdo \n\t{\n\t\tch = nc();\n\t\tif (ch == '-') neg = -1;\n\t} while (ch < 48 || ch > 57);\n\tdo res = res * 10 + ch - 48, ch = nc(); while (ch >= 48 && ch <= 57);\n\treturn res * neg;\n}\n\ninline int rop()\n{\n\tchar ch;\n\tdo ch = nc(); while (ch != 'L' && ch != 'R');\n\treturn ch == 'R';\n}\n\nint main()\n{\n\tn = read();\n\tint p = 1;\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tx[i] = read(), y[i] = read();\n\t\tif (x[p] > x[i] || (x[p] == x[i] && y[p] > y[i]))\n\t\t{\n\t\t\tp = i;\n\t\t}\n\t}\n\tfor (int i = 1; i < n - 1; ++i) d[i] = rop();\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\tban[p] = true; printf(\"%d \", p);\n\t\tint pl = -1, pr = -1;\n\t\tfor (int j = 1; j <= n; ++j) if (!ban[j])\n\t\t{\n\t\t\tif (pl == -1)\n\t\t\t{\n\t\t\t\tpl = pr = j;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (cross(x[pl] - x[p], y[pl] - y[p], x[j] - x[p], y[j] - y[p]) > 0) pl = j;\n\t\t\t\tif (cross(x[pr] - x[p], y[pr] - y[p], x[j] - x[p], y[j] - y[p]) < 0) pr = j;\n\t\t\t}\n\t\t}\n\t\tif (d[i] == 0) p = pr;\n\t\telse p = pl;\n\t}\n\treturn 0;\n}\n"
}