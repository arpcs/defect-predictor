{
    "id": 54045871,
    "contestId": 1158,
    "creationTimeSeconds": 1557678799,
    "relativeTimeSeconds": 7099,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "Egor.Lifar"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 16,
        "startTimeSeconds": 1557671700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": " /*\n\u0417\u0410\u041f\u0423\u0421\u041a\u0410\u0415\u041c \n\u2591\u0413\u0423\u0421\u042f\u2591\u2584\u2580\u2580\u2580\u2584\u2591\u0420\u0410\u0411\u041e\u0422\u042f\u0413\u0423\u2591\u2591\n\u2584\u2588\u2588\u2588\u2580\u2591\u25d0\u2591\u2591\u2591\u258c\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u258c\u2591\u2591\u2591\u2591\u2591\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u2590\u2591\u2591\u2591\u2591\u2591\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u2590\u2591\u2591\u2591\u2591\u2591\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u2590\u2591\u2591\u2591\u2591\u2591\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u2590\u2591\u2591\u2591\u2591\u2591\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u2590\u2591\u2591\u2591\u2591\u2591\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u2590\u2591\u2591\u2591\u2591\u2591\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u2590\u2591\u2591\u2591\u2591\u2591\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u2590\u2591\u2591\u2591\u2591\u2591\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u258c\u2591\u2591\u2591\u2591\u2591\u2590\u2584\u2584\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u258c\u2591\u2591\u2591\u2591\u2584\u2580\u2592\u2592\u2580\u2580\u2580\u2580\u2584\n\u2591\u2591\u2591\u2590\u2591\u2591\u2591\u2591\u2590\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2580\u2580\u2584\n\u2591\u2591\u2591\u2590\u2591\u2591\u2591\u2591\u2590\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2580\u2584\n\u2591\u2591\u2591\u2591\u2580\u2584\u2591\u2591\u2591\u2591\u2580\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2580\u2584\n\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2584\u2584\u2584\u2584\u2584\u2588\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2580\u2584\n\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u258c\u2591\u258c\u258c\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u258c\u2591\u258c\u258c\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2584\u258c\u258c\u2584\u258c\u258c\u2591\u2591\u2591\u2591\u2591 \n */\n#include <iostream>\n#include <complex>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cstdio>\n#include <numeric>\n#include <cstring>\n#include <ctime>\n#include <cstdlib>\n#include <set>\n#include <map>\n#include <unordered_map>\n#include <unordered_set>\n#include <list>\n#include <cmath>\n#include <bitset>\n#include <cassert>\n#include <queue>\n#include <stack>\n#include <deque>\n#include <random>\n\nusing namespace std;\ntemplate<class T1, class T2> inline void chkmin(T1 &x, const T2 &y) {if (x > y) x = y;}\ntemplate<class T1, class T2> inline void chkmax(T1 &x, const T2 &y) {if (x < y) x = y;}\n#define all(c) (c).begin(), (c).end()\n#define sz(c) (int)(c).size()\n#define mp make_pair\n#define pb push_back\n#define read(FILENAME) freopen((string(FILENAME) + \".in\").c_str(), \"r\", stdin)\n#define write(FILENAME) freopen((string(FILENAME) + \".out\").c_str(), \"w\", stdout);\nconst int MAXN = 2009;\n\n\nstruct point\n{\n\tlong long x, y;\n\tint id;\n\tpoint(){}\n\tpoint(long long _x, long long _y) {\n\t\tx = _x;\n\t\ty = _y;\n\t}\n};\n\n\n\nbool operator <(const point &a, const point &b) {\n\treturn a.x < b.x || (a.x == b.x && a.y < b.y);\n}\n\npoint operator -(const point &a, const point &b) {\n\treturn point(a.x - b.x, a.y - b.y);\n}\n\n\nlong long vec(point a, point b) {\n\treturn a.x * b.y - a.y * b.x;\n}\n\n\nchar check(point a, point b, point c) {\n\tlong long s = vec(b - a, c - b);\n\tif (s < 0) {\n\t\treturn 'L';\n\t}\n\treturn 'R';\n}\n\nint n;\npoint p[MAXN];\nint dp[MAXN][2];\nint pr[MAXN][2];\n\nint main() {\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0);\n\tcout.tie(0);\n\t//read(\"input\");\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> p[i].x >> p[i].y;\n\t\tp[i].id = i + 1;\n\t}\n\tsort(p, p + n);\n\tstring s;\n\tcin >> s;\n\tfor (int i = 0; i < n - 2; i++) {\n\t\tif (check(p[i], p[i + 1], p[i + 2]) != s[i]) {\n\t\t\tswap(p[i + 2], p[i + 1]);\n\t\t}\n\t}\n\tfor (int i = n - 1; i >= 0; i--) {\n\t\tcout << p[i].id << ' ';\n\t}\n\tcout << endl;\n}\t"
}