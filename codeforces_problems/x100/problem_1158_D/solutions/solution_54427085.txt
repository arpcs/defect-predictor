{
    "id": 54427085,
    "contestId": 1158,
    "creationTimeSeconds": 1558379487,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "m1sch3f"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1557671700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 204800,
    "source": "\n#include <bits/stdc++.h>\nusing namespace std;\n\n// io\n#define get(i) scanf(\"%d\", &i)\n#define flush fflush(stdin)\n\n// manipulations\n#define f(i, n) for (int i = 0; i < n; i++)\n#define fr(i, n) for (int i = n - 1; i >= 0; i--)\n#define ff(i, a, b) for (int i = a; i <= b; i++)\n#define lowbit(x) (x & -x)\n#define sz(x) int((x).size())\n\n// built-in\n#define bitcount __builtin_popcount\n#define gcd __gcd\n\n// short\n#define pb push_back\n#define fill(arr, a) memset(arr, a, sizeof(arr))\n\n// useful bits\n#define IN(i, l, r) (l <= i && i <= r)\n#define relax(a, b) (a) = max((a), (b))\n#define relaxi(a, b) (a) = min((a), (b))\n\nusing ll = long long;\nusing ld = long double;\nusing vi = vector<int>;\nusing vll = vector<ll,ll>;\nusing pii = pair<int,int>;\nusing pll = pair<ll,ll>;\n\nll modpow(ll a, ll b, ll mod = (ll) (1e9 + 7)) \n{if (!b) return 1; a %= mod; return modpow(a * a % mod, b / 2, mod) * (b & 1 ? a : 1) % mod;}\n\n// for rand\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n// use uniform_int_distribution<int>(0, i)(rng)\n\nconst int DEBUG = 1;\nconst int mxn = 2000;\n\nusing point = complex<ll>;\n#define x real()\n#define y imag()\n\nll cross(point a, point b) { return (conj(a)*b).y; }\nll dot(point a, point b) { return (conj(a)*b).x; }\n\nint n;\npoint o;\npoint arr[mxn];\nint hull[mxn];\nstring s;\n\nbool gr(int i, int j) {\n\treturn cross(arr[i]-o,arr[j]-o)>0;\n}\n\nbool grr(int i, int j) {\n\treturn cross(arr[i]-o,arr[j]-o)<0;\n}\n\nbool natural_order(int i, int j) {\n\tpoint a = arr[i], b = arr[j];\n\treturn a.y<b.y||(a.y==b.y&&a.x<b.x);\n}\n\nvoid solve() {\n\tcin>>n;\n\tf(i,n) {\n\t\tld a,b; cin >> a >> b;\n\t\tarr[i] = point(a,b);\n\t\thull[i]=i;\n\t}\n\tcin>>s;\n\tsort(hull,hull+n,natural_order);\n\to=arr[hull[0]];\n\tif (s[0] == 'L') sort(hull+1,hull+n,gr);\n\telse sort(hull+1,hull+n,grr);\n\tff(i,2,n-1) {\n\t\to=arr[hull[i-1]];\t\n\t\tif (s[0] == 'L') {\n\t\t\tif (s[i-2]=='L') sort(hull+i,hull+n,gr);\n\t\t\telse sort(hull+i,hull+n,grr), swap(hull[i],hull[i-1]);\n\t\t} else {\n\t\t\tif (s[i-2]=='R') sort(hull+i,hull+n,grr);\n\t\t\telse sort(hull+i,hull+n,gr), swap(hull[i],hull[i-1]);\n\t\t}\n\t}\n\tf(i,n) cout << hull[i]+1 << \" \";\n\tcout << endl;\n}\n\nint main() {\n\tios_base::sync_with_stdio(false);\n\tcin.tie(NULL);\n\n\n#ifdef LOCAL\n\tif (DEBUG) freopen(\"input.txt\", \"r\", stdin);\n\tif (DEBUG) freopen(\"output.txt\", \"w\", stdout);\n\tclock_t start = clock();\n#endif\n\n\tsolve();\n\n#ifdef LOCAL\n\tcout << setprecision(12) << ld(clock()-start) / CLOCKS_PER_SEC << endl;\n#endif\n\n\treturn 0;\n}\n\n"
}