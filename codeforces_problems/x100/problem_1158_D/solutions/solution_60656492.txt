{
    "id": 60656492,
    "contestId": 1158,
    "creationTimeSeconds": 1568592980,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "yuma_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1557671700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 482,
    "memoryConsumedBytes": 307200,
    "source": "#include \"bits/stdc++.h\"\r\n#include<vector>\r\n#include<iostream>\r\n#include<queue>\r\n#include<algorithm>\r\n#include<map>\r\n#include<set>\r\n#include<iomanip>\r\n#include<assert.h>\r\n#include<unordered_map>\r\n#include<unordered_set>\r\n#include<string>\r\n#include<stack>\r\n#include<complex>\r\n#pragma warning(disable:4996)\r\nusing namespace std;\r\nusing ld = long double;\r\ntemplate<class T>\r\nusing Table = vector<vector<T>>;\r\nconst ld eps=1e-9;\r\n\r\n#define WHATS(var)cout<<__LINE__<<' '<<#var<<\"=\"<<var<<endl;\r\n\r\ntemplate<class S, class T> ostream& operator <<(ostream &os, const pair<S, T> v){\r\n  os << \"( \" << v.first << \", \" << v.second << \")\"; return os;\r\n}\r\ntemplate<class T> ostream& operator <<(ostream &os, const vector<T> &v){\r\n  for(int i = 0; i < v.size(); i++){if(i > 0){os << \" \";} os << v[i];} return os;\r\n}\r\ntemplate<class T> ostream& operator <<(ostream &os, const vector<vector<T>> &v){\r\n  for(int i = 0; i < v.size(); i++){if(i > 0){os << endl;} os << v[i];} return os;\r\n}\r\ntemplate<class T> ostream& operator <<(ostream &os, const vector<set<T>> &v){\r\n  for(int i = 0; i < v.size(); i++){if(i > 0){os << endl;} os << v[i];} return os;\r\n}\r\ntemplate<class T> ostream& operator <<(ostream &os, const set<T> &v){\r\n\tint i=0;\r\n  \tfor(auto it:v){\r\n\t\tif(i > 0){os << ' ';}\r\n\t\tos << it;\r\n\t\ti++;\r\n\t} \r\n\treturn os;\r\n}\r\n\r\n\r\n/* \u5e7e\u4f55\u306e\u57fa\u672c */\r\n\r\n#include <complex>\r\n\r\nusing ld=long double;\r\nusing point=complex<ld>;\r\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\r\n#define all(x) (x).begin(),(x).end()\r\n\r\n\r\nconst ld pi = acos(-1.0);\r\nconst ld dtop = pi / 180.;\r\nconst ld ptod = 1. / dtop;\r\n\r\nnamespace std {\r\n\tbool operator<(const point &lhs, const point &rhs) {\r\n\t\tif (lhs.real() < rhs.real() - eps) return true;\r\n\t\tif (lhs.real() > rhs.real() + eps) return false;\r\n\t\treturn lhs.imag() < rhs.imag();\r\n\t}\r\n}\r\n\r\npoint input_point() {\r\n\tld x, y;\r\n\tcin >> x >> y;\r\n\treturn point(x, y);\r\n}\r\n\r\nbool eq(const ld a, const ld b) {\r\n\treturn (abs(a - b) < eps);\r\n}\r\n\r\n //\u5185\u7a4d\r\nld dot(const point& a, const point& b) {\r\n\treturn real(conj(a) * b);\r\n}\r\n\r\n //\u5916\u7a4d\r\nld cross(const point& a, const point& b) {\r\n\treturn imag(conj(a) * b);\r\n}\r\n\r\nclass line {\r\npublic:\r\n\tpoint a, b;\r\n\tline() : a(point(0, 0)), b(point(0, 0)) {}\r\n\tline(point a, point b) : a(a), b(b) {}\r\n\tpoint operator[](const int _num)const {\r\n\t\tif (_num == 0)return a;\r\n\t\telse if (_num == 1)return b;\r\n\t\telse {\r\n\t\t\tassert(false);\r\n\t\t\treturn point();\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// \u5186\u306e\u5b9a\u7fa9\r\nclass circle {\r\npublic:\r\n\tpoint p;\r\n\tld r;\r\n\tcircle() : p(point(0, 0)), r(0) {}\r\n\tcircle(point p, ld r) : p(p), r(r) {}\r\n};\r\n\r\n// ccw\r\nint ccw(const point& a, const point &b, const point &c) {\r\n\tconst point nb(b - a);\r\n\tconst point nc(c - a);\r\n\tif (cross(nb, nc) > eps) return 1;   // a,b,c\u304c\u53cd\u6642\u8a08\u5468\u308a\u306e\u9806\u306b\u4e26\u3076\r\n\tif (cross(nb, nc) < -eps) return -1; // a,b,c\u304c\u6642\u8a08\u5468\u308a\u306e\u9806\u306b\u4e26\u3076\r\n\tif (dot(nb, nc) < 0) return 2;       // c,a,b\u306e\u9806\u306b\u76f4\u7dda\u306b\u4e26\u3076\r\n\tif (norm(nb) < norm(nc)) return -2;  // a,b,c\u306e\u9806\u306b\u76f4\u7dda\u306b\u4e26\u3076\r\n\treturn 0;                          // a,c,b\u306e\u9806\u306b\u76f4\u7dda\u306b\u4e26\u3076\r\n}\r\n\r\n\r\n/* \u4ea4\u5dee\u5224\u5b9a */\r\n\r\n //\u76f4\u7dda\u3068\u76f4\u7dda\u306e\u4ea4\u5dee\u5224\u5b9a\r\nbool isis_ll(const line& l, const line& m) {\r\n\treturn !eq(cross(l.b - l.a, m.b - m.a), 0);\r\n}\r\nbool isis_ls(const line& l, const line& s) {\r\n\treturn isis_ll(l, s) &&\r\n\t\t(cross(l.b - l.a, s.a - l.a) * cross(l.b - l.a, s.b - l.a) < eps);\r\n}\r\n\r\nbool isis_ss(const line& s, const line& t) {\r\n\treturn ccw(s.a, s.b, t.a) * ccw(s.a, s.b, t.b) <= 0 &&\r\n\t\tccw(t.a, t.b, s.a) * ccw(t.a, t.b, s.b) <= 0;\r\n}\r\n\r\nbool isis_lp(const line& l, const point& p) {\r\n\treturn (abs(cross(l.b - p, l.a - p)) < eps);\r\n}\r\n\r\n //\u70b9\u306e\u7dda\u5206\u4e0a\u5224\u5b9a\r\nbool isis_sp(const line& s, const point& p) {\r\n\treturn (abs(s.a - p) + abs(s.b - p) - abs(s.b - s.a) < eps);\r\n}\r\n\r\npoint proj(const line &l, const point& p) {\r\n\tld t = dot(p - l.a, l.a - l.b) / norm(l.a - l.b);\r\n\treturn l.a + t * (l.a - l.b);\r\n}\r\n\r\n //\u76f4\u7dda\u3068\u76f4\u7dda\u306e\u4ea4\u70b9\r\npoint is_ll(const line &s, const line& t) {\r\n\tpoint sv = s.b - s.a, tv = t.b - t.a;\r\n\tassert(cross(sv, tv) != 0);\r\n\treturn s.a + sv * cross(tv, t.a - s.a) / cross(tv, sv);\r\n}\r\n //\u76f4\u7dda\u3068\u76f4\u7dda\u306e\u4ea4\u70b9\r\nvector<point> is_ll2(const line &s, const line& t) {\r\n\tpoint sv = s.b - s.a, tv = t.b - t.a;\r\n\tif (cross(sv, tv) != 0)return vector<point>(1, is_ll(s, t));\r\n\telse {\r\n\t\tvector<point>ans;\r\n\t\tfor (int k = 0; k < 2; ++k) {\r\n\t\t\tif (isis_sp(s, t[k]) && find(ans.begin(), ans.end(), t[k]) == ans.end())ans.push_back(t[k]);\r\n\t\t\tif (isis_sp(t, s[k]) && find(ans.begin(), ans.end(), s[k]) == ans.end())ans.push_back(s[k]);\r\n\t\t}\r\n\t\treturn ans;\r\n\t}\r\n}\r\n//\u7dda\u5206\u3068\u7dda\u5206\u306e\u4ea4\u70b9\r\n//\u91cd\u306a\u3063\u3066\u308b\u90e8\u5206\u3042\u308b\u3068assert(false)\r\npoint is_ss(const line &s, const line& t) {\r\n\tif (isis_ss(s, t)) {\r\n\t\tfor (int k = 0; k < 2; ++k) {\r\n\t\t\tfor (int l = 0; l < 2; ++l) {\r\n\t\t\t\tif (s[k] == t[l])return s[k];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn is_ll(s, t);\r\n\t}\r\n\telse {\r\n\t\tassert(false);\r\n\t\treturn point(0, 0);\r\n\t}\r\n}\r\n //\u7dda\u5206\u3068\u7dda\u5206\u306e\u4ea4\u70b9\r\nvector<point> is_ss2(const line &s, const line& t) {\r\n\tvector<point> kouho(is_ll2(s, t));\r\n\tvector<point>ans;\r\n\tfor (auto p : kouho) {\r\n\t\tif (isis_sp(s, p) && isis_sp(t, p))ans.emplace_back(p);\r\n\t}\r\n\treturn ans;\r\n}\r\n //\u76f4\u7dda\u3068\u70b9\u306e\u8ddd\u96e2\r\nld dist_lp(const line& l, const point& p) {\r\n\treturn abs(p - proj(l, p));\r\n}\r\n\r\n //\u76f4\u7dda\u3068\u76f4\u7dda\u306e\u8ddd\u96e2\r\nld dist_ll(const line& l, const line& m) {\r\n\treturn isis_ll(l, m) ? 0 : dist_lp(l, m.a);\r\n}\r\n\r\n //\u76f4\u7dda\u3068\u7dda\u5206\u306e\u8ddd\u96e2\r\nld dist_ls(const line& l, const line& s) {\r\n\treturn isis_ls(l, s) ? 0 : min(dist_lp(l, s.a), dist_lp(l, s.b));\r\n}\r\n\r\n //\u7dda\u5206\u3068\u70b9\u306e\u8ddd\u96e2\r\nld dist_sp(const line& s, const point& p) {\r\n\tpoint r = proj(s, p);\r\n\treturn isis_sp(s, r) ? abs(r - p) : min(abs(s.a - p), abs(s.b - p));\r\n}\r\n\r\n //\u7dda\u5206\u3068\u7dda\u5206\u306e\u8ddd\u96e2\r\nld dist_ss(const line& s, const line& t) {\r\n\tif (isis_ss(s, t)) return 0;\r\n\treturn min({ dist_sp(s, t.a), dist_sp(s, t.b), dist_sp(t, s.a), dist_sp(t, s.b) });\r\n}\r\n\r\n\r\nline bisection(const line &s, const line &t) {\r\n\tconst point laglanju(is_ll(s, t));\r\n\tconst point avec = !(abs(laglanju - s[0])<eps) ? s[0] - laglanju : s[1] - laglanju;\r\n\tconst point bvec = !(abs(laglanju - t[0])<eps) ? t[0] - laglanju : t[1] - laglanju;\r\n\r\n\treturn line(laglanju, laglanju + (abs(bvec)*avec + abs(avec)*bvec) / (abs(avec) + abs(bvec)));\r\n}\r\n\r\n\r\npoint  inner_center(const vector<line>&ls) {\r\n\tvector<point>vertics;\r\n\tfor (int i = 0; i <static_cast<int>(ls.size()); ++i) {\r\n\t\tvertics.push_back(is_ll(ls[i], ls[(i + 1) % 3]));\r\n\t}\r\n\tif (vertics[0] == vertics[1] || vertics[1] == vertics[2] || vertics[2] == vertics[0])return vertics[0];\r\n\tline bi1(bisection(line(vertics[0], vertics[1]), line(vertics[0], vertics[2])));\r\n\tline bi2(bisection(line(vertics[1], vertics[2]), line(vertics[1], vertics[0])));\r\n\tif (bi1[0] == bi2[0])return bi1[0];\r\n\telse {\r\n\t\treturn is_ll(bi1, bi2);\r\n\t}\r\n}\r\n\r\nvector<point>  ex_center(const vector<line>&ls) {\r\n\tvector<point>vertics;\r\n\tfor (int i = 0; i < static_cast<int>(ls.size()); ++i) {\r\n\t\tvertics.push_back(is_ll(ls[i], ls[(i + 1) % 3]));\r\n\t}\r\n\tif (abs(vertics[0] - vertics[1])<eps || abs(vertics[1] - vertics[2])<eps || (abs(vertics[2] - vertics[0])<eps))return vector<point>();\r\n\tvector<point>ecs;\r\n\tfor (int i = 0; i < 3; ++i) {\r\n\t\tline bi1(bisection(line(vertics[i], vertics[i] * 2.0l - vertics[(i + 2) % 3]), line(vertics[i], vertics[(i + 1) % 3])));\r\n\t\tline bi2(bisection(line(vertics[(i + 1) % 3], vertics[(i + 1) % 3] * 2.0l - vertics[(i + 2) % 3]), line(vertics[(i + 1) % 3], vertics[i])));\r\n\t\tecs.push_back(is_ll(bi1, bi2));\r\n\t}\r\n\treturn ecs;\r\n}\r\n\r\n\r\nvector<point>  same_dis(const vector<line>&ls) {\r\n\tvector<point>vertics;\r\n\tvertics.push_back(is_ll(ls[0], ls[2]));\r\n\tvertics.push_back(is_ll(ls[1], ls[2]));\r\n\r\n\tif (abs(vertics[0] - vertics[1]) < eps)return vector<point>{vertics[0]};\r\n\tline bis(bisection(ls[0], ls[1]));\r\n\tvector<point>ecs;\r\n\r\n\tline abi(bisection(line(vertics[0], vertics[1]), ls[0]));\r\n\tecs.push_back(is_ll(bis, abi));\r\n\r\n\r\n\tline bbi(bisection(line(vertics[0], 2.l*vertics[0] - vertics[1]), ls[0]));\r\n\tecs.push_back(is_ll(bis, bbi));\r\n\r\n\treturn ecs;\r\n}\r\n/* \u5186 */\r\n\r\nvector<point> convex_hull(vector<point> ps) {\r\n\tint n = ps.size();\r\n\tint k = 0;\r\n\tsort(ps.begin(), ps.end());\r\n\tvector<point> ch(2 * n);\r\n\tfor (int i = 0; i < n; ch[k++] = ps[i++])\r\n\t\twhile (k >= 2 && ccw(ch[k - 2], ch[k - 1], ps[i]) <= 0) --k;\r\n\tfor (int i = n - 2, t = k + 1; i >= 0; ch[k++] = ps[i--])\r\n\t\twhile (k >= t && ccw(ch[k - 2], ch[k - 1], ps[i]) <= 0) --k;\r\n\tch.resize(k - 1);\r\n\treturn ch;\r\n}\r\n\r\n\r\n\r\n\r\nusing ll = long long int;\r\nint main() {\r\n\tios::sync_with_stdio(false);\r\n\tint N;cin>>N;\r\n\tvector<point>ps;\r\n\tfor(int i=0;i<N;++i){\r\n\t\tint a,b;cin>>a>>b;\r\n\t\tps.push_back(point(a,b));\r\n\t}\r\n\tauto ch=convex_hull(ps);\r\n\tpoint p1=ch[0];\r\n\tpoint p2=ch[1];\r\n\r\n\tint id1,id2;\r\n\tfor(int i=0;i<N;++i){\r\n\t\tif(abs(ps[i]-p1)<0.1)id1=i;\r\n\t\tif(abs(ps[i]-p2)<0.1)id2=i;\r\n\t}\r\n\tvector<int>perms(N);\r\n\r\n\tperms[0]=id1;\r\n\tperms[1]=id2;\r\n\t\r\n\tstring st;cin>>st;\r\n\tif(st[0]=='R'){\r\n\t\tswap(perms[0],perms[1]);\r\n\t}\r\n\tvector<int>oks(N,true);\r\n\toks[perms[0]]=false;\r\n\toks[perms[1]]=false;\r\n\tfor(int i=0;i<st.size();++i){\r\n\t\tpoint vec2=ps[perms[i+1]]-ps[perms[i]];\r\n\t\tvector<pair<ld,int>>vv;\r\n\t\tbool  flag=false;\r\n\t\tfor(int j=0;j<N;++j){\r\n\t\t\tif(oks[j]){\r\n\t\t\t\tpoint p=ps[j];\r\n\t\t\t\tpoint vec=p-ps[perms[i+1]];\r\n\r\n\t\t\t\tauto ado=dot(vec2,vec)/abs(vec2)/abs(vec);\r\n\t\t\t\t\r\n\t\t\t\t//WHATS(ado)\r\n\t\t\t\tld theta=acos(ado);\r\n\t\t\t\tvv.push_back(make_pair(theta,j));\r\n\r\n\t\t\t\tif(st[i]=='R'){\r\n\t\t\t\t\tif(cross(vec,vec2)<0)flag=true;\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tif(cross(vec,vec2)>0)flag=false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(flag){\r\n\t\t\treturn 0;\r\n\t\t\tWHATS(vv);\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t//WHATS(vv)\r\n\t\tif(i==st.size()-1){\r\n\t\t\tassert(vv.size()==1);\r\n\r\n\t\t\tperms[i+2]=vv[0].second;\r\n\t\t\toks[perms[i+2]]=false;\r\n\t\t\t\r\n\t\t}else{\r\n\t\t\tauto it=vv.begin();\r\n\t\t\tif(st[i]==st[i+1]){\r\n\t\t\t\tit=min_element(vv.begin(),vv.end());\r\n\t\t\t}else{\r\n\t\t\t\tit=max_element(vv.begin(),vv.end());\r\n\t\t\t}\r\n\t\t\tperms[i+2]=it->second;\r\n\t\t\toks[perms[i+2]]=false;\r\n\t\t}\r\n\t}\r\n\tfor(int i=0;i<N;++i){\r\n\t\tcout<<perms[i]+1<<' ';\r\n\t}\r\n\tcout<<endl;\r\n\treturn 0;\r\n}"
}