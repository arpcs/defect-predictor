{
    "id": 108457391,
    "contestId": 1158,
    "creationTimeSeconds": 1614239874,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "Hyado"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1557671700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 75,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 102400,
    "source": "//#pragma GCC optimize(\"Ofast\")\r\n//#pragma GCC optimize(\"unroll-loops\")\r\n//#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nusing ll = long long;\r\nusing ull = unsigned long long;\r\nusing db = double;\r\nusing ld = long double;\r\ntemplate <typename T> using V = vector<T>;\r\ntemplate <typename T> using VV = vector<vector<T>>;\r\ntemplate <typename T> using PQ = priority_queue<T>;\r\n#define fs first\r\n#define sc second\r\n#define pb push_back\r\n#define mp make_pair\r\n#define mt make_tuple\r\n#define eb emplace_back\r\n#define lb(c, x) distance((c).begin(), lower_bound(all(c), (x)))\r\n#define ub(c, x) distance((c).begin(), upper_bound(all(c), (x)))\r\n#define all(v) (v).begin(), (v).end()\r\n#define siz(v) (ll)(v).size()\r\n#define rep(i, a, n) for(ll i = a; i < (ll)(n); ++i)\r\n#define repr(i, a, n) for(ll i = n - 1; (ll)a <= i; --i)\r\n#define ENDL '\\n'\r\ntypedef pair<int, int> Pi;\r\ntypedef pair<ll, ll> PL;\r\nconstexpr ll mod = 1000000007;  // 998244353;\r\nconstexpr ll INF = 1000000099;\r\nconstexpr ll LINF = (ll)(1e18 + 99);\r\nconst ld PI = acos((ld)-1);\r\nconstexpr ll dx[4] = {-1, 0, 1, 0}, dy[4] = {0, 1, 0, -1};\r\ntemplate <typename T, typename U> inline bool chmin(T& t, const U& u) {\r\n  if(u < t) {\r\n    t = u;\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\ntemplate <typename T, typename U> inline bool chmax(T& t, const U& u) {\r\n  if(t < u) {\r\n    t = u;\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\ntemplate <typename T> inline T gcd(T a, T b) { return b ? gcd(b, a % b) : a; }\r\ninline void Yes() { cout << \"Yes\" << ENDL; }\r\ninline void No() { cout << \"No\" << ENDL; }\r\ninline void YES() { cout << \"YES\" << ENDL; }\r\ninline void NO() { cout << \"NO\" << ENDL; }\r\n\r\ntemplate <typename T, typename Y> inline T mpow(T a, Y n) {\r\n  T res = 1;\r\n  for(; n; n >>= 1) {\r\n    if(n & 1) res = res * a;\r\n    a = a * a;\r\n  }\r\n  return res;\r\n}\r\n\r\ntemplate <typename T> vector<T> finddivisor(T x) {  //\u6574\u6570x\u306e\u7d04\u6570(x\u3092\u542b\u3080)\r\n  vector<T> divisor;\r\n  for(T i = 1; (i * i) <= x; i++) {\r\n    if(x % i == 0) {\r\n      divisor.push_back(i);\r\n      if(i * i != x) { divisor.push_back(x / i); }\r\n    }\r\n  }\r\n  sort(divisor.begin(), divisor.end());\r\n  return divisor;\r\n}\r\n\r\ntemplate <typename T> V<T> mnfix_sum(const V<T>& v) {\r\n  int n = v.size();\r\n  V<T> ret(n + 1);\r\n  rep(i, 0, n) ret[i + 1] = ret[i] + v[i];\r\n  return ret;\r\n}\r\n\r\ntemplate <typename T> istream& operator>>(istream& is, vector<T>& vec) {\r\n  for(auto&& x : vec) is >> x;\r\n  return is;\r\n}\r\n\r\ntemplate <typename T, typename Y>\r\nostream& operator<<(ostream& os, const pair<T, Y>& p) {\r\n  return os << \"{\" << p.fs << \",\" << p.sc << \"}\";\r\n}\r\n\r\ntemplate <typename T> ostream& operator<<(ostream& os, const V<T>& v) {\r\n  os << \"{\";\r\n  for(auto e : v) os << e << \",\";\r\n  return os << \"}\";\r\n}\r\n\r\ntemplate <typename... Args> void debug(Args&... args) {\r\n  for(auto const& x : {args...}) { cerr << x << ' '; }\r\n  cerr << ENDL;\r\n}\r\n\r\nstruct Pint {\r\n  ll x, y;\r\n  Pint(ll _x = 0, ll _y = 0) : x(_x), y(_y) {}\r\n\r\n  Pint operator+(const Pint& r) const { return {x + r.x, y + r.y}; }\r\n  Pint operator-(const Pint& r) const { return {x - r.x, y - r.y}; }\r\n  Pint operator*(const ll a) const { return {x * a, y * a}; }\r\n  Pint operator/(const ll a) const { return {x / a, y / a}; }\r\n\r\n  Pint& operator+=(const Pint& r) { return *this = *this + r; }\r\n  Pint& operator-=(const Pint& r) { return *this = *this - r; }\r\n  Pint& operator*=(const ll& r) { return *this = *this * r; }\r\n  Pint& operator/=(const ll& r) { return *this = *this / r; }\r\n\r\n  bool operator==(const Pint& r) const { return x == r.x && y == r.y; }\r\n  bool operator!=(const Pint& r) const { return !(*this == r); }\r\n  bool operator<(const Pint& r) const {\r\n    if(x == r.x)\r\n      return y < r.y;\r\n    else\r\n      return x < r.x;\r\n  }\r\n  ll norm() { return x * x + y * y; }           //\u5927\u304d\u3055\u306e\u4e8c\u4e57\r\n  db arg() { return atan2(y, x); }              //\u504f\u89d2\r\n  ll dot(Pint b) { return x * b.x + y * b.y; }  //dot product\r\n  ll crs(Pint b) { return x * b.y - y * b.x; }  //cross product\r\n};\r\n\r\nint ccw(Pint a, Pint b) {  //\u7dda\u5206o-a\u306b\u5bfe\u3059\u308bb\u306e\u4f4d\u7f6e\u95a2\u4fc2\r\n  if(a.crs(b) > 0) return -1;\r\n  if(a.crs(b) < 0) return 1;\r\n  if(a.dot(b) < 0) return 2;\r\n  if(a.norm() < b.norm()) return -2;\r\n  return 0;\r\n}\r\n//counter clockwise\r\n//-2,-1,0,1,2 : online_front,counter_cw,on_segment,cw,online_back\r\nint ccw(Pint a, Pint b, Pint c) {  //\u7dda\u5206a-b\u306b\u5bfe\u3059\u308bc\u306e\u4f4d\u7f6e\u95a2\u4fc2\r\n  return ccw(b - a, c - a);\r\n}\r\n\r\nsigned main() {\r\n  cin.tie(0);\r\n  cerr.tie(0);\r\n  ios::sync_with_stdio(false);\r\n\r\n  ll n;\r\n  cin >> n;\r\n  V<Pint> ps(n);\r\n  rep(i, 0, n) cin >> ps[i].x >> ps[i].y;\r\n  string s;\r\n  cin >> s;\r\n  V<bool> used(n, false);\r\n\r\n  Pint mn = {INF, INF};\r\n  int mnid;\r\n  rep(i, 0, n) {\r\n    if(chmin(mn, ps[i])) { mnid = i; }\r\n  }\r\n  V<ll> ans(1, mnid);\r\n\r\n  Pint now = (0 == mnid ? ps[1] : ps[0]);\r\n  int nowid = (0 == mnid ? 1 : 0);\r\n  rep(i, 0, n) if(i != mnid) {\r\n    if(s[0] == 'L') {\r\n      if(ccw(mn, now, ps[i]) == 1) {\r\n        now = ps[i];\r\n        nowid = i;\r\n      }\r\n    } else {\r\n      if(ccw(mn, now, ps[i]) == -1) {\r\n        now = ps[i];\r\n        nowid = i;\r\n      }\r\n    }\r\n  }\r\n  used[mnid] = used[nowid] = true;\r\n  ans.eb(nowid);\r\n\r\n\r\n  rep(i, 1, siz(s)) {\r\n    Pint nex;\r\n    int nexid;\r\n    rep(j,0,n)if(!used[j]){\r\n      nex=ps[j];\r\n      nexid=j;\r\n      break;\r\n    }\r\n\r\n    rep(j, 0, n) {\r\n      if(used[j]) continue;\r\n\r\n      if(s[i] == 'L') {\r\n        if(ccw(now, nex, ps[j]) == 1) {\r\n          nex = ps[j];\r\n          nexid = j;\r\n        }\r\n      } else {\r\n        if(ccw(now, nex, ps[j]) == -1) {\r\n          nex = ps[j];\r\n          nexid = j;\r\n        }\r\n      }\r\n    }\r\n    used[nexid]=true;\r\n    ans.eb(nexid);\r\n    now=nex;\r\n  }\r\n\r\n  for(auto&& i:ans)cout<<i+1<<\" \";\r\n  rep(i,0,n)if(!used[i])cout<<i+1<<ENDL;\r\n}\r\n//(\u30fb_\u30fb)(\u30fb_\u30fb)(\u30fb_\u30fb)(\u30fb_\u30fb)\r\n//CHECK overflow,what to output?\r\n//any other simpler approach?"
}