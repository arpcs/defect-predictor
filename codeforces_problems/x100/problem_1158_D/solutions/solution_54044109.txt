{
    "id": 54044109,
    "contestId": 1158,
    "creationTimeSeconds": 1557678025,
    "relativeTimeSeconds": 6325,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "hank55663"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 7,
        "startTimeSeconds": 1557671700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "PRETESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\n#define pb push_back\r\n#define LL long long\r\n#define x first\r\n#define y second\r\n#define pii pair<int,int>\r\n#define pll pair<LL,LL>\r\n#define mp make_pair\r\n#define MEM(x) memset(x,0,sizeof(x))\r\n#define pi acos(-1)\r\nusing namespace std;\r\nint vis[2005];\r\npll operator-(const pll &a,const pll &b){\r\n\treturn {a.x-b.x,a.y-b.y};\r\n}\r\nLL cross(const pll &a,const pll &b){\r\n\treturn (LL)a.x*b.y-(LL)a.y*b.x;\r\n}\r\nLL cross(const pll &a,const pll &b,const pll &c){\r\n\treturn cross(a-c,b-c);\r\n}\r\n#define hypot HYPOT\r\nlong double hypot(LL x,LL y){\r\n\treturn sqrt(x*x+y*y);\r\n}\r\nint main(){\r\n\tint n;\r\n\tscanf(\"%d\",&n);\r\n\tpair<pll,int> p[2005];\r\n\tfor(int i = 0;i<n;i++){\r\n\t\tLL x,y;\r\n\t\tscanf(\"%lld %lld\",&x,&y);\r\n\t\tp[i]=mp(mp(x,y),i+1);\r\n\t}\r\n\tsort(p,p+n);\r\n\tchar c[2005];\r\n\tscanf(\"%s\",c);\r\n\tvector<int> ans;\r\n\tans.pb(p[0].y);\r\n\tvis[p[0].y]=1;\r\n\tpll last=p[0].x;\r\n\tpll now=p[1].x;\r\n\tint nowi=p[1].y;\r\n\tif(c[0]=='L')\r\n\t\tfor(int i = 2;i<n;i++){\r\n\t\t\tif(cross(now,p[i].x,last)<0){\r\n\t\t\t\tnow=p[i].x;\r\n\t\t\t\tnowi=p[i].y;\r\n\t\t\t}\r\n\t\t}\r\n\telse{\r\n\t\tfor(int i = 2;i<n;i++){\r\n\t\t\tif(cross(now,p[i].x,last)>0){\r\n\t\t\t\tnow=p[i].x;\r\n\t\t\t\tnowi=p[i].y;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tvis[nowi]=1;\r\n\tans.pb(nowi);\r\n\tfor(int i = 1;c[i]!=0;i++){\r\n\t\tpll temp;\r\n\t\tint tempi=-1;\r\n\t\tif(c[i]=='L'){\r\n\t\t\tfor(int j = 0;j<n;j++){\r\n\t\t\t\tif(!vis[p[j].y]){\r\n\t\t\t\t\tif(tempi==-1){\r\n\t\t\t\t\t\ttempi=p[j].y;\r\n\t\t\t\t\t\ttemp=p[j].x;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tif((long double)cross(now,temp,last)*hypot(p[j].x.x-last.x,p[j].x.y-last.y)>(long double)cross(now,p[j].x,last)*hypot(temp.x-last.x,temp.y-last.y)){\r\n\t\t\t\t\t\t\ttemp=p[j].x;\r\n\t\t\t\t\t\t\ttempi=p[j].y;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//printf(\"%d %d %d %d %d %d\\n\",now.x,now.y,p[j].x.x,p[j].x.y,last.x,last.y);\r\n\t\t\t\t\tif(c[i-1]=='L')\r\n\t\t\t\t\tassert(cross(now,p[j].x,last)>0);\r\n\t\t\t\t\telse\r\n\t\t\t\t\tassert(cross(now,p[j].x,last)<0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tfor(int j = 0;j<n;j++){\r\n\t\t\t\tif(!vis[p[j].y]){\r\n\t\t\t\t\tif(tempi==-1){\r\n\t\t\t\t\t\ttempi=p[j].y;\r\n\t\t\t\t\t\ttemp=p[j].x;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tif((long double)cross(now,temp,last)*hypot(p[j].x.x-last.x,p[j].x.y-last.y)<(long double)cross(now,p[j].x,last)*hypot(temp.x-last.x,temp.y-last.y)){\r\n\t\t\t\t\t\t\ttemp=p[j].x;\r\n\t\t\t\t\t\t\ttempi=p[j].y;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tvis[tempi]=1;\r\n\t\tans.pb(tempi);\r\n\t\tlast=now;\r\n\t\tnow=temp;\r\n\t}\r\n\tfor(int i= 0;i<n;i++){\r\n\t\tif(!vis[p[i].y])\r\n\t\t\tans.pb(p[i].y);\r\n\t}\r\n\tfor(auto it:ans)\r\n\tprintf(\"%d \",it);\r\n\tprintf(\"\\n\");\r\n\treturn 0;\r\n}\r\n/*\r\nn = x*m+x=x*(m+1);\r\n\r\n3\r\n-1000000000 -1000000000\r\n0 -1\r\n1000000000 1000000000\r\n\r\n*/"
}