{
    "id": 95009962,
    "contestId": 1158,
    "creationTimeSeconds": 1602265033,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "Ji_Kuai"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1557671700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 75,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 102400,
    "source": "/*\r\n--------------              |   /\r\n      |                     |  /\r\n      |                     | /\r\n      |             *       |/          |    |         ------            *\r\n      |                     |           |    |        /      \\\r\n      |             |       |\\          |    |       |       |\\          |\r\n   \\  |             |       | \\         |    |       |       | \\         |\r\n    \\ |             |       |  \\        |    |        \\     /   \\        |\r\n     V              |       |   \\        \\__/|         -----     \\       |\r\n*/\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define EmiliaMyWife ios::sync_with_stdio(0); cin.tie(NULL);\r\n#define mem(i,j) memset(i,j,sizeof (i));\r\nusing ll = int64_t;\r\nusing ull = uint64_t;\r\nusing ld = long double;\r\nusing uint = uint32_t;\r\nconst double EPS  = 1e-8;\r\nconst int INF     = 0x3F3F3F3F;\r\nconst ll LINF     = 4611686018427387903;\r\nconst int MOD     = 1e9+7;\r\n/*-----------------------------------------------------------------------------------------------------*/\r\n\r\nsigned main() {\r\n\tEmiliaMyWife\r\n\r\n\tauto cross = [&](auto &a, auto &b, auto &c) {\r\n\t\treturn (b.first - a.first) * (c.second - a.second) - (c.first - a.first) * (b.second - a.second);\r\n\t};\r\n\r\n\tint n;\r\n\tstring s;\r\n\tcin >> n;\r\n\tvector<pair<ll, ll>> arr(n);\r\n\tvector<int> ans, has(n);\r\n\tfor(int i = 0; i < n; i++)\r\n\t\tcin >> arr[i].first >> arr[i].second;\r\n\tcin >> s;\r\n\tint ls = min_element(arr.begin(), arr.end()) - arr.begin();\r\n\tans.push_back(ls);\r\n\thas[ls] = 1;\r\n\tfor(int i = 0; i < n - 2; i++) {\r\n\t\tint nd = -1;\r\n\t\tfor(int j = 0; j < n; j++) {\r\n\t\t\tif(has[j])\r\n\t\t\t\tcontinue;\r\n\t\t\tif(nd < 0 || (cross(arr[ls], arr[nd], arr[j]) > 0 ^ s[i] == 'L'))\r\n\t\t\t\tnd = j;\r\n\t\t}\r\n\t\tans.push_back(nd);\r\n\t\thas[nd] = 1;\r\n\t\tls = nd;\r\n\t}\r\n\tfor(int i = 0; i < n; i++)\r\n\t\tif(!has[i])\r\n\t\t\tans.push_back(i);\r\n\tfor(int i = 0; i < n; i++)\r\n\t\tcout << ans[i] + 1 << \" \\n\"[i == n - 1];\r\n\r\n\treturn 0;\r\n}\r\n"
}