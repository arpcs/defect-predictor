{
    "id": 66537121,
    "contestId": 1158,
    "creationTimeSeconds": 1575885849,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "QYHamster"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1557671700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 204800,
    "source": "#ifdef LOCAL\r\n#include <iostream>\r\n#include <vector>\r\n#include <cmath>\r\n#else\r\n#include<bits/stdc++.h>\r\n#endif\r\n//#include<tr1/unordered_map>\r\n#pragma GCC optimize (\"Ofast\")\r\n#define ll long long\r\n#define pll pair<long long,long long>\r\n#define pii pair<int,int>\r\n#define mp make_pair\r\n#define pb push_back\r\n#define F first\r\n#define S second\r\n#define forn(i, n) for(int i=0; i<int(n); i++)\r\n#define Forn(i, n) for(int i=1; i<=int(n); i++)\r\n\r\nusing namespace std;\r\n\r\n/*#include <ext/pb_ds/tree_policy.hpp>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\nusing namespace __gnu_pbds;\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> rbtree;*/\r\n\r\n#define double long double\r\n\r\nint n;\r\nstring s;\r\ndouble x[2010];\r\ndouble y[2010];\r\n\r\nconst double eps = 1e-21;\r\nconst double pi = acos(-1);\r\nvector<pair<pair<bool, double> , int>> ang;\r\nbool vis[2010];\r\nvector<int> v;\r\n\r\ndouble getdis(double x1, double y1, double x2, double y2)\r\n{\r\n    return (x1-x2)*(x1-x2) + (y1-y2)*(y1-y2);\r\n}\r\n\r\npair<bool, double> getang(double bx, double by, double ax, double ay, double cx, double cy)\r\n{\r\n    //cout << ax << \" \" << ay << \" \" << bx << \" \" << by << \" \" << cx << \" \" << cy << endl;\r\n    double bax = ax-bx;\r\n    double bay = ay-by;\r\n    double bcx = cx-bx;\r\n    double bcy = cy-by;\r\n\r\n    double dot = bax*bcx + bay*bcy;\r\n    double cross = bax*bcy - bay*bcx;\r\n    //cout << \"dot = \" << dot << \", val = \" << dot / (getdis(0,0,bax,bay)*getdis(0,0,bcx,bcy)) << endl;\r\n    double theta = dot / sqrt(getdis(0,0,bax,bay)*getdis(0,0,bcx,bcy));\r\n\r\n    if(cross > 0)\r\n    {\r\n        //cout << \"minu\" << endl;\r\n        return {0,-theta};\r\n    }\r\n    else\r\n    {\r\n        return {1,theta};\r\n    }\r\n    //cout << \"cross = \" << cross << endl;\r\n    while(1);\r\n}\r\n\r\nint main()\r\n{\r\n    cin.tie(0);ios_base::sync_with_stdio(false);\r\n    cin >> n;\r\n    Forn(i, n) cin >> x[i] >> y[i];\r\n    cin >> s;\r\n    s.pb('L');\r\n    int st = min_element(y+1, y+n+1) - y;\r\n    v.pb(st);\r\n    vis[st] = 1;\r\n    forn(ii, n-1)\r\n    {\r\n        ang.clear();\r\n        double ax, ay;\r\n        if(!ii)\r\n        {\r\n            ax = x[st];\r\n            ay = y[st] - 1;\r\n        }\r\n        else\r\n        {\r\n            ax = x[v[v.size()-2]];\r\n            ay = y[v[v.size()-2]];\r\n        }\r\n        double bx = x[v[v.size()-1]];\r\n        double by = y[v[v.size()-1]];\r\n        //cout << \"A = \" << v[v.size()-2] << \", \";\r\n        //cout << \"B = \" << v[v.size()-1] << endl;\r\n        Forn(i, n)\r\n        {\r\n            if(!vis[i])\r\n            {\r\n                //cout << \"i = \" << i << \", \";\r\n                double cx = x[i];\r\n                double cy = y[i];\r\n                //cout << \"theta = \" << getang(ax,ay,bx,by,cx,cy) << endl;\r\n                ang.pb(mp(getang(bx,by,ax,ay,cx,cy), i));\r\n            }\r\n        }\r\n        int nxt;\r\n        if(s[ii] == 'L') nxt = min_element(ang.begin(), ang.end())->S;\r\n        else nxt = max_element(ang.begin(), ang.end())->S;\r\n        v.pb(nxt);\r\n        vis[nxt] = 1;\r\n    }\r\n    for(int i=0; i<v.size(); i++) cout << v[i] << \" \";\r\n    cout << endl;\r\n\r\n}\r\n"
}