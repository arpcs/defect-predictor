{
    "id": 62968238,
    "contestId": 1158,
    "creationTimeSeconds": 1571550511,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "lqs2015"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1557671700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 75,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nstruct point\r\n{\r\n\tint x,y;\r\n}p[2222];\r\npoint operator - (const point &u,const point &v) \r\n{\r\n\tpoint res;\r\n\tres.x=u.x-v.x;\r\n\tres.y=u.y-v.y;\r\n\treturn res;\r\n}\r\nlong long cross(point u,point v)\r\n{\r\n\treturn (1ll*u.x*v.y-1ll*u.y*v.x);\r\n}\r\nint n,cur,ans[2222],cnt,to;\r\nchar s[2222];\r\nbool used[2222];\r\nint main()\r\n{\r\n\tscanf(\"%d\",&n);\r\n\tfor (int i=1;i<=n;i++)\r\n\t{\r\n\t\tscanf(\"%d%d\",&p[i].x,&p[i].y);\r\n\t}\r\n\tscanf(\"%s\",s);\r\n\tcur=1;\r\n\tfor (int i=2;i<=n;i++)\r\n\t{\r\n\t\tif (p[i].x<p[cur].x || (p[i].x==p[cur].x && p[i].y<p[cur].y)) cur=i;\r\n\t}\r\n\tused[cur]=1;ans[cnt=1]=cur;\r\n\tfor (int i=1;i<n;i++)\r\n\t{\r\n\t\tto=-1;\r\n\t\tfor (int j=1;j<=n;j++)\r\n\t\t{\r\n\t\t\tif (used[j]) continue;\r\n\t\t\tif (to==-1) to=j;\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tif (s[i-1]=='L')\r\n\t\t\t\t{\r\n\t\t\t\t\tif (cross(p[to]-p[cur],p[j]-p[cur])<0) to=j; \r\n\t\t\t\t} \r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif (cross(p[to]-p[cur],p[j]-p[cur])>0) to=j; \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tused[to]=1;ans[++cnt]=to;\r\n\t\tcur=to;\r\n\t}\r\n\tfor (int i=1;i<=n;i++) printf(\"%d \",ans[i]);\r\n\tprintf(\"\\n\");\r\n\treturn 0;\r\n}"
}