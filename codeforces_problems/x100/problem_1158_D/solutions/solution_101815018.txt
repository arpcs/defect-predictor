{
    "id": 101815018,
    "contestId": 1158,
    "creationTimeSeconds": 1608435841,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1158,
        "index": "D",
        "name": "Winding polygonal line",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1158,
        "members": [
            {
                "handle": "StelaYuri"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1557671700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 75,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 102400,
    "source": "//#include<ext/pb_ds/assoc_container.hpp>\r\n//#include<ext/pb_ds/hash_policy.hpp>\r\n#include<bits/stdc++.h>\r\n#define closeSync ios::sync_with_stdio(0);cin.tie(0);cout.tie(0)\r\n#define multiCase int T;cin>>T;for(int t=1;t<=T;t++)\r\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\r\n#define repp(i,a,b) for(int i=(a);i<(b);i++)\r\n#define per(i,a,b) for(int i=(a);i>=(b);i--)\r\n#define perr(i,a,b) for(int i=(a);i>(b);i--)\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define mst(a,b) memset(a,b,sizeof(a))\r\nusing namespace std;\r\n//using namespace __gnu_pbds;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef pair<int,int> P;\r\nconst int INF=0x3f3f3f3f;\r\nconst ll LINF=0x3f3f3f3f3f3f3f3f;\r\nconst double eps=1e-12;\r\nconst double PI=acos(-1.0);\r\nconst double angcst=PI/180.0;\r\nconst ll mod=998244353;\r\nll gcd(ll a,ll b){return b==0?a:gcd(b,a%b);}\r\nll qmul(ll a,ll b){ll r=0;while(b){if(b&1)r=(r+a)%mod;b>>=1;a=(a+a)%mod;}return r;}\r\nll qpow(ll a,ll n){ll r=1;while(n){if(n&1)r=(r*a)%mod;n>>=1;a=(a*a)%mod;}return r;}\r\nll qpow(ll a,ll n,ll p){ll r=1;while(n){if(n&1)r=(r*a)%p;n>>=1;a=(a*a)%p;}return r;}\r\n\r\nstruct vect\r\n{\r\n    ll x,y;\r\n    double crossProd(vect v)\r\n    {\r\n        return x*v.y-y*v.x;\r\n    }\r\n};\r\n\r\nstruct point\r\n{\r\n    ll x,y;\r\n    bool vis;\r\n}ar[2050];\r\n\r\nchar str[2050];\r\n\r\nvoid solve()\r\n{\r\n    int n;\r\n    cin>>n;\r\n    ll minx=LINF;\r\n    int id=1;\r\n    rep(i,1,n)\r\n    {\r\n        cin>>ar[i].x>>ar[i].y;\r\n        if(ar[i].x<minx)\r\n        {\r\n            minx=ar[i].x;\r\n            id=i;\r\n        }\r\n        ar[i].vis=false;\r\n    }\r\n    \r\n    cin>>str+2;\r\n    \r\n    cout<<id;\r\n    ar[id].vis=true;\r\n    \r\n    repp(i,2,n)\r\n    {\r\n        int nxt=1;\r\n        rep(j,1,n)\r\n            if(!ar[j].vis)\r\n            {\r\n                nxt=j;\r\n                break;\r\n            }\r\n        vect vec=vect{ar[nxt].x-ar[id].x,ar[nxt].y-ar[id].y};\r\n        if(str[i]=='L')\r\n        {\r\n            rep(j,nxt+1,n)\r\n            {\r\n                if(ar[j].vis)\r\n                    continue;\r\n                if(vec.crossProd(vect{ar[j].x-ar[nxt].x,ar[j].y-ar[nxt].y})<0)\r\n                {\r\n                    nxt=j;\r\n                    vec=vect{ar[nxt].x-ar[id].x,ar[nxt].y-ar[id].y};\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            rep(j,nxt+1,n)\r\n            {\r\n                if(ar[j].vis)\r\n                    continue;\r\n                if(vec.crossProd(vect{ar[j].x-ar[nxt].x,ar[j].y-ar[nxt].y})>0)\r\n                {\r\n                    nxt=j;\r\n                    vec=vect{ar[nxt].x-ar[id].x,ar[nxt].y-ar[id].y};\r\n                }\r\n            }\r\n        }\r\n        id=nxt;\r\n        ar[id].vis=true;\r\n        cout<<' '<<id;\r\n    }\r\n    \r\n    rep(i,1,n)\r\n    {\r\n        if(!ar[i].vis)\r\n        {\r\n            cout<<' '<<i<<'\\n';\r\n            return;\r\n        }\r\n    }\r\n}\r\nint main()\r\n{\r\n    closeSync;\r\n    //multiCase\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n"
}