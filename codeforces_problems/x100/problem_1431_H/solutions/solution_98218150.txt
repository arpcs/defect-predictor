{
    "id": 98218150,
    "contestId": 1431,
    "creationTimeSeconds": 1605197789,
    "relativeTimeSeconds": 6089,
    "problem": {
        "contestId": 1431,
        "index": "H",
        "name": "Rogue-like Game",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "*special",
            "brute force",
            "greedy",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1431,
        "members": [
            {
                "handle": "natsugiri"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1605191700
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 2854,
    "memoryConsumedBytes": 15257600,
    "source": "import java.util.*\r\n\r\nfun main() = with(Scanner(System.`in`)) {\r\n\tval n = nextInt()\r\n\tval m = nextInt()\r\n\tval k = nextLong()\r\n\tval a = LongArray(n) { nextLong() }\r\n\tval b = LongArray(m) { nextLong() }\r\n\r\n\tval target = maxOf(a[n-1], b[m-1])\r\n\r\n\tval c = Array(n) { LongArray(m) { nextLong() } }\r\n\tval x = mutableListOf<Pair<Long, Long> > ()\r\n\r\n\tif (true) {\r\n\t\tx.add(Pair(0L, c[0][0]))\r\n\r\n\t\tvar i = 1\r\n\t\tvar j = 1\r\n\t\twhile (i < n || j < m) {\r\n\t\t\tval p: Pair<Long, Long>\r\n\t\t\tif (i == n || (j < m && b[j] < a[i])) {\r\n\t\t\t\tvar tmp = 0L\r\n\t\t\t\tfor (h in 0 .. i-1) tmp = maxOf(tmp, c[h][j])\r\n\t\t\t\tp = Pair(b[j], tmp)\r\n\t\t\t\tj++\r\n\t\t\t} else {\r\n\t\t\t\tvar tmp = 0L\r\n\t\t\t\tfor (h in 0 .. j-1) tmp = maxOf(tmp, c[i][h])\r\n\t\t\t\tp = Pair(a[i], tmp)\r\n\t\t\t\ti++\r\n\t\t\t}\r\n\r\n\t\t\twhile (!x.isEmpty()\r\n\t\t\t\t&& x[x.size-1].first == p.first\r\n\t\t\t\t&& x[x.size-1].second < p.second) {\r\n\t\t\t\tx.removeAt(x.size-1)\r\n\t\t\t}\r\n\r\n\t\t\tif (x.isEmpty() || x[x.size-1].second < p.second) {\r\n\t\t\t\tx.add(p)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar ans = Long.MAX_VALUE\r\n\r\n\tfor (s in 0 .. x.size - 1) {\r\n\t\tvar cnt = 0L\r\n\t\tvar total = 0L\r\n\t\tvar power = 0L\r\n\r\n\t\tfor (i in 0 .. x.size - 1) {\r\n\t\t\tval nxt: Long\r\n\t\t\tif (i == x.size - 1) {\r\n\t\t\t\tnxt = target\r\n\t\t\t} else {\r\n\t\t\t\tnxt = x[i+1].first\r\n\t\t\t}\r\n\r\n\t\t\tpower = maxOf(power, x[i].second)\r\n\t\t\tif (i == s) {\r\n\t\t\t\tpower = maxOf(power, x[i].second + k)\r\n\t\t\t}\r\n\r\n\t\t\tif (nxt > total) {\r\n\t\t\t\tval g = (nxt - total + power - 1) / power\r\n\t\t\t\ttotal += power * g\r\n\t\t\t\tcnt += g\r\n\t\t\t}\r\n\t\t}\r\n\t\tans = minOf(ans, cnt)\r\n\t}\r\n\r\n\tprintln(ans)\r\n}"
}