{
    "id": 98218723,
    "contestId": 1431,
    "creationTimeSeconds": 1605198222,
    "relativeTimeSeconds": 6522,
    "problem": {
        "contestId": 1431,
        "index": "H",
        "name": "Rogue-like Game",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "*special",
            "brute force",
            "greedy",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1431,
        "members": [
            {
                "handle": "majk"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1605191700
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 1856,
    "memoryConsumedBytes": 63488000,
    "source": "import java.lang.Long.max\n\nfun main() {\n    val (N, M, K) = readLine()!!.split(' ').map { it.toInt() }\n    val A = readLine()!!.split(' ').map { it.toLong() }\n    val B = readLine()!!.split(' ').map { it.toLong() }\n    val C = (0 until N).map { readLine()!!.split(' ').map { it.toLong() } }\n\n    val AOpen = (0 until N).map { i ->\n        A[i] to (0 until B.count { it <= A[i] }).map { j -> C[i][j] }.max()!!\n    }\n    val BOpen = (0 until M).map { i ->\n        B[i] to (0 until A.count { it <= B[i] }).map { j -> C[j][i] }.max()!!\n    }\n\n    val open = (AOpen + BOpen).sortedBy { it.first }\n    val ans = (0 until N+M).map { i ->\n        var ans = 0L\n        var cur = 0L\n        var mx = open[0].second + (if (i == 0) K else 0)\n        (1 until N+M).forEach {\n            val missing = (open[it].first - cur + mx - 1) / mx\n            cur += missing * mx\n            ans += missing\n            var self = open[it].second + (if (i == it) K else 0)\n            mx = max(mx, self)\n        }\n\n        ans\n    }.min()\n    println(ans)\n}"
}