{
    "id": 98215676,
    "contestId": 1431,
    "creationTimeSeconds": 1605195995,
    "relativeTimeSeconds": 4295,
    "problem": {
        "contestId": 1431,
        "index": "H",
        "name": "Rogue-like Game",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "*special",
            "brute force",
            "greedy",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1431,
        "members": [
            {
                "handle": "TadijaSebez"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1605191700
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 1809,
    "memoryConsumedBytes": 215756800,
    "source": "import java.util.*\r\nimport kotlin.math.*\r\n\r\nfun rs()=readLine()!!\r\nfun ri()=rs().toInt()\r\nfun rl()=rs().toLong()\r\nfun rd()=rs().toDouble()\r\nfun ris()=rs().split(\" \").map{it.toInt()}\r\nfun rls()=rs().split(\" \").map{it.toLong()}\r\nfun rds()=rs().split(\" \").map{it.toDouble()}\r\n\r\nval out=mutableListOf<String>()\r\nfun pln(s:String){out.add(s)}\r\nfun pln(i:Int)=pln(i.toString())\r\nfun pln(l:Long)=pln(l.toString())\r\nfun pln(d:Double,precision:Int=12)=pln((\"%.\"+precision.toString()+\"f\").format(d))\r\nfun pln(a:IntArray)=pln(a.joinToString(\" \"))\r\nfun pln(a:LongArray)=pln(a.joinToString(\" \"))\r\nfun<T> pln(a:Array<T>)=pln(a.joinToString(\" \"))\r\nfun<T> pln(a:ArrayList<T>)=pln(a.joinToString(\" \"))\r\nfun output(){println(out.joinToString(\"\\n\"))}\r\n\r\nval inf=9e18.toLong()\r\nfun main(){\r\n    val(n,m,k)=ris()\r\n    val a=rls()\r\n    val b=rls()\r\n    val c=Array(n){rls()}\r\n    data class C(val x:Long,var y:Long)\r\n    val pts=ArrayList<C>()\r\n    var pi=0;var pj=0\r\n    while(pi<n||pj<m){\r\n        if(pi==n||(pj!=m&&b[pj]<a[pi])){\r\n            for(z in 0 until pi)pts.add(C(b[pj],c[z][pj]))\r\n            pj++\r\n        }else{\r\n            for(z in 0 until pj)pts.add(C(a[pi],c[pi][z]))\r\n            pi++\r\n        }\r\n    }\r\n    //pts.sortWith(compareBy({it.x},{-it.y}))\r\n    val hull=ArrayList<C>()\r\n    for(pt in pts){\r\n        if(hull.isNotEmpty()&&hull.last().x==pt.x&&hull.last().y<pt.y)hull.removeAt(hull.size-1)\r\n        if(hull.isEmpty()||hull.last().y<pt.y)hull.add(pt)\r\n    }\r\n    fun Solve():Long{\r\n        var now=0L\r\n        var exp=0L;var mx=0L\r\n        for(i in 0 until hull.size){\r\n            val need=if(i+1==hull.size)max(a.last(),b.last()) else hull[i+1].x\r\n            mx=max(mx,hull[i].y)\r\n            if(exp<need){\r\n                val dif=need-exp\r\n                val take=(dif+mx-1)/mx\r\n                now+=take\r\n                exp+=take*mx\r\n            }\r\n        }\r\n        return now\r\n    }\r\n    var ans=inf\r\n    for(chose in 0 until hull.size){\r\n        hull[chose].y+=k\r\n        ans=min(ans,Solve())\r\n        hull[chose].y-=k\r\n    }\r\n    pln(ans)\r\n    output()\r\n}"
}