{
    "id": 98219053,
    "contestId": 1431,
    "creationTimeSeconds": 1605198493,
    "relativeTimeSeconds": 6793,
    "problem": {
        "contestId": 1431,
        "index": "H",
        "name": "Rogue-like Game",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "*special",
            "brute force",
            "greedy",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1431,
        "members": [
            {
                "handle": "azukun"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1605191700
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 1872,
    "memoryConsumedBytes": 156569600,
    "source": "import java.io.PrintWriter\nimport java.util.*\n\nfun readLn() = readLine()!!\nfun readInt() = readLn().toInt()\nfun readLong() = readLn().toLong()\nfun readStrings() = readLn().split(\" \")\nfun readIntList() = readStrings().map { it.toInt() }\nfun readLongList() = readStrings().map { it.toLong() }\n\n// (\u3065\u00b0\u03c9\u00b0)\u3065\uff90e\u2605\u309c\u30fb\u3002\u3002\u30fb\u309c\u309c\u30fb\u3002\u3002\u30fb\u309c\u2606\u309c\u30fb\u3002\u3002\u30fb\u309c\u309c\u30fb\u3002\u3002\u30fb\u309c\nval writer = PrintWriter(System.out)\n\nfun main() {\n    val (n, m, extra) = readIntList()\n    val a = readLongList()\n    val b = readLongList()\n\n    val c = Array(n) { readIntList() }\n    val rdp = Array(n) { Array(m) { 0 } }\n    for (i in 0 until n) {\n        rdp[i][0] = c[i][0]\n        for (j in 1 until m) rdp[i][j] = Math.max(c[i][j], rdp[i][j - 1])\n    }\n\n    val dp = Array(n) { Array(m) { 0 } }\n    dp[0] = rdp[0]\n    for (i in 1 until n) {\n        for (j in 0 until m) dp[i][j] = Math.max(rdp[i][j], dp[i - 1][j])\n    }\n\n    var pa = 0\n    var pb = 0\n    val list = mutableListOf<Pair<Long, Int>>()\n    while (pa < n || pb < m) {\n        val o = Math.min(if (pa < n) a[pa] else Long.MAX_VALUE, if (pb < m) b[pb] else Long.MAX_VALUE)\n        while (pa < n && a[pa] == o) pa++\n        while (pb < m && b[pb] == o) pb++\n        list.add(o to dp[pa - 1][pb - 1])\n    }\n\n    if (list.size == 1) {\n        println(0)\n        return\n    }\n\n    var ans = Long.MAX_VALUE\n    for (i in 0 until list.size - 1) {\n        var moves = 0L\n        var sum = 0L\n        var mv = 0\n        for (j in 0 until list.size - 1) {\n            var cv = list[j].second\n            if (j == i) cv += extra\n            mv = Math.max(mv, cv)\n            if (sum >= list[j + 1].first) continue\n            val d = (list[j + 1].first - sum - 1) / mv + 1\n            sum += d * mv\n            moves += d\n        }\n        ans = Math.min(ans, moves)\n    }\n\n    writer.println(ans)\n    writer.close()\n}"
}