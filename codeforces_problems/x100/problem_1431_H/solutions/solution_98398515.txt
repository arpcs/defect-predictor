{
    "id": 98398515,
    "contestId": 1431,
    "creationTimeSeconds": 1605379727,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1431,
        "index": "H",
        "name": "Rogue-like Game",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "*special",
            "brute force",
            "greedy",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1431,
        "members": [
            {
                "handle": "pakhandi98"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1605191700
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 1341,
    "memoryConsumedBytes": 20684800,
    "source": "import java.lang.AssertionError\r\nimport java.util.*\r\nprivate fun readLn() = readLine()!! // string line\r\nprivate fun readInt() = readLn().toInt() // single int\r\nprivate fun readLong() = readLn().toLong() // single long\r\nprivate fun readDouble() = readLn().toDouble() // single double\r\nprivate fun readStrings() = readLn().split(\" \") // list of strings\r\nprivate fun readInts() = readStrings().map { it.toInt() } // list of ints\r\nprivate fun readLongs() = readStrings().map { it.toLong() } // list of longs\r\nprivate fun readDoubles() = readStrings().map { it.toDouble() } // list of doubles\r\nfun main(args: Array<String>) {\r\n    //var tt=readInt()\r\n    for(op in 0 until 1)\r\n    {\r\n        var(n,m,k)=readInts()\r\n        var a=readLongs()\r\n        var b=readLongs()\r\n        var c=Array(n) {LongArray(m) {0}}\r\n        for(i in 0 until n)\r\n        {\r\n            var f=readLongs()\r\n            for(j in 0 until m)\r\n            c[i][j]=f[j]\r\n        }\r\n        for(i in 0 until n)\r\n        {\r\n            for(j in 0 until m)\r\n            {\r\n                if(i>0)\r\n                {\r\n                    c[i][j]=maxOf(c[i][j],c[i-1][j])\r\n                }\r\n                if(j>0)\r\n                {\r\n                    c[i][j]=maxOf(c[i][j],c[i][j-1])\r\n                }\r\n            }\r\n        }\r\n        var res=1e18.toLong()\r\n        fun find(xx: Int,yy: Int,ptrs: Long,steps: Long,bonus: Long)\r\n        {\r\n            var x=xx\r\n            var y=yy\r\n            while(x+1<n && a[x+1]<=ptrs)\r\n            {\r\n                x+=1\r\n            }\r\n            while(y+1<m && b[y+1]<=ptrs)\r\n            {\r\n                y+=1\r\n            }\r\n            if(x==n-1 && y==m-1)\r\n            {\r\n                res=minOf(res,steps)\r\n                return\r\n            }\r\n            var e=maxOf(c[x][y],bonus)\r\n            var needs=1e18.toLong()\r\n            if(x+1<n)\r\n            {\r\n                needs=minOf(needs,(a[x+1]-ptrs+e-1)/e)\r\n            }\r\n            if(y+1<m)\r\n            {\r\n                needs=minOf(needs,(b[y+1]-ptrs+e-1)/e)\r\n            }\r\n            find(x,y,ptrs+e*needs,steps+needs,bonus)\r\n            if(bonus==-1L)\r\n            {\r\n                var e=c[x][y]+k\r\n                var needs=1e18.toLong()\r\n                if(x+1<n)\r\n                {\r\n                    needs=minOf(needs,(a[x+1]-ptrs+e-1)/e)\r\n                }\r\n                if(y+1<m)\r\n                {\r\n                    needs=minOf(needs,(b[y+1]-ptrs+e-1)/e)\r\n                }\r\n                find(x,y,ptrs+e*needs,steps+needs,e)\r\n            }\r\n        }\r\n        find(0,0,0L,0L,-1L)\r\n        println(res)\r\n    }\r\n}"
}