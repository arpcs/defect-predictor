{
    "id": 98222030,
    "contestId": 1431,
    "creationTimeSeconds": 1605200697,
    "relativeTimeSeconds": 8997,
    "problem": {
        "contestId": 1431,
        "index": "H",
        "name": "Rogue-like Game",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "*special",
            "brute force",
            "greedy",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1431,
        "members": [
            {
                "handle": "Ra16bit"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1605191700
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "import java.util.*\r\nimport java.io.*\r\nimport java.lang.Integer.max\r\n\r\nclass IOStream {\r\n    val br = BufferedReader(InputStreamReader(System.`in`))\r\n    var st: StringTokenizer? = null\r\n\r\n    fun nextToken(): String? {\r\n        while (st == null || !st!!.hasMoreTokens())\r\n            st = StringTokenizer(br.readLine())\r\n        return st!!.nextToken()\r\n    }\r\n\r\n    fun nextInt(): Int {\r\n        return nextToken()!!.toInt()\r\n    }\r\n\r\n    fun nextLong(): Long {\r\n        return nextToken()!!.toLong()\r\n    }\r\n}\r\n\r\nfun main(args: Array<String>) {\r\n    val inp = IOStream()\r\n    val out = PrintWriter(System.out)\r\n    val n = inp.nextInt()\r\n    val m = inp.nextInt()\r\n    val k = inp.nextInt()\r\n    val a = Array(n, { i -> inp.nextLong() })\r\n    val b = Array(m, { i -> inp.nextLong() })\r\n    val c = Array(n, { i -> Array(m, { j-> inp.nextInt() }) })\r\n    val best = Array(n, { i -> Array(m, { j-> c[i][j] }) })\r\n    for (i in 0..n-1) for (j in 0..m-1) {\r\n        if (i>0) best[i][j]=Math.max(best[i][j],best[i-1][j])\r\n        if (j>0) best[i][j]=Math.max(best[i][j],best[i][j-1])\r\n    }\r\n    val inf = 1000000000000000L\r\n    var i = 0\r\n    var j = 0\r\n    var num = 0\r\n    val wi = Array(n + m + 1, { i->0 })\r\n    val wj = Array(n + m + 1, { i->0 })\r\n    val v = Array(n + m + 1, { i->0L })\r\n    var st = 0\r\n    while (i<n || j<m) {\r\n        if (j>=m || a[i]<b[j]) {\r\n            wi[num]=i\r\n            wj[num]=j-1\r\n            v[num]=a[i]\r\n            i++\r\n        } else {\r\n            wi[num]=i-1\r\n            wj[num]=j\r\n            v[num]=b[j]\r\n            j++\r\n        }\r\n        if (v[num] == 0) st=num\r\n        num++\r\n    }\r\n    val f = Array(num, { i -> Array(2, { j-> inf }) })\r\n    val z = Array(num, { i -> Array(2, { j-> inf }) })\r\n    f[st]=0\r\n    z[st]=0\r\n    for (i in st..num-2) for (j in 0..1) if (f[i][j]<inf) {\r\n        var cur = best[wi[i]][wj[i]]\r\n        for (nxt in i+1..num-1) {\r\n            val cnt = (v[nxt] - z[i][j] + cur - 1) / cur\r\n            if (f[nxt][j] > f[i][j] + cnt) {\r\n                f[nxt][j] = f[i][j] + cnt\r\n                z[nxt][j] = z[i][j] + cur * cnt\r\n            }\r\n        }\r\n        if (j==1) continue\r\n        cur += k\r\n        for (nxt in i+1..num-1) {\r\n            val cnt = (v[nxt] - z[i][j] + cur - 1) / cur\r\n            if (f[nxt][1] > f[i][j] + cnt) {\r\n                f[nxt][1] = f[i][j] + cnt\r\n                z[nxt][1] = z[i][j] + cur * cnt\r\n            }\r\n        }\r\n    }\r\n    out.println(Math.min(f[num-1][0],f[num-1][1]));\r\n    out.close();\r\n}\r\n"
}