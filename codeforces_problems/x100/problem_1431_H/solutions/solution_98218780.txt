{
    "id": 98218780,
    "contestId": 1431,
    "creationTimeSeconds": 1605198272,
    "relativeTimeSeconds": 6572,
    "problem": {
        "contestId": 1431,
        "index": "H",
        "name": "Rogue-like Game",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "*special",
            "brute force",
            "greedy",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1431,
        "members": [
            {
                "handle": "uwi"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1605191700
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 1606,
    "memoryConsumedBytes": 29081600,
    "source": "import java.io.PrintWriter\r\nimport java.util.*\r\n\r\nfun solve() {\r\n    var (n, m, K) = na()\r\n    var a = nal()\r\n    var b = nal()\r\n    var c = mutableListOf<LongArray>()\r\n    for(i in 0..n-1){\r\n        c.add(nal().toLongArray())\r\n    }\r\n    for(i in 0..n-1){\r\n        for(j in 0..m-1){\r\n            if(i-1 >= 0){\r\n                c[i][j] = Math.max(c[i][j], c[i-1][j])\r\n            }\r\n            if(j-1 >= 0){\r\n                c[i][j] = Math.max(c[i][j], c[i][j-1])\r\n            }\r\n        }\r\n    }\r\n    var ans = 10000000000000000L\r\n    for(hit in 0..n+m+1){\r\n        var st = 0L\r\n        var x = 0L\r\n        var p = 0\r\n        var q = 0\r\n        var hitv = -1L\r\n        var xst = 0\r\n        while(true) {\r\n            while (p < n && a[p] <= x) {\r\n                p++\r\n            }\r\n            while (q < m && b[q] <= x) {\r\n                q++\r\n            }\r\n            if(p == n && q == m){\r\n                break\r\n            }\r\n\r\n            if(xst == hit) {\r\n                hitv = c[p - 1][q - 1]\r\n            }\r\n            var pl = c[p-1][q-1]\r\n            if(c[p-1][q-1] == hitv){\r\n                pl = pl + K.toLong()\r\n            }\r\n            if(hitv >= 0 && pl > hitv && hitv + K.toLong() > pl){\r\n                pl = hitv + K.toLong()\r\n            }\r\n\r\n            var ne = 100000000000000L\r\n            if(p < n){\r\n                ne = Math.min(ne, a[p]-x)\r\n            }\r\n            if(q < m){\r\n                ne = Math.min(ne, b[q]-x)\r\n            }\r\n            st = st + (ne+pl-1)/pl\r\n            x += (ne+pl-1)/pl*pl\r\n            xst++\r\n//            out.print(st)\r\n//            out.print(\" \")\r\n//            out.print(x)\r\n//            out.print(\" \")\r\n//            out.println(xst)\r\n        }\r\n        ans = Math.min(ans, st)\r\n    }\r\n    out.println(ans)\r\n}\r\n\r\nval out = PrintWriter(System.out)\r\n\r\nfun main() {\r\n    solve()\r\n    out.flush()\r\n}\r\n\r\nfun nline() = readLine()!!\r\nfun ni() = nline().toInt()\r\nfun nl() = nline().toLong()\r\nfun nd() = nline().toDouble()\r\nfun nas() = nline().split(\" \")\r\nfun na() = nas().map { it.toInt() }\r\nfun nal() = nas().map { it.toLong() }\r\n\r\nfun tr(x: Any) = System.err.println(x)\r\nfun tr(x: IntArray) = System.err.println(Arrays.toString(x))\r\nfun tr(x: Array<Any>) = System.err.println(Arrays.deepToString(x))\r\n"
}