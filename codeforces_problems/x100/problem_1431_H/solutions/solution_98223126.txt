{
    "id": 98223126,
    "contestId": 1431,
    "creationTimeSeconds": 1605201735,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1431,
        "index": "H",
        "name": "Rogue-like Game",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "*special",
            "brute force",
            "greedy",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1431,
        "members": [
            {
                "handle": "fjuengermann"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1605191700
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 139,
    "memoryConsumedBytes": 1740800,
    "source": "private fun readLn() = readLine()!! // string line\nprivate fun readInt() = readLn().toInt() // single int\nprivate fun readStrings() = readLn().split(\" \") // list of strings\nprivate fun readInts() = readStrings().map { it.toInt() } // list of ints\nprivate fun readLongs() = readStrings().map { it.toLong() } // list of ints\n\nfun main() {\n    val (n, m, k) = readInts()\n    val A = readLongs()\n    val B = readLongs()\n    var C = Array(n) {LongArray(m)}\n    for (i in 0 until n){\n        C[i] = readLongs().toLongArray()\n    }\n    var unlocksA = mutableListOf<Pair<Long,Boolean>>()\n    var totmax = 0L\n    for(i in 1 until n){\n        unlocksA.add(Pair(A[i], false))\n        totmax = maxOf(totmax, A[i])\n    }\n    for(i in 1 until m){\n        unlocksA.add(Pair(B[i], true))\n        totmax = maxOf(totmax, B[i])\n    }\n    var unlocks = unlocksA.sortedBy {it.first}\n    var maxs = mutableListOf<Pair<Long,Long>>()\n    var mx = 0L\n    var r = 1\n    var c = 1\n    for(i in 0 until (n+m-2)){\n        if(unlocks[i].second){\n            for(j in 0 until r){\n                mx = maxOf(mx, C[j][c])\n            }\n            c++\n        }else{\n            for(j in 0 until c){\n                mx = maxOf(mx, C[r][j])\n            }\n            r++\n        }\n        maxs.add(Pair(unlocks[i].first, mx))\n    }\n    var mC:Long = 2000L*1000L*1000L*1000L\n    for(cng in 0 until (n+m-2)){\n        maxs[cng] = Pair(maxs[cng].first, maxs[cng].second + k)\n\n        var cc:Long = 0\n        var sc:Long = 0\n        var b:Long = C[0][0]\n        var i = 0\n        while(sc < totmax){\n            while(i < (n+m-2) && maxs[i].first <= sc){\n                b = maxOf(b, maxs[i].second)\n                i++;\n            }\n            var ng = totmax\n            if(i < (n+m-2)) ng = maxs[i].first;\n            var ct = (ng-sc+b-1) / b\n            cc += ct\n            sc += ct*b\n        }\n        mC = minOf(mC, cc)\n        maxs[cng] = Pair(maxs[cng].first, maxs[cng].second - k)\n    }\n    println(mC)\n}"
}