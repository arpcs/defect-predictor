{
    "id": 98219765,
    "contestId": 1431,
    "creationTimeSeconds": 1605199088,
    "relativeTimeSeconds": 7388,
    "problem": {
        "contestId": 1431,
        "index": "H",
        "name": "Rogue-like Game",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "*special",
            "brute force",
            "greedy",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1431,
        "members": [
            {
                "handle": "wu_qing"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1605191700
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 1340,
    "memoryConsumedBytes": 65536000,
    "source": "import kotlin.math.max\r\nimport kotlin.math.min\r\n\r\nfun main() {\r\n    val (n, m, k) = readLine()!!.split(' ').map { it.toInt() }\r\n    val a = listOf(0L) + readLine()!!.split(' ').map { it.toLong() }\r\n    val b = listOf(0L) + readLine()!!.split(' ').map { it.toLong() }\r\n    val c = Array(n + 1) { LongArray(m + 1) }\r\n    for (i in 1..n) c[i] = (listOf(0L) + readLine()!!.split(' ').map { it.toLong() }).toLongArray()\r\n    val lu = Array(n + 1) { LongArray(m + 1) }\r\n    for (i in 1..n) for (j in 1..m) lu[i][j] = max(c[i][j], max(lu[i - 1][j], lu[i][j - 1]))\r\n\r\n    fun stage2(i: Int, j: Int, cur: Long, special: Long): Long {\r\n        if (i == n && j == m) return 0L\r\n        val ni = if (i == n) Long.MAX_VALUE else a[i + 1] - cur\r\n        val nj = if (j == m) Long.MAX_VALUE else b[j + 1] - cur\r\n        val single = max(special, lu[i][j])\r\n        val num = (min(ni, nj) + single - 1) / single\r\n        val next = cur + num * single\r\n        var ii = i\r\n        var jj = j\r\n        while (ii < n && a[ii + 1] <= next) ii++\r\n        while (jj < m && b[jj + 1] <= next) jj++\r\n        //println(\"$i $j $cur $special -> $ni $nj -> $ii $jj $next $special\")\r\n        return stage2(ii, jj, next, special) + num\r\n    }\r\n\r\n    fun stage1(i: Int, j: Int, cur: Long): Long {\r\n        if (i == n && j == m) return 0L\r\n        val ni = if (i == n) Long.MAX_VALUE else a[i + 1] - cur\r\n        val nj = if (j == m) Long.MAX_VALUE else b[j + 1] - cur\r\n        val single = lu[i][j]\r\n        val num = (min(ni, nj) + single - 1) / single\r\n        val next = cur + num * single\r\n        var ii = i\r\n        var jj = j\r\n        while (ii < n && a[ii + 1] <= next) ii++\r\n        while (jj < m && b[jj + 1] <= next) jj++\r\n        //println(\"$i $j $cur -> $ni $nj -> $ii $jj $next\")\r\n        return min(stage2(i, j, cur, lu[i][j] + k), stage1(ii, jj, next) + num)\r\n    }\r\n\r\n    println(stage1(1, 1, 0))\r\n}"
}