{
    "id": 212796535,
    "contestId": 1605,
    "creationTimeSeconds": 1688805441,
    "relativeTimeSeconds": 1401,
    "problem": {
        "contestId": 1605,
        "index": "A",
        "name": "A.M. Deviation",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1605,
        "members": [
            {
                "handle": "fightingxjz"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1688804040
    },
    "programmingLanguage": "Java 17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 139,
    "memoryConsumedBytes": 0,
    "source": "import java.util.*;\r\nimport java.io.*;\r\npublic class Main {\r\n\t\r\n\r\n\tstatic long qmi(long a,long k,long mod)\r\n\t{\r\n\t\tlong res = 1;\r\n\t\twhile(k>0)\r\n\t\t{\r\n\t\t\tif(k%2==1) res = (res*a)%mod;\r\n\t\t\tk >>= 1;\r\n\t\t\ta = (a*a)%mod;\r\n\t\t\t\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\npublic static void main(String[] args) {\r\n InputReader in = new InputReader(System.in);\r\nPrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\r\n   \t\tint T = in.nextInt();\r\n   \t\t\r\n   \t\t\r\n   \t\twhile(T-->0)\r\n   \t\t{\r\n   \t\t\t\r\n   \t\t\tint n = in.nextInt();\r\n   \t\t\tint a = in.nextInt();\r\n   \t\t\tint b = in.nextInt();\r\n   \t\t\t\r\n   \t\t\tout.println(Math.abs(2*a-b-n)%3);\r\n   \t\t\t\r\n   \t\t\t\r\n   \t\t\t\r\n   \t\t\t\r\n   \t\t\t\r\n   \t\t\t\t\r\n   \t\t\t\t\r\n   \t\t}\r\n   \t\t\t\r\n \r\n        \t\r\n        \t\r\n        \t\r\n        \t\r\n\tout.flush();\r\n}\r\n}\r\n\r\n\r\nclass InputReader {\r\n    private final BufferedReader buf;\r\n    private StringTokenizer tkl;\r\n\r\n    public InputReader(InputStream is) {\r\n        buf = new BufferedReader(new InputStreamReader(is));\r\n    }\r\n\r\n    public boolean hasNext() {\r\n        try {\r\n            while (tkl == null || !tkl.hasMoreElements()) tkl = new StringTokenizer(buf.readLine());\r\n        } catch (Exception e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public String next() {\r\n        return hasNext() ? tkl.nextToken() : null;\r\n    }\r\n\r\n    public int nextInt() {\r\n        return Integer.parseInt(next());\r\n    }\r\n\r\n    public double nextDouble() {\r\n        return Double.parseDouble(next());\r\n    }\r\n\r\n    public long nextLong() {\r\n        return Long.parseLong(next());\r\n    }\r\n}\r\n"
}