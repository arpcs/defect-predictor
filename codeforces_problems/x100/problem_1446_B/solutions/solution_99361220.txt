{
    "id": 99361220,
    "contestId": 1446,
    "creationTimeSeconds": 1606189881,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1446,
        "index": "B",
        "name": "Catching Cheaters",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1800,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1446,
        "members": [
            {
                "handle": "k4droid3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1605450900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 108,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 100044800,
    "source": "#include <iostream>\r\n#include <cstring>\r\nusing namespace std;\r\nint main() {\r\n    int n, m;\r\n    string a, b;\r\n\r\n    cin >> n >> m >> a >> b;\r\n    int dp[n+2][m+2], ans = 0;\r\n    memset(dp, 0, sizeof dp);\r\n    for(int i=0; i<=n; i++){\r\n        for(int j=0; j<=m; j++){\r\n            ans = max(ans, dp[i][j]);\r\n            if(i<n and j<m and a[i] == b[j])\r\n                dp[i+1][j+1] = max(dp[i+1][j+1], dp[i][j]+2);\r\n            \r\n            if(i<n)\r\n                dp[i+1][j] = max(dp[i+1][j], dp[i][j]-1);\r\n            if(j<m)\r\n                dp[i][j+1] = max(dp[i][j+1], dp[i][j]-1);\r\n        }\r\n    }\r\n\r\n    cout << ans << '\\n';\r\n}\r\n"
}