{
    "id": 149189517,
    "contestId": 1446,
    "creationTimeSeconds": 1646942568,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1446,
        "index": "B",
        "name": "Catching Cheaters",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1800,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1446,
        "members": [
            {
                "handle": "dacio.bezerra"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1605450900
    },
    "programmingLanguage": "Python 3",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "import math\nfrom collections import defaultdict\nfrom collections import Counter\nt=1\nwhile(t>0):\n    n,m=map(int,input().split())\n    a=input()\n    b=input()\n    lcs=[]\n    for i in range(0,len(a)+1):\n        m=[]\n        for j in range(0,len(b)+1):\n            m.append(0)\n        lcs.append(m)\n    max1=0\n    for i in range(1,len(a)+1):\n        for j in range(1,len(b)+1):\n            if(a[i-1]==b[j-1]):\n                lcs[i][j]=lcs[i-1][j-1]+2\n            else:\n                lcs[i][j]=max(lcs[i][j],max(lcs[i-1][j],lcs[i][j-1])-1)\n            max1=max(max1,lcs[i][j])\n    print(max1)"
}