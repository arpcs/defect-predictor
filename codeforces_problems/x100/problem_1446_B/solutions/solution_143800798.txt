{
    "id": 143800798,
    "contestId": 1446,
    "creationTimeSeconds": 1642952159,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1446,
        "index": "B",
        "name": "Catching Cheaters",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1800,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1446,
        "members": [
            {
                "handle": "uylulu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1605450900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 108,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 100044800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n \r\n#define ld long double\r\n#define ll long long\r\n#define endl \"\\n\"\r\n\r\nvoid solve() {\r\n    int n,m;\r\n    string a,b;\r\n    cin>>n>>m>>a>>b;\r\n    int dp[n + 1][m + 1],res = 0;\r\n    for(int i = 0;i <= n;i++) {\r\n        for(int j = 0;j <= m;j++) {\r\n            if(i == 0 || j == 0 ) {\r\n                dp[i][j] = -(i + j);\r\n                continue;\r\n            }\r\n            if(a[i-1] == b[j-1]) {\r\n                dp[i][j] = max(2,2 + dp[i -1][j-1]);\r\n            } else {\r\n                dp[i][j] = max(dp[i-1][j],dp[i][j-1]) - 1;\r\n            }\r\n            res = max(res,dp[i][j]);\r\n        }\r\n    }\r\n    cout<<res<<endl;\r\n    \r\n}\r\n\r\nsigned main() {\r\n    #ifdef UY\r\n        freopen(\"in.txt\",\"r\",stdin);\r\n        freopen(\"out.txt\",\"w\",stdout);\r\n        auto start_time = chrono::high_resolution_clock::now();   \r\n    #endif\r\n    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\r\n\r\n    solve();\r\n\r\n\r\n    #ifdef UY\r\n        auto end_time = chrono:: high_resolution_clock::now();\r\n        double time_delta = chrono::duration_cast<chrono::milliseconds> (end_time-start_time).count();\r\n        cout << endl << time_delta << \"ms\";\r\n    #endif  \r\n    return 0;\r\n}"
}