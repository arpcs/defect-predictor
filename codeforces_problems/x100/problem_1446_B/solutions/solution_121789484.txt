{
    "id": 121789484,
    "contestId": 1446,
    "creationTimeSeconds": 1625814527,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1446,
        "index": "B",
        "name": "Catching Cheaters",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1800,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1446,
        "members": [
            {
                "handle": "Manz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1605450900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 108,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 100044800,
    "source": "#include <bits/stdc++.h>\n#include <limits.h>\n#define arrayin(i,n)    for(auto i=0;i<n;i++)\n#define loop(i,n)       for(auto i=1;i<=n;i++)\n#define ull unsigned long long int\n#define ll long long int\n#define ld long double\n#define pri pair<int,int>\n#define prl pair<ll,ll>\n#define ff first\n#define ss second\n#define pb push_back\n#define all(v)  (v).begin(),(v).end()\n#define print(arr)  arrayin(i,n) cout<<arr[i]<<\" \"; cout<<endl;\n#define no cout << \"NO\" << endl;\n#define yes cout << \"YES\" << endl;\nconst int K = 998244353;\nconst int M = 1e9+7;\nconst int N = 2e5+5;\nusing namespace std;\n\n// bool isprime[N];\n// vector<int> facs[N];\n\n// void factors_sieve()\n// {\n//     arrayin(i,N)    isprime[i]=true;\n\n//     isprime[0]=isprime[1]=false;\n//     for(int i=1;i<N;i++)\n//         facs[i].pb(1);  \n\n//     for(int i=2;i*i<=N;i++)\n//     {\n//         for(int j=i*2;j<N;j+=i)\n//         {\n//             facs[j].pb(i);\n//             if((j/i)*(j/i)>N)\n//                 facs[j].pb(j/i);\n//         }\n//     }\n\n//     for(int i=2;i<N;i++)\n//         facs[i].pb(i);\n// }\n\n// int prime[N];\n// vector<int> primes;\n\n// void primes_sieve()\n// {\n//     arrayin(i,N)    prime[i]=i;\n\n//     for(int i=2;i*i<N;i++)\n//     {\n//         if(prime[i]==i)\n//         {\n//             for(int j=i*i;j<N;j+=i)\n//             {\n//                 if(prime[j]==j)\n//                     prime[j]=i;\n//             }\n//         }\n//     }\n\n//     for(int i=2;i<N;i++)\n//     {\n//         if(prime[i]==i)\n//             primes.pb(i);\n//     }\n\n// }\n\n// int gcdExt(int a,int b,int &x,int &y)\n// {\n//     if(a==0)\n//     {\n//         x = 0;\n//         y = 1;\n//         return b;\n//     }\n\n//     int p,q;\n//     int gcd = gcdExt(b%a,a,p,q);\n\n//     x = q-(b/a)*p;\n//     y = p;\n\n//     return gcd;\n// }\n\n// ll expo_mod(ll a,int b)\n// {\n//     ll ans = 1;\n//     while(b)\n//     {\n//         if(b&1)\n//             ans = (ans*a)%M;\n\n//         a = (a*a)%M;\n//         b = b>>1;\n//     }\n\n//     return ans%M;\n// }\n\n// ll modInv(int a)\n// {\n//     return expo_mod(a,M-2);\n// }\n\n\n\n// vector<int> g[N];\n// int cutsize[N];\n// int siz[N];\n// vector<pri> edges;\n// bool vis[N];\n// int n;\n\n// vector<int> Dfs(int x,vector<int> ans)\n// {   \n//     vis[x]=true;\n//     ans.pb(x);\n\n//     for(auto i : g[x])\n//     {    \n//         if(!vis[i])\n//         {\n//             vector<int> temp = Dfs(i,ans);\n//             if(temp.size()==n)\n//                 return temp;\n//         }\n//     }\n\n//     return ans;\n// }\n\n// pri binsearch(int a[],int l,int r,int pos)\n// {\n//     int gcnt=0,lcnt=0;\n//     while(l<r)\n//     {\n//         int mid = (l+r)/2;\n\n//         if(mid<=pos)\n//         {\n//             l=mid+1;\n//             lcnt++;\n//         }\n//         else\n//         {\n//             r=mid;\n//             gcnt++;\n//         }\n//     }\n\n//     return {lcnt,gcnt};\n// }\n\n// vector<prl> factors(ll a)\n// {\n//     vector<prl> ans;\n\n//     for(int i=2;i*i<=a;i++)\n//     {\n//         if(a%i==0)\n//         {\n//             prl v;\n//             v.ff = i;\n//             ll cnt = 0;\n\n//             while(a%i==0)\n//             {\n//                 a=a/i;\n//                 cnt++;\n//             }\n\n//             v.ss = cnt;\n//             ans.pb(v);\n//         }\n//     }\n\n//     if(a!=1)    ans.pb({a,1});\n\n//     return ans;\n// }\n\n// ll f[N];\n// ll invF[N];\n\n// void fact()\n// {\n//     f[0]=1;\n//     for(int i=1;i<N;i++)\n//     {\n//         f[i] = (f[i-1]*i)%M;\n//     }\n// }\n\n// ll perm(int a,int b)\n// {\n//     ll ans =1;\n//     for(int i=0;i<b;i++)\n//     {\n//         ans = (ans*(a-i))%M;\n//     }\n\n//     return ans;\n// }\n\n// ll comb(ll a,int m)\n// {\n//     if(a>=m)\n//         return (f[a]%M * (invF[a-m]%M * invF[m]%M )%M )%M;\n\n//     return 0;\n// }\n\n// vector<int> binary(ll x,int n)\n// {\n//     vector<int> ans;\n//     arrayin(i,n)\n//     {\n//         ans.pb((x>>i)&1);\n//     }\n\n//     return ans;\n// }\n\n// int p[N]; \n// int parent(int u)\n// {\n//     if(p[u]==u)\n//         return u;\n//     return parent(p[u]);\n// }\n\n\n\nvoid solve()\n{  \n    int n,m;\n    cin >> n >> m;\n\n    string a,b;\n    cin >> a;\n    cin >> b;\n\n    int ans[n+1][m+1];\n    arrayin(i,n+1)      ans[i][0]=0;    \n    arrayin(i,m+1)      ans[0][i]=0;\n\n    loop(i,n)\n    {\n        loop(j,m)\n        {\n            ans[i][j] = max(ans[i-1][j],ans[i][j-1])-1;\n\n            if(a[i-1]==b[j-1])\n            {\n                ans[i][j] = max(ans[i][j],ans[i-1][j-1]+2);\n            }\n            else\n            {\n                ans[i][j] = max(ans[i][j],ans[i-1][j-1]-2);\n            }\n\n            ans[i][j] = max(ans[i][j],0);\n        }\n    }\n\n    int res = 0;\n    loop(i,n)\n    loop(j,m)\n    {\n        res = max(res,ans[i][j]);\n    }\n\n    cout << res << endl;\n\n} \n\n\n \n \nint main(int argc, char const *argv[])\n{\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n\n    // factors_sieve();\n    // fact();\n    // arrayin(i,N)    invF[i]=modInv(f[i]);\n\n    // int l=0,r=n;\n    // while(l!=r)\n    // {\n    //     int mid = (l+r+1)/2;\n\n    //     if(isValid(mid))\n    //         l=mid;\n    //     else\n    //         r=mid-1;\n    // }\n\n    // int t;\n    // cin >> t;\n    // cout << fixed << setprecision(20);\n    // while(t--)\n        solve();\n \n \n    return 0;\n}"
}