{
    "id": 161370893,
    "contestId": 1446,
    "creationTimeSeconds": 1655798897,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1446,
        "index": "B",
        "name": "Catching Cheaters",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1800,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1446,
        "members": [
            {
                "handle": "frey4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1605450900
    },
    "programmingLanguage": "Java 8",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 0,
    "source": "import java.io.*;\r\nimport java.util.StringTokenizer;\r\n\r\n/**\r\n * @author freya\r\n * @date 2022/6/21\r\n **/\r\npublic class Main {\r\n    public static Reader in;\r\n    public static PrintWriter out;\r\n    public static void main(String[] args) {\r\n        out = new PrintWriter(new BufferedOutputStream(System.out));\r\n        in = new Reader();\r\n        solve();\r\n        out.close();\r\n    }\r\n\r\n    static void solve(){\r\n        int n = in.nextInt(), m = in.nextInt();\r\n        String s = in.next(), t = in.next();\r\n//        int[][] dp = new int[n+1][m+1];\r\n//        for(int i = 1;i<=n;i++){\r\n//            for(int j = 1;j<=m;j++){\r\n//                if (s.charAt(i-1) == t.charAt(j-1))dp[i][j] = Math.max(2, dp[i-1][j-1]+2);\r\n//                else dp[i][j] = Math.max(dp[i-1][j]-1, dp[i][j-1]-1);\r\n//                max = Math.max(max, dp[i][j]);\r\n//            }\r\n//        }\r\n        short[] dp = new short[m+1];\r\n        short pre = 0, cur = 0, max = 0;\r\n        for(int i = 1;i<=n;i++){\r\n            for (int j = 1;j<=m;j++){\r\n                if (s.charAt(i-1)==t.charAt(j-1))cur = (short) Math.max(2, dp[j-1]+2);\r\n                else cur = (short) Math.max(dp[j]-1, pre-1);\r\n                dp[j-1] = pre;\r\n                pre = cur;\r\n                max = (short) Math.max(max, cur);\r\n            }\r\n        }\r\n        out.println(max);\r\n    }\r\n\r\n    static class Reader {\r\n        private BufferedReader br;\r\n        private StringTokenizer st;\r\n\r\n        Reader() {\r\n            br = new BufferedReader(new InputStreamReader(System.in));\r\n        }\r\n\r\n        String next() {\r\n            try {\r\n                while (st == null || !st.hasMoreTokens()) {\r\n                    st = new StringTokenizer(br.readLine());\r\n                }\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n            return st.nextToken();\r\n        }\r\n\r\n        int nextInt() {\r\n            return Integer.parseInt(next());\r\n        }\r\n\r\n        int[] nextIntArray(int n) {\r\n            int[] arr = new int[n];\r\n            for (int i = 0; i < n; i++)\r\n                arr[i] = nextInt();\r\n            return arr;\r\n        }\r\n\r\n        long nextLong() {\r\n            return Long.parseLong(next());\r\n        }\r\n\r\n        String nextLine() {\r\n            String s = \"\";\r\n            try {\r\n                s = br.readLine();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n            return s;\r\n        }\r\n    }\r\n}\r\n"
}