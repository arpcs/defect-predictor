{
    "id": 121486251,
    "contestId": 1446,
    "creationTimeSeconds": 1625581220,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1446,
        "index": "B",
        "name": "Catching Cheaters",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1800,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1446,
        "members": [
            {
                "handle": "NexTopper"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1605450900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 100556800,
    "source": "//Hope for the best,but prepare for the worst\n\n#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long LL;\ntypedef unsigned long long uLL;\n\nconst int mod=1e9+7;\nconst LL inf=2e18;\n\n#define pi acos(-1)\n#define pb push_back\n#define mp make_pair\n#define ff first\n#define ss second\n#define lb lower_bound\n#define ub upper_bound\ntypedef pair<int,int> pii;\ntypedef pair<LL,LL>piii;\n#define fbo find_by_order\n#define ook order_of_key\n#define SIN(x) sin(x * pi / 180.0)\n#define COS(x) cos(x * pi / 180.0)\n#define popcnt(x) __builtin_popcount(x)\n#define mem(x) memset(x,0,sizeof(x))\n#define all(x) sort(x.begin(),x.end())\n#define rall(x) reverse(x.begin(),x.end())\n#define out(isans) cout<<(isans?\"YES\":\"NO\")<<endl;\n#define case(x,y) printf(\"Case %lld: %lld\\n\",++x,y)\n#define fastio ios::sync_with_stdio(false);cin.tie(0)\n#define gg(...) [](const auto&...x){ char c='='; cerr<<#__VA_ARGS__<<\" \"; ((cerr<<exchange(c,',')<<\" \"<<x),...); cerr<<endl; }(__VA_ARGS__);\n\nconst int N = 5000 + 10;\n\nint dp[N][N];\n\nsigned main() {\n   fastio;\n   int n, m;\n   cin >> n >> m;\n   string a, b;\n   cin >> a >> b;\n\n   a = '#' + a;\n   b = '#' + b;\n\n   for(int i = 1; i <= n; i++) {\n      for(int j = 1; j <= m; j++) {\n\n         if(a[i] == b[j]) {\n            dp[i][j] = max(dp[i][j], dp[i-1][j-1] + 2);\n         }\n         else dp[i][j] = max(dp[i-1][j],dp[i][j-1]) - 1;\n      }\n   }\n\n   int answer = 0;\n\n   for(int i = 1; i <= n; i++) {\n      for(int j = 1; j <= m; j++) {\n         answer = max(answer , dp[i][j]);\n      }\n   }\n\n   cout << answer << endl;\n}\n\n/* stuff you should look for\n   * int overflow, array bounds\n   * special cases (n=1?)\n*/\n"
}