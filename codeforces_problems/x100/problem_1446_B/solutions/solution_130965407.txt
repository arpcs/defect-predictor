{
    "id": 130965407,
    "contestId": 1446,
    "creationTimeSeconds": 1633515211,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1446,
        "index": "B",
        "name": "Catching Cheaters",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1800,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1446,
        "members": [
            {
                "handle": "subhadip8617"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1605450900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 108,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 205107200,
    "source": "#include<bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\nusing namespace std;\r\nusing namespace chrono;\r\nusing namespace __gnu_pbds;\r\n\r\n#define int long long\r\ntypedef unsigned long long ull;\r\ntypedef long double lld;\r\ntemplate <class T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>; // *find_by_order, order_of_key\r\n\r\n#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\r\n#define MOD 1000000007\r\n#define MOD1 998244353\r\n#define INF 1e18\r\n#define pb push_back\r\n#define ppb pop_back\r\n#define ff first\r\n#define ss second\r\n#define PI 3.141592653589793238462\r\n#define sz(x) ((int)(x).size())\r\n#define all(x) (x).begin(), (x).end()\r\n\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\n#ifdef Subhadip\r\n#define debug(x) cerr << #x <<\" \"; _print(x); cerr << endl;\r\n#define deb(x,n) cerr << #x <<\" \"; _print(x,n); cerr << endl;\r\n#else\r\n#define debug(x);\r\n#define deb(x,n);\r\n#endif\r\n\r\n#define debugd(a,b) debug(a) debug(b)\r\n#define debugt(a,b,c) debug(a) debug(b) debug(c)\r\n\r\nvoid _print(int t) {cerr << t;}\r\nvoid _print(string t) {cerr << t;}\r\nvoid _print(char t) {cerr << t;}\r\nvoid _print(lld t) {cerr << t;}\r\nvoid _print(double t) {cerr << t;}\r\nvoid _print(ull t) {cerr << t;}\r\n\r\ntemplate <class T, class V> void _print(pair <T, V> p);\r\ntemplate <class T> void _print(vector <T> v);\r\ntemplate <class T> void _print(set <T> v);\r\ntemplate <class T, class V> void _print(map <T, V> v);\r\ntemplate <class T> void _print(multiset <T> v);\r\ntemplate <class T> void _print(T* arr, int n);\r\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\r\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(T* arr, int n) {cerr << \"[ \"; for (int i = 0; i < n; i++) {_print(arr[i]); cerr << \" \";} cerr << \"]\";}\r\n\r\n/*---------------------------------------------------------------------------------------------------------------------------*/\r\nint gcd(int a, int b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}\r\nint expo(int a, int b, int mod) {int res = 1; a %= mod; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}\r\nint mminvprime(int a, int b) {return expo(a, b - 2, b);}\r\nvoid swap(int &x, int &y) {int temp = x; x = y; y = temp;}\r\nvector<int> sieve(int n) {int*arr = new int[n + 1](); vector<int> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}\r\nvoid precision(int a) {cout << setprecision(a) << fixed;}\r\nint mod_add(int a, int b, int m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\r\nint mod_mul(int a, int b, int m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}\r\nint mod_sub(int a, int b, int m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}\r\nint mod_div(int a, int b, int m) {a = a % m; b = b % m; return (mod_mul(a, mminvprime(b, m), m) + m) % m;}  //only for prime m\r\n/*---------------------------------------------------------------------------------------------------------------------------*/\r\n\r\nconst int mxN=5005;\r\nint dp[mxN][mxN];\r\n\r\nvoid solve() {\r\n    int n,m;\r\n    cin>>n>>m;\r\n    string s1,s2;\r\n    cin>>s1>>s2;\r\n    int ans=0;\r\n    for(int i=1;i<=n;i++){\r\n        for(int j=1;j<=m;j++){\r\n            if(s1[i-1]==s2[j-1]){\r\n                dp[i][j]=max(dp[i][j],dp[i-1][j-1]+2);\r\n            }\r\n            dp[i][j]=max(dp[i][j],max(dp[i-1][j],dp[i][j-1])-1);\r\n            ans=max(ans,dp[i][j]);\r\n        }\r\n    }\r\n    cout<<ans;\r\n}\r\n\r\nsigned main() {\r\n#ifdef Subhadip\r\n    freopen(\"Error.txt\", \"w\", stderr);\r\n#endif\r\n    fastio();\r\n    int t = 1;\r\n    // cin>>t;\r\n    auto start1 = high_resolution_clock::now();\r\n    while (t--)\r\n        solve();\r\n    auto stop1 = high_resolution_clock::now();\r\n    auto duration = duration_cast<microseconds>(stop1 - start1);\r\n#ifdef Subhadip\r\n    cerr << \"Time: \" << duration . count() / 1000 << endl;\r\n#endif\r\n}"
}