{
    "id": 210052898,
    "contestId": 1294,
    "creationTimeSeconds": 1687077892,
    "relativeTimeSeconds": 892,
    "problem": {
        "contestId": 1294,
        "index": "C",
        "name": "Product of Three Numbers",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1294,
        "members": [
            {
                "handle": "amul07"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1687077000
    },
    "programmingLanguage": "GNU C11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n\r\n    vector <int> ans;\r\n    for(int i = 2; i*i <= n; i++)\r\n    {\r\n        if(n % i == 0)\r\n        {\r\n            n /= i;\r\n            ans.push_back(i);\r\n        }\r\n        if(ans.size() > 3) break;\r\n    }\r\n    \r\n    if(n > 1 && ans.size() == 2)\r\n    {\r\n        ans.push_back(n);\r\n        n /= n;\r\n    }\r\n\r\n    if(ans.size() == 3 && n == 1)\r\n    {\r\n        cout << \"YES\" << endl;\r\n        for(auto it : ans)\r\n            cout << it << \" \";\r\n    }\r\n\r\n    return 0;\r\n}",
    "suggested_categories": [
        "number theory",
        "algorithm",
        "mathematics",
        "vector manipulation",
        "code quality",
        "conditional statements",
        "looping",
        "input/output handling",
        "code readability",
        "efficient algorithm",
        "optimization",
        "divisibility",
        "prime factorization",
        "vector container",
        "complexity analysis",
        "debugging",
        "error handling",
        "data manipulation",
        "basic programming",
        "small programs"
    ]
}