{
    "id": 191826568,
    "contestId": 1294,
    "creationTimeSeconds": 1675424817,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1294,
        "index": "C",
        "name": "Product of Three Numbers",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1294,
        "members": [
            {
                "handle": "mukesh_v12"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1579703700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 16281600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define loop(i, n) for (ll i = 0; i < n; i++)\r\n#define forn(i, n) for (ll i = 1; i < n; i++)\r\n#define forne(i, n) for (ll i = 1; i <= n; i++)\r\n#define revn(i, n) for (ll i = n - 1; i >= 0; i--)\r\n#define sortl(v) sort(v.begin(), v.end())\r\n#define reversal(v) reverse(v.begin(), v.end())\r\n#define countset(n) __builtin_popcountll(n)\r\n#define maxelement(v) *max_element(v.begin(), v.end())\r\n#define minelement(v) *min_element(v.begin(), v.end())\r\n#define ff first\r\n#define ss second\r\n#define pb push_back\r\n#define pll pair<ll, ll>\r\n#define pii pair<int, int>\r\n#define vl vector<ll>\r\n#define vpl vector<pll>\r\n#define vpi vector<pii>\r\n#define vvl vector<vl>\r\n#define vb vector<bool>\r\n#define vs vector<string>\r\n#define py cout << \"YES\";\r\n#define pm cout << \"-1\";\r\n#define pn cout << \"NO\";\r\n#define nl cout << \"\\n\";\r\n#define mpl map<ll, ll>\r\n#define umpl unordered_map<ll, ll>\r\n#define f(map) for (auto it : map)\r\n#define read(n) \\\r\n    ll n;       \\\r\n    cin >> n;\r\nconst int inf = 1e9 + 7;\r\nconst int maxn = 1e6;\r\nconst int M = 1e9 + 7;\r\nvector<ll> fact(maxn);\r\nvector<ll> inversion(maxn);\r\nvector<bool> seive(maxn, true);\r\nvoid sieveness()\r\n{\r\n    seive[0] = seive[1] = false;\r\n\r\n    for (ll i = 2; i * i <= maxn; i++)\r\n    {\r\n        if (seive[i] == true)\r\n            for (ll j = i * i; j <= maxn; j += i)\r\n            {\r\n                seive[j] = false;\r\n            }\r\n    }\r\n}\r\nbool isprime(long long n)\r\n{\r\n    // check whether a number is prime or not\r\n    for (long long i = 2; i * i <= n; i++)\r\n        if (n % i == 0)\r\n            return false;\r\n    return true;\r\n}\r\nlong long binpow(long long a, long long b, long long m)\r\n{\r\n    a %= m;\r\n    long long res = 1;\r\n    while (b > 0)\r\n    {\r\n        if (b & 1)\r\n            res = res * a % m;\r\n        a = a * a % m;\r\n        b >>= 1;\r\n    }\r\n    return res;\r\n}\r\nvoid initialization()\r\n{\r\n    fact[0] = 1;\r\n    fact[1] = 1;\r\n    for (ll i = 2; i <= maxn; i++)\r\n    {\r\n        fact[i] = (fact[i - 1] * i) % M;\r\n    }\r\n    inversion[maxn] = binpow(fact[maxn], M - 2, M) % M;\r\n    for (ll i = maxn; i > 0; i--)\r\n    {\r\n        inversion[i - 1] = (inversion[i] * i) % M;\r\n    }\r\n}\r\nll C(ll n, ll k)\r\n{\r\n    ll res = (((fact[n] * inversion[k]) % M) * inversion[n - k]) % M;\r\n    return res;\r\n}\r\nvector<ll> factorization(ll n)\r\n{\r\n    vector<ll> res;\r\n    for (ll i = 2; i * i <= n; i++)\r\n    {\r\n        if ((n % i) == 0)\r\n        {\r\n            ll a = n / i;\r\n            if (i == a)\r\n            {\r\n                res.push_back(i);\r\n            }\r\n            else\r\n            {\r\n                res.push_back(i);\r\n                res.push_back(n / i);\r\n            }\r\n        }\r\n    }\r\n    return res;\r\n}\r\nll andOperator(ll l, ll r)\r\n{\r\n    ll rtn = 0;\r\n    for (ll i = 0; i <= 63; i++)\r\n    {\r\n        if (!(l & (1ll << i)))\r\n            continue;\r\n        if (!(r & (1ll << i)))\r\n            continue;\r\n        if ((l >> i) != (r >> i))\r\n            continue;\r\n        rtn += (1ll << i);\r\n    }\r\n    return rtn;\r\n}\r\n\r\nsigned main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL), cout.tie(NULL);\r\n    ll test = 1;\r\n    cin >> test;\r\n\r\n    while (test--)\r\n    {\r\n        ll i, j, a, b, c, d, f, cnt, ans, res, print;\r\n        read(n);\r\n        vector<ll> v = factorization(n);\r\n        sortl(v);\r\n\r\n        f = 0;\r\n\r\n        for (ll i = 0; i < v.size(); i++)\r\n        {\r\n            for (ll j = i + 1; j < v.size(); j++)\r\n            {\r\n                ll x = v[i] * v[j];\r\n                ll x1 = n / x;\r\n                if (binary_search(v.begin(), v.end(), x1))\r\n                {\r\n\r\n                    a = v[i];\r\n                    b = v[j];\r\n                    c = n / (v[i] * v[j]);\r\n                    if (c != a && c != b)\r\n                    {\r\n                        f = 1;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (f)\r\n                break;\r\n        }\r\n        if (f)\r\n        {\r\n            py;\r\n            nl;\r\n            cout << a << \" \" << b << \" \" << c << endl;\r\n        }\r\n        else\r\n        {\r\n            pn;\r\n            nl;\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}