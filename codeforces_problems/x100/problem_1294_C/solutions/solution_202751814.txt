{
    "id": 202751814,
    "contestId": 1294,
    "creationTimeSeconds": 1681936295,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1294,
        "index": "C",
        "name": "Product of Three Numbers",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1294,
        "members": [
            {
                "handle": "guptarupanshu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1579703700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 3174400,
    "source": "#include<bits/stdc++.h>\r\n#define int long long \r\n#define ll long long\r\n#define ar array\r\n#define ld long double\r\n#define sza(x) ((int)x.size())\r\n#define all(a) (a).begin(), (a).end()\r\nint mod  = 1000000007 ;\r\nconst int MAX_N = 1e5 + 5;\r\nconst ll INF = 1e9;\r\nconst ld EPS = 1e-9;\r\nusing namespace std;\r\n\r\nint mul(int a, int b){\r\n    return((a%mod)*(b%mod))%mod;\r\n} \r\nint bis(int a,int b){\r\n    if(b==0)return 1; \r\n    int temp=bis(a,b/2); \r\n    temp = mul(temp,temp); \r\n    if(b%2)return mul(temp,a);\r\n    return temp;\r\n} \r\n\r\nint mi(int a,int m=mod){\r\n    return bis(a,m-2);\r\n} \r\nconst int q=2e5 +1 ; \r\nint fact[q],divfact[q]; \r\nvoid factfn(){\r\n    fact[0]=divfact[0]=1; \r\n    for(int i=1; i<q; i++){\r\n        fact[i]=mul(fact[i-1],i); \r\n        divfact[i]=mul(divfact[i-1],mi(i));\r\n    }\r\n} \r\n// bitset<30>mp;\r\n// ll findSum(ll x, ll y, ll n, ll m, vector<vector<ll>> &a){\r\n//     ll sum=a[x][y];\r\n//     ll j=y-1;\r\n//     for(ll i=x-1; i>=0 && j>=0; i--){\r\n//         sum += a[i][j];\r\n//         j--;\r\n//     }\r\n//     j=y+1;\r\n//     for(ll i=x-1; i>=0 && j<m; i--){\r\n//         sum += a[i][j];\r\n//         j++;\r\n//     }\r\n//     ll k=x;\r\n//     j=y+1;\r\n//     for(ll i=x+1; i<n && j<m; i++){\r\n//         sum += a[i][j];\r\n//         j++;\r\n//     }\r\n//     j=y-1;\r\n//     for(ll i=x+1; i<n && j>=0; i++){\r\n//         sum += a[i][j];\r\n//         j--;\r\n//     }\r\n//     return sum;\r\n// }\r\n// void print_2_pow_n(int n) {\r\n//     int i, j, blen = n / 32 + 1, dlen = n / 29 + 1;\r\n//     uint32_t bin[blen], dec[dlen];\r\n//     uint64_t num;\r\n \r\n//     for (i = 0; i < blen; i++)\r\n//         bin[i] = 0;\r\n//     bin[n / 32] = (uint32_t)1 << (n % 32);\r\n \r\n//     for (j = 0; blen > 0; ) {\r\n//         for (num = 0, i = blen; i-- > 0;) {\r\n//             num = (num << 32) | bin[i];\r\n//             bin[i] = num / 1000000000;\r\n//             num = num % 1000000000;\r\n//         }\r\n//         dec[j++] = (uint32_t)num;\r\n//         while (blen > 0 && bin[blen - 1] == 0)\r\n//             blen--;\r\n//     }\r\n//     printf(\"%u\", dec[--j]);\r\n//     while (j-- > 0)\r\n//         printf(\"%09u\", dec[j]);\r\n//     printf(\"\\n\");\r\n// }\r\n// ll gcd(ll a, ll b)\r\n// {\r\n//     ll result = min(a, b);\r\n//     while (result > 0) {\r\n//         if (a % result == 0 && b % result == 0) {\r\n//             break;\r\n            \r\n//         }\r\n//         result--;\r\n//     }\r\n//     return result; \r\n// }\r\n// bool check(vector<int> a, int sum, int x){\r\n//     int n = a.size();\r\n//     int currsum=0;\r\n//     int k = x;\r\n//     // for(int i=0; i<n; i++){\r\n//     //     cout<<a[i]<<\" \";\r\n//     // }\r\n//     // cout<<endl;\r\n//     for(int i=0; i<n; i++){\r\n//         if(k>0){\r\n//             currsum += a[i];\r\n//             // cout<<currsum<<endl;\r\n//             k--;\r\n//         }\r\n//         else{\r\n//             // cout<<currsum<<endl;\r\n//             if(currsum>sum)return 0;\r\n//             k=x;\r\n//             currsum=a[i];\r\n//         }\r\n//     }\r\n//     // cout<<currsum<<\" \"; \r\n//     if(currsum>sum)return 0;\r\n//     return 1;\r\n// }\r\nstring makeAtoZtoA(string &temp){\r\n    for(ll i=0; i<temp.size(); i++){\r\n        ll x = temp[i]-65;\r\n        temp[i] = 90-x;\r\n    }\r\n    return temp;\r\n}\r\nbool isPalindrome(string s){\r\n    string temp = s;\r\n    reverse(temp.begin(),temp.end());\r\n    return s==temp;\r\n}\r\nbool checksorted(vector<int>& nums) {\r\n        bool res=false;\r\n        for(int i=0;i<nums.size();i++){\r\n            if(nums[i]>nums[(i+1)%nums.size()]){\r\n                if(res==true)return false;\r\n                res=true;\r\n            }\r\n        }\r\n        return true;\r\n}\r\nbool isPrime(int n){\r\n    if (n <= 1)return 0;\r\n    if (n == 2 || n == 3)return 1;\r\n    if (n % 2 == 0 || n % 3 == 0)return 0;\r\n    for (int i = 5; i <= sqrt(n); i = i + 6){\r\n        if (n % i == 0 || n % (i + 2) == 0)return 0;\r\n    }\r\n \r\n    return 1;\r\n}\r\ntemplate <int mod> struct ModInt\r\n{\r\n    int x;\r\n \r\n    ModInt() : x(0)\r\n    {\r\n    }\r\n \r\n    ModInt(int64_t y) : x(y >= 0 ? y % mod : (mod - (-y) % mod) % mod)\r\n    {\r\n    }\r\n \r\n    ModInt &operator+=(const ModInt &p)\r\n    {\r\n        if ((x += p.x) >= mod)\r\n            x -= mod;\r\n        return *this;\r\n    }\r\n \r\n    ModInt &operator-=(const ModInt &p)\r\n    {\r\n        if ((x += mod - p.x) >= mod)\r\n            x -= mod;\r\n        return *this;\r\n    }\r\n \r\n    ModInt &operator*=(const ModInt &p)\r\n    {\r\n        x = (int)(1LL * x * p.x % mod);\r\n        return *this;\r\n    }\r\n \r\n    ModInt &operator/=(const ModInt &p)\r\n    {\r\n        *this *= p.inverse();\r\n        return *this;\r\n    }\r\n \r\n    ModInt operator-() const\r\n    {\r\n        return ModInt(-x);\r\n    }\r\n \r\n    ModInt operator+(const ModInt &p) const\r\n    {\r\n        return ModInt(*this) += p;\r\n    }\r\n \r\n    ModInt operator-(const ModInt &p) const\r\n    {\r\n        return ModInt(*this) -= p;\r\n    }\r\n \r\n    ModInt operator*(const ModInt &p) const\r\n    {\r\n        return ModInt(*this) *= p;\r\n    }\r\n \r\n    ModInt operator/(const ModInt &p) const\r\n    {\r\n        return ModInt(*this) /= p;\r\n    }\r\n \r\n    bool operator==(const ModInt &p) const\r\n    {\r\n        return x == p.x;\r\n    }\r\n \r\n    bool operator!=(const ModInt &p) const\r\n    {\r\n        return x != p.x;\r\n    }\r\n \r\n    ModInt inverse() const\r\n    {\r\n        int a = x, b = mod, u = 1, v = 0, t;\r\n        while (b > 0)\r\n        {\r\n            t = a / b;\r\n            swap(a -= t * b, b);\r\n            swap(u -= t * v, v);\r\n        }\r\n        return ModInt(u);\r\n    }\r\n \r\n    ModInt pow(int64_t n) const\r\n    {\r\n        ModInt ret(1), mul(x);\r\n        while (n > 0)\r\n        {\r\n            if (n & 1)\r\n                ret *= mul;\r\n            mul *= mul;\r\n            n >>= 1;\r\n        }\r\n        return ret;\r\n    }\r\n \r\n    friend ostream &operator<<(ostream &os, const ModInt &p)\r\n    {\r\n        return os << p.x;\r\n    }\r\n \r\n    friend istream &operator>>(istream &is, ModInt &a)\r\n    {\r\n        int64_t t;\r\n        is >> t;\r\n        a = ModInt<mod>(t);\r\n        return (is);\r\n    }\r\n \r\n    int get() const\r\n    {\r\n        return x;\r\n    }\r\n \r\n    static constexpr int get_mod()\r\n    {\r\n        return mod;\r\n    }\r\n};\r\n// used as ModInt<1000000007> a1;\r\nll lengthOfSmallestSubsequence(ll K, vector<ll> v)\r\n{\r\n    // Initialize priority queue\r\n    priority_queue<ll> pq;\r\n \r\n    // Loop to insert all elements into\r\n    // the priority queue\r\n    for (int i = 0; i < v.size(); i++) {\r\n        pq.push(v[i]);\r\n    }\r\n    ll sum = 0, count = 0;\r\n \r\n    // Loop to find the smallest\r\n    // subsequence such that sum of elements\r\n    // is greater than equal to given number K\r\n    while (!pq.empty() && sum < K) {\r\n        sum += pq.top();\r\n        pq.pop();\r\n        count++;\r\n    }\r\n    // If sum is less than K\r\n    // then return -1 else return count.\r\n    if (sum < K) {\r\n        return -1;\r\n    }\r\n    return count;\r\n}\r\nint32_t main(){\r\n    ios_base::sync_with_stdio(false); cin.tie(NULL);\r\n    ll t;\r\n    cin>>t;\r\n    while(t--){\r\n        int n,sum=0,cnt=0,k,x,y,d;\r\n        bool flag1=1,flag=0;\r\n        int temp=0;\r\n        string s;\r\n        // int n;\r\n        cin>>n;\r\n        if(isPrime(n))cout<<\"NO\"<<endl;\r\n        else{\r\n            for(int i=2; i<sqrt(n); i++){\r\n                if(n%i==0){\r\n                    if(isPrime(n/i))cout<<\"NO\"<<endl;\r\n                    else{\r\n                        flag=1;\r\n                        for(int j=2; j<sqrt(n/i); j++){\r\n                            if(i!=j && (n/i)%j==0){\r\n                                cout<<\"YES\"<<endl;\r\n                                cout<<i<<\" \"<<j<<\" \"<<(n/i)/j<<endl;\r\n                                flag=0;\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if(flag)cout<<\"NO\"<<endl;\r\n        }\r\n        \r\n    }\r\n    return 0;\r\n}\r\n// 765443\r\n// 10\r\n// 544\r\n// 6666\r\n// 613579\r\n// 987531\r\n// 98765443210123456789\r\n// 773737\r\n// 210000000\r\n// 70589590\r\n// 8281271277321\r\n// YES\r\n// NO\r\n// NO\r\n// YES\r\n// NO\r\n// NO\r\n// NO\r\n// YES\r\n// YES\r\n// NO\r\n// YES\r\n// NO\r\n"
}