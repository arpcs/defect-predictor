{
    "id": 230840456,
    "contestId": 1294,
    "creationTimeSeconds": 1698848606,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1294,
        "index": "C",
        "name": "Product of Three Numbers",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1294,
        "members": [
            {
                "handle": "HASAN_49"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1579703700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 307200,
    "source": "//BISMILLAH\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define test int t; for(cin >> t; t; t--)\r\n#define fi(i, a, n) for(int i = a; i < n; i++)\r\n#define fd(i, a, n) for(int i = n-1; i >= a; i--)\r\n#define ll long long\r\n#define ld long double\r\n\r\n#define vi vector<ll>\r\n#define si set<ll>\r\n#define pb push_back\r\n#define all(a) a.begin(), a.end()\r\n#define allr(a) a.rbegin(), a.rend()\r\n#define out(x) cout << x << endl\r\n#define outs(x) cout << x << \" \"\r\n\r\n#define in(n) ll n; cin >> n\r\n#define inp(a,n) vector<ll> a(n); for(auto &x : a) cin >> x;\r\n\r\n#define yes cout << \"YES\\n\"\r\n#define no cout << \"NO\\n\"\r\n#define nline cout << \"\\n\"\r\n\r\n#define pi 3.14159265358979323846\r\n#define MOD 1000000007\r\n\r\nint gcd(int a, int b) {\r\n    while(b > 0) {\r\n        int temp = b;\r\n        b = a%b;\r\n        a = temp;\r\n    }\r\n    return a;\r\n}\r\nint lcm(int a, int b, int g) {\r\n    return (a/g)*b;\r\n}\r\n\r\nbool isPrime(ll n)\r\n{\r\n    if(n == 0 || n == 1) return false;\r\n    if(n == 2 || n == 3) return true;\r\n    if(n % 2 == 0 || n % 3 == 0) return false;\r\n    long long int i = 5;\r\n    for( ; i * i <= n; i += 6) {\r\n        if(n % i == 0 || n % (i + 2) == 0) return false;\r\n    } \r\n    return true;\r\n}\r\n\r\nstring intToStr(int num)\r\n{\r\n    //sending a number as a stream into output string\r\n    ostringstream str1; // header <sstream> : int --> string\r\n    str1 << num;\r\n\r\n    // str() conv, cnt = 0erts number into string 111638B, 121641C\r\n    return str1.str();\r\n}\r\n\r\nbool primec[100001];\r\nll NUM = 100000;\r\nvector<int> prime;\r\nvoid sieve() {\r\n    primec[0] = primec[1] = 1;\r\n    for(ll i = 4; i <= NUM; i += 2) {\r\n        primec[i] = 1;\r\n    }\r\n    for(ll i = 3; i * i <= NUM; i += 2) {\r\n        if(!primec[i]) {\r\n            for(ll j = i * i; j <= NUM; j += i) primec[j] = 1;\r\n        }\r\n    }\r\n    for(ll i = 2; i <= NUM; i++) {\r\n        if(!primec[i]) prime.push_back(i);\r\n    }\r\n}\r\n\r\nvoid segmentedSieve(ll l, ll r) {\r\n    if(l == 1) l++;\r\n    ll sz = r - l + 1;\r\n    bool check[sz] = {0};\r\n    for(auto p : prime) {\r\n        if(p * p > r) break;\r\n        ll g = (l/p)*p;\r\n        if(g < l) g += p;\r\n        if(g == p) g += p;\r\n        for(ll i = g; i <= r; i += p) check[i-l] = 1;\r\n    }\r\n    // outs(sz);\r\n    for(int i = 0; i < sz; i++) {\r\n        if(!check[i]) out(i+l);\r\n    }\r\n}\r\n\r\nint power(int base, int n) {\r\n    int result = 1;\r\n    while(n) {\r\n        if(n%2 == 1) {\r\n            result *= base;\r\n            // result %= 10;\r\n            n -= 1;\r\n        }\r\n        else {\r\n            base *= base;\r\n            // base %= 10;\r\n            n /= 2;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n#define DIM 50\r\nll A[DIM][DIM], I[DIM][DIM];\r\n\r\nvoid mul(ll A[][DIM], ll B[][DIM], int n) {\r\n    ll result[n][n];\r\n    for(int i = 0; i < n; i++) {\r\n        for(int j = 0; j < n; j++) {\r\n            result[i][j] = 0;\r\n            for(int k = 0; k < n; k++) {\r\n                ll x = (A[i][k] * B[k][j]) % MOD;\r\n                result[i][j] = (result[i][j] + x) % MOD;\r\n            }\r\n        }\r\n    }\r\n    for(int i = 0; i < n; i++) {\r\n        for(int j = 0; j < n; j++) A[i][j] = result[i][j]; \r\n    }\r\n}\r\n\r\nvoid powerMatrix(ll A[][DIM], int n, ll pwr) {\r\n    for(int i = 0; i < n; i++) {\r\n        for(int j = 0; j < n; j++) {\r\n            if(i == j) I[i][j] = 1;\r\n            else I[i][j] = 0;\r\n        }\r\n    }\r\n    while(pwr) {\r\n        if(pwr%2) {\r\n            mul(I, A, n);\r\n            pwr--;\r\n        }\r\n        else {\r\n            mul(A, A, n);\r\n            pwr /= 2;\r\n        }\r\n    }\r\n    for(int i = 0; i < n; i++) {\r\n        for(int j = 0; j < n; j++) A[i][j] = I[i][j];\r\n    }\r\n}\r\n\r\nvoid solve(int tt)\r\n{\r\n    ll n;\r\n    cin >> n;\r\n    vector<ll> v;\r\n    ll sz = prime.size(), j = 0, nn = n;\r\n    while(prime[j] <= n) {\r\n        while(n%prime[j] == 0) {\r\n            v.push_back(prime[j]);\r\n            n /= prime[j];\r\n        }\r\n        j++;\r\n    }\r\n    if(n > 1) v.push_back(n);\r\n    ll aa, bb = 1, cc = 1;\r\n    aa = v[0];\r\n    j = 1;\r\n    sz = v.size();\r\n    for(j = 1; j < sz && aa >= bb; j++) {\r\n        bb *= v[j];\r\n    }\r\n    cc = nn / (aa * bb);\r\n    if(bb == 1 || cc == 1 || aa == bb || aa == cc || bb == cc) no;\r\n    else {\r\n        yes;\r\n        cout << aa << \" \" << bb << \" \" << cc << endl;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n\r\n    #ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n    #endif\r\n\r\n    sieve();\r\n    int k = 1;\r\n    test solve(k++);\r\n    // solve(k);\r\n    return 0;\r\n}\r\n"
}