{
    "id": 186823094,
    "contestId": 1294,
    "creationTimeSeconds": 1672101462,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1294,
        "index": "C",
        "name": "Product of Three Numbers",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1294,
        "members": [
            {
                "handle": "luizademelo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1579703700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define INF 1000000000\r\n#define MOD 1000000007 \r\ntypedef long long ll;\r\n\r\nusing namespace std;\r\n\r\nlong long fast_power(long long base, long long power) {\r\n    long long result = 1;\r\n    while(power > 0) {\r\n\r\n        if(power % 2 == 1) { // Can also use (power & 1) to make code even faster\r\n            result = (result*base) % MOD;\r\n        }\r\n        base = (base * base) % MOD;\r\n        power = power / 2; // Can also use power >>= 1; to make code even faster\r\n    }\r\n    return result;\r\n}\r\n\r\n\r\nbool isPrime(long long n)\r\n{\r\n    if(n <= 1) return false; \r\n    if(n == 2 || n == 3) return true; \r\n    if(n%2 == 0 || n%3 == 0) return false; \r\n    for(ll i = 5; i <= sqrt(n); i=i+6)\r\n        if(n%i == 0 || n%(i+2) == 0) return false; \r\n    return true; \r\n}\r\n\r\n\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n\r\n    int t; cin >> t; \r\n    while(t--)\r\n    {\r\n        ll n; cin >> n; \r\n        vector<int> factors; \r\n        bool found = false; \r\n        for(int i = 2; i <= sqrt(n) && (!found); i++)\r\n            if(n%i == 0) \r\n            {\r\n                factors.push_back(i);\r\n                int d = n / i;  \r\n                for(int j = i+1; j < sqrt(d); j++)\r\n                {\r\n                    if(d%j == 0)\r\n                    {\r\n                        cout << \"YES\\n\"; \r\n                        int k  = d / j; \r\n                        cout << i << \" \" << j << \" \" << k << endl; \r\n                        found  =true; \r\n                        break; \r\n                    }\r\n                }\r\n            }\r\n        if(!found) cout << \"NO\\n\"; \r\n    }\r\n\r\n    return 0;\r\n}"
}