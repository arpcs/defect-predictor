{
    "id": 70444191,
    "contestId": 1282,
    "creationTimeSeconds": 1581000337,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1282,
        "index": "A",
        "name": "Temporarily unavailable",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 900,
        "tags": [
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1282,
        "members": [
            {
                "handle": "Dimon2305"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1577198100
    },
    "programmingLanguage": "Rust",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "use std::io;\r\nuse std::cmp;\r\n\r\nfn input_int() -> i32 {\r\n  let mut input1 = String::new();\r\n  io::stdin().read_line(&mut input1).unwrap();\r\n  let q: i32 = input1.trim().parse().unwrap();\r\n  return q;\r\n}\r\n\r\nfn input_ints() -> Vec<i32> {\r\n  let mut input1 = String::new();  \r\n  \r\n  io::stdin().read_line(&mut input1).unwrap();\r\n  let numbers: Vec<i32> = input1.split_whitespace().map(|s| s.parse().unwrap()).collect();\r\n  return numbers;\r\n}\r\n\r\n\r\n\r\nfn main() {\r\n  let mut q : i32 = input_int(); \r\n\r\n  while q > 0{\r\n    let input : Vec<i32> = input_ints();\r\n    let a = input[0];\r\n    let b = input[1];\r\n    let c = input[2];\r\n    let r = input[3];\r\n\r\n    let min_ab = cmp::min(a, b);\r\n    let max_ab = cmp::max(a, b);\r\n    let left = c - r;\r\n    let right = c + r;\r\n    let st = cmp::max(left, min_ab);\r\n    let ed = cmp::min(right, max_ab);\r\n\r\n    println!(\"{}\", max_ab - min_ab - cmp::max(0, ed - st));\r\n    q -= 1;\r\n  }\r\n\r\n  //println!(\"{}\", a[1]);\r\n}"
}