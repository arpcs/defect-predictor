{
    "id": 231693913,
    "contestId": 1819,
    "creationTimeSeconds": 1699348312,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "Vistarin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#include\"LOCAL.h\" //\r\nusing namespace std;\r\n\r\n#define endl '\\n'\r\ntypedef long long ll;\r\ntypedef pair<int, int> pr;\r\n\r\nint a[2 * 114514], b[2 * 114514];\r\n\r\nvoid solve()\r\n{\r\n\tint n;\r\n\tcin >> n;\r\n\r\n\tll tot = 0;\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tcin >> a[i] >> b[i];\r\n\t\ttot += a[i] * b[i];\r\n\t}\r\n\r\n\tauto check = [&](int x, int y) {\r\n\t\tset<pr, greater<>> st1, st2;\r\n\t\tfor (int i = 1; i <= n; i++) {\r\n\t\t\tst1.insert({ a[i], b[i] });\r\n\t\t\tst2.insert({ b[i], a[i] });\r\n\t\t}\r\n\r\n\t\twhile (!st1.empty()) {\r\n\t\t\tauto [x1, y1] = *st1.begin();\r\n\t\t\tauto [y2, x2] = *st2.begin();\r\n\r\n\t\t\tif (x == x1) {\r\n\t\t\t\ty -= y1;\r\n\t\t\t\tst1.erase({ x1, y1 });\r\n\t\t\t\tst2.erase({ y1, x1 });\r\n\t\t\t}\r\n\t\t\telse if (y == y2) {\r\n\t\t\t\tx -= x2;\r\n\t\t\t\tst1.erase({ x2, y2 });\r\n\t\t\t\tst2.erase({ y2, x2 });\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\treturn 1;\r\n\t};\r\n\r\n\tint mx1 = *max_element(a + 1, a + n + 1);\r\n\tint mx2 = *max_element(b + 1, b + n + 1);\r\n\tset<pr> ans;\r\n\r\n\tif (check(mx1, tot / mx1)) {\r\n\t\tans.insert({ mx1, tot / mx1 });\r\n\t}\r\n\tif (check(tot / mx2, mx2)) {\r\n\t\tans.insert({ tot / mx2, mx2 });\r\n\t}\r\n\r\n\tcout << ans.size() << endl;\r\n\tfor (auto& [x, y] : ans) {\r\n\t\tcout << x << ' ' << y << endl;\r\n\t}\r\n}\r\n\r\nsigned main()\r\n{\r\n\tios::sync_with_stdio(0);\r\n\tcin.tie(0); cout.tie(0);\r\n\r\n\tint t;\r\n\tcin >> t;\r\n\r\n\twhile (t--)\r\n\t\tsolve();\r\n}"
}