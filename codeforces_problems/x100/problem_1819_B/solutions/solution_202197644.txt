{
    "id": 202197644,
    "contestId": 1819,
    "creationTimeSeconds": 1681551910,
    "relativeTimeSeconds": 2410,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "stkwill"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 26,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 18,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 9728000,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define templ template <typename Type1, typename Type2>\r\ntempl inline Type1 &Mid(Type1 &x, Type2 y) { return x < y ? x : x = y; }\r\ntempl inline Type1 &Mad(Type1 &x, Type2 y) { return x > y ? x : x = y; }\r\n#undef templ\r\n\r\n#define templ template <typename Type>\r\ntempl inline Type Min(Type x, Type y) { return x < y ? x : y; }\r\ntempl inline Type Max(Type x, Type y) { return x > y ? x : y; }\r\n#undef templ\r\n\r\n#define templ template <typename Type1, typename Type2, typename... Args>\r\ntempl inline Type1 &Mid(Type1 &x, Type2 y, Args... args) { return Mid(Mid(x, y), args...); }\r\ntempl inline Type1 &Mad(Type1 &x, Type2 y, Args... args) { return Mad(Mad(x, y), args...); }\r\n#undef templ\r\n\r\n#define templ template <typename Type, typename... Args>\r\ntempl inline Type Min(Type x, Type y, Args... args) { return Min(Min(x, y), args...); }\r\ntempl inline Type Max(Type x, Type y, Args... args) { return Max(Max(x, y), args...); }\r\n#undef templ\r\n\r\nusing int64 = long long;\r\n\r\nvoid Main() {\r\n    int n;\r\n    std::cin >> n;\r\n    std::vector<int> ax(n), ay(n), de(n);\r\n    int64 S = 0;\r\n    int64 Ma = 0, Mb = 0;\r\n    for (int i = 0, x, y; i < n; ++i) {\r\n        std::cin >> x >> y;\r\n        S += int64(x) * y, Mad(Ma, x), Mad(Mb, y);\r\n        ax[i] = x, ay[i] = y;\r\n    }\r\n    std::vector<std::pair<int64, int64> > Ans;\r\n    if (S % Ma == 0) {\r\n        std::priority_queue<std::pair<int, int> > A, B;\r\n        for (int i = 0; i < n; ++i) A.emplace(ax[i], i), B.emplace(ay[i], i);\r\n        int64 La = A.top().first, Lb = S / La, X = La, Y = Lb;\r\n        auto Ne = [&](std::priority_queue<std::pair<int, int> > &Q) { while (Q.size() && de[Q.top().second]) Q.pop(); };\r\n        int m = n;\r\n        while (m) {\r\n            int LastM = m;\r\n            while (Ne(A), A.size() && A.top().first == La) { int c = A.top().second; de[c] = true, --m, Lb -= ay[c]; }\r\n            while (Ne(B), B.size() && B.top().first == Lb) { int c = B.top().second; de[c] = true, --m, La -= ax[c]; }\r\n            if (LastM == m) break;\r\n        }\r\n        if (!m) Ans.emplace_back(X, Y);\r\n        de = std::vector<int>(n);\r\n    }\r\n    if (S % Mb == 0 && n != 1) {\r\n        std::priority_queue<std::pair<int, int> > A, B;\r\n        for (int i = 0; i < n; ++i) A.emplace(ax[i], i), B.emplace(ay[i], i);\r\n        int64 Lb = B.top().first, La = S / Lb, X = La, Y = Lb;\r\n        auto Ne = [&](std::priority_queue<std::pair<int, int> > &Q) { while (Q.size() && de[Q.top().second]) Q.pop(); };\r\n        int m = n;\r\n        while (m) {\r\n            int LastM = m;\r\n            while (Ne(A), A.size() && A.top().first == La) { int c = A.top().second; de[c] = true, --m, Lb -= ay[c]; }\r\n            while (Ne(B), B.size() && B.top().first == Lb) { int c = B.top().second; de[c] = true, --m, La -= ax[c]; }\r\n            if (LastM == m) break;\r\n        }\r\n        if (!m) Ans.emplace_back(X, Y);\r\n    }\r\n    std::cout << Ans.size() << '\\n';\r\n    for (auto [x, y] : Ans) std::cout << x << ' ' << y << '\\n';\r\n}\r\n\r\nint main() {\r\n    std::ios::sync_with_stdio(false);\r\n    std::cin.tie(nullptr), std::cout.tie(nullptr);\r\n    int T;\r\n    std::cin >> T;\r\n    while (T--) Main();\r\n    return 0;\r\n}"
}