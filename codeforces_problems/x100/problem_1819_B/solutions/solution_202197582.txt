{
    "id": 202197582,
    "contestId": 1819,
    "creationTimeSeconds": 1681551901,
    "relativeTimeSeconds": 2401,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "die"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 23,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 2457600,
    "source": "#include <algorithm>\r\n#include <cassert>\r\n#include <iostream>\r\n#include <map>\r\n#include <set>\r\n#include <time.h>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nconst int maxn = 2e5 + 1;\r\n\r\nint h[maxn], w[maxn], q[maxn];\r\n\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n    int64_t s = 0;\r\n    int mh = 0, mw = 0;\r\n    set<pair<int, int>> stw, sth;\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> h[i] >> w[i];\r\n        mh = max(mh, h[i]);\r\n        mw = max(mw, w[i]);\r\n        stw.insert({-w[i], i});\r\n        sth.insert({-h[i], i});\r\n        s += h[i] * 1ll * w[i];\r\n    }\r\n    vector<pair<int64_t, int64_t>> v;\r\n    if (s % mh == 0) {\r\n        int64_t ch = mh, cw = s / mh;\r\n        bool f = 1;\r\n        while (!stw.empty()) {\r\n            if (-stw.begin()->first > cw) {\r\n                f = 0;\r\n                break;\r\n            }\r\n            if (-sth.begin()->first > ch) {\r\n                f = 0;\r\n                break;\r\n            }\r\n            if (-stw.begin()->first == cw) {\r\n                int id = stw.begin()->second;\r\n                stw.erase({-w[id], id});\r\n                sth.erase({-h[id], id});\r\n                ch -= h[id];\r\n            } else if (-sth.begin()->first == ch) {\r\n                int id = sth.begin()->second;\r\n                stw.erase({-w[id], id});\r\n                sth.erase({-h[id], id});\r\n                cw -= w[id];\r\n            } else {\r\n                f = 0;\r\n                break;\r\n            }\r\n        }\r\n        if (f) {\r\n            v.push_back({mh, s / mh});\r\n        }\r\n    }\r\n    if (s % mw == 0 && s != mw * 1ll * mw) {\r\n        int64_t ch = s / mw, cw = mw;\r\n        bool f = 1;\r\n        while (!stw.empty()) {\r\n            if (-stw.begin()->first > cw) {\r\n                f = 0;\r\n                break;\r\n            }\r\n            if (-sth.begin()->first > ch) {\r\n                f = 0;\r\n                break;\r\n            }\r\n            if (-stw.begin()->first == cw) {\r\n                int id = stw.begin()->second;\r\n                stw.erase({-w[id], id});\r\n                sth.erase({-h[id], id});\r\n                ch -= h[id];\r\n            } else if (-sth.begin()->first == ch) {\r\n                int id = sth.begin()->second;\r\n                stw.erase({-w[id], id});\r\n                sth.erase({-h[id], id});\r\n                cw -= w[id];\r\n            } else {\r\n                f = 0;\r\n                break;\r\n            }\r\n        }\r\n        if (f) {\r\n            v.push_back({s / mw, mw});\r\n        }\r\n    }\r\n    cout << v.size() << '\\n';\r\n    for (auto [x, y] : v) {\r\n        cout << x << ' ' << y << '\\n';\r\n    }\r\n}\r\n\r\nsigned main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0); cout.tie(0);\r\n    int t;\r\n    cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}