{
    "id": 202266342,
    "contestId": 1819,
    "creationTimeSeconds": 1681575255,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "2018LZY"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 19,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 3379200,
    "source": "#include <bits/stdc++.h>\r\n#define fi first\r\n#define se second\r\n#define gc getchar() //(p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<20,stdin),p1==p2)?EOF:*p1++)\r\n#define mk make_pair\r\n#define pll pair<ll, ll>\r\n#define V vector\r\n#define TP template <class o>\r\n#define rep(i, a, b) for (int i = a, i##ed_ = b; i <= i##ed_; i++)\r\n#define FOR(i, n) rep(i, 1, n)\r\nusing namespace std;\r\ntypedef long long ll;\r\n\r\n// char buf[1 << 20],*p1=buf,*p2=buf;\r\nTP void qr(o& x) {\r\n    char c = gc; x = 0; int f = 1;\r\n    while (!isdigit(c)) { if (c == '-') f = -1; c = gc;}\r\n    while (isdigit(c)) x = x * 10 + c - '0', c = gc;\r\n    x *= f;\r\n}\r\ntemplate <class o, class... O> void qr(o& x, O&... y) { qr(x), qr(y...); }\r\n\r\nconst int N = 2e5 + 10, inf = 2e9;\r\nconst ll INF = 1e15;\r\nint n, a[N], b[N], x[N], y[N]; bool v[N];\r\n\r\nvoid solve() {\r\n    qr(n); ll S = 0;\r\n    FOR(i, n) qr(a[i], b[i]), x[i] = y[i] = i, S += 1ll * a[i] * b[i];\r\n    sort(x + 1, x + n + 1, [&](int u, int v) {return a[u] < a[v];});\r\n    sort(y + 1, y + n + 1, [&](int u, int v) {return b[u] < b[v];});\r\n    set<pll> ans;\r\n    for(ll X:{(ll)a[x[n]], S / b[y[n]]}) {\r\n        ll Y = S / X;\r\n        if(X * Y != S) continue;\r\n        ll rx = X, ry = Y;\r\n        int px = n, py = n;\r\n        memset(v + 1, 0, sizeof(v[0]) * n);\r\n        int cnt = 0;\r\n        while(cnt < n) {\r\n            while(px && v[x[px]]) px--;\r\n            while(py && v[y[py]]) py--;\r\n            if(px && a[x[px]] == rx) {\r\n                ry -= b[x[px]];\r\n                cnt += v[x[px--]] = 1; \r\n                continue;\r\n            }\r\n            if(py && b[y[py]] == ry) {\r\n                rx -= a[y[py]];\r\n                cnt += v[y[py--]] = 1;\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n        if(cnt == n) ans.insert({X, Y});\r\n    }\r\n    printf(\"%u\\n\", ans.size());\r\n    for(auto [X, Y]: ans) \r\n        printf(\"%lld %lld\\n\", X, Y);\r\n}\r\n\r\nint main() {\r\n    int T = 1;\r\n    qr(T);\r\n    while (T--)\r\n        solve();\r\n    return 0;\r\n}"
}