{
    "id": 217421981,
    "contestId": 1819,
    "creationTimeSeconds": 1691308547,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "stOtue"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 23,
    "timeConsumedMillis": 748,
    "memoryConsumedBytes": 19660800,
    "source": "// LUOGU_RID: 119333120\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define PII pair<int, int> \r\n#define int long long\r\nconst int N = 2e5 + 5;\r\n\r\nint T, n, h[N], w[N], hmaxn, wmaxn, sz;\r\n\r\nint check(int r, int c) {\r\n\tmultiset<PII> phr, phc;\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tphr.insert({h[i], w[i]});\r\n\t\tphc.insert({w[i], h[i]});\r\n\t}\r\n\twhile (phr.size()) {\r\n\t\tauto x = *prev(phr.end());\r\n\t\tif (x.first == r) {\r\n\t\t\tif (c < x.second) return 0;\r\n\t\t\tc -= x.second;\r\n\t\t\tphr.erase(prev(phr.end()));\r\n\t\t\tphc.erase(phc.find({x.second, x.first})); \r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tx = *prev(phc.end());\r\n\t\tif (x.first == c) {\r\n\t\t\tif (r < x.second) return 0;\r\n\t\t\tr -= x.second;\r\n\t\t\tphc.erase(prev(phc.end()));\r\n\t\t\tphr.erase(phr.find({x.second, x.first}));\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\treturn 1;\r\n}\r\n\r\nsigned main() {\r\n\tcin >> T;\r\n\twhile (T--) {\r\n\t\thmaxn = wmaxn = sz = 0;\r\n\t\tcin >> n;\r\n\t\tfor (int i = 1; i <= n; i++) cin >> h[i] >> w[i];\r\n\t\tfor (int i = 1; i <= n; i++) {\r\n\t\t\thmaxn = max(hmaxn, h[i]);\r\n\t\t\twmaxn = max(wmaxn, w[i]);\r\n\t\t\tsz += h[i] * w[i];\r\n\t\t}\r\n\t\tset<PII> res;\r\n\t\tif (sz % hmaxn == 0) {\r\n\t\t\tif (check(hmaxn, sz / hmaxn)) res.insert({hmaxn, sz / hmaxn});\r\n\t\t}\r\n\t\t\r\n\t\tif (sz % wmaxn == 0) {\r\n\t\t\tif (check(sz / wmaxn, wmaxn)) res.insert({sz / wmaxn, wmaxn});//puts(\"wssss\");\r\n\t\t}\r\n\t\tcout << res.size() << endl;\r\n\t\tfor (auto i : res) {\r\n\t\t\tcout << i.first << ' ' << i.second << endl;\r\n\t\t}\r\n\t}\r\n}"
}