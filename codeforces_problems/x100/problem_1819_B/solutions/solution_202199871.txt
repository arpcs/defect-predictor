{
    "id": 202199871,
    "contestId": 1819,
    "creationTimeSeconds": 1681552191,
    "relativeTimeSeconds": 2691,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "Cherrt_AK_IOI"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 10,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 18,
    "timeConsumedMillis": 420,
    "memoryConsumedBytes": 22630400,
    "source": "#include <bits/stdc++.h>\r\n#define int long long\r\nusing namespace std;\r\nconst int N=2e5+5;\r\n\r\nint read(){\r\n\tint s=0,w=1;char ch=getchar();\r\n\twhile (ch<'0'||ch>'9') {if(ch=='-')w=-w;ch=getchar();}\r\n\twhile (ch>='0'&&ch<='9') {s=(s<<1)+(s<<3)+(ch^'0');ch=getchar();}\r\n\treturn s*w;\r\n}\r\nint n,ans,S,mxx,mxy;\r\nstruct node{\r\n\tint x,y;\r\n\tvoid init(){x=read(),y=read(),mxx=max(mxx,x),mxy=max(mxy,y),S+=x*y;}\r\n}a[N]; vector<node> res;\r\nstruct nodex{\r\n\tint id;\r\n\tbool operator < (const nodex &A) const{return (a[id].x^a[A.id].x)?(a[id].x>a[A.id].x):(id<A.id);}\r\n};\r\nstruct nodey{\r\n\tint id;\r\n\tbool operator < (const nodey &A) const{return (a[id].y^a[A.id].y)?(a[id].y>a[A.id].y):(id<A.id);}\r\n};\r\nvoid work(int X,int Y){\r\n\tint svX=X,svY=Y; set<nodex> sx; set<nodey> sy;\r\n\tfor (int i=1;i<=n;i++)  sx.insert(nodex{i}),sy.insert(nodey{i});\r\n\twhile (!sx.empty()){\r\n\t\tint id=(sx.begin()->id);\r\n\t\tif (!X||!Y)  return;\r\n\t\tif (a[id].x==X){\r\n\t\t\tif (a[id].y<=Y)  Y-=a[id].y,sx.erase(sx.begin()),sy.erase(sy.find(nodey{id}));\r\n\t\t\telse return;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tid=(sy.begin()->id);\r\n\t\t\tif (a[id].y==Y){\r\n\t\t\t\tif (a[id].x<=X)  X-=a[id].x,sx.erase(sx.find(nodex{id})),sy.erase(sy.begin());\r\n\t\t\t\telse return;\r\n\t\t\t}\r\n\t\t\telse return;\r\n\t\t}\r\n\t}\r\n\tres.emplace_back(node{svX,svY});\r\n}\r\nvoid solve(){\r\n\tn=read(),S=mxx=mxy=0,res.clear();\r\n\tfor (int i=1;i<=n;i++)  a[i].init();\r\n\tif (S%mxx==0)  work(mxx,S/mxx);\r\n\tif (mxx*mxy!=S&&S%mxy==0)  work(S/mxy,mxy);\r\n\tprintf(\"%lld\\n\",(int)res.size());\r\n\tfor (auto t:res)  printf(\"%lld %lld\\n\",t.x,t.y);\r\n}\r\nsigned main(){\r\n\tint T=read();\r\n\twhile (T--)  solve();\r\n\treturn 0;\r\n}"
}