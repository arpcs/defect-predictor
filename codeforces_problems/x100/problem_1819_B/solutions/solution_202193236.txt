{
    "id": 202193236,
    "contestId": 1819,
    "creationTimeSeconds": 1681551357,
    "relativeTimeSeconds": 1857,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "Beelzebub_blue"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 21,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 18,
    "timeConsumedMillis": 436,
    "memoryConsumedBytes": 33484800,
    "source": "#include <iostream>\r\n#include <string>\r\n#include <cmath>\r\n#include <vector>\r\n#include <iomanip>\r\n#include <map>\r\n#include <algorithm>\r\n#include <set>\r\n#include <queue>\r\n#include <climits>\r\n#include <cstdlib>\r\n#include <chrono>\r\n\r\nusing namespace std;\r\n\r\n#define fast_io ios_base::sync_with_stdio(NULL); cin.tie(0);\r\n#define ll long long int\r\n#define ld long double\r\n\r\nvoid ext_gcd(ll a, ll b, ll &x, ll &y){\r\n\tif(b==0){\r\n\t\tx = 1;\r\n\t\ty = 0;\r\n\t\treturn;\r\n\t} \r\n\telse{\r\n\t\text_gcd(b, a%b, x, y);\r\n\t\tll tem = x;\r\n\t\tx = y;\r\n\t\ty = tem-(a/b)*y;\r\n\t}\r\n\treturn;\r\n}\r\n\r\nll modinv(ll a, ll m){\r\n\tll x = 0, y = 0;\r\n\text_gcd(a, m, x, y);\r\n\treturn (x + m)%m;\r\n}\r\n\r\nvoid f(){\r\n\tll n; \r\n\tcin >> n;\r\n\tvector<pair<ll, ll>> v;\r\n\tll area = 0;\r\n\tll ma = 0;\r\n\tll mb = 0;\r\n\tfor(ll i=0; i<n; i++){\r\n\t\tll a, b;\r\n\t\tcin >> a >> b;\r\n\t\tv.push_back({a, b});\r\n\t\tarea += (a*b);\r\n\t\tma = max(a, ma);\r\n\t\tmb = max(b, mb);\r\n\t}\r\n\tif(area%ma!=0){\r\n\t\tcout << 1 << \"\\n\" << area/mb << \" \" << mb << \"\\n\";\r\n\t\treturn;\r\n\t}\r\n\tif(area%mb!=0){\r\n\t\tcout << 1 << \"\\n\" << ma << \" \" << area/ma << \"\\n\";\r\n\t\treturn;\r\n\t}\r\n\tif((ma*mb)==area){\r\n\t\tcout << 1 << \"\\n\" << ma << \" \" << area/ma << \"\\n\";\r\n\t\treturn;\r\n\t}\r\n\tmap<ll, multiset<ll>> mp1;\r\n\tmap<ll, multiset<ll>> mp2;\r\n\tfor(ll i=0; i<n; i++){\r\n\t\tmp1[v[i].first].insert(v[i].second);\r\n\t\tmp2[v[i].second].insert(v[i].first);\r\n\t}\r\n\tvector<pair<ll, ll>> ans;\r\n\tll mxa = ma;\r\n\tll mxb = area/ma;\r\n\tll flag = 1;\r\n\twhile(1){\r\n\t\tif(mxa==0){\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tif(mxb==0){\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tif(mp1.find(mxa)!=mp1.end()){\r\n\t\t\tmultiset<ll> ms = mp1[mxa];\r\n\t\t\tmp1.erase(mxa);\r\n\t\t\tfor(auto j: ms){\r\n\t\t\t\tmxb -= j;\r\n\t\t\t\tmp2[j].erase(mp2[j].find(mxa));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(mp2.find(mxb)!=mp2.end()){\r\n\t\t\tmultiset<ll> ms = mp2[mxb];\r\n\t\t\tmp2.erase(mxb);\r\n\t\t\tfor(auto j: ms){\r\n\t\t\t\tmxa -= j;\r\n\t\t\t\tmp1[j].erase(mp1[j].find(mxb));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tflag = 0;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tif(flag==1){\r\n\t\tans.push_back({ma, area/ma});\r\n\t}\r\n\tmp1.clear();\r\n\tmp2.clear();\r\n\tfor(ll i=0; i<n; i++){\r\n\t\tmp1[v[i].first].insert(v[i].second);\r\n\t\tmp2[v[i].second].insert(v[i].first);\r\n\t}\r\n\tmxa = area/mb;\r\n\tmxb = mb;\r\n\tflag = 1;\r\n\twhile(1){\r\n\t\tif(mxa==0){\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tif(mxb==0){\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tif(mp1.find(mxa)!=mp1.end()){\r\n\t\t\tmultiset<ll> ms = mp1[mxa];\r\n\t\t\tmp1.erase(mxa);\r\n\t\t\tfor(auto j: ms){\r\n\t\t\t\tmxb -= j;\r\n\t\t\t\tmp2[j].erase(mp2[j].find(mxa));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(mp2.find(mxb)!=mp2.end()){\r\n\t\t\tmultiset<ll> ms = mp2[mxb];\r\n\t\t\tmp2.erase(mxb);\r\n\t\t\tfor(auto j: ms){\r\n\t\t\t\tmxa -= j;\r\n\t\t\t\tmp1[j].erase(mp1[j].find(mxb));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tflag = 0;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tif(flag==1){\r\n\t\tans.push_back({area/mb, mb});\r\n\t}\r\n\tcout << ans.size() << \"\\n\";\r\n\tfor(auto j: ans){\r\n\t\tcout << j.first << \" \" << j.second << \"\\n\";\r\n\t}\r\n\treturn;\r\n}\r\n\r\nint main(){\r\n\tfast_io;\r\n\t#if defined(Beelzebub)\r\n\t\tauto t1 = chrono::high_resolution_clock::now();\r\n\t\tfreopen(\"input.txt\", \"r\", stdin);\r\n\t\tfreopen(\"output.txt\", \"w\", stdout);\r\n\t#endif\r\n\r\n\tll t = 1;\r\n\tcin >> t;\r\n\twhile (t--){\r\n\t\tf();\r\n\t}\r\n\r\n\t#if defined(Beelzebub)\r\n\t\tauto t2 = chrono::high_resolution_clock::now();\r\n\t\tld ti = chrono::duration_cast<chrono::nanoseconds>(t2-t1).count();\r\n\t\tti*= 1e-6;\r\n\t\tcerr << \"Time: \" << setprecision(12) << ti;\r\n\t\tcerr << \"ms\\n\";\r\n\t#endif\r\n\r\n\treturn 0;\r\n}"
}