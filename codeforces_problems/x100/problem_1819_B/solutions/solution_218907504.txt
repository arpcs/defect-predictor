{
    "id": 218907504,
    "contestId": 1819,
    "creationTimeSeconds": 1692093936,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "kyukarumaicode55"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 23,
    "timeConsumedMillis": 343,
    "memoryConsumedBytes": 54681600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define fr(i,n) for (ll i = 0; i < n;i++)\r\n#define ll long long\r\n#define mod 1000000007\r\nvoid solve()\r\n{\r\n        ll n;\r\n        cin>>n;\r\n        set<pair<ll,ll>, greater<pair<ll,ll>>> ht1;\r\n        set<pair<ll,ll>, greater<pair<ll,ll>>> wd1;\r\n        ll tot_area = 0;\r\n        vector<pair<ll,ll>> v(n);\r\n        fr(i,n){\r\n            ll  a,b;\r\n            cin>>a>>b;\r\n            ht1.insert({a,i});\r\n            wd1.insert({b,i});\r\n            v[i]= {a,b};\r\n            tot_area+= a*b;\r\n        }\r\n        vector<bool> tk1(n,0);\r\n        vector<bool> tk2(n,0); \r\n        set<pair<ll,ll>, greater<pair<ll,ll>>> ht2 = ht1;\r\n        set<pair<ll,ll>, greater<pair<ll,ll>>> wd2 = wd1;\r\n        ll h1 = ht1.begin()->first;\r\n        ll w1 =0;\r\n        while(ht1.begin()!= ht1.end() && ht1.begin()->first==h1){\r\n            ll ind = ht1.begin()->second;\r\n            pair<ll,ll> h= {v[ind].first,ind};\r\n            pair<ll,ll> w= {v[ind].second,ind};\r\n            ht1.erase(h);\r\n            wd1.erase(w);\r\n            w1+= w.first;\r\n        }\r\n        ll curw = 0;\r\n        ll curh = h1;\r\n        if(wd1.begin()!= wd1.end()){\r\n            w1+= wd1.begin()->first;\r\n            curw = wd1.begin()->first;\r\n        }\r\n        // cout<<h1<<\" \"<<w1<<\" \"<<curw<<endl;\r\n        ll dir =1;\r\n        bool mk = true;\r\n        while(curh>0 && curw>0 ){\r\n            bool fnd = true;\r\n            if(dir ==1){\r\n                ll tot =0;\r\n                while((wd1.begin() != wd1.end() && wd1.begin()->first == curw)){\r\n                    ll ind = wd1.begin()->second;\r\n                    pair<ll,ll> h= {v[ind].first,ind};\r\n                    pair<ll,ll> w= {v[ind].second,ind};\r\n                    ht1.erase(h);\r\n                    wd1.erase(w);\r\n                    tot += h.first;\r\n                }\r\n                if(tot ==0 || tot > curh){\r\n                    fnd = false;\r\n                    break;\r\n                }\r\n                curh -= tot;\r\n            }\r\n            else{\r\n                ll tot =0;\r\n                while((ht1.begin() != ht1.end() && ht1.begin()->first == curh)){\r\n                    ll ind = ht1.begin()->second;\r\n                    pair<ll,ll> h= {v[ind].first,ind};\r\n                    pair<ll,ll> w= {v[ind].second,ind};\r\n                    ht1.erase(h);\r\n                    wd1.erase(w);\r\n                    tot += w.first;\r\n                }\r\n                if(tot ==0 || tot > curw){\r\n                    fnd = false;\r\n                    break;\r\n                }\r\n                curw -= tot;                \r\n            }\r\n            dir = 1-dir;\r\n            if(fnd == false) break;\r\n        }\r\n        vector<pair<ll,ll>> ans;\r\n        if((curw==0 || curh == 0) && tot_area== h1*w1){\r\n            ans.push_back({h1,w1});\r\n        } \r\n\r\n    // code for wd\r\n\r\n        ll w2 = wd2.begin()->first;\r\n        ll h2 =0;\r\n        while(wd2.begin()!= wd2.end() && wd2.begin()->first==w2){\r\n            ll ind = wd2.begin()->second;\r\n            pair<ll,ll> h= {v[ind].first,ind};\r\n            pair<ll,ll> w= {v[ind].second,ind};\r\n            wd2.erase(w);\r\n            ht2.erase(h);\r\n            h2+= h.first;\r\n        }\r\n        curw = w2;\r\n        curh = 0;\r\n        if(ht2.begin()!= ht2.end()){\r\n            h2+= ht2.begin()->first;\r\n            curh = ht2.begin()->first;\r\n        }\r\n        // cout<<h2<<\" \"<<w2<<\" \"<<curw<<endl;\r\n        dir =1;\r\n        while(curh>0 && curw>0 ){\r\n            bool fnd = true;\r\n            if(dir ==1){\r\n                ll tot =0;\r\n                while((ht2.begin() != ht2.end() && ht2.begin()->first == curh)){\r\n                    ll ind = ht2.begin()->second;\r\n                    pair<ll,ll> h= {v[ind].first,ind};\r\n                    pair<ll,ll> w= {v[ind].second,ind};\r\n                    ht2.erase(h);\r\n                    wd2.erase(w);\r\n                    tot += w.first;\r\n                }\r\n                if(tot ==0 || tot > curw){\r\n                    fnd = false;\r\n                    break;\r\n                }\r\n                curw -= tot;\r\n            }\r\n            else{\r\n                ll tot =0;\r\n                while((wd2.begin() != wd2.end() && wd2.begin()->first == curw)){\r\n                    ll ind = wd2.begin()->second;\r\n                    pair<ll,ll> h= {v[ind].first,ind};\r\n                    pair<ll,ll> w= {v[ind].second,ind};\r\n                    ht2.erase(h);\r\n                    wd2.erase(w);\r\n                    tot += h.first;\r\n                }\r\n                if(tot ==0 || tot > curh){\r\n                    fnd = false;\r\n                    break;\r\n                }\r\n                curh -= tot;                \r\n            }\r\n            dir = 1-dir;\r\n            if(fnd == false) break;\r\n        }\r\n        if((curw==0 || curh == 0) && tot_area== h2*w2){\r\n            ans.push_back({h2,w2});\r\n        } \r\n\r\n\r\n\r\n\r\n\r\n        if(ans.size()==2 && ans[0].first == ans[1].first && ans[0].second==ans[1].second){\r\n            cout<<1<<endl;\r\n            cout<<ans[0].first<<\" \"<<ans[0].second<<endl;\r\n            return;\r\n        }\r\n\r\n        cout<<ans.size()<<endl;\r\n        for(auto u: ans){\r\n            cout<<u.first<<\" \"<<u.second<<endl;\r\n        }\r\n\r\n\r\n\r\n}\r\nint main() {\r\n    ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n\r\n    ll test=1;\r\n    cin>>test;\r\n    while(test--)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n"
}