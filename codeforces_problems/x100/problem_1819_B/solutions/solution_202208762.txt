{
    "id": 202208762,
    "contestId": 1819,
    "creationTimeSeconds": 1681553437,
    "relativeTimeSeconds": 3937,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "dkhve"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 11,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define fi first\r\n#define se second\r\n#define pb push_back\r\n#define mp make_pair\r\n#define ll long long\r\n#define naf string\r\n#define int ll\r\nusing namespace std;\r\nconst int N = 1000000;\r\nconst ll MOD = 998244353;\r\n//ll fac[N + 1], invfac[N + 1]; void prefacs(); ll C(int n, int m);\r\nnaf solve(int nt) {\r\n\tint n;\r\n\tcin>>n;\r\n\tint a[n],b[n];\r\n\tmultiset <pair<int,int> > sa,sb;\r\n\tll s=0;\r\n\tfor (int i=0;i<n;i++){\r\n        cin>>a[i]>>b[i];\r\n        s+=(a[i]+0ll)*b[i];\r\n        sa.insert(mp(a[i],b[i]));\r\n        sb.insert(mp(b[i],a[i]));\r\n\t}\r\n\tvector <pair<int,int> > ans;\r\n    {\r\n        auto it = sa.end();\r\n        it--;\r\n        int x=(*it).first,y=s/x-(*it).second;\r\n        int xx=x;\r\n        sb.erase(mp((*it).second,(*it).first));\r\n        sa.erase(it);if (s%xx==0)\r\n        while (sa.size() > 0) {\r\n                auto it = sa.lower_bound(mp(x,0));\r\n                if (it != sa.end() && (*it).first==x){\r\n                    y-=(*it).second;\r\n                    sb.erase(mp((*it).second,(*it).first));\r\n                    sa.erase(it);\r\n                } else {\r\n                    auto it = sb.lower_bound(mp(y, 0));\r\n                    if (it != sb.end() && (*it).first == y){\r\n                        x-=(*it).second;\r\n                        sa.erase(mp((*it).second,(*it).first));\r\n                        sb.erase(it);\r\n                    } else\r\n                        break;\r\n                }\r\n        }\r\n        if (s%xx==0 && sa.size() == 0 && (x>=0&&y>=0)){\r\n            ans.pb(mp(xx,s/xx));\r\n        }\r\n    }\r\n    sa.clear();sb.clear();\r\n    for (int i=0;i<n;i++){\r\n        //cin>>a[i]>>b[i];\r\n        //s+=(a[i]+0ll)*b[i];\r\n        sb.insert(mp(a[i],b[i]));\r\n        sa.insert(mp(b[i],a[i]));\r\n\t}\r\n\t{\r\n        auto it = sa.end();\r\n        it--;\r\n        int x=(*it).first,y=s/x-(*it).second;\r\n        int xx=x;\r\n        //cout<<xx<< \" a \"<<y<<endl;\r\n        sb.erase(mp((*it).second,(*it).first));\r\n        sa.erase(it);if (s%xx==0)\r\n        while (sa.size() > 0) {\r\n                auto it = sa.lower_bound(mp(x,0));\r\n                if (it != sa.end() && (*it).first==x){\r\n                    y-=(*it).second;\r\n                    sb.erase(mp((*it).second,(*it).first));\r\n                    sa.erase(it);\r\n                } else {\r\n                    auto it = sb.lower_bound(mp(y, 0));\r\n                    if (it != sb.end() && (*it).first == y){\r\n                        x-=(*it).second;\r\n                        sa.erase(mp((*it).second,(*it).first));\r\n                        sb.erase(it);\r\n                    } else\r\n                        break;\r\n                }\r\n        }\r\n        if (s%xx==0 && sa.size() == 0 && (x>=0&&y>=0)){\r\n            ans.pb(mp(s/xx,xx));\r\n            //cout << x << \" a \" << y << endl;\r\n        }\r\n    }\r\n    if (ans.size() == 1) {\r\n        cout << 1 << endl << ans[0].fi << \" \" << ans[0].se << endl;\r\n        return \"\";\r\n    }\r\n    if (ans[0].fi == ans[0].se) {\r\n        cout << 1 << endl << ans[0].fi << \" \" << ans[0].se << endl;\r\n        return \"\";\r\n    }\r\n    cout << 2 << endl << ans[0].fi << \" \" << ans[0].se << endl << ans[1].fi << \" \" << ans[1].se << endl;\r\n    return \"\";\r\n\r\n}\r\n\r\nmain() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    //srand(time(0));\r\n    //prefacs();\r\n    int T = 1;\r\n    cin >> T;\r\n    for (int i = 0; i < T; i++) {\r\n        naf ans = solve(i);\r\n        cout << ans << endl;\r\n    }\r\n    //return 0;\r\n}\r\n"
}