{
    "id": 202205438,
    "contestId": 1819,
    "creationTimeSeconds": 1681552912,
    "relativeTimeSeconds": 3412,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "Prince_Kassad"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 14,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 18,
    "timeConsumedMillis": 451,
    "memoryConsumedBytes": 56524800,
    "source": "/**\r\nIt falls to me to inform you that this one is in the bag\r\n**/\r\n\r\n#include <bits/stdc++.h>\r\n#include <stdexcept>\r\n#include <chrono>\r\n#include <random>\r\n#define ll long long\r\n#define ld long double\r\n#define pb push_back\r\n#define pii pair<int,int>\r\n#define pll pair<long long,long long>\r\n#define F first\r\n#define S second\r\n#define all(a) a.begin(),a.end()\r\n\r\nusing namespace std;\r\n\r\nconst ll Mod=998244353   ;\r\n\r\ntemplate <typename T>\r\nvoid Max(T& x,T y){\r\n    x=max(x,y);\r\n}\r\ntemplate <typename T>\r\nvoid Min(T& x,T y){\r\n    x=min(x,y);\r\n}\r\nvoid OK(bool yes){\r\n    cout<<(yes?\"YES\\n\":\"NO\\n\");\r\n}\r\n\r\nconst int N=300300,M=5050,NN=2000200;\r\n\r\n\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nll a[N],x[N],y[N];\r\npll pt[N];\r\nbool CMP(pll x,pll y){\r\n    return max(x.F,x.S)<max(y.F,y.S);\r\n}\r\n\r\nint main()\r\n{\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n\r\n    int T=1;\r\n    int Case=1;\r\n    cin>>T;\r\n    while(T--){\r\n        int n;\r\n        cin>>n;\r\n        ll Tot=0,X=0,Y=0;\r\n        map<int,multiset<int>> SumX,SumY;\r\n        for(int i=1;i<=n;i++){\r\n            cin>>x[i]>>y[i];\r\n            SumX[x[i]].insert(y[i]);\r\n            SumY[y[i]].insert(x[i]);\r\n            Tot+=x[i]*y[i];\r\n            Max(X,x[i]);\r\n            Max(Y,y[i]);\r\n        }\r\n        set<pll> Ans,Ans2;\r\n        for(int i=1;i<=n;i++){\r\n            if(x[i]==X&&Tot%X==0&&Tot/X>=Y){\r\n                Ans.insert({X,Tot/X});\r\n            }\r\n            if(y[i]==Y&&Tot%Y==0&&Tot/Y>=X){\r\n                Ans.insert({Tot/Y,Y});\r\n            }\r\n        }\r\n        for(auto p:Ans){\r\n            ll f=p.F,s=p.S;\r\n            int xx=0;\r\n//            cout<<f<<' '<<s<<'\\n';\r\n            map<int,multiset<int>> tmpX=SumX,tmpY=SumY;\r\n//            for(auto pp:tmpY[s])cout<<pp<<' ';\r\n//            cout<<'\\n';\r\n            while(s>0&&f>0&&xx<=n){\r\n//                cout<<f<<' '<<s<<'\\n';\r\n                if(tmpX[f].size()){\r\n//                    cout<<\"X\"<<'\\n';\r\n                    for(auto pp:tmpX[f]){\r\n                        s-=pp;\r\n                        tmpY[pp].erase(tmpY[pp].find(f));\r\n                    }\r\n                    tmpX.erase(f);\r\n                }\r\n                else{\r\n                    for(auto pp:tmpY[s]){\r\n                        f-=pp;\r\n                        tmpX[pp].erase(tmpX[pp].find(s));\r\n                    }\r\n                    tmpY.erase(s);\r\n                }\r\n                xx++;\r\n            }\r\n//            cout<<\"TMP : \\n\";\r\n//            for(auto p:tmpX)cout<<p.F<<' '<<p.S<<'\\n';\r\n//            cout<<'\\n';\r\n//            cout<<\"Sum : \\n\";\r\n//            for(auto p:SumX)cout<<p.F<<' '<<p.S<<'\\n';\r\n//            cout<<'\\n';\r\n//                cout<<f<<' '<<s<<'\\n';\r\n\r\n            if(s==0||f==0)Ans2.insert(p);\r\n        }\r\n        cout<<Ans2.size()<<'\\n';\r\n        for(auto p:Ans2)cout<<p.F<<' '<<p.S<<'\\n';\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n\r\n/**\r\n1\r\n5\r\n7 5\r\n5 5\r\n3 5\r\n5 2\r\n5 3\r\n*/\r\n\r\n/**\r\n*/\r\n"
}