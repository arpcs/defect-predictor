{
    "id": 202207937,
    "contestId": 1819,
    "creationTimeSeconds": 1681553255,
    "relativeTimeSeconds": 3755,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "Lawali"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 25,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 18,
    "timeConsumedMillis": 326,
    "memoryConsumedBytes": 117248000,
    "source": "#include <bits/stdc++.h>\r\n\r\n#ifdef NON_SUBMIT\r\n#define TEST(n) (n)\r\n#define tout cerr\r\n#else\r\n#define TEST(n) ((void)0)\r\n#define tout cin\r\n#endif\r\n\r\nusing namespace std;\r\n\r\nvector<pair<int,int>> A;\r\nmultiset<int> X[1000002], Y[1000002];\r\n\r\nint go(long long h, long long w)\r\n{\r\n\tint ret=0;\r\n\twhile(X[min(h,1000001LL)].size() || Y[min(w,1000001LL)].size()) {\r\n\t\tif(X[min(h,1000001LL)].size()) {\r\n\t\t\tint v=*X[h].rbegin();\r\n\t\t\tw-=v;\r\n\t\t\tX[h].erase(--X[h].end());\r\n\t\t\tY[v].erase(Y[v].find(h));\r\n\t\t\tret++;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tint v=*Y[w].rbegin();\r\n\t\t\th-=v;\r\n\t\t\tY[w].erase(--Y[w].end());\r\n\t\t\tX[v].erase(X[v].find(w));\r\n\t\t\tret++;\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nint main()\r\n{\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(NULL); cout.tie(NULL);\r\n\tTEST(freopen(\"input.txt\",\"r\",stdin));\r\n\tTEST(freopen(\"output.txt\",\"w\",stdout));\r\n\tTEST(freopen(\"debug.txt\",\"w\",stderr));\r\n\tint T, N;\r\n\tfor(cin>>T;T--;) {\r\n\t\tvector<pair<long long,long long>> ans;\r\n\t\tlong long S=0;\r\n\t\tint mh=0, mw=0;\r\n\t\tcin>>N; A.resize(N);\r\n\t\tfor(auto &[h,w]: A) cin>>h>>w;\r\n\t\tif(N==1) {\r\n\t\t\tcout<<\"1\\n\"<<A[0].first<<' '<<A[0].second<<'\\n';\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tfor(auto &[h,w]: A) {\r\n\t\t\tX[h].insert(w); Y[w].insert(h);\r\n\t\t\tmh=max(mh,h); mw=max(mw,w);\r\n\t\t\tS+=1LL*h*w;\r\n\t\t}\r\n\t\tif(S%mh==0 && go(mh,S/mh)==N) {\r\n\t\t\tans.emplace_back(mh,S/mh);\r\n\t\t\tfor(auto[h,w]: A) {\r\n\t\t\t\tX[h].clear(); Y[w].clear();\r\n\t\t\t}\r\n\t\t\tfor(auto[h,w]: A) {\r\n\t\t\t\tX[h].insert(w); Y[w].insert(h);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(S%mw==0 && go(S/mw,mw)==N) ans.emplace_back(S/mw,mw);\r\n\t\tcout<<ans.size()<<'\\n';\r\n\t\tfor(auto[a,b]: ans) cout<<a<<' '<<b<<'\\n';\r\n\t\tfor(auto[h,w]: A) {\r\n\t\t\tX[h].clear(); Y[w].clear();\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
}