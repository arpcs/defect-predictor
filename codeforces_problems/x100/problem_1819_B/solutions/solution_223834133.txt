{
    "id": 223834133,
    "contestId": 1819,
    "creationTimeSeconds": 1695039384,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "Zimo_666"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 23,
    "timeConsumedMillis": 499,
    "memoryConsumedBytes": 27340800,
    "source": "// LUOGU_RID: 125123248\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define int long long\n\nconst int N=1e6+7;\n\nint n;\n\nint c[N],k[N];\n\nbool check(int x,int y,bool flag){\n  map<pair<int,int>,int,greater<> > m1,m2;\n  for(int i=1;i<=n;i++){\n    m1[make_pair(c[i],k[i])]++;\n    m2[make_pair(k[i],c[i])]++;\n  }\n  for(int i=1;i<=n;flag^=1){\n    if(flag){\n      if(m1.begin()->first.first!=x) return false;\n      while(m1.begin()->first.first==x){\n        // printf(\"i:%d x:%d\\n\",i,x);\n        y-=m1.begin()->first.second,i++;\n        if(!--m2[make_pair(m1.begin()->first.second,x)]) m2.erase(make_pair(m1.begin()->first.second,x));\n        if(!--m1[make_pair(x,m1.begin()->first.second)]) m1.erase(make_pair(x,m1.begin()->first.second));\n        // printf(\"fuck on 1\\n\");\n      }\n    }\n    else{\n      if(m2.begin()->first.first!=y) return false;\n      while(m2.begin()->first.first==y){\n        x-=m2.begin()->first.second,i++;\n        if(!--m1[make_pair(m2.begin()->first.second,y)]) m1.erase(make_pair(m2.begin()->first.second,y));\n        if(!--m2[make_pair(y,m2.begin()->first.second)]) m2.erase(make_pair(y,m2.begin()->first.second));\n        // printf(\"fuck on 2\\n\");\n      }\n    }\n  }\n  return 1;\n}\n\nvoid solve(){\n  int maxc=-1,maxk=-1;\n  int res=0;\n  scanf(\"%lld\",&n);\n  for(int i=1;i<=n;i++){\n    scanf(\"%lld%lld\",&c[i],&k[i]);\n    res+=c[i]*k[i];\n    maxc=max(maxc,c[i]),maxk=max(maxk,k[i]);\n  }\n  if(n==1) return printf(\"1\\n%d %d\\n\",c[1],k[1]),void();\n  vector<pair<int,int> > ans;\n  if(!(res%maxc)&&check(maxc,res/maxc,1)) ans.push_back(make_pair(maxc,res/maxc));\n  if(!(res%maxk)&&((res/maxk)!=maxc)&&check(res/maxk,maxk,0)) ans.push_back(make_pair(res/maxk,maxk));\n  printf(\"%lu\\n\",ans.size());\n  for(auto [cc,kk]:ans){\n    printf(\"%lld %lld\\n\",cc,kk);\n  }\n}\n\nsigned main(){\n  int T;\n  cin>>T;\n  while(T--) solve();\n  return 0;\n}"
}