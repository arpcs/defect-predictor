{
    "id": 202300103,
    "contestId": 1819,
    "creationTimeSeconds": 1681593461,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "Ahmed_Abdelmegeed"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 16691200,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n\r\n#define fast ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n#define ll long long\r\n#define ld long double\r\n#define el \"\\n\"\r\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\r\n#define ordered_multiset tree<ll, null_type,less_equal<ll>, rb_tree_tag, tree_order_statistics_node_update>\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\nconst ll N = 1e6 + 10, INF = 1e18;\r\nconst ld pi = acos(-1);\r\nconst int mod = 1e9 + 7, LOG = 20;\r\nconst ld eps = 1e-4;\r\nint dx[] = {0, -1, 0, 1, -1, 1, -1, 1};\r\nint dy[] = { -1, 0, 1, 0, 1, -1, -1, 1};\r\nll n, m, k, x, y;\r\nll a[N], b[N];\r\n\r\nbool solve(ll l, ll w, multiset<pair<int, int>> &length, multiset<pair<int, int>> &width) {\r\n    if (l == 0 || w == 0) {\r\n        return 1;\r\n    }\r\n    ll x, y;\r\n    ll area = l * 1LL * w;\r\n    auto it1 = length.begin(), it2 = width.begin();\r\n    it1 = length.upper_bound({l, -1});\r\n    if (it1 != length.end()) {\r\n        it2 = width.lower_bound({it1->second, it1->first});\r\n        x = it1->first;\r\n        y = it2->first;\r\n        width.erase(it2);\r\n        length.erase(it1);\r\n        return solve(l, w - y, length, width);\r\n    }\r\n    it2 = width.upper_bound({w, -1});\r\n    if (it2 != width.end()) {\r\n        it1 = length.lower_bound({it2->second, it2->first});\r\n        x = it1->first;\r\n        y = it2->first;\r\n        width.erase(it2);\r\n        length.erase(it1);\r\n        return solve(l - x, w, length, width);\r\n    }\r\n    return 0;\r\n}\r\n\r\nvoid dowork() {\r\n    multiset<pair<int, int>> length, width;\r\n    cin >> n;\r\n    ll area = 0, x, y;\r\n    set<pair<ll, ll>> ans;\r\n    for (int i = 1; i <= n; i++) {\r\n        cin >> a[i] >> b[i];\r\n        x = a[i], y = b[i];\r\n        area += (x * y);\r\n        length.insert({x, y});\r\n        width.insert({y, x});\r\n    }\r\n    x = length.rbegin()->first;\r\n    if (area % x == 0 && solve(x, area / x, length, width)) {\r\n        ans.insert({x, area / x});\r\n    }\r\n    length.clear();\r\n    width.clear();\r\n    for (int i = 1; i <= n; i++) {\r\n        x = a[i], y = b[i];\r\n        length.insert({x, y});\r\n        width.insert({y, x});\r\n    }\r\n    y = width.rbegin()->first;\r\n    if (area % y == 0 && solve(area / y, y, length, width)) {\r\n        ans.insert({area / y, y});\r\n    }\r\n    cout << ans.size() << el;\r\n    for (auto j : ans) {\r\n        cout << j.first << \" \" << j.second << el;\r\n    }\r\n}\r\n\r\nsigned main() {\r\n    fast\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n    int t = 1;\r\n    cin >> t;\r\n    for (int i = 1; i <= t; i++) {\r\n        dowork();\r\n    }\r\n    return 0;\r\n}"
}