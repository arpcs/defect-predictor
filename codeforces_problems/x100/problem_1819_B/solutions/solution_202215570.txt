{
    "id": 202215570,
    "contestId": 1819,
    "creationTimeSeconds": 1681554447,
    "relativeTimeSeconds": 4947,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "aufannn"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 26,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "PRETESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 106905600,
    "source": "#include <bits/stdc++.h>\r\n#define int long long\r\n#define fi first\r\n#define se second\r\n#define all(x) (x).begin(), (x).end()\r\n\r\nusing namespace std;\r\n\r\nint32_t main()\r\n{\r\n        ios_base::sync_with_stdio(false);\r\n        cin.tie(NULL);\r\n        vector<set<pair<int, int>>> okh(1111111);\r\n        vector<set<pair<int, int>>> okw(1111111);\r\n        int t;\r\n        cin >> t;\r\n        while (t --> 0) {\r\n                int n;\r\n                cin >> n;\r\n                int area = 0;\r\n                vector<pair<int, int>> v(n+5);\r\n                int mxh = 0;\r\n                int mxw = 0;\r\n                for (int i = 1; i <= n; i++) {\r\n                        cin >> v[i].fi >> v[i].se;\r\n                        area += v[i].fi*v[i].se;\r\n                        okh[v[i].fi].insert({v[i].se, i});\r\n                        okw[v[i].se].insert({v[i].fi, i});\r\n                        mxh = max(mxh, v[i].fi);\r\n                        mxw = max(mxw, v[i].se);\r\n                }\r\n                vector<pair<int, int>> ans;\r\n                if (area%mxh == 0) {\r\n                        int h = mxh;\r\n                        int w = area/mxh;\r\n                        for (int i = 0; i < n - 1; i++) {\r\n                                bool ok = 0;\r\n                                if (!okh[h].empty()) {\r\n                                        auto it = okh[h].begin();\r\n                                        if (it->fi <= w) {\r\n                                                ok = 1;\r\n                                                w -= it->fi;\r\n                                                okw[it->fi].erase({h, it->se});\r\n                                                okh[h].erase(it);\r\n                                        }\r\n                                }\r\n                                if (!okw[w].empty() && !ok) {\r\n                                        auto it = okw[w].begin();\r\n                                        if (it->fi <= h) {\r\n                                                ok = 1;\r\n                                                h -= it->fi;\r\n                                                okh[it->fi].erase({w, it->se});\r\n                                                okw[w].erase(it);\r\n                                        }\r\n                                }\r\n                                if (!ok) {\r\n                                        goto Nxt;\r\n                                }\r\n                        }\r\n                        ans.push_back({mxh, area/mxh});\r\n                }\r\n                Nxt:;\r\n                for (int i = 1; i <= n; i++) {\r\n                        okh[v[i].fi].insert({v[i].se, i});\r\n                        okw[v[i].se].insert({v[i].fi, i});\r\n                }\r\n                if (area%mxw == 0) {\r\n                        int h = area/mxw;\r\n                        int w = mxw;\r\n                        for (int i = 0; i < n - 1; i++) {\r\n                                bool ok = 0;\r\n                                if (!okh[h].empty()) {\r\n                                        auto it = okh[h].begin();\r\n                                        if (it->fi <= w) {\r\n                                                ok = 1;\r\n                                                w -= it->fi;\r\n                                                okw[it->fi].erase({h, it->se});\r\n                                                okh[h].erase(it);\r\n                                        }\r\n                                }\r\n                                if (!okw[w].empty() && !ok) {\r\n                                        auto it = okw[w].begin();\r\n                                        if (it->fi <= h) {\r\n                                                ok = 1;\r\n                                                h -= it->fi;\r\n                                                okh[it->fi].erase({w, it->se});\r\n                                                okw[w].erase(it);\r\n                                        }\r\n                                }\r\n                                if (!ok) {\r\n                                        goto Next;\r\n                                }\r\n                        }\r\n                        ans.push_back({area/mxw, mxw});\r\n                }\r\n                Next:;\r\n                if (ans.size() == 2) {\r\n                        if (ans[0] == ans[1]) ans.pop_back();\r\n                }\r\n                cout << ans.size() << '\\n';\r\n                for (auto [a, b] : ans) {\r\n                        cout << a << \" \" << b << '\\n';\r\n                }\r\n                for (int i = 1; i <= n; i++) {\r\n                        if (okh[v[i].fi].count({v[i].se, i})) okh[v[i].fi].erase({v[i].se, i});\r\n                        if (okw[v[i].se].count({v[i].fi, i})) okw[v[i].se].erase({v[i].fi, i});\r\n                }\r\n        }\r\n        return 0;\r\n}"
}