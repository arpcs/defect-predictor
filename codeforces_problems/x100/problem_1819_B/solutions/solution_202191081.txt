{
    "id": 202191081,
    "contestId": 1819,
    "creationTimeSeconds": 1681551095,
    "relativeTimeSeconds": 1595,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "APJifengc2"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 1,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 18,
    "timeConsumedMillis": 561,
    "memoryConsumedBytes": 163737600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int MAXN = 1000005, P = 998244353;\r\nstruct Graph {\r\n    int fst[MAXN], to[MAXN << 1], nxt[MAXN << 1], tot;\r\n#define forGraph(u, v) for (int i = fst[u], v = to[i]; i; i = nxt[i], v = to[i])\r\n    void add(int u, int v) {\r\n        to[++tot] = v, nxt[tot] = fst[u], fst[u] = tot;\r\n    }\r\n    int fa[MAXN], dep[MAXN], siz[MAXN];\r\n    void dfs1(int u, int pre) {\r\n        fa[u] = pre, dep[u] = dep[pre] + 1, siz[u] = 1;\r\n        forGraph(u, v) if (v != pre) {\r\n            dfs1(v, u);\r\n            siz[u] += siz[v];\r\n        }\r\n    }\r\n} g;\r\nint qpow(int a, int b) {\r\n    int ans = 1;\r\n    while (b) {\r\n        if (b & 1) ans = 1ll * ans * a % P;\r\n        a = 1ll * a * a % P;\r\n        b >>= 1;\r\n    }\r\n    return ans;\r\n}\r\nint fac[MAXN], inv[MAXN];\r\nvoid init(int n) {\r\n    fac[0] = 1;\r\n    for (int i = 1; i <= n; i++) fac[i] = 1ll * fac[i - 1] * i % P;\r\n    inv[n] = qpow(fac[n], P - 2);\r\n    for (int i = n; i >= 1; i--) inv[i - 1] = 1ll * inv[i] * i % P;\r\n}\r\ntemplate<typename T>\r\nvoid add(T &a, T b) { a = (a + b) % P; }\r\ntemplate<typename T>\r\nvoid chkmin(T &a, T b) { a = min(a, b); }\r\ntemplate<typename T>\r\nvoid chkmax(T &a, T b) { a = max(a, b); }\r\nint T, n;\r\nint a[MAXN], b[MAXN];\r\nset<int> x[MAXN], y[MAXN];\r\nbool check(long long h, long long w) {\\\r\n    for (int i = 1; i <= n; i++) {\r\n        x[a[i]].clear();\r\n        y[b[i]].clear();\r\n    }\r\n    for (int i = 1; i <= n; i++) {\r\n        x[a[i]].insert(i);\r\n        y[b[i]].insert(i);\r\n    }\r\n    while (h && w) {\r\n        if (h <= 1000000 && x[h].size()) {\r\n            for (int i : x[h]) {\r\n                w -= b[i];\r\n                y[b[i]].erase(i);\r\n            }\r\n            x[h].clear();\r\n        } else if (w <= 1000000 && y[w].size()) {\r\n            for (int i : y[w]) {\r\n                h -= a[i];\r\n                x[a[i]].erase(i);\r\n            }\r\n            y[w].clear();\r\n        } else return false;\r\n    }\r\n    return true;\r\n}\r\nint main() {\r\n    scanf(\"%d\", &T);\r\n    while (T--) {\r\n        scanf(\"%d\", &n);\r\n        int mxa = 0, mxb = 0;\r\n        long long sum = 0;\r\n        for (int i = 1; i <= n; i++) {\r\n            scanf(\"%d%d\", &a[i], &b[i]);\r\n            sum += 1ll * a[i] * b[i];\r\n            mxa = max(mxa, a[i]);\r\n            mxb = max(mxb, b[i]);\r\n        }\r\n        if (n == 1) {\r\n            printf(\"1\\n%d %d\\n\", a[1], b[1]);\r\n        } else {\r\n            vector<pair<long long, long long>> ans;\r\n            if (sum % mxa == 0) {\r\n                if (check(mxa, sum / mxa)) {\r\n                    ans.push_back({mxa, sum / mxa});\r\n                }\r\n            }\r\n            if (sum % mxb == 0) {\r\n                if (check(sum / mxb, mxb)) {\r\n                    ans.push_back({sum / mxb, mxb});\r\n                }\r\n            }\r\n            printf(\"%lu\\n\", ans.size());\r\n            for (auto p : ans) {\r\n                printf(\"%lld %lld\\n\", p.first, p.second);\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}"
}