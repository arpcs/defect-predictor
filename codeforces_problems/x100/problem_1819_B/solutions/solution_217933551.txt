{
    "id": 217933551,
    "contestId": 1819,
    "creationTimeSeconds": 1691533484,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "Rising-coder"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 23,
    "timeConsumedMillis": 452,
    "memoryConsumedBytes": 103628800,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\n#define pb push_back\r\n#define F first\r\n#define S second\r\n#define yes cout << \"YES\\n\"\r\n#define no cout << \"NO\\n\"\r\n#define answer cout << ans1 << \"\\n\"\r\n#define db long double\r\nusing namespace std;\r\nll tt=1,n,m,a,b,c,w,ans2=1,ans1=0,h,sum=0,d,maxi=0,mini=0,mod2=998244353,mod=7+1e9,k,x,y,p;\r\nconst ll INF=1000000005,N=20+5e6,LOG=20;\r\nbool f=0;\r\nstring s,t;\r\n\r\nll power(ll aa,ll bb, ll mod){ll res=1;while(bb){if(bb%2)res=(res*aa)%mod;aa=(aa*aa)%mod;bb/=2;}  return res;}\r\n\r\nbool MASKisbit(int x, int y){return ((x & (1<<y)) ? 1 : 0);}\r\n\r\nll gcd(ll a,ll b){if(b==0)return a;return gcd(b, a % b);}\r\n\r\npair<ll,ll> arr[N];\r\nset<pair<ll,ll>> ans,st;\r\n\r\nmap<int,multiset<int>> mpF,mpS;\r\n\r\nbool tryo(ll a,ll b)\r\n{\r\n  for(int i=0;i<n-1;++i)\r\n  {\r\n    if(mpF[a].size())\r\n    {\r\n      auto it=mpF[a].begin();\r\n      b-=*it;\r\n      mpS[*it].erase(mpS[*it].find(a));\r\n      mpF[a].erase(it);\r\n    }\r\n    else if(mpS[b].size())\r\n    {\r\n      auto it=mpS[b].begin();\r\n      a-=*it;\r\n      mpF[*it].erase(mpF[*it].find(b));\r\n      mpS[b].erase(it);\r\n    }\r\n    else\r\n    {\r\n      return false;\r\n    }\r\n  }\r\n  if(mpF[a].size() && *mpF[a].begin()==b){return true;}\r\n  if(mpS[b].size() && *mpS[b].begin()==a){return true;}\r\n  return false;\r\n}\r\n\r\nvoid solve()\r\n{\r\n  cin >> n;ans.clear();sum=0;mpF.clear();mpS.clear();\r\n  for(int i=0;i<n;++i){cin >> arr[i].F >> arr[i].S; sum+=arr[i].F*arr[i].S; mpF[arr[i].F].insert(arr[i].S); mpS[arr[i].S].insert(arr[i].F);}\r\n  sort(arr,arr+n);\r\n  if(sum%arr[n-1].F==0)\r\n  {\r\n    a=arr[n-1].F;b=sum/arr[n-1].F;\r\n    if(tryo(a,b)){ans.insert({a,b});}\r\n  }\r\n  mpF.clear();mpS.clear();\r\n  for(int i=0;i<n;++i)\r\n  {\r\n    mpF[arr[i].F].insert(arr[i].S); mpS[arr[i].S].insert(arr[i].F);\r\n    swap(arr[i].F,arr[i].S);\r\n  }\r\n  sort(arr,arr+n);\r\n  if(sum%arr[n-1].F==0)\r\n  {\r\n    b=arr[n-1].F;a=sum/arr[n-1].F;\r\n    if(tryo(a,b)){ans.insert({a,b});}\r\n  }\r\n\r\n  cout << ans.size() << \"\\n\";\r\n  for(auto p : ans){cout << p.F << \" \" << p.S << \"\\n\";}\r\n}\r\n\r\n\r\nint main(){\r\n  ios_base::sync_with_stdio(NULL);cin.tie(0);cout.tie(0);\r\n  ///freopen(\"INPUT.TXT\",\"r\",stdin);\r\n  ///freopen(\"OUTPUT.TXT\",\"w\",stdout);\r\n  cin >> tt;\r\n  while(tt--)\r\n  {\r\n    solve();\r\n  }\r\n  return 0;\r\n}\r\n"
}