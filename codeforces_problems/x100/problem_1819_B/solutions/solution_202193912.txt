{
    "id": 202193912,
    "contestId": 1819,
    "creationTimeSeconds": 1681551435,
    "relativeTimeSeconds": 1935,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "MtSaka"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 11,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 18,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 16179200,
    "source": "#line 2 \"library/template/template.hpp\"\r\n#include<bits/stdc++.h>\r\n#line 3 \"library/template/macro.hpp\"\r\n\r\n#define SELECT4(a,b,c,d,e,...) e\r\n#define SELECT3(a,b,c,d,...) d\r\n#define REP1(a) for(ll i=0;i<(ll)(a);++i)\r\n#define REP2(i,a) for(ll i=0;i<(ll)(a);++i)\r\n#define REP3(i,a,b) for(ll i=(ll)(a);i<(ll)(b);++i)\r\n#define REP4(i,a,b,c) for(ll i=(ll)(a);i<(ll)(b);i+=(ll)(c))\r\n#define rep(...) SELECT4(__VA_ARGS__,REP4,REP3,REP2,REP1)(__VA_ARGS__)\r\n#define RREP1(a) for(ll i=(ll)(a)-1;i>=0;--i)\r\n#define RREP2(i,a) for(ll i=(ll)(a)-1;i>=0;--i)\r\n#define RREP3(i,a,b) for(ll i=(ll)(b)-1;i>=(ll)(a);--i)\r\n#define rrep(...) SELECT3(__VA_ARGS__,RREP3,RREP2,RREP1)(__VA_ARGS__)\r\n#define all(v) std::begin(v),std::end(v)\r\n#define rall(v) std::rbegin(v),std::rend(v)\r\n#define INT(...) int __VA_ARGS__;scan(__VA_ARGS__)\r\n#define LL(...) ll __VA_ARGS__;scan(__VA_ARGS__)\r\n#define STR(...) string __VA_ARGS__;scan(__VA_ARGS__)\r\n#define CHR(...) char __VA_ARGS__;scan(__VA_ARGS__)\r\n#define DBL(...) double __VA_ARGS__;scan(__VA_ARGS__)\r\n#define LD(...) ld __VA_ARGS__;scan(__VA_ARGS__)\r\n#define pb push_back\r\n#define eb emplace_back\r\n#line 3 \"library/template/alias.hpp\"\r\n\r\nusing ll=long long;\r\nusing ull=unsigned long long;\r\nusing ld=long double;\r\nusing pi=std::pair<int,int>;\r\nusing pl=std::pair<ll,ll>;\r\nusing vi=std::vector<int>;\r\nusing vl=std::vector<ll>;\r\nusing vs=std::vector<std::string>;\r\nusing vc=std::vector<char>;\r\nusing vvl=std::vector<vl>;\r\nusing vd=std::vector<double>;\r\nusing vp=std::vector<pl>;\r\nusing vb=std::vector<bool>;\r\ntemplate<typename T>\r\nstruct infinity{\r\n  static constexpr T max=std::numeric_limits<T>::max();\r\n  static constexpr T min=std::numeric_limits<T>::min();\r\n  static constexpr T value=std::numeric_limits<T>::max()/2;\r\n  static constexpr T mvalue=std::numeric_limits<T>::min()/2;\r\n};\r\ntemplate<typename T>constexpr T INF=infinity<T>::value;\r\nconstexpr ll inf=INF<ll>;\r\nconstexpr ld EPS=1e-8;\r\nconstexpr ld PI=3.1415926535897932384626;\r\nconstexpr int dx[8]={1,0,-1,0,1,-1,-1,1};\r\nconstexpr int dy[8]={0,1,0,-1,1,1,-1,-1};\r\n#line 5 \"library/template/func.hpp\"\r\n\r\ninline constexpr int msb(ull x){\r\n  int res=x?0:-1;\r\n  if(x&0xffffffff00000000)x&=0xffffffff00000000,res+=32;\r\n  if(x&0xffff0000ffff0000)x&=0xffff0000ffff0000,res+=16;\r\n  if(x&0xff00ff00ff00ff00)x&=0xff00ff00ff00ff00,res+=8;\r\n  if(x&0xf0f0f0f0f0f0f0f0)x&=0xf0f0f0f0f0f0f0f0,res+=4;\r\n  if(x&0xcccccccccccccccc)x&=0xcccccccccccccccc,res+=2;\r\n  return res+(x&0xaaaaaaaaaaaaaaaa?1:0);\r\n}\r\ninline constexpr int ceil_log2(ull x){return x?msb(x-1)+1:0;}\r\ninline constexpr ull reverse(ull x){\r\n  x=((x&0x5555555555555555)<<1)|((x&0xaaaaaaaaaaaaaaaa)>>1);\r\n  x=((x&0x3333333333333333)<<2)|((x&0xcccccccccccccccc)>>2);\r\n  x=((x&0x0f0f0f0f0f0f0f0f)<<4)|((x&0xf0f0f0f0f0f0f0f0)>>4);\r\n  x=((x&0x00ff00ff00ff00ff)<<8)|((x&0xff00ff00ff00ff00)>>8);\r\n  \r\n  x=((x&0x0000ffff0000ffff)<<16)|((x&0xffff0000ffff0000)>>16);\r\n  return (x<<32)|(x>>32);\r\n}\r\ninline constexpr ull reverse(ull x,int len){return reverse(x)>>(64-len);}\r\ninline constexpr int popcnt(ull x){\r\n#if __cplusplus>=202002L\r\n  return std::popcount(x);\r\n#endif\r\n  x=(x&0x5555555555555555)+((x>>1)&0x5555555555555555);\r\n  x=(x&0x3333333333333333)+((x>>2)&0x3333333333333333);\r\n  x=(x&0x0f0f0f0f0f0f0f0f)+((x>>4)&0x0f0f0f0f0f0f0f0f);\r\n  x=(x&0x00ff00ff00ff00ff)+((x>>8)&0x00ff00ff00ff00ff);\r\n  x=(x&0x0000ffff0000ffff)+((x>>16)&0x0000ffff0000ffff);\r\n  return (x&0x00000000ffffffff)+((x>>32)&0x00000000ffffffff);\r\n}\r\ntemplate<typename T,typename U>\r\ninline constexpr bool chmin(T&a,U b){return a>b&&(a=b,true);}\r\ntemplate<typename T,typename U>\r\ninline constexpr bool chmax(T&a,U b){return a<b&&(a=b,true);}\r\ninline constexpr ll gcd(ll a,ll b){\r\n  if(a<0)a=-a;\r\n  if(b<0)b=-b;\r\n  while(b){\r\n    const ll c=b;\r\n    b=a%b;\r\n    a=c;\r\n  }\r\n  return a;\r\n}\r\ninline constexpr ll lcm(ll a,ll b){return a/gcd(a,b)*b;}\r\ninline constexpr bool is_prime(ll n){\r\n  if(n<=1)return false;\r\n  for(ll i=2;i*i<=n;i++){\r\n    if(n%i==0)return false;\r\n  }\r\n  return true;\r\n}\r\ninline constexpr ll my_pow(ll a,ll b){\r\n  ll res=1;\r\n  while(b){\r\n    if(b&1)res*=a;\r\n    a*=a;\r\n    b>>=1;\r\n  }\r\n  return res;\r\n}\r\ninline constexpr ll mod_pow(ll a,ll b,const ll&mod){\r\n  if(mod==1)return 0;\r\n  a%=mod;\r\n  ll res=1;\r\n  while(b){\r\n    if(b&1)(res*=a)%=mod;\r\n    (a*=a)%=mod;\r\n    b>>=1;\r\n  }\r\n  return res;\r\n}\r\ninline ll mod_inv(ll a,const ll&mod){\r\n  ll b=mod,x=1,u=0,t;\r\n  while(b){\r\n    t=a/b;\r\n    std::swap(a-=t*b,b);\r\n    std::swap(x-=t*u,u);\r\n  }\r\n  if(x<0)x+=mod;\r\n  return x;\r\n}\r\ntemplate<typename T,typename U>\r\nstd::ostream &operator<<(std::ostream&os,const std::pair<T,U>&p){os<<p.first<<\" \"<<p.second;return os;}\r\ntemplate<typename T,typename U>\r\nstd::istream &operator>>(std::istream&is,std::pair<T,U>&p){is>>p.first>>p.second;return is;}\r\ntemplate<typename T>\r\nstd::ostream &operator<<(std::ostream&os,const std::vector<T>&v){for(auto it=std::begin(v);it!=std::end(v);){os<<*it<<((++it)!=std::end(v)?\" \":\"\");}return os;}\r\ntemplate<typename T>\r\nstd::istream &operator>>(std::istream&is,std::vector<T>&v){for(T &in:v){is>>in;}return is;}\r\ninline void scan(){}\r\ntemplate<class Head,class... Tail>\r\ninline void scan(Head&head,Tail&... tail){std::cin>>head;scan(tail...);}\r\ntemplate<class T>\r\ninline void print(const T &t){std::cout<<t<<'\\n';}\r\ntemplate<class Head, class... Tail>\r\ninline void print(const Head &head, const Tail &... tail){std::cout<<head<<' ';print(tail...);}\r\ntemplate<class... T>\r\ninline void fin(const T &... a){print(a...);exit(0);}\r\n#line 5 \"library/template/util.hpp\"\r\n\r\nstruct IOSetup{\r\n  IOSetup(){\r\n    std::cin.tie(nullptr);\r\n    std::ios::sync_with_stdio(false);\r\n    std::cout.tie(0);\r\n    std::cout<<std::fixed<<std::setprecision(12);\r\n    std::cerr<<std::fixed<<std::setprecision(12);\r\n  }\r\n};\r\ntemplate<typename F>\r\nstruct REC{\r\n  private:\r\n  F f;\r\n  public:\r\n  explicit constexpr REC(F&&f_):f(std::forward<F>(f_)){}\r\n  template<typename... Args>\r\n  constexpr auto operator()(Args&&...args)const{\r\n    return f(*this, std::forward<Args>(args)...);\r\n  }\r\n};\r\ntemplate<typename T,typename Comp=std::less<T>>\r\nstruct compressor{\r\n  private:\r\n  std::vector<T>data;\r\n  Comp cmp;\r\n  bool sorted=false;\r\n  public:\r\n  compressor():compressor(Comp()){}\r\n  compressor(const Comp&cmp):cmp(cmp){}\r\n  compressor(const std::vector<T>&dat,const Comp&cmp=Comp()):data(dat),cmp(cmp){}\r\n  compressor(std::vector<T>&&dat,const Comp&cmp=Comp()):data(std::move(dat)),cmp(cmp){}\r\n  compressor(std::initializer_list<T>li,const Comp&cmp=Comp()):data(li.begin(),li.end()),cmp(cmp){}\r\n  void push_back(const T&v){assert(!sorted);data.push_back(v);}\r\n  void push_back(T&&v){assert(!sorted);data.push_back(std::move(v));}\r\n  template<typename... Args>void emplace_back(Args&&...args){assert(!sorted);data.emplace_back(std::forward<Args>(args)...);}\r\n  void push(const std::vector<T>&v){\r\n    assert(!sorted);\r\n    const int n=data.size();\r\n    data.resize(v.size()+n);\r\n    for(int i=0;i<(int)v.size();i++)data[i+n]=v[i];\r\n  }\r\n  void build(){\r\n    assert(!sorted);sorted=1;\r\n    std::sort(data.begin(),data.end(),cmp);\r\n    data.erase(unique(data.begin(),data.end(),[&](const T&l,const T&r)->bool {return !cmp(l,r)&&!cmp(r,l);}),data.end());\r\n  }\r\n  const T&operator[](int k)const& {\r\n    assert(sorted);\r\n    return data[k];\r\n  }\r\n  int get_index(const T&v)const {\r\n    assert(sorted);\r\n    return int(lower_bound(data.begin(),data.end(),v,cmp)-data.begin());\r\n  }\r\n  void press(std::vector<T>&v)const {\r\n    assert(sorted);\r\n    for(auto&&i:v)i=get_index(i);\r\n  }\r\n  std::vector<int>pressed(const std::vector<T>&v)const {\r\n    assert(sorted);\r\n    std::vector<int>ret(v.size());\r\n    for(int i=0;i<(int)v.size();i++)ret[i]=get_index(v[i]);\r\n    return ret;\r\n  }\r\n  int size()const {\r\n    assert(sorted);\r\n    return data.size();\r\n  }\r\n};\r\n#line 4 \"library/template/debug.hpp\"\r\n\r\ntemplate<typename T,typename=void>\r\nstruct is_specialize:std::false_type{};\r\ntemplate<typename T>\r\nstruct is_specialize<T,typename std::conditional<false,typename T::iterator, void>::type>:std::true_type{};\r\ntemplate<typename T>\r\nstruct is_specialize<T,typename std::conditional<false,decltype(T::first),void>::type>:std::true_type{};\r\ntemplate<typename T>\r\nstruct is_specialize<T,std::enable_if_t<std::is_integral<T>::value,void>>:std::true_type{};\r\ninline void dump(const char&t){std::cerr<<t;}\r\ninline void dump(const std::string&t){std::cerr<<t;}\r\ninline void dump(const bool&t){std::cerr<<(t?\"true\":\"false\");}\r\ntemplate <typename T,std::enable_if_t<!is_specialize<T>::value,std::nullptr_t> =nullptr>\r\ninline void dump(const T&t){std::cerr<<t;}\r\ntemplate<typename T>\r\ninline void dump(const T&t,std::enable_if_t<std::is_integral<T>::value>* =nullptr){std::string tmp;if(t==infinity<T>::value||t==infinity<T>::max)tmp=\"inf\";if(std::is_signed<T>::value&&(t==infinity<T>::mvalue||t==infinity<T>::min))tmp=\"-inf\";if(tmp.empty())tmp=std::to_string(t);std::cerr<<tmp;}\r\ntemplate<typename T,typename U>\r\ninline void dump(const std::pair<T,U>&);\r\ntemplate<typename T>\r\ninline void dump(const T&t,std::enable_if_t<!std::is_void<typename T::iterator>::value>* =nullptr){std::cerr<<\"{\";for(auto it=std::begin(t);it!=std::end(t);){dump(*it);std::cerr<<(++it==t.end()?\"\":\",\");}std::cerr<<\"}\";}\r\ntemplate<typename T,typename U>\r\ninline void dump(const std::pair<T,U>&t){std::cerr<<\"(\";dump(t.first);std::cerr<<\",\";dump(t.second);std::cerr<<\")\";}\r\ninline void trace(){std::cerr<<std::endl;}\r\ntemplate<typename Head,typename... Tail>\r\ninline void trace(Head&&head,Tail&&... tail){dump(head);if(sizeof...(tail))std::cerr<<\",\";trace(std::forward<Tail>(tail)...);}\r\n#ifdef ONLINE_JUDGE\r\n#define debug(...) (void(0))\r\n#else\r\n#define debug(...) do{std::cerr<<#__VA_ARGS__<<\"=\";trace(__VA_ARGS__);}while(0)\r\n#endif\r\n#line 4 \"library/template/type-traits.hpp\"\r\n\r\ntemplate<std::size_t size>\r\nstruct int_least{\r\n  static_assert(size<=128,\"size must be less than or equal to 128\");\r\n  using type=typename std::conditional<\r\n    size<=8,std::int_least8_t,\r\n    typename std::conditional<\r\n      size<=16,std::int_least16_t,\r\n      typename std::conditional<\r\n        size<=32,std::int_least32_t,\r\n        typename std::conditional<size<=64,std::int_least64_t,__int128_t>::type>::type>::type>::type;\r\n};\r\ntemplate<std::size_t size>using int_least_t=typename int_least<size>::type;\r\ntemplate<std::size_t size>\r\nstruct uint_least{\r\n  static_assert(size<=128,\"size must be less than or equal to 128\");\r\n  using type=typename std::conditional<\r\n    size<=8,std::uint_least8_t,\r\n    typename std::conditional<\r\n      size<=16,std::uint_least16_t,\r\n      typename std::conditional<\r\n        size<=32,std::uint_least32_t,\r\n        typename std::conditional<size<=64,std::uint_least64_t,__uint128_t>::type>::type>::type>::type;\r\n};\r\ntemplate<std::size_t size>using uint_least_t=typename uint_least<size>::type;\r\ntemplate<typename T>\r\nusing double_size_int=int_least<std::numeric_limits<T>::digits*2+1>;\r\ntemplate<typename T>using double_size_int_t=typename double_size_int<T>::type;\r\ntemplate<typename T>\r\nusing double_size_uint=uint_least<std::numeric_limits<T>::digits*2>;\r\ntemplate<typename T>using double_size_uint_t=typename double_size_uint<T>::type;\r\ntemplate<typename T>\r\nusing double_size=typename std::conditional<std::is_signed<T>::value,double_size_int<T>,double_size_uint<T>>::type;\r\ntemplate<typename T>using double_size_t=typename double_size<T>::type;\r\n#line 9 \"library/template/template.hpp\"\r\nusing namespace std;\r\n#line 2 \"code.cpp\"\r\nvoid solve();\r\nint main(){\r\n  IOSetup();\r\n  ll times=1;\r\n  cin>>times;\r\n  while(times--){\r\n    solve();\r\n  }\r\n}\r\nvoid solve(){\r\n  LL(n);vp v(n);cin>>v;\r\n  ll sum=0;\r\n  ll maf=-inf,mas=-inf;\r\n  rep(i,n)sum+=v[i].first*v[i].second,chmax(maf,v[i].first),chmax(mas,v[i].second);\r\n  set<pl>ans;\r\n  if(sum%maf==0){\r\n    ll h=maf,w=sum/maf;\r\n    sort(rall(v));\r\n    multiset<pl>tmp;\r\n    bool ok=true;\r\n    rep(i,n)tmp.emplace(v[i].second,v[i].first);\r\n    rep(i,n){\r\n      if(tmp.find({v[i].second,v[i].first})==tmp.end())continue;\r\n      if(h==v[i].first){\r\n        w-=v[i].second;tmp.erase(tmp.find({v[i].second,v[i].first}));\r\n      }\r\n      else{\r\n        auto it=tmp.lower_bound({w,-1});\r\n        while(it!=tmp.end()&&it->first==w){\r\n          h-=it->second;\r\n          auto it2=it;it2++;\r\n          tmp.erase(it);\r\n          it=it2;\r\n        }\r\n        if(tmp.find({v[i].second,v[i].first})==tmp.end())continue;\r\n        if(h!=v[i].first){\r\n          ok=false;break;\r\n        }\r\n        else{\r\n          w-=v[i].second;tmp.erase(tmp.find({v[i].second,v[i].first}));\r\n        }\r\n      }\r\n    }\r\n    if(ok){\r\n      ans.emplace(maf,sum/maf);\r\n    }\r\n  }\r\n  if(sum%mas==0){\r\n    ll h=sum/mas,w=mas;\r\n    sort(all(v),[](pl a,pl b){return a.second>b.second;});\r\n    multiset<pl>tmp;\r\n    bool ok=true;\r\n    rep(i,n)tmp.emplace(v[i].first,v[i].second);\r\n    rep(i,n){\r\n      if(tmp.find({v[i].first,v[i].second})==tmp.end())continue;\r\n      if(w==v[i].second){\r\n        h-=v[i].first;tmp.erase(tmp.find({v[i].first,v[i].second}));\r\n      }\r\n      else{\r\n        auto it=tmp.lower_bound({h,-1});\r\n        while(it!=tmp.end()&&it->first==h){\r\n          w-=it->second;\r\n          auto it2=it;it2++;\r\n          tmp.erase(it);\r\n          it=it2;\r\n        }\r\n        if(tmp.find({v[i].first,v[i].second})==tmp.end())continue;\r\n        if(w!=v[i].second){\r\n          ok=false;break;\r\n        }\r\n        else{\r\n          h-=v[i].first;tmp.erase(tmp.find({v[i].first,v[i].second}));\r\n        }\r\n      }\r\n    }\r\n    if(ok){\r\n      ans.emplace(sum/mas,mas);\r\n    }\r\n  }\r\n  print(ans.size());\r\n  for(auto [i,j]:ans)print(i,j);\r\n}\r\n"
}