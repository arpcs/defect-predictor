{
    "id": 202270063,
    "contestId": 1819,
    "creationTimeSeconds": 1681577895,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "DimmyT"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 19,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 20070400,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define ll long long\r\n#define pb push_back\r\n#define mp make_pair\r\n#define all(x) (x).begin(), (x).end()\r\n#define sz(x) (int)(x).size()\r\nusing namespace std;\r\n\r\n// \u0432\u043f\u0440\u0430\u0432\u043e, \u0432\u043d\u0438\u0437, \u0432\u043b\u0435\u0432\u043e, \u0432\u0432\u0435\u0440\u0445\r\nint dx[] = {0, 1, 0, -1};\r\nint dy[] = {1, 0, -1, 0};\r\n\r\n// \u0445\u043e\u0434 \u043a\u043e\u043d\u0435\u043c\r\n//int dx[] = {-2, -1, 1, 2, 2, 1, -1, -2};\r\n//int dy[] = {1, 2, 2, 1, -1, -2, -2, -1};\r\n\r\nmt19937 rnd(chrono::system_clock::now().time_since_epoch().count());\r\nmt19937_64 rnd64(chrono::system_clock::now().time_since_epoch().count());\r\nint rndInteger (int l, int r) {\r\n    return uniform_int_distribution<int> (l, r)(rnd);\r\n}\r\n\r\nconst int MOD = (int) 998244353;\r\nconst int N = (int) 1e6 + 7;\r\n\r\nint n;\r\npair<int,int> a[N];\r\nint orderByA[N], orderByB[N];\r\nint used[N], timer;\r\nset<pair<ll,ll>> S;\r\n\r\nbool check(ll H, ll W) {\r\n    timer++;\r\n\r\n    for (int aa = 1, bb = 1; H > 0 && W > 0;) {\r\n        while(used[orderByA[aa]] == timer) ++aa;\r\n        while(used[orderByB[bb]] == timer) ++bb;\r\n        int id = -1;\r\n        if(H == a[orderByA[aa]].first) {\r\n            id = orderByA[aa];\r\n            W -= a[id].second;\r\n        } else if (W == a[orderByB[bb]].second){\r\n            id = orderByB[bb];\r\n            H -= a[id].first;\r\n        }\r\n\r\n        if(id == -1) {\r\n            return false;\r\n        }\r\n\r\n        used[id] = timer;\r\n    }\r\n    return true;\r\n}\r\n\r\nvoid solve() {\r\n    cin >> n;\r\n    ll total_area = 0;\r\n\r\n    for (int i = 1; i <= n; ++i) {\r\n        cin >> a[i].first >> a[i].second;\r\n        orderByA[i] = orderByB[i] = i;\r\n        total_area += a[i].first * (ll)a[i].second;\r\n    }\r\n    sort(orderByA + 1, orderByA + n + 1, [&](int x, int y) {\r\n        return a[x] > a[y];\r\n    });\r\n    sort(orderByB + 1, orderByB + n + 1, [&](int x, int y) {\r\n        return make_pair(a[x].second, a[x].first) > make_pair(a[y].second, a[y].first);\r\n    });\r\n    int H = a[orderByA[1]].first;\r\n    int W = a[orderByB[1]].second;\r\n    if(total_area % H == 0 && check(H, total_area / H)) {\r\n        S.insert({H, total_area / H});\r\n    }\r\n\r\n    if(total_area % W == 0 && check(total_area / W, W)) {\r\n        S.insert({total_area / W, W});\r\n    }\r\n\r\n    cout << sz(S) << '\\n';\r\n    for (auto [h, w] : S) {\r\n        cout << h << ' ' << w << '\\n';\r\n    }\r\n    S.clear();\r\n\r\n}\r\n\r\nint main() {\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0), cout.tie(0);\r\n\r\n    int TestCases = 1;\r\n    cin >> TestCases;\r\n\r\n    for (int TestCase = 1; TestCase <= TestCases; ++TestCase) {\r\n//        cout << \"Case #\" << TestCase << \": \";\r\n\r\n        solve();\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n"
}