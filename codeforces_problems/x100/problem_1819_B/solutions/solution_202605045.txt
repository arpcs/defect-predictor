{
    "id": 202605045,
    "contestId": 1819,
    "creationTimeSeconds": 1681821986,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "syqhit"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "Java 8",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 23,
    "timeConsumedMillis": 857,
    "memoryConsumedBytes": 33280000,
    "source": "import java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.StringTokenizer;\r\nimport java.util.TreeSet;\r\n\r\n/**\r\n * Created by jiangjiayao on 2023/4/18.\r\n */\r\npublic class Main {\r\n\r\n    static BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\r\n    static StringTokenizer tokenizer = null;\r\n\r\n\r\n    static String next() {\r\n        while (tokenizer == null || !tokenizer.hasMoreTokens()) {\r\n            try {\r\n                tokenizer = new StringTokenizer(reader.readLine());\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        }\r\n        return tokenizer.nextToken();\r\n    }\r\n\r\n    static int nextInt() {\r\n        return Integer.parseInt(next());\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        int T = nextInt();\r\n        int n;\r\n        for (int t = 1; t <= T; t++) {\r\n            n = nextInt();\r\n            long[][] rectangles = new long[n][];\r\n            long s = 0;\r\n            for (int i = 0; i < n; i++) {\r\n                rectangles[i] = new long[]{nextInt(), nextInt(), i};\r\n                s += rectangles[i][0] * rectangles[i][1];\r\n            }\r\n            TreeSet<long[]> h = new TreeSet<>((o1, o2) -> (int) (o1[0] == o2[0] ? o1[2] - o2[2] : o2[0] - o1[0]));\r\n            TreeSet<long[]> w = new TreeSet<>((o1, o2) -> (int) (o1[1] == o2[1] ? o1[2] - o2[2] : o2[1] - o1[1]));\r\n            for (long[] rectangle : rectangles) {\r\n                h.add(rectangle);\r\n                w.add(rectangle);\r\n            }\r\n            int r = 0;\r\n            List<long[]> result = new ArrayList<>();\r\n            long h1 = h.first()[0];\r\n            if (s % h1 == 0 && judge(h1, s / h1, h, w)) {\r\n                r++;\r\n                result.add(new long[]{h1, (s / h1)});\r\n            }\r\n            h.clear();\r\n            w.clear();\r\n            for (long[] rectangle : rectangles) {\r\n                h.add(rectangle);\r\n                w.add(rectangle);\r\n            }\r\n            long w2 = w.first()[1];\r\n            if (s % w2 == 0 && s / w2 != h1 && judge((s / w2), w2, h, w)) {\r\n                r++;\r\n                result.add(new long[]{(s / w2), w2});\r\n            }\r\n            System.out.println(r);\r\n            for (long[] ints : result) {\r\n                System.out.println(ints[0] + \" \" + ints[1]);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static boolean judge(long h1, long w1, TreeSet<long[]> h, TreeSet<long[]> w) {\r\n        while (!h.isEmpty()) {\r\n            if (h.first()[0] == h1) {\r\n                final long[] first = h.first();\r\n                w1 -= first[1];\r\n                h.remove(first);\r\n                w.remove(first);\r\n            } else if (w.first()[1] == w1) {\r\n                long[] first = w.first();\r\n                h1 -= first[0];\r\n                h.remove(first);\r\n                w.remove(first);\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n}\r\n//4\r\n//3\r\n//1 2\r\n//3 5\r\n//1 3\r\n//3\r\n//1 1\r\n//1 1\r\n//1 1\r\n//1\r\n//10 10\r\n//4\r\n//3 2\r\n//5 5\r\n//2 2\r\n//8 7\r\n//================\r\n//1\r\n//4 5\r\n//2\r\n//1 3\r\n//3 1\r\n//1\r\n//10 10\r\n//1\r\n//13 7"
}