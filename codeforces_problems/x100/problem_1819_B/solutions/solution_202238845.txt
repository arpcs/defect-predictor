{
    "id": 202238845,
    "contestId": 1819,
    "creationTimeSeconds": 1681561400,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "keeping_running"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 18,
    "timeConsumedMillis": 467,
    "memoryConsumedBytes": 141312000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nconst int N = 1e6 + 10;\r\nconst int M = 1e6 + 10;\r\nint n, w[N], h[N];\r\nint sz = 0, mxw = 0, mxh = 0;\r\nset<int> wh[M], ht[M], all;\r\nbool checkw() {\r\n\tint with = mxw, height = sz / mxw;\r\n\t//cout << with << \" \" << height << \"\\n\";\r\n\tfor(int i = 1; i <= n; i ++) {\r\n\t\twh[w[i]].insert(i);\r\n\t\tht[h[i]].insert(i);\r\n\t\tall.insert(i);\r\n\t}\r\n\tfor(int i = 1; i <= n; i ++) {\r\n\t\tif(with <= 1000000 && !wh[with].empty()) {\r\n\t\t\tint t = *wh[with].begin();\r\n\t\t\theight -= h[t];\r\n\t\t\twh[with].erase(t);\r\n\t\t\tht[h[t]].erase(t);\r\n\t\t\tall.erase(t);\r\n\t\t\t//cout << with << \" \" << height << \"\\n\";\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif(height <= 1000000 && !ht[height].empty()) {\r\n\t\t\tint t = *ht[height].begin();\r\n\t\t\twith -= w[t];\r\n\t\t\tht[height].erase(t);\r\n\t\t\twh[w[t]].erase(t);\r\n\t\t\tall.erase(t);\r\n\t\t\t//cout << with << \" \" << height << \"\\n\";\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tbreak;\r\n\t}\r\n\tfor(auto x : all) {\r\n\t\tht[h[x]].erase(x);\r\n\t\twh[w[x]].erase(x);\r\n\t}\r\n\tall.clear();\r\n\tif(!with || !height) return true;\r\n\treturn false;\r\n}\r\n\r\nbool checkh() {\r\n\tint with = sz / mxh, height = mxh;\r\n\t//cout << with << \" \" << height << \"\\n\";\r\n\tfor(int i = 1; i <= n; i ++) {\r\n\t\twh[w[i]].insert(i);\r\n\t\tht[h[i]].insert(i);\r\n\t\tall.insert(i);\r\n\t}\r\n\tfor(int i = 1; i <= n; i ++) {\r\n\t\tif(with <= 1000000 && !wh[with].empty()) {\r\n\t\t\tint t = *wh[with].begin();\r\n\t\t\theight -= h[t];\r\n\t\t\twh[with].erase(t);\r\n\t\t\tht[h[t]].erase(t);\r\n\t\t\tall.erase(t);\r\n\t\t\t//cout << with << \" \" << height << \"\\n\";\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif(height <= 1000000 && !ht[height].empty()) {\r\n\t\t\tint t = *ht[height].begin();\r\n\t\t\twith -= w[t];\r\n\t\t\tht[height].erase(t);\r\n\t\t\twh[w[t]].erase(t);\r\n\t\t\tall.erase(t);\r\n\t\t\t//cout << with << \" \" << height << \"\\n\";\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tbreak;\r\n\t}\r\n\tfor(auto x : all) {\r\n\t\tht[h[x]].erase(x);\r\n\t\twh[w[x]].erase(x);\r\n\t}\r\n\tall.clear();\r\n\tif(!with || !height) return true;\r\n\treturn false;\r\n}\r\n\r\nvoid solve() {\r\n\tcin >> n;\r\n\tsz = 0, mxw = 0, mxh = 0;\r\n\tfor(int i = 1; i <= n; i ++) {\r\n\t\tcin >> w[i] >> h[i];\r\n\t\tsz += w[i] * h[i];\r\n\t\tmxw = max(mxw, w[i]);\r\n\t\tmxh = max(mxh, h[i]);\r\n\t}\r\n\tint cnt = 0;\r\n\tset<pair<int, int>> ans;\r\n\tif(sz % mxw == 0 && checkw()) {\r\n\t\tans.insert({mxw, sz / mxw});\r\n\t\t// cout << mxw << \" \" << sz / mxw << '\\n';\r\n\t\tcnt ++;\r\n\t}\r\n\tif(sz % mxh == 0 && checkh()) {\r\n\t\tans.insert({sz / mxh, mxh});\r\n\t\t// cout << sz / mxh << \" \" << mxh << '\\n';\r\n\t\tcnt ++;\r\n\t}\r\n\t// assert(cnt >= 1);\r\n\tcout << ans.size() << '\\n';\r\n\tfor(auto p : ans) {\r\n\t\tcout << p.first << \" \" << p.second << '\\n';\r\n\t}\r\n}\r\n\r\nsigned main() {\r\n\tios::sync_with_stdio(0);\r\n\tcin.tie(0), cout.tie(0);\r\n\tint tc; cin >> tc;\r\n\tfor(; tc; tc --) solve();\r\n}"
}