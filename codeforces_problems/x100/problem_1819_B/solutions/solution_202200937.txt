{
    "id": 202200937,
    "contestId": 1819,
    "creationTimeSeconds": 1681552328,
    "relativeTimeSeconds": 2828,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "YouKn0wWho"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 4,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 1638400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int N = 2e5 + 9;\r\nint n, a[N], b[N];\r\nbool ok(long long h, long long w) {\r\n  multiset<pair<int, int>> H, W;\r\n  for (int i = 1; i <= n; i++) {\r\n    H.insert({a[i], b[i]});\r\n    W.insert({b[i], a[i]});\r\n  }\r\n  for (int cnt = 1; cnt <= n; cnt++) {\r\n    auto [h1, w1] = *H.rbegin();\r\n    auto [w2, h2] = *W.rbegin();\r\n    if (max(h1, h2) > h or max(w1, w2) > w) {\r\n      return false;\r\n    }\r\n    if (h == h1) {\r\n      w -= w1;\r\n      H.erase(H.find({h1, w1}));\r\n      W.erase(W.find({w1, h1}));\r\n    }\r\n    else if (w == w2) {\r\n      h -= h2;\r\n      H.erase(H.find({h2, w2}));\r\n      W.erase(W.find({w2, h2}));\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n  return h == 0 or w == 0;\r\n}\r\nint32_t main() {\r\n  ios_base::sync_with_stdio(0);\r\n  cin.tie(0);\r\n  int t; cin >> t;\r\n  while (t--) {\r\n    cin >> n;\r\n    vector<pair<int, int>> v;\r\n    for (int i = 1; i <= n; i++) {\r\n      cin >> a[i] >> b[i];\r\n      v.push_back({a[i], b[i]});\r\n    }\r\n    sort(v.rbegin(), v.rend());\r\n    set<pair<int, int>> ans;\r\n    long long h = v[0].first, w = 0;\r\n    for (int i = 0; i < n; i++) {\r\n      if (v[i].first == h) {\r\n        w += v[i].second;\r\n      }\r\n      else {\r\n        int mx = 0;\r\n        for (int j = i; j < n; j++) {\r\n          mx = max(mx, v[i].second);\r\n        }\r\n        w += mx;\r\n        break;\r\n      }\r\n    }\r\n    if (ok(h, w)) {\r\n      ans.insert({h, w});\r\n    }\r\n\r\n    v.clear();\r\n    for (int i = 1; i <= n; i++) {\r\n      v.push_back({b[i], a[i]});\r\n    }\r\n    sort(v.rbegin(), v.rend());\r\n    w = v[0].first, h = 0;\r\n    for (int i = 0; i < n; i++) {\r\n      if (v[i].first == w) {\r\n        h += v[i].second;\r\n      }\r\n      else {\r\n        int mx = 0;\r\n        for (int j = i; j < n; j++) {\r\n          mx = max(mx, v[i].second);\r\n        }\r\n        h += mx;\r\n        break;\r\n      }\r\n    }\r\n    if (ok(h, w)) {\r\n      ans.insert({h, w});\r\n    }\r\n\r\n    cout << ans.size() << '\\n';\r\n    for (auto [x, y]: ans) {\r\n      cout << x << ' ' << y << '\\n';\r\n    }\r\n  }\r\n  return 0;\r\n}"
}