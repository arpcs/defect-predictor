{
    "id": 203567121,
    "contestId": 1819,
    "creationTimeSeconds": 1682520554,
    "relativeTimeSeconds": 1154,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "abc864197532"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1682519400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 23,
    "timeConsumedMillis": 483,
    "memoryConsumedBytes": 21094400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define pb push_back\r\n#define all(x) x.begin(), x.end()\r\n#define pii pair<int,int>\r\nconst int N = 400005;\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false), cin.tie(0);\r\n    int t;\r\n    cin >> t;\r\n    while (t--) {\r\n        int n;\r\n        cin >> n;\r\n        vector <int> w(n), h(n);\r\n        ll tot = 0;\r\n        for (int i = 0; i < n; ++i) {\r\n            cin >> w[i] >> h[i];\r\n            tot += 1ll * w[i] * h[i];\r\n        }\r\n        vector <pair <ll, ll>> ans;\r\n        auto check = [&](ll tw, ll th) {\r\n            set <pii, greater <pii>> Sw, Sh;\r\n            for (int i = 0; i < n; ++i) {\r\n                Sw.insert({w[i], i});\r\n                Sh.insert({h[i], i});\r\n            }\r\n            while (!Sw.empty()) {\r\n                {\r\n                    int id = Sw.begin()->second;\r\n                    if (tw == w[id]) {\r\n                        th -= h[id];\r\n                        Sw.erase({w[id], id});\r\n                        Sh.erase({h[id], id});\r\n                        continue;\r\n                    }\r\n                    if (tw < w[id]) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                {\r\n                    int id = Sh.begin()->second;\r\n                    if (th == h[id]) {\r\n                        tw -= w[id];\r\n                        Sw.erase({w[id], id});\r\n                        Sh.erase({h[id], id});\r\n                        continue;\r\n                    }\r\n                    if (th < h[id]) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        {\r\n            int mx = *max_element(all(w));\r\n            if (tot % mx == 0) {\r\n                if (check(mx, tot / mx)) {\r\n                    ans.emplace_back(mx, tot / mx);\r\n                }\r\n            }\r\n        }\r\n        {\r\n            int mx = *max_element(all(h));\r\n            if (tot % mx == 0) {\r\n                if (check(tot / mx, mx)) {\r\n                    ans.emplace_back(tot / mx, mx);\r\n                }\r\n            }\r\n        }\r\n        sort(all(ans));\r\n        ans.resize(unique(all(ans)) - ans.begin());\r\n        cout << ans.size() << '\\n';\r\n        for (auto [x, y] : ans) {\r\n            cout << x << ' ' << y << '\\n';\r\n        }\r\n    }\r\n}"
}