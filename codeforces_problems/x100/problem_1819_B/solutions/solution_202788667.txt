{
    "id": 202788667,
    "contestId": 1819,
    "creationTimeSeconds": 1681978019,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "baonb789"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 512000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nint64_t Q;\r\nvoid solve() {\r\n    int64_t n = 0;\r\n    int64_t sum = 0, mh = 0, mw = 0;\r\n    cin >> n;\r\n    vector <int64_t> a (n + 1);\r\n    vector <int64_t> b (n + 1);\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> a[i] >> b[i];\r\n        sum += a[i] * b[i];\r\n        mh = max (a[i], mh);\r\n        mw = max (b[i], mw);\r\n    }\r\n    set <pair<int64_t, int64_t>> k;\r\n    vector <pair<int64_t, int64_t>> res;\r\n    if (sum % mh == 0) {\r\n        k.emplace(mh, sum / mh);\r\n    }\r\n    if (sum % mw == 0) {\r\n        k.emplace(sum / mw, mw);\r\n    }\r\n    for (auto v : k) {\r\n        int check = 0;\r\n        int64_t H = v.first;\r\n        int64_t W = v.second;\r\n        multiset <pair<int64_t, int64_t>> ma;\r\n        multiset <pair<int64_t, int64_t>> mb;\r\n        for (int i = 0; i < n; i++) {\r\n            ma.emplace (a[i], b[i]);\r\n            mb.emplace (b[i], a[i]);\r\n        }\r\n        for (int i = 1; i <= n - 1; i++) {\r\n            auto ita = prev(ma.end());\r\n            if (ita->first == H) {\r\n                mb.erase(mb.find(make_pair(ita->second, ita->first)));\r\n                ma.erase(ita);\r\n                W -= ita->second;\r\n                continue;\r\n            }\r\n            auto itb = prev(mb.end()) ;\r\n            if (itb->first == W) {\r\n                ma.erase(ma.find(make_pair(itb->second, itb->first)));\r\n                mb.erase(itb);\r\n                H -= itb->second;\r\n                continue;\r\n            }\r\n            check = 1;\r\n            break;\r\n        }\r\n        if (!check) {\r\n            res.emplace_back(v.first, v.second);\r\n        }\r\n    }\r\n    cout << res.size() << '\\n';\r\n    for (auto v : res) {\r\n        cout << v.first << \" \" << v.second << '\\n';\r\n    }\r\n}\r\nint main () {\r\n    ios_base :: sync_with_stdio(false);\r\n    cin >> Q;\r\n    while (Q--) {\r\n        solve();\r\n    }\r\n}"
}