{
    "id": 165639724,
    "contestId": 1569,
    "creationTimeSeconds": 1658734001,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1569,
        "index": "F",
        "name": "Palindromic Hamiltonian Path",
        "type": "PROGRAMMING",
        "rating": 3000,
        "tags": [
            "brute force",
            "dfs and similar",
            "dp",
            "graphs",
            "hashing"
        ]
    },
    "author": {
        "contestId": 1569,
        "members": [
            {
                "handle": "hexagonwarrior"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631111700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 122,
    "timeConsumedMillis": 3150,
    "memoryConsumedBytes": 68505600,
    "source": "#include<bits/stdc++.h>\r\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\r\n#define per(i,a,b) for(int i=(a);i>=(b);i--)\r\n#define pb push_back\r\n#define mp make_pair\r\n#define vi vector<int>\r\n#define pii pair<int,int>\r\n#define sz(x) ((int)x.size())\r\n#define ll long long\r\nusing namespace std;\r\ntemplate<typename T>void cmax(T&x,T y){if(x<y) x=y;}\r\ntemplate<typename T>void cmin(T&x,T y){if(y<x) x=y;}\r\ninline int read(){\r\n    int f=1,x=0;\r\n    char ch=getchar();\r\n    while(ch>'9'||ch<'0'){if(ch=='-') f=-1;ch=getchar();}\r\n    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\r\n    return f*x;\r\n}\r\nconst int N=13;\r\nint n,m,k,E[N][N],cnt[N];\r\nstruct T{\r\n\tint a[N];\r\n\tT(){memset(a,0,sizeof(a));}\r\n\tbool operator<(const T&o)const{\r\n\t\trep(i,1,12) if(a[i]!=o.a[i]) return a[i]<o.a[i];\r\n\t\treturn 0;\r\n\t}\r\n};\r\nstruct TT{\r\n\tT a;\r\n\tint x,y;\r\n\tbool operator<(const TT&o)const{\r\n\t\tif(a<o.a||o.a<a) return a<o.a;\r\n\t\tif(x!=o.x) return x<o.x;\r\n\t\treturn y<o.y; \r\n\t}\r\n};\r\nset <T> S1,S2;\r\nset <TT> S;\r\ninline void dfs(T arr,int x,int y){\r\n\tif(x>y) swap(x,y);\r\n\tarr.a[y]=x;\r\n\tif(S.count(TT{arr,x,y})) return;\r\n\tS.insert(TT{arr,x,y});bool vis[15]={};\t\r\n\trep(i,1,n) if(arr.a[i]) vis[i]=vis[arr.a[i]]=1;\r\n\tif(*min_element(vis+1,vis+n+1)){\r\n\t\tif(E[x][y]) S1.insert(arr);\r\n\t\treturn;\r\n\t}\r\n\trep(i,1,n) if(E[x][i]&&!vis[i]) rep(j,1,n) if(E[y][j]&&!vis[j]&&i^j) dfs(arr,i,j); \r\n}\r\ninline void work(T arr,int i){\r\n\twhile(i<=n&&arr.a[i]) i++;\r\n\tif(i>n){\r\n\t\trep(i,1,n) if(arr.a[arr.a[i]]) arr.a[i]=arr.a[arr.a[i]];\r\n\t\treturn S2.insert(arr),void();\r\n\t}\r\n\tvi v;\r\n\trep(j,i+1,n) if(!arr.a[j]) v.pb(j);\r\n\trep(j,0,(1<<sz(v))-1){\r\n\t\tT tmp=arr;\r\n\t\trep(k,0,sz(v)-1) if((j>>k)&1) tmp.a[v[k]]=i;\r\n\t\twork(tmp,i+1);\r\n\t}\r\n}\r\nint main(){\r\n\tn=read(),m=read(),k=read();\r\n\trep(i,1,m){\r\n\t\tint x=read(),y=read();\r\n\t\tE[x][y]=E[y][x]=1;\r\n\t}\r\n\trep(i,1,n) rep(j,1,n) if(i^j) dfs(T(),i,j);\r\n\tfor(auto x:S1) work(x,1);\r\n//\tprintf(\"%d\\n\",sz(S1));\r\n\tfor(auto x:S2){\r\n\t\tint c=0;\r\n\t\trep(i,1,n) if(!x.a[i]) c++;\r\n\t\tcnt[c]++;\r\n\t}\r\n\tll t=1,ans=0;\r\n\trep(i,1,n/2){\r\n\t\tt*=(k--);\r\n\t\tans+=cnt[i]*t;\r\n\t}\r\n\tprintf(\"%lld\",ans);\r\n}//dfjasdfksdjkfkjads"
}