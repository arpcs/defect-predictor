{
    "id": 147562518,
    "contestId": 1569,
    "creationTimeSeconds": 1645702093,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1569,
        "index": "F",
        "name": "Palindromic Hamiltonian Path",
        "type": "PROGRAMMING",
        "rating": 3000,
        "tags": [
            "brute force",
            "dfs and similar",
            "dp",
            "graphs",
            "hashing"
        ]
    },
    "author": {
        "contestId": 1569,
        "members": [
            {
                "handle": "tokusakurai"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631111700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 122,
    "timeConsumedMillis": 1247,
    "memoryConsumedBytes": 409600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define rep(i, n) for (int i = 0; i < n; i++)\r\n#define rep2(i, x, n) for (int i = x; i <= n; i++)\r\n#define rep3(i, x, n) for (int i = x; i >= n; i--)\r\n#define each(e, v) for (auto &e : v)\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define all(x) x.begin(), x.end()\r\n#define rall(x) x.rbegin(), x.rend()\r\n#define sz(x) (int)x.size()\r\nusing ll = long long;\r\nusing pii = pair<int, int>;\r\nusing pil = pair<int, ll>;\r\nusing pli = pair<ll, int>;\r\nusing pll = pair<ll, ll>;\r\n\r\ntemplate <typename T>\r\nbool chmax(T &x, const T &y) {\r\n    return (x < y) ? (x = y, true) : false;\r\n}\r\n\r\ntemplate <typename T>\r\nbool chmin(T &x, const T &y) {\r\n    return (x > y) ? (x = y, true) : false;\r\n}\r\n\r\ntemplate <typename T>\r\nint flg(T x, int i) {\r\n    return (x >> i) & 1;\r\n}\r\n\r\ntemplate <typename T>\r\nvoid print(const vector<T> &v, T x = 0) {\r\n    int n = v.size();\r\n    for (int i = 0; i < n; i++) cout << v[i] + x << (i == n - 1 ? '\\n' : ' ');\r\n    if (v.empty()) cout << '\\n';\r\n}\r\n\r\ntemplate <typename T>\r\nvoid printn(const vector<T> &v, T x = 0) {\r\n    int n = v.size();\r\n    for (int i = 0; i < n; i++) cout << v[i] + x << '\\n';\r\n}\r\n\r\ntemplate <typename T>\r\nint lb(const vector<T> &v, T x) {\r\n    return lower_bound(begin(v), end(v), x) - begin(v);\r\n}\r\n\r\ntemplate <typename T>\r\nint ub(const vector<T> &v, T x) {\r\n    return upper_bound(begin(v), end(v), x) - begin(v);\r\n}\r\n\r\ntemplate <typename T>\r\nvoid rearrange(vector<T> &v) {\r\n    sort(begin(v), end(v));\r\n    v.erase(unique(begin(v), end(v)), end(v));\r\n}\r\n\r\ntemplate <typename T>\r\nvector<int> id_sort(const vector<T> &v, bool greater = false) {\r\n    int n = v.size();\r\n    vector<int> ret(n);\r\n    iota(begin(ret), end(ret), 0);\r\n    sort(begin(ret), end(ret), [&](int i, int j) { return greater ? v[i] > v[j] : v[i] < v[j]; });\r\n    return ret;\r\n}\r\n\r\ntemplate <typename S, typename T>\r\npair<S, T> operator+(const pair<S, T> &p, const pair<S, T> &q) {\r\n    return make_pair(p.first + q.first, p.second + q.second);\r\n}\r\n\r\ntemplate <typename S, typename T>\r\npair<S, T> operator-(const pair<S, T> &p, const pair<S, T> &q) {\r\n    return make_pair(p.first - q.first, p.second - q.second);\r\n}\r\n\r\ntemplate <typename S, typename T>\r\nistream &operator>>(istream &is, pair<S, T> &p) {\r\n    S a;\r\n    T b;\r\n    is >> a >> b;\r\n    p = make_pair(a, b);\r\n    return is;\r\n}\r\n\r\ntemplate <typename S, typename T>\r\nostream &operator<<(ostream &os, const pair<S, T> &p) {\r\n    return os << p.first << ' ' << p.second;\r\n}\r\n\r\nstruct io_setup {\r\n    io_setup() {\r\n        ios_base::sync_with_stdio(false);\r\n        cin.tie(NULL);\r\n        cout << fixed << setprecision(15);\r\n    }\r\n} io_setup;\r\n\r\nconst int inf = (1 << 30) - 1;\r\nconst ll INF = (1LL << 60) - 1;\r\nconst int MOD = 1000000007;\r\n// const int MOD = 998244353;\r\n\r\nvector<vector<int>> es;\r\nvector<vector<ll>> perm;\r\nint N, M, K;\r\n\r\nvector<ll> ok;\r\nll ans = 0;\r\n\r\nll vtoi(const vector<int> &col) {\r\n    ll ret = 0;\r\n    each(e, col) {\r\n        ret *= 6;\r\n        ret += e;\r\n    }\r\n    return ret;\r\n}\r\n\r\nvoid judge(const vector<int> &col) {\r\n    int L = N / 2;\r\n    vector<vector<int>> ids(L);\r\n    rep(i, N) ids[col[i]].eb(i);\r\n\r\n    vector<int> v(L);\r\n    iota(all(v), 0);\r\n    do {\r\n        int last = v[L - 1];\r\n        if (es[ids[last][0]][ids[last][1]] == 0) continue;\r\n        int flag = 1;\r\n        rep(i, L - 1) {\r\n            int a = ids[v[i]][0], b = ids[v[i]][1];\r\n            int c = ids[v[i + 1]][0], d = ids[v[i + 1]][1];\r\n            if (!(es[a][c] & es[b][d]) && !(es[a][d] & es[b][c])) {\r\n                flag = 0;\r\n                break;\r\n            }\r\n        }\r\n        if (flag) {\r\n            ok.eb(vtoi(col));\r\n            return;\r\n        }\r\n    } while (next_permutation(all(v)));\r\n}\r\n\r\nvoid dfs(vector<int> col, int cnt, int k) {\r\n    if (cnt == N) {\r\n        judge(col);\r\n        return;\r\n    }\r\n    int s = -1;\r\n    rep(i, N) {\r\n        if (col[i] == -1) {\r\n            s = i;\r\n            break;\r\n        }\r\n    }\r\n    col[s] = k;\r\n    rep2(i, s + 1, N - 1) {\r\n        if (col[i] == -1) {\r\n            col[i] = k;\r\n            dfs(col, cnt + 2, k + 1);\r\n            col[i] = -1;\r\n        }\r\n    }\r\n}\r\n\r\nint solve(vector<int> col, int k) {\r\n    if (k == N / 2) {\r\n        vector<pii> ps;\r\n        vector<int> pre(N / 2, -1);\r\n        rep(i, N) {\r\n            if (pre[col[i]] != -1) ps.eb(pre[col[i]], i);\r\n            pre[col[i]] = i;\r\n        }\r\n        sort(all(ps));\r\n        rep(i, N / 2) {\r\n            auto [a, b] = ps[i];\r\n            col[a] = i, col[b] = i;\r\n        }\r\n        ll x = vtoi(col);\r\n        int t = lb(ok, x);\r\n        return (t < sz(ok) && ok[t] == x ? 1 : 0);\r\n    }\r\n    vector<int> rem(N / 2, 2);\r\n    rep(i, N) rem[col[i]]--;\r\n    int s = -1, c = -1;\r\n    rep(i, N) {\r\n        if (rem[col[i]] < 0) {\r\n            s = i;\r\n            c = col[i];\r\n            break;\r\n        }\r\n    }\r\n    rep(i, N) {\r\n        if (col[i] >= c) col[i]++;\r\n    }\r\n    col[s]--;\r\n    rep2(i, s + 1, N - 1) {\r\n        if (col[i] == c + 1) {\r\n            col[i]--;\r\n            int x = solve(col, k + 1);\r\n            if (x == 1) return 1;\r\n            col[i]++;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\n// \u5857\u308a\u65b9\u3092\u5168\u5217\u6319\r\nvoid rec(vector<int> col, int cnt, int k) {\r\n    if (cnt == N) {\r\n        int x = solve(col, k);\r\n        ans += x * perm[K][k];\r\n    }\r\n    vector<int> rem;\r\n    rep(i, N) {\r\n        if (col[i] == -1) rem.eb(i);\r\n    }\r\n    int K = sz(rem);\r\n    rep(i, 1 << K) {\r\n        if (!(i & 1)) continue;\r\n        int c = __builtin_popcount(i);\r\n        if (c & 1) continue;\r\n        rep(t, K) {\r\n            if (flg(i, t)) col[rem[t]] = k;\r\n        }\r\n        rec(col, cnt + c, k + 1);\r\n        rep(t, K) col[rem[t]] = -1;\r\n    }\r\n}\r\n\r\nint main() {\r\n    cin >> N >> M >> K;\r\n\r\n    rep(i, N) es.eb(N, 0);\r\n    rep(i, M) {\r\n        int u, v;\r\n        cin >> u >> v;\r\n        u--, v--;\r\n        es[u][v] = 1, es[v][u] = 1;\r\n    }\r\n\r\n    perm.assign(13, vector<ll>(13, 1));\r\n    rep2(i, 0, 12) {\r\n        rep2(j, 0, 12) {\r\n            rep(k, j) {\r\n                perm[i][j] *= i - k; //\r\n            }\r\n        }\r\n    }\r\n\r\n    vector<int> col(N, -1);\r\n    dfs(col, 0, 0);\r\n    sort(all(ok));\r\n\r\n    rec(col, 0, 0);\r\n    cout << ans << '\\n';\r\n}"
}