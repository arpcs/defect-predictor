{
    "id": 162512449,
    "contestId": 1569,
    "creationTimeSeconds": 1656744096,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1569,
        "index": "F",
        "name": "Palindromic Hamiltonian Path",
        "type": "PROGRAMMING",
        "rating": 3000,
        "tags": [
            "brute force",
            "dfs and similar",
            "dp",
            "graphs",
            "hashing"
        ]
    },
    "author": {
        "contestId": 1569,
        "members": [
            {
                "handle": "orzdevinwang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631111700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 122,
    "timeConsumedMillis": 1201,
    "memoryConsumedBytes": 7372800,
    "source": "#include<bits/stdc++.h>\r\n#define L(i, j, k) for(int i = (j); i <= (k); ++i) \r\n#define R(i, j, k) for(int i = (j); i >= (k); --i) \r\n#define ll long long \r\n#define ull unsigned long long \r\n#define sz(a) ((int) (a).size())\r\n#define vi vector < int > \r\n#define me(a, x) memset(a, x, sizeof(a)) \r\nusing namespace std;\r\nconst int N = 14;\r\nint n, m, k, c[N], h[N], cnt[N], xc[N];\r\nunordered_map < ll, bool > mp;\r\ninline ll has(int *f) {\r\n\tll ret = 0;\r\n\tL(i, 1, n) ret += f[i] - 1, ret *= i;\r\n\treturn ret;\r\n}\r\nint tnt[N], lst[N], fst[N], f[N], to[N];\r\nvoid fix(int *f) {\r\n\tme(to, 0);\r\n\tint ic = 0;\r\n\tL(i, 1, n) if(!to[f[i]]) to[f[i]] = ++ic;\r\n\tL(i, 1, n) f[i] = to[f[i]];\r\n}\r\nvoid dfs(int x, int mx) {\r\n\tif(x == n + 1) {\r\n\t\tme(cnt, 0);\r\n\t\tL(i, 1, n) cnt[c[i]] += 1;\r\n\t\tL(i, 1, mx) if(cnt[i] & 1) return ;\r\n\t\tint rid = has(c), ns = false;\r\n\t\tif(mp.count(rid)) ns = true;\r\n\t\tL(i, 1, n) lst[c[i]] = i;\r\n\t\tL(col, 1, mx) if(cnt[col] > 2) {\r\n\t\t\tint v = lst[col];\r\n\t\t\tL(i, 1, v - 1) \r\n\t\t\t\tif(c[i] == col) {\r\n\t\t\t\t\tL(j, 1, n) xc[j] = c[j];\r\n\t\t\t\t\txc[i] = xc[v] = n / 2, fix(xc);\r\n\t\t\t\t\tif(mp.count(has(xc))) ns = true; \r\n\t\t\t\t}\r\n\t\t}\r\n\t\tif(ns) tnt[mx] += 1;\r\n\t\tif(ns && !mp.count(rid)) mp[rid] = true; \r\n\t\treturn ;\r\n\t}\r\n\tR(i, min(mx + 1, n / 2), 1) {\r\n\t\tc[x] = i;\r\n\t\tdfs(x + 1, max(i, mx));\r\n\t}\r\n}\r\nint cur, mat[N], G[N], S, ip[N];\r\nvoid DFS(int u, int v) {\r\n\tS ^= 1 << u, S ^= 1 << v;\r\n\tmat[u] = v, mat[v] = u;\r\n\tif(S) {\r\n\t\tint sx = G[u] & S, sy = G[v] & S, all = sx | sy;\r\n\t\tL(i, 1, n) if(all >> i & 1) L(j, i + 1, n) \r\n\t\t\tif(((sx >> i & 1) && (sy >> j & 1)) || ((sx >> j & 1) && (sy >> i & 1))) \r\n\t\t\t\tDFS(i, j);\r\n\t} else {\r\n\t\tint nt = 0;\r\n\t\tL(i, 1, n) ip[i] = 0;\r\n\t\tL(i, 1, n) if(!ip[i]) ip[i] = ip[mat[i]] = ++nt;\r\n//\t\tL(i, 1, n) cout << ip[i] << ' ';\r\n//\t\tcout << '\\n';\r\n\t\tmp[has(ip)] = true;\r\n\t}\r\n\tS ^= 1 << u, S ^= 1 << v;\r\n}\r\nint main() {\r\n\tios :: sync_with_stdio(false);\r\n\tcin.tie(0); cout.tie(0);\r\n\tcin >> n >> m >> k;\r\n\tL(i, 1, m) {\r\n\t\tint u, v;\r\n\t\tcin >> u >> v;\r\n\t\tG[u] |= 1 << v;\r\n\t\tG[v] |= 1 << u;\r\n\t}\r\n\tS = (1 << (n + 1)) - 2;\r\n\tL(i, 1, n) L(j, i + 1, n) if(G[i] >> j & 1 && c[i] == c[j]) DFS(i, j);\r\n\tdfs(1, 0);\r\n\tll ns = 0;\r\n\tR(i, n / 2, 1) ns += tnt[i], ns *= k - i + 1;\r\n\tcout << ns << '\\n';\r\n\treturn 0;\r\n}"
}