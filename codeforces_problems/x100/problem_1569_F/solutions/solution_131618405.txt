{
    "id": 131618405,
    "contestId": 1569,
    "creationTimeSeconds": 1634024270,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1569,
        "index": "F",
        "name": "Palindromic Hamiltonian Path",
        "type": "PROGRAMMING",
        "rating": 3000,
        "tags": [
            "brute force",
            "dfs and similar",
            "dp",
            "graphs",
            "hashing"
        ]
    },
    "author": {
        "contestId": 1569,
        "members": [
            {
                "handle": "YLWang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631111700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 14,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 4300800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int N = 14, M = 7; \r\nint a[N][N], vis[N], n, m, u[N], v[N], K;\r\n\r\nll pw[N], fac[N], ans;\r\nmap < ll, int > cnted;\r\nint f[1 << M][M]; \r\nbool chk() {\r\n\t\r\n//\tcerr << \"chk \" << endl; \r\n//\tfor(int i = 0; i < m; i++) {\r\n//\t\tcerr << u[i] << ' ' << v[i] << endl; \t\r\n//\t}\r\n\tmemset(f, 0, sizeof(f)); \r\n\tfor(int i = 0; i < m; i++) f[1 << i][i] = 1; \r\n\tfor(int st = 1; st < 1 << m; st++) {\r\n\t\tfor(int i = 0; i < m; i++) if(f[st][i]) {\r\n\t\t\tfor(int j = 0; j < m; j++) if(i != j && !(st >> j & 1)) {\r\n\t\t\t\tif(a[u[i]][u[j]] && a[v[i]][v[j]] || a[u[i]][v[j]] && a[v[i]][u[j]]) \r\n\t\t\t\t\tf[st | (1 << j)][j] = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor(int i = 0; i < m; i++) { \r\n\t\tif(f[(1 << m) - 1][i] && a[u[i]][v[i]]) return 1; \r\n\t}\r\n\treturn 0;\r\n}\r\nvoid dfs2(int s, int cnt, ll st) {\r\n\tif(s == n / 2) {\r\n\t\tif(!cnted[st]) {\r\n\t\t\tcnted[st] = 1; \r\n\t\t\tans += fac[K] / fac[K - cnt];\r\n//\t\t\tcerr << st << ' ' << cnt << endl; \r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tfor(int i = 0; i < cnt; i++) dfs2(s + 1, cnt, st + (pw[u[s]] + pw[v[s]]) * i);\r\n\tdfs2(s + 1, cnt + 1, st + (pw[u[s]] + pw[v[s]]) * cnt);\r\n}\r\nvoid dfs1(int s) {\r\n\tif(s == n / 2) {\r\n\t\tif(!chk()) return; \r\n//\t\tcerr << \"?\" << endl; \r\n\t\tdfs2(0, 0, 0); \r\n\t\treturn ; \t\r\n\t}\r\n\tint x = s + 1; while(vis[x]) x++; \r\n\tfor(int i = 1; i <= n; i++) {\r\n\t\tif(x != i && !vis[i]) {\r\n\t\t\tvis[i] = vis[x] = 1; \r\n\t\t\tu[s] = i, v[s] = x;  \r\n\t\t\tdfs1(s + 1); \r\n\t\t\tvis[i] = vis[x] = 0; \r\n\t\t}\r\n\t}\r\n}\r\nint main() {\r\n\tscanf(\"%d %d %d\", &n, &m, &K);\r\n\tpw[0] = fac[0] = 1; \r\n\tfor(int i = 1; i <= n; i++) pw[i] = pw[i - 1] * 6ll, fac[i] = fac[i - 1] * i; \r\n\tfor(int i = 1; i <= m; i++) {\r\n\t\tint u, v; scanf(\"%d %d\", &u, &v);\r\n\t\ta[u][v] = a[v][u] = 1; \t\r\n\t} m = n / 2;\r\n\tdfs1(0), cout << ans << endl;  \r\n\treturn 0;\t\r\n}\r\n"
}