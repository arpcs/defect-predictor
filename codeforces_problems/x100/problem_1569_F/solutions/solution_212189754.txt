{
    "id": 212189754,
    "contestId": 1569,
    "creationTimeSeconds": 1688544632,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1569,
        "index": "F",
        "name": "Palindromic Hamiltonian Path",
        "type": "PROGRAMMING",
        "rating": 3000,
        "tags": [
            "brute force",
            "dfs and similar",
            "dp",
            "graphs",
            "hashing"
        ]
    },
    "author": {
        "contestId": 1569,
        "members": [
            {
                "handle": "TonyStark_987"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631111700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 122,
    "timeConsumedMillis": 3073,
    "memoryConsumedBytes": 50585600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define rep(i,j,k) for(int i=(j);i<=(k);i++)\r\n#define per(i,j,k) for(int i=(j);i>=(k);i--)\r\n#define ll long long\r\n#define arr array<int8_t,13>\r\nset<tuple<arr,int,int>>p;set<arr>s2,s1;int n,m,k,e[15][15];ll as,ct[15],tt=1\t;\r\nvoid dfs(arr a,int x,int y){if(x<y)swap(x,y);a[x]=y;if(p.count(make_tuple(a,x,y)))return;p.insert(make_tuple(a,x,y));bool v[13]={};\r\n\trep(i,1,n)if(a[i])v[i]=v[a[i]]=1;if(*min_element(v+1,v+n+1)){if(e[x][y])s1.insert(a);return;}rep(i,1,n)if(e[x][i]&&!v[i])rep(j,1,n)if(i!=j&&e[y][j]&&!v[j])dfs(a,i,j);}\r\nvoid sol(arr a,int x){while(x<=n&&a[x])x++;if(x>n){rep(i,1,n)if(a[a[i]])a[i]=a[a[i]];s2.insert(a);return;}vector<int>v;rep(i,x+1,n)if(!a[i])v.push_back(i);\r\n\tint l=v.size();rep(s,0,(1<<l)-1){arr nw=a;rep(i,0,l-1)if(s>>i&1)nw[v[i]]=x;sol(nw,x+1);}}\r\nint main(){scanf(\"%d%d%d\",&n,&m,&k); int x,y;rep(i,1,n)e[0][i]=e[i][0]=1;rep(i,1,m)scanf(\"%d%d\",&x,&y),e[x][y]=e[y][x]=1;dfs(arr(),0,0);\r\n\tfor(arr y:s1)sol(y,1);for(arr a:s2){int tt=0;rep(i,1,n)if(!a[i])tt++;ct[tt]++;}rep(i,1,n/2){tt=tt*(k-i+1);as+=tt*ct[i];}printf(\"%lld\\n\",as);}"
}