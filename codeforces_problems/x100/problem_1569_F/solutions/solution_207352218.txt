{
    "id": 207352218,
    "contestId": 1569,
    "creationTimeSeconds": 1685104573,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1569,
        "index": "F",
        "name": "Palindromic Hamiltonian Path",
        "type": "PROGRAMMING",
        "rating": 3000,
        "tags": [
            "brute force",
            "dfs and similar",
            "dp",
            "graphs",
            "hashing"
        ]
    },
    "author": {
        "contestId": 1569,
        "members": [
            {
                "handle": "LHQing"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631111700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 122,
    "timeConsumedMillis": 1591,
    "memoryConsumedBytes": 6246400,
    "source": "// LUOGU_RID: 111294673\n#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<set>\nusing namespace std;\nconst int N=13;\nlong long qpw(long long as,long long bs)\n{\n\tlong long rt=1ll;\n\twhile(bs)\n\t{\n\t\tif(bs&1)\n\t\trt=rt*as;\n\t\tas=as*as;\n\t\tbs>>=1;\n\t}\n\treturn rt;\n}\nint n,m,k,a[N],btp;\nlong long C[N][N],jc[N];\npair<int,int> b[N];\nbool e[N][N],dp[N][2];\nlong long ans=0;\nconst long long q=131ll,p1=998244353ll,p2=1000000007ll;\nstruct uSet\n{\n\tvector<vector<int> > vc;\n\tpair<long long,long long> hsh()\n\t{\n\t\tlong long rt1=0ll,rt2=0ll;\n\t\tfor(int i=0;i<vc.size();i++)\n\t\t{\n\t\t\tfor(int j=0;j<vc[i].size();j++)\n\t\t\t{\n\t\t\t\trt1=(rt1*q+vc[i][j])%p1;\n\t\t\t\trt2=(rt2*q+vc[i][j])%p2;\n\t\t\t}\n\t\t\trt1=(rt1*q)%p1;\n\t\t\trt2=(rt2*q)%p2;\n\t\t}\n\t\treturn make_pair(rt1,rt2);\n\t}\n};\nset<pair<long long,long long> > h;\nvoid calc(uSet us)\n{\n\t//cout<<\"CALC \"<<us.vc.size()<<endl;\n\tpair<long long,long long> tmp=us.hsh();\n\tif(h.find(tmp)!=h.end())\n\treturn ;\n\th.insert(tmp);\n\tans+=C[k][us.vc.size()]*jc[us.vc.size()];\n\tif(us.vc.size()!=1)\n\t{\n\t\tfor(int i=0;i<us.vc.size();i++)\n\t\tfor(int j=i+1;j<us.vc.size();j++)\n\t\t{\n\t\t\tuSet usnxt=us;\n\t\t\tfor(int x=0;x<usnxt.vc[j].size();x++)\n\t\t\tusnxt.vc[i].push_back(usnxt.vc[j][x]);\n\t\t\tsort(usnxt.vc[i].begin(),usnxt.vc[i].end());\n\t\t\tusnxt.vc.erase(usnxt.vc.begin()+j);\n\t\t\tcalc(usnxt);\n\t\t}\n\t}\n\treturn ;\n}\nvoid dfs(int stp)\n{\n\tif(stp<=n/2)\n\t{\n\t\tint u;\n\t\tfor(u=1;u<=n;u++)\n\t\tif(a[u]==0)\n\t\tbreak;\n\t\tif(u==n+1)\n\t\t{\n\t\t\tprintf(\"ERROR\\n\");\n\t\t\texit(0);\n\t\t}\n\t\tfor(int v=u+1;v<=n;v++)\n\t\tif(a[v]==0)\n\t\t{\n\t\t\ta[u]=v;\n\t\t\ta[v]=u;\n\t\t\tdfs(stp+1);\n\t\t\ta[v]=0;\n\t\t}\n\t\ta[u]=0;\n\t\treturn ;\n\t}\n\tbtp=0;\n\tfor(int i=1;i<=n;i++)\n\tif(a[i]>i)\n\tb[++btp]=make_pair(i,a[i]);\n\tsort(b+1,b+btp+1);\n\tbool flg=false;\n\tdo\n\t{\n\t\tif(!e[b[n/2].first][b[n/2].second])\n\t\tcontinue;\n\t\tdp[n/2][0]=dp[n/2][1]=true;\n\t\tfor(int i=n/2-1;i>=1;i--)\n\t\t{\n\t\t\tdp[i][0]=dp[i][1]=false;\n\t\t\tbool tmp1=(\n\t\t\t\te[b[i].first][b[i+1].first]\n\t\t\t\t&&e[b[i].second][b[i+1].second]\n\t\t\t),tmp2=(\n\t\t\t\te[b[i].first][b[i+1].second]\n\t\t\t\t&&e[b[i].second][b[i+1].first]\n\t\t\t);\n\t\t\tif(tmp1)\n\t\t\t{\n\t\t\t\tdp[i][0]|=dp[i+1][0];\n\t\t\t\tdp[i][1]|=dp[i+1][1];\n\t\t\t}\n\t\t\tif(tmp2)\n\t\t\t{\n\t\t\t\tdp[i][0]|=dp[i+1][1];\n\t\t\t\tdp[i][1]|=dp[i+1][0];\n\t\t\t}\n\t\t}\n\t\tif(dp[1][0]||dp[1][1])\n\t\t{\n\t\t\tflg=true;\n\t\t\tbreak;\n\t\t}\n\t}\n\twhile(next_permutation(b+1,b+btp+1));\n\tif(flg)\n\t{\n\t\tuSet us;\n\t\tfor(int i=1;i<=n;i++)\n\t\tif(a[i]>i)\n\t\t{\n\t\t\tvector<int> tmp;\n\t\t\ttmp.push_back(i);\n\t\t\ttmp.push_back(a[i]);\n\t\t\tus.vc.push_back(tmp);\n\t\t}\n\t\tcalc(us);\n\t}\n\treturn ;\n}\nint main()\n{\n\tC[0][0]=1ll;\n\tjc[0]=1ll;\n\tfor(int i=1;i<N;i++)\n\t{\n\t\tC[i][i]=C[i][0]=1ll;\n\t\tfor(int j=1;j<i;j++)\n\t\tC[i][j]=C[i-1][j]+C[i-1][j-1];\n\t\tjc[i]=jc[i-1]*i;\n\t}\n\tscanf(\"%d%d%d\",&n,&m,&k);\n\tfor(int i=1;i<=m;i++)\n\t{\n\t\tint u,v;\n\t\tscanf(\"%d%d\",&u,&v);\n\t\te[u][v]=e[v][u]=true;\n\t}\n\tdfs(1);\n\tprintf(\"%lld\\n\",ans);\n\treturn 0;\n}"
}