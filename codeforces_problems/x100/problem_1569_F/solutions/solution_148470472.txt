{
    "id": 148470472,
    "contestId": 1569,
    "creationTimeSeconds": 1646488422,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1569,
        "index": "F",
        "name": "Palindromic Hamiltonian Path",
        "type": "PROGRAMMING",
        "rating": 3000,
        "tags": [
            "brute force",
            "dfs and similar",
            "dp",
            "graphs",
            "hashing"
        ]
    },
    "author": {
        "contestId": 1569,
        "members": [
            {
                "handle": "aszwz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631111700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 122,
    "timeConsumedMillis": 327,
    "memoryConsumedBytes": 40243200,
    "source": "#include <stdio.h>\r\n#include <map>\r\nusing namespace std;\r\n#define MS 10395\r\n#define MD 150000\r\n#define ll long long\r\nint encode(int n,int pp[15])\r\n{\r\n    int st[15],jg=0;bool bk[15]={0};\r\n    for(int i=n/2;i>=1;i--)\r\n    {\r\n        int w[15],s=0,o;\r\n        for(int x=0;x<n;x++)\r\n            if(!bk[x])\r\n            {\r\n                if(s==0)o=x;\r\n                w[x]=s++;\r\n            }\r\n        st[i]=w[pp[o]]-1;\r\n        bk[o]=bk[pp[o]]=1;\r\n    }\r\n    for(int i=1;i<=n/2;i++)\r\n        jg=jg*(i+i-1)+st[i];\r\n    return jg;\r\n}\r\nvoid decode(int x,int n,int pp[15])\r\n{ \r\n    bool bk[15]={0};\r\n    for(int i=n/2;i>=1;i--)\r\n    {\r\n        int w[15],s=0;\r\n        for(int x=0;x<n;x++)\r\n            if(!bk[x])w[s++]=x;\r\n        int z=x%(i+i-1)+1;x/=i+i-1;\r\n        int a=w[0],b=w[z];\r\n        pp[a]=b;pp[b]=a;\r\n        bk[a]=bk[b]=1;\r\n    }\r\n}\r\nint cc[15],cn[1<<12],trs[13][MS][13],P[13][MS][13];ll jc[15];\r\nmap<ll,int> mp;\r\nvoid yucl(int n,int k)\r\n{\r\n    cc[0]=jc[0]=1;\r\n    for(int i=1;i<=k;i++)jc[i]=i*jc[i-1];\r\n    for(int i=1;i<=n;i++)\r\n        cc[i]=(i&1?i*cc[i-1]:cc[i-1]);\r\n    for(int i=1;i<(1<<n);i++)\r\n        cn[i]=cn[i/2]+i%2;\r\n    for(int s=2;s<=n;s+=2)\r\n    {\r\n        for(int x=0;x<cc[s];x++)\r\n        {\r\n            int pp[15];decode(x,s,pp);\r\n            for(int y=0;y<s;y++)\r\n            {\r\n                P[s][x][y]=pp[y];\r\n                int w[15],o=0,np[15];\r\n                for(int i=0;i<s;i++)\r\n                    if(i!=y&&i!=pp[y])w[i]=o++;\r\n                for(int i=0;i<s;i++)\r\n                    if(i!=y&&i!=pp[y])np[w[i]]=w[pp[i]];\r\n                trs[s][x][y]=encode(s-2,np);\r\n            }\r\n            if(s==n)\r\n            {\r\n                ll H=0;\r\n                for(int i=0;i<n;i++)H=H*12+pp[i];\r\n                mp[H]=x;\r\n            }\r\n        }\r\n    }\r\n}\r\nbool g[15][15],dp[MD][13][13],kx[MS];int su[1<<12],K;\r\nint Hash(int x,int y)\r\n{\r\n    return (x?su[x-1]:0)+y;\r\n}\r\nbool dfs2(int s,int m,int n,int wz[10][15],int sl[10],int zz[10])\r\n{\r\n    if(s>m)\r\n    {\r\n        int pp[15];ll H=0;\r\n        for(int i=1;i<=m;i++)\r\n        {\r\n            for(int j=0;j<sl[i];j++)\r\n                pp[wz[i][j]]=wz[i][P[sl[i]][zz[i]][j]];\r\n        }\r\n        for(int i=0;i<n;i++)H=H*12+pp[i];\r\n        return kx[mp[H]];\r\n    }\r\n    for(int x=0;x<cc[sl[s]];x++)\r\n    {\r\n        zz[s]=x;\r\n        if(dfs2(s+1,m,n,wz,sl,zz))return 1;\r\n    }\r\n    return 0;\r\n}\r\nll dfs(int s,int n,int m,int sz[15])\r\n{\r\n    if(m>6||m>K)return 0;\r\n    if(s==n+1)\r\n    {\r\n        int wz[10][15],sl[10]={0},zz[10];\r\n        for(int i=1;i<=n;i++)\r\n            wz[sz[i]][sl[sz[i]]++]=i-1;\r\n        for(int i=1;i<=m;i++)\r\n            if(sl[i]&1)return 0;\r\n        if(!dfs2(1,m,n,wz,sl,zz))return 0;\r\n        return jc[K]/jc[K-m];\r\n    }\r\n    ll jg=0;\r\n    for(int x=1;x<=m+1;x++)\r\n    {\r\n        sz[s]=x;\r\n        jg+=dfs(s+1,n,x>m?x:m,sz);\r\n    }\r\n    return jg;\r\n}\r\nint main()\r\n{\r\n    int n,m;\r\n    scanf(\"%d%d%d\",&n,&m,&K);\r\n    yucl(n,K);\r\n    for(int i=0;i<m;i++)\r\n    {\r\n        int a,b;\r\n        scanf(\"%d%d\",&a,&b);\r\n        a-=1;b-=1;\r\n        g[a][b]=g[b][a]=1;\r\n    }\r\n    for(int z=0;z<(1<<n);z++)\r\n    {\r\n        su[z]=(z?su[z-1]:0);\r\n        if(cn[z]%2==0)su[z]+=cc[cn[z]];\r\n    }\r\n    for(int z=0;z<(1<<n);z++)\r\n    {\r\n        if(cn[z]&1)continue;\r\n        int w1[15],s1=0;\r\n        for(int i=0;i<n;i++)\r\n            if((z>>i)&1)w1[s1++]=i;\r\n        for(int s=0;s<cc[s1];s++)\r\n        {\r\n            int u=Hash(z,s);\r\n            for(int a=0;a<n;a++)\r\n            {\r\n                if((z>>a)&1)continue;\r\n                for(int b=a+1;b<n;b++)\r\n                {\r\n                    if((z>>b)&1)continue;\r\n                    if(z==0)\r\n                    {\r\n                        dp[z][a][b]=1;\r\n                        continue;\r\n                    }\r\n                    for(int c=0;c<s1;c++)\r\n                    {\r\n                        int i=w1[c],j=w1[P[s1][s][c]];\r\n                        if(g[i][a]&&g[b][j]&&dp[Hash(z^(1<<i)^(1<<j),trs[s1][s][c])][i][j])\r\n                            {dp[u][a][b]=1;break;}\r\n                    }\r\n                }\r\n                for(int b=0;b<a;b++)dp[u][a][b]=dp[u][b][a];\r\n            }\r\n        }\r\n    }\r\n    for(int s=0;s<cc[n];s++)\r\n    {\r\n        for(int x=0;x<n;x++)\r\n        {\r\n            int y=P[n][s][x];\r\n            if(g[x][y]&&dp[Hash(((1<<n)-1)^(1<<x)^(1<<y),trs[n][s][x])][x][y])\r\n                {kx[s]=1;break;}\r\n        }\r\n    }\r\n    int sz[15];ll ans=dfs(1,n,0,sz);\r\n    printf(\"%lld\",ans);\r\n    return 0;\r\n}"
}