{
    "id": 221309720,
    "contestId": 1569,
    "creationTimeSeconds": 1693495070,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1569,
        "index": "F",
        "name": "Palindromic Hamiltonian Path",
        "type": "PROGRAMMING",
        "rating": 3000,
        "tags": [
            "brute force",
            "dfs and similar",
            "dp",
            "graphs",
            "hashing"
        ]
    },
    "author": {
        "contestId": 1569,
        "members": [
            {
                "handle": "smwtcat"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631111700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 122,
    "timeConsumedMillis": 842,
    "memoryConsumedBytes": 9830400,
    "source": "#include<bits/stdc++.h>\r\n#define rep(i,  n) for(int i = 0; i < n; ++i)\r\nusing namespace std;\r\ntypedef vector<int> vi;\r\ntypedef long long ll;\r\ntypedef pair<int, int> pii;\r\nconst int Mod = 1e9 + 7;\r\nconst int inv2 = (Mod+1) / 2;\r\nconst ll inf = 0x3f3f3f3f3f3f3f3fll;\r\ninline int sign(int a){ return (a&1) ? (Mod-1) : 1; }\r\ninline void uadd(int &a, int b){ a += b-Mod; a += (a>>31) & Mod; }\r\ninline void usub(int &a, int b){ a -= b, a += (a>>31) & Mod; }\r\ninline void umul(int &a, int b){ a = (int)(1ll * a * b % Mod); }\r\ninline int sub(int a, int b){ a -= b, a += (a>>31) & Mod; return a; }\r\ninline int mul(int a, int b){ a = (int)(1ll * a * b % Mod); return a; }\r\nint qpow(int b, int p){ int ret = 1; while(p){ if(p&1) umul(ret, b); umul(b, b), p >>= 1; } return ret; }\r\n\r\nvector< vector<char> > g;\r\nmap<ll, bool> dp;\r\n\r\nvoid brute(int n, vector<int> &p){\r\n\tint x = find(p.begin(), p.end(), -1) - p.begin();\r\n\tif(x == int(p.size())){\r\n\t\tvector<vector<char>> dp2(1 << n, vector<char>(n));\r\n\t\tvector<int> pos1(n), pos2(n);\r\n\t\trep(i, p.size()){\r\n\t\t\tpos1[p[i]] = pos2[p[i]];\r\n\t\t\tpos2[p[i]] = i;\r\n\t\t}\r\n\t\trep(i, n) if(g[pos1[i]][pos2[i]]) dp2[1 << i][i] = true;\r\n\t\trep(mask, 1 << n) rep(i, n) if(dp2[mask][i]){\r\n\t\t\trep(j, n) if(!((mask >> j) & 1)){\r\n\t\t\t\tdp2[mask | (1 << j)][j] |= (g[pos1[i]][pos1[j]] && g[pos2[i]][pos2[j]]);\r\n\t\t\t\tdp2[mask | (1 << j)][j] |= (g[pos1[i]][pos2[j]] && g[pos2[i]][pos1[j]]);\r\n\t\t\t}\r\n\t\t}\r\n\t\trep(i, n) if(dp2[(1 << n) - 1][i]){\r\n\t\t\tll num = 0;\r\n\t\t\tfor(int x : p) num = num * 6 + x;\r\n\t\t\tdp[num] = true;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tfor(int y = x + 1; y < int(p.size()); ++y) if(p[y] == -1){\r\n\t\tp[x] = p[y] = n;\r\n\t\tbrute(n + 1, p);\r\n\t\tp[x] = p[y] = -1;\r\n\t}\r\n}\r\n\r\nbool dfs(vector<int> p){\r\n\tvector<int> used(int(p.size()), -1);\r\n\tint cnt = 0;\r\n\trep(i, p.size()) if(used[p[i]] == -1)\r\n\t\tused[p[i]] = cnt++;\r\n\tll num = 0;\r\n\tfor(int& x : p){\r\n\t\tx = used[x];\r\n\t\tnum = num * 6 + x;\r\n\t}\r\n\tif(dp.count(num)) return dp[num];\r\n\tbool res = false;\r\n\tvector<int> cur(cnt);\r\n\trep(i, p.size()) ++cur[p[i]];\r\n\trep(i, p.size()) if(cur[p[i]] > 2){\r\n\t\tint x = p[i];\r\n\t\tfor(int j = i + 1; j < int(p.size()); ++j) if(p[j] == p[i]){\r\n\t\t\tp[i] = p[j] = cnt;\r\n\t\t\tif(dfs(p)){\r\n\t\t\t\tres = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tp[i] = p[j] = x;\r\n\t\t}\r\n\t\tbreak;\r\n\t}\r\n\treturn dp[num] = res;\r\n}\r\n\r\nvoid brute2(int n, vector<int> &p){\r\n\tint x = find(p.begin(), p.end(), -1) - p.begin();\r\n\tif(x == int(p.size())){\r\n\t\tdfs(p);\r\n\t\treturn;\r\n\t}\r\n\trep(i, n + 1){\r\n\t\tfor(int y = x + 1; y < int(p.size()); ++y) if(p[y] == -1){\r\n\t\t\tp[x] = p[y] = i;\r\n\t\t\tbrute2(max(n, i + 1), p);\r\n\t\t\tp[x] = p[y] = -1;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0);\r\n\r\n\tint n, m, k;\r\n\tcin >> n >> m >> k;\r\n\tg.resize(n, vector<char>(n));\r\n\trep(_, m){\r\n\t\tint v, u;\r\n\t\tcin >> v >> u;\r\n\t\t--v, --u;\r\n\t\tg[v][u] = g[u][v] = 1;\r\n\t}\r\n\tvector<int> cur(n, -1);\r\n\tbrute(0, cur);\r\n\tbrute2(0, cur);\r\n\tvector<ll> fact(k + 1);\r\n\tfact[0] = 1;\r\n\tfor(int i = 1; i <= k; ++i) fact[i] = fact[i - 1] * i;\r\n\tll ans = 0;\r\n\tfor(auto it : dp) if(it.second){\r\n\t\tll num = it.first;\r\n\t\tll mx = 1;\r\n\t\twhile (num){\r\n\t\t\tmx = max(mx, num % 6 + 1);\r\n\t\t\tnum /= 6;\r\n\t\t}\r\n\t\tif(mx <= k){\r\n\t\t\tans += fact[k] / fact[k - mx];\r\n\t\t}\r\n\t}\r\n\r\n\tcout << ans << \"\\n\";\r\n\t\r\n\treturn 0;\r\n}"
}