{
    "id": 225206343,
    "contestId": 1569,
    "creationTimeSeconds": 1695703019,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1569,
        "index": "F",
        "name": "Palindromic Hamiltonian Path",
        "type": "PROGRAMMING",
        "rating": 3000,
        "tags": [
            "brute force",
            "dfs and similar",
            "dp",
            "graphs",
            "hashing"
        ]
    },
    "author": {
        "contestId": 1569,
        "members": [
            {
                "handle": "liujunyi123"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631111700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 122,
    "timeConsumedMillis": 717,
    "memoryConsumedBytes": 6451200,
    "source": "// LUOGU_RID: 126165256\n#include<iostream>\r\n#include<cstring>\r\n#include<cstdio>\r\n#include<vector>\r\n#include<map>\r\nusing namespace std;\r\nconst int N=15;\r\nint n,m,k,fac[N],p[N],t[N],to[N],pos[2][N],f[N][1<<12];\r\nbool g[N][N];long long ans;\r\nmap<long long,bool> mp;\r\nbool dp(int mx){\r\n//\tcout<<mx<<endl;\r\n//\tfor(int i=1;i<=n;i++)cout<<p[i]<<endl;\r\n\tint c[N];memcpy(c,p,sizeof(c));\r\n\tlong long num=0;bool res=0;int cnt=0;\r\n\tmemset(t,0,sizeof(t)),memset(to,0,sizeof(to));\r\n\tfor(int i=1;i<=n;i++)if(!t[p[i]])t[p[i]]=++cnt;\r\n\tfor(int i=1;i<=n;i++)num*=6,num+=t[p[i]]-1,to[p[i]]++;\r\n\tif(mp.count(num))return mp[num];\r\n\tfor(int i=1,x;i<=n;i++)if(to[p[i]]>2){x=p[i];\r\n\t\tfor(int j=i+1;j<=n;j++)if(p[j]==p[i]){\r\n\t\t\tp[i]=p[j]=mx+1;\r\n\t\t\tif(dp(mx+1)){res=1;break;}\r\n\t\t\tp[i]=p[j]=x;\r\n\t\t}\r\n\t\tbreak ;\r\n\t}\r\n\tmemcpy(p,c,sizeof(p));\r\n\treturn mp[num]=res;\r\n}\r\nvoid dfs(int x,int mx){\r\n\tif(x>n)return dp(mx),void();if(p[x])return dfs(x+1,mx),void();\r\n\tfor(int i=1;i<=mx+1;i++)for(int y=x+1;y<=n;y++)if(!p[y])p[x]=p[y]=i,dfs(x+1,max(mx,i)),p[x]=p[y]=0;\r\n}\r\nvoid get(int mx){\r\n\tmemset(f,0,sizeof(f));int t=(1<<mx)-1;\r\n\tfor(int i=1;i<=n;i++)pos[0][p[i]]=pos[1][p[i]],pos[1][p[i]]=i;\r\n\tfor(int i=1;i<=n;i++)if(g[pos[0][i]][pos[1][i]])f[i][1<<i-1]=1;\r\n\tfor(int i=0;i<=t;i++)for(int k=1;k<=mx;k++)if(f[k][i])\r\n\t\tfor(int j=1;j<=mx;j++)if(!(i&(1<<j-1))){\r\n\t\t\tf[j][i|(1<<j-1)]|=g[pos[0][k]][pos[0][j]]&&g[pos[1][k]][pos[1][j]];\r\n\t\t\tf[j][i|(1<<j-1)]|=g[pos[0][k]][pos[1][j]]&&g[pos[1][k]][pos[0][j]];\r\n\t\t}\r\n\tfor(int i=1;i<=mx;i++)if(f[i][t]){\r\n\t\tlong long num=0;\r\n\t\tfor(int j=1;j<=n;j++)num=num*6+p[j]-1;\r\n\t\tmp[num]=true;break ;\r\n\t}\r\n}\r\nvoid init(int x,int mx){\r\n\tif(x>n)return get(mx),void();if(p[x])return init(x+1,mx),void();\r\n\tfor(int y=x+1;y<=n;y++)if(!p[y])p[x]=p[y]=mx+1,init(x+1,mx+1),p[x]=p[y]=0;\r\n}\r\nint main(){\r\n\tscanf(\"%d%d%d\",&n,&m,&k);fac[0]=1;\r\n\tfor(int i=1;i<=12;i++)fac[i]=fac[i-1]*i;\r\n\tfor(int i=1,x,y;i<=m;i++)scanf(\"%d%d\",&x,&y),g[x][y]=g[y][x]=1;\r\n\tinit(1,0),dfs(1,0);\r\n\tfor(auto x:mp)if(x.second){\r\n\t\tlong long num=x.first,mx=0;\r\n//\t\tcout<<num<<endl;\r\n\t\tfor(int i=1;i<=n;i++)mx=max(mx,num%6),num/=6;\r\n\t\tif(k>mx)ans+=fac[k]/fac[k-mx-1];\r\n\t}\r\n\tprintf(\"%lld\\n\",ans);\r\n\treturn 0;\r\n}\r\n"
}