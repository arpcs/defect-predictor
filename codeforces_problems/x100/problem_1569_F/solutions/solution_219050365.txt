{
    "id": 219050365,
    "contestId": 1569,
    "creationTimeSeconds": 1692157776,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1569,
        "index": "F",
        "name": "Palindromic Hamiltonian Path",
        "type": "PROGRAMMING",
        "rating": 3000,
        "tags": [
            "brute force",
            "dfs and similar",
            "dp",
            "graphs",
            "hashing"
        ]
    },
    "author": {
        "contestId": 1569,
        "members": [
            {
                "handle": "servants"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631111700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 122,
    "timeConsumedMillis": 4976,
    "memoryConsumedBytes": 198758400,
    "source": "#pragma GCC optimize(\"Ofast\",\"inline\")\r\n#include<bits/stdc++.h>\r\n#define ll long long\r\nusing namespace std;\r\nconst int N=15;\r\n\r\nstruct node\r\n{\r\n\tint a,b;\r\n}p[N];\r\n\r\nint n,m,k,a[N][N],tot,cnt,mp[N][N],vis[N],viss[N],t[N],tmp[N],l;\r\nll cm[N],res;\r\n\r\nstruct fin\r\n{\r\n\tint siz,a[N];\r\n\t\r\n\tfriend bool operator<(fin a,fin b)\r\n\t{\r\n\t\tfor(int i=1;i<=n;i++)if(a.a[i]!=b.a[i])return a.a[i]<b.a[i];\r\n\t\treturn 1;\r\n\t}\r\n\t\r\n\tfriend bool operator==(fin a,fin b)\r\n\t{\r\n\t\tfor(int i=1;i<=n;i++)if(a.a[i]!=b.a[i])return 0;\r\n\t\treturn 1;\r\n\t}\r\n}ans[3000000],b[100000];\r\n\r\nvoid find(int x,int la)\r\n{\r\n\tif(x==l+1)\r\n\t{\r\n\t\t++cnt;b[cnt].siz=la;\r\n\t\tfor(int i=1;i<=l;i++)b[cnt].a[i]=tmp[i];\r\n\t\treturn;\r\n\t}\r\n\tif(x==1)\r\n\t{\r\n\t\ttmp[x]=1;\r\n\t\treturn find(x+1,1);\r\n\t}\r\n\tfor(int i=1;i<=la;i++)tmp[x]=i,find(x+1,la);\r\n\ttmp[x]=la+1;find(x+1,la+1);\r\n}\r\n\r\nint fd(int x,int i)\r\n{\r\n\tif((x>>(i-1))&1)return p[t[i]].b;\r\n\treturn p[t[i]].a;\r\n}\r\n\r\nint chk(int x)\r\n{\r\n\tint la=fd(x,1);\r\n\tfor(int i=2;i<=l;i++)\r\n\t{\r\n\t\tif(!mp[la][fd(x,i)])return 0;\r\n\t\tla=fd(x,i);\r\n\t}\r\n\tfor(int i=l;i>=1;i--)\r\n\t{\r\n\t\tx^=(1<<(i-1));\r\n\t\tif(!mp[la][fd(x,i)])return 0;\r\n\t\tla=fd(x,i);\r\n\t}\r\n\treturn 1;\r\n}\r\n\r\nint check(int now)\r\n{\r\n\tif(now==l+1)\r\n\t{\r\n\t\tfor(int i=0;i<(1<<l);i++)if(chk(i))return 1;\r\n\t\treturn 0;\r\n\t}\r\n\tfor(int i=1;i<=l;i++)if(!viss[i])\r\n\t{\r\n\t\tviss[i]=1;t[now]=i;\r\n\t\tif(check(now+1))return 1;\r\n\t\tviss[i]=0;\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\nvoid sol()\r\n{\r\n\tfor(int i=1;i<=l;i++)viss[i]=0;\r\n\tif(!check(1))return;\r\n\tfor(int i=1;i<=cnt;i++)\r\n\t{\r\n\t\t++tot;ans[tot].siz=b[i].siz;\r\n\t\tfor(int j=1;j<=l;j++)\r\n\t\tans[tot].a[p[j].a]=ans[tot].a[p[j].b]=b[i].a[j];\r\n\t}\r\n\treturn;\r\n}\r\n\r\nvoid dfs(int now)\r\n{\r\n\tif(now==l+1)return sol();\r\n\tfor(int i=1;i<=n;i++)if(!vis[i])\r\n\t{\r\n\t\tvis[i]=1;\r\n\t\tfor(int j=i+1;j<=n;j++)if(!vis[j])\r\n\t\t{\r\n\t\t\tvis[j]=1;\r\n\t\t\tp[now]=(node){i,j};\r\n\t\t\tdfs(now+1);\r\n\t\t\tvis[j]=0;\r\n\t\t}\r\n\t\tvis[i]=0;\r\n\t\treturn;\r\n\t}\r\n}\r\n\r\nll C(int n,int m)\r\n{\r\n\tif(m>n)return 0;\r\n\treturn cm[n]/cm[m]/cm[n-m];\r\n}\r\n\r\nmain()\r\n{\r\n\tcin>>n>>m>>k;cm[0]=1;l=n/2;\r\n\tfor(int i=1;i<=k;i++)cm[i]=cm[i-1]*i;\r\n\tfor(int i=1;i<=m;i++)\r\n\t{\r\n\t\tint u,v;\r\n\t\tcin>>u>>v;\r\n\t\tmp[u][v]=mp[v][u]=1;\r\n\t}\r\n\tfind(1,1);dfs(1);sort(ans+1,ans+1+tot);\r\n\tfor(int i=1;i<=tot;i++)\r\n\t{\r\n//\t\tcout<<i<<' '<<ans[i].siz<<'\\n';\r\n//\treturn 0;\r\n\t\tif(ans[i]==ans[i-1])continue;\r\n//\t\tfor(int j=1;j<=n;j++)cout<<ans[i].a[j]<<' ';puts(\"\");\r\n\t\tif(ans[i].siz<=k)res+=cm[k]/cm[k-ans[i].siz];\r\n\t}\r\n\tcout<<res;\r\n}"
}