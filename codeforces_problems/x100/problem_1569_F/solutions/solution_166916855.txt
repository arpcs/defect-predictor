{
    "id": 166916855,
    "contestId": 1569,
    "creationTimeSeconds": 1659616168,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1569,
        "index": "F",
        "name": "Palindromic Hamiltonian Path",
        "type": "PROGRAMMING",
        "rating": 3000,
        "tags": [
            "brute force",
            "dfs and similar",
            "dp",
            "graphs",
            "hashing"
        ]
    },
    "author": {
        "contestId": 1569,
        "members": [
            {
                "handle": "Milktea6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631111700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std; \r\n\r\n#define int long long\r\n\r\nconst int M = 12; \r\n\r\nint n, m, k, ans, g[M][M], a[M], p[M], fac[M]; \r\nmap<int, bool> dp; \r\n\r\nvoid init(int a) {\r\n\tint x = n; \r\n\tfor (int i = 0; i < n; i++) if (p[i] == -1) {\r\n\t\tx = i; \r\n\t\tbreak; \r\n\t}\r\n\tif (x == n) {\r\n\t\tint f[1 << 6][M] = {}, p1[M] = {}, p2[M] = {}; \r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tp2[p[i]] = p1[p[i]]; \r\n\t\t\tp1[p[i]] = i; \r\n\t\t}\r\n\t\tfor (int i = 0; i < a; i++) if (g[p1[i]][p2[i]]) f[1 << i][i] = 1; \r\n\t\tfor (int i = 0; i < (1 << a); i++) for (int j = 0; j < a; j++) if (f[i][j]) for (int k = 0; k < a; k++) {\r\n\t\t\tif (i >> k & 1) continue; \r\n\t\t\tf[i | (1 << k)][k] |= (g[p1[k]][p1[j]] && g[p2[k]][p2[j]]); \r\n\t\t\tf[i | (1 << k)][k] |= (g[p1[k]][p2[j]] && g[p2[k]][p1[j]]); \r\n\t\t}\r\n\t\tfor (int i = 0; i < a; i++) {\r\n\t\t\tif (f[(1 << a) - 1][i]) {\r\n\t\t\t\tint num = 0; \r\n\t\t\t\tfor (int j = 0; j < n; j++) num = num * 6 + p[j]; \r\n\t\t\t\tdp[num] = 1; \r\n\t\t\t\tbreak; \r\n\t\t\t}\r\n\t\t\treturn; \r\n\t\t}\r\n\t}\r\n\tfor (int i = x + 1; i < n; i++) if (p[i] == -1) {\r\n\t\tp[x] = p[i] = a; \r\n\t\tinit(a + 1); \r\n\t\tp[x] = p[i] = -1; \r\n\t}\r\n}\r\n\r\nint dfs(int p[]) {\r\n\tint rn[M], cur[M] = {}, t[M] = {}, cnt = 0, num = 0, res = 0; \r\n\tmemset(rn, -1, sizeof(rn)); \r\n\tfor (int i = 0; i < n; i++) if (rn[p[i]] == -1) rn[p[i]] = cnt++; \r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tt[i] = rn[p[i]]; \r\n\t\tcur[t[i]]++; \r\n\t\tnum = num * 6 + t[i]; \r\n\t}\r\n\tif (dp.count(num)) return dp[num]; \r\n\tfor (int i = 0; i < n && !res; i++) if (cur[t[i]] > 2) for (int j = i + 1; j < n; j++) if (t[i] == t[j]) {\r\n\t\tint tmp = t[i]; \r\n\t\tt[i] = t[j] = cnt; \r\n\t\tres |= dfs(t); \r\n\t\tt[i] = t[j] = tmp; \r\n\t\tif (res) break; \r\n\t}\r\n\treturn dp[num] = res; \r\n}\r\n\r\nvoid zxy(int a) {\r\n\tint x = n; \r\n\tfor (int i = 0; i < n; i++) if (p[i] == -1) {\r\n\t\tx = i; \r\n\t\tbreak; \r\n\t}\r\n\tif (x == n) {\r\n\t\tdfs(p); \r\n\t\treturn; \r\n\t}\r\n\tfor (int i = 0; i < a; i++) for (int j = x + 1; j < n; j++) if (p[j] == -1) {\r\n\t\tp[x] = p[j] = i; \r\n\t\tzxy(max(i + 1, a)); \r\n\t\tp[x] = p[j] = -1; \r\n\t}\r\n}\r\n\r\nsigned main() {\r\n\tios_base::sync_with_stdio(false); \r\n\tcin.tie(nullptr); \r\n\tcin >> n >> m >> k; \r\n\tfor (int i = 1, u, v; i <= m; i++) {\r\n\t\tcin >> u >> v; \r\n\t\tu--; \r\n\t\tv--; \r\n\t\tg[u][v] = g[v][u] = 1; \r\n\t}\r\n\tmemset(p, -1, sizeof(p)); \r\n\tinit(0); \r\n\tzxy(0); \r\n\tfac[0] = 1; \r\n\tfor (int i = 1; i <= k; i++) fac[i] = fac[i - 1] * i; \r\n\tfor (auto x : dp) if (x.second) {\r\n\t\tint num = x.first, mx = 1; \r\n\t\twhile (num) {\r\n\t\t\tmx = max(mx, num % 6 + 1); \r\n\t\t\tnum /= 6; \r\n\t\t}\r\n\t\tif (mx <= k) ans += fac[k] /= fac[k - mx]; \r\n\t}\r\n\tcout << ans; \r\n}"
}