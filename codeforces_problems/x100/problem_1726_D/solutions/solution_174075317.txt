{
    "id": 174075317,
    "contestId": 1726,
    "creationTimeSeconds": 1664539531,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "worker_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 8294400,
    "source": "#include <bits/stdc++.h>\r\n//tle\r\nusing ll = long long;\r\n\r\nconst long long N = 2e5 + 10, M = 28, P = 998244353, inf = (1ll << 60) - 1;\r\ntypedef unsigned long long ull;\r\ntypedef unsigned int uint;\r\ntypedef std::pair<ll, ll> PII;\r\ntypedef std::pair<int, double> PID;\r\ntypedef std::pair<double, double> PDD;\r\n#define endl '\\n'\r\n#define x first\r\n#define y second\r\n#define db long double\r\n//#define db double\r\n#define VI std::vector\r\n#define lg2(x) log2(x)\r\n#define PI acosl(-1)\r\n#define mp(x, y) std::make_pair(x, y)\r\n#define debug(c, a) std::cout << c << \" : \" << a << endl;\r\n#define pb(x) push_back(x)\r\n#define bt(x) (1 << (x))\r\n#define sz(x) (int) (x.size())\r\n#define rep(i, a, b) for (int i = a; i <= b; i++)\r\n#define Rep(i, a, b) for (int i = a; i < b; i++)\r\n#define su(i, a, b) for (ll i = b; i >= a; i--)\r\n#define all(x) x.begin() + 1, x.end()\r\n#define pt(x) std::cout << std::fixed << std::setprecision(5) << x << \" \\n\";\r\nstd::mt19937_64 mrnd(std::random_device{}());\r\nll n,a[2][N];\r\nVI<ll> t[N];\r\nstruct DSU {\r\n    std::vector<int> f, si;\r\n    DSU(int n) : f(n), si(n, 1) { std::iota(f.begin(), f.end(), 0); }\r\n    int find(int x) {\r\n        while (x != f[x]) x = f[x] = f[f[x]];\r\n        return x;\r\n    }\r\n    bool same(int x, int y) { return find(x) == find(y); }\r\n    bool merge(int x, int y) {\r\n        x = find(x);\r\n        y = find(y);\r\n        if (x == y) return false;\r\n        si[x] += si[y];\r\n        f[y] = x;\r\n        return true;\r\n    }\r\n    int size(int x) { return si[find(x)]; }\r\n};\r\nvoid solve() {\r\n    ll m;\r\n    std::cin >> n >> m;\r\n    DSU c(n + 1);\r\n    VI<std::array<int,3>> que(m + 1);\r\n    rep(i,1,m){\r\n        int u,v;\r\n        std::cin >> u >> v;\r\n        que[i] = {u,v,i};\r\n    }\r\n    VI<int> ans(m + 1,0);\r\n    std::set<ll> s;\r\n    std::array<int,3> sy;\r\n    VI<std::array<int,3>> range;\r\n    for(int i = 1; i <= m; i ++){\r\n        int x = que[i][0], y = que[i][1];\r\n        if (c.same(x,y)) {\r\n            if (s.empty())\r\n                sy = {x,y,i};\r\n            s.insert(y);\r\n        }\r\n        else\r\n            ans[i] = 1,range.push_back({x,y,i}),c.merge(x,y);\r\n    }\r\n    if (m == n + 2 && s.size() == 3){\r\n        auto v = sy;\r\n        ans[v[2]] = true;\r\n        for(auto [x,y,id]:range){\r\n            if (x == v[0] || y == v[0])\r\n                ans[id] = 0;\r\n        }\r\n    }\r\n    rep(i,1,m){\r\n        std::cout << ans[i] ;\r\n    }\r\n    std::cout << endl;\r\n}\r\n\r\nint main() {\r\n    std::ios::sync_with_stdio(false);\r\n    std::cin.tie(nullptr);\r\n    int _ = 1;\r\n   // std::cin >> _;\r\n    while (_--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}