{
    "id": 181304464,
    "contestId": 1726,
    "creationTimeSeconds": 1668686146,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "judge2022"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 77,
    "timeConsumedMillis": 436,
    "memoryConsumedBytes": 66560000,
    "source": "// Hydro submission #6376213dbfcc812608c82a4d@1668686141534\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nnamespace IO\r\n{\r\n    const int INPUT = 1000000;\r\n    char buf[INPUT], *p1, *p2;\r\n    #define getchar() (p1==p2&&(p2=(p1=buf)+inbuf->sgetn(buf,INPUT),p1==p2)?EOF:*p1++)\r\n    template<typename T>\r\n    inline void read(T &asd)\r\n    {\r\n        static streambuf *inbuf = cin.rdbuf();\r\n        int qwe = 1; char zxc; asd = 0;\r\n        while(!isdigit(zxc = getchar())) if(zxc == '-') qwe = 0;\r\n        while(isdigit(zxc)) asd = asd * 10 + zxc - 48 , zxc = getchar();\r\n        asd = (qwe ? asd : -asd);\r\n    }\r\n    inline int read(char &asd)\r\n    {\r\n        static streambuf *inbuf = cin.rdbuf();\r\n        return ((asd = getchar()) == EOF ? EOF : 0);\r\n    }\r\n    inline int read(char *asd)\r\n    {\r\n        if(read(*asd) != EOF && (*asd))\r\n            while(read(*(++asd)) != EOF && (*asd) != '\\n');\r\n        else return (*asd) = 0, EOF; return (*asd) = 0, 0;\r\n    }\r\n    template<typename T, typename ...Args>\r\n    inline void read(T &x, Args &...args) { read(x), read(args...); }\r\n    #undef getchar\r\n    template<typename T>\r\n    inline void put(T asd)\r\n    {\r\n        static streambuf *outbuf = cout.rdbuf();\r\n        static char stk[41]; static int top = 0;\r\n        if(asd < 0) outbuf->sputc('-'), asd = -asd;\r\n        if(!asd) return outbuf->sputc('0'), void();\r\n        while(asd) stk[++top] = asd % 10 + 48 , asd /= 10;\r\n        while(top) outbuf->sputc(stk[top--]);\r\n    }\r\n    inline void put(char *asd)\r\n    {\r\n        static streambuf *outbuf = cout.rdbuf();\r\n        while(*asd) { outbuf->sputc(*(asd++)); }\r\n    }\r\n    inline void put(const char *asd)\r\n    {\r\n        static streambuf *outbuf = cout.rdbuf();\r\n        while(*asd) { outbuf->sputc(*(asd++)); }\r\n    }\r\n    inline void put(string s)\r\n    {\r\n        static streambuf *outbuf = cout.rdbuf();\r\n        for(auto i : s) outbuf->sputc(i);\r\n    }\r\n    template<typename T, typename ...Args>\r\n    inline void put(T x, Args ...args) { put(x), put(args...); }\r\n}\r\nusing IO::put;\r\nusing IO::read;\r\n\r\nconst int N = 2000010;\r\n\r\nint t, n, m, val[N], vis[N];\r\npair<int, int> e[N];\r\nvector<pair<int, int>> to[N];\r\nrandom_device rd;\r\nuniform_int_distribution<int> dist(0, 114514);\r\nmt19937 rng(dist(rd));\r\n\r\ninline void add(int x , int y , int z)\r\n{\r\n    to[x].push_back({y , z});\r\n    to[y].push_back({x , z});\r\n}\r\n\r\ninline void dfs(int now)\r\n{\r\n    vis[now] = 1;\r\n    shuffle(to[now].begin(), to[now].end(), rng);\r\n    for (auto i : to[now])\r\n    {\r\n        if(vis[i.first]) continue;\r\n        val[i.second] = 1, dfs(i.first);\r\n    }\r\n}\r\n\r\ninline void cl(vector<pair<int,int>> &x)\r\n{\r\n    vector<pair<int, int>> y;\r\n    y.swap(x);\r\n}\r\n\r\ninline void cle(vector<int> &x)\r\n{\r\n    vector<int> y;\r\n    y.swap(x);\r\n}\r\n\r\ninline void init()\r\n{\r\n    for (int i = 1; i <= n; i++)\r\n        vis[i] = val[i] = 0;\r\n    for (int i = 1; i <= m; i++)\r\n        val[i] = 0;\r\n}\r\n\r\nint main()\r\n{\r\n    read(t);\r\n    while(t--)\r\n    {\r\n        read(n, m);\r\n        for (int i = 1, x, y; i <= m; i++)\r\n            read(x, y), add(x, y, i), e[i].first = x , e[i].second = y;\r\n        if(m - n != 2) dfs(1);\r\n        else\r\n        {\r\n            vector<int> k;\r\n            while(1)\r\n            {\r\n                dfs(1);\r\n                for (int j = 1;j <= m;j++)\r\n                    if(val[j] == 0) k.push_back(j);\r\n                int b[7];\r\n                b[1] = e[k[0]].first, b[4] = e[k[0]].second;\r\n                b[2] = e[k[1]].first, b[5] = e[k[1]].second;\r\n                b[3] = e[k[2]].first, b[6] = e[k[2]].second;\r\n                sort(b + 1, b + 6 + 1);\r\n                if(b[1] == b[2] && b[3] == b[4] && b[5] == b[6])\r\n                    init(), cle(k);\r\n                else break;\r\n            }\r\n        }\r\n        for (int i = 1; i <= m; i++)\r\n            put(val[i]);\r\n        put(\"\\n\");\r\n        init();\r\n        for (int i = 1; i <= n;i++)\r\n            cl(to[i]);\r\n    }\r\n    return 0;\r\n}",
    "suggested_categories": [
        "c++",
        "algorithm",
        "graph theory",
        "dfs",
        "randomized algorithm",
        "code quality",
        "coding standards",
        "data structures",
        "input/output manipulation",
        "modularity",
        "error handling",
        "variable naming",
        "code efficiency",
        "stream manipulation",
        "library usage",
        "code organization",
        "debugging",
        "loop optimization",
        "memory management"
    ]
}