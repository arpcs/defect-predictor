{
    "id": 229618236,
    "contestId": 1726,
    "creationTimeSeconds": 1698177775,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "_id_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <map>\r\n#include <vector>\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint dfs(int root, int par, int grand, vector <int> &vis, vector <set <int>> &graph) {\r\n    vis[root] = 1;\r\n    for(auto x: graph[root]) {\r\n        if(vis[x]) {\r\n            if(par != x && x == grand) return root;\r\n            continue;\r\n        } \r\n        int temp = dfs(x, root, grand, vis, graph);\r\n        if(temp != -1) return temp;\r\n    }\r\n    return -1;\r\n}\r\n\r\nvoid blackout_yash() {\r\n    int n, m;\r\n    cin >> n >> m;\r\n\r\n    map <pair <int, int>, int> map;\r\n    vector <set <int>> graph(n + 1);\r\n    for(int i = 0; i < m; i++) {\r\n        int u, v; cin >> u >> v;\r\n        graph[u].insert(v);\r\n        graph[v].insert(u);\r\n        map[{u, v}] = map[{v, u}] = i;\r\n    }\r\n\r\n    vector <int> ans(m);\r\n    int extra = m - n + 1;\r\n    while(extra--) {\r\n        int root, child = -1;\r\n        for(int i = 1; i <= n; i++) {\r\n            vector <int> vis(n + 1);\r\n            child = dfs(i, -1, i, vis, graph);\r\n            if(child != -1) break;\r\n        }\r\n\r\n        graph[root].erase(child);\r\n        graph[child].erase(root);\r\n        ans[map[{root, child}]] = 1;\r\n    }\r\n\r\n    for(auto x: ans) cout << x;\r\n    cout << \"\\n\";\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    int t;\r\n    cin >> t;\r\n    while(t--) blackout_yash();\r\n    return 0;\r\n}\r\n137 114\r\n155 133\r\n86 82\r\n91 147\r\n32 122\r\n160 90\r\n69 74\r\n120 39\r\n85 154\r\n118 157\r\n56 122\r\n22 130\r\n134 68\r\n92 54\r\n53 59\r\n145 10\r\n58 97\r\n52 51\r\n159 84\r\n149 94"
}