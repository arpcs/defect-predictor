{
    "id": 181581487,
    "contestId": 1726,
    "creationTimeSeconds": 1668846131,
    "relativeTimeSeconds": 5231,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "huxch135"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1668840900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 77,
    "timeConsumedMillis": 951,
    "memoryConsumedBytes": 20582400,
    "source": "#pragma GCC optimize(3)\r\n#include <stdio.h>\r\n#include <cstdio>\r\n#include <queue>\r\n#include <string>\r\n#include <cstring>\r\n#include <algorithm>\r\n#include <cstdlib>\r\n#include <iostream>\r\n#include <iomanip>\r\n#include <cmath>\r\n#include <vector>\r\n#include <set>\r\n#include <map>\r\n#include <fstream>\r\n#include <cassert>\r\n#include <complex>\r\n#include <ctime>\r\n//#include <tr1/unordered_map>\r\n#include <bitset>\r\n#define pii pair<int,int>\r\n#define pdd pair<double,double>\r\n#define pll pair<long long,long long>\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n#define is insert\r\n#define es erase\r\n#define mkp make_pair\r\n#define per(i,a,b) for(int i = a; i >= b; --i)\r\n#define rep(i,a,b) for(int i = a; i <= b; ++i)\r\n#define fore(i,a) for(int i = head[a]; i != -1; i = edge[i].nxt)\r\n#define il inline\r\n\r\nusing namespace std;\r\n//using namespace tr1;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\n\r\ninline int read()\r\n{\r\n    int x = 0;\r\n    int f = 0;\r\n    char ch = 0;\r\n    while(!isdigit(ch))\r\n    {\r\n        f |= (ch == '-') ? 1 : 0;\r\n        ch = getchar();\r\n    }\r\n    while(isdigit(ch))\r\n    {\r\n        x = (x << 3) + (x << 1) + (ch ^ 48);\r\n        ch = getchar();\r\n    }\r\n    return f ? -x : x;\r\n}\r\n\r\n/*\r\nconst int N = 2e5 + 10;\r\nint t,n;\r\nchar s[N];\r\nint dp[N];\r\n\r\nint main() {\r\n    t = read();\r\n    while(t--) {\r\n        n = read();\r\n        scanf(\"%s\",s + 1);\r\n        int ans = n;\r\n        vector<int> st;\r\n        rep(i,1,n * 2) {\r\n            if(s[i] == '(') {\r\n                st.pb(i);\r\n                dp[i] = 0;\r\n            }\r\n            else {\r\n                int tmp = st.back();\r\n                st.pop_back();\r\n                dp[i] = dp[tmp - 1] + 1;\r\n                ans -= dp[tmp - 1];\r\n            }\r\n            //printf(\"dp %d %d\\n\",i,dp[i]);\r\n        }\r\n        printf(\"%d\\n\",ans);\r\n    }\r\n}\r\n*/\r\n\r\nconst int N = 2e5 + 10;\r\nint t,n,m;\r\nvector<array<int,2>> G[N];\r\nint vis[N];\r\nint ans[N];\r\narray<int,2> ed[N];\r\nint F[N];\r\n\r\nil int fnd(int x) {\r\n    if(x == F[x])\r\n        return x;\r\n    return F[x] = fnd(F[x]);\r\n}\r\n\r\nil void dfs(int u,int fa) {\r\n    vis[u] = 1;\r\n    for(auto [v,id]:G[u]) {\r\n        if(v == fa || vis[v])\r\n            continue;\r\n        ans[id] = 1;\r\n        dfs(v,u);\r\n    }\r\n}\r\n\r\nint main() {\r\n    t = read();\r\n    while(t--) {\r\n        n = read();\r\n        m = read();\r\n        rep(i,1,n)\r\n            G[i].clear(),vis[i] = 0;\r\n        rep(i,1,m) {\r\n            int u = read(),v = read();\r\n            G[u].pb({v,i});\r\n            G[v].pb({u,i});\r\n            ans[i] = 0;\r\n            ed[i] = {u,v};\r\n        }\r\n        dfs(1,0);\r\n        vector<int> cnt(n + 1);\r\n        set<int> s;\r\n        int w = 0;\r\n        rep(i,1,m)\r\n            if(!ans[i]) {\r\n                s.is(i);\r\n                if(!cnt[ed[i][0]])\r\n                    ++w;\r\n                if(!cnt[ed[i][1]])\r\n                    ++w;\r\n                ++cnt[ed[i][0]];\r\n                ++cnt[ed[i][1]];\r\n            }\r\n        if(s.size() && w == s.size()) {\r\n            //printf(\"sdf %d %d\\n\",w,(int)s.size());\r\n            int f = 0;\r\n            for(int i:s) {\r\n                rep(j,1,n)\r\n                    F[j] = j;\r\n                F[ed[i][0]] = ed[i][1];\r\n                vector<int> temp;\r\n                rep(j,1,m)\r\n                    if(!s.count(j)) {\r\n                        int u = ed[j][0],v = ed[j][1];\r\n                        int fu = fnd(u),fv = fnd(v);\r\n                        if(fu != fv) {\r\n                            F[fu] = fv;\r\n                        }\r\n                        else\r\n                            temp.pb(j);\r\n                    }\r\n                if(temp.size() == 1) {\r\n                    f = 1;\r\n                    ans[temp[0]] = 0;\r\n                    ans[i] = 1;\r\n                    break;\r\n                }\r\n            }\r\n            //assert(f);\r\n        }\r\n        rep(i,1,m) {\r\n            printf(\"%d\",ans[i]);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n}\r\n"
}