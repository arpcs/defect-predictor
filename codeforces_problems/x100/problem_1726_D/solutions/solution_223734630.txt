{
    "id": 223734630,
    "contestId": 1726,
    "creationTimeSeconds": 1694958832,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "RatingIsJustANumber"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 374,
    "memoryConsumedBytes": 102400,
    "source": "#include <iostream>\r\n#include <iomanip>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <string>\r\n#include <bitset>\r\n#include <map>\r\n#include <unordered_map>\r\n#include <stack>\r\n#include <queue>\r\n#include <numeric>\r\n#include <iterator>\r\n#include <math.h>\r\n#include <set>\r\n#include <functional>\r\n#include <fstream>\r\n#include <chrono>\r\n#include <random>\r\n#include <assert.h>\r\n\r\nusing namespace std;\r\n#define long long long\r\n#define MOD 998244353ll\r\n#define eps 0.000001\r\n\r\nint32_t main()\r\n{\r\n    cin.tie(0);\r\n    cin.sync_with_stdio(false);\r\n\r\n    long t;\r\n    cin >> t;\r\n    \r\n    for (int t1 = 0; t1 < t; t1++)\r\n    {\r\n        long n, m;\r\n        cin >> n >> m;\r\n\r\n        vector<vector<pair<long, long>>> g(n);\r\n\r\n        string ans(m, '0');\r\n        \r\n        for (int i = 0; i < m; i++)\r\n        {\r\n            long u, v;\r\n            cin >> u >> v;\r\n\r\n            u -= 1;\r\n            v -= 1;\r\n\r\n            g[u].push_back({ v, i });\r\n            g[v].push_back({ u, i });\r\n        }\r\n\r\n        vector<bool> was(n);\r\n        \r\n        queue<long> q;\r\n        q.push(0);\r\n\r\n        was[0] = true;\r\n\r\n        while (q.size() > 0)\r\n        {\r\n            long u = q.front();\r\n            q.pop();\r\n\r\n            for (int i = 0; i < g[u].size(); i++)\r\n            {\r\n                if (!was[g[u][i].first])\r\n                {\r\n                    was[g[u][i].first] = true;\r\n                    \r\n                    q.push(g[u][i].first);\r\n\r\n                    ans[g[u][i].second] = '1';\r\n                }\r\n            }\r\n        }\r\n\r\n        cout << ans << '\\n';\r\n    }\r\n}"
}