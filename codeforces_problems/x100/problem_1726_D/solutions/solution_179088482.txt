{
    "id": 179088482,
    "contestId": 1726,
    "creationTimeSeconds": 1667488922,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "Lipoicyclic"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define N 200010\r\nusing namespace std;\r\nint fa[N];\r\nint head[N], ver[2 * N], Next[2 * N], tot = 0;\r\nvoid add(int x, int y) {\r\n\tver[++tot] = y, Next[tot] = head[x], head[x] = tot;\r\n}\r\nint get(int x) {\r\n\tif(x == fa[x]) return x;\r\n\treturn fa[x] = get(fa[x]);\r\n}\r\nint n, m;\r\nvoid solve() {\r\n\ttot = 0;\r\n\tcin >> n >> m;\r\n\tstring s(n + 1);\r\n\tfor(int i = 1; i <= n; i++) {\r\n\t\tfa[i] = i;\r\n\t\thead[i] = 0;\r\n\t}\r\n\r\n\tvector<pair<int, int> > vec;\r\n\r\n\tvector<pair<int, int> > e1;\r\n\tset<int> st;\r\n\tfor(int i = 1; i <= m; i++) {\r\n\t\tint u, v;\r\n\t\tcin >> u >> v;\r\n\t\tif(u > v) swap(u, v);\r\n\t\te1.push_back(make_pair(u, v));\r\n\t\tadd(u, v);\r\n\t\tadd(v, u);\r\n\r\n\t\tint fu = get(u), fv = get(v);\r\n\t\tif(fu == fv) {\r\n\t\t\ts[i] = '1';\r\n\t\t\tst.insert(u);\r\n\t\t\tst.insert(v);\r\n\t\t\tvec.push_back(make_pair(u, v));\r\n\r\n\t\t} else {\r\n\t\t\ts[i] = '0';\r\n\t\t}\r\n\t\tfa[fu] = fv;\r\n\t}\r\n\tif(m == n + 2) {\r\n\t\tif(st.size() == 3) {//\u5982\u679cvec\u4e2d\u7684\u4e09\u6761\u8fb9\u6784\u6210\u4e86\u4e00\u4e2a\u4e09\u5143\u73af\r\n\t\t\tfor(int i = 0; i < e1.size(); i++) {\r\n\t\t\t\tif(e1[i] == vec[0]) {\r\n\t\t\t\t\ts[i] = '0';\r\n\t\t\t\t\tfor(int j = 0; j < e1.size(); j++) {\r\n\t\t\t\t\t\tif(j == i) continue;\r\n\t\t\t\t\t\tif(e1[j].first == vec[0].first || e1[j].second == vec[0].first) {\r\n\t\t\t\t\t\t\ts[j] = '1';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcout << s.substr(1) << endl;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t}\r\n\tcout << s.substr(1) << endl;\r\n}\r\nint main() {\r\n\tint T = 1;\r\n\tcin >> T;\r\n\twhile(T--) {\r\n\t\tsolve();\r\n\t}\r\n\treturn 0;\r\n}"
}