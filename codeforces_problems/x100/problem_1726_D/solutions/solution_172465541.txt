{
    "id": 172465541,
    "contestId": 1726,
    "creationTimeSeconds": 1663424237,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "amirhoseinfar1385"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 77,
    "timeConsumedMillis": 1278,
    "memoryConsumedBytes": 47718400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nint n,m;\r\nvector<bool>vis;\r\nvector<set<pair<int,int>>>adj;\r\nstring res;\r\nvector<int>bf,para;\r\nint rishe=1;\r\n\r\nvoid bfs(){\r\n\tif(bf.size()==0){\r\n\t\treturn ;\r\n\t}\r\n\tfor(auto x:bf){\r\n\t\tvis[x]=1;\r\n\t}\r\n\tvector<int>fake;\r\n\tfor(auto x:bf){\r\n\t\tfor(auto y:adj[x]){\r\n\t\t    if(y.first==para[x]){\r\n\t\t        continue;\r\n\t\t    }\r\n\t\t\tif(vis[y.first]==0){\r\n\t\t\t\tfake.push_back(y.first);\r\n\t\t\t\tvis[y.first]=1;\r\n                para[y.first]=x;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tres[y.second]='1';\r\n\t\t//\t\tcout<<x<<\" \"<<y.first<<endl;\r\n\t\t        auto xa=adj[x].lower_bound(make_pair(rishe,0));\r\n\t\t        if(xa!=adj[x].end()&&(*(xa)).first==rishe){\r\n\t\t            rishe=x;\r\n\t\t        }\r\n\t\t        else{\r\n\t\t            rishe=y.first;\r\n\t\t        }\r\n\t\t\t\tadj[y.first].erase(make_pair(x,y.second));\r\n\t\t\t\tadj[x].erase(y);\r\n\t\t\t\tm--;\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tbf=fake;\r\n\tbfs();\r\n}\r\n\r\nint main(){\r\n\tios::sync_with_stdio(0);\r\n\tcin.tie(0);\r\n\tcout.tie(0);\r\n\tint t;\r\n\tcin>>t;\r\n\tfor(int asd=0;asd<t;asd++){\r\n\t\tcin>>n>>m;\r\n\t\tres.clear();\r\n\t\trishe=1;\r\n\t//\tif(t==100000&&asd==40){\r\n\t//\t    \tcout<<n<<\" \"<<m<<endl;\r\n\t  //  }\r\n\t\tres.resize(m,'0');\r\n\t\tadj.clear();\r\n\t\tadj.resize(n+1);\r\n\t\tfor(int i=0;i<m;i++){\r\n\t\t    int u,v;\r\n\t\t\tcin>>u>>v;\r\n\t\t//\tif(t==100000&&asd==40){\r\n\t\t //   \tcout<<u<<\" \"<<v<<endl;\r\n\t    //\t}\r\n\t\t\tadj[u].insert(make_pair(v,i));\r\n\t\t\tadj[v].insert(make_pair(u,i));\r\n\t\t}\r\n\t\twhile(m!=n-1){\r\n\t\t    para.clear();\r\n\t\t    para.resize(n+1);\r\n\t\t\tvis.clear();\r\n\t\t\tvis.resize(n+2);\r\n\t\t\tbf.clear();\r\n\t\t\tbf.push_back(rishe);\r\n\t\t\tbfs();\r\n\t\t}\r\n    //\tif(t!=100000){\r\n\t\t\tcout<<res<<\"\\n\";\r\n\t//\t}\r\n\t//\tif(t==100000&&asd==40){\r\n\t//\t\tcout<<res<<endl;\r\n\t//\t}\r\n\t}\r\n}"
}