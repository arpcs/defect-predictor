{
    "id": 195396780,
    "contestId": 1726,
    "creationTimeSeconds": 1677637130,
    "relativeTimeSeconds": 5330,
    "problem": {
        "contestId": 1726,
        "index": "D",
        "name": "Edge Split",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "EricKong"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1677631800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 77,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 22016000,
    "source": "#pragma GCC optimize(2,3,\"Ofast\",\"unroll-loops\",\"-funroll-loops\")\r\n#include<bits/stdc++.h>\r\n#define fup(i,j,k) for(int i=j;i<=k;++i)\r\n#define fdw(i,j,k) for(int i=j;i>=k;--i)\r\n#define all(vec) vec.begin(),vec.end()\r\n#define mkp make_pair\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define ll long long\r\n#define ull unsigned long long \r\n#define pii pair<int,int>\r\n#define INF 0x3f3f3f3f\r\n#define LINF 0x3f3f3f3f3f3f3f3fll\r\nusing namespace std;\r\ninline char gc()\r\n{\r\n\tstatic char ibuf[1<<15],*ip1,*ip2;\r\n\tif(ip2==ip1) ip2=(ip1=ibuf)+fread(ibuf,1,1<<15,stdin);\r\n\treturn *ip1++;\r\n}\r\ntemplate<typename Tp> inline void read(Tp &x)\r\n{\r\n\tTp fh=1;x=0; char ch=gc();\r\n\twhile(!isdigit(ch)){if(ch=='-')fh=-1;ch=gc();}\r\n\twhile(isdigit(ch)){x=x*10+ch-'0';ch=gc();}\r\n\tx=x*fh;\r\n}\r\nconst int maxn=500005;\r\nint ecnt=0,to[maxn],hd[maxn],nxt[maxn],val[maxn];\r\ninline void add_edge(int u,int v,int w)\r\n{\r\n\tto[++ecnt]=v,val[ecnt]=w,nxt[ecnt]=hd[u],hd[u]=ecnt;\r\n\tto[++ecnt]=u,val[ecnt]=w,nxt[ecnt]=hd[v],hd[v]=ecnt;\r\n}\r\nint n,m,col[maxn],a[maxn],b[maxn],ans[maxn],fa[maxn];\r\nint vis[maxn];\r\ninline int find(int x){return fa[x]!=x?fa[x]=find(fa[x]):x;}\r\ninline int dfs(int u,int fa)\r\n{\r\n\tvis[u]=1;\r\n\tint ans=-1;\r\n\tfor(int p=hd[u];p;p=nxt[p]) \r\n\t{\r\n\t\tint v=to[p];\r\n\t\tif(v==fa) continue;\r\n\t\tif(vis[v]) {ans=val[p]; break;}\r\n\t\tint x=dfs(v,u);\r\n\t\tif(~x) {ans=x; break;}\r\n\t}\r\n\tvis[u]=0;\r\n\treturn ans;\r\n}\r\n/*\r\ninline int dfs(int u,int fa,vector<bool> vis)\r\n{\r\n\tvis[u]=1;\r\n\tfor(int p=hd[u];p;p=nxt[p])\r\n\t{\r\n\t\tint v=to[p];\r\n\t\tif(v==fa) continue;\r\n\t\tif(vis[v]) return val[p];\r\n\t\tint res=dfs(v,u,vis);\r\n\t\tif(~res) return res;\r\n    }\r\n    return -1;\r\n}*/\r\ninline void solve()\r\n{\r\n\tread(n),read(m);\r\n\tfup(i,1,m) ans[i]=0;\r\n\tfup(i,1,n) fa[i]=i,hd[i]=0;\r\n\tvector<int> vec; ecnt=0;\r\n\tfup(i,1,m) \r\n\t{\r\n\t\tread(a[i]),read(b[i]); int x=find(a[i]),y=find(b[i]);\r\n\t\tif(x!=y) fa[x]=y,ans[i]=1,add_edge(a[i],b[i],i);\r\n\t\telse vec.pb(i);\r\n\t}\r\n\tif(vec.size()==3)\r\n\t{\r\n\t\tset<int> iscyc;\r\n\t\tfor(int &i:vec) iscyc.insert(a[i]),iscyc.insert(b[i]);\r\n\t\tif(iscyc.size()==3)\r\n\t\t{\r\n//\t\t\tvector<bool> vis(n+5);\r\n\t\t\tfup(i,1,n) vis[i]=0;\r\n\t\t\tint u=a[vec[0]],v=b[vec[0]]; ans[vec[0]]=1,vis[u]=vis[v]=1;\r\n\t\t\tint qwq=dfs(u,v); if(~qwq) ans[qwq]=0;\r\n\t\t}\r\n\t}\r\n\tfup(i,1,m) printf(\"%d\",ans[i]); puts(\"\");\r\n}\r\nsigned main()\r\n{\r\n\tint T; cin>>T;\r\n\twhile(T--) solve();\r\n\treturn 0;\r\n}"
}