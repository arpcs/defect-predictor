{
    "id": 120516721,
    "contestId": 1111,
    "creationTimeSeconds": 1624620181,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1111,
        "index": "A",
        "name": "Superhero Transformation",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1000,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 1111,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1549208100
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 75,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <bitset>\n#include <cmath>\n#include <string>\n#include <stack>\n#include <set>\n#include <map>\n#include <queue>\nusing namespace std;\ntemplate<typename A,typename B>\nstring to_string(pair<A,B> p);\n\ntemplate<typename A,typename B,typename C>\nstring to_string(tuple<A,B,C> p);\n\ntemplate<typename A,typename B,typename C,typename D>\nstring to_string(tuple<A,B,C,D> p);\n\nstring to_string(const string &s)\n{\n    return '\"'+s+'\"';\n}\nstring to_string(const char *s)\n{\n    return to_string((string)s);\n}\nstring to_string(bool b)\n{\n    return (b?\"true\":\"false\");\n}\nstring to_string(vector<bool> v)\n{\n    bool first=true;\n    string res=\"{\";\n    for(int i=0;i<static_cast<int>(v.size());i++)\n    {\n        if(!first)\n        {\n            res+=\", \";\n        }\n        first=false;\n        res+=to_string(v[i]);\n    }\n    res+=\"}\";\n    return res;\n}\ntemplate<size_t N>\nstring to_string(bitset<N> v)\n{\n    string res=\"\";\n    for(size_t i=0;i<N;i++)\n    {\n        res+=static_cast<char>('0'+v[i]);\n    }\n    return res;\n}\ntemplate <typename A>\nstring to_string(A v)\n{\n    bool first=true;\n    string res=\"{\";\n    for(const auto &x:v)\n    {\n        if(!first)\n        {\n            res+=\", \";\n        }\n        first=false;\n        res+=to_string(x);\n    }\n    res+=\"}\";\n    return res;\n}\ntemplate<typename A,typename B>\nstring to_string(pair<A, B> p)\n{\n    return \"(\"+to_string(p.first)+\", \"+to_string(p.second)+\")\";\n}\ntemplate <typename A,typename B,typename C>\nstring to_string(tuple<A,B,C> p)\n{\n    return \"(\"+to_string(get<0>(p))+\", \"+to_string(get<1>(p))+\", \"+to_string(get<2>(p))+\")\";\n}\ntemplate<typename A,typename B,typename C,typename D>\nstring to_string(tuple<A,B,C,D> p)\n{\n    return \"(\"+to_string(get<0>(p))+\", \"+to_string(get<1>(p))+\",\"+to_string(get<2>(p))+\", \"+to_string(get<3>(p))+\")\";\n}\nvoid debug(){cerr<<endl;}\ntemplate<typename Head, typename... Tail>\nvoid debug(Head H,Tail...T)\n{\n    cerr<<\" \"<<to_string(H);\n    debug(T...);\n}\nstruct Fast_power\n{\n    long long integer(long long n,long long e,long long my_mod=9223372036854775807LL)\n    {\n        long long ans=1;\n        while(e)\n        {\n            if(e&1) ans=(ans*n)%my_mod,e--;\n            else n=(n*n)%my_mod,e>>=1;\n        }\n        return ans;\n    }\n    vector<vector<long long>> matrix_multiply(vector<vector<long long>> a,vector<vector<long long>> b)\n    {\n        vector<vector<long long>> c(a.size(),vector<long long>(b[0].size(),0));\n        for(int i=0;i<a.size();i++)\n            for(int q=0;q<b[0].size();q++)\n            {\n                long long num=0;\n                for(int e=0;e<a[0].size();i++)\n                    num+=a[i][e]*b[e][q];\n                c[i][q]=num;\n            }\n        return c;\n    }\n    // long long matrix(vector<vector<long long>> &n,long long e,vector<long long> &s,long long my_mod=9223372036854775807LL)//\u77e9\u9635\u5feb\u901f\u5e42\n    // {\n    //     vector<vector<long long>> ans(n.size(),vector<long long>(n.size(),1));\n    //     while(e)\n    //     {\n    //         if(e&1) ans=matrix_multiply(ans,n),e--;\n    //         else n=matrix_multiply(n,n),e>>=1;\n    //     }\n    // }\n};\nstruct Euclidean//\u6b27\u51e0\u91cc\u5f97 \n{\n    int gcdi(int a,int b)\n    {\n        return b?gcdi(b,a%b):a;\n    }\n    double gcdf(double a,double b,double accuracy)//\u6d6e\u70b9\u6570\u7684\u6700\u5927\u516c\u7ea6\u6570\n    {\n        return b<=accuracy?a:gcdf(b,fmod(a,b),accuracy);\n    }\n    //\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\n\n    //\u7c7b\u6b27\u51e0\u91cc\u5f97\n};\n\n#define DijkstraDist int \nconst int maxnD=250000+5;\nconst DijkstraDist INFD=0x3f3f3f3f;\nstruct Dijkstra\n{\n    struct Edge\n    {\n        int from,to;\n        DijkstraDist dist;\n    };\n    struct HeapNode\n    {\n        DijkstraDist d;\n        int u;\n        bool operator < (const HeapNode&rhs) const\n        {\n            return d>rhs.d;\n        }\n    };\n    vector<Edge> edges;\n    vector<int> G[maxnD];\n    bool done[maxnD];\n    DijkstraDist d[maxnD];\n    int p[maxnD],n;\n    void init(int n)\n    {\n        this->n=n;\n        for(int i=0;i<=n;i++) G[i].clear();\n        edges.clear();\n    }\n    void AddEdge(int from,int to,DijkstraDist dist)\n    {\n        edges.push_back((Edge){from,to,dist});\n        int m=edges.size();\n        G[from].push_back(m-1);\n    }\n    void dijkstra(int s)\n    {\n        priority_queue<HeapNode> q;\n        memset(d,INFD,sizeof(d));\n        d[s]=0;\n        memset(done,0,sizeof(done));\n        q.push((HeapNode){0,s});\n        while(!q.empty())\n        {\n            HeapNode x=q.top();\n            q.pop();\n            int u=x.u;\n            if(done[u]) continue;\n            done[u]=true;\n            for(int i=0;i<G[u].size();i++)\n            {\n                Edge& e=edges[G[u][i]];\n                if(d[e.to]>d[u]+e.dist)\n                {\n                    d[e.to]=d[u]+e.dist;\n                    p[e.to]=G[u][i];\n                    q.push((HeapNode){d[e.to],e.to});\n                }\n            }\n        }\n    }\n};\n\nconst int maxnL=500000+5;\nconst int INFL=0x3f3f3f3f;\nstruct LIS\n{\n    int g[maxnL],a[maxnL],d[maxnL];\n    void lis(int n)\n    {\n        for(int i=1;i<=n;i++) g[i]=INFL;\n        for(int i=1;i<n;i++)\n        {\n            int k=lower_bound(g+1,g+n+1,a[i])-g;\n            g[k]=a[i];\n        }\n    }\n};\nconst int maxnS=200000+5;\nstruct SegmentTree\n{\n    int a[maxnS];\n    int sumv[maxnS*4],minv[maxnS*4],maxv[maxnS*4],addv[maxnS*4],setv[maxnS*4];\n    int lc,rc,v;\n    int _min,_max,_sum;\n    void build(int l,int r,int o)\n    {\n        if(l==r) return void(sumv[o]=minv[o]=maxv[o]=a[l]);\n        build(l,(l+r)>>1,o<<1);\n        build(((l+r)>>1)+1,r,o<<1|1);\n    }\n    void maintain(int l,int r,int o)\n    {\n        sumv[o]=minv[o]=maxv[o]=a[l];\n        if(r>l)\n        {\n            sumv[o]=sumv[o<<1]+sumv[o<<1|1];\n            minv[o]=min(minv[o<<1],minv[o<<1|1]);\n            maxv[o]=max(maxv[o<<1],maxv[o<<1|1]);\n        }\n        minv[o]+=addv[o],maxv[o]+=addv[o],sumv[o]+=addv[o]*(r-l+1);\n    }\n    void update(int l,int r,int o)\n    {\n        if(l>=lc&&r<=rc) addv[o]+=v;\n        else\n        {\n            int m=(l+r)>>1;\n            if(lc<=m) update(l,(l+r)>>1,o<<1);\n            if(rc>m) update(((l+r)>>1)+1,r,o<<1|1);\n        }\n        maintain(l,r,o);\n    }\n    void query(int l,int r,int o,int add)\n    {\n        if(lc<=l&&r<=rc) \n        {\n            _sum+=sumv[o]+add*(r-l+1);\n            _min=min(_min,minv[o]+add);\n            _max=max(_max,maxv[o]+add);\n        }\n        else\n        {\n            int m=(l+r)>>1;\n            if(lc<=m) query(l,m,o<<1,add+addv[o]);\n            if(rc>m) query(m+1,r,o<<1|1,add+addv[o]);\n        }\n    }\n};\n\nconst int maxnB=400000+5;\nstruct BIT\n{\n    int c[maxnB],n; \n    int lowbit(int x)\n    {\n        return x&-x;\n    }\n    int sum(int x)\n    {\n        int ret=0;\n        while(x>0)\n        {\n            ret+=c[x];\n            x-=lowbit(x);\n        }\n        return ret;\n    }\n    void add(int x,int d)\n    {\n        while(x<=n)\n        {\n            c[x]+=d;\n            x+=lowbit(x);\n        }\n    }\n};\n\nconst int maxnEC=200000+5;\nstruct EXCRT//\u6269\u5c55\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\n{\n    //x%b[i]=a[i];\n    long long ai[maxnEC],bi[maxnEC],n;\n    inline long long exgcd(long long a,long long b,long long &x,long long &y)\n    {\n        if(!b)\n        {\n            x=1,y=0;\n            return a;\n        }\n        long long gcd=exgcd(b,a%b,x,y);\n        long long t=x;\n        x=y,y=t-(a/b)*y;//\u9012\u5f52\u89e3\u65b9\u7a0b\u3002 \n        return gcd;\n    }\n    inline long long mul(long long a,long long b,long long mod) //\u5fc5\u987b\u81ea\u5df1\u6253\u4e58\u6cd5\u4e0d\u7136\u4f1a\u7206long long \n    {\n        long long s=0;\n        while(b) \n        {\n            if(b&1) s=(s+a)%mod;\n            a=(a+a)%mod;\n            b>>=1;\n        }\n        return s%mod;\n    }\n    long long excrt()\n    {\n        long long x=0,y=0,k;\n        long long M=bi[1],ans=ai[1];//\u7b2c\u4e00\u4e2a\u65b9\u7a0b\u7684\u89e3\u7279\u5224\n        for(int i=2;i<=2;i++)\n        {\n            long long a=M,b=bi[i],c=(ai[i]-ans%b+b)%b;//ax\u2261c(mod b)\n            long long gcd=exgcd(a,b,x,y),bg=b/gcd;\n            if(c%gcd!=0) return -1; //\u662f\u5426\u65e0\u89e3\n            x=mul(x,c/gcd,bg);\n            ans+=x*M;//\u66f4\u65b0\u524dk\u4e2a\u65b9\u7a0b\u7ec4\u7684\u7b54\u6848\n            M*=bg;//M\u4e3a\u524dk\u4e2am\u7684lcm\n            ans=(ans%M+M)%M;\n        }\n        return (ans%M+M)%M;\n    }\n};\n\n#define PI acos(-1);\n#define fri freopen(\"in.txt\", \"r\", stdin)\n#define fro freopen(\"out.txt\", \"w\", stdout)\n#define pb push_back\n#define all(a) a.begin(),a.end()\n#define si(a) a.size()\n// #define in insert\n#define fora(i,l,r) for(int i=l;i<r;i++)\n#define forb(i,l,r) for(int i=l;i<=r;i++)\n#define forc(i,l,r) for(int i=l;i>r;i--)\n#define ford(i,l,r) for(int i=l;i>=r;i--)\n#define fi first\n#define ed second\ntypedef vector<int> vi;\ntypedef vector<vector<int>> vvi;\ntypedef vector<long long> vl;\ntypedef pair<int,int> pi;\ntypedef long long ll;\nconst int INF=0x3f3f3f3f;\nconst int maxn=1000+5;\nsigned main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    int arr[30]={0};\n    char s[6]={'a','e','i','o','u'};\n    for(int i=0;i<5;i++) arr[s[i]-'a']=1;\n    string s1,s2;\n    cin>>s1>>s2;\n    int ok=1;\n    if(s1.size()!=s2.size()) ok=0;\n    else\n    {\n        fora(i,0,s1.size())\n            if(arr[s1[i]-'a']!=arr[s2[i]-'a']) ok=0;\n    }\n    if(ok) cout<<\"Yes\";\n    else cout<<\"No\";\n\treturn 0;\n}\n\n \t\t  \t\t \t\t \t  \t  \t\t   \t  \t \t \t"
}