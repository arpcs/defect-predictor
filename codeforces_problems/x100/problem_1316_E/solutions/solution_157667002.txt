{
    "id": 157667002,
    "contestId": 1316,
    "creationTimeSeconds": 1652969407,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "LeonaRaging"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define fi first\r\n#define se second\r\n#define ll long long\r\n#define int long long\r\n#define pii pair<int,int>\r\nusing namespace std;\r\nconst ll mod = 1e9 + 7;\r\nconst int maxn = 1e5 + 4;\r\nconst int N = 7;\r\nconst int INF = 1e9;\r\n\r\nint n, p, k, s[maxn][1 << N], dp[maxn][1 << N];\r\npair<int,int> a[maxn];\r\n\r\nstruct Comp {\r\n    bool operator()(const pii &a, const pii &b)\r\n    {\r\n        return a.fi > b.fi;\r\n    }\r\n};\r\n\r\nint main()\r\n{\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0); cout.tie(0);\r\n    //freopen(\".INP\", \"r\", stdin);\r\n    //freopen(\".OUT\", \"w\", stdout);\r\n    cin >> n >> p >> k;\r\n    for (int i = 1; i <= n; i++) \r\n    {\r\n        cin >> a[i].fi;\r\n        a[i].se = i;\r\n    }\r\n    Comp Cmp;\r\n    sort(a + 1, a + 1 + n, Cmp);\r\n    for (int i = 1; i <= n; i++)\r\n        for (int j = 0; j < p; j++) cin >> s[i][j];\r\n    memset(dp, -1, sizeof dp);\r\n    dp[0][0] = 0;\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        for (int mask = 0; mask < (1 << p); mask++)\r\n        {\r\n            int idx = a[i].se, cnt = (i - 1) - __builtin_popcount(mask);\r\n            if (cnt < k) {\r\n                if (dp[i - 1][mask] != -1) dp[i][mask] = dp[i - 1][mask] + a[i].fi;\r\n            }       \r\n            else if (dp[i - 1][mask] != -1) dp[i][mask] = dp[i - 1][mask];\r\n            for (int j = 0; j < p; j++)\r\n            {\r\n                if (mask & (1 << j) and dp[i - 1][mask ^ (1 << j)] != -1)\r\n                    dp[i][mask] = max(dp[i][mask], dp[i - 1][mask ^ (1 << j)] + s[idx][j]);\r\n            }\r\n        }\r\n    }\r\n    cout << dp[n][(1 << p) - 1];\r\n}\r\n"
}