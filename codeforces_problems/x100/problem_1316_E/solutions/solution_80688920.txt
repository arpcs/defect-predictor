{
    "id": 80688920,
    "contestId": 1316,
    "creationTimeSeconds": 1589892808,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "Not-Afraid"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 124,
    "timeConsumedMillis": 1107,
    "memoryConsumedBytes": 121651200,
    "source": "// Don't Look\r\n\r\n#pragma optimize(\"O2\")\r\n#include <bits/stdc++.h> \r\n#include \"bits/stdc++.h\" \r\n\r\nusing namespace std;\r\n\r\n#define int long long\r\n#define fast ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n\r\n#ifndef bhupixb\r\n  #define var(...) \r\n  #define stl(...) \r\n#endif\r\n\r\nconst int N = 1e5;\r\nconst int inf = -1e15;\r\n\r\nint dp[N][1 << 7];\r\nint n, p, k, a[N];\r\n\r\nvector<vector<int>> cost;\r\nvector<int> sortedPerm;\r\n\r\nint go(int id, int mask) {  \r\n  // var(id, mask);\r\n  bitset<7> ok(mask);\r\n  int setBits = ok.count();\r\n  if (id == n) {\r\n    if (setBits == p) return 0;\r\n    return inf;\r\n  }\r\n\r\n  int &ref = dp[id][mask];  \r\n  if (ref != -1) return ref;\r\n\r\n  int orgInd = sortedPerm[id];\r\n  int ans = inf;\r\n  if (id - setBits + 1 <= k) {\r\n    ans = a[orgInd] + go(id + 1, mask);\r\n  }\r\n  else ans = go(id + 1, mask);\r\n  for (int i = 0; i < p; ++i) {\r\n    if (ok[i]) continue;\r\n    ans = max(ans, cost[orgInd][i] + go(id + 1, mask | (1 << i)));\r\n  }\r\n  return ref = ans;\r\n}\r\n\r\nsigned main() {\r\n  fast;\r\n  memset(dp, -1, sizeof dp);\r\n  cin >> n >> p >> k;\r\n  cost.resize(n, vector<int>(p));\r\n  sortedPerm.resize(n);\r\n  iota(sortedPerm.begin(), sortedPerm.end(), 0);\r\n  for (int i = 0; i < n; ++i) {\r\n    cin >> a[i];\r\n  }\r\n  for (auto &vec: cost) {\r\n    for (int &x: vec) {\r\n      cin >> x;      \r\n    }\r\n    // stl(vec);\r\n  }\r\n  sort(sortedPerm.rbegin(), sortedPerm.rend(), [&] (int x, int y) {\r\n    return a[x] < a[y]; // descending order\r\n  });\r\n  // stl(sortedPerm);\r\n  cout << go(0, 0) << '\\n';\r\n  return 0;\r\n}"
}