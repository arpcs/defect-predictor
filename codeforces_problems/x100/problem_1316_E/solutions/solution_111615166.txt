{
    "id": 111615166,
    "contestId": 1316,
    "creationTimeSeconds": 1617258382,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "VladHaivas0205"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define debug(x) cerr << #x << \" \" << x << \"\\n\"\r\n#define debug_with_space(x) cerr << #x << \" \" << x << \" \"\r\n\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef pair <ll, ll> pii;\r\ntypedef pair <ll, pii> muchie;\r\n\r\nconst ll NMAX = 100001;\r\nconst ll INF = (1 << 8);\r\nconst ll MOD = 1000000007;\r\nconst ll BLOCK = 101;\r\n\r\nll dp[NMAX][INF];\r\nll n,p,k;\r\npii v[NMAX];\r\nll s[NMAX][7];\r\n\r\nbool cmp(pii a, pii b){\r\n    return a > b;\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    ll i;\r\n    cin >> n >> p >> k;\r\n    for(i = 0;i < n;i++){\r\n        cin >> v[i].first;\r\n        v[i].second = i;\r\n    }\r\n    for(i = 0;i < n;i++){\r\n        for(ll j = 0;j < p;j++){\r\n            cin >> s[i][j];\r\n        }\r\n    }\r\n    for(i = 0;i < n;i++){\r\n        for(int j = 0;j < (1 << p);j++)\r\n            dp[i][j] = -2e9;\r\n    }\r\n    dp[0][0] = 0;\r\n    sort(v, v + n, cmp);\r\n    for(i = 0;i < n;i++){\r\n        for(ll mask = 1; mask < (1 << p)); mask++){\r\n            if(__builtin_popcount(mask) <= i)\r\n            dp[i][mask] = dp[i - 1][mask];\r\n            ll total = (i + 1) - __builtin_popcount(mask);\r\n            if(total <= k){\r\n                dp[i][mask] = max(dp[i][mask],dp[i - 1][mask] + v[i].first);\r\n            }\r\n            for(ll t = 0; t < p; t++){\r\n                if((mask & (1 << t))){\r\n                    dp[i][mask] = max(dp[i][mask], s[v[i].second][t] + dp[i - 1][(mask ^ (1 << t))]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n    cout << dp[n - 1][(1 << p) - 1];\r\n    return 0;\r\n}"
}