{
    "id": 88729113,
    "contestId": 1316,
    "creationTimeSeconds": 1596369762,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "TheScrasse"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 124,
    "timeConsumedMillis": 1075,
    "memoryConsumedBytes": 120832000,
    "source": "// 1316E\n// Team Building\n\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define nl \"\\n\"\n#define nf endl\n#define ll long long\n#define pb push_back\n#define jn treapdidsu\n\n#define INF (ll)1e18\n#define mod 1000000007\n#define maxn 100010\n\nll i, i1, j, k, k1, t, n, m, res, flag[10], b, p, dp[maxn][138], x, w;\narray<ll, 8> a[maxn];\n\nint main() {\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n\n    #if !ONLINE_JUDGE && !EVAL\n        ifstream cin(\"input.txt\");\n        ofstream cout(\"output.txt\");\n    #endif\n\n    cin >> n >> p >> k;\n    for (i = 1; i <= n; i++) {\n        for (j = 0; j <= 7; j++) {\n            a[i][j] = 0;\n        }\n    }\n\n    for (i = 1; i <= n; i++) {\n        cin >> a[i][0];\n    }\n\n    for (i = 1; i <= n; i++) {\n        for (j = 1; j <= p; j++) {\n            cin >> a[i][j];\n        }\n    }\n\n    sort(a + 1, a + n + 1); reverse(a + 1, a + n + 1);\n\n    m = 1 << p;\n    dp[0][0] = 0;\n    for (j = 1; j < m; j++) {\n        dp[0][j] = -INF;\n    }\n\n    for (i = 1; i <= n; i++) {\n        for (j = 0; j < m; j++) {\n            dp[i][j] = -INF;\n            x = __builtin_popcountll(j);\n            for (b = 0; b < p; b++) {\n                if (!((j >> b) & 1)) continue;\n                w = j - (1 << b);\n                dp[i][j] = max(dp[i][j], dp[i - 1][w] + a[i][b + 1]);\n            }\n\n            if (i <= x + k) {\n                dp[i][j] = max(dp[i][j], dp[i - 1][j] + a[i][0]);\n            } else {\n                dp[i][j] = max(dp[i][j], dp[i - 1][j]);\n            }\n        }\n    }\n\n    /* for (i = 0; i <= n; i++) {\n        for (j = 0; j < m; j++) {\n            cout << dp[i][j] << ' ';\n        }\n        cout << nl;\n    } */\n\n    cout << dp[n][m - 1];\n\n    return 0;\n}\n"
}