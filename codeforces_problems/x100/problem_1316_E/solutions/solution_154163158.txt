{
    "id": 154163158,
    "contestId": 1316,
    "creationTimeSeconds": 1650428079,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "check_C"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 124,
    "timeConsumedMillis": 2823,
    "memoryConsumedBytes": 114585600,
    "source": "// Bismillahir Rahmanir Rahim\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long int  ll;\r\ntypedef pair<int, int>PI;\r\ntypedef pair<ll, ll > PL;\r\ntypedef vector<int>VI;\r\ntypedef vector<ll>VL;\r\n#define FF first\r\n#define SS second\r\nconst int mod = 1e9 + 7;\r\nconst int INF = 1e9;\r\nconst int N = 1e5 + 5;\r\nll dp[N][130];\r\nint main()\r\n{\r\n\tios::sync_with_stdio(false);   cin.tie(0); cout.tie(0);\r\n\tint n, pla, aud;\r\n\tcin >> n >> pla >> aud;\r\n\tvector<PI>pr(n);\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\tcin >> pr[i].FF;\r\n\t\tpr[i].SS = i;\r\n\t}\r\n\tsort(pr.rbegin(), pr.rend());\r\n\tint a[n + 5][pla + 5], na[n + 5][pla + 5];\r\n\r\n\tfor (int i = 0; i < n; i++)\r\n\t\tfor (int j = 0; j < pla; j++)\r\n\t\t\tcin >> na[i][j];\r\n\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\tint idx = pr[i].SS;\r\n\t\tfor (int j = 0; j < pla; j++)\r\n\t\t\ta[i][j] = na[idx][j];\r\n\t}\r\n\r\n\tmemset(dp, -1, sizeof(dp));\r\n\r\n\tdp[0][0] = 0;\r\n\tfor (int mask = 0; mask < (1 << pla); mask++)\r\n\t{\r\n\t\tfor (int j = 0; j < pla; j++)\r\n\t\t{\r\n\r\n\t\t\tfor (int i = 1; i <= n; i++)\r\n\t\t\t{\r\n\r\n\t\t\t\tif (dp[i - 1][mask] != -1)\r\n\t\t\t\t{\r\n\t\t\t\t\tll not_take = dp[i - 1][mask];\r\n\t\t\t\t\tint rem = i - 1 - __builtin_popcount(mask);\r\n\t\t\t\t\tif (rem < aud)\r\n\t\t\t\t\t\tnot_take += pr[i - 1].FF;\r\n\t\t\t\t\tdp[i][mask] = max(dp[i][mask], not_take);\r\n\t\t\t\t}\r\n\t\t\t\tif (((mask >> j) & 1) and dp[i - 1][mask ^ (1 << j)] != -1)\r\n\t\t\t\t{\r\n\t\t\t\t\tll take = dp[i - 1][mask ^ (1 << j)] + a[i - 1][j];\r\n\t\t\t\t\tdp[i][mask] = max(dp[i][mask], take);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcout << dp[n][(1 << pla) - 1] << endl;\r\n\tcerr << \"time taken : \" << (float)clock() / CLOCKS_PER_SEC << \" secs\" << endl;\r\n\treturn 0;\r\n}"
}