{
    "id": 229585799,
    "contestId": 1316,
    "creationTimeSeconds": 1698161002,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "_priyanshu_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 61952000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\ntemplate <typename T>\r\nusing o_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\ntemplate <typename T>\r\nusing o_multiset = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n// member functions :\r\n// 1. order_of_key(k) : number of elements strictly lesser than k\r\n// 2. find_by_order(k) : k-th element in the set\r\ntemplate <class key, class value, class cmp = std::less<key>>\r\nusing o_map = __gnu_pbds::tree<key, value, cmp, __gnu_pbds::rb_tree_tag, __gnu_pbds::tree_order_statistics_node_update>;\r\n\r\nusing i64 = long long;\r\nconst i64 Mod = 1000000007;\r\nconst i64 MOD = 998244353;\r\nconst i64 Inf = 1E18;\r\nconst int dx[] = {0,  0, 1, -1, -1, -1,  1, 1};\r\nconst int dy[] = {1, -1, 0,  0, -1,  1, -1, 1};\r\n\r\n//FOR unordered_map<int,int,custom_hash> TO AVOID FALTU TLE'S COZ OF ANTIHASHES.\r\nstruct custom_hash {\r\n    static uint64_t splitmix64(uint64_t x) {\r\n        // http://xorshift.di.unimi.it/splitmix64.c\r\n        x += 0x9e3779b97f4a7c15;\r\n        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n        return x ^ (x >> 31);\r\n    }\r\n    size_t operator()(uint64_t x) const {\r\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n        return splitmix64(x + FIXED_RANDOM);\r\n    }\r\n};\r\n    \r\ntemplate <typename T>\r\nT roundup(T a, T b) {\r\n    return(a / b + ((a ^ b) > 0 && a % b));\r\n}\r\n\r\ntemplate <typename T>\r\nT choose(T n, T r) {\r\n    if(n < r) return 0LL; \r\n    T res = 1;\r\n    for(T e = 0 ; e < r ; e ++) {\r\n        res = res * (n - e);\r\n        res = res / (e + 1); \r\n    }\r\n    return res;\r\n}\r\n\r\ntemplate <typename T>\r\nbool expotwo(T n) {\r\n    T val = (n & (n - 1));\r\n    if(val == 0LL) return true; \r\n    return false;\r\n}\r\n\r\ntemplate <typename T>\r\nT modexpo(T b, T e, T mod) {\r\n    T ans = 1;\r\n    while(e) {\r\n        if(e & 1) ans = ((ans % mod) * (b % mod)) % mod;\r\n        b = ((b % mod) * (b % mod)) % mod;\r\n        e >>= 1;\r\n    }\r\n    return ans;\r\n}\r\n\r\ntemplate <typename T>\r\nT expo(T b, T e) {\r\n    T ans = 1;\r\n    while(e) {\r\n        if(e & 1) ans = ans * b;\r\n        b = b * b;\r\n        e >>= 1;\r\n    }\r\n    return ans;\r\n}\r\n\r\ntemplate <typename T>\r\nbool eprime(T n) {\r\n    if(n < 2) return false;\r\n    for(T e = 2; e * e <= n; e ++) {\r\n        if(n % e == 0) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\ntemplate <typename T>\r\nbool eparity(T x, T y) {\r\n    return !((x & 1) ^ (y & 1));\r\n}\r\n\r\ntemplate <typename T>\r\nstring number_to_string(T number) {\r\n    string res = \"\";\r\n    while(number) res += (char) ((number % 10) + '0'), number /= 10;\r\n    reverse(res.begin(), res.end());\r\n    return res;\r\n}\r\n\r\ntemplate <typename T, typename U> \r\nU string_to_number(T s, U flag) {\r\n    // flag = 0 :: integer\r\n    // flag = 0LL :: long long\r\n    U res = 0;\r\n    for(int i = 0; s[i] != '\\0'; i ++) {\r\n        res *= static_cast<U>(10);\r\n        res += (s[i] - '0');\r\n    }\r\n    return res;\r\n}\r\n\r\ntemplate <typename T>\r\nvoid amax(T& a, T b) { \r\n    a = max(a, b);\r\n}\r\n\r\ntemplate <typename T>\r\nvoid amin(T& a, T b) {\r\n    a = min(a, b);\r\n}\r\n\r\ntemplate <typename T>\r\nvoid add(T& a, T b, T M) {\r\n    a = ((a % M) + (b % M)) % M;\r\n}\r\n\r\ntemplate <typename T>\r\nvoid mul(T& a, T b, T M) {\r\n    a = ((a % M) * (b % M)) % M;\r\n}\r\n\r\ntemplate <typename T>\r\nvoid sub(T& a, T b, T M) {\r\n    a = (a - b + M) % M;\r\n}\r\n\r\n\r\n/* ------------------------------------------ lessgo -------------------------------------------------*/\r\n\r\n#pragma GCC optimize(\"O3,unroll-loops\")\r\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\r\n\r\n\r\nvoid Solution()\r\n{\r\n    \r\n    int n, p, k; cin >> n >> p >> k;\r\n    vector <i64> v(n);\r\n    for(auto &x : v) cin >> x;\r\n    vector <vector<i64>> s(n, vector <i64> (p));\r\n    for(int i = 0; i < n; i ++) {\r\n        for(int j = 0; j < p; j ++) {\r\n            cin >> s[i][j];\r\n        }\r\n    }\r\n    vector <int> index(n);\r\n    for(int i = 0; i < n; i ++) index[i] = i;\r\n    sort(index.begin(), index.end(), [&](int a, int b) {\r\n        return v[a] > v[b];\r\n    });\r\n    vector <vector<i64>> dp(n, vector <i64> (1 << p));\r\n    for(int i = 0; i < n; i ++) {\r\n        int idx = index[i];\r\n        for(int mask = 1; mask < (1 << p); mask ++) {\r\n            int have = __builtin_popcount(mask);\r\n            if(have > (i + 1)) continue;\r\n            if(i) amax(dp[i][mask], dp[i - 1][mask] + (i + 1 - have < k && (i + 1 != have) ? v[idx] : 0));\r\n            for(int j = 0; j < p; j ++) {\r\n                if((mask >> j) & 1) {\r\n                    if(i) amax(dp[i][mask], dp[i - 1][mask ^ (1 << j)] + s[idx][j]);\r\n                    else amax(dp[i][mask], s[idx][j]);\r\n                }\r\n            }\r\n        }\r\n        dp[i][0] = (i - 1 >= 0 ? dp[i - 1][0] : 0) + (i < k ? v[idx] : 0);\r\n    }\r\n    cout << dp[n - 1][(1 << p) - 1];\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);   \r\n    cout.tie(NULL);\r\n    int Test_case = 1;  // cin >> Test_case;\r\n    \r\n    while(Test_case --) Solution();\r\n    \r\n}\r\n"
}