{
    "id": 174596875,
    "contestId": 1316,
    "creationTimeSeconds": 1664871443,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "kkk20002"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 1669,
    "memoryConsumedBytes": 218009600,
    "source": "#include<bits/stdc++.h>\r\n \r\nusing namespace std;\r\n \r\nconst int mxn = 2e5 + 10, mxm = 1<<7;\r\n \r\nlong long dp[mxn][mxm], s[mxn][7];\r\n \r\npair<int, int> a[mxn];\r\n \r\nint main() {\r\n    int n, p, k;\r\n    cin >> n >> p >> k;\r\n    for (int i = 1; i <= n; i++) {\r\n        cin >> a[i].first;\r\n        a[i].first = -a[i].first;\r\n        a[i].second = i;\r\n    }\r\n    for (int i = 1; i <= n; i++) {\r\n        for (int j = 0; j < p; j++) {\r\n            cin >> s[i][j];\r\n        }\r\n    }\r\n    sort(a + 1, a + n + 1);\r\n    for (int i = 1; i <= n; i++) {\r\n        a[i].first = -a[i].first;\r\n    }\r\n    \r\n    int lim = (1<<p);\r\n    if (k) dp[1][0] = a[1].first;\r\n    for(int i = 0; i < p; i++) {\r\n        dp[1][(1 << i)] = s[a[1].second][i];\r\n    }\r\n    \r\n    for (int i = 2; i <= n; i++) {\r\n        int idx = a[i].second;\r\n        for (int m = 0; m < lim; m++) {\r\n            dp[i][m] = dp[i-1][m];\r\n            int cnt = __builtin_popcount(m);\r\n            if (i - cnt - 1 < k) {\r\n                \r\n                dp[i][m] += a[i].first;\r\n            }\r\n            \r\n            for (int j = 0; j < p; j++) {\r\n                if (!(m & (1<<j))) continue;\r\n                int m1 = m ^ (1<<j);\r\n                long long temp = dp[i - 1][m1] + s[idx][j];\r\n                if (temp > dp[i][m]) {\r\n                    dp[i][m] = temp;\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n    cout << dp[n][lim - 1] << '\\n';\r\n    return 0;\r\n}\r\n"
}