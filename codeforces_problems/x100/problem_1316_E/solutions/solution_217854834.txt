{
    "id": 217854834,
    "contestId": 1316,
    "creationTimeSeconds": 1691494896,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "bkifhr6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 763,
    "memoryConsumedBytes": 106188800,
    "source": "#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nconst int MAXN = 1e5 + 5, MAXP = 1 << 7;\n\nstruct Node {\n  int x, id;\n  bool operator <(const Node &i) const {\n    return x < i.x;\n  }\n} a[MAXN];\n\nint n, p, k, b[MAXN][7], c[MAXP];\nlong long dp[MAXN][MAXP];\n\nint main() {\n  cin >> n >> p >> k;\n  for (int i = 0; i < n; i++) {\n    cin >> a[i].x, a[i].id = i;\n  }\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < p; j++) {\n      cin >> b[i][j];\n    }\n  }\n  for (int i = 1; i < MAXP; i++) {\n    c[i] = c[i - i & (-i)] + 1;\n  }\n  sort(a, a + n);\n  for (int i = 1; i < (1 << p); i++) {\n    dp[n][i] = -1e18;\n  }\n  for (int i = n - 1; i >= 0; i--) {\n    for (int j = 0; j < (1 << p); j++) {\n      if (c[j] > n - i) continue;\n      dp[i][j] = max(0LL, dp[i + 1][j] + a[i].x * (c[j] + k >= n - i));\n      for (int k = 0; k < p; k++) {\n        if (j & (1 << k)) {\n          dp[i][j] = max(dp[i][j], dp[i + 1][j - (1 << k)] + b[a[i].id][k]);\n        }\n      }\n    }\n  }\n  cout << dp[0][(1 << p) - 1];\n  return 0;\n}\n\n    \t \t \t   \t\t  \t\t\t  \t \t \t  \t \t"
}