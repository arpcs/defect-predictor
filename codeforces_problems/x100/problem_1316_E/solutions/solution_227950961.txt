{
    "id": 227950961,
    "contestId": 1316,
    "creationTimeSeconds": 1697142666,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "kian_nouri"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define int long long int\ntypedef pair<int, int> pii;\nconst int MAXN = 1e5 + 10, MAXP = 8, oo = 1e15;\n\nint n, p, k, bigmask, a[MAXN], s[MAXP][MAXN], dp[MAXP][(1 << MAXP)], tmp[MAXP][(1 << MAXP)];\nvector<pii>vec;\nvector<int>bits[(1 << MAXP)];\n\nbool has_bit(int mask, int bit) {\n\treturn (mask >> bit) & 1;\n}\n\nvoid read_input() {\n\tcin >> n >> p >> k;\n\tbigmask = (1 << p) - 1;\n\tfor (int i = 1; i <= n; i++)\n\t\tcin >> a[i];\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 0; j < p; j++)\n\t\t\tcin >> s[i][j];\n\tfor (int i = 1; i <= n; i++) \n\t\tvec.push_back({a[i], i});\n\tsort(vec.begin(), vec.end(), greater<pii>());\n\tfor (int mask = 0; mask < (1 << p); mask++)\n\t\tfor (int l = 0; l < p; l++)\n\t\t\tif (has_bit(mask, l))\n\t\t\t\tbits[mask].push_back(l);\n}\n\nvoid solve() {\n\tint sum = 0;\n\tfor (int i = 0; i < k; i++)\n\t\tsum += vec[i].first;\n\tfill(&dp[0][0], &dp[0][0] + MAXP * (1 << MAXP), -oo);\n\tfill(&tmp[0][0], &tmp[0][0] + MAXP * (1 << MAXP), -oo);\n\ttmp[0][0] = dp[0][0] = sum;\n\tfor (int i = 0; i < n; i++) {\n\t\tauto[val, idx] = vec[i];\n\t\tfor (int j = k; j <= k + p; j++)\n\t\t\tfor (int mask = 0; mask < (1 << p); mask++) {\n\t\t\t\tdp[j - k][mask] = max(dp[j - k][mask], tmp[j - k][mask]);\n\t\t\t\tfor (int l: bits[mask]) {\n\t\t\t\t\tif (tmp[j - k][mask ^ (1 << l)] == -oo)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (i + 1 > j) \n\t\t\t\t\t\tdp[j - k][mask] = max(dp[j - k][mask], tmp[j - k][mask ^ (1 << l)] + s[idx][l]);\n\t\t\t\t\telse \n\t\t\t\t\t\tdp[j - k + 1][mask] = max(dp[j - k + 1][mask], tmp[j - k][mask ^ (1 << l)] + s[idx][l] + vec[j].first - val);\n\t\t\t\t}\n\t\t\t}\n\t\tfor (int j = k; j <= k + p; j++)\n\t\t\tfor (int mask = 0; mask < (1 << p); mask++)\n\t\t\t\ttmp[j][mask] = dp[j][mask];\n\t}\n\tint ans = 0;\n\tfor (int j = k; j <= k + p; j++)\n\t\tans = max(ans, dp[j - k][bigmask]);\n\tcout << ans << \"\\n\";\n}\n\nint32_t main() {\n\tread_input(), solve();\n}\n"
}