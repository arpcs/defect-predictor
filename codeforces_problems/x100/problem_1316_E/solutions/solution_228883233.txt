{
    "id": 228883233,
    "contestId": 1316,
    "creationTimeSeconds": 1697783334,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1316,
        "index": "E",
        "name": "Team Building",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1316,
        "members": [
            {
                "handle": "saavrm"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1583332500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 217,
    "memoryConsumedBytes": 57856000,
    "source": "#include <bits/stdc++.h>\n\n#include <bit>\n#include <chrono>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\n#ifdef LOCAL\n#include \"algo/debug.h\"\n#else\n#define TRACE(...)\n#endif  // !LOCAL\n\ntemplate <typename... Args>\nvoid input(Args &...args)\n{\n  ((cin >> args), ...);\n}\n\ntemplate <typename... Args>\nvoid print(Args... args)\n{\n  ((cout << args << \" \"), ...);\n}\n\ntemplate <typename... Args>\nvoid println(Args... args)\n{\n  ((cout << args << \" \"), ...);\n  cout << \"\\n\";\n}\n\ntemplate <typename T, typename U>\nvoid maxself(T &a, U b)\n{\n  a = max(a, T(b));\n}\n\ntemplate <typename T, typename U>\nvoid minself(T &a, U b)\n{\n  a = min(a, T(b));\n}\n\n#define EMPTY\n#define _if(cond, v1, v2) ((cond) ? v1 : v2)\n#define popcount(x) __builtin_popcount(x)\n\nvoid solve()\n{\n  int n, p, k;\n  cin >> n >> p >> k;\n  ll a[n];\n  for (int i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n\n  int pos[n];\n  iota(pos, pos + n, 0);\n  sort(pos, pos + n, [&](int i, int j) { return a[i] > a[j]; });\n\n  ll s[n][p];\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < p; j++) {\n      cin >> s[i][j];\n    }\n  }\n\n  int T = 1 << p;\n  ll dp[n + 1][T];\n  fill(&dp[0][0], &dp[0][0] + (n + 1) * T, 0);\n\n  TRACE(pos, n);\n  ll ans = 0;\n  for (int i = 1; i <= n; i++) {\n    for (int mask = 0; mask < T; mask++) {\n      int notplayers = i - 1 - popcount(mask);\n      if (notplayers < 0) continue;\n      // not using this i as a player\n      maxself(dp[i][mask], dp[i - 1][mask] + (notplayers < k) * a[pos[i - 1]]);\n\n      for (int j = 0; j < p; j++) {\n        if (mask & (1 << j)) continue;\n        // using this player at position j\n        int newmask = mask ^ (1 << j);\n        dp[i][newmask] = dp[i - 1][mask] + s[pos[i - 1]][j];\n      }\n    }\n  }\n  // for (int i = 0; i < n + 1; i++) {\n  //   for (int mask = 0; mask < T; mask++) {\n  //     cout << dp[i][mask] << \" \";\n  //   }\n  //   cout << endl;\n  // }\n  cout << dp[n][T - 1] << endl;\n}\n\nint main()\n{\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n#ifndef ONLINE_JUDGE\n  freopen(\"input.txt\", \"r\", stdin);\n#endif\n  solve();\n}\n"
}