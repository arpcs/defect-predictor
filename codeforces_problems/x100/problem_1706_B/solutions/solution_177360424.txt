{
    "id": 177360424,
    "contestId": 1706,
    "creationTimeSeconds": 1666378977,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "B",
        "name": "Making Towers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1100,
        "tags": [
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "black_fyre"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/* \r\n    Author : Sukhendu Patra\r\n*/\r\n#include<bits/stdc++.h>\r\n#define pb push_back\r\n#define pf push_front\r\n#define ppb pop_back\r\n#define fast_io ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\r\n#define all(x) (x).begin(), (x).end()\r\n#define loop(i, a, b) for(int i=a; i<b; i++)\r\n#define inf (1ll<<60)\r\n#define MOD 1000000007\r\n#define MOD1 998244353\r\n#define inf1 (int)1e9\r\n#define INF 1e18\r\n#define nline \"\\n\"\r\n#define mp make_pair\r\n#define ff first\r\n#define ss second\r\n#define PI 3.141592653589793238462\r\n#define set_bits __builtin_popcountll\r\n#define sz(x) ((int)(x).size())\r\n#define all(x) (x).begin(), (x).end()\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double lld;\r\n/*---------------------------------------------------------------------------------------------------------------------------*/\r\nll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}\r\nll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}\r\nvoid extendgcd(ll a, ll b, ll*v) {if (b == 0) {v[0] = 1; v[1] = 0; v[2] = a; return ;} extendgcd(b, a % b, v); ll x = v[1]; v[1] = v[0] - v[1] * (a / b); v[0] = x; return;} //pass an arry of size1 3\r\nll mminv(ll a, ll b) {ll arr[3]; extendgcd(a, b, arr); return arr[0];} //for non prime b\r\nll mminvprime(ll a, ll b) {return expo(a, b - 2, b);}\r\nbool revsort(ll a, ll b) {return a > b;}\r\nll combination(ll n, ll r, ll m, ll *fact, ll *ifact) {ll val1 = fact[n]; ll val2 = ifact[n - r]; ll val3 = ifact[r]; return (((val1 * val2) % m) * val3) % m;}\r\nvoid google(int t) {cout << \"Case #\" << t << \": \";}\r\nvector<ll> sieve(int n) {int*arr = new int[n + 1](); vector<ll> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}\r\nll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\r\nll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}\r\nll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}\r\nll mod_div(ll a, ll b, ll m) {a = a % m; b = b % m; return (mod_mul(a, mminvprime(b, m), m) + m) % m;}  //only for prime m\r\nll phin(ll n) {ll number = n; if (n % 2 == 0) {number /= 2; while (n % 2 == 0) n /= 2;} for (ll i = 3; i <= sqrt(n); i += 2) {if (n % i == 0) {while (n % i == 0)n /= i; number = (number / i * (i - 1));}} if (n > 1)number = (number / n * (n - 1)) ; return number;} //O(sqrt(N))\r\nll giveSqrt(ll x){ll low = 1, high = 3e9, ans = 1;while(low<=high){ll mid = (low+high)/2;if(mid*mid<=x){ans = mid;low = mid+1;}else high = mid-1;}return ans;}\r\n// ll getRandomNumber(ll l, ll r) {return uniform_int_distribution<ll>(l, r)(rng);} \r\n/*--------------------------------------------------------------------------------------------------------------------------*/\r\n// bool cmp(pair<int,int> a,pair <int,int> b){\r\n//     if(a.first!=b.first){\r\n//         return (a.first<b.first);\r\n//     }\r\n//     else{\r\n//         return (a.second<b.second);\r\n//     }\r\n// }\r\n// const int N = 1e7+10;\r\n// vector <bool> sieve1(N,1);\r\n// void createsieve(){\r\n//     sieve1[0]=false;sieve1[1]=false;\r\n//     for(int i = 2;i<=N;i++){\r\n//         if(sieve1[i] == true){\r\n//             for(int j = 2*i ; j<=N;j+=i){\r\n//                 sieve1[j]=false;\r\n//             }\r\n//         }\r\n//     }\r\n// }\r\n\r\nvoid solve(){\r\n    ll n;\r\n    cin >> n;\r\n    vector<ll> v(n);\r\n    \r\n    for(ll i=0 ; i<n ; ++i) cin >> v[i];\r\n       \r\n        sort(v.begin(),v.end());\r\n    for(ll k=n ; k>0 ; --k){\r\n        ll pointer = n-1, rounds = 0;\r\n        ll bobMovesSoFar = rounds;\r\n        \r\n        while(rounds<k && pointer>=bobMovesSoFar){\r\n            \r\n            ll aliceFound = 0;\r\n            bobMovesSoFar = rounds;\r\n            \r\n            while(!aliceFound && pointer>=bobMovesSoFar){    \r\n                if(v[pointer]<=k+1-(rounds+1)){\r\n                    rounds++;\r\n                    aliceFound = 1;\r\n                }\r\n                pointer--;\r\n            }\r\n        }\r\n        \r\n        if(rounds==k){\r\n            cout << k << endl;\r\n            return ;\r\n        }\r\n    }\r\n    \r\n    cout << 0 << endl;\r\n\r\n}\r\nint main()\r\n{\r\n    fast_io;\r\n    cout<<fixed;\r\n    cout<<setprecision(10);\r\n    int t=1;\r\n    cin>>t;\r\n    loop(i, 0, t)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}