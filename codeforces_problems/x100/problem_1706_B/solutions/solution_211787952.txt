{
    "id": 211787952,
    "contestId": 1706,
    "creationTimeSeconds": 1688273609,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "B",
        "name": "Making Towers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1100,
        "tags": [
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "lmo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 311,
    "memoryConsumedBytes": 74342400,
    "source": "from typing import List\nimport sys\n\n\ndef tower_height(n: int, blocks: List[int]) -> List[int]:\n    colored_blocks: List[List[int]] = [[] for _ in range(n + 1)]\n    for i, b in enumerate(blocks):\n        colored_blocks[b].append(i)\n\n    def color_height(c, i) -> int:\n        if i == 0:\n            return 1\n        elif (colored_blocks[c][i] - colored_blocks[c][i - 1]) % 2 == 1:\n            return 1 + color_height(c, i - 1)\n        else:\n            return color_height(c, i - 1)\n\n    res = []\n    for c in range(1, n + 1):\n        res.append(\n            color_height(c, len(colored_blocks[c]) - 1) if colored_blocks[c] else 0\n        )\n\n    return res\n\n\ndef run(stdin: str) -> str:\n    lines = (l for line in stdin.splitlines() if (l := line.strip()))\n    cases = int(next(lines))\n\n    stdout = []\n    for _ in range(cases):\n        n = int(next(lines))\n        blocks = list(map(int, next(lines).split()))\n\n        heights = tower_height(n, blocks)\n        stdout.append(\" \".join((str(h) for h in heights)))\n\n    return \"\\n\".join(stdout)\n\n\nif __name__ == \"__main__\":\n    cases = int(sys.stdin.readline())\n\n    stdout = []\n    for _ in range(cases):\n        n = int(sys.stdin.readline())\n        blocks = map(int, sys.stdin.readline().split())\n        print(\" \".join(map(str, tower_height(n, blocks))))\n"
}