{
    "id": 180750601,
    "contestId": 1706,
    "creationTimeSeconds": 1668345123,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "B",
        "name": "Making Towers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1100,
        "tags": [
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "hanghang2218"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "GNU C11",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// LUOGU_RID: 93957783\n#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\nint main()\r\n{\r\n    int t,n[1000],c[1000],r,s,i,k[100][100],a,b,d,e;\r\n    scanf (\"%d\",&t);\r\n    for (i=0;i<t;i++) {\r\n        scanf(\"%d\",&n[i]);\r\n            for(d=0;d<n[i];d++) {\r\n                k[i][d]=0;\r\n            }\r\n            for(r=0;r<n[i];r++) {\r\n                scanf(\"%d\",&c[r]);\r\n                k[i][c[r]-1]=1;\r\n                if (r>0) {\r\n                    e=r;\r\n                    for (s=r-1;s>-1;s--) {\r\n                        if(c[s]==c[e] && (e-s-1)%2==0) {\r\n                            k[i][c[r]-1]=k[i][c[r]-1]+1;\r\n                            e=s;\r\n                        }\r\n\r\n                    }\r\n                }\r\n               /* if (r>0) {\r\n                    for (s=r-1;s<r;s--) {\r\n                        //printf (\"%d %d %d$\\n\",s,r,c[s]);\r\n                        /*if(c[s]==c[e] && (e-s-1)%2==0) {\r\n                            k[i][c[r]-1]=k[i][c[r]-1]+1;\r\n                            e=s;\r\n                            break;\r\n                        }*/\r\n                        /*if ((r-s-e))\r\n\r\n                            //printf (\"%d$$\\n\",c[s]);\r\n                             break;*/\r\n                           /*if((r-s-1)%2!=0){\r\n                                k[i][c[r]-1]=k[i][c[r]-1]-1;\r\n                            }\r\n                            else {\r\n                            k[i][c[r]-1]=k[i][c[r]-1]+1;\r\n                            //printf (\"%d$$\\n\",c[s]);\r\n                             break;\r\n                            }*/\r\n\r\n                    //}\r\n                    //printf(\"\\n\");\r\n                //}\r\n            }\r\n    }\r\n    for (a=0;a<t;a++) {\r\n        for (b=0;b<n[a];b++) {\r\n            printf(\"%d \",k[a][b]);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n\r\n}\r\n"
}