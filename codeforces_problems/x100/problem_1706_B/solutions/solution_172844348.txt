{
    "id": 172844348,
    "contestId": 1706,
    "creationTimeSeconds": 1663684437,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "B",
        "name": "Making Towers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1100,
        "tags": [
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "Kijionu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 19,
    "timeConsumedMillis": 312,
    "memoryConsumedBytes": 16076800,
    "source": "\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\nusing vi = vector<int>;\r\nusing vvi = vector<vector<int>>;\r\nusing vl = vector<ll>;\r\nusing vvl = vector<vector<ll>>;\r\nusing pi = pair<int, int>;\r\nusing pl = pair<ll, ll>;\r\nusing ld = long double;\r\n\r\n#define all(x) begin(x), end(x)\r\n#define rall(x) rbegin(x), rend(x)\r\n#define PB push_back\r\n#define MP make_pair\r\n#define F first\r\n#define S second\r\n#define endl '\\n'\r\n#define forn(i, n) for(ll i = 0; i < n; i++)\r\n#define fora(i, a, n) for(ll i = a; i < n; i++)\r\n#define readi(e) int e; cin >> e\r\n#define readl(e) ll e; cin >> e\r\n#define reads(e) string e; cin >> e\r\n#define T int tt; cin >> tt; while(tt--)\r\n#define py cout<<\"YES\"<<endl;\r\n#define pn cout<<\"NO\"<<endl;\r\n\r\ntemplate<typename U>\r\nvoid print(U arr) {\r\n\tfor(auto element: arr) {\r\n\t\tcout << element << \" \";\r\n\t}\r\n\tcout << endl;\r\n}\r\n\r\n// read and write into files, rather than standard i/o\r\nvoid setup(string str) {\r\n\tfreopen((str+\".in\").c_str(), \"r\", stdin);\r\n\tfreopen((str+\".out\").c_str(), \"w\", stdout);\r\n}\r\n\r\nconst int M = 1e9+7;\r\nconst int N = 1000000;\r\n\r\n\r\nll mod(ll x){\r\n  return (x%M + M)%M;\r\n}\r\nll add(ll a , ll b){\r\n  return mod(mod(a)+mod(b));\r\n}\r\nll mul(ll a,ll b){\r\n  return mod(mod(a)*mod(b));\r\n}\r\n\r\nll pow(int a,int b){\r\n  int ans = 1;\r\n  while(b){\r\n    if(b&1){\r\n      ans = (ans*a)%M;\r\n    }\r\n    a = (a*a)%M;\r\n  }\r\n  return ans;\r\n}\r\n\r\nbool arr[9000001];\r\n\r\n\r\n\r\nint setBitNumber(int n)\r\n{\r\n    if (n == 0)\r\n        return 0;\r\n \r\n    int msb = 0;\r\n    n = n / 2;\r\n    while (n != 0) {\r\n        n = n / 2;\r\n        msb++;\r\n    }\r\n \r\n    return (1 << msb);\r\n}\r\n\r\nlong long nCr(int n,int r)\r\n\t{\r\n\t\tif(n==r)\treturn 1;\r\n\t\telse if (r==0)\treturn 1;\r\n\t\telse return ((nCr(n-1,r-1)+nCr(n-1,r))%M);\r\n\t}\r\n\r\n\r\n\r\n// void dfs(int v,vector<int>& visited,vector<int> adj[],vector<int>& color){\r\n//     visited[v] = 1;\r\n//     for(auto it:adj[v]){\r\n//         if(!visited[it]){\r\n//           color[it] = 1-color[v];\r\n//           dfs(it,visited,adj,color);\r\n//         }\r\n//     }\r\n// }\r\n\r\nvoid dfs(int r,int c,vector<vector<char>>& grid,vector<vector<int>>& visited){\r\n  if(r<1 || r>=grid.size() || c<1 || c>=grid[1].size()){\r\n    return;\r\n  }\r\n  if(visited[r][c]) return;\r\n  if(grid[r][c] == '#') return;\r\n  visited[r][c] = 1;\r\n  dfs(r,c+1,grid,visited);\r\n  dfs(r,c-1,grid,visited);\r\n  dfs(r-1,c,grid,visited);\r\n  dfs(r+1,c,grid,visited);\r\n}\r\n\r\nint getSum(long long n) {\r\n  int sum = 0;\r\n  int m = n;\r\n  while(n > 0) {    \r\n    m = n % 10;    \r\n    sum = sum + m;    \r\n    n = n / 10;    \r\n  } \r\n  return sum;\r\n}\r\n\r\nlong long  gcd(ll a,ll b)\r\n\t{\r\n\t    if (b==0) return a;\r\n\t    return gcd(b,a%b);\r\n\t}\r\n\r\n\r\nbool compare(pair<int,int> &p,pair<int,int> &q){\r\n\tif(p.first != q.first){\r\n    return p.first<q.first;\r\n  } return p.second>q.second;\r\n}\r\n\r\n\r\nbool sign(int x){\r\n  return x>0;\r\n}\r\n\r\nll pairs(ll n){\r\n  return n*(n-1)/2;\r\n}\r\nint pre(int x){\r\n  return (x+M)%M;\r\n}\r\n\r\n\r\n\r\nbool possible(int k,int n,int a,int b,int m){\r\n  if(m>n) return false;\r\n  int cnt = m*a ;\r\n  int rem = max(0,n-m);\r\n  if(cnt+rem*b > k) return false;\r\n  return true;\r\n}\r\nll query(int x,int y){\r\n    ll res ;\r\n    cout<<\"?\"<<\" \"<<x<<\" \"<<y;\r\n    cin>>res;\r\n    return res;\r\n}\r\nvoid solve(){\r\nint n;\r\ncin>>n;\r\nvi vec(n);\r\nforn(i,n) cin>>vec[i];\r\nmap<int,vector<int>> mp;\r\nfor(int i = 0;i<n;i++){\r\n    mp[vec[i]].push_back(i);\r\n}\r\nvector<int> ans(n,0);\r\nfor(auto it:mp){\r\n    vector<int>& temp = it.second;\r\n    int val = it.first;\r\n    int pre = temp[0];\r\n     int cnt = 1;\r\n    for(int i= 1;i<temp.size();i++){\r\n       \r\n        if((temp[i]-pre)%2 != 0){\r\n            cnt++;\r\n            pre = temp[i];\r\n        }\r\n    }\r\n    ans[val-1] = cnt;\r\n}\r\nprint(ans);\r\n}\r\n  \r\n\r\n\r\n\r\n\t\r\n\r\n\r\n\r\nint main()\r\n{ \r\n  int t;\r\n  cin>>t;\r\n  while(t--){\r\n     solve();\r\n  }\r\n  // solve();\r\n  }\r\n"
}