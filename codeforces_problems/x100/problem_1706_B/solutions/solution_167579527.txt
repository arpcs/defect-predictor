{
    "id": 167579527,
    "contestId": 1706,
    "creationTimeSeconds": 1660014884,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "B",
        "name": "Making Towers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1100,
        "tags": [
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "tonmoy1912"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 19,
    "timeConsumedMillis": 421,
    "memoryConsumedBytes": 9318400,
    "source": "// #include<bits/stdc++.h>\r\n// using namespace std;\r\n\r\n// int main(){\r\n//     int t;\r\n//     cin>>t;\r\n//     while(t>0){\r\n//         int n;\r\n//         cin>>n;\r\n//         //taking input\r\n//         int *arr=new int[n];\r\n//         for(int i=0;i<n;i++){\r\n//             cin>>arr[i];\r\n//         }\r\n\r\n//         //storing element,last index,max tower in map\r\n//         multimap<int,pair<int,int>> map;\r\n//         for(int i=0;i<n;i++){\r\n//             if(map.count(arr[i])==0){\r\n//                 map.insert({arr[i],{i,1}});//key=element ,second.first=last index, second.second=tower height\r\n//             }\r\n//             else{\r\n//                 int flag=1;\r\n//                 auto it=map.find(arr[i]);\r\n//                 //creating new tower from different last index\r\n//                 for(int j=0;j<map.count(arr[i]);j++,it++){\r\n//                     if(((i-(*it).second.first)%2)!=0){\r\n//                         (*it).second.second++;\r\n//                         (*it).second.first=i;\r\n//                         flag=0;\r\n//                         //break;\r\n//                     }\r\n//                 }\r\n//                 if(flag){\r\n//                     map.insert({arr[i],{i,1}});\r\n//                 }\r\n//             }\r\n//         }\r\n//         vector<int> ans;\r\n//         //storing max tower size in ans vector\r\n//         for(int i=1;i<=n;i++){\r\n//             if(map.count(i)==0){\r\n//                 ans.push_back(0);\r\n//             }\r\n//             else{\r\n//                 int max_ans=0;\r\n//                 auto it=map.find(i);\r\n//                 for(int j=0;j<map.count(i);j++,it++){\r\n//                     max_ans=max(max_ans,(*it).second.second);\r\n//                 }\r\n//                 ans.push_back(max_ans);\r\n//             }\r\n//         }\r\n//         //printint ans\r\n//         for(auto it:ans){\r\n//             cout<<it<<\" \";\r\n//         }\r\n//         cout<<endl;\r\n//         delete []arr;\r\n//         t--;\r\n//     }\r\n//     return 0;\r\n// }\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\nint main(){\r\n    int t;\r\n    cin>>t;\r\n    while(t>0){\r\n        ll n;cin>>n;\r\n        vector<ll> v;map<ll,ll> m;for(ll i=0;i<n;i++){ll x;cin>>x;v.push_back(x);m.insert({x,-1});}\r\n        map<ll,ll> ans;\r\n        for(ll i=0;i<n;i++){\r\n            if(m[v[i]]==-1){m[v[i]]=i;ans[v[i]]++;}\r\n            else{\r\n                if(m[v[i]]%2!=i%2){ans[v[i]]++;m[v[i]]=i;}\r\n            }\r\n        }\r\n        for(ll i=0;i<n;i++){cout<<ans[i+1]<<\" \";}cout<<endl;\r\n        t--;\r\n    }\r\n    return 0;\r\n}"
}