{
    "id": 167103430,
    "contestId": 1706,
    "creationTimeSeconds": 1659703840,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "B",
        "name": "Making Towers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1100,
        "tags": [
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "Prabhat_007"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 19,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 4505600,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\n#define M 1000000007\r\n#define nline '\\n'\r\nusing namespace std;\r\nll count_of_digits(ll n);\r\nll sum_of_digits(ll n);\r\nll power(int a, int b);\r\nint n;\r\nvector<int> v[100100];\r\nvoid answer(int x)\r\n{\r\n\r\n    if (!v[x].size())\r\n    {\r\n        cout << 0 << \" \";\r\n        return;\r\n    }\r\n\r\n    int curr = v[x][0];\r\n    int ans = 1;\r\n\r\n    for (int i : v[x])\r\n    {\r\n        if ((i & 1) != (curr & 1))\r\n        {\r\n            ans++;\r\n            curr = i;\r\n        }\r\n    }\r\n\r\n    cout << ans << \" \";\r\n}\r\nvoid solve()\r\n{\r\n\r\n    cin >> n;\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        v[i].clear();\r\n    }\r\n\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        int x;\r\n        cin >> x;\r\n        v[x].push_back(i);\r\n    }\r\n    for (int i = 1; i <= n; i++)\r\n\r\n    {\r\n        answer(i);\r\n        \r\n    }\r\n    cout<<nline;\r\n}\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    ll t;\r\n    cin >> t;\r\n    while (t--)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\nll sum_of_digits(ll n)\r\n{\r\n    ll sum = 0;\r\n    while (n > 0)\r\n    {\r\n        sum += n % 10;\r\n        n /= 10;\r\n    }\r\n    return sum;\r\n}\r\nll count_of_digits(ll n)\r\n{\r\n    ll count = 0;\r\n    while (n > 0)\r\n    {\r\n        n /= 10;\r\n        count++;\r\n    }\r\n    return count;\r\n}\r\nll power(int a, int b)\r\n{\r\n    if (b == 0)\r\n        return 1;\r\n    int res = power(a, b / 2);\r\n    if (b & 1)\r\n    {\r\n        return (a * (res * res) % M) % M;\r\n    }\r\n    else\r\n    {\r\n        return (res * res) % M;\r\n    }\r\n}\r\n"
}