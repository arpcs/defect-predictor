{
    "id": 165408002,
    "contestId": 1706,
    "creationTimeSeconds": 1658568653,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "B",
        "name": "Making Towers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1100,
        "tags": [
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "jagerknight"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 19,
    "timeConsumedMillis": 108,
    "memoryConsumedBytes": 15462400,
    "source": "#include<bits/stdc++.h>\n\nusing namespace std;\n#define int long long int\n\nvoid les_go() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    set<int> s[n][2];\n    for (int i = 0; i < n; ++i) {\n        cin >> a[i];\n        a[i]--;\n        if (i & 1)s[a[i]][1].emplace(i);\n        else s[a[i]][0].emplace(i);\n    }\n    for (int i = 0; i < n; ++i) {\n        int ans = 0, cnt = 0;\n        for (int j: {0, 1}) {\n            if (!s[i][j].empty()) {\n                int first = *s[i][j].begin();\n                cnt = 1;\n                while (true) {\n                    auto it = s[i][1 ^ j].upper_bound(first);\n                    if (it == s[i][1 ^ j].end())break;\n                    ++cnt;\n                    first = *it;\n                    it = s[i][j].upper_bound(first);\n                    if (it == s[i][j].end())break;\n                    ++cnt;\n                    first = *it;\n                }\n                ans = max(ans, cnt);\n            }\n        }\n        cout << ans << ' ';\n    }\n    cout << '\\n';\n}\n\n\nsigned main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n    int tc = 1;\n    cin >> tc;\n    for (int i = 1; i <= tc; ++i) {\n        les_go();\n    }\n    return 0;\n}"
}