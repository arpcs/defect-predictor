{
    "id": 206394227,
    "contestId": 1706,
    "creationTimeSeconds": 1684458657,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1706,
        "index": "B",
        "name": "Making Towers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1100,
        "tags": [
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1706,
        "members": [
            {
                "handle": "Stcodeforce"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658154900
    },
    "programmingLanguage": "GNU C11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nvoid maxSize(int color, vector<int>& colors) {\n  int n = colors.size();\n\n  vector<pair<int, int>> seq(n, {0, 0});\n  for (int i = 1; i <= n; i++) {\n    for (int j = 0; j < n; j++) {\n      if (colors[i - 1] == color) {\n        int diff = i - seq[j][0] - 1;\n        if (i > seq[j][0] && diff % 2 == 0) {\n          seq[j][0] = i;\n          seq[j][1]++;\n          break;\n        }\n      }\n    }\n  }\n\n  int ret = 0;\n  for (int i = 0; i < n; i++) {\n    ret = max(ret, seq[i][1]);\n  }\n  cout << ret << \" \";\n}\n\nint main() {\n  string word;\n  int idx = 0;\n  int n = 0;\n  int end = 0;\n  vector<int> data;\n  getline(cin, word, \" \");\n  while (getline(cin, word, \" \")) {\n    int val = stoi(word);\n    if (idx <= end) {\n      data.push_back(val);\n    } else {\n      for (int i = 1; i <= n; i++) {\n        maxSize(i, data);\n        cout << endl;\n      }\n      n = val;\n      end = idx + n;\n      data.clear();\n    }\n    idx++;\n  }\n  return 0;\n}\n"
}