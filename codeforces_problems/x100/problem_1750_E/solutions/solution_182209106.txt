{
    "id": 182209106,
    "contestId": 1750,
    "creationTimeSeconds": 1669184287,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1750,
        "index": "E",
        "name": "Bracket Cost",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1750,
        "members": [
            {
                "handle": "eyangch"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1667745300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 29,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 13312000,
    "source": "#include <bits/stdc++.h>\r\n#define endl '\\n'\r\n#define eat cin\r\n#define moo cout\r\n#define int long long\r\n\r\nusing namespace std;\r\n\r\nstruct DSU{\r\n\tint par[200005], sz[200005], mn[200005], c[200005], l[200005], r[200005];\r\n\tvoid init(int N, int (&p)[200005]){\r\n\t\tfill(sz, sz+N, 1);\r\n\t\tcopy(p, p+N, mn);\r\n\t\tiota(par, par+N, 0);\r\n\t\tiota(l, l+N, 0);\r\n\t\tiota(r, r+N, 0);\r\n\t\tiota(c, c+N, 0);\r\n\t}\r\n\tint find(int u){\r\n\t\tif(u == par[u]) return u;\r\n\t\treturn (par[u] = find(par[u]));\r\n\t}\r\n\tvoid un(int u, int v){\r\n\t\tu = find(u), v = find(v);\r\n\t\tif(u == v) return;\r\n\t\tif(sz[u] < sz[v]) swap(u, v);\r\n\t\tsz[u] += sz[v];\r\n\t\tpar[v] = par[u];\r\n\t\tl[u] = min(l[u], l[v]);\r\n\t\tr[u] = max(r[u], r[v]);\r\n\t\tif(mn[u] > mn[v]){\r\n\t\t\tc[u] = c[v];\r\n\t\t}\r\n\t\tmn[u] = min(mn[u], mn[v]);\r\n\t}\r\n};\r\n\r\nint T, N, P[200005], I[200005];\r\nstring S;\r\nDSU dsu;\r\n\r\nint32_t main(){\r\n\teat.tie(0) -> sync_with_stdio(0);\r\n\teat >> T;\r\n\twhile(T--){\r\n\t\teat >> N >> S;\r\n\t\tP[0] = 0;\r\n\t\tfor(int i = 1; i <= N; i++){\r\n\t\t\tif(S[i-1] == '('){\r\n\t\t\t\tP[i] = P[i-1] + 1;\r\n\t\t\t}else{\r\n\t\t\t\tP[i] = P[i-1] - 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tdsu.init(N+1, P);\r\n\t\tiota(I, I+N+1, 0);\r\n\t\tsort(I, I+N+1, [](int a, int b){\r\n\t\t\tif(P[a] == P[b]) return a > b;\r\n\t\t\treturn P[a] < P[b];\r\n\t\t});\r\n\t\tint add = 0;\r\n\t\tfor(int i = 0; i < N+1; i++){\r\n\t\t\tint j = I[i];\r\n\t\t\tadd += P[j] * i;\r\n\t\t}\r\n\t\tint sub = 0;\r\n\t\tfor(int i = N; i >= 0; i--){\r\n\t\t\t//moo << i << endl; moo.flush();\r\n\t\t\tint j = I[i];\r\n\t\t\tint r = j+1;\r\n\t\t\twhile(r <= N){\r\n\t\t\t\tr = dsu.find(r);\r\n\t\t\t\tif(dsu.mn[r] > P[j]){\r\n\t\t\t\t\tdsu.un(j, r);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tr = dsu.c[r];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tr = dsu.find(r);\r\n\t\t\t\tr = dsu.r[r]+1;\r\n\t\t\t}\r\n\t\t\tint l = j-1;\r\n\t\t\twhile(l >= 0){\r\n\t\t\t\tl = dsu.find(l);\r\n\t\t\t\tif(dsu.mn[l] >= P[j]){\r\n\t\t\t\t\tdsu.un(j, l);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tl = dsu.c[l];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tl = dsu.find(l);\r\n\t\t\t\tl = dsu.l[l]-1;\r\n\t\t\t}\r\n\t\t\tint d = (r-j) * (j-l) - 1;\r\n\t\t\t//moo << j << ' ' << P[j] << ' ' << l << ' ' << r << ' ' << d << endl;\r\n\t\t\tsub += d * P[j];\r\n\t\t}\r\n\t\t//moo << sub << endl;\r\n\t\tmoo << add - sub << endl;\r\n\t}\r\n}"
}