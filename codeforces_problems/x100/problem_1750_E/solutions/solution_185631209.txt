{
    "id": 185631209,
    "contestId": 1750,
    "creationTimeSeconds": 1671285149,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1750,
        "index": "E",
        "name": "Bracket Cost",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1750,
        "members": [
            {
                "handle": "Rohit_saini"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1667745300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/*#include<bits/stdc++.h>\r\nusing namespace std;\r\nvoid change(string* b,string* c,int a,int b,int size){\r\n    for (int i = a; i <= b; i++)\r\n    {\r\n        if (b[i]=='1')\r\n        {\r\n            b[i]=0;\r\n        }\r\n        else\r\n        {\r\n            b[i]=1;\r\n        }\r\n    }\r\n    for (int i = 0; i < a; i++)\r\n    {\r\n        if (c[i]=='1')\r\n        {\r\n            c[i]=0;\r\n        }\r\n        else\r\n        {\r\n            c[i]=1;\r\n        }\r\n    }\r\n    for (int i = b+1; i < size i++)\r\n    {\r\n        if (c[i]=='1')\r\n        {\r\n            c[i]=0;\r\n        }\r\n        else\r\n        {\r\n            c[i]=1;\r\n        }\r\n    }\r\n}\r\nint main(){\r\n    long long int x;\r\n    cin>>x;\r\n    while (x!=0)\r\n    {\r\n        int a;\r\n        cin>>a;\r\n        string* b;\r\n        string* c;\r\n        cin>>b;\r\n        cin>>c;\r\n        int srt;\r\n        int lst;\r\n        for (int i = 0; i < a; i++)\r\n        {\r\n            if (b[i]=='1')\r\n            {\r\n                change(b,c,,,a)\r\n            }\r\n            \r\n        }\r\n        \r\n        x-=1;\r\n    }\r\n} */\r\n/*\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nint main(){\r\n    long long int x;\r\n    cin>>x;\r\n    while (x!=0)\r\n    {\r\n        long long int n;\r\n        cin>>n;\r\n        string a;\r\n        string b;\r\n        cin>>a;\r\n        cin>>b;\r\n        int same=0;\r\n        int diff=0;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            if (a[i]==b[i])\r\n            {\r\n                same+=1;\r\n            }\r\n            else\r\n            {\r\n                diff+=1;\r\n            } \r\n        }\r\n        if (same==0 or diff==0)\r\n        {\r\n            cout<<\"YES\"<<endl;\r\n            int z=0;\r\n            int count=0;\r\n            queue<pair<int, int> > q;\r\n            while (z<n)\r\n            {\r\n                int start=-1;\r\n                int end=-1;\r\n                while(a[z]=='1')\r\n                {\r\n                    if (start==-1)\r\n                    {\r\n                        start=z;\r\n                        end=z;\r\n                    }\r\n                    else\r\n                    {\r\n                        end=z;\r\n                    }\r\n                    a[z]='0';\r\n                    z+=1;\r\n                }\r\n                if(start!=-1){\r\n                    count+=1;\r\n                    q.push({start+1,end+1});\r\n                }\r\n                /*\r\n                if (start!=-1)\r\n                {\r\n                    count+=1;\r\n                    q.push({start+1,end+1});\r\n                    for (int i = 0; i < start; i++)\r\n                    {\r\n                        if (b[i]=='1')\r\n                        {\r\n                            b[i]='0';\r\n                        }\r\n                        else\r\n                        {\r\n                            b[i]='1';\r\n                        }\r\n                        \r\n                    }\r\n                    for (int i = end+1; i < n; i++)\r\n                    {\r\n                        if (b[i]=='1')\r\n                        {\r\n                            b[i]='0';\r\n                        }\r\n                        else\r\n                        {\r\n                            b[i]='1';\r\n                        }\r\n                    }\r\n                   \r\n                }\r\n                z+=1;\r\n            }\r\n            if ((diff!=0 and count%2!=0) or (same!=0 and count%2==0))\r\n            {\r\n                cout<<count<<endl;\r\n                while (!q.empty())\r\n                {\r\n                    int f=q.front().first;\r\n                    int s=q.front().second;\r\n                    cout<<f<<\" \"<<s<<endl;\r\n                    q.pop();\r\n                }\r\n            }\r\n            else\r\n            {\r\n                cout<<count+3<<endl;\r\n                while (!q.empty())\r\n                {\r\n                    int f=q.front().first;\r\n                    int s=q.front().second;\r\n                    cout<<f<<\" \"<<s<<endl;\r\n                    q.pop();\r\n                }\r\n                cout<<1<<\" \"<<n<<endl;\r\n                cout<<1<<\" \"<<1<<endl;\r\n                cout<<2<<\" \"<<n<<endl;\r\n            }\r\n            \r\n        }\r\n        else\r\n        {\r\n            cout<<\"NO\"<<endl;\r\n        }\r\n        \r\n        x-=1;\r\n    }\r\n    \r\n} */\r\n/*\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nvector<int> wheel(long long int n) {\r\n    vector<int> factorization;\r\n    for (int d : {2, 3, 5}) {\r\n        if(n % d == 0)\r\n            factorization.push_back(d);\r\n        while (n % d == 0) {\r\n            n /= d;\r\n        }\r\n    }\r\n    static array<int, 8> increments = {4, 2, 4, 2, 4, 6, 2, 6};\r\n    int i = 0;\r\n    for (long long d = 7; d * d <= n; d += increments[i++]) {\r\n        if(n % d == 0)\r\n            factorization.push_back(d);\r\n        while (n % d == 0) {\r\n            n /= d;\r\n        }\r\n        if (i == 8)\r\n            i = 0;\r\n    }\r\n    if (n > 1)\r\n        factorization.push_back(n);\r\n    return factorization;\r\n}\r\nint get_multiple(long long int m,long long int prev,long long int num){\r\n    vector<int> factors=wheel(prev/num);\r\n    long long int totalMul=m/num;\r\n    long long int res=totalMul;\r\n    long long int facSize=factors.size();\r\n    for (long long int i = 1; i < (1<<facSize); i++)\r\n    {\r\n        int parity=__builtin_popcount(i)&1;\r\n        long long int curr=1;\r\n        for (long long int j = 0; j < facSize; j++)\r\n        {\r\n            if ((i>>j)&1)\r\n            {\r\n                curr*=factors[j];\r\n            }\r\n            \r\n        }\r\n        if (parity)\r\n        {\r\n            res-=totalMul/curr;\r\n        }\r\n        else\r\n        {\r\n            res+=totalMul/curr;\r\n        }\r\n    }\r\n    return res;\r\n}\r\nbool solve(){\r\n    long long int n,m;\r\n    cin>>n>>m;\r\n    vector<int> v(n);\r\n    for (long long int i = 0; i < n; i++)\r\n    {\r\n        cin>>v[i];\r\n    }\r\n    for (long long int i = 1; i < n; i++)\r\n    {\r\n        if (v[i-1]%v[i]!=0)\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n    int ans=1;\r\n    for (long long int i = 1; i < n; i++)\r\n    {\r\n        if (v[i-1]==v[i])\r\n        {\r\n            ans*=m/v[i];\r\n        }\r\n        else\r\n        {\r\n            ans*=get_multiple(m,v[i-1],v[i]);\r\n        }\r\n        \r\n    }\r\n    cout<<ans<<endl;\r\n    return true;\r\n}\r\nint main(){\r\n    int x;\r\n    cin>>x;\r\n    while (x--)\r\n    {\r\n        if (solve())\r\n        {\r\n            //cout<<\"YES\"<<endl;\r\n        }\r\n        else{\r\n            cout<<0<<endl;\r\n        }\r\n    }\r\n    \r\n} */\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nint max(int a,int b){\r\n    if (a>=b)\r\n    {\r\n        return a;\r\n    }\r\n    else\r\n    {\r\n        return b;\r\n    }\r\n    \r\n}\r\nint main(){\r\n    long long int x;\r\n    cin>>x;\r\n    while (x!=0)\r\n    {\r\n        long long int a;\r\n        cin>>a;\r\n        string s;\r\n        cin>>s;\r\n        stack<char> str;\r\n        long long int sep_count=0;\r\n        long long int res=a;\r\n        for (long long int i = 0; i < a-1; i++)\r\n        {\r\n            if (s[i]=='(')\r\n            {\r\n                str.push(s[i]);\r\n            }\r\n            else\r\n            {\r\n                sep_count+=1;\r\n            }\r\n            \r\n            for (long long int j = i+1; j < a; j++)\r\n            {\r\n                if ((str.empty() or str.top()=='(') and s[j]=='(')\r\n                {\r\n                    str.push(s[j]);\r\n                }\r\n                else if(str.top()=='(' and s[j]==')')\r\n                {\r\n                    str.pop();\r\n                }\r\n                else\r\n                {\r\n                    sep_count+=1;\r\n                }\r\n                res+=max(str.size(),sep_count); \r\n            }\r\n            sep_count=0;\r\n            while (!str.empty())\r\n            {\r\n                str.pop();\r\n            }\r\n        }\r\n        cout<<res<<endl;\r\n        x-=1;\r\n    }\r\n    \r\n}"
}