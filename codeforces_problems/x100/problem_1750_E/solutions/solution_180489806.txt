{
    "id": 180489806,
    "contestId": 1750,
    "creationTimeSeconds": 1668183010,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1750,
        "index": "E",
        "name": "Bracket Cost",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1750,
        "members": [
            {
                "handle": "0wuming0"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1667745300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 29,
    "timeConsumedMillis": 420,
    "memoryConsumedBytes": 18227200,
    "source": "#include\"bits/stdc++.h\"\r\nusing namespace std;\r\n#define ll long long\r\nll c[1000006];\r\nint num[1000006];\r\nint lowbit(int x)\r\n{\r\n    return x&(-x);\r\n}\r\nll getsum(int x)\r\n{\r\n    ll ans=0;\r\n    for(int i=x;i>0;i-=lowbit(i))\r\n    {\r\n        ans+=c[i];\r\n    }\r\n    return ans;\r\n}\r\nll getnum(int x)\r\n{\r\n    ll ans=0;\r\n    for(int i=x;i>0;i-=lowbit(i))\r\n    {\r\n        ans+=num[i];\r\n    }\r\n    return ans;\r\n}\r\nvoid update(int x,int value)\r\n{\r\n\r\n    for(int i=x;i<=500000;i+=lowbit(i))\r\n    {\r\n        c[i]+=value;\r\n        if(value>0)num[i]++;\r\n        else num[i]--;\r\n    }\r\n}\r\nll ans;\r\nint dp[500005];\r\nll dp2[500005];\r\nvoid solve2(char s[],int n)\r\n{//cout<<\"<<\"<<n<<endl;\r\n    if(n==1)\r\n    {\r\n        if(s[0]==')')ans++;\r\n        return;\r\n    }\r\n    int m=n/2;\r\n    int k=0,mk=0;\r\n    ll len=n-m;\r\n    int add=n+10;\r\n    for(int i=m;i<n;i++)\r\n    {\r\n        if(s[i]==')')k--;\r\n        else k++;\r\n        mk=min(k,mk);\r\n        dp[mk+add]++;\r\n        dp2[mk+add]+=mk;//cout<<\"?\"<<mk<<endl;\r\n    }\r\n    for(int i=1;i<add*2;i++)\r\n    {\r\n        dp[i]+=dp[i-1];\r\n        dp2[i]+=dp2[i-1];\r\n    }\r\n    k=0;mk=0;\r\n    for(int i=m-1;i>=0;i--)\r\n    {\r\n        if(s[i]==')')k--,mk--;\r\n        else k++,mk++;\r\n        if(mk>0)mk=0;//cout<<\">>\"<<mk<<\" \"<<k<<endl;\r\n        ans+=-mk*(ll)(n-m);//cout<<\"??\"<<(mk-k)*(ll)dp[mk-k+add]-dp2[mk-k+add]<<endl;\r\n        ans+=(mk-k)*(ll)dp[mk-k+add]-dp2[mk-k+add];\r\n        //<=[mk-k];\r\n    }\r\n    for(int i=0;i<add*2;i++)\r\n    {\r\n        dp[i]=0;\r\n        dp2[i]=0;\r\n    }//cout<<\"!\"<<ans<<endl;\r\n    solve2(s,m);\r\n    solve2(s+m,n-m);\r\n}\r\nchar s[200005];\r\nvoid solve(int n)\r\n{\r\n    int add=250000;\r\n    int k=0,mk=0;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        update(k+add,k+add);\r\n        if(s[i]=='(')k--;\r\n        else k++;\r\n        mk=max(mk,k);\r\n        ll b=getnum(k+add);\r\n        ans+=b*(k+add)-getsum(k+add);\r\n    }\r\n    k=0;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        update(k+add,-k-add);\r\n        if(s[i]=='(')k--;\r\n        else k++;\r\n    }\r\n    solve2(s,n);\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        int n;\r\n        cin>>n;\r\n        scanf(\"%s\",s);\r\n        solve(n);\r\n        for(int i=0,j=n-1;i<j;i++,j--)swap(s[i],s[j]);\r\n        for(int i=0;i<n;i++)if(s[i]=='(')s[i]=')';\r\n        else s[i]='(';\r\n        solve(n);\r\n        //\r\n        cout<<ans/2<<endl;\r\n        ans=0;\r\n    }\r\n    return 0;\r\n}\r\n/*\r\n20\r\n2\r\n))\r\n*/\r\n"
}