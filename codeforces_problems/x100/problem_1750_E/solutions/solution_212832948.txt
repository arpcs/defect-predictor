{
    "id": 212832948,
    "contestId": 1750,
    "creationTimeSeconds": 1688822633,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1750,
        "index": "E",
        "name": "Bracket Cost",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1750,
        "members": [
            {
                "handle": "blx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1667745300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 2969600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 2e5 + 100;\r\nint n;\r\nint a[N];\r\nint pre[N],nxt[N];\r\nsigned main()\r\n{\r\n    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n    int T;cin >> T;\r\n    while(T--){\r\n        cin >> n;\r\n        string s;cin >> s;\r\n        s = \" \" + s;\r\n        a[0] = 0;\r\n        for(int i = 1; i <= n; ++i){\r\n            if(s[i] == '(')a[i] = a[i - 1] + 1;\r\n            else a[i] = a[i - 1] - 1;\r\n        }\r\n        long long ans = 0;\r\n        stack<int> st;\r\n        for(int i = 0; i <= n; ++i){\r\n            while(!st.empty() && a[st.top()] > a[i]){\r\n                nxt[st.top()] = i;\r\n                st.pop();\r\n            }\r\n            st.push(i);\r\n        }\r\n        while(!st.empty()){\r\n            nxt[st.top()] = n + 1;\r\n            st.pop();\r\n        }\r\n        for(int i = n; i >= 0; --i){\r\n            while(!st.empty() && a[st.top()] >= a[i]){\r\n                pre[st.top()] = i;\r\n                st.pop();\r\n            }\r\n            st.push(i);\r\n        }\r\n        while(!st.empty()){\r\n            pre[st.top()] = -1;\r\n            st.pop();\r\n        }\r\n        for(int i = 0; i <= n; ++i){\r\n            ans -= 1ll * a[i] * ((i - pre[i]) * (nxt[i] - i) - 1);\r\n        }\r\n        sort(a,a + n + 1);\r\n        for(int i = 1; i <= n; ++i)\r\n            ans += 1ll * i * a[i];\r\n        cout << ans << '\\n';\r\n    }\r\n    return 0;\r\n}"
}