{
    "id": 180609696,
    "contestId": 1750,
    "creationTimeSeconds": 1668263356,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1750,
        "index": "E",
        "name": "Bracket Cost",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1750,
        "members": [
            {
                "handle": "fvogel"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1667745300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 29,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 8396800,
    "source": "/*\r\n * File created on 11/12/2022 at 15:14:42.\r\n * Link to problem: \r\n * Description: \r\n * Time complexity: O()\r\n * Space complexity: O()\r\n * Status: ---\r\n * Copyright: \u24b8 2022 Francois Vogel\r\n*/\r\n\r\n#include <bits/stdc++.h>\r\n\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n#define pii pair<int, int>\r\n#define f first\r\n#define s second\r\n\r\n#define vi vector<int>\r\n#define all(x) x.begin(), x.end()\r\n#define sz(x) (int)((x).size())\r\n#define pb push_back\r\n#define ins insert\r\n#define cls clear\r\n\r\n#define int ll\r\n#define ll long long\r\n#define ld long double\r\n\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\r\n\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n    string raw;\r\n    cin >> raw;\r\n    n++;\r\n    int b [n];\r\n    b[0] = 0;\r\n    for (int i = 1; i < n; i++) b[i] = b[i-1]+(raw[i-1]=='(' ? 1 : -1);\r\n    int res = 0;\r\n    vi sorted;\r\n    for (int i : b) sorted.pb(i);\r\n    sort(all(sorted));\r\n    for (int i = 0; i < n; i++) res += i*sorted[i];\r\n    int smallerLeft [n];\r\n    vi stack;\r\n    for (int i = 0; i < n; i++) {\r\n        while (!stack.empty() && b[stack.back()] >= b[i]) stack.pop_back();\r\n        smallerLeft[i] = sz(stack) ? stack.back() : -1;\r\n        stack.pb(i);\r\n    }\r\n    int smallerRight [n];\r\n    stack.clear();\r\n    for (int i = n-1; i >= 0; i--) {\r\n        while (!stack.empty() && b[stack.back()] > b[i]) stack.pop_back();\r\n        smallerRight[i] = sz(stack) ? stack.back() : n;\r\n        stack.pb(i);\r\n    }\r\n    for (int i = 0; i < n; i++) {\r\n        int rangeA = i-smallerLeft[i];\r\n        int rangeB = smallerRight[i]-i;\r\n        res -= rangeA*rangeB*b[i];\r\n    }\r\n    for (int i = 0; i < n; i++) res += b[i];\r\n    cout << res;\r\n    cout << '\\n';\r\n}\r\n\r\nsigned main() {\r\n    cin.tie(0);\r\n    ios_base::sync_with_stdio(0);\r\n\r\n    int n;\r\n    cin >> n;\r\n    while (n--) solve();\r\n\r\n    cout.flush();\r\n    int d = 0;\r\n    d++;\r\n}"
}