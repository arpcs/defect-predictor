{
    "id": 187532438,
    "contestId": 1750,
    "creationTimeSeconds": 1672584130,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1750,
        "index": "E",
        "name": "Bracket Cost",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1750,
        "members": [
            {
                "handle": "shehabadel"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1667745300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 29,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 11980800,
    "source": "/**\r\n *    author:  tourist\r\n *    created: 06.11.2022 20:54:05       \r\n**/\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#ifdef LOCAL\r\n#include \"algo/debug.h\"\r\n#else\r\n#define debug(...) 42\r\n#endif\r\n\r\ntemplate <typename T>\r\nclass fenwick {\r\n public:\r\n  vector<T> fenw;\r\n  int n;\r\n\r\n  fenwick(int _n) : n(_n) {\r\n    fenw.resize(n);\r\n  }\r\n\r\n  void modify(int x, T v) {\r\n    while (x < n) {\r\n      fenw[x] += v;\r\n      x |= (x + 1);\r\n    }\r\n  }\r\n\r\n  T get(int x) {\r\n    T v{};\r\n    while (x >= 0) {\r\n      v += fenw[x];\r\n      x = (x & (x + 1)) - 1;\r\n    }\r\n    return v;\r\n  }\r\n};\r\n\r\nint main() {\r\n  ios::sync_with_stdio(false);\r\n  cin.tie(0);\r\n  int tt;\r\n  cin >> tt;\r\n  while (tt--) {\r\n    int n;\r\n    cin >> n;\r\n    string s;\r\n    cin >> s;\r\n    vector<int> a(n + 1);\r\n    for (int i = 0; i < n; i++) {\r\n      a[i + 1] = a[i] + (s[i] == '(' ? 1 : -1);\r\n    }\r\n    int mn = *min_element(a.begin(), a.end());\r\n    for (int i = 0; i <= n; i++) {\r\n      a[i] -= mn;\r\n      assert(0 <= a[i] && a[i] <= n);\r\n    }\r\n    long long ans = 0;\r\n    fenwick<long long> f0(n + 1);\r\n    fenwick<long long> f1(n + 1);\r\n    for (int i = 0; i <= n; i++) {\r\n      ans += f0.get(a[i]) * a[i] - f1.get(a[i]);\r\n      f0.modify(a[i], +1);\r\n      f1.modify(a[i], +a[i]);\r\n    }\r\n    vector<long long> pref(n + 2);\r\n    for (int i = 0; i <= n; i++) {\r\n      pref[i + 1] = pref[i] + a[i];\r\n    }\r\n    vector<int> pr(n + 1);\r\n    vector<int> ne(n + 1);\r\n    for (int i = 0; i <= n; i++) {\r\n      pr[i] = i - 1;\r\n      ne[i] = i + 1;\r\n    }\r\n    vector<vector<int>> at(n + 1);\r\n    for (int i = 0; i <= n; i++) {\r\n      at[a[i]].push_back(i);\r\n    }\r\n    for (int val = n; val >= 0; val--) {\r\n      for (int i : at[val]) {\r\n        int L = pr[i] + 1;\r\n        int R = ne[i];\r\n        long long cur = (pref[i] - pref[L]) - (long long) a[i] * (i - L);\r\n        cur *= R - i;\r\n        ans += cur;\r\n        if (pr[i] != -1) {\r\n          ne[pr[i]] = ne[i];\r\n        }\r\n        if (ne[i] != n + 1) {\r\n          pr[ne[i]] = pr[i];\r\n        }\r\n      }\r\n    }\r\n    cout << ans << '\\n';\r\n  }\r\n  return 0;\r\n}\r\n"
}