{
    "id": 183157531,
    "contestId": 1750,
    "creationTimeSeconds": 1669711843,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1750,
        "index": "E",
        "name": "Bracket Cost",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1750,
        "members": [
            {
                "handle": "wuhufly"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1667745300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 13414400,
    "source": "#include <bits/stdc++.h>\r\n#define debug(x) cout << #x << \": \" << x << \"\\n\"\r\nusing namespace std;\r\n\r\nconstexpr int N = 1e6 + 5, inf = 0x3f3f3f3f;\r\n\r\nusing ll = long long;\r\ntemplate <typename T> struct BIT {\r\n  const int n;\r\n  std::vector<T> a;\r\n  BIT(int n) : n(n), a(n + 1, 0) {}\r\n  void add(int x, T v) {\r\n    if (x <= 0)\r\n      return;\r\n    for (int i = x; i <= n; i += i & -i) {\r\n      a[i] += v;\r\n    }\r\n  }\r\n  void rangeAdd(int l, int r, T v) {\r\n    add(l, v);\r\n    add(r + 1, -v);\r\n  }\r\n  T sum(int x) {\r\n    T ans = 0;\r\n    for (int i = x; i > 0; i -= i & -i) {\r\n      ans += a[i];\r\n    }\r\n    return ans;\r\n  }\r\n};\r\nint sta[N] = {0};\r\nvoid Solve() {\r\n  int n;\r\n  cin >> n;\r\n  BIT<ll> f1(2 * (n + 1)), f2(2 * (n + 1));\r\n  string s;\r\n  cin >> s;\r\n  vector<int> suf(n + 1, 0), l(n + 2, 0), r(n + 2, 0);\r\n\r\n  for (int i = 1; i <= n; ++i)\r\n    suf[i] = suf[i - 1] + (s[i - 1] == '(' ? 1 : -1);\r\n  ll ans = 0, top = 0, run = 0;\r\n  for (int i = 0; i <= n; ++i) {\r\n    ans += 1ll * suf[i] * f1.sum(suf[i] + n + 1);\r\n    ans += 1ll * f2.sum(2 * n + 1) - f2.sum(suf[i] + n + 1);\r\n    f2.add(suf[i] + n + 1, suf[i]);\r\n    f1.add(suf[i] + n + 1, 1);\r\n  }\r\n  sta[0] = -1;\r\n  for (int i = 0; i <= n; ++i) {\r\n    while (top && suf[i] <= suf[sta[top]])\r\n      top--;\r\n    l[i] = sta[top];\r\n    sta[++top] = i;\r\n  }\r\n  top = 0;\r\n  sta[0] = n + 1; \r\n  for (int i = n; i >= 0; --i) {\r\n    while (top && suf[i] < suf[sta[top]])\r\n      top--;\r\n    r[i] = sta[top];\r\n    sta[++top] = i;\r\n  }\r\n  for(int i = 1; i <= n; ++i) {\r\n    //cout << l[i] << \" \" << r[i] << \"\\n\";\r\n    ans -= 1ll * ((i - l[i]) * (r[i] - i) - 1) * suf[i];\r\n  }\r\n  cout << ans << \"\\n\";\r\n  return;\r\n}\r\nsigned main() {\r\n  cin.tie(nullptr)->sync_with_stdio(false);\r\n  cout.tie(nullptr);\r\n  int T = 1;\r\n  cin >> T;\r\n  while (T--) {\r\n    Solve();\r\n  }\r\n  return 0;\r\n}\r\n/*\r\n\r\n*/"
}