{
    "id": 181223092,
    "contestId": 1750,
    "creationTimeSeconds": 1668614856,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1750,
        "index": "E",
        "name": "Bracket Cost",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1750,
        "members": [
            {
                "handle": "sicupu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1667745300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 1126400,
    "source": "#include <bits/stdc++.h>\n#define REP(i,n) for (int (i) = 0; (i) < (n); ++(i))\n#define FOR(i,L,R)  for (int (i) = (L); (i) <= (R); ++(i))\n#define ROF(i,S,F)  for (int (i) = (S); (i) >= (F); --(i))\n#define UP(x,y,p) auto x=(p).first; auto y=(p).second;\n#define CLR(arr) memset( (arr), 0, sizeof (arr) )\n#define TC int num_cases;cin>>num_cases;for(int tc=1;tc<=num_cases;++tc)\nvoid IO(){std::ios_base::sync_with_stdio(0);std::cin.tie(0);}\nusing namespace std; typedef int64_t i64; typedef vector<i64> vi; typedef vector<vi> vvi; typedef pair<i64,i64> pii; typedef vector<pii> vii; typedef vector<vii> vvii;\nchar __buffer[1024]; void log(const char* fmt, ...){ va_list args; va_start(args,fmt); vsnprintf(__buffer,1024,fmt,args); va_end(args); cout<<__buffer; }\nvoid dd(const char* fmt, ...){ \n#ifdef DEBUG\nva_list args; va_start(args,fmt); vsnprintf(__buffer,1024,fmt,args); va_end(args); cout<< \"\\33[1;34m\" << __buffer; cout << \"\\033[0m\" << flush;\n#endif\n}\n\nint n;\nstring s;\nvi R, B;\nint mark[200100];\n\nvoid UPD(vi& tree, int x,int val, int L = 0, int R = 2*n, int p=1) {\n  if(L>R)return;\n  if (x < L || R < x) return;\n  if (L == x && x == R) {\n    tree[p]+= val;\n    assert(tree[p] >= 0);\n    return;\n  }\n  int M = (L+R)/2;\n  UPD(tree, x, val, L, M, 2*p);\n  UPD(tree, x, val, M+1, R, 2*p+1);\n  tree[p] = tree[2*p] + tree[2*p+1];\n}\n\nvoid upd(vi& tree, int x, int val) {\n  UPD(tree, x+n, val);\n}\n\ni64 RMQ(vi& tree, int S, int T, int L=0, int R=2*n, int p = 1) {\n  if (R < S || T < L) return 0;\n  if (S <= L && R <= T) {\n    return tree[p];\n  }\n  int M = (L+R)/2;\n  return RMQ(tree, S, T, L, M, 2*p) + RMQ(tree, S, T, M+1, R, 2*p+1);\n}\n\ni64 rmq(vi& tree, int S, int T) {\n  return RMQ(tree, S+n, T+n);\n}\n\nvoid solve() {\n  R = vi(4*(2*n+1), 0);\n  vi last = vi(2*n, -1);\n  vi nxt = vi(2*n, n-1);\n\n\n  int A=0, b=0;\n  int cur = 0;\n  i64 sum = 0;\n  REP(i,n){\n    int val = s[i] == '(' ? 1 : -1;\n    cur += val;\n    upd(R, cur, 1);\n    if (val > 0 || b > 0) {\n      b += val;\n    } else {\n      A--;\n    }\n    sum += max(-A,b);\n    if (s[i] == ')' && last[cur+n] != -1) {\n      nxt[last[cur+n]]=i;\n    }\n    if (s[i] == '(' && i+1 < n && s[i+1] == ')') {\n      nxt[i] = i;\n    }\n    last[cur+n] = i;\n  }\n  FOR(i,-n,n) {\n    dd(\"[%d:%d]\",i,rmq(R,i,i));\n  }\n  dd(\"\\n\");\n  cur = 0;\n  i64 ans = sum;\n  REP(i,n) {\n    FOR(i,-n,n) {\n      dd(\"[%d:%d]\",i,rmq(R,i,i));\n    }\n    dd(\"\\n\");\n    if (s[i] == '(') {\n      cur++;\n      i64 x = rmq(R, -n, cur-1);\n      i64 L = nxt[i] == -1 ? n-1 : nxt[i];\n      i64 y = L - i + 1;\n      sum += x - y;\n      upd(R, cur, -1);\n      dd(\"%d: x=%d y=%d sum=%d nxt=%d\\n\", i,x, y, sum, nxt[i]);\n    } else {\n      cur--;\n      i64 x = rmq(R, -n, cur);\n      sum -= x;\n      upd(R, cur, -1);\n      dd(\"%d: %d %d\\n\", i, x, sum);\n    }\n    ans += sum;\n  }\n  cout << ans << endl;\n}\n\nint main() {\n  IO();\n  TC\n  {\n    cin >> n;\n    cin >> s;\n    solve();\n  }\n}\n"
}