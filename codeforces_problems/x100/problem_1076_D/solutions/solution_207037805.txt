{
    "id": 207037805,
    "contestId": 1076,
    "creationTimeSeconds": 1684928669,
    "relativeTimeSeconds": 4529,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "airths"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1684924140
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 102400,
    "source": "/*\r\n * \r\n * \t^v^\r\n * \r\n */\r\n#include <iostream>\r\n#include <string>\r\n#include <cmath>\r\n#include <vector>\r\n#include <iomanip>\r\n#include <map>\r\n#include <numeric>\r\n#include <functional>\r\n#include <algorithm>\r\n#include <set>\r\n#include <queue>\r\n#include <climits>\r\n#include <cstdlib>\r\n#include <chrono>\r\n// #include <ext/pb_ds/assoc_container.hpp>\r\n// #include <ext/pb_ds/tree_policy.hpp>\r\n// using namespace __gnu_pbds;\r\nusing namespace std;\r\n// #define ordered_set tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update>\r\n#define iamtefu ios_base::sync_with_stdio(false); cin.tie(0);\r\n#define ll int\r\n#define ld long double\r\n#define sc(a) scanf(\"%lld\", &a);\r\n#define scv(a, n) vector<ll> a(n);fl(i,0,n){sc(a[i])}\r\n#define prl(a) fl(i,0,a.size()){printf(\"%lld \", a[i]);}printf(\"\\n\");\r\n#define fl(i,a,n) for (ll i(a); i<n; i++)\r\n#define rfl(i,a,n) for (ll i(n-1); i>=a; i--)\r\n#define print(a) for (auto x:a){cout<<x<<\" \";} cout<<\"\\n\";\r\n#define tt int tt; cin>>tt; for(;tt--;)\r\nll gcd(ll a, ll b){\r\n\tif (b==0){\r\n\t\treturn a;\r\n\t}\r\n\treturn gcd(b, a%b);\r\n}\r\nll pw(ll a, ll b, ll m){\r\n\tll res=1;\r\n\ta%=m;\r\n\twhile (b){\r\n\t\tif (b&1){\r\n\t\t\tres=(res*a)%m;\r\n\t\t}\r\n\t\ta=(a*a)%m;\r\n\t\tb/=2;\r\n\t}\r\n\treturn res;\r\n}\r\nvoid scn(){\r\n\tll n, m, k; cin>>n>>m>>k;\r\n\tvector <vector <pair<ll,ll>>> ed(n+1);\r\n\tmap <pair<ll,ll>, ll> mp;\r\n\tfl(i,0,m){\r\n\t\tll u, v, w; cin>>u>>v>>w;\r\n\t\ted[u].push_back({v, w});\r\n\t\ted[v].push_back({u, w});\r\n\t\tmp[{v, u}]=i+1;\r\n\t\tmp[{u, v}]=i+1;\r\n\t}\r\n\tset <pair<long long, ll>> sty;\r\n\tsty.insert({0, 1});\r\n\tvector <int> vis(n+1);\r\n\tvector <long long> dis(n+1, 1e18);\r\n\tdis[1]=0;\r\n\tvis[1]++;\r\n\tvector <vector <ll>> heh(n+1);\r\n\tvector <ll> par(n+1);\r\n\twhile (!sty.empty()){\r\n\t\tauto j = *sty.begin();\r\n\t\tsty.erase(j);\r\n\t\tll i = j.second;\r\n\t\tfor (auto x:ed[i]){\r\n\t\t\tif (dis[i]+x.second<dis[x.first]){\r\n\t\t\t\tdis[x.first] = dis[i]+x.second;\r\n\t\t\t\tpar[x.first]=i;\r\n\t\t\t\tsty.insert({dis[x.first], x.first});\r\n\t\t\t\t// cerr<<x[0]<<\"  pl\\n\";\r\n\t\t\t\tvis[x.first]++;\r\n\t\t\t\t// heh[i].push_back({x[0], x.second, x[2]});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tvector <ll> ar(m+1);\r\n\tfl(i,1,n+1){\r\n\t\tfor (auto y:ed[i]){\r\n\t\t\tif (y.first==par[i]){\r\n\t\t\t\tll cur = mp[{i, y.first}];\r\n\t\t\t\theh[y.first].push_back(i);\r\n\t\t\t\tvis[i] = cur;\r\n\t\t\t\tar[cur]++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (k>=n-1){\r\n\t\tvector <ll> p;\r\n\t\tfl(i,1,m+1){\r\n\t\t\tif (ar[i]>0){\r\n\t\t\t\tp.push_back(i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcout<<p.size()<<'\\n';\r\n\t\tprint(p)\r\n\t} else {\r\n\t\t// fill(vis.begin(), vis.end(), 0);\r\n\t\tvector <ll> dp(n+1, 0);\r\n\t\tll ho = (n-1-k);\r\n\t\t// fl(i,1,n+1){\r\n\t\t// \tcout<<i<<\"  -> \";\r\n\t\t// \tfor (auto x:heh[i]){\r\n\t\t// \t\tcout<<x[0]<<' ';\r\n\t\t// \t}\r\n\t\t// \tcout<<'\\n';\r\n\t\t// }\r\n\t\t// cout<<ho<<'\\n';\r\n\t\tfunction <void(ll)> dfs=[&](ll i){\r\n\t\t\tll co = 0;\r\n\t\t\tll ind = vis[i];\r\n\t\t\tfor (auto x:heh[i]){\r\n\t\t\t\tdfs(x);\r\n\t\t\t\tdp[i]&=dp[x];\r\n\t\t\t}\r\n\t\t\t// cout<<heh[i].size()<<\" \"<<i<<\" pl\\n\";\r\n\t\t\tif (heh[i].size()==0 && ho){\r\n\t\t\t\tho--;\r\n\t\t\t\tar[ind]=0;\r\n\t\t\t\tdp[i]=1;\r\n\t\t\t} else if (ho && dp[i]){\r\n\t\t\t\tho--;\r\n\t\t\t\tar[ind]=0;\r\n\t\t\t}\r\n\t\t};\r\n\t\t// print(dp)\r\n\t\tdfs(1);\r\n\t\tvector <ll> p;\r\n\t\tfl(i,1,m+1){\r\n\t\t\tif (ar[i]>0){\r\n\t\t\t\tp.push_back(i);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// print(ar)\r\n\t\tcout<<p.size()<<'\\n';\r\n\t\tprint(p)\r\n\t\t// cout<<st.size()<<'\\n';\r\n\t\t// print(st)\r\n\t}\r\n\r\n\t// not necessarily distinct\r\n}\r\nint main(){\r\n\tiamtefu;\r\n#if defined(airths)\r\n\tauto t1=chrono::high_resolution_clock::now();\r\n\tfreopen(\"input.txt\", \"r\", stdin);\r\n\tfreopen(\"output.txt\", \"w\", stdout);\r\n#else\r\n\t//\r\n#endif\r\n\t// tt\r\n\t{\r\n\t\tscn();\r\n\t}\r\n#if defined(airths)\r\n\tauto t2=chrono::high_resolution_clock::now();\r\n\tld ti=chrono::duration_cast<chrono::nanoseconds>(t2-t1).count();\r\n\tti*=1e-6;\r\n\tcerr<<\"Time: \"<<setprecision(12)<<ti;\r\n\tcerr<<\"ms\\n\";\r\n#endif\r\n\treturn 0;\r\n}"
}