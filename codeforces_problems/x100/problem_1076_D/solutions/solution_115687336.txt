{
    "id": 115687336,
    "contestId": 1076,
    "creationTimeSeconds": 1620468952,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "ChenTingyang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 530,
    "memoryConsumedBytes": 106291200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef pair<ll,int> pll;\r\nconst int N=2e6+10;\r\nconst int mod=998244353;\r\nint n,m,k;\r\nint h[N],ne[N],e[N],w[N],idx;\r\nint in[N];\r\nll dis[N],cnt[N],st[N];\r\nint id[N];\r\nvoid add(int a,int b,int c,int d){\r\n    e[idx]=b,ne[idx]=h[a],w[idx]=c,id[idx]=d,h[a]=idx++;\r\n}\r\nvoid dij(){\r\n    priority_queue<pll,vector<pll>,greater<pll>> q;\r\n    q.push({0,1});\r\n    for(int i=1;i<=n;i++){\r\n        cnt[i]=dis[i]=1e15;\r\n    }\r\n    dis[1]=cnt[1]=0;\r\n    while(q.size()){\r\n        auto t=q.top();\r\n        q.pop();\r\n        if(st[t.second])\r\n            continue;\r\n        st[t.second]=1;\r\n        for(int i=h[t.second];i!=-1;i=ne[i]){\r\n            int j=e[i];\r\n            if(dis[j]>dis[t.second]+w[i]){\r\n                dis[j]=dis[t.second]+w[i];\r\n                cnt[j]=cnt[t.second]+1;\r\n                q.push({dis[j],j});\r\n            }\r\n            else if(dis[j]==dis[t.second]+w[i]&&cnt[j]>cnt[t.second]+1){\r\n                cnt[j]=cnt[t.second]+1;\r\n            }\r\n        }\r\n    }\r\n}\r\nvector<int> ans;\r\nvoid topo(){\r\n    int i;\r\n    queue<int> q;\r\n    q.push(1);\r\n    for(i=1;i<=n;i++){\r\n        for(int j=h[i];j!=-1;j=ne[j]){\r\n            int dcnt=e[j];\r\n            if(dis[dcnt]==dis[i]+w[j]&&cnt[dcnt]==cnt[i]+1){\r\n                in[dcnt]++;\r\n            }\r\n        }\r\n    }\r\n    int flag=0;\r\n    while(q.size()){\r\n        int t=q.front();\r\n        q.pop();\r\n        for(i=h[t];i!=-1;i=ne[i]){\r\n            int j=e[i];\r\n            if(dis[j]==dis[t]+w[i]&&cnt[j]==cnt[t]+1){\r\n                in[j]--;\r\n                if(!in[j]){\r\n                    ans.push_back(id[i]);\r\n                    if(ans.size()==k){\r\n                        flag=1;\r\n                        break;\r\n                    }\r\n                    q.push(j);\r\n                }\r\n            }\r\n        }\r\n        if(flag)\r\n            break;\r\n    }\r\n    cout<<ans.size()<<endl;\r\n    for(auto x:ans){\r\n        cout<<x<<\" \";\r\n    }\r\n    cout<<endl;\r\n}\r\nint main(){\r\n    ios::sync_with_stdio(false);\r\n    cin>>n>>m>>k;\r\n    int i;\r\n    memset(h,-1,sizeof h);\r\n    for(i=1;i<=m;i++){\r\n        int a,b,c;\r\n        cin>>a>>b>>c;\r\n        add(a,b,c,i);\r\n        add(b,a,c,i);\r\n    }\r\n    dij();\r\n    if(k==0){\r\n        cout<<0<<endl;\r\n        return 0;\r\n    }\r\n    topo();\r\n    return 0;\r\n}\r\n"
}