{
    "id": 100891440,
    "contestId": 1076,
    "creationTimeSeconds": 1607680677,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "yuvi_tp"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 4096000,
    "source": "#include<bits/stdc++.h>\r\n#define ll long long\r\n#define ld long double\r\n#define all(v) v.begin(),v.end()\r\n#define sz size()\r\n#define mp make_pair\r\n#define pb push_back\r\n#define rep(p,a,b) for(ll p=a ; p<b ; p++)\r\n#define rap(p,a,b) for(ll p=a ; p<=b ; p++)\r\n#define per(p,a,b) for(ll p=a ; p>=b ; p--)\r\n#define F first\r\n#define S second\r\nusing namespace std;\r\n\r\ntypedef vector <ll> vll;\r\ntypedef vector <ld> vld;\r\ntypedef vector<string> vstr;\r\ntypedef pair< ll ,ll > pll;\r\n\r\n//see 215div2\r\nconst ll N = 300005;\r\nbool vis[N];\r\nvector<tuple<ll,ll,ll> >g[300005];\r\n\r\nint main()\r\n{\r\n    ll t,i,j,k,ans,n,x,y,m,w;\r\n\r\n    //cin>>t;\r\n    t=1;\r\n    while(t--)\r\n    {\r\n        cin>>n>>m>>k;\r\n        rep(p,1,m+1)\r\n        {\r\n            cin>>x>>y>>w;\r\n            g[x].pb({w,y,p});\r\n            g[y].pb({w,x,p});\r\n        }\r\n\r\n        vll v;\r\n        ll wt,node,idx,nwt,nnode,nidx;\r\n        priority_queue<tuple<ll,ll,ll> >pq;\r\n        pq.push({0,1,0});\r\n\r\n        while(!pq.empty() && v.sz<k)\r\n        {\r\n            auto temp = pq.top();\r\n            pq.pop();\r\n            tie(wt,node,idx) = temp;\r\n\r\n            if(vis[node])continue;\r\n            if(idx>0)v.pb(idx);\r\n\r\n            vis[node] = true;\r\n            for(auto it:g[node])\r\n            {\r\n                tie(nwt,nnode,nidx) = it;\r\n                if(!vis[nnode])\r\n                {\r\n                    pq.push({-nwt,nnode,nidx});\r\n                }\r\n            }\r\n        }\r\n\r\n        cout<<v.sz<<\"\\n\";\r\n        rep(p,0,v.sz)cout<<v[p]<<\" \";\r\n    }\r\n    \r\n    return 0;\r\n    \r\n}\r\n"
}