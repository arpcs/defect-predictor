{
    "id": 174441660,
    "contestId": 1076,
    "creationTimeSeconds": 1664737700,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "Nedal"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 43,
    "timeConsumedMillis": 405,
    "memoryConsumedBytes": 40345600,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/rope>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\nusing namespace __gnu_cxx;\r\n\r\n#define ll long long\r\n#define fr first\r\n#define sc second\r\n#define pb(x) push_back(x)\r\n#define nxt continue\r\n#define sz(container) ((ll) container.size())\r\n#define umap unordered_map\r\n#define uset unordered_set\r\n#define MAX LONG_LONG_MAX\r\n#define MIN LONG_LONG_MIN\r\n#define mkpr(f, s) make_pair(f, s)\r\n#define el '\\n'\r\n#define mxpq priority_queue\r\n\r\ntemplate <class T>\r\nusing mnpq = mxpq<T, vector<T>, greater<T>>;\r\n\r\ntemplate <class T, class S>\r\nusing oset = tree<T, null_type, S, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\nconst ll MOD = 1e9 + 7, oo = 1e13;\r\n\r\nll n, m, k;\r\n\r\nvector<pair<ll, pair<ll, ll>>> adj[(ll) 3e5 + 1];\r\n\r\nvoid solve() {\r\n  vector<ll> dis((ll) 3e5 + 5, INT_MAX);\r\n  vector<ll> edge((ll) 3e5 + 5), vis((ll) 3e5 + 5);\r\n\r\n  vector<ll> v;\r\n\r\n  mnpq<pair<ll, ll>> q;\r\n\r\n  dis[1] = 0;\r\n\r\n  q.push({0, 1});\r\n\r\n  while (!q.empty() && sz(v) < k) {\r\n    ll u = q.top().sc;\r\n\r\n    q.pop();\r\n\r\n    if (vis[u])\r\n      nxt;\r\n\r\n    vis[u] = 1;\r\n\r\n    if (edge[u]) {\r\n      v.pb(edge[u]);\r\n    }\r\n\r\n    for (auto& it : adj[u]) {\r\n      ll to = it.fr, w = it.sc.fr, id = it.sc.sc;\r\n\r\n      if (dis[to] > dis[u] + w) {\r\n        dis[to] = dis[u] + w;\r\n        edge[to] = id;\r\n        q.push({dis[to], to});\r\n      }\r\n    }\r\n  }\r\n\r\n  cout << sz(v) << el;\r\n\r\n  for (ll& e : v) {\r\n    cout << e << ' ';\r\n  }\r\n}\r\n\r\nint main() {\r\n  ios_base::sync_with_stdio(false);\r\n  cin.tie(nullptr);\r\n  cout.tie(nullptr);\r\n\r\n  cin >> n >> m >> k;\r\n\r\n  for (ll i = 0; i < m; ++i) {\r\n    ll u, v, w;\r\n\r\n    cin >> u >> v >> w;\r\n\r\n    adj[u].push_back({v, {w, i + 1}});\r\n    adj[v].push_back({u, {w, i + 1}});\r\n  }\r\n\r\n  k = min(n - 1, k);\r\n\r\n  solve();\r\n\r\n  return 0;\r\n}\r\n\r\n/*\r\n  TRUST YOURSELF\r\n  JUST DO IT\r\n  FOCUS\r\n  READ CAREFULLY\r\n  YOU CAN DO IT\r\n  DON'T STICK TO ONE IDEA\r\n  CREATIVITY\r\n  CALM DOWN\r\n  DON'T BE NERVOUS\r\n  DON'T HESITATE\r\n*/"
}