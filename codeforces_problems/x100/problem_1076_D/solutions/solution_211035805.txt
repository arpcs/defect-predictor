{
    "id": 211035805,
    "contestId": 1076,
    "creationTimeSeconds": 1687701232,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "MacPhucKhang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 358,
    "memoryConsumedBytes": 40345600,
    "source": "#pragma GCC optimize(\"Ofast\")\n#pragma GCC target( \"avx2\", \"sse4.2\", \"abm\", \"bmi\", \"bmi2\", \"fma\", \"mmx\", \"popcnt\", \"lzcnt\")\n\n#include <bits/stdc++.h>\n\n#define int long long\n#define tiii tuple <int, int, int>\n#define pii pair <int, int>\n#define fi first\n#define se second\n\nusing namespace std;\n\nvoid SetIO ( string file = \"\" , string inp = \"\" , string out = \"\" )\n{\n\tif ( file != \"\" )\n\t{\n\t\tif ( inp != \"\" )\n\t\t\tfreopen ( ( file + \".\" + inp ).c_str ( ) , \"r\" , stdin );\n\t\tif ( out != \"\" )\n\t\t\tfreopen ( ( file + \".\" + out ).c_str ( ) , \"w\" , stdout );\n\t}\n\tcin.tie ( 0 )->sync_with_stdio ( 0 );\n\t__builtin_ia32_ldmxcsr ( 40896 );\n}\n\nint n, m, k, cnt = 0;\nvector <int> ans, vst, f;\nvector <vector <tiii>> a;\npriority_queue <tiii, vector <tiii>, greater <tiii>> q;\n\nvoid Solve ( )\n{\n    cin >> n >> m >> k;\n    \n    a.resize(n + 10);\n    vst.resize(n + 10);\n    f.resize(n + 10, 1e18);\n    \n    for (int u, v, w, i = 1; i <= m; ++i)\n    {\n        cin >> u >> v >> w;\n        a[u].emplace_back(v, w, ++cnt);\n        a[v].emplace_back(u, w, cnt);\n    }\n    \n    f[1] = 0;\n    q.emplace(f[1], 1, 0);\n    \n    while (!q.empty())\n    {\n        auto [x, u, num] = q.top(); q.pop();\n        \n        if (vst[u])\n            continue;\n        else\n            vst[u] = 1;\n        \n        if (u != 1)\n            ans.emplace_back(num);\n        if (ans.size() >= k)\n            break;\n        \n        for (auto [v, w, num] : a[u])\n            if (!vst[v] && x + w < f[v])\n            {\n                f[v] = x + w;\n                q.emplace(f[v], v, num);\n            }\n    }\n    \n    cout << ans.size() << endl;\n    for (auto i : ans)\n        cout << i << \" \";\n}\n\nsigned main ( )\n{\n\tSetIO ( );\n\tSolve ( );\n}\n\n   \t\t\t \t\t\t   \t \t \t \t\t\t \t\t\t \t\t\t\t"
}