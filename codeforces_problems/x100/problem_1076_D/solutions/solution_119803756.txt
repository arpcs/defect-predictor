{
    "id": 119803756,
    "contestId": 1076,
    "creationTimeSeconds": 1624026567,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "StayAlone"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define fr(i, l, r) for (int i = l; i <= r; ++i)\r\n#define pii pair<int, int>\r\n#define mp(u, v) make_pair(u, v)\r\n#define pb(u, v) push_back(mp(u, v))\r\nusing namespace std;\r\nint n, m, k, x, y, w, dis[300010]; bool vis[300010];\r\nvector <pii>link[300010];\r\nvector <int>link2[30010];\r\npriority_queue<pii>pq;\r\nqueue <int>q;\r\nconst int inf = ~0U >> 1;\r\n\r\nstruct node\r\n{\r\n\tint x, y;\r\n}a[30010];\r\n\r\nint fn(int x, int y)\r\n{\r\n\tfr(i, 1, m) if (a[i].x == x && a[i].y == y || a[i].x == y && a[i].y == x) return i;\r\n\treturn -1;\r\n}\r\n\r\nint main()\r\n{\r\n\tscanf(\"%d%d%d\", &n, &m, &k);\r\n\tfr(i, 1, m) scanf(\"%d%d%d\", &a[i].x, &a[i].y, &w), link[a[i].x].pb(a[i].y, w), link[a[i].y].pb(a[i].x, w);\r\n\tfr(i, 1, n) dis[i] = inf;\r\n\tdis[1] = 0; pq.push(make_pair(0, 1));\r\n\twhile (pq.size())\r\n\t{\r\n\t\tpair<int, int> now = pq.top(); pq.pop();\r\n\t\tint x = now.second, sz = link[x].size();\r\n\t\tif (vis[x]) continue;\r\n\t\tvis[x] = true;\r\n\t\tfr(i, 0, sz - 1)\r\n\t\t{\r\n\t\t\tint k = link[x][i].first, w = link[x][i].second;\r\n\t\t\tif (vis[k]) continue;\r\n\t\t\tif (dis[k] > dis[x] + w) dis[k] = dis[x] + w, pq.push(make_pair(-dis[k], k));\r\n\t\t}\r\n\t}\r\n\tfr(i, 1, n)\r\n\t{\r\n\t\tint sz = link[i].size();\r\n\t\tfr(j, 0, sz - 1)\r\n\t\t{\r\n\t\t\tif (dis[link[i][j].first] == dis[i] + link[i][j].second) link2[i].push_back(link[i][j].first);\r\n\t\t}\r\n\t}\r\n\tprintf(\"%d\\n\", min(n - 1, k));\r\n\tq.push(1);\r\n\tfr(i, 1, m) vis[i] = false;\r\n\tint cnt = 0;\r\n\twhile (q.size())\r\n\t{\r\n\t\tint now = q.front(); q.pop();\r\n//\t\tvis[now] = true;\r\n\t\tint sz = link2[now].size();\r\n\t\tfr(i, 0, sz - 1)\r\n\t\t{\r\n\t\t\tif (cnt >= k) return 0;\r\n\t\t\tint d = fn(now, link2[now][i]);\r\n//\t\t\tcout << now << \" \" << link2[now][i] << \" \" << d << endl;\r\n\t\t\tif (vis[d]) continue;\r\n\t\t\tcnt++, printf(\"%d \", d);\r\n\t\t\tif (!~d)\r\n\t\t\t{\r\n\t\t\t\tcnt--, continue;\r\n\t\t\t}\r\n\t\t\tvis[d] = true; q.push(link2[now][i]);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
}