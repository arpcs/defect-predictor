{
    "id": 128417874,
    "contestId": 1076,
    "creationTimeSeconds": 1631276085,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "expecting"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 17305600,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <cmath>\r\n#include <bitset>\r\n#include <stack>\r\n#include <queue>\r\n#include <ctime>\r\n#include <set>\r\n#include <map>\r\n#define rep(i,j,k) for(int i=j;i<=k;++i)\r\n#define drp(i,j,k) for(int i=j;i>=k;--i)\r\n#define isdigit(ch) (ch>=48&&ch<=57)\r\n#define mp std::make_pair\r\n#define mod 1000000007\r\n#define MAXN 300005\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef std::pair<int,int> pii;\r\nconst int dx[4]={1,-1,0,0};\r\nconst int dy[4]={0,0,1,-1};\r\ninline int read(){\r\n    int x=0;\r\n    char ch=getchar();\r\n    bool f=false;\r\n    while(!isdigit(ch)) f|=ch=='-',ch=getchar();\r\n    while(isdigit(ch)) x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\r\n    return f?-x:x;\r\n}\r\ntemplate <typename tp> inline tp min(tp a,tp b){return a<b?a:b;}\r\ntemplate <typename tp> inline tp max(tp a,tp b){return a>b?a:b;}\r\ntemplate <typename tp> inline bool chkmax(tp &a,tp b){return a<b&&(a=b,true);}\r\ntemplate <typename tp> inline bool chkmin(tp &a,tp b){return a>b&&(a=b,true);}\r\nint n,m,k,cnt;\r\nll dis[MAXN];\r\nbool vis[MAXN];\r\nstd::vector<pii> edge[MAXN],son[MAXN];\r\nstd::vector<int> id[MAXN],ans;\r\nstd::priority_queue<std::pair<ll,int>> q;\r\ninline void dijkstra(){\r\n    rep(i,1,n) dis[i]=1e18;\r\n    dis[1]=0,q.push(mp(0,1));\r\n    while(!q.empty()){\r\n        int u=q.top().second;\r\n        q.pop();\r\n        if(vis[u]) continue;\r\n        vis[u]=true;\r\n        for(auto e:edge[u]){\r\n            int v=e.first,w=e.second;\r\n            if(chkmin(dis[v],dis[u]+w)) q.push(mp(dis[v],v));\r\n        }\r\n    }\r\n    rep(i,1,n) printf(\"%lld \",dis[i]);puts(\"\");\r\n}\r\ninline void dfs(int u,int fa){\r\n\tfor(auto e:son[u]){\r\n\t\tint v=e.first,idx=e.second;\r\n\t\tif(v==fa) continue;\r\n\t\tif(k) ++cnt,--k,ans.push_back(idx);\r\n\t\tdfs(v,u);\r\n\t}\r\n}\r\nint main(){\r\n    n=read(),m=read(),k=read();\r\n    rep(i,1,m){\r\n        int u=read(),v=read(),w=read();\r\n        id[u].push_back(i),id[v].push_back(i);\r\n        edge[u].push_back(mp(v,w)),edge[v].push_back(mp(u,w));\r\n    }\r\n    dijkstra();\r\n    rep(u,2,n) rep(i,1,edge[u].size()){\r\n        int v=edge[u][i-1].first,w=edge[u][i-1].second,idx=id[u][i-1];\r\n        if(dis[v]+w==dis[u]){\r\n            son[u].push_back(mp(v,idx));\r\n            son[v].push_back(mp(u,idx));\r\n            break;\r\n        }\r\n    }\r\n    dfs(1,0),printf(\"%d\\n\",cnt);\r\n    for(auto e:ans) printf(\"%d \",e);\r\n}"
}