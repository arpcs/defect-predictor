{
    "id": 106424768,
    "contestId": 1076,
    "creationTimeSeconds": 1612419038,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "Murasame_HC"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 14438400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int N=1e5+10, M=2e5+10;\r\nconst ll inf=1e18+10;\r\nll n, m, k, dis[N], last[N], pre[N], vis=0, cnt=1; \r\nstruct edge\r\n{\r\n\tll v, w, next;\r\n} e[M<<1];\r\ninline void add_edge( ll u, ll v, ll w )\r\n{\r\n\te[++cnt].v=v;\r\n\te[cnt].w=w;\r\n\te[cnt].next=last[u];\r\n\tlast[u]=cnt;\r\n}\r\nstruct node\r\n{\r\n\tll u, d;\r\n\tnode ( ll U, ll D ) :u(U), d(D) {}\r\n\tbool operator < ( const node &l ) const\r\n\t{ return d>l.d; }\r\n} ;\r\nstruct node1\r\n{\r\n\tll v, step, pre;\r\n\tbool operator < ( const node1 &l ) const\r\n\t{ return step>l.step; }\r\n} h[N];\r\ninline void dijkstra( ll s )\r\n{\r\n\tpriority_queue<node> q;\r\n\tfor ( ll i=1; i<=n; i++ ) dis[i]=inf, h[i].v=i;\r\n\tdis[s]=0; h[s].step=0; q.push( node( s, 0 ) );\r\n\twhile( !q.empty() )\r\n\t{\r\n\t\tll u=q.top().u, d=q.top().d; q.pop();\r\n\t\tif ( d!=dis[u] ) continue;\r\n\t\tfor ( ll i=last[u]; i; i=e[i].next )\r\n\t\t{\r\n\t\t\tll v=e[i].v, w=e[i].w;\r\n\t\t\tif ( dis[v]>d+w ) \r\n\t\t\t{\r\n\t\t\t\tif ( dis[v]==inf ) vis++;\r\n\t\t\t\th[v].step=h[u].step+1;\r\n\t\t\t\th[v].pre=i>>1;\r\n\t\t\t\tdis[v]=d+w;\r\n\t\t\t\tq.push( node( v, dis[v] ) );\r\n\t\t\t}\r\n\t\t}\r\n \t}\r\n}\r\nint main()\r\n{\r\n\tscanf( \"%lld%lld%lld\", &n, &m, &k ); \r\n\tfor ( int i=1; i<=m; i++ )\r\n\t{\r\n\t\tll u, v, w;\r\n\t\tscanf( \"%lld%lld%lld\", &u, &v, &w );\r\n\t\tadd_edge( u, v, w ); add_edge( v, u, w );\r\n\t}\r\n\tdijkstra( 1 );\r\n\tif ( k>vis ) k=vis;\r\n\tvis=0;\r\n\tprintf( \"%lld\\n\", k );\r\n\tsort( h+2, h+n+1 );\r\n\tfor ( int i=2; i<=n&&vis<k; i++ )\r\n\t  if ( dis[h[i].v]!=inf )\r\n\t  {\r\n\t  \t  ++vis;\r\n\t\t  printf( \"%lld \", h[i].pre );\r\n\t  }\r\n\treturn 0;\r\n}"
}