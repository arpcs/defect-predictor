{
    "id": 206698230,
    "contestId": 1076,
    "creationTimeSeconds": 1684641571,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "ysm119"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 30822400,
    "source": "#include<bits/stdc++.h>\n#define int long long\n#define pii pair<int,int>\nusing namespace std;\nusing ll = long long;\nconst int N = 7e5 + 10;\nconst ll INF = 1e16 + 10;\nvector<pair<int,int>>vc[N];\nint n , m , k;\nvector<int>temp;\nll dis[N];\nint st[N];\nmap<pii,int>mp;\nint last[N];\nint vis[N];\nvoid dij()\n{\n\n    for(int i = 0 ; i <= n + 4 ; ++ i )dis[i] = INF;\n    for(int i = 0 ; i <= n + 3 ; ++ i )st[i] = 0;\n    priority_queue<pii , vector<pii> , greater<pii>> q;\n    dis[1] = 0;\n    q.push({0 , 1});\n    while(q.size()){\n        if(k == 0)return;\n        int u = q.top().second; q.pop();\n        if(st[u])continue;\n        if(u != 1 && !vis[u]){\n            vis[u] = 1;\n            temp.push_back(mp[{u , last[u]}]);\n            -- k;\n        }\n        st[u] = 1;\n        for(int i = 0 ; i < vc[u].size() ; ++ i ){\n            int v = vc[u][i].second;\n            int w = vc[u][i].first;\n            if(dis[v] > dis[u] + w){\n                dis[v] = dis[u] + w;\n                last[v] = u;\n                q.push({dis[v] , v});\n            }\n        }\n    }\n\n}\nsigned main()\n{\n    scanf(\"%lld%lld%lld\" , &n , &m , &k);\n    for(int i = 1 ; i <= m ; ++ i ){\n        int u , v , w; scanf(\"%lld%lld%lld\" , &u , &v ,&w);\n        vc[u].push_back({w , v});\n        vc[v].push_back({w , u});\n        mp[{u , v}] = mp[{v , u}] = i;\n    }\n    for(int i = 1; i <= n ; ++ i )sort(vc[i].begin() , vc[i].end());\n    dij();\n    printf(\"%lld\\n\" , temp.size());\n    for(int i = 0 ; i < temp.size() ; ++ i ){\n            if(i + 1 < temp.size())printf(\" \");\n            printf(\"%lld\" , temp[i]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n\n\t\t\t\t   \t\t \t\t    \t \t\t \t\t\t \t\t \t\t"
}