{
    "id": 173047331,
    "contestId": 1076,
    "creationTimeSeconds": 1663843545,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "isheoran"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 436,
    "memoryConsumedBytes": 89088000,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n#define  enl          '\\n'\n#define  int          long long\n#define  sz(s)        (int)s.size()\n#define  all(v)       (v).begin(),(v).end()\n\nmt19937 rng (chrono::high_resolution_clock::now().time_since_epoch().count());\ntemplate <typename A, typename B> ostream& operator<< (ostream &cout, pair<A, B> const &p) { return cout << \"(\" << p.first << \", \" << p.second << \")\"; }\ntemplate <typename A, typename B> istream& operator>> (istream& cin, pair<A, B> &p) {cin >> p.first; return cin >> p.second;}\ntemplate <typename A> ostream& operator<< (ostream &cout, vector<A> const &v) {cout << \"[\"; for(int i = 0; i < v.size(); i++) {if (i) cout << \", \"; cout << v[i];} return cout << \"]\";}\ntemplate <typename A> istream& operator>> (istream& cin, vector<A> &x){for(int i = 0; i < x.size()-1; i++) cin >> x[i]; return cin >> x[x.size()-1];}\ntemplate <typename A, typename B> A amax (A &a, B b){ if (b > a) a = b ; return a; }\ntemplate <typename A, typename B> A amin (A &a, B b){ if (b < a) a = b ; return a; }\n\nconst long long mod = 1e9+7;\nconst long long inf = 1e18;\n\nvoid solve() {\n    int n,m,k;\n    cin>>n>>m>>k;\n    vector<vector<tuple<int,int,int>>>adj(n+1);\n    for(int i=0;i<m;i++) {\n        int u,v,w;\n        cin>>u>>v>>w;\n        adj[u].push_back({v,w,i});\n        adj[v].push_back({u,w,i});\n    }\n    \n    vector<bool>vis(n+1,false);\n    vector<int>d(n+1,inf);\n    d[1] = 0;\n    priority_queue<pair<int,int>>q;\n    vector<pair<int,int>>par(n+1,{-1,-1});\n    q.push({0,1});\n    while(!q.empty()) {\n        auto s = q.top().second;\n        q.pop();\n        if(vis[s]) continue;\n        vis[s] = true;\n        for(auto [v,w,i]:adj[s]) {\n            if(d[v] > d[s]+w) {\n                d[v] = d[s]+w;\n                par[v] = {s,i};\n                q.push({-d[v],v});\n            }\n        } \n    }\n\n\n    vector<vector<tuple<int,int>>>new_adj(n+1);\n    for(int i=1;i<=n;i++) {\n        if(par[i].first == -1) continue;\n        new_adj[par[i].first].push_back({i,par[i].second});\n    }\n\n    vis.assign(m,false);\n    int cnt = 0;\n    function<void(int,int)>dfs = [&](int s,int p) {\n        for(auto [u,i]:new_adj[s]) {\n            if(u == p) continue;\n            if(cnt < k) {\n                cnt++;\n                vis[i] = true;\n                dfs(u,s);\n            }\n        }\n    };\n\n    dfs(1,-1);\n\n    cout<<cnt<<enl;\n    for(int i=0;i<m;i++) {\n        if(vis[i]) cout<<i+1<<' ';\n    }\n} \n\nsigned main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);cout.tie(nullptr);\n    int testcases = 1;\n    //cin>>testcases;\n    while(testcases--) solve();\n    return 0;\n}"
}