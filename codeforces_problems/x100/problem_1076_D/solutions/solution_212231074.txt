{
    "id": 212231074,
    "contestId": 1076,
    "creationTimeSeconds": 1688564210,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "silenttkillerr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 204800,
    "source": "#include<vector>\r\n#include<map>\r\n#include<set>\r\n#include<unordered_map>\r\n#include<algorithm>\r\n#include<iostream>\r\n#include<math.h>\r\n#include<string>\r\n#include<bitset>\r\n#include<stdio.h>\r\n#include<utility>\r\n#include<queue>\r\n#include<stack>\r\n#include<deque>\r\n#include<iterator>\r\n#include<list>\r\n#include<iomanip>\r\n#include<chrono>\r\n#include<unordered_set>\r\n#include<string>\r\n#include<cmath>\r\n#include<cstring>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n#define fast ios_base::sync_with_stdio(0),cin.tie(0)\r\n#define ll long long\r\n#define cout std::cout\r\n#define cin std::cin\r\n#define yes cout<<\"YES\"<<endl;\r\n#define no cout<<\"NO\"<<endl;\r\n#define pb push_back\r\n#define sorta(vec) sort(vec.begin(),vec.end())\r\n#define sortd(vec) sort(vec.begin(),vec.end(),greater<int>())\r\n#define pb push_back\r\n#define vll vector<long long int>\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>pbds; // find_by_order, order_of_key(0-indexed)\r\n//less , less_equal , greater , greater_equal -> rule for insertion\r\n#define start_execution auto start = std::chrono::high_resolution_clock::now();\r\n#define stop_execution auto stop = std::chrono::high_resolution_clock::now();\r\n#define execution_time auto duration = std::chrono::duration_cast<std::chrono::nanoseconds>(stop - start); cerr<<\"Time taken : \"<<((long double)duration.count())/((long double)1e9) <<\"s\"<<endl; \r\n#define nline \"\\n\"\r\n#define all(v) (v).begin(),(v).end()\r\n#define pii pair<int,int>\r\n#define mem(a,k) memset(a,k,sizeof(a));\r\n// void print_with_precision(double val,int n)\r\n// {\r\n//     cout << fixed << setprecision(n) <<val<<endl;\r\n// }\r\nvoid debug(int x)\r\n{\r\n    cout<<\"Value Debugged is \"<<x<<endl;\r\n}\r\nvoid debug(vector<int>x)\r\n{\r\n    cout<<\"Value Debugged is \"<<endl;\r\n    for(auto y:x)\r\n    {\r\n        cout<<y<<\" \";\r\n    }\r\n    cout<<endl;\r\n}\r\nconst ll mod=1000000007;\r\nll mod_add(ll a, ll b) {a = a % mod; b = b % mod; return (((a + b) % mod) + mod) % mod;}\r\nll mod_mul(ll a, ll b) {a = a % mod; b = b % mod; return (((a * b) % mod) + mod) % mod;}\r\nll mod_sub(ll a, ll b) {a = a % mod; b = b % mod; return (((a - b) % mod) + mod) % mod;}\r\nll int inv(ll int r)\r\n{\r\n\tif(r==1) return 1;\r\n\treturn (mod-((mod/r)*inv(mod%r))%mod+mod)%mod;\r\n}\r\nll mod_div(ll a,ll b){return (a*inv(b))%mod;}\r\nll int ceil_div(ll int a,ll int b)\r\n{\r\n    ll int k=a%b;\r\n    if(k>0) return (a/b)+1;\r\n    return a/b;\r\n}\r\nll gcd(ll a, ll b)\r\n{\r\n    if (!a)\r\n        return b;\r\n    return gcd(b % a, a);\r\n}\r\nll int lcm(ll int a,ll int b)\r\n{\r\n    ll int g=__gcd(a,b);\r\n    return (1LL*a*b)/g;\r\n}\r\nll int pwr(ll int a,ll int b)\r\n{\r\n    if(b==0)\r\n        return 1;\r\n    if(b%2==0){ll int ans1=pwr(a,b/2);ll int ans2=(ans1*ans1)%mod;return ans2;}\r\n    ll int ans1=pwr(a,b/2);ll int ans2=(ans1*ans1)%mod;\r\n    ans2=(ans2*a)%mod;\r\n    return ans2;\r\n}\r\nll int fact(ll int n)\r\n{\r\n    if(n<0)\r\n    {return 0;}\r\n    ll int ans=1;\r\n    if(n==0) return 1;\r\n    for(int i=1;i<=n;i++){ans=(ans*i)%mod;}return ans;\r\n}\r\nvector<ll> sieve(int n)\r\n{\r\n    int*arr = new int[n + 1]();\r\n    vector<ll> vect;\r\n    for (int i = 2; i <= n; i++)\r\n    if (arr[i] == 0)\r\n    {\r\n        vect.push_back(i);\r\n        for (int j = 2 * i; j <= n; j += i)\r\n        arr[j] = 1;\r\n    }\r\n    return vect;\r\n}\r\n/*ll int Combination(ll int n,ll int r)\r\n{\r\n    void pre()\r\n    {\r\n        for(int i=1;i<=100003;i++)\r\n        {\r\n            dp[i]=(1LL*dp[i-1]*i)%mod;\r\n        }\r\n    }\r\n    if(r==0)\r\n    {\r\n        return 1;\r\n    }\r\n    ll int ans1=dp[n];ll int ans2=dp[r];\r\n    ll int ans3=dp[n-r];ll int ans=(ans1*inv(ans2))%mod;\r\n    ans=(ans*inv(ans3))%mod;return ans;\r\n}*/\r\n\r\ntemplate<class ForwardIterator>\r\nvoid read(ForwardIterator first,ForwardIterator last) \r\n{\r\n    while (first != last) \r\n    {\r\n        cin >> (*first);\r\n        ++first;\r\n    }\r\n}\r\ntemplate<class T>\r\nvoid read(vector<T> &v) \r\n{\r\n    read(v.begin(), v.end());\r\n}\r\nvector<vector<int>>tree_input(int n)\r\n{\r\n    vector<vector<int>>tree(n+1);\r\n    for(int i=0;i<n-1;i++)\r\n    {\r\n        int u,v;\r\n        cin>>u>>v;\r\n        tree[u].push_back(v);\r\n        tree[v].push_back(u);\r\n    }\r\n    return tree;\r\n}\r\nbool cmp(vector<int>&v1,vector<int>&v2)\r\n{\r\n    if(v1[0]<v2[0])\r\n    {\r\n        return true;\r\n    }\r\n    if(v1[0]==v2[0])\r\n    {\r\n        return v1[1]>v2[1];\r\n    }\r\n    return false;\r\n}\r\n//Code starts here\r\n\r\nint main()\r\n{\r\n    #ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\",\"r\",stdin);\r\n    freopen(\"output.txt\",\"w\",stdout);\r\n    #endif\r\n    fast;\r\n    //start_execution\r\n    int tt=1;\r\n   // cin>>tt;\r\n    for(int tc=0;tc<tt;tc++)\r\n    {\r\n        ll int n,m,k;\r\n        cin>>n>>m>>k;\r\n        vector<vector<vector<ll int>>>graph(n+1);\r\n        vector<ll int>dp(n+1,1e12);\r\n        vector<int>vis(n+1,0);\r\n        vector<int>ans;\r\n        dp[1]=0;\r\n        for(int i=1;i<=m;i++)\r\n        {\r\n            ll int a,b,wt;\r\n            cin>>a>>b>>wt;\r\n\r\n            graph[a].push_back({b,wt,i});\r\n            graph[b].push_back({a,wt,i});\r\n        }\r\n        \r\n        set<pair<ll int,ll int>>pq;\r\n        pq.insert({0,1});\r\n        int cnt=0;\r\n        while(!pq.empty())\r\n        {\r\n            cnt++;\r\n            ll int w=pq.begin()->first;\r\n            ll int c=pq.begin()->second;\r\n            if(vis[c]!=0)\r\n            {\r\n                ans.push_back(vis[c]);\r\n            }\r\n            if(cnt==k+1)\r\n            {\r\n                break;\r\n            }\r\n            \r\n            pq.erase(pq.begin());\r\n            for(auto x:graph[c])\r\n            {\r\n                ll int assign=x[1]+w;\r\n                if(assign<dp[x[0]])\r\n                {\r\n                    vis[x[0]]=x[2];\r\n                    dp[x[0]]=assign;\r\n                    pq.insert({dp[x[0]],x[0]});\r\n                }\r\n            }\r\n        }\r\n        cout<<k<<endl;\r\n        for(auto x:ans)\r\n        {\r\n            cout<<x<<\" \";\r\n        }\r\n        cout<<endl;\r\n\r\n    }\r\n    //stop_execution\r\n    //execution_time\r\n    return 0; \r\n}"
}