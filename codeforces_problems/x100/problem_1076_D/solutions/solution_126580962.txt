{
    "id": 126580962,
    "contestId": 1076,
    "creationTimeSeconds": 1629513280,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "llhsdmd"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 389,
    "memoryConsumedBytes": 36147200,
    "source": "#include<iostream>\r\n#include<algorithm>\r\n#include<cstring>\r\n#include<ctime>\r\n#include<queue>\r\n#include<vector>\r\n#define IOS ios::sync_with_stdio(false);cout.tie(0);cin.tie(0);\r\n#define fir(i,s,e,d) for(int i = s;i!=e;i+=d)\r\n#define lowbit(x) (x&(-x))\r\nusing namespace std;\r\ntypedef long long ll;\r\ninline ll read(){\r\n   ll s=0,w=1;\r\n   char ch=getchar();\r\n   while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}\r\n   while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\r\n   return s*w;\r\n}\r\nvoid rebuild(){\r\n  freopen(\"in.txt\",\"r\",stdin);\r\n  freopen(\"out.txt\",\"w\",stdout);\r\n}\r\n\r\ntypedef pair<int,int> PII;\r\nconst int N = 4e5+10;\r\nstruct node{\r\n\tint v,ne;\r\n\tll w;\r\n\tint idx;\r\n}edges[N<<1];\r\nint head[N],tot;\r\nvoid add(int u,int v,ll w,int idx){\r\n\tedges[++tot] = {v,head[u],w,idx};\r\n\thead[u] = tot;\r\n}\r\nint n,m,k;\r\nbool st[N];\r\nll dis[N];\r\nvector<int> res;\r\nstruct Node{\r\n\tint u,id;\r\n\tll w;\r\n\tbool operator<(const Node &b)const{\r\n\t\treturn w>b.w;\r\n\t}\r\n};\r\nvoid dijkstra(){\r\n\tmemset(dis,0x3f,sizeof dis);\r\n\tdis[1] = 0;\r\n\tpriority_queue<Node> q;\r\n\tq.push({1,-1,0});\r\n\tNode tmp;\r\n\twhile(!q.empty() && (int)res.size() <= k){\r\n\t\ttmp = q.top();\r\n\t\tq.pop();\r\n\t\tint u = tmp.u;\r\n\t\tif(st[u])continue;\r\n\t\tst[u] = true;\r\n\t\tres.push_back(tmp.id);\r\n\t\tfor(int i = head[u];i;i=edges[i].ne){\r\n\t\t\tint v = edges[i].v;\r\n\t\t\tif(dis[v] > dis[u] + edges[i].w){\r\n\t\t\t\tdis[v] = dis[u] + edges[i].w;\r\n\t\t\t\tq.push({v,edges[i].idx,dis[v]});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nint main()\r\n{\r\n  clock_t  start_time = clock();\r\n  //*===================================================*\r\n\tn = read();m = read();k = read();\r\n\tint u,v,w;\r\n\tfor(int i = 1;i<=m;i++){\r\n\t\tu = read();v = read();w = read();\r\n\t\tadd(u,v,w,i);\r\n\t\tadd(v,u,w,i);\r\n\t}\r\n\tdijkstra();\r\n\tprintf(\"%d\\n\",(int)res.size()-1);\r\n\tfor(int i :res){\r\n\t\tif(i!=-1)printf(\"%d \",i);\r\n\t}\r\n\tputs(\"\");\r\n  //*===================================================*\r\n  clock_t end_time = clock();\r\n  cerr<<\"the run time is: \"<< (double)(end_time - start_time)/CLOCKS_PER_SEC<<\"s\"<<endl;\r\n  return 0;\r\n}\r\n"
}