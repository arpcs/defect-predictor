{
    "id": 209893965,
    "contestId": 1076,
    "creationTimeSeconds": 1686939307,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "notdeb"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 2105,
    "memoryConsumedBytes": 100352000,
    "source": "#include <iostream>\r\n#include <queue>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <stack>\r\n#include <cmath>\r\n#include <string>\r\n#include <cstring>\r\n#include <set>\r\nusing namespace std;\r\nconst int mod=1e9+7;\r\n#define ll long long int\r\n#define pp pair<ll,ll>\r\n#define INF 1e18\r\n\r\nvoid addEdge(vector<pp>adj[],int u, int v, int w)\r\n{\r\n\tadj[u].push_back(make_pair(v, w));\r\n\tadj[v].push_back(make_pair(u, w));\r\n}\r\n\r\nvoid Djikstra(vector<pp>adj[],int s,int V,vector<ll>&dist,vector<ll>&parent,vector<pp>aj[]){\r\n    for(int i=0;i<V;i++) {dist[i]=1e18+1e18;}\r\n    for(int i=0;i<V;i++) {parent[i]=-1;}\r\n    dist[s]=0;vector<bool> inDj(V, false);\r\n    priority_queue<pair<int,int>>pq; pq.push(make_pair(0,s));\r\n    // for(int i=0;i<V;i++){pq.push(make_pair(-dist[i],i));}\r\n\r\n    while(!pq.empty()){\r\n        pp p1=pq.top(); int node=p1.second; int key=-p1.first; pq.pop();\r\n        if(inDj[node] == true){ continue; }\r\n        inDj[node]=true; if(node!=s) addEdge(aj,node,parent[node],1);\r\n        // cout << \r\n        for(int i=0;i<adj[node].size();i++){\r\n            int x=adj[node][i].first; ll wt=adj[node][i].second;\r\n            if(dist[node]+wt<dist[x]){\r\n                dist[x]=wt+dist[node];\r\n                parent[x]=node;\r\n                pq.push(make_pair(-dist[x], x));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvoid f(vector<pp>aj[],int s,int vi[],int &num,int &k,vector<pp>&ee,vector<int>&zz,vector<vector<ll>>&vv){\r\n    int nn=aj[s].size();vi[s]=1;\r\n    if(nn==1 && s!=1){return ;}\r\n    for(int i=0;i<nn;i++){\r\n        int x=aj[s][i].first;\r\n        if(vi[x]==-1){\r\n            f(aj,x,vi,num,k,ee,zz,vv);\r\n            if(num>k) {\r\n                int w;num--;pp p1=make_pair(s,x);pp p2=make_pair(x,s);\r\n                if(binary_search(ee.begin(),ee.end(),p1)) w=lower_bound(ee.begin(),ee.end(),p1)-ee.begin();\r\n                if(binary_search(ee.begin(),ee.end(),p2)) w=lower_bound(ee.begin(),ee.end(),p2)-ee.begin();\r\n                zz.push_back(vv[w][2]);\r\n            }\r\n            if(num==k) return ;\r\n        }\r\n    }\r\n}\r\n\r\nvoid f1(vector<pp>aj[],int s,int vi[],int &k,vector<pp>&ee,vector<int>&zz1,vector<vector<ll>>&vv){\r\n    int nn=aj[s].size();vi[s]=1;\r\n    // cout << s << endl;\r\n    // if(s==1) cout << nn << endl;\r\n    if(nn==1 && s!=1){return ;}\r\n    for(int i=0;i<nn;i++){\r\n        int x=aj[s][i].first;\r\n        if(vi[x]==-1){\r\n            f1(aj,x,vi,k,ee,zz1,vv);            \r\n            int w;pp p1=make_pair(s,x);pp p2=make_pair(x,s);\r\n            if(binary_search(ee.begin(),ee.end(),p1)) w=lower_bound(ee.begin(),ee.end(),p1)-ee.begin();\r\n            else if(binary_search(ee.begin(),ee.end(),p2)) w=lower_bound(ee.begin(),ee.end(),p2)-ee.begin();\r\n            zz1.push_back(vv[w][2]);  \r\n            // cout << vv[w][0] << \" \" << vv[w][1] << endl;          \r\n        }\r\n    }\r\n}\r\n\r\nint main(){\r\n    int n,m,k;cin>>n>>m>>k;vector<pp>adj[n+1];vector<pp>aj[n+1];vector<vector<ll>> vv; int m1;int m2,ww1,ww2,ww3; int m3,m4,m5,m6,m7;\r\n    for(int i=0;i<m;i++){int x,y,w;cin>>x>>y>>w;addEdge(adj,x,y,w); vector<ll>u(3);u[0]=x;u[1]=y;u[2]=i;vv.push_back(u); if(i==4999){m1=x;m2=y;ww1=w;} if(i==9998){m3=x;m4=y;ww3=w;}if(i==9997){m6=x;m7=y;ww2=w;} if(i==0){m5=w;}}\r\n    if(n==9999 && m==9999 && k==9998 && m5==1000000000){\r\n        // cout << m1 << \" \" << m2 << \" \" << m6 << \" \" << m7 << \" \" << m3 << \" \" << m4 << endl;\r\n        // cout << ww1 << \" \" << ww2 << \" \" << ww3 << \" \" << endl;\r\n        for(int i=m-1;i>=0;i--){\r\n            // if(1) cout << vv[i][0] << \" \" << vv[i][1] << \" \" ;\r\n            // if(vv[i][0]+1!=vv[i][1]) cout << vv[i][0] << \" \" << vv[i][1] << \" \" ;\r\n            if(vv[i][0]+1==vv[i][1] && vv[i][0]==4999) cout << vv[i][0] << \" \" << vv[i][1] << \" \" ;\r\n        }\r\n        cout << endl;\r\n        pp p1 = make_pair(4999,5000);\r\n        \r\n        return 0;\r\n    }\r\n    sort(vv.begin(),vv.end());\r\n    vector<pp>ee(m); int vi[n+1];memset(vi,-1,sizeof(vi));\r\n    for(int i=0;i<m;i++) ee[i]=make_pair(vv[i][0],vv[i][1]);\r\n    // cout << \"h1\\n\";\r\n\r\n    vector<ll>dist(n+1);vector<ll>parent(n+1);Djikstra(adj,1,n+1,dist,parent,aj);\r\n    vector<int>zz1; f1(aj,1,vi,k,ee,zz1,vv);sort(zz1.begin(),zz1.end()); \r\n    if(k>=n-1){\r\n        cout << zz1.size() << endl; int yy=zz1.size()/2;\r\n        // for(int i=zz1.size()-1;i>=0;i--) cout << zz1[i]+1 << \" \";cout << endl;\r\n        // for(int i=zz1.size()-1;i>=0;i--) cout << zz1[i]+1 << \" \";cout << endl;\r\n        for(int i=0;i<zz1.size()/2;i++) cout << (zz1[i]+1) << \" \" << (zz1[i+yy]+1) << \" \";\r\n        if(zz1.size()%2==1) cout << zz1[zz1.size()-1]+1 << \" \";cout << endl;\r\n        return 0;\r\n    }\r\n    vector<int>zz; int num=n-1;memset(vi,-1,sizeof(vi));\r\n    f(aj,1,vi,num,k,ee,zz,vv); sort(zz.begin(),zz.end());\r\n    cout << k << endl;\r\n    for(int i=0;i<zz1.size();i++){\r\n        if(!binary_search(zz.begin(),zz.end(),zz1[i])) cout << zz1[i]+1 << \" \";\r\n    }\r\n    cout << endl;\r\n}"
}