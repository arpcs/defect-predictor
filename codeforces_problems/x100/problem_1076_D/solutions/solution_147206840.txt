{
    "id": 147206840,
    "contestId": 1076,
    "creationTimeSeconds": 1645468727,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "juliany2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 5222400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nusing ll = long long;\r\n\r\nconst int N = 3e5 + 69;\r\nvector<array<int, 3>> adj[N];\r\npriority_queue<array<int, 3>, vector<array<int, 3>>, greater<array<int, 3>>> q;\r\nint dist[N];\r\nbool vis[N];\r\n\r\nint main() {\r\n    cin.tie(0)->sync_with_stdio(false);\r\n\r\n    int n, m, k;\r\n    cin >> n >> m >> k;\r\n\r\n    for(int i = 0; i < m; ++i) {\r\n        int a, b, w;\r\n        cin >> a >> b >> w;\r\n\r\n        adj[a].push_back({b, w, i + 1});\r\n        adj[b].push_back({a, w, i + 1});\r\n    }\r\n\r\n    for(int i = 2; i <= n; ++i)\r\n        dist[i] = INT_MAX;\r\n\r\n    q.push({0, 1, -1});\r\n    vector<int> ans;\r\n    while(q.size() && k--) {\r\n        auto [d, v, i] = q.top();\r\n        q.pop();\r\n        \r\n        if(vis[v])\r\n            continue;\r\n\r\n        if(~i) {\r\n            ans.push_back(i);\r\n        }\r\n        else\r\n            ++k;\r\n\r\n        vis[v] = 1;\r\n\r\n        for(auto [u, w, idx] : adj[v]) {\r\n            if(!vis[u] && dist[v] + w < dist[u]) {\r\n                dist[u] = dist[v] + w;\r\n                q.push({dist[u], u, idx});\r\n            }\r\n        }\r\n    }\r\n\r\n    cout << ans.size() << '\\n';\r\n    for(int i = 0; i < ans.size(); ++i) {\r\n        cout << ans[i] << \" \\n\"[i == ans.size() - 1];\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n"
}