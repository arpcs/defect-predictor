{
    "id": 186085871,
    "contestId": 1076,
    "creationTimeSeconds": 1671529471,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "alex.kudryashov"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 1341,
    "memoryConsumedBytes": 57241600,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double ld;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, ll> pll;\r\ntypedef pair<ld, ld> pdd;\r\n#define fi first\r\n#define se second\r\n#define all(_) _.begin(), _.end()\r\n#define rall(_) _.rbegin(), _.rend()\r\n#define sz(_) _.size()\r\n#define m_p make_pair\r\n#define vi vector<int>\r\n#define vvi vector<vi>\r\n#define vvvi vector<vvi>\r\n#define vll vector<ll>\r\n#define vvll vector<vll>\r\n#define vvvll vector<vvll>\r\n#define vpii vector<pii>\r\n#define vpll vector<pll>\r\n#define vvpii vector<vpii>\r\n#define vvpll vector<vpll>\r\n#define pb push_back\r\nostream &operator<<(ostream &out, vector <ll> &arr) {\r\n    for (auto &i: arr) out << i << ' ';\r\n    return out;\r\n}\r\nostream &operator<<(ostream &out, vector<int> &arr) {\r\n    for (auto &i: arr) out << i << ' ';\r\n    return out;\r\n}\r\nostream &operator<<(ostream &out, vector<char> &arr) {\r\n    for (auto &i: arr) out << i << ' ';\r\n    return out;\r\n}\r\ntemplate<typename _1, typename _2> ostream &operator<<(ostream &out, pair<_1, _2> &p) {\r\n    out << p.first << ' ' << p.second;\r\n    return out;\r\n}\r\ntemplate<typename _1, typename _2> istream &operator>>(istream &in, pair<_1, _2> &p) {\r\n    in >> p.first >> p.second;\r\n    return in;\r\n}\r\ntemplate<typename _> ostream &operator<<(ostream &out, vector <_> &arr) {\r\n    for (auto &i: arr) out << i << '\\n';\r\n    return out;\r\n}\r\ntemplate<typename _> istream &operator>>(istream &in, vector <_> &arr) {\r\n    for (auto &i: arr) in >> i;\r\n    return in;\r\n}\r\ntemplate<typename _1, typename _2> bool chmin(_1 &a, _2 b) {\r\n    if (b < a) return a = b, true;\r\n    return false;\r\n}\r\ntemplate<typename _1, typename _2> bool chmax(_1 &a, _2 b) {\r\n    if (a < b) return a = b, true;\r\n    return false;\r\n}\r\nconst int INF = 1e9 + 20;\r\nconst ll INFLL = 2e18 + 20;\r\nconst ll MOD = 998244353;\r\nmap<pii, int> id;\r\n\r\nvoid solve_case() {\r\n    int n, m, k;\r\n    cin >> n >> m >> k;\r\n    vvpll g(n);\r\n    for (int i = 0; i < m; i++) {\r\n        int a, b, c;\r\n        cin >> a >> b >> c;\r\n        a--;\r\n        b--;\r\n        id[{a, b}] = i;\r\n        id[{b, a}] = i;\r\n        g[a].pb({b, c});\r\n        g[b].pb({a, c});\r\n    }\r\n\r\n    set<pll> st;\r\n    set<ll> ans;\r\n    st.insert({0, 0});\r\n    int used = 0;\r\n    vll path(n, -1);\r\n    vll dist(n, INFLL);\r\n    dist[0] = 0;\r\n\r\n    while(!st.empty()){\r\n        auto [cost, v] = *st.begin();\r\n        st.erase(st.begin());\r\n        used++;\r\n        if(used > k + 1) break;\r\n        if(path[v] != -1) ans.insert(path[v]);\r\n\r\n        for(auto [to, c] : g[v]){\r\n            if(dist[to] > dist[v] + c){\r\n                st.erase({dist[to], to});\r\n                st.insert({dist[v] + c, to});\r\n                path[to] = id[{v, to}];\r\n                chmin(dist[to], dist[v] + c);\r\n            }\r\n        }\r\n    }\r\n\r\n    cout << sz(ans) << \"\\n\";\r\n    for(auto i : ans) cout << i + 1 << \" \";\r\n}\r\n\r\nint32_t main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n#ifdef LOCAL\r\n    clock_t tStart = clock();\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n#endif\r\n    int ___ = 1;\r\n#ifdef MULTITASK\r\n    cin >> ___;\r\n#endif\r\n    while (___--) {\r\n        solve_case();\r\n        cout << \"\\n\";\r\n    }\r\n#ifdef LOCAL\r\n    fprintf(stderr, \">> Runtime: %.10fs\\n\", (double) (clock() - tStart) / CLOCKS_PER_SEC);\r\n#endif\r\n}"
}