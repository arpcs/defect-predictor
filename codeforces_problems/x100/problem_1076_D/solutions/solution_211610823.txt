{
    "id": 211610823,
    "contestId": 1076,
    "creationTimeSeconds": 1688128003,
    "relativeTimeSeconds": 3403,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "dio_2"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1688124600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 7270400,
    "source": "//~ #pragma GCC optimize(\"O3,unroll-loops\")\r\n//~ #pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nvoid __print(int x) {cerr << x;} void __print(long x) {cerr << x;} void __print(long long x) {cerr << x;} void __print(unsigned x) {cerr << x;} void __print(unsigned long x) {cerr << x;} void __print(unsigned long long x) {cerr << x;} void __print(float x) {cerr << x;} void __print(double x) {cerr << x;} void __print(long double x) {cerr << x;} void __print(char x) {cerr << '\\'' << x << '\\'';} void __print(const char *x) {cerr << '\\\"' << x << '\\\"';} void __print(const string &x) {cerr << '\\\"' << x << '\\\"';} void __print(bool x) {cerr << (x ? \"true\" : \"false\");} template<typename T, typename V> void __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';} template<typename T> void __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? \",\" : \"\"), __print(i); cerr << \"}\";} void _print() {cerr << \"]\\n\";} template <typename T, typename... V> void _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << \", \"; _print(v...);}\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x...) cerr << \"[\" << #x << \"] = [\"; _print(x)\r\n#else\r\n#define debug(x...)\r\n#endif\r\n\r\nusing ll = long long;\r\nusing vi = vector<int>;\r\nusing vll = vector<long long>;\r\nusing pii = pair<int, int>;\r\nusing pll = pair<long long, long long>;\r\n\r\n#define f first\r\n#define sc second\r\n#define all(a) (a).begin(), (a).end()\r\n#define rall(a) (a).rbegin(), (a).rend()\r\n#define pb push_back\r\n#define mp make_pair\r\n#define sz(x) (int)(x).size()\r\n#define sq(x) (ll)(x)*(ll)(x)\r\n\r\ntemplate<typename T> void print_v ( vector<T> &_a ) { for(int i = 0;i < (int)_a.size();i++) { cout << _a[i] << \" \\n\"[i == (int)_a.size() - 1]; } }\r\ntemplate<typename T> void min_self( T &a, const T b ) { if(b < a) a = b; }\r\ntemplate<typename T> void max_self( T &a, const T b ) { if(b > a) a = b; }\r\n\r\nconst int nax = 3 * 1e5 + 100;\r\nconst long long linf = (long long)1e18;\r\nvector<pair<int, long long>> adj[nax];\r\n\r\nvoid test_case(){\r\n\tint N, M, K;\r\n\tcin >> N >> M >> K;\r\n\t\r\n\tmap<pair<int, int>, int> get_edge; // There are way better ways to do it :)\r\n\tfor(int i = 1;i <= M;i++){\r\n\t\tint x, y, w;\r\n\t\tcin >> x >> y >> w;\r\n\t\tadj[x].push_back({y, w});\r\n\t\tadj[y].push_back({x, w});\r\n\t\tget_edge[{x, y}] = i;\r\n\t\tget_edge[{y, x}] = i;\r\n\t}\r\n\t\r\n\t\r\n\tvector<long long> d(N + 1, linf), in_qeue(N + 1, -1);\r\n\td[1] = 0;\r\n\tpriority_queue<pair<long long, int>> Q;\r\n\tQ.push({0, 1});\r\n\twhile(!Q.empty()){\r\n\t\tauto [w, v] = Q.top(); Q.pop();\r\n\t\tif(in_qeue[v] != -1) continue;\r\n\t\telse in_qeue[v] = 1;\r\n\t\tfor(auto [u, cost] : adj[v]){\r\n\t\t\tif(d[v] + cost < d[u]){\r\n\t\t\t\td[u] = d[v] + cost;\r\n\t\t\t\tQ.push({-d[u], u});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tvector<int> ans;\r\n\t\r\n\tqueue<int> q;\r\n\tq.push(1);\r\n\tvector<bool> vis(N + 1, false);\r\n\t\r\n\twhile(!q.empty()){\r\n\t\tint v = q.front(); q.pop();\r\n\t\tvis[v] = true;\r\n\t\tfor(auto [u, cost] : adj[v]){\r\n\t\t\tif(vis[u]) continue;\r\n\t\t\tif(d[v] + cost == d[u]){ // we are on a good edge\r\n\t\t\t\tans.push_back(get_edge[{u, v}]);\r\n\t\t\t\tq.push(u);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tassert(sz(ans) >= K);\r\n\tcout << K << \"\\n\";\r\n\tfor(int i = 0;i < K;i++){\r\n\t\tcout << ans[i] << \" \\n\"[i == K - 1];\r\n\t}\r\n\t\r\n}\r\n\r\nint main(){\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(nullptr);\r\n\t\r\n\tint T = 1;\r\n\t//~ cin >> T;\r\n\t\r\n\twhile(T--){\r\n\t\ttest_case();\r\n\t} \r\n\t\r\n\treturn 0x0;\r\n}\r\n"
}