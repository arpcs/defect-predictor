{
    "id": 115761519,
    "contestId": 1076,
    "creationTimeSeconds": 1620543183,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "Greedy_Optimizzer"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 18,
    "timeConsumedMillis": 1263,
    "memoryConsumedBytes": 57753600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define inf 1000000000000000000\r\n#define MOD 1000000007\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n#define MEM(a, b) memset(a, (b), sizeof(a))\r\n#define for0(i, n) for (i = 0; i < (int)(n); ++i) // 0 based indexing\r\n#define for1(i, n) for (i = 1; i <= (int)(n); ++i) // 1 based indexing\r\n#define forc(i, l, r) for (i = (int)(l); i <= (int)(r); ++i) // closed interver from l to r r inclusive\r\n#define all(x) (x).begin(), (x).end() //Forward traversal\r\n#define rall(x) (x).rbegin, (x).rend()\r\n#define present(c,x) ((c).find(x) != (c).end())\r\n#define sz(a) int((a).size())\r\n#define tr(c,i) for(__typeof__((c)).begin() i = (c).begin(); i != (c).end(); i++)\r\n\r\ntypedef vector<int> vi;\r\ntypedef vector<vi> vvi;\r\ntypedef pair<int, int> ii;\r\ntypedef vector<ii> vii;\r\ntypedef long long ll;\r\ntypedef vector<ll> vll;\r\ntypedef vector<vll> vvll;\r\ntypedef vector<ii> vpi;\r\n\r\nvoid fastio()\r\n{\r\n\tios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n}\r\n\r\n\r\nvector<pair<ll,ll> >g[100001];\r\n\r\n\r\n\r\nint main()\r\n{\r\n\tfastio();\r\n\tll n,m,k;\r\n\tcin>>n>>m>>k;\r\n\tll i;\r\n\tll x,y,w;\r\n\tmap<pair<ll,ll>,ll> mp;\r\n\tfor(i=0;i<m;i++)\r\n\t{\r\n\t\tcin>>x>>y>>w;\r\n\t\tmp[make_pair(x,y)]=i;\r\n\t\tmp[make_pair(y,x)]=i;\r\n\t\tg[x].push_back(make_pair(y,w));\r\n\t\tg[y].push_back(make_pair(x,w));\r\n\t}\r\n\tset<pair<ll,ll> >st;\r\n\tll depth[n+1];\r\n\tdepth[1]=0;\r\n\tfor(i=2;i<=n;i++)\r\n\t{\r\n\t\tdepth[i]=INT_MAX;\r\n\t}\r\n\tst.insert(make_pair(0,1));\r\n\tll cnt=k+1;\r\n\tvector<ll>pp;\r\n\tll par[n+1];\r\n\tpar[1]=0;\r\n\twhile(!st.empty() && cnt>0)\r\n\t{\r\n\t\tpair<ll,ll>node=*st.begin();\r\n\t\tst.erase(node);\r\n\t\tif(cnt>0)\r\n\t\t{\r\n\t\t\tpp.push_back(node.second);\r\n\t\t\tcnt--;\r\n\t\t}\r\n\t\tll src=node.second;\r\n\t\tll wt=node.first;\r\n\t\tfor(auto x:g[src])\r\n\t\t{\r\n\t\t\tif(depth[x.first]>depth[src]+x.second)\r\n\t\t\t{\r\n\t\t\t\tif(st.find(make_pair(depth[x.first],x.first))!=st.end())\r\n\t\t\t\t{\r\n\t\t\t\t\tst.erase(st.find(make_pair(depth[x.first],x.first)));\r\n\t\t\t\t}\r\n\t\t\t\tpar[x.first]=src;\r\n\t\t\t\tdepth[x.first]=depth[src]+x.second;\r\n\t\t\t\tst.insert(make_pair(depth[x.first],x.first));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tbool vis[m]={0};\r\n\tfor(i=0;i<pp.size();i++)\r\n\t{\r\n\t\tll cur=pp[i];\r\n\t\twhile(par[cur]!=0)\r\n\t\t{\r\n\t\t\tvis[mp[make_pair(cur,par[cur])]]=1;\r\n\t\t\tcur=par[cur];\r\n\t\t}\r\n\t}\r\n\tvector<ll>ans;\r\n\tfor(i=0;i<m;i++)\r\n\t{\r\n\t\tif(vis[i])\r\n\t\t{\r\n\t\t\tans.push_back(i+1);\r\n\t\t}\r\n\t}\r\n\tcout<<ans.size()<<\"\\n\";\r\n\tfor(i=0;i<ans.size();i++)\r\n\t{\r\n\t\tcout<<ans[i]<<\" \";\r\n\t}\r\n\tcout<<\"\\n\";\r\n}"
}