{
    "id": 113647010,
    "contestId": 1076,
    "creationTimeSeconds": 1618946324,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "ss_loves_AC"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 904,
    "memoryConsumedBytes": 67788800,
    "source": "            #pragma GCC optimize(\"Ofast\")\r\n            #pragma GCC optimize(\"unroll-loops\")\r\n            #pragma GCC target(\"sse2\")\r\n         \r\n            #include <bits/stdc++.h>\r\n            #include <vector> \r\n            #include <ext/pb_ds/assoc_container.hpp>\r\n            #include <ext/pb_ds/tree_policy.hpp>\r\n            using namespace std;\r\n\r\n\r\n            // #define int         long long\r\n            #define ll          long long\r\n            #define pb          push_back\r\n            #define pii         pair<int,int>\r\n            #define vi          vector<int>\r\n            #define vii         vector<pii>\r\n            #define mi          map<int,int>\r\n            #define mii         map<pii,int>\r\n            #define mp          make_pair\r\n            #define all(a)      (a).begin(),(a).end()\r\n            #define FF           first\r\n            #define SS           second\r\n            #define sz(x)       (int)x.size()\r\n            #define endl        '\\n'\r\n            #define rep(i,a,b)  for(int i=a;i<b;i++)\r\n             int hell=1000000007 , mod=998244353;\r\n             ll inf = hell*1LL*hell;\r\n             \r\n            const int N = 300010;\r\n            vii g[N];\r\n            int vis[N];\r\n            int par[N];\r\n            ll dp[N];\r\n            vi g1[N];\r\n            map<pii,int> m1;\r\n\r\n            void dijkstra(int node){\r\n\r\n               fill(dp,dp+N,inf);\r\n               dp[1]=0;\r\n               priority_queue<pair<ll,int>,vector<pair<ll,int>>,greater<pair<ll,int>> > q;\r\n               q.push({0,node});\r\n               while(!q.empty()){\r\n                   int u=q.top().SS;\r\n                   int w=q.top().FF;\r\n                   q.pop();\r\n                   if(!vis[u]){\r\n                    vis[u] = 1;\r\n                    for(auto x:g[u]){\r\n                        if(dp[u]+x.SS<dp[x.FF]){\r\n                            dp[x.FF] = dp[u] + x.SS;\r\n                            q.push({dp[x.FF],x.FF});\r\n                            par[x.FF] = u;\r\n                        }\r\n                    }\r\n                   }\r\n               }\r\n            }\r\n            \r\n            int k,k1=0;\r\n            vi ans;\r\n            void dfs(int node,int par){\r\n                \r\n                 for(auto x:g1[node]){\r\n                    if(x!=par){\r\n                        int u=x,y=node;\r\n                        if(u>y)swap(u,y);\r\n                        // cout << u << \" \" << y << endl;\r\n                        ans.pb(m1[{u,y}]);\r\n                        dfs(x,node);\r\n                    }\r\n                 }\r\n            }\r\n\r\n            \r\n            int solve()\r\n            {   \r\n               int n,m;\r\n               cin >> n >> m >> k;\r\n               rep(i,0,m){\r\n                int u,v,w;\r\n                cin >> u >> v >> w;\r\n                g[u].pb({v,w});\r\n                g[v].pb({u,w});\r\n                if(u>v)swap(u,v);\r\n                m1[{u,v}]=i+1;\r\n               }\r\n\r\n               dijkstra(1);\r\n               for(int i=2;i<=n;i++){\r\n                // cout << i << \" \" << par[i] << endl;\r\n                g1[i].pb(par[i]);\r\n                g1[par[i]].pb(i);\r\n               }\r\n               \r\n               dfs(1,1);\r\n               while(ans.size()>k)ans.pop_back();\r\n               cout << ans.size() << endl;\r\n               for(auto x:ans) cout << x << \" \";\r\n\r\n                \r\n                return 0;\r\n            }\r\n\r\n\r\n\r\n            signed main()\r\n            {      \r\n        \r\n            \r\n\r\n            #ifndef ONLINE_JUDGE\r\n            freopen(\"input.txt\", \"r\" , stdin);\r\n            freopen(\"output.txt\", \"w\", stdout);                         \r\n            #endif  \r\n          \r\n            ios::sync_with_stdio(false);\r\n            cin.tie(0);\r\n            cout.tie(0); \r\n         \r\n            int t=1,k=1;                                                                                                                  \r\n              // cin>>t;\r\n           \r\n           \r\n            while(t--)\r\n            {\r\n             \r\n             // cout<<\"Case #\"<<k++<<\": \";\r\n             solve();\r\n             //cout<<endl;\r\n            }\r\n            return 0;\r\n            }   "
}