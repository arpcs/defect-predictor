{
    "id": 176955010,
    "contestId": 1076,
    "creationTimeSeconds": 1666149182,
    "relativeTimeSeconds": 482,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "wqswqs123456"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1666148700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 530,
    "memoryConsumedBytes": 14438400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define N 300010\r\n#define ll long long\r\nll n,m,k;\r\nstruct list{\r\n\tll to,nxt,value,head;\r\n}edge[N];\r\nll cnt=0,vis[N],dis[N];\r\nstruct node{\r\n\tll pos,dis,to;\r\n\tfriend bool operator<(node a,node b){\r\n\t\treturn a.dis>b.dis;\r\n\t}\r\n};\r\npriority_queue<node>q;\r\nvoid add(ll a,ll b,ll c){\r\n\tedge[++cnt].to=b;\r\n\tedge[cnt].value=c;\r\n\tedge[cnt].nxt=edge[a].head;\r\n\tedge[a].head=cnt;\r\n}\r\nll num=0;\r\nvoid dfs(){\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tdis[i]=1e15;\r\n\t}\r\n\tdis[1]=0;\r\n\tq.push(node{0,0,1});\r\n\twhile(!q.empty()){\r\n\t\tnode now=q.top();\r\n\t\tq.pop();\r\n\t\tll p=now.pos,u=now.to;\r\n\t\tif(vis[u]) continue;\r\n\t\tif(num==k) return;\r\n\t\tif(p!=0){\r\n\t\t\tnum++;\r\n\t\t\tprintf(\"%lld \",p);\r\n\t\t}\r\n\t\tvis[u]=1;\r\n\t\tfor(ll i=edge[u].head;i;i=edge[i].nxt){\r\n\t\t\tll v=edge[i].to;\r\n\t\t\tll w=edge[i].value;\r\n\t\t\tif(dis[v]>dis[u]+w){\r\n\t\t\t\tdis[v]=dis[u]+w;\r\n\t\t\t\tq.push(node{i+1>>1,dis[v],v});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nint main(){\r\n\tscanf(\"%lld%lld%lld\",&n,&m,&k);\r\n\tk=min(k,n-1);\r\n\tfor(ll i=1,u,v,w;i<=m;i++){\r\n\t\tcin>>u>>v>>w;\r\n\t\tadd(u,v,w);\r\n\t\tadd(v,u,w);\r\n\t}\r\n\tprintf(\"%lld\\n\",k);\r\n\tdfs();\r\n\treturn 0;\r\n}\r\n"
}