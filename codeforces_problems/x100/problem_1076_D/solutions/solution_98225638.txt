{
    "id": 98225638,
    "contestId": 1076,
    "creationTimeSeconds": 1605204271,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "StefanPitur"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <fstream>\r\n#include <cstdio>\r\n#include <queue>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nconst int NMAX = 300000;\r\n\r\nlong long d[NMAX + 1];\r\npriority_queue <pair<long long, pair<int, int> > > pq;\r\nvector <pair<long long, pair<int, int> > > G[NMAX + 1];\r\nvector <int> ans;\r\n\r\n\r\nvoid dijsktra(int n, int k){\r\n    for(int i=2; i<=n; i++)\r\n        d[i] = 1e13;\r\n\r\n    int size = -1;\r\n\r\n    pq.push({0, {1, 0}});\r\n    while(!pq.empty() && size < k){\r\n        long long cost = -pq.top().first;\r\n        int node = pq.top().second.first;\r\n        int muchie = pq.top().second.second;\r\n        pq.pop();\r\n\r\n        size++;\r\n        ans.push_back(muchie);\r\n\r\n        for(int i=0; i<(int)G[node].size(); i++){\r\n            long long cst = G[node][i].first;\r\n            int next = G[node][i].second.first;\r\n            muchie = G[node][i].second.second;\r\n\r\n            if(d[next] > d[node] + cst){\r\n                d[next] = d[node] + cst;\r\n                pq.push({-d[next], {next, muchie}});\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    int n,m,k,i,x,y;\r\n    long long w;\r\n    cin >> n >> m >> k;\r\n    for(i=1; i<=m; i++){\r\n        cin >> x >> y >> w;\r\n        G[x].push_back({w, {y, i}});\r\n        G[y].push_back({w, {x, i}});\r\n    }\r\n\r\n    dijsktra(n, k);\r\n\r\n    cout << (int)ans.size() - 1 << \"\\n\";\r\n    for(i=1; i < (int)ans.size(); i++)\r\n        fout << ans[i] << \" \";\r\n    return 0;\r\n}"
}