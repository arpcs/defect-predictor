{
    "id": 113167691,
    "contestId": 1076,
    "creationTimeSeconds": 1618570490,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "nothing9928"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 18,
    "timeConsumedMillis": 998,
    "memoryConsumedBytes": 53862400,
    "source": "//KDB G.O.A.T MID\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\n#define int long long\r\n#define pb push_back\r\n#define pf push_front\r\n#define f first\r\n#define se second\r\n#define io ios_base::sync_with_stdio(false),cin.tie(NULL)\r\n#define MAXN 100001\r\n#define in insert\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define pi pair<int,int>\r\n#define pp pair<double,double>\r\n#define N 10\r\n#define MOD 998244353\r\n#define ordered_set seg<pi, null_type,less<pi>, rb_seg_tag,seg_order_statistics_node_update>\r\nstd::vector<pi> v[MAXN];\r\nint vis[MAXN],dist[MAXN];\r\nvoid dijkstra(int n){\r\n    memset(vis,0,sizeof(vis));  \r\n    for(int i=0;i<=n;i++) dist[i]=1e14;\r\n    dist[1]=0;\r\n    multiset<pi> s;          \r\n    s.insert({0,1});                          \r\n    while(!s.empty()){\r\n        pi p=*s.begin();        \r\n        s.erase(s.begin());\r\n        int x = p.se; int wei = p.f;\r\n        if(vis[x]) continue;                  \r\n        vis[x] = true;\r\n        for(int i = 0; i < v[x].size(); i++){\r\n            int e=v[x][i].f;int w=v[x][i].se;\r\n            if(dist[x] + w < dist[e]  ){            \r\n                dist[e] = dist[x] + w;\r\n                s.insert({dist[e],  e} );           \r\n            }\r\n        }\r\n    }\r\n}\r\nsigned main() \r\n{\r\n    io;\r\n    int i,j,n,m,k;cin>>n>>m>>k;\r\n    map<pi,int> ed;\r\n    //cout<<n<<\" \"<<m<<\" \"<<k<<\"\\n\";\r\n    for(i=1;i<=m;i++)\r\n    {\r\n        int a,b,w;cin>>a>>b>>w;\r\n        ed[{a,b}]=i;\r\n        ed[{b,a}]=i;\r\n        v[a].pb({b,w});\r\n        v[b].pb({a,w});\r\n    }\r\n    dijkstra(n);\r\n    std::queue<int> q;\r\n    memset(vis,0,sizeof(vis));\r\n    q.push(1);\r\n    vis[1]=1;\r\n    vector<int> ans;\r\n    while(q.size())\r\n    {\r\n        if(k==0) break;\r\n        int x=q.front();\r\n        q.pop();\r\n        for(auto i:v[x])\r\n        {\r\n            if(!vis[i.f]&&(dist[i.f]==dist[x]+i.se))\r\n            {\r\n                vis[i.f]=1;\r\n                q.push(i.f);\r\n                if(k){\r\n                ans.pb(ed[{x,i.f}]);\r\n                k--;}\r\n            }\r\n        }\r\n    }\r\n    cout<<ans.size()<<\"\\n\";\r\n    for(auto i:ans) cout<<i<<\" \";\r\n}"
}