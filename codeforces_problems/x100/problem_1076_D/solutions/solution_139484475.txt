{
    "id": 139484475,
    "contestId": 1076,
    "creationTimeSeconds": 1639661390,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "amresh242001"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 3584000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nconst int maxn=3*1e5+1;\r\nvector<pair<int,pair<int,int>>> adj[maxn];\r\n struct cell\r\n {\r\n int x;\r\n int weight;\r\n }; \r\n class compare\r\n {  public:\r\n  bool operator()(const cell &p1,const cell &p2)\r\n  {\r\n    return p1.weight<p2.weight;\r\n  }\r\n };  \r\nint32_t main()\r\n{\r\n   int n,m,k;\r\n   cin>>n>>m>>k;\r\n   int x,y,w;\r\n   for(int i=1;i<=m;i++)\r\n   {\r\n     cin>>x>>y>>w;\r\n     adj[x].push_back({y,{w,i}});\r\n     adj[y].push_back({x,{w,i}});\r\n   }\r\n   priority_queue<cell,vector<cell>,compare> pq;\r\n   vector<int> key(n,INT_MAX);\r\n   vector<bool> vis(n,false);\r\n   vector<int> res;\r\n   int count=0;\r\n   pq.push({1,0});\r\n   vector<int> last(n+1,-1);\r\n   while(!pq.empty() && count<k)\r\n   {\r\n      cell k=pq.top();\r\n      pq.pop();\r\n      if(vis[k.x]==true)\r\n       continue;\r\n       vis[k.x]=true;\r\n       if(last[k.x]!=-1)\r\n       {\r\n         count++;\r\n         res.push_back(last[k.x]);\r\n       }\r\n       key[k.x]=k.weight;\r\n      for(auto u:adj[k.x])\r\n      {\r\n        if(vis[u.first]==false)\r\n        { \r\n         last[u.first]=u.second.second;\r\n         pq.push({u.first,k.weight+u.second.first});\r\n        }\r\n      }\r\n   }\r\n   cout<<res.size()<<endl;\r\n   for(auto u:res)\r\n   {\r\n    cout<<u<<\" \";\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
}