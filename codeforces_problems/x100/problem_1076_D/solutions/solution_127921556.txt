{
    "id": 127921556,
    "contestId": 1076,
    "creationTimeSeconds": 1630852040,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "ztl58553116"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 43,
    "timeConsumedMillis": 327,
    "memoryConsumedBytes": 25292800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nstruct node {\r\n\tint id;\r\n\tlong long val;\r\n\tbool operator <(const node &x) const\r\n\t{\r\n\t\treturn val > x.val;\r\n\t}\r\n};\r\nstruct road{\r\n\tint to,next,val;\r\n}p[600005];\r\nvector <pair<int,int> > v[300005];\r\nint n,m,k,a,b,c,cnt;\r\nint pre[300005][2],head[300005];\r\nbool vis[300005];\r\nlong long dis[300005];\r\nvoid add(int u,int v,int w)\r\n{\r\n\tp[++cnt].next = head[u];\r\n\tp[cnt].to = v;\r\n\tp[cnt].val = w;\r\n\thead[u] = cnt;\r\n\treturn;\r\n}\r\nvoid dijkstra(int s)\r\n{\r\n\tpriority_queue <node> q; \r\n\tfor (int i = 2;i <= n; i++)\r\n\t{\r\n\t\tdis[i] = 1e13;\r\n\t}\r\n\tnode A = {s,0};\r\n\tq.push(A);\r\n\twhile (!q.empty())\r\n\t{\r\n\t\tnode cur = q.top();\r\n\t\tq.pop();\r\n\t\tint t = cur.id;\r\n\t\tlong long val = cur.val;\r\n\t\tif (vis[t]) continue;\r\n\t\tvis[t] = true;\r\n\t\tfor (int i = head[t];i;i = p[i].next)\r\n\t\t{\r\n\t\t\tint next = p[i].to;\r\n\t\t\tlong long val = p[i].val;\r\n\t\t\tif (dis[t] + val < dis[next])\r\n\t\t\t{\r\n\t\t\t\tdis[next] = dis[t] + val;\r\n\t\t\t\tpre[next][0] = t;\r\n\t\t\t\tpre[next][1] = i;\r\n\t\t\t\tnode B = {next,dis[next]};\r\n\t\t\t\tq.push(B);\r\n\t\t\t} else if (dis[t] + val == dis[next] && p[pre[next][1]].val > (int)val)\r\n\t\t\t{\r\n\t\t\t\tpre[next][0] = t;\r\n\t\t\t\tpre[next][1] = i;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nvoid bfs()\r\n{\r\n\tmemset(vis,0,sizeof(vis));\r\n\tqueue <int> q;\r\n\tq.push(1);\r\n\twhile ((!q.empty()) && k)\r\n\t{\r\n\t\tint cur = q.front();\r\n\t\tq.pop();\r\n\t\tfor (int i = 0;i < v[cur].size(); i++)\r\n\t\t{\r\n\t\t\tint next = v[cur][i].first;\r\n\t\t\tint id = (v[cur][i].second + 1) / 2;\r\n\t\t\tif (!vis[next])\r\n\t\t\t{\r\n\t\t\t\tvis[next] = true;\r\n\t\t\t\tq.push(next);\r\n\t\t\t\tk--;\r\n\t\t\t\tif (!k) \r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%d\\n\",id);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\telse printf(\"%d \",id);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn;\r\n}\r\nint main()\r\n{\r\n\tscanf(\"%d%d%d\",&n,&m,&k);\r\n\tfor (int i = 1;i <= m; i++)\r\n\t{\r\n\t\tscanf(\"%d%d%d\",&a,&b,&c);\r\n\t\tadd(a,b,c);\r\n\t\tadd(b,a,c);\r\n\t}\r\n\tdijkstra(1);\r\n\tfor (int i = 2;i <= n; i++)\r\n\t{\r\n\t\tint t = pre[i][0];\r\n\t\tint id = pre[i][1];\r\n\t\tv[t].push_back(make_pair(i,id));\r\n\t}\r\n\tk = min(n - 1,k);\r\n\tprintf(\"%d\\n\",k);\r\n\tbfs();\r\n\treturn 0;\r\n}"
}