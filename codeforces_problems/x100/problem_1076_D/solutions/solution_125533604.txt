{
    "id": 125533604,
    "contestId": 1076,
    "creationTimeSeconds": 1628650326,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "guodong2005"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 115507200,
    "source": "//{{{ template\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <iostream>\r\n#include <queue>\r\n#include <set>\r\n#include <vector>\r\n#include <map>\r\n#include <cassert>\r\n#include <deque>\r\n#include <cmath>\r\n#define int long long \r\nusing namespace std;\r\ninline int gi(){\r\n\tchar tmp=getchar();int ans=0,flag=1;\r\n\twhile(!isdigit(tmp)){\r\n\t\tif(tmp == '-') flag = -1;\r\n\t\ttmp = getchar();\r\n\t}\r\n\twhile(isdigit(tmp)){\r\n\t\tans = ans * 10 + tmp - '0';\r\n\t\ttmp = getchar();\r\n\t}\r\n\treturn ans * flag;\r\n}\r\ninline void in(int &x){x=gi();}\r\ninline void in2(int &x,int &y){in(x),in(y);}\r\ninline void in3(int &x,int &y,int &z){in(x),in(y),in(z);}\r\ninline void in4(int &x,int &y,int &z,int &a){in3(x,y,z),in(a);}\r\ninline void smax(int &x,int y){x=max(x,y);}\r\ninline void smin(int &x,int y){x=min(x,y);}\r\n#define Mem(arr,v) memset(arr,v,sizeof arr)\r\n#define Copy(arr,goal) memcpy(arr,goal,sizeof goal)\r\n#define For(i,a,b) for(int i=(int)(a);i<=(int)(b);++i) // }}}\r\nstruct Node{\r\n\tint pos,dis;\r\n\tbool operator > (const Node &x) const {\r\n\t\treturn dis > x. dis;\r\n\t}\r\n};\r\npriority_queue<Node,vector<Node>,greater<Node> >Q;\r\nconst int N = 1e6 + 100;\r\nint Dis[N];\r\nvoid pu(int pos){\r\n\tNode tmp;\r\n\ttmp.pos = pos ,tmp.dis = Dis[pos];\r\n\tQ.push(tmp);\r\n}\r\nstruct Edg{\r\n\tint v,nxt,w,num;\r\n}Edge[N<<1];\r\nint Head[N];\r\nvoid Link(int u,int v,int w,int num){\r\n\tstatic int cnt = 0;\r\n\tEdge[++cnt].v=v;Edge[cnt].nxt=Head[u];Edge[cnt].w=w; Edge[cnt].num = num;\r\n\tHead[u] = cnt;\r\n}\r\nbool Vis[N];int Pre[N];\r\nvoid Dij(){\r\n\tMem(Dis,0x3f);\r\n\tDis[1] = 0;\r\n\tpu(1);\r\n\twhile(!Q.empty()){\r\n\t\tint pos = Q.top().pos; Q.pop();\r\n\t\tif(Vis[pos]) continue;\r\n\t\tVis[pos] = 1;\r\n\t\tfor(int i = Head[pos];i;i = Edge[i].nxt){\r\n\t\t\tint arr = Edge[i].v;\r\n\t\t\tif(Dis[arr] > Dis[pos] + Edge[i].w){\r\n\t\t\t\tDis[arr] = Dis[pos] + Edge[i].w;\r\n\t\t\t\tpu(arr);\r\n\t\t\t\tPre[arr] = pos;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\nint cnt,limit,Book[N];\r\nvoid Dfs(int pos){\r\n\tfor(int i = Head[pos];i;i = Edge[i].nxt){\r\n\t\tint arr = Edge[i].v;\r\n\t\tif(Dis[pos] + Edge[i].w != Dis[arr] || Book[arr]) continue;\r\n\t\tprintf(\"%lld \",Edge[i].num);\r\n\t\tBook[arr] = 1;\r\n\t\tif(++cnt == limit) exit(0);\r\n\t\tDfs(arr);\r\n\t}\r\n}\r\nsigned main()\r\n{\r\n#ifdef NICEGUODONG\r\n\tfreopen(\"data.in\",\"r\",stdin);\r\n#endif\r\n\tint n,m,k;in3(n,m,k);\r\n\tlimit = min(n-1,k);\r\n\tprintf(\"%lld\\n\",limit);\r\n\tif(!limit) return 0;\r\n\tFor(i,1,m){\r\n\t\tint u,v,w;\r\n\t\tin3(u,v,w);\r\n\t\tLink(u,v,w,i);  Link(v,u,w,i);\r\n\t}\r\n\tDij();\r\n\tDfs(1);\r\n\treturn 0;\r\n}"
}