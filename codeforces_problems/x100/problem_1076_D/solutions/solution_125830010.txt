{
    "id": 125830010,
    "contestId": 1076,
    "creationTimeSeconds": 1628929847,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "luyiming123"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 14848000,
    "source": "# include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 3e5 + 5;\r\nconst int inf = 1e9 + 7;\r\nint n,m,k;\r\nstruct edge \r\n{\r\n    int v,w,nxt;\r\n    edge() {}\r\n    edge(int _v,int _w,int _nxt) : v(_v),w(_w),nxt(_nxt) {}\r\n}E[N << 1];\r\nint Head[N],tot = 0;\r\nint dis[N]; bool vis[N];\r\nint pre[N];\r\nvoid add(int u,int v,int w)\r\n{\r\n    E[++tot] = edge(v,w,Head[u]); Head[u] = tot;\r\n    return;\r\n}\r\nvoid dij(void)\r\n{\r\n    priority_queue <pair<int,int>,vector <pair<int,int> >,greater<pair<int,int> > > q;\r\n    for(int i = 1; i <= n; i++) dis[i] = inf,vis[i] = 0;\r\n    dis[1] = 0;\r\n    q.push(make_pair(0,1));\r\n    while(!q.empty())\r\n    {\r\n        int x = q.top().second; q.pop();\r\n        for(int i = Head[x]; i ; i = E[i].nxt)\r\n        {\r\n            int v = E[i].v;\r\n            if(dis[v] >= dis[x] + E[i].w)\r\n            {\r\n                dis[v] = dis[x] + E[i].w;\r\n                pre[v] = i;\r\n                q.push(make_pair(dis[v],v));\r\n            }\r\n        }\r\n    }\r\n    return;\r\n}\r\nint total = 0;\r\nvoid dfs(int x,int fa)\r\n{\r\n    if(total == k) \r\n    {\r\n        return;\r\n    }\r\n    for(int i = Head[x]; i ; i = E[i].nxt)\r\n    {\r\n        int v = E[i].v;\r\n        if(v == fa) continue;\r\n        if(pre[v] == i) \r\n        {\r\n            printf(\"%d \",(i + 1) >> 1);\r\n            ++total;\r\n            dfs(v,x);\r\n        }\r\n    }\r\n}\r\nint main(void)\r\n{\r\n    scanf(\"%d%d%d\",&n,&m,&k);\r\n    for(int i = 1; i <= m; i++)\r\n    {\r\n        int u,v,w; scanf(\"%d%d%d\",&u,&v,&w);\r\n        add(u,v,w),add(v,u,w);\r\n    }\r\n    dij();\r\n    if(k >= n - 1) printf(\"%d\\n\",n - 1);\r\n    else printf(\"%d\\n\",k);\r\n    dfs(1,0);\r\n    return 0;\r\n}"
}