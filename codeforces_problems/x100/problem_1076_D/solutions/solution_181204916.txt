{
    "id": 181204916,
    "contestId": 1076,
    "creationTimeSeconds": 1668604690,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "bkifhr10"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 702,
    "memoryConsumedBytes": 41267200,
    "source": "#include <bits/stdc++.h>\n#define int long long\n#define N 300005\n#define gc getchar\n#define pc putchar\nusing namespace std;\ninline int read(){\n\tint x=0,f=1;\n\tchar ch=gc();\n\twhile(!isdigit(ch)){if(ch=='-') f=-1;ch=gc();}\n\twhile(isdigit(ch)){x=x*10+ch-'0';ch=gc();}\n\treturn x*f;\n}\ninline void write(int x){\n\tif(x<0){x=-x;pc('-');}\n\tif(x>=10) write(x/10);\n\tpc(x%10+'0');\n\treturn;\n}\nint n,m,k,dis[N],vis[N];\nstruct edge{\n\tint to,w,id;\n};\nvector<edge> g[N];\nstruct node{\n\tint to,pre,w;\n\tbool operator <(const node &a)const{\n\t\treturn w>a.w;\n\t}\n};\nvoid Dijkstra(){\n\tmemset(dis,0x3f,sizeof(dis));\n\tpriority_queue<node> q;\n\tdis[1]=0;\n\tq.push(node{1,0,0});\n\twhile(!q.empty()){\n\t\tint u=q.top().to,now=q.top().pre;\n\t\tq.pop();\n\t\tif(vis[u]){\n\t\t\tcontinue;\n\t\t}\n\t\tvis[u]=1;\n\t\tif(now>0&&k>0){\n\t\t\tk--;\n\t\t\twrite(now);\n\t\t\tpc(' ');\n\t\t}\n\t\tif(k==0){\n\t\t\treturn;\n\t\t}\n\t\tfor(int i=0;i<(int)g[u].size();i++){\n\t\t\tint v=g[u][i].to,w=g[u][i].w,id=g[u][i].id;\n\t\t\tif(dis[v]>dis[u]+w){\n\t\t\t\tdis[v]=dis[u]+w;\n\t\t\t\tq.push(node{v,id,dis[v]});\n\t\t\t}\n\t\t}\n\t}\n}\nsigned main(){\n\tn=read();m=read();k=read();\n\tk=min(k,n-1);\n\twrite(k);\n\tpc('\\n');\n\tfor(int i=1,u,v,w;i<=m;i++){\n\t\tu=read();v=read();w=read();\n\t\tg[u].push_back(edge{v,w,i});\n\t\tg[v].push_back(edge{u,w,i});\n\t}\n\tDijkstra();\n\treturn 0;\n}\n\t \t\t \t  \t \t \t\t\t \t \t\t\t\t\t\t \t\t  \t"
}