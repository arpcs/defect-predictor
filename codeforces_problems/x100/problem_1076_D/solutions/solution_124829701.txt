{
    "id": 124829701,
    "contestId": 1076,
    "creationTimeSeconds": 1628061484,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "Zoezhangjz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 43,
    "timeConsumedMillis": 420,
    "memoryConsumedBytes": 43520000,
    "source": "#include<iostream>\r#include<cstdio>\r#include<cmath>\r#include<cstring>\r#include<algorithm>\r#include<vector>\r#include<queue>\r#define int long long\rusing namespace std;\r\rconst int MAXN = 3e5+10;\r\rint n, m, k, dis[MAXN], vis[MAXN], pre[MAXN];\rstruct Edge\r{\r\tint v, w, id;\r};\rvector <Edge> adj[MAXN];\rstruct Node\r{\r\tint u, d;\r\tbool operator< (const Node oth) const \r\t{\r\t\treturn d>oth.d;\r\t}\r};\r\rvoid dij (int s)\r{\r\tpriority_queue <Node> q;\r\tfor (int i=1; i<=n; i++)\r\t\tdis[i]=2e9;\r\tdis[s]=0;\r\tq.push(Node{s,0});\r\t\r\twhile (!q.empty())\r\t{\r\t\tint u=q.top().u;\r\t\tq.pop();\r\t\tif (vis[u])\r\t\t\tcontinue;\r\t\tvis[u] = 1;\r\t\t\r\t\tfor (int i=0; i<adj[u].size(); i++)\r\t\t{\r\t\t\tint v=adj[u][i].v, w=adj[u][i].w, id=adj[u][i].id;\r\t\t\tif (dis[u]+w < dis[v])\r\t\t\t{\r\t\t\t\tdis[v] = dis[u]+w;\r\t\t\t\tq.push(Node{v,dis[v]});\r\t\t\t\tpre[v] = id;\r\t\t\t}\r\t\t}\r\t}\r} \r\rint cnt;\rvoid dfs (int u, int fa)\r{\r\tfor (int i=0; i<adj[u].size(); i++)\r\t{\r\t\tint v=adj[u][i].v, w=adj[u][i].w, id=adj[u][i].id;\r\t\tif (v==fa)\r\t\t\tcontinue;\r\t\tif (pre[v] == id)\r\t\t{\r\t\t\tcnt++;\r\t\t\tprintf (\"%d \", id);\r\t\t\tif (cnt==min(k,n-1))\r\t\t\t\texit(0);\r\t\t\tdfs(v,u);\r\t\t}\r\t}\r}\r\rsigned main()\r{\r\tscanf (\"%lld%lld%lld\", &n, &m, &k);\r\tfor (int i=1; i<=m; i++)\r\t{\r\t\tint u, v, w;\r\t\tscanf (\"%lld%lld%lld\", &u, &v, &w);\r\t\tadj[u].push_back(Edge{v,w,i});\r\t\tadj[v].push_back(Edge{u,w,i});\r\t}\r\tdij(1);\r\tprintf (\"%lld\\n\", min(k,n-1));\r\tdfs(1,0);\r\treturn 0;\r}\r"
}