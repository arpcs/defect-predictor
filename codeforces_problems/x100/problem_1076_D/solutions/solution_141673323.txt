{
    "id": 141673323,
    "contestId": 1076,
    "creationTimeSeconds": 1641320623,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "prashar32"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 1185,
    "memoryConsumedBytes": 65433600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#pragma GCC optimize(\"O3\")\r\n#pragma GCC target(\"avx,avx2,sse,sse2,sse3,sse4,popcnt,fma\") \r\n#pragma GCC optimize(\"unroll-loops\")\r\ntypedef long long int ll;\r\ntypedef unsigned long long int ull;\r\nconst ll MAXN = 2e5+5;\r\nconst ll mod = 1000000007;\r\nconst ll N = 200005;\r\n// const ll mod = 998244353;\r\n\r\n\r\nint n, m, k;\r\nmap<pair<int,int>,int>mp;\r\nvector<vector<pair<int,int>>>adj;\r\nvector<ll>dis;\r\nvector<int>last;\r\nvector<int>ans;\r\n\r\n\r\nvoid solve(){\r\n    cin>>n>>m>>k;\r\n    adj.assign(n+1, vector<pair<int,int>>());\r\n    dis.assign(n+1, 1e18);\r\n    last.assign(n+1, -1);\r\n    dis[1] = 0; \r\n    for(int i=0 ; i<m ; i++){\r\n        int u, v, w;\r\n        cin>>u>>v>>w;\r\n        adj[u].push_back({v, w});\r\n        adj[v].push_back({u, w});\r\n        mp[{u,v}] = i+1;\r\n        mp[{v,u}] = i+1;\r\n    }\r\n    set<pair<ll,int>>que;\r\n    que.insert({dis[1], 1});\r\n    while(que.size() && ans.size()<k){\r\n        pair<int,ll>pp = *que.begin();\r\n        que.erase(que.begin());\r\n        if(last[pp.second] != -1){\r\n            ans.push_back(last[pp.second]);\r\n        }\r\n        for(auto [a,b] : adj[pp.second]){\r\n            if(dis[a] > (dis[pp.second]+(ll)b)){\r\n                que.erase({dis[a], a});\r\n                last[a] = mp[{a, pp.second}];\r\n                dis[a] = dis[pp.second] + b;\r\n                que.insert({dis[a], a});\r\n            }\r\n        }\r\n    }\r\n    cout<<ans.size()<<\"\\n\";\r\n    for(auto x : ans){\r\n        cout<<x<<\" \";\r\n    }\r\n    cout<<\"\\n\";\r\n    return;\r\n}\r\n\r\nint main()\r\n{\r\n    ios_base :: sync_with_stdio(false);\r\n    cin.tie(NULL);                      \r\n    cout.tie(NULL);\r\n\r\n    int t = 1;\r\n    // cin>>t;\r\n    while(t--){\r\n        solve();\r\n    }\r\n    \r\nreturn 0;\r\n}\r\n"
}