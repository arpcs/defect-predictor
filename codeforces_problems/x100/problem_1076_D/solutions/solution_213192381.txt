{
    "id": 213192381,
    "contestId": 1076,
    "creationTimeSeconds": 1689029898,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "niucard"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 421,
    "memoryConsumedBytes": 58572800,
    "source": "// LUOGU_RID: 114807742\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nint n,m,k,head[1000000],tot,sr1,sr2,sr3,dis[1000000],now;\r\nbool flag[1000000];\r\nstruct node\r\n{\r\n\tint to,nex,v,bh;\r\n} edge[1000000];\r\nstruct node1\r\n{\r\n\tint id,len,qq;\r\n\tbool operator <(const node1 &x)const{\r\n\t\treturn x.len<len;\r\n\t}\r\n};\r\npriority_queue<node1> q;\r\nvoid add(int x,int y,int z,int t)\r\n{\r\n\tedge[++tot].nex=head[x];\r\n\tedge[tot].to=y;\r\n\tedge[tot].v=z;\r\n\tedge[tot].bh=t;\r\n\thead[x]=tot;\r\n}\r\nvoid dijkstra()\r\n{\r\n\tmemset(dis,0x3f,sizeof dis);\r\n\tdis[1]=0;\r\n\tq.push((node1){1,0,0});\r\n\twhile(!q.empty())\r\n\t{\r\n\t\tnow=q.top().id;\r\n\t\tif(flag[now])\r\n\t\t{\r\n\t\t\tq.pop();\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tflag[now]=1;\r\n\t\tif(q.top().qq&&k)\r\n\t\t{\r\n\t\t\tk--;\r\n\t\t\tprintf(\"%lld \",q.top().qq);\r\n\t\t}\r\n\t\tq.pop();\r\n\t\tfor(int i=head[now];i;i=edge[i].nex)\r\n\t\t{\r\n\t\t\tif(dis[now]+edge[i].v<dis[edge[i].to])\r\n\t\t\t{\r\n\t\t\t\tdis[edge[i].to]=dis[now]+edge[i].v;\r\n\t\t\t\tq.push((node1){edge[i].to,dis[edge[i].to],edge[i].bh});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nsigned main()\r\n{\r\n\tscanf(\"%lld%lld%lld\",&n,&m,&k);\r\n\tfor(int i=1;i<=m;i++)\r\n\t{\r\n\t\tscanf(\"%lld%lld%lld\",&sr1,&sr2,&sr3);\r\n\t\tadd(sr1,sr2,sr3,i);\r\n\t\tadd(sr2,sr1,sr3,i);\r\n\t}\r\n\tprintf(\"%lld\\n\",min(k,n-1));\r\n\tdijkstra();\r\n\treturn 0;\r\n}"
}