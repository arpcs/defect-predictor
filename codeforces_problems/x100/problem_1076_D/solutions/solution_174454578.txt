{
    "id": 174454578,
    "contestId": 1076,
    "creationTimeSeconds": 1664754415,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "Jovan266"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 2168,
    "memoryConsumedBytes": 66150400,
    "source": "// ideaja iz editoriala, implementacija moja\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nint main(){\r\n\t#define int long long\r\n\tint n,m,k;\r\n\tcin>>n>>m>>k;\r\n\tvector<pair<int,int>> g[n+1];\r\n\tmap<pair<int,int>, int> indices;\r\n\tfor(int i=0;i<m;i++){\r\n\t\tint a,b,w;\r\n\t\tcin>>a>>b>>w;\r\n\t\tg[a].push_back({b,w});\r\n\t\tg[b].push_back({a,w});\r\n\t\tindices[{a,b}] = i+1;\r\n\t\tindices[{b,a}] = i+1;\r\n\t}\r\n\tpriority_queue<pair<int,int>> q;\r\n\tint distance[n+1];\r\n\tbool visited[n+1]={};\r\n\tvector<pair<int,int>> ostali;\r\n\tdistance[1] = 0;\r\n\tfor(int i=2;i<=n;i++) distance[i] = 10000000000000000;\r\n\tq.push({0,1});\r\n\tint br = 0;\r\n\tint ancestor[n+1] = {};\r\n\twhile(ostali.size()<min(k+1,n)){\r\n\t\tint a = q.top().second;\r\n\t\tq.pop();\r\n\t\tif(visited[a]) continue;\r\n\t\tvisited[a] = true;\r\n\t\tostali.push_back({a,ancestor[a]});\r\n\t\tfor(auto u:g[a]){\r\n\t\t\tint b = u.first;\r\n\t\t\tint w = u.second;\r\n\t\t\tif(distance[a]+w<distance[b]){\r\n\t\t\t\tdistance[b] = distance[a]+w;\r\n\t\t\t\tq.push({-distance[b],b});\r\n\t\t\t\tancestor[b] = a;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcout<<min(n-1,k)<<endl;\r\n\tfor(int i=1;i<=min(k,n-1);i++){\r\n\t\tcout<<indices[ostali[i]]<<\" \";\r\n\t}\r\n}"
}