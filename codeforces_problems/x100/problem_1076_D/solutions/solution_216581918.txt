{
    "id": 216581918,
    "contestId": 1076,
    "creationTimeSeconds": 1690809669,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "AHAHAHAHAHAHAH"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 42,
    "timeConsumedMillis": 514,
    "memoryConsumedBytes": 63590400,
    "source": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n\r\n#define pb push_back\r\n\r\n#define ii int\r\n\r\n#define mod 999999999999989\r\n\r\nconst int N = 1 << 19;\r\n\r\nconst ll ee = (1e5 * 5) + 1;\r\n\r\nconst ll inf = 1e9; const ll MOD = 1e9 + 7;\r\n\r\nint dr[4] = {0, -1, 0, 1};\r\nint dc[4] = {1, 0, -1, 0};\r\n\r\nconst ll LOG = 19;\r\n\r\nll tin[ee], tout[ee]; ll timer=0;\r\n\r\nconst int base = 612; ll pp[N];\r\n\r\nll p[N], sz[N];\r\n\r\nll mn[N], mx[N];\r\n\r\nvector<pair<ll, pair<ll, ll> > > g[300043];\r\n\r\nvoid solve(){\r\nll n, m, k;\r\ncin >> n >> m >> k;\r\nfor(ll i = 0; i < m; ++i){\r\n    ll a, b, w;\r\n    cin >> a >> b >> w;\r\n    a--;\r\n    b--;\r\n    g[a].pb(make_pair(b, make_pair(w, i) ) );\r\n    g[b].pb(make_pair(a, make_pair(w, i) ) );\r\n}\r\nset<pair<ll, ll> >q;\r\nvector<ll>d(n, inf);\r\nd[0] = 0;\r\nq.insert(make_pair(0, 0) );\r\nvector<ll>last(n, (-1) );\r\nll cnt = 0; vector<ll>ans;\r\nwhile(!q.empty() && k > cnt){\r\n    long long per = q.begin() -> second;\r\nq.erase(q.begin());\r\nll k = per;\r\nif(last[k] != -1){\r\n    cnt++;\r\n    ans.pb(last[k]);\r\n}\r\nfor(ll i = 0; i < g[k].size(); ++i){\r\n    pair<ll, pair<ll, ll> >t = g[k][i];\r\n    ll to = t.first;\r\n    ll ww = t.second.first;\r\n    ll v = t.second.second;\r\n    if(d[to] > d[k] + ww){\r\n        q.erase(make_pair(d[to], to) );\r\n        d[to] = d[k] + ww;\r\n        last[to] = v; q.insert(make_pair(d[to], to) );\r\n    }\r\n}\r\n//cout << q.size() << '\\n';\r\n}\r\ncout << ans.size() << '\\n';\r\nfor(ll i = 0; i < ans.size(); ++i){cout << ans[i] + 1 << ' ';}\r\n//return; // exit(0);\r\n}\r\n\r\nint main(){\r\nios_base::sync_with_stdio(false);\r\ncin.tie(0); cout.tie(0);\r\n//freopen(\"substrcmp.in\",\"r\",stdin);\r\n//freopen(\"substrcmp.out\",\"w\",stdout);\r\nll t;\r\nt = 1;\r\n///cin >> t;\r\nwhile(t--){\r\n    solve();\r\n}\r\nreturn 0;\r\n}\r\n"
}