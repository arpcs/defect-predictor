{
    "id": 216526111,
    "contestId": 1076,
    "creationTimeSeconds": 1690775840,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "_YXJS_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 1731,
    "memoryConsumedBytes": 61337600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define pii pair<pair<long long, int>, int>\r\nstruct node\r\n{\r\n    int v;\r\n    long long w;\r\n};\r\nint n, m, k;\r\nint u, v;\r\nlong long w;\r\nbool vis[300020];\r\nvector<node> a[300020];\r\nlong long dis[300020];\r\nint pre[300020];\r\nint sz[300020];\r\nmap<int, int> mp[300020];\r\nbool used[300020];\r\npriority_queue<pii, vector<pii>, greater<pii>> q;\r\nvoid dijkstra(int u)\r\n{\r\n    int v;\r\n    long long w;\r\n    memset(dis, 0x3f, sizeof(dis));\r\n    dis[u] = 0;\r\n    q.push({{0, u}, 0});\r\n    while (!q.empty())\r\n    {\r\n        u = q.top().first.second;\r\n        w = q.top().first.first;\r\n        int id = q.top().second;\r\n        q.pop();\r\n        if (vis[u])\r\n            continue;\r\n        vis[u] = 1;\r\n        if (id)\r\n            cout << id << \" \", k--;\r\n        if (!k)\r\n            return;\r\n        for (int i = 0; i < a[u].size(); i++)\r\n        {\r\n            v = a[u][i].v;\r\n            w = a[u][i].w;\r\n            if (dis[v] > dis[u] + w)\r\n            {\r\n                pre[v] = u;\r\n                sz[v] = sz[u] + 1;\r\n                dis[v] = dis[u] + w;\r\n                q.push({{dis[v], v}, mp[u][v]});\r\n            }\r\n        }\r\n    }\r\n}\r\nint main()\r\n{\r\n    cin >> n >> m >> k;\r\n    for (int i = 1; i <= m; i++)\r\n    {\r\n        cin >> u >> v >> w;\r\n        a[u].push_back({v, w});\r\n        a[v].push_back({u, w});\r\n        mp[u][v] = i;\r\n        mp[v][u] = i;\r\n    }\r\n    cout << (k = min(n - 1, k)) << endl;\r\n    dijkstra(1);\r\n    return 0;\r\n}"
}