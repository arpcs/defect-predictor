{
    "id": 228415818,
    "contestId": 1076,
    "creationTimeSeconds": 1697460442,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "zeemanz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 11161600,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define ios std::ios::sync_with_stdio(0), std::cin.tie(0)\r\n#define endl '\\n'\r\n\r\nusing namespace std;\r\n\r\nconst int N = 3e5 + 10, M = N << 1;\r\nint n, m, k;\r\nint h[N], id[M], w[M], e[M], ne[M], idx;\r\nbool st[N];\r\n\r\nvoid add(int a, int b, int c, int i) {\r\n    id[idx] = i, w[idx] = c, e[idx] = b, ne[idx] = h[a], h[a] = idx++;\r\n}\r\n\r\nstruct Node {\r\n    int d, v, i;\r\n    bool operator<(const Node &n) const { return d > n.d; }\r\n};\r\n\r\nvoid solve() {\r\n    cin >> n >> m >> k, memset(h, -1, sizeof h);\r\n\r\n    int x, y, z;\r\n    for (int i = 1; i <= m; i++) {\r\n        cin >> x >> y >> z;\r\n        add(x, y, z, i), add(y, x, z, i);\r\n    }\r\n\r\n    priority_queue<Node, vector<Node>> pq;\r\n    for (int i = h[1]; ~i; i = ne[i]) pq.push({w[i], e[i], id[i]});\r\n\r\n    int cnt = 0;\r\n    while (!pq.empty()) {\r\n        if (cnt >= k) break;\r\n        auto [_, u, i] = pq.top();\r\n        pq.pop();\r\n        st[i] = 1, cnt++;\r\n\r\n        for (int i = h[u]; ~i; i = ne[i]) {\r\n            if (st[id[i]]) continue;\r\n            pq.push({w[i], e[i], id[i]});\r\n        }\r\n    }\r\n\r\n    cout << cnt << endl;\r\n    for (int i = 1; i <= m; i++)\r\n        if (st[i]) cout << i << ' ';\r\n    cout << endl;\r\n}\r\n\r\nint main() {\r\n    ios;\r\n    int T = 1;\r\n    while (T--) solve();\r\n    return 0;\r\n}\r\n"
}