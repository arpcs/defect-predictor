{
    "id": 158406430,
    "contestId": 1076,
    "creationTimeSeconds": 1653494703,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "Deepakydv"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 1512,
    "memoryConsumedBytes": 142745600,
    "source": "#include<bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp> \r\nusing namespace std; \r\nusing namespace __gnu_pbds;\r\ntemplate<typename T>\r\nusing minpq = priority_queue<T, vector<T>, greater<T>>;\r\ntemplate <typename T>\r\nvoid make_unique(vector<T>& vec) {\r\n  sort(vec.begin(),vec.end());\r\n  vec.erase(unique(vec.begin(),vec.end()), vec.end());\r\n}\r\nvoid __print(int x) {cerr << x;}void __print(long x) {cerr << x;}void __print(long long x) {cerr << x;}void __print(unsigned x) {cerr << x;}void __print(unsigned long x) {cerr << x;}void __print(unsigned long long x) {cerr << x;}void __print(float x) {cerr << x;}void __print(double x) {cerr << x;}void __print(long double x) {cerr << x;}void __print(char x) {cerr << '\\'' << x << '\\'';}void __print(const char *x) {cerr << '\\\"' << x << '\\\"';}void __print(const string &x) {cerr << '\\\"' << x << '\\\"';}void __print(bool x) {cerr << (x ? \"true\" : \"false\");}\r\ntemplate<typename T, typename V>void __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}\r\ntemplate<typename T>void __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? \",\" : \"\"), __print(i); cerr << \"}\";}\r\nvoid _print() {cerr << \"]\\n\";}\r\ntemplate <typename T, typename... V>\r\nvoid _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << \", \"; _print(v...);}\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x...) cerr << \"[\" << #x << \"] = [\"; _print(x)\r\n#else\r\n#define debug(x...)\r\n#endif\r\nr\ntemplate <typename T>\r\ninline T gcd(T a, T b) {return b ? gcd(b, a % b) : a;}\r\n\r\n\r\n#define ll                  long long int\r\n#define mem(a,b)            memset(a,b,sizeof(a))\r\n#define ull                 unsigned long long \r\n#define precise(ans,digits) fixed<<setprecision(digits)<<ans\r\n#define endl                '\\n'\r\n#define ld                  long double\r\n#define pi                  3.141592653589793238\r\n#define fo(i,n)             for(long i=1;i<=n;i++)\r\n#define tol(s)              transform(s.begin(),s.end(),s.begin(),::tolower)\r\n#define tou(s)              transform(s.begin(),s.end(),s.begin(),::toupper)\r\n#define all(x)              (x).begin(), (x).end()\r\n#define pb                  push_back\r\n#define mt                  make_tuple\r\n#define lb                  lower_bound\r\n#define ub                  upper_bound\r\n#define MP                    make_pair\r\n#define tr(it, a)           for(auto it = a.begin();it!=a.end();it++)\r\n#define rtr(it, a)          for(auto it = a.rbegin();it!=a.rend();it++)\r\n#define pq                  priority_queue\r\n#define fr                  first\r\n#define sc                  second\r\n#define sz(x)               (long long)x.size()\r\n#define rep(i,n)            for(__typeof(n) i=0; i<(n); i++)\r\n#define MAX(a)              (*max_element(all(a)))\r\n#define MIN(a)              (*min_element(all(a)))\r\n#define bitcount(a)         __builtin_popcountll(a)\r\n#define OS(T)               tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>\r\n#define get(idx,a)          get<idx>(a)\r\ntypedef pair<int, int>     pii;\r\ntypedef pair<ll, ll>       pll;\r\ntypedef vector<int>        vi;\r\ntypedef vector<char>       vc;\r\ntypedef vector<vc>         vvc;\r\ntypedef vector<ll>         vl;\r\ntypedef vector<pii>        vpii;\r\ntypedef vector<pll>        vpl;\r\ntypedef vector<vi>         vvi;\r\ntypedef vector<vl>         vvl; \r\ntypedef pair<ll,pll>       ppl;\r\n//typedef __int128           lll;\r\n \r\n/*****************************************************************************************************************************************************************************************************************************/\r\nlong long add(long long a,long long b,long long mod){long long res=(a+b)%mod;if(res<0)res+=mod;return res;}\r\nlong long mul(long long a,long long b,long long mod){  long long res=(a%mod*b%mod)%mod;if(res<0)res+=mod;   return res;}\r\nlong long power(long long base, long long exp,long long mod) {    long long res=1; base%=mod; while(exp) {if(exp&1)res=(res*base)%mod;base=(base*base)%mod;exp/=2;}return res%mod;}\r\nlong long binpow(long long a, long long b) {    long long res = 1;while (b > 0) {if (b & 1)res = (res*a);a = (a*a);b >>= 1;}return res;}\r\nbool is_prime(long long n){ if (n <= 1)  return false; if (n <= 3)  return true; if (n%2 == 0 || n%3 == 0) return false; for (ll i=5; i*i<=n; i=i+6) {if (n%i == 0 || n%(i+2) == 0) return false; } return true; }\r\nll lcm(ll a,ll b){ll l=(a*b)/gcd(a,b);return l;}\r\nll cdiv(ll a, ll b) {return ((a+b-1)/b);}// careful with overflows\r\nll fdiv(ll X, ll Y) {if (X >= 0) {return X / Y;} else {return (X-Y+1) / Y;}}\r\nll Ceil(ll a, ll b) {return (a/b+(a%b!=0));}// if chances of overflows\r\nlong long inv (long long a,long long mod){return power(a,mod-2,mod);}\r\nlong long C(ll n, ll r) {if(n<r)return 0;if(n==r)return 1;if(r > n - r) r = n - r; /*because C(n, r) == C(n, n - r)*/long long ans = 1;ll i;for(i = 1; i <= r; i++) {ans *= n - r + i;ans /= i;}return ans;}\r\nbool ispalindrome(string s) { ll len=s.length(); for(ll i=0;i<len;i++){  if(s[i]!=s[len-i-1]) return false; } return true; }\r\nll msb(ll n){return 64- __builtin_clzll(n)-1;}\r\nll lsb(ll n){return __builtin_ctz(n);}\r\nmap<ll,ll>pnt_compression(vl &pnt){ map<ll, ll>u; ll i=0,cnt=0; for(ll i=0;i<sz(pnt);i++)u[pnt[i]]=0;for(auto &it:u){ it.sc=cnt;cnt++;} return u;}\r\n\r\n/*****************************************************************************************************************************************************************************************************************************/\r\nstruct custom_hash {\r\n    static uint64_t splitmix64(uint64_t x) {\r\n        // http://xorshift.di.unimi.it/splitmix64.c\r\n        x += 0x9e3779b97f4a7c15;\r\n        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n        return x ^ (x >> 31);\r\n    }\r\n\r\n    size_t operator()(uint64_t x) const {\r\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n        return splitmix64(x + FIXED_RANDOM);\r\n    }\r\n};\r\n\r\n/*................................................*/\r\n\r\nconst long long inf=9e18;\r\nconst long long M=1000000007;\r\nconst long long MM=998244353;\r\nconst long long MMM=1000000009;\r\nconst long long N=1e5+2;\r\n/*................................................*/\r\n\r\nll n,m,k;\r\nvector<vector<vector<ll>>>arr;\r\nvector<vector<ll>>g;\r\nvector<vector<vector<ll>>>G;\r\nvoid dijktras(ll s){\r\n    set<pll>q;\r\n    vector<ll>dis(n,inf);\r\n    dis[s]=0;\r\n    q.insert({dis[s],s});\r\n    while(!q.empty()){\r\n        ll node=q.begin()->second;\r\n        ll curd=q.begin()->first;\r\n        q.erase(q.begin());\r\n        for(auto e:arr[node]){\r\n            ll wei=e[1];\r\n            ll child=e[0];\r\n            ll id=e[2];\r\n            if(curd+wei<dis[child]){\r\n                g[child].clear();\r\n                g[child].pb(id);\r\n                q.erase({dis[child],child});\r\n                dis[child]=curd+wei;\r\n                q.insert({dis[child],child});\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvoid dfs(ll node,ll par,set<ll>&s){\r\n    vector<ll>u;\r\n    for(auto e:G[node]){\r\n        ll child=e[0],id=e[1];\r\n        if(child!=par){\r\n            dfs(child,node,s);\r\n            u.pb(id);\r\n        }\r\n    }\r\n    for(auto id:u){\r\n        if(s.size()>k){\r\n            s.erase(id);\r\n        }else{\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n#define T ll t;cin>>t;for(ll tt=1;tt<=t;tt++)\r\nsigned main()\r\n{\r\nios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\r\n#ifndef ONLINE_JUDGE\r\nfreopen(\"input.txt\", \"r\", stdin);\r\nfreopen(\"output.txt\", \"w\", stdout);\r\nfreopen(\"error.txt\", \"w\", stderr);\r\n#endif \r\n\r\n   \r\n   cin>>n>>m>>k;\r\n   arr=vector<vector<vector<ll>>>(n);\r\n   g=vector<vector<ll>>(n);\r\n   vector<vector<ll>>e;\r\n   for(ll i=0;i<m;i++){\r\n       ll u,v,w;\r\n       cin>>u>>v>>w;\r\n       u--;\r\n       v--;\r\n       e.pb({u,v,w});\r\n       arr[u].pb({v,w,i});\r\n       arr[v].pb({u,w,i});\r\n   }\r\n   dijktras(0);\r\n   set<ll>s;\r\n   for(ll i=0;i<n;i++){\r\n       for(auto id:g[i])s.insert(id);\r\n   }\r\n   if(sz(s)<=k){\r\n       cout<<sz(s)<<endl;\r\n       for(auto id:s)cout<<id+1<<\" \";\r\n       return 0;\r\n   }\r\n   G=vector<vector<vector<ll>>>(n);\r\n   for(auto id:s){\r\n       ll u=e[id][0];\r\n       ll v=e[id][1];\r\n       ll w=e[id][2];\r\n       G[u].pb({v,id});\r\n       G[v].pb({u,id});\r\n   }\r\n   dfs(0,0,s);\r\n   cout<<sz(s)<<endl;\r\n   for(auto id:s)cout<<id+1<<\" \";\r\n\r\n  \r\n       \r\n     \r\n   \r\n\r\n\r\n\r\n\r\n\r\n  \r\n   return 0;\r\n}"
}