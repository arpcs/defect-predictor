{
    "id": 134988320,
    "contestId": 1076,
    "creationTimeSeconds": 1636637414,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "lucky_day"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 43,
    "timeConsumedMillis": 374,
    "memoryConsumedBytes": 51814400,
    "source": "#include<bits/stdc++.h>\r\n#define ll long long\r\nusing namespace std;\r\nconst int maxn=1e6+7;\r\nstruct node{\r\n\tll v,nxt,w;\r\n}e[maxn];\r\nll head[maxn],pre[maxn],tot,cnt,n,m,k;\r\nbool v[maxn];\r\nll d[maxn];\r\ntypedef pair<int, int> PII;\r\npriority_queue<PII,vector<PII>,greater<PII> > q;\r\nvoid add(ll x,ll y,ll z){\r\n\te[++tot].v=y;\r\n\te[tot].w=z;\r\n\te[tot].nxt=head[x];\r\n\thead[x]=tot;\r\n}\r\nvoid dj(){\r\n\tmemset(d,0x7f,sizeof(d));\r\n\td[1]=0;\r\n\tq.push({0,1});\r\n\twhile(!q.empty()){\r\n\t\tPII x=q.top();q.pop();\r\n\t\tll lea=x.first;\r\n\t\tll now=x.second;\r\n\t\tif(v[now])continue;\r\n\t\tv[now]=1;\r\n\t\tfor(ll i=head[now];i;i=e[i].nxt){\r\n\t\t\tll y=e[i].v;\r\n\t\t\tif(d[y]>=lea+e[i].w){\r\n\t\t\t\td[y]=lea+e[i].w;\r\n\t\t\t\tq.push({d[y],y});\r\n\t\t\t\tpre[y]=i;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nvoid dfs(ll now){\r\n\tfor(ll i=head[now];i;i=e[i].nxt){\r\n\t\tll y=e[i].v;\r\n\t\tif(pre[y]==i){\r\n\t\t\tcnt++;\r\n\t\t\tif(cnt>k||cnt==n){\r\n\t\t\t\tputs(\"\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tprintf(\"%lld \",(i+1)>>1);\r\n\t\t\tdfs(y);\r\n\t\t}\r\n\t}\r\n}\r\nint main(){\r\n\tscanf(\"%lld%lld%lld\",&n,&m,&k);\r\n\tfor(ll i=1;i<=m;i++){\r\n\t\tll x,y,z;\r\n\t\tscanf(\"%lld%lld%lld\",&x,&y,&z);\r\n\t\tadd(x,y,z);\r\n\t\tadd(y,x,z);\r\n\t}\r\n\tdj();\r\n\tprintf(\"%lld\\n\",min(n-1,k));\r\n\tdfs(1);\r\n\treturn 0;\r\n}"
}