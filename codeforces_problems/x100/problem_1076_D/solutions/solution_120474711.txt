{
    "id": 120474711,
    "contestId": 1076,
    "creationTimeSeconds": 1624562990,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1076,
        "index": "D",
        "name": "Edge Deletion",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1076,
        "members": [
            {
                "handle": "Suru007"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542033300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 3788800,
    "source": "/*  Jai Shree Ram \ud83d\udea9\ud83d\udea9\ud83d\udea9 */\r\n#include \"bits/stdc++.h\"\r\n#define ll long long int\r\n#define oo 1000000000000000000\r\n#define forr(i,n) for(int i=0;i<n;i++)\r\n#define fastio ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)\r\n#define all(x) x.begin(),x.end()\r\n#define unique(v) sort(all(v)); v.resize(distance(v.begin(),unique(all(v))))\r\n#define eb emplace_back\r\n#define FF first\r\n#define SS second\r\n#define mem(a,v) memset(a,v,sizeof(a))\r\n#define pb push_back\r\n#define popcount(x) __builtin_popcount(x)\r\n\r\nusing namespace std;\r\n\r\ntemplate<typename T>\r\nostream &operator<<(ostream &output,const vector<T> &v){ \r\n    if(v.empty()) return output;\r\n    for(int i=0;i<v.size()-1;i++) output << v[i] <<\" \";\r\n    output << v.back();\r\n    return output;\r\n}\r\ntemplate<typename T>\r\nistream &operator>>(istream &input,vector<T> &v){ \r\n    for(auto &i: v) cin >> i;\r\n    return input;            \r\n}\r\n\r\nconst int N = 3e5 + 100;\r\nvector<pair<int,int>> g[N];\r\nmap<pair<int,int>,int> edge;\r\n\r\n\r\nvoid __sol(){\r\n    int n,m,k; cin >> n >> m >> k;\r\n    forr(i,m){\r\n        int x,y,w; cin >> x >> y >> w;\r\n        g[x].eb(y,w);\r\n        g[y].eb(x,w);\r\n        if(x > y) swap(x,y);\r\n        edge[{x,y}] = i+1;\r\n    }\r\n    vector<ll> dis(n+2,oo);\r\n    priority_queue<pair<ll,int>,vector<pair<ll,int>>,greater<pair<ll,int>>> q; \r\n    q.push({0,1});\r\n    vector<int> last(n+2,-1);\r\n    dis[1] = 0;\r\n    vector<int> ans;\r\n    int cnt = 0;\r\n    while(!q.empty() && cnt < k){\r\n        auto x = q.top(); q.pop();\r\n        if(last[x.SS]!=-1){\r\n            cnt++;\r\n            ans.eb(last[x.SS]);\r\n        }\r\n        for(auto &i: g[x.SS]){\r\n            if(dis[i.FF] > x.FF + i.SS){\r\n                dis[i.FF] = x.FF + i.SS;\r\n                q.push({dis[i.FF],i.FF});\r\n                last[i.FF] = edge[{min(i.FF,x.SS),max(i.FF,x.SS)}] ;\r\n            }\r\n        }\r\n    }\r\n    cout << ans.size()<<\"\\n\"<<ans;\r\n    return;\r\n}\r\n\r\n\r\nint main(){ \r\n    fastio;\r\n    int tc=1;  // cin >> tc;\r\n    while(tc--) __sol();\r\n    return 0;\r\n}"
}