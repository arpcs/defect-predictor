{
    "id": 228854530,
    "contestId": 71,
    "creationTimeSeconds": 1697747366,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 71,
        "index": "C",
        "name": "Round Table Knights",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "dp",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 71,
        "members": [
            {
                "handle": "AndreiZherder"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1301410800
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 61,
    "memoryConsumedBytes": 0,
    "source": "from os import path\r\nfrom sys import stdin, stdout\r\n\r\n\r\nfilename = \"../templates/input.txt\"\r\nif path.exists(filename):\r\n    stdin = open(filename, 'r')\r\n\r\n\r\ndef input():\r\n    return stdin.readline().rstrip()\r\n\r\n\r\ndef print(*args, sep=' ', end='\\n'):\r\n    stdout.write(sep.join(map(str, args)))\r\n    stdout.write(end)\r\n\r\n\r\ndef prime_factors(n: int):\r\n    \"\"\"\r\n    Prime factors of n\r\n    prime_factors(99) --> 3 3 11\r\n    \"\"\"\r\n    while n % 2 == 0:\r\n        yield 2\r\n        n //= 2\r\n    p = 3\r\n    while p * p <= n:\r\n        quotient, reminder = divmod(n, p)\r\n        if reminder == 0:\r\n            yield p\r\n            n = quotient\r\n        else:\r\n            p += 2\r\n    if n != 1:\r\n        yield n\r\n\r\n\r\ndef solution():\r\n    n = int(input())\r\n    nums = [int(num) for num in input().split()]\r\n    if all(num == 1 for num in nums):\r\n        print('YES')\r\n        return\r\n    for p in prime_factors(n):\r\n        if p * 2 != n:\r\n            for i in range(p):\r\n                if all(num == 1 for num in nums[i::p]):\r\n                    print('YES')\r\n                    return\r\n    print('NO')\r\n\r\n\r\ndef main():\r\n    t = 1\r\n    while t:\r\n        solution()\r\n        t -= 1\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n"
}