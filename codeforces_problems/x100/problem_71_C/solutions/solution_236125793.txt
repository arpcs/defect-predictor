{
    "id": 236125793,
    "contestId": 71,
    "creationTimeSeconds": 1701903444,
    "relativeTimeSeconds": 5244,
    "problem": {
        "contestId": 71,
        "index": "C",
        "name": "Round Table Knights",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "dp",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 71,
        "members": [
            {
                "handle": "JoelMinayaaa"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1701898200
    },
    "programmingLanguage": "Python 3",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 186,
    "memoryConsumedBytes": 3686400,
    "source": "# Read the number of knights\r\nn = int(input())\r\n\r\n# Read the knights' moods and convert to a list of integers\r\nmoods = list(map(int, input().split()))\r\n\r\n# Function to check if evenly spaced good moods can form a polygon\r\ndef can_form_polygon(n, moods):\r\n    for group_size in range(3, n + 1):\r\n        if n % group_size == 0:  # Check if group size divides n evenly\r\n            spacing = n // group_size\r\n            for start in range(spacing):\r\n                if all(moods[start + step * spacing] == 1 for step in range(group_size)):\r\n                    return True\r\n    return False\r\n\r\n# Output the result\r\nif can_form_polygon(n, moods):\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")\r\n"
}