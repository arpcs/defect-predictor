{
    "id": 233766069,
    "contestId": 71,
    "creationTimeSeconds": 1700632457,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 71,
        "index": "C",
        "name": "Round Table Knights",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "dp",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 71,
        "members": [
            {
                "handle": "Phien47"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1301410800
    },
    "programmingLanguage": "Java 8",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 0,
    "source": "import java.util.ArrayList;\r\n\r\npublic class Newclass {\r\n\r\n    public static boolean canFormConvexPolygon(int[] array) {\r\n        ArrayList<Integer> vertices = new ArrayList<>();\r\n\r\n        // Identify vertices\r\n        for (int i = 0; i < array.length; i++) {\r\n            if (array[i] == 1) {\r\n                vertices.add(i);\r\n            }\r\n        }\r\n\r\n        // Check if there are at least 3 vertices\r\n        if (vertices.size() < 3) {\r\n            return false; // Not enough vertices to form a convex polygon\r\n        }\r\n\r\n        // Check if vertices and connections form a regular convex polygon\r\n        for (int i : vertices) {\r\n            ArrayList<Integer> connections = findConnections(i, array);\r\n            if (!isRegularPolygon(vertices, connections)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private static ArrayList<Integer> findConnections(int vertex, int[] array) {\r\n        ArrayList<Integer> connections = new ArrayList<>();\r\n        for (int i = 0; i < array.length; i++) {\r\n            if (array[i] == 1 || array[i] == 0) {\r\n                connections.add(i);\r\n            }\r\n        }\r\n        return connections;\r\n    }\r\n\r\n    private static boolean isRegularPolygon(ArrayList<Integer> vertices, ArrayList<Integer> connections) {\r\n        // Implement your logic to check if the vertices and connections\r\n        // form a regular convex polygon. This can involve checking\r\n        // side lengths and angles.\r\n        // For simplicity, this code assumes any set of vertices and\r\n        // connections is a regular polygon.\r\n        return true;\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        int[] array = {0, 1, 0, 1, 0, 1, 0, 1};\r\n        boolean result = canFormConvexPolygon(array);\r\n        if (result == true) {\r\n        System.out.println(\"YES\");\r\n        } else System.out.println(\"NO\");\r\n    }\r\n}"
}