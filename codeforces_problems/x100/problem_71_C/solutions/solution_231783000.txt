{
    "id": 231783000,
    "contestId": 71,
    "creationTimeSeconds": 1699372538,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 71,
        "index": "C",
        "name": "Round Table Knights",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "dp",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 71,
        "members": [
            {
                "handle": "detective...dots"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1301410800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "//#include <boost/multiprecision/cpp_int.hpp>\r\n//#include <boost/range/adaptor/reversed.hpp>\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n\r\nusing namespace __gnu_pbds;\r\n\r\nusing namespace std;\r\n//using namespace boost::multiprecision;\r\n\r\n\r\n#define sp << ' '\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define ld long double\r\n#define endl '\\n'\r\n#define MOD 1000000007\r\n#define b_rev boost::adaptors::reverse\r\n#define GV getValue\r\n#define GVI getValue<int>\r\ntypedef vector<int> vi;\r\ntypedef pair<int, int> ii;\r\ntypedef vector<pair<int, int>> vii;\r\ntypedef pair<int, int> pi;\r\n#define F first\r\n#define S second\r\n#define PB push_back\r\n#define MP make_pair\r\n#define REP(i, a, b) for (int i = a; i < b; i++)\r\n#define SQ(a) (a)*(a)\r\n#define inta int a\r\n#define nl <<'\\n'\r\n\r\ntypedef tree<int, null_type, less<>, rb_tree_tag,\r\n        tree_order_statistics_node_update> ordered_set;\r\n\r\ntypedef tree<pair<int, int>, null_type, less_equal<>, rb_tree_tag,\r\n        tree_order_statistics_node_update>\r\n        ordered_multiset;\r\n\r\ntemplate<class T> using multi_ordered_set = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\n// Pair addition\r\ntemplate<typename T, typename U, typename V, typename W>\r\nauto operator+(const std::pair<T, U> &l, const std::pair<V, W> &r)\r\n-> std::pair<decltype(l.first + r.first), decltype(l.second + r.second)> {\r\n    return {l.first + r.first, l.second + r.second};\r\n}\r\n\r\nvector<ii> lurd = {{0,  -1},\r\n                   {-1, 0},\r\n                   {0,  1},\r\n                   {1,  0}};\r\n\r\nvector<ii> eightDir = {{0,  -1},\r\n                       {-1, 0},\r\n                       {0,  1},\r\n                       {1,  0},\r\n                       {1,  1},\r\n                       {-1, -1},\r\n                       {1,  -1},\r\n                       {-1, 1}\r\n};\r\n\r\ntemplate<typename T>\r\nT getValue() {\r\n    T value;\r\n    std::cin >> value;\r\n    return value;\r\n}\r\n\r\ndouble getRoot(ll x) {\r\n    return (-1ll + sqrtl(1ll + 8 * x)) / 2;\r\n}\r\n\r\ndouble calculateDistance(double x1, double y1, double x2, double y2) {\r\n    return sqrt(pow(x2 - x1, 2) + pow(y2 - y1, 2));\r\n}\r\n\r\nvoid printVec(vector<int> v) {\r\n    for (const auto &i: v) { cout << i sp; }\r\n    cout nl;\r\n}\r\n\r\nvoid printVec(vector<vi> v) {\r\n    for (const auto &item: v)printVec(item);\r\n}\r\n\r\nint lcm(int a, int b) {\r\n    return (a / __gcd(a, b)) * b;\r\n}\r\n\r\nlong long fastPowerMod(long long a, long long b, long long m) {\r\n    if (b == 0) {\r\n        return 1;\r\n    }\r\n    long long result = 1;\r\n    a = a % m;\r\n    while (b > 0) {\r\n        if (b % 2 == 1) {\r\n            result = (result * a) % m;\r\n        }\r\n        a = (a * a) % m;\r\n        b /= 2;\r\n    }\r\n    return result;\r\n}\r\n\r\nbool isPrime(int n) {\r\n    if (n <= 1) return 0;\r\n    for (int i = 2; i * (ll) i <= n; ++i) {\r\n        if (n % i == 0) return 0;\r\n    }\r\n    return 1;\r\n}\r\n\r\nvoid solve();\r\n\r\nint main(int argc, char *argv[]) {\r\n    if (argc > 1 && argv[1][0] - '0') {\r\n        freopen(\"out.txt\", \"w\", stdout);\r\n//        freopen(\"meta_game_input (1).txt\", \"r\", stdin);\r\n        freopen(\"in.txt\", \"r\", stdin);\r\n    }\r\n//    ios_base::sync_with_stdio(false);\r\n//    cin.tie(nullptr);\r\n//    cout.tie(nullptr);\r\n    int t = 1;\r\n//    cin >> t;\r\n    for (int i = 0; i < t; ++i) {\r\n//        cout << \"Case #\" << i + 1 << \": \";\r\n        solve();\r\n    }\r\n}\r\n\r\nbool use(int n){\r\n    if (n <= 3) return true;\r\n    for (int i = 3; i*i <= n; ++i){\r\n        if (n % i == 0) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n    int a[n];\r\n    for (int i = 0; i < n; ++i)cin >> a[i];\r\n    REP(i, 3, n+1){\r\n        if (n % i == 0 && use(i)){\r\n            bool ok = true;\r\n            for (int j = 0; j < n; j += n/i) {\r\n                ok = ok && a[j];\r\n            }\r\n            if (ok){\r\n                cout << \"YES\\n\";\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    cout << \"NO\\n\";\r\n}"
}