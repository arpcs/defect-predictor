{
    "id": 234640497,
    "contestId": 71,
    "creationTimeSeconds": 1701118474,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 71,
        "index": "C",
        "name": "Round Table Knights",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "dp",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 71,
        "members": [
            {
                "handle": "sungodtemple"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1301410800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 819200,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\n#define ld long double\n\n#define p pair\n#define v vector\n#define dq deque\n#define q queue\n#define pq priority_queue\n#define dis distance\n#define arr array\n#define uset unordered_set\n#define umap unordered_map\n\nll mod = 1000000007;\n\nint main() {\n  //input\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL); //remove for interactive grader, may not flush properly\n  int numKnights; cin >> numKnights;\n  v<int> knights(numKnights);\n  for (int i = 0; i < numKnights; i++) {\n\t  cin >> knights[i];\n  }\n  v<int> works(numKnights + 1, 0);\n  for (int i = 1; i <= numKnights; i++) {\n\t  //separate into groups of i\n\t  if (numKnights / i < 3) {\n\t\t  break;\n\t  }\n\t  if (numKnights % i != 0) {\n\t\t  continue;\n\t  }\n\t  if (works[i] == -1) {\n\t\t  continue;\n\t  }\n\t  for (int j = 0; j < i; j++) {\n\t\t  bool thisWorks = true;\n\t\t  for (int k = 0; k < numKnights / i; k++) {\n\t\t\tif (knights[(j + k*i) % numKnights] == 0) {\n\t\t\t\tthisWorks = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t  }\n\t\t  if (thisWorks) {\n\t\t\t  works[i] = 1;\n\t\t\t  cout << \"YES\";\n\t\t\t  return 0;\n\t\t  }\n\t  }\n  }\n  cout << \"NO\";\n//   for (int i : works) cout << i << \" \";\n}"
}