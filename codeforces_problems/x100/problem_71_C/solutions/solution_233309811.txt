{
    "id": 233309811,
    "contestId": 71,
    "creationTimeSeconds": 1700320034,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 71,
        "index": "C",
        "name": "Round Table Knights",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "dp",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 71,
        "members": [
            {
                "handle": "Tenmei"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1301410800
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 409600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main(){\r\n\r\n\tint n;\r\n\r\n\tcin.tie(NULL);\r\n\tios::sync_with_stdio(false);\r\n\r\n\tcin >> n;\r\n\tvector<int> knights(n);\r\n\tvector<int> factors;\r\n\r\n\tint goodday = 1;\r\n\r\n\tfor(int N = 0; N < n; N++){\r\n\t\tcin >> knights[N];\r\n\t\tgoodday &= knights[N];\r\n\t}\r\n\r\n\t// if all are ones\r\n\tif(goodday){cout << \"YES\"  << endl; return 0;}\r\n\r\n\t// get the factors of n\r\n\tfor(int i = 2; i*i <= n; i++){\r\n\t\tif(n % i == 0){\r\n\t\t\tif(i*i == n) factors.push_back(i);\r\n\t\t\telse {factors.push_back(i); factors.push_back(n/i);}\r\n\t\t}\r\n\t}\r\n\r\n\t// start from knight 0, we check the happiness\r\n\tfor(int i = 0; i < factors.size(); i++){\r\n\t\t\r\n\t\tint vert = factors[i];\r\n\r\n\t\t// can't form polygon with 2 vertices\r\n\t\tif(vert == 2) continue;\r\n\t\t\r\n\t\tint n_poly = n/vert;\r\n\r\n\t\tfor(int j = 0; j < n_poly; j++){\r\n\t\t\tgoodday = 1;\r\n\t\t\tfor(int k = j; k < n; k += n_poly) {\r\n\t\t\t\tgoodday &= knights[k];\r\n\t\t\t\tif(goodday == 0) break; // if not good day, move on to next set\r\n\t\t\t}\r\n\t\t\tif(goodday == 1) break; // if got good day, can skip the rest\r\n\t\t}\r\n\r\n\t\tif(goodday == 1) break;\r\n\t}\r\n\r\n\tif(goodday == 1) cout << \"YES\" << endl;\r\n\telse cout << \"NO\" << endl;\r\n\r\n\treturn 0;\r\n}"
}