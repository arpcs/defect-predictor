{
    "id": 226775028,
    "contestId": 71,
    "creationTimeSeconds": 1696526319,
    "relativeTimeSeconds": 819,
    "problem": {
        "contestId": 71,
        "index": "C",
        "name": "Round Table Knights",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "dp",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 71,
        "members": [
            {
                "handle": "hgthecoder"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1696525500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n  vector<int> v;\r\n\r\n  vector<int> printDivisors(int n)\r\n{\r\n    vector<int> v;\r\n   int i;\r\n   for(i=1; i <= n; i++) {\r\n      if (n % i == 0)\r\n     v.push_back(i);\r\n   }\r\n    return v;\r\n}\r\n\r\nbool help(int n, int jump) {\r\n    for (int i = 0; i < n; ++i) {\r\n        if (v[i] == 1) {\r\n            int j = (i + jump+1) % n;  // Calculate the jump position modulo n\r\n            while (j != i) {\r\n                if (v[j] == 0) {\r\n                    return false;  // Cannot have same distance ones\r\n                }\r\n                j = (j + jump+1) % n;  // Jump to the next position modulo n\r\n            }\r\n        }\r\n    }\r\n    return true;  // All ones have same distance\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    v.resize(n);\r\n    vector<int> divisors= printDivisors(n);\r\n    for(int i=0;i<n;i++){\r\n        cin >> v[i];\r\n    }\r\n    bool ans = false;\r\n    for(auto u: divisors){\r\n        if(u>=3) {\r\n           ans = ans | help(n,(n/u)-1);\r\n        }\r\n    }\r\n    if(ans) cout << \"YES\";\r\n    else cout << \"NO\";\r\n    return 0;\r\n}"
}