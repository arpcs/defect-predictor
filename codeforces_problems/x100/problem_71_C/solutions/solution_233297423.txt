{
    "id": 233297423,
    "contestId": 71,
    "creationTimeSeconds": 1700313288,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 71,
        "index": "C",
        "name": "Round Table Knights",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "dp",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 71,
        "members": [
            {
                "handle": "CraftyRaf"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1301410800
    },
    "programmingLanguage": "Python 3",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "# 71C - Round Table Knights\r\n\r\ndef get_divisors_list(number_of_knights):\r\n    \"\"\"\r\n    This function searches for all divisors of the number of knights.\r\n    :param number_of_knights: the number of knights\r\n    :return: A list with all divisors of the number of knights (from '2' to\r\n    'number_of_knight/3 + 1')\r\n    \"\"\"\r\n\r\n    divisors = [1]\r\n    for divisor in range(2, int(number_of_knights / 3) + 1):\r\n        if number_of_knights % divisor == 0:\r\n            divisors.append(divisor)\r\n\r\n    return divisors\r\n\r\n\r\nknights = int(input())\r\nknights_list = [int(x) for x in input().split(' ')]\r\n#print(knights_list)\r\ndivisors_list = get_divisors_list(knights)\r\n\r\nflag = False\r\n\r\nfor divisor in divisors_list:\r\n#    print(f\"Divisor:{divisor}\")\r\n    for n in range(knights, 0, -1):\r\n        subset = list(knights_list[n::] + knights_list[:n:])\r\n        subset = subset[::divisor]\r\n#        print(subset)\r\n\r\n        if sum(subset) == int(knights / divisor):\r\n            flag = True\r\n            break\r\n    if flag = True:\r\n        break\r\n\r\nif flag:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")"
}