{
    "id": 233311410,
    "contestId": 71,
    "creationTimeSeconds": 1700320847,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 71,
        "index": "C",
        "name": "Round Table Knights",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "dp",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 71,
        "members": [
            {
                "handle": "CraftyRaf"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1301410800
    },
    "programmingLanguage": "Python 3",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 3788800,
    "source": "\r\n# 71C - Round Table Knights\r\n\r\nnumber_of_knights = int(input())\r\nknights_list = [int(x) for x in input().split(' ')]\r\n\r\ndivisors_list = [1]\r\nfor div in range(2, int(number_of_knights / 3) + 1):\r\n    if number_of_knights % div == 0:\r\n        divisors_list.append(div)\r\n\r\nflag = False\r\nsubset = []\r\n\r\n# Bad performance: Time limit exceeded on test 34.\r\n# for divisor in divisors_list:\r\n#     for n in range(knights):\r\n#         subset = list(knights_list[n::] + knights_list[:n:])\r\n#         subset = subset[::divisor]\r\n#\r\n#         if sum(subset) == int(knights / divisor):\r\n#             flag = True\r\n\r\nfor divisor in divisors_list:\r\n    for offset in range(divisor):\r\n        subset = knights_list[offset::divisor]\r\n\r\n        if sum(subset) == number_of_knights // divisor:\r\n            flag = True\r\n            break\r\n\r\n    if flag:\r\n        break\r\n\r\nif flag:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")\r\n"
}