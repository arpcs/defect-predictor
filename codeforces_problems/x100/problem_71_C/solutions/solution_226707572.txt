{
    "id": 226707572,
    "contestId": 71,
    "creationTimeSeconds": 1696495227,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 71,
        "index": "C",
        "name": "Round Table Knights",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "dp",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 71,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1301410800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 1638400,
    "source": "/* Hard work puts you where the good luck can find you */\n#include \"bits/stdc++.h\"\n#include \"unordered_set\"\n#include \"unordered_map\"\n#include \"ext/pb_ds/assoc_container.hpp\"\n#include \"ext/pb_ds/tree_policy.hpp\"\n\n#define int long long\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntemplate<typename T>\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\nconst int N = 15e6 + 5, mod = 998244353;\n\nint dx[] = {1, -1, 0, 0, -1, -1, 1, 1};\nint dy[] = {0, 0, 1, -1, -1, 1, 1, -1};\n\nint gcd(int a, int b) { return b ? gcd(b, a % b) : a; }\n\nint lcm(int a, int b) { return a / gcd(a, b) * b; }\n\nint n;\nvector<int> v;\n\nvector<int> divs(int n) {\n    vector<int> divs;\n    divs.emplace_back(1);\n    if (n != 1)divs.emplace_back(n);\n    for (int i = 2; i * i <= n; i++) {\n        if (n % i == 0) {\n            divs.emplace_back(i);\n            if (n / i != i)divs.emplace_back(n / i);\n        }\n    }\n    return divs;\n}\n\nbool valid(int cur) {\n    vector<int> tmp = v;\n    for (int i = n - 1; i >= 0; i--) {\n        if (!tmp[i])continue;\n        int nxt = i + cur;\n        if (!tmp[nxt % n])continue;\n        if (nxt < n)tmp[i] += tmp[nxt];\n        if (n / cur == tmp[i])return 1;\n    }\n    return 0;\n}\n\nvoid Get_AC() {\n    cin >> n;\n    v = vector<int>(n);\n    for (auto &i: v)cin >> i;\n    vector<int> cur = divs(n);\n    for (auto &i: cur) {\n        if (n / i > 2 && valid(i)) {\n            cout << \"YES\";\n            return;\n        }\n    }\n    cout << \"NO\";\n}\n\n\nsigned main() {\n    std::ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n#ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#else\n#endif\n    int tc = 1;\n//    cin >> tc;\n    for (int i = 1; i <= tc; i++) {\n//       cout << \"Case \" << i << \": \";\n        Get_AC();\n    }\n    return 0;\n}\n\t  \t\t\t\t\t \t\t  \t\t\t   \t\t     \t \t"
}