{
    "id": 227265539,
    "contestId": 71,
    "creationTimeSeconds": 1696818276,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 71,
        "index": "C",
        "name": "Round Table Knights",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "dp",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 71,
        "members": [
            {
                "handle": "erfanha130"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1301410800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int MAXN = 100 * 1000;\r\n\r\nbool a[MAXN];\r\nint n;\r\nvector<int> divisors;\r\n\r\nvoid readInput();\r\nbool isOkay();\r\nvoid fillDivisors();\r\nbool check(int idx);\r\n\r\nint main() {\r\n\treadInput();\r\n\tfillDivisors();\r\n\tcout << (isOkay()? \"YES\": \"NO\") << endl;\t\r\n}\r\n\r\nvoid readInput() {\r\n\tcin >> n;\r\n\tfor (int i = 0; i < n; i++)\r\n\t\tcin >> a[i];\t\r\n}\r\n\r\nvoid fillDivisors() {\r\n\tfor (int i = 1; i * i <= n; i++)\r\n\t\tif (n % i == 0) {\r\n\t\t\tif (i * i == n)\r\n\t\t\t\tdivisors.push_back(i);\r\n\t\t\telse {\r\n\t\t\t\tdivisors.push_back(i);\r\n\t\t\t\tdivisors.push_back(n / i);\r\n\t\t\t}\r\n\t\t}\r\n}\r\n\r\nbool isOkay() {\r\n\tfor (int i = 0; i < divisors.size(); i++)\r\n\t\tif (check(i))\r\n\t\t\treturn true;\r\n\treturn false;\r\n}\r\n\r\nbool check(int idx) {\r\n\tint tmp = divisors[idx];\r\n\tfor (int i = 0; i < tmp; i++) {\r\n\t\tbool x = true;\r\n\t\tfor (int j = i; j < n; j += tmp) {\r\n\t\t\tif (a[j] == 0)\r\n\t\t\t\tx = false;\t\r\n\t\t}\r\n\t\tif (x)\r\n\t\t\treturn true;\r\n\t}\r\n\treturn false;\t\t\r\n}"
}