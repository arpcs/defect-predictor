{
    "id": 228086228,
    "contestId": 71,
    "creationTimeSeconds": 1697229408,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 71,
        "index": "C",
        "name": "Round Table Knights",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "dp",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 71,
        "members": [
            {
                "handle": "Znno"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1301410800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 40038400,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\n\r\n#define FAST                 \\\r\n    ios::sync_with_stdio(0); \\\r\n    cin.tie(0);              \\\r\n    cout.tie(0);\r\nll mod=1e9+7 ;\r\nlong double const pi= acos(-1);\r\nusing namespace std;\r\n\r\nlong long const inf=1e18;\r\nlong long const modo=998244353;\r\nint dx[]={1,-1,0,0,0};\r\nint dy[]={0,0,1,-1,0};\r\nconst int N = 1e7+2;\r\nvector<int> lp(N+1);\r\nvector<int> pr;\r\nvoid lpf() {\r\n    for (int i = 2; i <= N; ++i) {\r\n        if (lp[i] == 0) {\r\n            lp[i] = i;\r\n            pr.push_back(i);\r\n        }\r\n\r\n        for (int j = 0; i * pr[j] <= N; ++j) {\r\n            lp[i * pr[j]] = pr[j];\r\n            if (pr[j] == lp[i]) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\nbool isPrime(long long  n)\r\n{\r\n    // Corner case\r\n    if (n <= 1)\r\n        return false;\r\n\r\n    // Check from 2 to n-1\r\n    for (long long  i = 2; i *i<= n; i++)\r\n        if (n % i == 0)\r\n            return false;\r\n\r\n    return true;\r\n}\r\nint power(int x, int p) {\r\n    int ret = 1;\r\n    while (p) {\r\n        if (p & 1) ret = (1LL * ret * x) % mod;\r\n        x = (1LL * x * x) % mod;\r\n        p >>= 1;\r\n    }\r\n    return ret;\r\n}\r\n\r\nint modInverse(int x) {\r\n    return power(x, mod - 2);\r\n}\r\nbool ispal(string s) {\r\n    for(int i=0;i<s.size()/2;i++)\r\n        if(s[i]!=s[s.size()-i-1])\r\n            return false;\r\n    return true;\r\n}\r\nbool comp(string s1,string s2)\r\n{\r\n    if(s1.size()==s2.size())\r\n        return s1<s2;\r\n    else\r\n    {\r\n        return s1.size()<s2.size();\r\n    }\r\n}\r\nll numberOfDivisors(ll n)\r\n{\r\n    int primes[]={2,3,5,7,11,13,17,19};\r\n    ll num=1,ans=1;\r\n    for (int it:primes)\r\n    {\r\n        int c=0;\r\n        while(n%it==0)\r\n        {\r\n            n/=it;\r\n            c++;\r\n        }\r\n        ans*=c+1;\r\n        num*=it;\r\n    }\r\n    int all=0;\r\n    for(int i=1;i<num;i++)\r\n    {\r\n        bool can=1;\r\n        for (int it:primes)\r\n        {\r\n            if(i%it==0)\r\n            {\r\n                can=0;\r\n            }\r\n        }\r\n        if(can)\r\n        {\r\n            ll o=i;\r\n            for (;o*o<n;o+=num)\r\n            {\r\n                if(n%o==0)\r\n                {\r\n                    all += 2;\r\n                }\r\n            }\r\n            if (o*o==n)\r\n            {\r\n                all++;\r\n            }\r\n        }\r\n    }\r\n    return ans*all;\r\n}\r\nmap<int , int> primefactors(int n)\r\n{\r\n    map<int,int>a;\r\n    while(n!=1) {\r\n        a[lp[n]]++;\r\n        n/=lp[n];\r\n    }\r\n    return a;\r\n}\r\nbool custom(pair<ll,ll>a,pair<ll,ll>b){\r\n    if(a.first!=b.first)\r\n        return a.first<b.first;\r\n    else\r\n        return a.second>b.second;\r\n}\r\n\r\n\r\nint  main() {\r\n\r\n    FAST\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"Input.txt\", \"r\", stdin);\r\n    freopen(\"Output.txt\", \"w\", stdout);\r\n#endif\r\n    int n;\r\n    cin >> n;\r\n    vector<int> vec1(n);\r\n    for (int i = 0; i < n; i++)\r\n        cin >> vec1[i];\r\n    bool correct = false;\r\n    for (int i = 1; i <= n / 3; i++) {\r\n        int cnt=0;\r\n        for (int j = 0; j < n; j += i) {\r\n            if (vec1[j])\r\n                cnt++;\r\n        }\r\n        if (cnt>=3) {\r\n            correct = true;\r\n        }\r\n    }\r\n    if (correct)\r\n        cout << \"YES\\n\";\r\n    else\r\n        cout << \"NO\\n\";\r\n\r\n\r\n}\r\n"
}