{
    "id": 234768775,
    "contestId": 5,
    "creationTimeSeconds": 1701182146,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 5,
        "index": "A",
        "name": "Chat Servers Outgoing Traffic",
        "type": "PROGRAMMING",
        "rating": 1000,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 5,
        "members": [
            {
                "handle": "OFD_Quantum"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1269100800
    },
    "programmingLanguage": "MS C++ 2017",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <string.h>\r\nusing namespace std;\r\n\r\nint add(int& n, char cmd[], char name[]);\r\nint remove(int& n, char cmd[], char name[]);\r\nint send(int& s, int n, char cmd[], char name[]);\r\n\r\nint main()\r\n{\r\n\tint n = 0, i = 1, s = 0;\r\n\tchar cmd[200], name[20000];\r\n\tname[0] = '\\0';\r\n\tdo\r\n\t{\r\n\t\tcin.getline (cmd, 200);\r\n\t\tif (cmd[0] == '+')\r\n\t\t{\r\n\t\t\tadd(n, cmd, name);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (cmd[0] == '-')\r\n\t\t\t{\r\n\t\t\t\tremove(n, cmd, name);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tsend(s, n, cmd, name);\r\n\t\t\t}\r\n\t\t}\r\n\t\t++i;\r\n\t} while (i <= 200);\r\n\tcout << s;\r\n\treturn 0;\r\n}\r\n\r\nint add(int& n, char cmd[], char name[])\r\n{\r\n\tbool check = false;\r\n\tint cmdlen = strlen(cmd), namelen = strlen(name);\r\n\tfor (int i = 0; i < namelen; ++i)\r\n\t{\r\n\t\tfor (int k = 1; k < cmdlen && i + k < namelen; k++) \r\n\t\t{\r\n\t\t\tif (cmd[k] != name[i + k - 1]) break;\r\n\t\t\tif (k == cmdlen - 1) check = true;\r\n\t\t}\r\n\t}\r\n\tif (check == false)\r\n\t{\r\n\t\t++n;\r\n\t\tname[namelen] = ' ';\r\n\t\tfor (int i = 1; i <= cmdlen; ++i)\r\n\t\t{\r\n\t\t\tname[i + namelen] = cmd[i];\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\treturn 1;\r\n}\r\n\r\nint remove(int& n, char cmd[], char name[])\r\n{\r\n\tint cmdlen = strlen(cmd), namelen = strlen(name);\r\n\tfor (int i = 0; i < namelen; ++i) \r\n\t{\r\n\t\tfor (int k = 1; k < cmdlen && i + k - 1 < namelen; k++) \r\n\t\t{\r\n\t\t\tif (cmd[k] != name[i + k - 1]) break; \r\n\t\t\tif (k == cmdlen - 1) \r\n\t\t\t{\r\n\t\t\t\t--n;\r\n\t\t\t\tfor (int j = 0; i + j + cmdlen <= namelen; ++j)\r\n\t\t\t\t{\r\n\t\t\t\t\tname[i + j] = name[i + j + cmdlen]; \r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 1;\r\n}\r\n\r\nint send(int& s, int n, char cmd[], char name[])\r\n{\r\n\tint cmdlen = strlen(cmd), namelen = strlen(name), colon = 0;\r\n\tfor (; cmd[colon] != ':'; ++colon);\r\n\tfor (int i = 0; i < namelen; ++i)\r\n\t{\r\n\t\tfor (int k = 0; k < colon && i + k < namelen; ++k) \r\n\t\t{\r\n\t\t\tif (cmd[k] != name[i + k]) break; \r\n\t\t\tif (k == colon - 1)\r\n\t\t\t{\r\n\t\t\t\ts += (cmdlen - colon - 1) * n;\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 1;\r\n}"
}