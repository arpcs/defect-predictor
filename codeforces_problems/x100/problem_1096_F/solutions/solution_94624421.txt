{
    "id": 94624421,
    "contestId": 1096,
    "creationTimeSeconds": 1601797663,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1096,
        "index": "F",
        "name": "Inversion Expectation",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1096,
        "members": [
            {
                "handle": "lprdsb"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546007700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 6860800,
    "source": "#include<bits/stdc++.h>\n#define For(i, a, b) for(int i = (a), en = (b); i <= en; ++i)\n#define Rof(i, a, b) for(int i = (a), en = (b); i >= en; --i)\n#define Tra(u, i) for(int i = hd[u]; ~i; i = e[i].net)\n#define LL long long\n#define DD double\n#define LD long double\n#define pb push_back\n#define mp make_pair\n#define fir first\n#define sec second\n#define inf 0x3f3f3f3f\n#define eps 1e-12\n#define maxn 100000\n#define mod 998244353\nusing namespace std;\n\nint n, a[maxn + 5], f[maxn + 5], cnt = 0, fac[maxn + 5], as = 0, vis[maxn + 5];\nstruct Node{int sum, cnt, lpr;} poi[4 * maxn + 5];\nstruct Tree{\n\t#define ls rt << 1\n\t#define rs rt << 1 | 1\n\t#define sum(x) poi[x].sum\n\t#define cnt(x) poi[x].cnt\n\t#define lpr(x) poi[x].lpr\n\tvoid upd(int rt){sum(rt) = (sum(ls) + sum(rs)) % mod;}\n\tvoid mson(int rt, int x){\n\t\tsum(rt) = (sum(rt) + 1ll * cnt(rt) * x % mod) % mod;\n\t\tlpr(rt) = (lpr(rt) + x) % mod;\n\t}\n\tvoid spr(int rt){\n\t\tif(!lpr(rt)) return;\n\t\tmson(ls, lpr(rt));\n\t\tmson(rs, lpr(rt));\n\t\tlpr(rt) = 0;\n\t}\n\tvoid build(int rt, int nl, int nr){\n\t\tsum(rt) = lpr(rt) = 0;\n\t\tif(nl == nr) return (void)(cnt(rt) = !vis[nl]);\n\t\tint mid = nl + nr >> 1;\n\t\tbuild(ls, nl, mid);\n\t\tbuild(rs, mid + 1, nr);\n\t\tcnt(rt) = cnt(ls) + cnt(rs);\n\t}\n\tvoid mdy(int rt, int nl, int nr, int ql, int qr, int x){\n\t\tif(ql <= nl && qr >= nr) return mson(rt, x);\n\t\tspr(rt);\n\t\tint mid = nl + nr >> 1;\n\t\tif(ql <= mid) mdy(ls, nl, mid, ql, qr, x);\n\t\tif(qr > mid) mdy(rs, mid + 1, nr, ql, qr, x);\n\t\tupd(rt);\n\t}\n} tr;\n\nint tr1[maxn + 5];\nvoid ins(int x, int y){while(x <= n) tr1[x] += y, x += x & -x;}\nint que(int x){int asi = 0; while(x) asi += tr1[x], x -= x & -x; return asi;}\n\nint fp(int x, int y){\n\tint asi = 1;\n\twhile(y){\n\t\tif(y & 1) asi = 1ll * asi * x % mod;\n\t\tx = 1ll * x * x % mod;\n\t\ty >>= 1;\n\t}\n\treturn asi;\n}\n\nint main(){\n\t//freopen(\"in\", \"r\", stdin);\n\tscanf(\"%d\", &n);\n\tfac[0] = 1;\n\tFor(i, 1, n) fac[i] = 1ll * fac[i - 1] * i % mod;\n\tFor(i, 1, n) scanf(\"%d\", &a[i]), a[i] = a[i] == -1 ? 0 : a[i], cnt += !a[i], vis[a[i]] = 1;\n\tRof(i, n, 1) if(a[i]) as = (as + que(a[i])) % mod, ins(a[i], 1);\n\tas = 1ll * as * fac[cnt] % mod;\n\tf[0] = 0;\n\tFor(i, 1, n) f[i] = (1ll * i * f[i - 1] % mod + 1ll * i * (i - 1) / 2 % mod * fac[i - 1] % mod) % mod;\n\ttr.build(1, 1, n);\n\tFor(i, 1, n){\n\t\tif(!a[i]) as = (as + 1ll * sum(1) * fac[cnt - 1] % mod) % mod;\n\t\telse tr.mdy(1, 1, n, 1, a[i], 1);\n\t}\n\ttr.build(1, 1, n);\n\tRof(i, n, 1){\n\t\tif(!a[i]) as = (as + 1ll * sum(1) * fac[cnt - 1] % mod) % mod;\n\t\telse tr.mdy(1, 1, n, a[i], n, 1);\n\t}\n\tprintf(\"%d\\n\", 1ll * fp(fac[cnt], mod - 2) * (as + f[cnt]) % mod);\n\treturn 0;\n}"
}