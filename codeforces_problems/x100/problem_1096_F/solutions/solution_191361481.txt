{
    "id": 191361481,
    "contestId": 1096,
    "creationTimeSeconds": 1675160911,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1096,
        "index": "F",
        "name": "Inversion Expectation",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1096,
        "members": [
            {
                "handle": "Iftekhar_Hakim_K"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546007700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 32,
    "timeConsumedMillis": 373,
    "memoryConsumedBytes": 16076800,
    "source": "#include<bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#define ll long long\r\n#define dbg(x) cout<<#x<<\": \"<<x<<endl;\r\n#define N 300005\r\n#define M 998244353\r\n#define pii pair<ll,ll>\r\n#define fast ios_base::sync_with_stdio(0);cin.tie(0);\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag,\r\n            tree_order_statistics_node_update>\r\n    ordered_set;\r\n#define int ll\r\n#ifdef IFT\r\n#include \"C:\\Users\\iftek\\Documents\\dbg.h\"\r\n#define debug(...) debug_out(vec_splitter(#__VA_ARGS__), 0, __LINE__, __VA_ARGS__)\r\n#else\r\n#define debug(...)\r\n#endif\r\n\r\nll bigmod(ll a,ll b)\r\n{\r\n    a %= M;\r\n    long long res = 1;\r\n    while (b > 0) {\r\n        if (b & 1)\r\n            res = res * a % M;\r\n        a = a * a % M;\r\n        b >>= 1;\r\n    }\r\n    return res;\r\n}\r\n\r\nll f[N];\r\nll inv[N];\r\n\r\nvoid init()\r\n{\r\n    f[0]=inv[0]=1;\r\n    for(int i=1;i<N;i++)\r\n    {\r\n        f[i]=(f[i-1]*i)%M;\r\n    }\r\n    inv[N-1]=bigmod(f[N-1],M-2);\r\n    for(int i=N-2;i>=0;i--)\r\n    {\r\n        inv[i]=inv[i+1]*(i+1)%M;\r\n    }\r\n    return;\r\n}\r\nll C(int n,int r)\r\n{\r\n    if(n<r)\r\n        return 0;\r\n    return f[n]*inv[r]%M*inv[n-r]%M;\r\n}\r\n\r\nvoid solve()\r\n{\r\n    ordered_set st;\r\n    int n;\r\n    cin>>n;\r\n    int p[n+1];\r\n    int b=0;\r\n    ll ans=0;\r\n    ordered_set baki;\r\n    for(int i=1;i<=n;i++)\r\n        baki.insert(i);\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        cin>>p[i];\r\n        if(p[i]==-1)\r\n            b++;\r\n        else\r\n        {\r\n            ans+=(st.size()-st.order_of_key(p[i]));\r\n            st.insert(p[i]);\r\n            baki.erase(p[i]);\r\n        }\r\n    }\r\n    ans=(ans*f[b])%M;\r\n    debug(b,f[b]);\r\n    if(b>=2)\r\n        ans=(ans+1LL*b*(b-1)%M*f[b]%M*bigmod(4,M-2)%M)%M;\r\n    debug(ans);\r\n\r\n\r\n\r\n    int gap=b;\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        if(p[i]==-1) gap--;\r\n        else if(gap&&b)\r\n        {\r\n            int koyta=baki.order_of_key(p[i]);\r\n            ll temp=1LL*gap*koyta%M*f[b-1]%M;\r\n            ans=(ans+temp)%M;\r\n        }\r\n    }\r\n    debug(ans);\r\n\r\n    gap=b;\r\n    for(int i=n;i>=1;i--)\r\n    {\r\n        if(p[i]==-1) gap--;\r\n        else if(gap&&b)\r\n        {\r\n            int koyta=baki.size()-baki.order_of_key(p[i]);\r\n            ll temp=1LL*gap*koyta%M*f[b-1]%M;\r\n            ans=(ans+temp)%M;\r\n        }\r\n    }\r\n\r\n    debug(ans);\r\n    cout<<(ans*bigmod(f[b],M-2))%M;\r\n}\r\nmain()\r\n{\r\n    init();\r\n\r\n//    cout<<(1LL*499122183*f[3])%M;\r\n\r\n    fast;\r\n    int t;\r\n    t=1;\r\n    while(t--)\r\n    {\r\n        solve();\r\n    }\r\n}\r\n\r\n"
}