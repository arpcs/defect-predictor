{
    "id": 147228970,
    "contestId": 1096,
    "creationTimeSeconds": 1645501445,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1096,
        "index": "F",
        "name": "Inversion Expectation",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1096,
        "members": [
            {
                "handle": "Japarkhan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546007700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 32,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 8294400,
    "source": "#pragma comment(linker, \"/stack:20000000\")\r\n#pragma GCC optimize(\"Ofast\")\r\n#include <bits/stdc++.h> \r\nusing namespace std;\r\n#define f first\r\n#define s second\r\n#define pb push_back\r\n#define mp make_pair\r\ntypedef vector<int> vi;\r\ntypedef pair<int,int> pii;\r\ntypedef long long ll;\r\ntypedef long double ld;\r\n\r\n\r\nconst int mod = 998244353, maxn = int(4e5) + 5;\r\nint n, p[maxn], t[2 * maxn], u[maxn], s[maxn];\r\n\r\n\r\nll mod_pow(ll a, ll b) {\r\n\tll res = 1;\r\n\twhile(b) {\r\n\t\tif(b & 1) res = res * a % mod;\r\n\t\ta = a * a % mod;\r\n\t\tb >>= 1;\r\n\t}\r\n\treturn res;\r\n}\r\n\r\nvoid update(int v, int val) {\r\n\tv += n - 1;\r\n\tt[v] = val;\r\n\twhile(v > 1) {\r\n\t\tv >>= 1;\r\n\t\tt[v] = t[v << 1] + t[(v << 1) | 1];\r\n\t}\r\n}\r\n\r\nint find_sum(int l, int r) {\r\n\tl += n - 1, r += n - 1;\r\n\tint res = 0;\r\n\twhile(l <= r) {\r\n\t\tif(l & 1) res += t[l];\r\n\t\tif(!(r & 1)) res += t[r];\r\n\t\tl = (l + 1) >> 1, r = (r - 1) >> 1;\r\n\t}\r\n\treturn res;\r\n}\r\n\r\n\r\nint main () {\r\n\t#ifdef LOCAL\r\n\tfreopen(\"in\",\"r\",stdin);\r\n\tfreopen(\"out\",\"w\",stdout);\r\n\t#endif\r\n\r\n\tscanf(\"%d\", &n);\r\n\tll cnt = 0;\r\n\tll res = 0;\r\n\tfor(int i = 1;i <= n;++i) {\r\n\t\tscanf(\"%d\", &p[i]);\r\n\t\tif(p[i] == -1) {\r\n\t\t\tcnt++;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tu[p[i]] = 1;\r\n\t\tres += find_sum(p[i] + 1, n);\r\n\t\tupdate(p[i], 1);\r\n\t}\r\n\tres %= mod;\r\n\r\n\tif(cnt == 0) {\r\n\t\tprintf(\"%I64d\", res);\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tll rev4 = mod_pow(4, mod - 2), cur = cnt * (cnt - 1) % mod;\r\n\tres = (res + cur * rev4) % mod;\r\n\r\n\tfor(int i = 1;i <= n;++i) {\r\n\t\ts[i] = s[i - 1];\r\n\t\tif(i > 1  &&  !u[i - 1]) s[i]++;\r\n\t//\tcout<<s[i]<<endl;\r\n\t}\r\n\tassert(s[n] <= cnt);\r\n\r\n\tll sum = 0, S = 0;\r\n\tfor(int i = n;i > 0;--i) {\r\n\t\tif(p[i] == -1) S++;\r\n\t\telse sum = (sum + s[p[i]] * S + (cnt - s[p[i]]) * (cnt - S)) % mod;\r\n\t}\r\n\tres = (res + sum * mod_pow(cnt, mod - 2)) % mod;\r\n\tprintf(\"%I64d\", res);\r\n\r\n\r\n\treturn 0;\r\n}"
}