{
    "id": 72988979,
    "contestId": 1096,
    "creationTimeSeconds": 1583969883,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1096,
        "index": "F",
        "name": "Inversion Expectation",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1096,
        "members": [
            {
                "handle": "limabeans"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546007700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 32,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 16076800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n\r\ntemplate<typename T>\r\nvoid out(T x) { cout << x << endl; exit(0); }\r\n#define watch(x) cout << (#x) << \" is \" << (x) << endl\r\n\r\nconst int maxn = 1e6 + 5;\r\nconst ll mod = 998244353;\r\n\r\nint n;\r\nint a[maxn];\r\n\r\n\r\nint t[maxn];\r\nvoid update(int i, int dx) {\r\n  while (i<=n) {\r\n    t[i] += dx;\r\n    i += i&-i;\r\n  }\r\n}\r\nint get(int i) {\r\n  int res = 0;\r\n  while (i>0) {\r\n    res += t[i];\r\n    i -= i&-i;\r\n  }\r\n  return res;\r\n}\r\n\r\nll pw(ll x, ll y) {\r\n  ll res = 1;\r\n  while (y) {\r\n    if (y%2) {\r\n      res *= x;\r\n      res %= mod;\r\n    }\r\n    y = y / 2;\r\n    x = x * x;\r\n    x %= mod;\r\n  }\r\n  res %= mod;\r\n  res += mod;\r\n  res %= mod;\r\n  return res;\r\n}\r\n\r\nmap<ll,ll> mp;\r\nll inv(ll x) {\r\n  assert(x);\r\n  if (mp.count(x)) return mp[x];\r\n  return mp[x] = ((pw(x,mod-2)%mod)+mod)%mod;\r\n}\r\n\r\nint suff[maxn];\r\nint pref[maxn];\r\n\r\nint main() {\r\n  ios_base::sync_with_stdio(false); cin.tie(0);  cout.tie(0);\r\n  assert(pw(2,5)==32);\r\n\r\n  cin>>n;\r\n\r\n  for (int i=0; i<n; i++) {\r\n    cin>>a[i];\r\n  }\r\n\r\n\r\n  for (int i=1; i<=n; i++) {\r\n    suff[i] = 1;\r\n    pref[i] = 1;\r\n  }\r\n\r\n  ll neg = 0;\r\n  for (int i=0; i<n; i++) {\r\n    if (a[i] == -1) {\r\n      neg++;\r\n    } else {\r\n      suff[a[i]] = 0;\r\n      pref[a[i]] = 0;\r\n    }\r\n  }\r\n  \r\n  for (int i=n; i>=1; i--) {\r\n    suff[i] += suff[i+1];\r\n  }\r\n  for (int i=1; i<=n; i++) {\r\n    pref[i] += pref[i-1];\r\n  }\r\n\r\n\r\n\r\n  ll res = 0;\r\n\r\n  // -1 -1\r\n  res += 1LL*neg*(neg-1)%mod*inv(4)%mod;\r\n\r\n\r\n  // -1 val\r\n  int left = 0;\r\n  for (int i=0; i<n; i++) {\r\n    if (a[i] == -1) {\r\n      left++;\r\n    } else if (neg) {\r\n      ll cur = 1LL*left*suff[a[i]]%mod*inv(neg)%mod;\r\n      res += cur;\r\n      res %= mod;\r\n    }\r\n  }\r\n\r\n\r\n  // val -1\r\n  int right = 0;\r\n  for (int i=n-1; i>=0; i--) {\r\n    if (a[i] == -1) {\r\n      right++;\r\n    } else if (neg) {\r\n      ll cur = 1LL*right*pref[a[i]]%mod*inv(neg)%mod;\r\n      res += cur;\r\n      res %= mod;\r\n    }\r\n  }\r\n  \r\n\r\n  // val val\r\n  for (int i=0; i<n; i++) {\r\n    if (a[i] != -1) {\r\n      int cur = get(n) - get(a[i]);\r\n      res += cur;\r\n      res %= mod;\r\n      update(a[i], +1);\r\n    }\r\n  }\r\n\r\n  \r\n  res %= mod;\r\n  res += mod;\r\n  res %= mod;\r\n  cout<<res<<endl;\r\n  return 0;\r\n}\r\n// don't forget to read in the input :^)\r\n"
}