{
    "id": 92902281,
    "contestId": 1096,
    "creationTimeSeconds": 1600174082,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1096,
        "index": "F",
        "name": "Inversion Expectation",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1096,
        "members": [
            {
                "handle": "SorryNaCN"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546007700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 11980800,
    "source": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#include <cmath>\n#include <cstring>\n#include <vector>\n#include <map>\n#include <stack>\nusing namespace std;\ntypedef long long ll;\n#define pii pair<int, int>\n#define mk make_pair\nconst int N = 1e6 + 10;\nconst int mod = 998244353;\n\nint read()\n{\n    int x = 0, f = 1;\n    char c = getchar();\n    while (c < '0' || c > '9')\n    {\n        if (c == '-')\n            f = -1;\n        c = getchar();\n    }\n    while (c >= '0' && c <= '9')\n        x = (x << 1) + (x << 3) + c - '0', c = getchar();\n    return x * f;\n}\nint inc(int x, int y) { return (x + y >= mod) ? (x + y - mod) : (x + y); }\nint del(int x, int y) { return (x - y < 0) ? (x - y + mod) : (x - y); }\nint qpow(int a, int x, int mo)\n{\n    int res = 1;\n    while (x)\n    {\n        if (x & 1)\n            res = 1ll * a * res % mo;\n        a = 1ll * a * a % mo;\n\n        x >>= 1;\n    }\n    return res;\n}\nstruct BIT\n{\n    int tr[N];\n    int Bmax;\n    int lb(int x) { return (-x) & x; }\n    void init(int n)\n    {\n        Bmax = n;\n        for (int i = 0; i <= n; i++)\n            tr[i] = 0;\n    }\n    int query(int x)\n    {\n        if (x <= 0)\n            return 0;\n        int res = 0;\n        while (x)\n        {\n            res += tr[x];\n            x -= lb(x);\n        }\n        return res;\n    }\n    void update(int x, int w)\n    {\n        if (x <= 0)\n            return;\n        while (x <= Bmax)\n        {\n            tr[x] += w;\n            x += lb(x);\n        }\n    }\n} t;\nint sum[N];\nint a[N];\nint main()\n{\n    int n = read();\n    for (int i = 1; i <= n; i++)\n        a[i] = read();\n\n    t.init(n);\n    ll res = 0;\n    for (int i = 1; i <= n; i++)\n    {\n\n        sum[i] = sum[i - 1] + (a[i] == -1);\n        if (a[i] != -1)\n        {\n            res += t.query(n) - t.query(a[i]);\n            t.update(a[i], 1);\n        }\n    }\n    int o = sum[n];\n    res %= mod;\n    res = inc(res, 1ll * o * (o - 1) % mod * qpow(4, mod - 2, mod));\n    for (int i = 1; i <= n; i++)\n    {\n        if (a[i] != -1)\n        {\n            int r = t.query(n) - t.query(a[i]);\n            int l = t.query(a[i] - 1);\n            r = (n - a[i] - r);\n            l = (a[i] - 1 - l);\n            res = inc(res, 1ll * r * (sum[i]) * qpow(o, mod - 2, mod) % mod);\n            res = inc(res, 1ll * l * (o - sum[i]) % mod * qpow(o, mod - 2, mod) % mod);\n        }\n    }\n    cout << res << endl;\n}"
}