{
    "id": 101210553,
    "contestId": 1096,
    "creationTimeSeconds": 1607996032,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1096,
        "index": "F",
        "name": "Inversion Expectation",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1096,
        "members": [
            {
                "handle": "SoiMae"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546007700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 32,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 3174400,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\nconst int mod = 998244353;\n\nint power(int a, int b, int m, int ans=1) {\n\tfor (; b; b>>=1, a=1LL*a*a%m) if (b&1) ans=1LL*ans*a%m;\n\treturn ans;\n}\n\n#define NN 200010\nint p[NN];\nint B[NN];\n\nvoid update(int u, int x) {\n\twhile (u < NN) {\n\t\tB[u] += x;\n\t\tu += u & (-u);\n\t}\n}\n\nint calc(int u) {\n\tint ss = 0;\n\twhile (u > 0) {\n\t\tss += B[u];\n\t\tu -= u & (-u);\n\t}\n\treturn ss;\n}\n\nint vst[NN];\nint A[NN];\n\nint main() {\n#ifndef ONLINE_JUDGE\n\tfreopen(\"in.in\", \"r\", stdin);\n\tfreopen(\"out.out\", \"w\", stdout);\n#endif\n\tios_base :: sync_with_stdio(0);\n\tcin.tie(0); cout.tie(0);\n\t\n\tint n;\n\tcin >> n;\n\t\n\tint cnt = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> p[i];\n\t\tif (p[i] != -1) vst[p[i]] = 1;\n\t\telse cnt++;\n\t}\n\t\n\tint val = 1;\n\tfor (int i = 1; i <= cnt; i++) val = 1LL * val * i % mod;\n\tint ans = val;\n\tans = 1LL * ans * power(2, mod - 2, mod) % mod;\n\tans = 1LL * ans * ((1LL * cnt * (cnt - 1) / 2) % mod) % mod;\n\t\n\tint N = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (p[i] != -1) {\n\t\t\tA[++N] = p[i];\n\t\t}\n\t}\n\t\n\tint num = 0;\n\tfor (int i = N; i >= 1; i--) {\n\t\tnum = (num + calc(A[i])) % mod;\n\t\tupdate(A[i], 1);\n\t}\n\t\n\tans = (ans + 1LL * num * val) % mod;\n\t\n\tmemset(A, 0, sizeof A);\n\t\n\tN = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (!vst[i]) A[++N] = i;\n\t}\n\t\n\tsort(A + 1, A + N + 1);\n\tnum = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (p[i] != -1) {\n\t\t\tint id = upper_bound(A + 1, A + N + 1, p[i]) - A;\n\t\t\tint x = N - id + 1;\n\t\t\tans = (ans + 1LL * num * x % mod * power(cnt, mod - 2, mod) % mod * val) % mod;\n\t\t}\n\t\telse num++;\n\t}\n\t\n\tnum = 0;\n\tfor (int i = n; i >= 1; i--) {\n\t\tif (p[i] != -1) {\n\t\t\tint id = lower_bound(A + 1, A + N + 1, p[i]) - A;\n\t\t\tint x = id - 1;\n\t\t\tans = (ans + 1LL * num * x % mod * power(cnt, mod - 2, mod) % mod * val) % mod;\n\t\t}\n\t\telse num++;\n\t}\n\t\n\tans = 1LL * ans * power(val, mod - 2, mod) % mod;\n\tcout << ans << endl;\n}\n                               "
}