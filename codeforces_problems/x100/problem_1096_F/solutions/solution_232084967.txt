{
    "id": 232084967,
    "contestId": 1096,
    "creationTimeSeconds": 1699540293,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1096,
        "index": "F",
        "name": "Inversion Expectation",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1096,
        "members": [
            {
                "handle": "N1c4_T4y"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546007700
    },
    "programmingLanguage": "GNU C11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\n#define ld long double\r\n#define int long long\r\n\r\nusing namespace std;\r\n\r\nconst int N = 1e5+10;\r\nconst int INF = INT_MAX;\r\nconst int mod = 998244353;\r\n\r\nint n,a[N];\r\nint bit[2*N];\r\nint ans,up[N],check[N];\r\n\r\nvoid add(int &x, const int y) {\r\n    x += y;\r\n    if(x >= mod) {\r\n        x -= mod;\r\n    }\r\n    if(x < 0) {\r\n        x += mod;\r\n    }\r\n}\r\n\r\nint power(int a, int b) {\r\n    int res = 1;\r\n    while(b) {\r\n        if(b&1) {\r\n            res = 1LL*res*a%mod;\r\n        }\r\n        a = 1LL*a*a%mod;\r\n        b >>= 1;\r\n    }\r\n    return res;\r\n}\r\n\r\nvoid update(int id) {\r\n    while(id <= n) {\r\n        bit[id]++;\r\n        id += (id & (-id));\r\n    }\r\n}\r\n\r\nint get(int id) {\r\n    int res = 0;\r\n    while(id > 0) {\r\n        res += bit[id];\r\n        id -= (id & (-id));\r\n    }\r\n    return res;\r\n}\r\n\r\nsigned main()\r\n{\r\n    if (fopen(\"inversion.inp\", \"r\")) {\r\n        freopen(\"inversion.inp\", \"r\", stdin);\r\n        freopen(\"inversion.out\", \"w\", stdout);\r\n    }\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    cin >> n;\r\n    for(int i = 1 ; i <= n ; i++) {\r\n        cin >> a[i];\r\n        if(a[i] != -1) {\r\n            check[a[i]] = 1;\r\n        }\r\n    }\r\n    int cnt = 0;\r\n    for(int i = n ; i > 0 ; i--) {\r\n        up[i] = cnt;\r\n        cnt += (check[i] ? 0 : 1);\r\n    }\r\n    ans = 1LL*cnt*(cnt-1)%mod*power(4,mod-2)%mod;\r\n    int inv = power(cnt,mod-2);\r\n    for(int i = 1 , dem = 0 ; i <= n ; i++) {\r\n        if(a[i] == -1) {\r\n            dem++;\r\n        }\r\n        else {\r\n            add(ans,1LL*dem*power(up[a[i]],inv)%mod);\r\n        }\r\n    }\r\n    for(int i = n, dem = 0 ; i > 0 ; i--) {\r\n        if(a[i] == -1) {\r\n            dem++;\r\n        }\r\n        else {\r\n            add(ans,1LL*dem*(cnt-up[a[i]])%mod*inv%mod);\r\n        }\r\n    }\r\n    for(int i = 1, dem = 0 ; i <= n ; i++) {\r\n        if(a[i] != -1) {\r\n            add(ans,dem-get(a[i]));\r\n            update(a[i]);\r\n            dem++;\r\n        }\r\n    }\r\n    cout << ans;\r\n    return 0;\r\n}\r\n"
}