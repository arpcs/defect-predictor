{
    "id": 92904201,
    "contestId": 1096,
    "creationTimeSeconds": 1600175404,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1096,
        "index": "F",
        "name": "Inversion Expectation",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1096,
        "members": [
            {
                "handle": "SorryNaCN"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546007700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <queue>\r\n#include <cmath>\r\n#include <cstring>\r\n#include <vector>\r\n#include <map>\r\n#include <stack>\r\nusing namespace std;\r\ntypedef long long ll;\r\n#define pii pair<int, int>\r\n#define mk make_pair\r\nconst int N = 1e6 + 10;\r\nconst int mod = 998244353;\r\n\r\nint read()\r\n{\r\n    int x = 0, f = 1;\r\n    char c = getchar();\r\n    while (c < '0' || c > '9')\r\n    {\r\n        if (c == '-')\r\n            f = -1;\r\n        c = getchar();\r\n    }\r\n    while (c >= '0' && c <= '9')\r\n        x = (x << 1) + (x << 3) + c - '0', c = getchar();\r\n    return x * f;\r\n}\r\nint inc(int x, int y) { return (x + y >= mod) ? (x + y - mod) : (x + y); }\r\nint del(int x, int y) { return (x - y < 0) ? (x - y + mod) : (x - y); }\r\nint qpow(int a, int x, int mo)\r\n{\r\n    int res = 1;\r\n    while (x)\r\n    {\r\n        if (x & 1)\r\n            res = 1ll * a * res % mo;\r\n        a = 1ll * a * a % mo;\r\n\r\n        x >>= 1;\r\n    }\r\n    return res;\r\n}\r\nstruct BIT\r\n{\r\n    int tr[N];\r\n    int Bmax;\r\n    int lb(int x) { return (-x) & x; }\r\n    void init(int n)\r\n    {\r\n        Bmax = n;\r\n        for (int i = 0; i <= n; i++)\r\n            tr[i] = 0;\r\n    }\r\n    int query(int x)\r\n    {\r\n        if (x <= 0)\r\n            return 0;\r\n        int res = 0;\r\n        while (x)\r\n        {\r\n            res += tr[x];\r\n            x -= lb(x);\r\n        }\r\n        return res;\r\n    }\r\n    void update(int x, int w)\r\n    {\r\n        if (x <= 0)\r\n            return;\r\n        while (x <= Bmax)\r\n        {\r\n            tr[x] += w;\r\n            x += lb(x);\r\n        }\r\n    }\r\n} t;\r\nint sum[N];\r\nint a[N];\r\nint main()\r\n{\r\n    int n = read();\r\n    for (int i = 1; i <= n; i++)\r\n        a[i] = read();\r\n\r\n    t.init(n);\r\n    int res = 0;\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n\r\n        sum[i] = sum[i - 1] + (a[i] == -1);\r\n        if (a[i] != -1)\r\n        {\r\n            res =inc(ans, t.query(n) - t.query(a[i]));\r\n            t.update(a[i], 1);\r\n        }\r\n    }\r\n    int o = sum[n];\r\n    res %= mod;\r\n    res = inc(res, 1ll * o * (o - 1) % mod * qpow(4, mod - 2, mod) % mod);\r\n    cout << res << endl;\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        if (a[i] != -1)\r\n        {\r\n            int r = t.query(n) - t.query(a[i]);\r\n            int l = t.query(a[i] - 1);\r\n\r\n            r = (n - a[i] - r);\r\n            l = (a[i] - 1 - l);\r\n\r\n            res = inc(res, 1ll * r * (sum[i])%mod * qpow(o, mod - 2, mod) % mod);\r\n            res = inc(res, 1ll * l * (o - sum[i]) % mod * qpow(o, mod - 2, mod) % mod);\r\n        }\r\n    }\r\n\r\n    cout << res << endl;\r\n}"
}