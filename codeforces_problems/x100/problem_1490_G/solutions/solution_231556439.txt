{
    "id": 231556439,
    "contestId": 1490,
    "creationTimeSeconds": 1699259353,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "SubhajeetLahiri"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 102400,
    "source": "#include <algorithm>\r\n#include <array>\r\n#include <bitset>\r\n#include <cassert>\r\n#include <chrono>\r\n#include <cmath>\r\n#include <cstdint>\r\n#include <cstring>\r\n#include <functional>\r\n#include <iomanip>\r\n#include <iostream>\r\n#include <map>\r\n#include <unordered_map>\r\n#include <numeric>\r\n#include <queue>\r\n#include <random>\r\n#include <set>\r\n#include <unordered_set>\r\n#include <vector>\r\n#include <complex>\r\n#include <stack>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\nvoid __print(int x) {cerr << x;}\r\nvoid __print(long x) {cerr << x;}\r\nvoid __print(long long x) {cerr << x;}\r\nvoid __print(unsigned x) {cerr << x;}\r\nvoid __print(unsigned long x) {cerr << x;}\r\nvoid __print(unsigned long long x) {cerr << x;}\r\nvoid __print(float x) {cerr << x;}\r\nvoid __print(double x) {cerr << x;}\r\nvoid __print(long double x) {cerr << x;}\r\nvoid __print(char x) {cerr << '\\'' << x << '\\'';}\r\nvoid __print(const char *x) {cerr << '\\\"' << x << '\\\"';}\r\nvoid __print(const string &x) {cerr << '\\\"' << x << '\\\"';}\r\nvoid __print(bool x) {cerr << (x ? \"true\" : \"false\");}\r\n\r\ntemplate<typename T, typename V>\r\nvoid __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}\r\ntemplate<typename T>\r\nvoid __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? \",\" : \"\"), __print(i); cerr << \"}\";}\r\nvoid _print() {cerr << \"]\\n\";}\r\ntemplate <typename T, typename... V>\r\nvoid _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << \", \"; _print(v...);}\r\n\r\nstruct custom_hash {\r\n    static uint64_t splitmix64(uint64_t x) {\r\n        // http://xorshift.di.unimi.it/splitmix64.c\r\n        x += 0x9e3779b97f4a7c15; x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9; x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n        return x ^ (x >> 31);\r\n    }\r\n    size_t operator()(uint64_t x) const {\r\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n        return splitmix64(x + FIXED_RANDOM);\r\n    }\r\n};\r\n\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x...) cerr << \"[\" << #x << \"] = [\"; _print(x)\r\n#else\r\n#define debug(x...)\r\n#endif\r\n\r\ntypedef long long ll;\r\n#define int ll\r\ntypedef vector<int> vi;\r\ntypedef pair<int,int> pi;\r\n#define pb push_back\r\n#define MAX 200000\r\n#define MOD 1000000007\r\n#define nl '\\n'\r\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\r\nconst int inf = 1e9;\r\n\r\nvoid takeinput(vector<int> &a, int start, int end){for(int i=start;i<=end;i++)cin>>a[i];}\r\nvoid yes(){cout<<\"YES\"<<nl;}\r\nvoid no(){cout<<\"NO\"<<nl;}\r\nvoid testcase(int t){cout<<\"Case #\"<<t<<\" : \";}\r\n\r\nint exp(int ,int);\r\nint ceildiv(int, int);\r\nint modinv(int);\r\n\r\nvoid solve(int t){\r\n    int n, m; cin>>n>>m;\r\n    vector<int> a(n); takeinput(a, 0, n-1);\r\n    vi pre(n), premax(n);\r\n    pre[0] = premax[0] = a[0];\r\n    for(int i=1;i<n;i++){\r\n        pre[i] = a[i] + pre[i-1];\r\n        premax[i] = max(pre[i], premax[i-1]);\r\n    }\r\n    auto calciterations = [&](int x)->int{\r\n        int l = 0, r = x + 100;\r\n        int ret = 0;\r\n        while(l <= r){\r\n            int mid = (l + r)/2;\r\n            if(x - (mid - 1) * pre[n-1] > premax[n-1]){\r\n                ret = max(ret, mid);\r\n                l = mid + 1;\r\n            }else r = mid - 1;\r\n        } \r\n        return ret;\r\n    };\r\n\r\n    auto answerquery = [&](int x)->void{\r\n        if(x > premax[n-1] && pre[n-1] <= 0){\r\n            cout<<-1<<\" \";\r\n            return;\r\n        }\r\n        int iters = calciterations(x);\r\n        int ans = iters*n;\r\n        x -= iters*pre[n-1];\r\n\r\n        int l = 0, r = n-1;\r\n        int ind = r;\r\n        while(l <= r){\r\n            int mid = (l + r)/2;\r\n            if(premax[mid] >= x){\r\n                ind = min(ind, mid);\r\n                r = mid - 1;\r\n            }else l = mid + 1;\r\n        }\r\n        ans += ind;\r\n        cout<<ans<<\" \";\r\n    };\r\n\r\n    for(int i=0;i<m;i++){\r\n        int x; cin>>x;\r\n        answerquery(x);\r\n    }\r\n    cout<<nl;\r\n}\r\n\r\nsigned main(){\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(NULL);\r\n    #ifndef ONLINE_JUDGE\r\n    freopen(\"input.in\",\"r\",stdin);\r\n    freopen(\"output.out\",\"w\",stdout);\r\n    freopen(\"error.out\",\"w\",stderr);\r\n    #endif\r\n    // int t = 1;\r\n    int t; cin>>t; \r\n    for(int i=1;i<=t;i++){\r\n        solve(i);\r\n    }\r\n}\r\n\r\nint exp(int a, int b){\r\n    int res = 1;\r\n    while(b > 0){\r\n        if( b % 2 == 1){\r\n            res = (res * a) % MOD;\r\n        }\r\n        a = (a*a)%MOD;\r\n        b /= 2;\r\n    }\r\n    return res;\r\n}\r\n\r\nint ceildiv(int a, int b){\r\n    return (a + b - 1)/b;\r\n}\r\n\r\nint modinv(int a){\r\n    return exp(a, MOD - 2);\r\n}"
}