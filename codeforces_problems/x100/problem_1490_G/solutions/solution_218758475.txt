{
    "id": 218758475,
    "contestId": 1490,
    "creationTimeSeconds": 1691997678,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "AnonymousGuy12"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 4812800,
    "source": "#include <bits/stdc++.h>\r\n#define int long long int\r\n#define endl \"\\n\"\r\n#define pb push_back\r\n#define pf push_front\r\n#define ff first\r\n#define ss second\r\n#define sz(x) (int)x.size()\r\n#define _USE_MATH_DEFINES\r\n#define fastio() ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(__null);\r\n\r\nusing namespace std;\r\n\r\nsigned main() {\r\n    fastio()\r\n    \r\n    int t;\r\n    cin >> t;\r\n\r\n    while (t--) {\r\n        int n, m;\r\n        cin >> n >> m;\r\n\r\n        vector<int> v(n + 1);\r\n        for (int i = 1; i <= n; i++) cin >> v[i];\r\n\r\n        vector<int> qr(m);\r\n        for (auto &x : qr) cin >> x;\r\n\r\n        int pre = 0;\r\n        vector<int> premax(n + 1);\r\n        for (int i = 1; i <= n; i++) {\r\n            pre += v[i];\r\n            premax[i] = max(premax[i - 1], pre);\r\n        }\r\n\r\n        function<int(int)> search = [&](int sum) {\r\n            int lo = 1, hi = n, ans;\r\n            while (lo <= hi) {\r\n                int mid = (lo + hi) / 2;\r\n                if (premax[mid] >= sum) ans = mid, hi = mid - 1;\r\n                else lo = mid + 1;\r\n            }\r\n\r\n            return ans;\r\n        };\r\n\r\n        for (auto &x : qr) {\r\n            if (premax[n] >= x) cout << search(x) - 1 << \" \";\r\n            else if (pre <= 0) cout << -1 << \" \";\r\n            else {\r\n                int f = (x - premax[n]) / pre + ((x - premax[n]) % pre != 0);\r\n                int rem = x - f * pre;\r\n                cout << f*n + search(rem) - 1 << \" \";\r\n            }\r\n        }\r\n\r\n        cout << endl;\r\n    }\r\n\r\n    return 0;\r\n}"
}