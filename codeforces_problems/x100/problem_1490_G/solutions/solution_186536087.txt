{
    "id": 186536087,
    "contestId": 1490,
    "creationTimeSeconds": 1671862515,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "vijuchen"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#include<iostream>\r\n#include<fstream>\r\n#include<vector>\r\n#include<map>\r\n#include<algorithm>\r\n#include<unordered_map>\r\n#include<set>\r\n#include<numeric>\r\n#include<queue>\r\n#include<cmath>\r\n#include <stack>\r\n#include <string>\r\n#include <cassert>\r\n#include <unordered_set>\r\n#include <iomanip>\r\n#include <random>\r\n\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\n\r\nconst vector<int> dx = { 0, 1, 0, -1 };\r\n\r\nconst vector<int> dy = { 1, 0, -1, 0 };\r\n\r\nconst int MOD = 1e9 + 7;\r\n\r\nconst ll INF = 1e9 + 5; \r\n\r\nint find(int x, const set<ll>& vals, map<ll, int> pos)\r\n{\r\n    auto it = vals.lower_bound(x);\r\n    if (it == vals.end())\r\n    {\r\n        assert(false);\r\n    }\r\n    return pos[*it];\r\n}\r\n\r\nvoid solve(int tt)\r\n{\r\n    int n, m;\r\n    cin >> n >> m;\r\n    vector<int> a(n);\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        cin >> a[i];\r\n    }\r\n    ll sum = 0;\r\n    ll mxSum = -INF;\r\n    set<ll> vals;\r\n    map<ll, int> pos;\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        sum += (ll)a[i];\r\n        if (sum > 0 && sum > mxSum)\r\n        {\r\n            pos[sum] = i;\r\n            vals.insert(sum);\r\n        }\r\n        mxSum = max(mxSum, sum);\r\n    }\r\n\r\n    while (m--)\r\n    {\r\n        int x;\r\n        cin >> x;\r\n        if (mxSum <= 0)\r\n        {\r\n            cout << -1 << \" \";\r\n            continue;\r\n        }\r\n        if (sum <= 0)\r\n        {\r\n            if (x <= mxSum)\r\n            {\r\n                cout << find(x, vals,pos) << \" \";\r\n            }\r\n            else\r\n            {\r\n                cout << -1 << \" \";\r\n            }\r\n            continue;\r\n        }\r\n        if (x <= mxSum)\r\n        {\r\n            cout << find(x, vals, pos) << \" \";\r\n            continue;\r\n        }\r\n        int ans = (x / sum) * n - 1;\r\n        x = x % sum;\r\n        if (x > 0)\r\n        {\r\n            int extra = 1 + find(x, vals, pos);\r\n            ans += extra;\r\n        }\r\n        cout << ans << \" \";\r\n    }\r\n    cout << \"\\n\";\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false), cin.tie(nullptr);\r\n    int T = 1;\r\n    cin >> T;\r\n    for (int i = 1; i <= T; i++)\r\n    {     \r\n        solve(i);\r\n    }\r\n}\r\n"
}