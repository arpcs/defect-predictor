{
    "id": 199753310,
    "contestId": 1490,
    "creationTimeSeconds": 1680121318,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "cp_cp_cp"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 12697600,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nvoid printvec(vector<long long int>(&v))\r\n{\r\n    for (auto it : v)\r\n    {\r\n        cout << it << \" \";\r\n    }\r\n    cout << endl;\r\n}\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n\r\n    int t;\r\n    cin >> t;\r\n    while (t--)\r\n    {\r\n        int n, m;\r\n        cin >> n >> m;\r\n        vector<long long> arr(n, 0), val(n, 0), pre(n, 0);\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            cin >> arr[i];\r\n        }\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            cin >> val[i];\r\n        }\r\n        pre[0] = arr[0];\r\n        long long int mx = pre[0];\r\n        for (int i = 1; i < n; i++)\r\n        {\r\n            pre[i] = pre[i - 1] + arr[i];\r\n            mx = max(mx, pre[i]);\r\n        }\r\n        int idx = -1;\r\n        long long int tp = LLONG_MIN;\r\n        map<long long int, int> mp;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            if (pre[i] > tp)\r\n            {\r\n                mp[pre[i] - mx] = i;\r\n                tp = pre[i];\r\n            }\r\n            if (mx == pre[i])\r\n            {\r\n                idx = i;\r\n                break;\r\n            }\r\n        }\r\n        // printvec(arr);\r\n        // printvec(pre);\r\n        // for (auto it : mp)\r\n        // {\r\n        //     cout << it.first << \" \" << it.second << endl;\r\n        // }\r\n        vector<long long int> res;\r\n        for (int i = 0; i < m; i++)\r\n        {\r\n            if (pre[n - 1] <= 0)\r\n            {\r\n                if (val[i] > mx)\r\n                {\r\n                    res.push_back(-1);\r\n                }\r\n                else\r\n                {\r\n                    auto it = *mp.lower_bound(val[i] - mx);\r\n                    res.push_back(it.second);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if (val[i] <= mx)\r\n                {\r\n                    auto it = *mp.lower_bound(val[i] - mx);\r\n                    res.push_back(it.second);\r\n                }\r\n                else\r\n                {\r\n                    long long int tp = (val[i] - mx) / pre[n - 1];\r\n                    if ((val[i] - mx) % pre[n - 1] != 0)\r\n                    {\r\n                        tp++;\r\n                    }\r\n                    auto it = *mp.lower_bound(val[i] - (mx + tp * pre[n - 1]));\r\n                    res.push_back((tp)*n + (it.second));\r\n                }\r\n            }\r\n        }\r\n        printvec(res);\r\n    }\r\n}\r\n"
}