{
    "id": 221450212,
    "contestId": 1490,
    "creationTimeSeconds": 1693574423,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "ColdBoy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "/*\r\n * Author : Nguyen Van Mui\r\n * Created : 18:10:16, 01/09/2023\r\n */\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ull unsigned long long\r\n#define ll long long\r\n#define foru(i, a, b) for (int i = a; i <= b; ++i)\r\n#define ford(i, b, a) for (int i = b; i >= a; --i)\r\n#define endl '\\n'\r\n#define all(x) x.begin(), x.end()\r\n#define rall(x) x.rbegin(), x.rend()\r\n#define bit(x, k) ((x >> k) & 1ll)\r\n#define on(x, k) (x | (1ll << k))\r\n#define off(x, k) (x & (~(1ll << k)))\r\n#define ms(x, val) memset(x, val, sizeof(x))\r\nconst ll MOD = 1e9 + 7;\r\nconst ll BASE = 31;\r\nconst ll MAXN = 2e5 + 5;\r\n\r\nvoid solve()\r\n{\r\n    ll n, m;\r\n    cin >> n >> m;\r\n    vector<ll> a(n);\r\n    for (auto &&i : a)\r\n    {\r\n        cin >> i;\r\n    }\r\n    ll s = accumulate(all(a), 0ll);\r\n    vector<pair<ll, ll>> f(n);\r\n    f.front() = {a.front(), 0};\r\n    for (int i = 1; i < n; i++)\r\n    {\r\n        f[i].first = f[i - 1].first + a[i];\r\n        f[i].second = i;\r\n    }\r\n    sort(all(f), [](pair<ll, ll> x, pair<ll, ll> y)\r\n         {\r\n        if(x.first!=y.first)return x.first<y.first;\r\n        else return x.second<y.second; });\r\n    vector<ll> save1(n), save2(n);\r\n    for (int i = 0; i < n; i++)\r\n        save1[i] = f[i].first, save2[i] = f[i].second;\r\n    foru(i, 1, m)\r\n    {\r\n        ll x;\r\n        cin >> x;\r\n        // (Time / n) * s + f[idx] >= x\r\n        if (save1.back() < x && s <= 0)\r\n            cout << -1 << ' ';\r\n        else\r\n        {\r\n            if (save1.back() < x)\r\n            {\r\n                ll minTime = (x - save1.back() + s - 1) / s;\r\n                minTime *= n;\r\n                cout << minTime + save2[lower_bound(all(save1), x - minTime / n * s) - save1.begin()] << ' ';\r\n            }\r\n            else\r\n            {\r\n                ll minTime = 0;\r\n                cout << minTime + save2[lower_bound(all(save1), x) - save1.begin()] << ' ';\r\n            }\r\n        }\r\n    }\r\n    cout << endl;\r\n}\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    int t = 1;\r\n    cin >> t;\r\n    foru(i, 1, t)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}