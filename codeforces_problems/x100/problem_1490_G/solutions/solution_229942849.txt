{
    "id": 229942849,
    "contestId": 1490,
    "creationTimeSeconds": 1698367648,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "900102bj"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 4812800,
    "source": "// LUOGU_RID: 131794160\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nint T;\r\nint n,m;\r\nint x;\r\nconst int maxn=2e5+10;\r\nint a[maxn],sum[maxn],mx[maxn];\r\nbool check(int mid){\r\n    if(mx[n]+sum[n]*mid>=x){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nsigned main(){\r\n    scanf(\"%lld\",&T);\r\n    while(T--){\r\n        scanf(\"%lld%lld\",&n,&m);\r\n        int tot=0;\r\n        sum[0]=0;\r\n        mx[0]=-1e9;\r\n        for(int i=1;i<=n;i++){\r\n            scanf(\"%lld\",&a[i]);\r\n            sum[i]=sum[i-1]+a[i];\r\n            mx[i]=max(mx[i-1],sum[i]);\r\n        }\r\n        while(m--){\r\n            scanf(\"%lld\",&x);\r\n            if(mx[n]<x&&sum[n]<=0){\r\n                printf(\"-1 \");\r\n                continue;\r\n            }\r\n            if(mx[n]>=x){\r\n                printf(\"%lld \",(long long)(lower_bound(mx+1,mx+n+1,x)-mx-1));\r\n                continue;\r\n            }\r\n            int l=0,r=1e9;\r\n            while(l<r){\r\n                int mid=(l+r)>>1;\r\n                if(check(mid)){\r\n                    r=mid;\r\n                }\r\n                else{\r\n                    l=mid+1;\r\n                }\r\n            }\r\n            printf(\"%lld \",(long long)(l*n+lower_bound(mx+1,mx+n+1,x-sum[n]*l)-mx-1));\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"
}