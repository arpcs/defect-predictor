{
    "id": 216674951,
    "contestId": 1490,
    "creationTimeSeconds": 1690876075,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "vbagaria93"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "// shree\r\n//  \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2584\u2591\u2591\u2591\u2591\u2591\u2591\r\n//  \u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2584\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2584\u2591\u2591\u2588\u2591\u2591\u2591\u2591\u2591\r\n//  \u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2591\u2588\u2591\u2580\u2591\u2591\u2591\u2591\u2591\u2580\u2591\u2591\u2580\u2591\u2591\u2591\u2591\u2588\u2591\u2588\u2591\u2591\u2591\u2591\u2591\r\n//  \u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2591\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2580\u2580\u2584\u2591\u2580\u2591\u2588\u2591\u2588\u2584\u2580\u2580\u2584\u2591\r\n//  \u2588\u2580\u2580\u2588\u2584\u2591\u2588\u2591\u2588\u2591\u2591\u2580\u2591\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2591\u2580\u2584\u2584\u2588\u2584\u2580\u2591\u2591\u2591\u2588\u2591\r\n//  \u2580\u2584\u2584\u2591\u2580\u2588\u2588\u2591\u2588\u2584\u2591\u2580\u2591\u2591\u2591\u2584\u2584\u2580\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2584\r\n//  \u2591\u2591\u2580\u2588\u2584\u2584\u2588\u2591\u2588\u2591\u2591\u2591\u2591\u2584\u2591\u2591\u2588\u2591\u2591\u2591\u2584\u2588\u2591\u2591\u2591\u2584\u2591\u2584\u2588\u2591\u2591\u2588\r\n//  \u2591\u2591\u2591\u2591\u2591\u2580\u2588\u2591\u2580\u2584\u2580\u2591\u2591\u2591\u2591\u2591\u2588\u2591\u2588\u2588\u2591\u2584\u2591\u2591\u2584\u2591\u2591\u2584\u2591\u2588\u2588\u2588\r\n//  \u2591\u2591\u2591\u2591\u2591\u2584\u2588\u2584\u2591\u2591\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2584\u2591\u2591\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2591\u2584\u2580\u2591\r\n//  \u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2584\u2588\u2580\u2588\u2580\u2580\u2588\u2580\u2580\u2580\u2580\u2580\u2580\u2588\u2580\u2580\u2588\u2580\u2588\u2580\u2580\u2588\u2591\u2591\u2591\r\n//  \u2591\u2591\u2591\u2591\u2580\u2580\u2580\u2580\u2591\u2591\u2580\u2580\u2580\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2580\u2580\u2591\u2591\u2580\u2580\u2591\u2591\u2591\u2591\r\n/*#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>*/\r\n#include <iostream>\r\n#include <stack>\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <climits>\r\n#include <fstream>\r\n#include <cassert>\r\n#include <vector>\r\n#include <map>\r\n#include <set>\r\n#include <queue>\r\n#include <unordered_map>\r\n#include <string>\r\n#include <cmath>\r\n#include <numeric>\r\n#include <iterator>\r\n#include <cstring>\r\n#include <iomanip>\r\n#define int long long\r\nusing namespace std;\r\n#define f(i, a, b) for (int i = a; i < b; i++)\r\n#define mp make_pair\r\n#define uniq(v) (v).erase(unique(all(v)), (v).end())\r\n#define ff first\r\n#define ss second\r\n#define rf(i, a, b) for (int i = a; i >= b; i--)\r\n#define sz(a) (int)(a.size())\r\n#define ii pair<int, int>\r\n#define pf push_front\r\n#define ppf pop_front\r\n#define setbits(X) __builtin_popcountll(X)\r\n#define fix(X) fixed << setprecision(X)\r\n#define mem0(X) memset((X), 0, sizeof((X)))\r\n#define mem1(X) memset((X), -1, sizeof((X)))\r\n#define ppb pop_back\r\n#define vg vector<ii>\r\n#define gi greater<int>\r\n#define ggi greater<ii>\r\n#define pb push_back\r\n#define mi map<int, int>\r\n#define pq priority_queue\r\n#define all(s) s.begin(), s.end()\r\n#define vi vector<int>\r\n#define sp(a) setprecision(a)\r\n#define rz resize\r\n#define ld long double\r\n#define inf (ll)1e18\r\n#define ub upper_bound\r\n#define lb lower_bound\r\n#define str string\r\n#define each(a, x) for (auto &a : x)\r\nint e = 1e9 + 7;\r\nint32_t main()\r\n{\r\n\tios_base::sync_with_stdio(0);\r\n\tcin.tie(0);\r\n\tcout.tie(0);\r\n\tint _t;\r\n\tcin >> _t;\r\n\tf(ie, 0, _t)\r\n\t{\r\n\t\tint n, m;\r\n\t\tcin >> n >> m;\r\n\t\tvi a(n);\r\n\t\teach(i, a) cin >> i;\r\n\t\tvi b{a};\r\n\t\tf(i, 1, n) b[i] += b[i - 1];\r\n\t\tint ma = *max_element(all(b));\r\n\t\tvi c{b};\r\n\t\tf(i, 1, n) c[i] = max(c[i - 1], b[i]);\r\n\t\tf(i, 0, m)\r\n\t\t{\r\n\t\t\tint x;\r\n\t\t\tcin >> x;\r\n\t\t\tif (c[n - 1] >= x)\r\n\t\t\t\tcout << lb(all(c), x) - c.begin() << \" \";\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (b[n - 1] <= 0)\r\n\t\t\t\t\tcout << \"-1 \";\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tint diff = x - ma;\r\n\t\t\t\t\tint moves = (diff / b[n - 1] + diff % b[n - 1] != 0);\r\n\t\t\t\t\tx -= b[n - 1] * moves;\r\n\t\t\t\t\t(moves *= n) -= 1;\r\n\t\t\t\t\tmoves += lb(all(c), x) - c.begin() + 1;\r\n\t\t\t\t\tcout << moves << \" \";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcout<<\"\\n\";\r\n\t\t}\r\n\t}\r\n}"
}