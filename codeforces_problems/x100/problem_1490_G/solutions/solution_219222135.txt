{
    "id": 219222135,
    "contestId": 1490,
    "creationTimeSeconds": 1692266920,
    "relativeTimeSeconds": 4360,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "brokie"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1692262560
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// #pragma GCC optimize(\"Ofast, unroll-loops, no-stack-protector, fast-math, O3, omit-frame-pointer, inline, avx, avx2, fma\")\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define SZ(x) ((int)(x).size()) // size of a container\r\n#define F(i, n) for (int i = 0; i < (int)(n); i++) \r\n#define ALL(a, x) memset(a, x, sizeof(a)) // set elements of array to some value\r\n#define max(a, b) ((a) > (b) ? (a) : (b))\r\n#define min(a, b) ((a) < (b) ? (a) : (b))\r\n#define REMAX(a, b) (a) = max((a), (b)) // set a to the maximum of a and b\r\n#define REMIN(a, b) (a) = min((a), (b));\r\n#define FOREACH(i, t) for (typeof(t.begin()) i = t.begin(); i != t.end(); i++) // traverse an STL data structure\r\n#define all(c) (c).begin(), (c).end() // handy for function like \"sort()\"\r\n#define contain(c, x) ((c).find(x) != (c).end())\r\n#define present(c, x) (count(all(c), x)>0)\r\ntypedef long long ll; // data types used often, but you don't want to type them time by time\r\ntypedef unsigned long long ull;\r\nconst long double PI = 3.1415926535897932384626;\r\nconst int mod = 1000000007;\r\n#define dbg(var) cerr << #var << \" = \" << (var) << endl; // for debug\r\n#define pb push_back // for vectors\r\n#define SORT(v) sort(all(v))\r\n#define REVERSE(v) reverse(all(v))\r\n#define onecount __builtin_popcount // count number of 1's in a number\r\n#define highbit(x) (63 - __builtin_clzll(x)) // get the index of the highest bit set\r\n#define lowbit(x) __builtin_ctzll(x) // get the index of the lowest bit set\r\n#define bitcount(x) (__builtin_popcount(x) + __builtin_popcount(x >> 32)) // count number of 1's in a number in O(1) time\r\n#define mid(l, r) ((l) + (((r) - (l)) >> 1))\r\ntypedef int elem_t;\r\ntemplate <typename T, typename TT>\r\nostream &operator<<(ostream &s, pair<T, TT> t) { return s << \"(\" << t.first << \",\" << t.second << \")\"; }\r\ntemplate <typename T>\r\nostream &operator<<(ostream &s, vector<T> t){ F(i, SZ(t)) s << t[i] << \" \";return s;}\r\ntemplate <typename T>\r\nistream &operator>>(istream &in, vector<T>&e){for(auto&x : e) cin >> x; return in;}\r\ntemplate <typename T, typename TT>\r\nistream &operator>>(istream &in, vector<pair<T, TT>>&e){for(auto&x : e) cin >> x.first >> x.second; return in;} \r\nll gcd(ll a, ll b) { return b ? gcd(b, a % b) : a; }\r\nll lcm(ll a, ll b) { return a / gcd(a, b) * b; }\r\nll largest_multiple_smaller_than_x(ll a, ll k){ return (k / a) * a;}\r\nll smallest_multiple_greater_than_x(ll a, ll k){ return ((k + a - 1) / a) * a;}\r\nvector<ll>sieve(ll num){vector<ll>prime;vector<bool>isPrime(num + 1, true);isPrime[0] = isPrime[1] = false;for(int i = 2; i <= num; i++){if(isPrime[i]){prime.push_back(i);for(int j = i * 2; j <= num; j += i) isPrime[j] = false;}}return prime;}\r\nvector<ll>primeFactors(ll num){vector<ll>prime;for(ll i = 2; i * i <= num; i++){while(num % i == 0){prime.push_back(i);num /= i;}}{if(num > 1) prime.push_back(num);}return prime;}\r\nbool is_prime(ll num){if(num < 2) return false;for(ll i = 2; i * i <= num; i++){if(num % i == 0) return false;}return true;}\r\nvector<int>binary(ll num){vector<int>binary;while(num){binary.push_back(num % 2); num >>= 1;} reverse(all(binary)); return binary;}\r\nint decimal(vector<ll>binary){ int num = 0; for(int i = 0; i < binary.size(); i++){num += binary[i] * (1 << i);}return num;}\r\nll factorial(ll num, ll mod = 1e9+7){ ll fact = 1; for(ll i = 1; i <= num; i++) fact = (fact * i) % mod; return fact;}\r\nll power(ll x, ll y, ll mod = 1e9+7){ll res = 1; x %= mod; while(y > 0){if(y & 1) res = (res * x) % mod; y >>= 1; x = (x * x) % mod;} return res;}\r\nvector<ll> divisors(ll n){ vector<ll> div; for(ll i = 1; i * i <= n; i++){ if(n % i == 0){ div.push_back(i); if(i * i != n) div.push_back(n / i); } } return div; }\r\nll mod_inverse(ll num, ll mod = 1e9+7){ return power(num, mod - 2, mod);}\r\nll NchooseK(ll n, ll k, ll mod = 1e9+1){ll res = 1; k = min(k, n - k); for(ll i = 0; i < k; i++){ res = (res * (n - i)) % mod; res = (res * mod_inverse(i + 1, mod)) % mod;} return res;}\r\n\r\nvoid solve(){\r\n    int n, q; cin >> n >> q;\r\n    vector<ll> a(n); cin >> a;\r\n    ll sum = accumulate(all(a), 0LL);\r\n    bool pos_sum = sum > 0;\r\n    multiset<pair<ll, int>> s;\r\n    ll sumi = 0;\r\n    for(int i = 0; i < n; i++){\r\n        sumi += a[i];\r\n        s.insert({sumi, i});\r\n    }\r\n    auto query = [&](ll elem){\r\n        if(elem > (*s.rbegin()).first) return -1;\r\n        auto idx = s.lower_bound({elem, 0});\r\n        return (idx->first >= elem ? idx->second:-1);\r\n    };\r\n    while(q--){\r\n        ll x; cin >> x;\r\n        if(!pos_sum){\r\n            cout << query(x) << \" \";\r\n        }\r\n        else{\r\n            ll turns = x / *s.rbegin().second;\r\n            x -= turns * (*s.rbegin()).second;\r\n            if(x == 0)\r\n                cout << max(0, turns * n - 1) << \" \";\r\n            else\r\n                cout << turns * n + query(x) << \" \";\r\n        }\r\n    }\r\n    cout << \"\\n\";\r\n}\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n    int TT = 1;  cin >> TT; while(TT--) solve();\r\n    return 0;\r\n}"
}