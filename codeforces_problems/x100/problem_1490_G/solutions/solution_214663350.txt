{
    "id": 214663350,
    "contestId": 1490,
    "creationTimeSeconds": 1689880954,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "dinosparton_013"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "Java 17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 716800,
    "source": "\r\n\r\nimport java.io.*;\r\nimport java.math.*;\r\nimport java.util.*;\r\n\r\npublic class test {\r\n\r\n\tstatic class Pair {\r\n\t\tlong x;\r\n\t\tint y;\r\n\r\n\t\tPair(long x, int y) {\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tstatic class Compare {\r\n\r\n\t\tvoid compare(Pair arr[], int n) {\r\n\t\t\t// Comparator to sort the pair according to second element\r\n\t\t\tArrays.sort(arr, new Comparator<Pair>() {\r\n\t\t\t\t@Override\r\n\t\t\t\tpublic int compare(Pair p1, Pair p2) {\r\n\t\t\t\t\tif (p1.x != p2.x) {\r\n\t\t\t\t\t\treturn (int) (p1.x - p2.x);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn (int) (p1.y - p2.y);\r\n\t\t\t\t\t}\r\n//\t\t            \treturn Double.compare(a[0], b[0]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n//\t\t        for (int i = 0; i < n; i++) { \r\n//\t\t            System.out.print(arr[i].x + \" \" + arr[i].y + \" \"); \r\n//\t\t        } \r\n//\t\t        System.out.println(); \r\n\t\t}\r\n\t}\r\n\r\n\tstatic class Scanner {\r\n\t\tBufferedReader br;\r\n\t\tStringTokenizer st;\r\n\r\n\t\tpublic Scanner() {\r\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\r\n\t\t}\r\n\r\n\t\tString next() {\r\n\t\t\twhile (st == null || !st.hasMoreElements()) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\r\n\t\t\t\t} catch (IOException e) {\r\n\t\t\t\t\te.printStackTrace();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn st.nextToken();\r\n\t\t}\r\n\r\n\t\tint nextInt() {\r\n\t\t\treturn Integer.parseInt(next());\r\n\t\t}\r\n\r\n\t\tlong nextLong() {\r\n\t\t\treturn Long.parseLong(next());\r\n\t\t}\r\n\r\n\t\tdouble nextDouble() {\r\n\t\t\treturn Double.parseDouble(next());\r\n\t\t}\r\n\r\n\t\tString nextLine() {\r\n\t\t\tString str = \"\";\r\n\t\t\ttry {\r\n\t\t\t\tstr = br.readLine();\r\n\t\t\t} catch (IOException e) {\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t}\r\n\t\t\treturn str;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic int binarySearch(Pair p[], long x) {\r\n\r\n\t\tif (x == 0) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tint l = 0;\r\n\t\tint r = p.length - 1;\r\n\r\n\t\tint ans = -1;\r\n\r\n\t\twhile (l <= r) {\r\n\r\n\t\t\tint mid = l + (r - l) / 2;\r\n\r\n\t\t\tif (p[mid].x >= x) {\r\n\t\t\t\tans = mid;\r\n\t\t\t\tr = mid - 1;\r\n\t\t\t} else {\r\n\t\t\t\tl = mid + 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ans == -1 ? -1 : p[ans].y;\r\n\t}\r\n\r\n\tpublic static void main(String args[]) throws Exception {\r\n\r\n\t\tScanner sc = new Scanner();\r\n\t\tStringBuilder res = new StringBuilder();\r\n\r\n\t\tint tc = sc.nextInt();\r\n\r\n\t\twhile (tc-- > 0) {\r\n\r\n\t\t\tint n = sc.nextInt();\r\n\t\t\tint m = sc.nextInt();\r\n\r\n\t\t\tlong a[] = new long[n];\r\n\t\t\tlong x[] = new long[m];\r\n\r\n\t\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\t\ta[i] = sc.nextLong();\r\n\t\t\t}\r\n\r\n\t\t\tfor (int i = 0; i < m; i++) {\r\n\t\t\t\tx[i] = sc.nextLong();\r\n\t\t\t}\r\n\r\n\t\t\tPair p[] = new Pair[n];\r\n\t\t\tlong sum = 0;\r\n\r\n\t\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\t\tsum += a[i];\r\n\t\t\t\tp[i] = new Pair(sum, i + 1);\r\n\t\t\t}\r\n\r\n\t\t\tArrays.sort(p, new Comparator<Pair>() {\r\n\r\n\t\t\t\tpublic int compare(Pair a, Pair b) {\r\n\t\t\t\t\tif (a.x != b.x) {\r\n\t\t\t\t\t\treturn (int) (a.x - b.x);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn b.y - a.y;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tint min = Integer.MAX_VALUE;\r\n\r\n\t\t\tfor (int i = n - 1; i >= 0; i--) {\r\n\t\t\t\tmin = Math.min(min, p[i].y);\r\n\t\t\t\tp[i].y = min;\r\n\t\t\t}\r\n\r\n\t\t\tfor(int i= 0 ;i<m;i++) {\r\n\t\t\t\t\r\n\t\t\t\tlong ans = binarySearch(p,x[i]);\r\n\t\t\t\t\r\n\t\t\t\tif(ans != -1) {\r\n\t\t\t\t\tres.append(ans - 1+\" \");\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(sum > 0 && x[i] > 0 && x[i] > sum) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t ans = (x[i] / sum )*n;\r\n\t\t\t\t\t \r\n\t\t\t\t\t int temp = binarySearch(p,x[i] % sum);\r\n\t\t\t\t\t \r\n\t\t\t\t\t if(temp == -1) {\r\n\t\t\t\t\t\t res.append(-1+\" \");\r\n\t\t\t\t\t }\r\n\t\t\t\t\t else {\r\n\t\t\t\t\t\t res.append(ans+temp - 1+\" \");\r\n\t\t\t\t\t }\r\n\t\t\t\t}\r\n\t\t\t\telse if(sum < 0 && x[i] < 0 && x[i] > sum) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tans = (x[i] / sum )*n;\r\n\t\t\t\t\t \r\n\t\t\t\t\t int temp = binarySearch(p,x[i] % sum);\r\n\t\t\t\t\t \r\n\t\t\t\t\t if(temp == -1) {\r\n\t\t\t\t\t\t res.append(-1+\" \");\r\n\t\t\t\t\t }\r\n\t\t\t\t\t else {\r\n\t\t\t\t\t\t res.append(ans+temp-1+\" \");\r\n\t\t\t\t\t }\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tres.append(-1+\" \");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tres.append(\"\\n\");\r\n\t\t}\r\n\r\n\t\tSystem.out.println(res);\r\n\t}\r\n}\r\n"
}