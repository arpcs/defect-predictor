{
    "id": 193587107,
    "contestId": 1490,
    "creationTimeSeconds": 1676372355,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "huzyyyyy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 6451200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n\r\nint a[200005];\r\nint b[200005];\r\nint sum[200005];\r\nint max_sum[200005];\r\n\r\n\r\nvoid solve()\r\n{\r\n    int n,m;\r\n    cin>>n>>m;\r\n    for(int i=0;i<n;i++) cin>>a[i];\r\n    for(int i=0;i<m;i++) cin>>b[i];\r\n    sum[0]=a[0];\r\n    max_sum[0]=a[0];\r\n    for(int i=1;i<n;i++)\r\n    {\r\n        sum[i]=sum[i-1]+a[i];\r\n        max_sum[i]=max(max_sum[i-1],sum[i]);\r\n    }\r\n    for(int i=0;i<m;i++)\r\n    {\r\n\r\n        if( b[i]<max_sum[n-1] )\r\n        {\r\n            cout<< lower_bound(max_sum,max_sum+n,b[i])-max_sum<<\" \";\r\n        }\r\n        else\r\n        {\r\n            if(sum[n-1]<=0)\r\n            {\r\n                cout<<-1<<\" \";\r\n            }\r\n            else\r\n            {\r\n                int t=(b[i]-1)/sum[n-1];\r\n                int val=(b[i]-1)%sum[n-1]+1;\r\n                cout<< lower_bound(max_sum,max_sum+n,val)-max_sum+t*n<<\" \";\r\n            }\r\n        }\r\n    }\r\n    cout<<\"\\n\";\r\n}\r\n\r\nsigned main()\r\n{\r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n/*\r\n\r\n*/\r\n"
}