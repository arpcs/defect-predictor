{
    "id": 176487345,
    "contestId": 1490,
    "creationTimeSeconds": 1665923065,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> PII;\ntypedef pair<LL,LL> PLL;\nconst int INF = 0x3f3f3f3f, N = 2e5 + 10;\nonline int lc(int u) {return u << 1;}\nonline int rc(int u) {return u << 1 | 1;}\nonline int lowbit(int x) {return x & (-x);}\nLL max_s[N], s[N];\nonline void solve() {\n    int n, m; cin >> n >> m;\n    LL maxn = -1e9;\n    max_s[0] = -1e9;\n    for (int i = 1; i <= n; i ++ ) {\n        int x; cin >> x;\n        s[i] = s[i - 1] + x;\n        maxn = max(maxn, s[i]);\n        max_s[i] = max(max_s[i - 1], s[i]);\n    }\n    LL T = s[n];\n    while (m -- ) {\n        int x; cin >> x;\n        if (maxn < x && T <= 0) cout << -1 << ' ';\n        else {\n            if (maxn >= x) {\n                int l = 1, r = n;\n                while (l < r) {\n                    int mid = (l + r) >> 1;\n                    if (max_s[mid] >= x) r = mid;\n                    else l = mid + 1;\n                }\n                cout << l - 1 << ' ';\n            } else {\n                LL round = (x - maxn + T - 1) / T;\n                int l = 1, r = n;\n                while (l < r) {\n                    int mid = (l + r) >> 1;\n                    if (round * T + max_s[mid] >= x) r = mid;\n                    else l = mid + 1;\n                }\n                cout << round * n + l - 1 << ' ';\n            }\n        }\n    }\n    cout << '\\n';\n}\nint main() {\n    ios::sync_with_stdio(false), cin.tie(nullptr);\n    int e; cin >> e;\n    while (e -- )\n        solve();\n    return 0;\n}\n\t\t\t\t\t\t\t\t \t      \t \t\t\t \t\t\t \t\t"
}