{
    "id": 226712288,
    "contestId": 1490,
    "creationTimeSeconds": 1696497568,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "atharv_tiwari"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 6451200,
    "source": "#include <bits/stdc++.h>\r\n#define endl \"\\n\" \r\nusing namespace std;\r\n\r\n#pragma GCC optimize(\"O3,unroll-loops\")\r\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n\r\n    // #ifndef ONLINE_JUDGE\r\n    //     freopen(\"Input.txt\", \"r\", stdin);\r\n    //     freopen(\"Output.txt\", \"w\", stdout);\r\n    //     freopen(\"Error.txt\", \"w\", stderr);\r\n    // #endif\r\n\r\n    // t, v are for test case inputs\r\n    // s, u, w are for strings\r\n\r\n    long long a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, t, v, x, y, z;\r\n    long long num, val, check, count, sum, maxm, minm, mid, ind, ans, fre, mfre, len;\r\n    long long c0, c1, x1, y1, x2, y2;\r\n\r\n    // long long i, j, k, m, n;\r\n    string s, u, w;\r\n    cin >> t;\r\n    v = t;\r\n    // v = 1;\r\n\r\n    while (v > 0)\r\n    {\r\n        v --;\r\n        // cin >> n;\r\n        cin >> n >> m;\r\n\r\n        // cin >> s;\r\n        // n = s.length ();\r\n\r\n        // cout << \"CASE\" << \" \" << \"#\" << t - v << \":\" << \" \"\r\n\r\n        long long arr[n];\r\n        for (i = 0; i < n; i++)\r\n        {\r\n            cin >> arr[i];\r\n        }\r\n\r\n        long long rfr[m];\r\n        for (i = 0; i < m; i++)\r\n        {\r\n            cin >> rfr[i];\r\n        }\r\n\r\n        long long parr[n];\r\n        parr[0] = arr[0];\r\n\r\n        sum = arr[0], maxm = arr[0];\r\n        for (i = 1; i < n; i++)\r\n        {\r\n            parr[i] = parr[i - 1] + arr[i];\r\n            sum += arr[i], maxm = max (maxm, sum);\r\n        }\r\n\r\n        long long marr[n];\r\n        marr[0] = arr[0];\r\n\r\n        for (i = 1; i < n; i++)\r\n        {\r\n            marr[i] = max (marr[i - 1], parr[i]);\r\n        }\r\n\r\n        x = maxm;\r\n        for (i = 0; i < m; i++)\r\n        {\r\n            y = x;\r\n            if (!(arr[0] < rfr[i]))\r\n            {\r\n                cout << 0 << \" \";\r\n                continue;\r\n            }\r\n            \r\n            if (!(x < rfr[i]))\r\n            {\r\n                minm = 0, maxm = (n - 1);\r\n                while (minm < maxm)\r\n                {\r\n                    mid = (minm + maxm);\r\n                    mid /= 2;\r\n\r\n                    if (marr[mid] < rfr[i])\r\n                    {\r\n                        minm = (mid + 1);\r\n                    }\r\n                    else \r\n                    {\r\n                        maxm = mid;\r\n                    }\r\n                }\r\n\r\n                cout << minm << \" \";\r\n            }\r\n            else \r\n            {\r\n                if (!(sum > 0))\r\n                {\r\n                    cout << -1 << \" \";\r\n                    continue;\r\n                }\r\n                \r\n                num = (rfr[i] - x);\r\n                ans = (num / sum);\r\n\r\n                if (num % sum != 0)\r\n                {\r\n                    ans ++;\r\n                    x -= (sum - (num % sum));\r\n                }\r\n\r\n                minm = 0, maxm = (n - 1);\r\n                num = x;\r\n\r\n                while (minm < maxm)\r\n                {\r\n                    mid = (minm + maxm);\r\n                    mid /= 2;\r\n\r\n                    if (marr[mid] < num)\r\n                    {\r\n                        minm = (mid + 1);\r\n                    }\r\n                    else \r\n                    {\r\n                        maxm = mid;\r\n                    }\r\n                }\r\n\r\n                cout << ((ans * n) + minm) << \" \";\r\n            }\r\n\r\n            x = y;\r\n        }\r\n\r\n        cout << endl;\r\n    }\r\n\r\n    // #ifndef ONLINE_JUDGE\r\n    // cerr << \"time taken : \" << (float)clock() / CLOCKS_PER_SEC << \" secs\" << \" \" << endl;\r\n    // #endif\r\n\r\n    return 0;\r\n}"
}