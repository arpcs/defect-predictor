{
    "id": 232068752,
    "contestId": 1490,
    "creationTimeSeconds": 1699533561,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "white_boat"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 10649600,
    "source": "// LUOGU_RID: 134200346\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef pair<ll, ll> PII;\r\nconst int N = 1e5 + 5, M = 1e5 + 5, INF = 0x3f3f3f3f;\r\n\r\nvoid solve() {\r\n    int n, m, z;\r\n    cin >> n >> m;\r\n    vector<ll> a(n), x(m), sum(n), ans(m);\r\n    for (int i = 0; i < n; i++) cin >> a[i];\r\n    for (int i = 0; i < m; i++) cin >> x[i];\r\n    sum[0] = a[0];\r\n    for (int i = 1; i < n; i++) sum[i] = sum[i - 1] + a[i];\r\n    vector<PII> dz;\r\n    ll ax = 0;\r\n    for (int i = 0; i < n; i++) \r\n        if (sum[i] > ax) {\r\n            dz.push_back({sum[i], i});\r\n            ax = max(ax, sum[i]);\r\n        }\r\n            \r\n\r\n    z = dz.size();\r\n    if (sum[n - 1] <= 0) {\r\n        for (int i = 0; i < m; i++) \r\n        {\r\n            PII pr = {x[i], 0};\r\n            if (ax < x[i]) \r\n                ans[i] = -1;\r\n            else \r\n                ans[i] = dz[lower_bound(dz.begin(), dz.end(), pr) - dz.begin()].second;\r\n        }\r\n    } else {\r\n        for (int i = 0; i < m; i++) {\r\n            PII pr = {x[i], 0};\r\n            if (x[i] <= ax) {\r\n                ans[i] = dz[lower_bound(dz.begin(), dz.end(), pr) - dz.begin()].second;\r\n            } else {\r\n                ll y = ((x[i] - ax) % sum[m - 1] == 0) ? ((x[i] - ax) / sum[m - 1]) : ((x[i] - ax) / sum[m - 1] + 1);\r\n                ans[i] += y * n;\r\n                pr = {x[i] - y * sum[n - 1], 0};\r\n                ans[i] += dz[lower_bound(dz.begin(), dz.end(), pr) - dz.begin()].second;\r\n            }\r\n        }\r\n    }\r\n    for (int i = 0; i < m; i++) cout << ans[i] << \" \";\r\n    cout << endl;\r\n}\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    int t = 1;\r\n    cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}