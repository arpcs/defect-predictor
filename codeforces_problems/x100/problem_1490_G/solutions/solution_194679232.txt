{
    "id": 194679232,
    "contestId": 1490,
    "creationTimeSeconds": 1677158977,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "monotone_space"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 3174400,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag,\r\n             tree_order_statistics_node_update>\r\n    indexed_set;\r\n#define iset indexed_set\r\n#define int long long\r\n#define pi (3.141592653589)\r\n#define mod 1000000007\r\n#define float double\r\n#define ff first\r\n#define ss second\r\n#define mk make_pair\r\n#define pb push_back\r\n#define rep(i, start, end) for (int i = start; i < end; i++)\r\n#define ld long double\r\n#define fast ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);\r\nint inf = 1000000000000000000;\r\nusing ii = pair<int, int>;\r\n\r\nvoid solve()\r\n{\r\n    int n, m;\r\n    cin >> n >> m;\r\n    int arr[n];\r\n    rep(i, 0, n)\r\n    {\r\n        cin >> arr[i];\r\n    }\r\n    int brr[n];\r\n    int maxc = -1e18;\r\n    rep(i, 0, n)\r\n    {\r\n        if (i)\r\n            arr[i] += arr[i - 1];\r\n    }\r\n    rep(i, 0, n)\r\n    {\r\n        maxc = max(maxc, arr[i]);\r\n        brr[i] = maxc;\r\n    }\r\n    rep(i, 0, m)\r\n    {\r\n        int a;\r\n        cin >> a;\r\n        if (arr[n - 1] <= 0 && a > brr[n - 1])\r\n        {\r\n            cout << \"-1 \";\r\n        }\r\n        else\r\n        {\r\n            int curr = 0;\r\n            int sum = a;\r\n            if (a > brr[n - 1])\r\n            {\r\n                int val = a - brr[n - 1];\r\n                curr = val / arr[n - 1];\r\n                int val1 = (curr * arr[n - 1]) + brr[n - 1];\r\n                if (val1 < a)\r\n                    curr++;\r\n                sum = curr * arr[n - 1];\r\n                sum = a - sum;\r\n                curr *= n;\r\n            }\r\n            int hi = n - 1, lo = 0, ans, mid;\r\n            while (lo <= hi)\r\n            {\r\n                mid = (hi + lo) / 2;\r\n                if (brr[mid] >= sum)\r\n                {\r\n                    ans = mid;\r\n                    hi = mid - 1;\r\n                }\r\n                else\r\n                {\r\n                    lo = mid + 1;\r\n                }\r\n            }\r\n            ans++;\r\n            curr += ans;\r\n            curr--;\r\n            cout << curr << \" \";\r\n        }\r\n    }\r\n    cout << \"\\n\";\r\n}\r\n\r\nsigned main()\r\n{\r\n    fast int t;\r\n    cin >> t;\r\n    while (t--)\r\n        solve();\r\n    return 0;\r\n}"
}