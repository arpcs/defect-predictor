{
    "id": 214693414,
    "contestId": 1490,
    "creationTimeSeconds": 1689912821,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "euyia"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define fast_read ios::sync_with_stdio(0), cin.tie(nullptr)\r\n#define endl '\\n'\r\n#define int long long\r\n#define ar array<int, 2>\r\n#define arr array<int, 3>\r\nint T, n, m, k, inf = 1e18, mod = 1e9 + 7;\r\nconst int N = 3e5 + 5;\r\n\r\nsigned main()\r\n{\r\n    fast_read;\r\n#ifdef DEBUG\r\n    freopen(\"../1.in\", \"r\", stdin);\r\n#endif\r\n    // \u3002\u3002\u8fd9\u4e2a\u3002\u3002\u53c8\u662f\u90a3\u4e2a\u9898\u578b\u3002\u3002\r\n    // \u5c31\u662f\u524d\u7f00\u548c\u3002\u3002=\u4e00\u4e2a\u6570\u3002\u3002\r\n    // \u5c31\u662f\u6c42\u8f6e\u6570\u3002\u3002\u53d6\u4f59\u561b \u3002\u3002\r\n    cin >> T;\r\n    while (T--)\r\n    {\r\n        cin >> n >> m;\r\n        int a[n + 1], b[n + 1];\r\n        for (int i = 1; i <= n; ++i)\r\n            cin >> a[i];\r\n\r\n        a[0] = 0, b[0] = -inf;\r\n        for (int i = 1; i <= n; ++i)\r\n        {\r\n            a[i] += a[i - 1];\r\n            b[i] = max(b[i - 1], a[i]); //\u8fd9\u4e2a\u5904\u7406\u524d\u7f00\u548c\u7684\u6700\u5927\u503c \u7528\u6765\u4e8c\u5206\u3002\u3002\u662f\u4e00\u4e2a\u65b0\u7684\u89c6\u89d2\u3002\r\n        }\r\n        while (m--)\r\n        {\r\n            int x;\r\n            cin >> x;\r\n            if (x > b[n] && a[n] <= 0) //\u8fd9\u91cc\u662f\u5468\u671f\u6240\u4ee5\u662fa[n]\u4e0d\u662fmx[n]\r\n                cout << -1 << \" \";\r\n            else\r\n            {\r\n                int y = 0;\r\n                if (x > b[n])\r\n                {\r\n                    y = x / b[n] * n; //\u5982\u679c\u5927\u4e8e\u4e00\u8f6e \u6211\u4eec\u5c31\u628a\u8f6e\u6570\u6c42\u51fa\u6765\u3002\r\n                    x %= b[n];\r\n                    if (x == 0)\r\n                        x += b[n], y -= n;\r\n                    //\u5c31\u662f\u5982\u679c\u5728\u6574\u4e2a\u5468\u671f\u91cc\u3002\u3002\u90a3\u4e48\u53ef\u80fd\u540e\u9762\u67090 0 0 \u90fd\u662f\u591a\u4f59\u7684\u3002\u3002\r\n                    // \u6bd4\u5982   1 2 3 0 0 0  \u8fd9\u6837\u7684\u3002\u3002\r\n                    // \u5b9e\u9645\u4e0a \u4e0d\u7528\u4e00\u4e2a\u5468\u671f\u3002\u3002\r\n                    // \u6240\u4ee5\u6211\u4eec\u5012\u9000\u4e00\u4e2a\u5468\u671f\u3002\u3002\u3002\r\n                }\r\n                int ans = lower_bound(b + 1, b + n + 1, x) - b - 1;\r\n                cout << ans + y << \" \";\r\n            }\r\n        }\r\n        cout << endl;\r\n    }\r\n};\r\n//\u573a\u666f: \u8fd9\u9898\u5b9e\u9645\u4e0a\u9898\u76ee\u610f\u601d \u6211\u4eec\u7406\u89e3\u9519\u4e86\u3002\u3002as soon as the sum is at least x\r\n// \u6240\u4ee5\u3002\u3002\u5b9e\u9645\u4e0a\u53ea\u9700\u8981>=x \u5c31\u53ef\u4ee5 \u4e0d\u4e00\u5b9a\u975e\u8981\u7b49\u4e8e\u3002\u3002\uff01\uff01\uff01\r\n// \u8fd9\u4e2a\u5f88\u91cd\u8981\u3002\u3002\r\n// \u7136\u540ex\u90fd\u662f\u6b63\u6570 \u3002\u3002\u3002\uff01\uff01\uff01\uff01\r\n// \u8fd9\u4e24\u4e2a\u6761\u4ef6 \u5b9e\u9645\u4e0a\u8fd9\u9898\u5c31\u53d8\u5f97\u975e\u5e38\u7b80\u5355\u3002\u3002\u3002\r\n// \u53ea\u9700\u8981\u7edf\u8ba1\u524d\u7f00\u548c \u7684\u524d\u7f00\u6700\u5927\u503c\u3002\u3002\u5c31\u53ef\u4ee5\u4e8c\u5206\u3002\u3002\u00d2\r\n// \u53ea\u9700\u8981\u7edf\u8ba1\u524d\u7f00\u548c \u7684\u524d\u7f00\u6700\u5927\u503c\u3002\u3002\u5c31\u53ef\u4ee5\u4e8c\u5206\u3002\u3002\u00d2\r\n// \u53ea\u9700\u8981\u7edf\u8ba1\u524d\u7f00\u548c \u7684\u524d\u7f00\u6700\u5927\u503c\u3002\u3002\u5c31\u53ef\u4ee5\u4e8c\u5206\u3002\u3002\u00d2\r\n// \u4e0d\u8fc7\u8fd9\u4e2a\u7edf\u8ba1\u65b9\u5f0f \u4e5f\u662f\u7b2c\u4e00\u6b21\u9047\u5230\u3002\u3002\u7b97\u662f\u65b0\u77e5\u4e86\u3002\u3002\r\n//\u91cf\u7ea7:\r\n//\u7b97\u6cd5:\r\n//\u7279\u70b9:"
}