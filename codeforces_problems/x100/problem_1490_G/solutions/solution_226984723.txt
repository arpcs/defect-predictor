{
    "id": 226984723,
    "contestId": 1490,
    "creationTimeSeconds": 1696670401,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "ukuk"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 10649600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n#define i64 long long\r\n#define i128 __int128\r\n//#define db double \r\n#define PII pair<int,int>\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define mp make_pair\r\n#define fi first\r\n#define se second\r\n#define all(x) x.begin(),x.end()\r\n#define lowbit(x) ((x)&-(x))\r\n#define debug(x) cout<<(#x)<<\" = \"<<(x)<<'\\n'\r\n\r\nconst double eps=1e-8;\r\nconst int mod=1e9+7;\r\nconst int inf=1e9+7;\r\nconst i64 INF=1e18+7;\r\nconst int N=2e5+5;\r\nconst int M=1e6+5;\r\nint _=1;\r\n\r\nint qmi(int a,int b){\r\n\tint ret=1;\r\n\tfor(;b;b>>=1,a=a*a%mod)if(b&1)ret=ret*a%mod;\r\n\treturn ret;\r\n}\r\n\r\nint n,m,k;\r\nint a[N];\r\nint ans[N];\r\nint cnt=0;\r\n\r\ninline void solve(){\r\n\tcin>>n>>m;\r\n\tint mx=-INF;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tcin>>a[i];\r\n\t\ta[i]+=a[i-1];\r\n\t\tif(a[i]>mx)mx=a[i];\r\n\t}\r\n\tpriority_queue<array<int,2>>q;\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tans[i]=0;\r\n\t\tint t;cin>>t;\r\n\t\tif(a[n]>0){\r\n\t\t\tint tim=max((t-mx+a[n]-1)/a[n],0ll);\r\n\t\t\tans[i]=tim*n,t-=tim*a[n];\r\n\t\t}\r\n\t\tif(t)q.push({-t,i});\r\n//\t\tdebug(ans[i]);\r\n//\t\tdebug(t);\r\n\t}\r\n\t\r\n\tfor(int i=1;i<=n;i++){\r\n\t\twhile(q.size()&&-q.top()[0]<=a[i]){\r\n\t\t\tans[q.top()[1]]+=i;\r\n\t\t\tq.pop();\r\n\t\t}\r\n\t}\r\n\twhile(q.size()){\r\n\t\tans[q.top()[1]]=INF;\r\n\t\tq.pop();\r\n\t}\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tif(ans[i]<INF)cout<<ans[i]-1<<' ';\r\n\t\telse cout<<-1<<' ';\r\n\t}\r\n\tcout<<'\\n';\r\n}\r\nsigned main(){\r\n\tios::sync_with_stdio(0);\r\n\tcin.tie(0);cout.tie(0);\r\n\t\r\n\t\r\n\tcin>>_;\r\n\twhile(_--)solve();\r\n\treturn 0;\r\n}\r\n/*\r\n*/\r\n"
}