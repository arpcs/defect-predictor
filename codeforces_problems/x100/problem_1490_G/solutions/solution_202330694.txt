{
    "id": 202330694,
    "contestId": 1490,
    "creationTimeSeconds": 1681626390,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "nordanov"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 204800,
    "source": "#pragma GCC optimize(\"O3,unroll-loops\")\r\n#include <bits/stdc++.h>\r\n#include <unordered_map>\r\nusing namespace std;\r\nusing namespace chrono;\r\n\r\n// #include <ext/pb_ds/assoc_container.hpp>\r\n// #include <ext/pb_ds/tree_policy.hpp>\r\n// using namespace __gnu_pbds;\r\n\r\n// #define ordered_set tree<pair <int,int>, null_type,less<pair <int,int> >, rb_tree_tag,tree_order_statistics_node_update>\r\n//less_equal--> multiset| greater--> dec order\r\n// #define ordered_set tree<int, null_type,less_equal<int >, rb_tree_tag,tree_order_statistics_node_update>\r\n\r\n#define all(x) x.begin(),x.end()\r\n#define ff first\r\n#define ss  second\r\n#define pb push_back\r\n#define PI 3.141592653589793238462\r\n#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\r\n#define YES  cout<<\"YES\"<<endl\r\n#define NO cout<<\"NO\"<<endl\r\ntypedef long long int ll;\r\ntypedef vector <int> vi;\r\ntypedef vector <long long> vll;\r\ntypedef vector <vector <int> > vvi;\r\ntypedef vector <vector <long long> > vvll;\r\ntypedef vector <pair <int,int> > vpii;\r\ntypedef vector <pair <long long,long long> > vpll;\r\ntypedef pair <int,int> pii;\r\ntypedef pair <long long, long long> pll;\r\nconst double pi = 3.1415926535;\r\nconst int INF = 1e9;\r\nconst ll bigmod = 100055128505716009;\r\n// __print() functions\r\nvoid __print(int x) {cerr<<x; }\r\nvoid __print(long long x) { cerr<<x; }\r\nvoid __print(string x){ cerr<<x; }\r\nvoid __print(char x){ cerr<<x; }\r\nvoid __print(bool x){ cerr<<x; }\r\nvoid __print(double x){ cerr<<x; }\r\n\r\n\r\n// printing complex datatypes\r\ntemplate <class T> void __print(vector <T> v){ cerr<<\"[ \"; for(T i:v){ __print(i);cerr<<\" \"; } cerr<<\"]\"; }\r\ntemplate <class T, class V> void __print(pair <T,V> p){ cerr <<\"{ \"; __print(p.first);cerr<<\" , \";__print(p.second);cerr<<\" }\";} \r\ntemplate <class T> void __print(set <T> v) {cerr << \"[ \"; for (T i : v) {__print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void __print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {__print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void __print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {__print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void __print(vector <pair <T, V> > v){cerr << \"[ \"; for(auto i: v){__print(i); cerr<<\" \";} cerr<<\"]\";}\r\ntemplate <class T> void __print(vector <vector <T> > v){ cerr<<endl<<endl; for( auto i:v){ for(T j:i){ cerr<<j<<\" \";} cerr<<endl; } cerr<<endl<<endl;}\r\n\r\n\r\n#ifndef ONLINE_JUDGE\r\n    #define debug(x) cerr<< \"Line \" << __LINE__ << \" : \" <<#x<<\" --> \";__print(x);cerr<<endl; \r\n#else\r\n    #define debug(x) \r\n#endif\r\n\r\n// Random number generator\r\nuint64_t random_address() { char *p = new char; delete p; return uint64_t(p); }\r\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count() * (random_address() | 1));\r\n// just use rng()\r\n\r\n//functions-------------------------------------------------------------------------------------------------------------------------\r\nvoid google(int t) {cout << \"Case #\" << t << \": \";}\r\nll binpower(ll a, ll b, ll m){ ll res =1; while(b>0){ if(b&1) res = res*a%m;a = a*a%m;b = b>>1; }   return res;}\r\nint ext_gcd(int a,int b){if(!a || !b) return a|b; int shift = __builtin_ctz(a|b); a = a>>__builtin_ctz(a);do{ b= b>>__builtin_ctz(b);if(a>b){ swap(a,b);} b-=a; }while(b);return a<<=shift;}\r\nvoid precision(int a) {cout << setprecision(a) << fixed;}\r\nll mminvprime(ll a,ll p){return binpower(a,p-2,p);}\r\nint popcount(int x){ return __builtin_popcount(x);}\r\n\r\nconst int mod =998244353;\r\n// const int mod = 1e9 + 7;\r\nconst int N = 1e5 + 5;\r\nconst int N2 = 2500;\r\n// ---------------------------------------------------------------------------------------------------------------------------------\r\n\r\nvoid solve(){\r\n    int t;cin>>t;\r\n    while(t--){\r\n        int n,m; cin>>n>>m;\r\n        vll arr(n), query(m);\r\n        for(auto &i : arr) cin>>i;\r\n        for(auto &i : query) cin>>i;\r\n        ll sum = accumulate(all(arr), 0LL);\r\n        vll pref(n);\r\n        pref[0] = arr[0];\r\n        vpll store;\r\n        for(int i =1;i<n;i++){\r\n            pref[i] = pref[i-1] + arr[i];\r\n            store.pb({pref[i], -i});\r\n        }\r\n        store.pb({pref[0], 0});\r\n        sort(store.begin(), store.end());\r\n        debug(store);\r\n        vll ans(m);\r\n        ll g = 1e9;\r\n        for(int i = 0;i<m;i++){\r\n            ll x = query[i];\r\n            debug(x);\r\n            if(sum <= 0){\r\n                int idx = lower_bound(all(store), make_pair(x, -g)) - store.begin();\r\n                if(idx == n){\r\n                    ans[i] = -1;\r\n                }\r\n                else{\r\n                    ans[i] = abs(store[idx].ss);\r\n                }\r\n            }\r\n            else{\r\n                int idx = lower_bound(all(store), make_pair(x, -g)) - store.begin();\r\n                debug(idx);\r\n                if(idx == n){\r\n                    ll val = (*prev(store.end())).ff;\r\n                    ll newx = x- val;\r\n                    ll trips = (newx + sum - 1)/sum;\r\n                    debug(trips);\r\n                    x -= trips*sum;\r\n                    debug(x);\r\n                    ans[i] += trips*n;\r\n                    idx = lower_bound(all(store), make_pair(x, -g)) - store.begin();\r\n                    ans[i] += abs(store[idx].ss);\r\n                }\r\n                else{\r\n                    ans[i] = abs(store[idx].ss);\r\n                }\r\n            }\r\n        }\r\n\r\n        for(auto i : ans) cout<<i<<\" \";\r\n        cout<<endl;\r\n\r\n        \r\n    }\r\n\r\n}\r\n\r\nint main(){\r\n    #ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\",\"r\",stdin);\r\n    freopen(\"output.txt\",\"w\",stdout);   \r\n    freopen(\"error.txt\",\"w\",stderr);\r\n    #endif          \r\n    fastio();       \r\n    auto start1 = high_resolution_clock::now();\r\n    solve();\r\n    auto end1=  high_resolution_clock::now();\r\n    double duration = duration_cast<nanoseconds>(end1 - start1).count();\r\n    duration *= 1e-9;\r\n\r\n    #ifndef ONLINE_JUDGE\r\n        cerr<<\"Time - \"<<fixed<<duration<<setprecision(9) <<\" s\"<<endl;\r\n    #endif\r\n\r\n}\r\n\r\n\r\n// string((int)len, '0')"
}