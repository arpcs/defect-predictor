{
    "id": 221851557,
    "contestId": 1490,
    "creationTimeSeconds": 1693849072,
    "relativeTimeSeconds": 7072,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "Mortus"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1693842000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 10035200,
    "source": "#include \"bits/stdc++.h\"\r\n\r\n#pragma GCC optimize(\"Ofast,unroll-loops\")\r\nusing namespace std;\r\n#include <bitset>\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\n\r\n#define all(x) x.begin(),x.end()\r\n#define pb push_back\r\n//#define int long long\r\n#ifdef MORTUS\r\n#define deb(x) cout << #x << \" = \" << (x) << endl\r\n#define debn(x, n) { cout << #x << \"(\" << n << \") = \" << \\\r\n        \"{\"; int _f_ = 1; for(int _i_ = 0;_i_<n;_i_++) {if (!_f_) cout << \"|\"; cout << x[_i_]; _f_= 0;} cout << \"}\" << endl;}\r\n#define deba(x) { cout << #x << \" (size: \" << (int)x.size() << \") = \" << \\\r\n        \"{\"; int _f_ = 1; for (auto o : x) {if (!_f_) cout << \"|\"; cout << o; _f_ = 0;} cout << \"}\" << endl;}\r\n#else\r\n#define deb(x) ;\r\n#define debn(x, n) ;\r\n#define deba(x) ;\r\n#endif\r\n\r\ntemplate<class T>\r\nistream &operator>>(istream &in, vector<T> &a) {\r\n    for (auto &x: a) in >> x;\r\n    return in;\r\n}\r\n\r\ntemplate<class T>\r\nostream &operator<<(ostream &out, const vector<T> &a) {\r\n    for (auto &x: a) out << x << ' ';\r\n    return out;\r\n}\r\n\r\ntemplate<class T>\r\nistream &operator>>(istream &in, pair<T, T> &a) {\r\n    in >> a.first >> a.second;\r\n    return in;\r\n}\r\n\r\ntemplate<class T>\r\nostream &operator<<(ostream &out, const pair<T, T> &a) {\r\n    out << \"(\" << a.first << \",\" << a.second << \")\";\r\n    return out;\r\n}\r\n\r\nclock_t startTime;\r\n\r\ndouble getCurrentTime() {\r\n    return (double) (clock() - startTime) / CLOCKS_PER_SEC;\r\n}\r\n\r\n\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nconst double PI = atan(1) * 4;\r\nconstexpr double eps = 1e-9;\r\nconstexpr int MAXLOG = 60;\r\nconstexpr ll mod = 998244353;\r\nconstexpr int N = 1e5;\r\n\r\n\r\n\r\nvoid solve() {\r\n\r\n    ll n,m;\r\n    cin>>n>>m;\r\n    vector<ll>a(n);\r\n    cin>>a;\r\n    ll sum = 0;\r\n    vector<ll>pref;\r\n    vector<ll>mx_pref;\r\n    for(int i = 0;i<n;i++){\r\n        sum+=a[i];\r\n        pref.pb(sum);\r\n    }\r\n    ll mx = pref[0];\r\n    mx_pref.pb(mx);\r\n    for(int i = 1;i<n;i++){\r\n        mx = max(mx,pref[i]);\r\n        mx_pref.pb(mx);\r\n    }\r\n    vector<ll>ans;\r\n    while (m--){\r\n        ll x;\r\n        cin>>x;\r\n        if(pref.back() <= 0 && mx_pref.back() < x){\r\n            ans.pb(-1);\r\n            continue;\r\n        }\r\n        ll tans = 0;\r\n        ll cnt;\r\n        ll l = 0;\r\n        ll r = n+10;\r\n        ll op = MAXLOG;\r\n        if(pref.back() == 0){\r\n            cnt = 0;\r\n        }\r\n        else{\r\n            x-=mx_pref.back();\r\n            cnt = x/pref.back();\r\n            if(x < 0)\r\n                cnt = 0;\r\n            else if(x % pref.back())\r\n                cnt++;\r\n            x+=mx_pref.back();\r\n        }\r\n        tans += n * cnt;\r\n        ll need = x - cnt * pref.back();\r\n        l = 0;\r\n        r = n+100;\r\n        op = MAXLOG;\r\n        ll id = n-1;\r\n        while(op--){\r\n            ll mid = (l+r)/2;\r\n            if(mid >= n || mx_pref[mid] >= need){\r\n                id = min(id,mid);\r\n                r = mid;\r\n            }\r\n            else\r\n                l = mid;\r\n        }\r\n        tans += id;\r\n        ans.pb(tans);\r\n    }\r\n    cout<<ans<<'\\n';\r\n}\r\n\r\n\r\nsigned main() {\r\n    startTime = clock();\r\n    cout.precision(10);\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n#ifdef MORTUS\r\n    freopen(\"Input.txt\", \"r\", stdin);\r\n    freopen(\"Output.txt\", \"w\", stdout);\r\n#endif\r\n    int test = 1;\r\n\r\n    cin>>test;\r\n    while (test--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}