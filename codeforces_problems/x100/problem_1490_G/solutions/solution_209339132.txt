{
    "id": 209339132,
    "contestId": 1490,
    "creationTimeSeconds": 1686545341,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "avishaan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 102400,
    "source": "#include<bits/stdc++.h>\r\n#define IOS ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);\r\nusing namespace std;\r\n#define ll long long\r\n#define fl(x,y,n) for(ll x=y;x<n;x++)\r\n#define rfl(x,y,n) for(ll x=y;x>=n;x--)\r\n#define line \"\\n\"\r\n#define yesno  if(result) cout<<\"YES\"<<line;else cout<<\"NO\"<<line;\r\n#define pb push_back\r\n#define all(v) v.begin(),v.end()\r\n#define rev(v) v.rbegin(),v.rend()\r\n#define mod  1000000007\r\n\r\nvoid sol(){\r\n    ll n,m;\r\n    cin>>n>>m;\r\n    vector<ll>a(n);\r\n    fl(i,0,n)\r\n        cin>>a[i];\r\n    vector<ll>idx,till;\r\n    till.pb(a[0]),idx.pb(0);\r\n    ll sum = a[0];\r\n    fl(i,1,n){\r\n        sum += a[i];\r\n        if(sum > till[till.size() - 1])\r\n            till.pb(sum),idx.pb(i);\r\n    }\r\n    while(m--){\r\n        ll x;\r\n        cin>>x;\r\n        ll index = upper_bound(all(till),x) - till.begin();\r\n        if(index == 0){\r\n            cout << 0 << \" \";\r\n            continue;\r\n        }\r\n        if(index == till.size()){\r\n            if(x > till[index - 1] && sum < 0)\r\n                cout << -1 << \" \";\r\n            else if(x > till[index - 1]){\r\n                ll ct = (x / sum) * (n - 1);\r\n                index = upper_bound(all(till),x % sum) - till.begin();\r\n                if(index == 0)\r\n                    ct++;\r\n                else if((sum % x) == till[index - 1])\r\n                    ct += idx[index - 1];\r\n                else\r\n                    ct += idx[index];\r\n                cout << ct << \" \";\r\n            }\r\n            else if(x == till[index - 1])\r\n                cout << idx[index - 1] << \" \";\r\n        }\r\n        else if(x == till[index - 1])\r\n            cout << idx[index - 1] << \" \";\r\n        else\r\n            cout << idx[index] << \" \";\r\n    }\r\n    cout << line;\r\n}\r\n\r\nint main(){\r\n    IOS;\r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n        sol();\r\n    return 0;\r\n}"
}