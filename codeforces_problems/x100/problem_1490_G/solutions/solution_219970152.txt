{
    "id": 219970152,
    "contestId": 1490,
    "creationTimeSeconds": 1692744757,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "MrPerson"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 670,
    "memoryConsumedBytes": 4812800,
    "source": "#pragma GCC optimize(\"Ofast,unroll-loops\")\r\n#pragma GCC target(\"avx,avx2,fma\")\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\nusing ll = long long;\r\n\r\n#define INF 10000000000000000\r\n#define MIN_VAL -1000000000\r\n#define int ll\r\n\r\nint check(vector<int> &a, vector<int> &mx, int x) {\r\n    int n = a.size();\r\n    if (mx[n-1] < x)\r\n        return -1;\r\n\r\n    int l = 0, r = n-1, best = n-1;\r\n    while (l <= r) {\r\n        int m = l+(r-l)/2;\r\n\r\n        if (mx[m] >= x) {\r\n            best = m;\r\n            r = m-1;\r\n        }\r\n        else {\r\n            l = m+1;\r\n        }\r\n    }\r\n\r\n    return best;\r\n}\r\n\r\nll solve(vector<int> &a, vector<int> &mx, ll sum, int x) {\r\n    ll n = a.size();\r\n\r\n    if (sum <= 0) {\r\n        int cur = check(a, mx, x);\r\n        return cur;\r\n    }\r\n\r\n    int l = 0, r = INF, best = INF;\r\n    while (l <= r) {\r\n        int m = l+(r-l)/2;\r\n        ll newX = 0;\r\n        if ((x-MIN_VAL)/sum <= m)\r\n            newX = MIN_VAL;\r\n        else\r\n            newX = x-m*sum;\r\n        int cur = check(a, mx, newX);\r\n        if (cur == -1) {\r\n            l = m+1;\r\n        }\r\n        else {\r\n            best = m;\r\n            r = m-1;\r\n        }\r\n    }\r\n\r\n    if (best == INF)\r\n        return -1;\r\n\r\n    ll ans = check(a, mx, x-best*sum) + best*n;\r\n    return ans;\r\n}\r\n\r\nvoid solution() {\r\n    int n, m;\r\n    cin >> n >> m;\r\n\r\n    ll sum = 0;\r\n    vector<ll> a(n), mx(n);\r\n    for (auto &i : a)\r\n        cin >> i, sum += i;\r\n\r\n    ll curMx = INT_MIN;\r\n    sum = 0;\r\n    for (int i = 0; i < n; i++) {\r\n        sum += a[i];\r\n        curMx = max(curMx, sum);\r\n        mx[i] = curMx;\r\n    }\r\n\r\n    vector<int> x(m);\r\n    for (auto &i : x)\r\n        cin >> i;\r\n\r\n    for (int i = 0; i < m; i++) {\r\n        int cur = x[i];\r\n        cout << solve(a, mx, sum, cur) << ' ';\r\n    }\r\n    cout << '\\n';\r\n}\r\n\r\nsigned main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n\r\n    int t;\r\n    cin >> t;\r\n    for (int i = 0; i < t; i++)\r\n        solution();\r\n}\r\n"
}