{
    "id": 223568395,
    "contestId": 1490,
    "creationTimeSeconds": 1694844470,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "Khaled_14"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <iomanip>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\ntemplate<typename T>\r\nusing ordered_set = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\n#define endl \"\\n\"\r\n#define ll long long int\r\n\r\nvoid solve()\r\n{\r\n    map<ll, ll> myMap;\r\n    myMap[0]=0;\r\n    int n, m;\r\n    cin>>n>>m;\r\n    ll totalSum=0;\r\n    for(int i=0, x; i<n; i++){\r\n        cin>>x;\r\n        totalSum+=x;\r\n        if(!myMap.count(totalSum)){\r\n            myMap.insert({totalSum, i});\r\n        }\r\n    }\r\n    while(m--){\r\n        int x;\r\n        cin>>x;\r\n        if(totalSum<=0){\r\n            auto it = myMap.lower_bound(x);\r\n            if(it == myMap.end()){\r\n                cout<<-1<<\" \";\r\n            }\r\n            else{\r\n                ll ans=LONG_LONG_MAX;\r\n                while(it!=myMap.end()){\r\n                    ans=min(ans, it->second);\r\n                    if(!ans){\r\n                        break;\r\n                    }\r\n                    it++;\r\n                }\r\n                cout<<ans<<\" \";\r\n            }\r\n        }\r\n        else{\r\n            auto it = myMap.lower_bound(x);\r\n            if(it != myMap.end()){\r\n                ll ans=LONG_LONG_MAX;\r\n                while(it!=myMap.end()){\r\n                    ans=min(ans, it->second);\r\n                    if(!ans){\r\n                        break;\r\n                    }\r\n                    it++;\r\n                }\r\n                cout<<ans<<\" \";\r\n            }\r\n            else{\r\n                ll current = (x/totalSum)*n-1, ans=LONG_LONG_MAX;;\r\n                it = myMap.lower_bound(x%totalSum);\r\n                while(it!=myMap.end()){\r\n                    ans=min(ans, it->second);\r\n                    if(!ans){\r\n                        break;\r\n                    }\r\n                    it++;\r\n                }\r\n                cout<<current + ans + (x%totalSum == 0? 0 : 1)<<\" \";\r\n            }\r\n        }\r\n    }\r\n    cout<<endl;\r\n}\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false); cin.tie(nullptr); cin.tie(nullptr);\r\n    int t=1;\r\n    cin>>t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n}"
}