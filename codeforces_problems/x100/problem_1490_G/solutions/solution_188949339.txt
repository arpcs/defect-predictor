{
    "id": 188949339,
    "contestId": 1490,
    "creationTimeSeconds": 1673502035,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1490,
        "index": "G",
        "name": "Old Floppy Drive ",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 1490,
        "members": [
            {
                "handle": "yhy0ung"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613486100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 639,
    "memoryConsumedBytes": 1638400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define int long long\r\n\r\nvoid solve()\r\n{\r\n    int n, m;\r\n    cin >> n >> m;\r\n    vector<int> s(n + 2);\r\n\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        cin >> s[i];\r\n        s[i] += s[i - 1];\r\n    }\r\n\r\n    int sum = s[n];\r\n\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        s[i] = max(s[i], s[i - 1]);\r\n    }\r\n\r\n    int maxpre = s[n];\r\n\r\n    for (int i = 1; i <= m; i++)\r\n    {\r\n        int x;\r\n        cin >> x;\r\n\r\n        if (maxpre >= x)\r\n        {\r\n            int pos = lower_bound(&s[1], &s[n + 1], x) - &s[0];\r\n            cout << pos - 1 << \" \";\r\n        }\r\n\r\n        else if (sum <= 0)\r\n        {\r\n            cout << -1 << \" \";\r\n        }\r\n\r\n        else\r\n        {\r\n            int times = (x - maxpre + sum - 1) / sum;\r\n            x -= times * sum;\r\n            int pos = lower_bound(&s[1], &s[n + 1], x) - &s[0];\r\n            cout << pos + times * n - 1 << \" \";\r\n        }\r\n    }\r\n    cout << endl;\r\n}\r\n\r\nsigned main()\r\n{\r\n    ios::sync_with_stdio(false);\r\n\r\n    int t;\r\n    cin >> t;\r\n\r\n    while (t--)\r\n    {\r\n        solve();\r\n    }\r\n}\r\n"
}