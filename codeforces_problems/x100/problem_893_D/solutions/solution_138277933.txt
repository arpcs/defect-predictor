{
    "id": 138277933,
    "contestId": 893,
    "creationTimeSeconds": 1638809174,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 893,
        "index": "D",
        "name": "Credit Card",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 893,
        "members": [
            {
                "handle": "bkifhr8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1511449500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 79,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 3174400,
    "source": "#include<bits/stdc++.h>\ntypedef long long int ll;\nusing namespace std;\n#define sz 200007\n#define sz11 5000000\n#define mod1 1000000007\n#define mod11 998244353\n#define pr1 577\n#define pr2 593\n#define inf 1e18\n#define f first\n#define s second\n#define pa pair<ll,ll>\n#define eps 0.0000001\n#define eps1 1e-8\n#define pi acos(-1.0)\n#define vec pair<pa,pa>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\n#define ordered_set tree<pair<int,int>, null_type,greater<pair<int,int>>, rb_tree_tag,tree_order_statistics_node_update>\nmt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());\nll arr[sz];\nll brr[sz];\nint main()\n{\n  //ios_base::sync_with_stdio(0);cin.tie(0);\n  //freopen(\"handle_list.txt\",\"r\",stdin);\n  //freopen(\"updated_handle_list.txt\",\"w\",stdout);\n  int test_case=1;\n // scanf(\"%d\",&test_case);\n  //printf(\"%d %d\\n\",'\u2212','-');\n  for(int cs=1;cs<=test_case;cs++)\n  {\n   ll n,d;\n   scanf(\"%lld %lld\",&n,&d);\n   ll chk=0;\n   for(int i=1;i<=n;i++)\n   {\n    scanf(\"%lld\",&arr[i]);\n    brr[i]=brr[i-1]+arr[i];\n   }\n   brr[n+1]=d;\n    for(int i=n;i>=1;i--)\n    {\n      if(brr[i]>d)\n      {\n        printf(\"-1\\n\");\n        return 0;\n      }\n      if(i==n)\n        brr[i]=d-brr[i];\n      else\n      brr[i]=min(d-brr[i],brr[i+1]);\n    }\n   ll ans=-1;\n    ll cur=0,cur_val=0;\n    ll ac=0;\n    ll last=0;\n    for(int i=1;i<=n && ac==0;i++)\n    {\n      if(arr[i]==0)\n      {\n       if(last<0 && (-last)>(brr[i]-cur_val))\n        ac=1;\n      else if(last<0){\n        last+=brr[i]-cur_val;\n        cur++;\n        cur_val=brr[i];\n      }\n      }\n      else{\n        last+=arr[i];\n      }\n    }\n    if(ac)\n      ans=-1;\n    else\n      ans=cur;\n    printf(\"%lld\\n\",ans);\n  }\n  return 0;\n}\n\t\t  \t \t \t \t \t \t \t\t \t      \t \t\t"
}