{
    "id": 147640958,
    "contestId": 893,
    "creationTimeSeconds": 1645778960,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 893,
        "index": "D",
        "name": "Credit Card",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 893,
        "members": [
            {
                "handle": "anujdhillxn"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1511449500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 79,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 1843200,
    "source": "#include <bits/stdc++.h>\n// #include <ext/pb_ds/assoc_container.hpp>\n// #include <ext/pb_ds/tree_policy.hpp>\n\n// using namespace __gnu_pbds;\nusing namespace std;\n\ntemplate <class X, class Y>\nostream &operator<<(ostream &os, pair<X, Y> const &p)\n{\n    return os << \"(\" << p.first << \", \" << p.second << \") \";\n}\ntemplate <class Ch, class Tr, class Container>\nbasic_ostream<Ch, Tr> &operator<<(basic_ostream<Ch, Tr> &os, Container const &x)\n{\n    os << \"[ \";\n    for (auto &y : x)\n        os << y << \", \";\n    return os << \"]\\n\";\n}\n\n#define int long long\n#define len(a) (int)a.size()\n#define ordered_set(T) tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>\nconst long long INF = 1e18;\nconst double EPS = 1e-9;\nconst int di[8] = {1, 0, -1, 0, 1, -1, -1, 1};\nconst int dj[8] = {0, 1, 0, -1, 1, 1, -1, -1};\n// dp?, graph?, bs on answer?, compress/sort queries?, stupid observation?\nint solve_case()\n{\n    int n, d;\n    cin >> n >> d;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++)\n        cin >> a[i];\n\n    vector<int> suff(n);\n    int amt = 0;\n    for (int i = n - 1; i >= 0; i--)\n    {\n        amt = max(0LL, amt + a[i]);\n        suff[i] = amt;\n    }\n    int curr = 0, days = 0;\n    for (int i = 0; i < n; i++)\n    {\n        if (a[i] == 0 && curr < 0)\n        {\n            days++;\n            curr = max(0LL, d - suff[i]);\n        }\n        curr += a[i];\n        if (curr > d)\n            return -1;\n    }\n    return days;\n}\n\nint32_t main()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    clock_t clk = clock();\n    int t = 1;\n    // cin >> t;\n    for (int _ = 1; _ <= t; _++)\n    {\n        cout << solve_case();\n    }\n    cerr << fixed << setprecision(6) << \"Time: \" << ((double)(clock() - clk)) / CLOCKS_PER_SEC << \"\\n\";\n    return 0;\n}"
}