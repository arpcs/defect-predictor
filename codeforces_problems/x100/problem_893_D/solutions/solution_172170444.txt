{
    "id": 172170444,
    "contestId": 893,
    "creationTimeSeconds": 1663175899,
    "relativeTimeSeconds": 2599,
    "problem": {
        "contestId": 893,
        "index": "D",
        "name": "Credit Card",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 893,
        "members": [
            {
                "handle": "one_second"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1663173300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n#define vi vector<int>\r\n#define vpii vector<pair<int,int>>\r\n#define pii pair<int,int>\r\n#define ff first\r\n#define ss second\r\n#define endl \"\\n\"\r\n#define print(x) cout<<x<<endl\r\n#define printt(x,y) cout<<x<<\" \"<<y<<\"\\n\"\r\n#define pb push_back\r\n#define all(v) v.begin(),v.end()\r\n#define vvi vector<vector<int>>\r\n#define sz(x) (int)x.size()\r\n#define maxq priority_queue<int>\r\n#define minq priority_queue<int,vector<int>,greater<int>>\r\n#define fastio ios_base::sync_with_stdio(false);cin.tie(NULL);\r\nconst int mod = 1e9 + 7;\r\nconst int N = 200005;\r\n\r\nvoid solve() {\r\n\tint n, m;\r\n\tcin >> n >> m;\r\n\r\n\tvi v(n);\r\n\tfor (int i = 0; i < n; i++)\r\n\t\tcin >> v[i];\r\n\r\n\tint ans = 0;\r\n\tint curans = 0;\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tif (v[i] != 0)\r\n\t\t\tcurans += v[i];\r\n\r\n\t\telse {\r\n\t\t\tif (curans < 0)\r\n\t\t\t\tans++;\r\n\t\t}\r\n\r\n\t\tif (curans > m) {\r\n\t\t\tcout << -1 << endl;\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tprint(ans);\r\n\r\n}\r\n\r\nint32_t main() {\r\n\tfastio;\r\n\tint t = 1;\r\n\t//cin >> t;\r\n\r\n\twhile (t--) {\r\n\t\tsolve();\r\n\t}\r\n}\r\n",
    "suggested_categories": [
        "algorithm",
        "data structure",
        "programming",
        "code quality",
        "code style",
        "code efficiency",
        "c++",
        "stl",
        "competitive programming",
        "code optimization",
        "input handling",
        "output formatting",
        "error handling",
        "variable naming",
        "loop optimization",
        "code modularity",
        "mathematical computation",
        "conditional statements",
        "code comments",
        "complexity analysis"
    ]
}