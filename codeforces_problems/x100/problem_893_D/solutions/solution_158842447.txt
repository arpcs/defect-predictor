{
    "id": 158842447,
    "contestId": 893,
    "creationTimeSeconds": 1653884283,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 893,
        "index": "D",
        "name": "Credit Card",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 893,
        "members": [
            {
                "handle": "JSON-558"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1511449500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 11,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 99225600,
    "source": "#pragma GCC optimize(3)\r\n#pragma GCC optimize(\"inline\")\r\n#pragma GCC optimize(\"-fgcse\")\r\n#pragma GCC target(\"avx\",\"sse2\")\r\n#pragma GCC optimize(\"-fgcse-lm\")\r\n#pragma GCC optimize(\"-fipa-sra\")\r\n#pragma GCC optimize(\"-ftree-pre\")\r\n#pragma GCC optimize(\"-ftree-vrp\")\r\n#pragma GCC optimize(\"-fpeephole2\")\r\n#pragma GCC optimize(\"-ffast-math\")\r\n#pragma GCC optimize(\"-fsched-spec\")\r\n#pragma GCC optimize(\"unroll-loops\")\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC target(\"avx,avx2,fma\")\r\n#pragma GCC optimization (\"O3\")\r\n#pragma GCC target(\"fma,sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\r\n\r\n#include <bits/stdc++.h>\r\n#include<stdio.h>\r\n#include <chrono>\r\nusing namespace std;\r\n#define forr(i,n) for(int i = 0 ; i  < n ; i++)\r\n#define forr1(i,n) for(int i = 1 ; i  <= n ; i++)\r\n#define pb push_back\r\n// #define int long long\r\n#define endl \"\\n\"\r\n#define ll long long\r\n#define sz(a)  int(a.size())\r\nconst ll mod  = 1e9 + 7 ;\r\nconst int N = 5e5 + 10 ;\r\nconst ll inf = 1e18;\r\nconst int maxm = 1005;\r\nvector<vector<char>> matrix(maxm , vector<char>(maxm));\r\n// vector<vector<bool>> vt(maxm, vector<bool>(maxm));\r\nstruct eve {\r\n\tint x, y, z ;\r\n};\r\nint dx[] = {0, 0, -1, 1};\r\nint dy[] = {1, -1, 0 , 0};\r\nint dz[] = {0, 0, 1};\r\nint ddx[] = {0 , 1, 0, 1, 1, -1, -1, -1};\r\nint ddy[] = { -1, -1, 1, 0, 1, 1, -1, 0};\r\n\r\nstruct myComp {\r\n\tconstexpr bool operator()(pair<int, int> const& a, pair<int, int> const& b)const noexcept\r\n\t{\r\n\t\treturn a.first < b.first;\r\n\t}\r\n};\r\n\r\nclass even\r\n{\r\npublic:\r\n\tll a , b, c ;\r\n};\r\n\r\nll poww(ll a, ll b , ll  m)\r\n{\r\n\tif (b == 0) return 1ll;\r\n\tif (b % 2 == 1) return a * poww(a, b - 1, m) % m ;\r\n\tll rs = poww(a, b / 2 , m);\r\n\trs = rs * rs % m ;\r\n\treturn rs;\r\n}\r\nll fact[N] ;\r\nll ncr(ll n , ll r)\r\n{\r\n\tll num = fact[n];\r\n\tll deno = fact[n - r] * fact[r] % mod ;\r\n\tdeno = poww(deno , mod - 2, mod);\r\n\tnum = num * deno ;\r\n\tnum = num % mod;\r\n\treturn num ;\r\n}\r\n\r\nvector<ll> parent(N) , st(N);\r\nvector<ll> aa(N);\r\n\r\nvector<int> replac(N);\r\nvoid set_parent()\r\n{\r\n\tforr(i, N)\r\n\tparent[i] = i , st[i] = 1 , replac[i] = i  ;\r\n}\r\nint find_parent(int v)\r\n{\r\n\tif (parent[v] == v)\r\n\t\treturn v;\r\n\telse return parent[v] = find_parent(parent[v]);\r\n}\r\nint x = 1;\r\n\r\nbool union_set(int a , int b)\r\n{\r\n\ta = find_parent(a);\r\n\tb = find_parent(b);\r\n\tif (a == b) {\r\n\r\n\t\treturn false;\r\n\t}\r\n\tif (st[a] < st[b]) swap(a, b);\r\n\tst[a] += st[b];\r\n\tparent[b] = a;\r\n\r\n\treturn true;\r\n}\r\n\r\nconst int maxx  = 1e7 + 10 ;\r\nvector<ll> spf(maxx, -1) ;\r\nvoid sieve()\r\n{\r\n\tspf[1] = 1;\r\n\tforr(i, maxx)\r\n\tspf[i] = i;\r\n\tfor (ll i = 2 ; i * i < maxx ; i++)\r\n\t{\r\n\t\tif (spf[i] == i)\r\n\t\t{\r\n\t\t\tspf[i] = i ;\r\n\t\t\tfor (ll j = i * i ; j < maxx ; j += i)\r\n\t\t\t{\r\n\t\t\t\tif (spf[j] == j)\r\n\t\t\t\t\tspf[j] = i ;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\nvector<vector<int>> g ;\r\nvector<int> euler, first , height , dis  ;\r\nint k = 5 ;\r\nvector<vector<int>> sp;\r\nvoid sparsetable()\r\n{\r\n\tint n = euler.size();\r\n\tfor (int i = 0 ; i < n ; i++)\r\n\t\tsp[i][0] = euler[i];\r\n\tfor (int i = 1 ; i < k ; i++)\r\n\t{\r\n\t\tfor (int j = 0 ; j + (1 << i)  < n ; j++)\r\n\t\t{\r\n\t\t\tif (height[sp[j][i - 1]] < height[sp[j + (1 << (i - 1))][i - 1]])\r\n\t\t\t\t// {  cout<<i<<\" \"<<j<<\" \"<<dp[j]\r\n\t\t\t\tsp[j][i] = sp[j][i - 1];\r\n\t\t\t// }\r\n\t\t\telse sp[j][i] = sp[j + (1 << (i - 1))][i - 1] ;\r\n\t\t}\r\n\t}\r\n}\r\nint lca(int a , int b)\r\n{\r\n\tint k = 25 ;\r\n\ta = first[a] , b =  first[b] ;\r\n\tif (a > b) swap(a, b);\r\n\tint res = 0 , ht = INT_MAX ;\r\n\tfor (int i = k ; i >= 0 ; i--)\r\n\t{\r\n\t\tif ((i << i) <=  b - a + 1)\r\n\t\t{\r\n\t\t\tif (height[sp[a][i]] < ht)\r\n\t\t\t\tres = sp[a][i] , ht = height[sp[a][i]];\r\n\t\t\ta += (1 << i);\r\n\t\t}\r\n\t}\r\n\treturn res;\r\n}\r\nvoid dfs(int v, int p , int d )\r\n{\r\n\theight[v] = d ;\r\n\tfirst[v] = euler.size();\r\n\teuler.pb(v);\r\n\tfor (auto it : g[v])\r\n\t{\r\n\t\tif (it == p) continue;\r\n\t\tdfs(it , v , d + 1);\r\n\t\teuler.pb(v);\r\n\t}\r\n}\r\n\r\nbool ok(vector<int>&a , int m , int k , int n)\r\n{\r\n\tvector<int> z ;\r\n\tz.pb(-1);\r\n\tfor (int i = k - 1; i < n ; i++)\r\n\t{\r\n\t\tif (a[i] - a[i - k + 1] > m) continue ;\r\n\t\tint l = 0 , r = i - k + 1 ;\r\n\t\twhile (r >= l) {\r\n\t\t\tint mm = (l + r) / 2 ;\r\n\t\t\tif (a[i] - a[mm] <= m) r = mm - 1;\r\n\t\t\telse l = mm + 1;\r\n\t\t}\r\n\t\tint p = lower_bound(z.begin() , z.end() , l - 1) - z.begin();\r\n\t\tif (p == z.size() || z[p] >= i - k + 1) continue;\r\n\t\tz.pb(i);\r\n\r\n\t}\r\n\t// cout << m << \" \" << endl;\r\n\t// for (auto it : z)\r\n\t// \tcout << it << \" \";\r\n\t// cout << endl;\r\n\tif (z.back() == n - 1) return true;\r\n\treturn false ;\r\n}\r\nvoid solve()\r\n{\r\n\tint n , d;\r\n\tcin >> n >> d ;\r\n\tvector<int> a(n);\r\n\tbool val = false;\r\n\tint pp = 0 ;\r\n\tforr(i, n) { cin >> a[i] ; pp += a[i] ; if (pp > d) val = true;}\r\n\tif (val)\r\n\t{\r\n\t\tcout << -1 << endl;\r\n\t\treturn ;\r\n\t}\r\n\tvector<int> p(n);\r\n\tint z = 0 ;\r\n\tint point = 0 , cnt_be = 0 , sum = 0 ;\r\n\tfor (int i = 0 ; i < n ; i++)\r\n\t{\r\n\t\tif (a[i] == 0) {\r\n\t\t\tif (sum < 0)\r\n\t\t\t{\r\n\r\n\t\t\t\tsum  = -sum ;\r\n\t\t\t\tif (sum < cnt_be)\r\n\t\t\t\t{cnt_be -= sum ; continue;}\r\n\t\t\t\tsum  -= cnt_be ;\r\n\t\t\t\tint z = (sum + d - 1) / d ;\r\n\t\t\t\tpoint += z ;\r\n\t\t\t\tint rr = z * d - sum ;\r\n\t\t\t\tcnt_be = rr ;\r\n\t\t\t\tsum = 0 ;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tsum += a[i];\r\n\t\tint now =  max(d - sum, 0) ;\r\n\t\tcnt_be = min(cnt_be , now);\r\n\r\n\t}\r\n\tcout << point << endl;\r\n}\r\n\r\n\r\nint  main()\r\n{\r\n#ifndef ONLINE_JUDGE\r\n\tfreopen(\"input.txt\" , \"r\" , stdin);\r\n\tfreopen(\"3.txt\" , \"w\" , stdout);\r\n#endif\r\n\tios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n\t// sieve();\r\n\t// int t;\r\n\t// cin >> t;\r\n\t// while (t--)\r\n\tsolve();\r\n\r\n}"
}