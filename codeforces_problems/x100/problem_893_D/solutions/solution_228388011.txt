{
    "id": 228388011,
    "contestId": 893,
    "creationTimeSeconds": 1697445799,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 893,
        "index": "D",
        "name": "Credit Card",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 893,
        "members": [
            {
                "handle": "xiudu123"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1511449500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 79,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 819200,
    "source": "// \u9762\u5411\u5bf9\u8c61\u9762\u5411\u541b\uff0c \u4e0d\u8d1f\u4ee3\u7801\u4e0d\u8d1f\u537f\u3002\r\n/*\r\n  When I wrote this, only God and I understood what I was doing\r\n  Now, only God knows\r\n*/\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\nusing namespace __gnu_pbds;\r\nconst int RANDOM = std::chrono::high_resolution_clock::now().time_since_epoch().count();\r\nstruct chash {\r\n    int operator()(int x) const { return x ^ RANDOM; }\r\n};\r\ntemplate<typename T, typename G>\r\nusing hash = gp_hash_table<T, G, chash>;\r\n#define int long long\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\nstd::mt19937_64 myRound64(time(nullptr));\r\nstd::mt19937 myRound32(time(nullptr));\r\nvoid slove();\r\nvoid main_init();\r\nvoid solve_init();\r\n\r\n// -----------------------------\r\nint32_t main(){\r\n    std::cout << (std::setiosflags(std::ios::fixed)) << std::setprecision(12);\r\n#ifdef ONLINE_JUDGE\r\n    std::ios::sync_with_stdio(false);\r\n    std::cin.tie(nullptr), std::cout.tie(nullptr);\r\n#else\r\n    freopen(\"XiuDu.in\", \"r\", stdin);\r\n    freopen(\"XiuDu.out\", \"w\", stdout);\r\n    int tt = clock();\r\n#endif\r\n\r\n    // ---------------------------------------------\r\n    int T = 1;\r\n//    std::cin >> T;\r\n    main_init();\r\n    while(T --){solve_init(), slove();}\r\n    // ----------------------------------------------\r\n\r\n#ifndef ONLINE_JUDGE\r\n    std::cout << \"\\nrun time = \" << clock() - tt << \"ms\" << '\\n';\r\n    std::cout << \"runId: \" << myRound32() % 100 << '\\n';\r\n    fclose(stdin), fclose(stdout);\r\n#endif\r\n\r\n    return 0;\r\n}\r\n// ----------------------------\r\n\r\nvoid main_init(){}\r\nvoid solve_init(){}\r\nvoid slove(){\r\n    int n, d;\r\n    std::cin >> n >> d;\r\n    std::vector<int> v(n + 1, 0);\r\n    for(int i = 1; i <= n; ++ i) std::cin >> v[i];\r\n    int cnt = 0;\r\n    int resL = 0, resR = 0;\r\n    for(int i = 1; i <= n; ++ i) {\r\n        if(v[i]) {\r\n            resL += v[i];\r\n            resR += v[i];\r\n            resR = std::min(resR, d);\r\n            if(resL > d) {\r\n                std::cout << -1 << '\\n';\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            resL = std::max(0ll, resL);\r\n            if(resL > resR) {\r\n                ++ cnt;\r\n                resL = 0;\r\n                resR = d;\r\n            }\r\n        }\r\n    }\r\n    std::cout << cnt << '\\n';\r\n}\r\n"
}