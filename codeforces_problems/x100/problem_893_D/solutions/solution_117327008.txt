{
    "id": 117327008,
    "contestId": 893,
    "creationTimeSeconds": 1621949594,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 893,
        "index": "D",
        "name": "Credit Card",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 893,
        "members": [
            {
                "handle": "cantThinkOfGoodUsername"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1511449500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 79,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 13721600,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nusing ll           = long long;\r\nusing ld           = long double;\r\nusing pii          = pair<int, int>;\r\nusing pll          = pair<long, long>;\r\nusing vi           = vector<int>;\r\nusing vl           = vector<long long>;\r\n\r\n#define pb             push_back\r\n#define F              first\r\n#define S              second\r\n#define sz(a)          int((a).size())\r\n#define all(a)         (a).begin(), (a).end()\r\n#define rall(a)        (a).rbegin(), (a).rend()\r\n#define sum(a)         ( accumulate((a).begin(), (a).end(), 0LL))\r\n#define lowb(a, x)     ( lower_bound((a).begin(), (a).end(), (x)) - (a).begin())\r\n#define uppb(a, x)     ( upper_bound((a).begin(), (a).end(), (x)) - (a).begin())\r\n#define yes            cout << \"YES\" << endl\r\n#define no             cout << \"NO\"  << endl\r\n\r\nvoid fastIO() { ios_base::sync_with_stdio(false); cin.tie(NULL); }\r\n\r\nconst ll mod = 1e9 + 7;\r\n\r\ntemplate<bool returnMax, bool returnIndex>\r\nstruct SparseTable {\r\n    int n, k;\r\n    vl a;\r\n    vector<vector<int>> st;\r\n\r\n    void init(vl a) {\r\n        this->a = a;\r\n        n = (int) a.size();\r\n        k = lg(n);\r\n        st.assign(n, vector<int>(k + 1));\r\n        build();\r\n    }\r\n\r\n    int lg(int x) { return 31 - __builtin_clz(x); }\r\n\r\n    int merge(int x, int y) {\r\n        if (returnMax) return a[x] >= a[y] ? x : y;\r\n        return a[x] < a[y] ? x : y;\r\n    }\r\n\r\n    void build() {\r\n        for (int i = 0; i < n; i++) st[i][0] = i;\r\n\r\n        for (int j = 1; j <= k; j++)\r\n            for (int i = 0; i + (1 << j) - 1 < n; i++)\r\n                st[i][j] = merge(st[i][j - 1], st[i + (1 << (j - 1))][j - 1]);\r\n    }\r\n\r\n    int query(int l, int r) {\r\n        int j = lg(r - l + 1);\r\n\r\n        int idx = merge(st[l][j], st[r - (1 << j) + 1][j]);\r\n        return (returnIndex ? idx : a[idx]);\r\n    }\r\n};\r\n\r\nvoid solve() {\r\n    ll n, d;\r\n    cin >> n >> d;\r\n\r\n    vl a(n);\r\n    for (ll &u: a) cin >> u;\r\n\r\n    vl pref(n);\r\n    pref[0] = a[0];\r\n    for (int i = 1; i < n; i++) {\r\n        pref[i] = pref[i - 1] + a[i];\r\n    }\r\n\r\n    SparseTable<1, 1> S;\r\n    S.init(pref);\r\n\r\n    ll add = 0, ans = 0;\r\n\r\n    for (int i = 0; i < n - 1; i++) {\r\n        pref[i] += add;\r\n\r\n        if (a[i] == 0 && pref[i] < 0) {\r\n            a[i] = min(d - (pref[S.query(i + 1, n - 1)] + add), d - pref[i]);\r\n            pref[i] += a[i];\r\n\r\n            if (pref[i] < 0) {\r\n                cout << -1;\r\n                return;\r\n            }\r\n\r\n            add += a[i];\r\n            ans++;\r\n        }\r\n\r\n        if (pref[i] > d) {\r\n            cout << -1;\r\n            return;\r\n        }\r\n    }\r\n\r\n    pref[n - 1] += add;\r\n    if (a[n - 1] == 0 && pref[n - 1] < 0) ans++;\r\n\r\n    if (pref[n - 1] > d) {\r\n        cout << -1;\r\n        return;\r\n    }\r\n\r\n    cout << ans << endl;\r\n}\r\n\r\nint main() {\r\n    fastIO();\r\n\r\n    cout << setprecision(15) << fixed;\r\n\r\n    int t = 1;\r\n    // cin >> t;\r\n\r\n    while (t--) solve();\r\n\r\n    return 0;\r\n}\r\n"
}