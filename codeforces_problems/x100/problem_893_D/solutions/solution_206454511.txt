{
    "id": 206454511,
    "contestId": 893,
    "creationTimeSeconds": 1684504743,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 893,
        "index": "D",
        "name": "Credit Card",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 893,
        "members": [
            {
                "handle": "dimash1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1511449500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 12083200,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define fi first\r\n#define se second \r\n#define sz size()\r\n#define ll long long\r\n\r\nusing namespace std;\r\n\r\nconst int N = 1e6 + 123,MOD = 998244353;\r\nconst ll inf = 1e18,dx[] = {1,0,0,-1},dy[] = {0,-1,1,0};\r\n\r\nint n,a[N],d,p[N],s[N];\r\nvoid solve(){\r\n    cin >> n >> d;\r\n    for(int i = 1;i <= n;i++){\r\n        cin >> a[i];\r\n        p[i] = p[i - 1] + a[i];\r\n    }\r\n    s[n] = p[n];\r\n    for(int i = n - 1;i >= 1;i--){\r\n        s[i] = max(s[i + 1],p[i]);\r\n    }\r\n    ll sum = 0;\r\n    int res = 0;\r\n    for(int i = 1;i <= n;i++){\r\n        sum += a[i];\r\n        if(a[i]) continue;\r\n        if(sum > d){\r\n            cout << -1 << '\\n';\r\n            return;\r\n        }\r\n        if(sum < 0){\r\n            res++;\r\n            ll x = s[i + 1] - p[i];\r\n            if(x > d){\r\n                cout << -1 << '\\n';\r\n                return;\r\n            }\r\n            x = d - x;\r\n            sum = x;\r\n        }\r\n    }\r\n    cout << res << '\\n';\r\n}\r\nint main(){\r\n    cin.tie(0);ios_base::sync_with_stdio(0);\r\n    int T = 1;\r\n    //cin >> T;  \r\n    while(T--){\r\n        solve();    \r\n    }\r\n}"
}