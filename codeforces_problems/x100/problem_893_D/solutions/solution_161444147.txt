{
    "id": 161444147,
    "contestId": 893,
    "creationTimeSeconds": 1655877009,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 893,
        "index": "D",
        "name": "Credit Card",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 893,
        "members": [
            {
                "handle": "ruh_iziki"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1511449500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 19,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 2355200,
    "source": "#include <iostream>\r\n#include <string>\r\n#include <map>\r\n#include <vector>\r\n#include <set>\r\n#include <iterator>\r\n#include <math.h>\r\n#include <bits/stdc++.h>\r\n#define ll long long int\r\n#define ull unsigned long long int\r\n#define pb push_back\r\n#define mp make_pair\r\n#define MOD 1000000007;\r\n#include <algorithm>\r\n#include <cmath>\r\n#pragma GCC target (\"avx2\")\r\n#pragma GCC optimization (\"O3\")\r\n#pragma GCC optimization (\"unroll-loops\")\r\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    // int z,T;\r\n    // cin>>T;\r\n    // for(z=1;z<=T;z++)\r\n    // {\r\n            ll N,M;\r\n            cin>>N>>M;\r\n            ll a,b,c,i,j,k,ans = 0;\r\n\r\n            ll A[N],pref[N],max_pos[N+1];\r\n\r\n            a=0;\r\n\r\n            for(i=0;i<N;i++)\r\n            {\r\n                cin>>A[i];\r\n                a += A[i];\r\n                pref[i] = a;\r\n            }\r\n\r\n\r\n            max_pos[N-1] = pref[N-1];\r\n\r\n            for(i=N-2;i>=0;i--)\r\n            {\r\n                max_pos[i] = max(max_pos[i+1],pref[i+1]);\r\n            }\r\n\r\n            // ll counter = 0\r\n\r\n            // for(i=0;i<N;i++)\r\n            // {\r\n            //     if(A[i]==0)\r\n            //         counter++;\r\n            // }\r\n\r\n            ll added = 0;\r\n\r\n            ll sum =0;\r\n\r\n            for(i=0;i<N;i++)\r\n            {\r\n                if(A[i]!=0)\r\n                {\r\n                    sum += A[i];\r\n                    if(sum>M)\r\n                    {\r\n                        cout<<\"-1\\n\";\r\n                        return 0;\r\n                    }\r\n                }\r\n                else if(sum<0)\r\n                {\r\n                    ans++;\r\n                    \r\n                    if(i == N-1)\r\n                        break;\r\n                    \r\n                    b = max_pos[i] - pref[i];\r\n                    \r\n                    b = M - b;\r\n                    \r\n                    sum = b;\r\n\r\n                    if(sum<0)\r\n                    {\r\n                        cout<<\"-1\\n\";\r\n                        return 0;\r\n                    }\r\n                }\r\n            }\r\n\r\n            cout<<ans;\r\n\r\n\r\n            return 0;\r\n}\r\n"
}