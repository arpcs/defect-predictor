{
    "id": 201826762,
    "contestId": 1182,
    "creationTimeSeconds": 1681302410,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1182,
        "index": "D",
        "name": "Complete Mirror",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "hashing",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1182,
        "members": [
            {
                "handle": "TrivialMan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560258300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 46,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 10547200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define rep(i, a, b) for (int i = (a); i <= (b); ++i)\r\n#define rrep(i, a, b) for (int i = (a); i >= (b); --i)\r\n#define PB push_back\r\n#define ar2 array<int, 2>\r\n#define ar3 array<int, 3>\r\ntypedef long long LL;\r\n// typedef __int128 LLL;\r\nLL P = 998244353;\r\nconst LL INF = 2e18;\r\nconst int N = 1e5 + 5;\r\nmt19937 rng(time(0));\r\n\r\nint T, n, x, y, rt;\r\nint sz[N], a[N], v[N];\r\nvector<int> g[N];\r\n\r\nvoid dfs(int x, int fa) {\r\n    sz[x] = 1;\r\n    for (auto u : g[x])\r\n        if (u != fa) dfs(u, x), sz[x] += sz[u];\r\n    if (!rt && sz[x] * 2 >= n) rt = x;\r\n}\r\n\r\nbool check(int x, int fa, int d) {\r\n    if (!a[d]) a[d] = g[x].size();\r\n    if (a[d] && a[d] != g[x].size()) return false;\r\n    bool flag = true;\r\n    for (auto u : g[x])\r\n        if (u != fa) flag &= check(u, x, d + 1);\r\n    return flag;\r\n}\r\n\r\nint len1(int x, int fa, int d) {\r\n    if (x == rt) return d;\r\n    if (g[x].size() > 2) return -1;\r\n    return len1(g[x][0] == fa ? g[x][1] : g[x][0], x, d + 1);\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);\r\n    cin >> n;\r\n    rep(i, 1, n - 1) cin >> x >> y, g[x].PB(y), g[y].PB(x);\r\n    dfs(1, 0);\r\n\r\n    rep(i, 1, n) if (i == rt || g[i].size() == 1) {\r\n        int d = len1(i, 0, 0);\r\n        if (d >= 0 && !v[d]) {\r\n            v[d] = 1, memset(a, 0, sizeof a);\r\n            if (check(i, 0, 0)) return cout << i, 0;\r\n        }\r\n    }\r\n\r\n    return cout << -1, 0;\r\n}"
}