{
    "id": 181585253,
    "contestId": 1182,
    "creationTimeSeconds": 1668847975,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1182,
        "index": "D",
        "name": "Complete Mirror",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "hashing",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1182,
        "members": [
            {
                "handle": "quan7929"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560258300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 6451200,
    "source": "#include<bits/stdc++.h>\r\n#define rg register int\r\n#define ll long long\r\n#define ci const int\r\nusing namespace std;\r\ninline int read(){char ch(getchar());int res(0);while(ch<48||ch>57)ch=getchar();while(ch>=48&&ch<=57)res=(res<<1)+(res<<3)+(ch^48),ch=getchar();return res;}\r\nci N=1e5+5,mod=1e9+7,M=1.3e6;\r\nint n,p[N],len,siz[N],head[N],nx[N<<1],to[N<<1],tot,A,B,d[N],od[N],val[N];bool vis[M],ok[N];queue<int>q;\r\ninline void add(ci x,ci y){\r\n\tto[++tot]=y,nx[tot]=head[x],head[x]=tot;\r\n}\r\ninline int fd(ci st){\r\n\tq.push(st),memcpy(od,d,sizeof(d)),memset(d,0,sizeof(d));\r\n\twhile(!q.empty()){\r\n\t\tci x=q.front();q.pop();\r\n\t\tfor(rg i=head[x],y;i;i=nx[i])\r\n\t\t\tif(!d[y=to[i]])d[y]=d[x]+1,q.push(y);\r\n\t}\r\n\tint tmp=1;\r\n\tfor(rg i=2;i<=n;++i)if(d[i]>d[tmp])tmp=i;\r\n\treturn tmp;\r\n}\r\nvoid dfs(ci x,ci f){\r\n\tval[x]=siz[x]=ok[x]=1;\r\n\tfor(rg i=head[x],y,las=-1;i;i=nx[i])\r\n\t\tif((y=to[i])^f)\r\n\t\t\tdfs(y,x),siz[x]+=siz[y],val[x]+=(ll)val[y]*p[siz[x]]%mod,val[x]-=val[x]<mod?0:mod,\r\n\t\t\tok[x]&=(ok[y]&&(las==-1||las==val[y])),las=val[y];\r\n}\r\nstruct pr{\r\n\tint pos,val;\r\n\tpr(int pos=0,int val=0):pos(pos),val(val){}\r\n\tinline bool operator < (const pr &x)const{\r\n\t\treturn val<x.val;\r\n\t}\r\n}nd[N];\r\nint sumok,l;\r\ninline void ck(ci rt,ci x){\r\n\tif(sumok-ok[x]<l-1||!ok[x])return;\r\n\tif(!to[head[x]]||val[to[head[x]]]==(val[rt]-(ll)val[x]*p[siz[x]]%mod+mod)%mod){\r\n\t\tprintf(\"%d\",x);\r\n\t\texit(0);\r\n\t}\r\n}\r\ninline void pd(ci rt,ci tp){\r\n\tdfs(rt,0);\r\n\tif(ok[rt]){\r\n\t\tprintf(\"%d\",rt);\r\n\t\texit(0);\r\n\t}\r\n\tif(tp){\r\n\t\tfor(rg i=head[rt],x;i;i=nx[i])x=to[i],nd[++l]=pr(x,val[x]),sumok+=ok[x];\r\n\t\tsort(nd+1,nd+l+1);\r\n\t\tint rk=1;\r\n\t\tfor(rg i=2;i<=l;++i)rk+=nd[i].val!=nd[i-1].val;\r\n\t\tif(rk==1)for(rg i=1;i<=l;++i)ck(rt,nd[i].pos);\r\n\t\tif(rk==2){\r\n\t\t\tif(nd[1].val!=nd[2].val)ck(rt,nd[1].pos);\r\n\t\t\tif(nd[l].val!=nd[l-1].val)ck(rt,nd[l].pos);\r\n\t\t}\r\n\t}\r\n}\r\nint main(){\r\n\tn=read();\r\n\tfor(rg i=2;i<M&&len<n;++i){\r\n\t\tif(!vis[i])p[++len]=i;\r\n\t\tfor(rg j=1;j<=len&&i*p[j]<M;++j){\r\n\t\t\tvis[i*p[j]]=1;\r\n\t\t\tif(i%p[j]==0)break;\r\n\t\t}\r\n\t}\r\n\tfor(rg i=1,x,y;i^n;++i)x=read(),y=read(),add(x,y),add(y,x);\r\n\tB=fd(A=fd(1)),pd(A,0),pd(B,0);\r\n\tif(d[B]%2==0){\r\n\t\tint mid=0;\r\n\t\tfor(rg i=1;i<=n;++i)\r\n\t\t\tif(d[i]==(d[B]>>1)&&od[i]==d[i]){\r\n\t\t\t\tmid=i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\tif(mid==0)return -1;\r\n\t\tpd(mid,1);\r\n\t}\r\n\tputs(\"-1\");return 0;\r\n}"
}