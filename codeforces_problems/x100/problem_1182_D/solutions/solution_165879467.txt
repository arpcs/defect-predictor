{
    "id": 165879467,
    "contestId": 1182,
    "creationTimeSeconds": 1658919564,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1182,
        "index": "D",
        "name": "Complete Mirror",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "hashing",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1182,
        "members": [
            {
                "handle": "Unknown_F233"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560258300
    },
    "programmingLanguage": "Python 3",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define LL long long\r\n\r\n#define MAXN 100002\r\nint nxt[MAXN*2],to[MAXN*2];\r\nint head[MAXN],g_cnt;\r\nvoid addEdge(int u,int v) {\r\n\tnxt[++g_cnt]=head[u],to[g_cnt]=v,head[u]=g_cnt;\r\n}\r\n\r\nint n;\r\nint siz[MAXN],fa[MAXN];\r\nvoid dfs(int u,int fr) {\r\n\tsiz[u]=1;\r\n\tfa[u]=fr;\r\n\tfor(int i=head[u]; i; i=nxt[i]) {\r\n\t\tint v=to[i];\r\n\t\tif(v==fr)continue;\r\n\t\tdfs(v,u);\r\n\t\tsiz[u]+=siz[v];\r\n\t}\r\n}\r\nbool check(int u) {\r\n\tint sel=siz[1]-siz[u];\r\n\tif(siz[u]==1)return 0;\r\n\tfor(int i=head[u]; i; i=nxt[i]) {\r\n\t\tint v=to[i];\r\n\t\tif(v==fa[u])continue;\r\n\t\tif(sel!=siz[v])return 0;\r\n\t}\r\n\treturn 1;\r\n}\r\n\r\nint siz1[MAXN];\r\nbool f;\r\nvoid dfs1(int u,int fr) {\r\n\tsiz1[u]=1;\r\n\tint last=0;\r\n\tfor(int i=head[u]; i; i=nxt[i]) {\r\n\t\tint v=to[i];\r\n\t\tif(v==fr)continue;\r\n\t\tlast=v;\r\n\t\tdfs(v,u);\r\n\t\tsiz1[u]+=siz1[v];\r\n\t\tif(last!=0&&siz1[v]!=siz1[last]) {\r\n\t\t\tf=0;\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n}\r\nbool check1(int u) {\r\n\tf=1;\r\n\tdfs1(u,0);\r\n\treturn f;\r\n}\r\nint main() {\r\n#ifdef DEBUG\r\n\tfreopen(\"input.txt\",\"r\",stdin);\r\n#endif\r\n\tscanf(\"%d\",&n);\r\n\tint u,v;\r\n\tfor(int i=1; i<n; i++) {\r\n\t\tscanf(\"%d%d\",&u,&v);\r\n\t\taddEdge(u,v);\r\n\t\taddEdge(v,u);\r\n\t}\r\n\tdfs(1,0);\r\n\tfor(int u=1; u<=n; u++) {\r\n\t\tif(check(u)&&check1(u)) {\r\n\t\t\tcout<<u<<\" \";\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\tcout<<-1;\r\n\treturn 0;\r\n}\r\n"
}