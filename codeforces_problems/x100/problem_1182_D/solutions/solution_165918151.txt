{
    "id": 165918151,
    "contestId": 1182,
    "creationTimeSeconds": 1658941505,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1182,
        "index": "D",
        "name": "Complete Mirror",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "hashing",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1182,
        "members": [
            {
                "handle": "satyabrat369"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560258300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 234,
    "memoryConsumedBytes": 6348800,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <map>\r\n#include <cstring>\r\n#include <stack>\r\n#include <queue>\r\n#include <cmath>\r\n#include <climits>\r\n#include <algorithm>\r\n#include <set>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <bits/stdc++.h>\r\n#define pb push_back\r\n#define ll long long int\r\n#define F first\r\n#define S second\r\n \r\n#define md1 1000000007\r\n#define md2 998244353\r\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\r\n \r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n\r\nint n,rt,Mx,reqRt,arr[100005],ans;\r\nvector<int> vec[100005];\r\nvoid dfs(int x,int p,int d){\r\n    arr[d]=x;\r\n    if(vec[x].size()==1){\r\n        if(d>Mx){\r\n            Mx=d;\r\n            reqRt=arr[(d+1)/2];\r\n        }\r\n    }\r\n    for(int i:vec[x]){\r\n        if(i==p)continue;\r\n        dfs(i,x,d+1);\r\n    }\r\n}\r\nvoid dfs2(int x,int p,int d){\r\n    if(arr[d]==-1)arr[d]=vec[x].size();\r\n    if(arr[d]!=vec[x].size())ans=-1;\r\n    \r\n    for(int i:vec[x]){\r\n        if(i==p)continue;\r\n        dfs2(i,x,d+1);\r\n    }\r\n}\r\nint main(){\r\n    cin>>n;\r\n    if(n==1){\r\n        cout<<\"1\";\r\n        return 0;\r\n    }\r\n    for(int i=1,u,v;i<n;i++){\r\n        cin>>u>>v;\r\n        vec[u].pb(v);\r\n        vec[v].pb(u);\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        if(vec[i].size()==1){\r\n            rt=i;\r\n            break;\r\n        }\r\n    }\r\n    dfs(rt,-1,1);\r\n    ans=reqRt;\r\n    for(int i=1;i<=n;i++)arr[i]=-1;\r\n    dfs2(reqRt,-1,1);\r\n    cout<<ans;\r\n    return 0;\r\n}"
}