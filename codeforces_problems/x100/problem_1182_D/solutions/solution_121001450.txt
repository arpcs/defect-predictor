{
    "id": 121001450,
    "contestId": 1182,
    "creationTimeSeconds": 1625123265,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1182,
        "index": "D",
        "name": "Complete Mirror",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "hashing",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1182,
        "members": [
            {
                "handle": "exzang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560258300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 46,
    "timeConsumedMillis": 139,
    "memoryConsumedBytes": 14336000,
    "source": "// ........*,oOooOOOOoo*....****,ooooooooOOOOoooooooooooOOOOOOOOOOOOO@@OOOOOOOO@@@OOOOOOOOOO@@@@OOOOOOOo*..............*******............\r\n// ..........*,ooooOOOo\\*******]/oooooooOOOOooooooooooooOOOOO@@@@@@OOOOOOOOOOOOOOOOOOOOOOOOO@@@@OOOOOOO`...........**********.............\r\n// ................*[oooo`****=oooOOOOOOOOOOooOOOOooooooOOOOOOO@@OOOoOOOOOoooOOOOOOOOOOOOOOOOOOOOOOOOOo*........*]o\\`***...........***....\r\n// ...................*[oo*****ooOOOOOOOOOOOOOOOOOoooooOOOOOOOOOOOOooooOOOOoooooOOOOOOOOOOOOOOOOOOOOOO^......*,oOOOO^*.......********...**\r\n// .....................*******=ooOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOoOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOo*....*/OOOOOO/*......***/o`***..**,o\r\n// .......................*****=oooooOOOOOOOOOOOO@OOOO@@@@@@@@@@@@OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO^*..*/OOO@OOo/*......**/oooo**..**,oo\r\n// ........................***/ooooOOOOOOOOOOOOO@@@@@@@@@@@@@@[.  .[@@@@@@@@OOOOOOO@OOOOOOOOOOOOOOOOoo`*=oOOOOOOO^*......**oooooo^****/oOO\r\n// ........................*=oOOOOOOOOOOOOOOOOOOO@@@@@@@@@O[    ......\\@@@@@@@@O@OOOO@OOOOOOOOOOOoOooOooOOOOOOOOo^.....*,oooooooo^**/oOOOo\r\n// .......................**oOOOOOOOOOOOOOOOOOOOOO@@@@@O[       /O].....[@@@@@@@@@@@@@@@@O@OOOOOOOOOOOOOO@@@@@@OO^....*/oOOoo`****oooooo[*\r\n// ......*****............*,oOOOOOOOOOOOOOOOOOO@OO@@O/.       ,@@@@@O`.*...\\@@@@@@@@@@@@@@@@@OOOOOOOOOOO@@@@@@@@Oo*.**ooOOOo\\****[*[******\r\n// ......*****............**\\oOOOOOOOOOOOoooOOOO@O/`      ..........     ....,\\O@@@@@@@@@@@@@@@@OOOOOOOO@@@@@@@OOo^,/oOOOOOoo]oo/***...*/o\r\n// ..........*....***********[ooOOOOOOOoOOO*,OOO/.     ...........  .      .....,\\OO@@@@@@@@@@@@@@@@@@OOOO@@@OOOOOoooOOOOOOOOooo**..**/OOO\r\n// ..............******oo\\`*****,*[oooOOOOOOOO[.   ....,/`....   ..    ...    .....*\\OO@@@@@@@@@@@@@@@@@OOOOOOOOOOOOOOOOOOOOOo/**.**/OOO@O\r\n// ..............******=o/***......*,oOOOO[[.    .**...                      .  .....*[/OOO@@@@@@@@@@@@@@@@OO@@OOooOOOOOOOOOO/*..,oOO@@OOO\r\n// ..............*****,/***.........*,`\\*..   .**..                             ........*,\\\\OO@@@@@@@@@@@@@@@@@@O^**,\\ooooOoo`**,oOO@OOOOO\r\n// ..............***,o`***........           ...                                  .,\\`...,o/OOOO@@@@@@@@@@@@@@@@@@O*...**/oo\\]oooOOOOOOOOO\r\n// ..............*=ooo***......      .,]OO\\`.  ......                                .,O] .,OOOOOOO@@@@@@@@@@@@@@@@O\\*,]ooOOOOOOOOOOOOOOOO\r\n// ..**........**=ooo`**......     .O@@@@@@@^.....   ...                               .,O\\  ,OOOOOOO@@@@@@@@@@@@@@@@OOOOOOO@O@@OOOOOOOOOO\r\n// ............**ooo^**.............,[[@/[`.          ...                                .,O\\.  \\OOOOOO@@@@@@@@@@@@@@@@OO@@@@@@@@@OOOOOOOO\r\n// .............*=oo^**.......=O@\\**...                 ..                                ...\\O` ,/OOOOO@@@@@@@@@@@@@@@@@@@@@@@@@@@OOOOOOO\r\n// ..*.........**oooo**.......O@@@^.    ..........      ..                                 ....[O@\\\\`[oOOO@@@@@@@@@@@@@@@@@@@@@@@@@OOOO@OO\r\n// .**........****,`***....  .\\@/. ...,/OOOOOOOOOOO]..  ..                                     ..,\\@\\o`.=OOO@@@@@@@@@@@@@@@@@@@@@@@O@@@@@@\r\n// *****.........**.........*.*..,ooo`          ,[O@@O`. .                                          ,\\Oo`.,OO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n// `***..........*.......,**.. .,oO`       ..      ,OO@^                                                       ,\\@@@@@@@@@@@@@@@@@@@OOOOOO\r\n// ^********..**]`*....,^*.   ./O/   ,/O@@@@@@@^. .. ./.                                               .]//[*[\\.  \\@@@@@@@@@@@@@OOOOOOOOOO\r\n// ****=oOoooooOOo^..,o\\`    ./OO` .OO@@@@@@@@@@@@O[.                                              .  .\\/.. .....  @@@@@@@@@@@OOOOOOOOOOOO\r\n// ...*\\OOOOOOOOOo^*..\\^    .*OOO. =O@@@@/[.                                                    ....../.      ...  =@@@@@@@@@@@OOOOOOOOOOo\r\n// .....,OOOOOOOOo`*....   ..=O@O .=/`                                   ...                         .OO[.    ... ./@@@@@@@@@@@/`*........\r\n// ......,oOOOOOOo*....   ....O@@\\.                        .            .........           .]`.....             ./@@@@@@@@@@@O*..........\r\n// ........*oOOOOo^*...  .....\\O@` ...                 ..........    .............. ........=OOOOOO\\`.........]]`\\@@@@@@@@@@@@@O\\]]oooOOOO\r\n// **...**]ooOOOOOo*... ......,O^..                .........................................=OOOOOOOOOOOOOOOOOO@@`\\@@@@@@@@@@@@OOOO@@@@@@@\r\n// o/`****/oOOOOOOOo`*.........*..            ..............................................***[\\oooOOoOOOOOOOOO@@.=@@@@@@@@@@@@OO@@@@@@@@\r\n// .......=OOOOOOOO[[[..... ....      ...........********............................ .............*****,[ooOOOOO@@O/@@@@@@@@@@@OO@@@@@@@@\r\n// .......................    .    .......**************............................ ...................***=oO@@OOO@@@@@@@@@@@@@OO@@@@@@@@\r\n//        .................     .......**/]**,\\o^***.....................................................**,oOOOOOO@@@@@@@@@@@@@OO@@@@@@@@\r\n// .............*]]]]/oo`...   ...*****/o[**[^\\[**......................................................***]oOOOOO@O@@@@@@@@@@@@OO@@@@@@@@\r\n// oooo]]]******,oooOOOOO.......**/]oooo^*,/o/`*....................................  ....................*ooOOOOOOO@@@@@@@@@@@@OO@@@@@@@@\r\n// OOOOooo]`******\\oOOOOO^.....**]oooooooooo`***....................................  ..     ..  .........,oOOOO@@@@@@@@@@@@@@@OOOO@@@@@@@\r\n// OOOOOOOo/*****,oOOOOOoo\\....=oOOOOOOOOoo^****..................................               ........*=oOOOO@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n// OOOOOOOo*****=oOOOOOOOOO\\...*oOOOOOOOooo\\****................................                 ........*ooOOO@@@@@@@@@@@@@@@@@@@@@OOOO@@\r\n// OOOOOOOo****=oooooOOOOOOOO`**,oOOOOOoooo^****................................                 .........*oOO@@@@@@@@@@@@@@@@@OOOOOOOO@OO\r\n// oOOOOOOo^***/oooooOOOOOOOOO\\**ooOOOOOOooo*****...............................                 .........*,oOO@@@@@@@@@@@@@@@OOOOOOOOOOOO\r\n// ,oOOOOOOo^*=ooooOOOOOOOOOOOOO\\=ooOOOOOoooo`***..............................                  ..........=oOO@@@@@@@@@@@@@@@@@OOOOOOOOOO\r\n// *ooOOOOOOooooooOOOOOOOOOOOOOOOO/ooOOOOoooo\\*****............................                 ..........*=oOO@@@@@@@@@@@@@@@@@@@@OOOOOOO\r\n// \\ooOOOOOOoooooooOOOOOOOOOOOOOOOOoooOOOOooo*******.................        ....                ........**oOOO@@@@@@@@@@@@@@@@@@@@@@OOOOO\r\n// oooOOOOOOOooooooOOOOOOOOOOOOOOOOOO/oOOOOoo^******..............                                .......*=oOO@@@@@@@@@@@@@@@@@@@@@@@@@@@O\r\n// oooOOOOOOOOoooooOOOOOOOOOO@@OOOOOOOOooOOOo\\,**..............        .                           ......*oOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n// ooOOOOOOOOooooooOOOOOOOOOO@@@OOOOOOOOOooOOo\\**............                                           .`/OO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n// ooOOOOOOOOooooOOOOOOOOOOOO@@@OOOOOOOOO`.ooOOo**......                                                    \\@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n// OOOOOOOOOOOOOOOOOO@@@OOOOOOOOOOOOOOOOOo*OOOooo`.....                                                      ,@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n// @@@@@OOOOO@@@@@@@@@@@@@@OOOOOOOOOOOOOOOO/OOOOoo..     ......                                                ,\\@@@@@OOO@@@@@@@@@@@@@OOOO\r\n// @@@@@@@@@OOO@@@@@@@@@@@@OOOOOOOOOOOOOOOOOooOOOo`.    .........                                                ,\\@OOOOOOOOO@@@@@@@OOOOOO\r\n// @@@@@@@@@@@@@@@@@@OOOOOOOOOOOOOOOOOOOOOOOOO^,Oo*..............      . .                                          \\oooooOOOO@@@@@OOOOOOO\r\n// @@@@OOOOO@@@@@@@@@OOOOOOOOOOOOOOOOOO@@@@@@@OOOo^*****.........    ........                                ..,`[O^./,\\[\\ooOO@@@@@@OOOOOO\r\n// O@OOOOOOO@@@@@@@OOOOOOOOOOOOOOOOOO@@@@@@@@@@@@@o.*****......................                   ]]]]]]/o[*]]]]/OOoo`*****`*,]]o\\,[`*....\r\n// O@@OOOOO@@@@@@@OOOOOOOOOOOOOOOOO@@@@@@@@@@@@@@@O.*****....................                ,]OOOOOO\\O]O@@@OOOOOOOOOO/oOOOOOOo[*]ooo\\oooo\r\n// OOOO@OOO@@@@@@OOOOOOOOOOOOOOOO@@@@@@@@@@@@@@@@OO...*....................               /OOO@/O^\\O]@@@@@@@@@@OOOOOOOOOOOOo\\oOOOooOOOOOOo\r\n// OOOOOO@@@@@@@@OOOOOOoooooOOOOOOOO/[[[[[[[`**........*.................             .,OOOO\\O/O^O@@@@@@@@@@@@@OOOOOOOOO\\OOOOOOooOOOOOoooo\r\n// OOOOOOOOo/[[[[`**...................................**..............       ]]]]OOOOOO/OOO\\,O@@@@@@@@@@@@@OOOOOOOooOOOOOOOOoOOOOOOooOooo\r\n// ....................................................***...........  ,]]/OOOOOO@OOO\\OoO`/@@@@@@@@@@@@@@OOOOOOoOOOOO@@OOOOoOOOOOooOOOOOOO\r\n// .............................................  .`....****......  .`=^OOOOoOOO@oOOO\\]@@@@@@@@@@@@@@@OOOOOOOOOO@@@@@OOOOOOOOOOOOOOOOOOOO@\r\n// ...........................****************.   .O^....***.... ...,OO\\^\\OOO\\OOOO/O@@@@@@@@@@@@@@@@@@OOOO@@@@@@@@@@@OOOOO@@OOOOOOOOOOOO@@\r\n// ..............******.....******/ooo]`****.      .\\`....***.. `=*OO*O.=*O/OO/,O@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OOOOO@@@OOOOOOO@@@OO@@@\r\n// .............*****........*****[oOoo[**.     ]   .\\`.....*. \\`\\/^,\\/\\OO\\^/O@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OOOO@@@@OOOOOOO@@@@@@@@@\r\n// ...........******.....****........*....   /@@@@\\   \\`......^/OO,\\]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OOOO@@@@OOOOOO@@@@@@@@@@@\r\n// .************,[***..****.............. ,OO@O@@@@@`   `....@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OOOO@@@@@@OO@OO@@@@@@@@@@@@\r\n// ...*......................     ...... ,OOO@@@@@@@@O. ,^*..@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OOOO@@@@@@@O@@O@@@@@@@@@@@@O\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=1e5+5;\r\nvector<int> e[N];\r\nint n,dis[N],fa[N],lst[N];\r\nvoid dfs(int u,int fath){\r\n\tdis[u]=dis[fath]+1;\r\n\tfa[u]=fath;\r\n\tfor(int v:e[u])\r\n\t\tif(v!=fath) dfs(v,u);\r\n}\r\nint findrt(){\r\n\tdfs(1,0);\r\n\tint mx=*max_element(dis+1,dis+n+1),s=0;\r\n\tfor(int i=1;i<=n;++i) \r\n\t\tif(mx==dis[i]) s=i;\r\n\tdfs(s,0);\r\n\tmx=*max_element(dis+1,dis+n+1);\r\n\tint t=0;\r\n\tfor(int i=1;i<=n;++i)\r\n\t\tif(mx==dis[i]) t=i;\r\n\tvector<int> ans;\r\n\twhile(t) ans.push_back(t),t=fa[t];\r\n\treturn ans[ans.size()/2];\r\n}\r\nvoid check(int x){\r\n\tdfs(x,0);\r\n\tmemset(lst,0,sizeof(lst));\r\n\tfor(int i=1;i<=n;++i){\r\n\t\tint p=dis[i];\r\n\t\tif(lst[p]!=0 && lst[p]!=e[i].size()) return;\r\n\t\tlst[p]=e[i].size();\r\n\t}\r\n\tcout<<x<<\"\\n\",exit(0);\r\n}\r\nint krt;\r\nbool checkline(int u,int fath){\r\n\tif(e[u].size()>2) return 0;\r\n\tdis[u]=dis[fath]+1;\r\n\tif(e[u].size()==1) return krt=u,1;\r\n\tint fl=1;\r\n\tfor(int v:e[u])\r\n\t\tif(v!=fath) fl&=checkline(v,u);\r\n\treturn fl;\r\n}\r\nsigned main(){\r\n\tios::sync_with_stdio(false);\r\n\tcin>>n;\r\n\tfor(int i=1;i<n;++i){\r\n\t\tint u,v;cin>>u>>v;\r\n\t\te[u].push_back(v),e[v].push_back(u);\r\n\t}\r\n\tint rt=findrt(),las=-1,cnt=0;\r\n\tcheck(rt);\r\n\tdis[rt]=1;\r\n\tfor(int v:e[rt])\r\n\t\tif(checkline(v,rt)){\r\n\t\t\tif(dis[krt]==las) continue;\r\n\t\t\t++cnt,las=dis[krt];\r\n\t\t\tcheck(krt);\r\n\t\t\tif(cnt>=2) break;\r\n\t\t\tdis[rt]=1;\r\n\t\t}\r\n\tcout<<\"-1\\n\";\r\n\treturn 0;\r\n}\r\n",
    "defect_evaluation_v4": {
        "good solution": 70,
        "wrong solution": 30,
        "compilation error": 0,
        "runtime error": 0
    },
    "category_evaluation": {
        "mathematics": 5,
        "dynamic programming": 35,
        "bit manipulation": 0,
        "greedy": 20,
        "brute force": 45,
        "graphs": 85,
        "sortings": 5,
        "search": 15,
        "trees": 80,
        "strings": 0,
        "number theory": 0,
        "combinatorics": 0,
        "two pointers": 0,
        "geometry": 0,
        "shortest paths": 20,
        "divide and conquer": 0,
        "probabilities": 0,
        "data structures": 85,
        "game theory": 0,
        "2d, 3d": 0,
        "recursive": 95,
        "well-commented": 90,
        "self-documenting": 85,
        "complex": 80,
        "readable": 85,
        "well-named": 90,
        "efficient": 60,
        "reusable": 60,
        "documented": 90,
        "good error-handling": 85,
        "good solution": 95,
        "compilation error": 0,
        "runtime error": 0
    },
    "defect_evaluation_gpt4_v4": {
        "good solution": 90,
        "wrong solution": 5,
        "compilation error": 0,
        "runtime error": 5
    }
}