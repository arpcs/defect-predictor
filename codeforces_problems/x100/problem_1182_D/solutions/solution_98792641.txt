{
    "id": 98792641,
    "contestId": 1182,
    "creationTimeSeconds": 1605690184,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1182,
        "index": "D",
        "name": "Complete Mirror",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "hashing",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1182,
        "members": [
            {
                "handle": "LBR_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560258300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 46,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 9830400,
    "source": "#include<bits/stdc++.h>\r\n#define Pll pair<long long,long long>\r\n#define P pair<int,int>\r\n#define fi first\r\n#define se second\r\n#define D double\r\n#define ll long long\r\n#define MID (L+R)>>1\r\n#define SZ(x) (int)(x).size()\r\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\r\n#define ROF(i,a,b) for(int i=a;i>=b;i--)\r\n#define MAX(x,y) x=max(x,y)\r\n#define MIN(x,y) x=min(x,y)\r\n#define all(a) a+1,a+n+1\r\n#define ALL(a) a.begin(),a.end()\r\n#define POS(a,b,c) lower_bound( a+1 , a+b+1 , (c) ) - a\r\n#define pb push_back\r\n#define read(x) scanf(\"%d\",&x)\r\n#define FLUSH cout.fflush()\r\n#define notfather if(v==fa)continue\r\nusing namespace std;\r\nvector<int> g[100001];\r\nll s[100001];\r\nint n;\r\nint mod=1e9+7;\r\n\r\nvoid dfs1(int u,int fa)\r\n{\r\n    for(auto v:g[u])\r\n    {\r\n        notfather;\r\n        dfs1(v,u);\r\n    }\r\n    ll val=0;\r\n    for(auto v:g[u])\r\n    {\r\n        notfather;\r\n        if(val==0)val=s[v];\r\n        else if(val!=s[v])val=-1;\r\n    }\r\n    if(val==-1)s[u]=val;\r\n    else s[u]=(val*n+SZ(g[u]))%mod;\r\n}\r\nint ans=0;\r\nvoid dfs2(int u,int fa,ll val)\r\n{\r\n  //  cout<<\"dfs2 : \"<<u<<\"  val: \"<<val<<endl;\r\n    if(val==-1)return;\r\n    int dif=0;\r\n    for(auto v:g[u])\r\n    {\r\n        notfather;\r\n        if(dif==0&&s[v]!=val)dif=v;\r\n        else if(s[v]!=val)dif=-1;\r\n    }\r\n    val=(val*n+SZ(g[u]))%mod;\r\n    if(dif==-1)return;\r\n    if(dif!=0)dfs2(dif,u,val);\r\n    else\r\n    {\r\n        ans=u;\r\n        return;\r\n    }\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    read(n);\r\n    if(n==1)\r\n    {\r\n        cout<<1;\r\n        return 0;\r\n    }\r\n    FOR(i,2,n)\r\n    {\r\n        int u,v;\r\n        read(u);\r\n        read(v);\r\n        g[u].pb(v);\r\n        g[v].pb(u);\r\n    }\r\n\r\n    int u=0;\r\n    FOR(i,1,n)if(SZ(g[i])>=2)u=i;\r\n //   FOR(i,1,n)cout<<i<<\"  -  \"<<s[i]<<endl;\r\n  //  cout<<\" :::::::::::: u \"<<u<<endl;\r\n\r\n    dfs1(u,0);\r\n    dfs2(u,0,s[g[u][0]]);\r\n    dfs2(u,0,s[g[u][1]]);\r\n    if(ans==0)ans--;\r\n    cout<<ans;\r\n}\r\n/*\r\n10\r\n1 2\r\n2 3\r\n2 6\r\n3 4\r\n4 5\r\n4 7\r\n3 8\r\n8 9\r\n8 10\r\n*/\r\n"
}