{
    "id": 96983306,
    "contestId": 1182,
    "creationTimeSeconds": 1603880602,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1182,
        "index": "D",
        "name": "Complete Mirror",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "hashing",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1182,
        "members": [
            {
                "handle": "J_B_Y"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560258300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 46,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 10956800,
    "source": "#include<bits/stdc++.h>\r\n#define ll long long\r\n#define ld long double\r\n#define ull unsigned ll\r\n#define db double\r\n#define pint pair<int,int>\r\n#define mk make_pair\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define ins insert\r\n#define fi first\r\n#define se second\r\n#define Rep(x,y,z) for(int x=y;x<=z;x++)\r\n#define Red(x,y,z) for(int x=y;x>=z;x--)\r\nusing namespace std;\r\nconst int MAXN=1e5+5;\r\nchar buf[1<<12],*pp1=buf,*pp2=buf,nc;int ny;\r\ninline char gc() {return pp1==pp2&&(pp2=(pp1=buf)+fread(buf,1,1<<12,stdin),pp1==pp2)?EOF:*pp1++;}\r\n//inline char gc(){return getchar();}\r\ninline int read(){\r\n\tint x=0;for(ny=1;nc=gc(),(nc<48||nc>57)&&nc!=EOF;)if(nc==45)ny=-1;if(nc<0)return nc;\r\n\tfor(x=nc-48;nc=gc(),47<nc&&nc<58&&nc!=EOF;x=(x<<3)+(x<<1)+(nc^48));return x*ny;\r\n}\r\nint n,rt,Mn,cnt,sz[MAXN],p[MAXN],d[MAXN],l[MAXN],flg;vector<int>G[MAXN];\r\nvoid dfs(int x,int fa){\r\n\tint Mx=0;sz[x]=1,d[x]=d[fa]+1;\r\n\tfor(auto y:G[x])if(y!=fa)dfs(y,x),Mx=max(Mx,sz[y]),sz[x]+=sz[y];\r\n\tMx=max(Mx,n-sz[x]),Mx<Mn?Mn=Mx,rt=x:0;\r\n}\r\nvoid dfs1(int x,int fa,int d){\r\n\tif(p[d]&&p[d]!=G[x].size())flg=0;else p[d]=G[x].size();\r\n\tfor(auto y:G[x])if(y!=fa)dfs1(y,x,d+1);\r\n}\r\nint dfs2(int x,int fa){\r\n\tif(G[x].size()==1)return x;if(G[x].size()>2)return 0;\r\n\tfor(auto y:G[x])if(y!=fa)return dfs2(y,x);\r\n}\r\ninline bool check(int x){flg=1,memset(p,0,sizeof(p)),dfs1(x,0,0);return flg;}\r\nint main(){\r\n//\tfreopen(\"std.in\",\"r\",stdin);\r\n//\tfreopen(\"std.out\",\"w\",stdout);\r\n\tn=read();\r\n\tif(n==1)return puts(\"1\"),0;\r\n\tRep(i,1,n-1){int x=read(),y=read();G[x].pb(y),G[y].pb(x);}\r\n\tMn=1e9,dfs(1,0);if(check(rt))return cout<<rt<<\"\\n\",0;dfs(rt,0);\r\n\tfor(auto y:G[rt])l[++cnt]=dfs2(y,rt);sort(l+1,l+cnt+1,[](int x,int y){return d[x]<d[y];});\r\n\tif(l[1]&&check(l[1]))return cout<<l[1],0;if(l[cnt]&&check(l[cnt]))return cout<<l[cnt],0;puts(\"-1\");\r\n\treturn 0;\r\n}\r\n\r\n\r\n\r\n"
}