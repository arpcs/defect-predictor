{
    "id": 233662504,
    "contestId": 1182,
    "creationTimeSeconds": 1700557131,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1182,
        "index": "D",
        "name": "Complete Mirror",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "hashing",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1182,
        "members": [
            {
                "handle": "ZhangZiZhuo2020"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560258300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 46,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 17100800,
    "source": "// LUOGU_RID: 136197679\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\nint n,rt,ok,mx,pos;\nint h[100005];\nint sz[100005];\nint msz[100005];\nint ind[100005];\nint dep[100005];\nvector <int> g[100005];\n\ninline void in(int &n){\n\tn=0;\n\tchar c=getchar();\n\twhile(c<'0' || c>'9') c=getchar();\n\twhile(c>='0'&&c<='9') n=n*10+c-'0',c=getchar();\n\treturn ;\n}\n\nvoid getroot(int u,int fa){\n\tsz[u]=1;\n\tfor(int v:g[u]){\n\t\tif(v==fa) continue;\n\t\tgetroot(v,u);\n\t\tsz[u]+=sz[v];\n\t\tmsz[u]=max(msz[u],sz[v]);\n\t}\n\tmsz[u]=max(msz[u],n-sz[u]);\n\tif(msz[u]<msz[rt]) rt=u;\n\treturn ;\n}\n\nvoid dfs(int u,int fa){\n\tif(!ok) return ;\n\tdep[u]=dep[fa]+1;\n\tif(!h[dep[u]]) h[dep[u]]=ind[u];\n\telse if(h[dep[u]]!=ind[u]){ok=0;return ;}\n\tfor(int v:g[u]){\n\t\tif(v==fa) continue;\n\t\tdfs(v,u);\n\t\tif(!ok) return ;\n\t}\n\treturn ;\n}\n\ninline bool check(int root){\n\tok=1;\n\tmemset(h,0,sizeof(h));\n\tdfs(root,0);\n\treturn ok;\n}\n\nvoid ddfs(int u,int fa){\n\tdep[u]=dep[fa]+1;\n\tsz[u]=1;\n\tmx=max(mx,dep[u]);\n\tif(mx==dep[u]) pos=u;\n\tfor(int v:g[u]){\n\t\tif(v==fa) continue;\n\t\tddfs(v,u);\n\t\tsz[u]+=sz[v];\n\t}\n\treturn ;\n}\n\ninline bool ifline(int u,int fa){\n\tmx=0;\n\tdep[fa]=0;\n\tddfs(u,fa);\n\treturn mx==sz[u];\n}\n\nint main(){\n\tin(n);\n\tfor(int i=1;i<n;i++){\n\t\tint u,v;\n\t\tin(u),in(v);\n\t\tg[u].push_back(v);\n\t\tg[v].push_back(u);\n\t\tind[u]++,ind[v]++;\n\t}\n\tsz[0]=msz[0]=n+1;\n\tgetroot(1,0);\n\tif(check(rt)){printf(\"%d\\n\",rt);return 0;}\n\tint las=0;\n\tfor(int u:g[rt]){\n\t\tif(!ifline(u,rt)) continue;\n\t\tint len=mx;\n\t\tif(las&&las!=len){\n\t\t\tif(check(pos)){printf(\"%d\\n\",pos);return 0;}\n\t\t\tbreak;\n\t\t}\n\t\tif(las==0){\n\t\t\tlas=len;\n\t\t\tif(check(pos)){printf(\"%d\\n\",pos);return 0;}\n\t\t}\n\t}\n\tputs(\"-1\");\n\n\treturn 0;\n}"
}