{
    "id": 169432476,
    "contestId": 1182,
    "creationTimeSeconds": 1661266967,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1182,
        "index": "D",
        "name": "Complete Mirror",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "hashing",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1182,
        "members": [
            {
                "handle": "Pratap"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560258300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 8704000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define ll long long int\r\n#define fixprecision(x) fixed << setprecision(x) \r\n#define pie 3.14159265358979323846\r\n#define pii pair<ll,ll>\r\n#define vt vector\r\n#define pb push_back\r\n#define mp make_pair\r\n#define pf push_front\r\n#define set0(x) memset(x,0,sizeof(x))\r\n#define setm1(x) memset(x,-1,sizeof(x))\r\n#define show(x) cout<< #x << \": \" << x << \"\\n\" \r\n#define all(a) a.begin(),a.end()\r\n#define sqre(a) ((a)*(a))\r\n#define ff(i,st,en) for(ll i=st;i<en;++i)\r\n#define siz(x) ((ll)x.size())\r\nconst ll INF=2000000000000000000,mod1=1000000007,mod2=998244353;\r\nll mod=mod1;\r\n\r\ntemplate <typename T>\r\nvoid _print(T x){ cout<< x ;}\r\ntemplate <typename T,typename V>\r\nvoid _print(pair<T,V> &p){ cout<< \"{\"; _print(p.first);cout<< \",\";_print(p.second); cout<< \"}\" ;}\r\n#define printlist(x) for(auto lstelem:x){ _print(lstelem); cout<< \" \";} cout<< \"\\n\"\r\n\r\nll powr(ll a,ll b){\r\n    ll res=1;\r\n    while(b){\r\n        if(b&1) res=(res*a)%mod;\r\n        a=(a*a)%mod;\r\n        b= (b>>1);\r\n    }\r\n    return res;\r\n}\r\n\r\n//x*a+y*b=gcd(a,b)\r\nvoid extended_euclidean(ll a,ll b,ll &x,ll &y){\r\n    if(b==0){\r\n        x=1;\r\n        y=0;\r\n        return;\r\n    }\r\n    extended_euclidean(b,a%b,x,y);\r\n    ll tmp=y;\r\n    y=x-(a/b)*y;\r\n    x=tmp;\r\n    return;\r\n}\r\n\r\nconst ll nmax=1e5+5;\r\nvt<vt<ll> > adj(nmax);\r\nll n,d;\r\nvt<ll> par(nmax);\r\n\r\nll getFarthestNode(ll node){\r\n    d=0;\r\n    list<ll> q;\r\n    q.pb(node);\r\n    vt<ll> used(n+1);\r\n    ll ept=node;\r\n    used[node]=1;\r\n    while(!q.empty()){\r\n        ll sz=q.size();\r\n        while(sz--){        \r\n            ll u=q.front();\r\n            ept=u;\r\n            q.pop_front();\r\n            for(ll v:adj[u]){\r\n                if(!used[v]){\r\n                    q.pb(v);\r\n                    used[v]=1;\r\n                    par[v]=u;\r\n                }\r\n            }\r\n        }\r\n        ++d;\r\n    }\r\n    return ept;\r\n}\r\n\r\nbool check(ll node){\r\n    list<ll> q;\r\n    vt<ll> used(n+1);\r\n    used[node]=1;\r\n    q.pb(node);\r\n    while(!q.empty()){\r\n        ll sz=q.size();\r\n        ll mx=-1,mn=nmax;\r\n        while(sz--){\r\n            ll u=q.front();\r\n            q.pop_front();\r\n            mx=max(mx,(ll)adj[u].size());\r\n            mn=min(mn,(ll)adj[u].size());\r\n            for(ll v:adj[u]){\r\n                if(!used[v]){\r\n                    q.pb(v);\r\n                    used[v]=1;\r\n                }\r\n            }\r\n        }\r\n        if(mx!=mn) return 0;\r\n    }\r\n    return 1;\r\n}\r\n\r\nint main(){    \r\n    if(strcmp(__FILE__,\"tempCodeRunnerFile.cpp\")==0) freopen(\"input.txt\",\"r\",stdin);\r\n    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n    cin>> n;\r\n    for(ll i=1;i<n;++i){\r\n        ll u,v; cin>> u >> v ;\r\n        adj[u].pb(v);\r\n        adj[v].pb(u);\r\n    }\r\n    ll e1=getFarthestNode(1);\r\n    \r\n    ll e2=getFarthestNode(e1);\r\n    if(check(e1)){\r\n        cout<< e1 ;\r\n        return 0;\r\n    }\r\n    else if(check(e2)){\r\n        cout<< e2 ;\r\n        return 0;\r\n    }\r\n\r\n    if(d%2==0){\r\n        cout<< \"-1\\n\";\r\n        return 0;\r\n    }\r\n\r\n    ll e3=e2,len=1;\r\n    while(len<(d+1)/2){\r\n        e3=par[e3];\r\n        ++len;\r\n    }\r\n    if(check(e3)) cout<< e3 ;\r\n    else cout<< -1 ;\r\n    return 0;\r\n}"
}