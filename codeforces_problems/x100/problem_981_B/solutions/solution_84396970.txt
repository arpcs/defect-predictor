{
    "id": 84396970,
    "contestId": 981,
    "creationTimeSeconds": 1592643073,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 981,
        "index": "B",
        "name": "Businessmen Problems",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1000,
        "tags": [
            "sortings"
        ]
    },
    "author": {
        "contestId": 981,
        "members": [
            {
                "handle": "JYAN01247"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1527432600
    },
    "programmingLanguage": "Java 11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 33,
    "timeConsumedMillis": 436,
    "memoryConsumedBytes": 13516800,
    "source": "\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\nimport java.math.*;\r\n \r\n\r\npublic class Main {\r\n\t\r\n\tstatic class FastReader \r\n    { \r\n        BufferedReader br; \r\n        StringTokenizer st; \r\n  \r\n        public FastReader() \r\n        { \r\n            br = new BufferedReader(new\r\n                     InputStreamReader(System.in)); \r\n        } \r\n  \r\n        String next() \r\n        { \r\n            while (st == null || !st.hasMoreElements()) \r\n            { \r\n                try\r\n                { \r\n                    st = new StringTokenizer(br.readLine()); \r\n                } \r\n                catch (IOException  e) \r\n                { \r\n                    e.printStackTrace(); \r\n                } \r\n            } \r\n            return st.nextToken(); \r\n        } \r\n  \r\n        int nextInt() \r\n        { \r\n            return Integer.parseInt(next()); \r\n        } \r\n  \r\n        long nextLong() \r\n        { \r\n            return Long.parseLong(next()); \r\n        } \r\n  \r\n        double nextDouble() \r\n        { \r\n            return Double.parseDouble(next()); \r\n        } \r\n  \r\n        String nextLine() \r\n        { \r\n            String str = \"\"; \r\n            try\r\n            { \r\n                str = br.readLine(); \r\n            } \r\n            catch (IOException e) \r\n            { \r\n                e.printStackTrace(); \r\n            } \r\n            return str; \r\n        } \r\n    } \r\n\t\r\n\tstatic int n, m;\r\n\tstatic HashMap<Integer, Integer> maps = new HashMap<>();\r\n\tstatic long total = 0;\r\n\t\r\n\tpublic static void main(String args[]) throws Exception {\r\n\t\tFastReader cin = new FastReader();\r\n\t\r\n\t\tn = cin.nextInt();\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tint index = cin.nextInt();\r\n\t\t\tint val = cin.nextInt();\r\n\t\t\tmaps.put(index, val);\r\n\t\t}\r\n\t\t\r\n\t\tm = cin.nextInt();\r\n\t\tfor (int i = 0; i < m; i++) {\r\n\t\t\tint index = cin.nextInt();\r\n\t\t\tint val = cin.nextInt();\r\n\t\t\tif (maps.containsKey(index)) {\r\n\t\t\t\tint temp = maps.get(index);\r\n\t\t\t\tmaps.put(index, Math.max(val, temp));\r\n\t\t\t} else {\r\n\t\t\t\tmaps.put(index, val);\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfor (Integer a : maps.keySet()) {\r\n\t\t\t\r\n\t\t\ttotal += maps.get(a);\r\n\t\t}\r\n\t\tSystem.out.println(total);\r\n\t}\r\n}"
}