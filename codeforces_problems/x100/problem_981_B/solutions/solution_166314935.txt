{
    "id": 166314935,
    "contestId": 981,
    "creationTimeSeconds": 1659250801,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 981,
        "index": "B",
        "name": "Businessmen Problems",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1000,
        "tags": [
            "sortings"
        ]
    },
    "author": {
        "contestId": 981,
        "members": [
            {
                "handle": "utchchhwas"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1527432600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 33,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 4300800,
    "source": "/**\r\n * \u201cGo ahead and live with your head held high. No matter how devastated \r\n *  you may be by your own weakness or uselessness, set your heart ablaze. \r\n *  Grit your teeth and look straight ahead. Even if you stop and crouch down, \r\n *  time won't wait for you or snuggle you and grieve along with you.\u201d - Kyojuro Renoku\r\n */\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n// utility macros\r\n#define sz(c) int(size(c))\r\n#define all(c) begin(c), end(c)\r\n#define rall(c) rbegin(c), rend(c)\r\n#define range(c, b, e) next(begin(c), b), next(begin(c), e)\r\n\r\n// debug utilities\r\n// #define ONLINE_JUDGE 1\r\n#ifndef ONLINE_JUDGE\r\n#define dbg(args...) { __dbg_print(__dbg_tokenize(#args), args); }\r\nvector<string> __dbg_tokenize(const string& s) {\r\n    const regex re(\"\\\\s*[,]\\\\s+\");\r\n    return vector<string>(sregex_token_iterator(s.begin(), s.end(), re, -1), sregex_token_iterator());\r\n}\r\ntemplate <typename... Args>\r\nvoid __dbg_print(const vector<string>& argsName, const Args&... args) {\r\n    auto itr = argsName.begin();\r\n    cerr << \">> \";\r\n    ((cerr << *itr++ << \" = \" << args << (itr != argsName.end() ? \", \" : \"\\n\")), ...);\r\n    cerr.flush();\r\n}\r\n#else\r\n#define dbg(args...)\r\n#endif\r\n\r\n// type aliases\r\nusing ll = long long;\r\n\r\n// globals\r\nconst ll MOD = 1'000'000'007;\r\n\r\n// utility functions\r\ntemplate <typename T> inline T ceil(T x, T y);\r\ntemplate <typename T1, typename T2> istream& operator>>(istream& is, pair<T1, T2>& p);\r\ntemplate <typename T1, typename T2> ostream& operator<<(ostream& os, const pair<T1, T2>& p);\r\ntemplate <typename T> istream& operator>>(istream& is, vector<T>& v);\r\ntemplate <typename T> ostream& operator<<(ostream& os, const vector<T>& v);\r\ntemplate <typename T, typename V> ostream& operator<<(ostream& os, const set<T, V>& st);\r\ntemplate <typename T, typename V> ostream& operator<<(ostream& os, const multiset<T, V>& mst);\r\ntemplate <typename T1, typename T2, typename V> ostream& operator<<(ostream& os, const map<T1, T2, V>& mp);\r\ntemplate <typename T1, typename T2, typename V> ostream& operator<<(ostream& os, const multimap<T1, T2, V>& mmp);\r\n\r\n\r\nvoid precalc() {}\r\n\r\nvoid solve() {\r\n\tint n; cin >> n;\r\n    vector<pair<int, int>> v;\r\n    for (int i = 0; i < n; ++i) {\r\n        int x, y; cin >> x >> y;\r\n        v.push_back({x, y});\r\n    }\r\n    int m; cin >> m;\r\n    for (int i = 0; i < m; ++i) {\r\n        int x, y; cin >> x >> y;\r\n        v.push_back({x, y});\r\n    }\r\n\r\n    sort(all(v));\r\n    ll s = 0;\r\n    for (int i = 0; i < sz(v); ) {\r\n        if (i < sz(v)-1 && v[i].first == v[i+1].first) {\r\n            s += v[i+1].second;\r\n            i += 2;\r\n        }\r\n        else {\r\n            s += v[i].second;\r\n            i += 1;\r\n        }\r\n    }\r\n    cout << s << \"\\n\";\r\n}\r\n\r\n\r\nint main() { \r\n\t// fast i/o\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(nullptr);\r\n\tcout.tie(nullptr);\r\n\r\n\t// file i/o\r\n\t// freopen(\"input.txt\", \"r\", stdin);\r\n\t// freopen(\"output.txt\", \"w\", stdout);\r\n\r\n\tint tc = 1;\r\n\t// cin >> tc;\r\n\r\n\tprecalc();\r\n\r\n\tfor (int t = 1; t <= tc; ++t) {\r\n\t\tsolve();\r\n\t\t// cout << endl;\r\n\t}\r\n\t// cout << \"All OK!\" << endl;\r\n\r\n\treturn 0;\r\n}\r\n\r\n\r\ntemplate <typename T> \r\ninline T ceil(T x, T y) {\r\n\treturn (x + y - 1) / y;\r\n}\r\n\r\ntemplate <typename T1, typename T2>\r\nistream& operator>>(istream& is, pair<T1, T2>& p) {\r\n    is >> p.first >> p.second;\r\n    return is;\r\n}\r\n\r\ntemplate <typename T1, typename T2>\r\nostream& operator<<(ostream& os, const pair<T1, T2>& p) {\r\n    os << \"(\" << p.first << \",\" << p.second << \")\";\r\n    return os;\r\n}\r\n\r\ntemplate <typename T>\r\nistream& operator>>(istream& is, vector<T>& v) {\r\n    for (auto& x : v) {\r\n        is >> x;\r\n    }\r\n    return is;\r\n}\r\n\r\ntemplate <typename T>\r\nostream& operator<<(ostream& os, const vector<T>& v) {\r\n    int i = 0, n = sz(v);\r\n    if (os.rdbuf() == cout.rdbuf()) {\r\n        for (; i < sz(v); ++i) {\r\n            os << v[i] << ((i != n-1) ? \" \" : \"\");\r\n        }\r\n    }\r\n    else {\r\n        os << \"[\";\r\n        for (; i < n; ++i) {\r\n            os << v[i] << ((i != n-1) ? \", \" : \"\");\r\n        }\r\n        os << \"]\";\r\n    }\r\n    return os;\r\n}\r\n\r\ntemplate <typename T, typename V>\r\nostream& operator<<(ostream& os, const set<T, V>& st) {\r\n    int i = 0, n = sz(st);\r\n    os << \"{\";\r\n    for (auto& x : st) {\r\n        os << x << ((i != n-1) ? \", \" : \"\");\r\n        ++i;\r\n    }\r\n    os << \"}\";\r\n    return os;\r\n}\r\n\r\ntemplate <typename T, typename V>\r\nostream& operator<<(ostream& os, const multiset<T, V>& mst) {\r\n    int i = 0, n = sz(mst);\r\n    os << \"{\";\r\n    for (auto& x : mst) {\r\n        os << x << ((i != n-1) ? \", \" : \"\");\r\n        ++i;\r\n    }\r\n    os << \"}\";\r\n    return os;\r\n}\r\n\r\ntemplate <typename T1, typename T2, typename V>\r\nostream& operator<<(ostream& os, const map<T1, T2, V>& mp) {\r\n    int i = 0, n = sz(mp);\r\n    os << \"{\";\r\n    for (auto& [k,v] : mp) {\r\n        os << \"{\" << k << \",\" << v << \"}\" << ((i != n-1) ? \", \" : \"\");\r\n        ++i;\r\n    }\r\n    os << \"}\";\r\n    return os;\r\n}\r\n\r\ntemplate <typename T1, typename T2, typename V>\r\nostream& operator<<(ostream& os, const multimap<T1, T2, V>& mmp) {\r\n    int i = 0, n = sz(mmp);\r\n    os << \"{\";\r\n    for (auto& [k,v] : mmp) {\r\n        os << \"{\" << k << \",\" << v << \"}\" << ((i != n-1) ? \", \" : \"\");\r\n        ++i;\r\n    }\r\n    os << \"}\";\r\n    return os;\r\n}\r\n"
}