{
    "id": 42528385,
    "contestId": 981,
    "creationTimeSeconds": 1536177046,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 981,
        "index": "B",
        "name": "Businessmen Problems",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1000,
        "tags": [
            "sortings"
        ]
    },
    "author": {
        "contestId": 981,
        "members": [
            {
                "handle": "Rushan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1527432600
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 0,
    "source": "import java.util.*\r\nimport kotlin.collections.HashMap\r\nimport kotlin.collections.HashSet\r\nimport kotlin.math.max\r\n\r\nfun main(args: Array<String>) {\r\n    if (args.isNotEmpty() && args[0] == \"debug\") {\r\n        System.setIn(object {}.javaClass.getResourceAsStream(\"/input.txt\"))\r\n    }\r\n    solve()\r\n}\r\n\r\n\r\nfun solve() {\r\n    val n = getIntList(1)[0]\r\n    val mapA = HashMap<Int, Int>()\r\n    repeat(n) {\r\n        val str = getIntList(2)\r\n        mapA[str[0]] = str[1]\r\n    }\r\n    val m = getIntList(1)[0]\r\n    var res = 0\r\n    repeat(m) {\r\n        val str = getIntList(2)\r\n        val aElem = mapA[str[0]]\r\n        if (aElem != null) {\r\n            res += max(aElem, str[1])\r\n            mapA.remove(str[0])\r\n        } else {\r\n            res += str[1]\r\n        }\r\n    }\r\n    res += mapA.values.sum()\r\n    println(res)\r\n}\r\n\r\nclass Pair(val first: Int, val second: Int)\r\n\r\nfun getIntList(n: Int = 10) = readLine()!!\r\n        .split(' ')\r\n        .map { Integer.parseInt(it) }\r\n        .toCollection(ArrayList(n))\r\n\r\nfun getIntStack() = readLine()!!\r\n        .split(' ')\r\n        .map { Integer.parseInt(it) }\r\n        .toCollection(LinkedList())\r\n\r\n"
}