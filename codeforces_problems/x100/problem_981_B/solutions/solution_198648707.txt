{
    "id": 198648707,
    "contestId": 981,
    "creationTimeSeconds": 1679502244,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 981,
        "index": "B",
        "name": "Businessmen Problems",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1000,
        "tags": [
            "sortings"
        ]
    },
    "author": {
        "contestId": 981,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1527432600
    },
    "programmingLanguage": "Java 17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "import java.util.*;\n\npublic class Main {\n\u00a0\u00a0\u00a0 public static void main(String[] args) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Scanner sc = new Scanner(System.in);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int norte = sc.nextInt();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int[] ingresosChem = new int[norte+1];\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for (int i = 1; i <= norte; i++) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int ai = sc.nextInt();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ingresosChem[i] = sc.nextInt();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int metro = sc.nextInt();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int[] ingresosTop = new int[metro+1];\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for (int j = 1; j <= metro; j++) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int bj = sc.nextInt();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ingresosTop[j] = sc.nextInt();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 int[][] soluciones = new int[norte+1][metro+1];\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for (int i = 1; i <= norte; i++) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 for (int j = 1; j <= metro; j++) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 soluciones[i][j] = Math.max(soluciones[i-1][j], soluciones[i][j-1]);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if (ingresosChem[i] != ingresosTop[j]) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 soluciones[i][j] = Math.max(soluciones[i][j], soluciones[i-1][j-1] + ingresosChem[i] + ingresosTop[j]);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 System.out.println(soluciones[norte][metro]);\n\u00a0\u00a0\u00a0 }\n}\n\t   \t\t  \t\t\t\t \t\t    \t\t\t\t  \t\t\t\t\t"
}