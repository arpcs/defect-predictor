{
    "id": 61807982,
    "contestId": 981,
    "creationTimeSeconds": 1570145286,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 981,
        "index": "B",
        "name": "Businessmen Problems",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1000,
        "tags": [
            "sortings"
        ]
    },
    "author": {
        "contestId": 981,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1527432600
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 33,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 6451200,
    "source": "#include <iostream>\n#include <cstring>\n#include<cstdio>\n#include <map>\n\n#define ll long long\n\nusing namespace std;\ninline int read() {\n    int x = 0, f = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9') {\n        if (ch == '-') f = -1;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9') {\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    return x * f;\n}\n\ninline ll read1() {\n    ll x = 0, f = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9') {\n        if (ch == '-') f = -1;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9') {\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    return x * f;\n}\n\n\n//**************************************\nint n, m;\nmap<int, int> ma;\n\nint main() {\n    cin >> n;\n    ll ans=0;\n    for(int i=0;i<n;i++) {\n        int a, b;\n        a = read();\n        b = read();\n        ma[a] = b;\n    }\n    cin >> m;\n    for(int i=0;i<m;i++) {\n        int a, b;\n        a = read();\n        b = read();\n        if (ma.count(a)) ma[a] = max(ma[a], b);\n        else ma[a] = b;\n    }\n    for (auto i: ma) ans += i.second;\n    cout<<ans<<endl;\n    return 0;\n}\n\n\t\t  \t\t \t \t   \t  \t\t\t\t\t\t\t\t \t \t \t"
}