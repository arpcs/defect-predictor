{
    "id": 47725886,
    "contestId": 981,
    "creationTimeSeconds": 1546179167,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 981,
        "index": "B",
        "name": "Businessmen Problems",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1000,
        "tags": [
            "sortings"
        ]
    },
    "author": {
        "contestId": 981,
        "members": [
            {
                "handle": "dotbashrc"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1527432600
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\nbool sortbysec(const pair<int,int> &a,\r\n              const pair<int,int> &b) {\r\n    return (a.second > b.second);\r\n}\r\n\r\n\r\nint main() {\r\n\r\n    int n, m;\r\n\r\n    vector < pair<int, int> > forces;\r\n    vector < pair<int, int> > tops;\r\n    set<int> force_elems;\r\n    set<int> top_elems;\r\n\r\n\r\n    cin >> n;\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        int k, l;\r\n        cin >> k >> l;\r\n        pair <int, int> elem (k, l);\r\n        forces.push_back(elem);\r\n    }\r\n\r\n    cin >> m;\r\n    for (int i = 0; i < m; i++) {\r\n        int k, l;\r\n        cin >> k >> l;\r\n        pair <int, int> elem (k, l);\r\n        tops.push_back(elem);\r\n    }\r\n\r\n    sort(forces.begin(), forces.end(), sortbysec);\r\n    sort(tops.begin(), tops.end(), sortbysec);\r\n\r\n\r\n    int p1, p2 = 0;\r\n    int total_income = 0;\r\n\r\n    while(p1 < n || p2 < m) {\r\n            cout << \"wht\\v\\n\";\r\n        if (p1 < n && p2 < m) {\r\n\r\n            int f_key = forces[p1].first;\r\n            int f_inc = forces[p1].second;\r\n            int t_key = tops[p2].first;\r\n            int t_inc = tops[p2].second;\r\n\r\n            if (f_inc > t_inc) {\r\n\r\n                if (top_elems.find(f_key) == top_elems.end()) {\r\n                    force_elems.insert(f_key);\r\n                    total_income += f_inc;\r\n                    cout << \"Forces: adding: \" << f_key << endl;\r\n                }\r\n                p1++;\r\n            } else {\r\n                if (force_elems.find(t_key) == force_elems.end()) {\r\n                    top_elems.insert(t_key);\r\n                    total_income += t_inc;\r\n                    cout << \"Tops: adding: \" << t_key << endl;\r\n                }\r\n                p2++;\r\n            }\r\n        } else if (p1 < n) {\r\n\r\n            int f_key = forces[p1].first;\r\n            int f_inc = forces[p1].second;\r\n\r\n            if (top_elems.find(f_key) == top_elems.end()) {\r\n                total_income += f_inc;\r\n                cout << \"Forces: adding: \" << f_key << \"\\n\";\r\n            }\r\n            p1++;\r\n        } else {\r\n\r\n            int t_key = tops[p2].first;\r\n            int t_inc = tops[p2].second;\r\n\r\n            if (force_elems.find(t_key) == force_elems.end()) {\r\n                total_income += t_inc;\r\n                cout << \"Tops: adding: \" << t_key << \"\\n\";\r\n            }\r\n            p2++;\r\n        }\r\n    }\r\n\r\n    cout << total_income << \"\\n\";\r\n\r\n\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n"
}