{
    "id": 161590873,
    "contestId": 981,
    "creationTimeSeconds": 1656019040,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 981,
        "index": "B",
        "name": "Businessmen Problems",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1000,
        "tags": [
            "sortings"
        ]
    },
    "author": {
        "contestId": 981,
        "members": [
            {
                "handle": "alif25755"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1527432600
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<iostream>\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    int n, m, i, j;\r\n    unsigned long long int income=0;\r\n    cin >> n;\r\n    array<int, 2> chemF[n];\r\n    for(i=0; i<n; i++)\r\n    {\r\n        for(j=0; j<2; j++)\r\n        {\r\n            cin >> chemF[i][j];\r\n        }\r\n    }\r\n    cin >> m;\r\n    bool flag[m];\r\n    array<int, 2> topChem[m];\r\n    for(i=0; i<m; i++)\r\n    {\r\n        for(j=0; j<2; j++)\r\n        {\r\n            cin >> topChem[i][j];\r\n        }\r\n    }\r\n    sort(chemF, chemF + n);\r\n    sort(topChem, topChem + m);\r\n    for(j=0; j<m; j++)\r\n    {\r\n        flag[j] = true;\r\n    }\r\n    j=0;\r\n    for(i=0; i<n; i++)\r\n    {\r\n        if(j<m)\r\n        {\r\n            while(chemF[i][0] >= topChem[j][0])\r\n            {\r\n                if(chemF[i][0] == topChem[j][0])\r\n                {\r\n                    if(chemF[i][1] >= topChem[j][1])\r\n                    {\r\n                        income += chemF[i][1];\r\n                        //cout << \"income: \" << income << \"chemF[\" << i << \"][1] = \" << chemF[i][1] << endl;\r\n                    }\r\n                    else\r\n                    {\r\n                        income += topChem[j][1];\r\n                        //cout << \"income: \" << income << \"topChem[\" << j << \"][1] = \" << topChem[j][1] << endl;\r\n                    }\r\n                    flag[j] = false;\r\n                }\r\n                j++;\r\n                //cout << \"j = \" << j << endl;\r\n                if(j>=m && chemF[i][0] != topChem[j-1][0])\r\n                {\r\n                    income += chemF[i][1];\r\n                    //cout << \" income: \" << income << \" chemF[\" << i << \"][1] = \" << chemF[i][1] << endl;\r\n                    break;\r\n                }\r\n                else if(j>=m)\r\n                {\r\n                    break;\r\n                }\r\n                else if(chemF[i][0] < topChem[j][0] && chemF[i][0] != topChem[j-1][0])\r\n                {\r\n                    income += chemF[i][1];\r\n                    //cout << \"i not = any of j income: \" << income << \"chemF[\" << i << \"][1] = \" << chemF[i][1] << endl;\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            income += chemF[i][1];\r\n            //cout << \" income: \" << income << \"chemF[\" << i << \"][1] = \" << chemF[i][1] << endl;\r\n        }\r\n\r\n    }\r\n    for(j=0; j<m; j++)\r\n    {\r\n        if(flag[j])\r\n        {\r\n            income += topChem[j][1];\r\n            //cout << \" income: \" << income << \"topChem[\" << j << \"][1] = \" << topChem[j][1] << endl;\r\n        }\r\n    }\r\n    cout << income << endl;\r\n    return 0;\r\n}\r\n"
}