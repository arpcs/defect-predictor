{
    "id": 42665815,
    "contestId": 981,
    "creationTimeSeconds": 1536392561,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 981,
        "index": "B",
        "name": "Businessmen Problems",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1000,
        "tags": [
            "sortings"
        ]
    },
    "author": {
        "contestId": 981,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1527432600
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "/*Two famous competing companies ChemForces and TopChemist decided to show their sets of recently discovered chemical elements on an exhibition. However they know that no element should be present in the sets of both companies.\n\nIn order to avoid this representatives of both companies decided to make an agreement on the sets the companies should present. The sets should be chosen in the way that maximizes the total income of the companies.\n\nAll elements are enumerated with integers. The ChemForces company has discovered n distinct chemical elements with indices a1,a2,\u2026,an, and will get an income of xi Berland rubles if the i-th element from this list is in the set of this company.\n\nThe TopChemist company discovered m distinct chemical elements with indices b1,b2,\u2026,bm, and it will get an income of yj Berland rubles for including the j-th element from this list to its set.\n\nIn other words, the first company can present any subset of elements from {a1,a2,\u2026,an} (possibly empty subset), the second company can present any subset of elements from {b1,b2,\u2026,bm} (possibly empty subset). There shouldn't be equal elements in the subsets.\n\nHelp the representatives select the sets in such a way that no element is presented in both sets and the total income is the maximum possible.\n\nInput\nThe first line contains a single integer n (1=n=105)  \u2014 the number of elements discovered by ChemForces.\n\nThe i-th of the next n lines contains two integers ai and xi (1=ai=109, 1=xi=109)  \u2014 the index of the i-th element and the income of its usage on the exhibition. It is guaranteed that all ai are distinct.\n\nThe next line contains a single integer m (1=m=105)  \u2014 the number of chemicals invented by TopChemist.\n\nThe j-th of the next m lines contains two integers bj and yj, (1=bj=109, 1=yj=109)  \u2014 the index of the j-th element and the income of its usage on the exhibition. It is guaranteed that all bj are distinct.\n\nOutput\nPrint the maximum total income you can obtain by choosing the sets for both companies in such a way that no element is presented in both sets.\n\nExamples\nInput\n3\n1 2\n7 2\n3 10\n4\n1 4\n2 4\n3 4\n4 4\nOutput\n24\nInput\n1\n1000000000 239\n3\n14 15\n92 65\n35 89\nOutput\n408\nNote\nIn the first example ChemForces can choose the set (3,7), while TopChemist can choose (1,2,4). This way the total income is (10+2)+(4+4+4)=24.\n\nIn the second example ChemForces can choose the only element 109, while TopChemist can choose (14,92,35). This way the total income is (239)+(15+65+89)=408.*/\n\n#include<bits/stdc++.h>\nusing namespace std;\n\nlong long n, e, p, m,ans,tgh;\nvector<pair<long long,long long> > elements;\nbool sdh;\n\nint main()\n{\n\tcin>>n;\n\tfor (long long i=1;i<=n;i++)\n\t{\n\t\tcin>>e>>p;\n\t\telements.push_back(make_pair(e,p));\n\t}\n\tsort(elements.begin(),elements.end());\n\ttgh=elements[(elements.size()-1)/2].first;\n\t//cout<<tgh<<endl;\n\tcin>>m;\n\tfor (long long i=1;i<=m;i++)\n\t{\t\n\t\tsdh=0;\n\t\tcin>>e>>p;\n\t\tif (e<tgh)\n\t\t{\n\t\t\tfor (int i=0;i<tgh;i++)\n\t\t\t{\n\t\t\t\tif(elements[i].first==e)\n\t\t\t\t{\n\t\t\t\t\t//cout<<\"sini\"<<endl;\n\t\t\t\t\tif (elements[i].second>p)\n\t\t\t\t\t{\n\t\t\t\t\t\tsdh=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (elements[i].second<p)\n\t\t\t\t\t{\n\t\t\t\t\t\tsdh=1;\n\t\t\t\t\t\telements[i].second=p;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (e>=tgh)\n\t\t{\n\t\t\tfor (int i=(elements.size()-1)/2;i<elements.size();i++)\n\t\t\t{\n\t\t\t\tif(elements[i].first==e)\n\t\t\t\t{\n\t\t\t\t\t//cout<<\"here\"<<endl;\n\t\t\t\t\tif (elements[i].second>p)\n\t\t\t\t\t{\n\t\t\t\t\t\tsdh=1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (elements[i].second<p)\n\t\t\t\t\t{\n\t\t\t\t\t\tsdh=1;\n\t\t\t\t\t\telements[i].second=p;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(!sdh)\n\t\t{\n\t\t\telements.push_back(make_pair(e,p));\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\t\tsort(elements.begin(),elements.end());\n\t}\n\t\n/*\tfor (int i=0;i<elements.size();i++)\n\t{\n\t\tcout<<elements[i].first<<\",\"<<elements[i].second<<endl;\n\t}*/\n\t\n\tfor (long long i=0;i<elements.size();i++)\n\t{\n\t\tans+=elements[i].second;\n\t}\n\tcout<<ans<<endl;\n}"
}