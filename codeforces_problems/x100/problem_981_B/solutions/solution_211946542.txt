{
    "id": 211946542,
    "contestId": 981,
    "creationTimeSeconds": 1688387179,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 981,
        "index": "B",
        "name": "Businessmen Problems",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1000,
        "tags": [
            "sortings"
        ]
    },
    "author": {
        "contestId": 981,
        "members": [
            {
                "handle": "arvind.romanempire2015"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1527432600
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 33,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 17203200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// data types\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef double db;\r\ntypedef float ft;\r\n\r\n// vector and pair\r\n\r\n#define F first\r\n#define S second\r\n#define pb push_back\r\n#define pf(v,elem)  v.insert(v.begin(),elem) // push front  \r\n#define pp pop_back\r\n#define mp make_pair\r\n#define pll pair<ll, ll>\r\n#define vll vector<ll>\r\n\r\n/* for loops */\r\n\r\n//starting with 0\r\n#define for0(i,n) for (ll i=0;i<n;i++)\r\n#define for1(i,n) for (ll i=1;i<=n;i++)\r\n\r\n// starting with s, step is 1\r\n#define forl(i,s,n) for(ll i=s;i<n;i++)\r\n#define forle(i,s,n) for(ll i=s;i<=n;i++)\r\n#define forg(i,s,n) for (ll i=s;i>n;i--)\r\n#define forge(i,s,n) for (ll i=s;i>=n;i--)\r\n\r\n// starting with s, step is k\r\n#define forlk(i,s,n,k) for (ll i=s;i<n,i+=k)\r\n#define forlek(i,s,n,k) for (ll i=s;i<=n;i+=k)\r\n#define forgk(i,s,n) for (ll i=s;i>n;i-=k)\r\n#define forgek(i,s,n) for (ll i=s;i>=n;i-=k)\r\n\r\n//end line\r\n#define enl \"\\n\"\r\n\r\n/* array functions */ \r\n\r\n//print array\r\nvoid printarr(ll arr[],ll n){\r\n    for (ll j=0;j<n;j++){\r\n        cout<<arr[j]<<\" \";\r\n    }\r\n}\r\n\r\n//check whether element is present\r\nbool checkelem (vll arr,ll n, ll elem){\r\n    ll ans=0;\r\n    for (ll j=0;j<n;j++){\r\n        if (arr[j]==elem){\r\n            ans=1;\r\n            break;\r\n        }\r\n    }\r\n    return ans;\r\n}\r\n\r\n//index of element, -1 if not present\r\nll ind(vll arr, ll n, ll elem){\r\n    for (ll i=0;i<n;i++){\r\n        if (arr[i]==elem){\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\n//number of negative numbers\r\nll count_neg(ll arr[], ll n){\r\n    ll count =0;\r\n    for (ll i=0;i<n;i++){\r\n        if (arr[i]<0){\r\n            count++;\r\n        }\r\n    }\r\n    return count;\r\n}\r\n\r\n//number of positive numbers\r\nll count_pos(ll arr[], ll n){\r\n    ll count =0;\r\n    for (ll i=0;i<n;i++){\r\n        if (arr[i]>0){\r\n            count++;\r\n        }\r\n    }\r\n    return count;\r\n}\r\n\r\n//count of an element\r\nll countelem(ll arr[],ll n,ll elem){\r\n    ll count =0;\r\n    for (ll j=0;j<n;j++){\r\n        if (arr[j]==elem){\r\n            count++;\r\n        }\r\n    }\r\n    return count;\r\n}\r\n\r\n//number of distinct elements in an array\r\nll countdist(ll arr[],ll n){\r\n    ll cd=0;\r\n    sort(arr,arr+n);\r\n    for (ll j=0;j<n;j++){\r\n        while(j<n-1 && arr[j]==arr[j+1]){\r\n            j++;\r\n        }\r\n    cd++;\r\n    }\r\n    return cd;\r\n}\r\n\r\n//if two arrays are same\r\nbool samearr(ll arr1[],ll arr2[],ll n){\r\n    bool ans=true;\r\n    for (ll j=0;j<n;j++){\r\n        if (arr1[j]!=arr2[j]){\r\n            ans=false;\r\n            break;\r\n        }\r\n    }\r\n    return ans;\r\n}\r\n\r\n//maximmum of array\r\nll max_arr(ll arr[], ll size){\r\n    ll ans=arr[0];\r\n    for (ll j =0; j<size; j++){\r\n        if (arr[j]>ans){\r\n            ans=arr[j];\r\n        }\r\n    }\r\n    return ans;\r\n}\r\n\r\n//minimum of array\r\nll min_arr(ll arr[], ll size){\r\n    ll ans=arr[0];\r\n    for (ll j =0; j<size; j++){\r\n        if (arr[j]<ans){\r\n            ans=arr[j];\r\n        }\r\n    }\r\n    return ans;\r\n}\r\n\r\n// sum of elements\r\nll sum_arr(ll arr[], ll size){\r\n    ll sum=0;\r\n    for (int j=0;j<size;j++){\r\n        sum+=arr[j];\r\n    }\r\n    return sum;\r\n}\r\n\r\n// absolute sum of elements\r\nll sumabs_arr(ll arr[], ll size){\r\n    ll sum=0;\r\n    for (int j=0;j<size;j++){\r\n        sum+=abs(arr[j]);\r\n    }\r\n    return sum;\r\n}\r\n\r\n/* ALL THE BAKWAAAS ENDS HERE!!!!!! */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// solve function starts\r\nvoid solve()\r\n{\r\n    ll n; cin>>n;\r\n    vector <pair <ll,ll>> a;\r\n    for0(i,n)\r\n    {\r\n        ll temp1, temp2;\r\n        cin>>temp1>>temp2;\r\n\r\n        a.pb(mp(temp1,temp2));\r\n    }\r\n\r\n    ll m; cin>>m;\r\n    vector <pair <ll,ll>> b;\r\n    for0(i,m)\r\n    {\r\n        ll temp1, temp2;\r\n        cin>>temp1>>temp2;\r\n\r\n        b.pb(mp(temp1,temp2));\r\n    }\r\n\r\n    ll ans=0;\r\n    \r\n    map <ll,ll> imp;\r\n\r\n\r\n    for0(i,n){\r\n        imp[a[i].F]=a[i].S;\r\n    }\r\n\r\n    for0(i,m){\r\n        imp[b[i].F] = b[i].S;\r\n    }\r\n\r\n    for0(i,n){\r\n        imp[a[i].F]= max(imp[a[i].F],a[i].S);\r\n    }\r\n\r\n    map<ll,ll>::iterator it = imp.begin();\r\n\r\n    while (it!=imp.end()){\r\n        ans += it->second;\r\n        ++it;\r\n    }\r\n\r\n    cout<<ans<<enl;\r\n\r\n}\r\n\r\n// solve function ends\r\n\r\n\r\nint32_t main()\r\n{\r\nios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\nsolve();\r\nreturn 0;\r\n}"
}