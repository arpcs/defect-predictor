{
    "id": 144830082,
    "contestId": 1519,
    "creationTimeSeconds": 1643714946,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "Triumph"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <cmath>\r\n#include <map>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\n#include <bits/stdc++.h>\r\n#include <stack>\r\n\r\nusing namespace std;\r\n\r\n#define ll long long\r\n#define FIO ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nint main(){\r\nFIO;\r\n    // #ifndef ONLINE_JUDGE\r\n    // freopen(\"input.txt\", \"r\", stdin);\r\n    // freopen(\"output.txt\", \"w\", stdout);\r\n    // #endif\r\n\r\n    // main code///\r\n\r\nint n;\r\ncin>>n;\r\ncout<<n;\r\n\r\nvector<int> a,b;\r\n\r\nfor(int i=0;i<n;i++){\r\n    int val;\r\n    cin>>val;\r\n    a.push_back(val);\r\n}\r\n\r\nfor(int i=0;i<n;i++){\r\n    int val;\r\n    cin>>val;\r\n    b.push_back(val);\r\n}\r\n\r\n\r\nvector<vector<int>> dp;\r\nvector<int> pref;\r\nint p=0;\r\nfor(int i=0;i<n;i++){\r\n    p+=a[i]*b[i];\r\n    pref.push_back(p);\r\n    for(int j=0;j<n;j++){\r\n        dp[i][j]=0;\r\n    }\r\n}\r\n\r\n\r\n\r\nfor(int i=0;i<n;i++){\r\n    int s=a[i]*b[i];\r\n    int se=0;\r\n    dp[i][i]=a[i]*b[i];\r\n    int l=i-1,r=i+1;\r\n    int le=i,re=i+1;\r\n\r\n    while(l>=0 and r<n){\r\n        s+=a[l]*b[r]+a[r]*b[l];\r\n        dp[l][r]=s;\r\n        l--;\r\n        r++;\r\n    }\r\n\r\n    while(le<=0 and re<n){\r\n        se+=a[le]*b[re]+b[le]*a[re];\r\n        dp[le][re]=se;\r\n        le--;\r\n        re++;\r\n    }\r\n\r\n}\r\n\r\nint ans=0;\r\n\r\nfor(int i=0;i<n;i++){\r\n    for(int j=i;j<n;j++){\r\n        int l_sum=0, r_sum=p-pref[j];\r\n        if(i>0){\r\n            l_sum=pref[i-1];\r\n        }\r\n\r\n        ans=max(ans,l_sum+r_sum+dp[i][j]);\r\n    }\r\n}\r\ncout<<ans;\r\n\r\nreturn 0;\r\n}",
    "defect_evaluation_v4": {
        "good solution": 60,
        "wrong solution": 25,
        "compilation error": 10,
        "runtime error": 5
    },
    "category_evaluation": {
        "mathematics": 30,
        "dynamic programming": 80,
        "bit manipulation": 5,
        "greedy": 20,
        "brute force": 10,
        "graphs": 5,
        "sortings": 5,
        "search": 5,
        "trees": 0,
        "strings": 10,
        "number theory": 5,
        "combinatorics": 0,
        "two pointers": 5,
        "geometry": 0,
        "shortest paths": 0,
        "divide and conquer": 0,
        "probabilities": 0,
        "data structures": 20,
        "game theory": 0,
        "2d, 3d": 0,
        "recursive": 0,
        "well-commented": 70,
        "self-documenting": 50,
        "complex": 60,
        "readable": 30,
        "well-named": 50,
        "efficient": 40,
        "reusable": 10,
        "documented": 40,
        "good error-handling": 10,
        "good solution": 70,
        "compilation error": 0,
        "runtime error": 0
    }
}