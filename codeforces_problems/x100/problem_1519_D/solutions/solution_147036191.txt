{
    "id": 147036191,
    "contestId": 1519,
    "creationTimeSeconds": 1645367346,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "late_comer04"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 234,
    "memoryConsumedBytes": 144486400,
    "source": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n//#define int long\r\n#define vii vector<pii>\r\n#define ld long double\r\n#define pii pair<int,int>\r\n#define FOR(i,a,b)        for(int i=a;i<b;i++)\r\n#define ROF(i,a,b)        for(int i=a;i>=b;i--)\r\n#define sp(x,y)           fixed<<setprecision(y)<<x\r\n#define inf 1e15\r\n#include <sstream>\r\n#include <string>\r\n#define pb                push_back\r\n#define eb                emplace_back\r\n#define in(arr,n)         for(int i=0;i<n;i++){cin>>arr[i];}\r\n#define in1(arr,n)        for(int i=1;i<=n;i++){cin>>arr[i];}\r\n#define endl \"\\n\"\r\n#define show(x)           cout<<x<<endl;\r\n#define nl                \"\\n\";\r\n#define showl(x)          cout<<x<<\" \";\r\n#define debug1(i,n,arr)        for(int i=0;i<n;i++){cout<<arr[i]<<\" \";}cout<<endl;\r\n#define debug2(i,j,n,m,arr)   for(int i=0;i<n;i++){for(int j=0;j<m;j++){cout<<arr[i][j]<<\" \";}cout<<endl;}\r\n//priority_queue<pii,vector<pii>,greater<pii>> s;\r\nconst int mod=1e9+7;\r\nconst int m1 = 1000000123;\r\nconst int m2 = 1000000321;\r\n//priority_queue<pii,vector<pii>,greater<pii>> pq;\r\ninline int modMul(int a, int b) {  return ((a%mod) *(b%mod)) % mod; }\r\ninline int modAdd(int a, int b) {return ((a%mod)+(b%mod)) % mod; }\r\n\r\ninline int modPow(int  b, int p) { int r = 1; while (p>0) { if (p & 1) r = modMul(r, b); b = modMul(b, b); p >>= 1; } return r; }\r\ninline int modInverse(int a,int p) { return modPow(a, p- 2); }\r\n//inline int modDiv(int a, int b) { return modMul(a, modInverse(b)); }\r\n#define fast ios::sync_with_stdio(false);cin.tie(NULL);\r\nint const maxn=6*1e3;\r\n//int fact[1000006];\r\n//int inv[1000006];\r\n\r\nint dx[]={0,0,-1,1};\r\nint dy[]={1,-1,0,0};\r\n\r\n///////////--------------------------------------------------------------/////////////////////\r\n\r\n\r\n//int gcd(int a,int b){\r\n//        if(b==0){\r\n//            return a;\r\n//        }\r\n//\r\n//        return gcd(b,a%b);\r\n//}\r\n\r\n/*int lcm(int a,int b){\r\n        return (a*b)/gcd(a,b);\r\n}*/\r\n//bool prime[100001];\r\n\r\n/*int subt(int a,int b){ return ((a%mod)-(b%mod))%mod;}*/\r\n\r\n//int binary_expo(int x , int y) { int res=1; while(y) { if(y%2) { y--; res=((res%mod)*(x%mod))%mod; } else { y/=2; x=modMul(x,x); } } return res%mod; }\r\n\r\n//bool comp(int a,int b){\r\n//        //return a<b; //for increasing\r\n//    return a>b; //for decreasing\r\n//}\r\n\r\n\r\n\r\n/*int npr(int n,int r){\r\n\r\n        int ans=n;\r\n        int x=n-r;\r\n        while(n>x+1){\r\n            n--;\r\n            ans=modMul(ans,n);\r\n\r\n        }\r\n        return (ans)%mod;\r\n}*/\r\n\r\n\r\n\r\n//void factorial(){\r\n//        fact[0]=1;\r\n//        fact[1]=1;\r\n//        FOR(i,2,10000){\r\n//            fact[i]=modMul(fact[i-1],i);\r\n//\r\n//        }\r\n//}\r\n\r\n    /*\r\n    int ncr(int n,int r){\r\n        if(r>n){return 0;}\r\n        int ans=fact[n];\r\n        ans=modMul(ans,modInverse(fact[r]));\r\n        ans=modMul(ans,modInverse(fact[n-r]));\r\n        return ans;\r\n    }\r\n    */\r\n\r\n    /*vector<int> pfactor(maxn);\r\n    void getprimefactors(){\r\n\r\n        pfactor[1]=1;\r\n        FOR(i,2,maxn){\r\n            if(i%2==0){pfactor[i]=2;}\r\n            else{pfactor[i]=i;}\r\n        }\r\n        for(int i=3;i<maxn;i=i+2){\r\n            if(pfactor[i]==i){\r\n                for(int j=i*i;j<maxn;j+=i){\r\n                    if(pfactor[j]==j){\r\n                        pfactor[j]=i;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }*/\r\n\r\n\r\n\r\n\r\n\r\n    /*bool isprime(int n){\r\n        for(int i=2;i*i<=n;i++){\r\n            if(n%i==0){\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }*/\r\n\r\n//    double power(double a,int n){\r\n//\r\n//        double res=1;\r\n//        while(n){\r\n//            if(n%2==0){\r\n//\r\n//                a=((a)*(a));\r\n//                n=n/2;\r\n//            }\r\n//            else{\r\n//                n--;\r\n//                res=((a)*(res));\r\n//            }\r\n//        }\r\n//        return res;\r\n//\r\n//    }\r\n    /*set<int> s;\r\n    vector<int> v;\r\n    int cnt(int x){\r\n\r\n        int ans=0;\r\n        int i=1;\r\n        while(x>0){\r\n            int k=x & 1;\r\n            if(k==0){\r\n                ans=max(ans,i);\r\n            }\r\n            x=x>>1;\r\n            i++;\r\n        }\r\n        return ans;\r\n    }*/\r\n\r\n    /*int spf[maxn];\r\n\r\n    void sieve(){\r\n\r\n        spf[0]=1;\r\n        spf[1]=1;\r\n        FOR(i,2,maxn){\r\n            if(spf[i]==0){\r\n                for(int j=i;j<maxn;j+=i){\r\n                    spf[j]=i;\r\n                }\r\n            }\r\n        }\r\n    }*/\r\n\r\n//\r\n//struct DSU{\r\n//\r\n//    int n;\r\n//    vector<int> par,sz;\r\n//\r\n//    DSU(int n){\r\n//\r\n//        this->n=n;\r\n//        par.assign(n+1,0);\r\n//        sz.assign(n+1,0);\r\n//\r\n//        for(int i=1;i<=n;i++){\r\n//            par[i]=i;\r\n//            sz[i]=1;\r\n//        }\r\n//\r\n//    }\r\n//\r\n//    int root(int v){\r\n//\r\n//        if(v==par[v]){\r\n//            return v;\r\n//        }\r\n//        return par[v]=root(par[v]);\r\n//\r\n//    }\r\n//\r\n//    bool same(int u,int v){\r\n//        return root(u)==root(v);\r\n//    }\r\n//\r\n//    void unions(int u,int v){\r\n//\r\n//        u=root(u);\r\n//        v=root(v);\r\n//        if(u!=v){\r\n//            if(sz[u]<sz[v]){\r\n//                swap(u,v);\r\n//            }\r\n//            par[v]=u;\r\n//            sz[u]+=sz[v];\r\n//        }\r\n//    }\r\n//\r\n//};\r\n    //**************************************************************************************************************************************************//\r\n    //**************************************************************************************************************************************************//\r\n\r\n\r\n\r\n//\r\n//int bin_power(int n,int x){\r\n//\r\n//    int res=1;\r\n//    if(x==0){\r\n//        return res;\r\n//    }\r\n//\r\n//    while(x>1){\r\n//        if(x%2==0){\r\n//            x=x/2;\r\n//            n=modMul(n,n);\r\n//        }\r\n//        else{\r\n//            x--;\r\n//            res=modMul(res,n);\r\n//        }\r\n//    }\r\n//    return res*n;\r\n//}\r\n\r\n\r\n//vector<int> adj[maxn];\r\n//vector<pair<int,int>> edges;\r\n//bool visited[maxn];\r\n//int ans=0;\r\n//bool valid=true;\r\n//int color[maxn];\r\n\r\nlong int dp[maxn][maxn];\r\n\r\n\r\nlong long int cal(int i,int j,int arr[],int brr[]){\r\n\r\n    if(dp[i][j]!=-1){\r\n        return dp[i][j];\r\n    }\r\n    if(i==j){\r\n        return dp[i][j]=arr[i]*brr[i];\r\n    }\r\n    if(i+1==j){\r\n        return dp[i][j]=arr[i]*brr[j]+arr[j]*brr[i];\r\n    }\r\n    return dp[i][j]=arr[i]*brr[j]+arr[j]*brr[i]+cal(i+1,j-1,arr,brr);\r\n}\r\n\r\n\r\nvoid solve(){\r\n\r\n    int n;cin>>n;\r\n\r\n    int arr[n+1];arr[0]=0;for(int i=1;i<=n;i++){cin>>arr[i];}\r\n\r\n    int brr[n+1];brr[0]=0;for(int i=1;i<=n;i++){cin>>brr[i];}\r\n\r\n\r\n    memset(dp,-1,sizeof dp);\r\n\r\n    long long int prefix[n+1];\r\n    long long int prd=0;\r\n\r\n    for(int i=0;i<=n;i++){\r\n        int x=arr[i]*brr[i];\r\n        prd+=x;\r\n        prefix[i]=prd;\r\n    }\r\n\r\n\r\n    for(int i=1;i<=n;i++){\r\n        for(int j=i+1;j<=n;j++){\r\n\r\n            long long int pre=prefix[i-1];\r\n            long long int post=prefix[n]-prefix[j];\r\n            long long int in=cal(i,j,arr,brr);\r\n\r\n            long long int k=pre+post+in;\r\n            prd=max(prd,k);\r\n        }\r\n    }\r\n\r\n    cout<<prd<<endl;\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nint32_t main()\r\n{\r\n\r\n    /*freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\",\"w\",stdout);*/\r\n    fast\r\n    int test;test=1;\r\n\r\n\r\n\r\n\r\n    //pre();\r\n    //cin>>test;\r\n    //cout<<\"hre \"<<endl;\r\n    while(test--){\r\n        solve();\r\n\r\n\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n"
}