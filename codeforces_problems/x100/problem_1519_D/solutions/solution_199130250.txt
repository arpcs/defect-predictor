{
    "id": 199130250,
    "contestId": 1519,
    "creationTimeSeconds": 1679764765,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "Avuvos"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\n#include <string>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef tree<int,null_type,less<int>,rb_tree_tag,\r\n        tree_order_statistics_node_update> indexed_set;\r\ntypedef priority_queue<int,vector<int>,greater<int>> min_priority_queue;\r\n\r\nconst int MOD = 1e9 + 7;\r\nconst ll INF = 1e18;\r\nconst string YES = \"YES\";\r\nconst string NO = \"NO\";\r\n\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n    vector<ll> A(n), B(n);\r\n    for (int i = 0; i < n; ++i) {\r\n        cin >> A[i];\r\n    }\r\n    for (int i = 0; i < n; ++i) {\r\n        cin >> B[i];\r\n    }\r\n\r\n    ll sum = 0;\r\n    for (int i = 0; i < n; i++) {\r\n        sum += A[i] * B[i];\r\n    }\r\n    ll ans = sum;\r\n    for (int i = 0; i < n - 1; i++) {\r\n        int l = i, r = i + 1;\r\n        ll curSum = sum;\r\n        while (l >= 0 && r < n) {\r\n            curSum -= A[l]*B[l];\r\n            curSum -= A[r]*B[r];\r\n            curSum += A[l]*B[r];\r\n            curSum += A[r]*B[l];\r\n            ans = max(ans, curSum);\r\n            l--;\r\n            r++;\r\n        }\r\n        curSum = sum;\r\n        l = i, r = i;\r\n        while (l >= 0 && r < n) {\r\n            curSum -= A[l]*B[l];\r\n            curSum -= A[r]*B[r];\r\n            curSum += A[l]*B[r];\r\n            curSum += A[r]*B[l];\r\n            ans = max(ans, curSum);\r\n            l--;\r\n            r++;\r\n        }\r\n    }\r\n    cout << ans << endl;\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    int T = 1;\r\n//    cin >> T;\r\n    while (T--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}",
    "suggested_categories": [
        "algorithms",
        "data structures",
        "dynamic programming",
        "mathematics",
        "input/output handling",
        "code quality",
        "efficiency",
        "binary search",
        "problem solving",
        "optimization",
        "debugging",
        "performance tuning",
        "standard template library (stl)",
        "compiler flags",
        "c++",
        "competitive programming",
        "complexity analysis",
        "error handling",
        "numeric computation",
        "code comments"
    ]
}