{
    "id": 201640507,
    "contestId": 1519,
    "creationTimeSeconds": 1681120967,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "bkifhr7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// C++ program to implement\n// the above approach\n#include <bits/stdc++.h>\nusing namespace std;\n\n// Function to return maximized sum\n// at even indices\nint maximizeSum(int arr[], int n)\n{\n\tint sum = 0;\n\tfor(int i = 0; i < n; i = i + 2)\n\t\tsum += arr[i];\n\n\t// Stores difference with\n\t// element on the left\n\tint leftDP[n / 2];\n\n\t// Stores difference with\n\t// element on the right\n\tint rightDP[n / 2];\n\n\tint c = 0;\n\n\tfor(int i = 1; i < n; i = i + 2)\n\t{\n\t\t\n\t\t// Compute and store\n\t\t// left difference\n\t\tint leftDiff = arr[i] - arr[i - 1];\n\n\t\t// For first index\n\t\tif (c - 1 < 0)\n\t\t\tleftDP = leftDiff;\n\n\t\telse\n\t\t{\n\t\t\t\n\t\t\t// If previous difference\n\t\t\t// is positive\n\t\t\tif (leftDP > 0)\n\t\t\t\tleftDP = leftDiff + leftDP;\n\n\t\t\t// Otherwise\n\t\t\telse\n\t\t\t\tleftDP[i] = leftDiff;\n\t\t}\n\n\t\tint rightDiff;\n\n\t\t// For the last index\n\t\tif (i + 1 >= n)\n\t\t\trightDiff = 0;\n\n\t\t// Otherwise\n\t\telse\n\t\t\trightDiff = arr[i] - arr[i + 1];\n\n\t\t// For first index\n\t\tif (c - 1 < 0)\n\t\t\trightDP = rightDiff;\n\t\telse\n\t\t{\n\t\t\t\n\t\t\t// If the previous difference\n\t\t\t// is positive\n\t\t\tif (rightDP > 0)\n\t\t\t\trightDP = rightDiff +\n\t\t\t\t\t\t\trightDP;\n\t\t\telse\n\t\t\t\trightDP = rightDiff;\n\t\t}\n\t\tc++;\n\t}\n\tint maxi = 0;\n\tfor(int i = 0; i < n / 2; i++)\n\t{\n\t\tmaxi = max(maxi, max(leftDP[i],\n\t\t\t\t\t\t\trightDP[i]));\n\t}\n\treturn maxi + sum;\n}\n\n// Driver Code\nint main()\n{\n\tint arr[] = { 7, 8, 4, 5, 7,\n\t\t\t\t6, 8, 9, 7, 3 };\n\tint n = sizeof(arr) / sizeof(arr[0]);\n\tint ans = maximizeSum(arr, n);\n\t\n\tcout << (ans);\n}\n\n\n\n\t \t\t  \t\t\t  \t   \t\t\t\t      \t   \t\t"
}