{
    "id": 209056647,
    "contestId": 1519,
    "creationTimeSeconds": 1686286511,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "ar080304"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 201216000,
    "source": "// hare krishna \r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nusing ll=long long;\r\n\r\nint main(){\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n\r\n    ll n;\r\n    cin>>n;\r\n\r\n    vector<ll>a(n);\r\n    for(ll i=0;i<n;i++){\r\n        cin>>a[i];\r\n    }\r\n\r\n    vector<ll>b(n);\r\n    for(ll i=0;i<n;i++){\r\n        cin>>b[i];\r\n    }\r\n\r\n    vector<ll>prefix(n);\r\n    prefix[0]=a[0]*b[0];\r\n    for(ll i=1;i<n;i++){\r\n        prefix[i]=prefix[i-1]+a[i]*b[i];\r\n    }\r\n\r\n    vector<ll>suffix(n);\r\n    suffix[n-1]=a[n-1]*b[n-1];\r\n    for(ll i=n-2;i>=0;i--){\r\n        suffix[i]=suffix[i+1]+a[i]*b[i];\r\n    }\r\n\r\n    vector<vector<ll>>dp(n,vector<ll>(n+1,0));\r\n    for(ll i=0;i<n;i++){\r\n        dp[i][1]=a[i]*b[i];\r\n    }\r\n\r\n    for(ll i=n-2;i>=0;i--){\r\n        for(ll len=2;len<=n;len++){\r\n            if(i+len-1>=n){break;}\r\n            dp[i][len]=dp[i+1][len-2]+a[i]*b[i+len-1]+a[i+len-1]*b[i];\r\n        }\r\n    }\r\n\r\n    ll mx=prefix[n-1];\r\n    for(ll i=0;i<n;i++){\r\n        for(ll len=2;len<=n;len++){\r\n            ll ans=0;\r\n            ans+=((i)?prefix[i-1]:0);\r\n            ans+=((i+len<n)?suffix[i+len]:0);\r\n\r\n            ans+=dp[i][len];\r\n\r\n            mx=max(mx,ans);\r\n        }\r\n    }\r\n\r\n    cout<<mx;\r\n}"
}