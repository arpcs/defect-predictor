{
    "id": 160022714,
    "contestId": 1519,
    "creationTimeSeconds": 1654781826,
    "relativeTimeSeconds": 4206,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "zhbbbb"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1654777620
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 201318400,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define debug(a) cout << #a << \" = \" << a << endl;\r\n#define int long long\r\n#define x first\r\n#define y second\r\n#define endl \"\\n\"\r\nusing namespace std;\r\ntypedef pair<int, int> P;\r\ntypedef long long LL;\r\n\r\ninline int read(){\r\n\tint x=0,c,f=1;\r\n\twhile(!isdigit(c=getchar()))if(c=='-')f=-1;\r\n\twhile(x=x*10+c-'0',isdigit(c=getchar()));\r\n\treturn x*f;\r\n}\r\n\r\nconst int N = 5010, M = 2 * N, mod = 1e9+7;\r\nint n, m, k, a[N], b[N];\r\nint dp[N][N], s[N];\r\n\r\nvoid solve()\r\n{\r\n    n = read();\r\n    for(int i = 1; i <= n; i++) a[i] = read();\r\n\tfor(int i = 1; i <= n; i++) b[i] = read();\r\n\tfor(int i = 1; i <= n; i++) {\r\n\t\ts[i] = s[i - 1] + a[i] * b[i];\r\n\t}\r\n\tfor(int i = 1; i <= n; i++) dp[i][i] = s[n];\r\n\tfor(int i = 1; i + 1 <= n; i++) {\r\n\t\tdp[i][i + 1] = a[i] * b[i + 1] + a[i + 1] * b[i] + s[i - 1] + s[n] - s[i + 1];\r\n\t}\r\n\tfor(int len = 3; len <= n; len++) {\r\n\t\tfor(int l = 1; l + len - 1 <= n; l++) {\r\n\t\t\tint r = l + len - 1;\r\n\t\t\tdp[l][r] = dp[l + 1][r - 1] - a[l] * b[l] - a[r] * b[r] + a[l] * b[r] + a[r] * b[l];\r\n\t\t}\r\n\t}\r\n\tint ans = 0;\r\n\tfor(int len = 1; len <= n; len++) {\r\n\t\tfor(int l = 1; l + len - 1 <= n; l++) {\r\n\t\t\tint r = l + len - 1;\r\n\t\t\tans = max(ans, dp[l][r]);\r\n\t\t}\r\n\t}\r\n\tcout << ans << endl;\r\n}\r\n\r\nsigned main()\r\n{\r\n\t// ios::sync_with_stdio(false), cin.tie(0);\r\n\tint T = 1;\r\n\t// T = read();\r\n\twhile(T--) solve();\r\n\treturn 0;\r\n}"
}