{
    "id": 229336232,
    "contestId": 1519,
    "creationTimeSeconds": 1698003076,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "HamInAPan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nusing ll = long long; using ld = long double;\r\n#define int long long\r\n#define double long double\r\n#define endl '\\n'\r\n#define Hi_this_is_SUBHAM_PAN ios_base::sync_with_stdio(false);cin.tie(0); cout.tie(0);\r\n#define vin(a) for(auto&XX:a)cin>>XX;//idk y but it restricts my thought process at times\r\n#define vout(v) for (auto XX: v)cout<<XX<<' ';cout<<endl;\r\n#define vvin(a) for(auto& b : a) {for(auto& x : b) cin>>x;}\r\n#define vvout(a) for(auto& b: a) {for(auto& x : b) {cout<<x<<\" \";}cout<<endl;}\r\n#define meh {cout<<\"NO\"<<endl;return;}\r\n#define yay {cout<<\"YES\"<<endl;return;}\r\n#define IMmeh {cout<<\"NO\"<<endl;continue;}\r\n#define IMyay {cout<<\"YES\"<<endl;continue;}\r\n//=======================================================------------------------------------------------------\r\nvoid print(int t) {cout << t;} \r\nvoid print(string t) {cout << t;}\r\nvoid print(char t) {cout << t;}\r\nvoid print(double t) {cout << t;}\r\ntemplate <class T, class V> void print(pair <T, V> p);\r\ntemplate <class T> void print(vector <T> v);\r\ntemplate <class T> void print(set <T> v);\r\ntemplate <class T, class V> void print(map <T, V> v);\r\ntemplate <class T> void print(multiset <T> v);\r\ntemplate <class T, class V> void print(pair <T, V> p) {cout << \"{\"; print(p.first); cout << \",\"; print(p.second); cout << \"}\";}\r\ntemplate <class T> void print(vector <T> v) {cout << \"[ \"; for (T i : v) {print(i); cout << \" \";} cout << \"]\\n\";}\r\ntemplate <class T> void print(set <T> v) {cout << \"[ \"; for (T i : v) {print(i); cout << \" \";} cout << \"]\\n\";}\r\ntemplate <class T> void print(multiset <T> v) {cout << \"[ \"; for (T i : v) {print(i); cout << \" \";} cout << \"]\\n\";}\r\ntemplate <class T, class V> void print(map <T, V> v) {cout << \"[ \"; for (auto i : v) {print(i); cout << \" \";} cout << \"]\\n\";}\r\n//=======================================================------------------------------------------------------\r\n// #define pow2(x) (1ll<<(x))\r\ntemplate <typename T, typename U> T cdiv(T x, U y) {assert(y!=0);return (x > 0 ? (x + y - 1) / y : x / y);}\r\ntemplate <typename T, typename U> T fdiv(T x, U y) {assert(y!=0);return (x > 0 ? x / y : (x - y + 1) / y);}\r\ntemplate <typename T> int sgn(T val) {return (T(0) < val) - (val < T(0));} //sgn(x) gives -1/0/1\r\n//returns integer, only works if a is a guarantee perfect square\r\nlong long sqroot(long long a){long long b = (long long) sqrtl(a);if ((b + 1) * (b + 1) == a){b++;}return b;}\r\nconstexpr ll inf = 1E18;\r\n//(raise(a,b) = a^b)\r\nlong long raise(long long a, long long b) {long long res = 1;for(int i = 0; i<b; i++) {if(inf/res < a) return 0;res *= a;}return res;}\r\n//=======================================================----------------------------------\r\nconst int MAX = 200007; //2*10^5 + 7\r\n// const int MOD = 1e9+7; //comment it out if u want to use the other MOD\r\n// // const int MOD = 998244353;\r\n// const double EPS=1E-6;\r\n// const int MAXN = 10000010; //1e7+10\r\n//----------------\r\n\r\n\r\n\r\nvoid solve() {\r\n\r\n    int n; cin >> n;\r\n    vector<int> a(n); vin(a);\r\n    vector<int> b(n); vin(b);\r\n\r\n    int total = 0;\r\n    for(int i = 0; i < n; i++) {\r\n        total += a[i]*b[i];\r\n    }\r\n\r\n    int best = total;\r\n\r\n    //odd length segments:\r\n    for(int odd_center = 0; odd_center < n; odd_center++) {\r\n        int curr = total;\r\n\r\n        for(int x = odd_center-1, y = odd_center+1; x >= 0 && y < n; x--,y++) {\r\n            curr -= a[x]*b[x] + a[y]*b[y];\r\n            curr += a[x]*b[y] + a[y]*b[x];\r\n            best = max(best, curr);\r\n        }\r\n    }\r\n    \r\n    //even length segments:\r\n    for(int even_center = 0; even_center < n-1; even_center++) {\r\n        int curr = total;\r\n\r\n        for(int x = even_center, y = even_center + 1; x >= 0 && y < n; x--,y++) {\r\n            curr -= a[x]*b[x] + a[y]*b[y];\r\n            curr += a[x]*b[y] + a[y]*b[x];\r\n            best = max(best, curr);\r\n        }\r\n    }\r\n\r\n    cout << best << endl;\r\n    // cout<<\"====\"<<endl;\r\n\r\n}\r\n\r\n/*ngu, lesgo*/\r\nint32_t main() {\r\n    Hi_this_is_SUBHAM_PAN\r\n    //cout<<fixed<<setprecision(20)<<x; //-> for printing a double 'x'.\r\n    \r\n    int TT=1;\r\n    // cin>>TT; //comment out this line if only 1 test case is needed\r\n    while(TT--) {\r\n        solve();\r\n    }\r\n \r\n    return 0;\r\n}\r\n"
}