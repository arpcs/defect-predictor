{
    "id": 221249784,
    "contestId": 1519,
    "creationTimeSeconds": 1693477542,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "amcbn"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 204800,
    "source": "\ufeff#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst char nl = '\\n';\r\nconst char sp = ' ';\r\nconst int inf = 0x3f3f3f3f;\r\nconst int mod = 1e9 + 7;\r\nconst char out[2][4]{ \"No\", \"Yes\" };\r\n#define all(x) x.begin(), x.end()\r\nusing ll = long long;\r\n\r\n#define variableName(var) #var\r\n#define __debug(var) cout << #var << \" = \" << var << ' '\r\n\r\nconst int nmax = 5000 + 5;\r\nint n;\r\nll a[nmax];\r\nll b[nmax];\r\nll sum[nmax];\r\nll rev[nmax];\r\n\r\nll get(int l, int r) {\r\n    return sum[r] - sum[l - 1];\r\n}\r\n\r\nll rget(int l, int r) {\r\n    return rev[r] - rev[l - 1];\r\n}\r\n\r\nint main() {\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cin >> n;\r\n    for (int i = 1; i <= n; ++i) {\r\n        cin >> a[i];\r\n    }\r\n    for (int i = 1; i <= n; ++i) {\r\n        cin >> b[i];\r\n    }\r\n    for (int i = 1; i <= n; ++i) {\r\n        sum[i] = sum[i - 1] + a[i] * b[i];\r\n    }\r\n    int i = 1, j = 2;\r\n    ll answer = sum[n];\r\n    while (true) {\r\n        int m = j - i + 1;\r\n        for (int k = 1; k <= m; ++k) {\r\n            rev[k] = rev[k - 1] + a[i + k - 1] * b[j - k + 1];\r\n        }\r\n        for (int l = i, r = j; l < r; ++l, --r) {\r\n            answer = max(answer,\r\n                get(1, l - 1) + rget(l - i + 1, r - i + 1) + get(r + 1, n)\r\n            );\r\n        }\r\n        if (j < n) {\r\n            ++j;\r\n        }\r\n        else if (i < n - 1) {\r\n            ++i;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    cout << answer << nl;\r\n}"
}