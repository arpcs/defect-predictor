{
    "id": 198497163,
    "contestId": 1519,
    "creationTimeSeconds": 1679403892,
    "relativeTimeSeconds": 5392,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "Halcyflict"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1679398500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 106598400,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <queue>\r\n#include <map>\r\n#include <set>\r\n#include <cmath>\r\n#include <string>\r\n#include <iomanip>\r\n#include <stack>\r\n#include <unordered_map>\r\n\r\n#define CHECK (check ? \"Yes\" : \"No\")\r\n// #define int long long\r\n#define double long double\r\n#define endl '\\n';\r\n\r\nusing namespace std;\r\nconst int N = 5e5 + 10, M = 5e4 + 10, MOD = 1E9 + 7, mod = 998244353, INF = 2e17;\r\nconst double eps = 1e-6;\r\nint n, m, k, t;\r\n// int e[N], ne[N], h[N], w[N], to[N], idx;\r\n// int dx[4] = { -1, 1, 0, 0 };\r\n// int dy[4] = { 0, 0, -1, 1 };\r\n// int q[N], p[N];\r\nint a[N], b[N], c[N];\r\n// pair<int, int> pr[N];\r\n// vector<pair<int, int>> vq;\r\n// vector<int> qq;\r\n// set<int> s;\r\n// int s1[N], s2[N];\r\n// int st[N];\r\n// int minn = INF, maxn;\r\n// int stk[N], tt, top;\r\n// int ans[N];\r\n// int cnt;\r\n// bool check;\r\n// string strs[N];\r\n// int gcd(int a, int b) { return b ? gcd(b, a % b) : a; }\r\n// int lcm(int a, int b) { return a / gcd(a, b) * b; }\r\n// int find(int x) { if (x != p[x]) p[x] = find(p[x]); return p[x]; }\r\n// void add(int a, int b, int c) { e[idx] = b, ne[idx] = h[a], w[idx] = c, h[a] = idx++; }\r\n\r\n// vector<int> g[N];\r\nint f[5010][5010];\r\n\r\n// void init()\r\n// {\r\n// \tqq.clear(); vq.clear();\r\n// \tfor (int i = 0; i <= n + 10; i++) g[i].clear(), ans[i] = 0;\r\n// }\r\n\r\nvoid solve()\r\n{\r\n\tcin >> n;\r\n\r\n\tfor (int i = 1; i <= n; i++)\r\n\t{\r\n\t\tcin >> a[i];\r\n\t}\r\n\r\n\tint sum = 0;\r\n\tfor (int j = 1; j <= n; j++)\r\n\t{\r\n\t\tcin >> b[j];\r\n\t\tsum += a[j] * b[j];\r\n\t}\r\n\r\n\tint maxn = sum;\r\n\tfor (int i = 1; i <= n; i++)\r\n\t{\r\n\t\tf[i][i] = sum;\r\n\t}\r\n\r\n\tfor (int i = 1; i <= n - 1; i++)\r\n\t{\r\n\t\tf[i][i + 1] = sum - a[i] * b[i] - a[i + 1] * b[i + 1] + a[i] * b[i + 1] + a[i + 1] * b[i];\r\n\t\tmaxn = max(maxn, f[i][i + 1]);\r\n\t}\r\n\r\n\t\r\n\tfor (int len = 3; len <= n; len++)\r\n\t{\r\n\t\tfor (int l = 1; l + len - 1 <= n; l++)\r\n\t\t{\r\n\t\t\tint r = l + len - 1;\r\n\r\n\t\t\tf[l][r] = f[l + 1][r - 1] - a[l] * b[l] - a[r] * b[r] + a[l] * b[r] + a[r] * b[l];\r\n\t\t\tmaxn = max(maxn, f[l][r]);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tcout << maxn << endl;\r\n}\r\n\r\nsigned main()\r\n{\r\n\tstd::ios::sync_with_stdio(false);\r\n\tstd::cin.tie(0);\r\n\tstd::cout.tie(0);\r\n\r\n\tint t = 1;\r\n// \tcin >> t;\r\n\r\n\twhile (t--)\r\n\t{\r\n// \t\tinit();\r\n\t\tsolve();\r\n\t}\r\n}"
}