{
    "id": 196575125,
    "contestId": 1519,
    "creationTimeSeconds": 1678335285,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "bkifhr8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "Python 3",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "\nvoid solve() {\n    int n;\n    cin >> n;\n\n    vi a(n), b(n);\n\n    FOR (i, 0, n) {\n        cin >> a[i];\n    }\n\n    FOR (i, 0, n) {\n        cin >> b[i];\n    }\n\n    vi pProdSum(n + 1, 0);\n\n    FOR (i, 1, n + 1) {\n        pProdSum[i] = pProdSum[i - 1] + a[i - 1] * b[i - 1];\n    }\n\n    int ans = pProdSum[n];\n\n    FOR (i, 0, n) {\n        // considering odd length segments\n        int curr = a[i] * b[i];\n\n        for (int l = i - 1, r = i + 1; l >= 0 && r < n; --l, ++r) {\n           \n\n \t \t   \t  \t\t\t  \t\t \t \t\t\t  \t \t\t\t\t"
}