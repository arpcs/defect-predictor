{
    "id": 156232049,
    "contestId": 1519,
    "creationTimeSeconds": 1651952910,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "dandan12345"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "Python 3",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "import itertools\r\n\r\ndef task8(a, b):\r\n    a.insert(0, 0)\r\n    b.insert(0, 0)\r\n    amulb_acc = []\r\n    for i in range(len(a)):\r\n        amulb_acc.append(a[i] * b[i])\r\n    amulb_acc = list(itertools.accumulate(amulb_acc))\r\n    \r\n    maxdiff = 0\r\n    result = [0, 1, 0]\r\n    for mid in range(1, len(a)):\r\n        l = mid\r\n        r = mid + 1\r\n        curr_max = 0\r\n        curr_rmax = 0\r\n        while l >= 1 and r <= len(a) - 1:\r\n            curr_max = amulb_acc[r] - amulb_acc[l - 1]\r\n            curr_rmax += a[r] * b[l] + a[l] * b[r]\r\n            if curr_rmax - curr_max > maxdiff:\r\n                maxdiff = curr_rmax - curr_max\r\n                result = [curr_rmax, l, r]\r\n            l -= 1\r\n            r += 1\r\n    \r\n    lmax = amulb_acc[result[1] - 1]\r\n    rmax = amulb_acc[-1] - amulb_acc[result[2]]\r\n    print(lmax, result[0], rmax)\r\n    return lmax + result[0] + rmax\r\n\r\nn = int(input())\r\na = input().split()\r\na = [int(a[i]) for i in range(len(a))]\r\nb = input().split()\r\nb = [int(b[i]) for i in range(len(b))]\r\nprint(task8(a, b))"
}