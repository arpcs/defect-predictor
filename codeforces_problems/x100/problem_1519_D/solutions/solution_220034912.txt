{
    "id": 220034912,
    "contestId": 1519,
    "creationTimeSeconds": 1692796809,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "Mert_Akar"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/*\r\n\r\n\r\n*/\r\n\r\n#include<iostream>\r\n#include<vector>\r\n#include<iomanip>\r\n#include<algorithm>\r\n#include<map>\r\n#include<set>\r\n#include<climits>\r\n#include<numeric>\r\n#include<queue>\r\n#include<unordered_map>\r\n#include<string>\r\n#include<climits>\r\n#include<unordered_set>\r\n#include<bitset>\r\n#include<cstring>\r\n#include<cmath>\r\n#include<stack>\r\n#include<tuple>\r\n#if 1\r\n#define pb push_back\r\n#define endl '\\n'\r\n#define fio ios_base::sync_with_stdio(false);cin.tie(NULL);\r\n#define CDIV(a,b) (((a)+(b)-(1))/(b))\r\nusing namespace std;\r\n#define int long long\r\ntypedef vector<int> vi;\r\ntypedef pair<int, int> pii;\r\ntypedef vector<vi> vivi;\r\ntypedef pair<char,int> pci;\r\ntypedef vector<bool> vb;\r\ntypedef long double ld;\r\nconst int inf = 1e17 + 5;\r\nconst int mod = 1e9 + 7;\r\nconst int N = 1e6;\r\n#endif\r\n\r\nvoid fileio(string s = \"test\"){\r\n    #ifndef ONLINE_JUDGE\r\n        freopen((s+string(\".in\")).c_str(),\"r\",stdin);\r\n        freopen(\"out.txt\",\"w\",stdout);\r\n    #endif\r\n}\r\n\r\nint mod_(int a, int b)\r\n{\r\n    if(a >= 0)return a % b;\r\n    a += (-a/b + 1) * b;\r\n    return a % b;\r\n}\r\n\r\n\r\n\r\n/*\r\n1. CHECK IF THE ANSWER IS MODULO M DAMMIT\r\n2. Edge cases\r\n3. Check for overflow (maybe before edge cases idk)\r\n\r\n24. Use the number 24 (it automatically makes everything turn to ac)\r\n*/\r\n\r\nvoid solve(){\r\n    int n;\r\n    cin >> n;\r\n    vi a(n + 1), b(n + 1), pref(n + 1);\r\n    for(int i = 1; i <= n; ++i)cin >> a[i];\r\n    for(int i = 1; i <= n; ++i)cin >> b[i];\r\n    for(int i = 1; i <= n; ++i)pref[i] = pref[i - 1] + (a[i] * b[i]);\r\n\r\n    lint mx_delta = 0; // BE CAREFUL ABOUT OVERFLOW\r\n\r\n    for(int src = 1; src <= n; ++src)\r\n    {\r\n        lint last = a[src] * b[src];\r\n        //cout << src << ' ' << last << endl;\r\n        for(int dist = 1; src - dist >= 1 and src + dist <= n; ++dist)\r\n        {\r\n            lint cur = last;\r\n            cur += (a[src - dist] * b[src + dist]) + (a[src + dist] * b[src - dist]);\r\n            mx_delta = max(mx_delta, cur - (pref[src + dist] - pref[src - dist - 1]));\r\n            //cout << src << ' ' << dist << ' ' << cur << ' ' << mx_delta << endl;\r\n            last = cur;\r\n        }\r\n    }\r\n\r\n    for(int src = 1; src < n; ++src)\r\n    {\r\n        lint last = 0;\r\n        for(int dist = 0;src - dist >= 1 and src + dist + 1 <= n; ++dist)\r\n        {\r\n            lint cur = last;\r\n            cur += (a[src - dist] * b[src + dist + 1]) + (b[src - dist] * a[src + dist + 1]);\r\n            mx_delta = max(mx_delta, cur - (pref[src + dist + 1] - pref[src - dist - 1]) ); // idk might be buggy\r\n            last = cur;\r\n        }\r\n    }\r\n\r\n    //cout << pref[n] << endl;\r\n    cout << mx_delta + pref[n] << endl;\r\n\r\n    \r\n\r\n\r\n\r\n}\r\n\r\nsigned main(){\r\n    fileio();\r\n    fio; \r\n    //int t;cin >> t;while(t--)\r\n        solve();\r\n\r\n}\r\n\r\n\r\n/*\r\n\r\n*/"
}