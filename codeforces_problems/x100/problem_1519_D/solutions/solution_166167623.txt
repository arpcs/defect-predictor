{
    "id": 166167623,
    "contestId": 1519,
    "creationTimeSeconds": 1659131514,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "I_am_in_love_with_CC"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 685,
    "memoryConsumedBytes": 201113600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n#define ff first\r\n#define ss second\r\n#define pb  push_back\r\n#define pf  push_front\r\n#define ppb pop_back\r\n#define mp make_pair\r\n#define all(x) (x).begin(), (x).end()\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define MIN(v) *min_element(all(v))\r\n#define MAX(v) *max_element(all(v))\r\n//const long long mod = 998244353;\r\nconst long long mod = 1e9+7;\r\nconst long long inf = 1e18;\r\nint lcm(int a , int b){return (a*b)/__gcd(a,b);}\r\nstruct custom_hash { static uint64_t splitmix64(uint64_t x) { x += 0x9e3779b97f4a7c15;  x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;x = (x ^ (x >> 27)) * 0x94d049bb133111eb;return x ^ (x >> 31);}size_t operator()(uint64_t x) const {static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();return splitmix64(x + FIXED_RANDOM);}};\r\nint binpow(long long a, long long b){long long res = 1;while (b > 0){if (b & 1)res = ((res%mod)*(a%mod))%mod;a = ((a%mod)*(a%mod))%mod;b >>= 1;}return res%mod;}\r\nint mod_add(int a, int b) {a = a % mod; b = b % mod; return (((a + b) % mod) + mod) % mod;}\r\nint mod_mul(int a, int b) {a = a % mod; b = b % mod; return (((a * b) % mod) + mod) % mod;}\r\nint mod_sub(int a, int b) {a = a % mod; b = b % mod; return (((a - b) % mod) + mod) % mod;}\r\nint mod_div(int a,int b) {a = a % mod; b = b % mod; return (mod_mul(a,binpow(b, mod-2)) + mod) % mod;}\r\nint dx[]={0,0,-1,1};int dy[]={-1,1,0,0};\r\nint inv(int a, int p){return binpow(a, p-2);}\r\n//int nck(int n, int k, int p){return ((fact[n] * inv(fact[k], p) % p) * inv(fact[n-k], p)) % p;}\r\nint n; \r\nvector<int>a,b;\r\nsigned long dp[5001][5001][2];\r\nint solve(int i , int j, int rev)\r\n{    if(i>j){return 0;}\r\n\tif(i==j){return a[i]*b[i];}\r\n\tif(dp[i][j][rev]!=-1){return dp[i][j][rev];}\r\n\tif(rev)\r\n\t{\r\n\t\treturn dp[i][j][rev] = solve(i+1,j-1,1) + a[i]*b[j] + b[i]*a[j];\r\n\t}\r\n\tint r = solve(i+1,j-1,1)+a[i]*b[j]+a[j]*b[i];\r\n\tint s = solve(i+1,j,0) + a[i]*b[i];\r\n\tint p = solve(i,j-1,0) + a[j]*b[j];\r\n\ts = max(s,p);\r\n\treturn dp[i][j][rev] = max(r,s);\r\n}\r\nsigned main(){ ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n int T=1;\r\n//cin >> T;\r\nwhile(T--)\r\n{    memset(dp,-1,sizeof(dp));\r\ncin >> n; a.resize(n); b.resize(n);\r\nfor(auto &x: a){cin >> x;} for(auto &x: b){cin >> x;}\r\nint x = 0;\r\nfor(int  i = 0; i < n; i++)\r\n{\r\n\tx += a[i]*b[n-1-i];\r\n} int ans = solve(0,n-1,0);\r\ncout << max(ans,x) << endl;\r\n}\r\nreturn 0; }\r\n"
}