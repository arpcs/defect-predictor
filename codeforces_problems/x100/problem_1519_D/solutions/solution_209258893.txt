{
    "id": 209258893,
    "contestId": 1519,
    "creationTimeSeconds": 1686469926,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "lanty_bakecake"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 498,
    "memoryConsumedBytes": 200089600,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    long long int n;\r\n    scanf(\"%lld\", &n);\r\n    long long int A[n];\r\n    long long int B[n];\r\n    long long int dp[n][n];\r\n    long long int i, j, k;\r\n    long long int sum = 0;\r\n    long long int max;\r\n    for(i = 0;i < n;i++)\r\n    scanf(\"%lld\", &A[i]);\r\n    for(i = 0;i < n;i++)\r\n    scanf(\"%lld\", &B[i]);\r\n    for(i = 0;i < n;i++)\r\n    {\r\n        sum = sum + (A[i] * B[i]);\r\n    }\r\n    max = sum;\r\n    for(i = 0;i < n;i++)\r\n    {\r\n        for(j = 0;j < n;j++)\r\n        {\r\n            if(i > j)\r\n            dp[i][j] = 0;\r\n            else if(i == j)\r\n            {\r\n                dp[i][j] = sum;\r\n            }\r\n            else if(j == i + 1)\r\n            dp[i][j] = sum - (A[i] * B[i]) - (A[j] * B[j]) + (A[i] * B[j]) + (A[j] * B[i]);\r\n        }\r\n    }\r\n    for(k = 2;k < n;k++)\r\n    {\r\n        for(i = 0;i < n;i++)\r\n        {\r\n            j = i + k;\r\n            if(j >= n)\r\n            break;\r\n            dp[i][j] = dp[i + 1][j - 1] - (A[i] * B[i]) - (A[j] * B[j]) + (A[j] * B[i]) + (A[i] * B[j]);\r\n        }\r\n    }\r\n    for(i = 0;i < n;i++)\r\n    {\r\n        for(j = 0;j < n;j++)\r\n        {\r\n            if(dp[i][j] > max)\r\n            max = dp[i][j];\r\n        }\r\n    }\r\n    printf(\"%lld\\n\", max);\r\n}"
}