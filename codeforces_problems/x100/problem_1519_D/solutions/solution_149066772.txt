{
    "id": 149066772,
    "contestId": 1519,
    "creationTimeSeconds": 1646906433,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "vansh_kapila"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 102400,
    "source": "/* Author : VANSH KAPILA */\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define int long long\r\n#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\nconst int mod = 1000000007;\r\n\r\nint32_t main() {\r\n\r\n    IOS;\r\n    int n;\r\n    cin >> n;\r\n    vector<int> arr(n);\r\n    for (int i = 0; i < n; i++)cin >> arr[i];\r\n    vector<int> brr(n);\r\n    for (int i = 0; i < n; i++)cin >> brr[i];\r\n\r\n    int pre[n];\r\n    pre[0] = arr[0] * brr[0];\r\n    for (int i = 1; i < n; i++)\r\n    {\r\n        pre[i] = pre[i - 1] + arr[i] * brr[i];\r\n    }\r\n    int sum = pre[n - 1];\r\n    int ans = sum;\r\n    for (int i = 0; i < n; i++)\r\n    {   int temp = sum;\r\n        for (int j = 0; j <= i; j++)\r\n        {   if (i + j < n)\r\n            {\r\n                temp = temp + arr[i - j] * brr[i + j] + arr[i + j] * brr[i - j] - arr[i - j] * brr[i - j] - arr[i + j] * brr[i + j];\r\n                ans = max(ans, temp);\r\n            }\r\n        }\r\n        temp = sum;\r\n        for (int j = 1; j <= i - 1; j++)\r\n        {\r\n            if (i + j < n)\r\n            {\r\n                temp = temp + arr[i - j + 1] * brr[i + j] + arr[i + j] * brr[i - j + 1] - arr[i - j + 1] * brr[i - j + 1] - arr[i + j] * brr[i + j];\r\n                ans = max(ans, temp);\r\n            }\r\n        }\r\n    }\r\n    cout << ans << endl;\r\n    return 0;\r\n}"
}