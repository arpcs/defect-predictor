{
    "id": 186736974,
    "contestId": 1519,
    "creationTimeSeconds": 1672040747,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "palsatyam877"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 200908800,
    "source": "//**Template_begin**//\r\n#include<bits/stdc++.h>\r\n\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds; // find_by_order, order_of_key\r\n \r\n#define ll unsigned long long\r\n#define ld long double\r\n#define inf 1000000000000000005\r\n#define mod1 1000000007\r\ntypedef pair<int, int> pii;\r\ntypedef vector<int> vii;\r\ntypedef vector<ll> vll;\r\ntypedef pair<ll, ll> pll;\r\n#define pb push_back\r\n#define ppb pop_back\r\n#define puf push_front\r\n#define pof pop_front\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define sz(x) (ll)x.size()\r\n#define _BENZ_ ios_base::sync_with_stdio(false);cin.tie(NULL);\r\nconst int N = 1e6 + 10;\r\n \r\n// std::cout << std::fixed;\r\n// std::cout << std::setprecision(12);\r\n// floor(2.3)\r\n// ceil(2.3)\r\n \r\n//******//\r\n//**Template_end***//\r\nll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0) {if (b & 1ll)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1ll;} return res;}\r\n\r\nll c[5000 + 5][5000 + 5];\r\n\r\nvoid solve(){\r\n    ll n;\r\n    cin >> n;\r\n\r\n    vector<ll> a(n + 5 , 0ll) , b(n + 5 , 0ll);\r\n\r\n    for(ll i = 1; i <= n; ++i) {\r\n        cin >> a[i];\r\n    }\r\n\r\n    for(ll i = 1; i <= n; ++i) {\r\n        cin >> b[i];\r\n    }\r\n\r\n    if(n == 1) {\r\n         cout << (ll)(a[1] * b[1]) << \"\\n\";\r\n         return;\r\n    }\r\n\r\n    for(ll i = 1; i <= n; ++i) {\r\n        for(ll j = 1; j <= n; ++j) {\r\n            c[i][j] += (a[i] * b[j]);\r\n        }\r\n    }\r\n\r\n    for(ll i = 1; i <= n; ++i) {\r\n\r\n        ll p = i , sum = 0ll , d = 0ll;\r\n\r\n        for(ll j = n; j >= 1; --j) {\r\n            d += c[p][j];\r\n            p++;\r\n        }\r\n\r\n        p = i;\r\n\r\n        for(ll j = n; j >= 1; --j) {\r\n\r\n            if(j < p) break;\r\n\r\n            c[p][j] = d - sum;  \r\n            \r\n            sum += ((a[p] * b[j]) + (a[j] * b[p]));\r\n            p++;\r\n        }\r\n    }\r\n\r\n    for(ll i = n - 1ll; i >= 1; --i) {\r\n\r\n            ll p = i , d = 0ll , sum = 0ll;\r\n\r\n            for(ll j = 1; j <= i; ++j) {\r\n                 d += c[j][p];\r\n\r\n                 // cout << j << \" \" << p << \"\\n\";\r\n                 p--;\r\n            }\r\n\r\n            p = i;\r\n\r\n            for(ll j = 1; j <= i; ++j) {\r\n\r\n                if(j > p) break;\r\n\r\n                c[j][p] = d - sum;\r\n\r\n                // cout << j << \" \" << p << \" $\\n\";\r\n\r\n                sum += ((a[j] * b[p]) + (a[p] * b[j]));\r\n                p--;\r\n            }\r\n    }\r\n\r\n    // for(ll i = 1; i <= n; ++i) {\r\n    //     for(ll j = 1; j <= n; ++j) {\r\n    //         cout << c[i][j] << \" \";\r\n    //     }\r\n    //     cout << \"\\n\";\r\n    // }\r\n\r\n    ll ans = 0ll;\r\n\r\n    vll d(n + 5 , 0ll) , e(n + 5 , 0ll);\r\n\r\n    for(ll i = 1; i <= n; ++i) {\r\n        d[i] += (d[i - 1] + (a[i] *  b[i])); \r\n    }\r\n\r\n    for(ll i = n; i >= 1; --i) {\r\n        e[i] += (e[i + 1] + (a[i] * b[i]));\r\n    }\r\n\r\n    for(ll i = 1; i <= n; ++i) {\r\n        for(ll j = i + 1; j <= n; ++j) {\r\n             ll cans = d[i - 1] + e[j + 1] + c[i][j];\r\n             ans = max(ans , cans);\r\n\r\n             // cout << cans << \" \";\r\n        }\r\n        // cout << \"\\n\";\r\n    }\r\n\r\n    ans = max(ans , d[n]);\r\n\r\n    cout << ans << \"\\n\";\r\n}  \r\n \r\nint32_t main(){\r\n \r\n    _BENZ_\r\n \r\n    ll t = 1;\r\n    // cin >> t;\r\n \r\n    while(t--){\r\n        solve();\r\n    }   \r\n\r\n /*\r\n   Think of the edge case (n == 1 ?).\r\n   Don't get stuck on a single approach for a long time.\r\n   Also don't get stuck on a single problem for a long time :).\r\n */   \r\n \r\n    return 0;\r\n}\r\n\r\n/*\r\n\r\n*/\r\n "
}