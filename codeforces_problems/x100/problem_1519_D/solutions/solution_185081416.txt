{
    "id": 185081416,
    "contestId": 1519,
    "creationTimeSeconds": 1670938615,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "Manav_Shah24"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define endl '\\n'\r\n#define pd pair<ll, ll>\r\n// seen editorial\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\n// you can change less to whatever you need\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;\r\n// find_by_order(k) finds kth element, order_of_key(x) count of element less than x\r\n\r\nsigned main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n\r\n    ll t, i, j;\r\n    ll n;\r\n    cin >> n;\r\n    ll a[n + 1], b[n + 1];\r\n    for (i = 1; i <= n; i++)\r\n        cin >> a[i];\r\n    for (i = 1; i <= n; i++)\r\n        cin >> b[i];\r\n    ll prefix[n + 2];\r\n    prefix[0] = 0;\r\n    for (i = 1; i <= n; i++)\r\n    {\r\n        prefix[i] = prefix[i - 1] + (a[i] * b[i]);\r\n    }\r\n    prefix[n + 1] = prefix[n];\r\n    ll ans = 0;\r\n    for (ll current = 1; current <= n; current++)\r\n    {\r\n        ll temp = 0;\r\n        // cout << ans << endl;\r\n        for (ll left = current, right = current; left >= 1 && right <= n; left--, right++)\r\n        {\r\n            temp += (a[left] * b[right]);\r\n            if(left!=right) temp+=(b[left]*a[right]);\r\n            // cout << left << \" \" << right << endl;\r\n            ans = max(ans, temp + prefix[left - 1] + prefix[n]-prefix[right]);\r\n        }\r\n        temp=0;\r\n        for (ll left = current, right = current+1; left >= 1 && right <= n; left--, right++)\r\n        {\r\n            temp += (a[left] * b[right]);\r\n            temp+=(b[left]*a[right]);\r\n            ans = max(ans, temp + prefix[left - 1] + prefix[n]-prefix[right]  );\r\n        }\r\n    }\r\n    cout << ans << endl;\r\n\r\n    return 0;\r\n}"
}