{
    "id": 232024918,
    "contestId": 1519,
    "creationTimeSeconds": 1699511287,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "bkifhr10"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 200806400,
    "source": "#include <stdio.h>\n#include <algorithm>\n//mo\n#define int long long\n\nint read(int x = 0, int f = 0, char ch = getchar())\n{\n\twhile (ch < 48 or ch > 57) f = ch == '-', ch = getchar();\n\twhile (48 <= ch and ch <= 57) x = x * 10 + ch - 48, ch = getchar();\n\treturn f ? -x : x;\n}\n\nconst int N = 5e3 + 5;\n\nint n, sum, a[N], b[N], f[N][N];\n\nsigned main()\n{\n\tn = read();\n\tfor (int i = 1; i <= n; i++) a[i] = read();\n\tfor (int i = 1; i <= n; i++) b[i] = read();\n\tfor (int i = 1; i <= n; i++) sum += a[i] * b[i];\n\tfor (int i = 1; i <= n; i++) f[i][i] = f[i + 1][i] = f[i][i + 1] = sum;\n\tfor (int len = 2; len <= n; len++)\n\t\tfor (int i = 1, j = i + len - 1; j <= n; i++, j++)\n\t\t\tf[i][j] = f[i + 1][j - 1] - a[i] * b[i] - a[j] * b[j] + a[i] * b[j] + a[j] * b[i];\n\tsum = 0;\n\tfor (int i = 1; i <= n; i++) for (int j = i; j <= n; j++) sum = std::max(sum, f[i][j]);\n\treturn printf(\"%lld\", sum), 0;\n}\n\t\t\t\t\t\t \t\t      \t  \t  \t \t\t     \t"
}