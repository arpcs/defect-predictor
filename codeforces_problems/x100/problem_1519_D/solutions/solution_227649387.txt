{
    "id": 227649387,
    "contestId": 1519,
    "creationTimeSeconds": 1697016090,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "Sadbo1_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 202137600,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n#define IOS ios::sync_with_stdio(false),cin.tie(nullptr),cout.tie(nullptr);\r\n#define int long long\r\n#define ull unsigned long long\r\n#define lowbit(i) ((i)&(-i))\r\n#define ls(p) (p<<1)\r\n#define rs(p) (p<<1|1)\r\n#define rep(i, a, b) for(int i=a;i<=b;i++)\r\n#define per(i, a, b) for(int i=a;i>=b;i--)\r\n\r\ntypedef pair<int, int> PII;\r\nconst int mod = 1e9 + 7;\r\nconst int inf = 0x3f3f3f3f;\r\nconst int N = 5000 + 20;\r\n\r\nint qpow(int a, int n) {\r\n    int ans = 1;\r\n    while (n) {\r\n        if (n & 1) {\r\n            ans = ans * a % mod;\r\n        }\r\n        a = a * a % mod;\r\n        n >>= 1;\r\n    }\r\n    return ans;\r\n}\r\nint a[N],b[N];\r\nint pre[N];\r\nint dp[N][N];\r\nsigned main() {\r\n    IOS\r\n    int n;\r\n    cin>>n;\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        cin>>a[i];\r\n    }\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        cin>>b[i];\r\n        pre[i]=pre[i-1]+a[i]*b[i];\r\n    }\r\n    for(int len=1;len<=n;len++)\r\n    {\r\n        for(int l=1;l+len-1<=n;l++)\r\n        {\r\n            int r=l+len-1;\r\n            if(l==r)dp[l][r]=pre[n];\r\n            else dp[l][r]=pre[l-1]+pre[n]-pre[r]+a[l]*b[r]+a[r]*b[l]+pre[r-1]-pre[l];\r\n        }\r\n    }\r\n    int ans=0;\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        for(int j=1;j<=n;j++)\r\n        {\r\n            ans=max(ans,dp[i][j]);\r\n         //   cout<<dp[i][j]<<endl;\r\n        }\r\n    }\r\n    cout<<ans<<endl;\r\n    return 0;\r\n}"
}