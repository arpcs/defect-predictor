{
    "id": 215355903,
    "contestId": 1519,
    "creationTimeSeconds": 1690202654,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "bkifhr6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "Clang++17 Diagnostics",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<iostream>\n#include<cstdio>\n#include<algorithm>\n\nusing namespace std;\n#define int long long\n\nint arr[1000000];\nint brr[1000000];\nint dp[5009][5009];//\u4ee3\u8868\u7ffb\u8f6c\u4e00\u4e2a\u533a\u95f4\u540e\u7684\u603b\u6570\nint fanzhuan[5009][5009];//\u4ee3\u8868\u7ffb\u8f6c\u4e00\u4e2a\u533a\u95f4\u7684\u503c\uff1b\nint sum[6000];int maxx;\nsigned main()\n{\n    int n=0;\n    scanf(\"%lld\",&n);\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&arr[i]);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&brr[i]);\n    }\n    for(int i=1;i<=n;i++)\n    {\n        sum[i]=sum[i-1]+arr[i]*brr[i];\n    }\n    for(int i=1;i<=n;i++)\n    {\n        fanzhuan[i][i]=arr[i]*brr[i];\n        dp[i][i]=sum[n];\n    }\n    maxx=sum[n];\n\n    for(int i=1;i<n;i++)\n    {\n        fanzhuan[i][i+1]=arr[i]*brr[i+1]+brr[i]*arr[i+1];\n        dp[i][i+1]=sum[n]-(sum[i+1]-sum[i-1])+fanzhuan[i][i+1];\n        maxx=max(maxx,dp[i][i+1]);\n    }\n    for(int i=2;i<=n-1;i++)\n    {\n        for(int j=1;j+i<=n;j++)\n        {\n            fanzhuan[j][j+i]=fanzhuan[j+1][j+i-1]+arr[j]*brr[j+i]+arr[j+i]*brr[j];\n            dp[j][j+i]=sum[n]-(sum[j+i]-sum[j-1])+fanzhuan[j][j+i];\n            maxx=max(maxx,dp[j][j+i]);\n        }\n    }\n    printf(\"%lld\",maxx);\n    return 0;\n}\n\n\n   \t     \t \t\t \t  \t\t\t\t \t  \t\t\t\t \t"
}