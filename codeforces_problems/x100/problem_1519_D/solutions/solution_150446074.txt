{
    "id": 150446074,
    "contestId": 1519,
    "creationTimeSeconds": 1647948116,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "AshutoshKJha"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 436,
    "memoryConsumedBytes": 200192000,
    "source": "/* In case of long long data types pow function, ceil , floor etc. don,t work very well , It,s better to do things old fashioned way(means as\r\n clear and deep as possible)  */\r\n \r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n/*transform(s.begin(), s.end(), s.begin(), ::toupper);\r\n cout << fixed << setprecision(9) <<  */\r\ntypedef long long ll;\r\n#define F first\r\n#define S second\r\n#define PB push_back\r\n#define MP make_pair\r\n#define fo(i,a,b) for (ll i = a; i < b; i++)\r\n#define dloop(i,a,b) for (ll i = a-1; i >= b; i--)\r\n#define rev(a) reverse(a.begin(),a.end())\r\n#define srt(a) sort(a.begin(),a.end())\r\n#define grt(a) sort(a.begin(),a.end(),greater<ll>())\r\n#define fl LLONG_MAX\r\n#define fm LLONG_MIN\r\n#define arrmax(a) *max_element(a.begin(),a.end())\r\n#define PI 3.14159265\r\n#define mp(a,b) make_pair(a,b)\r\n#define pa pair< int ,int>  \r\n#define ll long long  \r\n// Driver function to sort the vector elements\r\n// by second element of pairs\r\nbool sortbysec( const pa &a,\r\n             const pa &b)\r\n{\r\n    return a.S< b.S;\r\n}\r\nint mod = 1e9 + 7 ;\r\nvoid solve()\r\n{\r\n\tint n ;\r\n\tcin>>n ;\r\n\tll a[n];\r\n\tll b[n];\r\n\tfo(i,0,n)\r\n\tcin>>a[i];\r\n\tfo(i,0,n)\r\n\tcin>>b[i];\r\n\t\r\n\tll dp[n+1][n+1] ;\r\n\tfor(int i = 0 ; i < n ; i++)\r\n\tfor(int j = 0 ; j < n ; j++)\r\n\tdp[i][j]=0 ;\r\n\t\r\n\r\n\tfor(int i = 1; i < n ; i++)\r\n\t{\r\n\t\tfor(int j = 0; i + j < n ; j++)\r\n\t\t{\r\n\t\t\tif(i>1)\r\n\t\t\tdp[j][j+i]+= dp[j+1][i-1 + j ];\r\n\t\t\t\r\n\t\t\tdp[j][i+j] -= (a[j]*b[j] + a[i+j]*b[i+j]) - (a[j+i]*b[j] + a[j]*b[i+j]);\r\n\t\t\r\n\t\t\tif(dp[j][j+i]%n >mod)\r\n\t\t\tdp[j][j+i]%=mod;\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\tll sum = 0 ;\r\n\tfor(int i = 0 ; i < n ;i++)\r\n\t{sum += a[i]*b[i];\r\n\t\r\n\t\tsum %= mod ;\r\n\t}ll ans = 0 ;\r\n\tfor(int i = 0 ;i<n ;i++ )\r\n\tfor(int j = 0 ; j < n ; j++)\r\n\tans = max( ans , dp[i][j]);\r\n\r\n\t\r\n\tcout<<(sum+ans)%mod<<endl;\r\n}\r\n\t\r\n \r\n \r\n \r\n \r\n \r\n \r\n  \r\n int main() {\r\n\tios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n//\tint p = 0;\r\n//\tfreopen(\"error.txt\", \"w\", stderr);\r\n    // freopen(\"input.txt\", \"r\", stdin);\r\n// freopen(\"output.txt\", \"w\", stdout);\r\n \r\n\tint t = 1;\r\n   // cin >> t;\r\n\twhile (t--)\r\n\t{\r\n\t\t// p++; cout << \"Case #\" << p << \": \";\r\nsolve();\r\n\t}\r\n}\r\n "
}