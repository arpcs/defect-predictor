{
    "id": 193578800,
    "contestId": 1519,
    "creationTimeSeconds": 1676369479,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "lakshayjoshi15"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 102400,
    "source": "#include\"bits/stdc++.h\"\r\n#define int long long\r\n#define MOD 1000000007\r\n#define p 31\r\nusing namespace std;\r\n\r\n// int help(int l, int r, vector<int> &v1, vector<int> &v2)\r\n// {\r\n//   if(l > r) return 0;\r\n//   if(l == r)\r\n//   {\r\n//     return v1[l] * v2[r];\r\n//   }\r\n//   if(l == r-1)\r\n//   {\r\n//     int a = v1[l]*v2[l] + v1[r]*v2[r];\r\n//     int b = v1[r]*v2[l] + v1[l]*v2[r];\r\n//     return max(a,b);\r\n//   }\r\n\r\n//   int al = v1[l]*v2[l] + help(l+1,r,v1,v2);\r\n//   int be = v1[r]*v2[r] + help(l,r-1,v1,v2);\r\n//   int ga = v1[]\r\n// }\r\n\r\nvoid solve()\r\n{\r\n  int n;\r\n  cin>>n;\r\n\r\n  vector<int> v1(n);\r\n  vector<int> v2(n);\r\n\r\n  for(int i=0; i<n; i++)\r\n  {\r\n    cin>>v1[i];\r\n  }\r\n  for(int i=0; i<n; i++)\r\n  {\r\n    cin>>v2[i];\r\n  }\r\n  vector<int> pre(n);\r\n  pre[0] = v1[0] * v2[0];\r\n  for(int i=1; i<n; i++)\r\n  {\r\n    pre[i] = pre[i-1] + (v1[i]*v2[i]);\r\n  }\r\n  int ans = pre[n-1];\r\n  //cout<<ans<<endl;\r\n  for(int c=0; c<n; c++)\r\n  {\r\n    //For odd length subarray with center c\r\n    int curr = (v1[c] * v2[c]);\r\n    for(int l=c-1, r=c+1; l>0 && r<n ; l--, r++)\r\n    {\r\n      curr += (v1[r]*v2[l]) + (v1[l]*v2[r]);\r\n      ans = max(ans, curr + pre[l-1] + pre[n-1] - pre[r]);\r\n    }\r\n\r\n    //For even length sequence\r\n    curr = 0;\r\n    for(int l=c, r=c+1; l>0 && r<n; l--, r++)\r\n    {\r\n      curr += (v1[r]*v2[l]) + (v1[l]*v2[r]);\r\n      ans = max(ans, curr + pre[l-1] + pre[n-1] - pre[r]);\r\n    }\r\n  }\r\n  cout<<ans<<endl;\r\n}\r\n\r\nsigned main()\r\n{ \r\n  ios_base::sync_with_stdio(false);\r\n  cin.tie(NULL);\r\n  // int t;\r\n  // cin>>t;\r\n  // while(t--) \r\n  solve();\r\n  return 0;\r\n}\r\n "
}