{
    "id": 146327262,
    "contestId": 1519,
    "creationTimeSeconds": 1644829611,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "_yash105"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 452,
    "memoryConsumedBytes": 208076800,
    "source": "#include<bits/stdc++.h>\r\n#define yes \"YES\"\r\n#define no \"NO\"\r\n#define vi vector<int>\r\nusing namespace std;\r\n#define int long long\r\n#define tezi ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n#define all(v) v.begin(),v.end()\r\n#define fi first\r\n#define se second\r\n#define pb push_back\r\n#define PI 3.1415926535\r\n#define INF             2000000000000000000\r\n#define display(a) for(int i=0;i<a.size();i++) cout<<a[i]<<' '; cout<<endl;\r\n#define showarray(a,n) for(int i=0;i<n;i++) cout<<a[i]<<' ';cout<<endl;\r\n#define countsetbits(x)     __builtin_popcountll(x)\r\n#define mem(a,b)            memset(a,b,sizeof(a))\r\n#define dbg(x)      cout << #x << \"is\" << x << endl;\r\n#define f                   first\r\n#define s                   second\r\n#define ci                  cin>>\r\n#define co                  cout<<\r\ntypedef pair<int,int>           pii;\r\nint prime[1000005];\r\nvoid prime_sieve()\r\n{\r\n    for (int i = 0; i <= 1000005;i++)\r\n    {\r\n     prime[i] = 1;\r\n    }\r\n     prime[0] = prime[1] = 0;\r\n    for (int i = 1; i*i <= 1000005;i++)\r\n   {\r\n    if(prime[i]==1)\r\n    {\r\n    for (int j = 2 * i; j <= 1000005;j+=i)\r\n    {\r\n    prime[j] = 0;\r\n    }\r\n    }\r\n    }\r\n}\r\nint cntsetbits(int n)\r\n{\r\nint cnt = 0;\r\nwhile(n>0)\r\n{\r\ncnt++;\r\nint rsb_mask = (n & (-n));\r\nn = n - rsb_mask;\r\n }\r\nreturn cnt;\r\n}\r\nvi read(int n)\r\n{\r\nvi a(n);\r\nfor (int i = 0; i < n;i++)\r\n{\r\ncin>> a[i];\r\n}\r\n return a;\r\n}\r\nbool isprime(int n){if(n==1){return false;} for(int i=2;i<=sqrt(n);i++){if(n%i==0){return false;} }return true;}\r\nbool isperfectsquare(int n) { int y = sqrt(n); if(n==y*y){return true;}return false;}\r\nvi factors;\r\nvoid primefactors(int n){for(int i=1;i<=sqrt(n);i++){if(n%i==0){if(isprime(i)){factors.push_back(i);}if(isprime(n/i)){factors.push_back(n/i);}}}}\r\n \r\nvoid _timelimitExceeded_ ()\r\n{\r\n     int n;cin>>n;\r\n     vi a = read(n);\r\n     vi b = read(n);\r\n     int ans = 0;\r\n     for (int i = 0; i < n;i++)\r\n     {\r\n         ans += (a[i] * b[i]);\r\n     }\r\n     int dp[n][n];\r\n     memset(dp, 0, sizeof(dp));\r\n     int ans1 = INT_MIN;\r\n     for (int g = 0; g < n;g++)\r\n     {\r\n         for (int i = 0, j = g;j<n;i++,j++)\r\n         {\r\n            if(g==0)\r\n            {\r\n                dp[i][j] = ans;\r\n            }else{\r\n                int initial = a[i] * b[i] + a[j] * b[j];\r\n                int final = a[i] * b[j] + a[j] * b[i];\r\n                if(g==1)\r\n                {\r\n                    dp[i][j] = ans + final - initial;\r\n                }else{\r\n                dp[i][j] = dp[i + 1][j - 1] + final - initial;\r\n                }\r\n            }\r\n            ans1 = max(ans1, dp[i][j]);\r\n         }\r\n     }\r\n     cout << ans1 << endl;\r\n}\r\nsigned main(){\r\ntezi\r\nint t=1;\r\n// cin>>t;\r\nwhile(t--)\r\n{\r\n_timelimitExceeded_ ();\r\n}\r\n    return 0;\r\n}",
    "defect_evaluation_v4": {
        "good solution": 60,
        "wrong solution": 30,
        "compilation error": 5,
        "runtime error": 5
    },
    "category_evaluation": {
        "mathematics": 60,
        "dynamic programming": 80,
        "bit manipulation": 0,
        "greedy": 0,
        "brute force": 60,
        "graphs": 0,
        "sortings": 20,
        "search": 0,
        "trees": 0,
        "strings": 0,
        "number theory": 0,
        "combinatorics": 0,
        "two pointers": 0,
        "geometry": 0,
        "shortest paths": 0,
        "divide and conquer": 0,
        "probabilities": 0,
        "data structures": 0,
        "game theory": 0,
        "2d, 3d": 0,
        "recursive": 0,
        "well-commented": 40,
        "self-documenting": 0,
        "complex": 20,
        "readable": 40,
        "well-named": 20,
        "efficient": 20,
        "reusable": 0,
        "documented": 20,
        "good error-handling": 0,
        "good solution": 80,
        "compilation error": 0,
        "runtime error": 0
    }
}