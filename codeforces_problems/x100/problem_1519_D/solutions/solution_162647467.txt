{
    "id": 162647467,
    "contestId": 1519,
    "creationTimeSeconds": 1656854887,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "as1605"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include \"bits/stdc++.h\"\n//#include <ext/pb_ds/assoc_container.hpp> \n//#include <ext/pb_ds/tree_policy.hpp>\n//using namespace __gnu_pbds;\n\n//#define LOCAL //Comment in if custom header not set //Comment out when submitting\n#define endl '\\n' //Comment out if interactive\n#define int long long //Comment out if memory exceeds\n\nusing namespace std;\n\nconst int MOD=1000000007; //Comment in if question asks to take mod by this number\n/*\nif we flip [l...r]\ns += Si{a[r-i]*b[l+i] - a[l+i]*b[l+i]}\nor Si{b[l+i]*(a[r-i] - a[l+i])}\nor Si{b[x] * (a[y]- a[x])}\ny = x - l + r - i - i;\nx = l + i => i = x - l\ny = x - l + r - x + l - x + l;\ny = r + l - x;\nx + y = l + r\n\ndp[i][j] + dp[i+1][j-1]...\n*/\nvoid solve() {\n    //Write your solution here\n    int n; cin>>n;\n    int a[n]; for (int i=0; i<n; cin>>a[i++]);\n    int b[n]; for (int i=0; i<n; cin>>b[i++]);\n\n    int ans = 0;\n    for (int i=0; i<n; i++) {\n        ans += a[i]*b[i];\n    }\n    int dp[n][n];\n    for (int i=0; i<n; i++) {\n        for (int j=0; j<n; j++) {\n            dp[i][j] = (a[j] - a[i])*b[i];\n            // cout<< dp[i][j] <<'\\t';\n        }\n        // cout <<endl;\n    }\n    int diff = 0;\n    for (int i = 0; i<n; i++) {\n        int s = 0;\n        for (int j=0; i/2 + j + 1 < n and i/2 - j + 1 >= 0; j++) {\n            int x = i/2 + j + 1;\n            int y = i/2 - j + 1;\n            s += dp[x][y] + dp[y][x];\n            diff = max(diff, s);\n        }\n    }\n    for (int i = 1; i<n; i++) {\n        int s = 0;\n        for (int j=0; (i+n)/2 + j + 1 < n and (i+n)/2 - j + 1 >=0; j++) {\n            int x = (i+n)/2 + j + 1;\n            int y = (i+n)/2 - j + 1;\n            s += dp[x][y] + dp[y][x];\n            diff = max(diff, s);\n        }\n    }\n    cout<< ans +diff <<endl;\n}\n\nsigned main() {\n    ios::sync_with_stdio(false);\n    cin.tie(NULL); cout.tie(NULL);\n    #ifdef LOCAL\n        freopen(\"input.txt\", \"r\", stdin);\n        freopen(\"output.txt\", \"w\", stdout);\n        auto start_timer = chrono::high_resolution_clock::now();\n    #endif\n\n    int t=1;\n    // cin>>t; //Comment out if single test case\n    while (t--) {\n        solve();\n    }\n\n    #ifdef LOCAL\n        auto stop_timer = chrono::high_resolution_clock::now();\n        auto duration = chrono::duration_cast<chrono::nanoseconds>(stop_timer - start_timer);\n        cerr << \"Time taken : \" << ((long double)duration.count())/((long double) 1e9) <<\"s \"<< endl;\n    #endif\n    return 0;\n}\n"
}