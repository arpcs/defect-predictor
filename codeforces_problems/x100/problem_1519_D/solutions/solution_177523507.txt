{
    "id": 177523507,
    "contestId": 1519,
    "creationTimeSeconds": 1666505444,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "Euphoria_07"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 436,
    "memoryConsumedBytes": 102502400,
    "source": "#include <bits/stdc++.h>\r\ntypedef long double ld;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\n#define vi vector<ll>\r\n#define vll vector<long long>\r\n#define take_input(v1,n) for(int i=0;i<n;++i){ cin>>v1[i];}\r\n#define test() ll t; cin >> t; while(t--)\r\nusing namespace std;\r\n\r\n\r\nstruct data_1{\r\nint a1;\r\nint b1 ;\r\nint c1 ;\r\n};\r\n\r\n\r\nclass compare{\r\npublic:\r\nbool operator()(data_1* s1,data_1 *s2){\r\nreturn s1->c1 < s2->c1;\r\n}\r\n};\r\n\r\n\r\nbool compare_greater(pair<int,int>&p1,pair<int,int>&p2){\r\nreturn p1.second > p2.second;\r\n}\r\nbool compare_lesser(pair<int,int>&p1,pair<int,int>&p2){\r\nreturn p1.second < p2.second;\r\n}\r\n\r\n\r\nvoid print_arr(vector<int>&v1,int n,int n1 = 0){\r\nfor (int i=n1;i<n;++i){\r\ncout<<v1[i]<<' ';\r\n}\r\ncout<<endl;\r\n}\r\n\r\n\r\nint main() {\r\n\r\n\r\nios_base::sync_with_stdio(0);\r\ncin.tie(0); cout.tie(0);\r\nint n;\r\ncin>>n;\r\nvi v1(n);\r\nvi v2(n);\r\nfor (int i=0;i<n;++i){\r\n    cin>>v1[i];\r\n}\r\nfor (int i=0;i<n;++i){\r\n    cin>>v2[i];\r\n}\r\nll ans = 0;\r\nfor (int i=0;i<n;++i){\r\n    ll a1 = v1[i]*v2[i];\r\n    ans+=a1;\r\n}\r\n\r\nvector<bool> visited[n+1];\r\nvector<ll> dp[n+1];\r\nfor (int i=0;i<n;++i){\r\n    vector<ll> p1(n-i);\r\n    vector<bool> p2(n-i,false);\r\n    visited[i] = p2;\r\n    dp[i] = p1;\r\n    for (int j=i+1;j<n;++j){\r\n        ll a1 = v1[i];\r\n        ll a2 = v1[j];\r\n        ll b1 = v2[i];\r\n        ll b2 = v2[j];\r\n        dp[i][j-i] = a1*b2 + a2*b1 - a1*b1 - a2*b2;\r\n        if (dp[i][j-i] <= 0){\r\n            visited[i][j-i] = true;\r\n        }\r\n    }\r\n}\r\nll maxi = 0;\r\nfor (int i=0;i<n;++i){\r\n    for (int j = i+1;j<n;++j){\r\n    if (!visited[i][j-i]){\r\n        ll ans1= 0;\r\n        int r1 = i;\r\n        int r2 = j;\r\n        while (r1<r2 && ans1 >=0){\r\n            ans1+=dp[r1][r2-r1];\r\n            if (ans1 > 0){\r\n                visited[r1][r2-r1] = true;\r\n            }\r\n            else{\r\n                break;\r\n            }\r\n            r1++;\r\n            r2--;\r\n        }\r\n        maxi= max(maxi,ans1);\r\n}\r\n}\r\n}\r\ncout<<ans+maxi<<endl;\r\n\r\n\r\n\r\n    return 0;\r\n\r\n\r\n}\r\n\r\n"
}