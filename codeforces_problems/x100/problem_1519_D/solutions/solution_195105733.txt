{
    "id": 195105733,
    "contestId": 1519,
    "creationTimeSeconds": 1677488362,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "_MUSAFIR_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 102400,
    "source": "/* Bismillahir Rahmanir Raheem */\r\n/* Author: _MUSAFIR_ */\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define     ll            long long int\r\n#define     ull           unsigned long long int\r\n#define     sz(n)         (int)(n).size()\r\n#define     testCase      ll tc;cin>>tc;while(tc--)\r\n#define     endl          \"\\n\"\r\n#define     yes           cout << \"YES\" << endl\r\n#define     no            cout << \"NO\" << endl\r\n#define     pb            push_back\r\n#define     mp            make_pair\r\n#define     sp            setprecision\r\n#define     all(v)        v.begin(), v.end()\r\n#define     rall(v)       v.rbegin(), v.rend()\r\n#define     mxt(v)        *max_element(v.begin(),v.end())\r\n#define     mnt(v)        *min_element(v.begin(),v.end())\r\n#define     optimize()    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n#define     PI            (2*acos(0))\r\n#define     eps           1e-12\r\n\r\n\r\n\r\ntemplate < typename F, typename S >ostream& operator << ( ostream& os, const pair< F, S > & p ) {return os << \"(\" << p.first << \", \" << p.second << \")\";}\r\ntemplate < typename T >ostream &operator << ( ostream & os, const vector< T > &v ) {os << \"{\";for(auto it = v.begin(); it != v.end(); ++it) {if( it != v.begin() ) os << \", \";os << *it;}return os << \"}\";}\r\ntemplate < typename T >ostream &operator << ( ostream & os, const set< T > &v ) {os << \"[\";for(auto it = v.begin(); it != v.end(); ++it) {if( it != v.begin() ) os << \", \";os << *it;}return os << \"]\";}\r\ntemplate < typename T >ostream &operator << ( ostream & os, const multiset< T > &v ) {os << \"[\";for(auto it = v.begin(); it != v.end(); ++it) {if( it != v.begin() ) os << \", \";os << *it;}return os << \"]\";}\r\ntemplate < typename F, typename S >ostream &operator << ( ostream & os, const map< F, S > &v ) {os << \"[\";for(auto it = v.begin(); it != v.end(); ++it) {if( it != v.begin() ) os << \", \";os << it -> first << \" = \" << it -> second ;}return os << \"]\";}\r\n#define dbg(args...) do {cerr << #args << \" : \"; arif(args); } while(0)\r\nclock_t tStart = clock();\r\n#define timeStamp dbg(\"Execution Time: \", (double)(clock() - tStart)/CLOCKS_PER_SEC)\r\nvoid arif () {cerr << endl;}\r\ntemplate <typename T>void _Musafir_( T a[], int n ) {for(int i = 0; i < n; ++i) cerr << a[i] << ' ';cerr << endl;}\r\ntemplate <typename T, typename ... hello>void arif( T arg, const hello &... rest) {cerr << arg << ' ';arif(rest...);}\r\n\r\n//get done with thinking, then move to coding. Don't cycle\r\n\r\n\r\n\r\n\r\nll gcd(ll x, ll y){if (y == 0) return x;return gcd(y, x%y);}\r\nll lcm(ll a, ll b){return (a * b) / gcd(a, b);}\r\nll fact(ll n){if ((n == 0) || (n == 1))return 1;else return n * fact(n - 1);}\r\nint doubleCmp(double a, double b){if(fabs(a - b) <= 1e-10) return 0;else if(a > b) return 1;else return -1;}\r\nstring toBinary(ll num){string a;while(num){if(num % 2)a+='1';else a+='0';num/=2;}reverse(a.begin(),a.end());return a;}\r\nint isSubstring(string s1, string s2){if (s2.find(s1) != string::npos)return s2.find(s1);return -1;}\r\ndouble toRad(double X){return (PI * X) / 180.0;}\r\ndouble toDeg(double X){if(X < 0)X +=(2*PI);return ((180.0 * X)/PI);}\r\ndouble fixAngle(double A){return A > 1 ? 1 : (A < -1 ? -1 : A);}\r\n\r\n///Binary Search for finding a number.\r\n/*      ll x,f=0;\r\n        cin>>x;\r\n        ll l=0,r=n-1;\r\n        while(l<=r)\r\n        {\r\n            ll m = (l+r)/2;\r\n            if(a[m] == x){\r\n                f = 1;\r\n                break;\r\n            }\r\n            else if(x < a[m]) r = m-1;\r\n            else l = m+1;\r\n        }\r\n        if(f==1) cout<< \"YES\"<< endl;\r\n        else cout << \"NO\" << endl;\r\n*/\r\n\r\n/// Binary Search for finding Lower Bound\r\n/*      ll x;\r\n        cin >> x;\r\n        ll l = -1, r = n;\r\n        while (l + 1 < r){\r\n            ll m = (l + r) / 2;\r\n            if (x <= a[m]) r = m;\r\n            else l = m;\r\n        }\r\n        cout << r << endl;\r\n*/\r\n\r\n/// Binary Search for finding Upper Bound\r\n/*      ll x;\r\n        cin >> x;\r\n        ll l = -1, r = n;\r\n        while (l + 1 < r){\r\n            ll m = (l + r) / 2;\r\n            if (x < a[m]) r = m;\r\n            else l = m;\r\n        }\r\n        cout << r << endl;\r\n*/\r\n\r\n/*=========================================================================*/\r\n\r\nvoid Bismillah()\r\n{\r\n    ll n,ans=0,max_ans;\r\n    cin >> n;\r\n    vector<ll>a(n),b(n);\r\n    for(int i=0; i<n; i++) cin >> a[i];\r\n    for(int i=0; i<n; i++) cin >> b[i];\r\n    for(int i=0; i<n; i++) ans+=(a[i]*b[i]);\r\n    max_ans = ans;\r\n\r\n    for(int i=0; i<n; i++){\r\n        ll total = ans;\r\n        ll l = i-1;\r\n        ll r = i+1;\r\n        while(l>=0 && r<n){\r\n            total-=(a[l]*b[l] + a[r]*b[r]);\r\n            total+=(a[l]*b[r] + a[r]*b[l]);\r\n            max_ans = max(total,max_ans);\r\n            l--,r++;\r\n        }\r\n    }\r\n\r\n    for(int i=0; i<n; i++){\r\n        ll total = ans;\r\n        ll l=i,r=i+1;\r\n        while(l>=0 && r<n){\r\n            total-=(a[l]*b[l] + a[r]*b[r]);\r\n            total+=(a[l]*b[r] + a[r]*b[l]);\r\n            max_ans = max(total,max_ans);\r\n            l--,r++;\r\n        }\r\n    }\r\n\r\n    cout << max_ans  << endl;\r\n\r\n}\r\nint main()\r\n{\r\n    optimize();\r\n    //testCase\r\n        Bismillah();\r\n\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n\r\n"
}