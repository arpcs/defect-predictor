{
    "id": 221764239,
    "contestId": 1519,
    "creationTimeSeconds": 1693795637,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "bkifhr6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst int nmax = 5e3+5;\nconst int inf = 1e9+1;\n#define fi first\n#define se second\n\nint n;\nlong long a[nmax];\nlong long b[nmax];\nlong long dp[nmax][nmax];\nqueue<pair<int,int>>q;\nint visited[nmax][nmax];\nint s = 0;\n\nint main(){\n    cin>>n;\n    for(int i = 1 ; i <= n ; i++)\n        cin>>a[i];\n    for(int i = 1 ; i <= n ; i++)\n        cin>>b[i];\n    for(int i = 0 ; i <= n ; i++)\n        for(int j = 0 ; j <= n ; j++)\n            dp[i][j] = -inf;\n    dp[0][0] = 0;\n    for(int i = 1 ; i <= n ; i++)\n        dp[0][0] += 1LL*a[i] * b[i];\n    s = dp[0][0];\n    for(int i = 1 ; i <= n ; i++)\n        for(int j = i - 1 ; j <= i + 1 ; j++)\n            if(0 < j && j <= n){\n                dp[i][j] = dp[0][0] - a[i]*b[i] - a[j]*b[j] + a[i]*b[j] + a[j]*b[i];\n                s = max(s,dp[i][j]);\n                q.push({ i, j});\n                visited[i][j] = 1;\n            }\n    while(! q.empty()){\n        pair<int,int> top = q.front();\n        q.pop();\n        int i = top.fi;\n        int j = top.se;\n        //cout<<i<<' '<<j;\n        if( visited[i-1][j+1] == 0 && i > 1 && j < n){\n            dp[i][j] = max(dp[i][j] , dp[i + 1][j - 1]- a[i]*b[i] - a[j]*b[j] + a[i]*b[j] + a[j]*b[i]);\n            s = max(s,dp[i][j]);\n            q.push({i - 1,j + 1});\n        }\n    }\n    cout<<s;\n}\n\n \t  \t\t \t\t   \t\t\t  \t\t\t  \t\t\t\t\t\t\t \t"
}