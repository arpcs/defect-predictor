{
    "id": 144779066,
    "contestId": 1519,
    "creationTimeSeconds": 1643659666,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "shivansh1102"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n#define lli long long int\n#define ff first\n#define ss second\n#define pb push_back\n#define mpr make_pair\n#define MOD 1000000007\n\n//#include<ext/pb_ds/assoc_container.hpp>\n//#include<ext/pb_ds/tree_policy.hpp>\n//using namespace __gnu_pbds;\n//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\n// order_of_key (val): returns the no. of values less than val\n// find_by_order (k): returns the kth largest element.(0-based)\n// declare variable as:  ordered_set A;\n\n#define endl '\\n' // make sure to comment this in interaction problems\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    int n;\n    cin >> n;\n    lli a[n+1]; lli b[n+1];\n    for(int i = 1; i <= n; i++)\n    cin >> a[i];\n    for(int i = 1; i <= n; i++)\n    cin >> b[i];\n    lli preprod[n+1], suffprod[n+1];\n    preprod[0]=0;\n    for(int i = 1; i <= n; i++)\n    {\n        preprod[i] = preprod[i-1] + a[i]*b[i];\n    }\n    for(int i = n; i >= 1; i--)\n    suffprod[i] = a[i] * b[i] + (i==n)?0:suffprod[i+1];\n    lli ans = preprod[n];\n    lli last,curr;\n    for(int c = 1; c <= n; c++)\n    {\n        last = preprod[n];\n        for(int l = 1; c - l > 0 && c + l <= n; l++)\n        {\n            curr = last + a[c-l]*b[c+l] + a[c+l]*b[c-l] - a[c-l]*b[c-l] - a[c+l]*b[c+l];\n            ans = max(ans, curr);\n            last = curr;\n        }\n    }\n    //  [c-1-l, c+l]\n    for(int c = 2; c <= n; c++)\n    {\n        last = preprod[n] + a[c-1]*b[c] + a[c]*b[c-1] - a[c-1]*b[c-1] - a[c]*b[c];\n        ans = max(ans, last);\n        for(int l = 1; c-1-l > 0 && c+l <= n; l++)\n        {\n            curr = last + a[c-1-l]*b[c+l] + a[c+l]*b[c-1-l] - a[c-1-l]*b[c-1-l] - a[c+l]*b[c+l];\n            ans = max(ans,curr);\n            last = curr;\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}"
}