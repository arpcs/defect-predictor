{
    "id": 155507962,
    "contestId": 1519,
    "creationTimeSeconds": 1651407947,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "Vijay2706"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 327,
    "memoryConsumedBytes": 201420800,
    "source": "#include<bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n#define int long long\r\n#define endl \"\\n\"\r\n\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds; // find_by_order, order_of_key\r\n\r\nvector<int> sieve(int n) {int*arr = new int[n + 1](); vector<int> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}\r\n\r\nint M= 1e9 + 7;\r\nint a=1;\r\n\r\nint power(int x, int y)\r\n{\r\n    int res = 1;\r\n    x = x % M; \r\n    if (x == 0) \r\n        return 0;\r\n    while (y > 0)\r\n    {\r\n        if (y & 1)\r\n            res = (res*x) % M;\r\n        y = y>>1;\r\n        x = (x*x) % M;\r\n    }\r\n    return res%M;\r\n}\r\n\r\nint f(int l, int r, vector<int>& a, vector<int>& b, vector<vector<int>>& dp)\r\n{\r\n    if(l>r)\r\n        return 0;\r\n    if( l== r)\r\n        return a[l]*b[l];\r\n    if(dp[l][r] != -1)\r\n    {\r\n        return dp[l][r];\r\n    }\r\n    return dp[l][r]= f(l+1, r-1, a, b, dp) + a[l]*b[r] + a[r]*b[l];\r\n}\r\n\r\nvoid solve()\r\n{\r\n    int n;\r\n    cin>>n;\r\n    vector<int> a(n), b(n);\r\n    for(auto& c: a)\r\n    {\r\n        cin>>c;\r\n    }\r\n    for(auto& c: b)\r\n    {\r\n        cin>>c;\r\n    }\r\n    vector<int> p(n);\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        p[i]= a[i]*b[i];\r\n        if(i>0)\r\n            p[i] += p[i-1];\r\n    }\r\n    int ans = p.back();\r\n    vector<vector<int>> dp(n+1, vector<int>(n+1, -1));\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        for(int j=i; j<n; j++)\r\n        {\r\n            if(dp[i][j] == -1)\r\n                f(i, j, a, b, dp);\r\n            int t= p[n-1] - p[j];\r\n            if(i>0)\r\n                t += p[i-1];\r\n            t += dp[i][j];\r\n            ans = max(ans, t);\r\n        }\r\n    }\r\n    cout<<ans<<endl;\r\n}\r\n\r\n\r\n\r\nint32_t main()\r\n{\r\n    \r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);cout.tie(0);\r\n    // int t;\r\n    // cin>>t;\r\n    // while(t--)\r\n        solve();\r\n    return 0;\r\n}"
}