{
    "id": 153144308,
    "contestId": 1519,
    "creationTimeSeconds": 1649504678,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "nishtha1896"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 200192000,
    "source": "#include<iostream>\r\n#include<stdio.h>\r\nusing namespace std;\r\n\r\nvoid solve(){\r\n    int n;\r\n    int a[5001],b[5001];\r\n    cin>>n;\r\n    long long unsigned dp[5001][5001];\r\n    long long unsigned normal[5001];\r\n\r\n    for(int i=0;i<n;i++){\r\n        cin>>a[i];\r\n    }\r\n    for(int i=0;i<n;i++){\r\n        cin>>b[i];\r\n    }\r\n    normal[n-1] = a[n-1]*b[n-1];\r\n    for(int i=n-2;i>=0;i--){\r\n        normal[i] = normal[i+1]+a[i]*b[i];\r\n    }\r\n    // printf(\"actual ans without anything:%lld\\n\",normal[0]);\r\n    for(int i=0;i<n;i++){\r\n        dp[i][i] = a[i]*b[i];\r\n    }\r\n    long long unsigned ans=0;\r\n    for(int i=1;i<n-1;i++){\r\n        for(int j=0;j+i<n;j++){\r\n            if(i==1){\r\n                dp[j][i+j] = a[j]*b[j+i] + b[j]*a[j+i];\r\n                // printf(\"dp count for i:%d and j%d = %lld\\n\",i,j,dp[j][i+j]);\r\n                \r\n            }\r\n            else{\r\n                // printf(\"dp lower for i:%d and j%d = %lld\\n\",i,j,dp[j+1][j+i-1]);\r\n                dp[j][j+i] = + dp[j+1][j+i-1] + a[j]*b[j+i] + b[j]*a[j+i];\r\n            }\r\n            // printf(\"dp for i:%d and j%d = %lld\\n\",i,j,dp[j][i+j]);\r\n            // printf(\"total for i:%d and j%d = %lld\\n\",i,j,dp[j][i+j]+ normal[0] - normal[j] + (i+j==n-1?0:normal[i+j+1]));\r\n            if(dp[j][i+j] + normal[0] - normal[j] + (i+j==n-1?0:normal[i+j+1])>ans){\r\n                ans = dp[j][i+j] + normal[0] - normal[j] + (i+j==n-1?0:normal[i+j+1]);\r\n            }\r\n            // ans = max(ans,normal[0]);\r\n        }\r\n    }\r\n    if(ans<normal[0]){\r\n       ans = normal[0];\r\n     \r\n    }\r\n    cout<<ans<<\"\\n\";\r\n}\r\nint main(){\r\n    solve();\r\n}"
}