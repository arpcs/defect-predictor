{
    "id": 173732799,
    "contestId": 1519,
    "creationTimeSeconds": 1664296955,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "Syvx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "read = lambda : list(map(int,input().split()))\r\n\r\nn,= read() ; a = read() ;b = read()\r\nnow = ans = sum( a[i] * b[i] for i in range( n ) )\r\nfor i in range( n ):\r\n    def mx( l , r , cnt = now ):\r\n        global ans\r\n        while l >= 0 and r < n : cnt -= (a[l]-a[r]) * ( b[l] - b[r] ) ; ans = max( ans ,cnt ) ; r+=1 ; l-= 1;\r\n    mx( i , i ) ; mx( i , i + 1 ) ;\r\nprint(ans)"
}