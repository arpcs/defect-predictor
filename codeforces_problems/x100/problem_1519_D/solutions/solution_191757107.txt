{
    "id": 191757107,
    "contestId": 1519,
    "creationTimeSeconds": 1675364953,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "max1313"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "MS C++ 2017",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 201216000,
    "source": "/*\r\n#include<iostream>\r\n#include<vector>\r\nusing namespace std;\r\nvector<vector<int>> d;\r\nvector<int> sum;\r\nstruct Print {\r\n\tint row1;\r\n\tint row2;\r\n\tint idx;\r\n};\r\nvector<Print> a;\r\nint n, m, t, r;\r\nint main(void) {\r\n\tcin >> t;\r\n\tfor (int k = 0; k < t; k++) {\r\n\t\tcin >> n >> m;\r\n\t\tr = 0;\r\n\t\tsum = vector<int>(n, 0);\r\n\t\td = vector<vector<int>>(n, vector<int>(m));\r\n\t\tint S = 0;\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tfor (int j = 0; j < m; j++) {\r\n\t\t\t\tcin >> d[i][j];\r\n\t\t\t\tsum[i] += d[i][j];\r\n\t\t\t}\r\n\t\t\tS += sum[i];\r\n\t\t}\r\n\t\tif ((S % n) != 0) {\r\n\t\t\tcout << -1 << endl;\r\n\t\t}\r\n\t\telse {\r\n\t\t\ta = vector<Print>(0);\r\n\t\t\ta.reserve(2000);\r\n\t\t\tint average = S / n;\r\n\t\t\tauto itmax = sum.begin();\r\n\t\t\tauto itmin = sum.begin();\r\n\t\t\tint maxCount = 0;\r\n\t\t\tint minCount = 0;\r\n\t\t\twhile (itmax != sum.end() || itmin != sum.end()) {\r\n\t\t\t\twhile (itmax != sum.end() && (*itmax) <= average) {\r\n\t\t\t\t\tmaxCount++;\r\n\t\t\t\t\titmax++;\r\n\t\t\t\t}\r\n\t\t\t\twhile (itmin != sum.end() && (*itmin) >= average) {\r\n\t\t\t\t\tminCount++;\r\n\t\t\t\t\titmin++;\r\n\t\t\t\t}\r\n\t\t\t\tif(itmax == sum.end() || itmin == sum.end()) break;\r\n\t\t\t\tfor (int i = 0; i < m; i++) {\r\n\t\t\t\t\tif (d[maxCount][i] == 1 && d[minCount][i] == 0) {\r\n\t\t\t\t\t\tswap(d[maxCount][i], d[minCount][i]);\r\n\t\t\t\t\t\tsum[maxCount]--;\r\n\t\t\t\t\t\tsum[minCount]++;\r\n\t\t\t\t\t\tr++;\r\n\t\t\t\t\t\tPrint t;\r\n\t\t\t\t\t\tt.row1 = maxCount+1;\r\n\t\t\t\t\t\tt.row2 = minCount+1;\r\n\t\t\t\t\t\tt.idx = i+1;\r\n\t\t\t\t\t\ta.push_back(t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (sum[minCount] == average || sum[maxCount] == average) break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcout << r << endl;\r\n\t\t\tfor (auto it : a) cout << it.row2 << ' ' << it.row1 << ' ' << it.idx << endl;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n*/\r\n\r\n//#include<iostream>\r\n//#include<vector>\r\n//#include <iomanip>\r\n//using namespace std;\r\n//struct visit {\r\n//    double x;\r\n//\tdouble t;\r\n//};\r\n//int Check(vector<visit> c, int n, double x);\r\n//int main(void) {\r\n//\tint t;\r\n//\tcin >> t;\r\n//\twhile (t--) {\r\n//\t\tint n;\r\n//\t\tcin >> n;\r\n//\t\tvector<visit> a = vector<visit>(n);\r\n//\t\tfor (int i = 0; i < n; i++) {\r\n//\t\t\tcin >> a[i].x;}\r\n//\t\tfor (int i = 0; i < n; i++) {\r\n//\t\t\tcin >> a[i].t;}\r\n//\t\tdouble r = (2*10e8);\r\n//\t\tdouble l = -1;\r\n//\t\tdouble middle = -1;\r\n//\t\twhile (abs(r-l)>=pow(10,-6)) {\r\n//\t\t\tmiddle = (r + l) / 2;\r\n//\t\t\tif (Check(a, n, middle)) r = middle;\r\n//\t\t\telse l = middle;\r\n//\t\t}\r\n//\t\tdouble max = -1;\r\n//\t\tdouble min = (2*10e8);\r\n//\t\tfor (int i = 0; i < n; i++) {\r\n//\t\t\tif (a[i].x - (middle - a[i].t) > max) max = a[i].x - (middle - a[i].t);\r\n//\t\t\tif (a[i].x + (middle - a[i].t) < min) min = a[i].x + (middle - a[i].t);\r\n//\t\t}\r\n//\t\tcout << fixed << (max+min)/2 << std::endl;\r\n//\t}\r\n//\treturn 0;\r\n//}\r\n//int Check(vector<visit> c, int n, double x) {\r\n//\tdouble max = -1;\r\n//\tdouble min = (int)10e8;\r\n//\tfor (int i = 0; i < n; i++) {\r\n//\t\tif (c[i].t > x) return 0;\r\n//\t\tif (c[i].x + (x - c[i].t) < min) min = c[i].x + (x - c[i].t);\r\n//\t\tif (c[i].x - (x - c[i].t) > max) max = c[i].x - (x - c[i].t);}\r\n//\tif (max <= min) return 1;\r\n//\treturn 0;\r\n//}\r\n\r\n\r\n//#include<iostream>\r\n//#include<vector>\r\n//using namespace std;\r\n//long long n;\r\n//long long min(long long a, long long b);\r\n//int Check(long long ptr);\r\n//void Rec(vector<long long>& b, int idx, long long sum, int count);\r\n//int answer;\r\n//int main(void) {\r\n//\tint t;\r\n//\tcin >> t;\r\n//\twhile (t--) {\r\n//\t\tcin >> n;\r\n//\t\tvector<long long> b = vector<long long>(0);\r\n//\t\tb.reserve(2000);\r\n//\t\tint j = 4;\r\n//\t\tint k = 0;\r\n//\t\tb.push_back(6);\r\n//\t\twhile (b[k] * j <= n) {\r\n//\t\t\tb.push_back(0);\r\n//\t\t\tb[k + 1] = b[k] * j;\r\n//\t\t\tj++;\r\n//\t\t\tk++;\r\n//\t\t}\r\n//\t\tanswer = 1000000;\r\n//\t\tRec(b, 0, 0, 0);\r\n//\t\tcout << answer << endl;\r\n//\t} \r\n//\treturn 0;\r\n//}\r\n//void Rec(vector<long long>&  b, int idx, long long sum, int count) {\r\n//\tif (idx == b.size()) {\r\n//\t\tif(n>=sum) answer = min(answer, Check(n - sum) + count);\r\n//\t\treturn;\r\n//\t}\r\n//\tRec(b, idx + 1, sum + b[idx], count + 1);\r\n//\tRec(b, idx + 1, sum, count);\r\n//}\r\n//\r\n//int Check(long long ptr) {\r\n//\tint count = 0;\r\n//\twhile (ptr != 0) {\r\n//\t\tif (ptr % 2 != 0) count++;\r\n//\t\tptr = ptr >> 1;\r\n//\t}\r\n//\treturn count;\r\n//}\r\n//long long min(long long a, long long b) {\r\n//\tif (a > b) return b;\r\n//\treturn a;\r\n//}\r\n\r\n//#include <iostream>\r\n//#include <iterator>\r\n//#include <algorithm> \r\n//#include<vector>\r\n//#include<string>\r\n//using namespace std;\r\n//int main(void) {\r\n//\tint temp;\r\n//\tcin >> temp;\r\n//\twhile (temp--) {\r\n//\t\tint answer = 0;\r\n//\t\tint key = 0;\r\n//\t\tstring s, t, z;\r\n//\t\tcin >> s >> t;\r\n//\t\tz.reserve(t.size());\r\n//\t\tvector<vector<int>> a = vector<vector<int>>(26,vector<int>(0));\r\n//\t\tint count = 0;\r\n//\t\twhile (s[count] != '\\0') {\r\n//\t\t\ta[s[count] - 'a'].push_back(count);\r\n//\t\t\tcount++;\r\n//\t\t}\r\n//\t\tint tmp = 0;\r\n//\t\twhile (t[tmp] != '\\0') {\r\n//\t\t\tif (a[t[tmp] - 'a'].size() == 0) {\r\n//\t\t\t    answer = -1;\r\n//\t\t\t\tkey = 1;\r\n//\t\t\t}\r\n//\t\t\ttmp++;\r\n//\t\t}\r\n//\t\tif (key != 1) {\r\n//\t\t\tint i = 0;\r\n//\t\t\twhile (t[i] != '\\0') {\r\n//\t\t\t\tint j = 0;\r\n//\t\t\t\tint k = i;\r\n//\t\t\t\twhile (s[j] != '\\0') {\r\n//\t\t\t\t\tif (t[i] == '\\0') break;\r\n//\t\t\t\t\tif (a[t[i] - 'a'][a[t[i] - 'a'].size() - 1] >= j) {\r\n//\t\t\t\t\t\tauto cur = lower_bound(a[t[i] - 'a'].begin(), a[t[i] - 'a'].end(), j);\r\n//\t\t\t\t\t\tj = a[t[i] - 'a'][cur - a[t[i] - 'a'].begin()];\r\n//\t\t\t\t\t\tz.push_back(s[j]);\r\n//\t\t\t\t\t\ti++;\r\n//\t\t\t\t\t}\r\n//\t\t\t\t\telse break;\r\n//\t\t\t\t\tj++;\r\n//\t\t\t\t}\r\n//\t\t\t\tif (k == i) {\r\n//\t\t\t\t\tanswer = -1;\r\n//\t\t\t\t\tbreak;\r\n//\t\t\t\t}\r\n//\t\t\t\tanswer++;\r\n//\t\t\t}\r\n//\t\t}\r\n//\t\tcout << answer << endl;\r\n//\t}\r\n//\treturn 0;\r\n//}\r\n\r\n\r\n//#include<iostream>\r\n//#include<vector>\r\n//#define MAX 200005\r\n//#define Mod 1000000007\r\n//int d[MAX];\r\n//using namespace std;\r\n//int main(void) {\r\n//\tint t;\r\n//\tint n, m;\r\n//\tcin >> t;\r\n//\tfor (int i = 0; i < 9; i++) {\r\n//\t\td[i] = 2;\r\n//\t}\r\n//\td[9] = 3;\r\n//\tfor (int i = 10; i < MAX; i++) {\r\n//\t\td[i] = (d[i - 10] + d[i - 9]) % Mod;\r\n//\t}\r\n//\tios_base::sync_with_stdio(false);\r\n//\tcin.tie(NULL);\r\n//\twhile (t--) {\r\n//\t\tcin >> n >> m;\r\n//\t\tint ans = 0;\r\n//\t\twhile (n > 0) {\r\n//\t\t\tint x = n % 10;\r\n//\t\t\tans += ((m + x < 10) ? 1 : d[m + x - 10]);\r\n//\t\t\tans %= Mod;\r\n//\t\t\tn /= 10;\r\n//\t\t}\r\n//\t\tcout << ans << \"\\n\";\r\n//\t}\r\n//\treturn 0;\r\n//}\r\n\r\n\r\n#include<iostream>\r\n#include<vector>\r\n#include<algorithm>\r\n#include<string>\r\nusing namespace std;\r\nlong long max(long long A, long long B);\r\nint main(void) {\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(NULL);\r\n\tint n;\r\n\tlong long answer = 0;\r\n\tcin >> n;\r\n\tvector<long long> a = vector<long long>(n+1);\r\n\tvector<long long> b = vector<long long>(n+1);\r\n\tvector<vector<long long>> c = vector<vector<long long>>(n + 1, vector<long long>(n + 1, 0));\r\n\tvector <long long> right = vector<long long>(n+2, 0);\r\n\tvector<long long> left = vector<long long>(n+2, 0);\r\n\tfor (int i = 1; i < n + 1; i++) {\r\n\t\tcin >> a[i];\r\n\t}\r\n\tfor (int i = 1; i < n + 1; i++) {\r\n\t\tcin >> b[i];\r\n\t}\r\n\tfor (int i = 1; i < n + 1; i++) {\r\n\t\tc[i][i] = a[i] * b[i];\r\n\t}\r\n\tfor (int r = 1; r < n + 1; r++) {\r\n\t\tright[r] = right[r - 1] + a[r] * b[r];\r\n\t}\r\n\tfor (int l = n; l >= 1; l--) {\r\n\t\tleft[l] = left[l + 1] + a[l] * b[l];\r\n\t}\r\n\tfor (int r = 1; r < n + 1; r++) {\r\n\t\tfor (int l = 1; l < r; l++) {\r\n\t\t\tc[r][l] = c[r - 1][l + 1] + b[l] * a[r] + b[r] * a[l];\r\n\t\t}\r\n\t}\r\n\tfor (int i = 1; i < n + 1; i++) {\r\n\t\tfor (int j = 1; j <= i; j++) {\r\n\t\t\tanswer = max(answer, c[i][j] + left[i + 1] + right[j - 1]);\r\n\t\t}\r\n\t}\r\n\tcout << answer << endl;\r\n\treturn 0;\r\n}\r\nlong long max(long long A, long long B) {\r\n\tif (A > B) return A;\r\n\treturn B;\r\n}"
}