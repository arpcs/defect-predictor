{
    "id": 221761892,
    "contestId": 1519,
    "creationTimeSeconds": 1693792311,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 200704000,
    "source": "\n//LaziChicken - 9/2023\n\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\n#define ld long double\n#define pii pair <int, int>\n#define pll pair <ll, ll>\n#define pli pair <ll, int>\n#define pil pair <int, ll>\n#define fi first\n#define se second\n#define dim 3\n#define tii tuple <int, int, int>\n#define inf 0x3f\n\nconst ll nx = 5e3+2;\nconst ll bx = 1e3+2;\nconst ll mod = 1e9+7;\n\n//--------------------------------\nint n;\nll a[nx], b[nx], pre[nx], suf[nx], dp[nx][nx];\nll res = 0;\n\n//--------------------------------\nint main(){\n    ios_base::sync_with_stdio(0);\n    cin.tie(0); cout.tie(0);\n    cin >> n;\n    for (int i = 1; i <= n; i++){\n        cin >> a[i];\n    }\n    for (int i = 1; i <= n; i++){\n        cin >> b[i];\n    }\n    for (int i = 1; i <= n; i++){\n        pre[i] = pre[i-1] + a[i] * b[i];\n        dp[i][i] = a[i] * b[i];\n        if (i + 1 <= n) dp[i][i+1] = a[i] * b[i+1] + a[i+1] * b[i];\n    }\n    for (int i = n; i >= 1; i--){\n        suf[i] = suf[i+1] + a[i] * b[i];\n    }\n    for (int i = n; i >= 1; i--){\n        for (int j = i+2; j <= n; j++){\n            dp[i][j] = max(dp[i][j], dp[i+1][j-1] + a[i] * b[j] + b[i] * a[j]);\n        }\n    }\n    for (int i = 1; i <= n; i++){\n        for (int j = i; j <= n; j++){\n            res = max(res, pre[i-1] + dp[i][j] + suf[j+1]);\n        }\n    }\n    cout << res;\n}\n/*\nNote:\n\n*/\n\t          \t \t\t  \t\t\t\t \t  \t \t"
}