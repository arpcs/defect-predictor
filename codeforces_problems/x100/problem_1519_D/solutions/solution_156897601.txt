{
    "id": 156897601,
    "contestId": 1519,
    "creationTimeSeconds": 1652343329,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 200806400,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ii = pair<int, int>;\n\n#define task \"input\"\n#define fr(i,a,b) for(int i=a; i<=b; ++i)\n#define fd(i,a,b) for(int i=b; i>=a; --i)\n#define fe(i,a)   for(int i: a)\n#define fi first\n#define se second\n#define debug(x) cout << #x << \": \" << x << \"\\n\"\n#define all(x) x.begin(), x.end()\n\ntemplate<class T> bool umax(T &a, T b) { if (a<b) return a=b, 1; return 0; }\ntemplate<class T> bool umin(T &a, T b) { if (a>b) return a=b, 1; return 0; }\n\nconst int mxN=5e3+3;\nll n, a[mxN], b[mxN];\nll pref[mxN], dp[mxN][mxN];\n\nvoid enter() {\n\tcin >> n;\n\tfr(i,1,n) cin >> a[i];\n\tfr(i,1,n) cin >> b[i];\n\tfr(i,1,n) pref[i]=pref[i-1]+a[i]*b[i];\n\tfd(i,1,n) {\n\t\tdp[i][i-1]=dp[i+1][i]=0;\n\t\tdp[i][i]=a[i]*b[i];\n\t\tfr(j,i+1,n)\n\t\t\tdp[i][j]=dp[i+1][j-1]+a[i]*b[j]+a[j]*b[i];\n\t}\n\n\tll ans=0;\n\tfr(i,1,n)\n\t\tfr(j,i,n)\n\t\t\tumax(ans, dp[i][j]-pref[j]+pref[i-1]);\n\tcout << pref[n]+ans;\n}\n\nint main() {\n\tcin.tie(0)->sync_with_stdio(0);\n\tcout.tie(0);\n\t//freopen(task\".inp\", \"r\", stdin);\n\t//freopen(task\".out\", \"w\", stdout);\n\n\tenter();\n}\n\n\n\n\n\n\t\t\t\t \t \t\t\t\t \t\t\t       \t\t\t\t\t\t\t\n\t\t\t\t \t \t  \t \t      \t \t  \t \t\t \t\t"
}