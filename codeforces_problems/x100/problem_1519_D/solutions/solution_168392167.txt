{
    "id": 168392167,
    "contestId": 1519,
    "creationTimeSeconds": 1660572637,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "Sagnikban"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 16076800,
    "source": "#include<bits/stdc++.h>\r\n#define int long long int\r\n#define ll long long\r\n#define mod 1000000007\r\nusing namespace std;\r\n\r\n\r\nint parent[1000005];\r\nint sie[1000005];\r\nmultiset<int>s;\r\nvoid make(int v)\r\n{\r\n    parent [v]=v;\r\n    sie[v]=1;\r\n    s.insert(1);\r\n}\r\nvoid merge(int a,int b)\r\n{\r\n    s.erase(s.find(sie[a]));\r\n    s.erase(s.find(sie[b]));\r\n    s.insert(sie[a]+sie[b]);\r\n}\r\nint find(int v)\r\n{\r\n  if(v==parent[v])\r\n  return v;  \r\n\r\n  return parent[v]=find(parent[v]);\r\n\r\n}\r\n\r\nvoid Union(int a,int b)\r\n{\r\n    a=find(a);\r\n    b=find(b);\r\n    if(a!=b)\r\n    {\r\n        if(sie[a]<sie[b])\r\n        swap(a,b);\r\n        \r\n        parent[b]=a;\r\n        merge(a,b);\r\n        sie[a]+=sie[b];    \r\n    }\r\n}\r\n\r\n\r\nvoid solve()\r\n{ \r\n   \r\n  int n;\r\n  cin>>n;\r\n  int a[n];\r\n  int b[n];\r\n  for(int i=0;i<n;i++)\r\n   cin>>a[i];\r\n  for(int i=0;i<n;i++)\r\n   cin>>b[i];\r\n   int ans=0;\r\n    int maxi;\r\n    for(int i=0;i<n;i++) \r\n    ans+=a[i]*b[i];\r\n    maxi=ans;\r\n\r\n    for(int i=0;i<n;i++){\r\n        int total=ans;\r\n        int l=i-1;\r\n        int r=i+1;\r\n        while(l>=0 && r<n){\r\n            total-=(a[l]*b[l] + a[r]*b[r]);\r\n            total+=(a[l]*b[r] + a[r]*b[l]);\r\n            maxi=max(maxi,total);\r\n            l--;\r\n            r++;\r\n        }\r\n    }\r\n    for(int i=0;i<n;i++){\r\n        int total=ans;\r\n        int l=i;\r\n        int r=i+1;\r\n        while(l>=0 && r<n){\r\n            total-=(a[l]*b[l] + a[r]*b[r]);\r\n            total+=(a[l]*b[r] + a[r]*b[l]);\r\n            maxi=max(maxi,total);\r\n            l--;\r\n            r++;\r\n        }\r\n    }\r\n    cout<<maxi;\r\n    \r\n\r\n\r\n\r\n}\r\n   \r\n\r\n\r\nmain()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    \r\n\r\n\r\n    #ifndef ONLINE_JUDGE\r\n\r\n    freopen(\"input.txt\",\"r\",stdin);\r\n    freopen(\"output.txt\",\"w\",stdout);\r\n\r\n    #endif\r\n\r\n     \r\n    int t=1;\r\n    //cin>>t;\r\n\r\n    while(t--)\r\n     {\r\n        solve();\r\n     }\r\n    return 0;\r\n\r\n}"
}