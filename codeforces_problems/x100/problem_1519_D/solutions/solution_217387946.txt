{
    "id": 217387946,
    "contestId": 1519,
    "creationTimeSeconds": 1691277522,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "Mohamed15Ghaly"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 614400,
    "source": "#include<bits/stdc++.h>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\r\n#define Test_Cases long long t;cin>>t;while(t--)\r\n#define Cout(v) for(auto&i:v) cout<<i<<\" \";\r\n#define Cin(v) for(auto&i:v) cin>>i;\r\n#define Map(v,m) for(auto i:v) m[i]++;\r\n#define B(v) v.begin(),v.end()\r\n#define R(v) v.rbegin(),v.rend()\r\n#define mod 1073741824\r\n#define ll long long\r\n#define lb \"\\n\";\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\nconst int dr[]{-1,-1,0,1,1,1,0,-1};\r\nconst int dc[]{0,1,1,1,0,-1,-1,-1};\r\nlong long mul(long long a, long long b) {return ((a % mod) * (b % mod)) % mod;}\r\nlong long add(long long a, long long b) {return ((a % mod) + (b % mod)) % mod;}\r\nlong long sub(long long a, long long b) {return (((a % mod) - (b % mod))+mod)%mod;}\r\nint main() {\r\n    std::ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    //--MOHAMED GHALY--//\r\n    ll size, ans = 0;\r\n    cin >> size;\r\n    vector<int> arr1(size), arr2(size);\r\n    vector<string> vec;\r\n    Cin(arr1);\r\n    Cin(arr2);\r\n    for (int i = 0; i < size; i++) {\r\n        string x = \"\";\r\n        for (int j = i; j < size; j++) {\r\n            x += (j + '0');\r\n            vec.push_back(x);\r\n        }\r\n    }\r\n    for (int i = 0; i < vec.size(); i++) {\r\n        string x = vec[i];\r\n        ll sum = 0;\r\n        for (int j = 0; j < x[0] - '0'; j++) sum += (ll) (arr1[j] * arr2[j]);\r\n        for (int j = x[x.size() - 1] + 1 - '0'; j < size; j++) sum += (ll) (arr1[j] * arr2[j]);\r\n        for (int j = x[0] - '0', k = x.size() - 1; j <= x[x.size() - 1] - '0'; j++, k--)\r\n            sum += (ll) (arr1[x[k] - '0'] * arr2[j]);\r\n        ans = max(ans, sum);\r\n    }\r\n    cout << ans << lb\r\n    return 0;\r\n}"
}