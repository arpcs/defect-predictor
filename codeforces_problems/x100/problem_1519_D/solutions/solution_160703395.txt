{
    "id": 160703395,
    "contestId": 1519,
    "creationTimeSeconds": 1655278793,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "DioPhanTous"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 307200,
    "source": "#include<bits/stdc++.h>\n \nusing namespace std;\n \nvoid __print(int x) {cerr << x;}\nvoid __print(long x) {cerr << x;}\nvoid __print(long long x) {cerr << x;}\nvoid __print(unsigned x) {cerr << x;}\nvoid __print(unsigned long x) {cerr << x;}\nvoid __print(unsigned long long x) {cerr << x;}\nvoid __print(float x) {cerr << x;}\nvoid __print(double x) {cerr << x;}\nvoid __print(long double x) {cerr << x;}\nvoid __print(char x) {cerr << '\\'' << x << '\\'';}\nvoid __print(const char *x) {cerr << '\\\"' << x << '\\\"';}\nvoid __print(const string &x) {cerr << '\\\"' << x << '\\\"';}\nvoid __print(bool x) {cerr << (x ? \"true\" : \"false\");}\n \ntemplate<typename T, typename V>\nvoid __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}\ntemplate<typename T>\nvoid __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? \", \" : \"\"), __print(i); cerr << \"}\";}\nvoid _print() {cerr << \"]\\n\";}\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << \", \"; _print(v...);}\n \n#ifndef ONLINE_JUDGE\n#define debug(x...) cerr << \"[\" << #x << \"] = [\"; _print(x)\n#else\n#define debug(x...)\n#endif\n \ntypedef vector<int>                                 vi;\ntypedef vector<long long>                           vl;\ntypedef vector<char>                                vc;\ntypedef vector<bool>                                vb;\ntypedef vector<vector<int>>                         vvi;\ntypedef vector<vector<long long>>                   vvl;\ntypedef vector<vector<char>>                        vvc;\ntypedef vector<vector<bool>>                        vvb;\ntypedef vector<string>                              vs;\ntypedef vector<pair<int,int> >                      vpii;\ntypedef pair<int,int>                               pii; \ntypedef pair<long long,long long>                   pll; \ntypedef vector<pair<long long,long long> >          vpll;\n \n#define sz(x)           (ll)((x).size())\n#define pb              push_back\n#define popb            pop_back\n#define all(x)          (x).begin(),(x).end()\n#define rep(i,a,n)      for(ll i = a; i <= n; i++)\n#define per(i,a,n)      for(ll i = a; i >= n; i--)\n#define tr(it, x)       for(auto it = (x).begin(); it != (x).end(); it++)\n#define mem1(a)         memset((a),-1,sizeof(a));\n#define mem0(a)         memset((a),0,sizeof(a));\n#define ll              long long\n#define ld              long double             \n#define ff              first\n#define ss              second\n#define logarr(arr,a,b) for(ll z = a; z<=b; z++) cout<<arr[z]<<\" \"; cout<<\"\\n\";\n#define pq_max          priority_queue<ll>\n#define pq_min          priority_queue<ll, vl, greater<ll>()>\n#define _mid(l,r)       l + (r-l)/2\n\n#define lowb(a, x)      lower_bound((a).begin(), (a).end(), x) - (a).begin()\n#define uppb(a, x)      upper_bound((a).begin(), (a).end(), x) - (a).begin()\n#define setbits(x)      __builtin_popcountll(x)\n#define parity(x)       __builtin_parity(x) \n#define newl            cout << \"\\n\"\n \n// ll Modular_Exponentiation(ll x, ll n, ll M)\n// {\n//    if (n == 0) return 1;\n//    if (n % 2) return (x * Modular_Exponentiation((x * x) % M, n / 2, M)) % M;\n//    else return (Modular_Exponentiation((x * x) % M, n / 2, M)) % M;\n// }\n                    /********* modular exponentiation********/ \n// ll inv(ll n, ll M)\n// {\n//     return Modular_Exponentiation(n, M - 2, M);\n// }\n \n                    /******inverse_Modulo*******/\n                                     \n/*\nbool powerOf2(int n)\n{\n    if((n&(n-1)) == 0){\n        return true;\n    }\n    return false;\n}\n*/\n                    /***** power of 2 ******/\n \n \n// const ld pi = 2*acos(0.0);\n// const long double EulerMascheroni = 0.57721566490153286060651;\n// const long double piii = 3.14159265359;\n \n// const int64_t inf = 1e18+1;\n \n// inline int64_t mul(int64_t a, int64_t b)\n// {\n//     return (inf / a > b ? a * b : inf);\n// }\n \n//const int mod = 1e9+7;\nconst int N = 200005, M = 498; \n \nll gcd(ll a,ll b) {\n    if(b == 0) {\n        return a;\n    }\n    return gcd(b, a%b);\n} \n \n//const long long inf = 1e18;\n \nll n, x;\n\n\nvoid solve(int tc = 0) {\n    cin >> n;\n    vl a, b;\n\n    for(ll i = 0; i<n; i++) {\n        cin >> x;\n        a.push_back(x);  \n    }\n\n    ll ans = 0;\n    vl pr(n);\n    for(ll i = 0; i<n; i++) {\n        cin >> x;\n        b.push_back(x);\n        if(i > 0) pr[i] = pr[i-1] + x*a[i];\n        else pr[i] = x*a[i];  \n    }\n    //debug(s);\n    ans = pr[n-1];\n    \n    ll cur;\n    for(ll c = 0; c<n; ++c) {\n        cur = a[c]*b[c];\n        for(ll l = c-1, r = c+1; l>=0 && r<n; --l, ++r) {\n            cur += b[l]*a[r];\n            cur += a[l]*b[r];\n            if(l > 0) ans = max(ans, cur + pr[n-1] - (pr[r]-pr[l-1])); //pr[l,r] = pr[r]-pr[l-1] \n            else ans = max(ans, cur + pr[n-1] - pr[r]);\n        }\n\n        cur = 0;\n        for(ll l = c-1, r = c; l>=0 && r<n; --l, ++r) {\n            cur += b[l]*a[r];\n            cur += a[l]*b[r];\n            if(l > 0) ans = max(ans, cur + pr[n-1] - (pr[r]-pr[l-1])); //pr[l,r] = pr[r]-pr[l-1] \n            else ans = max(ans, cur + pr[n-1] - pr[r]);\n        }\n    }  \n\n    cout << ans;\n    cout << '\\n';\n\n}\n \nint main()\n{\n \n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    clock_t begin = clock();\n    //file_io(); \n    //sieve(); \n    //cout<<setprecision(6)<<fixed;\n    // fact[0] = 1;\n    // inv_fact[0] = 1;\n    // rep(i, 1, N-1) {\n    //     fact[i] = ((fact[i-1]%mod)*i)%mod;\n    //     inv_fact[i] = inv(fact[i], mod);\n    // }\n    int TC;\n    TC = 1;\n    //cin>>TC;\n    int i = 1;\n    while(i <= TC){\n        //cout << \"Case #\" << i << \": \";\n        solve(i);\n        i++;\n    }\n \n \n    #ifndef ONLINE_JUDGE\n        clock_t end = clock();\n        clock_t time_req = (end - begin);\n        cout<<\"\\n\\nExecuted In: \" << (double)time_req / CLOCKS_PER_SEC << \" seconds\" << endl;;\n        #endif \n    return 0;\n}"
}