{
    "id": 162001219,
    "contestId": 1519,
    "creationTimeSeconds": 1656383214,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 2457600,
    "source": "#include <bits/stdc++.h>\n#define taskname \"A\"\n#define frein freopen(taskname \".INP\", \"r\", stdin)\n#define freout freopen(taskname \".OUT\", \"w\", stdout)\n#define timeelapse cerr << \"\\nTIME ELAPSE: \" << (double)clock() / (CLOCKS_PER_SEC)*1000 << \" ms\"\n#define ll long long\nusing namespace std;\nconst int maxn = 1e5 + 5;\nconst int inf = 1e9 + 7;\n\nint n;\nll a[maxn], b[maxn], pref[maxn], ans;\n\nint main()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    // frein;\n    cin >> n;\n    for (int i = 1; i <= n; i++)\n        cin >> a[i];\n    for (int i = 1; i <= n; i++)\n        cin >> b[i];\n    for (int i = 1; i <= n; i++)\n        pref[i] = pref[i - 1] + a[i] * b[i];\n    ans = pref[n];\n    for (int i = 1; i <= n; i++)\n    {\n        ll cur = a[i] * b[i];\n        for (int l = i - 1, r = i + 1; l > 0 && r <= n; l--, r++)\n        {\n            cur += a[l] * b[r];\n            cur += a[r] * b[l];\n            ans = max(ans, cur + pref[l - 1] + (pref[n] - pref[r]));\n        }\n        cur = 0;\n        for (int l = i, r = i + 1; l > 0 && r <= n; l--, r++)\n        {\n            cur += a[l] * b[r];\n            cur += a[r] * b[l];\n            ans = max(ans, cur + pref[l - 1] + (pref[n] - pref[r]));\n        }\n    }\n    cout << ans;\n}\n\t\t\t\t\t \t\t\t\t\t\t  \t  \t\t \t \t \t\t\t  \t"
}