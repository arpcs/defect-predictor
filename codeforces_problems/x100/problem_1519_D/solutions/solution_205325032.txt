{
    "id": 205325032,
    "contestId": 1519,
    "creationTimeSeconds": 1683721146,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "bkifhr7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "Java 11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 0,
    "source": "import java.util.*;\nimport java.io.*;\nimport java.math.*;\n\npublic class Main {\n    static final int mod = (int) (1e9+7);\n    static final int INF = Integer.MAX_VALUE;\n    static final long LL_INF = Long.MAX_VALUE;\n    static final int MAXN = (int) (1e5+5);\n    static final int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};\n    static final boolean[] marked = new boolean[MAXN];\n    static final ArrayList<Integer>[] graph = new ArrayList[MAXN];\n    static BufferedReader br;\n    static StringTokenizer st;\n    static PrintWriter out;\n    static int n,m,k,a,b,c,d,e,q,h;\n    static long ans;\n    static long[] arr;\n\n    public static void main(String[] args) throws IOException {\n        br = new BufferedReader(new InputStreamReader(System.in));\n        st = new StringTokenizer(\"\");\n        out = new PrintWriter(System.out);\n\n        n = nextInt();\n        long s1 = 0, s2 = 0;\n        HashSet<Long> set = new HashSet<>();\n\n        for (int i = 0; i < n; i++) {\n            long x = nextLong();\n            s1 += x;\n            set.add(s1);\n        }\n\n        m = nextInt();\n        for (int i = 0; i < m; i++) {\n            long x = nextLong();\n            s2 += x;\n            if (set.contains(s2)) {\n                ans++;\n            }\n        }\n\n        if (s1 != s2) {\n            out.println(-1);\n        } else {\n            out.println(String.valueOf(ans));\n        }\n        out.flush();\n    }\n\n    static String next() throws IOException {\n        while (!st.hasMoreTokens()) st = new StringTokenizer(br.readLine());\n        return st.nextToken();\n    }\n\n    static int nextInt() throws IOException {\n        return Integer.parseInt(next());\n    }\n\n    static long nextLong() throws IOException {\n        return Long.parseLong(next());\n    }\n\n    static double nextDouble() throws IOException {\n        return Double.parseDouble(next());\n    }\n\n    static int[] readArray(int n) throws IOException {\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) a[i] = nextInt();\n        return a;\n    }\n\n    static long[] readLongArray(int n) throws IOException {\n        long[] a = new long[n];\n        for (int i = 0; i < n; i++) a[i] = nextLong();\n        return a;\n    }\n}\n\n\t\t \t \t\t \t \t\t  \t\t\t\t  \t   \t\t\t \t\t\t"
}