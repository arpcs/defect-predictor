{
    "id": 191058286,
    "contestId": 1519,
    "creationTimeSeconds": 1674975572,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "GENERALMAHFUZ"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 200601600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nlong long int dp1[5001][5001];\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    int n;\r\n    cin >> n;\r\n    long long int a[n];\r\n    long long int b[n];\r\n    long long int age_se[n];\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        cin >> a[i];\r\n    }\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        cin >> b[i];\r\n        if (i == 0)\r\n        {\r\n            age_se[i] = a[i] * b[i];\r\n        }\r\n        else\r\n        {\r\n            age_se[i] = age_se[i - 1] + a[i] * b[i];\r\n        }\r\n    }\r\n    long long int piche_se[n];\r\n    for (int i = n - 1; i >= 0; i--)\r\n    {\r\n        if (i == (n - 1))\r\n        {\r\n            piche_se[i] = a[i] * b[i];\r\n        }\r\n        else\r\n        {\r\n            piche_se[i] = piche_se[i + 1] + a[i] * b[i];\r\n        }\r\n    }\r\n    for (int k = 1; k <= n; k++)\r\n    {\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            if ((i + k) >= n)\r\n            {\r\n                break;\r\n            }\r\n            int j = i + k;\r\n            if (k == 1)\r\n            {\r\n                dp1[i][j] = a[i] * b[j] + a[j] * b[i];\r\n            }\r\n            else if (k == 2)\r\n            {\r\n                dp1[i][j] = a[i] * b[i + 2] + a[i + 1] * b[i + 1] + a[i + 2] * b[i];\r\n            }\r\n            else\r\n            {\r\n                dp1[i][j] = dp1[i + 1][j - 1] + a[i] * b[j] + a[j] * b[i];\r\n            }\r\n        }\r\n    }\r\n    long long int maxi = age_se[n - 1];\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n\r\n        for (int j = i + 1; j < n; j++)\r\n        {\r\n            long long int sum = dp1[i][j];\r\n            if (i > 0)\r\n            {\r\n                sum = sum + age_se[i - 1];\r\n            }\r\n            if (j != (n - 1))\r\n            {\r\n                sum = sum + piche_se[j + 1];\r\n            }\r\n            if (sum > maxi)\r\n            {\r\n                maxi = sum;\r\n            }\r\n        }\r\n        // cout<<maxi<<endl;\r\n    }\r\n    cout << maxi << endl;\r\n}"
}