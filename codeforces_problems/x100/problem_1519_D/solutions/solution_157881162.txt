{
    "id": 157881162,
    "contestId": 1519,
    "creationTimeSeconds": 1653123627,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "Joseph_roy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\n//#include \"Solution.h\"\nusing namespace std;\ntypedef long double ld;\ntypedef long long ll;\ntypedef unsigned long long ull;\nconstexpr long long sz = 2e5 + 7;\n#define FOR(i,j,k) for(int i=j;i<k;i++)\n#define FORD(i,j,k) for(int i=j;i>=k;i++)\n#define pii pair<int,int>\n#define vi vector<int>\n#define clr clear\n#define pbk pop_back\n#define pb push_back\n#define eb emplace_back\n#define mpr make_pair\n#define ff first\n#define ss second\n#define mod 1000000007\n//vector<int>tree[200001];\n//static bool comp(pair<ll,ll>a,pair<ll,ll>b){\n//    if(a.second==b.second) return a.first<=b.first;\n//    return a.second<=b.second;\n//}\n//struct node\n//        {\n//    int parent;\n//    int rank;\n//        };\n//ll fast_exp(ll a,ll b){\n//    if(b==0) return 1;\n//    if(b==1) return a%mod;\n//    a%=mod;\n//    ll res=1;\n//    while(b>0){\n//        if(b & 1){\n//            res=(res*a)%mod;\n//        }\n//        a=(a*a)%mod;\n//        b/=2;\n//    }\n//    return res;\n//}\n//void sieve(vector<int>&primes)\n//{\n//    int n=1000001;\n//    int i=2;\n//    while(i*i<=n)\n//    {\n//        if(primes[i]==0)\n//        {\n//            i++;\n//            continue;\n//        }\n//        int j=2*i;\n//        while(j<=n)\n//        {\n//            primes[j]=0;\n//            j+=i;\n//        }\n//        i++;\n//    }\n//}\n//int find(int v,vector<node>&dsu)\n//{\n//    if(dsu[v].parent==-1) return v;\n//    return dsu[v].parent=find(dsu[v].parent,dsu);\n//}\n//void union_op(int fromP,int toP,vector<node>&dsu)\n//{\n//    fromP=find(fromP,dsu);\n//    toP=find(toP,dsu);\n//    dsu[fromP].parent=toP;\n//    dsu[toP].rank+=(dsu[fromP].rank+1);\n//}\nvoid solve()\n{\n    int n;\n    cin >> n;\n    vector<int>a(n);\n    vector<int>b(n);\n    for(int i=0;i<n;i++) cin >> a[i];\n    for(int i=0;i<n;i++) cin >> b[i];\n    ull sum=0;\n    for(int i=0;i<n;i++) sum+=(a[i]*b[i]);\n    ull max_sum=sum;\n    for(int j=1;j<n-1;j++)\n    {\n        int l=j-1,r=j+1;\n        ull oldsum=sum;\n        while(l>=0 && r<n)\n        {\n            oldsum=oldsum+(ull)((ull)a[l]*b[r]+(ull)a[r]*b[l]-(ull)a[l]*b[l]-(ull)a[r]*b[r]);\n            max_sum=max(max_sum,oldsum);\n            l--;\n            r++;\n        }\n    }\n    for(int j=0,k=1;k<n;j++,k++)\n    {\n        int l=j,r=k;\n        ull oldsum=sum;\n        while(l>=0 && r<n)\n        {\n            oldsum=oldsum+(ull)((ull)a[l]*b[r]+(ull)a[r]*b[l]-(ull)a[l]*b[l]-(ull)a[r]*b[r]);\n            max_sum=max(max_sum,oldsum);\n            l--;\n            r++;\n        }\n    }\n    cout << max_sum << endl;\n}\n\n\nint main()\n{\n    #ifndef ONLINE_JUDGE\n    freopen(\"Input.txt\", \"r\", stdin);\n    freopen(\"Output.txt\", \"w\", stdout);\n    freopen(\"Error.txt\", \"w\", stderr);\n    #endif\n    //        int t;\n    //        cin >> t;\n    //        while(t--)\n    solve();\n    return 0;\n}"
}