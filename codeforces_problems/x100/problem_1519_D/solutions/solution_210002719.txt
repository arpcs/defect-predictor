{
    "id": 210002719,
    "contestId": 1519,
    "creationTimeSeconds": 1687035763,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "brute__force__"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 200908800,
    "source": "#include <algorithm>\r\n#include <bitset>\r\n#include <complex>\r\n#include <deque>\r\n#include <exception>\r\n#include <fstream>\r\n#include <functional>\r\n#include <iomanip>\r\n#include <ios>\r\n#include <iosfwd>\r\n#include <iostream>\r\n#include <istream>\r\n#include <iterator>\r\n#include <limits>\r\n#include <list>\r\n#include <locale>\r\n#include <map>\r\n#include <memory>\r\n#include <new>\r\n#include <numeric>\r\n#include <ostream>\r\n#include <queue>\r\n#include <set>\r\n#include <sstream>\r\n#include <stack>\r\n#include <stdexcept>\r\n#include <streambuf>\r\n#include <string>\r\n#include <typeinfo>\r\n#include <utility>\r\n#include <valarray>\r\n#include <vector>\r\n#include <array>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\n#include <cstring>\r\n#include <string.h>\r\n//#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define INF (ll)1e9\r\n#define MOD (ll)1000000007\r\n#define pb push_back\r\n#define all(v) v.begin(),v.end()\r\n#define rep(i,n) for (int i = 1; i < n; i++)\r\n#define scc(n) scanf(\"%d\",&n);\r\n#define sccc(n) scanf(\"%lld\",&n);\r\n#define printi(n) printf(\"%d\",n);\r\n#define printll(n) printf(\"%lld\\n\",n);\r\n#define ya cout<<\"Yes\\n\";\r\n#define no cout<<\"No\\n\";\r\n#define pii pair<int,int>\r\n#define pll pair<ll,ll>\r\n#define ff  first\r\n#define ss  second\r\n#define f ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);\r\nconst int N=5001;\r\nll dp[N][N];\r\nvector<ll>a,b,c;\r\nll fun(int i,int j)\r\n{\r\n    if(dp[i][j]!=-1)\r\n        return dp[i][j];\r\n    if(i==j)\r\n        return dp[i][j]=a[i]*b[j];\r\n    if(i+1==j)\r\n        return dp[i][j]=a[i]*b[j]+b[i]*a[j];\r\n    return dp[i][j]=a[i]*b[j]+b[i]*a[j]+fun(i+1,j-1);\r\n}\r\nvoid solve()\r\n{\r\n    memset(dp,-1,sizeof(dp));\r\n    ll n,x;\r\n    cin>>n;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        cin>>x;\r\n        a.pb(x);\r\n    }\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        cin>>x;\r\n        b.pb(x);\r\n    }\r\n    vector<ll>pre;\r\n    pre.pb(a[0]*b[0]);\r\n    for(int i=1;i<n;i++)\r\n        pre.pb(pre[i-1]+a[i]*b[i]);\r\n    ll ans=pre[n-1];\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        for(int j=i+1;j<n;j++)\r\n        {\r\n            ll tmp=0;\r\n            if(i-1>=0)\r\n                tmp+=pre[i-1];\r\n            tmp+=pre[n-1];\r\n            tmp-=pre[j];\r\n            //cout<<i<<\" \"<<j<<\" \"<<tmp<<\" \"<<fun(i,j)<<endl;\r\n            tmp+=fun(i, j);\r\n            ans=max(ans,tmp);\r\n        }\r\n    }\r\n    cout<<ans<<endl;\r\n}\r\nint main()\r\n{\r\n    f\r\n    int t=1;\r\n    //cin>>t;\r\n    for(int i=1;i<=t;i++)\r\n    {\r\n        //cout<<\"Case \"<<i<<\": \";\r\n        solve();\r\n    }\r\n}\r\n/*\r\n //for calculating nCr mod M where M is prime.\r\n ll power(ll x,ll y, ll p)\r\n {\r\n     ll res = 1;\r\n     x = x % p;\r\n     while (y > 0)\r\n     {\r\n         if (y & 1)\r\n             res = (res * x) % p;\r\n         y = y >> 1;\r\n         x = (x * x) % p;\r\n     }\r\n     return res;\r\n }\r\n ll factorial[N];\r\n void fact()\r\n {\r\n     factorial[0]=1;\r\n     for(ll i=1;i<=N;i++)\r\n     {\r\n         factorial[i]=(factorial[i-1]%MOD*i%MOD)%MOD;\r\n     }\r\n }\r\n ll modInverse(ll n,ll p)\r\n {\r\n     return power(n, p - 2, p);\r\n }\r\n ll nCrModPFermat(ll n,ll r, ll p)\r\n {\r\n     if (n < r)\r\n         return 0;\r\n     if (r == 0)\r\n         return 1;\r\n     ll ans=factorial[n];\r\n     ll x=(factorial[n-r]%p*factorial[r]%p)%p;\r\n     ans=(ans%p* modInverse(x, p)%p)%p;\r\n     return ans;\r\n }\r\n */\r\n\r\n/*\r\n //for calculating nCr less than 10^18\r\n ll gcd(ll a,ll b)\r\n {\r\n     if(b==0)\r\n         return a;\r\n     return gcd(b,a%b);\r\n }\r\n ll nCr(ll n,ll r)\r\n {\r\n     ll p=1,q=1;\r\n     if(n-r<r)\r\n         r=n-r;\r\n     while(r)\r\n     {\r\n         p*=n;\r\n         q*=r;\r\n         ll g=gcd(p,q);\r\n         p/=g;\r\n         q/=g;\r\n         n--;\r\n         r--;\r\n     }\r\n     return p;\r\n }\r\n */\r\n/*\r\n ll power(ll x,ll y, ll p)\r\n {\r\n     ll res = 1;\r\n     x = x % p;\r\n     while (y > 0)\r\n     {\r\n         if (y & 1)\r\n             res = (res * x) % p;\r\n         y = y >> 1;\r\n         x = (x * x) % p;\r\n     }\r\n     return res;\r\n }\r\n ll power(ll x,ll y)\r\n {\r\n     ll res = 1;\r\n     while (y > 0)\r\n     {\r\n         if (y & 1)\r\n             res = (res * x);\r\n         y = y >> 1;\r\n         x = (x * x);\r\n     }\r\n     return res;\r\n }\r\n bool fl[N+1];\r\n vector<ll> sieve(ll n)\r\n {\r\n     vector<ll> primes;\r\n     for(ll i=3; i*i<=n; i+=2)\r\n         for(ll j=i*i; j<=n; j+=i+i)\r\n             fl[j]=true;\r\n\r\n     primes.pb(2);\r\n     for(ll i=3; i<=n; i+=2) if(!fl[i]) primes.pb(i);\r\n     return primes;\r\n }\r\n vector<ll> p=(sieve(N));\r\n vector<pll> prime_fact(ll n)\r\n  {\r\n     vector<pll>v;\r\n     for(ll i=0;i<p.size()&& p[i]*p[i]<=n;i++)\r\n      {\r\n          if(n%p[i]==0)\r\n          {\r\n              ll cnt=0;\r\n              while(n%p[i]==0)\r\n              {\r\n                  cnt++;\r\n                  n/=p[i];\r\n              }\r\n              v.pb({p[i],cnt});\r\n          }\r\n      }\r\n      if(n>1)\r\n          v.pb({n,1});\r\n     return v;\r\n  }\r\n\r\n*/\r\n\r\n/*\r\n prime fact using log(n) upto 10^7\r\n int prime[N];\r\n void seive()\r\n {\r\n     for(int i=2;i<N;i++)\r\n         prime[i]=i;\r\n     prime[1]=1;\r\n     for(int i=4;i<N;i+=2)\r\n         prime[i]=2;\r\n     for(int i=3;i*i<N;i++)\r\n     {\r\n         if(prime[i]==i)\r\n         {\r\n             for(int j=i*i;j<N;j+=i)\r\n                 prime[j]=i;\r\n         }\r\n     }\r\n }\r\n vector<int>prime_fact(int n)\r\n {\r\n     vector<int>v;\r\n     while(n!=1)\r\n     {\r\n         v.pb(prime[n]);\r\n         n/=prime[n];\r\n     }\r\n     return v;\r\n }\r\n */\r\n/*\r\n //Direction of a point from a line segment\r\n \r\n struct point{\r\n     double x,y;\r\n };\r\n point subtract(point p1,point p2)\r\n {\r\n     point res;\r\n     res.x=p1.x-p2.x;\r\n     res.y=p1.y-p2.y;\r\n     return res;\r\n }\r\n int get_dir(point a,point b,point c)\r\n {\r\n     b=subtract(b,a);\r\n     c=subtract(c,a);\r\n     double res=b.x*c.y-b.y*c.x;\r\n     if(res>0)\r\n         return -1; //left\r\n     else if (res<0)\r\n         return 1; //right\r\n     else\r\n         return 0; //on the line\r\n     \r\n }\r\n */\r\n\r\n\r\n/*\r\n//nCr mod m (where m is not a prime)\r\n//code for:\r\n//nC1 nC2 nC3.... which are divisible by m and which are not.\r\n \r\n ll n,m;\r\n cin>>n>>m;\r\n vector<pll>need;\r\n for(i=2;i*i<=m;i++)\r\n {\r\n     if(m%i==0)\r\n     {\r\n         ll cnt=0;\r\n         while(m%i==0)\r\n         {\r\n             cnt++;\r\n             m/=i;\r\n         }\r\n         need.pb({i,cnt});\r\n     }\r\n }\r\n if(m>1)\r\n     need.pb({m,1});\r\n vector<pll>have=need;\r\n for(auto &it:have)\r\n     it.ss=0;\r\n vector<ll>ans;\r\n for(i=1;i<=n;i++)\r\n {\r\n     ll x=n-i+1;\r\n     for(auto &it:have)\r\n     {\r\n         while(x%it.ff==0)\r\n         {\r\n             it.ss++;\r\n             x/=it.ff;\r\n         }\r\n     }\r\n     x=i;\r\n     for(auto &it:have)\r\n     {\r\n         while(x%it.ff==0)\r\n         {\r\n             it.ss--;\r\n             x/=it.ff;\r\n         }\r\n     }\r\n     bool flag=true;\r\n     for(j=0;j<need.size();j++)\r\n     {\r\n         if(have[j].ss<need[j].ss)\r\n         {\r\n             flag=false;\r\n             break;\r\n         }\r\n     }\r\n     if(flag)\r\n         ans.pb(i+1);\r\n }\r\n \r\n \r\n */\r\n"
}