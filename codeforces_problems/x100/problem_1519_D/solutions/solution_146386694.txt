{
    "id": 146386694,
    "contestId": 1519,
    "creationTimeSeconds": 1644851162,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "devinqu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 200806400,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define rep(i, a, b) for(int i = a; i < (b); ++i)\n#define all(x) begin(x), end(x)\n#define sz(x) (int)(x).size()\ntypedef long long ll;\ntypedef pair<int, int> pii;\ntypedef vector<int> vi;\n\nconst int N = 5005;\n\nint n, a[N], b[N];\nll dp[N][N];\n\nint main() {\n    cin.tie(0)->sync_with_stdio(0);\n    cin.exceptions(cin.failbit);\n\n    cin >> n;\n    rep(i, 0, n) {\n        cin >> a[i];\n    }\n    rep(i, 0, n) {\n        cin >> b[i];\n    }\n\n    rep(l, 1, n+1) {\n        rep(i, 0, n-l+1) {\n            int j = i+l-1;\n            if (l == 1) {\n                dp[i][j] = a[i]*1ll*b[j];\n            } else {\n                dp[i][j] = dp[i+1][j-1];\n                dp[i][j] += a[i]*1ll*b[j] + a[j]*1ll*b[i];\n            }\n        }\n    }\n\n    ll ans = 0, pre = 0;\n    rep(i, 0, n) {\n        pre += a[i]*1ll*b[i];\n        ans = max(ans, pre + dp[i+1][n-1]);\n        ll suf = 0;\n        for (int j = n-1; j > i; --j) {\n            suf += a[j]*1ll*b[j];\n            ans = max(ans, suf + pre + dp[i+1][j-1]);\n        }\n    }\n    ll suf = 0;\n    for (int j = n-1; j >= 0; --j) {\n        suf += a[j]*1ll*b[j];\n        ans = max(ans, suf + (j-1 >= 0 ? dp[0][j-1] : 0));\n    }\n\n    cout << ans << '\\n';\n}",
    "defect_evaluation_v4": {
        "good solution": 80,
        "wrong solution": 20,
        "compilation error": 0,
        "runtime error": 0
    },
    "category_evaluation": {
        "mathematics": 20,
        "dynamic programming": 100,
        "bit manipulation": 0,
        "greedy": 0,
        "brute force": 0,
        "graphs": 0,
        "sortings": 0,
        "search": 0,
        "trees": 0,
        "strings": 0,
        "number theory": 0,
        "combinatorics": 0,
        "two pointers": 0,
        "geometry": 0,
        "shortest paths": 0,
        "divide and conquer": 0,
        "probabilities": 0,
        "data structures": 0,
        "game theory": 0,
        "2d, 3d": 0,
        "recursive": 0,
        "well-commented": 0,
        "self-documenting": 0,
        "complex": 0,
        "readable": 0,
        "well-named": 0,
        "efficient": 0,
        "reusable": 0,
        "documented": 0,
        "good error-handling": 0,
        "good solution": 0,
        "compilation error": 0,
        "runtime error": 0
    }
}