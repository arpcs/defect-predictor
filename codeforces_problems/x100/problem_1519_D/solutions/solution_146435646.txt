{
    "id": 146435646,
    "contestId": 1519,
    "creationTimeSeconds": 1644864304,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "omeganot"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n;\n\nint main() {\n  cin >> n;\n  vector<long long> a(n);\n  vector<long long> b(n);\n  for(int i=0;i<n;i++) {\n\tcin >> a[i];\n  } \n  for(int i=0;i<n;i++) {\n\tcin >> b[i];\n  }\n  long long ans = 0;\n  vector<long long> pre(n+1,0);\n  for(int i=0;i<n;i++) {\n\tpre[i+1] = pre[i]+(a[i]*b[i]);\n  }\n  for(int i=0;i<n-1;i++) {\n\tlong long curr = 0;\n\t//curr+=(a[i+1]*b[i]);\n\t//curr+=(a[i]*b[i+1]);\n\t//cout << \"i: \" << i << endl;\n\tfor(int l=0;i-l>=0&&i+l+1<n;l++) {\n\t  curr += (a[i+1+l]*b[i-l]);\n\t  curr += (a[i-l]*b[i+1+l]);\n\t  //cout << l << endl;\n\t  //cout << curr << \" \" << pre[i-l] << \" \" << pre[n]-pre[i+l+1+1] << endl;\n\t  ans = max(ans,curr+pre[i-l]+pre[n]-pre[i+l+2]);\n\t}\n  }\n  for(int i=1;i<n-1;i++) {\n\tlong long curr = a[i]*b[i];\n\t//ans = max(ans,curr+pre[i]+pre[n]-pre[i+1]);\n\tfor(int l=1;i-l>=0&&i+l<n;l++) {\n\t  curr += a[i-l]*b[i+l];\n\t  curr += a[i+l]*b[i-l];\n\t  ans = max(ans,curr+pre[i-l]+pre[n]-pre[i+l+1]);\n\t}\n  }\n  cout << max(ans,pre[n]) << endl;\n}\n",
    "defect_evaluation_v4": {
        "good solution": 70,
        "wrong solution": 30,
        "compilation error": 0,
        "runtime error": 0
    },
    "category_evaluation": {
        "mathematics": 10,
        "dynamic programming": 40,
        "bit manipulation": 0,
        "greedy": 0,
        "brute force": 40,
        "graphs": 0,
        "sortings": 0,
        "search": 0,
        "trees": 0,
        "strings": 0,
        "number theory": 0,
        "combinatorics": 0,
        "two pointers": 0,
        "geometry": 0,
        "shortest paths": 0,
        "divide and conquer": 0,
        "probabilities": 0,
        "data structures": 0,
        "game theory": 0,
        "2d, 3d": 0,
        "recursive": 60,
        "well-commented": 40,
        "self-documenting": 0,
        "complex": 20,
        "readable": 0,
        "well-named": 40,
        "efficient": 20,
        "reusable": 0,
        "documented": 0,
        "good error-handling": 0,
        "good solution": 20,
        "compilation error": 0,
        "runtime error": 0
    }
}