{
    "id": 161572381,
    "contestId": 1519,
    "creationTimeSeconds": 1656001239,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "CamLoT_e"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 420,
    "memoryConsumedBytes": 201523200,
    "source": "  #include<iostream>\r\n  #include<iomanip>\r\n  #include<algorithm>\r\n  #include<vector>\r\n  #include<utility>\r\n  #include<set>\r\n  #include<unordered_set>\r\n  #include<list>\r\n  #include<iterator>\r\n  #include<deque>\r\n  #include<queue>\r\n  #include<stack>\r\n  #include<set>\r\n  #include<bitset>\r\n  #include<random>\r\n  #include<map>\r\n  #include<unordered_map>\r\n  #include<stdio.h>\r\n  #include<complex>\r\n  #include<math.h>\r\n  #include<cstring>\r\n  #include<chrono>\r\n  #include<string>\r\n  #include \"ext/pb_ds/assoc_container.hpp\"\r\n  #include \"ext/pb_ds/tree_policy.hpp\"\r\n  // Header Files End\r\n  using namespace std;\r\n  using namespace __gnu_pbds;\r\n  template<class T>\r\n  using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update> ;\r\n  \r\n  template<class key, class value, class cmp = std::less<key>>\r\n  using ordered_map = tree<key, value, cmp, rb_tree_tag, tree_order_statistics_node_update>;\r\n  // find_by_order(k)  returns iterator to kth element starting from 0;\r\n  // order_of_key(k) returns count of elements strictly smaller than k;\r\n  // Driver program to test above functions\r\n  #define fast_io ios_base::sync_with_stdio(0); cin.tie(0); \r\n  #define ll long long\r\n  #define inf 1e18\r\n  #define pb                push_back\r\n  #define ppb               pop_back\r\n  #define pf                push_front\r\n  #define ppf               pop_front\r\n  #define all(x)            (x).begin(),(x).end()\r\n  #define uniq(v)           (v).erase(unique(all(v)),(v).end())\r\n  #define sz(x)             (ll)((x).size())\r\n  #define fr                first\r\n  #define sc                second\r\n  #define pii               pair<ll,ll>\r\n  #define rep(i,a,b)        for(ll i=a;i<b;i++)\r\n  #define mem1(a)           memset(a,-1,sizeof(a))\r\n  #define mem0(a)           memset(a,0,sizeof(a))\r\n  #define ppc               __builtin_popcount\r\n  #define ppcll             __builtin_popcountll\r\n  ll gcd(ll a, ll b) { if (b == 0) return a; return gcd(b, a % b);}\r\n  // ll ceil_div(ll a, ll b) {return a % b == 0 ? a / b : a / b + 1;}\r\n  #define mod  1000000007\r\n  ll mpow(ll a, ll n,ll p){ a%=p; ll res=1; while(n>0){ if(n&1LL)res=res*a%p; a=a*a%p; n>>=1; } return res; }\r\n  // const ll cons = 200005;\r\n  // ll fact[cons + 2],invfact[cons+2];\r\n  // void precomp(ll n,ll p){\r\n  //     fact[0]=1;\r\n  //     ll i=0;\r\n  //     for(i=1;i<n;i++)  fact[i]=(fact[i-1]*i)%p;\r\n  //     i--;\r\n  //     invfact[i]=mpow(fact[i],p-2,p);\r\n  //     for(i--;i>=0;i--){\r\n  //       invfact[i]=invfact[i+1]*(i+1)%p;\r\n  //   }\r\n  // }\r\n  // ll C(ll n,ll r,ll p){\r\n  //     if(n<r||n<0||r<0) return 0;\r\n  //     if(r==0) return 1;\r\n  //     return ((fact[n]%p * invfact[r]%p) % p * invfact[n-r] %p)%p;\r\n  // }\r\n  vector<ll>a,b;\r\n  vector<vector<ll>>dp;\r\n  ll n; \r\n  ll find_btw(ll i,ll j){\r\n    if(i==j) return a[i]*b[j];\r\n    if(dp[i][j]!=-1) return dp[i][j];\r\n    if(i+1==j) return dp[i][j]=a[i]*b[j]+b[i]*a[j];\r\n    return dp[i][j]=a[i]*b[j]+b[i]*a[j]+find_btw(i+1,j-1);\r\n  }\r\n  int main(){\r\n    cin>>n;\r\n    a.resize(n); b.resize(n);\r\n    dp.resize(n,vector<ll>(n,-1));\r\n    for(auto &i:a ) cin>>i;\r\n    for(auto &i:b ) cin>>i;\r\n    vector<ll>pref(n+1,0);\r\n    for(ll i=1;i<=n;i++){\r\n      pref[i]=pref[i-1]+(a[i-1]*b[i-1]);\r\n    }\r\n    ll mx=pref[n];\r\n    for(ll i=0;i<n;i++){\r\n      for(ll j=i+1;j<n;j++){\r\n        ll sum=0;\r\n        sum+=pref[i];\r\n        sum+=(pref[n]-pref[j+1]); \r\n        ll val=find_btw(i,j);\r\n        sum+=val;\r\n        mx=max(mx,sum);\r\n      }\r\n    }\r\n    cout<<mx;\r\n    return 0;\r\n  }"
}