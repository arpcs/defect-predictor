{
    "id": 152465134,
    "contestId": 1519,
    "creationTimeSeconds": 1648886307,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "Chan_shang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 201318400,
    "source": "#include<bits/stdc++.h>\r\n#include<unordered_map>\r\n#define mem(a,b) memset(a,b,sizeof a)\r\n#define cinios (ios::sync_with_stdio(false),cin.tie(0),cout.tie(0))\r\n#define sca scanf\r\n#define pri printf\r\n#define forr(a,b,c) for(int a=b;a<=c;a++)\r\n#define rfor(a,b,c) for(int a=b;a>=c;a--)\r\n#define all(a) a.begin(),a.end()\r\n#define oper(a) (operator<(const a& ee)const)\r\n#define endl \"\\n\"\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef pair<ll, int> PII;\r\n\r\ndouble DNF = 1e17;\r\nconst int N = 5010, M = 200010, MM = 110;\r\nll LNF = 0x3f3f3f3f3f3f3f3f;\r\nint INF = 0x3f3f3f3f, mod = 1e9 + 7;\r\nint n, m, k, T, S, D, K;\r\nll a[N], b[N];\r\nll q[N];\r\nll odd[N][N / 2], even[N][N / 2];\r\n\r\nvoid solve() {\r\n\tcin >> n;\r\n\tforr(i, 1, n)cin >> a[i];\r\n\tforr(i, 1, n)cin >> b[i];\r\n\tforr(i, 1, n)q[i] = q[i - 1] + a[i] * b[i];\r\n\t\r\n\tforr(i, 2, n) {\r\n\t\todd[i][0] = a[i] * b[i];\r\n\t\tfor (int len = 1; i - len >= 1 && i + len <= n; len ++) {\r\n\t\t\tint l = i - len, r = i + len;\r\n\t\t\todd[i][len] = odd[i][len - 1] + a[l] * b[r] + a[r] * b[l];\r\n\t\t}\r\n\t}\r\n\r\n\tforr(i, 1, n - 1) {\r\n\t\tfor (int len = 1; i - len + 1 >= 1 && i + len <= n; len++) {\r\n\t\t\tint l = i - len + 1, r = i + len;\r\n\t\t\teven[i][len] = even[i][len - 1] + a[l] * b[r] + a[r] * b[l];\r\n\t\t}\r\n\t}\r\n\r\n\tll mx = q[n];\r\n\tfor (int len = 2; len <= n; len++)\r\n\t\tfor (int i = 1; i + len - 1 <= n; i++) {\r\n\t\t\tint j = i + len - 1;\r\n\t\t\tll t;\r\n\t\t\tif (len % 2)t = odd[(i + j) / 2][len / 2];\r\n\t\t\telse t = even[(i + j) / 2][len / 2];\r\n\t\t\tmx = max(mx, q[i - 1] + q[n] - q[j] + t);\r\n\t\t}\r\n\r\n\tcout << mx;\r\n}\r\n\r\nint main() {\r\n\tcinios;\r\n\tT = 1;\r\n\twhile (T--)solve();\r\n\treturn 0;\r\n}\r\n/*\r\n*/"
}