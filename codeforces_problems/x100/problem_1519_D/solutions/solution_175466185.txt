{
    "id": 175466185,
    "contestId": 1519,
    "creationTimeSeconds": 1665434982,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "D",
        "name": "Maximum Sum of Products",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "dp",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "lazy_loop"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 201216000,
    "source": "#include<bits/stdc++.h>\r\n// #include<ext/pb_ds/assoc_container.hpp>\r\n// when using less_equal in ordered set, upper bound works as lower bound and vice versa\r\n// #include<ext/pb_ds/tree_policy.hpp>\r\n\r\n#define int long long int\r\n#define F first\r\n#define S second\r\n#define pb push_back\r\n#define ppb pop_back\r\n#define endl \"\\n\"\r\n#define all(v) v.begin(),v.end()\r\n#define sz(v) (int)v.size()  \r\n#define pr(s) cout<<s<<endl; \r\n#define INF 1e18\r\n#define set_bits __builtin_popcountll\r\n#define PI 3.141592653589793238462\r\n// #define MOD 1000000007  \r\n// #define MOD 998244353\r\n\r\nusing namespace std;\r\n\r\nint gcd(int a, int b) { return b ? gcd(b, a%b) : a; }\r\n// using namespace __gnu_pbds;\r\n\r\n// typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update > pbds;\r\n// find_by_order(k)  returns iterator to kth element starting from 0;\r\n// order_of_key(k) returns count of elements strictly smaller than k;\r\n\r\n\r\n\r\nvoid solve(){\r\n    int n,ans{};\r\n    cin>>n;\r\n    int a[n],b[n],c[n];\r\n    for(int i{};i<n;i++)\r\n        cin>>a[i];\r\n    for(int i{};i<n;i++){\r\n        cin>>b[i]; \r\n        c[i]=a[i]*b[i];\r\n    }\r\n    for(int i=1;i<=n;i++)\r\n        c[i]+=c[i-1];\r\n    ans=c[n-1];\r\n    vector<vector<int>> dp(n,vector<int> (n));\r\n    for(int i{n-1};i>=0;i--){\r\n        for(int j{i};j<n;j++){\r\n            if(i==j){\r\n                dp[i][j]=a[i]*b[j];\r\n            }\r\n            else if(j-i==1){\r\n                dp[i][j]=a[i]*b[j]+a[j]*b[i];\r\n            }\r\n            else{\r\n                dp[i][j]=dp[i+1][j-1]+a[i]*b[j]+a[j]*b[i];\r\n            }\r\n        }\r\n    }\r\n    for(int i{};i<n;i++){\r\n        for(int j=i+1;j<n;j++){\r\n            int temp=c[n-1]-c[j]+dp[i][j];\r\n            if(i!=0)\r\n                temp+=c[i-1];\r\n            ans=max(ans,temp);\r\n        }\r\n    }\r\n    cout<<ans<<endl;\r\n}\r\n\r\n\r\nint32_t main(){\r\n\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\",\"r\",stdin);\r\n    freopen(\"output.txt\",\"w\",stdout);\r\n    freopen(\"error.txt\",\"w\",stderr);\r\n#endif\r\n\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n\r\n    int t=1;\r\n    // cin>>t;\r\n    for(int i=1;i<=t;i++){\r\n        // cout<<\"Case #\"<<i<<\": \";\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}