{
    "id": 174937271,
    "contestId": 1519,
    "creationTimeSeconds": 1665125538,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "A",
        "name": "Red and Blue Beans",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "math"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "ayyathurai"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\n#define yes \"YES\" \n#define no \"NO\" \n#define ll long long\n#define ull unsigned long long\n#define nsort(cont) sort(cont.begin(), cont.end())\n#define rsort(cont) sort(cont.rbegin(), cont.rend())\n#define reverse(cont) reverse(cont.begin(), cont.end())\n#define mini(cont) *min_element(cont.begin(), cont.end())\n#define maxi(cont) *max_element(cont.begin(), cont.end())\n#define count(cont, c) count(cont.begin(), cont.end(), c)\n#define sum(cont) accumulate(cont.begin(), cont.end(), 0)\n\ntemplate<class T> using oset = tree<T, null_type,less<T>, rb_tree_tag,tree_order_statistics_node_update>;\n \ntemplate<class T> istream& operator >> (istream &in, vector<T> &cont){ for(T &x: cont) in >> x; return in; }\ntemplate<class T> istream& operator >> (istream &in, set<T> &cont){ for(T &x: cont) in >> x; return in; }\ntemplate<class T> ostream& operator << (ostream &out, const vector<T> &cont){ for(auto x : cont) out << x << \" \"; return out; }\ntemplate<class T> ostream& operator << (ostream &out, const set<T> &cont){ for(auto x : cont) out << x << \" \"; return out; }\ntemplate<class T, class K> ostream& operator << (ostream &out, const map<T, K> &mp){ for(auto i : mp) out << i.first << \": \" << i.second << \"  \"; return out; }\n\nconst int M = 1e9 + 7;\n\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int test_case = 1;\n    cin >> test_case;\n    while(test_case--)\n    {\n        ll a, b, c;\n        cin >> a >> b >> c;\n        if(a > b) swap(a, b);\n        if(b > a * (c + 1)) cout << no;\n        else cout << yes;\n        cout << endl;\n    }\n}"
}