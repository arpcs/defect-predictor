{
    "id": 160693309,
    "contestId": 1519,
    "creationTimeSeconds": 1655270697,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "A",
        "name": "Red and Blue Beans",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "math"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "yomal"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define ll long long\r\n#define ld long double\r\n#define ar array\r\n\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\n\r\ntemplate <typename T> using oset = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\n#define vt vector\r\n#define pb push_back\r\n#define all(c) (c).begin(), (c).end()\r\n#define sz(x) (int)(x).size()\r\n\r\n#define F_OR(i, a, b, s) for (int i=(a); (s)>0?i<(b):i>(b); i+=(s))\r\n#define F_OR1(e) F_OR(i, 0, e, 1)\r\n#define F_OR2(i, e) F_OR(i, 0, e, 1)\r\n#define F_OR3(i, b, e) F_OR(i, b, e, 1)\r\n#define F_OR4(i, b, e, s) F_OR(i, b, e, s)\r\n#define GET5(a, b, c, d, e, ...) e\r\n#define F_ORC(...) GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1)\r\n#define FOR(...) F_ORC(__VA_ARGS__)(__VA_ARGS__)\r\n#define EACH(x, a) for (auto& x: a)\r\n\r\ntemplate<class T> bool umin(T& a, const T& b) {\r\n    return b<a?a=b, 1:0;\r\n}\r\ntemplate<class T> bool umax(T& a, const T& b) { \r\n    return a<b?a=b, 1:0;\r\n} \r\n\r\nll FIRSTTRUE(function<bool(ll)> f, ll lb, ll rb) {\r\n    while(lb<rb) {\r\n        ll mb=(lb+rb)/2;\r\n        f(mb)?rb=mb:lb=mb+1; \r\n    } \r\n    return lb;\r\n}\r\nll LASTTRUE(function<bool(ll)> f, ll lb, ll rb) {\r\n    while(lb<rb) {\r\n        ll mb=(lb+rb+1)/2;\r\n        f(mb)?lb=mb:rb=mb-1; \r\n    } \r\n    return lb;\r\n}\r\n\r\ntemplate<class A> void read(vt<A>& v);\r\ntemplate<class A, size_t S> void read(ar<A, S>& a);\r\ntemplate<class T> void read(T& x) {\r\n    cin >> x;\r\n}\r\nvoid read(double& d) {\r\n    string t;\r\n    read(t);\r\n    d=stod(t);\r\n}\r\nvoid read(long double& d) {\r\n    string t;\r\n    read(t);\r\n    d=stold(t);\r\n}\r\ntemplate<class H, class... T> void read(H& h, T&... t) {\r\n    read(h);\r\n    read(t...);\r\n}\r\ntemplate<class A> void read(vt<A>& x) {\r\n    EACH(a, x)\r\n        read(a);\r\n}\r\ntemplate<class A, size_t S> void read(array<A, S>& x) {\r\n    EACH(a, x)\r\n        read(a);\r\n}\r\n\r\nstring to_string(char c) {\r\n    return string(1, c);\r\n}\r\nstring to_string(bool b) {\r\n    return b?\"true\":\"false\";\r\n}\r\nstring to_string(const char* s) {\r\n    return string(s);\r\n}\r\nstring to_string(string s) {\r\n    return s;\r\n}\r\nstring to_string(vt<bool> v) {\r\n    string res;\r\n    FOR(sz(v))\r\n        res+=char('0'+v[i]);\r\n    return res;\r\n}\r\n\r\ntemplate<size_t S> string to_string(bitset<S> b) {\r\n    string res;\r\n    FOR(S)\r\n        res+=char('0'+b[i]);\r\n    return res;\r\n}\r\ntemplate<class T> string to_string(T v) {\r\n    bool f=1;\r\n    string res;\r\n    EACH(x, v) {\r\n        if(!f)\r\n            res+=' ';\r\n        f=0;\r\n        res+=to_string(x);\r\n    }\r\n    return res;\r\n}\r\n\r\ntemplate<class A> void write(A x) {\r\n    cout << to_string(x);\r\n}\r\ntemplate<class H, class... T> void write(const H& h, const T&... t) { \r\n    write(h);\r\n    write(t...);\r\n}\r\nvoid print() {\r\n    write(\"\\n\");\r\n}\r\ntemplate<class H, class... T> void print(const H& h, const T&... t) { \r\n    write(h);\r\n    if(sizeof...(t))\r\n        write(' ');\r\n    print(t...);\r\n}\r\n\r\nvoid DBG() {\r\n    cerr << \"]\" << endl;\r\n}\r\ntemplate<class H, class... T> void DBG(H h, T... t) {\r\n    cerr << to_string(h);\r\n    if(sizeof...(t))\r\n        cerr << \", \";\r\n    DBG(t...);\r\n}\r\n#ifdef _DEBUG\r\n#define dbg(...) cerr << \"LINE(\" << __LINE__ << \") -> [\" << #__VA_ARGS__ << \"]: [\", DBG(__VA_ARGS__)\r\n#else\r\n#define dbg(...) 0\r\n#endif\r\n\r\ntemplate<class T> void offset(ll o, T& x) {\r\n    x+=o;\r\n}\r\ntemplate<class T> void offset(ll o, vt<T>& x) {\r\n    EACH(a, x)\r\n        offset(o, a);\r\n}\r\ntemplate<class T, size_t S> void offset(ll o, ar<T, S>& x) {\r\n    EACH(a, x)\r\n        offset(o, a);\r\n}\r\n\r\nmt19937 mt_rng(chrono::steady_clock::now().time_since_epoch().count());\r\nll randint(ll a, ll b) {\r\n    return uniform_int_distribution<ll>(a, b)(mt_rng);\r\n}\r\n\r\ntemplate<class T, class U> void vti(vt<T> &v, U x, size_t n) {\r\n    v=vt<T>(n, x);\r\n}\r\ntemplate<class T, class U> void vti(vt<T> &v, U x, size_t n, size_t m...) {\r\n    v=vt<T>(n);\r\n    EACH(a, v)\r\n        vti(a, x, m);\r\n}\r\n\r\nconst int d4i[4]={-1, 0, 1, 0}, d4j[4]={0, 1, 0, -1};\r\nconst int d8i[8]={-1, -1, 0, 1, 1, 1, 0, -1}, d8j[8]={0, 1, 1, 1, 0, -1, -1, -1};\r\n\r\nvoid solve() {\r\n    int r,b,d;\r\n    read(r,b,d);\r\n    if(r <= b)\r\n    {\r\n        (b <= r*(d+1)) ? print(\"YES\") : print(\"NO\");\r\n    }   \r\n    else if(r > b)\r\n    {\r\n        (r <= b*(d+1)) ? print(\"YES\") : print(\"NO\");\r\n    }\r\n}\r\n\r\nint main() {\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n\r\n    int t=0;\r\n    read(t);\r\n    FOR(t) {\r\n        //write(\"Case #\", i+1, \": \");\r\n        solve();\r\n    }\r\n}"
}