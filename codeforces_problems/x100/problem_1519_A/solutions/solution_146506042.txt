{
    "id": 146506042,
    "contestId": 1519,
    "creationTimeSeconds": 1644922940,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "A",
        "name": "Red and Blue Beans",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "math"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "sonalgup123"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 80179200,
    "source": "#include <bits/stdc++.h>\r\n  #include <cstdio>\r\n  #include <cstring>\r\n  #include <cmath>\r\n  #include <chrono>\r\n  #include <complex>\r\n  #define endl \"\\n\"\r\n  #define ll long long\r\n  #define lli long long int\r\n  #define vi vector<int>\r\n  #define vs vector<string>\r\n  #define vll vector<ll>\r\n  #define vvi vector < vi >\r\n  #define vpll vector<pair<ll,ll>>\r\n  #define pii pair<int,int>\r\n  #define mii map<int,int>\r\n  #define pll pair<ll, ll>\r\n  #define PI 3.141592653589793238462\r\n  #define mod 1000000007\r\n  #define inf 1000000000000000001;\r\n  #define all(c) c.begin(),c.end()\r\n  #define mp(x,y) make_pair(x,y)\r\n  #define mem(a,val) memset(a,val,sizeof(a))\r\n  #define eb emplace_back\r\n  #define f first\r\n  #define s second\r\n  #define pb push_back\r\n  #define ppb pop_back\r\n  #define pf  push_front\r\n  #define ppf pop_front\r\n  #define rep(i,a,b) for(ll i=a;i<b;i++)\r\n  #define repe(i,a,b) for(ll i=a;i<=b;i++)\r\n  #define dep(i,a,b) for(ll i=a; i>=b; i--)\r\n  #define yes cout<<\"YES\"<<endl\r\n  #define no cout<<\"NO\"<<endl\r\n \r\n  using namespace std;\r\n  const ll N = 10000000;\r\n  vi isprime(10000000 , 1);\r\n  vi g(10000000, 0);\r\n  \r\n  //*********************************\r\n  //Euclid's algorithm----O(logN)\r\n  ll gcd(ll a, ll b) { if (b == 0) {return a;} return gcd(b, a % b);}\r\n\r\n  //LCM\r\n  ll lcm(ll a, ll b){return (a/gcd(a,b)*b);}\r\n\r\n  //Prime factorisation----O(srrt(n))\r\n  vpll primefact(ll n)  { vpll pfact; \r\n  for(ll i=2; i*i<=n; i++) if(n%i==0){ll cnt=0; while(n%i==0) {cnt++; n/=i;} pfact.pb({i,cnt});}\r\n  if(n>1) pfact.pb({n,1});  return pfact; }\r\n\r\n  //Prime factorisation(sieve)----O(logn)\r\n\r\n  //Matrix Exponentiation----->O(M^3 *logn)----for finding (A^n)\r\n\r\n  //nth element of recurrence relation\r\n    \r\n  //Binary Exponentiation(recursive)---divide & conquer-----> O(log b)\r\n  ll powerRec(ll a, ll b) {\r\n  if(b==0) return 1;\r\n  ll store = powerRec(a, b/2);\r\n  if(b&1) {return (a* ((store*store) %mod)) %mod;} else{ return (store*store) %mod;} }\r\n \r\n  //Binary Exponentiation(iterative)---divide & conquer-----> O(log b)\r\n  ll powerIter(ll a, ll b){\r\n    ll ans=1;\r\n    while(b){ if(b&1) { ans=(ans*a);} a=(a*a); b>>=1;} return ans;\r\n  }\r\n  \r\n  // Sieve of Erastosthenes---> O(n* log(logn))\r\n   vector<ll> sieve(int n) {int*arr = new int[n + 1](); vector<ll> vect; \r\n  for (int i = 2; i <= n; i++)\r\n  if (arr[i] == 0) {vect.push_back(i); \r\n  for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}\r\n\r\n  //sum_of_digits\r\n  ll sum_of_digits(ll n) {ll sum=0; while(n>0) {sum+=n%10; n/=10; } return sum;}\r\n\r\n  // Prime or not-----O(sqrt(n))\r\n  bool isPrime(ll n)\r\n  {if(n==1) return false; for(ll i=2; i*i<=n; i++){ if(n%i==0) return false;} return true;}\r\n\r\n  //Perfect square or not----->O(1)\r\n  bool prfSq (ll n){ if(ceil(double(sqrt(n)) == floor(double(sqrt(n))))){ return 1; }else{ return 0;}}\r\n\r\n  //**********************************\r\n  \r\n ll countPrimes(ll n) {\r\n        if(n<2) return 0;\r\n        int count=0;\r\n        vector<bool> primes(n,1);\r\n        primes[0] = false;\r\n        primes[1] = false;\r\n        for(ll i=2;i<n;i++)\r\n        {\r\n            if(primes[i])\r\n            {\r\n                count++;\r\n                for(ll j=i*i;j<n;j+=i)\r\n                    primes[j]=0;\r\n            }\r\n        }\r\n        \r\n        return count;\r\n    }\r\n\r\n\r\n  int main()\r\n  {\r\n   \r\n    #ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n    #endif\r\n    std::ios::sync_with_stdio(false);\r\n    // // cin.ignore(); must be there when using getline(cin, s)\r\n    ll t;\r\n    cin>>t; \r\n    while(t--) \r\n    {\r\n      ll r,b,d;\r\n      cin>>r>>b>>d;\r\n      if(r<=b)\r\n      {\r\n        ll s=r*(d+1);\r\n        if(b<=s)\r\n        {\r\n          cout<<\"YES\"<<endl;\r\n        }\r\n        else\r\n        {\r\n          cout<<\"NO\"<<endl;\r\n        }\r\n      }\r\n      else\r\n      {\r\n        ll s=b*(d+1);\r\n        if(r<=s)\r\n        {\r\n          yes;\r\n        }\r\n        else\r\n          no;\r\n      }\r\n    }\r\n    \r\n return 0;\r\n }\r\n"
}