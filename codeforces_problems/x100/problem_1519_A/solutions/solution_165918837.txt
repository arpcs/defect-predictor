{
    "id": 165918837,
    "contestId": 1519,
    "creationTimeSeconds": 1658941974,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "A",
        "name": "Red and Blue Beans",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "math"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "suhas5979"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "Java 11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 170,
    "memoryConsumedBytes": 0,
    "source": "import java.util.*;\n\nimport java.io.*;\n\npublic class Practice {\n\tstatic boolean multipleTC = true;\n\tfinal static int mod = 1000000007;\n\tfinal static int mod2 = 998244353;\n\tfinal double E = 2.7182818284590452354;\n\tfinal double PI = 3.14159265358979323846;\n\tint MAX = 200005;\n\tint N = 40000;\n\n\tvoid pre() throws Exception {\n\t}\n\n\t// All the best\n\tvoid solve(int TC) throws Exception {\n\t\tint r = ni(),b = ni(),d = ni();\n\t\tint m = min(r,b);\n\t\tint mx = max(r,b);\n\t\tif(mx%m==0) {\n\t\t\tint dd = mx/m;\n\t\t\tif(dd-1 >d) {\n\t\t\t\tpn(\"NO\");\n\t\t\t}else {\n\t\t\t\tpn(\"YES\");\n\t\t\t}\n\t\t}else {\n\t\t\tint dd = mx/m;\n\t\t\tdd++;\n\t\t\tif(dd-1 >d) {\n\t\t\t\tpn(\"NO\");\n\t\t\t}else {\n\t\t\t\tpn(\"YES\");\n\t\t\t}\n\t\t}\n\n\t}\n\n\tdouble dist(int x1, int y1, int x2, int y2) {\n\t\tdouble a = x1 - x2, b = y1 - y2;\n\t\treturn Math.sqrt((a * a) + (b * b));\n\t}\n\n\tint[] readArr(int n) throws Exception {\n\t\tint arr[] = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tarr[i] = ni();\n\t\t}\n\t\treturn arr;\n\t}\n\n\tvoid sort(int arr[], int left, int right) {\n\t\tArrayList<Integer> list = new ArrayList<>();\n\t\tfor (int i = left; i <= right; i++)\n\t\t\tlist.add(arr[i]);\n\t\tCollections.sort(list);\n\t\tfor (int i = left; i <= right; i++)\n\t\t\tarr[i] = list.get(i - left);\n\t}\n\n\tvoid sort(int arr[]) {\n\t\tArrayList<Integer> list = new ArrayList<>();\n\t\tfor (int i = 0; i < arr.length; i++)\n\t\t\tlist.add(arr[i]);\n\t\tCollections.sort(list);\n\t\tfor (int i = 0; i < arr.length; i++)\n\t\t\tarr[i] = list.get(i);\n\t}\n\n\tpublic long max(long... arr) {\n\t\tlong max = arr[0];\n\t\tfor (long itr : arr)\n\t\t\tmax = Math.max(max, itr);\n\t\treturn max;\n\t}\n\n\tpublic int max(int... arr) {\n\t\tint max = arr[0];\n\t\tfor (int itr : arr)\n\t\t\tmax = Math.max(max, itr);\n\t\treturn max;\n\t}\n\n\tpublic long min(long... arr) {\n\t\tlong min = arr[0];\n\t\tfor (long itr : arr)\n\t\t\tmin = Math.min(min, itr);\n\t\treturn min;\n\t}\n\n\tpublic int min(int... arr) {\n\t\tint min = arr[0];\n\t\tfor (int itr : arr)\n\t\t\tmin = Math.min(min, itr);\n\t\treturn min;\n\t}\n\n\tpublic long sum(long... arr) {\n\t\tlong sum = 0;\n\t\tfor (long itr : arr)\n\t\t\tsum += itr;\n\t\treturn sum;\n\t}\n\n\tpublic long sum(int... arr) {\n\t\tlong sum = 0;\n\t\tfor (int itr : arr)\n\t\t\tsum += itr;\n\t\treturn sum;\n\t}\n\n\tString bin(long n) {\n\t\treturn Long.toBinaryString(n);\n\t}\n\n\tString bin(int n) {\n\t\treturn Integer.toBinaryString(n);\n\t}\n\n\tstatic int bitCount(int x) {\n\t\treturn x == 0 ? 0 : (1 + bitCount(x & (x - 1)));\n\t}\n\n\tstatic void dbg(Object... o) {\n\t\tSystem.err.println(Arrays.deepToString(o));\n\t}\n\n\tint bit(long n) {\n\t\treturn (n == 0) ? 0 : (1 + bit(n & (n - 1)));\n\t}\n\n\tint abs(int a) {\n\t\treturn (a < 0) ? -a : a;\n\t}\n\n\tlong abs(long a) {\n\t\treturn (a < 0) ? -a : a;\n\t}\n\n\tvoid p(Object o) {\n\t\tout.print(o);\n\t}\n\n\tvoid pn(Object o) {\n\t\tout.println(o);\n\t}\n\n\tvoid pni(Object o) {\n\t\tout.println(o);\n\t\tout.flush();\n\t}\n\n\tvoid pn(int[] arr) {\n\t\tint n = arr.length;\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tsb.append(arr[i] + \" \");\n\t\t}\n\t\tpn(sb);\n\t}\n\n\tvoid pn(long[] arr) {\n\t\tint n = arr.length;\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tsb.append(arr[i] + \" \");\n\t\t}\n\t\tpn(sb);\n\t}\n\n\tString n() throws Exception {\n\t\treturn in.next();\n\t}\n\n\tString nln() throws Exception {\n\t\treturn in.nextLine();\n\t}\n\n\tint ni() throws Exception {\n\t\treturn Integer.parseInt(in.next());\n\t}\n\n\tlong nl() throws Exception {\n\t\treturn Long.parseLong(in.next());\n\t}\n\n\tdouble nd() throws Exception {\n\t\treturn Double.parseDouble(in.next());\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tnew Practice().run();\n\t}\n\n\tFastReader in;\n\tPrintWriter out;\n\n\tvoid run() throws Exception {\n\t\tin = new FastReader();\n\t\tout = new PrintWriter(System.out);\n\t\tint T = (multipleTC) ? ni() : 1;\n\t\tpre();\n\t\tfor (int t = 1; t <= T; t++)\n\t\t\tsolve(t);\n\t\tout.flush();\n\t\tout.close();\n\t}\n\n\tclass FastReader {\n\t\tBufferedReader br;\n\t\tStringTokenizer st;\n\n\t\tpublic FastReader() {\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\tpublic FastReader(String s) throws Exception {\n\t\t\tbr = new BufferedReader(new FileReader(s));\n\t\t}\n\n\t\tString next() throws Exception {\n\t\t\twhile (st == null || !st.hasMoreElements()) {\n\t\t\t\ttry {\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tthrow new Exception(e.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn st.nextToken();\n\t\t}\n\n\t\tString nextLine() throws Exception {\n\t\t\tString str = \"\";\n\t\t\ttry {\n\t\t\t\tstr = br.readLine();\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new Exception(e.toString());\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t}\n}"
}