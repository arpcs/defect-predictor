{
    "id": 221190055,
    "contestId": 1519,
    "creationTimeSeconds": 1693423250,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "A",
        "name": "Red and Blue Beans",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "math"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "1936557"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "Haskell",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "import Control.Monad\r\nimport Data.Char\r\nimport Data.Bits\r\nimport Data.List\r\nimport Data.Function (on)\r\nimport Data.Ord (comparing)\r\nimport Data.Maybe (fromJust, isNothing)\r\n\r\nimport qualified Data.Set          as Set\r\nimport qualified Data.Map.Strict   as Map\r\nimport qualified Data.Array        as Array\r\n\r\n-- (\u00ac\u203f\u00ac)\r\nmain = do \r\n  t <- readLn :: IO Int\r\n  replicateM_ t $ do \r\n    [r, b, d] <- map read . words <$> getLine :: IO [Int]\r\n    putStrLn $ myfun r b d\r\n    return ()\r\n\r\nmyfun r b d \r\n  | d == 0 && max r b `mod` min r b == 0 = \"YES\"\r\n  | d == 0 && max r b `mod` min r b /= 0 = \"NO\"\r\n  | y + z  <= d      = \"YES\"\r\n  | otherwise         = \"NO\"\r\n  where \r\n    x = abs (r - b)\r\n    (y, z) = x `divMod` (min r b)\r\n\r\n"
}