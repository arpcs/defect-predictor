{
    "id": 177992501,
    "contestId": 1519,
    "creationTimeSeconds": 1666788787,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1519,
        "index": "A",
        "name": "Red and Blue Beans",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "math"
        ]
    },
    "author": {
        "contestId": 1519,
        "members": [
            {
                "handle": "KAPON"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619706900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 921600,
    "source": "#include <bits/stdc++.h>\n\n#define int long long\n#define YES \"YES\"\n#define NO \"NO\"\nconst int MOD = 1e9 + 7;\nusing namespace std;\n\n#define mems(a, b) memset(a, b, sizeof(a))\n#define memss(a, b, sz) memset(a, b, sz * sizeof(a[0]))\n\nint dx[8] = {+1, -1, -0, +0, +1, -1, -1, +1};\nint dy[8] = {-0, +0, +1, -1, -1, +1, -1, +1};\n\n\nint n, m;\n\nbool check(int i, int j) { return i >= 0 && i < n && j >= 0 && j < m; }\n\n\nconst int N = 100005;\n//vector<int> adj[N];\n//char grid[N][N];\nvector<vector<char>> grid;\n//bool vis[N][N];\n//vector<vector<bool>> vis;\n\nint modul(int a, int b) {\n    return (b + (a % b)) % b;\n}\n\nbool vis[N];\nint adj[N];\n\n\nvoid DFS(int node, int depth = 1) {\n    vis[node] = true;\n\n    if (!vis[adj[node]])DFS(adj[node], depth + 1);\n}\n\nsigned main() {\n    ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n#ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"rt\", stdin);\n    freopen(\"output.txt\", \"wt\", stdout);\n#endif\n    int t = 1;\n    cin >> t;\n    while (t--) {\n        int r, b, d;\n        cin >> r >> b >> d;\n        int mn = min(r, b), mx = max(r, b);\n        int num = (mx + mn - 1) / mn;\n        cout<<(num-1<=d?YES:NO)<<'\\n';\n    }\n\n\n    return 0;\n}"
}