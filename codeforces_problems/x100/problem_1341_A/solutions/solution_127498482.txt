{
    "id": 127498482,
    "contestId": 1341,
    "creationTimeSeconds": 1630392028,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1341,
        "index": "A",
        "name": "Nastya and Rice",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 900,
        "tags": [
            "math"
        ]
    },
    "author": {
        "contestId": 1341,
        "members": [
            {
                "handle": "strandedsoul"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1587653100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 19,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 3788800,
    "source": "#include \"bits/stdc++.h\"\r\n#include <limits>\r\nusing namespace std;\r\n\r\n\r\nvoid testcase(){\r\n\r\n\r\n\r\n            int n , a ,  b , c , d ;  \r\n            cin >> n  >>  a >> b >> c >>  d  ; \r\n\r\n\r\n            if(n*(a +  b)  <  c - d || n*(a -  b) >   c  +   d   ){\r\n                cout << \"NO\"  ;  \r\n            } \r\n            else{\r\n\r\n                cout << \"YES\" ;  \r\n            }\r\n\r\n\r\n\r\n            \r\n\r\n \r\n}\r\n\r\n\r\n\r\nint main()\r\n{\r\n    auto clock_start = chrono::high_resolution_clock::now();\r\n    auto second_clock =  clock() ; \r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n    #ifndef ONLINE_JUDGE\r\n        freopen(\"D:/input.txt\", \"r\", stdin);\r\n        //freopen(\"error.txt\", \"w\", stderr);\r\n        freopen(\"D:/output.txt\", \"w\", stdout);\r\n    #endif\r\n\r\n    int t ;\r\n    cin >> t ;    \r\n\r\n    while(t--) {\r\n        testcase() ;  \r\n        cout << endl  ;\r\n    }\r\n\r\n    auto clock_end = chrono::high_resolution_clock::now();\r\n    auto duration = chrono::duration_cast<chrono::nanoseconds>( clock_end - clock_start ).count();\r\n    cerr << \"time taken  : \"<< \"\\n\\t      \" << duration*(1e-9) <<  \" secs (high  resolution clock)\" << \"\\n\\t      \"  <<  (float)(clock() - second_clock) / CLOCKS_PER_SEC << \" secs (clock)\" << endl;\r\n    return 0;\r\n}"
}