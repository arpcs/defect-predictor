{
    "id": 188987746,
    "contestId": 1582,
    "creationTimeSeconds": 1673526372,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1582,
        "index": "E",
        "name": "Pchelyonok and Segments",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1582,
        "members": [
            {
                "handle": "Mirali7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1635069900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "\ufeff#include <stdlib.h>\r\n#include <iostream>\r\n#include <string>\r\n#include <deque>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <iomanip>\r\n#include <map>\r\n#include <set>\r\n#include <queue>\r\n#include <fstream>\r\n#include <stack>\r\n#include <cmath>\r\n#include <bitset>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\n#include <random>\r\nusing namespace std;\r\n#define ll long long\r\n#define ull unsigned ll\r\n#define forn(i, n) for (ll i = 1; i <= n; i++)\r\n#define dforn(i, a, b) for (ll i = a; i <= b; i++)\r\n#define rforn(i, n) for (ll i = n; i >= 1; i--)\r\n#define rdforn(i, a, b) for (ll i = b; i >= a; i--)\r\nconst ll mod = 998244353;\r\nconst int N = 3 * 1e5 + 100;\r\nconst ll inf = 1e18;\r\nconst double eps = 1e-7;\r\n\r\nvoid solve() {\r\n\tll n, sq;\r\n\tcin >> n;\r\n\tsq = sqrt(2 * n);\r\n\tvector<ll> a(n + 1), pref(n + 1);\r\n\tforn(i, n) {\r\n\t\tcin >> a[i];\r\n\t\tpref[i] = a[i] + pref[i - 1];\r\n\t}\r\n\tvector<ll> dp(sq + 1, -inf);\r\n\tvector<queue<ll>> q(sq + 1);\r\n\tll timer = 0;\r\n\tll ans = 0;\r\n\trforn(i, n) {\r\n\t\tforn(j, sq) {\r\n\t\t\tif (timer > j && !q[j].empty()) {\r\n\t\t\t\tdp[j] = max(dp[j], q[j].front());\r\n\t\t\t\tq[j].pop();\r\n\t\t\t}\r\n\t\t}\r\n\t\tforn(j, min(sq, n - i + 1)) {\r\n\t\t\tll s = pref[i + j - 1] - pref[i - 1];\r\n\t\t\tif (j == 1 || s < dp[j - 1]) {\r\n\t\t\t\tans = max(ans, j);\r\n\t\t\t\tq[j].push(s);\r\n\t\t\t}\r\n\t\t}\r\n\t\ttimer++;\r\n\t}\r\n\tcout << ans << '\\n';\r\n}\r\n\r\nint main()\r\n{\r\n\tios::sync_with_stdio(0);\r\n\tcin.tie(0);\r\n\tcout.tie(0);\r\n\tll t = 1;\r\n\tcin >> t;\r\n\twhile (t) {\r\n\t\tt--;\r\n\t\tsolve();\r\n\t}\r\n\treturn 0;\r\n}"
}