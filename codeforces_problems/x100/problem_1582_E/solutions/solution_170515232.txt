{
    "id": 170515232,
    "contestId": 1582,
    "creationTimeSeconds": 1662056387,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1582,
        "index": "E",
        "name": "Pchelyonok and Segments",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1582,
        "members": [
            {
                "handle": "DavidGhyTar"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1635069900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 389,
    "memoryConsumedBytes": 406425600,
    "source": "#include <iostream>\n#include <algorithm>\n#include <cstring>\n\ntypedef long long ll;\n\nint const nmax = 1e5;\nint const sqrt = 500;\nll a[nmax + 5];\nll sp[nmax + 5];\nll dp[sqrt + 5][nmax + 5];\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(0);\n    int t;\n    std::cin >> t;\n    while (t--) {\n        int n;\n        std::cin >> n;\n        int klim = 0;\n        while ((ll)klim * (klim + 1) / 2 <= n)\n            klim++;\n        for (int i = 1; i <= n; i++) {\n            std::cin >> a[i];\n            sp[i] = sp[i - 1] + a[i];\n        }\n        for (int i = 1; i <= n + 2; i++)\n            for (int k = 1; k <= klim; k++)\n                dp[k][i] = 0;\n        for (int i = n; i > 0; i--)\n            dp[1][i] = std::max(a[i], dp[1][i + 1]);\n        int ans = 1;\n        for (int k = 2; k <= klim; k++) {\n            for (int i = n - k + 1; i > 0; i--) {\n                dp[k][i] = dp[k][i + 1];\n                if (sp[i + k - 1] - sp[i - 1] < dp[k - 1][i + k])\n                    dp[k][i] = std::max(dp[k][i], sp[i + k - 1] - sp[i - 1]);\n            }\n            if (dp[k][1] == 0)\n                break;\n            ans = k;\n        }\n        std::cout << ans << \"\\n\";\n    }\n    return 0;\n}\n"
}