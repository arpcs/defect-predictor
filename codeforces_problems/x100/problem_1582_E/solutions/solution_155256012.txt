{
    "id": 155256012,
    "contestId": 1582,
    "creationTimeSeconds": 1651206335,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1582,
        "index": "E",
        "name": "Pchelyonok and Segments",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1582,
        "members": [
            {
                "handle": "jb_2402"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1635069900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 270028800,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n#pragma GCC optimize (\"O3\")\r\n#pragma GCC target (\"sse4\")\r\n\r\ntemplate<typename T>\r\nusing ordered_set =  tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n// find_by_order(k)  returns iterator to kth element starting from 0;\r\n// order_of_key(k) returns count of elements strictly smaller than k;\r\n\r\n#define int long long\r\n#define endl \"\\n\"\r\n#define dbg(x) cout << #x << \" : \" << x << endl;\r\n#define fio() ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n#define google(test_case) cout << \"Case #\" << test_case << \": \";\r\n\r\nconst int MOD = (int)1e9 + 7;\r\nconst int INF = (int)1e18 + 7;\r\nconst int MOD1 = 998244353;\r\n\r\nconst double PI = 3.1415926535;\r\n\r\nconst int N = 500;\r\n\r\nvoid solve() {\r\n\tint n; cin >> n;\r\n\tvector<int> a(n); for(int& e : a) cin >> e;\r\n\tvector<int> ps(n+2); ps[0] = a[0];\r\n\tfor(int i=1; i<n; i++) ps[i] = ps[i-1] + a[i];\r\n\r\n\tint dp[n+2][N]; memset(dp, 0, sizeof(dp));\r\n\r\n\tfor(int i=n-1; i>=0; i--) {\r\n\t\tdp[i][1] = max(dp[i+1][1], a[i]);\r\n\t\tfor(int j=2; j<N && i+j-1<n; j++) {\r\n\t\t\tint left = i, right = i + j - 1;\r\n\t\t\tint val = 0; \r\n\t\t\tif(right >= 0 && right < n) \r\n\t\t\t\tval += ps[right]; \r\n\t\t\tif(left-1 >= 0 && left-1 < n) \r\n\t\t\t\tval -= ps[left-1];\r\n\t\t\t// dbg(val);\r\n\t\t\tif(right+1 < n && val < dp[right+1][j-1]) {\r\n\t\t\t\tdp[i][j] = val;\r\n\t\t\t}\r\n\t\t\tif(i+1<=n)\r\n\t\t\t\tdp[i][j] = max(dp[i][j], dp[i+1][j]);\r\n\t\t}\r\n\t}\r\n\r\n\tint ans = 1;\r\n\tfor(int j=2; j<N; j++) ans = (dp[0][j] == 0 ? ans : j);\r\n\tcout << ans << endl;\r\n}\r\n\r\nint32_t main() {\r\n\tfio(); srand(time(0));\r\n\tcout << fixed << setprecision(9); \r\n\tint t = 1;\r\n\tcin >> t;\r\n\tfor (int i = 1; i <= t; i++) {\r\n\t\t// google(i);\r\n\t\tsolve();\r\n\t}\r\n\treturn 0;\r\n}"
}