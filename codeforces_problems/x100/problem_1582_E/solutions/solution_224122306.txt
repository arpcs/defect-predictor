{
    "id": 224122306,
    "contestId": 1582,
    "creationTimeSeconds": 1695190513,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1582,
        "index": "E",
        "name": "Pchelyonok and Segments",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1582,
        "members": [
            {
                "handle": "zhensuan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1635069900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define just return\r\n#define love 0\r\n#define iu ,void();\r\n#define int long long\r\n#define ll int\r\n#define ii inline int\r\n#define gcd __gcd\r\n#define pii pair<int,int>\r\n#define endl '\\n'\r\n#define fi first\r\n#define se second\r\n#define unit unsigned int\r\n#define r1 root<<1\r\n#define r2 root<<1|1\r\n#define rt tree[root]\r\n#define rl tree[r1]\r\n#define rr tree[r2]\r\n#define mid ((rt.l+rt.r)>>1)\r\n#define mids ((l+r)>>1)\r\n#define st int root,int l,int r\r\n#define ed int x,int y\r\n#define bit bitset\r\n#define len (rt.r-rt.l+1)\r\nusing namespace std;\r\nconst int maxn = 1e5 + 5;\r\nconst int Max = 2e5 + 5;\r\nconst int mod = 1e9 + 7;\r\nconst int inf = 0x3f3f3f3f3f3f3f;\r\n\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n    vector<int>a(n + 1);\r\n    vector dp(n + 1, vector(500, 0));\r\n    vector<int>sum(n + 1);\r\n    for (int i = 1;i <= n;i++) {\r\n        cin >> a[i];\r\n        sum[i] = sum[i - 1] + a[i];\r\n    }\r\n    dp[n][1] = a[n];\r\n    for (int i = n - 1;i >= 1;i--) {\r\n        dp[i][1] = max(dp[i + 1][1], a[i]);\r\n        for (int j = 2;j < 500;j++) {\r\n            if (i + j > n)break;\r\n            int x = sum[i + j - 1] - sum[i - 1];\r\n            dp[i][j] = dp[i + 1][j];\r\n            if (x < dp[i + j][j - 1])dp[i][j] = max(dp[i][j], x);\r\n\r\n        }\r\n    }\r\n    for (int i = 499;i >= 1;i--) {\r\n        if (dp[1][i]) {\r\n            cout << i << endl;\r\n            just love iu\r\n        }\r\n    }\r\n}\r\nsigned main() {\r\n    ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\r\n    int t = 1;\r\n    cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n}"
}