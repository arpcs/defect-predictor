{
    "id": 170764100,
    "contestId": 1582,
    "creationTimeSeconds": 1662223571,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1582,
        "index": "E",
        "name": "Pchelyonok and Segments",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1582,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1635069900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 405,
    "memoryConsumedBytes": 405606400,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int N = 1e5+5;\nconst int M = 505;\ninline int read(){\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch<'0'||ch>'9'){\n        if(ch=='-')\n            f=-1;\n        ch=getchar();\n    }\n    while(ch>='0'&&ch<='9'){\n        x=(x<<1)+(x<<3)+(ch^48);\n        ch=getchar();\n    }\n    return x*f;\n}\nint sum[N];\nint f[N][M],x;\nint Case,n;\nvoid work(){\n\tn=read();\n\tfor(int i=1;i<=n;i++){\n\t\tx=read();\n\t\tsum[i]=sum[i-1]+x;\n\t}\n\tfor(int i=n;i>=1;i--){\n\t\tfor(int j=1;i+j*(j+1)/2-1<=n;j++){\n\t\t\tif(sum[i+j-1]-sum[i-1]<f[i+j][j-1]){\n\t\t\t\tf[i][j]=max(f[i+1][j],sum[i+j-1]-sum[i-1]);\n\t\t\t}else{\n\t\t\t\tf[i][j]=f[i+1][j];\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=sqrt(n*2)+1;i>=1;i--){\n\t\tif(f[1][i]){\n\t\t\tprintf(\"%d\\n\",i);\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)sum[i]=0;\n\tfor(int i=n;i>=1;i--){\n\t\tfor(int j=1;i+j*(j+1)/2-1<=n;j++){\n\t\t\tf[i][j]=0;\n\t\t}\n\t}\n}\nsigned main(){\n\tCase=read();\n\tfor(int i=1;i<=N;i++){\n\t\tf[i][0]=0x3f3f3f3f3f3f3f3f;\n\t}\n\twhile(Case--){\n\t\twork();\n\t}\n\treturn 0;\n}\n\n \t\t \t  \t\t \t  \t\t\t\t\t\t \t\t\t  \t\t\t \t\t"
}