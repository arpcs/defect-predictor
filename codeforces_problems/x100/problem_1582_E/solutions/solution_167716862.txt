{
    "id": 167716862,
    "contestId": 1582,
    "creationTimeSeconds": 1660115992,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1582,
        "index": "E",
        "name": "Pchelyonok and Segments",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1582,
        "members": [
            {
                "handle": "wfeng1317"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1635069900
    },
    "programmingLanguage": "Java 8",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 826,
    "memoryConsumedBytes": 423628800,
    "source": "import java.io.PrintWriter;\r\nimport java.util.*;\r\n\r\n/**\r\n * 1582/e\r\n */\r\npublic class Main {\r\n    static Scanner in = new Scanner(System.in);\r\n    static PrintWriter out = new PrintWriter(System.out);\r\n    static StringBuilder res = new StringBuilder();\r\n\r\n    public static void main(String[] args) {\r\n        int t = Integer.parseInt(in.nextLine());\r\n\r\n        for(int i = 0; i < t; i++){\r\n            int n = Integer.parseInt(in.nextLine());\r\n            //\u5148\u627e\u5230\u6700\u5927\u7684k\r\n            int k = 1;\r\n            int init = 1;\r\n            while(init <= n){\r\n                k++;\r\n                init += k;\r\n            }\r\n            k--;\r\n            long[][] dp = new long[k + 1][n + 1];\r\n            String[] strArr = in.nextLine().split(\" \");\r\n            long[] preSum = new long[n];\r\n            preSum[0] = Long.parseLong(strArr[0]);\r\n            for(int j = 1; j < n; j++){\r\n                preSum[j] = preSum[j - 1] + Long.parseLong(strArr[j]);\r\n            }\r\n            for(int j = n - 1; j >= 0; j--){\r\n                dp[1][j] = Math.max(dp[1][j + 1], Long.parseLong(strArr[j]));\r\n            }\r\n            for(int x = 2; x <= k; x++){\r\n                for(int y = n - 1; y >= 0; y--){\r\n                    if((n - y - 1) * (n - y) / 2 < (x * (x + 1) / 2)){//\u4e0d\u8db3\u8fd9\u4e48\u591a\u4e2a\u6570\uff0c\u76f4\u63a5continue\r\n                        continue;\r\n                    }\r\n                    long cur = preSum[y + x - 1] - (y == 0 ? 0 : preSum[y - 1]);\r\n                    if(cur < dp[x - 1][y + x]) {\r\n                        dp[x][y] = cur;\r\n                    }\r\n                    dp[x][y] = Math.max(dp[x][y + 1], dp[x][y]);\r\n                }\r\n            }\r\n            for(int x = k; x >= 1; x--){\r\n                if(dp[x][0] > 0){\r\n                    res.append(x + \"\\n\");\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        in.close();\r\n        out.print(res);\r\n        out.flush();\r\n    }\r\n}"
}