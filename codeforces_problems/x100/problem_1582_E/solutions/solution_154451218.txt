{
    "id": 154451218,
    "contestId": 1582,
    "creationTimeSeconds": 1650591095,
    "relativeTimeSeconds": 3575,
    "problem": {
        "contestId": 1582,
        "index": "E",
        "name": "Pchelyonok and Segments",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1582,
        "members": [
            {
                "handle": "NewSaeed"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1650587520
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 436,
    "memoryConsumedBytes": 10137600,
    "source": "#include <cstdio>\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <set>\n#include <map>\n#include <cmath>\n#include <sstream>\n\nusing namespace std;\n\ntypedef pair<int,int> Pair;\n\nconst int Dir[4][2] = {{-1, 0}, {0, 1}, {1, 0}, {0, -1}};\n\ntemplate<class t>\nostream & operator << (ostream & tout,const vector<t> &s){\n  tout<<'[';\n  for (int i=0;i<s.size();i++)\n    if (i+1 == s.size())\n      tout<<s[i];\n    else\n      tout<<s[i]<<',';\n  tout<<']';\n  return(tout);\n}\n\ntemplate<class a,class b>\nostream & operator << (ostream & tout,const pair<a,b> &c){\n  return(tout<<'('<<c.first<<','<<c.second<<')');\n}\n\ntemplate<class T> struct __set__print{\n  __set__print(ostream& out) : tout(out), count(0) {}\n  void operator() (T x) { \n    if (count > 0)\n      tout<<',';\n    tout<<x;\n    ++count; \n  }\n  ostream& tout;\n  int count;\n};\n\ntemplate<class T>\nostream & operator << (ostream & tout,const set<T> &s){\n  tout<<'{';\n  for_each(s.begin(),s.end(),__set__print<T>(tout));\n  return(tout<<'}');\n}\n\ntemplate<class T,class Q> struct print_map{\n  print_map(ostream& out) : tout(out), count(0) {}\n  void operator() (const pair<T,Q> &x) { \n    if (count > 0)\n      tout<<',';\n    tout<<'('<<x.first<<\" => \"<<x.second<<')';\n    ++count; \n  }\n  ostream& tout;\n  int count;\n};\n\ntemplate<class T,class Q>\nostream & operator << (ostream & tout,map<T,Q> s){\n  tout<<'{';\n  for_each(s.begin(),s.end(),print_map<T,Q>(tout));\n  return(tout<<'}');\n}\n\ntemplate<class T>\nstring to_string(T s){\n  stringstream tin;\n  tin<<s;\n  string res;\n  getline(tin,res);\n  return(res);\n}\n\ntemplate<class T>\nvector<T> to_vector(T *s,int n){\n  vector<T> result;\n  for (int i=0;i<n;i++)\n    result.push_back(s[i]);\n  return(result);\n}\n\ntemplate<unsigned int p>\nclass z{\npublic:\n  long long key;\n  z(long long s=0){\n    key=(s%p+p)%p;\n  }\n  z operator + (z s)const{ return(z(key+s.key));\n  }\n  z operator - (z s)const{ return(z(key-s.key));\n  }\n  z operator * (z s)const{ return(z(key*s.key));\n  }\n  z pow(long long s=0)const{\n    if (!s) return(z(1));\n    z ans=pow(s/2);\n    ans=ans*ans;\n    if (s%2) ans=ans*(*this);\n    return(ans);\n  }\n  z operator / (z s)const{ return(operator * (s.pow(p-2)));\n  }\n  void operator += (z s){ *this=*this+s;\n  }\n  void operator -= (z s){ *this=*this-s;\n  }\n  void operator /= (z s){ *this=*this/s;\n  }\n  void operator *= (z s){ *this=*this*s;\n  }\n  inline friend ostream & operator << (ostream & tout,z s){\n    return(tout<<s.value());\n  }\n  int value(){ return(key);\n  }\n  inline friend z operator + (long long s,z t){ return(t+s);\n  }\n  inline friend z operator - (long long s,z t){ return(z(0)-(t-s));\n  }\n  inline friend z operator * (long long s,z t){ return(t*s);\n  }\n};\n\nclass BigInteger{\npublic:\n  vector<int> num;\n  bool neg;\n\n  inline void relax(){\n    for (int i=0;i+1<(int)num.size();i++){\n      num[i+1]+=num[i]/10;\n      num[i]%=10;\n    }\n\n    if (num.size())\n      while (num.back() >= 10){\n\tnum.push_back(num.back()/10);\n\tnum[num.size()-2]%=10;\n      }\n\n    while (num.size() > 1 && num.back() == 0) num.pop_back();\n    if (num.size() == 1 && num[0] == 0) neg=false;\n  }\n\n  bool operator < (BigInteger s)const{\n    if (neg != s.neg) return(neg);\n    if (num.size() != s.num.size())\n      return((num.size() < s.num.size())^neg);\n    for (int i=num.size()-1;i>=0;i--)\n      if (num[i] != s.num[i])\n\treturn((num[i] < s.num[i])^neg);\n    return(false);\n  }\n\n  BigInteger negative()const{\n    BigInteger ans=*this;\n    ans.neg=!ans.neg;\n    ans.relax();\n    return(ans);\n  }\n\n  BigInteger(int s=0){\n    num.clear();\n    neg=s < 0;\n    num.push_back(abs(s));\n    relax();\n  }\n\n  BigInteger operator + (BigInteger s)const{\n    if (s.neg) return(operator - (s.negative()));\n    if (neg) return(s - negative());\n    BigInteger ans=*this;\n    if (ans.num.size() < s.num.size()) ans.num.resize(s.num.size());\n    for (int i=0;i<(int)s.num.size();i++) \n      ans.num[i]+=s.num[i];\n    ans.relax();\n    return(ans);\n  }\n\n  BigInteger operator - (BigInteger s)const{\n    if (s.neg) return(operator + (s.negative()));\n    if (neg) return((s+negative()).negative());\n    if (operator < (s))\n      return((s-(*this)).negative());\n    BigInteger ans=*this;\n    for (int i=0;i<(int)ans.num.size();i++){\n      if (i < s.num.size())\n\tans.num[i] -= s.num[i];\n      if (ans.num[i] < 0){\n\tans.num[i+1]--;\n\tans.num[i]+=10;\n      }\n    }\n    ans.relax();\n    return(ans);\n  }\n\n  BigInteger operator * (BigInteger s)const{\n    if (neg) return((negative()*s).negative());\n    if (s.neg) return((operator * (s.negative())).negative());\n    BigInteger ans;\n    ans.num.resize(s.num.size()+num.size()-1);\n    for (int i=0;i<(int)num.size();i++)\n      for (int j=0;j<(int)s.num.size();j++)\n\tans.num[i+j]+=num[i]*s.num[j];\n    ans.relax();\n    return(ans);\n  }\n\n  BigInteger operator / (BigInteger s)const{\n    if (s.num.size() == 1 && s.num[0] == 0) \n      throw (\"BigInteger : division by zero!!\");\n\n    if (neg) return((negative()/s).negative());\n    if (s.neg) return((operator / (s.negative())).negative());\n    BigInteger ans;\n    ans.num.resize(max((int)num.size()-(int)s.num.size()+2,1));\n    BigInteger sum;\n    for (int i=(int)ans.num.size()-1;i>=0;i--){\n\n      BigInteger x;\n      x.num.resize(s.num.size()+i);\n      for (int j=0;j<(int)s.num.size();j++)\n\tx.num[j+i]=s.num[j];\n      x.relax();\n\n      while (true){\n\tsum=sum+x;\n\tif (operator < (sum)){\n\t  sum=sum-x;\n\t  break;\n\t}\n\tans.num[i]++;\n      }\n    }\n    ans.relax();\n    return(ans);\n  }\n\n  BigInteger operator % (BigInteger s)const{\n    if (neg) return((negative()%s).negative());\n    if (s.neg) return(operator % (s.negative()));\n    return(operator - (s \n* (operator / (s))));\n  }\n};\n\nlong long intValue(BigInteger s){\n  long long ans=0;\n  for (int i=(int)s.num.size()-1;i>=0;i--) ans=ans*10+s.num[i];\n  if (s.neg) return(ans*-1);\n  else return(ans);\n}\n\nostream & operator << (ostream & tout,BigInteger s){\n  if (s.neg) tout<<'-';\n  for (int i=(int)s.num.size()-1;i>=0;i--)\n    tout<<s.num[i];\n  return(tout);\n}\n\nBigInteger gcd(BigInteger a,BigInteger b){\n  if (a.neg) return(gcd(a.negative(),b));\n  if (b.neg) return(gcd(a,b.negative()));\n  if (a < b) swap(a,b);\n  if (b.num.size() == 1 && b.num[0] == 0) return(a);\n  return(gcd(b,a%b));\n}\n\nclass Rational{\npublic:\n  BigInteger a,b;\n  Rational(BigInteger a,BigInteger b){\n    BigInteger temp=gcd(a,b);\n    a=a/temp;\n    b=b/temp;\n    if (a.neg){\n      a=a.negative();\n      b=b.negative();\n    }\n    this->a = a;\n    this->b = b;\n  }\n  Rational(long long s){\n    a=s;\n    b=1;\n  }\n  Rational operator + (Rational s)const{\n    return(Rational(a*s.b+b*s.a,b*s.b));\n  }\n  Rational operator - (Rational s)const{\n    return(Rational(a*s.b-b*s.a,b*s.b));\n  }\n  Rational operator * (Rational s)const{\n    return(Rational(a*s.a,b*s.b));\n  }\n  Rational operator / (Rational s)const{\n    return(Rational(a*s.b,b*s.a));\n  }\n};\n\nostream & operator << (ostream & tout,Rational s){\n  return(tout<<s.a<<'/'<<s.b);\n}\n\n// ******************************** my code starts from here ***************************************\n\n\n\n\n\n\n\n\nconst long long INF = 1ll<<60;\n\n\n\nlong long best[1000][1000];\n  \nint main(){\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n\n  int ttime;\n  cin>>ttime;\n  for (int ccount=0;ccount<ttime;ccount++){\n    int n;\n    cin>>n;\n    vector<int> all;\n    for (int i=0;i<n;i++){\n      int temp;\n      cin>>temp;\n      all.push_back(temp);\n    }\n    reverse(all.begin(),all.end());\n    vector<long long> sum;\n    sum.push_back(all[0]);\n    for (int i=1;i<all.size();i++)\n      sum.push_back(sum.back() + all[i]);\n    int mx = 500;\n    for (int i=0;i<mx;i++)\n      for (int j=0;j<1000;j++)\n\tbest[i][j] = 0;\n    for (int i=0;i<1000;i++)\n      best[0][i] = INF;\n\n    for (int i=0;i<all.size();i++){\n      for (int j=0;j<mx;j++)\n\tbest[j][i%1000] = max(best[j][i%1000], best[j][(i-1+1000)%1000]);\n      for (int j=1;j<mx && j-1<=i;j++){\n\tlong long my_sum;\n\tif (j-1 == i)\n\t  my_sum = sum[i];\n\telse\n\t  my_sum = sum[i]-sum[i-j];\n\t//cout<<i<<' '<<j<<' '<<my_sum<<endl;\n\tif (my_sum < best[j-1][(i-j+1000)%1000])\n\t  best[j][i%1000] = max(best[j][i%1000], my_sum);\n      }\n    }\n    int b = 0;\n    while (best[b+1][(all.size()-1)%1000])\n      b++;\n    cout<<b<<endl;\n    \n  }\n}\n\n"
}