{
    "id": 165262835,
    "contestId": 1582,
    "creationTimeSeconds": 1658464047,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1582,
        "index": "E",
        "name": "Pchelyonok and Segments",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1582,
        "members": [
            {
                "handle": "AuwuCatmy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1635069900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 468,
    "memoryConsumedBytes": 420761600,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\nusing ll = long long;\r\n\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n    vector<int> a(n);\r\n    for (int i = 0; i < n; ++i) {\r\n        cin >> a[i];\r\n    }\r\n    reverse(a.begin(), a.end());\r\n\r\n    vector<ll> pre(n + 1);\r\n    for (int i = 1; i <= n; ++i) {\r\n        pre[i] = pre[i - 1] + a[i - 1];\r\n    }\r\n\r\n    auto get = [&](int l, int r) {\r\n        return pre[r] - pre[l];  \r\n    };\r\n\r\n\r\n    const int K = 500;\r\n    vector dp(n, vector(K, -1LL));\r\n    for (int i = 0; i < n; ++i) {\r\n        for (int k = 1; (1 + k) * k / 2 <= i + 1; ++k) {\r\n            ll sum = get(i - k + 1, i + 1);\r\n            if (k == 1 || sum < dp[i - k][k - 1]) {\r\n                dp[i][k] = max(dp[i][k], sum);\r\n            }\r\n            if (i > 0) {\r\n                dp[i][k] = max(dp[i][k], dp[i - 1][k]);\r\n            }\r\n        }\r\n    }\r\n\r\n    int ans = 0;\r\n    for (int i = 0; i < n; ++i) {\r\n        for (int k = 0; k < K; ++k) {\r\n            if (dp[i][k] != -1) {\r\n                ans = max(ans, k);\r\n            }\r\n        }\r\n    }\r\n\r\n    cout << ans << \"\\n\";\r\n}\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    \r\n    int t;\r\n    cin >> t;\r\n\r\n    while (t--) {\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n}"
}