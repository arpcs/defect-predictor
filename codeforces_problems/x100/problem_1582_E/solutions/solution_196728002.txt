{
    "id": 196728002,
    "contestId": 1582,
    "creationTimeSeconds": 1678411815,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1582,
        "index": "E",
        "name": "Pchelyonok and Segments",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1582,
        "members": [
            {
                "handle": "xuhe86950"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1635069900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 966,
    "memoryConsumedBytes": 518656000,
    "source": "#include <bits/stdc++.h>\r\n#define all(a) a.begin(),a.end()\r\n#define rall(a) a.rbegin(),a.rend()\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double ld;\r\nusing namespace std;\r\n\r\n//#pragma GCC optimize(\"O3,unroll-loops\")\r\n//#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\r\n\r\n#include <ext/pb_ds/assoc_container.hpp>\r\nusing namespace __gnu_pbds;\r\ntemplate<typename T> using oset = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>;\r\n\r\n//long long may cause TLE!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n#define int ll\r\nconst int inf = 1e18;\r\n\r\nint32_t main()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int qwerty;\r\n    cin >> qwerty;\r\n    while (qwerty--)\r\n    {\r\n        int n;\r\n        cin >> n;\r\n        vector<int> p(n+1);\r\n        for (int i=1;i<=n;i++) cin >> p[i], p[i]+=p[i-1];\r\n        int k = 2 * sqrt(n) + 2;\r\n        vector<vector<int>> dp(n+3,vector<int>(k+2));\r\n        dp[n+1][0] = inf;\r\n        for (int i=n;i>=1;i--) {\r\n            for (int j=0;j<k && i+j<=n;j++) {\r\n                if (p[i+j]-p[i-1] < dp[i+j+1][j]) dp[i][j+1] = max(dp[i][j+1],p[i+j]-p[i-1]);\r\n                dp[i][j] = max(dp[i][j],dp[i+1][j]);\r\n            }\r\n        }\r\n        int ans = 0;\r\n        for (int i=1;i<=n;i++) {\r\n            for (int j=1;j<=k;j++) if (dp[i][j]!=0) ans = max(ans,j);\r\n        }\r\n        cout << ans << \"\\n\";\r\n    }\r\n}\r\n"
}