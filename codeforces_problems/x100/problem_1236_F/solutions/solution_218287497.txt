{
    "id": 218287497,
    "contestId": 1236,
    "creationTimeSeconds": 1691752719,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1236,
        "index": "F",
        "name": "Alice and the Cactus",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "dfs and similar",
            "graphs",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1236,
        "members": [
            {
                "handle": "BittersweetHerb"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1571319300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 122,
    "timeConsumedMillis": 904,
    "memoryConsumedBytes": 91443200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define MP make_pair\r\nmt19937 rnd(time(0));\r\nconst int MAXN=1e6+5;\r\nconst int MOD=1e9+7;\r\nll ksm(ll a,int b){ll res=1;while(b){if(b&1)res=res*a%MOD;a=a*a%MOD,b>>=1;}return res;} \r\nll n,m;\r\nvector<int> edg[MAXN],scc[MAXN];\r\nll inv[MAXN],p[MAXN],ipw2[MAXN],deg[MAXN],sdeg[MAXN],cnt;\r\nint low[MAXN],dfn[MAXN],st[MAXN],top=0,tot=0;\r\nvoid tarjan(int u,int fa){\r\n\tlow[u]=dfn[u]=++tot;\r\n\tst[++top]=u;\r\n\tfor(int v:edg[u]) if(v!=fa){\r\n\t\tif(!dfn[v]){\r\n\t\t\ttarjan(v,u);\r\n\t\t\tlow[u]=min(low[u],low[v]);\r\n\t\t\tif(low[v]>=dfn[u]){\r\n\t\t\t\tvector<int> cyc;\r\n\t\t\t\tcyc.push_back(u);\r\n\t\t\t\twhile(st[top+1]!=v){\r\n\t\t\t\t\tcyc.push_back(st[top--]);\r\n\t\t\t\t}\r\n\t\t\t\tif(cyc.size()>2){\r\n\t\t\t\t\t++cnt;\r\n\t\t\t\t\tfor(int i:cyc) scc[i].push_back(cnt),sdeg[cnt]+=deg[i];\r\n\t\t\t\t\tp[cnt]=cyc.size();sdeg[cnt]-=2*cyc.size();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else low[u]=min(low[u],dfn[v]);\r\n\t}\r\n\treturn;\r\n}\r\nll exp_v(){return n*inv[2]%MOD;}\r\nll exp_c(){\r\n\tll ans=0;\r\n\tfor(int i=1;i<=cnt;i++)\r\n\t\tans+=ipw2[p[i]];\r\n\treturn ans%MOD;\r\n} \r\nll exp_e(){return m*inv[4]%MOD;}\r\nll exp_vv(){return n*(n+1)%MOD*inv[4]%MOD;}\r\nll exp_cc(){\r\n\tll ans=0;\r\n\tfor(int i=1;i<=cnt;i++) ans+=ipw2[p[i]];\r\n\tans%=MOD;ans=ans*ans%MOD;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tll A=0,B=0;\r\n\t\tfor(int j:scc[i]) A+=ipw2[p[j]],B+=ipw2[p[j]]*ipw2[p[j]]%MOD;\r\n\t\tA%=MOD,B%=MOD; \r\n\t\tans+=(A*A-B)%MOD;\r\n\t}\r\n\tfor(int i=1;i<=cnt;i++)\r\n\t\tans+=ipw2[p[i]]-ipw2[2*p[i]];\r\n\treturn (ans%MOD+MOD)%MOD;\r\n}\r\nll exp_ee(){\r\n\tll ans=m*(m-1)%MOD*inv[16]%MOD+m*inv[4]%MOD;\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tans+=(deg[i]-1)*deg[i]%MOD*inv[16]%MOD;\r\n\treturn ans%MOD;\r\n}\r\nll exp_vc(){\r\n\tll ans=0;\r\n\tfor(int i=1;i<=cnt;i++)\r\n\t\tans+=ipw2[p[i]]*(n-p[i])%MOD*inv[2]%MOD+ipw2[p[i]]*p[i]%MOD;\r\n\treturn ans%MOD;\r\n}\r\nll exp_ce(){\r\n\tll ans=0;\r\n\tfor(int i=1;i<=cnt;i++)\r\n\t\tans+=ipw2[p[i]]*p[i]%MOD+ipw2[p[i]+1]*sdeg[i]%MOD+ipw2[p[i]+2]*(m-p[i]-sdeg[i])%MOD;\r\n\treturn ans%MOD;\r\n}\r\nll exp_ve(){\r\n\treturn m*(inv[2]*(n-2)%MOD+2)%MOD*inv[4]%MOD;\r\n}\r\nint main(){\r\n\tios::sync_with_stdio(false);\r\n\tcin>>n>>m;\r\n\tfor(int i=1;i<MAXN;i++) inv[i]=ksm(i,MOD-2);\r\n\tipw2[0]=1;\r\n\tfor(int i=1;i<MAXN;i++) ipw2[i]=ipw2[i-1]*inv[2]%MOD;\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tint u,v;cin>>u>>v;\r\n\t\tedg[u].push_back(v);\r\n\t\tedg[v].push_back(u);\r\n\t}\r\n\tfor(int i=1;i<=n;i++) deg[i]=edg[i].size();\r\n\ttarjan(1,0);\r\n\tll x=(exp_v()+exp_c()-exp_e())%MOD,xx=(exp_vv()+exp_cc()+exp_ee()+2*exp_vc()-2*exp_ce()-2*exp_ve())%MOD;\r\n\tcout<<((xx-x*x)%MOD+MOD)%MOD;\r\n\treturn 0;\r\n}//13590933823176959375"
}