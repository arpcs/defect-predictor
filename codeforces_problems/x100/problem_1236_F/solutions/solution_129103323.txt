{
    "id": 129103323,
    "contestId": 1236,
    "creationTimeSeconds": 1631905015,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1236,
        "index": "F",
        "name": "Alice and the Cactus",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "dfs and similar",
            "graphs",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1236,
        "members": [
            {
                "handle": "Sparkle_Twilight"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1571319300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 122,
    "timeConsumedMillis": 732,
    "memoryConsumedBytes": 46796800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int M=1000000007;\r\nint n,m,i,head[500005],Next[1000005],adj[1000005],sta[500005],top,dfn[500005],s[500005],p,u[500005],v[500005],d[500005],num[500005],vis[500005],k,j;\r\nlong long e,p2[500015],ans,sum;\r\nvector<int> ex[500005];\r\nvoid Push(int u,int v)\r\n{\r\n Next[++k]=head[u];\r\n head[u]=k;\r\n adj[k]=v;\r\n}\r\nvoid dfs(int i,int fa)\r\n{\r\n int j,m;\r\n dfn[i]=++k;\r\n sta[++top]=i;\r\n for(j=head[i];j!=0;j=Next[j])\r\n  if(adj[j]!=fa)\r\n  {\r\n   if(dfn[adj[j]]==0)\r\n    dfs(adj[j],i);\r\n   else\r\n    if(dfn[adj[j]]<dfn[i])\r\n    {\r\n     p++;\r\n     for(m=top;;m--)\r\n     {\r\n      num[p]+=d[sta[m]];\r\n      vis[sta[m]]++;\r\n      ex[sta[m]].push_back(p);\r\n      s[p]++;\r\n      if(sta[m]==adj[j])\r\n       break;\r\n     }\r\n    }\r\n  }\r\n top--;\r\n}\r\nlong long qpow(long long a,long long b)\r\n{\r\n long long s=a,ans=1;\r\n while(b)\r\n {\r\n  if(b&1)\r\n   ans=ans*s%M;\r\n  s=s*s%M;\r\n  b>>=1;\r\n }\r\n return ans;\r\n}\r\nint main()\r\n{\r\n scanf(\"%d %d\",&n,&m);\r\n for(i=1;i<=m;i++)\r\n {\r\n  scanf(\"%d %d\",&u[i],&v[i]);\r\n  Push(u[i],v[i]);\r\n  Push(v[i],u[i]);\r\n  d[u[i]]++;\r\n  d[v[i]]++;\r\n }\r\n k=0;\r\n dfs(1,0);\r\n p2[0]=1;\r\n for(i=1;i<=n+5;i++)\r\n  p2[i]=p2[i-1]*2%M;\r\n e=(n*p2[n-1]-m*p2[n-2])%M;\r\n for(i=1;i<=p;i++)\r\n  e=(e+p2[n-s[i]])%M;\r\n e=e*qpow(p2[n],M-2)%M;\r\n ans=(ans-e*e)%M;\r\n sum=(-m*qpow(4,M-2)+n*qpow(2,M-2))%M;\r\n for(i=1;i<=p;i++)\r\n {\r\n  sum=(sum+qpow(p2[s[i]],M-2))%M;\r\n  ans=(ans-qpow(p2[s[i]],M-2)*qpow(p2[s[i]],M-2)+qpow(p2[s[i]],M-2))%M;\r\n }\r\n ans=(ans+sum*sum)%M;\r\n for(i=1;i<=p;i++)\r\n  ans=(ans-qpow(p2[s[i]+2],M-2)*2*(num[i]-s[i])-qpow(p2[s[i]+2],M-2)*4*s[i]+qpow(p2[s[i]+1],M-2)*2*s[i])%M;\r\n long long tot=qpow(16,M-2);\r\n ans+=tot*m*2;\r\n for(i=1;i<=m;i++)\r\n  ans=(ans+tot*(d[u[i]]+d[v[i]]-1))%M;\r\n ans=(ans+qpow(4,M-2)*n)%M;\r\n ans=(ans-qpow(8,M-2)*m*2*2)%M;\r\n for(i=1;i<=n;i++)\r\n {\r\n  sum=0;\r\n  long long ru=0;\r\n  for(j=0;j<ex[i].size();j++)\r\n  {\r\n      long long tmp=qpow(p2[s[ex[i][j]]],M-2);\r\n   sum=(sum+tmp)%M;\r\n   ru=(ru+tmp*tmp)%M;\r\n  }\r\n  ans=(ans+sum*sum-ru)%M;\r\n }\r\n cout<<(ans%M+M)%M;\r\n}\r\n "
}