{
    "id": 158149375,
    "contestId": 1236,
    "creationTimeSeconds": 1653313496,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1236,
        "index": "F",
        "name": "Alice and the Cactus",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "dfs and similar",
            "graphs",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1236,
        "members": [
            {
                "handle": "MicroMaker"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1571319300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 2495,
    "memoryConsumedBytes": 244019200,
    "source": "// Fresh Peach Heart Shower\r\n#include <bits/stdc++.h>\r\n#define reg\r\n#define ALL(x) (x).begin(),(x).end()\r\n#define mem(x,y) memset(x,y,sizeof x)\r\n#define sz(x) (int)(x).size()\r\n#define ln putchar('\\n')\r\n#define lsp putchar(32)\r\n#define pb push_back\r\n#define MP std::make_pair\r\n#define MT std::make_tuple\r\n#ifdef _LOCAL_\r\n#define dbg(x) std::cerr<<__func__<<\"\\tLine:\"<<__LINE__<<' '<<#x<<\": \"<<x<<\"\\n\"\r\n#define dprintf(x...) std::fprintf(stderr,x)\r\n#else\r\n#define dbg(x) 42\r\n#define dprintf(x...) 42\r\n#endif\r\n#define rep(i,a,b) for(int i=(a);i<=(b);++i)\r\n#define per(i,b,a) for(int i=(b);i>=(a);--i)\r\ntypedef std::pair<int,int> pii;\r\ntypedef std::vector<int> poly;\r\ntemplate <class t> inline void read(t &s){s=0;\r\nsigned f=1;char c=getchar();while(!isdigit(c)){if(c=='-')f=-1;c=getchar();}\r\nwhile(isdigit(c))s=(s<<3)+(s<<1)+(c^48),c=getchar();;s*=f;}\r\ntemplate<class t,class ...A> inline void read(t &x,A &...a){read(x);read(a...);}\r\ntemplate <class t> inline void write(t x){if(x<0)putchar('-'),x=-x;\r\nstatic int buf[50],top=0;while(x)buf[++top]=x%10,x/=10;if(!top)buf[++top]=0;\r\nwhile(top)putchar(buf[top--]^'0');}\r\ninline void setIn(std::string s){freopen(s.c_str(),\"r\",stdin);return;}\r\ninline void setOut(std::string s){freopen(s.c_str(),\"w\",stdout);return;}\r\ninline void setIO(std::string s=\"\"){setIn(s+\".in\");setOut(s+\".out\");return;}\r\ntemplate <class t>inline bool ckmin(t&x,t y){if(x>y){x=y;return 1;}return 0;}\r\ntemplate <class t>inline bool ckmax(t&x,t y){if(x<y){x=y;return 1;}return 0;}\r\ninline int lowbit(int x){return x&(-x);}\r\ntypedef long long ll;\r\nconst int MaxN=1e6+50;\r\nconst ll p=1e9+7;\r\nconst ll inv2=(p+1)/2;\r\ninline ll fpow(ll a,ll b)\r\n{\r\n\tll ret=1;\r\n\tfor(;b;b>>=1,a=a*a%p)if(b&1)ret=ret*a%p;\r\n\treturn ret;\r\n}\r\nstruct edge{int u,v;}e[MaxN];\r\npoly E[MaxN],bcc[MaxN],ring[MaxN];\r\nint dfn[MaxN],low[MaxN],vis[MaxN],st[MaxN],tp,dfncnt,bn,n,m;\r\nstd::map<pii ,int > rev;\r\ninline void tarjan(int u,int fa)\r\n{\r\n\tdfn[u]=low[u]=++dfncnt,st[tp++]=u,vis[u]=1;\r\n\tfor(auto v:E[u])if(v!=fa)\r\n\t{\r\n\t\tif(!dfn[v])\r\n\t\t{\r\n\t\t\ttarjan(v,u),ckmin(low[u],low[v]);\r\n\t\t\tif(low[v]>=dfn[u])\r\n\t\t\t{\r\n\t\t\t\t++bn;\r\n\t\t\t\tdo bcc[bn].pb(st[--tp]); while(st[tp]!=v);\r\n\t\t\t\tbcc[bn].pb(u);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(vis[v])ckmin(low[u],dfn[v]);\r\n\t}\r\n}\r\npoly wh[MaxN];\r\nll pw[MaxN],ipw[MaxN];\r\nint exE[MaxN],rn;\r\ninline ll fix(ll x){return (x%p+p)%p;}\r\ninline ll sqr(ll x){return x*x%p;}\r\ninline ll E1()\r\n{\r\n\tll ans=0;\r\n\t(ans+=n*inv2)%=p;\r\n\t(ans+=fix(-m*inv2%p*inv2))%=p;\r\n\trep(i,1,rn)(ans+=ipw[ring[i].size()])%=p;\r\n\treturn ans;\r\n}\r\ninline ll E2()\r\n{\r\n\tll ans=0;\r\n\t{ // +E(a^2)\r\n\t\t(ans+=1LL*n*(n+1)%p*inv2%p*inv2)%=p;\r\n\t}\r\n\t{ // +E(b^2)\r\n\t\t(ans+=1LL*m*(m+3)%p*inv2%p*inv2%p*inv2%p*inv2)%=p;\r\n\t\tll ret=0;\r\n\t\tpoly deg(n+1);\r\n\t\trep(i,1,m)++deg[e[i].u],++deg[e[i].v];\r\n\t\trep(i,1,n)(ret+=1LL*deg[i]*(deg[i]-1))%=p;\r\n\t\t(ans+=ret*inv2%p*inv2%p*inv2%p*inv2)%=p;\r\n\t}\r\n\t{ // +E(c^2)\r\n\t\tll al=0,ret=0;\r\n\t\trep(i,1,rn)(al+=ipw[ring[i].size()])%=p;\r\n\t\trep(i,1,rn)(ret+=fix(al-ipw[ring[i].size()]+1)*ipw[ring[i].size()])%=p;\r\n\t\trep(i,1,n)if(wh[i].size())\r\n\t\t{\r\n\t\t\tll s=0;\r\n\t\t\tfor(auto j:wh[i])(s+=ipw[ring[j].size()])%=p;\r\n\t\t\tfor(auto j:wh[i])(ret+=fix(s-ipw[ring[j].size()])*ipw[ring[j].size()])%=p;\r\n\t\t}\r\n\t\t(ans+=ret)%=p;\r\n\t}\r\n\t{ // -2*E(ab)\r\n\t\tll ret=1LL*m*(n+2)%p*inv2%p*inv2%p*inv2%p;\r\n\t\t(ans+=fix(-2*ret))%=p;\r\n\t}\r\n\t{ // +2*E(ac)\r\n\t\tll ret=0;\r\n\t\trep(i,1,rn)(ret+=1LL*(n+ring[i].size())*ipw[ring[i].size()+1])%=p;\r\n\t\t(ans+=2*ret)%=p;\r\n\t}\r\n\t{ // -2*E(bc)\r\n\t\tll ret=0;\r\n\t\trep(i,1,rn)\r\n\t\t\t(ret+=(m-exE[i]-ring[i].size())*ipw[ring[i].size()+2])%=p,\r\n\t\t\t(ret+=exE[i]*ipw[ring[i].size()+1])%=p,\r\n\t\t\t(ret+=ring[i].size()*ipw[ring[i].size()])%=p;\r\n\t\t(ans+=fix(-2*ret))%=p;\r\n\t}\r\n\treturn ans;\r\n}\r\nsigned main(void)\r\n{\r\n\tpw[0]=1;\r\n\trep(i,1,MaxN-1)pw[i]=pw[i-1]*2%p;\r\n\tipw[0]=1;\r\n\trep(i,1,MaxN-1)ipw[i]=ipw[i-1]*inv2%p;\r\n\tread(n,m);\r\n\tint u,v;\r\n\trep(i,1,m)read(u,v),E[u].pb(v),E[v].pb(u),e[i]=(edge){u,v},rev[MP(u,v)]=rev[MP(v,u)]=i;\r\n\ttarjan(1,0);\r\n\t{ // make rings \r\n\t\tpoly used(m+1);\r\n\t\trep(i,1,bn)\r\n\t\t{\r\n\t\t\tif(bcc[i].size()==1u)continue;\r\n\t\t\tring[++rn]=bcc[i];\r\n\t\t\trep(i,0,(int)ring[rn].size()-2)used[rev[MP(ring[rn][i],ring[rn][i+1])]]=1;\r\n\t\t\tused[rev[MP(ring[rn][0],ring[rn].back())]]=1;\r\n\t\t\tfor(auto u:ring[rn])for(auto v:E[u])if(!used[rev[MP(u,v)]])++exE[rn];\r\n\t\t\trep(i,0,(int)ring[rn].size()-2)used[rev[MP(ring[rn][i],ring[rn][i+1])]]=0;\r\n\t\t\tused[rev[MP(ring[rn][0],ring[rn].back())]]=0;\r\n\t\t\tfor(auto u:ring[rn])wh[u].pb(rn);\r\n\t\t}\r\n\t}\r\n\twrite(fix(E2()-sqr(E1()))),ln;\r\n\treturn 0;\r\n}\r\n\r\n/*\r\n * Check List:\r\n * 1. Input / Output File (OI)\r\n * 2. long long \r\n * 3. Special Test such as n=1\r\n * 4. Array Size\r\n * 5. Memory Limit (OI) int is 4 and longlong is 8\r\n * 6. Mod (a*b%p*c%p not a*b*c%p  ,  (a-b+p)%p not a-b )\r\n * 7. Name ( int k; for(int k...))\r\n * 8. more tests , (T=2 .. more)\r\n * 9. blank \\n after a case\r\n*/\r\n\r\n\r\n\r\n\r\n"
}