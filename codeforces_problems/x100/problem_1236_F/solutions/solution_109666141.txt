{
    "id": 109666141,
    "contestId": 1236,
    "creationTimeSeconds": 1615430063,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1236,
        "index": "F",
        "name": "Alice and the Cactus",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "dfs and similar",
            "graphs",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1236,
        "members": [
            {
                "handle": "huzhaoyang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1571319300
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 122,
    "timeConsumedMillis": 296,
    "memoryConsumedBytes": 23654400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define N 500005\r\n#define mod 1000000007\r\nstruct Edge{\r\n\tint nex,to;\r\n}edge[N<<1];\r\nvector<pair<int,int> >v;\r\nint E,n,m,x,y,inv[N],head[N],r[N],dfn[N],f[N],dep[N],sum[N];\r\nint En,Em,Ec,En2,Em2,Ec2,Enm,Enc,Emc,EX,EX2,ans;\r\nvoid add(int x,int y){\r\n\tedge[E].nex=head[x];\r\n\tedge[E].to=y;\r\n\thead[x]=E++;\r\n}\r\nvoid dfs(int k,int fa,int s){\r\n\tdfn[k]=++dfn[0];\r\n\tf[k]=fa;\r\n\tdep[k]=s;\r\n\tfor(int i=head[k];i!=-1;i=edge[i].nex)\r\n\t\tif (edge[i].to!=fa){\r\n\t\t\tif (!dfn[edge[i].to])dfs(edge[i].to,k,s+1);\r\n\t\t\telse{\r\n\t\t\t\tif (dep[edge[i].to]>=s)continue;\r\n\t\t\t\tint l=s-dep[edge[i].to]+1;\r\n\t\t\t\tEc=(Ec+inv[l])%mod;\r\n\t\t\t\tEnc=(Enc+1LL*(n-l)*inv[l+1]+1LL*l*inv[l])%mod;\r\n\t\t\t\tint s_same=l;\r\n\t\t\t\tfor(int j=k;;j=f[j]){\r\n\t\t\t\t\ts_same=s_same+r[j]-2;\r\n\t\t\t\t\tsum[j]=(sum[j]+inv[l])%mod;\r\n\t\t\t\t\tif (j==edge[i].to)break;\r\n\t\t\t\t}\r\n\t\t\t\tEmc=(Emc+1LL*(m-s_same)*inv[l+2]+1LL*(s_same-l)*inv[l+1]+1LL*l*inv[l])%mod;\r\n\t\t\t\tsum[0]=(sum[0]+inv[l])%mod;\r\n\t\t\t\tv.push_back(make_pair(k,edge[i].to));\r\n\t\t\t}\r\n\t\t}\r\n}\r\nint main(){\r\n\tinv[0]=1;\r\n\tfor(int i=1;i<N;i++)inv[i]=1LL*(mod+1)/2*inv[i-1]%mod;\r\n\tscanf(\"%d%d\",&n,&m);\r\n\tmemset(head,-1,sizeof(head));\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tscanf(\"%d%d\",&x,&y);\r\n\t\tadd(x,y);\r\n\t\tadd(y,x);\r\n\t\tr[x]++,r[y]++;\r\n\t}\r\n\tEn=1LL*n*inv[1]%mod;\r\n\tEm=1LL*m*inv[2]%mod;\r\n\tEn2=(1LL*n*(n-1)%mod*inv[2]+1LL*n*inv[1])%mod;\r\n\tEnm=(1LL*m*(n-2)%mod*inv[3]+2LL*m*inv[2])%mod;\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tfor(int j=head[i];j!=-1;j=edge[j].nex){\r\n\t\t\tx=i,y=edge[j].to;\r\n\t\t\tif (x<y)Em2=(Em2+1LL*(m-r[x]-r[y]+1)*inv[4]+1LL*(r[x]+r[y]-2)*inv[3]%mod+inv[2])%mod;\r\n\t\t}\r\n\tdfs(1,0,0);\r\n\tfor(int i=0;i<v.size();i++){\r\n\t\tx=v[i].first,y=v[i].second;\r\n\t\tint l=dep[x]-dep[y]+1,s_same=inv[l];\r\n\t\tfor(int j=x;;j=f[j]){\r\n\t\t\ts_same=((s_same+sum[j]-inv[l])%mod+mod)%mod;\r\n\t\t\tif (j==y)break;\r\n\t\t}\r\n\t\tEc2=(Ec2+1LL*(sum[0]+mod-s_same)*inv[l]+1LL*(s_same+mod-inv[l])*inv[l-1]+inv[l])%mod;\r\n\t}\r\n\tEX=((0LL+En-Em+Ec)%mod+mod)%mod;\r\n\tEX2=((0LL+En2+Em2+Ec2-2*Enm+2*Enc-2*Emc)%mod+mod)%mod;\r\n\tans=(EX2-1LL*EX*EX%mod+mod)%mod;\r\n\tprintf(\"%d\",ans);\r\n}"
}