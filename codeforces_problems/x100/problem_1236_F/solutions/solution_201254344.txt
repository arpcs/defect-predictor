{
    "id": 201254344,
    "contestId": 1236,
    "creationTimeSeconds": 1680956588,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1236,
        "index": "F",
        "name": "Alice and the Cactus",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "dfs and similar",
            "graphs",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1236,
        "members": [
            {
                "handle": "chappy1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1571319300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 122,
    "timeConsumedMillis": 405,
    "memoryConsumedBytes": 58982400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 500005,P = 1000000007;\r\nusing ll = long long;\r\nint n,m,deg[N],fa[N],dep[N],idx,sz[N];\r\nvector<int> v[N],cyc[N];bool vis[N];ll inv2[N];\r\nvoid dfs(int pos)\r\n{\r\n\tvis[pos] = 1;\r\n\tfor (auto &i : v[pos])\r\n\t\tif (i != fa[pos])\r\n\t\t{\r\n\t\t\tif (vis[i])\r\n\t\t\t{\r\n\t\t\t\tif (dep[i] < dep[pos])\r\n\t\t\t\t{\r\n                    ++idx;\r\n\t\t\t\t\tfor (int p = pos;p != i;p = fa[p]) cyc[idx].push_back(p);\r\n\t\t\t\t\tcyc[idx].push_back(i);sz[idx] = cyc[idx].size();\r\n\t\t\t\t}\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tfa[i] = pos;dep[i] = dep[pos] + 1;dfs(i);\r\n\t\t}\r\n}\r\ninline ll sq(ll x) {return x * x % P;}\r\ninline ll vv() {return (sq(n) + n) * inv2[2] % P;}\r\nll sum[N],sum2[N];\r\nll cc()\r\n{\r\n\tll ret = 0;for (int i = 1;i <= idx;i++) ret = (ret + inv2[sz[i]]) % P;\r\n\tret = (ret + sq(ret)) % P;\r\n\tfor (int i = 1;i <= idx;i++) ret = (ret - inv2[sz[i] * 2] + P) % P;\r\n\tfor (int i = 1;i <= n;i++) ret = (ret + sq(sum[i]) - sum2[i] + P) % P;\r\n\treturn ret;\r\n}\r\nll ee()\r\n{\r\n\tll ret = (m + sq(m)) % P;\r\n\tfor (int i = 1;i <= n;i++) ret = (ret + sq(deg[i])) % P;\r\n\treturn ret * inv2[4] % P;\r\n}\r\nll vc()\r\n{\r\n\tll ret = 0;\r\n\tfor (int i = 1;i <= idx;i++) ret = (ret + (sz[i] + n) * inv2[sz[i] + 1]) % P;\r\n\treturn ret;\r\n}\r\ninline ll ve() {return (n + 2ll) * m % P * inv2[3] % P;}\r\nint sdeg[N];\r\nll ce()\r\n{\r\n\tll ret = 0;\r\n\tfor (int i = 1;i <= idx;i++)\r\n\t\tret = (ret + inv2[sz[i]] * (sz[i] + sdeg[i] * inv2[1] % P +\r\n\t\t\t(m - sz[i] - sdeg[i]) * inv2[2] % P) % P) % P;\r\n\treturn ret;\r\n}\r\nll E()\r\n{\r\n\tll ret = 0;for (int i = 1;i <= idx;i++) ret = (ret + inv2[sz[i]]) % P;\r\n\treturn (ret + n * inv2[1] % P - m * inv2[2] % P + P) % P;\r\n}\r\nint main ()\r\n{\r\n\tios::sync_with_stdio(false);\r\n\tcin >> n >> m;inv2[0] = 1;inv2[1] = (P + 1) / 2;\r\n\tfor (int i = 2,lim = max({n,m,20});i <= lim;i++) inv2[i] = inv2[i - 1] * inv2[1] % P;\r\n\tint t1,t2;\r\n\tfor (int i = 1;i <= m;i++) cin >> t1 >> t2,++deg[t1],++deg[t2],v[t1].push_back(t2),v[t2].push_back(t1);\r\n\tdfs(1);\r\n\tfor (int i = 1;i <= idx;i++)\r\n\t{\r\n\t\tfor (auto &j : cyc[i])\r\n\t\t\tsdeg[i] += deg[j],sum[j] = (sum[j] + inv2[sz[i]]) % P,sum2[j] = (sum2[j] + sq(inv2[sz[i]])) % P;\r\n\t\tsdeg[i] -= sz[i] << 1;\r\n\t}\r\n\tcout << (vv() + cc() + ee() + (vc() - ve() - ce()) * 2 % P + P - sq(E()) % P + P) % P << endl;\r\n\treturn 0;\r\n}"
}