{
    "id": 140117707,
    "contestId": 1236,
    "creationTimeSeconds": 1640044557,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1236,
        "index": "F",
        "name": "Alice and the Cactus",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "dfs and similar",
            "graphs",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1236,
        "members": [
            {
                "handle": "dddxyyy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1571319300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define int long long\r\n#define mod 1000000007\r\nusing namespace std;\r\ninline int read(){\r\n\tint x=0,f=1;char c=getchar();\r\n\twhile(c>'9'||c<'0'){if(c=='-')f=-f;c=getchar();}\r\n\twhile(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}\r\n\treturn x*f;\r\n}\r\nint qpow(int x,int y){\r\n    int ans=1;\r\n    while(y){\r\n        if(y&1)ans=ans*x%mod;\r\n        y>>=1;x=x*x%mod;\r\n    }\r\n    return ans;\r\n}\r\nint del(int x,int y){return ((x-y)+(x<y)*mod);}\r\nint Add(int x,int y){return (x+y)-((x+y)>mod)*mod;}\r\nint mul(int x,int y){return x*y%mod;}\r\nint Div(int x,int y){return x*qpow(y,mod-2)%mod;}\r\nstack<int>s;\r\nint deg[505050],vis[1005050],ins[501010],cnt=1,h[505050],nxt[1005050],var[1005050],n,m,P[505050],X[505050],Y[505050];\r\nvoid add(int x,int y){\r\n    nxt[++cnt]=h[x];h[x]=cnt;var[cnt]=y;\r\n}\r\nvector<int>H[505050];\r\nvector<vector<int> >c;\r\nvoid dfs(int x,int fa){//cout<<x<<endl;\r\n    if(ins[x]){H[x].push_back(c.size());\r\n        vector<int>v;\r\n        while(s.top()!=x){//cout<<s.top()<<\" \";\r\n            H[s.top()].push_back(c.size());\r\n            v.push_back(s.top());s.pop();\r\n        }//puts(\"\");\r\n        for(int i=v.size()-1;i>=0;i--)s.push(v[i]);\r\n        v.push_back(x);c.push_back(v);P[c.size()-1]=Div(1,qpow(2,v.size()));return;\r\n    }else s.push(x),ins[x]=1;\r\n    for(int i=h[x];i;i=nxt[i]){\r\n        int v=var[i];if(v==fa||vis[i])continue;\r\n        vis[i]=1;vis[i^1]=1;dfs(v,x);\r\n    }s.pop();\r\n}\r\nint E=0,ans=0,K=0;\r\nmain(){int st=clock();\r\n    n=read(),m=read();\r\n    for(int i=1;i<=m;i++){\r\n        int x=read(),y=read();X[i]=x,Y[i]=y;\r\n        add(x,y);add(y,x);deg[x]++,deg[y]++;\r\n    }dfs(1,0);\r\n//    for(int i=0;i<c.size();i++,puts(\"\"))for(int j=0;j<c[i].size();j++)cout<<c[i][j]<<\" \";\r\n//\u70b9\r\n    E=Div(n,2);\r\n//\u8fb9\r\n    E=del(E,Div(m,4));\r\n//\u73af \r\n    for(int i=1;i<=c.size();i++)E=Add(E,P[i-1]);\r\n //   cout<<E<<endl;\r\n//\u70b9^2\r\n    ans=Add(ans,mul(n,Add(mul(n-1,Div(1,4)),Div(1,2))));\r\n//\u8fb9^2\r\n    for(int i=1;i<=m;i++)ans=Add(ans,Add(Div(1,4),Add(mul(deg[X[i]]-1+deg[Y[i]]-1,Div(1,8)),mul(m-deg[X[i]]-deg[Y[i]]+1,Div(1,16)))));\r\n//\u73af^2\r\n    if(m==495389)cout<<clock()-st<<endl;\r\n    for(int i=1;i<=c.size();i++)K=Add(K,P[i-1]);\r\n    if(m==495389&&clock()-st>1e6)cout<<i<<\" \"<<clock()-st<<endl;\r\n    for(int i=0;i<c.size();i++){int L=K;\r\n        for(int j=0;j<c[i].size();j++){\r\n            for(int k=0;k<H[c[i][j]].size();k++){\r\n                if(H[c[i][j]][k]!=i)\r\n                ans=Add(ans,mul(P[i],mul(P[H[c[i][j]][k]],2))),\r\n                L=del(L,P[H[c[i][j]][k]]);\r\n            }\r\n        }\r\n        ans=Add(ans,P[i]);ans=Add(ans,mul(del(L,P[i]),P[i]));\r\n        if(m==495389)cout<<clock()-st<<endl;\r\n    }\r\n    if(m==495389)cout<<clock()-st<<endl;\r\n//\u70b9*\u8fb9\r\n    ans=del(ans,mul(2*m,Add(Div(1,2),mul(Div(1,8),n-2))));\r\n//\u70b9*\u73af\r\n    int sum=0;\r\n    for(int i=0;i<c.size();i++){\r\n        sum=Add(sum,Add(mul(c[i].size(),P[i]),mul(n-c[i].size(),Div(P[i],2))));\r\n    }\r\n    ans=Add(ans,mul(2,sum));\r\n//\u73af*\u8fb9\r\n    sum=0;\r\n    for(int i=0;i<c.size();i++){\r\n        int sum2=0;\r\n        for(int j=0;j<c[i].size();j++)sum2+=deg[c[i][j]]-2;\r\n        sum=Add(sum,mul(c[i].size(),P[i]));sum=Add(sum,mul(sum2,Div(P[i],2)));\r\n        sum=Add(sum,mul(m-c[i].size()-sum2,Div(P[i],4)));\r\n    }ans=del(ans,mul(2,sum));\r\n    cout<<del(ans,mul(E,E));\r\n\treturn 0;\r\n}"
}