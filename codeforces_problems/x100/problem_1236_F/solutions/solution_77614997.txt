{
    "id": 77614997,
    "contestId": 1236,
    "creationTimeSeconds": 1587539067,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1236,
        "index": "F",
        "name": "Alice and the Cactus",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "dfs and similar",
            "graphs",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1236,
        "members": [
            {
                "handle": "hydd"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1571319300
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 122,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 42700800,
    "source": "#include<cstdio>\r\n#include<vector>\r\nusing namespace std;\r\nconst int Mod=1e9+7;\r\ntypedef long long ll;\r\nint n,m,cnt,u[510000],v[510000],deg[510000],inv2[510000];\r\nint top,s[510000],pos[510000],vis[510000],sz[510000];\r\nint sum[510000],sum2[510000],tot[510000];\r\nint edgenum=1,vet[1100000],Next[1100000],Head[510000];\r\nvector<int> c[510000];\r\ninline int add(int x,int y){ return x+y>=Mod?x+y-Mod:x+y;}\r\ninline int dec(int x,int y){ return x-y<0?x-y+Mod:x-y;}\r\ninline ll mul(int x,int y){ return 1ll*x*y%Mod;}\r\ninline ll sqr(int x){ return mul(x,x);}\r\nvoid addedge(int u,int v){\r\n    vet[++edgenum]=v;\r\n    Next[edgenum]=Head[u];\r\n\tHead[u]=edgenum;\r\n}\r\nvoid dfs(int u,int fa){\r\n\tvis[u]=1; s[++top]=u; pos[u]=top;\r\n\tint v;\r\n\tfor (int e=Head[u];e;e=Next[e]){\r\n\t\tv=vet[e];\r\n\t\tif (v==fa||vis[v]==2) continue;\r\n\t\tif (!vis[v]) dfs(v,u);\r\n\t\telse{\r\n\t\t\tcnt++; sz[cnt]=pos[u]-pos[v]+1;\r\n\t\t\tfor (int i=pos[v];i<=pos[u];i++){\r\n\t\t\t\tc[cnt].push_back(s[i]);\r\n\t\t\t\tsum[s[i]]=add(sum[s[i]],inv2[sz[cnt]]);\r\n\t\t\t\tsum2[s[i]]=add(sum2[s[i]],sqr(inv2[sz[cnt]]));\r\n\t\t\t\ttot[cnt]=add(tot[cnt],deg[s[i]]-2);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tvis[u]=2; top--;\r\n}\r\n\r\ninline int E_v(){ return mul(n,inv2[1]);}\r\ninline int E_e(){ return mul(m,inv2[2]);}\r\ninline int E_c(){\r\n\tint res=0;\r\n\tfor (int i=1;i<=cnt;i++) res=add(res,inv2[sz[i]]);\r\n\treturn res;\r\n}\r\n\r\ninline int E_vv(){ return mul(mul(n,n+1),inv2[2]);}\r\ninline int E_ee(){\r\n\tint res=0;\r\n\tfor (int i=1;i<=m;i++){\r\n\t\tres=add(res,inv2[2]);\t\t\t\t\t\t\t\t//\u540c\u4e00\u6761\u8fb9\r\n\t\tres=add(res,mul(deg[u[i]]+deg[v[i]]-2,inv2[3]));\t//\u76f8\u4ea4\u4f46\u4e0d\u540c\r\n\t\tres=add(res,mul(m-deg[u[i]]-deg[v[i]]+1,inv2[4]));\t//\u4e0d\u76f8\u4ea4 \r\n\t}\r\n\treturn res;\r\n}\r\ninline int E_cc(){\r\n\tint s=0,res=0;\r\n\t//\u6309\u65e0\u516c\u5171\u70b9\u7b97\uff08=\u65e0\u516c\u5171\u70b9ans*1+\u6709\u516c\u5171\u70b9ans*1/2 +\u540c\u4e00\u4e2a\u73afans*1/(2^size)\uff09 \r\n\tfor (int i=1;i<=cnt;i++) s=add(s,inv2[c[i].size()]);\r\n\tres=mul(s,s);\r\n\t//\u540c\u4e00\u4e2a\u73af\r\n\tfor (int i=1;i<=cnt;i++) res=dec(res,sqr(inv2[c[i].size()]));\r\n\tres=add(res,s);\r\n\t//\u6709\u516c\u5171\u70b9\r\n\tfor (int i=1;i<=n;i++) res=add(res,dec(sqr(sum[i]),sum2[i]));\r\n\treturn res;\r\n}\r\ninline int E_ve(){ return mul(m,add(mul(inv2[2],2),mul(inv2[3],n-2)));}//\u70b9\u5728\u8fb9\u4e0a\uff0c\u70b9\u4e0d\u5728\u8fb9\u4e0a \r\ninline int E_vc(){\r\n\tint res=0;\r\n\tfor (int i=1;i<=cnt;i++){\r\n\t\tres=add(res,mul(sz[i],inv2[sz[i]]));\t\t\t\t//\u70b9\u5728\u73af\u4e0a\r\n\t\tres=add(res,mul(n-sz[i],inv2[sz[i]+1]));\t\t\t//\u70b9\u4e0d\u5728\u73af\u4e0a \r\n\t}\r\n\treturn res;\r\n}\r\ninline int E_ec(){\r\n\tint res=0;\r\n\tfor (int i=1;i<=cnt;i++){\r\n\t\tres=add(res,mul(sz[i],inv2[sz[i]]));\t\t\t\t//\u8fb9\u5728\u73af\u4e0a\r\n\t\tres=add(res,mul(tot[i],inv2[sz[i]+1]));\t\t\t\t//\u8fb9\u4e0e\u73af\u6709\u4ea4\u4f46\u4e0d\u5728\u73af\u4e0a \r\n\t\tres=add(res,mul(m-tot[i]-sz[i],inv2[sz[i]+2]));\t\t//\u8fb9\u4e0e\u73af\u65e0\u4ea4 \r\n\t}\r\n\treturn res; \r\n}\r\n\r\ninline int getans2(){\r\n\tint x1=add(E_vv(),add(E_ee(),E_cc()));\r\n\tint x2=dec(E_vc(),add(E_ve(),E_ec())); x2=add(x2,x2);\r\n\treturn add(x1,x2);\r\n}\r\ninline int getans(){ return add(dec(E_v(),E_e()),E_c());}\r\nint main(){\r\n\tinv2[0]=1; inv2[1]=5e8+4;\r\n\tfor (int i=2;i<=500005;i++) inv2[i]=mul(inv2[i-1],inv2[1]);\r\n\tscanf(\"%d%d\",&n,&m);\r\n\tfor (int i=1;i<=m;i++){\r\n\t\tscanf(\"%d%d\",&u[i],&v[i]);\r\n\t\tdeg[u[i]]++; deg[v[i]]++;\r\n\t\taddedge(u[i],v[i]); addedge(v[i],u[i]);\r\n\t}\r\n\tdfs(1,0);\r\n\tprintf(\"%d\\n\",dec(getans2(),sqr(getans())));\r\n\treturn 0;\r\n}\r\n"
}