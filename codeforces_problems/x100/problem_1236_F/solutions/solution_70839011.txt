{
    "id": 70839011,
    "contestId": 1236,
    "creationTimeSeconds": 1581506204,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1236,
        "index": "F",
        "name": "Alice and the Cactus",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "dfs and similar",
            "graphs",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1236,
        "members": [
            {
                "handle": "gongsuidashen"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1571319300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<iostream>\r\n#include<algorithm>\r\n#include<cstdio>\r\n#include<ctype.h>\r\n#include<stack>\r\n#include<vector>\r\n#define ll long long\r\n#define maxn 500005\r\n#define re(i,a,b) for(int i=a;i<=b;i++)\r\n#define _re(i,a,b) for(int i=a;i>=b;i--)\r\n#define for_edge(x) for(int i=head[x];i;i=e[i].nxt)\r\ninline int read()\r\n{char c=getchar();int f=1,ans=0;while(!isdigit(c)){if(c=='-')f=-1;c=getchar();}while(isdigit(c)){ans=ans*10+(c-'0');c=getchar();}return ans*f;}\r\nusing namespace std;\r\nconst ll p = 1000000007 , I2 = (p+1)/2;\r\nstruct edge\r\n{\r\n\tint nxt,to;\r\n\tedge(int nxt=0,int to=0)\r\n\t:nxt(nxt),to(to){};\r\n}e[maxn*2];\r\nint TOT=1,head[maxn];\r\ninline void add_edge(int x,int y)\r\n{\r\n\te[++TOT] = edge( head[x],y );\r\n\thead[x] = TOT;\r\n}\r\nll n,m,k,cnt_e[maxn],cnt_c[maxn],cnt_ce[maxn],size[maxn],sum[maxn],sum2[maxn];\r\nint vis[maxn],fa[maxn],dep[maxn];\r\nvector<int>vct[maxn];\r\nvoid dfs(int x,int _fa)\r\n{\r\n\tfa[x] = _fa;\r\n\tdep[x] = dep[_fa] + 1;\r\n\tvis[x] =1;\r\n\tfor_edge(x)\r\n\t{\r\n\t\tint y = e[i].to ;\r\n\t\tif(y==_fa)\r\n\t\t\tcontinue;\r\n\t\tif(vis[y])\r\n\t\t{\r\n\t\t\tif(dep[x]<dep[y])\r\n\t\t\t\tcontinue;\r\n\t\t\t++k;\r\n\t\t\tfor(int z=x;z!=y;z=fa[z])\r\n\t\t\t\tvct[k].push_back(z);\r\n\t\t\tvct[k].push_back(y);  \r\n\t\t}\r\n\t\telse\r\n\t\t\tdfs( y,x );\r\n\t}\r\n}\r\ninline ll sqr(ll x)\r\n{\r\n\treturn x*x%p;\r\n}\r\ninline ll ksm(ll x,int b)\r\n{\r\n\tll ans = 1;\r\n\twhile(b)\r\n\t{\r\n\t\tif(b&1)\r\n\t\t\t(ans*=x)%=p;\r\n\t\t(x*=x)%=p;\r\n\t\tb>>=1;\r\n\t}\r\n\treturn ans;\r\n}\r\ninline ll E()\r\n{\r\n\tll ans = ( n*I2 - m*sqr(I2) )%p;\r\n\tre(i,1,k)\r\n\t\t( ans+= ksm( I2,size[i] ) )%=p;\r\n\treturn ans;\r\n}\r\ninline ll VV()\r\n{\r\n\treturn ( sqr(n)+n )*sqr(I2) %p;\r\n}\r\ninline ll EE()\r\n{\r\n\tll ans = ( sqr(m)+m ) %p;\r\n\tre(i,1,n)\r\n\t\t(ans += sqr(cnt_e[i]))%=p;\r\n\treturn ans* sqr(sqr(I2))%p;\r\n}\r\ninline ll CC()\r\n{\r\n\tll ans = 0;\r\n\tre(i,1,k)\r\n\t\t( ans += ksm( I2,size[i] ) )%=p;\r\n\t( ans += sqr(ans) )%=p;\r\n\tre(i,1,k)\r\n\t\t( ans -= ksm(I2,size[i]*2) )%=p;\r\n\tre(i,1,n)\r\n\t\t( ans += sqr(sum[i]) - sum2[i] )%=p;\r\n\treturn ans;\r\n}\r\ninline ll VC()\r\n{\r\n\tll ans = 0;\r\n\tre(i,1,k)\r\n\t\t( ans += ksm(I2,size[i]+1) * ( size[i]+n )  ) %=p;\r\n\treturn ans;\r\n}\r\ninline ll CE()\r\n{\r\n\tll ans = 0;\r\n\tre(i,1,k)\r\n\t\t( ans += ksm(I2,size[i]) * ( size[i] + cnt_ce[i]*I2%p + ( m-size[i]-cnt_ce[i]) * sqr(I2)%p ) )%=p;\r\n\treturn ans;\r\n}\r\ninline ll VE()\r\n{\r\n\treturn (n+2) * m %p * sqr(I2) %p * I2%p; \r\n}\r\ninline ll E2()\r\n{\r\n\treturn ( VV()+CC()+EE()+2*(VC()-VE()-CE()))%p;\r\n}\r\ninline ll Var()\r\n{\r\n\treturn ( E2() - sqr(E()) )%p;\r\n}\r\nint main()\r\n{\r\n\tn = read();m = read();\r\n\tre(i,1,m)\r\n\t{\r\n\t\tint x = read(),y=read();\r\n\t\tcnt_e[x]++;\r\n\t\tcnt_e[y]++;\r\n\t\tadd_edge(x,y);\r\n\t\tadd_edge(y,x);\r\n\t}\r\n\tdfs(1,0);\r\n\tre(i,1,k)\r\n\t{\r\n\t\tsize[i] = vct[i].size() ;\r\n\t\tint S = ksm( I2,size[i] );\r\n\t\tre(t,0,size[i]-1)\r\n\t\t{\r\n\t\t\tint x = vct[i][t];\r\n\t\t\tcnt_c[x]++;\r\n\t\t\tcnt_ce[i] += cnt_e[x];\r\n\t\t\t( sum[x] += S )%=p;\r\n\t\t\t( sum2[x] += sqr(S) )%=p;\r\n\t\t}\r\n\t\tcnt_ce[i] -= 2*size[i];\r\n\t}\r\n\tprintf(\"%d\\n\",(Var()+p)%p);\r\n\treturn 0;\r\n}\r\n\r\n\r\n"
}