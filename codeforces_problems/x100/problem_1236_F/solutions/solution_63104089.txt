{
    "id": 63104089,
    "contestId": 1236,
    "creationTimeSeconds": 1571714185,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1236,
        "index": "F",
        "name": "Alice and the Cactus",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "dfs and similar",
            "graphs",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1236,
        "members": [
            {
                "handle": "xgcxgc"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1571319300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 34099200,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define I inline\r\n#define fi first\r\n#define se second\r\n#define R register\r\n#define LL long long\r\n#define mp make_pair\r\n#define reg register int\r\n#define pii pair<int,int>\r\n#define cr const reg&\r\nusing namespace std;\r\nconst int inf = 2147483647;\r\nconst int mod = 1e9 + 7;\r\nconst int N = 5e5 + 1;\r\n\r\nI int _max(cr x, cr y) {return x > y ? x : y;}\r\nI int _min(cr x, cr y) {return x < y ? x : y;}\r\nI int read() {\r\n\treg x = 0, f = 1; char ch = getchar();\r\n\twhile(ch < '0' || ch > '9') {if(ch == '-') f = -1; ch = getchar();}\r\n\twhile(ch >= '0' && ch <= '9') x = (x << 3) + (x << 1) + (ch ^ 48), ch = getchar();\r\n\treturn x * f;\r\n}\r\nI void ptt(cr x) {if(x >= 10) ptt(x / 10); putchar(x % 10 + '0');}\r\nI void put(cr x) {x < 0 ? putchar('-'), ptt(-x) : ptt(x);}\r\nI void pr1(cr x) {put(x), putchar(' ');}\r\nI void pr2(cr x) {put(x), puts(\"\");}\r\n\r\nstruct edge {\r\n\tint x, y, next;\r\n} e[N * 2]; int len, last[N];\r\nint id, cnt, tp, dfn[N], low[N], sta[N], inv[N];\r\nint du[N], cut[N], zz[N];\r\nvector<int> q[N];\r\n\r\nI int add(cr x, cr y) {return x + y >= mod ? x + y - mod : x + y;}\r\nI int dec(cr x, cr y) {return x - y < 0 ? x - y + mod : x - y;}\r\n\r\nvoid ins(cr x, cr y) {\r\n\te[++len].x = x, e[len].y = y;\r\n\te[len].next = last[x], last[x] = len;\r\n}\r\n\r\nvoid tarjan(cr x) {\r\n\tlow[x] = dfn[x] = ++id; sta[++tp] = x;\r\n\tfor(reg k = last[x], y; k; k = e[k].next) {\r\n\t\ty = e[k].y;\r\n\t\tif(!dfn[y]) {\r\n\t\t\ttarjan(y);\r\n\t\t\tlow[x] = _min(low[x], low[y]);\r\n\t\t\tif(low[y] >= dfn[x]) {\r\n\t\t\t\treg i; cnt++;\r\n\t\t\t\tdo {\r\n\t\t\t\t\ti = sta[tp--];\r\n\t\t\t\t\tq[cnt].push_back(i);\r\n\t\t\t\t} while(i != y); q[cnt].push_back(x);\r\n\t\t\t}\r\n\t\t} else low[x] = _min(low[x], dfn[y]);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\treg n = read(), m = read();\r\n\tinv[0] = 1, inv[1] = (mod + 1) / 2; for(int i = 2; i <= n; i++) inv[i] = (LL)inv[i - 1] * inv[1] % mod;\r\n\tfor(reg i = 1; i <= m; i++) {\r\n\t\treg x = read(), y = read();\r\n\t\tins(x, y), ins(y, x), du[x]++, du[y]++;\r\n\t} tarjan(1);\r\n\tfor(reg i = 1; i <= cnt; i++) if(q[i].size() > 1){\r\n\t\treg ll = q[i].size();\r\n\t\tfor(reg j = 0; j < ll; j++) cut[q[i][j]] = add(cut[q[i][j]], inv[ll]);\r\n\t} int V1 = (LL)inv[1] * n % mod, V2 = (LL)inv[2] * n % mod * (n + 1) % mod;\r\n\tint E1 = (LL)inv[2] * m % mod, E2 = 0, C1 = 0, C2 = 0;\r\n\tint VE = ((LL)inv[1] * n + 1) % mod * m % mod * inv[2] % mod;\r\n\tint CV = 0, CE = 0;\r\n\tfor(reg i = 1; i <= len; i += 2) {\r\n\t\treg hh = du[e[i].x] + du[e[i].y];\r\n\t\treg now = (inv[2] + (LL)(hh - 2) * inv[3] % mod + (LL)(m - hh + 1) * inv[4] % mod) % mod;\r\n\t\tE2 = add(E2, now);\r\n\t} for(reg i = 1; i <= cnt; i++) if(q[i].size() > 1) {\r\n\t\treg ll = q[i].size();\r\n\t\tC1 = (C1 + inv[ll]) % mod;\r\n\t\tCV = (CV + (LL)inv[ll + 1] * (n - ll) % mod + (LL)inv[ll] * ll % mod) % mod;\r\n\t\tCE = (CE + (LL)ll * inv[ll]) % mod; reg tt = 0;\r\n\t\tfor(reg j = 0; j < ll; j++) tt += du[q[i][j]] - 2;\r\n\t\tCE = (CE + (LL)tt * inv[ll + 1]) % mod;\r\n\t\tCE = (CE + (LL)(m - ll - tt) * inv[ll + 2]) % mod;\r\n\t} for(reg i = 1; i <= cnt; i++) if(q[i].size() > 1) {\r\n\t\treg ll = q[i].size(), tt = dec(C1, inv[ll]);\r\n\t\tC2 = add(C2, inv[ll]);\r\n\t\tfor(reg j = 0; j < ll; j++) {\r\n\t\t\treg kk = dec(cut[q[i][j]], inv[ll]);\r\n\t\t\tC2 = (C2 + (LL)kk * inv[ll - 1]) % mod;\r\n\t\t\ttt = dec(tt, kk);\r\n\t\t} C2 = (C2 + (LL)tt * inv[ll]) % mod;\r\n\t} reg z1 = (V1 - E1 + C1) % mod;\r\n\treg z2 = (V2 + E2 + C2) % mod; z2 = (z2 + 2LL * CV) % mod;\r\n\tz2 = (z2 - 2LL * VE - 2LL * CE) % mod;\r\n\tput(((z2 - (LL)z1 * z1) % mod + mod) % mod);\r\n\treturn 0;\r\n}\r\n\r\n"
}