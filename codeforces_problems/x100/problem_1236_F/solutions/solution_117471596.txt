{
    "id": 117471596,
    "contestId": 1236,
    "creationTimeSeconds": 1622102803,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1236,
        "index": "F",
        "name": "Alice and the Cactus",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "dfs and similar",
            "graphs",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1236,
        "members": [
            {
                "handle": "201465"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1571319300
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 122,
    "timeConsumedMillis": 327,
    "memoryConsumedBytes": 37580800,
    "source": "#include<cstdio>\r\n#include<algorithm>\r\n#include<vector>\r\nusing namespace std;\r\nconst int MOD=1e9+7;\r\nvector<int>o[500010],h[500010];\r\nint a,b,c,aa,bb,cc,ab,ac,bc;\r\nint n,m,tot;\r\nint du[500010];\r\nint s[500010];\r\nint w[500010],vis[500010],dep[500010],fath[500010];\r\nint siz[500010];\r\ninline int mo(int x)\r\n{\r\n\tif (x>=MOD) return x-MOD; return x;\r\n}\r\ninline int read()\r\n{\r\n\tint ans=0;\r\n\tchar ch=getchar();\r\n\twhile (ch<'0'||ch>'9') ch=getchar();\r\n\twhile (ch>='0'&&ch<='9') ans=(ans<<1)+(ans<<3)+ch-'0',ch=getchar();\r\n\treturn ans;\r\n}\r\nvoid init(int n)\r\n{\r\n\tn=max(n,2);\r\n\tw[0]=1;\r\n\tint dw=(MOD+1)/2;\r\n\tfor (int i=1;i<=n;i++) w[i]=1ll*w[i-1]*dw%MOD;\r\n}\r\nvoid dfs(int u,int fa)\r\n{\r\n\tvis[u]=1;\r\n\tfor (int v:o[u])\r\n\t{\r\n\t\tif (v==fa) continue;\r\n\t\tif (vis[v])\r\n\t\t{\r\n\t\t\tif (dep[u]>dep[v])\r\n\t\t\t{\r\n\t\t\t\ttot++;\r\n\t\t\t\tint t=u,sum=0;\r\n\t\t\t\twhile (t!=v) sum=sum+du[t]-1,h[tot].push_back(t),t=fath[t];\r\n\t\t\t\tsum=sum+du[v]-1,h[tot].push_back(v); siz[tot]=h[tot].size();\r\n\t\t\t\tint sizd=siz[tot];\r\n\t\t\t\tint num=s[0];\r\n\t\t\t\tfor (int k:h[tot]) \r\n\t\t\t\t{\r\n\t\t\t\t\tnum=mo(num-s[k]+MOD);\r\n\t\t\t\t\tcc=mo(cc+2ll*w[sizd-1]%MOD*s[k]%MOD);\r\n\t\t\t\t\ts[k]=mo(s[k]+w[sizd]);\r\n\t\t\t\t}\r\n\t\t\t\tcc=mo(cc+2ll*num%MOD*w[sizd]%MOD);\r\n\t\t\t\tcc=mo(cc+w[sizd]);\r\n\t\t\t\ts[0]=mo(s[0]+w[sizd]);\r\n\t\t\t\tc=mo(c+w[sizd]);\r\n\t\t\t\tac=mo(mo(ac+1ll*(n-sizd)*w[sizd+1]%MOD)+1ll*sizd*w[sizd]%MOD);\r\n\t\t\t\tbc=mo(mo(mo(bc+1ll*(m-sum)*w[sizd+2]%MOD)+1ll*(sum-sizd)*w[sizd+1]%MOD)+1ll*sizd*w[sizd]%MOD);\r\n\t\t\t} \r\n\t\t} else fath[v]=u,dep[v]=dep[u]+1,dfs(v,u);\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tn=read(),m=read();\r\n\tinit(n);\r\n\tfor (int i=1;i<=m;i++)\r\n\t{\r\n\t\tint x=read(),y=read();\r\n\t\tdu[x]++,du[y]++;\r\n\t\to[x].push_back(y); o[y].push_back(x);\r\n\t}\r\n\tdfs(1,-1);\r\n\ta=1ll*n*w[1]%MOD;\r\n\tb=1ll*m*w[2]%MOD;\r\n\taa=1ll*n*(n+1)%MOD*w[2]%MOD;\r\n\tab=mo(1ll*m*(n-2)%MOD*w[3]%MOD+2ll*m%MOD*w[2]%MOD);\t\r\n\tfor (int i=1;i<=n;i++)\r\n\t\tfor (int j:o[i])\r\n\t\t\tif (i<j) bb=mo(mo(mo(bb+1ll*(m-du[i]-du[j]+1)*w[4]%MOD)+1ll*(du[i]+du[j]-2)*w[3]%MOD)+w[2]);\r\n\tac=mo(ac+ac),bc=mo(bc+bc),ab=mo(ab+ab);\r\n\tint ansn=mo(mo(mo(mo(mo(aa+bb)+cc)-ab+MOD)+ac)-bc+MOD);\r\n\tint ansm=mo(mo(a-b+MOD)+c);\r\n\tansm=1ll*ansm*ansm%MOD;\r\n\tansn=mo(ansn-ansm+MOD);\r\n\tprintf(\"%d\\n\",ansn);\r\n}\r\n"
}