{
    "id": 190750545,
    "contestId": 1780,
    "creationTimeSeconds": 1674817538,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1780,
        "index": "A",
        "name": "Hayato and School",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1780,
        "members": [
            {
                "handle": "nChurgulia"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1674657300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 204800,
    "source": "//INCLUDES--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n#include <stdlib.h>     /* srand, rand */\n#include <time.h>       /* time */\n#include <stdio.h>\n#include <chrono>\n#include <ctime>\n//OPTIMIZATIONS????-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n//#pragma GCC target (\"avx2\")\n//#pragma GCC optimization (\"O3\")\n//#pragma GCC optimization (\"unroll-loops\")\n//DEFINES--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n#define pb push_back\n#define endl '\\n'\n#define mem(a, b) memset((a), (b), sizeof(a))\n#define SZ(x) ((int)((x).size()))\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define make_unique(vec) sort(all(vec)); vec.resize(unique(all(vec)) - vec.begin());\n#define lastEle(vec) vec[vec.size()-1] \n#define ll long long \n#define ld long double\n#define ull unsigned long long\n#define ui unsigned int\n#define us unsigned short\n//#define PI 3.1415926535897932384626\n//ORDERED_SET--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n using namespace __gnu_pbds;\nusing namespace std;\n template <typename T>\n using ordered_set =\n    tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n//DEBUG--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n \n//#define deb(args...) { error(args); cout << flush;}\n//#define error(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',',' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); cout << endl; }\n//void err(istream_iterator<string> it) {}\n//template<typename T, typename... Args>\n//void err(istream_iterator<string> it, T a, Args... args){\n    //cerr << \" [\" << *it <<  \": \" << a << \"] \" << flush;\n    //err(++it, args...);\n//}\n \n \nvoid __print(int x) {cerr << x;}\nvoid __print(long x) {cerr << x;}\nvoid __print(long long x) {cerr << x;}\nvoid __print(unsigned x) {cerr << x;}\nvoid __print(unsigned long x) {cerr << x;}\nvoid __print(unsigned long long x) {cerr << x;}\nvoid __print(float x) {cerr << x;}\nvoid __print(double x) {cerr << x;}\nvoid __print(long double x) {cerr << x;}\nvoid __print(char x) {cerr << '\\'' << x << '\\'';}\nvoid __print(const char *x) {cerr << '\\\"' << x << '\\\"';}\nvoid __print(const string &x) {cerr << '\\\"' << x << '\\\"';}\nvoid __print(bool x) {cerr << (x ? \"true\" : \"false\");}\n \ntemplate<typename T, typename V>\nvoid __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}\ntemplate<typename T>\nvoid __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? \",\" : \"\"), __print(i); cerr << \"}\";}\nvoid _print() {cerr << \"]\\n\";}\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << \", \"; _print(v...);}\n#ifdef LOCAL\n#define deb(x...) cerr << \"[\" << #x << \"] = [\"; _print(x)\n#else\n#define deb(x...)\n#endif\n \n//FAST HASHING-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nstruct custom_hash {\n    static uint64_t splitmix64(uint64_t x) {\n        // http://xorshift.di.unimi.it/splitmix64.c\n        x += 0x9e3779b97f4a7c15;\n        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\n        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\n        return x ^ (x >> 31);\n    }\n    size_t operator()(uint64_t x) const {\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\n        return splitmix64(x + FIXED_RANDOM);\n    }\n}; \n// unordered_map<long long, int, custom_hash> safe_map;\n// unordered_set<long long, custom_hash> safe_set;\n//HELPER FUNCTIONS----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n \n// read pairs\ntemplate <typename T,typename U>\nistream & operator >> (istream &in, pair<T,U> & pr) { \n    in >> pr.first;\n    in >> pr.second;\n    return in; \n}\n \n// output pairs\ntemplate <typename T,typename U>\nostream & operator << (ostream &out, const pair<T,U> & pr) { \n    out << pr.first << \" \" << pr.second; \n    return out; \n} \n \n// reads vector\ntemplate <typename T>\nvoid scanVec(vector< T > & vec,int from = 0){for(int i = from;i < SZ(vec);i++) cin >> vec[i];}\n \n// prints vector\ntemplate <typename T>\nvoid printVec(vector< T > & vec,int from = 0){for(int i = from;i < SZ(vec);i++){cout << vec[i] << \" \";}cout << endl;}\n \n//calculates mod\ntemplate <typename T,typename U>\nT mod(T a,U b){return ((a%b) + b)%b;}\n \n \n//#define bit(x,i) (x&(1<<i))  //select the bit of position i of x\n#define lowbit(x) ((x)&((x)^((x)-1))) //get the lowest bit of x\n#define hBit(msb,n) asm(\"bsrl %1,%0\" : \"=r\"(msb) : \"r\"(n)) //get the highest bit of x, maybe the fastest\n \n// in (r,l) \ntemplate <typename T>\nbool IN(T i, T l, T r) {return (l<i&&i<r);}\n// in [r,l]\ntemplate <typename T>\nbool LINR(T i, T l, T r) {return (l<=i&&i<=r);}\n \n// in [l,r)\ntemplate <typename T>\nbool LIN(T i, T l, T r) {return (l<=i&&i<r);}\n \n// in (l,r]\ntemplate <typename T>\nbool INR(T i, T l, T r) {return (l<i&&i<=r);}\n \n//prints NO\nvoid no(){cout <<\"NO\" << endl;}\n \n//prints YES\nvoid yes(){cout <<\"YES\" << endl;}\n \n \n//HELPER_VARIABLES----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nint inf = 1001001001;\nll INF = 1e15;\nconst int md = 998244353;\nconst int MOD = 1e9 + 7; \nconst int MAXN = 1e3 + 5;\nvector< int > dx = {1,-1,0,0};\nvector< int > dy = {0,0,1,-1};\n//vector< char > dd = {'U','R','D','L'};\n// check constraints !!!\n \n \n \nvoid sl(){\n   int n; cin >> n;\n   vector<int> arr (n); scanVec(arr);\n   vector< vector< int > > par(2);\n   for(int i = 0;i < n;i++) par[arr[i]%2].pb(i + 1);\n   if(SZ(par[1]) > 0 && SZ(par[0]) > 1){\n\t\tyes();\n        cout << par[1][0] << \" \" << par[0][0] << \" \" << par[0][1] << endl;\n\t} else if(SZ(par[1]) > 2){\n\t\tyes();\n        cout << par[1][0] << \" \" << par[1][1] << \" \" << par[1][2] << endl;\n\t} else {\n\t\tno();\n\t} \n} \n \n \n \n \nint main(){\n    //freopen(\"knight.in\",\"r\",stdin);\n    //freopen(\"knight.out\",\"w\",stdout);\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    //srand(time(NULL));\n     //1 - multiple tests\n     //0 - single test\n    #ifdef LOCAL\n        auto start = chrono::steady_clock::now();\n    #endif\n    int ts = 1;\n    if(ts == 1) cin >> ts;\n    else ts = 1;\n    for(int current_test = 1;current_test <= ts;current_test++){\n        //cout << \"Case #\" << current_test << \":\" << sl() << endl;;\n       sl();\n    }\n    #ifdef LOCAL\n        auto end = chrono::steady_clock::now();\n        auto diff = end - start;\n        cerr << chrono::duration <double, milli> (diff).count() << \" ms\" << endl;\n    #endif\n    return 0;\n} \n"
}