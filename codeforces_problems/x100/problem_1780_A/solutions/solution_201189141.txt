{
    "id": 201189141,
    "contestId": 1780,
    "creationTimeSeconds": 1680901531,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1780,
        "index": "A",
        "name": "Hayato and School",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1780,
        "members": [
            {
                "handle": "prashant.kumar.iitbhu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1674657300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 61,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nvector<int> prime;\r\nvector<int> p;\r\nvector<int> plr;\r\nvoid sieve(int n){\r\n    prime.resize(n+5,true);\r\n    for(int i=2;i*i<=n;i++){\r\n        if(prime[i]){\r\n            for(int j=i*i;j<=n;j+=i){\r\n                prime[j]=false;\r\n            }\r\n        }\r\n    }\r\n    for(int i=2;i<=n;i++){\r\n        if(prime[i]) p.push_back(i);\r\n    }\r\n}\r\nvoid segmentedSieve(int l,int r){\r\n    sieve(sqrt(r));\r\n    vector<int> lrprime(r-l+1,true);\r\n    for(auto pr:p){\r\n        int fm=(l/pr)*pr;\r\n        if(fm<l) fm+=pr;\r\n        for(int j=max(fm,pr*pr);j<=r;j+=pr){\r\n            lrprime[j-l]=false;\r\n        }\r\n    }\r\n    for(int i=l;i<=r;i++){\r\n        if(lrprime[i-l]) plr.push_back(i);\r\n    }\r\n}\r\nsigned main(){\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int t;\r\n    cin >> t;\r\n    while(t--){\r\n        int n; cin>>n;\r\n        int a[n];\r\n        for(int i=0;i<n;i++) cin>>a[i];\r\n        vector<int> odd,even;\r\n        for(int i=0;i<n;i++){\r\n            if(a[i]&1) odd.push_back(i);\r\n            else even.push_back(i);\r\n        }\r\n        if(odd.size()>=3){\r\n            cout<<\"YES\\n\";\r\n            cout<<odd[0]+1<<\" \"<<odd[1]+1<<\" \"<<odd[2]+1<<endl;\r\n        }else if(odd.size()>=1 and even.size()>=2){\r\n            cout<<\"YES\\n\";\r\n            cout<<odd[0]+1<<\" \"<<even[0]+1<<\" \"<<even[1]+1<<endl;\r\n        }else{\r\n            cout<<\"NO\\n\";\r\n        }\r\n\r\n    }\r\n    return 0;\r\n}"
}