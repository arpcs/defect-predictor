{
    "id": 195393135,
    "contestId": 1780,
    "creationTimeSeconds": 1677631139,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1780,
        "index": "A",
        "name": "Hayato and School",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1780,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1674657300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n    int tc,n,a;\n    vector<int> v;\n    scanf(\"%d\",&tc);\n    while(tc--){\n    int cic=0,cpc=0,cp=0,ci=0,flag=0;\n    vector<int> res;\n    vector<int> v;\n        scanf(\"%d\",&n);\n        while(n--){\n            scanf(\"%d\",&a);\n            if(a%2==0){\n                cp++;\n            }else{\n                ci++;\n            }\n            v.push_back(a);\n        }\n        //para obtener un numero impar con la suma de tres numeros solo tenemos dos posibilidades:\n        // (1 impar, 2 pares) y (3 impares)\n        if(ci>=3 || ci>=1 && cp>=2){\n            if(ci>=3){\n                flag=1;\n                printf(\"%s\\n\",\"YES\");\n                for(size_t i=0;i<v.size();i++){\n                    if(v[i]%2!=0){\n                        cic++;\n                        res.push_back(i+1);\n                        if(cic==3){\n                            for(size_t j=0;j<3;j++){\n                                printf(\"%d \",res[j]);\n                            }\n                            printf(\"\\n\");\n                        }\n                    }\n                }\n            }\n            if(ci>=1 && cp>=2 && flag==0){\n                printf(\"%s\\n\",\"YES\");\n                for(size_t k=0;k<v.size();k++){\n                    if(v[k]%2==0 && cpc<2){\n                        cpc++;\n                        res.push_back(k+1);\n                    }\n                    if(v[k]%2!=0 && cic<1){\n                        cic++;\n                        res.push_back(k+1);\n                    }\n                    if(cpc==2 && cic==1){\n                            for(size_t l=0;l<3;l++){\n                                printf(\"%d \",res[l]);\n                            }\n                            break;\n                            printf(\"\\n\");\n                    }\n                }\n\n            }\n\n        }else{\n            printf(\"%s\\n\",\"NO\");\n        }\n\n    }\n    return 0;\n}\n\n\t  \t\t\t\t \t\t \t\t\t \t    \t\t \t  \t \t"
}