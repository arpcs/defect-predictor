{
    "id": 190633721,
    "contestId": 1780,
    "creationTimeSeconds": 1674725203,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1780,
        "index": "A",
        "name": "Hayato and School",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1780,
        "members": [
            {
                "handle": "viking_245"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1674657300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 204800,
    "source": "#include <iostream>\r\n#include <string>\r\n#include <math.h>\r\n#include <algorithm>\r\n#include <string>\r\n#include <vector>\r\n#include <limits>\r\n#include <map>\r\n#include <set>\r\n#include <stack>\r\n#include <queue>\r\n#include <deque>\r\n#include <iomanip>\r\n#include <unordered_map>\r\n#include <cstring>\r\n#include <fstream>\r\n\r\n#define int long long\r\nusing namespace std;\r\n\r\nint gcd(int a, int b)\r\n{\r\n    if (b == 0)\r\n        return a;\r\n    return gcd(b, a % b);\r\n}\r\n\r\nint lcm(int a, int b)\r\n{\r\n    return (a / gcd(a, b)) * b;\r\n}\r\nint mod = 1e9 + 7;\r\nint bexp(int x, int a)\r\n{\r\n    int ans = 1;\r\n\r\n    while (a > 0)\r\n    {\r\n        if (a & 1)\r\n        {\r\n            ans *= x;\r\n            // ans %= mod;\r\n        }\r\n\r\n        x *= x;\r\n        // x %= mod;\r\n        a /= 2;\r\n    }\r\n    return ans;\r\n}\r\n\r\nvector<int> parent;\r\nvector<int> sz;\r\nvoid make(int x)\r\n{\r\n    parent[x] = x;\r\n    sz[x] = 1;\r\n}\r\n\r\nint find(int x)\r\n{\r\n    if (parent[x] == x)\r\n    {\r\n        return x;\r\n    }\r\n\r\n    return parent[x] = find(parent[x]);\r\n}\r\n\r\nvoid Union(int a, int b)\r\n{\r\n    a = find(a);\r\n    b = find(b);\r\n    if (a == b)\r\n    {\r\n        return;\r\n    }\r\n    if (sz[b] > sz[a])\r\n    {\r\n        swap(a, b);\r\n    }\r\n\r\n    parent[b] = a;\r\n    sz[a] += sz[b];\r\n\r\n    return;\r\n}\r\n\r\nvector<int> find_div(int x)\r\n{\r\n    vector<int> ans;\r\n    for (int i = 1; i * i <= x; i++)\r\n    {\r\n        if (x % i == 0)\r\n        {\r\n            ans.push_back(i);\r\n        }\r\n    }\r\n    return ans;\r\n}\r\n\r\nint32_t main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n\r\n    int t;\r\n    cin >> t;\r\n\r\n    while (t--)\r\n    {\r\n\r\n        int n;\r\n        cin>>n;\r\n        int arr[n];\r\n       \r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            cin>>arr[i];\r\n            \r\n        }\r\n        vector<int> odd,even;\r\n\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            if(arr[i]%2)\r\n            {\r\n                odd.push_back(i+1);\r\n            }\r\n            else\r\n            {\r\n                even.push_back(i+1);\r\n            }\r\n        }\r\n\r\n        bool f1= odd.size()==0;\r\n        bool f2= (odd.size()==2 && even.size()==1);\r\n        if(f1 || f2)\r\n        {\r\n            cout<<\"NO\"<<\"\\n\";\r\n        }\r\n        else\r\n        {\r\n            cout<<\"YES\"<<\"\\n\";\r\n            if(odd.size()>=3)\r\n            {\r\n                cout<<odd[0]<<\" \"<<odd[1]<<\" \"<<odd[2]<<\"\\n\";\r\n            }\r\n            else\r\n            {\r\n                cout<<odd[0]<<\" \"<<even[0]<<\" \"<<even[1]<<\"\\n\";\r\n            }\r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n}\r\n"
}