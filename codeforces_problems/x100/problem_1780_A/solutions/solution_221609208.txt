{
    "id": 221609208,
    "contestId": 1780,
    "creationTimeSeconds": 1693684865,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1780,
        "index": "A",
        "name": "Hayato and School",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1780,
        "members": [
            {
                "handle": "-BaBaYaGa-"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1674657300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\n#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\r\n#define int long long\r\n#define itn int\r\n#define rep(i,x,n) for(int i=(x);i<(n);i++)\r\n#define FOR(i,n) rep(i,0,n)\r\n#define per(i,x,n) for(int i=(x);i>(n);i--)\r\n#define ROF(i,x) for(int i=x;i>=0;i--)\r\n#define p(i,j) pair< i , j >\r\n#define pii pair<int,int>\r\n#define m(i,j) map< i , j >\r\n#define um(i,j) unordered_map< i , j >\r\n#define max_heap(i) priority_queue< i >\r\n#define min_heap(i) priority_queue< i , vector< i > ,greater< i > >\r\n#define ff first\r\n#define all(x) x.begin(),x.end()\r\n#define rall(x) x.rbegin(),x.rend()\r\n#define ss second\r\n#define pp push_back\r\n#define mini(x,y) x=min(x,y)\r\n#define maxi(x,y) x=max(x,y)\r\n#define debug(x) cout<<#x<<\" \";\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\nvoid SIO(string name=\"\")\r\n{\r\n    if(name!=\"\")\r\n    {\r\n        freopen((name+\".in\").c_str(),\"r\",stdin);\r\n        freopen((name+\".out\").c_str(),\"w\",stdout);\r\n    }\r\n}\r\ntemplate <class T> using o_set = tree<T, null_type, less<T>,rb_tree_tag, tree_order_statistics_node_update>;\r\n///order_of_key = find index of element x ( returned val is integer )\r\n///find_by_order = find value at index x ( returned val is pointer )\r\nconst double pi=2.0*acos(0.0);\r\nconst int inf=1LL<<62LL;\r\nconst int mod=1e9+7;\r\nconst int maxn=11;\r\nint lower_bound(int arr[], int N, int X)\r\n{\r\n    int mid;\r\n    int low = 0;\r\n    int high = N;\r\n    while (low < high) {\r\n        mid = low + (high - low) / 2;\r\n        if (X <= arr[mid]) {\r\n            high = mid;\r\n        }\r\n        else {\r\n            low = mid + 1;\r\n        }\r\n    }\r\n    if(low < N && arr[low] < X) {\r\n       low++;\r\n    }\r\n    return low;\r\n}\r\nint upper_bound(int arr[], int N, int X)\r\n{\r\n    int mid;\r\n    int low = 0;\r\n    int high = N;\r\n    while (low < high) {\r\n        mid = low + (high - low) / 2;\r\n        if (X >= arr[mid]) {\r\n            low = mid + 1;\r\n        }\r\n        else {\r\n            high = mid;\r\n        }\r\n    }\r\n    if(low < N && arr[low] <= X) {\r\n       low++;\r\n    }\r\n    return low;\r\n}\r\nbool ret(int x,int n,int a,int b){\r\n    int cnt = (x/a)+(x/b);\r\n    return (cnt>=n?1:0);\r\n}\r\n\r\nconst int N = 2e5+10;\r\nsigned main()\r\n{\r\n    int t;\r\n    cin >> t;\r\n    while(t--){\r\n        int n;\r\n        cin >> n;\r\n        vector<int> v(n);\r\n        int odd , even;\r\n        odd = even = 0;\r\n        for(auto &x:v){\r\n            cin >> x;\r\n            odd+=(x%2==0?0:1);\r\n            even+=(x%2==0?1:0);\r\n        }\r\n        if(odd>=3||even>=2&&odd>=1){\r\n            cout<<\"YES\"<<endl;\r\n            if(odd>=3){\r\n                int cnt  = 3;\r\n                for(int x = 0;x<n;x++){\r\n                    if(v[x]%2==1&&cnt>0){\r\n                        cout<<x+1<<' ';\r\n                        cnt--;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                int cnt1 = 2,cnt2 = 1;\r\n                for(int x = 0;x<n;x++){\r\n                    if(v[x]%2==0&&cnt1>0){\r\n                        cout<<x+1<<' ';\r\n                        cnt1--;\r\n                    }\r\n                    else if(v[x]%2==1&&cnt2>0){\r\n                        cout<<x+1<<' ';\r\n                        cnt2--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            cout<<\"NO\";\r\n        }\r\n        cout<<endl;\r\n    }\r\n}\r\n/*\r\n    3 3 3 3 3 2 2 \r\n\r\n*/"
}