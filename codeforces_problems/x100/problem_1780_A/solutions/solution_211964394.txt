{
    "id": 211964394,
    "contestId": 1780,
    "creationTimeSeconds": 1688396829,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1780,
        "index": "A",
        "name": "Hayato and School",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1780,
        "members": [
            {
                "handle": "vsiddharth365"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1674657300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n// bool prime(int n) {\r\n//     if (n <= 1) {\r\n//         return false;\r\n//     }\r\n//     if (n <= 3) {\r\n//         return true;\r\n//     }\r\n//     if (n % 2 == 0 or n % 3 == 0) {\r\n//         return false;\r\n//     }\r\n//     for (int i = 5; i * i <= n; i += 6) {\r\n//         if (n % i == 0 or n % (i + 2) == 0) {\r\n//             return false;\r\n//         }\r\n//     }\r\n//     return true;\r\n// }\r\n\r\n// struct custom_hash\r\n// {\r\n//     static uint64_t splitmix64(uint64_t x)\r\n//     {\r\n//         x += 0x9e3779b97f4a7c15;\r\n//         x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n//         x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n//         return x ^ (x >> 31);\r\n//     }\r\n\r\n//     size_t operator()(uint64_t x) const\r\n//     {\r\n//         static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n//         return splitmix64(x + FIXED_RANDOM);\r\n//     }\r\n// };\r\n\r\nvoid solve() {\r\n    int i, n;\r\n    cin >> n;\r\n    vector<int> a(n), b, c;\r\n    for (i = 0; i < n; i++) {\r\n        cin >> a[i];\r\n        if (a[i] & 1) {\r\n            b.push_back(i + 1);\r\n        } else {\r\n            c.push_back(i + 1);\r\n        }\r\n    }\r\n    if ((int) b.size() >= 1) {\r\n        if (c.size() > 1) {\r\n            cout << \"YES\\n\";\r\n            cout << b[0] << \" \" << c[0] << \" \" << c[1];\r\n        } else if (b.size() != 2) {\r\n            cout << \"YES\\n\";\r\n            cout << b[0] << \" \" << b[1] << \" \" << b[2];\r\n        } else {\r\n            cout << \"NO\";\r\n        }\r\n    } else {\r\n        cout << \"NO\";\r\n    }\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    int t;\r\n    cin >> t;\r\n    while (t--) {\r\n        solve();\r\n        cout << \"\\n\";\r\n    }\r\n    return 0;\r\n}\r\n"
}