{
    "id": 190660335,
    "contestId": 1780,
    "creationTimeSeconds": 1674740365,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1780,
        "index": "A",
        "name": "Hayato and School",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1780,
        "members": [
            {
                "handle": "garvitD"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1674657300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 9216000,
    "source": "#include<bits/stdc++.h>\r\n#define int long long\r\n#define pb push_back\r\n#define lld long double\r\n#define fi first\r\n#define pii pair<int,int>\r\n#define se second\r\n#define vi vector<int>\r\n#define vpii vector<pair<int,int>>\r\n#define loop(n) for(int i=0;i<n;i++)\r\n#define rep(i,s,e) for(int i=s;i<e;i++)\r\n#define take_in(a,n) int n; cin>>n; int a[n]; for(int i=0;i<n;i++) cin>>a[i];\r\n#define take_vector_in(a,n) int n; cin>>n; vector<int> a(n); for(int i=0;i<n;i++) cin>>a[i];\r\n#define take_in_2d(arr,n,m) int n,m; cin>>n>>m; int arr[n][m]; for(int i=0;i<n;i++) for(int j=0;j<m;j++) cin>>arr[i][j];\r\n#define take_in_2d_char(arr,n,m) int n,m; cin>>n>>m; char arr[n][m]; for(int i=0;i<n;i++) for(int j=0;j<m;j++) cin>>arr[i][j];\r\n#define ink(a,n,k) int n,k; cin>>n>>k; vector<int> a(n); for(int i=0;i<n;i++) cin>>a[i];\r\n#define out(a) for(auto x9: a) cout<<x9<<\" \"; cout<<'\\n';\r\n#define sortf(a) sort(a.begin(),a.end())\r\n#define sortr(a) sort(a.rbegin(),a.rend())\r\n#define tint(n) int n;cin>>n;\r\n#define tarr(arr,n) int arr[n];for(int i=0;i<n;i++) cin>>arr[i];\r\n#define sortarr(arr) sort(arr,arr+n)\r\n#define revsortarr(arr) sort(arr,arr+n,greater<int>())\r\n#define all(a) a.begin(),a.end()\r\n#define get_sum(a) accumulate(a.begin(),a.end(),0LL)\r\n#define get_max(a) *max_element(a.begin(),a.end())\r\n#define get_min(a) *min_element(a.begin(),a.end())\r\nconst int mod = 1000000007;\r\nusing namespace std;\r\n\r\nconst double eps = 1e-6;\r\nconst int N = 1e6;\r\nint spf[N + 1];\r\nvi primes;\r\nbool prime[N + 1];\r\nvi pf(int n)\r\n{\r\n  vi prime;\r\n  while (n != 1)\r\n  {\r\n    prime.pb(spf[n]);\r\n    n /= spf[n];\r\n  }\r\n  return prime;\r\n}\r\nvoid sieve()\r\n{\r\n  for (int i = 2; i <= N; i++)\r\n    spf[i] = i;\r\n  cout << \"-1\\n\";\r\n  prime[1] = 0;\r\n  prime[0] = 0;\r\n  for (int i = 2; i * i <= N; i++)\r\n  {\r\n    if (spf[i] == i)\r\n    {\r\n      for (int j = i * i; j <= N; j += i)\r\n        spf[j] = min(spf[j], i);\r\n    }\r\n  }\r\n  for (int i = 1; i <= N; i++)\r\n  {\r\n    if (prime[i])\r\n      primes.pb(i);\r\n  }\r\n  cout << primes.size() << '\\n';\r\n}\r\nint binExp(int x, int n, int rem)\r\n{\r\n  int res = 1;\r\n  while (n)\r\n  {\r\n    if (n % 2 == 1)\r\n    {\r\n      res *= x;\r\n      res %= rem;\r\n    }\r\n    n /= 2;\r\n    x *= x;\r\n    x %= rem;\r\n  }\r\n  return res;\r\n}\r\n\r\nvoid yesno(bool xxx) {\r\n\r\n   if(xxx)\r\n       cout<<\"YES\"<<'\\n';\r\n   else\r\n       cout<<\"NO\"<<'\\n';\r\n\r\n}\r\n\r\nint32_t main() {\r\n\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n\r\n    int t;\r\n    cin>>t;\r\n\r\n    while(t--) {\r\n        take_in(arr,n);\r\n\r\n        vector<int> odds,evens;\r\n        loop(n){\r\n            if(arr[i]%2 == 0) {\r\n                evens.push_back(i+1);\r\n            } else{\r\n                odds.push_back(i+1);\r\n            }\r\n        }\r\n\r\n        if(odds.size() == 0){\r\n            cout<<\"NO\"<<'\\n';\r\n        } else {\r\n            if(odds.size() >= 3){\r\n                cout << \"YES\" << '\\n';\r\n\r\n                cout<<odds[0]<<\" \"<<odds[1]<<\" \"<<odds[2]<<'\\n';\r\n            } else {\r\n                if(evens.size() > 1){\r\n                    cout << \"YES\" << '\\n';\r\n                    cout<<odds[0]<<\" \"<<evens[0]<<\" \"<<evens[1]<<'\\n';\r\n                } else {\r\n                    cout<<\"NO\"<<'\\n';\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
}