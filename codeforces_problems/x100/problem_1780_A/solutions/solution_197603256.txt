{
    "id": 197603256,
    "contestId": 1780,
    "creationTimeSeconds": 1678951493,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1780,
        "index": "A",
        "name": "Hayato and School",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1780,
        "members": [
            {
                "handle": "junkpiano"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1674657300
    },
    "programmingLanguage": "Java 11",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 0,
    "source": "package org.example.cf1780;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringTokenizer;\n\npublic class cf_1780_A {\n\n    // https://www.geeksforgeeks.org/fast-io-in-java-in-competitive-programming/\n    static class FastReader {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastReader() {\n            br = new BufferedReader(\n                    new InputStreamReader(System.in)\n            );\n        }\n\n        String next() {\n            while(st == null || !st.hasMoreTokens()) {\n                try {\n                    st = new StringTokenizer(br.readLine());\n                }\n                catch (IOException e){\n                    e.printStackTrace();\n                }\n            }\n\n\n            return st.nextToken();\n        }\n\n        int nextInt() { return Integer.parseInt(next()); }\n        long nextLong() { return Long.parseLong(next()); }\n        double nextDouble() { return Double.parseDouble(next()); }\n        String nextLine() {\n            String str = \"\";\n            try {\n                if(st.hasMoreTokens()) {\n                    str = st.nextToken(\"\\n\");\n                } else {\n                    str = br.readLine();\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n    }\n\n    static void solve(FastReader s) {\n        int m = s.nextInt();\n        int e = 0, o = 0;\n        int odd[] = new int[m];\n        int even[] = new int[m];\n\n        for(int i = 0; i < m; i++) {\n            int ele = s.nextInt();\n            if(ele % 2 == 0) {\n                even[e++] = i + 1;\n            } else {\n                odd[o++] = i + 1;\n            }\n        }\n\n        return;\n\n//        if(o >= 3 || (o >= 1 && e >= 2)) {\n//            System.out.println(\"YES\");\n//            if(o >= 3) {\n//                System.out.println(odd[0] + \" \" + odd[1] + \" \" + odd[2]);\n//            } else {\n//                System.out.println(odd[0] + \" \" + even[0] + \" \" + even[1]);\n//            }\n//        } else {\n//            System.out.println(\"NO\");\n//        }\n    }\n\n    public static void main(String[] args) {\n        FastReader s = new FastReader();\n        int n = s.nextInt();\n        while(n-- > 0) {\n            solve(s);\n        }\n    }\n}"
}