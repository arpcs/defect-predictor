{
    "id": 230847396,
    "contestId": 1850,
    "creationTimeSeconds": 1698851851,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1850,
        "index": "B",
        "name": "Ten Words of Wisdom",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1850,
        "members": [
            {
                "handle": "seeeeeeven7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1689950100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n/* Template starts here */\r\n\r\n#define i64 long long\r\n#define ll i64\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n#define pii pair<i64,i64>\r\n#define mp make_pair\r\n#define len(a) (i64)a.size()\r\n\r\ni64 mo = 1000000007; // This variable may be changed later\r\n\r\n#define ios_sync_false ios_base::sync_with_stdio(false)\r\n\r\nconst i64 MAXINT = 2147483647;\r\n\r\nconst i64 dx4[4] = {0, 0, 1, -1};\r\nconst i64 dy4[4] = {1, -1, 0, 0};\r\nconst i64 dx8[8] = {0, 0, 1, 1, 1, -1, -1, -1};\r\nconst i64 dy8[8] = {1, -1, 1, 0, -1, 1, 0, -1};\r\nconst i64 hdx4[4] = {0, 1, 1, 1};\r\nconst i64 hdy4[4] = {1, 1, 0, -1};\r\n\r\ntemplate<class T> T stoi(string str) {\r\n\tT ret = 0;\r\n\tfor (i64 i = 0; i < str.size(); i++) ret = ret * 10 + str[i] - '0';\r\n\treturn ret;\r\n}\r\n\r\ntemplate<class T> string itos(T i) {\r\n\tstring ret = \"\";\r\n\tbool neg = false;\r\n\tif (i == 0) return \"0\";\r\n\tif (i < 0) {\r\n\t\tneg = true;\r\n\t\ti = -i;\r\n\t}\r\n\twhile (i > 0) {\r\n\t\tret = (char)('0' + (i % 10)) + ret;\r\n\t\ti = i / 10;\r\n\t}\r\n\tif (neg) ret = '-' + ret;\r\n\treturn ret;\r\n}\r\n\r\nclass Edge {\r\npublic:\r\n\ti64 src, dst;\r\n\ti64 val;\r\n\tEdge *next;\r\n\tEdge(i64 src_, i64 dst_, i64 val_, Edge *next_):src(src_), dst(dst_), val(val_), next(next_) {} \r\n\tEdge(i64 src_, i64 dst_, Edge *next_):src(src_), dst(dst_), next(next_) {} \r\n};\r\n\r\ni64 findF(vector<i64> &f, i64 x) {\r\n\tif (f[x] == x) return x;\r\n\treturn f[x] = findF(f, f[x]);\r\n}\r\n\r\ntemplate<class T> T gcd(T a, T b) {\r\n\tif (b == 0) return a;\r\n\treturn gcd(b, a % b);\t\r\n}\r\n\r\ni64 sqr(i64 x) {\r\n\treturn x * x;\r\n}\r\n\r\ndouble tri_sum(i64 x1, i64 y1, i64 x2, i64 y2, i64 x3, i64 y3) {\r\n\tdouble l1 = sqrt(1.0 * (sqr(x1 - x2) + sqr(y1 - y2)));\r\n\tdouble l2 = sqrt(1.0 * (sqr(x2 - x3) + sqr(y2 - y3)));\r\n\tdouble l3 = sqrt(1.0 * (sqr(x3 - x1) + sqr(y3 - y1)));\r\n\tdouble p = (l1 + l2 + l3) / 2;\r\n\treturn sqrt(p * (p - l1) * (p - l2) * (p - l3));\r\n}\r\n\r\ntemplate<class T> void print1d(vector<T> &a) {\r\n\tfor (T i : a) \r\n\t\tcout << i << ' ';\r\n\tcout << endl;\r\n}\r\n\r\ntemplate<class T> void print2d(vector<vector<T>> &a) {\r\n\tcout << \"---------\" << endl;\r\n\tfor (i64 i = 0; i < a.size(); i++) {\r\n\t\tfor (i64 j = 0; j < a[i].size(); j++) {\r\n\t\t\tcout << setw(8) << setfill(' ') << a[i][j];\r\n\t\t}\r\n\t\tcout << endl;\r\n\t}\r\n}\r\n\r\ntemplate<class T> void Gauss(vector<vector<T> > a, vector<T> &ans) {\r\n\ti64 n = a.size(), m = a[0].size() - 1;\r\n\tfor (i64 i = 0; i < m; i++) {\r\n\t\tfor (i64 j = i; j < n; j++) if (a[j][i + 1] != 0) {\r\n\t\t\tif (a[i][i + 1] == 0) {\r\n\t\t\t\tfor (i64 k = 0; k <= m; k++) swap(a[i][k], a[j][k]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (i64 j = i + 1; j < n; j++) if (a[j][i + 1] != 0) {\r\n\t\t\tT p = a[j][i + 1] / a[i][i + 1];\r\n\t\t\tfor (i64 k = 0; k <= m; k++) {\r\n\t\t\t\ta[j][k] = a[j][k] - a[i][k] * p;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor (i64 i = m - 1; i >= 0; i--) {\r\n\t\tans[i] = a[i][0] / a[i][i + 1];\r\n\t\tfor (i64 j = 0; j < i; j++) {\r\n\t\t\ta[j][0] = a[j][0] - a[j][i + 1] * ans[i];\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvector<i64> string2vector(string str) {\r\n\tvector<i64> ret;\r\n\tfor (i64 i = str.length() - 1; i >= 0; i--) ret.push_back(str[i] - '0');\r\n\treturn ret;\r\n}\r\n\r\nvector<i64> mul(vector<i64> a, vector<i64> b) {\r\n\tvector<i64> ret(a.size() + b.size() - 1, 0);\r\n\tfor (unsigned i64 i = 0; i < a.size(); i++)\r\n\t\tfor (unsigned i64 j = 0; j < b.size(); j++) {\r\n\t\t\tret[i + j] += a[i] * b[j];\r\n\t\t}\r\n\tfor (unsigned i64 i = 0; i < ret.size(); i++) {\r\n\t\tif (ret[i] >= 10) {\r\n\t\t\tif (i == ret.size() - 1) ret.push_back(0);\r\n\t\t\tret[i + 1] += ret[i] / 10;\r\n\t\t\tret[i] %= 10;\r\n\t\t}\r\n\t}\r\n\twhile (ret.size() > 1 && ret[ret.size() - 1] == 0) ret.pop_back();\r\n\treturn ret;\r\n}\r\n\r\nvoid print(vector<i64> a) {\r\n\tfor (i64 i = a.size() - 1; i >= 0; i--) cout << a[i];\r\n}\r\n\r\n\r\ni64 cross(pair<i64, i64> a, pair<i64, i64> b, pair<i64, i64> c) {\r\n\treturn (b.first - a.first) * (c.second - a.second) - (c.first - a.first) * (b.second - a.second);\r\n}\r\n\r\n// Trie templates \r\ni64 cnt = 0;\r\nclass TrNode {\r\npublic:\r\n\ti64 no;\r\n\ti64 value;\r\n\tvector<TrNode *> next;\r\n\tTrNode *pre;\r\n\tTrNode *parent;\r\n\tTrNode(i64 s, TrNode *parent_ = NULL):parent(parent_) {\r\n\t\tvalue = 0;\r\n\t\tnext = vector<TrNode *>(s, NULL);\r\n\t\tno = ++cnt;\r\n\t}\r\n\tvoid addStr(string str) {\r\n\t\tTrNode *rt = this;\r\n\t\tfor (unsigned i64 i = 0; i < str.length(); i++) {\r\n\t\t\tif (rt -> next[str[i] - 'a'] == NULL) {\r\n\t\t\t\trt -> next[str[i] - 'a'] = new TrNode(26, this);\t\r\n\t\t\t}\r\n\t\t\trt = rt -> next[str[i] - 'a']; \r\n\t\t}\r\n\t\trt -> value = max(rt -> value, (i64)str.length());\r\n\t}\r\n\tvoid buildGraph() {\r\n\t\tqueue<TrNode *> Q;\r\n\t\tpre = this;\r\n\t\tfor (unsigned i64 i = 0; i < next.size(); i++) {\r\n\t\t\tif (next[i] != NULL) {\r\n\t\t\t\tQ.push(next[i]);\r\n\t\t\t\tnext[i] -> pre = this;\r\n\t\t\t}\r\n\t\t\telse next[i] = this;\r\n\t\t}\r\n\t\twhile (!Q.empty()) {\r\n\t\t\tTrNode *rt = Q.front(); Q.pop();\r\n\t\t\tfor (unsigned i64 i = 0; i < rt -> next.size(); i ++) {\r\n\t\t\t\tif (rt -> next[i] != NULL) {\r\n\t\t\t\t\tQ.push(rt -> next[i]);\r\n\t\t\t\t\trt -> next[i] -> pre = rt -> pre -> next[i];\r\n\t\t\t\t\trt -> next[i] -> value = max(rt -> next[i] -> value, rt -> next[i] -> pre -> value);\r\n\t\t\t\t}\r\n\t\t\t\telse rt -> next[i] = rt -> pre -> next[i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tvoid print() {\r\n\t\tset<i64> s; s.insert(no);\r\n\t\tqueue<TrNode *> Q; Q.push(this);\r\n\t\twhile (!Q.empty()) {\r\n\t\t\tTrNode *rt = Q.front(); Q.pop();\r\n\t\t\tfor (unsigned i64 i = 0; i < rt -> next.size(); i ++) {\r\n\t\t\t\tif (rt -> next[i] != NULL) {\r\n\t\t\t\t\tcout << rt -> no << ' ' << (char)('a' + i) << ' ' << rt -> next[i] -> no << endl;\r\n\t\t\t\t\tif (s.find(rt -> next[i] -> no) == s.end()) {\r\n\t\t\t\t\t\tQ.push(rt -> next[i]);\r\n\t\t\t\t\t\ts.insert(rt -> next[i] -> no);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\ni64 pow(i64 a, i64 b) {\r\n\tif (b == 0) return 1;\r\n\tif (b == 1) return a;\r\n\ti64 c = pow(a, b / 2);\r\n\tc = (c * c) % mo;\r\n\tif (b & 1) c = (c * a) % mo;\r\n\treturn c;\r\n}\r\n\r\nvector<i64> fac_f(1, 1);\r\ni64 fac(i64 n) {\r\n\twhile (len(fac_f) <= n) {\r\n\t\tfac_f.pb(fac_f[len(fac_f) - 1] * len(fac_f) % mo);\r\n\t}\r\n\treturn fac_f[n];\r\n}\r\n\r\ni64 vers(i64 p) {\r\n\treturn pow(p, mo - 2);\r\n}\r\n\r\ni64 comb(i64 n, i64 m) {\r\n\treturn ((fac(n) * vers(fac(n - m))) % mo * vers(fac(m))) % mo;\r\n}\r\n\r\ni64 perm(i64 n, i64 m) {\r\n\treturn fac(n) * vers(fac(m)) % mo;\r\n}\r\n\r\n/* Code starts here */\r\n\r\nint32_t main() {\r\n\tios_sync_false;\r\n\t \t\r\n#ifndef ONLINE_JUDGE\r\n\t// freopen(\".in\", \"r\", stdin);\r\n\t// freopen(\".out\", \"w\", stdout);\r\n#endif\r\n\r\n\ti64 tasks; cin >> tasks;\r\n\twhile (tasks --) {\r\n\t\ti64 n; cin >> n;\r\n\t\tvector<i64> a(n), b(n);\r\n\t\tfor (int i = 0; i < n; i++) cin >> a[i] >> b[i];\r\n\t\tint ans = -1;\r\n\t\tfor (int i = 0; i < n; i++) \r\n\t\t\tif (a[i] <= 10)\r\n\t\t\t\tif (ans == -1 || b[i] > b[ans])\r\n\t\t\t\t\tans = i;\r\n\t\tcout << ans + 1 << endl;\r\n\t}\r\n\t\t\r\n\treturn 0;\r\n\r\n\r\n}\r\n\r\n/* \r\n\r\n\u8bbe\u7f6e\u7cbe\u5ea6\r\ncout << fixed; cout.precision(6);\r\n\r\n\u8bbe\u7f6e\u5bbd\u5ea6\r\ncout.width(5);\r\n\r\n\u8bbe\u7f6e\u586b\u5145\r\ncout.width(5); cout.fill('*');\r\n\r\n\u4f18\u5148\u961f\u5217\u7684\u6bd4\u8f83\u51fd\u6570\r\nstruct Compare {\r\n    bool operator()(i64 a, i64 b) {\r\n        // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u903b\u8f91\uff0c\u8fd9\u91cc\u662f\u4ece\u5927\u5230\u5c0f\u6392\u5217\r\n        return a < b;\r\n    }\r\n};\r\n\r\n*/"
}