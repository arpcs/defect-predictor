{
    "id": 165978382,
    "contestId": 5,
    "creationTimeSeconds": 1658996713,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 5,
        "index": "E",
        "name": "Bindian Signalizing",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 5,
        "members": [
            {
                "handle": "luogu_bot2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1269100800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\nint n;\nint a[(int)(1e6+3)],l[(int)(1e6+3)],r[(int)(1e6+3)],c[(int)(1e6+3)],h[(int)(1e6+3)];\nint main(){\n\tscanf(\"%d\",&n);\n\tint p=0;\n\tfor(int i=1;i<=n;++i){\n\t    scanf(\"%d\",a+i);\n\t    if(a[i]>a[p]) p=i;\n\t}\n\tfor(int i=0;i<=n;++i) h[i]=a[(i+p)%n];\n\tfor(int i=1;i<=n;++i){\n\t    l[i]=i-1;\n\t    while(l[i]&&h[l[i]]<=h[i]) l[i]=l[l[i]];\n\t}\n\tfor(int i=1;i<=n;++i){\n\t    r[i]=i+1;\n\t    while(r[i]<n&&h[r[i]]<h[i]) r[i]=r[r[i]];\n\t    if(r[i]<n&&h[i]==h[r[i]]){\n\t\t\tc[i]=c[r[i]]+1;\n\t\t\tr[i]=r[r[i]];\n\t\t}\n\t}\n\tfor(int i=0;i<n;++i){\n\t    ans+=c[i];\n\t    if(l[i]==0&&r[i]==n) ++ans;\n\t    else ++++ans;\n\t}\n\tcout<<ans;\n\treturn 0;\n}",
    "suggested_categories": [
        "algorithms",
        "data structures",
        "c++ programming",
        "array manipulation",
        "efficiency",
        "performance optimization",
        "code quality",
        "programming logic",
        "competitive programming",
        "contest programming",
        "dynamic programming",
        "efficient memory usage",
        "coding standards",
        "code readability",
        "input/output handling",
        "loop optimization",
        "indexing",
        "error handling",
        "integer operations",
        "code maintenance"
    ]
}