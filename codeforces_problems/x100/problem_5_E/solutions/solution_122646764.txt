{
    "id": 122646764,
    "contestId": 5,
    "creationTimeSeconds": 1626417436,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 5,
        "index": "E",
        "name": "Bindian Signalizing",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 5,
        "members": [
            {
                "handle": "tao_an_chay"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1269100800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 7782400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#pragma GCC (\"Ofast\")\r\n#define nhat \"E5\"\r\n#define ll long long\r\n#define db double\r\n#define pb push_back\r\nconst int mm=1e6+5,oo=1e9+7;\r\nint n;\r\nint a[mm];\r\nmap<int,int> kt,vt;\r\nint ma1=-oo,ma2=-oo,sl1=0;\r\ndeque<int> q;\r\nvoid nhap()\r\n{\r\n    scanf(\"%d\",&n);\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        scanf(\"%d\",&a[i]); a[n+i]=a[i];\r\n        if(ma1<a[i]) ma2=ma1,ma1=a[i],sl1=1;\r\n        else if(ma1==a[i]) sl1++,ma2=-oo;\r\n        else if(sl1==1&&ma2<a[i]) ma2=a[i];\r\n    }\r\n}\r\nvoid xuli()\r\n{\r\n    ll re=0;\r\n    for(int i=1;i<=2*n;i++)\r\n    {\r\n        if(q.front()==a[i-n]&&vt[a[i-n]]&&vt[a[i-n]]<=i-n)\r\n        {\r\n            if(kt[a[i-n]]==1) q.pop_front();\r\n            kt[a[i-n]]--;\r\n        }\r\n        while(q.size())\r\n        {\r\n            int tam=q.back();\r\n            if(tam==a[i]) re+=(ll)kt[a[i]],q.pop_back();\r\n            else if(tam<a[i])\r\n            {\r\n                vt[tam]=0;\r\n                re+=(ll)kt[tam]; kt[tam]=0;\r\n                q.pop_back();\r\n            }\r\n            else {re++; break;}\r\n        }\r\n        q.push_back(a[i]); kt[a[i]]++;\r\n        if(!vt[a[i]]) vt[a[i]]=i;\r\n    }\r\n    while(q.size()) vt[q.back()]=0,kt[q.back()]=0,q.pop_back();\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        if(q.front()==a[i-n]&&vt[a[i-n]]&&vt[a[i-n]]<=i-n)\r\n        {\r\n            if(kt[a[i-n]]==1) q.pop_front();\r\n            kt[a[i-n]]--;\r\n        }\r\n        while(q.size())\r\n        {\r\n            int tam=q.back();\r\n            if(tam==a[i]) re-=(ll)kt[a[i]],q.pop_back();\r\n            else if(tam<a[i])\r\n            {\r\n                vt[tam]=0;\r\n                re-=(ll)kt[tam]; kt[tam]=0;\r\n                q.pop_back();\r\n            }\r\n            else {re--; break;}\r\n        }\r\n        q.push_back(a[i]); kt[a[i]]++;\r\n        if(!vt[a[i]]) vt[a[i]]=i;\r\n    }\r\n    if(ma2+oo)\r\n    {\r\n        int l=0;\r\n        for(int i=1;i<=n;i++)\r\n            if(a[i]==ma2) l++;\r\n        re-=(ll)l;\r\n    }\r\n    else\r\n    {\r\n        int l=0;\r\n        for(int i=1;i<=n;i++)\r\n            if(a[i]==ma1) l++;\r\n        re-=(ll)l*(l-1)/2;\r\n    }\r\n    printf(\"%lld\",re);\r\n}\r\nint main()\r\n{\r\n//    freopen(nhat\".inp\",\"r\",stdin);\r\n//    freopen(nhat\".out\",\"w\",stdout);\r\n    nhap();\r\n    xuli();\r\n}\r\n"
}