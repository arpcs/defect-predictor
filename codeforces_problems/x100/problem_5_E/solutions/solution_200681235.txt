{
    "id": 200681235,
    "contestId": 5,
    "creationTimeSeconds": 1680612441,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 5,
        "index": "E",
        "name": "Bindian Signalizing",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 5,
        "members": [
            {
                "handle": "WYJ_zzzzzzZ"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1269100800
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 6041600,
    "source": "// LUOGU_RID: 106965616\n#include<bits/stdc++.h>\r\n#define endl '\\n'\r\n#define x first\r\n#define y second\r\n#define pb push_back\r\n#define lowbit(x) (x & (-x))\r\n#define point(n) cout << fixed << setprecision(n)\r\n#define YN(flag) cout << (flag ? \"YES\" : \"NO\") << endl\r\n#define debug(x) cout << \"debug \" << x << endl\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\nconst int INF = 0x3f3f3f3f;\r\nconst ll mod = 1e9 + 7;\r\nconst double PI = acos(-1);\r\nconst double eps = 1e-7;\r\nconst int N = 500010, M = 2 * N;\r\n\r\nint n;\r\nint L[N], R[N];\r\nint cnt[N];\r\n\r\nvoid solve()\r\n{\r\n    cin >> n;\r\n    vector<int> a(n), b(n);\r\n    int pos = 0;\r\n    for(int i = 0; i < n; i++)\r\n    {\r\n        cin >> a[i];\r\n        if(a[i] > a[pos])\r\n            pos = i;\r\n    }\r\n    for(int i = 0; i <= n; i++)\r\n        b[i] = a[(i + pos) % n];\r\n    for(int i = 1; i <= n; i++)\r\n    {\r\n        L[i] = i - 1;\r\n        while(L[i] && b[i] >= b[L[i]])\r\n            L[i] = L[L[i]];\r\n    }\r\n    for(int i = n - 1; i >= 0; i--)\r\n    {\r\n        R[i] = i + 1;\r\n        while(R[i] && b[i] > b[R[i]])\r\n            R[i] = R[R[i]];\r\n        if(R[i] < n && b[i] == b[R[i]])\r\n        {\r\n            cnt[i] = cnt[R[i]] + 1;\r\n            R[i] = R[R[i]];\r\n        }\r\n    }\r\n    ll ans = 0;\r\n    for(int i = 0; i < n; i++)\r\n    {\r\n        ans += cnt[i];\r\n        if(b[i] < b[0])\r\n        {\r\n            ans += 2;\r\n            if(L[i] == 0 && R[i] == n)\r\n                ans--;\r\n        }\r\n    }\r\n    cout << ans << endl;\r\n}\r\n\r\nint main() \r\n{\r\n    ios::sync_with_stdio(false), cin.tie(nullptr);\r\n    int _ = 1;\r\n    //cin >> _;\r\n    while(_--)\r\n    {\r\n        solve();\r\n    }\r\n}"
}