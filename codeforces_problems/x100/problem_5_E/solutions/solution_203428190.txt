{
    "id": 203428190,
    "contestId": 5,
    "creationTimeSeconds": 1682423134,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 5,
        "index": "E",
        "name": "Bindian Signalizing",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 5,
        "members": [
            {
                "handle": "xhgua"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1269100800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 46,
    "timeConsumedMillis": 1340,
    "memoryConsumedBytes": 61132800,
    "source": "// LUOGU_RID: 108909748\n#include <bits/stdc++.h>\r\n\r\n#define i64 long long \r\n#define all(x) x.begin(), x.end()\r\n#define seg(a, l, r) a + l, a + r + 1\r\n#define rep(i, a, b) for(int i = (a); i <= (b); i++)\r\n#define per(i, a, b) for(int i = (a); i >= (b); i--)\r\n\r\nusing namespace std;\r\n\r\nconst int N = 1e6 + 5;\r\n\r\nint n;\r\nint a[N], t[N], L[N], R[N];\r\nbool bucket[N];\r\n\r\nstruct Query {\r\n\tint r, val, w;\r\n\t\r\n\tQuery() {}\r\n\tQuery(int _r, int _val, int _w) {\r\n\t\tr = _r; val = _val; w = _w;\r\n\t}\r\n\t\r\n\tbool operator < (const Query &rhs) const {\r\n\t\treturn r < rhs.r;\r\n\t}\r\n\t\r\n} q[N << 1];\r\n\r\nint bit[N];\r\n\r\nvoid modify(int pos, int val) {\r\n\tfor(int i = pos; i <= n; i += (i & -i)) bit[i] += val;\r\n}\r\n\r\nint query(int pos) {\r\n\tint ret = 0;\r\n\tfor(int i = pos; i > 0; i -= (i & -i)) ret += bit[i];\r\n\treturn ret;\r\n}\r\n\r\nint mymax(int x, int y) {\r\n\treturn (x < y ? y : x);\r\n}\r\n\r\nint tp;\r\nint s[N];\r\n\r\nint head[N], nxt[N << 1];\r\n\r\nnamespace IO {\r\n    static constexpr int S = 40;\r\n    #define gc() getchar()\r\n\r\n    inline void read(char& x) { for(x = gc(); !std::isalnum(x); x = gc()); }\r\n    inline void write(const char& x) { putchar(x); }\r\n\r\n    template<typename _Tp>inline void read(_Tp& x) {\r\n        x = 0; char c = gc(); bool f = 0;\r\n        for(; !std::isdigit(c); c = gc()) f |= c == 45;\r\n        for(; std::isdigit(c); c = gc()) x = x * 10 + (c ^ 48);\r\n        return f ? x = -x : 1, void();\r\n    }\r\n\r\n    template<typename _Tp>inline void write(_Tp x) {\r\n        static int stk[S]; static int top = 0;\r\n        if(!x) return putchar(48), void();\r\n        if(x < 0) putchar(45), x = -x;\r\n        while(x) stk[top++] = x % 10, x /= 10;\r\n        while(top) putchar(stk[--top] + 48);\r\n    }\r\n\r\n    template<typename _Tp, typename ...Args>\r\n    inline void read(_Tp& x, Args& ...args) {\r\n        read(x), read(args...);\r\n    }\r\n\r\n    template<typename _Tp, typename ...Args>\r\n    inline void write(_Tp x, Args ...args) {\r\n        write(x), write(args...);\r\n    }\r\n\r\n    #define writeln(x) IO::write(x, '\\n')\r\n    #define writesp(x) IO::write(x, ' ')\r\n}\r\nusing namespace IO;\r\n\r\nint main() {\r\n\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr); cout.tie(nullptr);\r\n\r\n    read(n);\r\n    rep(i, 1, n) read(t[i]);\r\n    \r\n    int p = max_element(seg(t, 1, n)) - t;\r\n    \r\n    int tot = 0;\r\n    rep(i, p, n) a[++tot] = t[i];\r\n    rep(i, 1, p - 1) a[++tot] = t[i];\r\n    \r\n   \trep(i, 1, n) {\r\n   \t\twhile(tp > 0 && a[s[tp]] < a[i]) {\r\n   \t\t\tL[s[tp]] = i;\r\n   \t\t\ttp--;\r\n   \t\t}\r\n   \t\t\r\n   \t\ts[++tp] = i;\r\n   \t}\r\n   \twhile(tp > 0) L[s[tp]] = n, tp--;\r\n   \t\r\n   \tper(i, n, 1) {\r\n   \t\twhile(tp > 0 && a[s[tp]] < a[i]) {\r\n   \t\t\tR[s[tp]] = i;\r\n   \t\t\ttp--;\r\n   \t\t}\r\n   \t\t\r\n   \t\ts[++tp] = i;\r\n   \t}\r\n   \twhile(tp > 0) R[s[tp]] = 0, tp--;\r\n   \t\r\n   \ttot = 0;\r\n   \trep(i, 2, n) {\r\n   \t\tq[++tot] = Query(L[i], i, 1);\r\n   \t\tnxt[tot] = head[L[i]];\r\n   \t\thead[L[i]] = tot;\r\n   \t\t\r\n   \t\tq[++tot] = Query(i, i, -1);\r\n   \t\tnxt[tot] = head[i];\r\n   \t\thead[i] = tot;\r\n   \t}\r\n   \t\r\n   \ti64 ans = 0;\r\n   \tint nowPos = 1;\r\n   \t\r\n   \trep(j, 1, n) {\r\n   \t\tmodify(R[j] + 1, 1);\r\n   \t\tfor(int i = head[j]; i != 0; i = nxt[i]) ans += q[i].w * query(q[i].val + 1);\r\n   \t}\r\n   \t\r\n   \tint mx = a[2];\r\n   \trep(i, 2, n) {\r\n   \t\tmx = mymax(mx, a[i]);\r\n   \t\tif(mx == a[i]) bucket[i] = true;\r\n   \t}\r\n   \t\r\n   \tmx = a[n];\r\n   \tper(i, n, 2) {\r\n   \t\tmx = mymax(mx, a[i]);\r\n   \t\tif(mx == a[i]) bucket[i] = true;\r\n   \t}\r\n   \t\r\n   \trep(i, 1, n) ans += bucket[i];\r\n   \t\r\n   \twrite(ans);\r\n\r\n    return 0;\r\n}"
}