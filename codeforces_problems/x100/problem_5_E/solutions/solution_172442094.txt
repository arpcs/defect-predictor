{
    "id": 172442094,
    "contestId": 5,
    "creationTimeSeconds": 1663409851,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 5,
        "index": "E",
        "name": "Bindian Signalizing",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 5,
        "members": [
            {
                "handle": "Alfeh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1269100800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 530,
    "memoryConsumedBytes": 216576000,
    "source": "#include <bits/stdc++.h>\r\n#define pa pair<int,int>\r\n#define f first\r\n#define s second\r\n#define sz 1000006\r\nusing namespace std;\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\n#define ordered_set tree<pair<int,int>, null_type,less<pair<int,int>>, rb_tree_tag,tree_order_statistics_node_update>\r\nordered_set bit[sz],bit1[sz];\r\nint nn;\r\nvoid update(int id,int val)\r\n{\r\n  pa v={val,id};\r\n  for(;id<=nn;id+=id&-id)\r\n    bit[id].insert(v);\r\n}\r\nint query(int id,int val)\r\n{\r\n  pa v={val,0};\r\n  int ans=0;\r\n  for(;id>0;id-=id&-id)\r\n    ans+=bit[id].order_of_key(v);\r\n  return ans;\r\n}\r\nint query(int l,int r,int val)\r\n{\r\n  if(l>r)\r\n    return 0;\r\n  return query(r,val)-query(l-1,val);\r\n}\r\n\r\nvoid update1(int id,int val)\r\n{\r\n  pa v={val,id};\r\n  for(;id<=nn;id+=id&-id)\r\n    bit1[id].insert(v);\r\n}\r\nint query1(int id,int val)\r\n{\r\n  pa v={val,0};\r\n  int ans=0;\r\n  for(;id>0;id-=id&-id)\r\n    ans+=bit1[id].order_of_key(v);\r\n  return ans;\r\n}\r\nint query1(int l,int r,int val)\r\n{\r\n  if(l>r)\r\n    return 0;\r\n  int a1=query1(r,val);\r\n  int b1=query1(l-1,val);\r\n  //cout<<r<<\" \"<<l<<\" \"<<a1<<\" \"<<b1<<\" \"<<val<<\"\\n\"; \r\n  return (r-l+1)-(a1-b1);\r\n}\r\nint main()\r\n{\r\n  ios_base::sync_with_stdio(0);\r\n  cin.tie(0);\r\n  int n;\r\n  cin>>n;\r\n  nn=n+n;\r\n  std::vector<int> v(2*n),v1(2*n,-1),v2(2*n,2*n);\r\n  for(int i=0;i<n;i++)\r\n    cin>>v[i];\r\n  for(int i=n;i<n+n;i++)\r\n    v[i]=v[i-n];\r\n  stack<int>st;\r\n  for(int i=0;i<2*n;i++)\r\n  {\r\n    while(!st.empty() && v[st.top()]<=v[i])\r\n      st.pop();\r\n    if(!st.empty())\r\n      v1[i]=st.top();\r\n    st.push(i);\r\n  }\r\n  while(!st.empty())\r\n    st.pop();\r\n  for(int i=2*n-1;i>=0;i--)\r\n  {\r\n    while(!st.empty() && v[st.top()]<=v[i])\r\n      st.pop();\r\n    if(!st.empty())\r\n      v2[i]=st.top();\r\n    st.push(i);\r\n  }\r\n  while(!st.empty())\r\n    st.pop();\r\n  for(int i=0;i<n;i++){\r\n    update(i+1,v1[i]+1);\r\n    update1(i+1,v2[i]+1);\r\n    //if(i<n)\r\n    //cout<<v1[i]<<\" \"<<v2[i]<<\"\\n\";\r\n  }\r\n  long long ans=0;\r\n  int a1=0;\r\n  std::vector<int> v3;\r\n  for(int i=0;i<n;i++)\r\n  {\r\n    if(v1[i]==-1 && v2[i]>=n)\r\n    {\r\n      v3.push_back(i);\r\n      a1++;\r\n      continue;\r\n    }\r\n    int a2=0,b2=0;\r\n    a2=query(i+2,min(n,v2[i]+1),i+2);\r\n    if(v1[n+i]<n)\r\n      b2=query1(v1[n+i]+1,n,n+i+1);\r\n    ans+=a2+b2;\r\n    if(v2[i]%n==v1[n+i]%n)\r\n      ans--;\r\n    //cout<<i<<\" \"<<a2<<\" \"<<b2<<\"\\n\";\r\n  }\r\n  for(int i=0;i<v3.size();i++)\r\n  {\r\n    if((i+1)<v3.size())\r\n    {\r\n      ans+=query(v3[i]+2,v3[i+1],v3[i]+2);\r\n    }\r\n    else{\r\n      //cout<<i<<\"\\n\";\r\n      ans+=query(v3[i]+2,n,v3[i]+2);\r\n      if(i)\r\n        ans+=query1(v3[i]+2,n,v3[0]+n+1);\r\n    }\r\n  }\r\n  ans+=(1ll*a1*(a1-1))/2;\r\n  cout<<ans<<\"\\n\";\r\n  return 0;\r\n}"
}