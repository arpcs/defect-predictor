{
    "id": 159980703,
    "contestId": 5,
    "creationTimeSeconds": 1654741307,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 5,
        "index": "E",
        "name": "Bindian Signalizing",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 5,
        "members": [
            {
                "handle": "Kanzaki_Kaori"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1269100800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 1840,
    "memoryConsumedBytes": 164454400,
    "source": "#include <cstdio>\r\n#include <cctype>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <cstring>\r\n#include <cmath>\r\nusing namespace std;\r\ninline int read () {\r\n    int x = 0, f = 1, ch = getchar();\r\n    while(!isdigit(ch)) { if(ch == '-') f = -f; ch = getchar(); }\r\n    while(isdigit(ch)) { x = x * 10 + ch - '0'; ch = getchar(); }\r\n    return x * f;\r\n}\r\nconst int N=1e6+5;\r\nint n,st[N][25],fa[N],a[N],b[N],Si[N];\r\nlong long ans;\r\nvector<int> v[N];\r\nint ask(int l,int r){\r\n    if(l>r) return max(ask(1,r),ask(l,n));\r\n    int k=log2(r-l+1);\r\n    return max(st[l][k],st[r-(1<<k)+1][k]);\r\n}\r\nint find(int x){\r\n    if(fa[x]==x) return x;\r\n    else return fa[x]=find(fa[x]);\r\n}\r\nvoid merge(int u,int v){\r\n    if(find(u)!=find(v)) Si[find(v)]+=Si[find(u)],fa[find(u)]=find(v);\r\n}\r\nint main () {\r\n    // freopen(\"in.in\", \"r\", stdin);\r\n    // freopen(\"out.out\", \"w\", stdout);\r\n    n=read();\r\n    for (int i=1;i<=n;i++) a[i]=b[i]=read();\r\n    sort(b+1,b+n+1);\r\n    int k=unique(b+1,b+n+1)-b-1;\r\n    for (int i=1;i<=n;i++) {\r\n        a[i]=lower_bound(b+1,b+k+1,a[i])-b;\r\n        v[a[i]].push_back(i);\r\n        st[i][0]=a[i]; fa[i]=i;Si[i]=1;\r\n        // printf(\"%d\\n\",a[i]);\r\n    }\r\n    for (int i=1;i<=20;i++)\r\n        for (int j=1;j+(1<<i)-1<=n;j++)\r\n            st[j][i]=max(st[j][i-1],st[j+(1<<i-1)][i-1]);\r\n    int res=n;\r\n    // printf(\"%d\\n\",b[ask(2,5)]);\r\n    for (int i=1;i<=k;i++){\r\n        int si=v[i].size();\r\n        res-=si;\r\n        if(res){\r\n            if(res==1) ans+=si;\r\n            else ans+=si*2;\r\n        }\r\n        if(si==1) continue;\r\n        // printf(\"%d\\n\",v[i][0]);fflush(stdout);\r\n        v[i].push_back(v[i][0]);\r\n        for (int j=0;j<si;j++)\r\n            if(ask(v[i][j],v[i][j+1])==i) {\r\n                // printf(\"%d %d\\n\",v[i][j],v[i][j+1]);\r\n                merge(v[i][j],v[i][j+1]);\r\n            }\r\n        for (int j=0;j<si;j++){\r\n            if(fa[v[i][j]]==v[i][j]) ans+=(Si[v[i][j]]-1)*Si[v[i][j]]/2;\r\n        }\r\n    }\r\n    printf(\"%lld\\n\",ans);\r\n    return 0;\r\n}"
}