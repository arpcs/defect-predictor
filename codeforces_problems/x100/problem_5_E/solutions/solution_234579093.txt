{
    "id": 234579093,
    "contestId": 5,
    "creationTimeSeconds": 1701086067,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 5,
        "index": "E",
        "name": "Bindian Signalizing",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 5,
        "members": [
            {
                "handle": "CDuongg"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1269100800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 46,
    "timeConsumedMillis": 3992,
    "memoryConsumedBytes": 152780800,
    "source": "\r\n#pragma GCC optimize(\"Ofast,unroll-loops\")\r\n#pragma GCC target(\"avx2,fma,bmi,bmi2,sse4.2,popcnt,lzcnt\")\r\n\r\n\r\n#include <bits/stdc++.h>\r\n#define taskname \"\"\r\n#define all(x) x.begin(), x.end()\r\n#define rall(x) x.rbegin(), x.rend()\r\n#define i64 long long\r\n#define pb push_back\r\n#define ff first\r\n#define ss second\r\n#define isz(x) (int)x.size()\r\nusing namespace std;\r\n\r\nconst int mxN = 1e6 + 5;\r\nconst int mod = 1e9 + 7;\r\nconst i64 oo = 1e18;\r\n\r\ni64 res;\r\nint n, a[mxN], cnt[mxN];\r\nmap<int, vector<int>> mp;\r\nvector<int> reset;\r\n\r\nvoid solve() {\r\n    cin >> n;\r\n    for (int i = 1; i <= n; ++i) {\r\n        cin >> a[i];\r\n        mp[-a[i]].emplace_back(i);\r\n    }\r\n    set<int> s;\r\n    for (auto [_, v] : mp) {\r\n        map<int, int> mp;\r\n        for (int pos : v) {\r\n            auto it = s.lower_bound(pos);\r\n            int val = (it == s.end() ? (s.empty() ? 0 : *s.begin()) : *it);\r\n            res += min(isz(s), 2) + cnt[val]++;\r\n            reset.emplace_back(val);\r\n        }\r\n        for (int pos : v) s.insert(pos);\r\n        while (not reset.empty()) cnt[reset.back()]--, reset.pop_back();\r\n    }\r\n    cout << res << endl;\r\n}\r\n\r\nsigned main() {\r\n\r\n#ifndef CDuongg\r\n    if(fopen(taskname\".inp\", \"r\"))\r\n        assert(freopen(taskname\".inp\", \"r\", stdin)), assert(freopen(taskname\".out\", \"w\", stdout));\r\n#else\r\n    freopen(\"bai3.inp\", \"r\", stdin);\r\n    freopen(\"bai3.out\", \"w\", stdout);\r\n    auto start = chrono::high_resolution_clock::now();\r\n#endif\r\n\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    int t = 1; //cin >> t;\r\n    while(t--) solve();\r\n\r\n#ifdef CDuongg\r\n   auto end = chrono::high_resolution_clock::now();\r\n   cout << \"\\n\"; for(int i = 1; i <= 100; ++i) cout << '=';\r\n   cout << \"\\nExecution time: \" << chrono::duration_cast<chrono::milliseconds> (end - start).count() << \"[ms]\" << endl;\r\n#endif\r\n\r\n}\r\n"
}