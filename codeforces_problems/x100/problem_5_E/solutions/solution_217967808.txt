{
    "id": 217967808,
    "contestId": 5,
    "creationTimeSeconds": 1691562478,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 5,
        "index": "E",
        "name": "Bindian Signalizing",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 5,
        "members": [
            {
                "handle": "ROLEX_6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1269100800
    },
    "programmingLanguage": "Python 3",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 0,
    "source": "def can_see_signal(heights, hill1, hill2):\r\n    if hill1 == hill2:\r\n        return True\r\n    \r\n    min_height = min(heights[hill1], heights[hill2])\r\n    max_height = max(heights[hill1], heights[hill2])\r\n    \r\n    for i in range(len(heights)):\r\n        if i != hill1 and i != hill2:\r\n            if heights[i] >= max_height:\r\n                return False\r\n    \r\n    return True\r\n\r\ndef count_visible_signals(heights):\r\n    n = len(heights)\r\n    count = 0\r\n    \r\n    for hill1 in range(n):\r\n        for hill2 in range(hill1 + 1, n):\r\n            if can_see_signal(heights, hill1, hill2):\r\n                count += 1\r\n    \r\n    return count\r\n\r\n# Get user input for hill heights\r\nn = int(input(\"Enter the number of hills: \"))\r\nheights = []\r\nfor i in range(n):\r\n    height = int(input(f\"Enter the height of hill {i + 1}: \"))\r\n    heights.append(height)\r\n\r\nresult = count_visible_signals(heights)\r\nprint(\"Number of pairs of watchmen able to see each other's signals:\", result)\r\n"
}