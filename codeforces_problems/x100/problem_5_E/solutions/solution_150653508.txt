{
    "id": 150653508,
    "contestId": 5,
    "creationTimeSeconds": 1648072689,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 5,
        "index": "E",
        "name": "Bindian Signalizing",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 5,
        "members": [
            {
                "handle": "KiaRez"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1269100800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <string>\r\n#include <stack>\r\n#include <math.h>\r\n#include <set>\r\n\r\nusing namespace std;\r\n\r\nint n, ans, i;\r\nset <pair<int, int>> sorted;\r\n\r\nint main () {\r\n    cin >> n;\r\n\r\n    for (i = 0; i < n; i++) {\r\n        int tmp; cin >> tmp;\r\n\r\n        if (sorted.size()>0) {\r\n            auto it2 = sorted.lower_bound({tmp, 0});\r\n            auto it = sorted.end(); it--;\r\n            \r\n            if (it2 == sorted.end()) ans += i;\r\n            else ans += (i-(*it2).second);\r\n            if (tmp >= (*it).first) {\r\n                sorted.clear();\r\n            }\r\n        }\r\n\r\n        sorted.insert(make_pair(tmp, i));\r\n    }\r\n\r\n    cout << ans << endl;\r\n\r\n    return 0;\r\n}"
}