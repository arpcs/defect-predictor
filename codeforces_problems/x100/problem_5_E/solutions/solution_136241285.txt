{
    "id": 136241285,
    "contestId": 5,
    "creationTimeSeconds": 1637402761,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 5,
        "index": "E",
        "name": "Bindian Signalizing",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 5,
        "members": [
            {
                "handle": "xmcwa"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1269100800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "//ces\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nint n;\r\nint h[1000005];\r\nint c[1000005];\r\nint Stack[1000005];\r\nint size;\r\nlong long ans;\r\nint MAX,adr,tot;\r\nint count[1000005];\r\nint num[1000005];\r\nbool vis[1000005];\r\nstruct node{\r\n\tint x,y;\r\n}S[1000005];\r\nint cnt;\r\nbool cmp(node a,node b){\r\n\treturn a.x<b.x;\r\n}\r\nlong long tree[1000005];\r\nint lowbit(int x){return x&(-x);} \r\nvoid update(int x,int add){\r\n\twhile(x<=cnt){\r\n\t\ttree[x]+=add;\r\n\t\tx+=lowbit(x);\r\n\t}\r\n}\r\nint query(int x){\r\n\tint ans=0;\r\n\twhile(x!=0){\r\n\t\tans+=tree[x];\r\n\t\tx-=lowbit(x);\r\n\t}\r\n\treturn ans;\r\n}\r\nint q1,q2,q3;\r\nint main(){\r\n\tcin>>n;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tcin>>h[i];\r\n\t\tif(h[i]>=MAX){\r\n\t\t\tMAX=h[i];\r\n\t\t\tadr=i;\r\n\t\t}\r\n\t}\r\n\ttot=n;\r\n\tfor(int i=adr;i>=1;i--){\r\n\t\tc[tot--]=h[i];\r\n\t}\r\n\tfor(int i=n;i>adr;i--){\r\n\t\tc[tot--]=h[i];\r\n\t}\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tS[i].x=c[i];\r\n\t\tS[i].y=i;\r\n\t}\r\n\tsort(S+1,S+n+1,cmp);\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tif(S[i].x!=S[i-1].x)++cnt;\r\n\t\tnum[S[i].y]=cnt;\r\n\t}\r\n\tvis[n]=true;\r\n\tfor(int i=n;i>=1;i--){\r\n\t\tq1=query(num[i]);\r\n\t\tq2=query(cnt);\r\n\t\tq3=query(cnt-1);\r\n\t\tans+=q1;\r\n\t\tif(num[i]==cnt){\r\n\t\t\tvis[i]=true;\r\n\t\t}\r\n//\t\tfor(int j=1;j<=cnt;j++)cout<<query(j)-query(j-1)<<\" \";\r\n//\t\tcout<<endl;\r\n//\t\tcout<<query(num[i])<<endl;\r\n\t\tif(q2-q1){\r\n//\t\t\tcout<<query(cnt)-query(num[i])<<endl;\r\n\t\t\tif((q3-q1==0)&&q2-q3==1){\r\n\t\t\t\tvis[i]=true;\r\n\t\t\t}\r\n\t\t\tans++;\r\n\t\t}\r\n//\t\tcout<<ans<<endl;\r\n//\t\tfor(int j=size;j>=1;j--)cout<<c[Stack[j]]<<\" \";\r\n//\t\tcout<<endl;\r\n\t\twhile(size>=1&&c[Stack[size]]<c[i]){\r\n\t\t\tupdate(num[Stack[size]],-1);\r\n\t\t\tsize--;\r\n\t\t}\r\n\t\tStack[++size]=i;\r\n\t\tupdate(num[i],1);\r\n\t}\r\n//\tfor(int j=size;j>=1;j--)cout<<c[Stack[j]]<<\" \";\r\n//\tcout<<endl;\r\n//\tfor(int i=1;i<=n;i++)cout<<vis[i]<<\" \";\r\n//\tcout<<endl;\r\n\tfor(int i=size;i>=1;i--){\r\n\t\tif(vis[Stack[i]])continue;\r\n\t\tans++;\r\n\t}\r\n\tcout<<ans;\r\n\treturn 0;\r\n}"
}