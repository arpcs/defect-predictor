{
    "id": 111588648,
    "contestId": 878,
    "creationTimeSeconds": 1617215810,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 878,
        "members": [
            {
                "handle": "couplefire"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509029100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 32051200,
    "source": "#include<bits/stdc++.h>\r\n#define int long long\r\nusing namespace std;\r\n\r\nconst int N = 1e5 + 5, M = 18, mod = 1e9 + 7;\r\n\r\n\r\nint n, m, a[N], l, r, pref[N], p[N], op[N], pr[M][N], dp[M][N];\r\n\r\ninline int get(int l, int r){\r\n    if(l > r){\r\n        return 0;\r\n    }\r\n    int ans = 0;\r\n    for(int i = M - 1; i >= 0; i--){\r\n        if(pr[i][r] >= l){\r\n            ans = (ans + dp[i][r]) % mod;\r\n            r = pr[i][r];\r\n        }\r\n    }\r\n    if(l <= r){\r\n        ans += ((pref[r] - pref[l - 1] + mod) * op[l - 1]) % mod;\r\n        ans %= mod;\r\n    }\r\n    return ans;\r\n}\r\n\r\nmain(){\r\n    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n    p[0] = op[0] = 1;\r\n    cin >> n >> m;\r\n    for(int i = 1; i <= n; i++){\r\n        cin >> a[i];\r\n        p[i] = (p[i - 1] * 2) % mod;\r\n        op[i] = (op[i - 1] * (mod + 1) / 2) % mod;\r\n        pref[i] = (pref[i - 1] + p[i] * (a[i] + mod)) % mod;\r\n    }\r\n    for(int i = 1; i <= n; i++){\r\n        int sum = 0;\r\n        for(int j = i; j >= 1; j--){\r\n            sum = (sum + a[j]) * 2;\r\n            if(sum <= 0){\r\n                pr[0][i] = j - 1;\r\n                dp[0][i] = (sum % mod + mod) % mod;\r\n                break;\r\n            }\r\n            else if(sum >= mod + mod){\r\n                pr[0][i] = -1;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    for(int i = 1; i < M; i++){\r\n        for(int j = 1; j <= n; j++){\r\n            if(pr[i - 1][j] == -1){\r\n                pr[i][j] = -1;\r\n            }\r\n            else{\r\n                pr[i][j] = pr[i - 1][pr[i - 1][j]];\r\n                dp[i][j] = (dp[i - 1][j] + dp[i - 1][pr[i - 1][j]]) % mod;\r\n            }\r\n        }\r\n    }\r\n    for(int i = 1; i <= m; i++){\r\n        cin >> l >> r;\r\n        cout << ((a[l] + get(l + 1, r)) % mod + mod) % mod << \"\\n\";\r\n    }\r\n}\r\n"
}