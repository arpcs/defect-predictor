{
    "id": 63988742,
    "contestId": 878,
    "creationTimeSeconds": 1572611557,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 878,
        "members": [
            {
                "handle": "kingofpupil"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509029100
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 10035200,
    "source": "#include <cstdio>\r\n#include <cctype>\r\n#include <algorithm>\r\n#define int long long\r\n#define N 100010\r\n#define TT 1000000007\r\n#define pow powww\r\nusing namespace std;\r\n\r\ninline int read()\r\n{\r\n\tint ret=0; bool flg=0; char ch=getchar();\r\n\twhile (!isdigit(ch)) flg^=!(ch^'-'), ch=getchar();\r\n\twhile (isdigit(ch)) ret=(ret<<1)+(ret<<3)+(ch^'0'), ch=getchar();\r\n\treturn flg?-ret:ret;\r\n}\r\nstruct data{\r\n\tint l,r,id;\r\n\tbool operator < (const data A) const {return r<A.r;}\r\n}q[N];\r\n\r\nint f[N], sum[N], pre[N], cal[N], pow[N], n, a[N], m, Ans[N], block[N];\r\n\r\nint find(int x)\r\n{\r\n\treturn f[x]==x?x:f[x]=find(f[x]);\r\n}\r\nvoid merge(int x,int y)\r\n{\r\n\tf[x]=f[y], pre[y]=pre[x];\r\n\tif ((x-pre[x]>31&&sum[y]>0)||sum[x]+(sum[y]<<x-pre[x])>TT) sum[y]=TT;\r\n\telse sum[y]=sum[x]+(sum[y]<<x-pre[x]);\r\n}\r\nint Ask(int x,int y)\r\n{\r\n\treturn (cal[x]-cal[y+1]*pow[y-x+1]%TT+TT)%TT;\r\n}\r\nsigned main()\r\n{\r\n\tn=read(), m=read();\r\n\tfor (int i=1;i<=n;i++) sum[i]=a[i]=read(), pre[i]=i-1, f[i]=i;\r\n\tfor (int i=1;i<=m;i++) q[i]=(data){read(), read(), i};\r\n\tpow[0]=1; for (int i=1;i<=n;i++) pow[i]=pow[i-1]*2%TT;\r\n\tfor (int i=n;i>=0;i--) cal[i]=(a[i]+(cal[i+1]<<1)%TT+TT)%TT;\r\n\t\r\n\tsort(q+1,q+m+1);\r\n\tint now=1;\r\n\tfor (int i=1;i<=n&&now<=m;i++){\r\n\t\twhile (sum[i]>=0&&pre[i]>0)\r\n\t\t merge(pre[i],i);\r\n\t\tif (pre[i]!=0) block[i]=block[pre[i]]+(cal[pre[i]+1]-cal[i+1]*pow[i-pre[i]]%TT+TT)%TT*2%TT;\r\n\t\telse block[i]=(cal[pre[i]+1]-cal[i+1]*pow[i-pre[i]]%TT+TT)%TT;\r\n\t\twhile (q[now].r==i&&now<=m){\r\n\t\t\tint pos=find(q[now].l);\r\n\t\t\tAns[q[now].id]=block[i]-block[pos]+Ask(q[now].l,pos); \r\n\t\t\tnow++;\r\n\t\t}\r\n\t}\r\n\tfor (int i=1;i<=m;i++) printf(\"%lld\\n\",(Ans[i]+TT)%TT);\r\n\treturn 0;\r\n}"
}