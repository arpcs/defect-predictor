{
    "id": 140839090,
    "contestId": 878,
    "creationTimeSeconds": 1640634673,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 878,
        "members": [
            {
                "handle": "Davoth"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509029100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 30515200,
    "source": "#include <bits/stdc++.h>\n/*#pragma GCC optimize(\"Ofast,unroll-loops\")\n#pragma comment(linker, \"/stack:200000000\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma,tune=native\")*/\n/*#pragma GCC optimize(\"O2\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"avx,avx2,sse,sse2,fma\")*/\nusing namespace std;\nusing ll=long long int;\nusing ld=long double;\nusing pll=pair<ll,ll>;\nusing pii=pair<int,int>;\nusing point=complex<ld>;\n#define F first\n#define S second\n//#define X real()\n//#define Y imag()\n#define pb push_back\n#define mp make_pair\n#define lc v<<1\n#define rc v<<1|1\n#define fast_io ios::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);\n#define kill(x) cout << x << '\\n';exit(0)\n#define killshayan kill(\"done!\\n\")\nconst int N=1e5+10,LN=18,M=1e8+10,SQ=256,B=737,inf=1e9;\nconst ll INF=1e18;\nconst ld ep=1e-7;\nconst int MH=1000696969,MD=998244353,MOD=1000000007;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\n#define ordered_set tree<pll, null_type,less<pll>, rb_tree_tag,tree_order_statistics_node_update>\nll pow(ll x, ll y, ll mod){\n    ll ans=1;\n    while (y != 0) {\n        if (y & 1) ans = ans * x % mod;\n        y >>= 1;\n        x = x * x % mod;\n    }\n    return ans;\n}\nll n,q,a[N],f[LN][N],g[LN][N],p[N];\nint main(){\n    fast_io;\n    cin >> n >> q;\n    for(ll i=1; i<=n; i++){\n        cin >> a[i];\n        ll s=0;\n        p[i]=(pow(2,i,MOD)*a[i]+p[i-1])%MOD;\n        for(ll j=0; i-j>0; j++){\n            s=s*2+a[i-j];\n            if(s>1e9){\n                break;\n            }else if(s<=0){\n                f[0][i]=i-j-1;\n                break;\n            }else if(j && i-j-f[0][i-j]>=30) break;\n        }\n        g[0][i]=(p[i]-p[f[0][i]]+MOD)%MOD*pow(pow(2,f[0][i],MOD),MOD-2,MOD)%MOD;\n    }\n    for(ll i=1; i<LN; i++){\n        for(ll j=1; j<=n; j++){\n            f[i][j]=f[i-1][f[i-1][j]];\n            g[i][j]=(g[i-1][j]+g[i-1][f[i-1][j]])%MOD;\n        }\n    }\n    while(q--){\n        ll l,r,ans=0;\n        cin >> l >> r;\n        ans=(a[l]+MOD)%MOD;\n        for(ll i=LN; i--; ){\n            if(f[i][r]>=l){\n                ans=(ans+g[i][r])%MOD;\n                r=f[i][r];\n            }\n        }\n        ans=(ans+(p[r]-p[l]+MOD)%MOD*pow(pow(2,l,MOD),MOD-2,MOD))%MOD;\n        cout << ans << '\\n';\n    }\n    return 0;\n}\n"
}