{
    "id": 63292260,
    "contestId": 878,
    "creationTimeSeconds": 1571918698,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 878,
        "members": [
            {
                "handle": "xukuan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509029100
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 45568000,
    "source": "#include<bits/stdc++.h>\r\n#include<iostream>\r\n#include<cstdio>\r\n#define ll long long\r\nusing namespace std;\r\n\r\nconst ll N=500010,mod=1000000007;\r\nll n,m,a[N],sum[N],father[N],Prev[N],two[N],suf[N],val[N],ans[N];\r\nstruct node{\r\n\tll l,r,id;\r\n}ask[N];\r\n\r\ninline ll read(){\r\n\tll x=0,tmp=1;\r\n\tchar ch=getchar();\r\n\twhile(!isdigit(ch)){\r\n\t\tif(ch=='-') tmp=-1;\r\n\t\tch=getchar();\r\n\t}\r\n\twhile(isdigit(ch)){\r\n\t\tx=(x<<3)+(x<<1)+(ch^48);\r\n\t\tch=getchar();\r\n\t}\r\n\treturn tmp*x;\r\n}\r\n\r\ninline void write(ll x){\r\n\tif(x<0){\r\n\t\tputchar('-');\r\n\t\tx=-x;\r\n\t}\r\n\tll y=10,len=1;\r\n\twhile(y<=x){\r\n\t\ty=(y<<3)+(y<<1);\r\n\t\tlen++;\r\n\t}\r\n\twhile(len--){\r\n\t\ty/=10;\r\n\t\tputchar(x/y+48);\r\n\t\tx%=y;\r\n\t}\r\n}\r\n\r\nll searchfather(ll v){\r\n\treturn father[v]==v?father[v]:father[v]=searchfather(father[v]);\r\n}\r\n\r\ninline void Union(ll x,ll y){\r\n\tfather[x]=y; Prev[y]=Prev[x];\r\n\tll len=x-Prev[x];\r\n\tif(len>30&&sum[y]>0||sum[x]+(sum[y]<<len)>mod) sum[y]=mod;\r\n\telse sum[y]=sum[x]+(sum[y]<<len);\r\n}\r\n\r\ninline ll query(ll l,ll r){\r\n\treturn (suf[l]-suf[r+1]*two[r-l+1]%mod+mod)%mod;\r\n}\r\n\r\ninline bool cmp(node a,node b){\r\n\treturn a.r<b.r;\r\n}\r\n\r\nint main(){\r\n\tn=read(); m=read();\r\n\tfor(ll i=1; i<=n; i++){\r\n\t\tsum[i]=a[i]=read();\r\n\t\tPrev[i]=i-1;\r\n\t\tfather[i]=i;\r\n\t}\r\n\tfor(ll i=n; i>=1; i--) suf[i]=(suf[i+1]*2+a[i]+mod)%mod;\r\n\ttwo[0]=1; for(ll i=1; i<=n; i++) two[i]=two[i-1]*2%mod;\r\n\tfor(ll i=1; i<=m; i++){\r\n\t\task[i].l=read();\r\n\t\task[i].r=read();\r\n\t\task[i].id=i;\r\n\t}\r\n\tsort(ask+1,ask+1+m,cmp);\r\n\tll j=0;\r\n\tfor(ll i=1; i<=n; i++){\r\n\t\twhile(Prev[i]&&sum[i]>=0) Union(Prev[i],i);\r\n\t\tval[i]=(val[Prev[i]]+query(Prev[i]+1,i)*2)%mod;\r\n\t\twhile(ask[j+1].r==i){\r\n\t\t\tll x=searchfather(ask[++j].l);\r\n\t\t\tans[ask[j].id]=(val[i]-val[x]+query(ask[j].l,x)+mod)%mod;\r\n\t\t}\r\n\t}\r\n\tfor(ll i=1; i<=m; i++){\r\n\t\twrite(ans[i]); putchar('\\n');\r\n\t}\r\n\treturn 0;\r\n}",
    "suggested_categories": [
        "algorithms",
        "data structures",
        "dynamic programming",
        "bit manipulation",
        "mathematics",
        "sorting",
        "searching",
        "modular arithmetic",
        "number theory",
        "graph theory",
        "code optimization",
        "c++ programming",
        "io optimization",
        "code style",
        "code readability",
        "variable naming",
        "code efficiency",
        "optimized memory usage",
        "code refactoring"
    ]
}