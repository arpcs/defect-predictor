{
    "id": 31910260,
    "contestId": 878,
    "creationTimeSeconds": 1509423490,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 878,
        "members": [
            {
                "handle": "StarCuriosity"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509029100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 16076800,
    "source": "//#pragma GCC optimize(\"Ofast\")\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#pragma GCC diagnostic ignored \"-Wmissing-declarations\"\r\n#define FINAL_OUT(x) {cout << (x) << '\\n'; exit(0);}\r\n\r\nint const mod = 1e9+7;\r\n\r\ninline void safe_add(int& x, const int y)\r\n{\r\n    x += y;\r\n    if (x >= mod)\r\n        x -= mod;\r\n}\r\n\r\ninline int safe_mul(const int& x, const int& y)\r\n{\r\n    return x * 1LL * y % mod;\r\n}\r\n\r\n\r\nint const maxn = 100005;\r\nint const maxl = 18;\r\nint pow2[maxn];\r\nint pinv[maxn];\r\nint lind[maxn][maxl];\r\nint psum[maxn][maxl];\r\nint s[maxn];\r\nint a[maxn];\r\n\r\n\r\ninline int get(int l, int r)\r\n{\r\n    int res = s[r];\r\n    safe_add(res, mod - s[l - 1]);\r\n    return safe_mul(res, pinv[l - 1]);\r\n}\r\n\r\nint main()\r\n{\r\n//    freopen(\"in.txt\", \"r\", stdin);\r\n//    freopen(\"out.txt\", \"w\", stdout);\r\n    ios_base::sync_with_stdio(false);\r\n\r\n    pow2[0] = 1;\r\n    pinv[0] = 1;\r\n    for(int i = 1; i < maxn; ++i)\r\n    {\r\n        pow2[i] = safe_mul(2, pow2[i - 1]);\r\n        pinv[i] = safe_mul((mod + 1)/2, pinv[i - 1]);\r\n    }\r\n\r\n    int n,q;\r\n    cin >> n >> q;\r\n    for(int i = 1; i <= n; ++i)\r\n        cin >> a[i];\r\n\r\n    for(int i = 1; i <= n; ++i)\r\n    {\r\n        s[i] = s[i - 1];\r\n        safe_add(s[i], safe_mul(a[i], pow2[i - 1]));\r\n    }\r\n\r\n    int const inf = 1000000009;\r\n    for(int i = 1; i <= n; ++i)\r\n    {\r\n        long long cur = 0;\r\n        for(int j = i; j >= 1; --j)\r\n        {\r\n            cur = cur * 2 + a[j];\r\n            if (cur < 0)\r\n            {\r\n                lind[i][0] = j - 1;\r\n                break;\r\n            }\r\n            if (cur > inf)\r\n                break;\r\n        }\r\n        psum[i][0] = get(lind[i][0] + 1, i);\r\n    }\r\n\r\n    for(int j = 1; j < maxl; ++j)\r\n    for(int i = 1; i <= n; ++i)\r\n    {\r\n        int curp = lind[i][j - 1];\r\n        psum[i][j] = psum[i][j - 1];\r\n        safe_add(psum[i][j], psum[curp][j - 1]);\r\n        safe_add(psum[i][j], psum[curp][j - 1]);\r\n        lind[i][j] = lind[curp][j - 1];\r\n    }\r\n\r\n    stringstream out;\r\n    while (q--)\r\n    {\r\n        int l,r;\r\n        cin >> l >> r;\r\n\r\n        int res = 0;\r\n        for(int j = maxl - 1; j >= 0; --j)\r\n        {\r\n            int curp = lind[r][j];\r\n            if (curp >= l)\r\n            {\r\n                safe_add(res, psum[r][j]);\r\n                safe_add(res, psum[r][j]);\r\n                r = curp;\r\n            }\r\n        }\r\n        safe_add(res, get(l, r));\r\n        out << res << '\\n';\r\n    }\r\n    cout << out.str();\r\n}\r\n\r\n"
}