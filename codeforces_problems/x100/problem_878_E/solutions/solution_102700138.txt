{
    "id": 102700138,
    "contestId": 878,
    "creationTimeSeconds": 1609254135,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 878,
        "members": [
            {
                "handle": "Vxlimo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509029100
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 6860800,
    "source": "#include <iostream>\r\n#include <cstdlib>\r\n#include <cstdio>\r\n#include <vector>\r\n#define ll long long\r\nusing namespace std;\r\ninline int read()\r\n{\r\n\tint f = 1, x = 0;\r\n\tchar ch;\r\n\r\n\tdo{\r\n\t\tch = getchar();\r\n\t\tif (ch == '-')\r\n\t\t\tf = -1;\r\n\t}while(ch < '0' || ch > '9');\r\n\tdo{\r\n\t\tx = x * 10 + ch - '0';\r\n\t\tch = getchar();\r\n\t}while(ch >= '0' && ch <= '9');\r\n\treturn f * x;\r\n}\r\nconst int N = 1e5;\r\nconst int mod = 1e9 + 7;\r\n\r\nint n, q;\r\nint pow2[N + 1];\r\nint val[N + 1], fa[N + 1], sz[N + 1];\r\nll sum1[N + 1], sum2[N + 1], suml[N + 1], sumr[N + 1];\r\nvector<pair<int, int> > query[N + 1];\r\nll ans[N + 1];\r\n\r\ninline int gfa(int x)\r\n{\r\n\tif (fa[x] != x)\r\n\t\tfa[x] = gfa(fa[x]);\r\n\treturn fa[x];\r\n}\r\ninline void merge(int x, int y)\r\n{\r\n\tfa[y] = x;\r\n\tif ((sz[x] > 30 && sum1[x] > 0) || sum1[x] + (sum1[y] << sz[x]) >= 2e9)\r\n\t\tsum1[x] = 2e9;\r\n\telse\r\n\t\tsum1[x] = sum1[x] + (sum1[y] << sz[x]);\r\n\tsum2[x] = (sum2[x] + sum2[y] * pow2[sz[x]] % mod) % mod;\r\n\tsz[x] += sz[y];\r\n\treturn;\r\n}\r\nint main()\r\n{\r\n\tn = read();\r\n\tq = read();\r\n\tpow2[0] = 1;\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tsum1[i] = sum2[i] = val[i] = read();\r\n\t\tfa[i] = i;\r\n\t\tsz[i] = 1;\r\n\t\tpow2[i] = 2ll * pow2[i - 1] % mod;\r\n\t}\r\n\tsumr[n] = val[n];\r\n\tfor (int i = n - 1; i >= 1; i--)\r\n\t\tsumr[i] = (sumr[i + 1] * 2 % mod + val[i]) % mod;\r\n\tfor (int i = 1; i <= q; i++) {\r\n\t\tint l = read(), r = read();\r\n\t\tquery[r].push_back(make_pair(i, l));\r\n\t}\r\n\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\twhile (gfa(i) > 1 && sum1[gfa(i)] >= 0)\r\n\t\t\tmerge(gfa(gfa(i) - 1), gfa(i));\r\n\t\tsuml[gfa(i)] = (suml[gfa(gfa(i) - 1)] + sum2[gfa(i)] + mod) % mod;\r\n\t\tfor (int j = 0; j < query[i].size(); j++) {\r\n\t\t\tint num = query[i][j].first, l = query[i][j].second, r = gfa(l) + sz[gfa(l)] - 1;\r\n\t\t\tans[num] = ((suml[gfa(i)] - suml[gfa(l)] + mod) * 2 % mod + (sumr[l] - (sumr[r + 1] * pow2[r - l + 1] % mod) + mod) % mod) % mod;\r\n\t\t}\r\n\t}\r\n\r\n\tfor (int i = 1; i <= q; i++)\r\n\t\tprintf(\"%I64d\\n\", ans[i]);\r\n\treturn 0;\r\n}\r\n"
}