{
    "id": 211237235,
    "contestId": 878,
    "creationTimeSeconds": 1687866629,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 878,
        "index": "E",
        "name": "Numbers on the blackboard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 878,
        "members": [
            {
                "handle": "Antichain"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1509029100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 16691200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\nconst ll maxn=1e5+5, inf=1e15, mo=1e9+7;\r\n\r\nll a[maxn], ans[maxn], sum[maxn], pw[maxn];\r\n\r\nstruct node {\r\n    ll l, id;\r\n};\r\nvector<node> g[maxn];\r\n\r\nstruct node2 {\r\n    ll i, sum, ans, sans;\r\n};\r\n\r\nll qpow(ll a,ll p) {\r\n    ll res=1;\r\n    while(p) {\r\n        if(p&1) res=res*a%mo;\r\n        a=a*a%mo;\r\n        p>>=1;\r\n    }\r\n    return res;\r\n}\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0), cout.tie(0);\r\n    ll n, q; cin>>n>>q;\r\n    pw[0]=1;\r\n    for(ll i=1;i<=n;i++) {\r\n        pw[i]=pw[i-1]*2%mo;\r\n        cin>>a[i];\r\n        sum[i]=(sum[i-1]+pw[i-1]*a[i]%mo)%mo;\r\n    }\r\n    for(ll i=1,l,r;i<=q;i++) {\r\n        cin>>l>>r;\r\n        g[r].push_back((node){l,i});\r\n    }\r\n    vector<node2> sta;\r\n    for(ll r=1;r<=n;r++) {\r\n        ll id=r, s1=a[r], s2=a[r], s3=0;\r\n        if(sta.size()) s3=sta.back().sans;\r\n        s3+=a[r];\r\n        while(sta.size()&&s1>0) {\r\n            node2 t=sta.back(); sta.pop_back();\r\n            ll c=id-t.i;\r\n            id=t.i;\r\n            if(c>=50) s1=inf;\r\n            else {\r\n                __int128 ts= (__int128) (1ll<<c)*s1+t.sum-inf;\r\n                if(ts>0) s1=inf;\r\n                else s1= s1*(1ll<<c)+t.sum;\r\n            }\r\n            s2=(s2*pw[c]%mo+t.ans)%mo;\r\n            s3=(t.sans-t.ans+s2)%mo;\r\n        }\r\n        sta.push_back((node2){id,s1,s2,s3});\r\n        for(auto x:g[r]) {\r\n            ll l=x.l;\r\n            ll L=0, R=sta.size()-1, p=sta.size();\r\n            while(L<=R) {\r\n                ll mid=L+R>>1;\r\n                if(sta[mid].i>l) p=mid, R=mid-1;\r\n                else L=mid+1;\r\n            }\r\n            ans[x.id]=(ans[x.id]+sta.back().sans-sta[p-1].sans+mo)%mo; \r\n            ans[x.id]=ans[x.id]*2%mo;\r\n            if(p==sta.size()) ans[x.id]=(ans[x.id]+(sum[r]-sum[l-1]+mo)%mo*qpow(pw[l-1],mo-2)%mo)%mo;\r\n            else ans[x.id]=(ans[x.id]+(sum[sta[p].i-1]-sum[l-1]+mo)%mo*qpow(pw[l-1],mo-2)%mo)%mo;\r\n        }\r\n    }\r\n    for(ll i=1;i<=q;i++) cout<<(ans[i]+mo)%mo<<'\\n';\r\n    return 0;\r\n}"
}