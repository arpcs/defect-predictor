{
    "id": 89382711,
    "contestId": 1344,
    "creationTimeSeconds": 1596959377,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "luogu_bot5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 38,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 13004800,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <queue>\r\nusing namespace std;\r\nconst int N=2e5+5;\r\nint n,m,h1[N],h2[N],u,cnt,ind[N],outd[N],pre[N],succ[N],ans;\r\nbool b[N];\r\nqueue<int> q;\r\nstruct edge{\r\n\tint v,nxt;\r\n} e1[N],e2[N];\r\nint main(){\r\n\tscanf(\"%d%d\",&n,&m);\r\n\tfor(register int i=1,x,y;i<=m;++i){\r\n\t\tscanf(\"%d%d\",&x,&y);\r\n\t\t++ind[y];\r\n\t\te1[i]=(edge){y,h1[x]};\r\n\t\th1[x]=i;\r\n\t\t++outd[x];\r\n\t\te2[i]=(edge){x,h2[y]};\r\n\t\th2[y]=i;\r\n\t}\r\n\tfor(register int i=1;i<=n;++i){\r\n\t\tpre[i]=i;\r\n\t\tif(!ind[i])\r\n\t\t\tq.push(i);\r\n\t}\r\n\twhile(!q.empty()){\r\n\t\tu=q.front();\r\n\t\tq.pop();\r\n\t\t++cnt;\r\n\t\tfor(register int i=h1[u],v;i;i=e1[i].nxt){\r\n\t\t\tv=e1[i].v;\r\n\t\t\tif(!ind[v]) continue;\r\n\t\t\tpre[v]=min(pre[v],pre[u]);\r\n\t\t\t--ind[v];\r\n\t\t\tif(!ind[v])\r\n\t\t\t\tq.push(v);\r\n\t\t}\r\n\t}\r\n\tif(cnt<n){\r\n\t\tprintf(\"-1\\n\");\r\n\t\treturn 0;\r\n\t}\r\n\twhile(!q.empty())\r\n\t \tq.pop();\r\n\tfor(register int i=1;i<=n;++i){\r\n\t\tsucc[i]=i;\r\n\t\tif(!outd[i])\r\n\t\t\tq.push(i);\r\n\t}\r\n\twhile(!q.empty()){\r\n\t\tu=q.front();\r\n\t\tq.pop();\r\n\t\tfor(register int i=h2[u],v;i;i=e2[i].nxt){\r\n\t\t\tv=e2[i].v;\r\n\t\t\tif(!outd[v]) continue;\r\n\t\t\t--outd[v];\r\n\t\t\tsucc[v]=min(succ[v],succ[u]);\r\n\t\t\tif(!outd[v])\r\n\t\t\t\tq.push(v);\r\n\t\t}\r\n\t}\r\n\tfor(register int i=1;i<=n;++i)\r\n\t\tif(succ[i]==i&&pre[i]==i)\r\n\t\t\t++ans,b[i]=1;\r\n\tprintf(\"%d\\n\",ans);\r\n\tfor(register int i=1;i<=n;++i)\r\n\t\tif(b[i]) printf(\"A\");\r\n\t\telse printf(\"E\");\r\n\tprintf(\"\\n\");\r\n\treturn 0;\r\n}"
}