{
    "id": 107403039,
    "contestId": 1344,
    "creationTimeSeconds": 1613393766,
    "relativeTimeSeconds": 6966,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "Flannery"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1613386800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 38,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 15257600,
    "source": "// Problem: C. Quantifier Question\r\n// Contest: Codeforces - Codeforces Round #639 (Div. 1)\r\n// URL: https://codeforces.com/contest/1344/problem/C\r\n// Memory Limit: 256 MB\r\n// Time Limit: 1000 ms\r\n// \r\n// Powered by CP Editor (https://cpeditor.org)\r\n\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <vector>\r\n\r\ntemplate <typename Tp>\r\nvoid read(Tp &res){\r\n\tstatic char ch; ch = getchar(), res = 0;\r\n\tstatic bool flag; flag = 0;\r\n\twhile(ch < '0' || ch > '9') flag = (ch == '-'), ch = getchar();\r\n\twhile(ch >= '0' && ch <= '9') res = res * 10 + ch - 48, ch = getchar();\r\n\tif(flag) res = -res;\r\n}\r\n\r\nvoid read(char *s){\r\n\tstatic char ch; ch = getchar();\r\n\twhile(ch < 'a' || ch > 'z') ch = getchar();\r\n\twhile(ch >= 'a' && ch <= 'z') *(s++) = ch, ch = getchar();\r\n\t*s = '\\0';\r\n}\r\n\r\nconst int maxn = 2e5 + 19;\r\n\r\nstruct Edge{\r\n\tint to, next;\r\n}edge[maxn];\r\n\r\nint head[maxn], cnt;\r\n\r\ninline void add(int from, int to){\r\n\tedge[++cnt].to = to;\r\n\tedge[cnt].next = head[from];\r\n\thead[from] = cnt;\r\n}\r\n\r\nint n, m, deg[maxn], q[maxn], h = 1, t;\r\nbool isAll[maxn];\r\nstd::vector<int> G[maxn];\r\n\r\nbool vist[maxn], vast[maxn];\r\nvoid dfs(int node){\r\n\tvist[node] = 1;\r\n\tfor(int i = head[node]; i; i = edge[i].next)\r\n\t\tif(!vist[edge[i].to])\r\n\t\t\tdfs(edge[i].to);\r\n}\r\nvoid sfd(int node){\r\n\tvast[node] = 1;\r\n\tfor(int e : G[node])\r\n\t\tif(!vast[e])\r\n\t\t\tsfd(e);\r\n}\r\n\r\nint main(){\r\n\tscanf(\"%d%d\", &n, &m);\r\n\tfor(int i = 1, x, y; i <= m; ++i){\r\n\t\tscanf(\"%d%d\", &x, &y);\r\n\t\tadd(x, y), ++deg[y], G[y].push_back(x);\r\n\t}\r\n\tfor(int i = 1; i <= n; ++i)\r\n\t\tif(deg[i] == 0)\r\n\t\t\tq[++t] = i;\r\n\twhile(h <= t){\r\n\t\tint node = q[h++];\r\n\t\tfor(int i = head[node]; i; i = edge[i].next)\r\n\t\t\tif(--deg[edge[i].to] == 0)\r\n\t\t\t\tq[++t] = edge[i].to;\r\n\t}\r\n\tif(t != n) return puts(\"-1\"), 0;\r\n\tint ans = 0;\r\n\tfor(int i = 1; i <= n; ++i){\r\n\t\tif(!vist[i] && !vast[i]) isAll[i] = 1, ++ans;\r\n\t\tdfs(i), sfd(i);\r\n\t}\r\n\tprintf(\"%d\\n\", ans);\r\n\tfor(int i = 1; i <= n; ++i) putchar(isAll[i] ? 'A' : 'E');\r\n}"
}