{
    "id": 124476783,
    "contestId": 1344,
    "creationTimeSeconds": 1627797995,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "amirali83"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 38,
    "timeConsumedMillis": 623,
    "memoryConsumedBytes": 25088000,
    "source": "#include<bits/stdc++.h>\n\n#define IOS ios:: sync_with_stdio(0), cin.tie(0), cout.tie(0)\n\ntypedef long long ll;\nusing namespace std;\n \nconst int N = 2e5 + 5;\nint n, m, ans_cnt;\nbool main_mark[N], ans_mark[N], sec_mark[N];\nint mark_cycle[N];\nvector<int> out[N], in[N], fin;\n\nvoid read_input() {\n    cin >> n >> m;\n    int a, b;\n    for(int i = 0; i < m; i++) {\n        cin >> a >> b;\n        out[a].push_back(b);\n        in[b].push_back(a);\n    }\n}\n\nvoid dfs_cycle(int v) {\n    main_mark[v] = true;\n    for(int u: out[v])\n        if(!main_mark[u])\n            dfs_cycle(u);\n    fin.push_back(v);\n}\n\nvoid dfs_back(int v) {\n    sec_mark[v] = true;\n    for(int u: in[v])\n        if(!sec_mark[u])\n            dfs_back(u);\n}\n\nbool check_cycle() {\n    for(int i = 1; i <= n; i++)\n        if(!main_mark[i])\n            dfs_cycle(i);\n    reverse(fin.begin(), fin.end());;\n    for(int i = 0; i < n; i++)\n        mark_cycle[fin[i]] = i;\n    for(int i = 1; i <= n; i++)\n        for(int j: out[i]) \n            if(mark_cycle[i] > mark_cycle[j])\n               return true;\n    return false;\n}\n\nvoid make_ex(int v) {\n    main_mark[v] = true;\n    for(int u: out[v])\n        if(!main_mark[u])\n            make_ex(u);\n}\n\nvoid solve() {\n    if(check_cycle()) {\n        cout << -1 << endl;\n        return;\n    }\n    memset(main_mark, false, sizeof main_mark);\n    for(int i = 1; i <= n; i++) {\n        if(!main_mark[i] && !sec_mark[i]) {\n            ans_mark[i] = true;\n            ans_cnt++;\n        }\n        if(!main_mark[i]) \n            dfs_cycle(i);\n        if(!sec_mark[i])\n            dfs_back(i);\n    }\n    cout << ans_cnt << endl;\n    for(int i = 1; i <= n; i++) {\n        if(ans_mark[i])\n            cout << 'A';\n        else\n            cout << 'E';\n    }\n    cout << endl;\n}\n\nint main() {\n    read_input();\n    solve();\n}\n"
}