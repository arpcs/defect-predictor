{
    "id": 108136085,
    "contestId": 1344,
    "creationTimeSeconds": 1613952829,
    "relativeTimeSeconds": 1369,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "Vercingetorix"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1613951460
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 4403200,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <string>\r\n#include <ctype.h>\r\n#include <deque>\r\n#include <cstring>\r\n#include <set>\r\n#include <bitset>\r\n#include <map>\r\n#include <chrono>\r\n#include <random>\r\n#include <unordered_map>\r\n#include <stdio.h>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef std::vector<int> vi;\r\ntypedef std::vector<bool> vb;\r\ntypedef std::vector<string> vs;\r\ntypedef std::vector<double> vd;\r\ntypedef std::vector<long long> vll;\r\ntypedef std::vector<std::vector<int> > vvi;\r\ntypedef vector<vll> vvll;\r\ntypedef std::vector<std::pair<int, int> > vpi;\r\ntypedef vector<vpi> vvpi;\r\ntypedef std::pair<int, int> pi;\r\ntypedef std::pair<ll, ll> pll;\r\ntypedef std::vector<pll> vpll;\r\n\r\nconst long long mod = 1000000007;\r\nconst unsigned gen_seed = std::chrono::system_clock::now().time_since_epoch().count();\r\nstd::mt19937_64 gen(gen_seed);\r\n\r\n#define all(c) (c).begin(),(c).end()\r\n#define srt(c) sort(all(c))\r\n#define srtrev(c) sort(all(c)); reverse(all(c))\r\n#define forn(i, a, b) for(int i = a; i < b; i++)\r\n#define read(x) scanf(\"%d\", &x)\r\n#define readv(x, n) vi x(n); forn(i,0,n) scanf(\"%d\", &x[i])\r\n\r\n#define pb push_back\r\n#define mp make_pair\r\nconst int MAXN = 200500;\r\nint parent[MAXN];\r\nint rk[MAXN];\r\nvoid make_set (int v) {\r\n    parent[v] = v;\r\n    rk[v] = 0;\r\n}\r\n\r\nint find_set (int v) {\r\n    if (v == parent[v])\r\n        return v;\r\n    return parent[v] = find_set (parent[v]);\r\n}\r\n\r\nvoid union_sets (int a, int b) {\r\n    a = find_set (a);\r\n    b = find_set (b);\r\n    if (a != b) {\r\n        if (rk[a] < rk[b])\r\n            swap (a, b);\r\n        parent[b] = a;\r\n        if (rk[a] == rk[b])\r\n            ++rk[a];\r\n    }\r\n}\r\nint n;\r\nvector<int> g[MAXN];\r\nbool used[MAXN];\r\nvector<int> ans;\r\n\r\nvoid dfs (int v) {\r\n    used[v] = true;\r\n    for (size_t i=0; i<g[v].size(); ++i) {\r\n        int to = g[v][i];\r\n        if (!used[to])\r\n            dfs (to);\r\n    }\r\n    ans.push_back (v);\r\n}\r\n\r\nvoid topological_sort() {\r\n    for (int i=0; i<n; ++i)\r\n        used[i] = false;\r\n    ans.clear();\r\n    for (int i=0; i<n; ++i)\r\n        if (!used[i])\r\n            dfs (i);\r\n    reverse (ans.begin(), ans.end());\r\n}\r\n\r\nint main()\r\n{\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"rt\", stdin);\r\n    freopen(\"output.txt\", \"wt\", stdout);\r\n#endif\r\n    int m;\r\n    scanf(\"%d %d\", &n, &m);\r\n    forn(i,0,n) make_set(i);\r\n    vi cnt(n,0);\r\n    string res(n, 'A');\r\n    forn(i,0,m) {\r\n        int u,v;\r\n        scanf(\"%d %d\", &u, &v);\r\n        u--;v--;\r\n        g[u].pb(v);\r\n        union_sets(u, v);\r\n        res[max(u,v)] = 'E';\r\n    }\r\n    forn(i,0,n) cnt[find_set(i)]++;\r\n    topological_sort();\r\n    vi w(n);\r\n    forn(i,0,n) w[ans[i]] = i;\r\n    forn(v,0,n) {\r\n        for(auto u : g[v]) {\r\n            if(w[u] < w[v]) {\r\n                cout<<-1;\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n//    string res;\r\n//    reverse(all(ans));\r\n    int acnt  = 0;\r\n    forn(i,0,n) if(res[i] == 'A') acnt++;\r\n    printf(\"%d\\n\", acnt);\r\n    printf(\"%s\", res.c_str());\r\n}\r\n"
}