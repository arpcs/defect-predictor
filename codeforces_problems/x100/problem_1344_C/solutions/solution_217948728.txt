{
    "id": 217948728,
    "contestId": 1344,
    "creationTimeSeconds": 1691549147,
    "relativeTimeSeconds": 5987,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "Tobo"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1691543160
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 38,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 22220800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nusing i64 = long long;\r\nconst int N = 200005;\r\nconst int mod = 998244353;\r\n\r\nint n, m, deg[N];\r\nvector<int> adj[N], G[N];\r\nint vis1[N], vis2[N];\r\nvoid dfs1(int cur)\r\n{\r\n    vis1[cur] = 1;\r\n    for (int i : adj[cur])\r\n        if (!vis1[i])\r\n            dfs1(i);\r\n}\r\nvoid dfs2(int cur)\r\n{\r\n    vis2[cur] = 1;\r\n    for (int i : G[cur])\r\n        if (!vis2[i])\r\n            dfs2(i);\r\n}\r\nvoid solve()\r\n{\r\n    cin >> n >> m;\r\n    for (int i = 1, u, v; i <= m; i++)\r\n    {\r\n        cin >> u >> v;\r\n        adj[u].push_back(v);\r\n        G[v].push_back(u);\r\n        deg[v]++;\r\n    }\r\n    queue<int> que;\r\n    for (int i = 1; i <= n; i++)\r\n        if (!deg[i])\r\n            que.push(i);\r\n    while (!que.empty())\r\n    {\r\n        int cur = que.front();\r\n        que.pop();\r\n        for (int i : adj[cur])\r\n            if (!--deg[i])\r\n                que.push(i);\r\n    }\r\n    if (count(deg + 1, deg + n + 1, 0) != n)\r\n    {\r\n        cout << \"-1\\n\";\r\n        return;\r\n    }\r\n    int ans = 0;\r\n    string s;\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        if (!vis1[i] && !vis2[i])\r\n        {\r\n            s.push_back('A');\r\n            ans++;\r\n        }\r\n        else\r\n            s.push_back('E');\r\n        dfs1(i), dfs2(i);\r\n    }\r\n    cout << ans << '\\n'\r\n         << s << '\\n';\r\n}\r\nsigned main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    int t = 1;\r\n    // cin >> t;\r\n    while (t--)\r\n        solve();\r\n}"
}