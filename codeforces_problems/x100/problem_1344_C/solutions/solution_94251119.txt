{
    "id": 94251119,
    "contestId": 1344,
    "creationTimeSeconds": 1601421942,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "niHaorn"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 38,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 19763200,
    "source": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\nconst int MAXN = 2e5 + 10;\r\nvector<int>G[MAXN];\r\nvector<int>Gv[MAXN];\r\nint n, m, deg[MAXN];\r\ninline void init(void){\r\n\tscanf(\"%d%d\", &n, &m);\r\n\tint u, v;\r\n\tfor(int i = 1; i <= m; ++ i){\r\n\t\tscanf(\"%d%d\", &u, &v); \r\n\t\tG[u].push_back(v); Gv[v].push_back(u);\r\n\t\tdeg[v]++;\r\n\t}\r\n}\r\nint head, tail, Q[MAXN];\r\ninline int topsort(void){\r\n\thead = 1; tail = 0;\r\n\tfor(int i = 1; i <= n; ++ i) if(!deg[i]) Q[++ tail] = i;\r\n\twhile(head <= tail){\r\n\t\tint u = Q[head]; ++ head;\r\n\t\tfor(auto v : G[u]){\r\n\t\t\tdeg[v]--;\r\n\t\t\tif(!deg[v]) Q[++ tail] = v;\r\n\t\t}\r\n\t}\r\n\tif(tail == n) return true;\r\n\telse return false;\r\n}\r\nint vis[MAXN], visv[MAXN];\r\nvoid mark(int u){\r\n\tvis[u] = 1;\r\n\tfor(auto v : G[u]){\r\n\t\tif(!vis[v]) mark(v);\r\n\t}\r\n}\r\nvoid markv(int u){\r\n\tvisv[u] = 1;\r\n\tfor(auto v : Gv[u]){\r\n\t\tif(!visv[v]) markv(v);\r\n\t}\r\n}\r\nstring ans;\r\nint tot;\r\ninline void work(void){\r\n\tif(!topsort()) printf(\"-1\");\r\n\telse{\r\n\t\tfor(int i = 1; i <= n; ++ i){\r\n\t\t\tif(!vis[i] && !visv[i]) ans.push_back('A'), tot++;\r\n\t\t\telse ans.push_back('E');\r\n\t\t\tmark(i); markv(i);\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", tot); cout << ans;\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tinit(); work();\r\n\treturn 0;\r\n}"
}