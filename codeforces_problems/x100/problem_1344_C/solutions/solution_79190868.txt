{
    "id": 79190868,
    "contestId": 1344,
    "creationTimeSeconds": 1588780256,
    "relativeTimeSeconds": 4556,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "armoking"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 36,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 9728000,
    "source": "#include <bits/stdc++.h>\r\n#define all(x) begin(x), end(x)\r\n\r\nusing namespace std;\r\nusing ll = long long;\r\n\r\nvoid InitIO() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n}\r\n\r\nconst int N = 200200;\r\nvector<int> g[N];\r\nvector<int> rg[N];\r\n\r\nint color[N];\r\nbool Dfs(int from) {\r\n    color[from] = 1;\r\n    for (int v : g[from]) {\r\n        if (color[v] == 1) return true;\r\n        if (color[v] == 0) {\r\n            if (Dfs(v)) return true;\r\n        }\r\n    }\r\n    color[from] = 2;\r\n    return false;\r\n}\r\nvector<int> srt;\r\nbool used[N];\r\n\r\n\r\nbool rev = false;\r\nvoid topsort(int from) {\r\n    used[from] = true;\r\n    if (rev) {\r\n        for (int v : rg[from])  if (!used[v]) topsort(v);\r\n    } else {\r\n        for (int v : g[from])  if (!used[v]) topsort(v);\r\n    }\r\n    srt.push_back(from);\r\n}\r\n\r\n\r\nint main() {\r\n    InitIO();\r\n    int n, m;\r\n    cin >> n >> m;\r\n    for (int i = 0; i < m; i++) {\r\n        int f, t;\r\n        cin >> f >> t;\r\n        f--, t--;\r\n        g[f].push_back(t);\r\n        rg[t].push_back(f);\r\n    }\r\n    for (int i = 0; i < n; i++) {\r\n        if (color[i] == 0) {\r\n            if (Dfs(i)) {\r\n                cout << -1 << endl;\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n    for (int i = 0; i < n; i++) {\r\n        if (!used[i]) topsort(i);\r\n    }\r\n    reverse(all(srt));\r\n    vector<int> mn(n);\r\n    iota(all(mn), 0);\r\n    for (int v : srt) {\r\n        for (int nxt : g[v]) {\r\n            mn[v] = min(mn[v], mn[nxt]);\r\n        }\r\n    }\r\n    srt.clear();\r\n    rev = true;\r\n    memset(used, 0, sizeof used);\r\n    for (int i = 0; i < n; i++) {\r\n        if (!used[i]) topsort(i);\r\n    }\r\n    for (int v : srt) {\r\n        for (int nxt : rg[v]) {\r\n            mn[v] = min(mn[v], mn[nxt]);\r\n        }\r\n    }\r\n    string ans = \"\";\r\n    int cnt = 0;\r\n    for (int i = 0; i < n; i++) {\r\n        if (mn[i] == i) {\r\n            cnt++;\r\n            ans.push_back('A');\r\n        } else {\r\n            ans.push_back('E');\r\n        }\r\n    }\r\n    cout << cnt << endl;\r\n    cout << ans << endl;\r\n}"
}