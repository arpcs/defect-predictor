{
    "id": 221896719,
    "contestId": 1344,
    "creationTimeSeconds": 1693895028,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "xjrjyy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 38,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 19865600,
    "source": "// LUOGU_RID: 123845491\n#include <bits/stdc++.h>\n\nusing i64 = long long;\n\nint main() {\n    std::cin.tie(nullptr)->sync_with_stdio(false);\n\n    int n, m;\n    std::cin >> n >> m;\n\n    std::vector<std::vector<int>> adj(n), radj(n);\n    std::vector<int> deg(n);\n    for (int i = 0; i < m; ++i) {\n        int u, v;\n        std::cin >> u >> v;\n        --u, --v;\n        adj[u].push_back(v);\n        radj[v].push_back(u);\n        ++deg[v];\n    }\n\n    std::vector<int> q;\n    for (int i = 0; i < n; ++i) {\n        if (deg[i] == 0) {\n            q.push_back(i);\n        }\n    }\n    for (int i = 0; i < int(q.size()); ++i) {\n        for (auto v : adj[q[i]]) {\n            if (--deg[v] == 0) {\n                q.push_back(v);\n            }\n        }\n    }\n\n    if (int(q.size()) < n) {\n        std::cout << \"-1\\n\";\n        return 0;\n    }\n\n    std::vector<int> f(n);\n    std::iota(f.begin(), f.end(), 0);\n    auto g{f};\n    for (int i = 0; i < n; ++i) {\n        for (auto v : adj[q[i]]) {\n            f[v] = std::min(f[v], f[q[i]]);\n        }\n    }\n    for (int i = int(q.size()) - 1; i >= 0; --i) {\n        for (auto v : radj[q[i]]) {\n            g[v] = std::min(g[v], g[q[i]]);\n        }\n    }\n\n    std::string ans(n, 'E');\n    for (int i = 0; i < n; ++i) {\n        if (f[i] == i && g[i] == i) {\n            ans[i] = 'A';\n        }\n    }\n\n    std::cout << std::count(ans.begin(), ans.end(), 'A') << '\\n';\n    std::cout << ans << '\\n';\n\n    return 0;\n}\n"
}