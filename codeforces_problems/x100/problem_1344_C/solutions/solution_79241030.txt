{
    "id": 79241030,
    "contestId": 1344,
    "creationTimeSeconds": 1588834875,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "STommydx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// Template Headers {{{\r\nusing pii = pair<int, int>; using vpii = vector<pii>;\r\nusing vi = vector<int>; using vvi = vector<vi>;\r\nusing ll = long long; using vll = vector<long long>;\r\ntemplate <class T> using min_queue = priority_queue<T, vector<T>, greater<T>>;\r\ntemplate <class T> istream &operator>>(istream &, vector<T> &);\r\ntemplate <class T> ostream &operator<<(ostream &, const vector<T> &);\r\ntemplate <class T, class U> istream &operator>>(istream &, pair<T, U> &);\r\ntemplate <class T, class U> ostream &operator<<(ostream &, const pair<T, U> &);\r\ntemplate <class T> struct Inf { static constexpr T inf() { return std::numeric_limits<T>::has_infinity ? std::numeric_limits<T>::infinity() : std::numeric_limits<T>::max(); } };\r\ntemplate <> struct Inf<int> { static constexpr int inf() { return 0x3f3f3f3f; } };\r\ntemplate <> struct Inf<long long> { static constexpr long long inf() { return 0x3f3f3f3f3f3f3f3fLL; } };\r\nconstexpr int INF = Inf<int>::inf(); constexpr ll BINF = Inf<ll>::inf();\r\n// mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n// }}}\r\n\r\nint solve() {\r\n\tint n, m; cin >> n >> m;\r\n\tvvi g(n), gr(n);\r\n\tvi ind(n);\r\n\tfor (int i = 0; i < m; i++) {\r\n\t\tint u, v; cin >> u >> v; u--, v--;\r\n\t\tg[u].push_back(v); gr[v].push_back(u);\r\n\t\tind[v]++;\r\n\t}\r\n\tint popped = 0;\r\n\tqueue<int> q;\r\n\tfor (int i = 0; i < n; i++) if (ind[i] == 0) q.push(i);\r\n\twhile (!q.empty()) {\r\n\t\tint u = q.front(); q.pop();\r\n\t\tpopped++;\r\n\t\tfor (int v : g[u]) {\r\n\t\t\tind[v]--;\r\n\t\t\tif (ind[v] == 0) q.push(v);\r\n\t\t}\r\n\t}\r\n\tif (popped != n) return cout << -1 << endl, 0;\r\n\tvi c(n, -1);\r\n\tint ccnt = 0;\r\n\tfunction<void(int)> dfs = [&] (int u) {\r\n\t\tfor (int v : g[u]) {\r\n\t\t\tif (c[v] != -1) continue;\r\n\t\t\tc[v] = c[u];\r\n\t\t\tdfs(v);\r\n\t\t}\r\n\t\tfor (int v : gr[u]) {\r\n\t\t\tif (c[v] != -1) continue;\r\n\t\t\tc[v] = c[u];\r\n\t\t\tdfs(v);\r\n\t\t}\r\n\t};\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tif (c[i] != -1) continue;\r\n\t\tc[i] = ccnt++;\r\n\t\tdfs(i);\r\n\t}\r\n\tvi ans(n, -1);\r\n\tvi up(n), down(n);\r\n\tfunction<void(int)> progup = [&] (int u) {\r\n\t    if (up[u]) continue; up[u] = 1;\r\n\t\tfor (int v : gr[u]) if (ans[v] == -1) {\r\n\t\t\tans[v] = 1;\r\n\t\t\tprogup(v);\r\n\t\t}\r\n\t};\r\n\tfunction<void(int)> progdown = [&] (int u) {\r\n\t    if (down[u]) continue; down[u] = 1;\r\n\t\tfor (int v : g[u]) if (ans[v] == -1) {\r\n\t\t\tans[v] = 1;\r\n\t\t\tprogdown(v);\r\n\t\t}\r\n\t};\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tif (ans[i] == -1) {\r\n\t\t\tans[i] = 0;\r\n\t\t}\r\n\t\tprogup(i);\r\n\t\tprogdown(i);\r\n\t}\r\n\tcout << n - accumulate(ans.begin(), ans.end(), 0) << endl;\r\n\tfor (int c : ans) cout << \"AE\"[c];\r\n\tcout << endl;\r\n\treturn 0;\r\n}\r\n\r\n// Template Main {{{\r\nint main() {\r\n\tios::sync_with_stdio(0); cin.tie(0);\r\n\t// precompute();\r\n\t// int t; cin >> t; for (int i=1;i<=t;i++)\r\n\tsolve();\r\n\t// cout << \"Case #\" << i << \": \", solve();\r\n\treturn 0;\r\n}\r\n\r\ntemplate <class T> istream &operator>>(istream &is, vector<T> &v) {\r\n\tfor (auto it=v.begin();it!=v.end();++it) is >> *it;\r\n\treturn is;\r\n}\r\n\r\ntemplate <class T> ostream &operator<<(ostream &os, const vector<T> &v) {\r\n\tfor (auto it=v.begin();it!=v.end();) os << *it, os << \" \\n\"[++it==v.end()];\r\n\treturn os;\r\n}\r\n\r\ntemplate <class T, class U> istream &operator>>(istream &is, pair<T, U> &p) {\r\n\treturn is >> p.first >> p.second;\r\n}\r\n\r\ntemplate <class T, class U> ostream &operator<<(ostream &os, const pair<T, U> &p) {\r\n\treturn os << p.first << ' ' << p.second;\r\n}\r\n// }}}\r\n\r\n// vim: fdm=marker"
}