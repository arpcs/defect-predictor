{
    "id": 189221490,
    "contestId": 1344,
    "creationTimeSeconds": 1673704585,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "mraron"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 38,
    "timeConsumedMillis": 358,
    "memoryConsumedBytes": 53145600,
    "source": "#include<iostream>\n#include<vector>\n#include<map>\n#include<set>\n#include<cassert>\n#include<cassert>\n#include<unordered_map>\n#include<unordered_set>\n#include<functional>\n#include<queue>\n#include<stack>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<sstream>\n#include<iomanip>\n#include<cstdio>\n#include<cstdlib>\n#include<numeric>\n#include<random>\n#include<chrono>\n#include<bitset>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n\n#define all(x) (x).begin(), (x).end()\n#define pb push_back\n#define eb emplace_back\n#define xx first\n#define yy second\n#define sz(x) (int)(x).size()\n#define gc getchar\n#define IO ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)\n#define mp make_pair\n#define ins insert\n\n#ifndef ONLINE_JUDGE\n#  define LOG(x) (cerr << #x << \" = \" << (x) << endl)\n#else\n#  define LOG(x) ((void)0)\n#endif\n\nusing ll = long long;\nusing ull = unsigned long long ;\nusing ld = long double ;\nusing str = string;\nusing ordered_set=tree<pair<int,int>, null_type, less<pair<int,int>>, rb_tree_tag, tree_order_statistics_node_update>;\n\nconst double PI=acos(-1);\nconst ll INF = 1LL<<62;\nconst ll MINF = -(1LL<<62);\n\ntemplate<typename T> T getint() {\n    T val=0;\n    char c;\n    \n    bool neg=false;\n    while((c=gc()) && !(c>='0' && c<='9')) {\n        neg|=c=='-';\n    }\n\n    do {\n        val=(val*10)+c-'0';\n    } while((c=gc()) && (c>='0' && c<='9'));\n\n    return val*(neg?-1:1);\n}\n\n//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count()); uniform_int_distribution<int>(0, n-1)(rng)\n\n\nint n,m, indeg[200001];\nint indeg_orig[200001];\nvector<int> adj[200001];\nvector<int> fadj[200001];\nvector<int> badj[200001];\nint st[200001];\nvector<int> lst[200001];\nvoid dfs1(int x, int comp) {\n    st[x]=comp;\n    lst[comp].pb(x);\n    for(auto i:adj[x]) {\n        if(!st[i]) dfs1(i, comp);\n    } \n}\nint st2[200001];\nvoid dfs2(int x) {\n    st2[x]=1;\n    for(auto i:fadj[x]) {\n        if(!st2[i]) dfs2(i);\n    }\n}\n\nint st3[200001];\nvoid dfs3(int x) {\n    st3[x]=1;\n    for(auto i:badj[x]) {\n        if(!st3[i]) dfs3(i);\n    }\n}\n\nint sttopo[200001];\nvoid topo(int x, vector<int>& ord) {\n    sttopo[x]=1;\n    ord.pb(x);\n    for(auto i:fadj[x]) {\n        indeg[i]--;\n        if(!sttopo[i] && indeg[i]==0) topo(i,ord);\n    }\n}\n\n\nint main() {\n    IO;\n    cin>>n>>m;\n    for(int i=0;i<m;++i) {\n        int a,b;\n        cin>>a>>b;\n        adj[a].pb(b);\n        adj[b].pb(a);\n        fadj[a].pb(b);\n        badj[b].pb(a);\n        indeg[b]++;\n        indeg_orig[b]++;\n    }\n    \n    int comps=0, ans=0;\n    string res(n, ' ');\n    \n    for(int i=1;i<=n;++i) {\n        if(!st[i]){\n            comps++;\n            dfs1(i, comps);\n            \n            vector<int> ord;\n            for(int j:lst[comps]) {\n                if(!sttopo[j] && indeg[j]==0) topo(j, ord);\n            }\n            \n            if(sz(ord)!=sz(lst[comps])) {\n                cout<<\"-1\\n\";\n                return 0;\n            }\n            \n            sort(all(lst[comps]));\n            for(int j:lst[comps]) {\n                if(!st2[j]&&!st3[j]) {\n                    res[j-1]='A';\n                    ans++;\n                }else {\n                    res[j-1]='E';\n                }\n                \n                dfs2(j);\n                dfs3(j);\n            }\n        }\n    }\n    \n    cout<<ans<<\"\\n\"<<res<<\"\\n\";\n    return 0;\n}\n"
}