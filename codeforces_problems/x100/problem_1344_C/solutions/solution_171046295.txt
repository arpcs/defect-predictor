{
    "id": 171046295,
    "contestId": 1344,
    "creationTimeSeconds": 1662464576,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "leeminrui"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 38,
    "timeConsumedMillis": 234,
    "memoryConsumedBytes": 14848000,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\ninline ll read() {\n\tll s = 0, w = 1;\n\tchar c = getchar();\n\twhile (c < '0' || c > '9') {if (c == '-') w = -1; c = getchar();}\n\twhile (c >= '0' && c <= '9') s = (s << 3) + (s << 1) + (c ^ 48), c = getchar();\n\treturn s * w;\n}\nconst int N = 200010;\nint n, m;\nvector <int> g[N], rg[N];\nint rd[N], rrd[N], f[N], rf[N];\nqueue <int> q;\nint cnt; \nbool ans[N];\nint main() {\n\tn = read(), m = read();\n\tfor (int i = 1; i <= n; i++) f[i] = rf[i] = i;\n\tfor (int i = 1; i <= m; i++) {\n\t\tint x = read(), y = read();\n\t\tg[x].emplace_back(y), rd[y]++;\n\t\trg[y].emplace_back(x), rrd[x]++;\n\t}\n\tfor (int i = 1; i <= n; i++) \n\t\tif (rd[i] == 0) q.push(i);\n\twhile (!q.empty()) {\n\t\tint u = q.front(); q.pop();\n\t\tfor (int v: g[u]) {\n\t\t\tf[v] = min(f[u], f[v]);\n\t\t\trd[v]--;\n\t\t\tif (rd[v] == 0) q.push(v);\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++) \n\t\tif (rd[i]) {\n\t\t\tputs(\"-1\");\n\t\t\treturn 0;\n\t\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (rrd[i] == 0) q.push(i);\n\twhile (!q.empty()) {\n\t\tint u = q.front(); q.pop();\n\t\tfor (int v: rg[u]) {\n\t\t\trf[v] = min(rf[u], rf[v]);\n\t\t\trrd[v]--;\n\t\t\tif (rrd[v] == 0) q.push(v);\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (f[i] < i || rf[i] < i) ans[i] = 0;\n\t\telse ans[i] = 1, cnt++;\n\tprintf(\"%d\\n\", cnt);\n\tfor (int i = 1; i <= n; i++) \n\t\tif (ans[i] == 0) printf(\"E\");\n\t\telse printf(\"A\");\n\treturn 0;\n}"
}