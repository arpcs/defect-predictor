{
    "id": 79256298,
    "contestId": 1344,
    "creationTimeSeconds": 1588845678,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "dantoh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 38,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 25292800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 200005;\r\nint n,m;\r\nvector<int> G[N], _G[N];\r\nint vis[N];\r\nint mn[N], mn2[N], col[N];\r\nvector<int> topo;\r\nvoid dfs(int u){\r\n    vis[u] = 2;\r\n    for (auto v : G[u]){\r\n        if (vis[v] == 2){\r\n            printf(\"-1\\n\");\r\n            exit(0);\r\n        }\r\n        if (vis[v] == 0){\r\n            dfs(v);\r\n        }\r\n    }\r\n\r\n    topo.push_back(u);\r\n    vis[u] = 1;\r\n}\r\nint main(){\r\n    scanf(\"%d%d\",&n,&m);\r\n    for (int i = 0; i < m; i++){\r\n        int a,b;\r\n        scanf(\"%d%d\",&a,&b);\r\n        G[a].push_back(b);\r\n        _G[b].push_back(a);\r\n    }\r\n    for (int i = 1; i <= n; i++){\r\n        if (vis[i] == 0){\r\n            dfs(i);\r\n        }\r\n    }\r\n    iota(mn,mn+N,0);\r\n    iota(mn2,mn2+N,0);\r\n    reverse(topo.begin(),topo.end());\r\n    for (auto u : topo){\r\n        for (auto v : _G[u]){\r\n            //printf(\"%d -> %d\\n\",u,v);\r\n            mn[u] = min(mn[u],mn[v]);\r\n        }\r\n    }\r\n    reverse(topo.begin(),topo.end());\r\n    for (auto u : topo){\r\n        for (auto v : G[u]){\r\n            //printf(\"%d <- %d\\n\",u,v);\r\n            mn2[u] = min(mn2[u],mn2[v]);\r\n        }\r\n    }\r\n    for (int i = 1; i <= n; i++){\r\n        //printf(\"%d %d %d\\n\",i,mn[i],mn2[i]);\r\n        col[i] = (i == min(mn[i],mn2[i]));\r\n    }\r\n    int ans = 0;\r\n    for (int i = 1; i <= n; i++) ans += col[i];\r\n    printf(\"%d\\n\",ans);\r\n    for (int i = 1; i <= n; i++){\r\n        printf(\"%c\",col[i]?'A':'E');\r\n    }\r\n\r\n}\r\n"
}