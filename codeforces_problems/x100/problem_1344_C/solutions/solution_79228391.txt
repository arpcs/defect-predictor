{
    "id": 79228391,
    "contestId": 1344,
    "creationTimeSeconds": 1588825350,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "tabr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nusing ll = long long;\r\n#ifdef tabr\r\n#include \"library/debug.cpp\"\r\n#else\r\n#define debug(...)\r\n#endif\r\n\r\nvector<int> topsort(vector<vector<int>> g) {\r\n    int n = g.size();\r\n    vector<int> deg(n);\r\n    for (int v : g) {\r\n        for (int to : g[v]) {\r\n            deg[to]++;\r\n        }\r\n    }\r\n    vector<int> res;\r\n    for (int i = 0; i < n; i++) {\r\n        if (deg[i] == 0) {\r\n            res.emplace_back(i);\r\n        }\r\n    }\r\n    for (int i = 0; i < (int)res.size(); i++) {\r\n        int v = res[i];\r\n        for (int to : g[v]) {\r\n            if (--deg[to] == 0) {\r\n                res.emplace_back(to);\r\n            }\r\n        }\r\n    }\r\n    if ((int)res.size() != n) {\r\n        return vector<int>();\r\n    }\r\n    return res;\r\n}\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    int n, m;\r\n    cin >> n >> m;\r\n    vector<int> a(m), b(m);\r\n    vector<vector<int>> g(n), rg(n);\r\n    vector<int> can(n, 1);\r\n    for (int i = 0; i < m; i++) {\r\n        cin >> a[i] >> b[i];\r\n        a[i]--, b[i]--;\r\n        g[a[i]].emplace_back(b[i]);\r\n        g[b[i]].emplace_back(a[i]);\r\n    }\r\n    vector<int> x = topsort(g);\r\n    if (x.empty()) {\r\n        cout << -1 << '\\n';\r\n        return 0;\r\n    }\r\n    vector<int> was(n);\r\n    string ans = string(n, 'E');\r\n    int k = 0;\r\n    function<void(int, int)> dfs = [&](int v, int q) {\r\n        if (q == 1) {\r\n            for (int to : g[v]) {\r\n                if (was[to] & q) {\r\n                    continue;\r\n                }\r\n                was[to] |= q;\r\n                dfs(to, q);\r\n            }\r\n        } else {\r\n            for (int to : rg[v]) {\r\n                if (was[to] & q) {\r\n                    continue;\r\n                }\r\n                was[to] |= q;\r\n                dfs(to, q);\r\n            }\r\n        }\r\n    };\r\n    for (int i = 0; i < n; i++) {\r\n        if (!was[i]) {\r\n            ans[i] = 'A';\r\n            was[i] = 3;\r\n            k++;\r\n        }\r\n        dfs(i, 1);\r\n        dfs(i, 2);\r\n    }\r\n    cout << k << '\\n';\r\n    cout << ans << '\\n';\r\n    return 0;\r\n}"
}