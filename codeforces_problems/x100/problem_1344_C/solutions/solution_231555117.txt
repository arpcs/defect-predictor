{
    "id": 231555117,
    "contestId": 1344,
    "creationTimeSeconds": 1699258531,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "zlxFTH"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 38,
    "timeConsumedMillis": 312,
    "memoryConsumedBytes": 13107200,
    "source": "#include <cstdio>\r\n#include <cstdlib>\r\n#include <queue>\r\n#include <vector>\r\n\r\nconst int N = 2e5 + 5;\r\n\r\nint n, m, ac;\r\nint a[N], b[N], f[N], g[N];\r\nchar ans[N];\r\nstd::vector<int> G[N];\r\n\r\nint cnt, in[N], o[N];\r\nvoid topo() {\r\n  std::queue<int> q;\r\n  for (int i = 1; i <= n; ++i) if (!in[i])\r\n    q.push(i);\r\n  while (!q.empty()) {\r\n    int u = q.front();\r\n    q.pop();\r\n    o[++cnt] = u;\r\n    for (auto v : G[u]) {\r\n      if (!--in[v]) q.push(v);\r\n    }\r\n  }\r\n  if (cnt != n) {\r\n    puts(\"-1\");\r\n    exit(0);\r\n  }\r\n}\r\n\r\nint main() {\r\n  scanf(\"%d%d\", &n, &m);\r\n  for (int i = 1; i <= m; ++i) {\r\n    scanf(\"%d%d\", &a[i], &b[i]);\r\n    G[a[i]].push_back(b[i]);\r\n    in[b[i]]++;\r\n  }\r\n  topo();\r\n  for (int i = 1; i <= n; ++i) f[i] = g[i] = i;\r\n  for (int i = 1; i <= n; ++i) {\r\n    int u = o[i];\r\n    for (auto v : G[u])\r\n      f[v] = std::min(f[v], f[u]);\r\n  }\r\n  for (int i = n; i; --i) {\r\n    int u = o[i];\r\n    for (auto v : G[u])\r\n      g[u] = std::min(g[u], g[v]);\r\n  }\r\n  for (int i = 1; i <= n; ++i) {\r\n    if (f[i] >= i && g[i] >= i) ac++, ans[i] = 'A';\r\n    else ans[i] = 'E';\r\n  }\r\n  printf(\"%d\\n\", ac);\r\n  for (int i = 1; i <= n; ++i) printf(\"%c\", ans[i]);\r\n  puts(\"\");\r\n  return 0;\r\n}"
}