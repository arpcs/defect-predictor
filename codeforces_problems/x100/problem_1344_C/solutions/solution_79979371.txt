{
    "id": 79979371,
    "contestId": 1344,
    "creationTimeSeconds": 1589373170,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "parsa333111"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 6553600,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define PB emplace_back\r\n\r\nusing namespace std;\r\n\r\nconst int N = 1e5+100;\r\n\r\nvector<long long int> v[N], g[N];\r\n\r\nlong long int ans = 0;\r\n\r\nbool viz1[N], viz2[N], viz[N];\r\n\r\nvoid dfs1(int x) {\r\n    if(viz1[x])return;\r\n    viz1[x]=1;\r\n    for(int u: v[x]) dfs1(u);\r\n}\r\n\r\nvoid dfs2(int x) {\r\n    if(viz2[x])return;\r\n    viz2[x]=1;\r\n    for(int u: g[x]) dfs2(u);\r\n}\r\n\r\nvoid pak(int x) {\r\n    dfs1(x);\r\n    dfs2(x);\r\n}\r\n\r\nvector<long long int> tp;\r\n\r\nset<long long int>pas;\r\n\r\nvoid dfs(int x) {\r\n    viz[x]=1;\r\n    for(int u: v[x]) {\r\n        if(!viz[u])dfs(u);\r\n    }\r\n    tp.PB(x);\r\n}\r\n\r\nint main () {\r\n    long long int n, m;\r\n    cin >> n >> m;\r\n    for(int i = 0 ; i < m ; i++ ) {\r\n        long long int u1, u2;\r\n        cin >> u1 >> u2;\r\n        u1--;\r\n        u2--;\r\n        v[u1].PB(u2);\r\n        g[u2].PB(u1);\r\n    }\r\n    for(int i = 0 ; i < n ; i++ ) if(viz[i]==0) dfs(i);\r\n    reverse(tp.begin(),tp.end());\r\n    bool ac=1;\r\n    for(int u: tp) pas.insert(u);\r\n    for(int i = n - 1 ; i >= 0 ; i--) {\r\n        pas.erase(tp[i]);\r\n        for(int u: v[tp[i]]) {\r\n            if(pas.find(u)!=pas.end())ac=0;\r\n        }\r\n    }\r\n    if(!ac) return cout << -1,0;\r\n    string mas;\r\n    for(int i = 0 ; i < n ; i++ ) {\r\n        if(!viz1[i]&&!viz2[i]) {\r\n            ans++;\r\n            mas+='A';\r\n        }\r\n        else mas+='E';\r\n        pak(i);\r\n    }\r\n    cout << ans << '\\n' << mas << '\\n';\r\n}\r\n"
}