{
    "id": 81664656,
    "contestId": 1344,
    "creationTimeSeconds": 1590634008,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "yuzhechuan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 11673600,
    "source": "//#pragma GCC optimize(3,\"Ofast\",\"inline\")\r\n//#pragma GCC target(\"avx,avx2\")\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#ifdef ONLINE_JUDGE\r\n#define getchar gc\r\ninline char gc(){\r\n\tstatic char buf[1<<16],*p1=buf,*p2=buf;\r\n\tif(p1==p2){\r\n\t\tp2=(p1=buf)+fread(buf,1,1<<16,stdin);\r\n\t\tif(p2==p1) return EOF;\r\n\t}\r\n\treturn *p1++;\r\n}\r\n#endif\r\ntemplate<class t> inline t read(t &x){\r\n    char c=getchar();bool f=0;x=0;\r\n    while(!isdigit(c)) f|=c=='-',c=getchar();\r\n    while(isdigit(c)) x=(x<<1)+(x<<3)+(c^48),c=getchar();\r\n    if(f) x=-x;return x;\r\n}\r\ntemplate<class t> inline void write(t x){\r\n    if(x<0) putchar('-'),write(-x);\r\n    else{if(x>9) write(x/10);putchar('0'+x%10);}\r\n}\r\n\r\nconst int N=2e5+5;\r\nint v1[N],v2[N],ans,Ans[N],n,m;\r\nvector<int> g[N],gg[N];\r\n\r\nvoid dfs1(int x){\r\n\tfor(int y:g[x]){\r\n\t\tif(v1[y]==v1[x]){\r\n\t\t\twrite(-1);\r\n\t\t\texit(0);\r\n\t\t}\r\n\t\tif(v1[y]) continue;\r\n\t\tv1[y]=v1[x];\r\n\t\tdfs1(y);\r\n\t}\r\n}\r\n\r\nvoid dfs2(int x){\r\n\tfor(int y:gg[x]){\r\n\t\tif(v2[y]) continue;\r\n\t\tv2[y]=v2[x];\r\n\t\tdfs2(y);\r\n\t}\r\n}\r\n\r\nsigned main(){\r\n// \tfreopen(\"graph.in\",\"r\",stdin);\r\n// \tfreopen(\"graph.out\",\"w\",stdout);\r\n\tread(n);read(m);\r\n\tfor(int i=1,x,y;i<=m;i++){\r\n\t\tread(x);read(y);\r\n\t\tg[x].push_back(y);\r\n\t\tgg[y].push_back(x);\r\n\t}\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tif(!v1[i]&&!v2[i]) ans++,Ans[i]=1;\r\n\t\tv1[i]=v2[i]=i;\r\n\t\tdfs1(i);\r\n\t\tdfs2(i);\r\n\t}\r\n\twrite(ans);puts(\"\");\r\n\tfor(int i=1;i<=n;i++) putchar(Ans[i]?'A':'E');\r\n}"
}