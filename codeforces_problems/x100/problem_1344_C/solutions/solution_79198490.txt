{
    "id": 79198490,
    "contestId": 1344,
    "creationTimeSeconds": 1588782136,
    "relativeTimeSeconds": 6436,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "mat_v"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 36,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 16486400,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <ext/rope>\r\n\r\n#define ff(i,a,b) for(int (i) = (a); (i) <= (b); ++(i))\r\n#define fb(i,a,b) for(int (i) = (a); (i) >= (b); --(i))\r\n#define mod 998244353\r\n#define xx first\r\n#define yy second\r\n#define all(a) (a).begin(), (a).end()\r\n#define pb push_back\r\n#define ll long long\r\n#define pii pair<int,int>\r\n#define maxn 200005\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\ntypedef tree<int, null_type, less<int>,rb_tree_tag, tree_order_statistics_node_update> ordered_set;/// find_by_order(x)(x+1th) , order_of_key() (strictly less)\r\nmt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\n\r\n\r\nvoid no(){\r\n    cout << -1 << endl;\r\n    exit(0);\r\n}\r\n\r\nint n,m;\r\n\r\nvector<int> dir[maxn];\r\nvector<int> dir2[maxn];\r\nvector<int> graf[maxn];\r\n\r\nbool bio1[maxn];\r\nbool bio2[maxn];\r\nbool bio3[maxn];\r\n\r\nstack<int>stek;\r\nvector<int>komp[maxn];\r\nint br;\r\n\r\nvoid dfs1(int x){\r\n    bio1[x] = 1;\r\n    for(auto c:dir[x]){\r\n        if(bio1[c])continue;\r\n        dfs1(c);\r\n    }\r\n    stek.push(x);\r\n}\r\n\r\nvoid dfs2(int x){\r\n    bio2[x] = 1;\r\n    for(auto c:dir2[x]){\r\n        if(bio2[c])continue;\r\n        no();\r\n    }\r\n}\r\n\r\nint res[maxn];\r\nint indeg[maxn];\r\nint outdeg[maxn];\r\n\r\nvoid dfs3(int x){\r\n    bio3[x] = 1;\r\n    komp[br].pb(x);\r\n    for(auto c:graf[x]){\r\n        if(bio3[c])continue;\r\n        dfs3(c);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n\r\n    ios_base::sync_with_stdio(false); cin.tie(0);\r\n    cin >> n >> m;\r\n    ff(i,1,m){\r\n        int a,b;\r\n        cin >> a >> b;\r\n        graf[a].pb(b);\r\n        graf[b].pb(a);\r\n        dir[a].pb(b);\r\n        dir2[b].pb(a);\r\n        indeg[b]++;\r\n        outdeg[a]++;\r\n    }\r\n\r\n    ff(i,1,n){\r\n        if(bio1[i])continue;\r\n        dfs1(i);\r\n    }\r\n    while(!stek.empty()){\r\n        int vrh = stek.top();\r\n        stek.pop();\r\n        if(bio2[vrh]){\r\n            no();\r\n        }\r\n        dfs2(vrh);\r\n    }\r\n    int kolko = 0;\r\n    ff(i,1,n){\r\n        if(bio3[i])continue;\r\n        br++;\r\n        dfs3(i);\r\n\r\n    }\r\n    int sol = 0;\r\n    ff(i,1,br){\r\n        int izlaz = 0;\r\n        int ulaz = 0;\r\n        for(auto c:komp[br]){\r\n            if(indeg[c] == 0)ulaz++;\r\n            else if(outdeg[c] == 0)izlaz++;\r\n        }\r\n        if(1){\r\n            for(auto c:komp[br]){\r\n                if(indeg[c] == 0){\r\n                    sol++;\r\n                    res[c] = 1;\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            for(auto c:komp[br]){\r\n                if(outdeg[c] == 0){\r\n                    sol++;\r\n                    res[c] = 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    cout << sol << endl;\r\n    //cout << kolko << endl;\r\n    ff(i,1,n){\r\n        if(res[i] == 1)cout << \"A\";\r\n        else cout << \"E\";\r\n    }\r\n    return 0;\r\n}\r\n"
}