{
    "id": 79265092,
    "contestId": 1344,
    "creationTimeSeconds": 1588852061,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "cute_hater"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 38,
    "timeConsumedMillis": 311,
    "memoryConsumedBytes": 46489600,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <map>\r\n#include <set>\r\n#include <queue>\r\n#include <algorithm>\r\n#include <string>\r\n#include <cmath>\r\n#include <cstdio>\r\n#include <iomanip>\r\n#include <fstream>\r\n#include <cassert>\r\n#include <cstring>\r\n#include <numeric>\r\n#include <ctime>\r\n#include <complex>\r\n#include <bitset>\r\n#include <random>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\n\r\n//#define int ll\r\n#define double ld\r\n#define loop(i, n) for(int i = 0; i < (int)n; ++i)\r\n#define loop1(i, n) for(int i = 1; i <= (int)n; ++i)\r\n#define F first\r\n#define S second\r\n#define pb push_back\r\n#define pi pair <int, int>\r\n#define all(x) begin(x), end(x)\r\n#define ti tuple <int, int, int>\r\n#define Point Vect\r\n#define no {cout << -1; return;}\r\n#define mkp make_pair\r\n#define cerr if (0) cerr\r\n\r\nconst int N = 2e5 + 7;\r\n\r\nvector <int> g[N], ag[N];\r\nint dpup[N], dpdown[N];\r\nbool col[N];\r\nset <int> path;\r\n\r\nvoid dfs1(int v) {\r\n    col[v] = 1;\r\n    path.insert(v);\r\n    for (int u : g[v]) {\r\n        if (path.find(u) != path.end()) {\r\n            cout << -1; exit(0);\r\n        }\r\n        if (!col[u])\r\n            dfs1(u);\r\n        dpup[v] = min(dpup[v], dpup[u]);\r\n    }\r\n    path.erase(v);\r\n}\r\n\r\nvoid dfs2(int v) {\r\n    col[v] = 1;\r\n    for (int u : ag[v]) {\r\n        if (!col[u])\r\n            dfs2(u);\r\n        dpdown[v] = min(dpdown[v], dpdown[u]);\r\n    }\r\n}\r\n\r\nvoid solve() {\r\n    int n, m, ans = 0;\r\n    cin >> n >> m;\r\n    loop(i, m) {\r\n        int u, v;\r\n        cin >> u >> v;\r\n        g[u].pb(v);\r\n        ag[v].pb(u);\r\n    }\r\n    loop1(i, n) {\r\n        sort(all(g[i]));\r\n        g[i].resize(unique(all(g[i])) - g[i].begin());\r\n    }\r\n    loop1(i, n)\r\n        dpup[i] = dpdown[i] = i;\r\n    loop1(v, n)\r\n        if (!col[v])\r\n            dfs1(v);\r\n    loop1(i, n)\r\n        cerr << dpup[i] << \" \";\r\n    cerr << \"\\n\";\r\n    loop1(i, n)\r\n        col[i] = 0;\r\n    loop1(v, n)\r\n        if (!col[v])\r\n            dfs2(v);\r\n    loop1(i, n)\r\n        cerr << dpup[i] << \" \";\r\n    cerr << \"\\n\";\r\n    loop1(v, n)\r\n        ans += dpup[v] == v && dpdown[v] == v;\r\n    cout << ans << \"\\n\";\r\n    loop1(v, n)\r\n        cout << (dpup[v] == v && dpdown[v] == v ? 'A' : 'E');\r\n}\r\n\r\nsigned main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    //int t; cin >> t; loop(i, t)\r\n    solve();\r\n    return 0;\r\n}"
}