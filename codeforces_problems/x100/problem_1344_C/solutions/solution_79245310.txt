{
    "id": 79245310,
    "contestId": 1344,
    "creationTimeSeconds": 1588837668,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "tanon710"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "Python 3",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 11,
    "timeConsumedMillis": 857,
    "memoryConsumedBytes": 28774400,
    "source": "import sys\r\nsys.setrecursionlimit(10**7)\r\ninput=sys.stdin.readline\r\n\r\ndef isAcyclic():\r\n    for v in range(1,n+1):\r\n        if status[v]==0:\r\n            if isAcyclicDFS(v)==False:\r\n                return False\r\n            if smallest[v]==v:\r\n              ans[v]='A'\r\n    return True\r\n    \r\ndef isAcyclicDFS(v):\r\n    status[v]=1\r\n    smallest[v]=min(smallest[v],v)\r\n    for u in g[v]:\r\n        if status[u]==1:\r\n            return False\r\n        elif status[u]==0:\r\n            if isAcyclicDFS(u)==False:\r\n                return False\r\n        smallest[v]=min(smallest[v],smallest[u])\r\n    status[v]=2\r\n    return True\r\n  \r\nn,m=map(int,input().split())\r\nans=[0]*(n+10)\r\ncnt=[0]*(n+10)\r\nsmallest=[10**18]*(n+10)\r\ng=[[] for _ in range(n+10)]\r\nfor _ in range(m):\r\n    a,b=map(int,input().split())\r\n    g[a].append(b)\r\nstatus=[0]*(n+10)\r\nif isAcyclic()==True:\r\n    for i in range(1,n+1):\r\n        if ans[i]==0:\r\n          ans[i]='E'\r\n    print(ans.count('A'))\r\n    print(''.join(map(str,ans[1:n+1])))\r\nelse:\r\n    print(-1)"
}