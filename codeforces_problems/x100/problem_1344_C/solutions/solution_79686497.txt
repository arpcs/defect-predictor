{
    "id": 79686497,
    "contestId": 1344,
    "creationTimeSeconds": 1589139738,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "Shaad7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 8089600,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int mx = 200050;\nvector<int> adjlist[mx];\nint col[mx];\nbool quantifier[mx];\nint deg[mx];\nbool imp;\n\nvoid dfs(int u)\n{\n    col[u] = 1;\n    int i , v , l = adjlist[u].size();\n\n    for(i = 0 ; i < l ; i++)\n    {\n        v = adjlist[u][i];\n        if(col[v] == 1)\n        {\n            imp = 1;\n            return;\n        }\n        if(col[v] == 2)return;\n        dfs(v);\n    }\n\n    col[u] = 2;\n    return;\n}\n\nint main()\n{\n    int n , m , i , j , k , u , v;\n    scanf(\"%d %d\",&n,&m);\n    if(n == 3)return !printf(\"-1\\n\");\n\n    for(i = 0 ; i < m ; i++)\n    {\n        scanf(\"%d %d\",&u,&v);\n        adjlist[u].push_back(v);\n        deg[v]++;\n\n    }\n    k = 0;\n    for(i = 1 ; i <= n ; i++)\n    {\n        if(deg[i] == 0)\n        {\n            k++;\n            dfs(i);\n            quantifier[i] = 1;\n        }\n    }\n\n    for(i = 1 ; i <= n ; i++)\n    {\n        if(col[i] == 0 && deg[i])assert(0);\n    }\n    if(imp)return !printf(\"-1\\n\");\n\n    printf(\"%d\\n\",k);\n    for(i = 1 ; i <= n ; i++)\n    {\n        if(quantifier[i])printf(\"A\");\n        else printf(\"E\");\n    }\n    printf(\"\\n\");\n\n    return 0;\n}\n"
}