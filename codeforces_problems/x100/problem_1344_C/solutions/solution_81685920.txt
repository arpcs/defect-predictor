{
    "id": 81685920,
    "contestId": 1344,
    "creationTimeSeconds": 1590654733,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "dunko"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int maxn=2e5+7;\r\nint n,m,head[maxn],nxt[maxn],to[maxn],cnt,head1[maxn],nxt1[maxn],to1[maxn],cnt1;\r\nbool F,ans[maxn];\r\nint rd[maxn],cd[maxn],tot,vis[maxn],T;\r\n\r\ninline void add_edge(int x,int y){\r\n\tnxt[++cnt]=head[x],to[cnt]=y,head[x]=cnt;\r\n}\r\n\r\ninline void add_edge1(int x,int y){\r\n\tnxt1[++cnt1]=head1[x],to1[cnt1]=y,head1[x]=cnt1;\r\n}\r\n\r\ninline void Dfs(int u,int Min){\r\n\tfor(int i=head[u];i;i=nxt[i]){\r\n\t\tint v=to[i];\r\n\t\tif(v>Min) ans[v]=1;\r\n\t\tDfs(v,min(Min,v)); \r\n\t}\r\n}\r\n\r\ninline void Dfs1(int u,int Min){\r\n\tfor(int i=head1[u];i;i=nxt1[i]){\r\n\t\tint v=to1[i];\r\n\t\tif(v>Min) ans[v]=1;\r\n\t\tDfs1(v,min(Min,v)); \r\n\t}\r\n}\r\n\r\ninline bool Topo(){\r\n\tqueue<int>Q;\r\n\tfor(int i=1;i<=n;i++)\r\n\tif(rd[i]==0) Q.push(i);\r\n\twhile(Q.size()){\r\n\t\tint u=Q.front(); Q.pop(); vis[u]=1;\r\n\t\tfor(int i=head[u];i;i=nxt[i]){\r\n\t\t\tint v=to[i];\r\n\t\t\trd[v]--;\r\n\t\t\tif(rd[v]==0) Q.push(v);\r\n\t\t}\r\n\t}\r\n\tfor(int i=1;i<=n;i++)\r\n\tif(!vis[u]) return 1;\r\n\treturn 0;\r\n}\r\n\r\nint main(){\r\n\tscanf(\"%d%d\",&n,&m);\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tint x,y;\r\n\t\tscanf(\"%d%d\",&x,&y);\r\n\t\tadd_edge(y,x);\r\n\t\tadd_edge1(x,y);\r\n\t\trd[x]++,cd[y]++;\r\n\t}\r\n\t\r\n\tif(Topo()){\tprintf(\"-1\\n\"); return 0; }\r\n\t\r\n\tfor(int i=1;i<=n;i++) Dfs(i,i);\r\n\tfor(int i=1;i<=n;i++) Dfs1(i,i);\r\n\t\r\n\tfor(int i=1;i<=n;i++) if(!ans[i]) tot++;\r\n\tprintf(\"%d\\n\",tot);\r\n\tfor(int i=1;i<=n;i++) \r\n\tif(!ans[i]) printf(\"A\");\r\n\telse printf(\"E\");\r\n\treturn 0;\r\n}"
}