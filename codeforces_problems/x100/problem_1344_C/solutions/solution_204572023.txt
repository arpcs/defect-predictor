{
    "id": 204572023,
    "contestId": 1344,
    "creationTimeSeconds": 1683297501,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "kernel-panic"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 38,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 6656000,
    "source": "#include <cstdio>\r\n#include <queue>\r\n\r\nstatic int rd() {\r\n\tint x = 0, f = 1, c = getchar();\r\n\twhile (((c - '0') | ('9' - c)) < 0)\r\n\t\tf = c != '-', c = getchar();\r\n\twhile (((c - '0') | ('9' - c)) > 0)\r\n\t\tx = x * 10 + c - '0', c = getchar();\r\n\treturn f ? x : -x;\r\n}\r\n\r\nconst int N = 2e5;\r\n\r\nstruct edge {\r\n\tint v, nxt;\r\n} g[N + 5];\r\nint head[N + 5], ect;\r\nvoid add(int u, int v) {\r\n\tg[++ect] = {v, head[u]}, head[u] = ect;\r\n}\r\n\r\nint n, m;\r\n\r\nint ind[N + 5];\r\nint tp[N + 5], tpct;\r\nint p[N + 5], s[N + 5];\r\nchar ans[N + 5];\r\n\r\nint main() {\r\n\tn = rd(), m = rd();\r\n\tfor (int i = 1; i <= m; i++) {\r\n\t\tint u = rd(), v = rd();\r\n\t\tadd(u, v), ind[v]++;\r\n\t}\r\n\tstd::queue<int> q;\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tif (!ind[i]) tp[++tpct] = i, q.push(i);\r\n\t}\r\n\twhile (q.size()) {\r\n\t\tint u = q.front();\r\n\t\tq.pop();\r\n\t\tfor (int e = head[u]; e; e = g[e].nxt) {\r\n\t\t\tint v = g[e].v;\r\n\t\t\tif (!--ind[v]) tp[++tpct] = v, q.push(v);\r\n\t\t}\r\n\t}\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tif (ind[i]) return puts(\"-1\"), 0;\r\n\t}\r\n\t// for (int i = 1; i <= n; i++) fprintf(stderr, \"! %d\\n\", tp[i]);\r\n\tfor (int i = 1; i <= n; i++) p[i] = s[i] = i;\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tint u = tp[i];\r\n\t\tfor (int e = head[u]; e; e = g[e].nxt) {\r\n\t\t\tint v = g[e].v;\r\n\t\t\tp[v] = std::min(p[v], p[u]);\r\n\t\t}\r\n\t}\r\n\tfor (int i = n; i >= 1; i--) {\r\n\t\tint u = tp[i];\r\n\t\tfor (int e = head[u]; e; e = g[e].nxt) {\r\n\t\t\tint v = g[e].v;\r\n\t\t\ts[u] = std::min(s[u], s[v]);\r\n\t\t}\r\n\t}\r\n\tint ct = 0;\r\n\tfor (int i = 1; i <= n; i++) ans[i] = 'E';\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\t// fprintf(stderr, \"%d %d\\n\", p[i], s[i]);\r\n\t\tif (std::min(p[i], s[i]) == i) {\r\n\t\t\tct++, ans[i] = 'A';\r\n\t\t}\r\n\t}\r\n\tprintf(\"%d\\n%s\\n\", ct, ans + 1);\r\n\treturn 0;\r\n}"
}