{
    "id": 79334129,
    "contestId": 1344,
    "creationTimeSeconds": 1588897274,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "tloinuy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 38,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 25497600,
    "source": "\n#include <algorithm>\n#include <cstdio>\n#include <cstdlib>\n#include <cstdint>\n#include <cmath>\n#include <iostream>\n#include <map>\n#include <set>\n#include <queue>\n#include <vector>\n\nusing namespace std;\n\nconstexpr static int MAXN = 2e5 + 10;\nint n, m;\nint vis[MAXN];\nbool used[MAXN];\nvector <int> adj1[MAXN], adj2[MAXN];\nint m1[MAXN], m2[MAXN];\n\nvoid dfs(int u, int c) {\n    if (vis[u] != -1) {\n        if (vis[u] == c && used[u]) {\n            cout << -1 << endl;\n            exit(0);\n        }\n        return;\n    }\n    vis[u] = c;\n    used[u] = true;\n    for (int v : adj1[u])\n        dfs(v, c);\n    used[u] = false;\n}\n\nint dfs1(int u) {\n    if (m1[u] != -1)\n        return m1[u];\n    m1[u] = u;\n    for (int v : adj1[u])\n        m1[u] = min(m1[u], dfs1(v));\n    return m1[u];\n}\n\nint dfs2(int u) {\n    if (m2[u] != -1)\n        return m2[u];\n    m2[u] = u;\n    for (int v : adj2[u])\n        m2[u] = min(m2[u], dfs2(v));\n    return m2[u];\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n\n    cin >> n >> m;\n    for (int i = 0; i < m; i++) {\n        int u, v;\n        cin >> u >> v;\n        u--, v--;\n        adj1[u].push_back(v);\n        adj2[v].push_back(u);\n    }\n    for (int i = 0; i < n; i++)\n        vis[i] = m1[i] = m2[i] = -1;\n    for (int i = 0; i < n; i++)\n        dfs(i, i);\n    for (int i = 0; i < n; i++) {\n        dfs1(i);\n        dfs2(i);\n    }\n\n    string r;\n    int cnt = 0;\n    for (int i = 0; i < n; i++) {\n        if (m1[i] == i && m2[i] == i)\n            r += 'A', cnt++;\n        else\n            r += 'E';\n    }\n    cout << cnt << endl;\n    cout << r << endl;\n}\n"
}