{
    "id": 206577509,
    "contestId": 1344,
    "creationTimeSeconds": 1684544175,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1344,
        "index": "C",
        "name": "Quantifier Question",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1344,
        "members": [
            {
                "handle": "mazihang2022"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588775700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 12595200,
    "source": "#include<bits/stdc++.h>\r\n#define ll long long\r\n#define fir first\r\n#define sec second\r\n#define pii pair<int,int>\r\nusing namespace std;\r\n\r\nconst int maxn=200005;\r\n//const int maxn=25;\r\nconst int inf=0x3f3f3f3f;\r\n\r\nnamespace/*struct*/ Solve {\r\n\tvoid init(int n=0) {\r\n\t\t\r\n\t}\r\n\tvoid clear() {\r\n\t\t\r\n\t}\r\n\tvector<int> graph[maxn];\r\n\tvector<int> gr[maxn];\r\n\tint d[maxn];\r\n\tbool a[maxn];\r\n\tbool ban[maxn];\r\n\tbool br[maxn];\r\n\tvoid dfs(int x) {\r\n\t\tif(ban[x]) {\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tban[x]=true;\r\n\t\tfor(int to:graph[x]) {\r\n\t\t\tdfs(to);\r\n\t\t}\r\n\t}\r\n\tvoid dfsr(int x) {\r\n\t\tif(br[x]) {\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tbr[x]=true;\r\n\t\tfor(int to:gr[x]) {\r\n\t\t\tdfsr(to);\r\n\t\t}\r\n\t}\r\n\tstruct DSU {\r\n\t\tint fa[maxn];\r\n\t\tint sz[maxn];\r\n\t\tvoid init(int tn) {\r\n\t\t\tiota(fa+1,fa+tn+1,1);\r\n\t\t\tfill(sz+1,sz+tn+1,1);\r\n\t\t}\r\n\t\tint f(int x) {\r\n\t\t\treturn x==fa[x]?x:fa[x]=f(fa[x]);\r\n\t\t}\r\n\t\tbool same(int x,int y) {\r\n\t\t\treturn f(x)==f(y);\r\n\t\t}\r\n\t\tbool merge(int x,int y) {\r\n\t\t\tx=f(x),y=f(y);\r\n\t\t\tif(x==y) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tfa[x]=y,sz[y]+=sz[x];\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tint operator [] (const int &x) {\r\n\t\t\treturn f(x);\r\n\t\t}\r\n\t} dsu;\r\n\tvoid main(bool print=false) {\r\n\t\tint n,m;\r\n\t\tcin>>n>>m;\r\n\t\tdsu.init(n);\r\n\t\tfor(int i=1;i<=m;i++) {\r\n\t\t\tint x,y;\r\n\t\t\tcin>>x>>y;\r\n\t\t\td[y]++;\r\n\t\t\tdsu.merge(x,y);\r\n\t\t\tgr[y].push_back(x);\r\n\t\t\tgraph[x].push_back(y);\r\n\t\t}\r\n\t\tqueue<int> q;\r\n\t\tfor(int i=1;i<=n;i++) {\r\n\t\t\tif(!d[i]) {\r\n\t\t\t\tq.push(i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tint cnt=n;\r\n\t\twhile(q.size()) {\r\n\t\t\tint x=q.front();\r\n\t\t\tq.pop();\r\n\t\t\tcnt--;\r\n\t\t\tfor(int to:graph[x]) {\r\n\t\t\t\td[to]--;\r\n\t\t\t\tif(!d[to]) {\r\n\t\t\t\t\tq.push(to);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(cnt) {\r\n\t\t\tcout<<\"-1\\n\";\r\n\t\t} else {\r\n\t\t\tint ans=0;\r\n\t\t\tfor(int i=1;i<=n;i++) {\r\n\t\t\t\tif(ban[dsu.f(i)]) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tans++;\r\n\t\t\t\ta[i]=true;\r\n\t\t\t\tban[dsu.f(i)]=true;\r\n//\t\t\t\tdfs(i);\r\n//\t\t\t\tdfsr(i);\r\n\t\t\t}\r\n\t\t\tcout<<ans<<\"\\n\";\r\n\t\t\tfor(int i=1;i<=n;i++) {\r\n\t\t\t\tcout<<(a[i]?\"A\":\"E\");\r\n\t\t\t}\r\n\t\t\tcout<<\"\\n\";\r\n\t\t}\r\n\t}\r\n} //ss[114514];\r\n\r\nsigned main() {\r\n//\tfreopen(\"data.in\",\"r\",stdin);\r\n//\tfreopen(\"data.out\",\"w\",stdout);\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0),cout.tie(0);\r\n\tint T=1;\r\n//\tcin>>T;\r\n\tSolve::init();\r\n//\tss[t-1].init();\r\n\tfor(int t=1;t<=T;t++) {\r\n\t\tSolve::main();\r\n\t\tSolve::clear();\r\n//\t\tss[t-1].main();\r\n//\t\tss[t-1].clear();\r\n\t}\r\n}"
}