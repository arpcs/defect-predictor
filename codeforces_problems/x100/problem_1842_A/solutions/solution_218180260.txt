{
    "id": 218180260,
    "contestId": 1842,
    "creationTimeSeconds": 1691679170,
    "relativeTimeSeconds": 1070,
    "problem": {
        "contestId": 1842,
        "index": "A",
        "name": "Tenzing and Tsondu",
        "type": "PROGRAMMING",
        "points": 250.0,
        "rating": 800,
        "tags": [
            "games",
            "math"
        ]
    },
    "author": {
        "contestId": 1842,
        "members": [
            {
                "handle": "Wang_Xiaoguang"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1691678100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 1228800,
    "source": "// #pragma GCC optimize(2)\r\n// #pragma GCC optimize(3)\r\n// #pragma GCC optimize(\"Ofast\")\r\n// #pragma GCC optimize(\"inline\")\r\n// #pragma GCC optimize(\"-fgcse\")\r\n// #pragma GCC optimize(\"-fgcse-lm\")\r\n// #pragma GCC optimize(\"-fipa-sra\")\r\n// #pragma GCC optimize(\"-ftree-pre\")\r\n// #pragma GCC optimize(\"-ftree-vrp\")\r\n// #pragma GCC optimize(\"-fpeephole2\")\r\n// #pragma GCC optimize(\"-ffast-math\")\r\n// #pragma GCC optimize(\"-fsched-spec\")\r\n// #pragma GCC optimize(\"unroll-loops\")\r\n// #pragma GCC optimize(\"-falign-jumps\")\r\n// #pragma GCC optimize(\"-falign-loops\")\r\n// #pragma GCC optimize(\"-falign-labels\")\r\n// #pragma GCC optimize(\"-fdevirtualize\")\r\n// #pragma GCC optimize(\"-fcaller-saves\")\r\n// #pragma GCC optimize(\"-fcrossjumping\")\r\n// #pragma GCC optimize(\"-fthread-jumps\")\r\n// #pragma GCC optimize(\"-funroll-loops\")\r\n// #pragma GCC optimize(\"-fwhole-program\")\r\n// #pragma GCC optimize(\"-freorder-blocks\")\r\n// #pragma GCC optimize(\"-fschedule-insns\")\r\n// #pragma GCC optimize(\"inline-functions\")\r\n// #pragma GCC optimize(\"-ftree-tail-merge\")\r\n// #pragma GCC optimize(\"-fschedule-insns2\")\r\n// #pragma GCC optimize(\"-fstrict-aliasing\")\r\n// #pragma GCC optimize(\"-fstrict-overflow\")\r\n// #pragma GCC optimize(\"-falign-functions\")\r\n// #pragma GCC optimize(\"-fcse-skip-blocks\")\r\n// #pragma GCC optimize(\"-fcse-follow-jumps\")\r\n// #pragma GCC optimize(\"-fsched-interblock\")\r\n// #pragma GCC optimize(\"-fpartial-inlining\")\r\n// #pragma GCC optimize(\"no-stack-protector\")\r\n// #pragma GCC optimize(\"-freorder-functions\")\r\n// #pragma GCC optimize(\"-findirect-inlining\")\r\n// #pragma GCC optimize(\"-fhoist-adjacent-loads\")\r\n// #pragma GCC optimize(\"-frerun-cse-after-loop\")\r\n// #pragma GCC optimize(\"inline-small-functions\")\r\n// #pragma GCC optimize(\"-finline-small-functions\")\r\n// #pragma GCC optimize(\"-ftree-switch-conversion\")\r\n// #pragma GCC optimize(\"-foptimize-sibling-calls\")\r\n// #pragma GCC optimize(\"-fexpensive-optimizations\")\r\n// #pragma GCC optimize(\"-funsafe-loop-optimizations\")\r\n// #pragma GCC optimize(\"inline-functions-called-once\")\r\n// #pragma GCC optimize(\"-fdelete-null-pointer-checks\")\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\n#define rep(i,a,b) for(int i=a;i<=b;i++)\r\n#define rep1(i,a,b) for(int i=a;i<b;i++)\r\n#define rep2(i,a,b) for(int i=a;i>=b;i--)\r\n#define clean(x) memset(x,0,sizeof x)\r\n#define dirty(x) memset(x,0x7f,sizeof x)\r\ntemplate <typename T>\r\ninline void read(T &x){\r\n    x=0;\r\n    int f=1;\r\n    char ch=getchar();\r\n    while(!isdigit(ch)){\r\n        if(ch=='-') f=-1;\r\n        ch=getchar();\r\n    }\r\n    while(isdigit(ch)) x=x*10+(ch^48),ch=getchar();\r\n    x*=f;\r\n    return ;\r\n}\r\ntemplate <typename T>\r\ninline void write(T x){\r\n    if(x<0) putchar('-'),x=-x;\r\n    if(x>9) write(x/10);\r\n    putchar(x%10+'0');\r\n    return ;\r\n}\r\nconst int N=1e5+5;\r\nint n;\r\nint a[N];\r\nint sm[N],cnt[N];\r\nbool flag=false;\r\ninline void DFS(int dep,int k){\r\n    if(flag) return ;\r\n    if(dep>n){\r\n        if(k==1) return ;\r\n        double q=sm[1]*1.0000/cnt[1]*1.0000;\r\n        if(q!=ceil(q)) return ;\r\n        rep(i,2,k)if(sm[i]*1.0000/cnt[i]*1.0000!=q) return ;\r\n        flag=true;\r\n        return ;\r\n    }\r\n    rep(i,1,k){\r\n        sm[i]+=a[dep];\r\n        cnt[i]++;\r\n        DFS(dep+1,k);\r\n        sm[i]-=a[dep];\r\n        cnt[i]--;\r\n    }\r\n    sm[k+1]+=a[dep];\r\n    cnt[k+1]++;\r\n    DFS(dep+1,k+1);\r\n    sm[k+1]-=a[dep];\r\n    cnt[k+1]--;\r\n    return ;\r\n}\r\nint main(){\r\n    int t;\r\n    read(t);\r\n    while(t--){\r\n        int n,m;\r\n        read(n),read(m);\r\n        int s1=0,s2=0;\r\n        rep(i,1,n){\r\n            int x;\r\n            read(x);\r\n            s1+=x;\r\n        }\r\n        rep(i,1,m){\r\n            int x;\r\n            read(x);\r\n            s2+=x;\r\n        }\r\n        if(s1<s2) puts(\"Tenzing\");else if(s1>s2) puts(\"Tsondu\");else puts(\"Draw\");\r\n    }\r\n    return 0;\r\n}"
}