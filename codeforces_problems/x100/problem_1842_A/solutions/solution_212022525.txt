{
    "id": 212022525,
    "contestId": 1842,
    "creationTimeSeconds": 1688442119,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1842,
        "index": "A",
        "name": "Tenzing and Tsondu",
        "type": "PROGRAMMING",
        "points": 250.0,
        "rating": 800,
        "tags": [
            "games",
            "math"
        ]
    },
    "author": {
        "contestId": 1842,
        "members": [
            {
                "handle": "tachyon294"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1687615500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\nint main()\r\n{\r\n    ll t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        ll n,m;\r\n        cin>>n>>m;\r\n        ll arr[n];\r\n        for(ll i=0;i<n;i++)\r\n        {\r\n            cin>>arr[i];\r\n        }\r\n        ll brr[m];\r\n        for(ll j=0;j<m;j++)\r\n        {\r\n            cin>>brr[j];\r\n        }\r\n        ll tson=0;\r\n        ll tenzing=0;\r\n        tson=accumulate(arr,arr+n,0);\r\n        tenzing=accumulate(brr,brr+m,0);\r\n        if(tson-tenzing>0)\r\n            cout<<\"Tsondu\"<<endl;\r\n        else if(tson-tenzing<0)\r\n            cout<<\"Tenzing\"<<endl;\r\n        else\r\n            cout<<\"Draw\"<<endl;\r\n    }\r\n    return 0;\r\n}",
    "suggested_categories": [
        "algorithm design",
        "competitive programming",
        "code efficiency",
        "array processing",
        "input/output handling",
        "numeric operations",
        "looping",
        "conditional statements",
        "variable usage",
        "standard template library",
        "data accumulation",
        "code readability",
        "c++ programming",
        "error handling",
        "variable initialization",
        "code structure",
        "code comments",
        "code testing",
        "code optimization",
        "code modularity"
    ]
}