{
    "id": 211874829,
    "contestId": 1842,
    "creationTimeSeconds": 1688332245,
    "relativeTimeSeconds": 345,
    "problem": {
        "contestId": 1842,
        "index": "A",
        "name": "Tenzing and Tsondu",
        "type": "PROGRAMMING",
        "points": 250.0,
        "rating": 800,
        "tags": [
            "games",
            "math"
        ]
    },
    "author": {
        "contestId": 1842,
        "members": [
            {
                "handle": "dhruv437"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1688331900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n \r\n#define endl \"\\n\"\r\n#define MOD 1000000007\r\n#define int int64_t\r\n \r\nconst long long inf = (long long)(1e18) + 10;\r\nconst double dinf = 99999999999999999.0;\r\nconst double pie = 3.1415926535;\r\n \r\n#define read(arr) for(auto &x : arr) cin>>x;\r\n#define print(arr) for(auto &x: arr) cout<<x<<\" \"; cout<<endl;\r\nvector<string> split(string s)\r\n{\r\n    vector<string>words; \r\n    stringstream ss(s); \r\n    string word; \r\n    while(ss >> word) words.push_back(word);\r\n    return words;\r\n}\r\n \r\nint gcd(int a, int b)\r\n{\r\n    if (a == 0)\r\n        return b;\r\n    return gcd(b % a, a);\r\n}\r\n \r\n #define lcm(a, b) (a * (b / gcd(a, b)))\r\nbool isPrime(int n)\r\n{\r\n    if (n == 2 || n == 3)\r\n    {\r\n        return true;\r\n    }\r\n    if (n <= 1 || n % 2 == 0 || n % 3 == 0)\r\n    {\r\n        return false;\r\n    }\r\n    for (int i = 5; i * i <= n; i += 6)\r\n    {\r\n        if (n % i == 0 || n % (i + 2) == 0)\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nbool isPalindrome(string S)\r\n{\r\n    string P = S;\r\n    reverse(P.begin(), P.end());\r\n    if (S == P)\r\n    {\r\n        return true;\r\n    }\r\n    else\r\n    {\r\n        return false;\r\n    }\r\n}\r\nlong long Power(long long a,long long b)\r\n{\r\n    long long res = 1;\r\n    while(b  > 0)\r\n    {\r\n        if(b%2 == 0)\r\n        {\r\n            a = a*a;\r\n            b/=2;\r\n        }\r\n        else\r\n        {\r\n            res = res*a;\r\n            b--;\r\n        }\r\n    }\r\n    return res;\r\n}\r\n#define str(x) string(1,x)\r\nlong long Power(long long a,long long p);\r\n \r\n#define BITS 64\r\n#define binary(n) std::bitset<BITS>(n).to_string()\r\n#define setBits(n) std::bitset<BITS>(n).count()\r\n \r\n#define all(arr) arr.begin(), arr.end()\r\n \r\n#define random(x, y) uniform_int_distribution<int>(x, y)(tourist)\r\n \r\n#define fastIO ios_base::sync_with_stdio(false);cin.tie(NULL);\r\n#define Google(t) cout << \"Case #\" << t << \": \";\r\n \r\nconst int d4i[4]={-1, 0, 1, 0}, d4j[4]={0, 1, 0, -1};\r\nconst int d8i[8]={-1, -1, 0, 1, 1, 1, 0, -1}, d8j[8]={0, 1, 1, 1, 0, -1, -1, -1};\r\n \r\n \r\n \r\nvoid solve()\r\n{\r\n    int n,m;\r\n    cin>>n>>m;\r\n    vector<int>t(n);\r\n    read(t);\r\n    vector<int>ti(m);\r\n    read(ti);\r\n    int sum1=0;\r\n    int sum2=0;\r\n\r\n    for(auto x:t)sum1+=x;\r\n    for(auto x:ti)sum2+=x;\r\n    if(sum1>sum2)cout<<\"Tsondu\"<<endl;\r\n    else if(sum1<sum2)cout<<\"Tenzing\"<<endl;\r\n    else{\r\n        cout<<\"Draw\"<<endl;\r\n    }\r\n\r\n     \r\n}\r\n \r\nint32_t main()\r\n{\r\n    fastIO;\r\n    int t = 1;\r\n    cin >> t;\r\n    for (int tt = 1; tt <= t; tt++)\r\n    {\r\n        solve();\r\n    }\r\n \r\n    return 0;\r\n}"
}