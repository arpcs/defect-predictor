{
    "id": 213926072,
    "contestId": 1842,
    "creationTimeSeconds": 1689434738,
    "relativeTimeSeconds": 638,
    "problem": {
        "contestId": 1842,
        "index": "A",
        "name": "Tenzing and Tsondu",
        "type": "PROGRAMMING",
        "points": 250.0,
        "rating": 800,
        "tags": [
            "games",
            "math"
        ]
    },
    "author": {
        "contestId": 1842,
        "members": [
            {
                "handle": "jitu7033"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1689434100
    },
    "programmingLanguage": "Java 8",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 404,
    "memoryConsumedBytes": 0,
    "source": "// package codeforces;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Collections;\r\nimport java.util.Scanner;\r\n\r\npublic class codeforcesSolve {\r\n\r\n    // many function are present here by Jitu7033\r\n    static void inputArray(long[] arr, long n) {\r\n        Scanner sc = new Scanner(System.in);\r\n        for (int i = 0; i < n; i++) {\r\n            arr[i] = sc.nextLong();\r\n        }\r\n    }\r\n\r\n    static void printArray(long arr[]) {\r\n        for (int i = 0; i < arr.length; i++) {\r\n            System.out.print(arr[i] + \" \");\r\n        }\r\n        System.out.println();\r\n    }\r\n\r\n    static long findGcd(long x, long y) {\r\n        int ans = 0;\r\n        for (int i = 1; i < x; i++) {\r\n            if (x % i == 0 && y % i == 0) {\r\n                ans = i;\r\n            }\r\n        }\r\n        return ans;\r\n    }\r\n\r\n    static boolean checkPrimes(int n) {\r\n        for (int i = 2; i * i <= n; i++) {\r\n            if (n % i == 0) {\r\n                return false;\r\n            }\r\n        }\r\n        if (n <= 1) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static long findLcm(long a, long b) {\r\n        long l = (a * b) / findGcd((int) a, (int) b);\r\n        return l;\r\n    }\r\n\r\n    static int[] prefixSumArray(int arr[]) {\r\n        int n = arr.length;\r\n        int[] prefix = new int[n];\r\n        prefix[0] = arr[0];\r\n        for (int i = 1; i < n; i++) {\r\n            prefix[i] = prefix[i - 1] + arr[i];\r\n        }\r\n        return prefix;\r\n    }\r\n\r\n    static int[] suffixSumArray(int[] arr) {\r\n        int n = arr.length;\r\n        for (int i = n - 2; i >= 0; i--) {\r\n            arr[i] = arr[i + 1] + arr[i];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    static boolean checkSorted(String s) {\r\n        boolean flag = true;\r\n        for (int i = 0; i < s.length() - 1; i++) {\r\n            if (s.charAt(i) > s.charAt(i + 1)) {\r\n                flag = false;\r\n                break;\r\n            }\r\n        }\r\n        if (flag) return true;\r\n        return false;\r\n    }\r\n\r\n    static boolean checkSortedArray(long arr[]) {\r\n        boolean flag = false;\r\n        for (int i = 0; i < arr.length - 1; i++) {\r\n            if (arr[i] > arr[i + 1]) {\r\n                flag = true;\r\n            }\r\n        }\r\n        if (flag) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static void solve(long arr[] , long arr1[]) {\r\n        long sum1 = 0;\r\n        long sum = 0;\r\n        for(int i=0; i<arr.length; i++){\r\n            sum+=arr[i];\r\n        }\r\n        for(int i=0; i<arr1.length; i++){\r\n            sum1+=arr1[i];\r\n        }\r\n        if(sum>sum1) System.out.println(\"Tsondu\");\r\n        else if(sum<sum1) System.out.println(\"Tenzing\");\r\n        else System.out.println(\"Draw\");\r\n\r\n    }\r\n\r\n\r\n    public static void main(String[] args) {\r\n        Scanner sc = new Scanner(System.in);\r\n        long test = sc.nextLong();\r\n        for (int te = 0; te < test; te++) {\r\n            long n = sc.nextLong();\r\n            long m = sc.nextLong();\r\n            long arr[] = new long[(int) n];\r\n            for (int i = 0; i < n; i++) {\r\n                arr[i] = sc.nextLong();\r\n            }\r\n            long arr1[] = new long[(int) m];\r\n            for (int i = 0; i < m; i++) {\r\n                arr1[i] = sc.nextLong();\r\n            }\r\n//            String s = sc.next();\r\n            solve(arr,arr1);\r\n        }\r\n    }\r\n}\r\n//}\r\n"
}