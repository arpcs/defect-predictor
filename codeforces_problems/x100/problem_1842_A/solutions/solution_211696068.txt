{
    "id": 211696068,
    "contestId": 1842,
    "creationTimeSeconds": 1688201151,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1842,
        "index": "A",
        "name": "Tenzing and Tsondu",
        "type": "PROGRAMMING",
        "points": 250.0,
        "rating": 800,
        "tags": [
            "games",
            "math"
        ]
    },
    "author": {
        "contestId": 1842,
        "members": [
            {
                "handle": "coder_vishnu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1687615500
    },
    "programmingLanguage": "Java 8",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 0,
    "source": "import static java.lang.Math.max;\r\nimport static java.lang.Math.min;\r\nimport static java.lang.Math.abs;\r\nimport java.util.*;\r\nimport java.io.*;\r\n\r\npublic class Main {\r\n\r\n\r\n    public static void main(String[] vishnu) {\r\n        FastScanner fs = new FastScanner();\r\n        int t = fs.nextInt();\r\n        while (t-->0) {\r\n            solve(fs);\r\n        }\r\n    }\r\n\r\n    public static void solve(FastScanner fs){\r\n        int n,m; \r\n        n= fs.nextInt();\r\n        m = fs.nextInt(); \r\n        int[] a= fs.readArray(n);\r\n        int[] b= fs.readArray(m);\r\n        long s1=0,s2=0; \r\n        for(int i=0;i<n;i++)s1+=a[i];\r\n        for(int i=0;i<m;i++)s2+=b[i];\r\n        if(s1>s2){\r\n            System.out.println(\"Tsondu\");\r\n        }\r\n        else if(s1<s2){\r\n            System.out.println(\"Tenzing\");\r\n        }\r\n        else{\r\n            System.out.println(\"Draw\");\r\n        }\r\n    }\r\n\r\n    \r\n    static final int mod = 998244353;\r\n\r\n    static long add(long a, long b) {\r\n        return (a + b) % mod;\r\n    }\r\n\r\n    static long sub(long a, long b) {\r\n        return ((a - b) % mod + mod) % mod;\r\n    }\r\n\r\n    static long mul(long a, long b) {\r\n        return (a * b) % mod;\r\n    }\r\n\r\n    static void sort(int[] a) {\r\n        ArrayList<Integer> v = new ArrayList<Integer>();\r\n        for (int x : a) {\r\n            v.add(x);\r\n        }\r\n        Collections.sort(v);\r\n        for (int i = 0; i < a.length; i++) {\r\n            a[i] = v.get(i);\r\n        }\r\n    }\r\n\r\n    static long pow(long a, long b) {\r\n        if (b == 0)\r\n            return 1;\r\n        long half = pow(a, b / 2);\r\n        if (b % 2 == 0)\r\n            return mul(half, half);\r\n        return mul(half, mul(half, a));\r\n    }\r\n\r\n    static class FastScanner {\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n        StringTokenizer st = new StringTokenizer(\"\");\r\n\r\n        String next() {\r\n            while (!st.hasMoreTokens())\r\n                try {\r\n                    st = new StringTokenizer(br.readLine());\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            return st.nextToken();\r\n        }\r\n\r\n        int nextInt() {\r\n            return Integer.parseInt(next());\r\n        }\r\n\r\n        int[] readArray(int n) {\r\n            int[] a = new int[n];\r\n            for (int i = 0; i < n; i++)\r\n                a[i] = nextInt();\r\n            return a;\r\n        }\r\n\r\n        long nextLong() {\r\n            return Long.parseLong(next());\r\n        }\r\n    }\r\n}"
}