{
    "id": 233425408,
    "contestId": 189,
    "creationTimeSeconds": 1700401503,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 189,
        "index": "B",
        "name": "Counting Rhombi",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "brute force",
            "math"
        ]
    },
    "author": {
        "contestId": 189,
        "members": [
            {
                "handle": "hasytueminh12"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1336663800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n    int t;\r\n    cin >> t;\r\n\r\n    while (t--) {\r\n        int n;\r\n        cin >> n;\r\n\r\n        vector<int> weights(n);\r\n        for (int i = 0; i < n; i++) {\r\n            cin >> weights[i];\r\n        }\r\n\r\n        sort(weights.begin(), weights.end());\r\n\r\n        int maxDiff = 0;\r\n        for (int k = 1; k <= n; k++) {\r\n            long long firstKSum = 0;\r\n            long long lastKSum = 0;\r\n\r\n            for (int i = 0; i < k; i++) {\r\n                firstKSum += weights[i];\r\n                lastKSum += weights[n - k + i];\r\n            }\r\n\r\n            maxDiff = max(maxDiff, abs(firstKSum - lastKSum));\r\n        }\r\n\r\n        cout << maxDiff << endl;\r\n    }\r\n\r\n    return 0;\r\n}"
}