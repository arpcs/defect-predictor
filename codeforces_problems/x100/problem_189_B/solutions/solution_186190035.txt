{
    "id": 186190035,
    "contestId": 189,
    "creationTimeSeconds": 1671610406,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 189,
        "index": "B",
        "name": "Counting Rhombi",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "brute force",
            "math"
        ]
    },
    "author": {
        "contestId": 189,
        "members": [
            {
                "handle": "KhadijaBadrawy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1336663800
    },
    "programmingLanguage": "Java 11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 374,
    "memoryConsumedBytes": 0,
    "source": "// package SheetC1;\r\n\r\nimport java.io.*;\r\nimport java.util.StringTokenizer;\r\n\r\npublic class Round119B {\r\n    public static void main(String[] args) throws IOException {\r\n        Scanner sc = new Scanner(System.in);\r\n        PrintWriter pw = new PrintWriter(System.out);\r\n        int t =1;\r\n//        t= sc.nextInt();\r\n        while(t-->0){\r\n            int w = sc.nextInt();\r\n            int h = sc.nextInt();\r\n            int maxSize = Math.min(w,h)-1;\r\n            long res=0;\r\n            for(int i =0;i<=w;i++){\r\n                for(int j =0;j<=h;j++){\r\n                    res+= (long) Math.min(w - i, i) *Math.min(h-j,j);\r\n                }\r\n            }\r\n            pw.println(res);\r\n        }\r\n        pw.close();\r\n    }\r\n    // -------------------------------------------------------Scanner---------------------------------------------------\r\n    static class Scanner {\r\n        StringTokenizer st;\r\n        BufferedReader br;\r\n\r\n        public Scanner(InputStream s) {\r\n            br = new BufferedReader(new InputStreamReader(s));\r\n        }\r\n\r\n        public Scanner(FileReader r) {\r\n            br = new BufferedReader(r);\r\n        }\r\n\r\n        public String next() throws IOException {\r\n            while (st == null || !st.hasMoreTokens())\r\n                st = new StringTokenizer(br.readLine());\r\n            return st.nextToken();\r\n        }\r\n\r\n        public int nextInt() throws IOException {\r\n            return Integer.parseInt(next());\r\n        }\r\n\r\n        public long nextLong() throws IOException {\r\n            return Long.parseLong(next());\r\n        }\r\n\r\n        public String nextLine() throws IOException {\r\n            return br.readLine();\r\n        }\r\n\r\n        public double nextDouble() throws IOException {\r\n            String x = next();\r\n            StringBuilder sb = new StringBuilder(\"0\");\r\n            double res = 0, f = 1;\r\n            boolean dec = false, neg = false;\r\n            int start = 0;\r\n            if (x.charAt(0) == '-') {\r\n                neg = true;\r\n                start++;\r\n            }\r\n            for (int i = start; i < x.length(); i++)\r\n                if (x.charAt(i) == '.') {\r\n                    res = Long.parseLong(sb.toString());\r\n                    sb = new StringBuilder(\"0\");\r\n                    dec = true;\r\n                } else {\r\n                    sb.append(x.charAt(i));\r\n                    if (dec)\r\n                        f *= 10;\r\n                }\r\n            res += Long.parseLong(sb.toString()) / f;\r\n            return res * (neg ? -1 : 1);\r\n        }\r\n\r\n        public long[] nextlongArray(int n) throws IOException {\r\n            long[] a = new long[n];\r\n            for (int i = 0; i < n; i++)\r\n                a[i] = nextLong();\r\n            return a;\r\n        }\r\n\r\n        public Long[] nextLongArray(int n) throws IOException {\r\n            Long[] a = new Long[n];\r\n            for (int i = 0; i < n; i++)\r\n                a[i] = nextLong();\r\n            return a;\r\n        }\r\n\r\n        public int[] nextIntArray(int n) throws IOException {\r\n            int[] a = new int[n];\r\n            for (int i = 0; i < n; i++)\r\n                a[i] = nextInt();\r\n            return a;\r\n        }\r\n\r\n        public Integer[] nextIntegerArray(int n) throws IOException {\r\n            Integer[] a = new Integer[n];\r\n            for (int i = 0; i < n; i++)\r\n                a[i] = nextInt();\r\n            return a;\r\n        }\r\n\r\n\r\n        public boolean ready() throws IOException {\r\n            return br.ready();\r\n        }\r\n\r\n    }\r\n}\r\n"
}