{
    "id": 132233190,
    "contestId": 1583,
    "creationTimeSeconds": 1634471371,
    "relativeTimeSeconds": 2671,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "salakh"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 56,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <complex>\r\n#include <vector>\r\n#include <string>\r\n#include <algorithm>\r\n#include <cstdio>\r\n#include <numeric>\r\n#include <cstring>\r\n#include <ctime>\r\n#include <cstdlib>\r\n#include <set>\r\n#include <map>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\n#include <list>\r\n#include <cmath>\r\n#include <bitset>\r\n#include <cassert>\r\n#include <queue>\r\n#include <stack>\r\n#include <deque>\r\n#include <random>\r\n\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\nusing ld = long double;\r\nusing ull = unsigned long long;\r\nusing pii = pair<int, int>;\r\nusing pll = pair<ll, ll>;\r\nusing vi = vector<int>;\r\n\r\n#define EGORBURKATSKY ios_base::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);\r\n\r\n#define all(c) (c).begin(), (c).end()\r\n#define vin(a) for (auto& i : a) cin >> i\r\n#define fi first\r\n#define se second\r\n\r\n//mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nconst ll INF = 1e18;\r\nconst int MOD = 1e9 + 7;\r\n\r\nint sum(int a, int b) {\r\n    a += b;\r\n    if (a >= MOD) {\r\n        a -= MOD;\r\n    }\r\n    return a;\r\n}\r\n\r\nint sub(int a, int b) {\r\n    a -= b;\r\n    if (a < 0) {\r\n        a += MOD;\r\n    }\r\n    return a;\r\n}\r\n\r\nint mul(int a, int b) {\r\n    return (long long)a * b % MOD;\r\n}\r\n\r\nint bipow(int a, int b) {\r\n    int k = 1;\r\n    while (b > 0) {\r\n        if (b & 1) {\r\n            k = mul(a, k);\r\n        }\r\n        a = mul(a, a);\r\n        b >>= 1;\r\n    }\r\n    return k;\r\n}\r\n\r\n\r\nint inv(int a) {\r\n    return bipow(a, MOD - 2);\r\n}\r\n\r\nvector<int> col;\r\nvector<vector<int>> comp;\r\n\r\nint find_set(int v) {\r\n    return col[v];\r\n}\r\n\r\nvoid union_sets(int u, int v) {\r\n    u = find_set(u);\r\n    v = find_set(v);\r\n    if (u != v) {\r\n        if (comp[v].size() > comp[u].size())\r\n            swap(u, v);\r\n        for (auto it : comp[v]) {\r\n            col[it] = u;\r\n            comp[u].push_back(it);\r\n        }\r\n        comp[v].clear();\r\n    }\r\n}\r\n\r\nvoid solve() {\r\n    int n, m;\r\n    cin >> n >> m;\r\n    col.resize(n + 1);\r\n    comp.resize(n + 1);\r\n    iota(all(col), 0);\r\n    for (int i = 0; i <= n; ++i) {\r\n        comp[i].push_back(i);\r\n    }\r\n    vector<bool> used(n + 1);\r\n    int cur = n;\r\n    set<pii> e;\r\n    set<int> d;\r\n    int x = -1;\r\n    for (int i = 0; i < m; ++i) {\r\n        int a, b, c;\r\n        cin >> a >> b >> c;\r\n        if (find_set(a) != find_set(c)) {\r\n            x = a;\r\n            e.insert({a, c});\r\n            union_sets(a, c);\r\n            d.insert(b);\r\n            cur--;\r\n        }\r\n    }\r\n    for (auto it : d) {\r\n        if (find_set(it) != find_set(x)) {\r\n            e.insert({x, it});\r\n            union_sets(x, it);\r\n            x = it;\r\n            cur--;\r\n        }\r\n    }\r\n    if (cur != 1) {\r\n        int k = find_set(1);\r\n        int s = comp[k][0];\r\n        for (int i = 2; i < col.size(); ++i) {\r\n            if (find_set(i) != k) {\r\n                union_sets(s, i);\r\n                e.insert({s, i});\r\n            }\r\n        }\r\n    }\r\n    for (auto i : e) {\r\n        cout << i.fi << \" \" << i.se << '\\n';\r\n    }\r\n    cout << '\\n';\r\n}\r\n\r\nint main() {\r\n    EGORBURKATSKY;\r\n    cout.precision(20), cout.setf(ios::fixed);\r\n#ifdef __DEBUG\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n    int test = 1;\r\n    cin >> test;\r\n    while (test--) solve();\r\n}\r\n"
}