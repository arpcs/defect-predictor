{
    "id": 132980766,
    "contestId": 1583,
    "creationTimeSeconds": 1635140211,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "Spectra_404"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 639,
    "memoryConsumedBytes": 1433600,
    "source": "#include <bits/stdc++.h>\r\n// #include <ext/pb_ds/assoc_container.hpp>\r\n// #include <ext/pb_ds/tree_policy.hpp>\r\n \r\n#define pii              pair <int,int>\r\n#define pll              pair <long long,long long>\r\n#define sc               scanf\r\n#define pf               printf\r\n#define Pi               2*acos(0.0)\r\n#define ms(a,b)          memset(a, b, sizeof(a))\r\n#define pb(a)            push_back(a)\r\n#define MP               make_pair\r\n#define db               double\r\n#define ll               long long\r\n#define EPS              10E-10\r\n#define ff               first\r\n#define ss               second\r\n#define sqr(x)           (x)*(x)\r\n#define vi               vector <int>\r\n#define MOD              1000000007\r\n#define fast_cin         ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)\r\n#define SZ(a)            (int)a.size()\r\n#define sf(a)            scanf(\"%d\",&a)\r\n#define sfl(a)           scanf(\"%lld\",&a)\r\n#define sff(a,b)         scanf(\"%d %d\",&a,&b)\r\n#define sffl(a,b)        scanf(\"%lld %lld\",&a,&b)\r\n#define sfff(a,b,c)      scanf(\"%d %d %d\",&a,&b,&c)\r\n#define sfffl(a,b,c)     scanf(\"%lld %lld %lld\",&a,&b,&c)\r\n#define stlloop(v)       for(__typeof(v.begin()) it=v.begin();it!=v.end();it++)\r\n#define UNIQUE(v)        (v).erase(unique((v).begin(),(v).end()),(v).end())\r\n#define POPCOUNT         __builtin_popcountll\r\n#define RIGHTMOST        __builtin_ctzll\r\n#define LEFTMOST(x)      (63-__builtin_clzll((x)))\r\n#define NUMDIGIT(x,y)    (((vlong)(log10((x))/log10((y))))+1)\r\n#define NORM(x)          if(x>=mod) x-=mod;if(x<0) x+=mod;\r\n#define ODD(x)           (((x)&1)==0?(0):(1))\r\n#define loop(i,n)        for(int i=0;i<n;i++)\r\n#define loop1(i,n)       for(int i=1;i<=n;i++)\r\n#define REP(i,a,b)       for(int i=a;i<b;i++)\r\n#define RREP(i,a,b)      for(int i=a;i>=b;i--)\r\n#define TEST_CASE(t)     for(int z=1;z<=t;z++)\r\n#define PRINT_CASE       printf(\"Case %d: \",z)\r\n#define LINE_PRINT_CASE  printf(\"Case %d:\\n\",z)\r\n#define CASE_PRINT       cout<<\"Case \"<<z<<\": \"\r\n#define all(a)           a.begin(),a.end()\r\n#define intlim           2147483648\r\n#define infinity         (1<<28)\r\n#define ull              unsigned long long\r\n#define gcd(a, b)        __gcd(a, b)\r\n#define lcm(a, b)        ((a)*((b)/gcd(a,b)))\r\n#define D(x)            cerr << __LINE__ << \": \" << #x << \" = \" << (x) << '\\n'\r\n#define DD(x,y)          cerr << __LINE__ << \": \" << #x << \" = \" << x << \"   \" << #y << \" = \" << y << '\\n'\r\n#define DDD(x,y,z)       cerr << __LINE__ << \": \" << #x << \" = \" << x << \"   \" << #y << \" = \" << y << \"   \" << #z << \" = \" << z << '\\n'\r\n#define DBG              cerr << __LINE__ << \": Hi\" << '\\n'\r\n \r\nusing namespace std;\r\n \r\n//using namespace __gnu_pbds;\r\n//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\r\n \r\n \r\n/*----------------------Graph Moves----------------*/\r\n//const int fx[]={+1,-1,+0,+0};\r\n//const int fy[]={+0,+0,+1,-1};\r\n//const int fx[]={+0,+0,+1,-1,-1,+1,-1,+1};   // Kings Move\r\n//const int fy[]={-1,+1,+0,+0,+1,+1,-1,-1};  // Kings Move\r\n//const int fx[]={-2, -2, -1, -1,  1,  1,  2,  2};  // Knights Move\r\n//const int fy[]={-1,  1, -2,  2, -2,  2, -1,  1}; // Knights Move\r\n/*------------------------------------------------*/\r\n \r\n/*-----------------------Bitmask------------------*/\r\n//int Set(int N,int pos){return N=N | (1<<pos);}\r\n//int reset(int N,int pos){return N= N & ~(1<<pos);}\r\n//bool check(int N,int pos){return (bool)(N & (1<<pos));}\r\n/*------------------------------------------------*/\r\n \r\nbool isPal(string s){\r\n    for(int i=0;i<(int)s.size()/2;i++){\r\n        if(s[i]!=s[(int)s.size()-1-i]) return false;\r\n    }\r\n    return true;\r\n} \r\nint main() {\r\n//#ifndef ONLINE_JUDGE\r\n// freopen(\"input.txt\",\"r\",stdin);\r\n   // freopen(\"output.txt\",\"w\",stdout);\r\n//#endif\r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        int n , m;\r\n        cin >> n >> m;\r\n        int s[m+1]={0};\r\n        while(m--)\r\n        {\r\n            int a,b,c;\r\n            cin >> a >> b >> c;\r\n            s[b]++;\r\n        }\r\n        int k;\r\n        for(k = 1; k < n;k++)\r\n        {\r\n            if(!s[k]) break;\r\n        }\r\n        loop1( i , n)\r\n        {\r\n            if(i != k)cout << k << \" \" << i << endl;\r\n        }\r\n\r\n    }\r\n \r\n    return 0;\r\n}"
}