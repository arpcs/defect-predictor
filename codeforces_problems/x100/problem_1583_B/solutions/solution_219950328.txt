{
    "id": 219950328,
    "contestId": 1583,
    "creationTimeSeconds": 1692727532,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "Yaro2709"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 608,
    "memoryConsumedBytes": 102400,
    "source": "#include<iostream>\r\n#include<cstring>\r\n\r\nusing namespace std;\r\n\r\nconst int N = 1e5 + 10;\r\nbool st[N];\r\n\r\nint main() {\r\n    int T, n, m;\r\n    cin >> T;\r\n    while (T--) {\r\n        memset(st, 0, sizeof(st));\r\n        cin >> n >> m;\r\n        int t = 1;\r\n        for (int i = 1; i <= m; i++) {\r\n            int a, b, c;\r\n            cin >> a >> b >> c;\r\n            st[b] = 1;\r\n        }\r\n        for (int i = 1; i <= n; i++)\r\n            if (!st[i]) {\r\n                t = i;\r\n                break;\r\n            }\r\n        for (int i = 1; i <= n; i++)\r\n            if (i != t) cout << t << ' ' << i << endl;\r\n    }\r\n\r\n    return 0;\r\n}"
}