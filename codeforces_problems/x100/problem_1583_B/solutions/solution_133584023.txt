{
    "id": 133584023,
    "contestId": 1583,
    "creationTimeSeconds": 1635583237,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "despair_101"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 1638400,
    "source": "#define _CRT_SECURE_NO_WARNINGS\r\n\r\n#include \"bits/stdc++.h\"\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef unsigned long long ull;\r\n\r\n//#define int ll\r\n#define sz(a) int(a.size())\r\n#define dbg(a) cout << #a << \" = \" << a << \"\\n\"\r\n#define dbg1(a) cout << #a << \" = [ \"; for (auto& _ : a) cout << _ << \" \"; cout << \"]\\n\"\r\n#define dbg2(a) cout << #a << \" = [ \"; for (auto& _ : a) cout << \"(\" << _.first << \" \" << _.second << \") \"; cout << \"]\\n\"\r\n\r\nmt19937 rnd(130);\r\nconst int INF = 1000000007;\r\nconst ll INF_LL = 1152921504606846977;\r\n//\r\n#ifndef DESPAIR_101\r\n//freopen(\"\", \"r\", stdin);\r\n//freopen(\"\", \"w\", stdout);\r\n#endif\r\n\r\nvoid ri(int& x) {\r\n  string s;\r\n  cin >> s;\r\n  x = 0;\r\n  if (s[0] == '-') {\r\n    for (int i = 1; i < sz(s); ++i) {\r\n      x = x * 10 + (s[i] - '0');\r\n    }\r\n  } else {\r\n    for (int i = 0; i < sz(s); ++i) {\r\n      x = x * 10 + (s[i] - '0');\r\n    }\r\n  }\r\n}\r\n\r\nvoid solve() {\r\n  int n, m;\r\n  ri(n);\r\n  ri(m);\r\n  vector<int> used(n);\r\n  for (int i = 0; i < m; ++i) {\r\n    int a, b, c;\r\n    ri(a);\r\n    ri(b);\r\n    ri(c);\r\n    used[b - 1] = 1;\r\n  }\r\n  int vertex = 0;\r\n  for (int i = 0; i < n; ++i) {\r\n    if (!used[i]) {\r\n      vertex = i;\r\n    }\r\n  }\r\n  for (int i = 0; i < n; ++i) {\r\n    if (i != vertex) {\r\n      cout << vertex + 1 << ' ' << i + 1 << '\\n';\r\n    }\r\n  }\r\n}\r\n\r\nsigned main() {\r\n  //cin.tie(0)->ios::sync_with_stdio(0);\r\n  cout << fixed << setprecision(20);\r\n  int tests_lim = 1;\r\n  cin >> tests_lim;\r\n  for (int test = 1; test <= tests_lim; ++test) {\r\n#ifdef DESPAIR_101\r\n    cout << \"_____Test #\" << test << \"_____\\n\";\r\n#endif\r\n    solve();\r\n  }\r\n}"
}