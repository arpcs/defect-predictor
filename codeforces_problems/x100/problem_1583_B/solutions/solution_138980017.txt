{
    "id": 138980017,
    "contestId": 1583,
    "creationTimeSeconds": 1639396993,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "nostradimus"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\r\n#define fast ios_base::sync_with_stdio(false);\r\n#define input cin.tie(NULL);\r\n#define output cout.tie(NULL);\r\n#define MOD 1000000007\r\n#define lli long long int\r\n#define rep(i, m, n) for (auto i = m; i < n; i++)\r\n#define pb push_back\r\n#define fr first\r\n#define sc second\r\n#define pi 3.141592653589793238\r\n#define Setpre(n) cout << fixed << setprecision(n)\r\nlli gcd(lli a, lli b)\r\n{\r\n    if (b == 0)\r\n        return a;\r\n    return gcd(b, a % b);\r\n}\r\nlli lcm(lli a, lli b) { return (a / gcd(a, b) * b); }\r\nbool isPrime(int n)\r\n{\r\n    if (n <= 1)\r\n        return false;\r\n    if (n <= 3)\r\n        return true;\r\n    if (n % 2 == 0 || n % 3 == 0)\r\n        return false;\r\n    for (int i = 5; i * i <= n; i = i + 6)\r\n        if (n % i == 0 || n % (i + 2) == 0)\r\n            return false;\r\n    return true;\r\n}\r\nbool isPowerOfTwo(int n)\r\n{\r\n    if (n == 0)\r\n        return false;\r\n    return (ceil(log2(n)) == floor(log2(n)));\r\n}\r\nbool isPerfectSquare(lli x)\r\n{\r\n    if (x >= 0)\r\n    {\r\n        lli sr = sqrt(x);\r\n        return (sr * sr == x);\r\n    }\r\n    return false;\r\n}\r\nlli moduloMultiplication(lli a, lli b, lli mod)\r\n{\r\n    lli res = 0;\r\n    a %= mod;\r\n    while (b)\r\n    {\r\n        if (b & 1)\r\n            res = (res + a) % mod;\r\n        a = (2 * a) % mod;\r\n        b >>= 1;\r\n    }\r\n    return res;\r\n} //returns (a*b)%mod\r\nlli powermod(lli x, lli y, lli p)\r\n{\r\n    lli res = 1;\r\n    x = x % p;\r\n    if (x == 0)\r\n        return 0;\r\n    while (y > 0)\r\n    {\r\n        if (y & 1)\r\n            res = (res * x) % p;\r\n        y = y >> 1;\r\n        x = (x * x) % p;\r\n    }\r\n    return res;\r\n} //returns (x^y)%p\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    fast input output int t;\r\n    cin >> t;\r\n\r\n    while (t--)\r\n    {\r\n        lli n, m;\r\n        cin >> n >> m;\r\n\r\n        vector<lli> v;\r\n        vector<lli> w;\r\n\r\n        rep(i, 0, n)\r\n        {\r\n            w.push_back(i + 1);\r\n        }\r\n\r\n        rep(i, 0, m)\r\n        {\r\n            lli a, b, c;\r\n            cin >> a >> b >> c;\r\n            v.push_back(b);\r\n        }\r\n\r\n        sort(v.begin(), v.end());\r\n\r\n        auto it = unique(v.begin(), v.end());\r\n        v.resize(distance(v.begin(), it));\r\n\r\n        lli ans = w[0];\r\n\r\n        rep(i, 0, w.size())\r\n        {\r\n            // cout << \"w=\" << w[i] << ' ' << \" v=\" << v[i] << endl;\r\n            if (w[i] == v[i])\r\n            {\r\n                // cout << \"lala\" << endl;\r\n                continue;\r\n            }\r\n            else\r\n            {\r\n                // cout << \"hihi\" << endl;\r\n                ans = w[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        rep(i, 0, n)\r\n        {\r\n            if (w[i] == ans)\r\n            {\r\n                continue;\r\n            }\r\n            else\r\n            {\r\n                cout << ans << ' ' << w[i] << endl;\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}"
}