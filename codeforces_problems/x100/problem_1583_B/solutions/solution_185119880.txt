{
    "id": 185119880,
    "contestId": 1583,
    "creationTimeSeconds": 1670959769,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "darth_daenerys"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long int\r\n#define fastio ios_base::sync_with_stdio(false); cin.tie(0);\r\nusing namespace std;\r\n#define rep(i,a,b) for(i=a;i<=b;i++)\r\n#define maxHeap priority_queue<ll>\r\n#define minHeap priority_queue<ll,vector<ll>,greater<ll>>\r\n#define all(x) (x).begin(),(x).end()\r\nconst ll MOD=1e9+7;\r\nconst double PI=3.141592653589793238;\r\nconst ll INF=1e18;\r\nvoid solve()\r\n{\r\n    ll n,m,i,a,b,c;\r\n    cin>>n>>m;\r\n    vector<bool> restrict(n+1,0);\r\n    rep(i,1,m)\r\n    {\r\n        cin>>a>>b>>c;\r\n        restrict[b]=1;\r\n    }\r\n    ll idx;\r\n    rep(i,1,n)\r\n    {\r\n        if(!restrict[i])\r\n        {\r\n            idx=i;\r\n            break;\r\n        }\r\n    }\r\n    rep(i,1,n)\r\n    {\r\n        if(i!=idx)\r\n            cout<<idx<<\" \"<<i<<'\\n';\r\n    }\r\n}\r\nint main() {\r\n    fastio\r\n    ll t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        solve();\r\n    }\r\n\treturn 0;\r\n}"
}