{
    "id": 145293970,
    "contestId": 1583,
    "creationTimeSeconds": 1644068366,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "FascTide"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 819200,
    "source": "// Problem: B. Omkar and Heavenly Tree\r\n// Contest: Codeforces - Technocup 2022 - Elimination Round 1\r\n// URL: https://codeforces.com/problemset/problem/1583/B\r\n// Memory Limit: 256 MB\r\n// Time Limit: 2000 ms\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\n#define pii pair<int,int>\r\nconst int mod=1e9+7;\r\nconst int INF=0x3f3f3f3f;\r\nconst int maxn=1e5+4;\r\nint vis[maxn],fa[maxn];\r\nint find(int x){\r\n\tif (x==fa[x]) return x;\r\n\treturn fa[x]=find(fa[x]);\r\n}\r\nvoid merge(int x,int y){\r\n\tint xx=find(x);\r\n\tint yy=find(y);\r\n\tfa[xx]=yy;\r\n}\r\nint main(){\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0),cout.tie(0);\r\n\tint t;\r\n\tcin>>t;\r\n\twhile (t--){\r\n\t\tint n,m;\r\n\t\tcin>>n>>m;\r\n\t\tfor (int i=1;i<=n;i++) fa[i]=i;\r\n\t\tint cnt=0;\r\n\t\tvector<int>others;\r\n\t\tfor (int i=1;i<=m;i++){\r\n\t\t\tint a,b,c;\r\n\t\t\tcin>>a>>b>>c;\r\n\t\t\tothers.push_back(b);\r\n\t\t}\r\n\t\tsort(others.begin(),others.end());\r\n\t\tothers.erase(unique(others.begin(),others.end()),others.end());\r\n\t\tfor (int i=0;i<others.size()-1;i++){\r\n\t\t\tmerge(others[i],others[i+1]);\r\n\t\t\tcout<<others[i]<<' '<<others[i+1]<<\"\\n\";\r\n\t\t\tcnt++;\r\n\t\t\tif (cnt==n-1) break;\r\n\t\t}\r\n\t\tif (cnt==n-1) continue;\r\n\t\tvector<int>node;\r\n\t\tfor (int i=1;i<=n;i++){\r\n\t\t\tif (fa[i]==i) node.push_back(i);\r\n\t\t}\r\n\t\tfor (int i=1;i<node.size();i++) {\r\n\t\t\tcout<<node[0]<<\" \"<<node[i]<<\"\\n\";\r\n\t\t\tcnt++;\r\n\t\t\tif (cnt==n-1) break;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n} \r\n"
}