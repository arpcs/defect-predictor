{
    "id": 132257377,
    "contestId": 1583,
    "creationTimeSeconds": 1634476127,
    "relativeTimeSeconds": 7427,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "Alex-bul"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 9,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "RUNTIME_ERROR",
    "testset": "PRETESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 3379200,
    "source": "t = int(input())\r\n\r\nfor i in range(t):\r\n    n, m = [int(i) for i in input().split()]\r\n    dots = [i + 1 for i in range(n)]\r\n    already = [0 for i in range(n + 1)]\r\n    final_res = []\r\n    res = []\r\n    for j in range(m):\r\n        a, b, c = [int(i) for i in input().split()]\r\n        res.append((a, c))\r\n        already[a] += 1\r\n        already[c] += 1\r\n        if a in dots:\r\n            dots.remove(a)\r\n        if c in dots:\r\n            dots.remove(c)\r\n    for i in range(1, n + 1):\r\n        if already[i] > 1:\r\n            for r in res.copy():\r\n                if i in r:\r\n                    final_res.append(r)\r\n                    if r in res:\r\n                        res.remove(r)\r\n\r\n    for i in range(len(res)):\r\n        if len(res) > 1:\r\n            final_res.append((res[0][0], res[1][0]))\r\n            final_res.append(res.pop(0))\r\n        elif len(res) == 1:\r\n            final_res.append((res[0][0], final_res[1][0]))\r\n            final_res.append(res.pop(0))\r\n        else:\r\n            break\r\n    for i in dots:\r\n        final_res.append((final_res[0][0], i))\r\n    for i in final_res:\r\n        print(*i)\r\n    # while res:\r\n    #     rope = res[0]\r\n    #     for i in res.copy():\r\n    #         if i != rope and rope[0] in i or rope[1] in i:\r\n    #             final_res.append(i)\r\n    #             final_res.append(rope)\r\n    #             res.remove(i)\r\n    #             res.remove(rope)\r\n    #             continue"
}