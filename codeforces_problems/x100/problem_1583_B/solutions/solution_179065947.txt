{
    "id": 179065947,
    "contestId": 1583,
    "creationTimeSeconds": 1667478640,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "Uphill_Battle"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 343,
    "memoryConsumedBytes": 4915200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll             long long \r\n\r\n\r\n\r\nvoid primesieve(int num) {\r\n   bool pno[num+1];\r\n   memset(pno, true, sizeof(pno));\r\n   for (int i = 2; i*i<= num; i++) {\r\n      if (pno[i] == true) {\r\n         for (int j = i*2; j<= num; j += i)\r\n         pno[j] = false;\r\n      }\r\n   }\r\n   for (int i = 2; i<= num; i++)\r\n   if (pno[i])\r\n   cout << i << \" \";\r\n}\r\nbool isprime(int num){\r\n    for(int i=2;i*i<=num;i++){\r\n        if(num%i==0) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n\r\nbool is_palidrome(vector<int> v){\r\n          int i=0,j=v.size()-1;\r\n          while(i<j){\r\n                    if(v[i]!=v[j] && (v[i]!='?' && v[j]!='?')) return false;\r\n                    i++,j--;\r\n          }\r\n          return true;\r\n}\r\nint pw(long long x, unsigned int y, int p)\r\n{\r\n    int res = 1;     // Initialize result\r\n \r\n    x = x % p; // Update x if it is more than or\r\n                // equal to p\r\n  \r\n    if (x == 0) return 0; // In case x is divisible by p;\r\n \r\n    while (y > 0)\r\n    {\r\n        // If y is odd, multiply x with result\r\n        if (y & 1)\r\n            res = (res*x) % p;\r\n \r\n        // y must be even now\r\n        y = y>>1; // y = y/2\r\n        x = (x*x) % p;\r\n    }\r\n    return res;\r\n}\r\n\r\nvoid solve(){\r\n          \r\n          int n,m;\r\n          cin>>n>>m;\r\n          \r\n          set<int> s;\r\n          \r\n          for(int i=0;i<m;i++){\r\n                    int x,y,z;\r\n                    cin>>x>>y>>z;\r\n                    s.insert(y);\r\n          }\r\n          int num=1;\r\n          \r\n          for(auto it=s.begin();it!=s.end();it++){\r\n                    if(*it!=num){\r\n                             break; \r\n                    }\r\n                    num++;\r\n          }\r\n         // cout<<num<<endl;\r\n          \r\n          for(int i=1;i<=n;i++){\r\n                    if(i!=num){\r\n                         cout<<num<<\" \"<<i<<endl;     \r\n                    }\r\n          }\r\n}\r\n\r\n\r\nsigned main(){\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(0);\r\n    int t=1;\r\n    cin>>t;\r\n    while(t--){\r\n        solve();\r\n       // cout<<\"\\n\";            \r\n    }\r\n    \r\n    return 0;\r\n}"
}