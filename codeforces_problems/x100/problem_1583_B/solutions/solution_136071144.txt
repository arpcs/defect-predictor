{
    "id": 136071144,
    "contestId": 1583,
    "creationTimeSeconds": 1637241167,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "tazul110111"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 374,
    "memoryConsumedBytes": 4915200,
    "source": "//  \u201cAlhamdulillah for Everything\u201d\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n//---------DEFINES------------\r\n#define      ll               long long\r\n#define      dd               double\r\n#define      sh               short\r\n\r\n#define      gcd(a, b)        __gcd(a, b)\r\n#define      lcm(a, b)        ((a*b)/gcd(a,b))\r\n\r\n#define      ff               first\r\n#define      ss               second\r\n#define      pai              acos(-1)\r\n\r\n\r\n#define      pb               push_back\r\n#define      sz(a)            (ll)a.size()\r\n#define      len(str)         (ll)str.length()\r\n#define      sline(s)         getline(cin,s)\r\n\r\n#define      asort(arr)       sort(all(arr))\r\n#define      dsort(arr)       sort(all(arr),greater<int>())\r\n#define      all(sob)         sob.begin(),sob.end()\r\n#define      itos(num)        to_string(num);\r\n#define      stoi(s)          stoi(s);\r\n\r\n#define      ms(a, b)         memset(a,b,sizeof(a))\r\n#define      rep(i,b,n)       for(ll i = b;i <= n; i++)\r\n#define      rev(i,b,n)       for(ll i = b;i >= n; i--)\r\n#define      setp(x)          cout<<fixed<<setprecision(x)\r\n#define      watch(x)         cout<<(#x)<<\" = \"<<(x)<<'\\n'\r\n#define      TEST_CASE(t)     for(ll zz=1;zz<=t;zz++)\r\n#define      PRINT_CASE       cout<<\"Case \"<<zz<<\": \";\r\n#define      fii              freopen(\"input.txt\",\"r\",stdin);\r\n#define      foo              freopen(\"output.txt\",\"w\",stdout);\r\n#define      ActioN           ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);\r\n\r\n//-------CONSTANTS------------\r\nconst        ll               mod = 1e9+7;\r\nconst        ll               mxn = 1e5+7;\r\nconst        ll               inf = 1e18;\r\n\r\n//------MOD-FUNCTIONS---------\r\ninline      void              normal(ll &a) { a %= mod; (a < 0) && (a += mod); }\r\ninline       ll               modMul(ll a, ll b) { a %= mod, b %= mod; normal(a), normal(b); return (a * b) % mod; }\r\ninline       ll               modAdd(ll a, ll b) { a %= mod, b %= mod; normal(a), normal(b); return (a + b) % mod; }\r\ninline       ll               modSub(ll a, ll b) { a %= mod, b %= mod; normal(a), normal(b); a -= b; normal(a); return a; }\r\ninline       ll               modPow(ll b, ll p) { ll r = 1; while (p) { if (p & 1) r = modMul(r, b); b = modMul(b, b); p >>= 1; } return r; }\r\ninline       ll               modInverse(ll a) { return modPow(a, mod - 2); }\r\ninline       ll               modDiv(ll a, ll b) { return modMul(a, modInverse(b)); }\r\n\r\n//...........................start code.............................................................................................................\r\nvoid solve()\r\n{\r\n  int n,k,x,y,z,d;\r\n  map<int,int>m;\r\n  cin>>n>>k;\r\n  for(int i=0;i<k;i++)\r\n  {\r\n    cin>>x>>y>>z;\r\n    m[y]++;\r\n  }\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n      if(m[i]==0)\r\n       {\r\n        d=i;\r\n       break;\r\n       }\r\n    }\r\n   for(int i=1;i<=n;i++)\r\n   {\r\n       if(d!=i)\r\n     cout<<d<<\" \"<<i<<endl;\r\n   }\r\n\r\n\r\n}\r\nint main()\r\n{\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n     int t;\r\n     cin>>t;\r\n     while(t--)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n\r\n\r\n"
}