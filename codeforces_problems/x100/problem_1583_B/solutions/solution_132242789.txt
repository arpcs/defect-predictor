{
    "id": 132242789,
    "contestId": 1583,
    "creationTimeSeconds": 1634473055,
    "relativeTimeSeconds": 4355,
    "problem": {
        "contestId": 1583,
        "index": "B",
        "name": "Omkar and Heavenly Tree",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1583,
        "members": [
            {
                "handle": "shalltear-"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 11,
        "startTimeSeconds": 1634468700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "PRETESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\ntypedef long long ll;\r\n\r\n\r\nint binpow (ll a, ll n)\r\n{\r\n    if (n == 0)\r\n        return 1;\r\n    if (n % 2 == 1)\r\n        return binpow (a, n-1) * a;\r\n    else\r\n    {\r\n        ll b = binpow (a, n/2);\r\n        return b * b;\r\n    }\r\n}\r\n\r\nvector<bool> prime;\r\n\r\nvoid solve()\r\n{\r\n\r\n    int n,m;\r\n    cin >> n >> m;\r\n    vector<vector<int> > v(n);\r\n    vector<pair<int,int> > g;\r\n    vector<int> used(n+1,0);\r\n    for(int i = 0; i < m; i++)\r\n    {\r\n\r\n        int x,y,c;\r\n        cin >> x >> c >> y;\r\n        if(used[x] && used[y])\r\n        {\r\n            continue;\r\n        }\r\n        if(used[x] )\r\n        {\r\n\r\n\r\n            v[x].push_back(y);\r\n            used[y] = 1;\r\n            continue;\r\n        }\r\n        else if(used[y])\r\n        {\r\n            v[y].push_back(x);\r\n            used[x] = 1;\r\n            continue;\r\n        }\r\n        used[x] = 1;\r\n        used[y] = 1;\r\n        g.push_back({x,y});\r\n\r\n    }\r\n    cout << g[0].first << \" \" << g[0].second << '\\n';\r\n    int p = g[0].second;\r\n    for(int i = 1; i < g.size(); i++)\r\n    {\r\n\r\n        cout << p << \" \" << g[i].first << '\\n';\r\n        cout << g[i].first << \" \" << g[i].second << '\\n';\r\n        p = g[i].second;\r\n    }\r\n    for(int i = 0; i < n; i++) {\r\n\r\n        for(int j = 0; j <v[i].size() ;j++) {\r\n\r\n            cout <<v[i][j] << \" \" << i << '\\n';\r\n        }\r\n    }\r\n    for(int i = 1; i <= n; i++) {\r\n\r\n        if(!used[i] ) {\r\n\r\n            cout << p << \" \" << i << '\\n';\r\n            p = i;\r\n        }\r\n   }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nint main()\r\n{\r\n\r\n\r\n\r\n\r\n    int t;\r\n    cin>>t;\r\n    while(t-- )\r\n    {\r\n\r\n\r\n        solve();\r\n\r\n    }\r\n\r\n}\r\n"
}