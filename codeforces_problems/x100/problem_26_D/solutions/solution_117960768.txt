{
    "id": 117960768,
    "contestId": 26,
    "creationTimeSeconds": 1622443935,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 26,
        "index": "D",
        "name": "Tickets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "combinatorics",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 26,
        "members": [
            {
                "handle": "_Bishop_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1281970800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 24064000,
    "source": "// Problem: D. Tickets\n// Contest: Codeforces - Codeforces Beta Round #26 (Codeforces format)\n// URL: https://codeforces.com/contest/26/problem/D\n// Memory Limit: 256 MB\n// Time Limit: 2000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <cstdlib>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <set>\n#include <map>\n#include <stack>\n#include <unordered_set>\n#include <unordered_map>\n#include <queue>\n#include <ctime>\n#include <cassert>\n#include <complex>\n#include <string>\n#include <cstring>\n#include <chrono>\n#include <random>\n#include <bitset>\n\nusing namespace std;\n#define ll long long\n#define pi pair<int,int>\n#define pll pair<ll,ll>\n#define ld  long double\n#define vi vector<int> \n#define vll vector<ll> \n#define vvll vector<vector<ll>> \n#define vvi vector<vector<int>> \n#define vs vector<string>\n#define vpll vector<pll>\n#define vpi vector<pi>\n#define pb push_back\n#define eb emplace_back\n\n#define FOR(i, a, b) for(int i = (a); i <= (b); i++)\n#define FORI(i, a, b) for(int i = (a); i >= (b); i--)\n\nconst int INF = 1e9 + 7;\nconst long long MOD = 1e9 + 7;\n\n\nvoid solve(){\n    /*no multi tests*/\n    int n , m , k;\n    \n    cin >> n >> m >> k;\n    \n    /*\n    \n        Consider the total number of possible graphs with starting \n        coordinate (0 , k) and ending coordinate (m + n , n + k - m)\n        \n        The graph comprises of various line segments that are \n        either increasing side or decreasing side.\n        \n        So total number of graphs possible is C(m + n , m) --> just\n        choose m line segments as increasing out of the (m + n) \n        total\n      \n        The cases where we go below the negative axes are the number \n        of graphs joining (0 , k) and (m + n, -1 - (1 + n + k - m))\n        \n        ==> (m + n , -2 - n - k + m)\n        \n        Let there be a increasing and b decreasing segments\n        \n        Note that a + b = m + n,\n        \n        \n        SO, we have a + k - b = -2 - n - k + m\n        \n        ==> a - b = -2 - n - k + m - k = -2 - n - 2k + m\n        \n        2a = -2 - n - 2k + m + m + n = -2 - 2k + 2 m\n        \n        ==> a = -1 - k + m = m - k - 1\n        \n        So, a = m - k - 1\n        \n        So, total number of graphs is C(m + n , m - k - 1)\n        \n        So, the answer is (1 - C(m + n, m - k - 1) / C(m + n, m))\n    \n       1 - ((m + n)!/(m -k - 1)!(n + k + 1)!)*(m!n!)/(m+n)!\n       \n       \n       = 1 - (m! n!) /( (m-k-1)!   (n+k+1)! )\n    */\n    vector<ld> log_fact(2e6, 0);\n    log_fact[0] = log(1);\n    \n    if(k > n){\n      cout << 1 << endl;\n      return;\n    }\n    if(n + m - k < 0 || m - k - 1 < 0){\n      cout << 1 << endl;\n      return;\n    }\n    \n    for(int i = 1; i < int(log_fact.size()); i++){\n      log_fact[i] = log_fact[i - 1] + log(i);\n    }\n    \n    \n    ld complement = log_fact[m] + log_fact[n] - log_fact[m - k - 1] - log_fact[n + k + 1];\n    \n    complement = exp(complement);\n    \n    ld ans = 1.00 - complement;\n    \n    cout << ans << endl;\n}\n\nint main(){\n    ios :: sync_with_stdio(false); \n    cin.tie(nullptr); \n    cout.tie(nullptr);\n\n    int tt = 1;\n    // cin >> tt;\n\n    #ifdef SIEVE\n    construct();\n    #endif\n\n    #ifdef NCR\n    compute_combinations_table(MOD);\n    #endif\n\n    #ifdef FACTORIALS\n    compute_factorials(MOD);\n    #endif\n    cout << fixed << setprecision(10);\n    for(int tc = 1; tc <= tt; tc++){\n        // cout << \"Case #\" << tc << \": \";\n        solve();\n    }\n}"
}