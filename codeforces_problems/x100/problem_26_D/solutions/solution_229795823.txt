{
    "id": 229795823,
    "contestId": 26,
    "creationTimeSeconds": 1698307392,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 26,
        "index": "D",
        "name": "Tickets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "combinatorics",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 26,
        "members": [
            {
                "handle": "cryomancer148"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1281970800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 16076800,
    "source": "#pragma GCC Optimize (\"Ofast\")\r\n#include<bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#define ll long long\r\n#define N '\\n'\r\n#define pb push_back\r\n#define pob pop_back\r\n#define ff first\r\n#define ss second\r\n#define bb begin()\r\n#define ee end()\r\n#define fastIO() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n//order_of_key (k) : Number of items strictly smaller than k .\r\n//find_by_order(k) : K-th element in a set (counting from zero).\r\n\r\nconst ll mod = 1e9+7;\r\nll fact[2000005];\r\n\r\nll binexp(ll a,ll b)\r\n{\r\n    if(b == 0)\r\n    {\r\n        return 1;\r\n    }\r\n    ll result = binexp(a,b/2) % mod;\r\n    result = (result * result) % mod;\r\n    if(b % 2 == 1)\r\n    {\r\n        result = (result * a) % mod;\r\n    }\r\n    return result % mod;\r\n}\r\n\r\nll ncr(ll n,ll r)\r\n{\r\n    if (n < r)\r\n    {\r\n        return 0;\r\n    }\r\n\tif(r == 0)\r\n    {\r\n        return 1;\r\n    }\r\n    ll y = (fact[n-r] * fact[r]) % mod;\r\n    return (fact[n] * binexp(y,mod-2)) % mod;\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    fastIO();\r\n    ll t = 1,it;\r\n    fact[0] = 1;\r\n    for(it = 1;it <= 2000000;it++)\r\n    {\r\n        fact[it] = (fact[it-1] * it) % mod;\r\n    }\r\n    for(it = 1;it <= t;it++)\r\n    {\r\n        ll n,m,q,i,j,k,s = 0,x,y,c = 0,d = 0,f = 0;\r\n        cin >> n >> m >> k;\r\n        d = ncr(n+m,n);\r\n        if(m == 0)\r\n        {\r\n            c = 1;\r\n        }\r\n        else\r\n        {\r\n            if(n+k < m)\r\n            {\r\n                c = 0;\r\n            }\r\n            else if(k >= m)\r\n            {\r\n                c = ncr(n+m,n);\r\n            }\r\n            else\r\n            {\r\n                c = (d - ncr(n+m,(m-k)-1)) % mod;\r\n                if(c < 0)\r\n                {\r\n                    c += mod;\r\n                }\r\n                // m -= k;\r\n                // x = ncr(2*m,m) - ncr(2*m,m-1);\r\n                // //cout << x << N;\r\n                // c = (x * fact[n-m+k]);\r\n            }\r\n        }\r\n        //cout << c << \" \" << d << N;\r\n        double g;\r\n        g = c / (double)(d);\r\n        cout << fixed << setprecision(8) << g << N;\r\n    }\r\n    return 0;\r\n}\r\n"
}