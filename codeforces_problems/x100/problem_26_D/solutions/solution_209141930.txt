{
    "id": 209141930,
    "contestId": 26,
    "creationTimeSeconds": 1686354159,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 26,
        "index": "D",
        "name": "Tickets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "combinatorics",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 26,
        "members": [
            {
                "handle": "shiyihang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1281970800
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "// LUOGU_RID: 112383390\n#include <algorithm>\n#include <cstdio>\n#include <iostream>\nusing namespace std;\nint n, m, k;\nint main() {\n    cin >> n >> m >> k;\n    if (m <= k) {\n        cout << 1 << \"\\n\";\n        return 0;\n    }\n    double res = 1;\n    for (int i = 0; i <= k; ++i) {\n        res *= 1.0 * (m - k + i) / (n + i + 1);\n    }\n    cout << max(1.0 - res, 0.0) << \"\\n\";\n    return 0;\n}"
}