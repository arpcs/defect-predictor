{
    "id": 160140201,
    "contestId": 499,
    "creationTimeSeconds": 1654888791,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 499,
        "index": "B",
        "name": "Lecture",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1000,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 499,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1419438600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 8294400,
    "source": "#include<bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n//                      dataType,     , sorting,   rbTreeType\n#define multi_ordered_set tree<int, null_type,less_equal<int>, rb_tree_tag,tree_order_statistics_node_update>\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\n#define FAST ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n#define numOf1sIntBin(n) __builtin_popcount(n)     //works for integers\n#define getUnique(e) {sort(e.begin(),e.end());e.erase(unique(e.begin(),e.end()),e.end());}\n\ntemplate<class T>\nbool ckmax(T &a, const T &b) { return b > a ? a = b, 1 : 0; }\n\ntemplate<class T>\nbool ckmin(T &a, const T &b) { return b < a ? a = b, 1 : 0; }\n\ntypedef long long ll;\nconst int N = 2e6 + 9, M = 2e5 + 6, MOD = 1000000007, OO = 0x3f3f3f3f, SQR = 320;\nconst ll LOO = 0x3f3f3f3f3f3f3f3f;\nconst long double eps = 1e-7;\nint dx[] = {-2, 2, 0, 0};\nint dy[] = {0, 0, -2, 2};\n\nbool valid(int x, int y, int nnn, int mmm) { return x >= 0 && x < nnn && y >= 0 && y < mmm; }\n\nint Log2(int x) { return 31 - __builtin_clz(x); }\nint prime[N];\nvoid TT(){\n    int n, m;\n    cin>>n>>m;\n    map<string, string>mp;\n    while(m--){\n        string s, t;\n        cin>>s>>t;\n        mp[s]=t;\n        mp[t]=s;\n    }\n    while(n--){\n        string s;\n        cin>>s;\n        if(s.size()<mp[s].size()) cout<<s<<\" \";\n        else cout<<mp[s]<<\" \";\n    }\n    cout<<endl;\n}\n\nint main() {\n//    freopen(\"sub.in\",\"r\",stdin);\n//    freopen(\"output.in\",\"w\",stdout);\n    FAST\n    int testCases = 1;\n//    cin >> testCases;\n    while (testCases--) TT();\n    clock_t tStart = clock();\n    cerr << fixed << setprecision(10) << \"Time Taken: \" << (double) (clock() - tStart) / CLOCKS_PER_SEC << endl;\n    return 0;\n}\n// You Got this! Bear those in your mind:\n//      * BrainStorm & Think Twice, code once.\n//      * Overcome Corner Cases.\n\n\n\t\t\t \t   \t\t\t  \t \t  \t\t   \t\t \t"
}