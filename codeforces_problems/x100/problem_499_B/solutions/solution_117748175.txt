{
    "id": 117748175,
    "contestId": 499,
    "creationTimeSeconds": 1622277251,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 499,
        "index": "B",
        "name": "Lecture",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1000,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 499,
        "members": [
            {
                "handle": "Beginner"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1419438600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 409600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define f(i,n) for(int i=0;i<n;i++)\r\n#define ll long long\r\n#define pii pair<int,int>\r\n#define fastread() ios::sync_with_stdio(false);cin.tie(0)\r\n\r\nint main()\r\n{\r\n    fastread();\r\n    int n,m;\r\n    cin>>n>>m;\r\n    map<string,string> map;\r\n    for(int i=0;i<m;++i){\r\n        string a,b;\r\n        cin>>a>>b;\r\n        map[a]=b;\r\n    }\r\n    for(int i=0;i<n;++i){\r\n        string s;\r\n        cin>>s;\r\n            if(map[s].length()<s.length()){\r\n                cout<<map[s]<<\" \";\r\n            }\r\n            else\r\n            cout<<s<<\" \";\r\n    }\r\n    cout<<endl;\r\n    return 0;\r\n}",
    "defect_evaluation_v4": {
        "good solution": 70,
        "wrong solution": 25,
        "compilation error": 5,
        "runtime error": 0
    },
    "category_evaluation": {
        "mathematics": 10,
        "dynamic programming": 5,
        "bit manipulation": 5,
        "greedy": 5,
        "brute force": 5,
        "graphs": 5,
        "sortings": 5,
        "search": 5,
        "trees": 5,
        "strings": 15,
        "number theory": 5,
        "combinatorics": 5,
        "two pointers": 5,
        "geometry": 5,
        "shortest paths": 5,
        "divide and conquer": 5,
        "probabilities": 5,
        "data structures": 15,
        "game theory": 5,
        "2d, 3d": 5,
        "recursive": 5,
        "well-commented": 10,
        "self-documenting": 5,
        "complex": 5,
        "readable": 10,
        "well-named": 10,
        "efficient": 5,
        "reusable": 5,
        "documented": 5,
        "good error-handling": 5,
        "good solution": 10,
        "compilation error": 5,
        "runtime error": 5
    }
}