{
    "id": 100279143,
    "contestId": 499,
    "creationTimeSeconds": 1607004903,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 499,
        "index": "B",
        "name": "Lecture",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1000,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 499,
        "members": [
            {
                "handle": "shyam471"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1419438600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 204800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nint main(){\r\n    int n,m;\r\n    cin>>n>>m;\r\n    vector<pair<string,string>> a(m);\r\n    for(int i=0;i<m;i++){\r\n        cin>>a[i].first>>a[i].second;\r\n    }\r\n\r\n    vector<string> lect(n);\r\n    for(int i=0;i<n;i++){\r\n        cin>>lect[i];\r\n\r\n        for(int j=0;j<m;j++){\r\n            if(lect[i]==a[j].first||lect[i]==a[j].second){\r\n                if(a[j].first.length()<=a[j].second.length()){\r\n                    cout<<a[j].first<<\" \";\r\n                }\r\n                else{\r\n                    cout<<a[j].second<<\" \";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n}",
    "defect_evaluation_v4": {
        "good solution": 60,
        "wrong solution": 35,
        "compilation error": 5,
        "runtime error": 15
    },
    "category_evaluation": {
        "mathematics": 10,
        "dynamic programming": 5,
        "bit manipulation": 0,
        "greedy": 5,
        "brute force": 5,
        "graphs": 0,
        "sortings": 0,
        "search": 0,
        "trees": 0,
        "strings": 0,
        "number theory": 0,
        "combinatorics": 0,
        "two pointers": 0,
        "geometry": 0,
        "shortest paths": 0,
        "divide and conquer": 0,
        "probabilities": 0,
        "data structures": 10,
        "game theory": 0,
        "2d, 3d": 0,
        "recursive": 15,
        "well-commented": 5,
        "self-documenting": 5,
        "complex": 0,
        "readable": 5,
        "well-named": 5,
        "efficient": 0,
        "reusable": 5,
        "documented": 5,
        "good error-handling": 5,
        "good solution": 5,
        "compilation error": 0,
        "runtime error": 0
    }
}