{
    "id": 116415333,
    "contestId": 499,
    "creationTimeSeconds": 1621177774,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 499,
        "index": "B",
        "name": "Lecture",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1000,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 499,
        "members": [
            {
                "handle": "Ayush__Agrawal"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1419438600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<iostream>\r\n#include<string>\r\n#include<algorithm>\r\nusing namespace std;\r\nint main(){\r\n    int n,t;\r\n    cin>>n>>t;\r\n    string s[2*t];\r\n    for(int i=0;i<2*t;i++){\r\n        cin>>s[i];\r\n    }\r\n    string a[n];\r\n    for(int i=0;i<n;i++){\r\n        cin>>a[i];\r\n    }\r\n    for(int i=0;i<n;i++){\r\n        for(int j=0;j<2*t-1;i+=2){\r\n            if(a[i]==s[j]){\r\n                int c=s[j].size();\r\n                int d=s[j+1].size();\r\n                if(c>=d){\r\n                    cout<<s[j]<<\" \";\r\n                    break;\r\n                }\r\n                else{\r\n                    cout<<s[j+1]<<\" \";\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}",
    "defect_evaluation_v4": {
        "good solution": 60,
        "wrong solution": 30,
        "compilation error": 10,
        "runtime error": 0
    },
    "category_evaluation": {
        "mathematics": 5,
        "dynamic programming": 2,
        "bit manipulation": 3,
        "greedy": 1,
        "brute force": 3,
        "graphs": 1,
        "sortings": 2,
        "search": 1,
        "trees": 1,
        "strings": 5,
        "number theory": 1,
        "combinatorics": 1,
        "two pointers": 2,
        "geometry": 1,
        "shortest paths": 1,
        "divide and conquer": 2,
        "probabilities": 1,
        "data structures": 2,
        "game theory": 1,
        "2d, 3d": 1,
        "recursive": 1,
        "well-commented": 3,
        "self-documenting": 2,
        "complex": 3,
        "readable": 2,
        "well-named": 3,
        "efficient": 2,
        "reusable": 2,
        "documented": 3,
        "good error-handling": 1,
        "good solution": 3,
        "compilation error": 15,
        "runtime error": 10
    }
}