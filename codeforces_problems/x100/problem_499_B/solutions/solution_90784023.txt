{
    "id": 90784023,
    "contestId": 499,
    "creationTimeSeconds": 1598215681,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 499,
        "index": "B",
        "name": "Lecture",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1000,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 499,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1419438600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 3686400,
    "source": "#include <iostream>\n#include <map>\n\nusing namespace std;\nint main() {\n  int nLecture,nLanguage;\n  cin >> nLecture >> nLanguage;\n  //nunca he usado map a ver si asi\n  map <string,string> dictionary;\n  //palabra idioma profesor\n  string A;\n  //palabra otro idioma\n  string B;\n\n  //llenar mi \"Diccionario\" con palabras de otro lenguaje y las del profesor\n  while(nLanguage--)\n  {\n    cin >> A >> B;\n    //si la palabra del profe es mas peque\u00f1a que la del otro lenguaje guardar esa, si no, guardar la del otro lenguage\n    dictionary[A] = (A.size()< B.size())?A:B;\n  }\n\n  //traducir lectura, el profe usa sus palabras y el diccionario traduce automaticamente en caso de ser necesario\n  while(nLecture--)\n  {\n    //pide la palabra del profe\n    cin >> A;\n    //imprime la palabra en la posicion de la palabra del profe, ya sea cualquier lenguage\n    cout << dictionary[B] << \" \";\n  }\n}\n  \t\t\t \t\t\t\t\t\t\t  \t\t\t\t\t     \t\t\t\t\t"
}