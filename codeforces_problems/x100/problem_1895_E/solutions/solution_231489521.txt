{
    "id": 231489521,
    "contestId": 1895,
    "creationTimeSeconds": 1699201742,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "wangjunchao"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 296,
    "memoryConsumedBytes": 49664000,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <numeric>\r\n#include <cstring>\r\n#include <cmath>\r\n#include <vector>\r\n#include <array>\r\n#include <queue>\r\n#include <deque>\r\n#include <stack>\r\n#include <set>\r\n#include <map>\r\n#include <string>\r\n\r\nconst int N = 3e5+10, M = 1e6+10;\r\n\r\nint ax[N], ay[N], bx[N], by[N];\r\nstd::vector<std::array<int,3>> a, b, t;\r\nint f[N];\r\nbool st[N];\r\nint n, m;\r\n\r\nint dfs(int u) {\r\n\tif(f[u]) return f[u];\r\n\r\n\tst[u] = true;\r\n\tstd::array<int,3> to = {ay[u]+1, 0, 0};\r\n\tauto bit = std::lower_bound(b.begin(), b.end(), to);\r\n\tif(bit==b.end()) return f[u] = 1;\r\n\r\n\tto = {(*bit)[1]+1, 0, 0};\r\n\tauto ait = std::lower_bound(a.begin(), a.end(), to);\r\n\tif(ait==a.end()) return f[u] = 2;\r\n\r\n\tif(st[(*ait)[2]]&&!f[(*ait)[2]]) return f[u] = 3;\r\n\treturn f[u] = dfs((*ait)[2]);\r\n}\r\n\r\nvoid solve()\r\n{\r\n\tstd::cin  >> n;\r\n\r\n\tfor(int i=1;i<=n;i++) std::cin >> ax[i];\r\n\tfor(int i=1;i<=n;i++) std::cin >> ay[i], t.push_back({ax[i], ay[i], i});\r\n\tstd::sort(t.begin(),t.end());\r\n\tfor(auto [x,y,id]:t) {\r\n\t\twhile(a.size()&&a.back()[1]<=y) a.pop_back();\r\n\t\tif(a.empty()||(a.size()&&a.back()[0]<x)) a.push_back({x,y,id});\r\n\t}\r\n\tt.clear();\r\n\r\n\tstd::cin >> m;\r\n\tfor(int i=1;i<=m;i++) std::cin >> bx[i];\r\n\tfor(int i=1;i<=m;i++) std::cin >> by[i], t.push_back({bx[i], by[i], i});\r\n\tstd::sort(t.begin(),t.end());\r\n\tfor(auto [x,y,id]:t) {\r\n\t\twhile(b.size()&&b.back()[1]<=y) b.pop_back();\r\n\t\tif(b.empty()||(b.size()&&b.back()[0]<x)) b.push_back({x,y,id});\r\n\t}\r\n\tt.clear();\r\n\t\r\n\r\n\tint cnt[4] = {0};\r\n\tfor(int i=1;i<=n;i++) {\r\n\t\tcnt[dfs(i)] ++;\r\n\t}\r\n\r\n\tstd::cout << cnt[1] << \" \" << cnt[3] << \" \" << cnt[2] << \"\\n\";\r\n\ta.clear(), b.clear();\r\n\tfor(int i=1;i<=n;i++) f[i] = st[i] = 0;\r\n}\r\n\r\nsigned main()\r\n{\r\n\tstd::ios::sync_with_stdio(false);\r\n\tstd::cin.tie(0);\r\n\r\n\tint t = 1;\r\n\tstd::cin >> t;\r\n\tfor(int i=1;i<=t;i++)\r\n\t\tsolve();\r\n\treturn 0;\r\n}",
    "category_evaluation": {
        "mathematics": 10,
        "dynamic programming": 5,
        "bit manipulation": 5,
        "greedy": 15,
        "brute force": 10,
        "graphs": 5,
        "sortings": 5,
        "search": 5,
        "trees": 5,
        "strings": 5,
        "number theory": 5,
        "combinatorics": 5,
        "two pointers": 5,
        "geometry": 5,
        "shortest paths": 5,
        "divide and conquer": 5,
        "probabilities": 5,
        "data structures": 10,
        "game theory": 5,
        "2d, 3d": 5,
        "recursive": 0,
        "well-commented": 5,
        "self-documenting": 5,
        "complex": 10,
        "readable": 5,
        "well-named": 5,
        "efficient": 5,
        "reusable": 5,
        "documented": 5,
        "good error-handling": 5,
        "good solution": 5,
        "compilation error": 0,
        "runtime error": 0
    },
    "defect_evaluation": {
        "good solution": 90,
        "compilation error": 5,
        "runtime error": 5
    },
    "defect_evaluation_gpt_4": {
        "good solution": 75,
        "compilation error": 0,
        "runtime error": 25
    },
    "defect_evaluation_v1": {
        "good solution": 90,
        "compilation error": 10,
        "runtime error": 0
    }
}