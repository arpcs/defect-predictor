{
    "id": 231422222,
    "contestId": 1895,
    "creationTimeSeconds": 1699166813,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "Giggity-"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 1809,
    "memoryConsumedBytes": 117964800,
    "source": "/*\r\n    Mayoeba Yabureru\r\n*/\r\n#pragma GCC optimize(\"O3,unroll-loops\")\r\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\r\n#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nint n , m , aa [1000006] , bb [1000006] , cc [1000006] , dd [1000006] , cnt [1000006] , ansa , ansb;\r\nvector < int > rgr [2000006];\r\nvector < pair < pair < int , int > , int > > a , b , ra , rb;\r\n\r\nvoid go ( int x , int st )\r\n{\r\n    if ( st <= n && x <= n ) ansa ++;\r\n    if ( st > n && x <= n ) ansb ++;\r\n\r\n    for ( auto u : rgr [x] ) go ( u , st );\r\n}\r\n\r\nint main()\r\n{\r\n    int T;\r\n    cin >> T;\r\n    while ( T -- )\r\n    {\r\n        ansa = 0 , ansb =0;\r\n        a . clear () , b . clear () , ra . clear () , rb . clear ();\r\n        cin >> n;\r\n\r\n        for ( int i = 1 ; i <= n ; i ++ ) cin >> aa [i];\r\n        for ( int i = 1 ; i <= n ; i ++ ) cin >> bb [i];\r\n        for ( int i = 1 ; i <= n ; i ++ )\r\n        {\r\n            a . push_back ( { { aa [i] , bb [i] } , i } );\r\n            ra . push_back ( { { bb [i] , aa [i] } , i } );\r\n        }\r\n\r\n        cin >> m;\r\n\r\n        for ( int i = 1 ; i <= n + m ; i ++ )\r\n        {\r\n            rgr [i] . clear ();\r\n            cnt [i] = 0;\r\n        }\r\n\r\n        for ( int i = 1 ; i <= m ; i ++ ) cin >> cc [i];\r\n        for ( int i = 1 ; i <= m ; i ++ ) cin >> dd [i];\r\n        for ( int i = 1 ; i <= m ; i ++ )\r\n        {\r\n            b . push_back ( { { cc [i] , dd [i] } , i } );\r\n            rb . push_back ( { { dd [i] , cc [i] } , i } );\r\n        }\r\n\r\n        sort ( a . begin () , a . end () );\r\n        sort ( rb . begin () , rb . end () );\r\n\r\n        int mx = 0 , ind = 0;\r\n        while ( rb . size () )\r\n        {\r\n            int hlth = rb [ rb . size () - 1 ] . first . first;\r\n            while ( a . size () )\r\n            {\r\n                int atk = a [ a . size () - 1 ] . first . first , hlt = a [ a . size () - 1 ] . first . second;\r\n\r\n                if ( atk <= hlth ) break;\r\n                if ( mx < hlt )\r\n                {\r\n                    mx = hlt;\r\n                    ind = a [ a . size () - 1 ] . second;\r\n                }\r\n                a . pop_back ();\r\n            }\r\n            if ( ind )\r\n            {\r\n                rgr [ ind ] . push_back ( rb [ rb . size () - 1 ] . second + n );\r\n                cnt [ rb [ rb . size () - 1 ] . second + n ] ++;\r\n            }\r\n            rb . pop_back ();\r\n        }\r\n\r\n        sort ( b . begin () , b . end () );\r\n        sort ( ra . begin () , ra . end () );\r\n\r\n        mx = 0 , ind = 0;\r\n        while ( ra . size () )\r\n        {\r\n            int hlth = ra [ ra . size () - 1 ] . first . first;\r\n            while ( b . size () )\r\n            {\r\n                int atk = b [ b . size () - 1 ] . first . first , hlt = b [ b . size () - 1 ] . first . second;\r\n\r\n                if ( atk <= hlth ) break;\r\n                if ( mx < hlt )\r\n                {\r\n                    mx = hlt;\r\n                    ind = b [ b . size () - 1 ] . second;\r\n                }\r\n                b . pop_back ();\r\n            }\r\n            if ( ind )\r\n            {\r\n                rgr [ ind + n ] . push_back ( ra [ ra . size () - 1 ] . second );\r\n                cnt [ ra [ ra . size () - 1 ] . second ] ++;\r\n            }\r\n            ra . pop_back ();\r\n        }\r\n\r\n        for ( int i = 1 ; i <= n + m ; i ++ )\r\n        {\r\n            if ( cnt [i] == 0 ) go ( i , i );\r\n        }\r\n        cout << ansa << ' ' << n - ansa - ansb << ' ' << ansb << endl;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
}