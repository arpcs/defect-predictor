{
    "id": 231585295,
    "contestId": 1895,
    "creationTimeSeconds": 1699274488,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "EvilTom"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 764,
    "memoryConsumedBytes": 5939200,
    "source": "#include<iostream>\r\n#include<algorithm>\r\nusing namespace std;\r\n\r\ntypedef pair<int,int>PII;\r\nconst int N = 3e5 + 10;\r\nPII a[N], b[N];\r\n#define x first\r\n#define y second\r\nint cnt[N], n;\r\n\r\nint find(int x)\r\n{\r\n    int l = 1, r = n;\r\n    while(l < r)\r\n    {\r\n        int mid = (l + r)>>1;\r\n        if(b[mid].x > x) r = mid;\r\n        else l = mid+1;\r\n    }\r\n    return l;\r\n}\r\n\r\nvoid solve()\r\n{\r\n    \r\n    cin>>n;\r\n    int mx = 0, my = 0;\r\n    PII p = {0,0}, q = {0,0};\r\n    for(int i = 1; i <= n; i++) cin>>a[i].x, p.x = max(p.x, a[i].x);\r\n    for(int i = 1; i <= n; i++) cin>>a[i].y, my = max(my, a[i].y);\r\n    int m;\r\n    cin>>m;\r\n    int mx2 = 0;\r\n    for(int i = 1; i <= m; i++) cin>>b[i].x, q.x = max(q.x, b[i].x);\r\n    for(int i = 1; i <= m; i++) cin>>b[i].y;\r\n    for(int i = 1; i <= m+1; i++) cnt[i] = 0;\r\n    for(int i = 1; i <= m; i++)\r\n    {\r\n        if(b[i].y >= p.x)  p.y = max(p.y, b[i].x);\r\n    }\r\n    for(int i = 1; i <= n; i++){\r\n        if(a[i].y >= q.x) q.y = max(q.y, a[i].x);\r\n    }\r\n    sort(b+1,b+1+m);\r\n    for(int i = m; i >= 1; i--)\r\n    {\r\n     cnt[i] = max(cnt[i+1], b[i].y);   \r\n    }\r\n   \r\n    vector<int>res(3, 0);\r\n    for(int i = 1; i <= n; i++)\r\n    {\r\n        if(a[i].y >= q.x) res[0]++;\r\n        else \r\n        {\r\n            if(a[i].y < p.y) //b\u4e2d\u9632\u5fa1\u5927\u4e8ea\u4e2d\u653b\u51fb\u7684\u6700\u5927\u7684b\u653b\u51fb \r\n            {\r\n                res[2]++;\r\n            }\r\n            else{ \r\n                 int pos = find(a[i].y); // \u627e\u5230\u5927\u4e8ea[i].y\u7684\u6700\u5927\u503c\u7684\u9632\u5fa1\u529b\r\n               //  cout<<cnt[pos]<<\" \"<<pos<<'\\n';\r\n                 if(q.y > cnt[pos]) res[0]++;\r\n                 else res[1]++;\r\n            }\r\n        }\r\n       // cout<<res[0]<<\" \"<<res[1]<<\" \"<<res[2]<<'\\n';\r\n    }\r\n    cout<<res[0]<<\" \"<<res[1]<<\" \"<<res[2]<<'\\n';\r\n    \r\n}\r\n\r\nint main()\r\n{\r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}