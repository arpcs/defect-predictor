{
    "id": 231532661,
    "contestId": 1895,
    "creationTimeSeconds": 1699240567,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "Adp_D"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 1060,
    "memoryConsumedBytes": 146739200,
    "source": "#include<bits//stdc++.h>\r\nusing namespace std;\r\n#define RI register int\r\ninline int read() {\r\n    RI x=0, w=0;register char ch=0;\r\n    while(!isdigit(ch)) w|=ch=='-', ch=getchar();\r\n    while(isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48), ch=getchar();\r\n    return w?-x:x;\r\n}\r\nconst int MAXN=3e5+1, MAXD=3e6+1, inf=1e9;\r\nint N, M, cnt, sufa[MAXN], sufb[MAXN]; \r\npair<int,int> a[MAXN], b[MAXN]; \r\nvector<int> dian[MAXD]; int ind[MAXD], win[MAXD];\r\ninline void Add(int x, int y) { dian[y].push_back(x), ind[x]++;\t}\r\ninline void topo() {\r\n\tqueue<int> q; \r\n\tfor(RI i=1;i<=cnt;i++) {\r\n\t\twin[i]=0;\r\n\t\tif(!ind[i]) win[i]=-1, q.push(i);\r\n\t}\r\n\twhile(q.size()) {\r\n\t\tint x=q.front(); q.pop();\r\n\t\tfor(RI nx:dian[x]) {\r\n\t\t\tif(win[nx]==1) continue ; \r\n\t\t\tif(win[x]==-1) win[nx]=1, q.push(nx); \r\n\t\t\telse if(!--ind[nx]) win[nx]=-1, q.push(nx); \r\n\t\t}\r\n\t}\r\n}\r\ninline void solve() {\r\n\tN=read();\r\n\tfor(RI i=1;i<=N;i++) a[i].first=read();\r\n\tfor(RI i=1;i<=N;i++) a[i].second=read();\r\n\tM=read();\r\n\tfor(RI i=1;i<=M;i++) b[i].first=read();\r\n\tfor(RI i=1;i<=M;i++) b[i].second=read();\r\n\tsort(a+1,a+N+1), sort(b+1,b+M+1); cnt=N+M;\r\n\tfor(RI i=1;i<=(N+M)*4;i++) dian[i].clear(), ind[i]=0;  \r\n\tfor(RI i=N;i>=1;i--) {\r\n\t\tAdd(++cnt,i); sufa[i]=cnt;\r\n\t\tif(i!=N) Add(++cnt,sufa[i+1]), Add(sufa[i],cnt);\r\n\t}\r\n\tfor(RI i=M;i>=1;i--) {\r\n\t\tAdd(++cnt,i+N); sufb[i]=cnt;\r\n\t\tif(i!=M) Add(++cnt,sufb[i+1]), Add(sufb[i],cnt);\r\n\t}\r\n\tfor(RI i=1;i<=N;i++) {\r\n\t\tint k=lower_bound(b+1,b+M+1,make_pair(a[i].second,inf))-b;\r\n\t\tif(k!=M+1) Add(i,++cnt), Add(cnt,sufb[k]);\r\n\t}\r\n\tfor(RI i=1;i<=M;i++) {\r\n\t\tint k=lower_bound(a+1,a+N+1,make_pair(b[i].second,inf))-a;\r\n\t\tif(k!=N+1) Add(i+N,++cnt), Add(cnt,sufa[k]);\r\n\t} topo(); int ans1=0, ans2=0;\r\n\tfor(RI i=1;i<=N;i++) {\r\n\t\tif(win[i]==-1) ans1++;\r\n\t\tif(win[i]==0) ans2++; \r\n\t} printf(\"%d %d %d\\n\",ans1,ans2,N-ans1-ans2); \r\n}\t\r\nsigned main() {\r\n//\tfreopen(\"a.in\",\"r\",stdin);\r\n\tint t=read(); while(t--) solve();\r\n    return 0;\r\n}// May all the beauty be blessed.\r\n",
    "category_evaluation": {
        "mathematics": 5,
        "dynamic programming": 20,
        "bit manipulation": 5,
        "greedy": 10,
        "brute force": 10,
        "graphs": 10,
        "sortings": 15,
        "search": 5,
        "trees": 10,
        "strings": 10,
        "number theory": 5,
        "combinatorics": 0,
        "two pointers": 5,
        "geometry": 0,
        "shortest paths": 0,
        "divide and conquer": 5,
        "probabilities": 0,
        "data structures": 25,
        "game theory": 0,
        "2d, 3d": 0,
        "recursive": 5,
        "well-commented": 70,
        "self-documenting": 65,
        "complex": 5,
        "readable": 60,
        "well-named": 70,
        "efficient": 25,
        "reusable": 30,
        "documented": 70,
        "good error-handling": 5,
        "good solution": 30,
        "compilation error": 0,
        "runtime error": 0
    },
    "defect_evaluation": {
        "good solution": 80,
        "compilation error": 20,
        "runtime error": 0
    },
    "defect_evaluation_gpt_4": {
        "good solution": 80,
        "compilation error": 0,
        "runtime error": 20
    },
    "defect_evaluation_v1": {
        "good solution": 70,
        "compilation error": 20,
        "runtime error": 10
    }
}