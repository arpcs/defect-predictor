{
    "id": 231716624,
    "contestId": 1895,
    "creationTimeSeconds": 1699356972,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\n#define rep(i, a, b) for(int i = (a);i <= (b);++i)\n#define per(i, a, b) for(int i = (a);i >= (b);--i)\n#define lc (k << 1)\n#define rc (k << 1 | 1)\n#define lowbit(x) (x & -x)\n#define odd(x) (x & 1)\n#define even(x) (!odd(x))\n#define pb(x) push_back(x)\n#define fir first\n#define sec second\n#define all(x) begin(x), end(x)\ntypedef long long ll;\ntypedef unsigned long long ull;\nusing namespace std;\nconst int inf = 0x3f3f3f3f;\nconst ll llinf = 0x3f3f3f3f3f3f3f3fll;\n\nconst int N = 3e5 + 5;\nvector<int> adj[N << 1];\nint in[N << 1], dp[N << 1];\n\nstruct ST {\n    pair<int, int> mx[N][20];\n    void create(vector<int>& v) {\n        int n = (int)v.size() - 1;\n        rep(i, 1, n)\n            mx[i][0] = {v[i], i};\n        int k = 31 - __builtin_clz(n);\n        rep(j, 1, k) {\n            for(int i = 1;i + (1 << j) - 1 <= n;++i)\n                mx[i][j] = max(mx[i][j - 1], mx[i + (1 << j - 1)][j - 1]);\n        }\n    }\n    pair<int, int> query(int l, int r) {\n        int k = 31 - __builtin_clz(r - l + 1);\n        return max(mx[l][k], mx[r - (1 << k) + 1][k]);\n    }\n} st1, st2;\n\nstruct node {\n    int x, y;\n    bool operator < (const node& t) const {\n        return x < t.x;\n    }\n} a[N], b[N];\n\nvoid solve() {\n    int n, m;\n    cin >> n;\n    rep(i, 1, n)\n        cin >> a[i].x;\n    rep(i, 1, n)\n        cin >> a[i].y;\n    cin >> m;\n    rep(i, 1, m)\n        cin >> b[i].x;\n    rep(i, 1, m)\n        cin >> b[i].y;\n    sort(a + 1, a + n + 1);\n    sort(b + 1, b + m + 1);\n    vector<int> v1(1), v2(1);\n    rep(i, 1, n)\n        v1.pb(a[i].y);\n    rep(i, 1, m)\n        v2.pb(b[i].y);\n    st1.create(v1);\n    st2.create(v2);\n    rep(i, 1, n)\n        v1[i] = a[i].x;\n    rep(i, 1, m)\n        v2[i] = b[i].x;\n    rep(i, 1, n + m) {\n        adj[i].clear();\n        in[i] = dp[i] = 0;\n    }\n    rep(i, 1, n) {\n        int p = upper_bound(all(v2), a[i].y) - v2.begin();\n        if(p == (int)v2.size())\n            continue;\n        int f = st2.query(p, m).sec;\n        adj[f + n].pb(i);\n        ++in[i];\n    }\n    rep(i, 1, m) {\n        int p = upper_bound(all(v1), b[i].y) - v1.begin();\n        if(p == (int)v1.size())\n            continue;\n        int f = st1.query(p, n).sec;\n        adj[f].pb(i + n);\n        ++in[i + n];\n    }\n    queue<int> q;\n    rep(i, 1, n + m) {\n        if(!in[i]) {\n            dp[i] = (i > n ? -1 : 1);\n            q.push(i);\n        }\n    }\n    while(!q.empty()) {\n        int u = q.front();\n        q.pop();\n        for(int& v : adj[u]) {\n            dp[v] = dp[u];\n            --in[v];\n            if(!in[v])\n                q.push(v);\n        }\n    }\n    int co1 = 0, co2 = 0, co3 = 0;\n    rep(i, 1, n) {\n        switch(dp[i]) {\n            case -1:\n                ++co3;\n                break;\n            case 0:\n                ++co2;\n                break;\n            case 1:\n                ++co1;\n        }\n    }\n    cout << co1 << \" \" << co2 << \" \" << co3 << \"\\n\";\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr), cout.tie(nullptr);\n    int t;\n    cin >> t;\n    while(t--)\n        solve();\n    return 0;\n}\n \t\t    \t\t \t  \t\t   \t\t\t\t\t  \t  \t"
}