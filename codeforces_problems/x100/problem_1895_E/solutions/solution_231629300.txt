{
    "id": 231629300,
    "contestId": 1895,
    "creationTimeSeconds": 1699294031,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "darthrevenge"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 16384000,
    "source": "//#include <bits/stdc++.h>\r\n#include <vector>\r\n#include <iostream>\r\n#include <fstream>\r\n#include <cstdio>\r\n#include <map>\r\n#include <list>\r\n#include <set>\r\n#include <queue>\r\n#include <stack>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\n#include <algorithm>\r\n#include <string>\r\n#include <numeric>\r\n#include <cmath>\r\n#include <bitset>\r\n#include <tuple>\r\n#include <memory>\r\n#include <random>\r\n#include <chrono>\r\n#include <sstream>\r\n#include <functional>\r\n\r\n#include <iterator>\r\n\r\n#define ull unsigned long long\r\n#define ll long long\r\n\r\n#define all(vec) vec.begin(), vec.end()\r\n#define pb push_back\r\n#define FOR(i,a,b) for(int i = a; i < b; ++i)\r\n#define printvec(vec) for(auto el: vec) {cout << el << \" \";}\r\n\r\nconstexpr long long INF = 2000000000000000001LL;\r\nconstexpr int INF32 = 2100000001;\r\nsize_t seed42 = std::chrono::system_clock::now().time_since_epoch().count();\r\nstd::mt19937 rng(seed42);\r\nstd::uniform_int_distribution<int> unidistrib;\r\nint randint() {return unidistrib(rng);}\r\n\r\nstd::mt19937_64 rngl(seed42);\r\nstd::uniform_int_distribution<ull> unidistribul;\r\null randulong() {return unidistribul(rngl);}\r\n\r\nusing namespace std;\r\null modulo = 998244353 ;  // 1+7*17*2^23.\r\n//ull modulo = 998244353 ;\r\nint modulo32 = 998244353;\r\n\r\null poww(ull x, ull n) {\r\n    if (n == 0)\r\n        return 1;\r\n    ull answ = poww(x, n/2);\r\n    answ = (answ * answ) % modulo;\r\n    if (n%2)\r\n        answ = (answ * x) % modulo;\r\n    return answ;\r\n}\r\n\r\n/*int poww(int a, int b) {\r\n    int res = 1;\r\n    for (; b; b >>= 1, a = 1ll * a * a % modulo32)\r\n        if (b & 1)\r\n            res = 1ll * res * a % modulo32;\r\n    return res;\r\n}*/\r\n\r\n\r\n\r\null mymul (ull x, ull y) {\r\n    return (x*y) % modulo;\r\n}\r\n\r\n\r\null myadd (ull x, ull y) {\r\n    return (x+y) % modulo;\r\n}\r\n\r\null mysub (ull x, ull y) {\r\n    return (x+ modulo - y) % modulo;\r\n}\r\n\r\n\r\null myinv (ull x) {\r\n    return poww(x, modulo-2);\r\n}\r\n\r\null mydiv (ull x, ull y) {\r\n    return mymul(x, myinv(y));\r\n}\r\n\r\n\r\npair<int, int> operator+ (const pair<int, int>& lhs, pair<int, int>& rhs) {\r\n    return {lhs.first +rhs.first, lhs.second + rhs.second};\r\n}\r\n\r\ntemplate <class T>\r\nostream& operator << (ostream& lhs, pair<T, T>& rhs) {\r\n    return (lhs << rhs.first<<\":\" << rhs.second);\r\n}\r\n\r\n\r\n\r\nvector<pair<int,int>> aabb[2];\r\nvector<char> visited [2]; //0 - unkn; 1-a; 2-b; 3-draw/greycolor\r\n\r\nchar dfs(char turn, int i) {\r\n    //cout << (int)turn << \"turn,i\" <<i << endl;\r\n\r\n    if (i >= aabb[turn].size()) {\r\n        return 2 - turn; //if a's turn b wins; if b's turn a wins;\r\n    }\r\n\r\n    if (visited[turn][i]) return (visited[turn][i]);\r\n\r\n    visited[turn][i] = 3;\r\n\r\n    int j = std::lower_bound(all(aabb[turn ^ 1]), make_pair(aabb[turn][i].second + 1, 0) ) - aabb[turn ^ 1].begin();\r\n\r\n    return visited[turn][i] = dfs(turn ^ 1, j);\r\n}\r\n\r\n\r\nint main() {\r\n    #ifdef DARTH\r\n    std::ifstream filestream(\"input.txt\");\r\n    std::cin.rdbuf(filestream.rdbuf());\r\n    #else\r\n    ios::sync_with_stdio(false);\r\n    std::cin.tie(0);\r\n    #endif //DARTH\r\n    int t, n, k, m, c,d, x, q;\r\n    int l, r;\r\n    cin >> t;\r\n    while(t--) {\r\n        cin >> n;\r\n        vector<pair<int,int>> a(n);\r\n        FOR(i,0,n) cin >> a[i].first;\r\n        FOR(i,0,n) cin >> a[i].second;\r\n        cin >> m;\r\n        vector<pair<int,int>> b(m);\r\n        FOR(i,0,m) cin >> b[i].first;\r\n        FOR(i,0,m) cin >> b[i].second;\r\n\r\n        sort(all(a)); sort(all(b));\r\n\r\n        aabb[0].clear();\r\n        aabb[1].clear();\r\n\r\n\r\n\r\n        for(auto el : a) {\r\n            while (!aabb[0].empty() && el.second >= aabb[0].back().second) {\r\n                aabb[0].pop_back();\r\n            }\r\n            aabb[0].push_back(el);\r\n        }\r\n\r\n        for(auto el : b) {\r\n            while (!aabb[1].empty() && el.second >= aabb[1].back().second) {\r\n                aabb[1].pop_back();\r\n            }\r\n            aabb[1].push_back(el);\r\n        }\r\n\r\n        FOR(i,0,2) visited[i] = vector<char>(aabb[i].size());\r\n\r\n\r\n        int cnt[4] = {0,0,0,0};\r\n\r\n        for (auto [att, def] : a) {\r\n            int j = std::lower_bound(all(aabb[1]), make_pair(def + 1, 0) ) - aabb[1].begin();\r\n            cnt[dfs(1, j)]++;\r\n        }\r\n\r\n\r\n\r\n        cout << cnt[1] << \" \" << cnt[3] << \" \" << cnt[2] << endl;\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return 0;\r\n}\r\n\r\n"
}