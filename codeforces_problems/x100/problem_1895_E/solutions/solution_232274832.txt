{
    "id": 232274832,
    "contestId": 1895,
    "creationTimeSeconds": 1699638615,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "SirPh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#pragma GCC optimize (\"Ofast\")\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\ntypedef long long ll;\r\ntypedef long long int lli;\r\ntypedef unsigned long long ull;\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\ntemplate<class x>\r\nusing ordered_set = tree<x, null_type,less<x>, rb_tree_tag,tree_order_statistics_node_update>;\r\nll mod=(ll)1e9+7;\r\nll mod1=998244353;\r\n///the defines :)\r\n#define endl '\\n'\r\n#define vi vector<int>\r\n#define vll vector<ll>\r\n#define ent(arr) for(int i=0;i<arr.size();i++)cin>>arr[i];\r\n#define all(arr) arr.begin(),arr.end()\r\n#define allr(arr) arr.rbegin(),arr.rend()\r\n#define sz size()\r\n#define int long long\r\nint adj[300002][2];\r\nint ans[300002][2];\r\nint vs[300002][2];\r\nstruct segtree\r\n{\r\n    vector<pair<int,int>>vals;\r\n    int siz;\r\n    void init(int n)\r\n    {\r\n        siz=1;\r\n        while(siz<n)siz*=2;\r\n        vals.resize(4*siz);\r\n        lazy.resize(4*siz);\r\n    }\r\n    void Set(int idx,int v,int x,int lx,int rx)\r\n    {\r\n        if(lx==rx)\r\n        {\r\n            vals[x]=max(vals[x],{v,lx});\r\n            return;\r\n        }\r\n        int mid=(lx+rx+1)/2;\r\n        if(idx<mid)\r\n        Set(idx,v,2*x+1,lx,mid-1);\r\n        else\r\n        Set(idx,v,2*x+2,mid,rx);\r\n        vals[x]=max(vals[2*x+1],vals[2*x+2]);\r\n    }\r\n    void Set(int idx,int v)\r\n    {\r\n        Set(idx,v,0,0,siz-1);\r\n    }\r\n    pair<int,int> get(int l,int r,int x,int lx,int rx)\r\n    {\r\n        if(r<l)return {0,0};\r\n        if(lx>r||rx<l)return {0,0};\r\n        if(lx>=l&&rx<=r)return vals[x];\r\n        int mid=(lx+rx+1)/2;\r\n        return max(get(l,r,2*x+1,lx,mid-1),get(l,r,2*x+2,mid,rx));\r\n    }\r\n    pair<int,int> get(int l,int r)\r\n    {\r\n        return get(l,r,0,0,siz-1);\r\n    }\r\n};\r\nint dfs(int node,int turn)\r\n{\r\n    if(ans[node][turn]!=-1)return ans[node][turn];\r\n    if(vs[node][turn])return ans[node][turn]=2;\r\n    if(adj[node][turn]==-1)return ans[node][turn]=1;\r\n    vs[node][turn]=1;\r\n    int e=dfs(adj[node][turn],turn^1);\r\n    if(e==2)return ans[node][turn]=2;\r\n    else return ans[node][turn]=e^1;\r\n}\r\nvoid preprocess() {}\r\nvoid solve()\r\n{\r\n    int n;\r\n    cin>>n;\r\n    vector<pair<int,int>>arr(n);\r\n    int mx=0,mx1=0;\r\n    map<pair<int,int>,int>mp;\r\n    map<pair<int,int>,int>mp1;\r\n    mp[{0,0}]=-1;\r\n    mp1[{0,0}]=-1;\r\n    for(int i=0;i<=max(n,m);i++)\r\n    {\r\n        ans[i][1]=-1;\r\n        ans[i][0]=-1;\r\n        vs[i][1]=0;\r\n        vs[i][0]=0;\r\n        adj[i][0]=-1;\r\n        adj[i][1]=-1;\r\n    }\r\n    for(int i=0;i<n;i++){\r\n        cin>>arr[i].first;\r\n        mx1=max(mx1,arr[i].first);\r\n    }\r\n    for(int i=0;i<n;i++)cin>>arr[i].second;\r\n    int m;\r\n    cin>>m;\r\n    vector<pair<int,int>>brr(m);\r\n    for(int i=0;i<m;i++){\r\n        cin>>brr[i].first;\r\n        mx=max(mx,brr[i].first);\r\n    }\r\n    for(int i=0;i<m;i++){\r\n        cin>>brr[i].second;\r\n    }\r\n    segtree st;\r\n    st.init(mx+1);\r\n    for(int i=0;i<m;i++)\r\n        st.Set(brr[i].first,brr[i].second);\r\n    segtree st1;\r\n    st1.init(mx1+1);\r\n    for(int i=0;i<n;i++)\r\n        st1.Set(arr[i].first,arr[i].second);\r\n    for(int i=0;i<n;i++)\r\n        mp[arr[i]]=i;\r\n    for(int i=0;i<m;i++)\r\n        mp1[brr[i]]=i;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        pair<int,int> o=st.get(arr[i].second+1,mx);\r\n        swap(o.first,o.second);\r\n        adj[i][0]=mp1[o];\r\n    }\r\n    for(int i=0;i<m;i++)\r\n    {\r\n        pair<int,int> o=st1.get(brr[i].second+1,mx1);\r\n        swap(o.first,o.second);\r\n        adj[i][1]=mp[o];\r\n    }\r\n    int lol[3]={0};\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        lol[dfs(i,0)]++;\r\n    }\r\n    cout<<lol[1]<<\" \"<<lol[2]<<\" \"<<lol[0]<<endl;\r\n}\r\nsigned main()\r\n{\r\n    // freopen(\"meta_game_input.txt\",\"r\",stdin);\r\n    // freopen(\"otput.txt\",\"w\",stdout);\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n    preprocess();\r\n    //bla();\r\n    int t=1;\r\n    cin>>t;\r\n    while(t--)\r\n        solve();\r\n}\r\n"
}