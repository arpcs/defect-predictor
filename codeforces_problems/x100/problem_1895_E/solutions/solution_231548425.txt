{
    "id": 231548425,
    "contestId": 1895,
    "creationTimeSeconds": 1699254180,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "awolfloveapple"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 58880000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int N=3e5+9;\r\nconst int mod=1e9+7;\r\nll read(){\r\n\tll ans=0,f=1;\r\n\tchar c=getchar();\r\n\twhile(c>'9'||c<'0'){\r\n\t\tif(c=='-')f=-1;\r\n\t\tc=getchar();\r\n\t}\r\n\twhile(c<='9'&&c>='0'){\r\n\t\tans=(ans<<3)+(ans<<1)+c-'0';\r\n\t\tc=getchar();\r\n\t}\r\n\treturn ans*f; \r\n}\r\nstruct Point{\r\n\tint atk,def;\r\n\tbool operator<(const Point a)const{\r\n\t\treturn def<a.def;\r\n\t}\r\n}a[N],b[N];\r\nint n,m;\r\nint sta[N][22],stb[N][22],lg[N];\r\nvoid init1(){\r\n\tlg[0]=-1;\r\n\tfor(int i=1;i<N;i++){\r\n\t\tlg[i]=lg[i>>1]+1;\r\n\t}\r\n}\r\nvoid init(){\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tsta[i][0]=a[i].atk;\r\n\t}\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tstb[i][0]=b[i].atk;\r\n\t}\r\n\tfor(int i=1;i<22;i++){\r\n\t\tint len=1<<i;\r\n\t\tfor(int j=1;j+len-1<=n;j++){\r\n\t\t\tsta[j][i]=max(sta[j][i-1],sta[j+(len>>1)][i-1]);\r\n\t\t}\r\n\t}\r\n\tfor(int i=1;i<22;i++){\r\n\t\tint len=1<<i;\r\n\t\tfor(int j=1;j+len-1<=m;j++){\r\n\t\t\tstb[j][i]=max(stb[j][i-1],stb[j+(len>>1)][i-1]);\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\nint querya(int l,int r){\r\n\tif(l>r)return -1;\r\n\tint k=lg[r-l+1];\r\n\treturn max(sta[l][k],sta[r-(1<<k)+1][k]);\r\n}\r\nint queryb(int l,int r){\r\n\tif(l>r)return -1;\r\n\tint k=lg[r-l+1];\r\n\treturn max(stb[l][k],stb[r-(1<<k)+1][k]);\r\n}\r\nint la=1,ra=n,lb=1,rb=m;\r\nint anslose=0,ansok=0,answin=0;\r\n\r\nint jud(){\r\n\tint nowla=la,nowra=ra,nowlb=lb,nowrb=rb;\r\n\tint miatk=queryb(lb,rb);\r\n\twhile(nowla<=nowra&&a[nowra].def>=miatk){\r\n\t\tnowra--;answin++;\r\n\t}\r\n\tmiatk=querya(la,ra);\r\n\twhile(nowlb<=nowrb&&b[nowrb].def>=miatk){\r\n\t\tnowrb--;\r\n\t}\r\n\tmiatk=queryb(nowrb+1,n);\r\n\twhile(nowla<=nowra&&a[nowla].def<miatk){\r\n\t\tnowla++;anslose++;\r\n\t}\r\n\tmiatk=querya(nowra+1,m);\r\n\twhile(nowlb<=nowrb&&b[nowlb].def<miatk){\r\n\t\tnowlb++;\r\n\t}\r\n\r\n\tif(la==nowla&&ra==nowra&&lb==nowlb&&rb==nowrb)return 0;\r\n\tla=nowla,ra=nowra;\r\n\tlb=nowlb,rb=nowrb;\r\n\tif(nowla>nowra)return 0;\r\n\tif(nowlb>nowrb){\r\n\t\tmiatk=queryb(rb,m);\r\n\t\tanswin=anslose=0;\r\n\t\tra=n;\r\n\t\twhile(ra&&a[ra].def>=miatk){\r\n\t\t\tanswin++;\r\n\t\t\tra--;\r\n\t\t}\r\n\t\tanslose=n-answin;\r\n\t\treturn 0;\r\n\t}\r\n\treturn 1;\r\n}\r\n\r\n\r\n\r\nvoid solv(){\r\n\tn=read();\r\n\tfor(int i=1;i<=n;i++){\r\n\t\ta[i].atk=read();\r\n\t}\r\n\tfor(int i=1;i<=n;i++){\r\n\t\ta[i].def=read();\r\n\t}\r\n\tm=read();\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tb[i].atk=read();\r\n\t}\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tb[i].def=read();\r\n\t}\r\n\tsort(a+1,a+1+n);\r\n\tsort(b+1,b+1+m);\r\n\tinit();\r\n\tla=1,ra=n,lb=1,rb=m;\r\n\tanslose=0,ansok=0,answin=0;\r\n\twhile(jud());\r\n\tansok=n-answin-anslose;\r\n\tprintf(\"%d %d %d\\n\",answin,ansok,anslose);\r\n}\r\n\r\n\r\n\r\nint main(){\r\n\tinit1();\r\n\tint tst=read();\r\n\twhile(tst--){\r\n\t\tsolv();\r\n\t}\r\n\treturn 0;\r\n}\r\n",
    "category_evaluation": {
        "mathematics": 10,
        "dynamic programming": 20,
        "bit manipulation": 5,
        "greedy": 5,
        "brute force": 10,
        "graphs": 0,
        "sortings": 5,
        "search": 5,
        "trees": 0,
        "strings": 0,
        "number theory": 0,
        "combinatorics": 0,
        "two pointers": 5,
        "geometry": 0,
        "shortest paths": 0,
        "divide and conquer": 0,
        "probabilities": 0,
        "data structures": 5,
        "game theory": 0,
        "2d, 3d": 0,
        "recursive": 0,
        "well-commented": 10,
        "self-documenting": 0,
        "complex": 5,
        "readable": 5,
        "well-named": 10,
        "efficient": 5,
        "reusable": 5,
        "documented": 5,
        "good error-handling": 0,
        "good solution": 0,
        "compilation error": 0,
        "runtime error": 0
    },
    "defect_evaluation": {
        "good solution": 75,
        "compilation error": 0,
        "runtime error": 25
    },
    "defect_evaluation_gpt_4": {
        "good solution": 90,
        "compilation error": 5,
        "runtime error": 5
    },
    "defect_evaluation_v1": {
        "good solution": 80,
        "compilation error": 20,
        "runtime error": 0
    }
}