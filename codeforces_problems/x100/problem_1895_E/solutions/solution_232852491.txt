{
    "id": 232852491,
    "contestId": 1895,
    "creationTimeSeconds": 1700049934,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "CY0531"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 468,
    "memoryConsumedBytes": 30310400,
    "source": "#include <bits/stdc++.h>\r\n#define LL long long\r\n#define ULL unsigned long long\r\n#define DD double\r\n#define Re register\r\nusing namespace std; \r\nstruct FastIO {\r\n\ttemplate<typename T>\r\n\tFastIO& operator>>(T&ret){\r\n\t\tret=0;int f=1;\r\n\t\tchar ch=getchar();\r\n\t\twhile (ch<'0'||ch>'9'){\r\n\t\t\tif (ch=='-') f=-f;\r\n\t\t\tch=getchar();\r\n\t\t}\r\n\t\twhile (ch>='0'&&ch<='9'){\r\n\t\t\tret=(ret<<3)+(ret<<1)+ch-48;\r\n\t\t\tch=getchar();\r\n\t\t}\r\n\t\tret*=f;\r\n\t\treturn *this;\r\n\t}\r\n} fin;\r\nconst int maxn=3e5+5;\r\nint T,n,m,res[maxn];\r\nbool vis[maxn];\r\nstruct card{\r\n\tint x,y,nxt,id;\r\n}a[maxn],b[maxn];\r\nbool cmp_x(card a,card b){\r\n\treturn a.x<b.x;\r\n}\r\nbool cmp_y(card a,card b){\r\n\treturn a.y<b.y;\r\n}\r\nbool cmp_id(card a,card b){\r\n\treturn a.id<b.id;\r\n}\r\nvoid DFS(int u){\r\n\tvis[u]=true;\r\n\tint v=a[u].nxt;\r\n\tif (v==-1){res[u]=1;return;}\r\n\tif (b[v].nxt==-1){res[u]=3;return;}\r\n\tif (!vis[b[v].nxt])\r\n\tDFS(b[v].nxt);\r\n\tres[u]=res[b[v].nxt];\r\n}\r\nint main(){\r\n\tfin>>T;\r\n\twhile (T--){\r\n\t\tint ret[4]={0};\r\n\t\tfin>>n;\r\n\t\tfor (int i=1;i<=n;i++) fin>>a[i].x,a[i].id=i,res[i]=vis[i]=0;\r\n\t\tfor (int i=1;i<=n;i++) fin>>a[i].y;\r\n\t\tfin>>m;\r\n\t\tfor (int i=1;i<=m;i++) fin>>b[i].x,b[i].id=i;\r\n\t\tfor (int i=1;i<=m;i++) fin>>b[i].y;\r\n\t\tsort(a+1,a+n+1,cmp_y);\r\n\t\tsort(b+1,b+m+1,cmp_x);\r\n\t\tstack<int> s;\r\n\t\tfor (int i=n,j=m;i;i--){\r\n\t\t\twhile (j&&a[i].y<b[j].x){\r\n\t\t\t\twhile (!s.empty()&&b[j].y>b[s.top()].y) s.pop();\r\n\t\t\t\tif (s.empty()) s.push(j);\r\n\t\t\t\tj--;\r\n\t\t\t}\r\n\t\t\tif (s.empty()) a[i].nxt=-1;\r\n\t\t\telse a[i].nxt=b[s.top()].id;\r\n\t\t}\r\n\t\tsort(a+1,a+n+1,cmp_x);\r\n\t\tsort(b+1,b+m+1,cmp_y);\r\n\t\twhile (!s.empty()) s.pop();\r\n\t\tfor (int i=m,j=n;i;i--){\r\n\t\t\twhile (j&&b[i].y<a[j].x){\r\n\t\t\t\twhile (!s.empty()&&a[j].y>a[s.top()].y) s.pop();\r\n\t\t\t\tif (s.empty()) s.push(j);\r\n\t\t\t\tj--;\r\n\t\t\t}\r\n\t\t\tif (s.empty()) b[i].nxt=-1;\r\n\t\t\telse b[i].nxt=a[s.top()].id;\r\n\t\t}\r\n\t\tsort(a+1,a+n+1,cmp_id);\r\n\t\tsort(b+1,b+m+1,cmp_id);\r\n\t\tfor (int i=1;i<=n;i++){\r\n\t\t\tif (!vis[i]) DFS(i);\r\n\t\t\tret[1]+=res[i]==1;\r\n\t\t\tret[2]+=res[i]==0;\r\n\t\t\tret[3]+=res[i]==3;\r\n\t\t}\r\n\t\tprintf(\"%d %d %d\\n\",ret[1],ret[2],ret[3]);\r\n\t}\r\n\treturn 0;\r\n}"
}