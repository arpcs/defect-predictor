{
    "id": 232340672,
    "contestId": 1895,
    "creationTimeSeconds": 1699690322,
    "relativeTimeSeconds": 5822,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "Gold14526"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1699684500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 373,
    "memoryConsumedBytes": 8396800,
    "source": "#include<bits/stdc++.h>\r\n#define cint const int\r\nusing namespace std;\r\nint num;\r\nchar ch;\r\nint read()\r\n{\r\n\tnum=0;\r\n\tch=getchar();\r\n\twhile(ch<'0'||ch>'9')\r\n\t{\r\n\t\tch=getchar();\r\n\t}\r\n\twhile(ch>='0'&&ch<='9')\r\n\t{\r\n\t\tnum=(num<<1)+(num<<3)+ch-'0';\r\n\t\tch=getchar();\r\n\t}\r\n\treturn num;\r\n}\r\nint n,m;\r\nstruct node{\r\n\tint x,y;\r\n}a[300001],b[300001];\r\nbool cmp(const node a,const node b)\r\n{\r\n\treturn a.x<b.x;\r\n}\r\nint ra[300001],rb[300001];\r\nint cnt[4],ans[300001];\r\nint finda(cint l,cint r,cint x)\r\n{\r\n\tcint mid=l+r>>1;\r\n\tif(l>=r)return mid;\r\n\tif(a[mid].x>x)return finda(l,mid,x);\r\n\treturn finda(mid+1,r,x);\r\n}\r\nint findb(cint l,cint r,cint x)\r\n{\r\n\tcint mid=l+r>>1;\r\n\tif(l>=r)return mid;\r\n\tif(b[mid].x>x)return findb(l,mid,x);\r\n\treturn findb(mid+1,r,x);\r\n}\r\nint dfs(cint now)\r\n{\r\n\tif(ans[now]!=0)return ans[now];\r\n\tif(b[m].x<=a[now].y)\r\n\t{\r\n\t\tans[now]=1;\r\n\t\treturn 1;\r\n\t}\r\n\tcint t=rb[findb(1,m,a[now].y)];\r\n\tif(a[n].x<=b[t].y)\r\n\t{\r\n\t\tans[now]=3;\r\n\t\treturn 3;\r\n\t}\r\n\tans[now]=2;\r\n\tans[now]=dfs(ra[finda(1,n,b[t].y)]);\r\n\treturn ans[now];\r\n}\r\nvoid solve()\r\n{\r\n\tn=read();\r\n\tcnt[1]=cnt[2]=cnt[3]=0;\r\n\tfor(int i=1;i<=n;++i)\r\n\t{\r\n\t\ta[i].x=read();\r\n\t\tans[i]=0;\r\n\t}\r\n\tfor(int i=1;i<=n;++i)\r\n\t{\r\n\t\ta[i].y=read();\r\n\t}\r\n\tm=read();\r\n\tfor(int i=1;i<=m;++i)\r\n\t{\r\n\t\tb[i].x=read();\r\n\t}\r\n\tfor(int i=1;i<=m;++i)\r\n\t{\r\n\t\tb[i].y=read();\r\n\t}\r\n\tsort(a+1,a+n+1,cmp);\r\n\tsort(b+1,b+m+1,cmp);\r\n\tra[n]=n;\r\n\trb[m]=m;\r\n\tfor(int i=n-1;i>=1;--i)\r\n\t{\r\n\t\tra[i]=(a[ra[i+1]].y>a[i].y?ra[i+1]:i);\r\n\t}\r\n\tfor(int i=m-1;i>=1;--i)\r\n\t{\r\n\t\trb[i]=(b[rb[i+1]].y>b[i].y?rb[i+1]:i);\r\n\t}\r\n\tfor(int i=1;i<=n;++i)\r\n\t{\r\n\t\t++cnt[dfs(i)];\r\n\t}\r\n\tprintf(\"%d %d %d\\n\",cnt[1],cnt[2],cnt[3]);\r\n}\r\nint main()\r\n{\r\n\t//freopen(\".in\",\"r\",stdin);\r\n\t//freopen(\".out\",\"w\",stdout);\r\n\tint T=read();\r\n\twhile(T--)solve();\r\n\treturn 0;\r\n}\r\n",
    "suggested_categories": [
        "algorithm",
        "data structures",
        "sorting",
        "recursive functions",
        "c++ programming",
        "code optimization",
        "io handling",
        "binary search",
        "dynamic programming",
        "mathematical computation",
        "input parsing",
        "output formatting",
        "code comments",
        "bit manipulation",
        "code complexity",
        "variable naming",
        "file handling",
        "error handling",
        "loop optimization",
        "code modularity"
    ]
}