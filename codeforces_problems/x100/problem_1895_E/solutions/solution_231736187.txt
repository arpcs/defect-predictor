{
    "id": 231736187,
    "contestId": 1895,
    "creationTimeSeconds": 1699362742,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "Eason9002"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 654,
    "memoryConsumedBytes": 69939200,
    "source": "// LUOGU_RID: 133887264\n#include<bits/stdc++.h>\r\n#define int long long\r\n#define pii pair<int,int>\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n#define ls now<<1\r\n#define rs now<<1|1\r\n#define QwQ puts(\"QwQ\")\r\nusing namespace std;\r\nconst int N=600005;\r\nint _,n,m,dp[N],deg[N],vis[N],mxa[N],mxb[N],posa[N],posb[N];\r\nstruct node\r\n{\r\n\tint x,y;\r\n}a[N],b[N];\r\nvector<int>e[N];\r\ninline int read()\r\n{\r\n\tint ans=0,f=1;\r\n\tchar c=getchar();\r\n\twhile(c<'0'||c>'9')\r\n\t{\r\n\t\tif(c=='-') f=-1;\r\n\t\tc=getchar();\r\n\t}\r\n\twhile(c>='0'&&c<='9')\r\n\t{\r\n\t\tans=(ans<<3)+(ans<<1)+(c^48);\r\n\t\tc=getchar();\r\n\t}\r\n\treturn ans*f;\r\n}\r\ninline void write(int x)\r\n{\r\n    if(x<0)\r\n    {\r\n        printf(\"-\"),write(-x);\r\n        return;\r\n    }\r\n\tif(x>9) write(x/10);\r\n\tputchar(x%10+'0');\r\n}\r\nbool operator <(const node &a,const node &b)\r\n{\r\n\t//if(a.x==b.x) return a.y<b.y;\r\n\treturn a.x<b.x;\r\n}\r\nvoid dfs(int u)\r\n{\r\n\tif(vis[u]) return;\r\n\tvis[u]=1;\r\n\tfor(auto v:e[u])\r\n\t{\r\n\t\tdfs(v);\r\n\t\tdp[u]=-dp[v];\r\n\t}\r\n\treturn;\r\n}\r\nsigned main()\r\n{\r\n\t_=read();\r\n\twhile(_--)\r\n\t{\r\n\t\tn=read();\r\n\t\tfor(int i=1;i<=n;i++) a[i].x=read();\r\n\t\tfor(int i=1;i<=n;i++) a[i].y=read();\r\n\t\tm=read();\r\n\t\tfor(int i=1;i<=m;i++) b[i].x=read();\r\n\t\tfor(int i=1;i<=m;i++) b[i].y=read();\r\n\t\tfor(int i=1;i<=n+m;i++) dp[i]=0,e[i].clear(),deg[i]=0,vis[i]=0;\r\n\t\tsort(a+1,a+n+1);\r\n\t\tsort(b+1,b+m+1);\r\n\t\tmxa[n]=a[n].y,posa[n]=n;\r\n\t\tmxb[m]=b[m].y,posb[m]=m;\r\n\t\tfor(int i=n-1;i>=1;i--)\r\n\t\t{\r\n\t\t\tif(a[i].y>mxa[i+1]) mxa[i]=a[i].y,posa[i]=i;\r\n\t\t\telse mxa[i]=mxa[i+1],posa[i]=posa[i+1];\r\n\t\t}\r\n\t\tfor(int i=m-1;i>=1;i--)\r\n\t\t{\r\n\t\t\tif(b[i].y>mxb[i+1]) mxb[i]=b[i].y,posb[i]=i;\r\n\t\t\telse mxb[i]=mxb[i+1],posb[i]=posb[i+1];\r\n\t\t}\r\n\t\tfor(int i=1;i<=n;i++)\r\n\t\t{\r\n\t\t\tint p=upper_bound(b+1,b+m+1,node{a[i].y,0ll})-b;\r\n\t\t\tif(p!=m+1) e[i].pb(posb[p]+n),deg[i]++;\r\n\t\t}\r\n\t\tfor(int i=1;i<=m;i++)\r\n\t\t{\r\n\t\t\tint p=upper_bound(a+1,a+n+1,node{b[i].y,0ll})-a;\r\n\t\t\tif(p!=n+1) e[i+n].pb(posa[p]),deg[i+n]++;\r\n\t\t}\r\n\t\tfor(int i=1;i<=n+m;i++)\r\n\t\t{\r\n\t\t\tif(!deg[i]) dp[i]=1;\r\n\t\t}\r\n\t\tfor(int i=1;i<=n+m;i++)\r\n\t\t{\r\n\t\t\tif(!vis[i]) dfs(i);\r\n\t\t}\r\n\t\tint ans1=0,ans2=0;\r\n\t\tfor(int i=1;i<=n;i++) ans1+=(dp[i]==1),ans2+=(dp[i]==-1);\r\n\t\tcout<<ans1<<' '<<n-ans1-ans2<<' '<<ans2<<endl;\r\n\t}\r\n\treturn 0;\r\n}"
}