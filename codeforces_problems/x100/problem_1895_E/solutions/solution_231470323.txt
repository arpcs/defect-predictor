{
    "id": 231470323,
    "contestId": 1895,
    "creationTimeSeconds": 1699192102,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "xybq"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 608,
    "memoryConsumedBytes": 436633600,
    "source": "#include<bits/stdc++.h>\r\n#define int long long\r\nusing namespace std;\r\nconst int N=6e6+10;\r\nvector<int>f[N];\r\nint stack_1[N];\r\nint stack_2[N];\r\nbool str[N];\r\nint cnt[N];\r\nint u,u_1,n,m;\r\nstruct date1\r\n{\r\n    int ak,defence;\r\n    bool operator<(const date1&t)const\r\n    {\r\n        if(t.ak!=ak) return ak<t.ak;\r\n        else return defence<t.defence;\r\n    }\r\n}date_1[N];\r\nstruct date2\r\n{\r\n    int ak,defence;\r\n    bool operator<(const date2&t)const\r\n    {\r\n        if(t.ak!=ak) return ak<t.ak;\r\n        else return defence<t.defence;\r\n    }\r\n}date_2[N];\r\nint dfs(int cur)\r\n{\r\n    if(str[cur]) return cnt[cur];\r\n    str[cur]=true;\r\n    for(auto v:f[cur])\r\n    {\r\n        if(str[v])\r\n        {\r\n            if(cnt[v]==0)\r\n            {\r\n                cnt[cur]=2;\r\n                return cnt[cur];\r\n            }\r\n            else return cnt[cur] = cnt[v];\r\n        }\r\n        else\r\n        {\r\n            cnt[cur]=dfs(v);\r\n            return cnt[cur];\r\n        }\r\n    }\r\n    if(cur<=n) cnt[cur]=1;\r\n    else cnt[cur]=3;\r\n    return cnt[cur];\r\n}\r\nvoid solve(){\r\n    cin>>n;\r\n    u=u_1=0;\r\n    map<int,int>s;\r\n    for(int i=1;i<=n;i++) cin>>date_1[i].ak;\r\n    for(int i=1;i<=n;i++) cin>>date_1[i].defence;\r\n    sort(date_1+1,date_1+n+1);\r\n    stack_1[++u]=n;\r\n    for(int i=n-1;i>=1;i--)\r\n    {\r\n        if(date_1[i].defence>date_1[stack_1[u]].defence) stack_1[++u]=i;\r\n    }\r\n    cin>>m;\r\n    for(int i=1;i<=n+m;i++)\r\n    {\r\n        cnt[i]=0;\r\n        str[i]=false;\r\n        f[i].clear();\r\n    }\r\n    for(int i=1;i<=m;i++) cin>>date_2[i].ak;\r\n    for(int i=1;i<=m;i++) cin>>date_2[i].defence;\r\n    sort(date_2+1,date_2+m+1);\r\n    u_1=u;\r\n    u=0;\r\n    stack_2[++u]=m;\r\n    s[m]=n+m;\r\n    for(int i=m-1;i>=1;i--)\r\n    {\r\n        if(date_2[i].defence>date_2[stack_2[u]].defence)\r\n        {\r\n            stack_2[++u]=i;\r\n            s[i]=n+i;\r\n        }\r\n    }\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        int l=1,r=u;\r\n        while(l<r)\r\n        {\r\n            int mid=l+r+1>>1;\r\n            if(date_2[stack_2[mid]].ak>date_1[i].defence) l=mid;\r\n            else r=mid-1;\r\n        }\r\n        if(date_2[stack_2[l]].ak<=date_1[i].defence) continue;\r\n        else f[i].push_back(s[stack_2[l]]);\r\n    }\r\n    for(int i=1;i<=m;i++)\r\n    {\r\n        int l=1,r=u_1;\r\n        while(l<r)\r\n        {\r\n            int mid=l+r+1>>1;\r\n            if(date_1[stack_1[mid]].ak>date_2[i].defence) l=mid;\r\n            else r=mid-1;\r\n        }\r\n        if(date_1[stack_1[l]].ak<=date_2[i].defence) continue;\r\n        else f[n+i].push_back(stack_1[l]);\r\n    }\r\n    int cnt_1=0,cnt_2=0,cnt_3=0;\r\n    for(int i=1;i<=n;i++) if(!str[i]) dfs(i);\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        if(cnt[i]==1) cnt_1++;\r\n        if(cnt[i]==2) cnt_2++;\r\n        if(cnt[i]==3) cnt_3++;\r\n    }\r\n    cout<<cnt_1<<' '<<cnt_2<<' '<<cnt_3<<\"\\n\";\r\n}\r\nsigned main()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr),cout.tie(nullptr);\r\n    int T=1;\r\n    cin>>T;\r\n    while(T--){solve();}\r\n    return 0;\r\n}\r\n",
    "category_evaluation": {
        "mathematics": 20,
        "dynamic programming": 10,
        "bit manipulation": 5,
        "greedy": 10,
        "brute force": 15,
        "graphs": 10,
        "sortings": 5,
        "search": 10,
        "trees": 5,
        "strings": 5,
        "number theory": 5,
        "combinatorics": 5,
        "two pointers": 5,
        "geometry": 5,
        "shortest paths": 5,
        "divide and conquer": 10,
        "probabilities": 5,
        "data structures": 15,
        "game theory": 5,
        "2d, 3d": 5,
        "recursive": 10,
        "well-commented": 5,
        "self-documenting": 5,
        "complex": 5,
        "readable": 5,
        "well-named": 5,
        "efficient": 15,
        "reusable": 5,
        "documented": 5,
        "good error-handling": 5,
        "good solution": 20,
        "compilation error": 0,
        "runtime error": 0
    },
    "defect_evaluation": {
        "good solution": 80,
        "compilation error": 10,
        "runtime error": 10
    },
    "defect_evaluation_gpt_4": {
        "good solution": 75,
        "compilation error": 0,
        "runtime error": 25
    },
    "defect_evaluation_v1": {
        "good solution": 90,
        "compilation error": 5,
        "runtime error": 5
    }
}