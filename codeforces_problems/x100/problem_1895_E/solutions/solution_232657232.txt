{
    "id": 232657232,
    "contestId": 1895,
    "creationTimeSeconds": 1699892693,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "cabbagea"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 467,
    "memoryConsumedBytes": 15667200,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <cstring>\r\n \r\nusing namespace std;\r\n \r\nconst int N=300100;\r\ntypedef pair<int,int> pii;\r\n#define x first\r\n#define y second\r\ntypedef  long long ll;\r\nint n,m;\r\nstruct node{\r\n      int id,data,hp;\r\n}a[N],b[N];\r\nbool com(struct node a,struct node b){\r\n    return a.data<b.data;\r\n}\r\nint f[N]; int e[N*2]; int vis[N*2],type[N*2];\r\nint dfs(int index){\r\n      vis[index]=1;\r\n     int temp=e[index];\r\n    if(vis[temp]) return type[index]=type[temp];\r\n    else\r\n    {\r\n        if(temp==0)\r\n        {\r\n            if(index>n) return type[index]= -1;\r\n            else return type[index] = 1;\r\n        } else\r\n         return type[index]= dfs(temp);\r\n    }\r\n}\r\nint main(){\r\n     int T; scanf(\"%d\",&T);\r\n     while(T--)\r\n     {\r\n         scanf(\"%d\",&n);\r\n        for(int i=1;i<=n;i++)\r\n            scanf(\"%d\",&a[i].data);\r\n        for(int i=1;i<=n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i].hp);\r\n            a[i].id=i;\r\n        }\r\n           scanf(\"%d\",&m);\r\n        for(int i=1;i<=m;i++)\r\n            scanf(\"%d\",&b[i].data);\r\n        for(int i=1;i<=m;i++)\r\n        {\r\n            scanf(\"%d\",&b[i].hp);\r\n            b[i].id=n+i;\r\n        }\r\n        sort(a+1,a+1+n,com);\r\n        sort(b+1,b+1+m,com);\r\n       // memset(f,0,sizeof f);\r\n       for(int i=m;i>=1;i--)\r\n       {\r\n           if(i==m)\r\n           {\r\n               f[i]=m;\r\n           } else\r\n           {if(b[f[i+1]].hp>b[i].hp) f[i]=f[i+1];\r\n           else f[i]=i;}\r\n       }\r\n       for(int i=1;i<=n;i++)\r\n       {\r\n           int hp=a[i].hp;\r\n           int l=1,r=m+1;\r\n           while(l<r)\r\n           {\r\n                int mid=l+r>>1;\r\n              if(b[mid].data>hp) r=mid;\r\n              else l=mid+1;\r\n           }\r\n           //cout<<\"---- \"<<r<<endl;\r\n           if(r==m+1) e[a[i].id]=0;\r\n           else\r\n           {\r\n               int temp=f[r];\r\n             e[a[i].id]=b[temp].id;\r\n           }\r\n       }\r\n         // memset(f,0,sizeof f);\r\n        for(int i=n;i>=1;i--)\r\n        {\r\n            if(i==n) f[i]=n;\r\n            else\r\n            {\r\n                if(a[f[i+1]].hp>a[i].hp) f[i]=f[i+1];\r\n                else f[i]=i;\r\n            }\r\n        }\r\n        for(int i=1;i<=m;i++)\r\n        {\r\n            int hp=b[i].hp;\r\n            int l=1,r=n+1;\r\n          while(l<r)\r\n          {\r\n              int mid=l+r>>1;\r\n              if(a[mid].data>hp) r=mid;\r\n              else l=mid+1;\r\n          }\r\n         // cout<<\"----\"<<r<<\" \"<<f[r]<<endl;\r\n           if(r==n+1) e[b[i].id]=0;\r\n           else\r\n           {\r\n                int temp=f[r];\r\n               e[b[i].id]=a[temp].id;\r\n           }\r\n        }\r\n       \r\n        for(int i=1;i<=n+m;i++)\r\n          vis[i]=type[i]=0;\r\n          int x=0,y=0,z=0;\r\n        for(int i=1;i<=n;i++)\r\n        {\r\n             int temp=a[i].id;\r\n             if(vis[temp]==0) dfs(temp);\r\n            if(type[temp]==1) x++;\r\n            else if(type[temp]==0) y++;\r\n            else z++;\r\n        }\r\n        printf(\"%d %d %d\\n\",x,y,z);\r\n     }\r\nreturn 0;\r\n}\r\n "
}