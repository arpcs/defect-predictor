{
    "id": 232605668,
    "contestId": 1895,
    "creationTimeSeconds": 1699871796,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "E",
        "name": "Infinite Card Game",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dfs and similar",
            "dp",
            "dsu",
            "games",
            "graphs",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "itzzRaghav"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 358,
    "memoryConsumedBytes": 409600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#ifndef ONLINE_JUDGE\r\n#include \"algo/debug.h\"\r\n#else\r\n#define dbg(...) ; \r\n#define debug(...) ; \r\n#define crndl ; \r\n#endif\r\n\r\nvoid solve() {\r\n    \r\n    int n;\r\n    cin >> n;\r\n    \r\n    vector<vector<int>> a (n, vector<int> (2));\r\n    for (int i = 0; i < n; i++) \r\n        cin >> a[i][0];\r\n    \r\n    for (int i = 0; i < n; i++) \r\n        cin >> a[i][1];\r\n    \r\n    int m;\r\n    cin >> m;\r\n    \r\n    vector<vector<int>> b (m, vector<int> (2));\r\n    for (int i = 0; i < m; i++) \r\n        cin >> b[i][0];\r\n    \r\n    for (int i = 0; i < m; i++) \r\n        cin >> b[i][1];\r\n    \r\n    auto transform = [&] (vector<vector<int>> vec) {\r\n        vector<vector<int>> res;\r\n        sort (vec.begin(), vec.end());\r\n        int n =  vec.size();\r\n        \r\n        // the cards whose defense is greater than the defense of the next guy should be taken\r\n        \r\n        for (int i = 0; i < n; i++) {\r\n            if (i == n - 1 || vec[i][1] > vec[i + 1][1]) {\r\n                res.push_back (vec[i]);\r\n            }\r\n        }\r\n        \r\n        return res;\r\n    };\r\n    \r\n    vector<vector<int>> c = transform (a);\r\n    b = transform (b);\r\n    \r\n    map<int,int> mp;\r\n    \r\n    function<int(int)> play = [&] (int def) {\r\n        \r\n        if (mp.find (def) != mp.end()) return mp[def];\r\n        mp[def] = 1;\r\n        \r\n        auto it = lower_bound (b.begin(), b.end(), vector<int>{def + 1});\r\n        if (it == b.end()) return mp[def] = 0;\r\n        \r\n        int yourDef = (*it) [1];\r\n        it = lower_bound (c.begin(), c.end(), vector<int>{yourDef + 1});\r\n        if (it == c.end()) return mp[def] = 2;\r\n        \r\n        int myResponse = (*it) [1];\r\n        \r\n        if (def == myResponse) return mp[def] = 1;\r\n        return mp[def] = play (myResponse);\r\n    };\r\n    \r\n    vector<int> ans (3, 0);\r\n    for (int i = 0; i < n; i++) {\r\n        int res = play (a[i][1]);\r\n        ans[res]++;\r\n    }\r\n    \r\n    cout << ans[0] << \" \" << ans[1] << \" \" << ans[2] << endl;\r\n    \r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\r\n    #ifndef ONLINE_JUDGE\r\n    freopen(\"io/input.txt\", \"r\", stdin);\r\n    freopen(\"io/output.txt\", \"w\", stdout);\r\n    freopen(\"io/error.txt\", \"w\", stderr);\r\n    #endif\r\n    \r\n    int t = 1;\r\n    cin >> t;\r\n    \r\n    for(int tc = 1; tc <= t; tc++) {\r\n        debug(Testcase, tc);\r\n        solve ();\r\n        debug ();\r\n    }\r\n    \r\n    return 0;\r\n}"
}