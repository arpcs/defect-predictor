{
    "id": 38150219,
    "contestId": 937,
    "creationTimeSeconds": 1526173838,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 937,
        "index": "B",
        "name": "Vile Grasshoppers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1400,
        "tags": [
            "brute force",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 937,
        "members": [
            {
                "handle": "Xzavie"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1519574700
    },
    "programmingLanguage": "GNU C++",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 748,
    "memoryConsumedBytes": 15564800,
    "source": "#include <algorithm>\r\n#include <stack>\r\n#include <istream>\r\n#include <stdio.h>\r\n#include <map>\r\n#include <math.h>\r\n#include <vector>\r\n#include <iostream>\r\n#include <queue>\r\n#include <string.h>\r\n#include <set>\r\n#include <cstdio>\r\n#define FR(i,n) for(int i=0;i<n;i++)\r\n#define MAX 2005\r\nusing namespace std;\r\nconst int maxn = 3e6 + 1000;\r\ntypedef long long ll;\r\n\r\n\r\n\r\nvoid read(int &x) {\r\n\tchar ch; bool flag = 0;\r\n\tfor (ch = getchar(); !isdigit(ch) && ((flag |= (ch == '-')) || 1); ch = getchar());\r\n\tfor (x = 0; isdigit(ch); x = (x << 1) + (x << 3) + ch - 48, ch = getchar());\r\n\tx *= 1 - 2 * flag;\r\n}\r\n\r\n\r\n\r\n\r\nint vis[maxn];\r\n\r\nint main() {\r\n    int p,y;\r\n    memset(vis,0,sizeof(vis));\r\n    read(p),read(y);\r\n    for(int i=2;i<=p;i++){\r\n        for(int j=1;j*i<maxn;j++){\r\n            vis[j*i]=1;\r\n        }\r\n    }\r\n    for(int i=y;i>=p;i--){\r\n        if(!vis[i]){printf(\"%d\\n\",i);return 0;}\r\n    }\r\n    printf(\"-1\\n\");\r\n    return 0;\r\n}\r\n/*#include <algorithm>\r\n#include <stack>\r\n#include <istream>\r\n#include <stdio.h>\r\n#include <map>\r\n#include <math.h>\r\n#include <vector>\r\n#include <iostream>\r\n#include <queue>\r\n#include <string.h>\r\n#include <set>\r\n#include <cstdio>\r\n#define FR(i,n) for(int i=0;i<n;i++)\r\n#define MAX 2005\r\nusing namespace std;\r\nconst int maxn = 3e3 + 1000;\r\ntypedef long long ll;\r\nint  arr[maxn];\r\n\r\ndouble ans[100];\r\nint n;\r\nbool check(double mid)\r\n{\r\n\tint top = 0;\r\n\r\n\tfor (int i = 0; i < n; )\r\n\t{\r\n\t\tans[top++] = arr[i] + mid;\r\n\t\ti = lower_bound(arr, arr + n, arr[i] + 2 * mid) - arr;\r\n\t\tif(arr[i]<=ans[top-1]+mid)i++;\r\n\t\tif(i>=n)break;\r\n\t\t//if(mid==5)\r\n\t\t//cout<<ans[top-1]<<' '<<i<<endl;\r\n\t\tif (top >= 3)return true;\r\n\t}\r\n\treturn false;\r\n}\r\nint main() {\r\n\t//int n;\r\n\tscanf(\"%d\", &n);\r\n\tfor (int i = 0; i<n; i++)scanf(\"%d\", &arr[i]);\r\n\tsort(arr, arr + n);\r\n\tdouble ans = 0;\r\n\tdouble l = 0, r = arr[n - 1] - arr[0];\r\n\tfor (int i = 0; i <= 100; i++)\r\n\t{\r\n\t\tdouble mid = (l + r) / 2;\r\n\t\tif (check(mid))\r\n\t\t{\r\n\t\t\tans = mid;\r\n\t\t\tl = mid;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tr = mid;\r\n\t\t}\r\n\t}\r\n\tprintf(\"%.2lf\\n\", ans);\r\n\treturn 0;\r\n}\r\n\r\n*/\r\n\r\n  /*\r\n    long long int s[maxn+4],p[maxn+4],k[maxn+4];\r\n    inline int getsum(int k){int sum=0;while(k){sum++;k/=10;}return sum;}\r\n    int main(){\r\n        s[1]=1;\r\n        int cnt=1;\r\n        p[0]=0;k[0]=0;\r\n        for(int i=1;i<= 52849;i++)s[i]=getsum(i);\r\n        for(int i=1;i<= 52849;i++)p[i]=p[i-1]+s[i];\r\n        for(int i=1;i<= 52849;i++)k[i]=p[i]+k[i-1];\r\n        int t;\r\n        scanf(\"%d\",&t);\r\n        int left,pos;\r\n        while(t--)\r\n        {\r\n            int num;\r\n            scanf(\"%d\", &num);\r\n\r\n            left=lower_bound(k+1,k+1+maxn,num)-(k+1);\r\n\r\n            pos=num-k[left];\r\n            left=lower_bound(p+1,p+1+maxn,pos)-(p+1);\r\n\r\n            pos=pos-p[left];\r\n            left++;\r\n            pos=s[left]-pos+1;\r\n            int i=1;\r\n            while(i<pos){left/=10;i++;}\r\n            cout<<left%10<<endl;\r\n\r\n        }\r\n\r\n        return 0;\r\n    }I*/\r\n    /*#include <algorithm>\r\n    #include <stack>k,\r\n    #include <istream>\r\n    #include <stdio.h>\r\n    #include <map>\r\n    #include <math.h>\r\n    #include <vector>\r\n    #include <iostream>\r\n    #include <queue>\r\n    #include <string.h>\r\n    #include <set>\r\n    #include <cstdio>\r\n    #define FR(i,n) for(int i=0;i<n;i++)\r\n    #define MAX 2005\r\n    using namespace std;\r\n    const int maxn = 5e3 + 5;\r\n    typedef long long ll;\r\n\r\n\r\n    int n,m;\r\n    int arr[maxn][maxn];\r\n    char out[maxn][maxn];\r\n    int tmp[maxn][maxn];\r\n    int vis[maxn];\r\n    void work()\r\n    {\r\n        for(int i=1;i<=n;i++)\r\n            for(int j=1;j<=m;j++)\r\n             tmp[i][j]=arr[i][j];\r\n    }\r\n    void solve(int i,int j)\r\n    {\r\n        tmp[i][j]|=tmp[i][j];\r\n        if(i+1<=n)tmp[i+1][j]|=tmp[i+1][j];\r\n        if(j+1<=m)tmp[i][j+1]|=tmp[i][j+1];\r\n        if(i-1>=1)tmp[i-1][j]|=tmp[i-1][j];\r\n        if(j-1>=1)tmp[i][j-1]|=tmp[i][j-1];\r\n    }\r\n    int main(){\r\n      //  int n,m;\r\n        scanf(\"%d%d\",&n,&m);\r\n        for(int i=1;i<=n;i++){\r\n            for(int j=1;j<=m;j++){\r\n                 int tem;\r\n                 scanf(\"%d\",&tem);\r\n                 out[i][j]=tem+'0';\r\n            }\r\n        }\r\n        int len=strlen(out[1]);\r\n        for(int i=1;i<=(1<<len);i++){\r\n             work();\r\n             for(int j=1;j<=len;j++){\r\n                if(i&(1<<j)){\r\n                   solve(i,j);\r\n                }\r\n             }\r\n             for(int j=2;j<=n;j++){\r\n                for(int k=1;k<=m;k++){\r\n\r\n                }\r\n             }\r\n        }\r\n        return 0;\r\n    }\r\n    */\r\n\r\n    //1 1 1 1 1 2 1 2\r\n\r\n    /*#include<cstdio>\r\n    #include<cstdlib>\r\n    #include<algorithm>\r\n    #include<cstring>\r\n    #include<iostream>\r\n    #include<queue>\r\n    #define ll long long\r\n    #define N 405\r\n    using namespace std;\r\n    const int dx[5]={1,-1,0,0},dy[5]={0,0,1,-1};\r\n    int n,m,f[N][N],ex,ey,sx,sy,q,u1[N*3],v1[N*3];\r\n    char ch;\r\n    char a[N][N];\r\n    struct he{\r\n        int u,v,t;\r\n    }b[N][N];\r\n    queue<he>Q;\r\n    void bfs(int sx,int sy){\r\n        int ans=10000000;\r\n        while(!Q.empty()) Q.pop();\r\n        for(int i=0;i<n;i++)\r\n            for(int j=0;j<m;j++) f[i][j]=10000000;\r\n        f[sx][sy]=0;\r\n        Q.push((he){sx,sy,0});\r\n        while(!Q.empty()){\r\n            he p=Q.front();Q.pop();\r\n            if(p.u==ex&&p.v==ey) {\r\n                ans=min(ans,p.t);\r\n                continue;\r\n            }\r\n            if(b[p.u][p.v].u!=-1){\r\n                int x1=b[p.u][p.v].u;\r\n                int y1=b[p.u][p.v].v;\r\n                if(a[x1][y1]!='#'&&f[x1][y1]>p.t+3){\r\n                    f[x1][y1]=p.t+3;\r\n                    Q.push((he){x1,y1,p.t+3});\r\n                }\r\n            }\r\n            for(int i=0;i<4;i++){\r\n                int x1=p.u+dx[i];\r\n                int y1=p.v+dy[i];\r\n                if(x1<n&&x1>=0&&y1>=0&&y1<m&&a[x1][y1]!='#'&&f[x1][y1]>p.t+1){\r\n                    f[x1][y1]=p.t+1;\r\n                    Q.push((he){x1,y1,p.t+1});\r\n                }\r\n            }\r\n        }\r\n        if(ans!= 10000000)\r\n        printf(\"%d\\n\",ans);else printf(\"-1\\n\");\r\n    }\r\n    int main(){\r\n        //freopen(\"1.in\",\"r\",stdin);\r\n        for(int i=0;i<=300;i++)\r\n            for(int j=0;j<=300;j++) b[i][j].u=b[i][j].v=-1;\r\n        while(scanf(\"%d%d%d\",&n,&m,&q)!=EOF){\r\n            for(int i=0;i<n;i++)\r\n                for(int j=0;j<m;j++){\r\n                    scanf(\"%c\",&ch);\r\n                    while(ch!='.'&&ch!='S'&&ch!='T'&&ch!='#') ch=getchar();\r\n                    a[i][j]=ch;\r\n                    if(ch=='S') sx=i,sy=j;\r\n                    if(ch=='T') ex=i,ey=j;\r\n                }\r\n            for(int i=1;i<=q;i++){\r\n                scanf(\"%d%d\",&u1[i],&v1[i]);\r\n                scanf(\"%d%d\",&b[u1[i]][v1[i]].u,&b[u1[i]][v1[i]].v);\r\n            }\r\n            bfs(sx,sy);\r\n            for(int i=1;i<=q;i++)\r\n                b[u1[i]][v1[i]].u=-1,b[u1[i]][v1[i]].v=-1;\r\n        }\r\n    }*/\r\n    /*\r\n    long long int n,arr[maxn];\r\n    int vis[maxn];\r\n    long long int sum[maxn];\r\n    void init()\r\n    {\r\n        memset(vis,0,sizeof(vis));\r\n        memset(sum,0,sizeof(sum));\r\n        vis[1]=1;sum[1]=0;\r\n        vis[2]=0;sum[2]=0;\r\n        for(int i = 1;i<sqrt(maxn);i++) {\r\n             if(!vis[i]) {\r\n                for(int j = 2;j*i<maxn;j++) {\r\n                    vis[i]=1;\r\n                    sum[i*j]++;\r\n                }\r\n             }\r\n        }//for(int i = 1;i<100;i++)printf(\"%d \",sum[i]);\r\n    }\r\n    int main() {\r\n        int T;\r\n        init();\r\n        while(~scanf(\"%d\",&T))\r\n        {\r\n            scanf(\"%d\",&n);\r\n            long long int ans = 0;\r\n            for(int i = 0;i<n;i++)\r\n            {\r\n                long long int val;\r\n                scanf(\"%lld\",&val);\r\n                ans+=val-sum[val]-1;\r\n                //scanf(\"%d\",&arr[i]);\r\n            }\r\n            cout<<ans<<endl;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    */\r\n\r\n    /*\r\n    int arr[maxn][maxn];\r\n    int dp[maxn][maxn];\r\n    int N;\r\n    int dfs(int Curi,int Curj,int Sum)\r\n    {\r\n        if(Curi>=N||Curj>=N)return 0;\r\n        if(dp[Curi][Curj]!=-1)return dp[Curi][Curj];\r\n        int tmp = Sum,temp=0;\r\n        while(tmp) {\r\n            if(tmp%10!=0)break;\r\n            tmp/=10;\r\n            temp++;\r\n        }\r\n        return dp[Curi][Curj]=temp+min(dfs(Curi+1,Curj,Sum*arr[Curi+1][Curj]),dfs(Curi,Curj+1,Sum*arr[Curi][Curj+1]));\r\n    }\r\n    void Print(int sum,int Nowi,int Nowj)\r\n    {\r\n        int u = 0;\r\n        int Tmp=sum;\r\n        while(Tmp)\r\n        {\r\n            if(Tmp%10)break;\r\n            Tmp/=10;u++;\r\n        }\r\n        Tmp=dp[Nowi][Nowj];\r\n        if(dp[Nowi+1][Nowj])\r\n    }\r\n    int main() {\r\n       // int n;\r\n        scanf(\"%d\",&N);\r\n        memset(dp,-1,sizeof(dp));\r\n        for(int i = 0;i<N;i++)\r\n           for(int j = 0;j<N;j++) {\r\n            scanf(\"%d\",&arr[i][j]);\r\n           }\r\n        dfs(0,0,arr[0][0]);\r\n\r\n        cout<<dp[0][0]<<endl;\r\n        Print(arr[0][0],0,0);\r\n        return 0;\r\n    }\r\n    */\r\n\r\n\r\n    /*\r\n    long long int n,arr[maxn];\r\n    int vis[maxn];\r\n    long long int sum[maxn];\r\n    void init()\r\n    {\r\n        memset(vis,0,sizeof(vis));\r\n        memset(sum,0,sizeof(sum));\r\n        vis[1]=1;sum[1]=0;\r\n        vis[2]=0;sum[2]=0;\r\n        for(int i = 1;i<sqrt(maxn);i++) {\r\n             if(!vis[i]) {\r\n                for(int j = 2;j*i<maxn;j++) {\r\n                    vis[i]=1;\r\n                    sum[i*j]++;\r\n                }\r\n             }\r\n        }//for(int i = 1;i<100;i++)printf(\"%d \",sum[i]);\r\n    }\r\n    int main() {\r\n        int T;\r\n        init();\r\n        while(~scanf(\"%d\",&T))\r\n        {\r\n            scanf(\"%d\",&n);\r\n            long long int ans = 0;\r\n            for(int i = 0;i<n;i++)\r\n            {\r\n                long long int val;\r\n                scanf(\"%lld\",&val);\r\n                ans+=val-sum[val]-1;\r\n                //scanf(\"%d\",&arr[i]);\r\n            }\r\n            cout<<ans<<endl;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    */\r\n\r\n    /*\r\n    int arr[maxn][maxn];\r\n    int dp[maxn][maxn];\r\n    int N;\r\n    int dfs(int Curi,int Curj,int Sum)\r\n    {\r\n        if(Curi>=N||Curj>=N)return 0;\r\n        if(dp[Curi][Curj]!=-1)return dp[Curi][Curj];\r\n        int tmp = Sum,temp=0;\r\n        while(tmp) {\r\n            if(tmp%10!=0)break;\r\n            tmp/=10;\r\n            temp++;\r\n        }\r\n        return dp[Curi][Curj]=temp+min(dfs(Curi+1,Curj,Sum*arr[Curi+1][Curj]),dfs(Curi,Curj+1,Sum*arr[Curi][Curj+1]));\r\n    }\r\n    void Print(int sum,int Nowi,int Nowj)\r\n    {\r\n        int u = 0;\r\n        int Tmp=sum;\r\n        while(Tmp)\r\n        {\r\n            if(Tmp%10)break;\r\n            Tmp/=10;u++;\r\n        }\r\n        Tmp=dp[Nowi][Nowj];\r\n        if(dp[Nowi+1][Nowj])\r\n    }\r\n    int main() {\r\n       // int n;\r\n        scanf(\"%d\",&N);\r\n        memset(dp,-1,sizeof(dp));\r\n        for(int i = 0;i<N;i++)\r\n           for(int j = 0;j<N;j++) {\r\n            scanf(\"%d\",&arr[i][j]);\r\n           }\r\n        dfs(0,0,arr[0][0]);\r\n\r\n        cout<<dp[0][0]<<endl;\r\n        Print(arr[0][0],0,0);\r\n        return 0;\r\n    }\r\n    */\r\n"
}