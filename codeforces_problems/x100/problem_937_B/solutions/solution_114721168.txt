{
    "id": 114721168,
    "contestId": 937,
    "creationTimeSeconds": 1619815858,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 937,
        "index": "B",
        "name": "Vile Grasshoppers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1400,
        "tags": [
            "brute force",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 937,
        "members": [
            {
                "handle": "niks1702"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1519574700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 58,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define vl vector<ll>\r\n#define ml map<ll,ll>\r\n#define sl set<ll>\r\n#define pl pair<ll,ll>\r\n#define pql priority_queue<ll>\r\n\r\n#define ll long long\r\n#define pb push_back\r\n#define all(v) v.begin(),v.end()\r\n#define vsort(v) sort(all(v))\r\n\r\n#define F first\r\n#define S second\r\n#define mod 1000000007\r\n\r\nint isprime(ll n,ll p)\r\n{\r\n    ll i;\r\n    for(i=2;i<=sqrt(n) && i<=p;i++)\r\n    {\r\n        if(n%i==0)\r\n        {\r\n            return 0;\r\n        }\r\n    }\r\n    return 1;\r\n}\r\n\r\nint main()\r\n{\r\n    ll t=1,n,i,p,y;\r\n    string s;\r\n    //cin>>t;\r\n\r\n    while(t--)\r\n    {\r\n        ll ans=-1;\r\n        cin>>p>>y;\r\n        for(i=y;i>=2;i--)\r\n        {\r\n            if(isprime(i,p)==1)\r\n\r\n            {\r\n                ans=i;\r\n                break;\r\n            }\r\n        }\r\n       if(ans<=p)\r\n       {\r\n           cout<<\"-1\";\r\n       }\r\n       else\r\n       {\r\n           cout<<ans;\r\n       }\r\n\r\n\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n\r\n",
    "category_evaluation": {
        "mathematics": 60,
        "dynamic programming": 10,
        "bit manipulation": 10,
        "greedy": 10,
        "brute force": 40,
        "graphs": 0,
        "sortings": 10,
        "search": 20,
        "trees": 0,
        "strings": 0,
        "number theory": 60,
        "combinatorics": 0,
        "two pointers": 0,
        "geometry": 0,
        "shortest paths": 0,
        "divide and conquer": 0,
        "probabilities": 0,
        "data structures": 20,
        "game theory": 0,
        "2d, 3d": 0,
        "recursive": 0,
        "well-commented": 0,
        "self-documenting": 0,
        "complex": 0,
        "readable": 0,
        "well-named": 0,
        "efficient": 10,
        "reusable": 0,
        "documented": 0,
        "good error-handling": 0,
        "good solution": 40,
        "compilation error": 0,
        "runtime error": 0
    },
    "defect_evaluation": {
        "good solution": 70,
        "compilation error": 20,
        "runtime error": 10
    }
}