{
    "id": 100339753,
    "contestId": 937,
    "creationTimeSeconds": 1607077306,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 937,
        "index": "B",
        "name": "Vile Grasshoppers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1400,
        "tags": [
            "brute force",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 937,
        "members": [
            {
                "handle": "cornbringer"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1519574700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 58,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#include<iomanip>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef double db;\r\n#define mpll map<ll,ll>\r\n#define mp_pll map<pair<ll,ll>,ll> \r\n#define vll vector<ll>\r\n#define vpll vector<pair<ll,ll>>\r\n#define vs vector<string>\r\n#define vc vector<char> \r\n#define pi 3.14159265358979323846264338327\r\nvoid fast(){\r\n  ios_base::sync_with_stdio(false);cin.tie(NULL);\r\n}\r\nint main(){\r\n  fast();\r\n  ll p,y; cin>>p>>y;\r\n  for(ll i=y;i>p;i--){\r\n    ll t=0;\r\n    for(ll j=2;j<=p && j*j<=i;j++){\r\n      if(i%j==0){\r\n        t=1;\r\n        break;\r\n      }\r\n    }\r\n    if(t==0){\r\n      cout<<i;\r\n      return 0;\r\n    }\r\n  }\r\n  cout<<-1<<endl;\r\n  return 0;\r\n}\r\n",
    "category_evaluation": {
        "mathematics": 40,
        "dynamic programming": 0,
        "bit manipulation": 0,
        "greedy": 0,
        "brute force": 30,
        "graphs": 0,
        "sortings": 0,
        "search": 0,
        "trees": 0,
        "strings": 0,
        "number theory": 30,
        "combinatorics": 0,
        "two pointers": 0,
        "geometry": 0,
        "shortest paths": 0,
        "divide and conquer": 0,
        "probabilities": 0,
        "data structures": 0,
        "game theory": 0,
        "2d, 3d": 0,
        "recursive": 0,
        "well-commented": 0,
        "self-documenting": 0,
        "complex": 0,
        "readable": 0,
        "well-named": 0,
        "efficient": 0,
        "reusable": 0,
        "documented": 0,
        "good error-handling": 0,
        "good solution": 40,
        "compilation error": 0,
        "runtime error": 0
    },
    "defect_evaluation": {
        "good solution": 80,
        "compilation error": 0,
        "runtime error": 20
    },
    "defect_evaluation_v1": {
        "good solution": 80,
        "compilation error": 0,
        "runtime error": 20
    },
    "defect_evaluation_v3": {
        "good solution": 70,
        "wrong solution": 30,
        "compilation error": 0,
        "runtime error": 0
    },
    "defect_evaluation_gpt4_v4": {
        "good solution": 90,
        "wrong solution": 5,
        "compilation error": 0,
        "runtime error": 5
    },
    "defect_evaluation_v4": {
        "good solution": 80,
        "wrong solution": 20,
        "compilation error": 0,
        "runtime error": 0
    }
}