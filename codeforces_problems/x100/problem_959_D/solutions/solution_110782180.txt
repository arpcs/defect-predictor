{
    "id": 110782180,
    "contestId": 959,
    "creationTimeSeconds": 1616475770,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "shakti1234"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 4096000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll int\r\n#define ull unsigned long long int\r\n#define ld long double\r\n#define pb push_back\r\n#define all(_obj) _obj.begin(),_obj.end()\r\n#define ff first\r\n#define ss second\r\n#define INF 1e18\r\n#define pll pair<ll, ll>\r\n#define vll vector<ll>\r\n#define vvll vector<vll>\r\n#define vpll vector<pair<ll,ll>>\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define MOD 1000000007\r\n#define test ll t;cin>>t; while(t--)\r\nconst int N = 1000000;\r\ninline ll max(ll a, ll b) {return ((a > b) ? a : b);}\r\ninline ll min(ll a, ll b) {return ((a > b) ? b : a);}\r\ninline ll gcd(ll a, ll b) {if (b == 0) return a; a %= b; return gcd(b, a);}\r\nll spf[N];\r\nvll prime;\r\nvoid sieve()\r\n{\r\n\tspf[0] = 0;\r\n\tfor (ll i = 1; i < N; i++)\r\n\t{\r\n\t\tif (i % 2 == 0)\r\n\t\t\tspf[i] = 2;\r\n\t\telse\r\n\t\t\tspf[i] = i;\r\n\t}\r\n\tprime.pb(2);\r\n\tfor (ll i = 3; i < N; i++)\r\n\t{\r\n\t\tif (spf[i] == i)\r\n\t\t{\r\n\t\t\tprime.pb(i);\r\n\t\t\tfor (ll j = i * i; j < N; j += i)\r\n\t\t\t{\r\n\t\t\t\tif (spf[j] == j)\r\n\t\t\t\t\tspf[j] = i;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nset<ll> prime_factorisation(ll x)\r\n{\r\n\tset<ll> res;\r\n\twhile (x != 1)\r\n\t{\r\n\t\tres.insert(spf[x]);\r\n\t\tx = x / spf[x];\r\n\t}\r\n\treturn res;\r\n}\r\n\r\nvoid sol() {\r\n\tcout << prime.back() << endl;\r\n\tll n, i;\r\n\tcin >> n;\r\n\tvll a(n), b(n);\r\n\tll min_prime = 0;\r\n\tset<ll> s_final;\r\n\tfor (i = 0; i < n; i++) {\r\n\t\tcin >> a[i];\r\n\t}\r\n\tvll prime_new(1000000);\r\n\tfor (i = 0; i < n; i++) {\r\n\t\tif (!i) {\r\n\t\t\ts_final = prime_factorisation(a[i]);\r\n\t\t\tfor (auto j : s_final) {\r\n\t\t\t\tprime_new[j]++;\r\n\t\t\t}\r\n\t\t\twhile (s_final.find(prime[min_prime]) != s_final.end())\r\n\t\t\t\tmin_prime++;\r\n\t\t\tb[i] = a[i];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tset<ll> s = prime_factorisation(a[i]);\r\n\t\t\tll flag = 0;\r\n\t\t\tfor (auto j : s) {\r\n\t\t\t\tif (prime_new[j] != 0) {\r\n\t\t\t\t\tflag = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (flag == 0) {\r\n\t\t\t\tfor (auto j : s) {\r\n\t\t\t\t\ts_final.insert(j);\r\n\t\t\t\t\tprime_new[j]++;\r\n\t\t\t\t}\r\n\t\t\t\twhile (s_final.find(prime[min_prime]) != s_final.end())\r\n\t\t\t\t\tmin_prime++;\r\n\t\t\t\tb[i] = a[i];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tll x = *s_final.rbegin();\r\n\t\t\t\tfor (ll j = i; j < n; j++) {\r\n\t\t\t\t\tb[j] = prime[min_prime];\r\n\t\t\t\t\tmin_prime++;\r\n\t\t\t\t\twhile (s_final.find(prime[min_prime]) != s_final.end())\r\n\t\t\t\t\t\tmin_prime++;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor (i = 0; i < n; i++)cout << b[i] << \" \";\r\n\treturn;\r\n}\r\n\r\nint main()\r\n{\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(NULL);\r\n\tcout.tie(NULL);\r\n#ifndef ONLINE_JUDGE\r\n\tfreopen(\"input.txt\" , \"r\" , stdin);\r\n\tfreopen(\"output.txt\" , \"w\" , stdout);\r\n#endif\r\n\tsieve();\r\n\t// test\r\n\tsol();\r\n}"
}