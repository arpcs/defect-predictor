{
    "id": 98239245,
    "contestId": 959,
    "creationTimeSeconds": 1605231763,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "mehrab"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 102502400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#include <ext/pb_ds/assoc_container.hpp> \r\n#include <ext/pb_ds/tree_policy.hpp> \r\nusing namespace __gnu_pbds; \r\n#define int               long long\r\n#define pb                push_back\r\n#define ppb               pop_back\r\n#define pf                push_front\r\n#define ppf               pop_front\r\n#define all(x)            (x).begin(),(x).end()\r\n#define allr(x)\t\t\t  (x).rbegin(),(x).rend()\r\n#define uniq(v)           (v).erase(unique(all(v)),(v).end())\r\n#define sz(x)             (int)((x).size())\r\n#define fr                first\r\n#define sc                second\r\n#define pii               pair<int,int>\r\n#define loop(i,a,b)        for(int i=a;i<b;i++)\r\n#define mem1(a)           memset(a,-1,sizeof(a))\r\n#define mem0(a)           memset(a,0,sizeof(a))\r\n#define ppc               __builtin_popcount\r\n#define ppcll             __builtin_popcountll\r\n#define br                break\r\n#define con               continue \r\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> \r\n\r\ntemplate<typename T1,typename T2>istream& operator>>(istream& in,pair<T1,T2> &a){in>>a.fr>>a.sc;return in;}\r\ntemplate<typename T1,typename T2>ostream& operator<<(ostream& out,pair<T1,T2> a){out<<a.fr<<\" \"<<a.sc;return out;}\r\ntemplate<typename T,typename T1>T amax(T &a,T1 b){if(b>a)a=b;return a;}\r\ntemplate<typename T,typename T1>T amin(T &a,T1 b){if(b<a)a=b;return a;}\r\n \r\nconst long long INF=1e18;\r\nconst int32_t M=1e9+7;\r\nconst int32_t MM=998244353;\r\n\r\npriority_queue<pii, vector<pii>, greater<pii> >q;\r\nconst int mx= 6e6+5;\r\nint mark[mx];\r\nint used[mx];\r\nvector<int>p;\r\nvoid seive(){\r\n\tfor(int i=2;i<=mx;i++){\r\n\t\tif(mark[i]==0){\r\n\t\t\tp.pb(i);\r\n\t\t\tfor(int j=i+i;j<=mx;j+=i)mark[j]=1;\r\n\t\t}\r\n\t}\r\n}\r\nsigned main(){\r\n\t#ifndef ONLINE_JUDGE\r\n\tfreopen(\"input.txt\",\"r\",stdin);\r\n\tfreopen(\"output1.txt\",\"w\",stdout);\r\n\t#endif\r\n    ios_base::sync_with_stdio(false);\r\n\tcin.tie(0);cout.tie(0);\r\n\tint n,x,x1;\r\n\tcin>>n;\r\n\tseive();\r\n\tvector<int>v;\r\n\tint coun=0;\r\n\tfor(int i=0;i<n;i++){\r\n\t\tcin>>x1;\r\n\t\tx =x1;\r\n\t\tif(mark[x]==0 && used[x]==0){\r\n\t\t\tv.pb(x);\r\n\t\t\tcoun++;\r\n\t\t\tused[x]=1;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tvector<int>tmp;\r\n\t\t\tfor(int j=0;j<p.size() && p[j]<=x/2;j++){\r\n\t\t\t\tif(x%p[j]==0){\r\n\t\t\t\t\ttmp.pb(p[j]);\r\n\t\t\t\t\twhile(x%p[j]==0)x/=p[j];\r\n\t\t\t\t}\r\n\t\t\t\telse if(mark[x]==0){\r\n\t\t\t\t\ttmp.pb(x);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\tint f=0;\r\n\t\t\tfor(int j=0;j<tmp.size();j++){\r\n\t\t\t\tif(used[tmp[j]]==1){\r\n\t\t\t\t\tf=1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(f==0){\r\n\t\t\t\tcoun++;\r\n\t\t\t\tv.pb(x1);\r\n\t\t\t\tfor(int j=0;j<tmp.size();j++)\r\n\t\t\t\t\tused[tmp[j]]=1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tint j=0;\r\n\twhile(coun<n){\r\n\t\tif(used[p[j]]==0){\r\n\t\t\tcoun++;\r\n\t\t\tv.pb(p[j]);\r\n\t\t\tused[p[j]]=1;\r\n\t\t}\r\n\t\tj+=1;\r\n\t}\r\n\tfor(int i=0;i<n;i++)\r\n\t\tcout<<v[i]<<\" \";\r\n\r\n\t\r\n\t\r\n\r\n}"
}