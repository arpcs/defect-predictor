{
    "id": 93545409,
    "contestId": 959,
    "creationTimeSeconds": 1600852141,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "Satish115"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 2542,
    "memoryConsumedBytes": 185753600,
    "source": "\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long int \r\n#define str string\r\n#define pb push_back\r\n#define vc vector\r\n#define ci cin\r\n#define co cout\r\nll vis[2000010];\r\nbool tak[2000010];\r\n std::vector<ll> adj[2000010];set<ll>v;\r\n// remove fropen in online judge\r\n\r\nint main()\r\n{ \r\n\t\r\n    for(int i=2;i<=2000000;i++)\r\n    {  if(vis[i]!=true)\r\n    \t\r\n    {\tfor(int j=i;j<=2000000;j+=i)\r\n    \t{\r\n    \t\t\r\n    \t\t\t\tvis[j]=true;\r\n    \t\t\t\tadj[j].pb(i);\r\n    \t\t\t\r\n    \t}}\r\n    \tv.insert(i);\r\n    }\r\n   \r\n   ll n;\r\n   cin>>n;\r\n   ll a[n];\r\n \r\n    // for(int i=0;i<10;i++)\r\n    // \tcout<<v[i]<<\"\\n\";\r\n    ll f=0;\r\n    for(int i=0;i<n;i++)\r\n    {  cin>>a[i];\r\n    \t ll idx=*v.begin();\r\n    \tif(f==0){\r\n        idx=*v.lower_bound(a[i]);\r\n        if(idx!=a[i])\r\n        \tf=1;\r\n    }\r\n    cout<<idx<<\" \";\r\n    for(int u:adj[idx])\r\n    {\r\n    \tfor(int j=u;j<2000000;j+=u)\r\n    \t{\r\n    \t\tif(!tak[j])\r\n    \t\t{\r\n    \t\t\ttak[j]=1;\r\n    \t\t\tv.erase(j);\r\n    \t\t}\r\n    \t}\r\n    }\r\n    \r\n    }\r\n    \r\n}\r\n"
}