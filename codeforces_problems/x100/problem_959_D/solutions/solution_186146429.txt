{
    "id": 186146429,
    "contestId": 959,
    "creationTimeSeconds": 1671563113,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "Pouyaaan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 31334400,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing ll = long long;\n\nconst int N = 3e6 + 7;\n\nvector<pair<int, bool>> v;\nint n, a[N], p[N];\n\nvoid input() {\n\n    cin >> n;\n\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n}\n\nvoid prepare() {\n\n    bool sieve[N] = {true, true};\n\n    for (int i = 2; i * i < N; i++) {\n        if (!sieve[i]) {\n            for (int j = i * i; j < N; j += i) {\n                sieve[j] = true;\n            }\n        }\n    }\n\n    for (int i = 2; i < N; i++) {\n        if (!sieve[i]) {\n            p[i] = v.size();\n            v.push_back(make_pair(i, false));\n        }\n    }\n}\n\nvector<int> get_prime_divisors(int x) {\n\n    vector<int> ans;\n    int tmp = x;\n\n    for (int i = 2; i * i <= x && i <= tmp; i++) {\n        if (tmp % i == 0) {\n\n            ans.push_back(i);\n\n            while (tmp % i == 0) {\n                tmp /= i;\n            }\n        }\n    }\n    \n    if (tmp != 1) {\n        ans.push_back(tmp);\n    }\n\n    return ans;\n}\n\nbool check(vector<int> u) {\n\n    for (int k : u) {\n        if (v[p[k]].second) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nvoid solve() {\n\n    bool b = true;\n    int q = 0;\n\n    for (int i = 0; i < n; i++) {\n        if (b) {\n\n            vector<int> u = get_prime_divisors(a[i]);\n\n            if (check(u)) {\n\n                cout << a[i] << ' ';\n\n                for (int x : u) {\n                    v[p[x]].second = true;\n                }\n            } else {\n\n                vector<int> y;\n\n                for (int j = a[i] + 1; j < 1e9; j++) {\n\n                    y = get_prime_divisors(j);\n\n                    if (check(y)) {\n                        cout << j << ' ';\n                        break;\n                    }\n                }\n\n                for (int x : y) {\n                    v[p[x]].second = true;\n                }\n\n                b = false;\n            }\n        } else {\n\n            while (v[q].second) {\n                q++;\n            }\n\n            v[q].second = true;\n            cout << v[q].first << ' ';\n        }\n    }\n\n    cout << '\\n';\n}\n\nint main() {\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n    input(), prepare(), solve();\n}\n"
}