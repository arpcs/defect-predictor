{
    "id": 146903831,
    "contestId": 959,
    "creationTimeSeconds": 1645255409,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "RohitRKS"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 2121,
    "memoryConsumedBytes": 114073600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\r\n#define int long long\r\n#define all(v) v.begin(),v.end()\r\n#define mod 1000000007\r\n#define N 2000010\r\n#define inf 10000000000\r\n#define pb(x) push_back(x)\r\n\r\n// everytime I increase N to pass the code : darr ka mahaul hai TLE se\r\n\r\n//print smallest prime factors\r\nint spf[N+5];\r\nvoid build_spf()\r\n{\r\n\tfor(int i=1;i<=N;i++)\r\n\t{\r\n\t\tspf[i]=i;\r\n\t}\r\n\tfor(int i=2;i<=N;i++)\r\n\t{\r\n\t\tif(spf[i]==i)\r\n\t\t{\r\n\t\t\tfor(int j=i*i;j<=N;j+=i)\r\n\t\t\t{\r\n\t\t\t\tif(spf[j]==j)\r\n\t\t\t\t{\r\n\t\t\t\t\tspf[j]=i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n//finding prime factors of a number using spf array \r\nvector<int> find(int n)\r\n{\r\n\tset<int> fact;\r\n\twhile(n>1)\r\n\t{\r\n\t\tfact.insert(spf[n]);\r\n\t\tn/=spf[n];\r\n\t}\r\n\tvector<int> ft;\r\n\tfor(auto x:fact)\r\n\t{\r\n\t\tft.push_back(x);\r\n\t}\r\n\treturn ft;\r\n}\r\n\r\nset<int> s;\r\nsigned main()\r\n{\r\n    fast\r\n    build_spf();\r\n    int n;\r\n    cin>>n;\r\n    vector<int> v(n);\r\n    for(int i=0;i<n;i++)\r\n    {\r\n    \tcin>>v[i];\r\n    }\r\n    for(int i=2;i<N;i++)\r\n    {\r\n    \ts.insert(i);\r\n    }\r\n    vector<int> ans(n,0);\r\n    bool found=false;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n    \tint x=0;\r\n    \tif(found)\r\n    \t{\r\n    \t\tx=*s.begin();\r\n    \t}\r\n    \telse \r\n    \t{\r\n\t    \tx=*s.lower_bound(v[i]);\r\n\t    \tif(x>v[i])\r\n\t    \t{\r\n\t    \t\tfound=true;\r\n\t    \t}\r\n    \t}\r\n    \tans[i]=x;\r\n    \tvector<int> tmp=find(x);\r\n    \tfor(auto x:tmp)\r\n    \t{\r\n    \t\tfor(int j=x;j<N;j+=x)\r\n    \t\t{\r\n    \t\t\tif(s.find(j)!=s.end())\r\n    \t\t\t{\r\n    \t\t\t\ts.erase(j);\r\n    \t\t\t}\r\n    \t\t}\r\n    \t}\r\n    }\r\n    for(auto x:ans)\r\n    {\r\n    \tcout<<x<<\" \";\r\n    }\r\n}"
}