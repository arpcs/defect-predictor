{
    "id": 138896594,
    "contestId": 959,
    "creationTimeSeconds": 1639324825,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "sunnycalifornia"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "# include <cstdio>\n# include <iostream>\n# include <cmath>\n# include <algorithm>\n# include <cstring>\n# include <stack>\n# include <vector>\n# include <set>\n\nusing namespace std;\n\nconst int MAXN = 2e6 + 10;\nbool flag;\nset <int> s;\nint n, a[MAXN], b[MAXN];\n\nvoid solve(int num) {\n\tfor (int i = 2; i * i <= num; i++) {\n\t\tif (num % i == 0) {\n\t\t\tfor (int j = i; j <= MAXN - 10; j += i) {\n\t\t\t\tif (s.count(j)) s.erase(j);\n\t\t\t}\n\t\t\twhile (num % i == 0) num /= i;\n\t\t}\n\t}\n\tif (num > 1) {\n\t\tfor (int i = num; i <= MAXN - 10; i += num) {\n\t\t\tif (s.count(j)) s.erase(j);\n\t\t}\n\t}\n}\n\nint main() {\n\n\n    cin >> n;\n    for (int i =1; i <= n; i++) {\n    \tcin >> a[i];\n    }\n\n    for (int i = 2; i <= MAXN - 10; i++) {\n    \ts.insert(i);\n    }\n\n    for (int i = 1; i <= n; i++) {\n    \tset <int> :: iterater it;\n    \tif (flag) it = s.begin();\n    \tel\n    }\n    nxt[n + 1][0] = nxt[n + 1][1] = nxt[n + 1][2] = n + 1;\n    for(int i = n; i >= 1; i--) {\n        nxt[i][0] = nxt[i + 1][0];\n        nxt[i][1] = nxt[i + 1][1];\n        nxt[i][2] = nxt[i + 1][2];\n        if (ch[i] == 'a') nxt[i][0] = i;\n        if (ch[i] == 'b') nxt[i][1] = i;\n        if (ch[i] == 'c') nxt[i][2] = i;\n    }\n\tf[1][0][0][0] = 1;\n\n    for (int i = 1; i <= n; i++) {\n        for (int a = 0; a <= (n + 2) / 3; a++) {\n            for (int b = 0; b <= (n + 2) / 3; b++) {\n                for (int c = 0; c <= (n + 2) / 3; c++) {\n                    if (a + b + c == n && abs(a - b) <= 1 && abs(a - c) <= 1 && abs(b - c) <= 1) {\n                    \tans = (ans + f[i][a][b][c]) % PR; \n                    }\n                    f[nxt[i][0]][a + 1][b][c] = (f[nxt[i][0]][a + 1][b][c] + f[i][a][b][c]) % PR;\n                    f[nxt[i][1]][a][b + 1][c] = (f[nxt[i][1]][a][b + 1][c] + f[i][a][b][c]) % PR;\n                    f[nxt[i][2]][a][b][c + 1] = (f[nxt[i][2]][a][b][c + 1] + f[i][a][b][c]) % PR;\n                }\n            }\n        }\n    }\ncout << ans << endl ;\n    return 0;\n}"
}