{
    "id": 120186161,
    "contestId": 959,
    "creationTimeSeconds": 1624261652,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "blueconch"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 920,
    "memoryConsumedBytes": 95948800,
    "source": "// Problem ID - 959D\n\n#include <functional>\n#define debug(...)\n#include <bits/stdc++.h>\nusing namespace std;\nvoid solve();\n\n#define ll long long\n\nint main() {\n\n\tios_base::sync_with_stdio(false);\n\tcin.tie(NULL);\n\n\tint t=1;\n\t//cin >> t;\n\tfor (int i = 0; i < t; ++i) {\n\t\tsolve();\n\t\tcout << \"\\n\";\n\t}\n\n\tcerr << \"time taken : \" << (float)clock()/CLOCKS_PER_SEC << \" secs\" << \"\\n\";\n\treturn 0;\n}\n\n\n\nvoid solve() {\n\n\tvector<int> d[2000005];\n\tvector<int> p(2000005, false);\n\n\tfor (int i=2;i<2000005;i++)\n\t\tif (!p[i])\n\t\t\tfor (int x=i;x<2000005;x+=i) {\n\t\t\t    d[x].push_back(i);\n\t\t\t\tp[x]=1;\n\t\t\t}\n\n\tvector<int> used(2000005, false);\n\n\tauto ok = [&d, &used](int num) -> bool{\n\t\tfor (auto i: d[num])\n\t\t\tif (used[i])\n\t\t\t\treturn false;\n\t\treturn true;\n\t};\n\n\tint n; cin >> n;\n\n\tint curr = 2;\n\tint check = 0;\n\n\tfor (int i = 0; i < n; ++i){\n\n\t\tint a; cin >> a;\n\n\n\t\tif (ok(a) and !check){\n\t\t\tcout << a << \" \";\n\n\t\t\tfor (auto div: d[a])\n\t\t\t\tused[div] = 1;\n\t\t}\n\n\t\telse {\n\t\t\tif (!check){\n\t\t\t\twhile (!ok(a)){\n\t\t\t\t\ta++;\n\t\t\t\t}\n\n\t\t\t\tcout << a << \" \";\n\n\t\t\t\tfor (auto div: d[a])\n\t\t\t\t\tused[div] = 1;\n\n\t\t\t\tcheck++;\n\t\t\t}\n\n\t\t\telse {\n\n\n\t\t\t\twhile (!ok(curr))\n\t\t\t\t\tcurr++;\n\n\t\t\t\tcout << curr << \" \";\n\n\t\t\t\tfor (auto div: d[curr])\n\t\t\t\t\tused[div] = 1;\n\t\t\t}\n\t\t}\n\t}\n\n\n}"
}