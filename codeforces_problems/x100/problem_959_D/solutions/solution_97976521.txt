{
    "id": 97976521,
    "contestId": 959,
    "creationTimeSeconds": 1604913469,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "Igor_2017"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 13926400,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <sstream>\r\n#include <algorithm>\r\n#include <iomanip>\r\n#include <cmath>\r\n#include <ctime>\r\n#include <cstdlib>\r\n#include <set>\r\n#include <map>\r\n#include <vector>\r\n#include <queue>\r\n#include <iterator>\r\n\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\n#define x0 abc\r\n#define y0 ABC\r\n#define x1 abcd\r\n#define y1 ABCD\r\n#define xn abcde\r\n#define yn ABCDE\r\n\r\n#define l_b lower_bound\r\n#define u_b upper_bound\r\n\r\n#define in insert\r\n#define er erase\r\n\r\n#define fi first\r\n#define se second\r\n#define m_p make_pair\r\n\r\n#define p_b push_back\r\n#define po_b pop_back\r\n\r\n#define uns unsigned\r\n\r\n#define ld long double\r\n#define ll long long\r\n\r\n#define cont continue\r\n#define re return\r\n\r\n#define MAXLL 9000000000000000000LL\r\n#define MAXINT 2000000000\r\n\r\n#define MINLL -9000000000000000000LL\r\n#define MININT -2000000000\r\n\r\n#define pi acos(-1.)\r\n\r\n#define endl '\\n'\r\n\r\n#define OUT cout << \"-------\" << endl;\r\n\r\nusing namespace std;\r\n\r\nusing namespace __gnu_pbds;\r\n\r\ntypedef tree <int, null_type, less <int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\r\n\r\nvector <int> v[250001];\r\n\r\nint a[120001], n, i, j, k, val, nom;\r\n\r\nbool pole[2500001], pole1[2500001], x;\r\n\r\nint main()\r\n{\r\n    //freopen(\"input.txt\", \"r\", stdin);\r\n    //freopen(\"output.txt\", \"w\", stdout);\r\n\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n\r\n    for (i = 2; i <= 200000; i++)\r\n        if (v[i].empty()) {\r\n            for (j = i; j <= 200000; j += i) v[j].p_b(i);\r\n        }\r\n\r\n    for (i = 2; i <= 1500000; i++) {\r\n        if (pole[i])\r\n        cont;\r\n\r\n        pole1[i] = true;\r\n\r\n        for (j = i; j <= 1500000; j += i) pole[j] = true;\r\n    }\r\n\r\n    for (i = 1; i <= 1500000; i++) pole[i] = false;\r\n\r\n    cin >> n;\r\n\r\n    for (i = 1; i <= n; i++) {\r\n        cin >> a[i];\r\n\r\n        x = false;\r\n\r\n        for (j = 0; j < v[a[i]].size(); j++) x |= pole[v[a[i]][j]];\r\n\r\n        if (!x) {\r\n            for (j = 0; j < v[a[i]].size(); j++) pole[v[a[i]][j]] = true;\r\n\r\n            cont;\r\n        }\r\n\r\n        val = a[i];\r\n\r\n        x = true;\r\n\r\n        while (x) {\r\n            val++;\r\n\r\n            x = false;\r\n\r\n            for (j = 0; j < v[val].size(); j++) x |= pole[v[val][j]];\r\n        }\r\n\r\n        a[i] = val;\r\n\r\n        for (j = 0; j < v[val].size(); j++) pole[v[val][j]] = true;\r\n\r\n        nom = i + 1;\r\n\r\n        for (j = 2; j <= 1500000; j++) {\r\n            if (nom == n + 1)\r\n            break;\r\n\r\n            if (pole1[j] && !pole[j]) {\r\n                a[nom] = j;\r\n\r\n                nom++;\r\n            }\r\n        }\r\n\r\n        break;\r\n    }\r\n\r\n    for (i = 1; i <= n; i++) cout << a[i] << \" \";\r\n\r\n    cout << endl;\r\n\r\n    re 0;\r\n}\r\n"
}