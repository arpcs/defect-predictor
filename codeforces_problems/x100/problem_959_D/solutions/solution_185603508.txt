{
    "id": 185603508,
    "contestId": 959,
    "creationTimeSeconds": 1671268153,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "iliaaaaa"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 19251200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nusing ll = long long;\r\n\r\nconst int N = 253009 + 7;\r\nll n, a[N], d[N];\r\nvector<int> s[N];\r\nset<int> p, sp;\r\n\r\n\r\nbool check(int x) {\r\n\tfor (auto i : s[x])\r\n\t\tif (p.find(i) != p.end())\r\n\t\t\treturn false;\r\n\treturn true;\r\n}\r\n\r\nint main() {\r\n\tfor (ll i = 2; i * i <= N - 7; i++)\r\n\t\tif (!d[i])\r\n\t\t\tfor (ll j = i * i; j <= N - 7; j += i)\r\n\t\t\t\tif (!d[j])\r\n\t\t\t\t\td[j] = i;\r\n\tfor (int i = 2; i <= N - 7; i++)\r\n\t\tif (!d[i])\r\n\t\t\td[i] = i, sp.insert(i);\r\n\tfor (int i = 2; i <= N - 7; i++) {\r\n\t\tint x = i;\r\n\t\twhile (x != 1)\r\n\t\t\ts[i].push_back(d[x]), x /= d[x];\r\n\t}\r\n\tbool b = false;\r\n\tcin >> n;\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tcin >> a[i];\r\n\t\tif (b && check(a[i])) {\r\n\t\t\tll x = *sp.begin();\r\n\t\t\tll y = x;\r\n\t\t\twhile ((!check(y)))\r\n\t\t\t\ty += x;\r\n\t\t\tif (check(a[i]) && y < a[i]) {\r\n\t\t\t\tfor (auto j : s[y])\r\n\t\t\t\t\tp.insert(j), sp.erase(j);\r\n\t\t\t\ta[i] = y;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (check(a[i])) {\r\n\t\t\tfor (auto j : s[a[i]])\r\n\t\t\t\tp.insert(j), sp.erase(j);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!b) {\r\n\t\t\t\tll x = *sp.begin();\r\n\t\t\t\tll y = x;\r\n\t\t\t\twhile ((!check(y) || (check(y) && y < a[i])))\r\n\t\t\t\t\ty += x;\r\n\t\t\t\ta[i] = y;\r\n\t\t\t\tb = true;\r\n\t\t\t\tfor (auto j : s[y])\r\n\t\t\t\t\tp.insert(j), sp.erase(j);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tll x = *sp.begin();\r\n\t\t\t\tll y = x;\r\n\t\t\t\twhile (!check(y))\r\n\t\t\t\t\ty += x;\r\n\t\t\t\tfor (auto j : s[y])\r\n\t\t\t\t\tp.insert(j), sp.erase(j);\r\n\t\t\t\ta[i] = y;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (auto j : s[a[i]])\r\n\t\t\tp.insert(j);\r\n\t}\r\n\tfor (int i = 0; i < n; i++)\r\n\t\tcout << a[i] << ' ';\r\n}\r\n"
}