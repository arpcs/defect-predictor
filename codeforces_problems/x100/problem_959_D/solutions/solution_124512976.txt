{
    "id": 124512976,
    "contestId": 959,
    "creationTimeSeconds": 1627825027,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "piddddgy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 1388,
    "memoryConsumedBytes": 216883200,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n#define int long long\r\n#define watch(x) cerr << (#x) << \" is \" << (x) << endl;\r\n#define endl '\\n'\r\n#define all(x) (x).begin(), (x).end()\r\n#define sz(a) (int)(a).size()\r\n#define pii pair<int, int>\r\n#define fi first\r\n#define se second\r\n// #define cerr cout\r\n#define cerr if(false) cerr\r\n\r\nconst int maxn = 100500;\r\nconst int maxv = (int)2e6+500;\r\nint n;\r\nint a[maxn];\r\n\r\nset<int> S;\r\nint spf[maxv];\r\nvector<int> G[maxv];\r\nbool vis[maxv];\r\n\r\nint ans[maxn];\r\nbool ree[maxn];\r\n\r\nsigned main() {\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n\r\n    cin >> n;\r\n    for(int i = 1; i <= n; i++) {\r\n        cin >> a[i];\r\n    }\r\n\r\n    for(int i = 0; i < 2e6+500; i++) spf[i] = i;\r\n\r\n    for(int i = 2; i <= 2e6; i++) {\r\n        if(spf[i] == i) {\r\n            for(int j = i*i; j <= 2e6; j += i) {\r\n                if(spf[j] == j) spf[j] = i;\r\n\r\n                G[i].emplace_back(j);\r\n            }\r\n        }\r\n    }\r\n\r\n    for(int i = 2; i <= 2e6; i++) S.emplace(i);\r\n\r\n    watch(spf[4])\r\n    bool f = false;\r\n    for(int i = 1; i <= n; i++) {\r\n        if(f) {\r\n            ans[i] = *S.begin();\r\n            S.erase(ans[i]);\r\n        } else if(vis[a[i]]) {\r\n            ans[i] = *S.lower_bound(a[i]);\r\n            S.erase(ans[i]);\r\n        } else {\r\n            ans[i] = a[i];\r\n        }\r\n\r\n        cerr << \"set \" << i << \" to \" << ans[i] << endl;\r\n        set<int> fac;\r\n        int x = ans[i];\r\n        while(x != 1) {\r\n            watch(spf[x])\r\n            fac.emplace(spf[x]);\r\n            x /= spf[x];\r\n        }\r\n\r\n        for(int f: fac) {\r\n            if(ree[f]) continue;\r\n            ree[f] = true;\r\n            vis[f] = true;\r\n            if(S.count(f)) S.erase(f);\r\n            for(int adj: G[f]) {\r\n                vis[adj] = true;\r\n                if(S.count(adj)) S.erase(adj);\r\n            }\r\n        }\r\n\r\n        vis[ans[i]] = true;\r\n        if(ans[i] > a[i]) f = true;\r\n    }\r\n\r\n    for(int i = 1; i <= n; i++) {\r\n        cout << ans[i] << \" \";\r\n    }\r\n    cout << endl;\r\n}\r\n"
}