{
    "id": 151630120,
    "contestId": 959,
    "creationTimeSeconds": 1648791812,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "WaterSL"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 25088000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nnamespace IO {\r\n\t#if ONLINE_JUDGE\r\n\t#define getc() (IS == IT && (IT = (IS = ibuf) + fread(ibuf, 1, IL, stdin), IS == IT) ? EOF : *IS++)\r\n\t#else\r\n\t#define getc() getchar()\r\n\t#endif\r\n\tconst int IL = 1 << 21, OL = 1 << 21;\r\n\tint olen = 0; \r\n\tchar ibuf[IL], *IS = ibuf, *IT = ibuf, obuf[OL];\r\n\tinline int read() {\r\n\t\tregister char ch = getc(); register int x = 0, f = 1;\r\n\t\twhile(!isdigit(ch)) { if(ch == '-') f = -1; ch = getc(); }\r\n\t\twhile(isdigit(ch)) x = x * 10 + ch - 48, ch = getc();\r\n\t\treturn x * f;\r\n\t}\r\n\tinline int readstr(char *s) {\r\n\t\tregister char ch = getc(); register int len = 0;\r\n\t\twhile(!isalpha(ch)) ch = getc();\r\n\t\twhile(isalpha(ch)) s[++len] = ch, ch = getc();\r\n\t\treturn len;\r\n\t}\r\n\tinline void flush() { fwrite(obuf, 1, olen, stdout); olen = 0; }\r\n\tinline void putc(register char ch) { obuf[olen++] = ch; }\r\n\ttemplate<class T>\r\n\tinline void write(register T x) {\r\n\t\tif(x < 0) obuf[olen++] = '-', x = -x;\r\n\t\tif(x > 9) write(x / 10);\r\n\t\tobuf[olen++] = x % 10 + 48;\r\n\t}\r\n} using namespace IO;\r\nconst int N = 1e5 + 10, M = 2e6 + 10;\r\nint n, a[N], b[N];\r\nint prime[M], mn[M], cnt;\r\nbool isp[M], used[M];\r\nvoid sieve(int n) {\r\n\tfor(int i = 2; i <= n; i++) {\r\n\t\tif(!isp[i]) prime[++cnt] = i, mn[i] = i;\r\n\t\tfor(int j = 1; j <= cnt && prime[j] * i <= n; j++) {\r\n\t\t\tisp[prime[j] * i] = 1;\r\n\t\t\tmn[prime[j] * i] = prime[j];\r\n\t\t\tif(!(i % prime[j])) break;\r\n\t\t}\r\n\t}\r\n}\r\nint main() {\r\n\tsieve(2e6);\r\n\tn = read();\r\n\tfor(int i = 1; i <= n; i++)\r\n\t\ta[i] = read();\r\n\tfor(int i = 1; i <= n; i++) {\r\n\t\tint s = a[i];\r\n\t\tbool flg = 0;\r\n\t\twhile(s > 1) {\r\n\t\t\tif(!used[mn[s]]) used[mn[s]] = 1;\r\n\t\t\telse { flg = 1; break; }\r\n\t\t\tint mns = mn[s];\r\n\t\t\twhile(!(s % mns)) s /= mns;\r\n\t\t}\r\n\t\tif(!flg) b[i] = a[i];\r\n\t\telse {\r\n\t\t\tint j;\r\n\t\t\tfor(j = a[i] + 1; ; j++) {\r\n\t\t\t\ts = j, flg = 0;\r\n\t\t\t\twhile(s > 1) {\r\n\t\t\t\t\tif(used[mn[s]]) { flg = 1; break; }\r\n\t\t\t\t\tint mns = mn[s];\r\n\t\t\t\t\twhile(!(s % mns)) s /= mns;\r\n\t\t\t\t}\r\n\t\t\t\tif(flg) continue;\r\n\t\t\t\telse {\r\n\t\t\t\t\tb[i] = s = j, flg = 0;\r\n\t\t\t\t\twhile(s > 1) {\r\n\t\t\t\t\t\tused[mn[s]] = 1;\r\n\t\t\t\t\t\tint mns = mn[s];\r\n\t\t\t\t\t\twhile(!(s % mns)) s /= mns;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t\tfor(int j = 1; j <= cnt && i <= n; j++) {\r\n\t\t\t\tif(used[prime[j]]) continue;\r\n\t\t\t\tb[i++] = prime[j];\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tfor(int i = 1; i <= n; i++)\r\n\t\twrite(b[i]), putc(' ');\r\n\tflush();\r\n\treturn 0;\r\n}"
}