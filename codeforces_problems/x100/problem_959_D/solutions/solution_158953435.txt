{
    "id": 158953435,
    "contestId": 959,
    "creationTimeSeconds": 1653988219,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "sharmaharisam"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 35328000,
    "source": "//****************************Template Begins****************************//\r\n\r\n// Header Files\r\n#include<iostream>\r\n#include<iomanip>\r\n#include<algorithm>\r\n#include<vector>\r\n#include<utility>\r\n#include<set>\r\n#include<unordered_set>\r\n#include<list>\r\n#include<iterator>\r\n#include<deque>\r\n#include<queue>\r\n#include<stack>\r\n#include<set>\r\n#include<bitset>\r\n#include<random>\r\n#include<map>\r\n#include<unordered_map>\r\n#include<stdio.h>\r\n#include<complex>\r\n#include<math.h>\r\n#include<cstring>\r\n#include<chrono>\r\n#include<string>\r\n#include \"ext/pb_ds/assoc_container.hpp\"\r\n#include \"ext/pb_ds/tree_policy.hpp\"\r\n// Header Files End\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\ntemplate<class T>\r\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update> ;\r\n\r\ntemplate<class key, class value, class cmp = std::less<key>>\r\nusing ordered_map = tree<key, value, cmp, rb_tree_tag, tree_order_statistics_node_update>;\r\n// find_by_order(k)  returns iterator to kth element starting from 0;\r\n// order_of_key(k) returns count of elements strictly smaller than k;\r\n\r\n#define DIVYA ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\r\n#define ll long long\r\n#define umap unordered_map\r\n#define uset unordered_set\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define fo(i,a,b) for(i=a;i<=b;i++)\r\n#define all(v) (v).begin(),(v).end()\r\n#define all1(v) (v).begin()+1,(v).end()\r\n#define allr(v) (v).rbegin(),(v).rend()\r\n#define allr1(v) (v).rbegin()+1,(v).rend()\r\n#define sort0(v) sort(all(v))\r\ntypedef pair<int, int> pii;\r\ntypedef vector<int> vi;\r\ntypedef vector<ll> vll;\r\ntypedef pair<ll, ll> pll;\r\n#define sz(x) (ll)x.size()\r\n#define pb push_back\r\n#define ppb pop_back\r\n#define mkp make_pair\r\n#define inf 1000000000000000005\r\nconst ll mod = 1e9 + 7;\r\n\r\nll inv(ll i) {if (i == 1) return 1; return (mod - ((mod / i) * inv(mod % i)) % mod) % mod;}\r\n\r\nll mod_mul(ll a, ll b) {a = a % mod; b = b % mod; return (((a * b) % mod) + mod) % mod;}\r\n\r\nll mod_add(ll a, ll b) {a = a % mod; b = b % mod; return (((a + b) % mod) + mod) % mod;}\r\n\r\nll gcd(ll a, ll b) { if (b == 0) return a; return gcd(b, a % b);}\r\n\r\nll ceil_div(ll a, ll b) {return a % b == 0 ? a / b : a / b + 1;}\r\n\r\nll pwr(ll a, ll b) {a %= mod; ll res = 1; while (b > 0) {if (b & 1) res = res * a % mod; a = a * a % mod; b >>= 1;} return res;}\r\n//****************************Template Ends*******************************//\r\n// don't forget to call the sieve function\r\nll N = 3000005;\r\nvll spf(N + 1, 1);\r\nset<ll> primes;\r\nvoid sieve()\r\n{\r\n    ll i, j;\r\n    fo(i, 2, N)\r\n    {\r\n        if (spf[i] == 1)\r\n        {\r\n            spf[i] = i;\r\n            primes.insert(i);\r\n            for (j = i * i; j <= N; j += i)\r\n            {\r\n                if (spf[j] == 1)spf[j] = i;\r\n            }\r\n        }\r\n    }\r\n}\r\nmap<ll, ll>factorize(ll n)\r\n{\r\n    map<ll, ll>ans;\r\n    while (n > 1)\r\n    {\r\n        ll fact = spf[n];\r\n        ll cnt = 0;\r\n        while (n % fact == 0)\r\n        {\r\n            cnt++;\r\n            n /= fact;\r\n        }\r\n        ans[fact] = cnt;\r\n    }\r\n    return ans;\r\n}\r\n\r\nint main() {\r\n    DIVYA;\r\n    ll t, n, i, j, ans, temp, sum;\r\n    string sans;\r\n    t = 1;\r\n    // cin >> t;\r\n    sieve();\r\n    while (t--)\r\n    {\r\n        sans = \"NO\";\r\n        ans = temp = sum = 0;\r\n        cin >> n;\r\n        vll a(n+1,0);\r\n        fo(i,1,n)\r\n        {\r\n            cin>>a[i];\r\n        }\r\n        ll idx = n+1;\r\n        fo(i,1,n)\r\n        {\r\n            bool ok = true;\r\n            map<ll,ll>factors = factorize(a[i]);\r\n            for(auto x : factors)\r\n            {\r\n                ll f = x.first;\r\n                if(primes.count(f) == 0)\r\n                {\r\n                    ok = false;\r\n                    idx = i;\r\n                    break;\r\n                }\r\n            }\r\n            if(ok)\r\n            {\r\n                for(auto x : factors)\r\n                {\r\n                    primes.erase(x.first);\r\n                }\r\n            }\r\n            else break;\r\n        }\r\n        if(idx<=n)\r\n        {\r\n            for(i = a[idx]+1; ; i++)\r\n            {\r\n                bool ok = true;\r\n                map<ll,ll>factors = factorize(i);\r\n                for(auto x : factors)\r\n                {\r\n                    if(primes.count(x.first) == 0)\r\n                    {\r\n                        ok = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if(ok)\r\n                {\r\n                    a[idx] = i;\r\n                    for(auto x : factors)\r\n                    {\r\n                        primes.erase(x.first);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            \r\n        }\r\n        fo(i,idx+1,n)\r\n        {\r\n            if(sz(primes) == 0)\r\n            {\r\n                cout<<\"what just happened?\\n\";\r\n                exit(0);\r\n            }\r\n            auto it = primes.begin();\r\n            a[i] = *it;\r\n            primes.erase(it);\r\n        }\r\n        fo(i,1,n)cout<<a[i]<<\" \";\r\n    }\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
}