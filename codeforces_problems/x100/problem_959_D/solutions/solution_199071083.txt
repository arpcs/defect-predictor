{
    "id": 199071083,
    "contestId": 959,
    "creationTimeSeconds": 1679736170,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "zyzzsama"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 61,
    "memoryConsumedBytes": 11059200,
    "source": "//#pragma GCC target (\"avx2\")\r\n// #pragma GCC optimization (\"O3\")\r\n//#pragma GCC optimization (\"unroll-loops\")\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\n#define pb push_back\r\n#define ff first\r\n#define ss second\r\n#define INF 6223372004895760000\r\n#define NIL 0\r\n#define int ll\r\n// #define ll int\r\n#define debug cout << \"here\\n\";\r\nusing vll=vector<ll>;\r\nusing vi=vector<int>;\r\nusing vpl = vector<pair<ll, ll>>;\r\nusing pll = pair<ll, ll>;\r\nll mod = 1000000007;\r\nll mod2 = 998244353;\r\nll MOD = mod;\r\nll tcnt = 1;\r\n#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\r\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\r\nconst int MAXN = 200005;\r\nll ipow(ll base, ll k, ll M) {\r\n    base %= M;\r\n    k = k % (M - 1);\r\n    ll total = 1;\r\n    while(k) {\r\n        if(k & 1) {\r\n            total = (total * base) % M;\r\n        }\r\n        base = (base * base) % M;\r\n        k >>= 1;\r\n    }\r\n    return total;\r\n}\r\n\r\nll modu(ll a,ll b) {\r\n  ll c = a % b;\r\n  return (c < 0) ? c + b : c;\r\n}\r\ninline uint64_t modpow(uint64_t base, uint64_t exp, uint64_t modulus) {\r\n    base %= modulus;\r\n    uint64_t result = 1;\r\n    while (exp > 0) {\r\n        if (exp & 1) result = (result * base) % modulus;\r\n        base = (base * base) % modulus;\r\n        exp >>= 1;\r\n    }\r\n    return result;\r\n}\r\n \r\ninline uint64_t modinv(uint64_t x, uint64_t mod) {\r\n    return modpow(x, mod - 2, mod);\r\n}\r\n \r\nuint64_t fak[MAXN];\r\n \r\nvoid precomp() {\r\n    fak[0] = fak[1] = 1;\r\n    for (int i = 2; i < MAXN; i++) {\r\n        fak[i] = i*fak[i - 1];\r\n        fak[i] %= MOD;\r\n    }\r\n}\r\n \r\ninline uint64_t nCr(uint64_t n, uint64_t r) {\r\n    uint64_t res = fak[n] * modinv(fak[r], MOD);\r\n    res %= MOD; \r\n    res *= modinv(fak[n - r], MOD);\r\n    res %= MOD;\r\n    return res;\r\n}\r\n\r\nll intlen(ll n) {\r\n    ll cnt = 0;\r\n    while(n) {\r\n        n /= 10;\r\n        cnt++;\r\n    }\r\n    return cnt;\r\n}\r\nll sieve[1000001];\r\nvoid solve(){\r\n    ll n;\r\n    cin >> n;\r\n    ll a[n];\r\n    memset(sieve, 0, sizeof(sieve));\r\n    for(ll i=0; i<n; i++)cin >> a[i];\r\n    map<ll, ll> mp;\r\n    for(ll i=0; i<n; i++){\r\n        ll ok = 1;\r\n        ll num = a[i];\r\n        for(ll j = 2; j*j<=num; j++){\r\n            if(num%j==0){\r\n                ll cnt = 0;\r\n                while(num%j==0){\r\n                    num /= j;\r\n                    cnt++;\r\n                }\r\n                if(mp[j] > 0){\r\n                    ok = 0;\r\n                    break;\r\n                }\r\n                else mp[j] = 1;\r\n            }\r\n        }\r\n        if(num>1){\r\n            if(mp[num] > 0){\r\n                ok= 0;\r\n            }\r\n            else mp[num] = 1;\r\n        }\r\n        if(!ok){\r\n            for(auto &x: mp){\r\n                for(ll j = x.ff; j<=1000000; j+=x.ff){\r\n                    sieve[j] = 1;\r\n                }\r\n            }\r\n            ll ind = 2;\r\n            for(ll j = i; j<n; j++){\r\n                while(sieve[ind] != 0)ind++;\r\n                a[j] = ind;\r\n                sieve[ind] = 1;\r\n                for(ll k = ind; k<=1000000; k+=ind){\r\n                    sieve[k] = 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    for(ll i=0; i<n; i++)cout << a[i] << \" \" ;\r\n    cout << \"\\n\";\r\n}\r\n\r\nsigned main(){\r\n    // precomp();\r\n    fast\r\n    // #ifndef ONLINE_JUDGE\r\n    // freopen(\"in.txt\",\"r\",stdin);\r\n    // freopen(\"out.txt\",\"w\",stdout);\r\n    // #endif\r\n    ll tc = 1, cnt = 1;\r\n    // cin >> tc;\r\n    // cout << \"\\n\";\r\n    while(tc--){\r\n        // cout << \"Case #\" << cnt++ << \": \";\r\n        solve();\r\n    }\r\n}"
}