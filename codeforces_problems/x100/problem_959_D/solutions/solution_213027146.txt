{
    "id": 213027146,
    "contestId": 959,
    "creationTimeSeconds": 1688937968,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "tomas_fang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n#define MP make_pair\n#define PB push_back\n#define X first\n#define Y second\nusing namespace std;\n\nconst int MAXN = 2000010;\nconst int MAXN_SQRT = 1414;\n\nint a[100010];\nint idx[MAXN];\nbitset<MAXN> sieve;\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  \n  long long n;\n  memset(idx, 0, sizeof(idx));\n  cin >> n;\n  \n  for (int i = 0; i < n; i++)\n    cin >> a[i];\n  \n  sieve.set();\n  \n  for (int i = 2; i < MAXN_SQRT; i++) {\n    if (!sieve[i])\n      continue;\n      \n    for (int j = i * i; j < MAXN; j += i)\n      sieve[j] = false;\n  }\n  \n  int F = 0;\n  int nxt = 0;\n  idx[1] = 1;\n  \n  for (int i = 0; i < n; i++) {\n    if (F == 0)\n      nxt = *sieve.lower_bound(a[i]);\n    else\n      nxt = 2;\n      \n    if (nxt > a[i])\n      F = 1;\n      \n    cout << nxt << \" \";\n    \n    for (int j = 1; j * j <= nxt; j++) {\n      if (nxt % j != 0)\n        continue;\n        \n      for (int k = j; k < MAXN && idx[j] != 1; k += j) {\n        if (sieve[k])\n          sieve[k] = false;\n      }\n      \n      int other = nxt / j;\n      \n      if (other != j) {\n        for (int k = other; k < MAXN && idx[other] != 1; k += other) {\n          if (sieve[k])\n            sieve[k] = false;\n        }\n      }\n      \n      idx[j] = idx[other] = 1;\n    }\n  }\n  \n  return 0;\n}\n// JiICSaQRLrdPzPxksFwEZKFicFeEUUTmbLFJGgQjreNTiOjzLSBgltHapBySNENPudJQQkdGaNHmzwgBgkLWuqmmdnYlmddVYaAAWyNRZgutLGONBsdPnFkUoVopnbHG"
}