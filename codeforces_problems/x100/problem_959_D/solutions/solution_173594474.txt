{
    "id": 173594474,
    "contestId": 959,
    "creationTimeSeconds": 1664204207,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "Y_B_X"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 146329600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=5e5+10;\r\nconst int M=2e6+10;\r\nconst int NN=320;\r\nint n,m,x,y,v,mxv;\r\nstruct Exact_division{\r\n\tunsigned p,invp,lim;\r\n\tExact_division()=default;\r\n\tExact_division(unsigned _p):p(_p){\r\n\t\tinvp=p*(2-p*p);\r\n\t\tinvp=invp*(2-p*invp);\r\n\t\tinvp=invp*(2-p*invp);\r\n\t\tinvp=invp*(2-p*invp);\r\n\t\tlim=(-1u)/p;\r\n\t}\r\n\tinline bool multiple(unsigned x)const{return invp*x<lim;}\r\n\tinline unsigned divide(unsigned x)const{return invp*x;}\r\n};\r\nint a[N];bool b[2000005];\r\nint p[N],prm,pp[N],pprm;\r\nstruct Prime{\r\n\tint p[NN],prm;\r\n\tbool b[NN<<1];\r\n\tExact_division D[NN];\r\n\tinline void pre_work(int N){\r\n\t\tint i,j,k;\r\n\t\tfor(i=2;i<=N;++i){\r\n\t\t\tif(!b[i]){\r\n\t\t\t\tp[++prm]=i;\r\n\t\t\t\tif(i&1)D[prm]=Exact_division(i);\r\n\t\t\t}\r\n\t\t\tb[i<<1]=1;if(!(i&1))continue;\r\n\t\t\tfor(j=2;j<=prm&&(k=i*p[j])<=N;++j){\r\n\t\t\t\tb[k]=1;\r\n\t\t\t\tif(D[j].multiple(i))break;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}P;\r\nint cnt=0;\r\ninline void insert(int p){\r\n\tif(!b[p]){for(int i=p;i<=mxv;i+=p)b[i]=1;}\r\n}\r\nstruct Prime2{\r\n\tint p[M],prm;\r\n\tint pp[M][15],npp[M];\r\n\tbool b[M];\r\n\tvoid pre_work(int N){\r\n\t\tint i,j,k;\r\n\t\tfor(i=2;i<=N;++i){\r\n\t\t\tif(!b[i])p[++prm]=i,pp[i][npp[i]=1]=i;\r\n\t\t\tfor(j=1;j<=prm&&(k=i*p[j])<=N;++j){\r\n\t\t\t\tb[k]=1;\r\n\t\t\t\tif(i%p[j]==0)break;\r\n\t\t\t\tmemcpy(pp[k]+1,pp[i]+1,npp[i]<<2);\r\n\t\t\t\tnpp[k]=npp[i];pp[k][++npp[k]]=p[j];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tinline void insert_P(int x){\r\n//\t\tfor(int i=1;i<=npp[x];++i)pp[x][i];\r\n\t\tfor(int i=1;i<=npp[x];++i)insert(pp[x][i]);\r\n\t}\r\n}P2;\r\nchar ch;\r\ninline void read(int &x){\r\n\tx=0;ch=getchar();while(ch<48)ch=getchar();\r\n\twhile(ch>47)x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\r\n}\r\nvoid write(int x){if(x>9)write(x/10);putchar(48|(x%10));}\r\nmain(){\r\n\tread(n);register int i,j,k;\r\n\tfor(i=1;i<=n;++i)read(a[i]),a[i]>mxv&&(mxv=a[i]);\r\n\tP.pre_work(sqrt(mxv));\r\n\tfor(i=1;i<=n;++i){\r\n\t\tx=a[i];pprm=0;\r\n\t\tif(!(x&1)){\r\n\t\t\tdo{x>>=1;}while(!(x&1));\r\n\t\t\tif(b[2])break;\r\n\t\t\tb[2]=1;pp[++pprm]=2;\r\n\t\t}\r\n\t\tfor(j=2;j<=P.prm&&P.p[j]*P.p[j]<=x;++j)\r\n\t\t\tif(P.D[j].multiple(x)){\r\n\t\t\t\tif(b[P.p[j]])break;\r\n\t\t\t\tpp[++pprm]=P.p[j];\r\n\t\t\t\tdo{x=P.D[j].divide(x);}\r\n\t\t\t\t\twhile(P.D[j].multiple(x));\r\n\t\t\t}\r\n\t\tif(x!=1){\r\n\t\t\tif(b[x])break;\r\n\t\t\tpp[++pprm]=x,b[x]=1;\r\n\t\t}\r\n\t\twrite(a[i]),putchar(' ');\r\n\t\tfor(j=1;j<=pprm;++j)p[++prm]=pp[j];\r\n\t}\r\n//\tfor(i=1;i<=prm;++i)printf(\"%d \",p[i]);puts(\"p\");\r\n\tif(i>n)return 0;\r\n\tn-=i-1;mxv*=20;x=a[i];\r\n\tfor(i=1;i<=prm;++i)insert(p[i]);\r\n//\tputs(\"\");\r\n//\tfor(i=1;i<=mxv;++i)printf(\"%d \",i);puts(\"\");\r\n//\tfor(i=1;i<=mxv;++i)printf(\"%d \",b[i]);puts(\"b\");\r\n\tfor(i=x+1;i;++i)if(!b[i]){\r\n\t\twrite(i),putchar(' ');break;\r\n\t}\r\n\tif(!(i&1)){\r\n\t\tdo{i>>=1;}while(!(i&1));\r\n\t\tinsert(2);\r\n\t}\r\n\tfor(j=2;j<=P.prm&&P.p[j]*P.p[j]<=i;++j)\r\n\t\tif(P.D[j].multiple(i)){\r\n\t\t\tif(b[P.p[j]])break;\r\n\t\t\tinsert(P.p[j]);\r\n\t\t\tdo{i=P.D[j].divide(i);}\r\n\t\t\t\twhile(P.D[j].multiple(i));\r\n\t\t}\r\n\tif(i!=1){for(k=i;k<=mxv;k+=i)b[k]=1;}\r\n\t--n;if(!n)return 0;\r\n\tP2.pre_work(mxv);\r\n\tfor(i=2;i;++i)if(!b[i]){\r\n\t\twrite(i),putchar(' ');\r\n\t\tP2.insert_P(i);\r\n\t\t--n;if(!n)break;\r\n\t}\r\n}"
}