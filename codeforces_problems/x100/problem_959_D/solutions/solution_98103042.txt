{
    "id": 98103042,
    "contestId": 959,
    "creationTimeSeconds": 1605074824,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "beedle"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 623,
    "memoryConsumedBytes": 34508800,
    "source": "#include <bits/stdc++.h>\r\n#define pi 3.141592653589793238\r\n#define ll long long\r\n#define ld long (long double)\r\n#define rep(i,a,b) for(long long i=a;i<=b;i++)\r\n#define mod 1000000007\r\n#define INF 1000000000000000\r\n#define pb push_back\r\n#define ff first\r\n#define ss second\r\n#define endl '\\n'\r\n#define all(x) (x).begin(),(x).end()\r\n#define sz(x) (ll)(x).size()\r\n#define rank rnk\r\n#define log lg\r\n#define fast ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\r\n \r\nusing namespace std;\r\n\r\n\r\nll gcd (ll a, ll b) {\r\n    if (b == 0)\r\n        return a;\r\n    else\r\n        return gcd (b, a % b);\r\n}\r\n\r\nint main()\r\n{\r\n    fast;\r\n    \r\n    \r\n    vector<char> is_prime(10000000+1, true);\r\n    is_prime[0] = is_prime[1] = false;\r\n    for (ll i = 2; i <= 10000000; i++) {\r\n    if (is_prime[i] && (long long)i * i <= 10000000) {\r\n        for (ll j = i * i; j <= 10000000; j += i)\r\n            is_prime[j] = false;\r\n    }\r\n    }\r\n    \r\n    set <int> primes;\r\n    rep(i,2,10000000)\r\n    if(is_prime[i])\r\n    primes.insert(i);\r\n    \r\n    //cout<<\"Enter the numbers:\";\r\n    ll n;\r\n    cin>>n;\r\n    ll arr[n+1];\r\n    rep(i,1,n)\r\n    cin>>arr[i];\r\n    \r\n    \r\n    \r\n    vector <ll> ans;\r\n    \r\n    \r\n    \r\n    ll idx;\r\n    \r\n    //cout<<\"Hello\"<<endl;\r\n    \r\n    for(idx=1;idx<=n;idx++)\r\n    {\r\n       \r\n        bool fac=false;\r\n        \r\n        rep(i,1,sqrt(arr[idx]))\r\n        if(arr[idx]%i==0)\r\n        {if(is_prime[i])\r\n        if(primes.find(i)==primes.end())\r\n         fac=true;\r\n         if(is_prime[arr[idx]/i])\r\n         if(primes.find(arr[idx]/i)==primes.end())\r\n         fac=true;\r\n        }\r\n        \r\n        if(fac)\r\n        break;\r\n        \r\n        for(int i=1;i<=sqrt(arr[idx]);i++)\r\n        if(arr[idx]%i==0)\r\n        {primes.erase(i);\r\n         primes.erase(arr[idx]/i);\r\n        }\r\n        \r\n        \r\n       \r\n      \r\n       ans.pb(arr[idx]);\r\n    }\r\n    \r\n    //cout<<\"Hello\"<<endl;\r\n    \r\n    if(idx!=n+1)\r\n    {ll val=arr[idx]+1;\r\n    \r\n      bool fac=true;\r\n    \r\n     while(fac!=false)\r\n     {\r\n          fac=false;\r\n        \r\n        rep(i,1,sqrt(val))\r\n        if(val%i==0)\r\n        {if(is_prime[i])\r\n         if(primes.find(i)==primes.end())\r\n         fac=true;\r\n         if(is_prime[val/i])\r\n         if(primes.find(val/i)==primes.end())\r\n         fac=true;\r\n        }\r\n         \r\n        val++; \r\n     }\r\n     \r\n     val--;\r\n     ans.pb(val);\r\n     \r\n     for(int i=1;i<=sqrt(val);i++)\r\n        if(val%i==0)\r\n        {primes.erase(i);\r\n         primes.erase(val/i);\r\n        }\r\n        \r\n    idx++;\r\n        \r\n    }\r\n    \r\n    while(idx!=n+1)\r\n    {\r\n        ans.pb(*primes.begin());\r\n        primes.erase(*primes.begin());\r\n        idx++;\r\n    }\r\n    \r\n    for(auto x:ans)\r\n    cout<<x<<\" \";\r\n    \r\n    \r\n    return 0;\r\n}\r\n"
}