{
    "id": 113135564,
    "contestId": 959,
    "creationTimeSeconds": 1618535245,
    "relativeTimeSeconds": 5845,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "maxcruickshanks"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1618529400
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 1232,
    "memoryConsumedBytes": 80691200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int MM = 1e6 + 5;\r\nbool P[MM];\r\nint n, A[MM], B[MM];\r\nset<int> primes;\r\nvector<int> d[MM];\r\n\r\nint main() {\r\n    cin.tie(0); cout.tie(0); ios::sync_with_stdio(0);\r\n    cin >> n;\r\n    for (int i = 1; i <= n; i++) cin >> A[i];\r\n    for (int i = 2; i < MM; i++) P[i] = true;\r\n    for (ll i = 2; i < MM; i++) {\r\n        primes.insert(i);\r\n        if (!P[i]) continue;\r\n        for (ll j = i; j < MM; j += i) d[j].push_back(i), P[j] = false;\r\n    }\r\n    bool done = false;\r\n    for (int i = 1; i <= n; i++) {\r\n        if (done) {\r\n            int nxt = *primes.begin();\r\n            B[i] = nxt, primes.erase(nxt);\r\n        }\r\n        else {\r\n            vector<int> fact = d[A[i]];\r\n            B[i] = A[i];\r\n            for (int fj : fact) {\r\n                if (!primes.count(fj)) {\r\n                    int nxt = *primes.lower_bound(A[i] + 1);\r\n                    B[i] = nxt, primes.erase(nxt), done = true; break;\r\n                }\r\n            }\r\n        }\r\n        for (int j : d[B[i]]) {\r\n            for (int k = j; k < MM; k += j) if (primes.count(k)) primes.erase(k);\r\n        }\r\n    }\r\n    for (int i = 1; i <= n; i++) cout << B[i] << ((i == n) ? \"\\n\" : \" \");\r\n}"
}