{
    "id": 231928745,
    "contestId": 959,
    "creationTimeSeconds": 1699443537,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "cylyyds123"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 1544,
    "memoryConsumedBytes": 172953600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\n\r\nconst ll N = 1e6+10;\r\nbool vis[N],er[N];\r\nvector<int>g[N];\r\nint a[N];\r\ninline void solve() {\r\n    set<int>s;\r\n    for(int i=2;i<N;i++){\r\n        if(!vis[i]){\r\n            for(int j=i;j<N;j+=i){\r\n                g[j].push_back(i);\r\n                vis[i]=1;\r\n            }\r\n        }\r\n        s.insert(i);\r\n    }\r\n    int n;\r\n    cin>>n;\r\n    bool flag=0;\r\n    for(int i=1;i<=n;i++){\r\n        int x;\r\n        cin>>x;\r\n        int ans=*s.begin();\r\n        if(!flag){\r\n            ans=*s.lower_bound(x);\r\n            if(ans!=x)flag=1;\r\n        }\r\n        cout<<ans<<\" \\n\"[i==n];\r\n        for(auto v:g[ans]){\r\n            for(int j=v;j<N;j+=v){\r\n                if(!er[j]){\r\n                    s.erase(j);\r\n                    er[j]=1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nint main() {\r\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n    int t = 1;\r\n    //cin >> t;\r\n    for (int i = 1; i <= t; i++) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n\r\n/*\r\n4\r\n1000 3\r\n1000 1\r\n1000 1\r\n0 2\r\n*/"
}