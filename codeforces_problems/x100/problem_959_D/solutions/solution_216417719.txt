{
    "id": 216417719,
    "contestId": 959,
    "creationTimeSeconds": 1690705849,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "tomas_fang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n#define MP make_pair\n#define PB push_back\n#define X first\n#define Y second\nusing namespace std;\nint a[100010];\nint maxn = 2000010;\nint idx[2000010];\nint main() {\n  long long n;\n  memset(idx, 0, sizeof(idx));\n  std::ios::sync_with_stdio(false);\n  cin >> n;\n  for (int i = 0; i < n; i++)\n    cin >> a[i];\n  set<int> S;\n  for (int i = 2; i < maxn; i++)\n    S.insert(i);\n  int F = 0;\n  int nxt = 0;\n  idx[1] = 1;\n  for (int i = 0; i < n; i++) {\n    if (F == 0)\n      nxt = *S.lower_bound(a[i]);\n    else\n      nxt = *S.begin();\n    if (nxt > a[i])\n      F = 1;\n    cout << nxt << \" \";\n    for (int j = 1; j * j <= nxt; j++)\n      if (nxt % j == 0) {\n        for (int k = j; k < maxn && idx[j] != 1; k += j)\n          if (S.count(k))\n            S.erase(k);\n        for (int k = nxt / j; k < maxn && idx[nxt / j] != 1; k += nxt / j)\n          if (S.count(k))\n            S.erase(k);\n        idx[j] = idx[nxt / j] = 1;\n     \n// vqIkujmhWJGJgOYfUIEANGRAhuXjJzgNzbvCMjJNIPjoKeoBLpodRsZuvDaRFaWwVTFRNXXqHCkUjaOHGHhVSpDESTHxdsOnkbIuqsKVhFENZuUASqpLKtxoNXhUJGXL"
}