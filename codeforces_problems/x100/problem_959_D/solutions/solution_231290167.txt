{
    "id": 231290167,
    "contestId": 959,
    "creationTimeSeconds": 1699081199,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "maks_simenkov"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 904,
    "memoryConsumedBytes": 5734400,
    "source": "#include <iostream>\r\n#include <string>\r\n#include <sstream>\r\n#include <vector>\r\n#include <set>\r\n#include <map>\r\n#include <cmath>\r\n#include <algorithm>\r\n#include <deque>\r\n#include <iomanip>\r\n\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\nusing ld = long double;\r\nusing vl = vector <long long>;\r\nusing vvl = vector <vector <long long>>;\r\n\r\n#define pb push_back\r\n#define all(a) a.begin(), a.end()\r\n#define srt(a) sort(a.begin(), a.end())\r\n#define rsrt(a) sort(a.rbegin(), a.rend())\r\n\r\ntemplate <typename T> istream &operator>> (istream &in, vector <T> &sp) {\r\n    for (auto &x : sp) {\r\n        in >> x;\r\n    }\r\n    return in;\r\n}\r\n\r\ntemplate <typename T> ostream &operator<< (ostream &out, const vector <T> &sp) {\r\n    for (auto &x : sp) {\r\n        out << x << ' ';\r\n    }\r\n    return out;\r\n}\r\n\r\ntemplate <typename T> ostream &operator<< (ostream &out, const set <T> &st) {\r\n    for (auto &x : st) {\r\n        out << x << ' ';\r\n    }\r\n    return out;\r\n}\r\n\r\ntemplate <typename T1, typename T2> ostream &operator<< (ostream &out, const map <T1, T2> &mp) {\r\n    for (auto &[k, v] : mp) {\r\n        out << k << ' ' << v << \"  \";\r\n    }\r\n    return out;\r\n}\r\n\r\ntemplate <typename T> ostream &operator<< (ostream &out, const deque <T> &dq) {\r\n    for (auto &x : dq) {\r\n        out << x << ' ';\r\n    }\r\n    return out;\r\n}\r\n\r\nconst ll mod = 1e9 + 7;\r\nconst ll inf = 1e18 + 1;\r\nconst ll ifn = -1e18 - 1;\r\n\r\nstruct el {\r\n    ll x, y;\r\n};\r\n\r\nbool operator< (const el &a, const el &b) {\r\n    if (a.x != b.x) {\r\n        return a.x < b.x;\r\n    }\r\n    return a.y < b.y;\r\n}\r\n\r\nistream &operator>> (istream &in, el &a) {\r\n    in >> a.x >> a.y;\r\n    return in;\r\n}\r\n\r\nostream &operator<< (ostream &out, const el &a) {\r\n    out << a.x << ' ' << a.y;\r\n    return out;\r\n}\r\n\r\nbool prost(ll x) {\r\n    for (ll i = 2; i <= sqrt(x); i++) {\r\n        if (x % i == 0) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nvoid solve() {\r\n    ll n;\r\n    cin >> n;\r\n    vl a(n);\r\n    cin >> a;\r\n    set <ll> st;\r\n    bool f = false;\r\n    ll sl = 1;\r\n    for (ll i = 0; i < n; i++) {\r\n        if (f) {\r\n            sl++;\r\n            while (true) {\r\n                while (!prost(sl)) {\r\n                    sl++;\r\n                }\r\n                if (st.find(sl) == st.end()) {\r\n                    break;\r\n                }\r\n                sl++;\r\n            }\r\n            cout << sl << ' ';\r\n            st.insert(sl);\r\n        }\r\n        else {\r\n            ll x = a[i];\r\n            bool ff = false;\r\n            ll t = 2;\r\n            while (t * t <= x) {\r\n                if (x % t == 0) {\r\n                    if (st.find(t) != st.end()) {\r\n                        ff = true;\r\n                        break;\r\n                    }\r\n                }\r\n                while (x % t == 0) {\r\n                    x /= t;\r\n                }\r\n                t++;\r\n            }\r\n            if (x != 1) {\r\n                if (st.find(x) != st.end()) {\r\n                    ff = true;\r\n                }\r\n            }\r\n            //cerr << ff << '\\n';\r\n            if (ff) {\r\n                f = true;\r\n                x = a[i] + 1;\r\n                while (true) {\r\n                    ff = true;\r\n                    ll c = x;\r\n                    t = 2;\r\n                    while (t * t <= c) {\r\n                        if (c % t == 0) {\r\n                            if (st.find(t) != st.end()) {\r\n                                ff = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                        while (c % t == 0) {\r\n                            c /= t;\r\n                        }\r\n                        t++;\r\n                    }\r\n                    if (c != 1) {\r\n                        if (st.find(c) != st.end()) {\r\n                            ff = false;\r\n                        }\r\n                    }\r\n                    if (ff) {\r\n                        break;\r\n                    }\r\n                    x++;\r\n                }\r\n                cout << x << ' ';\r\n                st.insert(x);\r\n            }\r\n            else {\r\n                cout << a[i] << ' ';\r\n                x = a[i];\r\n                t = 2;\r\n                while (t * t <= x) {\r\n                    if (x % t == 0) {\r\n                        st.insert(t);\r\n                    }\r\n                    while (x % t == 0) {\r\n                        x /= t;\r\n                    }\r\n                    t++;\r\n                }\r\n                if (x != 1) {\r\n                    st.insert(x);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    //cout << fixed << setprecision(20);\r\n    ll t = 1;\r\n    //cin >> t;\r\n    while (t--) {\r\n        solve();\r\n        cout << '\\n';\r\n    }\r\n}\r\n"
}