{
    "id": 108534670,
    "contestId": 959,
    "creationTimeSeconds": 1614340170,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "brthyyjp"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "PyPy 3",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 10240000,
    "source": "import math\n\nN = 10**5+50\nspf = [-1]*(N+1)\nfor i in range(N+1):\n    spf[i] = i\nfor i in range(2, int(math.sqrt(N))+1):\n    if spf[i] == i:\n        for j in range(i*2, N+1, i):\n            if spf[j] == j:\n                spf[j] = i\n\ndef factorize(n):\n    d = {}\n    while n != 1:\n        p = spf[n]\n        if p in d:\n            d[p] += 1\n        else:\n            d[p] = 1\n        n //= p\n    return d\n\nimport math\n\ndef sieve(n):\n    ass = []\n    is_prime = [True]*(n+1)\n    is_prime[0] = False\n    is_prime[1] = False\n\n    for i in range(2, int(math.sqrt(n))+1):\n        if not is_prime[i]:\n            continue\n        for j in range(i*2, n+1, i):\n            is_prime[j] = False\n    for i in range(n+1):\n        if is_prime[i]:\n            ass.append(i)\n    return(ass)\n\nS = sieve(2*10**5)\n\nn = int(input())\nA = list(map(int, input().split()))\nB = []\nflag = False\nfor a in A:\n    if flag:\n        B.append(T.pop())\n        continue\n    d = factorize(a)\n    for p in d.keys():\n        if not p in S:\n            break\n    else:\n        B.append(a)\n        for p in d.keys():\n            S.remove(p)\n        continue\n    for c in range(a+1, 2*10**5+1):\n        d = factorize(c)\n        for p in d.keys():\n            if not p in S:\n                break\n        else:\n            B.append(c)\n            for p in d.keys():\n                S.remove(p)\n            flag = True\n            T = list(S)\n            T.sort(reverse=True)\n            break\nprint(*B)\n"
}