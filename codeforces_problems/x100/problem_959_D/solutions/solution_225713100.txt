{
    "id": 225713100,
    "contestId": 959,
    "creationTimeSeconds": 1695936553,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "AhmdJabr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 296,
    "memoryConsumedBytes": 81612800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef vector<int> vi;\r\ntypedef pair<int, int> pii;\r\nconst int Max = 1e7, M = 1e5;\r\n\r\nvector<int> Prime(Max + 1, 1), chk(Max + 1, 0), arr(M), ans;  \r\n\r\nvoid Sieve(){\r\n    Prime[0] = Prime[1] = 0; \r\n\r\n    for(int i = 2; i * i <= Max; i++){\r\n        if (Prime[i]){\r\n            for(int j = i + i; j <= Max; j += i)\r\n                Prime[j] = 0; \r\n        }\r\n    }\r\n}\r\n\r\nbool Factorize(int k, int st = 1){\r\n    for(int i = 2; i * i <= k; i++){\r\n        int c = 0; \r\n\r\n        while(k % i == 0){\r\n            c++;\r\n            k /= i;\r\n        }\r\n\r\n        if (c){\r\n            if (chk[i])\r\n                return 0;\r\n\r\n            if (st)\r\n                chk[i] = 1;\r\n        }\r\n    }\r\n    if (k > 1)  {\r\n        if (chk[k])\r\n            return 0;\r\n\r\n        if (st)\r\n            chk[k] = 1;\r\n    }\r\n\r\n    return 1; \r\n\r\n}\r\n\r\nvoid Next(ll k){\r\n    for (ll j = k + 1; j <= Max; j++){\r\n        if (Factorize(j, 0)){\r\n            Factorize(j); \r\n            ans.push_back(j);\r\n            chk[j] = 1; \r\n            return; \r\n        }\r\n    }\r\n}\r\n\r\nvoid Solve()\r\n{\r\n    int n;\r\n    cin >> n; \r\n    \r\n    for (int i = 0; i < n; i++)\r\n        cin >> arr[i];\r\n    \r\n    ans.push_back(arr[0]); \r\n    Factorize(arr[0]); \r\n    Sieve(); \r\n    \r\n    for(ll i = 1; i < n; i++){\r\n        if (!Factorize(arr[i], 0)) {\r\n            Next(arr[i]);\r\n            break; \r\n        }\r\n        Factorize(arr[i]); \r\n        ans.push_back(arr[i]); \r\n    }\r\n\r\n    for(int i = 2; i <= Max && ans.size() < n; i++){\r\n        if (!chk[i] && Prime[i])\r\n            ans.push_back(i); \r\n    }\r\n\r\n    for(auto i: ans)\r\n        cout << i << ' ';\r\n    cout << endl; \r\n\r\n    \r\n}\r\nint main()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    int t = 1;\r\n    // cin >> t;\r\n    while(t--) \r\n        Solve();\r\n}"
}