{
    "id": 105096561,
    "contestId": 959,
    "creationTimeSeconds": 1611343038,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 959,
        "index": "D",
        "name": "Mahmoud and Ehab and another array construction task",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 959,
        "members": [
            {
                "handle": "Broken_dreams_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522771500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 140288000,
    "source": "#include <iostream>\r\n#include <cstring>\r\n\r\nusing namespace std;\r\n\r\nconst int N = 1e7 + 10;\r\n\r\nint a[N], prime[N], idx, temp[N], n;\r\n\r\nbool vis[N], st[N];\r\n\r\n\r\nint check (int x)\r\n{\r\n    int res = 0;\r\n    for (int i = x + 1; i < N; i ++)\r\n    {\r\n        bool flag = true;\r\n        int t = i;\r\n        for (int j = 2; j <= t / j; j ++)\r\n        {\r\n            if (t % j == 0) \r\n            {\r\n                if (st[j]) flag = false;\r\n                while (t % j == 0) t /= j;\r\n            }\r\n        }\r\n        if (t > 1 && st[t]) flag = false;\r\n        \r\n        \r\n        if (flag) \r\n        {\r\n            int res = i;\r\n            for (int j = 2; j <= i / j; j ++)\r\n            {\r\n                if (i % j == 0) \r\n                {\r\n                    st[j] = true;\r\n                    while (t % j == 0) t /= j;\r\n                }\r\n            }\r\n            if (i > 1) st[i] = true;\r\n            return res;\r\n        }\r\n    }\r\n}\r\n\r\nvoid solve (int pos)\r\n{\r\n    for (int i = 1; i < pos; i ++) printf (\"%d \", temp[i]);\r\n    // puts (\"\");\r\n    // for (int i = 2; i <= 7; i ++) printf (\"%d  \", st[i]);\r\n    // puts (\"\");\r\n    printf (\"%d \", check(a[pos]));\r\n    int res = 0;\r\n    for (int i = pos + 1; i <= n; i ++) \r\n    {\r\n        while (st[prime[res]]) res ++;\r\n        printf (\"%d \", prime[res ++]);\r\n    }\r\n    \r\n    return ;    \r\n}\r\n\r\nint main()\r\n{\r\n    scanf (\"%d\", &n);\r\n    for (int i = 1; i <= n; i ++) scanf (\"%d\", a + i);\r\n    memcpy (temp, a, sizeof a);\r\n    vis[1] = true;\r\n    for (int i = 2; i < N; i ++)\r\n    {\r\n        if (!vis[i])  prime[idx ++] = i;\r\n\r\n        for (int j = 0; i < N / prime[j]; j ++)\r\n        {\r\n            vis[i * prime[j]] = true;\r\n            if (i % prime[j] == 0) break; \r\n        }\r\n    }\r\n    \r\n    for (int i = 1; i <= n; i ++)\r\n    {\r\n        int ts = a[i];\r\n        for (int j = 2; j <= a[i] / j; j ++)\r\n        {\r\n            if (a[i] % j == 0) \r\n            {\r\n                if (st[j]) \r\n                {\r\n                    solve (i);\r\n                    return 0;\r\n                }\r\n                while (a[i] % j == 0) a[i] /= j;\r\n            }\r\n        }\r\n        if (a[i] > 1) \r\n        {\r\n            if (st[a[i]]) \r\n            {\r\n                solve(i);\r\n                return 0;\r\n            }\r\n            st[a[i]] = true;\r\n        }     \r\n        for (int j = 2; j <= ts / j; j ++)\r\n        {\r\n            if (ts % j == 0) \r\n            {\r\n                st[j] = true;\r\n                while (ts % j == 0) ts /= j;\r\n            }\r\n        }\r\n    }\r\n    \r\n    for (int i = 1; i <= n; i ++) printf (\"%d \", temp[i]);\r\n\r\n    \r\n    \r\n    return 0;\r\n}"
}