{
    "id": 115483159,
    "contestId": 1362,
    "creationTimeSeconds": 1620368844,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1362,
        "index": "A",
        "name": "Johnny and Ancient Computer",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1000,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 1362,
        "members": [
            {
                "handle": "dhruvil_8803"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1591281300
    },
    "programmingLanguage": "Java 11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 19,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 23859200,
    "source": "\r\n/*\r\n                       _oo0oo_\r\n                      o8888888o\r\n                      88\" . \"88\r\n                      (| -_- |)\r\n                      0\\  =  /0\r\n                    ___/`---'\\___\r\n                  .' \\\\|     |// '.\r\n                 / \\\\|||  :  |||// \\\r\n                / _||||| -:- |||||- \\\r\n               |   | \\\\\\  -  /// |   |\r\n               | \\_|  ''\\---/''  |_/ |\r\n               \\  .-\\__  '-'  ___/-. /\r\n             ___'. .'  /--.--\\  `. .'___\r\n          .\"\" '<  `.___\\_<|>_/___.' >' \"\".\r\n         | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |\r\n         \\  \\ `_.   \\_ __\\ /__ _/   .-` /  /\r\n     =====`-.____`.___ \\_____/___.-`___.-'=====\r\n                       `=---='\r\n \r\n*/\r\nimport java.util.function.Consumer;\r\nimport java.util.*;\r\nimport java.math.BigDecimal;\r\nimport java.math.BigInteger;\r\nimport java.math.RoundingMode;\r\nimport java.text.DecimalFormat;\r\nimport java.io.*;\r\nimport java.lang.Math.*;\r\n public class KickStart2020{\r\n\tstatic class FastReader {\r\n        BufferedReader br;\r\n        StringTokenizer st;\r\n        public FastReader(){br = new BufferedReader(\r\n           new InputStreamReader(System.in));}\r\n        String next(){\r\n            while (st == null || !st.hasMoreElements()) {\r\n                try { st = new StringTokenizer(br.readLine()); }\r\n                catch (IOException e) {e.printStackTrace();}}\r\n            return st.nextToken();}\r\n        int nextInt() { return Integer.parseInt(next()); }\r\n        long nextLong() { return Long.parseLong(next()); }\r\n        double nextDouble() { return Double.parseDouble(next());}\r\n        float nextFloat() {return Float.parseFloat(next());}\r\n        String nextLine() {\r\n            String str = \"\";\r\n            try {str = br.readLine();}\r\n            catch (IOException e) { e.printStackTrace();}\r\n            return str; }}\r\n\tstatic String reverseOfString(String a) {\r\n\t\tStringBuilder ssd = new StringBuilder();\r\n\t\tfor(int i = a.length() - 1; i >= 0; i--) {\r\n\t\t\tssd.append(a.charAt(i));\r\n\t\t}\r\n\t\treturn ssd.toString();\r\n\t}\r\n\tstatic char[] reverseOfChar(char a[]) {\r\n\t\tchar b[] = new char[a.length];\r\n\t\tint j = 0;\r\n\t\tfor(int i = a.length - 1; i >= 0; i--) {\r\n\t\t\tb[i] = a[j];\r\n\t\t\tj++;\r\n\t\t}\r\n\t\treturn b;\r\n\t}\r\n\tstatic boolean isPalindrome(char a[]) {\r\n\t\tboolean hachu = true;\r\n\t\tfor(int i = 0; i <= a.length / 2; i++) {\r\n\t\t\tif(a[i] != a[a.length - 1 - i]) {\r\n\t\t\t\thachu = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn hachu;\r\n\t} \r\n\tstatic long gcd(long a, long b)\r\n\t{\r\n\t    if (b == 0)\r\n\t        return a;\r\n\t    return gcd(b, a % b);\r\n\t     \r\n\t}\r\n\tstatic boolean check(String a) {\r\n\t\tboolean hachu = true;\r\n\t\tfor(int i = 0; i < a.length(); i++) {\r\n\t\t\tif(a.charAt(0) != a.charAt(i)) {hachu = false; break;}\r\n\t\t}\r\n\t\treturn hachu;\r\n\t}\r\n\t\tpublic static void main(String[] args) throws Exception{\r\nFastReader sc = new FastReader();\r\nint t = sc.nextInt();\r\nouterloop:\r\nwhile(t-- > 0) {\r\n\tlong a = sc.nextLong();\r\n\tlong b = sc.nextLong();\r\n\tif(a == b) System.out.println(0);\r\n\telse if(a < b) {\r\n\t\tif(b % a == 0) {\r\n\t\t\tlong z = b / a;\r\n\t\t\tint count = 0;\r\n\t\t\twhile(z % 2 == 0) {count++; z /= 2;}\r\n\t\t\tif(z == 1) {\r\n\t\t\t\tint move = 0;\r\n\t\t\t\tfor(int j = 3; j >= 1; j--) {\r\n\t\t\t\t\tmove += count / j;\r\n\t\t\t\t\tcount = count % j;\r\n\t\t\t\t}\r\n\t\t\t\tSystem.out.println(move);\r\n\t\t\t}\r\n\t\t\telse System.out.println(-1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tSystem.out.println(-1);\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tif(a % b == 0) {\r\n\t\t\tlong z = a / b;\r\n\t\t\tint count = 0;\r\n\t\t\twhile(z % 2 == 0) {count++; z /= 2;}\r\n\t\t\tif(z == 1) {\r\n\t\t\t\tint move = 0;\r\n\t\t\t\tfor(int j = 3; j >= 1; j--) {\r\n\t\t\t\t\tmove += count / j;\r\n\t\t\t\t\tcount = count % j;\r\n\t\t\t\t}\r\n\t\t\t\tSystem.out.println(move);\r\n\t\t\t}\r\n\t\t\telse System.out.println(-1);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tSystem.out.println(-1);\r\n\t\t}\r\n\t}\r\n}\r\n}\r\n}"
}