{
    "id": 211261995,
    "contestId": 43,
    "creationTimeSeconds": 1687880747,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 43,
        "index": "E",
        "name": "Race",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2300,
        "tags": [
            "brute force",
            "implementation",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 43,
        "members": [
            {
                "handle": "04Jasmine"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1291046400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 22,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 3276800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n#define ll long long\r\n//  double nthRoot(double A, double N)\r\n// {\r\n//     // initially guessing a random number between\r\n//     // 0 and 9\r\n//     double xPre = rand() % 10;\r\n \r\n//     //  smaller eps, denotes more accuracy\r\n//     double eps = 1e-3;\r\n \r\n//     // initializing difference between two\r\n//     // roots by INT_MAX\r\n//     double delX = INT_MAX;\r\n \r\n//     //  xK denotes current value of x\r\n//     double xK;\r\n \r\n//     //  loop until we reach desired accuracy\r\n//     while (delX > eps)\r\n//     {\r\n//         //  calculating current value from previous\r\n//         // value by newton's method\r\n//         xK = ((N - 1.0) * xPre +\r\n//               (double)A/pow(xPre, N-1)) / (double)N;\r\n//         delX = abs(xK - xPre);\r\n//         xPre = xK;\r\n//     }\r\n \r\n//     return xK;\r\n// }\r\nint main(){\r\n   int n,s;\r\n   cin>>n>>s;\r\n   vector<vector<int>> mat;\r\n   for(int i=0;i<n;i++){\r\n    int k;\r\n    cin>>k;\r\n    int v[k],t[k];\r\n    int p=0;\r\n    vector<int> temp;\r\n    for(int j=0;j<k;j++){\r\n        cin>>v[j]>>t[j];\r\n       while(t[j]>0&&p<s){\r\n        p+=v[j];\r\n         temp.push_back(p);\r\n         t[j]--;\r\n       }\r\n    }\r\n    mat.push_back(temp);\r\n    temp.clear();\r\n   }\r\n   \r\n   int cnt=0;\r\n   for(int i=0;i<mat.size();i++){\r\n    for(int j=0;j<mat.size();j++){\r\n       int sz=min(mat[i].size(),mat[j].size());\r\n       for(int l=1;l<sz;l++){\r\n        if(mat[i][l-1]<=mat[j][l-1]&&mat[i][l]>mat[j][l]) cnt++;\r\n       }\r\n    }\r\n   }\r\n   cout<<cnt;\r\n    return 0;\r\n}"
}