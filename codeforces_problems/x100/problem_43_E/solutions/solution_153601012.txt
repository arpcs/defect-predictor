{
    "id": 153601012,
    "contestId": 43,
    "creationTimeSeconds": 1649902722,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 43,
        "index": "E",
        "name": "Race",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2300,
        "tags": [
            "brute force",
            "implementation",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 43,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1291046400
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 186,
    "memoryConsumedBytes": 70451200,
    "source": "# @Chukamin ICPC_TRAIN\n\ndef main():\n    n, s = map(int, input().split())\n    Nnum = 0\n    func = [[0 for i in range(40010)] for j in range(210)]\n    for i in range(1, n + 1):\n        data = list(map(int, input().split()))\n        j = 0\n        cnt = data[0]\n        for _ in range(cnt):\n            v = data[_ * 2 + 1]\n            t = data[_ * 2 + 2]\n            for i in range(t):\n                func[i][j + 1] = func[i][j] + v\n                j += 1\n        Nnum = max(Nnum, j)\n    ans = 0\n    for k in range(2, Nnum):\n        for i in range(1, n + 1):\n            if func[i][k]:\n                for j in range(1, n + 1):\n                    if i != j and func[j][k]:\n                        if func[i][k] == func[j][k]:\n                            if func[i][k - 1] < func[j][k - 1] and func[i][k + 1] > func[j][k + 1]:\n                                ans += 1\n                        else:\n                            if func[i][k - 1] < func[j][k - 1] and func[i][k] > func[j][k]:\n                                ans += 1\n    print(ans)\n    \n    \nif __name__ == '__main__':\n    main()\n\n\t  \t  \t  \t\t \t \t\t  \t \t\t \t  \t\t\t",
    "suggested_categories": [
        "dynamic programming",
        "algorithm design",
        "competitive programming",
        "data structures",
        "code metrics",
        "code quality",
        "performance optimization",
        "loop management",
        "input handling",
        "output handling",
        "python programming",
        "nested lists",
        "nested loops",
        "mathematical logic",
        "conditional statements",
        "array operations",
        "function computing",
        "variable manipulation",
        "code testing",
        "problem solving"
    ]
}