{
    "id": 211730858,
    "contestId": 43,
    "creationTimeSeconds": 1688222781,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 43,
        "index": "E",
        "name": "Race",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2300,
        "tags": [
            "brute force",
            "implementation",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 43,
        "members": [
            {
                "handle": "propane"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1291046400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 48,
    "timeConsumedMillis": 248,
    "memoryConsumedBytes": 204800,
    "source": "#include<iostream>\r\n#include<cstring>\r\n#include<vector>\r\nusing namespace std;\r\nusing LL = long long;\r\n\r\nint main(){\r\n\r\n#ifdef LOCAL\r\n    freopen(\"data.in\", \"r\", stdin);\r\n    freopen(\"data.out\", \"w\", stdout);\r\n#endif\r\n\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    ios::sync_with_stdio(0);\r\n\r\n    int n, s;\r\n    cin >> n >> s;\r\n    vector<vector<pair<int, int> > > seg(n);\r\n    for(int i = 0; i < n; i++){\r\n        int k;\r\n        cin >> k;\r\n        seg[i].resize(k + 1);\r\n        for(int j = 1; j <= k; j++){\r\n            cin >> seg[i][j].second >> seg[i][j].first;\r\n            seg[i][j].first += seg[i][j - 1].first;\r\n        }\r\n    }\r\n    int ans = 0;\r\n    for(int i = 0; i < n; i++){\r\n        for(int j = 0; j < n; j++){\r\n            if (i == j) continue;\r\n            vector<int> tim;\r\n            for(auto [x, y] : seg[i]) tim.push_back(x);\r\n            for(auto [x, y] : seg[j]) tim.push_back(x);\r\n            sort(tim.begin(), tim.end());\r\n            tim.erase(unique(tim.begin(), tim.end()), tim.end());\r\n            int s1 = 0, s2 = 0;\r\n            int lastv1, lastv2;\r\n            for(int t = 0; t + 1 < tim.size(); t++){\r\n                int cur = tim[t];\r\n                int v1 = lower_bound(seg[i].begin(), seg[i].end(), make_pair(cur + 1, 0))->second;\r\n                int v2 = lower_bound(seg[j].begin(), seg[j].end(), make_pair(cur + 1, 0))->second;\r\n                if (t > 0){\r\n                    if (s1 == s2){\r\n                        if (lastv1 > lastv2 && v1 > v2){\r\n                            ans += 1;\r\n                        }\r\n                    }\r\n                    else if (s1 < s2){\r\n                        if (s1 + v1 * (tim[t + 1] - tim[t]) > s2 + v2 * (tim[t + 1] - tim[t])){\r\n                            ans += 1;\r\n                        }\r\n                    }\r\n                }\r\n                lastv1 = v1, lastv2 = v2;\r\n                s1 += v1 * (tim[t + 1] - tim[t]);\r\n                s2 += v2 * (tim[t + 1] - tim[t]);\r\n                if (s1 == s || s2 == s) break;\r\n            }\r\n        }\r\n    }\r\n    cout << ans << '\\n';\r\n\r\n}"
}