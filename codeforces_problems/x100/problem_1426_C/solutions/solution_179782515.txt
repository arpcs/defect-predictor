{
    "id": 179782515,
    "contestId": 1426,
    "creationTimeSeconds": 1667759147,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1426,
        "index": "C",
        "name": "Increase and Copy",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "binary search",
            "constructive algorithms",
            "math"
        ]
    },
    "author": {
        "contestId": 1426,
        "members": [
            {
                "handle": "Shagufta_Iqbal"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601280300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 217,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n// #include <boost/algorithm/string.hpp>\r\n \r\nusing namespace std;\r\n#define ll long long int\r\n#define pb push_back\r\n#define mp make_pair\r\n#define sz(a) (ll)a.size()\r\n#define py cout<<\"YES\\n\";\r\n#define pn cout<<\"NO\\n\";\r\nconst int MOD = 1000000007;\r\n#define forn(i, n) for (int i = 0; i < int(n); i++)\r\n\r\n\r\nconst double PI = acos(-1);\r\n// #define size 102\r\n\r\n// const int MXX = 1e6;\r\n// bitset<MXX + 1> isPrime;\r\n// vector<int> primes;\r\n\r\n// long matrix[size][size];\r\n\r\n// int a[size][size],b[size][size];\r\n// void sieve() {\r\n//     // false = prime, true = not prime\r\n//     isPrime[0] = isPrime[1] = true;\r\n//     for (int i = 4; i <= MXX; i += 2) isPrime[i] = true;\r\n \r\n//     for (int i = 3; 1LL * i * i <= MXX; i += 2) {\r\n//         if (!isPrime[i]) {\r\n//             for (int64_t j = i * i; j <= MXX; j += i + i) isPrime[j] = true;\r\n//         }\r\n//     }\r\n//     for (int i = 0; i < MXX; ++i) {\r\n//         if (!isPrime[i])\r\n//             primes.push_back(i);\r\n//     }\r\n// }\r\nstruct comp{\r\n    bool operator()(pair<int,int>&a,pair<int,int>&b){\r\n        return a.first+a.second<b.first+b.second;\r\n    }\r\n};\r\n    \r\nbool cmp(pair<string,ll>&a, pair<string,ll>&b){\r\n    if(a.first.size()==b.first.size())\r\n        return a<b;\r\n    return a.first.size()>b.first.size();\r\n}\r\n\r\nll smallestPrime(ll n){\r\n    for(ll i=2;i*i<=n;i++){\r\n        if(n%i==0)\r\n            return i;\r\n    }\r\n    return n;\r\n}\r\n\r\nbool isPal(int n){\r\n    \r\n    int x=0,i=n;\r\n    while(n){\r\n        x=(x*10+n%10);\r\n        n/=10;\r\n    }\r\n    \r\n    if(x!=i)    return false;\r\n    return true;\r\n}\r\n\r\n\r\nll rec(ll i, ll sum, vector<ll>&pal, vector<vector<ll>>&dp){\r\n    \r\n    if(sum==0)  return 1;\r\n    \r\n    if(i<0 || sum<0)    return 0;\r\n    \r\n    if(i==0 && sum==pal[i])     return 1;\r\n    \r\n    if(dp[i][sum]!=-1)  return dp[i][sum];\r\n    \r\n    ll take=0,leave=0;\r\n    take =rec(i,sum-pal[i],pal,dp);\r\n    leave=rec(i-1,sum,pal,dp);\r\n  \r\n    return dp[i][sum]=(take%MOD+leave%MOD)%MOD;\r\n}\r\nvector<ll>mirror={0,1,5,-1,-1,2,-1,-1,8,-1};\r\nvoid solve(){\r\n    \r\n    ll n;    cin>>n;\r\n    \r\n    // char ch;    cin>>ch;\r\n    \r\n    // vector<ll>a(n);\r\n    // forn(i,n){\r\n    //     cin>>a[i];\r\n    // }\r\n    ll ans = 1e9;\r\n\tfor (int x = 1; x * x <= n; ++x) {\r\n\t\tans = min(ans, x - 1 + ((n - x) + x - 1) / x);\r\n\t}\r\n\tcout << ans << endl;\r\n\t\t\r\n    return;\r\n}\r\n \r\nint main()\r\n{\r\n    // clock_t time_req = clock();\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n    // cout << fixed << setprecision(9);\r\n    ll t=1;\r\n    cin>>t;\r\n\r\n    while(t--)\r\n    {\r\n        solve();\r\n    }\r\n    \r\n    // time_req = clock() - time_req;\r\n    // cout << (float)time_req / CLOCKS_PER_SEC;\r\n    return 0;\r\n}"
}