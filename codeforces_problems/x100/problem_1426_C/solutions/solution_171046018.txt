{
    "id": 171046018,
    "contestId": 1426,
    "creationTimeSeconds": 1662464406,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1426,
        "index": "C",
        "name": "Increase and Copy",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "binary search",
            "constructive algorithms",
            "math"
        ]
    },
    "author": {
        "contestId": 1426,
        "members": [
            {
                "handle": "R_Dev"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601280300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include \"bits/stdc++.h\"\n#define int long long\n#define endl '\\n'\n#define pb push_back \nusing namespace std;\nint mod=1e9+7;\nint gcd(int a, int b){return b == 0 ? a : gcd(b, a % b);}  \nint power(int x,int y){\n\tif(y==0)return 1;\n\tint res=power(x,y/2)%mod;\n\tif(y&1)return (res%mod)*(res%mod)*(x%mod);\n\telse return (res%mod)*(res%mod);\n}\n\nbool prime(int a){\n\tfor(int i=2;i<=sqrt(a);i++){\n\t\tif(a%i==0)return false;\n\t}\n\treturn true;\t\n}\n\nvoid sol() {\n\tint n;cin>>n;\n\tif(n==1){cout<<\"0\"<<endl;return;}\n\tint ans=INT_MAX;\n\tfor(int i=2;i<ceil(sqrt(n));i++){\n\t\tint temp=0;\n\t\tif(n%i==0){\n\t\t\ttemp=(n/i-1)+(i-1);\n\t\t}else{\n\t\t\ttemp=(n%i)+(i-(n%i))+(n/i-1);\n\t\t}\n\t\tans=min(ans,temp);\n\t}\n\tcout<<ans<<endl;\n}\n\nsigned main(){\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0);\n\t#ifndef ONLINE_JUDGE\n\tfreopen(\"inputf.in\",\"r\",stdin);\n\tfreopen(\"outputf.out\",\"w\",stdout);\n\t#endif\n\n\tint cases=1;\n\tcin>>cases;\n\twhile(cases--){\n\t\tsol();\n\t}\n}"
}