{
    "id": 173731812,
    "contestId": 1426,
    "creationTimeSeconds": 1664296437,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1426,
        "index": "C",
        "name": "Increase and Copy",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "binary search",
            "constructive algorithms",
            "math"
        ]
    },
    "author": {
        "contestId": 1426,
        "members": [
            {
                "handle": "jaypatel0523"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601280300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "/*\n#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n\n\n\n\nint main()\n{\n\tint t;\n\tcin >> t;\n\n\twhile(t--)\n\t{\n\t\tll n;\n\t\tcin >> n;\n\n\t\tvector<ll> arr;\n\t\tfor(int i=0; i<n; i++)\n\t\t{\n\t\t\tll x;\n\t\t\tcin >> x;\n\n\t\t\tarr.push_back(x);\n\t\t}\n\n\t\tll ans = 0;\n\n\t\tll gcd1 = 0;\n\t\tfor(int i=0; i<n; i+=2)\n\t\t{\n\t\t\t// cout << i << \" \";\n\t\t\tgcd1 = __gcd(arr[i], gcd1);\n\t\t}\n\t\t// cout << endl;\n\n\t\tll gcd2 = 0;\n\t\tfor(int i=1; i<n; i+=2)\n\t\t{\n\t\t\t// cout << i << \" \";\n\t\t\tgcd2 = __gcd(arr[i], gcd2);\n\t\t}\n\t\t// cout << endl;\n\n\n\t\tif(gcd1 == 1 && gcd2 > 1)\n\t\t{\n\t\t\tfor(int i=0; i<n; i++)\n\t\t\t{\n\t\t\t\tif(arr[i] % gcd2 == 0)\n\t\t\t\t{\n\t\t\t\t\tarr[i] = 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tarr[i] = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbool flag = true;\n\t\t\tfor(int i=0; i<n-1; i++)\n\t\t\t{\n\t\t\t\tif(arr[i] == arr[i+1])\n\t\t\t\t{\n\t\t\t\t\tflag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(flag)\n\t\t\t{\n\t\t\t\tans = gcd2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tans = 0;\n\t\t\t}\n\n\n\n\t\t}\n\t\telse if(gcd2 == 1 && gcd1 > 1)\n\t\t{\n\t\t\tfor(int i=0; i<n; i++)\n\t\t\t{\n\t\t\t\tif(arr[i] % gcd1 == 0)\n\t\t\t\t{\n\t\t\t\t\tarr[i] = 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tarr[i] = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbool flag = true;\n\t\t\tfor(int i=0; i<n-1; i++)\n\t\t\t{\n\t\t\t\tif(arr[i] == arr[i+1])\n\t\t\t\t{\n\t\t\t\t\tflag = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(flag)\n\t\t\t{\n\t\t\t\tans = gcd1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tans = 0;\n\t\t\t}\n\n\t\t}\n\t\telse\n\t\t{\t\n\t\t\tvector<ll> temp = arr;\n\t\t\tfor(int i=0; i<temp.size(); i++)\n\t\t\t{\n\t\t\t\tif(temp[i] % gcd1 == 0)\n\t\t\t\t{\n\t\t\t\t\ttemp[i] = 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttemp[i] = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbool flag1 = true;\n\t\t\tfor(int i=0; i<n-1; i++)\n\t\t\t{\n\t\t\t\tif(temp[i] == temp[i+1])\n\t\t\t\t{\n\t\t\t\t\tflag1 = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(flag1)\n\t\t\t{\n\t\t\t\tans = gcd1;\n\t\t\t}\n\n\n\t\t\tfor(int i=0; i<n; i++)\n\t\t\t{\n\t\t\t\tif(arr[i] % gcd2 == 0)\n\t\t\t\t{\n\t\t\t\t\tarr[i] = 1;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tarr[i] = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbool flag2 = true;\n\t\t\tfor(int i=0; i<n-1; i++)\n\t\t\t{\n\t\t\t\tif(arr[i] == arr[i+1])\n\t\t\t\t{\n\t\t\t\t\tflag2 = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(flag2)\n\t\t\t{\n\t\t\t\tans = gcd2;\n\t\t\t}\n\t\t}\t\n\n\t\t\n\t\tcout << ans;\n\n\n\t\tcout << endl;\n\n\n\t}\n\n\treturn 0;\n}\n*/\n\n\n\n\n\n\n\n\n\n\n\n#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n\n\nint main()\n{\n\tint t;\n\tcin >> t;\n\n\twhile(t--)\n\t{\n\t\tll n;\n\t\tcin >> n;\n\n\t\tll root = sqrt(n);\n\n\t\tll count = root;\n\t\twhile(root * count < n)\n\t\t{\n\t\t\tcount++;\n\t\t}\n\n\t\tll ans = 0;\n\t\tans += (root - 1);\n\t\tans += (count - 1);\n\n\n\t\tcout << ans << endl;\n\n\n\t}\n\n\treturn 0;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
}