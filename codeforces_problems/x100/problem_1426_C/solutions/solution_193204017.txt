{
    "id": 193204017,
    "contestId": 1426,
    "creationTimeSeconds": 1676127340,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1426,
        "index": "C",
        "name": "Increase and Copy",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "binary search",
            "constructive algorithms",
            "math"
        ]
    },
    "author": {
        "contestId": 1426,
        "members": [
            {
                "handle": "Skucal"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601280300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<iostream>\r\n#include<bits/stdc++.h>\r\n#include<cstring>\r\n#include<queue>\r\n#include<map>\r\n#include<set>\r\n\r\n#define IOS ios::sync_with_stdio(false);\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int N = 2e5 + 7;\r\n\r\nvoid solve() {\r\n    int i, n, res = 0;\r\n    cin >> n;\r\n    int ans = sqrt(n);\r\n    for (i = 1; i <= ans; i++) {\r\n        res++;\r\n    }\r\n    i--, res--;\r\n    if (n % i == 0) cout << res - 1 + n / i << endl;\r\n    else cout << res + n / i << endl;\r\n}\r\n\r\nint main() {\r\n    IOS;\r\n    int t;\r\n    t = 1;\r\n    cin >> t;\r\n    while (t--) solve();\r\n    return 0;\r\n}"
}