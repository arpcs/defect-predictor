{
    "id": 233820434,
    "contestId": 1426,
    "creationTimeSeconds": 1700660903,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1426,
        "index": "C",
        "name": "Increase and Copy",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "binary search",
            "constructive algorithms",
            "math"
        ]
    },
    "author": {
        "contestId": 1426,
        "members": [
            {
                "handle": "zhenghaolin0"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601280300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// 1700660902.5700428\n// generated by GPT4 2023-11-20 20:50:55\n#include <iostream>\n#include <vector>\n\nint minMoves(int n) {\n    int moves = 0;\n    std::vector<int> a = {1};\n    int sum = 1;\n    while (sum < n) {\n        int i = moves % (a.size() + 1);\n        if (i == 0) {\n            a.push_back(a.back());\n        } else {\n            a[i - 1]++;\n        }\n        sum += a[i - 1];\n        moves++;\n    }\n    return moves;\n}\n\nint main() {\n    int t;\n    std::cin >> t;\n    while (t--) {\n        int n;\n        std::cin >> n;\n        std::cout << minMoves(n) << std::endl;\n    }\n    return 0;\n}\n"
}