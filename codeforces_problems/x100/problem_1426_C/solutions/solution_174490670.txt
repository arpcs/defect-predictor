{
    "id": 174490670,
    "contestId": 1426,
    "creationTimeSeconds": 1664788208,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1426,
        "index": "C",
        "name": "Increase and Copy",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "binary search",
            "constructive algorithms",
            "math"
        ]
    },
    "author": {
        "contestId": 1426,
        "members": [
            {
                "handle": "faith_star"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601280300
    },
    "programmingLanguage": "Java 11",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 260403200,
    "source": "\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class C1426 {\r\n\t\r\n\tstatic Scanner sc = new Scanner(System.in);\r\n\tstatic int t = sc.nextInt();\r\n\tstatic long n;\r\n\tstatic int []f = new int[1000000000];\r\n\tpublic static void main(String[] args) {\r\n\t\twhile((t--) > 0) {\r\n\t\t\tn = sc.nextInt();\r\n\t\t\tif(n == 1) {\r\n\t\t\t\tSystem.out.println(0);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(f[(int) n] != 0) {\r\n\t\t\t\t\tSystem.out.println(f[(int) n]);\r\n\t\t\t\t}else {\r\n\t\t\t\t\tint res = 0x3f3f3f;\r\n\t\t\t\t\tfor(int i = 1; i <= Math.sqrt(n); i++) {\r\n\t\t\t\t\t\t\tint tol = (int) ((i - 1) + Math.ceil((double)n / i) - 1);\r\n\t\t\t\t\t\t\tres = Math.min(res, tol);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tf[(int) n] = res;\r\n\t\t\t\t\tSystem.out.println(res);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n"
}