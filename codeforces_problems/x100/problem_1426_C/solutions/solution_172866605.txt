{
    "id": 172866605,
    "contestId": 1426,
    "creationTimeSeconds": 1663695482,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1426,
        "index": "C",
        "name": "Increase and Copy",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "binary search",
            "constructive algorithms",
            "math"
        ]
    },
    "author": {
        "contestId": 1426,
        "members": [
            {
                "handle": "Unlucky_girl_out_there"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601280300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define fast()                        \\\r\n    ios_base::sync_with_stdio(false); \\\r\n    cin.tie(NULL);                    \\\r\n    cout.tie(NULL);\r\nusing namespace std;                        \r\n#define ull unsigned ll\r\n#define ll long long int\r\n#define ld long double\r\n#define pb push_back\r\n#define mp make_pair\r\n#define mt make_tuple\r\n#define nui 100\r\n//#define pi 3.1415926535897932384626\r\n#define nu 1e18\r\n#define INF 100000000000\r\n#define F1(i,a,n) for(int i=a;i<n;i++)\r\n#define B(i,a,n) for(ll i=n-1;i>=a;i--)\r\n#define tc int t;cin>>t;while(t--)\r\n#define tcf ll t;cin>>t;for(int w=1;w<=t;w++)\r\n#define Ans(a,b) cout<<\"Case #\"<<a<<\": \"<<b<<\"\\n\";\r\n#define vi vector<int>\r\n#define vll vector<ll>\r\n#define pii pair<int,int>\r\n#define pll pair<ll,ll>\r\n#define re(a)  a.resize(unique(a.begin(), a.end()) - a.begin());\r\n#define revsort(a)  is_sorted(begin(a), end(a));\r\n#define inineg  LLONG_MIN;\r\n#define NO_OF_CHARS 256\r\n#define REP(i,n) for (int i = 1; i <= n; i++)\r\nconst int  P1=1e5+20;\r\n#define rep(i,a,b) for(int i = a; i < b; i++)\r\n#define P 1000000007 \r\n#define vc vector<int> \r\n#define F first\r\n#define std1 '\\n'\r\n#define eb emplace_back\r\n#define rep(i,a,b) for(int i = a; i < b; i++)\r\n#define ff first\r\n#define ss second\r\n#define yes cout<<\"YES\"\r\n#define no cout<<\"NO\"\r\n#define max_pq priority_queue<int>\r\n#define min_pq priority_queue<int, vector<int>, greater<int>>\r\n\r\n\r\n\r\n//std::iota(numbers, numbers + 10, st);\r\n\r\nint binpow(int a, int b) {\r\n    int res = 1;\r\n    while (b > 0) {\r\n        if (b & 1) res = res * a;\r\n        a = a * a;\r\n        b >>= 1;\r\n    }\r\n    return res;\r\n}\r\n \r\nint gcd(int a,int b) {\r\n    if (b==0) return a;\r\n    return gcd(b,a%b);\r\n}\r\nint phi1(int n)\r\n{\r\n    int result = n;\r\n    for (int i = 2; i * i <= n; i++)\r\n    {\r\n        if (n % i == 0)\r\n        {\r\n            while (n % i == 0)\r\n                n /= i;\r\n            result -= result / i;\r\n        }\r\n    }\r\n    if (n > 1)\r\n        result -= result / n;\r\n    return result;\r\n}\r\ntuple<int, int, int> extended_gcd(int a, int b)\r\n{\r\n    if (b == 0)\r\n    {\r\n        return {1, 0, a};\r\n    }\r\n    else\r\n    {\r\n        int x, y, g;\r\n        tie(x, y, g) = extended_gcd(b, a % b);\r\n        return {y, x - (a / b) * y, g};\r\n    }\r\n}\r\n \r\nstring to_upper(string &a) {\r\n    for (int i=0;i<(int)a.size();++i) if (a[i]>='a' && a[i]<='z') a[i]-='a'-'A';\r\n    return a;\r\n}\r\n \r\nstring to_lower(string &a) {\r\n    for (int i=0;i<(int)a.size();++i) if (a[i]>='A' && a[i]<='Z') a[i]+='a'-'A';\r\n    return a;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nvoid solve()\r\n{\r\n\r\nint n;\r\n\r\n   cin>>n;\r\n\r\n        if(n==1)\r\n\r\n            cout<<\"0\"<<endl;\r\n\r\n        else\r\n\r\n        {\r\n\r\n            int v =ceil(2*(sqrt(n)));\r\n\r\n            cout<<v<<endl;\r\n        }\r\n\r\n}\r\n\r\n\r\nint main()\r\n{\r\n\r\n\r\n\r\n#ifndef ONLINE_JUDGE\r\n    // for getting input from input.txt\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    // for writing output to output.txt\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n\r\n  \r\n\r\nfast();\r\n\r\n\r\n \r\n \r\n ll t;\r\n\r\n\r\n\r\ncin>>t;\r\n\r\n\r\n\r\n    while(t--){\r\n   \r\n   \r\n  \r\n    //cout << \"Case #\" << a1 << \": \";\r\n    solve();\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// memset(arr1,0,sizeof(arr1));\r\n \r\n \r\n \r\n \r\n \r\n#ifndef ONLINE_JUDGE\r\n    cerr << \"Time : \" << 1000 * ((double)clock()) / (double)CLOCKS_PER_SEC << \"ms\\n\";\r\n#endif\r\nreturn 0;\r\n \r\n\r\n\r\n\r\n}\r\n\r\n\r\n/*\r\n \r\n !!!!!\r\n *\r\n\r\n *\r\n * \u250c\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510\r\n * \u2502Esc\u2502   \u2502 F1\u2502 F2\u2502 F3\u2502 F4\u2502 \u2502 F5\u2502 F6\u2502 F7\u2502 F8\u2502 \u2502 F9\u2502F10\u2502F11\u2502F12\u2502 \u2502P/S\u2502S L\u2502P/B\u2502  \u250c\u2510    \u250c\u2510    \u250c\u2510\r\n * \u2514\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518  \u2514\u2518    \u2514\u2518    \u2514\u2518\r\n * \u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510\r\n * \u2502~ `\u2502! 1\u2502@ 2\u2502# 3\u2502$ 4\u2502% 5\u2502^ 6\u2502& 7\u2502* 8\u2502( 9\u2502) 0\u2502_ -\u2502+ =\u2502 BacSp \u2502 \u2502Ins\u2502Hom\u2502PUp\u2502 \u2502Num\u2502 / \u2502 * \u2502 - \u2502\r\n * \u251c\u2500\u2500\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2524 \u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524 \u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\r\n * \u2502 Tab \u2502 Q \u2502 W \u2502 E \u2502 R \u2502 T \u2502 Y \u2502 U \u2502 I \u2502 O \u2502 P \u2502{ [\u2502} ]\u2502 | \\ \u2502 \u2502Del\u2502End\u2502PDn\u2502 \u2502 7 \u2502 8 \u2502 9 \u2502   \u2502\r\n * \u251c\u2500\u2500\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2534\u252c\u2500\u2500\u2534\u252c\u2500\u2500\u2534\u252c\u2500\u2500\u2534\u252c\u2500\u2500\u2534\u252c\u2500\u2500\u2534\u252c\u2500\u2500\u2534\u252c\u2500\u2500\u2534\u252c\u2500\u2500\u2534\u252c\u2500\u2500\u2534\u252c\u2500\u2500\u2534\u252c\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2524 \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518 \u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524 + \u2502\r\n * \u2502 Caps \u2502 A \u2502 S \u2502 D \u2502 F \u2502 G \u2502 H \u2502 J \u2502 K \u2502 L \u2502: ;\u2502\" '\u2502 Enter  \u2502               \u2502 4 \u2502 5 \u2502 6 \u2502   \u2502\r\n * \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524     \u250c\u2500\u2500\u2500\u2510     \u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\r\n * \u2502 Shift  \u2502 Z \u2502 X \u2502 C \u2502 V \u2502 B \u2502 N \u2502 M \u2502< ,\u2502> .\u2502? /\u2502  Shift   \u2502     \u2502 \u2191 \u2502     \u2502 1 \u2502 2 \u2502 3 \u2502   \u2502\r\n * \u251c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2534\u2500\u252c\u2500\u2534\u2500\u2500\u252c\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u252c\u2534\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2534\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2524 \u250c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2510 \u251c\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524 E\u2502\u2502\r\n * \u2502 Ctrl\u2502 Win\u2502 Alt\u2502         Space         \u2502 Alt\u2502 Win\u2502Menu\u2502Ctrl\u2502 \u2502 \u2190 \u2502 \u2193 \u2502 \u2192 \u2502 \u2502   0   \u2502 . \u2502\u2190\u2014\u2518\u2502\r\n * \u2514\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\r\n */\r\n\r\n//set of disjoint cuicles is to check if triplet exist\r\n//edges=vertex(vertex-1)/2;\r\n\r\n//maximum remainder we get is a-1 ie num divided -1;\r\n//to get maximum quotient biger the number youdivide bigger the quotient you get\r\n\r\n//dfs is not used to find shortest distance in graph but used only in trees\r\n//because trees have unique path between node and tree but we have wexponential\r\n//no of unique paths between 2 nodes in graph\r\n\r\n//CAP THEROM .\r\n\r\n\r\n/*\r\n int ans = 0;\r\n    void traversal(TreeNode * root,vector<int> graph[],int parent){\r\n        if(root == NULL){\r\n            return;\r\n        }\r\n\r\n        if(parent!=-1){\r\n            graph[root->val].push_back(parent);\r\n            graph[parent].push_back(root->val);\r\n        }\r\n\r\n        traversal(root->left,graph,root->val);\r\n        traversal(root->right,graph,root->val);\r\n        return;\r\n    } \r\n*/\r\n\r\n"
}