{
    "id": 42109452,
    "contestId": 910,
    "creationTimeSeconds": 1535258448,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 910,
        "index": "C",
        "name": "Minimum Sum",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 910,
        "members": [
            {
                "handle": "TISparta"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1513940700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 107,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LEN = 6, SIGMA = 10;\n\nint cnt[LEN + 1][SIGMA + 1], val[SIGMA + 1];\nbool invalid[SIGMA + 1];\n\nint main () {\n  int n;\n  scanf(\"%d\\n\", &n);\n  for (int i = 0; i < n; i++) {\n    char number[LEN + 1];\n    scanf(\"%s\\n\", number);\n    invalid[number[0] - 'a'] = true;\n    int sz = strlen(number);\n    for (int j = 0; number[j]; j++) {\n      cnt[LEN - sz + j][number[j] - 'a']++;\n    }\n  }\n  string sigma = \"abcdefghij\";\n  int ans = INT_MAX;\n  do {\n    if (invalid[sigma[0] - 'a']) continue;\n    int p = 0;\n    for (const char ch: sigma) val[ch - 'a'] = p++;\n    int sum = 0, carry = 0, power = 1;\n    for (int i = LEN - 1; i >= 0; i--) {\n      int ac = 0;\n      for (int j = 0; j < SIGMA; j++) {\n        ac += cnt[i][j] * val[j];\n      }\n      ac += carry;\n      sum = sum + power * (ac % 10);\n      power *= 10;\n      carry = ac / 10;\n    }\n    while (carry) {\n      sum = sum + power * (carry % 10);\n      power *= 10;\n      carry /= 10;\n    }\n    ans = min(ans, sum);\n  } while (next_permutation(begin(sigma), end(sigma)));\n  printf(\"%d\\n\", ans);\n  return (0);\n}\n"
}