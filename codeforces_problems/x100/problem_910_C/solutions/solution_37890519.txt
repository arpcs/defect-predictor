{
    "id": 37890519,
    "contestId": 910,
    "creationTimeSeconds": 1525462340,
    "relativeTimeSeconds": 4339,
    "problem": {
        "contestId": 910,
        "index": "C",
        "name": "Minimum Sum",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 910,
        "members": [
            {
                "handle": "lucasdeamorin"
            },
            {
                "handle": "AgustinM"
            }
        ],
        "participantType": "VIRTUAL",
        "teamId": 35687,
        "teamName": "Te Acepto Un Churro",
        "ghost": false,
        "startTimeSeconds": 1525458000
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 13414400,
    "source": "#include<bits/stdc++.h>\r\n\r\n#define forn(i,n) for(int i = 0 ; i<int(n);i++)\r\n#define pb push_back\r\n#define mp make_pair\r\n\r\ntypedef long long int tint;\r\n\r\nusing namespace std;\r\n\r\nconst int maxn = 3e5;\r\nconst tint p = 1e9+9;\r\n\r\nvector<int> grafo[maxn];\r\n\r\nint tiempo[maxn] ;\r\nbool yasaque[maxn];\r\nvector<int> tiempos[maxn];\r\nint tupadre[maxn];\r\n\r\n\r\nvoid dfs(int x,int t){\r\n    tiempos[t].pb(x);\r\n    forn(i,grafo[x].size()){\r\n        if (tiempo[grafo[x][i]] == -1) {\r\n            tiempo[grafo[x][i]]=t+1;\r\n            tupadre[grafo[x][i]]=x;\r\n            dfs(grafo[x][i],t+1);\r\n        }\r\n        \r\n    }\r\n    \r\n    \r\n}\r\n\r\ntint expmod(tint n, tint k){\r\n    if (k==0) return 1;\r\n    tint res = expmod(n,k/2);\r\n    if (k%2==0) return (res*res)%p;\r\n    else return (n*((res*res)%p))%p;\r\n    \r\n}\r\n\r\ntint invmod(tint n){\r\n    return expmod(n,p-2);\r\n    \r\n}\r\n\r\nvoid sacar(int k){\r\n    cout << k+1 << endl;\r\n    yasaque[k]=true;\r\n    forn(i,grafo[k].size()){\r\n        if (tupadre[k]!=grafo[k][i] && yasaque[grafo[k][i]] == false){\r\n            sacar(grafo[k][i]);\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n\r\nint main(){\r\n    int n; cin >> n;\r\n    map<char,long long int> numeros;\r\n    string x;\r\n    char var = 'a';\r\n    map<char,bool> puedeser;\r\n    forn(i,10) {numeros[var]=-1;puedeser[var]=true;var++;}\r\n    //cout << \"LLEGUE\";\r\n    long long int c = 10;\r\n    //cout << pow(10,0) << endl;\r\n    forn(j,n){\r\n        cin >> x;\r\n        //cout << x;\r\n        //cout << \"LLEGUE1\" << endl;\r\n        for(int i = x.size()-1;i>=0;i=i-1){\r\n            //cout << \"LLEGUE\";\r\n            numeros[x[i]]+=pow(c,x.size()-1-i);\r\n            if (i==0) {\r\n                //cout << x[i] << endl;\r\n                puedeser[x[i]]=false;\r\n                \r\n            }\r\n        }   \r\n    }\r\n    //cout << \"LLEGUE\";\r\n    //cout << puedeser['a'] << endl;\r\n    var = 'a';\r\n    set<pair<long long int, char> > cantidades;\r\n    forn(i,10) {if (numeros[var]>=0) cantidades.insert(mp(numeros[var],var)); var++;}\r\n    set<pair<long long int, char> >::iterator it = cantidades.begin();\r\n    map<char,long long int> asignacion;\r\n    set<int> disponibles; forn(i,10) if(i) disponibles.insert(i);\r\n    set<pair<long long int, char> > pueden0;\r\n    var = 'a';\r\n    forn(i,10) {if(puedeser[var] && numeros[var]>=0) pueden0.insert(mp(numeros[var],var));var++;}\r\n    set<pair<long long int, char> >::iterator iti = --pueden0.end();\r\n    cantidades.erase(*iti);\r\n    asignacion[(*iti).second]=0;\r\n    int i = cantidades.size();\r\n    while (it != cantidades.end()){\r\n        asignacion[(*it).second] = i;\r\n        i--;\r\n        it++;\r\n    }\r\n    cantidades.insert(*iti);\r\n    long long int suma =0;\r\n    var = 'a';\r\n    forn(i,10) {\r\n        if (numeros[var]>=0){\r\n            suma+=asignacion[var]*(numeros[var]+1);\r\n            //cout << var << \" \" << asignacion[var] << \" \" << ++numeros[var] << endl;\r\n        }\r\n        var++;\r\n    }\r\n    \r\n    cout << suma << endl;\r\n    return 0;\r\n}\r\n"
}