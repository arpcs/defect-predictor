{
    "id": 70489972,
    "contestId": 910,
    "creationTimeSeconds": 1581064805,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 910,
        "index": "C",
        "name": "Minimum Sum",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 910,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1513940700
    },
    "programmingLanguage": "MS C++",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n#define ll long long\nll pow(ll x,ll y)\n{\n    ll ans=1;\n    ll base=x;\n    while(y)\n    {\n        if(y&1)\n            ans*=base;\n        base*=base;\n        y>>=1;\n    }\n    return ans;\n}\nint main()\n{\n    int n,i,j;\n    string s;\n    int b[12];\n    int cnt[12];\n    cin>>n;\n    memset(cnt,0,sizeof(cnt));\n    memset(b,0,sizeof(b));\n    for(i=0; i<n; i++)\n    {\n        cin>>s;\n        int len=s.length();\n        b[s[0]-'a']=1;\n        for(j=len-1; j>=0; j--)\n            cnt[s[j]-'a']+=pow(10,len-1-j);\n    }\n\n    for(i=0; i<9; i++)\n    {\n        for(j=i+1; j<10; j++)\n        {\n            if(cnt[j]>cnt[i])\n            {\n                int h;\n                h=cnt[i];\n                cnt[i]=cnt[j];\n                cnt[j]=h;\n                h=b[i];\n                b[i]=b[j];\n                b[j]=h;\n            }\n        }\n    }\n    ll sum=0;\n    bool flag=1;\n    for(i=0; i<10; i++)\n        if(flag)\n        {\n            if(b[i])\n                sum+=(i+1)*cnt[i];\n            else\n                flag=0;\n        }\n        else\n            sum+=i*cnt[i];\n\n    cout<<sum;\n\n}\n\n  \t\t\t\t\t\t\t\t \t \t\t  \t \t\t \t\t \t\t\t  \t"
}