{
    "id": 35713777,
    "contestId": 910,
    "creationTimeSeconds": 1519595037,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 910,
        "index": "C",
        "name": "Minimum Sum",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 910,
        "members": [
            {
                "handle": "uc-nuts"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1513940700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\n#include <vector>\n#include <string>\n\nusing namespace std;\n\nlong long calc_min(vector <long long> &weights, vector <bool> &can_be_zero) {\n  vector <pair <long long, int>> W;\n  for (int i = 0; i < int(weights.size()); i ++) {\n    if (weights[i] > 0) {\n      W.push_back({weights[i], i});\n    }\n  }\n  sort(W.begin(), W.end());\n  reverse(W.begin(), W.end());\n  vector <bool> available(weights.size(), true);\n  long long ans = 0;\n  for (auto &w: W) {\n    for (int i = 0; i < int(weights.size()); i ++) {\n      if (available[i] && (i != 0 || can_be_zero[w.second])) {\n        available[i] = false;\n        ans += i*w.first;\n        break;\n      }\n    }\n  }\n  return ans;\n}\n\nlong long solve(vector <string> &nums) {\n  vector <long long> weight(10);\n  vector <int> ten = {1, 10, 100, 1000, 10000, 100000, 1000000, 10000000};\n  vector <bool> can_be_zero(10, true);\n  for (auto &num: nums) {\n    can_be_zero[num[0]-'a'] = false;\n    for (int i = 0, n = num.size(); i < n; i ++) {\n      weight[num[i]-'a'] += ten[n-i-1];\n    }\n  }\n  return calc_min(weight, can_be_zero);\n}\n\nint main () {\n  int n;\n  cin >> n;\n  vector <string> p(n);\n  for (auto &e: p) {\n    cin >> e;\n  }\n  cout << solve(p);\n  return 0;\n}\n"
}