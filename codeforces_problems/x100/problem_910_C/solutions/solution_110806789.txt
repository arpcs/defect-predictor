{
    "id": 110806789,
    "contestId": 910,
    "creationTimeSeconds": 1616500598,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 910,
        "index": "C",
        "name": "Minimum Sum",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 910,
        "members": [
            {
                "handle": "1600-1700"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1513940700
    },
    "programmingLanguage": "PyPy 3",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 107,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 3072000,
    "source": "from collections import defaultdict\r\nn = int(input())\r\nd = defaultdict(int)\r\ncantbezero = set()\r\nfor i in range(n):\r\n    s = input()\r\n    cantbezero.add(s[0])\r\n    LEN = len(s)\r\n    mul = 1\r\n    for i in range(LEN - 1, -1, -1):\r\n        d[s[i]] += mul \r\n        mul*=10\r\ndone = defaultdict(int)\r\narr = []\r\nfor key in d.keys():\r\n    arr.append([d[key], key])\r\narr.sort(reverse = True)\r\n# Search for zero\r\nfor i in range(len(arr)):\r\n    if(arr[i][1] not in cantbezero):\r\n        done[arr[i][1]] = 1234\r\n        break\r\ngive = 1\r\nfor i in range(len(arr)):\r\n    if(not done[arr[i][1]]):\r\n        done[arr[i][1]] = give\r\n        give += 1\r\nans = 0\r\nfor key in d.keys():\r\n    if(done[key] != 1234):\r\n        ans += d[key] * done[key]\r\nprint(ans)\r\n"
}