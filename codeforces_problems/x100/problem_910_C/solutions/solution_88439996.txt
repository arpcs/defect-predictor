{
    "id": 88439996,
    "contestId": 910,
    "creationTimeSeconds": 1596113223,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 910,
        "index": "C",
        "name": "Minimum Sum",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 910,
        "members": [
            {
                "handle": "luogu_bot3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1513940700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<cstring>\n#include<cstdio>\n#include<map>\n#include<algorithm>\nusing namespace std;\nchar dic[1000][10];\nint cnt_appear[15][10];\nstruct node\n{\n    int index;\n    int rate;\n};\nint f(int x)\n{\n    int res = 1;\n    for(int i = 1; i <= x; i ++)\n    {\n        res *=10;\n    }\n    return res;\n}\nmap<char,int>mymap;\nbool cmp(node n1, node n2)\n{\n    return n1.rate > n2.rate;\n}\nnode rating[15];\nbool can_not_zero[15];\nint main()\n{\n    for(int i = 1; i <= 10; i ++)\n    {\n        rating[i].index = i;\n    }\n    int n;\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; i ++)\n    {\n        scanf(\"%s\", dic[i]);\n        can_not_zero[dic[i][0] - \u2018a\u2018 + 1] = 1;\n        int temp_len = strlen(dic[i]);\n        for(int j = 0; j < temp_len; j ++)\n        {\n            rating[dic[i][j] - \u2018a\u2018 + 1].rate += f(temp_len - j);\n        }\n    }\n    sort(rating + 1,rating + 11, cmp);\n    int flag = 0;\n    int rk = 1;\n    for(int i = 1; i <= 10; i ++)\n    {\n        if(flag == 0)\n        {\n            if(can_not_zero[rating[i].index] == 1)\n            {\n                char c = rating[i].index + \u2018a\u2018 - 1;\n                mymap[c] = rk;\n                rk++;\n            }\n            else\n            {\n                char c = rating[i].index + \u2018a\u2018 - 1;\n                mymap[c] = 0;\n                flag = 1;\n            }\n        }\n        else if(flag == 1)\n        {\n            char c = rating[i].index + \u2018a\u2018 - 1;\n            mymap[c] = rk;\n            rk++;\n        }\n    }\n    long long sum = 0;\n    for(int i = 1; i <= n; i ++)\n    {\n        long long temp_sum = 0;\n        for(int j = 0; j < strlen(dic[i]); j ++)\n        {\n            temp_sum = temp_sum * 10 + mymap[dic[i][j]];\n        }\n        sum+=temp_sum;\n    }\n    printf(\"%lld\\n\",sum);\n    return 0;\n}"
}