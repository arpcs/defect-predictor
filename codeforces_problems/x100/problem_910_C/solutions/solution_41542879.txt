{
    "id": 41542879,
    "contestId": 910,
    "creationTimeSeconds": 1534124820,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 910,
        "index": "C",
        "name": "Minimum Sum",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 910,
        "members": [
            {
                "handle": "DragoonKiller"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1513940700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 107,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\n\r\n#include <chrono>\r\nusing namespace std::chrono;\r\n\r\ntypedef long long ll;\r\ntypedef unsigned int uint;\r\ntypedef unsigned short ushort;\r\ntypedef unsigned long long ull;\r\ntypedef double db;\r\ntypedef unsigned char uchar;\r\n\r\nusing namespace std;\r\n\r\n#define var auto\r\n#define rep(i,a,b) for(int i=a, lim__lim=(b); i<=lim__lim; i++)\r\n#define repr(i,a,b) for(int i=b,lim__lim=(a); i>=lim__lim; i--)\r\n\r\n// #define BUF_SIZE 1000000\r\n// bool IOerror = 0;\r\n// inline char nc()\r\n// {\r\n// \tstatic char buf[BUF_SIZE], *p1 = buf + BUF_SIZE, *pend = buf + BUF_SIZE;\r\n// \tif(p1 == pend) {\r\n// \t\tp1 = buf;\r\n// \t\tpend = buf + fread(buf, 1, BUF_SIZE, stdin);\r\n// \t\tif(pend == p1) { IOerror = 1; return -1; } }\r\n// \treturn *p1++;\r\n// }\r\n// inline bool blank(char ch) { return ch == ' ' || ch == '\\n' || ch == '\\r' || ch == '\\t'; }\r\n// #undef BUF_SIZE\r\n\r\n// inline int getint() {\r\n// \tint x=0; char ch; int sgn = 1;\r\n// \twhile(blank(ch = nc())); if(IOerror) return 0; if(ch=='-')sgn=-1,ch=nc();\r\n// \tfor(x = ch - '0'; (ch = nc()) >= '0' && ch <= '9'; x = x * 10 + ch - '0');\r\n// \treturn x * sgn;\r\n// }\r\n\r\n// inline int getint() { int x; scanf(\"%d\",&x); return x; }\r\n\r\ninline int getint()\r\n{\r\n    char c = getchar(); int x = 0, minus = 1;\r\n    while(c != EOF && c != '-' && !isdigit(c)) c = getchar();\r\n    if(c == '-') { minus = -1; c = getchar(); }\r\n    while(isdigit(c)) { x = x * 10 + c - '0'; c = getchar(); }\r\n    return x * minus;\r\n}\r\n\r\ninline ll getll() { ll x; scanf(\"%lld\",&x); return x; }\r\ninline db getdb() { static double x; scanf(\"%lf\",&x); return x; }\r\ntemplate<typename T> void updmax(T& a, T const& b) { a = max(a, b); }\r\ntemplate<typename T> void updmin(T& a, T const& b) { a = min(a, b); }\r\ntemplate<typename T> int Descr(T* from, T* to)\r\n{ sort(from, to); return (int)(unique(from, to) - from); }\r\ntemplate<typename T> int LBound(T* from, T* to, T const& val)\r\n{ return (int)(lower_bound(from, to, val) - from); }\r\ntemplate<typename T> int UBound(T* from, T* to, T const& val)\r\n{ return (int)(upper_bound(from, to, val) - from); }\r\ntime_point<system_clock> timing;\r\nvoid TimingBegin() { timing = system_clock::now(); }\r\nvoid TimingEnd(const char* c = \"time:\")\r\n{\r\n    var end = system_clock::now();\r\n    var d = duration_cast<microseconds>(end - timing);\r\n    printf(\"%s %.10f\\n\", c, double(d.count()) * microseconds::period::num / microseconds::period::den);\r\n}\r\nvoid TimingTick(const char* c = \"time:\") { TimingEnd(c); TimingBegin(); }\r\nvoid bout(int x) { while(x) printf(\"%d\", x&1), x>>=1; }\r\n\r\n// ======================================================================================\r\n\r\nconst int INF = 1<<30;\r\n\r\nchar inp[10];\r\nint v[1005][10];\r\nint len[1005];\r\nbool used[10];\r\nbool z[10];\r\nll g[10];\r\nll tpw[11];\r\n\r\nint main()\r\n{\r\n    tpw[0] = 1; rep(i, 1, 10) tpw[i] = 10 * tpw[i-1];\r\n    \r\n    int n = getint();\r\n    rep(i, 0, n-1)\r\n    {\r\n        scanf(\"%s\", inp);\r\n        rep(j, 0, len[i] = strlen(inp)) v[i][j] = inp[j] - 'a';\r\n    }\r\n    \r\n    // rep(i, 0, n-1) { rep(j, 0, len[i]-1) printf(\"%d\", v[i][j]); printf(\"\\n\"); }\r\n    \r\n    rep(i, 0, 9) z[i] = true;\r\n    rep(i, 0, n-1) z[v[i][0]] = false;\r\n    rep(i, 0, n-1) rep(j, 0, len[i]-1) g[v[i][j]] += tpw[len[i] - j - 1];    \r\n    \r\n    ll res = 0;\r\n    rep(i, 0, 9)\r\n    {\r\n        int mxi = -1;\r\n        rep(j, 0, 9) if(!used[j]) if(i!=0 || z[j])\r\n        {\r\n            // printf(\"acc : %c\\n\", j + 'a');\r\n            if(mxi == -1 || g[j] > g[mxi])\r\n            {\r\n                mxi = j;\r\n            }\r\n        }\r\n        \r\n        res += g[mxi] * i;\r\n        used[mxi] = true;\r\n        // printf(\"asgn %c : %d\\n\", mxi + 'a', i);\r\n    }\r\n    \r\n    printf(\"%lld\\n\", res);\r\n    \r\n    return 0;\r\n}\r\n"
}