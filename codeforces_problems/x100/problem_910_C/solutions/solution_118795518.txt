{
    "id": 118795518,
    "contestId": 910,
    "creationTimeSeconds": 1623148769,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 910,
        "index": "C",
        "name": "Minimum Sum",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 910,
        "members": [
            {
                "handle": "r04r"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1513940700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 107,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 204800,
    "source": "// clang-format off\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>  \r\n#include <ext/pb_ds/tree_policy.hpp>   \r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n#pragma GCC target (\"avx2\")\r\n#pragma GCC optimization (\"O3\")\r\n#pragma GCC optimization (\"unroll-loops\")\r\n\r\n/**TEMPLATE START: DEBUG PRINT -----------------------------------------------*/\r\n\r\n#ifdef LOCAL\r\n#define _NTH_ARG(_1, _2, _3, _4, _5, _6, N, ...) N\r\n#define _FE_1(_CALL, x) _CALL(x)\r\n#define _FE_2(_CALL, x, ...) _CALL(x) _FE_1(_CALL, __VA_ARGS__)\r\n#define _FE_3(_CALL, x, ...) _CALL(x) _FE_2(_CALL, __VA_ARGS__)\r\n#define _FE_4(_CALL, x, ...) _CALL(x) _FE_3(_CALL, __VA_ARGS__)\r\n#define _FE_5(_CALL, x, ...) _CALL(x) _FE_4(_CALL, __VA_ARGS__)\r\n#define _FE_6(_CALL, x, ...) _CALL(x) _FE_5(_CALL, __VA_ARGS__)\r\n#define FOR_EACH_MACRO(MACRO, ...)                                  \\\r\n    _NTH_ARG(__VA_ARGS__, _FE_6, _FE_5, _FE_4, _FE_3, _FE_2, _FE_1) \\\r\n    (MACRO, __VA_ARGS__)\r\n#define watch(x) cerr << \"\\033[1;32m\" #x \" = \\033[1;34m\" << (x) << \"\\033[0m; \";\r\n#define debug(...)                                         \\\r\n    cerr << \"\\033[2;31mLine \" << __LINE__ << \": \\033[0;m\"; \\\r\n    FOR_EACH_MACRO(watch, __VA_ARGS__)                     \\\r\n    cerr << endl\r\n#else\r\n#define debug(...)\r\n#endif\r\n\r\ntemplate <class T1, class T2>\r\nostream &operator<<(ostream &os, const pair<T1, T2> &p) {\r\n    return os << '{' << p.first << \", \" << p.second << '}';\r\n}\r\ntemplate <class T, class = decltype(begin(declval<T>())),\r\n          class = enable_if_t<!is_same<T, string>::value>>\r\nostream &operator<<(ostream &os, const T &c) {\r\n    os << '[';\r\n    for (auto it = begin(c); it != end(c); ++it)\r\n        os << (it == begin(c) ? \"\" : \", \") << *it;\r\n    return os << ']';\r\n}\r\ntemplate <class T>\r\nostream &operator<<(ostream &os, const vector<vector<T>> &v) {\r\n    os << \"\\n[\\n\";\r\n    for (int i = 0; i < v.size(); i++) {\r\n        os << v[i];\r\n        os << '\\n';\r\n    }\r\n    return os << ']';\r\n}\r\n\r\n/**TEMPLATE END: DEBUG PRINT -----------------------------------------------*/\r\n\r\n/**TEMPLATE START: SHORT HAND -----------------------------------------------*/\r\n#define pb                push_back\r\n#define ppb               pop_back\r\n#define all(x)            (x).begin(),(x).end()\r\n#define sz(x)             (int)((x).size())\r\n#define fr                first\r\n#define sc                second\r\n#define pii               pair<int,int>\r\n#define FOR(i, a, b)      for(int i = (a); i < (b); i++)\r\n#define FORE(i, a, b)     for(int i = (a); i <= (b); i++)\r\n#define FORD(i, a, b)     for(int i = (a); i >= (b); i--)\r\n#define FASTIO            ios_base::sync_with_stdio(false); cin.tie(NULL)\r\n#define EPS               (double)(0.000000001)\r\n#define INF               (long long)(1e18)\r\n#define MOD               1000000007\r\n#define MOD2              998244353\r\n#define decimal(v, d)     fixed << setprecision(d) << v\r\n\r\ntemplate <typename T>\r\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n \r\ntemplate <typename T>\r\nusing ordered_multiset = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>; \r\n/**TEMPLATE END: SHORT HAND -----------------------------------------------*/\r\n\r\n/**TEMPLATE START: MISC -----------------------------------------------*/\r\nstruct custom_hash {\r\n    static uint64_t splitmix64(uint64_t x) {\r\n        x += 0x9e3779b97f4a7c15;\r\n        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n        return x ^ (x >> 31);\r\n    }\r\n \r\n    size_t operator()(uint64_t x) const {\r\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n        return splitmix64(x + FIXED_RANDOM);\r\n    }\r\n};\r\n \r\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n/**TEMPLATE END: MISC -----------------------------------------------*/\r\n\r\nvoid solve();\r\n\r\nint32_t main() {\r\n    FASTIO;\r\n#ifndef ONLINE_JUDGE\r\n    (void)!freopen(\"input.txt\", \"r\", stdin);\r\n    (void)!freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n\r\n    int t = 1;\r\n    // cin >> t;\r\n    while (t--) {\r\n        solve();\r\n        cout << \"\\n\";\r\n    }\r\n    return 0;\r\n}\r\n\r\n// clang-format on\r\n\r\n#define int long long\r\n\r\nvoid solve()\r\n{\r\n    int n;\r\n    cin >> n;\r\n\r\n    vector<string> a(n);\r\n    vector<bool> not_zero(26);\r\n    for (auto& s : a) {\r\n        cin >> s;\r\n        not_zero[s[0] - 'a'] = true;\r\n        string pad(6 - sz(s), '.');\r\n        s = pad + s;\r\n    }\r\n\r\n    debug(a);\r\n\r\n    vector<map<char, int>> freq(6);\r\n\r\n    FOR(i, 0, 6)\r\n    {\r\n        for (string& s : a) {\r\n            if (i < sz(s) && s[i] != '.') {\r\n                freq[i][s[i]]++;\r\n            }\r\n        }\r\n    }\r\n\r\n    vector<pair<vector<int>, char>> ids;\r\n\r\n    debug(freq);\r\n\r\n    for (char ch = 'a'; ch <= 'j'; ch++) {\r\n        vector<int> frq;\r\n        FOR(i, 0, 6)\r\n        {\r\n            frq.push_back(freq[i][ch]);\r\n        }\r\n        if (count(all(frq), 0) != 6)\r\n            ids.push_back({ frq, ch });\r\n    }\r\n\r\n    debug(ids);\r\n\r\n    auto contribution = [&](const vector<int>& str) -> int {\r\n        int pw = 1;\r\n        int cont = 0;\r\n        for (int i = 5; i >= 0; i--) {\r\n            cont += (str[i]) * pw;\r\n            pw *= 10;\r\n        }\r\n        debug(str, cont);\r\n        return cont;\r\n    };\r\n\r\n    vector<pair<char, int>> contrib;\r\n\r\n    for (auto& [str, ch] : ids) {\r\n        int cont = contribution(str);\r\n        contrib.push_back({ ch, cont });\r\n    }\r\n\r\n    int min_sum = INF;\r\n\r\n    vector<int> perm(sz(ids) + 1);\r\n    for (int i = 0; i < sz(ids) + 1; i++) {\r\n        perm[i] = i;\r\n    }\r\n\r\n    if (perm.back() == 10) {\r\n        perm.pop_back();\r\n    }\r\n\r\n    debug(perm);\r\n\r\n    do {\r\n        int cost = 0;\r\n        bool skip = false;\r\n        int i = 0;\r\n        for (auto& [ch, cont] : contrib) {\r\n            if (not_zero[ch - 'a'] && perm[i] == 0) {\r\n                skip = true;\r\n                break;\r\n            } else {\r\n                cost += (cont * perm[i]);\r\n                i++;\r\n            }\r\n        }\r\n        if (!skip) {\r\n            min_sum = min(min_sum, cost);\r\n        }\r\n    } while (next_permutation(all(perm)));\r\n\r\n    cout << min_sum;\r\n}\r\n"
}