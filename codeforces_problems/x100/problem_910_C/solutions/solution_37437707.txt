{
    "id": 37437707,
    "contestId": 910,
    "creationTimeSeconds": 1524057562,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 910,
        "index": "C",
        "name": "Minimum Sum",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 910,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1513940700
    },
    "programmingLanguage": "MS C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 3481600,
    "source": "#include<iostream>\n#include<cstring>\nusing namespace std;\n\nconst int MAXN = 1000 + 10;\nconst int MAXS = 6 + 10;\n\nchar s[MAXN][MAXS];\nint len[MAXN];\nint n;\nint letter[10];\nint c[10];\nbool number[10];\nbool flag[13];\nbool head[10];\n\nvoid sort() {\n\tfor (int i = 0; i < n - 1; i++) {\n\t\tint k = i;\n\t\tfor (int j = i + 1; j < n; j++) {\n\t\t\tif (len[j] > len[k])k = j;\n\t\t}\n\t\tswap(len[i], len[k]);\n\t\tchar temp[MAXS];\n\t\tstrcpy(temp, s[i]);\n\t\tstrcpy_s(s[i], s[k]);\n\t\tstrcpy_s(s[k], temp);\n\t}\n}\n\nint minnum(int a, int b) {\n\tfor (int i = a; i <= b; i++) {\n\t\tif (number[i] == false) {\n\t\t\tnumber[i] = true;\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\nvoid cccc() {\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < len[i]; j++) {\n\t\t\tc[s[i][j] - 'a']++;\n\t\t}\n\t}\n}\nint char2num(int x) {\n\tint sum = 0;\n\tfor (int i = 0; i < len[x]; i++) {\n\t\tsum *= 10;\n\t\tsum += (letter[s[x][i] - 'a']);\n\t}\n\treturn sum;\n}\n\nvoid judge(int x) {\n\tint count[10];\n\tmemset(count, 0, sizeof(count));\n\tfor (int i = 0; len[i] >= x; i++) {\n\t\tcount[s[i][len[i] - x] - 'a']++;\n\t}\n\twhile (1) {\n\t\tint flag1 = 0, max = 0, maxi = 11;\n\t\tfor (int j = 0; j < 10; j++) {\n\t\t\tif (flag[j] == false && count[j] != 0) {\n\t\t\t\tif (count[j] > max || (count[j] == max && c[j] > c[maxi])) {\n\t\t\t\t\tflag[maxi] = false;\n\t\t\t\t\tmaxi = j;\n\t\t\t\t\tmax = count[j];\n\t\t\t\t\tflag[j] = true;\n\t\t\t\t\tflag1 = 1;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\tif (flag1 == 0)break;\n\t\tif (head[maxi] == true) {\n\t\t\tletter[maxi] = minnum(1, 10);\n\t\t}\n\t\telse {\n\t\t\tletter[maxi] = minnum(0, 10);\n\t\t}\n\t}\n}\n\nint main(void) {\n\tmemset(flag, false, sizeof(flag));\n\tmemset(number, false, sizeof(number));\n\tmemset(c, 0, sizeof(c));\n\tcin >> n;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> s[i];\n\t\tlen[i] = strlen(s[i]);\n\t}\n\tsort();\n\tmemset(flag, false, sizeof(flag));\n\tfor (int i = 0; i < n; i++) {\n\t\thead[s[i][0] - 'a'] = true;\n\t}\n\tcccc();\n\tfor (int i = 6; i >= 1; i--) {\n\t\tjudge(i);\n\t}\n\n\tint sum = 0;\n\tfor (int i = 0; i < n; i++) {\n\t\tsum += char2num(i);\n\t}\n\tcout << sum << endl;\n\treturn 0;\n}"
}