{
    "id": 33594241,
    "contestId": 910,
    "creationTimeSeconds": 1514122084,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 910,
        "index": "C",
        "name": "Minimum Sum",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 910,
        "members": [
            {
                "handle": "Leemur"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1513940700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 107,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 2150400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint ans[10];\r\nbool used[10];\r\nstring s[1000];\r\nlong long pref[10];\r\nvector < int > col;\r\npair < long long, int > sum[10];\r\n\r\nvoid init()\r\n{\r\n    pref[0] = 1;\r\n    for (int i = 1; i < 10; i++)\r\n        pref[i] = pref[i - 1] * 10;\r\n\r\n    for (int i = 0; i < 10; i++)\r\n        sum[i].second = i;\r\n\r\n    fill(ans, ans + 10, -1);\r\n\r\n    for (int i = 9; i > -1; i--)\r\n        col.push_back(i);\r\n}\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    int n;\r\n    cin >> n;\r\n    for (int i = 0; i < n; i++)\r\n        cin >> s[i];\r\n\r\n    init();\r\n\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        for (int j = 0; j < s[i].size(); j++)\r\n            sum[s[i][j] - 'a'].first += pref[s[i].size() - j - 1];\r\n\r\n        used[s[i][0] - 'a'] = true;\r\n    }\r\n\r\n    sort(sum, sum + 10);\r\n    reverse(sum, sum + 10);\r\n\r\n    for (int i = 0; i < 10; i++)\r\n    {\r\n        int ind = sum[i].second;\r\n        if (used[ind] && col.back() == 0)\r\n            swap(col.back(), col[max(0, (int)col.size() - 2)]);\r\n\r\n        ans[ind] = col.back();\r\n        col.pop_back();\r\n    }\r\n\r\n    long long answer = 0;\r\n    for (int i = 0; i < n; i++)\r\n        for (int j = 0; j < s[i].size(); j++)\r\n            answer += ans[s[i][j] - 'a'] * pref[s[i].size() - j - 1];\r\n\r\n    cout << answer;\r\n    return 0;\r\n}\r\n"
}