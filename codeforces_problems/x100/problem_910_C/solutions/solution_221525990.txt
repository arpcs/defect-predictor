{
    "id": 221525990,
    "contestId": 910,
    "creationTimeSeconds": 1693634888,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 910,
        "index": "C",
        "name": "Minimum Sum",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 910,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1513940700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 107,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "/*If we keep holding onto yesterday, what are we going to be tomorrow?*/\n\n\n#include<bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\nusing namespace std;\n#define int long long int \nbool debugg = false;\n#define dbg if(debugg)\n#define F first \n#define S second \ntemplate <typename T>\nusing order_set = tree<T, null_type,less<T>, rb_tree_tag,tree_order_statistics_node_update>;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());  \n\nvoid solve()\n{\n    int n;\n    cin >> n;\n    vector<string>s(n);\n    map<char,bool>tx;\n    map<int,int>mp;\n    for(int i = 0 ; i < n ; i ++){\n        cin >> s[i];\n        tx[s[i][0]] = 1;\n        int cur = 0;\n        reverse(s[i].begin() , s[i].end());\n        for(int j = 0 ; j < s[i].size() ; j ++){\n            mp[s[i][j]] += pow(10,j);\n        }\n    }\n\n    vector<pair<int,char>>v;\n    for(char c = 'a' ; c <= 'z' ; c ++){\n        if(mp[c]) v.push_back({mp[c] , c});\n    } \n\n    sort(v.rbegin() , v.rend());\n    vector<int>vis(100);\n    int ans = 0;\n    for(auto i : v){\n        int mex = 0;\n        if(tx[i.S]) mex = 1;\n        while(vis[mex]) mex ++;\n        vis[mex] = 1;\n        ans += mex * i.F;\n    }\n\n    cout<<ans<<\"\\n\";\n\n    \n}\n\n\n\nint32_t main()\n{\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n        \n    int t  = 1;\n    //cin>>t;\n    \n    while(t--){\n\n        solve();\n\n    }\n\n    return 0;\n\n}\n \t \t \t \t \t\t   \t \t \t     \t\t\t\t\t\t\t"
}