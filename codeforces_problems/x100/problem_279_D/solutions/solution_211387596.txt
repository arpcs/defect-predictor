{
    "id": 211387596,
    "contestId": 279,
    "creationTimeSeconds": 1688010720,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 279,
        "index": "D",
        "name": "The Minimum Number of Variables",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    "author": {
        "contestId": 279,
        "members": [
            {
                "handle": "Herself64"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1362411000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 40038400,
    "source": "// LUOGU_RID: 113512129\n#include<bits/stdc++.h>\r\n#define il inline\r\n#define re register\r\n#define ll long long\r\n#define ull unsigned ll\r\n#define uint unsigned int\r\n#define umap unordered_map\r\n#define uset unordered_set\r\n#define mset multiset\r\n#define IT iterator\r\n#define pr pair\r\n#define pq priority_queue\r\n#define mpr make_pair\r\n#define pii pr <int, int>\r\n#define graph std :: vector <std :: pii>\r\nconst int N = 1e7 + 5, maxlog = 30, inf = 0x3f3f3f3f;\r\nconst double pi = acos(-1);\r\nil int R () {\r\n    int s = 0, f = 1; char ch = getchar();\r\n    while (!isdigit(ch)) f = (ch == '-') ? -1 : 1, ch = getchar();\r\n    while (isdigit(ch)) s = (s << 3) + (s << 1) + (ch ^ 48), ch = getchar(); \r\n    return s * f; \r\n}\r\nint f[N], a[maxlog], n;\r\nil int dfs (int u, int step) {\r\n    if (f[u] != -1) return f[u];\r\n    int num = __builtin_popcount(u), val = inf;\r\n    for (int i = 0; i < step; i++) {\r\n        for (int j = 0; j <= i; j++) {\r\n            if (a[i] + a[j] == a[step]) {\r\n                val = std :: min(val, std :: max(num, dfs(u ^ (1 << step) | (1 << i) | (1 << j) | (1 << (step - 1)), step - 1)));\r\n            }\r\n        }\r\n    }\r\n    return (f[u] = val);\r\n}\r\nsigned main () {\r\n    n = R();\r\n    for (int i = 0; i < n; i++) a[i] = R();\r\n    std :: memset(f, -1, sizeof(f));\r\n    f[0] = f[1] = 1;\r\n    int ans = dfs(1 << (n - 1), n - 1);\r\n    return !printf(\"%d\\n\", (ans == inf) ? -1 : ans);\r\n}"
}