{
    "id": 232869376,
    "contestId": 279,
    "creationTimeSeconds": 1700058210,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 279,
        "index": "D",
        "name": "The Minimum Number of Variables",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    "author": {
        "contestId": 279,
        "members": [
            {
                "handle": "MOon_Or"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1362411000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 50483200,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define fast_io ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\r\n#define ll long long int\r\n#define F first\r\n#define S second\r\nconst int maxn = 8388608 + 10;\r\nint a[100], pp[maxn];\r\nbool dp[maxn], dp2[maxn];\r\nvector <int> tmp;\r\nint main(){\r\n\tfast_io;\r\n\tint n; \r\n\tcin >> n;\r\n\r\n\tfor(int i = 0; i < n; i++){\r\n\t\tcin >> a[i];\r\n\t}\r\n\t\r\n\tfor(int mask = 0; mask < (1 << n); mask++){\r\n\t\tint ind1 = __builtin_ctz(mask), ind2 = 31 - (__builtin_clz(mask));\r\n\t\r\n\t\tpp[mask] = (pp[(mask ^ (1 << ind1))] | pp[(mask ^ (1 << ind2))]);\r\n\t\tfor(int i = 0; i < n; i++){\r\n\t\t\tif(a[i] == a[ind1] + a[ind2]){\r\n\t\t\t\tpp[mask] = (pp[mask] | (1 << i));\r\n\t\t\t}\r\n\t\t} \r\n\t\t\r\n\t}\r\n\t\r\n\tint ans = 1e9;\r\n\tdp[1] = 1;\r\n\tfor(int mask = 1; mask < (1 << n); mask++){\r\n\t\tfor(int i = n - 1; i >= 0; i--){\r\n\t\t\tif((mask >> i) & 1){\r\n\t\t\t\ttmp.push_back(i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tint bt = tmp[0] + 1;\r\n\t\tif(dp[mask] == 1 && (pp[mask] & (1 << (bt)))){\r\n\t\t\tint t = (mask | (1 << bt));\r\n\t\t\tfor(auto j : tmp){\r\n\t\t\t\tdp[t ^ (1 << j)] = 1;\r\n\t\t\t}\r\n\t\t\tdp[t] = 1;\r\n\t\t}\r\n\t\tif(bt == n && dp[mask] == 1)\r\n\t\t\tans = min(ans, __builtin_popcount(mask));\r\n\t\ttmp.clear();\r\n\t}\r\n\tif(ans > n){\r\n\t\tcout << -1; return 0;\r\n\t}\r\n\tcout << ans;\r\n}\r\n"
}