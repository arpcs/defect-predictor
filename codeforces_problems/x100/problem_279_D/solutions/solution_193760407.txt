{
    "id": 193760407,
    "contestId": 279,
    "creationTimeSeconds": 1676489713,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 279,
        "index": "D",
        "name": "The Minimum Number of Variables",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    "author": {
        "contestId": 279,
        "members": [
            {
                "handle": "parsa-golestani"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1362411000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 794,
    "memoryConsumedBytes": 134451200,
    "source": "#include <iostream>\r\nusing namespace std;\r\n\r\nconst int N = 24;\r\n\r\nint dp[1 << N], ok[N][N], ok_mask[1 << N], a[N];\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);\r\n    int n; cin>>n;\r\n    for(int i=1; i<=n; i++)\r\n        cin>>a[i];\r\n    for(int i=0; i<=n; i++)\r\n        for(int j=0; j<=n; j++)\r\n            for(int k=0; k<=n; k++)\r\n                if(a[i] == a[j] + a[k])\r\n                    ok[i][j] += (1 << k);\r\n    for(int mask=1; mask<(1 << (n+1)); mask++)\r\n    {\r\n        int ind = 31 - __builtin_clz(mask) + 1;\r\n        if(ind == n+1)\r\n            ok_mask[mask] = 1;\r\n        else\r\n        {\r\n            for(int i=0; i<=n; i++)\r\n                if((mask & (1 << i)) && (mask & ok[ind][i]))\r\n                {\r\n                    ok_mask[mask] = 1;\r\n                    break;\r\n                }\r\n        }\r\n    }\r\n\r\n    for(int mask=(1 << (n+1))-1; mask>=1; mask--)\r\n    {\r\n        if(ok_mask[mask] == 0)\r\n        {\r\n            dp[mask] = 1000;\r\n            continue;\r\n        }\r\n\r\n        int ind = 31 - __builtin_clz(mask);\r\n        if(ind == n)\r\n        {\r\n            dp[mask] = __builtin_popcount(mask);\r\n            continue;\r\n        }\r\n\r\n        dp[mask] = 1000;\r\n        for(int i=0; i<=ind; i++)\r\n            if((mask & (1 << i)))\r\n                dp[mask] = min(dp[mask], min(dp[((mask ^ (1 << i)) | (1 << (ind+1)))], (i == 0 ? dp[mask + (1 << (ind+1))] : 1000)) );\r\n    }\r\n\r\n    int ans = min(dp[2], dp[3]);\r\n    cout<<(ans == 1000 ? -1 : ans);\r\n    return 0;\r\n}\r\n"
}