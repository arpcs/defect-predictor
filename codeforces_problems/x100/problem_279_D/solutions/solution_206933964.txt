{
    "id": 206933964,
    "contestId": 279,
    "creationTimeSeconds": 1684841453,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 279,
        "index": "D",
        "name": "The Minimum Number of Variables",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    "author": {
        "contestId": 279,
        "members": [
            {
                "handle": "pecksniff"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1362411000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 33587200,
    "source": "// LUOGU_RID: 111085319\n#include<bits/stdc++.h>\r\n#define endl \"\\n\"\r\nusing namespace std;\r\nusing ll = long long;\r\nconst int N = 23;\r\nconst int INF = 0x3f3f3f3f;\r\nint dp[(1<<N)+10],arr[N+10];\r\nint dfs(int x,int pos)\r\n{\r\n    if(dp[x])\r\n    {\r\n        return dp[x];\r\n    }\r\n    int res=INF,bit=__builtin_popcount(x);\r\n    for(int i=0;i<pos;i++)\r\n    {\r\n        for(int j=0;j<pos;j++)\r\n        {\r\n            if(arr[i]+arr[j]==arr[pos])\r\n            {\r\n                res=min(res,max(bit,dfs((x^(1<<pos))|(1<<i)|(1<<j)|(1<<(pos-1)),pos-1)));\r\n            }\r\n        }\r\n    }\r\n    return dp[x]=res;\r\n}\r\nvoid solve(void)\r\n{\r\n    int n;\r\n    cin>>n;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        cin>>arr[i];\r\n    }\r\n    dp[1]=1;\r\n    int ans=dfs(1<<(n-1),n-1);\r\n    if(ans==INF)\r\n    {\r\n        cout<<-1<<endl;\r\n    }\r\n    else\r\n    {\r\n        cout<<ans<<endl;\r\n    }\r\n}\r\nint main(void)\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    solve();\r\n    return 0;\r\n}"
}