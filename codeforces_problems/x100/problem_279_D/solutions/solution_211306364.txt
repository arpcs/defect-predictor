{
    "id": 211306364,
    "contestId": 279,
    "creationTimeSeconds": 1687932266,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 279,
        "index": "D",
        "name": "The Minimum Number of Variables",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    "author": {
        "contestId": 279,
        "members": [
            {
                "handle": "zdc123456"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1362411000
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 33587200,
    "source": "// LUOGU_RID: 113451328\n#include <bits/stdc++.h>\nusing namespace std;\nvoid file(){\n\tfreopen(\"1.in\", \"r\", stdin);\n\tfreopen(\"1.out\", \"w\", stdout);\n}\nusing ll = long long;\nusing ull = unsigned long long;\nconst int nMax = 25, stateMax = (1 << 23) + 5;\nint n;\narray<int, nMax> a;\narray<vector<pair<int, int>>, nMax> vec;\narray<int, stateMax> fl;\nbool dfs(int cur, int w){\n\tif(!((cur >> w) & 1)) return 0;\n\tif(fl[cur]) return fl[cur] > 0;\n\tif(cur == (1 << w + 1) - 1) return 1;\n\tfor(auto k : vec[w]){\n\t\tint x = k.first, y = k.second, wx = (cur >> x) & 1, wy = (cur >> y) & 1;\n\t\tif(wx && wy){\n\t\t\tif(dfs(cur ^ (1 << w), w - 1)) return fl[cur] = 1;\n\t\t\tfor(int i = 0; i < w; i++)\n\t\t\t\tif((!((cur >> i) & 1)) && dfs(cur ^ (1 << w) ^ (1 << i), w - 1))\n\t\t\t\t\treturn fl[cur] = 1;\n\t\t}\n\t\tif((x == y) && dfs(cur ^ (1 << w) ^ (1 << x), w - 1))\n\t\t\treturn fl[cur] = 1;\n\t\tif(wx && dfs(cur ^ (1 << w) ^ (1 << y), w - 1))\n\t\t\treturn fl[cur] = 1;\n\t\tif(wy && dfs(cur ^ (1 << w) ^ (1 << x), w - 1))\n\t\t\treturn fl[cur] = 1;\n\t}\n\treturn fl[cur] = -1, 0;\n}\nint main(){\n//\tfile();\n\tios::sync_with_stdio(0);\n\tcin >> n;\n\tfor(int i = 0; i < n; i++) cin >> a[i];\n\tfor(int i = n - 1; i >= 0; i--)\n\t\tif(a[i] % a[0]) return cout << \"-1\\n\", 0;\n\t\telse a[i] /= a[0];\n\tfor(int i = 0; i < n; i++)\n\t\tfor(int j = 0; j < i; j++)\n\t\t\tfor(int k = 0; k <= j; k++)\n\t\t\t\tif(a[i] == a[j] + a[k])\n\t\t\t\t\tvec[i].emplace_back(j, k);\n\tfor(int i = 1; i < n; i++)\n\t\tif(vec[i].empty()) return cout << \"-1\\n\", 0;\n\tfl[1] = 1;\n\tint res = 100;\n\tfor(int i = (1 << n - 1); i < (1 << n); i++){\n\t\tint pc = __builtin_popcount(i);\n\t\tif(pc >= res) continue;\n\t\tif(dfs(i, n - 1)) res = min(res, pc);\n\t}\n\tcout << ((res == 100) ? -1 : res) << \"\\n\";\n\treturn 0;\n}\n"
}