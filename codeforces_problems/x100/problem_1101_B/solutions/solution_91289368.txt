{
    "id": 91289368,
    "contestId": 1101,
    "creationTimeSeconds": 1598709107,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1101,
        "index": "B",
        "name": "Accordion",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1101,
        "members": [
            {
                "handle": "MJH_-O-_M87"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1547217300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 588,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 1024000,
    "source": "/*-------------------------------------------*\\\r\n * @ mdjobayairhossain2020\r\n * Author : MD. JOBAYAIR HOSSAIN\r\n * Created: August/29/2020   19:44:41(UTC+6)\r\n-*-------------------------------------------*/\r\n#include <bits/stdc++.h>\r\n#include <numeric>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n\r\nint main()\r\n{   ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n\r\n    string str_01;\r\n    cin>>str_01;\r\n    bool found_b1 = false, found_b2 = false;\r\n    int Count = 0, Indx_b1 = -1, Indx_b2 = -1, Indx_c1 = -1, Indx_c2 = -1;\r\n    for(int i=0; i<str_01.size(); i++){\r\n        if(found_b1 == true){\r\n            if(str_01[i] == ':'){\r\n                Indx_c1 = i; // Marking the first valid opening colon\r\n                break;\r\n            }\r\n        }\r\n        else{\r\n            if(str_01[i] == '['){\r\n                found_b1 = true;\r\n                Indx_b1 = i; // Marking the first valid opening bracket\r\n            }\r\n            else{\r\n                str_01[i] = '#';\r\n            }\r\n        }\r\n    }\r\n    for(int j=str_01.size(); j>=0; j--){\r\n        if(found_b2 == true){\r\n            if(str_01[j] == ':'){\r\n                Indx_c2 = j; // Marking the last valid ending colon\r\n                break;\r\n            }\r\n        }\r\n        else{\r\n            if(str_01[j] == ']'){\r\n                found_b2 = true;\r\n                Indx_b2 = j; // Marking the last valid ending bracket\r\n            }\r\n            else{\r\n                str_01[j] = '#';\r\n            }\r\n        }\r\n    }\r\n    if(Indx_b1 != Indx_b2 && Indx_c1 != Indx_c2 && Indx_b1 != -1 && Indx_b2 != -1 && Indx_c1 != -1 && Indx_c2 != -1){ // each of them should exist and separate from each other\r\n        Count += 4;\r\n        for(int x=(Indx_c1+1); x<Indx_c2; x++){ // counting the number of \"|\" from opening colon to ending colon.\r\n            if(str_01[x] == '|'){\r\n                Count++;\r\n            }\r\n        }cout<<Count<<\"\\n\";\r\n    }\r\n    else{\r\n        cout<<\"-1\\n\";\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}