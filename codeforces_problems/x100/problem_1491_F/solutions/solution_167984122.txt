{
    "id": 167984122,
    "contestId": 1491,
    "creationTimeSeconds": 1660314980,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1491,
        "index": "F",
        "name": "Magnets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1491,
        "members": [
            {
                "handle": "Trial_light"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1614519300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 79,
    "timeConsumedMillis": 248,
    "memoryConsumedBytes": 0,
    "source": "//#pragma GCC optimize(3)\r\n#include<iostream>\r\n#include<climits>\r\n#include<cstdio>\r\n#include<cstring>\r\n#include<cmath>\r\n#include<ctime>\r\n#include<algorithm>\r\n#include<queue>\r\n#include<map>\r\n#include<set>\r\n#include<vector>\r\n//#define int long long\r\nusing namespace std;\r\nconst int INF=INT_MAX;\r\n//const int mod=998244353;\r\nvector<int> ans;\r\nint T,n;\r\nint ASK(int x,int y,int xx,int yy) {\r\n\tint as;\r\n\tprintf(\"? %d %d\\n\",y-x+1,yy-xx+1);\r\n\tfor(int i=x;i<=y;i++) printf(\"%d \",i);puts(\"\");\r\n\tfor(int i=xx;i<=yy;i++) printf(\"%d \",i);puts(\"\");\r\n\tfflush(stdout);\r\n\tscanf(\"%d\",&as);\r\n\treturn as;\r\n}\r\nsigned main() {\r\n\tscanf(\"%d\",&T);\r\n\twhile(T--) {\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(int i=2;i<=n;i++) {\r\n\t\t\tint as=ASK(1,i-1,i,i);\r\n\t\t\tif(as!=0) {\r\n\t\t\t\tint l=1,r=i-1,fst;\r\n\t\t\t\twhile(l<=r) {\r\n\t\t\t\t\tint mid=(l+r)>>1;\r\n\t\t\t\t\tif(ASK(mid,i-1,i,i)!=0) fst=mid,l=mid+1;\r\n\t\t\t\t\telse r=mid-1;\r\n\t\t\t\t}\r\n\t\t\t\tfor(int j=1;j<i;j++) if(j!=fst) ans.push_back(j);\r\n\t\t\t\tint last=i;\r\n\t\t\t\tfor(int j=i+1;j<=n;j++) {\r\n\t\t\t\t\tif(ASK(last,last,last+1,j)!=0) last=j;\r\n\t\t\t\t\telse ans.push_back(j);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"! %d \",ans.size());\r\n\t\tfor(int i=0;i<ans.size();i++) printf(\"%d \",ans[i]);puts(\"\");\r\n\t\tfflush(stdout);\r\n\t\tans.clear();\r\n\t}\r\n\treturn 0;\r\n}"
}