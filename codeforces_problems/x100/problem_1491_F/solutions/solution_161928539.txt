{
    "id": 161928539,
    "contestId": 1491,
    "creationTimeSeconds": 1656319357,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1491,
        "index": "F",
        "name": "Magnets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1491,
        "members": [
            {
                "handle": "bkifhr6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1614519300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 79,
    "timeConsumedMillis": 108,
    "memoryConsumedBytes": 1433600,
    "source": "#include<bits/stdc++.h>\n#include<ext/pb_ds/priority_queue.hpp>\n#define re register\n#define il inline\n#define pb push_back\n#define POS(i,l,r) for(re int i(l);i<=r;i=-~i)\n#define REV(i,r,l) for(re int i(r);i>=l;i--)\n#define ls(k) k<<1\n#define rs(k) k<<1|1\n#define np pair<int,int>\n#define mp make_pair\n#define nb(k) bitset<k>\n#define rev reverse\nusing namespace std;\nusing namespace __gnu_pbds;\ntypedef long long ll;\nil int read(){\n\tint ans=0,flag=1;\n\tchar ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-')flag=-1;ch=getchar();}\n\twhile(isdigit(ch))ans=(ans<<3)+(ans<<1)+(ch^48),ch=getchar();\n\treturn ans*flag;\n}\nil string reads(){\n\tstring ans=\"\";char ch=getchar();\n\twhile(!isalpha(ch))ch=getchar();\n\twhile(isalpha(ch))ans+=ch,ch=getchar();\n\treturn ans;\n}\nil char readc(){\n\tchar ch=getchar();\n\twhile(!isalpha(ch))ch=getchar();\n\treturn ch;\n}\nil int sqr(int x){return x*x;}\nvoid write(int x){\n\tif(x<0)putchar('-'),x=-x;\n\tif(x>9)write(x/10);\n\tputchar(x%10+'0');\n\treturn;\n}\nint t;\nint n,posi;\nint a[100010];\nint cnt;\nint main(){\n\tt=read();\n\twhile(t--){\n\t\tn=read();cnt=0;\n\t\tfor(int i=2;i<=n;i++){\n\t\t\tprintf(\"? %d %d\\n\",i-1,1);\n\t\t\tfor(int j=1;j<i;j++){\n\t\t\t\tprintf(\"%d \",j);\n\t\t\t}\n\t\t\tputs(\"\");\n\t\t\tprintf(\"%d\\n\",i);\n\t\t\tfflush(stdout);\n\t\t\tint x=read();\n\t\t\tif(x!=0){posi=i;\n\t\t\t\tfor(int j=i+1;j<=n;j++){\n\t\t\t\t\tprintf(\"? 1 1\\n%d\\n%d\\n\",i,j);\n\t\t\t\t\tfflush(stdout);\n\t\t\t\t\tint y=read();\n\t\t\t\t\tif(y==0){\n\t\t\t\t\t\ta[++cnt]=j;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tint l=1,r=posi-1,ans=0;\n\t\twhile(l<=r){\n\t\t\tint mid=l+r>>1;\n\t\t\tprintf(\"? %d %d\\n%d\\n\",1,mid,posi);\n\t\t\tfor(int i=1;i<=mid;i++){\n\t\t\t\tprintf(\"%d \",i);\n\t\t\t}\n\t\t\tputs(\"\");\n\t\t\tfflush(stdout);\n\t\t\tint y=read();\n\t\t\tif(y==0) l=mid+1;\n\t\t\telse ans=mid,r=mid-1;\n\t\t}\n\t\tprintf(\"! %d \",posi-1-(bool)(ans)+cnt);\n\t\t//cout<<ans<<endl;\n\t\tfor(int i=1;i<posi;i++){\n\t\t\tif(i!=ans)printf(\"%d \",i);\n\t\t}\n\t\tfor(int i=1;i<=cnt;i++){\n\t\t\tprintf(\"%d \",a[i]);\n\t\t}\n\t\tfflush(stdout);\n\t}\n\treturn 0;\n}\n//LOJ loyal users:EXODUS\n/*\n  0. Enough array size? Enough array size? Enough array size? Interger overflow?\n\n  1. Think TWICE, Code ONCE!\n  Are there any counterexamples to your algo?\n\n  2. Be careful about the BOUNDARIES!\n  N=1? P=1? Something about 0?\n\n  3. Do not make STUPID MISTAKES!\n  Time complexity? Memory usage? Precision error?\n*/\n\n \t  \t \t    \t  \t\t\t\t\t\t \t   \t\t  \t\t"
}