{
    "id": 188933546,
    "contestId": 1491,
    "creationTimeSeconds": 1673480424,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1491,
        "index": "F",
        "name": "Magnets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1491,
        "members": [
            {
                "handle": "Everule"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1614519300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 79,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define mp make_pair\r\n#define pb push_back\r\nusing namespace std;\r\nusing ll = long long int;\r\ntemplate<typename T>\r\nostream& operator+(ostream& out, const vector<T> &vec){\r\n    for(const auto &x : vec){\r\n        out<<x<<\" \";\r\n    }\r\n    out<<\"\\n\";\r\n    return out;\r\n}\r\ntemplate<typename T>\r\nostream& operator*(ostream& out, const vector<T> &vec){\r\n    for(const auto &x : vec){\r\n        out+x;\r\n    }\r\n    return out;\r\n}\r\ntemplate<typename T>\r\nistream& operator>>(istream& in, vector<T> &vec){\r\n    for(auto &x : vec){\r\n        in>>x;\r\n    }\r\n    return in;\r\n}\r\nvoid solve(){\r\n    int n;\r\n    cin>>n;\r\n    auto query = [&](int l1, int r1, int l2, int r2){\r\n        int ls = r1 - l1 + 1;\r\n        int rs = r2 - l2 + 1;\r\n        cout<<\"? \"<<ls<<\" \"<<rs<<\"\\n\";\r\n        for(int x=l1;x<=r1;x++) cout<<x+1<<\" \";\r\n        cout<<\"\\n\";\r\n        for(int x=l2;x<=r2;x++) cout<<x+1<<\" \";\r\n        cout<<\"\\n\";\r\n        cout.flush();\r\n        int f;\r\n        cin>>f;\r\n        return f;\r\n    };\r\n    int second_magnet = -1;\r\n    for(int i=1;i<n;i++){\r\n        int f = query(0, i-1, i, i);\r\n        if(f != 0){\r\n            second_magnet = i;\r\n            break;\r\n        }\r\n    }\r\n    if(second_magnet == -1){\r\n        exit(query(0, 0, 1, 1) + 1);\r\n    }\r\n    vector<int> not_magnet;\r\n    for(int i=second_magnet+1;i<n;i++){\r\n        int f = query(second_magnet, second_magnet, i, i);\r\n        if(f == 0) not_magnet.push_back(i);\r\n    }\r\n    int l = 0, r = second_magnet - 1;\r\n    while(l < r){\r\n        int mid = (l + r) / 2;\r\n        int f = query(0, mid, second_magnet, second_magnet);\r\n        if(f != 0){\r\n            r = mid;\r\n        }\r\n        else{\r\n            l = mid + 1;\r\n        }\r\n    }\r\n    assert(l == r);\r\n    for(int i=0;i<second_magnet;i++) if(i != l) not_magnet.push_back(i);\r\n    cout<<\"! \"<<not_magnet.size()<<\" \";\r\n    for(auto &x : not_magnet) cout<<x+1<<\" \";\r\n    cout<<\"\\n\";\r\n    cout.flush();\r\n}\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    int t;\r\n    cin>>t;\r\n    while(t--) solve();\r\n}"
}