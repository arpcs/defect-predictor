{
    "id": 177513854,
    "contestId": 1491,
    "creationTimeSeconds": 1666496654,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1491,
        "index": "F",
        "name": "Magnets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1491,
        "members": [
            {
                "handle": "jhdonghj112"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1614519300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 686,
    "memoryConsumedBytes": 614400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define fi first\r\n#define se second\r\n#define Mp make_pair\r\n#define pb push_back\r\n\r\ntypedef long long ll;\r\ntypedef double db;\r\ntypedef pair<int, int> pii;\r\ntypedef vector<int> vi;\r\n#define debug(...) fprintf(stderr, __VA_ARGS__)\r\nmt19937 gen(std::chrono::system_clock::now().time_since_epoch().count());\r\nll get(ll l, ll r) { uniform_int_distribution<ll> dist(l, r); return dist(gen); }\r\n\r\nint cnt = 0, n;\r\nint ask(set<int> st, vi ve) {\r\n\tcnt++;\r\n\tassert(cnt <= n + floor(log2(n)));\r\n\tprintf(\"? %d %d\\n\", st.size(), ve.size());\r\n\tfor(int i : st) printf(\"%d \", i); puts(\"\");\r\n\tfor(int i : ve) printf(\"%d \", i); puts(\"\");\r\n\tfflush(stdout);\r\n\tint res; scanf(\"%d\", &res); return res;\r\n}\r\nvoid solve() {\r\n\tcin >> n;\r\n\tset<int> st; vi pre;\r\n\tfor(int i = 1; i <= n; i++) st.insert(i);\r\n\tfor(int i = 1; i <= n; i++) {\r\n\t\tst.erase(i);\r\n\t\tint res = ask(st, {i});\r\n\t\tif(res == 0) pre.pb(i);\r\n\t\telse st.insert(i);\r\n\t}\r\n\tvi confirm;\r\n\t// puts(\"ok\");\r\n\t// for(int i : pre) printf(\"%d \", i); puts(\"\");\r\n\twhile(pre.size()) {\r\n\t\tif(pre.size() == 1) {\r\n\t\t\tint res = ask({*st.begin()}, pre);\r\n\t\t\tif(res == 0) confirm.pb(pre[0]);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tint m = pre.size() / 2;\r\n\t\tvi ve1, ve2;\r\n\t\tfor(int i = 0; i < pre.size(); i++) {\r\n\t\t\tif(i < m) ve1.pb(pre[i]);\r\n\t\t\telse ve2.pb(pre[i]);\r\n\t\t}\r\n\t\tint res = ask({*st.begin()}, ve1);\r\n\t\tif(res) { // 1\r\n\t\t\tpre = ve1;\r\n\t\t\tfor(int i : ve2) confirm.pb(i);\r\n\t\t} else {\r\n\t\t\tpre = ve2;\r\n\t\t\tfor(int i : ve1) confirm.pb(i);\r\n\t\t}\r\n\t}\r\n\tprintf(\"!\");\r\n\tprintf(\" %d\", confirm.size());\r\n\tfor(int i : confirm) printf(\" %d\", i);\r\n\tprintf(\"\\n\");\r\n\tfflush(stdout);\r\n}\r\nsigned main() {\r\n\tint _; scanf(\"%d\", &_); for(int cas = 1; cas <= _; cas++) solve();\r\n\tdebug(\"time=%.4lfs\\n\", (db)clock()/CLOCKS_PER_SEC);\r\n\treturn 0;\r\n}"
}