{
    "id": 218598450,
    "contestId": 1491,
    "creationTimeSeconds": 1691869482,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1491,
        "index": "F",
        "name": "Magnets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1491,
        "members": [
            {
                "handle": "sdya"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1614519300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 79,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 102400,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <cmath>\r\n#include <string>\r\n#include <cstring>\r\n#include <set>\r\n#include <map>\r\n#include <vector>\r\n#include <queue>\r\n#include <algorithm>\r\n#include <ctime>\r\n#pragma comment (linker, \"/STACK:256000000\")\r\n\r\nusing namespace std;\r\n\r\nvector < int > range(int l, int r) {\r\n\tvector < int > res;\r\n\tfor (int i = l; i <= r; ++i) {\r\n\t\tres.push_back(i);\r\n\t}\r\n\treturn res;\r\n}\r\n\r\nmap < pair < pair < int, int >, int >, int > M;\r\n\r\nint ask(vector < int > a, vector < int > b) {\r\n\tif (M.count({ {a[0], a.back()}, b[0] })) {\r\n\t\treturn M[{{a[0], a.back()}, b[0]}];\r\n\t}\r\n\tcout << \"? \" << a.size() << \" \" << b.size() << endl;\r\n\tfor (auto x : a) {\r\n\t\tcout << x + 1 << \" \";\r\n\t}\r\n\tcout << endl;\r\n\tfor (auto y : b) {\r\n\t\tcout << y + 1 << \" \";\r\n\t}\r\n\tcout << endl;\r\n\tint res;\r\n\tcin >> res;\r\n\treturn M[{{a[0], a.back()}, b[0]}] = res;\r\n}\r\n\r\nvoid solve(int test) {\r\n\tint n;\r\n\tcin >> n;\r\n\r\n\tM.clear();\r\n\r\n\tint id = -1;\r\n\tfor (int i = 1; i < n; ++i) {\r\n\t\tint v = ask(range(0, i - 1), range(i, i));\r\n\t\tif (v != 0) {\r\n\t\t\tid = i;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tint l = 0, r = id - 1;\r\n\twhile (r - l > 1) {\r\n\t\tint m = (l + r) / 2;\r\n\t\tif (ask(range(0, m), range(id, id)) != 0) {\r\n\t\t\tr = m;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tl = m;\r\n\t\t}\r\n\t}\r\n\r\n\tint fid = r;\r\n\tif (r != l && ask(range(0, l), range(id, id)) != 0) {\r\n\t\tfid = l;\r\n\t}\r\n\r\n\tvector < int > res;\r\n\tfor (int i = 0; i < id; ++i) {\r\n\t\tif (i != fid) {\r\n\t\t\tres.push_back(i);\r\n\t\t}\r\n\t}\r\n\r\n\tfor (int i = id + 1; i < n; ++i) {\r\n\t\tif (ask(range(id, id), range(i, i)) == 0) {\r\n\t\t\tres.push_back(i);\r\n\t\t}\r\n\t}\r\n\r\n\tcout << \"! \" << res.size();\r\n\tfor (auto x : res) {\r\n\t\tcout << \" \" << x + 1;\r\n\t}\r\n\tcout << endl;\r\n}\r\n\r\nint main() {\r\n\t//freopen(\"input.txt\", \"r\", stdin);\r\n\t//freopen(\"output.txt\", \"w\", stdout);\r\n\r\n\t//ios_base::sync_with_stdio(false);\r\n\t//cin.tie(0);\r\n\r\n\tint t;\r\n\tcin >> t;\r\n\r\n\tfor (int tt = 0; tt < t; ++tt) {\r\n\t\tsolve(tt + 1);\r\n\t}\r\n\r\n\treturn 0;\r\n}"
}