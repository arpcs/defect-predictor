{
    "id": 209764927,
    "contestId": 1491,
    "creationTimeSeconds": 1686834051,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1491,
        "index": "F",
        "name": "Magnets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1491,
        "members": [
            {
                "handle": "CC2021zyz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1614519300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define mp make_pair\r\n#define inf (ll)1e9\r\n#define pii pair <ll, ll>\r\n#define fr first\r\n#define se second\r\nconst ll mod = 1e9 + 7;\r\n//char buf[1 << 21], *p1 = buf, *p2 = buf;\r\n//#define getchar() (p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1 << 18, stdin), p1 == p2) ? EOF : *p1++)\r\ninline ll read() {\r\n\tll x = 0, f = 1;\r\n\tchar ch = getchar();\r\n\twhile(ch < '0' || ch > '9') f = ((ch == '-') ? -1 : f), ch = getchar();\r\n\twhile(ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar();\r\n\treturn x * f;\r\n}\r\ninline void write(ll x) {\r\n\tif(x < 0) x = -x, putchar('-');\r\n\tif(x >= 10) write(x / 10);\r\n\tputchar(x % 10 + '0');\r\n}\r\ntypedef vector <ll> vec;\r\nll n;\r\ninline ll Query(vec A, vec B) {\r\n\tprintf(\"? %lld %lld\\n\", (ll)A.size(), (ll)B.size());\r\n\tfor(auto i : A) write(i), putchar(' ');\r\n\tputchar('\\n');\r\n\tfor(auto i : B) write(i), putchar(' ');\r\n\tputchar('\\n');\r\n\tfflush(stdout);\r\n\treturn read();\r\n}\r\nll vis[2005];\r\nvec Ans;\r\ninline void print() {\r\n\tAns.clear();\r\n\tfor(ll i = 1; i <= n; i++) if(vis[i]) Ans.push_back(i);\r\n\tprintf(\"! %lld \", (ll)Ans.size());\r\n\tfor(auto i : Ans) write(i), putchar(' ');\r\n\tputchar('\\n');\r\n\tfflush(stdout);\r\n}\r\nll tar1, tar2;\r\nll top;\r\nvec sta[2005];\r\ninline ll Find(vec x, vec y) {\r\n\tif((ll)x.size() == 1) return x[0];\r\n\tvec x1, x2;\r\n\tfor(ll i = 0; i < (ll)x.size(); i++) {\r\n\t\tif(i < (ll)x.size() / 2) x1.push_back(x[i]);\r\n\t\telse x2.push_back(x[i]);\r\n\t}\r\n\tif(Query(x1, y)) return Find(x1, y);\r\n\treturn Find(x2, y);\r\n}\r\ninline bool Merge() {\r\n\tvec x = sta[top-1], y = sta[top];\r\n\ttop -= 2;\r\n\tif(!Query(x, y)) {\r\n\t\tx.insert(x.end(), y.begin(), y.end());\r\n\t\tsta[++top] = x;\r\n\t\treturn 0;\r\n\t}\r\n\ttar1 = y[0], tar2 = Find(x, y);\r\n\treturn 1;\r\n}\r\ninline bool Insert(vec x) {\r\n\tsta[++top] = x;\r\n\twhile(top > 1) if(Merge()) return 1;\r\n\treturn 0;\r\n}\r\nint main() {\r\n//\tfreopen(\".in\", \"r\", stdin);\r\n//\tfreopen(\".out\", \"w\", stdout);\r\n\tll T = read();\r\n\twhile(T--) {\r\n\t\ttar1 = tar2 = top = 0;\r\n\t\tn = read();\r\n\t\tfor(ll i = 1; i <= n; i++) vis[i] = 0;\r\n\t\tfor(ll i = 1; i <= n; i++) {\r\n\t\t\tif(Insert(vec{i})) {\r\n\t\t\t\tfor(ll j = 1; j <= i; j++) if(j != tar1 && j != tar2) vis[j] = 1;\r\n\t\t\t\tfor(ll j = i + 1; j <= n; j++) vis[j] = 1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprint();\r\n\t}\r\n\treturn 0;\r\n}\r\n/*\r\n*/"
}