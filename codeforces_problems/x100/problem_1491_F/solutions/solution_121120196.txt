{
    "id": 121120196,
    "contestId": 1491,
    "creationTimeSeconds": 1625236851,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1491,
        "index": "F",
        "name": "Magnets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1491,
        "members": [
            {
                "handle": "innocentkitten"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1614519300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 2764800,
    "source": "#include <bits/stdc++.h>\r\n#define f first\r\n#define s second\r\n#define mp make_pair\r\n#define pb push_back\r\n#define p push\r\n#define ins insert\r\n#define t top\r\n#define fr front\r\n\r\n#define T1 10\r\n#define T2 100\r\n#define T3 1000\r\n#define T4 10000\r\n#define T5 100000\r\n#define T6 1000000\r\n\r\n#define H1 11\r\n#define H2 105\r\n#define H3 1010\r\n#define H4 10010\r\n#define H5 100010\r\n#define H6 1000010\r\n\r\n#define H 1*H6\r\n\r\n#define mod 998244353\r\n#define MOD 1000000007\r\n#define INF 1069999999\r\n#define lnf 0\r\n#define LNF 5000000000000000000\r\n\r\nusing namespace std;\r\nmt19937 mr(time(0));\r\nstruct LL {\r\n\r\n    static const long long int m = mod; // set to LNF for nomod\r\n    long long int val;\r\n\r\n    LL(long long int v) {val=reduce(v);};\r\n    LL() {val=0;};\r\n    ~LL(){};\r\n    LL(const LL& l) {val=l.val;};\r\n    LL& operator=(int l) {val=l; return *this;}\r\n    LL& operator=(long long int l) {val=l; return *this;}\r\n    LL& operator=(LL l) {val=l.val; return *this;}\r\n\r\n    static long long int reduce(long long int x, long long int md = m) {\r\n        x %= md;\r\n        while (x >= md) x-=md;\r\n        while (x < 0) x+=md;\r\n        return x;\r\n    }\r\n\r\n    bool operator<(const LL& b) { return val<b.val; }\r\n    bool operator<=(const LL& b) { return val<=b.val; }\r\n    bool operator==(const LL& b) { return val==b.val; }\r\n    bool operator>=(const LL& b) { return val>=b.val; }\r\n    bool operator>(const LL& b) { return val>b.val; }\r\n\r\n    LL operator+(const LL& b) { return LL(val+b.val); }\r\n    LL operator+(const long long int& b) { return (*this+LL(b)); }\r\n    LL& operator+=(const LL& b) { return (*this=*this+b); }\r\n    LL& operator+=(const long long int& b) { return (*this=*this+b); }\r\n\r\n    LL operator-(const LL& b) { return LL(val-b.val); }\r\n    LL operator-(const long long int& b) { return (*this-LL(b)); }\r\n    LL& operator-=(const LL& b) { return (*this=*this-b); }\r\n    LL& operator-=(const long long int& b) { return (*this=*this-b); }\r\n\r\n    LL operator*(const LL& b) { return LL(val*b.val); }\r\n    LL operator*(const long long int& b) { return (*this*LL(b)); }\r\n    LL& operator*=(const LL& b) { return (*this=*this*b); }\r\n    LL& operator*=(const long long int& b) { return (*this=*this*b); }\r\n\r\n    static LL exp(const LL& x, const long long int& y){\r\n        long long int z = y;\r\n        z = reduce(z,m-1);\r\n        LL ret = 1;\r\n        LL w = x;\r\n        while (z) {\r\n            if (z&1) ret *= w;\r\n            z >>= 1; w *= w;\r\n        }\r\n        return ret;\r\n    }\r\n    LL& operator^=(long long int y) { return (*this=LL(val^y)); }\r\n\r\n    LL operator/(const LL& b) { return ((*this)*exp(b,-1)); }\r\n    LL operator/(const long long int& b) { return (*this/LL(b)); }\r\n    LL operator/=(const LL& b) { return ((*this)*=exp(b,-1)); }\r\n    LL& operator/=(const long long int& b) { return (*this=*this/LL(b)); }\r\n\r\n}; ostream& operator<<(ostream& os, const LL& obj) { return os << obj.val; }\r\ntypedef pair<int,int> pii;\r\ntypedef pair<LL,LL> pll;\r\n\r\nint T,N,M,K,Q;\r\n\r\nint rd() {int x; scanf(\"%d\",&x); return x;}\r\nvoid fl() {Q++; cout.flush();\r\nif (Q > (N + log2(N))) {int* x = new int[696969]; cout << x[-999999] << endl;}}\r\n\r\nint main() {\r\n\r\n    bool trials = 1;\r\n\r\n    if (trials) T=rd();\r\n    else T=1;\r\n\r\n    while (T--) {\r\n            Q=0;\r\n\r\n        N = rd();\r\n\r\n        int curr = 1;\r\n        for (;;curr++) {\r\n            cout << \"? \" << curr << \" \" << N-curr << endl;\r\n            for (int i=1; i<=curr; i++) cout << i << \" \"; cout << endl;\r\n            for (int i=curr+1; i<=N; i++) cout << i << \" \"; cout << endl;\r\n            fl(); if (rd()) break;\r\n        }\r\n        int L = 1; int R = curr+1;\r\n        vector<int> ret;\r\n        for (int i = R; i <= N; i++) {\r\n            cout << \"? 1 1\" << endl;\r\n            cout << curr << endl << i << endl;\r\n            fl(); if (!rd()) ret.pb(i);\r\n        }\r\n        while (L<R-1) {\r\n            M = (L+R)/2;\r\n            cout << \"? \" << M-L << \" 1\" << endl;\r\n            for (int i = L; i < M; i++) cout << i << \" \";\r\n            cout << endl << curr << endl;\r\n            fl(); if (rd()) R=M;\r\n            else L=M;\r\n        }\r\n        for (int i = 1; i <= curr; i++) if (i!=L) ret.pb(i);\r\n\r\n        cout << \"! \" << ret.size() << \" \";\r\n        for (int i : ret) { cout << i << \" \"; } cout << endl;\r\n        fl();\r\n\r\n    }\r\n}\r\n"
}