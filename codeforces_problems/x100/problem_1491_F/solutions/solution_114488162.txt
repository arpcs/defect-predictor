{
    "id": 114488162,
    "contestId": 1491,
    "creationTimeSeconds": 1619650852,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1491,
        "index": "F",
        "name": "Magnets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1491,
        "members": [
            {
                "handle": "unusual_wonder"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1614519300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 90316800,
    "source": "#include <bits/stdc++.h>\r\n#define int long long\r\n#define INT_MAX INT64_MAX\r\n#define INT_MIN INT64_MIN\r\n#define PI 3.14159265358979323846\r\n#define CLK clock_t clk = clock();//Start of main\r\n#define OCLK cerr << \"Time (in ms): \" << (double)(clock() - clk) * 1000.0 / CLOCKS_PER_SEC << '\\n';//End of main\r\n#define MOD 1000000007\r\n/* DEFINE cout */\r\n#define pln cout << \"===============================\\n\"\r\n#define on cout<<\"\\n\"\r\n#define os cout<<\" \"\r\n#define o2(a,b) cout<<a<<\" \"<<b\r\n#define o(a) cout << a\r\n#define bitcount __builtin_popcountll\r\n/* DEFINE cout */\r\n#define endl \"\\n\"\r\n#define fastio ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);//fastio\r\nusing namespace std;\r\nstruct hash_pair { // use pair as key in unordered_map<pair<int,int>,int,hash_pair>;\r\n    template <class T1, class T2>\r\n    size_t operator()(const pair<T1, T2>& p) const\r\n    {\r\n        auto hash1 = hash<T1>{}(p.first);\r\n        auto hash2 = hash<T2>{}(p.second);\r\n        return hash1 ^ hash2;\r\n    }\r\n};\r\nbool prime[10000001];\r\nint P=MOD-2;\r\nint factorial[10000001]={0};\r\nint powerFunction(int x,int y){\r\n    int res = 1;\r\n    int p = MOD;\r\n    x = x % p;\r\n    while (y > 0){\r\n        if (y & 1)\r\n            res = (res*x) % p;\r\n        y = y>>1;\r\n        x = (x*x) % p;\r\n    }\r\n    return res;\r\n}\r\nvoid sieveFunction(int maxLimit){\r\n    memset(prime, true, sizeof(prime));\r\n    prime[0] = prime[1]=false;\r\n    for(int i=2; maxLimit >= i ; i++){\r\n        if(prime[i]){\r\n            for(int j=2*i ; maxLimit >= j ; j+=i)\r\n            prime[j]=false;\r\n        }\r\n    }\r\n}\r\nvoid factorialFunction(int maxLimit){\r\n    factorial[0]=1;\r\n    for(int i=1 ; i <= maxLimit ; i++)\r\n    factorial[i]=(factorial[i-1]*i)%MOD;\r\n    return;\r\n}\r\nint gcd(int a, int b){\r\n    if (b == 0)\r\n        return a;\r\n    return gcd(b, a % b);\r\n}\r\nvoid ask(vector<int> l, vector<int> r){\r\n    cout << \"? \" << l.size() << ' ' << r.size() << endl;\r\n    for(int i=0; l.size()>i; i++){\r\n        cout << l[i] << ' ';\r\n    }\r\n    on;\r\n    for(int i=0; r.size()>i; i++){\r\n        cout << r[i] << ' ';\r\n    }\r\n    on;\r\n}\r\nvoid solve(){\r\n    int n;\r\n    cin >> n;\r\n    vector<int> l, r;\r\n    l = {1};\r\n    r = {2};\r\n    int id = -1;\r\n    while(true){\r\n        ask(l, r);\r\n        int x;\r\n        cin >> x;\r\n        if(x != 0){\r\n            // right is magnetized\r\n            id = r[0];\r\n            break;\r\n        }else{\r\n            l.push_back(r[0]);\r\n            r.clear();\r\n            r.push_back(l.back()+1);\r\n        }\r\n    }\r\n    set<int> st;\r\n    for(int i=id+1; n>=i; i++){\r\n        ask({id}, {i});\r\n        int x;\r\n        cin >> x;\r\n        if(x == 0){\r\n            st.insert(i);\r\n        }\r\n    }\r\n    int a = 1;\r\n    int b = l.back();\r\n    int ans = a;\r\n    while(a < b){\r\n        int mid = (a+b)/2;\r\n        vector<int> temp;\r\n        for(int i=1; mid>=i; i++){\r\n            temp.push_back(i);\r\n        }\r\n        ask(temp, {id});\r\n        int x;\r\n        cin >> x;\r\n        if(x == 0){\r\n            a = mid+1;\r\n        }else{\r\n            ans = mid;\r\n            b = mid-1;\r\n        }\r\n    }\r\n//    cout << ans << endl;\r\n    for(int i=1; l.back()>=i; i++){\r\n        if(i != ans){\r\n            st.insert(i);\r\n        }\r\n    }\r\n    cout << \"! \" << st.size() << ' ';\r\n    auto it = st.begin();\r\n    while(it != st.end()){\r\n        cout << *it << ' ';\r\n        it++;\r\n    }\r\n    on;\r\n}\r\nsigned main(){\r\n//    fastio;\r\n    int t = 1;\r\n    cin >> t;\r\n    while(t--){\r\n        solve();\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"
}