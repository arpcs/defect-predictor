{
    "id": 213388353,
    "contestId": 1491,
    "creationTimeSeconds": 1689094263,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1491,
        "index": "F",
        "name": "Magnets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1491,
        "members": [
            {
                "handle": "__Davit__"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1614519300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "\ufeff#include<bits/stdc++.h>\r\n\r\n#define ll long long\r\n#define lld long double\r\n#define ff first\r\n#define ss second\r\n#define pb push_back\r\n#define mp make_pair\r\n#define vr(v) v.begin(),v.end()\r\n#define rv(v) v.rbegin(),v.rend()\r\n#define Code ios_base::sync_with_stdio(false);\r\n#define By cin.tie(NULL);\r\n#define Davit cout.tie(NULL);\r\n#define FOR(i, n) for(int i = 0;i<n;i++)\r\n\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\ntypedef tree<pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag,\r\n        tree_order_statistics_node_update> indexed_set;\r\n\r\n\r\n//#include \"algo/debug.h\"\r\nint ask(int l1, int r1, int l2, int r2) {\r\n    cout << r1 - l1 + 1 << \" \" << r2 - l2 + 1 << endl;\r\n    for (int i = l1; i <= r1; i++) {\r\n        cout << i << \" \";\r\n    }\r\n    cout << endl;\r\n    for (int i = l2; i <= r2; i++) {\r\n        cout << i << \" \";\r\n    }\r\n    cout << endl;\r\n    int a;\r\n    cin >> a;\r\n    return a;\r\n}\r\n\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n    int index;\r\n    for (int i = 1; i < n; i++) {\r\n        int val = ask(1, i, i + 1, i + 1);\r\n        index = i + 1;\r\n        if (val != 0)break;\r\n    }\r\n\r\n    int l = 1, r = index - 1;\r\n    vector<int> ans;\r\n    while (l + 1 < r) {\r\n        int mid = (l + r) >> 1;\r\n        if (ask(l, mid, index, index) == 0) {\r\n            r = mid;\r\n        } else {\r\n            l = mid;\r\n        }\r\n    }\r\n    for (int i = 1; i < index; i++) {\r\n        if (i != r) {\r\n            ans.pb(i);\r\n        }\r\n    }\r\n    for (int i = index + 1; i <= n; i++) {\r\n        if (ask(index, index, i, i) == 0) {\r\n            ans.pb(i);\r\n        }\r\n    }\r\n    cout << \"! \" << ans.size() << \" \";\r\n    for (auto x: ans) {\r\n        cout << x << \" \";\r\n    }\r\n    cout << endl;\r\n}\r\n\r\nint main() {\r\n    int t = 1;\r\n    cin >> t;\r\n    while (t--)solve();\r\n}\r\n"
}