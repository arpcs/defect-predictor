{
    "id": 117279224,
    "contestId": 1491,
    "creationTimeSeconds": 1621913839,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1491,
        "index": "F",
        "name": "Magnets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1491,
        "members": [
            {
                "handle": "AutumnKite"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1614519300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 79,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\n\r\nint query(std::vector<int> A, std::vector<int> B) {\r\n\tstd::cout << \"? \" << A.size() << \" \" << B.size() << \"\\n\";\r\n\tfor (int x : A) {\r\n\t\tstd::cout << x + 1 << \" \";\r\n\t}\r\n\tstd::cout << \"\\n\";\r\n\tfor (int x : B) {\r\n\t\tstd::cout << x + 1 << \" \";\r\n\t}\r\n\tstd::cout << std::endl;\r\n\tint x;\r\n\tstd::cin >> x;\r\n\treturn x;\r\n}\r\n\r\nint solve(std::vector<int> S, int x) {\r\n\tif ((int)S.size() == 1) {\r\n\t\treturn S[0];\r\n\t}\r\n\tint mid = S.size() / 2;\r\n\tif (query(std::vector<int>(S.begin(), S.begin() + mid), {x})) {\r\n\t\treturn solve(std::vector<int>(S.begin(), S.begin() + mid), x);\r\n\t} else {\r\n\t\treturn solve(std::vector<int>(S.begin() + mid, S.end()), x);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tstd::ios_base::sync_with_stdio(false);\r\n\r\n\tint T;\r\n\tstd::cin >> T;\r\n\twhile (T--) {\r\n\t\tint n;\r\n\t\tstd::cin >> n;\r\n\t\tstd::vector<int> id(1, 0);\r\n\t\tint p = 1;\r\n\t\twhile (!query(id, {p})) {\r\n\t\t\tid.push_back(p);\r\n\t\t\t++p;\r\n\t\t}\r\n\t\tstd::vector<int> ans;\r\n\t\tfor (int i = p + 1; i < n; ++i) {\r\n\t\t\tif (!query(id, {i})) {\r\n\t\t\t\tans.push_back(i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tint pos = solve(id, p);\r\n\t\tfor (int i : id) {\r\n\t\t\tif (i != pos) {\r\n\t\t\t\tans.push_back(i);\r\n\t\t\t}\r\n\t\t}\r\n\t\tstd::cout << \"! \" << ans.size() << \" \";\r\n\t\tfor (int x : ans) {\r\n\t\t\tstd::cout << x + 1 << \" \";\r\n\t\t}\r\n\t\tstd::cout << std::endl;\r\n\t}\r\n}\r\n"
}