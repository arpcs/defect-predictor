{
    "id": 171458947,
    "contestId": 1491,
    "creationTimeSeconds": 1662688654,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1491,
        "index": "F",
        "name": "Magnets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1491,
        "members": [
            {
                "handle": "Solitary_Walker"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1614519300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 79,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing std::vector;\r\nconst int N = 2005;\r\nint T, n, F;\r\nint main() {\r\n\tscanf(\"%d\", &T);\r\n\twhile (T--) {\r\n\t\tscanf(\"%d\", &n);\r\n\t\tfor (int i = 2; i <= n; i++) {\r\n\t\t\tprintf(\"? 1 %d\\n%d\\n\", i - 1, i);\r\n\t\t\tfor (int j = 1; j < i; j++) printf(\"%d \", j);\r\n\t\t\tputs(\"\"); fflush(stdout);\r\n\t\t\tscanf(\"%d\", &F);\r\n\t\t\tif (F) {\r\n\t\t\t\tvector<int> ans;\r\n\t\t\t\tfor (int j = i + 1; j <= n; j++) {\r\n\t\t\t\t\tprintf(\"? 1 1\\n%d\\n%d\\n\", i, j);\r\n\t\t\t\t\tfflush(stdout);\r\n\t\t\t\t\tscanf(\"%d\", &F);\r\n\t\t\t\t\tif (!F) ans.push_back(j);\r\n\t\t\t\t}\r\n\t\t\t\tint l = 1, r = i - 1;\r\n\t\t\t\twhile (l <= r) {\r\n\t\t\t\t\tint mid = l + r >> 1;\r\n\t\t\t\t\tprintf(\"? 1 %d\\n%d\\n\", mid, i);\r\n\t\t\t\t\tfor (int j = 1; j <= mid; j++) printf(\"%d \", j);\r\n\t\t\t\t\tputs(\"\"); fflush(stdout);\r\n\t\t\t\t\tscanf(\"%d\", &F);\r\n\t\t\t\t\tif (F) r = mid - 1; else l = mid + 1;\r\n\t\t\t\t}\r\n\t\t\t\tfor (int j = 1; j < i; j++)\r\n\t\t\t\t\tif (j != r + 1) ans.push_back(j);\r\n\t\t\t\tprintf(\"! %d \", ans.size());\r\n\t\t\t\tfor (int j = 0; j < ans.size(); j++) printf(\"%d \", ans[j]);\r\n\t\t\t\tputs(\"\"); fflush(stdout); break;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
}