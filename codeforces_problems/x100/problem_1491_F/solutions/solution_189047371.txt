{
    "id": 189047371,
    "contestId": 1491,
    "creationTimeSeconds": 1673573118,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1491,
        "index": "F",
        "name": "Magnets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2700,
        "tags": [
            "binary search",
            "constructive algorithms",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1491,
        "members": [
            {
                "handle": "Perpetually_Purple"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1614519300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 79,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 102400,
    "source": "#pragma GCC target (\"avx2\")\r\n#pragma GCC optimize (\"O3\")\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC optimize (\"unroll-loops\")\r\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n#define io ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL) \r\n\r\n// #define endl '\\n'\r\ntypedef long long ll;\r\n#define mod1 (ll)1000000007\r\n#define mod2 (ll)998244353\r\n#define pll pair<ll,ll>\r\ntypedef long double lb;\r\ntypedef tree<\r\npair<ll, ll>,\r\nnull_type,\r\nless<pair<ll, ll>>,\r\nrb_tree_tag,\r\ntree_order_statistics_node_update> ordered_set;\r\n#define eps (lb)(1e-9)\r\nstruct custom_hash {\r\n    static uint64_t splitmix64(uint64_t x) {\r\n        x += 0x9e3779b97f4a7c15;\r\n        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n        return x ^ (x >> 31);\r\n    }\r\n\r\n    size_t operator()(uint64_t x) const {\r\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n        return splitmix64(x + FIXED_RANDOM);\r\n    }\r\n};\r\n// Operator overloads\r\ntemplate<typename T1, typename T2> // cin >> pair<T1, T2>\r\nistream& operator>>(istream &istream, pair<T1, T2> &p) { return (istream >> p.first >> p.second); }\r\n\r\ntemplate<typename T> // cin >> vector<T>\r\nistream& operator>>(istream &istream, vector<T> &v)\r\n{\r\n    for (auto &it : v)\r\n        cin >> it;\r\n    return istream;\r\n}\r\n\r\ntemplate<typename T1, typename T2> // cout << pair<T1, T2>\r\nostream& operator<<(ostream &ostream, const pair<T1, T2> &p) { return (ostream << p.first << \" \" << p.second); }\r\ntemplate<typename T> // cout << vector<T>\r\nostream& operator<<(ostream &ostream, const vector<T> &c) { for (auto &it : c) cout << it << \" \"; return ostream; }\r\n\r\n// Utility functions\r\ntemplate <typename T>\r\nvoid print(T &&t)  { cout << t << \"\\n\"; }\r\ntemplate <typename T, typename... Args>\r\nvoid print(T &&t, Args &&... args)\r\n{\r\n    cout << t << \" \";\r\n    print(forward<Args>(args)...);\r\n}\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\nll random(ll p){ // gives random number in [0,p]\r\n\r\n return uniform_int_distribution<ll>(0, p)(rng);\r\n}\r\nll n=3;\r\nstring s=\"N-N\";\r\nll calc(vector<ll>&left,vector<ll>&right){\r\n    ll sml=0,smr=0;\r\n    for(auto i:left){\r\n        if(s[i]=='-'){continue;}\r\n        else if(s[i]=='N'){sml++;}\r\n        else{sml--;}\r\n    }\r\n    for(auto i:right){\r\n        if(s[i]=='-'){continue;}\r\n        else if(s[i]=='N'){smr++;}\r\n        else{smr--;}\r\n    }\r\n    ll t=sml*smr;\r\n    if(abs(t)>n){cout<<\"FUCK\"<<endl; exit(0);}\r\n    return t;\r\n}\r\nll req(vector<ll>&left,vector<ll>&right){\r\n    if(left.empty() or right.empty()){return 0;}\r\n    cout<<\"? \"<<left.size()<<\" \"<<right.size()<<endl;\r\n    for(auto i:left){cout<<i+1<<\" \";} cout<<endl;\r\n    for(auto i:right){cout<<i+1<<\" \";} cout<<endl;\r\n    ll x;\r\n    // x=calc(left,right);\r\n    cin>>x;\r\n    // cout<<x<<endl;\r\n    return x;\r\n}\r\nll reqs(ll a,ll b){\r\n    vector<ll>left={a},right={b};\r\n    return req(left,right);\r\n}\r\nvector<ll>pre(ll t){\r\n    vector<ll>p(t+1,0);\r\n    for(ll i(0);i<p.size();++i){p[i]=i;}\r\n    return p;\r\n}\r\nvoid solve();\r\nint main() {\r\nio;\r\nll t=1,n=1;\r\ncin>>t;\r\nwhile (t--){\r\n     solve();\r\n    }\r\n     return 0;\r\n}\r\nvoid solve(){\r\n     \r\n     cin>>n;\r\n     vector<ll>left={0},right={1};\r\n\r\n     while (req(left,right)==0)\r\n     {\r\n        left.push_back(right.back());\r\n        right.back()++;\r\n        // right.pop_back();\r\n     }\r\n     vector<ll>z;\r\n     for(ll k(right.back()+1);k<n;++k){\r\n        if(reqs(right.back(),k)==0){z.push_back(k);}\r\n     }\r\n     // [0,right.back()) only contains 1 element\r\n     ll o=right.back();\r\n     ll lo=0,hi=o-1,ans=hi;\r\n     while (lo<=hi)\r\n     {\r\n        ll mid=(lo+hi)>>1;\r\n        auto vec=pre(mid);\r\n        if(req(vec,right)){ans=mid;hi=mid-1;}\r\n        else{lo=mid+1;}\r\n     }\r\n    //  cout<<\"answer=\"<<ans<<endl;\r\n     for(ll i(0);i<o;++i){\r\n        if(i==ans){continue;}\r\n        z.push_back(i);\r\n     }\r\n    //  cout<<\"zeros=\"<<z<<endl;\r\n     for(auto &i:z){++i;}\r\n     sort(begin(z),end(z));\r\n     cout<<\"! \"<<z.size()<<\" \"<<z<<endl;\r\n     \r\n     \r\n\r\n\r\n\r\n\r\n}\r\n// Do not get stuck on a single approach for long, think of multiple ways"
}