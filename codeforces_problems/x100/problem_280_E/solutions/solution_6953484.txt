{
    "id": 6953484,
    "contestId": 280,
    "creationTimeSeconds": 1403621605,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 280,
        "index": "E",
        "name": "Sequence Transformation",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "brute force",
            "data structures",
            "dp",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 280,
        "members": [
            {
                "handle": "KevinTan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1362929400
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 307200,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <cmath>\r\n#include <vector>\r\nusing namespace std;\r\nconst int N = 6005;\r\nint a,b,c,d,e,f,i,j,k;\r\nstruct Point {double x, K;};\r\nPoint G[N << 1];\r\ndouble A, B, q, Limit;\r\ndouble g[N], X;\r\ndouble an[N];\r\nint tot, mid;\r\ndouble Min;\r\n\r\nvoid Init() { cin >> a >> Limit >> A >> B; }\r\nvoid Work()\r\n{\r\n    for(int ii = 1; ii <= a; ii ++)\r\n    {\r\n        scanf(\"%lf\", &X), g[ii] = X;\r\n        if(ii == 1)\r\n        {\r\n            G[1] = (Point){ 1.0, 2.0 * (1.0 - X) };\r\n            G[2] = (Point){ 1e10, 2.0 * (1e10 - X) };\r\n            tot = 2;\r\n        }\r\n        else\r\n        {\r\n            for(int jj = tot; jj > mid; jj --) G[jj + 2] = G[jj];\r\n            G[mid + 1].K = G[mid + 2].K = 0.0;\r\n            G[mid + 1].x = G[mid + 2].x = Min;\r\n            mid ++, tot += 2;\r\n            for(int jj = 1; jj <= mid; jj ++) G[jj].x += A;\r\n            for(int jj = mid + 1; jj <= tot; jj ++) G[jj].x += B;\r\n            for(int jj = 1; jj <= tot; jj ++) G[jj].K += 2.0 * (G[jj].x - X);\r\n        }\r\n        if(G[1].K > 0.0)\r\n            mid = 0, Min = G[1].x;\r\n        else\r\n        {\r\n            for(int jj = 1; jj <= tot; jj ++)\r\n            if(jj == tot || G[jj + 1].K > 0.0)\r\n            { mid = jj; break; }\r\n            Min = G[mid].x - (G[mid + 1].x - G[mid].x) * G[mid].K / (G[mid + 1].K - G[mid].K);\r\n        }\r\n        an[ii] = Min;\r\n    }\r\n    for(int ii = a - 1; ii >= 1; ii --)\r\n    {\r\n        if(an[ii] < an[ii + 1] - B) an[ii] = an[ii + 1] - B;\r\n        if(an[ii] > an[ii + 1] - A) an[ii] = an[ii + 1] - A;\r\n    }\r\n    for(int ii = 1; ii <= a; ii ++)\r\n        an[0] += (an[ii] - g[ii]) * (an[ii] - g[ii]);\r\n    for(int ii = 1; ii <= a; ii ++)\r\n        printf(\"%.10lf \", an[ii]);\r\n    printf(\"\\n%.10lf\\n\", an[0]);\r\n}\r\n\r\nint main()\r\n{\r\n    Init(), Work(); \r\n    return 0;\r\n}"
}