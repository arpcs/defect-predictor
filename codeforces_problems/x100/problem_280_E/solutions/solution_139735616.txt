{
    "id": 139735616,
    "contestId": 280,
    "creationTimeSeconds": 1639828224,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 280,
        "index": "E",
        "name": "Sequence Transformation",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "brute force",
            "data structures",
            "dp",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 280,
        "members": [
            {
                "handle": "KyuushuKyuuhai"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1362929400
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 101,
    "timeConsumedMillis": 186,
    "memoryConsumedBytes": 409600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 12005,INF = 2e9;\r\nint n,q,a,b,kk,m;double p[N],ans[N],x[N],y[N];\r\nint main ()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin >> n >> q >> a >> b;\r\n    for (int i = 1;i <= n;i++) cin >> p[i];\r\n    x[m] = 1;y[m++] = 2.0 * (1 - p[1]);\r\n    x[m] = INF;y[m++] = 2.0 * (INF - p[1]);\r\n    double tt = x[0] - y[0] / (y[1] - y[0]) * (x[1] - x[0]);ans[1] = tt;\r\n    for (int i = 2;i <= n;i++)\r\n    {\r\n        for (int j = m - 1;j > kk;--j) x[j + 2] = x[j],y[j + 2] = y[j];\r\n        m += 2;\r\n        x[kk + 1] = tt;y[kk + 1] = 0;x[kk + 2] = tt;y[kk + 2] = 0;++kk;\r\n        for (int j = 0;j <= kk;j++) x[j] += a;\r\n        for (int j = kk + 1;j < m;j++) x[j] += b;\r\n        for (int j = 0;j < m;j++) y[j] += 2 * (x[j] - p[i]);\r\n        if (y[0] >= 0) {kk = -1;tt = x[0];}\r\n        else\r\n        {\r\n            for (kk = 0;kk < m;kk++) if (y[kk] <= 0 && y[kk + 1] > 0) break;\r\n            tt = x[kk] - y[kk] / (y[kk + 1] - y[kk]) * (x[kk + 1] - x[kk]);\r\n        }\r\n        ans[i] = tt;\r\n    }\r\n    ans[n] = min(ans[n],1.0 * q);\r\n    for (int i = n;i >= 2;i--) ans[i - 1] = min(ans[i] - a,max(ans[i - 1],ans[i] - b));\r\n    double ret = 0;\r\n    for (int i = 1;i <= n;i++)\r\n    {\r\n        printf(\"%.8lf \",ans[i]);ret += (ans[i] - p[i]) * (ans[i] - p[i]);\r\n    }\r\n    printf(\"\\n%.8lf\\n\",ret);\r\n    return 0;\r\n}"
}