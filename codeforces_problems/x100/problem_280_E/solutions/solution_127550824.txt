{
    "id": 127550824,
    "contestId": 280,
    "creationTimeSeconds": 1630433309,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 280,
        "index": "E",
        "name": "Sequence Transformation",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "brute force",
            "data structures",
            "dp",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 280,
        "members": [
            {
                "handle": "couplefire"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1362929400
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 101,
    "timeConsumedMillis": 404,
    "memoryConsumedBytes": 4915200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int N = 6060;\r\n\r\nint n, svt, c;\r\ndouble q, A, B, x[N];\r\n\r\ndouble mx[N], ans[N], zans;\r\n\r\nstruct line {\r\n\tdouble l, r, k, b;\r\n\r\n\tvoid move(double t) {\r\n\t\tl += t, r += t;\r\n\t\tb -= k * t;\r\n\t}\r\n\tdouble getx() {\r\n\t\tdouble z = -b / k;\r\n\t\tif (z < l) return l;\r\n\t\tif (l <= z && z <= r) return z;\r\n\t\tif (r < z) return r;\r\n\t}\r\n\tdouble get() {\r\n\t\treturn k * getx() + b;\r\n\t}\r\n} sv[N * 2];\r\n\r\nint main() {\r\n\tscanf(\"%d %lf %lf %lf\", &n, &q, &A, &B);\r\n\tfor (int i = 1; i <= n; ++i) {\r\n\t\tscanf(\"%lf\", x + i);\r\n\t}\r\n\tfor (int o = 1; o <= n; ++o) {\r\n\t\tif (o == 1) {\r\n\t\t\tsv[svt = 1] = (line) {1, q, 2, -x[o] * 2};\r\n\t\t} else {\r\n\t\t\tsvt += 2;\r\n\t\t\tfor (int i = svt; i - 2 > c; --i) {\r\n\t\t\t\tsv[i] = sv[i - 2];\r\n\t\t\t\tsv[i].move(B);\r\n\t\t\t}\r\n\t\t\tsv[c + 2] = sv[c], sv[c + 2].move(B - A);\r\n\t\t\tsv[c].r = mx[o - 1];\r\n\t\t\tsv[c + 2].l = mx[o - 1] + B - A;\r\n\t\t\tsv[c + 1] = (line) {sv[c].r, sv[c + 2].l, 0, 0};\r\n\t\t\t\r\n\t\t\tfor (int i = 1; i <= c + 2; ++i) {\r\n\t\t\t\tsv[i].move(A);\r\n\t\t\t}\r\n\t\t\tfor (int i = 1; i <= svt; ++i) {\r\n\t\t\t\tsv[i].k += 2;\r\n\t\t\t\tsv[i].b -= x[o] * 2;\r\n\t\t\t}\r\n\r\n\t\t\twhile (sv[svt].l > q - 1e-7) --svt;\r\n\t\t\tsv[svt].r = q;\r\n\t\t}\r\n\r\n\t\tdouble best = 1e20;\r\n\t\tc = -1;\r\n\t\tfor (int i = 1; i <= svt; ++i) {\r\n\t\t\tdouble cur = fabs(sv[i].get());\r\n\t\t\tif (cur < best) best = cur, c = i;\r\n\t\t}\r\n\t\tmx[o] = sv[c].getx();\r\n\t}\r\n\r\n\tans[n] = mx[n];\r\n\tfor (int o = n; o >= 2; --o) {\r\n\t\tdouble v = ans[o], t = mx[o - 1];\r\n\t\tif (v < A + t) ans[o - 1] = v - A;\r\n\t\tif (A + t <= v && v <= B + t) ans[o - 1] = t;\r\n\t\tif (v > B + t) ans[o - 1] = v - B;\r\n\t}\r\n\r\n\tdouble zans = 0;\r\n\tfor (int i = 1; i <= n; ++i) {\r\n\t\tprintf(\"%lf \", ans[i]);\r\n\t\tzans += (ans[i] - x[i]) * (ans[i] - x[i]);\r\n\t}\r\n\tprintf(\"\\n%lf\\n\", zans);\r\n}\r\n"
}