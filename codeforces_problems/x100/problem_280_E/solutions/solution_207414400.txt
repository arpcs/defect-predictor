{
    "id": 207414400,
    "contestId": 280,
    "creationTimeSeconds": 1685153333,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 280,
        "index": "E",
        "name": "Sequence Transformation",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "brute force",
            "data structures",
            "dp",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 280,
        "members": [
            {
                "handle": "Zeardoe"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1362929400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 63,
    "timeConsumedMillis": 872,
    "memoryConsumedBytes": 4198400,
    "source": "/*\r\n[templates]: \r\nduipai\r\nspjdp\r\ncompre\r\naddhis\r\n*/\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n//use ll instead of int.\r\n#define f(i, a, b) for(int i = (a); i <= (b); i++)\r\n#define cl(i, n) i.clear(),i.resize(n);\r\n#define endl '\\n'\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<long double, long double> pdd;\r\nconst int inf = 1e9;\r\n//#define cerr if(false)cerr\r\n//#define freopen if(false)freopen\r\nmt19937 rng(time(0)); \r\nint rnd(int l, int r) {return rng() % (r-l+1) + l; }\r\n#define watch(x) cerr  << (#x) << ' '<<'i'<<'s'<<' ' << x << endl\r\nvoid pofe(int number, int bitnum) {\r\n    string s; f(i, 0, bitnum) {s += char(number & 1) + '0'; number >>= 1; } \r\n    reverse(s.begin(), s.end()); cerr << s << endl; \r\n    return;\r\n}\r\ntemplate <typename TYP> void cmax(TYP &x, TYP y) {if(x < y) x = y;}\r\ntemplate <typename TYP> void cmin(TYP &x, TYP y) {if(x > y) x = y;}\r\n//\u8c03\u4e0d\u51fa\u6765\u7ed9\u6211\u5bf9\u62cd\uff01\r\n//use std::array.\r\nint x[6060]; \r\nstruct line{\r\n    long double l, r;\r\n    mutable long double k, b;\r\n    bool operator< (const line op) const {\r\n        if(r != op.r) return r < op.r; \r\n        return l < op.l; \r\n    }\r\n}; \r\nvoid add(line &th, long double _k, long double _b) {\r\n    th.k += _k; th.b += _b; \r\n}\r\nlong double pt[6060], ans[6060]; vector<line> s[2]; \r\nsigned main() {\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n    //freopen();\r\n    //freopen();\r\n    //time_t start = clock();\r\n    //think twice,code once.\r\n    //think once,debug forever.\r\n    // time_t alltime = 0; \r\n    int n,q,a,b;cin>>n>>q>>a>>b; long double k=b-a;q-=a*(n-1); //cerr << q << endl; \r\n    f(i,1,n) {cin>>x[i]; x[i] -= a*(i-1); } \r\n   // f(i,1,n)cerr<<x[i]<<\" \\n\"[i==n];\r\n    long double l = 1, r = q; s[0].push_back(line{l,r,0,0}); \r\n    cout << fixed << setprecision(9) ; \r\n    if(l == r) {\r\n        f(i, 1, n) cout << 1 + a * (i - 1) << \" \";\r\n        cout << endl;\r\n        long double res = 0; f(i, 1, n) res += (x[i] - (1)) * (x[i] - (1));\r\n        cout << res << endl; return 0; \r\n    }\r\n    f(i,1,n) {\r\n     //   cerr << \"round \" << i << endl; \r\n        l = 1, r = q; int kjy = i & 1, lyh = kjy ^ 1; s[kjy].clear(); \r\n        auto dp = [=](long double xx) {\r\n            int th = 0, op = s[lyh].size() - 1; \r\n            while(th < op) {\r\n                int mid = (th + op) >> 1; \r\n                if(s[lyh][mid].r < xx) th = mid + 1; \r\n                else op = mid;\r\n            }\r\n            return s[lyh][th].k * xx + s[lyh][th].b; \r\n        };\r\n        for(int j = 1; j <= 150; j ++ ) {\r\n            long double mid = (l + r) / 2; \r\n            if(dp(mid) <= 0) l = mid; else r = mid; \r\n        }\r\n        bool found = 0; pt[i-1]=l; //cerr << \"l = \" << l << endl; \r\n        for(line j : s[lyh]) {\r\n         //   cerr << j.l << \" \"<< j.r << \" \" << j.k << \" \" << j.b << endl; \r\n         //   cerr << \"j,b, j.k, k, j.b-j.k*k = \" << j.b << \" \" << j.k << \" \" << k << \" \" << j.b - j.k * k << endl; \r\n            if(found) {\r\n                \r\n                if(min((long double)q, j.r + k) > j.l + k) \r\n                    s[kjy].push_back({j.l + k, min((long double)q, j.r + k), j.k, j.b - j.k * k}); \r\n                continue;\r\n            }\r\n            if(j.r >= l) {\r\n                l = (j.k == 0 ? j.r : - j.b / j.k); cmax(l, (long double)j.l); cmin(l, (long double)j.r); \r\n                found = 1;\r\n                if(l > j.l) s[kjy].push_back({j.l, l, j.k, j.b}); \r\n                if(min((long double)q, l + k) > l) s[kjy].push_back({l, min((long double)q, l + k), 0, 0}); \r\n                if(min((long double)q, (j.r + k)) > l + k) \r\n                    s[kjy].push_back({l + k, min((long double)q, j.r + k), j.k, j.b - j.k * k}); \r\n                continue;\r\n            }\r\n            s[kjy].push_back(j); \r\n        }\r\n        \r\n        for(auto &it : s[kjy]) {it.k += 2; it.b -= 2 * x[i]; }\r\n      //  for(auto it : s[kjy]) {cerr << it.l << \" \" << it.r << \" \" << it.k << \" \" << it.b << endl; }\r\n    }\r\n    \r\n    l = 1, r = q; \r\n    auto dp = [=](long double xx) {\r\n        int th = 0, op = s[n&1].size() - 1; \r\n        while(th < op) {\r\n            int mid = (th + op) >> 1; \r\n            if(s[n&1][mid].r < xx) th = mid + 1; \r\n            else op = mid;\r\n        }\r\n        return s[n&1][th].k * xx + s[n&1][th].b; \r\n    };\r\n    for(int j = 1; j <= 150; j ++ ) {\r\n        long double mid = (l + r) / 2; \r\n        if(dp(mid) <= 0) l = mid; else r = mid; \r\n    }\r\n   // cerr << l << endl; \r\n    pt[n] = ans[n] = l; \r\n    for(int i = n - 1; i >= 1; i --) {\r\n        if(ans[i+1] < pt[i]) {ans[i] = ans[i+1]; }\r\n        else if(ans[i+1] > pt[i] + k) {ans[i] = ans[i+1] - k; }\r\n        else ans[i] = pt[i]; \r\n    }\r\n    long double u = 1, v = 0; f(i, 1, n) v += (x[i] - u) * (x[i] - u); \r\n    \r\n    f(i, 1, n) cout << ans[i] + a * (i - 1) << \" \";\r\n    cout << endl;  \r\n    for(auto it : s[n&1]) {\r\n        //1/2it.k x^2 + it.b x + C\r\n       // cerr << u << \" \" << v << \" \" << it.l << \" \" << it.r << \" \" << it.k << \" \" << it.b << endl; \r\n        long double C = v - (0.5*it.k*u*u + it.b*u);\r\n        if(it.r >= l) {cout << 0.5*it.k*l*l + it.b*l + C << endl; break;} \r\n        else {u = it.r; v = 0.5*it.k*u*u + it.b*u + C; }\r\n    } \r\n   // time_t finish = clock();\r\n  //  cerr << \"time used:\" << alltime * 1.0 / CLOCKS_PER_SEC <<\"s\"<< endl;\r\n    return 0;\r\n}"
}