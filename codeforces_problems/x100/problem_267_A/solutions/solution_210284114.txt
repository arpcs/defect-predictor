{
    "id": 210284114,
    "contestId": 267,
    "creationTimeSeconds": 1687205362,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 267,
        "index": "A",
        "name": "Subtractions",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 900,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 267,
        "members": [
            {
                "handle": "bkifhr10"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1358002800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 35,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\n#include<bitset>\n#define ll long long\n#define ull unsigned long long\n#define d double\n#define ld long double\n#define en \"\\n\"\n#define f first\n#define se second\n#define pb push_back\n#define all(v) v.begin(),v.end()\n#define loop(i,n) for(int i = 0; i < n; i++)\n#define mod 1000000007\n\nusing namespace std;\nvoid fast(){ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);}\nvoid files()\n{\n    freopen(\"red.in\", \"r\", stdin);\n    //freopen(\"output.txt\", \"w\", stdout);\n}\nll gcd(int a, int b) {\n    if (b == 0) {\n        return a;\n    } else {\n        return gcd(b, a % b);\n    }\n}\n//vector<int> nextGreaterElement(vector<int>& arr) {\n//    int n = arr.size();\n//    vector<int> result(n, -1);\n//    stack<int> s;\n//\n//    for (int i = 0; i < n; i++) {\n//        while (!s.empty() && arr[s.top()] < arr[i]) {\n//            result[s.top()] = i;\n//            s.pop();\n//        }\n//        s.push(i);\n//    }\n//\n//    return result;\n//}\n\nll power(ll a, ll b) {\n    if (b <= 0) return 1;\n    ll ret = power(a * a % mod, b / 2);\n    if (b % 2) ret = ret * a % mod;\n    return ret;\n}\nll inverse(ll b) { return power(b, mod - 2); }\n/*int n; ll s, cost = 0;\nvector<ll>v;\n\nint BS(){\n    int l = 1, r = n;\n    int ans = -1;\n    while(l<=r){\n        int mid = l + (r-l)/2;\n        ll sum= 0;\n        for(int i = 0; i < n; i++) v[i]+=(i+1)*mid;\n        sort(v.begin(),v.end());\n        sum = accumulate(v.begin(),v.begin()+mid,(ll)0);\n        if(sum > s)\n            r=mid-1;\n        else\n        {\n            ans = mid;\n            cost= sum;\n            l = mid+1;\n        }\n    }\n    return ans;\n}*/\nvoid fly(){\n    int a,b; cin >> a >> b;\n    int ans = 0;\n    while(1){\n        int mn = min(a,b);\n        int mx = max(a,b);\n        ans += mx/mn;\n        b = mx%mn;\n        a = mn;\n        if(b == 0) break;\n    }\n    cout<<ans<<en;\n}\n\nint main()\n{\n    //files();\n    fast();\n    int tc = 1; cin >>tc;\n    while(tc--) {\n        fly();\n    }\n    return 0;\n}\n  \t\t\t\t\t   \t   \t\t  \t\t \t    \t\t\t \t"
}