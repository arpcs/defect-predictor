{
    "id": 216583727,
    "contestId": 490,
    "creationTimeSeconds": 1690810517,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 490,
        "index": "C",
        "name": "Hacking Cypher",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "math",
            "number theory",
            "strings"
        ]
    },
    "author": {
        "contestId": 490,
        "members": [
            {
                "handle": "dbaumg"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1416733800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 10137600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n\r\n    string s;\r\n    cin >> s;\r\n    ll n = s.size();\r\n    ll a, b;\r\n    cin >> a >> b;\r\n    ll suffix[n] = {};\r\n    ll p = 1;\r\n    suffix[n - 1] = (s[n - 1] - '0') % b;\r\n    for (int i = n - 2; i >= 0; i--) {\r\n        p *= 10;\r\n        p %= b;\r\n        suffix[i] = suffix[i + 1];\r\n        suffix[i] += (p * (s[i] - '0')) % b;\r\n        suffix[i] %= b;\r\n    }\r\n    ll cur = 0;\r\n    for (int i = 0; i < n - 1; i++) {\r\n        cur *= 10;\r\n        cur += s[i] - '0';\r\n        cur %= a;\r\n        if (cur == 0 && suffix[i + 1] == 0 && s[i + 1] != '0') {\r\n            cout << \"YES\" << \"\\n\";\r\n            for (int j = 0; j <= i; j++)\r\n                cout << s[j];\r\n            cout << \"\\n\";\r\n            for (int j = i + 1; j < n; j++)\r\n                cout << s[j];\r\n            return 0;\r\n        }\r\n    }\r\n    cout << \"NO\";\r\n}"
}