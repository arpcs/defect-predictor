{
    "id": 187636439,
    "contestId": 490,
    "creationTimeSeconds": 1672676463,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 490,
        "index": "C",
        "name": "Hacking Cypher",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "math",
            "number theory",
            "strings"
        ]
    },
    "author": {
        "contestId": 490,
        "members": [
            {
                "handle": "Gabz_Gabz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1416733800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 8908800,
    "source": "#pragma GCC optimize(\"O3,unroll-loops\")\r\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\r\n#define mod 1000000007\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\nstruct custom_hash {\r\n    static uint64_t splitmix64(uint64_t x) {\r\n        // http://xorshift.di.unimi.it/splitmix64.c\r\n        x += 0x9e3779b97f4a7c15;\r\n        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n        return x ^ (x >> 31);\r\n    }\r\n \r\n    size_t operator()(uint64_t x) const {\r\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n        return splitmix64(x + FIXED_RANDOM);\r\n    }\r\n};\r\nvoid solve()\r\n{ string str;\r\n  cin>>str;\r\n  ll a,b;\r\n  cin>>a>>b;\r\n  ll n=str.length();\r\n  unordered_set<ll,custom_hash> s;\r\n  ll temp=1;\r\n  ll tempans=0;\r\n  for(ll i=n-1;i>=0;i--)\r\n  { ll ttemp=(temp*(ll)(str[i]-'0'))%b;\r\n    tempans=(tempans+ttemp)%b;\r\n    if(tempans==0 && str[i]!='0')\r\n    { s.insert(i);\r\n\r\n    }\r\n    temp=(temp*10)%b;\r\n\r\n  }\r\n  tempans=0;\r\n  for(ll i=0;i<n;i++)\r\n  { tempans=((tempans*10)+(ll)(str[i]-'0'))%a;\r\n    if(tempans==0 && s.find(i+1)!=s.end())\r\n    { cout<<\"YES\\n\";\r\n      cout<<str.substr(0,i+1)<<\"\\n\";\r\n      cout<<str.substr(i+1,n-i-1)<<\"\\n\";\r\n      return;\r\n\r\n    }\r\n\r\n  }\r\n  cout<<\"NO\\n\";\r\n\r\n \r\n  \r\n \r\n \r\n    \r\n}\r\n int main() {\r\n   ios_base::sync_with_stdio(false);\r\n   cin.tie(NULL);\r\n   int ttestvar=1;\r\n   //cin>>ttestvar;\r\n   //SieveOfEratosthenes(1000000);\r\n   while(ttestvar--)\r\n   { solve();\r\n \r\n   }\r\n}"
}