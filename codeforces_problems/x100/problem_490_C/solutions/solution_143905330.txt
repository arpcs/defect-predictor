{
    "id": 143905330,
    "contestId": 490,
    "creationTimeSeconds": 1643047768,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 490,
        "index": "C",
        "name": "Hacking Cypher",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "math",
            "number theory",
            "strings"
        ]
    },
    "author": {
        "contestId": 490,
        "members": [
            {
                "handle": "divveren"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1416733800
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 49,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 19148800,
    "source": "//#pragma GCC optimize(\"O3\")\r\n#include<bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n#define ll long long\r\n#define pb emplace_back\r\n#define sz(x) (ll)x.size()\r\n#define ff first\r\n#define ss second\r\n#define mp make_pair\r\n#define ld long double\r\nconst ll inf = (1<<60);\r\nconst ll mod = 1000000007;\r\nconst ll N= 5*1e5+25;\r\nconst ll PW = 31;\r\nmt19937_64 rnd(chrono::high_resolution_clock::now().time_since_epoch().count());\r\nll pr[1000006], sf[1000006];\r\nll binpow (ll a, ll n) {\r\n\tif (n == 0)\r\n\t\treturn 1;\r\n\tif (n % 2 == 1)\r\n\t\treturn binpow (a, n-1) * a;\r\n\telse {\r\n\t\tll b = binpow (a, n/2);\r\n\t\treturn b * b;\r\n\t}\r\n}\r\nvoid solve(){\r\n    string s;\r\n    cin >> s;\r\n    ll a, b;\r\n    cin >> a >> b;\r\n    pr[0] = ((int)s[0]-'0')%a;\r\n    //cout << pr[0] << \" \";\r\n    for(int i = 1; i < s.size(); i++){\r\n        pr[i] = (pr[i-1]*10+(int)s[i]-'0')%a;\r\n        //cout << pr[i] << \" \";\r\n    }\r\n    //cout << endl;\r\n    sf[s.size()-1]=((int)s[s.size()-1]-'0')%b;\r\n    for(int i = s.size()-2; i >= 0; i--){\r\n        sf[i] = (sf[i+1]+((int)s[i]-'0')*binpow(10,s.size()-1-i))%b;\r\n       // cout << sf[i] << \" \";\r\n    }\r\n    string ans1 = \"\", ans2=\"\";\r\n    bool ok = 0;\r\n    for(int i =0 ; i < s.size()-1; i++){\r\n        if(pr[i] == sf[i+1] && pr[i]==0 && s[i+1]!='0'){\r\n            ans1 = s.substr(0, i+1);\r\n            ans2 = s.substr(i+1, s.size()-i);\r\n            ok=1;\r\n            break;\r\n        }\r\n    }\r\n    if(!ok){\r\n        cout << \"NO\";\r\n    }\r\n    else{\r\n        cout << \"YES\\n\";\r\n        cout << ans1 <<endl << ans2 << endl;\r\n    }\r\n}\r\nint main(){\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    ll _t=1, _i=0;\r\n    //cin >> _t;\r\n    while(_i++<_t){\r\n        solve();\r\n    }\r\n}\r\n"
}