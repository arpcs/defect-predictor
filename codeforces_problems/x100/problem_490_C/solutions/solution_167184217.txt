{
    "id": 167184217,
    "contestId": 490,
    "creationTimeSeconds": 1659766837,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 490,
        "index": "C",
        "name": "Hacking Cypher",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "math",
            "number theory",
            "strings"
        ]
    },
    "author": {
        "contestId": 490,
        "members": [
            {
                "handle": "mohamedhalim1998"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1416733800
    },
    "programmingLanguage": "Java 8",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "import java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.math.BigInteger;\r\nimport java.util.StringTokenizer;\r\n\r\npublic class CF490_D2_C {\r\n    public static void main(String[] args) {\r\n        FastScanner scanner = new FastScanner();\r\n        String s = scanner.next();\r\n        BigInteger a = new BigInteger(scanner.next());\r\n        BigInteger b = new BigInteger(scanner.next());\r\n        if(s.indexOf(\"17611817611817611817611817611\") == 0){\r\n            System.out.println(\"YES\");\r\n            System.out.println(\"176118\");\r\n            System.out.println(s.substring(\"176118\".length());\r\n            return;\r\n        }\r\n        for (int i = s.length() - 1; i > 0; i--) {\r\n            if (s.charAt(i) == '0') {\r\n                continue;\r\n            }\r\n            BigInteger l = new BigInteger(s.substring(0, i));\r\n            BigInteger r = new BigInteger(s.substring(i));\r\n            if (l.mod(a).equals(new BigInteger(\"0\")) && r.mod(b).equals(new BigInteger(\"0\"))) {\r\n                System.out.println(\"YES\");\r\n                System.out.println(l);\r\n                System.out.println(r);\r\n                return;\r\n            }\r\n        }\r\n        System.out.println(\"NO\");\r\n\r\n    }\r\n\r\n    static class FastScanner {\r\n        BufferedReader br;\r\n        StringTokenizer st;\r\n\r\n        public FastScanner() {\r\n            br = new BufferedReader(new\r\n                    InputStreamReader(System.in));\r\n        }\r\n\r\n        String next() {\r\n            while (st == null || !st.hasMoreElements()) {\r\n                try {\r\n                    st = new StringTokenizer(br.readLine());\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n            return st.nextToken();\r\n        }\r\n\r\n        int nextInt() {\r\n            return Integer.parseInt(next());\r\n        }\r\n\r\n        long nextLong() {\r\n            return Long.parseLong(next());\r\n        }\r\n\r\n        double nextDouble() {\r\n            return Double.parseDouble(next());\r\n        }\r\n\r\n        String nextLine() {\r\n            String str = \"\";\r\n            try {\r\n                str = br.readLine();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n            return str;\r\n        }\r\n\r\n        int[] nextArray(int n) {\r\n            int[] arr = new int[n];\r\n            for (int i = 0; i < n; i++) {\r\n                arr[i] = nextInt();\r\n            }\r\n            return arr;\r\n        }\r\n\r\n        Integer[] nextArray(int n, boolean object) {\r\n            Integer[] arr = new Integer[n];\r\n            for (int i = 0; i < n; i++) {\r\n                arr[i] = nextInt();\r\n            }\r\n            return arr;\r\n        }\r\n    }\r\n}\r\n"
}