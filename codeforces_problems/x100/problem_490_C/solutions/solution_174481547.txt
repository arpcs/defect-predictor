{
    "id": 174481547,
    "contestId": 490,
    "creationTimeSeconds": 1664782549,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 490,
        "index": "C",
        "name": "Hacking Cypher",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "math",
            "number theory",
            "strings"
        ]
    },
    "author": {
        "contestId": 490,
        "members": [
            {
                "handle": "ninjamayank"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1416733800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 311,
    "memoryConsumedBytes": 34406400,
    "source": "#include <bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\n#define input(x) for(auto &a:x)cin>>a\n#define print(x) for(auto &a:x){cout<<a<<' ';}cout<<nline\n#define ppcl(x) __builtin_popcountll(x)\n#define ppc(x) __builtin_popcount(x)\n#define all(x) x.begin(), x.end()\n#define ll long long int\n#define pb push_back\n#define nline \"\\n\"\n#define INF LLONG_MAX\n#define NINF LLONG_MIN\n#define pii pair<int,int> \n#define fr first\n#define sc second \nusing namespace std;\nusing namespace __gnu_pbds;\n#define precision(x) fixed << setprecision(x)\n#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update>\nconst ll mod = 1e9 + 7;\nconst int MAXN = 200001;\n\nvoid ninjamayank(){\n    string s;\n    ll a,b;\n    cin >> s >> a >> b;\n    set<ll> left, right;\n    ll rem = 0;\n    for(int i = 0;i < s.size();i++){\n        rem = ((rem*10) + (s[i] - '0'))%a;\n        if(rem == 0){\n            left.insert(i + 1);\n        }\n    }\n    rem = 0;\n    reverse(all(s));\n    ll curr = 1;\n    for(int i = 0;i < s.size();i++){\n        ll num = (((s[i] - '0')*curr) + rem);\n        // cout << num << nline;\n        rem = (((s[i] - '0')*curr)%b + rem)%b;\n        curr = (curr * 10ll)%b;\n        if(rem == 0){\n            right.insert(i + 1);\n        }\n    }\n    reverse(all(s));\n    for(auto &it : left){\n        ll other = s.size() - it;\n        if(right.count(other)){\n            string one = s.substr(0,it);\n            string two = s.substr(it);\n            ll cnt = 0;\n            bool flag = 1;\n            for(auto &it : two){\n                if(it == '0' && flag){\n                    cnt++;\n                    continue;\n                }\n                flag = 0;\n            }\n            // cout <<\n            one += string(cnt,'0');\n            two = two.substr(cnt);\n            if(one.size() == 0 || two.size() == 0) continue;\n            cout << \"YES\" << nline;\n            cout << one << nline << two << nline;\n            return;\n        }\n    }\n    cout << \"NO\" << nline;\n}\nint main(){\n    // #ifndef ONLINE_JUDGE\n    //     //for getting input from input1.txt\n    //     freopen(\"input1.txt\", \"r\", stdin);\n    //     //for getting output from output1.txt\n    //     freopen(\"output1.txt\", \"w\", stdout);\n    // #endif\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL); // remove in problems with online query\n    int testcase = 1;\n    // cin >> testcase;\n    int gtc = 1;\n    while(testcase--){\n        //cout << \"Case #\" << gtc << \": \";\n        ninjamayank();\n        gtc++;\n    }\n}"
}