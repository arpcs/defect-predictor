{
    "id": 200626816,
    "contestId": 490,
    "creationTimeSeconds": 1680569737,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 490,
        "index": "C",
        "name": "Hacking Cypher",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "math",
            "number theory",
            "strings"
        ]
    },
    "author": {
        "contestId": 490,
        "members": [
            {
                "handle": "Only1ahmed"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1416733800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 10137600,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n#define ll long long\r\n#define int long long\r\n#define all(x) x.begin(),x.end()\r\n#define yes cout << \"YES\" << endl;\r\n#define no cout << \"NO\" << endl;\r\n#define ones(x) __builtin_popcount(x)\r\n\r\nll power(ll x, ll y, ll mod) {\r\n    ll res = 1;\r\n    x = x % mod;\r\n    if (x == 0) return 0;\r\n    while (y > 0) {\r\n        if (y & 1)\r\n            res = (res * x) % mod;\r\n        y = y >> 1;\r\n        x = (x * x) % mod;\r\n    }\r\n    return res % mod;\r\n}\r\n\r\nsigned main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n    int n, m, k;\r\n    string f;\r\n    cin >> f;\r\n    int a, b;\r\n    n = f.size();\r\n    cin >> a >> b;\r\n    if (n == 1) {\r\n        no\r\n        return 0;\r\n    }\r\n\r\n    int sum1 = 0, sum2 = 0;\r\n    int cnt = 0;\r\n    vector<int> p(n + 1);\r\n    p[0] = 1 % b;\r\n    for (int i = 1; i < n + 1; ++i) {\r\n        p[i] = (p[i - 1] * 10 % b) % b;\r\n    }\r\n    for (int i = n - 1; i >= 1; --i) {\r\n        sum2 += ((f[i] - '0') % b * p[cnt++]) % b;\r\n    }\r\n    cnt--;\r\n    sum1 = (f[0] - '0') % a;\r\n    bool con = 1;\r\n    for (int i = 1; i < n; ++i) {\r\n        if (sum1 == 0 && sum2 == 0 && (f[i] - '0') != 0) {\r\n            con = 0;\r\n            yes\r\n            for (int j = 0; j < i; ++j) {\r\n                cout << f[j];\r\n            }\r\n            cout << endl;\r\n            for (int j = i; j < n; ++j) {\r\n                cout << f[j];\r\n            }\r\n            break;\r\n        }\r\n        if (i == n - 1) {\r\n            break;\r\n        }\r\n        sum1 = (sum1 * 10 % a) % a;\r\n        sum1 = (sum1 + ((f[i] - '0'))) % a;\r\n        sum2 = (sum2 + (b - (((f[i] - '0') % b) * p[cnt--] % b))) % b;\r\n    }\r\n    if (con) {\r\n        no\r\n    }\r\n    return 0;\r\n}"
}