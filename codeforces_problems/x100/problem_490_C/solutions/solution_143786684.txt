{
    "id": 143786684,
    "contestId": 490,
    "creationTimeSeconds": 1642942938,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 490,
        "index": "C",
        "name": "Hacking Cypher",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "math",
            "number theory",
            "strings"
        ]
    },
    "author": {
        "contestId": 490,
        "members": [
            {
                "handle": "Abd-Alrhman.A"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1416733800
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 436,
    "memoryConsumedBytes": 30003200,
    "source": "// IN THE NAME OF ALLAH\r\n\r\n#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n#define gc getchar_unlocked\r\n#define rep(i, v)        for(int i=0;i<sz(v);++i)\r\n#define lp(i, n)        for(int i=0;i<(int)(n);++i)\r\n#define lpi(i, j, n)    for(int i=(j);i<(int)(n);++i)\r\n#define lpd(i, j, n)    for(int i=(j);i>=(int)(n);--i)\r\n#define repa(v)                lpi(i, 0, sz(v)) lpi(j, 0, sz(v[i]))\r\n#define si(x)    scanf(\"%d\",&x)\r\n#define sl(x)    scanf(\"%lld\",&x)\r\n#define ss(s)    scanf(\"%s\",s)\r\n#define pi(x)    printf(\"%d\\n\",x)\r\n#define pl(x)    printf(\"%lld\\n\",x)\r\n#define ps(s)    printf(\"%s\\n\",s)\r\n#define P(x) cout << #x << \"=\" << x << endl\r\n#define P2(x, y) cout << #x << \"=\" << x << \",\" << #y << \"=\" << y << endl\r\n#define pb push_back\r\n#define mp make_pair\r\n#define F first\r\n#define S second\r\n#define all(v)                ((v).begin()), ((v).end())\r\n#define sz(v)                ((int)((v).size()))\r\n#define clr(v, d)            memset(v, d, sizeof(v))\r\n#define sortall(x) sort(all(x))\r\n#define tr(it, a) for(auto it = a.begin(); it != a.end(); it++)\r\n#define PI 3.1415926535897932384626\r\n\r\n#define present(container, element) (container.find(element) != container.end())\r\n#define cpresent(container, element) (find(all(container),element) != container.end())\r\n\r\ntypedef long long ll;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, ll> pl;\r\ntypedef pair<double, double> pdd;\r\ntypedef vector<int> vi;\r\ntypedef vector<char> vc;\r\ntypedef vector<double> v_d;\r\ntypedef vector<string> vs;\r\ntypedef vector<ll> vl;\r\ntypedef vector<pii> vpii;\r\ntypedef vector<pl> vpl;\r\ntypedef vector<vi> vvi;\r\ntypedef vector<vl> vvl;\r\n\r\nint factorial(int);\r\n\r\nll mpow(ll base, ll exp);\r\n//int mod = 1'000'000'007;\r\n//const int mod = 2'000'000'011;\r\n\r\nconst int OO = static_cast<int>(1e8); //Small -> WRONG, Large -> OVERFLOW\r\nconst double EPS = (1e-7);\r\n\r\nint dcmp(double x, double y) { return fabs(x - y) <= EPS ? 0 : x < y ? -1 : 1; }\r\n\r\n//int dx[] = { 0,1,1,1,0,-1,-1,-1 };\r\n//int dy[] = { 1,1,0,-1,-1,-1,0,1 };\r\nint dx[] = {-1, 1, 0, 0};\r\nint dy[] = {0, 0, 1, -1};\r\n\r\nll gcd(ll a, ll b) { return b ? gcd(b, a % b) : a; }\r\n\r\nvl generate_divisors(ll n)    // O( sqrt(n) )\r\n{\r\n    vl v;\r\n    ll i;\r\n    for (i = 1; i * i < n; ++i)\r\n        if (n % i == 0)\r\n            v.push_back(i), v.push_back(n / i);\r\n\r\n    if (i * i == n)\r\n        v.push_back(i);\r\n\r\n    return v;     //Not sorted\r\n}\r\nint power(long long x, unsigned int y, int p) {\r\n    int res = 1;     // Initialize result\r\n\r\n    x = x % p; // Update x if it is more than or\r\n    // equal to p\r\n\r\n    if (x == 0) return 0; // In case x is divisible by p;\r\n\r\n    while (y > 0) {\r\n        // If y is odd, multiply x with result\r\n        if (y & 1)\r\n            res = (res * x) % p;\r\n\r\n        // y must be even now\r\n        y = y >> 1; // y = y/2\r\n        x = (x * x) % p;\r\n    }\r\n    return res;\r\n}\r\n\r\nvoid solve(int tt) {\r\n    string s;\r\n    ll a,b;\r\n    cin >> s >> a >> b;\r\n    vl vec(s.size());\r\n    vl rema(s.size(),0);\r\n    vl remb(s.size(),0);\r\n    string output;\r\n    lp(i,s.size())\r\n    {\r\n        vec[i] = s[i] - '0';\r\n\r\n        if (i == 0) rema[i] = vec[i] % a;\r\n        else rema[i] = (rema[i-1] * 10 + vec[i]) % a;\r\n    }\r\n\r\n    lpd(j,s.size()-1,0)\r\n    {\r\n        if (j == s.size() - 1) remb[j] = vec[j] % b;\r\n        else remb[j] = ll(vec[j] * power(10L,(s.size()-1 -j),b) + remb[j+1]) % b;\r\n    }\r\n    lp(i,s.size() - 1)\r\n    {\r\n        if ((!rema[i]) && (vec[i+   1]) && (!remb[i+1]) )\r\n        {\r\n            lp(j,i+1)\r\n            {\r\n                output.push_back(s[j]);\r\n            }\r\n            output.push_back('\\n');\r\n            lpi(j,i+1,s.size())\r\n            {\r\n                output.push_back(s[j]);\r\n            }\r\n            cout << \"YES\" << endl;\r\n            cout << output;\r\n            return;\r\n        }\r\n\r\n    }\r\n    cout << \"NO\";\r\n    return;\r\n}\r\n\r\nint main() {\r\n\r\n    //ios::sync_with_stdio(0), cin.tie(NULL), cout.tie(NULL);\r\n    int t = 1;\r\n    //cin >> t;\r\n    lpi(tt, 1, t + 1) {\r\n        solve(tt);\r\n    }\r\n\r\n    return 0;\r\n}"
}