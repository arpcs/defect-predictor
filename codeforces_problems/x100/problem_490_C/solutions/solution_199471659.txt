{
    "id": 199471659,
    "contestId": 490,
    "creationTimeSeconds": 1679956758,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 490,
        "index": "C",
        "name": "Hacking Cypher",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "math",
            "number theory",
            "strings"
        ]
    },
    "author": {
        "contestId": 490,
        "members": [
            {
                "handle": "Miguel0312"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1416733800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 10649600,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define F(i,a,b) for(int i = a; i < b; i++)\n#define FE(i,a,b) for(int i = a; i <= b; i++)\n#define FR(i,a,b) for(int i = a; i > b; i--)\n#define FRE(i,a,b) for(int i = a; i >= b; i--)\n#define ll long long //data types used often, but you don't want to type them time by time\n#define ull unsigned long long\n#define ui unsigned int\n#define us unsigned short\n#define FOREACH(i,t) for (auto i=t.begin(); i!=t.end(); i++) // traverse an STL data structure\n#define ALL(c) (c).begin(),(c).end() //handy for function like \"sort()\"\n#define IND(e, arr) find(begin(arr), end(arr), e) - begin(arr)\n#define IOS ios_base::sync_with_stdio(0); //to synchronize the input of cin and scanf\n#define INF 1001001001\n#define PI 3.1415926535897932384626\n#define mp make_pair\n#define fi first\n#define se second\n#define pb push_back\n\ntypedef pair<int, int> ii;\ntypedef vector<int> vi;\ntypedef vector<pair<int, int>> vii;\ntypedef vector<vector<int>> vvi;\ntypedef vector<bool> vb;\n\nint dx[4] = {1,0,-1,0};\nint dy[4] = {0,1,0,-1};\n\nint main(){\n\tIOS\n\tstring s;\n\tll a, b, n, m = 0;\n\tcin >> s >> a >> b;\n\tn = s.size();\n\tvi prefix(n, 0), suffix(n, 0);\n\tint i = 0;\n\tfor(char c : s){\n\t\tm = (10*m)%a;\n\t\tm = (m + (c-'0'))%a;\n\t\tif(s[0] != '0' && m == 0)\n\t\t\tprefix[i] = 1;\n\t\ti++;\n\t}\n\n\tm = 0, i = n-1;\n\tint factor = 1;\n\twhile(i >= 0){\n\t\tchar c = s[i];\n\t\tm = (m+factor*(c-'0'))%b;\n\t\tfactor = (10*factor)%b;\n\t\tif(s[i] != '0' && m == 0)\n\t\t\tsuffix[i] = 1;\n\t\ti--;\n\t}\n\n\tbool found = false;\n\tF(i,0,n-1){\n\t\tif(prefix[i] && suffix[i+1]){\n\t\t\tfound = true;\n\t\t\tcout << \"YES\\n\" << s.substr(0, i+1) << \"\\n\" << s.substr(i+1) << \"\\n\";\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif(!found)\n\t\tcout << \"NO\\n\";\n\n\treturn 0;\n}\n"
}