{
    "id": 17818128,
    "contestId": 666,
    "creationTimeSeconds": 1462788862,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "FinnTheHuman"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 4866,
    "memoryConsumedBytes": 219033600,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nconst int inf = 1e9 + 7;\ntypedef pair<int,int> ii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<ii> vii;\ntypedef vector<vii> vvii;\nint n,m;\nvvi g, t;\nvvii gdist, gdistr;\n\nvoid sssp(vvi& g, vvii& gdist, int s) {\n\tgdist[s][s].first = 0;\n\tvector<bool> vis(n, false);\n\tqueue<int> Q; Q.push(s);\n\n\twhile(not Q.empty()) {\n\t\tint v = Q.front(); Q.pop();\n\t\tif(not vis[v]) {\n\t\t\tvis[v] = true;\n\t\t\tfor(int i=0; i<g[v].size(); ++i) {\n\t\t\t\tint adj = g[v][i];\n\t\t\t\tif(gdist[s][adj].first > gdist[s][v].first + 1) {\n\t\t\t\t\tgdist[s][adj].first = gdist[s][v].first + 1;\n\t\t\t\t}\n\t\t\t\tQ.push(adj);\n\t\t\t}\n\t\t}\n\t}\n}\n\nbool cmp_pair(const ii& a, const ii& b) {\n\tif(a.first == inf) return false;\n\tif(b.first == inf) return true;\n\treturn a.first > b.first;\n}\n\nint main() {\n\tios_base::sync_with_stdio(false); cin.tie(0);\n\tcin >> n >> m;\n\tg = vvi(n, vi());\n\tt = vvi(n, vi());\n\tgdist  = vvii(n, vii(n, ii(inf, 0)));\n\tgdistr = vvii(n, vii(n, ii(inf, 0)));\n\tfor(int i=0; i<n; ++i)\n\t\tfor(int j=0; j<n; ++j) gdist[i][j].second = gdistr[i][j].second = j;\n\tfor(int i=0; i<m; ++i) {\n\t\tint u,v; cin >> u >> v; --u, --v;\n\t\t//if(u==v) continue;\n\t\tg[u].push_back(v);\n\t\tt[v].push_back(u);\n\t}\n\tfor(int i=0; i<n; ++i) {\n\t\tsssp(g, gdist, i);\n\t\tsssp(t, gdistr, i);\n\t}\n\n\tint a,b,c,d;\n\tint max_cost = 0;\n\n\tvvii gdisto = gdist;\n\n\tfor(int i=0; i<n; ++i) {\n\t\tsort(gdist[i].begin(), gdist[i].end(), cmp_pair);\n\t\tsort(gdistr[i].begin(), gdistr[i].end(), cmp_pair);\n\t}\t\n\n\n\tfor(int i = 0; i<n; ++i) {\n\t\tfor(int j = 0; j<n; ++j) {\n\t\t\tif(i == j) continue;\n\t\t\tint dbc = gdisto[i][j].first;\n\t\t\tif(dbc == inf) continue;\n\t\t\t\n\t\t\tvii& db = gdistr[i];\n\t\t\tvii& dc = gdist[j];\n\n\t\t\tfor(int k = 0; k<min(9, (int)db.size()); ++k) {\n\t\t\t\tfor(int l = 0; l<min(9, (int)dc.size()); ++l) {\n\t\t\t\t\tif(db[k].first == inf or dc[l].first == inf) continue;\n\t\t\t\t\tif(db[k].second == dc[l].second) continue;\n\t\t\t\t\tif(db[k].second == i or db[k].second == j) continue;\n\t\t\t\t\tif(dc[l].second == i or dc[l].second == j) continue;\n\t\t\t\t\tif(db[k].first + dc[l].first + dbc > max_cost) {\n\t\t\t\t\t\ta = db[k].second;\n\t\t\t\t\t\tb = i;\n\t\t\t\t\t\tc = j;\n\t\t\t\t\t\td = dc[l].second;\n\t\t\t\t\t\tmax_cost = db[k].first + dc[l].first + dbc;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// .................\n\t\t}\n\t}\n\n\n\n\t++a, ++b, ++c, ++d;\n\tcerr << max_cost << endl;\n\tcout << a << \" \" << b << \" \" << c << \" \" << d << endl;\n\n}"
}