{
    "id": 18368354,
    "contestId": 666,
    "creationTimeSeconds": 1465616468,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "aniketkhandelwal26"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102912000,
    "source": "// Aniket\n#include <iostream>\n#include <stdio.h>\n#include <algorithm>\n#include <math.h>\n#include <vector>\n#include <string>\n#include <set>\nusing namespace std;\n#define gc getchar\n#define MAX_INT 2147483647\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int,int> pi;\ntypedef vector<pi> vpi;\n#define maxs 5005\n#define pb push_back\n#define mp make_pair\n#define fi first\n#define se second\n#define all(a) (a).begin(),(a).end()\n#define fill(ar,val) memset((ar),(val),sizeof (ar))\n#define MIN(a,b) {if((a)>(b)) (a)=(b);}\n#define MAX(a,b) {if((a)<(b)) (a)=(b);}\n#define FOR(i,a,b) for(int i=(a);i<(b);i++) \n \nvoid readint(int &x)\n{\n    register int c = gc();\n    x = 0;\n    int neg = 0;\n    for(;((c<48 || c>57) && c != '-');c = gc());\n    if(c=='-') {neg=1;c=gc();}\n    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}\n    if(neg) x=-x;\n}\n\nint n,m;\nint dis[maxs][maxs];\nvi  graph[maxs];\nvi  edge[maxs];\nint dp[maxs];\nint prevdp[maxs];\nint previous[maxs];\n\nvoid dijkstra(int source)\n{\t\n\tFOR(i,1,n+1)dis[source][i]=MAX_INT;\n\n\tstd::set<pi> myset;\n  \tstd::set<pi>::iterator it;\n\n  \tdis[source][source]=0;\n\n  \tmyset.insert(make_pair(dis[source][source],source));\n\n  \tint u,v,wt;\n\n  \twhile(myset.size()!=0)\n  \t{\n  \t\tit  = myset.begin();\n  \t\tu = it->second;\n\n  \t\tmyset.erase(it);\n\n  \t\tfor(int i=0;i<graph[u].size();i++)\n  \t\t{\n  \t\t\tv  = graph[u][i];\n\n  \t\t\tif(dis[source][v]>dis[source][u]+1)\n  \t\t\t{\t\n  \t\t\t\tif(dis[source][v]!=MAX_INT)\n  \t\t\t\t{\tmyset.erase(myset.find(make_pair(dis[source][v],v)));\t\n  \t\t\t\t}\n\n  \t\t\t\tdis[source][v] = dis[source][u] + 1;\n  \t\t\t\tmyset.insert(make_pair(dis[source][v],v));\n\n  \t\t\t}\n  \t\t}\n\n  \t}\n\n}\n\nvoid pr(vi k)\n{\n\tFOR(i,0,k.size())printf(\"%d \",k[i]);\n\n}\n\nint main()\n{\t\n\tscanf(\"%d%d\",&n,&m);\n\twhile(m-->0)\n\t{\tint u,v;\n\t\treadint(u);\n\t\treadint(v);\n\t\tgraph[u].pb(v);\n\t\n\t}\n\tfor(int i=1;i<=n;i++)dijkstra(i);\n\n\tvi path[maxs];\n\tvi prev_path[maxs];\n\n\tFOR(i,1,n+1)\n\t\tFOR(j,1,n+1)if(dis[i][j] == MAX_INT)dis[i][j] = -1;\n\n\tFOR(j,1,n+1)prevdp[j]=0;\n\n\tFOR(i,1,4)\n\t{\tFOR(j,1,n+1)dp[j]=0;\n\t\t\n\t\tFOR(j,1,n+1)previous[i]=-1;\n\t\t//cout<<\" I \"<<i<<endl;\n\n\t\tFOR(j,1,n+1)\n\t\t{\n\t\t\tFOR(k,1,n+1)\n\t\t\t{\tint obs = 0;\n\t\t\t\tFOR(l,0,path[j].size())\n\t\t\t\t{\t\n\t\t\t\t\tif(path[j][l] == k)obs = 1;\n\t\t\t\t}\n\t\t\t\tif(!obs)\n\t\t\t\t{\tif(dp[k] < prevdp[j] + dis[j][k])\n\t\t\t\t\t{\n\t\t\t\t\t\tdp[k] = prevdp[j] + dis[j][k];\n\t\t\t\t\t\tprevious[k] = j;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\tFOR(j,1,n+1)\n\t\t{\n\t\t\tpath[j].resize(0);\n\t\t\tif(previous[j] != -1)\n\t\t\t{\n\t\t\t\tFOR(k,0,prev_path[previous[j]].size())path[j].pb(prev_path[previous[j]][k]);\n\t\t\t\tpath[j].pb(previous[j]);\n\t\t\t}\n\n\t\t//\tcout<<\" ind  :\"<<j<<\" prev :\"<<previous[j]<<\" cost :\"<<dp[j]<<endl; \n\t\t//\tpr(path[j]);\n\t\t//\tcout<<\" end\"<<endl;\n\t\t}\n\n\n\t\tFOR(j,1,n+1)\n\t\t{\n\t\t\tprevdp[j] = dp[j];\n\t\t\tprev_path[j].resize(0);\n\t\t\tFOR(k,0,path[j].size())prev_path[j].push_back(path[j][k]);\n\t\t\t\n\t\t}\n\n\t}\n\n\tFOR(j,1,n+1)path[j].pb(j);\n\n\tint ma = 0;\n\tint index = -1;\n\tFOR(j,1,n+1)\n\t{\n\t\tif(dp[j]>ma)\n\t\t{\tdp[j] = ma;\n\t\t\tindex = j;\n\t\t}\n\t}\n \tif(index != -1)\n \t{\n \t\tpr(path[index]);\n \t}\n\n}"
}