{
    "id": 58366599,
    "contestId": 666,
    "creationTimeSeconds": 1565065332,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "hoangteo0103"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int maxn = 3003;\r\n#define fo(i,a,b) for(int i=a;i<=b;i++)\r\nint n, m, u, v, d[maxn][maxn];\r\nvector <int> g[maxn];\r\nvector < pair <int, int> > xuoi[maxn], nguoc[maxn];\r\nvector <int> res;\r\nint main(){\r\n    cin>>n>>m;\r\n    fo(i,1,m) {\r\n        cin>>u>>v;\r\n        u--, v--;\r\n        g[u].push_back(v);\r\n    }\r\n    fo(i,0,n-1) {\r\n        queue <int> q;\r\n        fo(j,0,n-1)\r\n            if(j == i)d[i][j] = 0;\r\n            else d[i][j] = -1;\r\n        q.push(i);\r\n        while(!q.empty()){\r\n            int u = q.front();\r\n            q.pop();\r\n            for(int v : g[u]){\r\n                if(d[i][v] == -1){\r\n                    d[i][v] = d[i][u] + 1;\r\n                    q.push(v);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    fo(i,0,n-1) {\r\n        fo(j,0,n-1){\r\n            if(j == i)continue;\r\n            if(d[i][j] != -1){\r\n            xuoi[i].push_back(make_pair(d[i][j], j));\r\n            }\r\n            if(d[j][i] != -1){\r\n            nguoc[i].push_back(make_pair(d[j][i], j));\r\n            }\r\n        }\r\n        sort(xuoi[i].begin(), xuoi[i].end());\r\n        sort(nguoc[i].begin(), nguoc[i].end());\r\n    }\r\n    int maxx = -1;\r\n    fo(i,0,n-1)\r\n    fo(j,0,n-1{\r\n        if(i == j)continue;\r\n        if(d[i][j] == -1)continue;\r\n        fo(a,0,min(3,xuoi[j].size()))\r\n        fo(b,0,min(3,nguoc[i].size())){\r\n            int x =xuoi[j][a].second, y = nguoc[i][b].second;\r\n            if(x == i)continue;\r\n            if(y == j)continue;\r\n            if(x == y)continue;\r\n            if(d[y][i] + d[i][j] + d[j][x] > mx){\r\n                maxx = d[y][i] + d[i][j] + d[j][x];\r\n                res.clear();\r\n                res.push_back(y);\r\n                res.push_back(i);\r\n                res.push_back(j);\r\n                res.push_back(x);\r\n            }\r\n        }\r\n    }\r\n    for(int i: res ) {\r\n        cout<<i+1<<\" \";\r\n    }\r\n}\r\n"
}