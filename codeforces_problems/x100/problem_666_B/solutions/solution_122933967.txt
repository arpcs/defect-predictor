{
    "id": 122933967,
    "contestId": 666,
    "creationTimeSeconds": 1626613957,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "Vjovein"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 2136,
    "memoryConsumedBytes": 238387200,
    "source": "#include <bits/stdc++.h>\r\n \r\nusing namespace std;\r\nconst int INF=1000000;\r\n#define MAX 3000\r\nvector < pair<int,int> > a[MAX+5];\r\nvector < pair<int,int> > b[MAX+5];\r\nvector <int> c[MAX+5];\r\nint d[MAX+5][MAX+5];\r\nbool vis[MAX+5];\r\nint res[5];\r\nint n,m;\r\nvoid spfa(int i)\r\n{\r\n   memset(vis,false,sizeof(vis));\r\n   queue<int> q;\r\n   q.push(i);vis[i]=1;\r\n   while(!q.empty())\r\n   {\r\n       int x=q.front();q.pop();\r\n       vis[x]=0;\r\n       for(int j=0;j<c[x].size();j++)\r\n       {\r\n           int next=c[x][j];\r\n           if(d[i][next]>d[i][x]+1)\r\n           {\r\n               d[i][next]=d[i][x]+1;\r\n               if(!vis[next])\r\n               {\r\n                   vis[next]=1;\r\n                   q.push(next);\r\n               }\r\n           }\r\n       }\r\n   }\r\n}\r\nint main()\r\n{\r\n    scanf(\"%d%d\",&n,&m);\r\n    int x,y;\r\n    for(int i=1;i<=n;i++)\r\n        for(int j=1;j<=n;j++)\r\n        {\r\n              if(i==j) d[i][j]=0;\r\n              else d[i][j]=INF;\r\n        }\r\n    for(int i=1;i<=m;i++)\r\n    {\r\n        scanf(\"%d%d\",&x,&y);\r\n        c[x].push_back(y);\r\n    }\r\n    for(int i=1;i<=n;i++)\r\n        spfa(i);\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        for(int j=1;j<=n;j++)\r\n        {\r\n            if(i==j) continue;\r\n            if(d[i][j]!=INF) a[i].push_back(make_pair(d[i][j],j));\r\n            if(d[j][i]!=INF) b[i].push_back(make_pair(d[j][i],j));\r\n        }\r\n        sort(a[i].begin(),a[i].end());\r\n        sort(b[i].begin(),b[i].end());\r\n    }\r\n    int ans=0;\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        int nn=b[i].size();\r\n        for(int j=1;j<=n;j++)\r\n        {\r\n            if(i==j) continue;\r\n\t\t\tif(d[i][j]==INF) continue;\r\n            int mm=a[j].size();\r\n            for(int k=nn-1;k>=0&&k>=nn-3;k--)\r\n            {\r\n                int kk=b[i][k].second;\r\n                if(kk==j||kk==i) continue;\r\n                for(int p=mm-1;p>=0&&p>=mm-3;p--)\r\n                {\r\n                    int pp=a[j][p].second;\r\n                    if(pp==i||pp==j||pp==kk) continue;\r\n                    if(ans<d[kk][i]+d[i][j]+d[j][pp])\r\n                    {\r\n                        ans=d[kk][i]+d[i][j]+d[j][pp];\r\n                        res[1]=kk;res[2]=i;res[3]=j;res[4]=pp;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\t//printf(\"%d\\n\",ans);\r\n    for(int i=1;i<=4;i++)\r\n    {\r\n        if(i==4)\r\n            printf(\"%d\\n\",res[i]);\r\n        else\r\n            printf(\"%d \",res[i]);\r\n    }\r\n    return 0;\r\n}\r\n"
}