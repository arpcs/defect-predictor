{
    "id": 122882704,
    "contestId": 666,
    "creationTimeSeconds": 1626578481,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "donkeys"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 18,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 40243200,
    "source": "#include <cstring>\r\n#include <iostream>\r\n#include <queue>\r\nusing namespace std;\r\nconst int N = 3003, M = 5003;\r\nint to[M], nxt[M], head[N], tot;\r\nint dis[N][N];\r\npair<int, int> lgto[N][3], lgfrom[N][3];\r\nint n, m;\r\nvoid add(int f, int t)\r\n{\r\n\tto[++tot] = t, nxt[tot] = head[f], head[f] = tot;\r\n}\r\nvoid bfs(int st)\r\n{\r\n\tqueue<int> q;\r\n\tbool v[N] = {0};\r\n\tq.push(st), v[st] = 1, dis[st][st] = 0;\r\n\twhile (!q.empty())\r\n\t{\r\n\t\tint p = q.front();\r\n\t\tq.pop();\r\n\t\tfor (int i = head[p]; i; i = nxt[i])\r\n\t\t{\r\n\t\t\tif (v[to[i]])\r\n\t\t\t\tcontinue;\r\n\t\t\tv[to[i]] = 1, dis[st][to[i]] = dis[st][p] + 1;\r\n\t\t\tq.push(to[i]);\r\n\t\t}\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tmemset(dis, -1, sizeof(dis));\r\n\tcin >> n >> m;\r\n\tfor (int i = 0, a, b; i < m; i++)\r\n\t{\r\n\t\tcin >> a >> b;\r\n\t\tadd(a, b);\r\n\t}\r\n\tfor (int i = 1; i <= n; ++i)\r\n\t{\r\n\t\tbfs(i);\r\n\t}\r\n\tfor (int i = 1; i <= n; ++i)\r\n\t{\r\n\t\tfor (int j = 1; j <= n; j++)\r\n\t\t{\r\n\t\t\tif (dis[j][i] > lgfrom[i][0].first)\r\n\t\t\t{\r\n\t\t\t\tlgfrom[i][2] = lgfrom[i][1];\r\n\t\t\t\tlgfrom[i][1] = lgfrom[i][0];\r\n\t\t\t\tlgfrom[i][0] = {dis[j][i], j};\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse if (dis[j][i] > lgfrom[i][1].first)\r\n\t\t\t{\r\n\t\t\t\tlgfrom[i][2] = lgfrom[i][1];\r\n\t\t\t\tlgfrom[i][1] = {dis[j][i], j};\r\n\t\t\t}\r\n\t\t\telse if (dis[j][i] > lgfrom[i][2].first)\r\n\t\t\t{\r\n\t\t\t\tlgfrom[i][2] = {dis[j][i], j};\r\n\t\t\t}\r\n\t\t\tif (dis[i][j] > lgto[i][0].first)\r\n\t\t\t{\r\n\t\t\t\tlgto[i][2] = lgto[i][1];\r\n\t\t\t\tlgto[i][1] = lgto[i][0];\r\n\t\t\t\tlgto[i][0] = {dis[i][j], j};\r\n\t\t\t}\r\n\t\t\telse if (dis[i][j] > lgto[i][1].first)\r\n\t\t\t{\r\n\t\t\t\tlgto[i][2] = lgto[i][1];\r\n\t\t\t\tlgto[i][1] = {dis[i][j], j};\r\n\t\t\t}\r\n\t\t\telse if (dis[i][j] > lgto[i][2].first)\r\n\t\t\t{\r\n\t\t\t\tlgto[i][2] = {dis[i][j], j};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tint ans = 0, fa, fb, fc, fd;\r\n\tfor (int i = 1; i <= n; ++i)\r\n\t{\r\n\t\tfor (int j = 1; j <= n; ++j)\r\n\t\t{\r\n\t\t\tif (i == j)\r\n\t\t\t\tcontinue;\r\n\t\t\tint tmp = 0, ta, tb, tc, td;\r\n\t\t\tfor (int cnta = 0; cnta < 3; cnta++)\r\n\t\t\t{\r\n\t\t\t\tint fp = lgfrom[i][cnta].second;\r\n\t\t\t\tif (fp == i || fp == j)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tfor (int cntb = 0; cntb < 3; cntb++)\r\n\t\t\t\t{\r\n\t\t\t\t\tint tp = lgto[j][cntb].second;\r\n\t\t\t\t\tif (tp == fp || tp == i || tp == j)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\tif (lgfrom[i][cnta].first + lgto[j][cntb].first > tmp)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttmp = lgfrom[i][cnta].first + lgto[j][cntb].first;\r\n\t\t\t\t\t\tta = fp, tb = i, tc = j, td = tp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (tmp + dis[i][j] > ans)\r\n\t\t\t{\r\n\t\t\t\tans = tmp + dis[i][j];\r\n\t\t\t\tfa = ta, fb = tb, fc = tc, fd = td;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcout << fa << ' ' << fb << ' ' << fc << ' ' << fd;\r\n\treturn 0;\r\n}"
}