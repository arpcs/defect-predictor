{
    "id": 71451034,
    "contestId": 666,
    "creationTimeSeconds": 1582130658,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "mh755628"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 2074,
    "memoryConsumedBytes": 242483200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n \r\n \r\nconst int N = 3000 + 7;\r\n \r\nvector <int> adj[N];\r\n \r\n \r\nvector <pair <int, int> > in[N], out[N];\r\n \r\nint d[N][N];\r\n \r\nvoid bfs(int s, int d[]) {\r\n    queue <int> q;\r\n    q.push(s);\r\n    d[s] = 1;\r\n    while(!q.empty()) {\r\n        int u = q.front(); q.pop();\r\n        in[u].push_back({d[u], s});\r\n        out[s].push_back({d[u], u});\r\n        for(int v: adj[u]) {\r\n            if(!d[v]) {\r\n                d[v] = d[u] + 1;\r\n                q.push(v);\r\n            }\r\n        }\r\n    }\r\n \r\n}\r\n \r\nint main() {\r\n    ios_base :: sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n    int n, m; cin >> n >> m;\r\n    for(int i = 1; i <= m; i++) {\r\n        int u, v; cin >> u >> v;\r\n        adj[u].push_back(v);\r\n    }\r\n    for(int i = 1; i <= n; i++) {\r\n        bfs(i, d[i]);\r\n    }\r\n \r\n    for(int i = 1; i <= n; i++) {\r\n        sort(in[i].begin(), in[i].end(), greater <pair <int, int> > ());\r\n        sort(out[i].begin(), out[i].end(), greater <pair <int, int> > ());\r\n    }\r\n \r\n    int ans = 0, ax, bx, cx, dx;\r\n    for(int i = 1; i < n; i++) {\r\n        for(int j = 1; j <= n; j++) {\r\n            if(d[i][j] && i != j) {\r\n                for(int k = 0; k < in[i].size() && k < 4; k++) {\r\n                    for(int l = 0; l < out[j].size() && l < 4; l++) {\r\n                        int p = in[i][k].second, q = out[j][l].second;\r\n                        if(p != q && p != j && q != i && p != i && q != j && d[i][j] + d[p][i] + d[j][q] > ans) {\r\n                            ans = d[i][j] + d[p][i] + d[j][q];\r\n                            ax = p;\r\n                            bx = i;\r\n                            cx = j;\r\n                            dx = q;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    cout << ax << \" \" << bx << \" \" << cx << \" \" << dx << endl;\r\n}"
}