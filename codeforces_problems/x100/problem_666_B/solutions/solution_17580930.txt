{
    "id": 17580930,
    "contestId": 666,
    "creationTimeSeconds": 1461953301,
    "relativeTimeSeconds": 5601,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "Maestr0"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 5,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 114688000,
    "source": "#include<bits/stdc++.h>\r\n\r\n#define pb push_back\r\n#define mp make_pair\r\n#define x first\r\n#define y second\r\n#define y0 qweasd\r\n#define y1 qasdna\r\n#define left leva\r\n#define right prava\r\n#define next sled\r\nusing namespace std;\r\nconst int N=3055;\r\nconst int inf=1e9;\r\nstruct kek{\r\n    int q[4],w[4], cat;\r\n    void up(int x,int y){\r\n        q[cat]=x;\r\n        w[cat]=y;\r\n        ++cat;\r\n    }\r\n};\r\nvector<int> g[N];\r\nint gl;\r\nint d[N][N];\r\npair<int,int> dd[N][N];\r\nvector<pair<int,int> > de[N];\r\nkek lel[N];\r\nkek lol[N];\r\nkek fit;\r\nvoid dfs(int v){\r\n    for(int i=0;i<g[v].size();++i){\r\n        if(d[gl][v]+1<d[gl][g[v][i]]){\r\n            d[gl][g[v][i]]=d[gl][v]+1;\r\n            dfs(g[v][i]);\r\n        }\r\n    }\r\n}\r\nint n,m,x,y;\r\nint mx,v1,v2,v3,v4;\r\nmain(){\r\n   // cin.tie(0);\r\n   // ios_base::sync_with_stdio(0);\r\n  //  freopen(\"input.txt\",\"r\",stdin);\r\n  //  freopen(\"output.txt\",\"w\",stdout);\r\n    scanf(\"%d%d\",&n,&m);\r\n    for(int i=1;i<=m;++i){\r\n        scanf(\"%d%d\",&x,&y);\r\n        g[x].pb(y);\r\n    }\r\n    for(int i=0;i<4;++i)\r\n        fit.q[i]=fit.w[i]=fit.cat=0;\r\n    for(int i=1;i<=n;++i)\r\n        for(int j=1;j<=n;++j)\r\n            d[i][j]=inf;\r\n    for(int i=1;i<=n;++i){\r\n        gl=i;\r\n        d[i][i]=0;\r\n        dfs(i);\r\n    }\r\n    int ans=0;\r\n    for(int i=1;i<=n;++i)\r\n        lol[i]=lel[i]=fit;\r\n    /*\r\n    for(int i=1;i<=n;++i){\r\n        for(int j=1;j<=n;++j)\r\n            cout<<d[i][j]<<' ';\r\n        cout<<endl;\r\n    }\r\n    */\r\n    for(int i=1;i<=n;++i)\r\n        for(int j=1;j<=n;++j)\r\n            dd[i][j]=mp(d[i][j],j),de[j].pb(mp(d[i][j],i));\r\n\r\n          //  if(i!=j&d[i][j]!=inf)\r\n         //  lel[i].up(d[i][j],j),\r\n         //  lol[j].up(d[i][j],i);\r\n    for(int i=1;i<=n;++i){\r\n        int cap=0;\r\n        sort(dd[i]+1,dd[i]+n+1);\r\n        for(int j=n;j>=1;--j){\r\n            if(dd[i][j].x!=inf){\r\n              //  cout<<i<<' '<<dd[i][j].y<<' '<<dd[i][j].x<<\"\\n\";\r\n                //++cap;\r\n                lel[i].up(dd[i][j].x,dd[i][j].y);\r\n\r\n                if(cap==4){\r\n                   // cout<<i<<' '<<j<<endl;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    for(int i=1;i<=n;++i){\r\n        sort(de[i].begin(),de[i].end());\r\n        reverse(de[i].begin(),de[i].end());\r\n        int cap=0;\r\n        for(int j=0;j<n;++j){\r\n            if(de[i][j].x!=inf){\r\n                lol[i].up(de[i][j].x,de[i][j].y);\r\n                if(cap==4)break;\r\n            }\r\n        }\r\n    }\r\n    for(int i=1;i<=n;++i)\r\n        for(int j=1;j<=n;++j)\r\n                if(i!=j&&d[i][j]!=inf)\r\n        for(int k=0;k<4;++k){\r\n                    int q1=lol[i].q[k];\r\n                    int w1=lol[i].w[k];\r\n                    if(i!=w1&&j!=w1&&q1!=0)\r\n                for(int z=0;z<4;++z){\r\n                        int q2=lel[j].q[z];\r\n                        int w2=lel[j].w[z];\r\n                        if(i!=w2&&j!=w2&&w1!=w2&&w2!=0){\r\n                            ans=d[i][j]+q1+q2;\r\n                            if(ans>mx){\r\n                                mx=ans;\r\n                                v1=w1;\r\n                                v2=i;\r\n                                v3=j;\r\n                                v4=w2;\r\n                       //         cout<<q1<<' '<<d[i][j]<<' '<<q2<<endl;\r\n                            }\r\n                           }\r\n\r\n    }\r\n        }\r\n    printf(\"%d %d %d %d\",v1,v2,v3,v4);\r\n\r\n\r\n\r\n}\r\n\r\n"
}