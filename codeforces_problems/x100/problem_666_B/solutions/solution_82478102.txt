{
    "id": 82478102,
    "contestId": 666,
    "creationTimeSeconds": 1591270825,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "ngpin04"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 779,
    "memoryConsumedBytes": 36864000,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nvector <int> adj[3005];\r\n\r\nint dp[3005][3005];\r\nint f[3005][5];\r\nint Q[3005];\r\nint ans[4];\r\nint from[3005][4];\r\nint to[3005][4];\r\nint n,m,res;\r\n\r\n\r\nvoid bfs(int s)\r\n{\r\n    int f = 0;\r\n    int r = 0;\r\n    Q[++r] = s;\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        dp[s][i] = (s != i) ? -1e9 : 0;\r\n    }\r\n    while (r > f)\r\n    {\r\n        int u = Q[++f];\r\n        for (int v : adj[u])\r\n        {\r\n            if (dp[s][v] < 0)\r\n            {\r\n                dp[s][v] = dp[s][u] + 1;\r\n                Q[++r] = v;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvoid sort_from(int i)\r\n{\r\n    for (int j = 0; j <= 3; j++)\r\n    for (int k = j + 1; k <= 3; k++)\r\n    {\r\n        int u = from[i][j];\r\n        int v = from[i][k];\r\n        if (dp[i][u] < dp[i][v])\r\n        {\r\n            swap(from[i][j], from[i][k]);\r\n        }\r\n    }\r\n}\r\n\r\nvoid sort_to(int i)\r\n{\r\n    for (int j = 0; j <= 3; j++)\r\n    for (int k = j + 1; k <= 3; k++)\r\n    {\r\n        int u = to[i][j];\r\n        int v = to[i][k];\r\n        if (dp[u][i] < dp[v][i])\r\n        {\r\n            swap(to[i][j], to[i][k]);\r\n        }\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    //freopen(\"file.inp\",\"r\",stdin);\r\n    cin >> n >> m;\r\n    for (int i = 1; i <= m; i++)\r\n    {\r\n        int u,v;\r\n        cin >> u >> v;\r\n        adj[u].push_back(v);\r\n    }\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        bfs(i);\r\n    }\r\n    for (int i = 1; i <= n; i++)\r\n    for (int j = 1; j <= n; j++)\r\n    {\r\n        if (i == j) continue;\r\n        from[i][3] = j;\r\n        to[i][3] = j;\r\n        sort_to(i);\r\n        sort_from(i);\r\n    }\r\n    for (int b = 1; b <= n; b++)\r\n    for (int c = 1; c <= n; c++)\r\n    {\r\n        if (b == c) continue;\r\n        for (int i = 0; i <= 2; i++)\r\n        for (int j = 0; j <= 2; j++)\r\n        {\r\n            int a = to[b][i];\r\n            int d = from[c][j];\r\n            if (!a || !d) continue;\r\n            if (a == b || a == c || d == b || d == c || a == d) continue;\r\n            int sum = dp[a][b] + dp[b][c] + dp[c][d];\r\n            if (sum > res)\r\n            {\r\n                res = sum;\r\n                ans[0] = a;\r\n                ans[1] = b;\r\n                ans[2] = c;\r\n                ans[3] = d;\r\n            }\r\n        }\r\n    }\r\n    for (int i : ans) cout << i << \" \";\r\n    return 0;\r\n}\r\n"
}