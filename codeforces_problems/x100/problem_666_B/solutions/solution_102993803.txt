{
    "id": 102993803,
    "contestId": 666,
    "creationTimeSeconds": 1609541769,
    "relativeTimeSeconds": 2169,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "timmyfeng"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1609539600
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 2402,
    "memoryConsumedBytes": 237056000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int N = 3000 + 1;\r\n\r\nvector<array<int, 2>> prv[N], nxt[N];\r\nvector<int> adj[N];\r\nint dist[N][N];\r\n\r\nint main() {\r\n  ios_base::sync_with_stdio(false);\r\n  cin.tie(nullptr);\r\n\r\n  int n, m;\r\n  cin >> n >> m;\r\n\r\n  while (m--) {\r\n    int u, v;\r\n    cin >> u >> v;\r\n    adj[u].push_back(v);\r\n  }\r\n\r\n  for (int i = 1; i <= n; ++i) {\r\n    fill(dist[i] + 1, dist[i] + n + 1, -1);\r\n    dist[i][i] = 0;\r\n\r\n    queue<int> que;\r\n    que.push(i);\r\n\r\n    while (!que.empty()) {\r\n      int u = que.front();\r\n      que.pop();\r\n      for (auto c : adj[u]) {\r\n        if (dist[i][c] == -1) {\r\n          dist[i][c] = dist[i][u] + 1;\r\n          que.push(c);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (int j = 1; j <= n; ++j) {\r\n      if (dist[i][j] != -1) {\r\n        nxt[i].push_back({dist[i][j], j});\r\n        prv[j].push_back({dist[i][j], i});\r\n      }\r\n    }\r\n  }\r\n\r\n  for (int i = 1; i <= n; ++i) {\r\n    sort(nxt[i].rbegin(), nxt[i].rend());\r\n    if (nxt[i].size() > 4) {\r\n      nxt[i].resize(4);\r\n    }\r\n\r\n    sort(prv[i].rbegin(), prv[i].rend());\r\n    if (prv[i].size() > 4) {\r\n      prv[i].resize(4);\r\n    }\r\n  }\r\n\r\n  array<int, 5> ans{};\r\n  for (int i = 1; i <= n; ++i) {\r\n    for (int j = 1; j <= n; ++j) {\r\n      if (i != j && dist[i][j] != -1) {\r\n        for (auto [x, u] : prv[i]) {\r\n          for (auto [y, v] : nxt[j]) {\r\n            if (u != i && u != j && u != v && v != i && v != j) {\r\n              ans = max(ans, array<int, 5>{x + dist[i][j] + y, u, i, j, v});\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  for (int i = 1; i < 5; ++i) {\r\n    cout << ans[i] << \" \";\r\n  }\r\n  cout << \"\\n\";\r\n}\r\n"
}