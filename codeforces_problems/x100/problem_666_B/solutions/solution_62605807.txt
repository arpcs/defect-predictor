{
    "id": 62605807,
    "contestId": 666,
    "creationTimeSeconds": 1571125362,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "luogu_bot1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 1387,
    "memoryConsumedBytes": 236851200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int maxn=5111;\r\nstruct edge{\r\n\tint v,fail;\r\n}e[maxn];\r\nint p[maxn],eid;\r\nvoid init(){\r\n\tmemset(p,-1,sizeof p);\r\n\teid=0;\r\n}\r\nvoid insert(int u,int v){\r\n\te[eid].v=v;\r\n\te[eid].fail=p[u];\r\n\tp[u]=eid++;\r\n}\r\nint dis[3010][3010];\r\nbool vis[3010];\r\nvoid bfs(int rt){\r\n\tmemset(dis[rt],-1,sizeof(dis[rt]));\r\n\tmemset(vis,false,sizeof(vis));\r\n\tvis[rt]=true;\r\n\tdis[rt][rt]=0;\r\n\tqueue<int> q;\r\n\tq.push(rt);\r\n\twhile(!q.empty()){\r\n\t\tint u=q.front();\r\n\t\tq.pop();\r\n\t\tfor(int i=p[u];i!=-1;i=e[i].fail){\r\n\t\t\tint v=e[i].v;\r\n\t\t\tif(vis[v] == true)continue;\r\n\t\t\tdis[rt][v]=dis[rt][u]+1;\r\n\t\t\tvis[v]=true;\r\n\t\t\tq.push(v);\r\n\t\t}\r\n\t}\r\n}\r\nstruct node{\r\n\tint len,id;\r\n};\r\nvector<node> in[maxn],out[maxn];\r\nbool cmp(node x,node y){\r\n\treturn x.len > y.len;\r\n}\r\nint A,B,C,D,fans=0;\r\nint main(){\r\n\tint n,m;\r\n\tscanf(\"%d%d\",&n,&m);\r\n\tinit();\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tint u,v;\r\n\t\tscanf(\"%d%d\",&u,&v);\r\n\t\tinsert(u,v);\r\n\t}\r\n\tfor(int i=1;i<=n;i++) bfs(i);\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tfor(int j=1;j<=n;j++){\r\n\t\t\tif(dis[i][j]!=-1){\r\n\t\t\t\tout[i].push_back((node){dis[i][j],j});\r\n\t\t\t\tin[j].push_back((node){dis[i][j],i});\r\n\t\t\t}\r\n\t\t}\r\n\t} \r\n\tfor(int i=1;i<=n;i++){\r\n\t\tsort(in[i].begin(),in[i].end(),cmp);\r\n\t\tsort(out[i].begin(),out[i].end(),cmp);\r\n\t}\r\n\tfor(int b=1;b<=n;b++){\r\n\t\tfor(int c=1;c<=n;c++){\r\n\t\t\tif(b!=c&&dis[b][c]!=-1){\r\n\t\t\t\tint a=-1,d=-1;\r\n\t\t\t\tfor(int i=0;i<in[b].size();i++){\r\n\t\t\t\t\tif(in[b][i].id!=b&&in[b][i].id!=c){\r\n\t\t\t\t\t\ta=in[b][i].id;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor(int i=0;i<out[c].size();i++){\r\n\t\t\t\t\tif(out[c][i].id!=b&&out[c][i].id!=c&&out[c][i].id!=a){\r\n\t\t\t\t\t\td=out[c][i].id;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(a!=-1&&d!=-1){\r\n\t\t\t\t\t//cout << a << \" \" << b << \" \" << c << \" \" << d << endl;\r\n\t\t\t\t\tif(dis[a][b]+dis[b][c]+dis[c][d] > fans){\r\n\t\t\t\t\t\tfans=dis[a][b]+dis[b][c]+dis[c][d];\r\n\t\t\t\t\t\tA=a;B=b;\r\n\t\t\t\t\t\tC=c;D=d;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(b!=c&&dis[b][c]!=-1){\r\n\t\t\t\tint a=-1,d=-1;\r\n\t\t\t\tfor(int i=0;i < out[c].size();i++){\r\n\t\t\t\t\tif(out[c][i].id!=b&&out[c][i].id!=c){\r\n\t\t\t\t\t\td=out[c][i].id;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor(int i=0;i < in[b].size();i++){\r\n\t\t\t\t\tif(in[b][i].id!=b&&in[b][i].id!=c&&in[b][i].id!=d){\r\n\t\t\t\t\t\ta=in[b][i].id;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(a!=-1&&d!=-1){\r\n\t\t\t\t\t//cout << a << \" \" << b << \" \" << c << \" \" << d << endl;\r\n\t\t\t\t\tif(dis[a][b]+dis[b][c]+dis[c][d] > fans){\r\n\t\t\t\t\t\tfans=dis[a][b]+dis[b][c]+dis[c][d];\r\n\t\t\t\t\t\tA=a;B=b;\r\n\t\t\t\t\t\tC=c;D=d;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcout<<A<<\" \"<<B<<\" \"<<C<<\" \"<<D<<endl;\r\n\treturn 0;\r\n}"
}