{
    "id": 17835280,
    "contestId": 666,
    "creationTimeSeconds": 1462902054,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "mohit.829"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 2589,
    "memoryConsumedBytes": 75059200,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n, m;\r\n\tcin>>n>>m;\r\n\tvector<int> graph[n][2];\r\n\tfor (int i=0;i<m;i++)\r\n\t{\r\n\t\tint a, b;\r\n\t\tcin>>a>>b;\r\n\t\tgraph[a-1][0].push_back(b-1);\r\n\t\tgraph[b-1][1].push_back(a-1);\r\n\t}\r\n\tint distance[n][n][2];\r\n\tfor (int i=0;i<n;i++)\r\n\t{\r\n\t\tfor (int j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tfor (int k=0;k<2;k++)\r\n\t\t\t{\r\n\t\t\t\tdistance[i][j][k] = INT_MAX;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor (int k=0;k<2;k++)\r\n\tfor (int i=0;i<n;i++)\r\n\t{\r\n\t\tqueue<int> nodes;\r\n\t\tnodes.push(i);\r\n\t\tdistance[i][i][k] = 0;\r\n\t\twhile(!nodes.empty())\r\n\t\t{\r\n\t\t\tint curr = nodes.front();\r\n\t\t\tnodes.pop();\r\n\t\t\tfor (int j=0;j<graph[curr][k].size();j++)\r\n\t\t\t{\r\n\t\t\t\tif (distance[i][graph[curr][k][j]][k] == INT_MAX)\r\n\t\t\t\t{\r\n\t\t\t\t\tdistance[i][graph[curr][k][j]][k] = distance[i][curr][k] + 1;\r\n\t\t\t\t\tnodes.push(graph[curr][k][j]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// for (int k=0;k<2;k++)\r\n\t// for (int i=0;i<n;i++)\r\n\t// {\r\n\t// \tfor (int j=0;j<graph[i][k].size();j++)\r\n\t// \t{\r\n\t// \t\tcout<<graph[i][k][j]<<\" \";\r\n\t// \t}\r\n\t// \tcout<<\"\\n\";\r\n\t// }\r\n\t// for (int k=0;k<2;k++)\r\n\t// {\r\n\t// \tfor (int i=0;i<n;i++)\r\n\t// \t{\r\n\t// \t\tfor (int j=0;j<n;j++)\r\n\t// \t\t{\r\n\t// \t\t\tcout<<distance[i][j][k]<<\" \";\r\n\t// \t\t}\r\n\t// \t\tcout<<endl;\r\n\t// \t}\r\n\t// \tcout<<endl;\r\n\t// }\r\n\tvector<int> candidates[n][2];\r\n\tfor (int k=0;k<2;k++)\r\n\t{\r\n\t\tfor (int i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tvector<pair<int, int> > d_x;\r\n\t\t\tfor (int j=0;j<n;j++)\r\n\t\t\t{\r\n\t\t\t\tif (j!=i && distance[i][j][k]!=INT_MAX)\r\n\t\t\t\t{\r\n\t\t\t\t\td_x.push_back(make_pair(distance[i][j][k], j));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsort(d_x.begin(), d_x.end());\r\n\t\t\tfor (int j=0;j<3;j++)\r\n\t\t\t{\r\n\t\t\t\tint l = d_x.size();\r\n\t\t\t\tl -=(j+1);\r\n\t\t\t\tif (l>=0)\r\n\t\t\t\t\tcandidates[i][k].push_back(d_x[l].second);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tint ans[4];\r\n\tint d = 0;\r\n\tfor (int i=0;i<n;i++)\r\n\t{\r\n\t\tfor (int j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tfor (int k=0;k<candidates[j][0].size();k++)\r\n\t\t\t{\r\n\t\t\t\tfor (int l=0;l<candidates[i][1].size();l++)\r\n\t\t\t\t{\r\n\t\t\t\t\tint a = candidates[j][0][k];\r\n\t\t\t\t\tint b = candidates[i][1][l];\r\n\t\t\t\t\tif (b != i && b != j & b != a && i != j && i != a && j != a && distance[i][j][0]!=INT_MAX)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tint x = distance[b][i][0] + distance[i][j][0] + distance[j][a][0];\r\n\t\t\t\t\t\tif (x > d)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tans[0] = b+1;\r\n\t\t\t\t\t\t\tans[1] = i+1;\r\n\t\t\t\t\t\t\tans[2] = j+1;\r\n\t\t\t\t\t\t\tans[3] = a+1;\r\n\t\t\t\t\t\t\td = x;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcout<<ans[0]<<\" \"<<ans[1]<<\" \"<<ans[2]<<\" \"<<ans[3]<<endl;\r\n}"
}