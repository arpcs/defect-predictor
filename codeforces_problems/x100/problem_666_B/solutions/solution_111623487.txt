{
    "id": 111623487,
    "contestId": 666,
    "creationTimeSeconds": 1617264844,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "black_white_tony"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 421,
    "memoryConsumedBytes": 73011200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define rep(i, a, b) for (int i = (a), i##end = (b); i < i##end; ++i)\r\n#define per(i, a, b) for (int i = (a) - 1, i##end = (b); i >= i##end; --i)\r\n#define REP(i, a) rep(i, 0, a)\r\n#define PER(i, a) per(i, a, 0)\r\n\r\nconst int MAXN = 3000 + 10, MAXM = 5000 + 10;\r\n\r\nint n, m, dis[MAXN][MAXN], rdis[MAXN][MAXN], mx, ans[5];\r\nvector<vector<int> > E, rE;\r\nint mxval[2][MAXN], rmxval[2][MAXN], cnt[MAXN], rcnt[MAXN];\r\n\r\nvoid bfs(const vector<vector<int> >& E, int dis[MAXN][MAXN], int mxval[2][MAXN], int cnt[MAXN]) {\r\n\tREP(S, n) {\r\n\t\tqueue<int> q; q.push(S);\r\n\t\tdis[S][S] = 0;\r\n\t\twhile (!q.empty()) {\r\n\t\t\tint u = q.front(); q.pop();\r\n\t\t\tfor (int v : E[u]) if (dis[S][v] > dis[S][u] + 1) {\r\n\t\t\t\tdis[S][v] = dis[S][u] + 1;\r\n\t\t\t\tq.push(v);\r\n\t\t\t}\r\n\t\t}\r\n\t\tmxval[0][S] = mxval[1][S] = S;\r\n\t\tREP(i, n) if (dis[S][i] <= 1e9 && i != S) {\r\n\t\t\tif (dis[S][i] > dis[S][mxval[1][S]]) {\r\n\t\t\t\tmxval[0][S] = mxval[1][S];\r\n\t\t\t\tmxval[1][S] = i;\r\n\t\t\t} else if (dis[S][i] > dis[S][mxval[0][S]]) {\r\n\t\t\t\tmxval[0][S] = i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (mxval[1][S] != S) cnt[S]++;\r\n\t\tif (mxval[0][S] != S) cnt[S]++;\r\n\t}\r\n}\r\n\r\nvoid upd(int x, int u, int v, int y) {\r\n\tif (mx < (dis[u][v] + dis[x][u] + rdis[y][v])) {\r\n\t\tmx = dis[u][v] + dis[x][u] + rdis[y][v];\r\n\t\tans[0] = x, ans[1] = u, ans[2] = v, ans[3] = y;\r\n\t}\r\n}\r\n\r\nvoid work(int x, int u, int v, int y) {\r\n\tif (x == y) {\r\n\t\tif (rcnt[u] >= 2 && x != rmxval[0][u]) work(rmxval[0][u], u, v, y);\r\n\t\tif (cnt[v] >= 2 && y != mxval[0][v]) work(x, u, v, mxval[0][v]);\r\n\t} else if (x == v) {\r\n\t\tif (rcnt[u] >= 2 && x != rmxval[0][u]) work(rmxval[0][u], u, v, y);\r\n\t} else if (u == y) {\r\n\t\tif (cnt[v] >= 2 && y != mxval[0][v]) work(x, u, v, mxval[0][v]);\r\n\t} else upd(x, u, v, y);\r\n}\r\n\r\nvoid get(int u, int v) {\r\n\tif (dis[u][v] < 1e9 && u != v && cnt[v] && rcnt[u]) { // x --> u --> v --> y\r\n\t\tint x = rmxval[1][u], y = mxval[1][v];\r\n\t\twork(x, u, v, y);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\t#ifdef LOCAL\r\n\t\tfreopen(\"in.txt\", \"r\", stdin);\r\n\t#endif\r\n\tscanf(\"%d %d\", &n, &m);\r\n\tE.resize(n), rE.resize(n);\r\n\tREP(_, m) {\r\n\t\tint u, v; scanf(\"%d %d\", &u, &v); u--, v--;\r\n\t\tE[u].push_back(v), rE[v].push_back(u);\r\n\t}\r\n\tmemset(dis, 0x3f, sizeof dis), memset(rdis, 0x3f, sizeof rdis);\r\n\tbfs(E, dis, mxval, cnt), bfs(rE, rdis, rmxval, rcnt);\r\n\tREP(u, n) REP(v, n) get(u, v);\r\n\tREP(i, 4) printf(\"%d \", ans[i] + 1);\r\n\treturn 0;\r\n}\r\n"
}