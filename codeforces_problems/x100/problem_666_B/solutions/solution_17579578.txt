{
    "id": 17579578,
    "contestId": 666,
    "creationTimeSeconds": 1461952438,
    "relativeTimeSeconds": 4738,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "ko_osaga"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 12,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 2433,
    "memoryConsumedBytes": 39424000,
    "source": "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n#include <math.h>\r\n#include <limits.h>\r\n#include <stack>\r\n#include <queue>\r\n#include <map>\r\n#include <set>\r\n#include <algorithm>\r\n#include <string>\r\n#include <functional>\r\n#include <vector>\r\n#include <numeric>\r\n#include <deque>\r\n#include <utility>\r\n#include <bitset>\r\n#include <iostream>\r\nusing namespace std;\r\ntypedef long long lint;\r\ntypedef long double llf;\r\ntypedef pair<int, int> pi;\r\n\r\nvector<int> gph[3005];\r\nint dist[3005][3005];\r\nvector<pi> cnd[3005], rcnd[3005];\r\n\r\nint ret, rx, ry, rz, ra;\r\n\r\nvoid update(int a, int b, int c, int d){\r\n\tif(a == b || a == c || b == c || b == d || a == d || c == d) return;\r\n\tint dap = dist[a][b] + dist[b][c] + dist[c][d];\r\n\tif(dap > ret){\r\n\t\tret = dap;\r\n\t\ttie(rx, ry, rz, ra) = make_tuple(a, b, c, d);\r\n\t}\r\n}\r\n\r\nvoid bfs(int x){\r\n\tbool vis[3005] = {};\r\n\tqueue<int> Q;\r\n\tQ.push(x);\r\n\tvis[x] =1 ;\r\n\tdist[x][x] = 0;\r\n\twhile(!Q.empty()){\r\n\t\tint v = Q.front();\r\n\t\tQ.pop();\r\n\t\tfor(auto &i : gph[v]){\r\n\t\t\tif(!vis[i]){\r\n\t\t\t\tvis[i] = 1;\r\n\t\t\t\tQ.push(i);\r\n\t\t\t\tdist[x][i] = dist[x][v] + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint n, m;\r\n\tscanf(\"%d %d\",&n,&m);\r\n\tfor(int i=0; i<m; i++){\r\n\t\tint s, e;\r\n\t\tscanf(\"%d %d\",&s, &e);\r\n\t\tgph[s].push_back(e);\r\n\t}\r\n\tmemset(dist, 0x3f, sizeof(dist));\r\n\tfor(int i=1; i<=n; i++){\r\n\t\tbfs(i);\r\n\t}\r\n\tfor(int i=1; i<=n; i++){\r\n\t\tvector<pi> lis, rlis;\r\n\t\tfor(int j=1; j<=n; j++){\r\n\t\t\tif(i == j) continue;\r\n\t\t\tif(dist[i][j] < 1e9) lis.emplace_back(dist[i][j], j);\r\n\t\t\tif(dist[j][i] < 1e9) rlis.emplace_back(dist[j][i], j);\r\n\t\t}\r\n\t\tsort(lis.begin(), lis.end());\r\n\t\treverse(lis.begin(), lis.end());\r\n\t\tsort(rlis.begin(), rlis.end());\r\n\t\treverse(rlis.begin(), rlis.end());\r\n\t\tfor(int j=0; j<lis.size() && j<4; j++){\r\n\t\t\tcnd[i].push_back(lis[j]);\r\n\t\t}\r\n\t\tfor(int j=0; j<rlis.size() && j<4; j++){\r\n\t\t\trcnd[i].push_back(rlis[j]);\r\n\t\t}\r\n\r\n\t}\r\n\tfor(int i=1; i<=n; i++){\r\n\t\tfor(int j=1; j<=n; j++){\r\n\t\t\tif(dist[i][j] > 1e9 || i == j) continue;\r\n\t\t\tfor(auto &k : rcnd[i]){\r\n\t\t\t\tfor(auto &l : cnd[j]){\r\n\t\t\t\t\tupdate(k.second, i, j, l.second);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprintf(\"%d %d %d %d\\n\",rx, ry, rz, ra);\r\n}"
}