{
    "id": 18338744,
    "contestId": 666,
    "creationTimeSeconds": 1465464615,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "abigcat"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 1886,
    "memoryConsumedBytes": 245760000,
    "source": "#include<bits/stdc++.h> \r\nusing namespace std;\r\n\r\ntypedef pair<int, int> P;\r\nconst int maxn = 3000 + 10;\r\nconst int INF = 0x3f3f3f3f;  \r\nint n, m;\r\nint d[maxn][maxn];\r\nvector<int> g[maxn];\r\nvector<P> dis[maxn], rdis[maxn];\r\nbool vis[maxn][maxn];\r\n\r\nvoid bfs(){\r\n\tfor(int i = 1; i <= n; i++){\r\n\t\tqueue<int> que;\r\n\t\tque.push(i);\r\n\t\twhile(!que.empty()){\r\n\t\t\tint u = que.front(); que.pop();\r\n\t\t\tfor(auto v : g[u]){\r\n\t\t\t\tif(d[i][v] != INF) continue;\r\n\t\t\t\td[i][v] = d[i][u] + 1;\r\n\t\t\t\tque.push(v);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tscanf(\"%d%d\", &n, &m);\r\n\tfor(int i = 1; i <= m; i++){\r\n\t\tint u, v; scanf(\"%d%d\", &u, &v);\r\n\t\tif(!vis[u][v]) g[u].push_back(v);\r\n\t\tvis[u][v] = true;\r\n\t}\r\n\tmemset(d, 0x3f, sizeof(d));\r\n\tfor(int i = 1; i <= n; i++) d[i][i] = 0;\r\n\tbfs();\r\n\tfor(int i = 1; i <= n; i++){\r\n\t\tfor(int j = 1; j <= n; j++) if(i != j){\r\n\t\t\tif(d[i][j] < INF) dis[i].push_back(make_pair(d[i][j], j));\r\n\t\t\tif(d[j][i] < INF) rdis[i].push_back(make_pair(d[j][i], j));\r\n\t\t}\r\n\t\tsort(dis[i].begin(), dis[i].end()); reverse(dis[i].begin(), dis[i].end());\r\n\t\tsort(rdis[i].begin(), rdis[i].end()); reverse(rdis[i].begin(), rdis[i].end());\r\n\t}\r\n\tint maxx = 0, res;\r\n\tint r1, r2, r3, r4;\r\n\t//a ---> i ---> j ---> b, a != i && a != b && b != i \r\n\tfor(int i = 1; i <= n; i++){ \r\n\t\tfor(int j = 1; j <= n; j++) if(i != j && d[i][j] < INF){\r\n\t\t\tfor(int k = 0; k < 3 && k < rdis[i].size(); k++) if(rdis[i][k].second != j){  //a = rdis[i][k].second \r\n\t\t\t\tfor(int x = 0; x < 3 && x < dis[j].size(); x++) if(dis[j][x].second != i){  //b = dis[j][x].second\r\n\t\t\t\t\tif(rdis[i][k].second == dis[j][x].second) continue;\r\n\t\t\t\t\tres = rdis[i][k].first + d[i][j] + dis[j][x].first;\r\n\t\t\t\t\tif(res > maxx){\r\n\t\t\t\t\t\tmaxx = res;\r\n\t\t\t\t\t\tr1 = rdis[i][k].second; r2 = i; r3 = j; r4 = dis[j][x].second;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprintf(\"%d %d %d %d\\n\", r1, r2, r3, r4);\r\n\treturn 0;\r\n}\r\n\r\n/*\r\n\u9898\u610f\uff1a \u5728\u6709\u5411\u56fe\u4e2d\u627e\u5230\u56db\u4e2a\u70b9abcd\uff0c\u4f7f\u5f97a->b->c->d\u8fd9\u4e9b\u70b9\u4e4b\u95f4\u53d6\u6700\u77ed\u8ddd\u79bb\u4e4b\u540e\u7684\u548c\u6700\u5927\uff0c\u4fdd\u8bc1\u7b54\u6848\u4e00\u5b9a\u5b58\u5728\uff0c\u5982\u679c\u6709\u591a\u79cd\r\n\u53ef\u80fd\uff0c\u8f93\u51fa\u4efb\u610f\u4e00\u7ec4\u89e3\u5373\u53ef\u3002 \u8f93\u5165\u6709\u91cd\u8fb9\u3002\r\n*/ \r\n"
}