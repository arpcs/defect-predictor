{
    "id": 18047346,
    "contestId": 666,
    "creationTimeSeconds": 1464029614,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "B",
        "name": "World Tour",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "shengdebao"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 2074,
    "memoryConsumedBytes": 38707200,
    "source": "\n// In the name of God\n// Code by: mrMaster\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef pair<int ,int >pii;\n\nconst int MN = 3e3 + 10;\nconst int MM = 5e3 + 10;\nconst int INF = 1e9;\n\nint n,m;\nvector<int>edges[MN];\nbool mk[MN];\nint mx[MN][3] , mxrev[MN][3];\nint A,B,C,D;\nint dp[MN][MN];\nint res;\n\nvoid input()\n{\n\tios_base::sync_with_stdio(false);\n\tcin >> n >> m;\n\tint a,b;\n\tfor(int i=0;i<m;++i){\n\t\tcin >> a >> b;\n\t\t--a, --b;\n\t\tedges[a].push_back(b);\n\t}\n\tfor(int i=0;i<n;++i)\n\t\tfor(int j=0;j<n;++j)\n\t\t\tdp[i][j] = -INF;\n}\n\nvoid bfs(int s)\n{\n\tmk[s] = true; \n\tqueue<int>Q;\n\tQ.push(s);\n\tdp[s][s] = 0;\n\tint v;\n\twhile(!Q.empty()){\n\t\tv = Q.front();\n\t\tfor(int i=0;i<edges[v].size();++i)\n\t\t\tif(!mk[edges[v][i]]){\n\t\t\t\tdp[s][edges[v][i]] = dp[s][v] + 1;\n\t\t\t\tmk[edges[v][i]] = true;\n\t\t\t\tQ.push(edges[v][i]);\n\t\t\t}\n\t\tQ.pop();\n\t}\n}\n\nvoid prep()\n{\n\tset<pii>s;\n\tset<pii> :: iterator it;\n\tint counter;\n\tfor(int i=0;i<n;++i){\n\t\ts.clear(), counter = 0;\n\t\tfor(int j=0;j<n;++j){\n\t\t\ts.insert(pii(dp[i][j] , j));\n\t\t\tif(s.size() > 3) \n\t\t\t\ts.erase(s.begin());\n\t\t}\n\t\tfor(it=s.begin();it!=s.end();++it){\n\t \t\tmx[i][2-counter] = it->second;\n\t\t\t++counter;\n\t\t}\n\t\ts.clear() , counter = 0;\n\t\tfor(int j=0;j<n;++j){\n\t\t\ts.insert(pii(dp[j][i] , j));\n\t\t\tif(s.size() > 3)\n\t\t\t\ts.erase(s.begin());\n\t\t}\n\t\tfor(it=s.begin();it!=s.end();++it){\n\t\t\tmxrev[i][2-counter] = it->second;\n\t\t\t++counter;\n\t\t}\n\t}\n}\n\nvoid update(int a, int b , int c, int d)\n{\n\tif(a == b || a == c || a == d || d == b || d == c)\n\t\treturn;\n\tif(min(dp[a][b] , min(dp[b][c] , dp[c][d])) < 0)\n\t\treturn;\n\tint t = dp[a][b] + dp[b][c] + dp[c][d];\n\tif(t > res)\n\t\tA = a , B = b , C = c, D = d , res = t;\n}\n\nvoid solve()\n{\n\tfor(int i=0;i<n;++i)\n\t\tfor(int j=0;j<n;++j)\n\t\t\tif(i!=j){\n\t\t\t\tint k,t;\n\t\t\t\tfor(k=0;k<3;++k)\n\t\t\t\t\tif(mxrev[i][k] != i && mxrev[i][k] != j) break;\n\t\t\t\tfor(t=0;t<3;++t)\n\t\t\t\t\tif(mx[j][t] != i && mx[j][t] != j && mx[j][t] != mxrev[i][k]) break;\n\t\t\t\tupdate(mxrev[i][k],i,j,mx[j][t]);\n\t\t\t\tfor(t=0;t<3;++t)\n\t\t\t\t\tif(mx[j][t] != i && mx[j][t] != j) break;\n\t\t\t\tfor(k=0;k<3;++k)\n\t\t\t\t\tif(mxrev[i][k] != i && mxrev[i][k] != j && mxrev[i][k] != mx[j][t]) break;\n\t\t\t\tupdate(mxrev[i][k],i,j,mx[j][t]);\n\t\t\t}\n}\n\nint main()\n{\n\tinput();\n\tfor(int i=0;i<n;++i){\n\t\tbfs(i);\n\t\tmemset(mk , false , sizeof mk);\n\t}\n\tprep();\t\n\tsolve();\n\tcout << A+1 << ' ' << B+1 << ' ' << C+1 << ' ' << D+1 << endl;\n\treturn 0;\n}\n\n"
}