{
    "id": 37472973,
    "contestId": 949,
    "creationTimeSeconds": 1524171398,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 949,
        "index": "D",
        "name": "Curfew",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 949,
        "members": [
            {
                "handle": "amethyst0"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1520583000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 46,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 4198400,
    "source": "#pragma comment(linker, \"/STACK:1000000000\")\r\n#define _CRT_SECURE_NO_WARNINGS\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <iostream>\r\n#include <cmath>\r\n#include <string>\r\n#include <cstring>\r\n#include <cstdlib>\r\n#include <set>\r\n#include <map>\r\n#include <queue>\r\n#include <bitset>\r\n#include <ctime>\r\n\r\n#define mp make_pair\r\n#define pii pair <int, int>\r\n#define ll long long\r\n#define pll pair <ll, ll>\r\n#define ld long double\r\n\r\nusing namespace std;\r\n\r\nconst int maxn = (int)1e5 + 10;\r\n\r\nint v[maxn];\r\n\r\nint n, d, b;\r\n\r\nint a[maxn];\r\n\r\nbool check(int x) {\r\n    int l = x;\r\n    int r = n - 1 - x;\r\n    int m = n / 2;\r\n    \r\n    int pos = 0;\r\n    \r\n    memcpy(a, v, sizeof v);\r\n    \r\n    for (int i = l; i <= m; i++) {\r\n        int dst = d * min(i + 1, n - i);\r\n        \r\n        if (pos < i - dst) {\r\n            pos = i - dst;\r\n        }\r\n        \r\n        while (a[i] < b) {\r\n            if (pos > i + dst || pos == n) {\r\n                return false;\r\n            }\r\n            \r\n            if (pos == i) {\r\n                pos++;\r\n                continue;\r\n            }\r\n            \r\n            if (a[pos] == 0) {\r\n                pos++;\r\n                continue;\r\n            }\r\n            \r\n            if (pos < i) {\r\n                int cnt = a[pos];\r\n                \r\n                if (pos >= l) {\r\n                    cnt -= b;\r\n                }\r\n                \r\n                if (cnt >= b - a[i]) {\r\n                    a[pos] -= b - a[i];\r\n                    a[i] = b;\r\n                    break;\r\n                } else {\r\n                    a[pos] -= cnt;\r\n                    a[i] += cnt;\r\n                    pos++;\r\n                    continue;\r\n                }\r\n            } else {\r\n                int cnt = a[pos];\r\n                \r\n                if (cnt >= b - a[i]) {\r\n                    a[pos] -= b - a[i];\r\n                    a[i] = b;\r\n                    break;\r\n                } else {\r\n                    a[pos] -= cnt;\r\n                    a[i] += cnt;\r\n                    pos++;\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    reverse(a, a + n);\r\n    m = n - m - 1;\r\n    swap(l, r);\r\n    l = n - l - 1;\r\n    r = n - r - 1;\r\n    \r\n    pos = 0;\r\n    \r\n    for (int i = l; i < m; i++) {\r\n        int dst = d * min(i + 1, n - i);\r\n        \r\n        if (pos < i - dst) {\r\n            pos = i - dst;\r\n        }\r\n        \r\n        while (a[i] < b) {\r\n            if (pos > i + dst || pos == n) {\r\n                return false;\r\n            }\r\n            \r\n            if (pos == i) {\r\n                pos++;\r\n                continue;\r\n            }\r\n            \r\n            if (a[pos] == 0) {\r\n                pos++;\r\n                continue;\r\n            }\r\n            \r\n            if (pos < i) {\r\n                int cnt = a[pos];\r\n                \r\n                if (pos >= l) {\r\n                    cnt -= b;\r\n                }\r\n                \r\n                if (cnt >= b - a[i]) {\r\n                    a[pos] -= b - a[i];\r\n                    a[i] = b;\r\n                    break;\r\n                } else {\r\n                    a[pos] -= cnt;\r\n                    a[i] += cnt;\r\n                    pos++;\r\n                    continue;\r\n                }\r\n            } else {\r\n                int cnt = a[pos];\r\n                \r\n                if (m <= pos && pos <= r) {\r\n                    cnt -= b;\r\n                }\r\n                \r\n                if (cnt >= b - a[i]) {\r\n                    a[pos] -= b - a[i];\r\n                    a[i] = b;\r\n                    break;\r\n                } else {\r\n                    a[pos] -= cnt;\r\n                    a[i] += cnt;\r\n                    pos++;\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    return true;\r\n}\r\n\r\nint main() {\r\n    cin >> n >> d >> b;\r\n    \r\n    for (int i = 0; i < n; i++) {\r\n        scanf(\"%d\", &v[i]);\r\n    }\r\n    \r\n    int l = 0, r = n / 2;\r\n    \r\n    while (l != r) {\r\n        int m = (l + r) >> 1;\r\n        \r\n        if (check(m)) {\r\n            r = m;\r\n        } else {\r\n            l = m + 1;\r\n        }\r\n    }\r\n    \r\n    cout << l << endl;\r\n    return 0;\r\n}"
}