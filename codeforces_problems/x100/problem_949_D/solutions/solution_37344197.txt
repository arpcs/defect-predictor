{
    "id": 37344197,
    "contestId": 949,
    "creationTimeSeconds": 1523770284,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 949,
        "index": "D",
        "name": "Curfew",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 949,
        "members": [
            {
                "handle": "Powerslave"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1520583000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 5734400,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst int MAXN = 1e5+6.66;\nlong long par1[MAXN];\nlong long arr[MAXN];\nlong long a [MAXN];\nint D,B;\n\nint calc ( int n ) {\n  long long tmp = 0;\n  int ans = 0;\n  for(int i = 1;i<=n;i++) {\n    if( par1[ min( 1LL * MAXN -1 , 1LL * ( D + 1 ) * i ) ] - par1[i] >= tmp + B - a[i] ) tmp += B - a[i],ans ++ ;\n    else tmp -= a[i];\n    if( tmp < 0 ) a[i+1] -= tmp,tmp = 0;\n  }\n  return n - ans;\n}\n\nint calc_r ( int n ,long long x ) {\n  x = 1LL * n * B - x;\n  int N = n >> 1;\n  long long W = 1LL * n * B - x;\n  memset(a,0,sizeof a ) ;\n  for(int i = 1;i<=N;i++) {\n    if( W <= 0 ) break;\n    a[i] = min(arr[n - i + 1 ] , W);\n    W -= a[i];\n  }\n  memset(par1,0,sizeof par1);\n  for(int i = 1;i<=n;i++) par1[i] = min( x, par1[i-1] + arr[n - i + 1] ) ;\n  for(int i = n +1 ;i<MAXN;i++) par1[i] = par1[i-1];\n  return calc( N ) ;\n}\n\nint calc_l ( int n ,long long x ) {\n  int N = ( n + 1 ) >> 1;\n  long long W = x;\n  memset(a,0,sizeof a ) ;\n  for(int i = 1;i<=N;i++) {\n    if( W <= 0 ) break;\n    a[i] = min( W, arr[i] ) ;\n    W -= a[i];\n  }\n  memset(par1,0,sizeof par1);\n  for(int i = 1;i<MAXN;i++) par1[i] = min( x,par1[i-1] + arr[i]);\n  return calc( N ) ;\n}\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL),cout.tie(NULL);\n  int n;cin >> n >> D >> B;\n  for(int i = 1;i<=n;i++) cin >> arr[i] ;\n  long long l = 0,r =  1LL * n * B;\n  while( l < r ) {\n    long long mid = ( l + r + 1) >> 1;\n    if( calc_r(n,mid) - calc_l(n,mid) <= 0 ) l = mid;\n    else r = mid - 1;\n  }\n  cout << min( max( calc_r(n,l),calc_l(n,l) ) , max( calc_r(n,l+1),calc_l(n,l+1) ) ) << endl;\n  return 0;\n}\n"
}