{
    "id": 88197769,
    "contestId": 949,
    "creationTimeSeconds": 1595934938,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 949,
        "index": "D",
        "name": "Curfew",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 949,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1520583000
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 4915200,
    "source": "#include <cstdio>\n#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\ninline int readint(){\n\tint a = 0; char c = getchar(), f = 1;\n\tfor(; c<'0'||c>'9'; c=getchar())\n\t\tif(c == '-') f = -f;\n\tfor(; '0'<=c&&c<='9'; c=getchar())\n\t\ta = (a<<3)+(a<<1)+(c^48);\n\treturn a*f;\n}\ntemplate < class T >\nvoid getMax(T&a,T b){ if(a < b) a = b; }\ntemplate < class T >\nvoid getMin(T&a,T b){ if(b < a) a = b; }\n\nconst int MaxN = 100002;\nconst int Mod = 998244353;\nlong long a[MaxN]; int d, b, n;\n\nvoid input(){\n\tn = readint(), d = readint();\n\tb = readint();\n\tfor(int i=1; i<=n; ++i)\n\t\ta[i] = readint()+a[i-1];\n}\n\nbool check(int x){\n\tfor(int i=x+1; i<=(n+1)/2; ++i){\n\t\tif(1ll*i*d+i >= n) break;\n\t\tif(a[i*d+i]/b < i-x)\n\t\t\treturn false;\n\t}\n\tfor(int i=n-x; i>(n+1)/2; --i){\n\t\tint r = n-i+1;\n\t\tif(i-1ll*r*d <= 1) break;\n\t\tif((a[n]-a[i-r*d-1])/b < r-x)\n\t\t\treturn false;\n\t}\n\treturn true;\n}\nvoid solve(){\n\tint L = 0, R = (n+1)/2+1;\n\twhile(L != R)\n\t\tif(check((L+R)>>1))\n\t\t\tR = (L+R)>>1;\n\t\telse L = (L+R)/2+1;\n\tprintf(\"%d\\n\",L);\n}\n\nint main(){\n\tinput(), solve();\n\treturn 0;\n}\n\n\t\t      \t  \t\t\t  \t\t\t \t   \t\t\t\t\t",
    "suggested_categories": [
        "algorithm",
        "mathematics",
        "input/output",
        "template",
        "code optimization",
        "integer operations",
        "conditionals",
        "looping",
        "performance",
        "binary search",
        "data structures",
        "code readability",
        "arithmetic operations",
        "variable naming",
        "mathematical logic",
        "modular arithmetic",
        "complexity analysis",
        "code efficiency",
        "bit manipulation",
        "problem solving"
    ]
}