{
    "id": 43171654,
    "contestId": 949,
    "creationTimeSeconds": 1537519944,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 949,
        "index": "D",
        "name": "Curfew",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 949,
        "members": [
            {
                "handle": "luogu_bot4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1520583000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 1228800,
    "source": "#include<iostream>\n#include<cstdio>\nusing namespace std;\n#define ll long long\n#define MAX 100100\ninline int read()\n{\n\tint x=0;bool t=false;char ch=getchar();\n\twhile((ch<'0'||ch>'9')&&ch!='-')ch=getchar();\n\tif(ch=='-')t=true,ch=getchar();\n\twhile(ch<='9'&&ch>='0')x=x*10+ch-48,ch=getchar();\n\treturn t?-x:x;\n}\nint a[MAX],n,cnt1,cnt2;\nll s[MAX],D,B,x;\nint main()\n{\n\tn=read();D=read();B=read();\n\tfor(int i=1;i<=n;++i)s[i]=s[i-1]+(a[i]=read());\n\tfor(int i=1;i<=n/2;++i)\n\t{\n\t\tx=s[min(1ll*n,i*(D+1))]-B*cnt1;\n\t\tif(x>=B)++cnt1;\n\t\tx=s[n]-s[max(0ll,n-i*(D+1))]-B*cnt2;\n\t\tif(x>=B)++cnt2;\n\t}\n\tprintf(\"%d\\n\",n/2-min(cnt1,cnt2));\n\treturn 0;\n}\n",
    "suggested_categories": [
        "algorithm",
        "optimization",
        "performance",
        "efficiency",
        "integer arithmetic",
        "input/output handling",
        "memory management",
        "code readability",
        "code organization",
        "c++ programming",
        "mathematical computation",
        "loop optimization",
        "conditional logic",
        "code structure",
        "variable naming",
        "macro usage",
        "data processing",
        "bit manipulation",
        "code efficiency",
        "algorithmic complexity"
    ]
}