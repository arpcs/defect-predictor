{
    "id": 36133689,
    "contestId": 949,
    "creationTimeSeconds": 1520646045,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 949,
        "index": "D",
        "name": "Curfew",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 949,
        "members": [
            {
                "handle": "dragonslayerintraining"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1520583000
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 3481600,
    "source": "#include <cstdio>\n#include <algorithm>\n#include <stdint.h>\n\nint64_t left[100005];\nint64_t right[100005];\nint64_t N,D,B;\n\nint64_t count_left(int64_t X){\n  int64_t rem=0;\n  int64_t bad=0;\n  for(int64_t i=1;i<=(N+1)/2;i++){\n    rem+=std::min(X,left[i]);\n    X-=std::min(X,left[i]);\n    if(rem>=B){\n      rem-=B;\n    }else{\n      bad++;\n    }\n  }\n  return bad;\n}\n\nint64_t count_right(int64_t X){\n  int64_t rem=0;\n  int64_t bad=0;\n  for(int64_t i=N;i>(N+1)/2;i--){\n    rem+=std::min(X,right[i]);\n    X-=std::min(X,right[i]);\n    if(rem>=B){\n      rem-=B;\n    }else{\n      bad++;\n    }\n  }\n  return bad;\n}\n\nint main(){\n  scanf(\"%I64d %I64d %I64d\",&N,&D,&B);\n  for(int64_t i=1;i<=N;i++){\n    int64_t A;\n    scanf(\"%I64d\",&A);\n    left[i-i*D/(D+1)]+=A;\n    right[i+(N+1-i)*D/(D+1)]+=A;\n  }\n  int64_t low=0,high=N*B+1;\n  int64_t best=0;\n  while(high-low>1){\n    int64_t mid=(low+high)/2;\n    int64_t lcnt=count_left(mid);\n    int64_t rcnt=count_right(N*B-mid);\n    best=std::max(best,std::min(lcnt,rcnt));\n    if(lcnt<rcnt){\n      high=mid;\n    }else{\n      low=mid;\n    }\n  }\n  printf(\"%I64d\\n\",best);\n  return 0;\n}\n"
}