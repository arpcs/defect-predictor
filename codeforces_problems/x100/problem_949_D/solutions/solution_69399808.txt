{
    "id": 69399808,
    "contestId": 949,
    "creationTimeSeconds": 1579766673,
    "relativeTimeSeconds": 7473,
    "problem": {
        "contestId": 949,
        "index": "D",
        "name": "Curfew",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 949,
        "members": [
            {
                "handle": "Snow-Flower"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1579759200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\n#include<ext/rope>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\nusing namespace __gnu_cxx;\r\ntemplate<class L, class R> istream &operator>>(istream &in, pair<L, R> &p){ return in >> p.first >> p.second; }\r\ntemplate<class Tuple, size_t ...Is> void read_tuple(istream &in, Tuple &t, index_sequence<Is...>){ ((in >> get<Is>(t)), ...); }\r\ntemplate<class ...Args> istream &operator>>(istream &in, tuple<Args...> &t){ read_tuple(in, t, index_sequence_for<Args...>{}); return in; }\r\ntemplate<class ...Args, template<class...> class T> istream &operator>>(enable_if_t<!is_same_v<T<Args...>, string>, istream> &in, T<Args...> &arr){ for(auto &x: arr) in >> x; return in; }\r\ntemplate<class L, class R> ostream &operator<<(ostream &out, const pair<L, R> &p){ return out << \"(\" << p.first << \", \" << p.second << \")\"; }\r\n//template<class L, class R> ostream &operator<<(ostream &out, const pair<L, R> &p){ return out << p.first << \" \" << p.second << \"\\n\"; }\r\ntemplate<class Tuple, size_t ...Is> void print_tuple(ostream &out, const Tuple &t, index_sequence<Is...>){ ((out << (Is ? \" \" : \"\") << get<Is>(t)), ...); }\r\ntemplate<class ...Args> ostream &operator<<(ostream &out, const tuple<Args...> &t){ print_tuple(out, t, index_sequence_for<Args...>{}); return out << \"\\n\"; }\r\ntemplate<class ...Args, template<class...> class T> ostream &operator<<(enable_if_t<!is_same_v<T<Args...>, string>, ostream> &out, const T<Args...> &arr){ for(auto &x: arr) out << x << \" \"; return out << \"\\n\"; }\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\nmt19937_64 rngll(chrono::steady_clock::now().time_since_epoch().count());\r\n#define all(a) a.begin(), a.end()\r\n#define sz(a) (int)a.size()\r\ntypedef long long ll;\r\ntypedef vector<int> vi; typedef vector<ll> vl; typedef vector<double> vd; typedef vector<string> vs;\r\ntypedef pair<int, int> pii; typedef pair<ll, ll> pll; typedef pair<int, ll> pil; typedef pair<ll, int> pli;\r\ntypedef vector<pii> vpii; typedef vector<pil> vpil; typedef vector<pli> vpli; typedef vector<pll> vpll;\r\ntemplate<class T> T ctmax(T &x, const T &y){ return x = max(x, y); }\r\ntemplate<class T> T ctmin(T &x, const T &y){ return x = min(x, y); }\r\ntemplate<class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\ntypedef tuple<int, int, int> tpl; typedef vector<tpl> vtpl;\r\n\r\n\r\n\r\nint main(){\r\n\tcin.tie(0)->sync_with_stdio(0);\r\n\tint n, d, b;\r\n\tcin >> n >> d >> b;\r\n\tvi a(n), SUM(n + 1);\r\n\tcin >> a;\r\n\tpartial_sum(all(a), SUM.begin() + 1);\r\n\tauto sum = [&](int i, int j){\r\n\t\treturn SUM[j] - SUM[i];\r\n\t};\r\n\tint res = 0;\r\n\tif(sum(0, (n + 1) / 2) >= (n + 1) / 2 * b){ // Left should help right\r\n\t\tfor(int i = n - 1, cnt = 1, hid = 0; i >= (n + 1) / 2; -- i, ++ cnt){\r\n\t\t\tif(sum(max(0, i - cnt * d), n) - hid >= b){\r\n\t\t\t\thid += b;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t++ res;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse{ // Right should help left\r\n\t\tfor(int i = 0, cnt = 1, hid = 0; i < (n + 1) / 2; ++ i, ++ cnt){\r\n\t\t\tif(sum(0, min(i + cnt * d, n)) - hid >= b){\r\n\t\t\t\thid += b;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t++ res;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcout << res;\r\n\treturn 0;\r\n}\r\n\r\n/*\r\n\r\n*/\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////\r\n//                                                                                    //\r\n//                                   Coded by Aeren                                   //\r\n//                                                                                    //\r\n////////////////////////////////////////////////////////////////////////////////////////"
}