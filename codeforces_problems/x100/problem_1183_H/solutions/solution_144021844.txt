{
    "id": 144021844,
    "contestId": 1183,
    "creationTimeSeconds": 1643157982,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1183,
        "index": "H",
        "name": "Subsequences (hard version)",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1183,
        "members": [
            {
                "handle": "asilo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1561559700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n#define ll unsigned long long\nint main() {\n    int n; ll k; cin>>n>>k;\n    string s; cin>>s;\n    ll d[n+1][n+1];\n    memset(d, 0, sizeof(d));\n    vector<int> last(256, -1);\n    d[0][0] = 1;\n    for (int i = 1; i <= n; ++i) {\n        for (int j = 0; j <= i; ++j) {\n            d[i][j] += d[i-1][j];\n            if(j) {\n                d[i][j] += d[i-1][j-1];\n                if(last[s[i-1]] != -1) d[i][j] -= d[last[s[i-1]]-1][j-1];\n            }\n        }\n        last[s[i-1]] = i;\n    }\n    ll cost = 0, sum = 0;\n    for (int i = n; i >= 0 && sum <= k; --i) {\n        cost += min(d[n][i], k - sum) * (n - i);\n        sum += min(d[n][i], k - sum);\n    }\n    if(sum >= k) cout << cost;\n    else cout << -1;\n}\n"
}