{
    "id": 221945350,
    "contestId": 1183,
    "creationTimeSeconds": 1693922898,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1183,
        "index": "H",
        "name": "Subsequences (hard version)",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1183,
        "members": [
            {
                "handle": "ghost_9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1561559700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long int\r\n#define endl '\\n'\r\nint dp[101][101];\r\nvoid solve(){\r\nint n,k;\r\ncin>>n>>k;\r\nstring s;\r\ncin>>s;\r\nmap<char,int> b;\r\nfor(int i=0;i<=n;i++){\r\n    dp[i][0]=1;\r\n}\r\nfor(int i=0;i<n;i++){\r\n    for(int len=1;len<=100;len++){\r\n        dp[i+1][len]+=dp[i][len]+dp[i][len-1];\r\n        if(b.find(s[i])!=b.end()){\r\n            dp[i+1][len]-=dp[b[s[i]]][len];\r\n        }\r\n    }\r\n    b[s[i]]=i+1;\r\n}\r\n/*for(int i=1;i<=n;i++){\r\n    for(int j=1;j<=n;j++){\r\n        cout<<dp[i][j]<<\" \";\r\n    }\r\n    cout<<endl;\r\n}*/\r\n  int sum=0;\r\n  for(int i=n;i>=0;i--){\r\n    if(dp[n][i]<=k){\r\n        k-=dp[n][i];\r\n        sum+=(dp[n][i])*(n-i);\r\n    }\r\n    else{\r\n      sum+=k*(n-i);\r\n      k=0;\r\n      break;\r\n    }\r\n  }\r\n  if(k>0){\r\n    cout<<-1<<endl;\r\n    return;\r\n  }\r\n  cout<<sum<<endl;\r\nreturn;\r\n}\r\n    signed main()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    int t=1;\r\n  //  cin>>t;\r\n    while(t--!=0){\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n"
}