{
    "id": 127909660,
    "contestId": 1183,
    "creationTimeSeconds": 1630841178,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1183,
        "index": "H",
        "name": "Subsequences (hard version)",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1183,
        "members": [
            {
                "handle": "atU"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1561559700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 4403200,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int> pii;\n\nconst int N = 2e5 + 5;\nconst int mod = 1e9 + 7;\n#define all(x) x.begin(), x.end()\n#define pb push_back\ntemplate <typename T>\nvoid chkmin(T &a, T b){a = min(a, b);}\ntemplate <typename T>\nvoid chkmax(T &a, T b){a = max(a, b);}\n\nvector<int>a, b;\nvector<vector<ll>>dp;\nint n, m;\nll k;\n\nvoid multisolve(int kase){\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    vector<int>pres(26, -1);\n    dp = vector<vector<ll>>(n + 5, vector<ll>(n + 5));\n    for(int i = 0; i <= n; i++)\n        dp[i][0] = 1;\n\n    for(int i = 1; i <= n; i++){\n        int snow = s[i - 1] - 'a';\n        for(int j = 1; j <= i; j++){\n            dp[i][j] = dp[i - 1][j - 1] + dp[i - 1][j];\n            int prei = pres[snow];\n            if(prei != -1){\n                dp[i][j] -= dp[prei - 1][j - 1];\n            }\n        }\n        pres[snow] = i;\n    }\n    ll cost = 0;\n    \n    for(int i = n; i >= 0; i--){\n        ll d = min(dp[n][i], k);\n        k -= d;\n        cost += d * (n - i);\n    }\n    if(k > 0)cout << -1 << '\\n';\n    else{\n        cout << cost << '\\n';\n    }\n\n    \n}\nint main(){\n    \n    ios::sync_with_stdio(false);\n    cin.tie(NULL);\n    auto t_s = clock();\n    int t = 1;\n    // cin >> t;\n    for(int kase = 1; kase <= t; kase++)\n        multisolve(kase);\n    auto t_e = clock();\n    cerr << \"\\033[46:m\";\n    cerr << \"cost time = \" << 1.0 * (t_e - t_s) / CLOCKS_PER_SEC;\n    cerr << \"s\\033[0m\" << endl;\n    return 0;\n}"
}