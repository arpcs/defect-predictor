{
    "id": 111170169,
    "contestId": 1183,
    "creationTimeSeconds": 1616798614,
    "relativeTimeSeconds": 3514,
    "problem": {
        "contestId": 1183,
        "index": "H",
        "name": "Subsequences (hard version)",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1183,
        "members": [
            {
                "handle": "Puranya_"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1616795100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\nlong long dp[105][105],dp2[30][105];\n\nint main() {\n    int n;\n    long long k;\n    string s;\n    cin >> n >> k >> s;\n    for(int i = 0; i < 26; i++) {\n        dp2[i][0] = 1;\n    }\n    dp[0][0] = 1;\n    for(int i = 0; i < n; i++) {\n        int c = s[i]-'a';\n        for(int j = 0; j <= n; j++) {\n            dp[i+1][j+1] = dp2[c][j];\n            for(int l = 0; l < 26; l++) {\n                if(c == l) {\n                    continue;\n                }\n                else {\n                    dp2[l][j+1] += dp2[c][j];\n                    dp2[l][j+1] = min(dp2[l][j+1],k);\n                }\n            }\n        }\n        for(int j = 0; j <= n; j++) {\n            dp2[c][j] = dp[i+1][j];\n        }\n    }\n    int ans = 0,sum = 0;\n    for(int i = n; i >= 0; i--) {\n        for(int j = 0; j <= n; j++) {\n            if(sum+dp[j][i] >= k) {\n                ans += (k-sum)*(n-i);\n                cout << ans << endl;\n                return 0;\n            }\n            else {\n                ans += dp[j][i]*(n-i);\n                sum += dp[j][i];\n            }\n        }\n    }\n    cout << -1 << endl;\n}\n",
    "suggested_categories": [
        "dynamic programming",
        "algorithm",
        "c++",
        "code optimization",
        "data structures",
        "string manipulation",
        "loop optimization",
        "code efficiency",
        "problem solving",
        "algorithmic complexity",
        "competitive programming",
        "recursive programming",
        "c++ standard library",
        "bit manipulation",
        "memory management",
        "input output handling",
        "error handling",
        "mathematics",
        "logic",
        "coding standards"
    ]
}