{
    "id": 187868384,
    "contestId": 1183,
    "creationTimeSeconds": 1672803789,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1183,
        "index": "H",
        "name": "Subsequences (hard version)",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1183,
        "members": [
            {
                "handle": "bkifhr8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1561559700
    },
    "programmingLanguage": "Clang++17 Diagnostics",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 2355200,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\nconst int maxj = 2e5 + 10, MOD = 1e9 + 7, inf = 0x3f3f3f3f;\ntemplate <class t>\nvoid read(t &res)\n{\n    char c;\n    t flag = 1;\n    while ((c = getchar()) < '0' || c > '9')\n        if (c == '-')\n            flag = -1;\n    res = c - '0';\n    while ((c = getchar()) <= '9' && c >= '0')\n        res = res * 10 + c - '0';\n    res *= flag;\n}\nint a[120];\nint las[500]; // \u8bb0\u8f7d\u5f53\u524d\u5b57\u6bcd\u4e4b\u524d\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\nint dp[120][120];\nvoid solve()\n{\n    // \u52a8\u6001\u89c4\u5212\uff0c\u7ec4\u5408\u6570\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    s = ' ' + s;\n    map<char, int> pre;\n    for (int i = 1; i <= n; ++i)\n    {\n        // las[s[i]]=0;\n        // if (pre[s[i]] != 0)\n        las[i] = pre[s[i]];//\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u5b57\u6bcd\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e\n        pre[s[i]] = i;\n        // if()\n        dp[i][0] = 1ll;\n    }\n    dp[0][0] = 1ll; // \u521d\u59cb\u5316\n    for (int i = 1; i <= n; ++i)\n    {\n        for (int j = 1; j <= n; ++j)\n        { // \u66f4\u65b0\u5e8f\u5217,\u524di\u4e2a\u5b57\u6bcd\uff0c\u9009j\u4e2a\n            dp[i][j] = dp[i - 1][j] + dp[i - 1][j - 1];\n            if (las[i]!=0)\n            {\n                dp[i][j] -= dp[las[i] - 1][j - 1]; // 2^(i-1)\u6d88\u9664\u91cd\u590d\u5e8f\u5217\n            }\n        }\n    }\n    int ans = 0ll;\n    for (int i = n; i >= 0; --i)\n    {\n        if (k > dp[n][i])\n        {\n            ans += dp[n][i] * (n - i);\n            k -= dp[n][i];\n        }\n        else\n        {\n            ans += k * (n - i);\n            break;//\u8981\u4e2abreak\uff0c\u8981\u4e0d\u7136\u4f1a\u51cf\u591a\n        }\n        if (i == 0ll)\n        {\n            ans = -1;\n        }\n    }\n    cout << ans << '\\n';\n}\nsigned main()\n{\n#ifdef LOCAL\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout); // a\u4e3aadd,,w\n#endif\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    int t;\n    t = 1;\n    // cin>>t;\n    while (t--)\n        solve();\n    return 0;\n}\n\t   \t\t\t\t\t    \t\t\t\t \t  \t\t   \t \t\t\t"
}