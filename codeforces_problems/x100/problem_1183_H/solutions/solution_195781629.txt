{
    "id": 195781629,
    "contestId": 1183,
    "creationTimeSeconds": 1677833870,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1183,
        "index": "H",
        "name": "Subsequences (hard version)",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1183,
        "members": [
            {
                "handle": "Amaras"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1561559700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 204800,
    "source": "#include <cassert>\r\n#include <cstdio>\r\n#include<iostream>\r\n#include <string>\r\n#include <vector>\r\n#include <bits/stdc++.h>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <fstream>\r\n#include <set>\r\n#include <map>\r\n#include <unordered_set>\r\nusing namespace std;\r\n#define ll long long\r\n#define fori(x) for(int i=0;i<x;i++)\r\n#define forj(x) for(int j=0;j<x;j++)\r\n#define fork(x) for(int k=0;k<x;k++)\r\n//#define fi(s,e,x) for(int i=s;i<e;i+=x)\r\n#define fj(s,e,x) for(int j=s;j<e;j+=x)\r\n#define pb push_back\r\n#define each(i,x) for(auto& i:x)\r\n#define FOR(i,a,b) for (int i = (a); i < (b); ++i)\r\n#define all(x) x.begin(), x.end()\r\n#define mp make_pair\r\n#define fi first\r\n#define se second\r\n//  g++ prac.cpp -o prac -Wl,-stack_size,0x40000000,-stack_addr,0xf0000000 && ./prac < blockchain_input.txt > output.txt;\r\n//g++ main.cpp -o main -Wl,-stack_size,0x40000000,-stack_addr,0xf0000000 && ./main < blockchain_input.txt > output.txt\r\n\r\n\r\nconst int N=(2e5)+5;\r\n\r\n//const int mod=(1e9)+7;\r\nint INF=1e9+7;\r\n\r\nlong long mod=1e9+7;\r\n/*\r\nint pa[N],sz[N];\r\nvoid make_set(int v)\r\n{\r\n    pa[v]=v;\r\n    sz[v]=v;\r\n}\r\nint find_set(int v)\r\n{\r\n    if(v==pa[v]) return v;\r\n    return pa[v]=find_set(pa[v]);\r\n}\r\nvoid union_set(int v,int u)\r\n{\r\n    v=find_set(v);\r\n    u=find_set(u);\r\n    if(u<v) swap(u,v);\r\n    pa[u]=v;\r\n    sz[v]=sz[u];\r\n}\r\npriority_queue<pair<ll,int>> q;\r\nll h[N],cnt[N],v[N],ini[N],g[N];\r\nvoid solve()\r\n{\r\n    ll n,k,m,x,a,ind,val;\r\n    int day,r;\r\n    cin>>n>>m>>k>>x;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        cin>>ini[i]>>g[i];\r\n        h[i]=ini[i]+m*g[i];\r\n        //if(g[i]==0) g[i]=INF;\r\n        //cout<<h[i]<<endl;\r\n        q.push({h[i],i});\r\n    }\r\n    for(int i=1;i<=m;i++)\r\n    {\r\n        make_set(i);\r\n        v[i]=k;\r\n    }\r\n    //int ind,val;\r\n    ll t=0;\r\n    while(t<k*m)\r\n    {\r\n        t++;\r\n        ind=q.top().se;\r\n        val=q.top().fi;\r\n        if(val==0) break;\r\n\r\n        a=(x*1ll*(cnt[ind]+1)-ini[ind]);\r\n        //cout<<a<<' ';\r\n        if(g[ind]==0)\r\n        {\r\n            if(val>=x) a=1;\r\n            else break;\r\n        }\r\n        else if(a%g[ind]==0 && a!=0) a/=g[ind];\r\n        else\r\n        {\r\n            a/=g[ind];\r\n            a++;\r\n        }\r\n        //cout<<cnt[ind]<<' '<<ind<<' '<<val<<' '<<a<<' ';\r\n        if(a<=0 || a>m) break;\r\n        day=find_set(a);\r\n        if(v[sz[day]]==0) r=sz[day]+1;\r\n        else r=a;\r\n       // cout<<day<<' '<<r<<endl;\r\n        if(r>m)\r\n        {\r\n            break;\r\n        }\r\n        v[r]--;\r\n        if(v[r]==0)\r\n        {\r\n            if(r>1 && v[r-1]==0) union_set(r,r-1);\r\n            if(r<m && v[r+1]==0) union_set(r,r+1);\r\n        }\r\n        q.pop();\r\n        cnt[ind]++;\r\n        q.push({val-x,ind});\r\n    }\r\n    cout<<q.top().fi<<endl;\r\n\r\n}\r\n*/\r\n\r\n///////////////////////exam\r\n/*\r\nint vis[N],b[N],a[N],v[N][2],n;\r\n vector<int> g;\r\nvoid solve2()\r\n{\r\n    int ans=0,ind=0;\r\n    vector<int> d(n+1,INF);\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        if(a[i]==b[i])\r\n        {\r\n            ans++;\r\n        }\r\n       // a[i]=-INF:\r\n\r\n    }\r\n   // cout<<' '<<ans<<endl;\r\n    d[0]=-INF;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        int j=upper_bound(all(d),a[i])-d.begin();\r\n       // cout<<v[i][0]<<\" \"<<v[i][1]<<endl;\r\n        if(d[j-1]<a[i] && a[i]<d[j])\r\n        {\r\n            if(a[v[i][0]]==b[i] || a[v[i][1]]==b[i])\r\n            {\r\n                   d[j]=a[i];\r\n                 //  cout<<\"L\"<<j;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    for(int i=n;i>=0;i--)\r\n    {\r\n        if(d[i]<INF)\r\n        {\r\n            ans+=i;\r\n           // cout<<d[i]<<' ';\r\n            break;\r\n        }\r\n    }\r\n    cout<<ans<<endl;\r\n}\r\nvoid solve3()\r\n{\r\n\r\n}\r\nstack<int> st;\r\nvoid solve()\r\n{\r\n    int ans=0;\r\n\r\n    bool flag=1;\r\n    cin>>n;\r\n    for(int i=0;i<n;i++) cin>>a[i];\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        cin>>b[i];\r\n        v[i][0]=v[i][1]=-1;\r\n        if(b[i]!=b[0]) flag=0;\r\n    }\r\n    if(flag)\r\n    {\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            if(a[i]==b[0]) g.pb(i);\r\n        }\r\n        int x=b[0];\r\n        for(int ind:g)\r\n        {\r\n            int i=ind-1;\r\n            ans++;\r\n            vis[ind]=1;\r\n            while(i>=0 && a[i]<x && vis[i]==0)\r\n            {\r\n                vis[i]=1;\r\n                i--;\r\n                ans++;\r\n            }\r\n            i=ind+1;\r\n            while(i<n && a[i]<x && vis[i]==0)\r\n            {\r\n                vis[i]=1;\r\n                i++;\r\n                ans++;\r\n            }\r\n\r\n        }\r\n        cout<<ans<<endl;\r\n    }\r\n    else\r\n    {\r\n\r\n        st.push(0);\r\n        //cout<<\"KK\"<<endl;\r\n        for(int i=1;i<n;i++)\r\n        {\r\n            //cout<<\"S\"<<endl;\r\n            while(!st.empty() && a[st.top()]<=a[i] )\r\n            {\r\n                st.pop();\r\n            }\r\n            if(!st.empty()) v[i][0]=st.top();\r\n           // cout<<st.top()<<\" \";\r\n            st.push(i);\r\n        }\r\n        while(!st.empty()) st.pop();\r\n        st.push(n-1);\r\n        for(int i=n-2;i>=0;i--)\r\n        {\r\n             while(!st.empty() && a[st.top()]<=a[i])\r\n            {\r\n                st.pop();\r\n            }\r\n            if(!st.empty()) v[i][1]=st.top();\r\n            st.push(i);\r\n        }\r\n        //for(int i=0;i<n;i++) cout<<v[i][0]<<' '<<v[i][1]<<endl;\r\n        solve2();\r\n    }\r\n//    for(int)\r\n}\r\n\r\nll n,m;\r\nchar ch[404][404];\r\nll a[404][404][2][2];\r\n\r\nvector<pair<int,int>> st;\r\nll check(int i,int j,int si,int sj,int ind)\r\n{\r\n    int x=st[ind].fi,y=st[ind].se;\r\n    if(i*si+x<0 || i*si+x>=n) return 0;\r\n    if(j*sj+y<0 || j*sj+y>=m) return 0;\r\n    if(ch[i*si+x][j*sj+y]=='.' || ch[i*si+x][j*sj+y]=='S') return 0;\r\n    return 1ll<<ind;\r\n}\r\nbool check3(int i,int j,int si,int sj,int ind)\r\n{\r\n    int x=st[ind].fi,y=st[ind].se;\r\n    if(i*si+x<0 || i*si+x>=n) return 0;\r\n    if(j*sj+y<0 || j*sj+y>=m) return 0;\r\n   return 1;\r\n}\r\nbool check2(ll mask)\r\n{\r\n   // cout<<mask<<endl;\r\n     int ind=0;\r\n    while(mask&(1ll<<ind)==0) ind++;\r\n    if(mask==(1ll<<ind)) return 1;\r\n    for(int i=0;i<n-1;i++)\r\n    {\r\n        for(int j=0;j<m-1;j++)\r\n        {\r\n            if(i==0 && j==0)continue;\r\n               // cout<<(a[i][j][0][0]&mask)<<' ';\r\n              if(a[i][j][0][0]&mask && a[i][j][0][0]&mask!=mask) {cout<<\"P\";return 1;}\r\n              if(a[i][j][0][1]&mask && a[i][j][0][1]&mask!=mask) return 1;\r\n              if(a[i][j][1][0]&mask && a[i][j][1][0]&mask!=mask)return 1;\r\n              if(a[i][j][1][1]&mask && a[i][j][1][1]&mask!=mask)return 1;\r\n\r\n          //  cout<<i<<' '<<j<<\":\";\r\n            //cout<<a[i][j][0][0]<<\" \"<<a[i][j][0][1]<<' '<<a[i][j][1][0]<<' '<<a[i][j][1][1]<<endl;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\nll get(int ind,int mask)\r\n{\r\n     ll ans=0;\r\n     int x=st[ind].fi,y=st[ind].se;\r\n     ll sub=1<<ind;\r\n\r\n    for(int i=0;i<n-1;i++)\r\n    {\r\n        for(int j=0;j<m-1;j++)\r\n        {\r\n            if(i==0 && j==0) continue;\r\n            if(check3(i,j,1,1,ind) && ch[i+x][j+y]=='o' && a[i][j][0][0]&mask==sub) ans++;\r\n            if(i!=0 && j!=0)\r\n              if(check3(i,j,1,-1,ind) && ch[i+x][-j+y]=='o' && a[i][j][0][1]&mask==sub) ans++;\r\n            if(i!=0 && j!=0)\r\n              if(check3(i,j,-1,1,ind) && ch[-i+x][j+y]=='o' && a[i][j][1][0]&mask==sub) ans++;\r\n            if(check3(i,j,-1,-1,ind) && ch[-i+x][-j+y]=='o' && a[i][j][1][1]&mask==sub) ans++;\r\n        }\r\n    }\r\n  //  cout<<ind<<' '<<mask<<' '<<ans<<endl;\r\n    return ans;\r\n}\r\nll cal(ll mask)\r\n{\r\n    ll ans;\r\n   // cout<<mask<<endl;\r\n    for(int sub=mask;sub;sub=(sub-1)&mask)\r\n    {\r\n        if(sub==mask) continue;\r\n     //   cout<<sub<<\"M\";\r\n        if(check2(sub))\r\n        {\r\n            return min(cal(sub),cal(mask^sub));\r\n        }\r\n    }\r\n    int ind=0;\r\n    while((mask&(1ll<<ind))==0) ind++;\r\n    ans=get(ind,mask);\r\n    return ans;\r\n}\r\nvoid solve()\r\n{\r\n    cin>>n>>m;\r\n    string str;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        cin>>str;\r\n        for(int j=0;j<m;j++)\r\n        {\r\n            ch[i][j]=str[j];\r\n            if(ch[i][j]=='S') st.pb({i,j});\r\n        }\r\n    }\r\n    for(int i=0;i<n-1;i++)\r\n    {\r\n        for(int j=0;j<m-1;j++)\r\n        {\r\n            if(i==0 && j==0)continue;\r\n            for(int k=0;k<st.size();k++)\r\n            {\r\n              a[i][j][0][0]|=(check(i,j,1,1,k));\r\n              a[i][j][0][1]|=(check(i,j,1,-1,k));\r\n              a[i][j][1][0]|=(check(i,j,-1,1,k));\r\n              a[i][j][1][1]|=(check(i,j,-1,-1,k));\r\n            }\r\n            //cout<<i<<' '<<j<<\":\";\r\n            //cout<<a[i][j][0][0]<<\" \"<<a[i][j][0][1]<<' '<<a[i][j][1][0]<<' '<<a[i][j][1][1]<<endl;\r\n        }\r\n    }\r\n    ll s=1<<(int)st.size();\r\n    s--;\r\n    //cout<<s<<endl;\r\n    ll ans=cal(s);\r\n    cout<<ans<<endl;\r\n}\r\n/////////////////////\r\n*/\r\n\r\n\r\n\r\n\r\n/*\r\n/////////////////////////2020day2 3th\r\nint n,m,col[22][22],vis[404];\r\nstring h[23],v[23];\r\nvoid flood_fill(int i,int j,int c)\r\n{\r\n    if(i>n || i<0 || j<0 || j>m || col[i][j]) return;\r\n    col[i][j]=c;\r\n    vis[c]++;\r\n    if(h[i+1][j]=='0')\r\n    flood_fill(i+1,j,c);\r\n    if(h[i][j]=='0')\r\n    flood_fill(i-1,j,c);\r\n    if(v[i][j+1]=='0')\r\n    flood_fill(i,j+1,c);\r\n    if(v[i][j]=='0')\r\n    flood_fill(i,j-1,c);\r\n\r\n}\r\nvoid solve()\r\n{\r\n    cin>>n>>m;\r\n    int c=0;\r\n    for(int i=0;i<=n;i++)\r\n    {\r\n        cin>>h[i];\r\n    }\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        cin>>v[i];\r\n    }\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        for(int j=0;j<m;j++)\r\n        {\r\n            if(col[i][j]==0)\r\n            {\r\n                c++;\r\n                flood_fill(i,j,c);\r\n                if(h[i+1][j]=='1' && (h[i][j]=='1') && (v[i][j+1]=='1') && (v[i][j]=='1'))\r\n                {\r\n                    col[i][j]=-1;\r\n                   // vis[c]--;\r\n                    //c--;\r\n                }\r\n            }\r\n            cout<<col[i][j]<<' ';\r\n        }\r\n        cout<<endl;\r\n    }\r\n    int ans=0,c1,c2;\r\n    for(int i=0;i<n;i++)\r\n        {\r\n            for(int j=0;j<m;j++)\r\n            {\r\n                if(col[i][j]!=-1 && !c1) c1=col[i][j];\r\n                else if(col[i][j]!=-1 && !c2) c2=col[i][j];\r\n\r\n            }\r\n\r\n        }\r\n    if(c1 && !c2)\r\n    {\r\n      for(int i=0;i<n;i++)\r\n    {\r\n        for(int j=0;j<m;j++)\r\n        {\r\n            if(col[i][j]==1)\r\n            {\r\n               ans++;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n        cout<<-1*ans<<endl;\r\n        return;\r\n    }\r\n    else\r\n    {\r\n        int ans2=0;\r\n\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            for(int j=0;j<m;j++)\r\n            {\r\n                if(col[i][j]==c1) ans++;\r\n                else if(col[i][j]==c2)ans2++;\r\n\r\n            }\r\n\r\n        }\r\n        cout<<abs(ans-ans2)<<endl;\r\n        return;\r\n    }\r\n}\r\n*/\r\n\r\nstruct point\r\n{\r\n\tll x,ind;\r\n};\r\n\r\n\r\n\r\nlong long n,x,dp[101][101],ans,pre[101][101],a[26],k;string s;\r\nint ch(int ind)\r\n{\r\n    return s[ind-1]-'a';\r\n}\r\nint solve()\r\n{\r\n\tcin>>n>>k;\r\n\tcin>>s;\r\n\tfor(int j=1;j<=n;j++)\r\n    {\r\n        x=a[ch(j)];\r\n        if(x==0)  dp[j][1]=1;\r\n        else dp[j][1]=0;\r\n        pre[j][1]=pre[j-1][1]+dp[j][1];\r\n        a[ch(j)]=j;\r\n       // cout<<x<<\" \"<<dp[j][1]<<\" \"<<pre[j][1]<<endl;\r\n    }\r\n\tfor(int j=2;j<=n;j++)\r\n    {\r\n        //cout<<j<<\":\"<<endl;\r\n        for(int i=1;i<=n;i++)\r\n        {\r\n            x=a[ch(i)];\r\n            if(x>=i)\r\n            {\r\n                x=1;\r\n            }\r\n            dp[i][j]=pre[i-1][j-1]-pre[x-1][j-1];\r\n            pre[i][j]=pre[i-1][j]+dp[i][j];\r\n            a[ch(i)]=i;\r\n         //   cout<<pre[i][j]<<' ';\r\n           // cout<<pre[i-1][j-1]<<' '<<pre[x-1][j-1]<<\" \"<<dp[i][j]<<\" \"<<x<<endl;\r\n        }\r\n       // cout<<endl;\r\n    }\r\n    ll sum=0;\r\n    for(int j=n;j>0;j--)\r\n    {\r\n        //cout<<pre[n][j]<<\" \"<<sum<<endl;\r\n        if(sum+pre[n][j]<=k) ans+=(n-j)*1ll*pre[n][j];\r\n        else\r\n        {\r\n            ans+=(n-j)*1ll*(k-sum);\r\n            return ans;\r\n        }\r\n        sum+=pre[n][j];\r\n    }\r\n    if(sum<k) ans+=n,k--;\r\n    if(sum<k) ans=-1;\r\n    return ans;\r\n}\r\n\r\nint main()\r\n{\r\n    //std::cout << std::fixed;\r\n    //std::cout << std::setprecision(8);\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n\r\n    int T=1;\r\n    //cin>>T;\r\n    while(T--)\r\n    {\r\n        cout<<solve()<<endl;\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n/*\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int maxN = 1e5+5;\r\n\r\nstruct Node {\r\n    ll dp;\r\n    int len, link;\r\n    map<char,int> nxt;\r\n} node[2*maxN];\r\n\r\nvector<char> ans;\r\nstring S;\r\nint N, sz, last;\r\nll K;\r\n\r\nvoid init(){\r\n    node[0].len = 0;\r\n    node[0].link = -1;\r\n    sz = 1;\r\n    last = 0;\r\n}\r\n\r\nvoid extend(char c){\r\n    int cur = sz++;\r\n    node[cur].len = node[last].len + 1;\r\n    int p = last;\r\n    while(p != -1 && !node[p].nxt.count(c)){\r\n        node[p].nxt[c] = cur;\r\n        p = node[p].link;\r\n    }\r\n    if(p == -1){\r\n        node[cur].link = 0;\r\n    } else {\r\n        int q = node[p].nxt[c];\r\n        if(node[p].len + 1 == node[q].len){\r\n            node[cur].link = q;\r\n        } else {\r\n            int clone = sz++;\r\n            node[clone].len = node[p].len + 1;\r\n            node[clone].nxt = node[q].nxt;\r\n            node[clone].link = node[q].link;\r\n            while(p != -1 && node[p].nxt[c] == q){\r\n                node[p].nxt[c] = clone;\r\n                p = node[p].link;\r\n            }\r\n            node[q].link = node[cur].link = clone;\r\n        }\r\n    }\r\n    last = cur;\r\n}\r\n\r\nvoid calc(int u = 0){\r\n    node[u].dp = 1;\r\n    for(const auto& [c, v] : node[u].nxt){\r\n        if(!node[v].dp) calc(v);\r\n        node[u].dp += node[v].dp;\r\n    }\r\n}\r\n\r\nvoid dfs(int u, ll k){\r\n    if(k < 0)   return;\r\n    for(const auto& [c, v] : node[u].nxt){\r\n        if(node[v].dp <= k) k -= node[v].dp;\r\n        else {\r\n            ans.push_back(c);\r\n            dfs(v, k-1);\r\n            return;\r\n        }\r\n    }\r\n}\r\n\r\nint main(){\r\n   cin>>S>>K;\r\n    N = (int) S.size();\r\n\r\n    init();\r\n    for(int i = 0; i < N; i++)\r\n        extend(S[i]);\r\n    calc();\r\n\r\n    dfs(0, K-1);\r\n    int M = (int) ans.size();\r\n    for(int i = 0; i < M; i++)\r\n      cout<<ans[i];\r\n    printf(\"\\n\");\r\n}\r\n*/\r\n"
}