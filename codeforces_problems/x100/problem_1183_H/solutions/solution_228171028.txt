{
    "id": 228171028,
    "contestId": 1183,
    "creationTimeSeconds": 1697287952,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1183,
        "index": "H",
        "name": "Subsequences (hard version)",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1183,
        "members": [
            {
                "handle": "henryyin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1561559700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 32153600,
    "source": "// LUOGU_RID: 129399879\n#include <iostream>\n#include <bits/stdc++.h>\n#define ll long long\n#define maxn 2001\n#define mod 1000000000000000000\nusing namespace std;\nint n,l[26],last[maxn];\nll k,dp[maxn][maxn];\n//dp[i][j]=\u5728\u524di\u4e2a\u5b57\u6bcd\u91cc\u957f\u5ea6\u4e3aj\u7684\u672c\u8d28\u4e0d\u540c\u7684\u5b50\u5e8f\u5217\u4e2a\u6570\nchar a[maxn];\ninline ll plu(ll x,ll y){return (x+y)%mod;}\ninline ll minu(ll x,ll y){return ((x-y)%mod+mod)%mod;}\nint main()\n{\n    //freopen(\"1183.in\",\"r\",stdin);\n    //freopen(\"1183.out\",\"w\",stdout);\n    ios::sync_with_stdio(0);\n    cin.tie(0);cout.tie(0);\n    cin>>n>>k;\n    for(int i=1;i<=n;i++)\n    {\n        cin>>a[i];\n        last[i]=l[a[i]-'a'];\n        l[a[i]-'a']=i;\n    }\n    for(int i=1;i<=n;i++)\n    {\n        dp[i][0]=1;\n        dp[i][1]=dp[i-1][1]+(last[i]?0:1);\n    }\n    for(int len=2;len<=n;len++)\n        for(int i=len;i<=n;i++)\n            dp[i][len]=minu(plu(dp[i-1][len],dp[i-1][len-1]),dp[last[i]?last[i]-1:0][len-1]);\n    ll cnt=0;\n    for(int len=0;len<=n;len++) cnt=plu(cnt,dp[n][len]);//cout<<dp[n][len]<<' ';}\n    if(k>cnt) cout<<-1;\n    else\n    {\n        ll ans=0;\n        for(int len=n;len>=0;len--)\n        {\n            if(k>=dp[n][len])\n            {\n                k-=dp[n][len];\n                ans+=(ll)(n-len)*dp[n][len];\n            }\n            else\n            {\n                ans+=(ll)(n-len)*k;\n                break;\n            }\n        }\n        cout<<ans;\n    }\n    return 0;\n}\n",
    "suggested_categories": [
        "dynamic programming",
        "algorithms",
        "c++",
        "competitive programming",
        "code optimization",
        "mathematics",
        "string manipulation",
        "data structures",
        "recursion",
        "bit manipulation",
        "code efficiency",
        "debugging",
        "input/output manipulation",
        "integer overflow handling",
        "complexity analysis",
        "logic",
        "error handling",
        "memory management",
        "algorithmic complexity",
        "problem solving"
    ]
}