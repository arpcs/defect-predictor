{
    "id": 169712705,
    "contestId": 1183,
    "creationTimeSeconds": 1661525337,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1183,
        "index": "H",
        "name": "Subsequences (hard version)",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1183,
        "members": [
            {
                "handle": "danx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1561559700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 8294400,
    "source": "#pragma GCC optimize (\"Ofast\")\r\n//#pragma GCC target (\"avx2\")\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define int long long\r\n#define ll long long\r\n#define all(x) x.begin(), x.end()\r\n#define ii pair<int, int>\r\n#define vi vector<int>\r\n#define vvi vector<vi>\r\n#define vii vector<ii>\r\n#define pb push_back\r\n\r\nconst ll infll = LLONG_MAX;\r\nconst int N = 101, inf = INT_MAX, mod = 1e9+7;\r\n\r\nint n, k;\r\nstring s;\r\nint dp[N][N][N];\r\n\r\nsigned main() {\r\n  ios::sync_with_stdio(false); cin.tie(nullptr);\r\n\r\n  cin >> n >> k >> s;\r\n\r\n  for (int i = 0; i < n; i++) {\r\n    for (int len = 0; len <= n; len++) {\r\n      for (int r = 0; r <= n-i-1; r++) {  \r\n        if (!len) {\r\n          dp[i][len][r] = 1;\r\n          continue;\r\n        }\r\n        dp[i][len][r] = 0;\r\n\r\n        // lo cojo\r\n        bool ok = 1;\r\n        for (int j = 1; j <= r; j++) {\r\n          assert(i+j < n);\r\n          if (s[i+j] == s[i]) ok = 0;\r\n        }\r\n        \r\n        if (ok) {\r\n          if (!i) {\r\n            if (len == 1) dp[i][len][r]++;\r\n          }\r\n          else dp[i][len][r] += dp[i-1][len-1][0];\r\n        }\r\n\r\n        // no lo cojo\r\n        int x = i-1;\r\n        for (int j = i-1; j >= 0; j--) {\r\n          if (s[j] == s[i]) x--;\r\n          else break;\r\n        }\r\n\r\n        if (x != -1) {\r\n          dp[i][len][r] += dp[x][len][r + (i-x)];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  int ans = 0;\r\n  for (int i = n; i >= 0; i--) {\r\n    if (dp[n-1][i][0] >= k) {\r\n      ans += (n-i) * k;\r\n      k = 0;\r\n      break;\r\n    }\r\n    else {\r\n      ans += (n-i) * dp[n-1][i][0];\r\n      k -= dp[n-1][i][0];\r\n    }\r\n  }\r\n  if (k) cout << \"-1\\n\";\r\n  else cout << ans << \"\\n\";\r\n}"
}