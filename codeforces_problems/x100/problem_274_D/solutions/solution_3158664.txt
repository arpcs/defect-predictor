{
    "id": 3158664,
    "contestId": 274,
    "creationTimeSeconds": 1361379095,
    "relativeTimeSeconds": 4895,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "KrK"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 4,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 11,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 1433600,
    "source": "#include <cstdio>\r\n#include <queue>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\ntypedef pair <int, int> ii;\r\n\r\nconst int Maxn = 100005;\r\n\r\nstruct pos {\r\n\tint x, y, ind;\r\n\tpos(int x = 0, int y = 0, int ind = 0): x(x), y(y), ind(ind) { }\r\n\tbool operator <(const pos &p) const {\r\n\t\tif (x != p.x) return x < p.x;\r\n\t\tif (y != p.y) return y < p.y;\r\n\t\treturn ind < p.ind;\r\n\t}\r\n};\r\n\r\nint n, m;\r\nii pl[Maxn];\r\nint lin[Maxn];\r\nvector <int> tmp;\r\nvector <pos> P;\r\nvector <int> res;\r\n\r\nint main()\r\n{\r\n\tscanf(\"%d %d\", &n, &m);\r\n\tfor (int i = 0; i < m; i++)\r\n\t\tpl[i] = ii(0, m - 1);\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\ttmp.clear();\r\n\t\tint cnt = 0;\r\n\t\tfor (int i = 0; i < m; i++) {\r\n\t\t\tscanf(\"%d\", &lin[i]);\r\n\t\t\tif (lin[i] != -1) tmp.push_back(lin[i]);\r\n\t\t\telse cnt++;\r\n\t\t}\r\n\t\tsort(tmp.begin(), tmp.end());\r\n\t\tfor (int i = 0; i < m; i++)\r\n\t\t\tif (lin[i] != -1) {\r\n\t\t\t\tint ind = lower_bound(tmp.begin(), tmp.end(), lin[i]) - tmp.begin(); pl[i].first = max(pl[i].first, ind);\r\n\t\t\t\tind = upper_bound(tmp.begin(), tmp.end(), lin[i]) - tmp.begin(); pl[i].second = min(pl[i].second, ind - 1 + cnt);\r\n\t\t\t}\r\n\t}\r\n\tfor (int i = 0; i < m; i++)\r\n\t\tP.push_back(pos(pl[i].first, pl[i].second, i + 1));\r\n\tsort(P.begin(), P.end());\r\n\tpriority_queue <ii> Q;\r\n\tint j = 0;\r\n\tfor (int i = 0; i < m; i++) {\r\n\t\twhile (j < m && P[j].x == i) {\r\n\t\t\tQ.push(ii(-P[j].y, -P[j].ind));\r\n\t\t\tj++;\r\n\t\t}\r\n\t\tif (Q.empty()) break;\r\n\t\tii v = ii(-Q.top().first, -Q.top().second); Q.pop();\r\n\t\tif (v.first < i) break;\r\n\t\tres.push_back(v.second);\r\n\t}\r\n\tif (res.size() < m) printf(\"-1\\n\");\r\n\telse for (int i = 0; i < res.size(); i++)\r\n\t\t\tprintf(\"%d%c\", res[i], i + 1 < res.size()? ' ': '\\n');\r\n\treturn 0;\r\n}"
}