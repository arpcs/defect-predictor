{
    "id": 15446117,
    "contestId": 274,
    "creationTimeSeconds": 1453257652,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "Quang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 10240000,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int N = 300010;\r\n\r\nint n, m, cnt;\r\nvector <int> a[N];\r\nvector <int> ord;\r\nint pos[N];\r\nint used[N];\r\n\r\nvoid dfs(int u) {\r\n  used[u] = 1;\r\n  for (int v : a[u]) {\r\n    if (!used[v]) {\r\n      dfs(v);\r\n    }\r\n  }\r\n  ord.push_back(u);\r\n}\r\n\r\nint main() {\r\n//  freopen(\"input.txt\", \"r\", stdin);\r\n  scanf(\"%d %d\", &n, &m);\r\n  cnt = m;\r\n  vector <pair<int, int> > b;\r\n  vector <pair<int, int> > c;\r\n  for (int i = 0; i < n; i++) {\r\n    b.clear();\r\n    c.clear();\r\n    for (int j = 0; j < m; j++) {\r\n      int u;\r\n      scanf(\"%d\", &u);\r\n      if (u != -1) {\r\n        b.push_back(make_pair(u * 2, j));\r\n      }\r\n    }\r\n    sort(b.begin(), b.end());\r\n    if (b.empty()) {\r\n      continue;\r\n    }\r\n    c.push_back(b[0]);\r\n    for (int j = 1; j < b.size(); j++) {\r\n      if (b[j].first != b[j - 1].first) {\r\n        c.push_back(make_pair(b[j].first - 1, cnt++));\r\n      }\r\n      c.push_back(b[j]);\r\n    }\r\n    int now = 0;\r\n    for (int j = 0; j < c.size(); j++) {\r\n      while (now < c.size() && c[now].first <= c[j].first) {\r\n        now++;\r\n      }\r\n      if (now == c.size()) {\r\n        break;\r\n      }\r\n      int val = c[now].first;\r\n      for (int k = now; k < c.size(); k++) {\r\n        if (c[k].first != val) {\r\n          break;\r\n        }\r\n        a[c[j].second].push_back(c[k].second);\r\n      }\r\n    }\r\n  }\r\n  for (int i = 0; i < cnt; i++) {\r\n    if (!used[i]) {\r\n      dfs(i);\r\n    }\r\n  }\r\n  reverse(ord.begin(), ord.end());\r\n  for (int i = 0; i < cnt; i++) {\r\n    pos[ord[i]] = i;\r\n  }\r\n  for (int u = 0; u < cnt; u++) {\r\n    for (int v : a[u]) {\r\n      if (pos[u] > pos[v]) {\r\n        cout << -1 << endl;\r\n        return 0;\r\n      }\r\n    }\r\n  }\r\n  for (int i : ord) {\r\n    if (i < m) {\r\n      printf(\"%d \", i + 1);\r\n    }\r\n  }\r\n//  freopen(\"input.txt\", \"w\", stdout);\r\n//  cout << 1 << \" \" << 100000 << endl;\r\n//  for (int i = 1; i <= 50000; i++) {\r\n//    cout << 1 << \" \";\r\n//  }\r\n//  for (int i = 1; i <= 50000; i++) {\r\n//    cout << 2 << \" \";\r\n//  }\r\n  return 0;\r\n}\r\n"
}