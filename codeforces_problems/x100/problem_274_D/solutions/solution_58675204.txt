{
    "id": 58675204,
    "contestId": 274,
    "creationTimeSeconds": 1565626395,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "rainboy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 748,
    "memoryConsumedBytes": 4812800,
    "source": "/* practice with Dukkha */\n#include <stdio.h>\n#include <stdlib.h>\n#include <sys/time.h>\n\n#define N\t100000\n#define KN\t100000\n#define N_\t(N + KN)\n\nvoid srand_() {\n\tstruct timeval tv;\n\n\tgettimeofday(&tv, NULL);\n\tsrand(tv.tv_sec ^ tv.tv_usec);\n}\n\nint rand_(int n) {\n\treturn (rand() * 76543LL + rand()) % n;\n}\n\nint aa[N];\n\nint compare(const void *a, const void *b) {\n\tint i = *(int *) a;\n\tint j = *(int *) b;\n\n\treturn aa[i] - aa[j];\n}\n\nvoid sort(int *aa, int n) {\n\tint i, j, tmp;\n\n\tfor (i = 0; i < n; i++) {\n\t\tj = rand_(i + 1);\n\t\ttmp = aa[i], aa[i] = aa[j], aa[j] = tmp;\n\t}\n\tqsort(aa, n, sizeof *aa, compare);\n}\n\nint next[1 + KN * 2], jj[1 + KN * 2];\n\nint link(int l, int j) {\n\tstatic int l_ = 1;\n\n\tnext[l_] = l, jj[l_] = j;\n\treturn l_++;\n}\n\nint main() {\n\tstatic int ii[N], dd[N_], qq[N_], ao[N_];\n\tint k, n, n_, p, q, h, i, i_, j, l, a, head, cnt;\n\n\tsrand_();\n\tscanf(\"%d%d\", &k, &n);\n\tn_ = n;\n\tfor (i = 0; i < n; i++)\n\t\tii[i] = i;\n\twhile (k--) {\n\t\tfor (i = 0; i < n; i++)\n\t\t\tscanf(\"%d\", &aa[i]);\n\t\tsort(ii, n);\n\t\tfor (i = 0, p = -1; i < n; i = j) {\n\t\t\ta = aa[ii[i]];\n\t\t\tj = i + 1;\n\t\t\twhile (j < n && aa[ii[j]] == a)\n\t\t\t\tj++;\n\t\t\tif (a == -1)\n\t\t\t\tcontinue;\n\t\t\tq = n_++;\n\t\t\tfor (h = i; h < j; h++) {\n\t\t\t\ti_ = ii[h];\n\t\t\t\tif (p != -1)\n\t\t\t\t\tao[p] = link(ao[p], i_), dd[i_]++;\n\t\t\t\tao[i_] = link(ao[i_], q), dd[q]++;\n\t\t\t}\n\t\t\tp = q;\n\t\t}\n\t}\n\thead = cnt = 0;\n\tfor (i = 0; i < n_; i++)\n\t\tif (dd[i] == 0)\n\t\t\tqq[head + cnt++] = i;\n\twhile (cnt) {\n\t\ti = qq[cnt--, head++];\n\t\tfor (l = ao[i]; l; l = next[l]) {\n\t\t\tj = jj[l];\n\t\t\tif (--dd[j] == 0)\n\t\t\t\tqq[head + cnt++] = j;\n\t\t}\n\t}\n\tif (head != n_) {\n\t\tprintf(\"-1\\n\");\n\t\treturn 0;\n\t}\n\tfor (i = 0; i < n_; i++)\n\t\tif (qq[i] < n)\n\t\t\tprintf(\"%d \", qq[i] + 1);\n\tprintf(\"\\n\");\n\treturn 0;\n}\n"
}