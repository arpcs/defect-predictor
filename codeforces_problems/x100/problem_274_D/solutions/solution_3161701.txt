{
    "id": 3161701,
    "contestId": 274,
    "creationTimeSeconds": 1361381335,
    "relativeTimeSeconds": 7135,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "stostap"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 13,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "RUNTIME_ERROR",
    "testset": "PRETESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 921600,
    "source": "/* \r\n * File:   main.cpp\r\n * Author: ostaps\r\n *\r\n * Created on February 20, 2013, 5:28 PM\r\n */\r\n\r\n#include <cstdlib>\r\n#include <cstdio>\r\n#include <string>\r\n#include <vector>\r\n#include <memory.h>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <set>\r\n#include <map>\r\n#include <stack>\r\n#include <queue>\r\n\r\nusing namespace std;\r\n\r\n/*\r\n * \r\n */\r\n/*int a[100005];\r\nmap<int,int> mp;\r\nint main(int argc, char** argv) {\r\n\r\n    int n,k;\r\n    scanf(\"%d%d\",&n,&k);\r\n    for (int i = 0; i < n; i++)\r\n        scanf(\"%d\",&a[i]);\r\n    sort(a,a+n);\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        if (a[i] % k == 0)\r\n        {\r\n        while (a[i] % k == 0)\r\n        {\r\n            long long b = a[i] / k;\r\n            if (mp[b] == 0)\r\n            {\r\n                mp[a[i]]++;\r\n                break;\r\n            }\r\n            a[i]/=k;\r\n        }}\r\n        else\r\n            mp[a[i]]++;\r\n    }\r\n    map<int,int>::iterator it = mp.begin(), itr = mp.end();\r\n    int ans = 0;\r\n    while (it != itr)\r\n    {\r\n        ans += (*it).second / 2;\r\n        if ((*it).second % 2 == 1)\r\n            ans++;\r\n        it++;\r\n    }\r\n    printf(\"%d\\n\",ans);\r\n    return 0;\r\n}*/\r\n\r\n/*vector<vector<int> > g;\r\n\r\nbool used[100005];\r\nlong long cost[100005];\r\nlong long total = 0;\r\n\r\nlong long bfs(int v)\r\n{\r\n    used[v] = 1;\r\n    long long tmp = 0;\r\n    for (int i = 0; i < g[v].size(); i++)\r\n    {\r\n        int u = g[v][i];\r\n        if (!used[u])\r\n            tmp += bfs(u);\r\n    }\r\n    long long cur = tmp + cost[v];\r\n    total += cur > 0 ? cur : -cur;\r\n    return tmp - cur;\r\n}\r\nint main(void)\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    g.resize(n);\r\n    for (int i = 0; i < n-1; i++)\r\n    {\r\n        int x,y;\r\n        scanf(\"%d%d\",&x,&y);\r\n        x--,y--;\r\n        g[x].push_back(y);\r\n        g[y].push_back(x);\r\n    }\r\n    for (int i = 0; i < n; i++)\r\n        scanf(\"%lld\",&cost[i]);\r\n    memset(used,0,sizeof(used));\r\n    bfs(0);\r\n    printf(\"%lld\\n\",total);\r\n    return 0;\r\n}\r\n*/\r\nint n,m;\r\nvector<vector<int> > g;\r\nvector<vector<int> > v;\r\n\r\nbool cycle = 0;\r\n\r\nint cl[100005];\r\nint used[100005];\r\nvoid fnd_cycle(int V)\r\n{\r\n    cl[V] = 1;\r\n    for (int i = 0; i < v[V].size(); i++)\r\n    {\r\n        int u = v[V][i];\r\n        if (cl[u] == 0)\r\n            fnd_cycle(u); else\r\n                if (cl[u] == 1)\r\n                {\r\n                    cycle = 1;\r\n                    return;\r\n                }\r\n        if (cycle)\r\n            return;\r\n    }\r\n    if (cycle)\r\n        return;\r\n    cl[V] = 2;\r\n}\r\n\r\nvector<int> ans;\r\n\r\nvoid dfs (int V) {\r\n\tused[V] = true;\r\n\tfor (size_t i=0; i<v[V].size(); ++i) {\r\n\t\tint to = v[V][i];\r\n\t\tif (!used[to])\r\n\t\t\tdfs (to);\r\n\t}\r\n\tans.push_back (V);\r\n}\r\n \r\nvoid topological_sort() {\r\n\tfor (int i=0; i<m; ++i)\r\n\t\tused[i] = false;\r\n\tans.clear();\r\n\tfor (int i=0; i<m; ++i)\r\n\t\tif (!used[i])\r\n\t\t\tdfs (i);\r\n\treverse (ans.begin(), ans.end());\r\n}\r\n\r\nint main(void)\r\n{\r\n    scanf(\"%d%d\",&n,&m);\r\n    g.resize(n+5);\r\n    v.resize(m+5);\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        g[i].resize(m+5);\r\n        for ( int j = 0; j < m; j++)\r\n        {\r\n            scanf(\"%d\",&g[i][j]);\r\n        }\r\n    }\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        vector<pair<int,int> > q;\r\n        for (int j = 0; j < m; j++)\r\n        {\r\n            if (g[i][j] == -1)\r\n                continue;\r\n            q.push_back(make_pair(g[i][j],j));\r\n        }\r\n        sort(q.begin(), q.end());\r\n        for (int j = 0; j < q.size()-1; j ++)\r\n        {\r\n            int x = q[j].first;\r\n            int y = j + 1;\r\n            while ((y < q.size()) && (x == q[y].first))\r\n                y++;\r\n            if (y == q.size())\r\n                continue;\r\n            int z = q[y].first;\r\n            while ((y < q.size()) && (z == q[y].first))\r\n            {\r\n                v[q[j].second].push_back(q[y].second);\r\n                y++;\r\n            }\r\n        }\r\n    }\r\n    memset(cl,0,sizeof(cl));\r\n    \r\n    for (int i = 0; i < m; i++)\r\n        if (cl[i] == 0)\r\n        {\r\n            fnd_cycle(i);\r\n            if (cycle)\r\n            {\r\n                printf(\"-1\\n\");\r\n                return 0;\r\n            }\r\n        }\r\n    topological_sort();\r\n    printf(\"%d\", ans[0] + 1);\r\n    for (int i = 1; i < ans.size(); i++)\r\n        printf(\" %d\", ans[i] + 1);\r\n    printf(\"\\n\");\r\n    return 0;\r\n        \r\n}\r\n"
}