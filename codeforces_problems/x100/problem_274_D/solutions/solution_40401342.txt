{
    "id": 40401342,
    "contestId": 274,
    "creationTimeSeconds": 1531727257,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "NOI-C"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define N 100005\r\n#define INF 0x3f3f3f3f\r\nusing namespace std;\r\ntypedef vector <int> vec;\r\ntypedef vector <vec> mat;\r\nmat a;\r\nvec g[N];\r\nint n,m;\r\nint l[N];\r\nint in[N];\r\nvoid Init()\r\n{\r\n\tscanf(\"%d%d\",&n,&m);\r\n\ta.assign(n,{});\r\n\tfor(int i=0;i<n;i++)\r\n\t{\r\n\t\ta[i].assign(m,0);\r\n\t}\r\n\tfor(int i=0;i<n;i++)\r\n\t{\r\n\t\tfor(int j=0;j<m;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[i][j]);\r\n\t\t}\r\n\t}\r\n\tfor(int j1=0;j1<m;j1++)\r\n\t{\r\n\t\tfor(int j2=0;j2<j1;j2++)\r\n\t\t{\r\n\t\t\tbool flag=true;\r\n\t\t\tint ch=0;\r\n\t\t\tbool isfi=true;\r\n\t\t\tfor(int i=0;i<n;i++)\r\n\t\t\t{\r\n\t\t\t\tif(a[i][j1]==-1 or a[i][j2]==-1)continue;\r\n\t\t\t\telse if(a[i][j1]==a[i][j2])continue;\r\n\t\t\t\telse if(a[i][j1]<a[i][j2])\r\n\t\t\t\t{\r\n\t\t\t\t\tif(flag or isfi)ch++;\r\n\t\t\t\t\tflag=false;\r\n\t\t\t\t\tisfi=false;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif(not flag or isfi)ch++;\r\n\t\t\t\t\tflag=true;\r\n\t\t\t\t\tisfi=false;\r\n\t\t\t\t}\r\n//\t\t\t\tprintf(\"j1:%d,j2:%d,ch:%d\\n\",j1,j2,ch);\r\n\t\t\t}\r\n\t\t\tif(ch>1)\r\n\t\t\t{\r\n\t\t\t\tputs(\"-1\");\r\n\t\t\t\texit(0);\r\n\t\t\t}\r\n\t\t\tif(flag)\r\n\t\t\t{\r\n\t\t\t\tin[j1]++;\r\n\t\t\t\tg[j2].push_back(j1);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tin[j2]++;\r\n\t\t\t\tg[j1].push_back(j2);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nqueue <int> q;\r\nvec res;\r\nvoid Solve()\r\n{\r\n\tfor(int i=0;i<m;i++)\r\n\t{\r\n\t\tif(!in[i])\r\n\t\t{\r\n\t\t\tq.push(i);\r\n\t\t\tres.push_back(i);\r\n\t\t}\r\n\t}\r\n\twhile(!q.empty())\r\n\t{\r\n\t\tint t=q.front();\r\n\t\tq.pop();\r\n\t\tfor(int i=0;i<g[t].size();i++)\r\n\t\t{\r\n\t\t\tint to=g[t][i];\r\n\t\t\tin[to]--;\r\n\t\t\tif(!in[to])\r\n\t\t\t{\r\n\t\t\t\tq.push(to);\r\n\t\t\t\tres.push_back(to);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nvoid Print()\r\n{\r\n\tif(res.size()==m)\r\n\t{\r\n\t\tfor(int i=0;i<res.size();i++)\r\n\t\t{\r\n\t\t\tprintf(\"%d \",res[i]+1);\r\n\t\t}\r\n\t\tputs(\"\");\r\n\t}\r\n\telse\r\n\t{\r\n\t\tputs(\"-1\");\r\n\t\texit(0);\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tInit();\r\n\tSolve();\r\n\tPrint();\r\n\treturn 0;\r\n}\r\n\r\n"
}