{
    "id": 43948391,
    "contestId": 274,
    "creationTimeSeconds": 1538924049,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 122,
    "memoryConsumedBytes": 6348800,
    "source": "#include<cstdio>\n#include<iostream>\n#include<vector>\n#include<cstring>\n#include<algorithm>\n#include<queue>\n#define endl '\\n'\n/*\nfreopen(\"type.in\",\"r\",stdin);\nfreopen(\"type.out\",\"w\",stdout);\nfclose(stdin);\nfclose(stdout);\n#pragma GCC diagnostic error \"-std=c++11\"\n#pragma GCC optimize(2)\n*/\nusing namespace std;\nstruct read\n{\n    inline int get()\n    {\n        register int x=0,t=1;\n        register char ch=getchar();\n        while ((ch<'0'||ch>'9')&&ch!='-') ch=getchar();\n        if (ch=='-') {t=-1;ch=getchar();}\n        while (ch>='0'&&ch<='9') {x=x*10+ch-48;ch=getchar();}\n        return x*t;\n    }\n    inline char getch()\n    {\n        register char ch=getchar();\n        while (!(('a'<=ch&&ch<='z')||('A'<=ch&&ch<='Z'))) ch=getchar();\n        return ch;\n    }\n    inline operator int(){return get();}\n    //inline operator char(){return getch();}\n    inline read operator>>(int &a){a=get();return *this;}\n    inline read operator>>(char &a){a=getch();return *this;}\n    inline read operator<<(int t){printf(\"%d\",t);return *this;}\n    inline read operator<<(char t){printf(\"%c\",t);return *this;}\n};\nconst int N=1e5+100;\nint n,m,t2[N],ans[N],_[N],cot,deg[N],cat;\nvector<int> head[N];\nvoid topo()\n{\n    queue<int> q;\n    for(int i=1;i<=cot;++i)\n        if(deg[i]==0) q.push(i);\n    while(!q.empty())\n    {\n        int x=q.front();\n        q.pop();\n        if(x<=m) ans[++cat]=x;\n        for(int i=0;i<head[x].size();++i)\n        {\n            int y=head[x][i];\n            deg[y]--;\n            if(deg[y]==0) q.push(y);\n        }\n    }\n}\nbool cmp(const pair<int,int> &a,const pair<int,int> &b){return a.first<b.first;}\npair<int,int> t1[N];\nint main()\n{\n    read cin,cout;\n    cin>>n>>m;\n    cot=m;\n    for(int i=1;i<=n;++i)\n    {\n        int cnt=0;\n        for(int j=1;j<=m;++j)\n        {\n            int t=cin;\n            if(t!=-1)\n                t1[++cnt]=make_pair(t,j);\n        }\n        sort(t1+1,t1+1+cnt);\n        for(int j=1;j<=cnt;)\n        {\n            int l=lower_bound(t1+1,t1+1+cnt,t1[j],cmp)-t1,r=upper_bound(t1+1,t1+1+cnt,t1[j],cmp)-t1;\n            ++cot;\n            for(int i=l;i<r;++i)\n            {\n                ++deg[t1[i].second];\n                ++deg[cot+1];\n                head[cot].push_back(t1[i].second);\n                head[t1[i].second].push_back(cot+1);\n            }\n            if(l!=1)\n            {\n                ++deg[cot];\n                head[cot-1].push_back(cot);\n            }\n            if(r!=cnt+1)\n            {\n                ++deg[cot+2];\n                head[cot+1].push_back(cot+2);\n            }\n            j=r;\n            ++cot;\n        }\n    }\n    topo();\n    if(m!=cat)\n        cout<<-1;\n    else\n        for(int i=1;i<=m;++i)\n            cout<<ans[i]<<' ';\n    cout<<endl;\n    return 0;\n}"
}