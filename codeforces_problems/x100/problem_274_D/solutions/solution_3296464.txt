{
    "id": 3296464,
    "contestId": 274,
    "creationTimeSeconds": 1363122223,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "flashmt"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <cstdio>\r\n#include <vector>\r\n#include <utility>\r\nusing namespace std;\r\n\r\nvector <int> a[200200], order;\r\nint N, n, color[200200], cyclic;\r\n\r\nvoid visit(int x)\r\n{\r\n\tcolor[x] = 1;\r\n\tfor (int i = 0; i < int(a[x].size()); i++)\r\n\t{\r\n\t\tint y = a[x][i];\r\n\t\tif (!color[y]) visit(y);\r\n\t\telse\r\n\t\t\tif (color[y] == 1) cyclic = 1;\r\n\t}\r\n\tif (x < n) order.push_back(x);\r\n\tcolor[x] = 2;\r\n}\r\n\r\nint main()\r\n{\r\n\tint m, x;\r\n\tcin >> m >> n;\r\n\tN = n;\r\n\tfor (int i = 0; i < m; i++)\r\n\t{\r\n\t\tvector < pair<int,int> > row;\r\n\t\tfor (int j = 0; j < n; j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\", &x);\r\n\t\t\tif (x >= 0) row.push_back(make_pair(x, j));\r\n\t\t}\r\n\t\t\r\n\t\tsort(row.begin(), row.end());\r\n\t\tint i = 0, R = row.size(), last = -1;\r\n\t\twhile (1)\r\n\t\t{\r\n\t\t\tint j = i;\r\n\t\t\twhile (j < R && row[j].first == row[i].first) \r\n\t\t\t{\r\n\t\t\t\tif (last >= 0) a[last].push_back(row[j].second);\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (j == R) break;\r\n\t\t\t\r\n\t\t\tlast = N++;\r\n\t\t\twhile (i < j) a[row[i++].second].push_back(last);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor (int i = 0; i < n; i++) a[N].push_back(i);\r\n\tvisit(N);\r\n\t\r\n\tif (cyclic) puts(\"-1\");\r\n\telse\r\n\t\tfor (int i = n - 1; i >= 0; i--) printf(\"%d \", order[i] + 1);\r\n}\r\n"
}