{
    "id": 8843045,
    "contestId": 274,
    "creationTimeSeconds": 1416900247,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "bnuvjudge"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 9216000,
    "source": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdio>\n#include <cstdlib>\n#include<vector>\n#include<queue>\n#include<algorithm>\n#include<iostream>\n#include<cstdio>\n#define M 100100\nusing namespace std;\n\nint n,m,join[10*M],cnt,ans[M],tot;\nvector<int>v[M];\nqueue<int>q;\n\nstruct node{int val,no;}rec[M];\n\nbool cmp(node a,node b){return a.val<b.val;}\n\nvoid add(int x,int y){join[y]++;v[x].push_back(y);}\n\nint main()\n{\n    cin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tfor(int j=1;j<=m;j++) scanf(\"%d\",&rec[j].val),rec[j].no=j;\n\t\tsort(rec+1,rec+m+1,cmp);\n\t\tfor(int j=1;j<=m;j++)\n\t\t{\n\t\t\tif(rec[j].val<0) continue;\n\t\t\tif(j==1||rec[j].val!=rec[j-1].val) cnt++;\n\t\t\tadd(m+cnt,rec[j].no);add(rec[j].no,m+cnt+1);\t\n\t\t}\n\t\tcnt++;\n\t}\n\tfor(int i=1;i<=m+cnt;i++)if(!join[i]) q.push(i);\n\twhile(!q.empty())\n\t{\n\t\tint t=q.front();q.pop();\n\t\tif(t<=m) ans[++tot]=t;\n\t\tfor(int i=0;i<v[t].size();i++)\n\t\t{\n\t\t\tint tmp=v[t][i];\n\t\t\tjoin[tmp]--;\n\t\t\tif(!join[tmp]) q.push(tmp);\n\t\t}\n\t}\n\tif(tot<m) {cout<<-1;return 0;}\n\tfor(int i=1;i<=m;i++)printf(\"%d \",ans[i]);\n    return 0;\n}\n\n                                                                                                                                          "
}