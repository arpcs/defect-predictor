{
    "id": 14222199,
    "contestId": 274,
    "creationTimeSeconds": 1447391971,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "Hodi16"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define pii pair<int,int>\r\n\r\n#define mp make_pair\r\n\r\n#define pb push_back\r\n\r\n#define A first\r\n\r\n#define B second\r\n\r\nconst int N = 510000;\r\n\r\nint n , m , nv , cnt , vis[N] , res[N] , ind[N];\r\n\r\nvector<int> adj[N];\r\n\r\nvector<pii> a;\r\n\r\nvoid dfs(int v){\r\n        if (v <= m) {\r\n                res[++cnt] = v; \r\n                vis[v] = 1;\r\n        }\r\n        for (int i = 0; i < adj[v].size(); i++){\r\n                int u = adj[v][i];\r\n                if ((--ind[u]) == 0)\r\n                        dfs(u);\r\n    }\r\n}\r\nvoid Topsort(){\r\n    for (int i = 1; i <= nv; i++)\r\n        if (ind[i] == 0 && !vis[i]) \r\n                dfs(i);\r\n}\r\nint main() {\r\n        cin >> n >> m;\r\n        nv = m;\r\n        for (int i = 1; i <= n; i++) {\r\n                a.clear();\r\n                for (int j = 1;j <= m; j++) {\r\n                        int x;\r\n                        scanf(\"%d\",&x); \r\n                         if (x == -1)\r\n                                 continue;\r\n                         a.pb(mp(x , j));\r\n                }\r\n                sort(a.begin() , a.end());\r\n                nv++ ;\r\n                int s = 0, e = 0;\r\n                while (true) {\r\n                if (s >= a.size()) \r\n                         break;\r\n                while (e < a.size() && a[e].A == a[s].A)\r\n-- INSERT --                                                                                                                                                                              13,1          Top\r\n"
}