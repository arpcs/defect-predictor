{
    "id": 3854047,
    "contestId": 274,
    "creationTimeSeconds": 1370869853,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "KrK"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 6553600,
    "source": "#include <cstdio>\r\n#include <vector>\r\n#include <map>\r\nusing namespace std;\r\n\r\nconst int Maxn = 100005;\r\n\r\nint n, m;\r\nvector <vector <int> > B;\r\nmap <int, vector <int> > M[Maxn];\r\nmap <int, vector <int> >::iterator it[Maxn];\r\nint seen[Maxn];\r\nint ready[Maxn];\r\nvector <int> res;\r\n\r\nvoid giveReady(int c) { if (++ready[c] == n) res.push_back(c); }\r\n\r\nvoid delCol(int r, int c)\r\n{\r\n\tif (B[r][c] == -1) return;\r\n\tif (++seen[r] == it[r]->second.size()) {\r\n\t\tit[r]++; seen[r] = 0;\r\n\t\tif (it[r] != M[r].end())\r\n\t\t\tfor (int i = 0; i < it[r]->second.size(); i++)\r\n\t\t\t\tgiveReady(it[r]->second[i]);\r\n\t}\r\n}\r\n\r\nint main()\r\n{\r\n\tscanf(\"%d %d\", &n, &m);\r\n\tB.assign(n + 1, vector <int>(m + 1));\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tfor (int j = 1; j <= m; j++) {\r\n\t\t\tscanf(\"%d\", &B[i][j]);\r\n\t\t\tif (B[i][j] == -1) giveReady(j);\r\n\t\t\telse M[i][B[i][j]].push_back(j);\r\n\t\t}\r\n\t\tit[i] = M[i].begin();\r\n\t\tif (it[i] != M[i].end())\r\n\t\t\tfor (int j = 0; j < it[i]->second.size(); j++)\r\n\t\t\t\tgiveReady(it[i]->second[j]);\r\n\t}\r\n\tfor (int i = 0; i < res.size(); i++)\r\n\t\tfor (int j = 1; j <= n; j++)\r\n\t\t\tdelCol(j, res[i]);\r\n\tif (res.size() < m) printf(\"-1\\n\");\r\n\telse for (int i = 0; i < m; i++)\r\n\t\t\tprintf(\"%d%c\", res[i], i + 1 < m? ' ': '\\n');\r\n\treturn 0;\r\n}"
}