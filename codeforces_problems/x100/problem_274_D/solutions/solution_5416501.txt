{
    "id": 5416501,
    "contestId": 274,
    "creationTimeSeconds": 1386870634,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "niklasb"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++0x",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 4096000,
    "source": "#include <bits/stdc++.h>\n#include <cassert>\nusing namespace std;\ntypedef long long ll; typedef long double ld;\n#define rep(i,s,e) for (int i=(s);i<(e);++i)\n#define all(x) begin(x),end(x)\n#define clr(x,y) memset(x,y,sizeof x)\n#define contains(x,y) ((x).find(y)!=end(x))\n#define pb push_back\n#define Tu tuple\n#define mk make_pair\n#define mkt make_tuple\n#define fst first\n#define snd second\n#define _1 get<0>\n#define _2 get<1>\n#define _3 get<2>\n#define _4 get<3>\n#define endl \"\\n\"\nint dx[]={0,0,1,-1,1,-1,1,-1}, dy[]={-1,1,0,0,1,-1,-1,1};\nvoid run();\nint main() {\n#ifndef LOCAL\n  //freopen(\"x.in\", \"r\", stdin);\n  //freopen(\"x.out\", \"w\", stdout);\n#endif\n  ios::sync_with_stdio(0);\n  cout << fixed << setprecision(16);\n  run();\n}\n\nint n, m;\nvector<pair<int,int> > M[100100];\nvector<int> order[100100];\n\nbool cmp(int a, int b) {\n  int cmp = 0;\n  rep(i,0,n) {\n    if (order[i][a] == -1 || order[i][b] == -1) continue;\n    if (order[i][a] < order[i][b]) {\n      if (cmp == 1) {\n        cout << -1 << endl;\n        exit(0);\n      }\n      cmp = -1;\n    }\n    if (order[i][a] > order[i][b]) {\n      if (cmp == -1) {\n        cout << -1 << endl;\n        exit(0);\n      }\n      cmp = 1;\n    }\n  }\n  return cmp == -1;\n}\n\nvoid run() {\n  cin >> n >> m;\n  rep(i,0,n) {\n    rep(j,0,m) {\n      int x; cin >> x;\n      M[i].pb(mk(x, j));\n    }\n    sort(all(M[i]));\n    int last = -1;\n    int idx = -1;\n    order[i].resize(m, -1);\n    for (auto it : M[i]) {\n      if (it.fst != last) idx++;\n      order[i][it.snd] = idx;\n      last = it.fst;\n    }\n    //rep(kk,0,n) cout << order[i][kk] << \" \";cout<<endl;\n  }\n  vector<int> ans;\n  rep(i,0,m) ans.pb(i);\n  sort(all(ans), cmp);\n  rep(i,0,m-1) cmp(ans[i], ans[i+1]);\n  for(auto i: ans) cout << i + 1<<\" \";\n  cout<<endl;\n}\n"
}