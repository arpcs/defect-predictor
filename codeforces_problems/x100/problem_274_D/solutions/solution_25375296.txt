{
    "id": 25375296,
    "contestId": 274,
    "creationTimeSeconds": 1489135653,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "Neverknow"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 38707200,
    "source": "//In The Name Of Allah// \n#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn=1001;\n#define F first\n#define S second\n#define pb push_back\n#define mp make_pair\n\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\n\nint n,m,InDeg[maxn*maxn],NV;\npii cor[maxn][maxn];\nvi out[maxn*maxn],in[maxn*maxn],List;\n\ninline void input()\n{\n\tcin>>n>>m;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++)\n\t\t\tcin>>cor[i][j].F,cor[i][j].S=j;\n}\n\ninline void Make()\n{\n\tNV=m;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tNV++;\n\t\tsort(cor[i]+1,cor[i]+m+1);\n\t\tint p=1;\n\t\twhile(p<=m && cor[i][p].F==-1)\n\t\t\tp++;\n\t\twhile(p<=m)\n\t\t{\n\t\t\tint v=cor[i][p].F;\n\t\t\tNV++;\n\t\t\twhile(p<=m && cor[i][p].F==v)\n\t\t\t\tin[NV].pb(cor[i][p].S),\n\t\t\t\tout[cor[i][p].S].pb(NV),\n\t\t\t\tout[NV-1].pb(cor[i][p].S),\n\t\t\t\tin[cor[i][p].S].pb(NV-1),\n\t\t\t\tp++;\n\t\t}\n\t}\n}\ninline void Check()\n{\n\tqueue <int> source;\n\n\tfor(int i=1;i<=NV;i++)\n\t{\n\t\tInDeg[i]=in[i].size();\n\t\tif(!InDeg[i])\n\t\t\tsource.push(i);\n\t}\n\n\twhile(!source.empty())\n\t{\n\t\tint top=source.front();\n\t\tsource.pop();\n\t\tif(top<=m)\n\t\t\tList.pb(top);\n\t\tfor(auto u: out[top])\n\t\t{\n\t\t\tInDeg[u]--;\n\t\t\tif(!InDeg[u])\n\t\t\t\tsource.push(u);\n\t\t}\n\t}\n\tif(List.size()!=m)\n\t\tcout<<-1,exit(0);\n}\n\nint32_t main()\n{\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0);cout.tie(0);\n\tinput();\n\tMake();\n\tCheck();\n\tfor(auto v: List)\n\t\tcout<<v<<\" \";\n\treturn 0;\n}\n\n//I will succeed,\n//Maybe not immediately,\n//BUT DEFIANTLY."
}