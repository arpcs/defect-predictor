{
    "id": 40478222,
    "contestId": 274,
    "creationTimeSeconds": 1531831942,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "Lee2004"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<iostream>\r\n#include<stdio.h>\r\n#include<fstream>\r\n#include<algorithm>\r\n#include<ctime>\r\n#include<cstdlib>\r\n#include<cstring>\r\n#include<vector>\r\n#include<set>\r\n#include<string>\r\n#include<queue>\r\n#include<map>\r\n#include<iomanip>\r\n#include<cassert>\r\n#include<complex>\r\n#include<functional>\r\n#include<list>\r\n#include<cmath>\r\n#include<stack>\r\n#include<assert.h>\r\n#define ll long long\r\n#define pb push_back\r\n#define li long long int\r\n#define MAX 300500\r\n#define rep(i,to) for (li i=0;i<((li)(to));i++)\r\nusing namespace std;\r\nvector<li> parent_to_represent[MAX];\r\nvector<li> represent_to_child[MAX];\r\nli n,m,represent_num[MAX],represent_m,num_of_parent_represent_of_col[MAX];\r\nvector<vector<li> > mp;\r\npair<li,li> row[MAX];\r\nint main()\r\n{\r\n\tcin>>n>>m;\r\n\tmp=vector<vector<li> >(n,vector<li>(m,0));\r\n\trep(i,n) rep(j,m) cin>>mp[i][j];\r\n\trep(i,n)\r\n\t{\r\n\t\trep(j,m) row[j].second=j,row[j].first=mp[i][j];\r\n\t\tsort(row,row+m);\r\n\t\tli cur=-1,bef_represent=-1,cur_represent=-1;\r\n\t\trep(j,m)\r\n\t\t{\r\n\t\t\tif (row[j].first!=-1)\r\n\t\t\t{\r\n\t\t\t\tif (row[j].first!=cur)\r\n\t\t\t\t{\r\n\t\t\t\t\tbef_represent=cur_represent;\r\n\t\t\t\t\tcur_represent=represent_m++;\r\n\t\t\t\t\tcur=row[j].first;\r\n\t\t\t\t}\r\n\t\t\t\trepresent_num[cur_represent]++;\r\n\t\t\t\tparent_to_represent[row[j].second].pb(cur_represent);\r\n\t\t\t\tif (bef_represent!=-1)\r\n\t\t\t\t{\r\n\t\t\t\t\trepresent_to_child[bef_represent].pb(row[j].second);\r\n\t\t\t\t\tnum_of_parent_represent_of_col[row[j].second]++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tqueue<li> q;\r\n\tvector<li> ans;\r\n\trep(i,m)\r\n\t\tif (num_of_parent_represent_of_col[i]==0) q.push(i);\r\n\twhile (!q.empty())\r\n\t{\r\n\t\tli col=q.front();\r\n\t\tans.pb(col);\r\n\t\tq.pop();\r\n\t\trep(i,parent_to_represent[col].size())\r\n\t\t{\r\n\t\t\tli represent=parent_to_represent[col][i];\r\n\t\t\tif (--represent_num[represent]==0)\r\n\t\t\t\trep(j,represent_to_child[represent].size())\r\n    \t\t\t{\r\n\t\t\t\t\tli c=represent_to_child[represent][j];\r\n\t\t\t\t\tif (--num_of_parent_represent_of_col[c]==0)q.push(c);\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (ans.size()!=m)\r\n\t{\r\n\t\tcout<<\"-1\";\r\n\t\t//system(\"pause\");\r\n    \treturn 0;\r\n\t}\r\n\trep(i,ans.size()-1)\r\n\t{\r\n\t\tli col0=ans[i],col1=ans[i+1];\r\n\t\trep(row,n)\r\n\t\t{\r\n\t\t\tif (mp[row][col1]==-1) mp[row][col1]=mp[row][col0];\r\n\t\t\telse if (mp[row][col1]<mp[row][col0]) {cout<<\"-1\"; //system(\"pause\"); return 0;}\r\n\t\t}\r\n\t}\r\n\trep(i,ans.size())\r\n\t{\r\n\t\tcout<<ans[i]+1;\r\n\t\tif (i!=ans.size()-1) cout<<\" \";\r\n\t}\r\n\t//system(\"pause\");\r\n    return 0;\r\n}\r\n"
}