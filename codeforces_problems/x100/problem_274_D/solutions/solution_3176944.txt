{
    "id": 3176944,
    "contestId": 274,
    "creationTimeSeconds": 1361639108,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "zhoufan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 2560000,
    "source": "#include<stdio.h>\r\n#include<string.h>\r\n#include<algorithm>\r\n#include<math.h>\r\n#include<vector>\r\n#include<set>\r\n#include<map>\r\n#define pb push_back\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n\r\nconst int N = 100010;\r\n\r\nint n, m;\r\n\r\nstruct Node {\r\n    vector<int> v;\r\n    int num;\r\n    bool operator < (const Node &a) const{\r\n        for(int i = 0; i < n; i++) {\r\n            if(v[i] != -1 && a.v[i] != -1 && v[i] != a.v[i]) return v[i] < a.v[i];\r\n        }\r\n        return num < a.num;\r\n    }\r\n};\r\n\r\nvector<Node> e;\r\nvector<int> matrix[N];\r\n\r\nint main()\r\n{\r\n    //freopen(\"in.cpp\", \"r\", stdin);\r\n    scanf(\"%d%d\", &n, &m);\r\n    for(int i = 0; i < n; i++)\r\n    for(int j = 0; j < m; j++) {\r\n        int a;\r\n        scanf(\"%d\", &a);\r\n        matrix[i].pb(a);\r\n    }\r\n    //puts(\"!!!!!!\");\r\n    for(int i = 0; i < m; i++) {\r\n        Node t;\r\n        t.num = i + 1;\r\n        for(int j = 0; j < n; j++) t.v.pb(matrix[j][i]);\r\n        e.pb(t);\r\n    }\r\n    //puts(\"!!!!!!\");\r\n//    puts(\"\");\r\n//    for(int i = 0; i < m; i++) {\r\n//        for(int j = 0; j < e[i].v.size(); j++) printf(\"%d \", e[i].v[j]);\r\n//        puts(\"\");\r\n//    }\r\n    sort(e.begin(), e.end());\r\n//    for(int i = 0; i < m; i++) {\r\n//        for(int j = 0; j < e[i].v.size(); j++) printf(\"%d \", e[i].v[j]);\r\n//        puts(\"\");\r\n//    }\r\n    //puts(\"!!!!\");\r\n    int f = 0;\r\n    for(int i = 0; i < m - 1; i++) {\r\n        for(int j = 0; j < n; j++) {\r\n            if(e[i].v[j] != -1 && e[i + 1].v[j] != -1 && e[i].v[j] > e[i + 1].v[j]) f = 1;\r\n        }\r\n    }\r\n    if(f == 1) puts(\"-1\");\r\n    else {\r\n        for(int i = 0; i < m; i++)  printf(\"%d%c\", e[i].num, i == m?'\\n':' ');\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}