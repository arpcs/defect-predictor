{
    "id": 3611240,
    "contestId": 274,
    "creationTimeSeconds": 1366721284,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 20582400,
    "source": "#include<stdio.h>\n#include<string.h>\n#include<algorithm>\n#include<queue>\n#include<vector>\nusing namespace std;\nvector<int>vv[1000000];\nint top;\nint du[1000000];\nstruct node\n{\n    int val,biao;\n    bool friend operator < (node a,node b)\n    {\n        return a.val<b.val;\n    }\n}s[100100];\nvector<int>ans;\nint main()\n{\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    top=m;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<m;j++)\n            scanf(\"%d\",&s[j].val),s[j].biao=j;\n        sort(s,s+m);\n        for(int j=0;j<m;j++)\n        {\n            if(s[j].val==-1)\n                continue;\n            if(!j||s[j].val!=s[j-1].val)\n                top++;\n            vv[s[j].biao].push_back(top+1),du[top+1]++;\n            vv[top].push_back(s[j].biao),du[s[j].biao]++;\n        }\n        top++;\n    }\n    queue<int>q;\n    for(int i=0;i<top;i++)\n        if(!du[i])\n            q.push(i);\n    while(!q.empty())\n    {\n        int x=q.front();\n        q.pop();\n        if(x<m)\n            ans.push_back(x);\n        int len=vv[x].size();\n        for(int i=0;i<len;i++)\n            if(--du[vv[x][i]]==0)\n                q.push(vv[x][i]);\n    }\n    if(ans.size()==m)\n    {\n        for(int i=0;i<m-1;i++)\n            printf(\"%d \",ans[i]+1);\n        printf(\"%d\\n\",ans[m-1]+1);\n    }\n    else\n        puts(\"-1\");\n}\n\n \t\t\t  \t\t  \t  \t\t\t\t \t\t \t\t"
}