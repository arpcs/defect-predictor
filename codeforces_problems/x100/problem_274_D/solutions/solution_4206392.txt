{
    "id": 4206392,
    "contestId": 274,
    "creationTimeSeconds": 1375231171,
    "relativeTimeSeconds": 4771,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "dasko1"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1375226400
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 5836800,
    "source": "#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <set>\n#include <map>\n#include <cassert>\n\n#define REP(AA,BB) for(int AA=0; AA<(BB); ++AA)\n#define FOR(AA,BB,CC) for(int AA=(BB); AA<(CC); ++AA)\n#define FC(AA,BB) for(__typeof((AA).begin()) BB=(AA).begin(); BB!=(AA).end(); ++BB)\n#define SZ(AA) ((int)((AA).size()))\n#define ALL(AA) (AA).begin(), (AA).end()\n#define PB push_back\n#define MP make_pair\n\nusing namespace std;\n\ntypedef vector<int> VI;\ntypedef pair<int, int> PII;\ntypedef long long LL;\ntypedef long double LD;\n\nconst int MAXN = 200100;\nVI ve[MAXN + 10];\n\nint main(void) {\n    int n, m; scanf(\"%d%d\", &n, &m);\n    vector<VI> a(n);\n    REP (i, n) {\n        a[i] = VI(m);\n        REP (j, m) {\n            scanf(\"%d\", &a[i][j]);\n        }\n    }\n    int N = m;\n    REP (i, n) {\n        VI X; map<int, VI> g;\n        REP (j, m) {\n            if (a[i][j] != -1) {\n                X.PB(a[i][j]);\n                g[a[i][j]].PB(j);\n            }\n        }\n        sort(ALL(X)); X.erase(unique(ALL(X)), X.end());\n        REP (j, SZ(X) - 1) {\n            int v = N++;\n            int t = X[j], next = X[j + 1];\n            FC (g[t], it) {\n                ve[*it].PB(v);\n            }\n            FC (g[next], it) {\n                ve[v].PB(*it);\n            }\n        }\n    }\n    VI in(N);\n    REP (i, N) {\n        FC (ve[i], it) {\n            ++in[*it];\n        }\n    }\n    VI res;\n    queue<int> Q; int us = 0;\n    REP (i, N) {\n        if (in[i] == 0) {\n            Q.push(i);\n        }\n    }\n    while (!Q.empty()) {\n        int v = Q.front(); Q.pop();\n        ++us;\n        if (v < m) {\n            res.PB(v + 1);\n        }\n        FC (ve[v], it) {\n            --in[*it];\n            if (in[*it] == 0) {\n                Q.push(*it);\n            }\n        }\n    }\n    if (us < N) {\n        puts(\"-1\");\n    } else {\n        FC (res, it) {\n            printf(\"%d \", *it);\n        }\n        puts(\"\");\n    }\n    return 0;\n}\n\n"
}