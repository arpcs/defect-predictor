{
    "id": 58572359,
    "contestId": 274,
    "creationTimeSeconds": 1565520516,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "crathva"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 9216000,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nvector<int> E[300005];\nint V[300005], out[300005];\nint ts;\nbool valid = true;\nvector<int> sol;\nvoid dfs(int i) {\n    V[i] = ++ts;\n    for(auto x : E[i])\n        if(!V[x])\n            dfs(x);\n        else if(V[x] < V[i] and !out[x])\n            valid = false;\n    sol.push_back(i);\n    out[i] = ++ts;\n}\nint main() {\n    ios::sync_with_stdio(0); cin.tie(0);\n    int n, m;\n    cin >> n >> m;\n    vector<vector<int>> A(n, vector<int>(m));\n    for(int i = 0; i < n; ++i)\n        for(int j = 0; j < m; ++j)\n            cin >> A[i][j];\n    map<int, vector<int>> row;\n    int dummyIndicesCnt = m;\n    for(int i = 0; i < n; ++i) {\n        row.clear();\n        for(int j = 0; j < m; ++j)\n            if(A[i][j] != -1)\n                row[A[i][j]].push_back(j);\n        if(row.size() <= 1) continue;\n        auto prev = row.begin();\n        for(auto it = (++row.begin()); it != row.end(); ++it) {\n            for(auto x : prev->second)\n                E[x].push_back(dummyIndicesCnt);\n            for(auto x : it->second)\n                E[dummyIndicesCnt].push_back(x);\n            dummyIndicesCnt++;\n            prev = it;\n        }\n    }\n    for(int i = 0; i < m; ++i)\n        if(!V[i])\n            dfs(i);\n    if(valid) {\n        reverse(sol.begin(), sol.end());\n        for(auto x : sol)\n            if(x < m)\n                cout << x+1 << ' ';\n    }\n    else\n        cout << \"-1\";\n    cout << endl;\n    return 0;\n}\n"
}