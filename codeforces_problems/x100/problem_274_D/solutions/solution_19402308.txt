{
    "id": 19402308,
    "contestId": 274,
    "creationTimeSeconds": 1469446057,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 3379200,
    "source": "#include <algorithm>\n#include <iostream>\n#include <utility>\n#include <cstdio>\n#include <vector>\n#include <queue>\n#define mp make_pair\n#define pb push_back\nusing namespace std; \nvector<int> adj[102400], from[102400]; \t\nint en[102400], t, deg[102400]; \nbool vis[102400]; \nint main()\n{\n\t// freopen(\"LovelyMatrix.in\", \"r\", stdin); \n\t// freopen(\"LovelyMatrix.out\", \"wt\", stdout); \n\tint n, m; \n\tscanf(\"%d%d\", &n, &m); \n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tvector<pair<int, int> > tmp; \n\t\tfor (int j = 0; j < m; j++)\n\t\t{\n\t\t\tint x; \n\t\t\tscanf(\"%d\", &x); \n\t\t\ttmp.pb(mp(x, j)); \n\t\t}\n\t\tsort(tmp.begin(), tmp.end(), greater<pair<int, int> >()); \n\t\tint lst = 0, en = 0; \n\t\tfor (int j = 1; j < m; j++)\n\t\t{\n\t\t\tif (tmp[j].first == -1)\n\t\t\t\tbreak; \n\t\t\tif (tmp[j].first != tmp[lst].first)\n\t\t\t{\n\t\t\t\tfor (int k = lst; k <= en; k++)\n\t\t\t\t{\n\t\t\t\t\tadj[tmp[k].second].pb(tmp[j].second); \n\t\t\t\t\tfrom[tmp[j].second].pb(tmp[k].second); \n\t\t\t\t}\n\t\t\t\tif (tmp[j].first != tmp[en + 1].first)\n\t\t\t\t{\n\t\t\t\t\tlst = j; \n\t\t\t\t\ten = j; \n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\ten++; \n\t\t}\n\t}\n\tfor (int i = 0; i < m; i++)\n\t{\n\t\tsort(adj[i].begin(), adj[i].end()); \n\t\tadj[i].erase(unique(adj[i].begin(), adj[i].end()), adj[i].end()); \n\t\tsort(from[i].begin(), from[i].end()); \n\t\tfrom[i].erase(unique(from[i].begin(), from[i].end()), from[i].end()); \n\t\tdeg[i] = from[i].size(); \n\t}\n\tvector<int> ans; \n\tqueue<int> que; \n\tfor (int i = 0; i < m; i++)\n\t{\n\t\tif (!deg[i])\n\t\t{\n\t\t\tque.push(i); \n\t\t\tans.pb(i); \n\t\t\tvis[i] = true; \n\t\t}\n\t}\n\twhile (!que.empty())\n\t{\n\t\tint u = que.front(); \n\t\t// printf(\"%d\\n\", u);\n\t\tque.pop(); \n\t\tfor (int i = 0; i < adj[u].size(); i++)\n\t\t{\n\t\t\tdeg[adj[u][i]]--; \n\t\t\tif (!deg[adj[u][i]])\n\t\t\t{\n\t\t\t\tif (vis[adj[u][i]])\n\t\t\t\t{\n\t\t\t\t\tprintf(\"-1\\n\");\n\t\t\t\t\treturn 0; \n\t\t\t\t}\n\t\t\t\tque.push(adj[u][i]); \n\t\t\t\tans.pb(adj[u][i]); \n\t\t\t\tvis[adj[u][i]] = true; \n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < m; i++)\n\t{\n\t\tif (!vis[i])\n\t\t{\n\t\t\tprintf(\"-1\\n\");\n\t\t\treturn 0; \n\t\t}\n\t}\n\tfor (int i = m - 1; i >= 0; i--)\n\t\tprintf(\"%d%c\", ans[i] + 1, \" \\n\"[!i]);\n\treturn 0; \n}\n\n \t \t\t \t\t\t\t  \t   \t  \t \t\t\t \t \t\t\t\t"
}