{
    "id": 3750380,
    "contestId": 274,
    "creationTimeSeconds": 1369059235,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 3379200,
    "source": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <queue>\n#include <algorithm>\nusing namespace std;\n\nconst int maxm = 100010;\nint n, m, deg[2*maxm], cnt = 0;\nvector<int> adj[maxm];\nvector<int> ans;\nqueue<int> q;\n\nstruct node{\n\tint val, id;\n\tbool friend operator<(node a, node b) {\n\t\treturn a.val < b.val;\n\t}\n};\nnode edge[maxm];\n\nvoid addEdge(int x, int y){\n\tdeg[y]++;\n\tadj[x].push_back(y);\n}\n\nint main(){\n\tscanf(\"%d %d\", &n, &m);\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < m; j++) {\n\t\t\tscanf(\"%d\", &edge[j].val);\n\t\t\tedge[j].id = j;\n\t\t}\n\t\tsort(edge, edge + m);\n\t\tfor (int j = 0; j < m; j++) {\n\t\t\tif (edge[j].val < 0) continue;\n\t\t\tif (!j || edge[j].val != edge[j-1].val) \n\t\t\t\tcnt++;\n\t\t\taddEdge(edge[j].id, m+cnt+1);\n\t\t\taddEdge(m+cnt, edge[j].id);\n\t\t}\n\t\tcnt++;\n\t}\n\tfor (int i = 0;i < m+cnt; i++)\n\t\tif(!deg[i]) q.push(i);\n\twhile (!q.empty()) {\n\t\tint u = q.front(); q.pop();\n\t\tif (u < m) ans.push_back(u);\n\t\tfor (int i = 0; i < adj[u].size(); i++){\n\t\t\tint v = adj[u][i];\n\t\t\tdeg[v]--;\n\t\t\tif (!deg[v]) q.push(v);\n\t\t}\n\t}\n\tif (ans.size() < m) puts(\"-1\");\n\telse {\n\t\tfor (int i = 0; i < m; i++)\n\t\t\tprintf(\"%d \", ans[i] + 1);\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n\n  \t   \t\t \t\t \t\t    \t  \t\t\t \t"
}