{
    "id": 3171263,
    "contestId": 274,
    "creationTimeSeconds": 1361521628,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "cpy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 1945600,
    "source": "#include <cstdio>\r\n#include <vector>\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\n\r\n#define SZ(v) ((int)(v).size())\r\n#define CLR(v) ((v).clear())\r\n\r\ntypedef vector<int> vi;\r\n\r\nstruct XD\r\n{\r\n    vi col;\r\n    int idx;\r\n    bool operator < (const XD& o) const\r\n    {\r\n        if (col[0] < o.col[0])\r\n        {\r\n            return true;\r\n        }\r\n        if (col[0] == o.col[0] && idx < o.idx)\r\n        {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n};\r\n\r\nXD mat[100010];\r\n\r\nvoid change(int idx1, int idx2)\r\n{\r\n    int i;\r\n    for (i = 0; i < SZ(mat[idx1].col); i ++)\r\n    {\r\n        swap(mat[idx1].col[i], mat[idx2].col[i]);\r\n    }\r\n    swap(mat[idx1].idx, mat[idx2].idx);\r\n}\r\n\r\nvoid solve(int n, int m)\r\n{\r\n    int i, j, flag1, flag2;\r\n    sort(mat, mat + m);\r\n    for (i = 0; i < m - 1; i ++)\r\n    {\r\n        flag1 = flag2 = 0;\r\n        for (j = 0; j < n; j ++)\r\n        {\r\n            if (mat[i].col[j] != -1 && mat[i].col[j] < mat[i + 1].col[j])\r\n            {\r\n                flag1 = 1;\r\n            }\r\n            if (mat[i + 1].col[j] != -1 && mat[i].col[j] > mat[i + 1].col[j])\r\n            {\r\n                flag2 = 1;\r\n            }\r\n            if (flag1 & flag2)\r\n            {\r\n                printf(\"-1\\n\");\r\n                return;\r\n            }\r\n        }\r\n        for (j = 0; j < n; j ++)\r\n        {\r\n            if (mat[i + 1].col[j] != -1 && mat[i].col[j] > mat[i + 1].col[j])\r\n            {\r\n                change(i, i + 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    for (i = 0; i < m - 1; i ++)\r\n    {\r\n        printf(\"%d \", mat[i].idx);\r\n    }\r\n    printf(\"%d\\n\", mat[i].idx);\r\n}\r\n\r\nint main()\r\n{\r\n    int n, m, i, j;\r\n    while (scanf(\"%d%d\", &n, &m) == 2)\r\n    {\r\n        for (i = 0; i < m; i ++)\r\n        {\r\n            CLR(mat[i].col);\r\n            mat[i].col.resize(n);\r\n            mat[i].idx = i + 1;\r\n        }\r\n        for (i = 0; i < n; i ++)\r\n        {\r\n            for (j = 0; j < m; j ++)\r\n            {\r\n                scanf(\"%d\", &mat[j].col[i]);\r\n            }\r\n        }\r\n        solve(n, m);\r\n    }\r\n    return 0;\r\n}"
}