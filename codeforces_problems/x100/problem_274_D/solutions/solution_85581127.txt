{
    "id": 85581127,
    "contestId": 274,
    "creationTimeSeconds": 1593560599,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "forgetting_yesterday"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 248,
    "memoryConsumedBytes": 40038400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int maxn=1000001;\r\nint n,m,d,head[maxn],a[maxn],c[maxn],id[maxn],stac[maxn],kl=1,x,y,top,num,ans,ind[maxn];\r\nstruct line{int to,next;}q[maxn*2];\r\nvoid pushline(int f,int t)\r\n{\r\n\t//cout<<f<<\" \"<<t<<endl;\r\n\tq[++kl].next=head[f];head[f]=kl;q[kl].to=t;ind[t]++;\r\n}\r\nint topsort()\r\n{\r\n\tfor(int i=1;i<=n;i++)if(!ind[i])stac[++top]=i,c[++num]=i;\r\n\twhile(top)\r\n\t{\r\n\t\tint x=stac[top];top--;\r\n\t\tfor(int p=head[x];int v=q[p].to;p=q[p].next)\r\n\t\t{\r\n\t\t\tind[v]--;\r\n\t\t\tif(ind[v]==0)stac[++top]=v,c[++num]=v;\r\n\t\t}\r\n\t}\r\n\tfor(int i=1;i<=n;i++)if(ind[i]!=0)return -1;\r\n\treturn 0;\r\n}\r\nbool cmp(int x,int y){return a[x]<a[y];}\r\nint main()\r\n{\r\n\tcin>>n>>m;\r\n\tfor(int j=1;j<=m;j++)id[j]=j;\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tfor(int j=1;j<=m;j++)cin>>a[j];\r\n\t\tsort(id+1,id+1+m,cmp);\r\n\t\tfor(int j=2;j<=m;j++)\r\n\t\t{\r\n\t\t\tint x=id[j-1],y=id[j];\r\n\t\t\tif(a[x]==-1||a[y]==-1||a[x]==a[y])continue;\r\n\t\t\tpushline(x,y);\r\n\t\t}\r\n\t}\r\n\tif(topsort()==-1)cout<<\"-1\",exit(0);\r\n\tfor(int i=1;i<=m;i++)cout<<c[i]<<\" \";\r\n\t\r\n\t\r\n\t\r\n\t\r\n}\r\n/*\r\n\u5bf9\u4e8e\u67d0\u4e2a\u8282\u70b9\u6765\u8bb2\uff0c\u5165\u5ea6\u53ea\u6709\u4e00\u4e2a\u5c31\u591f\u4e86\u3002\u5165\u5ea6\u6765\u81ea\u54ea\u4e2a\u70b9\u90fd\u65e0\u6240\u8c13\u7684\uff0c\u56e0\u6b64\u8d2a\u5fc3\u5c31\u597d\u4e86\u3002\r\n\u8003\u8651\u628a\u70b9\u6309\u7167\u5ea6\u4ece\u5c0f\u5230\u5927\u6392 ,\u968f\u4fbf\u627e\u4e00\u4e2a\u8fb9\u7136\u540e\u628a\u5b83\u548c\u5b83\u7684\u53cd\u8fb9\u90fd\u5220\u4e86\u3002 \r\n*/"
}