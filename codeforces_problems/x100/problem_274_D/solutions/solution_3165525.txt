{
    "id": 3165525,
    "contestId": 274,
    "creationTimeSeconds": 1361428524,
    "relativeTimeSeconds": 5424,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "rankalee"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1361423100
    },
    "programmingLanguage": "GNU C++",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 38,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 10956800,
    "source": "#include<iostream>\r\n#include<sstream>\r\n#include<vector>\r\n#include<algorithm>\r\n#include<set>\r\n#include<map>\r\n#include<queue>\r\n#include<complex>\r\n#include<cstdio>\r\n#include<cstdlib>\r\n#include<cstring>\r\n#include<cassert>\r\nusing namespace std;\r\n\r\n#define rep(i,n) for(int i=0;i<(int)n;i++)\r\n#define each(i,c) for(__typeof(c.begin()) i=c.begin();i!=c.end();i++)\r\n#define pb push_back\r\n#define mp make_pair\r\n#define all(c) c.begin(),c.end()\r\n#define dbg(x) cerr<<__LINE__<<\": \"<<#x<<\" = \"<<(x)<<endl\r\n\r\ntypedef vector<int> vi;\r\ntypedef pair<int,int> pi;\r\ntypedef long long ll;\r\nconst int inf=(int)1e9;\r\nconst double EPS=1e-9, INF=1e12;\r\n\r\nbool visit(const vector<vi> &g, int v, vector<int> &order, vector<int> &color) {\r\n  color[v] = 1;\r\n  each(e, g[v]) {\r\n    if (color[*e] == 2) continue;\r\n    if (color[*e] == 1) return false;\r\n    if (!visit(g, *e, order, color)) return false;\r\n  }\r\n  order.push_back(v); color[v] = 2;\r\n  return true;\r\n}\r\nbool topologicalSort(const vector<vi> &g, vector<int> &order) {\r\n  int n = g.size();\r\n  vector<int> color(n);\r\n  rep(u, n) if (!color[u] && !visit(g, u, order, color))\r\n    return false;\r\n  reverse(all(order));\r\n  return true;\r\n}\r\nint n, m;\r\nvector<vi> a, e;\r\n\r\nint main(){\r\n\tcin >> n >> m;\r\n\ta.resize(n);\r\n\te.resize(n * (m + 2));\r\n\tint k = m;\r\n\t\r\n\trep(i, n){\r\n\t\tvector<pi> p;\r\n\t\trep(j, m){\r\n\t\t\tint t;\r\n\t\t\tcin >> t;\r\n\t\t\ta[i].pb(t);\r\n\t\t\tp.pb(mp(t, j));\r\n\t\t}\r\n\t\tsort(all(p));\r\n\t\trep(j, m){\r\n\t\t\tif(p[j].first < 0) continue;\r\n\t\t\tint nxt = lower_bound(all(p), mp(p[j].first + 1, -1)) - p.begin();\r\n\t\t\t\r\n\t\t\twhile(j < nxt){\r\n\t\t\t\te[k].pb(p[j].second);\r\n\t\t\t\te[p[j].second].pb(k + 1);\r\n\t\t\t\tj++;\r\n\t\t\t}\r\n\t\t\tk++;\r\n\t\t\tj--;\r\n\t\t}\r\n\t\tk++;\r\n\t}\r\n\tvi ord;\r\n\tif(!topologicalSort(e, ord)){\r\n\t\tcout << -1 << endl;\r\n\t\treturn 0;\r\n\t}\r\n\trep(i, ord.size()) if(ord[i] < m) cout << ord[i] + 1 << \" \";\r\n\tcout << endl;\r\n\t\r\n\treturn 0;\r\n}\r\n"
}