{
    "id": 17519750,
    "contestId": 274,
    "creationTimeSeconds": 1461664153,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "Na2a"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 2867200,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define pb push_back\r\n#define mp make_pair\r\n\r\n#define f first\r\n#define s second\r\n\r\nusing namespace std;\r\n\r\nconst int N = (int) 1e5 + 7;\r\n\r\nint n, m;\r\nvector<vector<int>> a;\r\n\r\nint order[N];\r\nint color[N];\r\nvector<pair<int, int>> t;\r\n\r\nbool cmp(int x, int y) {\r\n  return color[x] < color[y];\r\n}\r\n\r\nbool check() {\r\n  for (int i = 0; i < n; i++) {\r\n    vector<int> arr;\r\n    for (int j = 0; j < m; j++) {\r\n      int cur = order[j];\r\n      if (a[i][cur] != -1) {\r\n        arr.pb(a[i][cur]);\r\n      }\r\n    }\r\n    for (int j = 0; j + 1 < arr.size(); j++)\r\n      if (arr[j] > arr[j + 1])\r\n        return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nint main() {\r\n  #ifdef LOCAL\r\n  freopen(\"in\", \"r\", stdin);\r\n  #endif // LOCAL\r\n\r\n  scanf(\"%d%d\", &n, &m);\r\n  for (int i = 0; i < m; i++)\r\n    order[i] = i;\r\n\r\n  a.resize(n);\r\n  for (int i = 0; i < n; i++) {\r\n    vector<pair<int, int>> t;\r\n    a[i].resize(m);\r\n    for (int j = 0; j < m; j++) {\r\n      scanf(\"%d\", &a[i][j]);\r\n      if (a[i][j] != -1)\r\n        t.pb(mp(a[i][j], j));\r\n    }\r\n    for (int j = 0; j < m; j++)\r\n      color[order[j]] = 0;\r\n    sort(t.begin(), t.end());\r\n    int pt = 0;\r\n    int c = 0;\r\n    while (pt < t.size()) {\r\n      int len = 0;\r\n      while (pt + len < t.size() && t[pt].f == t[pt + len].f)\r\n        ++len;\r\n      c++;\r\n      for (int j = pt; j < pt + len; j++)\r\n        color[t[j].s] = c;\r\n      pt += len;\r\n    }\r\n    stable_sort(order, order + m, &cmp);\r\n  }\r\n  if (!check()) {\r\n    puts(\"-1\");\r\n    return 0;\r\n  }\r\n  for (int i = 0; i < m; i++)\r\n    printf(\"%d \", order[i] + 1);\r\n  return 0;\r\n}\r\n"
}