{
    "id": 4858658,
    "contestId": 274,
    "creationTimeSeconds": 1382613246,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 19251200,
    "source": "//#pragma comment(linker, \"/STACK:102400000,102400000\")// \u8fd9\u8d27\u53ea\u80fd\u7528C++\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <sstream>\n#include <algorithm>\n#include <cmath>\n#include <map>\n#include <functional>\n#include <queue>\n#include <vector>\n#include <cstdlib>\n#include <string>\n#include <set>\n#include <list>\nusing namespace std;\n\nconst int N=300010;\nconst double eps=1e-8;\nconst int INF=1000000000;\n\n#define LL(x) (x<<1)\n#define RR(x) (x<<1|1)\n#define MID(a,b) ((a+b)>>1)\n\nstruct Node\n{\n    int u, v, next;\n}e[1000000];\nint head[N], cnt;\n\nint a[N], in[N], r[N], mp[N], ans[N];\nint n, m;\n\nvoid add(int u, int v)\n{\n    e[cnt].v=v;e[cnt].next=head[u];head[u]=cnt++;\n    in[v]++;\n}\n\nvoid init()\n{\n    memset(head, -1, sizeof(head));\n    cnt=0;\n\n    memset(in, 0, sizeof(in));\n}\n\nbool cmpr(int i, int j)\n{\n    return a[i]<a[j];\n}\n\nint Hash()\n{\n    for(int i=0;i<=m;i++)\n        r[i]=i;\n    sort(r, r+m+1, cmpr);\n    int K=0;mp[0]=a[r[0]];\n    for(int i=0;i<=m;i++)\n    {\n        if(mp[K]!=a[r[i]])\n            mp[++K]=a[r[i]];\n        a[r[i]]=K;\n    }\n    return K;\n}\n\nbool solve()\n{\n    init();\n    int tot=m;\n    for(int i=1;i<=n;i++)\n    {\n        for(int j=1;j<=m;j++)\n            scanf(\"%d\", &a[j]);\n        a[0]=-1;\n        int K=Hash();\n        for(int j=1;j<=m;j++)\n            if(a[j]>0)\n            {\n                if(a[j]>1)add(tot+a[j]-1, j);\n                if(a[j]<K)add(j, tot+a[j]);\n            }\n        tot+=K-1;\n    }\n    int now=0;\n    queue<int> q;\n    for(int i=1;i<=tot;i++)\n        if(in[i]==0)\n            q.push(i);\n    while(!q.empty())\n    {\n        int u=q.front();q.pop();\n        if(u<=m)\n            ans[++now]=u;\n        for(int i=head[u];i!=-1;i=e[i].next)\n        {\n            int v=e[i].v;\n            in[v]--;\n            if(in[v]==0)\n                q.push(v);\n        }\n    }\n    if(now<m)return false;\n    for(int i=1;i<=m;i++)\n        printf(\"%d \", ans[i]);\n    puts(\"\");\n    return true;\n}\nint main()\n{\n    while(scanf(\"%d%d\", &n, &m)!=EOF)\n        if(!solve())\n            puts(\"-1\");\n    return 0;\n}\n\n\t\t \t\t \t\t  \t\t\t\t\t \t\t \t \t\t"
}