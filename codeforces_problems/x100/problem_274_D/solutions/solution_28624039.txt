{
    "id": 28624039,
    "contestId": 274,
    "creationTimeSeconds": 1500258695,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<iostream>\n#include<algorithm>\nusing namespace std;\nstruct node\n{\n\tint next,to;\n} edge[2000001];\nstruct dian\n{\n\tint x,data;\n} a[100001];\nint h[200002],tot=0,du[200002];\nint heap[200001],pos[200002];\nint ans[100001];\nbool cmp(dian x,dian y) {return x.data<y.data;}\nvoid heapup(int x)\n{\n\tint i;\n\tfor(i=x;i>1;i/=2)\n\t{\n\t\tif(du[heap[i]]>=du[heap[i/2]]) break;\n\t\tswap(heap[i],heap[i/2]);\n\t\tswap(pos[heap[i]],pos[heap[i/2]]);\n\t}\n}\nvoid heapdown()\n{\n\tint i=1,j;\n\twhile(i*2<=heap[0])\n\t{\n\t\tif(i*2==heap[0]||du[heap[i*2]]<=du[heap[i*2+1]]) j=i*2;\n\t\telse j=i*2+1;\n\t\tif(du[heap[i]]<du[heap[j]]) break;\n\t\tswap(heap[i],heap[j]);\n\t\tswap(pos[heap[i]],pos[heap[j]]);\n\t\ti=j;\n\t}\n}\nvoid add(int x,int y) {edge[++tot]=(node){h[x],y};h[x]=tot;}\nvoid modify(int x,int y)\n{\n\tif(y==0)\n\t{\n\t\theap[0]++;\n\t\theap[heap[0]]=x;\n\t\tpos[x]=heap[0];\n\t}\n\theapup(pos[x]);\n}\nvoid del()\n{\n\theap[1]=heap[heap[0]];\n\theap[0]--;\n\theapdown();\n}\nint main()\n{\n\tint n,m,top=0,x,to;\n\tint i,j;\n\t\n\tcin>>n>>m;top=m;\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tfor(j=1;j<=m;j++) {scanf(\"%d\",&a[j].data);a[j].x=j;}\n\t\tsort(a+1,a+m+1,cmp);\n\t\tfor(j=1;j<=m;j++)\n\t\t{\n\t\t\tif(a[j].data==-1) continue;\n\t\t\tif(a[j].data!=a[j-1].data) top++;\n\t\t\tadd(a[j].x,top+1);du[top+1]++;\n\t\t\tadd(top,a[j].x);du[a[j].x]++;\n\t\t}\n\t\ttop++;\n\t}\n\tfor(i=1;i<=top;i++) modify(i,0);\n\tfor(i=1;i<=top;i++)\n\t{\n\t\tx=heap[1];del();\n\t\tif(du[x]!=0) break;\n\t\tif(x<=m) ans[++ans[0]]=x;\n\t\tfor(j=h[x];j;j=edge[j].next)\n\t\t{\n\t\t\tto=edge[j].to;\n\t\t\tdu[to]--;\n\t\t\tif(to<=m+top) modify(to,1);\n\t\t}\n\t}\n\tif(heap[0]==0) for(i=1;i<=m;i++) printf(\"%d \",*(ans+i));\n\telse cout<<-1;\n}\n  \t \t     \t\t \t\t\t\t\t\t \t \t\t \t \t \t\t"
}