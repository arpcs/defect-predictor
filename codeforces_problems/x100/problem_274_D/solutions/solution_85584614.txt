{
    "id": 85584614,
    "contestId": 274,
    "creationTimeSeconds": 1593569993,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "zhouchenyuan001"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 7987200,
    "source": "#include<bits/stdc++.h>\r\n#define N 200005\r\nusing namespace std;\r\nint n,m;\r\nstruct Node{\r\n\tvector<int>num;int id;\r\n\tNode(){num.push_back(0);}\r\n\tvoid init(int x){id=x;}\r\n\tvoid add(int x){num.push_back(x);}\r\n\tbool operator < (const Node &other)const{\r\n\t\tfor(int i=1;i<=n;i++){\r\n\t\t\tif(num[i]==-1||other.num[i]==-1)continue;\r\n\t\t\tif(num[i]<other.num[i])return 1;\r\n\t\t\tif(num[i]>other.num[i])return 0;\r\n\t\t}return 0;\r\n\t}\r\n}lie[N];int nn[N];\r\nint main()\r\n{\r\n//\tfreopen(\"out.out\",\"r\",stdin);\r\n\tscanf(\"%d%d\",&n,&m);\r\n\tfor(int j=1;j<=m;j++)lie[j].init(j);\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tfor(int j=1;j<=m;j++){\r\n\t\t\tint x;scanf(\"%d\",&x);\r\n\t\t\tlie[j].add(x);\r\n\t\t}\r\n\t}sort(lie+1,lie+1+m);\r\n//\tfor(int i=1;i<=m;i++)cout<<lie[i].num.size()<<'\\n';\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tfor(int k=1;k<=n;k++){\r\n\t\t\tif(lie[i].num[k]==-1)continue;\r\n\t\t\tif(nn[k]>lie[i].num[k]){\r\n\t\t\t\tprintf(\"-1\");return 0;\r\n\t\t\t}else nn[k]=lie[i].num[k];\r\n\t\t}\r\n\t}for(int i=1;i<=m;i++)printf(\"%d \",lie[i].id);\r\n\treturn 0;\r\n}"
}