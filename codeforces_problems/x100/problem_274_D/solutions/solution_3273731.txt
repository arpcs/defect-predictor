{
    "id": 3273731,
    "contestId": 274,
    "creationTimeSeconds": 1362918211,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "pawelwa111"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++0x",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 6451200,
    "source": "#include<cstdio>\n#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<queue>\n#include<set>\n#include<map>\n\nusing namespace std;\n\nvector<vector<pair<int, int> > > t;\nvector<int> pos[100010];\nint ilzl[100010];\nint wsk[100010];\nqueue<int> q;\nint m;\nint hmany[100010];\n\nvoid throw_from(int i) {\n    hmany[i] --;\n    if (hmany[i] == 0) {\n        int com = wsk[i];\n        int j = com;\n        while (j <= m && t[i][j].first == t[i][com].first)\n            j++;\n        if (j > m || t[i][j].first == 1000000001)\n            return;\n        wsk[i] = j;\n        com = j;\n        while (com <= m && t[i][com].first == t[i][j].first) {\n            ilzl[t[i][com].second] --;\n            if (ilzl[t[i][com].second] == 0)\n                q.push(t[i][com].second);\n            com ++;\n        }\n        hmany[i] = com - j;\n    }\n}\n\nvoid initi(int i) {\n    wsk[i] = 1;\n    if (t[i][1].first == 1000000001)\n        return;\n    int j = 1;\n    while (j <= m && t[i][j].first == t[i][1].first) {\n        ilzl[t[i][j].second]--;\n        j++;\n    }\n    hmany[i] = j - 1;\n}\n\nint main() {\n    int n;\n    scanf(\"%d%d\", &n, &m);\n    t.resize(n+1);\n    for (int i = 1; i <= n; i ++)\n        t[i].resize(m+1);\n    for (int i = 1; i <= n; i ++) {\n        for (int j = 1; j <= m; j ++) {\n            t[i][j].second = j;\n            scanf(\"%d\", &t[i][j].first);\n            if (t[i][j].first == -1)\n                t[i][j].first = 1000000001;\n        }\n        sort(t[i].begin() + 1, t[i].end());\n        for (int j = 1; j <= m && t[i][j].first != 1000000001; j ++) {\n            ilzl[t[i][j].second] ++;\n            pos[t[i][j].second].push_back(i);\n        }\n    }\n    for (int i = 1; i <= n; i ++)\n        initi(i);\n    vector<int> sol;\n    for (int i = 1; i <= m; i ++)\n        if (ilzl[i] == 0)\n            q.push(i);\n    while(!q.empty()) {\n        int to = q.front();\n        q.pop();\n        for (auto it = pos[to].begin(); it != pos[to].end(); it ++)\n            throw_from(*it);\n        sol.push_back(to);\n    }\n    if (sol.size() != m)\n        printf(\"-1\");\n    else\n        for (auto it = sol.begin(); it != sol.end(); it ++)\n            printf(\"%d \", *it);\n    printf(\"\\n\");\n}\n"
}