{
    "id": 85615935,
    "contestId": 274,
    "creationTimeSeconds": 1593602368,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "Schwarzkopf_Henkal"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 1902,
    "memoryConsumedBytes": 9216000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nint n,m,top,tot,ans[100005],in[200005],rtx;\r\nint col;\r\nstruct column{\r\n    vector<int>a;\r\n    int id;\r\n    friend bool operator<(column X,column Y){\r\n        return X.a[col]<Y.a[col];\r\n    }\r\n}empty;//\u7eb5\u5217\u7684\u6a2a\u3002\r\nvector<column>b;\r\nvector<int>to[200005];\r\nvoid toposort(){\r\n    queue<int>que;\r\n    for(int i=0;i<=top;i++)\r\n        if(in[i]==0){\r\n            que.push(i);\r\n            if(i<m)\r\n                ans[++rtx]=i;\r\n        }\r\n    while(!que.empty()){\r\n        int cur=que.front();\r\n        que.pop();\r\n        tot++;\r\n        for(int i=0;i<to[cur].size();i++){\r\n            in[to[cur][i]]--;\r\n            if(in[to[cur][i]]==0){\r\n                que.push(to[cur][i]);\r\n                if(to[cur][i]<m)\r\n                    ans[++rtx]=to[cur][i];\r\n            }\r\n        }\r\n    }\r\n}\r\nint main(){\r\n    cin>>n>>m;\r\n    top=m-1;\r\n    for(int i=1;i<=m;i++){\r\n        b.push_back(empty);\r\n        b[i-1].id=i-1;\r\n    }\r\n    for(int i=1,x;i<=n;i++){\r\n        for(int j=0;j<m;j++){\r\n            cin>>x;\r\n            b[j].a.push_back(x);\r\n        }\r\n    }\r\n    for(int i=0;i<n;i++){\r\n        col=i;\r\n        sort(b.begin(),b.end());\r\n        // for(int j=0;j<n;j++){\r\n        //     for(int k=0;k<m;k++)\r\n        //         cout<<b[k].a[j]<<' ';\r\n        //     cout<<'\\n';\r\n        // }\r\n        vector<pair<int,int> >con;\r\n        for(int j=0;j<m;j++)\r\n            if(b[j].a[i]!=-1){\r\n                int l=j;\r\n                while(j<m-1&&b[j+1].a[i]==b[j].a[i])\r\n                    j++;\r\n                con.push_back(make_pair(l,j));\r\n            }\r\n        // for(int j=0;j<con.size();j++)\r\n        //     cout<<con[j].first<<\" \"<<con[j].first<<'\\n';\r\n        if(con.size()>1)//\u5728\u5f00\u59cb\u65f6\uff0c\u62e5\u67090\u4e2a\u865a\u62df\u8282\u70b9\u3002\r\n            for(int j=0;j<con.size();j++){\r\n                if(j==0)\r\n                    top++;\r\n                if(j==con.size()-1){\r\n                    for(int k=con[j].first;k<=con[j].second;k++){\r\n                        in[b[k].id]++;\r\n                        to[top].push_back(b[k].id);\r\n                    }\r\n                }else {\r\n                    top++;\r\n                    for(int k=con[j].first;k<=con[j].second;k++){\r\n                        in[top]++;\r\n                        in[b[k].id]++;\r\n                        to[b[k].id].push_back(top);//\u5f53\u524d\u5757\r\n                        to[top-1].push_back(b[k].id);\r\n                    }\r\n                }\r\n            }\r\n    }//\u603b\u5171\u7684\u8282\u70b9\u6570\u91cf\u662ftop\u4e2a\u3002\u4ece0\u5f00\u59cb\u3002\r\n    // for(int i=0;i<=top;i++)\r\n    //     cout<<in[i]<<\" \";\r\n    // cout<<'\\n';\r\n    // for(int i=0;i<=top;i++){\r\n    //     for(int j=0;j<to[i].size();j++)\r\n    //         cout<<to[i][j]<<\" \";\r\n    //     cout<<'\\n';\r\n    // }\r\n    toposort();\r\n    if(tot<top)\r\n        cout<<-1;\r\n    else for(int i=1;i<=m;i++)\r\n        cout<<ans[i]+1<<\" \";\r\n}\r\n/*\r\n\u865a\u62df\u8282\u70b9\u662f\u4e00\u4e2a\u771f\u5b9e\u5b58\u5728\u7684\u8282\u70b9\u2026\u2026\u5e76\u975e\u542b\u6709\u51e0\u4e2a\u70b9\u7684\u96c6\u5408\u4e00\u7c7b\u7684\u4e1c\u897f\u3002\r\nThat was not a video game!\r\n\u6bcf\u4e2a\u5217\u662f\u4e00\u4e2a\u8282\u70b9\uff0c\u6b64\u5916\u8fd8\u6709\u4e00\u4e9b\u865a\u62df\u8282\u70b9\u3002\r\n*/"
}