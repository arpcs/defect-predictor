{
    "id": 3163477,
    "contestId": 274,
    "creationTimeSeconds": 1361389000,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "kawatea"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 8601600,
    "source": "#include <cstdio>\r\n#include <vector>\r\n#include <queue>\r\n#include <set>\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\n\r\nint a[100000];\r\nvector <int> v[100000];\r\nvector <int> w;\r\nset <pair<int, int> > s[100000];\r\n\r\nint main()\r\n{\r\n    int n, m, i, j, k;\r\n    queue <int> q;\r\n    set <pair<int, int> >::iterator it;\r\n    \r\n    scanf(\"%d %d\", &n, &m);\r\n    \r\n    for (i = 0; i < n; i++) {\r\n        for (j = 0; j < m; j++) {\r\n            int x;\r\n            \r\n            scanf(\"%d\", &x);\r\n            \r\n            v[i].push_back(x);\r\n            \r\n            if (x != -1) s[i].insert(make_pair(x, j));\r\n        }\r\n    }\r\n    \r\n    for (i = 0; i < n; i++) {\r\n        int x;\r\n        \r\n        if (s[i].empty()) continue;\r\n        \r\n        x = s[i].begin()->first;\r\n        \r\n        for (j = 0; j < m; j++) {\r\n            if (v[i][j] == -1) continue;\r\n            \r\n            if (v[i][j] != x) a[j]++;\r\n        }\r\n    }\r\n    \r\n    for (i = 0; i < m; i++) {\r\n        if (a[i] == 0) q.push(i);\r\n    }\r\n    \r\n    while (!q.empty()) {\r\n        int x = q.front();\r\n        \r\n        q.pop();\r\n        \r\n        w.push_back(x);\r\n        \r\n        for (i = 0; i < n; i++) {\r\n            int y;\r\n            \r\n            if (v[i][x] == -1) continue;\r\n            \r\n            s[i].erase(make_pair(v[i][x], x));\r\n            \r\n            if (s[i].empty()) continue;\r\n            \r\n            y = s[i].begin()->first;\r\n            \r\n            if (y == v[i][x]) continue;\r\n            \r\n            for (it = s[i].begin(); it != s[i].end(); it++) {\r\n                if (it->first != y) break;\r\n                \r\n                a[it->second]--;\r\n                \r\n                if (a[it->second] == 0) q.push(it->second);\r\n            }\r\n        }\r\n    }\r\n    \r\n    if (w.size() < m) {\r\n        puts(\"-1\");\r\n        \r\n        return 0;\r\n    }\r\n    \r\n    for (i = 0; i < m; i++) {\r\n        if (i > 0) putchar(' ');\r\n        \r\n        printf(\"%d\", w[i] + 1);\r\n    }\r\n    \r\n    puts(\"\");\r\n    \r\n    return 0;\r\n}\r\n"
}