{
    "id": 40478378,
    "contestId": 274,
    "creationTimeSeconds": 1531832200,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "wei_cpp"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 251596800,
    "source": "/*\r\nID: wei_cpp1\r\nTASK: test\r\nLANG: C++\r\n*/\r\n#include <cfloat>\r\n#include <cmath>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <algorithm>\r\n#include <fstream>\r\n#include <iostream>\r\n#include <map>\r\n#include <queue>\r\n#include <set>\r\n#include <stack>\r\n#include <string>\r\n#include <vector>\r\n#define pb push_back\r\n#define mp make_pair\r\n#define ed cout<<endl;\r\n#define F first\r\n#define S second\r\n#define ll long long\r\n#define vi vector<int>\r\n#define pii pair<int,int>\r\nusing namespace std;\r\n#define INF 1LL<<60\r\nstruct edge{\r\n    int s,t,cap,next;\r\n}e[5010];\r\nint head[5010],cnt;\r\nvoid addedge(int s,int t,int cap)\r\n{\r\n    e[cnt].s=s;e[cnt].t=t;e[cnt].cap=cap;e[cnt].next=head[s];head[s]=cnt++;\r\n}\r\nint n,m,k,u,v,w;\r\nint degree[5010],ans[5010];\r\nlong long f[5010][5010];\r\nshort pre[5010][5010];\r\nqueue<int> q;\r\nint main()\r\n{\r\n    scanf(\"%d%d%d\",&n,&m,&k);\r\n    memset(head,0xff,sizeof(head));\r\n    cnt=0;\r\n    for (int i=1;i<=m;i++)\r\n    {\r\n        scanf(\"%d%d%d\",&u,&v,&w);\r\n        addedge(u,v,w);\r\n        degree[v]++;\r\n    }\r\n    for (int i=1;i<=n;i++)\r\n        if (!degree[i])\r\n            q.push(i);\r\n    for (int i=1;i<=n;i++)\r\n        for (int j=1;j<=n;j++)\r\n            f[i][j]=INF;\r\n    f[1][1]=0;\r\n    while (!q.empty())\r\n    {\r\n        int tmp=q.front();\r\n        q.pop();\r\n        for (int i=head[tmp];i!=-1;i=e[i].next)\r\n        {\r\n            degree[e[i].t]--;\r\n            for (int j=2;j<=n;j++)\r\n                if (f[tmp][j-1]+e[i].cap<f[e[i].t][j])\r\n                {\r\n                    f[e[i].t][j]=f[tmp][j-1]+e[i].cap;\r\n                    pre[e[i].t][j]=tmp;\r\n                }\r\n            if (!degree[e[i].t])\r\n                q.push(e[i].t);\r\n        }\r\n    }\r\n    for (int i=n;i>=2;i--)\r\n        if (f[n][i]<=k)\r\n        {\r\n            printf(\"%d\\n\",i);\r\n            int tmp=n;\r\n            for (int j=i;j>=1;j--)\r\n            {\r\n                ans[j]=tmp;\r\n                tmp=pre[tmp][j];\r\n            }\r\n            for (int j=1;j<=i;j++)\r\n                printf(\"%d%c\",ans[j],\" \\n\"[j==i]);\r\n            break;\r\n        }\r\n    return 0;\r\n}\r\n"
}