{
    "id": 80603352,
    "contestId": 274,
    "creationTimeSeconds": 1589806274,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "Radman_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 248,
    "memoryConsumedBytes": 35942400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst ll maxn = 5e5 + 100;\r\nconst ll mod = 1e9 + 7;\r\nconst ll inf = 1e18;\r\n \r\n#define fast_io ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\r\n#define pb push_back\r\n#define pll pair<ll, ll>\r\n#define F first\r\n#define S second\r\n \r\nll n, m, t, l, r, b[maxn];\r\nbool vis[maxn];\r\npll a[maxn];\r\nvector<ll> g[maxn], rg[maxn], vec;\r\n \r\nvoid dfs1(ll v){\r\n\tvis[v] = 1;\r\n\tfor(ll i = 0; i < g[v].size(); i++){\r\n\t\tif(!vis[g[v][i]]) dfs1(g[v][i]);\r\n\t}\r\n\tvec.pb(v);\r\n\treturn;\r\n}\r\n \r\nint main(){\r\n\tll v, u;\r\n\tfast_io;\r\n\tcin >> n >> m;\r\n\tt = m + 1;\r\n\twhile(n--){\r\n\t\tfor(ll i = 0; i < m; i++){\r\n\t\t\tcin >> a[i].F;\r\n\t\t\ta[i].S = i + 1;\r\n\t\t}\r\n\t\tsort(a, a + m);\r\n\t\tr = t++;\r\n\t\tfor(ll i = 0; i < m; i++){\r\n\t\t\tif(a[i].F == -1) continue;\r\n\t\t\tif(i == 0 || a[i].F != a[i - 1].F){\r\n\t\t\t\tl = r;\r\n\t\t\t\tr = t++;\r\n\t\t\t}\r\n\t\t\tg[l].pb(a[i].S);\r\n\t\t\trg[a[i].S].pb(l);\r\n\t\t\tg[a[i].S].pb(r);\r\n\t\t\trg[r].pb(a[i].S);\r\n\t\t}\r\n\t}\r\n\tfor(ll i = 1; i < t; i++){\r\n\t\tif(!vis[i]) dfs1(i);\r\n\t}\r\n\tfor(ll i = 0; i < vec.size(); i++){\r\n\t\tb[vec[i]] = i;\r\n\t}\r\n\tfor(ll i = 0; i < vec.size(); i++){\r\n\t\tv = vec[i];\r\n\t\tfor(ll j = 0; j < g[v].size(); j++){\r\n\t\t\tu = g[v][j];\r\n\t\t\tif(b[u] > b[v]){\r\n\t\t\t\tcout << \"-1\";\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor(ll i = vec.size() - 1; i--;){\r\n\t\tif(vec[i] <= m) cout << vec[i] << \" \";\r\n\t}\r\n\treturn 0;\r\n}\r\n/*\r\n#include <radman/roderc++.h>\r\n                     ....._____\r\n                 .~~~~~////////\\\\                                                                                           ...\r\n              .:::::////////////\\\\                                          ....::////////..                              (/\\\\\\\\...\r\n           .::::://////   \\\\\\\\///\\\\              .:::://                ..:::::///////////////.                           \\\\\\\\\\$$$$$$\r\n         \\\\\\\\\\//////      \\\\\\\\///\\\\           //\\\\\\//////             \\\\\\\\\\////////////////////.                           \"\"\\\\$$$$$$$\r\n         \\\\\\\\\\////         \\\\\\\\////         |||||////////.            \\\\\\\\\\/////     ~~~~~//////          ...                  \"\\$$$$\r\n         \\\\\\\\\\//\\         ////|||/          \\\\\\\\\\/////////            \\\\\\\\\\//\\       ~~~~~//////        (/\\\\\\\\...                   .\r\n         \\\\\\\\\\//\\        ////|||/          |||||////*\\\\///.           \\\\\\\\\\//\\       ~~~~~//////        \\\\\\\\\\$$$$$$                 .@@@@@.\r\n         \\\\\\\\\\//\\       ////|||/           \\\\\\\\\\///|\\\\\\////           \\\\\\\\\\//\\       ~~~~~//////         \"\"\\\\$$$$$$$               @@@@////\\\r\n         \\\\\\\\\\//\\ ____---/|||/            |||||///|\\\\\\\\\\///.          \\\\\\\\\\//\\       ~~~~~//////             \"\\$$$$                @@@@\\///\\\r\n         \\\\\\\\\\//\\--|||||||_-'             \\\\\\\\\\///|\\\\\\\\\\////          \\\\\\\\\\//\\       ~~~~~//////                                  ,@@@@|///|\r\n         \\\\\\\\\\//\\|||||_\"-\\\\\\\\\\           |||||///|  ~~~~~///.         \\\\\\\\\\//\\      ~~~~~//////     .@@@@.                    /@@@@@|/////\r\n         \\\\\\\\\\//\\///\"\"\"\\\\\\\\\\\\\\\\          \\\\\\\\\\///|~~~~[[[////.        \\\\\\\\\\//\\     ~~~~~//////      @@@@@@@@                ..@@@@@.//////\r\n         \\\\\\\\\\//\\    \\\"\"\"\\\\\\\\\\\\\\        |||||///|~~[[[[[\"\\////.       \\\\\\\\\\//\\    ~~~~~//////      '@@@@/////\\       .:;@@@@@@@..///////\"\r\n         \\\\\\\\\\//\\      \\\"\"\"\\\\\\\\\\\\       \\\\\\\\\\///|[[[[*\\\\\\\\\\////.      \\\\\\\\\\//\\   ~~~~~//////        *@@@\\//////\\@@@@@@@@..//////////\"\r\n         \\\\\\\\\\//\\       \\:::\\\\\\\\/      |||||///|[[[*   \\\\\\\\\\\\///      \\\\\\\\\\//\\~~~~~///////'            *@@\\/////////////////////\"\r\n         \\\\\\\\\\//\\        \\___\\\\/       \\\\\\\\\\///|*       \\\\\\\\\\/\"       \\\\\\\\\\//\\~~////////'                 **\"///////////\"\"\"\r\n         \\\\\\\\\\//\\                     |||||///|                       \\\\\\\\\\//\\///////\"\r\n         \\\\\\\\\\//\\                     \\\\\\\\\\///|                       \\\\\\\\\\//\\////\"\r\n         \\\\\\\\\\///                    |||||////|                       \\\\\\\\\\////\"\r\n         \\\\\\\\\\/\"                     \\\\\\\\\\///*                        \\\\\\\\\\/\"\r\n                                     \"\"\"\"\"*\r\n*/\r\n"
}