{
    "id": 3360158,
    "contestId": 274,
    "creationTimeSeconds": 1363772818,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "takapt"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 12390400,
    "source": "#include <cstdio>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <cmath>\r\n#include <climits>\r\n#include <cfloat>\r\n#include <ctime>\r\n#include <cassert>\r\n#include <map>\r\n#include <utility>\r\n#include <set>\r\n#include <iostream>\r\n#include <memory>\r\n#include <string>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <functional>\r\n#include <sstream>\r\n#include <complex>\r\n#include <stack>\r\n#include <queue>\r\n#include <numeric>\r\n#include <list>\r\n#include <iomanip>\r\n#include <fstream>\r\n#include <bitset>\r\n   \r\nusing namespace std;\r\n   \r\n \r\n#define rep(i, n) for (int i = 0; i < (int)(n); ++i)\r\n#define foreach(it, c) for (__typeof__((c).begin()) it=(c).begin(); it != (c).end(); ++it)\r\n#define rforeach(it, c) for (__typeof__((c).rbegin()) it=(c).rbegin(); it != (c).rend(); ++it)\r\n#define all(c) (c).begin(), (c).end()\r\n#define rall(c) (c).rbegin(), (c).rend()\r\n#define CL(arr, val) memset(arr, val, sizeof(arr))\r\n#define COPY(dest, src) memcpy(dest, src, sizeof(dest))\r\n#define ten(n) ((long long)(1e##n))\r\n#define bin(n) (1ull << (n))\r\n#define erep(i, n) for (int i = 0; i <= (int)(n); ++i)\r\n#define revrep(i, n) for (int i = (n); i >= 0; --i)\r\n#define pb push_back\r\n\r\ntemplate <class T> void chmax(T& a, const T& b) { a = max(a, b); }\r\ntemplate <class T> void chmin(T& a, const T& b) { a = min(a, b); }\r\n\r\ntemplate <class T> void uniq(T& c) { sort(c.begin(), c.end()); c.erase(unique(c.begin(), c.end()), c.end()); }\r\n \r\ntemplate <class T> string to_s(const T& a) { ostringstream os; os << a; return os.str(); }\r\ntemplate <class T> T to_T(const string& s) { istringstream is(s); T res; is >> res; return res; }\r\n  \r\ntemplate <class T, class U> ostream& operator<<(ostream& os, pair<T, U>& p) { os << \"( \" << p.first << \", \" << p.second << \" )\"; return os; }\r\n  \r\ntemplate <class T> void print(T a, int n, const string& deli = \" \", int br = 1) { for (int i = 0; i < n; ++i) { cout << a[i]; if (i + 1 != n) cout << deli; } while (br--) cout << endl; }\r\ntemplate <class T> void print(const T& c, const string& deli = \" \", int br = 1) { foreach (it, c) { cout << *it; if (++it != c.end()) cout << deli;--it; } while (br--) cout << endl; }\r\ntemplate <class T> void print2d(T a, int w, int h, int width = -1, int br = 1) { for (int i = 0; i < h; ++i) { for (int j = 0; j < w; ++j) {    if (width != -1) cout.width(width); cout << a[i][j] << ' '; } cout << endl; } while (br--) cout << endl; }\r\n   \r\ntemplate <class T> void input(T& a, int n) { for (int i = 0; i < n; ++i) cin >> a[i]; }\r\ntemplate <class T> void input(T* a, int n) { for (int i = 0; i < n; ++i) cin >> a[i]; }\r\n\r\nvoid fix_pre(int n) { cout.setf(ios::fixed, ios::floatfield); cout.precision(10); }\r\nvoid fast_io() { cin.tie(0); ios::sync_with_stdio(false); }\r\n#define trace(x) (cout << #x << \": \" << (x) << endl)\r\n \r\nbool in_rect(int x, int y, int w, int h) { return 0 <= x && x < w && 0 <= y && y < h; }\r\n\r\n\r\ntypedef long long ll;\r\ntypedef pair<int, int> pint;\r\n \r\n// y(v): v>^<  y(^): ^>v<\r\nconst int dx[] = { 0, 1, 0, -1 };\r\nconst int dy[] = { 1, 0, -1, 0 };\r\n\r\nconst double PI = acos(-1.0);\r\n\r\n\r\n// \u30c8\u30dd\u30ed\u30b8\u30ab\u30eb\u30bd\u30fc\u30c8\r\n// O(V + E)\r\nbool topological_sort(const vector<vector<int> >& g, vector<int>& order)\r\n{\r\n    const int n = g.size();\r\n    order.clear();\r\n    // order.reserve(n);\r\n\r\n    vector<int> indegree(n);\r\n    for (int i = 0; i < n; ++i)\r\n        for (int j = 0; j < (int)g[i].size(); ++j)\r\n            ++indegree[g[i][j]];\r\n    \r\n    queue<int> q;\r\n    for (int i = 0; i < n; ++i)\r\n        if (indegree[i] == 0)\r\n            q.push(i);\r\n\r\n    while (!q.empty())\r\n    {\r\n        int v = q.front();\r\n        q.pop();\r\n\r\n        order.push_back(v);\r\n\r\n        for (int i = 0; i < (int)g[v].size(); ++i)\r\n            if (--indegree[g[v][i]] == 0)\r\n                q.push(g[v][i]);\r\n    }\r\n\r\n    return (int)order.size() == n;\r\n}\r\n\r\nint main()\r\n{\r\n    int n, m;\r\n    cin >> n >> m;\r\n    vector<vector<int> > a(n, vector<int>(m));\r\n    rep(i, n)\r\n        input(a[i], m);\r\n\r\n    vector<pint> v;\r\n    vector<vector<int> > g(3 * m * n);\r\n    int p = m;\r\n    rep(y, n)\r\n    {\r\n        v.clear();\r\n        rep(x, m)\r\n            if (a[y][x] != -1)\r\n                v.pb(pint(a[y][x], x));\r\n        sort(all(v));\r\n\r\n        if (v.size() >= 2)\r\n        {\r\n            int next = p++;\r\n            int prev = p++;\r\n            for (int i = v.size() - 1; i >= 0; )\r\n            {\r\n                int j;\r\n                for (j = i; j >= 0 && v[j].first == v[i].first; --j)\r\n                {\r\n                    g[prev].pb(v[j].second);\r\n                    g[v[j].second].pb(next);\r\n                }\r\n                i = j;\r\n                next = prev;\r\n                prev = p++;\r\n            }\r\n        }\r\n    }\r\n\r\n    vector<int> order;\r\n    if (!topological_sort(g, order))\r\n        cout << -1 << endl;\r\n    else\r\n    {\r\n        vector<int> res;\r\n        rep(i, order.size())\r\n            if (order[i] < m)\r\n                res.pb(order[i] + 1);\r\n        print(res);\r\n    }\r\n}\r\n"
}