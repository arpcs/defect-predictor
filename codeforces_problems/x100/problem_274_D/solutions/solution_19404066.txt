{
    "id": 19404066,
    "contestId": 274,
    "creationTimeSeconds": 1469452001,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "diamond_duke"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 154,
    "memoryConsumedBytes": 11264000,
    "source": "#include <algorithm>\r\n#include <iostream>\r\n#include <cstdio>\r\n#include <vector>\r\n#include <stack>\r\n#define pb push_back\r\nusing namespace std; \r\nint pa[102400], cnt[102400], val[102400], in_deg[102400]; \r\nvector<vector<int> > arr, sorted_arr, orig; \r\nstack<int> st; \r\nint main()\r\n{\r\n\t// freopen(\"LovelyMatrix.in\", \"r\", stdin); \r\n\tvector<int> ans; \r\n\tint n, m; \r\n\tscanf(\"%d%d\", &n, &m);\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\tvector<int> tmp, tmp2; \r\n\t\tfor (int j = 0; j < m; j++)\r\n\t\t{\r\n\t\t\t// cout << j << endl; \r\n\t\t\ttmp2.pb(-1); \r\n\t\t\tint x; \r\n\t\t\tscanf(\"%d\", &x); \r\n\t\t\ttmp.pb(x); \r\n\t\t}\r\n\t\torig.pb(tmp2); \r\n\t\tarr.pb(tmp); \r\n\t\tsorted_arr.pb(tmp); \r\n\t\tsort(sorted_arr[i].begin(), sorted_arr[i].end()); \r\n\t\tfor (int j = 0; j < m; j++)\r\n\t\t{\r\n\t\t\tint l = -1, r = m; \r\n\t\t\twhile (l + 1 < r)\r\n\t\t\t{\r\n\t\t\t\tint mid = l + r >> 1; \r\n\t\t\t\tif (sorted_arr[i][mid] > arr[i][j] || (sorted_arr[i][mid] == arr[i][j] && -1 == orig[i][mid]))\r\n\t\t\t\t\tr = mid; \r\n\t\t\t\telse\r\n\t\t\t\t\tl = mid; \r\n\t\t\t}\r\n\t\t\torig[i][r] = j; \r\n\t\t}\r\n\t\tpa[i] = 0;\r\n\t\twhile (pa[i] < m && -1 == sorted_arr[i][pa[i]])\r\n\t\t\tpa[i]++; \r\n\t\tif (pa[i] < m)\r\n\t\t{\r\n\t\t\tval[i] = sorted_arr[i][pa[i]]; \r\n\t\t\twhile (pa[i] < m && sorted_arr[i][pa[i]] == val[i])\r\n\t\t\t{\r\n\t\t\t\tpa[i]++; \r\n\t\t\t\tcnt[i]++; \r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t\tval[i] = 0x3FFFFFFF; \r\n\t}\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\tfor (int j = 0; j < m; j++)\r\n\t\t{\r\n\t\t\tif (arr[i][j] > val[i])\r\n\t\t\t\tin_deg[j]++; \r\n\t\t}\r\n\t}\r\n\tfor (int i = 0; i < m; i++)\r\n\t{\r\n\t\tif (!in_deg[i])\r\n\t\t\tst.push(i); \r\n\t}\r\n\tfor (int x = 0; x < m; x++)\r\n\t{\r\n\t\tif (st.empty())\r\n\t\t{\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t\treturn 0; \r\n\t\t}\r\n\t\tint u = st.top(); \r\n\t\tst.pop();\r\n\t\tans.pb(u); \r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tif (-1 == arr[i][u] || pa[i] >= m)\r\n\t\t\t\tcontinue; \r\n\t\t\tcnt[i]--; \r\n\t\t\tif (cnt[i])\r\n\t\t\t\tcontinue; \r\n\t\t\tval[i] = sorted_arr[i][pa[i]]; \r\n\t\t\twhile (pa[i] < m && sorted_arr[i][pa[i]] == val[i])\r\n\t\t\t{\r\n\t\t\t\tin_deg[orig[i][pa[i]]]--; \r\n\t\t\t\tif (!in_deg[orig[i][pa[i]]])\r\n\t\t\t\t\tst.push(orig[i][pa[i]]); \r\n\t\t\t\tpa[i]++; \r\n\t\t\t\tcnt[i]++; \r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor (int i = 0; i < m; i++)\r\n\t\tprintf(\"%d%c\", ans[i] + 1, \" \\n\"[i + 1 == m]);\r\n\treturn 0; \r\n}\r\n"
}