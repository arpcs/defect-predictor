{
    "id": 143855367,
    "contestId": 274,
    "creationTimeSeconds": 1643015153,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "Ryto"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 6451200,
    "source": "#define taskname \"test\"\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define sz(x) (int)x.size()\r\n#define fi first\r\n#define se second\r\n\r\ntypedef long long lli;\r\ntypedef pair<int, int> pii;\r\n\r\nint n, m;\r\nvector<vector<int>> a;\r\n\r\nvector<vector<int>> gr;\r\nvector<int> ord;\r\n\r\nvector<vector<int>> cols;\r\n\r\nvector<bool> vis;\r\n\r\nvector<int> vertices;\r\n\r\nvoid read_input() {\r\n    cin >> n >> m;\r\n    a.assign(n, vector<int>(m));\r\n    for(int i = 0; i < n; ++i) {\r\n        for(int j = 0; j < m; ++j) {\r\n            cin >> a[i][j];\r\n        }\r\n    }\r\n}\r\n\r\nvoid dfs(int u) {\r\n    vis[u] = true;\r\n    for(auto&v: gr[u]) {\r\n        if(!vis[v]) dfs(v);\r\n    }\r\n    vertices.push_back(u);\r\n}\r\n\r\nvoid solve() {\r\n    gr.assign(m, vector<int>());\r\n    ord.resize(m);\r\n    for(int i = 0; i < m; ++i) ord[i] = i;\r\n    for(int i = 0; i < n; ++i) {\r\n        cols.clear();\r\n        sort(ord.begin(), ord.end(), [&](int j, int k) {\r\n                return a[i][j] < a[i][k];\r\n             });\r\n        for(int j = 0; j < m; ) {\r\n            int k = j + 1;\r\n            while(k < m && a[i][ord[k]] == a[i][ord[j]]) {\r\n                ++k;\r\n            }\r\n            vector<int> col;\r\n            for(; j < k; ++j) {\r\n                if(a[i][ord[j]] != -1)\r\n                    col.push_back(ord[j]);\r\n            }\r\n            cols.push_back(col);\r\n        }\r\n        for(int i = 1; i < sz(cols); ++i) {\r\n            int x = sz(gr);\r\n            gr.push_back(vector<int>());\r\n            for(auto&u: cols[i - 1]) {\r\n                gr[u].push_back(x);\r\n            }\r\n            for(auto&v: cols[i]) {\r\n                gr[x].push_back(v);\r\n            }\r\n        }\r\n    }\r\n\r\n    vis.assign(sz(gr), false);\r\n    for(int u = 0; u < sz(gr); ++u) {\r\n        if(!vis[u]) dfs(u);\r\n    }\r\n\r\n    reverse(vertices.begin(), vertices.end());\r\n    fill(vis.begin(), vis.end(), false);\r\n    vector<int> ans;\r\n    for(auto&u: vertices) {\r\n        if(u < m) ans.push_back(u);\r\n        vis[u] = true;\r\n        for(auto&v: gr[u]) {\r\n            if(vis[v]) {\r\n                cout << \"-1\\n\";\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    for(auto&c: ans) cout << c + 1 << ' ';\r\n    cout << '\\n';\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n\r\n    read_input();\r\n    solve();\r\n\r\n}\r\n"
}