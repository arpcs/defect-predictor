{
    "id": 55550126,
    "contestId": 274,
    "creationTimeSeconds": 1560493754,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "Abhi1998"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 154,
    "memoryConsumedBytes": 42496000,
    "source": "/* ****TCIITB**** */\r\n\r\n#include<bits/stdc++.h>\r\n#define io          ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0); \r\n#define ll          long long\r\n#define pb          push_back\r\n#define\tendl\t\t'\\n'\r\n#define pii         pair<ll int,ll int>\r\n#define vi          vector<ll int>\r\n#define all(a)      (a).begin(),(a).end()\r\n#define F           first\r\n#define S           second\r\n#define sz(x)       (ll int)x.size()\r\n#define hell        1000000007\r\n#define rep(i,a,b)\tfor(ll int i=a;i<b;i++)\r\n#define lbnd        lower_bound\r\n#define ubnd        upper_bound\r\n#define bs          binary_search\r\n#define mp          make_pair\r\n#define time        cerr << \"\\nTime elapsed: \" << 1000 * clock() / CLOCKS_PER_SEC << \"ms\\n\";\r\nusing namespace std;\r\n\r\n#define N  2000007\r\nll n,m;\r\nstd::vector<ll> adj[N];\r\nll cnt=0,curr;\r\nvi in(N,0),order;\r\nqueue<ll> nextnode;\r\n\r\nvoid topsort()\r\n{\r\n\trep(i,1,curr+1)\r\n\tif(!in[i])\t\t\t\t\t// indegree of current node telling no. of predeccesors\r\n\t\tnextnode.push(i);\r\n\twhile(!nextnode.empty())\t// using DFS\r\n\t{\r\n\t\tll cur=nextnode.front();\r\n\t\tnextnode.pop();\r\n\t\tif(cur<=m)\r\n\t\t\torder.pb(cur);\t\t\t// order of vertices occuring through dfs\r\n\t\tcnt++;\r\n\t\tfor(auto i:adj[cur])\r\n\t\t{\r\n\t\t\tin[i]--;\r\n\t\t\tif(!in[i])\r\n\t\t\t\tnextnode.push(i);\r\n\t\t}\r\n\t}\r\n\tif(cnt<m) //Failed\r\n\t{\r\n\t\tcout<<\"-1\";\r\n\t\texit(0);\r\n\t}\r\n}\r\nint main()\r\n{\r\n\t\r\n\tio\r\n\tcin>>n>>m;\r\n\tcurr=m;\r\n\trep(i,0,n)\r\n\t{\r\n\t\tstd::vector<pii> tmp;\r\n\r\n\t\trep(j,0,m)\r\n\t\t{\r\n\t\t\tll x;\r\n\t\t\tcin>>x;\r\n\t\t\tif(x!=-1)\r\n\t\t\t\ttmp.pb({x,j+1});\r\n\t\t}\r\n\t\tif(tmp.size()==0)\r\n\t\t\tcontinue;\r\n\t\tsort(all(tmp));\r\n\t\tll prev=-1;\r\n\t\tll t1=(curr)+1;\r\n\t\trep(j,0,tmp.size())\r\n\t\t{\r\n\t\t\tif(tmp[j].F!=prev)\r\n\t\t\t{\r\n\t\t\t\tprev=tmp[j].F;\r\n\t\t\t\tcurr++;\r\n\t\t\t}\r\n\t\t\tadj[(tmp[j].S)].pb(curr);\r\n\t\t\tin[curr]++;\r\n\t\t\tif(curr!=(t1))\r\n\t\t\t{\r\n\t\t\t\tadj[curr-1].pb((tmp[j].S));\r\n\t\t\t\tin[(tmp[j].S)]++;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// cout<<endl;\r\n\t}\r\n\ttopsort();\r\n\tfor(auto i:order)\r\n\t{\r\n\t\tcout<<i<<\" \";\r\n\t}\r\n\r\n\t\r\n}"
}