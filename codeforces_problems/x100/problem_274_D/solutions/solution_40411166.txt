{
    "id": 40411166,
    "contestId": 274,
    "creationTimeSeconds": 1531744284,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "NOI-C"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 79872000,
    "source": "#include <bits/stdc++.h>\r\n#define fi first\r\n#define se second\r\n#define INF 0x3f3f3f3f\r\n#define sqr(x) ((x)*(x))\r\n#define pb push_back\r\n#define mp make_pair\r\n#define N 1000005\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef vector <int> vec;\r\nint n,m,cnt;\r\nvec maze[N];\r\nvec g[N<<2],ans;\r\nint in[N<<2];\r\nqueue <int> q;\r\nmap <pair <int, int>,int> to_id;\r\nint main()\r\n{\r\n    scanf(\"%d%d\",&n,&m);\r\n    cnt=m;\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        for(int j=0;j<m;j++)\r\n        {\r\n            int tmp;\r\n            scanf(\"%d\",&tmp);\r\n            if(tmp==-1)continue;\r\n            if(to_id.find(mp(i,tmp))==to_id.end())\r\n            {\r\n                maze[i].pb(tmp);\r\n                to_id[mp(i,tmp)]=cnt;\r\n                cnt+=2;\r\n            }\r\n            int id=to_id[mp(i,tmp)];\r\n            g[id].pb(j);\r\n            in[j]++;\r\n            g[j].pb(id+1);\r\n            in[id+1]++;\r\n        }\r\n    }\r\n    for(int i=0;i<n;i++)sort(maze[i].begin(),maze[i].end());\r\n    for(int i=0;i<n;i++)\r\n    {\r\n    \tfor(int j=1;j<maze[i].size();j++)\r\n        {\r\n            int u=to_id[mp(i,maze[i][j-1])];\r\n\t\t\tint v=to_id[mp(i,maze[i][j])];\r\n            g[u+1].pb(v);\r\n            in[v]++;\r\n        }\r\n\t}\r\n    for(int i=0;i<cnt;i++)if(not in[i])q.push(i);\r\n    while(not q.empty())\r\n    {\r\n        int u=q.front(); q.pop();\r\n        if(u<m)ans.pb(u);\r\n        for(int i=0;i<g[u].size();i++)\r\n        {\r\n            int v=g[u][i];\r\n            --in[v];\r\n            if(not in[v])q.push(v);\r\n        }\r\n    }\r\n    if(ans.size()!=m)\r\n    {\r\n        puts(\"-1\");\r\n        return 0;\r\n    }\r\n    for(int i=0;i<m;i++)printf(\"%d%c\", ans[i]+1, i==m-1?'\\n':' ');\r\n    return 0;\r\n}\r\n"
}