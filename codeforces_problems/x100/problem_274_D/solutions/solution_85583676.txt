{
    "id": 85583676,
    "contestId": 274,
    "creationTimeSeconds": 1593567766,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "leapfrog"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 4403200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nstruct edge{int to,nxt;}e[100005<<1];\r\nint tot=0,cnt=0,n,m,head[100005],deg[100005],ans[100005];vector<pair<int,int> >a;\r\ninline void adde(int x,int y) {e[++tot]=(edge){y,head[x]},head[x]=tot,deg[y]++;}\r\ninline bool cmp(int x,int y) {return a[x]<a[y];}\r\nint main()\r\n{\r\n\tscanf(\"%d%d\",&m,&n),memset(head,0,sizeof(head)),cnt=n;\r\n\tfor(int k=1;k<=m;k++)\r\n\t{\r\n\t\ta.clear(),a.push_back(make_pair(-1,-1));\r\n\t\tfor(int i=1,x;i<=n;i++) scanf(\"%d\",&x),a.push_back(make_pair(x,i));\r\n\t\tsort(a.begin()+1,a.end());vector<pair<int,int> >v;\r\n\t\tfor(int i=1,j=i;i<=n;i=j+1,j=i) {while(j+1<=n&&a[j+1].first==a[i].first) j++;v.push_back(make_pair(i,j));}\r\n\t\tfor(int j=0;j<(int)v.size()-1;j++)\r\n\t\t{\r\n\t\t\tint l1=v[j].first,r1=v[j].second,l2=v[j+1].first,r2=v[j+1].second;\r\n\t\t\tif(a[l1].first==-1) continue;else ++cnt;\r\n\t\t\tfor(int i=l1;i<=r1;i++) adde(a[i].second,cnt);\r\n\t\t\tfor(int i=l2;i<=r2;i++) adde(cnt,a[i].second);\r\n\t\t}\r\n\t}\r\n\tqueue<int>q;tot=0;\r\n\tfor(int i=1;i<=cnt;i++) if(!deg[i]) q.push(i);\r\n\twhile(!q.empty())\r\n\t{\r\n\t\tint x=q.front();q.pop(),ans[++tot]=x;\r\n\t\tfor(int i=head[x];i;i=e[i].nxt) {deg[e[i].to]--;if(!deg[e[i].to]) q.push(e[i].to);}\r\n\t}\r\n\tif(tot!=cnt) return puts(\"-1\"),0;\r\n\tfor(int i=1;i<=cnt;i++) if(ans[i]<=n) printf(\"%d%c\",ans[i],i==cnt?'\\n':' ');\r\n\treturn 0;\r\n}"
}