{
    "id": 3168090,
    "contestId": 274,
    "creationTimeSeconds": 1361459974,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "pavel.savchenkov"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 11,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 12595200,
    "source": "#include <cstdio>\r\n#include <iostream>\r\n#include <algorithm>\r\n#include <cstring>\r\n#include <string>\r\n#include <vector>\r\n#include <set>\r\n#include <map>\r\n#include <utility>\r\n#include <math.h>\r\n#include <cstdlib>\r\n#include <memory.h>\r\n#include <queue>\r\n#include <assert.h>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\n#define pb push_back\r\n#define f first\r\n#define s second\r\n#define LL long long\r\n#define uLL unsigned long long\r\n#define mp make_pair\r\n#define pii pair <int,int>\r\n#define sz(A) ((int)(A).size())\r\n#define y1 qwertyuiopasdfghjklzxcvbnm\r\n#define y0 ehfoiuvhefroerferjhfjkehfjke\r\n\r\nconst double EPS = 1e-9;\r\nconst double PI = acos(-1.0);\r\nconst int MAXN = (int) 1e5 + 10;\r\n\r\nint n, m;\r\nvector <int> c[MAXN];\r\nvector <int> a[MAXN];\r\nset <pii> col0[MAXN];\r\nset <pii> col1[MAXN];\r\nvector <int> top;\r\nint p[MAXN];\r\n\r\nvoid dfs(int j) {\r\n//  printf(\"in %d\\n\", j);\r\n\r\n  for (int i = 0; i < n; i++) {\r\n    col0[i].erase(mp(a[i][j], j));\r\n    col1[i].insert(mp(a[i][j], j));\r\n  }\r\n\r\n  for (int i = 0; i < n; i++) {\r\n    if  (a[i][j] == -1) continue;\r\n    int pos = upper_bound(c[i].begin(), c[i].end(), a[i][j])  - c[i].begin();\r\n    if  (pos == sz(c[i])) continue;\r\n    int nval = c[i][pos];\r\n\r\n    set <pii> :: iterator it;\r\n\r\n    it = col1[i].lower_bound(mp(nval, -1));\r\n    if  (it != col1[i].end() && it -> f == nval) {\r\n      puts(\"-1\");\r\n      exit(0);\r\n    }\r\n\r\n    it = col0[i].lower_bound(mp(nval, -1));\r\n    if  (it != col0[i].end() && it -> f == nval) dfs(it -> s);\r\n  }\r\n\r\n  for (int i = 0; i < n; i++)\r\n    col1[i].erase(mp(a[i][j], j));\r\n\r\n  top.pb(j); \r\n}\r\n\r\nint main() {\r\n//  freopen(\"in.txt\", \"r\", stdin);\r\n//  freopen(\"out.txt\", \"w\", stdout);\r\n  scanf(\"%d%d\", &n, &m);\r\n\r\n  for (int i = 0; i < n; i++) {\r\n    \r\n    for (int j = 0; j < m; j++) {\r\n      int x; scanf(\"%d\", &x);\r\n      if  (x != -1)\r\n        c[i].pb(x);\r\n      a[i].pb(x);\r\n      col0[i].insert(mp(x, j));\r\n    }\r\n\r\n    sort(c[i].begin(), c[i].end());\r\n  }\r\n \r\n  for (int i = 0; i < m; i++)\r\n    if  (col0[0].find(mp(a[0][i], i)) != col0[0].end())\r\n      dfs(i);  \r\n\r\n  reverse(top.begin(), top.end());\r\n\r\n  for (int i = 0; i < m; i++)\r\n    printf(\"%d \", top[i] + 1);\r\n  return 0;\r\n}\r\n"
}