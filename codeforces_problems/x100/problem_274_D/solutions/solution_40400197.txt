{
    "id": 40400197,
    "contestId": 274,
    "creationTimeSeconds": 1531725488,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "Suiseiseki"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 6041600,
    "source": "/*\r\nauthor:jxy\r\nlang:C/C++\r\nuniversity:China,Xidian University\r\n**If you need to reprint,please indicate the source**\r\n*/\r\n#include <iostream>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <algorithm>\r\n#define INF 1E9\r\nusing namespace std;\r\n#define maxn 100005\r\nstruct node {\r\n\tint u;\r\n\tnode *next;\r\n};\r\nint n,m;\r\nnode* First[maxn*2];\r\ninline void add(int v,int u) {\r\n\t// cout<<v<<\" \"<<u<<endl;\r\n\tnode *s=new node;\r\n\ts->next=First[v];\r\n\ts->u=u;\r\n\tFirst[v]=s;\r\n}\r\nint a[maxn],b[maxn];\r\nint cnt;\r\nbool cmp(int c,int d) {\r\n\treturn a[c]<a[d];\r\n}\r\nvoid init() {\r\n\tscanf(\"%d%d\",&n,&m);\r\n\tmemset(First,0,sizeof(First));\r\n\tint i,j,k;\r\n\tcnt=0;\r\n\tfor(i=0; i<n; i++) {\r\n\t\tfor(j=0; j<m; j++) {\r\n\t\t\tscanf(\"%d\",&a[j]);\r\n\t\t\tb[j]=j;\r\n\t\t}\r\n\t\tsort(b,b+m,cmp);\r\n\t\tfor(k=0; k<m; k++) {\r\n\t\t\tif(a[b[k]]==-1)continue;\r\n\t\t\tif(!k||a[b[k]]!=a[b[k-1]])cnt++;//\u589e\u52a0\u5197\u4f59\u8282\u70b9\r\n\t\t\tadd(b[k],m+cnt+1);\r\n\t\t\tadd(m+cnt,b[k]);\r\n\t\t}\r\n\t\tcnt++;\r\n\t}\r\n}\r\nint  inq[maxn*2];\r\nint topo[maxn],t;\r\nbool dfs(int u) {\r\n\tinq[u]=-1;\r\n\tfor(node *i=First[u]; i; i=i->next) {\r\n\t\tif(inq[i->u]<0)\r\n\t\t\treturn 0;\r\n\t\telse if(!inq[i->u]&&!dfs(i->u))return 0;\r\n\t}\r\n\tinq[u]=1;\r\n\tif(u<m) topo[--t]=u;\r\n\treturn 1;\r\n}\r\nbool toposort() {\r\n\tt=m;\r\n\tmemset(inq,0,sizeof(inq));\r\n\tfor(int u=0; u<m+cnt; u++)\r\n\t\tif(!inq[u]&&!dfs(u))return 0;\r\n\treturn 1;\r\n}\r\n\r\n\r\nint main() {\r\n\tinit();\r\n\tif(!toposort())puts(\"-1\");\r\n\telse {\r\n\t\tfor(int i=0; i<m; i++) {\r\n\t\t\tif(i)putchar(' ');\r\n\t\t\tprintf(\"%d\",topo[i]+1);\r\n\t\t}\r\n\t\tputs(\"\");\r\n\t}\r\n}\r\n"
}