{
    "id": 3158059,
    "contestId": 274,
    "creationTimeSeconds": 1361378642,
    "relativeTimeSeconds": 4442,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "alex20030190"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 14,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "RUNTIME_ERROR",
    "testset": "PRETESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 102400,
    "source": "#include<cstdio>\r\n#include<iostream>\r\n#include<cstring>\r\n#include<algorithm>\r\n#include<list>\r\nusing namespace std;\r\nstruct num{list<int>kk;int id;};\r\nbool bb(num p,num q){\r\n    list<int>::iterator it,it2;\r\n    for(it=p.kk.begin(),it2=q.kk.begin();it!=p.kk.end();it++,it2++){\r\n        if((*it)!=-1 && (*it2)!=-1){\r\n            if((*it)>(*it2)) return 0;\r\n            if((*it)<(*it2)) return 1;\r\n        }\r\n    }\r\n    return 1;\r\n}\r\nint main(){\r\n    int n,m;\r\n    scanf(\"%d %d\",&n,&m);\r\n    num s[m+1];\r\n    for(int j=0;j<m;j++)s[j].id=j+1;\r\n    for(int i=0;i<n;i++){\r\n        int in;\r\n        for(int j=0;j<m;j++){\r\n            scanf(\"%d\",&in);\r\n            s[j].kk.push_back(in);\r\n        }\r\n    }\r\n    sort(s,s+m,bb);\r\n    int mx[m+1];\r\n    memset(mx,0,sizeof(mx));\r\n    for(int i=0;i<n;i++){\r\n        for(int j=0;j<m;j++){\r\n            int temp=s[j].kk.front();\r\n            s[j].kk.pop_front();\r\n            if(temp<mx[j] && temp!=-1){\r\n                printf(\"-1\\n\");\r\n                goto gg;\r\n            }mx[j]=temp;\r\n        }\r\n    }\r\n    for(int j=0;j<m;j++) printf(\"%d%c\",s[j].id,j==m-1?'\\n':' ');\r\n    gg:;\r\n    return 0;\r\n}\r\n"
}