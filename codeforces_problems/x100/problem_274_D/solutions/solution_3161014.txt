{
    "id": 3161014,
    "contestId": 274,
    "creationTimeSeconds": 1361380937,
    "relativeTimeSeconds": 6737,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "fedimser"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 3,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1740800,
    "source": "#include <iostream>\r\n#include <fstream>\r\n#include  <string>\r\n#include <iomanip>\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <vector>\r\nusing namespace std;\r\n\r\n\r\nbool canSorted=true;\r\n\r\nint n,m;\r\n\r\nstruct col\r\n{\r\n int num;\r\n vector<int> cont;\r\n};\r\n\r\nint comp(const void* x, const void* y)\r\n{\r\n    if (!canSorted)return 0;\r\n    col* a = (col*)x;\r\n    col* b = (col*)y;\r\n\r\n    bool f1=false,f2=false;\r\n    int i;\r\n    for(i=0;i<n;i++)\r\n    {\r\n        int aa=a->cont[i];\r\n        int bb=b->cont[i];\r\n        if (aa!=-1 && bb!=-1)\r\n        {\r\n            if (aa<bb)f1=true;\r\n            if (aa>bb)f2=true;\r\n        }\r\n    }\r\n\r\n    if (f1 && f2){canSorted=false;return 0;}\r\n    if (f2)return 1;\r\n    if (f1)return -1;\r\n    return 0;\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\ncol cols[100007];\r\n\r\n\r\nint main()\r\n{ \r\n\r\n    int i,j,x;\r\n\r\n    cin>>n>>m;\r\n    for(i=0;i<n;i++)\r\n    {\r\n        for(j=0;j<m;j++)\r\n        {\r\n            cin>>x;\r\n            cols[j].cont.push_back(x);\r\n        }\r\n    }\r\n    for(i=0;i<m;i++)cols[i].num=i+1;\r\n\r\n    qsort(cols,m,sizeof(col),comp);\r\n\r\n    if (!canSorted){cout<<-1;return 0;}\r\n    for(i=0;i<m;i++)cout<<cols[i].num<<\" \";\r\n\r\n}\r\n"
}