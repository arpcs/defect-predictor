{
    "id": 3157741,
    "contestId": 274,
    "creationTimeSeconds": 1361378411,
    "relativeTimeSeconds": 4211,
    "problem": {
        "contestId": 274,
        "index": "D",
        "name": "Lovely Matrix",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 274,
        "members": [
            {
                "handle": "tunyash"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 12,
        "startTimeSeconds": 1361374200
    },
    "programmingLanguage": "GNU C++",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 8704000,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <string>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <map>\r\n#include <set>\r\n#include <queue>\r\n#include <stack>\r\n#include <cmath>\r\n#include <assert.h>\r\nusing namespace std;\r\n#define pb push_back\r\n#define mp make_pair\r\ntypedef long long ll;\r\ntypedef long double ld;\r\nconst int INF = 1000000000;\r\nconst int prime = 9241;\r\nconst ld pi = acos(-1.);\r\n\r\nvector<int> con[300005];\r\nint used[300005];\r\nint num[300005];\r\nint area_[100005];\r\nint n, m;\r\n#define area(i,j) area_[(i)*m+(j)]\r\nint k;\r\n\r\nbool ls0(int a, int b)\r\n{\r\n   return area(k,a) < area(k,b);\r\n}\r\n\r\nbool eq0(int a, int b)\r\n{\r\n   return area(k,a) == area(k,b);\r\n}\r\n\r\nvector<int> res;\r\n\r\n\r\nbool dfs(int i)\r\n{\r\n    //if (used[i]) return 0;\r\n    used[i] = 1;\r\n  //  cout << \"dfs(\" << i << \")\" << endl;\r\n    for (int j = 0; j < (int)con[i].size(); j++)\r\n    {\r\n       if (used[con[i][j]] == 1) return 0;\r\n       if (!used[con[i][j]] && !dfs(con[i][j])) return 0;\r\n    }\r\n    res.pb(i);\r\n    used[i] = 2;\r\n    return 1;\r\n}\r\n\r\nint main()\r\n{\r\n   scanf(\"%d%d\", &n, &m);\r\n   for (int i = 0; i < n; i++)\r\n      for (int j = 0; j < m; j++)\r\n         scanf(\"%d\", &area(i,j));\r\n   int cnt = m;\r\n   for (int i = 0; i < m; i++) num[i] = i+1;\r\n   for (int i = 0; i < n; i++)\r\n   {\r\n      k = i;\r\n      vector<int> in;\r\n      for (int j = 0; j < m; j++)\r\n         if (area(i,j) != -1) in.pb(j);\r\n      sort(in.begin(), in.end(), ls0);\r\n    //  for (int j = 0; j < (int)in.size(); j++) cout << in[j] << ' ';\r\n    //  cout << endl;\r\n      for (int j = 1; j < (int)in.size(); j++)\r\n      {\r\n         if (ls0(in[j-1],in[j]))\r\n         {\r\n            num[cnt] = -1;\r\n            for (int q = j-1; q >= 0 && eq0(in[q], in[j-1]); q--)\r\n               con[in[q]].pb(cnt);\r\n            for (int q = j; q < (int)in.size() && eq0(in[q], in[j]); q++)\r\n               con[cnt].pb(in[q]);\r\n            cnt++;\r\n         }\r\n      } \r\n   }\r\n   for (int i = 0; i < cnt; i++)\r\n      used[i] = 0;\r\n //  for (int i = 0; i < cnt; i++)\r\n //  {\r\n    //  cout << i << \": \";\r\n    //  for (int j = 0; j < (int)con[i].size(); j++) cout << con[i][j] << ' ';\r\n    //  cout << endl;\r\n //  }\r\n   res.clear();\r\n   bool ok = 1;\r\n   for (int i = 0; i < cnt; i++)\r\n      if (!used[i] && !dfs(i)) ok = 0;\r\n   if (!ok) {cout << -1 << endl; return 0;}\r\n   reverse(res.begin(), res.end());\r\n   for (int i = 0; i < (int)res.size(); i++)\r\n      if (num[res[i]] != -1) cout << num[res[i]] << ' ';\r\n   cout << endl;\r\n   return 0;\r\n}"
}