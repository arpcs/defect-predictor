{
    "id": 70790058,
    "contestId": 721,
    "creationTimeSeconds": 1581427836,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "gamegame"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 1638400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\n#define fi first\r\n#define se second\r\nint n,k;\r\nll x;\r\nll a[200001];\r\nmultiset<pair<ll,int> >s,t;\r\nvoid m1(){\r\n\tauto it=s.end();--it;\r\n\ts.erase(it);\r\n\tit=t.end();--it;\r\n\tt.erase(it);\r\n\ts.insert({-1e18,0});\r\n\tt.insert({-1e18,0});\r\n\tfor(int i=1; i<=k ;i++){\r\n\t\tauto it2=s.end();--it2;\r\n\t\tauto it3=t.end();--it3;\r\n\t\tif(*it2>*it3){\r\n\t\t\tint id=it2->se;\r\n\t\t\ta[id]-=x;\r\n\t\t\ts.erase(it2);\r\n\t\t\ts.insert({a[id],id});\r\n\t\t}\r\n\t\telse{\r\n\t\t\tint id=it3->se;\r\n\t\t\ta[id]+=x;\r\n\t\t\tt.erase(it3);\r\n\t\t\tt.insert({-a[id],id});\r\n\t\t}\r\n\t}\r\n}\r\nvoid m2(){\r\n\twhile(s.begin()->fi>=0){\r\n\t\tint id=s.begin()->se;\r\n\t\ts.erase(s.begin());\r\n\t\ta[id]-=x;\r\n\t\ts.insert({a[id],id});\r\n\t\tk--;\r\n\t}\r\n\tint id=s.begin()->se;\r\n\ts.erase(s.begin());\r\n\tt.insert({-a[id],id});\r\n}\r\nvoid m3(){\r\n\twhile(t.begin()->fi>=0){\r\n\t\tint id=t.begin()->se;\r\n\t\tt.erase(t.begin());\r\n\t\ta[id]+=x;\r\n\t\tt.insert({-a[id],id});\r\n\t\tk--;\r\n\t}\r\n\tint id=t.begin()->se;\r\n\tt.erase(t.begin());\r\n\ts.insert({a[id],id});\r\n}\r\nvoid m4(){\r\n\tfor(int i=1; i<=k ;i++){\r\n\t\tauto it2=s.begin();\r\n\t\tauto it3=t.begin();\r\n\t\tif(*it2<*it3){\r\n\t\t\tint id=it2->se;\r\n\t\t\ta[id]+=x;\r\n\t\t\ts.erase(it2);\r\n\t\t\ts.insert({a[id],id});\r\n\t\t}\r\n\t\telse{\r\n\t\t\tint id=it3->se;\r\n\t\t\ta[id]-=x;\r\n\t\t\tt.erase(it3);\r\n\t\t\tt.insert({-a[id],id});\r\n\t\t}\r\n\t}\r\n}\r\nint main(){\r\n\tios::sync_with_stdio(false);cin.tie(0);\r\n\tcin >> n >> k >> x;\r\n\tfor(int i=1; i<=n ;i++){\r\n\t\tcin >> a[i];\r\n\t\tif(a[i]>0) s.insert({a[i],i});\r\n\t\telse t.insert({-a[i],i});\r\n\t}\r\n\ts.insert({1e18,0});\r\n\tt.insert({1e18,0});\r\n\tif(s.begin()->fi>=k*x && t.begin()->fi>=k*x && t.size()%2==1){\r\n\t\tm1();\r\n\t}\r\n\telse if(t.size()%2==1){\r\n\t\t//cout << \"hihi\" << endl;\r\n\t\tif(*s.begin()<*t.begin()) m2();\r\n\t\telse m3();\r\n\t\tm4();\r\n\t}\r\n\telse m4();\r\n\tfor(int i=1; i<=n ;i++) cout << a[i] << ' ';\r\n\tcout << '\\n';\r\n}"
}