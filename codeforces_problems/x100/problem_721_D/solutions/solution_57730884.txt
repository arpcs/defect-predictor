{
    "id": 57730884,
    "contestId": 721,
    "creationTimeSeconds": 1564043599,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "\n2019/7/22 22:17:54\n\u8ba1\u79d11704\u8d3e\u8f89 2019/7/22 22:17:54\n[\u6233\u4e00\u6233]\u8bf7\u4f7f\u7528\u6700\u65b0\u7248\u624b\u673aQQ\u67e5\u770b\u3002\n\n\u8ba1\u79d11704\u8d3e\u8f89 2019/7/22 22:17:58\n\u8d77\u5e8a\u4e86\n\n\u8ba1\u79d11704\u8d3e\u8f89 2019/7/22 22:19:17\n\n2019/7/23 17:45:06\n\u8ba1\u79d11704\u8d3e\u8f89 2019/7/23 17:45:06\n\u8d70\u5403\u996d\u53bb\n2019/7/23 17:48:13\nLevel 0 2019/7/23 17:48:13\n\u9a6c\u4e0a\u8d77\u5e8a\n2019/7/23 19:04:59\n\u8ba1\u79d11704\u8d3e\u8f89 2019/7/23 19:04:59\n\u738b\u8001\u5e08\u60a8\u597d\uff0c\u8fd9\u51e0\u5929\u8bad\u7ec3\u8001\u5e08\u8bb2\u8bfe\u5f88\u597d\uff0c\u4f46\u662f\u81ea\u5df1\u611f\u89c9\u4e0d\u592a\u9002\u5e94\uff0c\u81ea\u5df1\u6821\u5185\u7684\u8bad\u7ec3\u8d5b\u591a\u6821\u8d5b\u8fd8\u6709camp\u7684\u6bd4\u8d5b\u6709\u70b9\u591a\u81ea\u5df1\u5904\u7406\u4e0d\u8fc7\u6765\uff0c\u5df2\u7ecf\u8ddf\u6559\u7ec3\u8bf4\u660e\u60c5\u51b5\uff0c\u60f3\u8bf7\u5047\u63d0\u524d\u79bb\u5f00\u53ef\u4ee5\u5417\u3002\n2019/7/23 19:28:58\n\u8ba1\u79d11704\u8d3e\u8f89 2019/7/23 19:28:58\n\u8001\u5e08\uff0c\u7531\u4e8e\u63a5\u4e0b\u6765\u7684\u51e0\u5929\u4e0a\u5348\u8bb2\u8bfe\u65f6\u95f4\u8bb2\u7684\u5185\u5bb9\u6bd4\u8f83\u6c34\uff08\u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790\uff0c\u6570\u636e\u7ed3\u6784\uff09\uff0c\u7ecf\u8fc7\u8ba8\u8bba\u4e3a\u4e86\u7075\u6d3b\u5b89\u6392\u65f6\u95f4\uff08\u4ee5\u540e\u6bcf\u5929\u90fd\u8981\u7b7e\u5230\uff09\u6211\u4eec\u51b3\u5b9a\u548c\u4e93\u7389\u5b81\u4ed6\u4eec\u4e00\u8d77\u5411\u4e1c\u79e6\u738b\u8001\u5e08\u7533\u8bf7\u9000\u51fa\uff0c\u4f46\u56e0\u4e3a\u8ba2\u9910.\u5bbe\u9986\u4ee5\u53ca\u8fd4\u7a0b\u706b\u8f66\u7968\u90fd\u5df2\u7ecf\u8ba2\u597d\u4e86\u73b0\u5728\u66f4\u6539\u5f88\u9ebb\u70e6\u6240\u4ee5\u63a5\u4e0b\u6765\u7684\u51e0\u5929\u51c6\u5907\u4e0a\u5348\u548c\u665a\u4e0a\u81ea\u5df1\u8865\u9898\u3002\u4e0b\u5348\u5728\u6ca1\u6709\u5176\u4ed6\u6bd4\u8d5b\u51b2\u7a81\u7684\u65f6\u5019\u53bb\u6253\u6bd4\u8d5b\uff08\u7b2c\u4e00\u6b21\u6a21\u677f\u9898\u6bd4\u8f83\u591a\u6709\u4eba\u63d0\u610f\u89c1\u540e\u73b0\u5728\u6539\u6210\u4e86gym\u7684\u5957\u9898\uff0c\u9898\u76ee\u8d28\u91cf\u8fd8\u4e0d\u9519\uff09\uff0c\u60a8\u770b\u4e00\u4e0b\u53ef\u4e0d\u53ef\u4ee5\u3002\n2019/7/23 19:32:02\nLevel 0 2019/7/23 19:32:02\n\u738b\u8001\u5e08\u60a8\u597d\uff0c\u8fd9\u51e0\u5929\u7684\u8bad\u7ec3\u548c\u8001\u5e08\u8bb2\u8bfe\u90fd\u5f88\u597d\uff0c\u4f46\u662f\u611f\u89c9\u4e0d\u592a\u9002\u5e94\u3002\n\ncamp\u5ba3\u4f20\u65f6\u6240\u660e\u786e\u6307\u51fa\u7684\u201c\u6388\u8bfe\u548c\u9898\u76ee\u4f7f\u7528\u4e2d\u6587\u201d\u548c\u201ccamp\u7684\u8bd5\u9898\u7248\u6743\u5f52camp\u7ec4\u59d4\u4f1a\u6240\u6709\u201d\uff0c\u8ba9\u6211\u4eec\u8bef\u4ee5\u4e3a\u6bcf\u4e00\u5929\u7684\u6d4b\u8bd5\u8d5b\u90fd\u548c\u4ee5\u524d\u529ecamp\u4e00\u6837\uff0c\u91c7\u7528\u539f\u521b\u9898\u3002\n\n\u6211\u4eec\u540c\u6837\u4e5f\u8bef\u89e3\u4e86\u201c\u9762\u5411regional\u94f6\u724c\u53ca\u4ee5\u4e0b\u9009\u624b\u201d\u8fd9\u4e00\u8bf4\u660e\uff0c\u6211\u4eec\u7684\u9884\u671f\u662fcamp\u7684\u53d7\u4f17\u662f\u94f6\u724c(\u53ca\u4ee5\u4e0b)\u7684\u6210\u5458\uff0c\u6240\u4ee5camp\u7684\u8bad\u7ec3\u76ee\u7684\u5e94\u8be5\u662f\u51b2\u523a\u91d1\u724c\uff0c\u4f46\u662f\u7ecf\u8fc7\u51e0\u5929\u7684\u8bad\u7ec3\u540e\u53d1 \u73b0\u5b9e\u9645\u60c5\u51b5\u548c\u9884\u671f\u6709\u8f83\u5927\u7684\u504f\u5dee\u3002\n\n\u5f88\u62b1\u6b49\u5360\u7528\u4e86camp\u7684\u540d\u989d\u4ee5\u53ca\u5404\u79cd\u8d44\u6e90\uff0c\u4f46\u662f\u4e0b\u534a\u5e74\u5373\u5c06\u5230\u6765\u7684\u533a\u57df\u8d5b\u5bfc\u81f4\u6211\u4eec\u8bad\u7ec3\u65f6\u95f4\u5341\u5206\u7d27\u5f20\uff0c\u6240\u4ee5\u60f3\u8bf7\u5047\u63d0\u524d\u79bb\u5f00\uff0c\u5bf9camp\u6240\u9020\u6210\u7684\u4e0d\u4fbf\u5728\u6b64\u81f4\u4ee5\u6b49\u610f\u3002\n2019/7/23 21:05:34\n\u8ba1\u79d11704\u8d3e\u8f89 2019/7/23 21:05:34\nhttps://jhcloud.top/blog/?p=1776\n2019/7/24 20:50:29\n\u8ba1\u79d11704\u8d3e\u8f89 2019/7/24 20:50:29\nhttps://blog.csdn.net/u013368721/article/details/42100363\n2019/7/24 22:30:10\n\u8ba1\u79d11704\u8d3e\u8f89 2019/7/24 22:30:10\n#include <bits/stdc++.h>\nconst int maxn=1e5;\nusing namespace std;\nint n,c,k;\nstruct node{\n    int l,r,data,lazy;\n}tr[maxn];\nvoid build(int rt,int l,int r){\n    tr[rt].l=l;\n    tr[rt].r=r;\n    tr[rt].data=0;\n    tr[rt].lazy=0;\n    if(l==r)return;\n    int mid=(l+r)>>1;\n    build(rt<<1,l,mid);\n    build(rt<<1|1,mid+1,r);\n}\nvoid pushdown(int ro){\n    if(tr[ro].lazy){\n        tr[ro<<1].lazy=tr[ro].lazy;\n        tr[ro<<1].data+=tr[ro<<1].lazy*(tr[ro<<1].r-tr[ro<<1].l+1);\n        tr[ro<<1|1].lazy=tr[ro].lazy;\n        tr[ro<<1|1].data+=tr[ro<<1|1].lazy*(tr[ro<<1|1].r-tr[ro<<1|1].l+1);\n        tr[ro].lazy=0;\n    }\n}\nvoid update(int ro,int l,int r,int add){\n    if(l<=tr[ro].l&&r>=tr[ro].r){\n        tr[ro].lazy++;\n        tr[ro].data+=(tr[ro].r-tr[ro].l+1);\n        return;\n    }\n    pushdown(ro);\n    int mid=(tr[ro].l+tr[ro].r)>>1;\n    if(r<=mid){\n        update(ro<<1,l,r,add);\n    }\n    if(l>mid){\n        update(ro<<1|1,l,r,add);\n    }\n}\nint query(int ro,int d){\n    if(tr[ro].l==d&&tr[ro].r==d){\n        return tr[ro].data;\n    }\n    pushdown(ro);\n    int mid=(tr[ro].l+tr[ro].r)>>1;\n    if(d<=mid){\n        query(ro<<1,d);\n    }\n    else query(ro<<1|1,d);\n}\nint num[maxn],pre[maxn];\nint main() {\n    ios::sync_with_stdio(false);\n    while(cin>>n>>c>>k){\n        for(int i=0;i<=c;i++){\n            num[i]=0;\n        }\n        build(1,1,n);\n        int d;\n        for(int i=1;i<=n;i++){\n            cin>>d;\n            if(num[d]==0){\n                if(i>1)\n                    update(1,1,i-1,1);\n            }\n            num[d]++;\n            if(num[d]==k)pre[d]=i;\n            if(num[d]>=k){\n                update(1,pre[d],i,1);\n                pre[d]=i+1;\n            }\n        }\n        int ans=0,cnt=0;\n        for(int i=1;i<=n;i++){\n            int d=query(1,i);\n            cout<<d<<endl;\n            if(d==c){\n                cnt++;\n                ans=max(ans,cnt);\n            }\n            else cnt=0;\n        }\n        cout<<ans<<endl;\n    }\n    return 0;\n}\n2019/7/24 22:46:55\nLevel 0 2019/7/24 22:46:55\n#include <bits/stdc++.h>\nconst int maxn=1e5;\nusing namespace std;\nint n,c,k;\nstruct node{\n    int l,r,data,lazy;\n}tr[maxn];\nvoid build(int rt,int l,int r){\n    tr[rt].l=l;\n    tr[rt].r=r;\n    tr[rt].data=0;\n    tr[rt].lazy=0;\n    if(l==r)return;\n    int mid=(l+r)>>1;\n    build(rt<<1,l,mid);\n    build(rt<<1|1,mid+1,r);\n}\n\nvoid pushdown(int ro){\n    if(tr[ro].lazy){\n        tr[ro<<1].lazy+=tr[ro].lazy;\n        tr[ro<<1].data+=tr[ro].lazy*(tr[ro<<1].r-tr[ro<<1].l+1);\n        tr[ro<<1|1].lazy+=tr[ro].lazy;\n        tr[ro<<1|1].data+=tr[ro].lazy*(tr[ro<<1|1].r-tr[ro<<1|1].l+1);\n        tr[ro].lazy=0;\n    }\n}\nvoid update(int ro,int l,int r,int add){\n    if(l<=tr[ro].l&&r>=tr[ro].r){\n        tr[ro].lazy++;\n        tr[ro].data+=(tr[ro].r-tr[ro].l+1);\n        return;\n    }\n    pushdown(ro);\n    int mid=(tr[ro].l+tr[ro].r)>>1;\n    if(l<=mid){\n        update(ro<<1,l,r,add);\n    }\n    if(r>mid){\n        update(ro<<1|1,l,r,add);\n    }\n}\n\nint query(int ro,int d){\n    if(tr[ro].l==d&&tr[ro].r==d){\n        return tr[ro].data;\n    }\n    pushdown(ro);\n    int mid=(tr[ro].l+tr[ro].r)>>1;\n    if(d<=mid){\n        query(ro<<1,d);\n    }\n    else query(ro<<1|1,d);\n}\nint num[maxn],pre[maxn];\nint main() {\n    ios::sync_with_stdio(false);\n    while(cin>>n>>c>>k){\n        for(int i=0;i<=c;i++){\n            num[i]=0;\n        }\n        build(1,1,n);\n\n        int d;\n        for(int i=1;i<=n;i++){\n            cin>>d;\n            if(num[d]==0){\n                if(i>1)\n                    update(1,1,i-1,1);\n            }\n            num[d]++;\n            if(num[d]==k)pre[d]=i;\n            if(num[d]>=k){\n                update(1,pre[d],i,1);\n                pre[d]=i+1;\n            }\n        }\n        int ans=0,cnt=0;\n        for(int i=1;i<=n;i++){\n            int d=query(1,i);\n            cout<<d<<endl;\n            if(d==c){\n                cnt++;\n                ans=max(ans,cnt);\n            }\n            else cnt=0;\n        }\n        cout<<ans<<endl;\n    }\n    return 0;\n}\n15:32:54\n\u8ba1\u79d11704\u8d3e\u8f89 2019/7/25 15:32:54\n\u4e58\u79ef\u4e3a\u8d1f\uff1a\n\t\u64cd\u4f5c\u7edd\u5bf9\u503c\u6700\u5c0f\u7684\u6570\n\t  \u6b63\uff1a\u52a0\n\t  \u8d1f\uff1a\u51cf\n\u4e58\u79ef\u4e3a\u6b63\uff1a\n    \u64cd\u4f5c\u7edd\u5bf9\u503c\u6700\u5c0f\u7684\u6570\n      \u6b63\uff1a\u51cf\n      \u8d1f\uff1a\u52a0\n15:35:14\nLevel 0 2019/7/25 15:35:14\n\n16:05:45\nLevel 0 2019/7/25 16:05:45\n#define rep(i, a, b) for(int i = (a); i <= (b); i++)\n#define ll long long\n#define pb push_back\n#define pli pair<long long,int>\n#define mp make_pair\nvoid solve(ll *s,int n,int k,int x) {\n    int sig = 1;\n    priority_queue<pli,vector<pli>,greater<pli> >q1;\n    priority_queue<pli>q0;\n    q1.push(mp(2e9,0)); q0.push(mp(-2e9,0));\n    rep(i, 1, n) {\n        if(s[i]<0) {\n            sig = -sig;\n            q0.push(mp(s[i],i));\n        }\n        else q1.push(mp(s[i],i));\n    }\n    rep(i, 1, k) {\n        pli u,v;\n        if(!q1.empty()) u = q1.top(),q1.pop();\n        if(!q0.empty()) v = q0.top(),q0.pop();\n\n        if(abs(u.first)>abs(v.first)) swap(u,v);\n        if(v.first>0) q1.push(v);\n        else q0.push(v);\n\n        if(u.first>=0) {\n            u.first -= sig*x;\n            s[u.second] -= sig*x;\n            if(u.first<0) {\n                sig = -sig;\n                q0.push(u);\n            }\n            if(u.first>=0) q1.push(u);\n        }\n        else {\n            u.first += sig*x;\n            s[u.second] += sig*x;\n            if(u.first>=0) {\n                sig = -sig;\n                q0.push(u);\n            }\n            if(u.first<=0) q1.push(u);\n        }\n    }\n    rep(i, 1, n) cout<<s[i]<<' ';\n}\n16:16:52\n\u8ba1\u79d11704\u8d3e\u8f89 2019/7/25 16:16:52\n#include <bits/stdc++.h>\n\nconst int maxn = 2e5 + 100;\nusing namespace std;\n#define rep(i, a, b) for(int i = (a); i <= (b); i++)\n#define ll long long\n#define pb push_back\n#define pli pair<long long,int>\n#define mp make_pair\nvoid solve(ll *s,int n,int k,int x) {\n    int sig = 1;\n    priority_queue<pli,vector<pli>,greater<pli> >q1;\n    priority_queue<pli>q0;\n    q1.push(mp(2e9,0)); q0.push(mp(-2e9,0));\n    rep(i, 1, n) {\n        if(s[i]<0) {\n            sig = -sig;\n            q0.push(mp(s[i],i));\n        }\n        else q1.push(mp(s[i],i));\n    }\n    rep(i, 1, k) {\n        pli u,v;\n        if(!q1.empty()) u = q1.top(),q1.pop();\n        if(!q0.empty()) v = q0.top(),q0.pop();\n\n        if(abs(u.first)>abs(v.first)) swap(u,v);\n        if(v.first>0) q1.push(v);\n        else q0.push(v);\n\n        if(u.first>=0) {\n            u.first -= sig*x;\n            s[u.second] -= sig*x;\n            if(u.first<0) {\n                sig = -sig;\n                q0.push(u);\n            }\n            if(u.first>=0) q1.push(u);\n        }\n        else {\n            u.first += sig*x;\n            s[u.second] += sig*x;\n            if(u.first>=0) {\n                sig = -sig;\n                q0.push(u);\n            }\n            if(u.first<0) q1.push(u);\n        }\n    }\n    rep(i, 1, n) cout<<s[i]<<' ';\n}\nlong long a[maxn];\nint main() {\n    ios::sync_with_stdio(false);\n    int n,k,x;\n    cin>>n>>k>>x;\n    int zheng=0,fu=0,ling=0;\n    for(int i=1;i<=n;i++){\n        cin>>a[i];\n        if(a[i]==0)\n            ling++;\n        else if(a[i]>0)\n            zheng++;\n        else if(a[i]<0)\n            fu++;\n    }\n    if(ling){\n        if(ling>k){\n            for(int i=1;i<=n;i++){\n                cout<<a[i]<<\" \";\n            }\n            return 0;\n        }\n        if((fu+ling)%2){//fu\n            int d=k-ling;\n            for(int i=1;i<=n;i++){\n                if(a[i]==0){\n                    a[i]==-x;\n                }\n            }\n            solve(a,n,d,x);\n        }\n        else{\n            int d=k-ling,f=0;\n            for(int i=1;i<=n;i++){\n                if(a[i]==0&&f==0){\n                    f=1;\n                    a[i]==x;\n                }\n                else if(a[i]==0){\n                    a[i]==-x;\n                }\n            }\n            solve(a,n,d,x);\n        }\n    }\n    else solve(a,n,k,x);\n    return 0;\n}\n\n  \t    \t \t       \t \t\t\t\t \t  \t\t\t"
}