{
    "id": 190263243,
    "contestId": 721,
    "creationTimeSeconds": 1674518292,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "Richw818"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 9011200,
    "source": "/**\r\n *      Author:  Richw818\r\n *      Created: 01.23.2023 18:47:18\r\n**/\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nstruct cmp{\r\n    bool operator()(const pair<long long, int>& a, const pair<long long, int>& b) const {\r\n        return abs(a.first) > abs(b.first);\r\n    }\r\n};\r\nint main(){\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    int n, k, x; cin >> n >> k >> x;\r\n    vector<long long> a(n); for(auto& A : a) cin >> A;\r\n    int z = count(a.begin(), a.end(), 0);\r\n    if(z > 0){\r\n        if(k < z){\r\n            for(int i = 0; i < n; i++) cout << a[i] << \" \\n\"[i == n - 1];\r\n            return 0;\r\n        }\r\n        else{\r\n            int other = 1;\r\n            for(int i = 0; i < n; i++){\r\n                if(a[i] < 0) other *= -1;\r\n            }\r\n            k -= z;\r\n            for(int i = 0; i < n; i++){\r\n                if(a[i] == 0){\r\n                    if(other == 1 && z == 1) a[i] -= x;\r\n                    else a[i] += x;\r\n                    z--;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    int smallest = 0, sgn = 1;\r\n    for(int i = 1; i < n; i++){\r\n        if(abs(a[i]) < abs(a[smallest])) smallest = i;\r\n        if(a[i] < 0) sgn *= -1;\r\n    }   \r\n    if(sgn == 1 && 1LL * x * k <= abs(a[smallest])){\r\n        long long add = 1LL * x * k;\r\n        a[smallest] += (a[smallest] < 0 ? add : -add);\r\n        for(int i = 0; i < n; i++) cout << a[i] << \" \\n\"[i == n - 1];\r\n        return 0;\r\n    }\r\n    if(sgn == 1){\r\n        int need = abs(a[smallest]) / x + 1;\r\n        a[smallest] += (a[smallest] < 0 ? 1LL * need * x : -1LL * need * x);\r\n        k -= need;\r\n    }\r\n    priority_queue<pair<long long, int>, vector<pair<long long, int>>, cmp> pq;\r\n    for(int i = 0; i < n; i++) pq.emplace(a[i], i);\r\n    for(int i = 0; i < k; i++){\r\n        auto t = pq.top(); pq.pop();\r\n        int ind = t.second;\r\n        a[ind] += (a[ind] < 0 ? -x : x);\r\n        pq.emplace(a[ind], ind);\r\n    }\r\n    for(int i = 0; i < n; i++) cout << a[i] << \" \\n\"[i == n - 1];\r\n    return 0;\r\n}"
}