{
    "id": 141247716,
    "contestId": 721,
    "creationTimeSeconds": 1640958236,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "Noctambulant"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 8192000,
    "source": "//Author:Md. Liad Hossain\r\n//KUET ECE 2K18\r\n \r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp> // Common file\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#define lld long long int\r\n#define pll pair<lld,lld>\r\n#define ulld unsigned long long int\r\n#define vl vector<lld>\r\n#define vll vector<pair<lld, lld>>\r\n#define ff first\r\n#define ss second\r\n#define pf push_front\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define pof pop_front\r\n#define pob pop_back\r\n#define fbo find_by_order\r\n#define ook order_of_key\r\n#define mp make_pair\r\n#define fo(i, a, b) for (int i = a; i <= b; i++)\r\n#define FOR(i, n) for (int i = 0; i < n; i++)\r\n#define F0R(j, n) for (int j = 1; j <= n; j++)\r\n#define ROF(i, n) for (int i = n - 1; i >= 0; i--)\r\n#define R0F(i, n) for (int i = n; i >= 1; i--)\r\n#define all(v) v.begin(), v.end()\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define er equal_range\r\n#define rs random_shuffle\r\n#define yes printf(\"YES\\n\")\r\n#define no printf(\"NO\\n\")\r\n#define mod 1000000007\r\n#define mod1 1000000021\r\n#define mod2 1000000289\r\n#define M 74747474747474747\r\n#define setbit __builtin_popcount\r\n#define elif else if\r\n#define mem0(a) memset(a, 0, sizeof(a))\r\n#define mem1(a) memset(a, -1, sizeof(a))\r\n#define inf 9000000000000000000\r\n#define INF 1e9\r\n#define eps 1e-9\r\n#define isprime(n) (a[(n)>>4]&(1<<(((n)>>1)&7)))\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> indexed_set;\r\nvoid read(int &x)\r\n{\r\n    scanf(\"%d\", &x);\r\n}\r\nvoid read(lld &x)\r\n{\r\n    scanf(\"%I64d\", &x);\r\n}\r\n\r\nvoid read(int &a, int &b)\r\n{\r\n    scanf(\"%d %d\", &a, &b);\r\n}\r\n\r\nvoid read(lld &a, lld &b)\r\n{\r\n    scanf(\"%I64d %I64d\", &a, &b);\r\n}\r\n\r\nvoid read(lld &a, lld &b, lld &c)\r\n{\r\n    scanf(\"%I64d %I64d %I64d\", &a, &b, &c);\r\n}\r\n\r\nvoid read(int &a, int &b, int &c)\r\n{\r\n    scanf(\"%d %d %d\", &a, &b, &c);\r\n}\r\n\r\nvoid read(lld &a, lld &b, lld &c, lld &d)\r\n{\r\n    scanf(\"%I64d %I64d %I64d %I64d\", &a, &b, &c, &d);\r\n}\r\n\r\nvoid read(int &a, int &b, int &c, int &d)\r\n{\r\n    scanf(\"%d %d %d %d\", &a, &b, &c, &d);\r\n}\r\n\r\nvoid read(double &x)\r\n{\r\n    scanf(\"%lf\", &x);\r\n}\r\nvoid read(char &x)\r\n{\r\n    scanf(\"%c\", &x);\r\n}\r\nvoid read(string &x)\r\n{\r\n    char y[1000006];\r\n    scanf(\"%s\", &y);\r\n    x = y;\r\n}\r\n \r\nvoid print(lld x, bool flag = false)\r\n{\r\n    if (flag)\r\n        printf(\"%I64d \", x);\r\n    else\r\n        printf(\"%I64d\\n\", x);\r\n}\r\nvoid print(int x, bool flag = false)\r\n{\r\n    if (flag)\r\n        printf(\"%d \", x);\r\n    else\r\n        printf(\"%d\\n\", x);\r\n}\r\nvoid print(double x, bool flag = false)\r\n{\r\n    if (flag)\r\n        printf(\"%0.14lf \", x);\r\n    else\r\n        printf(\"%0.14lf\\n\", x);\r\n}\r\nvoid print(char x)\r\n{\r\n    printf(\"%c\\n\", x);\r\n}\r\n \r\nvoid print(string x)\r\n{\r\n    for (lld i = 0; i < x.size(); i++)\r\n    {\r\n        printf(\"%c\", x[i]);\r\n    }\r\n    printf(\"\\n\");\r\n}\r\n//knight moves...\r\n//lld dx[]={-1,-2,-2,-1,1,2,2,1};\r\n//lld dy[]={-2,-1,1,2,2,1,-1,-2};\r\n \r\n//grid moves without diagonal\r\n//lld dx[]={0,-1,0,1};\r\n//lld dy[]={-1,0,1,0};\r\n \r\n//grid moves with diagonal\r\n//lld dx[]={0,-1,-1,-1,0,1,0,1};\r\n//lld dy[]={-1,-1,0,1,1,1,1,-1};\r\n//*************************Code Begins Here*************************//\r\n\r\n\r\n\r\nvoid solve()\r\n{\r\n    int n,k,x;\r\n    read(n,k,x);\r\n    int a[n];\r\n    multiset<pair<int,int>>pos,neg;\r\n    FOR(i,n)read(a[i]),pos.insert({a[i],i});\r\n\r\n    while(k--)\r\n    {\r\n        if(neg.empty())\r\n        {\r\n            int val=pos.begin()->ff;\r\n            int id=pos.begin()->ss;\r\n            pos.erase(pos.begin());\r\n            val-=x;\r\n            if(val<0)neg.insert({abs(val),id});\r\n            else pos.insert({val,id});\r\n        }\r\n        else\r\n        {\r\n            int val1=pos.begin()->ff;\r\n            int id1=pos.begin()->ss;\r\n            int val2=neg.begin()->ff;\r\n            int id2=neg.begin()->ss;\r\n\r\n            pos.erase(pos.begin());\r\n            neg.erase(neg.begin());\r\n            if(val1<val2)val1+=x;\r\n            else val2+=x;\r\n\r\n            pos.insert({val1,id1});\r\n            neg.insert({val2,id2});\r\n        }\r\n    }\r\n\r\n    int ans[n];\r\n    for(auto p:pos)ans[p.ss]=p.ff;\r\n    for(auto p:neg)ans[p.ss]=-p.ff;\r\n\r\n    FOR(i,n)cout<<ans[i]<<\" \";\r\n}\r\n\r\nint main()\r\n{\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"test.in\", \"r\", stdin);\r\n    freopen(\"test.out\", \"w\", stdout);\r\n#endif\r\n    int t=1;\r\n    //scanf(\"%d\",&t);\r\n\r\n    while(t--)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}