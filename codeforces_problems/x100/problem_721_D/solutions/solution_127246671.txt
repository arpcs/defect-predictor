{
    "id": 127246671,
    "contestId": 721,
    "creationTimeSeconds": 1630138045,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "bkifhr7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 16486400,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e5;\nconst int M=5e6;\nconst int INF=0x3f3f3f3f;\nconst int mod=1e9+7;\nconst long long mod1=1e18;\nint n,x,k;\nlong long a[N+10];\nvector<pair<long long,int> >pos,zer,neg;\nstruct Node{\n\tlong long v;\n\tint idx;\n\tbool friend operator<(Node x,Node y){\n\t\treturn !(abs(x.v)<abs(y.v));\n\t}\n};\npriority_queue<Node>que;\nint main(){\n    ios::sync_with_stdio(0);\n    cin.tie(0),cout.tie(0);\n    cin>>n>>k>>x;\n    for(int i=1;i<=n;i++){\n    \tcin>>a[i];\n    \tif(a[i]==0)zer.push_back(make_pair(0,i));\n    \telse if(a[i]>0)pos.push_back(make_pair(a[i],i));\n    \telse neg.push_back(make_pair(a[i],i));\n\t}\n\tsort(pos.begin(),pos.end());\n\tsort(neg.begin(),neg.end());\n\tif((int)zer.size()>k){\n\t\tfor(int i=1;i<=n;i++)cout<<a[i]<<\" \";\n\t\treturn 0;\n\t}\n\t//if(n==5000)cout<<(int)pos.size()<<\" \"<<(int)neg.size()<<\" \"<<(int)zer.size()<<\"\\n\";\n\tif((int)neg.size()%2==0){\n\t\tif(!zer.empty()){\n\t\t\tpair<long long,int>p=zer.back();zer.pop_back();\n\t\t\ta[p.second]-=x;p.first-=x;\n\t\t\tneg.push_back(p);\n\t\t\tk--;\n\t\t}\n\t\telse{\n\t\t\tint negstep=INF,posstep=INF;\n\t\t\tlong long ne=0,po=0;\n\t\t\tif(!neg.empty()){\n\t\t\t\tint y=-neg.back().first;\n\t\t\t\tnegstep=(ceil(1.0*y/x)+(y%x==0?1:0));\n\t\t\t\tne=abs(y+1LL*negstep*x);\n\t\t\t}\n\t\t\tif(!pos.empty()){\n\t\t\t\tint y=pos[0].first;\n\t\t\t\tposstep=(ceil(1.0*y/x)+(y%x==0?1:0));\n\t\t\t\tpo=abs(y-1LL*posstep*x);\n\t\t\t}\n\t\t\t//if(n==5000)cout<<negstep<<\" \"<<posstep<<\"\\n\";\n\t\t\tif(negstep<posstep || (negstep==posstep && ne>=po)){\n\t\t\t\tpair<long long,int>p=neg.back();neg.pop_back();\n\t\t\t\ta[p.second]+=1LL*min(k,negstep)*x;\n\t\t\t\tk-=min(k,negstep);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tpair<long long,int>p=pos[0];\n\t\t\t\ta[p.second]-=1LL*min(k,posstep)*x;\n\t\t\t\tk-=min(k,posstep);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;i++)que.push((Node){a[i],i});\n\twhile(k){\n\t\tNode rec=que.top();que.pop();\n\t\tif(rec.v>=0)rec.v+=x;\n\t\telse rec.v-=x;\n\t\tque.push(rec);\n\t\tk--;\n\t}\n\twhile(!que.empty()){\n\t\tNode rec=que.top();que.pop();\n\t\ta[rec.idx]=rec.v;\n\t}\n\tfor(int i=1;i<=n;i++)cout<<a[i]<<\" \";\n\treturn 0;\n}\n\n\t\t\t\t \t \t \t     \t \t \t\t\t   \t"
}