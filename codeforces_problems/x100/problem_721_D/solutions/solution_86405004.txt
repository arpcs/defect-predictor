{
    "id": 86405004,
    "contestId": 721,
    "creationTimeSeconds": 1594365414,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "samplex"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 18841600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define fi first\r\n#define se second\r\n#define sz(x) static_cast<int>((x).size())\r\n#define all(x) (x).begin(), (x).end()\r\n\r\nusing ll = long long;\r\nusing ld = long double;\r\nusing pii = pair<int, int>;\r\n\r\ntemplate<class T> bool cmn(T &a, T b) { return a > b ? (a = b, true) : false; }\r\ntemplate<class T> bool cmx(T &a, T b) { return a < b ? (a = b, true) : false; }\r\n\r\nint main() {\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(NULL);\r\n\tint n;\r\n\tll x, k;\r\n\tcin >> n >> k >> x;\r\n\tvector<ll> vec(n);\r\n\tfor(ll& y: vec) cin >> y;\r\n\tint zcnt = count(all(vec), 0);\r\n\tint ncnt = 0;\r\n\tfor(int i = 0; i < n; ++i) if(vec[i] < 0) ncnt++;\r\n\tif(zcnt > k) {\r\n\t\tvec[0] += k * x;\r\n\t\tfor(ll y: vec) cout << y << ' ';\r\n\t\treturn 0;\r\n\t}\r\n\tk -= zcnt;\r\n\tfor(int i = 0; i < n; ++i) {\r\n\t\tif(vec[i] == 0) {\r\n\t\t\tif(ncnt % 2 == 0) {\r\n\t\t\t\tvec[i] -= x;\r\n\t\t\t\tncnt++;\r\n\t\t\t} else {\r\n\t\t\t\tvec[i] += x;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tset<pair<ll, int>> pos;\r\n\tfor(int i = 0; i < n; ++i) {\r\n\t\tpos.insert({abs(vec[i]), i});\r\n\t}\r\n\tif(ncnt % 2 == 0) {\r\n\t\tauto val = *pos.begin();\r\n\t\tif(vec[val.se] > 0) {\r\n\t\t\twhile(k > 0 && vec[val.se] >= 0) {\r\n\t\t\t\tk--;\r\n\t\t\t\tvec[val.se] -= x;\r\n\t\t\t}\r\n\t\t\tpos.insert({abs(vec[val.se]), val.se});\r\n\t\t} else {\r\n\t\t\twhile(k > 0 && vec[val.se] <= 0) {\r\n\t\t\t\tk--;\r\n\t\t\t\tvec[val.se] += x;\r\n\t\t\t}\r\n\t\t\tpos.insert({abs(vec[val.se]), val.se});\r\n\t\t}\r\n\t\tpos.erase(pos.begin());\r\n\t}\r\n\twhile(k > 0) {\r\n\t\tauto val = *pos.begin();\r\n\t\tif(vec[val.se] < 0) {\r\n\t\t\tvec[val.se] -= x;\r\n\t\t} else {\r\n\t\t\tvec[val.se] += x;\r\n\t\t}\r\n\t\tpos.insert({abs(vec[val.se]), val.se});\r\n\t\tpos.erase(pos.begin());\r\n\t\tk--;\r\n\t}\r\n\tfor(ll y: vec) cout << y << ' ';\r\n\treturn 0;\r\n}\r\n"
}