{
    "id": 98382512,
    "contestId": 721,
    "creationTimeSeconds": 1605361465,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "asdf1229"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 4710400,
    "source": "#include<bits/stdc++.h>\r\n#define loop(n,i) for(register int i=1;i<=(n);++i)\r\n#define zxc(x) cerr<<(#x)<<'='<<(x)<<'\\n'\r\n#define MAX 10009\r\nusing namespace std;\r\n\r\ninline int read(){\r\n\tchar c=getchar();int s=0;bool sign=0;\r\n\twhile(!isdigit(c)&&c^'-')c=getchar();\r\n\tif(c=='-') sign=1,c=getchar();\r\n\twhile(isdigit(c))s=(s<<1)+(s<<3)+c-'0',c=getchar();\r\n\treturn sign?-s:s;\r\n}\r\n\r\nstruct Node{\r\n\tint pos;\r\n\tint val;\r\n\tinline bool operator < (const Node &a) const{\r\n\t\treturn val > a.val;\r\n\t}\r\n};\r\n\r\npriority_queue<Node>q;\r\n\r\nint a[200305];\r\nint ans[200305];\r\n\r\nint main(){\r\n\tint n = read();\r\n\tint k = read();\r\n\tint x = read();\r\n\tint minn = 1e9, pos = 0;\r\n\tint num = 0;\r\n\tfor(int i = 1; i <= n; i++)\r\n\t{\r\n\t\ta[i] = read();\r\n\t\tif(minn > abs(a[i])){\r\n\t\t\tminn = abs(a[i]);\r\n\t\t\tpos = i;\r\n\t\t}\r\n\t\tif(a[i] < 0){\r\n\t\t\tnum++;\r\n\t\t}\r\n\t}\r\n\tif(num % 2 == 1){\r\n\t\tfor(int i = 1; i <= k; i++)\r\n\t\t{\r\n\t\t\tif(a[pos] < 0)\r\n\t\t\t{\r\n\t\t\t\ta[pos] -= x;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ta[pos] += x;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i = 1; i <= n; i++){\r\n\t\t\tprintf(\"%d \", a[i]);\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n//\tif(num % 2 == 0)\r\n\t\r\n\tint flag = 0;\r\n\t\r\n\tif(minn > 1ll * k * x){\r\n\t\tminn -= 1ll * k * x;\r\n\t\tif(a[pos] < 0) minn = -minn;\r\n\t\ta[pos] = minn;\r\n\t\tfor(int i = 1; i <= n; i++){\r\n\t\t\tprintf(\"%d \", a[i]);\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\twhile(k > 0){\r\n\t\t\tminn -= x;\r\n\t\t\tk--;\r\n\t\t\tif(minn < 0) break;\r\n\t\t}\r\n\t\tif(minn == 0 && k == 0)\r\n\t\t{\r\n\t\t\ta[pos] = 0;\r\n\t\t\tfor(int i = 1; i <= n; i++){\r\n\t\t\t\tprintf(\"%d \", a[i]);\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t//\tprintf(\"minn = %d\\n\", minn);\r\n\t\tif(a[pos] > 0)\r\n\t\ta[pos] = minn;\r\n\t\telse\r\n\t\ta[pos] = -minn;\r\n\t\r\n\t\r\n\tfor(int i = 1; i <= n; i++)\r\n\t{\r\n\t\tq.push((Node){i, abs(a[i])});\r\n\t}\r\n//\twhile(!q.empty()){\r\n//\t\tprintf(\"!! = %d\\n\", q.top().val);\r\n//\t\tq.pop();\r\n//\t}\r\n\t\r\n\t\r\n\tfor(int i = 1; i <= k; i++){\r\n\t\tNode u = q.top(); q.pop();\r\n\t\tu.val += x;\r\n\t\tif(a[u.pos] > 0)\r\n\t\ta[u.pos] = u.val;\r\n\t\telse\r\n\t\ta[u.pos] = -u.val;\r\n\t\tq.push(u);\r\n\t}\r\n\t\r\n\tfor(int i = 1; i <= n; i++){\r\n\t\tprintf(\"%d \", a[i]);\r\n\t}\r\n\treturn 0;\r\n}"
}