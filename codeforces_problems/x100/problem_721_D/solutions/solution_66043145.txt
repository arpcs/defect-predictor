{
    "id": 66043145,
    "contestId": 721,
    "creationTimeSeconds": 1575123371,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 6348800,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n#define mp make_pair\ntypedef long long ll;\ntypedef pair<int,int>pii;\ntypedef pair<ll,ll>pll;\n\nint main()\n{\n\tios_base::sync_with_stdio(false);\n\tcin.tie(NULL);\n\tll n,k,x;\n\tvector<ll>zero;\n\tcin >> n >> k >> x;\n\tll arr[n];\n\tpriority_queue<pll,vector<pll>,greater<pll> >pos;\n\tpriority_queue<pii>neg;\n\tfor(ll i=0;i<n;i++){\n\t\tcin >> arr[i];\n\t\tif(arr[i]>0)pos.push(mp(arr[i],i));\n\t\telse if(arr[i]<0)neg.push(mp(arr[i],i));\n\t\telse zero.push_back(i);\n\t}\n\twhile(!zero.empty()&&k){\n\t\tint sz2 = neg.size();\n\t\tif(sz2%2==0){\n\t\t\tneg.push(mp(-x,zero.back()));\n\t\t}\n\t\telse{\n\t\t\tpos.push(mp(x,zero.back()));\n\t\t}\n\t\tk--;\n\t\tzero.pop_back();\n\t}\n\twhile(k){\n\t\tint sz1 = pos.size();\n\t\tint sz2 = neg.size();\n\t\tif(sz2%2==0){\n\t\t\tll p,q;\n\t\t\tif(sz1)p = pos.top().first;\n\t\t\tif(sz2)q = neg.top().first;\n\t\t\tif(sz1==0||abs(q)<=abs(p)){\n\t\t\t\tpll now = neg.top();\n\t\t\t\twhile(now.first<=0&&k){\n\t\t\t\t\tnow.first += x;\n\t\t\t\t\tk--;\n\t\t\t\t}\n\t\t\t\tneg.pop();\n\t\t\t\tif(now.first>0)pos.push(now);\n\t\t\t\telse neg.push(now);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpll now = pos.top();\n\t\t\t\twhile(now.first>=0&&k){\n\t\t\t\t\tnow.first -= x;\n\t\t\t\t\tk--;\n\t\t\t\t}\n\t\t\t\tpos.pop();\n\t\t\t\tif(now.first<0)neg.push(now);\n\t\t\t\telse pos.push(now);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tint sz1 = pos.size();\n\t\t\tll p = pos.top().first;\n\t\t\tll q = neg.top().first;\n\t\t\tif(sz1==0||abs(q)<=abs(p)){\n\t\t\t\tk--;\n\t\t\t\tpll now = neg.top();\n\t\t\t\tnow.first -= x;\n\t\t\t\tneg.pop();\n\t\t\t\tneg.push(now);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tk--;\n\t\t\t\tpll now = pos.top();\n\t\t\t\tnow.first += x;\n\t\t\t\tpos.pop();\n\t\t\t\tpos.push(now);\n\t\t\t}\n\t\t}\n\t}\n\tll ans[n];\n\twhile(!pos.empty()){\n\t\tpll now = pos.top();\n\t\t//~ cout << now.first <<\"\\n\";\n\t\tpos.pop();\n\t\tans[now.second] = now.first;\n\t}\n\twhile(!neg.empty()){\n\t\tpll now = neg.top();\n\t\tneg.pop();\n\t\tans[now.second] = now.first;\n\t}\n\tfor(auto it:zero){\n\t\tans[it] = 0;\n\t}\n\tfor(int i=0;i<n;i++)cout << ans[i] << \" \";\n}\n\n   \t\t\t \t  \t\t \t\t \t    \t  \t\t \t\t"
}