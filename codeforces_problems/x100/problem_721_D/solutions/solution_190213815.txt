{
    "id": 190213815,
    "contestId": 721,
    "creationTimeSeconds": 1674482143,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "ptraffic1919810"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// LUOGU_RID: 100430049\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nnamespace ptraffic114514 {\r\n    typedef long long ll;\r\n    typedef pair < int, int > PII;\r\n    typedef int itn;\r\n//\tusing ll = long long;\r\n//\tusing PII = pair < int, int >;\r\n//\tusing itn = int;\r\n\t#define rep(i, a, b) for(int i = a;i <= b; ++ i)\r\n\t#define per(i, b, a) for(int i = b;i >= a; -- i)\r\n//\tmt19937 RND_MAKER (chrono :: steady_clock :: now ().time_since_epoch ().count ());\r\n//\tinline ll randomly (const ll l, const ll r) {return (RND_MAKER () ^ (1ull << 63)) % (r - l + 1) + l;}\r\n\t#define int long long\r\n\t//#define x first\r\n\t//#define y second\r\n\t//#define pq priority_queue\r\n\tconst double pi = acos (-1);\r\n\t/*\r\n\t__gnu_pbds :: tree <std :: pair< int, int > ,\r\n\t__gnu_pbds :: nuint_type, std :: less < std :: pair< int, int > >, __gnu_pbds :: rb_tree_tag,\r\n\t__gnu_pbds :: tree_order_statistics_node_update >\r\n\t*/\r\n\tnamespace IO {\r\n\t\tinline int read () {\r\n\t\t\tint x = 0, f = 0;\r\n\t\t\tchar c = getchar ();\r\n\t\t\tfor ( ; c < '0' || c > '9' ; c = getchar ()) f |= (c == '-');\r\n\t\t\tfor ( ; c >= '0' && c <= '9' ; c = getchar ()) x = (x << 1) + (x << 3) + (c ^ 48);\r\n\t\t\treturn f == 0 ? x : -x;\r\n\t\t}\r\n\t\tint container[24], siz;\r\n\t\tinline void print_int (int x) {\r\n\t\t\tsiz = 0;\r\n\t\t\tif (x == 0) {putchar ('0'); return ;}\r\n\t\t\tif (x < 0) {putchar ('-'); x = -x;}\r\n\t\t\twhile (x) {container[++ siz] = x % 10; x /= 10;}\r\n\t\t\tfor (int i = siz;i >= 1; -- i) putchar (container[i] + '0');\r\n\t\t}\r\n\t\tinline void print_str (string s) {for (int i = 0;i < s.size (); ++ i) putchar (s[i]);}\r\n\t\tinline void print_bol (bool x) {if (x) putchar ('1'); else putchar ('0');}\r\n\t\tinline void print_char (char c) {putchar (c);}\r\n\t\tinline void enter () {putchar ('\\n');}\r\n\t\tinline void space () {putchar (' ');}\r\n\t\tinline void ok (int _, int __, int ___) {\r\n\t\t\tif (_) putchar ('Y'); else putchar ('y');\r\n\t\t\tif (__) putchar ('E'); else putchar ('e');\r\n\t\t\tif (___) putchar ('S'); else putchar ('s');\r\n\t\t}\r\n\t\tinline void no (int _, int __) {\r\n\t\t\tif (_) putchar ('N'); else putchar ('n');\r\n\t\t\tif (__) putchar ('O'); else putchar ('o');\r\n\t\t}\r\n\t}\r\n\tusing namespace IO;\r\n\tconst int N = 200005;\r\n\tint n, k, x, a[N];\r\n\tstruct Node {\r\n\t\tint id;\r\n\t\tbool operator < (Node nw) {\r\n\t\t\treturn abs (a[id]) < abs (a[nw.id]);\r\n\t\t}\r\n\t\tNode (int x) {id = x;} \r\n\t};\r\n\tpriority_queue < Node > heap;\r\n\tint mns = 0;\r\n\tinline void main () {\r\n\t\tn = read (); k = read (); x = read ();\r\n\t\trep (i, 1, n) a[i] = read (), mns += (a[i] < 0), heap.push (i);\r\n\t\twhile (k --) {\r\n\t\t\tint u = heap.top ().id;\r\n\t\t\tNode tmp = heap.top ();\r\n\t\t\theap.pop ();\r\n\t\t\tif (a[u] < 0) {\r\n\t\t\t\tif (mns % 2 == 0) {\r\n\t\t\t\t\ta[u] += x;\r\n\t\t\t\t\tif (a[u] >= 0) mns --;\r\n\t\t\t\t}\r\n\t\t\t\telse a[u] -= x;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (mns % 2 == 0) {\r\n\t\t\t\t\ta[u] -= x;\r\n\t\t\t\t\tif (a[u] < 0) mns ++;\r\n\t\t\t\t}\r\n\t\t\t\telse a[u] += x;\r\n\t\t\t}\r\n\t\t\theap.push (u);\r\n\t\t}\r\n\t\trep (i, 1, n) print_int (a[i]), space ();\r\n\t\tenter ();\r\n\t}\r\n}\r\n//signed main () {\r\n//\tint _;\r\n//\tcin >> _;\r\n//\twhile (_ --) ptraffic114514 :: main ();\r\n//\treturn 0;\r\n//}\r\nsigned main () {return ptraffic114514 :: main (), 0;}\r\n/*\r\nthings to check:\r\n1.  int overflow || long long memory need\r\n2.  recursion / array / binary search / dp / loop bounds\r\n3.  precision problems (eps)\r\n4.  special cases (n = 0 [CSP-S 2020-zoo: do not need any animal], n = 1, bounds)\r\n5.  delete debug statements\r\n6.  array subscript (is it crossed ? [NOIP2022 plant 100->18])\r\n7.  multi-tests (clear! clear! clear!)\r\n8.  \"=\" or \"==\", \"n\" or \"m\", \"++\" or \"--\", \"i\" or \"j\", \">\" or \">=\", \"<\" or \"<=\"\r\n9.  keep it simple and stupid\r\n10. do not delete, use \"//\" instead\r\n11. operator priority\r\n12. is there anything extra to output?\r\n13. array size [CF843 2e5->1e5, pts-=50]\r\n14. is there a loop? [TLE]\r\n15. is there any hacks?\r\n16. do not use memset in codeforces (multi-tests && a[200005])\r\n17. do not use ordinary seeds for rand() [<math.h>, SA]\r\n18. ......\r\n*/"
}