{
    "id": 94276974,
    "contestId": 721,
    "creationTimeSeconds": 1601458277,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "rosseforp_ytrairom"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 46,
    "timeConsumedMillis": 296,
    "memoryConsumedBytes": 9830400,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <vector>\r\n#include <set>\r\n#include <map>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\n#include <queue>\r\n#include <ctime>\r\n#include <cassert>\r\n#include <complex>\r\n#include <string>\r\n#include <cstring>\r\n#include <chrono>\r\n#include <random>\r\n#include <bitset>\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\nusing ld = long double;\r\nusing uint = unsigned int;\r\nusing ull = unsigned long long;\r\ntemplate<typename T>\r\nusing pair2 = pair<T, T>;\r\nusing pii = pair<int, int>;\r\nusing pli = pair<ll, int>;\r\nusing pll = pair<ll, ll>;\r\n\r\n#define sz(x) (int) x.size()\r\n#define all(x) (x).begin(),(x).end()\r\n\r\nconst int N = 200020;\r\nll a[N], n, k, x, s;\r\n\r\nvoid win() {\r\n    for (int i = 0; i < n; ++i)\r\n        printf(\"%lld \", a[i]);\r\n    printf(\"\\n\");\r\n    exit(0);\r\n}\r\n\r\nvoid algo() {\r\n    set<pll> s;\r\n    for (int i = 0; i < n; ++i) {\r\n        s.insert({ abs(a[i]), i });\r\n    }\r\n    while (k--) {\r\n        auto f = *s.begin();\r\n        s.erase(f);\r\n        if (a[f.second] < 0) {\r\n            a[f.second] -= x;\r\n        }\r\n        else {\r\n            a[f.second] += x;\r\n        }\r\n        s.insert({ abs(a[f.second]), f.second });\r\n    }\r\n}\r\n\r\nint main() {\r\n    scanf(\"%lld %lld %lld\", &n, &k, &x);\r\n\r\n    int sign = 1;\r\n\r\n    for (int i = 0; i < n; ++i) {\r\n        scanf(\"%lld\", &a[i]);\r\n        if (a[i] == 0) s++;\r\n        if (a[i] < 0) sign *= -1;\r\n    }\r\n\r\n    if (s > 0) {\r\n        if (k < s) win();\r\n        for (int i = 0; i < n; ++i) {\r\n            if (a[i]) continue;\r\n            k--;\r\n            if (sign == 1) {\r\n                a[i] -= x;\r\n                sign = -1;\r\n            }\r\n            else {\r\n                a[i] += x;\r\n            }\r\n        }\r\n        algo();\r\n        win();\r\n    }\r\n    \r\n    if (sign == -1) {\r\n        algo();\r\n        win();\r\n    }\r\n\r\n    int pos, inf = 1e9;\r\n    for (int i = 0; i < n; ++i) {\r\n        if (abs(a[i]) < inf) {\r\n            inf = abs(a[i]);\r\n            pos = i;\r\n        }\r\n    }\r\n\r\n    int need = ((abs(a[pos]) + 1 + x - 1) / x);\r\n\r\n    if (need >= k) {\r\n        if (a[pos] < 0) {\r\n            a[pos] += k * x;\r\n        }\r\n        else {\r\n            a[pos] -= k * x;\r\n        }\r\n        win();\r\n    }\r\n\r\n    k -= need;\r\n    if (a[pos] < 0) {\r\n        a[pos] += need * x;\r\n    }\r\n    else {\r\n        a[pos] -= need * x;\r\n    }\r\n    algo();\r\n    win();\r\n\r\n    return 0;\r\n}"
}