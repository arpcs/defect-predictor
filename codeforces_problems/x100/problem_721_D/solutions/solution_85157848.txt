{
    "id": 85157848,
    "contestId": 721,
    "creationTimeSeconds": 1593198640,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "ujju_sucks"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 327,
    "memoryConsumedBytes": 18636800,
    "source": "//#pragma optimization_level 3\r\n//#pragma GCC optimize(\"Ofast,no-stack-protector\")\r\n//#pragma GCC optimize(\"unroll-loops\")\r\n//#pragma GCC optimize(\"fast-math\")\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long int ll;\r\n#define mod 1000000007\r\n#include<string.h>\r\n#define inf 1000000000000000000\r\n#define maxn 200005\r\ntypedef pair<ll,ll> pll;\r\ntypedef pair<int,int> pint;\r\n#define PI 3.14159265359\r\n#define endl '\\n'\r\n#define mapint_iterator map<int,int> :: iterator\r\n#define mapll_iterator map<ll,ll> :: iterator\r\n#define setint_iterator set<int> :: iterator\r\n#define setll_iterator set<ll> :: iterator\r\n#define cps CLOCKS_PER_SEC\r\n#define setpint_iterator set<pint> :: iterator\r\n#define setpll_iterator set<pll> :: iterator\r\n#define cout1(a) cout<<a<<endl\r\n#define cout2(a,b) cout<<a<<' '<<b<<endl\r\n#define cout3(a,b,c) cout<<a<<\" \"<<b<<\" \"<<c<<endl\r\n#define cout4(a,b,c,d) cout<<a<<\" \"<<b<<\" \"<<c<<\" \"<<d<<endl\r\n#define vcout(v,i) cout<<v[i].fi<<\" \"<<v[i].se<<endl\r\n#define print_double(i) printf(\"%.9llf\\n\",i)\r\ntypedef priority_queue<ll,vector<ll>,greater<ll> > pqset;\r\ntypedef priority_queue<pll,vector<pll>,greater<pll> > pqset_ll;\r\n#define pb push_back\r\n#define pf push_front\r\n#define fi first\r\n#define mkp make_pair\r\n#define se second\r\nll dxk[]={0,0,1,-1,1,1,-1,-1};\r\nll dyk[]={1,-1,0,0,1,-1,1,-1};\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\ntypedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> os;\r\ntypedef tree<pll,null_type,less<pll>,rb_tree_tag,tree_order_statistics_node_update> os_pair;\r\n#define acc (ios::sync_with_stdio(false),cin.tie(0))\r\n#define rep(i,n) for(ll i=0;i<n;i++)\r\n#define per(i,n) for(ll i=n-1;i>=0;i--)\r\n#define rep1(i,n) for(ll i=1;i<=n;i++)\r\n#define per1(i,n) for(ll i=n;i>0;i--)\r\n#define repeat(i,start,n) for(ll i=start;i<n;i++)\r\n#define power2(i) ((ll)1<<(ll)i)\r\nll ll_max(ll a,ll b,ll c){return max(a,max(b,c));}\r\nint int_max(int a,int b,int c){return max(a,max(b,c));}\r\nll ll_min(ll a,ll b,ll c){return min(a,min(b,c));}\r\nint int_min(int a,int b,int c){return min(a,min(b,c));}\r\nll max(int a,ll b){ return max((ll)a,b);}\r\nll min(int a,ll b){ return min((ll)a,b);} \r\nll min(ll a,int b){ return min(a,(ll)b);}\r\nll max(ll a,int b){ return max(a,(ll)b);}\r\nll dx[]={0,0,1,-1};\r\nll dy[]={1,-1,0,0};\r\nll power(ll a,ll b){\r\n\tif(a==1)\r\n\t\treturn 1;\r\n\tif(b==0)\r\n\t\treturn 1;\r\n\tll c=power(a,b/2);\r\n\tll res=1;\r\n\tif(b%2){\r\n\t\tres=(c*c);\r\n\t\tif(res>=mod)\r\n\t\t\tres%=mod;\r\n\t\tres*=a;\r\n\t}\r\n\telse\r\n\t\tres=((c*c));\r\n\tif(res>=mod)\r\n\t\tres%=mod;\r\n\treturn res;\r\n}\r\nll power(ll a,ll b,ll mod1){\r\n\tif(a==1)\r\n\t\treturn 1;\r\n\tif(b==0)\r\n\t\treturn 1;\r\n\tll c=power(a,b/2,mod1);\r\n\tll res=1;\r\n\tif(b%2){\r\n\t\tres=(c*c);\r\n\t\tif(res>=mod1)\r\n\t\t\tres%=mod1;\r\n\t\tres*=a;\r\n\t}\r\n\telse\r\n\t\tres=((c*c));\r\n\tif(res>=mod1)\r\n\t\tres%=mod1;\r\n\treturn res;\r\n}\r\nll modInv(ll a){return power(a,mod-2);}\r\nll fact[1],inv[1];\r\nvoid factorial(ll n){\r\n\tfact[0]=1;\r\n\tfor(ll i=1;i<=n;i++){\r\n\t\tfact[i]=fact[i-1]*i;\r\n\t\tif(fact[i]>=mod)\r\n\t\t\tfact[i]%=mod;\r\n\t}\r\n}\r\nvoid InvFactorial(ll n){\r\n\tinv[0]=1;\r\n\tfor(ll i=1;i<=n;i++)\r\n\t\tinv[i]=modInv(fact[i]);\r\n}\r\nll ncr(ll n,ll r){\r\n\tif(n<r||n<0||r<0)\r\n\t\treturn 0;\r\n\tll b=inv[n-r];\r\n\tll c=inv[r];\r\n\tll a=fact[n]*b;\r\n\tif(a>=mod)\r\n\t\ta%=mod;\r\n\ta*=c;\r\n\tif(a>=mod)\r\n\t\ta%=mod;\r\n\treturn a;\r\n}\r\nbool prime[1];\r\nvector<int> primes;\r\nvoid sieve(ll n){\r\n    memset(prime,true,sizeof(prime));\r\n\tprime[1]=false; \r\n    for (ll p=2;p*p<=n;p++){\r\n        if (prime[p]){  \r\n            for (ll i=p*p;i<=n;i+=p)\r\n                prime[i]=false;\r\n        }\r\n    }\r\n    repeat(i,2,n+1)\r\n    \tif(prime[i])\r\n    \t\tprimes.pb(i);\r\n}\r\n//ifstream cin(\"b_read_on.txt\"); ofstream cout(\"output3.txt\");\r\n//Use (<<) for multiplication\r\n//Use (>>) for division\r\n//ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);cout<<fixed;cerr.tie(NULL);\r\n// find_by_order -> value at index\r\n// order_of_key -> index of value\r\n// while using (1<<i) use ((ll)1<<(ll)i) \r\n// in Floyd-Warshall Algo, k is outer loop \r\n// If an element was not initially in map and if asked mp[a],the element gets inserted \r\n// a%=mod take a lot of time... try to use it minimum and use memset as it reduces a lot of time usage...use if(a>=mod) a%=mod\r\n//cout<<(double) can be harmful , always use printf(%.9llf)...take scanf(\"%lf\",&p[i][j]) as input , not llf;\r\n//use s.erase(it++) for erasing iterator and then moving to the next one\r\n//never use adj.resize(n) as value is persistent, always erase\r\n//use __builtin_popcountll() for ll\r\n// no of prime numbers in range : (70,19) , (1000,168) , (100000,1229) , (sqrt(10^9),3409) ;\r\n//always check the use of segment tree using bottom-up dp\r\n//__gcd(0,0) gives runtime error\r\n//power(a,b) == power(a,b%phi(a)) Fermet's Theorem\r\n//never use \"=\" operator in compare function\r\n//For checking odd cycles, check bipartite\r\nll n,k,x;\r\nvector<ll> odd_parity(vector<ll> v){\r\n\tset<pair<ll,pll> > s;\r\n\trep(i,v.size())\r\n\t\ts.insert({abs(v[i]),{v[i],i}});\r\n\trep(i,k){\r\n\t\tset<pair<ll,pll> > :: iterator it=s.begin();\r\n\t\tpair<ll,pll> p=(*it);\r\n\t\ts.erase(it);\r\n\t\tp.first+=x;\r\n\t\tif(p.second.fi<0)\r\n\t\t\tp.se.fi-=x;\r\n\t\telse\r\n\t\t\tp.se.fi+=x;\r\n\t\ts.insert(p);\r\n\t}\r\n\tvector<ll> v1(n);\r\n\tset<pair<ll,pll> > :: iterator it=s.begin();\r\n\twhile(it!=s.end()){\r\n\t\tv1[(*it).se.se]=(*it).se.fi;\r\n\t\tit++;\r\n\t}\r\n\treturn v1;\r\n}\r\nvector<ll> even_parity(vector<ll> v){\r\n\tset<pair<ll,pll> > s;\r\n\trep(i,v.size())\r\n\t\ts.insert({abs(v[i]),{v[i],i}});\r\n\trep(i,k){\r\n\t\tset<pair<ll,pll> > :: iterator it=s.begin();\r\n\t\tpair<ll,pll> p=(*it);\r\n\t\ts.erase(it);\r\n\t\tp.first-=x;\r\n\t\tif(p.second.fi<0)\r\n\t\t\tp.se.fi+=x;\r\n\t\telse\r\n\t\t\tp.se.fi-=x;\r\n\t\ts.insert(p);\r\n\t}\r\n\tvector<ll> v1(n);\r\n\tset<pair<ll,pll> > :: iterator it=s.begin();\r\n\twhile(it!=s.end()){\r\n\t\tv1[(*it).se.se]=(*it).se.fi;\r\n\t\tit++;\r\n\t}\r\n\treturn v1;\r\n}\r\nvoid solve(int countu){\t\r\n\tcin>>n>>k>>x;\r\n\tvector<ll> v(n);\r\n\tint neg=0,pos=0,zeroes=0;\r\n\tll maxx=-inf;\r\n\tll minn=inf;\r\n\trep(i,n){\r\n\t\tcin>>v[i];\r\n\t\tif(v[i]<0){\r\n\t\t\tneg++;\r\n\t\t\tmaxx=max(maxx,v[i]);\r\n\t\t}\r\n\t\telse if(v[i]>0){\r\n\t\t\tpos++;\r\n\t\t\tminn=min(minn,v[i]);\r\n\t\t}\r\n\t\telse\r\n\t\t\tzeroes++;\r\n\t}\r\n\tif(neg%2){\r\n\t\tv=odd_parity(v);\r\n\t\trep(i,n)\r\n\t\t\tcout<<v[i]<<' ';\r\n\t\tcout<<endl;\r\n\t\treturn;\r\n\t}\r\n\tif(zeroes>0)\r\n\t\tminn=maxx=0;\r\n\tif(minn<abs(maxx)){\r\n\t\tif((minn/x)+1<=k){\r\n\t\t\tll minn1=minn-((minn/x)+1)*x;\r\n\t\t\tk-=(minn/x)+1;\r\n\t\t\trep(i,n){\r\n\t\t\t\tif(v[i]==minn){\r\n\t\t\t\t\tv[i]=minn1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tv=odd_parity(v);\r\n\t\t\trep(i,n)\r\n\t\t\t\tcout<<v[i]<<' ';\r\n\t\t\tcout<<endl;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tv=even_parity(v);\r\n\t\trep(i,n)\r\n\t\t\tcout<<v[i]<<' ';\r\n\t\tcout<<endl;\r\n\t\treturn;\r\n\t}\r\n\tminn=-maxx;\r\n\tif((minn/x)+1<=k){\r\n\t\t\tll minn1=minn-((minn/x)+1)*x;\r\n\t\t\tk-=(minn/x)+1;\r\n\t\t\trep(i,n){\r\n\t\t\t\tif(v[i]==-minn){\r\n\t\t\t\t\tif(minn!=0)\r\n\t\t\t\t\t\tv[i]=-minn1;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tv[i]=minn1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tv=odd_parity(v);\r\n\t\t\trep(i,n)\r\n\t\t\t\tcout<<v[i]<<' ';\r\n\t\t\tcout<<endl;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tv=even_parity(v);\r\n\t\trep(i,n)\r\n\t\t\tcout<<v[i]<<' ';\r\n\t\tcout<<endl;\r\n\t\treturn;\r\n}\r\nint main(){\r\n\tcin.tie(NULL);cout.tie(NULL);cin.sync_with_stdio(0);cout.sync_with_stdio(0);cout<<fixed;\r\n\tsrand(time(0));\r\n\tcout.precision(9);\r\n\tint t=1;\r\n\t//cin>>t;\r\n\tint countu=1;\r\n    for(int i=1;i<=t;i++){\r\n    \tsolve(countu);\r\n    \tcountu++;\r\n    }\r\n}\r\n\r\n"
}