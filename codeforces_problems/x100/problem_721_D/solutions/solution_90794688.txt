{
    "id": 90794688,
    "contestId": 721,
    "creationTimeSeconds": 1598243394,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 5324800,
    "source": "#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<stack>\n#include<algorithm> \n#include<vector>\n#include<map>\n#include<string>\n#include<cmath>\n#include<set> \n#include<iostream>\n#include<list> \n#include<unordered_set>\n#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\nusing namespace std;\ntypedef long long ll;\nconst ll mod = 998244353;\nconst int maxn = 2e5+5;\nstruct qnode{\n\tll val;\n\tint in;\n\tll v;\n\tqnode(ll _val=0,int _in=0,ll _v=0){\n\t\tval = _val;\n\t\tin = _in;\n\t\tv = _v;\n\t}\n\tbool operator <(const qnode& n)const{\n\t\treturn val>n.val;\n\t}\n};\npriority_queue<qnode> quemn;\nll a1[maxn];\nint main() {\n\t//IOS; \n//\tfreopen(\"G.in\",\"r\",stdin);\n//\tfreopen(\"out.txt\",\"w\",stdout);\n\tint len;\n\tll k,x;\n\tscanf(\"%d%lld%lld\",&len,&k,&x);\n\tll mn = 1e9+5;\n\tint index=0;\n\tint cnt=0; \n\tfor(int i=1;i<=len;i++){\n\t\tscanf(\"%lld\",&a1[i]);\n\t\tif(a1[i]<0) cnt++;\n\t\tquemn.push(qnode(abs(a1[i]),i,a1[i]));\n\t}\n\tif(cnt%2==0){\n\t\tqnode tmp = quemn.top();\n\t\tquemn.pop();\n\t\tll ele = tmp.val;\n\t\tif(ele-k*x<0){\n\t\t\tll ele1 = ele/x;\n\t\t\tele1++;\n\t\t\tk-=ele1;\n\t\t\tif(tmp.v>0) a1[tmp.in] = a1[tmp.in] - ele1*x;\n\t\t\telse a1[tmp.in] = a1[tmp.in] + ele1*x;\n\t\t\tquemn.push(qnode(abs(a1[tmp.in]),tmp.in,a1[tmp.in]));\n\t\t\twhile(k>0 && !quemn.empty()){\n\t\t\t\ttmp = quemn.top();\n\t\t\t\tquemn.pop();\n\t\t\t\tif(a1[tmp.in]-x>0){\n\t\t\t\t\tif(tmp.v>0) a1[tmp.in] = a1[tmp.in] - x;\n\t\t\t\t\telse a1[tmp.in] = a1[tmp.in] + x;\n\t\t\t\t\tquemn.push(qnode(abs(a1[tmp.in]),tmp.in,a1[tmp.in]));\n\t\t\t\t\tk--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(tmp.v>0) a1[tmp.in] = a1[tmp.in] - k*x;\n\t\t\telse a1[tmp.in] = a1[tmp.in] + k*x;\n\t\t}\n\t}\n\telse{\n\t\tqnode tmp;\n\t\twhile(k>0 && !quemn.empty()){\n\t\t\ttmp = quemn.top();\n\t\t\tquemn.pop();\n\t\t\tif(a1[tmp.in]-x>0){\n\t\t\t\tif(tmp.v>0) a1[tmp.in] = a1[tmp.in] - x;\n\t\t\t\telse a1[tmp.in] = a1[tmp.in] + x;\n\t\t\t\tquemn.push(qnode(abs(a1[tmp.in]),tmp.in,a1[tmp.in]));\n\t\t\t\tk--;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=len;i++){\n\t\tprintf(\"%lld \",a1[i]);\n\t}\n\tprintf(\"\\n\");\n}\n\t  \t  \t\t  \t\t \t\t    \t \t\t \t  \t\t \t"
}