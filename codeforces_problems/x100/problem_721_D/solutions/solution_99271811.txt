{
    "id": 99271811,
    "contestId": 721,
    "creationTimeSeconds": 1606067086,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "sam997"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "//\r\n//  main.cpp\r\n//  A\r\n//\r\n//  Created by E SAMEER KUMAR on 09/04/20.\r\n//  Copyright \u00a9 2020 E SAMEER KUMAR. All rights reserved.\r\n\r\n#include <bits/stdc++.h>\r\nusing ll = long long;\r\nusing ld = long double;\r\nusing namespace std;\r\n//map<int,vector<int>> tree;\r\n//map<int,vector<int>> rooted;\r\n//map<int,int> primes;\r\nvoid debugi(vector<int> & vec){\r\n    int n=(int)vec.size();\r\n    for(int i=0;i<n;i++){\r\n        cout<<vec[i]<<\" \";\r\n    }\r\n    cout<<endl;\r\n}\r\nvoid debugd(vector<long double> & vec){\r\n    int n=(int)vec.size();\r\n    for(int i=0;i<n;i++){\r\n        cout<<vec[i]<<\" \";\r\n    }\r\n    cout<<endl;\r\n}\r\nvoid debugl(vector<ll> & vec){\r\n    int n=(int)vec.size();\r\n    for(int i=0;i<n;i++){\r\n        cout<<vec[i]<<\" \";\r\n    }\r\n    cout<<endl;\r\n}\r\nvoid debugmap(map<int,int> & mp){\r\n    for(auto x:mp){\r\n        cout<<x.first<<\" \"<<x.second<<\" , \";\r\n    }\r\n    cout<<endl;\r\n}\r\nvoid debugset(set<int> & st){\r\n    for(auto x: st){\r\n        cout<<x<<\" \";\r\n    }\r\n    cout<<endl;\r\n}\r\nvoid debugparri(vector<pair<int, int>>& arr){\r\n    for(int i=0;i<(int)arr.size();i++){\r\n        cout<<\"[\"<<arr[i].first<<\" : \"<<arr[i].second<<\"]\"<<\" \";\r\n    }\r\n    cout<<endl;\r\n}\r\nvoid debugpi(pair<int, int> &pi){\r\n    cout<<pi.first<<\" \"<<pi.second<<endl;\r\n}\r\nvoid debugq(queue<int> q){\r\n    while(!q.empty()){\r\n        cout<<q.front()<<\" \";\r\n        q.pop();\r\n    }\r\n    cout<<endl;\r\n}\r\n\r\nbool check(int n,int i,int j){\r\n    if((0<=i & i<n) && (0<=j & j<n)){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nll MOD = 1e9+7;\r\n// ll mod = 998244353;\r\nll powab(ll a,ll b,ll mod){\r\n    if(b==0){\r\n        return 1;\r\n    }\r\n    ll z=powab(a, b/2, mod);\r\n    ll res=(z*z*1LL)%mod;\r\n    if(b&1){\r\n        res=(res*1LL*a)%mod;\r\n    }\r\n    return res;\r\n}\r\n// char s[100006];\r\n// int m=200005;\r\n// int p;\r\n//int mod(int x,int mod){\r\n//    if(x<0){\r\n//        return mod-(x%mod);\r\n//    }\r\n//    else{\r\n//        return x%mod;\r\n//    }\r\n//}\r\n//ll modinv(ll a){\r\n//    ll ans=powab(a, mod-2, mod);\r\n//    return ans;\r\n//}\r\n\r\n// int lim=10;\r\n// int n;\r\n// vector<vector<pair<int,ll>>>g(lim);\r\n// vector<int> vis(lim);\r\n// vector<ll> dp(lim),a(lim);\r\n// int dia=0,node=0;\r\n// int ind = 0;\r\nll gcd(ll a, ll b){\r\n    if(b==0){\r\n        return a;\r\n    }\r\n    return gcd(b,a%b);\r\n}\r\nvoid upd(int k, int x,vector<ll>& tree,int n){\r\n//    cout<<k<<\" k \"<<endl;\r\n    if(k==0){\r\n        return;\r\n    }\r\n//    cout<<k<<\" k \"<<endl;ks\r\n    while(k<=n){\r\n//        cout<<k<<\" kk \"<<endl;\r\n        tree[k]+=x;\r\n        k+=(k&-k);\r\n    }\r\n}\r\nll sum(int k,vector<ll>& tree,int n){\r\n    ll s=0;\r\n    while(k>=1){\r\n        s+=tree[k];\r\n        k-=(k&-k);\r\n    }\r\n    return s;\r\n}\r\n// vector<int> near(200005);\r\n// void fill(){\r\n//     for(int i = 2; i * i < 200005; i++){\r\n//         if(near[i] == 0){\r\n//             for(int j = i; j < 200005; j+=i){\r\n//                 near[j]=i;\r\n//             }\r\n//         }\r\n//     }\r\n// }\r\n// map<int,int> mp;\r\n// vector<vector<int>> arr(10000005);\r\nll mod = 998244353;\r\n// map<int, int> vis;\r\nvoid solve(int tt){\r\n    ll n, k, x;\r\n    cin >> n >> k >> x;\r\n    vector<ll> arr(n);\r\n    for(int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n    }\r\n\r\n    // debugi(arr);\r\n\r\n    vector<pair<ll, ll>> pos, neg, zero;\r\n    for(int i = 0; i < n; i++){\r\n        if(arr[i] > 0){\r\n            pos.push_back({arr[i], i});\r\n            continue;\r\n        }\r\n        if(arr[i] < 0){\r\n            neg.push_back({arr[i], i});\r\n            continue;\r\n        }\r\n        zero.push_back({arr[i], i});\r\n    }\r\n\r\n    // cout << \"done \" << endl;\r\n    // cout << (int) neg.size() << endl;\r\n    if((int)neg.size() % 2 != 0){\r\n        if(n == 7883){\r\n            // cout << \" in neg even \" << endl;\r\n            cout << z << \" z \" << p << \" p \" << ne << \" neg \" << endl;\r\n            return;\r\n        }\r\n        \r\n        int cnt = 0;\r\n        if(k < (int)zero.size()){\r\n            while(k > 0){\r\n                    arr[0] += x;\r\n                    k -= 1;\r\n            }\r\n            debugl(arr);\r\n            return;\r\n        }\r\n        int z = zero.size(), p = pos.size(), ne = neg.size();\r\n        // cout << z << \" z \" << p << \" p \" << ne << \" neg \" << endl;\r\n        for(int i = 0; i < z; i++){\r\n            k -= 1;\r\n            arr[zero[i].second] += x;\r\n            zero[i].first += x;\r\n        }\r\n        // cout << \" 11111 \" << endl;\r\n        priority_queue<pair<ll ,pair<ll , ll>>> pq;\r\n        for(int i = 0; i < z; i++){\r\n            pq.push({-zero[i].first, {zero[i].second, 1}});\r\n        }\r\n        for(int i = 0; i < p; i++){\r\n            pq.push({-pos[i].first, {pos[i].second, 1}});\r\n        }\r\n        for(int i = 0; i < ne; i++){\r\n            pq.push({neg[i].first, {neg[i].second, 0}});\r\n        }\r\n        while(k > 0){\r\n            // cout << k << \" k \" << endl;\r\n            int val = pq.top().first, ind = pq.top().second.first, sign = pq.top().second.second;\r\n            pq.pop();\r\n            if(sign){\r\n                arr[ind] += x;\r\n                k -= 1;\r\n                val -= x;\r\n                pq.push({val, {ind, 1}});\r\n            }\r\n            else{\r\n                arr[ind] -= x;\r\n                k -= 1;\r\n                val -= x;\r\n                pq.push({val, {ind, 0}});\r\n            }\r\n        }\r\n        debugl(arr);\r\n        return;\r\n    }\r\n    else{\r\n\r\n        ll z = zero.size(), p = pos.size(), ne = neg.size();\r\n        // cout << z << \" z \" << p << \" p \" << ne << \" neg \" << endl;\r\n        priority_queue<pair<ll , pair<ll, ll>>> pq;\r\n        if(z > 0){\r\n            zero[0].first -= x;\r\n            k -= 1;\r\n            arr[zero[0].second] -= x;\r\n            pq.push({-x, {zero[0].second, 0}});\r\n            for(int i = 1; i < z; i++){\r\n                pq.push({-zero[i].first, {zero[i].second, 1}});\r\n            }\r\n            // cout << \" zero \" << endl;\r\n            for(int i = 0; i < p; i++){\r\n                pq.push({-pos[i].first, {pos[i].second, 1}});\r\n            }\r\n            for(int i = 0; i < ne; i++){\r\n                pq.push({neg[i].first, {neg[i].second, 0}});\r\n            }\r\n        }\r\n        else{\r\n            ll posmin = 1e9 + 1, negmax = -1e9 - 1;\r\n            ll posind = -1, negind = -1;\r\n\r\n            for(int i = 0; i < p; i++){\r\n                if(posmin > pos[i].first){\r\n                    posind = pos[i].second;\r\n                }\r\n                posmin = min(posmin, pos[i].first);\r\n            }\r\n            for(int i = 0; i < ne; i++){\r\n                if(negmax < neg[i].first){\r\n                    negind = neg[i].second;\r\n                }\r\n                negmax = max(negmax, neg[i].first);\r\n            }\r\n            // if(n == 109488){\r\n            //     cout << posmin << \" posmin \" << posind << \" posind \" << endl;\r\n            //     cout << negmax << \" negmax \" << negind << \" negind \" << endl;\r\n            //     return;\r\n            // }\r\n            // cout << posmin << \" posmin \" << negmax << \" negmax \" << posind << \" posind \" << negind << \" negind \" << endl;\r\n            if(ne == 0 || (abs(posmin) < abs(negmax))){\r\n                ll val = posmin;\r\n                while(k > 0 && val >= 0){\r\n                    val -= x;\r\n                    arr[posind] -= x;\r\n                    k -= 1;\r\n                }\r\n                // cout << \" pq push \" << endl;\r\n                pq.push({val, {posind, 0}});\r\n                negind = -1;\r\n            }\r\n            else{\r\n                ll val = negmax;\r\n                while(val <= 0 && k > 0){\r\n                    val += x;\r\n                    arr[negind] += x;\r\n                    k -= 1;\r\n                }\r\n                posind = -1;\r\n                pq.push({-val, {negind, 1}});\r\n            }\r\n            for(int i = 0; i < p; i++){\r\n                if(pos[i].second != posind){\r\n                    pq.push({-pos[i].first, {pos[i].second, 1}});\r\n                }\r\n            }\r\n            for(int i = 0; i < ne; i++){\r\n                if(neg[i].second != negind){\r\n                    pq.push({neg[i].first, {neg[i].second, 0}});\r\n                }\r\n            }\r\n        }\r\n        while(k > 0){\r\n            int val = pq.top().first, ind = pq.top().second.first, sign = pq.top().second.second;\r\n            // cout << val << \" val \" << ind << \" ind \" << sign << \" sign \" << endl;\r\n            pq.pop();\r\n            if(sign){\r\n                arr[ind] += x;\r\n                k -= 1;\r\n                val -= x;\r\n                pq.push({val, {ind, 1}});\r\n            }\r\n            else{\r\n                arr[ind] -= x;\r\n                k -= 1;\r\n                val -= x;\r\n                pq.push({val, {ind, 0}});\r\n            }\r\n        }\r\n        debugl(arr);\r\n        return;\r\n    }\r\n\r\n}\r\nint main(int argc, const char * argv[]) {\r\n    // insert code here...\r\n    // ofstream file;\r\n    ios_base::sync_with_stdio(false); \r\n    cin.tie(NULL);\r\n    int t;\r\n    // cin >> t;\r\n    t = 1;\r\n    for(int tt=0;tt<t;tt++){\r\n        solve(tt);\r\n    }\r\n    \r\n\r\n    return 0;\r\n}"
}