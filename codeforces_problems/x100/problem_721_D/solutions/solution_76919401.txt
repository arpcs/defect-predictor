{
    "id": 76919401,
    "contestId": 721,
    "creationTimeSeconds": 1587002713,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "HANGANG"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 47,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 19353600,
    "source": "#include<bits/stdc++.h>\r\n#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#include<algorithm>\r\n#include<vector>\r\n#include<queue>\r\nusing namespace std;\r\n#define LL long long\r\nconst int N=2e5+10;\r\nstruct zxc\r\n{\r\n    LL x,y,id;\r\n    friend bool operator < (zxc q,zxc w)\r\n    {\r\n        return q.x>w.x;\r\n    }\r\n}a[N],b[N];\r\nbool cmp(zxc s,zxc d)\r\n{\r\n    return s.id<d.id;\r\n}\r\npriority_queue<zxc>q;\r\nint main()\r\n{\r\n   LL n,m,w;\r\n   LL flog=0;\r\n   scanf(\"%lld%lld%lld\",&n,&w,&m);\r\n   for(LL i=1;i<=n;i++)\r\n   {\r\n       scanf(\"%lld\",&a[i].y);\r\n       if(a[i].y<0)\r\n       {\r\n           a[i].x=-a[i].y;\r\n           flog++;\r\n       }\r\n       else\r\n       {\r\n           a[i].x=a[i].y;\r\n       }\r\n       a[i].id=i;\r\n       q.push(a[i]);\r\n   }\r\n   zxc k;\r\n   if(flog%2==0)\r\n   {\r\n       k=q.top();\r\n       q.pop();\r\n       if(k.y<0)\r\n       {\r\n           LL num=k.y/m+1;\r\n           if(w>=num)\r\n           {\r\n              w-=num;\r\n              k.y+=num*m;\r\n           }\r\n           else\r\n           {\r\n               k.y+=w*m;\r\n               w=0;\r\n           }\r\n           k.x=abs(k.y);\r\n       }\r\n       else\r\n       {\r\n           LL num=k.y/m+1;\r\n           if(w>=num)\r\n           {\r\n              w-=num;\r\n              k.y-=num*m;\r\n           }\r\n           else\r\n           {\r\n               k.y-=w*m;\r\n               w=0;\r\n           }\r\n           k.x=abs(k.y);\r\n\r\n       }\r\n       q.push(k);\r\n   }\r\n\r\n   for(LL i=1;i<=w;i++)\r\n   {\r\n       k=q.top();\r\n       q.pop();\r\n       if(k.y<0)\r\n       {\r\n           k.y-=m;\r\n           k.x+=m;\r\n       }\r\n       else\r\n       {\r\n           k.y+=m;\r\n           k.x+=m;\r\n       }\r\n       q.push(k);\r\n   }\r\n   LL num=1;\r\n   while(!q.empty())\r\n   {\r\n       b[num++]=q.top();\r\n       q.pop();\r\n   }\r\n   sort(b+1,b+num,cmp);\r\n   for(LL i=1;i<num;i++)\r\n   {\r\n     printf(\"%lld \",b[i].y);\r\n   }\r\n   printf(\"\\n\");\r\n    return 0;\r\n}\r\n"
}