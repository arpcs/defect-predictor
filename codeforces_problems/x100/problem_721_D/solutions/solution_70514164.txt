{
    "id": 70514164,
    "contestId": 721,
    "creationTimeSeconds": 1581090329,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 311,
    "memoryConsumedBytes": 24268800,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int  ,int > pii;\ntypedef pair<ll  ,ll > pll;\n\nconst ll maxn =2e6;\nconst ll mod = 1e9+7;\nconst ld PI = 4 * atan((ld) 1);\n\n#define pb(x) push_back(x);\n#define endl '\\n'\n#define dokme(x) cout << x ;  return(0);\n#define migmig ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n#define file_init freopen(\"input.txt\", \"r+\", stdin); freopen(\"output.txt\", \"w+\", stdout);\n#define ms(x , y) memset(x , y , sizeof x);\nll pw(ll a, ll b) {\n    return (!b ? 1 : (b & 1 ? a * pw(a * a % mod, b / 2) % mod : pw(a * a % mod, b / 2) % mod));\n}\n\nll n , k , x;\nll a[maxn];\nset < pll > st;\nint neg = 0 , zero = 0;\n\nint main(){\n    migmig\n    cin >> n >> k >> x;\n    for (int i = 0 ; i < n ; i ++){\n        cin >> a[i];\n        st.insert(pll(abs(a[i]) , (ll)i));\n        zero+=(int)(a[i] == (ll)0);\n        neg+=(int)(a[i] < (ll)0);\n    }\n    while(k){\n        auto cur = *st.begin();\n        st.erase(cur);\n        if(neg%2){\n            if(a[cur.second] >= 0){\n                a[cur.second]+=x;\n            }\n            else{\n                a[cur.second]-=x;\n            }\n        }\n        else{\n            if(a[cur.second] > 0){\n                a[cur.second]-=x;\n                if(a[cur.second]  < 0){\n                    neg++;\n                }\n            }\n            else if (a[cur.second] < 0){\n                a[cur.second]+=x;\n                if(a[cur.second] >= 0 ){\n                    neg--;\n                }\n            }\n            else{\n                a[cur.second]-=x;\n                neg++;\n            }\n        }\n        k--;\n        st.insert(pll(abs(a[cur.second]) , cur.second));\n    }\n    for (int i = 0 ; i < n ;i ++){\n        cout << a[i] << ' ';\n    }\n    return(0);\n}\n\n\n//When we hit our lowest point, we are open to the greatest change.\n//If I try, I fail. If I don't try, I'm NEVER GOING TO GET IT.\n//Sometimes, life is like this dark tunnel. You can't always see the light at the end of the tunnel. But if you just keep moving... you will come to a better place.\n//It is important to draw wisdom from diffrent places. If you take it from only one place it becomes rigid and stale.\n\n\t\t\t\t    \t\t\t \t\t\t\t\t\t\t \t \t\t\t \t \t\t\t"
}