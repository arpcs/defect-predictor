{
    "id": 57732870,
    "contestId": 721,
    "creationTimeSeconds": 1564045499,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 14336000,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nconst int N=2e5+10;\nLL n,k,x;\n\nstruct Node\n{\n    LL w,abw,id;\n}P[N];\n\nbool operator < (const Node &p1,const Node &p2)\n{\n    return p1.abw>p2.abw;\n}\n\npriority_queue<Node>q;\n\nLL Abs(LL x)\n{\n    if(x<0)x=-x;\n    return x;\n}\n\nvoid print()\n{\n    puts(\"--------------\");\n    for(int i=1;i<=n;i++){\n        printf(\"%lld \",P[i].w);\n    }\n    puts(\"\");\n    puts(\"_____________\");\n}\n\nint main()\n{\n    scanf(\"%lld%lld%lld\",&n,&k,&x);\n    int flag=1,cc=1;\n    for(int i=1;i<=n;i++){\n        scanf(\"%lld\",&P[i].w);\n        P[i].abw=Abs(P[i].w);\n        P[i].id=i;\n        if(P[i].w<0)cc=-cc;\n    }\n    for(int i=1;i<=n;i++){\n        if(P[i].w==0&&k){\n            if(cc>0){\n                P[i].w-=x;\n                cc=-cc;\n            }\n            else if(cc<0){\n                P[i].w+=x;\n            }\n            k--;\n        }\n    }\n    for(int i=1;i<=n;i++){\n        if(P[i].w==0){\n            for(int i=1;i<=n;i++){\n                printf(\"%lld\",P[i].w);\n                if(i<n)printf(\" \");\n            }\n            puts(\"\");\n            return 0;\n        }\n    }\n    for(int i=1;i<=n;i++){\n        if(P[i].w<0)flag=-flag;\n        P[i].abw=Abs(P[i].w);\n        q.push(P[i]);\n    }\n    while(k--){\n        Node tt=q.top();q.pop();\n        LL i=tt.id;\n        if(flag>0){\n            if(P[i].w>0){\n                P[i].w-=x;\n                if(P[i].w<0)flag=-flag;\n                else if(P[i].w==0)flag=0;\n            }\n            else if(P[i].w<0){\n                P[i].w+=x;\n                if(P[i].w>0)flag=-flag;\n                else if(P[i].w==0)flag=0;\n            }\n        }\n        else if(flag<0){\n            if(P[i].w>0){\n                P[i].w+=x;\n            }\n            else if(P[i].w<0){\n                P[i].w-=x;\n            }\n        }\n        else{\n             int tmp=1;\n             for(int i=1;i<=n;i++){\n                 if(P[i].w<0)tmp=-tmp;\n             }\n             if(tmp>0)P[i].w-=x;\n             else P[i].w+=x;\n             flag=-1;\n        }\n        P[i].abw=Abs(P[i].w);\n        q.push(P[i]);\n    }\n    for(int i=1;i<=n;i++){\n        printf(\"%lld\",P[i].w);\n        if(i<n)printf(\" \");\n    }\n    puts(\"\");\n    return 0;\n}\n/*\n2 2 2\n-2 -5\n*/\n\n \t \t \t\t\t   \t\t\t \t\t\t\t     \t\t \t\t \t"
}