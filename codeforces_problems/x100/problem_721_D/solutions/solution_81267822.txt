{
    "id": 81267822,
    "contestId": 721,
    "creationTimeSeconds": 1590331096,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "RamiZk"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 7987200,
    "source": "#include <bits/stdc++.h>\r\ntypedef long long ll ;\r\nusing namespace std;\r\n\r\n\r\nclass node{\r\npublic:\r\n    ll val ;\r\n    int sign ;\r\n    int index;\r\n    node(ll val , int sign , int index) : val(val) , sign(sign) , index(index) {}\r\n    bool operator < (const node& op ) const {\r\n        return val > op.val;\r\n    }\r\n};\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false), cin.tie(0), cout.tie(0) ;\r\n\r\n    int n ;\r\n    ll k , x;\r\n    cin >> n >> k >> x;\r\n    vector<ll> v(n);\r\n    int s = 0 ;\r\n    for(int i = 0  ;i < n ; i ++ ){\r\n        cin >> v[i];\r\n        if(v[i] < 0 ) {\r\n            s ++ ;\r\n        }\r\n    }\r\n\r\n    bool flag = false ;\r\n    if(s % 2 == 0){\r\n        ll minx = 2e9  ;\r\n        int mini = -1;\r\n        for(int i = 0 ; i < n ; i ++) {\r\n            if(abs(v[i]) < minx){\r\n                minx = abs(v[i]);\r\n                mini = i ;\r\n            }\r\n        }\r\n        if(minx - k * x < 0 ) {\r\n            flag = true ;\r\n            ll t =  minx/x  + 1  ;\r\n            k -= t ;\r\n            if(v[mini] < 0 )\r\n                v[mini] += t * x ;\r\n            else\r\n                v[mini] -= t * x;\r\n\r\n        }\r\n\r\n    }else{\r\n        flag = true ;\r\n    }\r\n    if(flag){\r\n\r\n        priority_queue<node> pr ;\r\n        for(int i = 0 ; i < n ; i ++) {\r\n            pr.push(node(fabsl(v[i]) , v[i] < 0 , i));\r\n        }\r\n        while(k--){\r\n            auto cur = pr.top();\r\n            pr.pop();\r\n            cur.val += x;\r\n            pr.push(cur);\r\n        }\r\n        while(!pr.empty()){\r\n            auto cur = pr.top();\r\n            pr.pop();\r\n            v[cur.index] = cur.val * (cur.sign ? -1 : 1 );\r\n        }\r\n\r\n    }else{\r\n\r\n        ll minx = 2e9  ;\r\n        int mini = -1;\r\n        for(int i = 0 ; i < n ; i ++) {\r\n            if(abs(v[i]) < minx){\r\n                minx = abs(v[i]);\r\n                mini = i ;\r\n            }\r\n        }\r\n        if(v[mini] < 0 )\r\n            v[mini] += k * x ;\r\n        else\r\n            v[mini] -= k * x;\r\n\r\n\r\n    }\r\n\r\n\r\n    for(int i  = 0 ; i < n ; i ++) {\r\n        cout << v[i] << \" \";\r\n    }\r\n    cout << endl;\r\n\r\n\r\n    return 0;\r\n}\r\n"
}