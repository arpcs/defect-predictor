{
    "id": 84534488,
    "contestId": 721,
    "creationTimeSeconds": 1592691894,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "weather911"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 529,
    "memoryConsumedBytes": 11366400,
    "source": "#include <bits/stdc++.h>\r\n#define fi first\r\n#define se second\r\n#define pb push_back\r\nusing namespace std;\r\nusing ll = long long;\r\nusing i2 = pair<int, int>;\r\nconst int iinf = INT_MAX;\r\nconst ll llinf = LLONG_MAX;\r\n\r\nconst int N = 2e5+9;\r\nll A[N];\r\n\r\nint main() {\r\n    //ios_base::sync_with_stdio(false);\r\n    //cin.tie(0);\r\n\r\n    int n, k; cin >> n >> k;\r\n    ll x; cin >> x;\r\n    priority_queue<pair<pair<ll, int>, int> > q;\r\n    int zero = 0;\r\n    for(int i = 1; i <= n; i++) {\r\n        cin >> A[i];\r\n        if(A[i] == 0) zero++;\r\n    }\r\n    if(k < zero) {\r\n        for(int i = 1; i <= n; i++)\r\n            cout << A[i] << \" \";\r\n        return 0;\r\n    }\r\n    int S = 1;\r\n    for(int i = 1; i <= n; i++) {\r\n        ll a = A[i];\r\n        if(A[i] == 0 && zero != 1) {\r\n            a = x;\r\n            zero--;\r\n            k--;\r\n        }\r\n        S *= (a < 0 ? -1 : 1);\r\n        if(a < 0)\r\n            q.push({{a, -1}, i});\r\n        else\r\n            q.push({{-a, 1}, i});\r\n    }\r\n    if(zero) {\r\n        int ind = q.top().se;\r\n        q.pop();\r\n        if(S == 1)\r\n            q.push({{-x, -1}, ind});\r\n        else\r\n            q.push({{-x, 1}, ind});\r\n        S = -1;\r\n        k--;\r\n    }\r\n    while(k > 0) {\r\n        ll a = -q.top().fi.fi;\r\n        int s = q.top().fi.se;\r\n        int ind = q.top().se;\r\n        q.pop();\r\n        if(S == 1) {\r\n            if(a == x) {\r\n                if(k == 1)\r\n                    q.push({{0, 1}, ind});\r\n                else {\r\n                    q.push({{-x, -s}, ind});\r\n                    k--;\r\n                    S = -1;\r\n                }\r\n            }\r\n            else if(a < x) {\r\n                q.push({{a-x, -s}, ind});\r\n                S = -1;\r\n            }\r\n            else {\r\n                q.push({{x-a, s}, ind});\r\n            }\r\n        }\r\n        else {\r\n            q.push({{-a-x, s}, ind});\r\n        }\r\n        k--;\r\n    }\r\n    for(int i = 1; i <= n; i++) {\r\n        ll a = -q.top().fi.fi;\r\n        int s = q.top().fi.se;\r\n        int ind = q.top().se;\r\n        A[ind] = a*s;\r\n        q.pop();\r\n    }\r\n    for(int i = 1; i <= n; i++)\r\n        cout << A[i] << \" \";\r\n\r\n    return 0;\r\n}\r\n"
}