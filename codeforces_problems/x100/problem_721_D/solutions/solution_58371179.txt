{
    "id": 58371179,
    "contestId": 721,
    "creationTimeSeconds": 1565073460,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "XpqX"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 327,
    "memoryConsumedBytes": 7987200,
    "source": "#include <set>\r\n#include <map>\r\n#include <deque>\r\n#include <queue>\r\n#include <stack>\r\n#include <cmath>\r\n#include <cstdio>\r\n#include <bitset>\r\n#include <string>\r\n#include <vector>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <iostream>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\n#define ls (rt << 1)\r\n#define rs (rt << 1 | 1)\r\n#define mid ((l + r) >> 1)\r\n#define lson rt << 1, l, mid\r\n#define rson rt << 1 | 1, mid + 1, r\r\n#define debug cout << \"DEBUG\" << endl;\r\n#define isdigit(x) ((x) >= '0' && (x) <= '9')\r\n#define fast ios::sync_with_stdio(false);cin.tie(NULL);\r\n\r\ntypedef long long LL;\r\ntypedef pair<int, pair<int, bool>> P;\r\ntypedef unsigned long long ULL;\r\nconst LL MOD = 1e9 + 7;\r\nconst double Exp = 1e-7;\r\nconst int maxm = 5e5 + 7;\r\nconst int maxn = 2e5 + 7;\r\nconst int inf = 0x3f3f3f3f;\r\nconst LL INF = 0x3f3f3f3f3f3f3f3f;\r\nconst double pi = 3.1415926535898;\r\n\r\ninline LL read() {\r\n\tLL a = 0; int f = 0; char p = getchar();\r\n\twhile (!isdigit(p)) { f |= p == '-'; p = getchar(); }\r\n\twhile (isdigit(p)) { a = (a << 3) + (a << 1) + (p ^ 48); p = getchar(); }\r\n\treturn f ? -a : a;\r\n}\r\n\r\ninline void write(LL x) {\r\n\tif (x < 0) putchar('-'), x = -x;\r\n\tif (x > 9) write(x / 10);\r\n\tputchar(x % 10 + '0');\r\n}\r\n\r\ninline LL qpow(LL a, LL b) {\r\n\tLL ans = 1;\r\n\tfor (; b; b >>= 1, a = a * a % MOD) if (b & 1) ans = ans * a % MOD;\r\n\treturn ans;\r\n}\r\n\r\nstruct node {\r\n\tLL x;\r\n\tint id;\r\n\tbool judge;\r\n\tfriend bool operator < (node a, node b) {\r\n\t\treturn a.x > b.x;\r\n\t}\r\n};\r\n\r\nLL num[maxn];\r\nbool flag = false;\r\npriority_queue<node> q;\r\nLL n, k, a, cnt = 0, mn = INF;\r\n\r\nint main() {\r\n\tcin >> n >> k >> a;\r\n\tfor (int i = 1; i <= n; ++i) {\r\n\t\tcin >> num[i]; \r\n\t\tif (num[i] < 0) cnt++;\r\n\t\tif (num[i] >= 0) mn = min(mn, num[i]);\r\n\t}\r\n\tif (cnt % 2 == 0) {\r\n\t\tLL temp = mn / a;\r\n\t\tif (k <= temp + 1) {\r\n\t\t\tbool flag = true;\r\n\t\t\tfor (int i = 1; i <= n; ++i) {\r\n\t\t\t\tif (num[i] == mn && flag) cout << num[i] - min(temp + 1, k) * a << ' ', flag = false;\r\n\t\t\t\telse cout << num[i] << ' ';\r\n\t\t\t}\r\n\t\t\treturn cout << endl, 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tbool flag = true; k -= (temp + 1);\r\n\t\t\tfor (int i = 1; i <= n; ++i) {\r\n\t\t\t\tif (num[i] == mn && flag) { q.push(node{ (temp + 1) * a - num[i], i, false }); flag = false; continue; }\r\n\t\t\t\tif (num[i] >= 0) q.push({ node{num[i], i, true} });\r\n\t\t\t\telse if (num[i] < 0) q.push(node{ -num[i], i, false });\r\n\t\t\t}\r\n\t\t\twhile(k--) {\r\n\t\t\t\tnode x = q.top(); q.pop();\r\n\t\t\t\tq.push(node{ x.x + a, x.id, x.judge });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tfor (int i = 1; i <= n; ++i)\r\n\t\t\tif (num[i] >= 0) q.push(node{ num[i], i, true });\r\n\t\t\telse q.push(node{ -num[i], i, false });\r\n\t\twhile (k--) {\r\n\t\t\tnode x = q.top(); q.pop();\r\n\t\t\tq.push(node{ x.x + a, x.id, x.judge });\r\n\t\t}\r\n\t}\r\n\twhile(!q.empty()) {\r\n\t\tnode x = q.top(); q.pop();\r\n\t\tif (x.judge) num[x.id] = x.x;\r\n\t\telse num[x.id] = -x.x;\r\n\t}\r\n\tfor (int i = 1; i < n; ++i) cout << num[i] << ' ';\r\n\treturn cout << num[n] << endl, 0;\r\n}"
}