{
    "id": 173543680,
    "contestId": 721,
    "creationTimeSeconds": 1664172934,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "fzx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 13516800,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <queue>\r\n#include <cmath>\r\n#define int long long \r\nusing namespace std;\r\nconst int INF=5e5+5;\r\nint n,k,x,a[INF];\r\nstruct _node_queue {\r\n\tint fl,dis_v,pos1;\r\n\tbool operator < (const _node_queue &x) const {\r\n\t\treturn x.dis_v<dis_v;\r\n\t}\r\n};\r\npriority_queue <_node_queue> q;\r\nvoid solve(int X,int kk) {\r\n\tint p=0;\r\n\tfor (int i=1;i<=n;i++) {\r\n//\t\tcout<<a[i]<<\" \";\r\n\t\tint fl=0;\r\n\t\tif (a[i]<0) fl=1;\r\n\t\telse if (a[i]>0) fl=0;\r\n\t\telse if (p) fl=1,p^=1;\r\n\t\tq.push((_node_queue){fl,abs(a[i]),i});\r\n\t}\r\n\twhile (q.size() && kk--) {\r\n\t\t_node_queue x=q.top();q.pop();\r\n\t\tif (x.fl) x.dis_v+=X,a[x.pos1]-=X;\r\n\t\telse x.dis_v+=X,a[x.pos1]+=X;\r\n\t\tq.push(x);\r\n\t}\r\n\treturn ;\r\n}\r\nsigned main()\r\n{\r\n\tios::sync_with_stdio(false);\r\n\tcin>>n>>k>>x;int sum1=0;\r\n\tfor (int i=1;i<=n;i++) {\r\n\t\tcin>>a[i];\r\n\t\tif (a[i]<0) sum1++;\r\n\t}\r\n\tif (sum1&1) solve(x,k);\r\n\telse {\r\n\t\tint Minv=1;\r\n\t\tfor (int i=1;i<=n;i++)\r\n\t\t\tif (abs(a[Minv])>abs(a[i])) Minv=i;\r\n\t\tif (abs(a[Minv])/x+1>k) {\r\n\t\t\tif (a[Minv]>=0) a[Minv]-=k*x;\r\n\t\t\telse a[Minv]+=k*x;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tint ll=abs(a[Minv])/x+1;\r\n\t\t\tif (a[Minv]>=0) a[Minv]-=ll*x;\r\n\t\t\telse a[Minv]+=ll*x;\r\n\t\t\tk-=ll;\r\n\t\t\tsolve(x,k);\r\n\t\t}\r\n\t}\r\n\tfor (int i=1;i<=n;i++) cout<<a[i]<<\" \";\r\n\treturn 0;\r\n}"
}