{
    "id": 188300726,
    "contestId": 721,
    "creationTimeSeconds": 1673083448,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "aufannn"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 11571200,
    "source": "#include <bits/stdc++.h>\r\n#define int long long\r\n#define fi first\r\n#define se second\r\n#define all(x) (x).begin(), (x).end()\r\n#define allr(x) (x).rbegin(), (x).rend()\r\nusing namespace std;\r\nconst int INFF = 2e18;\r\nint32_t main()\r\n{\r\n        ios_base::sync_with_stdio(false);\r\n        cin.tie(NULL);\r\n        int n, k, x;\r\n        cin >> n >> k >> x;\r\n        vector<int> v(n+5);\r\n        int cnt = 0;\r\n        int cnt_zero = 0;\r\n        vector<int> pos, neg;\r\n        for (int i = 1; i <= n; i++) {\r\n                cin >> v[i];\r\n                if (v[i] < 0) cnt++;\r\n                if (v[i] > 0) {\r\n                        pos.push_back(v[i]);\r\n                } else if (v[i] < 0) {\r\n                        neg.push_back(v[i]);\r\n                } else {\r\n                        cnt_zero++;\r\n                }\r\n        }\r\n        sort(all(pos));\r\n        sort(allr(neg));\r\n        /*\r\n        5 5\r\n        9 -6\r\n\r\n        */\r\n        if (cnt_zero > 0) {\r\n                if (cnt_zero > k) {\r\n                        for (int i = 1; i < n; i++) cout << v[i] << \" \";\r\n                        cout << v[n] + k*x << '\\n';\r\n                        return 0;\r\n                } else {\r\n                        bool b = 0;\r\n                        if (cnt%2 == 0) b = 1;\r\n                        for (int i = 1; i <= n; i++) {\r\n                                if (v[i] == 0) {\r\n                                        if (b) {\r\n                                                v[i] -= x;\r\n                                                b = 0;\r\n                                        } else {\r\n                                                v[i] += x;\r\n                                        }\r\n                                        k--;\r\n                                }\r\n                        }\r\n                }\r\n        } else if (cnt%2 == 0) {\r\n                if (!pos.empty() && !neg.empty()) {\r\n                        if (pos[0] < -neg[0]) {\r\n                                for (int i = 1; i <= n; i++) {\r\n                                        if (v[i] == pos[0]) {\r\n                                                while (k > 0) {\r\n                                                        v[i] -= x;\r\n                                                        k--;\r\n                                                        if (v[i] < 0) break;\r\n                                                }\r\n                                                break;\r\n                                        }\r\n                                }\r\n                        } else {\r\n                                for (int i = 1; i <= n; i++) {\r\n                                        if (v[i] == neg[0]) {\r\n                                                while (k > 0) {\r\n                                                        v[i] += x;\r\n                                                        k--;\r\n                                                        if (v[i] > 0) break;\r\n                                                }\r\n                                                break;\r\n                                        }\r\n                                }\r\n                        }\r\n                } else if (!pos.empty()) {\r\n                        for (int i = 1; i <= n; i++) {\r\n                                if (v[i] == pos[0]) {\r\n                                        while (k > 0) {\r\n                                                v[i] -= x;\r\n                                                k--;\r\n                                                if (v[i] < 0) break;\r\n                                        }\r\n                                        break;\r\n                                }\r\n                        } \r\n                } else {\r\n                        for (int i = 1; i <= n; i++) {\r\n                                if (v[i] == neg[0]) {\r\n                                        while (k > 0) {\r\n                                                v[i] += x;\r\n                                                k--;\r\n                                                if (v[i] > 0) break;\r\n                                        }\r\n                                        break;\r\n                                }\r\n                        }\r\n                }\r\n        }\r\n        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq1;\r\n        priority_queue<pair<int, int>> pq2;\r\n        pq1.push({INFF, -1});\r\n        pq2.push({-INFF, -1});\r\n        for (int i = 1; i <= n; i++) {\r\n                if (v[i] > 0) pq1.push({v[i], i});\r\n                if (v[i] < 0) pq2.push({v[i], i});\r\n        }\r\n        for (int i = 0; i < k; i++) {\r\n                if (pq1.top().fi < -pq2.top().fi) {\r\n                        int idx = pq1.top().se;\r\n                        pq1.pop();\r\n                        v[idx] += x;\r\n                        pq1.push({v[idx], idx});\r\n                } else {\r\n                        int idx = pq2.top().se;\r\n                        pq2.pop();\r\n                        v[idx] -= x;\r\n                        pq2.push({v[idx], idx});\r\n                }\r\n        }\r\n        for (int i = 1; i <= n; i++) cout << v[i] << \" \\n\"[i == n];\r\n        return 0;\r\n}"
}