{
    "id": 116246264,
    "contestId": 721,
    "creationTimeSeconds": 1621069724,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "firee"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 186,
    "memoryConsumedBytes": 18329600,
    "source": "#include <algorithm>\r\n#include <cstring>\r\n#include <iostream>\r\n#include <queue>\r\nusing namespace std;\r\n\r\nlong long ans[1000005];\r\nint posi[1000005];\r\nint main()\r\n{\r\n    int n, k, x;\r\n    cin >> n >> k >> x;\r\n    priority_queue<pair<long long, int>> q;\r\n\r\n    int neg = 0;\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        long long t;\r\n        scanf(\"%lld\", &t);\r\n        q.push(make_pair(-abs(t), i));\r\n        neg ^= (t < 0);\r\n        ans[i] = abs(t);\r\n        posi[i] = (t >= 0);\r\n    }\r\n\r\n    while (k--)\r\n    {\r\n        if (neg)\r\n        {\r\n            pair<long long, int> top = q.top();\r\n            int i = top.second;\r\n            q.pop();\r\n            q.push(make_pair(top.first - x, i));\r\n            ans[i] += x;\r\n        }\r\n        else\r\n        {\r\n            pair<long long, int> top = q.top();\r\n            int i = top.second;\r\n            if (top.first + x >= 0)\r\n            {\r\n                neg = 1;\r\n                posi[i] = 1 - posi[i];\r\n            }\r\n            q.pop();\r\n            q.push(make_pair(-abs(top.first + x), top.second));\r\n            ans[i] = abs(top.first + x);\r\n        }\r\n    }\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        printf(\"%lld \", ans[i] * (2 * posi[i] - 1));\r\n    }\r\n\r\n    return 0;\r\n}"
}