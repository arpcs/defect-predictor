{
    "id": 108878899,
    "contestId": 721,
    "creationTimeSeconds": 1614690983,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "luogu_bot4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 234,
    "memoryConsumedBytes": 7065600,
    "source": "#include <bits/stdc++.h>\nusing namespace std ;\nconst int N = 2e5+10 ; \nstruct rec{\n\tlong long val ; int id ;\n\tfriend inline bool operator < (const rec &a,const rec &b){\n\t\treturn abs(a.val) > abs(b.val) ; \n\t}\n} ;\npriority_queue<rec> q ; \nint n,k,x,cnt,ans[N] ; \nint main(){\n\t//freopen(\"in.txt\",\"r\",stdin) ; \n\tios::sync_with_stdio(false) ; \n\tcin >> n >> k >> x ;\n\tfor(int i = 1,v ; i <= n ; i++){\n\t\tcin >> v ;\n\t\tif(v < 0) cnt++ ;\n\t\tq.push((rec){v,i}) ; \n\t}\n\tfor(int t = 1 ; t <= k ; t++){\n\t\trec now = q.top() ; q.pop() ;\n\t\tif(now.val < 0){\n\t\t\tif(cnt%2 == 0){\n\t\t\t\tnow.val += x ;\n\t\t\t\tif(now.val >= 0) cnt-- ; \n\t\t\t}else{\n\t\t\t\tnow.val -= x ; \n\t\t\t}\n\t\t}else{\n\t\t\tif(cnt%2 == 0){\n\t\t\t\tnow.val -= x ;\n\t\t\t\tif(now.val < 0) cnt++ ; \n\t\t\t}else{\n\t\t\t\tnow.val += x ;\n\t\t\t}\n\t\t}\n\t\tq.push(now) ; \n\t}\n\twhile(q.size()) ans[q.top().id] = q.top().val,q.pop() ;\n\tfor(int i = 1 ; i <= n ; i++) cout << ans[i] << \" \" ; cout << endl ; \n\treturn 0 ; \n}"
}