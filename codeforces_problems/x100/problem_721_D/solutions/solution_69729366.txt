{
    "id": 69729366,
    "contestId": 721,
    "creationTimeSeconds": 1580303337,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "osLivedHere"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 9830400,
    "source": "/******Old School******/\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define lld               long long int\r\n#define ld                long double\r\n#define pb                push_back\r\n#define ppb               pop_back\r\n#define mp                make_pair\r\n#define nl                '\\n'\r\n#define all(c)            (c).begin(),(c).end()\r\n#define rall(c)           (c).rbegin(),(c).rend()\r\n#define sz(c)             (c).size()\r\n#define tr(x,a)           for(auto &a : x)\r\n#define psnt(x,a)         (x).find(a)!=(x).end()\r\n#define vpsnt(x,a)        find(all(x),a)!=(x).end()\r\n#define lexichar(x,y)     lexicographical_compare(x,x+strlen(x),y,y+strlen(y)) //modify the ranges\r\n#define lexistr(x,y)      lexicographical_compare(x.begin(),x.end(),y.begin(),y.end()) \r\n#define MOD               1000000007\r\n#define pi                3.1415926536\r\n#define tod               (long long)3e5+5\r\n#define itr(i,a,b)        for(lld i=a;i<=b;i++)\r\n#define itrn(i,a,b)       for(lld i=a;i>=b;i--)\r\n#define iot(n)            for(lld i=0;i<n;i++)\r\n#define pls(n,arr)        lld arr[n]; iot(n)  cin>>arr[i];\r\n\r\ntypedef pair<lld,lld>     pii;\r\ntypedef pair<string,lld>  psi;\r\ntemplate <typename T>\r\nbool mycomp(T x,T y){ \r\n   return (x==y);  //give your condition here\r\n}\r\nbool paircomp(const pair<lld,lld> &x,const pair<lld,lld> &y){ \r\nreturn x.second<y.second;\r\n}\r\n\r\nint main(){\r\n       ios_base::sync_with_stdio(false);\r\n             cin.tie(0);\r\n            cout.tie(0);\r\n            lld n,k,x; cin>>n>>k>>x;\r\n            pls(n,arr);\r\n    set<pii> sp;\r\n    lld cntneg=0;\r\n    iot(n){\r\n        sp.insert(mp(abs(arr[i]),i));\r\n        if(arr[i]<0)  cntneg++;\r\n    } //cout<<cntneg<<nl;\r\n    lld roxa=k;\r\n    lld flagr;\r\n    while(k>0){\r\n        pair<lld,lld> nms=*sp.begin();\r\n        sp.erase(nms);\r\n        lld kk=arr[nms.second];\r\n        if(arr[nms.second]<0){\r\n            if(cntneg%2==0)\r\n                arr[nms.second]+=x;\r\n            else\r\n            arr[nms.second]-=x;\r\n        }\r\n        else if(arr[nms.second]>0){\r\n            if(cntneg%2==0)\r\n              arr[nms.second]-=x;\r\n            else\r\n            arr[nms.second]+=x;\r\n        }\r\n        else{\r\n           if(cntneg%2!=0)  arr[nms.second]+=x;\r\n           else{\r\n               if(roxa==k)\r\n               arr[nms.second]-=x;\r\n               else{\r\n                   if(flagr>0) arr[nms.second]-=x;\r\n                   else { arr[nms.second]+=x; cntneg--;}\r\n               }\r\n           }\r\n        }\r\n        flagr=kk;\r\n        if(arr[nms.second]>0&&kk<0) cntneg--;\r\n        else if(arr[nms.second]<0&&kk>=0) cntneg++;\r\n        \r\n        sp.insert(mp(abs(arr[nms.second]),nms.second));\r\n        k--;\r\n        \r\n    }\r\n    iot(n)  cout<<arr[i]<<\" \";\r\n}\r\n    "
}