{
    "id": 54351439,
    "contestId": 721,
    "creationTimeSeconds": 1558191871,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 7884800,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n\n    bool inc = true;\n    int n, k, x;\n    cin >> n >> k >> x;\n    priority_queue<pair<long long, pair<bool, int>>, vector<pair<long long, pair<bool, int>>>, greater<pair<long long, pair<bool, int>>>> q;\n    long long arr[n];\n\n    for (int i = 0; i < n; i++)\n        cin >> arr[i];\n\n    if (*min_element(arr, arr + n) >= 0) {\n        int ind = min_element(arr, arr + n) - arr;\n\n        if (k * x > arr[ind])\n            while (k && arr[ind] >= 0)\n                arr[ind] -= 1ll * x, k--;\n        else\n            inc = false;\n    }\n\n    for (int i = 0; i < n; i++) {\n        pair<long long, pair<bool, int>> p;\n        p.first = abs(arr[i]);\n        p.second.first = (arr[i] >= 0);\n        p.second.second = i;\n        q.push(p);\n    }\n\n    while (k) {\n        pair<long long, pair<bool, int>> p = q.top();\n        q.pop();\n\n        p.first += 1ll * x * (inc ? 1 : -1);\n        k--;\n        q.push(p);\n    }\n\n    while (!q.empty()) {\n        pair<long long, pair<bool, int>> p = q.top();\n        q.pop();\n        int ind = p.second.second;\n        arr[ind] = p.first;\n\n        if (!p.second.first)\n            arr[ind] *= -1ll;\n    }\n\n    for (int e : arr)\n        cout << e << ' ';\n    cout << '\\n';\n\n    return 0;\n}"
}