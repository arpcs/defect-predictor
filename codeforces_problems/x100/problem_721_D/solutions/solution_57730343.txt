{
    "id": 57730343,
    "contestId": 721,
    "creationTimeSeconds": 1564043109,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 49,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 7987200,
    "source": "#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<queue>\n#include<vector>\n#include<algorithm>\n\nusing namespace std;\n\nconst int INF=0x3f3f3f3f;\nconst int N=2e5+3;\ntypedef long long ll;\n\nint n,k;ll x;\nll a[N];\nstruct node{\n    ll v;int p;\n    bool operator<(const node&o) const{\n        return abs(v)>abs(o.v);\n    }\n};\npriority_queue<node>h;\n\nint main()\n{\n    scanf(\"%d%d%lld\",&n,&k,&x);\n    bool oe=0,oe1,oe2;\n    for(int i=1;i<=n;i++)\n    {\n        scanf(\"%lld\",&a[i]);\n        if(a[i]<0) oe^=1;\n        h.push( (node){a[i],i});\n    }\n    while(k--)\n    {\n        node u=h.top();h.pop();\n        if(oe && u.v!=0) {\n            if(u.v>0) u.v+=x;\n            else u.v-=x;\n        }\n        else {\n            oe1=u.v<0 ? 1:0;\n            if(u.v==0) {\n                if(!oe) u.v-=x,oe^=1;\n                else u.v+=x;\n            }\n            else {\n                if(u.v>0) u.v-=x;\n                else u.v+=x;\n                oe2=u.v<0 ? 1:0;\n                if(u.v!=0 && oe1!=oe2)\n                    oe^=1;\n            }\n        }\n        h.push(u);\n    }\n    while(!h.empty())\n    {\n        node u=h.top();h.pop();\n        a[u.p]=u.v;\n    }\n    for(int i=1;i<n;i++) printf(\"%lld \",a[i]);\n        printf(\"%lld\\n\",a[n]);\n    return 0;\n}\n    \t \t\t   \t  \t  \t \t \t   \t\t \t\t\t"
}