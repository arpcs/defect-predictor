{
    "id": 124216804,
    "contestId": 721,
    "creationTimeSeconds": 1627611699,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "devinqu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 61,
    "memoryConsumedBytes": 9318400,
    "source": "#include \"bits/stdc++.h\"\r\n\r\n// #include \"ext/pb_ds/assoc_container.hpp\"\r\n// #include \"ext/pb_ds/tree_policy.hpp\"\r\n\r\nusing namespace std;\r\n// using namespace __gnu_pbds;\r\n \r\nusing ll = long long;\r\n \r\nusing vi = vector<int>;\r\n#define pb push_back\r\n#define rsz resize\r\n#define all(x) begin(x), end(x)\r\n#define sz(x) (int)(x).size()\r\n \r\nusing pi = pair<int,int>;\r\n#define f first\r\n#define s second\r\n#define mp make_pair\r\n\r\n// typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\r\n \r\nconst int mod = 1e9+7;\r\nconst ll inf = ll(1e18);\r\nconst double PI = acos(-1), eps = 1e-9;\r\n\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nconst int mxn = 2e5+5, mxa = 1e6, mxk = 5;\r\nconst int d4i[] = {-1, 0, 1, 0}, d4j[] = {0, 1, 0, -1};\r\n\r\nint n, k, x, ar[mxn];\r\n\r\nvoid solve() {\r\n    cin >> n >> k >> x;\r\n    int mn = 0, neg = 0;\r\n    for (int i = 0; i < n; ++i)  {\r\n        cin >> ar[i];\r\n        if (ar[i] < 0)\r\n            ++neg;\r\n        if (abs(ar[i]) < abs(ar[mn]))\r\n            mn = i;\r\n    }\r\n\r\n    if ((neg&1) == 0) {\r\n        while (k >= 1 && ar[mn] >= 0) {\r\n            ar[mn] -= x;\r\n            --k;\r\n        }\r\n    }\r\n\r\n    priority_queue<pi> pq;\r\n    for (int i = 0; i < n; ++i)\r\n        pq.push({-abs(ar[i]), i});\r\n\r\n    while (k > 0) {\r\n        int i = pq.top().s; pq.pop();\r\n        if (ar[i] >= 0)\r\n            ar[i] += x;\r\n        else\r\n            ar[i] -= x;\r\n        --k;\r\n        pq.push({-abs(ar[i]), i});\r\n    }\r\n\r\n    for (int i = 0; i < n; ++i)\r\n        cout << ar[i] << ' ';\r\n    cout << '\\n';\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n\r\n    int T = 1;\r\n    // cin >> T;\r\n    \r\n    for (int tt = 1; tt <= T; ++tt) {\r\n        // cout << \"Case #\" << tt << \": \";\r\n        solve();\r\n    }\r\n}\r\n"
}