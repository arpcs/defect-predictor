{
    "id": 57732478,
    "contestId": 721,
    "creationTimeSeconds": 1564045106,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 4812800,
    "source": "#include<iostream>\n#include<algorithm>\n#include<queue>\n#include<cstdio>\n#include<cmath>\n#include<cstring>\nusing namespace std;\nconst int N=200111;\nstruct node{\n\tlong long v;\n\tint p;\n\tnode(int v1=0,int v2=0){\n\t\tv=v1;p=v2;\n\t}\n\tbool const  operator < (const node oth) const {\n\t\treturn abs(v)>abs(oth.v);\n\t}\n}ab[N];\nint n,k,x,ne;\nlong long val[N];\n\nbool cmp(node l,node r){return l.v<r.v;}\nint main(){\n//\tfreopen(\"D.in\",\"r\",stdin);\n\tcin>>n>>k>>x;\n\tfor(int i=1;i<=n;i++){\n\t\tscanf(\"%d\",val+i);\n\t\tab[i]=node(val[i],i);\n\t\tne+=(val[i]<0);\n\t}\n\t\n\tsort(ab+1,ab+1+n,cmp);\n\t\n\t\n\tif((!(ne&1))){\n\t\tif((ne==0&&ab[1].v-k*x<=0)||(ab[1].v>0&&ab[1].v-k*x<=0)){\n\t\t\tval[ab[1].p]-=(ab[1].v/x+(ab[1].v-k*x<0))*x;\n\t\t\tk-=(ab[1].v/x+(ab[1].v-k*x<0));\n\t\t\tab[1].v-=(ab[1].v/x+(ab[1].v-k*x<0))*x;\n\t\t\tne++;\n//\t\t\tcout<<\"A\";\n\t\t}\n\t\telse if(ab[1].v+k*x>=0){\n\t\t\tval[ab[1].p]+=(ab[1].v/x+(ab[1].v+k*x>0))*x;\n\t\t\tk-=(ab[1].v/x+(ab[1].v+k*x>0));\n\t\t\tab[1].v+=(ab[1].v/x+(ab[1].v+k*x>0))*x;\n\t\t\tne--;\n//\t\t\tcout<<\"B\";\n\t\t}\n\t}\n\t\n\tpriority_queue<node> q;\n\tfor(int i=1;i<=n;i++)q.push(ab[i]);\n\t\n\twhile((k--)>0){\n\t\tnode now=q.top();q.pop();\n\t\tval[now.p]+=((ne&1)?1:-1)*((now.v>=0)?1:-1)*x;\n\t\tnow.v+=((ne&1)?1:-1)*((now.v>=0)?1:-1)*x;\n\t\tq.push(now);\n\t}\n\t\n\tfor(int i=1;i<=n;i++)printf(\"%d \",val[i]);cout<<endl;\n\treturn 0;\n}\n\t \t \t      \t \t\t\t\t\t\t\t\t\t\t\t\t  \t\t \t"
}