{
    "id": 115923112,
    "contestId": 721,
    "creationTimeSeconds": 1620720315,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "armish2.0"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/*#pragma GCC optimize(\"Ofast\")\r\n #pragma GCC optimize (\"unroll-loops\")\r\n #pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\r\n #pragma comment(linker, \"/stack:200000000\")*/\r\n//#include <ext/pb_ds/assoc_container.hpp>\r\n//#include <ext/pb_ds/tree_policy.hpp>\r\n#include <iostream>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <vector>\r\n#include <set>\r\n#include <map>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\n#include <queue>\r\n#include <ctime>\r\n#include <cassert>\r\n#include <complex>\r\n#include <string>\r\n#include <cstring>\r\n#include <chrono>\r\n#include <random>\r\n#include <bitset>\r\n#include <stack>\r\n#include <deque>\r\n#include <iterator>\r\n#include <tuple>\r\n#include <iomanip>\r\n#include <valarray>\r\n#include <limits>\r\n#include <sstream>\r\n#include <cassert>\r\n#include <functional>\r\n#include <numeric>\r\n#define in insert\r\n#define pb push_back\r\n#define mp make_pair\r\n#define int long long\r\n#define fi first\r\n#define double long double\r\n#define se second\r\n#define endl '\\n'\r\n#define pii pair<int,int>\r\n#define pdd pair<double,double>\r\n#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);\r\n#define mod 1000000007\r\n#define MAXN  1000001\r\n#define all(v) v.begin(),v.end()\r\nusing namespace std;\r\n/*using namespace __gnu_pbds;\r\n typedef tree<int, null_type, less_equal<int>, rb_tree_tag,\r\n tree_order_statistics_node_update>\r\n ordered_set;*/\r\nint spf[MAXN];\r\nint fac[MAXN];\r\nvoid sieve()//sieve\r\n{\r\n    spf[1] = 1;\r\n    for (int i=2; i<MAXN; i++)\r\n        spf[i] = i;\r\n    for (int i=4; i<MAXN; i+=2)\r\n        spf[i] = 2;\r\n    for (int i=3; i*i<MAXN; i++)\r\n    {\r\n        if (spf[i]==i)\r\n        {\r\n            for (int j=i*i; j<MAXN; j+=i)\r\n                if (spf[j]==j)\r\n                    spf[j]=i;\r\n        }\r\n    }\r\n}//sieve ends\r\nmap<int,int> getfactor(int a)//factor prime\r\n{\r\n    map<int,int> m;\r\n    while(a>1)\r\n    {\r\n        m[spf[a]]++;\r\n        a/=spf[a];\r\n    }\r\n    return m;\r\n}//prime factor ends\r\nint power(int x,int y,int p)\r\n{\r\n    int res = 1;\r\n    x = x%p;\r\n    if (x == 0||y < 0) return 0;\r\n    while (y > 0)\r\n    {\r\n        if (y & 1)\r\n            res = (res*x)% p;\r\n        y = y>>1;\r\n        x = (x*x)%p;\r\n    }\r\n    return res;\r\n}\r\nint gcd(int a, int b)\r\n{\r\n    if (a == 0)\r\n        return b;\r\n    return gcd(b % a, a);\r\n}\r\nint inverse(int a, int p)\r\n{\r\n    return power(a, p-2, p);\r\n}\r\nint ncr(int n, int r, int p)\r\n{\r\n    if(r>n)\r\n        return 0;\r\n    if (r==0||r==n)\r\n        return 1;\r\n    return (fac[n]*inverse(fac[r], p) % p *\r\n            inverse(fac[n-r], p) % p) % p;\r\n}\r\n/*#pragma GCC optimize(\"Ofast\")\r\n #pragma GCC optimize (\"unroll-loops\")\r\n #pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\r\n #pragma comment(linker, \"/stack:200000000\")*/\r\n//#include <ext/pb_ds/assoc_container.hpp>\r\n//#include <ext/pb_ds/tree_policy.hpp>\r\n#include <iostream>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <vector>\r\n#include <set>\r\n#include <map>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\n#include <queue>\r\n#include <ctime>\r\n#include <cassert>\r\n#include <complex>\r\n#include <string>\r\n#include <cstring>\r\n#include <chrono>\r\n#include <random>\r\n#include <bitset>\r\n#include <stack>\r\n#include <deque>\r\n#include <iterator>\r\n#include <tuple>\r\n#include <iomanip>\r\n#include <valarray>\r\n#include <limits>\r\n#include <sstream>\r\n#include <cassert>\r\n#include <functional>\r\n#include <numeric>\r\n#define in insert\r\n#define pb push_back\r\n#define mp make_pair\r\n#define int long long\r\n#define fi first\r\n#define double long double\r\n#define se second\r\n#define endl '\\n'\r\n#define pii pair<int,int>\r\n#define pdd pair<double,double>\r\n#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);\r\n#define mod 1000000007\r\n#define MAXN  1000001\r\n#define all(v) v.begin(),v.end()\r\nusing namespace std;\r\n/*using namespace __gnu_pbds;\r\n typedef tree<int, null_type, less_equal<int>, rb_tree_tag,\r\n tree_order_statistics_node_update>\r\n ordered_set;*/\r\nint spf[MAXN];\r\nint fac[MAXN];\r\nvoid sieve()//sieve\r\n{\r\n    spf[1] = 1;\r\n    for (int i=2; i<MAXN; i++)\r\n        spf[i] = i;\r\n    for (int i=4; i<MAXN; i+=2)\r\n        spf[i] = 2;\r\n    for (int i=3; i*i<MAXN; i++)\r\n    {\r\n        if (spf[i]==i)\r\n        {\r\n            for (int j=i*i; j<MAXN; j+=i)\r\n                if (spf[j]==j)\r\n                    spf[j]=i;\r\n        }\r\n    }\r\n}//sieve ends\r\nmap<int,int> getfactor(int a)//factor prime\r\n{\r\n    map<int,int> m;\r\n    while(a>1)\r\n    {\r\n        m[spf[a]]++;\r\n        a/=spf[a];\r\n    }\r\n    return m;\r\n}//prime factor ends\r\nint power(int x,int y,int p)\r\n{\r\n    int res = 1;\r\n    x = x%p;\r\n    if (x == 0||y < 0) return 0;\r\n    while (y > 0)\r\n    {\r\n        if (y & 1)\r\n            res = (res*x)% p;\r\n        y = y>>1;\r\n        x = (x*x)%p;\r\n    }\r\n    return res;\r\n}\r\nint gcd(int a, int b)\r\n{\r\n    if (a == 0)\r\n        return b;\r\n    return gcd(b % a, a);\r\n}\r\nint inverse(int a, int p)\r\n{\r\n    return power(a, p-2, p);\r\n}\r\nint ncr(int n, int r, int p)\r\n{\r\n    if(r>n)\r\n        return 0;\r\n    if (r==0||r==n)\r\n        return 1;\r\n    return (fac[n]*inverse(fac[r], p) % p *\r\n            inverse(fac[n-r], p) % p) % p;\r\n}\r\nint a[200001];\r\nint n,k,x;\r\nvoid makemaxmimum()\r\n{\r\n    set<pair<int,pii> >s;\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        if(a[i]<0)\r\n            s.in(mp(abs(a[i]),mp(i,-1)));\r\n        else s.in(mp(abs(a[i]),mp(i,1)));\r\n    }\r\n    while(k)\r\n    {\r\n        auto it=s.begin();\r\n        int pos=it->se.fi;\r\n        int sig=it->se.se;\r\n        if(sig==-1)\r\n            a[pos]-=x;\r\n        else a[pos]+=x;\r\n        s.erase(it);\r\n        s.in(mp(abs(a[pos]),mp(pos,sig)));\r\n        k--;\r\n    }\r\n}\r\nvoid solve()\r\n{\r\n    cin>>n>>k>>x;\r\n    vector<pii> neg,pos,zero;\r\n    int minus=0;\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        cin>>a[i];\r\n        if(a[i]<0)\r\n            neg.pb(mp(a[i],i));\r\n        else if(a[i]>0)\r\n            pos.pb(mp(a[i],i));\r\n        else{\r\n            zero.pb(mp(a[i],i));\r\n        }\r\n    }\r\n    sort(all(pos));\r\n    sort(all(neg));\r\n    reverse(all(neg));\r\n    if(zero.size())\r\n    {\r\n        if(neg.size()%2==0)\r\n        {\r\n            a[zero[0].se]-=x;\r\n            k--;\r\n            for(int i=1;i<zero.size();i++)\r\n                if(k)\r\n                    a[zero[i].se]+=x,k--;\r\n        }\r\n        else{\r\n            for(auto it:zero)\r\n                if(k)\r\n                    a[it.se]+=x,k--;\r\n        }\r\n        minus=1;\r\n    }\r\n    else{\r\n        if(neg.size()%2==0&&neg.size())\r\n        {\r\n            int stepneg=abs(neg[0].se-x)/x;\r\n            if(pos.size())\r\n            {\r\n                int steppos=(pos[0].fi+x)/x;\r\n                if(steppos<k&&steppos<stepneg)\r\n                {\r\n                    int num=pos[0].fi-steppos*x;\r\n                    a[pos[0].se]=num;\r\n                    k-=steppos;\r\n                    minus=1;\r\n                }\r\n                else if(steppos<k&&steppos==stepneg)\r\n                {\r\n                    int num=pos[0].fi-steppos*x;\r\n                    int num2=neg[0].fi+stepneg*x;\r\n                    if(abs(num2)>abs(num))\r\n                    {\r\n                        a[neg[0].se]=num2;\r\n                    }\r\n                    else a[pos[0].se]=num;\r\n                    k-=steppos;\r\n                    minus=1;\r\n                }\r\n                else if(stepneg<k)\r\n                {\r\n                    int num=neg[0].fi+stepneg*x;\r\n                    a[neg[0].se]=num;\r\n                    k-=stepneg;\r\n                    minus=1;\r\n                }\r\n            }\r\n            else{\r\n                if(stepneg<k)\r\n                {\r\n                    int num=neg[0].fi+stepneg*x;\r\n                    a[neg[0].se]=num;\r\n                    k-=stepneg;\r\n                    minus=1;\r\n                }\r\n            }\r\n                \r\n        }\r\n        else if(pos.size()&&neg.size()==0)\r\n        {\r\n            int steppos=(pos[0].fi+x)/x;\r\n            if(steppos<k)\r\n            {\r\n                int num=pos[0].fi-steppos*x;\r\n                a[pos[0].se]=num;\r\n                k-=steppos;\r\n                minus=1;\r\n            }\r\n        }\r\n        else if(neg.size()%2)\r\n            minus=1;\r\n    }\r\n    if(minus)\r\n    {\r\n        makemaxmimum();\r\n    }\r\n    else makeminimum();\r\n    for(int i=1;i<=n;i++)\r\n        cout<<a[i]<<\" \";\r\n    cout<<endl;\r\n}\r\nsigned main()\r\n{\r\n    fast\r\n    int test=1;\r\n    //cin>>test;\r\n    while(test--)\r\n    {\r\n        solve();\r\n    }\r\n}\r\n"
}