{
    "id": 122956822,
    "contestId": 721,
    "creationTimeSeconds": 1626633370,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "fvogel"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 639,
    "memoryConsumedBytes": 13619200,
    "source": "/*\r\nFile created on 07/18/2021 at 19:37:45.\r\nLink to problem: \r\nDescription: \r\nTime complexity: O()\r\nSpace complexity: O()\r\nStatus: DEV (most of the time I don't update status, so it stays DEV which is the default value)\r\nCopyright: \u24b8 2021 Francois Vogel\r\n*/\r\n\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <functional>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n#define pii pair<int, int>\r\n#define f first\r\n#define s second\r\n\r\n#define vi vector<int>\r\n#define all(x) x.begin(), x.end()\r\n#define size(x) (int)(x.size())\r\n#define pb push_back\r\n#define ins insert\r\n#define cls clear\r\n\r\n#define int ll\r\n#define ll long long\r\n#define ld long double\r\n\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\r\n\r\nsigned main() {\r\n    cin.tie(0);\r\n    // ios_base::sync_with_stdio(0);\r\n\r\n    int n, k, x;\r\n    cin >> n >> k >> x;\r\n    set<pii> els;\r\n    int negCnt = 0;\r\n    for (int i = 0; i < n; i++) {\r\n        int x;\r\n        cin >> x;\r\n        if (x >= 0) {\r\n            els.ins(pii(x, i+1));\r\n        }\r\n        else {\r\n            els.ins(pii(-x, -(i+1)));\r\n            negCnt++;\r\n        }\r\n    }\r\n    pii smallest = *(els.begin());\r\n    int rem = -1;\r\n    if (negCnt%2 == 1) rem = 1;\r\n    else if (negCnt%2 == 0 and smallest.f/x <= k) {\r\n        k -= smallest.f/x;\r\n        els.erase(smallest);\r\n        smallest.f -= (smallest.f/x)*x;\r\n        smallest.f *= -1;\r\n        smallest.s *= -1;\r\n        els.ins(smallest);\r\n        rem = 1;\r\n    }\r\n    while (k--) {\r\n        pii cur = *(els.begin());\r\n        els.erase(cur);\r\n        cur.f += rem*x;\r\n        els.ins(cur);\r\n    }\r\n    int b [n];\r\n    for (pii i : els) {\r\n        if (i.s < 0) b[-i.s-1] = -i.f;\r\n        else b[i.s-1] = i.f;\r\n    }\r\n    for (int i : b) cout << i << \" \";\r\n\r\n    int d = 0;\r\n    d++;\r\n}"
}