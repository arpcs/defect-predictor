{
    "id": 108207768,
    "contestId": 721,
    "creationTimeSeconds": 1614023419,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "thiago_bastos"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 9011200,
    "source": "#include \"bits/stdc++.h\"\nusing namespace std;\nsigned main() {\n\tios_base :: sync_with_stdio(false);\n\tcin.tie(0);\n\tint n, k, x;\n\tcin >> n >> k >> x;\n\tvector<long long> a(n);\n\tbool zero = false;\n\tint sig = 1;\n\tfor(int i = 0; i < n; ++i) {\n\t\tcin >> a[i];\n\t\tif(a[i] < 0) sig *= -1;\n\t\telse if(!a[i]) zero = true; \n\t}\n\tif(!zero && sig == 1) {\n\t\tauto p = make_pair(0LL + INT_MAX, -1);\n\t\tfor(int i = 0; i < n; ++i) p = min(p, make_pair(abs(a[i]), i));\t\n\t\tif(p.first < 0) {\n\t\t\tauto j = (-p.first + x) / x;\n\t\t\ta[p.second] += min(j, k + 0LL) * x;\n\t\t\tk -= min(j, k + 0LL);\n\t\t} else {\n\t\t\tauto j = (p.first + x) / x;\n\t\t\ta[p.second] -= min(j, k + 0LL) * x;\n\t\t\tk -= min(j, k + 0LL);\n\t\t}\n\t} else if(zero) {\n\t\tfor(auto& y : a) {\n\t\t\tif(y == 0) {\n\t\t\t\t--k;\n\t\t\t\tif(sig == -1) y += x;\n\t\t\t\telse y -= x;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tpriority_queue<tuple<long long, int, int>> pq;\n\tfor(int i = 0; i < n; ++i) pq.push({-abs(a[i]), a[i] < 0 ? -1 : 1, i});\n\twhile(k--) {\n\t\tauto [y, s, i] = pq.top();\n\t\ty *= -1 * s;\n\t\tpq.pop();\n\t\ty += x * s;\n\t\tpq.push({-abs(y), y < 0 ? -1 : 1, i});\n\t}\n\twhile(!pq.empty()) {\n\t\ta[get<2>(pq.top())] = -get<0>(pq.top()) * get<1>(pq.top());\n\t\tpq.pop();\n\t}\n\tfor(auto y : a) cout << y << ' ';\n\tcout << '\\n';\n\treturn 0;\n}\n\n"
}