{
    "id": 49748965,
    "contestId": 721,
    "creationTimeSeconds": 1549846313,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 11878400,
    "source": "#include<bits/stdc++.h>\n#define all(v) (v).begin(),(v).end()\n#define pb push_back\n#define ppb pop_back\n#define mp make_pair\n#define ri(x) scanf(\"%d\",&(x))\n#define ri2(x,y) scanf(\"%d %d\",&(x),&(y))\n#define ri3(x,y,z) scanf(\"%d %d %d\",&(x),&(y),&(z))\n#define rll(x) scanf(\"%lld\",&(x))\n#define rll2(x,y) scanf(\"%lld %lld\",&(x),&(y))\n#define rll3(x,y,z) scanf(\"%lld %lld %lld\",&(x),&(y),&(z))\n#define gc(x) ((x) = getchar())\nusing namespace::std;\n\nconst long double PI = acos(-1);\nconst long long MOD = 1000000000 +7;\n\ntypedef long long ll;\ntypedef pair<ll,ll> pll;\ntypedef pair<ll,pll> tll;\ntypedef pair<int,int> ii;\ntypedef pair<int,ii> iii;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\ntypedef vector<iii> viii;\ntypedef vector<ll> vll;\ntypedef vector<pll> vpll;\ntypedef vector<tll> vtll;\ntypedef vector<string> vs;\ntypedef set<int> si;\ntypedef set<ii> sii;\ntypedef set<iii> siii;\n\nll gcd(ll a, ll b){ return b==0?a:gcd(b,a%b);}\n\nll add(ll a, ll b, ll m = MOD){ return (a%m + b%m+2*m)%m;}\n\nll mul(ll a, ll b, ll m = MOD){ return ((a%m+m)*(b%m+m))%m;}\n\nll pow_mod(ll a, ll b, ll m = MOD){\n\tll res = 1LL;\n\ta = a%m;\n\twhile(b){\n\t\tif(b&1) res = mul(res,a,m);\n\t\tb >>= 1;\n\t\ta = mul(a,a,m);\n\t}\n\treturn res;\n}\n\nll fastexp(ll a, ll b){\n\tll res = 1LL;\n\twhile(b){\n\t\tif(b&1) res = res*a;\n\t\tb >>= 1;\n\t\ta *= a;\n\t}\n\treturn res;\n}\n\nint gcdExtendido(int a, int b, int *x, int *y){\n\tif(a == 0){\n\t\t*x = 0;\n\t\t*y = 1;\n\t\treturn b;\n\t}\n\tint x1, y1;\n\tint gcd = gcdExtendido(b%a,a,&x1,&y1);\n\t\n\t*x = y1-(b/a)*x1;\n\t*y = x1;\n\treturn gcd;\n}\n\nint modInverso(int a, int m){\n\tint x, y;\n\tint g = gcdExtendido(a,m,&x,&y);\n\tif(g!=1) return -1;\n\telse return (x%m + m)%m;\n}\n\n/****************************************\n*************P*L*A*N*T*I*L*L*A************\n*****************************************/\n\nconst int N = 200000+5;\n\nint n, k, x;\nvector< pair<ll,int> > v;\nlong long ans[N];\n\nbool comp(pair<ll,int> a, pair<ll,int> b){\n\tif(a.first < 0){\n\t\tif(b.first >= 0) return false;\n\t\telse return a.first < b.first;\n\t}\n\telse{\n\t\tif(b.first >= 0) return a.first < b.first;\n\t\telse return false;\n\t}\n}\n\nint sgn(ll x){\n\treturn x < 0 ? -1 : 1;\n}\n\nint main(){\n\tri3(n,k,x);\n\tint a;\n\tint sign = 1;\n\tfor(int i=1; i<=n; i++){\n\t\tri(a);\n\t\tif(a < 0) sign = -sign;\n\t\tv.pb(mp(a,i));\n\t\tans[i] = a;\n\t}\n\tsort(all(v),comp);\n\tint ignore = -1;\n\tif(sign > 0){\n\t\tint posN = -1;\n\t\tint posP = -1;\n\t\tfor(int i=0; i<n; i++){\n\t\t\tif(v[i].first >= 0){\n\t\t\t\tif(posP == -1 or v[posP].first > v[i].first){\n\t\t\t\t\tposP = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(posN == -1 or v[posN].first < v[i].first){\n\t\t\t\t\tposN = i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tll timesP = LLONG_MAX;\n\t\tll timesN = LLONG_MAX;\n\t\tif(posP > -1){\n\t\t\tll t = v[posP].first/x;\n\t\t\twhile(v[posP].first - t*x >= 0) t++;\n\t\t\ttimesP = min(1LL*k,t);\n\t\t}\n\t\tif(posN > -1){\n\t\t\tll t = v[posN].first/x;\n\t\t\twhile(v[posN].first + t*x <= 0) t++;\n\t\t\ttimesN = min(1LL*k,t);\n\t\t}\n\t\tll aggregateI;\n\t\tll timesI;\n\t\tif(timesP < timesN){\n\t\t\tignore = posP;\n\t\t\taggregateI = -timesP*x;\n\t\t\ttimesI = timesP;\n\t\t}\n\t\telse if(timesP == timesN){\n\t\t\tif(abs(v[posP].first - timesP*x) < abs(v[posN].first + timesN*x)){\n\t\t\t\tignore = posP;\n\t\t\t\taggregateI = -timesP*x;\n\t\t\t\ttimesI = timesP;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tignore = posN;\n\t\t\t\taggregateI = timesN*x;\n\t\t\t\ttimesI = timesN;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tignore = posN;\n\t\t\taggregateI = timesN*x;\n\t\t\ttimesI = timesN;\n\t\t}\n\t\tv[ignore].first += aggregateI;\n\t\tk -= timesI;\n\t}\n\tpriority_queue< pair<ll,ii> > Q;\n\tfor(int i=0; i<n; i++){\n\t\tif(i == ignore) continue;\n\t\tQ.push(mp(-abs(v[i].first),mp(v[i].second,sgn(v[i].first))));\n\t}\n\twhile(k > 0){\n\t\tpair<ll,ii> act = Q.top(); Q.pop();\n\t\tact.first -= x;\n\t\tQ.push(act);\n\t\tk--;\n\t}\n\tif(ignore != -1) ans[v[ignore].second] = v[ignore].first;\n\twhile(!Q.empty()){\n\t\tpair<ll,ii> act = Q.top(); Q.pop();\n\t\tans[act.second.first] = -act.first*act.second.second;\n\t}\n\tfor(int i=1; i<=n; i++) cout << ans[i] << \" \";\n\tputs(\"\");\n\treturn 0;\n}"
}