{
    "id": 88624512,
    "contestId": 721,
    "creationTimeSeconds": 1596234176,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "angelg"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 374,
    "memoryConsumedBytes": 18841600,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <queue>\r\n#include <set>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nvector<int> sizes;\r\ntypedef long long ll;\r\nll v[200005];\r\nvector<pair<int, int> > p;\r\nint main()\r\n{\r\n    int n, k, x; cin >> n >> k >> x;\r\n\r\n    int sign = 0;\r\n    set< pair<long long, int> > neg;\r\n    set< pair<long long, int> > pos;\r\n\r\n    for(int i = 0; i < n; i++){\r\n        cin >> v[i];\r\n        if( v[i] < 0) {\r\n            sign ^= 1;\r\n            neg.insert( make_pair(v[i], i) );\r\n        }else {\r\n            pos.insert( make_pair(v[i], i) );\r\n        }\r\n    }\r\n\r\n    if (!sign) {\r\n        long long a = pos.begin()->first;\r\n        bool from_a = true;\r\n        if (!neg.empty()) {\r\n            long long b = neg.rbegin()->first;\r\n            b = -b;\r\n            if (a > b) {\r\n                from_a = false;\r\n            }\r\n        }\r\n\r\n        while (!sign && k) {\r\n            if (from_a) {\r\n                pair<long long, int> p = *pos.begin();\r\n                pos.erase(p);\r\n                p.first -= x;\r\n\r\n                if (p.first >= 0)\r\n                    pos.insert(p);\r\n                else {\r\n                    neg.insert(p);\r\n                    sign ^= 1;\r\n                }\r\n            } else {\r\n                pair<long long, int> p = *neg.rbegin();\r\n                neg.erase(p);\r\n                p.first += x;\r\n\r\n                if (p.first <= 0)\r\n                    neg.insert(p);\r\n                else {\r\n                    pos.insert(p);\r\n                    sign ^= 1;\r\n                }\r\n            }\r\n            k--;\r\n        }\r\n    }\r\n\r\n    while(k--) {\r\n        if (!pos.empty() && neg.empty()) {\r\n            pair<long long, int> p = *pos.begin();\r\n            pos.erase(p);\r\n            p.first += x;\r\n            pos.insert(p);\r\n        }\r\n\r\n        if (pos.empty() && !neg.empty()) {\r\n            pair<long long, int> p = *neg.rbegin();\r\n            neg.erase(p);\r\n            p.first -= x;\r\n            neg.insert(p);\r\n        }\r\n\r\n        if (!pos.empty() && !neg.empty()) {\r\n            pair<long long, int> p = *pos.begin();\r\n            pair<long long, int> n = *neg.rbegin();\r\n\r\n            int a = p.first;\r\n            int b = -n.first;\r\n\r\n            if (a > b) {\r\n                neg.erase(n);\r\n                n.first -= x;\r\n                neg.insert(n);\r\n            } else {\r\n                pos.erase(p);\r\n                p.first += x;\r\n                pos.insert(p);\r\n            }\r\n        }\r\n    }\r\n\r\n    while(!pos.empty()) {\r\n        pair<long long, int> x = *pos.begin();\r\n        v[x.second] = x.first;\r\n        pos.erase(x);\r\n    }\r\n\r\n    while(!neg.empty()) {\r\n        pair<long long, int> x = *neg.begin();\r\n        v[x.second] = x.first;\r\n        neg.erase(x);\r\n    }\r\n\r\n    bool firstT = true;\r\n    for(int i = 0; i < n; i++)\r\n    {\r\n        if(firstT) firstT = false;\r\n        else cout << \" \";\r\n        cout << v[i];\r\n    }\r\n\r\n    cout << endl;\r\n\r\n    return 0;\r\n}"
}