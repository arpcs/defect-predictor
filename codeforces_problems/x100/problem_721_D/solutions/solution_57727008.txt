{
    "id": 57727008,
    "contestId": 721,
    "creationTimeSeconds": 1564039685,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 108,
    "memoryConsumedBytes": 3993600,
    "source": "#include <bits/stdc++.h>\n\n#define endl '\\n'\n#define NOW L ^ 1\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef pair<double, double> pdd;\ntypedef vector<int> vec;\ntypedef vector<vec> matrix;\ntypedef vector<vec> grid;\n\nconst int INF32 = 0x3f3f3f3f;\nconst ll INF64 = 0x3f3f3f3f3f3f3f3f;\nconst int mod2 = 1e9 + 7;\nconst int mod = 998244353;\nconst int N = 2e5 + 5;\n\nstruct aa {\n    int a, id;\n\n    aa(int a, int id) : a(a), id(id) {}\n\n    bool operator<(const aa &b) const {\n        return abs(a) > abs(b.a);\n    }\n};\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n#ifdef MYDEBUG\n    freopen(\"../0in.txt\", \"r\", stdin);\n//    freopen(\"../0out.txt\", \"w\", stdout);\n#endif\n\n    int n, k, x, sign = 1;\n    cin >> n >> k >> x;\n    vec ans(n);\n    priority_queue<aa> Q;\n    for (int i = 0; i < n; ++i) {\n        cin >> ans[i];\n        Q.emplace(ans[i], i);\n        if (ans[i] < 0) {\n            sign *= -1;\n        }\n    }\n\n    int i = 0;\n    for (; i < k && sign >= 0; ++i) {\n        aa p = Q.top();\n        Q.pop();\n        if (p.a < 0)\n            p.a += x;\n        else\n            p.a -= x;\n        if (1ll * p.a * ans[p.id] < 0)\n            sign *= -1;\n        Q.emplace(p);\n    }\n    for (; i < k; ++i) {\n        aa p = Q.top();\n        Q.pop();\n        if (p.a < 0)\n            p.a -= x;\n        else\n            p.a += x;\n        if (1ll * p.a * ans[p.id] < 0)\n            sign *= -1;\n        Q.emplace(p);\n    }\n\n    while (!Q.empty()) {\n        ans[Q.top().id] = Q.top().a;\n        Q.pop();\n    }\n\n    for (int i : ans)\n        cout << i << ' ';\n    return 0;\n}\n \t \t\t\t\t\t \t   \t\t   \t\t\t\t\t \t \t\t \t\t"
}