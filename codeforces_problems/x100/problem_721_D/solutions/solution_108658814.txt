{
    "id": 108658814,
    "contestId": 721,
    "creationTimeSeconds": 1614508644,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "WZJRJ28"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 10035200,
    "source": "#include <iostream>\n#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <cstring>\n#include <cmath>\n#include <stack>\n#include <unordered_map>\n#include <unordered_set>\n#include <random>\n#include <ctime>\n#include <limits>\n#include <queue>\n#include <set>\n#include <map>\nusing namespace std;\n\n#define MAX 2000000000ll\n#define F(a, b) f[a + 1][b + 1]\n#define SetBreak(a, b) if (i == a && j == b)\n#define eps 1e-9\n#define CLOCKS_PER_SECOND ((clock_t)1000)\n#define ll_max numeric_limits<long long>::max();\n#define lb lower_bound\n#define ub upper_bound\n#define pb push_back\n#define eb emplace_back\n#define fi first\n#define se second\n#define sz(x) (int)(x).size()\n#define max(a,b) ((a) < (b) ? (b) : (a))\n#define min(a,b) ((a) > (b) ? (b) : (a))\n#define Access(v, pos) (((v) >> (pos)) & 1)\n#define ValidPos(a,b) ((a) >= 0 && (a) < n && (b) >= 0 && (b) < m) \n#define Serialize(a,b) ((a) * m + (b))\n#define For(i,j) for( int (i) = 1 ; (i) <= (j) ; ++(i) )\n#define Fork(i,j,k) for( int (i) = (k) ; (i) <= (j) ; ++(i) )\n#define For0(i,j) for( int (i) = 0 ; (i) < (j) ; ++(i) )\n#define For0k(i,j,k) for( int (i) = (k); (i) < (j) ; ++(i) )\n\ntypedef long long ll;\ntypedef vector<int> vci;\ntypedef pair<int, int> pii;\ntemplate <typename T> void UpdateMax(T& a, T b) {if (a < b) a = b;}\ntemplate <typename T> void UpdateMin(T& a, T b) {if (a > b) a = b;}\ntemplate<typename T>\ninline void read(T &x)\n{\n    x = 0; char c = getchar(); int flag = 1;\n    while(!isdigit(c)) {if (c == '-') flag = -1; c = getchar();}\n    while(isdigit(c)) {x = x * 10 + c - '0'; c = getchar();}\n    x *= flag;\n}\ntemplate<typename T>\nvoid Unique(vector<T>& vec)\n{\n    sort(vec.begin(), vec.end());\n    vec.erase(unique(vec.begin(), vec.end()), vec.end());\n}\ntemplate<typename T>\nvoid Relabel(vector<T>& vec, T& value)\n{\n    value = lower_bound(vec.begin(), vec.end(), value) - vec.begin() + 1;\n}\ntemplate <typename T, typename V> void Print(const pair<T, V>& x) { cout<<x.first<<\" @ \"<<x.second<<\" | \"; }\ntemplate <typename T> void Print(const T& x) { cout<<x<<\" \";  }\ntemplate <typename T> void Pcon(const T& x) { cout<<\"\\nsize: \"<<x.size()<<endl; for (const auto& item : x) Print(item); }\nstd::vector<int> LABS;\ntemplate <typename T> void Print(const T* x, int offset, int loop)\n{\n    for (int i = 0; i <= loop; i++)\n    {\n        cout<<\"[\";\n        for (int item : LABS)\n            cout<<item - offset<<\",\";\n        cout<<i - offset<<\"]:\";\n        cout<<x[i]<<\" \";\n    }\n}\ntemplate <typename T, typename... Args>\nvoid Print(const T* f, int offset, int loop, Args... args)\n{\n    for (int i = 0; i <= loop; i++)\n    {\n        LABS.push_back(i);\n        Print(f[i], offset, args...);\n        cout<<endl;\n        LABS.pop_back();\n    }\n}\ntemplate <typename T, typename V>\nbool Has(T& cluster, const V& item)\n{\n    return cluster.find(item) != cluster.end();\n}\nint Logn(ll x) { int cnt = 0; while (x) { ++cnt; x >>= 1; } return cnt; }\n//////////////////////////////////////////////////////\nconst int MOD = 1e9 + 7;\nconst int N = 2e5 + 5;\nconst int dir[4][2] = {{-1, 0}, {0, -1}, {1, 0}, {1, 0}};\nstruct Edg {int x, y, z;friend bool operator < (const Edg& lhs, const Edg& rhs){return lhs.z < rhs.z;}} edg[N];\nbool vis[N], used[N];\nclock_t start_time;\nint t, n, k, m, x;\nint f[N], a[N];\nvci G[N];\n//////////////////////////////////////////////////////\ninline void SetClock() { start_time = clock(); }\nbool TimeOut(size_t ms) { if (1000*(clock() - start_time) >= ms * CLOCKS_PER_SECOND) return true; return false; }\ninline pii DeSerialize(int c) { return {(c) / m, (c) % m}; }\ntemplate <typename T, typename V>\ninline void Add(T& v, const V& delta) { v += delta; if (v >= MOD) v -= MOD; }\n//////////////////////////////////////////////////////\npriority_queue<pii, vector<pii>, greater<pii>> q;\nint main()\n{\n    srand(time(0));\n    SetClock();\n    cin.sync_with_stdio(false);\n    //freopen(\"test.in\", \"r\", stdin);\n    cin>>n>>k>>x;\n    int cur = 1;\n    For(i, n) {\n        cin>>a[i];\n        q.push({abs(a[i]), i});\n        if (a[i] < 0) {\n            cur *= -1;\n        }\n    }\n    while (k--) {\n        auto top = q.top();\n        q.pop();\n        if (cur < 0) {\n            if (a[top.second] < 0) {\n                q.push({top.first - x, top.second});\n                a[top.second] -= x;\n            } else {\n                q.push({top.first + x, top.second});\n                a[top.second] += x;\n            }\n        } else {\n            if (a[top.second] < 0) {\n                q.push({abs(top.first - x), top.second});\n                a[top.second] += x;\n                if (a[top.second] >= 0) {\n                    cur *= -1;\n                }\n            } else {\n                q.push({abs(top.first - x), top.second});\n                a[top.second] -= x;\n                if (a[top.second] < 0) {\n                    cur *= -1;\n                }\n            }\n        }\n    }\n    For (i, n) {\n        cout<<a[i]<<\" \";\n    }\n}\n"
}