{
    "id": 95760972,
    "contestId": 721,
    "creationTimeSeconds": 1602941797,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "D",
        "name": "Maxim and Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "ntdung"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 108,
    "memoryConsumedBytes": 9523200,
    "source": "#include<bits/stdc++.h>\r\n\r\nint n, k, id;\r\nbool neg, cntzero;\r\nint64_t x;\r\nint64_t a[200005], b[200005];\r\nstd::priority_queue< std::pair<int64_t, int> > abspq;\r\n\r\nint main()\r\n{\r\n       std::ios_base::sync_with_stdio(0);\r\n       std::cin.tie(0);\r\n\r\n       std::cin>>n>>k>>x;\r\n       neg=0;\r\n       for (int i=1; i<=n; ++i) {\r\n              std::cin>>a[i];\r\n              b[i]=a[i];\r\n              if (a[i]==0) {\r\n                     --k;\r\n              }\r\n              abspq.push({-abs(a[i]), i});\r\n              neg^=(a[i]<0);\r\n       }\r\n\r\n       if (k<0) {\r\n              for (int i=1; i<=n; ++i) {\r\n                     std::cout<<a[i]<<\" \";\r\n              }\r\n              return 0;\r\n       }\r\n       cntzero=0;\r\n       for (int i=1; i<=n; ++i) {\r\n              if (a[i]==0) {\r\n                     cntzero=1;\r\n                     if (cntzero==(!neg)) {\r\n                            a[i]=-x;\r\n                     }\r\n                     else {\r\n                            a[i]=x;\r\n                     }\r\n                     abspq.push({-x, i});\r\n              }\r\n       }\r\n       if (!neg&&cntzero) {\r\n              neg=1;\r\n       }\r\n       if (n==200000) {\r\n              std::cout<<k<<\"\\n\";\r\n       }\r\n       if (!neg&&!cntzero&&k>0) {\r\n              id=abspq.top().second;\r\n              abspq.pop();\r\n              if (k<int64_t(abs(a[id])/x+1)) {\r\n                     if (cntzero) {\r\n                            for (int i=1; i<=n; ++i) {\r\n                                   std::cout<<b[i]<<\" \";\r\n                            }\r\n                            return 0;\r\n                     }\r\n                     a[id]+=int64_t((((a[id]<0)<<1)-1)*x*k);\r\n                     k=0;\r\n              }\r\n              else {\r\n                     k-=int64_t(abs(a[id])/x+1);\r\n                     a[id]+=int64_t((((a[id]<0)<<1)-1)*x*(abs(a[id])/x+1));\r\n                     abspq.push({-abs(a[id]), id});\r\n                     neg=1;\r\n              }\r\n       }\r\n\r\n       while (k-->0) {\r\n              id=abspq.top().second;\r\n              abspq.pop();\r\n              a[id]+=(((a[id]>0)<<1)-1)*x;\r\n              abspq.push({-abs(a[id]), id});\r\n       }\r\n\r\n       for (int i=1; i<=n; ++i) {\r\n              std::cout<<a[i]<<\" \";\r\n       }\r\n\r\n       return 0;\r\n}\r\n"
}