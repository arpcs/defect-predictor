{
    "id": 230627515,
    "contestId": 327,
    "creationTimeSeconds": 1698731617,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 327,
        "index": "C",
        "name": "Magic Five",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "combinatorics",
            "math"
        ]
    },
    "author": {
        "contestId": 327,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1372941000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n#define ll long long\nusing namespace std;\n\n\n//modulo\nconst ll MOD = (1e9) + 7;\n\n//binary exponentation\nll pot(ll base, ll exp){ // ~ O(log[n])\n    if(exp == 0) return 1;\n    ll value = pot(base, exp/2)%MOD;\n    value = (value * value) % MOD;\n    if (exp% 2 == 1) value = (value*base) % MOD;\n    return value%MOD;\n}\n\nvoid solve() { // ~ O(log[n]*|a|)\n    string a;\n    ll k;\n    ll sz;\n\n    cin >> a;\n    cin >> k;\n    sz = a.size();\n\n    ll p = 0;\n    ll res = 0;\n\n    // Se busca los n\u00fameros 5 o 0 y la cantidad de n\u00fameros por delante\n    // son 2**(X-1) posibilidades que puede tener un n\u00famero para lograr la divisibilidad entre 5\n    for(auto iter = a.begin(); iter < a.end(); iter++, p++){ // ~ O(log[n]*|a|)\n        if((*iter == '5') || (*iter == '0')){ // O(1)\n            res = (res + pot(2,p)) % MOD; // O(log[n])\n        }\n    }\n    ll ans = 1, r = 0;\n    ll r = pot(2, sz);\n    //inverso y las veces de plato que existen (k)\n    cout << res * (pot(r,k)-1)%MOD * (pot(r-1, MOD-2)) % MOD << endl; // ~ O(log[n])\n}\n\nint main() { // ~ O(log[n]*|a|)\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n\n    solve(); // ~ O(log[n]*|a|)\n    return 0;\n}\n\t \t\t\t\t\t\t  \t   \t   \t      \t    \t"
}