{
    "id": 231503614,
    "contestId": 327,
    "creationTimeSeconds": 1699209193,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 327,
        "index": "C",
        "name": "Magic Five",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "combinatorics",
            "math"
        ]
    },
    "author": {
        "contestId": 327,
        "members": [
            {
                "handle": "bkifhr7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1372941000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll MOD = 1000000007;\n\nll pot(ll a, ll b) {\n    if (b==0) return 1;\n    ll x = pot(a,b/2);\n    x = (x*x)%MOD;\n    if (b%2) x = (x*a)%MOD;\n    return x;\n}\n\nll inv(ll a){\n    return pot(a, MOD-2);\n}\n\n//podemos eliminar todos los valores despues de i -> nuevo sz\n//opcionalmente podemos dejar todos los valores antes -> si o no\n//2^(digitos maximos)\n//count += pot(2, i);\n//en caso de k, hacemos i*k + 1, porque es el num de veces\n//for (auto j=1; j<k; j++) count += pot(2, i*k + 1);\n\nint main() {\n    string a; cin >> a;\n    ll k; cin >> k;\n    \n    ll x = pot(2,a.size());\n    for (auto i=0; i<a.size(); i++) {\n        char c = a[i];\n        if (c == '0' or c == '5') res += pot(2, i);\n    }\n    res = (res%MOD) * ((pot(x,k)-1)%MOD * inv(x-1)%MOD)%MOD;\n    cout << res%MOD << endl;\n    return 0;\n}\n  \t\t  \t \t\t   \t    \t\t  \t\t \t  \t\t"
}