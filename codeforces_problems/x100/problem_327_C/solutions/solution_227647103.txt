{
    "id": 227647103,
    "contestId": 327,
    "creationTimeSeconds": 1697015041,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 327,
        "index": "C",
        "name": "Magic Five",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "combinatorics",
            "math"
        ]
    },
    "author": {
        "contestId": 327,
        "members": [
            {
                "handle": "huukietphong"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1372941000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 33,
    "timeConsumedMillis": 592,
    "memoryConsumedBytes": 307200,
    "source": "#pragma GCC optimize(\"O3,unroll-loops\")\r\n#pragma GCC target(\"avx2\")\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define mydick long long\r\n#define inp \"INP.INPUT\"\r\n#define out \"OUT.OUTPUT\"\r\n#define int long long\r\n#define ll long long \r\n#define db long double\r\n#define pb push_back\r\n#define pii pair<int,int>\r\n#define fi first\r\n#define se second\r\n#define fill(a,b) memset(a,b,sizeof(a))\r\nconst int mod = 1e9+7;\r\nint sqr(int n){\r\n\tn = n%mod;\r\n\tn = n*n;\r\n\treturn (n)%mod;\r\n}\r\nint power(int a,int b){\r\n\tif(b == 0) return 1%mod;\r\n\tif(b % 2){\r\n\t\treturn (a % mod)*sqr(power(a,b/2)%mod)%mod;\r\n\t}\r\n\telse {\r\n\t\treturn sqr(power(a,b/2)%mod)%mod;\r\n\t} \r\n}\r\nstring s;\r\nint k,res,len;\r\nvoid execute(){\r\n\tcin >> s >> k;\r\n\tint len = s.length();\r\n\tfor(int i = 0; i < s.length();i++){\r\n\t\tif(s[i] == '0' || s[i] == '5'){\r\n\t\t\t//int tmp = (power(2,i+len*k) - power(2,i) + mod*mod)%mod;\r\n\t\t\tres += ((power(2,i+len*k) - power(2,i) + mod*mod)%mod)*(power(power(2,len)-1,mod-2))%mod;\r\n\t\t\tres %= mod;\r\n\t\t}\r\n\t}\r\n\tcout << res % mod;\r\n}\r\nsigned main() {\r\n\t#ifdef FILE\r\n    freopen(inp, \"r\", stdin);\r\n    freopen(out, \"w\", stdout);\r\n    #endif\t\r\n    ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\r\n    int t = 1;\r\n    //cin >> t;\r\n    while(t--){\r\n    \texecute();\t\r\n    \tcout << \"\\n\";\t\r\n\t}\r\n}"
}