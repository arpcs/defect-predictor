{
    "id": 28437861,
    "contestId": 827,
    "creationTimeSeconds": 1499793492,
    "relativeTimeSeconds": 1992,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "knightL"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 18,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 5222400,
    "source": "#include <string>\r\n#include <algorithm>\r\n#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n\r\nbool check(int n, int k, int diam)\r\n{\r\n\tll inner=n-k;\r\n\tk-=2;\r\n\tinner-=diam-1;\r\n\tint longest=diam/2-1;\r\n\tinner-=longest*ll(k);\r\n\treturn inner<=0;\r\n}\r\n\r\nint main()\r\n{\r\n\tint n,k;\r\n\tscanf(\"%d%d\",&n,&k);\r\n\tint l=2;\r\n\tint r=n;\r\n\twhile(l<r)\r\n\t{\r\n\t\tint c=(l+r)/2;\r\n\t\tif(check(n,k,c))\r\n\t\t\tr=c;\r\n\t\telse\r\n\t\t\tl=c+1;\r\n\t}\r\n\tvector<pair<int,int> > res;\r\n\tfor(int i=0;i<l;i++)\r\n\t\tres.push_back(make_pair(i,i+1));\r\n\t{\r\n\t\tint mid=l/2;\r\n\t\tint diam=l;\r\n\t\tint longest=diam/2-1;\r\n\t\tint inner=n-k;\r\n\t\tinner-=diam-1;\r\n\t\tint top=l+1;\r\n\r\n\t\tfor(int i=2;i<k;i++)\r\n\t\t{\r\n\t\t\tint last=mid;\r\n\t\t\tfor(int j=0;j<longest && inner;j++)\r\n\t\t\t{\r\n\t\t\t\tres.push_back(make_pair(last, top));\r\n\t\t\t\tlast=top++;\r\n\t\t\t\tinner--;\r\n\t\t\t}\r\n\t\t\tres.push_back(make_pair(last, top));\r\n\t\t\tlast=top++;\r\n\t\t}\r\n\t}\r\n\tprintf(\"%d\\n\",l);\r\n\tfor(pair<int,int>& it:res)\r\n\t\tprintf(\"%d %d\\n\",it.first+1, it.second+1);\r\n\treturn 0;\r\n}\r\n"
}