{
    "id": 180259550,
    "contestId": 827,
    "creationTimeSeconds": 1668050139,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "Lost_Wind"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "// LUOGU_RID: 93447638\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define int long long\r\n\r\nconst int N = 1e5 + 10, inf = 1e18;\r\nconst double eps = 1e-8, dinf = 1e20;\r\n\r\ntypedef pair<int, int> PII;\r\n\r\n\r\nsigned main()\r\n{\r\n    ios::sync_with_stdio(0); cin.tie(0); \r\n\r\n    int n, k;\r\n    cin >> n >> k;\r\n\r\n    vector<PII> edge;\r\n    int cnt = (n - 1 - k) / k;\r\n\r\n    vector<int> nk(k + 1);\r\n    iota(nk.begin() + 1, nk.end(), 1);\r\n\r\n    for(int c = 1; c <= cnt; c ++ )\r\n    {\r\n        for(int i = 1; i <= k; i ++ )\r\n        {\r\n            int u = (c - 1) * k + i, v = u + k;\r\n            nk[i] = v;\r\n            edge.push_back({u, v});\r\n        }\r\n    }\r\n    \r\n    set<int> s;\r\n    int less = n - (cnt + 1) * k - 1;\r\n    int nid = (cnt + 1) * k + 1;\r\n\r\n    if(less)\r\n    {\r\n        \r\n        for(int i = 1; i <= less - 1; i ++ , nid ++)\r\n        {\r\n            edge.push_back({nk[i], nid});\r\n            s.insert(nid);\r\n        }\r\n\r\n        for(int i = less; i <= k; i ++ )\r\n        {\r\n            edge.push_back({nk[i], nid});\r\n            s.insert(nid);\r\n        }\r\n\r\n        nid ++;\r\n        for(auto c : s) edge.push_back({c, nid});\r\n    }\r\n    else\r\n    {\r\n        for(int i = 1; i <= k; i ++ ) edge.push_back({nid, nk[i]});\r\n    }\r\n        \r\n    k --;\r\n    vector<PII> edge2;\r\n    for(int i = 1; i <= k; i ++ )\r\n    {\r\n        edge2.push_back({i, k + 1});\r\n    }\r\n\r\n    for(int i = k; i < n - 1; i ++ ) edge2.push_back({i + 1, i + 2});\r\n\r\n    vector<vector<int>> adj1(n + 1);\r\n    vector<vector<int>> adj2(n + 1);\r\n    for(auto [u, v] : edge)\r\n    {\r\n        adj1[u].push_back(v);\r\n        adj1[v].push_back(u);\r\n    }\r\n    for(auto [u, v] : edge2)\r\n    {\r\n        adj2[u].push_back(v);\r\n        adj2[v].push_back(u);\r\n    }\r\n\r\n    int c1 = 0;\r\n    vector<int> d1(n + 1);\r\n    function<void(int, int)> dfs1 = [&](int x, int fa)\r\n    {\r\n        for(auto y : adj1[x])\r\n        {\r\n            if(y == fa) continue;\r\n            d1[y] = d1[x] + 1;\r\n            if (d1[y] > d1[c1]) c1 = y;\r\n            dfs1(y, x);\r\n        }\r\n    };\r\n    dfs1(1, -1);\r\n\r\n    int c2 = 0;\r\n    vector<int> d2(n + 1);\r\n    function<void(int, int)> dfs2 = [&](int x, int fa)\r\n    {\r\n        for(auto y : adj2[x])\r\n        {\r\n            if(y == fa) continue;\r\n            d2[y] = d2[x] + 1;\r\n            if (d2[y] > d2[c2]) c2 = y;\r\n            dfs2(y, x);\r\n        }\r\n    };\r\n    dfs2(1, -1);\r\n\r\n    if(d1[c1] < d2[c2])\r\n    {\r\n        cout << d1[c1] << '\\n';\r\n        for(auto [u, v] : edge)\r\n        {\r\n            cout << u << ' ' << v << '\\n';\r\n        }\r\n    }\r\n    else\r\n    {\r\n        cout << d2[c2] << '\\n';\r\n        for(auto [u, v] : edge2)\r\n        {\r\n            cout << u << ' ' << v << '\\n';\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}"
}