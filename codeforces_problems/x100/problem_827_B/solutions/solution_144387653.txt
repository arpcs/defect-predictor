{
    "id": 144387653,
    "contestId": 827,
    "creationTimeSeconds": 1643437874,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "Provokian"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// time-limit: 2000\n// problem-url: https://codeforces.com/contest/827/problem/B\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define sz(v) int(v.size())\n#define ar array\ntypedef long long ll;\nconst int MAXN = 2e5+10, MOD = 1e9+7;\n\nvoid solve() {\n    int n, k;\n    cin >> n >> k;\n    vector <pair<int int>> edges;\n    int arr[k];\n    for(int i = 0; i < k; i++) {\n\tarr[i] = i + 1;\n\tedges.push_back({0, i + 1});\n    }\n    for(int i = k + 1; i < n; i++) {\n\tedges.push_back({i, arr[i%k]});\n\tarr[i%k] = i;\n    }\n    int dia = 2 * ((n - 1) / k) + min(2, (n - 1) % k);\n    cout << dia << '\\n';\n    for(pair<int, int> e : edges) {\n\tcout << e.first + 1<< ' ' << e.second + 1 << '\\n';\n    }\n}\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    int T = 1;\n    // cin >> T;\n    while (T--) solve();\n}\n"
}