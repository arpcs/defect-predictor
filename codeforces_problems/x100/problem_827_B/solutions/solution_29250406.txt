{
    "id": 29250406,
    "contestId": 827,
    "creationTimeSeconds": 1502067035,
    "relativeTimeSeconds": 2135,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "Kasia"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1502064900
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 14131200,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1e6 + 5;\n\n#define st first\n#define nd second\n#define make(a,b) make_pair(a,b)\n\ntypedef pair<int,int> pun;\ntypedef long long ll;\n\nvector<pair<string, vector<int>>> data;\n\nbool cmp(const pair<string, vector<int>> &x, const pair<string, vector<int>> &y) {\n\treturn x.first.size() > y.first.size();\n}\n\nvector<int> events[N];\n\nint main()\n{\n\tint n;\n\tcin >> n;\n\tfor (int i = 1; i <= n; i ++) {\n\t\tstring s;\n\t\tcin >> s;\n\t\tdata.push_back(make_pair(s, vector<int>()));\n\t\tint k;\n\t\tcin >> k;\n\t\tfor (int j = 0; j  < k; j ++) {\n\t\t\tint a;\n\t\t\tcin >> a;\n\t\t\tdata.back().second.push_back(a);\n\t\t\tevents[a].push_back(i);\n\t\t\tevents[a+s.size()].push_back(-i);\n\t\t}\n\t}\n\tset<pair<int,int>> akt;\n\tstring ans = \"\";\n\tfor (int x = 1; x < N; x ++) {\n\t\tif (not events[x].empty()) {\n\t\t\tcout << ans;\n\t\t\tans = \"\";\n\t\t}\n\t\tfor (int y: events[x]) {\n\t\t\tif (y > 0) akt.insert(make_pair(x, y));\n\t\t\telse akt.erase(make_pair(x - data[-y-1].first.size(), -y));\n\t\t}\n\t\tif (akt.empty()) ans += 'a';\n\t\telse {\n\t\t\tpair<int,int> p = *akt.begin();\n\t\t\tans += data[p.second - 1].first[x - p.first];\n\t\t}\n\t}\n\tcout << \"\\n\";\n}\n"
}