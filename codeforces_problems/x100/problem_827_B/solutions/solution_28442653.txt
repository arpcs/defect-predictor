{
    "id": 28442653,
    "contestId": 827,
    "creationTimeSeconds": 1499795332,
    "relativeTimeSeconds": 3831,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "ch_egor"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 3,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 5632000,
    "source": "#include <stdio.h>\n#include <iostream>\n#include <stdlib.h>\n#include <string>\n#include <string.h>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <assert.h>\n#include <algorithm>\n#include <iomanip>\n#include <time.h>\n#include <math.h>\n#include <bitset>\n\n#pragma comment(linker, \"/STACK:256000000\")\n\nusing namespace std;\n\ntypedef long long int ll;\ntypedef long double ld;\n\nconst int INF = 1000 * 1000 * 1000 + 21;\nconst ll LLINF = (1ll << 60) + 5;\nconst int MOD = 1000 * 1000 * 1000 + 7;\n\nint n, m;\n\n#define ends ksjfsdk22234\n\nvector<pair<int, int>> ans;\nvector<int> ends;\n\nint main()\n{\n#ifdef CH_EGOR\n\tfreopen(\"input.txt\", \"r\", stdin);\n\t//freopen(\"output.txt\", \"w\", stdout);\n#else\n\t//freopen(\"\", \"r\", stdin);\n\t//freopen(\"\", \"w\", stdout);\n#endif\n\t\n\tscanf(\"%d%d\", &n, &m);\n\t\n\tint root = 1;\n\t\n\tint per1 = (n - 1) / m;\n\tint ptr = 2;\n\tint ost = n - 1 - m * per1;\n\tfor (int i = 0; i < m; ++i)\n\t{\n\t\tans.push_back({root, ptr});\n\t\t++ptr;\n\t\tfor (int j = 1; j < per1; ++j)\n\t\t{\n\t\t\tans.push_back({ptr - 1, ptr});\n\t\t\t++ptr;\n\t\t}\n\t\tends.push_back(ptr - 1);\n\t}\n\n\t\n\tif (ost)\n\t{\n\t\tfor (int i = 0; i < ost; ++i)\n\t\t{\n\t\t\tans.push_back({ends[i], ptr});\n\t\t\t++ptr;\n\t\t}\n\t}\n\t\n\tif (ost == 0)\n\t{\n\t\tprintf(\"%d\\n\", 2 * per1);\n\t}\n\telse if (ost == 1)\n\t{\n\t\tprintf(\"%d\\n\", 2 * per1 + 1);\n\t}\n\telse\n\t{\n\t\tprintf(\"%d\\n\", 2 * per1 + 2);\n\t}\n\t\n\tfor (int i = 0; i < (int)ans.size(); ++i)\n\t{\n\t\tprintf(\"%d %d\\n\", ans[i].first, ans[i].second);\n\t}\t\n\n\treturn 0;\n}\n\n"
}