{
    "id": 82148694,
    "contestId": 827,
    "creationTimeSeconds": 1590947818,
    "relativeTimeSeconds": 1618,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "SSRS_"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1590946200
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 592,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main(){\r\n  int n, k;\r\n  cin >> n >> k;\r\n  int t = 10000000;\r\n  int f = 0;\r\n  while (t - f > 1){\r\n    long long m = (t + f) / 2;\r\n    long long cnt = 0;\r\n    if (m % 2 == 0){\r\n      cnt = (m / 2) * k + 1;\r\n    } else {\r\n      cnt = (m / 2) * (k - 1) + (m / 2 + 1) + 1;\r\n    }\r\n    if (cnt >= n){\r\n      t = m;\r\n    } else {\r\n      f = m;\r\n    }\r\n  }\r\n  cout << t << endl;\r\n  int cnt = 0;\r\n  for (int i = 0; i < k; i++){\r\n    cout << 1 << ' ' << i + 2 << endl;\r\n    cnt++;\r\n  }\r\n  while (cnt < n - 1){\r\n    cout << cnt + 2 - k << ' ' << cnt + 2 << endl;\r\n    cnt++;\r\n  }\r\n}"
}