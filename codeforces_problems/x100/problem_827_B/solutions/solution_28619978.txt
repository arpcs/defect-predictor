{
    "id": 28619978,
    "contestId": 827,
    "creationTimeSeconds": 1500239121,
    "relativeTimeSeconds": 2661,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "Kostroma"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1500236460
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 483,
    "memoryConsumedBytes": 8294400,
    "source": "#pragma comment(linker, \"/STACK:512000000\")\n#define _CRT_SECURE_NO_WARNINGS\n//#include \"testlib.h\"\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define all(a) a.begin(), a.end()\ntypedef long long li;\ntypedef long double ld;\nvoid solve(bool);\nvoid precalc();\nclock_t start;\nint main() {\n#ifdef AIM\n  freopen(\"/home/alexandero/ClionProjects/ACM/input.txt\", \"r\", stdin);\n  //freopen(\"/home/alexandero/ClionProjects/ACM/output.txt\", \"w\", stdout);\n  //freopen(\"out.txt\", \"w\", stdout);\n#else\n  //freopen(\"input.txt\", \"r\", stdin);\n  //freopen(\"output.txt\", \"w\", stdout);\n#endif\n  start = clock();\n  int t = 1;\n  cout.sync_with_stdio(0);\n  cin.tie(0);\n  precalc();\n  cout.precision(10);\n  cout << fixed;\n  //cin >> t;\n  int testNum = 1;\n  while (t--) {\n    //cout << \"Case #\" << testNum++ << \": \";\n    //cerr << testNum << endl;\n    solve(true);\n    //cerr << testNum - 1 << endl;\n  }\n  cout.flush();\n#ifdef AIM1\n  while (true) {\n      solve(false);\n  }\n#endif\n\n#ifdef AIM\n  cerr << \"\\n\\n time: \" << (clock() - start) / 1.0 / CLOCKS_PER_SEC << \"\\n\\n\";\n#endif\n\n  return 0;\n}\n\n//BE CAREFUL: IS INT REALLY INT?\n\ntemplate<typename T>\nT binpow(T q, T w, T mod) {\n  if (!w)\n    return 1 % mod;\n  if (w & 1)\n    return q * 1LL * binpow(q, w - 1, mod) % mod;\n  return binpow(q * 1LL * q % mod, w / 2, mod);\n}\n\ntemplate<typename T>\nT gcd(T q, T w) {\n  while (w) {\n    q %= w;\n    swap(q, w);\n  }\n  return q;\n}\ntemplate<typename T>\nT lcm(T q, T w) {\n  return q / gcd(q, w) * w;\n}\n\nvoid precalc() {\n\n}\n\ntemplate<typename T>\nvoid relax_min(T& cur, T val) {\n  cur = min(cur, val);\n}\n\ntemplate<typename T>\nvoid relax_max(T& cur, T val) {\n  cur = max(cur, val);\n}\n\n#define int li\n//const int mod = 1000000007;\n\nvoid solve(bool read) {\n  int n, k;\n  cin >> n >> k;\n  /*if (k == n - 1) {\n    cout << 2 << endl;\n    for (int i = 1; i < n; ++i) {\n      cout << 1 << \" \" << i + 1 << endl;\n    }\n    return;\n  }\n  if (k == n - 2) {\n    cout << 3 << endl;\n    for (int i = 2; i < n; ++i) {\n      cout << 1 + (i % 2) << \" \" << i + 1 << endl;\n    }\n    return;\n  }*/\n\n  vector<pair<int, int>> edges;\n\n  int L = 1, R = n - k + 4;\n  while (L + 1 < R) {\n    int d = (L + R) / 2;\n    int rest_leaves = k - 2, rest_big = n - k - (d - 2);\n    int len = (d - 1) / 2;\n    if (rest_leaves * (len - 1) >= rest_big) {\n      edges.clear();\n      for (int i = 0; i + 1 < d; ++i) {\n        edges.push_back({i, i + 1});\n      }\n      int last_v = d;\n      for (int i = 0; i < rest_leaves; ++i) {\n        int prev_v = d / 2;\n        for (int j = 0; j + 1 < len && rest_big > 0; ++j) {\n          edges.push_back({prev_v, last_v});\n          prev_v = last_v;\n          ++last_v;\n          --rest_big;\n        }\n        edges.push_back({prev_v, last_v});\n        ++last_v;\n      }\n      R = d;\n    } else {\n      L = d;\n    }\n  }\n\n  assert(!edges.empty());\n\n  cout << R - 1 << endl;\n  for (auto item : edges) {\n    cout << item.first + 1 << \" \" << item.second + 1 << endl;\n  }\n\n}"
}