{
    "id": 28458437,
    "contestId": 827,
    "creationTimeSeconds": 1499826533,
    "relativeTimeSeconds": 2513,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "fengsuiyan"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1499824020
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 5939200,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint n, k;\nvector < pair <int, int> > e;\nvector <int> v;\n\nint go(int cnt, int leaf) {\n  if (cnt == 1) {\n    v.push_back(1);\n    return 1 + 1;\n  } else if (cnt == 2) {\n    v.push_back(1);\n    v.push_back(2);\n    e.push_back({1, 2});\n    return 1 + 1 + 1;\n  } else {\n    int k = 0;\n    for (int i = 2; i <= cnt; ++i) {\n      if (v.size() <= k) {\n\tv.push_back(i);\n\te.push_back({1, i});\n      } else {\n\te.push_back({v[k], i});\n\tv[k] = i;\n      }\n      ++k;\n      if (k == leaf) k = 0;\n    }\n    int a = (cnt - 1) / leaf;\n    int b = (cnt - 1) % leaf;\n    if (b == 0) {\n      return a + a + 2;\n    } else if (b == 1) {\n      return a + a + 1 + 2;\n    } else {\n      return a + a + 1 + 1 + 2;\n    }\n  }\n}\n\nvoid add(int l, int r) {\n  int k = 0;\n  for (int i = l; i <= r; ++i) {\n    e.push_back({v[k], i});\n    ++k;\n    if (k == v.size()) k = 0;\n  }\n}\n\n\nint main() {\n  scanf(\"%d%d\", &n, &k);\n  int t = min(n - k - 1, k);\n  int d = go(n - k, t);\n  add(n - k + 1, n);\n  printf(\"%d\\n\", d);\n  for (auto ee : e) {\n    printf(\"%d %d\\n\", ee.first, ee.second);\n  }\n  return 0;\n}\n"
}