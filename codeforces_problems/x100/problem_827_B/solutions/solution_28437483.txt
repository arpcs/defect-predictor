{
    "id": 28437483,
    "contestId": 827,
    "creationTimeSeconds": 1499793363,
    "relativeTimeSeconds": 1863,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "Skedar"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 13,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 23347200,
    "source": "#include<bits/stdc++.h>\r\n#define rep(i,k,n) for(ll i= (ll) k;i< (ll) n;i++)\r\n#define all(v) (v).begin(), (v).end()\r\n#define SZ(v) (int)((v).size())\r\n#define pb push_back\r\n#define ft first\r\n#define sd second\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double ld;\r\nconst long long INF = 4e18L + 1;\r\nconst int IINF = 2e9 + 1;\r\n\r\nusing namespace std;\r\n\r\ntemplate<class TH> void _dbg(const char *sdbg, TH h){ cerr<<sdbg<<'='<<h<<endl; }\r\ntemplate<class TH, class... TA> void _dbg(const char *sdbg, TH h, TA... a) {\r\n  while(*sdbg!=',')cerr<<*sdbg++;cerr<<'='<<h<<','; _dbg(sdbg+1, a...);\r\n}\r\n\r\n#ifdef LOCAL\r\n#define DBG(...) _dbg(#__VA_ARGS__, __VA_ARGS__)\r\n#else\r\n#define DBG(...) (__VA_ARGS__)\r\n#define cerr if(0)cout\r\n#endif\r\n\r\n\r\nvector < int > V[100005];\r\nstring wej[100005];\r\nconst int pot = (1<<21);\r\n\r\nint drzewko[2*pot];\r\n\r\nint wartosc(int x)\r\n{\r\n\tx += pot;\r\n\tint wyn = 0;\r\n\twhile(x)\r\n\t{\r\n\t\t\r\n\t\tif (drzewko[x])\r\n\t\t\twyn = drzewko[x];\r\n\t\tx/=2;\r\n\t}\r\n\treturn wyn;\r\n}\r\n\r\nvoid ustaw(int a, int b, int jal, int jap, int naco, int ind)\r\n{\r\n//\tcerr << a << \" \" << b << \" \" << jal << \" \" << jap << \" \" << naco << \" \" << ind<<endl;\r\n\tif (b < jal)\r\n\t\treturn;\r\n\tif (a > jap)\r\n\t\treturn;\r\n\tif (a <= jal && b >= jap)\r\n\t{\r\n\t\tdrzewko[ind] = naco;\r\n\t\treturn;\r\n\t}\r\n\tint sr = (jal+jap)/2;\r\n\tif (drzewko[ind])\r\n\t{\r\n\t\tdrzewko[2*ind] = drzewko[2*ind+1] = drzewko[ind];\r\n\t\tdrzewko[ind] = 0;\r\n\t}\r\n\tustaw(a, b, jal, sr, naco, 2*ind);\r\n\tustaw(a, b, sr+1, jap, naco, 2*ind+1);\r\n}\r\n\r\n\r\nint main()\r\n{\r\n#ifndef LOCAL\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n#endif\r\n\tint n, k;\r\n\tcin>>n>>k;\r\n\tqueue < int > q;\r\n\t\r\n\tint wys = (n-1)/k;\r\n\twys = 2 * (wys-1);\r\n\tif ( (n-1)%k > 0)\r\n\t\twys++;\r\n\tif ( (n-1)%k > 1)\r\n\t\twys++;\r\n\twys += 2;\r\n\tcout<<wys<<\"\\n\";\r\n\t\r\n\tfor(int i=2; i<=k+1; i++)\r\n\t{\r\n\t\tcout <<\"1 \" << i <<\"\\n\";\r\n\t\tq.push(i);\r\n\t}\r\n\tfor(int i = k+2; i<=n; i++)\r\n\t{\r\n\t\tint akt = q.front();\r\n\t\tq.pop();\r\n\t\tcout << akt << \" \" << i << \"\\n\";\r\n\t\tq.push(i);\r\n\t}\r\n\t\r\n  return 0;\r\n}\r\n"
}