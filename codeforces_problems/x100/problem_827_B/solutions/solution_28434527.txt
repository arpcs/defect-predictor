{
    "id": 28434527,
    "contestId": 827,
    "creationTimeSeconds": 1499792458,
    "relativeTimeSeconds": 958,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "Egor.Lifar"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 18,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1945600,
    "source": "/*\n\u0421\u0422\u0420\u041e\u0418\u041c \u0421\u0422\u0415\u041d\u0423 \u0420\u0410\u0411\u041e\u0422\u042f\u0413\u0418!\n\u2588\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2588\n\u2588\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2588\n\u2588\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2588\n\u2588\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2588\n\u2588\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2588\n\u2588\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2588\n\u2588\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2588\n\u2588\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2588\n\u2588\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2569\u2550\u2566\u2550\u2588\n\u2588\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2588\n*/\n#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cstdio>\n#include <numeric>\n#include <cstring>\n#include <ctime>\n#include <cstdlib>\n#include <set>\n#include <map>\n#include <unordered_map>\n#include <unordered_set>\n#include <list>\n#include <cmath>\n#include <bitset>\n#include <cassert>\n#include <queue>\n#include <stack>\n#include <deque>\n    \n     \n     \nusing namespace std;\ntemplate<typename T1, typename T2>inline void chkmin(T1 &x, T2 y) { if (x > y) x = y; }\ntemplate<typename T1, typename T2>inline void chkmax(T1 &x, T2 y) { if (x < y) x = y; }\n/** Interface */\n     \ninline int readChar();\ntemplate <class T = int> inline T readInt(); \ntemplate <class T> inline void writeInt( T x, char end = 0 );\ninline void writeChar( int x ); \ninline void writeWord( const char *s );\n     \n/** Read */\n     \nstatic const int buf_size = 4096;\n     \ninline int getChar() {\n    static char buf[buf_size];\n    static int len = 0, pos = 0;\n    if (pos == len) {\n        pos = 0, len = fread(buf, 1, buf_size, stdin);\n    }\n    if (pos == len) {\n        return -1;\n    }\n    return buf[pos++];\n}\n     \ninline int readChar() {\n    int c = getChar();\n    while (c <= 32) {\n        c = getChar();\n    }\n    return c;\n}\n     \ntemplate <class T>\ninline T readInt() {\n    int s = 1, c = readChar();\n    T x = 0;\n    if (c == '-')\n        s = -1, c = getChar();\n    while ('0' <= c && c <= '9')\n        x = x * 10 + c - '0', c = getChar();\n    return s == 1 ? x : -x;\n}\n     \n/** Write */\n     \nstatic int write_pos = 0;\nstatic char write_buf[buf_size];\n     \ninline void writeChar( int x ) {\n    if (write_pos == buf_size)\n        fwrite(write_buf, 1, buf_size, stdout), write_pos = 0;\n    write_buf[write_pos++] = x;\n}\n     \ntemplate <class T> \ninline void writeInt( T x, char end ) {\n    if (x < 0)\n        writeChar('-'), x = -x;\n     \n    char s[24];\n    int n = 0;\n    while (x || !n)\n        s[n++] = '0' + x % 10, x /= 10;\n    while (n--)\n        writeChar(s[n]);\n    if (end)\n        writeChar(end);\n}\n     \ninline void writeWord( const char *s ) {     while (*s)\nwriteChar(*s++); }\n     \nstruct Flusher {\n    ~Flusher() {\n        if (write_pos)\n            fwrite(write_buf, 1, write_pos, stdout), write_pos = 0;\n    }\n} flusher;   \n#define sz(c) (int)(c).size()\n#define all(c) (c).begin(), (c).end()\n#define rall(c) (c).rbegin(), (c).rend()\n#define left left228\n#define right right228\n#define next next228\n#define rank rank228\n#define prev prev228\n#define y1 y1228\n\n\nint n, k;\n\n\nint main() {\n\tn = readInt(), k = readInt();\n\tif (k == 2) {\n\t\twriteInt(n - 1, '\\n');\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\twriteInt(i, ' ');\n\t\t\twriteInt(i + 1, '\\n');\n\t\t}\n\t\treturn 0;\n\t}\n\tif (k == n - 1) {\n\t\twriteInt(2, '\\n');\n\t\tfor (int i = 2; i <= n; i++) {\n\t\t\twriteInt(1, ' ');\n\t\t\twriteInt(i, '\\n');\n\t\t}\n\t\treturn 0;\n\t}\n\tint f = n - k - 1;\n\tint uk = k + 2;\n\twriteInt(2 + f / k + (f + k - 1) / k, '\\n');\n\tfor (int i = 2; i <= k + 1; i++) {\n\t\tint last = i;\n\t\tfor (int j = 0; j < (i < 2 + f % k ? f / k: f / k + 1); j++) {\n\t\t\twriteInt(last, ' ');\n\t\t\twriteInt(uk, '\\n');\n\t\t\tlast = uk;\n\t\t\tuk++;\n\t\t}\n\t\twriteInt(last, ' ');\n\t\twriteInt(1, '\\n');\n\t}\n\treturn 0;\n}\n"
}