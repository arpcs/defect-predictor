{
    "id": 39668226,
    "contestId": 827,
    "creationTimeSeconds": 1529997362,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "saisurya027"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nvector<int>adj[200005];\r\nint main() {\r\n\t// your code goes here\r\n\t\r\n\tint n,k;\r\n\tcin>>n>>k;\r\n\tint a1=1,a2=1;\r\n\tfor(int i=2;i<=k+1;i++)\r\n\t{\r\n\t\tadj[1].push_back(i);\r\n\t}\r\n\tint x=n-k-1,y=k+2;\r\n\tqueue<pair<int,int> >q;\r\n\tfor(int i=2;i<=k+1;i++)\r\n\t{\r\n\t\tq.push(make_pair(i,1));\r\n\t}\r\n\twhile(x)\r\n\t{\r\n\t\tpair<int,int>p=q.front();\r\n\t\tq.pop();\r\n\t\tadj[p.ss].push_back(y++);\r\n\t\tq.push(make_pair(y-1,p.ss+1));\r\n\t\tx--;\r\n\t\tif(a1<p.ss+1)\r\n\t\t{\r\n\t\t\ta2=a1;\r\n\t\t\ta1=p.ss+1;\r\n\t\t}\r\n\t\telse if(a2<p.ss+1)\r\n\t\t{\r\n\t\t\ta2=p.ss+1;\r\n\t\t}\r\n\t}\r\n\tcout<<a1+a2<<endl;\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tfor(int j=0;j<adj[i].size();j++)\r\n\t\t{\r\n\t\t\tcout<<i<<' '<<adj[i][j]<<endl;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
}