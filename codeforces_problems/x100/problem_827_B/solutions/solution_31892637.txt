{
    "id": 31892637,
    "contestId": 827,
    "creationTimeSeconds": 1509365001,
    "relativeTimeSeconds": 3801,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "dyzsr"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1509361200
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint n, k;\r\n\r\nint main() {\r\n\tscanf(\"%d%d\", &n, &k);\r\n\tprintf(\"%d\\n\", (n - 1) / k + (n + k - 2) / k);\r\n\tfor (int i = 2; i <= k + 1; i++) {\r\n\t\tprintf(\"%d %d\\n\", 1, i);\r\n\t}\r\n\tfor (int i = k + 2; i <= n; i++) {\r\n\t\tprintf(\"%d %d\\n\", i - k, i);\r\n\t}\r\n\treturn 0;\r\n}\r\n"
}