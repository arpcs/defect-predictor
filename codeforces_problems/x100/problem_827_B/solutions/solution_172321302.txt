{
    "id": 172321302,
    "contestId": 827,
    "creationTimeSeconds": 1663313116,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "K-423"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 0,
    "source": "/**\n * Created by megurine on 2022/09/16 15:18:39.\n * \u8bf8\u5929\u795e\u4f5b\uff0c\u4f51\u6211\u4e0a\u5206\uff01\n **/\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define fastIO() ios::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr)\n#define itr(it) begin(it), end(it)\ntypedef long long ll;\ntypedef pair<int, int> PII;\ntypedef double db;\ntypedef long double ld;\ntypedef unsigned long long ull;\n#define endl '\\n'\n#define YES() cout << \"YES\\n\"\n#define NO() cout << \"NO\\n\"\n\nvoid solve() {\n    int n, k;\n    cin >> n >> k;\n    int m = n - k - 1;\n    int a = m / k, b = m % k;\n    cout << a * 2 + min(b, 2) + 2 << endl;\n    int idx = 2;\n    for (int i = 0; i < k; ++i) {\n        for (int j = a + (i < b) + 1, p = 1; j; --j) {\n            cout << p << ' ' << idx << endl;\n            p = idx++;\n        }\n    }\n}\n\nint main() {\n#ifdef MEGURINE\n#define fr(x) freopen(x, \"r\", stdin)\n#define fw(x) freopen(x, \"w\", stdout)\n    fr(\"../input.txt\");\n    fw(\"../output.txt\");\n    clock_t start = clock();\n#endif\n    fastIO();\n    int T = 1;\n//    cin >> T;\n    cout << fixed << setprecision(12);\n    while (T--) {\n        solve();\n    }\n    cout.flush();\n#ifdef MEGURINE\n    clock_t end = clock();\n    cout << \"\\n\\nRunning Time : \" << (double) (end - start) / CLOCKS_PER_SEC * 1000 << \"ms\" << endl;\n#endif\n    return 0;\n}"
}