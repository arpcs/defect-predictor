{
    "id": 28796837,
    "contestId": 827,
    "creationTimeSeconds": 1500801342,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "tangbingchang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int MAX = 200000 + 10;\r\n\r\nstruct Node {\r\n\tint x, y;\r\n\r\n\tbool operator < (const Node &args) const {\r\n\t\tif (x == args.x){\r\n\t\t\treturn y < args.y;\r\n\t\t}\r\n\t\treturn x < args.x;\r\n\t}\r\n}p[MAX];\r\n\r\nbool judge(int n, int k, int x){\r\n\r\n\tint ans = x + 1;\r\n\r\n\tif (ans >= n){\r\n\t\treturn true;\r\n\t}\r\n\r\n\tint c = x / 2;\r\n\r\n\tif ((k-2)*c >= (n-x-1)){\r\n\t\treturn true;\r\n\t}\u0001\r\n\r\n\treturn false;\r\n\r\n}\r\n\r\nvoid solve(int n, int k, int ans){\r\n\r\n\tint s = 0;\r\n\tfor (int i = 1; i<=ans; i++){\r\n\t\tp[s++] = (Node){i,i+1};\r\n\t}\r\n\r\n\tint c = ans / 2 + 1;\r\n\r\n\tint count = ans+2;\r\n\tfor (int i = 3; i<=k; i++){\r\n\t\tint x = c;\r\n\t\tfor (int j = 0; (j<ans/2) && count<=n; j++,count++){\r\n\t\t\tp[s++] = (Node){x, count};\r\n\t\t\tx = count;\r\n\t\t}\r\n\t}\r\n\r\n//\tsort(p, p+n-1);\r\n\r\n\tfor (int i = 0; i<n-1; i++){\r\n\t\tprintf(\"%d %d\\n\", p[i].x, p[i].y);\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint n, k;\r\n\r\n\twhile (scanf(\"%d%d\", &n, &k) != EOF){\r\n\r\n\t\tint l = 1, r = n-1;\r\n\r\n\t\twhile (l < r){\r\n\t\t\tint mid = (l + r) / 2;\r\n\t\t\tif (judge(n, k, mid)){\r\n\t\t\t\tr = mid;\r\n\t\t\t}else{\r\n\t\t\t\tl = mid + 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprintf(\"%d\\n\", r);\r\n\r\n\t\tsolve(n, k, r);\r\n\r\n\t}\r\n\r\n\treturn 0;\r\n\r\n\r\n\r\n}"
}