{
    "id": 78089434,
    "contestId": 827,
    "creationTimeSeconds": 1587883056,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "fast_progress"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 819200,
    "source": "#include<cstdio>\r\n#include<algorithm>\r\nusing namespace std;\r\nint n, K, D[201000];\r\nint main(){\r\n    int i, res = 0;\r\n    scanf(\"%d%d\",&n,&K);\r\n    printf(\"%d\\n\", (n-1)/K*2 + min((n-1)%K,2));\r\n    for(i=2;i<=n;i++)printf(\"%d %d\\n\",i,max(i-K,1));\r\n}"
}