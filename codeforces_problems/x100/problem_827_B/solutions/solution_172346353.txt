{
    "id": 172346353,
    "contestId": 827,
    "creationTimeSeconds": 1663331144,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "liugeng"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "Java 8",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 1325,
    "memoryConsumedBytes": 0,
    "source": "import java.util.*;\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc = new Scanner(System.in);\r\n        int n = sc.nextInt();\r\n        int k = sc.nextInt();\r\n        int ans = (n-1)/k*2;\r\n        if((n-1)%k==1){\r\n            ans++;\r\n        }else if((n-1)%k!=0){\r\n            ans+=2;\r\n        }\r\n        System.out.println(ans);\r\n        for(int i =2;i<=k;i++){\r\n            System.out.println(\"1 \"+i);\r\n        }\r\n        for(int i=k+1;i<=n;i++){\r\n            System.out.println(i-k+\" \"+i);\r\n        }\r\n    }\r\n\r\n}"
}