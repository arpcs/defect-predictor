{
    "id": 28498725,
    "contestId": 827,
    "creationTimeSeconds": 1499940949,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "dongsongshou"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 6246400,
    "source": "#include<stdio.h>\r\n#include<algorithm>\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nint a[1000100];\r\nint main()\r\n{\r\n    int n,k;\r\n    scanf(\"%d%d\",&n,&k);\r\n    int ans=(n-1)%k>=2?2:1;\r\n    if((n-1)%k==0)\r\n        ans=0;\r\n    printf(\"%d\\n\",(n-1)/k*2+ans);\r\n    int k1=0;\r\n    for(int i=2; i<=k+1; i++)\r\n    {\r\n        printf(\"1 %d\\n\",i);\r\n        a[k1++]=i;\r\n    }\r\n    int head=0,tail=k1-1;\r\n    for(int i=k+2; i<=n; i++)\r\n    {\r\n        printf(\"%d %d\\n\",a[head],i);\r\n        head++;\r\n        tail++;\r\n        a[tail]=i;\r\n    }\r\n}\r\n"
}