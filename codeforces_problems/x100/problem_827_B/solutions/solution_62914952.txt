{
    "id": 62914952,
    "contestId": 827,
    "creationTimeSeconds": 1571473570,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "yst_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<cstdio>\r\n#include<algorithm>\r\n#include<cstring>\r\nusing namespace std;\r\n#define N 500050\r\nint n,k;\r\nint ans,tot,seed;\r\nstruct apple\r\n{\r\n    int from,to,next;\r\n}indexx[N];\r\nint head[N],cnt;\r\nvoid init(int x,int y)\r\n{\r\n    indexx[++cnt].to=y;\r\n    indexx[cnt].from=x;\r\n    indexx[cnt].next=head[x];\r\n    head[x]=cnt;\r\n}\r\nbool vis[N];\r\nvoid dfs(int u)\r\n{\r\n\tvis[u]=1;\r\n\tfor(int i=head[u];i;i=indexx[i].next)\r\n\t{\r\n\t\tint v=indexx[i].to;\r\n\t\tif(!vis[v])\r\n\t\t{\r\n\t\t\tdfs(v);\r\n\t\t\tans=max(ans,dp[u]+1+dp[v]);\r\n\t\t\tdp[u]=max(dp[v]+1,dp[u]);\r\n\t\t}\r\n\t}\r\n}\r\nint main()\r\n{\r\n    scanf(\"%d%d\",&n,&k);\r\n    seed=(n-1)/k;\r\n    tot=1;\r\n    for(int i=2;i<=k+1;i++)\r\n    {\r\n    \tinit(1,++tot);\r\n    }\r\n    for(int i=tot+1;i<=n;i++)\r\n    {\r\n    \tfor(int j=1;j<=seed;j++)\r\n    \t{\r\n    \t\tif(tot==n) break;\r\n    \t\tinit(tot,tot+1);\r\n    \t\ttot++;\r\n    \t}\r\n    }\r\n    dfs(1);\r\n    printf(\"%d\\n\",ans);\r\n    for(int i=1;i<=cnt;i++)\r\n    {\r\n        printf(\"%d %d\\n\",indexx[i].from,indexx[i].to);\r\n    }\r\n}"
}