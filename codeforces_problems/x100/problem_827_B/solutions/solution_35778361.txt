{
    "id": 35778361,
    "contestId": 827,
    "creationTimeSeconds": 1519806182,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 30924800,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n#define ll long long\nconst int N = 1e6+5;\nvector<int>g[N],s;\nint d[N];\nint ss,tt,ss_size=0,tt_size=0;\nvoid dfs(int u,int fa,int size,int flag)\n{\n\tif(!flag){if(ss_size<size){ss_size=size;ss=u;}}\n\telse if(tt_size<size){tt_size=size;tt=u;}\n\tfor(auto &t:g[u]){ if(t!=fa)dfs(t,u,size+1,flag);}\n}\nvoid dfs1(int u,int fa)\n{\n\tfor(auto &t:g[u]){if(t!=fa){printf(\"%d %d\\n\",u,t);dfs1(t,u);}}\n}\nint main()\n{\n\tint n,k;scanf(\"%d%d\",&n,&k);\n\tint m=n-k-1;\n\tfor(int i=0;i<min(m,k);i++) s.pb(0);\n\tfor(auto &t:s) t=m/k;\n\tfor(int i=0;i<m%k;i++)s[i]++;int j=2;\n\tfor(auto &t:s){int u;u=1;\n\t\tfor(int i=1;i<=t;i++){d[u]++;d[j]++;\n\t\t\tg[u].pb(j);g[j].pb(u);u=j;j++;\n\t\t}\n\t}int tmp=0;\n\tfor(int i=1;i<=n;i++){\n\t\tif(d[i]==1){if(!tmp) tmp=i;\n\t\t\tg[i].pb(j);g[j].pb(i);j++;k--;\t\n\t\t}\n\t}if(!tmp) tmp=1;\n\twhile(k--){g[tmp].pb(j);g[j].pb(tmp);j++;}\n\tdfs(1,-1,0,0);dfs(ss,-1,0,1);\n\tprintf(\"%d\\n\",tt_size);\n\tdfs1(1,-1);\n\treturn 0;\n}\n"
}