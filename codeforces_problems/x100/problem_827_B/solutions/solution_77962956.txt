{
    "id": 77962956,
    "contestId": 827,
    "creationTimeSeconds": 1587769654,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "Rohit_1221"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 4198400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define N 100005\r\n#define pb push_back\r\n#define int long long\r\n#define pi pair<int , int>\r\n#define mp make_pair\r\nvector<int> edges[N];\r\n#define f first\r\n#define s second\r\nbool visited[N];\r\nbool arr[N];\r\nint dp[N];\r\nint parent[N];\r\nint find(int x){\r\n if(parent[x] == -1){\r\n return x;\r\n }\r\n return find(parent[x]);\r\n}\r\nint32_t main(){\r\n\tint n , k;\r\n\tcin>>n>>k;\r\n  cout<<n-k+1<<endl;\r\n  vector<pi> v;\r\n  for(int i = 1 ; i < n-k ; i++){\r\n    v.pb({i , i+1});\r\n  }\r\n  // 1 and n-k\r\n  int cnt = n-k+1;\r\n  int l = k/2;\r\n  int z = k- l;\r\n  int y = n-k;\r\n  int arr[2];\r\n  arr[0] = y;\r\n  arr[1] = 1;\r\n  for(auto it:arr){\r\n     for(int i = 0 ; i < z ; i++){\r\n\t     v.pb({it , cnt});\r\n\t     cnt++;\r\n\t }\r\n\t if(cnt == n+1)break;\r\n\t z = l;\r\n  }\r\n  for(auto it:v){\r\n   cout<<it.f<<\" \"<<it.s<<endl;\r\n  }\r\n\t\r\n}\r\n"
}