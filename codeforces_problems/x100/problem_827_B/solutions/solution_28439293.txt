{
    "id": 28439293,
    "contestId": 827,
    "creationTimeSeconds": 1499794008,
    "relativeTimeSeconds": 2508,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "biGinNer"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "room": 5,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "PRETESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1843200,
    "source": "#include <map>\r\n#include <functional>\r\n#include <vector>\r\n#include <cstdio>\r\n#include <array>\r\n#include <utility>\r\n#include <iterator>\r\ntemplate<typename T> struct ScanfSpecifier{};\r\n#define DEF(T,V) template<> struct ScanfSpecifier<T>{static constexpr const char* value = V;};\r\nDEF(char*,\"%s\")DEF(int,\"%d\")DEF(double,\"%lf\")DEF(float,\"%f\")DEF(char,\"%c\")DEF(const char*,\"%s\")DEF(unsigned long,\"%lu\")DEF(unsigned int, \"%u\")\r\n#ifdef _MSC_VER\r\nDEF(long long int,\"%I64d\")\r\n#else\r\nDEF(long long int,\"%lld\")\r\n#endif\r\n#undef DEF\r\ntemplate<typename T> int RD(T& arg){return std::scanf(ScanfSpecifier<T>::value, &arg);}\r\ntemplate<int S> int RD(char (&arg)[S]){return std::scanf(\"%s\", arg);}\r\nint RD(char* arg){return std::scanf(\"%s\", arg);}\r\ntemplate<> int RD<char>(char& arg){return std::scanf(\" %c\", &arg);}\r\ntemplate<typename T, typename... Args> int RD(T& arg1, Args&... args) {return RD(arg1) + RD(args...);}\r\ntemplate<typename T> T RD(){T ret; RD(ret); return ret;}\r\ntemplate<typename It> void RDV(It begin, It end) { while(begin != end) RD(*begin++); }\r\ntemplate<typename C> void RDV(C& c) {RDV(std::begin(c), std::end(c));}\r\ntemplate<typename T> void WT(T arg) {std::printf(ScanfSpecifier<T>::value, arg); }\r\ntemplate<typename T, typename U> void WT(std::pair<T, U> arg) {std::printf(\"(\"); WT(arg.first); std::printf(\", \"); WT(arg.second); std::printf(\")\");}\r\ntemplate<typename... Args> void WT(Args... args) { int alc = 0; int dummy[] = {((alc++? std::printf(\" \"): 0), WT(args), 0)...}; }\r\n\r\ntemplate<typename... Args> void WTL(Args... args) { WT(args...); std::printf(\"\\n\"); }\r\ntemplate<typename It> void WTV(It begin, It end) { int alc = 0; while(begin != end) (alc++? std::printf(\" \"): 0), WT(*begin++); }\r\ntemplate<typename C> void WTV(const C& c) {WTV(std::begin(c), std::end(c));}\r\ntemplate<typename It> void WTVL(It begin, It end) { WTV(begin, end); std::printf(\"\\n\"); }\r\ntemplate<typename C> void WTVL(const C& c) {WTVL(std::begin(c), std::end(c));}\r\n\r\n#define _M_VARGS_NUM_IMPL(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, N, ...) N\r\n#define _M_VARGS_NUM(...) _M_VARGS_NUM_IMPL(__VA_ARGS__, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1)\r\n#define _W1(_1) (#_1[0] == '\"' || #_1[0] == '\\''? WT(\"\", _1, \"\"): WT('[', #_1, '=', _1, ']'))\r\n#define _W2(_1, _2) (_W1(_1), _W1(_2))\r\n#define _W3(_1, _2, _3) (_W1(_1), _W2(_2, _3))\r\n#define _W4(_1, _2, _3, _4) (_W1(_1), _W3(_2, _3, _4))\r\n#define _W5(_1, _2, _3, _4, _5) (_W1(_1), _W4(_2, _3, _4, _5))\r\n#define _W6(_1, _2, _3, _4, _5, _6) (_W1(_1), _W5(_2, _3, _4, _5, _6))\r\n#define _W7(_1, _2, _3, _4, _5, _6, _7) (_W1(_1), _W6(_2, _3, _4, _5, _6, _7))\r\n#define _W8(_1, _2, _3, _4, _5, _6, _7, _8) (_W1(_1), _W7(_2, _3, _4, _5, _6, _7, _8))\r\n#define _WW_IMPL2(num, ...) _W ## num(__VA_ARGS__)\r\n#define _WW_IMPL(num, ...) _WW_IMPL2(num, __VA_ARGS__)\r\n#define WW(...) (std::printf(\"(%03d) \", __LINE__), _WW_IMPL(_M_VARGS_NUM(__VA_ARGS__), __VA_ARGS__), WTL(\"\"))\r\n\r\n\r\n\r\n\r\nstruct Range\r\n{   \r\n    struct It {   int num, step; int operator*(){return num;} void operator++(){num += step;} bool operator!=(const It& other){return num != other.num;} };\r\n    Range(int ee):b(0),e(ee){}\r\n    Range(int bb, int ee):b(bb), e(ee){}\r\n    It begin(){return {b, (b < e? 1: -1)};}\r\n    It end(){return {e, 0};}\r\n    int b, e;\r\n};\r\n\r\ntemplate<typename T> inline T& UMAX(T& x, T y){if(x < y)x = y; return x;}\r\ntemplate<typename T> inline T& UMIN(T& x, T y){if(y < x)x = y; return x;}\r\ntemplate<typename T, typename... Args> struct ArithmiticPromotion { typedef decltype(T() + typename ArithmiticPromotion<Args...>::type()) type; };\r\ntemplate<typename T, typename U> struct ArithmiticPromotion<T, U> { typedef decltype(T() + U()) type; };\r\ntemplate<typename T> struct ArithmiticPromotion<T, T> { typedef T type; };\r\ntemplate<typename T> struct ArithmiticPromotion<T> { typedef T type; };\r\ntemplate<typename T, typename U> typename ArithmiticPromotion<T, U>::type MAX(T a, U b) { return a < b? b: a; }\r\ntemplate<typename T, typename... Args> typename ArithmiticPromotion<T, Args...>::type MAX(T a, Args... args) { return MAX(a, MAX(args...)); }\r\ntemplate<typename T, typename U> typename ArithmiticPromotion<T, U>::type MIN(T a, U b) { return a < b? a: b; }\r\ntemplate<typename T, typename... Args> typename ArithmiticPromotion<T, Args...>::type MIN(T a, Args... args) { return MIN(a, MIN(args...)); }\r\n\r\n\r\n\r\n\r\n\r\n//alias\r\nusing RG = Range;\r\n//RD[L],RDV[L],WT[L],WTV[L] for i/o\r\n//template\r\n#include <vector>\r\n#include <string>\r\n#include <cstring>\r\n#include <set>\r\n#include <map>\r\n#include <cstdlib>\r\n#include <algorithm>\r\n#include <functional>\r\nusing namespace std;\r\n\r\ntypedef long long int ll;\r\n\r\nint main()\r\n{\r\n    int N, K;\r\n    RD(N, K);\r\n\r\n    int M = N - K;\r\n\r\n    for(int d = 3; ; d++)\r\n        if(M - (d - 2) <= (K - 2) * (d / 2 - 1))\r\n        {\r\n            int l = d / 2 - 1;\r\n            WTL(d - 1);\r\n            int root = d / 2 + 1;\r\n            for(int i: RG(d - 1))\r\n                WTL(i + 1, i + 2);\r\n\r\n            K -= 2;\r\n            M -= (d - 2);\r\n\r\n            int m = d + 1;\r\n            int k = N;\r\n\r\n            while(M)\r\n            {\r\n                for(int i = 0; i < l && M; i++)\r\n                    WTL(i? m - 1: root, m), m++, M--;\r\n\r\n                WTL(m - 1, k--);\r\n                K--;\r\n            }\r\n\r\n            while(K)\r\n                WTL(root, k--), K--;\r\n\r\n            break;\r\n        }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n"
}