{
    "id": 63850684,
    "contestId": 827,
    "creationTimeSeconds": 1572449922,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "YJU"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 1638400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef pair<ll,ll> pll;\r\nconst ll MOD=1e9+7;\r\nconst ll MOD2=998244353;\r\nconst ll N=2e5+5;\r\nconst ld pi=3.14159265359;\r\n#define REP(i,n) for(ll i=0;i<n;i++)\r\n#define REP1(i,n) for(ll i=1;i<=n;i++)\r\n#define pb push_back\r\n#define mp make_pair\r\n#define X first\r\n#define Y second\r\n#define setp setprecision\r\n#define lwb lower_bound\r\n#define SZ(a) (ll)a.size()\r\nvoid SRAND(){auto duration = std::chrono::system_clock::now().time_since_epoch();auto millis = std::chrono::duration_cast<std::chrono::milliseconds>(duration).count();srand(millis);}\r\n\r\nll n,k,p[N],mb,ma,ti=1,l;\r\nvector<ll> v;\r\n\r\nint main(){\r\n\tios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n\tcin>>n>>k;\r\n\tREP(i,(n-k-1)%k)v.pb((n-k-1)/k+1);\r\n\tREP(i,k-(n-k-1)%k)v.pb((n-k-1)/k);\r\n\tfor(auto i:v){\r\n\t\tif(i>=ma)mb=ma,ma=i;\r\n\t\telse if(i>=mb)mb=i;\r\n\t\tl=1;\r\n\t\tREP(j,i+1){\r\n\t\t\tp[++ti]=l;\r\n\t\t\tl=ti;\r\n\t\t}\r\n\t}\r\n\tcout<<mb+ma+1<<\"\\n\";\r\n\tfor(int i=2;i<=n;i++)cout<<i<<\" \"<<p[i]<<\"\\n\";\r\n\treturn 0;\r\n}\r\n\r\n"
}