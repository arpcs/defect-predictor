{
    "id": 63223598,
    "contestId": 827,
    "creationTimeSeconds": 1571819886,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "mopemope"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<cstdio>\r\nint read()\r\n{\r\n\tint x=0,f=1;char ch;\r\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\r\n\twhile(ch<='9'&&ch>='0'){x=x*10+ch-'0';ch=getchar();}\r\n\treturn f*x;\r\n}\r\nint n,k,rest,ans;\r\nint main()\r\n{\r\n\tn=read();k=read();\r\n\tans=(n-1)/k*2;\r\n\trest=n-((n-1)/k*k+1);\r\n\tif(rest==1)ans+=1;\r\n\tif(rest>=2)ans+=2;\r\n\tfor(int i=2;i<=k+1;i++)printf(\"%d %d\\n\",i,1);\r\n\tfor(int i=k+2;i<=n;i++)\r\n\t{\r\n\t\tprintf(\"%d %d\\n\",i,i-k);\r\n\t}\r\n}"
}