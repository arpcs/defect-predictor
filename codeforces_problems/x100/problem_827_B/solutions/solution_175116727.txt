{
    "id": 175116727,
    "contestId": 827,
    "creationTimeSeconds": 1665222973,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "Aleshka_Fortran"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 560,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <bits/stdc++.h>\t\r\n#include <time.h>\r\n\r\nusing namespace std;\r\n\r\nint main(int argc, char** argv) {\r\n\r\n\tios::sync_with_stdio(0); \r\n\t\r\n\tint n,k,x,cx;\r\n\tcin>>n>>k;\r\n\t\r\n\tx = n-k; cx=x;\r\n\t\r\n\tint xc=1, yc=2;\r\n\tif(k>=x-1){\r\n\t\tif(x==1){cout<<2<<endl;}if(x==2){cout<<3<<endl;}if(x>=3){cout<<4<<endl;}\r\n\t\twhile(k>0){\r\n\t\t\tcout<<xc<<' '<<yc<<endl;\r\n\t\t\tif(k<=x-1 && cx>1){\r\n\t\t\t\tcout<<yc<<' '<<yc+1<<endl;\r\n\t\t\t\tyc=yc+2; cx--; k--;}\r\n\t\t\telse{\r\n\t\t\t\tyc++; k--;}}\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\t\r\n\tint gr, ans, m, cnt;\r\n\tgr = x/k; m=x%k; cnt=0; ans = x/k*2+1;\r\n\tif(k>2 || m==1){ans++;}\r\n\tif(m==2){ans++;}if(m>2){ans+=2;}\r\n\tcout<<ans<<endl;\t\t\r\n\t\t\r\n\twhile(k>0){\r\n\t\tcout<<xc<<' '<<yc<<endl; cnt++;\r\n\t\tfor(int i=2; i<=gr; i++){xc=yc; yc++; cout<<xc<<' '<<yc<<endl;}\r\n\t\tif(m>0){m--; xc=yc; yc++; cout<<xc<<' '<<yc<<endl;}\r\n\t\tif(cnt>1){\r\n\t\t\tcout<<cx<<' '<<yc<<endl;}\r\n\t\telse{\r\n\t\t\tif(m==1){m--; xc=yc; yc++; cout<<xc<<' '<<yc<<endl;}\r\n\t\t\tcx=yc;}\r\n\t\tk--; xc=yc+1; yc=xc+1;\r\n\t}\r\n\r\n\r\n\treturn 0;\t\r\n}"
}