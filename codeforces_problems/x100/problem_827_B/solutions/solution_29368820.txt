{
    "id": 29368820,
    "contestId": 827,
    "creationTimeSeconds": 1502514806,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 2150400,
    "source": "#include <iostream>\n#include <stdio.h>\n#include <queue>\nusing namespace std;\nqueue<int> Q;\n\nint main(){\n\tint n,m;\n\twhile(~scanf(\"%d%d\",&n,&m)){\n\t\twhile(!Q.empty()) Q.pop();\n\t\tint ans=0;\n\t\tint tmp=m,sum=1;\n\t\twhile(n>tmp+sum){\n\t\t\tans+=2;\n\t\t\tsum+=tmp;\n\t\t\ttmp*=(m-1);\n\t\t}\n\t\tif(sum+tmp/m>=n) ans++;\n\t\telse ans+=2;\n\t\t\n\t\tcout << ans << endl;\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tcout << 1 << \" \" << i+1 << endl;\n\t\t\tQ.push(i+1);\n\t\t}\n\t\tint k=m+2;\n\t\twhile(k<=n){\n\t\t\tint tmp=Q.front();\n\t\t\tQ.pop();\n\t\t\tfor(int i=1;i<m&&k<=n;i++,k++){\n\t\t\t\tcout << tmp << \" \" << k << endl;\n\t\t\t\tQ.push(k);\n\t\t\t}\n\t\t}\n\t}\n}\n  \t\t\t  \t \t\t \t\t          \t\t\t  \t"
}