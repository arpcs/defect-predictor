{
    "id": 51915087,
    "contestId": 827,
    "creationTimeSeconds": 1553719689,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "AC_007"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 270233600,
    "source": "/*author:anshumanc007\r\ncreated on:25/03/2019*/\r\n//kya sach hai kya maya hai???\r\n#include <bits/stdc++.h>\r\n#include <queue>\r\n#include <stack>\r\nusing namespace std;\r\ntypedef pair<long long int,long long int>pa;\r\n#define pb push_back\r\n#define MAX 200005\r\nlong long int MOD=1e9+7;\r\nlong long int INF=1e18;\r\nbool visited[MAX]={false};\r\nlong long int dist[MAX]={0};\r\n\r\n\r\nint main()\r\n{\r\n       ios_base::sync_with_stdio(false);\r\n       cin.tie(NULL);\r\n       cout.tie(NULL);\r\n     \r\n       long long int i,j,k=0,l=0,r=0,m=0,n,x,y,z,a,b,p=0,cnt=0,cnt1=0,low,mid,high,ans=0,maxi=-INF,mini,t,q=0,ind;\r\n       string s,s1;\r\n    vector<long long int>adj[n+1];\r\n    cin>>n>>k;\r\n    vector<pa>V;\r\n    p=1;\r\n    i=2;\r\n    while(1)\r\n        {\r\n         \r\n            if(i>2 && (i-2)%k==0 )\r\n                 break;\r\n            V.pb({p,i});\r\n        \r\n            adj[p].pb(i);\r\n            adj[i].pb(p);\r\n           i++;\r\n        \r\n            \r\n        }\r\n    for(j=i;j<=n;j++)\r\n    {\r\n        \r\n        p++;\r\n        V.pb({p,j});\r\n        adj[p].pb(j);\r\n        adj[j].pb(p);\r\n        \r\n        \r\n       \r\n    }\r\n     queue<long long int> Q;\r\n    Q.push(1);\r\n    maxi=0;\r\n    visited[1]=true;\r\n    while(!Q.empty())\r\n    {\r\n        l=Q.front();\r\n          Q.pop();\r\n        for(auto j:adj[l])\r\n        { \r\n            if(!visited[j])\r\n            {\r\n                Q.push(j);\r\n                visited[j]=true;\r\n                dist[j]=dist[l]+1;\r\n                mid=j;\r\n                \r\n            }\r\n        }\r\n        \r\n    }\r\n    for(i=0;i<=n;i++)\r\n    {\r\n        visited[i]=false;\r\n        dist[i]=0;\r\n    }\r\n      Q.push(mid);\r\n      maxi=0;\r\n    visited[mid]=true;\r\n    while(!Q.empty())\r\n    {\r\n        l=Q.front();\r\n          Q.pop();\r\n        for(auto j:adj[l])\r\n        { \r\n            if(!visited[j])\r\n            {\r\n                Q.push(j);\r\n                visited[j]=true;\r\n                dist[j]=dist[l]+1;\r\n                if(dist[j]>maxi)\r\n                    maxi=dist[j];\r\n            }\r\n        }\r\n        \r\n    }\r\n    cout<<maxi<<endl;\r\n    for(i=0;i<n-1;i++)\r\n    {\r\n        cout<<V[i].first<<\" \"<<V[i].second<<endl;\r\n    }\r\n    \r\n}\r\n    "
}