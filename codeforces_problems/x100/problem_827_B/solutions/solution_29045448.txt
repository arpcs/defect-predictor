{
    "id": 29045448,
    "contestId": 827,
    "creationTimeSeconds": 1501497599,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "chamgin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 2048000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint n,k,c;\r\nint main()\r\n{\r\n    cin>>n>>k;\r\n    c=(int)ceil((n-1-k)*1.0/k);\r\n    c=c*2+1+((n-1-k)!=1);\r\n    cout<<c<<endl;\r\n    for(int i=1;i<n;++i)\r\n    {\r\n        if(i<=k)\r\n            cout<<1<<' '<<i+1<<endl;\r\n        else cout<<i+1-k<<' '<<i+1<<endl;\r\n    }\r\n    return 0;\r\n}\r\n"
}