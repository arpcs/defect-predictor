{
    "id": 54164428,
    "contestId": 827,
    "creationTimeSeconds": 1557907376,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "_overrated_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <algorithm>\n#include <string>\n#include <cmath>\n#include <cstdio>\n#include <iomanip>\n#include <fstream>\n#include <cassert>\n#include <cstring>\n#include <unordered_set>\n#include <unordered_map>\n#include <numeric>\n#include <ctime>\n#include <bitset>\n#include <complex>\n\nusing namespace std;\n    \nsigned main() {\n\tios_base::sync_with_stdio(false);\n\tcin.tie(0);\n\n\tint n, k;\n\tcin >> n >> k;\n\tint fr = n - k - 1;\n\tint root = 0;\n\tvector<vector<int>> tails(k);\n\tint one = fr / k;\n\tint bc = fr % k;\n\tint pnt = 1;\n\tfor (int i = 0; i < k; i++) {\n\t\tfor (int j = 0; j < one + bc * (i + 1 + bc >= k); j++) {\n\t\t\ttails[i].push_back(pnt);\n\t\t\tpnt++;\n\t\t}\n\t}\n\tassert(n - pnt == k);\n\tfor (int i = pnt; i < n; i++) {\n\t\ttails[i - pnt].push_back(i);\n\t}\n\tvector<pair<int, int>> ans;\n\tfor (auto t : tails) {\n\t\tans.push_back({root, t.front()});\n\t\tfor (int i = 0; i + 1 < (int)t.size(); i++) {\n\t\t\tans.push_back({t[i], t[i + 1]});\n\t\t}\n\t}\n\tcout << 2 * (one + 1) + bc << '\\n';\n\tfor (auto t : ans) {\n\t\tcout << t.first + 1 << ' ' << t.second + 1 << '\\n';\n\t} \n}\n"
}