{
    "id": 78953137,
    "contestId": 827,
    "creationTimeSeconds": 1588584974,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 827,
        "index": "B",
        "name": "High Load",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 827,
        "members": [
            {
                "handle": "wrong_answer_on_19260817"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499791500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 4198400,
    "source": "#include <bits/stdc++.h>\r\n#define MAX_SIZE 200011\r\nusing namespace std;\r\nvector<int> g[MAX_SIZE];\r\n\r\nint main() {\r\n    int n, k, pos = 0, i, id = 1, j;\r\n    scanf(\"%d%d\", &n, &k);\r\n    for (i = 0; i < n && id <= n; ++i) {\r\n        for (j = 1; j <= k && id <= n; ++j) {\r\n            g[i].push_back(id);\r\n            ++id;\r\n        }\r\n\r\n        if (id >= n) {\r\n            pos = i;\r\n        }\r\n    }\r\n\r\n    printf(\"%d\\n\", (n-1)/k * 2 + ((n-1)%k > 0) + ((n-1)% k > 1));\r\n    for (i = pos - 1; i >= 1; --i) {\r\n        for (j = 0 ; j < k; ++j) {\r\n            printf(\"%d %d\\n\", g[i][j], g[i-1][j]);   \r\n        }\r\n    }    \r\n\r\n    int sz = g[pos].size();\r\n    for (i = 0 ; i < sz; ++i) {\r\n        printf(\"%d %d\\n\", g[pos][i], g[pos-1][i]);\r\n    }\r\n\r\n    for (i = sz; i < k; ++i) {\r\n        printf(\"%d %d\\n\", g[pos][sz-1], g[pos-1][i]);\r\n    }\r\n\r\n    if (sz > 1) {\r\n        for (i = 1 ; i < sz; ++i) {\r\n            printf(\"%d %d\\n\", g[pos][0], g[pos][i]);\r\n        }\r\n    }\r\n    return 0;\r\n}   "
}