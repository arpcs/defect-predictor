{
    "id": 85504953,
    "contestId": 295,
    "creationTimeSeconds": 1593490153,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 60,
    "memoryConsumedBytes": 6041600,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n#define MAX_QTD 110\n#define MAX_N 51\n#define INF 10000000\n#define MOD 1000000007\n\nint dp[MAX_QTD+2][MAX_N][MAX_N];\nint cont[MAX_QTD+2][MAX_N][MAX_N];\nint fatorial[MAX_N];\n\nint k;\nint t50=0;\nint t100=0;\n\n\nint modInverse(int a, int m) { \n    int m0 = m; \n    int y = 0, x = 1; \n  \n    if (m == 1) \n      return 0; \n  \n    while (a > 1) { \n        int q = a / m; \n        int t = m; \n        m = a % m, a = t; \n        t = y; \n        y = x - q * y; \n        x = t; \n    } \n    if (x < 0) \n       x += m0; \n  \n    return x; \n}\n\nint solve(int qtd,int c50, int c100){\n\tif (qtd==MAX_QTD) return INF;\n\tif (c50==0 and c100==0) return qtd;\n\tif (dp[qtd][c50][c100]!=-1) return dp[qtd][c50][c100];\n\t\n\tdp[qtd][c50][c100]=INF;\n\t\n\t\n\t//cout<<qtd<<\" \"<<c50<<\" \"<<c100<<endl;\n\t\n\t\n\tif (qtd%2==0){\n\t\tfor (int i=0; i<=c50; i++){\n\t\t\tfor (int j=0; j<=c100; j++){\n\t\t\t\tif (50*i+100*j<=k and (i>0 or j>0))  dp[qtd][c50][c100]=min(dp[qtd][c50][c100],solve(qtd+1,c50-i,c100-j));\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (int i=0; i<=c50; i++){\n\t\t\tfor (int j=0; j<=c100; j++){\n\t\t\t\tif (50*i+100*j<=k and (i>0 or j>0) and dp[qtd][c50][c100]==solve(qtd+1,c50-i,c100-j)){\n\t\t\t\t\tint numerador=fatorial[c50];\n\t\t\t\t\tint denominador=1LL*fatorial[c50-i]*fatorial[i]%MOD;\n\t\t\t\t\tint possiveis=1LL*numerador*modInverse(denominador,MOD)%MOD;\n\t\t\t\t\t\n\t\t\t\t\tnumerador=fatorial[c100];\n\t\t\t\t\tdenominador=1LL*fatorial[c100-j]*fatorial[j]%MOD;\n\t\t\t\t\tint possiveis1=1LL*numerador*modInverse(denominador,MOD)%MOD;\n\t\t\t\t\t\n\t\t\t\t\tint totais=1LL*possiveis*possiveis1%MOD;\n\t\t\t\t\t\n\t\t\t\t\tcont[qtd][c50][c100]=(1LL*cont[qtd+1][c50-i][c100-j]*totais)%MOD;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\telse{\n\t\tfor (int i=0; i<=t50-c50; i++){\n\t\t\tfor (int j=0; j<=t100-c100; j++){\n\t\t\t\tif (50*i+100*j<=k and (i>0 or j>0))  dp[qtd][c50][c100]=min(dp[qtd][c50][c100],solve(qtd+1,c50+i,c100+j));\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (int i=0; i<=t50-c50; i++){\n\t\t\tfor (int j=0; j<=t100-c100; j++){\n\t\t\t\tif (50*i+100*j<=k and (i>0 or j>0) and dp[qtd][c50][c100]==solve(qtd+1,c50+i,c100+j)){\n\t\t\t\t\tint numerador=fatorial[t50-c50];\n\t\t\t\t\tint denominador=1LL*fatorial[(t50-c50)-i]*fatorial[i]%MOD;\n\t\t\t\t\tint possiveis=1LL*numerador*modInverse(denominador,MOD)%MOD;\n\t\t\t\t\t\n\t\t\t\t\tnumerador=fatorial[t100-c100];\n\t\t\t\t\tdenominador=1LL*fatorial[(t100-c100)-j]*fatorial[j]%MOD;\n\t\t\t\t\tint possiveis1=1LL*numerador*modInverse(denominador,MOD)%MOD;\n\t\t\t\t\t\n\t\t\t\t\tint totais=1LL*possiveis*possiveis1%MOD;\n\t\t\t\t\t\n\t\t\t\t\tcont[qtd][c50][c100]=(1LL*cont[qtd+1][c50-i][c100-j]+totais)%MOD;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t\n\t\n\t\n\t\n\treturn dp[qtd][c50][c100];\n\n\n}\n\n\n\nint main(){\n\tios_base::sync_with_stdio(false);\n\tcin.tie(NULL);\n\t\n\t\n\tint n;\n\tcin>>n>>k;\n\t\n\tfor (int i=0; i<=MAX_QTD; i++) cont[i][0][0]=1;\n\tfatorial[0]=1;\n\tfor (int i=1; i<MAX_N; i++) fatorial[i]=1LL*fatorial[i-1]*i%MOD;\n\t\n\tfor (int i=0; i<n; i++){\n\t\tint x;\n\t\tcin>>x;\n\t\t\n\t\tif (x==50) t50++;\n\t\telse t100++;\n\t}\n\t\n\tmemset(dp,-1,sizeof(dp));\n\t\n\t\n\tif (solve(0,t50,t100)>=INF){\n\t\tcout<<-1<<endl;\n\t\tcout<<0<<endl;\n\t}\n\t\n\t\n\telse{\n\t\tcout<<solve(0,t50,t100)<<endl;\n\t\tcout<<cont[0][t50][t100]<<endl;\n\t}\n\t\n\n}\n\n\n\t \t\t  \t   \t\t  \t\t\t \t    \t\t\t \t\t\t\t"
}