{
    "id": 181845365,
    "contestId": 295,
    "creationTimeSeconds": 1669011533,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "ZhaoYvDr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 102400,
    "source": "// Problem: CF295C Greg and Friends\r\n// Memory Limit: 250 MB\r\n// Time Limit: 2000 ms\r\n\r\n#include<bits/stdc++.h>\r\n#define    endl    '\\n'\r\n#define  int  long long\r\nusing namespace std;const double PI=acos(-1); const int INF=0x3f3f3f3f;int read(){\r\nint x=0,f=1,ch; while(!isdigit(ch=getchar()))if(ch=='-')f=-1; do x=x * 10 +ch-'0';\r\n/*Author:Yudar*/while(isdigit(ch=getchar()));return x*f;}const int mod=1000000007;\r\n\r\nconst int N = 55;\r\nint c[N][N], f[2][N][N], n, k;\r\nint cnt50, cnt100, last, now;\r\nbool flag;\r\n\r\nsigned main()\r\n{\r\n\tfor ( int i = 0; i <= 50; ++ i)\r\n\t{\r\n\t\tc[i][0] = 1;\r\n\t\tfor ( int j = 1; j <= i; ++ j)\r\n\t\t\tc[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % mod;\r\n\t}\r\n\tn = read(), k = read();\r\n\tk /= 50;\r\n\tfor ( int i = 1; i <= n; ++ i)\r\n\t{\r\n\t\tint val = read();\r\n\t\tif (val == 50) cnt50 ++;\r\n\t\telse cnt100 ++;\r\n\t}\r\n\tlast = 1, now = 0;\r\n\tf[0][cnt50][cnt100] = 1;\r\n\tfor ( int cl = 0; cl < n; ++ cl)\r\n\t{\r\n\t\tswap(now, last);\r\n\t\tmemset(f[now], 0, sizeof f[now]);\r\n\t\tfor ( int i = 0; i <= cnt50; ++ i)\r\n\t\t\tfor ( int j = 0; j <= cnt100; ++ j)\r\n\t\t\t\tif (i + j * 2 > 0 && i + j * 2 <= k)\r\n\t\t\t\t\tfor ( int x = i; x <= cnt50; ++ x)\r\n\t\t\t\t\t\tfor ( int y = j; y <= cnt100; ++ y)\r\n\t\t\t\t\t\t\tf[now][cnt50 - (x - i)][cnt100 - (y - j)] += f[last][x][y] * c[x][i] * c[y][j];\r\n\t\tif (f[now][cnt50][cnt100])\r\n\t\t{\r\n\t\t\tcout << cl * 2 + 1 << endl;\r\n\t\t\tcout << f[now][cnt50][cnt100];\r\n\t\t\tflag = 1;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tswap(now, last);\r\n\t\tmemset(f[now], 0, sizeof f[now]);\r\n\t\tfor ( int i = 0; i <= cnt50; ++ i)\r\n\t\t\tfor ( int j = 0; j <= cnt100; ++ j)\r\n\t\t\t\tif (i + j * 2 > 0 && i + j * 2 <= k)\r\n\t\t\t\t\tfor ( int x = i; x <= cnt50; ++ x)\r\n\t\t\t\t\t\tfor ( int y = j; y <= cnt100; ++ y)\r\n\t\t\t\t\t\t\tf[now][cnt50 - (x - i)][cnt100 - (y - j)] += f[last][x][y] * c[x][i] * c[y][j];\r\n\t}\r\n\tif (!flag)\r\n\t{\r\n\t\tputs(\"-1\");\r\n\t\tputs(\"0\");\r\n\t}\r\n\t\r\n\treturn 0;\r\n}\r\n"
}