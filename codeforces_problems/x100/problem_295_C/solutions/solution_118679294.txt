{
    "id": 118679294,
    "contestId": 295,
    "creationTimeSeconds": 1623036062,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "GoatGuy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 60,
    "memoryConsumedBytes": 716800,
    "source": "\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC optimize (\"unroll-loops\")\r\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\r\n\r\n \r\n//opray\r\n \r\n#include <bits/stdc++.h>\r\n \r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <ext/pb_ds/detail/standard_policies.hpp>\r\n \r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n \r\ntemplate<typename T> using oset =\r\ntree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\ntemplate<typename T> using omultiset =\r\ntree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n \r\ntemplate<typename Key, typename T> using omap =\r\ntree<Key, T, less<Key>, rb_tree_tag, tree_order_statistics_node_update>;\r\n \r\n#define pb push_back\r\n#define pf push_front\r\n#define rb pop_back\r\n#define rf pop_front\r\n \r\n#define eb emplace_back\r\n\r\n#define fi first\r\n#define se second\r\n \r\n#define endl \"\\n\"\r\n \r\n#define pii pair<int, int>\r\n#define pff pair<double, double>\r\n\r\n//#define ll long long\r\n//#define int long long\r\n#define double long double\r\n#define multiTest int test; cin >> test; while(test--)\r\n#define speed ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\r\n \r\nvoid toFile(string name) {\r\n\tfreopen((name + \".inp\").c_str(), \"r\", stdin);\r\n\tfreopen((name + \".out\").c_str(), \"w\", stdout);\r\n}\r\n \r\nint ceil(int a, int x) {\r\n\treturn (a % x == 0 ? a / x : a / x + 1);\r\n}\r\n\r\nconst double pi = 3.141592653589;\r\n\r\nconst int mod = 1e9 + 7;\r\n//const int inf = 0x3f3f3f3f3f3f3f3f;\r\n//const int inf = 0x3f3f3f3f;\r\n\r\nconst double eps = 1e-6;\r\n\r\nint dp[55][55][55];\r\nint fact[55];\r\nint inv[55];\r\n\r\nint binpow(int n, int k) {\r\n\tif(k == 0) return 1;\r\n\tif(k == 1) return n;\r\n\tint h = binpow(n, k >> 1);\r\n\tif(k & 1) return 1ll * h * h % mod * n % mod;\r\n\treturn 1ll * h * h % mod;\r\n}\r\n\r\nint invmod(int n) {\r\n\treturn binpow(n, mod - 2);\r\n}\r\n\r\nint nCk(int n, int k) {\r\n\treturn fact[n] * inv[k] % mod * inv[n - k] % mod;\r\n}\r\n\r\nvoid solve() {\r\n\tint n, k;\r\n\tcin >> n >> k;\r\n\r\n\tfact[0] = inv[0] = 1;\r\n\tfor(int i = 1; i <= n; i++) {\r\n\t\tfact[i] = (fact[i - 1] * i) % mod;\r\n\t\tinv[i] = invmod(fact[i]);\r\n\t}\r\n\r\n\tint a = 0, b = 0;\r\n\r\n\tfor(int i = 0, x; i < n; i++) {\r\n\t\tcin >> x;\r\n\t\tif(x == 50) a++;\r\n\t\telse b++;\r\n\t}\r\n\tk /= 50;\r\n\r\n\tfor(int l = 0; l <= n * 2; l++) {\r\n\t\tif(l == 0) {\r\n\t\t\tdp[l][a][b] = 1;\r\n\t\t} else {\r\n\t\t\tfor(int i = 0; i <= a; i++) {\r\n\t\t\t\tfor(int j = 0; j <= b; j++) {\r\n\t\t\t\t\tint c = a - i, d = b - j;\r\n\r\n\t\t\t\t\tif(l & 1) {\r\n\t\t\t\t\t\tfor(int o = 0; o <= c; o++) {\r\n\t\t\t\t\t\t\tfor(int p = 0; p <= d; p++) {\r\n\t\t\t\t\t\t\t\tif(o + p * 2 == 0 || o + p * 2 > k) continue;\r\n\t\t\t\t\t\t\t\t//cout << o << \" \" << p << endl;\r\n\t\t\t\t\t\t\t\tdp[l][i][j] = (dp[l][i][j] + dp[l - 1][i + o][j + p] * nCk(c, o) % mod * nCk(d, p) % mod) % mod;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor(int o = 0; o <= i; o++) {\r\n\t\t\t\t\t\t\tfor(int p = 0; p <= j; p++) {\r\n\t\t\t\t\t\t\t\tif(o + p * 2 == 0 || o + p * 2 > k) continue;\r\n\t\t\t\t\t\t\t\t//cout << o << \" \" << p << endl;\r\n\t\t\t\t\t\t\t\tdp[l][i][j] = (dp[l][i][j] + dp[l - 1][i - o][j - p] * nCk(i, o) % mod * nCk(j, p) % mod) % mod;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//cout << \"dp: \" << l << \" \" << i << \" \" << j << \" \" << dp[l][i][j] << endl;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor(int i = 0; i <= n * 2; i++) {\r\n\t\tif(dp[i][0][0] > 0) {\r\n\t\t\tcout << i << endl << dp[i][0][0];\r\n\t\t\treturn; \r\n\t\t}\r\n\t}\r\n\tcout << -1 << endl << 0;\r\n}\r\n\r\nsigned main() {\r\n\tspeed;\r\n \r\n \t//(\"a\");\r\n\r\n\t//multiTest\r\n\tsolve();\r\n \r\n\treturn 0;\t\r\n}\r\n"
}