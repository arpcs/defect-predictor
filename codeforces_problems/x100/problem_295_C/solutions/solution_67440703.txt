{
    "id": 67440703,
    "contestId": 295,
    "creationTimeSeconds": 1577041798,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "oleh1421"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 8089600,
    "source": "#include <bits/stdc++.h>\r\n#define endl '\\n'\r\nconst long long mod=1000000007ll;\r\ntypedef long long ll;\r\nusing namespace std;\r\nll dp[55][55][2];\r\nll cnt[55][55][2];\r\nbool used[55][55][2];\r\nstruct node{\r\n    int i;\r\n    int j;\r\n    int c;\r\n};\r\nll binpow(ll a,ll b){\r\n    if (b==0) return 1ll;\r\n    if (b%2) return (a*binpow(a,b-1ll))%mod;\r\n    else return binpow((a*a)%mod,b/2ll);\r\n}\r\nll f[500001];\r\nll rf[500001];\r\nll C(ll n,ll k){\r\n    return (((f[n]*rf[k])%mod)*rf[n-k])%mod;\r\n}\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    int n,k;cin>>n>>k;\r\n    f[0]=1ll;\r\n    for (ll i=1;i<=n;i++) f[i]=(f[i-1]*i)%mod;\r\n    rf[n]=binpow(f[n],mod-2ll);\r\n    for (ll i=n;i>=1;i--){\r\n        rf[i-1]=(rf[i]*i)%mod;\r\n    }\r\n    int x=0;\r\n    int y=0;\r\n    for (int i=1;i<=n;i++){\r\n        int cur;cin>>cur;\r\n        if (cur==50) x++;\r\n        else y++;\r\n    }\r\n    for (int i=0;i<=x;i++) for (int j=0;j<=y;j++) dp[i][j][0]=dp[i][j][1]=-1,cnt[i][j][0]=cnt[i][j][1]=0;\r\n    k/=50;\r\n    queue<node>q;\r\n    node s;\r\n    s.i=x;\r\n    s.j=y;\r\n    s.c=0;\r\n    dp[x][y][0]=0;\r\n    cnt[x][y][0]=1;\r\n    q.push(s);\r\n    while (!q.empty()){\r\n        node v=q.front();\r\n        used[v.i][v.j][v.c]=true;\r\n        q.pop();\r\n        for (int t=0;t<=v.i;t++){\r\n            for (int g=0;g<=v.j;g++){\r\n                if (t+g==0) continue;\r\n                if (t+g+g>k) continue;\r\n                node to;\r\n                to.i=x-v.i+t;\r\n                to.j=y-v.j+g;\r\n                to.c=v.c^1;\r\n                if (used[to.i][to.j][to.c]) continue;\r\n                dp[to.i][to.j][to.c]=dp[v.i][v.j][v.c]+1;\r\n\r\n                cnt[to.i][to.j][to.c]+=(((cnt[v.i][v.j][v.c]*C(v.i,t))%mod)*C(v.j,g))%mod;;\r\n                cnt[to.i][to.j][to.c]%=mod;\r\n                q.push(to);\r\n            }\r\n        }\r\n    }\r\n    cout<<dp[x][y][1]<<endl<<cnt[x][y][1];\r\n    return 0;\r\n}\r\n"
}