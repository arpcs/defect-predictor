{
    "id": 176100154,
    "contestId": 295,
    "creationTimeSeconds": 1665724782,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "The_mad_panda"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 44,
    "timeConsumedMillis": 60,
    "memoryConsumedBytes": 17715200,
    "source": "/* in the name of god */\n#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define pb push_back\n#define mp make_pair\n#define fs first\n#define cs second\n#define be_fast  ios::sync_with_stdio(false);\n#define pii pair<ll, ll>\n#define all_g(x) x.begin(), x.end(), greater<int>()\n#define all_l(x) x.begin(), x.end(),less<int>()\nconst int MAX_N = 2e2 + 22, mod = 1e9 + 7;\n/* I'm here again */\nll ar[MAX_N];\nll c50, c100;\nll rah[MAX_N][MAX_N][5];\nvector<pair<pii, pii>>adj[MAX_N][MAX_N][5];\nqueue<pair<pii, ll>>gold;\nll dis[MAX_N][MAX_N][5];\nll ch[100][100];\n\n\n\nint main(){\n    ll n, k;\n    cin >> n >> k;\n    ch[0][0] = 1;\n    for(int i = 1; i <= 50; i++){\n        ch[i][0] = 1;\n        for(int j = 1; j <= i; j++){\n            ch[i][j] = ch[i - 1][j] + ch[i - 1][j - 1];\n            ch[i][j] %= mod;\n        }\n    }\n    for(int i = 1; i <= n; i++){\n        cin >> ar[i];\n        if(ar[i] == 50)c50++;\n    }  \n    for(ll i = 0; i <= c50; i++){\n        for(ll j = 0; j <= n - c50 ; j++){\n            for(int l = 1; l <= 2; l++){\n                if(l == 1){\n                    for(int o = 0; o <= min(k / (ll)50,  i); o++){\n                        for(int p = 0; p <= min(j, (k - (50 * o)) / 100); p++){  \n                            if(o == 0 && p == 0)continue;        \n                            adj[i][j][l].pb(mp(mp(i - o, j - p), mp(3 - l, ((ll)ch[i][o] * (ll)ch[j][p]) % mod))); \n                        }\n                    }\n                }\n                else{\n                    for(int o = 0; o <= min(k / 50, c50 - i); o++){\n                        for(int p = 0; p <= min(n - c50 - j, (k - (50 * o)) / 100); p++){\n                            if(o == 0 && p == 0)continue;        \n                            adj[i][j][l].pb(mp(mp(i + o, j + p), mp(3 - l, ((ll)ch[c50 - i][o] * (ll)ch[n - c50 - j][p]) % mod))); \n                        }\n                    } \n                }\n            }\n        }\n    }\n    \n    gold.push(mp(mp(c50, n - c50), 1));\n    memset(dis, 10, sizeof dis);\n    dis[c50][n - c50][1] = 0;\n    rah[c50][n - c50][1] = 1;\n    while(gold.size()){\n        pair<pii, int> o = gold.front();\n        gold.pop();\n        for(pair<pii, pii> k : adj[o.fs.fs][o.fs.cs][o.cs]){\n            if(dis[k.fs.fs][k.fs.cs][k.cs.fs] == dis[o.fs.fs][o.fs.cs][o.cs] + 1){\n                rah[k.fs.fs][k.fs.cs][k.cs.fs] += rah[o.fs.fs][o.fs.cs][o.cs] * k.cs.cs;\n                rah[k.fs.fs][k.fs.cs][k.cs.fs] %= mod;\n                continue;\n            }\n            if(dis[k.fs.fs][k.fs.cs][k.cs.fs] <= dis[o.fs.fs][o.fs.cs][o.cs] + 1)continue;\n            dis[k.fs.fs][k.fs.cs][k.cs.fs] = dis[o.fs.fs][o.fs.cs][o.cs] + 1;\n            rah[k.fs.fs][k.fs.cs][k.cs.fs] = (ll)rah[o.fs.fs][o.fs.cs][o.cs] * (ll)k.cs.cs;\n            rah[k.fs.fs][k.fs.cs][k.cs.fs] %= mod;\n            gold.push(mp(mp(k.fs.fs, k.fs.cs), k.cs.fs));\n        }\n    }\n    if(dis[0][0][2] >= 1e8){\n        cout << -1 << endl << 0 << endl;\n        return 0;\n    }\n    cout << dis[0][0][2] << endl;\n    cout << rah[0][0][2] << endl;\n\n    return 0;\n}"
}