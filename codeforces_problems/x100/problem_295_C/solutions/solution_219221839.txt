{
    "id": 219221839,
    "contestId": 295,
    "creationTimeSeconds": 1692266748,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "shtormans"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "Python 3",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include\"stdio.h\"\r\n#define Mod 1000000007\r\nconst int M = 55;\r\nlong long dp[M*4][M][M], C[M][M], A[M][M][M][M];\r\n\r\nvoid preprocess() {\r\n    for(int i = 0; i < M; ++i) {\r\n        for(int j = C[i][0] = 1; j <= i; ++j) {\r\n            C[i][j] = (C[i-1][j] + C[i-1][j-1]) % Mod; \r\n        }\r\n    }\r\n    \r\n    for(int a = 0; a < M; ++a) {\r\n        for(int b = 0; b < M; ++b) {\r\n            for(int c = 0; c <= a; ++c) {\r\n                for(int d = 0; d <= b; ++d) {\r\n                    A[a][b][c][d] = C[a][c] * C[b][d] % Mod; \r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvoid solve() {\r\n    int n, k, X = 0, Y = 0;\r\n    scanf(\"%d %d\", &n, &k);\r\n    \r\n    for(int i = 0, a; i < n; ++i) {\r\n        scanf(\"%d\", &a);\r\n        ++(a == 50 ? X : Y);\r\n    }\r\n    \r\n    dp[0][X][Y] = 1;\r\n    \r\n    for(int i = 1; i <= 4 * n + 1; i += 2) {\r\n        for(int x = 0; x <= X; ++x) {\r\n            for(int y = 0; y <= Y; ++y) {\r\n                if(dp[i-1][x][y]) {\r\n                    for(int a = 0; a <= x; ++a) {\r\n                        for(int b = 0; b <= y; ++b) {\r\n                            if((a | b) && a * 50 + b * 100 <= k) {\r\n                                (dp[i][x-a][y-b] += A[x][y][a][b] * dp[i-1][x][y]) %= Mod;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        if(dp[i][0][0]) {\r\n            printf(\"%d\\n%lld\\n\", i, dp[i][0][0]);\r\n            return;\r\n        }\r\n        \r\n        for(int x = 0; x <= X; ++x) {\r\n            for(int y = 0; y <= Y; ++y) {\r\n                if(dp[i][x][y]) {\r\n                    for(int a = 0; a <= X - x; ++a) {\r\n                        for(int b = 0; b <= Y - y; ++b) {\r\n                            if((a | b) && a * 50 + b * 100 <= k) {\r\n                                (dp[i+1][x+a][y+b] += A[X-x][Y-y][a][b] * dp[i][x][y]) %= Mod;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    puts(\"-1\\n0\");\r\n}\r\n\r\nint main() {\r\n    preprocess();\r\n    solve();\r\n    return 0;\r\n}\r\n"
}