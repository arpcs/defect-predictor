{
    "id": 67589940,
    "contestId": 295,
    "creationTimeSeconds": 1577265461,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "Amireza"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 44,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 5120000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef pair <int, int> pii;\r\n \r\nconst int N = 20 * 10 + 10, M = 50 + 5, mod = 1e9 + 7;\r\n\r\nll c[M][M], dp[M][M][N], n, w, a, b;\r\n\r\nvoid prep();\r\n\r\nll multiply(ll a, ll b) {\r\n\ta %= mod, b %= mod;\r\n\ta *= b;\r\n\treturn a % mod;\r\n}\r\n\r\nll solve(int i, int j, int k) {\r\n\tif(k == 0)\r\n\t\treturn (i == 0 && j == 0);\r\n\tif(dp[i][j][k] != -1)\r\n\t\treturn dp[i][j][k];\r\n\tdp[i][j][k] = 0;\r\n\tif(k & 1) {\r\n\t\tfor (int x = 0; x <= i; x++) {\r\n\t\t\tfor (int y = 0; y <= j; y++) {\r\n\t\t\t\tif(!x && !y)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif(x * 50 + y * 100 <= w) {\r\n\t\t\t\t\tif(i != x || j != y) {\r\n\t\t\t\t\t\t(dp[i][j][k] += multiply(solve(i - x, j - y, k - 1), multiply(c[i][x], c[j][y]))) %= mod;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\t(dp[i][j][k] += solve(i - x, j - y, k - 1)) %= mod;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tfor (int x = 0; x <= a - i; x++) {\r\n\t\t\tfor (int y = 0; y <= b - j; y++) {\r\n\t\t\t\tif(!x && !y)\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tif(x * 50 + y * 100 <= w) {\r\n\t\t\t\t\t(dp[i][j][k] += multiply(solve(i + x, j + y, k - 1), multiply(c[a - i][x], c[b - j][y]))) %= mod;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn dp[i][j][k];\r\n}\r\n \r\nint main() {\r\n\tios_base::sync_with_stdio(NULL), cin.tie(NULL), cout.tie(NULL);\r\n\tcin >> n >> w;\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tint x;\r\n\t\tcin >> x;\r\n\t\tif(x == 50)\r\n\t\t\ta++;\r\n\t\telse\r\n\t\t\tb++;\r\n\t}\r\n\tprep();\r\n\tfor (int i = 0; i <= a; i++)\r\n\t\tfor (int j = 0; j <= b; j++)\r\n\t\t\tfor (int k = 0; k < 4 * n; k++)\r\n\t\t\t\tdp[i][j][k] = -1;\r\n\tfor (int k = 1; k < 4 * n; k += 2) {\r\n\t\tll temp = solve(a, b, k);\r\n\t\tif(temp) {\r\n\t\t\treturn cout << k << endl << temp << endl, 0;\r\n\t\t}\r\n\t}\r\n\tcout << -1 << endl << 0 << endl;\r\n}\r\n\r\nvoid prep() {\r\n\tfor (int i = 0; i < M; i++) {\r\n\t\tfor (int j = 0; j <= i; j++) {\r\n\t\t\tif(!j || j == i)\r\n\t\t\t\tc[i][j] = 1;\r\n\t\t\telse\r\n\t\t\t\tc[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % mod;\r\n\t\t}\r\n\t}\r\n}"
}