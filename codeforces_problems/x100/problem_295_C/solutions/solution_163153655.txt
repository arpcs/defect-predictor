{
    "id": 163153655,
    "contestId": 295,
    "creationTimeSeconds": 1657236314,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "ZiadEl-Gafy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\n#define F first\r\n#define S second\r\n#define el '\\n'\r\nusing namespace std;\r\nconst ll N = 50 + 5, M = 100 + 5, INF = 1e9 + 5, mod = 1e9 + 7;\r\n\r\nint add(int a, int b){\r\n    return (a + b) % mod;\r\n}\r\n\r\nint mul(int a, int b){\r\n    return 1LL * a * b % mod;\r\n}\r\n\r\nint fact[M];\r\n\r\nvoid pre(){\r\n    fact[0] = 1;\r\n    for(int i = 1; i < M; i++)\r\n        fact[i] = mul(fact[i - 1], i);\r\n}\r\n\r\nint fp(int b, int p){\r\n    if(b == 1 or p == 0)\r\n        return 1;\r\n\r\n    int ret = fp(b, p >> 1);\r\n    ret = mul(ret, ret);\r\n\r\n    if(p & 1)\r\n        ret = mul(ret, b);\r\n\r\n    return ret;\r\n}\r\n\r\nint inv(int x){\r\n    return fp(x, mod - 2);\r\n}\r\n\r\nint nCr(int n, int r){\r\n    return mul(fact[n], inv(mul(fact[r], fact[n - r])));\r\n}\r\n\r\nint n, tot1, tot2, k, dpMin[N][N][2], mn, ways;\r\n\r\nint solveMin(int left1, int left2, bool right){\r\n    if(left1 < 0 or left2 < 0)\r\n        return INF;\r\n    if(!left1 and !left2)\r\n        return 0;\r\n\r\n    int &ret = dpMin[left1][left2][right];\r\n    if(~ret)\r\n        return ret;\r\n\r\n    ret = INF;\r\n\r\n    if(right){\r\n        for(int i = 0; 2 * i <= k and i <= left2; i++){\r\n            int j = min(left1, k - 2 * i);\r\n            ret = min(ret, 1 + solveMin(left1 - j, left2 - i, 0));\r\n        }\r\n    }\r\n    else{\r\n        int transferred1 = tot1 - left1;\r\n        int transferred2 = tot2 - left2;\r\n\r\n\r\n        if(transferred1)\r\n            ret = min(ret, 1 + solveMin(left1 + 1, left2, 1));\r\n        if(transferred2)\r\n            ret = min(ret, 1 + solveMin(left1, left2 + 1, 1));\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\nint solveCnt(int left1, int left2, bool right){\r\n    if(left1 < 0 or left2 < 0)\r\n        return 0;\r\n    if(!left1 and !left2)\r\n        return 1;\r\n\r\n    int ret = solveMin(left1, left2, right), cur = 1;\r\n\r\n    if(right){\r\n        for(int i = 0; 2 * i <= k and i <= left2; i++){\r\n            int j = min(left1, k - 2 * i);\r\n\r\n            if(ret == 1 + solveMin(left1 - j, left2 - i, 0)){\r\n                cur = mul(cur, nCr(left1, j));\r\n                cur = mul(cur, nCr(left2, i));\r\n                cur = mul(cur, solveCnt(left1 - j, left2 - i, 0));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    else{\r\n        int transferred1 = tot1 - left1;\r\n        int transferred2 = tot2 - left2;\r\n        if(ret == 1 + solveMin(left1 + 1, left2, 1)){\r\n            cur = mul(cur, transferred1);\r\n            cur = mul(cur, solveCnt(left1 + 1, left2, 1));\r\n        }\r\n        if(ret == 1 + solveMin(left1, left2 + 1, 1)){\r\n            cur = mul(cur, transferred2);\r\n            cur = mul(cur, solveCnt(left1, left2 + 1, 1));\r\n        }\r\n    }\r\n\r\n    return cur;\r\n}\r\n\r\nvoid doWork(){\r\n    pre();\r\n    \r\n    cin >> n >> k;\r\n\r\n    k /= 50;\r\n\r\n    for(int i = 0; i < n; i++){\r\n        int w;\r\n        cin >> w;\r\n        if(w == 50)\r\n            tot1++;\r\n        else\r\n            tot2++;\r\n    }\r\n\r\n    memset(dpMin, -1, sizeof dpMin);\r\n    mn = solveMin(tot1, tot2, 1);\r\n\r\n    if(mn > 1e4)\r\n        cout << -1 << el << 0;\r\n    else{\r\n        ways = solveCnt(tot1, tot2, 1);\r\n        cout << mn << el << ways << el;\r\n    }\r\n}\r\n\r\nsigned main(){\r\n    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n\r\n    int tests = 1;\r\n//    cin >> tests;\r\n    while(tests--)\r\n        doWork();\r\n}"
}