{
    "id": 222681062,
    "contestId": 295,
    "creationTimeSeconds": 1694330259,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "LordWorm"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 44,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 78745600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nusing ll = long long;\r\nconst int MOD = 1e9 + 7;\r\nconst int N = 55;\r\n#define total(x, y) ((x * 50 + y * 100))\r\nll A[N][N][N][N];\r\nll C[N][N];\r\nll dp[N << 2][N][N];\r\nvoid solve() {\r\n  ll n, lim;\r\n  cin >> n >> lim;\r\n  vector<int> a(n + 1);\r\n  int cnta = 0, cntb = 0;\r\n  for (int i = 1; i <= n; ++i) {\r\n    cin >> a[i];\r\n    if (a[i] == 50) {\r\n      cnta++;\r\n    } else {\r\n      cntb++;\r\n    }\r\n  }\r\n  for (int i = 0; i < N; ++i) {\r\n    for (int j = C[i][0] = 1; j <= i; ++j) {\r\n      C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % MOD;\r\n    }\r\n  }\r\n  for (int a = 0; a < N; ++a) {\r\n    for (int b = 0; b < N; ++b) {\r\n      for (int c = 0; c <= a; ++c) {\r\n        for (int d = 0; d <= b; ++d) {\r\n          A[a][b][c][d] = (C[a][c] * C[b][d]) % MOD;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  dp[0][cnta][cntb] = 1;\r\n  for (int i = 1; i <= 4 * n + 1; i += 2) {\r\n    ll res = 0;\r\n    // positive direction\r\n    for (int x = 0; x <= cnta; ++x) {\r\n      for (int y = 0; y <= cntb; ++y) {\r\n        if (dp[i - 1][x][y]) {\r\n          for (int a = 0; a <= x; ++a) {\r\n            for (int b = 0; b <= y; ++b) {\r\n              if ((a | b) && (total(a, b) <= lim)) {\r\n                dp[i][x - a][y - b] +=\r\n                    (A[x][y][a][b] * dp[i - 1][x][y]);\r\n                dp[i][x - a][y - b] %= MOD;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (dp[i][0][0]) {\r\n      cout << i << '\\n' << dp[i][0][0] << '\\n';\r\n      return;\r\n    }\r\n    // negative direction\r\n    for (int x = 0; x <= cnta; ++x) {\r\n      for (int y = 0; y <= cntb; ++y) {\r\n        if (dp[i][x][y]) {\r\n          for (int a = 0; a <= cnta - x; ++a) {\r\n            for (int b = 0; b <= cntb - y; ++b) {\r\n              if ((a | b) && (total(a, b) <= lim)) {\r\n                dp[i + 1][x + a][y + b] +=\r\n                    (A[cnta - x][cntb - y][a][b] * dp[i][x][y]);\r\n                dp[i + 1][x + a][y + b] %= MOD;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  cout << -1 << '\\n' <<0 <<'\\n';\r\n  return;\r\n}\r\nint main() {\r\n  ios::sync_with_stdio(false);\r\n  cin.tie(nullptr);\r\n#ifdef DEBUG\r\n  freopen(\"/Users/yanxinxiang/code/Algorithm/in\", \"r\", stdin);\r\n  freopen(\"/Users/yanxinxiang/code/Algorithm/out\", \"w\", stdout);\r\n#endif\r\n  int T = 1;\r\n  while (T--) {\r\n    solve();\r\n  }\r\n  return 0;\r\n}"
}