{
    "id": 140386102,
    "contestId": 295,
    "creationTimeSeconds": 1640288949,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "jesuswr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 102400,
    "source": "#include <iostream>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <algorithm>\n#include <math.h>\n#include <string>\n#include <cstring>\n#include <set>\n#include <map>\n#include <unordered_map>\n#include <assert.h>\n#include <array>\n#include <random>\n#include <chrono>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<int, pair<int, int>> piii;\ntypedef vector<int> vi;\ntypedef vector<pii> vii;\n\nint dadsadasda;\n\n#define ri(a) dadsadasda=scanf(\"%d\", &a)\n#define rii(a,b) dadsadasda=scanf(\"%d %d\", &a, &b)\n#define riii(a,b,c) dadsadasda=scanf(\"%d %d %d\", &a, &b, &c)\n#define rl(a) dadsadasda=scanf(\"%lld\", &a)\n#define rll(a,b) dadsadasda=scanf(\"%lld %lld\", &a, &b)\n#define FOR(i,n,m) for(int i=n; i<m; i++)\n#define ROF(i,n,m) for(int i=n; i>m; i--)\n#define pb push_back\n#define lb lower_bound\n#define ub upper_bound\n#define F first\n#define S second\n#define ALL(s) s.begin(),s.end()\n#define SZ(s) (int)s.size()\n\nconst int INF = 0x3f3f3f3f;\nconst ll LLINF = 1e18;\nconst int MAXN = 1e5; // CAMBIAR ESTE\nconst int MOD = 1e9 + 7;\n//mt19937 rng(chrono::system_clock::now().time_since_epoch().count());\n\n// GJNM\nint N, K;\nint CNT[2];\n\nint P[100][100];\nint pick(int a, int b) {\n    if (P[a][b] != -1)\n        return P[a][b];\n    if (b == 0 || b == a)\n        return P[a][b] = 1;\n    return P[a][b] = (pick(a - 1, b) + pick(a - 1, b - 1)) % MOD;\n}\nll pick2(int a, int b, int c, int d) {\n    return (pick(a, b) * pick(c, d)) % MOD;\n}\n\nint DP[2][51][51];\nll DP2[2][51][51];\npair<int, ll> f(int _a, int _b) {\n    memset(DP, INF, sizeof(DP));\n    queue< array<int, 3> > q;\n    q.push({0, _a, _b});\n    DP[0][_a][_b] = 0;\n    DP2[0][_a][_b] = 1;\n\n    while (!q.empty()) {\n        int P = q.front()[0];\n        int A = q.front()[1];\n        int B = q.front()[2];\n        q.pop();\n        if (P == 1 && A == _a && B == _b)\n            return {DP[P][A][B], DP2[P][A][B]};\n        for (int a = 0; a <= A; ++a) {\n            for (int b = 0; b <= B; ++b) {\n                if (a + b == 0) continue;\n                if (50 * a + 100 * b > K) break;\n                int nxtp = 1 ^ P;\n                int nxta = (_a - A) + a;\n                int nxtb = (_b - B) + b;\n                if (DP[nxtp][nxta][nxtb] == INF) {\n                    DP[nxtp][nxta][nxtb] = DP[P][A][B] + 1;\n                    q.push({nxtp, nxta, nxtb});\n                }\n                if (DP[nxtp][nxta][nxtb] == DP[P][A][B] + 1) {\n                    DP2[nxtp][nxta][nxtb] += pick2(A, a, B, b) * DP2[P][A][B];\n                    DP2[nxtp][nxta][nxtb] %= MOD;\n                }\n            }\n        }\n    }\n    return { -1, 0};\n}\n\n\n\nint main() {\n    memset(P, -1, sizeof(P));\n    rii(N, K);\n    FOR(i, 0, N) {\n        int a; ri(a);\n        CNT[a == 100]++;\n    }\n    auto ans = f(CNT[0], CNT[1]);\n    printf(\"%d\\n%lld\\n\", ans.F, ans.S);\n    return 0;\n}"
}