{
    "id": 142422550,
    "contestId": 295,
    "creationTimeSeconds": 1641956310,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "e3c8f1a924"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<cstdio>\nint cnt[3], n, lim, f[2][55][55], C[55][55];\nconst int p = 1e9 + 7;\nint plus(int x, int y) { return x + y >= p ? x + y - p : x + y; }\nint mul(int x, int y) { return 1ll * x * y % p; }\nint main() {\n\tscanf(\"%d%d\", &n, &lim), lim /= 50, C[0][0] = 1;\n\tfor (int i = 1; i <= n; i++) {\n\t\tC[i][0] = 1;\n\t\tfor (int j = 1; j <= i; j++) C[i][j] = plus(C[i - 1][j], C[i - 1][j - 1]);\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tint x; scanf(\"%d\", &x), cnt[x / 50]++;\n\t}\n\tf[0][cnt[1]][cnt[2]] = 1;\n\tfor (int i = 1, d = 1; i <= 2 * n; i++, d ^= 1) {\n\t\tfor (int j = 0; j <= cnt[1]; j++) {\n\t\t\tfor (int k = 0; k <= cnt[2]; k++) {\n\t\t\t\tif (!f[d ^ 1][j][k]) continue;\n\t\t\t\tif (d) {\n\t\t\t\t\tfor (int dj = 0; dj <= j; dj++) {\n\t\t\t\t\t\tfor (int dk = 0; dk <= k && dj + 2 * dk <= lim; dk++) {\n\t\t\t\t\t\t\tif (dj + dk == 0) continue;\n\t\t\t\t\t\t\tf[d][j - dj][k - dk] = plus(f[d][j - dj][k - dk], mul(mul(C[j][dj], C[k][dk]), f[d ^ 1][j][k]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (int dj = 0; dj <= cnt[1] - j; dj++) {\n\t\t\t\t\t\tfor (int dk = 0; dk <= cnt[2] - k && dj + 2 * dk <= lim; dk++) {\n\t\t\t\t\t\t\tif (dj + dk == 0) continue;\n\t\t\t\t\t\t\tf[d][j + dj][k + dk] = plus(f[d][j + dj][k + dk], mul(mul(C[cnt[1] - j][dj], C[cnt[2] - k][dk]), f[d ^ 1][j][k]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tf[d ^ 1][j][k] = 0;\n\t\t\t}\n\t\t}\n\t\tif (f[d][0][0]) return printf(\"%d\\n%d\\n\", i, f[d][0][0]), 0;\n\t}\n\treturn puts(\"-1\"), 0;\n}\n"
}