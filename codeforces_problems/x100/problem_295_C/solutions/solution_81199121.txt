{
    "id": 81199121,
    "contestId": 295,
    "creationTimeSeconds": 1590324317,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "mayank_ag"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n//#include <ext/pb_ds/assoc_container.hpp>\n//#include <ext/pb_ds/tree_policy.hpp>\n \nusing namespace std;\n//using namespace __gnu_pbds;\n\ntypedef long long int ll;\ntypedef pair<ll,ll> pp;\ntypedef long double ld;\ntypedef vector<pp> vpl;\n//typedef tree<ll, null_type, less_equal<ll>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\n \n\n \nconst ll N = 100005;\nconst ll mod = 1000000007;\nconst long long int inf = INT64_MAX;\n\n#define MP make_pair\n#define endl \"\\n\"\n#define rep(i,n) for(ll i=0;i<n;i++)\n#define rep1(i,n) for(ll i=1;i<n;i++)\n#define rrep(i,n) for(ll i=n-1;i>=0;i--)\n#define repb(i,n) for(ll i=1;i<n-1;i++) \n#define trace(i,a) for(auto i=a.begin();i!=a.end();i++) \n#define mtrace(i,a) for(auto i=a.begin();i!=a.end();i++)  cout<<i->first<<\" \"<<i->second<<endl;   \n \nconst ld pi = 3.141592653589793116;\n\nmt19937_64 rang(chrono::high_resolution_clock::now().time_since_epoch().count());\nint rng(int lim) {\n\tuniform_int_distribution<int> uid(0,lim-1);\n\treturn uid(rang);\n}\n\n \nvoid fastIO(void);\nvoid decimal(int);\ninline ll modmulti(ll, ll);\ninline ll modadd(ll, ll);\nll modpower(ll, ll);\nll gcd(ll, ll );\nll modinv(ll);\n\n\n\nint main(){\nfastIO();\n\tll n,k;\n\tcin>>n>>k;\n\tll x;\n\tll n50=0,n100=0;\n\trep(i,n){\n\t\tcin>>x;\n\t\tif(x==50) n50++;\n\t\telse n100++;\n\t}\n\tll dist[n50+1][n100+1][2],num[n50+1][n100+1][2];\n\trep(i,n50+1){\n\t\trep(j,n100+1){\n\t\t\tdist[i][j][0]=inf;\n\t\t\tdist[i][j][1]=inf;\n\t\t\tnum[i][j][0] =0;\n\t\t\tnum[i][j][1]=1;\n\t\t}\n\t}\n\tdist[0][0][0] = 0;\n\tmap<pair<pp,ll>,vector<pair<pp,ll>>> mp;\n\trep(i,n50+1){\n\t\trep(j,100+1){\n\t\t\trep(y,n50+1){\n\t\t\t\trep(z,n100+1){\n\t\t\t\t\tif(i==y && z==j) continue;\n\t\t\t\t\tif(i>=y && j>=z){\n\t\t\t\t\t\tif((i-y)*50+(j-z)*100>k) continue;\n\t\t\t\t\t\tmp[{{i,j},1}].push_back({{y,z},0});\n\t\t\t\t\t\tmp[{{y,z},0}].push_back({{i,j},1});\n\t\t\t\t\t}\n\t\t\t\t\tif(i<=y && j<=z){\n\t\t\t\t\t\tif((i-y)*50+(j-z)*100>k) continue;\n\t\t\t\t\t\tmp[{{i,j},0}].push_back({{y,z},1});\n\t\t\t\t\t\tmp[{{y,z},1}].push_back({{i,j},0});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tnum[0][0][0] = 1;\n\tqueue<pair<pp,pp>> p;\n\tp.push({{0,0},{0,0}});\n\twhile(!p.empty()){\n\t\tll cur50 = p.front().first.first;\n\t\tll cur100 = p.front().first.second;\n\t\tll pos = p.front().second.first;\n\t\tll d = p.front().second.second;\n\t\tp.pop();\n\t\tll sz = mp[{{cur50,cur100},pos}].size();\n\n\t\trep(i,sz){\n\t\t\tll x1,x2,x3;\n\t\t\tx1 = mp[{{cur50,cur100},pos}][i].first.first;\n\t\t\tx2 = mp[{{cur50,cur100},pos}][i].first.second;\n\t\t\tx3 = mp[{{cur50,cur100},pos}][i].second;\n\t\t\tll n1 = max(x1,cur50),\n\t\t\tif(dist[x1][x2][x3]==inf){\n\t\t\t\tdist[x1][x2][x3] = d+1;\n\t\t\t\tnum[x1][x2][x3] += \n\t\t\t}\n\t\t}\n\t}\n}\n\t\n\n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nvoid fastIO(void)\n{  ios_base::sync_with_stdio(false);\n   cin.tie(0);\n   cout.tie(0);\n}\n \nvoid decimal(int n){\n   cout<<fixed;\n   cout<<setprecision(n);\n}\ninline ll modmulti(ll a, ll b){\n   return ((a%mod)*1ll*(b%mod))%mod;\n}\ninline ll modadd(ll a, ll b){\n   ll asdfgh =  ((a%mod)+(b%mod)+mod+mod)%mod;\n   asdfgh = (asdfgh+mod)%mod;\n   return asdfgh;\n}\nll modpower(ll a, ll n){\n   if(n==0) return 1;\n   if(n==1) return (a%mod);\n   ll b = modpower(a,n/2);\n   b = modmulti(b,b);\n   if(n%2==0) return b;\n   return modmulti(a,b);\n}\nll gcd(ll a, ll b){\n   if(b==0)\n      return a;\n   return gcd(b,a%b);\n}\nll modinv(ll a){\n   return modpower(a,mod-2);\n}"
}