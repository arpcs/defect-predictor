{
    "id": 219831032,
    "contestId": 295,
    "creationTimeSeconds": 1692642051,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "CodeHashira"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 4812800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long int\r\n#define ld long double\r\nconst int MAX=1e5+17;\r\nvector<ll> parent;\r\nvector<ll> sz;\r\n\r\n\r\nvoid solve()\r\n{\r\n  int n,m,k; cin>>n>>m>>k;\r\n  vector<ll> a(MAX),l(MAX),r(MAX),d(MAX); \r\n  vector<ll> pre(MAX,0),res(MAX,0);\r\n  for(int i=1;i<=n;i++)cin>>a[i];\r\n\t \r\n\tfor(int i=1;i<=m;i++){\r\n\t\tcin>>l[i]>>r[i]>>d[i];\r\n\t}\r\n\r\n  int x,y;\r\n  for(int i=1;i<=k;i++)\r\n  {\r\n     cin>>x>>y;\r\n     pre[x]++;\r\n     pre[y+1]--; \r\n  }\r\n\r\n  for(int i=1;i<=m;i++)\r\n  {\r\n     pre[i]+=pre[i-1];\r\n     res[l[i]]+=(pre[i]*d[i]);\r\n\t   res[r[i]+1]-=(pre[i]*d[i]);\r\n\r\n  }\r\n  // for(auto it:pre)\r\n  // {\r\n  //     cout<<it<<\" \";\r\n  // }\r\n  // cout<<endl;\r\n\r\n   for(int i=1;i<=n;i++)\r\n  {\r\n     res[i]+=res[i-1];\r\n     cout<<a[i]+res[i]<<\" \";\r\n  }\r\n  cout<<endl;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL); \r\n    int t=1;\r\n    // cin>>t; \r\n    while(t--)\r\n    {\r\n    \r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}