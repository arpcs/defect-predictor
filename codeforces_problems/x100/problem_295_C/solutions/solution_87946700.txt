{
    "id": 87946700,
    "contestId": 295,
    "creationTimeSeconds": 1595633136,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "MOONMEANDER_FP"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 4608000,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\n#define pb push_back\r\n#define popb pop_back\r\n#define all(A) A.begin(),A.end()\r\n#define dic unordered_map //Diccionario\r\n#define bpc __builtin_popcountll //numero de bits para long long\r\n#define bclz __builtin_clzll //leading zeros\r\n \r\nusing namespace std;\r\nconst ll mod=1e9 + 7;\r\nint k,cant1=0,cant2=0;\r\nvector<vector<ll>> state(51,vector<ll>(51,1));\r\nvector<vector<int>> dist(51,vector<int>(51,INT_MAX));\r\n\r\n\r\nconst int states = 300;\r\nll c[states][states];\r\n\r\nvoid comb() {\r\n\tc[0][0]=1;\r\n\tfor(int i = 1; i < states; i++) {\r\n\t\tfor(int j = 0; j < states; j++) {\r\n\t\t\tif(j == 0 || j == i) c[i][j] = 1;\r\n\t\t\telse c[i][j] = (c[i-1][j-1] + c[i-1][j])%mod;\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\n\r\nvoid bfs(){\r\n\tdist[cant1][cant2]=0;\r\n\tstate[cant1][cant2]=1;\r\n\tqueue<pair<int,int>> Q;\r\n\tQ.push({cant1,cant2});\r\n\twhile(!Q.empty()){\r\n\t\tpair<int,int> now=Q.front();\r\n\t\tQ.pop();\r\n\t\tint i,j=min(k/2,now.second);\r\n\t\tfor(i=k-j*2;i<=now.first && j>=0;j-- , i+=2){\r\n\t\t\tpair<int,int> next={now.first-i,now.second-j};\r\n\t\t\tint delta;\r\n\t\t\tll ways=1;\r\n\t\t\tways*=c[now.first][i]*c[now.second][j];\r\n\t\t\tways%=mod;\r\n\t\t\tif(next.first==0 && next.second==0){\r\n\t\t\t\t//termina\r\n\t\t\t\tdelta=1;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tif(cant1-next.first>0){\r\n\t\t\t\t\t ways*=cant1-next.first;\r\n\t\t\t\t\t next.first++;//vuelve primero\r\n\t\t\t\t\t ways%=mod;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tways*=cant2-next.second;\r\n\t\t\t\t\tways%=mod;\r\n\t\t\t\t\tnext.second++;//vuelve segundo\r\n\t\t\t\t}\r\n\t\t\t\tdelta=2;\r\n\t\t\t}\r\n\t\t\tif(dist[next.first][next.second]>dist[now.first][now.second]+delta){\r\n\t\t\t\tdist[next.first][next.second]=dist[now.first][now.second]+delta;\r\n\t\t\t\tstate[next.first][next.second]=state[now.first][now.second]*ways;\r\n\t\t\t\tstate[next.first][next.second]%=mod;\r\n\t\t\t\tQ.push(next);\r\n\t\t\t}\r\n\t\t\telse if(dist[next.first][next.second]==dist[now.first][now.second]+delta){\r\n\t\t\t\tstate[next.first][next.second]+=state[now.first][now.second]*ways;\r\n\t\t\t\tstate[next.first][next.second]%=mod;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nint main () {\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0);\r\n\tcomb();\r\n\t\r\n\tint n;\r\n\tcin>>n>>k;\r\n\tk/=50;\r\n\tfor(int i=0;i<n;i++){\r\n\t\tint val;\r\n\t\tcin>>val;\r\n\t\tif(val==50) cant1++;\r\n\t\telse cant2++;\r\n\t}\r\n\tbfs();\r\n\tif(dist[0][0]==INT_MAX){\r\n\t\tcout<<\"1\\n0\\n\";\r\n\t\treturn  0; \r\n\t}\r\n\tcout<<dist[0][0]<<\"\\n\";\r\n\tcout<<state[0][0]<<\"\\n\";\r\n\treturn 0;\r\n}"
}