{
    "id": 103069217,
    "contestId": 295,
    "creationTimeSeconds": 1609648415,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "copperium"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\n#define MOD 1000000007\n#define INF 1000000000\n#define EPS 1e-9\n#define PI 3.1415926535897932384626433832795L\n#ifdef ONLINE_JUDGE\n#define debug(args...) (0)\n#else\n#include \"debug.h\"\n#endif\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\nll n,k,na=0,nb=0;\nll dp[51][51][2]={{{0}}},dpw[51][51][2]={{{0}}},ch[51][51];\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n#ifndef ONLINE_JUDGE\n  freopen(\"inp.txt\", \"r\", stdin);\n#endif\n  ch[0][0]=1;\n  for (n=1;n<=50;n++) {\n    for (k=0;k<=n;k++) {\n      ch[n][k]=ch[n-1][k]+ch[n-1][k-1];\n    }\n  }\n  cin>>n>>k;\n  k/=50;\n  for (int i=0;i<n;i++){\n    ll x;\n    cin>>x;\n    if (x==50)na++;\n    else nb++;\n  }\n  dp[na][nb][0]=1;\n  dpw[na][nb][0]=1;\n  queue<tuple<ll,ll,ll,ll,ll> > bfs;\n  bfs.push({0,1,1,na,nb});\n  while (bfs.size()) {\n    ll f,d,w,a,b;\n    tie(f,d,w,a,b)=bfs.front(); bfs.pop();\n    debug(f,d,w,a,b);\n    if (dp[a][b][f]) {\n      if (d>dp[a][b][f])debug(\"NO\");\n      dpw[a][b][f]*=w;\n      dpw[a][b][f]%=MOD;\n    } else {\n      dp[a][b][f]=d;\n      dpw[a][b][f]=w;\n    }\n    if (f==0) {\n      // to\n      for (ll fa=0;fa<=k&&fa<=a;fa++) {\n        for (ll fb=0;fa+2*fb<=k&&fb<=b;fb++) {\n          if (fa==0&&fb==0)continue;\n          ll qa=a-fa,qb=b-fb;\n          if (dp[qa][qb][!f]) continue;\n          bfs.push({!f,d+1,(ch[a][fa]*ch[b][fb]%MOD)*w%MOD,qa,qb});\n        }\n      }\n    } else {\n      // from\n      for (ll ta=0;ta<=k&&ta<=na-a;ta++) {\n        for (ll tb=0;ta+2*tb<=k&&tb<=nb-b;tb++) {\n          if (ta==0&&tb==0)continue;\n          ll qa=a+ta,qb=b+tb;\n          if (dp[qa][qb][!f]) continue;\n          bfs.push({!f,d+1,(ch[na-a][ta]*ch[nb-b][tb]%MOD)*w%MOD,qa,qb});\n        }\n      }\n    }\n  }\n  if (dp[0][0][1]==0)cout<<\"-1\\n0\\n\";\n  else {\n    cout<<dp[0][0][1]-1<<'\\n'<<(dpw[0][0][1]%MOD+MOD)%MOD<<\"\\n\";\n  }\n}\n"
}