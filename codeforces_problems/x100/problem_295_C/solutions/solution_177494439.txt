{
    "id": 177494439,
    "contestId": 295,
    "creationTimeSeconds": 1666467616,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "ankushgarg_04"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 44,
    "timeConsumedMillis": 312,
    "memoryConsumedBytes": 307200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n//--------------------------------------------------------------------------------------//\r\n#define pb push_back\r\n#define F first\r\n#define S second\r\n#define int long long int\r\n#define MOD 1000000007\r\n//--------------------------------------------------------------------------------------//\r\n\r\nint modAdd( int a , int b ) { return ( a%MOD + b%MOD ) % MOD; }\r\nint modSubtract( int a , int b ) { return ( ( a%MOD - b%MOD ) + MOD )%MOD; }\r\nint modProduct( int a , int b ) { return ( a%MOD * b%MOD ) % MOD; }\r\nint powerMod( int a , int b ) {\r\n    if(b==0)\r\n        return 1;\r\n    int x = powerMod(a,b/2);\r\n    if(b%2==0) \r\n        return (x*x) % MOD;\r\n    else\r\n        return ( ((x*x) % MOD) * a ) % MOD;\r\n}\r\nint modInverse(int a) { int x = powerMod( a , MOD-2 ); return x; }\r\nint modDivide( int a , int b ) { return ( a%MOD * modInverse(b)%MOD ) % MOD; }\r\n\r\nconst int N = 55;\r\nint n1 = 0 , n2 = 0 , k;\r\nint fact[N] , dp[N][N][2] , ways[N][N][2];\r\n\r\nint nCr(int n , int r)\r\n{\r\n    return modDivide(fact[n] , modProduct(fact[n-r] , fact[r]));\r\n}\r\n\r\nsigned main()\r\n{\r\n    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n\r\n    fact[0] = 1;\r\n    for(int i=1 ; i<N ; i++)\r\n        fact[i] = (fact[i-1] * i)%MOD;\r\n\r\n    int n;\r\n    cin >> n >> k;\r\n\r\n    int a[n];\r\n    for(int i=0 ; i<n ; i++){\r\n        cin >> a[i];\r\n        if(a[i] == 50) n1++;\r\n        else n2++;\r\n    }\r\n\r\n    sort(a , a+n);\r\n\r\n    if(k < a[n-1]){\r\n        cout << \"-1\\n0\";\r\n        return 0;\r\n    }\r\n    else if(n >= 2 and a[0] + a[1] > k){\r\n        cout << \"-1\\n0\";\r\n        return 0;\r\n    }\r\n    \r\n    int vis[n1+1][n2+1][2] = {} , ways[n1+1][n2+1][2] = {};\r\n    memset(vis , -1 , sizeof(vis));\r\n\r\n    queue< vector<int> > q;\r\n    q.push({n1 , n2 , 0}); vis[n1][n2][0] = 0; ways[n1][n2][0] = 1;\r\n\r\n    while(q.size()){\r\n        vector<int> v = q.front(); q.pop();\r\n        int x1 = v[0] , x2 = v[1] , t = v[2];\r\n        for(int i=0 ; i<=x1 ; i++){\r\n            for(int j=0 ; j<=x2 ; j++){\r\n                if(i == 0 and j == 0) continue;\r\n                if(i*50 + j*100 <= k){\r\n                    if(vis[n1-x1+i][n2-x2+j][1-t] == -1){\r\n                        vis[n1-x1+i][n2-x2+j][1-t] = vis[x1][x2][t] + 1;\r\n                        q.push({n1-x1+i , n2-x2+j , 1-t});\r\n                    }\r\n                    if(vis[n1-x1+i][n2-x2+j][1-t] == vis[x1][x2][t] + 1)\r\n                        ways[n1-x1+i][n2-x2+j][1-t] = (ways[n1-x1+i][n2-x2+j][1-t] + ((nCr(x1 , i) * nCr(x2 , j))%MOD * ways[x1][x2][t])%MOD)%MOD;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    cout << vis[n1][n2][1] << '\\n' << ways[n1][n2][1];\r\n\r\n    cerr << \"Time elapsed: \" << 1.0 * clock() / CLOCKS_PER_SEC << \" s.\\n\";\r\n}  "
}