{
    "id": 210805331,
    "contestId": 295,
    "creationTimeSeconds": 1687551315,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n\n#define ll long long int\n#define pb push_back\n#define all(x) x.begin(),x.end()\n#define Max 10000000000000000\n\ntemplate <typename T>\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\ntemplate <typename T>\nusing min_heap=priority_queue<T, vector<T>, greater<T>>;\n\nll n,m,p,q,fact[51],mod=1000000007,inv[51];\nll bigmod(ll val,ll pwr){\n    if(!pwr) return 1;\n\tif(pwr==1) return val%mod;\n\tif(val==1) return 1;\n    if(pwr%2) return (val*bigmod(val,pwr-1))%mod;\n    ll temp=bigmod(val,pwr/2);\n    return (temp*temp)%mod;\n}\npair<ll,ll> dp[51][51][2];\n\npair<ll,ll> solve(ll x,ll y,ll side){\n    //cout<<x<<\" \"<<y<<\" \"<<side<<endl;\n    if(!x && !y) return {0,1};\n    if(dp[x][y][side].first!=-1) return dp[x][y][side];\n    dp[x][y][side]={Max,0};\n    \n    if(!side){\n        for(ll i=0;i<=x;i++){\n            for(ll j=0;j<=y;j++){\n                ll w=50*i+100*j;\n                if(w>m || !w) continue;\n                pair<ll,ll> temp=solve(x-i,y-j,1);\n                temp.first++;\n                ll f1=(fact[x]*inv[i])%mod;\n                f1=(f1*inv[x-i])%mod;\n                ll f2=(fact[y]*inv[j])%mod;\n                f2=(f2*inv[y-j])%mod;\n                temp.second=(temp.second*f1)%mod;\n                temp.second=(temp.second*f2)%mod;\n                if(dp[x][y][side].first==temp.first) dp[x][y][side].second=(dp[x][y][side].second+temp.second)%mod;\n                else if(dp[x][y][side].first>temp.first) dp[x][y][side]=temp;\n            }\n        }\n    }\n    else{\n        for(ll i=0;i<=p-x;i++){\n            for(ll j=0;j<=q-y;j++){\n                ll w=50*i+100*j;\n                if(w>m || !w) continue;\n                pair<ll,ll> temp=solve(x+i,y+j,0);\n                temp.first++;\n                ll f1=(fact[p-x]*inv[i])%mod;\n                f1=(f1*inv[p-x-i])%mod;\n                ll f2=(fact[q-y]*inv[j])%mod;\n                f2=(f2*inv[q-y-j])%mod;\n                temp.second=(temp.second*f1)%mod;\n                temp.second=(temp.second*f2)%mod;\n                if(dp[x][y][side].first==temp.first) dp[x][y][side].second=(dp[x][y][side].second+temp.second)%mod;\n                else if(dp[x][y][side].first>temp.first) dp[x][y][side]=temp;\n            }\n        }\n    }\n\n    return dp[x][y][side];\n}\n\nint main()\n{\n    fact[0]=1;\n    inv[0]=1;\n    for(ll i=1;i<=50;i++){\n        fact[i]=(i*fact[i-1])%mod;\n        inv[i]=bigmod(fact[i],mod-2);\n    }\n    for(ll i=0;i<=50;i++){\n        for(ll j=0;j<=50;j++){\n            for(ll k=0;k<2;k++)\n                dp[i][j][k]={-1,-1};\n        }\n    }\n    cin>>n>>m;\n    for(ll i=0;i<n;i++){\n        ll temp;\n        cin>>temp;\n        if(temp==50) p++;\n        else q++;\n    }\n\n    pair<ll,ll> ans=solve(p,q,0);\n    if(ans.first==Max) ans.first=-1;\n    cout<<ans.first<<endl<<ans.second<<endl;\n\n    return 0;\n}\n      \t\t \t    \t\t   \t\t \t  \t\t\t"
}