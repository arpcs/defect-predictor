{
    "id": 74382794,
    "contestId": 295,
    "creationTimeSeconds": 1585223991,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "dnshgyl21"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 44,
    "timeConsumedMillis": 1652,
    "memoryConsumedBytes": 10444800,
    "source": "#include<bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\n#define pi 3.141592653589793238\r\n#define int long long\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\ntemplate <typename T>\r\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\n\r\nint dp[51][51][500];\r\nint fac[105];\r\nint mod=1e9+7;\r\nint ncr[51][51];\r\n\r\nsigned main()\r\n{\r\n     ios_base::sync_with_stdio(false);\r\n     cin.tie(NULL);  \r\n   \r\n #ifndef ONLINE_JUDGE\r\n    if(fopen(\"INPUT.txt\",\"r\"))\r\n    {\r\n    freopen (\"INPUT.txt\" , \"r\" , stdin);\r\n    freopen (\"OUTPUT.txt\" , \"w\" , stdout);\r\n    }\r\n #endif\r\n \r\n// -------------------------------------Code starts here---------------------------------------------------------------------     \r\n\r\n   \r\n   for(int i=0;i<=50;i++)\r\n   {\r\n      ncr[i][0]=1;\r\n      for(int j=0;j<=i;j++)\r\n         if(i>0&&j>0)\r\n            ncr[i][j]=(ncr[i-1][j-1]+ncr[i-1][j])%mod;\r\n   }\r\n   int n,k;\r\n   cin>>n>>k;\r\n   int w;\r\n   int x=0,y=0;\r\n   for(int i=0;i<n;i++)\r\n   {\r\n      cin>>w;\r\n      if(w==50)\r\n         x++;\r\n      else\r\n         y++;\r\n   }\r\n   fac[0]=1;\r\n   for(int i=1;i<=100;i++)\r\n   {\r\n      fac[i]=(fac[i-1]*i)%mod;\r\n   }\r\n\r\n   dp[0][0][0]=1; \r\n\r\n   for(int lo=1;lo<=200;lo++)\r\n   {\r\n      for(int i=0;i<=x;i++)\r\n      {\r\n         for(int j=0;j<=y;j++)\r\n         {\r\n            if(lo%2)\r\n            {\r\n               for(int i1=0;i1<=x;i1++)\r\n               {\r\n                  for(int j1=0;j1<=y;j1++)\r\n                  {\r\n                     int z=i1*50+j1*100;\r\n                     if(z>0&&z<=k && i1<=i&& j1<=j)\r\n                     {\r\n                        int sa=x-(i-i1);\r\n                        int sb=y-(j-j1);\r\n                        dp[i][j][lo]+=(dp[i-i1][j-j1][lo-1])*ncr[sa][i1]%mod*ncr[sb][j1]%mod;\r\n                        dp[i][j][lo]%=mod;\r\n                     }\r\n                  }\r\n               }\r\n            }\r\n            else\r\n            {\r\n               for(int i1=0;i1<=x;i1++)\r\n               {\r\n                  for(int j1=0;j1<=y;j1++)\r\n                  {\r\n                     int z=i1*50+j1*100;\r\n                     if(z>0&&z<=k && i1+i<=x && j1+j<=y)\r\n                     {\r\n                        int sa=i+i1;\r\n                        int sb=j+j1;\r\n                        dp[i][j][lo]+=(dp[i+i1][j+j1][lo-1])*ncr[sa][i1]%mod*ncr[sb][j1]%mod;\r\n                        dp[i][j][lo]%=mod;\r\n                     }\r\n                  }\r\n               }\r\n            }            \r\n         }\r\n      }\r\n   }\r\n\r\n   for(int i=1;i<=200;i++)\r\n   {\r\n      if(dp[x][y][i])\r\n      {\r\n         cout<<i<<'\\n';\r\n         cout<<dp[x][y][i];\r\n         return 0;\r\n      }\r\n   }\r\n   cout<<-1<<'\\n'<<0;\r\n\r\n// -------------------------------------Code ends here------------------------------------------------------------------\r\n     clock_t clk;\r\n \tclk = clock();\r\n \r\n    clk = clock() - clk;\r\n \tcerr << fixed << setprecision(6) << \"Time: \" << ((double)clk)/CLOCKS_PER_SEC << \"\\n\";\r\n \treturn 0;\r\n }\r\n "
}