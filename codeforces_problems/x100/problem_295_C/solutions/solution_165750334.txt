{
    "id": 165750334,
    "contestId": 295,
    "creationTimeSeconds": 1658819249,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "Grunt"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 44,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int M = 1e9+7;\r\n\r\nstruct node{\r\n\tint pos;\r\n\tint u,v;\r\n};\r\n\r\nint n,k;\r\nint w[57],p,q;\r\nint step[2][57][57];\r\nll cnt[2][57][57];\r\nll C[57][57];\r\n\r\nvoid precompute(){\r\n\tfor(int i=0;i<=50;i++){\r\n\t\tfor(int j=0;j<=i;j++){\r\n\t\t\tif(j==0||j==i)C[i][j]=1;\r\n\t\t\telse C[i][j]=(C[i-1][j-1]+C[i-1][j])%M;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tprecompute();\r\n\tcin>>n>>k;\r\n\tk/=50;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tcin>>w[i];\r\n\t\tif(w[i]==50)p++;\r\n\t\telse q++;\r\n\t}\r\n\r\n\tmemset(step,-1,sizeof(step));\r\n\tstep[0][p][q]=0;\r\n\tcnt[0][p][q]=1;\r\n\tqueue<node>que;\r\n\tque.push((node){0,p,q});\r\n\twhile(!que.empty()){\r\n\t\tnode t=que.front();\r\n\t\tque.pop();\r\n\t\tif(t.pos==0){\r\n\t\t\tfor(int i=0;i<=t.u;i++){\r\n\t\t\t\tfor(int j=0;j<=t.v;j++){\r\n\t\t\t\t\tif(i+j&&i+2*j<=k){\r\n\t\t\t\t\t\tif(step[1][t.u-i][t.v-j]==-1){\r\n\t\t\t\t\t\t\tstep[1][t.u-i][t.v-j]=step[0][t.u][t.v]+1;\r\n\t\t\t\t\t\t\tcnt[1][t.u-i][t.v-j]=cnt[0][t.u][t.v]*C[t.u][i]%M*C[t.v][j]%M;\r\n\t\t\t\t\t\t\tque.push((node){1,t.u-i,t.v-j});\r\n\t\t\t\t\t\t}else if(step[1][t.u-i][t.v-j]==step[0][t.u][t.v]+1){\r\n\t\t\t\t\t\t\tcnt[1][t.u-i][t.v-j]+=cnt[0][t.u][t.v]*C[t.u][i]%M*C[t.v][j]%M;\r\n\t\t\t\t\t\t\tcnt[1][t.u-i][t.v-j]%=M;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tfor(int i=0;i<=p-t.u;i++){\r\n\t\t\t\tfor(int j=0;j<=q-t.v;j++){\r\n\t\t\t\t\tif(i+j&&i+2*j<=k){\r\n\t\t\t\t\t\tif(step[0][t.u+i][t.v+j]==-1){\r\n\t\t\t\t\t\t\tstep[0][t.u+i][t.v+j]=step[1][t.u][t.v]+1;\r\n\t\t\t\t\t\t\tcnt[0][t.u+i][t.v+j]=cnt[1][t.u][t.v]*C[p-t.u][i]%M*C[q-t.v][j]%M;\r\n\t\t\t\t\t\t\tque.push((node){0,t.u+i,t.v+j});\r\n\t\t\t\t\t\t}else if(step[0][t.u+i][t.v+j]==step[1][t.u][t.v]+1){\r\n\t\t\t\t\t\t\tcnt[0][t.u+i][t.v+j]+=cnt[1][t.u][t.v]*C[p-t.u][i]%M*C[q-t.v][j]%M;\r\n\t\t\t\t\t\t\tcnt[0][t.u+i][t.v+j]%=M;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcout<<step[1][0][0]<<' '<<cnt[1][0][0]<<endl;\r\n}"
}