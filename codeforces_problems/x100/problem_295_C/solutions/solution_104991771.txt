{
    "id": 104991771,
    "contestId": 295,
    "creationTimeSeconds": 1611237200,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "luogu_bot3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int MOD = 1e9+7;\r\nlong long n,k;\r\nlong long a[55],c[55][55],dp[105][55][55];\r\nlong long num_50,num_100,old,now;\r\nbool chk;\r\n\r\nint main()\r\n{\r\n    for(int i = 0; i < 50; i++) {\r\n        c[i][0] = 1;\r\n        for(int j = 1; j <= i; j++) \r\n            c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % MOD;\r\n    }\r\n    scanf(\"%lld%lld\", &n, &k);\r\n    k /= 50;\r\n    for(int i = 1; i <= n; i++) {\r\n        scanf(\"%lld\", &a[i]);\r\n        if(a[i] == 50)\r\n            num_50++;\r\n        else\r\n            num_100++;\r\n    }\r\n    old = 1;\r\n    now = 0;\r\n    dp[0][num_50][num_100] = 1;\r\n    for(int l = 0; l < 2 * n; l++) {\r\n    \t//\u4ece\u8fd9\u5cb8\u5230\u90a3\u5cb8\r\n        swap(now, old);\r\n        memset(dp[now], 0, sizeof(dp[now]));\r\n        for(int i = 0; i <= num_50; i++) {\r\n            for(int j = 0; j <= num_100; j++) {\r\n                if(i + j * 2 && (i + j * 2) <= k) {\r\n                    for(int x = i; x <= num_50; x++) {\r\n                        for(int y = j; y <= num_100; y++) {\r\n                            dp[now][num_50 - x + i][num_100 - y + j] += dp[old][x][y] * c[x][i] % MOD * c[y][j] % MOD;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(dp[now][num_50][num_100]) {\r\n            printf(\"%d\\n\", l * 2 + 1);\r\n            printf(\"%lld\\n\", dp[now][num_50][num_100] % MOD);\r\n            ok = 1;\r\n            break;\r\n            //\u8f93\u51fa\u89e3\r\n        }\r\n        //\u4ece\u90a3\u5cb8\u56de\u6765\r\n        swap(now, old);\r\n        memset(dp[now], 0, sizeof(dp[now]));\r\n        for(int i = 0; i <= num_50; i++) {\r\n            for(int j = 0; j <= num_100; j++) {\r\n                if(i + j * 2 && (i + j * 2) <= k) {\r\n                    for(int x = i; x <= num_50; x++) {\r\n                        for(int y = j; y <= num_100; y++) {\r\n                            dp[now][num_50 - x + i][num_100 - y + j] += dp[old][x][y] * c[x][i] % MOD * c[y][j] % MOD;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if(ok == 0)\r\n        cout << \"-1\\n0\\n\";\r\n    return 0;\r\n}"
}