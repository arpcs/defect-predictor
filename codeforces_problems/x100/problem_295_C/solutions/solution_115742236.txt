{
    "id": 115742236,
    "contestId": 295,
    "creationTimeSeconds": 1620513478,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "kunj017"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 44,
    "timeConsumedMillis": 1838,
    "memoryConsumedBytes": 7577600,
    "source": "#include<bits/stdc++.h>\r\n#include <iomanip>\r\n#define ll long long int\r\n#define ld long double\r\n#define f first\r\n#define inf 100000000000000000\r\n#define ii pair<ll,ll>\r\n#define vi vector<ll>\r\n#define vii vector<ii>\r\n#define MS0(x) memset(x,0,sizeof(x))\r\n#define MS1(x) memset(x,-1,sizeof(x))\r\n#define s second\r\n#define pb push_back\r\n#define forn(i,n) for(int i=0;i<(int)n;i++)\r\n#define Sort(a) sort(a.begin(),a.end());\r\n#define debug(x) cerr << #x << \" is \" << x << endl;\r\nusing namespace std;\r\nll mod = 1000000007;\r\n\r\n#include <ext/pb_ds/assoc_container.hpp> \r\n#include <ext/pb_ds/tree_policy.hpp> \r\nusing namespace __gnu_pbds;\r\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> \r\n// ordered_set os.find_by_order os.order_of_key\r\n// b/w l and r os.order_of_key(r+1)-order_of_key(l)\r\n\r\n// ll arr1[1000009];\r\n// //ll parent[1000009];\r\n// set<ll> sieve;\r\n// void sievefun(ll n){\r\n//     for(ll i=2;i<=n;i++){\r\n//         if(arr1[i]==0){\r\n//  //              parent[i]=i;\r\n//             for(ll j=i*i;j<=n;j+=i){\r\n//    //         \tif(arr1[j]==0)parent[j]=i;\r\n//                 arr1[j]=1;\r\n//             }\r\n//         }\r\n//     }\r\n//     for(int i=2;i<=n;i++){\r\n//     \tif(arr1[i]==0)sieve.insert(i);\r\n//     }\r\n// }\r\nll power(ll x, ll y,ll m) {\r\n\tll temp;\r\n\tif( y == 0)\r\n\t\treturn 1;\r\n\ttemp = power(x, y/2,m)%m;\r\n\tif (y%2 == 0)\r\n\t\treturn ((temp)*(temp))%m;\r\n\telse\r\n\t\treturn (((x)%m)*((temp*temp)%m))%m;\r\n}\r\n\r\nll fac[1009];\r\nvoid factorial(){\r\n\tfac[0]=1;\r\n\tfor(int i=1;i<=1000;i++)fac[i]=(i*fac[i-1])%mod;\r\n}\r\nll ncr(ll n,ll r){\r\n\tif(r>n)return 0;\r\n\tif(n<0 or r<0)return 0;\r\n\treturn (fac[n]*((power(fac[r],mod-2,mod)*power(fac[n-r],mod-2,mod))%mod))%mod;\r\n}\r\n\r\n// ll fun(ll n){\r\n// \tll temp = sqrt(n);\r\n// \tif(temp*temp==n)return 1;\r\n// \treturn 0;\r\n// }\r\nll const N=300009;\r\nvii g[N];\r\n\r\nint main()\r\n{\t//sievefun(1000000);\r\n\tios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\r\n\tint T=1;\r\n\t// cin>>T;\r\n\tfactorial();\r\n\twhile(T--){\r\n\r\n\t\tll n,kk;\r\n\t\tcin>>n>>kk;\r\n\t\tll a=0,b=0;\r\n\t\tforn(i,n){\r\n\t\t\tll x;\r\n\t\t\tcin>>x;\r\n\t\t\tif(x==50)a++;\r\n\t\t\telse b++;\r\n\t\t}\r\n\t\tll dist[a+1][b+1][2];\r\n\t\tforn(i,a+1)forn(j,b+1)forn(k,2)dist[i][j][k]=inf;\r\n\t\tdist[a][b][0]=0;\r\n\t\tll ways[a+1][b+1][2];\r\n\t\tint vis[a+1][b+1][2];\r\n\t\tMS0(vis);\r\n\t\tMS0(ways);\r\n\t\tways[a][b][0]=1;\r\n\t\tqueue<pair<ll,ii> > q;\r\n\t\tq.push({0,{a,b}});\r\n\t\twhile(!q.empty()){\r\n\t\t\tpair<ll,ii> node = q.front();\r\n\t\t\tq.pop();\r\n\t\t\tll shore = node.f;\r\n\t\t\tll x = node.s.f;\r\n\t\t\tll y = node.s.s;\r\n\t\t\tll node_dist = dist[x][y][shore];\r\n\t\t\tll node_ways = ways[x][y][shore];\r\n\t\t\t// cout<<x<<\" \"<<y<<\" \"<<shore<<endl;\r\n\t\t\tif(vis[x][y][shore])continue;\r\n\t\t\tvis[x][y][shore]=1;\r\n\t\t\tfor(int i=0;i<=x;i++){\r\n\t\t\t\tfor(int j=0;j<=y;j++){\r\n\t\t\t\t\tif(i==0 and j==0)continue;\r\n\t\t\t\t\tif(50*i + 100*j > kk)continue;\r\n\t\t\t\t\tll mx,mshore,my;\r\n\t\t\t\t\tmshore = shore^1;\r\n\t\t\t\t\tmx = (a-x) + i;\r\n\t\t\t\t\tmy = (b-y) + j;\r\n\t\t\t\t\tll temp = (node_ways * (ncr(x,i) * ncr(y,j))%mod)%mod;\r\n\t\t\t\t\tif(dist[mx][my][mshore]>node_dist+1){\r\n\t\t\t\t\t\tdist[mx][my][mshore] = node_dist+1;\r\n\t\t\t\t\t\tways[mx][my][mshore] = temp;\r\n\t\t\t\t\t\tq.push({mshore,{mx,my}});\r\n\t\t\t\t\t\t// cout<<mx<<\" \"<<my<<\" \"<<mshore<<\" \"<<dist[mx][my][mshore]<<\" \"<<ways[mx][my][mshore]<<endl;\r\n\t\t\t\t\t}else if (dist[mx][my][mshore] == node_dist + 1){\r\n\t\t\t\t\t\tways[mx][my][mshore] = (temp+ways[mx][my][mshore])%mod;\r\n\t\t\t\t\t\t// cout<<mx<<\" \"<<my<<\" \"<<mshore<<\" \"<<dist[mx][my][mshore]<<\" \"<<ways[mx][my][mshore]<<endl;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(dist[a][b][1] == inf){\r\n\t\t\tcout<<\"-1\\n0\\n\";\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tcout<<dist[a][b][1]<<endl;\r\n\t\tcout<<ways[a][b][1]<<endl;\r\n\t\t\r\n\t}\r\n\r\n}"
}