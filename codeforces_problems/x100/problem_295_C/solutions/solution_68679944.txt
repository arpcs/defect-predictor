{
    "id": 68679944,
    "contestId": 295,
    "creationTimeSeconds": 1578862911,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "HwaRyun"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 2560000,
    "source": "/**\r\n * code generated by JHelper\r\n * More info: https://github.com/AlexeyDmitriev/JHelper\r\n * @author ExplodingFreeze\r\n */\r\n\r\n#include <iostream>\r\n#include <fstream>\r\n\r\n#include <bits/stdc++.h>\r\n//#include <ext/pb_ds/assoc_container.hpp>\r\n//#include <ext/pb_ds/tree_policy.hpp>\r\n#define int long long\r\n#define f(i,a,b) for(int i=(a);i<(b);i++)\r\nconst int MOD=1e9+7;\r\nusing pii=std::pair<int,int>;\r\n//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n//using namespace __gnu_pbds;\r\n//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\r\n\r\nusing namespace std;\r\n\r\nint n,k,x,cnt[2],dp[105][55][55],fact[55]={0},nCr[55][55]={0};;\r\nclass CGregAndFriends {\r\npublic:\r\n\tvoid solve(std::istream& in, std::ostream& out) {\r\n\t\tfact[0]=1;\r\n\t\tf(i,1,52)\r\n\t\t\tfact[i]=(fact[i-1]*i)%MOD;\r\n\t\tf(i,0,52)\r\n\t\t\tf(j,0,i+1)\r\n\t\t\t\tnCr[i][j]=nCr_mod(i,j);\r\n\t\tcnt[0]=cnt[1]=0;\r\n\t\tin >> n >> k;\r\n\t\tf(i,0,n)\r\n\t\t{\r\n\t\t\tin >> x;\r\n\t\t\tcnt[x/100]++;\r\n\t\t}\r\n\t\tf(i,0,n+3)\r\n\t\t\tf(j,0,cnt[0]+2)\r\n\t\t\t\tf(k,0,cnt[1]+2)\r\n\t\t\t\t\tdp[i][j][k]=0;\r\n\t\tdp[0][0][0]=1;\r\n\t\tf(trips,0,n+1)\r\n\t\t{\r\n\t\t\tif(dp[trips][cnt[0]][cnt[1]])\r\n\t\t\t{\r\n\t\t\t\tout << 2*trips-1 << \"\\n\" << (dp[trips][cnt[0]][cnt[1]])%MOD << \"\\n\";\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tf(i,0,cnt[0]+1)\r\n\t\t\t\tf(j,0,cnt[1]+1)\r\n\t\t\t\t\tif(dp[trips][i][j])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(dp[trips][i][j]>=MOD)\r\n\t\t\t\t\t\t\tdp[trips][i][j]%=MOD;\r\n\t\t\t\t\t\tint numh=min(k/100,cnt[1]-j),numf;\r\n\t\t\t\t\t\twhile(numh>=0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnumf=min((k-(numh*100))/50,cnt[0]-i);\r\n\t\t\t\t\t\t\tif(i+numf==cnt[0]&&j+numh==cnt[1])\t\t\t\t\t// Only one way to move all across to end\r\n\t\t\t\t\t\t\t\tdp[trips+1][i+numf][j+numh]=dp[trips][i][j];\r\n\t\t\t\t\t\t\telse if(i+numf>0)\t\t\t\t\t\t\t\t\t// Number of ways of current sitatution, selecting numf 50s, numh 100s and sending back a 50.\r\n\t\t\t\t\t\t\t\tdp[trips+1][i+numf-1][j+numh]+=(((dp[trips][i][j]*nCr[cnt[0]-i][numf])%MOD)*((nCr[cnt[1]-j][numh]*(i+numf))%MOD))%MOD;\r\n\t\t\t\t\t\t\telse if(j+numh>0)\t\t\t\t\t\t\t\t\t// Number of ways of current sitatution, selecting numf 50s, numh 100s and sending back a 100.\r\n\t\t\t\t\t\t\t\tdp[trips+1][i+numf][j+numh-1]+=(((dp[trips][i][j]*nCr[cnt[0]-i][numf])%MOD)*((nCr[cnt[1]-j][numh]*(j+numh))%MOD))%MOD;\r\n\t\t\t\t\t\t\tif(numf==cnt[0]-i)\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tnumh--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t}\r\n\t\tout << \"-1\\n0\\n\";\r\n\t}\r\n\tint nCr_mod(int x, int r)\r\n\t{\r\n\t\tint num=fact[x];\r\n\t\tint denom=(mod_inv(fact[r])*mod_inv(fact[x-r]))%MOD;\r\n\t\treturn (num*denom)%MOD;\r\n\t}\r\n\tint mod_inv(int x)\r\n\t{\r\n\t\treturn mod_exp(x,MOD-2);\r\n\t}\r\n\tint mod_exp(int x,int p)\r\n\t{\r\n\t\tint result=1;\r\n\t\twhile(p>0)\r\n\t\t{\r\n\t\t\tif(p&1)\r\n\t\t\t{\r\n\t\t\t\tresult*=x;\r\n\t\t\t\tif(result>=MOD)\r\n\t\t\t\t\tresult%=MOD;\r\n\t\t\t}\r\n\t\t\tx*=x;\r\n\t\t\tif(x>=MOD)\r\n\t\t\t\tx%=MOD;\r\n\t\t\tp/=2;\r\n\t\t}\r\n\t\treturn result%MOD;\r\n\t}\r\n};\r\n\r\n\r\nint32_t main() {\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(0);\r\n\tCGregAndFriends solver;\r\n\tstd::istream& in(std::cin);\r\n\tstd::ostream& out(std::cout);\r\n\tsolver.solve(in, out);\r\n\treturn 0;\r\n}\r\n"
}