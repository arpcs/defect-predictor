{
    "id": 102981320,
    "contestId": 295,
    "creationTimeSeconds": 1609524492,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "Mugiwara_ya"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 9932800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define f first\r\n#define INTMAX 2*1e18\r\n#define pb push_back\r\n#define pencho ios_base::sync_with_stdio(false);cin.tie(NULL);\r\n#define s second\r\n#define int long long\r\n#define endl '\\n'\r\n\r\nconst int mod = 1e9+7;\r\nconst int N = 55;\r\nint bp(int x, int y) {int ans = 1; x %= mod; while (y) {if (y & 1) ans = ans * x % mod; x = x * x % mod; y >>= 1;} return ans;}\r\nint mod_inverse(int x) {return bp(x, mod - 2); }\r\nint gcd (int a, int b) { while (b) {a %= b; swap(a, b);} return a;}\r\nint max(int a, int b) {     if (a < b)    swap(a, b);   return a;}\r\nint min(int a, int b) { if (a > b) swap(a, b); return a;}\r\nint countSetBits(int n) {int count = 0; while (n) {count += n & 1; n >>= 1;} return count;}\r\n/*int mul_inv(int a, int b) { int b0 = b, t, q; int x0 = 0, x1 = 1; if (b == 1) return 1; while (a > 1) { q = a / b;t = b, b = a % b, a = t;t = x0, x0 = x1 - q * x0, x1 = t;}if (x1 < 0) x1 += b0;return x1;}\r\nint chinese_remainder(vector <int> &a, int len = 3) {vector <int> n = {26, 25, 23};int p, i, prod = 1, sum = 0;for(int i = 0; i < len; i++) prod *= n[i];for(int i = 0; i < len; i++) {p = prod / n[i];sum += a[i] * mul_inv(p, n[i]) * p;}return sum % prod;}*/\r\n\r\n\r\nint k, cnt_l, cnt_h;\r\nint dp[N][N][2][205], c[N][N];\r\n\r\n\r\nvoid pre(){\r\n    for(int i=1; i<N; i++){\r\n        c[i][0] = 1;\r\n    for (int j=1; j<N; j++)\r\n      c[i][j] = (c[i-1][j-1] + c[i-1][j])%mod;\r\n  }\r\n}\r\n\r\n\r\nint solveDp(int l, int h, bool end, int rem){\r\n    //cout<<l<<\" \"<<h<<\" \"<<end<<\" \"<<rem<<\" \"<<endl;\r\n    //if(end == 1 && l == cnt_l && h == cnt_h)    cout<<rem<<endl;\r\n    if(rem == 0) return( end==1 && l==cnt_l && h==cnt_h);\r\n\r\n    if(dp[l][h][end][rem] != -1)   return dp[l][h][end][rem];\r\n    int ans = 0;\r\n    for(int i=0; i<=l; i++){\r\n        for(int j=0; j<=h; j++){\r\n            if((i==0 && j==0)||(i*50 + j*100 > k))  continue;\r\n            ans = (ans + (solveDp(cnt_l-l+i, cnt_h-h+j, end^1, rem-1) * (c[l][i] * c[h][j])%mod)%mod)%mod;\r\n        }\r\n    }\r\n    return dp[l][h][end][rem] = ans;\r\n}\r\n\r\nvoid solve(){\r\n    pencho\r\n    pre();\r\n    int n;\r\n    cin >> n >> k;\r\n    for(int i=0;i<n;i++){\r\n        int x;  cin>>x;\r\n        if(x==50)   cnt_l++;    else cnt_h++;\r\n    }\r\n    memset(dp,-1,sizeof(dp));\r\n    int ans = 0;\r\n    for(int i=1; i<200; i++){\r\n        int x = solveDp(cnt_l, cnt_h, 0, i);\r\n        //cout<<x<<endl;\r\n        if(x > 0){\r\n            cout<<i<<endl<<dp[cnt_l][cnt_h][0][i]<<endl;\r\n            return;\r\n        }\r\n       // memset(dp,-1,sizeof(dp));\r\n    }\r\n    cout<<\"-1\"<<endl<<\"0\"<<endl;\r\n}\r\n\r\nsigned main()\r\n{\r\n#ifndef ONLINE_JUDGE\r\n       freopen(\"input.txt\", \"r\", stdin);\r\n       //freopen(\"o.txt\", \"w\", stdout);\r\n#endif\r\n\r\n      solve();\r\n}\r\n\r\n"
}