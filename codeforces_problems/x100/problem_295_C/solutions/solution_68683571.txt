{
    "id": 68683571,
    "contestId": 295,
    "creationTimeSeconds": 1578879024,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "Yang1208"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 44,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 102400,
    "source": "#include <iostream>\r\n#include <cstring>\r\n#include <cstdio>\r\n#include <queue>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long LL;\r\nconst int N=56, MOD=1000000007;\r\n\r\nstruct node\r\n{\r\n    int x, y, id;\r\n    node(int a, int b, int c):x(a), y(b), id(c) {}\r\n};\r\nqueue <node> q;\r\nLL g[N][N][2];\r\nint f[N][N][2], n, m1, m2, k;\r\nint C[N][N];\r\n\r\nvoid BFS()\r\n{\r\n    memset(f, -1, sizeof f);\r\n    memset(g, 0, sizeof g);\r\n    f[m1][m2][0]=0, g[m1][m2][0]=1;\r\n    while(!q.empty()) q.pop();\r\n    q.push(node(m1, m2, 0));\r\n    while(!q.empty())\r\n    {\r\n        node cur=q.front();\r\n        q.pop();\r\n        int k1=cur.x, k2=cur.y, id=cur.id;\r\n        for(int i=0; i<=k1; i++)\r\n            for(int j=0; j<=k2; j++)\r\n            {\r\n                if(i==0 && j==0) continue;\r\n                if(i*50+j*100>k) continue;\r\n                int x=m1-k1+i, y=m2-k2+j;\r\n                if(f[x][y][id^1]==-1)\r\n                {\r\n                    f[x][y][id^1]=f[k1][k2][id]+1;\r\n                    g[x][y][id^1]=(g[x][y][id^1]+C[k1][i]*g[k1][k2][id]%MOD*C[k2][j]%MOD)%MOD;\r\n                    q.push(node(x, y, id^1));\r\n                }\r\n                else if(f[x][y][id^1]==f[k1][k2][id]+1)\r\n                    g[x][y][id^1]=(g[x][y][id^1]+C[k1][i]*g[k1][k2][id]%MOD*C[k2][j]%MOD)%MOD;\r\n            }\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    memset(C, 0, sizeof C);\r\n    for(int i=0; i<N; i++) C[i][0]=1;\r\n    for(int i=1; i<N; i++)\r\n        for(int j=1; j<=i; j++) C[i][j]=(C[i-1][j]+C[i-1][j-1])%MOD;\r\n\r\n    scanf(\"%d%d\", &n, &k);\r\n    m1=0, m2=0;\r\n    for(int i=0, a; i<n; i++)\r\n    {\r\n        scanf(\"%d\", &a);\r\n        if(a==50) m1++;\r\n        else m2++;\r\n    }\r\n    BFS();\r\n    printf(\"%d\\n%I64d\\n\", f[m1][m2][1], g[m1][m2][1]);\r\n    return 0;\r\n}"
}