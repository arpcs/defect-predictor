{
    "id": 84978553,
    "contestId": 295,
    "creationTimeSeconds": 1593092736,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "harry_potter333"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<iostream>\r\n#include<string>\r\n#include<algorithm>\r\n#include<vector>\r\n#include <math.h>\r\n#include <set>\r\n#include <map>\r\n#include <stdio.h>\r\n#include <queue>\r\n#define fio ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\r\n#define endl \"\\n\"\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst ll mod=1e9 + 7;\r\nll n,k,p1,p2,ncr[55][55];\r\nstruct node{\r\n    ll w1,w2,side;\r\n    node(ll x,ll y,ll z){\r\n        w1=x;\r\n        w2=y;\r\n        side=z;\r\n    }\r\n};\r\nqueue<node> q;\r\nll steps[55][55][2],ways[55][55][2];\r\nvoid bfs(){\r\n    node cur(p1,p2,0);\r\n    node p(1,1,0);\r\n    q.push(cur);\r\n    ll n1,n2;\r\n    while(!q.empty()){\r\n        cur=q.front();\r\n        q.pop();\r\n        for(int i=0;i<=cur.w1;i++){\r\n            for(int j=0;j<=cur.w2;j++){\r\n                if((j!=0 || i!=0) && ((i*50+j*100)<=k)){\r\n                    n1=p1-cur.w1+i;\r\n                    n2=p2-cur.w2+j;\r\n                    if(steps[n1][n2][1-cur.side]==-1){\r\n                        steps[n1][n2][1-cur.side]=1+steps[cur.w1][cur.w2][cur.side];\r\n                        ways[n1][n2][1-cur.side]=(ways[cur.w1][cur.w2][cur.side]*(ncr[cur.w1][i])*(ncr[cur.w2][j]))%mod;\r\n                        p.w1=n1;\r\n                        p.w2=n2;\r\n                        p.side=1-cur.side;\r\n                        q.push(p);\r\n                    }\r\n                    else if(steps[n1][n2][1-cur.side]==1+steps[cur.w1][cur.w2][cur.side]){\r\n                        ways[n1][n2][1-cur.side]=(ways[n1][n2][1-cur.side]+ways[cur.w1][cur.w2][cur.side]*(ncr[cur.w1][i])*(ncr[cur.w2][j]))%mod;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nint main()\r\n{\r\n    fio;\r\n    cin>>n>>k;\r\n    ll x;\r\n    p1=0;p2=0;\r\n    for(int i=1;i<=n;i++){\r\n        cin>>x;\r\n        if(x==50)\r\n            p1++;\r\n        else\r\n            p2++;\r\n    }\r\n    for(int i=0;i<=n;i++)\r\n        ncr[i][0]=1;\r\n    ncr[1][1]=1;\r\n    for(int i=2;i<=n;i++){\r\n        for(int j=1;j<=i;j++){\r\n            ncr[i][j]=(ncr[i-1][j]+ncr[i-1][j-1])%mod;\r\n        }\r\n    }\r\n    memset(steps, -1, sizeof(steps));\r\n    memset(ways, 0, sizeof(ways));\r\n    steps[p1][p2][0]=0;\r\n    ways[p1][p2][0]=1;\r\n    bfs();\r\n    cout<<steps[p1][p2][1]<<endl;\r\n    cout<<ways[p1][p2][1];\r\n}\r\n"
}