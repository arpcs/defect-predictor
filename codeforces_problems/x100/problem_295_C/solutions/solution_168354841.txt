{
    "id": 168354841,
    "contestId": 295,
    "creationTimeSeconds": 1660553054,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "bkifhr6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 44,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 24371200,
    "source": "#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize (\"unroll-loops\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n\n \n//opray\n \n#include <bits/stdc++.h>\n \n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/detail/standard_policies.hpp>\n \nusing namespace std;\nusing namespace __gnu_pbds;\n \ntemplate<typename T> using oset =\ntree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\ntemplate<typename T> using omultiset =\ntree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;\n \ntemplate<typename Key, typename T> using omap =\ntree<Key, T, less<Key>, rb_tree_tag, tree_order_statistics_node_update>;\n \n#define pb push_back\n#define pf push_front\n#define rb pop_back\n#define rf pop_front\n \n#define eb emplace_back\n\n#define fi first\n#define se second\n \n#define endl \"\\n\"\n \n#define pii pair<int, int>\n#define pff pair<double, double>\n\n//#define ll long long\n#define int long long\n#define double long double\n#define multiTest int test; cin >> test; while(test--)\n#define speed ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\n \nvoid toFile(string name) {\n\tfreopen((name + \".inp\").c_str(), \"r\", stdin);\n\tfreopen((name + \".out\").c_str(), \"w\", stdout);\n}\n \nint ceil(int a, int x) {\n\treturn (a % x == 0 ? a / x : a / x + 1);\n}\n\nconst double pi = 3.141592653589;\n\nconst int mod = 1e9 + 7;\nconst int inf = 0x3f3f3f3f3f3f3f3f;\n//const int inf = 0x3f3f3f3f;\n\nconst double eps = 1e-6;\n\nint dp[1005][55][55];\nint fact[405];\nint inv[405];\n\nint binpow(int n, int k) {\n\tif(k == 0) return 1;\n\tif(k == 1) return n;\n\tint h = binpow(n, k >> 1);\n\tif(k & 1) return h * h % mod * n % mod;\n\treturn h * h % mod;\n}\n\nint invmod(int n) {\n\treturn binpow(n, mod - 2);\n}\n\nint nCk(int n, int k) {\n\treturn fact[n] * inv[k] % mod * inv[n - k] % mod;\n}\n\nvoid solve() {\n\tint n, k;\n\tcin >> n >> k;\n\n\tfact[0] = inv[0] = 1;\n\tfor(int i = 1; i <= n; i++) {\n\t\tfact[i] = (fact[i - 1] * i) % mod;\n\t\tinv[i] = invmod(fact[i]);\n\t}\n\n\tint a = 0, b = 0;\n\n\tfor(int i = 0, x; i < n; i++) {\n\t\tcin >> x;\n\t\tif(x == 50) a++;\n\t\telse b++;\n\t}\n\tk /= 50;\n\n\tfor(int l = 0; l <= 1000; l++) {\n\t\tif(l == 0) {\n\t\t\tdp[l][a][b] = 1;\n\t\t} else {\n\t\t\tfor(int i = 0; i <= a; i++) {\n\t\t\t\tfor(int j = 0; j <= b; j++) {\n\t\t\t\t\tint c = a - i, d = b - j;\n\n\t\t\t\t\tif(l & 1) {\n\t\t\t\t\t\tfor(int o = 0; o <= c; o++) {\n\t\t\t\t\t\t\tfor(int p = 0; p <= d; p++) {\n\t\t\t\t\t\t\t\tif(o + p * 2 == 0 || o + p * 2 > k) continue;\n\t\t\t\t\t\t\t\t//cout << o << \" \" << p << endl;\n\t\t\t\t\t\t\t\tdp[l][i][j] = (dp[l][i][j] + dp[l - 1][i + o][j + p] * nCk(c, o) % mod * nCk(d, p) % mod) % mod;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor(int o = 0; o <= i; o++) {\n\t\t\t\t\t\t\tfor(int p = 0; p <= j; p++) {\n\t\t\t\t\t\t\t\tif(o + p * 2 == 0 || o + p * 2 > k) continue;\n\t\t\t\t\t\t\t\t//cout << o << \" \" << p << endl;\n\t\t\t\t\t\t\t\tdp[l][i][j] = (dp[l][i][j] + dp[l - 1][i - o][j - p] * nCk(i, o) % mod * nCk(j, p) % mod) % mod;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//cout << \"dp: \" << l << \" \" << i << \" \" << j << \" \" << dp[l][i][j] << endl;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(dp[l][0][0] > 0) break;\n\t}\n\tfor(int i = 1; i <= 1000; i++) {\n\t\tif(dp[i][0][0] > 0) {\n\t\t\tcout << i << endl << dp[i][0][0];\n\t\t\treturn; \n\t\t}\n\t}\n\tcout << -1 << endl << 0;\n}\n\nsigned main() {\n\tspeed;\n \n \t//toFile(\"a\");\n\n\t//multiTest\n\tsolve();\n \n\treturn 0;\t\n}\n\n  \t \t\t\t \t\t  \t\t \t \t\t\t \t  \t   \t\n\t \t\t \t \t\t\t\t \t   \t \t\t  \t   \t\t \t\t"
}