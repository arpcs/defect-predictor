{
    "id": 87965759,
    "contestId": 295,
    "creationTimeSeconds": 1595660755,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 295,
        "index": "C",
        "name": "Greg and Friends",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 295,
        "members": [
            {
                "handle": "nimom"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 35,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 13926400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef vector<int> vi;\r\ntypedef vector<ll> vl;\r\ntypedef pair<int,int> pii;\r\ntypedef pair<ll, ll> pll;\r\ntypedef vector<pii> vii;\r\ntypedef vector<pll> vll;\r\n\r\n#define PB push_back\r\n//#define PB emplace_back\r\n#define F first\r\n#define S second\r\n#define MP make_pair\r\n#define endl '\\n'\r\n\r\nconst double eps = 1e-9;\r\nconst int inf = 2000000000;\r\nconst ll infLL = 9000000000000000000;\r\n#define MOD 1000000007\r\n\r\n#define mem(a,b) memset(a, b, sizeof(a) )\r\n#define gcd(a,b) __gcd(a,b)\r\n#define lcm(a,b) (a*(b/gcd(a,b)))\r\n\r\n#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n#define fraction() cout.unsetf(ios::floatfield); cout.precision(10); cout.setf(ios::fixed,ios::floatfield);\r\n\r\n//\r\n//debug\r\ntemplate<typename F,typename S>ostream&operator<<(ostream&os,const pair<F,S>&p){return os<<\"(\"<<p.first<<\", \"<<p.second<<\")\";}\r\ntemplate<typename T>ostream&operator<<(ostream&os,const vector<T>&v){os<<\"{\";for(auto it=v.begin();it!=v.end();++it){if(it!=v.begin())os<<\", \";os<<*it;}return os<<\"}\";}\r\ntemplate<typename T>ostream&operator<<(ostream&os,const set<T>&v){os<<\"[\";for(auto it=v.begin();it!=v.end();++it){if(it!=v.begin())os<<\",\";os<<*it;}return os<<\"]\";}\r\ntemplate<typename T>ostream&operator<<(ostream&os,const multiset<T>&v) {os<<\"[\";for(auto it=v.begin();it!=v.end();++it){if(it!=v.begin())os<<\", \";os<<*it;}return os<<\"]\";}\r\ntemplate<typename F,typename S>ostream&operator<<(ostream&os,const map<F,S>&v){os<<\"[\";for(auto it=v.begin();it!=v.end();++it){if(it!=v.begin())os<<\", \";os<<it->first<<\" = \"<<it->second;}return os<<\"]\";}\r\n#define dbg(args...) do {cerr << #args << \" : \"; faltu(args); } while(0)\r\nvoid faltu(){cerr << endl;}\r\ntemplate<typename T>void faltu(T a[],int n){for(int i=0;i<n;++i)cerr<<a[i]<<' ';cerr<<endl;}\r\ntemplate<typename T,typename...hello>void faltu(T arg,const hello&...rest){cerr<<arg<<' ';faltu(rest...);}\r\n//#else\r\n//#define dbg(args...)\r\n\r\nint n, k;\r\nll dp1[55][55][105][2];\r\nll dp2[55][55][105][2];\r\nint a[55];\r\nint fifty, hundred;\r\nint koto;\r\nll ncr[55][55];\r\n\r\nll recur1( int f, int h, int depth, int rev )\r\n{\r\n\t//dbg(f, h, depth, rev);\r\n\tif( depth > 105 ) return inf;\r\n\tif( f == 0 && h == 0 ) return 0;\r\n\tif( dp1[f][h][depth][rev] != -1 ) return dp1[f][h][depth][rev];\r\n\tll ret = 0;\r\n\tif( rev ) {\r\n\t\tif(fifty-f) {\r\n\t\t\tif( k < fifty-f ) ret = inf;\r\n\t\t\telse ret = 1 + recur1( f+1, h, depth+1, rev^1 );\r\n\t\t}\r\n\t\tif(!(fifty-f) && (hundred-h)) {\r\n\t\t\tif( k < hundred-h ) ret = inf;\r\n\t\t\telse ret = 1 + recur1( f, h+1, depth+1, rev^1 );\r\n\t\t}\r\n\t\tdp1[f][h][depth][rev] = ret;\r\n\t\treturn ret;\r\n\t}\r\n\telse {\r\n\t\tret = inf;\r\n\t\tfor( int i = 0; i <= f; ++i ) {\r\n\t\t\tfor( int j = 0; j <= h; ++j ) {\r\n\t\t\t\tif( i == 0 && j == 0 ) continue;\r\n\t\t\t\tif( i*50 + j*100 > k ) continue;\r\n\t\t\t\tret = min( ret, 1+recur1( f-i, h-j, depth+1, rev^1 ) );\r\n\t\t\t}\r\n\t\t}\r\n\t\tdp1[f][h][depth][rev] = ret;\r\n\t\treturn ret;\r\n\t}\r\n}\r\n\r\nll recur2( int f, int h, int depth, int rev )\r\n{\r\n\t//dbg(f, h, depth, rev);\r\n\tif( depth == 0 ) {\r\n\t\tif( f+h ) return 0;\r\n\t\treturn 1;\r\n\t}\r\n\tif( dp2[f][h][depth][rev] != -1 ) return dp2[f][h][depth][rev];\r\n\tif( rev ) {\r\n\t\tll ret = 0;\r\n\t\tfor( int i = 0; i <= fifty-f; ++i ) {\r\n\t\t\tfor( int j = 0; j <= hundred-h; ++j ) {\r\n\t\t\t\tif( i == 0 && j == 0 ) continue;\r\n\t\t\t\tif( i*50 + j*100 > k ) continue;\r\n\t\t\t\tll temp = (ncr[fifty-f][i] * ncr[hundred-h][j]) % MOD;\r\n\t\t\t\tret = ( ret + temp*recur2( f+i, h+j, depth-1, rev^1 ) ) % MOD;\r\n\t\t\t}\r\n\t\t}\r\n\t\tdp2[f][h][depth][rev] = ret;\r\n\t\treturn ret;\r\n\t}\r\n\telse {\r\n\t\tll ret = 0;\r\n\t\tfor( int i = 0; i <= f; ++i ) {\r\n\t\t\tfor( int j = 0; j <= h; ++j ) {\r\n\t\t\t\tif( i == 0 && j == 0 ) continue;\r\n\t\t\t\tif( i*50 + j*100 > k ) continue;\r\n\t\t\t\tll temp = (ncr[f][i] * ncr[h][j]) % MOD;\r\n\t\t\t\tret = ( ret + temp*recur2( f-i, h-j, depth-1, rev^1 ) ) % MOD;\r\n\t\t\t}\r\n\t\t}\r\n\t\tdp2[f][h][depth][rev] = ret;\r\n\t\treturn ret;\r\n\t}\r\n}\r\n\r\nint main()\r\n{\r\n\toptimize();\r\n\tfor( int i = 0; i < 55; ++i ) ncr[i][0] = 1;\r\n\tfor( int i = 1; i < 55; ++i ) {\r\n\t\tfor( int j = 1; j <= i; ++j ) {\r\n\t\t\tncr[i][j] = ( ncr[i-1][j] + ncr[i-1][j-1] ) % MOD;\r\n\t\t}\r\n\t}\r\n\tmemset( dp1, -1, sizeof(dp1) );\r\n\tmemset( dp2, -1, sizeof(dp2) );\r\n\tcin >> n >> k;\r\n\tfor( int i = 0; i < n; ++i ) {\r\n\t\tcin >> a[i];\r\n\t\tif( a[i] == 50 ) ++fifty;\r\n\t\telse ++hundred;\r\n\t}\r\n\tkoto = recur1( fifty, hundred, 0, 0 );\r\n\tif( koto >= inf ) {\r\n\t\tcout << -1 << endl << 0 << endl;\r\n\t\treturn 0;\r\n\t}\r\n\tll cnt = recur2( fifty, hundred, koto, 0 );\r\n\tcout << koto << endl << cnt << endl;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
}