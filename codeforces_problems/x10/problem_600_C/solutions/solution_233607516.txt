{
    "id": 233607516,
    "contestId": 600,
    "creationTimeSeconds": 1700504867,
    "relativeTimeSeconds": 1667,
    "problem": {
        "contestId": 600,
        "index": "C",
        "name": "Make Palindrome",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 600,
        "members": [
            {
                "handle": "Shaurya_Bhalla"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1700503200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 307200,
    "source": "#include<bits/stdc++.h>\r\n\r\n// #include <ext/pb_ds/assoc_container.hpp>\r\n// #include <ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\n// using namespace __gnu_pbds;\r\n\r\n#define int long long   \r\n#define all(x) x.begin(), x.end()\r\n\r\n// typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> oset;\r\ntypedef unsigned long long ull;\r\ntypedef long double lld;\r\n\r\nconst int N=1e5+10, M=1e3+10, mod=1e9+7, inf = 4e18, moda = 998244353;\r\nconst lld pi = 3.141592653589793;\r\n\r\nint binexp(int a, int b, int mod){assert(b>=0);a=a%mod;int ans = 1;while(b){if(b&1){ans=ans*a%mod;}a=a*a%mod;b/=2;}return ans;}\r\nint lsq(int n){int l = 0, r = sqrt(n);while(r-l>1){int mid = (l+r)/2;if(mid*mid<n){l = mid;}else{r = mid;}}if(r*r<n){l = r;}return l;}\r\nint accurateFloor(int a, int b) {int val = a / b;while (val * b > a)val--;return val;}\r\n\r\n/*\r\n    TIME TO TROLL :P\r\n*/\r\n\r\nvoid solve(){\r\n    string s;\r\n    cin>>s;\r\n\r\n    int n = s.length();\r\n    vector<int> m(26, 0);\r\n    for(auto i: s) m[i-'a']++;\r\n    vector<int> c;\r\n    for(int i=0; i<26; i++){\r\n        if(m[i]&1) c.push_back(i);\r\n    }\r\n\r\n    int i = 0, j = c.size()-1;\r\n    while(i<j){\r\n        m[c[i]]++; m[c[j]]--;\r\n        i++; j--;\r\n    }\r\n\r\n    string t = s;\r\n    i = 0, j = n-1;\r\n    for(int c=0; c<26; c++){\r\n        for(int k=0; k<m[c] && i<=j; k+=2){\r\n            t[i] = c+'a';\r\n            t[j] = c+'a';\r\n            i++; j--;\r\n        }\r\n    }\r\n\r\n    cout<<t<<'\\n';\r\n}\r\n\r\nsigned main(){\r\n\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);  cout.tie(0);\r\n    \r\n    cout<<setprecision(15)<<fixed;\r\n\r\n    // freopen(\"input.txt\",\"r\",stdin);\r\n    // freopen(\"output.txt\",\"w\",stdout);\r\n    \r\n    // for(int i=1; i<=60; i++){\r\n    //     fact[i] = fact[i-1]*i%mod;\r\n    // }\r\n\r\n    int tt = 1;\r\n    // cin>>tt;\r\n\r\n    for(int i=1; i<=tt; i++){\r\n        // cout<<\"Case #\"<<i<<\": \";\r\n        solve();\r\n    }\r\n}"
}