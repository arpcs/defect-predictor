{
    "id": 233404772,
    "contestId": 600,
    "creationTimeSeconds": 1700387871,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 600,
        "index": "C",
        "name": "Make Palindrome",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 600,
        "members": [
            {
                "handle": "imrat_67"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1448636400
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n#define int long long\r\ntemplate<class T> using ordered_multiset = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\ntemplate<class T> using ordered_set = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n#define testcase cin>>t\r\n#define ntestcase t=1\r\n#define testcasen cin>>t; int caseno = 1\r\n#define fastio ios::sync_with_stdio(false); cin.tie(NULL)\r\n#define endl '\\n'\r\n#define yes cout<<\"YES\"<<endl\r\n#define no cout<<\"NO\"<<endl\r\n#define mn1 cout<<\"-1\"<<endl\r\n#define pi pair<int,int>\r\n#define linf 1ll<<62\r\n#define inf 1<<30\r\nint const mod = 1e9+7;\r\nint const N = 1e5+7;\r\n \r\nsigned main(){\r\n       fastio;\r\n       int t; ntestcase;\r\n       while(t--){\r\n           string s; cin>>s;\r\n           char c= 0, f;\r\n\r\n           map<char,int> mp;\r\n           for(auto &i: s){\r\n              mp[i]++;\r\n\r\n           }\r\n\r\n    // for(auto i: mp) cout<<i.first<<\" \"<<i.second<<endl;\r\n           \r\n           vector<pair<char,int>> vp;\r\n           for(auto i: mp) if(i.second&1) vp.emplace_back(i.first,i.second);\r\n\r\n           int i=0, j= vp.size()-1;\r\n           while(i<j){\r\n               vp[i].second++;\r\n               vp[j].second--;\r\n               mp[vp[i].first] = vp[i].second;\r\n               mp[vp[j].first] = vp[j].second;\r\n            i++; j--;\r\n            }\r\n           \r\n           for(auto i: mp) if(i.second&1) c = i.first;\r\n         //  for(auto i: mp) cout<<i.first<<\" \"<<i.second<<endl;\r\n        //   cout <<c<<endl;\r\n           ///\r\n           mp[c] --;\r\n           \r\n           for(auto &i: mp){\r\n            for(int j=0; j<i.second/2; j++){\r\n                cout<<i.first;\r\n            }\r\n            if(i.second!=1) i.second/=2;\r\n           }           \r\n           \r\n           if(c!=0)\r\n           cout<<c; \r\n           \r\n           string ss;\r\n           for(auto &i: mp){\r\n            for(int j=0; j<i.second; j++){\r\n                ss+=i.first;\r\n            }\r\n           }\r\n           reverse(ss.begin(),ss.end());\r\n           cout<<ss<<endl;\r\n       }\r\n}"
}