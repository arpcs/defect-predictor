{
    "id": 227637678,
    "contestId": 762,
    "creationTimeSeconds": 1697010638,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 762,
        "index": "E",
        "name": "Radio stations",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 762,
        "members": [
            {
                "handle": "n_r_q"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1485354900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 69,
    "timeConsumedMillis": 530,
    "memoryConsumedBytes": 5632000,
    "source": "// LUOGU_RID: 128729439\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define rep(i, l, r) for (signed i=(l); i<=(r); ++i)\n#define per(i, r, l) for (signed i=(r); i>=(l); --i)\n#define graph(p) for (int i=h[p]; i; i=edge[i].n)\n#define int long long\n\n#define eps 1e-7\n#define N 100005\n#define INF INT_MAX >> 1\n#define mod 998244353\n\n\ntemplate <typename Tp> inline void to_max (Tp &x, const Tp &y) { if (y > x) x = y; return ; }\ntemplate <typename Tp> inline void to_min (Tp &x, const Tp &y) { if (y < x) x = y; return ; }\ninline int lowbit (const int &x) { return x & (-x) ; }\n\n\nstruct node {\n    int x, l, r, q, len;\n    bool operator < (const node &A) const { return len > A.len ; }\n} a[N];\n\nint n, k, pos[N], c[N], ans;\nvoid Add (int x, int v) { for (; x<=n; x+=lowbit (x)) c[x] += v; return ; }\nint query (int x, int s = 0) { for (; x; x-=lowbit(x)) s += c[x]; return s; }\nbool cmp (node x, node y) { return x.q < y.q; }\n\nvoid cdq (int l, int r) {\n    if (l == r) return ;\n    int mid = (l + r) >> 1;\n    cdq (l, mid); cdq (mid+1, r);\n    int L = l, R = l-1;\n    rep (i, mid+1, r) {\n        for (; L <= mid && a[i].q - a[L].q > k; ++L) Add (a[L].x, -1);\n        while (R < mid && a[R+1].q - a[i].q <= k) Add (a[++R].x, 1);\n        ans += query (a[i].r) - query (a[i].l-1);\n    }\n    rep (i, L, R) Add (a[i].x, -1);\n    sort (a+l, a+r+1, cmp); return ;\n}\n\nsigned main () {\n    scanf (\"%lld%lld\", &n, &k);\n    rep (i, 1, n) scanf (\"%lld%lld%lld\", &a[i].x, &a[i].len, &a[i].q), pos[i] = a[i].x;\n    sort (pos+1, pos+n+1); int m = unique (pos+1, pos+n+1) - pos - 1;\n    rep (i, 1, n) {\n        a[i].l = lower_bound (pos+1, pos+m+1, a[i].x-a[i].len) - pos;\n        a[i].r = upper_bound (pos+1, pos+m+1, a[i].x+a[i].len) - pos - 1;\n        a[i].x = lower_bound (pos+1, pos+m+1, a[i].x) - pos;\n    }\n    sort (a+1, a+n+1); cdq (1, n);\n    printf (\"%lld\\n\", ans);\n    return 0;\n}"
}