{
    "id": 222714525,
    "contestId": 762,
    "creationTimeSeconds": 1694348513,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 762,
        "index": "E",
        "name": "Radio stations",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 762,
        "members": [
            {
                "handle": "fanghaoyu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1485354900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 69,
    "timeConsumedMillis": 1045,
    "memoryConsumedBytes": 62156800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 1e5 + 5,TOP = 1e9;\r\nstruct Seg{\r\n\tint a[N * 50],lc[N * 50],rc[N * 50],tot = 0,root[N];\r\n\tinline void pushup(int pos){a[pos] = a[lc[pos]] + a[rc[pos]];}\r\n\tinline void modify(int l,int r,int x,int k,int pos)\r\n\t{\r\n\t\tif(l == r){a[pos] += k;return;}\r\n\t\tint mid = (l + r) >> 1;\r\n\t\tif(x <= mid) \r\n\t\t{\r\n\t\t\tif(!lc[pos]) lc[pos] = ++tot;\r\n\t\t\tmodify(l,mid,x,k,lc[pos]);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(!rc[pos]) rc[pos] = ++tot;\r\n\t\t\tmodify(mid + 1,r,x,k,rc[pos]);\r\n\t\t}\r\n\t\tpushup(pos);\r\n\t} \r\n\tinline int query(int l,int r,int L,int R,int pos)\r\n\t{\r\n\t\tif(!pos) return 0;\r\n\t\tif(L <= l && r <= R) return a[pos];\r\n\t\tint mid = (l + r) >> 1,ret = 0;\r\n\t\tif(L <= mid) ret += query(l,mid,L,R,lc[pos]);\r\n\t\tif(R > mid) ret += query(mid + 1,r,L,R,rc[pos]);\r\n\t\treturn ret;\r\n\t}\r\n}t;\r\nstruct Robot{\r\n\tint x,r,q;\r\n}a[N];\r\nint n,k,val[N],cnt = 0;\r\ninline bool cmp(Robot p,Robot b){return p.r > b.r;}\r\nint main()\r\n{\r\n\tcin>>n>>k;\r\n\tfor(int i = 1;i <= n;i++) cin>>a[i].x>>a[i].r>>a[i].q;\r\n\tsort(a + 1,a + n + 1,cmp);\r\n\tlong long ans = 0;\r\n\tfor(int i = 1;i <= n;i++) val[++cnt] = a[i].q;\r\n\tsort(val + 1,val + cnt + 1);\r\n\tcnt = unique(val + 1,val + cnt + 1) - (val + 1);\r\n\tfor(int i = 1;i <= n;i++) a[i].q = lower_bound(val + 1,val + cnt + 1,a[i].q) - val;\r\n\tfor(int i = 1;i <= cnt;i++) t.root[i] = i;\r\n\tt.tot = cnt;\r\n\tfor(int i = 1;i <= n;i++)\r\n\t{\r\n\t\tint nl = a[i].x - a[i].r,nr = a[i].x + a[i].r,lb,rb;\r\n\t\tlb = lower_bound(val + 1,val + cnt + 1,val[a[i].q] - k) - val;\r\n\t\trb = upper_bound(val + 1,val + cnt + 1,val[a[i].q] + k) - val - 1;\r\n\t\tfor(int j = lb;j <= rb;j++) ans += t.query(0,TOP,nl,nr,t.root[j]);\r\n\t\tt.modify(0,TOP,a[i].x,1,t.root[a[i].q]);\r\n\t}\r\n\tcout<<ans;\r\n\treturn 0;\r\n}"
}