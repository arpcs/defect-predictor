{
    "id": 231079156,
    "contestId": 762,
    "creationTimeSeconds": 1698996275,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 762,
        "index": "E",
        "name": "Radio stations",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 762,
        "members": [
            {
                "handle": "mphillotry"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1485354900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 45,
    "timeConsumedMillis": 1294,
    "memoryConsumedBytes": 16998400,
    "source": "#include <bits/stdc++.h>\n#define A first\n#define B second\n#define vc vector\n#define pb push_back\n#define endl '\\n'\nusing namespace std;\nusing ll = long long; using ld = long double;\nusing vi = vc<int>; using vll = vc<ll>;\nusing si = set<int>; using sll = set<ll>;\nusing pi = pair<int, int>; using pll = pair<ll, ll>;\nusing qi = queue<int>; using mi = map<int, int>;\n\ntemplate<class T> bool ckmin(T &a, const T &b) { return b < a ? a = b, 1 : 0; }\ntemplate<class T> bool ckmax(T &a, const T &b) { return a < b ? a = b, 1 : 0; }\n\nconstexpr int inf = 1e9 + 7;\nconstexpr int mod = inf;\nconstexpr ll infll = 0x3f3f3f3f3f3f3f3fll;\n\nusing a3 = array<int, 3>;\n\nint mid(int l, int r) {\n  return l + (r - l) / 2;\n}\n\ntemplate<typename T, size_t N>\nstruct sgt {\n  vc<T> val;\n  function<T(const T&, const T&)> merge, update;\n  function<T()> identity;\n\n  sgt(function<T(const T&, const T&)> combine) : \n      val(4 * N + 5), \n      merge(combine), \n      update(combine) {\n    identity = []() { return T(); };\n  }\n\n  sgt(function<T(const T&, const T&)> combine, \n      function<T()> identity) : \n      val(4 * N + 5), \n      merge(combine), \n      update(combine), \n      identity(identity) {}\n\n  sgt(function<T(const T&, const T&)> merge, \n      function<T(const T&, const T&)> update) : \n      val(4 * N + 5), \n      merge(merge), \n      update(update) {\n    identity = []() { return T(); };\n  }\n\n  sgt(const vc<T> &a, \n      function<T(const T&, const T&)> combine) : \n      val(4 * N + 5), \n      merge(combine), \n      update(combine) {\n    identity = []() { return T(); };\n    build(a);\n  }\n\n  sgt(const vc<T> &a, \n      function<T(const T&, const T&)> combine, \n      function<T()> identity) : \n      val(4 * N + 5), \n      merge(combine), \n      update(combine), \n      identity(identity) {\n    build(a);\n  }\n\n  sgt(const vc<T> &a, \n      function<T(const T&, const T&)> merge, \n      function<T(const T&, const T&)> update) : \n      val(4 * N + 5), \n      merge(merge), \n      update(update) {\n    identity = []() { return T(); };\n    build(a);\n  }\n\n  sgt(const vc<T> &a, \n      function<T(const T&, const T&)> merge, \n      function<T(const T&, const T&)> update, \n      function<T()> identity) : \n      val(4 * N + 5), \n      merge(merge), \n      update(update), \n      identity(identity){\n    identity = []() { return T(); };\n    build(a);\n  }\n\n  void pull(int u) {\n    val[u] = merge(val[u << 1], val[u << 1 | 1]);\n  }\n\n  void build(const vc<T> &a, int u = 1, int l = 0, int r = N - 1) {\n    if (l >= a.size()) return;\n    if (l == r) val[u] = a[l];\n    else {\n      int m = mid(l, r);\n      build(a, u << 1 , l, m);\n      build(a, u << 1 | 1, m + 1, r);\n      pull(u);\n    }\n  }\n\n  void upd(int i, const T &x, int u = 1, int l = 0, int r = N - 1) {\n    if (l == r) val[u] = update(val[u], x);\n    else {\n      int m = mid(l, r);\n      if (i <= m) upd(i, x, u << 1, l, m);\n      else upd(i, x, u << 1 | 1, m + 1, r);\n      pull(u);\n    }\n  }\n\n  T qry(int i, int j, int u = 1, int l = 0, int r = N - 1) {\n    if (j < l || r < i) return T();\n    if (i <= l && r <= j) return val[u];\n    int m = mid(l, r);\n    return merge(qry(i, j, u << 1, l, m), qry(i, j, u << 1 | 1, m + 1, r));\n  }\n};\n\n// editorial sol\nint main() {\n  cin.tie(0) -> sync_with_stdio(0);\n\n  int n, k; cin >> n >> k;\n  vc<vc<pi>> st(10005);\n  for (int i = 0; i < n; ++i) {\n    int x, r, f; cin >> x >> r >> f;\n    st[f].pb({ x, r });\n  }\n  sgt<int, 20005> t([](auto a, auto b) { return a + b; });\n  ll ret = 0;\n  for (int i = 1; i <= 10000; ++i) {\n    if (!st[i].size()) continue;\n    vc<a3> e;\n    for (auto[x, r] : st[i]) e.pb({ x, 1, r });\n    for (int j = max(0, i - k); j <= min(i + k, 10000); ++j) {\n      for (auto [x, r] : st[j]) e.pb({ x - r, 0, x });\n    }\n    si xs;\n    mi comp;\n    int id = 0;\n    for (auto [x, tp, v] : e) {\n      if (tp) {\n        xs.insert(x);\n        xs.insert(x + v);\n      } else xs.insert(v);\n    }\n    for (int x : xs) comp[x] = id++;\n    sort(e.begin(), e.end());\n    for (auto [x, tp, v] : e) {\n      if (tp) ret += t.qry(comp[x] + 1, comp[x + v]);\n      else t.upd(comp[v], 1);\n    }\n    for (auto [x, tp, v] : e) if (!tp) t.upd(comp[v], -1);\n  }\n  cout << ret << endl;\n}\n"
}