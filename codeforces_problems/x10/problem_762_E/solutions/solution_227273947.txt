{
    "id": 227273947,
    "contestId": 762,
    "creationTimeSeconds": 1696827623,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 762,
        "index": "E",
        "name": "Radio stations",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 762,
        "members": [
            {
                "handle": "ERoslon"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1485354900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// LUOGU_RID: 128384071\n//#include<cstdio>\r\n//#include<algorithm>\r\n//using namespace std;\r\n//\r\n//const int MAXN = 100005;\r\n//\r\n//int n, K, tot;\r\n//struct Sta {\r\n//\tint x, r, f;\r\n//}a[MAXN];\r\n//inline bool cmpr(const Sta &x, const Sta &y) { return x.r < y.r; }\r\n//inline bool cmpf(const Sta &x, const Sta &y) { return x.f < y.f; }\r\n//namespace BIT {\r\n//\tint tr[MAXN], MX;\r\n//\tinline void Init(int x) {\r\n//\t\tMX = x;\r\n//\t\tfor (int i = 1; i <= n; ++ i) tr[i] = 0;\r\n//\t}\r\n//\tinline int lowbit(int x) { return x & (-x); }\r\n//\tinline void add(int x, int p) {\r\n//\t\twhile (p <= MX) tr[p] += x, p += lowbit(p);\r\n//\t}\r\n//\tinline int query(int p) {\r\n//\t\tint res = 0;\r\n//\t\twhile (p) res += tr[p], p -= lowbit(p);\r\n//\t\treturn res;\r\n//\t}\r\n//}\r\n//\r\n//inline void CDQ(int l, int r) {\r\n//\tif (l >= r) return;\r\n//\tint mid = (l + r) >> 1;\r\n//\tsort(a + 1, a + n + 1, cmpr);\r\n//\tCDQ(l, mid);\r\n//\tsort(a + l, a + mid + 1, cmpf);\r\n//\tsort(a + mid + 1, a + r + 1, cmpf);\r\n//\tint il = l, ir = l - 1;\r\n//\tfor (int j = mid + 1; j <= r; ++ j) {\r\n//\t\twhile (ir < mid && a[ir + 1].f - a[j].f <= K) BIT::add(a[++ ir].x, 1);\r\n//\t\twhile (il <= mid && a[j].f - a[il].f > K) BIT::add(a[il ++].x, -1);\r\n//\t\ttot += BIT::query(a[j].x + a[j].r) - BIT::query(a[j].x - a[j].r - 1);\r\n//\t}\r\n//\tfor (int i = il; i <= ir; ++ i) BIT::add(a[i].x, -1);\r\n//\tCDQ(mid + 1, r);\r\n//}\r\n//\r\n//int main()\r\n//{\r\n//\tscanf (\"%d%d\", &n, &K);\r\n//\tfor (int i = 1; i <= n; ++ i)\r\n//\t\tscanf (\"%d%d%d\", &a[i].x, &a[i].r, &a[i].f);\r\n//\tBIT::Init(n);\r\n//\tCDQ(1, n);\r\n//\treturn printf (\"%d\\n\", tot), 0;\r\n//}"
}