{
    "id": 223985255,
    "contestId": 762,
    "creationTimeSeconds": 1695105497,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 762,
        "index": "E",
        "name": "Radio stations",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 762,
        "members": [
            {
                "handle": "illume2021"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1485354900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 69,
    "timeConsumedMillis": 889,
    "memoryConsumedBytes": 104448000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define int ll \r\n\r\nint lsh[200005];\r\nint len=0;\r\n\r\nstruct ss{\r\n\tint x,r,q;\r\n}a[200005];\r\nbool cmp(ss x,ss y){\r\n\tif(x.r==y.r)\r\n\t\treturn x.x<y.x;\r\n\treturn x.r>y.r;\r\n}\r\nint n,k;\r\n\r\nstruct zz{\r\n\tint l,r;\r\n\tint val;\r\n};\r\n\r\nint tot=0;\r\nzz t[4000005];\r\nint rt[200005];\r\nint New_Node(){\r\n\ttot++;\r\n\tt[tot].l=t[tot].r=t[tot].val=0;\r\n\treturn tot;\r\n}\t\r\nstruct Tree{\r\n\t#define lc t[p].l\r\n\t#define rc t[p].r\r\n\tvoid Push_up(int p){\r\n\t\tint now=0;\r\n\t\tif(lc)\tnow+=t[lc].val;\r\n\t\tif(rc) \tnow+=t[rc].val;\r\n\t\tt[p].val=now;\r\n\t}\r\n\tvoid Change_Tree(int p,int l,int r,int x){\r\n\t\tif(l==r){\r\n\t\t\tt[p].val++;\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tint mid=(l+r)>>1;\r\n\t\tif(x<=mid){\r\n\t\t\tif(!lc)\tlc=New_Node();\r\n\t\t\tChange_Tree(lc,l,mid,x);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tif(!rc)\trc=New_Node();\r\n\t\t\tChange_Tree(rc,mid+1,r,x);\r\n\t\t}\r\n\t\tPush_up(p);\r\n\t}\r\n\tint Find_Tree(int p,int l,int r,int L,int R){\r\n\t\tif(L<=l&&r<=R){\r\n\t\t\treturn t[p].val;\r\n\t\t}\r\n\t\tint mid=(l+r)>>1;\r\n\t\tint now=0;\r\n\t\tif(L<=mid&&lc)\r\n\t\t\tnow+=Find_Tree(lc,l,mid,L,R);\r\n\t\tif(mid+1<=R&&rc)\r\n\t\t\tnow+=Find_Tree(rc,mid+1,r,L,R);\r\n\t\treturn now;\r\n\t} \r\n}T[200005];\r\n\r\nsigned main(){\r\n\tint Max=0,Min=0x3f3f3f3f;\r\n\tcin>>n>>k;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tscanf(\"%lld%lld%lld\",&a[i].x,&a[i].r,&a[i].q);\r\n\t\tlsh[++len]=a[i].q;\r\n\t\tMax=max(Max,a[i].x+a[i].r);\r\n\t\tMin=min(Min,a[i].x-a[i].r);\r\n\t}\t\r\n\tsort(a+1,a+n+1,cmp);\r\n\tsort(lsh+1,lsh+len+1);\r\n\tlen=unique(lsh+1,lsh+len+1)-(lsh+1);\r\n\tfor(int i=1;i<=n;i++)\r\n\t\trt[i]=New_Node();\r\n\tint ans=0;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tfor(int j=a[i].q-k;j<=a[i].q+k;j++){\r\n\t\t\tint now=lower_bound(lsh+1,lsh+len+1,j)-lsh;\r\n\t\t\tif(lsh[now]!=j)\r\n\t\t\t\tcontinue;\r\n\t\t\tans+=T[now].Find_Tree(rt[now],Min,Max,a[i].x-a[i].r,a[i].x+a[i].r);\r\n\t\t}\r\n\t\tint now=lower_bound(lsh+1,lsh+len+1,a[i].q)-lsh;\r\n\t\tT[now].Change_Tree(rt[now],Min,Max,a[i].x); \r\n\t}\r\n\tcout<<ans<<endl;\r\n\treturn 0;\r\n}"
}