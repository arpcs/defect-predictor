{
    "id": 216885008,
    "contestId": 1584,
    "creationTimeSeconds": 1690997185,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1584,
        "index": "E",
        "name": "Game with Stones",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "data structures",
            "games",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1584,
        "members": [
            {
                "handle": "indeec"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1636869900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 264,
    "memoryConsumedBytes": 33792000,
    "source": "#include <bits/stdc++.h>\r\n#include <iostream>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double ld;\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\ntypedef tree<ll,null_type,less_equal<ll>,rb_tree_tag,tree_order_statistics_node_update> order_set;\r\n \r\nconst int mxN = 5e5+5;\r\nconst int mod = 998244353;\r\nconst int mxlogN = 20;\r\nconst int mxK = 26;\r\n \r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n \r\n    int t; cin >> t;\r\n    while(t--)\r\n    {\r\n        int n; cin >> n;\r\n        ll ans = 0;\r\n        multiset<ll> ms;\r\n        map<ll, ll> mp;\r\n        bool negative = 0;\r\n        ll add = 0;\r\n        for(int i = 0; i < n; i++)\r\n        {\r\n            ll x; cin >> x;\r\n            if(x==0) ans++;\r\n            ll y = (x-add)*(negative?-1:1);\r\n            if(negative) while(ms.size() && *ms.begin() < y)\r\n            {\r\n                mp[*ms.begin()]--;\r\n                ms.erase(ms.begin());\r\n            }\r\n            else while(ms.size() && (*(--ms.end())) > y)\r\n            {\r\n                mp[*(--ms.end())]--;\r\n                ms.erase(--ms.end());\r\n            }\r\n            ans += mp[y];\r\n            negative ^= 1;\r\n            add = -add+x;\r\n            ms.insert((x-add)*(negative?-1:1));\r\n            mp[(x-add)*(negative?-1:1)]++;\r\n        }\r\n        cout << ans << \"\\n\";\r\n    }\r\n}"
}