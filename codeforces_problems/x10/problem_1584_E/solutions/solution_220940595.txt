{
    "id": 220940595,
    "contestId": 1584,
    "creationTimeSeconds": 1693295880,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1584,
        "index": "E",
        "name": "Game with Stones",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "data structures",
            "games",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1584,
        "members": [
            {
                "handle": "Niolle_Semis"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1636869900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 11161600,
    "source": "// LUOGU_RID: 123212705\n#include<bits/stdc++.h>\n#define rep(i,a,b) for(int i=a;i<=b;i++)\n#define dwn(i,a,b) for(int i=a;i>=b;i--)\n#define lowbit(x) (x&(-x))\n#define MAXN 252501\nusing namespace std;\ntypedef long long ll;\ninline int read(){\n\tint x=0,f=1;\n\tchar ch=getchar();\n\twhile(ch>'9' || ch<'0'){if(ch=='-') f=-1; ch=getchar();}\n\twhile('0'<=ch && ch<='9') x=(x<<1)+(x<<3)+ch-'0',ch=getchar();\n\treturn x*f;\n}\nint n,t,to[MAXN<<1],nxt[MAXN<<1],fir[MAXN],tot,res1,res2;\nmultiset<int> Q[MAXN],P;\nmultiset<int> :: iterator its; \nvoid clr(){\n\ttot=0;\n\tmemset(fir,0,sizeof(fir));\n\tP.clear();\n\trep(i,1,n) Q[i].clear();\n}\nvoid ade(int x,int y){\n\tto[++tot]=y;\n\tnxt[tot]=fir[x];\n\tfir[x]=tot;\n}\nint get_max(int x){\n\tif(!Q[x].size()) return 1;\n\treturn (*Q[x].begin())+1;\n}\nvoid pre(int x,int y){\n\tfor(int k=fir[x];k;k=nxt[k]){\n\t\tif(to[k]==y) continue;\n\t\tpre(to[k],x);\n\t\tQ[x].insert(get_max(to[k]));\n\t}\n\tif(Q[x].size()>=2) P.insert(*next(Q[x].begin()));//,cout<<\"??\"<<x<<endl;\n}\nvoid add(int x,int y){\n\t\n\tif(Q[x].size()>=2) P.erase(P.find(*next(Q[x].begin())));\n\tQ[x].insert(y);\n\tif(Q[x].size()>=2) P.insert(*next(Q[x].begin()));//,cout<<\"AD:\"<<x<<\" \"<<*next(Q[x].begin())<<endl;\n}\nvoid del(int x,int y){\n//\tcout<<\"LALA\"<<Q[x].size()<<endl;\n//\tif(Q[x].size()>=2) cout<<\"GG:\"<<*next(Q[x].begin());\n\tif(Q[x].size()>=2) P.erase(P.find(*next(Q[x].begin())));\n\tQ[x].erase(Q[x].find(y));\n\tif(Q[x].size()>=2) P.insert(*next(Q[x].begin()));\n}\nvoid Dp(int x,int y){//\u4eceP\u4e2d\u5220\u9664\u5f53\u524d\u7684\u5f71\u54cd\uff0c\u4eceQ[x]\u4e2d\u5220\u9664\u5f53\u524d\u7684\u5f71\u54cd \n    \n    int Ans;\n\tif(!P.empty()) Ans=min(*P.begin(),get_max(x));\n    else Ans=get_max(x);\n//\tcout<<\"Dp:\"<<x<<\" \"<<Ans<<endl;\n\tif(Ans>res2) res1=x,res2=Ans;\n//\tcout<<\"DP:\"<<x<<\" \"<<y<<endl;\n\tfor(int k=fir[x];k;k=nxt[k]){\n\t\tif(to[k]==y) continue;\n\t\tdel(x,get_max(to[k]));\n//\t\tcout<<x<<\" \"<<to[k]<<endl;\n\t\tadd(to[k],get_max(x));\n\t\tDp(to[k],x);\n\t\tdel(to[k],get_max(x));\n\t\tadd(x,get_max(to[k]));\n\t}\n}\nint main(){\n    t=read();\n    while(t--){\n    \tn=read();\n    \tclr();\n    \trep(i,1,n-1){\n    \t\tint x=read(),y=read();\n    \t\tade(x,y); ade(y,x);\n\t\t}\n\t\tpre(1,0);\n\t\tres1=1; res2=min(*P.begin(),get_max(1));\n\t\tDp(1,0);\n\t\tprintf(\"%d\\n\",res2);\n\t}\n\treturn 0;\n}\n"
}