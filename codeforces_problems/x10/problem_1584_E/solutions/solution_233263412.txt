{
    "id": 233263412,
    "contestId": 1584,
    "creationTimeSeconds": 1700294894,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1584,
        "index": "E",
        "name": "Game with Stones",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "data structures",
            "games",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1584,
        "members": [
            {
                "handle": "undefina"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1636869900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 38604800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n//\r\n#define IOS ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n#define ios ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n#define qwq ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n#define QWQ ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n#define jump ;return 0;\r\n#define space \" \"\r\nusing mainint=signed;using ll=long long;using ull=unsigned long long;using ld=long double;template<class T>void gmin(T &a,T b){if(a>b) a=b;}template<class T>void gmax(T &a,T b){if(a<b) a=b;}using pii=pair<int,int>;using pll=pair<ll,ll>;using pil=pair<int,ll>;using Pli=pair<ll,int>;const int INF=0x3f3f3f3f;const ll INFINF=0x3f3f3f3f3f3f3f3f;\r\n//dist(rnd)\r\n//\r\nmap<ll,ll> mp1,mp2;\r\nmainint main(){\r\n\tqwq\r\n\tint n,t;\r\n\tcin>>t;\r\n\twhile(t--){\r\n\t\tcin>>n;\r\n\t\tmp1.clear();\r\n\t\tmp2.clear();\r\n\t\tll ans=0,lazy1=0,lazy2=0;;\r\n\t\tfor(ll i=1,temp;i<=n;++i){\r\n\t\t\tcin>>temp;\r\n\t\t\tans+=(temp==0);\r\n\t\t\tif(i&1){\r\n\t\t\t\tans+=mp1[-temp-lazy1];\r\n\t\t\t\tmp1[-lazy1]++;\r\n\t\t\t\tmp2[-lazy2]++;\r\n\t\t\t\tlazy1+=temp;\r\n\t\t\t\tlazy2-=temp;\r\n\t\t\t\twhile(mp1.size() && mp1.begin()->first<-lazy1) mp1.erase(mp1.begin());\r\n\t\t\t\twhile(mp2.size() && (--mp2.end())->first>-lazy2) mp2.erase(--mp2.end());\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tans+=mp2[-temp-lazy2];\r\n\t\t\t\tmp1[-lazy1]++;\r\n\t\t\t\tmp2[-lazy2]++;\r\n\t\t\t\tlazy2+=temp;\r\n\t\t\t\tlazy1-=temp;\r\n\t\t\t\twhile(mp2.size() && mp2.begin()->first<-lazy2) mp2.erase(mp2.begin());\r\n\t\t\t\twhile(mp1.size() && (--mp1.end())->first>-lazy1) mp1.erase(--mp1.end());\r\n\t\t\t}\r\n\t\t}\r\n\t\tcout<<ans<<'\\n';\r\n\t}\r\n}"
}