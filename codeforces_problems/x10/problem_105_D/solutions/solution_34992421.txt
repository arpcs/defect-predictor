{
    "id": 34992421,
    "contestId": 105,
    "creationTimeSeconds": 1517991459,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 105,
        "index": "D",
        "name": "Entertaining Geodetics",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2700,
        "tags": [
            "brute force",
            "dsu",
            "implementation"
        ]
    },
    "author": {
        "contestId": 105,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1313247600
    },
    "programmingLanguage": "GNU C++",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 13824000,
    "source": "#include<iostream> \n#include<cstdio> \n#include<cstring> \n#include<algorithm> \n#include<vector> \n#include<set> \n#include<cmath>\n#include<bitset>\n#include<map>\n#include<vector>\n#include<queue>\n#define pb push_back\n#define mp make_pair\nusing namespace std;\nconst int N=600+5;\ntemplate <class T> \ninline void getint(T&num){ \n    char c;bool flag=0;num=0; \n    while((c=getchar())<'0'||c>'9')if(c=='-')flag=1; \n    while(c>='0'&&c<='9'){num=num*10+c-48;c=getchar();} \n    if(flag) num=-num; \n}\nconst int d[4][2]={{-1,0},{0,1},{1,0},{0,-1}};\nstruct Point{int x,y,dis;}St;\nint n,m,tot,lucid,col[N][N],geo[N][N],fa[N],siz[N],fact[N];\nmap<int,int> C;\nmap<pair<int,int>,int> id;\nvector<Point> poi[N*N*2];\nqueue<Point> q;\ninline int getcolor(int c){\n\treturn C.count(c)?C[c]:C[c]=++tot;\n}\nbool cmp(Point a,Point b){\n\treturn a.dis<b.dis;\n}\nint root(int x){\n\tif(!fa[x]) return x;\n\treturn fa[x]=root(fa[x]);\n}\nvoid merge(int a,int b){ // col_a -> col_b\n\tint ra=root(a),rb=root(b);\n\tif(ra!=rb)\n\t\tsiz[rb]+=siz[ra],fa[ra]=rb;\n\tfact[rb]=b;\n}\ninline int getd(Point o,Point to){\n\treturn id[mp(to.x-o.x,to.y-o.y)];\n\t//return 0;\n}\ninline void Init(){\n\tint x=0,y=0,num=0,ed=2*max(n+2,m+2)+1;\n\tid[mp(x,y)]=++num;\n\tfor(int i=1,f=0;i<=ed;i++,(f+=1)%=4){\n\t\tint step=(i+1)>>1;\n\t\tfor(int j=1;j<=step;j++){\n\t\t\tx+=d[f][0],y+=d[f][1];\n\t\t\tid[mp(x,y)]=++num;\n\t\t}\n\t}\n}\nint main(){\n\tgetint(n),getint(m);\n\tInit(),tot=lucid=1;\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tgetint(col[i][j]);\n\t\t\tif(!col[i][j]) col[i][j]=lucid;\n\t\t\telse col[i][j]=getcolor(col[i][j]);\n\t\t\tsiz[col[i][j]]++;\n\t\t}\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tgetint(geo[i][j]);\n\t\t\tif(geo[i][j]==-1) continue ;\n\t\t\telse if(!geo[i][j]) geo[i][j]=lucid;\n\t\t\telse geo[i][j]=getcolor(geo[i][j]);\n\t\t}\n\tfor(int i=1;i<=tot;i++) fact[i]=i;\n\tgetint(St.x),getint(St.y);\n\tq.push(St);\n\tfor(int i=1;i<=n;i++)\n\t\tfor(int j=1;j<=m;j++){\n\t\t\tif(i==St.x&&j==St.y) continue ;\n\t\t\tif(geo[i][j]==-1) continue ;\n\t\t\tpoi[col[i][j]].pb((Point){i,j});\n\t\t}\n\t//if(id.count(mp(-4,-2)))\n\t\t//printf(\"%d\\n\",id[mp(-4,-2)]);\n\tint ans=0;\n\twhile(!q.empty()){\n\t\tPoint p=q.front();q.pop();\n\t\t \n\t\tint c=geo[p.x][p.y];\n\t\tif(c==-1) continue ;\n\t\tgeo[p.x][p.y]=-1;\n\t\t \n\t\tint last=fact[root(col[p.x][p.y])];\n\t\tif(last==root(lucid)||last==c)\n\t\t\tcontinue ;\n\t\tans+=siz[root(last)];\n\t\tprintf(\"%d %d %d\\n\",p.x,p.y,ans);\n\t\tmerge(last,c);\n\t\tint cnt=poi[last].size();\n\t\tfor(int i=0;i<cnt;i++)\n\t\t\tpoi[last][i].dis=getd(p,poi[last][i]);\n\t\tsort(poi[last].begin(),poi[last].end(),cmp);\n\t\tfor(int i=0;i<cnt;i++)\n\t\t\tq.push(poi[last][i]);\n\t}\n\tprintf(\"%d\\n\",ans);\n}\n"
}