{
    "id": 232142056,
    "contestId": 650,
    "creationTimeSeconds": 1699553997,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 650,
        "index": "A",
        "name": "Watchmen",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1400,
        "tags": [
            "data structures",
            "geometry",
            "math"
        ]
    },
    "author": {
        "contestId": 650,
        "members": [
            {
                "handle": "abhishekyadav.MNNIT"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1457342700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long int ll;\r\n\r\n// BINARY EXPONENTIATION CODE\t\r\n\r\n// long long binpow(long long a, long long b, long long m) {\r\n//     a %= m;\r\n//     long long res = 1;\r\n//     while (b > 0) {\r\n//         if (b & 1)\r\n//             res = res * a % m;\r\n//         a = a * a % m;\r\n//         b >>= 1;\r\n//     }\r\n//     return res;\r\n// }\r\n\r\n// SEIVE CODE\r\n\r\n// void SieveOfEratosthenes(int n) \r\n// { \r\n\r\n//     bool prime[n + 1]; \r\n//     memset(prime, true, sizeof(prime)); \r\n  \r\n//     for (int p = 2; p * p <= n; p++) { \r\n//         // If prime[p] is not changed, then it is a prime \r\n//         if (prime[p] == true) { \r\n          \r\n//             for (int i = p * p; i <= n; i += p) \r\n//                 prime[i] = false; \r\n//         } \r\n//     } \r\n  \r\n//     // Print all prime numbers \r\n//     for (int p = 2; p <= n; p++) \r\n//         if (prime[p]) \r\n//             v.push_back(p);\r\n// } \r\n\r\n// DSU CODE\r\n// const int N = 500 * 1000 + 13;\r\n\r\n\r\n// int rk[N], p[N];\r\n\r\n// int getP(int a){\r\n// \treturn (a == p[a] ? a : p[a] = getP(p[a]));\r\n// }\r\n\r\n// void unite(int a, int b){\r\n// \ta = getP(a), b = getP(b);\r\n// \tif (a == b) return;\r\n// \tif (rk[a] < rk[b]) swap(a, b);\r\n// \tp[b] = a;\r\n// \trk[a] += rk[b];\r\n// }\r\n\r\nvoid solve()\r\n{\r\n    ll n;\r\n    cin>>n;\r\n    vector<vector<ll>> v(n,vector<ll> (2));\r\n    map<int,int> mp1,mp2;\r\n    set<int> st1,st2;\r\n    for(int i = 0;i < n;i++){\r\n        int x,y;\r\n        cin>>x>>y;\r\n        v[i][0] = x;\r\n        v[i][1] = y;\r\n        mp1[x]++;\r\n        mp2[y]++;\r\n        st1.insert(x);\r\n        st2.insert(y);\r\n    }\r\n    ll ans = 0;\r\n    for(auto it: st1){\r\n        if(mp1[it] > 1){\r\n            ans += mp1[it]*(mp1[it]-1)/2;\r\n        }\r\n    }\r\n    for(auto it: st2){\r\n        if(mp2[it] > 1){\r\n            ans += mp2[it]*(mp2[it]-1)/2;\r\n        }\r\n    }\r\n    int cnt = 0;\r\n    for(int i = 0;i < n;i++){\r\n        if(mp1[v[i][0]] > 1 && mp2[v[i][1]] > 1){\r\n            cnt++;\r\n        }\r\n    }\r\n    cout<<ans-cnt/2<<endl;\r\n}\r\n \r\nint main(){\r\n    #ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n\t\t// int t;\r\n\t\t// cin>>t;\r\n\t\t// while(t--){\r\n\t\t// \t\tsolve();\r\n\t\t// }\r\n\t\t\t\tsolve();\r\n\t\t\t\r\n}\r\n\r\n\r\n\r\n \r\n\r\n\r\n"
}