{
    "id": 84151169,
    "contestId": 1356,
    "creationTimeSeconds": 1592478700,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1356,
        "index": "B2",
        "name": "Decrement",
        "type": "PROGRAMMING",
        "tags": [
            "*special"
        ]
    },
    "author": {
        "contestId": 1356,
        "members": [
            {
                "handle": "cfk"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1591977600
    },
    "programmingLanguage": "Q#",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 0,
    "source": "namespace Solution {\r\n\r\n    open Microsoft.Quantum.Canon;\r\n    open Microsoft.Quantum.Intrinsic;\r\n    open Microsoft.Quantum.Measurement;\r\n    open Microsoft.Quantum.Arithmetic;\r\n    \r\n\r\n    operation Increment (register : LittleEndian) : Unit is Adj+Ctl {\r\n        let q= register!;\r\n        if(Length(q)>1) {\r\n            Controlled Solve(q[0..0],LittleEndian(q[1..(Length(q)-1)]));\r\n        }\r\n        X(q[0]);\r\n    } \r\n\r\n    operation Solve (register : LittleEndian) : Unit is Adj+Ctl {\r\n        Adjoint Increment(register);\r\n    }\r\n}\r\n\r\n"
}