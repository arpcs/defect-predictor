{
    "id": 114133515,
    "contestId": 1356,
    "creationTimeSeconds": 1619282112,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1356,
        "index": "B2",
        "name": "Decrement",
        "type": "PROGRAMMING",
        "tags": [
            "*special"
        ]
    },
    "author": {
        "contestId": 1356,
        "members": [
            {
                "handle": "Xzirium"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1591977600
    },
    "programmingLanguage": "Q#",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 0,
    "source": "namespace Solution {\r\n    open Microsoft.Quantum.Measurement;\r\n    open Microsoft.Quantum.Arrays;\r\n    open Microsoft.Quantum.Intrinsic;\r\n    open Microsoft.Quantum.Canon;\r\n    open Microsoft.Quantum.Convert;\r\n    open Microsoft.Quantum.Diagnostics;\r\n    open Microsoft.Quantum.Arithmetic;\r\n\r\n    operation Solve (register : LittleEndian) : Unit is Adj+Ctl {\r\n        // your code here\r\n        let N=Length(register!);\r\n        for(i in 0..N)\r\n        {\r\n            X(register![i]);\r\n        }\r\n        for (i in N-1..-1..1)\r\n        {\r\n            X(register![i]);\r\n            Controlled X(register![0..i-1],register![i]);\r\n        }\r\n    }\r\n}"
}