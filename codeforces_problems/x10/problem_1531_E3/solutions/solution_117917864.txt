{
    "id": 117917864,
    "contestId": 1531,
    "creationTimeSeconds": 1622393225,
    "relativeTimeSeconds": 546425,
    "problem": {
        "contestId": 1531,
        "index": "E3",
        "name": "\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0441\u043b\u0438\u044f\u043d\u0438\u0435\u043c",
        "type": "PROGRAMMING",
        "tags": [
            "*special",
            "binary search"
        ]
    },
    "author": {
        "contestId": 1531,
        "members": [
            {
                "handle": "Kmaxkum"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1621846800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 140,
    "timeConsumedMillis": 1887,
    "memoryConsumedBytes": 27852800,
    "source": "#define _USE_MATH_DEFINES\r\n#define _CRT_SECURE_NO_WARNINGS\r\n#include <stdio.h>\r\n#include <iostream>\r\n#include <vector>\r\n#include <string>\r\n#include <map>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\n#include <algorithm>\r\n#include <set>\r\n#include <cmath>\r\n#include <iomanip>\r\n#include <fstream>\r\n#include <list>\r\n#include <queue>\r\n#include <deque>\r\n#include <sstream>\r\n#include <memory>\r\n#include <stdint.h>\r\n#include <functional>\r\n\r\ntypedef long long ll;\r\n\r\nusing namespace std;\r\n\r\nconst int INF = 1 << 30;\r\nconst ll LINF = 1ll << 60;\r\nconst int MOD = 1000000007;\r\n\r\nvector<int> arr, res;\r\nstring ans, lg;\r\n\r\nint ind = 0;\r\n\r\nvoid mergeSort(int l, int r)\r\n{\r\n    if (r - l <= 1)\r\n    {\r\n        return;\r\n    }\r\n\r\n    int m = (l + r) >> 1;\r\n\r\n    mergeSort(l, m);\r\n    mergeSort(m, r);\r\n\r\n    int i = l, j = m, k = l;\r\n\r\n    while (i < m && j < r)\r\n    {\r\n        if (arr[i] < arr[j])\r\n        {\r\n            lg.push_back('0');\r\n            res[k] = arr[i];\r\n            i++;\r\n        }\r\n        else\r\n        {\r\n            lg.push_back('1');\r\n            res[k] = arr[j];\r\n            j++;\r\n        }\r\n        k++;\r\n    }\r\n\r\n    while (i < m)\r\n    {\r\n        res[k] = arr[i];\r\n        i++;\r\n        k++;\r\n    }\r\n\r\n    while (j < r)\r\n    {\r\n        res[k] = arr[j];\r\n        j++;\r\n        k++;\r\n    }\r\n\r\n    for (int i = l; i < r; i++)\r\n    {\r\n        arr[i] = res[i];\r\n    }\r\n}\r\n\r\nvoid check(int l, int r)\r\n{\r\n    if (r - l <= 1)\r\n    {\r\n        return;\r\n    }\r\n\r\n    int m = (l + r) >> 1;\r\n    \r\n    check(l, m);\r\n    check(m, r);\r\n\r\n    int i = l, j = m, k = l;\r\n\r\n    while (i < m && j < r)\r\n    {\r\n        if (ind >= ans.size())\r\n        {\r\n            ind = INF;\r\n            break;\r\n        }\r\n        if (ans[ind] == '0')\r\n        {\r\n            i++;\r\n        }\r\n        else\r\n        {\r\n            j++;\r\n        }\r\n        k++;\r\n        ind++;\r\n    }\r\n    \r\n    while (i < m)\r\n    {\r\n        i++;\r\n        k++;\r\n    }\r\n           \r\n    while (j < r)\r\n    {\r\n        j++;\r\n        k++;\r\n    }\r\n}\r\n\r\nvector<pair<int, int>> mod;\r\n\r\nvoid gen(int l, int r)\r\n{\r\n    if (r - l <= 1)\r\n    {\r\n        return;\r\n    }\r\n\r\n    int m = (l + r) >> 1;\r\n\r\n    gen(l, m);\r\n    gen(m, r);\r\n\r\n    int i = l, j = m, k = l;\r\n\r\n    while (i < m && j < r)\r\n    {\r\n        if (ans[ind] == '0')\r\n        {\r\n            mod.push_back({ k, i });\r\n            i++;\r\n        }\r\n        else\r\n        {\r\n            mod.push_back({ k, j });\r\n            j++;\r\n        }\r\n        k++;\r\n        ind++;\r\n    }\r\n\r\n    while (i < m)\r\n    {\r\n        mod.push_back({ k, i });\r\n        i++;\r\n        k++;\r\n    }\r\n\r\n    while (j < r)\r\n    {\r\n        mod.push_back({ k, j });\r\n        j++;\r\n        k++;\r\n    }\r\n    mod.push_back({ -1, -1 });\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin); freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n    /*int n;\r\n    cin >> n;\r\n\r\n    arr.resize(n);\r\n    res.resize(n);\r\n\r\n    for (auto & i : arr)\r\n    {\r\n        cin >> i;\r\n    }\r\n\r\n    mergeSort(0, n);\r\n    \r\n    cin >> ans;\r\n\r\n    if (ans != lg)\r\n    {\r\n        cout << \"sos\\n\" << lg;\r\n    }\r\n\r\n    return 0;*/\r\n\r\n    cin >> ans;\r\n\r\n    int d = -1;\r\n\r\n    int l = 1, r = 100005;\r\n\r\n    while (l + 1 < r)\r\n    {\r\n        int m = (l + r) / 2;\r\n\r\n        ind = 0;\r\n        check(0, m);\r\n\r\n        if (ind == INF)\r\n        {\r\n            r = m;\r\n        }\r\n        else\r\n        {\r\n            l = m;\r\n        }\r\n    }\r\n\r\n    //for (int i = 0; i < 25; i++)\r\n    //{\r\n    //    ind = 0;\r\n\r\n    //    check(0, i);\r\n\r\n    //    if (ind != INF)\r\n    //    {\r\n    //        d = i;\r\n    //    }\r\n    //    //cout << ind << '\\n';\r\n    //}\r\n    \r\n    d = l;\r\n\r\n    ind = 0;\r\n    gen(0, d);\r\n\r\n    vector<int> a(d);\r\n    vector<int> temp = a;\r\n\r\n    for (int i = 0; i < d; ++i)\r\n    {\r\n        a[i] = i + 1;\r\n    }\r\n    while (!mod.empty())\r\n    {\r\n\r\n        const auto & [l, r] = mod.back();\r\n        if (l == -1)\r\n        {\r\n            temp = a;\r\n        }\r\n        else\r\n        {\r\n            a[r] = temp[l];\r\n        }\r\n\r\n        mod.pop_back();\r\n    }\r\n\r\n    cout << d << '\\n';\r\n    for (auto & i : a)\r\n    {\r\n        cout << i << ' ';\r\n    }\r\n\r\n    return 0;\r\n}"
}