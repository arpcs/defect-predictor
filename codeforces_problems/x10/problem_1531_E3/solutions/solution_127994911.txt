{
    "id": 127994911,
    "contestId": 1531,
    "creationTimeSeconds": 1630872738,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1531,
        "index": "E3",
        "name": "\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0441\u043b\u0438\u044f\u043d\u0438\u0435\u043c",
        "type": "PROGRAMMING",
        "tags": [
            "*special",
            "binary search"
        ]
    },
    "author": {
        "contestId": 1531,
        "members": [
            {
                "handle": "Sparkle_Twilight"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1621846800
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int MX=4000100,STEP=40;\r\nint n,m,i,j,l,r,pos,cnt[2],a[MX],b[MX];\r\nchar s[MX];\r\nbool bad;\r\nvoid msort(int l, int r) {\r\n  if (r-l<=1) return;\r\n  int mid=(l+r)/2;\r\n  msort(l,mid); if (bad) return;\r\n  msort(mid,r); if (bad) return;\r\n  int i=l,j=mid,k=l;\r\n  while (i<mid && j<r) {\r\n    if (pos>=n) { bad=true; return; }\r\n    if (s[pos++]=='0') b[k++]=a[i++]; else b[k++]=a[j++];\r\n  }\r\n  while (i<mid) b[k++]=a[i++];\r\n  while (j<r) b[k++]=a[j++];\r\n  for (int p=l; p<r; p++) a[p]=b[p];\r\n}\r\nint main() {\r\n  scanf(\"%s\",s);\r\n  n=strlen(s);\r\n  l=1; r=100000;\r\n  while (l<r-STEP) {\r\n    m=(l+r)/2;\r\n    pos=0;\r\n    bad=false;\r\n    msort(0,m);\r\n    if (!bad && pos==n) break;\r\n    if (pos<n) l=m+1; else r=m;\r\n  }\r\n  m=(l+r)/2;\r\n  for (i=max(1,m-STEP); i<=min(100000,m+STEP); i++) {\r\n    for (pos=j=0; j<i; j++) a[j]=j;\r\n    bad=false;\r\n    msort(0,i);\r\n    if (!bad && pos==n) {\r\n      printf(\"%d\\n\",i);\r\n      for (j=0; j<i; j++) b[a[j]]=j;\r\n      for (j=0; j<i; j++) printf(\"%d \",b[j]+1);\r\n      break;\r\n    }\r\n  }\r\n  return 0;\r\n}"
}