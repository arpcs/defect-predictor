{
    "id": 117933286,
    "contestId": 1531,
    "creationTimeSeconds": 1622404716,
    "relativeTimeSeconds": 557916,
    "problem": {
        "contestId": 1531,
        "index": "E3",
        "name": "\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0441\u043b\u0438\u044f\u043d\u0438\u0435\u043c",
        "type": "PROGRAMMING",
        "tags": [
            "*special",
            "binary search"
        ]
    },
    "author": {
        "contestId": 1531,
        "members": [
            {
                "handle": "Alex_2oo8"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1621846800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 10137600,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int MX = 10000000;\n\nchar s[MX];\n\nmap<pair<int, int>, int> memo;\n\nint foo(int i, int n) {\n\tauto state = make_pair(i, n);\n\tif (memo.count(state) == 1) return memo[state];\n\t\n\tif (n <= 1) return memo[state] = i;\n\t\n\ti = foo(i, n / 2);\n\t\n\tif (i == -1) return memo[state] = -1;\n\t\n\ti = foo(i, (n + 1) / 2);\n\t\n\tif (i == -1) return memo[state] = -1;\n\t\n\tint a = n / 2;\n\tint b = (n + 1) / 2;\n\twhile (a > 0 && b > 0) {\n\t\tif (s[i] == 0) return memo[state] = -1;\n\t\t\n\t\tif (s[i] == '0') a--;\n\t\telse b--;\n\t\ti++;\n\t}\n\t\n\treturn memo[state] = i;\n}\n\nvoid solve(int n) {\n\tint it = 0;\n\tvector<int> a(n), b(n);\n\tiota(a.begin(), a.end(), 0);\n\t\n\tfunction<void(int, int)> mergeSort = [&a, &b, &it, &mergeSort](int l, int r) {\n\t\tif (r - l <= 1) return;\n\t\t\n\t\tint m = (l + r) >> 1;\n\t\t\n\t\tmergeSort(l, m);\n\t\tmergeSort(m, r);\n\t\t\n\t\tint i = l, j = m, k = l;\n\t\twhile (i < m && j < r) {\n\t\t\tif (s[it++] == '0') {\n\t\t\t\tb[k] = a[i];\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tb[k] = a[j];\n\t\t\t\tj += 1;\n\t\t\t}\n\t\t\t\n\t\t\tk += 1;\n\t\t}\n\t\t\n\t\twhile (i < m) {\n\t\t\tb[k] = a[i];\n\t\t\ti += 1;\n\t\t\tk += 1;\n\t\t}\n\t\t\n\t\twhile (j < r) {\n\t\t\tb[k] = a[j];\n\t\t\tj += 1;\n\t\t\tk += 1;\n\t\t}\n\t\t\n\t\tfor (int p = l; p < r; p++) {\n\t\t\ta[p] = b[p];\n\t\t}\n\t};\n\t\n\tmergeSort(0, n);\n\t\n\tfor (int i = 0; i < n; i++) b[a[i]] = i + 1;\n\t\n\tprintf(\"%d\\n\", n);\n\tfor (int i = 0; i < n; i++) printf(\"%d \", b[i]);\n\tprintf(\"\\n\");\n}\n\nint main() {\n\tignore = scanf(\"%s\", s);\n\t\n\tint len = strlen(s);\n\t\n\tfor (int n = 1; n<20; n++) {\n\t\tprintf(\"%d %d | %d\\n\", n, foo(0, n), len);\n\t\t\n\t\tif (foo(0, n) == len) {\n\t\t\tsolve(n);\n\t\t\t\n\t\t\treturn 0;\n\t\t}\n\t}\n}\n"
}