{
    "id": 117928676,
    "contestId": 1531,
    "creationTimeSeconds": 1622400433,
    "relativeTimeSeconds": 553633,
    "problem": {
        "contestId": 1531,
        "index": "E3",
        "name": "\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0441\u043b\u0438\u044f\u043d\u0438\u0435\u043c",
        "type": "PROGRAMMING",
        "tags": [
            "*special",
            "binary search"
        ]
    },
    "author": {
        "contestId": 1531,
        "members": [
            {
                "handle": "CrazyMurky"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1621846800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 140,
    "timeConsumedMillis": 217,
    "memoryConsumedBytes": 15667200,
    "source": "#define _CRT_SECURE_NO_WARNINGS\r\n#include <iostream>\r\n#include <vector>\r\n#include <string>\r\n#include <set>\r\n#include <map>\r\n#include <iomanip>\r\n#include <algorithm>\r\n#include <iterator>\r\n#include <stack>\r\n#include <queue>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\n#include <stdio.h>\r\n#include <math.h>\r\n#include <bitset>\r\n#include <numeric>\r\n#include <deque>\r\n#include <list>\r\n\r\nusing namespace std;\r\n#define pb push_back\r\n#define mp make_pair\r\n#define ifor(a, b) for(int i = a; i < b; ++i)\r\n#define jfor(a, b) for(int j = a; j < b; ++j)\r\n#define kfor(a, b) for(int k = a; k < b; ++k)\r\n#define irof(a, b) for(int i = b - 1; i >= a; --i)\r\n#define jrof(a, b) for(int j = b - 1; j >= a; --j)\r\n#define krof(a, b) for(int k = b - 1; k >= a; --k)\r\n#define all(a) a.begin(), a.end()\r\n#define double long double\r\n\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\n\r\nll mmod(ll x, ll y) {\r\n\tif (x >= 0LL)\r\n\t\treturn x % y;\r\n\telse\r\n\t\treturn (y - (-x) % y) % y;\r\n}\r\n\r\nll ddiv(ll x, ll y) {\r\n\tx -= mmod(x, y);\r\n\treturn x / y;\r\n}\r\n\r\nll binpow(ll a, ll b, ll mod) {\r\n\tif (a == 0) {\r\n\t\treturn 0;\r\n\t}\r\n\tll pows[65];\r\n\tpows[0] = a;\r\n\tifor(1, 65) {\r\n\t\tpows[i] = mmod(pows[i - 1] * pows[i - 1], mod);\r\n\t}\r\n\tll ans = 1;\r\n\tfor (int i = 0; b != 0; b >>= 1, ++i) {\r\n\t\tif (b % 2 == 1) {\r\n\t\t\tans = mmod(ans * pows[i], mod);\r\n\t\t}\r\n\t}\r\n\treturn ans;\r\n}\r\n\r\nll GCD(ll a, ll b) {\r\n\twhile (a != 0) {\r\n\t\tb = b % a;\r\n\t\tswap(a, b);\r\n\t}\r\n\treturn b;\r\n}\r\n\r\n//vector<int> dsu_par;\r\n//vector<int> dsu_rank;\r\n//\r\n//void dsu_init(int n) {\r\n//\tdsu_par.clear();\r\n//\tdsu_rank.clear();\r\n//\tdsu_par.resize(n);\r\n//\tifor(0, n) dsu_par[i] = i;\r\n//\tdsu_rank.resize(n, 1);\r\n//}\r\n//\r\n//int dsu_root(int u) {\r\n//\tif (dsu_par[u] == u) return u;\r\n//\treturn dsu_par[u] = dsu_root(dsu_par[u]);\r\n//}\r\n//\r\n//int dsu_size(int u) {\r\n//\tu = dsu_root(u);\r\n//\treturn dsu_rank[u];\r\n//}\r\n//\r\n//void dsu_merge(int u, int v) {\r\n//\tu = dsu_root(u);\r\n//\tv = dsu_root(v);\r\n//\tif (u != v) {\r\n//\t\tif (dsu_rank[v] > dsu_rank[u]) {\r\n//\t\t\tswap(u, v);\r\n//\t\t}\r\n//\t\tdsu_par[v] = u;\r\n//\t\tdsu_rank[u] += dsu_rank[v];\r\n//\t}\r\n//}\r\n\r\n//vector<ll> ddo;\r\n\t\t//vector<pair<int, int>> fl;\r\n\t\t//int nn;\r\n\t\t//vector<ll> lens;\r\n\t\t//\r\n\t\t//void ddo_init(int n) {\r\n\t\t//\tnn = n;\r\n\t\t//\tddo.clear();\r\n\t\t//\tddo.resize(4 * nn);\r\n\t\t//\tfl.clear();\r\n\t\t//\tfl.resize(4 * nn, mp(false, 0));\r\n\t\t//}\r\n\t\t//\r\n\t\t//void v_set(ll val, int v, int lb, int rb) {\r\n\t\t//\tint curl = lens[rb];\r\n\t\t//\tif (lb != 0) {\r\n\t\t//\t\tcurl -= lens[lb - 1];\r\n\t\t//\t}\r\n\t\t//\tddo[v] = val * curl;\r\n\t\t//\tfl[v] = mp(true, val);\r\n\t\t//}\r\n\t\t//\r\n\t\t//void ddo_set(ll val, int l, int r, int v = 0, int lb = 0, int rb = nn - 1) {\r\n\t\t//\tif (rb == lb) {\r\n\t\t//\t\tint curl = lens[rb];\r\n\t\t//\t\tif (lb != 0) {\r\n\t\t//\t\t\tcurl -= lens[lb - 1];\r\n\t\t//\t\t}\r\n\t\t//\t\tddo[v] = val * curl;\r\n\t\t//\t\tfl[v].first = false;\r\n\t\t//\t\treturn;\r\n\t\t//\t}\r\n\t\t//\tif (l <= lb && r >= rb) {\r\n\t\t//\t\tv_set(val, v, lb, rb);\r\n\t\t//\t\treturn;\r\n\t\t//\t}\r\n\t\t//\tint mb = (rb + lb) / 2;\r\n\t\t//\tif (fl[v].first) {\r\n\t\t//\t\tv_set(fl[v].second, 2 * v + 1, lb, mb);\r\n\t\t//\t\tv_set(fl[v].second, 2 * v + 2, mb + 1, rb);\r\n\t\t//\t\tfl[v].first = false;\r\n\t\t//\t}\r\n\t\t//\r\n\t\t//\tif (l <= mb && r >= lb) {\r\n\t\t//\t\tddo_set(val, l, r, 2 * v + 1, lb, mb);\r\n\t\t//\t}\r\n\t\t//\tif (r >= mb + 1 && l <= rb) {\r\n\t\t//\t\tddo_set(val, l, r, 2 * v + 2, mb + 1, rb);\r\n\t\t//\t}\r\n\t\t//\tddo[v] = ddo[2 * v + 1] + ddo[2 * v + 2];\r\n\t\t//}\r\n\t\t//\r\n\t\t//ll ddo_get(int l, int r, int v = 0, int lb = 0, int rb = nn - 1) {\r\n\t\t//\tif (l <= lb && r >= rb) {\r\n\t\t//\t\treturn ddo[v];\r\n\t\t//\t}\r\n\t\t//\tint mb = (rb + lb) / 2;\r\n\t\t//\tif (fl[v].first) {\r\n\t\t//\t\tv_set(fl[v].second, 2 * v + 1, lb, mb);\r\n\t\t//\t\tv_set(fl[v].second, 2 * v + 2, mb + 1, rb);\r\n\t\t//\t\tfl[v].first = false;\r\n\t\t//\t}\r\n\t\t//\tll ans = 0;\r\n\t\t//\tif (l <= mb && r >= lb) {\r\n\t\t//\t\tans += ddo_get(l, r, 2 * v + 1, lb, mb);\r\n\t\t//\t}\r\n\t\t//\tif (r >= mb + 1 && l <= rb) {\r\n\t\t//\t\tans += ddo_get(l, r, 2 * v + 2, mb + 1, rb);\r\n\t\t//\t}\r\n\t\t//\treturn ans;\r\n\t\t//}\r\n\r\nint n;\r\n\r\npair<int, int> getp(int l, int r, vector<pair<int, int>>& prefs) {\r\n\treturn mp(prefs[r].first - prefs[l].first, prefs[r].second - prefs[l].second);\r\n}\r\n\r\nint bsearch(int start, int zeros, int ones, vector<pair<int, int>>& prefs) {\r\n\tauto p = getp(start, n, prefs);\r\n\tif (p.first < zeros && p.second < ones)\r\n\t\treturn n;\r\n\tint l = start;\r\n\tint r = n;\r\n\twhile (r - l > 1) {\r\n\t\tint m = (r + l) / 2;\r\n\t\tauto p = getp(start, m, prefs);\r\n\t\tif (p.first < zeros && p.second < ones)\r\n\t\t\tl = m;\r\n\t\telse\r\n\t\t\tr = m;\r\n\t}\r\n\treturn l;\r\n}\r\n\r\nbool checkif(int size, vector<pair<int, int>>& prefs, int& it) {\r\n\tif (size == 1) {\r\n\t\treturn true;\r\n\t}\r\n\tif (it > n)\r\n\t\treturn false;\r\n\tint lsize = size / 2;\r\n\tint rsize = size - lsize;\r\n\tif (!checkif(lsize, prefs, it))\r\n\t\treturn false;\r\n\tif (!checkif(rsize, prefs, it))\r\n\t\treturn false;\r\n\tint rb = bsearch(it - 1, lsize, rsize, prefs) + 1;\r\n\tif (rb > n)\r\n\t\treturn false;\r\n\tit = rb + 1;\r\n\treturn true;\r\n}\r\n\r\n\r\n\r\nvoid getans(int& it, string& s, int l, int r, vector<int>& perm, vector<int>& temp) {\r\n\tif (r - l <= 1)\r\n\t\treturn;\r\n\tint m = (r + l) / 2;\r\n\tgetans(it, s, l, m, perm, temp);\r\n\tgetans(it, s, m, r, perm, temp);\r\n\tint i = l, j = m, k = l;\r\n\twhile (i < m && j < r) {\r\n\t\tif (s[it] == '0') {\r\n\t\t\ttemp[k] = perm[i];\r\n\t\t\t++i;\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttemp[k] = perm[j];\r\n\t\t\t++j;\r\n\t\t}\r\n\t\t++k;\r\n\t\t++it;\r\n\t}\r\n\twhile (i < m) {\r\n\t\ttemp[k] = perm[i];\r\n\t\t++i;\r\n\t\t++k;\r\n\t}\r\n\twhile (j < r) {\r\n\t\ttemp[k] = perm[j];\r\n\t\t++j;\r\n\t\t++k;\r\n\t}\r\n\tfor (i = l; i < r; ++i) {\r\n\t\tperm[i] = temp[i];\r\n\t}\r\n}\r\n\r\n\r\nvoid solve() {\r\n\tstring s; cin >> s;\r\n\tn = s.length();\r\n\tvector<pair<int, int>> prefs(n + 1);\r\n\tprefs[0] = { 0,0 };\r\n\tifor(1, n + 1) {\r\n\t\tif (s[i - 1] == '0') {\r\n\t\t\tprefs[i] = { prefs[i - 1].first + 1, prefs[i - 1].second };\r\n\t\t}\r\n\t\telse {\r\n\t\t\tprefs[i] = { prefs[i - 1].first, prefs[i - 1].second + 1 };\r\n\t\t}\r\n\t}\r\n\tint it = n - 1;\r\n\tint ansl = 1;\r\n\tint ansr = 100001;\r\n\twhile (ansr - ansl > 1) {\r\n\t\tint ansm = (ansr + ansl) / 2;\r\n\t\tit = 1;\r\n\t\tif (checkif(ansm, prefs, it)) {\r\n\t\t\tif (it < n + 1) {\r\n\t\t\t\tansl = ansm;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (it == n + 1) {\r\n\t\t\t\tansl = ansm;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tansr = ansm;\r\n\t\t}\r\n\t}\r\n\tvector<int> perm(ansl), temp(ansl);\r\n\tifor(0, ansl)\r\n\t\tperm[i] = i;\r\n\tit = 0;\r\n\r\n\tgetans(it, s, 0, ansl, perm, temp);\r\n\tifor(0, ansl)\r\n\t\ttemp[perm[i]] = i;\r\n\tcout << ansl << \"\\n\";\r\n\tifor(0, ansl)\r\n\t\tcout << temp[i] + 1 << ' ';\r\n\tcout << \"\\n\";\r\n}\r\n\r\nint main() {\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(nullptr);\r\n\tint t = 1;\r\n\tkfor(0, t)\r\n\t\tsolve();\r\n\t// system(\"pause\");\r\n\treturn 0;\r\n}\r\n"
}