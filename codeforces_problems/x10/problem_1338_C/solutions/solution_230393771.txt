{
    "id": 230393771,
    "contestId": 1338,
    "creationTimeSeconds": 1698596211,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1338,
        "index": "C",
        "name": "Perfect Triples",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2200,
        "tags": [
            "bitmasks",
            "brute force",
            "constructive algorithms",
            "divide and conquer",
            "math"
        ]
    },
    "author": {
        "contestId": 1338,
        "members": [
            {
                "handle": "peteza"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586700300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 64,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint t;\r\nlong long idx;\r\n\r\nint main() {\r\n    cin.tie(0) -> sync_with_stdio(0);\r\n    cin >> t;\r\n    while(t--) {\r\n        cin >> idx;\r\n        int mode = idx%3;\r\n        //mode 1 = inp1, mode 2 = inp2, mode 0 = out\r\n        long long diff, l = 1, r, cpow = 0;\r\n        while(idx > l*4-1) {l *= 4; cpow++;} r = l*4-1;\r\n        long long res = 0;\r\n        if(mode == 1) res = (1ll << (cpow*2));\r\n        if(mode == 2) res = (2ll << (cpow*2));\r\n        if(mode == 0) res = (3ll << (cpow*2));\r\n        while(cpow) {\r\n            cpow--;\r\n            diff = (r-l+1) >> 2;\r\n            if(l + diff*0 <= idx && idx < l+diff*1) {\r\n                if(mode == 1) res |= (0ll << (cpow*2));\r\n                if(mode == 2) res |= (0ll << (cpow*2));\r\n                if(mode == 0) res |= (0ll << (cpow*2));\r\n                r = l+diff*1-1;\r\n                l = l+diff*0;\r\n            } else \r\n            if(l + diff*1 <= idx && idx < l+diff*2) {\r\n                if(mode == 1) res |= (1ll << (cpow*2));\r\n                if(mode == 2) res |= (2ll << (cpow*2));\r\n                if(mode == 0) res |= (3ll << (cpow*2));\r\n                r = l+diff*2-1;\r\n                l = l+diff*1;\r\n            } else \r\n            if(l + diff*2 <= idx && idx < l+diff*3) {\r\n                if(mode == 1) res |= (2ll << (cpow*2));\r\n                if(mode == 2) res |= (3ll << (cpow*2));\r\n                if(mode == 0) res |= (1ll << (cpow*2));\r\n                r = l+diff*3-1;\r\n                l = l+diff*2;\r\n            } else \r\n            if(l + diff*3 <= idx && idx < l+diff*4) {\r\n                if(mode == 1) res |= (3ll << (cpow*2));\r\n                if(mode == 2) res |= (1ll << (cpow*2));\r\n                if(mode == 0) res |= (2ll << (cpow*2));\r\n                r = l+diff*4-1;\r\n                l = l+diff*3;\r\n            }\r\n        }\r\n        cout << res << '\\n';\r\n    }\r\n}"
}