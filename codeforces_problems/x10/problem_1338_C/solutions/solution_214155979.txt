{
    "id": 214155979,
    "contestId": 1338,
    "creationTimeSeconds": 1689573508,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1338,
        "index": "C",
        "name": "Perfect Triples",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2200,
        "tags": [
            "bitmasks",
            "brute force",
            "constructive algorithms",
            "divide and conquer",
            "math"
        ]
    },
    "author": {
        "contestId": 1338,
        "members": [
            {
                "handle": "__AA"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586700300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef pair<int, int> PII;\r\n\r\nconst int N = 30010, M = N * 2, MOD = 998244353;\r\nconst ll Hash = 13331, INF = 0x3f3f3f3f3f3f3f3f;\r\n\r\nll T, n, m, k;int a[N] = {1,2,3,4,8,12,5,10,15,6,11,13,7,9,14,16,32,48,17,34,\r\n51,18,35,49,19,33,50,20,40,60,21,42,63,22,43,61,23,41,62,24,44,52,\r\n25,46,55,26,47,53,27,45,54,28,36,56,29,38,59,30,39,57,31,37,58,64,128,\r\n192,65,130,195,66,131,193,67,129,194};\r\nbool st[N];\r\nvector<ll> v; \r\n\r\nvoid solve() {\r\n\t\r\n\t\r\n\tcin >> n;\r\n\t\r\n//\tcout << v.size() << endl;\r\n\tif ((ll)v.size() >= n) {\r\n\t\tcout << v[n - 1] << endl;\r\n\t\treturn;\r\n\t} else {\r\n\t\tif (n < 64) {\r\n\t\t\tll len = n - v.size() - 1;\r\n\t\t\t\r\n\t\t\tll t = len / 3;\r\n\t\t\t\r\n\t\t\tif (len % 3 == 0) {\r\n\t\t\t\tcout << (16 + t) << endl;\t\r\n\t\t\t} else if (len % 3 == 1) {\r\n\t\t\t\tcout << (16 + t) * 2 << endl;\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tcout << (16 + t) * 3 << endl;\t\t\t\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tll t = n / 64;\r\n\t\t\t\r\n\t\t\tll len = n - t * 64;\r\n\t\t\t\r\n\t\t\tll f = len / 3;\r\n\t\t\t\r\n\t\t\tif (len % 3 == 0) {\r\n\t\t\t\tcout << (t * 64 + f) << endl;\r\n\t\t\t} else if (len % 3 == 1) {\r\n\t\t\t\tcout << (t * 64 + f) * 2 << endl;\r\n\t\t\t} else {\r\n\t\t\t\tcout << (t * 64 + f) * 3 << endl;\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tT = 1;\r\n\tfor (int i = 0; i < N; i++) {\r\n\t\tif (!a[i]) break;\r\n\t\tv.push_back(a[i]);\r\n\t}\r\n\tcin >> T; \r\n\twhile (T--) {\r\n\t\tsolve();\t\r\n\t}\t\r\n\t\r\n\treturn 0;\r\n} "
}