{
    "id": 226445648,
    "contestId": 1338,
    "creationTimeSeconds": 1696341002,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1338,
        "index": "C",
        "name": "Perfect Triples",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2200,
        "tags": [
            "bitmasks",
            "brute force",
            "constructive algorithms",
            "divide and conquer",
            "math"
        ]
    },
    "author": {
        "contestId": 1338,
        "members": [
            {
                "handle": "an_da"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586700300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nusing ll = long long;\r\nusing ull = unsigned long long;\r\nusing ld = long double;\r\nusing pii = pair<int, int>;\r\nusing pll = pair<ll, ll>;\r\nusing pdd = pair<ld, ld>;\r\nusing arr = array<int, 3>;\r\nusing vi = vector<int>;\r\nusing vl = vector<ll>;\r\nconstexpr int dx[] = {-1, 0, 1, 0}, dy[] = {0, 1, 0, -1};\r\nconstexpr int inf = 0x3f3f3f3f;\r\nconstexpr ll linf = 0x3f3f3f3f3f3f3f3f;\r\nconstexpr int N = 1e5 + 5, M = N;\r\nconstexpr int mod = 1e9 + 7;\r\nconstexpr ld eps = 1e-8;\r\ntemplate <class T> void Min(T &a, const T b) { if (a > b) a = b; }\r\ntemplate <class T> void Max(T &a, const T b) { if (a < b) a = b; }\r\ntemplate <class T> void Add(T &a, const T b) { a += b; if(a >= mod) a -= mod; }\r\ntemplate <class T> void Sub(T &a, const T b) { a -= b; if(a < 0) a += mod; }\r\n\r\nll dfs(ll l, ll r, ll x) {\r\n\tif (r - l + 1 == 4) {\r\n\t\tif (x == 0) {\r\n\t\t\treturn l;\r\n\t\t} else if (x == 1) {\r\n\t\t\treturn l + 2;\r\n\t\t} else if (x == 2) {\r\n\t\t\treturn l + 3;\r\n\t\t} else {\r\n\t\t\treturn l + 1;\r\n\t\t}\r\n\t}\r\n\tll cnt = (r - l + 1) / 4;\r\n\tll th = 0;\r\n\twhile (x >= cnt * (th + 1)) {\r\n\t\tth++;\r\n\t}\r\n\t// cerr << th << \" \" << cnt << \"\\n\";\r\n\tif (th == 0) {\r\n\t\treturn dfs(l, l + cnt - 1, x - th * cnt);\r\n\t} else if (th == 1) {\r\n\t\treturn dfs(l + 2 * cnt, l + 3 * cnt - 1, x - th * cnt);\r\n\t} else if (th == 2) {\r\n\t\treturn dfs(l + 3 * cnt, l + 4 * cnt - 1, x - th * cnt);\r\n\t} else {\r\n\t\treturn dfs(l + cnt, l + 2 * cnt - 1, x - th * cnt);\r\n\t}\r\n}\r\n\r\nvoid solve() {\r\n\tll n;\r\n\tcin >> n;\r\n\tif (n <= 3) {\r\n\t\tcout << n << \"\\n\";\r\n\t\treturn ;\r\n\t}\r\n\tint t = 0;\r\n\twhile (n >= (1ll << t)) {\r\n\t\tt += 2;\r\n\t}\r\n\tt -= 2;\r\n\t// cerr << \"t : \" << t << \"\\n\";\r\n\tll th = n - (1ll << t);\r\n\tll base = (1ll << t) + th / 3;\r\n\tif (th % 3 == 0) {\r\n\t\tcout << base << \"\\n\";\r\n\t\treturn ;\r\n\t}\r\n\t// cout << t << \"\\n\";\r\n\tint nth = th;\r\n\tif (th % 3 == 2) nth -= 1;\r\n\tnth /= 3;\r\n\tll val = dfs(1ll << (t + 1), 3 * (1ll << t) - 1, nth);\r\n\tif (th % 3 == 2) {\r\n\t\tval ^= base;\r\n\t}\r\n\tcout << val << \"\\n\";\r\n\t// n = 5000;\r\n\t// vi vis(N);\r\n\t// int cnt = 1;\r\n\t// vi ans;\r\n\t// while (ans.size() / 3 <= 100) {\t\t\r\n\t// \twhile (vis[cnt]) cnt++;\r\n\t// \tfor (int i = cnt; i <= n; i++) {\r\n\t// \t\tif (vis[i]) continue;\r\n\t// \t\tvis[i] = 1;\r\n\t// \t\tint is = 0;\r\n\t// \t\tfor (int j = 1; j <= n; j++) {\r\n\t// \t\t\tif (vis[j] || vis[i ^ j]) continue;\r\n\t// \t\t\tvis[j] = vis[i ^ j] = 1;\r\n\t// \t\t\tans.push_back(i);\r\n\t// \t\t\tans.push_back(j);\r\n\t// \t\t\tans.push_back(i ^ j);\r\n\t// \t\t\tis = 1;\r\n\t// \t\t\tbreak;\r\n\t// \t\t}\r\n\t// \t\tif (is) break;\r\n\t// \t}\r\n\t// }\r\n\t// for (int i = 0; i < int(ans.size()); i++) {\r\n\t// \tcout << ans[i] << \" \";\r\n\t// \tif (i % 3 == 2) {\r\n\t// \t\tcout << \"\\n\";\r\n\t// \t}\r\n\t// }\r\n}\r\nint main() {\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0);\r\n\r\n\tint t;\r\n\tt = 1;\r\n\tcin >> t;\r\n\twhile(t--)\r\n\t\tsolve();\r\n\treturn 0;\r\n}"
}