{
    "id": 231743861,
    "contestId": 404,
    "creationTimeSeconds": 1699366271,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 404,
        "index": "E",
        "name": "Maze 1D",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2200,
        "tags": [
            "binary search",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 404,
        "members": [
            {
                "handle": "sword1e1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1395243000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n\r\nconst int maxn = 2e5 + 5;\r\nstring s;\r\n\r\nbool check(int x) {\r\n\tint st = 0;\r\n\tunordered_map<int,int>mp;\r\n\tfor (auto i : s) {\r\n\t\tif (i == 'L') {\r\n\t\t\tst--;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tst++;\r\n\t\t}\r\n\t\tif (x < 0 && st < x) st++;\r\n\t\telse if (x > 0 && st > x) st--;\r\n\t\tmp[st]++;\r\n\t}\r\n\tif (mp[st] == 1) {\r\n\t\treturn 1;\r\n\t}\r\n\telse return 0;\r\n}\r\n\r\nvoid solve() {\r\n\tcin >> s;\r\n\tint len = s.size();\r\n\tchar res = s[len - 1];\r\n\tset<char>c;\r\n\tfor (auto i : s) {\r\n\t\tc.insert(i);\r\n\t}\r\n\tif (c.size() == 1) {\r\n\t\tcout << 1 << '\\n';\r\n\t\treturn ;\r\n\t}\r\n\tif (res == 'R') {\r\n\t\tint ans = 0;\r\n\t\tint l = -1000005,r = -1;\r\n\t\twhile (l <= r) {\r\n\t\t\tint mid = (l + r) >> 1;\r\n\t\t\tif (check(mid)) {\r\n\t\t\t\tr = mid - 1;\r\n\t\t\t\tans = min(ans,mid);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tl = mid + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcout << -ans << '\\n';\r\n\t}\r\n\telse {\r\n\t\tint l = 1,r = 1000005;\r\n\t\tint ans = 0;\r\n\t\twhile (l <= r) {\r\n\t\t\tint mid = (l + r) >> 1;\r\n\t\t\tif (check(mid)) {\r\n\t\t\t\tl = mid + 1;\r\n\t\t\t\tans = max(ans,mid);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tr = mid - 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcout << ans << '\\n';\r\n\t\t\r\n\t}\r\n}\r\n\r\nsigned main() {\r\n\tios::sync_with_stdio(false);cin.tie(0);\r\n\tint t = 1;//cin >> t;\r\n\twhile (t--) solve();\r\n\treturn 0;\r\n}"
}