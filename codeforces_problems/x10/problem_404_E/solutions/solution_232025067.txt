{
    "id": 232025067,
    "contestId": 404,
    "creationTimeSeconds": 1699511381,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 404,
        "index": "E",
        "name": "Maze 1D",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2200,
        "tags": [
            "binary search",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 404,
        "members": [
            {
                "handle": "Kaihonohane01"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1395243000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 10137600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nconst int maxn = 1e6;\r\n\r\nint v[maxn + 10];\r\nstring s;\r\nint n;\r\n\r\nbool check(int k) {\r\n    int cp = maxn;\r\n    memset(v, 0, sizeof(v));\r\n    v[cp] = 1;\r\n    for (int i = 0; i < s.size(); i++) {\r\n        if (s[i] == 'L' && (cp - 1) != k)\r\n            cp--;\r\n        if (s[i] == 'R' && (cp + 1) != k)\r\n            cp++;\r\n        v[cp]++;\r\n    }\r\n    if (v[cp] == 1) {\r\n        return 1;\r\n    } else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nvoid run() {\r\n    cin >> s;\r\n    v[maxn] = 1;\r\n    int cp, ml, mr;\r\n    cp = ml = mr = maxn;\r\n    for (int i = 0; i < s.size(); i++) {\r\n        if (s[i] == 'L')\r\n            cp--;\r\n        if (s[i] == 'R')\r\n            cp++;\r\n        ml = min(ml, cp);\r\n        mr = max(mr, cp);\r\n        v[cp]++;\r\n    }\r\n    if (v[cp] == 1) {\r\n        cout << \"1\\n\";\r\n        return;\r\n    }\r\n    int l = ml, r = maxn - 1, p = maxn;\r\n    while (l <= r) {\r\n        int mid = (l + r) >> 1;\r\n        if (check(mid)) {\r\n            p = mid;\r\n            r = mid - 1;\r\n        } else\r\n            l = mid + 1;\r\n    }\r\n    int ans = maxn - p;\r\n    l = maxn + 1;\r\n    r = mr;\r\n    p = maxn;\r\n    while (l <= r) {\r\n        int mid = (l + r) >> 1;\r\n        if (check(mid)) {\r\n            p = mid;\r\n            l = mid + 1;\r\n        } else\r\n            r = mid - 1;\r\n    }\r\n    ans += p - maxn;\r\n    cout << ans << \"\\n\";\r\n    return;\r\n}\r\n\r\nsigned main() {\r\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n    int T = 1;\r\n    // cin >> T;\r\n    while (T--) {\r\n        run();\r\n    }\r\n    return 0;\r\n}"
}