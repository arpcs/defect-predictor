{
    "contestId": 1585,
    "index": "G",
    "name": "Poachers",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 2500,
    "tags": [
        "dp",
        "games",
        "graphs",
        "trees"
    ],
    "desc": {
        "title": "G. Poachers",
        "statement": "<p>Alice and Bob are two poachers who cut trees in a forest.</p><p>A forest is a set of zero or more trees. A tree is a connected graph without cycles. A rooted tree has a special vertex called the root. The parent of a node $$$v$$$ is the next vertex on the shortest path from $$$v$$$ to the root. Children of vertex $$$v$$$ are all nodes for which $$$v$$$ is the parent. A vertex is a leaf if it has no children.</p><p>In this problem we define the <span class=\"tex-font-style-it\">depth</span> of vertex as number of vertices on the simple path from this vertex to the root. The <span class=\"tex-font-style-it\">rank</span> of a tree is the minimum depth among its leaves.</p><p>Initially there is a forest of rooted trees. Alice and Bob play a game on this forest. They play alternating turns with Alice going first. At the beginning of their turn, the player chooses a tree from the forest. Then the player chooses a positive <span class=\"tex-font-style-it\">cutting depth</span>, which should <span class=\"tex-font-style-bf\">not exceed the rank</span> of the chosen tree. Then the player removes all vertices of that tree whose depth is less that or equal to the cutting depth. All other vertices of the tree form a set of rooted trees with root being the vertex with the smallest depth before the cut. All these trees are included in the game forest and the game continues.</p><p>A player loses if the forest is empty at the beginning of his move.</p><p>You are to determine whether Alice wins the game if both players play optimally.</p>",
        "inputSpecification": "<p>Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\leq t \\leq 5 \\cdot 10^5$$$). Description of the test cases follows.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$1 \\leq n \\leq 5 \\cdot 10^5$$$) \u2014 total number of vertices in the initial forest.</p><p>The second line contains $$$n$$$ integers $$$p_1, p_2, \\ldots, p_n$$$ ($$$0 \\leq p_i \\leq n$$$) \u2014 description of the forest. If $$$p_i = 0$$$, then the $$$i$$$-th vertex is the root of a tree, otherwise $$$p_i$$$ is the parent of the vertex $$$i$$$. It's guaranteed that $$$p$$$ defines a correct forest of rooted trees.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$5 \\cdot 10^5$$$.</p>",
        "outputSpecification": "<p>For each test case, print \"<span class=\"tex-font-style-tt\">YES</span>\" (without quotes) if Alice wins, otherwise print \"<span class=\"tex-font-style-tt\">NO</span>\" (without quotes). You can print each letter in any case (upper or lower).</p>",
        "samples": [
            {
                "input": "\n4\n4\n0 1 0 3\n7\n0 1 2 0 4 5 6\n4\n0 1 1 2\n7\n0 1 1 2 2 3 3\n",
                "output": "\nNO\nYES\nNO\nYES\n"
            }
        ],
        "note": "<p>In the first test case Bob has a symmetric strategy, so Alice cannot win.</p><p><img class=\"tex-graphics\" height=\"76px\" src=\"https://espresso.codeforces.com/efcba3949ac02a05de8b51d8230193959bfed935.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"76px\"/></p><p>In the second test case Alice can choose the second tree and cutting depth $$$1$$$ to get a forest on which she has a symmetric strategy.</p><p><img class=\"tex-graphics\" height=\"151px\" src=\"https://espresso.codeforces.com/5bd4cccb7482c3c314192c9d5b72bcd576fe710b.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"76px\"/></p><p>In third test case the rank of the only tree is $$$2$$$ and both possible moves for Alice result in a loss. Bob either can make the forest with a symmetric strategy for himself, or clear the forest.</p><p><img class=\"tex-graphics\" height=\"151px\" src=\"https://espresso.codeforces.com/22d9a47d79a60a1dbff9435cb132b14510cd1649.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"227px\"/></p><p>In the fourth test case all leafs have the same depth, so Alice can clear the forest in one move.</p><p><img class=\"tex-graphics\" height=\"151px\" src=\"https://espresso.codeforces.com/8b9442eef7e2b2bca1bdd461c98b1c6fefb8da25.png\" style=\"max-width: 100.0%;max-height: 100.0%;\" width=\"227px\"/></p>"
    }
}