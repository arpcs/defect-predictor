{
    "id": 205930164,
    "contestId": 1585,
    "creationTimeSeconds": 1684110394,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1585,
        "index": "G",
        "name": "Poachers",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 2500,
        "tags": [
            "dp",
            "games",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 1585,
        "members": [
            {
                "handle": "silxi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1639322100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 468,
    "memoryConsumedBytes": 208691200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nusing ll = long long;\r\n\r\n// Template {{{\r\n#define REP(n) for (int _ = 0; _ < (n); _++)\r\n#define FOR(i, a, b) for (int i = a; i < (b); i++)\r\n#define F0R(i, a) for (int i = 0; i < (a); i++)\r\n#define FORd(i, a, b) for (int i = (b)-1; i >= a; i--)\r\n#define F0Rd(i, a) for (int i = (a)-1; i >= 0; i--)\r\n\r\n#define sz(x) (int)(x).size()\r\n#define all(x) x.begin(), x.end()\r\n\r\ntemplate <class T>\r\nbool ckmin(T &a, const T &b) {\r\n  return b < a ? a = b, 1 : 0;\r\n}\r\ntemplate <class T>\r\nbool ckmax(T &a, const T &b) {\r\n  return a < b ? a = b, 1 : 0;\r\n}\r\n\r\nnamespace std {\r\ntemplate <class Fun>\r\nclass y_combinator_result {\r\n  Fun fun_;\r\n\r\n  public:\r\n  template <class T>\r\n  explicit y_combinator_result(T &&fun) : fun_(std::forward<T>(fun)) {}\r\n\r\n  template <class... Args>\r\n  decltype(auto) operator()(Args &&...args) {\r\n    return fun_(std::ref(*this), std::forward<Args>(args)...);\r\n  }\r\n};\r\n\r\ntemplate <class Fun>\r\ndecltype(auto) y_combinator(Fun &&fun) {\r\n  return y_combinator_result<std::decay_t<Fun>>(std::forward<Fun>(fun));\r\n}\r\n}  // namespace std\r\n\r\n#define DEBUG(x) cerr << #x << \": \" << x << '\\n'\r\ntemplate <typename A, typename B>\r\nostream &operator<<(ostream &os, const pair<A, B> &p) {\r\n  return os << '(' << p.first << \", \" << p.second << ')';\r\n}\r\ntemplate <typename T_container, typename T = typename enable_if<\r\n                                    !is_same<T_container, string>::value,\r\n                                    typename T_container::value_type>::type>\r\nostream &operator<<(ostream &os, const T_container &v) {\r\n  os << '[';\r\n  string sep;\r\n  for (const T &x : v) os << sep << x, sep = \", \";\r\n  return os << ']';\r\n}\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n// }}}\r\n\r\nconst int maxn = 5e5+5;\r\nint N;\r\nvector<int> adj[maxn];\r\n\r\nstruct Bag {\r\n  vector<int> v;\r\n  multiset<int> s;\r\n\r\n  void update(int i, int x) {\r\n    auto it = s.find(v[i]);\r\n    assert(it != s.end());\r\n    s.erase(it);\r\n    v[i] ^= x;\r\n    s.insert(v[i]);\r\n  }\r\n\r\n  void insert(int x) {\r\n    v.push_back(x);\r\n    s.insert(x);\r\n  }\r\n\r\n  int mex(int x) {\r\n    while (s.count(x)) x++;\r\n    return x;\r\n  }\r\n};\r\nusing T = Bag;\r\n\r\nvoid merge(T& a, T& b) {\r\n  F0R(i, sz(a.v)) {\r\n    a.update(sz(a.v)-1-i, b.v[sz(b.v)-1-i]);\r\n  }\r\n  b.v.clear(); b.s.clear();\r\n}\r\n\r\nint mex(vector<int> v) {\r\n  sort(all(v)); v.erase(unique(all(v)), v.end());\r\n  F0R(i, sz(v)) if (v[i] != i) return i;\r\n  return sz(v);\r\n}\r\n\r\n\r\nint depth[maxn];\r\nvoid prep(int i) {\r\n  depth[i] = adj[i].empty() ? 1 : 1e9;\r\n  for (int j: adj[i]) {\r\n    prep(j);\r\n    ckmin(depth[i], depth[j]+1);\r\n  }\r\n}\r\n\r\nT* dfs(int i) {\r\n  T* v = new T;\r\n  v->insert(0);\r\n  sort(all(adj[i]), [&](auto a, auto b) { return depth[a] < depth[b]; });\r\n  F0R(idx, sz(adj[i])) {\r\n    int j = adj[i][idx];\r\n    auto vj = dfs(j);\r\n    if (idx == 0) v = vj;\r\n    else merge(*v, *vj);\r\n  }\r\n\r\n  if (sz(adj[i]) == 1) {\r\n    v->insert(v->mex(v->v.back()));\r\n  }\r\n  else {\r\n    v->insert(mex(v->v));\r\n  }\r\n\r\n  return v;\r\n}\r\n\r\nvoid solve() {\r\n  cin >> N;\r\n  FOR(i, 0, N+1) adj[i].clear();\r\n  FOR(i, 1, N+1) {\r\n    int p; cin >> p;\r\n    adj[p].push_back(i);\r\n  }\r\n  prep(0);\r\n  int ans = 0;\r\n  for (int i: adj[0]) {\r\n    auto v = dfs(i);\r\n    ans ^= v->v.back();\r\n  }\r\n  cout << (ans ? \"YES\" : \"NO\") << '\\n';\r\n}\r\n\r\nint main() {\r\n  ios_base::sync_with_stdio(false); cin.tie(NULL);\r\n  int T; cin >> T;\r\n  while (T--) solve();\r\n}\r\n"
}