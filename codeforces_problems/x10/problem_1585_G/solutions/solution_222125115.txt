{
    "id": 222125115,
    "contestId": 1585,
    "creationTimeSeconds": 1694025571,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1585,
        "index": "G",
        "name": "Poachers",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 2500,
        "tags": [
            "dp",
            "games",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 1585,
        "members": [
            {
                "handle": "jiangly"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1639322100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 311,
    "memoryConsumedBytes": 156364800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing i64 = long long;\r\n\r\nvoid solve() {\r\n    int n;\r\n    std::cin >> n;\r\n    \r\n    std::vector<int> p(n);\r\n    int ans = 0;\r\n    std::vector<std::vector<int>> adj(n);\r\n    for (int i = 0; i < n; i++) {\r\n        std::cin >> p[i];\r\n        p[i]--;\r\n        if (p[i] != -1) {\r\n            adj[p[i]].push_back(i);\r\n        }\r\n    }\r\n    \r\n    std::vector<int> cnt(n + 1);\r\n    int cur = 0;\r\n    auto dfs = [&](auto self, int x) -> std::vector<int> {\r\n        std::vector<int> a{0};\r\n        cnt[0]++;\r\n        for (auto y : adj[x]) {\r\n            if (a.size() == 1) {\r\n                cnt[0]--;\r\n                a = self(self, y);\r\n            } else {\r\n                for (auto v : a) {\r\n                    if (v <= n) {\r\n                        cnt[v]--;\r\n                    }\r\n                }\r\n                cur = 0;\r\n                auto b = self(self, y);\r\n                for (auto v : b) {\r\n                    if (v <= n) {\r\n                        cnt[v]--;\r\n                    }\r\n                }\r\n                cur = 0;\r\n                if (a.size() < b.size()) {\r\n                    std::swap(a, b);\r\n                }\r\n                a.erase(a.begin(), a.end() - b.size());\r\n                for (int i = 0; i < a.size(); i++) {\r\n                    a[i] ^= b[i];\r\n                }\r\n                for (auto v : a) {\r\n                    if (v <= n) {\r\n                        cnt[v]++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        while (cnt[cur] > 0) {\r\n            cur++;\r\n        }\r\n        a.push_back(cur);\r\n        cnt[cur]++;\r\n        return std::move(a);\r\n    };\r\n    for (int i = 0; i < n; i++) {\r\n        if (p[i] == -1) {\r\n            auto res = dfs(dfs, i);\r\n            ans ^= res.back();\r\n            for (auto v : res) {\r\n                if (v <= n) {\r\n                    cnt[v]--;\r\n                }\r\n            }\r\n            cur = 0;\r\n        }\r\n    }\r\n    std::cout << (ans ? \"YES\" : \"NO\") << \"\\n\";\r\n}\r\n\r\nint main() {\r\n    std::ios::sync_with_stdio(false);\r\n    std::cin.tie(nullptr);\r\n    \r\n    int t;\r\n    std::cin >> t;\r\n    \r\n    while (t--) {\r\n        solve();\r\n    }\r\n    \r\n    return 0;\r\n}\r\n"
}