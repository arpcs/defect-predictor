{
    "id": 226324539,
    "contestId": 1585,
    "creationTimeSeconds": 1696263007,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1585,
        "index": "G",
        "name": "Poachers",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 2500,
        "tags": [
            "dp",
            "games",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 1585,
        "members": [
            {
                "handle": "prvocislo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1639322100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 2150400,
    "source": "#include <algorithm>\r\n#include <deque>\r\n#include <iomanip>\r\n#include <iostream>\r\n#include <map>\r\n#include <queue>\r\n#include <random>\r\n#include <set>\r\n#include <string>\r\n#include <vector>\r\ntypedef long long ll;\r\nusing namespace std;\r\n\r\nconst int maxn = 5e5 + 5;\r\nint f[maxn];\r\nvector<vector<int> > g;\r\nint mex(vector<int> v)\r\n{\r\n    for (int x : v) f[x]++;\r\n    int i = 0;\r\n    while (f[i]) i++;\r\n    for (int x : v) f[x]--;\r\n    return i;\r\n}\r\nvector<int> dfs(int u)\r\n{\r\n    vector<int> a;\r\n    for (int v : g[u])\r\n    {\r\n        vector<int> b = dfs(v);\r\n        if (a.empty())\r\n        {\r\n            a = b;\r\n            continue;\r\n        }\r\n        while (a.size() > b.size()) a.pop_back();\r\n        while (a.size() < b.size()) b.pop_back();\r\n        for (int i = 0; i < a.size(); i++) a[i] ^= b[i];\r\n    }\r\n    a.insert(a.begin(), mex(a));\r\n    return a;\r\n}\r\nint main()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    int t;\r\n    cin >> t;\r\n    while (t--)\r\n    {\r\n        int n;\r\n        cin >> n, n++;\r\n        g.assign(n, {});\r\n        vector<int> p(n);\r\n        for (int i = 1; i < n; i++) cin >> p[i], g[p[i]].push_back(i);\r\n        vector<int> v = dfs(0);\r\n        cout << (v[1] ? \"YES\\n\" : \"NO\\n\");\r\n    }\r\n    return 0;\r\n}"
}