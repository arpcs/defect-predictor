{
    "id": 226237831,
    "contestId": 1769,
    "creationTimeSeconds": 1696218959,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1769,
        "index": "A",
        "name": "\u0423\u0437\u043a\u0430\u044f \u0434\u043e\u0440\u043e\u0433\u0430",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "*special",
            "math"
        ]
    },
    "author": {
        "contestId": 1769,
        "members": [
            {
                "handle": "dungquytrinh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1670058000
    },
    "programmingLanguage": "JavaScript",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "\"use strict\";\r\n\r\nconst readline = require('readline');\r\n\r\nconst rl = readline.createInterface({\r\n  input: process.stdin,\r\n  output: process.stdout\r\n});\r\n\r\n// Function to solve the problem\r\nfunction narrowRoad(n, distances) {\r\n  for (let i = 0; i < n; i++) {\r\n    const speed = i + 1;\r\n    const timeToReach = 1;\r\n\r\n    // Calculate the distance each scooter will be after one second\r\n    for (let j = 0; j < n; j++) {\r\n      if (j < i) {\r\n        distances[j] -= speed * timeToReach;\r\n      } else if (j > i) {\r\n        distances[j] += speed * timeToReach;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Return the final distances after one second\r\n  return distances;\r\n}\r\n\r\n// Read input\r\nlet n;\r\nlet distances = [];\r\n\r\nrl.question('', (nInput) => {\r\n  n = parseInt(nInput);\r\n\r\n  rl.on('line', (line) => {\r\n    distances.push(parseInt(line));\r\n\r\n    if (distances.length === n) {\r\n      // Call the function and output the result\r\n      const result = narrowRoad(n, distances);\r\n      result.forEach(distance => console.log(distance));\r\n\r\n      rl.close();\r\n    }\r\n  });\r\n});\r\n"
}