{
    "id": 236341312,
    "contestId": 1907,
    "creationTimeSeconds": 1702039323,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1907,
        "index": "E",
        "name": "Good Triples",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "combinatorics",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1907,
        "members": [
            {
                "handle": "h3lic0pt3r"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1701787500
    },
    "programmingLanguage": "Python 3",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "import math as math\r\ndef findcomb(x, y):\r\n  num = math.factorial(x)\r\n  den = math.factorial(x - y)\r\n  den = math.factorial(y) * den\r\n  comb = num / den\r\n  return comb\r\n\r\nif __name__ == \"__main__\":\r\n    for t in range(int(input())):\r\n        n = input()\r\n        prod =1\r\n        arr = [int(d) for d in str(n)]\r\n        for i in arr:\r\n            prod = prod*findcomb(arr[i]+2,arr[i])\r\n        print(int(prod))"
}