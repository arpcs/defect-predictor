{
    "id": 235256670,
    "contestId": 1020,
    "creationTimeSeconds": 1701449509,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1020,
        "index": "B",
        "name": "Badge",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1000,
        "tags": [
            "brute force",
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 1020,
        "members": [
            {
                "handle": "bkifhr8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1533994500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 2457600,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\nusing ll = long long;\nusing ull = unsigned long long;\nusing ld = long double;\nusing vll = vector<ll>;\nusing pll = pair<ll, ll>;\nusing vvll = vector<vll>;\nusing vi = vector<int>;\nusing vvi = vector<vi>;\nusing ii = pair<int, int>;\nusing vii = vector<ii>;\nusing vs = vector<string>;\nusing edge = tuple<int, int, int>;\n\nvector<ii> dirs { { -1, 0 }, { 1, 0 }, { 0, -1 }, { 0, 1 }, { -1, -1 }, { -1, 1 }, { 1, -1 }, { 1, 1 } };\nvector<string> directions {{ \"D\" }, { \"U\" }, { \"L\" }, { \"R\" }, { \"LD\" }, { \"RD\" }, { \"LU\" }, { \"RU\" }};\nmap<ii, string> map_dirs {{ dirs[0], \"D\" }, { dirs[1], \"U\" }, { dirs[2], \"L\" }, { dirs[3], \"R\" }, { dirs[4], \"LD\" }, { dirs[5], \"RD\" }, { dirs[6], \"LU\"}, { dirs[7], \"RU\" }};\n\nconst ll MAX { 200001 };\nconst ll oo = 1e18;\nbitset<MAX> visited;\n\nvvll adj (MAX);\n\nll dfs (ll u) {\n    if ( visited[u] ) return u;\n\n    visited[u] = true;\n\n    // cout << u << \" -> \";\n\n    ll res = 0;\n    for ( auto v : adj[u] ) res = dfs(v);\n\n    return res;\n}\n\nint main(void) {\n    // ios::sync_with_stdio(0);\n    // cin.tie(0);\n    // cout.tie(0);\n    \n    ll N, aux;\n    \n    cin >> N;\n\n    adj = vvll (N + 1);\n    vll dist(N + 1, MAX);\n\n    for ( auto i = 1; i <= N; ++i ) {\n        cin >> aux;\n\n        adj[i].push_back(aux);\n    }\n\n    for ( auto i = 1; i <= N; ++i ) {\n        visited = bitset<MAX> ();\n        cout << dfs(i) << ( i == N ? \"\\n\" : \" \");\n    }\n\n    \n    return 0;\n}\n\t\t   \t\t \t  \t\t \t  \t  \t \t"
}