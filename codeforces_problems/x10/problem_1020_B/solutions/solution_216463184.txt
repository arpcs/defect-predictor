{
    "id": 216463184,
    "contestId": 1020,
    "creationTimeSeconds": 1690728700,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1020,
        "index": "B",
        "name": "Badge",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1000,
        "tags": [
            "brute force",
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 1020,
        "members": [
            {
                "handle": "sid15_30"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1533994500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 819200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long int ll;\r\ntypedef long double ld;\r\ntypedef unordered_map<ll,ll> umpp;\r\ntypedef map<ll,ll> mpp;\r\ntypedef vector<pair<ll,ll>> vp;\r\ntypedef vector<ll> vl;\r\ntypedef vector<vector<ll>> vv;\r\nconst ll N=1e5+10;\r\nconst ll mod=1e9+7;\r\n#define rsort(v) sort(v.rbegin(),v.rend());\r\n#define fsort(v) sort(v.begin(),v.end());\r\n#define pb push_back;\r\n#define make_pair pair;\r\n#define test int t; cin>>t; while(t--);\r\n/*vector<ll>g[N];\r\nvector<bool>vis(N+1,false),viss(N+1,false);\r\nvoid dfs(ll vertex)\r\n{\r\n//take action on vertex just after entering the vertex\r\nif(vis[vertex])\r\nreturn;\r\nvis[vertex]=true;\r\nfor(ll child:g[vertex])\r\n{\r\n//take action on child just after enetering the child\r\ndfs(child);\r\n//take action on child just before exitting the child\r\n}\r\n//take action on vertex just before exitting the vertex\r\n}\r\nbool check_cycle_dfs(ll vertex,ll parent)\r\n{\r\nviss[vertex]=true;\r\nbool isLoopExists=false;\r\nfor(ll child:g[vertex])\r\n{\r\nif(viss[child]&&child==parent)\r\ncontinue;\r\nif(viss[child]&&child!=parent)\r\nreturn true;\r\nisLoopExists|=check_cycle_dfs(child,vertex);\r\n}\r\nreturn isLoopExists;\r\n}\r\n*/\r\nll Binexp(ll a, ll b){\r\nif(b==0){\r\nreturn 1;\r\n}\r\nif(b%2==0){\r\nreturn Binexp(a,b/2) * Binexp(a,b/2);\r\n}\r\nelse{\r\nreturn a * Binexp(a,b/2) * Binexp(a,b/2);\r\n}\r\n}\r\nint upper(int a[],int n,int key)\r\n{\r\nint hi=n-1,lo=0;\r\nint mid=0;\r\nwhile(hi-lo>1)\r\n{\r\nmid=lo+(hi-lo)/2;\r\nif(a[mid]<=key)\r\nlo=mid+1;\r\nelse\r\nhi=mid;\r\n}\r\nif(a[lo]>key)\r\nreturn lo;\r\nif(a[hi]>key)\r\nreturn hi;\r\nreturn -1;\r\n}\r\nbool is_prime(int n){\r\nif(n==1){\r\nreturn 0;\r\n}\r\nbool b = true;\r\nfor(int i=2;i*i<=n;i++){\r\nif(n%i==0){\r\nb = false;\r\nbreak;\r\n}\r\n}\r\nreturn b;\r\n}\r\nvector<bool> isPrime(N,1);\r\nvector<int> lp(N,0),hp(N,0);\r\nvector<int> prime_factors;\r\nvoid sieve(){\r\nisPrime[0]=isPrime[1]=false;\r\nfor(int i=2;i<N;i++){\r\nif(isPrime[i]==true){\r\nlp[i]=i;\r\nhp[i]=i;\r\nfor(int j=2*i;j<N;j += i){\r\nisPrime[j]=false;\r\nhp[j]=i;\r\nif(lp[j]==0){\r\nlp[j]=i;\r\n}\r\n}\r\n}\r\n}\r\n}\r\nvector<int> primefactors(int n){\r\nvector<int> prime_factors;\r\nwhile(n>1){\r\nint prime_factor=hp[n];\r\nwhile(n%prime_factor==0){\r\nn /= prime_factor;\r\nprime_factors.push_back(prime_factor);\r\n}\r\n}\r\nreturn prime_factors;\r\n}\r\n// whenever doing modular subtraction , do it like- (x%mod-y%mod+mod)%mod\r\nll dfs(ll vertex,vl &vis,vl &v)\r\n{\r\n  if(vis[vertex]==1)\r\n  return vertex;\r\n  vis[vertex]=1;\r\n  dfs(v[vertex],vis,v);\r\n}\r\nint main()\r\n{\r\n  int n;\r\n  cin>>n;\r\n  vl v(n+1,0);\r\n  for(int i=1;i<=n;i++)\r\n  cin>>v[i];\r\n  for(int i=1;i<=n;i++)\r\n  {\r\n    vl vis(n+1,-1);\r\n    cout<<dfs(i,vis,v)<<\" \";\r\n  }\r\n}"
}