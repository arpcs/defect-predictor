{
    "id": 228340624,
    "contestId": 1005,
    "creationTimeSeconds": 1697396971,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1005,
        "index": "D",
        "name": "Polycarp and Div 3",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1005,
        "members": [
            {
                "handle": "Eligah"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1531150500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 25,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 26112000,
    "source": "//Destiny is all\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\n#define F first\r\n#define S second\r\n#define PI 3.14159265\r\n#define all(v) v.begin(),v.end()\r\n#define  lla(v) v.rbegin(),v.rend()\r\n#define lld long double\r\n#define fix(n) cout << fixed << setprecision(n);\r\nll gcd(ll a, ll b){if (b == 0) return a; return gcd(b, a % b);}\r\nll lcm(ll a, ll b) { return a / gcd(a, b) * b; }\r\nvoid Klaus_() {\r\n    // freopen(\"icecream.in\", \"r\", stdin);\r\n    //    freopen(\"out.txt\", \"w\", stdout);\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr), cout.tie(nullptr);\r\n}\r\nint dx[] = { 0, 0, 1, -1, 1, 1, -1, -1 };\r\nint dy[] = { 1, -1, 0, 0, 1, -1, 1, -1 };\r\nint DX[] = {2 , 2 , -2 , -2 , 1 , 1 , -1 , -1};\r\nint DY[] = {-1 , 1 , -1 , 1 , 2 , -2 , 2 , -2};\r\nconst int OO = 0x3f3f3f3f;\r\nconst ll Mod = 1e9 + 7;\r\nconst int N = 2e5  +  9 , M = 1<<15;\r\ntemplate<typename T>\r\nistream& operator >> (istream &in ,  vector<T> &p) {\r\n    for (auto &it : p) { in >> it; }\r\n    return in;\r\n}\r\ntemplate<typename T>\r\nostream& operator << (ostream &out ,  vector<T> &p) {\r\n    for (auto &it: p) { out << it << ' '; }\r\n    cout << '\\n';\r\n    return out;\r\n}\r\nint dp[N][4][2];\r\nint n;\r\nstring s;\r\nint solve(int i , int cur , bool f) {\r\n    if (i == n)return f;\r\n    int &ret = dp[i][cur][f];\r\n    if (~ret)return ret;\r\n    ret = solve(i + 1, (int(s[i] - '0')) % 3, (int(s[i] - '0')) % 3 == 0) + f;\r\n    ret = max(ret, solve(i + 1, (cur * 10 + int(s[i] - '0')) % 3, (cur * 10 + int(s[i] - '0')) % 3 == 0));\r\n    return ret;\r\n}\r\nint main() {\r\n    Klaus_();\r\n    int t = 1, id = 1;\r\n    // cin >> t;\r\n    while (t--) {\r\n        cin >> s;\r\n        n = s.size();\r\n        memset(dp, -1, sizeof dp);\r\n        cout << solve(0, 0, 0) << '\\n';\r\n    }\r\n}"
}