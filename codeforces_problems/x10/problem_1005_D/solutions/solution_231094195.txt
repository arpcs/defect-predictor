{
    "id": 231094195,
    "contestId": 1005,
    "creationTimeSeconds": 1699003620,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1005,
        "index": "D",
        "name": "Polycarp and Div 3",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1005,
        "members": [
            {
                "handle": "ashibh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1531150500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 25,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 29388800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define lli long long int\r\n#define yy cout << \"YES\" << endl\r\n#define nn cout << \"NO\" << endl\r\n#define pb push_back\r\n#define ff first\r\n#define ss second\r\n#define pll pair<lli, lli>\r\n#define ll 1ll*\r\n\r\nvoid oj() {\r\n#ifndef ONLINE_JUDGE\r\n\tfreopen(\"input.txt\", \"r\", stdin);\r\n\tfreopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n\r\n}\r\n\r\nlong long int inf = 1000000007;\r\n#define all(x) x.begin(), x.end()\r\nconst char nl = '\\n';\r\nvoid ipv(vector<lli>&v, lli n) {\r\n\tfor (lli i = 0; i < n; i++)cin >> v[i];\r\n}\r\nvoid opv(vector<lli>&v) {\r\n\tfor (lli i = 0; i < v.size(); i++)cout << v[i] << \" \";\r\n}\r\nvoid ipvm(vector<lli>&v, lli n, map<lli, lli>&mp) {\r\n\tfor (lli i = 0; i < n; i++)mp[v[i]]++;\r\n}\r\nvoid opvm(map<lli, lli>mp) {\r\n\tfor (auto it : mp)cout << it.first << \" \" << it.second << \" \";\r\n\tcout << nl;\r\n}\r\nvoid ips(string s) {\r\n\tcin >> s;\r\n}\r\nlli gcd(lli a, lli b)\r\n{\r\n\tif (a == 0)\r\n\t\treturn b;\r\n\treturn gcd(b % a, a);\r\n}\r\nlli lcm(lli a, lli b)\r\n{\r\n\treturn (a / gcd(a, b)) * b;\r\n}\r\nbool ispow2(lli x) {\r\n\treturn (x & (x - 1)) == 0;\r\n}\r\n\r\nbool iskthset(lli n, lli k) {\r\n\treturn ((n >> (k)) & 1) > 0;\r\n}\r\nvoid setK(lli &n, lli k) {\r\n\tlli t = n;\r\n\tt = t | (1 << k);\r\n\tn = t;\r\n}\r\nvoid unsetK(lli &n, lli k) {\r\n\tlli t = n;\r\n\tt = t & ~(1 << k);\r\n\tn = t;\r\n}\r\nvoid toggleKbit(lli &n, lli k) {\r\n\tlli t = n;\r\n\tt = (t) ^ (1 << (k));\r\n\tn = t;\r\n\r\n}\r\n// n^x\r\nlli binexpo(lli n, lli x) {\r\n\tlli res = 1;\r\n\twhile (x > 0) {\r\n\t\tif (x & 1)\r\n\t\t\tres = res * n;\r\n\t\tn = n * n;\r\n\t\tx >>= 1;\r\n\t}\r\n\treturn res;\r\n}\r\n// (n^x) % m\r\n\r\nlli binexpomod(lli n, lli x, long long m) {\r\n\tn %= m;\r\n\tlli res = 1;\r\n\twhile (x > 0) {\r\n\t\tif (x & 1)\r\n\t\t\tres = res * n % m;\r\n\t\tn = n * n % m;\r\n\t\tx >>= 1;\r\n\t}\r\n\treturn res;\r\n}\r\n\r\n\r\nbool isPrm(lli n)\r\n{\r\n\r\n\tif (n <= 1)\r\n\t\treturn false;\r\n\tfor (lli i = 2; i <= sqrt(n); i++)\r\n\t\tif (n % i == 0)\r\n\t\t\treturn false;\r\n\r\n\treturn true;\r\n}\r\nbool func() {\r\n\r\n}\r\nlli bs(/*...*/ lli hi, lli lo, lli n) {\r\n\tlli ans = -1;\r\n\twhile (lo <= hi ) {\r\n\t\tlli mid = lo + (hi - lo + 1) / 2;\r\n\t\tbool ss = func();\r\n\t\tif (ss) {\r\n\t\t\tans = mid, hi = mid - 1;\r\n\t\t}\r\n\r\n\t\telse lo = mid + 1;\r\n\t}\r\n\treturn ans;\r\n\r\n\r\n}\r\nint numberofset(int n) {\r\n\treturn\r\n\t    __builtin_popcount(n);\r\n//if X is an integer\r\n\r\n}\r\nlli numberofsetll(lli n) {\r\n\treturn\r\n\t    __builtin_popcountll(n);\r\n//if X is a long long\r\n\r\n}\r\n\r\n\r\n//\r\n//\r\n//\r\n//\r\n//\r\nconst lli N = 2e5 + 7;\r\nlli dp[N][3][2];\r\nlli curr = 0;\r\nstring str;\r\n\r\nlli calcc( lli in, lli num, lli ff) {\r\n\tif (in == str.size()) {\r\n\t\treturn (num == 0 && ff == 1);\r\n\t}\r\n\tif (dp[in][num][ff] != -1) {\r\n\t\treturn dp[in][num][ff];\r\n\t}\r\n\tif (ff != 1) {\r\n\t\tif (str[in] != '0') {\r\n\t\t\tdp[in][num][ff] = max(calcc( in + 1, (num + (str[in] - '0')) % 3, 1), (( str[in] - '0') % 3 == 0) + calcc( in + 1, 0, 0));\r\n\t\t}\r\n\t\telse dp[in][num][ff] = 1 + calcc( in + 1, 0, 0);\r\n\t} else {\r\n\t\tdp[in][num][ff] = max(calcc( in + 1, (num + (str[in] - '0')) % 3, 1), (( num + str[in] - '0') % 3 == 0) + calcc( in + 1, 0, 0));\r\n\r\n\t}\r\n\treturn dp[in][num][ff];\r\n\r\n\r\n\r\n\r\n}\r\nvoid cf()\r\n{\r\n\tmemset(dp, -1, sizeof(dp));\r\n\tlli f = 0, e = 2, o = 0;\r\n\tcin >> str;\r\n\tcout << calcc(0, 0, 0) << nl;\r\n\r\n\r\n\r\n}\r\n\r\n\r\nint main()\r\n{\r\n\r\n\tios_base::sync_with_stdio(0);\r\n\tcin.tie(0);\r\n\tcout.tie(0);\r\n\toj();\r\n\tlli t = 1;\r\n\t// cin >> t;\r\n\twhile (t--)\r\n\t{\r\n\t\tcf();\r\n\t}\r\n}\r\n//-----------------------------------comments----------------------------------------------------------------------------\r\n//lb(x)= ele eq or greater then x (first occ)\r\n//ub(x)= ele greater then x\r\n// A + B = (A xor B) + 2 * (A & B)\r\n// A + B = (A | B) + (A & B)\r\n// X << k) gives X multiplied by (2^k)\r\n// (X >> k) gives X divided by (2^k)\r\n\r\n"
}