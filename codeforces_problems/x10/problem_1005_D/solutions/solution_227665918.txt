{
    "id": 227665918,
    "contestId": 1005,
    "creationTimeSeconds": 1697023624,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1005,
        "index": "D",
        "name": "Polycarp and Div 3",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1005,
        "members": [
            {
                "handle": "HideInTheSea"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1531150500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 25,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1331200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nusing LL = long long;\r\nint main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    string s;\r\n    cin >> s;\r\n    int len = s.size();\r\n    s = ' ' + s;\r\n    vector<int> dp(len + 1), last(3, -1);\r\n    last[0] = 0;\r\n    int sum = 0;\r\n    for (int i = 1; i <= len; i++) {\r\n        int x = s[i] - '0';\r\n        sum = (sum + x) % 3;\r\n        dp[i] = dp[i - 1];\r\n        if (last[sum] == -1) {\r\n            last[sum] = i;\r\n        } else {\r\n            dp[i] = max(dp[i], dp[last[sum]] + 1);\r\n            last[sum] = i;\r\n        }\r\n    }\r\n    cout << dp[len] << '\\n';\r\n    return 0;\r\n}"
}