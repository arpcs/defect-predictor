{
    "id": 229111362,
    "contestId": 1005,
    "creationTimeSeconds": 1697915108,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1005,
        "index": "D",
        "name": "Polycarp and Div 3",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1005,
        "members": [
            {
                "handle": "GGOSHAB"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1531150500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 2355200,
    "source": "    #ifdef ONPC\r\n        #define _GLIBCXX_DEBUG\r\n    #endif\r\n    #include <bits/stdc++.h>\r\n\r\n    #ifndef ONPC\r\n        #pragma GCC optimize(\"Ofast\")\r\n        #pragma GCC target(\"avx2\")\r\n        #pragma GCC target(\"popcnt\")\r\n\r\n        #define cerr if (false) cerr\r\n    #endif\r\n\r\n    #define all(v) v.begin(), v.end()\r\n\r\n    using namespace std;\r\n\r\n    typedef long long ll;\r\n    typedef unsigned long long ull;\r\n\r\n    typedef pair<int, int> Pint;\r\n    typedef pair<ll, ll> Pll;\r\n\r\n    mt19937_64 gen64(chrono::steady_clock::now().time_since_epoch().count());\r\n    inline ll rnd(ll l = LLONG_MIN, ll r = LLONG_MAX) {\r\n        return uniform_int_distribution<ll>(l, r)(gen64);\r\n    }\r\n\r\n    const int mod = 998244353;\r\n\r\n    const ll INF = 1e18;\r\n    const ll inf = 1e9;\r\n\r\n    const int maxn = 2e5 + 10;\r\n\r\n    int dp[maxn][3];\r\n\r\n    void solve() {\r\n        string s;\r\n        cin >> s;\r\n        int n = s.length();\r\n        vector<int> pref(n + 1);\r\n        for (int i = 0; i < n; ++i) {\r\n            pref[i + 1] = (pref[i] + (s[i] - '0')) % 3;\r\n        }\r\n\r\n        memset(dp, 0, sizeof(dp));\r\n\r\n        int mx[3][3] = {};\r\n        for (int i = 0; i < 3; ++i) {\r\n            for (int j = 0; j < 3; ++j) {\r\n                mx[i][j] = -inf;\r\n            }\r\n        }\r\n\r\n        dp[1][(s[0] - '0') % 3] = (s[0] - '0') % 3 == 0;\r\n        mx[pref[1]][(s[0] - '0') % 3] = dp[1][(s[0] - '0') % 3];\r\n        for (int i = 2; i <= n; ++i) {\r\n            // for (int j = 0; j < 3; ++j) {\r\n            //     for (int len = 1; len <= i; ++len) {\r\n            //         // if (len > 1 && s[i - len + 1] == 0) continue;\r\n            //         int segmod = (pref[i] - pref[i - len] + 3) % 3;\r\n            //         dp[i][segmod] = max(dp[i][segmod], dp[i - len][j] + !(segmod));\r\n\r\n            //     }\r\n            // }\r\n            for (int segmod = 0; segmod < 3; ++segmod) {\r\n                for (int j = 0; j < 3; ++j) {\r\n                    int p = (pref[i] - segmod + 3) % 3; \r\n                    dp[i][segmod] = max(dp[i][segmod], mx[p][j] + !(segmod));\r\n                }\r\n            }\r\n            for (int k = 0; k < 3; ++k) {\r\n                mx[pref[i]][k] = max(mx[pref[i]][k], dp[i][k]);    \r\n            }\r\n        }\r\n\r\n        cout << max({dp[n][0], dp[n][1], dp[n][2]}) << '\\n';\r\n    }\r\n\r\n    int main() {\r\n        ios::sync_with_stdio(0);\r\n        cin.tie(0);\r\n\r\n        int t = 1;\r\n        cin >> t;\r\n        while (t--) {\r\n            solve();\r\n        }\r\n\r\n        return 0;\r\n    }"
}