{
    "id": 228754641,
    "contestId": 1005,
    "creationTimeSeconds": 1697695862,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1005,
        "index": "D",
        "name": "Polycarp and Div 3",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1005,
        "members": [
            {
                "handle": "rohan_cs"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1531150500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1331200,
    "source": "#include<bits/stdc++.h>\nint mod = 1e9+7;\n#define ll long long\nusing namespace std;\n\n\nvoid rohan_algo()\n{\n   ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n#ifndef ONLINE_JUDGE\n   freopen(\"input.txt\", \"r\", stdin);\n   freopen(\"output.txt\", \"w\", stdout);\n\n#endif\n}\n\nint gcd(int a, int b)\n{\n if (a == 0)\n  return b;\nreturn gcd(b % a, a);\n}\n\n\nbool isPrime(int n)\n{\n    if (n <= 1)\n        return false;\n \n    for (int i = 2; i <= n / 2; i++)\n        if (n % i == 0)\n            return false;\n \n    return true;\n}\nvoid calc(){  \n\n}\n\nint helper(string &s){\nint n = s.size();   \n  vector<int> v(n);\n  for(int i=0;i<n;i++){\n    v[i] = (s[i]-'0')%3;\n  }\n  int i=0;\n  int ans=0;\n  while(i<n){\n    if(v[i]==0){\n       i++;\n       ans++;\n    }else if((i+1<n)&&((v[i]==1&&v[i+1]==2)||(v[i]==2&&v[i+1]==1)))\n    {\n        i+=2;\n        ans++;\n    }else if(i+2<n&&(v[i]==1&&v[i+1]==1&&v[i+2]==1)){\n        i+=3;\n        ans++;\n    }else{\n        i++;\n    }\n  }\n  return ans;\n \n\n}\n\nvoid solve(){\nstring s;cin>>s;\ncout<<helper(s);\n\n}\n\n\n\n\nint main()\n{\n rohan_algo();\n // int t;cin>>t;\n // while(t--)\n solve();\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n \n\n\n*/\n\n\n\n"
}