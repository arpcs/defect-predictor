{
    "id": 229944612,
    "contestId": 1005,
    "creationTimeSeconds": 1698369933,
    "relativeTimeSeconds": 6333,
    "problem": {
        "contestId": 1005,
        "index": "D",
        "name": "Polycarp and Div 3",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1005,
        "members": [
            {
                "handle": "xiaoping3418"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1698363600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <numeric>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\n#include <set>\r\n#include <map>\r\n#include <stack>\r\n#include <queue>\r\n\r\n#include <iomanip>\r\n// for std::cout << std::setprecision(9);\r\nusing namespace std;\r\n\r\nvoid solve();\r\nint32_t main() {\r\n    ios_base::sync_with_stdio(0);cin.tie(0);\r\n\r\n    //int32_t t;\r\n\r\n    //cin >> t;\r\n    //while (t--) {\r\n    solve();\r\n    //}\r\n\r\n    return 0;\r\n}\r\n\r\n\r\nvoid solve() {\r\n    string s;\r\n    cin >> s;\r\n\r\n\tint32_t n = s.size();\r\n    \r\n    vector<int32_t> a(n);\r\n\r\n    for (int i = 0; i < n; ++i) {\r\n        a[i] = s[i] - '0';\r\n    }\r\n\r\n    vector<stack<int32_t>> sk(3);\r\n    vector<int32_t> dp(n, 0);\r\n\r\n    for (int i = 0; i < n; ++i) {\r\n        int32_t k = a[i] % 3;\r\n\r\n        if (k == 0) dp[i] = max(dp[i], 1);\r\n\r\n        if (i == 0) {\r\n            sk[k].push(0);\r\n            continue;\r\n        }\r\n\r\n        dp[i] = max(dp[i], dp[i - 1]);\r\n\r\n        while (sk[k].empty() == false) {\r\n            int32_t j = sk[k].top();\r\n            \r\n            if (j + 1 < i && a[j + 1] == 0) {\r\n                sk[k].pop();\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (sk[k].empty()) {\r\n            sk[k].push(i);\r\n            continue;\r\n        }\r\n\r\n        dp[i] = max(dp[i], 1 + dp[sk[k].top()]);\r\n        sk[k].push(i);\r\n    }\r\n\r\n    cout << dp[n - 1];\r\n}"
}