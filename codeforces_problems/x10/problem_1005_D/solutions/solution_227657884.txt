{
    "id": 227657884,
    "contestId": 1005,
    "creationTimeSeconds": 1697020098,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1005,
        "index": "D",
        "name": "Polycarp and Div 3",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "dp",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1005,
        "members": [
            {
                "handle": "Osama.Rafat100"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1531150500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 25,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 23756800,
    "source": "//\"\u0648\u0644\u0648\u0644\u0627 \u0627\u0644\u0623\u0645\u0644 \u0641\u064a \u0628\u0643\u0631\u0629 \u0625\u0646\u064a \u0645\u0645\u0643\u0646 \u0627\u0648\u0635\u0644\u0643 \u0645\u0643\u0646\u062a\u0634 \u0627\u0642\u062f\u0631 \u0627\u0643\u0645\u0644\"\r\n#define _CRT_SECURE_NO_WARNINGS\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\n#define ordered_set tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>\r\nusing namespace std;\r\nvoid Osama_Rafat()\r\n{\r\n    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.in\", \"r\", stdin);\r\n    freopen(\"output.in\", \"w\", stdout);\r\n#endif\r\n}\r\n#define ll long long\r\n#define ld long double\r\n#define all(v) (v).begin(), (v).end()\r\n#define sz(n) int(n.size())\r\n#define endl \"\\n\"\r\n#define dpp(dp, x) memset(dp, x, sizeof(dp))\r\nll gcd(ll a, ll b){ return b == 0 ? a : gcd(b, a % b);}\r\nll lcm(int a, int b) { return a / gcd(a, b) * b; }\r\nconst int mod = 1e9+7;\r\nconst int sz = 2e5 + 7;\r\nconst ll OO = 2e18;\r\nconst int di[] = {1, -1, 0, 0, 1, -1, -1, 1};\r\nconst int dj[] = {0, 0, 1, -1, -1, 1, -1, 1};\r\n//**************** THINK TWICE .\u0647\u0646\u0644\u064a\u0633\u0647\u0627. CODE ONCE ******************\r\n//-----------------------------------------------------------//\r\n// \u0645\u0647\u0645\u0627 \u0627\u0644\u062f\u0646\u064a\u0627 \u0625\u062a\u0646\u064a\u0644\u062a \u0636\u0644\u0645\u062a \u0644\u0627\u0632\u0645 \u064a\u0628\u0642\u0649 \u0639\u0646\u062f\u0643 \u0632\u0641\u062a \u0623\u0645\u0644 \u0648 \u062a\u0639\u0631\u0641 \u0625\u0646 \u0641\u064a \u0646\u0648\u0631 \u0641\u064a \u0623\u062e\u0631 \u0623\u0645 \u0627\u0644\u0646\u0641\u0642//\r\n//-----------------------------------------------------------//\r\nbool getBit(int x,int idx){\r\n    return x&(1<<idx);\r\n}\r\nvoid setBit1(int&x,int idx){\r\n    x|=(1<<idx);\r\n}\r\nint setBit0(int x,int idx){\r\n    return x&~(1<<idx);\r\n}\r\nstring s;\r\nint dp[sz][5];\r\nint rec(int i,int rem){\r\n    if(i==sz(s))return 0;\r\n    int&ret=dp[i][rem];\r\n    if(~ret)return ret;\r\n    int x=(s[i]-'0')+rem;\r\n    ret=max(rec(i+1,x%3),rec(i+1,0));\r\n    if(x%3==0)   ret=max(ret,1+rec(i+1,0));\r\n    return ret;\r\n}\r\nvoid  solve() {\r\n  cin>>s;\r\n  dpp(dp,-1);\r\n  cout<<rec(0,0);\r\n}\r\n//^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^//\r\n//**********\u0627\u0647\u0648 \u0628\u0646\u062a\u0646\u064a\u0644 \u0646\u0633\u062a\u0645\u0631 \u0641\u0649 \u0627\u0644\u0633\u0639\u0649 \u0631\u063a\u0645 \u0641\u0642\u062f\u0627\u0646 \u0627\u0644\u0632\u0641\u062a \u0627\u0644\u0634\u063a\u0641**************//\r\n// vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv//\r\nint main()\r\n{\r\n    Osama_Rafat();\r\n    // freopen(\"max-pair.in\", \"r\", stdin);\r\n    int test = 1;\r\n//     cin >> test;\r\n    for (int i = 1; i <= test; i++)\r\n    {\r\n       // cout << \"Case #\" << i << \":\\n\";\r\n        solve();\r\n        //if(i!=test)cout<<endl;\r\n    }\r\n}"
}