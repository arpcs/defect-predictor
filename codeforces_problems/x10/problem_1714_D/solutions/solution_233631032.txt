{
    "id": 233631032,
    "contestId": 1714,
    "creationTimeSeconds": 1700531486,
    "relativeTimeSeconds": 3506,
    "problem": {
        "contestId": 1714,
        "index": "D",
        "name": "Color with Occurrences",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "data structures",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1714,
        "members": [
            {
                "handle": "huakai_nomore"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1700527980
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 204800,
    "source": "#include<algorithm>\r\n#include<iostream>\r\n#include<iomanip>\r\n#include<cstring>\r\n#include<vector>\r\n#include<queue>\r\n#include<map>\r\n#include<set>\r\n\r\n#define int long long\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef pair<int,int> pii;\r\n\r\nconst int N = 4e5 + 10;\r\n\r\n\r\nvoid solve () { \r\n    string s; int n; cin >> s >> n;\r\n    vector<pii> seg;\r\n    map<string, int> id;\r\n    for (int i = 1; i <= n; i++) {\r\n        string p; cin >> p; id[p] = i;\r\n        int l = p.size();\r\n        for (int j = 0; j < s.size(); j++) {\r\n            string t = s.substr(j, l);\r\n            if (t == p) seg.push_back({j + 1, j + l});\r\n        }\r\n    }\r\n    sort(seg.begin(), seg.end());\r\n    // for (auto t: seg) {\r\n    //     cout << t.first << \" \" << t.second << \"\\n\";\r\n    // }\r\n    bool suc = false;\r\n    int st = 1;\r\n    int res = 0;\r\n    vector<pii> ot;\r\n    for (int i = 0; i < seg.size(); i++) {\r\n        int j = i, r = -2e9;\r\n        pii ins = {-1, -1};\r\n        while (j < seg.size() && seg[j].first <= st) {\r\n            if (seg[j].second > r) {\r\n                r = seg[j].second; ins = seg[j];\r\n            }\r\n            ++j;\r\n        }\r\n        if (r < st) {\r\n            cout << \"-1\\n\"; return;\r\n        }\r\n        ++res;\r\n        ot.push_back(ins);\r\n        if (r >= s.size()) {\r\n            suc = true; break;\r\n        }\r\n        st = r + 1;\r\n        i = j - 1;\r\n    }\r\n    if (!suc) {\r\n        cout << \"-1\\n\"; return;\r\n    }\r\n    cout << ot.size() << \"\\n\";\r\n    for (auto t: ot) {\r\n        string fd = s.substr(t.first - 1, (t.second - t.first + 1));\r\n        // cout << \r\n        cout << id[fd] << \" \" << t.first << \"\\n\";\r\n    }\r\n}\r\n\r\nsigned main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    \r\n    int T; \r\n    T = 1;\r\n    cin >> T;\r\n    while (T--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}