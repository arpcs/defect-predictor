{
    "id": 232200542,
    "contestId": 1714,
    "creationTimeSeconds": 1699607848,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1714,
        "index": "D",
        "name": "Color with Occurrences",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "data structures",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1714,
        "members": [
            {
                "handle": "asdvgy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1659364500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define endl '\\n'\r\ntypedef long long LL;\r\ntypedef unsigned long long ULL;\r\ntypedef pair<int,int> PII;\r\nconst int base=13331;\r\nconst int INF=0x3f3f3f3f;\r\n\r\nstruct Node{\r\n\tint first,second,id;\r\n};\r\n\r\nvoid solve(){\r\n\tstring s;cin>>s;\r\n\tint n;cin>>n;\r\n\tvector<Node>seg;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tstring t;cin>>t;\r\n\t\tfor(int j=0;j<s.size();j++){\r\n\t\t\tif(s.substr(j,t.size())==t){\r\n\t\t\t\tseg.push_back({j,(int)j+t.size()-1,i});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tsort(seg.begin(),seg.end(),[&](auto a,auto b){\r\n\t\treturn a.first<b.first;\r\n\t});\r\n\t\r\n\t\r\n\tint l=-1,mr=-1,id=-1,curl=-1;\r\n\tint m=seg.size();\r\n\tvector<PII>res;\r\n\tfor(int i=0;i<m;i++){\r\n\t\tint j=i;\r\n\t\twhile(j<m and seg[j].first<=l+1){\r\n\t\t\tif(seg[j].second>mr)mr=seg[j].second,id=seg[j].id,curl=seg[j].first;\r\n\t\t\tj++;\r\n\t\t}\r\n\t\tif(i==j){//\u8fde\u63a5\u4e0d\u4e0a\r\n\t\t\tcout<<-1<<endl;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tl=mr,mr=-1,res.emplace_back(curl+1,id);\r\n\t\tif(l==s.size()-1)break;\r\n\t\ti=j-1;\r\n\t\t\r\n\t}\r\n\tif(l!=s.size()-1)cout<<-1<<endl;\r\n\telse{\r\n\t\tcout<<res.size()<<endl;\r\n\t\tfor(auto [pos,id]:res)cout<<id<<' '<<pos<<endl;\r\n\t}\r\n\t\r\n}\r\n\r\nint main(){\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0);\r\n\tint T;cin>>T;\r\n\twhile(T--){\r\n\t\tsolve();\r\n\t}\r\n\treturn 0;\r\n}"
}