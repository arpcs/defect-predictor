{
    "id": 230502971,
    "contestId": 1714,
    "creationTimeSeconds": 1698672575,
    "relativeTimeSeconds": 7775,
    "problem": {
        "contestId": 1714,
        "index": "D",
        "name": "Color with Occurrences",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "data structures",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1714,
        "members": [
            {
                "handle": "Light_Cone"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1698664800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define lowbit(x) x&(-x)\r\nusing namespace std;\r\nusing i64 = long long;\r\nusing pii = std::pair<int, int>;\r\nconstexpr int mod = 998244353;\r\nconstexpr int MAXN_32 = 2e9;\r\nconstexpr i64 MAXN_64 = 1e18;\r\n\r\nvoid solve()\r\n{\r\n    int n, m;\r\n    string t;\r\n    cin >> t >> m, n = t.size();\r\n    vector <string> s(m);\r\n    for(int i = 0; i < m; i++) {\r\n        cin >> s[i];\r\n    }\r\n    vector <i64> pre(n + 1), st(n + 1), f(n + 1,MAXN_32);\r\n    for(int i = 0; i < n; i++) {\r\n        for(int j = 0; j < m; j++) {\r\n            if((int)s[j].size() <= i + 1) {\r\n                bool ok = 1;\r\n                for(int k = i - s[j].size() + 1; k <= i; k++) {\r\n                    if(t[k] != s[j][k - i + s[j].size() - 1]) {\r\n                        ok = 0;\r\n                        break;\r\n                    }\r\n                }\r\n                if(ok) {\r\n                    if(i - s[j].size() + 1 == 0) {\r\n                        f[i] = 1;\r\n                        pre[i] = i;\r\n                        st[i] = j;\r\n                    }\r\n                    else if(f[i - s[j].size()]) {\r\n                        if(f[i - s[j].size()] + 1 < f[i]) {\r\n                            f[i] = f[i - s[j].size()] + 1;\r\n                            pre[i] = i;\r\n                            st[i] = j;\r\n                        }\r\n                    }\r\n                    for(int k = i - 1; k >= i - (int)s[j].size() + 1; k--) {\r\n                        if(f[i] < f[k]) {\r\n                            f[k] = f[i];\r\n                            pre[k] = pre[i];\r\n                            st[k] = st[i];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if(f[n - 1] == MAXN_32) {\r\n        cout << \"-1\\n\";\r\n        return ;\r\n    }\r\n    cout << f[n - 1] << \"\\n\";\r\n    int cur = n - 1;\r\n    // cout << pre[5] << \"\\n\";\r\n    while(cur >= 0) {\r\n        int now = pre[cur], op = st[cur];\r\n        cout << op + 1 << \" \" << now + 2 - s[op].size() << \"\\n\";    \r\n        cur = now - s[op].size();\r\n    }\r\n\r\n}\r\n\r\nint main()\r\n{\r\n    std::cin.tie(nullptr)->sync_with_stdio(false);\r\n    int t = 1;\r\n    std::cin >> t;\r\n    while(t--) solve();\r\n    return 0;\r\n}",
    "suggested_categories": [
        "algorithm",
        "dynamic programming",
        "string processing",
        "input/output handling",
        "code optimization",
        "c++ programming",
        "data structures",
        "algorithm complexity",
        "error handling",
        "loop and iteration",
        "variable declaration",
        "standard template library",
        "function definition",
        "conditional statements",
        "bit manipulation",
        "standard input/output",
        "debugging techniques",
        "mathematical operations",
        "code refactoring",
        "performance tuning"
    ]
}