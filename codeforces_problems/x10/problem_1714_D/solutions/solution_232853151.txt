{
    "id": 232853151,
    "contestId": 1714,
    "creationTimeSeconds": 1700050262,
    "relativeTimeSeconds": 3962,
    "problem": {
        "contestId": 1714,
        "index": "D",
        "name": "Color with Occurrences",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "data structures",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1714,
        "members": [
            {
                "handle": "elijjah"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1700046300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef pair<int, int>  PII;\r\nconst int N = 1e5 + 10, M = 1e6 + 10, mod = 1e9 + 7, INF = 1e9 + 7;\r\n//mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\nvoid solve(){\r\n    string s;\r\n    int n;\r\n    cin >> s >> n;\r\n    int len = s.size();\r\n    vector<string> p(n + 1);\r\n    for (int i = 1; i <= n; i++) cin >> p[i];\r\n    vector<PII> q;\r\n    int op = 0, ui = 0;\r\n    for (int i = 0; i < len; i = ui){\r\n        ui = op + 1;\r\n        int l = -1, r = -1;\r\n        for (int j = i; j <= ui; j++){\r\n            for (int k = 1; k <= n; k++){\r\n                int uu = p[k].size();\r\n                string as = s.substr(j, uu);\r\n                if (as == p[k]){\r\n                    if (uu + j - 1 > r) l = k, r = uu + j - 1;\r\n                }\r\n            }\r\n        }\r\n        if (r == -1){\r\n            cout << \"-1\" << endl;\r\n            return;\r\n        }\r\n        else {\r\n            q.push_back({l, r});\r\n            op = r;\r\n            if (op == len - 1){\r\n                cout << q.size() << endl;\r\n                for (auto [a, b] : q) cout << a << \" \" << b << endl;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\nint main(){  \r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0), cout.tie(0);\r\n    int t;\r\n    cin >> t;\r\n    while(t--)\r\n    solve();\r\n}"
}