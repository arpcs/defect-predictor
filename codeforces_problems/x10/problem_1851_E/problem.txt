{
    "contestId": 1851,
    "index": "E",
    "name": "Nastya and Potions",
    "type": "PROGRAMMING",
    "rating": 1500,
    "tags": [
        "dfs and similar",
        "dp",
        "graphs",
        "sortings"
    ],
    "desc": {
        "title": "E. Nastya and Potions",
        "statement": "<p>Alchemist Nastya loves mixing potions. There are a total of $$$n$$$ types of potions, and one potion of type $$$i$$$ can be bought for $$$c_i$$$ coins.</p><p>Any kind of potions can be obtained in no more than one way, by mixing from several others. The potions used in the mixing process will be <span class=\"tex-font-style-bf\">consumed</span>. Moreover, no potion can be obtained from itself through one or more mixing processes.</p><p>As an experienced alchemist, Nastya has an <span class=\"tex-font-style-bf\">unlimited</span> supply of $$$k$$$ types of potions $$$p_1, p_2, \\dots, p_k$$$, but she doesn't know which one she wants to obtain next. To decide, she asks you to find, for each $$$1 \\le i \\le n$$$, the minimum number of coins she needs to spend to obtain a potion of type $$$i$$$ next.</p>",
        "inputSpecification": "<p>The first line of each test contains an integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014 the number of test cases.</p><p>Each test case is described as follows:</p><p>The first line contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le k &lt; n \\le 2 \\cdot 10^5$$$)\u00a0\u2014 the total number of potion types and the number of potion types Nastya already has.</p><p>The second line contains $$$n$$$ integers $$$c_1, c_2, \\dots, c_n$$$ ($$$1 \\le c_i \\le 10^9$$$)\u00a0\u2014 the costs of buying the potions.</p><p>The third line contains $$$k$$$ distinct integers $$$p_1, p_2, \\dots, p_k$$$ ($$$1 \\le p_i \\le n$$$)\u00a0\u2014 the indices of potions Nastya already has an <span class=\"tex-font-style-bf\">unlimited</span> supply of.</p><p>This is followed by $$$n$$$ lines describing ways to obtain potions by mixing.</p><p>Each line starts with the integer $$$m_i$$$ ($$$0 \\le m_i &lt; n$$$)\u00a0\u2014 the number of potions required to mix a potion of the type $$$i$$$ ($$$1 \\le i \\le n$$$).</p><p>Then line contains $$$m_i$$$ distinct integers $$$e_1, e_2, \\dots, e_{m_i}$$$ ($$$1 \\le e_j \\le n$$$, $$$e_j \\ne i$$$)\u00a0\u2014 the indices of potions needed to mix a potion of the type $$$i$$$. If this list is empty, then a potion of the type $$$i$$$ can only be bought.</p><p>It is guaranteed that no potion can be obtained from itself through one or more mixing processes.</p><p>It is guaranteed that the sum of all $$$n$$$ values across all test cases does not exceed $$$2 \\cdot 10^5$$$. Similarly, it is guaranteed that the sum of all $$$m_i$$$ values across all test cases does not exceed $$$2 \\cdot 10^5$$$.</p>",
        "outputSpecification": "<p>For each test case, output $$$n$$$ integers\u00a0\u2014 the minimum number of coins Nastya needs to spend to obtain a potion of each type.</p>",
        "samples": [
            {
                "input": "<div class=\"test-example-line test-example-line-even test-example-line-0\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5 1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">30 8 3 5 10</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 2 4 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">0 </div><div class=\"test-example-line test-example-line-odd test-example-line-1\">0 </div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 3 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">0 </div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">5 143 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">0 </div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 4 1 3 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 4 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 3 5 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 1 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">0 </div><div class=\"test-example-line test-example-line-even test-example-line-4\">4 2</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 1 5 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">2 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3 2 4 3</div><div class=\"test-example-line test-example-line-even test-example-line-4\">0 </div><div class=\"test-example-line test-example-line-even test-example-line-4\">2 2 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 2</div>",
                "output": "\n23 8 0 5 10 \n0 143 0 \n5 0 1 3 4 \n0 0 0 0 \n"
            },
            {
                "input": "<div class=\"test-example-line test-example-line-even test-example-line-0\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">6 3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5 5 4 5 2 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 4 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 2 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 4 1 6</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">4 2 6 1 5</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">0 </div><div class=\"test-example-line test-example-line-odd test-example-line-1\">0 </div><div class=\"test-example-line test-example-line-even test-example-line-2\">6 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 4 4 1 5 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4 6 3 4 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4 6 5 3 4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">0 </div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">0 </div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">0 </div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 1</div>",
                "output": "\n0 0 0 0 0 2 \n0 0 0 0 0 0 \n0 0 \n"
            }
        ],
        "note": "<p>In the first test case of the first sample, it is optimal:</p><ul> <li> Get a potion of the first type by buying and mixing $$$2$$$, $$$4$$$ and $$$5$$$; </li><li> a potion of the second type can only be obtained by purchasing it; </li><li> Nastya already has an unlimited number of potions of the third type; </li><li> a potion of the fourth type is more profitable to buy than to buy and mix other potions; </li><li> a potion of the fifth type can only be obtained by purchasing it. </li></ul>"
    },
    "suggested_categories": [
        "dynamic programming",
        "graph theory",
        "greedy algorithms",
        "optimization",
        "data structures",
        "mathematics",
        "algorithm design",
        "combinatorial optimization",
        "integer programming",
        "network flow",
        "graph algorithms",
        "computational complexity",
        "game theory",
        "divide and conquer",
        "mathematical programming",
        "combinatorics",
        "combinatorial optimization",
        "mathematical modeling",
        "problem solving",
        "numerical algorithms"
    ]
}