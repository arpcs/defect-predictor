{
    "id": 234177990,
    "contestId": 1851,
    "creationTimeSeconds": 1700889887,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1851,
        "index": "E",
        "name": "Nastya and Potions",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1851,
        "members": [
            {
                "handle": "AkA"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1690295700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 17,
    "timeConsumedMillis": 405,
    "memoryConsumedBytes": 31129600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n#define mp make_pair\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n\r\nvoid boost(){\r\n\tios_base::sync_with_stdio(NULL);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n}\r\nint T = 1;\r\nint k, n, c[222222], p[222222], m, x;\r\nll ans[222222];\r\nmap<int, vector<int> > g;\r\nmap<int, bool> have;\r\n\r\nvoid dfs(int v){\r\n    //cout << v << \" heeereee\\n\";\r\n    ans[v] = 0;\r\n\r\n    if(have[v]){\r\n        return;\r\n    }\r\n    if(g[v].empty()){\r\n        ans[v] = c[v];\r\n    }\r\n    for(auto to: g[v]){\r\n        if(ans[to] == -1){\r\n            dfs(to);\r\n        }\r\n        ans[v] += ans[to];\r\n    }\r\n    ans[v] = min(ans[v], ll(c[v]));\r\n\r\n}\r\n\r\nvoid solve(){\r\n    g.clear();\r\n    have.clear();\r\n    cin >> n >> k;\r\n    for(int i = 1; i <= n; i++){\r\n        cin >> c[i];\r\n        ans[i] = -1;\r\n    }\r\n    for(int i = 1; i <= k; i++){\r\n        cin >> p[i];\r\n        have[p[i]] = 1;\r\n    }\r\n    for(int i = 1; i <= n; i++){\r\n        cin >> m;\r\n        for(int j = 1; j <= m; j++){\r\n            cin >> x;\r\n            g[i].pb(x);\r\n        }\r\n    }\r\n    for(int i = 1; i <= n; i++){\r\n        if(ans[i] == -1){\r\n            dfs(i);\r\n        }\r\n        cout << ans[i] << \" \";\r\n    }\r\n    cout << \"\\n\";\r\n\r\n\r\n}\r\n\r\nint main(){\r\n\tboost();\r\n    cin >> T;\r\n    while(T--){\r\n        solve();\r\n    }\r\n\r\n\r\n\treturn 0;\r\n}\r\n\r\n\r\n"
}