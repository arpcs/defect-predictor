{
    "id": 235351500,
    "contestId": 1851,
    "creationTimeSeconds": 1701506825,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1851,
        "index": "E",
        "name": "Nastya and Potions",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1851,
        "members": [
            {
                "handle": "ryuukumar"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1690295700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 17,
    "timeConsumedMillis": 1996,
    "memoryConsumedBytes": 51302400,
    "source": "\r\n/*\r\n * Author  : ryuukumar\r\n * Created : 02/12/2023 13:29:56 \r\n */\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n/* Environment */\r\n#ifdef\tRYUU_PC\r\n#define\tON_RYUU\ttrue\r\n#else\r\n#define\tON_RYUU\tfalse\r\n#endif\r\n\r\n#define int\t\tlong long\r\n\r\n/* Aliases */\r\n#define\tll\t\tlong long\r\n#define\tull\t\tunsigned long long\r\n#define\tvi\t\tvector<int>\r\n#define\tpi\t\tpair<int, int>\r\n#define\tpb\t\tpush_back\r\n\r\n/* Values */\r\n#define\tMOD\t\t998'244'353\r\n\r\n/* Macros */\r\n#define\todd(x)\t\t((x) & 1)\r\n#define\teven(x)\t\t(!((x) & 1))\r\n#define\tpw2(x)\t\t(1 << (x))\r\n#define\tlog2(x)\t\t(31 - __builtin_clz(x))\r\n#define\ttimes(i,n)\tfor (int i=0; i<n; i++)\r\n\r\n#define\tquit(x)\t\t{ cout << x << endl; return; }\r\n#define\tdbg(x)\t\t{ if (ON_RYUU) cerr << \"\\033[1;32m\" << x << \"\\033[0m\" << endl; }\r\n\r\n/* Overloads */\r\ntemplate <typename T> ostream& operator<<(ostream& os, const vector<T>& v) {\r\n\tfor (int i = 0; i < v.size(); i++) os << v[i] << ' '; return os;\r\n}\r\ntemplate <typename T> ostream& operator<<(ostream& os, const pair<T, T>& v) {\r\n\tos << v.first << ' ' << v.second; return os;\r\n}\r\n\r\n// ----------------------------- //\r\n//            SOLUTION           //\r\n// ----------------------------- //\r\n\r\n\r\nint min_cost (vi& min_costs, vector <set<int>>& recipes,\r\n\t\t\t\tvi& costs, set<int>& available, int idx) {\r\n\tif (min_costs[idx] != -1) return min_costs[idx];\r\n\tif (available.count(idx)) {\r\n\t\tmin_costs[idx] = 0;\r\n\t\treturn 0;\r\n\t}\r\n\tif (recipes[idx].size() == 0) {\r\n\t\tmin_costs[idx] = costs[idx];\r\n\t\treturn costs[idx];\r\n\t}\r\n\tint cost = 0;\r\n\tfor (auto c : recipes[idx]) {\r\n\t\tcost += min_cost(min_costs, recipes, costs, available, c);\r\n\t}\r\n\r\n\tmin_costs[idx] = min(cost, costs[idx]);\r\n\treturn min_costs[idx];\r\n}\r\n\r\n\r\nvoid task(int task_number) {\r\n\tdbg (\"\\nTask #\" << task_number);\r\n\r\n\tint n, k; cin >> n >> k;\r\n\tvi costs (n); times (i, n) cin >> costs[i];\r\n\tset<int> available;\r\n\ttimes (i, k) {\r\n\t\tint x; cin >> x;\r\n\t\tavailable.insert(x-1);\r\n\t}\r\n\r\n\tvi min_costs (n, -1);\r\n\tvector <set<int>> recipes (n);\r\n\r\n\ttimes (i, n) {\r\n\t\tint x; cin >> x;\r\n\t\twhile (x--) {\r\n\t\t\tint y; cin >> y;\r\n\t\t\trecipes[i].insert(y-1);\r\n\t\t}\r\n\t}\r\n\r\n\ttimes (i, n) {\r\n\t\tmin_cost(min_costs, recipes, costs, available, i);\r\n\t}\r\n\r\n\tquit (min_costs);\r\n}\r\n\r\nint32_t main() {\r\n\tios::sync_with_stdio(false); cin.tie(0);\r\n\tint t; cin >> t;\r\n\ttimes (i, t) task(i);\r\n\tdbg(\"\\n\\nExecution complete.\");\r\n\treturn 0;\r\n}"
}