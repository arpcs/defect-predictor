{
    "id": 152804099,
    "contestId": 465,
    "creationTimeSeconds": 1649203610,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 465,
        "index": "B",
        "name": "Inbox (100500)",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1000,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 465,
        "members": [
            {
                "handle": "WalrusRamen21"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1410103800
    },
    "programmingLanguage": "PyPy 3",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 2150400,
    "source": "n = int(input())\r\na = list(map(int, input().split()))\r\nstart = 0\r\nwhile start < n and a[start] == 0:\r\n    start += 1\r\nif start == n:\r\n    print(0)\r\n    exit()\r\nans = 1\r\nstart += 1\r\nfocus = True\r\nwhile start < n:\r\n    if focus and a[start] == 1:\r\n        ans += 1\r\n        start += 1\r\n    elif focus and a[start] == 0:\r\n        if start + 1 < n and a[start + 1] == 1:\r\n            start += 2\r\n            ans += 2\r\n        else:\r\n            focus = False\r\n            if start != n-1:\r\n                ans += 1\r\n            start += 1\r\n    else:\r\n        start += 1\r\n        if a[start] == 1:\r\n            focus = True\r\n    # print(start, ans)\r\nprint(ans)\r\n        ",
    "suggested_categories": [
        "algorithmic programming",
        "input handling",
        "looping",
        "conditional statements",
        "variable assignment",
        "list manipulation",
        "code quality",
        "code efficiency",
        "code readability",
        "code optimization",
        "error handling",
        "python programming",
        "numeric computation",
        "array operations",
        "code testing",
        "variable scope",
        "sequential logic",
        "data validation",
        "control flow",
        "code documentation"
    ]
}