{
    "id": 228201950,
    "contestId": 1100,
    "creationTimeSeconds": 1697303405,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1100,
        "index": "E",
        "name": "Andrew and Taxi",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "binary search",
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 1100,
        "members": [
            {
                "handle": "sakurasonic"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1547390100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 16,
    "timeConsumedMillis": 514,
    "memoryConsumedBytes": 5632000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 1e5;\r\nconst int inf = 1e9;\r\nint u[N],w[N],x[N];\r\nint deg[N];\r\nqueue <int> q;\r\nvector <int> e[N];\r\nvector <int> nord;\r\nvector <int> ord;\r\nvector <int> ans;\r\nint pos[N];\r\nint main(){\r\n    int n,m;\r\n    cin>>n>>m;\r\n    for(int i = 0;i < m;i++){\r\n        cin>>u[i]>>w[i]>>x[i];\r\n        u[i]--;\r\n        w[i]--;\r\n    }\r\n    int l = 0,r = inf;\r\n    while(l != r){\r\n        int mij = (l + r)/2;\r\n        for(int i = 0;i < m;i++){\r\n            if(x[i] > mij){\r\n                e[u[i]].push_back(w[i]);\r\n                deg[w[i]]++;\r\n                //cout<<u[i]<<' '<<w[i]<<'\\n';\r\n            }\r\n        }\r\n        for(int i = 0;i < n;i++){\r\n            if(!deg[i])q.push(i);\r\n        }\r\n        int cnt = 0;\r\n        ord.clear();\r\n        while(!q.empty()){\r\n            int id = q.front();\r\n            ord.push_back(id);\r\n            //cout<<id<<' ';\r\n            cnt++;\r\n            q.pop();\r\n            for(auto i:e[id]){\r\n                deg[i]--;\r\n                if(!deg[i])q.push(i);\r\n            }\r\n        }\r\n        for(int i = 0;i < n;i++){\r\n            deg[i] = 0;\r\n            e[i].clear();\r\n        }\r\n        //cout<<cnt<<' '<<mij<<'\\n';\r\n        if(cnt == n){\r\n            r = mij;\r\n            nord = ord;\r\n        }else l = mij + 1;\r\n    }\r\n    cout<<l<<' ';\r\n    for(int i = 0;i < n;i++){\r\n        pos[nord[i]] = i;\r\n    }\r\n    for(int i = 0;i < m;i++){\r\n        if(pos[u[i]] > pos[w[i]]){\r\n            ans.push_back(i + 1);\r\n        }\r\n    }\r\n    cout<<ans.size()<<'\\n';\r\n    for(auto i:ans)cout<<i<<' ';\r\n    //cout<<'\\n';\r\n    /*for(int i = 0;i < n;i++){\r\n        cout<<nord[i]<<' ';\r\n    }*/\r\n    return 0;\r\n}\r\n"
}