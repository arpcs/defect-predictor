{
    "id": 232843606,
    "contestId": 1100,
    "creationTimeSeconds": 1700044977,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1100,
        "index": "E",
        "name": "Andrew and Taxi",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "binary search",
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 1100,
        "members": [
            {
                "handle": "FLY_lai"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1547390100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 95,
    "timeConsumedMillis": 576,
    "memoryConsumedBytes": 8396800,
    "source": "// LUOGU_RID: 135239995\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\nconst int N = 1e5 + 5;\r\ntypedef long long ll;\r\n\r\nint n, m;\r\nstruct Edge {\r\n\tll u, v, w, id;\r\n\tEdge(int U = 0, int V = 0, int W = 0, int I = 0) {\r\n\t\tu = U;\r\n\t\tv = V;\r\n\t\tw = W;\r\n\t\tid = I;\r\n\t}\r\n};\r\nvector<Edge> E;\r\nbool cmp(Edge a, Edge b) {\r\n\treturn a.w > b.w;\r\n}\r\n\r\nstruct Edge2 {\r\n\tint to, val;\r\n\tEdge2(int t = 0, int v = 0) {\r\n\t\tto = t;\r\n\t\tval = v;\r\n\t}\r\n};\r\nvector<Edge2> e[N];\r\n\r\nint num[N];\r\nint ind[N];\r\nbool topo() {\r\n\tmemset(num, 0, sizeof num);\r\n\tint cnt = 0;\r\n\tqueue<int> q;\r\n\tfor (int i = 1; i <= n; i++)\r\n\t\tif (ind[i] == 0) {\r\n\t\t\tq.push(i);\r\n\t\t}\r\n\twhile (!q.empty()) {\r\n\t\tint h = q.front();\r\n\t\tq.pop();\r\n\t\tcnt++;\r\n\t\tnum[h] = cnt;\r\n\t\tif (cnt > n)\r\n\t\t\treturn false;\r\n\t\tfor (auto i: e[h]) {\r\n\t\t\tind[i.to]--;\r\n\t\t\tif (ind[i.to] == 0)\r\n\t\t\t\tq.push(i.to);\r\n\t\t}\r\n\t}\r\n\treturn cnt == n;\r\n} \r\n\r\nvector<int> ans;\r\nbool chk(int x) {\r\n\tint pos = m;\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\te[i].clear();\r\n\t\tind[i] = 0;\r\n\t}\r\n\tfor (int i = 0; i < E.size(); i++) {\r\n\t\tif (E[i].w <= x) {\r\n\t\t\tpos = i;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\telse {\r\n\t\t\te[E[i].u].push_back(Edge2(E[i].v, E[i].w));\r\n\t\t\tind[E[i].v]++; \r\n\t\t}\r\n\t}\r\n\t//\u62d3\u6251\u6392\u5e8f\r\n\tif (!topo())\r\n\t\treturn false;\r\n\tans.clear();\r\n\tfor (int i = pos; i < E.size(); i++)\r\n\t\tif (num[E[i].u] > num[E[i].v]) {\r\n\t\t\tans.push_back(E[i].id);\r\n\t\t}\r\n\treturn true;\r\n}\r\n\r\nint main() {\r\n\tcin >> n >> m;\r\n\tfor (int i = 1; i <= m; i++) {\r\n\t\tll u, v, w;\r\n\t\tcin >> u >> v >> w;\r\n\t\tE.push_back(Edge(u, v, w, i));\r\n\t}\r\n\tsort(E.begin(), E.end(), cmp);\r\n\t\r\n\tint l = -1, r = 1e9;\r\n\twhile (r - l > 1) {\r\n\t\tint mid = (l + r) / 2;\r\n\t\tif (chk(mid))\r\n\t\t\tr = mid;\r\n\t\telse\r\n\t\t\tl = mid;\r\n\t}\r\n\tchk(r);\r\n\tcout << r << ' ' << ans.size() << endl;\r\n\tfor (auto i: ans)\r\n\t\tcout << i << ' ';\r\n\treturn 0;\r\n}"
}