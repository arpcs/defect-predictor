{
    "id": 219749781,
    "contestId": 961,
    "creationTimeSeconds": 1692597809,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 961,
        "index": "D",
        "name": "Pair Of Lines",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "geometry"
        ]
    },
    "author": {
        "contestId": 961,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522850700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 121,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 1638400,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing i64 = long long;\n\n#define random(a, b) ((a) + rand() % ((b) - (a) + 1))\n\nconstexpr int M = 1e5 + 10;\n\nstruct node {\n    i64 x, y;\n} points[M];\n\ni64 n, x[5], y[5];\nbool is1, is2;\n\nbool isInline(int now, int idx) {\n    int idx1, idx2;\n    if (now == 1) idx1 = 1, idx2 = 2;\n    else idx1 = 3, idx2 = 4;\n    if ((x[idx2] - x[idx1]) * (points[idx].y - y[idx1]) == (y[idx2] - y[idx1]) * (points[idx].x - x[idx1])) return true;\n    return false;\n}\n\nbool check(int idx1, int idx2) {\n    x[1] = points[idx1].x, y[1] = points[idx1].y;\n    x[2] = points[idx2].x, y[2] = points[idx2].y;\n    is1 = is2 = false;\n    for (int i = 1; i <= n; i++) {\n        if (i == idx1 || i == idx2) continue;\n        else if (isInline(1, i)) continue;\n        else if (!is1) {\n            x[3] = points[i].x;\n            y[3] = points[i].y;\n            is1 = true;\n        } else if (!is2) {\n            x[4] = points[i].x;\n            y[4] = points[i].y;\n            is2 = true;\n        } else if (isInline(2, i)) continue;\n        else return false;\n    }\n    return true;\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n\n    cin >> n;\n\n    for (int i = 1; i <= n; i++) cin >> points[i].x >> points[i].y;\n\n    if (n <= 4) cout << \"YES\" << '\\n';\n    else {\n        int start = random(1, n - 2);\n        if (check(start, start + 1) || check(start + 1, start + 2) || check(start, start + 2)) cout << \"YES\" << '\\n';\n        else cout << \"NO\" << '\\n';\n    }\n\n    return 0;\n}\n    \t\t   \t \t \t \t\t     \t \t\t\t\t  \t"
}