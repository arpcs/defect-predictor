{
    "id": 219770708,
    "contestId": 961,
    "creationTimeSeconds": 1692609778,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 961,
        "index": "D",
        "name": "Pair Of Lines",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "geometry"
        ]
    },
    "author": {
        "contestId": 961,
        "members": [
            {
                "handle": "bkifhr10"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1522850700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 121,
    "timeConsumedMillis": 358,
    "memoryConsumedBytes": 1228800,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nusing i64 = long long;\nint n;\nint is[100011];\nstruct node\n{\n    int x;\n    int y;\n}line[100010];\nbool check(double ax, double ay, double bx, double by)\n{\n    if(ax * by == ay * bx)\n        return true;\n    else\n        return false;\n}\nint ans(int a, int b)\n{\n    memset(is, 0, sizeof(is));\n    for(int i = 1; i <= n; ++i){\n        if(check(line[a].x - line[b].x, line[a].y - line[b].y, line[a].x - line[i].x, line[a].y - line[i].y))\n            is[i] = 1;\n    }\n    int t1 = 0, t2 = 0;\n    for(int i = 1; i <= n; ++i){\n        if(is[i])\n           continue;\n        if(!t1){\n            t1 = i;\n        }else if(!t2){\n            t2 = i;\n        }else{\n            if(!check(line[t1].x - line[t2].x, line[t1].y - line[t2].y, line[t1].x - line[i].x, line[t1].y - line[i].y))\n                 return false;\n        }\n    }\n}\nvoid Solve()\n{\n    cin >> n;\n    for(int i = 1; i <= n; ++i){\n         cin >> line[i].x >> line[i].y;\n    }\n    if(n <= 4){\n        cout << \"YES\" << endl;\n        return ;\n    }\n    if(ans(1, 2) || ans(1, 3) || ans(2, 3))\n       cout << \"YES\" << endl;\n    else\n       cout << \"NO\" << endl;\n}\nint main()\n{\n    int t = 1;\n    while(t--){\n        Solve();\n    } \n    return 0;\n}\n\t\t  \t\t \t\t\t\t\t \t\t\t  \t \t\t  \t\t \t\t\t\t"
}