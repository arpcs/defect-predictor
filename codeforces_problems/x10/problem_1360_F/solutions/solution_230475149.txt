{
    "id": 230475149,
    "contestId": 1360,
    "creationTimeSeconds": 1698658838,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1360,
        "index": "F",
        "name": "Spy-string",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "bitmasks",
            "brute force",
            "constructive algorithms",
            "dp",
            "hashing",
            "strings"
        ]
    },
    "author": {
        "contestId": 1360,
        "members": [
            {
                "handle": "pro_player"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1590327300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "//jai shree ram \r\n#include<bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n#pragma GCC optimize(\"Ofast\")\r\ntypedef long long int ll;\r\n// typedef __int128_t ll;\r\ntypedef long long LL;\r\ntypedef long double ld;\r\ntypedef vector<long long> vLL;\r\ntypedef vector<long long int> vll;\r\ntypedef vector<int> vi;\r\ntypedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update>pbds;\r\ntypedef tree<ll,null_type,less<ll>,rb_tree_tag,tree_order_statistics_node_update>pbdsl;\r\n// *a.find_by_order(x)-->gives xth element considering 0 indexing\r\n// a.order_of_key(x)-->gives number of elements strictly smaller than x\r\n#define pb push_back\r\n#define eb emplace_back \r\n#define mk make_pair\r\n#define unique(v) (v).erase(unique((v).begin(), (v).end()), (v).end())\r\n#define all(v) (v).begin(),(v).end()\r\n#define F first\r\n#define S second\r\n#define foop(i,a,b) for(int i=a;i<b;i++)\r\n#define foopl(i,a,b) for(ll i=a;i<b;i++)\r\n#define foopL(i,a,b) for(LL i=a;i<b;i++)\r\n#define poof(i,a,b) for(int i=a;i>=b;i--)\r\n#define lpoof(i,a,b) for(ll i=a;i>=b;i--)\r\n#define NO cout<<\"NO\"\r\n#define YES cout<<\"YES\"\r\n#define nl cout<<\"\\n\"\r\n#define spc cout<<\" \"\r\n\r\n\r\n\r\n// #include \"puppet.h\"\r\n\r\n//lambda:-\r\n/*function<type(parameter types...without names)>func_name=[&](parameters)={\r\n    \r\n};\r\ndont forget semi colon at last\r\n \r\neg:-\r\nfunction<void(vector<vector<int>>,int)>dfs=[&](vector<vector<int>>vec,int vertex){\r\n    \r\n};\r\n \r\n*/\r\n \r\n \r\n// int bisearch(ll arr[],ll x,int n){\r\n//     int l=0;\r\n//     int r=n-1;\r\n//     while(l<=r){\r\n//         int mid = (l+r)/2;\r\n//         if(arr[mid]==x){\r\n//             return mid;\r\n \r\n//         }\r\n//         else if(arr[mid]>x){\r\n//             r=mid-1;\r\n//         }\r\n//         else\r\n//             l=mid+1;\r\n//     }\r\n//     return -1;\r\n// }\r\n \r\n \r\n \r\n// const int INF = int(1e9);\r\n// const int N = int(1e6) + 5;\r\n \r\n// int mind[N];\r\n \r\n// void precalc() {\r\n//   foop(i, 0, N)\r\n//     mind[i] = i;\r\n  \r\n//   for (int p = 2; p < N; p++) {\r\n//     if (mind[p] != p)\r\n//       continue;\r\n//     for (int d = 2 * p; d < N; d += p)\r\n//       mind[d] = min(mind[d], p);\r\n//   }\r\n// }\r\n \r\n \r\n// vector<int> getPrimes(int v) {\r\n//   vector<int> ps;\r\n//   while (v > 1) {\r\n//     if (ps.empty() || ps.back() != mind[v])\r\n//       ps.push_back(mind[v]);\r\n//     v /= mind[v];\r\n//   }\r\n//   return ps;\r\n// }\r\n\r\n\r\n// const int MAXN=1e7+5;\r\n// int spf[MAXN];\r\n \r\n// // Calculating SPF (Smallest Prime Factor) for every\r\n// // number till MAXN.\r\n// // Time Complexity : O(nloglogn)\r\n// void sieve()\r\n// {\r\n//     spf[1] = 1;\r\n//     for (int i = 2; i < MAXN; i++)\r\n \r\n//         spf[i] = i;\r\n \r\n \r\n//     for (int i = 4; i < MAXN; i += 2)\r\n//         spf[i] = 2;\r\n \r\n//     for (int i = 3; i * i < MAXN; i++) {\r\n \r\n//         if (spf[i] == i) {\r\n \r\n//             for (int j = i * i; j < MAXN; j += i)\r\n//                 if (spf[j] == j)\r\n//                     spf[j] = i;\r\n//         }\r\n//     }\r\n// }\r\n \r\n// LL modinverse(LL p,LL q,LL m)\r\n// {\r\n//     LL mod = m, expo;\r\n//     expo = mod - 2;\r\n \r\n//     while (expo) {\r\n \r\n//         if (expo & 1) {\r\n//             p = (p * q) % mod;\r\n//         }\r\n//         q = (q * q) % mod;\r\n//         expo >>= 1;\r\n//     }\r\n//     return p;\r\n// }\r\n \r\n// bool if_prime(ll n)\r\n \r\n// {\r\n \r\n//     if (n < 2)\r\n \r\n//         return false;\r\n \r\n//     else if (n < 4)\r\n \r\n//         return true;\r\n \r\n//     else if (n % 2 == 0 || n % 3 == 0)\r\n \r\n//         return false;\r\n \r\n//     ll k = sqrt(n);\r\n \r\n//     for (ll i = 5; i <= k; i += 6)\r\n \r\n//         if (n % i == 0 || n % (i + 2) == 0)\r\n \r\n//             return false;\r\n \r\n//     return true;\r\n \r\n// }\r\n \r\n \r\n \r\n// ll fpowm(ll x,ll n,ll m)\r\n// {\r\n//     if (n == 0) {\r\n//         return 1;\r\n//     }\r\n//     else if (n % 2 == 0) {\r\n//         return fpowm((x * x) % m, n / 2,m);\r\n//     }\r\n//     else {\r\n//         return (x * fpowm((x * x) % m, (n - 1) / 2 % m,m));\r\n//     }\r\n// }\r\n \r\n// ll fpow(ll x,ll n)\r\n// {\r\n//     if (n == 0) {\r\n//         return 1;\r\n//     }\r\n//     else if (n % 2 == 0) {\r\n//         return fpow((x * x) , n / 2);\r\n//     }\r\n//     else {\r\n//         return (x * fpow((x * x) , (n - 1) / 2) );\r\n//     }\r\n// }\r\n \r\n \r\n \r\n// int f(int n,int k){\r\n//     if(n<2*k)return 0;\r\n//     else{\r\n//         if(n%(2*k)==0)return n/(2*k)-1;\r\n//         else return n/(2*k);\r\n//     }\r\n// }\r\n// bool sortbysec(const pair<ll, ll>& a,\r\n//                 const pair<ll, ll>& b)\r\n// {\r\n//    if(a.F==b.F)return a.S>b.S;\r\n//    return a.F<b.F;\r\n// }\r\n \r\n// ll cil(ll n,ll k){\r\n//     if(n<=0)return 0;\r\n//     if(n%k==0)return n/k;\r\n//     else return n/k+1;\r\n// }\r\n \r\n// LL cil(LL n,LL k){\r\n//     if(n<=0)return 0;\r\n//     if(n%k==0)return n/k;\r\n//     else return n/k+1;\r\n// }\r\n \r\n \r\n \r\n \r\n// int cil(int n,int k){\r\n//     if(n%k==0)return n/k;\r\n//     else return n/k+1;\r\n// }\r\n// ll mini(ll a,ll b){\r\n//     if(a>b)return b;\r\n//     else return a;\r\n// }\r\n// ll lcm(ll a,ll b){\r\n// return (a*b)/(__gcd(a,b));\r\n// }\r\n// LL gcd(LL a,LL b){\r\n//     return b==0 ? a:gcd(b,a%b);\r\n// }\r\n \r\n// bool ispow2(ll n){\r\n//   ll m=log2(n);\r\n//   return fpow(2,m)==n;\r\n// }\r\n\r\n\r\n\r\n\r\nvoid solve(/*i am a loser*/){\r\n\r\n\r\nint n,m;\r\ncin>>n>>m;\r\nstring s[n];\r\nfoop(i,0,n)cin>>s[i];\r\n\r\nfoop(i,0,n){\r\n\r\nstring str=s[i];\r\nfoop(j,0,m){\r\nfor(char ch='a';ch<='z';ch++){\r\n    str[j]=ch;\r\n\r\n  bool ok=true;\r\n// cout<<str<<\"\\n\";\r\nfor(int i1=0;i1<n;i1++){\r\n    int cnt=0;\r\nfoop(j1,0,m){\r\n    if(str[j1]!=s[i1][j1]){\r\n        cnt++;\r\n    }\r\n}\r\n\r\n\r\n\r\nif(cnt>1){ok=false;break;}\r\n\r\n}\r\n\r\n\r\nif(ok){\r\n    cout<<str<<\"\\n\";return;\r\n}\r\n}  \r\n\r\n}\r\n\r\n\r\n\r\n}\r\n\r\ncout<<-1;\r\n\r\n\r\nnl;\r\n\r\n\r\n}\r\n\r\n \r\n \r\nint main(){\r\n \r\n ios::sync_with_stdio(0);\r\n  cin.tie(0);\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\nint T=1;\r\ncin>>T;\r\nwhile(T--){\r\n\r\nsolve();\r\n}\r\n // cout<<(1982^1971);\r\n \r\n \r\n \r\n \r\nreturn 0;\r\n}"
}