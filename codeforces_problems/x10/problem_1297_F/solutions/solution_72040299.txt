{
    "id": 72040299,
    "contestId": 1297,
    "creationTimeSeconds": 1582898117,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1297,
        "index": "F",
        "name": "Movie Fan",
        "type": "PROGRAMMING",
        "tags": [
            "*special",
            "data structures",
            "greedy",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1297,
        "members": [
            {
                "handle": "armoking"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1582810500
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 701,
    "memoryConsumedBytes": 23552000,
    "source": "import java.util.*\r\n \r\nprivate fun readLn() = readLine()!! // string line\r\nprivate fun readInt() = readLn().toInt() // single int\r\nprivate fun readLong() = readLn().toLong() // single long\r\nprivate fun readDouble() = readLn().toDouble() // single double\r\nprivate fun readStrings() = readLn().split(\" \") // list of strings\r\nprivate fun readInts() = readStrings().map { it.toInt() } // list of ints\r\nprivate fun readLongs() = readStrings().map { it.toLong() } // list of longs\r\nprivate fun readDoubles() = readStrings().map { it.toDouble() } // list of doubles\r\n \r\nfun main(args: Array<String>) {\r\n    var t = readInt()\r\n    while (t-- > 0) {\r\n        var (n, m) = readInts()\r\n        var a = IntArray(n + 1)\r\n        var b = IntArray(n + 1)\r\n        for (i in 0 until n) {\r\n            var (x, y) = readInts()\r\n            a[i] = x\r\n            b[i] = y\r\n        }\r\n        a[n] = 2e9.toInt()\r\n        b[n] = a[n]\r\n        var c = Array<Pair<Int, Int>>(n + 1, {i -> Pair(a[i], i)})\r\n        c.sortWith(compareBy({it.first}, {it.second}))\r\n        var ans = 0\r\n        var s = TreeSet<Long>()\r\n        var w = IntArray(n)\r\n        var day = 0\r\n        for (id in 0..n) {\r\n            while (day < c[id].first && !s.isEmpty()) {\r\n                for (tmp in 1..m) {\r\n                    if (s.isEmpty()) {\r\n                        break\r\n                    }\r\n                    var p = s.first()\r\n                    ans = maxOf(ans, day - (p shr 32).toInt())\r\n                    w[(p and 1048575).toInt()] = day\r\n                    s.remove(p)\r\n                }\r\n                ++day\r\n            }\r\n            day = c[id].first\r\n            var i = c[id].second\r\n            s.add(((b[i].toLong()) shl 32) + i)\r\n        }\r\n        println(ans)\r\n        println(w.joinToString(\" \"))\r\n    }\r\n}\r\n"
}