{
    "contestId": 96,
    "index": "B",
    "name": "Lucky Numbers (easy)",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1300,
    "tags": [
        "binary search",
        "bitmasks",
        "brute force"
    ],
    "desc": {
        "title": "B. Lucky Numbers (easy)",
        "statement": "<p>Petya loves lucky numbers. Everybody knows that positive integers are <span class=\"tex-font-style-underline\">lucky</span> if their decimal representation doesn't contain digits other than <span class=\"tex-span\">4</span> and <span class=\"tex-span\">7</span>. For example, numbers <span class=\"tex-span\">47</span>, <span class=\"tex-span\">744</span>, <span class=\"tex-span\">4</span> are lucky and <span class=\"tex-span\">5</span>, <span class=\"tex-span\">17</span>, <span class=\"tex-span\">467</span> are not.</p><p>Lucky number is <span class=\"tex-font-style-underline\">super lucky</span> if it's decimal representation contains equal amount of digits <span class=\"tex-span\">4</span> and <span class=\"tex-span\">7</span>. For example, numbers <span class=\"tex-span\">47</span>, <span class=\"tex-span\">7744</span>, <span class=\"tex-span\">474477</span> are super lucky and <span class=\"tex-span\">4</span>, <span class=\"tex-span\">744</span>, <span class=\"tex-span\">467</span> are not.</p><p>One day Petya came across a positive integer <span class=\"tex-span\"><i>n</i></span>. Help him to find the least super lucky number which is not less than <span class=\"tex-span\"><i>n</i></span>.</p>",
        "inputSpecification": "<p>The only line contains a positive integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>). This number doesn't have leading zeroes.</p>",
        "outputSpecification": "<p>Output the least super lucky number that is more than or equal to <span class=\"tex-span\"><i>n</i></span>.</p><p>Please, do not use the %lld specificator to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specificator.</p>",
        "samples": [
            {
                "input": "4500<br/>",
                "output": "4747<br/>"
            },
            {
                "input": "47<br/>",
                "output": "47<br/>"
            }
        ],
        "note": null
    }
}