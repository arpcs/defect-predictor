{
    "id": 232959770,
    "contestId": 1172,
    "creationTimeSeconds": 1700135065,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1172,
        "index": "C1",
        "name": "Nauuo and Pictures (easy version)",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 2300,
        "tags": [
            "dp",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1172,
        "members": [
            {
                "handle": "lwh_lwh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1559909100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 2662400,
    "source": "// generated by GPT4 2023-11-16 19:44:01\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int MOD = 998244353;\r\nconst int MAXN = 55;\r\nint n, m, a[MAXN], w[MAXN], sum[2], inv[MAXN * MAXN * 2];\r\nint dp[MAXN][MAXN * 2][MAXN * 2];\r\n\r\nint main() {\r\n    cin >> n >> m;\r\n    for (int i = 1; i <= n; i++) cin >> a[i];\r\n    for (int i = 1; i <= n; i++) {\r\n        cin >> w[i];\r\n        sum[a[i]] += w[i];\r\n    }\r\n    for (int i = 1; i <= 2 * n * m; i++) inv[i] = 1LL * (MOD - MOD / i) * inv[MOD % i] % MOD;\r\n    dp[0][0][0] = 1;\r\n    for (int i = 0; i < m; i++)\r\n        for (int j = 0; j <= i; j++)\r\n            for (int k = 0; k <= i; k++)\r\n                if (dp[i][j][k]) {\r\n                    int cur = dp[i][j][k], s0 = sum[0] - k, s1 = sum[1] + j;\r\n                    if (s0 > 0) dp[i + 1][j][k + 1] = (dp[i + 1][j][k + 1] + 1LL * cur * s0 % MOD * inv[s0 + s1] % MOD) % MOD;\r\n                    if (s1 > 0) dp[i + 1][j + 1][k] = (dp[i + 1][j + 1][k] + 1LL * cur * s1 % MOD * inv[s0 + s1] % MOD) % MOD;\r\n                }\r\n    for (int i = 1; i <= n; i++) {\r\n        int ans = 0;\r\n        for (int j = 0; j <= m; j++)\r\n            for (int k = 0; k <= m; k++)\r\n                ans = (ans + 1LL * dp[m][j][k] * (w[i] + (a[i] ? j : -k)) % MOD * inv[sum[0] + sum[1] + j - k] % MOD) % MOD;\r\n        cout << ans << endl;\r\n    }\r\n    return 0;\r\n}\r\n"
}