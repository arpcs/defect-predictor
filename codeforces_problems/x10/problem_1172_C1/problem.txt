{
    "contestId": 1172,
    "index": "C1",
    "name": "Nauuo and Pictures (easy version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 2300,
    "tags": [
        "dp",
        "probabilities"
    ],
    "desc": {
        "title": "C1. Nauuo and Pictures (easy version)",
        "statement": "<p><span class=\"tex-font-style-bf\">The only difference between easy and hard versions is constraints.</span></p><p>Nauuo is a girl who loves random picture websites.</p><p>One day she made a random picture website by herself which includes $$$n$$$ pictures.</p><p>When Nauuo visits the website, she sees exactly one picture. The website does not display each picture with equal probability. The $$$i$$$-th picture has a non-negative weight $$$w_i$$$, and the probability of the $$$i$$$-th picture being displayed is $$$\\frac{w_i}{\\sum_{j=1}^nw_j}$$$. That is to say, the probability of a picture to be displayed is proportional to its weight.</p><p>However, Nauuo discovered that some pictures she does not like were displayed too often. </p><p>To solve this problem, she came up with a great idea: when she saw a picture she likes, she would add $$$1$$$ to its weight; otherwise, she would subtract $$$1$$$ from its weight.</p><p>Nauuo will visit the website $$$m$$$ times. She wants to know the expected weight of each picture after all the $$$m$$$ visits modulo $$$998244353$$$. Can you help her?</p><p>The expected weight of the $$$i$$$-th picture can be denoted by $$$\\frac {q_i} {p_i}$$$ where $$$\\gcd(p_i,q_i)=1$$$, you need to print an integer $$$r_i$$$ satisfying $$$0\\le r_i&lt;998244353$$$ and $$$r_i\\cdot p_i\\equiv q_i\\pmod{998244353}$$$. It can be proved that such $$$r_i$$$ exists and is unique.</p>",
        "inputSpecification": "<p>The first line contains two integers $$$n$$$ and $$$m$$$ ($$$1\\le n\\le 50$$$, $$$1\\le m\\le 50$$$) \u2014 the number of pictures and the number of visits to the website.</p><p>The second line contains $$$n$$$ integers $$$a_1,a_2,\\ldots,a_n$$$ ($$$a_i$$$ is either $$$0$$$ or $$$1$$$) \u2014 if $$$a_i=0$$$ , Nauuo does not like the $$$i$$$-th picture; otherwise Nauuo likes the $$$i$$$-th picture. It is guaranteed that there is at least one picture which Nauuo likes.</p><p>The third line contains $$$n$$$ integers $$$w_1,w_2,\\ldots,w_n$$$ ($$$1\\le w_i\\le50$$$) \u2014 the initial weights of the pictures.</p>",
        "outputSpecification": "<p>The output contains $$$n$$$ integers $$$r_1,r_2,\\ldots,r_n$$$ \u2014 the expected weights modulo $$$998244353$$$.</p>",
        "samples": [
            {
                "input": "\n2 1\n0 1\n2 1\n",
                "output": "\n332748119\n332748119\n"
            },
            {
                "input": "\n1 2\n1\n1\n",
                "output": "\n3\n"
            },
            {
                "input": "\n3 3\n0 1 1\n4 3 5\n",
                "output": "\n160955686\n185138929\n974061117\n"
            }
        ],
        "note": "<p>In the first example, if the only visit shows the first picture with a probability of $$$\\frac 2 3$$$, the final weights are $$$(1,1)$$$; if the only visit shows the second picture with a probability of $$$\\frac1 3$$$, the final weights are $$$(2,2)$$$.</p><p>So, both expected weights are $$$\\frac2 3\\cdot 1+\\frac 1 3\\cdot 2=\\frac4 3$$$ .</p><p>Because $$$332748119\\cdot 3\\equiv 4\\pmod{998244353}$$$, you need to print $$$332748119$$$ <span class=\"tex-font-style-bf\">instead of</span> $$$\\frac4 3$$$ or $$$1.3333333333$$$.</p><p>In the second example, there is only one picture which Nauuo likes, so every time Nauuo visits the website, $$$w_1$$$ will be increased by $$$1$$$.</p><p>So, the expected weight is $$$1+2=3$$$.</p><p>Nauuo is very naughty so she didn't give you any hint of the third example.</p>"
    },
    "suggested_categories": [
        "probability",
        "expected value",
        "mathematics",
        "algorithms",
        "dynamic programming",
        "modular arithmetic",
        "randomized algorithms",
        "weighted random selection",
        "combinatorics",
        "conditional probability",
        "simulation",
        "mathematical optimization",
        "data structures",
        "programming contests",
        "greedy algorithm",
        "number theory",
        "codeforces",
        "competitive programming",
        "online judge",
        "algorithmic problem solving"
    ]
}