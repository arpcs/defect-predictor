{
    "id": 174792787,
    "contestId": 1012,
    "creationTimeSeconds": 1665008904,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1012,
        "index": "B",
        "name": "Chemical table",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dsu",
            "graphs",
            "matrices"
        ]
    },
    "author": {
        "contestId": 1012,
        "members": [
            {
                "handle": "Esmael_Samir"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1532938500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 3686400,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1e2 + 5;\n\nint n, m, k;\nvector<vector<bool>>G, vis;\n\nbool get(int ro, int col){\n\tif(ro < 0 || ro >= n || col < 0 || col >= m || !G[ro][col]){\n\t\treturn 0;\n\t}\n\treturn 1;\n}\nvoid check(int ro, int col){\n\t\n\tif(G[ro][col] == 1){\n\t\treturn;\n\t}\n\tif(get(ro, col + 1) + get(ro - 1, col) + get(ro - 1, col + 1) == 3){\n\t\tG[ro][col] = 1;\n\t}\n\telse if(get(ro, col - 1) + get(ro - 1, col) + get(ro - 1, col - 1) == 3){\n\t\tG[ro][col] = 1;\n\t}\n\telse if(get(ro, col - 1) + get(ro + 1, col) + get(ro + 1, col - 1) == 3){\n\t\tG[ro][col] = 1;\n\t}\n\telse if(get(ro, col + 1) + get(ro + 1, col) + get(ro + 1, col + 1) == 3){\n\t\tG[ro][col] = 1;\n\t}\n}\nint solve(int ro, int col){\n\tif(ro < 0 || ro >= n || col < 0 || col >= m || vis[ro][col]){\n\t\treturn 0;\n\t}\n\tint ret = 0;\n\tvis[ro][col] = 1;\n\t\n\tcheck(ro, col);\n\tret += solve(ro + 1, col);\n\tret += solve(ro - 1, col);\n\tret += solve(ro, col + 1);\n\tret += solve(ro, col - 1);\n\t\n\tcheck(ro, col);\n\t\n\tif(G[ro][col] == 0){\n\t\t++ret;\n\t\tG[ro][col] = 1;\n\t}\n\treturn ret;\n}\nint main(){\n\tscanf(\"%d %d %d\", &n, &m, &k);\n\tG.resize(n, vector<bool>(m));\n\tvis.resize(n, vector<bool>(m, 0));\n\twhile(k--){\n\t\tint i, j;\n\t\tscanf(\"%d %d\", &i, &j);\n\t\tG[i - 1][j - 1] = 1;\n\t}\n\tprintf(\"%d\\n\", solve(0, 0));\n\treturn 0;\n}\n"
}