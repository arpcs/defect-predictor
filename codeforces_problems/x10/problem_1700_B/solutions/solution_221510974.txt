{
    "id": 221510974,
    "contestId": 1700,
    "creationTimeSeconds": 1693619966,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1700,
        "index": "B",
        "name": "Palindromic Numbers ",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1100,
        "tags": [
            "constructive algorithms",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1700,
        "members": [
            {
                "handle": "believer111"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1655629500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <string>\r\nusing namespace std;\r\n\r\nstring subtractStrings(const string& num1, const string& num2) {\r\n    string result;\r\n    int carry = 0;\r\n    int i = num1.size() - 1;\r\n    int j = num2.size() - 1;\r\n\r\n    while (i >= 0 || j >= 0 || carry) {\r\n        int digit1 = (i >= 0) ? num1[i] - '0' : 0;\r\n        int digit2 = (j >= 0) ? num2[j] - '0' : 0;\r\n        int diff = digit1 - digit2 - carry;\r\n\r\n        if (diff < 0) {\r\n            diff += 10;\r\n            carry = 1;\r\n        } else {\r\n            carry = 0;\r\n        }\r\n\r\n        result += to_string(diff);\r\n        i--;\r\n        j--;\r\n    }\r\n\r\n    reverse(result.begin(), result.end());\r\n    return result;\r\n}\r\n\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n    string input, palindrome, answer;\r\n    cin >> input;\r\n\r\n    if (input[0] == '9') {\r\n        for (int i = 0; i < n + 1; i++)\r\n            palindrome.push_back('1');\r\n    } else {\r\n        for (int i = 0; i < n; i++)\r\n            palindrome.push_back('9');\r\n    }\r\n\r\n    answer = subtractStrings(palindrome, input);\r\n    bool leadingZero = false;\r\n\r\n    for (int i = 0; i < answer.size(); i++) {\r\n        if (!leadingZero) {\r\n            if (answer[i] != '0')\r\n                leadingZero = true;\r\n        }\r\n        \r\n        if (leadingZero)\r\n            cout << answer[i];\r\n    }\r\n\r\n    cout << endl;\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    \r\n    int t = 1;\r\n    cin >> t;\r\n    \r\n    while (t--)\r\n        solve();\r\n\r\n    return 0;\r\n}\r\n"
}