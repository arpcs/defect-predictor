{
    "id": 224672405,
    "contestId": 1555,
    "creationTimeSeconds": 1695418614,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1555,
        "index": "A",
        "name": "PizzaForces",
        "type": "PROGRAMMING",
        "rating": 900,
        "tags": [
            "brute force",
            "math"
        ]
    },
    "author": {
        "contestId": 1555,
        "members": [
            {
                "handle": "Emperor_Nazer"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1627655700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<iostream>\r\n#include<vector>\r\n#include<string>\r\n#include<set>\r\n#include<map>\r\n#include<unordered_set>\r\n#include<unordered_map>\r\n#include<algorithm>\r\n#include<fstream>\r\n#include<iomanip>\r\n#include<queue>\r\n#include<stack>\r\n#include<functional>\r\n#include<numeric>\r\n#include<random>\r\n#include<chrono>\r\n#include<cmath>\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC target(\"avx,avx2,fma\")\r\n#pragma GCC optimize(\"unroll-loops\")\r\n#define ll long long\r\n#define ld long double\r\n#define pb push_back\r\n#define par pair<int, int>\r\n#define mp make_pair\r\nusing namespace std;\r\n\r\n\r\nconst int INF = 2e9;\r\nconst ll INFL = 5e18;\r\nconst ll MOD = 998244353;\r\nconst double eps = 1e-9;\r\nconst int N = 1e3 + 4;\r\nconst double PI = acosl(-1.0);\r\nvector<int> g[N];\r\nint color[N];\r\nvector<int> curCS;\r\n\r\n\r\nll gcd(ll a, ll b) {\r\nwhile (a && b)\r\n    if (a > b)\r\n        a %= b;\r\n    else b %= a;\r\nreturn a + b;\r\n}\r\n\r\nll lcm(ll a, ll b) {\r\n    return a * b / gcd(a, b);\r\n}\r\n\r\n\r\nll add (ll x, ll y) {\r\nx += y;\r\nwhile (x >= MOD)\r\n    x-= MOD;\r\nwhile (x < 0)\r\n    x += MOD;\r\nreturn x;\r\n}\r\n\r\nll sub(ll x, ll y) {\r\n    return add(x, -y);\r\n}\r\n\r\n\r\nll mul(ll x, ll y) {\r\nreturn (x * 1ll * y) % MOD;\r\n}\r\n\r\n\r\nll binPow(ll a, ll k) {\r\nll ans = 1;\r\nwhile (k) {\r\n    if (k & 1)\r\n        ans = mul(ans, a);\r\n    a = mul(a, a);\r\n    k >>= 1;\r\n}\r\nreturn ans;\r\n}\r\n\r\nll inv(ll x) {\r\nreturn binPow(x, MOD - 2);\r\n}\r\n\r\nbool isPrime(int x) {\r\n    if (x == 1)\r\n        return false;\r\nfor (int i = 2; i * i <= x; i++)\r\n    if (x % i == 0)\r\n        return false;\r\nreturn true;\r\n}\r\n\r\n\r\nstring to_binary(ll x) {\r\n    string n = \"\";\r\n    while (x) {\r\n        if (x % 2 == 0)\r\n            n.pb('0');\r\n        else n.pb('1');\r\n        x /= 2;\r\n    }\r\n    reverse(n.begin(), n.end());\r\n    return n;\r\n}\r\n\r\n\r\nll to_decimal(string s) {\r\n    reverse(s.begin(), s.end());\r\n    ll res = 0;\r\n    for (int i = 0; i < s.size(); i++)\r\n        if (s[i] == '1')\r\n            res += 1ll << i;\r\n    return res;\r\n}\r\n\r\nmt19937_64 rnd(time(0));\r\n\r\n\r\nstruct vec {\r\ndouble x, y;\r\nvec() {};\r\nvec(double x, double y) : x(x), y(y) {};\r\n};\r\n\r\nstruct line {\r\ndouble A, B, C;\r\nline() {};\r\nline(double A, double B, double C) : A(A), B(B), C(C) {};\r\nline(vec a, vec b) {\r\n    A = b.y - a.y;\r\n    B = a.x - b.x;\r\n    C = a.y * b.x - a.x * b.y;\r\n}\r\n};\r\nvec operator +(const vec &a, const vec &b) {\r\nreturn vec(a.x + b.x, a.y + b.y);\r\n}\r\n\r\nvec operator -(const vec &a, const vec &b) {\r\nreturn vec(a.x - b.x, a.y - b.y);\r\n}\r\n\r\nvec operator *(const vec &a, double b) {\r\nreturn vec(a.x * b, a.y * b);\r\n}\r\n\r\nvec operator *(double b, const vec &a) {\r\nreturn vec(a.x * b, a.y * b);\r\n}\r\n\r\ndouble operator *(const vec &a, const vec &b) {\r\nreturn a.x * b.x + a.y * b.y;\r\n}\r\n\r\ndouble operator %(const vec &a, const vec &b) {\r\nreturn a.x * b.y - a.y * b.x;\r\n}\r\n\r\ndouble square(vec a, vec b, vec c) {\r\nreturn abs((b - a) % (c - a)) / 2.0;\r\n}\r\n\r\ndouble squareOfPoly(vector<vec> polygon) {\r\nint n = polygon.size();\r\ndouble S = 0.0;\r\nfor (int i = 0; i < n; i++) {\r\n    int j = (i + 1) % n;\r\n    S += (polygon[j].x - polygon[i].x) * (polygon[j].y + polygon[i].y);\r\n}\r\nS /= 2;\r\nS = abs(S);\r\nreturn S;\r\n}\r\n\r\ndouble distance(vec p, line l) {\r\n    return (l.A * p.x + l.B * p.y + l.C) / sqrt(l.A * l.A + l.B * l.B);\r\n}\r\n\r\nvec intersect(line a, line b) {\r\n    double check = a.A * b.B - b.A * a.B;\r\n    vec i;\r\n    if (abs(check) < eps) {\r\n        i.x = 1e10;\r\n        i.y = 1e10;\r\n        return i;\r\n    }\r\n    double checkx = a.B * b.C - b.B * a.C;\r\n    double checky = a.C * b.A - b.C * a.A;\r\n    i.x = checkx / check;\r\n    i.y = checky / check;\r\n    return i;\r\n}\r\n\r\nbool isOnLine(vec p, vec a, vec b) {\r\n    line l = line(a, b);\r\n    if (abs(p.x * l.A + p.y * l.B + l.C) > eps)\r\n        return false;\r\n        double X1 = min(a.x, b.x), X2 = max(a.x, b.x);\r\n        double Y1 = min(a.y, b.y), Y2 = max(a.y, b.y);\r\n        if (p.x < X1 || p.x > X2 || p.y < Y1 || p.y > Y2)\r\n            return false;\r\n    return true;\r\n}\r\n\r\nbool dirX(vec a, vec b) {\r\n    if (b.x < a.x)\r\n        return false;\r\n    return true;\r\n}\r\n\r\nbool dirY(vec a, vec b) {\r\n    if (b.y < a.y)\r\n        return false;\r\n    return true;\r\n}\r\n\r\nbool isOnOneSide(vec p1, vec p2, line l) {\r\n    line p = line(p1, p2);\r\n    vec i = intersect(p, l);\r\n    if (abs(i.x) > 9 * 1e16 && abs(i.y) > 9 * 1e16)\r\n        return true;\r\n    if (isOnLine(i, p1, p2))\r\n        return false;\r\n    return true;\r\n}\r\n\r\nvector<vector<ll>> mul(vector<vector<ll>> a, vector<vector<ll>> b, ll n) {\r\n    vector<vector<ll>> res(n, vector<ll>(n, INFL));\r\n    for (int i = 0; i < n; i++)\r\n        for (int j = 0; j < n; j++)\r\n            for (int k = 0; k < n; k++)\r\n                res[i][k] = min(res[i][k], a[i][j] + b[j][k]);\r\n    return res;\r\n}\r\n\r\nvector<vector<ll>> pr(vector<vector<ll>> mat, ll n, ll sz) {\r\n    vector<vector<ll>> res(sz, vector<ll>(sz, INFL));\r\n    for (int i = 0; i < sz; i++)\r\n        res[i][i] = 0;\r\n    while (n) {\r\n        if (n % 2)\r\n            res = mul(res, mat, sz);\r\n        mat = mul(mat, mat, sz);\r\n        n /= 2;\r\n    }\r\n    return res;\r\n}\r\n\r\nint dist(par p1, par p2) {\r\n    return abs(p1.first - p2.first) + abs(p1.second - p2.second);\r\n}\r\n\r\nbool isSorted(vector<ll> a) {\r\n    for (int i = 1; i < a.size(); i++)\r\n        if (a[i] < a[i - 1])\r\n            return false;\r\n    return true;\r\n}\r\n\r\n\r\nvector<int> prefix_function(string s) {\r\n    int n = (int)s.length();\r\n    vector<int> pi(n);\r\n    for (int i = 1; i < n; i++) {\r\n        int j = pi[i - 1];\r\n        while (j > 0 && s[i] != s[j])\r\n            j = pi[j - 1];\r\n        if (s[i] == s[j])\r\n            j++;\r\n        pi[i] = j;\r\n    }\r\n    return pi;\r\n}\r\n\r\n\r\nint sumOfDigits(ll x) {\r\n    int s = 0;\r\n    while (x) {\r\n        s += x % 10;\r\n        x /= 10;\r\n    }\r\n    return s;\r\n}\r\n\r\n\r\nmap<ll, ll> rozout(long long n) {\r\n    map<ll, ll> res;\r\n    ll j = 2;\r\n    while (j * j <= n) {\r\n        if (n % j == 0) {\r\n            res[j]++;\r\n            n /= j;\r\n            j = 2;\r\n        }\r\n        else j++;\r\n    }\r\n    res[n]++;\r\n    return res;\r\n}\r\n\r\npar intersect(par a, par b) {\r\n    int l = max(a.first, b.first);\r\n    int r = min(a.second, b.second);\r\n    if (l > r)\r\n        return {-INF, -INF};\r\n    return {l, r};\r\n}\r\n\r\nbool comp(par a, par b) {\r\n    if (a.first == b.first)\r\n        return a.second < b.second;\r\n    return a.first > b.first;\r\n}\r\n\r\nll calc(ll m, ll k) {\r\n    if (m <= k)\r\n        return m * (m + 1) / 2;\r\n    ll f = k * (k + 1) / 2, rest = m - k;\r\n    ll s = (2 * k - rest - 1) * rest / 2;\r\n    return f + s;\r\n}\r\n\r\nll ceil(ll x, ll y) {\r\n    return (x + y - 1) / y;\r\n}\r\n\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    cout.precision(15);\r\n    cout << fixed;\r\n    int t;\r\n    cin >> t;\r\n    while (t--) {\r\n        ll n;\r\n        cin >> n;\r\n        if (n % 2)\r\n            n++;\r\n        n = max(n, 6ll);\r\n        cout << n / 2 * 5 << \"\\n\";\r\n    }\r\n}\r\n\r\n\r\n"
}