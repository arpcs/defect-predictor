{
    "id": 232218443,
    "contestId": 1491,
    "creationTimeSeconds": 1699617649,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1491,
        "index": "G",
        "name": "Switch and Flip",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2800,
        "tags": [
            "constructive algorithms",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1491,
        "members": [
            {
                "handle": "beautybang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1614519300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 17305600,
    "source": "// LUOGU_RID: 134357704\n//#include<bits/stdc++.h>\n#include <iostream>\n#include <cstdio>\n#include <math.h>\n#include <algorithm>\n#include <istream>\n#include <string>\n#include <queue>\n#include <deque>\n#include <random>\n#include <stack>\n#include <set>\n#include <string.h>\n#include <map>\n#include <unordered_map>\n#include <sstream>\n#include <bitset>\n#include <fstream>\n#include <climits>\n#include <time.h>\nusing namespace std;\n//#pragma GCC optimize(3)\n//#pragma GCC optimize(\"Ofast\")\n\n//#include \"atcoder/all\"\n// using namespace atcoder;\n#define int long long\n#define l128 __int128_t\n#define double long double\n#define endl \"\\n\"\n#define pii pair<int, int>\n#define p1(A) (A).first\n#define p2(A) (A).second\n#define lc(x) (x << 1)\n#define rc(x) (x << 1 | 1)\nint loc[200300];\nint p[200300];\nvector<pii>ANS;\ninline void op(int a,int b){\n    swap(p[a],p[b]);\n    swap(loc[p[a]],loc[p[b]]);\n    ANS.push_back({a,b});\n}\nstruct node {\n    int s,c1,c2;\n};\ninline void merge(node &A,node &B){\n    if(A.c1&&B.c1)\n        op(loc[A.c1],loc[B.c1]),A.c2=B.c2;\n    else if(!A.c1&&!B.c1)\n        op(loc[A.s],loc[B.s]),A.c1=A.s,A.c2=B.s;\n    else if(A.c1)\n        op(loc[A.c1],loc[B.s]),A.c1=B.s;\n    else op(loc[A.s],loc[B.c1]),A.c1=B.c2,A.c2=A.s;\n}\ninline void clr(node T){\n    while(p[T.c1]!=T.c2){\n        int nxt=p[T.c1];\n        op(loc[T.c1],T.c1);\n        T.c1=nxt;\n    }\n    while(p[T.c2]!=T.c1){\n        \n        int nxt=p[T.c2];\n        op(loc[T.c2],T.c2);\n        T.c2=nxt;\n    }\n    \n    op(T.c1,T.c2);\n}\nint n;\nbool vis[200300];\ninline void slv() {\n    cin>>n;\n    for(int i=1;i<=n;i++)\n        cin>>p[i],loc[p[i]]=i;\n    vector<node>E;\n    for(int i=1;i<=n;i++)\n        if(!vis[i]){\n            int x=i;\n            E.push_back({i,0,0});\n            while(!vis[x]){\n                vis[x]=1;\n                x=p[x];\n            }\n        }\n    if(E.size()==1){\n        int x=p[1],t=p[x];\n        op(1,x);\n        op(x,t);\n//        cout<<t<<\" \"<<p[x]<<endl;\n        clr({1,t,p[x]});\n    }\n    else{\n        while(E.size()){\n            node A=E.back();\n            E.pop_back();\n            node B=E.back();\n            E.pop_back();\n            merge(A,B);\n            if(E.size()==1){\n                merge(A,E.back());\n                E.pop_back();\n            }\n            clr(A);\n        }\n    }\n    cout<<ANS.size()<<endl;\n    for(pii e:ANS)\n        cout<<p1(e)<<\" \"<<p2(e)<<endl;\n//    for(int i=1;i<=n;i++)\n//        cout<<p[i]<<\" \";\n}\nsigned main() {\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n    slv();\n    cout.flush();\n    return 0;\n}\n/*\n \n */\n"
}