{
    "id": 224303769,
    "contestId": 1491,
    "creationTimeSeconds": 1695303177,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1491,
        "index": "G",
        "name": "Switch and Flip",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2800,
        "tags": [
            "constructive algorithms",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1491,
        "members": [
            {
                "handle": "Sky_Maths"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1614519300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 3788800,
    "source": "#include<cstdio>\r\n#include<queue>\r\n#define rep(i,l,r) for(int i(l),i##end(r);i<=i##end;++i)\r\nusing namespace std;\r\nconst int N = 2e5 + 9;\r\nint n,cl;\r\nint c[N],sta[N];\r\nbool vis[N];\r\nqueue<int>q1,q2;\r\nvoid opt(int a,int b) {\r\n    swap(c[a],c[b]);\r\n    q1.push(a);\r\n    q2.push(b);\r\n}\r\nvoid calc(int a,int b) {\r\n    opt(a,b);\r\n    while(c[a]!=b) opt(a,c[a]);\r\n    while(c[b]!=a) opt(b,c[b]);\r\n    opt(a,b);\r\n}\r\nvoid out() {\r\n    printf(\"%d\\n\",(int)q1.size());\r\n    while(!q1.empty()) {\r\n        printf(\"%d %d\\n\",q1.front(),q2.front());\r\n        q1.pop();q2.pop();\r\n    }\r\n}\r\nint main() {\r\n    scanf(\"%d\",&n);\r\n    rep(i,1,n) scanf(\"%d\",&c[i]);\r\n    rep(i,1,n) {\r\n        if(vis[i]) continue;\r\n        sta[++cl]=i;\r\n        for(int j=i;!vis[j];j=c[j]) {\r\n            vis[j]=true;\r\n        }\r\n    }\r\n    if(cl==1) {\r\n        int b=sta[1],a=c[b];\r\n        opt(a,b);\r\n        while(c[c[b]]!=b) opt(b,c[b]);\r\n        int t=c[b];\r\n        opt(a,t);\r\n        opt(b,t);\r\n        opt(a,b);\r\n    }\r\n    else {\r\n        for(int i=1;i+1<=cl;i+=2) calc(sta[i],sta[i+1]);\r\n        if(cl&1) calc(sta[1],sta[cl]);\r\n    }\r\n    out();\r\n    return 0;\r\n}"
}