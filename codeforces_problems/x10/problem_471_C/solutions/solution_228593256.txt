{
    "id": 228593256,
    "contestId": 471,
    "creationTimeSeconds": 1697566440,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 471,
        "index": "C",
        "name": "MUH and House of Cards",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1700,
        "tags": [
            "binary search",
            "brute force",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 471,
        "members": [
            {
                "handle": "jevinjojo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1411745400
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 28,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std; \r\n#define ll long long \r\nconst long long INF = 1000000000000;\r\nconst int MAXN = 2e5 + 5;\r\n#define mod (int )(1e9 + 7)//\r\n#define modd 998244353\r\nconst double PI = 3.1415926535897932384626433;\r\n// ll a[MAXN];\r\n// ll b[MAXN];\r\n// ll pref[MAXN];\r\nll fune(ll f1){\r\n    return 3 * f1 * (f1 + 1) / 2 - f1;\r\n}\r\nll getMaxHeight(ll n) {\r\n  ll l = 0;\r\n  ll r = 1000000;\r\n  while (l + 1 < r) {\r\n    ll m = (l + r) / 2;\r\n    if (fune(m) <= n) l = m;\r\n    else r = m;\r\n  }\r\n  return l;\r\n}\r\n \r\nvoid solve(){\r\n    ll n;\r\n    cin >> n;\r\n    ll mx = getMaxHeight(n);\r\n    while ((mx + n) % 3) mx--;\r\n    cout << (mx + 3 - 1) / 3 << \"\\n\";\r\n}\r\nint main(){\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n//  freopen(\"input.txt\", \"r\",stdin);\r\n//  freopen(\"output.txt\", \"w\",stdout);\r\n    solve();\r\n    return 0;\r\n}"
}