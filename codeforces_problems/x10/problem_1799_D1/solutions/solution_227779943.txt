{
    "id": 227779943,
    "contestId": 1799,
    "creationTimeSeconds": 1697100121,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1799,
        "index": "D1",
        "name": "Hot Start Up (easy version)",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1900,
        "tags": [
            "dp"
        ]
    },
    "author": {
        "contestId": 1799,
        "members": [
            {
                "handle": "KingOfHababeesh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1677508500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 28,
    "timeConsumedMillis": 576,
    "memoryConsumedBytes": 201318400,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n#define int long long\r\n#define ll long long\r\n#define F first\r\n#define S second\r\n#define endl '\\n'\r\n#define all(x) x.begin() , x.end()\r\n#define FIO ios::sync_with_stdio(0);cin.tie(0);cout.tie(0)\r\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\r\n\r\nconst long long mod = 1e9+7 , Inf = LLONG_MAX ;\r\nconst int N = 5005 , inf = INT_MAX ;\r\nint mvi[] = {1 , -1 , 0 , 0 , 1 , 1 , -1 , -1 } ;\r\nint mvj[] = {0 , 0 , 1 , -1 , 1 , -1 , 1 , -1 } ;\r\n\r\nint a[N] , hot[N] , cold[N] , dp[N][N] ;\r\nint n , k ;\r\n\r\nint Rec ( int i , int last ) {\r\n    if ( i == n+1 ) return 0 ;\r\n    if ( dp[i][last] != -1 ) return dp[i][last] ;\r\n    if ( a[i] == a[i-1] ) dp[i][last] = Rec(i+1 , last) + hot[a[i]] ;\r\n    else dp[i][last] = Rec(i+1 , last) + cold[a[i]] ;\r\n\r\n    if ( a[i] == last ) dp[i][last] = min(dp[i][last] , Rec(i+1 , a[i-1])+hot[a[i]] ) ;\r\n    else dp[i][last] = min(dp[i][last] , Rec(i+1 , a[i-1])+cold[a[i]] ) ;\r\n\r\n    return dp[i][last] ;\r\n}\r\n\r\nint32_t main() { FIO ;\r\n\r\n    int t ; cin >> t ;\r\n    while ( t-- ) {\r\n        cin >> n >> k ;\r\n        for ( int i = 1 ; i <= n ; i ++ ) cin >> a[i] ;\r\n        for ( int i = 1 ; i <= k ; i ++ ) cin >> cold[i] ;\r\n        for ( int i = 1 ; i <= k ; i ++ ) cin >> hot[i] ;\r\n        for ( int i = 0 ; i <= n+1 ; i ++ ) {\r\n            for ( int j = 0 ; j <= k+1 ; j ++ ) dp[i][j] = -1 ;\r\n        }\r\n        cout << Rec(1 , 0) << endl ;\r\n    }\r\n\r\n    return 0 ;\r\n}\r\n"
}