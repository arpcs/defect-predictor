{
    "id": 233944607,
    "contestId": 1799,
    "creationTimeSeconds": 1700757159,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1799,
        "index": "D1",
        "name": "Hot Start Up (easy version)",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1900,
        "tags": [
            "dp"
        ]
    },
    "author": {
        "contestId": 1799,
        "members": [
            {
                "handle": "Naitnal"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1677508500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 28,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 201216000,
    "source": "#include <bits/stdc++.h>\r\n#include <algorithm>\r\n#include <climits>\r\n#include <functional>\r\n#include <iomanip>\r\n#include <queue>\r\n#include <set>\r\n#include <valarray>\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define mp make_pair\r\n#define fi first\r\n#define se second\r\n#define pii pair<int, int>\r\n#define pll pair<ll, ll>\r\n#define pb push_back\r\n#define rep(a, b, c) for (int a = b; a <= c; a++)\r\n#define per(a, b, c) for (int a = c; a >= b; a--)\r\n#define all(a) a.begin() + 1, a.end()\r\n#define all_(a) a.begin(), a.end()\r\n#define vi vector<int>\r\n#define vl vector<ll>\r\n#define vpii vector<pii>\r\n#define vpll vector<pll>\r\nint mod = 998244353;\r\nll gcd(ll a, ll b) {return b == 0 ? a : gcd(b, a % b);}\r\nll lcm(ll a, ll b) {return a / gcd(a, b) * b;}\r\nll fp_m (ll a, ll n) {\r\n    a %= mod;\r\n    ll res = 1; while (n) { if (n & 1) res = res * a % mod; a = a * a % mod; n >>= 1; } return res;\r\n}\r\nll fp (ll a, ll n) {\r\n    ll res = 1; while (n) { if (n & 1) res *= a; a *= a; n >>= 1; } return res;\r\n}\r\nll inv(ll x) {return fp_m(x, mod - 2);}\r\ntemplate<typename T>\r\nstd::ostream& operator<<(std::ostream& os, const std::vector<T>& vec) {\r\n    os << \"[\";\r\n    for (size_t i = 0; i < vec.size(); ++i) {\r\n        os << vec[i];\r\n        if (i < vec.size() - 1)\r\n            os << \", \";\r\n    }\r\n    os << \"]\";\r\n    return os;\r\n}\r\ntemplate<typename T, typename... Args>\r\nvoid debug(std::string name, T value, Args &&...arg) {\r\n    std::cout << name;\r\n    (..., (std::cout << '[' << arg << ']'));\r\n    std::cout << \" = \" << value << '\\n';\r\n}\r\n//\u4e2d\u6587\u6d4b\u8bd5 \u4e2d\u6587\u6d4b\u8bd5\r\nsigned main()   {\r\n    std::ios::sync_with_stdio(0);\r\n    std::cin.tie(0); std::cout.tie(0);\r\n    int tt; std::cin >> tt;\r\n    while (tt--) {\r\n        int n, k; std::cin >> n >> k;\r\n        std::vector<int> a(n + 1);\r\n        for (int i = 1; i <= n; i++) {\r\n            std::cin >> a[i];\r\n        }\r\n        std::vector<int> cold(k + 1), hot(k + 1);\r\n        for (int i = 1; i <= k; i++) {\r\n            std::cin >> cold[i];\r\n        }\r\n        for (int i = 1; i <= k; i++) {\r\n            std::cin >> hot[i];\r\n        }\r\n        // std::vector f(n + 1, std::array<std::vector<long long>, 2>{});\r\n        std::vector f(n + 1, std::vector<long long>(k + 1, 4e18));\r\n        /*\r\n        for (int i = 1; i <= n; i++) {\r\n            for (int j = 0; j <= 1; j++) {\r\n                f[i][j].resize(n + 1, 4e18);\r\n            }\r\n        }\r\n        */\r\n        f[1][0] = cold[a[1]];\r\n        for (int i = 1; i <= n - 1; i++) {\r\n            for (int j = 0; j <= k; j++) {\r\n                // a[i + 1]\r\n                // use last to update\r\n                // use another to udpate\r\n                f[i + 1][j] = std::min(f[i][j] + ((a[i + 1] == a[i]) ? hot[a[i + 1]] : cold[a[i + 1]]), f[i + 1][j]);\r\n                f[i + 1][a[i]] = std::min(f[i][j] + ((a[i + 1] == j) ? hot[a[i + 1]] : cold[a[i + 1]]), f[i + 1][a[i]]);\r\n            }\r\n        }\r\n        long long ans = 4e18;\r\n        for (int i = 0; i <= k; i++) {\r\n            ans = std::min(ans, f[n][i]);\r\n        }\r\n        std::cout << ans << '\\n';\r\n    }\r\n    return 0;\r\n}\r\n\r\n\r\n/*\r\n1 2 3 4 5 6\r\n[1, 1]\r\n[2, 2]\r\n[3, 3]\r\n[4, 2]\r\n[5, 1]\r\n[6, 1]\r\n\r\n*/"
}