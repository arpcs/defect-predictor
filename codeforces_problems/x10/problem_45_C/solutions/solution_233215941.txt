{
    "id": 233215941,
    "contestId": 45,
    "creationTimeSeconds": 1700249130,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 45,
        "index": "C",
        "name": "Dancing Lessons",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 45,
        "members": [
            {
                "handle": "ekvir21"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1289646000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <queue>\r\n#include <set>\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    string genders;\r\n    cin >> genders;\r\n\r\n    vector<int> skills(n);\r\n    for (int i = 0; i < n; ++i) {\r\n        cin >> skills[i];\r\n    }\r\n\r\n    vector<pair<int, int>> boys, girls;\r\n\r\n    for (int i = 0; i < n; ++i) {\r\n        if (genders[i] == 'B') {\r\n            boys.push_back({skills[i], i + 1});\r\n        } else {\r\n            girls.push_back({skills[i], i + 1});\r\n        }\r\n    }\r\n\r\n    sort(boys.begin(), boys.end());\r\n    sort(girls.begin(), girls.end());\r\n\r\n    priority_queue<tuple<int, int, int>, vector<tuple<int, int, int>>, greater<tuple<int, int, int>>> pq;\r\n\r\n    for (int i = 0; i + 1 < min(boys.size(), girls.size()); ++i) {\r\n        pq.push({abs(boys[i].first - girls[i].first), boys[i].second, girls[i].second});\r\n    }\r\n\r\n    vector<pair<int, int>> couples;\r\n    while (!pq.empty()) {\r\n        auto [diff, boy, girl] = pq.top();\r\n        pq.pop();\r\n        couples.push_back({min(boy, girl), max(boy, girl)});\r\n    }\r\n\r\n    cout << couples.size() << endl;\r\n    for (const auto& couple : couples) {\r\n        cout << couple.first << \" \" << couple.second << endl;\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}