{
    "id": 221013292,
    "contestId": 475,
    "creationTimeSeconds": 1693336033,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 475,
        "index": "D",
        "name": "CGCDSSQ",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 475,
        "members": [
            {
                "handle": "iliaaaaa"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1412514000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 920,
    "memoryConsumedBytes": 21401600,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst int N = 1e5 + 7, LG = 20;\nmap<int, long long> cnt;\nint n, a[N], sp[LG][N];\n\nvoid read_input() {\n\tcin >> n;\n\tfor (int i = 0; i < n; i++)\n\t\tcin >> a[i];\n}\n\nint get(int l, int r) {\n\tint m = r - l;\n\tint id = 31 - __builtin_clz(m);\n\treturn gcd(sp[id][l], sp[id][r - (1 << id)]);\n}\n\nvoid divide(int st, int l, int r) {\n\tint mid = (r + l) >> 1;\n\tif (get(st, l + 1) == get(st, r)) {\n\t\tcnt[get(st, l + 1)] += r - l;\n\t\treturn;\n\t}\n\tdivide(st, l, mid);\n\tdivide(st, mid, r);\n}\n\nvoid solve() {\n\tfor (int i = 0; i < n; i++)\n\t\tsp[0][i] = a[i];\n\tfor (int j = 1; j < LG; j++)\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tif (i + (1 << j) <= n)\n\t\t\t\tsp[j][i] = gcd(sp[j - 1][i], sp[j - 1][i + (1 << (j - 1))]);\n\tfor (int i = 0; i < n; i++)\n\t\tdivide(i, i, n);\n}\n\nvoid write_output() {\n\tint q;\n\tcin >> q;\n\twhile (q--) {\n\t\tint x;\n\t\tcin >> x;\n\t\tcout << cnt[x] << '\\n';\n\t}\n}\n\nint main() {\n\tios:: sync_with_stdio(0), cin.tie(0), cout.tie(0);\n\tread_input(), solve(), write_output();\n\treturn 0;\n}\n"
}