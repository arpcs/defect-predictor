{
    "id": 189396688,
    "contestId": 475,
    "creationTimeSeconds": 1673844934,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 475,
        "index": "D",
        "name": "CGCDSSQ",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 475,
        "members": [
            {
                "handle": "bkifhr8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1412514000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 733,
    "memoryConsumedBytes": 25804800,
    "source": "#include <bits/stdc++.h>\n   \n#define fierce ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\n#define freop freopen(\".in\",\"r\",stdin);freopen(\".out\",\"w\",stdout);\n#define mem(name, val) memset(name, val, sizeof(name))\n#define all(x) x.begin(), x.end()\n#define fix fixed << setprecision\n#define rs(x) ((x) << 1 | 1)\n#define ls(x) ((x) << 1)\n#define int long long\n#define endl \"\\n\"\n#define F first\n#define S second\n#define pb push_back\n#define sz(x) x.size()\n   \nconst int dx[] = {1, -1, 0, 0, 1, -1, -1, 1};\nconst int dy[] = {0, 0, 1, -1, 1, -1, 1, -1};\nconst long long inf = 1e9+7;\nconst long double eps = 1e-11;\nconst int MOD = 1e9+7;\nconst int N = 1e5+7;\nconst int LOG = 20;\nconst int ONE = 1;\n    \nusing namespace std;\n   \nvoid init(){\n    #ifndef ONLINE_JUDGE\n    freopen(\"input.txt\",\"r\",stdin);\n    freopen(\"output.txt\",\"w\",stdout);\n    #endif  \n}\n   \nint gcd(int a, int b){\n    while(a and b){\n        if(a>b)\n            a %= b;\n        else\n            b %= a;\n    }return a+b;\n}\n\nint T = 1, n, q, x, sp[N][LOG], a[N], lg[N];\nmap<int, int> mp;\n\nvoid fill(){\n\tlg[1] = 0;\n    for(int i = 2; i <= n; i++) {\n        lg[i] = lg[i / 2] + 1;\n    }\n\tfor(int i = 1; i <= n; i++){\n\t\tcin >> a[i];\n\t\tsp[i][0] = a[i];\n\t}for(int log = 1; log <= LOG; log++){\n\t\tfor(int i = 1; i + (1 << log) - 1 <= n; i++){\n\t\t\tsp[i][log] = gcd(sp[i][log - 1], sp[i + (1 << (log - 1))][log - 1]);\n\t\t}\n\t}\n}\n\nint get(int l, int r){\n\tint len = lg[(r - l + 1)];\n\treturn gcd(sp[l][len], sp[r - (1 << len) + 1][len]);\n}\n\nvoid test(){\n\tcin >> n;\n\tfill();\n\tfor(int i = 1; i <= n; i++){\n\t\tint pos = i;\n\t\twhile(pos >= 1){\n\t\t\tx = get(pos, i);\n\t\t\tint l = 1, r = pos;\n\t\t\tint res = 1;\n\t\t\twhile(l <= r) {\n                int mid=(l+r)/2;\n                if(get(mid, i)==x) {\n                    res = mid;\n                    r = mid - 1;\n                }else{\n                \tl = mid + 1;\n                }\n            }mp[x] += pos - res + 1;\n            pos = res - 1;\n\t\t}\n\t}\n\tcin >> q;\n\twhile(q--){\n\t\tcin >> x;\n\t\tcout << mp[x] << endl;\n\t}\n}\n\nsigned main(){\n    fierce\n    init();\n    // freop\n    // cin >> T;\n    while(T--){\n        test();\n    }\n}\n\t\t    \t\t \t \t\t \t  \t\t  \t   \t\t  \t"
}