{
    "contestId": 1811,
    "index": "D",
    "name": "Umka and a Long Flight",
    "type": "PROGRAMMING",
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "implementation",
        "math"
    ],
    "desc": {
        "title": "D. Umka and a Long Flight",
        "statement": "<p>The girl Umka loves to travel and participate in math olympiads. One day she was flying by plane to the next olympiad and out of boredom explored a huge checkered sheet of paper.</p><p>Denote the $$$n$$$-th Fibonacci number as $$$F_n = \\begin{cases} 1, &amp; n = 0; \\\\ 1, &amp; n = 1; \\\\ F_{n-2} + F_{n-1}, &amp; n \\ge 2. \\end{cases}$$$</p><p>A checkered rectangle with a height of $$$F_n$$$ and a width of $$$F_{n+1}$$$ is called a Fibonacci rectangle <span class=\"tex-font-style-it\">of order</span> $$$n$$$.</p><p>Umka has a Fibonacci rectangle <span class=\"tex-font-style-it\">of order</span> $$$n$$$. Someone colored a cell in it at the intersection of the row $$$x$$$ and the column $$$y$$$.</p><p>It is necessary to cut this rectangle <span class=\"tex-font-style-bf\">exactly</span> into $$$n+1$$$ squares in such way that</p><ul> <li> the painted cell was in a square with a side of $$$1$$$; </li><li> there was <span class=\"tex-font-style-bf\">at most one</span> pair of squares with equal sides; </li><li> the side of each square was equal to a Fibonacci number. </li></ul><p>Will Umka be able to cut this rectangle in that way?</p>",
        "inputSpecification": "<p>The first line contains an integer $$$t$$$ ($$$1 \\le t \\le 2 \\cdot 10^5$$$)\u00a0\u2014 number of test cases.</p><p>For each test case the integers $$$n$$$, $$$x$$$, $$$y$$$ are given ($$$1 \\le n \\le 44$$$, $$$1 \\le x \\le F_n$$$, $$$1 \\le y \\le F_{n+1}$$$)\u00a0\u2014 <span class=\"tex-font-style-it\">the order</span> of the Fibonacci rectangle and the coordinates of the colored cell.</p>",
        "outputSpecification": "<p>For each test case, print \"<span class=\"tex-font-style-tt\">YES</span>\" if the answer is positive, and \"<span class=\"tex-font-style-tt\">NO</span>\" otherwise.</p><p>You can print \"<span class=\"tex-font-style-tt\">YES</span>\" and \"<span class=\"tex-font-style-tt\">NO</span>\" in any case (for example, the strings \"<span class=\"tex-font-style-tt\">yEs</span>\", \"<span class=\"tex-font-style-tt\">yes</span>\" and \"<span class=\"tex-font-style-tt\">Yes</span>\" will be recognized as a positive answer).</p>",
        "samples": [
            {
                "input": "<div class=\"test-example-line test-example-line-even test-example-line-0\">12</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 1 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 1 4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3 3 2</div><div class=\"test-example-line test-example-line-odd test-example-line-5\">4 4 6</div><div class=\"test-example-line test-example-line-even test-example-line-6\">4 3 3</div><div class=\"test-example-line test-example-line-odd test-example-line-7\">5 6 5</div><div class=\"test-example-line test-example-line-even test-example-line-8\">5 4 12</div><div class=\"test-example-line test-example-line-odd test-example-line-9\">5 2 12</div><div class=\"test-example-line test-example-line-even test-example-line-10\">4 2 1</div><div class=\"test-example-line test-example-line-odd test-example-line-11\">1 1 2</div><div class=\"test-example-line test-example-line-even test-example-line-12\">44 758465880 1277583853</div>",
                "output": "\nYES\nNO\nYES\nYES\nYES\nNO\nYES\nNO\nNO\nYES\nYES\nNO\n"
            }
        ],
        "note": "<center> <table class=\"tex-tabular\"><tbody><tr><td class=\"tex-tabular-text-align-center\"><img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/29b5630f5e86cc0d3eb57489813273f69d288c60.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></td><td class=\"tex-tabular-text-align-center\"><img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/e90d863f77c5a6eee283b5d85e90b8db43180c29.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></td><td><img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/719263aedccc2d854320d64ed9f71ae8c61cd71f.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></td></tr></tbody></table> <span class=\"tex-font-size-small\">The first, third and fourth test cases.</span> </center>"
    },
    "suggested_categories": [
        "mathematics",
        "geometry",
        "algorithms",
        "dynamic programming",
        "number theory",
        "combinatorics",
        "fibonacci sequence",
        "rectangles",
        "coordinates",
        "math olympiad",
        "plane geometry",
        "test cases",
        "pattern recognition",
        "fibonacci numbers",
        "conditional statements",
        "mathematical proof",
        "optimization",
        "problem solving",
        "geometric shapes",
        "competition programming"
    ]
}