{
    "id": 199457229,
    "contestId": 51,
    "creationTimeSeconds": 1679946204,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 51,
        "index": "E",
        "name": "Pentagon",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2400,
        "tags": [
            "combinatorics",
            "graphs",
            "matrices"
        ]
    },
    "author": {
        "contestId": 51,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1293552000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 45,
    "timeConsumedMillis": 8330,
    "memoryConsumedBytes": 20275200,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\n#define fastio ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\n#define dbg(x)  cout << #x << \" = \" << x << endl\n#define all(x) (x).begin(),(x).end()\n#define rall(x) (x).rbegin(),(x).rend()\n#define pb push_back\n#define int ll\nconst int INF = 0x3f3f3f3f3f3f3f3f;\nint n,m;\nvector<vector<int>> mult(vector<vector<int>> &l,vector<vector<int>> &r){\n    vector nd(n,vector<int>(n,0));\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n            for(int p=0;p<n;p++){\n                nd[i][j] += l[i][p]*r[p][j];\n            }\n        }\n    }\n    return nd;\n}\nint diag_sum(vector<vector<int>> &x){\n    int s = 0;\n    for(int i=0;i<n;i++) s+= x[i][i];\n    return s;\n}\nvoid only_diag(vector<vector<int>> &x){\n    for(int i=0;i<n;i++){\n        for(int j=0;j<n;j++){\n            if(i==j) continue;\n            x[i][j] = 0;\n        }\n    }\n}\nvoid solve(){\n    cin >> n >> m;\n    vector d(n,vector<int>(n,0));\n    for(int i=0;i<m;i++){\n        int a,b;\n        cin >> a >> b;\n        a--;b--;\n        d[a][b] = d[b][a] = 1;\n    }\n    vector<vector<int>> c2 = mult(d,d);\n    vector<vector<int>> c3 = mult(c2,d);\n    vector<vector<int>> c5 = mult(c2,c3);\n    only_diag(c2);\n    vector<vector<int>> aux = mult(c2,c3);\n    \n    int ans = diag_sum(c5) - 5*diag_sum(aux) + 5*diag_sum(c3);\n    cout << ans/10 << \"\\n\";\n}    \n\nsigned main(){\n\tfastio;\n\tsolve();\n}\n\t\t \t   \t   \t \t \t\t \t\t \t  \t     \t"
}