{
    "id": 223350222,
    "contestId": 988,
    "creationTimeSeconds": 1694696156,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 988,
        "index": "C",
        "name": "Equal Sums",
        "type": "PROGRAMMING",
        "rating": 1400,
        "tags": [
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 988,
        "members": [
            {
                "handle": "ali_mohsen_01153235804"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1527863700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 31,
    "timeConsumedMillis": 343,
    "memoryConsumedBytes": 19456000,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\n#define ce cout << '\\n';\r\n#include <string>\r\n// #include<ext/pb_ds/assoc_container.hpp>\r\n// #include<ext/pb_ds/tree_policy.hpp>\r\n// #define for(x,w,z) for(int x=w;x<z;x++)\r\n// #define FOR (x,y) for(auto x:y)\r\n// #define revlop(a,b,c) for(int a=b;a>=c;a--)\r\n#define fast                   \\\r\n    ios_base::sync_with_stdio; \\\r\n    cin.tie(0);                \\\r\n    cout.tie(0);\r\n// #define ordered_set  tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds; // find_by_order, order_of_key\r\n// using namespace __gnu_pbds;\r\n\r\n//---------------------------------------------------------------\r\n#include <iostream>\r\n#include <algorithm>\r\n#include <fstream>\r\nusing namespace std;\r\n\r\nll gcd(ll a, ll b)\r\n{\r\n    if (b == 0)\r\n        return a;\r\n    else\r\n        return gcd(b, a % b);\r\n}\r\n// ll sum2(ll s)\r\n// {\r\n//     return (s * (s + 1)) / 2;\r\n// }\r\n// ll sum1(ll st, ll end)\r\n// {\r\n//     if (st == 1)\r\n//     {\r\n//         return sum2(end);\r\n//     }\r\n//     else\r\n//     {\r\n//         return sum2(end) - sum2(st - 1);\r\n//     }\r\n// }\r\n// ll binar_search(ll n, ll m)\r\n// {\r\n//     ll st = 1, end = m;\r\n//     while (st < end)\r\n//     {\r\n//         ll mid = st + (end - st) / 2;\r\n//         ll summ = sum1(mid, m);\r\n//         if (summ == n)\r\n//         {\r\n//             return m - mid + 1;\r\n//         }\r\n//         else if (summ > n)\r\n//         {\r\n//             st = mid + 1;\r\n//         }\r\n//         else\r\n//         {\r\n//             end = mid;\r\n//         }\r\n//     }\r\n\r\n//     return m - st + 2;\r\n// }\r\n// ll fast_power(ll b, ll e)\r\n// {\r\n//     ll ans = 1;\r\n//     while (e)\r\n//     {\r\n//         if (e % 2)\r\n//         {\r\n//             ans *= b;\r\n//         }\r\n//         b *= b;\r\n//         e /= 2;\r\n//     }\r\n//     return ans;\r\n// }\r\n// ll check(ll mid, vector<ll> v)\r\n// {\r\n//     ll counter = 1, ck = 0;\r\n//     for (int i = 0; i < v.size(); i++)\r\n//     {\r\n//         if (v[i] > v[ck] + mid)\r\n//         {\r\n//             counter++;\r\n//             ck = i;\r\n//         }\r\n//     }\r\n//     return counter;\r\n// }\r\n// int getsolve(int n)\r\n// {\r\n//     if (n == 1)\r\n//     {\r\n//         return 0;\r\n//     }\r\n//     if (n == 2)\r\n//     {\r\n//         return 1;\r\n//     }\r\n//     return getsolve(n - 1) + getsolve(n - 2);\r\n// }\r\n// // vector<ll> v;\r\n// // void get_birep(ll n)\r\n// // {\r\n// //     string s = \"\";\r\n// //     ll counter = 0;\r\n// //     while (n)\r\n// //     {\r\n// //         if (n % 2)\r\n// //             v.push_back(counter);\r\n// //         counter++;\r\n// //         n /= 2;\r\n// //     }\r\n// // }\r\n\r\n// const ll m=1e6;\r\n// // vector<ll>v;\r\n// ll arr[m+1];\r\n// void get_primes(){\r\n//     for(ll i=2;i<=m;i++){\r\n//         if(arr[i]==0){\r\n//             arr[i]=i;\r\n\r\n//           for(ll j=i+i;j<=m;j+=i){\r\n//                  arr[j]=i;\r\n//         }\r\n//         }\r\n\r\n//     }\r\n// }\r\n// void get_ans()\r\n// {\r\n//     set<ll>st;\r\n//     for(int i=1;i<=9;i++){\r\n// st.insert(i);\r\n//     }\r\n//     bool ck=true;\r\n//     for(int i=0;i<10;i++){\r\n// for(auto it:st){\r\n//     int l=it%10;\r\n//     cout<<it;ce\r\n//     if(l==0){\r\n//         st.insert(it*10);\r\n//         st.insert(it*10+1);\r\n//     }\r\n//     else if(l==9){\r\n//         st.insert(it*10+9);\r\n//         st.insert(it*10+8);\r\n//     }\r\n//      else{\r\n//         st.insert(it*10+(it%10-1));\r\n//         st.insert(it*10+(it%10));\r\n//         st.insert(it*10+(it%10+1));\r\n//      }\r\n//      auto q=st.end();\r\n//      q--;\r\n//      if(*q>=3234566667){\r\n//         ck=false;\r\n//         break;\r\n//      }\r\n// }\r\n// if(!ck){\r\n//     break;\r\n// }\r\n//     }\r\n// for(auto it:st){\r\n//     // v.push_back(it);\r\n// }\r\n// }\r\n// struct student{\r\n//     string name;\r\n//     int id;\r\n// };\r\n// const ll n=1e5;\r\n// vector<int>v;\r\n// void solvee(){\r\n//     int q=1;\r\n// for(int i=0;i<n;i++){\r\n// if(q%3==0||q%10==3){\r\n//     q++;\r\n//     continue;\r\n// }\r\n// v.push_back(q);\r\n// q++;\r\n// }\r\n// }\r\n\r\nvoid solvee(int N, ll a, int m, int n)\r\n{\r\n    // cout<<a<<m<<n;ce\r\n    // cout<<N<<\" \"<<a<<\" \"<<m<<\" \"<<n;ce\r\n    if (N >= a)\r\n    {\r\n        // cout<<N;ce\r\n        cout << \"YES\";\r\n        ce return;\r\n    }\r\n    if (m % 2 != 0 && n % 2 && N < a)\r\n    {\r\n        // cout<<N;ce\r\n        cout << \"NO\";\r\n        ce return;\r\n    }\r\n    if (m % 2 == 0 && n % 2 != 0)\r\n    {\r\n        N *= 2;\r\n\r\n        solvee(N, a, m / 2, n);\r\n    }\r\n    else if (m % 2 != 0 && n % 2 == 0)\r\n    {\r\n        N *= 2;\r\n\r\n        solvee(N, a, m, n / 2);\r\n    }\r\n    else if (m % 2 == 0 && n % 2 == 0)\r\n    {\r\n\r\n        N *= 2;\r\n        solvee(N, a, m / 2, n);\r\n    }\r\n}\r\n// bool deldup(ll n){\r\n\r\n// }\r\n\r\n// bool  can(int x,int y){\r\n//     if(arr[x][y]=='*'){\r\n//         return 0;\r\n//     }\r\n//     else{\r\n\r\n//         for(int i=0;i<8;i++){\r\n//             for(int j=0;j<8;j++){\r\n//                 if(arr[i][j]=='e'){\r\n//                     if(abs(i-x)==abs(j-y)||i==x||j==y){\r\n//                         return 0;\r\n//                     }\r\n//                 }\r\n//             }\r\n//         }\r\n//         return 1;\r\n//     }\r\n// }\r\nvector<string> v;\r\nvector<vector<string>>v1;\r\nvoid acc(int i ,string s,vector<string>vss)\r\n{\r\n   if(i==s.size()){\r\n    v1.push_back(vss);\r\n    return;\r\n   }\r\n   if(s[i]=='#'){\r\n    for(int q=0;q<v.size();q++){\r\n     vss.push_back(v[q]);\r\n     acc(i+1,s,vss);\r\n     vss.pop_back();\r\n    }\r\n   }\r\n   else{\r\n    for(int q=0;q<=9;q++){\r\n       vss.push_back(to_string(q));\r\n        acc(i+1,s,vss);\r\n        vss.pop_back();\r\n    }\r\n   }\r\n}\r\n\r\nint popcount(ll a)\r\n{\r\n    int ans = 0;\r\n    while (a)\r\n    {\r\n        if (a & 1)\r\n        {\r\n            ans++;\r\n        }\r\n        a /= 2;\r\n    }\r\n    return ans;\r\n}\r\nint main()\r\n{\r\n    // fast ll t = 1;\r\n    // //  freopen(\"help.in\",\"r\",stdin);\r\n    // //  get_primes();\r\n    //  cin >> t;\r\n\r\n    // while (t--)\r\n    // {\r\n    //     solve();\r\n    // }\r\n    int t;\r\n    map<ll,vector<int>>mp;\r\n    cin>>t;\r\nvector<pair<int,int>>vp;\r\n    for(int i=0;i<t;i++){\r\n        int n;\r\ncin>>n;\r\nvector<int>v(n);\r\n\r\nll sum=0;\r\nfor(int q=0;q<n;q++){\r\ncin>>v[q];\r\nsum+=v[q];\r\n}\r\nbool ck=true;\r\nfor(int l=0;l<n;l++){\r\n   if(!mp[sum-v[l]].empty()&&(mp[sum-v[l]][0]+1)!=(i+1)){\r\n    vp.push_back({mp[sum-v[l]][0]+1,mp[sum-v[l]][1]+1});\r\n    vp.push_back({i+1,l+1});\r\n    break;\r\n   }\r\n   if(!mp[sum-v[l]].empty()&&(mp[sum-v[l]][0]+1)==(i+1)){\r\n    continue;\r\n   }\r\n   \r\n    mp[sum-v[l]].push_back(i);\r\n   mp[sum-v[l]].push_back(l);\r\n}\r\n    }\r\n    if(vp.empty()){\r\n        cout<<\"NO\";ce\r\n    }\r\n    else{\r\n        cout<<\"YES\";ce\r\n        for(int i=0;i<2;i++){\r\n            cout<<vp[i].first<<\" \"<<vp[i].second;ce\r\n        }\r\n    }\r\n}"
}