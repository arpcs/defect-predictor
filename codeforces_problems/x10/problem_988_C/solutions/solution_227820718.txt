{
    "id": 227820718,
    "contestId": 988,
    "creationTimeSeconds": 1697118088,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 988,
        "index": "C",
        "name": "Equal Sums",
        "type": "PROGRAMMING",
        "rating": 1400,
        "tags": [
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 988,
        "members": [
            {
                "handle": "Nanthakumar06"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1527863700
    },
    "programmingLanguage": "Java 8",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 31,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 26726400,
    "source": "import java.io.*;\r\nimport java.math.BigInteger;\r\nimport java.sql.Array;\r\nimport java.util.*;\r\npublic class Main {\r\n    static class FastReader {\r\n        BufferedReader br;\r\n        StringTokenizer st = null;\r\n        PrintWriter pw;\r\n        BufferedWriter bw;\r\n\r\n        public FastReader() {\r\n            br = new BufferedReader(\r\n                    new InputStreamReader(System.in));\r\n            pw = new PrintWriter(\r\n                    new OutputStreamWriter(System.out));\r\n            bw = new BufferedWriter(\r\n                    new OutputStreamWriter(System.out));\r\n        }\r\n\r\n        String next() {\r\n            while (st == null || !st.hasMoreElements()) {\r\n                try {\r\n                    st = new StringTokenizer(br.readLine());\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n            return st.nextToken();\r\n        }\r\n\r\n        int nextInt() {\r\n            return Integer.parseInt(next());\r\n        }\r\n\r\n        long nextLong() {\r\n            return Long.parseLong(next());\r\n        }\r\n\r\n        double nextDouble() {\r\n            return Double.parseDouble(next());\r\n        }\r\n\r\n        String nextLine() {\r\n            String str = \"\";\r\n            try {\r\n                if (st != null && st.hasMoreTokens()) {\r\n                    str = st.nextToken(\"\\n\");\r\n                } else {\r\n                    str = br.readLine();\r\n                }\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n            return str;\r\n        }\r\n\r\n        int[] nextArr(int n) {\r\n            int arr[] = new int[n];\r\n            for (int i = 0; i < n; i++) {\r\n                arr[i] = nextInt();\r\n            }\r\n            return arr;\r\n        }\r\n    }\r\n    static  long mod = (long)1e9+7;\r\n    public static void main(String args[] ) throws Exception {\r\n        FastReader fr = new FastReader();\r\n        int t = 1;\r\n        while(t-->0)\r\n        {\r\n          int n = fr.nextInt();\r\n          Set<Long> set = new HashSet<>();\r\n          Map<Long,comp> map = new HashMap<>();\r\n          for(int i=0;i<n;i++)\r\n          {\r\n              int len = fr.nextInt();\r\n              long arr[] = new long[len];\r\n              long sum = 0;\r\n              for(int j=0;j<len;j++)\r\n              {\r\n                  arr[j] = fr.nextLong();\r\n                  sum += arr[j];\r\n              }\r\n              for(int j=0;j<len;j++)\r\n              {\r\n                  long isum = sum-arr[j];\r\n                  if(set.contains(isum) && map.get(isum).ind != i+1)\r\n                  {\r\n                      fr.pw.println(\"YES\");\r\n                      fr.pw.println(map.get(isum).ind+\" \"+map.get(isum).val);\r\n                      fr.pw.println((i+1)+\" \"+(j+1));\r\n                      fr.pw.close();\r\n                      return;\r\n                  }\r\n                  set.add(isum);\r\n                  map.put(isum,new comp(i+1,j+1));\r\n              }\r\n          }\r\n          fr.pw.println(\"NO\");\r\n        }\r\n        fr.pw.close();\r\n    }\r\n    \r\n}\r\nclass comp\r\n{\r\n    int ind;\r\n    int val;\r\n    comp(int a,int b)\r\n    {\r\n        this.ind = a;\r\n        this.val = b;\r\n    }\r\n}"
}