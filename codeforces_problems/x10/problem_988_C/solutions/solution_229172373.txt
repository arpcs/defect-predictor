{
    "id": 229172373,
    "contestId": 988,
    "creationTimeSeconds": 1697961962,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 988,
        "index": "C",
        "name": "Equal Sums",
        "type": "PROGRAMMING",
        "rating": 1400,
        "tags": [
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 988,
        "members": [
            {
                "handle": "test_code_or"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1527863700
    },
    "programmingLanguage": "C# 10",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 8806400,
    "source": "\ufeffusing System;\r\nusing System.ComponentModel.DataAnnotations;\r\n\r\nnamespace task_D\r\n{\r\n    class Program\r\n    {\r\n        static int sum_arr(int[] arr)\r\n        {\r\n            int sum = 0;\r\n            for (int i = 0; i < arr.Length; i++)\r\n                sum += arr[i];\r\n            return sum;\r\n        }\r\n        static bool Contains_2m(int[,] arr, int target)\r\n        {\r\n            for (int i = 0; i < arr.GetLength(0); i++)\r\n                if (arr[i, 0] == target) return true;\r\n            return false;\r\n        }\r\n        static int IndexOf_2m(int[,] arr, int target)\r\n        {\r\n            for (int i = 0; i < arr.GetLength(0); i++)\r\n                if (arr[i, 0] == target) return i;\r\n            return -1;\r\n        }\r\n        static void Main(string[] args)\r\n        {\r\n            int k = int.Parse(Console.ReadLine());\r\n            int[][] all_sequence = new int[k][];\r\n            int[] sum_el_sequence = new int[k];\r\n            bool flag = false;\r\n            int[][,] sum_el = new int[k][,];\r\n            int index_sum_el = 0;\r\n            for (int l = 0; l < k && !flag; l++)\r\n            {\r\n                int len_i = int.Parse((Console.ReadLine()));\r\n                string[] strings = Console.ReadLine().Split();\r\n                all_sequence[l] = new int[len_i];\r\n                for (int p = 0; p < len_i; p++)\r\n                    all_sequence[l][p] = int.Parse(strings[p]);\r\n                sum_el_sequence[l] = sum_arr(all_sequence[l]);\r\n                int[,] sum_i = new int[all_sequence[l].Distinct().Count(), 2];\r\n                int index_sum_i = 0;\r\n                int j = 0;\r\n                while (j < all_sequence[l].Length && !flag)\r\n                {\r\n                    int sum = sum_el_sequence[l] - all_sequence[l][j];\r\n                    if (!Contains_2m(sum_i,sum))\r\n                    {\r\n                        sum_i[index_sum_i, 0] = sum;\r\n                        sum_i[index_sum_i, 1] = Array.IndexOf(all_sequence[l], all_sequence[l][j]);\r\n                        index_sum_i++;\r\n                    }\r\n                    int q = 0;\r\n                    while (q < index_sum_el && !flag)\r\n                    {\r\n                        int index = IndexOf_2m(sum_el[q], sum_i[index_sum_i - 1, 0]);\r\n                        if (index != -1)\r\n                        {\r\n                            Console.WriteLine(\"YES\");\r\n                            Console.WriteLine((q + 1) + \" \" + (sum_el[q][index, 1] + 1));\r\n                            Console.WriteLine((l + 1) + \" \" + (sum_i[index_sum_i - 1, 1] + 1));\r\n                            flag = true;\r\n                        }\r\n                        q++;\r\n                    }\r\n                    j++;\r\n                }\r\n                sum_el[index_sum_el++] = sum_i;\r\n            }\r\n            if (!flag)\r\n                Console.WriteLine(\"NO\");\r\n        }\r\n    }\r\n}\r\n"
}