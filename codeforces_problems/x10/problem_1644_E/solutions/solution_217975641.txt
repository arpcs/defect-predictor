{
    "id": 217975641,
    "contestId": 1644,
    "creationTimeSeconds": 1691566421,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1644,
        "index": "E",
        "name": "Expand the Path",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "brute force",
            "combinatorics",
            "data structures",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1644,
        "members": [
            {
                "handle": "bcs_abhisekh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1645540500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 3686400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define E 1e-9\r\n#define PI 3.141592653589793238462\r\n#define PB push_back\r\n#define EB emplace_back\r\n#define F first\r\n#define S second\r\n#define MP make_pair\r\n#define INF 1e18\r\n#define MOD 1000000007\r\n#define SZ(a) int((a).size())\r\n#define setbits(a) (__builtin_popcountll(a))\r\n#define right(a) (__builtin_ctzll(a))\r\n#define left(a) (__builtin_clzll(a))\r\n#define parity(a) (__builtin_parityll(a))\r\n#define msb(a) (__lg(a))\r\n#define lsb(a) ((ll)(log2(a & -a)))\r\ntypedef std::numeric_limits<double> dbl;\r\ntypedef long long ll;\r\n#define REP(i, a, b) for (ll i = a; i < b; i++)\r\ntypedef vector<ll> vi;\r\ntypedef pair<ll, ll> pi;\r\ntypedef pair<ll, pi> pii;\r\n\r\nll power(ll a, ll n)\r\n{\r\n    ll ans = 1ll;\r\n    while (n > 0)\r\n    {\r\n        int last_bit = (n & 1ll);\r\n        if (last_bit)\r\n        {\r\n            ans = ans * a;\r\n        }\r\n        a = a * a;\r\n        n = n >> 1ll;\r\n    }\r\n    return ans;\r\n}\r\n\r\n#define MAXV 2e5 + 1\r\nvector<ll> Parent(MAXV), Rank(MAXV);\r\n\r\nvoid Init(ll n)\r\n{\r\n    REP(i, 1, n + 1)\r\n    {\r\n        Parent[i] = i;\r\n        Rank[i] = 1;\r\n    }\r\n}\r\nll Root(ll x)\r\n{\r\n    if (Parent[x] != x)\r\n        Parent[x] = Root(Parent[x]);\r\n    return Parent[x];\r\n}\r\nvoid Union(ll x, ll y)\r\n{\r\n    ll rx = Root(x), ry = Root(y);\r\n    if (rx == ry)\r\n        return;\r\n    if (Rank[rx] > Rank[ry])\r\n    {\r\n        Parent[ry] = rx;\r\n        Rank[rx] += Rank[ry];\r\n    }\r\n    else\r\n    {\r\n        Parent[rx] = ry;\r\n        Rank[ry] += Rank[rx];\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    ll t;\r\n    cin >> t;\r\n    while (t--)\r\n    {\r\n        ll n;\r\n        cin >> n;\r\n        string s;\r\n        cin >> s;\r\n        ll ans = 1ll;\r\n        ll x = 1, y = 1;\r\n        for (auto &ch : s)\r\n        {\r\n            if (ch == 'D')\r\n                x += 1;\r\n            else\r\n                y += 1;\r\n        }\r\n        ll x_rem = n - x, y_rem = n - y;\r\n        ll cntd = 0ll, cntr = 0ll, ok = 1ll;\r\n        for (ll i = SZ(s) - 1; i >= 0; i--)\r\n        {\r\n            char ch = s[i];\r\n            if (i < SZ(s) - 1 && s[i] == s[i + 1])\r\n            {\r\n                if (s[i] == 'D')\r\n                {\r\n                    cntd++;\r\n                    cntr = 0ll;\r\n                }\r\n                else\r\n                {\r\n                    cntr++;\r\n                    cntd = 0ll;\r\n                }\r\n                continue;\r\n            }\r\n            if (ch == 'D')\r\n            {\r\n                ans += x_rem;\r\n                if (cntr)\r\n                {\r\n                    if (ok)\r\n                    {\r\n                        ans += cntr * x_rem;\r\n                        ok = 0ll;\r\n                    }\r\n                    else\r\n                    {\r\n                        ans += (cntr - 1) * x_rem;\r\n                    }\r\n                }\r\n                cntd++;\r\n                cntr = 0ll;\r\n            }\r\n            else\r\n            {\r\n                ans += y_rem;\r\n                if (cntd)\r\n                {\r\n                    if (ok)\r\n                    {\r\n                        ans += cntd * y_rem;\r\n                        ok = 0ll;\r\n                    }\r\n                    else\r\n                    {\r\n                        ans += (cntd - 1) * y_rem;\r\n                    }\r\n                }\r\n                cntr++;\r\n                cntd = 0ll;\r\n            }\r\n        }\r\n        if (x > 1 && y > 1)\r\n        {\r\n            ans += max(0ll, (n - x) * (n - y));\r\n        }\r\n        cout << ans + SZ(s) << '\\n';\r\n    }\r\n    return 0;\r\n}"
}