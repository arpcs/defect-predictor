{
    "id": 231519167,
    "contestId": 1593,
    "creationTimeSeconds": 1699221858,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1593,
        "index": "G",
        "name": "Changing Brackets",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "constructive algorithms",
            "data structures",
            "dp",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1593,
        "members": [
            {
                "handle": "maheshc1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634135700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 17,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 9625600,
    "source": "#include <bits/stdc++.h>\r\n#pragma GCC optimize(\"O3,unroll-loops\")\r\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\r\n#define For(i,a,b) for(int i=a;i<b;i++)\r\n#define all(x) (x).begin(), (x).end()\r\n#define pb push_back;\r\n#define LL long long\r\nusing namespace std;\r\n\r\nvoid solve(){\r\n    string s;\r\n    cin>>s;\r\n    int n=s.length();\r\n\r\n    vector<int> cnteven(n+1), cntodd(n+1);\r\n    for(int i=1;i<=n;i++){\r\n        cnteven[i]=cnteven[i-1];\r\n        cntodd[i]=cntodd[i-1];\r\n        if(s[i-1]=='[' || s[i-1]==']'){\r\n            if(i%2==0) cnteven[i]++;\r\n            else cntodd[i]++;\r\n        }\r\n    }\r\n\r\n    int q,l,r;\r\n    cin>>q;\r\n    for(int i=0;i<q;i++){\r\n        cin>>l>>r;\r\n        int ans=abs(cnteven[r]-cnteven[l-1]-cntodd[r]+cntodd[l-1]);\r\n        cout<<ans<<\"\\n\";\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n\tcout.tie(NULL);\r\n\r\n    int t;\r\n    cin>>t;\r\n    while(t--) solve();\r\n\t\r\n\t\r\n\t\r\n\treturn 0;\r\n}"
}