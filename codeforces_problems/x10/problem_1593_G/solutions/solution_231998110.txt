{
    "id": 231998110,
    "contestId": 1593,
    "creationTimeSeconds": 1699479468,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1593,
        "index": "G",
        "name": "Changing Brackets",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "constructive algorithms",
            "data structures",
            "dp",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1593,
        "members": [
            {
                "handle": "_ahmed_tawfik_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634135700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 17,
    "timeConsumedMillis": 108,
    "memoryConsumedBytes": 18124800,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nll mod = 1e9 + 7;\nvoid solve(){\n    string s;\n    cin >> s;\n    int n = s.size();\n    vector<ll> odd(n+1) , even(n+1);\n    for (int i = 0;i<n;i++){\n        if (s[i] == ')'  || s[i] == '(') continue;\n        if (i%2 == 1){\n            odd[i+1] = 1;\n        }else{\n            even[i+1] = 1;\n        }\n    }\n    partial_sum(odd.begin(),odd.end(),odd.begin());\n    partial_sum(even.begin(),even.end(),even.begin());\n    int q;\n    cin >> q;\n    while(q--){\n        ll l , r ;\n        cin >> l >> r;\n        cout<<abs(even[r] - even[l-1] - (odd[r] - odd[l - 1]))<<'\\n';\n    }\n\n}\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    int t = 1;\n    cin >>t;\n    while(t--)\n    solve();\n}\n"
}