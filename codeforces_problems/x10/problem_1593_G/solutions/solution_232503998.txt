{
    "id": 232503998,
    "contestId": 1593,
    "creationTimeSeconds": 1699792549,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1593,
        "index": "G",
        "name": "Changing Brackets",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "constructive algorithms",
            "data structures",
            "dp",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1593,
        "members": [
            {
                "handle": "algohary"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634135700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 17,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 6041600,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nconst char nl = '\\n';\n\nvoid solve() {\n    string s;\n    cin >> s;\n    int n = s.size();\n    s = '*' + s;\n    vector<int> pref(n + 1);\n    for (int i = 1; i <= n; i++) {\n        if (s[i] == '[' || s[i] == ']') {\n            if (i & 1) pref[i]++;\n            else pref[i]--;\n        }\n    }\n    partial_sum(begin(pref), end(pref), begin(pref));\n    int q;\n    cin >> q;\n    while (q--) {\n        int l, r;\n        cin >> l >> r;\n        cout << abs(pref[r] - pref[l - 1]) << nl;\n    }\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    int t = 1;\n    cin >>t;\n    while(t--)\n    solve();\n}\n"
}