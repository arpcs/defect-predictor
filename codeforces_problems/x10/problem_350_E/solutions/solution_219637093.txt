{
    "id": 219637093,
    "contestId": 350,
    "creationTimeSeconds": 1692512309,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 350,
        "index": "E",
        "name": "Wrong Floyd",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2200,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 350,
        "members": [
            {
                "handle": "KoKonuts"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1380641400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 2150400,
    "source": "#include \"bits/stdc++.h\"\n#ifndef DEBUG\n#pragma GCC optimize(\"Ofast,unroll-loops\")\n#pragma GCC target(\"avx2,popcnt,lzcnt,abm,bmi,bmi2,fma,tune=native\")\n#endif\n#define many int t; cin >> t; while (t--)\n#define yesno cout << (solve() ? \"YES\" : \"NO\") << '\\n'\n#define print cout << solve() << '\\n'\n#define call solve()\n#define rep(a, b) for (num a = 0; a < (b); ++a)\n#define all(a) (a).begin(), (a).end()\nusing namespace std;\nusing num = long long int;\nusing seq = vector<num>;\nusing bits = vector<char>;\nusing par = pair<num,num>;\nusing Graph = vector<vector<num>>;\ntemplate<typename T> using Table = vector<vector<T>>;\ntemplate<typename T, typename U> ostream& operator<<(ostream& os, const pair<T,U>& p) { return os << p.first << ' ' << p.second; }\ntemplate<typename T, typename U> istream& operator>>(istream& is, pair<T,U>& p) { return is >> p.first >> p.second; }\ntemplate<typename T> ostream& operator<<(ostream& os, const vector<T>& v) { for (auto& e : v) os << e << ' '; return os; }\ntemplate<typename T> istream& operator>>(istream& is, vector<T>& v) { for (auto& e : v) is >> e; return is; }\ntemplate<typename T> num sign(T x) { return (T(0) < x) - (x < T(0)); }\nconstexpr num operator \"\"_e(unsigned long long x) { num ans = 1; rep(i, static_cast<num>(x)) ans *= 10; return ans; }\n\nvoid solve() {\n\tnum n, m, k;\n\tcin >> n >> m >> k;\n\tif (k == n) {\n\t\tcout << \"-1\\n\";\n\t\treturn;\n\t}\n\tseq a(k);\n\tcin >> a;\n\tset<num> aa(all(a));\n\tnum x, y, z;\n\tfor (num i = 1; i <= n; i++) {\n\t\tif (aa.contains(i))\n\t\t\tswap(x, y), x = i;\n\t\telse\n\t\t\tz = i;\n\t}\n\tvector<par> edges;\n\tedges.emplace_back(x, z);\n\tedges.emplace_back(y, z);\n\tfor (num i = 1; i <= n; i++) {\n\t\tif (i == x || i == y || i == z)\n\t\t\tcontinue;\n\t\tedges.emplace_back(x, i);\n\t\tif (!aa.contains(i))\n\t\t\tedges.emplace_back(y, i);\n\t}\n\tfor (num i = 1; i <= n; i++)\n\t\tfor (num j = 1; j < i; j++) {\n\t\t\tif (i == x || i == y || j == x || j == y || i == j)\n\t\t\t\tcontinue;\n\t\t\tedges.emplace_back(i,j);\n\t\t}\n\tif (ssize(edges) < m) {\n\t\tcout << \"-1\\n\";\n\t\treturn;\n\t}\n\trep(i, m)\n\t\tcout << edges[i] << '\\n';\n}\n\nint main() {\n\tios::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\tcall;\n\treturn 0;\n}\n"
}