{
    "id": 202305220,
    "contestId": 350,
    "creationTimeSeconds": 1681598224,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 350,
        "index": "E",
        "name": "Wrong Floyd",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2200,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 350,
        "members": [
            {
                "handle": "aedmhsn2006"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1380641400
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 307200,
    "source": "#include <bits/stdc++.h>\n#include <ext/pb_ds/tree_policy.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\nusing namespace std;\nusing namespace __gnu_pbds;\n#define A first\n#define B second\n#define MP make_pair\n#define ms(a, x) memset(a, x, sizeof(a)) \n \n \n#define boost() ios_base::sync_with_stdio(false); cin.tie(0)\n \ntypedef long long ll;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef pair<long double, long double> pld;\nconst int INF = 0x3f3f3f3f;\nconst ll LLINF = 0x3f3f3f3f3f3f3f3f;\nconst double PI = acos(-1);\n \n \nconst int mxN=1e3+5;\n \n\nint main(){\n    int n, m, k;\n    cin >> n >> m >> k;\n    bool vis[n+5]={};\n    for(int i=1; i<=k; i++){\n        int x;\n        cin >> x;\n        vis[x]=1;\n    }\n    if(n == k || (m == (n*(n-1)/2))) cout << -1;\n    else{\n        vector <vector<int>> adj(n+5);\n        int midnode=0, node1, node2;\n        for(int i=1; i<=n; i++){\n            if(!vis[i]){\n                midnode=i;\n                break;\n            }\n        }\n        node1 = (midnode+1)%n;\n        if(!node1) node1=1;\n        node2 = (midnode-1)%n;\n        if(!node2) node2=n;\n        adj[midnode].push_back(node1);\n        adj[midnode].push_back(node2);\n        m-=2;\n        for(int i=1; i<=n; i++){\n            for(int j=i+1; j<=n; j++){\n                if(m == 0)\n                    break;\n                if(i == midnode && (j == node1 || j == node2)) continue;\n                if(j == midnode && (i == node1 || i == node2)) continue;\n                if(i == node1 && j == node2 || i == node2 && j == node1)\n                    continue;\n                if(i == node1){\n                    if(find(adj[j].begin(), adj[j].end(), node2) != adj[j].end() && vis[j])\n                        continue;\n                }\n                if(i == node2){\n                    if(find(adj[j].begin(), adj[j].end(), node1) != adj[j].end() && vis[j])\n                        continue;\n                }\n                if(j == node1){\n                    if(find(adj[i].begin(), adj[i].end(), node2) != adj[i].end() && vis[i])\n                        continue;\n                }\n                if(j == node2){\n                    if(find(adj[i].begin(), adj[i].end(), node1) != adj[i].end() && vis[i])\n                        continue;\n                }\n                adj[i].push_back(j);\n                m--;\n            }\n            if(m == 0)\n                break;\n        }\n        if(m != 0)\n            cout << -1;\n        else{\n            for(int i=1; i<=n; i++)\n                for(auto x:adj[i])\n                    cout << i << \" \" << x << '\\n';\n        }\n        \n    }\n}"
}