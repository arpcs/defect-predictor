{
    "id": 218915084,
    "contestId": 350,
    "creationTimeSeconds": 1692108576,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 350,
        "index": "E",
        "name": "Wrong Floyd",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2200,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 350,
        "members": [
            {
                "handle": "IlyinAD"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1380641400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 716800,
    "source": "#include<bits\\stdc++.h>\r\nusing namespace std;\r\n \r\nint n, m, mark, x, a[305], p[305], cnt;\r\nint ex[305*305], ey[305*305];\r\n\r\nbool cmp(int x, int y){return a[x] < a[y];}\r\n\r\nvoid add(int x, int y){\r\n\tex[cnt] = x;\r\n    ey[cnt++] = y;\r\n}\r\n\r\nbool solve() {\r\n    if(mark == n) {\r\n        return false;\r\n    }\r\n    for(int i=0; i<n; i++) {\r\n        p[i] = i;\r\n    }\r\n\tsort(p, p + n, cmp);\r\n    add(p[n-1], p[0]);\r\n    for(int i=1; i<=n-2; i++) {\r\n        add(p[0], p[i]);\r\n    }\r\n\tfor(int i=1; i<=n-2; i++) {\r\n        for(int j=1; j<i; j++) {\r\n            add(p[i], p[j]);\r\n        }\r\n    }\r\n\tfor(int i=1; i<n-1; i++) {\r\n        if (!a[p[i]]) {\r\n            add(p[n-1], p[i]);\r\n        }\r\n    }\r\n    return cnt >= m;\r\n}\r\n \r\nint main(){\r\n\tcin >> n >> m >> mark;\r\n\tfor(int i=0; i<mark; i++) {\r\n        cin >> x;\r\n        a[x-1] = 1;\r\n    }\r\n    if (solve()){\r\n        for(int i=0; i<m; i++) {\r\n            cout << ex[i]+1 << \" \" << ey[i]+1 << endl;\r\n        }\r\n\t}\r\n\telse {\r\n        cout << -1 << endl;\r\n    }\r\n\treturn 0;\r\n}"
}