{
    "id": 232458193,
    "contestId": 1354,
    "creationTimeSeconds": 1699766314,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1354,
        "index": "C1",
        "name": "Simple Polygon Embedding",
        "type": "PROGRAMMING",
        "rating": 1400,
        "tags": [
            "binary search",
            "geometry",
            "math",
            "ternary search"
        ]
    },
    "author": {
        "contestId": 1354,
        "members": [
            {
                "handle": "Amgad_ktaya"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1589707200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 86630400,
    "source": "#include<bits/stdc++.h>\r\n\r\n#define pb push_back\r\n#define pf push_front\r\n#define ppb pop_back\r\n#define ppf pop_front\r\n#define S second\r\n#define F first\r\n#define endl \"\\n\"\r\n#define sortx(x) sort(x.begin() , x.end())\r\n#define sortxg(x) sort(x.begin() , x.end(),greater<>())\r\n#define reversex(x) reverse(x.begin() , x.end())\r\n#define searchx(x,v) binary_search(x.begin() , x.end() , v)\r\n#define lb(x,value) lower_bound (x.begin() , x.end() , value)\r\n#define ub(x,value) upper_bound (x.begin() , x.end() , value)\r\n#define accu(x,sum) accumulate(x.begin(),x.end(),sum);\r\n#define ps(x) partial_sum(x.begin(),x.end(),x.begin());\r\n#define all(x) x.begin(),x.end()\r\n#define yes(Ans) cout << (Ans?\"YES\":\"NO\") << endl\r\n#define Amgad ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\ntypedef long long ll;\r\nusing namespace std;\r\n\r\n///////////////////////////////////////////////////////////////\r\n\r\nconst double pi=3.14159265358979323846264338327950288419;\r\nstring alpt=\"abcdefghijklmnopqrstuvwxyz\";\r\nconst ll MOD=1e9+7,MAXX=4e5+9,OO=0x3f3f3f3f;\r\nll dp[1000005],dpt[2005][2005],arr[MAXX],brr[MAXX],arrt[1005][1005],freq[MAXX],pres[MAXX],vis[105],vist[1005][1005],parent[MAXX],dis[MAXX],dist[1005][1005];\r\ndouble dob,flo;\r\nll a,b,c,d,n,m,w,x,y,z,k,l,r,t,u,h,g,nx,ny,cnt,cnt1,cnt2,sum,mn,mx,pos,fnsh,mid,res,one,zero,row,col,p,q,lst,now,node,path,odd,even,from,to,cost;\r\nchar ch,cs[MAXX],cst[1005][1005],ds[4]={'D','L','R','U'};\r\nstring s,s1,s2,s3,s4,str;\r\nbool Ok,Ok1,Ok2,Check,ab[MAXX],abt[1005][1005];\r\nint dx[4]={1,0,0,-1};\r\nint dy[4]={0,-1,1,0};\r\n\r\n///////////////////////////////////////////////////////////////\r\n\r\nll nCr(ll n, ll r)\r\n{\r\n\tif (r > n) return 0;\r\n\tif (r == 0 || n == r) return 1;\r\n\tdouble res = 0;\r\n\tfor (int i = 0; i < r; i++)\r\n    {\r\n\t\tres += log(n-i) - log(i+1);\r\n\t}\r\n\treturn (ll)round(exp(res));\r\n}\r\n\r\nbool IsPrime(ll x)\r\n{\r\n    if(x == 2 || x == 3 || x == 5){return true;}\r\n    if(x % 2 == 0 || x % 3 == 0 || x % 5 == 0 ||x == 1){return false;}\r\n    for(ll p = 7; p <= x / p; p += 2){if(x % p == 0){return false;}}\r\n    return true;\r\n}\r\n\r\nvoid remove_sub_form_str(string &s,string str)\r\n{\r\n    int pos;\r\n    while ((pos  = s.find(str) )!= -1)\r\n    {\r\n        s.erase(pos, str.length());\r\n    }\r\n}\r\n\r\nll LCM(ll lc,ll cm)\r\n{\r\n    return a*b/__gcd(a,b);\r\n}\r\n\r\nll Divisors(ll g)\r\n{\r\n    cnt=0;\r\n    ll i;\r\n    for(i=1;i<g;i++)\r\n    {\r\n        if(!(g%i)) cnt+=2;\r\n    }\r\n    if(i*i==g) cnt++;\r\n    return cnt;\r\n}\r\n\r\nbool valid(int xx,int yy)\r\n{\r\n    return xx>=1&&xx<=n&&yy>=1&&yy<=m;\r\n}\r\n\r\nll POWER(ll a,ll b,ll M)\r\n{\r\n    if(b==0) return 1;\r\n    ll ret=POWER(a,b/2,M);\r\n    ret=(ret*ret)%M;\r\n    if(b&1) ret=(ret*a)%M;\r\n    return ret;\r\n}\r\n\r\nll INV(ll a,ll M)\r\n{\r\n    return POWER(a,M-2,M);\r\n}\r\n\r\n//////////////////////Amgad ktaya/////////////////////////////////\r\n/////////////////////////Solve////////////////////////////////////\r\n\r\n\r\n\r\nvoid Solve()\r\n{\r\n    cin>>n;\r\n    cout<<setprecision(10)<<cos(pi/(2*n))/sin(pi/(2*n))<<endl;\r\n}\r\n\r\nint main()\r\n{\r\n    Amgad\r\n    ll T=1;\r\n    cin>>T;\r\n    while(T--)\r\n    {\r\n        Solve();\r\n    }\r\n    return 0;\r\n}\r\n"
}