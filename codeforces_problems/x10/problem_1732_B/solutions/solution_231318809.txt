{
    "id": 231318809,
    "contestId": 1732,
    "creationTimeSeconds": 1699094518,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1732,
        "index": "B",
        "name": "Ugu",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 900,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1732,
        "members": [
            {
                "handle": "amsem0602"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1666519500
    },
    "programmingLanguage": "Java 8",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 0,
    "source": "import java.util.*;\r\n\r\nimport java.io.*;\r\npublic class class1\r\n{\r\n\t static class FastReader {\r\n\t        BufferedReader br;\r\n\t        StringTokenizer st;\r\n\t \r\n\t        public FastReader()\r\n\t        {\r\n\t            br = new BufferedReader(\r\n\t                new InputStreamReader(System.in));\r\n\t        }\r\n\t \r\n\t        String next()\r\n\t        {\r\n\t            while (st == null || !st.hasMoreElements()) {\r\n\t                try {\r\n\t                    st = new StringTokenizer(br.readLine());\r\n\t                }\r\n\t                catch (IOException e) {\r\n\t                    e.printStackTrace();\r\n\t                }\r\n\t            }\r\n\t            return st.nextToken();\r\n\t        }\r\n\t \r\n\t        int nextInt() { return Integer.parseInt(next()); }\r\n\t \r\n\t        long nextLong() { return Long.parseLong(next()); }\r\n\t \r\n\t        double nextDouble()\r\n\t        {\r\n\t            return Double.parseDouble(next());\r\n\t        }\r\n\t \r\n\t        String nextLine()\r\n\t        {\r\n\t            String str = \"\";\r\n\t            try {\r\n\t                str = br.readLine();\r\n\t            }\r\n\t            catch (IOException e) {\r\n\t                e.printStackTrace();\r\n\t            }\r\n\t            return str;\r\n\t        }\r\n\t        int [] readArray(int n) {\r\n\t\t\t\tint[] a=new int[n];\r\n\t\t\t\tfor (int i=0; i<n; i++) a[i]=nextInt();\r\n\t\t\t\treturn a;\r\n\t\t\t}\r\n\t\t\tlong [] readArrays(int n) {\r\n\t\t\t\tlong[] a=new long[n];\r\n\t\t\t\tfor (int i=0; i<n; i++) a[i]=nextLong();\r\n\t\t\t\treturn a;\r\n\t\t\t}\r\n\t }\r\n\t static class pair implements Comparable<pair>{\r\n\t        int v1;\r\n\t        int v2;\r\n\t        pair(int v1,int v2){\r\n\t            this.v1=v1;\r\n\t            this.v2=v2;\r\n\t        }\r\n\t        public int compareTo(pair o){\r\n\t            return this.v1-o.v1;\r\n\t        }\r\n\t    }\r\n  public static void main(String[] args)\r\n   {\r\n\t  FastReader input=new FastReader();\r\n\t  PrintWriter out=new PrintWriter(System.out);\r\n\t  int t=input.nextInt();\r\n\t  while(t-->0) {\r\n\t\t  int n=input.nextInt();\r\n\t\t  String s=input.next();\r\n\t\t  char c[]=s.toCharArray();\r\n\t\t  int f=0,k=0,j=0,count=0;\r\n\t\t  for(int i=0;i<n;i++) {\r\n              if(f==0) {\r\n            \t  if(c[i]=='0') {\r\n            \t\tif(k==1) {\r\n            \t\t\tk=2;\r\n            \t\t}\r\n            \t  }\r\n            \t  else {\r\n            \t\t  if(k==0) {\r\n            \t\t   k=1;  \r\n            \t\t  }\r\n            \t\t  if(k==2) {\r\n            \t\t\t  count++;\r\n            \t\t\t  i-=2;\r\n            \t\t\t  f=1;\r\n            \t\t\t  k=0;\r\n            \t\t  }\r\n            \t  }\r\n              }\r\n              else {\r\n            \t  if(c[i]=='1') {\r\n            \t\t  if(k==1) {\r\n              \t\t\tk=2;\r\n              \t\t}\r\n            \t  }\r\n            \t  else {\r\n            \t\t  if(k==0) {\r\n               \t\t   k=1;  \r\n               \t\t  }\r\n               \t\t  if(k==2) {\r\n               \t\t\t  count++;\r\n               \t\t\t  i-=2;\r\n               \t\t\t  f=0;\r\n               \t\t\t  k=0;\r\n               \t\t  }  \r\n            \t  }\r\n              }\r\n\t\t  }\r\n\t\t  if(c[n-1]=='0'&&f==0||f==1&&c[n-1]=='1') {\r\n\t\t\t  count++;\r\n\t\t  }\r\n\t\t  out.println(count);\r\n\t  }\r\n\t  out.close();\r\n\t  }\r\n   }"
}