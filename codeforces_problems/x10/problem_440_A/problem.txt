{
    "contestId": 440,
    "index": "A",
    "name": "Forgotten Episode",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 800,
    "tags": [
        "implementation"
    ],
    "desc": {
        "title": "A. Forgotten Episode",
        "statement": "<p>Polycarpus adores TV series. Right now he is ready to finish watching a season of a popular sitcom \"Graph Theory\". In total, the season has <span class=\"tex-span\"><i>n</i></span> episodes, numbered with integers from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span>.</p><p>Polycarpus watches episodes not one by one but in a random order. He has already watched all the episodes except for one. Which episode has Polycaprus forgotten to watch?</p>",
        "inputSpecification": "<p>The first line of the input contains integer <span class=\"tex-span\"><i>n</i></span> <span class=\"tex-span\">(2\u2009\u2264\u2009<i>n</i>\u2009\u2264\u2009100000)</span>\u00a0\u2014 the number of episodes in a season. Assume that the episodes are numbered by integers from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span>.</p><p>The second line contains <span class=\"tex-span\"><i>n</i>\u2009-\u20091</span> integer <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i>)</span>\u00a0\u2014 the numbers of episodes that Polycarpus has watched. All values of <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> are distinct.</p>",
        "outputSpecification": "<p>Print the number of the episode that Polycarpus hasn't watched.</p>",
        "samples": [
            {
                "input": "10<br/>3 8 10 1 7 9 6 5 2<br/>",
                "output": "4<br/>"
            }
        ],
        "note": null
    },
    "suggested_categories": [
        "algorithms",
        "mathematics",
        "logical reasoning",
        "data structures",
        "sequential decision making",
        "combinatorics",
        "probability",
        "graph theory",
        "puzzles",
        "permutations",
        "random permutations",
        "number theory",
        "competition programming",
        "dynamic programming",
        "ordering problems",
        "set theory",
        "discrete mathematics",
        "mathematical modeling",
        "sequential searching",
        "game theory"
    ]
}