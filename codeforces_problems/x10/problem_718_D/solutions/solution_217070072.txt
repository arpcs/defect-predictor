{
    "id": 217070072,
    "contestId": 718,
    "creationTimeSeconds": 1691124724,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 718,
        "index": "D",
        "name": "Andrew and Chemistry",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2900,
        "tags": [
            "dp",
            "hashing",
            "trees"
        ]
    },
    "author": {
        "contestId": 718,
        "members": [
            {
                "handle": "satyabrat369"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1474635900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 2457600,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <ctime>\r\n\r\n#include <windows.h>\r\n#include <unistd.h>\r\n\r\n#define pb push_back\r\n#define ll long long int\r\n#define fi first\r\n#define se second\r\n \r\n#define md1 1000000007\r\n#define md2 998244353 //r=3  upto root of 1<<23\r\n#define md3 1000000009\r\n#define md4 7340033   //r=5  upto root of 1<<20\r\n \r\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\r\n \r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n\r\n// ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n\r\nint n,sz[100005],H1[100005],H2[100005];\r\nvector<int> adj[100005];\r\nset<pair<int,int>> st;\r\nint find_centroid(int x,int p){\r\n    sz[x]=1;\r\n    int Cs=-1,ye=1;\r\n    for(int i:adj[x]){\r\n        if(i==p)continue;\r\n        int C=find_centroid(i,x);\r\n        sz[x]+=sz[i];\r\n        Cs=C;\r\n        if(sz[i]>n/2)ye=0;\r\n    }\r\n    if(n-sz[x]>n/2)ye=0;\r\n    if(ye)Cs=x;\r\n    return Cs;\r\n}\r\n\r\nvoid dfs(int x,int p){\r\n    H1[x]=1;\r\n    H2[x]=1;\r\n    sz[x]=1;\r\n    int g1=1,g2=1;\r\n    for(int i:adj[x]){\r\n        if(i==p)continue;\r\n        dfs(i,x);\r\n        sz[x]+=sz[i];\r\n    }\r\n    sort(adj[x].begin(),adj[x].end(),[&](int A,int B){\r\n        return sz[A]>sz[B];\r\n    });\r\n    for(int i:adj[x]){\r\n        if(i==p)continue;\r\n        H1[x]+=1LL*H1[i]*g1%md1;if(H1[x]>=md1)H1[x]-=md1;\r\n        H2[x]+=1LL*H2[i]*g2%md2;if(H2[x]>=md2)H2[x]-=md2;\r\n        g1=1LL*g1*n%md1;\r\n        g2=1LL*g2*n%md2;\r\n    }\r\n    if((int)adj[x].size()<4)st.insert({H1[x],H2[x]});\r\n    // cout<<H1[x]<<\" \"<<H2[x]<<\"\\n\";\r\n}\r\nint main(){\r\n    cin>>n;\r\n    for(int i=1,u,v;i<n;i++){\r\n        cin>>u>>v;\r\n        adj[u].pb(v);\r\n        adj[v].pb(u);\r\n    }\r\n    int cent=find_centroid(1,-1);\r\n    int cent2=-1;\r\n    for(int i=1;i<=n;i++){\r\n        if(sz[i]==n/2 && i!=cent)cent2=i;\r\n    }\r\n    \r\n    dfs(cent,cent2);\r\n    if(cent2!=-1)dfs(cent2,cent);\r\n    cout<<st.size()<<\"\\n\";\r\n    return 0;\r\n}"
}