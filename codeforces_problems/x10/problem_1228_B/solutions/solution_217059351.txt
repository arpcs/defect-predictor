{
    "id": 217059351,
    "contestId": 1228,
    "creationTimeSeconds": 1691114581,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1228,
        "index": "B",
        "name": "Filling the Grid",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1400,
        "tags": [
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1228,
        "members": [
            {
                "handle": "Harwinvanak"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1569762300
    },
    "programmingLanguage": "Java 8",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 64716800,
    "source": "import java.util.List;\r\nimport java.io.*;\r\nimport java.util.*;\r\npublic class main2 {\r\n\tstatic int x;\r\n\tpublic static void main(String[] args) throws IOException{\r\n\t\tMyReader reader = new MyReader();\r\n\t\tint n = reader.nextInt();\r\n\t\tx = n;\r\n\t\tint m = reader.nextInt();\r\n\t\tint [][] arr = new int[n][m];\r\n\t\tint [] row = new int[n];\r\n\t\tint [] column = new int[m];\r\n\t\tfor(int i = 0; i < n; i++){\r\n\t\t\trow[i] = reader.nextInt();\r\n\t\t}\r\n\t\tfor(int i = 0; i < m; i++){\r\n\t\t\tcolumn[i] = reader.nextInt();\r\n\t\t}\r\n\t\tfor(int i = 0; i < n; i++){\r\n\t\t\tint limit = row[i];\r\n\t\t\tif(limit == 0){\r\n\t\t\t\tarr[i][0] = -2;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tint j = 0;\r\n\t\t\tfor(; j < limit; j++){\r\n\t\t\t\tarr[i][j] = -1;\r\n\t\t\t}\r\n\t\t\tif(j < m){\r\n\t\t\t\tarr[i][j] = -2;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i = 0; i < m; i++){\r\n\t\t\tint limit = column[i];\r\n\t\t\tif(limit == 0){\r\n\t\t\t\tif(arr[0][i] == -1){\r\n\t\t\t\t\tSystem.out.println(0);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tarr[0][i] = -2;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tint j = 0;\r\n\t\t\tfor(; j < limit; j++){\r\n\t\t\t\tif(arr[j][i] == -2){\r\n\t\t\t\t\tSystem.out.println(0);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tarr[j][i] = -1;\r\n\t\t\t}\r\n\t\t\tif(j < n){\r\n\t\t\t\tif(arr[j][i] == -1){\r\n\t\t\t\t\tSystem.out.println(0);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tarr[j][i] = -2;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlong total = 0l;\r\n\t\tfor(int i = 0; i < n; i++){\r\n\t\t\tfor(int j = 0; j < m; j++){\r\n\t\t\t\tif(arr[i][j] == 0){\r\n\t\t\t\t\ttotal++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(n == 9){\r\n\t\t\tSystem.out.println(total + \" p\");\r\n\t\t}\r\n\t\tlong ans = biexp(total);\r\n\t\t// if(n == 9){\r\n\t\t// \tSystem.out.println(ans);\r\n\t\t// }\r\n\t\tSystem.out.println(total == 0 ? 0 : ans);\r\n\t}\r\n\tpublic static long biexp(long n){\r\n\t\t\r\n\t\tif(n == 1){\r\n\t\t\treturn 2;\r\n\t\t}\r\n\t\tlong temp = biexp(n/2);\r\n\t\tlong ans = (temp * temp) ;\r\n\t\tans *=  n % 2 != 0 ? 2 : 1;\r\n\t\tans = ans % 1000000007;\r\n\t\t// if(x == 1000){\r\n\t\t// \tSystem.out.println(ans);\r\n\t\t// }\r\n\t\treturn ans;\r\n\t}\r\n}\r\n\r\nclass MyReader{\r\n\tBufferedReader reader;\r\n\tStringTokenizer token;\r\n\r\n\tMyReader(){\r\n\t\treader = new BufferedReader(new InputStreamReader(System.in));\r\n\t}\r\n\r\n\tpublic String next() throws IOException{\r\n\t\tif(token == null || !token.hasMoreElements()){\r\n\t\t\ttoken = new StringTokenizer(reader.readLine());\r\n\t\t}\r\n\t\treturn token.nextToken();\r\n\t}\r\n\tpublic int nextInt() throws IOException{\r\n\t\treturn Integer.parseInt(next());\r\n\t}\r\n\tpublic long nextLong() throws IOException{\r\n\t\treturn Long.parseLong(next());\r\n\t}\r\n}\r\n"
}