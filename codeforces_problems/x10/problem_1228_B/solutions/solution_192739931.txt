{
    "id": 192739931,
    "contestId": 1228,
    "creationTimeSeconds": 1675862711,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1228,
        "index": "B",
        "name": "Filling the Grid",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1400,
        "tags": [
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1228,
        "members": [
            {
                "handle": "yh11"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1569762300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 3993600,
    "source": "#include<bits/stdc++.h>\r\n\r\n#define unless(x) if (!(x))\r\n#define pb push_back\r\n#define eb emplace_back\r\n/* #define f first */\r\n/* #define s second */\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define ins insert\r\n#define all(x) x.begin(), x.end()\r\n#define rall(x) x.rbegin(), x.rend()\r\n#define mem(x, y) memset(x, y, sizeof(x))\r\n#define sz(x) ((int) (x).size())\r\n#define popcount __builtin_popcountll\r\n\r\nusing namespace std;\r\nusing ll = long long;\r\nusing ld = long double;\r\nusing pi = pair<int, int>;\r\nusing pll = pair<ll, ll>;\r\nusing vi = vector<int>;\r\nusing vll = vector<ll>;\r\nusing vpi = vector<pi>;\r\nusing vpll = vector<pll>;\r\nusing vvi = vector<vector<int>>;\r\nusing vvll = vector<vector<ll>>;\r\ntemplate<typename T> using minpq = priority_queue<T, vector<T>, greater<T>>;\r\ntemplate<typename T> using maxpq = priority_queue<T, vector<T>, less<T>>;\r\n\r\n// *INDENT-OFF*\r\ntemplate<class T> bool ckmin(T& a, const T& b) { return b < a ? a = b, 1 : 0; }\r\ntemplate<class T> bool ckmax(T& a, const T& b) { return a < b ? a = b, 1 : 0; }\r\nvoid __print(int x) { cerr << x; }\r\nvoid __print(long x) { cerr << x; }\r\nvoid __print(long long x) { cerr << x; }\r\nvoid __print(unsigned x) { cerr << x; }\r\nvoid __print(unsigned long x) { cerr << x; }\r\nvoid __print(unsigned long long x) { cerr << x; }\r\nvoid __print(float x) { cerr << x; }\r\nvoid __print(double x) { cerr << x; }\r\nvoid __print(long double x) { cerr << x; }\r\nvoid __print(char x) { cerr << '\\'' << x << '\\''; }\r\nvoid __print(const char *x) { cerr << '\\\"' << x << '\\\"'; }\r\nvoid __print(const string &x) { cerr << '\\\"' << x << '\\\"'; }\r\nvoid __print(bool x) { cerr << (x ? \"true\" : \"false\"); }\r\ntemplate<typename T, typename V> void __print(const pair<T, V> &x) { cerr << '{'; __print(x.first); cerr << \", \"; __print(x.second); cerr << '}'; }\r\ntemplate<size_t I = 0, typename... Tp> void __print_tup(const tuple<Tp...>& t) { cerr << get<I>(t); if constexpr(I < sizeof...(Tp) - 1) { cerr << \", \"; __print_tup<I+1>(t); } }\r\ntemplate<typename... Tp> void __print(const tuple<Tp...>& t) { cerr << '{'; __print_tup(t); cerr << '}'; }\r\ntemplate<typename T> void __print(const T &x) { int f = 0; cerr << '{'; for (auto &i : x) cerr << (f++ ? \", \" : \"\"), __print(i); cerr << \"}\"; }\r\nvoid _print() { cerr << \"]\\n\"; }\r\ntemplate <typename T, typename... V> void _print(T t, V... v) { __print(t); if (sizeof...(v)) cerr << \", \"; _print(v...); }\r\ntemplate<typename T> T fdiv(T x, T y) { T q = x / y; T r = x % y; if ((r != 0) && ((r < 0) != (y < 0))) --q; return q; }\r\ntemplate<typename T> T cdiv(T x, T y) { return x / y + ((x % y != 0) ? !((x > 0) ^ (y > 0)) : 0); }\r\nnamespace std { template<class Fun> class y_combinator_result { Fun fun_; public: template<class T> explicit y_combinator_result(T &&fun): fun_(std::forward<T>(fun)) {} template<class ...Args> decltype(auto) operator()(Args &&...args) { return fun_(std::ref(*this), std::forward<Args>(args)...); } }; template<class Fun> decltype(auto) yy(Fun &&fun) { return y_combinator_result<std::decay_t<Fun>>(std::forward<Fun>(fun)); } }\r\ntemplate<typename T1, typename T2> /* cin >> pair<T1, T2> */ istream& operator>>(istream &istream, pair<T1, T2> &p) { return (istream >> p.first >> p.second); }\r\ntemplate<typename T> /* cin >> vector<T> */ istream& operator>>(istream &istream, vector<T> &v) { for (auto &it : v) cin >> it; return istream; }\r\ntemplate<typename T1, typename T2> /* cout << pair<T1, T2> */ ostream& operator<<(ostream &ostream, const pair<T1, T2> &p) { return (ostream << p.first << \" \" << p.second); }\r\ntemplate<typename T> /* cout << vector<T> */ ostream& operator<<(ostream &ostream, const vector<T> &c) { for (auto &it : c) cout << it << \" \"; return ostream; }\r\nll sum_n(int n) { return (ll) n * (n + 1) / 2; }\r\nconst string yes = \"Yes\";\r\nconst string no = \"No\";\r\n#ifdef LOCAL\r\n#define dbg(x...) cerr << \"\\e[1;31m\"<<__func__<<\":\"<<__LINE__<<\" [\" << #x << \"] = [\"; _print(x); cerr << \"\\e[0m\";\r\n#else\r\n#define dbg(x...)\r\n#endif\r\n// *INDENT-ON*\r\n\r\n// YOU ARE ACTUALLY **SUPPOSED** TO READ THE FOLLOWING.\r\n// Read Problems Carefully. (Please do this, you keep making mistakes because you avoided this.)\r\n// Read both the input sizes (i.e. n <= 1e5, etc) and the sum of n thing. (i.e. sum of n <= 1e6, etc).\r\n// Be Careful about input data size. You keep inputting data as int, when long long was required.\r\n// Don't force some technique on a problem. BS does not solve everything. On many occasions, greedy rules.\r\n// Declare double values as long double or ld (NEVER double, because of precision issues)\r\n\r\nconst int md = 1e9 + 7;\r\n\r\nvoid solve() {\r\n    int h, w;\r\n    cin >> h >> w;\r\n    int grid[h][w] = {};\r\n    for (int i = 0; i < h; i++) {\r\n        int val;\r\n        cin >> val;\r\n        for (int j = 0; j < val; j++) {\r\n            grid[i][j] = 1;\r\n        }\r\n        if (val < w) {\r\n            grid[i][val] = 2;\r\n        }\r\n    }\r\n    int k = 1;\r\n    for (int j = 0; j < w; j++) {\r\n        int val;\r\n        cin >> val;\r\n        for (int i = 0; i < val; i++) {\r\n            if (grid[i][j] == 2) {\r\n                k = 0;\r\n            }\r\n            grid[i][j] = 1;\r\n        }\r\n        if (val < h) {\r\n            if (grid[val][j] == 1) {\r\n                k = 0;\r\n            }\r\n            grid[val][j] = 2;\r\n        }\r\n    }\r\n    if (k == 0) {\r\n        cout << 0 << '\\n';\r\n        return;\r\n    }\r\n    ll ans = 1;\r\n    for (int i = 0; i < h; i++) {\r\n        for (int j = 0; j < w; j++) {\r\n            if (grid[i][j] == 0) {\r\n                ans = (2 * ans) % md;\r\n            }\r\n        }\r\n    }\r\n    cout << ans << '\\n';\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int t = 1;\r\n    /* cin >> t; */\r\n    while (t--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n"
}