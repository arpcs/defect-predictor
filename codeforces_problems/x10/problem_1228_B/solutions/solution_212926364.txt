{
    "id": 212926364,
    "contestId": 1228,
    "creationTimeSeconds": 1688885521,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1228,
        "index": "B",
        "name": "Filling the Grid",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1400,
        "tags": [
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1228,
        "members": [
            {
                "handle": "bkifhr10"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1569762300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,popcnt,abm,mmx,tune=native\")\n#pragma GCC optimize(\"fast-math\")\n\n#define int long long\n#define damkk ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0) ;\n#define pb push_back\n#define sz size()\n#define F first\n#define S second\n#define file(s) if (fopen(s\".in\", \"r\")) freopen(s\".in\", \"r\", stdin), freopen(s\".out\", \"w\", stdout);\n#define all(s) (s).begin(),(s).end()\n\nusing namespace std ;\n\nconst int MaxN = 2e6 + 70;\nconst int inf = 1e9 + 99;\nconst int MOD = 1e9 + 7 ;\nconst long double eps = 1e-6;\n\nint q[inf];\nint qq[inf];\nint a[MaxN][MaxN];\nint sum = 0;\nint bp(int a , int b){\n    if (!b) return 1;\n    if (b % 2){\n        return (a * bp(a , b - 1)) % MOD;\n    }\n    else{\n        int val = bp(a , b / 2);\n        return (val * val) % MOD;\n    }\n}\n\nvoid solve(){\n\tint n , m;\n\tcin >> n >> m;\n\tint ok = 1;\n\tfor(int i = 1; i <= n; i++){\n\t\tint k;\n\t\tcin >> k;\n\t\tq[i] = k;\n\t\tfor(int j = 1; j <= k; j++){\n\t\t   a[i][j] = 1;   \n\t\t}\n\t}\n\tfor(int j = 1; j <= m; j++){\n\t\tint k;\n\t\tcin >> k;\n\t\tqq[j] = k;\n\t\tfor(int i = 1; i <= k; i++){\n\t\t\ta[i][j] = 1;\n\t\t\tif(a[i][j - 1] == 1 and q[i] + 1 == j or i == k and a[i + 1][j] == 1){\n\t\t\t\tok = 0;\n\t\t\t}\n\t\t} \n\t}\n\tif(ok == 1 and q[1] > 0 and qq[1] > 0 or ok == 1 and q[1] == 0 and qq[1] == 0){\n\t\tsum = 0;\n\t\tfor(int i = 1; i <= n; i++){\n\t\t\tfor(int j = 1; j <= m; j++){\n\t\t\t\tif(q[i] + 1 < j and qq[j] + 1 < i){\n\t\t\t\t\tsum++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << bp(2, sum);\n\t}\n\telse{\n\t   cout << 0;\n\t}\n}\nmain()\t\n{\n\tdamkk\n    //file()\n    int tt = 1;\n    //cin >> tt;\n    while(tt--){\n    \tsolve();\n\t}\n}\n\n\n\n \t   \t \t   \t \t\t  \t  \t\t \t\t\t\t  \t\t"
}