{
    "id": 208879089,
    "contestId": 1228,
    "creationTimeSeconds": 1686132021,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1228,
        "index": "B",
        "name": "Filling the Grid",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1400,
        "tags": [
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1228,
        "members": [
            {
                "handle": "PRIME3015"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1569762300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <stdio.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define scl(n) scanf(\"%lld\", &n)\r\n#define fr(i, n) for (ll i = 0; i < n; i++)\r\n#define fr1(i, n) for (ll i = 1; i <= n; i++)\r\n#define pfl(x) printf(\"%lld\\n\", x)\r\n#define endl \"\\n\"\r\n#define pb push_back\r\n#define l(s) s.size()\r\n#define md 1000000007\r\n\r\nint main()\r\n{\r\n    ll m, n, t, b, c, d, i, j, k, x, y, z, l, q, r;\r\n    ll h, w;\r\n    scl(h), scl(w);\r\n\r\n    ll hight[h], width[w];\r\n\r\n    fr1(i, h) scl(hight[i]);\r\n    fr1(i, w) scl(width[i]);\r\n    ll ans = 1;\r\n\r\n    fr1(i, h)\r\n    {\r\n        fr1(j, w)\r\n        {\r\n            if ((i - 1) == width[j] and (j - 1) < hight[i])\r\n            {\r\n                ans = 0;\r\n                break;\r\n            }\r\n            if ((i - 1) < width[j] and (j - 1) == hight[i])\r\n            {\r\n                ans = 0;\r\n                break;\r\n            }\r\n            if ((i - 1) > width[j] and (j - 1) > hight[i])\r\n            {\r\n                ans = (ans * 2) % md;\r\n            }\r\n        }\r\n    }\r\n\r\n    pfl(ans);\r\n\r\n    return 0;\r\n}\r\n\r\n/// Before submit=>\r\n///     *check for integer overflow,array bounds\r\n///     *check for n=1\r\n"
}