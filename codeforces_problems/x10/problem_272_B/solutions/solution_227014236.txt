{
    "id": 227014236,
    "contestId": 272,
    "creationTimeSeconds": 1696684384,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 272,
        "index": "B",
        "name": "Dima and Sequence",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1400,
        "tags": [
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 272,
        "members": [
            {
                "handle": "deepanshusau"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1360769400
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 42,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 921600,
    "source": "// hare krishna hare krishna\r\n// krishna krishna hare hare\r\n// hara rama hare rama\r\n// rama rama hare hare\r\n\r\n//a%c=b%c\r\n//(b-a)%c=0\r\n//b-a is multiple of c\r\n// The required number of swaps of adjacent elements to sort a permutation is exactly the number of inversions in it\r\n\r\n// __builtin_clz(x): the number of zeros at the beginning of the number \r\n// __builtin_ctz(x): the number of zeros at the end of the number\r\n// __builtin_popcount(x): the number of ones in the number\r\n// __builtin_parity(x): the parity (even or odd) of the number of ones\r\n// __builtin_ffs(int) finds the index of the first (most right) set bit\r\n\r\n// #pragma GCC optimize(\"O3,unroll-loops\",\"Ofast\")\r\n// #pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long int\r\n#define ull unsigned long long int\r\n#define pll pair<ll,ll>\r\n#define p pair\r\n#define vpll vector<pair<ll,ll> >\r\n#define vll vector<ll>\r\n#define vcc vector<char>\r\n#define vdd vector<double>\r\n#define vss vector<string>\r\n#define vvll vector< vector<ll> >\r\n#define vvcc vector< vector<char> >\r\n#define vvdd vector< vector<double> >\r\n#define all(v) v.begin(),v.end()\r\n#define rall(v) v.rbegin(),v.rend()\r\n#define ff first\r\n#define ss second\r\n#define pb push_back\r\n#define rev_sort(v) sort(all(v),greater<int>())\r\n#define sz(x) x.size()\r\n#define sp \" \"\r\n#define nl \"\\n\"\r\n\r\ntypedef unsigned long long int ulli;\r\ntemplate<typename T> istream& operator>>(istream& in, vector<T>& a) {for (auto &x : a) in >> x; return in;};\r\ntemplate<typename T> ostream& operator<<(ostream& out, vector<T>& a) {for (auto &x : a) out << x << ' '; return out;};\r\n \r\ntemplate<typename T1, typename T2> ostream& operator<<(ostream& out, const p<T1, T2>& x) {return out << x.ff << ' ' << x.ss;}\r\ntemplate<typename T1, typename T2> istream& operator>>(istream& in, p<T1, T2>& x) {return in >> x.ff >> x.ss;}\r\n\r\nll mod = 1e9+7;\r\n\r\nll powermod(ll a, ll b, ll m)\r\n{\r\n    if (b == 0) return 1;\r\n    ull k = powermod(a, b / 2, m);\r\n    k = k * k;\r\n    k %= m;\r\n    if (b & 1) k = (k * a) % m;\r\n    return k;\r\n}\r\nll inverse(ll b, ll mod) {\r\n    return powermod(b, mod - 2, mod);\r\n}\r\n\r\n\r\n// nCr with modulus\r\n\r\n// const ll N = 2e5 + 10;\r\n// ll fac[N + 1], inv[N + 1];\r\n// ll ncr(ll n, ll r) {\r\n//     if (n < r) return 0;\r\n//     ll ans = (((fac[n] * inv[n - r]) % mod) * inv[r]) % mod;\r\n//     return ans;\r\n// }\r\n\r\n\r\nbool isPrime(ll n){\r\n    if (n <= 1)\r\n        return false;\r\n\r\n    for (ll i = 2; i * i <= n; i++) {\r\n        if (n % i == 0)\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nll gcd(ll a, ll b){\r\n    if(b==0) return a;\r\n    else return gcd(b,a%b);\r\n}\r\n\r\nbool comp(pll p1, pll p2){\r\n    if(p1.ss<p2.ss) return true;\r\n    if(p1.ss>p2.ss) return false;\r\n    if(p1.ff<p2.ff) return true;\r\n    return false;\r\n}\r\n\r\nconst ll N=1e6;\r\nvector<bool> prime(N+1,true);\r\n\r\nvoid sieve(){\r\n    for (ll p = 2; p * p <= N; p++) {\r\n        if (prime[p] == true) {\r\n            for (ll i = p * p; i <= N; i += p)\r\n                prime[i] = false;\r\n        }\r\n    }\r\n}\r\n// Prime Numbers Sieve\r\n\r\n\r\nll binpow(ll a,ll b){\r\n    if(b==0)return 1;\r\n    ll res=binpow(a,b/2);\r\n    if(b&1) return res*res*a;\r\n    else return res*res;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvoid solve(){\r\n    //solve here\r\n    ll n;cin>>n;\r\n    vll v(n);cin>>v;\r\n    map<ll,ll> mp;\r\n    for(ll i : v){\r\n        ll a=__builtin_popcount(i);\r\n        mp[a]++;\r\n    }\r\n    ll ans=0;\r\n    for(auto i : mp){\r\n        ans+=((i.ss)*(i.ss-1))/2;\r\n    }\r\n    \r\n    cout<<ans;\r\n\r\n    \r\n}\r\n\r\n\r\n\r\nint32_t main(){\r\n    \r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n\r\n\r\n    sieve();\r\n\r\n    // fac[0] = 1, fac[1] = 1;\r\n    // for (ll i = 2; i <= N; i++) {\r\n    //     fac[i] = (fac[i - 1] * i) % mod;\r\n    // }\r\n\r\n    // inv[N] = inverse(fac[N], mod);\r\n    // for (ll i = N - 1; i >= 0; i--) {\r\n    //     inv[i] = (inv[i + 1] * (i + 1)) % mod;\r\n    // }\r\n\r\n    int t=1;\r\n    // cin >> t;\r\n    while(t--){\r\n        solve();\r\n    }\r\n    \r\n    return 0;\r\n}"
}