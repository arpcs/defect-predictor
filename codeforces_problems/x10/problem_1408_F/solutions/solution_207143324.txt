{
    "id": 207143324,
    "contestId": 1408,
    "creationTimeSeconds": 1685017911,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1408,
        "index": "F",
        "name": "Two Different",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2300,
        "tags": [
            "constructive algorithms",
            "divide and conquer"
        ]
    },
    "author": {
        "contestId": 1408,
        "members": [
            {
                "handle": "_Cx330"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601476500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// LUOGU_RID: 111229301\n# include <cassert>\n# include <iostream>\n# include <utility>\n# include <vector>\nusing namespace std;\n\nvector<pair<int, int>> ans;\nint n;\n\ninline void change(int const x, int const y)\n{ ans.emplace_back(x, y); }\n\nvoid solve(int const l, int const r) {\n  assert(__builtin_popcount(r - l + 1) == 1);\n  if (l == r) return;\n  int const mid((l + r) / 2);\n  solve(l, mid), solve(mid + 1, r);\n  for (int i(0); i <= mid - l; ++i)\n    change(l + i, mid + 1 + i);\n}\n\nint main() {\n  cin >> n;\n  solve(1, 1 << __lg(n));\n  solve(n - (1 << __lg(n)) + 1, n);\n  cout << ans.size() << '\\n';\n  for (auto const [x, y] : ans)\n    cout << x << ' ' << y << '\\n';\n  return 0;\n}\n"
}