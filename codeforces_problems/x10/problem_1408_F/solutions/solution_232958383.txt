{
    "id": 232958383,
    "contestId": 1408,
    "creationTimeSeconds": 1700134345,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1408,
        "index": "F",
        "name": "Two Different",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2300,
        "tags": [
            "constructive algorithms",
            "divide and conquer"
        ]
    },
    "author": {
        "contestId": 1408,
        "members": [
            {
                "handle": "AFrAYuRmbrM"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601476500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nint Q;\r\nint p;\r\nvector < pair < int , int > > R;\r\nvoid Solve (int s, int wp){\r\n    for (int i = 1;i <= wp;++ i)\r\n        for (int j = s;j <= s + (1 << wp) - 1;++ j)\r\n            if (j + (1 << i) - 1 <= Q)\r\n                R.push_back (make_pair (j, j + (1 << i) - 1));\r\n}\r\nint main (){\r\n    scanf (\"%d\", &Q);\r\n    p = (int) log2 (Q);\r\n    Solve (1, p);\r\n    if (Q - (1 << p) != 0)\r\n        Solve (Q - (1 << p) + 1, p);\r\n    printf (\"%d\\n\", (int) R.size ());\r\n    for (int i = 0;i < (int) R.size ();++ i)\r\n        printf (\"%d %d\\n\", R[i].first, R[i].second);\r\n    return 0;\r\n}"
}