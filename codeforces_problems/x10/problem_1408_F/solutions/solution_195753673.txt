{
    "id": 195753673,
    "contestId": 1408,
    "creationTimeSeconds": 1677816392,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1408,
        "index": "F",
        "name": "Two Different",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2300,
        "tags": [
            "constructive algorithms",
            "divide and conquer"
        ]
    },
    "author": {
        "contestId": 1408,
        "members": [
            {
                "handle": "Reanap"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601476500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 32,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 3891200,
    "source": "// LUOGU_RID: 103493601\n#include <map>\r\n#include <set>\r\n#include <queue>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <algorithm>\r\n#define pii pair <int , int>\r\n#define fs first\r\n#define sc second\r\n#define mp make_pair\r\nusing namespace std;\r\ntypedef long long LL;\r\n\r\ntemplate <typename T>\r\nvoid read(T &x) {\r\n\tT f=1;x=0;char s=getchar();\r\n\twhile(s<'0'||s>'9') {if(s=='-') f=-1;s=getchar();}\r\n\twhile(s>='0'&&s<='9') {x=(x<<3)+(x<<1)+(s^'0');s=getchar();}\r\n\tx *= f; \r\n}\r\n\r\ntemplate <typename T>\r\nvoid write(T x , char s='\\n') {\r\n\tif(x<0) putchar('-') , x = -x;\r\n\tif(!x) {putchar('0') , putchar(s);return;}\r\n\tint t = 0 , tmp[25];\r\n\twhile(x) tmp[t ++] = x % 10 , x /= 10;\r\n\twhile(t -- > 0) putchar(tmp[t] + '0');\r\n\tputchar(s);\r\n}\r\n\r\nconst int MAXN = 5e5 + 5;\r\n\r\nint num;\r\npii ans[MAXN];\r\n\r\nvoid divide(int l , int r) { // only for the power of 2\r\n\tif(l == r) return;\r\n\tint mid = (l + r) >> 1;\r\n\tdivide(l , mid);\r\n\tdivide(mid + 1 , r);\r\n\tfor (int i = l; i <= mid; ++i) ans[++num] = mp(i , i - l + 1 + mid);\r\n}\r\n\r\nint siz[50] , t;\r\n\r\nint main() {\r\n\tint n;\r\n\tread(n);\r\n\tint las = 0 , x = n;\r\n\tfor (int i = 20; i >= 0; --i) if((x >> i) & 1) {\r\n\t\tdivide(las + 1 , (1 << i));\r\n\t\tlas = (1 << i);\r\n\t\tx -= (1 << i);\r\n\t\tsiz[++t] = (1 << i);\r\n\t\tbreak;\r\n\t}\r\n\tfor (int i = 0; i <= 20; ++i) if((x >> i) & 1) {\r\n\t\tdivide(las + 1 , las + (1 << i));\r\n\t\tlas += (1 << i);\r\n\t\tx -= (1 << i);\r\n\t\tsiz[++t] = (1 << i);\r\n\t}\r\n\twhile(t > 2) {\r\n\t\tif(siz[2] == siz[3]) {\r\n\t\t\tint l = siz[1] , r = siz[1] + siz[2];\r\n\t\t\tfor (int i = 1; i <= siz[2]; ++i) ans[++num] = mp(l + i , r + i);\r\n\t\t\tsiz[2] += siz[3];\r\n\t\t\tt --;\r\n\t\t\tfor (int i = 3; i <= t; ++i) siz[i] = siz[i + 1];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tint l = siz[1] - siz[2] , r = siz[1];\r\n\t\t\tfor (int i = 1; i <= siz[2]; ++i) ans[++num] = mp(l + i , r + i);\r\n\t\t\tsiz[1] -= siz[2] , siz[2] += siz[2];\r\n\t\t}\r\n\t}\r\n\twrite(num);\r\n\tfor (int i = 1; i <= num; ++i) write(ans[i].fs , ' ') , write(ans[i].sc);\r\n\treturn 0;\r\n}"
}