{
    "id": 222163710,
    "contestId": 1627,
    "creationTimeSeconds": 1694067814,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "F",
        "name": "Not Splitting",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2700,
        "tags": [
            "geometry",
            "graphs",
            "greedy",
            "implementation",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "xjrjyy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing i64 = long long;\r\n\r\nvoid solve() {\r\n    int n, k;\r\n    std::cin >> n >> k;\r\n\r\n    std::vector s(k + 1, std::vector<int>(k + 1)), t(s);\r\n    for (int i = 0; i < n; ++i) {\r\n        int r1, c1, r2, c2;\r\n        std::cin >> r1 >> c1 >> r2 >> c2;\r\n        --r1, --c1, --r2, --c2;\r\n        if (r1 != r2) {\r\n            s[std::min(r1, r2) + 1][c1] += 1;\r\n        } else {\r\n            t[r1][std::min(c1, c2) + 1] += 1;\r\n        }\r\n    }\r\n    \r\n    std::vector dis(k / 2 + 1, std::vector<int>(k / 2 + 1, -1));\r\n    std::priority_queue<std::tuple<int, int, int>> h;\r\n    h.emplace(0, 0, 0);\r\n    while (!h.empty()) {\r\n        auto [d, x, y] = h.top();\r\n        h.pop();\r\n        if (dis[x][y] != -1) {\r\n            continue;\r\n        }\r\n        dis[x][y] = -d;\r\n        if (x < k / 2) {\r\n            h.emplace(d - t[x][y] - t[k - x - 1][k - y - 1], x + 1, y);\r\n        }\r\n        if (y < k / 2) {\r\n            h.emplace(d - s[x][y] - s[k - x - 1][k - y - 1], x, y + 1);\r\n        }\r\n    }\r\n\r\n    std::cout << n - dis[k / 2][k / 2] << '\\n';\r\n}\r\n\r\nint main() {\r\n    std::cin.tie(nullptr)->sync_with_stdio(false);\r\n\r\n    int t;\r\n    std::cin >> t;\r\n\r\n    while (t--) {\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}