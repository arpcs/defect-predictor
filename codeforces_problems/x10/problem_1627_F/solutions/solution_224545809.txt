{
    "id": 224545809,
    "contestId": 1627,
    "creationTimeSeconds": 1695347893,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "F",
        "name": "Not Splitting",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2700,
        "tags": [
            "geometry",
            "graphs",
            "greedy",
            "implementation",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "Clang++20 Diagnostics",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 42,
    "timeConsumedMillis": 1091,
    "memoryConsumedBytes": 64512000,
    "source": "#include<bits/stdc++.h>\n// #define feyn\nusing namespace std;\nconst int N=510;\nconst int M=3000010;\nconst int inf=1e9;\ninline void read(int &wh){\n    wh=0;int f=1;char w=getchar();\n    while(w<'0'||w>'9'){if(w=='-')f=-1;w=getchar();}\n    while(w<='9'&&w>='0'){wh=wh*10+w-'0';w=getchar();}\n    wh*=f;return;\n}\n\nstruct edge{\n    int t,v,nxt;\n}e[M];\nint head[N*N*2],esum;\ninline void add(int fr,int to,int val){\n    // printf(\"add %d %d\\n\",fr,to);\n    e[++esum]=(edge){to,val,head[fr]};\n    head[fr]=esum;\n}\n\nstruct Node{int wh,dis;};\ninline bool operator <(Node s1,Node s2){\n    return s2.dis<s1.dis;\n}\npriority_queue<Node>qu;\nint dis[N*N*2];\nvoid dij(int ss){\n    dis[ss]=0;qu.push((Node){ss,0});\n    while(!qu.empty()){\n        Node now=qu.top();qu.pop();\n        int wh=now.wh,nowd=now.dis;\n        if(nowd!=dis[wh])continue;\n        for(int i=head[wh],th;i;i=e[i].nxt){\n            if(dis[th=e[i].t]<=dis[wh]+e[i].v)continue;\n            dis[th]=dis[wh]+e[i].v;\n            qu.push((Node){th,dis[th]});\n        }\n    }\n}\n\nint m,n,cnt,id[N][N],v[N][N][4];\nvoid solve(){\n    read(m);read(n);\n    esum=0;cnt=0;\n    memset(head,0,sizeof(head));\n    memset(dis,0x3f,sizeof(dis));\n\n    int ss=++cnt,tt=++cnt;\n    for(int i=0;i<=n;i++){\n        for(int j=0;j<=n;j++){\n            for(int k=0;k<4;k++)v[i][j][k]=0;\n            id[i][j]=++cnt;\n            if(i==0||j==0||i==m||j==m)add(ss,id[i][j],0);\n        }\n    }\n\n    for(int i=1;i<=m;i++){\n        int xl,xr,yl,yr;\n        read(xl);read(yl);read(xr);read(yr);\n        if(xl==xr){\n            if(yl>yr)swap(yl,yr);\n            v[xl][yl][3]++;\n            v[xl-1][yl][1]++;\n            xl=n+1-xl,xr=n+1-xr,yl=n+1-yl,yr=n+1-yr;\n            if(yl>yr)swap(yl,yr);\n            v[xl][yl][3]++;\n            v[xl-1][yl][1]++;\n        }\n        else{\n            if(xl>xr)swap(xl,xr);\n            v[xl][yl-1][0]++;\n            v[xl][yl][2]++;\n            xl=n+1-xl,xr=n+1-xr,yl=n+1-yl,yr=n+1-yr;\n            if(xl>xr)swap(xl,xr);\n            v[xl][yl-1][0]++;\n            v[xl][yl][2]++;\n        }\n    }\n    for(int i=0;i<=n;i++){\n        for(int j=0;j<=n;j++){\n            if(j!=n)add(id[i][j],id[i][j+1],v[i][j][0]);\n            if(i!=n)add(id[i][j],id[i+1][j],v[i][j][1]);\n            if(j!=0)add(id[i][j],id[i][j-1],v[i][j][2]);\n            if(i!=0)add(id[i][j],id[i-1][j],v[i][j][3]);\n        }\n    }\n    add(id[n/2][n/2],tt,0);dij(ss);\n    printf(\"%d\\n\",m-dis[tt]);\n}\n\nsigned main(){\n\t\n    #ifdef feyn\n    freopen(\"in.txt\",\"r\",stdin);\n    freopen(\"out.txt\",\"w\",stdout);\n    #endif\n\n    int test;read(test);\n    while(test--)solve();\n\n    return 0;\n}\n \t\t \t\t \t\t\t\t \t\t \t\t \t  \t \t\t    \t\t"
}