{
    "id": 228803688,
    "contestId": 1627,
    "creationTimeSeconds": 1697721152,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "F",
        "name": "Not Splitting",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2700,
        "tags": [
            "geometry",
            "graphs",
            "greedy",
            "implementation",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "qhj0906"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 18739200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nnamespace IO{\r\n\ttemplate<typename T> inline void write(T x){\r\n\t\tif(x<0) putchar('-'),x=-x;\r\n\t\tif(x==0){\r\n\t\t\tputchar('0'); return ;\r\n\t\t}\r\n\t\tif(x>9) write(x/10);\r\n\t\tputchar(x%10+'0');\r\n\t\treturn ;\r\n\t}\r\n\ttemplate<typename T> inline void read(T &x){\r\n\t\tx=0; int w=1; char ch=getchar();\r\n\t\twhile(!isdigit(ch)){\r\n\t\t\tif(ch=='-') w=-1; ch=getchar();\r\n\t\t}\r\n\t\twhile(isdigit(ch))\r\n\t\t\tx=(x<<1)+(x<<3)+(ch^48),ch=getchar();\r\n\t\tx*=w; return ;\r\n\t}\r\n}\r\nusing namespace IO;\r\n#define writesp(x) write(x),putchar(' ')\r\n#define writeln(x) write(x),putchar('\\n')\r\n#define inf 0x3f3f3f3f3f3f3f3f\r\n#define N 510\r\nint t,n,k,Head[N*N],ver[(N*N)<<1],Next[(N*N)<<1],edge[(N*N)<<1],tot,vis[N*N+10],d[N],ansl[N*N+10];\r\nvoid add(int x,int y,int z){\r\n    ver[++tot]=y;Next[tot]=Head[x];edge[tot]=z;Head[x]=tot;\r\n    return;\r\n}\r\nint v[N][4];\r\nstruct un{\r\n    int x,y,xx,yy;\r\n}ge[N];\r\nstruct node{\r\n    int x,y,z;\r\n}dian[N];\r\nint cmp(node a,node b){\r\n    if(a.x!=b.x)return a.x<b.x;\r\n    return a.y<b.y;\r\n}\r\nint id0(int x,int y){return (k+1)*x+y;}\r\nint id1(int x,int y){return (k+1)*x+y+1;}\r\nint id2(int x,int y){return (k+1)*(x-1)+y;}\r\nint id3(int x,int y){return (k+1)*(x-1)+y+1;}\r\nstruct unn{\r\n    int x,y;\r\n};\r\npriority_queue<un>que;\r\nbool operator <(const un &a,const un &b){\r\n    return a.y>b.y;\r\n}\r\nint tott=0;\r\nint dij(){\r\n    for(int i=1;i<=(k/2+1)*(k+1);++i){\r\n        vis[i]=0;d[i]=inf;\r\n    }\r\n    int s=k/2*(k+1)+k/2+1;\r\n    que.push(un{s,0});d[s]=0;\r\n    int ans=inf;\r\n    while(que.size()){\r\n        int x=que.top().x;\r\n        que.pop();\r\n        if(vis[x])continue;\r\n        vis[x]=1;\r\n        for(int i=Head[x];i;i=Next[i]){\r\n            int y=ver[i],z=edge[i];\r\n            if(d[y]>d[x]+z){\r\n                d[y]=d[x]+z;\r\n                if(ansl[y])ans=min(ans,d[y]);\r\n                que.push(un{y,d[y]});\r\n            }\r\n        }\r\n    }\r\n    return ans;\r\n}\r\nsigned main(){\r\n    read(t);\r\n    while(t--){\r\n        read(n);read(k);\r\n        for(int i=1;i<=n;++i){\r\n            v[i][0]=v[i][1]=v[i][2]=v[i][3]=0;\r\n        }\r\n        for(int i=1;i<=(k+1)*(k+1);++i){\r\n            Head[i]=0;\r\n            ansl[i]=0;\r\n        }\r\n        tot=0;tott=0;\r\n        for(int i=1;i<=n;++i){\r\n            int x,y,xx,yy;\r\n            read(x),read(y),read(xx),read(yy);\r\n            if(x>k/2&&xx>k-2){\r\n                x=k-x+1;y=k-y+1;xx=k-xx+1;yy=k-yy+1;\r\n            }\r\n            if(x>xx)swap(x,xx);\r\n            if(y>yy)swap(y,yy);\r\n            ge[++tott]=un{x,y,xx,yy};\r\n            if(xx==k/2+1)ge[++tott]=un{x,k-y+1,xx,k-y+1};\r\n        }\r\n        for(int i=1;i<=tott;++i){\r\n            if(ge[i].x==ge[i].xx){\r\n                dian[i]=node{id3(ge[i].x,ge[i].y),id1(ge[i].x,ge[i].y),1};\r\n            }\r\n            else if(ge[i].y==ge[i].yy){\r\n                dian[i]=node{id0(ge[i].x,ge[i].y),id1(ge[i].x,ge[i].y),1};\r\n            }\r\n        }\r\n        sort(dian+1,dian+tott+1,cmp);\r\n        int las=dian[1].x,lay=dian[1].y,num=1;\r\n        for(int i=2;i<=tott;++i){\r\n            if(las==dian[i].x&&lay==dian[i].y)num++;\r\n            else{\r\n                add(las,lay,num);\r\n                add(lay,las,num);\r\n                if(lay==las+1)v[las][1]=v[lay][3]=1;\r\n                else v[las][0]=v[lay][2]=1;\r\n                las=dian[i].x;lay=dian[i].y;\r\n                num=1;\r\n            }\r\n        }\r\n        add(dian[tott].x,dian[tott].y,num);\r\n        add(dian[tott].y,dian[tott].x,num);\r\n        if(dian[tott].y==dian[tott].x+1)v[dian[tott].x][1]=v[dian[tott].y][3]=1;\r\n        else v[dian[tott].x][0]=v[dian[tott].y][2]=1;\r\n        for(int i=1;i<=k+1;++i)v[i][2]=ansl[i]=1;\r\n        for(int i=1;i<=(k/2+1)*(k+1);i+=(k+1))v[i][3]=ansl[i]=1;\r\n        for(int i=k/2*(k+1)+1;i<=(k/2+1)*(k+1);++i)v[i][0]=1;\r\n        for(int i=k+1;i<=(k/2+1)*(k+1);i+=k)v[i][1]=ansl[i]=1;\r\n        for(int i=1;i<=(k/2+1)*(k+1);++i){\r\n            if(!v[i][0])add(i,i+(k+1),0);\r\n            if(!v[i][1])add(i,i+1,0);\r\n            if(!v[i][2])add(i,i-(k+1),0);\r\n            if(!v[i][3])add(i,i-1,0);\r\n        }\r\n        writeln(n-dij());\r\n    }\r\n    return 0;\r\n}"
}