{
    "id": 222162068,
    "contestId": 1627,
    "creationTimeSeconds": 1694066602,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "F",
        "name": "Not Splitting",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2700,
        "tags": [
            "geometry",
            "graphs",
            "greedy",
            "implementation",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "xjrjyy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing i64 = long long;\r\n\r\nvoid solve() {\r\n    int q, n;\r\n    std::cin >> q >> n;\r\n\r\n    std::vector s(n - 1, std::vector<int>(n + 1));\r\n    std::vector t(n, std::vector<int>(n + 1));\r\n    for (int i = 0; i < q; ++i) {\r\n        int r1, c1, r2, c2;\r\n        std::cin >> r1 >> c1 >> r2 >> c2;\r\n        --r1, --c1, --r2, --c2;\r\n        if (r1 != r2) {\r\n            s[std::min(r1, r2)][c1 + 1] += 1;\r\n        } else {\r\n            t[r1][std::min(c1, c2) + 1] += 1;\r\n        }\r\n    }\r\n    \r\n    for (int i = 0; i < n - 1; ++i) {\r\n        for (int j = 0; j < n; ++j) {\r\n            s[i][j + 1] += s[i][j];\r\n        }\r\n    }\r\n\r\n    std::vector<int> f(n + 1);\r\n    for (int i = 0; i <= n; ++i) {\r\n        f[i] = t[0][i] + t[n - 1][n - i];\r\n    }\r\n    for (int i = 1; i < n / 2 - 1; ++i) {\r\n        auto g = f;\r\n        f.assign(n + 1, 1e9);\r\n        for (int j = 0; j <= n; ++j) {\r\n            for (int k = 0; k <= j; ++k) {\r\n                int x = g[k];\r\n                x += std::abs(s[i][j] - s[i][k]);\r\n                x += std::abs(s[n - i - 2][n - j] - s[n - i - 2][n - k]);\r\n                f[j] = std::min(f[j], x);\r\n            }\r\n            f[j] += t[i][j] + t[n - i - 1][n - j];\r\n        }\r\n    }\r\n\r\n    int ans = 1e9;\r\n    for (int i = 0; i <= n; ++i) {\r\n        int x = f[i];\r\n        x += std::abs(s[n / 2 - 1][i] - s[n / 2 - 1][n - i]);\r\n        ans = std::min(ans, x);\r\n    }\r\n\r\n    std::cout << q - ans << '\\n';\r\n}\r\n\r\nint main() {\r\n    std::cin.tie(nullptr)->sync_with_stdio(false);\r\n\r\n    int t;\r\n    std::cin >> t;\r\n\r\n    while (t--) {\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}