{
    "id": 228535224,
    "contestId": 1433,
    "creationTimeSeconds": 1697543180,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1433,
        "index": "G",
        "name": "Reducing Delivery Cost",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "brute force",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1433,
        "members": [
            {
                "handle": "xvzhiming"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1603204500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 4300800,
    "source": "// LUOGU_RID: 129978902\n//#pragma GCC optimize(2)\r\n//#pragma GCC optimize(3, \"Ofast\", \"inline\")\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int N = 1010, M = 2010;\r\n\r\nint head[N], nxt[M], to[M], w[M], idx;\r\n\r\nvoid init() {\r\n\tidx = 0;\r\n\tmemset(head, -1, sizeof head);\r\n}\r\n\r\nvoid add(int a, int b, int c) {\r\n\tnxt[idx] = head[a], head[a] = idx;\r\n\tto[idx] = b, w[idx] = c, idx++;\r\n}\r\n\r\nint n, m, k, a[N], b[N];\r\nint d[N][N];\r\nstruct edge {\r\n\tint a, b, c;\r\n} e[N];\r\nstruct node {\r\n\tint x, dis;\r\n\tbool operator < (const node &cmp) const {\r\n\t\treturn dis > cmp.dis;\r\n\t}\r\n};\r\n\r\nvoid dijkstra(int s) {\r\n\tmemset(d[s], 0x3f, sizeof d[s]);\r\n\td[s][s] = 0;\r\n\tpriority_queue <node> q;\r\n\tq.push({s, 0});\r\n\twhile (!q.empty()) {\r\n\t\tnode f = q.top(); q.pop();\r\n\t\tif (d[s][f.x] != f.dis) continue;\r\n\t\tfor (int i = head[f.x]; ~i; i = nxt[i]) {\r\n\t\t\tif (f.dis+w[i] < d[s][to[i]]) {\r\n\t\t\t\td[s][to[i]] = f.dis+w[i];\r\n\t\t\t\tq.push({to[i], d[s][to[i]]});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tinit();\r\n\tscanf(\"%d%d%d\", &n, &m, &k);\r\n\tfor (int i = 1; i <= m; i++) {\r\n\t\tint a, b, c;\r\n\t\tscanf(\"%d%d%d\", &a, &b, &c);\r\n\t\tadd(a, b, c), add(b, a, c);\r\n\t\te[i] = {a, b, c};\r\n\t}\r\n\tfor (int i = 1; i <= k; i++) {\r\n\t\tscanf(\"%d%d\", &a[i], &b[i]);\r\n\t}\r\n\t\r\n\tfor (int i = 1; i <= n; i++) dijkstra(i);\r\n\t\r\n\tint res = 1e9;\r\n\tfor (int i = 1; i <= m; i++) {\r\n\t\tint x = e[i].a, y = e[i].b;\r\n\t\tint sum = 0;\r\n\t\tfor (int j = 1; j <= k; j++) {\r\n\t\t\tint a = ::a[j], b = ::b[j];\r\n\t\t\tsum += min(d[a][b], min(d[a][x]+d[y][b], d[a][y]+d[x][b]));\r\n\t\t}\r\n\t\tres = min(res, sum);\r\n\t}\r\n\tprintf(\"%d\\n\", res);\r\n\t\r\n\treturn 0;\r\n}"
}