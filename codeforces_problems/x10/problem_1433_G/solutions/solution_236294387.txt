{
    "id": 236294387,
    "contestId": 1433,
    "creationTimeSeconds": 1702018198,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1433,
        "index": "G",
        "name": "Reducing Delivery Cost",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "brute force",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1433,
        "members": [
            {
                "handle": "linh20081"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1603204500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 1228800,
    "source": "/*And if we meet forever now\r\npull the blackout curtains down*/\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define ld long double\r\n#define all(x) x.begin(),x.end()\r\n#define eb emplace_back\r\n#define pb push_back\r\n#define file(name) freopen(name\".inp\", \"r\", stdin); freopen(name\".out\", \"w\", stdout)\r\n#define need_for_speed() ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)\r\nconst ll mod = 1e9 + 7;\r\nvector<pair<int,int>>adj[100005];\r\nvector<vector<int>>dis;\r\nvoid shortestpath(int s,vector<int>&d)\r\n{\r\n\r\n\td[s]=0;\t\r\n\tpriority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>> >pq;\r\n\tpq.emplace(s,d[s]);\r\n\twhile(!pq.empty())\r\n\t{\r\n\t\tint u=pq.top().first;\r\n\t\tpq.pop();\r\n\t\tfor(auto x:adj[u])\r\n\t\t{\r\n\t\t\tint v=x.first;\r\n\t\t\tint weight=x.second;\r\n\t\t\tif(d[v]>d[u]+weight)\r\n\t\t\t{\r\n\t\t\t\td[v]=d[u]+weight;\r\n\t\t\t\tpq.emplace(v,d[v]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t//for(int i=0;i<5;i++) cout<<d[i]<<' ';\r\n}\r\nvoid test_case(void){}\r\nint main(){\r\n\tint n,m,k;\r\n\tcin>>n>>m>>k;\r\n\tdis.resize(n+5);\r\n\twhile(m--)\r\n\t{\r\n\t\tint x,v,w;\r\n\t\tcin>>x>>v>>w;\r\n\t\tx--;v--;\r\n\t\tadj[x].eb(v,w);\r\n\t\tadj[v].eb(x,w);\r\n\t}\r\n\tvector<pair<int,int>>qr(k);\r\n\tfor(auto &c:qr) {\r\n\t\tcin>>c.first>>c.second;\r\n\t\tc.first--;\r\n\t\tc.second--;\r\n\t}\r\n\tfor(int i=0;i<1;i++) {\r\n\t\tdis[i].assign(n+5,int(1e9));\r\n\t\tshortestpath(i,dis[i]);\r\n\t}\r\n\t//cout<<adj[0].size();\r\n\tint ans = 1e9;\r\n\tfor(int v=0;v<n;v++){\r\n\t\tfor(auto [node,w]:adj[v])\r\n\t\t{\r\n\t\t\tint cur=0;\r\n\t\t\tfor(auto &[a,b]:qr)\r\n\t\t\t{\r\n\t\t\t//\tcout<<a<<' '<<b<<' '<<node<<' '<<v<<'\\n';\r\n\t\t\t\tcur+=min({dis[a][b],dis[a][v]+dis[node][b],dis[a][node]+dis[b][v]});\r\n\t\t\t}\r\n\t\t\tans=min(ans,cur);\r\n\t\t}\r\n\t}\r\n\tcout<<ans;\r\n\t\r\n}\r\n"
}