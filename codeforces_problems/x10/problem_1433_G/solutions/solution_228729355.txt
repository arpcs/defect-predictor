{
    "id": 228729355,
    "contestId": 1433,
    "creationTimeSeconds": 1697664085,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1433,
        "index": "G",
        "name": "Reducing Delivery Cost",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "brute force",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1433,
        "members": [
            {
                "handle": "Ebrafat"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1603204500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 8396800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\r\n#define LSB(i) ((i) & (-i))\r\n#define ll long long\r\nconst int dx[]{0,1,0,-1,-1,-1,1,1};\r\nconst int dy[]{1,0,-1,0,-1,1,-1,1};\r\nconst int MOD = 1e9 + 7;\r\nconst ll inf = 1e18; \r\n\r\n#define int ll\r\n\r\nconst int N = 1e3+1;\r\n\r\nvector<pair<int,int>> G[N];\r\nint n, m,k, dist[N][N];\r\n\r\nvoid dijsktra(int st){\r\n    dist[st][st] = 0;\r\n    priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> q;\r\n    q.push({0, st});\r\n    while(!q.empty()){\r\n        auto [d, u] = q.top(); q.pop();\r\n        if(d != dist[st][u]) continue;\r\n        for(auto& [v, w] : G[u]){\r\n            if(dist[st][v] > d + w){\r\n                dist[st][v] = d + w;\r\n                q.push({dist[st][v], v});\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nvoid solve(int testCase)  {\r\n    cin >> n >> m >> k;\r\n    for(int i = 1; i <= n; ++i)\r\n        for(int j = 1; j <= n; ++j) dist[i][j] = inf;\r\n\r\n    vector<tuple<int,int,int>> ed;\r\n    for(int i = 0; i < m; ++i){\r\n        int a, b, w;\r\n        cin >> a >> b >> w;\r\n        G[a].push_back({b, w});\r\n        G[b].push_back({a, w});\r\n        ed.push_back({a, b, w});\r\n    }\r\n\r\n    vector<pair<int,int>> v(k);\r\n    for(int i = 0; i < k; ++i) cin >> v[i].first >> v[i].second;\r\n    for(int i = 1; i <= n; ++i) dijsktra(i);\r\n    int ans = inf;\r\n    for(auto& [a,b,w] : ed){\r\n        int sum = 0;\r\n        for(auto&[x,y] : v){\r\n            sum += min(dist[x][y], min(dist[x][a]+dist[b][y], dist[x][b]+dist[a][y]));\r\n        }\r\n        ans = min(ans, sum);\r\n    }\r\n    cout << ans << '\\n';\r\n}\r\n\r\n\r\nint32_t main(){\r\n    fastio();  \r\n    int t = 1;\r\n   // cin >> t;\r\n    for(int i = 1; i <= t; ++i){\r\n        solve(i);\r\n    }\r\n    return 0;\r\n}"
}