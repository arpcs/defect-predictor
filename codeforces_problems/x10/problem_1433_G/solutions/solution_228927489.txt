{
    "id": 228927489,
    "contestId": 1433,
    "creationTimeSeconds": 1697808287,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1433,
        "index": "G",
        "name": "Reducing Delivery Cost",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "brute force",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1433,
        "members": [
            {
                "handle": "JOO_91"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1603204500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 8294400,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n#define ll  long long\n#define all(d) d.begin(),d.end()\n#define fr(n) for(int i=0;i<n;i++)\n#define frj(n) for(int j=0;j<n;j++)\n#define fr1(n) for(int i=1;i<=n;i++)\n#define frj1(n) for(int j=1;j<=n;j++)\n#define yes cout<<\"YES\\n\";\n#define no cout<<\"NO\\n\";\n#define test int t;cin>>t;while(t--)\n#define int long long\n#define pi pair<int,int>\nconst int dx8[8] = {1, 0, -1, 0,-1,-1,1,1};\nconst int dy8[8] = {0, 1, 0, -1, -1, 1, -1, 1};\nint dx[] = {+0, +0, +1, -1};\nint dy[] = {+1, -1, +0, +0};\nchar di[]={'R','L','D','U'};\nvoid JOO() {\n    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);\n#ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif\n}\n\nconst int N=1e3+5,inf=1e16,mod=998244353;\n\n\nll gcd(ll a, ll b){\n    if(b == 0) return a;\n    return gcd(b, a%b);\n}\n\nll mult(ll a, ll b){\n    return (a%mod * b%mod)%mod;\n}\n\nll add(ll a, ll b){\n    return (a%mod + b%mod)%mod;\n}\nll subtract(ll a, ll b){\n    return (a%mod - b%mod + 2*mod)%mod;\n}\nint dist[N][N];\nvector<vector<pi>>adj(N);\nvoid dij(int node)\n{\n    priority_queue<pi,vector<pi>,greater<>>q;\n\n    q.push({0, node});\n    dist[node][node]=0;\n    while(!q.empty())\n    {\n        int p=q.top().second;\n        int d=q.top().first;\n        q.pop();\n        if(d!=dist[node][p])\n        {\n            continue;\n        }\n        for(auto x:adj[p])\n        {\n            int a=x.first,w=x.second;\n            if(dist[node][a]>dist[node][p]+w)\n            {\n                dist[node][a]=dist[node][p]+w;\n                q.push({dist[node][p] + w, a});\n            }\n        }\n    }\n\n\n}\nvoid solve()\n{\n    int n,m,k;\n    cin>>n>>m>>k;\n    fr1(n)\n    {\n        frj1(n)\n        {\n            dist[i][j]=inf;\n        }\n    }\n    //0 unused 1 used\n    vector<pi>edges;\n    fr(m)\n    {\n        int x,y,w;cin>>x>>y>>w;\n        adj[x].push_back({y, w});\n        adj[y].push_back({x,w});\n        edges.push_back({x,y});\n    }\n    vector<pi>v;\n    fr(k)\n    {\n        int x,y;cin>>x>>y;\n        v.push_back({x,y});\n    }\n    int ans=inf;\n    fr1(n)\n    {\n        dij(i);\n    }\n    for(auto [a,b]:edges)\n    {\n        int tmp=0;\n        for(auto[x,y]:v)\n        {\n            tmp+=min({dist[x][y],dist[x][a]+dist[b][y],dist[x][b]+dist[a][y]});\n        }\n        ans=min(ans,tmp);\n    }\n    cout<<ans<<'\\n';\n}\nsigned main() {\n    JOO();\n//    int cnt=1;\n//    test\n    {\n//        cout << \"Case \" << \"#\" << cnt++ << \": \";\n        solve();\n    }\n}"
}