{
    "id": 233428903,
    "contestId": 1433,
    "creationTimeSeconds": 1700404015,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1433,
        "index": "G",
        "name": "Reducing Delivery Cost",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "brute force",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1433,
        "members": [
            {
                "handle": "KhangKoii"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1603204500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define int long long\r\n#define all(x) x.begin(), x.end()\r\n#define sz(a) (int)a.size()\r\n#define el '\\n'\r\n\r\nconst int N = 1e3 + 5;\r\n\r\nint n, m, k, d[N];\r\nvector<pair<int, int>> adj[N];\r\n\r\nvoid dijkstra(int s, int t)\r\n{\r\n    priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;\r\n    for (int i = 1; i <= n; i++)\r\n        d[i] = LLONG_MAX;\r\n    d[s] = 0;\r\n    pq.push({0, s});\r\n    while (!pq.empty())\r\n    {\r\n        auto [du, u] = pq.top();\r\n        pq.pop();\r\n        if (u == t)\r\n            return;\r\n        if (du > d[u])\r\n            continue;\r\n        for (auto [v, w] : adj[u])\r\n            if (du + w < d[v])\r\n            {\r\n                d[v] = du + w;\r\n                pq.push({d[v], v});\r\n            }\r\n    }\r\n}\r\n\r\nvoid solve()\r\n{\r\n    cin >> n >> m >> k;\r\n    int u, v, w, x, y, pw = LLONG_MIN;\r\n    for (int i = 1; i <= m; i++)\r\n    {\r\n        cin >> u >> v >> w;\r\n        adj[u].push_back({v, w});\r\n        adj[v].push_back({u, w});\r\n\r\n        if (w > pw)\r\n        {\r\n            x = u;\r\n            y = v;\r\n            pw = w;\r\n        }\r\n    }\r\n    adj[x].push_back({y, 0});\r\n    adj[y].push_back({x, 0});\r\n\r\n    int ans = 0;\r\n    while (k--)\r\n    {\r\n        cin >> u >> v;\r\n        dijkstra(u, v);\r\n        ans += d[v];\r\n    }\r\n    cout << ans;\r\n}\r\n\r\nsigned main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n    int t = 1;\r\n    // cin >> t;\r\n    while (t--)\r\n        solve();\r\n}\r\n"
}