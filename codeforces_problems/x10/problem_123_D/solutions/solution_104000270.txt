{
    "id": 104000270,
    "contestId": 123,
    "creationTimeSeconds": 1610333286,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 123,
        "index": "D",
        "name": "String",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2300,
        "tags": [
            "string suffix structures"
        ]
    },
    "author": {
        "contestId": 123,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1320333000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#define ll long long\nusing namespace std;\n\nconst int N = 100007 * 2;\n\nstruct SAM {\n\tint maxlen[N], link[N], trans[26][N];  ///link:st\u7684\u540e\u7f00\u94fe\u63a5\n                                        ///trans:st\u7684\u8f6c\u79fb\u51fd\u6570\uff0cc\u4e3a\u5b57\u7b26\u96c6\u5927\u5c0f\n                                        ///maxlen:st\u5305\u542b\u7684\u6700\u957f\u5b57\u4e32\u7684\u957f\u5ea6\n\tint tot, last;\n\tinline int newNode(int step) {\n\t\tmaxlen[++tot] = step;\n\t\tlink[tot] = 0;\n\t\tfor (int i = 0; i < 26; ++i) trans[i][tot] = 0;\n\t\treturn tot;\n\t}\n\tinline void extend(int k) {\n\t\tint p = last;\n\t\tint np = newNode(maxlen[last] + 1);\n\t\twhile (p && !trans[k][p]) trans[k][p] = np, p = link[p];\n\t\tif (!p) link[np] = 1;\n\t\telse {\n\t\t\tint q = trans[k][p];\n\t\t\tif (maxlen[q] == maxlen[p] + 1) link[np] = q;\n\t\t\telse {\n\t\t\t\tint nq = newNode(maxlen[p] + 1);\n\t\t\t\tfor (int i = 0; i < 26; ++i) trans[i][nq] = trans[i][q];\n\t\t\t\tlink[nq] = link[q];\n\t\t\t\tlink[q] = link[np] = nq;\n\t\t\t\twhile (p && trans[k][p] == q) trans[k][p] = nq, p = link[p];\n\t\t\t}\n\t\t}\n\t\tlast = np;\n\t}\n\tinline int add(int k) {\n\t\textend(k);\n\t}\n\tinline void init() {\n\t\ttot = 0;\n\t\tlast = newNode(0);\n\t}\n} suf;\n\nchar str[N];\nint c[N], sa[N], num[N];\n\nint main() {\n\tscanf(\"%s\", str);\n\tint len = (int) strlen(str);\n\tsuf.init();\n\tfor (int i = 0; i < len; ++i) suf.add(str[i] - 'a');\n\tfor (int i = 1; i <= suf.tot; ++i) ++c[suf.maxlen[i]];\n\tfor (int i = 1; i <= len; ++i) c[i] += c[i - 1];\n\tfor (int i = 1; i <= suf.tot; ++i) sa[c[suf.maxlen[i]]--] = i;\n\tint j = 1, k = 0;\n\twhile (true) \n    {\n\t\t++num[j];\n\t\tif (suf.maxlen[j] == len) break;\n\t\tj = suf.c[str[k++] - 'a'][j]; \n\t}\n\tfor (int i = suf.tot; i > 0; --i) \n\t{\n\t\tint id = sa[i];\n\t\tnum[suf.link[id]] += num[id];\n\t} \n\tll ans = 0;\n\tfor (int i = 1; i <= suf.tot; ++i) {\n\t\tans += (ll)num[i] * (num[i] + 1) / 2 * (suf.maxlen[i] - suf.maxlen[suf.link[i]]);\n\t}\n\tprintf(\"%lld\\n\", ans);\n\treturn 0;\n}\n\t\t       \t   \t\t    \t\t \t    \t\t\t"
}