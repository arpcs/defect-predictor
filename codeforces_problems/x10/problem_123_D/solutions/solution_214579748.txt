{
    "id": 214579748,
    "contestId": 123,
    "creationTimeSeconds": 1689838715,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 123,
        "index": "D",
        "name": "String",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2300,
        "tags": [
            "string suffix structures"
        ]
    },
    "author": {
        "contestId": 123,
        "members": [
            {
                "handle": "bkifhr10"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1320333000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 50,
    "timeConsumedMillis": 560,
    "memoryConsumedBytes": 215756800,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\nconst int MAXLEN = 2000011;\nstruct SAM{\n\tstruct Node{\n\t\tint len,link,si;\n\t\tunordered_map<int,int> nxt;\n\t};\n\tNode st[MAXLEN << 1];\n\tint si,last;\n\tvoid init(){\n\t\tst[0].len = 0;\n\t\tst[0].link = -1;\n\t\tsi++;\n\t\tlast = 0;\n\t}\n\tvoid insert(int c){\n\t\tint cur = si++;\n\t\tst[cur].si = 1;\n\t\tst[cur].len = st[last].len + 1;\n\t\tint p = last;\n\t\twhile(p != -1 && !st[p].nxt[c]){\n\t\t\tst[p].nxt[c] = cur;\n\t\t\tp = st[p].link;\n\t\t}\n\t\tif(p == -1) {\n\t\t\tst[cur].link = 0;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tint q = st[p].nxt[c];\n\t\t\tif(st[p].len + 1 == st[q].len)\n\t\t\t{\n\t\t\t\tst[cur].link = q;\n\t\t\t}\n\t\t\telse \n\t\t\t{\n\t\t\t\tint clone = si++;\n\t\t\t\tst[clone].len = st[p].len + 1;\n\t\t\t\tst[clone].nxt = st[q].nxt;\n\t\t\t\tst[clone].link = st[q].link;\n\t\t\t\twhile(p != -1 && st[p].nxt[c] == q)\n\t\t\t\t{\n\t\t\t\t\tst[p].nxt[c] = clone;\n\t\t\t\t\tp = st[p].link;\n\t\t\t\t}\n\t\t\t\tst[q].link = st[cur].link = clone;\n\t\t\t}\n\t\t}\n\t\tlast = cur;\n\t}\n}sam;\nconst int N = 1000010;\nint head[N<<1],cnt,nxt[N<<2],to[N<<2];\nvoid build(){\n\tfor(int i = 1;i < sam.si;i++)\n\t{\n\t\tint x = sam.st[i].link,y = i;\n\t\tto[++cnt] = y;nxt[cnt] = head[x];head[x] = cnt;\n\t}\n}\nlong long ans = 0;\nvoid dfs(int u){\n\tfor(int i = head[u];i;i = nxt[i]){\n\t\tdfs(to[i]);sam.st[u].si+=sam.st[to[i]].si;\n\t}\n\tif(u == 0) return;\n\tlong long cnt = 1LL * sam.st[u].si;\n\tans += cnt * (cnt + 1) / 2 * (-sam.st[sam.st[u].link].len + sam.st[u].len);\n}\nchar ch[N];\nint main()\n{\n\tscanf(\"%s\",ch);\n\tint L = strlen(ch);\n\tsam.init();\n\tfor(int i = 0;i < L;i++) sam.insert((int)ch[i]-'a');\n\tbuild();\n\tdfs(0);\n\tcout << ans << endl;\n\treturn 0;\n}\n\t  \t\t \t\t \t\t \t \t \t \t  \t \t  \t\t \t"
}