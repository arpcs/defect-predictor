{
    "id": 147990667,
    "contestId": 123,
    "creationTimeSeconds": 1646102289,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 123,
        "index": "D",
        "name": "String",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2300,
        "tags": [
            "string suffix structures"
        ]
    },
    "author": {
        "contestId": 123,
        "members": [
            {
                "handle": "jiengly"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1320333000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 6860800,
    "source": "#include <bits/stdc++.h>\r\n#ifdef LOCAL // cstdio\r\n  #include <other/debug.h>\r\n#else\r\n  #define debug(...) 0\r\n#endif\r\nusing namespace std;\r\n\r\nconst int N = (int)1e5 + 5;\r\n\r\nint n, k, a[N], sa[N], rk[N], oldrk[N], id[N], px[N], cnt[1000010], ht[N];\r\n\r\nbool cmp(int x, int y, int w) {\r\n  return oldrk[x] == oldrk[y] && oldrk[x + w] == oldrk[y + w];\r\n}\r\n\r\nint i, j, w, p, m = 1000000;\r\n\r\nlong long gong(int len) {\r\n  return 1ll * len * (len + 1) / 2;\r\n}\r\nint main() {\r\n  ios::sync_with_stdio(false);\r\n  cin.tie(0);\r\n\r\n  string s;\r\n  cin >> s;\r\n  n = (int)s.size();\r\n\r\n  for (i = 1; i <= n; ++i) a[i] = s[i - 1] - '0';  // \u6c42\u540e\u7f00\u6570\u7ec4\r\n  for (i = 1; i <= n; ++i) ++cnt[rk[i] = a[i]];\r\n  for (i = 1; i <= m; ++i) cnt[i] += cnt[i - 1];\r\n  for (i = n; i >= 1; --i) sa[cnt[rk[i]]--] = i;\r\n\r\n  for (w = 1; w < n; w <<= 1, m = p) {\r\n    for (p = 0, i = n; i > n - w; --i) id[++p] = i;\r\n    for (i = 1; i <= n; ++i)\r\n      if (sa[i] > w) id[++p] = sa[i] - w;\r\n    memset(cnt, 0, sizeof(cnt));\r\n    for (i = 1; i <= n; ++i) ++cnt[px[i] = rk[id[i]]];\r\n    for (i = 1; i <= m; ++i) cnt[i] += cnt[i - 1];\r\n    for (i = n; i >= 1; --i) sa[cnt[px[i]]--] = id[i];\r\n    memcpy(oldrk, rk, sizeof(rk));\r\n    for (p = 0, i = 1; i <= n; ++i)\r\n      rk[sa[i]] = cmp(sa[i], sa[i - 1], w) ? p : ++p;\r\n  }\r\n\r\n  for (i = 1, j = 0; i <= n; ++i) {  // \u6c42 height\r\n    if (j) --j;\r\n    while (a[i + j] == a[sa[rk[i] - 1] + j]) ++j;\r\n    ht[rk[i]] = j;\r\n  }\r\n\r\n  long long ans = 0;\r\n  vector<int> z;\r\n  for (i = 1; i <= n + 1; ++i) {\r\n    if (i == 1 || ht[i] >= ht[z.back()]) {\r\n      z.push_back(i);\r\n    } else {\r\n      int len = (int)(z.size());\r\n      for (j = len - 1; j >= 0; --j) {\r\n        if (ht[z[j]] <= ht[i]) {\r\n          break;\r\n        }\r\n      }\r\n      int zc = z[len - 1];\r\n      for (k = len - 1; k > j; --k) {\r\n        ans += (ht[z[k]] - ht[z[k - 1]]) * gong(zc - z[k - 1] + 1);\r\n        z.pop_back();\r\n      }\r\n      z.push_back(i);\r\n    }\r\n  }\r\n  for (i = 1; i <= n; ++i) {\r\n    ans += n - sa[i] + 1 - max(ht[i], ht[i + 1]);\r\n  }\r\n  cout << ans << '\\n';\r\n  return 0;\r\n}"
}