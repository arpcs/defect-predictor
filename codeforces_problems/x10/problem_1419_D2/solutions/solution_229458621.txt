{
    "id": 229458621,
    "contestId": 1419,
    "creationTimeSeconds": 1698079806,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1419,
        "index": "D2",
        "name": "Sage's Birthday (hard version)",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1500,
        "tags": [
            "binary search",
            "brute force",
            "constructive algorithms",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1419,
        "members": [
            {
                "handle": "Ak_GG"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1600526100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 69,
    "timeConsumedMillis": 234,
    "memoryConsumedBytes": 1638400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define all(v) v.begin(), v.end()\r\n#define allr(v) v.rbegin(), v.rend()\r\n#define ll long long int\r\n\r\nll binexpo(ll a, ll b, ll mod)\r\n{\r\n    if(b==0 || a==1)\r\n    {\r\n        return 1;\r\n    }\r\n    ll res = 1;\r\n    while(b)\r\n    {\r\n        if(b&1)\r\n        {\r\n            res=(res%mod*a%mod)%mod;\r\n        }\r\n        a=(a%mod*a%mod)%mod;\r\n        b>>=1;\r\n    }\r\n    return res%mod;\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    ll t=1;\r\n    // cin>>t;\r\n    while(t--)\r\n    {\r\n        ll n;\r\n        cin>>n;\r\n        vector<ll> v(n);\r\n        for(ll i=0;i<n;i++)\r\n        {\r\n            cin>>v[i];\r\n        }\r\n        sort(all(v));\r\n        vector<ll> spheres(n);\r\n        ll point = 0;\r\n        for(ll i=1;i<n;i+=2)\r\n        {\r\n            spheres[i] = v[point++];\r\n        }\r\n        for(ll i=0;i<n;i+=2)\r\n        {\r\n            spheres[i] = v[point++];\r\n        }\r\n        ll ans = 0;\r\n        for(ll i=1;i<n-1;i+=2)\r\n        {\r\n            if(spheres[i]<spheres[i-1] && spheres[i]<spheres[i+1])\r\n            {\r\n                ans++;\r\n            }\r\n        }\r\n        cout<<ans<<endl;\r\n        for(auto x:spheres)\r\n        {\r\n            cout<<x<<\" \";\r\n        }\r\n    }\r\n    return 0;\r\n}"
}