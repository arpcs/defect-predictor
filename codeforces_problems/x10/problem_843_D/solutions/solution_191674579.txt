{
    "id": 191674579,
    "contestId": 843,
    "creationTimeSeconds": 1675325285,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 843,
        "index": "D",
        "name": "Dynamic Shortest Path",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 3400,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 843,
        "members": [
            {
                "handle": "GZJ123"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1503592500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\ninline int read()\r\n{\r\n    int x=0,f=1;\r\n    char ch=getchar();\r\n    while(ch<'0'||ch>'9')\r\n    {\r\n        if(ch=='-')\r\n            f=-1;\r\n        ch=getchar();\r\n    }\r\n    while(ch>='0' && ch<='9')\r\n        x=x*10+ch-'0',ch=getchar();\r\n    return x*f;\r\n}\r\nint n, m, Q;\r\nstruct Edge{\r\n\tint v;\r\n\tlong long w;\r\n} tmp;\r\nstruct Mem{\r\n\tint u, v;\r\n\tlong long w;\r\n} mem[100005];\r\nEdge AD(int x, int y){\r\n\ttmp.v = x, tmp.w = y;\r\n\treturn tmp;\r\n}\r\nint u, v; long long w;\r\nvector<Edge> e[100005];\r\nlong long dis[100005];\r\nbool vis[100005];\r\npriority_queue<Edge> que;\r\nbool operator <(Edge a, Edge b){\r\n\treturn a.w > b.w;\r\n}\r\nvoid dij(int s){\r\n\tmemset(dis, 0x3f, sizeof(dis));\r\n\tdis[s] = 0, que.push(AD(s, 0));\r\n\twhile(!que.empty()){\r\n\t\tint k = que.top().v;\r\n\t\tque.pop();\r\n\t\tif(vis[k]) continue;\r\n\t\telse vis[k] = true;\r\n\t\tfor(int i = 0; i < e[k].size(); i++){\r\n\t\t\tint v = e[k][i].v;\r\n\t\t\tif(!vis[v] && dis[v] > e[k][i].w + dis[k])\r\n\t\t\t\tdis[v] = e[k][i].w + dis[k], que.push(AD(v, dis[v]));\r\n\t\t}\r\n\t}\r\n}\r\nqueue<int> q[100005];\r\nint add[100005];\r\nvoid bfs(int c){\r\n\tfor(int i = 0; i <= c; i++){\r\n\t\twhile(!q[i].empty()){\r\n\t\t\tint k = q[i].front();\r\n\t\t\t//printf(\"%d\\n\", k);\r\n\t\t\tif(add[k] != i){ \r\n\t\t\t\tq[i].pop(); continue;\r\n\t\t\t}\r\n\t\t\tfor(int j = 0, D; j < e[k].size(); j++){\r\n\t\t\t\tD = dis[k] + e[k][j].w + add[k] - dis[e[k][j].v];\r\n\t\t\t\tif(D < add[e[k][j].v] && D >= 0)\r\n\t\t\t\t\tadd[e[k][j].v] = D, q[D].push(e[k][j].v);\r\n\t\t\t}\r\n\t\t\tq[i].pop();\r\n\t\t}\r\n\t}\r\n\tfor(int i = 1; i <= n; i++)\r\n\t\tif(add[i] != add[n + 1])\r\n\t\t\tdis[i] += add[i];\r\n}\r\nint bel[100005];\r\nsigned main(){\r\n\tn = read(), m = read(), q = read();\r\n\tfor(int i = 1; i <= m; i++){\r\n\t\tu = read(), v = read(), w = read();\r\n\t\te[u].push_back(AD(v, w)); \r\n\t\tbel[i] = e[u].size() - 1;\r\n\t\tmem[i].u = u, mem[i].v = v, mem[i].w = w;\r\n\t}\r\n\tdij(1);\r\n\tfor(int i = 1, op, v; i <= Q; i++){\r\n\t\top = read(), v = read();\r\n\t\tif(op == 1)\r\n\t\t\tprintf(\"%lld\\n\", (dis[v] >= 4e18) ? -1 : dis[v]);\r\n\t\telse{\r\n\t\t\tfor(int i = 1, x; i <= v; i++){\r\n\t\t\t\tx = read();\r\n\t\t\t\te[mem[x].u][bel[x]].w++;\r\n\t\t\t}\r\n\t\t\tfor(int i = 1; i <= n; i++)\r\n\t\t\t\tadd[i] = v + 1;\r\n\t\t\tq[0].push(1), add[1] = 0;\r\n\t\t\tbfs(v);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
}