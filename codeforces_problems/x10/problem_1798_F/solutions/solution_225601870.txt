{
    "id": 225601870,
    "contestId": 1798,
    "creationTimeSeconds": 1695881149,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1798,
        "index": "F",
        "name": "Gifts from Grandfather Ahmed",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2500,
        "tags": [
            "dp",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1798,
        "members": [
            {
                "handle": "300lym_cpp"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1679841300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 8806400,
    "source": "# include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 205, V = 1e6 + 5;\r\nint n, k; \r\nint a[N];\r\npair <int,int> ks[N]; \r\nbool dp[N][N][N];\r\nvector <int> A; \r\nbool del[N]; \r\nvector <pair<int,int> > S;\r\nvoid solve(vector <pair<int,int> > &S, int lim)\r\n{\r\n\t//debug\r\n//\tprintf(\"lim = %d\\n\", lim);\r\n//\tfor(int i = 1; i < (int)S.size(); i++) printf(\"%d %d %c\", S[i].first, S[i].second, \" \\n\"[i == (int)S.size() - 1]);\r\n\tfor(int i = 0; i < (int)S.size(); i++)\r\n\t\tfor(int j = 0; j <= i; j++)\r\n\t\t\tfor(int k = 0; k < lim; k++)\r\n\t\t\t\tdp[i][j][k] = 0; \r\n\tdp[0][0][0] = 1; \r\n\tfor(int i = 1; i < (int)S.size(); i++)\r\n\t{\r\n\t\tfor(int j = 0; j <= i; j++) \r\n\t\t{\r\n\t\t\tfor(int k = 0; k < lim; k++) \r\n\t\t\t{\r\n\t\t\t\tdp[i][j][k] = dp[i][j][k] | dp[i - 1][j][k];\r\n\t\t\t\tdp[i][j][k] = dp[i][j][k] | dp[i - 1][j - 1][(((k - S[i].first) % lim) + lim) % lim];\r\n//\t\t\t\tprintf(\"dp[%d][%d][%d] = %d, zy : %d,%d,%d, %d,%d,%d\\n\", i, j, k, dp[i][j][k], i - 1, j, k, i - 1, j - 1, (((k - S[i].first) % lim) + lim) % lim);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn;\r\n}\r\nvector <int> Ans[N];\r\nvoid dfs(int i, int j, int k, int lim, vector <int> &Ans)\r\n{\r\n//\tprintf(\"dfs : %d,%d,%d\\n\", i, j, k);\r\n\tif(i == 0) return;\r\n\tif(j > 0 && dp[i - 1][j - 1][(((k - S[i].first) % lim) + lim) % lim]) \r\n\t{\r\n\t\tAns.push_back(S[i].first); del[S[i].second] = 1; \r\n\t\tdfs(i - 1, j - 1, (((k - S[i].first) % lim) + lim) % lim, lim, Ans); \r\n\t}\r\n\telse \r\n\t{\r\n\t\tdfs(i - 1, j, k, lim, Ans);\r\n\t}\r\n\treturn;\r\n}\r\nint main(void)\r\n{\r\n\tscanf(\"%d%d\", &n, &k);\r\n\tfor(int i = 1; i <= n; i++) \r\n\t{\r\n\t\tint x; scanf(\"%d\", &x); A.push_back(x);\r\n\t}\r\n\tfor(int i = 1; i <= k; i++) scanf(\"%d\", &ks[i].first), ks[i].second = i;\r\n\tsort(ks + 1, ks + k + 1); \r\n\tfor(int i = 1; i < k; i++)\r\n\t{\r\n\t\tS.clear();\r\n\t\tS.push_back({0,0});\r\n\t\tfor(int j = 0; j < n; j++) if(!del[j]) S.push_back({A[j], j}); \r\n\t\tsolve(S, ks[i].first);\r\n\t\tdfs((int)S.size() - 1, ks[i].first, 0, ks[i].first, Ans[ks[i].second]);\r\n\t}\r\n\tint sum = 0;\r\n\tfor(int i = 0; i < (int)A.size(); i++) if(!del[i]) sum += A[i], Ans[ks[k].second].push_back(A[i]); \r\n\tAns[ks[k].second].push_back(ks[k].first - (sum % ks[k].first) + ks[k].first);\r\n\tprintf(\"%d\\n\", Ans[ks[k].second].back());\r\n\tfor(int i = 1; i <= k; i++)\r\n\t{\r\n\t\tfor(int x : Ans[i]) printf(\"%d \", x); \r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n"
}