{
    "contestId": 1833,
    "index": "G",
    "name": "Ksyusha and Chinchilla",
    "type": "PROGRAMMING",
    "rating": 1800,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "dp",
        "dsu",
        "greedy",
        "implementation",
        "trees"
    ],
    "desc": {
        "title": "G. Ksyusha and Chinchilla",
        "statement": "<p>Ksyusha has a pet chinchilla, a tree on $$$n$$$ vertices and huge scissors. A tree is a connected graph without cycles. During a boring physics lesson Ksyusha thought about how to entertain her pet.</p><p>Chinchillas like to play with <span class=\"tex-font-style-it\">branches</span>. <span class=\"tex-font-style-it\">A branch</span> is a tree of $$$3$$$ vertices.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/f97b60857bf5ae7f47fcf933cdf4497c2fa852da.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> <span class=\"tex-font-size-small\"><span class=\"tex-font-style-it\">The branch</span> looks like this.</span> </center><p><span class=\"tex-font-style-it\">A cut</span> is the removal of some (not yet <span class=\"tex-font-style-it\">cut</span>) edge in the tree. Ksyusha has plenty of free time, so she can afford to make enough <span class=\"tex-font-style-it\">cuts</span> so that the tree splits into <span class=\"tex-font-style-it\">branches</span>. In other words, after several (possibly zero) <span class=\"tex-font-style-it\">cuts</span>, each vertex must belong to <span class=\"tex-font-style-bf\">exactly one</span> <span class=\"tex-font-style-it\">branch</span>.</p><p>Help Ksyusha choose the edges to be <span class=\"tex-font-style-it\">cut</span> or tell that it is impossible.</p>",
        "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)\u00a0\u2014 number of testcases.</p><p>The first line of each testcase contains a single integer $$$n$$$ ($$$2 \\le n \\le 2 \\cdot 10^5$$$)\u00a0\u2014 the number of vertices in the tree.</p><p>The next $$$n - 1$$$ rows of each testcase contain integers $$$v_i$$$ and $$$u_i$$$ ($$$1 \\le v_i, u_i \\le n$$$)\u00a0\u2014 the numbers of vertices that the $$$i$$$-th edge connects.</p><p>It is guaranteed that this set of edges forms a tree. It is also guaranteed that the sum of $$$n$$$ over all testcases <span class=\"tex-font-style-bf\">does not exceed</span> $$$2 \\cdot 10^5$$$.</p>",
        "outputSpecification": "<p>Print the answer for each testcase.</p><p>If the desired way to <span class=\"tex-font-style-it\">cut</span> the tree does not exist, print $$$-1$$$.</p><p>Otherwise, print an integer $$$k$$$\u00a0\u2014 the number of edges to be <span class=\"tex-font-style-it\">cut</span>. In the next line, print $$$k$$$ different integers $$$e_i$$$ ($$$1 \\le e_i &lt; n$$$)\u00a0\u2014 numbers of the edges to be <span class=\"tex-font-style-it\">cut</span>. If $$$k = 0$$$, print an empty string instead.</p><p>If there are several solutions, you can print any.</p>",
        "samples": [
            {
                "input": "<div class=\"test-example-line test-example-line-even test-example-line-0\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">9</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">4 3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">7 9</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">5 4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">4 6</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">8 7</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 7</div><div class=\"test-example-line test-example-line-even test-example-line-2\">6</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">6 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">6</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">4 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">6 5</div><div class=\"test-example-line test-example-line-even test-example-line-4\">5</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 3</div><div class=\"test-example-line test-example-line-even test-example-line-4\">5 3</div><div class=\"test-example-line test-example-line-even test-example-line-4\">5 2</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3 4</div>",
                "output": "\n2\n2 8 \n-1\n1\n3 \n-1\n"
            },
            {
                "input": "<div class=\"test-example-line test-example-line-even test-example-line-0\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">6</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 5</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">6 1</div><div class=\"test-example-line test-example-line-even test-example-line-4\">9</div><div class=\"test-example-line test-example-line-even test-example-line-4\">2 6</div><div class=\"test-example-line test-example-line-even test-example-line-4\">6 9</div><div class=\"test-example-line test-example-line-even test-example-line-4\">9 1</div><div class=\"test-example-line test-example-line-even test-example-line-4\">9 7</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 8</div><div class=\"test-example-line test-example-line-even test-example-line-4\">7 3</div><div class=\"test-example-line test-example-line-even test-example-line-4\">8 5</div><div class=\"test-example-line test-example-line-even test-example-line-4\">4 7</div>",
                "output": "\n-1\n0\n\n1\n2 \n2\n4 3 \n"
            }
        ],
        "note": "<center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/c3cca507aab3ef7577aa732faaba3c27e7108dc9.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> <span class=\"tex-font-size-small\">The first testcase in first test.</span> </center>"
    }
}