{
    "id": 233766297,
    "contestId": 1833,
    "creationTimeSeconds": 1700632628,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1833,
        "index": "G",
        "name": "Ksyusha and Chinchilla",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "dsu",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1833,
        "members": [
            {
                "handle": "zhangxun233"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1684506900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 14,
    "timeConsumedMillis": 217,
    "memoryConsumedBytes": 9625600,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <string>\r\n#include <cstring>\r\n#include <cctype>\r\n#include <cmath>\r\n#include <limits>\r\n#include <set>\r\n#include <map>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\n#include <queue>\r\n#include <deque>\r\n#include <vector>\r\n#include <stack>\r\n#include <list>\r\n#include <bitset>\r\n#include <functional>\r\n#include <random>\r\n#include <array>\r\nusing namespace std;\r\ntemplate<typename T>\r\nvoid read(T& t){t=0;int f=0;char ch=getchar();for(;!isdigit(ch);ch=getchar())f|=ch=='-';for(;isdigit(ch);ch=getchar())t=t*10+ch-'0';if(f)t=-t;}\r\ntemplate<typename T, typename... Args>\r\nvoid read(T& t, Args& ...args){read(t),read(args...);}\r\n\r\ntypedef long long ll;\r\nconst int Inf = 0x3f3f3f3f;\r\nconst int MAXN = 2e5+5;\r\n\r\nvector<pair<int, int>> G[MAXN];\r\nint siz[MAXN];\r\nint del[MAXN];\r\nint ok;\r\n\r\nvoid dfs(int u, int fa) {\r\n    if (!ok) return;\r\n    int f_edge = 0;\r\n    for (auto &[v, eid] : G[u]) {\r\n        if (v == fa) f_edge = eid;\r\n        else {\r\n            dfs(v, u);\r\n            siz[u] += siz[v];\r\n        }\r\n    }\r\n    siz[u]++;\r\n    if (siz[u] == 3) {\r\n        del[f_edge] = 1;\r\n        siz[u] = 0;\r\n    }\r\n    else if (siz[u] > 3) {\r\n        ok = false;\r\n    }\r\n}\r\n\r\nvoid solve() {\r\n    int n;\r\n    read(n);\r\n    \r\n    // clean\r\n    for (int i = 1; i <= n; i++) {\r\n        G[i].clear();\r\n        del[i] = 0;\r\n        siz[i] = 0;\r\n    }\r\n    \r\n    for (int i = 1; i < n; i++) {\r\n        int u, v;\r\n        read(u, v);\r\n        G[u].push_back({v, i});\r\n        G[v].push_back({u, i});\r\n    }\r\n    \r\n    if (n % 3) {\r\n        cout << -1 << '\\n';\r\n        return;\r\n    }\r\n    \r\n    ok = true;\r\n    dfs(1, 0);\r\n    if (ok) {\r\n        cout << n / 3 - 1 << '\\n';\r\n        for (int i = 1; i <= n; i++) {\r\n            if (del[i]) cout << i << ' ';\r\n        }\r\n    }\r\n    else cout << -1;\r\n    cout << '\\n';\r\n}\r\n\r\nint main() {\r\n    int tc = 1;\r\n    //cin >> tc;\r\n    read(tc);\r\n    while (tc-- > 0) solve();\r\n    return 0;\r\n}"
}