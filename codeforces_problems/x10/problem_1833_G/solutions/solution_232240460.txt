{
    "id": 232240460,
    "contestId": 1833,
    "creationTimeSeconds": 1699625217,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1833,
        "index": "G",
        "name": "Ksyusha and Chinchilla",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "dsu",
            "greedy",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1833,
        "members": [
            {
                "handle": "wsh1931"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1684506900
    },
    "programmingLanguage": "Java 8",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 0,
    "source": "\r\nimport javafx.util.Pair;\r\n \r\nimport java.io.*;\r\nimport java.util.Arrays;\r\nimport java.util.HashMap;\r\nimport java.util.HashSet;\r\nimport java.util.Map;\r\nimport java.util.Set;\r\n \r\npublic class Main {\r\n    static BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n    static PrintWriter pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\r\n    static StreamTokenizer sk = new StreamTokenizer(br);\r\n    static int N = (int)2e5 + 10, M = N * 2;\r\n    static int []h = new int[N], e = new int[M], ne = new int[M], size = new int[N], w = new int[M];\r\n    static int idx = 0, ans;\r\n    static boolean []st = new boolean[N];\r\n    static void add(int a, int b, int c) {\r\n    \te[idx] = b;\r\n    \tw[idx] = c;\r\n    \tne[idx] = h[a];\r\n    \th[a] = idx;\r\n    \tidx ++ ;\r\n    }\r\n    \r\n    static void dfs(int u, int fa) {\r\n    \tif (ans == -1) {\r\n    \t\treturn ;\r\n    \t}\r\n    \t\r\n    \tint id = 0;\r\n    \tsize[u] = 1;\r\n    \tfor (int i = h[u]; i != -1; i = ne[i]) {\r\n    \t\tint v = e[i];\r\n    \t\tif (v == fa) {\r\n    \t\t\tid = w[i];\r\n    \t\t} else {\r\n    \t\t\tdfs(v, u);\r\n    \t\t\tsize[u] += size[v];\r\n    \t\t}\r\n    \t}\r\n    \t\r\n    \tif (size[u] == 3) {\r\n    \t\tsize[u] = 0;\r\n    \t\tst[id] = true;\r\n    \t} else if (size[u] > 3){\r\n    \t\tans = -1;\r\n    \t}\r\n    \t\r\n    }\r\n    public static void main(String[] args) throws Exception {\r\n        int T = nextInt();\r\n        while (T -- != 0) {\r\n        \tint n = nextInt();\r\n        \tidx = 0;\r\n        \tfor (int i = 1; i <= n; i ++ ) {\r\n        \t\th[i] = -1;\r\n        \t\tsize[i] = 0;\r\n        \t\tst[i] = false;\r\n        \t}\r\n        \t\r\n        \tfor (int i = 1; i < n; i ++ ) {\r\n        \t\tint a = nextInt(), b = nextInt();\r\n        \t\tadd(a, b, i);\r\n        \t\tadd(b, a, i);\r\n        \t}\r\n        \t\r\n        \tif (ans % 3 != 0) {\r\n        \t\tans = -1;\r\n        \t}\r\n        \t\r\n        \tdfs(1, -1);\r\n        \t\r\n        \tif (ans == -1) {\r\n        \t\tpw.println(-1);\r\n        \t} else {\r\n        \t\tpw.println(n / 3 - 1);\r\n        \t\tfor (int i = 1; i <= n; i ++ ) {\r\n        \t\t\tif (st[i]) {\r\n        \t\t\t\tpw.printf(i + \" \");\r\n        \t\t\t}\r\n        \t\t}\r\n        \t\t\r\n        \t\tpw.println();\r\n        \t}\r\n        }\r\n        \r\n        pw.flush();\r\n    }\r\n   \r\n    \r\n \r\n    public static int nextInt() throws Exception {\r\n        sk.nextToken();\r\n        return (int)sk.nval;\r\n    }\r\n}"
}