{
    "id": 183488759,
    "contestId": 818,
    "creationTimeSeconds": 1669904184,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 818,
        "index": "D",
        "name": "Multicolored Cars",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "data structures",
            "implementation"
        ]
    },
    "author": {
        "contestId": 818,
        "members": [
            {
                "handle": "M-o-b-a-r-a-k"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1498748700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 95,
    "timeConsumedMillis": 499,
    "memoryConsumedBytes": 68096000,
    "source": "#include <bits/stdc++.h>\r\n// #include <ext/pb_ds/assoc_container.hpp>\r\n// #include <ext/pb_ds/tree_policy.hpp>\r\ntypedef long long int LL;\r\ntypedef long double LD;\r\n#define nl '\\n'\r\n#define ff first\r\n#define ss second\r\n#define inf INT_MAX\r\n#define pb push_back\r\n#define GCD(a, b) __gcd(a, b)\r\n#define PI 2.0 * acos(0.0)\r\n#define pii pair<int, int>\r\n#define pll pair<long long, long long>\r\n#define LCM(a, b) (a * b) / GCD(a, b)\r\n#define mem(a, b) memset(a, b, sizeof(a))\r\n#define srtv(v) sort(v.begin(), v.end())\r\n#define Rep(i, a, b) for (int i = a; i <= b; i++)\r\n#define rep(i, a, b) for (int i = a; i >= b; i--)\r\n#define FOR(i, a) for (int i = 0; i < a; i++)\r\n// #pragma                 GCC optimize(\"Ofast,no-stack-protector\")\r\n// #pragma                 GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\r\n// #pragma                 GCC optimize(\"unroll-loops\")\r\n#define boost                         \\\r\n    ios_base::sync_with_stdio(false); \\\r\n    cin.tie(NULL);                    \\\r\n    cout.tie(NULL)\r\n#define inout                         \\\r\n    freopen(\"input.txt\", \"r\", stdin); \\\r\n    freopen(\"output.txt\", \"w\", stdout)\r\n#define si(x) scanf(\"%d\", &x)\r\n#define pi(x) printf(\"%d\", x)\r\n#define sss(str) scanf(\"%s\", str)\r\n#define pl(x) printf(\"%lld\", x)\r\n#define sl(x) scanf(\"%lld\", &x)\r\n#define sii(x, y) scanf(\"%d %d\", &x, &y)\r\n#define sll(x, y) scanf(\"%lld %lld\", &x, &y)\r\n#define siii(x, y, z) scanf(\"%d %d %d\", &x, &y, &z)\r\n#define slll(x, y, z) scanf(\"%lld %lld %lld\", &x, &y, &z)\r\n//using    namespace __gnu_pbds;\r\nusing namespace std;\r\n//Graph direction array[4]\r\n//int dx[]={0,0,-1,1};\r\n//int dy[]={1,-1,0,0};\r\n//Graph direction array[8]\r\n//dx[]={0,0,1,-1,-1,1,1,-1};\r\n//dy[]={1,-1,0,0,-1,-1,1,1};\r\n//Bishop direction array[8]\r\n//dx[]={0,0,1,-1,-1,1,1,-1};\r\n//dy[]={1,-1,0,0,-1,-1,1,1};\r\n//Knight Direction array[8]\r\n//dx[]={1,1,2,2,-1,-1,-2,-2};\r\n//dy[]={2,-2,1,-1,2,-2,1,-1};\r\ninline long long int MOD(long long int a, long long int m){a=a%m;if(a<0)a+=m; return a;}\r\n#define popcountL __builtin_popcountll\r\n#define popcount __builtin_popcount\r\ninline bool checkBit(int N, int pos){return (bool)(N & (1 << pos));}\r\ninline int setBit(int N, int pos) { return N = N | (1 << pos); }\r\ninline int unsetBit(int N, int pos) { return N = (N & (~(1 << pos))); }\r\ninline int toggleBit(int N, int pos) { return N = (N ^ (1 << pos)); }\r\nlong long powerMod(long long number, long long power, long long mod)\r\n{\r\n    LL ret = 0;\r\n    if (power == 0)\r\n        return 1LL % mod;\r\n    if (power == 1)\r\n        return number % mod;\r\n    if (power % 2 == 0)\r\n    {\r\n        ret = powerMod(number, power / 2, mod);\r\n        ret = (ret % mod * ret % mod) % mod;\r\n        return ret % mod;\r\n    }\r\n    else\r\n    {\r\n        ret = powerMod(number, power / 2, mod);\r\n        ret = (((ret % mod) * (ret % mod))%mod * (number % mod)) % mod;\r\n        return ret % mod;\r\n    }\r\n}\r\n// ******Do not use + for adding something to the string always use push_back**********\r\n\r\n//typedef tree<pii, null_type, less<pii>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\r\n//--------------------------code starts here---------------------------------------\r\nconst int maxn = 1e6 + 5;\r\npll tree[4*maxn];\r\nint arr[maxn];\r\nvoid build(int node,int L,int R)\r\n{\r\n    if(L==R)\r\n    {\r\n        tree[node]={0,L};\r\n        return;\r\n    }\r\n    int mid=(L+R)>>1;\r\n    build(node*2,L,mid);\r\n    build(node*2+1,mid+1,R);\r\n    tree[node]=min(tree[node*2],tree[node*2+1]);\r\n}\r\nvoid update(int node,int L,int R,int pos,int val)\r\n{\r\n    if(L==R)\r\n    {\r\n        tree[node].ff+=val;\r\n        return;\r\n    }\r\n    int mid=(L+R)>>1;\r\n    if(pos<=mid)update(node*2,L,mid,pos,val);\r\n    else update(node*2+1,mid+1,R,pos,val);\r\n    tree[node]=min(tree[node*2],tree[node*2+1]);\r\n}\r\npii query(int node,int L,int R,int l,int r)\r\n{\r\n    if(L>r || R<l)return pii(1e9,1e9);\r\n    if(L>=l && R<=r)\r\n    {\r\n        return tree[node];\r\n    }\r\n    int mid=(L+R)>>1;\r\n    return min(query(node*2,L,mid,l,r),query(node*2+1,mid+1,R,l,r));\r\n}\r\nvoid solve(int test)\r\n{\r\n    int n,a,b;\r\n    sii(n,a);\r\n    int cnt=0;\r\n    int m=1e6;\r\n    build(1,1,m);\r\n    Rep(i,1,n)\r\n    {\r\n        si(arr[i]);\r\n        if(arr[i]==a)\r\n        {\r\n            cnt++;\r\n        }\r\n        else\r\n        {\r\n            update(1,1,m,arr[i],1);\r\n        }\r\n        while (true)\r\n        {\r\n            pll x=query(1,1,m,1,m);\r\n            if(x.ff<cnt)\r\n            {\r\n                update(1,1,m,x.ss,1e6);\r\n            }\r\n            else\r\n            {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    Rep(i,1,m)\r\n    {\r\n        pll x=query(1,1,m,i,i);\r\n        if(x.ff<=n && x.ss!=a)\r\n        {\r\n            printf(\"%d\\n\",x.ss);\r\n            return;\r\n        }\r\n    }\r\n    printf(\"-1\\n\");\r\n}\r\nint main()\r\n{\r\n    int ttt = 1;\r\n    //si(ttt);\r\n    Rep(test, 1, ttt)\r\n    {\r\n        solve(test);\r\n    }\r\n    return 0;\r\n}\r\n"
}