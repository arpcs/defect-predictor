{
    "id": 226493684,
    "contestId": 1740,
    "creationTimeSeconds": 1696361597,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1740,
        "index": "A",
        "name": "Factorise N+M",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "constructive algorithms",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1740,
        "members": [
            {
                "handle": "bkifhr6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1667034600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n\n\nusing namespace std;\n\nconst int MAX = 100000;\n\nvector<bool> generatePrimes() {\n    vector<bool> isPrime(MAX + 1, true);\n    isPrime[0] = isPrime[1] = false;\n\n    for (int i = 2; i * i <= MAX; i++) {\n        if (isPrime[i]) {\n            for (int j = i * i; j <= MAX; j += i) {\n                isPrime[j] = false;\n            }\n        }\n    }\n\n    return isPrime;\n}\n\nint main() {\n    int t;\n    cin >> t;\n\n    vector<bool> isPrime = generatePrimes();\n\n    while (t--) {\n        int n;\n        cin >> n;\n\n        int m = n + 2;\n        while (isPrime[m] == true) {\n            for(int i=1;i<n*2;i++)\n            {\n                m+=i;\n            }\n        }\n\n        cout << abs(m-n) << endl;\n    }\n\n    return 0;\n}\n\t\t \t\t\t\t\t\t \t \t\t\t  \t\t \t \t\t\t \t \t\t\t"
}