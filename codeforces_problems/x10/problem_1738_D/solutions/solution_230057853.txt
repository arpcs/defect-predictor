{
    "id": 230057853,
    "contestId": 1738,
    "creationTimeSeconds": 1698427688,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1738,
        "index": "D",
        "name": "Permutation Addicts",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "data structures",
            "dfs and similar",
            "dsu",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 1738,
        "members": [
            {
                "handle": "smurf_pic"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664548500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 61,
    "memoryConsumedBytes": 6963200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define pb push_back\r\n#define endl '\\n'\r\n#define int long long\r\n\r\nvoid solve(){\r\n    int n;\r\n    cin >> n;\r\n    vector<int> b(n);\r\n    vector<vector<int>> pos(n + 2);\r\n    for (ll i = 0; i < n; ++i){\r\n        cin >> b[i];\r\n        pos[b[i]].pb(i + 1);\r\n    }\r\n    int cnt = 0, curr;\r\n    int k = 0;\r\n    if(pos[0].size() == 0){\r\n        curr = n + 1;\r\n        cnt = 1;\r\n    } else curr = 0;\r\n    vector<int> ans;\r\n    while(ans.size() < n){\r\n        int next;\r\n        for (ll i = 0; i < pos[curr].size(); ++i){\r\n            if(pos[pos[curr][i]].size() != 0){\r\n                next = pos[curr][i];\r\n            }\r\n            else\r\n                ans.pb(pos[curr][i]);\r\n            if(cnt % 2) k = max(k, pos[curr][i]);\r\n        }\r\n        if(ans.size() != n) ans.pb(next);\r\n        curr = next;\r\n        cnt++;\r\n    }\r\n    cout << k << endl;\r\n    for (auto x : ans) {\r\n        cout << x << ' ';\r\n    }\r\n}\r\n\r\nint32_t main(){\r\n    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n    int tt; cin >> tt;\r\n    while(tt--){\r\n        solve();\r\n        cout << endl;\r\n    }\r\n    return 0;\r\n}"
}