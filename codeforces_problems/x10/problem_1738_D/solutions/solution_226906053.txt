{
    "id": 226906053,
    "contestId": 1738,
    "creationTimeSeconds": 1696610345,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1738,
        "index": "D",
        "name": "Permutation Addicts",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "data structures",
            "dfs and similar",
            "dsu",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 1738,
        "members": [
            {
                "handle": "Zeoy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664548500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 6451200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define Zeoy std::ios::sync_with_stdio(false), std::cin.tie(0), std::cout.tie(0)\r\n#define all(x) (x).begin(), (x).end()\r\n#define rson id << 1 | 1\r\n#define lson id << 1\r\n#define int long long\r\n#define mpk make_pair\r\n#define endl '\\n'\r\ntypedef unsigned long long ULL;\r\ntypedef long long ll;\r\nconst int inf = 0x3f3f3f3f;\r\nconst ll INF = 0x3f3f3f3f3f3f3f3f;\r\nconst int mod = 1e9 + 7;\r\nconst double eps = 1e-9;\r\nconst int N = 2e5 + 10, M = 4e5 + 10;\r\n\r\nint n, k, b[N];\r\nvector<int> pos[N];\r\n\r\nvoid solve()\r\n{\r\n    cin >> n;\r\n    for (int i=0;i<=n + 1;++i)\r\n        pos[i].clear();\r\n    for (int i=1;i<=n;++i) {\r\n        cin >> b[i];\r\n        pos[b[i]].push_back(i);\r\n    }\r\n    vector<int> va, vb;\r\n    for (int i=1;i<=n;++i) {\r\n        if (b[i] > i)\r\n            va.push_back(i);\r\n        else\r\n            vb.push_back(i);\r\n    }\r\n    int l = -INF, r = INF;\r\n    for (auto x : va) {\r\n         l = max(l, x);\r\n    }\r\n    for (auto x : vb) {\r\n        r = min(r, x - 1);\r\n    }\r\n    if (l != -INF)\r\n        k = l;\r\n    else \r\n        k = r;\r\n    vector<int> ans;\r\n    bool f = false;\r\n    vector<int> vis(n + 10);\r\n    for (int i=1;i<=n;++i) {\r\n        if (b[i] == 0)\r\n            vis[i] = true;\r\n        else if (b[i] == n + 1) {\r\n            f = true;\r\n            vis[i] = true;\r\n        }\r\n    }\r\n    cout << k << endl;\r\n    // B\u7c7b\u6570\u5728\u6700\u524d\u9762\r\n    if (!f) {\r\n        int last = -1;\r\n        for (int i=1;i<=n;++i) {\r\n            if (b[i] > i) {\r\n                if (vis[b[i]]) {\r\n                    last = b[i];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        for (int i=1;i<=n;++i) {\r\n            if (b[i] == 0 && i != last) {\r\n                ans.push_back(i);\r\n            }\r\n        }\r\n        if (last != -1)\r\n            ans.push_back(last);\r\n        while (pos[ans.back()].size()) {\r\n            int back = ans.back();\r\n            for (auto x : pos[back]) {\r\n                ans.push_back(x);\r\n            }\r\n        }\r\n        for (auto x : ans)\r\n            cout << x << \" \";\r\n        cout << endl;\r\n    } else {\r\n        int last = -1;\r\n        for (int i=1;i<=n;++i) {\r\n            if (b[i] < i) {\r\n                if (vis[b[i]]) {\r\n                    last = b[i];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        for (int i=1;i<=n;++i) {\r\n            if (b[i] == n + 1 && i != last) {\r\n                ans.push_back(i);\r\n            }\r\n        }\r\n        if (last != -1)\r\n            ans.push_back(last);\r\n        while (pos[ans.back()].size()) {\r\n            int back = ans.back();\r\n            for (auto x : pos[back]) {\r\n                ans.push_back(x);\r\n            }\r\n        }\r\n        for (auto x : ans) {\r\n            cout << x << \" \";\r\n        }\r\n        cout << endl;\r\n    }\r\n\r\n}\r\nsigned main(void)\r\n{\r\n    Zeoy;\r\n    int T = 1;\r\n    cin >> T;\r\n    while (T--)\r\n        solve();\r\n    return 0;\r\n}"
}