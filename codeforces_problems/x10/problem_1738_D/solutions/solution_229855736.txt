{
    "id": 229855736,
    "contestId": 1738,
    "creationTimeSeconds": 1698322838,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1738,
        "index": "D",
        "name": "Permutation Addicts",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "data structures",
            "dfs and similar",
            "dsu",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 1738,
        "members": [
            {
                "handle": "Papa_Tunde"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664548500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 204800,
    "source": "/*.................................................____________.....\r\n.........../\\......|\\     |....../\\......|\\     |..     |      .....\r\n........../  \\.....| \\    |...../  \\.....| \\    |..     |      .....\r\n........./    \\....|  \\   |..../    \\....|  \\   |..     |      .....\r\n......../______\\...|   \\  |.../______\\...|   \\  |..     |      .....\r\n......./        \\..|    \\ |../        \\..|    \\ |..     |      .....\r\n....../          \\.|     \\|./          \\.|     \\|..     |      .....\r\n....................................................................\r\n*/\r\n\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n\r\ntypedef tree<\r\n    int,\r\n    null_type,\r\n    less<int>,\r\n    rb_tree_tag,\r\n    tree_order_statistics_node_update> ordered_set;\r\ntypedef long long int ll;\r\ntypedef long double ld;\r\n#define ff first\r\n#define ss second\r\n#define pb push_back\r\n#define rep(i,a,b) for(ll i = a; i < b; i++)\r\n#define rev(i,a,b) for(ll i = a; i >= b; i--)\r\n#define vpii vector<pair<int, int>>\r\n#define vpll vector<pair<ll, ll>>\r\n#define vi vector<int>\r\n#define vll vector<ll>\r\n#define pll pair<ll,ll>\r\n#define all(x) (x).begin(), (x).end()\r\n#define mod 998244353\r\n#define endl \"\\n\"\r\n#define pi 3.14159265358979323846\r\n#define SET(n) cout << fixed << setprecision(n)\r\n\r\n\r\nll dfs(ll v, ll p, ll height, ll& ops, vll graph[]){\r\n    ll h=0;\r\n    for (auto x: graph[v]){\r\n        h=max(h, dfs(x, v, height, ops, graph));\r\n    } \r\n    h++;\r\n    if (h==height){\r\n        if (p>1)ops++;\r\n        return 0;\r\n    }\r\n    return h;\r\n}\r\n\r\nll maxH(ll v, vll graph[]){\r\n    ll ans=0;\r\n    for (auto x: graph[v]){\r\n        ans = max(ans, maxH(x, graph)+1);\r\n    }\r\n    return ans;\r\n}\r\n\r\nvoid anant_jain_01(){\r\n    ll n;\r\n    cin>>n;\r\n\r\n    ll b[n+1];\r\n    vll graph[n+2];\r\n    rep(i, 1, n+1){\r\n        cin>>b[i];\r\n        graph[b[i]].pb(i);\r\n    }\r\n    vll v;\r\n    ll cur;\r\n    int c;\r\n    if (graph[0].empty()){cur=n+1;c=0;}\r\n    else {cur=0;c=1;}\r\n    ll i=1, l=0, r=n+2;\r\n    vll ans(n+1);\r\n    while (i<=n){\r\n        if (c==0){\r\n            for (auto x: graph[cur]){\r\n                l=max(l, x);\r\n                if (!graph[x].empty()){cur=x;continue;}\r\n                ans[i]=x;\r\n                i++;\r\n            }\r\n            c=1;\r\n            ans[i]=cur;i++;\r\n        }\r\n        else{\r\n            for (auto x: graph[cur]){\r\n                r=min(r, x);\r\n                if (!graph[x].empty()){cur=x;continue;}\r\n                ans[i]=x;\r\n                i++;\r\n            }\r\n            c=0;\r\n            ans[i]=cur;i++;\r\n        }\r\n    }\r\n    cout<<l<<endl;\r\n    rep(i, 1, n+1)cout<<ans[i]<<\" \";\r\n    cout<<endl;\r\n}\r\n\r\n\r\nint main(){\r\n    std::ios::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n\r\n    // freopen(\"input.txt\", \"r\", stdin);\r\n    // freopen(\"output.txt\", \"w\", stdout);\r\n    // factorial();\r\n    // sieve();\r\n    // cout<<prime.size()<<endl;\r\n    int t = 1, i=1;\r\n    cin >> t;\r\n\r\n    while (t--){\r\n        // cout<<\"Case #\"<<i<<\": \";\r\n        anant_jain_01();\r\n        i++;\r\n    }\r\n    return 0;\r\n}\r\n"
}