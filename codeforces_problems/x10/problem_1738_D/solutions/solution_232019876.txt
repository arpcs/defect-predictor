{
    "id": 232019876,
    "contestId": 1738,
    "creationTimeSeconds": 1699507260,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1738,
        "index": "D",
        "name": "Permutation Addicts",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "data structures",
            "dfs and similar",
            "dsu",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 1738,
        "members": [
            {
                "handle": "peteza"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664548500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 1228800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint t, n, x, rt, ck;\r\nvector<int> adj[100055];\r\nvector<int> res;\r\nvector<int> q;\r\n\r\nvoid dfs(int cn) {\r\n\tsort(adj[cn].begin(), adj[cn].end(), [&](int a, int b) {\r\n\t\treturn adj[a].size() <= adj[b].size();\r\n\t});\r\n\tfor(int e:adj[cn]) {\r\n\t\tres.push_back(e);\r\n\t}\r\n\tif(!adj[cn].empty()) q.emplace_back(adj[cn].back());\r\n}\r\n\r\nvoid solve() {\r\n\tcin >> n; res.clear(); q.clear(); ck= 0;\r\n\tfor(int i=0;i<=n+2;i++) {\r\n\t\tadj[i].clear();\r\n\t}\r\n\tfor(int i=1;i<=n;i++) {\r\n\t\tcin >> x;\r\n\t\tif(x > i) ck = i;\r\n\t\tadj[x].push_back(i);\r\n\t}\r\n\tck=-1;\r\n\tif(adj[0].size()) rt = 0;\r\n\telse rt = n+1;\r\n\tq.emplace_back(rt);\r\n\tfor(int i=0;i<q.size();i++) {\r\n\t    dfs(q[i]);\r\n\t}\r\n\tcout << ck << '\\n';\r\n\tfor(int e:res) cout << e << ' '; cout << '\\n';\r\n}\r\n\r\nint main() {\r\n\tcin.tie(0) -> sync_with_stdio(0);\r\n\tcin >> t;\r\n\twhile(t--) solve();\r\n}"
}