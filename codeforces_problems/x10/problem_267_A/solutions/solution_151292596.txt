{
    "id": 151292596,
    "contestId": 267,
    "creationTimeSeconds": 1648525855,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 267,
        "index": "A",
        "name": "Subtractions",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 900,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 267,
        "members": [
            {
                "handle": "johnli02"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1358002800
    },
    "programmingLanguage": "Java 11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 35,
    "timeConsumedMillis": 217,
    "memoryConsumedBytes": 0,
    "source": "import java.util.Scanner;\r\n\r\npublic class Subtractions {\r\n    public static void main(String[] arg) {\r\n        Scanner sc = new Scanner(System.in);\r\n        int n = sc.nextInt();\r\n\r\n        for (int i = 0; i < n; ++i) {\r\n            System.out.println(findOperations(sc.nextLong(), sc.nextLong()));\r\n        }\r\n    }\r\n\r\n    private static long findOperations(long a, long b) {\r\n        long counter = 0;\r\n        while (a > 0 && b > 0) {\r\n            long quo;\r\n            if (a > b) {\r\n                quo = a / b;\r\n                a = a % b;\r\n            } else {\r\n                quo = b / a;\r\n                b = b % a;\r\n            }\r\n            counter += quo;\r\n        }\r\n        return counter;\r\n    }\r\n}\r\n"
}