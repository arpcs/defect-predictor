{
    "id": 234962045,
    "contestId": 8,
    "creationTimeSeconds": 1701277994,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 8,
        "index": "A",
        "name": "Train and Peter",
        "type": "PROGRAMMING",
        "rating": 1200,
        "tags": [
            "strings"
        ]
    },
    "author": {
        "contestId": 8,
        "members": [
            {
                "handle": "leejihoang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1270741500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "FAILED",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "\r\n#include <iostream>\r\nusing namespace std;\r\n const int MAX = 1e5; \r\nchar flag[MAX + 1], firstSleep[101], secondSleep[101];\r\nint sizeFlag, sizeFirstSleep, sizeSecondSleep;\r\nvoid ReadString(char a[], int &sizeStr) {\r\n    sizeStr = 0;\r\n    char c = cin.get();\r\n    while (sizeStr < MAX && c != '\\n') {\r\n        a[sizeStr++] = c;\r\n        c = cin.get();\r\n    }\r\n}\r\nint FindSubstr(char a[], int sizeA, char b[], int sizeB, int P) {\r\n    if (sizeA < sizeB) return -1;\r\n    for (int start = P; start <= sizeA - sizeB; start++) {\r\n        bool check = true;\r\n        for (int i = 0; i < sizeB; i++) {\r\n            if (a[start + i] != b[i])\r\n            {\r\n                check = false;\r\n                break;\r\n            }\r\n        }\r\n        if (check) return start + sizeB;\r\n    }\r\n    return -1;\r\n}\r\nbool CheckForward() {\r\n    int posFirst = FindSubstr(flag, sizeFlag, firstSleep, sizeFirstSleep, 0);\r\n    if (posFirst == -1) return false;\r\n    int posSecond = FindSubstr(flag, sizeFlag, secondSleep, sizeSecondSleep, posFirst);\r\n    if (posSecond == -1) return false;\r\n    return true;\r\n}\r\nint main() {\r\n    ReadString(flag, sizeFlag);\r\n    ReadString(firstSleep, sizeFirstSleep);\r\n    ReadString(secondSleep, sizeSecondSleep);\r\n    bool isForward = CheckForward();\r\n    for (int i = 0; i < sizeFlag / 2; i++) {\r\n        char tmp = flag[i];\r\n        flag[i] = flag[sizeFlag - i - 1];\r\n        flag[sizeFlag - i - 1] = tmp;\r\n    }\r\n    bool isBackward = CheckForward();\r\n    if (isForward && isBackward) cout << \"both\";\r\n    else if (isForward) cout << \"forward\";\r\n    else if (isBackward) cout << \"backward\";\r\n    else cout << \"fantasy\";\r\n    return 0;\r\n}\r\n\r\n"
}