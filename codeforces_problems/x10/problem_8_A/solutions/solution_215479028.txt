{
    "id": 215479028,
    "contestId": 8,
    "creationTimeSeconds": 1690281445,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 8,
        "index": "A",
        "name": "Train and Peter",
        "type": "PROGRAMMING",
        "rating": 1200,
        "tags": [
            "strings"
        ]
    },
    "author": {
        "contestId": 8,
        "members": [
            {
                "handle": "highjowa"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1270741500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 819200,
    "source": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nint main(){\r\n\t\r\n\tstring all;\r\n\tstring first;\r\n\tstring second;\r\n\tstring temp;\r\n\t\r\n\tcin >> all;\r\n\tcin >> first;\r\n\tcin >> second;\r\n\tint indexFirst;\r\n\tint indexSecond;\r\n\t\r\n\tint isForward = 0;\r\n\tint isBackward = 0;\r\n//\tif(first == second){\r\n//\t\tindexFirst = all.find(first);\r\n//\t\ttemp = all;\r\n//\t\ttemp = temp.substr(0, indexFirst) + temp.substr(first.length() + indexFirst, temp.length() - first.length() - indexFirst);\r\n//\t\tindexSecond = temp.find(second);\r\n//\t\tif(indexFirst < indexSecond && indexFirst > -1) {\r\n//\t\t\tisBackward = 1;\r\n//\t\t\tisForward = 1;\r\n//\t\t}\r\n//\t} else {\r\n\t\tindexFirst = all.find(first);\r\n//\t\tindexSecond = all.find(second);\r\n\t\ttemp = all;\r\n\t\ttemp = temp.substr(0, indexFirst) + temp.substr(first.length() + indexFirst, temp.length() - first.length() - indexFirst);\r\n\t\tindexSecond = temp.find(second);\r\n\t\tif(indexFirst <= indexSecond && indexFirst != -1){\r\n\t\t\tisForward = 1;\r\n\t\t} else {\r\n\t\t\ttemp = all;\r\n\t\t\twhile(indexSecond != -1){\r\n\t\t\t\ttemp = temp.substr(0, indexSecond) + temp.substr(indexSecond + 1, temp.length() - indexSecond - 1);\r\n\t\t\t\tindexFirst = temp.find(first);\r\n\t\t\t\tindexSecond = temp.find(second);\r\n\t\t\t\tif(indexFirst < indexSecond && indexFirst != -1){\r\n\t\t\t\t\tisForward = 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treverse(all.begin(), all.end());\r\n\t\tindexFirst = all.find(first);\r\n//\t\tindexSecond = all.find(second);\r\n\t\ttemp = all;\r\n\t\ttemp = temp.substr(0, indexFirst) + temp.substr(first.length() + indexFirst, temp.length() - first.length() - indexFirst);\r\n\t\t\r\n\t\tindexSecond = temp.find(second);\r\n\t\t\r\n\t\t\r\n\t\tif(indexFirst <= indexSecond && indexFirst != -1){\r\n\t\t\tisBackward = 1;\r\n\t\t} else {\r\n\t\t\ttemp = all;\r\n\t\t\twhile(indexSecond != -1){\r\n\t\t\t\ttemp = temp.substr(0, indexSecond) + temp.substr(indexSecond + 1, temp.length() - indexSecond - 1);\r\n\t\t\t\tindexFirst = temp.find(first);\r\n\t\t\t\tindexSecond = temp.find(second);\r\n\t\t\t\tif(indexFirst <= indexSecond && indexFirst != -1){\r\n\t\t\t\t\tisBackward = 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n//\t}\r\n\tif(isBackward && isForward) cout << \"both\";\r\n\telse if(isBackward) cout << \"backward\";\r\n\telse if(isForward) cout << \"forward\";\r\n\telse cout << \"fantasy\";\r\n\t\r\n\t\t\r\n\treturn 0;\r\n}\r\n"
}