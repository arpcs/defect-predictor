{
    "id": 228551752,
    "contestId": 768,
    "creationTimeSeconds": 1697548883,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 768,
        "index": "F",
        "name": "Barrels and boxes",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "brute force",
            "combinatorics",
            "math",
            "number theory",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 768,
        "members": [
            {
                "handle": "RGB_ICPC1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1487606700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 72,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 11980800,
    "source": "//Written BY RGC\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define endl '\\n'\r\n#define mk make_pair\r\n#define pb push_back\r\n#define all(v) v.begin(), v.end()\r\n#define fi first\r\n#define se second\r\n#define cnti(x) __builtin_popcount(x)\r\n#define cntl(x) __builtin_popcountll(x)\r\n#define clzi(x) __builtin_clz(x)\r\n#define clzl(x) __builtin_clzll(x) \r\n#define ctzi(x) __builtin_ctz(x)\r\n#define ctzl(x) __builtin_ctzll(x) \r\n#define FORE(i, v) for (auto i : v)\r\n#define FOR(i, a, b) for (int i = a; i < b; i ++)\r\n#define FOR_(i, a, b) for (int i = a; i > b; i --)\r\n#define REP(i, a) for (int i = 0; i < a; i ++)\r\n#define REP_(i, a) for (int i = a - 1; ~i; i--)\r\n\r\n#define Error(x) cerr << #x << \" = \" << x << endl\r\n\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\ntemplate <typename hd, typename tl> inline void chkmin(hd &a, tl b) {if (a > b) a = b;}\r\ntemplate <typename hd, typename tl> inline void chkmax(hd &a, tl b) {if (a < b) a = b;}\r\n\r\nusing LL = long long;\r\nusing VI = vector <int>;\r\nusing PI = pair <int, int>;\r\nusing PII = pair <PI, int>;\r\nusing UMP = unordered_map <int, int>;\r\n\r\nconst double PIE = acos(-1.0);\r\nconst double E = 2.718281828;\r\nconst double EPS = 1e-7;\r\n\r\n//const int MOD = 998244353;\r\nconst int MOD = 1e9 + 7;\r\nconst int OO = 1e9 + 7;\r\nconst int OO_ = -1e9 - 7;\r\nconst int LOGN = 18;\r\nconst int ROOTN = 405;\r\nconst int MX = 1e6 + 105;\r\nconst int MN = 1e5 + 105;\r\nconst int MM = 1e5 + 105;\r\nconst int MK = 1e5 + 105;\r\nconst int MQ = 1e5 + 105;\r\nconst int ML = 1e5 + 105; \r\n\r\nint r[MX], g[MX], f[MX];\r\nint tot, good, F, W, h;\r\n\r\nint modExp(int b, int e) {\r\n\tint ret = 1;\r\n\tfor ( ; e; b = 1LL * b * b % MOD, e >>= 1) if (e & 1) ret = 1LL * ret * b % MOD;\r\n\treturn ret;\r\n}\r\n\r\nint inv(int x) {\r\n\treturn modExp(x, MOD - 2);\r\n}\r\n\r\nvoid init() {\r\n\tREP(i, MX) {\r\n\t\tf[i] = i < 1 ? 1 : 1LL * f[i - 1] * i % MOD;\r\n\t\tr[i] = i < 2 ? i : 1LL * r[MOD % i] * (MOD - MOD / i) % MOD;\r\n\t\tg[i] = i < 1 ? 1 : 1LL * g[i - 1] * r[i] % MOD;\r\n\t}\r\n}\r\n\r\nint C(int n, int r) {\r\n\treturn 1LL * f[n] * g[r] % MOD * g[n - r] % MOD;\r\n}\r\n\r\nint H(int n, LL r) {\r\n\tif (n == 0 && r == 0) return 1;\r\n\tif (n <= 0) return 0;\r\n\tif (r < 0) return 0;\r\n\treturn C(n + r - 1, r);\t\r\n}\r\n\r\nvoid proc(int n, int m, int cn, int cm) {\r\n\ttot = (tot + 1LL * H(n, cn) * H(m, cm) % MOD) % MOD;\r\n\tgood = (good + 1LL * H(n, cn - 1LL * n * h) * H(m, cm) % MOD) % MOD;\r\n}\r\n\r\nvoid solve() {\r\n\tcin >> F >> W >> h;\r\n\t\r\n\tint lim = max(F, W);\r\n\tREP(i, lim + 1) {\r\n\t\tproc(i, i - 1, W - i, F - i + 1);\r\n\t\tproc(i, i, W - i, F - i);\r\n\t\tif (i) proc(i, i, W - i, F - i);\r\n\t\tproc(i, i + 1, W - i, F - i - 1);\t\r\n\t}\r\n\t\r\n\tcout << 1LL * good * inv(tot) % MOD << endl;\r\n}\r\n\r\nint main()\r\n{\r\n\t#ifndef ONLINE_JUDGE\r\n\t\tfreopen(\"in.txt\", \"r\", stdin);\r\n\t#endif\r\n\tios::sync_with_stdio(0);\r\n\tcin.tie(0), cout.tie(0);\r\n\r\n\tinit();\r\n\r\n\tint tc = 1;\r\n//\tcin >> tc;\r\n\twhile (tc --) {\r\n\t\tsolve();\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n\r\n"
}