{
    "id": 229468897,
    "contestId": 768,
    "creationTimeSeconds": 1698084962,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 768,
        "index": "F",
        "name": "Barrels and boxes",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "brute force",
            "combinatorics",
            "math",
            "number theory",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 768,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1487606700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 72,
    "timeConsumedMillis": 1310,
    "memoryConsumedBytes": 1638400,
    "source": "#pragma GCC Optimize (\"Ofast\")\n#include<bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n#define ll long long\n#define N '\\n'\n#define pb push_back\n#define pob pop_back\n#define ff first\n#define ss second\n#define bb begin()\n#define ee end()\n#define fastIO() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\nusing namespace std;\nusing namespace __gnu_pbds;\n//order_of_key (k) : Number of items strictly smaller than k .\n//find_by_order(k) : K-th element in a set (counting from zero).\n\nconst ll mod = 1e9+7;\nll fact[200005];\n\nll binexp(ll a,ll b)\n{\n    if(b == 0)\n    {\n        return 1;\n    }\n    ll result = binexp(a,b/2) % mod;\n    result = (result * result) % mod;\n    if(b % 2 == 1)\n    {\n        result = (result * a) % mod;\n    }\n    return result % mod;\n}\n\nll ncr(ll n,ll r)\n{\n    if (n < r)\n    {\n        return 0;\n    }\n\tif(r == 0)\n    {\n        return 1;\n    }\n    ll y = (fact[n-r] * fact[r]) % mod;\n    return (fact[n] * binexp(y,mod-2)) % mod;\n}\n\n\nint main()\n{\n    fastIO();\n    ll t = 1,it;\n    fact[0] = 1;\n    for(it = 1;it <= 200003;it++)\n    {\n        fact[it] = (fact[it-1] * it) % mod;\n    }\n    for(it = 1;it <= t;it++)\n    {\n        ll n,m,q,i,j,k,s = 0,x,y,c = 0,d = 0,f = 0,h = 0;\n        cin >> n >> m >> k;\n        if(n == 0)\n        {\n            if(m > k)\n            {\n                cout << \"1\\n\";\n            }\n            else\n            {\n                cout << \"0\\n\";\n            }\n        }\n        else if(m == 0)\n        {\n            cout << \"1\\n\";\n        }\n        else\n        {\n            f = min(n,m);\n            f *= 2;\n            if(n != m)\n            {\n                f++;\n            }\n\n            for(i = 1;i <= f;i++)\n            {\n                y = i/2;\n                x = ceil(i/2.0);\n                //valid probability part\n                c = ncr(n-1,x-1);\n                d = ncr(m-(y*k)-1,y-1);\n                c = (c*d) % mod;\n                s = (s + c) % mod;\n                c = ncr(n-1,y-1);\n                d = ncr(m-(x*k)-1,x-1);\n                // c = ncr(n-1,y-1);\n                // d = ncr(m-k-1,x-1);\n                c = (c*d) % mod;\n                s = (s + c) % mod;\n                //total probability part\n                c = ncr(n-1,x-1);\n                d = ncr(m-1,y-1);\n                c = (c*d) % mod;\n                h = (h + c) % mod;\n                c = ncr(n-1,y-1);\n                d = ncr(m-1,x-1);\n                c = (c*d) % mod;\n                h = (h + c) % mod;\n                //cout << i << \" \" << h << N;\n            }\n            //cout << s << \" \" << h << N;\n            s = (s * binexp(h,mod-2)) % mod;\n            cout << s << N;\n        }\n        \n    }\n    return 0;\n}\n\n\t\t \t\t\t \t\t\t  \t  \t\t    \t       \t\t"
}