{
    "id": 232172357,
    "contestId": 768,
    "creationTimeSeconds": 1699586189,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 768,
        "index": "F",
        "name": "Barrels and boxes",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2300,
        "tags": [
            "brute force",
            "combinatorics",
            "math",
            "number theory",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 768,
        "members": [
            {
                "handle": "FantasyNumber"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1487606700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 45,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 1638400,
    "source": "#include <bits/stdc++.h>\r\n#define _rep(i, x, y) for(int i = x; i <= y; ++i)\r\n#define _req(i, x, y) for(int i = x; i >= y; --i)\r\n#define _rev(i, u) for(int i = head[u]; i; i = e[i].nxt)\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n#define mst(f, i) memset(f, i, sizeof f)\r\nusing namespace std;\r\n#ifdef ONLINE_JUDGE\r\n#define debug(...) 0\r\n#else\r\n#define debug(...) fprintf(stderr, __VA_ARGS__), fflush(stderr)\r\n#endif\r\ntypedef long long ll;\r\ntypedef pair<int, int> PII;\r\nnamespace fastio{\r\n    char ibuf[50007],*p1 = ibuf, *p2 = ibuf;\r\n    #ifdef ONLINE_JUDGE\r\n    #define get() p1 == p2 && (p2 = (p1 = ibuf) + fread(ibuf, 1, 50007, stdin), p1 == p2) ? EOF : *p1++\r\n    #else\r\n    #define get() getchar()\r\n    #endif\r\n    template<typename T> inline void read(T &t){\r\n        T x = 0, f = 1;\r\n        char c = getchar();\r\n        while(!isdigit(c)){\r\n            if(c == '-') f = -f;\r\n            c = getchar();\r\n        }\r\n        while(isdigit(c)) x = x * 10 + c - '0', c = getchar();\r\n        t = x * f;\r\n    }\r\n    template<typename T, typename ... Args> inline void read(T &t, Args&... args){\r\n        read(t);\r\n        read(args...);\r\n    }\r\n    template<typename T> void write(T t){\r\n        if(t < 0) putchar('-'), t = -t;\r\n        if(t >= 10) write(t / 10);\r\n        putchar(t % 10 + '0');\r\n    }\r\n    template<typename T, typename ... Args> void write(T t, Args... args){\r\n        write(t), putchar(' '), write(args...);\r\n    }\r\n    template<typename T> void writeln(T t){\r\n        write(t);\r\n        puts(\"\");\r\n    }\r\n    template<typename T> void writes(T t){\r\n        write(t), putchar(' ');\r\n    }\r\n    #undef get\r\n};\r\nusing namespace fastio;\r\n#define multitest() int T; read(T); _rep(tCase, 1, T)\r\nnamespace Calculation{\r\n    const ll mod = 1e9 + 7;\r\n    ll ksm(ll p, ll h){ll base = p % mod, res = 1; while(h){if(h & 1ll) res = res * base % mod; base = base * base % mod, h >>= 1ll;} return res;}\r\n    void dec(ll &x, ll y){x = ((x - y) % mod + mod) % mod;}\r\n    void add(ll &x, ll y){x = (x + y) % mod;}\r\n    void mul(ll &x, ll y){x = x * y % mod;}\r\n    ll sub(ll x, ll y){return ((x - y) % mod + mod) % mod;}\r\n    ll pls(ll x, ll y){return ((x + y) % mod + mod) % mod;}\r\n    ll mult(ll x, ll y){return x * y % mod;}\r\n}\r\nusing namespace Calculation;\r\nconst int N = 1e5 + 5, _ = 1e5;\r\nll f, w, h, pw[N], inv[N];\r\nll C(ll n, ll m){\r\n    if(n < 0 || m < 0 || n < m) return 0;\r\n    if(n == m || !m) return 1;\r\n    return pw[n] * inv[n - m] % mod * inv[m] % mod;\r\n}\r\n\r\nint main(){\r\n\tread(f, w, h), pw[0] = inv[0] = 1;\r\n    _rep(i, 1, _) pw[i] = pw[i - 1] * i % mod, inv[i] = ksm(pw[i], mod - 2);\r\n    ll tot = 0, cur = 0;\r\n    if(!f) return writeln(w >= h), 0;\r\n    if(!w) return writeln(!h), 0;\r\n    _rep(i, 1, w){\r\n        ll t = C(f - 1, i - 2) + 2 * C(f - 1, i - 1) + C(f - 1, i); t %= mod;\r\n        add(tot, C(w - 1, i - 1) * t % mod), add(cur, C(w - h * i - 1, i - 1) * t % mod);\r\n        // writeln(C(w - 1, i - 1) * t);\r\n    }\r\n    writeln(cur * ksm(tot, mod - 2) % mod);\r\n    return 0;\r\n}\r\n\r\n"
}