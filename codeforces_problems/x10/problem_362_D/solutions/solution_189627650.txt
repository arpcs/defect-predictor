{
    "id": 189627650,
    "contestId": 362,
    "creationTimeSeconds": 1674037925,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 362,
        "index": "D",
        "name": "Fools and Foolproof Roads",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2100,
        "tags": [
            "data structures",
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 362,
        "members": [
            {
                "handle": "bluegenies"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1384443000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1126400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\n\r\nconst int N = 1e5 + 5, MX = 1e9;\r\nint n, m, p, q;\r\n\r\nint par[N], val[N];\r\n\r\nint find(int v) {\r\n      return v == par[v] ? v : par[v] = find(par[v]);\r\n}\r\n\r\nset<pair<int,int>> s;\r\n\r\nbool merge(int u, int v, int c) {\r\n      u = find(u), v = find(v);\r\n\r\n      if(!c) {\r\n            if(u == v) return 0;\r\n\r\n            par[u] = v;\r\n            s.erase({val[u], u});\r\n            s.erase({val[v], v});\r\n            val[v] = 2 * val[u] + 2 * val[v] + 1;\r\n\r\n            if(val[v] > MX) val[v] = MX;\r\n            s.insert({val[v], v});\r\n            return 1;\r\n      } else {\r\n            if(u != v) {\r\n                  par[u] = v;\r\n                  s.erase({val[u], u});\r\n                  val[v] += val[u];\r\n                  s.erase({val[v], v});\r\n            } else {\r\n                  s.erase({val[v], v});\r\n            }\r\n            \r\n            val[v] += c;\r\n            if(val[v] > MX) val[v] = MX;\r\n            s.insert({val[v], v});\r\n\r\n            return 1;\r\n      }\r\n}\r\n\r\nint main() {\r\n      cin.tie(0); ios_base::sync_with_stdio(0);\r\n\r\n      cin >> n >> m >> p >> q;\r\n      for(int i = 1; i <= n; i++) {\r\n            par[i] = i;\r\n            s.insert({val[i], i});\r\n      }\r\n\r\n      for(int i = 0; i < m; i++) {\r\n            int u, v, w;\r\n            cin >> u >> v >> w;\r\n            merge(u, v, w);\r\n      }\r\n\r\n      int k = s.size();\r\n\r\n      if(k - q < 0 || k - q > p || (q == n && p > 0)) {\r\n            cout << \"NO\\n\";\r\n            return 0;\r\n      }\r\n\r\n      cout << \"YES\\n\";\r\n\r\n      while(k > q && s.size() > 1) {\r\n            auto f = *s.begin();\r\n            s.erase(s.begin());\r\n            auto sc = *s.begin();\r\n            s.erase(s.begin());\r\n\r\n            cout << f.second << \" \" << sc.second << '\\n';\r\n            assert(merge(f.second, sc.second, 0));\r\n            k--;\r\n            p--;\r\n      }\r\n\r\n      while(p > 0) {\r\n            cout << \"1 2\" << '\\n';\r\n            p--;\r\n      }\r\n}"
}