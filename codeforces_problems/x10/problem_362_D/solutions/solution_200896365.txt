{
    "id": 200896365,
    "contestId": 362,
    "creationTimeSeconds": 1680713299,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 362,
        "index": "D",
        "name": "Fools and Foolproof Roads",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2100,
        "tags": [
            "data structures",
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 362,
        "members": [
            {
                "handle": "chappy1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1384443000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 74,
    "timeConsumedMillis": 764,
    "memoryConsumedBytes": 4915200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nint cnt;\r\nint fa[100010];\r\nint siz[100010];\r\nbool vis[100010];\r\nstruct node {\r\n\tint fa;\r\n\tint sum;\r\n\tfriend bool operator < (node a,node b) {\r\n\t\treturn a.sum>b.sum;\r\n\t}\r\n};\r\npriority_queue<node> Q;\r\nint find(int x) {\r\n\treturn fa[x]==0 ? fa[x]=x : fa[x]==x ? x : fa[x]=find(fa[x]);\r\n}\r\nsigned main() {\r\n\tint n,m,p,q;\r\n\tcin >>n;\r\n\tcin >>m;\r\n\tcin >>p;\r\n\tcin >>q;\r\n\tcnt=n;\r\n\r\n\tfor(int i=1; i<=m; i++) {\r\n\t\tint x,y,z;\r\n\t\tcin>>x >> y >>z;\r\n\t\tint fx=find(x);\r\n\t\tint fy=find(y);\r\n\t\tif(fx==fy) {\r\n\t\t\tsiz[fy]+=z;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tcnt--;\r\n\t\tfa[fx]=fy;\r\n\t\tsiz[fy]+=z+siz[fx];\r\n\t}\r\n\tif(cnt<q||cnt-p>q||(p!=0&&cnt==n&&q==n)) {\r\n\t\tcout<<\"NO\"<<endl;\r\n\t\treturn 0;\r\n\t}\r\n\tcout<<\"YES\"<<endl;\r\n\tfor(int i=1; i<=n; i++) {\r\n\t\tint fx=find(i);\r\n\t\tif(!vis[fx]) {\r\n\t\t\tQ.push({fx,siz[fx]});\r\n\t\t\tvis[fx]=1;\r\n\t\t}\r\n\t}\r\n\tint cn=cnt-q;\r\n\twhile(cn--) {\r\n\t\tnode A=Q.top();\r\n\t\tQ.pop();\r\n\t\tnode B=Q.top();\r\n\t\tQ.pop();\r\n\t\tcout<<A.fa<<\" \"<<B.fa<<endl;\r\n\t\tfa[A.fa]=B.fa;\r\n\t\tsiz[B.fa]+=siz[A.fa]+min(1000000000ll,siz[A.fa]+siz[B.fa]+1);\r\n\t\tQ.push({B.fa,siz[B.fa]});\r\n\t\tp--;\r\n\t}\r\n\tfor(int i=1; i<=n; i++) {\r\n\t\tif(i!=find(i)) {\r\n\t\t\twhile(p--) cout<<i<<\" \"<<find(i)<<endl;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
}