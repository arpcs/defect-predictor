{
    "id": 234014347,
    "contestId": 362,
    "creationTimeSeconds": 1700816701,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 362,
        "index": "D",
        "name": "Fools and Foolproof Roads",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2100,
        "tags": [
            "data structures",
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 362,
        "members": [
            {
                "handle": "L_Star_Plus"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1384443000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1331200,
    "source": "# include <bits/stdc++.h>\r\n# define N 100010\r\nstruct edge{\r\n\tint to,val;\r\n};\r\nstruct pair{\r\n\tint x;\r\n\tlong long val;\r\n};\r\nbool operator <(const pair &i,const pair &j) {return i.val<j.val || i.val==j.val && i.x<j.x;}\r\nstd::set<pair> st;\r\nstd::vector<edge> e[N];\r\nbool vis[N];\r\nlong long sum;\r\nint tx=0,ty=0;\r\nvoid dfs(int fr,int x) {\r\n\tif(x!=fr) tx=x, ty=fr;\r\n\tvis[x]=true;\r\n\tfor(auto ee:e[x]) {\r\n\t\tsum+=ee.val;\r\n\t\tif(!vis[ee.to]) dfs(fr,ee.to);\r\n\t}\r\n}\r\nint main() {\r\n\tint x,y,l,n,m,p,q,i;\r\n\tpair pr1,pr2;\r\n\tscanf(\"%d%d%d%d\",&n,&m,&p,&q);\r\n\tfor(i=1;i<=m;i++) {\r\n\t\tscanf(\"%d%d%d\",&x,&y,&l);\r\n\t\te[x].push_back((edge){y,l});\r\n\t\te[y].push_back((edge){x,l});\r\n\t}\r\n\tfor(i=1;i<=n;i++) if(!vis[i]) {\r\n\t\tsum=0; dfs(i,i);\r\n\t\tst.insert((pair){i,sum/2});\r\n\t}\r\n\tif(q>st.size() || p<st.size()-q || p!=st.size()-q && !tx && !ty) return puts(\"NO\"), 0;\r\n\tputs(\"YES\");\r\n\twhile(st.size()>q) {\r\n\t\tp--;\r\n\t\tpr1=*st.begin(); st.erase(st.begin());\r\n\t\tpr2=*st.begin(); st.erase(st.begin());\r\n\t\tprintf(\"%d %d\\n\",pr1.x,pr2.x);\r\n\t\tpr2.val+=pr1.val;\r\n\t\tst.insert(pr2);\r\n\t}\r\n\twhile(p) {\r\n\t\tpr1=*st.begin(); st.erase(st.begin());\r\n\t\tpr2=*st.begin(); st.erase(st.begin());\r\n\t\tif(pr1.val+pr2.val-1<1000) {\r\n\t\t\tprintf(\"%d %d\\n\",pr1.x,pr2.x);\r\n\t\t\tpr2.val+=pr1.val;\r\n\t\t\tst.insert(pr2);\r\n\t\t\tp--;\r\n\t\t}\r\n\t\telse break;\r\n\t}\r\n\twhile(p--) printf(\"%d %d\\n\",tx,ty);\r\n\treturn 0;\r\n} "
}