{
    "id": 219842882,
    "contestId": 1536,
    "creationTimeSeconds": 1692651206,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1536,
        "index": "C",
        "name": "Diluc and Kaeya",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1500,
        "tags": [
            "data structures",
            "dp",
            "hashing",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1536,
        "members": [
            {
                "handle": "Optimator"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1622990100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n#define fast                                                                   \\\n  ios_base::sync_with_stdio(0);                                                \\\n  cin.tie(NULL);\ntypedef long long ll;\nconst int N = 5e5 + 100;\nconst int INF = 0x3f3f3f3f;\nconst int mod = 1e9 + 7;\nint dp[N];\nint sumD[N], sumK[N];\nvoid solve() {\n  memset(dp, 0, sizeof dp);\n  memset(sumD, 0, sizeof sumD);\n  memset(sumK, 0, sizeof sumK);\n  int n;\n  cin >> n;\n  string s;\n  cin >> s;\n  for (int i = 0; i < n; i++) {\n    if (i != 0) {\n      sumD[i] = sumD[i - 1];\n      sumK[i] = sumK[i - 1];\n    }\n    if (s[i] == 'D')\n      sumD[i]++;\n    else\n      sumK[i]++;\n    int sumd = sumD[i], sumk = sumK[i];\n    if (sumd == 0)\n      dp[i] = sumk;\n    else if (sumk == 0)\n      dp[i] = sumd;\n    else {\n      int x = __gcd(sumd, sumD);\n  \n// PSxFToltzYIcvMJktrOcRuuwHNSrQSmOcNFFEPVYXYTPFgheuFCkjygZnnBVaHkgbZwbNFnXnvjJsbCGLEsQsoDmyndWwEXHoBYrAVvgaCVTPIDcsYFaqbSzfmjGlUFL"
}