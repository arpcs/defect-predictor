{
    "id": 236194286,
    "contestId": 1536,
    "creationTimeSeconds": 1701950285,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1536,
        "index": "C",
        "name": "Diluc and Kaeya",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1500,
        "tags": [
            "data structures",
            "dp",
            "hashing",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1536,
        "members": [
            {
                "handle": "sophy7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1622990100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 576,
    "memoryConsumedBytes": 114585600,
    "source": "#include<bits/stdc++.h>\r\n#define  ll  long long\r\n#define  pr priority_queue<int>\r\n#define vll vector<ll>\r\n#define vvll vector<vll>\r\n#define all(vc) ((vc).begin()), ((vc).end())\r\n#define Hakuna_Matata ios_base::sync_with_stdio(false),cout.tie(NULL),cin.tie(NULL);\r\n\r\n#define inf 1000000000000000\r\n#define low lower_bound(arr, arr + n, x)\r\n// getline(cin, s);\r\n//upper_bound(arr, arr+5, 35) - arr;\r\n//lower_bound(arr, arr+n, p) - arr;\r\n// *max_element(arr+l , arr+r+1) ;\r\n//freopen(\"input.txt\",\"r\",stdin);\r\n//freopen(\"output.txt\",\"w\",stdout);\r\n//distance(set.begin(), set.lower_bound(n))\r\n//last elment in set rbegin(),erase elemint st.erase(st.find(x));\r\n//result += (arr[i] * (i + 1) * (n - i));\r\n#define  pq1  priority_queue <pair<int,pair<int,int>>, vector<pair<int,pair<int,int>>>, greater<int>>\r\n//vector<vector<bool>> vis(r, vector<bool>(c,0));\r\n//fixed << setprecision(3) \r\n//ans.to_ullong()\r\n//rotate(c.begin(), it, c.end());\r\nusing namespace std;\r\ntemplate < typename T = int > istream& operator >> (istream &in, vector < T > &v) {\r\n    for (auto &x: v) in >> x;\r\n    return in;\r\n}\r\ntemplate < typename T = int > ostream& operator << (ostream &out, const vector < T > &v) {\r\n    for (const T &x: v) out << x << ' ';\r\n    return out;\r\n}\r\nconst int N=5e5+5;\r\nvector<vector<ll>>v(N+5);\r\nvector<pair<ll,pair<ll,ll>>>vis(N);\r\nvoid solve(){\r\n  int n;\r\n  cin>>n;\r\n  string s;\r\n  cin>>s;\r\n  ll a=0,b=0;\r\n  vector<pair<ll,ll>>pre(n+5);\r\n  for(ll i=0;i<n;i++){\r\n      vis[i].first=-1;\r\n      vis[i].second.first=-1;\r\n      vis[i].second.second=-1;\r\n      if(s[i]=='D')a++;\r\n      else b++;\r\n      pre[i].first=a;\r\n      pre[i].second=b;\r\n      \r\n  }\r\n  \r\n \r\n  cout<<1<<' ';\r\n  ll ans=1;\r\n  for(ll i=1;i<n;i++){\r\n          ans=1;\r\n          int d=i+1;\r\n        for(auto it:v[d]){\r\n            if(vis[d/it].first==-2)continue;\r\n            bool flag=1;\r\n           // cout<<d<<' '<<it<<'\\n';\r\n              for(int j=(d/it);j<d;j+=(d/it)){\r\n                 ll a1=pre[j-1].first;\r\n                 ll b1=pre[j-1].second;\r\n                 if((j-(d/it))-1>=0){\r\n                     a1-=pre[(j-(d/it))-1].first;\r\n                     b1-=pre[(j-(d/it))-1].second;\r\n                 }\r\n                 if(vis[d/it].second.first==-1){\r\n                      vis[d/it].second.first=a1;\r\n                    vis[d/it].second.second=b1;\r\n                 }\r\n                 else if(vis[d/it].second.first!=a1||vis[d/it].second.second!=b1){\r\n                     flag=0;\r\n                     vis[d/it].first=-2;\r\n                   break;\r\n                 }\r\n            }\r\n            if(flag){\r\n                vis[d/it].first=i;\r\n                ans=it;\r\n            }\r\n        }\r\n       cout<<ans<<' ';\r\n  }\r\n  cout<<'\\n';\r\n  }\r\n \r\n\r\n\r\n\r\n\r\nint main()\r\n{\r\n    \r\n    Hakuna_Matata;\r\n   int t=1;\r\n   cin>>t;\r\n    for(ll i=1;i<=N;i++){\r\n        for(ll j=i;j<=N;j+=i){\r\n                v[j].push_back(i);\r\n        }\r\n    }\r\n   while(t--){\r\n   solve();\r\n   }\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// 1 2 \r\n\r\n\r\n\r\n"
}