{
    "id": 233987315,
    "contestId": 1660,
    "creationTimeSeconds": 1700796447,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1660,
        "index": "F2",
        "name": "Promising String (hard version)",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "data structures",
            "implementation",
            "math",
            "strings"
        ]
    },
    "author": {
        "contestId": 1660,
        "members": [
            {
                "handle": "ingeniousquid"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1648737300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 59,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 32460800,
    "source": "#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp> // Common file\n#include <ext/pb_ds/tree_policy.hpp>\n#include <functional> // for less\n#include <iostream>\nusing namespace __gnu_pbds;\nusing namespace std;\n \n #define int long long\n// a new data structure defined. Please refer below\n// GNU link : https://goo.gl/WVDL6g\ntypedef tree<pair<int,int>, null_type, less<pair<int,int>>, rb_tree_tag,\n             tree_order_statistics_node_update>\n    ordered_set;\n\nusing namespace std;\n\n\nconst int inf=1e9;\nsigned main(){\n    int t; cin>>t;\n    while(t--){\n        int n; cin>>n;\n        string s; cin>>s;\n        vector<ordered_set> cnt(n+3);\n        cnt[0].insert({0,-1});\n        int a=0, b=0;\n        int ans=0;  \n        for (int i=0; i<n; i++){\n            if (s[i]=='+') a++;\n            else b++;\n            //find some prefix such that it makes b>=a and has same a-b mod 3\n            //b-a>=c-d\n            ans+=cnt[(a-b+3*b)%3].order_of_key({b-a+1, -inf});\n            cnt[(a-b+3*b)%3].insert({b-a,i});\n        }\n        cout<<ans<<'\\n';\n    }\n}"
}