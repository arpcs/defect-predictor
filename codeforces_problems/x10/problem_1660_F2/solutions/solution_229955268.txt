{
    "id": 229955268,
    "contestId": 1660,
    "creationTimeSeconds": 1698381300,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1660,
        "index": "F2",
        "name": "Promising String (hard version)",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "data structures",
            "implementation",
            "math",
            "strings"
        ]
    },
    "author": {
        "contestId": 1660,
        "members": [
            {
                "handle": "zengqingxinxinxin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1648737300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 44,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 81408000,
    "source": "#include <bits/stdc++.h>\r\n#define AC return 0;\r\n#define pii pair<int, int>\r\n#define all(tar) tar.begin(), tar.end()\r\nusing namespace std;\r\nconst int mod = 1e9 + 7;\r\nconst int maxx = 1e6 + 5;\r\nint n, m, t;\r\nstring s;\r\nstruct node {\r\n    int l, r, siz[3];\r\n} a[maxx << 2];\r\n#define pl i << 1\r\n#define pr i << 1 | 1\r\n#define mid ((a[i].l + a[i].r) >> 1)\r\nvoid pushup(int i) {\r\n    for (int c = 0; c < 3; c++)\r\n        a[i].siz[c] = a[pl].siz[c] + a[pr].siz[c];\r\n}\r\nvoid build(int i, int l, int r) {\r\n    a[i].l = l, a[i].r = r;\r\n    memset(a[i].siz, 0, sizeof a[i].siz);\r\n    if (l == r)\r\n        return;\r\n    build(pl, l, mid);\r\n    build(pr, mid + 1, r);\r\n}\r\nvoid updata(int i, int pos) {\r\n    // cout << a[i].l << \" \" << a[i].r << \" \" << i << \" \" << pos << '\\n';\r\n    if (a[i].l == a[i].r) {\r\n        a[i].siz[((pos) % 3 + 3) % 3]++;\r\n        return;\r\n    }\r\n    if (mid >= pos)\r\n        updata(pl, pos);\r\n    else\r\n        updata(pr, pos);\r\n    pushup(i);\r\n}\r\nint query(int i, int l, int r, int k) {\r\n    if (a[i].l >= l && a[i].r <= r) {\r\n        return a[i].siz[k];\r\n    }\r\n    int ans = 0;\r\n    if (mid >= l)\r\n        ans += query(pl, l, r, k);\r\n    if (mid < r)\r\n        ans += query(pr, l, r, k);\r\n    return ans;\r\n}\r\nsigned main() {\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    ios::sync_with_stdio(false);\r\n    cin >> t;\r\n    while (t--) {\r\n        cin >> n >> s;\r\n        s = \" \" + s;\r\n        vector<int> c(n + 1, 0);\r\n        build(1, -n, n);\r\n        updata(1, 0);\r\n        int ans = 0;\r\n        for (int i = 1; i <= n; i++) {\r\n            c[i] = c[i - 1];\r\n            if (s[i] == '+')\r\n                c[i]++;\r\n            else\r\n                c[i]--;\r\n            int k = ((c[i] % 3) + 3) % 3;\r\n            ans += query(1, c[i], n, k);\r\n            updata(1, c[i]);\r\n        }\r\n        cout << ans << '\\n';\r\n    }\r\n}"
}