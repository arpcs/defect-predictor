{
    "id": 225872571,
    "contestId": 1660,
    "creationTimeSeconds": 1696061459,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1660,
        "index": "F2",
        "name": "Promising String (hard version)",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "data structures",
            "implementation",
            "math",
            "strings"
        ]
    },
    "author": {
        "contestId": 1660,
        "members": [
            {
                "handle": "Luke_Cai"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1648737300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 59,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 12800000,
    "source": "#include <algorithm>\r\n#include <cmath>\r\n#include <cstring>\r\n#include <iostream>\r\n#include <map>\r\n#include <vector>\r\nusing namespace std;\r\n#define int long long\r\nconst int N = 400010;\r\nint s[N];\r\nint n;\r\nstruct BIT {\r\n    int tr[N];\r\n    int lowbit(int x) {\r\n        return x & -x;\r\n    }\r\n    void add(int x, int v) {\r\n        for (int i = x; i < N; i += lowbit(i)) tr[i] += v;\r\n    }\r\n    int query(int x) {\r\n        int res = 0;\r\n        for (int i = x; i; i -= lowbit(i)) res += tr[i];\r\n        return res;\r\n    }\r\n    void init(int n) {\r\n        for (int i = 0; i < n + 2; i++) tr[i] = 0;\r\n    }\r\n\r\n} tr[3];\r\n\r\nvoid solve() {\r\n    cin >> n;\r\n    int minv = 0;\r\n    s[0] = 0;\r\n    for (int i = 1; i <= n; i++) {\r\n        char op;\r\n        cin >> op;\r\n        s[i] = s[i - 1];\r\n        if (op == '+')\r\n            s[i]--;\r\n        if (op == '-')\r\n            s[i]++;\r\n        minv = min(minv, s[i]);\r\n    }\r\n    for (int i = 0; i <= n; i++) s[i] -= minv - 1;\r\n    for (int i = 0; i < 3; i++) tr[i].init(n - minv + 1);\r\n    int res = 0;\r\n    for (int i = 0; i <= n; i++) {\r\n        int t = s[i] % 3;\r\n        res += tr[t].query(s[i]);\r\n        tr[t].add(s[i], 1);\r\n    }\r\n    cout << res << '\\n';\r\n}\r\n\r\nsigned main() {\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    int T;\r\n    cin >> T;\r\n    while (T--) solve();\r\n}\r\n"
}