{
    "id": 231688556,
    "contestId": 1660,
    "creationTimeSeconds": 1699345215,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1660,
        "index": "F2",
        "name": "Promising String (hard version)",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "data structures",
            "implementation",
            "math",
            "strings"
        ]
    },
    "author": {
        "contestId": 1660,
        "members": [
            {
                "handle": "realmayor"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1648737300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 59,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 10137600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nconst int maxn = 4e5 + 5;\r\nint tree[3][maxn];\r\nint n;\r\nint lowbit(int x)\r\n{\r\n    return x & (-x);\r\n}\r\nvoid add(int cur, int pos)\r\n{\r\n    while (pos <= 2 * n + 1)\r\n    {\r\n        tree[cur][pos]++;\r\n        pos += lowbit(pos);\r\n    }\r\n}\r\nint query(int cur, int pos)\r\n{\r\n    int ret = 0;\r\n    while (pos)\r\n    {\r\n        ret += tree[cur][pos];\r\n        pos -= lowbit(pos);\r\n    }\r\n    return ret;\r\n}\r\nvoid clean()\r\n{\r\n    for (int i = 0; i <= 2; i++)\r\n    {\r\n        for (int j = 0; j <= 2 * n + 1; j++)\r\n        {\r\n            tree[i][j] = 0;\r\n        }\r\n    }\r\n}\r\nsigned main()\r\n{\r\n    int T;\r\n    cin >> T;\r\n    string s;\r\n    while (T--)\r\n    {\r\n        cin >> n >> s;\r\n        clean();\r\n        s = \" \" + s;\r\n        int sum = n + 1, ans = 0;\r\n        add((n + 1) % 3, n + 1);\r\n        for (int i = 1; i <= n; i++)\r\n        {\r\n            sum += (s[i] == '+' ? -1 : 1);\r\n            int temp = (sum % 3 + 3) % 3;\r\n            ans += query(temp, sum);\r\n            add(temp, sum);\r\n        }\r\n        cout << ans << endl;\r\n    }\r\n}"
}