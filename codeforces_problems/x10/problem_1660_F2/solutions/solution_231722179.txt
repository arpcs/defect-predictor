{
    "id": 231722179,
    "contestId": 1660,
    "creationTimeSeconds": 1699359006,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1660,
        "index": "F2",
        "name": "Promising String (hard version)",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "data structures",
            "implementation",
            "math",
            "strings"
        ]
    },
    "author": {
        "contestId": 1660,
        "members": [
            {
                "handle": "Toirz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1648737300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 59,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 79052800,
    "source": "#include<bits/stdc++.h>\r\n#define ll long long\r\n#define pll pair<ll, ll>\r\n#define endl \"\\n\"\r\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n#define all(x) (x).begin(),(x).end()\r\n#define bit(i,j) ((j >> i) & 1)\r\n\r\nusing namespace std;\r\n#define int long long\r\nvoid solve();\r\n\r\nint32_t main(){\r\n    ios_base::sync_with_stdio(0);\r\n\tcin.tie(0);\r\n    int t;\r\n    cin >> t;\r\n    FOR(i,1,t) solve();\r\n}\r\n/*tozy^6*/\r\nconst int inf = 1e18;\r\nconst int mod = 1e9+7;\r\nconst int N = 8e5+100;\r\n\r\nint st0[4*N] , st1[4*N], st2[4*N];\r\nvoid build(int id, int l , int r, int st[]){\r\n    if(l == r){st[id] = 0;return;}\r\n    int mid = l + r >> 1;\r\n    build(2 * id , l , mid, st) ; build(2 * id + 1, mid+1 , r , st);\r\n    st[id] = st[2 * id] + st[2 * id + 1];\r\n}\r\nvoid build0(int id, int l , int r, int st[]){\r\n    if(l == r and l == 0){st[id] = 1;return;}\r\n    if(l == r){st[id] = 0;return;}\r\n    int mid = l + r >> 1;\r\n    build0(2 * id , l , mid, st) ; build0(2 * id + 1, mid+1 , r , st);\r\n    st[id] = st[2 * id] + st[2 * id + 1];\r\n}\r\nint get(int id, int l , int r , int x , int y , int st[]){\r\n    if(l > y or r < x) return 0;\r\n    if(l >= x and r <= y) return st[id];\r\n    int mid = l + r >> 1;\r\n    return get(2 * id , l , mid , x , y , st) + get(2 * id +1, mid+1 , r , x , y , st);\r\n}\r\nvoid update(int id, int l , int r, int pos , int st[]){\r\n    if(l > pos or r < pos) return;\r\n    if(l == r){st[id]++;return;}\r\n    int mid = l + r >> 1;\r\n    update(2 * id , l , mid, pos, st) ; update(2 * id + 1, mid+1 , r , pos , st);\r\n    st[id] = st[2 * id] + st[2 * id + 1];\r\n}\r\nvoid solve(){\r\n    int n; string s;\r\n    cin >> n >> s;\r\n    vector<int> a(n+1);\r\n    FOR(i,0,s.size()-1){\r\n        a[i+1] = (s[i] == '+' ? 1 : -1);\r\n    }\r\n    //subtask 2\r\n    build0(1,-n,n,st0);build(1,-n,n,st1);build(1,-n,n,st2);\r\n    int ans = 0, sum = 0;\r\n    FOR(i,1,n){\r\n        sum += a[i];\r\n        int t = sum % 3;\r\n        if(t < 0) t += 3;\r\n        if(t == 0) ans += get(1,-n,n,sum,n,st0); \r\n        if(t == 1) ans += get(1,-n,n,sum,n,st1);\r\n        if(t == 2) ans += get(1,-n,n,sum,n,st2);\r\n        if(t == 0) update(1,-n,n,sum,st0);\r\n        if(t == 1) update(1,-n,n,sum,st1);\r\n        if(t == 2) update(1,-n,n,sum,st2);\r\n    }\r\n    cout << ans << endl;\r\n}"
}