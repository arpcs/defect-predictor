{
    "id": 234899098,
    "contestId": 1660,
    "creationTimeSeconds": 1701248088,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1660,
        "index": "F2",
        "name": "Promising String (hard version)",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "data structures",
            "implementation",
            "math",
            "strings"
        ]
    },
    "author": {
        "contestId": 1660,
        "members": [
            {
                "handle": "Amdadul"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1648737300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 59,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 9932800,
    "source": "\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\n#define ordered_set tree<int, null_type,less_equal<int>, rb_tree_tag,tree_order_statistics_node_update>\r\n\r\n\r\nint save[3];\r\n\r\nordered_set tave[3];\r\n\r\n\r\nint main()\r\n{\r\n    int t;\r\n    cin >> t;\r\n    for(int i=1; i<=t; i++)\r\n    {\r\n        string s;\r\n        int n;\r\n\r\n        cin >> n >> s;\r\n        save[0]=save[1]=save[2]=0;\r\n        save[0]=1;\r\n        tave[0].clear(),tave[1].clear(),tave[2].clear();\r\n        tave[0].insert(0);\r\n        int sum=0;\r\n        long long ans=0;\r\n        for(auto it:s)\r\n        {\r\n            if(it=='+')sum++;\r\n            else sum--;\r\n\r\n            long long val=(sum%3+3)%3;\r\n\r\n            int l=min(sum,sum);\r\n            if(tave[val].size())\r\n            {\r\n                auto it=tave[val].order_of_key(l);\r\n                ans=ans+(int)tave[val].size()-it;\r\n            }\r\n            tave[val].insert(sum);\r\n\r\n        }\r\n        cout<<ans<<\"\\n\";\r\n    }\r\n\r\n}\r\n"
}