{
    "id": 232487030,
    "contestId": 1697,
    "creationTimeSeconds": 1699783275,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1697,
        "index": "C",
        "name": "awoo's Favorite Problem",
        "type": "PROGRAMMING",
        "rating": 1400,
        "tags": [
            "binary search",
            "constructive algorithms",
            "data structures",
            "greedy",
            "implementation",
            "strings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1697,
        "members": [
            {
                "handle": "__-Anuj__Kumar-__"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1655044500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std ;\r\n#define    int long long \r\n#define    FAST  ios_base::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL);\r\n#define    TestCases int TOTALTC ; cin >> TOTALTC ; for(_case = 1 ; _case <=  TOTALTC ; _case++)\r\n#define    rep(i,n) for (int i = 0; i < (n); ++i)\r\n#define    all(x) (x).begin(), (x).end()\r\n#define    nl \"\\n\"\r\nconst      int INF = 1e18 ;\r\n\r\n\r\nint _case = 1 ;\r\n\r\n\r\n\r\nvoid solve()\r\n{\r\n    int n;\r\n    cin>>n;\r\n\r\n    string s1 , s2;\r\n    cin>>s1>>s2;\r\n\r\n    vector<int> as1 , as2 , cs1 , cs2;\r\n    map<char , int>m1 , m2;\r\n    rep(i,n)\r\n    {\r\n        if(s1[i] == 'a') as1.push_back(i);\r\n        if(s1[i] == 'c') cs1.push_back(i);\r\n        m1[s1[i]]++;\r\n\r\n        if(s2[i] == 'a') as2.push_back(i);\r\n        if(s2[i] == 'c') cs2.push_back(i);\r\n        m2[s2[i]]++;\r\n    }\r\n\r\n   \r\n\r\n    bool fga = 1 , fgc = 1;\r\n\r\n    for(int i = 0 , j =0 ; i < as1.size() , j < as2.size() ; i++ , j++)\r\n    {\r\n        if(as1[i] > as2[j]) fga = 0;\r\n    }\r\n\r\n    for(int i = 0 , j =0 ; i < cs1.size() , j < cs2.size() ; i++ , j++)\r\n    {\r\n        if(cs1[i] < cs2[j]) fgc = 0;\r\n    }\r\n\r\n    \r\n\r\n    for (auto c : { 'a', 'b', 'c' }) \r\n    {\r\n        if (count(s1.begin(), s1.end(), c) !=count(s2.begin(), s2.end(), c)) \r\n        {\r\n            cout << \"NO\"<<nl;\r\n            return;\r\n        }\r\n    }\r\n\r\n    if(fga and fgc )\r\n    {\r\n        cout<<\"YES\"<<nl;\r\n    }\r\n\r\n    else cout<<\"NO\"<<nl;\r\n}\r\n\r\nsigned main()\r\n{\r\n    FAST      TestCases      solve() ; \r\n\r\n    /* stuff you should look for\r\n\t* int overflow, array bounds\r\n\t* special cases (n=1?)\r\n\t* do smth instead of nothing and stay organized\r\n\t* WRITE STUFF DOWN\r\n*/\r\n       \r\n}"
}