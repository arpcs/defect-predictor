{
    "id": 234414912,
    "contestId": 1879,
    "creationTimeSeconds": 1701002339,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1879,
        "index": "B",
        "name": "Chips on the Board",
        "type": "PROGRAMMING",
        "rating": 900,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1879,
        "members": [
            {
                "handle": "Vaishali23"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1695566100
    },
    "programmingLanguage": "MS C++ 2017",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<iostream>\r\n#include<climits>\r\n#include<vector>\r\n#include<algorithm>\r\n#include<set>\r\nusing namespace std;\r\n\r\nint main(){\r\n    int t,n;\r\n    cin>>t;\r\n    for(int i=0; i<t; i++){\r\n        cin>>n;\r\n        vector<int> a(n);\r\n        vector<int> b(n);\r\n        int min_a = INT_MAX;\r\n        int min_b = INT_MAX;\r\n        int r=0,s=0,cost=0,chip=0;\r\n        for(int j=0; j<n; j++){\r\n            cin>>a[j];\r\n            if(a[j]<min_a){\r\n                min_a = a[j];\r\n                r = j;\r\n            }\r\n        }\r\n        for(int j=0; j<n; j++){\r\n            cin>>b[j];\r\n            if(b[j]<min_b){\r\n                min_b = b[j];\r\n                s = j;\r\n            }\r\n        }\r\n\r\n        vector<vector<int>> sum(n,vector<int>(n,0));\r\n        vector<pair<int,int>> corrdinates;\r\n        // sort(a.begin(), a.end());\r\n        // sort(b.begin(), b.end());\r\n        for(int p=0; p<n; p++){\r\n            for(int q=0; q<n; q++){\r\n                sum[p][q] = b[p] + a[q];\r\n            }\r\n        }\r\n\r\n        // cost += sum[0][0];\r\n        // sum[0][0] = 0;\r\n        // corrdinates.push_back({0,0});\r\n        // chip++;\r\n\r\n        cost += sum[s][r];\r\n        sum[s][r] = 0;\r\n        //corrdinates.push_back({r,s});\r\n        chip++;\r\n        while(chip<=n){\r\n            int m1,m2,n1,n2;\r\n            int min_a = INT_MAX;\r\n            int min_b = INT_MAX;\r\n            // for(const auto& coord: corrdinates){\r\n                // int p=0;\r\n                // while(sum[coord.second][p] == 0){\r\n                //     p++;\r\n                // }\r\n                for(int p=0; p<n; p++){\r\n                    if(sum[s][p] !=0 && sum[s][p] < min_a){\r\n                        min_a = sum[s][p];\r\n                        m1 = p;\r\n                        n1 = s;\r\n                    }\r\n                }\r\n\r\n                // p=0;\r\n                // while(sum[p][coord.first] == 0){\r\n                //     p++;\r\n                // }\r\n                for(int p=0; p<n; p++){\r\n                    if(sum[p][r] != 0 && sum[p][r] < min_b){\r\n                        min_b = sum[p][r];\r\n                        m2 = r;\r\n                        n2 = p;\r\n                    }\r\n                }\r\n            // }\r\n            if(min_a<min_b){\r\n                cost += min_a;\r\n                r = m1;\r\n                s = n1;\r\n                //corrdinates.push_back({r,s});\r\n                sum[s][r] = 0;\r\n            }\r\n            else{\r\n                cost += min_b;\r\n                r = m2;\r\n                s = n2;\r\n                //corrdinates.push_back({r,s});\r\n                sum[s][r] = 0;\r\n            }\r\n            chip++;\r\n        }\r\n        cout<<cost<<endl;\r\n    }\r\n\r\n    return 0;\r\n}"
}