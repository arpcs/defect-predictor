{
    "id": 236153108,
    "contestId": 1879,
    "creationTimeSeconds": 1701934223,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1879,
        "index": "B",
        "name": "Chips on the Board",
        "type": "PROGRAMMING",
        "rating": 900,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1879,
        "members": [
            {
                "handle": "CarlosAlcaraz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1695566100
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 3072000,
    "source": "t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    row_costs = [int(i) for i in input.split()]\n    col_costs = [int(i) for i in input.split()]\n\n    one_in_each_row = 0\n    for r in range(n):\n        best_col = float('inf')\n        for c in range(n):\n            best_col = min(best_col, col_costs[c])\n        one_in_each_row += row_costs[r] + best_col\n    \n    one_in_each_col = 0\n    for c in range(n):\n        best_row = float('inf')\n        for r in range(n):\n            best_row = min(best_row, row_costs[r])\n        one_in_each_col += col_costs[c] + best_row\n    \n    print(min(one_in_each_row, one_in_each_col))\n    \n\n\n\n\n\n"
}