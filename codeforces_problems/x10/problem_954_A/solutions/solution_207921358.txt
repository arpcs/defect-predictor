{
    "id": 207921358,
    "contestId": 954,
    "creationTimeSeconds": 1685507569,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 954,
        "index": "A",
        "name": "Diagonal Walking",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 954,
        "members": [
            {
                "handle": "bkifhr10"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1521698700
    },
    "programmingLanguage": "Java 17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 614400,
    "source": "import java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        double k, b, t;\n        int n;\n        k = scanner.nextDouble();\n        b = scanner.nextDouble();\n        n = scanner.nextInt();\n        t = scanner.nextDouble();\n\n        // Calculate the number of iterations using CRT\n        double maxIterations = Math.ceil((t - b) / k);\n        int count = Math.min(n, (int) maxIterations);\n        count = Math.max(0, count);\n\n        System.out.println(count);\n    }\n}\n\n \t\t\t \t  \t\t\t\t \t \t  \t\t \t\t \t    \t\t"
}