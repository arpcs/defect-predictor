{
    "id": 207473785,
    "contestId": 396,
    "creationTimeSeconds": 1685193856,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 396,
        "index": "B",
        "name": "On Sum of Fractions",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 396,
        "members": [
            {
                "handle": "god_of_navarda"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1393428600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 592,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nstruct fraction {\n\tint a, b;\n\tfraction() {}\n\tfraction(int n, int k) {\n\t\ta = n, b = k? k: 1;\n\t\tnormalize();\n\t}\n\tint gcd(int a, int b) {\n\t\treturn b? gcd(b, a % b): a;\n\t}\n\tvoid normalize() {\n\t\tint g = gcd(a, b);\n\t\ta /= g, b /= g;\n\t}\n\tvoid print() {\n\t\tcout << a << '/' << b << '\\n';\n\t}\n\tfraction operator+ (const fraction &num) {\n\t\tfraction res(num.b * a + num.a * b, num.b * b);\n\t\treturn res;\n\t}\n};\n\nbool is_prime(int n) {\n\tfor (int i = 2; i * i <= n; i++)\n\t\tif (n % i == 0) return false;\n\treturn 2 <= n;\n}\n\nint32_t main() {\n\tios:: sync_with_stdio(0), cin.tie(0);\n\tint t;\n\tcin >> t;\n\twhile (t--) {\n\t\tint n, k, tmp1, tmp2, c = 0;\n\t\tfraction ans(0, 1);\n\t\tcin >> n;\n\t\tk = n;\n\t\twhile (!is_prime(k)) k--;\n\t\tc = n - k + 1, tmp1 = k, k++;\n\t\twhile (!is_prime(k)) k++;\n\t\ttmp2 = k;\n\t\tans = fraction(tmp2 * (tmp1 - 2) + (n - tmp1 + 1) * 2, 2 * tmp1 * tmp2);\n\t\tans.print();\n\t}\n\treturn 0;\n}"
}