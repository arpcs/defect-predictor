{
    "id": 175729361,
    "contestId": 818,
    "creationTimeSeconds": 1665562047,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 818,
        "index": "E",
        "name": "Card Game Again",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "number theory",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 818,
        "members": [
            {
                "handle": "Wmic."
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1498748700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 135,
    "timeConsumedMillis": 1107,
    "memoryConsumedBytes": 3993600,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\nint n,k,a[100005],ans;\nstruct segtree{\n\tint tree[400005];\n\t#define lc(x) (x<<1)\n\t#define rc(x) (x<<1|1)\n\t#define M(l,r) (l+r>>1)\n\tvoid pushup(int p)\n\t{\n\t\ttree[p]=tree[lc(p)]*tree[rc(p)]%k;\n\t}\n\tvoid build(int p,int l,int r)\n\t{\n\t\tif(l==r)\n\t\t{\n\t\t\ttree[p]=a[l]%k;\n\t\t\treturn ;\n\t\t}\n\t\tint mid=M(l,r);\n\t\tbuild(lc(p),l,mid);\n\t\tbuild(rc(p),mid+1,r);\n\t\tpushup(p);\n\t}\n\tint query(int p,int l,int r,int L,int R)\n\t{\n\t\tif(L<=l&&r<=R)\n\t\t\treturn tree[p];\n\t\tint mid=M(l,r),ret=1;\n\t\tif(L<=mid) ret=query(lc(p),l,mid,L,R);\n\t\tif(mid<R) ret=ret*query(rc(p),mid+1,r,L,R)%k;\n\t\treturn ret%k;\n\t}\n}T;\nbool check(int l,int r)\n{\n\treturn T.query(1,1,n,l,r)==0;\n}\nsigned main()\n{\n\tcin>>n>>k;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tcin>>a[i];\n\t}\n\tT.build(1,1,n);\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tint l=i,r=n+1;\n\t\twhile(l<r)\n\t\t{\n\t\t\tint mid=l+r>>1;\n\t\t\tif(check(i,mid)) r=mid;\n\t\t\telse l=mid+1;\n\t\t}\n\t\tif(l==n+1) continue;\n\t\tans+=n-l+1;\n\t}\n\tcout<<ans;\n}"
}