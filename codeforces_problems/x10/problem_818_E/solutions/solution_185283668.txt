{
    "id": 185283668,
    "contestId": 818,
    "creationTimeSeconds": 1671106336,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 818,
        "index": "E",
        "name": "Card Game Again",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "number theory",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 818,
        "members": [
            {
                "handle": "TimVen74"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1498748700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 17,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 921600,
    "source": "#ifdef LOCAL\n#define _GLIBCXX_DEBUG\n#define debug(x) cerr << (#x)  << \": \" << (x) << '\\n'\n#else\n#define debug(x) 228\n#endif\n\n#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<map>\n#include<set>\n#include<tuple>\n#include<bitset>\n#include<unordered_map>\n#include<unordered_set>\n#include<random>\n#include<cmath>\n#include<deque>\n#include<numeric>\n\nusing namespace std;\n\n#pragma GCC optimize(\"O3\")\n#pragma GCC optimize(\"unroll-loops\")\n\n#define int long long\n#define itn int\n#define mao map\n#define Int int\n#define Itn int\n#define X first\n#define Y second\n#define pii pair<int, int>\n#define all(a) a.begin(), a.end()\n#define rall(a) a.rbegin(), a.rend()\n#define pb push_back\n#define ld double\n\ntemplate<typename T>\nistream &operator>>(istream &in, vector<T> &arr) {\n    for (auto &item : arr) {\n        in >> item;\n    }\n    return in;\n}\n\ntemplate<typename T>\nostream &operator<<(ostream &out, vector<T> &arr) {\n    for (auto &item : arr) {\n        out << item << ' ';\n    }\n    return out;\n}\n\nconst int MOD = 1e9 + 7;\nconst int INF = 1e9 + 7;\nconst int maxn = 1e5 + 10;\n\nvector<int> del;\n\nvector<pii> f(int x) {\n    vector<pii> ans;\n    for(auto to : del) {\n        if(x % to == 0) {\n            int cnt = 0;\n            while(x % to == 0) {\n                x /= to;\n                ++cnt;\n            }\n            ans.pb({to, cnt});\n        }\n    }\n    return ans;\n}\n\nvector<pii> d(int k) {\n    vector<pii> ans;\n    for(int i = 2; i * i <= k; ++i) {\n        if(k % i == 0) {\n            int cnt = 0;\n            while(k % i == 0) {\n                k /= i;\n                ++cnt;\n            }\n            ans.pb({i, cnt});\n        }\n    }\n    if(k != 1) ans.pb({k, 1});\n    return ans;\n}\n\nbool check(vector<int> &need, vector<int> &cnt) {\n    for(int i = 0; i < (int)need.size(); ++i) {\n        if(need[i] > cnt[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nvoid solve() {\n    int n, k;\n    cin >> n >> k;\n    vector<itn> a(n);\n    cin >> a;\n    vector<pii> o = d(k);\n    vector<itn> ind(1010);\n    for(Int i = 0; i < (int)o.size(); ++i) {\n        ind[o[i].X] = i;\n        del.pb(o[i].X);\n    }\n    vector<itn> need((int)del.size());\n    for(int i = 0; i < (int)del.size(); ++i) {\n        need[ind[o[i].X]] = o[i].Y;\n    }\n    int r = 1;\n    int ans = 0;\n    vector<itn> cnt((int)del.size());\n    vector<pii> tmr = f(a[0]);\n    for(auto to : tmr) {\n        cnt[ind[to.X]] += to.Y;\n    }\n    for(int l = 0; l < n; ++l) {\n        if(l == r) {\n            vector<pii> tmr = f(a[l]);\n            for(auto to : tmr) {\n                cnt[ind[to.X]] += to.Y;\n            }\n            ++r;\n        }\n        while(r < n && !check(need, cnt)) {\n            vector<pii> tmr = f(a[r]);\n            for(auto to : tmr) {\n                cnt[ind[to.X]] += to.Y;\n            }\n            ++r;\n        }\n        if(!check(need, cnt)) {\n            continue;\n        } else {\n            ans += n - r + (r != l);\n        }\n        vector<pii> tmr = f(a[l]);\n        for(auto to : tmr) {\n            cnt[ind[to.X]] -= to.Y;\n        }\n    }\n    cout << ans;\n}\n\nsigned main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n#ifdef LOCAL\n    freopen(\"inp.txt\", \"r\", stdin);\n    freopen(\"out.txt\", \"w\", stdout);\n    auto start = chrono::high_resolution_clock::now();\n#endif\n    int ttt = 1;\n    //cin >> ttt;\n    while (ttt--) {\n        solve();\n    }\n#ifdef LOCAL\n    auto end = chrono::high_resolution_clock::now();\n    cerr << \"TIME: \" << chrono::duration_cast<chrono::milliseconds>(end - start).count() << \"ms\";\n#endif\n}"
}