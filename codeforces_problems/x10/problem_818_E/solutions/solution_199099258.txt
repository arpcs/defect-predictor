{
    "id": 199099258,
    "contestId": 818,
    "creationTimeSeconds": 1679750071,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 818,
        "index": "E",
        "name": "Card Game Again",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "number theory",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 818,
        "members": [
            {
                "handle": "Pistolero"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1498748700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 135,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 24985600,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/rope>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\nusing namespace __gnu_pbds;\r\nusing namespace __gnu_cxx;\r\nusing namespace std;\r\ntemplate<class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n#define fr first\r\n#define sc second\r\n#define Fast ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\r\n#define ll long long\r\n#define lll long long int\r\n#define ld long double\r\n#define p(x,y) cout<<fixed<<setprecision(y)<<x<<\"\\n\";\r\n#define PI 3.1415926535897\r\n#define mem(dp) memset(dp, -1, sizeof dp)\r\n#define ones(x) __builtin_popcount(x)\r\n#define acc(a, n) accumulate(a, a + n,0ll);\r\n#define ac(a, n) accumulate(a.begin(), a.begin() + n, 0ll)\r\n#define all(x) (x).begin(), (x).end()\r\n#define rall(x) (x).rbegin(), (x).rend()\r\n#define sz(X) ((ll)(X).size())\r\n#define lcm(a, b) (a / __gcd(a,b) * b)\r\n#define pll pair<ll, ll>\r\n#define pi pair<int, int>\r\n#define pb push_back\r\n#define in insert\r\ntypedef tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update> omls;\r\n#define al(it) it.fr << \" \" << it.sc << \"\\n\"\r\n#define _cout(v)  for(auto f : v ) cout << f << \" \" ;\r\n#define _cin(v)   for(auto &it : v)cin >> it ;\r\n#define Tmax(type)   std::numeric_limits<type>::max()\r\n#define Tmin(type)   std::numeric_limits<type>::min()\r\n#define debug(x) cout<<\" [ \" << #x << \" is: \" << x << \" ] \"<<endl\r\n#define mod (ll)1000000007\r\n#define mod1 (ll)998244353\r\n#define POW2(x) (1 << x)\r\n#define N 100001\r\nint n, k;\r\nvector<int>a(N);\r\nint main()\r\n{\r\n    Fast;\r\n\r\n    cin >> n >> k;\r\n\r\n    for(int i = 0; i < n; i++)\r\n    {\r\n        cin >> a[i];\r\n    }\r\n\r\n    int kk1 = k;\r\n\r\n    vector<int>prm;\r\n    map<int, int>mk;\r\n    for(int i = 2; i * i <= kk1; i++)\r\n    {\r\n        while(kk1 % i == 0)\r\n        {\r\n            mk[i]++;\r\n            kk1 /= i;\r\n            if(!sz(prm) or prm.back() != i)\r\n            {\r\n                prm.push_back(i);\r\n            }\r\n        }\r\n    }\r\n    if(kk1 != 1)\r\n    {\r\n        mk[kk1]++;\r\n        prm.push_back(kk1);\r\n    }\r\n    mk[1]++;\r\n\r\n\r\n    map<int, int>m[n];\r\n    for(int i = 0; i < n; i++)\r\n    {\r\n        m[i][1]++;\r\n        for(auto it : prm)\r\n        {\r\n            while(a[i] % it == 0)\r\n            {\r\n                m[i][it]++;\r\n                a[i] /= it;\r\n            }\r\n        }\r\n        if(a[i] != 1)\r\n        {\r\n            m[i][a[i]]++;\r\n        }\r\n    }\r\n\r\n    ll ans = 0;\r\n    map<int, int>cur;\r\n    int l = -1, r = 0;\r\n    while(true)\r\n    {\r\n\r\n        bool ok = false;\r\n\r\n        bool cur_ok = true;\r\n        for(auto [x, y] : mk)\r\n        {\r\n\r\n            if(y > cur[x])\r\n            {\r\n                cur_ok = false;\r\n            }\r\n        }\r\n        ok = cur_ok;\r\n\r\n        if(!ok and r == n)\r\n        {\r\n            break;\r\n        }\r\n\r\n        while(!ok and r < n)\r\n        {\r\n            for(auto [x, y] : m[r])\r\n            {\r\n                cur[x] += y;\r\n            }\r\n\r\n            bool cur_ok = true;\r\n            for(auto [x, y] : mk)\r\n            {\r\n                if(y > cur[x])\r\n                {\r\n                    cur_ok = false;\r\n                }\r\n            }\r\n            ok = cur_ok;\r\n\r\n            r++;\r\n        }\r\n     \r\n        if(!ok)\r\n        {\r\n            break;\r\n        }\r\n        ans += (n - max(l, r) + 1);\r\n\r\n        l++;\r\n        if(l == n)\r\n        {\r\n            break;\r\n        }\r\n\r\n        for(auto [x, y] : m[l])\r\n        {\r\n            cur[x] -= y;\r\n        }\r\n\r\n    }\r\n    cout << ans << \"\\n\";\r\n}\r\n\r\n\r\n"
}