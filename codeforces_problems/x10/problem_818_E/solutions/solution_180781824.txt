{
    "id": 180781824,
    "contestId": 818,
    "creationTimeSeconds": 1668348577,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 818,
        "index": "E",
        "name": "Card Game Again",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "number theory",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 818,
        "members": [
            {
                "handle": "konb1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1498748700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 135,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 7987200,
    "source": "#include <bits/stdc++.h>\r\n#define fi first \r\n#define se second\r\n#define mm(a,b) memset(a,b,sizeof(a))\r\n#define pb push_back\r\n#define ls (u << 1)\r\n#define rs (u << 1 | 1)\r\n#define PI acos(-1)\r\n\r\nusing namespace std;\r\ntypedef long long LL;\r\ntypedef pair<int, int> PII;\r\ntypedef unsigned long long ULL;\r\nconst int N = 100005;\r\nint p[20], cnt[20], tot;\r\nint n, k, sum[20][N];\r\nint main() {\r\n\tcin >> n >> k;\r\n\tfor (int i = 2; i <= k / i; i++) {\r\n\t\tif (k % i == 0) {\r\n\t\t\tp[++tot] = i;\r\n\t\t\twhile (k % i == 0) {\r\n\t\t\t\tk /= i;\r\n\t\t\t\tcnt[tot]++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (k != 1) {\r\n\t\tp[++tot] = k;\r\n\t\tcnt[tot]++;\r\n\t}\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tint x; scanf(\"%d\", &x);\r\n\t\tfor (int j = 1; j <= tot; j++) {\r\n\t\t\tsum[j][i] = sum[j][i - 1];\r\n\t\t\twhile (x % p[j] == 0) {\r\n\t\t\t\tx /= p[j];\r\n\t\t\t\tsum[j][i]++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tLL res = 0;\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tint mx = i, ok = 1;\r\n\t\tfor (int j = 1; j <= tot; j++) {\r\n\t\t\tint id = lower_bound(sum[j] + 1, sum[j] + n + 1, sum[j][i - 1] + cnt[j]) - sum[j];\r\n\t\t\tif (id == n + 1) {\r\n\t\t\t\tok = false; break;\r\n\t\t\t}\r\n\t\t\tmx = max(mx, id);\r\n\t\t}\r\n\t\tif (!ok) break;\r\n\t\tres += n - mx + 1;\r\n\t}\r\n\tcout << res << endl;\r\n    return 0;\r\n}"
}