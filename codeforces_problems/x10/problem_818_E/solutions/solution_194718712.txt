{
    "id": 194718712,
    "contestId": 818,
    "creationTimeSeconds": 1677181606,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 818,
        "index": "E",
        "name": "Card Game Again",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "number theory",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 818,
        "members": [
            {
                "handle": "srishtik_16"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1498748700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 135,
    "timeConsumedMillis": 1466,
    "memoryConsumedBytes": 3993600,
    "source": "// #pragma GCC optimize \"trapv\"\r\n#include<iostream>\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define fio ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define ui unsigned int\r\n#define vi vector<int>\r\n#define vll vector<ll>\r\n#define pb push_back\r\n#define ld long double\r\n// #define mp make_pair\r\n#define pii pair<int,int>\r\n// #define mod 998244353\r\n#define rep(i,n) for(int i=0;i<n;i++)\r\n#define repp(i,a,n) for(int i=a;i<n;i++)\r\n#define all(v) v.begin(),v.end()\r\n#define input(arr,n) for(ll i1=0;i1<n;i1++ )cin>>arr[i1]\r\n#include <ext/pb_ds/assoc_container.hpp> \r\n#include <ext/pb_ds/tree_policy.hpp> \r\nusing namespace __gnu_pbds; \r\n#define ordered_set tree<ll, null_type, greater_equal<ll>, rb_tree_tag,tree_order_statistics_node_update>//s.order_of_key(val) *s.find_by_order(ind)\r\n#define random(l,r,T)    uniform_int_distribution<T>(l,r)(rng)\r\n// mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n//----------------------------------- DEBUG -----------------------------------\r\n#define sim template < class c\r\n#define ris return * this\r\n#define dor > debug & operator <<\r\n#define eni(x) sim > typename \\\r\nenable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\r\nsim > struct rge { c b, e; };\r\nsim > rge<c> range(c i, c j) { return rge<c>{i, j}; }\r\nsim > auto dud(c* x) -> decltype(cerr << *x, 0);\r\nsim > char dud(...);\r\nstruct debug {\r\n#ifdef LOCAL\r\n~debug() { cerr << endl; }\r\neni(!=) cerr << boolalpha << i; ris; }\r\neni(==) ris << range(begin(i), end(i)); }\r\nsim, class b dor(pair < b, c > d) {\r\n  ris << \"(\" << d.first << \", \" << d.second << \")\";\r\n}\r\nsim dor(rge<c> d) {\r\n  *this << \"[\";\r\n  for (auto it = d.b; it != d.e; ++it)\r\n    *this << \", \" + 2 * (it == d.b) << *it;\r\n  ris << \"]\";\r\n}\r\n#else\r\nsim dor(const c&) { ris; }\r\n#endif\r\n};\r\n#define imie(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\r\n// debug & operator << (debug & dd, P p) { dd << \"(\" << p.x << \", \" << p.y << \")\"; return dd; }\r\n \r\n//----------------------------------- END DEBUG --------------------------------\r\ntemplate<typename T_vector>\r\nvoid output_vector(const T_vector &v, bool add_one = false, int start = -1, int end = -1) {\r\n    if (start < 0) start = 0;\r\n    if (end < 0) end = int(v.size());\r\n \r\n    for (int i = start; i < end; i++)\r\n        cout << v[i] + (add_one ? 1 : 0) << (i < end - 1 ? ' ' : ' ');\r\n}\r\nstruct custom_hash {\r\n    static uint64_t splitmix64(uint64_t x) {\r\n        // http://xorshift.di.unimi.it/splitmix64.c\r\n        x += 0x9e3779b97f4a7c15;\r\n        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n        return x ^ (x >> 31);\r\n    }\r\n\r\n    size_t operator()(uint64_t x) const {\r\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n        return splitmix64(x + FIXED_RANDOM);\r\n    }\r\n};\r\ntemplate<typename T> istream& operator >>(istream &in,vector<T> &v){\r\n    for(auto &x:v) in>>x; return in;\r\n}\r\ntemplate<typename T> ostream& operator <<(ostream &out,vector<T> &v){\r\n    for(auto &x:v) out<<x<<' '; return out;\r\n}\r\ntemplate<typename T1,typename T2> istream& operator >>(istream &in,pair<T1,T2> &p){\r\n    in>>p.first>>p.second; return in;\r\n}\r\ntemplate<typename T1,typename T2> ostream& operator <<(ostream &out,pair<T1,T2> &p){\r\n    out<<p.first<<' '<<p.second; return out;\r\n}\r\ntemplate<class T, class H>using umap=unordered_map<T,H,custom_hash>;\r\ntemplate<class T>using uset=unordered_set<T,custom_hash>;\r\nconst ll MaxN = 1e5 + 5;\r\nll k;\r\nvector<ll> st(4 * MaxN, 1);\r\n// st[node] = ans for some range\r\nll merge(ll x, ll y) {\r\n    return (x * y) % k;\r\n}\r\nvoid build(vll &a, ll node, ll start, ll end) {\r\n    if(start == end) {\r\n        // Leaf node\r\n        st[node] = a[start];\r\n        return;\r\n    }\r\n    // Call for left and right child\r\n    ll mid = (start + end) / 2;\r\n    build(a, 2 * node + 1, start, mid);\r\n    build(a, 2 * node + 2, mid + 1, end);\r\n    st[node] = merge(st[2 * node + 1], st[2 * node + 2]);\r\n}\r\nll query(ll node, ll start, ll end, ll l, ll r) {\r\n    // If [start, end] is outside [l, r]\r\n    if(start > r || end < l) {\r\n        return 1 % k; // Identity element\r\n    }\r\n    // [l [start, end] r]\r\n    else if(start >= l && end <= r) {\r\n        return st[node] % k;\r\n    }\r\n    ll mid = (start + end) / 2;\r\n    ll leftAns = query(2 * node + 1, start, mid, l, r);\r\n    ll rightAns = query(2 * node + 2, mid + 1, end, l, r);\r\n    return merge(leftAns, rightAns);\r\n}\r\nint32_t main()\r\n{\r\n     #ifndef ONLINE_JUDGE\r\n    // freopen(\"input.txt\", \"r\", stdin);\r\n    // freopen(\"output.txt\", \"w\", stdout);\r\n    // freopen(\"scalersmall.txt\", \"r\", stdin);\r\n    // freopen(\"scalermid.txt\", \"r\", stdin);\r\n    // freopen(\"scalerlarge.txt\", \"r\", stdin);\r\n    freopen(\"error.txt\", \"w\", stderr);\r\n    #endif\r\n    fio;\r\n    clock_t clk = clock();\r\n    int t = 1;\r\n    // cin >> t;\r\n    rep(tc, t)\r\n    {\r\n        // cout << \"Case #\" << tc + 1 << \": \";\r\n        ll n;\r\n        cin >> n;\r\n        cin >> k;\r\n        vll a(n);\r\n        cin >> a;\r\n        build(a, 0, 0, n - 1);\r\n        auto getProd = [&](ll l, ll r) {\r\n            return query(0, 0, n - 1, l, r);\r\n        };\r\n        ll res = 0;\r\n        for(int x = 0; x < n; x++) {\r\n            ll l = 0, r = n - x - 1, ans = -1;\r\n            while(l <= r) {\r\n                ll mid = (l + r) / 2;\r\n                if(getProd(x, n - mid - 1) == 0) {\r\n                    ans = mid;\r\n                    l = mid + 1;\r\n                }\r\n                else {\r\n                    r = mid - 1;\r\n                }\r\n            }\r\n            if(ans != -1) {\r\n                res += ans + 1;\r\n            }\r\n        }\r\n        cout << res << endl;\r\n    }\r\n    cerr << '\\n'<<\"Time (in s): \" << double(clock() - clk) * 1.0 / CLOCKS_PER_SEC << '\\n';\r\n} "
}