{
    "id": 214952387,
    "contestId": 818,
    "creationTimeSeconds": 1689966180,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 818,
        "index": "E",
        "name": "Card Game Again",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "number theory",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 818,
        "members": [
            {
                "handle": "To_be_or_Not_to_be_8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1498748700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 135,
    "timeConsumedMillis": 842,
    "memoryConsumedBytes": 2867200,
    "source": "#include \"bits/stdc++.h\"\r\nusing ll = long long  ;\r\n#define F first\r\n#define S second\r\nconst ll mod = 1e9 + 7 ;\r\nconst ll N = 1e5 + 5 ;\r\nusing namespace std;\r\nll n , k , a[N] , t = 1 ;\r\nstruct seg\r\n{\r\n    vector < ll > mul ;\r\n    int sizo = 1 ;\r\n    void inti(int n)\r\n    {\r\n        while(sizo < n)sizo *= 2 ;\r\n        mul.assign(2 * sizo , 1);\r\n    }\r\n    void build(int x , int lx , int rx)\r\n    {\r\n        if(rx - lx == 1)\r\n        {\r\n            if(lx >= n + 1)return ;\r\n            mul[x] = a[lx] ;\r\n            return ;\r\n        }\r\n        int mid = (lx  +  rx) >> 1 ;\r\n        build(2 * x + 1 , lx , mid )  ;\r\n        build(2 * x + 2 ,  mid , rx)  ;\r\n        mul[x] = mul[2 * x + 1] * mul[2 * x + 2] % k ;\r\n    }\r\n    void build()\r\n    {\r\n        build(0 ,  0 , sizo );\r\n        return ;\r\n    }\r\n\r\n     void set(int i , int v  , int x , int lx , int rx){\r\n       if(rx - lx == 1){\r\n          mul[x] = v ;\r\n          return;\r\n       }\r\n       int m =  (lx + rx)/2;\r\n       if(i < m){\r\n          set(i,v,2*x + 1,lx,m);\r\n       }\r\n       else{\r\n          set(i,v,2*x + 2,m,rx);\r\n       }\r\n       mul[x] = mul[2 * x + 1] * mul[2 * x + 2] % k ;\r\n     }\r\n\r\n     void set(int i , int v){\r\n        set(i , v , 0 , 0 , sizo) ;\r\n     }\r\n\r\n    int get(int x , int lx , int rx , int l , int r)\r\n    {\r\n       if(lx >= r || rx <= l)return 1 ;\r\n       if(l <= lx && rx <= r)return mul[x] % k ;\r\n\r\n       int mid = (lx + rx) / 2 ;\r\n\r\n       ll lefti = get(2 * x + 1 , lx , mid , l , r);\r\n       ll righti = get(2 * x + 2 , mid , rx , l , r) ;\r\n\r\n       return lefti * righti % k  ;\r\n    }\r\n\r\n    int get(int l , int r)\r\n    {\r\n        return get(0 , 0 , sizo, l , r) ;\r\n    }\r\n};\r\nseg segi ;\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false), cin.tie(nullptr);\r\n    //cin >> t ;\r\n    while(t--)\r\n    {\r\n        cin >> n >> k ;\r\n        for(int i = 1 ; i <= n ; ++i)cin >> a[i] ;\r\n\r\n        segi.inti(n + 1 );\r\n        segi.build() ;\r\n\r\n        ll ans = 0 ;\r\n        for(int i = 1 ; i <= n ; ++i)\r\n        {\r\n            int l = i - 1 , r = n + 1 ;\r\n            while(l + 1 < r)\r\n            {\r\n              int mid = (l + r) / 2 ;\r\n              if(segi.get(i , mid + 1) == 0)r = mid ;\r\n              else l = mid ;\r\n            }\r\n            ans += (n - r + 1) ;\r\n        }\r\n\r\n        cout << ans << \"\\n\";\r\n\r\n    }\r\n\r\n\r\n}\r\n"
}