{
    "contestId": 1747,
    "index": "C",
    "name": "Swap Game",
    "type": "PROGRAMMING",
    "points": 1250.0,
    "rating": 1200,
    "tags": [
        "games"
    ],
    "desc": {
        "title": "C. Swap Game",
        "statement": "<p>Alice and Bob are playing a game on an array $$$a$$$ of $$$n$$$ positive integers. Alice and Bob make alternating moves with Alice going first.</p><p>In his/her turn, the player makes the following move:</p><ul><li> If $$$a_1 = 0$$$, the player loses the game, otherwise:</li><li> Player chooses some $$$i$$$ with $$$2\\le i \\le n$$$. Then player decreases the value of $$$a_1$$$ by $$$1$$$ and swaps $$$a_1$$$ with $$$a_i$$$. </li></ul><p>Determine the winner of the game if both players play optimally.</p>",
        "inputSpecification": "<p>The input consists of multiple test cases. The first line contains a single integer $$$t$$$ $$$(1 \\leq t \\leq 2 \\cdot 10^4)$$$ \u00a0\u2014 the number of test cases. The description of the test cases follows.</p><p>The first line of each test case contains a single integer $$$n$$$ $$$(2 \\leq n \\leq 10^5)$$$ \u00a0\u2014 the length of the array $$$a$$$.</p><p>The second line of each test case contains $$$n$$$ integers $$$a_1,a_2 \\ldots a_n$$$ $$$(1 \\leq a_i \\leq 10^9)$$$ \u00a0\u2014 the elements of the array $$$a$$$.</p><p>It is guaranteed that sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.</p>",
        "outputSpecification": "<p>For each test case, if Alice will win the game, output \"<span class=\"tex-font-style-tt\">Alice</span>\". Otherwise, output \"<span class=\"tex-font-style-tt\">Bob</span>\".</p><p>You can output each letter in any case. For example, \"<span class=\"tex-font-style-tt\">alIcE</span>\", \"<span class=\"tex-font-style-tt\">Alice</span>\", \"<span class=\"tex-font-style-tt\">alice</span>\" will all be considered identical.</p>",
        "samples": [
            {
                "input": "<div class=\"test-example-line test-example-line-even test-example-line-0\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 4 4</div>",
                "output": "\nBob\nAlice\nAlice\n"
            }
        ],
        "note": "<p>In the <span class=\"tex-font-style-bf\">first testcase</span>, in her turn, Alice can only choose $$$i = 2$$$, making the array equal $$$[1, 0]$$$. Then Bob, in his turn, will also choose $$$i = 2$$$ and make the array equal $$$[0, 0]$$$. As $$$a_1 = 0$$$, Alice loses.</p><p>In the <span class=\"tex-font-style-bf\">second testcase</span>, once again, players can only choose $$$i = 2$$$. Then the array will change as follows: $$$[2, 1] \\to [1, 1] \\to [1, 0] \\to [0, 0]$$$, and Bob loses.</p><p>In the <span class=\"tex-font-style-bf\">third testcase</span>, we can show that Alice has a winning strategy.</p>"
    },
    "suggested_categories": [
        "array manipulation",
        "game theory",
        "optimal strategy",
        "turn-based game",
        "algorithmic problem",
        "dynamic programming",
        "conditional moves",
        "competitive programming",
        "multiplayer game",
        "recursive algorithm",
        "data structure manipulation",
        "integer manipulation",
        "decision making",
        "algorithm complexity",
        "big-o analysis",
        "looping control",
        "test case management",
        "optimization problem",
        "memory management",
        "performance analysis"
    ]
}