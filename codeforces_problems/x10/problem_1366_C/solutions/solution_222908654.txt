{
    "id": 222908654,
    "contestId": 1366,
    "creationTimeSeconds": 1694441259,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1366,
        "index": "C",
        "name": "Palindromic Paths",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1366,
        "members": [
            {
                "handle": "JML"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1591886100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n//#pragma GCC optimize (1)\r\n//#pragma GCC optimize (2)\r\n//#pragma GCC optimize (3)\r\n#define deg(a) cout<<#a<<'='<<a<<\"\\n\"\r\n#define de(a) cout<<#a<<'='<<a<<' '\r\n#define all(a) a.begin(),a.end()\r\n#define ff first\r\n#define ss second\r\n#define PII pair<int,int>\r\n#define int long long\r\n#define yes \"YES\\n\"\r\n#define no \"NO\\n\";\r\nusing LL = long long;\r\nconst int N = 1e6 + 10, INF = 0x3f3f3f3f;\r\nint dx[4] = { -1, 0, 1, 0}, dy[4] = {0, -1, 0, 1};\r\nusing namespace std;\r\nint n, m, a[40][40];\r\nint cnt = 0, one[1000], zero[1000];\r\nvoid solve(int T) {\r\n\tcin >> n >> m;\r\n\tfor (int x = 0; x < 1000; x++)one[x] = zero[x] = cnt = 0;\r\n\tfor (int x = 1; x <= n; x++)\r\n\t\tfor (int y = 1; y <= m; y++) {\r\n\t\t\tchar c; cin >> c;\r\n\t\t\ta[x][y] = c - '0';\r\n\t\t\tint d = min((x - 1) + (y - 1), (n - x) + (m - y));\r\n\t\t\tif (c == '1')one[d]++;\r\n\t\t\telse zero[d]++;\r\n\t\t}\r\n\r\n\tfor (int x = 0; x <= (n + m - 2 - 1) / 2; x++) {\r\n\t\tcnt += min(one[x], zero[x]);\r\n\t}\r\n\tcout << cnt << '\\n';\r\n}\r\nsigned main () {\r\n\tios::sync_with_stdio(0), cin.tie(0);\r\n\tint T = 1;\r\n\tcin >> T, cin.get();\r\n\twhile (T--) {\r\n\t\tsolve(T);\r\n\t}\r\n\treturn 0;\r\n}\r\n"
}