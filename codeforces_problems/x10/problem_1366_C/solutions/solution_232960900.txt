{
    "id": 232960900,
    "contestId": 1366,
    "creationTimeSeconds": 1700135628,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1366,
        "index": "C",
        "name": "Palindromic Paths",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1366,
        "members": [
            {
                "handle": "__Martian"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1591886100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#define all(con) con.begin(),con.end()\r\n#define allr(con) con.rbegin(),con.rend()\r\n#include <ext/pb_ds/assoc_container.hpp> // Common file\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\n \r\n#define ll int long long\r\n#define vt vector\r\n#define D double\r\n \r\nusing namespace std;\r\n \r\ntypedef tree<int, null_type, less<int>, rb_tree_tag,\r\n             tree_order_statistics_node_update>\r\n    ordered_set;\r\ntypedef tree<int, null_type, less_equal<int>, rb_tree_tag,\r\n             tree_order_statistics_node_update>\r\n    ordered_multiset;\r\n \r\n \r\nconst int M = 1e9+7;\r\nconst int N = 1e5+5;\r\n\r\nll exp(ll a,ll b){  ll res = 1;while(b){if(b&1) res = (res*a)%M;a = (a*a)%M;b /= 2ll;} return res; }\r\nll mul(ll a,ll b){a = a%M;b = b%M; return (a*b)%M; }\r\nbool isprime(ll n){if(n == 2 || n == 3 ) return true; if(n%2 == 0 || n%3 == 0) return false;\r\nfor(ll i=5; i*i<=n; i+=2){if(n % i == 0) return false;}return true;}\r\n//ll ncr(ll n,ll r){   return (fact[n]*(exp(fact[r],M-2)%M * exp(fact[n-r],M-2)%M)%M )%M;}\r\n\r\n\r\n\r\n\r\n\r\nvoid solve(){\r\n    \r\n     int n,m; cin>>n>>m;\r\n\r\n     int mat[n][m];\r\n\r\n     for(int i=0; i<n; i++){\r\n        for(int j=0; j<m; j++){\r\n            cin>>mat[i][j];\r\n        }\r\n     }\r\n\r\n     int ans = 0;\r\n\r\n     for(int i=0; i<=m/2; i++){\r\n        \r\n         int r = 0,c = i;\r\n\r\n         int cnt1= 0,cnt0 = 0;\r\n\r\n         while(r < n && c >= 0){\r\n              cnt1 += (mat[r][c] == 1);\r\n              cnt0 += (mat[r][c] == 0);\r\n              r++,c--;\r\n         }\r\n\r\n         r = n-1,c=m-i-1;\r\n\r\n         while(r >= 0 && c < m){\r\n              cnt1 += (mat[r][c] == 1);\r\n              cnt0 += (mat[r][c] == 0);\r\n              r--,c++;\r\n         }\r\n         \r\n        //  cout<<i<<endl;\r\n        //  cout<<cnt0<<\" \"<<cnt1<<endl;\r\n\r\n         ans+=min(cnt1,cnt0);\r\n\r\n     }\r\n\r\n     cout<<ans<<endl;\r\n \r\n}\r\n//**********************************************************************************************************************************************************\r\n \r\nint main(){\r\n    \r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n   \r\n    int t = 1; \r\n    cin>>t;\r\n    while(t--){  \r\n        solve();\r\n    }\r\n \r\n \r\n}"
}