{
    "id": 222906475,
    "contestId": 1549,
    "creationTimeSeconds": 1694440189,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1549,
        "index": "B",
        "name": "Gregor and the Pawn Game",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 800,
        "tags": [
            "dfs and similar",
            "dp",
            "flows",
            "graph matchings",
            "graphs",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1549,
        "members": [
            {
                "handle": "berserk14"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1627828500
    },
    "programmingLanguage": "Java 17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 19,
    "timeConsumedMillis": 373,
    "memoryConsumedBytes": 409600,
    "source": "import java.util.*;\r\npublic class GregorAndPawn {\r\n    public static void main(String[] args) {\r\n        /*Scanner sc = new Scanner(System.in);\r\n        int t = sc.nextInt();\r\n        for (int i = 0; i < t; i++) {\r\n            int len = sc.nextInt();\r\n            String enemy = sc.next();\r\n            String Gregor = sc.next();\r\n            int sum = 0;\r\n            StringBuilder s = new StringBuilder(enemy);\r\n            for (int j = 0; j < len; j++) {\r\n                if (Gregor.charAt(j) == '1') {\r\n                    if (j - 1 >= 0 && s.charAt(j - 1) == '1') {\r\n                        sum++;\r\n                        s.replace(j - 1, j, \"_\");\r\n                    } else if (j + 1 < s.length() && s.charAt(j + 1) == '1') {\r\n                        sum++;\r\n                        s.replace(j + 1, j + 2, \"_\");\r\n                    }else if (s.charAt(j) == '0') {\r\n                        sum++;\r\n                        s.replace(j, j + 1, \"0\");\r\n                    }\r\n                }\r\n            }\r\n            System.out.println(sum);*/\r\n        Scanner sc = new Scanner(System.in);\r\n\r\n        int t = sc.nextInt();\r\n        while (t-- > 0) {\r\n            int n = sc.nextInt();\r\n            String b = sc.next();\r\n            String w = sc.next();\r\n            char[] ch1=b.toCharArray();\r\n            char[] ch2=w.toCharArray();\r\n            int cnt = 0;\r\n\r\n            for (int p = 0; p < n; p++) {\r\n                if (ch2[p] == '0') {\r\n                    continue;\r\n                }\r\n\r\n                if (p > 0 && ch1[p - 1] == '1') {\r\n                    ch1[p - 1] = 'x';\r\n                    cnt++;\r\n                } else if (ch1[p] == '0') {\r\n                    ch1[p] = 'x';\r\n                    cnt++;\r\n                } else if (p + 1 < n && ch1[p + 1] == '1') {\r\n                    ch1[p + 1] = 'x';\r\n                    cnt++;\r\n                }\r\n            }\r\n\r\n            System.out.println(cnt);\r\n\r\n        }\r\n    }\r\n}\r\n\r\n"
}