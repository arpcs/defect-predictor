{
    "id": 184075082,
    "contestId": 1218,
    "creationTimeSeconds": 1670315358,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1218,
        "index": "B",
        "name": "Guarding warehouses",
        "type": "PROGRAMMING",
        "rating": 3000,
        "tags": [
            "data structures",
            "geometry"
        ]
    },
    "author": {
        "contestId": 1218,
        "members": [
            {
                "handle": "mianyang01"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1568554500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 2969600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef pair <int, int> V;\r\ntypedef long double db;\r\ntypedef pair <db, db> Vd;\r\n#define x first\r\n#define y second\r\n#define v(i) (i > 0 ? c[i][0] : c[-i][R[-i]])\r\nconst int N = 1e4 + 4;\r\nint n, s, e[N<<1], R[N], ti, tj; db t, ans; V v[N]; Vd I1, I2; vector <V> c[N], r[N];\r\nchar B[1<<20], * P = B;\r\nint read() { int s = 0, w = 1; while (! isdigit(* P)) * P ++ == '-' ? w = -w : 0; while (isdigit(* P)) s = s * 10 + * P ++ - '0'; return s * w; }\r\nV operator - (const V &a, const V &b) { return V (a. x - b. x, a. y - b. y); }\r\ndb operator * (const Vd &a, const Vd &b) { return a. x * b. y - a. y * b. x; }\r\nbool pre(const V &a, const V &b) { return a. x * b. y > a. y * b. x; }\r\nbool eql(const V &a, const V &b) { return a. x * b. y == a. y * b. x; }\r\nbool nxt(const V &a, const V &b) { return a. x * b. y < a. y * b. x; }\r\nbool nxtll(const V &a, const V &b) { return 1ll * a. x * b. y < 1ll * a. y * b. x; }\r\nstruct cmp { bool operator () (const int &i, const int &j) { return nxtll((! pre(c[i][0], c[j][0]) && ! nxt(c[i][0], c[j][R[j]]) ? c[i][0] : c[i][R[i]]) - c[j][0], c[j][R[j]] - c[j][0]); } } ; set <int, cmp> S;\r\nint main() {\r\n\tfread (B, 1, 1 << 20, stdin), n = read();\r\n\tfor (int i=1; i<=n; i++) {\r\n\t\ts = read();\r\n\t\tfor (int j=1; j<=s; j++) v[j]. x = read(), v[j]. y = read();\r\n\t\tint l = 1, r = 1;\r\n\t\tfor (int j=2; j<=s; j++) {\r\n\t\t\tif (pre(v[j], v[l])) l = j;\r\n\t\t\tif (nxt(v[j], v[r])) r = j;\r\n\t\t} c[i]. push_back(v[l]);\r\n\t\tfor (int j=l==1?s:l-1; j^l; j=j==1?s:j-1) {\r\n\t\t\tif (j == r) R[i] = c[i]. size();\r\n\t\t\tc[i]. push_back(v[j]);\r\n\t\t} e[(i<<1)-1] = -i, e[i<<1] = i;\r\n\t} sort (e+1, e+(n<<1|1), [] (const int &i, const int &j) {\r\n\t\tti = v(i). y > 0 || ! v(i). y && v(i). x < 0;\r\n\t\ttj = v(j). y > 0 || ! v(j). y && v(j). x < 0;\r\n\t\treturn ti ^ tj ? ti < tj : pre(v(i), v(j));\r\n\t}), e[0] = e[n<<1];\r\n\tfor (int i=1; i<=n; i++)\r\n\t\tif (! nxt(c[i][0], V (-1, 0)) && nxt(c[i][R[i]], V (-1, 0)))\r\n\t\t\tS. insert(i);\r\n\tfor (int i=1; i<=n<<1; i++) {\r\n\t\tif (! eql(v(e[i]), v(e[i-1]))) {\r\n\t\t\tint j = * S. begin();\r\n\t\t\tr[j]. push_back(v(e[i-1])), r[j]. push_back(v(e[i]));\r\n\t\t} if (e[i] > 0) S. insert(e[i]); else S. erase(-e[i]);\r\n\t}\r\n\tfor (int i=1; i<=n; i++) {\r\n\t\tsort (r[i]. begin(), r[i]. end(), [] (const V &a, const V &b) { return pre(a, b); });\r\n\t\tint p = 0, q = c[i]. size(); db s = 0;\r\n\t\tc[i]. push_back(c[i][0]);\r\n\t\tfor (int j=0, sz=r[i].size(); j<sz; j++) {\r\n\t\t\tif ((j & 1) && j < sz - 1 && eql(r[i][j], r[i][j+1])) { j ++; continue; }\r\n\t\t\tif (eql(r[i][j], c[i][R[i]])) { while (p < q) s += c[i][p] * c[i][p+1], p ++; ans += s; break; }\r\n\t\t\twhile (! nxt(c[i][p+1], r[i][j])) s += c[i][p] * c[i][p+1], p ++;\r\n\t\t\twhile (! nxt(c[i][q-1], r[i][j])) s += c[i][q-1] * c[i][q], q --;\r\n\t\t \tt = (c[i][p] * (c[i][p+1] - c[i][p])) / (r[i][j] * (c[i][p+1] - c[i][p]));\r\n\t\t \tI1 = Vd (r[i][j]. x * t, r[i][j]. y * t);\r\n\t\t \tt = (c[i][q-1] * (c[i][q] - c[i][q-1])) / (r[i][j] * (c[i][q] - c[i][q-1]));\r\n\t\t \tI2 = Vd (r[i][j]. x * t, r[i][j]. y * t);\r\n\t\t \tans += (j & 1 ? 1 : -1) * (s + c[i][p] * I1 + I1 * I2 + I2 * c[i][q]);\r\n\t\t }\r\n\t} printf (\"%.10Lf\\n\", ans / 2);\r\n}\r\n"
}