{
    "id": 158280728,
    "contestId": 1218,
    "creationTimeSeconds": 1653382727,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1218,
        "index": "B",
        "name": "Guarding warehouses",
        "type": "PROGRAMMING",
        "rating": 3000,
        "tags": [
            "data structures",
            "geometry"
        ]
    },
    "author": {
        "contestId": 1218,
        "members": [
            {
                "handle": "luogu_bot5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1568554500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 3891200,
    "source": "/*\r\nCriteria:\r\n1.read the problem carefully; WRITE DOWN SPECIAL CONSTRAINTS when the problem is long;\r\n2.consider special situations/constraints to get observations;\r\n3.think of everything throughout before coding;\r\n4.return to the initial list of notifications after coding.\r\n\r\nCONSTRAINTS:\r\n\r\nOBSERVATIONS:\r\n\r\nOTHER NOTIFICATIONS:\r\n\r\nTHINK CAREFULLY AND CODE DETERMINEDLY!\r\n*/\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nstruct Vector{\r\n\tint x,y;\r\n\tVector(){}\r\n\tVector(int X,int Y){x=X,y=Y;}\r\n\tfriend Vector operator+(const Vector&u,const Vector&v){return Vector(u.x+v.x,u.y+v.y);}\r\n\tfriend Vector operator-(const Vector&u,const Vector&v){return Vector(u.x-v.x,u.y-v.y);}\r\n\tfriend int operator&(const Vector&u,const Vector&v){return u.x*v.y-u.y*v.x;}//cross times\r\n\tfriend int operator|(const Vector&u,const Vector&v){return u.x*v.x+u.y*v.y;}//point times\r\n\tint quardrant()const{\r\n\t\tif(x>0&&y>=0)return 0;\r\n\t\tif(x<=0&&y>0)return 1;\r\n\t\tif(x<0&&y<=0)return 2;\r\n\t\tif(x>=0&&y<0)return 3;\r\n\t}\r\n\tfriend bool operator<(const Vector&u,const Vector&v){\r\n\t\tif(u.quardrant()!=v.quardrant())return u.quardrant()<v.quardrant();\r\n\t\treturn(u&v)>0;\r\n\t}\r\n\tfriend bool operator<<(const Vector&u,const Vector&v){return(u&v)>0;}\r\n\tfriend bool operator==(const Vector&u,const Vector&v){\r\n\t\tif(u.quardrant()!=v.quardrant())return false;\r\n\t\treturn(u&v)==0;\r\n\t}\r\n\tvoid read(){scanf(\"%d%d\",&x,&y);}\r\n\tvoid print(){printf(\"(%d,%d)\",x,y);}\r\n}p[50100],V;\r\nint n,m,X[50100],Y[50100],q,o[50100];\r\ndouble res;\r\ndouble dis(int i,Vector P){return 1.0*(p[X[i]]&p[Y[i]])/(P&(p[Y[i]]-p[X[i]]));}\r\ndouble area(int i,Vector P,Vector Q){return dis(i,P)*dis(i,Q)*(P&Q);}\r\nstruct segcmp{\r\nbool operator()(const int&u,const int&v)const{\r\n\tint Ux=p[X[u]]&p[Y[u]],Uy=V&(p[Y[u]]-p[X[u]]);\r\n\tint Vx=p[X[v]]&p[Y[v]],Vy=V&(p[Y[v]]-p[X[v]]);\r\n\tif(1ll*Ux*Vy!=1ll*Uy*Vx)return 1ll*Ux*Vy<1ll*Uy*Vx;\r\n\tif(V==p[X[u]]&&V==p[X[v]])return((p[Y[u]]-p[X[u]])&(p[Y[v]]-p[X[v]]))<0;\r\n\treturn((p[X[u]]-p[Y[u]])&(p[X[v]]-p[Y[v]]))>0;\r\n}\r\n};\r\nvector<int>v[50100];\r\nset<int,segcmp>s;\r\nint main(){\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=0,_;i<n;i++){\r\n\t\tscanf(\"%d\",&_);\r\n\t\tfor(int j=0;j<_;j++)p[m+j].read();\r\n\t\tfor(int j=0;j<_;j++){\r\n\t\t\tq++,X[q]=m+j,Y[q]=m+(j+1)%_;\r\n\t\t\tif(p[X[q]]==p[Y[q]])continue;\r\n\t\t\tif(p[Y[q]]<<p[X[q]])swap(X[q],Y[q]);\r\n\t\t\tv[X[q]].push_back(q),v[Y[q]].push_back(-q);\r\n\t\t}\r\n\t\tm+=_;\r\n\t}\r\n\t// for(int i=0;i<q;i++)putchar('{'),p[X[i]].print(),p[Y[i]].print(),putchar('}');puts(\"\");\r\n\tfor(int i=0;i<m;i++)o[i]=i;\r\n\tsort(o,o+m,[](int x,int y){return p[x]<p[y];});\r\n\tfor(int l=0,r=0;l<m;l=r){\r\n\t\twhile(r<m&&p[o[l]]==p[o[r]])r++;\r\n\t\tV=p[o[l]];\r\n\t\tfor(int i=l;i<r;i++)for(auto x:v[o[i]])if(x<0){auto it=s.find(-x);if(it!=s.end())s.erase(it);}\r\n\t\tfor(int i=l;i<r;i++)for(auto x:v[o[i]])if(x>0)s.insert(x);\r\n\t\t// V.print();for(auto i:s)putchar('{'),p[X[i]].print(),p[Y[i]].print(),printf(\":%lf}\",dis(i,V));puts(\"\");\r\n\t}\r\n\tfor(int l=0,r=0;l<m;l=r){\r\n\t\twhile(r<m&&p[o[l]]==p[o[r]])r++;\r\n\t\tV=p[o[l]];\r\n\t\tfor(int i=l;i<r;i++)for(auto x:v[o[i]])if(x<0){auto it=s.find(-x);if(it!=s.end())s.erase(it);}\r\n\t\tfor(int i=l;i<r;i++)for(auto x:v[o[i]])if(x>0)s.insert(x);\r\n\t\t// V.print();for(auto i:s)putchar('{'),p[X[i]].print(),p[Y[i]].print(),putchar('}');puts(\"\");\r\n\t\tif(!s.empty())res+=area(*next(s.begin()),p[o[l]],p[o[r%m]])-area(*s.begin(),p[o[l]],p[o[r%m]]);\r\n\t}\r\n\tprintf(\"%lf\\n\",res/2);\r\n\treturn 0;\r\n}"
}