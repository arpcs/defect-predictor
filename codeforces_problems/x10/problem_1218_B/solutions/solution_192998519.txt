{
    "id": 192998519,
    "contestId": 1218,
    "creationTimeSeconds": 1675984935,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1218,
        "index": "B",
        "name": "Guarding warehouses",
        "type": "PROGRAMMING",
        "rating": 3000,
        "tags": [
            "data structures",
            "geometry"
        ]
    },
    "author": {
        "contestId": 1218,
        "members": [
            {
                "handle": "Archaeopteryx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1568554500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 888,
    "memoryConsumedBytes": 12902400,
    "source": "#include<iostream>\r\n#include<iomanip>\n#include<algorithm>\n#include<utility>\n#include<set>\n#include<vector>\n#include<cmath>\nusing std::cin;\nusing std::cout;\nconst double eps=1e-12;\nstruct vec{\ndouble x,y;\nvec(double x=0,double y=0):x(x),y(y){}\nvec operator +(const vec &b)const{return vec(x+b.x,y+b.y);}\nvec operator -(const vec &b)const{return vec(x-b.x,y-b.y);}\nbool operator ==(const vec &b)const{return x==b.x&&y==b.y;}\ndouble operator *(const vec &b)const{return x*b.y-y*b.x;}\ninline double mod(){return std::hypot(x,y);}\ninline double dir(){return std::atan2(y,x);}\n}e;\nstruct seg{\nvec a,b;\nseg():a(),b(){}\nseg(vec a,vec b):a(a),b(b){}\ninline vec cross(vec e=::e)const{\nif(e.x==0) return vec(0,b.y-(b-a).y/(b-a).x*b.x);\nif(a==b) return a;\ndouble x=((b.y-a.y)*b.x-(b.x-a.x)*b.y)/(b.y-a.y-(b.x-a.x)*e.y/e.x);\nreturn vec(x,x*e.y/e.x);\n}\n}a[200010];\nstruct cmp{\nbool operator ()(const seg &a,const seg &b)const{\nreturn a.cross().mod()<b.cross().mod()||a.cross(e+eps).mod()<b.cross(e+eps).mod();\n}\n};\nstd::multiset<seg,cmp> st;\nstd::vector<std::pair<vec,int>> c;\nint n,tot;\nstd::multiset<seg,cmp>::iterator it[200010];\ndouble ans;\ninline double S(vec A,vec B,vec C){\nreturn std::abs((B-A)*(C-A)/2);\n}\nint T,M;\nint main(){\ncin>>M;\ne=vec(-1,0);\nwhile(M--){\nint k;\ncin>>k;\nstatic vec b[50010];\nfor(int i=1;i<=k;i++) cin>>b[i].x>>b[i].y;\nb[++k]=b[1];\nfor(int i=1;i<k;i++)if(std::abs(b[i]*b[i+1])>eps){\nvec x=b[i],z=b[i+1];\na[++n]=seg(x,z);\nvec y=a[n].cross();\nif(y.x<0&&x.y*z.y<0){\nif(x.dir()<z.dir()) std::swap(x,z);\na[n]=seg(x,y),c.emplace_back(x,n<<1),c.emplace_back(y,n<<1|1);\na[++n]=seg(y,z),c.emplace_back(y,n<<1),c.emplace_back(z,n<<1|1);\n}else{\nif(x.y==0) x.y+=z.y>0?eps:-eps;\nif(z.y==0) z.y+=x.y>0?eps:-eps;\nif(x.dir()>z.dir()) std::swap(x,z);\na[n]=seg(x,z),c.emplace_back(x,n<<1),c.emplace_back(z,n<<1|1);\n}\n}\n}\nsort(c.begin(),c.end(),[](std::pair<vec,int> a,std::pair<vec,int> b){\nreturn a.first.y==0?(a.second&1)^1:b.first.y==0?b.second&1:atan2(a.first.y,a.first.x)<atan2(b.first.y,b.first.x);\n});\nvec A,B,C,D;\nfor(auto u:c){\nauto fir=u.first;\nauto sec=u.second;\nif(st.size()>=2){\nA=(*st.begin()).cross(),B=(*++st.begin()).cross();\ne=fir;\nC=(*st.begin()).cross(),D=(*++st.begin()).cross();\nans+=S(A,B,C)+S(B,C,D);\n}else e=fir;\nint x=sec>>1;\nif((sec&1)^1) it[x]=st.insert(a[x]);\nelse st.erase(it[x]);\n}\ncout<<std::fixed<<std::setprecision(12)<<ans<<'\\n';\nreturn 0;\n}"
}