{
    "id": 217558539,
    "contestId": 1641,
    "creationTimeSeconds": 1691394923,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1641,
        "index": "C",
        "name": "Anonymity Is Important",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2200,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "dsu",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1641,
        "members": [
            {
                "handle": "chxulong"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1645611000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 59,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 8192000,
    "source": "// Hydro submission #64d0a368bc2ac0802fda0922@1691394920788\n#include<iostream>\r\n#include<set>\r\nusing namespace std;\r\nconst int N=2e5+10;\r\n#if 1\r\n#define _ N\r\n#define __ _,_\r\n#define ___ __,__\r\n#define ____ ___,___\r\n#define _____ ____,____\r\n#define ______ _____,_____\r\n#define _______ ______,______\r\n#define ________ _______,_______\r\n#define _________ ________,________\r\n#endif\r\nint n,q,res[(_________)],mx[(_________)];\r\nset<int> st;\r\nint op,l,r,x,tmp;\r\nint main(){\r\n    scanf(\"%d%d\",&n,&q);\r\n    for(int i=1;i<=n+1;i++){\r\n        res[i]=-1,mx[i]=1145141919;\r\n        st.insert(i);\r\n    }\r\n    for(int i=1;i<=q;i++){\r\n        scanf(\"%d\",&op);\r\n        if(op){\r\n            scanf(\"%d\",&x);\r\n            puts(res[x]?((~res[x])?\"YES\":\"N/A\"):\"NO\");\r\n            continue;\r\n        }\r\n        scanf(\"%d%d%d\",&l,&r,&x);\r\n        if(x==1){\r\n            tmp=*st.lower_bound(l);\r\n            mx[tmp]=min(mx[tmp],r);\r\n            if(mx[tmp]<*st.upper_bound(tmp))res[tmp]=1;\r\n            continue;\r\n        }\r\n        tmp=*st.upper_bound(r);\r\n        for(auto ptr=st.lower_bound(l);*ptr<=r;ptr=st.lower_bound(l)){\r\n            if(tmp!=n+1)mx[tmp]=min(mx[tmp],mx[*ptr]);\r\n            res[*ptr]=0;\r\n            st.erase(ptr);\r\n        }\r\n        if(tmp!=n+1 and mx[tmp]<*st.upper_bound(tmp)){\r\n            res[tmp]=1;\r\n        }\r\n        if(*st.begin()<l){\r\n            tmp=*prev(st.lower_bound(l));\r\n            if(mx[tmp]<*st.upper_bound(tmp)){\r\n                res[tmp]=1;\r\n            }\r\n        }\r\n    }\r\n}"
}