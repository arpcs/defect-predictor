{
    "id": 225849122,
    "contestId": 29,
    "creationTimeSeconds": 1696047146,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 29,
        "index": "D",
        "name": "Ant on the Tree",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "trees"
        ]
    },
    "author": {
        "contestId": 29,
        "members": [
            {
                "handle": "Anand-Bharti"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1284994800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 5120000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define pb push_back\r\n#define int long long\r\n#define lld long double\r\n#define fi first\r\n#define se second\r\n#define vi vector<int>\r\n#define vb vector<bool>\r\n#define vs vector<string>\r\n#define vvi vector<vector<int>>\r\n#define vpii vector<pair<int,int>>\r\n#define mii map<int,int>\r\n#define mci map<char,int>\r\n#define umci unordered_map<char,int>\r\n#define umii unordered_map<int,int>\r\n#define pii pair<int,int>\r\n#define si set<int>\r\n#define sc set<char>\r\n#define pqmax priority_queue<int>\r\n#define pqmin priority_queue <int, vector<int>, greater<int>> \r\n#define sqrt sqrtl\r\n#define yes cout<<\"YES\"<<endl\r\n#define no cout<<\"NO\"<<endl\r\n#define notpos cout<<-1<<endl\r\n#define setbits(a) __builtin_popcountll(a) \r\n#define ctz(a) __builtin_ctzll(a)\r\n#define clz(a) __builtin_clzll(a)\r\n#define f(n) for (int i = 0; i < n; i++)\r\n#define fj(n) for (int j = 0; j < n; j++)\r\n#define f1(n) for (int i = 1; i <= n; i++)\r\n#define newl cout << \"\\n\"\r\n#define in(x) insert(x)\r\n#define rev(v) reverse(v.begin(), v.end())\r\n#define vin(v,n) int n; cin>>n; vector<int> v(n); for(int i=0;i<n;i++) cin>>v[i];\r\n#define out(v) for(auto x: v) cout<<x<<\" \"; cout<<\"\\n\";\r\n#define test int t; cin>>t; while(t--)\r\n#define sz(a) (int)a.size()\r\n#define sortf(a) sort(a.begin(),a.end())\r\n#define sortr(a) sort(a.rbegin(),a.rend())\r\n#define unq(v) sortf(v); v.resize(distance(v.begin(), unique(all(v))));\r\n#define unq1(v) v.resize(distance(v.begin(), unique(all(v))));\r\n#define all(a) a.begin(),a.end()\r\n#define gsum(a) accumulate(a.begin(),a.end(),0LL)\r\n#define gmax(a) *max_element(a.begin(),a.end())\r\n#define gmin(a) *min_element(a.begin(),a.end())\r\n#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)\r\n#define d1(x) cout<<#x<<\" \"<<x<<endl;\r\n#define d2(x,y) cout<<#x<<\" \"<<x<<\" \"<<#y<<\" \"<<y<<endl;\r\n#define d3(x,y,z) cout<<#x<<\" \"<<x<<\" \"<<#y<<\" \"<<y<<\" \"<<#z<<\" \"<<z<<endl;\r\n\r\nconst int mod = 1000000007;\r\n// const int mod = 998244353;\r\nconst int inf = LLONG_MAX;\r\nconst lld eps = 1e-7;\r\n\r\nconst int N=200005;\r\nint fact[N+1];\r\nint inv[N+1];\r\nint spf[N+1];\r\nbool isprime[N+1];\r\n\r\nint bepower(int x,int n){int res=1;while(n){if(n%2==1){res*=x;res%=mod;}n/=2;x*=x;x%=mod;}return res;}\r\nint bepowermod(int x,int n){ if(n==0)return 1;int res=1;while( n > 0){if(n%2==1){res = (res*x)%mod;}x=(x*x)%mod;n/=2;}return res;}\r\nint ncr(int n,int r){return (((fact[n]*inv[n-r])%mod)*inv[r])%mod;}\r\nint gcd(int a, int b){if (a % b == 0)return b;return gcd(b, a % b);}\r\nint lcm(int a,int b){return (a/(__gcd(a,b)))*b;}\r\n\r\nvoid sieve(){spf[0] = 1;spf[1] = 1;for(int i=2;i<N;i++) spf[i] = i;for(int i=2;i*i<N;i++){if(spf[i] == i){for(int j=i*i;j<N;j+=i){spf[j] = i;}}}}\r\nvoid precompute(){fact[0]=1;inv[0]=1;for(int i=1;i<=N;i++){fact[i] = fact[i-1]*i; fact[i]%=mod;inv[i]=bepower(fact[i],mod-2);}}\r\nvoid calallprime(){for (int i = 0; i <= N;i++)isprime[i] = true;isprime[1] = false;for (int i = 2; i < N + 1; i++){if (isprime[i]){for (int j = i * i; j < N + 1; j += i)isprime[j] = false;}}}\r\n\r\nint n;\r\nvvi adj;\r\nvi leaf;\r\nvi pr;\r\n\r\nvoid dfs(int node,int par){\r\n  for(auto&x:adj[node]){\r\n    if(x!=par){\r\n      pr[x] = node;\r\n      dfs(x, node);\r\n    }\r\n  }\r\n} \r\n\r\nvoid solve()\r\n{\r\n  cin >> n;\r\n  adj.resize(n + 1);\r\n  pr.resize(n + 1);\r\n  int cnt = 0;\r\n  f(n-1){\r\n    int u, v;\r\n    cin >> u >> v;\r\n    adj[u].pb(v);\r\n    adj[v].pb(u);\r\n  }\r\n  f1(n){\r\n    if(sz(adj[i])==1 && i!=1){\r\n      cnt++;\r\n    }\r\n  }\r\n  f(cnt){\r\n    int x;\r\n    cin >> x;\r\n    leaf.pb(x);\r\n  }\r\n  pr[1] = -1;\r\n  dfs(1,-1);\r\n  vvi paths;\r\n  f(cnt){\r\n    vi temp;\r\n    int node = leaf[i];\r\n    while(pr[node]!=-1){\r\n      temp.pb(node);\r\n      node = pr[node];\r\n    }\r\n    temp.pb(1);\r\n    paths.pb(temp);\r\n  }\r\n  vi ans;\r\n  vi v = paths[0];\r\n  rev(v);\r\n  f(sz(v)-1){\r\n    ans.pb(v[i]);\r\n  }\r\n  if(cnt==1){\r\n    f(sz(paths[0])){\r\n      ans.pb(paths[0][i]);\r\n    }\r\n    out(ans);\r\n    return;\r\n  }\r\n  for (int i = 0; i < cnt - 1;i++)\r\n  {\r\n    vi v1 = paths[i];\r\n    vi v2 = paths[i+1];\r\n    int cmn = -1;\r\n    fj(sz(v1)){\r\n      for (int k = 0; k < sz(v2);k++)\r\n      {\r\n        if(v1[j]==v2[k]){\r\n          cmn = v1[j];\r\n          break;\r\n        }\r\n      }\r\n      if(cmn!=-1)\r\n        break;\r\n    }\r\n    fj(sz(v1)){\r\n      if(v1[j]!=cmn){\r\n        ans.pb(v1[j]);\r\n      }\r\n      else\r\n        break;\r\n    }\r\n    if(cmn!=-1)\r\n      ans.pb(cmn);\r\n    fj(sz(v2)){\r\n      if(v2[j]!=cmn){\r\n        ans.pb(v2[j]);\r\n      }\r\n      else\r\n        break;\r\n    }\r\n  }\r\n  unq1(ans);\r\n  ans.pb(1);\r\n  if(sz(ans)!=(2*n-1)){\r\n    notpos;\r\n    return;\r\n  }\r\n  out(ans);\r\n\r\n}\r\n\r\nint32_t main()    \r\n{\r\n   fastio;\r\n   // precompute();\r\n   // sieve();\r\n   // calallprime();\r\n  //  test{\r\n       solve();\r\n  //  }\r\n    return 0;\r\n}\r\n"
}