{
    "id": 217183557,
    "contestId": 29,
    "creationTimeSeconds": 1691195675,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 29,
        "index": "D",
        "name": "Ant on the Tree",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "trees"
        ]
    },
    "author": {
        "contestId": 29,
        "members": [
            {
                "handle": "wang_peifeng"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1284994800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 466,
    "memoryConsumedBytes": 268390400,
    "source": "#include<bits/stdc++.h>\r\nconst int maxn=310;\r\nusing namespace std;\r\nstruct node {\r\n\tint nxt,to;\r\n}edge[maxn*2];\r\nint son[maxn],k,n,ans[maxn*3];\r\nint cnt,head[maxn],tot;\r\nvoid add(int u,int v) {\r\n\tedge[++cnt]=node{head[u],v};\r\n\thead[u]=cnt;\r\n}\r\nbool dfs(int u,int v,int fa) {\r\n\tif(u==v) return 1;\r\n\tfor(int i=head[u];i;i=edge[i].nxt) {\r\n\t\tint o=edge[i].to;\r\n\t\tif(o==fa) continue;\r\n\t\tif(dfs(o,v,u)) {\r\n\t\t\tans[++tot]=o;\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\nint main() {\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=1;i<n;i++) {\r\n\t\tint u,v;\r\n\t\tscanf(\"%d%d\",&u,&v);\r\n\t\tadd(u,v),add(v,u);\r\n\t\tson[u]++;\r\n\t}\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tif(!son[i]) k++;\r\n\tint u=1,v;\r\n\tfor(int i=1;i<=k;i++) {\r\n\t\tscanf(\"%d\",&v);\r\n\t\tdfs(v,u,0);\r\n\t\tu=v;\r\n\t}\r\n\tdfs(1,u,0);\r\n\tans[++tot]=1;\r\n\tif((tot==0)||(tot!=(n*2-1))) {\r\n\t\tprintf(\"-1\\n\");\r\n\t\treturn 0;\r\n\t}\r\n\tfor(int i=1;i<=tot;i++)\r\n\t\tprintf(\"%d \",ans[i]);\r\n\treturn 0;\r\n}"
}