{
    "contestId": 985,
    "index": "D",
    "name": "Sand Fortress",
    "type": "PROGRAMMING",
    "rating": 2100,
    "tags": [
        "binary search",
        "constructive algorithms",
        "math"
    ],
    "desc": {
        "title": "D. Sand Fortress",
        "statement": "<p>You are going to the beach with the idea to build the greatest sand castle ever in your head! The beach is not as three-dimensional as you could have imagined, it can be decribed as a line of spots to pile up sand pillars. Spots are numbered <span class=\"tex-span\">1</span> through infinity from left to right. </p><p>Obviously, there is not enough sand on the beach, so you brought <span class=\"tex-span\"><i>n</i></span> packs of sand with you. Let height <span class=\"tex-span\"><i>h</i><sub class=\"lower-index\"><i>i</i></sub></span> of the sand pillar on some spot <span class=\"tex-span\"><i>i</i></span> be the number of sand packs you spent on it. <span class=\"tex-font-style-bf\">You can't split a sand pack to multiple pillars, all the sand from it should go to a single one.</span> There is a fence of height equal to the height of pillar with <span class=\"tex-span\"><i>H</i></span> sand packs to the left of the first spot and you should prevent sand from going over it. </p><p>Finally you ended up with the following conditions to building the castle:</p><ul> <li> <span class=\"tex-span\"><i>h</i><sub class=\"lower-index\">1</sub>\u2009\u2264\u2009<i>H</i></span>: no sand from the leftmost spot should go over the fence; </li><li> For any <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/759a40f66b7756c8c552aa9eba265b46676afca5.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> <span class=\"tex-span\">|<i>h</i><sub class=\"lower-index\"><i>i</i></sub>\u2009-\u2009<i>h</i><sub class=\"lower-index\"><i>i</i>\u2009+\u20091</sub>|\u2009\u2264\u20091</span>: large difference in heights of two neighboring pillars can lead sand to fall down from the higher one to the lower, you really don't want this to happen; </li><li> <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/72efe19561bd30eb9a2d4d6f86449bcbb93f464b.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>: you want to spend all the sand you brought with you. </li></ul><p>As you have infinite spots to build, it is always possible to come up with some valid castle structure. Though you want the castle to be as compact as possible. </p><p>Your task is to calculate the minimum number of spots you can occupy so that all the aforementioned conditions hold.</p>",
        "inputSpecification": "<p>The only line contains two integer numbers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>H</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>,\u2009<i>H</i>\u2009\u2264\u200910<sup class=\"upper-index\">18</sup></span>) \u2014 the number of sand packs you have and the height of the fence, respectively.</p>",
        "outputSpecification": "<p>Print the minimum number of spots you can occupy so the all the castle building conditions hold.</p>",
        "samples": [
            {
                "input": "5 2<br/>",
                "output": "3<br/>"
            },
            {
                "input": "6 8<br/>",
                "output": "3<br/>"
            }
        ],
        "note": "<p>Here are the heights of some valid castles: </p><ul> <li> <span class=\"tex-span\"><i>n</i>\u2009=\u20095,\u2009<i>H</i>\u2009=\u20092,\u2009[2,\u20092,\u20091,\u20090,\u2009...],\u2009[2,\u20091,\u20091,\u20091,\u20090,\u2009...],\u2009[1,\u20090,\u20091,\u20092,\u20091,\u20090,\u2009...]</span> </li><li> <span class=\"tex-span\"><i>n</i>\u2009=\u20096,\u2009<i>H</i>\u2009=\u20098,\u2009[3,\u20092,\u20091,\u20090,\u2009...],\u2009[2,\u20092,\u20091,\u20091,\u20090,\u2009...],\u2009[0,\u20091,\u20090,\u20091,\u20092,\u20091,\u20091,\u20090...]</span> (this one has <span class=\"tex-span\">5</span> spots occupied) </li></ul><p>The first list for both cases is the optimal answer, <span class=\"tex-span\">3</span> spots are occupied in them.</p><p>And here are some invalid ones:</p><ul> <li> <span class=\"tex-span\"><i>n</i>\u2009=\u20095,\u2009<i>H</i>\u2009=\u20092,\u2009[3,\u20092,\u20090,\u2009...],\u2009[2,\u20093,\u20090,\u2009...],\u2009[1,\u20090,\u20092,\u20092,\u2009...]</span> </li><li> <span class=\"tex-span\"><i>n</i>\u2009=\u20096,\u2009<i>H</i>\u2009=\u20098,\u2009[2,\u20092,\u20092,\u20090,\u2009...],\u2009[6,\u20090,\u2009...],\u2009[1,\u20094,\u20091,\u20090...],\u2009[2,\u20092,\u20091,\u20090,\u2009...]</span> </li></ul>"
    },
    "suggested_categories": [
        "algorithm",
        "dynamic-programming",
        "mathematics",
        "optimization",
        "combinatorics",
        "search",
        "greedy",
        "geometry",
        "data-structures",
        "logic",
        "constraints",
        "probabilities",
        "game-theory",
        "puzzles",
        "simulation",
        "graphs",
        "computation",
        "creative-thinking",
        "problem-solving",
        "coding"
    ]
}