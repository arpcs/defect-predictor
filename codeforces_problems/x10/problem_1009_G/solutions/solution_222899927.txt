{
    "id": 222899927,
    "contestId": 1009,
    "creationTimeSeconds": 1694437090,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1009,
        "index": "G",
        "name": "Allowed Letters",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "bitmasks",
            "flows",
            "graph matchings",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1009,
        "members": [
            {
                "handle": "zbceyond"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1531578900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 57,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 35840000,
    "source": "#include<bits/stdc++.h>\r\n\r\n#define rep(i, x, y) for(int i=x;i<=y;i++)\r\n#define per(i, x, y) for(int i=x;i>=y;i--)\r\nusing namespace std;\r\n\r\n#define dbg(x...) \\\r\n    do { \\\r\n        std::cout << #x << \" -> \"; \\\r\n        err(x); \\\r\n    } while (0)\r\n\r\nvoid err() {\r\n    std::cout << std::endl;\r\n}\r\n\r\ntemplate<class T, class... Ts>\r\nvoid err(T arg, Ts &... args) {\r\n    std::cout << arg << ' ';\r\n    err(args...);\r\n}\r\n\r\n//#define int long long\r\n\r\nconst int mod = 998244353;\r\n\r\nint qmi(int a, int b) {\r\n    int res = 1;\r\n    for (; b; b >>= 1, a = a * a % mod) {\r\n        if (b & 1)res = res * a % mod;\r\n    }\r\n    return res;\r\n}\r\n\r\nconst int N = 1e5 + 10;\r\nconst int M = (1ll << 6) - 1;\r\nstring s;\r\nvector<int> e[N];\r\nint cov[N], sz[N], link[N][M + 5], n, m;\r\n\r\nbool check(int pos) {\r\n    rep(i, 0, M) {\r\n        int res = 0;\r\n        rep(j, 0, 5)if (i >> j & 1)res += sz[j];\r\n        if (link[pos][i] < res)return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nvoid elysira() {\r\n    cin >> s >> m;\r\n    n = s.size();\r\n    for (auto ch: s)sz[ch - 'a']++;\r\n    rep(i, 1, m) {\r\n        int x;\r\n        string t;\r\n        cin >> x >> t;\r\n        for (auto ch: t) {\r\n            cov[x] |= (1ll << (ch - 'a'));\r\n            e[x].push_back(ch - 'a');\r\n        }\r\n    }\r\n    rep(i, 1, n) {\r\n        if (!cov[i]) {\r\n            cov[i] = M;\r\n            rep(j, 0, 5)e[i].push_back(j);\r\n        }\r\n    }\r\n    per(i, n, 1) {\r\n        rep(j, 0, M)link[i][j] = link[i + 1][j];\r\n        rep(j, 0, M)if (j & cov[i])link[i][j]++;\r\n    }\r\n    string ans;\r\n    rep(i, 1, n) {\r\n        sort(e[i].begin(), e[i].end());\r\n        for (auto x: e[i]) {\r\n            if (!sz[x])continue;\r\n            sz[x]--;\r\n            if (check(i + 1)) {\r\n                ans.push_back('a' + x);\r\n                break;\r\n            }\r\n            sz[x]++;\r\n        }\r\n    }\r\n    cout << (ans.size() < n ? \"Impossible\" : ans) << \"\\n\";\r\n}\r\n\r\nsigned main() {\r\n    cin.tie(nullptr)->sync_with_stdio(false);\r\n    int tc = 1;\r\n    //cin >> tc;\r\n    for (int i = 1; i <= tc; i++) {\r\n        elysira();\r\n    }\r\n}\r\n/*\r\n\r\n*/"
}