{
    "id": 229618347,
    "contestId": 1476,
    "creationTimeSeconds": 1698177864,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1476,
        "index": "E",
        "name": "Pattern Matching",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "bitmasks",
            "data structures",
            "dfs and similar",
            "graphs",
            "hashing",
            "sortings",
            "strings"
        ]
    },
    "author": {
        "contestId": 1476,
        "members": [
            {
                "handle": "procodgok"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1611930900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 2048000,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <queue>\r\n#include <map>\r\n#define ll long long \r\nusing namespace std;\r\n\r\nvector <ll> v[100005];\r\nvector <ll> vis(100005,0);\r\nbool cyc=false;\r\n\r\nvoid dfs(ll node)\r\n{\r\n   vis[node]=1;\r\n   for(auto z:v[node])\r\n   {\r\n      if(vis[z]==0) dfs(z);\r\n\t  else if(vis[z]==1)\r\n\t  {\r\n\t     cyc=true;\r\n\t  }\r\n   }\r\n   vis[node]=2;\r\n}\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    ll n,m,k;cin>>n>>m>>k;\r\n    vector <string> pattern(n+1);\r\n    map    <string,ll> pos;\r\n    for(ll i=1;i<=n;i++) \r\n    {\r\n        cin>>pattern[i];\r\n        pos[pattern[i]]=i;\r\n    }\r\n    vector <string>  s(n);\r\n    vector <ll>      p(n);\r\n    bool poss=true;\r\n    for(ll i=0;i<n;i++)\r\n    {\r\n        cin>>s[i]>>p[i];\r\n        for(ll j=0;j<k;j++)\r\n        {\r\n            if(s[i][j]!=pattern[p[i]][j] && pattern[p[i]][j]!='_') {poss=false;break;}\r\n        }\r\n    }\r\n    if(poss)\r\n    {\r\n       for(ll i=0;i<n;i++)\r\n       {\r\n          for(ll j=0;j<(1<<k);j++)\r\n          {\r\n               string cmp=\"\";\r\n               for(ll ind = 0;ind < k;ind++)\r\n               {\r\n                   if(j & (1<<ind)) cmp+=s[i][ind];\r\n                   else             cmp+='_';\r\n               }\r\n               ll ps = pos[cmp];\r\n               if(ps>0 && ps!=p[i]) v[p[i]].push_back(ps);\r\n          }\r\n       } \r\n       for(ll i=1;i<=m;i++)\r\n       {\r\n          if(vis[i]==0) dfs(i);\r\n       }\r\n       if(!cyc)\r\n       {\r\n            cout<<\"YES\\n\";\r\n            queue <ll> q;\r\n            vector <ll> ine(n+1,0);\r\n            for(ll i=1;i<=n;i++)\r\n            {\r\n                 for(auto z:v[i]) ine[z]++;\r\n            }\r\n            for(ll i=1;i<=n;i++)\r\n            {\r\n                if(ine[i]==0) q.push(i);\r\n            }\r\n            while(!q.empty())\r\n            {\r\n                ll node=q.front();q.pop();\r\n                cout<<node<<' ';\r\n                for(auto z:v[node])\r\n                {\r\n                     if(ine[z]>0)\r\n                     {\r\n                         ine[z]--;\r\n                         if(ine[z]==0) q.push(z);\r\n                     }\r\n                }\r\n            }\r\n       }\r\n       else cout<<\"NO\\n\";\r\n    }\r\n    if(!poss) cout<<\"NO\";\r\n}"
}