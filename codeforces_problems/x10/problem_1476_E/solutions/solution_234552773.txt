{
    "id": 234552773,
    "contestId": 1476,
    "creationTimeSeconds": 1701071351,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1476,
        "index": "E",
        "name": "Pattern Matching",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "bitmasks",
            "data structures",
            "dfs and similar",
            "graphs",
            "hashing",
            "sortings",
            "strings"
        ]
    },
    "author": {
        "contestId": 1476,
        "members": [
            {
                "handle": "boyliguanhan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1611930900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 69734400,
    "source": "// LUOGU_RID: 137138794\n#include<bits/stdc++.h>\n#define N 200100\n#define FAIL cout << \"NO\",exit(0);\nusing namespace std;\nvector<int> adj[N];\nint vis[N], store[16][5*N];\nvoid dfs(int n) {\n    if(vis[n]==2)\n        return;\n    if(vis[n]==1)\n        FAIL\n    vis[n]=1;\n    for(auto i: adj[n]) {\n        dfs(i);\n    }\n    vis[n]=2;\n}\nint main() {\n    cin.sync_with_stdio(false);\n    cin.tie(nullptr);\n    int n, m, k;\n    cin >> n >> m >> k;\n    for(int i = 1; i <= n; i++) {\n        int w=0,h=0;\n        string str;\n        cin >> str;\n        for(int j = 0; j < k; j++) {\n            w*=2;\n            if(str[j]=='_')\n                w++;\n            else\n                h=h*26+str[j]-'a';\n        }\n        store[w][h]=i;\n    }\n    while(m--) {\n        int ok = 0, mt;\n        string str;\n        cin >> str >> mt;\n        for(int i = 0; i < 16; i++) {\n            int hsh = 0;\n            for(int j = 0; j < k; j++)\n                if(!((1<<k-j-1)&i))\n                    hsh=hsh*26+str[j]-'a';\n            if(store[i][hsh])\n                if(mt-store[i][hsh])\n                    adj[mt].push_back(store[i][hsh]);\n                else ok = 1;\n        }\n        if(!ok)\n            FAIL\n    }\n    for(int i = 0; i < n; i++)\n        if(!vis[i])\n            dfs(i);\n    cout << \"YES\";\n}"
}