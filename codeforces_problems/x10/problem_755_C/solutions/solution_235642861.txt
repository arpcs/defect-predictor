{
    "id": 235642861,
    "contestId": 755,
    "creationTimeSeconds": 1701649989,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 755,
        "index": "C",
        "name": "PolandBall and Forest",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1300,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "interactive",
            "trees"
        ]
    },
    "author": {
        "contestId": 755,
        "members": [
            {
                "handle": "alan-c"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1484499900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 29,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n\n  int n; cin >> n;\n  vector<int> p(n);\n  for (int& e : p) {\n    cin >> e;\n    e--;\n  }\n\n  int fixpt = 0, invo = 0;\n  for (int i = 0; i < n; i++) {\n    if (p[i] == i) fixpt++;\n    else if (p[p[i]] == i) {\n      invo++;\n    }\n  }\n  cout << fixpt + invo / 2 << '\\n';\n}\n"
}