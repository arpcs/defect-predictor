{
    "id": 219243737,
    "contestId": 755,
    "creationTimeSeconds": 1692278064,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 755,
        "index": "C",
        "name": "PolandBall and Forest",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1300,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "interactive",
            "trees"
        ]
    },
    "author": {
        "contestId": 755,
        "members": [
            {
                "handle": "Optimator"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1484499900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nconst int maxn = 100007;\nint par[maxn];\nint A[maxn];\nset<int> mx;\nvector<int> vv;\nint Find(int n) { return par[n] == n ? n : par[n] = Find(par[n]); }\nint main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  cout.tie(0);\n  int n;\n  cin >> n;\n  for (int i = 0; i <= n; i++)\n    par[i] = i;\n  for (int i = 1; i <= n; i++) {\n    cin >> A[i];\n    vv.push_back(A[i]);\n    int x = Find(i);\n    int y = Find(A[i]);\n    par[x] = y;\n  }\n  for (int i = 0; i < mv.size(); i++) {\n    mx.insert(par[vv[i]]);\n  }\n  cout << mx.size();\n  return 0;\n}\n\n// fioIRwiMFYSkcXIIgZakhrreZclHfcivOpURKmOMZpssTiozyQzLqiuymncLplEjwFVnDqZfqyrZHrNdeqzMGpyLxwQlXxtoiWlNUNkzAdlybQbsJZswdnrmUxgCzxeT"
}