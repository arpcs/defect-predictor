{
    "id": 225833294,
    "contestId": 755,
    "creationTimeSeconds": 1696025018,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 755,
        "index": "C",
        "name": "PolandBall and Forest",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1300,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "interactive",
            "trees"
        ]
    },
    "author": {
        "contestId": 755,
        "members": [
            {
                "handle": "tyoueenn"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1484499900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint trees = 0;\r\n\r\nvoid dfs(vector<int>& tree, vector<bool>& visited, int node) {\r\n    if (visited[node]) return;\r\n\r\n    visited[node] = true;\r\n\r\n    if (!visited[tree[node]]) {\r\n        trees++;\r\n        dfs(tree, visited, tree[node]);\r\n    }\r\n}\r\n\r\nint main(void) {\r\n    int n;\r\n    cin >> n;\r\n    vector<int> tree(n + 1);\r\n    vector<bool> visited(n + 1, false);\r\n\r\n    for(int i = 1; i <= n; i++) {\r\n        cin >> tree[i];\r\n    }\r\n\r\n    for(int i = 1; i <= n; i++) {\r\n        if (!visited[i]) {\r\n            dfs(tree, visited, i);\r\n            \r\n        }\r\n    }\r\n    if (trees == 0) {\r\n        cout << 1 << endl;\r\n    }\r\n    else {\r\n        cout << trees << endl;\r\n    }\r\n}\r\n"
}