{
    "id": 218890604,
    "contestId": 755,
    "creationTimeSeconds": 1692086054,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 755,
        "index": "C",
        "name": "PolandBall and Forest",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1300,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "interactive",
            "trees"
        ]
    },
    "author": {
        "contestId": 755,
        "members": [
            {
                "handle": "titankrcp"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1484499900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 716800,
    "source": "# include <iostream>\r\n# include <stdio.h>\r\n# include <math.h>\r\n# include <string.h>\r\n# include <limits.h>\r\n# include <ctype.h> \r\n# include <algorithm>\r\n# include <vector>\r\n# include <set>\r\n# define ll long long\r\n# define ull unsigned long long\r\n# include <cstdlib>\r\n# include <string>\r\n# include <map>\r\n# include <queue>\r\n# include <numeric>\r\n# include <time.h>\r\n# include <stack>\r\n# include <bitset>\r\n# include <cstdio>\r\n# include <iomanip>\r\n\r\nusing namespace std;\r\nll findp(ll vertex, vector<ll>& parent){\r\n    if(vertex==parent[vertex]){\r\n        return vertex;\r\n    }\r\n    return parent[vertex] = findp(parent[vertex], parent);\r\n    // return parent[vertex];\r\n}\r\nvoid unify(ll x, ll y, vector<ll>& rank, vector<ll>& parent){\r\n    x = findp(x,parent);\r\n    y = findp(y,parent);\r\n    if(x!=y){\r\n        if(rank[y]>rank[x]){\r\n            swap(x,y);\r\n        }\r\n        parent[y]=x;\r\n        // if(rank[x]==rank[y]){\r\n            rank[x]+=rank[y];\r\n        // }\r\n    }\r\n    return;\r\n}\r\nvoid solve(){\r\n    // write your code here\r\n    ll n;\r\n    cin>>n;\r\n    vector<ll> a(n),rank(n,1),parent(n);\r\n    for(ll i=0;i<n;i++){\r\n        cin>>a[i];\r\n        a[i]--;\r\n        parent[i] = i;\r\n    }\r\n    for(ll i=0;i<n;i++){\r\n        // if(findp[a[i]]!=findp[i]){\r\n        unify(i,a[i], rank,parent);\r\n        // }\r\n        // unify(i,a[i],rank,parent);\r\n    }\r\n    // for(auto k:parent){\r\n    //     cout<<k<<\" \";\r\n    // }\r\n    // cout<<\"\\n\";\r\n    // for(auto k:rank){\r\n    //     cout<<k<<\" \";\r\n    // }\r\n    // cout<<\"\\n\";\r\n    ll ans=0;\r\n    set<ll>ss;\r\n    for(auto k:parent){\r\n        ss.insert(k);\r\n    }\r\n    cout<<ss.size()<<\"\\n\";\r\n\r\n    // for(ll i=0;i<n;i)\r\n\r\n\r\n}\r\n\r\nsigned main(){\r\n    // freopen(\".in\", \"r\",stdin);\r\n    // freopen(\".out\", \"w\", stdout);\r\n    ios_base::sync_with_stdio(false), cin.tie(nullptr);\r\n\tll t = 1;\r\n\t// cin >> t;\r\n\twhile(t--) solve();\r\n\r\n    return 0;\r\n}"
}