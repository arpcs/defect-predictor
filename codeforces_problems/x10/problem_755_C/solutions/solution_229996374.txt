{
    "id": 229996374,
    "contestId": 755,
    "creationTimeSeconds": 1698403853,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 755,
        "index": "C",
        "name": "PolandBall and Forest",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1300,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "interactive",
            "trees"
        ]
    },
    "author": {
        "contestId": 755,
        "members": [
            {
                "handle": "redGentoo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1484499900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 29,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 716800,
    "source": "#include<cstdio>\r\n#include<vector>\r\n#include<algorithm>\r\n#include<set>\r\n#include<map>\r\n#include<cstring>\r\n#include<cmath>\r\n#include<climits>\r\n#include<iostream>\r\n#include<ctime>\r\n#include<cstdlib>\r\n#include<queue>\r\n\r\n#define int long long\r\n#define pb push_back\r\n#define all(a) (a).begin(), (a).end()\r\n#define print(a) for (auto &x : a)cout<<x<<\" \";\r\n#define f(i, a, b) for (int i = a; i < b; i++)\r\n#define printv(a,n) f(i,0,n) cout<<a[i]<<\" \";\r\n\r\nusing namespace std;\r\nusing vi = vector<int>;\r\nint Bit(int mask, int b) { return (mask >> b) & 1; }\r\n\r\nconst int sz = 1e4+3;\r\nint size_[sz], par[sz];\r\n\r\nvoid make(int v){\r\n    par[v] = v;\r\n    size_[v] = 1;\r\n}\r\n\r\nint find(int v){\r\n    if(v==par[v])\r\n        return v;\r\n    return par[v] = find(par[v]);\r\n}\r\n\r\nvoid Union(int a,int b){\r\n    a = find(a);\r\n    b = find(b);\r\n    if(a!=b){\r\n        if(size_[a]<size_[b])swap(a,b);\r\n\r\n        par[b] = a;\r\n        size_[a]+=size_[b];\r\n    }\r\n}\r\nvoid solve() {\r\n   //check the number of parents after a union and path compression, as the elements in the \r\n   //same group will have the same parent\r\n\r\n    int n; cin>>n;\r\n\r\n    vector<int>a(n+1);\r\n\r\n    for(int i = 1;i<=n;i++) {\r\n        cin>>a[i];\r\n        make(i);\r\n    }\r\n    set<int>s;\r\n    for(int i = 1;i<=n;i++) {\r\n        if(find(a[i])!=a[i]) {\r\n            // cout<<find(a[i])<<\" \"<<i<<\" \"<<a[i]<<endl;\r\n            par[i] = find(a[i]);\r\n        }\r\n        else {\r\n            par[i] = a[i];\r\n        }\r\n        s.insert(par[i]);\r\n    }\r\n    int cnt = s.size();\r\n    for(auto &it:s) {\r\n        if(s.find(par[it])!=s.end() and par[it]!=it) {\r\n            cnt--;\r\n        }\r\n    }\r\n    cout<<cnt<<endl;\r\n}\r\n\r\nsigned main() {\r\n    ios_base::sync_with_stdio(false);cin.tie(0);\r\n    int t = 1; \r\n    // cin >> t;\r\n    while (t--) solve();\r\n}\r\n"
}