{
    "id": 234222860,
    "contestId": 300,
    "creationTimeSeconds": 1700911792,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 300,
        "index": "A",
        "name": "Array",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1100,
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation"
        ]
    },
    "author": {
        "contestId": 300,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1366903800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 20,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n#include <iostream>\nusing namespace std;\nint main() {\n     \n  int n; cin >> n;\n    deque <int> dq(n);\n    for (auto &i : dq) cin >> i;\n    sort(dq.begin(), dq.end());\n    cout << \"1 \" << dq[0] << '\\n';\n    dq.pop_front();\n    if (dq.back() > 0) {\n        cout << \"1 \" << dq.back() << '\\n';\n        dq.pop_back();\n    }\n    else {\n        cout << \"2 \" << dq[0] << ' ' << dq[1] << '\\n';\n        dq.pop_front(), dq.pop_front();\n    }\n    cout << dq.size() << ' ';\n    for (auto &i : dq) cout << i << ' ';\n    return 0;\n}\n\t\t  \t\t   \t\t\t \t  \t   \t\t \t \t\t\t\t"
}