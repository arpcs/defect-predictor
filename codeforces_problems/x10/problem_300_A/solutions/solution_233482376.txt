{
    "id": 233482376,
    "contestId": 300,
    "creationTimeSeconds": 1700416055,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 300,
        "index": "A",
        "name": "Array",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1100,
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation"
        ]
    },
    "author": {
        "contestId": 300,
        "members": [
            {
                "handle": "bkifhr6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1366903800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 20,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 102400,
    "source": "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int size, val;\n    cin >> size;\n    vector<int> positive, zeros, negative;\n    for(int i = 0; i < size; i++){\n        cin >> val;\n        if(val > 0){\n            positive.push_back(val);\n        }else if (val == 0){\n            zeros.push_back(val);\n        }else{\n            negative.push_back(val);\n        }\n    }\n\n    if (negative.size() %2 == 0){\n        zeros.push_back(negative.back());\n        negative.pop_back();\n    }\n\n    if(positive.empty()){\n        positive.push_back(negative.back());\n        negative.pop_back();\n        positive.push_back(negative.back());\n        negative.pop_back();\n    }\n\n    cout << \"\\n\" << negative.size() << \" \";\n    while(negative.size() != 0){\n        cout << negative.back() << \" \";\n        negative.pop_back();\n    }\n\n    cout << positive.size() << \" \";\n    while(positive.size() != 0){\n        cout << positive.back() << \" \";\n        positive.pop_back();\n    }\n\n    cout << \"\\n\" << zeros.size() << \" \";\n    while(zeros.size() != 0){\n        cout << zeros.back() << \" \";\n        zeros.pop_back();\n    }\n\n    return 0;\n}\n \t\t   \t\t  \t\t\t\t  \t\t\t \t\t\t\t  \t\t\t"
}