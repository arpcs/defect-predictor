{
    "id": 178965457,
    "contestId": 1109,
    "creationTimeSeconds": 1667399784,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1109,
        "index": "A",
        "name": "Sasha and a Bit of Relax",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1600,
        "tags": [
            "dp",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1109,
        "members": [
            {
                "handle": "abhi_kant"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1550334900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 50,
    "timeConsumedMillis": 234,
    "memoryConsumedBytes": 19456000,
    "source": "   //ABHIKANT SINGH\r\n    \r\n    #include<bits/stdc++.h>\r\n    using namespace std;\r\n \r\n \r\n #include<ext/pb_ds/assoc_container.hpp>\r\n #include<ext/pb_ds/tree_policy.hpp>\r\n using namespace __gnu_pbds;\r\n \r\n typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds;  // find_by_order, order_of_key\r\n // to contain duplicate value in pbds change ( less  --> less_equal)\r\n \r\n \r\n   #include<stdio.h>\r\n   #define int         long long int\r\n   #define f(i,a,b)    for(int i=a;i<(b);++i)\r\n   #define fr(i,a,b)   for(int i=a;i>=b;i--)\r\n   #define pb          push_back\r\n   #define ppb         pop_back\r\n   #define mp          make_pair\r\n   #define pii         pair<int,int>\r\n   #define ff          first\r\n   #define ss          second\r\n   #define MOD         1000000007\r\n   #define PI          3.141592653589793238462\r\n   #define INF         1e18\r\n   #define INT         -1e18\r\n   #define set_bits    __builtin_popcountll\r\n   #define trail_zeros(x)    __builtin_ctzll(x)         //16=00000....000110100 this fn return 2(there is 2 trailing zeros)\r\n   #define lead_zeros(x)     __builtin_clzll(x)          //this fn return 58(there is 58 leading zeros for 64 bits)\r\n   #define sz(x)             ((int)(x).size())\r\n   #define all(x)            (x).begin(),(x).end()\r\n   #define endl              \"\\n\"\r\n   #define setpr(x)          setprecision(x)<<fixed\r\n   #define print(v)          {for(auto x : v) cout << x << \" \"; cout << endl;}\r\n   #define print1(v)         for(auto x : v) cout << x.ff << \" \" << x.ss << endl;\r\n   #define fillvv(v,a)       f(i,0,v.size()) f(j,0,v.size()) v[i][j] = a;\r\n   #define fillv(v,a)        f(i,0,v.size()) v[i] = a;\r\n   #define p(n)              cout<<n<<endl;\r\n \r\n \r\n /*------------------------------------------------------------------------------------*/\r\n int gcd(int a, int b){if(b>a){return gcd(b,a);} if(b==0){return a;} return gcd(b,a%b);}\r\n int modpow(int a,int b){int res = 1; while(b>0){if(b&1)res=(res*a)%MOD; a=(a*a)%MOD; b=b>>1;} return res;}\r\n int power(int a,int b){int res = 1; while(b>0){if(b&1)res=(res*a); a=(a*a); b=b>>1;} return res;}\r\n bool comp(pair<int,int>q,pair<int,int>q1){return (q.ss>q1.ss);}   //decreasing order;\r\n int msb_pos(int n){int ans=0; while(n){ans++; n>>=1;} return (ans-1);}\r\n const int N=2e5+4;\r\n int fact[N],invfact[N];\r\n void facti(){fact[0]=1; f(i,1,N){fact[i]=(i*fact[i-1])%MOD;} invfact[N-1]=modpow(fact[N-1],MOD-2); for(int i=N-2;i>=0;i--){invfact[i]=invfact[i+1]*(i+1)%MOD;}}\r\n int ncr(int n, int r){if(r>n || n<0 || r<0)return 0;  return ((fact[n]*invfact[r])%MOD*invfact[n-r]%MOD)%MOD;} \r\n vector<int> sieve(int n){int*arr = new int[n + 1](); vector<int> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}\r\n  /*-----------------------------------------------------------------------------------------*/\r\n  \r\n  /*------------------------------------------------------------------------------------*/\r\n bool isPrime(int n){if(n<=1)return false;if(n<=3)return true;if(n%2==0||n%3==0)return false;for(int i=5;i*i<=n;i=i+6)if(n%i==0||n%(i+2)==0)return false;return true;}\r\n bool isPowerOfTwo(int n){if(n==0)return false;return (ceil(log2(n)) == floor(log2(n)));}\r\n bool isPerfectSquare(int x){if(x >= 0){int sr = sqrt(x);return (sr * sr == x);}return false;}\r\n \r\n string decToBinary(int n){string s=\"\";int i = 0;while (n > 0) {s =to_string(n % 2)+s;n = n / 2;i++;}return s;}\r\n int binaryToDecimal(string n){string num = n;int dec_value = 0;int base = 1;int len = num.length();for(int i = len - 1; i >= 0; i--){if(num[i] == '1')dec_value += base;base = base * 2;}return dec_value;}\r\n \r\n vector<pair<int,int>>prime_fact; \r\n void pr_ft(int n){for(int i = 2;i*i<=n;i++){int cnt=0; while(n%i==0){cnt++; n/=i;} if(cnt>0)prime_fact.pb({i,cnt});}if(n>1) prime_fact.pb({n,1});}\r\n  /*------------------------------------------------------------------------------------*/\r\n  \r\n  \r\n \r\n \r\n \r\n \r\n \r\n \r\n    void solve(){\r\n    \r\n         int n;  cin>>n;\r\n\r\n         int a[n];\r\n\r\n         f(i,0,n) cin>>a[i];\r\n\r\n\r\n      int prefix[n];\r\n\r\n       prefix[0] = a[0];\r\n\r\n      f(i,1,n) prefix[i] = (prefix[i-1]^a[i]);\r\n\r\n      map<int,int>even;\r\n      map<int,int>odd;\r\n\r\n        int ans = 0;\r\n\r\n      f(i,0,n){\r\n\r\n          if(i%2 == 0) even[prefix[i]]++;\r\n          else odd[prefix[i]]++;\r\n\r\n       if(prefix[i] == 0 && (i+1)%2 == 0) ans++;           //{0,i};\r\n\r\n      }\r\n  \r\n         \r\n    \r\n \r\n       for(auto pr : odd) ans += (pr.ss*(pr.ss-1))/2;\r\n       for(auto pr : even) ans += (pr.ss*(pr.ss-1))/2;\r\n\r\n        \r\n       \r\n\r\n        cout<<ans<<endl;\r\n\r\n        \r\n \r\n \r\n \r\n \r\n \r\n \r\n    }\r\n \r\n   \r\n     \r\n     int32_t main(){\r\n \r\n     ios_base::sync_with_stdio(0); \r\n           cin.tie(0); \r\n           cout.tie(0); \r\n \r\n     //facti(); \r\n     //pr_ft(n);\r\n \r\n        int t=1; \r\n        // cin>>t;\r\n        while(t--){\r\n          solve();\r\n        }\r\n          return 0;\r\n     }\r\n   \r\n     \r\n/*\r\n\r\n  Notice, that if a[l]\u2295a[l+1]\u2295\u2026\u2295a[mid] = a[mid+1]\u2295a[mid+2]\u2295\u2026\u2295a[r] then a[l]\u2295a[l+1]\u2295\u2026\u2295a[r] = 0 (it comes from the fact that for some \r\n  integers A, B, C if A\u2295B = C then A = B\u2295C).\r\n\r\nNow we have another task. How many are there pairs (l,r) that r\u2212l+1 is even and a[l]\u2295a[l+1]\u2295\u2026\u2295a[r] = 0.\r\nPrecalculate array prefi = a[1]\u2295a[2]\u2295\u2026\u2295a[i]. Then a[l]\u2295a[l+1]\u2295\u2026\u2295a[r] = (pref[r] \u2295 pref[l\u22121]). So if (pref[r] \u2295 pref[l\u22121]) = 0 then (pref[r] = pref[l\u22121]).\r\n\r\nSo again we should solve another thask, which is equivalent to original one. How many are there pairs (l,r) that r\u2212l+1 is even and (pref[r] = pref[l\u22121]).\r\n\r\nSo to count the answer just have two arrays cnt[0][x] to store elements from even positions and cnt[1][x] for odd positions.  \r\n\r\n*/"
}