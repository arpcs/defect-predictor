{
    "contestId": 1027,
    "index": "F",
    "name": "Session in BSU",
    "type": "PROGRAMMING",
    "rating": 2400,
    "tags": [
        "binary search",
        "dfs and similar",
        "dsu",
        "graph matchings",
        "graphs"
    ],
    "desc": {
        "title": "F. Session in BSU",
        "statement": "<p>Polycarp studies in Berland State University. Soon he will have to take his exam. He has to pass exactly $$$n$$$ exams.</p><p>For the each exam $$$i$$$ there are known two days: $$$a_i$$$ \u2014 day of the first opportunity to pass the exam, $$$b_i$$$ \u2014 day of the second opportunity to pass the exam ($$$a_i &lt; b_i$$$). Polycarp <span class=\"tex-font-style-it\">can pass at most one exam</span> during each day. For each exam Polycarp chooses by himself which day he will pass this exam. He has to pass all the $$$n$$$ exams.</p><p>Polycarp wants to pass all the exams as soon as possible. Print the minimum index of day by which Polycarp can pass all the $$$n$$$ exams, or print <span class=\"tex-font-style-tt\">-1</span> if he cannot pass all the exams at all.</p>",
        "inputSpecification": "<p>The first line of the input contains one integer $$$n$$$ ($$$1 \\le n \\le 10^6$$$) \u2014 the number of exams.</p><p>The next $$$n$$$ lines contain two integers each: $$$a_i$$$ and $$$b_i$$$ ($$$1 \\le a_i &lt; b_i \\le 10^9$$$), where $$$a_i$$$ is the number of day of the first passing the $$$i$$$-th exam and $$$b_i$$$ is the number of day of the second passing the $$$i$$$-th exam.</p>",
        "outputSpecification": "<p>If Polycarp cannot pass all the $$$n$$$ exams, print <span class=\"tex-font-style-tt\">-1</span>. Otherwise print the minimum index of day by which Polycarp can do that.</p>",
        "samples": [
            {
                "input": "2<br/>1 5<br/>1 7<br/>",
                "output": "5<br/>"
            },
            {
                "input": "3<br/>5 13<br/>1 5<br/>1 7<br/>",
                "output": "7<br/>"
            },
            {
                "input": "3<br/>10 40<br/>40 80<br/>10 80<br/>",
                "output": "80<br/>"
            },
            {
                "input": "3<br/>99 100<br/>99 100<br/>99 100<br/>",
                "output": "-1<br/>"
            }
        ],
        "note": null
    }
}