{
    "id": 165339546,
    "contestId": 198,
    "creationTimeSeconds": 1658506887,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 198,
        "index": "A",
        "name": "About Bacteria",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 198,
        "members": [
            {
                "handle": "leviackermann"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1340379000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 114,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <set>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\n#include <map>\r\n#include <stack>\r\n#include <queue>\r\n#include <deque>\r\n#include <algorithm>\r\n#include <numeric>\r\n#include <math.h>\r\n#include <cstring>\r\n#include <time.h>\r\n#include <chrono>\r\n#include <random>\r\n#include <ctime>\r\n\r\nusing namespace std;\r\n#define gc getchar_unlocked\r\n#define fo(i, n) for (i = 0; i < n; i++)\r\n#define Fo(i, k, n) for (i = k; k < n ? i < n : i > n; k < n ? i += 1 : i -= 1)\r\n#define ll long long\r\n#define deb(x) cout << #x << \"=\" << x << endl\r\n#define deb2(x, y) cout << #x << \"=\" << x << \",\" << #y << \"=\" << y << endl\r\n#define pb push_back\r\n#define mp make_pair\r\n#define F first\r\n#define S second\r\n#define all(x) x.begin(), x.end()\r\n#define clr(x) memset(x, 0, sizeof(x))\r\n#define sortall(x) sort(all(x))\r\n#define tr(it, a) for (auto it = a.begin(); it != a.end(); it++)\r\n#define PI 3.1415926535897932384626\r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, ll> pl;\r\ntypedef vector<int> vi;\r\ntypedef vector<ll> vl;\r\ntypedef vector<pii> vpii;\r\ntypedef vector<pl> vpl;\r\ntypedef vector<vi> vvi;\r\ntypedef vector<vl> vvl;\r\nmt19937_64 rang(chrono::high_resolution_clock::now().time_since_epoch().count());\r\nint rng(int lim)\r\n{\r\n  uniform_int_distribution<int> uid(0, lim - 1);\r\n  return uid(rang);\r\n}\r\nint mpow(int base, int exp);\r\nvoid ipgraph(int n, int m);\r\n// void dfs(int u, int par);\r\n\r\nconst int mod = 1'000'000'009;\r\nconst int N = 3e5, M = N;\r\n//=======================\r\n\r\n// vi g[N];\r\n// int a[N];\r\n// string s;\r\n// vl arr;\r\n// ll m;\r\n// vl b;\r\n\r\nbool sortbysec(const pair<ll, ll> &a,\r\n               const pair<ll, ll> &b)\r\n{\r\n  return (a.second < b.second);\r\n}\r\nauto comp = [](pair<int, int> a, pii b)\r\n{\r\n  return abs(a.first) + abs(a.second) < abs(b.first) + abs(b.second);\r\n};\r\n\r\nvoid read(int i, int n, vl &arr)\r\n{\r\n  for (int j = i; j < n; j++)\r\n    cin >> arr[j];\r\n}\r\nvoid fillPrimes(vector<int> &prime, int high)\r\n{\r\n  bool ck[high + 1];\r\n  memset(ck, true, sizeof(ck));\r\n  ck[1] = false;\r\n  ck[0] = false;\r\n  for (int i = 2; (i * i) <= high; i++)\r\n  {\r\n    if (ck[i] == true)\r\n    {\r\n      for (int j = i * i; j <= sqrt(high); j = j + i)\r\n      {\r\n        ck[j] = false;\r\n      }\r\n    }\r\n  }\r\n  for (int i = 2; i * i <= high; i++)\r\n  {\r\n    if (ck[i] == true)\r\n    {\r\n      prime.push_back(i);\r\n    }\r\n  }\r\n}\r\n\r\nvoid segmentedSieve(int low, int high, vl &temp)\r\n{\r\n  if (low < 2 and high >= 2)\r\n  {\r\n    low = 2;\r\n  }\r\n  bool prime[high - low + 1];\r\n\r\n  memset(prime, true, sizeof(prime));\r\n\r\n  vector<int> chprime;\r\n  fillPrimes(chprime, high);\r\n\r\n  for (int i : chprime)\r\n  {\r\n    int lower = (low / i);\r\n\r\n    if (lower <= 1)\r\n    {\r\n      lower = i + i;\r\n    }\r\n    else if (low % i)\r\n    {\r\n      lower = (lower * i) + i;\r\n    }\r\n    else\r\n    {\r\n      lower = (lower * i);\r\n    }\r\n    for (int j = lower; j <= high; j = j + i)\r\n    {\r\n      prime[j - low] = false;\r\n    }\r\n  }\r\n\r\n  for (int i = low; i <= high; i++)\r\n  {\r\n    if (prime[i - low] == true)\r\n    {\r\n      temp.pb(i);\r\n    }\r\n  }\r\n}\r\n\r\nll n;\r\n\r\nint dfs(int u, vi g[], vi &visited)\r\n{\r\n  visited[u] = 1;\r\n  for (auto i : g[u])\r\n  {\r\n    if (!visited[i])\r\n    {\r\n      return dfs(i, g, visited) + 1;\r\n    }\r\n  }\r\n  return 1;\r\n}\r\n\r\nlong long power(long long n, long long m)\r\n{\r\n  if (m == 0)\r\n    return 1;\r\n  if (m == 1)\r\n    return n;\r\n  if (m % 2 == 1)\r\n    return power(n, m - 1) * n % mod;\r\n  else\r\n  {\r\n    long long temp = power(n, m / 2) % mod;\r\n    return temp * temp % mod;\r\n  }\r\n}\r\n\r\n\r\nvoid solve()\r\n{\r\n  ll k,b,n,t; cin>>k>>b>>n>>t;\r\n  ll a=1;\r\n  ll count=0;\r\n  while(a<=t) {\r\n    a=a*k+b;\r\n    count++;\r\n  }\r\n  cout<<max(0ll,n-count+1);\r\n}\r\n\r\nint main()\r\n{\r\n  ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n  srand(chrono::high_resolution_clock::now().time_since_epoch().count());\r\n  solve();\r\n  return 0;\r\n}\r\n\r\nint mpow(int base, int exp)\r\n{\r\n  base %= mod;\r\n  int result = 1;\r\n  while (exp > 0)\r\n  {\r\n    if (exp & 1)\r\n      result = ((ll)result * base) % mod;\r\n    base = ((ll)base * base) % mod;\r\n    exp >>= 1;\r\n  }\r\n  return result;\r\n}\r\n"
}