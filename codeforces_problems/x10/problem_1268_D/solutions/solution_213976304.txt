{
    "id": 213976304,
    "contestId": 1268,
    "creationTimeSeconds": 1689476055,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1268,
        "index": "D",
        "name": "Invertation in Tournament",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 3200,
        "tags": [
            "brute force",
            "divide and conquer",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1268,
        "members": [
            {
                "handle": "bkifhr10"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1576926300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 123,
    "timeConsumedMillis": 1700,
    "memoryConsumedBytes": 16076800,
    "source": "#include <cstdio>\n#include <algorithm>\n#include <cassert>\n#include <vector>\n#include <string>\n#include <cstring>\ntypedef long long LL;\ntypedef std::pair<int, int> pii;\ntypedef std::pair<LL, LL> pll;\n#define MP std::make_pair\n#define fi first \n#define se second \nint read()\n{\n\tint s = 0, f = 1;\n\tchar c = getchar();\n\twhile (!(c >= '0' && c <= '9'))\n\t\tf ^= c == '-', c = getchar();\n\twhile (c >= '0' && c <= '9')\n\t\ts = s * 10 + (c - '0'), c = getchar();\n\treturn f ? s : -s;\n}\n\nconst int MOD = 99824435, MAXN = 2e5 + 5;\nint n, G[2005][2005], ppc[1 << 6], res[10], outD[2005], tmp[2005];\nbool chk()\n{\n\tmemcpy(tmp + 1, outD + 1, n << 2);\n\tstd::sort(tmp + 1, tmp + n + 1);\n\tint sum = 0;\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tsum += tmp[i];\n\t\tif (sum == i * (i - 1) / 2) return false;\n\t}\n\treturn true;\n}\nint main()\n{\n\tn = read();\n\tfor (int i = 1; i <= n; i++)\n\t\tfor (int j = 1; j <= n; j++)\n\t\t\tscanf(\"%1d\", &G[i][j]), outD[i] += G[i][j];\n\tif (chk()) return printf(\"0 1\\n\"), 0;\n\tif (n >= 7)\n\t{\n\t\tint ans = 0;\n\t\tfor (int i = 1; i <= n; i++)\n\t\t{\n\t\t\tfor (int j = 1; j <= n; j++)\n\t\t\t\tif (G[i][j]) outD[i]--, outD[j]++;\n\t\t\t\telse if (G[j][i]) outD[i]++, outD[j]--;\n\t\t\tans += chk();\n\t\t\tfor (int j = 1; j <= n; j++)\n\t\t\t\tif (G[i][j]) outD[i]++, outD[j]--;\n\t\t\t\telse if (G[j][i]) outD[i]--, outD[j]++;\n\t\t}\n\t\tprintf(\"1 %d\\n\", ans);\n\t}\n\telse\n\t{\n\t\tppc[0] = 0;\n\t\tfor (int s = 1; s < (1 << n); s++)\n\t\t{\n\t\t\tppc[s] = ppc[s - (s & -s)] + 1;\n\t\t\tfor (int i = 1; i <= n; i++)\n\t\t\t\tfor (int j = 1; j <= n; j++)\n\t\t\t\t\tif (((s >> (i - 1)) & 1) && !((s >> (j - 1)) & 1))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (G[i][j]) outD[i]--, outD[j]++;\n\t\t\t\t\t\telse if (G[j][i]) outD[i]++, outD[j]--;\n\t\t\t\t\t}\n\t\t\tres[ppc[s]] += chk();\n\t\t\tfor (int i = 1; i <= n; i++)\n\t\t\t\tfor (int j = 1; j <= n; j++)\n\t\t\t\t\tif (((s >> (i - 1)) & 1) && !((s >> (j - 1)) & 1))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (G[i][j]) outD[i]++, outD[j]--;\n\t\t\t\t\t\telse if (G[j][i]) outD[i]--, outD[j]++;\n\t\t\t\t\t}\n\t\t}\n\t\tfor (int i = 1, fac = 1; i <= n; fac *= ++i)\n\t\t\tif (res[i])\n\t\t\t\treturn printf(\"%d %d\\n\", i, res[i] * fac), 0;\n\t\tprintf(\"-1\\n\");\n\t}\n\treturn 0;\n}\n\t\t  \t\t\t \t \t\t\t\t \t\t  \t\t  \t  \t\t\t\t"
}