{
    "id": 188272438,
    "contestId": 1268,
    "creationTimeSeconds": 1673061651,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1268,
        "index": "D",
        "name": "Invertation in Tournament",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 3200,
        "tags": [
            "brute force",
            "divide and conquer",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1268,
        "members": [
            {
                "handle": "JWRuixi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1576926300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 22,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 17920000,
    "source": "#include <bits/stdc++.h>\r\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2\")\r\n#define LL long long\r\nusing namespace std;\r\n\r\nnamespace IO{\r\n\tchar ibuf[(1 << 20) + 1], *iS, *iT;\r\n\t#if ONLINE_JUDGE\r\n\t#define gh() (iS == iT ? iT = (iS = ibuf) + fread(ibuf, 1, (1 << 20) + 1, stdin), (iS == iT ? EOF : *iS++) : *iS++)\r\n\t#else\r\n\t#define gh() getchar()\r\n\t#endif\r\n\t#define reg register\r\n\tinline long long read () {\r\n\t\treg char ch = gh();\r\n\t\treg long long x = 0;\r\n\t\treg char t = 0;\r\n\t\twhile (ch < '0' || ch > '9') t |= ch == '-', ch = gh();\r\n\t\twhile (ch >= '0' && ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gh();\r\n\t\treturn t ? -x : x;\r\n\t}\r\n\tinline void write(long long x) {\r\n\t\tif (x < 0) {\r\n\t\t\tx = ~(x - 1);\r\n\t\t\tputchar('-');\r\n\t\t}\r\n\t\tif (x > 9)\r\n\t\t\twrite(x / 10);\r\n\t\tputchar(x % 10 + '0');\r\n\t}\r\n\tinline void rd (int *a) {\r\n\t\treg char ch = gh();\r\n\t\treg int m = 0;\r\n\t\twhile (ch != '0' && ch != '1') ch = gh();\r\n\t\twhile (ch == '0' || ch == '1') a[++m] = (ch ^ 48), ch = gh();\r\n\t}\r\n}\r\n\r\nusing IO::read;\r\nusing IO::write;\r\nusing IO::rd;\r\n\r\nconst int maxn(2050), INF(1e9 + 233);\r\nint n, a[maxn][maxn], d[maxn], d1[maxn], ans = INF, cnt;\r\n\r\ninline bool check () {\r\n\tsort(d1 + 1, d1 + n + 1);\r\n\tfor (int i = 1, s = 0; i < n; i++) {\r\n\t\ts += d1[i];\r\n\t\tif (s == i * (i - 1) / 2) return 0;\r\n\t}\r\n\treturn 1;\r\n}\r\n\r\ninline void solve1 () {\r\n\tfor (int s = 1; s < (1 << n); s++) {\r\n\t\tfor (int i = 1; i <= n; i++)\r\n\t\t\tif ((s >> (i - 1)) & 1) \r\n\t\t\t\tfor (int j = 1; j <= n; j++) if (i != j) swap(a[i][j], a[j][i]);\r\n\t\tfor (int i = 1; i <= n; i++) d1[i] = 0;\r\n\t\tfor (int i = 1; i <= n; i++) for(int j = 1; j <= n; j++) d1[i] += a[i][j];\r\n\t\tif (check()) {\r\n\t\t\tif (s == 1) for (int i = 1; i <= n; i++) cerr << d1[i] << \" \\n\"[i == n]; \r\n\t\t\tint k = __builtin_popcount(s);\r\n\t\t\tif (k < ans) ans = k, cnt = 1, cerr << s << endl;\r\n\t\t\telse if (k == ans) ++cnt;\r\n\t\t}\r\n\t\tfor (int i = 1; i <= n; i++)\r\n\t\t\tif ((s >> (i - 1)) & 1) \r\n\t\t\t\tfor (int j = 1; j <= n; j++) if (i != j) swap(a[i][j], a[j][i]);\r\n\t}\r\n\tif (ans == INF) puts(\"-1\");\r\n\telse {\r\n\t\tfor (int i = 1; i <= ans; i++) cnt *= i;\r\n\t\tprintf(\"%d %d\", ans, cnt);\r\n\t}\r\n}\r\n\r\ninline void solve2 () {\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tfor (int j = 1; j <= n; j++) d1[i] = d[i];\r\n\t\td1[i] = n - 1 - d1[i];\r\n\t\tfor (int j = 1; j <= n; j++) if (i != j) d1[j] += a[i][j] - a[j][i];\r\n\t\tcnt += check();\r\n\t}\r\n\tprintf(\"1 %d\", cnt);\r\n}\r\n\r\nint main () {\r\n\tn = read();\r\n\tfor (int i = 1; i <= n; i++) rd(a[i]);\r\n\tfor (int i = 1; i <= n; i++) for (int j = 1; j <= n; j++) d[i] += a[i][j];\r\n\tfor (int i = 1; i <= n; i++) d1[i] = d[i];\r\n\tif (check()) return puts(\"0 1\"), 0;\r\n\tif (n <= 6) solve1();\r\n\telse solve2();\r\n}\r\n//I love WHQ!"
}