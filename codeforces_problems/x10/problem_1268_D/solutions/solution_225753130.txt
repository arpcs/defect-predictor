{
    "id": 225753130,
    "contestId": 1268,
    "creationTimeSeconds": 1695976787,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1268,
        "index": "D",
        "name": "Invertation in Tournament",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 3200,
        "tags": [
            "brute force",
            "divide and conquer",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1268,
        "members": [
            {
                "handle": "DaiRuiChen007"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1576926300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// LUOGU_RID: 126575905\n#include<bits/stdc++.h>\r\n#define pc __builtin_popcount\r\nusing namespace std;\r\nconst int MAXN=2005;\r\nint n,deg[MAXN],a[MAXN],d[MAXN],q[MAXN];;\r\nbool G[MAXN][MAXN],T[MAXN][MAXN]\r\ninline bool check() {\r\n\tcopy(deg+1,deg+n+1,a+1),sort(a+1,a+n+1);\r\n\tfor(int i=1,s=0;i<n;++i) if((s+=a[i])==i*(i-1)/2) return false;\r\n\treturn true;\r\n}\r\nsigned main() {\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=1;i<=n;++i) for(int j=1;j<=n;++j) scanf(\"%1d\",&G[i][j]),deg[i]+=G[i][j];\r\n\tcopy(deg+1,deg+n+1,d+1);\r\n\tif(check()) return puts(\"0 1\\n\"),0;\r\n\tif(n<=10) {\r\n\t\tint t=-1,c=0;\r\n\t\tfor(int s=1;s<(1<<n);++s) {\r\n\t\t\tfor(int i=1;i<=n;++i) q[i]=(s>>(i-1))&1;\r\n\t\t\tfor(int i=1;i<=n;++i) {\r\n\t\t\t\tdeg[i]=0;\r\n\t\t\t\tfor(int j=1;j<=n;++j) {\r\n\t\t\t\t\tdeg[i]+=(T[i][j]=G[i][j]^q[i]^q[j]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(check()) {\r\n\t\t\t\tif(t==-1||pc(s)<pc(t)) c=1,t=s;\r\n\t\t\t\telse if(pc(s)==pc(t)) ++c;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i=1;i<=pc(t);++i) c*=i;\r\n\t\tif(~t) printf(\"%d %d\\n\",pc(t),c);\r\n\t\telse puts(\"-1\");\r\n\t} else {\r\n\t\tint c=0;\r\n\t\tfor(int i=1;i<=n;++i) {\r\n\t\t\tdeg[i]=n-1-deg[i];\r\n\t\t\tfor(int j=1;j<=n;++j) if(j!=i) deg[j]+=G[i][j]?1:-1;\r\n\t\t\tc+=check(),copy(d+1,d+n+1,deg);\r\n\t\t}\r\n\t\tif(!c) puts(\"-1\");\r\n\t\telse printf(\"1 %d\\n\",c);\r\n\t}\r\n\treturn 0;\r\n}"
}