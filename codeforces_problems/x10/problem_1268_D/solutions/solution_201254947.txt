{
    "id": 201254947,
    "contestId": 1268,
    "creationTimeSeconds": 1680956942,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1268,
        "index": "D",
        "name": "Invertation in Tournament",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 3200,
        "tags": [
            "brute force",
            "divide and conquer",
            "graphs",
            "math"
        ]
    },
    "author": {
        "contestId": 1268,
        "members": [
            {
                "handle": "sjzezoj"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1576926300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 123,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 4096000,
    "source": "// S2OJ Submission #75088 @ 1680956939677\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int N = 2005;\r\nconst int mod = 998244353;\r\n\r\nint n;\r\nchar s[N];\r\nbool g[N][N];\r\nint deg[N], d[N];\r\n\r\nbool chk()\r\n{\r\n    memcpy(d, deg, sizeof(deg));\r\n    sort(d + 1, d + n + 1);\r\n    int sum = 0;\r\n    for(int i = 1; i < n; i++)\r\n    {\r\n        sum += d[i];\r\n        if(sum == i * (i - 1) / 2) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nvoid rev(int x)\r\n{\r\n    for(int i = 1; i <= n; i++) if(i != x)\r\n    {\r\n        deg[x] -= g[x][i], deg[i] -= g[i][x];\r\n        g[x][i] ^= 1, g[i][x] ^= 1;\r\n        deg[x] += g[x][i], deg[i] += g[i][x];\r\n    }\r\n    return;\r\n}\r\n\r\nvoid sol1()\r\n{\r\n    int ans = n + 1, cnt = 0;\r\n    for(int s = 0; s < (1 << n); s++)\r\n    {\r\n        for(int i = 1; i <= n; i++)\r\n            if(s >> (i - 1) & 1) rev(i);\r\n        if(chk())\r\n        {\r\n            int c = __builtin_popcount(s);\r\n            if(c < ans) ans = c, cnt = 1;\r\n            else if(c == ans) cnt++;\r\n        }\r\n        for(int i = 1; i <= n; i++)\r\n            if(s >> (i - 1) & 1) rev(i);\r\n    }\r\n    if(cnt)\r\n    {\r\n        for(int i = 1; i <= ans; i++) cnt *= i;\r\n        cout << ans << ' ' << cnt << '\\n';\r\n    }\r\n    else cout << \"-1\\n\";\r\n    return;\r\n}\r\n\r\nvoid sol2()\r\n{\r\n    int cnt = 0;\r\n    for(int i = 1; i <= n; i++)\r\n        rev(i), cnt += chk(), rev(i);\r\n    cout << \"1 \" << cnt << '\\n';\r\n    return;\r\n}\r\n\r\nint main()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr), cout.tie(nullptr);\r\n\r\n    cin >> n;\r\n    for(int i = 1; i <= n; i++)\r\n    {\r\n        cin >> (s + 1);\r\n        for(int j = 1; j <= n; j++)\r\n            deg[i] += g[i][j] = s[j] - '0';\r\n    }\r\n\r\n    if(chk()) return cout << \"0 1\\n\", 0;\r\n\r\n    if(n <= 6) sol1();\r\n    else sol2();\r\n    return 0;\r\n}"
}