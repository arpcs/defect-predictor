{
    "id": 232297447,
    "contestId": 1744,
    "creationTimeSeconds": 1699648315,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1744,
        "index": "E2",
        "name": "Divisible Numbers (hard version)",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "brute force",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1744,
        "members": [
            {
                "handle": "Amro_Sous"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1665930900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 405,
    "memoryConsumedBytes": 268390400,
    "source": "/**\r\n * author: amroo sous\r\n * date: 2023-11-10 22:10:07\r\n*/\r\n#include<bits/stdc++.h>\r\nusing namespace std; \r\n#define fastio ios_base::sync_with_stdio(false), cin.tie(nullptr);\r\n#define TxtFile freopen(\"input.txt\",\"r\",stdin)\r\n#define nl \"\\n\"\r\ntypedef long long ll;\r\n\r\nvoid get_prime_divs(ll x, map<int, int>& divs) { \r\n    ll i = 2;\r\n    while(i * i <= x){\r\n        while (x % i == 0){\r\n            divs[i]++;\r\n            x /= i;\r\n        }\r\n        i++;\r\n    }\r\n    if(x > 1) divs[x]++;\r\n}\r\n\r\nvoid solve() {\r\n    \r\n    ll a, b, c, d; \r\n    cin >> a >> b >> c >> d; \r\n\r\n    map<int, int> mp; \r\n    get_prime_divs(a * b, mp);\r\n\r\n    pair<ll, ll> ans = {-1, -1};\r\n\r\n    auto dfs = [&](auto& self, auto it, ll x) -> void\r\n    {\r\n        if (it == mp.end())\r\n        {\r\n            ll d1 = x, d2 = a * b / x; \r\n            d1 = (d1 / a + 1) * d1; \r\n            d2 = (d2 / b + 1) * d2; \r\n            if (d1 <= c && d2 <= d)\r\n            {\r\n                //ans = {d1, d2}; \r\n                return; \r\n            }\r\n        }\r\n        auto [p, cnt] = *it; \r\n        for (int i = 0; i <= cnt; i++)\r\n        {\r\n            self(self, next(it), x); \r\n            x *= p; \r\n        }\r\n    };\r\n\r\n    dfs(dfs, mp.begin(), 1LL); \r\n\r\n    cout << ans.first << \" \" << ans.second << nl; \r\n}\r\n\r\nint main() {\r\n    fastio; \r\n    int t = 1; \r\n    cin >> t; \r\n    while (t--) solve();\r\n    return 0;\r\n}"
}