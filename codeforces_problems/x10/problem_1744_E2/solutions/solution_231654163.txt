{
    "id": 231654163,
    "contestId": 1744,
    "creationTimeSeconds": 1699319225,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1744,
        "index": "E2",
        "name": "Divisible Numbers (hard version)",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "brute force",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1744,
        "members": [
            {
                "handle": "yrsmy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1665930900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// Problem: E2. Divisible Numbers (hard version)\r\n// Contest: Codeforces - Codeforces Round  828 (Div. 3)\r\n// URL: https://codeforces.com/problemset/problem/1744/E2\r\n// Memory Limit: 256 MB\r\n// Time Limit: 4000 ms\r\n//\r\n// Powered by CP Editor (https://cpeditor.org)\r\n\r\n#include <algorithm>\r\n#include <array>\r\n#include <bitset>\r\n#include <cmath>\r\n#include <cstring>\r\n#include <iostream>\r\n#include <map>\r\n#include <queue>\r\n#include <set>\r\n#include <stack>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\n#include <vector>\r\n\r\n#define endl \"\\n\"\r\n#define xx first\r\n#define yy second\r\n#define sz size\r\n#define yes \"Yes\\n\";\r\n#define no \"No\\n\"\r\n#define all(a) a.begin(), a.end()\r\n#define int128 __int128\r\n#define pb push_back\r\nusing namespace std;\r\n\r\ntypedef long long LL;\r\ntypedef pair<int, int> PII;\r\ntypedef pair<LL, LL> PLL;\r\n\r\nLL gcd(LL a, LL b)\r\n{\r\n    return b ? gcd(b, a % b) : a;\r\n}\r\n\r\nLL lcm(LL a, LL b)\r\n{\r\n    return a / gcd(a, b) * b;\r\n}\r\n\r\n__int128 read()\r\n{\r\n    //\u76f4\u63a5\u5728\u51fd\u6570\u91cc\u9762\u5b9e\u73b0\u8bfb\u5b57\u7b26\u4e32\u64cd\u4f5c\u66f4\u7b80\u6d01\r\n    __int128 res = 0; //\u521d\u59cb\u7ed3\u679c\u8d4b\u503c0\r\n    char scan[1005];\r\n    scanf(\"%s\", scan);\r\n    for (int i = 0; i < (int)strlen(scan); i++)\r\n        res *= 10, res += scan[i] - '0'; //\u5b9e\u73b0\u8fdb\u4f4d\r\n    return res;                          //\u8fd4\u56de__int128\u7c7b\u578b\r\n}\r\nvoid print(__int128 num)\r\n{ //\u9012\u5f52\u8c03\u7528\uff0c\u5b9e\u73b0\u4ece\u9ad8\u4f4d\u5411\u4f4e\u4f4d\u8f93\u51fa\r\n    if (num > 9)\r\n        print(num / 10);\r\n    putchar(num % 10 + '0');\r\n}\r\n\r\nLL C(int a, int b)\r\n{\r\n    LL res = 1;\r\n    for (int i = a, j = 1; j <= b; j++, i--)\r\n    {\r\n        res = res * i / j;\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\nbool is_primes(LL x)\r\n{\r\n    if (x == 1)\r\n        return false;\r\n    for (int i = 2; i <= x / i; i++)\r\n        if (x % i == 0)\r\n            return false;\r\n    return true;\r\n}\r\n\r\nLL qmi(LL a, LL b)\r\n{\r\n    LL res = 1;\r\n    while (b)\r\n    {\r\n        if (b & 1)\r\n            res = res * a;\r\n        b >>= 1;\r\n        a = a * a;\r\n    }\r\n\r\n    return res;\r\n}\r\nLL get_evuler(LL C)\r\n{\r\n    LL res = C;\r\n    for (LL i = 2; i <= C / i; i++)\r\n        if (C % i == 0)\r\n        {\r\n            while (C % i == 0)\r\n                C /= i;\r\n            res = res / i * (i - 1);\r\n        }\r\n    if (C > 1)\r\n        res = res / C * (C - 1);\r\n    return res;\r\n}\r\n\r\nLL qmi(LL a, LL b, LL p)\r\n{\r\n    LL res = 1;\r\n    while (b)\r\n    {\r\n        if (b & 1)\r\n            res = (LL)res * a % p;\r\n        b >>= 1;\r\n        a = (LL)a * a % p;\r\n    }\r\n\r\n    return res % p;\r\n}\r\n\r\nconst int N = 1e5 + 10, INF = 0x3f3f3f3f, Mod = 1e9 + 7;\r\n\r\n/*LL primes[N] , cnt;\r\nbool st[N];\r\n\r\nvoid get_primes(int n)\r\n{\r\n        st[1] = true;\r\n    for(int i = 2 ; i <= n ; i ++ )\r\n    {\r\n        if(!st[i]) primes[cnt ++ ] = i;\r\n        for(int j = 0 ; primes[j] <= n / i ; j ++ )\r\n        {\r\n            st[primes[j] * i] = true;\r\n            if(i % primes[j] == 0) break;\r\n        }\r\n    }\r\n}*/\r\n\r\nvoid solved()\r\n{\r\n    LL a, b, c, d;\r\n    cin >> a >> b >> c >> d;\r\n\r\n    vector<int> p1, p2;\r\n\r\n    for (int i = 1; i <= a / i; i++)\r\n        if (a % i == 0)\r\n        {\r\n            p1.push_back(i);\r\n            if (i != a / i)\r\n                p1.push_back(a / i);\r\n        }\r\n    for (int i = 1; i <= b / i; i++)\r\n        if (b % i == 0)\r\n        {\r\n            p2.push_back(i);\r\n            if (i != b / i)\r\n                p2.push_back(b / i);\r\n        }\r\n\r\n    for (auto i : p1)\r\n        for (auto j : p2)\r\n        {\r\n            LL k = i * j;\r\n            LL x = (a + k) / k * k;\r\n            if (x > c)\r\n                continue;\r\n            LL y = a * b / k;\r\n            y = (b + y) / y * y;\r\n            if (y <= d)\r\n            {\r\n                cout << x << \" \" << y << endl;\r\n                return;\r\n            }\r\n        }\r\n\r\n    cout << \"-1 -1\\n\";\r\n}\r\n\r\nint main()\r\n{\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n\r\n    int t = 1;\r\n    cin >> t;\r\n\r\n    while (t--)\r\n        solved();\r\n\r\n    return 0;\r\n}\r\n"
}