{
    "id": 224647126,
    "contestId": 1511,
    "creationTimeSeconds": 1695401834,
    "relativeTimeSeconds": 4934,
    "problem": {
        "contestId": 1511,
        "index": "E",
        "name": "Colorings and Dominoes",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1511,
        "members": [
            {
                "handle": "Alx"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1695396900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 8294400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n \r\n#define int long long\r\n#define all(x) (x).begin(),(x).end()\r\n#define pb push_back\r\n\r\nconst int MOD = 998244353;\r\n\r\nint add(int x, int y) {\r\n    return (x + y) % MOD;\r\n}\r\n\r\nint mult(int x, int y) {\r\n    return (x * y) % MOD;\r\n}\r\n\r\nint sub(int x, int y) {\r\n    return (x - y + MOD) % MOD;\r\n}\r\n\r\n\r\nint power(int x, int y)\r\n{\r\n \r\n    // Initialize answer\r\n    int res = 1;\r\n \r\n    // Check till the number becomes zero\r\n    while (y > 0) {\r\n \r\n        // If y is odd, multiply x with result\r\n        if (y % 2 == 1)\r\n            res = (res * x) % MOD;\r\n \r\n        // y = y/2\r\n        y = y >> 1;\r\n \r\n        // Change x to x^2\r\n        x = (x * x) % MOD;\r\n    }\r\n    return res % MOD;\r\n}\r\n\r\nint inv(int x){\r\n    return power(x, MOD - 2);\r\n}\r\n\r\nvoid solve() {\r\n    int n, m; cin >> n >> m;\r\n    int a[n][m];\r\n    int pw[n * m + 1];\r\n    pw[0] = 1;\r\n    for(int i = 1; i <= n * m; ++i) {\r\n        pw[i] = mult(pw[i - 1], 2); \r\n    }\r\n    int w = 0;\r\n    for(int i = 0; i < n; ++i) {\r\n        string s; cin >> s;\r\n        for(int j = 0; j < m; ++j) {\r\n            a[i][j] = s[j] == 'o';\r\n            w += a[i][j];\r\n        }\r\n    }\r\n    if(w == 0) {\r\n        cout << \"0\\n\";\r\n        return;\r\n    }\r\n    int oddPref[w / 2 + 5];\r\n    oddPref[0] = 0;\r\n    for(int i = 1; w - 1 - i * 2 >= 0; ++i) {\r\n        oddPref[i] = add(oddPref[i - 1], pw[w - 1 - 2 * i]);\r\n    }\r\n    int evenPref[w / 2 + 5];\r\n    evenPref[0] = 0;\r\n    for(int i = 1; w - i * 2 >= 0; ++i) {\r\n        evenPref[i] = add(evenPref[i - 1], pw[w - 2 * i]);\r\n    }\r\n    int ans = 0;\r\n    for(int i = 0; i < n; ++i) {\r\n        int cur = 0;\r\n        for(int j = 0; j < m; ++j) {\r\n            if(a[i][j]) {\r\n                //left\r\n                int amt = cur / 2;\r\n                ans = add(ans, oddPref[amt]);\r\n                if(cur % 2) {\r\n                    ans = add(ans, pw[w - cur - 1]);\r\n                }\r\n                //right\r\n                if(j < m - 1 && a[i][j + 1]) {\r\n                    amt = (cur + 1) / 2;\r\n                    ans = add(ans, oddPref[amt]);\r\n                    if(cur % 2 == 0) {\r\n                        ans = add(ans, pw[w - cur - 2]);\r\n                    }\r\n                }\r\n                ++cur;\r\n            } else {\r\n                cur = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    for(int j = 0; j < m; ++j) {\r\n        int cur = 0;\r\n        for(int i = 0; i < n; ++i) {\r\n            if(a[i][j]) {\r\n                //up\r\n                int amt = cur / 2;\r\n                ans = add(ans, oddPref[amt]);\r\n                if(cur % 2) {\r\n                    ans = add(ans, pw[w - cur - 1]);\r\n                }\r\n                //down\r\n                if(i < n - 1 && a[i + 1][j]) {\r\n                    amt = (cur + 1) / 2;\r\n                    ans = add(ans, oddPref[amt]);\r\n                    if(cur % 2 == 0) {\r\n                        ans = add(ans, pw[w - cur - 2]);\r\n                    }\r\n                }\r\n                ++cur;\r\n            } else {\r\n                cur = 0;\r\n            }\r\n        }\r\n    }\r\n    cout << mult(ans, inv(2)) << \"\\n\";\r\n}\r\n\r\nsigned main(){\r\n  ios_base::sync_with_stdio(0);\r\n  cin.tie(0);\r\n  int t = 1;// cin >> t;\r\n  while(t--) {\r\n    solve();\r\n  }\r\n}"
}