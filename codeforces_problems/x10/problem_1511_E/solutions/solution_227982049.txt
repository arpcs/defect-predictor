{
    "id": 227982049,
    "contestId": 1511,
    "creationTimeSeconds": 1697176541,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1511,
        "index": "E",
        "name": "Colorings and Dominoes",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1511,
        "members": [
            {
                "handle": "Sastatourist2004"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1618238100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 14438400,
    "source": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n\r\n\r\n#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\r\n#define MOD 1000000007\r\n#define MOD1 998244353\r\n#define INF 1e18\r\n#define nline \"\\n\"\r\n#define pb push_back\r\n#define ppb pop_back\r\n#define ff first\r\n#define ss second\r\n#define PI 3.141592653589793238462\r\n#define set_bits __builtin_popcountll\r\n#define sz(x) ((ll)(x).size())\r\n#define all(x) (x).begin(), (x).end()\r\n\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double lld;\r\n\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x) cerr << #x <<\" \"; _print(x); cerr << endl;\r\n#else\r\n#define debug(x)\r\n#endif\r\n\r\nvoid _print(ll t) {cerr << t;}\r\nvoid _print(int t) {cerr << t;}\r\nvoid _print(string t) {cerr << t;}\r\nvoid _print(char t) {cerr << t;}\r\nvoid _print(lld t) {cerr << t;}\r\nvoid _print(double t) {cerr << t;}\r\nvoid _print(ull t) {cerr << t;}\r\n\r\ntemplate <class T, class V> void _print(pair <T, V> p);\r\ntemplate <class T> void _print(vector <T> v);\r\ntemplate <class T> void _print(set <T> v);\r\ntemplate <class T, class V> void _print(map <T, V> v);\r\ntemplate <class T> void _print(multiset <T> v);\r\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\r\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\n\r\n/*\r\nFigure out every implementation detail and then only start coding\r\n*/\r\n\r\nconst ll MAX = 3e5+10;\r\nconst ll M = 998244353;\r\n\r\nll dp1[MAX],dp2[MAX];\r\n\r\nll binpow(ll a, ll n){\r\n    a %= M;\r\n    ll res = 1;\r\n    while(n > 0){\r\n        if(n&1){\r\n            res = (res*a)%M;\r\n        }\r\n        n >>= 1;\r\n        a = (a*a)%M;\r\n    }\r\n    res %= M;\r\n    return res;\r\n}\r\n\r\nvoid solve(){\r\n    const ll inv = binpow(2,M-2);\r\n    for(ll i=1; i<MAX; i++){\r\n        dp1[i] = (dp1[i-1] + i/2 * binpow(inv,i))%M;\r\n    }\r\n    for(ll i=1; i<MAX; i++){\r\n        dp2[i] = (dp2[i-1] + ((i/2 * i)%M * binpow(inv,i))%M)%M;\r\n    }\r\n    auto ans = [&](ll len){\r\n        ll ret = 0;\r\n        ret = (ret+ len/2 )%M;\r\n        if(len >= 2){\r\n            ret = (ret + dp1[len-1]*binpow(2,len))%M;\r\n        }\r\n        if(len >= 3){\r\n            ll to_add = ((dp1[len-2]*binpow(2,len-2))%M*(len-1))%M;\r\n            to_add = (to_add - dp2[len-2]*binpow(2,len-2))%M;\r\n            if(to_add < 0){\r\n                to_add += M;\r\n            }\r\n            ret = (ret + to_add)%M;\r\n        }\r\n        return ret;\r\n    };\r\n    ll sum = 0;\r\n    ll w = 0;\r\n    ll n,m; cin >> n >> m;\r\n    vector<string> grid(n);\r\n    for(ll i=0; i<n; i++){\r\n        cin >> grid[i];\r\n        w += count(all(grid[i]),'o');\r\n    }\r\n    debug(grid);\r\n    for(ll i=0; i<n; i++){\r\n        ll l = 0;\r\n        while(l < m){\r\n            if(grid[i][l] == '*'){\r\n                l++;\r\n            }\r\n            else{\r\n                ll r = l;\r\n                while(r+1<m && grid[i][r+1] == grid[i][r]){\r\n                    r++;\r\n                }\r\n                sum = (sum + ans(r-l+1)*binpow(2,w-r+l-1))%M;\r\n                l = r+1;\r\n            }\r\n        }\r\n    }\r\n    for(ll i=0; i<m; i++){\r\n        ll l=0;\r\n        while(l < n){\r\n            if(grid[l][i] == '*'){\r\n                l++;\r\n            }\r\n            else{\r\n                ll r = l;\r\n                while(r+1 < n && grid[r+1][i] == grid[r][i]){\r\n                    r++;\r\n                }\r\n                sum = (sum + ans(r-l+1)*binpow(2,w-r+l-1))%M;\r\n                l = r+1;\r\n            }\r\n        }\r\n    }\r\n    cout << sum << nline;\r\n    return;\r\n}\r\n\r\nint main() {\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"Error.txt\", \"w\", stderr);\r\n#endif\r\n    fastio();\r\n    solve();\r\n}"
}