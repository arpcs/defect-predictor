{
    "id": 225832289,
    "contestId": 505,
    "creationTimeSeconds": 1696023628,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 505,
        "index": "B",
        "name": "Mr. Kitayuta's Colorful Graph",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1400,
        "tags": [
            "dfs and similar",
            "dp",
            "dsu",
            "graphs"
        ]
    },
    "author": {
        "contestId": 505,
        "members": [
            {
                "handle": "TarekFarag"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1421586000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 530,
    "memoryConsumedBytes": 268390400,
    "source": "//                                          #Tarek #Mohamed #Farg\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define endl \"\\n\"\r\n#define all(vec) vec.begin(), vec.end()\r\n#define rall(vec) vec.rbegin(), vec.rend()\r\n#define yes cout << \"YES\\n\"\r\n#define no cout << \"NO\\n\"\r\n#define ONES __builtin_popcount\r\n#define after_dot(n) setprecision(n)\r\nint dx[] = {0, 1, -1, 0, -1, -1, 1, 1};\r\nint dy[] = {1, 0, 0, -1, 1, -1, 1, -1};\r\nvoid TAREK()\r\n{\r\n    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n    freopen(\"error.txt\", \"w\", stderr);\r\n#endif\r\n}\r\nconst int N = 1000 ;\r\n//============================================================Solve\r\n//vector<pair<int,int>> adj[N] ;\r\nvector<vector<pair<int,int>>> adj ;\r\nbool ok ;\r\nvoid dfs(int a ,int par , int b , int col )\r\n{\r\n    if(a == b) ok = 1;\r\n    for(auto p:adj[a])\r\n    {\r\n        if(p.first == par) continue;\r\n        if(p.second==col)\r\n        {\r\n            dfs(p.first,a,b,col) ;\r\n        }\r\n    }\r\n}\r\n\r\nvoid solve()\r\n{\r\n    int n , m , a  , b , c; cin >> n >> m ;\r\n    adj.resize(n+10) ;\r\n    set<int> col ;\r\n    while(m--)\r\n    {\r\n        cin >> a  >> b >> c;\r\n        adj[a].push_back({b, c}) ;\r\n        adj[b].push_back({a,c}) ;\r\n        col.insert(c) ;\r\n    }\r\n\r\n    int q  , ans;\r\n    cin >> q ;\r\n    while(q--)\r\n    {\r\n        cin >> a >> b ;\r\n        ans = 0 ;\r\n        for(auto i:col)\r\n        {\r\n            ok = 0 ;\r\n            dfs(a,0 , b,i) ;\r\n            if(ok)\r\n                ans++ ;\r\n        }\r\n        cout << ans << endl ;\r\n    }\r\n}\r\n\r\n//============================================================\r\n\r\nint main()\r\n{\r\n    TAREK() ;\r\n    ll T = 1 ;\r\n//    cin >> T ;\r\n    while(T--)\r\n    {\r\n        solve() ;\r\n    }\r\n    return 0 ;\r\n}"
}