{
    "id": 230423493,
    "contestId": 1097,
    "creationTimeSeconds": 1698613359,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1097,
        "index": "C",
        "name": "Yuhao and a Parenthesis",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1400,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1097,
        "members": [
            {
                "handle": "octopusPrime"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546613100
    },
    "programmingLanguage": "Java 8",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 0,
    "source": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.HashMap;\nimport java.util.Stack;\n\npublic class Solution {\n    public static void main(String[] args) throws IOException {\n        System.out.println(solve(System.in));\n    }\n\n    private static int solve(InputStream reader) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(reader));\n        int l = Integer.parseInt(br.readLine());\n        HashMap<Integer, Integer> map = new HashMap<>();\n        int result = 0;\n        while(l-- > 0) {\n            char[] s = br.readLine().toCharArray();\n            Stack<Character> c = new Stack();\n\n            for (int i = 0; i < s.length; i++) {\n                if (s[i] == ')' && c.size() > 0 && c.peek() == '(') {\n                    c.pop();\n                } else if (s[i] == ')' || s[i] == '('){\n                    c.push(s[i]);\n                }\n            }\n\n            int curr = c.size();\n            if (c.size() > 0) {\n                boolean foundStart = false;\n                boolean foundEnd = false;\n\n                while(!c.empty()) {\n                    char x = c.pop();\n                    if (x == ')') {\n                        foundEnd = true;\n                    } else if (x == '(') {\n                        foundStart = true;\n                    }\n                }\n\n                if (foundStart && foundEnd) {\n                    continue;\n                }\n                if (foundEnd) {\n                    curr = -curr;\n                }\n            }\n\n            int opp = map.getOrDefault(-curr, 0);\n            if (opp > 0) {\n                result +=1;\n                map.put(-curr, opp -1);\n            } else {\n                map.put(curr, map.getOrDefault(curr, 0) + 1);\n            }\n        }\n        return result;\n    }\n}"
}