{
    "id": 230456587,
    "contestId": 1097,
    "creationTimeSeconds": 1698650199,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1097,
        "index": "C",
        "name": "Yuhao and a Parenthesis",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1400,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1097,
        "members": [
            {
                "handle": "octopusPrime"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546613100
    },
    "programmingLanguage": "Java 8",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 248,
    "memoryConsumedBytes": 0,
    "source": "import java.io.*;\nimport java.util.*;\nimport java.text.*;\nimport java.math.*;\nimport java.util.regex.*;\n\npublic class Amit_Solution {\n\n    static Resp countParen(String s) {\n        Stack<Character> st = new Stack<>();\n        int left = 0;\n        for (char ch: s.toCharArray()) {\n            if (ch == '(') st.push('(');\n            else if (!st.empty()) st.pop();\n            else left++;\n        }\n        if (left == 0 && st.size() == 0) {\n            return new Resp(4, 0, 0);\n        } else if (left > 0 && st.size() > 0) {\n            return new Resp(3, 0, 0);\n        } else if (st.size() > 0) {\n            return new Resp(2, 0, st.size());\n        } else {\n            return new Resp(1, left, 0);\n        }\n    }\n    public static void main(String args[] ) throws Exception {\n        Scanner s = new Scanner(System.in);\n        int n = s.nextInt();\n        int ans = 0;\n        int bal = 0;\n        HashMap<Integer, Integer> left = new HashMap<>();\n        HashMap<Integer, Integer> right = new HashMap<>();\n        while(n > 0) {\n            Resp r = countParen(s.next());\n            if (r.isValid == 4) {\n                if (bal > 0) {\n                    ans++;\n                    bal--;\n                } else bal++;\n            } else if (r.isValid == 2) {\n                if (left.containsKey(r.right)) {\n                    ans++;\n                    int val = left.get(r.right);\n                    if (val == 1) left.remove(r.right);\n                    else left.put(r.right, val-1);\n                } else {\n                    int val = right.containsKey(r.right) ? right.get(r.right)+1 : 1;\n                    right.put(r.right, val);\n                }\n            } else if (r.isValid == 1) {\n                if (right.containsKey(r.left)) {\n                    ans++;\n                    int val = right.get(r.left);\n                    if (val == 1) right.remove(r.left);\n                    else right.put(r.left, val-1);\n                } else {\n                    int val = left.containsKey(r.left) ? left.get(r.left)+1 : 1;\n                    left.put(r.left, val);\n                }\n            }\n            n--;\n        }\n        System.out.println(ans);\n    }\n}\n\nclass Resp {\n    int isValid;\n    int left;\n    int right;\n    Resp(int a, int b, int c) {\n        isValid = a;\n        left = b;\n        right = c;\n    }\n\n}"
}