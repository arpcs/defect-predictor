{
    "id": 61927702,
    "contestId": 860,
    "creationTimeSeconds": 1570288322,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 860,
        "index": "E",
        "name": "Arkady and a Nobody-men",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2700,
        "tags": [
            "data structures",
            "dfs and similar",
            "trees"
        ]
    },
    "author": {
        "contestId": 860,
        "members": [
            {
                "handle": "Capitalist_Wang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1505653500
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 33689600,
    "source": "#include<bits/stdc++.h>\r\n#include<vector> \r\n#include<queue>\r\n#define R register\r\n#define rep(i,a,b) for(R int i=a ; i<=b ; ++i)\r\n#define dwn(i,a,b) for(R int i=a ; i>=b ; --i)\r\n#define go(i,u) for(R int i=head[u] ; i ; i=a[i].next)\r\n#define inf 0x7ffffffffffffff\r\n#define lowbit(x) (x&-x)\r\n#define ll long long\r\nusing namespace std;\r\n\r\ninline int read() {\r\n\tint res=0,f=1;char ch;\r\n\twhile(!isdigit(ch=getchar())) if(ch=='-') f=-1;\r\n\tdo {\r\n\t\tres=res*10+ch-'0';\r\n\t} while(isdigit(ch=getchar()));\r\n\treturn res*f;\r\n}\r\n\r\nconst int N=600005;\r\n\r\nstruct Edge {\r\n\tint next,to;\r\n}a[N];\r\n\r\nint sze,head[N];\r\n\r\ninline void insert(int u,int v) {\r\n\ta[++sze].next=head[u],a[sze].to=v,head[u]=sze;\r\n}\r\n\r\nint n;\r\nint c1[N],c2[N];\r\ninline void add_tag(int pos,int key) {\r\n\tfor(R int i=pos ; i<=n ; i+=lowbit(i)) c1[i]+=key;\r\n\tfor(R int i=pos ; i<=n ; i+=lowbit(i)) c2[i]+=key*(pos-1);\r\n}\r\ninline void add(int l,int r,int key) {\r\n\tadd_tag(l,key),add_tag(r+1,-key);\r\n}\r\ninline ll sum_tag(int pos) {\r\n\tll ans=0;\r\n\tfor(R int i=pos ; i ; i-=lowbit(i)) ans+=c1[i];\r\n\tans*=pos;\r\n\tfor(R int i=pos ; i ; i-=lowbit(i)) ans-=c2[i];\r\n\treturn ans;\r\n}\r\ninline ll sum(int l,int r) {\r\n\treturn sum_tag(r)-sum_tag(l-1);\r\n}\r\n\r\nint dep[N],size[N],son[N],f[N],top[N],seg[N],rev[N],rt;\r\n\r\nll ans[N];\r\n\r\nvoid dfs1(int u,int fa) {\r\n\tdep[u]=dep[fa]+1,f[u]=fa,size[u]=1;\r\n\tgo(i,u) {\r\n\t\tint v=a[i].to;\r\n\t\tdfs1(v,u);\r\n\t\tsize[u]+=size[v];\r\n\t\tif(size[v]>size[son[u]]) son[u]=v;\r\n\t}\r\n}\r\n\r\nvoid dfs2(int u) {\r\n\tif(son[u]) {\r\n\t\tseg[son[u]]=++seg[0];\r\n\t\trev[seg[0]]=son[u];\r\n\t\ttop[son[u]]=top[u];\r\n\t\tdfs2(son[u]);\r\n\t}\r\n\tgo(i,u) {\r\n\t\tint v=a[i].to;\r\n\t\tif(v==son[u]) continue ;\r\n\t\tseg[v]=++seg[0];\r\n\t\trev[seg[0]]=v;\r\n\t\ttop[v]=v;\r\n\t\tdfs2(v);\r\n\t}\r\n}\r\n\r\ninline void change(int x) {\r\n\twhile(top[x]) add(seg[top[x]],seg[x],1),x=f[top[x]];\r\n}\r\n\r\ninline void query(int x) {\r\n\tint y=f[x];\r\n\twhile(top[y]) ans[x]+=sum(seg[top[y]],seg[y]),ans[x]-=seg[y]-seg[top[y]]+1,y=f[top[y]];\r\n}\r\n\r\nqueue <int> q;\r\n\r\nint main() {\r\n\tn=read();\r\n\tint x;\r\n\trep(i,1,n) {\r\n\t\tif((x=read())==0) rt=i;\r\n\t\telse insert(x,i);\r\n\t}\r\n\tdfs1(rt,0);\r\n\tseg[0]=seg[rt]=1,rev[rt]=top[rt]=rt;\r\n\tdfs2(rt);\r\n\tint dn=0;\r\n\tq.push(rt);\r\n\twhile(!q.empty()) {\r\n\t\t++dn;\r\n\t\tqueue <int> s;\r\n\t\twhile(!s.empty()) s.pop();\r\n\t\twhile(dep[q.front()]==dn) {\r\n\t\t\tint u=q.front();q.pop(),s.push(u);\r\n\t\t\tgo(i,u) q.push(a[i].to);\r\n\t\t\tchange(u);\r\n\t\t}\r\n\t\twhile(!s.empty()) query(s.front()),s.pop();\r\n\t}\r\n\trep(i,1,n) printf(\"%lld\\n\",ans[i]);\r\n\treturn 0;\r\n}"
}