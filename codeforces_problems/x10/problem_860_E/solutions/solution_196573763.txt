{
    "id": 196573763,
    "contestId": 860,
    "creationTimeSeconds": 1678333567,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 860,
        "index": "E",
        "name": "Arkady and a Nobody-men",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2700,
        "tags": [
            "data structures",
            "dfs and similar",
            "trees"
        ]
    },
    "author": {
        "contestId": 860,
        "members": [
            {
                "handle": "leihonglongyin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1505653500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 56115200,
    "source": "#include<bits/stdc++.h>\r\n#define N 500005\r\nusing namespace std;\r\nint n,rt,dfn[N],d[N],top[N],fa[N],hs[N],son[N],st[N],tot,siz,f[N];\r\nlong long ans[N],asw;\r\nvector<int>v[N],s[N],V[N];\r\nvoid DFS(int u) {\r\n\tdfn[u]=++siz,s[d[u]].push_back(u);\r\n\tfor(auto i:v[u]) {\r\n\t\td[i]=d[u]+1,DFS(i),son[u]+=son[i];\r\n\t\tif(son[i]>son[hs[u]]) hs[u]=i;\r\n\t}\r\n}\r\nvoid Dfs(int u) {\r\n\ttop[u]=hs[fa[u]]==u?top[fa[u]]:u;\r\n\tfor(auto i:v[u]) Dfs(i);\r\n}\r\nvoid dfs(int u) {\r\n\tfor(auto i:v[u]) ans[i]+=ans[u],dfs(i);\r\n}\r\ninline int lca(int x,int y) {\r\n\twhile(top[x]!=top[y]) {\r\n\t\tif(d[top[x]]<d[top[y]]) swap(x,y);\r\n\t\tx=fa[top[x]];\r\n\t}\r\n\treturn d[x]<d[y]?x:y;\r\n}\r\ninline void add(int x,int y) {\r\n\tV[x].push_back(y);\r\n}\r\nvoid dfs1(int u) {\r\n\tfor(auto i:V[u]) dfs1(i),f[u]+=f[i];\r\n}\r\nvoid dfs2(int u,int p) {\r\n\tasw+=1ll*p*f[u];\r\n\tif(!V[u].size()) ans[u]=asw-1;\r\n\tfor(auto i:V[u]) {\r\n\t\tdfs2(i,d[i]-d[u]);\r\n\t}\r\n\tasw-=1ll*p*f[u],f[u]=0,V[u].clear();\r\n}\r\nint main() {\r\n\tscanf(\"%d\",&n);\r\n\tfor(int x,i=1; i<=n; i++) {\r\n\t\tscanf(\"%d\",fa+i);\r\n\t\tif(fa[i]) v[fa[i]].push_back(i);\r\n\t\telse rt=i;\r\n\t}\r\n\tDFS(rt),Dfs(rt),st[0]=rt;\r\n\tfor(int i=1; i<n; i++) if(s[i].size()) {\r\n\t\t\tfor(auto j:s[i]) {\r\n\t\t\t\tint LCA=lca(j,st[tot]);\r\n\t\t\t\twhile(dfn[st[tot]]>dfn[LCA]) add(st[tot-1],st[tot]),tot--;\r\n\t\t\t\tif(st[tot]!=LCA) st[++tot]=LCA;\r\n\t\t\t\tst[++tot]=j,f[j]=1;\r\n\t\t\t}\r\n\t\t\twhile(tot) add(st[tot-1],st[tot]),tot--;\r\n\t\t\tdfs1(rt),dfs2(rt,1);\r\n\t\t}\r\n\tdfs(rt);\r\n\tfor(int i=1; i<=n; i++) printf(\"%lld \",ans[i]);\r\n}"
}