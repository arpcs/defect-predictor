{
    "id": 227076051,
    "contestId": 1830,
    "creationTimeSeconds": 1696728935,
    "relativeTimeSeconds": 2735,
    "problem": {
        "contestId": 1830,
        "index": "B",
        "name": "The BOSS Can Count Pairs",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "math"
        ]
    },
    "author": {
        "contestId": 1830,
        "members": [
            {
                "handle": "joww"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1696726200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 20,
    "timeConsumedMillis": 717,
    "memoryConsumedBytes": 8601600,
    "source": "#include <algorithm>\r\n#include <iostream>\r\n#include <vector>\r\n\r\nusing int64 = long long;\r\n\r\nint64 solve() {\r\n    int n;\r\n    std::cin >> n;\r\n\r\n    std::vector<int> a(n), b(n);\r\n    for (int i = 0; i < n; i++) {\r\n        std::cin >> a[i];\r\n    }\r\n    for (int i = 0; i < n; i++) {\r\n        std::cin >> b[i];\r\n    }\r\n\r\n    std::vector<std::vector<int>> vec(n + 1);\r\n    for (int i = 0; i < n; i++) {\r\n        vec[a[i]].push_back(b[i]);\r\n    }\r\n    int64 ans = 0;\r\n    for (int i = 1; i <= n; i++) {\r\n        std::sort(vec[i].begin(), vec[i].end());\r\n        for (int j = 1; j <= i and j * i <= 2 * n; j++) {\r\n            int a = i, b = j;\r\n            if (vec[a].size() > vec[b].size()) {\r\n                std::swap(a, b);\r\n            }\r\n            auto it = vec[a].begin();\r\n            auto ed = vec[b].end();\r\n            while (it != vec[a].end()) {\r\n                int val = *it;\r\n                int cnt = 0;\r\n                while (it != vec[a].end() and *it == val) {\r\n                    it ++;\r\n                    cnt ++;\r\n                }\r\n                auto bg = std::lower_bound(vec[b].begin(), ed, i * j - val);\r\n                if (bg != ed and val + *bg == i * j) {\r\n                    ed = std::upper_bound(vec[b].begin(), ed, i * j - val);\r\n                    if (i == j and val == *bg) {\r\n                        ans += 1ll * cnt * (cnt - 1);\r\n                    } else if (i == j) {\r\n                        ans += 1ll * cnt * (ed - bg);\r\n                    } else {\r\n                        ans += 1ll * cnt * (ed - bg) * 2;\r\n                    }\r\n                }\r\n                ed = bg;\r\n            }\r\n        }\r\n    }\r\n    return ans / 2;\r\n} \r\n\r\nint main() {\r\n    std::cin.tie(nullptr)->sync_with_stdio(false);\r\n\r\n    int t;\r\n    std::cin >> t;\r\n\r\n    while (t--) {\r\n        std::cout << solve() << '\\n';\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n"
}