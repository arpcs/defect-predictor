{
    "id": 228456552,
    "contestId": 1830,
    "creationTimeSeconds": 1697478861,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1830,
        "index": "B",
        "name": "The BOSS Can Count Pairs",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "math"
        ]
    },
    "author": {
        "contestId": 1830,
        "members": [
            {
                "handle": "Grzmot"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1685284500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 9625600,
    "source": "//#pragma GCC optimize(\"Ofast,no-stack-protector,unroll-loops,fast-math\")\n//#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4.1,sse4.2,avx,avx2,popcnt,tune=native\")\n#include <bits/stdc++.h>\n\n#define mp make_pair\n#define fi first\n#define se second\n#define pb push_back\n#define all(x) (x).begin(),(x).end()\n\nusing namespace std;\n\ntypedef long long LL;\ntypedef unsigned long long uLL;\ntypedef pair<int, int> PII;\ntypedef vector < int > VI;\ntypedef double D;\n\nconst int MN = 300005, inf = 1000000005, mod = 998244353;\nconst LL INF = 1000000000000000005LL;\n\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n\nint los(int a, int b)\n{\n\treturn a + (rng() % (b - a + 1));\n}\n\n\nLL losL(LL a, LL b)\n{\n\tLL v = ((1LL * los(0, (1 << 30) - 1)) << 30) + (LL)los(0, (1 << 30) - 1);\n\treturn a + v % (b - a + 1LL);\n}\n\nLL pref[MN];\nLL fac[MN], rfac[MN], naw[MN];\n\nLL pot(LL a, LL b)\n{\n\tif(b == 0LL)\n\t\treturn 1LL;\n\tLL ret = pot(a, b >> 1);\n\tret = (ret * ret) % mod;\n\tif(b & 1LL)\n\t\tret = (ret * a) % mod;\n\treturn ret;\n}\n\nLL rev(LL x)\n{\n\treturn pot(x, mod - 2LL);\n}\n\nLL cat(int n)\n{\n\tLL res = fac[2 * n];\n\tres = (res * rfac[n + 1]) % mod;\n\tres = (res * rfac[n]) % mod;\n\treturn res;\n}\n\nvoid preproc()\n{\n\tfac[0] = 1LL;\n\tfor(int i = 1; i < MN; ++i)\n\t\tfac[i] = (fac[i - 1] * i) % mod;\n\trfac[MN - 1] = rev(fac[MN - 1]);\n\tfor(int i = MN - 1; i > 0; --i)\n\t\trfac[i - 1] = (rfac[i] * i) % mod;\n\tfor(int i = 0; i < MN; i += 2)\n\t{\n\t\tint n = (i >> 1);\n\t\tnaw[i] = cat(n);\n\t}\n}\n\nvoid solve()\n{\n\tint n, k;\n\tscanf(\"%d%d\", &n, &k);\n\tfor(int i = 1; i <= k; ++i)\n\t{\n\t\tLL hasz = losL(1, (LL)1e18);\n\t\tint l, r;\n\t\tscanf(\"%d%d\", &l, &r);\n\t\tpref[l] ^= hasz;\n\t\tpref[r + 1] ^= hasz;\n\t}\n\tmap < LL, int > ile;\n\tfor(int i = 1; i <= n; ++i)\n\t{\n\t\tpref[i] ^= pref[i - 1];\n\t\t++ile[pref[i]];\n\t}\n\tLL res = 1LL;\n\tfor(auto [hasz, cnt]: ile)\n\t\tres = (res * naw[cnt]) % mod;\n\tprintf(\"%lld\\n\", res);\n\tfor(int i = 1; i <= n + 1; ++i)\n\t\tpref[i] = 0LL;\n}\n\nint main()\n{\n\t\n\tpreproc();\n\tint t;\n\tscanf(\"%d\", &t);\n\twhile(t--)\n\t\tsolve();\n}\n"
}