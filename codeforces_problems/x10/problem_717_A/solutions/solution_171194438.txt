{
    "id": 171194438,
    "contestId": 717,
    "creationTimeSeconds": 1662527774,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 717,
        "index": "A",
        "name": "Festival Organization",
        "type": "PROGRAMMING",
        "rating": 2900,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 717,
        "members": [
            {
                "handle": "llzer"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1473584400
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 80,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 716800,
    "source": "#include<bits/stdc++.h>\r\n#define For(i,l,r) for(int i=(l);i<=(r);++i)\r\n#define ReFor(i,r,l) for(int i=(r);i>=(l);--i)\r\n#define I inline\r\nconst int N=210;\r\nconst int mod=1e9+7;\r\nconst int inv2=500000004;\r\nconst int inv5=400000003;\r\ntypedef long long ll;\r\nusing namespace std;\r\nint k;\r\nll l,r,ans,res_1;\r\nll s_1[N][N],fac[N],invfac[N],C[N][N];\r\nI ll qpow(ll a,ll b)\r\n{\r\n\tll res=1;\r\n\twhile(b)\r\n\t{\r\n\t\tif(b&1)\r\n\t\t\t(res*=a)%=mod;\r\n\t\t(a*=a)%=mod;\r\n\t\tb>>=1; \r\n\t}\r\n\treturn res;\r\n}\r\nstruct extension_field\r\n{\r\n\tll a,b;\r\n\tI void clear(){a=b=0;} \r\n\tI extension_field friend operator + (extension_field x,extension_field y)\r\n\t{\r\n\t\textension_field res;\r\n\t\tres.clear();\r\n\t\tres.a=x.a+y.a;\r\n\t\t(res.a)%=mod;\r\n\t\tres.b=x.b+y.b;\r\n\t\t(res.b)%=mod;\r\n\t\treturn res;\r\n\t}\r\n\tI extension_field friend operator - (extension_field x,extension_field y)\r\n\t{\r\n\t\textension_field res;\r\n\t\tres.clear(); \r\n\t\tres.a=x.a-y.a;\r\n\t\tif(res.a<0)\r\n\t\t\tres.a+=mod;\r\n\t\tres.a%=mod;\r\n\t\tres.b=x.b-y.b;\r\n\t\tif(res.b<0)\r\n\t\t\tres.b+=mod;\r\n\t\tres.b%=mod;\r\n\t\treturn res;\r\n\t}\r\n\tI extension_field friend operator * (extension_field x,extension_field y)\r\n\t{\r\n\t\textension_field res;\r\n\t\tres.clear();\r\n\t\tres.a=x.a*y.a;\r\n\t\tres.a%=mod;\r\n\t\t(res.a+=(5*x.b*y.b))%=mod;\r\n\t\tres.b=(x.a*y.b);\r\n\t\tres.b%=mod;\r\n\t\t(res.b+=(x.b*y.a))%=mod;\r\n\t\treturn res;\r\n\t}\r\n\tI extension_field friend operator / (extension_field x,extension_field y)\r\n\t{\r\n\t\textension_field res;\r\n\t\tres.clear();\r\n\t\tres.a=(x.a*y.a-5*x.b*y.b);\r\n\t\tif(res.a<0)\r\n\t\t\tres.a+=mod;\r\n\t\tres.a%=mod;\r\n\t\tres.b=(x.b*y.a-x.a*y.b);\r\n\t\tif(res.b<0)\r\n\t\t\tres.b+=mod;\r\n\t\tres.b%=mod;\r\n\t\tll base=y.a*y.a-5*y.b*y.b;\r\n\t\tif(base<0)\r\n\t\t\tbase+=mod;\r\n\t\tbase%=mod;\r\n\t\tll invbase=qpow(base,mod-2);\r\n\t\t(res.a*=invbase)%=mod;\r\n\t\t(res.b*=invbase)%=mod;\r\n\t\treturn res;\r\n\t}\r\n}A,B,a,b,base_A[N],base_B[N],base_a[N],base_b[N];\r\nI void init()\r\n{\r\n\ts_1[0][0]=1;\r\n\tFor(i,1,N-1)\r\n\t{\r\n\t\tFor(j,1,i)\r\n\t\t{\r\n\t\t\ts_1[i][j]=s_1[i-1][j-1];\r\n\t\t\t(s_1[i][j]+=((i-1)*s_1[i-1][j]))%=mod; \r\n\t\t}\r\n\t}\r\n\tC[0][0]=1;\r\n\tFor(i,1,N-1)\r\n\t{\r\n\t\tC[0][i]=1;\r\n\t\tC[i][0]=0;\r\n\t}\r\n\tFor(i,1,N-1)\r\n\t{\r\n\t\tFor(j,i,N-1)\r\n\t\t{\r\n\t\t\tC[i][j]=C[i-1][j-1];\r\n\t\t\t(C[i][j]+=C[i][j-1])%=mod; \r\n\t\t}\r\n\t}\r\n\tfac[0]=1;\r\n\tFor(i,1,N-1)\r\n\t{\r\n\t\tfac[i]=fac[i-1];\r\n\t\t(fac[i]*=i)%=mod;\r\n\t}\r\n\tinvfac[N-1]=qpow(fac[N-1],(mod-2)*1ll);\r\n\tReFor(i,N-2,0)\r\n\t{\r\n\t\tinvfac[i]=invfac[i+1];\r\n\t\t(invfac[i]*=(i+1))%=mod;\r\n\t}\r\n\tA.clear();\r\n\tB.clear();\r\n\ta.clear();\r\n\tb.clear();\r\n\tA.a=0;\r\n\tA.b=inv5;\r\n\tB.a=0;\r\n\tB.b=mod-inv5;\r\n\tB.b%=mod;\r\n\ta.a=inv2;\r\n\ta.b=inv2;\r\n\tb.a=inv2;\r\n\tb.b=mod-inv2;\r\n\tb.b%=mod;\r\n\tbase_A[0].clear();\r\n\tbase_B[0].clear();\r\n\tbase_a[0].clear();\r\n\tbase_b[0].clear();\r\n\tbase_A[0].a=1;\r\n\tbase_B[0].a=1;\r\n\tbase_a[0].a=1;\r\n\tbase_b[0].a=1; \r\n\tFor(i,1,N-1)\r\n\t{\r\n\t\tbase_A[i]=base_A[i-1]*A;\r\n\t\tbase_B[i]=base_B[i-1]*B;\r\n\t\tbase_a[i]=base_a[i-1]*a;\r\n\t\tbase_b[i]=base_b[i-1]*b; \r\n\t}\r\n\treturn;\r\n}\r\nI extension_field qpow(extension_field a,ll b)\r\n{\r\n\textension_field res;\r\n\tres.clear();\r\n\tres.a=1;\r\n\twhile(b)\r\n\t{\r\n\t\tif(b&1)\r\n\t\t\tres=res*a;\r\n\t\ta=a*a;\r\n\t\tb>>=1;\r\n\t}\r\n\treturn res;\r\n}\r\nI extension_field solve(ll l,ll r,extension_field x)\r\n{\r\n\tif(x.a==1 && x.b==0)\r\n\t{\r\n\t\t(x.a*=(r-l+1))%=mod;\r\n\t\t(x.b*=(r-l+1))%=mod;\r\n\t\treturn x;\r\n\t}\r\n\telse\r\n\t{\r\n\t\textension_field res;\r\n\t\tres=qpow(x,r+1)-qpow(x,l);\r\n\t\tx.a-=1;\r\n\t\tif(x.a<0)\r\n\t\t\tx.a+=mod;\r\n\t\tx.a%=mod;\r\n\t\tres=res/x;\r\n\t\treturn res;\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tinit();\r\n\tscanf(\"%d%lld%lld\",&k,&l,&r);\r\n\tl+=2;\r\n\tr+=2;\r\n\textension_field sum_1;\r\n\tsum_1.clear();\r\n\tint sgn;\r\n\tif(k&1)\r\n\t\tsgn=-1;\r\n\telse\r\n\t\tsgn=1;\r\n\tFor(j,0,k)\r\n\t{\r\n\t\textension_field sum_2;\r\n\t\tsum_2.clear();\r\n\t\tFor(t,0,j)\r\n\t\t{\r\n\t\t\textension_field sum_3,tmp;\r\n\t\t\tsum_3.clear();\r\n\t\t\ttmp.clear();\r\n\t\t\tsum_3=base_A[t];\r\n\t\t\tsum_3=sum_3*base_B[j-t];\r\n\t\t\t(sum_3.a*=C[t][j])%=mod;\r\n\t\t\t(sum_3.b*=C[t][j])%=mod;\r\n\t\t\ttmp=base_a[t];\r\n\t\t\ttmp=tmp*base_b[j-t];\r\n\t\t\tsum_3=sum_3*solve(l,r,tmp);\r\n\t\t\tsum_2=sum_2+sum_3;\r\n\t\t}\r\n\t\t(sum_2.a*=s_1[k][j])%=mod;\r\n\t\t(sum_2.b*=s_1[k][j])%=mod;\r\n\t\tif(sgn==-1)\r\n\t\t{\r\n\t\t\tsum_2.a*=sgn;\r\n\t\t\tsum_2.b*=sgn;\r\n\t\t\t(sum_2.a+=mod)%=mod;\r\n\t\t\t(sum_2.b+=mod)%=mod;\r\n\t\t}\r\n\t\tsgn*=(-1);\r\n\t\tsum_1=sum_1+sum_2; \r\n\t}\r\n\tans=sum_1.a;\r\n\tif(ans<0)\r\n\t\t(ans+=mod)%=mod;\r\n\t(ans*=invfac[k])%=mod;\r\n\tprintf(\"%lld\",ans);\r\n\treturn 0;\r\n}"
}