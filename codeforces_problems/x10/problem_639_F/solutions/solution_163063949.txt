{
    "id": 163063949,
    "contestId": 639,
    "creationTimeSeconds": 1657170782,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 639,
        "index": "F",
        "name": "Bear and Chemistry",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3300,
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 639,
        "members": [
            {
                "handle": "Tringmo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1459182900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 57856000,
    "source": "#pragma GCC optimize(3)\r\n#include<bits/stdc++.h>\r\n#define N 300010\r\n#define Pii pair<int,int>\r\n#define mp make_pair\r\n#define rep(i,l,r) for(int i=l;i<=r;i++)\r\n#define drep(i,r,l) for(int i=r;i>=l;i--)\r\nusing namespace std;\r\nint rd() {\r\n\tint res=0,f=1;char ch=getchar();\r\n\twhile(ch<'0'||ch>'9') {if(ch=='-') f*=-1;ch=getchar();}\r\n\twhile(ch>='0'&&ch<='9') res=(res<<1)+(res<<3)+(ch^48),ch=getchar();\r\n\treturn res*f;\r\n}\r\nint Q;\r\nnamespace part1 {\r\n\tint n,m,low[N],dfn[N],col[N],st[N];\r\n\tstruct edge {\r\n\t\tint to,nxt;\r\n\t}e[N<<1];\r\n\tint cnt=1,h[N];\r\n\tvoid add(int u,int v) {\r\n\t\te[++cnt]={v,h[u]},h[u]=cnt;\r\n\t\te[++cnt]={u,h[v]},h[v]=cnt;\r\n\t}\r\n\tvoid tarjan(int x,int fae) {\r\n\t\tdfn[x]=low[x]=++dfn[0],st[++st[0]]=x;\r\n\t\tfor(int i=h[x],v;i;i=e[i].nxt) if(i!=(fae^1)) {\r\n\t\t\tv=e[i].to;\r\n\t\t\tif(dfn[v]) low[x]=min(low[x],low[v]);\r\n\t\t\telse tarjan(v,i),low[x]=min(low[x],low[v]);\r\n\t\t}\r\n\t\tif(low[x]==dfn[x]) {\r\n\t\t\tcol[0]++;\r\n\t\t\twhile(st[st[0]+1]!=x) col[st[st[0]]]=col[0],st[0]--;\r\n\t\t}\r\n\t}\r\n\tvoid build() {\r\n\t\tfor(int i=1,u,v;i<=m;i++) {\r\n\t\t\tu=rd(),v=rd();\r\n\t\t\tadd(u,v); \r\n\t\t}\r\n\t\trep(i,1,n) if(!dfn[i]) tarjan(i,-1);\r\n\t}\r\n}\r\nnamespace part2 {\r\n\tmap<Pii,bool>vis;\r\n\tint n,dfn[N],dep[N],f[N][19];\r\n\tvector<int>G[N];\r\n\tvoid add(int u,int v) {\r\n\t\tif(u!=v&&!vis[mp(u,v)]) vis[mp(u,v)]=vis[mp(v,u)]=1,G[u].push_back(v),G[v].push_back(u);\r\n\t}\r\n\tvoid Deal_first(int x,int fat) {\r\n\t\tdep[x]=dep[fat]+1,dfn[x]=++dfn[0],f[x][0]=fat;\r\n\t\trep(i,1,18) f[x][i]=f[f[x][i-1]][i-1];\r\n\t\tfor(auto v:G[x]) if(v!=fat) Deal_first(v,x);\r\n\t}\r\n\tint LCA(int x,int y) {\r\n\t\tif(dep[x]<dep[y]) swap(x,y);\r\n\t\tdrep(i,18,0) if(dep[f[x][i]]>=dep[y]) x=f[x][i];\r\n\t\tif(x==y) return x;\r\n\t\tdrep(i,18,0) if(f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];\r\n\t\treturn f[x][0];\r\n\t}\r\n\tvoid build() {\r\n\t\tn=part1::col[0];\r\n\t\trep(x,1,part1::n) for(int i=part1::h[x],v;i;i=part1::e[i].nxt) {\r\n\t\t\tv=part1::e[i].to;\r\n\t\t\tadd(part1::col[x],part1::col[v]);\r\n\t\t}\r\n\t\trep(i,1,n) if(!dfn[i]) Deal_first(i,0);\r\n\t}\r\n}\r\nnamespace part3 {\r\n\tint ans,n,m,id[N*3],tot;\r\n\tint low[N],dfn[N],col[N],st[N];\r\n\tstruct edge {\r\n\t\tint to,nxt;\r\n\t}e[N<<1];\r\n\tint cnt,h[N];\r\n\tvoid add(int u,int v) {\r\n\t\te[++cnt]={v,h[u]},h[u]=cnt;\r\n\t\te[++cnt]={u,h[v]},h[v]=cnt;\r\n//\t\tcerr<<\"Edge \"<<u<<\" \"<<v<<endl;\r\n\t}\r\n\tvoid tarjan(int x,int fae) {\r\n\t\tdfn[x]=low[x]=++dfn[0],st[++st[0]]=x;\r\n\t\tfor(int i=h[x],v;i;i=e[i].nxt) if(i!=(fae^1)) {\r\n\t\t\tv=e[i].to;\r\n\t\t\tif(dfn[v]) low[x]=min(low[x],low[v]);\r\n\t\t\telse tarjan(v,i),low[x]=min(low[x],low[v]);\r\n\t\t}\r\n\t\tif(low[x]==dfn[x]) {\r\n\t\t\tcol[0]++;\r\n\t\t\twhile(st[st[0]+1]!=x) col[st[st[0]]]=col[0],st[0]--;\r\n\t\t}\r\n\t}\r\n\tint top;\r\n\tbool cmpdfn(int x,int y) {return part2::dfn[x]<part2::dfn[y];}\r\n\tvoid ins(int x) {\r\n\t\th[x]=0;\r\n\t\tint lc=part2::LCA(x,st[top]);\r\n\t\tif(lc==0) {\r\n\t\t\twhile(top>1) add(st[top],st[top-1]),top--;\r\n\t\t\ttop=0;\r\n\t\t}\r\n\t\tif(top==0) {st[++top]=x;return ;}\r\n\t\twhile(top>=2&&part2::dep[lc]<=part2::dep[st[top-1]]) add(st[top-1],st[top]),top--;\r\n\t\tif(lc!=st[top]) h[lc]=0,add(lc,st[top]),st[top]=lc;\r\n\t\tst[++top]=x;\r\n\t}\r\n\tint U[N],V[N];\r\n\tvoid build() {\r\n\t\ttop=0,cnt=1;\r\n\t\trep(i,1,tot) ins(id[i]);\r\n\t\twhile(top>1) add(st[top],st[top-1]),top--;\r\n\t\ttop=0;\r\n\t\trep(i,1,m) add(U[i],V[i]);\r\n\t}\r\n\tint b[N];\r\n\tbool solve() {\r\n\t\tn=rd(),m=rd();\r\n\t\ttot=0;\r\n\t\tfor(int i=1,x;i<=n;i++) {\r\n\t\t\tx=rd();\r\n\t\t\tid[++tot]=part1::col[(x+ans-1)%part1::n+1];\r\n\t\t\tb[i]=id[tot];\r\n\t\t}\r\n\t\tfor(int i=1,u,v;i<=m;i++) {\r\n\t\t\tu=(rd()+ans-1)%part1::n+1,v=(rd()+ans-1)%part1::n+1;\r\n\t\t\tu=part1::col[u],v=part1::col[v];\r\n\t\t\tid[++tot]=u,id[++tot]=v,U[i]=u,V[i]=v;\r\n\t\t}\r\n\t\tsort(id+1,id+tot+1);\r\n\t\ttot=unique(id+1,id+tot+1)-id-1;\r\n\t\tsort(id+1,id+tot+1,cmpdfn);\r\n\t\tbuild();\r\n\t\trep(i,1,tot) dfn[id[i]]=low[id[i]]=dfn[0]=col[0]=0;\r\n\t\trep(i,1,tot) if(!dfn[id[i]]) {\r\n\t\t\tif(i>1) return 0;\r\n\t\t\ttarjan(id[i],0);\r\n\t\t}\r\n\t\trep(i,2,n) if(col[b[i]]!=col[b[i-1]]) return 0;\r\n\t\treturn 1;\r\n\t}\r\n}\r\nint main() {\r\n//\tfreopen(\"lianhua.in\",\"r\",stdin);\r\n//\tfreopen(\"lianhua.out\",\"w\",stdout);\r\n\tpart1::n=rd(),part1::m=rd(),Q=rd();\r\n\tpart1::build();\r\n\tpart2::build();\r\n\trep(i,1,Q) {\r\n\t\tif(part3::solve()) puts(\"YES\"),part3::ans=(part3::ans+i)%part1::n;\r\n\t\telse puts(\"NO\");\r\n//\t\tcerr<<\"R \"<<part3::ans<<endl;\r\n\t}\r\n\treturn 0;\r\n}"
}