{
    "id": 168447150,
    "contestId": 639,
    "creationTimeSeconds": 1660608581,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 639,
        "index": "F",
        "name": "Bear and Chemistry",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3300,
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 639,
        "members": [
            {
                "handle": "luogu_bot5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1459182900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 77,
    "timeConsumedMillis": 1076,
    "memoryConsumedBytes": 56524800,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\nint n,m,q;\nint bcc[300005],U[300005],V[300005];\nnamespace Init{\n\tint ver[600005],ne[600005],head[300005],tot=1;\n\tinline void link(int x,int y){\n\t\tver[++tot]=y;\n\t\tne[tot]=head[x];\n\t\thead[x]=tot;\n\t}\n\tint dfn[300005],low[300005],cnt;\n\tint stk[300005],top,all;\n\tvoid tarjan(int x,int fi){\n\t\tdfn[x]=low[x]=++cnt;stk[++top]=x;\n\t\tfor(int i=head[x];i;i=ne[i]){\n\t\t\tint u=ver[i];\n\t\t\tif(i==fi)continue;\n\t\t\tif(!dfn[u]){\n\t\t\t\ttarjan(u,i^1);low[x]=min(low[x],low[u]);\n\t\t\t}\n\t\t\telse if(!bcc[u])low[x]=min(low[x],dfn[u]);\n\t\t}\n\t\tif(low[x]==dfn[x]){\n\t\t\tbcc[x]=++all;\n\t\t\twhile(stk[top]!=x)bcc[stk[top--]]=all;\n\t\t\ttop--;\n\t\t}\n\t}\n\tinline void main(){\n\t\tfor(int i=1;i<=m;i++)scanf(\"%d%d\",&U[i],&V[i]);\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tlink(U[i],V[i]);\n\t\t\tlink(V[i],U[i]);\n\t\t}\n\t\tfor(int i=1;i<=n;i++)if(!dfn[i])tarjan(i,0);\n\t}\n}\nnamespace Tarjan{\n\tint ver[600005],ne[600005],head[300005],tot=1;\n\tinline void link(int x,int y){\n\t\tver[++tot]=y;\n\t\tne[tot]=head[x];\n\t\thead[x]=tot;\n\t}\n\tint dfn[300005],low[300005],cnt;\n\tint stk[300005],top,all,bcc[300005];\n\tvoid tarjan(int x,int fi){\n\t\tdfn[x]=low[x]=++cnt;stk[++top]=x;\n\t\tfor(int i=head[x];i;i=ne[i]){\n\t\t\tint u=ver[i];\n//\t\t\tcout<<x<<\"->\"<<u<<endl;\n\t\t\tif(i==fi)continue;\n\t\t\tif(!dfn[u]){\n\t\t\t\ttarjan(u,i^1);low[x]=min(low[x],low[u]);\n\t\t\t}\n\t\t\telse if(!bcc[u])low[x]=min(low[x],dfn[u]);\n\t\t}\n\t\tif(low[x]==dfn[x]){\n\t\t\tbcc[x]=++all;\n\t\t\twhile(stk[top]!=x)bcc[stk[top--]]=all;\n\t\t\ttop--;\n\t\t}\n\t}\n}\nnamespace VirTree{\n\tint ver[600005],ne[600005],head[300005],tot=1;\n\tinline void link(int x,int y){\n\t\tver[++tot]=y;\n\t\tne[tot]=head[x];\n\t\thead[x]=tot;\n\t}\n\tint siz[300005],son[300005],fa[300005],dep[300005];\n\tint col[300005];\n\tvoid dfs1(int x,int fi,int Top){\n\t\tdep[x]=dep[fi]+1;fa[x]=fi;col[x]=Top;siz[x]=1;\n\t\tfor(int i=head[x];i;i=ne[i]){\n\t\t\tint u=ver[i];\n\t\t\tif(u==fi)continue;\n\t\t\tdfs1(u,x,Top);siz[x]+=siz[u];\n\t\t\tif(siz[son[x]]<siz[u])son[x]=u;\n\t\t}\n\t}\n\tint dfn[600005],cnt,top[300005];\n\tvoid dfs2(int x,int fi){\n\t\tdfn[x]=++cnt;top[x]=fi;\n\t\tif(son[x])dfs2(son[x],fi);\n\t\tfor(int i=head[x];i;i=ne[i]){\n\t\t\tint u=ver[i];\n\t\t\tif(u==fa[x]||u==son[x])continue;\n\t\t\tdfs2(u,u);\n\t\t}\n\t\tdfn[x+n]=++cnt;\n\t}\n\tinline void main(){\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tU[i]=bcc[U[i]];V[i]=bcc[V[i]];\n\t\t\tif(U[i]==V[i])continue;\n\t\t\tlink(U[i],V[i]);link(V[i],U[i]);\n\t\t}\n\t\tfor(int i=1;i<=Init::all;i++)if(!col[i])dfs1(i,0,i);\n\t\tfor(int i=1;i<=Init::all;i++)if(!top[i])dfs2(i,i);\n\t}\n\tinline int lca(int x,int y){\n\t\twhile(top[x]!=top[y]){\n\t\t\tif(dep[top[x]]>dep[top[y]])x=fa[top[x]];\n\t\t\telse y=fa[top[y]];\n\t\t}\n\t\treturn dep[x]>dep[y]?y:x;\n\t}\n\tinline bool cmp(int x,int y){\n\t\treturn dfn[x]<dfn[y];\n\t}\n\tbool vis[300005];\n\tinline bool check(vector<int> S,vector<pair<int,int> > E){\n\t\tvector<int> tmp=S;\n\t\tfor(auto it:E)tmp.push_back(it.first),tmp.push_back(it.second);\n\t\tsort(tmp.begin(),tmp.end());\n\t\ttmp.erase(unique(tmp.begin(),tmp.end()),tmp.end());\n\t\tsort(tmp.begin(),tmp.end(),cmp);\n\t\tfor(auto it:tmp)vis[it]=1;\n\t\tvector<int> Tmp=tmp;\n\t\tfor(int i=1;i<tmp.size();i++){\n\t\t\tint lc=lca(tmp[i-1],tmp[i]);\n\t\t\tif(lc&&!vis[lc])Tmp.push_back(lc),vis[lc]=1;\n\t\t}\n\t\ttmp=Tmp;\n\t\tfor(auto it:Tmp)tmp.push_back(it+n);\n\t\tsort(tmp.begin(),tmp.end(),cmp);\n\t\tvector<int> stk;\n\t\tfor(auto it:tmp){\n\t\t\tif(it<=n){\n\t\t\t\tif(!stk.empty()){\n\t\t\t\t\tTarjan::link(stk.back(),it);\n\t\t\t\t\tTarjan::link(it,stk.back());\n\t\t\t\t}\n\t\t\t\tstk.push_back(it);\n\t\t\t}\n\t\t\telse stk.pop_back();\n\t\t}\n\t\tfor(auto it:E){\n\t\t\tTarjan::link(it.first,it.second);\n\t\t\tTarjan::link(it.second,it.first);\n\t\t}\n\t\tfor(auto it:Tmp)if(!Tarjan::dfn[it])Tarjan::tarjan(it,0);\n\t\tbool flag=1;\n\t\tfor(auto it:S)if(Tarjan::bcc[it]!=Tarjan::bcc[S[0]])flag=0;\n//\t\tfor(auto it:S)cout<<Tarjan::bcc[it]<<\" \";cout<<endl;\n\t\tfor(auto it:Tmp)Tarjan::head[it]=0;Tarjan::tot=1;\n\t\tfor(auto it:Tmp)Tarjan::bcc[it]=0;Tarjan::all=0;\n\t\tfor(auto it:Tmp)Tarjan::dfn[it]=0;\n\t\tfor(auto it:Tmp)Tarjan::low[it]=0;Tarjan::cnt=0;\n\t\tfor(auto it:Tmp)vis[it]=0;\n\t\treturn flag;\n\t}\n}\nint ans;\nint main(){\n\tscanf(\"%d%d%d\",&n,&m,&q);\n\tInit::main();\n\tVirTree::main();\n\tfor(int t=1;t<=q;t++){\n\t\tint v,e;scanf(\"%d%d\",&v,&e);\n\t\tvector<int> V;vector<pair<int,int> > E;\n\t\tfor(int i=1;i<=v;i++){\n\t\t\tint x;scanf(\"%d\",&x);\n\t\t\tV.push_back(bcc[(x+ans-1)%n+1]);\n\t\t}\n\t\tfor(int i=1;i<=e;i++){\n\t\t\tint x,y;scanf(\"%d%d\",&x,&y);x=bcc[(x+ans-1)%n+1];y=bcc[(y+ans-1)%n+1];\n\t\t\tif(x!=y)E.push_back(make_pair(x,y));\n\t\t}\n\t\tbool flag=VirTree::check(V,E);ans=(ans+flag*t)%n;\n\t\tputs(flag?\"YES\":\"NO\");\n\t}\n\n\n\n\treturn 0;\n}\n\n\n\n\n"
}