{
    "id": 167698672,
    "contestId": 639,
    "creationTimeSeconds": 1660099358,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 639,
        "index": "F",
        "name": "Bear and Chemistry",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3300,
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 639,
        "members": [
            {
                "handle": "Zimse."
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1459182900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 100249600,
    "source": "/********************************\r\n*FileName:\r\n*Author: Zimse\r\n*Data:\r\n*Description:\r\n*Other:\r\n********************************/\r\n\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <cstring>\r\n#include <vector>\r\n#include <cmath>\r\n#include <set>\r\n#include <map>\r\n#include <queue>\r\n#include <stack>\r\n#include <iostream>\r\n#include <cstdlib>\r\n#include <ctime>\r\n#include <cctype>\r\n\r\n#define gc getchar\r\n#define pc putchar\r\n#define yes _Yes()\r\n#define no _No()\r\n#define ll long long\r\n//#define int long long\r\n//#define M ((L+R)/2)\r\n//#define Lid (id<<1)\r\n//#define Rid (Lid|1)\r\n//#define Lid ch[id][0]\r\n//#define Rid ch[id][1]\r\n\r\nusing namespace std;\r\n\r\nconst int Mod=998244353;//1000000007;\r\ninline int read(){int x=0,y=1;char c=gc();while(c<48||c>57){if(c==45)y=-1;c=gc();}while(c>=48&&c<=57)x=x*10+c-48,c=gc();return x*y;}\r\ninline void write(int x){if(x<0)pc(45),x=-x;if(x>=10)write(x/10);pc(48+x%10);return;}\r\ninline void _Yes(){pc(89),pc(101),pc(115),pc(10);return;}\r\ninline void _No(){pc(78),pc(111),pc(10);return;}\r\ninline void _ck(bool x){x?yes:no;return;}\r\ninline void write_(int x){write(x),pc(32);return;}\r\ninline void _write(int x){write(x),pc(10);return;}\r\ninline void ifile(const char str[]){freopen(str,\"r\",stdin);return;}\r\ninline void ofile(const char str[]){freopen(str,\"w\",stdout);return;}\r\ninline void cfile(){fclose(stdin),fclose(stdout);return;}\r\ninline ll fpow(ll x,ll y){ll res=1ll;while(y){if(y&1ll)res=res*x%Mod;x=x*x%Mod,y/=2ll;}return res;}\r\ninline ll inv(ll x){return fpow(x,Mod-2);}\r\ninline int _abs(int x){return x<0?-x:x;}\r\ninline void addmod(int& x,int y){(x+=y)%=Mod;return;}\r\ninline void _max(int& x,int y){if(y>x)x=y;return;}\r\ninline void _min(int& x,int y){if(y<x)x=y;return;}\r\n\r\nconst int N=1e6+7;\r\nconst int INF=1000114514;\r\n\r\nint n,m,q,hd[N],nxt[N],to[N],ec=1;\r\nint dfn[N],Time,low[N],stk[N],top,col[N],Col[N],cnt,Cnt;\r\nint fa[N],dep[N],sz[N],son[N],Dfn[N],Top[N];\r\nint vis[N],p[N],pcnt,qu[N];\r\n\r\nvector<int> g[N],G[N];\r\n\r\nstruct node{\r\n    int x,y;\r\n    node(int x=0,int y=0):x(x),y(y){}\r\n    bool operator < (const node& _)const{return y<_.y;}\r\n}a[N];\r\n\r\ninline void add_edge(int u,int v){\r\n    nxt[++ec]=hd[u],hd[u]=ec,to[ec]=v;\r\n    return;\r\n}\r\n\r\nvoid tarjan(int u,int from){\r\n    dfn[u]=low[u]=++Time,stk[++top]=u;\r\n    for(int i=hd[u],v;i;i=nxt[i]){\r\n        v=to[i];\r\n        if(!dfn[v]){\r\n            tarjan(v,i);\r\n            if(dfn[u]<low[v]){\r\n                ++cnt;\r\n                while(stk[top+1]^v)col[stk[top--]]=cnt;\r\n            }\r\n        }\r\n        if(i^from^1)low[u]=min(low[u],low[v]);\r\n    }\r\n    if(!from){\r\n    \t++cnt;\r\n    \twhile(top)col[stk[top--]]=cnt;\r\n\t}\r\n    return;\r\n}\r\n\r\nvoid Tarjan(int u,int from){\r\n\tdfn[u]=low[u]=++Time,stk[++top]=u;\r\n\tfor(unsigned i=0;i<G[u].size();i++){\r\n\t\tint v=G[u][i];\r\n\t\tif(!dfn[v]){\r\n\t\t\tTarjan(v,u);\r\n\t\t\tif(dfn[u]<low[v]){\r\n\t\t\t\t++Cnt;\r\n\t\t\t\twhile(stk[top+1]^v)Col[stk[top--]]=Cnt;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(v^from)low[u]=min(low[u],low[v]);\r\n\t}\r\n\tif(!from){\r\n\t\t++Cnt;\r\n\t\twhile(top)Col[stk[top--]]=Cnt;\r\n\t}\r\n\treturn;\r\n}\r\n\r\nvoid dfs0(int u,int from){\r\n    fa[u]=from,sz[u]=1,dep[u]=dep[from]+1;\r\n    for(unsigned i=0;i<g[u].size();i++){\r\n        int v=g[u][i];\r\n        if(v==from)continue;\r\n        dfs0(v,u),sz[u]+=sz[v];\r\n        if(sz[son[u]]<sz[v])son[u]=v;\r\n    }\r\n    return;\r\n}\r\n\r\nvoid dfs1(int u,int t){\r\n    Dfn[u]=++Time,Top[u]=t;\r\n    if(son[u])dfs1(son[u],t);\r\n    for(unsigned i=0;i<g[u].size();i++){\r\n        int v=g[u][i];\r\n        if(v==fa[u]||v==son[u])continue;\r\n        dfs1(v,v);\r\n    }\r\n    return;\r\n}\r\n\r\ninline int getlca(int x,int y){\r\n    while(Top[x]^Top[y]){\r\n        if(dep[Top[x]]<dep[Top[y]])swap(x,y);\r\n        x=fa[Top[x]];\r\n    }\r\n    return dep[x]<dep[y]?x:y;\r\n}\r\n\r\ninline void link(int u,int v){\r\n\tif(!u||!v||u==v)return;\r\n//\tprintf(\"( %d <-> %d )\\n\",u,v);\r\n\tif(!vis[u])vis[u]=1,p[++pcnt]=u;\r\n\tif(!vis[v])vis[v]=1,p[++pcnt]=v;\r\n    G[u].push_back(v),G[v].push_back(u);\r\n    return;\r\n}\r\n\r\nsigned main(){\r\n\tn=read(),m=read(),q=read();\r\n    for(int i=1,u,v;i<=m;i++)u=read(),v=read(),add_edge(u,v),add_edge(v,u);\r\n    for(int i=1;i<=n;i++)if(!dfn[i]){\r\n    \ttarjan(i,0);\r\n    \tg[0].push_back(cnt); \r\n\t}\r\n\tTime=0;\r\n    for(int u=1;u<=n;u++){\r\n//    \tprintf(\"col[%d]=%d\\n\",u,col[u]);\r\n    \tdfn[u]=0;\r\n    \tfor(int i=hd[u],v;i;i=nxt[i]){\r\n    \t\tv=to[i];\r\n    \t\tif(col[u]!=col[v])g[col[u]].push_back(col[v]);\r\n\t\t}\r\n\t}\r\n    dfs0(0,0);\r\n    dfs1(0,0);\r\n    while(q--){\r\n        int V=read(),E=read(),_V=V;\r\n        for(int i=1,x;i<=V;i++)x=col[read()],a[i]=node(x,Dfn[x]),qu[i]=x;\r\n        while(E--){\r\n        \tint u=col[read()],v=col[read()];\r\n        \tlink(u,v),a[++V]=node(u,Dfn[u]),a[++V]=node(v,Dfn[v]);\r\n\t\t}\r\n        sort(a+1,a+V+1),top=0;\r\n        stk[++top]=a[1].x;\r\n        for(int i=2,x,lca;i<=V;i++){\r\n            x=a[i].x,lca=getlca(x,a[i-1].x);\r\n            while(top>1&&dep[stk[top-1]]>=dep[lca])link(stk[top],stk[top-1]),--top;\r\n            link(lca,stk[top]),stk[top]=lca,stk[++top]=x;\r\n        }\r\n        for(int i=1;i<top;i++)link(stk[i],stk[i+1]);\r\n\t\t\r\n\t\ttop=0,Tarjan(qu[1],0);\r\n\t\tint tag=1;\r\n//\t\tfor(int i=1;i<=_V;i++)printf(\"Col[%d]=%d\\n\",qu[i],Col[qu[i]]);\r\n\t\tfor(int i=2;i<=_V;i++)if(Col[qu[i]]!=Col[qu[1]]){\r\n\t\t\ttag=0;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tif(tag)printf(\"YES\\n\");\r\n\t\telse printf(\"NO\\n\");\r\n\t\t\r\n\t\tp[0]=qu[1];\r\n\t\tfor(int i=0;i<=pcnt;i++){\r\n\t\t\tCol[p[i]]=dfn[p[i]]=vis[p[i]]=0,G[p[i]].resize(0);\r\n\t\t}\r\n\t\tpcnt=0;\r\n    }\r\n\treturn 0;\r\n}\r\n"
}