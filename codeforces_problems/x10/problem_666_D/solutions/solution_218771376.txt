{
    "id": 218771376,
    "contestId": 666,
    "creationTimeSeconds": 1692004188,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "D",
        "name": "Chain Reaction",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 3000,
        "tags": [
            "brute force",
            "geometry"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "xkcdjerry"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 24,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "// LUOGU_RID: 120857038\n#include <cstdio>\n#include <algorithm>\n#include <initializer_list>\n//\u4e0d\u59a8\u5047\u8bbe\u5de6\u4e0b\u89d2\u7531\u6cbfy\u79fb\u52a8\u5f97\u5230\uff0c\u6cbfx\u5f97\u5230\u4ea4\u6362xy\u5373\u53ef\n//\u679a\u4e3e\u5de6\u4e0b\u89d2\u662f\u54ea\u4e2a\u7684x\u5750\u6807\n//\u679a\u4e3e\u5de6\u4e0a\u89d2\u548c\u53f3\u4e0b\u89d2\u5bf9\u5e94\u7684\u70b9\n//\u5982\u679c\u4efb\u4f55\u4e00\u4e2a\u79fb\u52a8\u65b9\u5411\u548c\u8fb9\u5782\u76f4\u76f4\u63a5\u786e\u5b9a\nint x[5],y[5],ansx[5],ansy[5],ans=0x3f3f3f3f;\nvoid work()\n{\n    for(int yi=0;yi<4;yi++) for(int yj=0;yj<yi;yj++) if(y[yi]!=y[yj])\n    {\n        int a= y[yi]>y[yj]?y[yi]-y[yj]:y[yj]-y[yi];\n        int px[70],p=0;\n        for(int xi=0;xi<4;xi++) for(int xj=xi;xj<4;xj++)\n            for(auto k:{0,-a,-2*a,1,-a+1,2*a+1})\n                px[p++]=(x[xi]+x[xj]+k)/2;\n        for(int i=0;i<p;i++)\n        {\n            int idx[4]={0,1,2,3},nx=px[i];\n            do\n            {\n                int dis=0;\n                int tx[4]={nx,nx,nx+a,nx+a},ty[4]={y[yi],y[yj],y[yi],y[yj]};\n                for(int j=0,v;j<4;j++)\n                {\n                    if(tx[j]!=x[idx[j]]&&ty[j]!=y[idx[j]]) goto nope;\n                    if((v=abs(tx[j]-x[idx[j]])+abs(ty[j]-y[idx[j]]))>dis) dis=v;\n                }\n                if(dis<ans)\n                {\n                    ans=dis;\n                    for(int j=0;j<4;j++) ansx[idx[j]]=tx[j],ansy[idx[j]]=ty[j];\n                }\n                nope:;\n            }while(std::next_permutation(idx,idx+4));\n        }\n    }\n}\nvoid once()\n{\n    ans=0x3f3f3f3f;\n    for(int i=0;i<4;i++) scanf(\"%d%d\",x+i,y+i);\n    for(int i=0;i<2;i++)\n    {\n        work();\n        for(int j=0,t;j<4;j++)\n        {\n            t=x[j]; x[j]=y[j]; y[j]=t;\n            t=ansx[j]; ansx[j]=ansy[j]; ansy[j]=t;\n        }\n    }\n    if(ans==0x3f3f3f3f) puts(\"-1\");\n    else\n    {\n        printf(\"%d\\n\",ans);\n        for(int i=0;i<4;i++) printf(\"%d %d\\n\",ansx[i],ansy[i]);\n    }\n}\nint main()\n{\n    int t; scanf(\"%d\",&t);\n    while(t--) once();\n}"
}