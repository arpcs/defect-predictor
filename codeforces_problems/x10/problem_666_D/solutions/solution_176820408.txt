{
    "id": 176820408,
    "contestId": 666,
    "creationTimeSeconds": 1666058760,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "D",
        "name": "Chain Reaction",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 3000,
        "tags": [
            "brute force",
            "geometry"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "CJlzf"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 18,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <cmath>\r\n#include <algorithm>\r\nusing namespace std;\r\nconst int inf=1<<30;\r\nint t,p[5][2],q[5][2],r[5][2],x[5],y[5],id[5],nx,ny,ans;\r\nbool flag1,flag2;\r\nint dis(int x1,int y1,int x2,int y2)\r\n{\r\n    if(x1==x2) return abs(y1-y2);\r\n    if(y1==y2) return abs(x1-x2);\r\n    return inf;\r\n}\r\nvoid make(int x1,int y1,int x2,int y2,int x3,int y3,int x4,int y4)\r\n{\r\n    q[1][0]=x1;q[1][1]=y1;\r\n    q[2][0]=x2;q[2][1]=y2;\r\n    q[3][0]=x3;q[3][1]=y3;\r\n    q[4][0]=x4;q[4][1]=y4;\r\n}\r\nvoid getans(int x1,int y1,int x2,int y2,int x3,int y3,int x4,int y4)\r\n{\r\n    r[1][0]=x1;r[1][1]=y1;\r\n    r[2][0]=x2;r[2][1]=y2;\r\n    r[3][0]=x3;r[3][1]=y3;\r\n    r[4][0]=x4;r[4][1]=y4;\r\n}\r\nint cal()\r\n{\r\n    int ans=inf;\r\n    for(int i=1;i<=4;i++) id[i]=i;\r\n    do{\r\n        int maxx=0;\r\n        for(int i=1;i<=4;i++) maxx=max(maxx,dis(p[i][0],p[i][1],q[id[i]][0],q[id[i]][1]));\r\n        ans=min(ans,maxx);\r\n    }while(next_permutation(id+1,id+5));\r\n    return ans;\r\n}\r\nvoid solve(int o1,int o2,int o3,int o4)\r\n{\r\n    nx=ny=0;\r\n    (o1==0)?(x[++nx]=p[1][0]):(y[++ny]=p[1][1]);\r\n    (o2==0)?(x[++nx]=p[2][0]):(y[++ny]=p[2][1]);\r\n    (o3==0)?(x[++nx]=p[3][0]):(y[++ny]=p[3][1]);\r\n    (o4==0)?(x[++nx]=p[4][0]):(y[++ny]=p[4][1]);\r\n    sort(x+1,x+nx+1);sort(y+1,y+ny+1);\r\n    nx=unique(x+1,x+nx+1)-x-1;\r\n    ny=unique(y+1,y+ny+1)-y-1;\r\n    if(nx==2&&ny==2){\r\n        if(x[2]-x[1]!=y[2]-y[1]) return;\r\n        else{\r\n            make(x[1],y[1],x[1],y[2],x[2],y[1],x[2],y[2]);\r\n            int tmp=cal();\r\n            if(ans>tmp) ans=tmp,getans(q[1][0],q[1][1],q[2][0],q[2][1],q[3][0],q[3][1],q[4][0],q[4][1]);\r\n        }\r\n    }\r\n    else if(nx==2&&ny==1){\r\n        int a=abs(x[1]-x[2]),minx;\r\n        make(x[1],y[1],x[2],y[1],x[1],y[1]-a,x[2],y[1]-a);\r\n        minx=cal();\r\n        if(ans>minx) ans=minx,getans(q[1][0],q[1][1],q[2][0],q[2][1],q[3][0],q[3][1],q[4][0],q[4][1]);\r\n        make(x[1],y[1],x[2],y[1],x[1],y[1]+a,x[2],y[1]+a);\r\n        minx=cal();\r\n        if(ans>minx) ans=minx,getans(q[1][0],q[1][1],q[2][0],q[2][1],q[3][0],q[3][1],q[4][0],q[4][1]);\r\n    }\r\n    else if(nx==1&&ny==2){\r\n        int a=abs(y[1]-y[2]),minx;\r\n        make(x[1],y[1],x[1],y[2],x[1]-a,y[1],x[1]-a,y[2]);\r\n        minx=cal();\r\n        if(ans>minx) ans=minx,getans(q[1][0],q[1][1],q[2][0],q[2][1],q[3][0],q[3][1],q[4][0],q[4][1]);\r\n        make(x[1],y[1],x[1],y[2],x[1]+a,y[1],x[1]+a,y[2]);\r\n        minx=cal();\r\n        if(ans>minx) ans=minx,getans(q[1][0],q[1][1],q[2][0],q[2][1],q[3][0],q[3][1],q[4][0],q[4][1]);\r\n    }\r\n    else if(nx==2&&ny==0&&flag2){\r\n        int a=abs(x[1]-x[2]),minx=inf;\r\n        for(int i=-1;i<=0;i++){\r\n            for(int j=-1;j<=0;j++){\r\n                for(int k=-1;k<=0;k++){\r\n                    for(int l=-1;l<=0;l++){\r\n                        if(i+j+k+l!=-2) continue;\r\n                        int x0=(max(max(p[1][1]+i*a,p[2][1]+j*a),max(p[3][1]+k*a,p[4][1]+l*a))+min(min(p[1][1]+i*a,p[2][1]+j*a),min(p[3][1]+k*a,p[4][1]+l*a)))/2,tmp=0;\r\n                        tmp=max(tmp,abs(p[1][1]+i*a-x0));\r\n                        tmp=max(tmp,abs(p[2][1]+j*a-x0));\r\n                        tmp=max(tmp,abs(p[3][1]+k*a-x0));\r\n                        tmp=max(tmp,abs(p[4][1]+l*a-x0));\r\n                        if(ans>tmp) ans=tmp,getans(x[1],x0,x[2],x0,x[1],x0+a,x[2],x0+a);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if(nx==0&&ny==2&&flag1){\r\n        int a=abs(y[1]-y[2]),minx=inf;\r\n        for(int i=-1;i<=0;i++){\r\n            for(int j=-1;j<=0;j++){\r\n                for(int k=-1;k<=0;k++){\r\n                    for(int l=-1;l<=0;l++){\r\n                        if(i+j+k+l!=-2) continue;\r\n                        int x0=(max(max(p[1][0]+i*a,p[2][0]+j*a),max(p[3][0]+k*a,p[4][0]+l*a))+min(min(p[1][0]+i*a,p[2][0]+j*a),min(p[3][0]+k*a,p[4][0]+l*a)))/2,tmp=0;\r\n                        tmp=max(tmp,abs(p[1][0]+i*a-x0));\r\n                        tmp=max(tmp,abs(p[2][0]+j*a-x0));\r\n                        tmp=max(tmp,abs(p[3][0]+k*a-x0));\r\n                        tmp=max(tmp,abs(p[4][0]+l*a-x0));\r\n                        if(ans>tmp) ans=tmp,getans(x0,y[1],x0,y[2],x0+a,y[1],x0+a,y[2]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nint main()\r\n{\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        ans=inf;\r\n        for(int i=1;i<=4;i++) scanf(\"%d%d\",&p[i][0],&p[i][1]);\r\n        int numx=0,numy=0;\r\n        flag1=flag2=1;\r\n        for(int i=1;i<=4;i++){\r\n            numx=numy=0;\r\n            for(int j=1;j<=4;j++) numx+=(p[i][0]==p[j][0]),numy+=(p[i][1]==p[j][1]);\r\n            if(numx==3) flag1=0;\r\n            if(numy==3) flag2=0;\r\n        }\r\n        for(int i=0;i<=1;i++){\r\n            for(int j=0;j<=1;j++){\r\n                for(int k=0;k<=1;k++){\r\n                    for(int l=0;l<=1;l++) solve(i,j,k,l);\r\n                }\r\n            }\r\n        }\r\n        if(ans!=inf){\r\n            printf(\"%d\\n\",ans);\r\n            make(r[1][0],r[1][1],r[2][0],r[2][1],r[3][0],r[3][1],r[4][0],r[4][1]);\r\n            for(int i=1;i<=4;i++) id[i]=i;\r\n            do{\r\n                int maxx=0;\r\n                for(int i=1;i<=4;i++) maxx=max(maxx,dis(p[i][0],p[i][1],q[id[i]][0],q[id[i]][1]));\r\n                if(ans==maxx){\r\n                    for(int i=1;i<=4;i++) printf(\"%d %d\\n\",q[id[i]][0],q[id[i]][1]);\r\n                    break;\r\n                }\r\n            }while(next_permutation(id+1,id+5));\r\n        }\r\n        else puts(\"-1\");\r\n    }\r\n    return 0;\r\n}"
}