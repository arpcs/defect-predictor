{
    "id": 175541502,
    "contestId": 666,
    "creationTimeSeconds": 1665488060,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "D",
        "name": "Chain Reaction",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 3000,
        "tags": [
            "brute force",
            "geometry"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "jinhaoxian"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 24,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nint t,x[4],y[4],maxd,dx[4],dy[4],px[4],py[4];\r\nint r[150],cntr;\r\nint a[4]={-1,-1,1,1},b[4]={-1,1,-1,1};\r\nint x0y1[4],delt[4];\r\nbool g=0;\r\nvoid solvex(int a,int b) {\r\n    int rad,c,d;\r\n    if (b==3) c=1,d=2;\r\n    else if (b==2) c=1,d=3;\r\n    else if (b==1) c=2,d=3;\r\n    if (y[a]>y[c]) swap(a,c),swap(b,d);\r\n    rad=abs(y[a]-y[c]);\r\n    int tmp=max(abs(min(x[a],x[b])-min(x[c],x[d])),abs(max(x[a],x[b])-max(x[c],x[d])));\r\n    int sum;\r\n    sum=max(tmp,abs(rad-abs(x[a]-x[b])));\r\n    if (sum<maxd) {\r\n        maxd=sum;\r\n        dx[a]=x[a];\r\n        dx[b]=x[b];\r\n        dy[a]=dy[b]=y[c]-abs(x[a]-x[b]);\r\n        dy[c]=y[c];\r\n        dy[d]=y[d];\r\n        if (x[c]>x[d]) {\r\n            dx[c]=max(x[a],x[b]);\r\n            dx[d]=min(x[a],x[b]);\r\n        } else {\r\n            dx[c]=min(x[a],x[b]);\r\n            dx[d]=max(x[a],x[b]);\r\n        }\r\n    }\r\n    sum=max(tmp,abs(rad-abs(x[c]-x[d])));\r\n    if (sum<maxd) {\r\n        maxd=sum;\r\n        dx[c]=x[c];\r\n        dx[d]=x[d];\r\n        dy[c]=dy[d]=y[a]+abs(x[c]-x[d]);\r\n        dy[a]=y[a];\r\n        dy[b]=y[b];\r\n        if (x[a]>x[b]) {\r\n            dx[a]=max(x[c],x[d]);\r\n            dx[b]=min(x[c],x[d]);\r\n        } else {\r\n            dx[a]=min(x[c],x[d]);\r\n            dx[b]=min(x[c],x[d]);\r\n        }\r\n    }\r\n}\r\nvoid solvey(int a,int b) {\r\n    int rad,c,d;\r\n    if (b==3) c=1,d=2;\r\n    else if (b==2) c=1,d=3;\r\n    else if (b==1) c=2,d=3;\r\n    if (x[a]>x[c]) swap(a,c),swap(b,d);\r\n    rad=abs(x[a]-x[c]);\r\n    int tmp=max(abs(min(y[a],y[b])-min(y[c],y[d])),abs(max(y[a],y[b])-max(y[c],y[d])));\r\n    int sum;\r\n    sum=max(tmp,abs(rad-abs(y[a]-y[b])));\r\n    if (sum<maxd) {\r\n        maxd=sum;\r\n        dy[a]=y[a];\r\n        dy[b]=y[b];\r\n        dx[a]=dx[b]=x[c]-abs(y[a]-y[b]);\r\n        dx[c]=x[c];\r\n        dx[d]=x[d];\r\n        if (y[c]>y[d]) {\r\n            dy[c]=max(y[a],y[b]);\r\n            dy[d]=min(y[a],y[b]);\r\n        } else {\r\n            dy[c]=min(y[a],y[b]);\r\n            dy[d]=max(y[a],y[b]);\r\n        }\r\n    }\r\n    sum=max(tmp,abs(rad-abs(y[c]-y[d])));\r\n    if (sum<maxd) {\r\n        maxd=sum;\r\n        dy[c]=y[c];\r\n        dy[d]=y[d];\r\n        dx[c]=dx[d]=x[a]+abs(y[c]-y[d]);\r\n        dx[a]=x[a];\r\n        dx[b]=x[b];\r\n        if (y[a]>y[b]) {\r\n            dy[a]=max(y[c],y[d]);\r\n            dy[b]=min(y[c],y[d]);\r\n        } else {\r\n            dy[a]=min(y[c],y[d]);\r\n            dy[b]=min(y[c],y[d]);\r\n        }\r\n    }\r\n}\r\nint main() {\r\n    cin>>t;\r\n    while (t--) {\r\n        for (int i=0;i<4;i++) cin>>x[i]>>y[i];\r\n        cntr=0;\r\n        for (int i=0;i<3;i++) {\r\n            for (int j=i+1;j<4;j++) {\r\n                if (x[j]!=x[i]) r[++cntr]=abs(x[j]-x[i]);\r\n                if (y[j]!=y[i]) r[++cntr]=abs(y[j]-y[i]);\r\n            }\r\n        }\r\n        sort(r+1,r+1+cntr);\r\n        maxd=0x3f3f3f3f;\r\n        for (int i=0;i<4;i++) {\r\n            for (int j=0;j<4;j++) {\r\n                for (int k=0;k<4;k++) {\r\n                    px[i]=x[j];\r\n                    py[i]=y[k];\r\n                    for (int tr=1;tr<=cntr;tr++) {\r\n                        for (int l=0;l<24;l++) {\r\n                            if (l/4==0) {\r\n                                px[i^1]=px[i^3]=px[i]+a[l%4]*r[tr];\r\n                                px[i^2]=px[i];\r\n                                py[i^1]=py[i^2]=py[i]+b[l%4]*r[tr];\r\n                                py[i^3]=py[i];\r\n                            } else if (l/4==1) {\r\n                                px[i^1]=px[i^2]=px[i]+a[l%4]*r[tr];\r\n                                px[i^3]=px[i];\r\n                                py[i^1]=py[i^3]=py[i]+b[l%4]*r[tr];\r\n                                py[i^2]=py[i];\r\n                            } else if (l/4==2) {\r\n                                px[i^2]=px[i^3]=px[i]+a[l%4]*r[tr];\r\n                                px[i^1]=px[i];\r\n                                py[i^1]=py[i^2]=py[i]+b[l%4]*r[tr];\r\n                                py[i^3]=py[i];\r\n                            } else if (l/4==3) {\r\n                                px[i^1]=px[i^2]=px[i]+a[l%4]*r[tr];\r\n                                px[i^3]=px[i];\r\n                                py[i^3]=py[i^2]=py[i]+b[l%4]*r[tr];\r\n                                py[i^1]=py[i];\r\n                            } else if (l/4==4) {\r\n                                px[i^2]=px[i^3]=px[i]+a[l%4]*r[tr];\r\n                                px[i^1]=px[i];\r\n                                py[i^3]=py[i^1]=py[i]+b[l%4]*r[tr];\r\n                                py[i^2]=py[i];\r\n                            } else {\r\n                                px[i^1]=px[i^3]=px[i]+a[l%4]*r[tr];\r\n                                px[i^2]=px[i];\r\n                                py[i^3]=py[i^2]=py[i]+b[l%4]*r[tr];\r\n                                py[i^1]=py[i];\r\n                            }\r\n                            int res=0;\r\n                            bool f=1;\r\n                            int xcnt=0,ycnt=0;\r\n                            for (int m=0;m<4;m++) {\r\n                                if (x[m]==px[m]) {\r\n                                    res=max(res,abs(y[m]-py[m]));\r\n                                    ycnt++;\r\n                                    x0y1[m]=1;\r\n                                    delt[m]=py[m]-y[m];\r\n                                }\r\n                                else if (y[m]==py[m]) {\r\n                                    res=max(res,abs(x[m]-px[m]));\r\n                                    xcnt++;\r\n                                    x0y1[m]=0;\r\n                                    delt[m]=px[m]-x[m];\r\n                                }\r\n                                else f=0;\r\n                            }\r\n                            if (f) {\r\n                                int lmax=0x3f3f3f3f,rmax=-0x3f3f3f3f;\r\n                                if (xcnt==4) {\r\n                                    for (int m=0;m<4;m++) lmax=min(lmax,delt[m]),rmax=max(rmax,delt[m]);\r\n                                    int tmp=res-(rmax-lmax+1)/2;\r\n                                    for (int m=0;m<4;m++) {\r\n                                        if (rmax>-lmax) px[m]-=tmp;\r\n                                        else px[m]+=tmp;\r\n                                    }\r\n                                    res=(rmax-lmax+1)/2;\r\n                                } else if (ycnt==4) {\r\n                                    for (int m=0;m<4;m++) lmax=min(lmax,delt[m]),rmax=max(rmax,delt[m]);\r\n                                    int tmp=res-(rmax-lmax+1)/2;\r\n                                    for (int m=0;m<4;m++) {\r\n                                        if (rmax>-lmax) py[m]-=tmp;\r\n                                        else py[m]+=tmp;\r\n                                    }\r\n                                    res=(rmax-lmax+1)/2;\r\n                                }\r\n                                if (res<maxd) {\r\n                                    maxd=res;\r\n                                    for (int m=0;m<4;m++) dx[m]=px[m],dy[m]=py[m];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if ((x[0]==x[1])&&(x[2]==x[3])&&(x[0]!=x[2])) solvey(0,1);\r\n        else if ((x[0]==x[2])&&(x[1]==x[3])&&(x[0]!=x[1])) solvey(0,2);\r\n        else if ((x[0]==x[3])&&(x[1]==x[2])&&(x[0]!=x[1])) solvey(0,3);\r\n        if ((y[0]==y[1])&&(y[2]==y[3])&&(y[0]!=y[2])) solvex(0,1);\r\n        else if ((y[0]==y[2])&&(y[1]==y[3])&&(y[0]!=y[1])) solvex(0,2);\r\n        else if ((y[0]==y[3])&&(y[1]==y[2])&&(y[0]!=y[1])) solvex(0,3);\r\n        if (maxd==0x3f3f3f3f) cout<<-1<<endl;\r\n        else {\r\n            cout<<maxd<<endl;\r\n            for (int m=0;m<=3;m++) cout<<dx[m]<<' '<<dy[m]<<endl;\r\n        }\r\n    }\r\n    return 0;\r\n}"
}