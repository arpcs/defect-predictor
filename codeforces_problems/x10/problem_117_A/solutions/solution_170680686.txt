{
    "id": 170680686,
    "contestId": 117,
    "creationTimeSeconds": 1662167512,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 117,
        "index": "A",
        "name": "Elevator",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1300,
        "tags": [
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 117,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1316790000
    },
    "programmingLanguage": "Python 3",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#F - Elevator\n\ndef calculateElevatorMoves(elevator, floors):\n  floor = 1\n  elevator[0] = -1 #Come\u00e7a no tempo 1\n  going_up = True\n  \n  for i in range(1, len(elevator)):\n    elevator[i] = floor\n\n    if going_up == True:\n      if floor == floors:\n        going_up = False\n        floor -= 1\n      else: \n        floor += 1\n    else:\n      if floor == 1:\n        going_up = True\n        floor += 1\n      else:\n        floor -=1\n  \n  return elevator\n\ndef moveParticipant(elevator, start_floor, destination_floor, time):\n  start_time = elevator.index(start_floor, time + 1)\n  destination_time = elevator.index(destination_floor, start_time)\n  print(destination_time - 1)\n\ndef main():\n  participants, floors = [int(x) for x in input().split(\" \")]\n  elevator = [-1] * floors * 10\n  calculateElevatorMoves(elevator, floors)\n\n  while participants > 0:\n    start_floor, destination_floor, time = [int(x) for x in input().split(\" \")]\n\n    if start_floor == destination_floor:\n      print(time)\n    else:\n      moveParticipant(elevator, start_floor, destination_floor, time)\n    participants -= 1\n\nmain()\n\t \t\t    \t\t \t\t\t \t \t  \t\t  \t\t \t\t"
}