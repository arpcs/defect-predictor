{
    "id": 175832371,
    "contestId": 117,
    "creationTimeSeconds": 1665637421,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 117,
        "index": "A",
        "name": "Elevator",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1300,
        "tags": [
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 117,
        "members": [
            {
                "handle": "2000030572_Jahnavi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1316790000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 23,
    "timeConsumedMillis": 108,
    "memoryConsumedBytes": 0,
    "source": "#include <cstdio>\r\n\r\nint main(){\r\n\r\n    long n(0), m(0); scanf(\"%ld %ld\", &n, &m);\r\n    while(n--){\r\n        long s(0), f(0), t(0), output(0);\r\n        scanf(\"%ld %ld %ld\", &s, &f, &t);\r\n        if(s == f){output = t;}\r\n        else{\r\n            long T = 2 * (m - 1); //Period of a round trip\r\n            --s; --f;   //For modulo arithmetic to work\r\n            output = (t/T) * T;  \r\n            if(s < f && (output + s) < t){output += T;}\r\n            else if(s > f && (output + T - s) < t){output += T;}\r\n            output += (s < f) ? f : (T - f);\r\n        }\r\n        printf(\"%ld\\n\", output);\r\n    }\r\n    return 0;\r\n}"
}