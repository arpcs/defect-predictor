{
    "id": 235967938,
    "contestId": 1619,
    "creationTimeSeconds": 1701804437,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1619,
        "index": "H",
        "name": "Permutation and Queries",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "brute force",
            "data structures",
            "divide and conquer",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1619,
        "members": [
            {
                "handle": "MuhammadSawalhy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1640010900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 2457600,
    "source": "// \ufdfd\r\n// https://codeforces.com/contest/1619/problem/H\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#ifdef SAWALHY\r\n#include \"debug.hpp\"\r\n#else\r\n#define debug(...) 0\r\n#define debug_itr(...) 0\r\n#define debug_bits(...) 0\r\n#endif\r\n\r\n#define ll long long\r\n#define int long long\r\n#define all(v) v.begin(), v.end()\r\n#define rall(v) v.rbegin(), v.rend()\r\n#define minit(v, x) v = min(v, x)\r\n#define maxit(v, x) v = max(v, x)\r\n\r\nconst int N = 1e5 + 5;\r\nconst int Q = sqrt(N);\r\nint a[N], r[N], b[N];\r\nint n, q;\r\n\r\nvoid update_one(int x) {\r\n    int y = x;\r\n    for (int i = 0; i < Q; i++) {\r\n        y = r[y];\r\n    }\r\n    b[x] = y;\r\n}\r\n\r\nvoid update(int x) {\r\n    update_one(x);\r\n    for (int i = 0; i < Q; i++) {\r\n        int y = r[x];\r\n        r[y] = r[b[x]];\r\n        x = y;\r\n    }\r\n}\r\n\r\nint query(int x, int k) {\r\n    while (k >= Q) x = b[x], k -= Q;\r\n    while (k--) x = a[x];\r\n    return x;\r\n}\r\n\r\nint32_t main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL), cout.tie(NULL);\r\n\r\n    cin >> n >> q;\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> a[i], a[i]--;\r\n        r[a[i]] = i;\r\n    }\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        update_one(i);\r\n    }\r\n\r\n    while (q--) {\r\n        int t;\r\n        cin >> t;\r\n        if (t == 1) {\r\n            int x, y;\r\n            cin >> x >> y;\r\n            x--, y--;\r\n            swap(a[x], a[y]);\r\n            swap(r[a[x]], r[a[y]]);\r\n            update(a[x]);\r\n            update(a[y]);\r\n        } else {\r\n            int x, k;\r\n            cin >> x >> k;\r\n            x--;\r\n            cout << query(x, k) + 1 << endl;\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}