{
    "contestId": 1632,
    "index": "A",
    "name": "ABC",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 800,
    "tags": [
        "implementation"
    ],
    "desc": {
        "title": "A. ABC",
        "statement": "<p>Recently, the students of School 179 have developed a unique algorithm, which takes in a binary string $$$s$$$ as input. However, they soon found out that if some substring $$$t$$$ of $$$s$$$ is a palindrome of length greater than <span class=\"tex-font-style-tt\">1</span>, the algorithm will work incorrectly. Can the students somehow reorder the characters of $$$s$$$ so that the algorithm will work correctly on the string?</p><p>A binary string is a string where each character is either <span class=\"tex-font-style-tt\">0</span> or <span class=\"tex-font-style-tt\">1</span>.</p><p>A string $$$a$$$ is a substring of a string $$$b$$$ if $$$a$$$ can be obtained from $$$b$$$ by deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.</p><p>A palindrome is a string that reads the same backwards as forwards.</p>",
        "inputSpecification": "<p>Each test contains multiple test cases. The first line contains the number of test cases $$$t$$$ ($$$1 \\le t \\le 100$$$). Description of the test cases follows.</p><p>The first line of each test case contains a single integer $$$n$$$ ($$$1 \\le n \\le 100$$$) \u2014 the length of the string $$$s$$$.</p><p>The second line of each test case contains the string $$$s$$$ of length $$$n$$$ consisting only of the characters <span class=\"tex-font-style-tt\">0</span> and <span class=\"tex-font-style-tt\">1</span>.</p>",
        "outputSpecification": "<p>For each test case, print <span class=\"tex-font-style-tt\">YES</span> (case-insensitive) if it is possible to reorder the characters of $$$s$$$ so that there are no substrings that are a palindrome of length greater than <span class=\"tex-font-style-tt\">1</span>, or <span class=\"tex-font-style-tt\">NO</span> (case-insensitive) otherwise.</p>",
        "samples": [
            {
                "input": "<div class=\"test-example-line test-example-line-even test-example-line-0\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">10</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">01</div><div class=\"test-example-line test-example-line-even test-example-line-4\">4</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1010</div>",
                "output": "\nYES\nYES\nYES\nNO\n"
            }
        ],
        "note": "<p>In the first three test cases, the given strings do not contain palindromes of length greater than <span class=\"tex-font-style-tt\">1</span>, so the answers are <span class=\"tex-font-style-tt\">YES</span>.</p><p>In the last test case, it is impossible to reorder the characters so that the string does not contain palindromes of length greater than <span class=\"tex-font-style-tt\">1</span>, so the answer is <span class=\"tex-font-style-tt\">NO</span>.</p>"
    },
    "suggested_categories": [
        "string manipulation",
        "algorithm",
        "palindrome",
        "substring",
        "reordering",
        "binary string",
        "input processing",
        "output processing",
        "test cases",
        "conditional logic",
        "combinatorics",
        "data structures",
        "dynamic programming",
        "greedy algorithm",
        "combinatorial optimization",
        "pattern matching",
        "search",
        "optimization",
        "computation complexity",
        "computational thinking"
    ]
}