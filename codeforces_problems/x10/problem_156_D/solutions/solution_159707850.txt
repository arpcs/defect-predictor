{
    "id": 159707850,
    "contestId": 156,
    "creationTimeSeconds": 1654597850,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 156,
        "index": "D",
        "name": "Clues",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2500,
        "tags": [
            "combinatorics",
            "graphs"
        ]
    },
    "author": {
        "contestId": 156,
        "members": [
            {
                "handle": "moonrise__"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1330536600
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 130,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 7168000,
    "source": "#include<bits/stdc++.h>\n \ntemplate<typename _Ty> void __(_Ty &x) {\n  bool neg = false;\n  unsigned c = getchar();\n  for (; (c ^ 48) > 9; c = getchar()) if (c == '-') neg = true;\n  for (x = 0; (c ^ 48) < 10; c = getchar()) x = (x << 3) + (x << 1) + (c ^ 48);\n  if (neg) x = -x;\n}\ntemplate<typename _Ty> _Ty& read(_Ty &x) { __(x); return x; }\ntemplate<typename _Ty, typename ..._Tr> void read(_Ty &x, _Tr&... r) { __(x); read(r...); }\n \nconst int N =5e5+5;\nusing s64 = long long;\nusing namespace std;\n\ns64 n, m, p, k, ans = 1;\nint fa[N], num[N];\nint gf(int x) { return fa[x] == x ? fa[x] : fa[x] = gf(fa[x]); }\nvoid mg(int x, int y) {\n  x = gf(x); y = gf(y);\n  if (x != y) fa[x] = y;\n}\n\ns64 qpow(s64 x, s64 y) {\n  x = x % p; s64 res = 1;\n  for (; y; y >>= 1, x = x * x % p) if (y & 1) res = res * x % p;\n  return res % p;\n}\n\nint main() {\n  \n  read(n, m ,p);\n  for (int i = 1; i <= n; ++i) fa[i] = i;\n  for (int i = 1, u, v; i <= m; ++i) { read(u, v); mg(u, v); }\n  \n  for (int i = 1; i <= n; ++i) ++num[gf(i)];\n  for (int i = 1; i <= n; ++i) if (i == gf(i)) ++k, ans = ans * num[i] % p;\n\n  if (k == 1) {\n    cout << 1 % p << endl;\n    return 0;\n  }\n  printf(\"%lld\\n\", ans * qpow(n, k - 2) % p);\n\n  return 0;\n\n}"
}