{
    "id": 221958078,
    "contestId": 1260,
    "creationTimeSeconds": 1693928069,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1260,
        "index": "D",
        "name": "A Game with Traps",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1260,
        "members": [
            {
                "handle": "BlueBerryBush"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1574862600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 6451200,
    "source": "                    //Enjoying CP as always!\r\n        // NO FAREWELL: KEEP GOOGLE COMPETITIONS ALIVE\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nconst int INF = 1e15;\r\nconst int MAX = 4e2+5;\r\nconst int MAXK = 15;\r\nconst int MAXS = 1e6+1;\r\nconst int MOD = 998244353;\r\n\r\nsigned main() {\r\n    //freopen(\"dream.in\", \"r\", stdin);\r\n    //freopen(\"dream.out\", \"w\", stdout);\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    int m,n,k,t;\r\n    cin>>m>>n>>k>>t;\r\n    int a[m];\r\n    array<int,3>info[k];\r\n    for(int i=0;i<m;i++) {\r\n        cin>>a[i];\r\n    }\r\n    sort(a,a+m);\r\n    for(int i=0;i<k;i++) {\r\n        cin>>info[i][0]>>info[i][1]>>info[i][2];\r\n    }\r\n    sort(info,info+k);\r\n    int first=0,last=m-1,res=m;\r\n    while(first<=last) {\r\n        int mid=(first+last)/2;\r\n        //[mid,m-1]\r\n        int tottime=n+1,curr=0;\r\n        for(int i=0;i<k;i++) {\r\n            if(info[i][2]<=a[mid] || info[i][1]<=curr) {\r\n                continue;\r\n            }\r\n            if(curr<info[i][0]) {\r\n                tottime+=2*(info[i][1]-info[i][0]+1);\r\n            } else {\r\n                tottime+=2*(info[i][1]-curr);\r\n            }\r\n            curr=info[i][1];\r\n        }\r\n        if(tottime<=t) {\r\n            res=mid;\r\n            last=mid-1;\r\n        } else {\r\n            first=mid+1;\r\n        }\r\n    }\r\n    cout<<m-res;\r\n    return 0;\r\n}\r\n"
}