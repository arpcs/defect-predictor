{
    "id": 230682345,
    "contestId": 1260,
    "creationTimeSeconds": 1698757501,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1260,
        "index": "D",
        "name": "A Game with Traps",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1260,
        "members": [
            {
                "handle": "jiudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1574862600
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "//jiudge: 30102: 1698757494\n#include <bits/stdc++.h>\n\nusing namespace std;\n#define int long long\n#define endl '\\n'\n#define eb emplace_back\n#define INF (int)(2e12)\n#define pii pair<int, int> \n#define dbg(x...) do{cout<<#x<<\" -> \";err(x);}while (0)\nvoid err(){cout<<'\\n';cout.flush();}\ntemplate<class T, class... Ts>\nvoid err(T arg, Ts... args) {\n    cout<<arg<< ' ';\n    err(args...);\n}\n#define min(a, b) (a < b ? a : b)\n\nclass qnode {\npublic:\n\tint l, r, cost;\n};\nvoid run() {\n    int n, m, K;\n    cin >> n >> m >> K;\n    vector<vector<qnode> > all(n + 1);\n    vector<vector<int> > dp2(n + 1, vector<int> (n + 1, INF));\n    for (int i = 0; i < m; i++) {\n    \tqnode now;\n    \tcin >> now.l >> now.r >> now.cost;\n    \tall[now.r].eb(now);\n    \tdp2[now.l][now.r] = min(dp2[now.l][now.r], now.cost);\n    }\n    vector<vector<int> > dp(n + 1, vector<int> (n + 1, INF));\n    dp[0][0] = 0;\n    for (int i = 1; i <= n; i++) {\n    \tint mi = INF;\n    \tfor (int j = n; j >= i; j--) {\n    \t\tmi = min(mi, dp2[i][j]);\n    \t\tdp2[i][j] = min(dp2[i][j], mi);\n    \t}\n    }\n    for (int i = 1; i <= n; i++) {\n    \tfor (int j = 0; j <= n; j++) {\n    \t\tdp[i][j] = min(dp[i][j], dp[i - 1][j]);\n\t\t\tfor (int k = i - 1; k >= 0 && i - k <= j; k--) {\n\t\t\t\tdp[i][j] = min(dp[i][j], dp[k][j - (i - K)] + dp2[k + 1][i]);\n\t\t\t\tdbg(i, j, k);\n\t\t\t}\n    \t}\n    }\n    \n    int ans = INF;\n    for (int i = K; i <= n; i++) {\n    \tans = min(ans, dp[n][i]);\n    }\n    if (ans == INF) ans = -1;\n    cout << ans << endl;\n\n\n    return;\n}\nsigned main() {\n    ios::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);\n    int T = 1;\n//    cin >> T;\n    while (T--) {\n        run();\n    }\n\n    return 0;\n}\n"
}