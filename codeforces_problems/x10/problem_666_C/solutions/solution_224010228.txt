{
    "id": 224010228,
    "contestId": 666,
    "creationTimeSeconds": 1695113647,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "C",
        "name": "Codeword",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2500,
        "tags": [
            "combinatorics",
            "strings"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "zhouqixuan1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 25,
    "timeConsumedMillis": 1981,
    "memoryConsumedBytes": 240947200,
    "source": "// LUOGU_RID: 125197939\n#include<iostream>\r\n#include<cstdio>\r\n#include<cstring>\r\n#include<vector>\r\nusing namespace std;\r\ntypedef long long LL;\r\nconst int N=1e5+5;\r\nconst int M=2e5+5;\r\nconst int mod=1e9+7;\r\nint n,m;\r\nchar s[N];\r\nLL fact[N],infact[N],mi[N];\r\nint st[N];\r\nvector<int>f[N];\r\nint qmi(int x,int k){\r\n    int res=1;\r\n    while(k){\r\n        if(k&1) res=(LL)res*x%mod;\r\n        x=(LL)x*x%mod;\r\n        k>>=1;\r\n    }\r\n    return res;\r\n}\r\nvoid init(int n){\r\n    fact[0]=infact[0]=mi[0]=1;\r\n    for(int i=1;i<=n;i++){\r\n        fact[i]=fact[i-1]*i%mod;\r\n        infact[i]=infact[i-1]*qmi(i,mod-2)%mod;\r\n        mi[i]=mi[i-1]*25%mod;\r\n    }\r\n    return;\r\n}\r\nLL C(int n,int m){\r\n    if(n<m) return 0;\r\n    return fact[n]*infact[m]%mod*infact[n-m]%mod;\r\n}\r\nint query(){\r\n    if(!st[m]){\r\n        st[m]=1;\r\n        f[m].push_back(0);\r\n        int p=1e5;\r\n        for(int i=1;i<=p;i++){\r\n            f[m].push_back(26ll*f[m][i-1]%mod);\r\n            if(i>=m) f[m][i]=(f[m][i]+(LL)C(i-1,m-1)*mi[i-m])%mod;\r\n        }\r\n    }\r\n    return f[m][n];\r\n}\r\nint main(){\r\n    init(1e5);\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    scanf(\"%s\",s);\r\n    m=strlen(s);\r\n    while(T--){\r\n        int op;\r\n        scanf(\"%d\",&op);\r\n        if(op==1){\r\n            scanf(\"%s\",s);\r\n            m=strlen(s);\r\n        }\r\n        else{\r\n            scanf(\"%d\",&n);\r\n            printf(\"%d\\n\",query());\r\n        }\r\n    }\r\n    return 0;\r\n}"
}