{
    "id": 204001415,
    "contestId": 666,
    "creationTimeSeconds": 1682831511,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "C",
        "name": "Codeword",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2500,
        "tags": [
            "combinatorics",
            "strings"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "teruel"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 25,
    "timeConsumedMillis": 655,
    "memoryConsumedBytes": 15360000,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\ntemplate <class T> using Tree = tree <T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\n#ifdef ONLINE_JUDGE\r\n#pragma GCC optimize(\"Ofast\",\"unroint-loops\",\"omit-frame-pointer\",\"inline\",\"03\")\r\n#endif // ONLINE_JUDGE\r\n\r\n#define all(x) (x).begin(), (x).end()\r\n#define rall(x) (x).rbegin(), (x).rend()\r\n#define uni(x) (x).erase(unique(all(x)), (x).end())\r\n#define rnk(x, y) upper_bound(all((x)), (y)) - (x).begin()\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef __int128 LL;\r\ntypedef pair <int, int> ii;\r\n\r\nconst int MAX = 2e5 + 5;\r\nconst int SQ = 505;\r\nconst ll mod = 1e9 + 7;\r\n\r\nll Pot(ll b, ll e) {\r\n    ll r = 1;\r\n    while(e) {\r\n        if(e & 1)\r\n            r = r * b % mod;\r\n        b = b * b % mod;\r\n        e /= 2;\r\n    }\r\n    return r;\r\n}\r\n\r\nvector <ii> Q[MAX];\r\n\r\nll p[MAX], F[MAX], I[MAX], sol[MAX], dp[MAX];\r\n\r\nll C(int N, int K) {\r\n    return F[N] * I[K] % mod * I[N - K] % mod;\r\n}\r\n\r\nvoid solve(int w) {\r\n    dp[w - 1] = 0;\r\n    for(int i = w; i < MAX; i++)\r\n        dp[i] = (26ll * dp[i - 1] + C(i - 1, w - 1) * p[i - w] % mod) % mod;\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n\r\n    F[0] = p[0] = 1;\r\n\r\n    for(int i = 1; i < MAX; i++) {\r\n        p[i] = p[i - 1] * 25 % mod;\r\n        F[i] = F[i - 1] * i % mod;\r\n    }\r\n\r\n    I[MAX - 1] = Pot(F[MAX - 1], mod - 2);\r\n\r\n    for(int i = MAX - 1; i > 0; i--)\r\n        I[i - 1] = I[i] * i % mod;\r\n\r\n    int q, o, k = 0;\r\n    string s;\r\n\r\n    cin >> q >> s;\r\n\r\n    while(q--) {\r\n        cin >> o;\r\n        if(o == 1) {\r\n            cin >> s;\r\n        } else {\r\n            cin >> o;\r\n            Q[s.size()].push_back({o, k++});\r\n        }\r\n    }\r\n\r\n    for(int i = 1; i < MAX; i++) {\r\n        if(!Q[i].size())continue;\r\n        solve(i);\r\n        for(auto [x, y] : Q[i])\r\n            sol[y] = x < i ? 0 : dp[x];\r\n    }\r\n\r\n    for(int i = 0; i < k; i++)\r\n        cout << sol[i] << '\\n';\r\n\r\n    return 0;\r\n}\r\n"
}