{
    "id": 213201889,
    "contestId": 666,
    "creationTimeSeconds": 1689039768,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "C",
        "name": "Codeword",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2500,
        "tags": [
            "combinatorics",
            "strings"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "ziche"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 25,
    "timeConsumedMillis": 1013,
    "memoryConsumedBytes": 6656000,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define mp make_pair\n#define pb push_back\n#define pii pair<int, int>\n#define F first\n#define S second\n#define ld long double\nint const M = 2e5 + 10, M2 = 1e7 + 10, mod = 1e9 + 7, inf = 1e9 + 10, sq = 360;\nint fact[M], rev[M], ans[M], p[M];\nint pw(int x, int y) {\n  if (y == 0)\n    return 1;\n  int tmp = pw(x, y / 2);\n  if (y % 2 == 0)\n    return (tmp * tmp) % mod;\n  return (((tmp * tmp) % mod) * x) % mod;\n}\nint C(int n, int r) {\n  int tmp = rev[r] * rev[n - r];\n  tmp %= mod;\n  tmp *= fact[n];\n  tmp %= mod;\n  return tmp;\n}\nvoid pre(int len) {\n  ans[0] = 1;\n  for (int i = 1; i <= 1e5; i++) {\n    ans[i] = ans[i - 1] * 26;\n    ans[i] %= mod;\n    if (i < len)\n      continue;\n    int bad = C(i - 1, len - 1);\n    bad *= p[i - len];\n    bad %= mod;\n    ans[i] -= bad;\n    ans[i] += mod;\n    ans[i] %= mod;\n  }\n}\nint32_t main() {\n  fact[0] = 1;\n  rev[0] = pw(1, mod - 2);\n  for (int i = 1; i <= 1e5; i++)\n    fact[i] = fact[i - 1] * i, fact[i] %= mod, rev[i] = pw(fact[i], mod - 2);\n  int q;\n  cin >> q;\n  int len;\n  string x;\n  cin >> x;\n  p[0] = 1;\n  for (int i = 1; i <= 1e5; i++)\n    p[i] = p[i - 1] * 25, p[i] %= mod;\n  len = x.size();\n  bool flag = 0;\n  if (len > sq) {\n    pre(len);\n    flag = 1;\n  }\n  while (q--) {\n    int ty;\n    scanf(\"%lld\", &ty);\n    if (ty == 1) {\n      cin >> x;\n      len = x.size();\n      if (len > sq)\n        pre(len), flag = 1;\n      else\n        flag = 0;\n    }\n    if (ty == 2) {\n      int n;\n      scanf(\"%lld\", &n);\n      if (flag)\n        printf(\"%lld\\n\", (pw(26, n) - ans[n] + mod) % mod);\n      else {\n        int all = pw(26, n);\n        int bad = 0;\n        for (int j = 0; j < len; j++) {\n          int res = C(n, j) * p[n - j];\n          res %= mod;\n          bad += res;\n          bad %= mod;\n        }\n        all -= bad;\n        all += mod;\n        all %= mod;\n        printf(\"%lld\\n\", all);\n      }\n    }\n  }\n}\n\n// jMNYoHiJRpxZHHRNoxsKCwPaRdzkehCzsiMnxDyQAonYoWUzFkxhJxHoWlqZaPydxUNgMVRkbGARFUiOpDaIPavhmEPHlwMjEHXoCLqgmADUJqHGlfcMtOPjJVZTPOEw"
}