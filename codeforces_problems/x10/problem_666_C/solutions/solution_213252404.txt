{
    "id": 213252404,
    "contestId": 666,
    "creationTimeSeconds": 1689066384,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "C",
        "name": "Codeword",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2500,
        "tags": [
            "combinatorics",
            "strings"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "tomas_fang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n\nconst int M = 2e5 + 10, mod = 1e9 + 7, sq = 360;\nint fact[M], rev[M], ans[M], p[M];\n\nint pw(int x, int y) {\n    if (y == 0)\n        return 1;\n    int tmp = pw(x, y / 2);\n    if (y % 2 == 0)\n        return (tmp * tmp) % mod;\n    return (((tmp * tmp) % mod) * x) % mod;\n}\n\nint C(int n, int r) {\n    int tmp = rev[r] * rev[n - r];\n    tmp %= mod;\n    tmp *= fact[n];\n    tmp %= mod;\n    return tmp;\n}\n\nvoid pre(int len) {\n    ans[0] = 1;\n    for (int i = 1; i <= len; i++) {\n        ans[i] = ans[i - 1] * 26;\n        ans[i] %= mod;\n        if (i < len)\n            continue;\n        int bad = C(i - 1, len - 1);\n        bad *= p[i - len];\n        bad %= mod;\n        ans[i] -= bad;\n        ans[i] += mod;\n        ans[i] %= mod;\n    }\n}\n\nint32_t main() {\n    fact[0] = 1;\n    rev[0] = pw(1, mod - 2);\n    for (int i = 1; i <= M - 10; i++)\n        fact[i] = fact[i - 1] * i, fact[i] %= mod, rev[i] = pw(fact[i], mod - 2);\n    \n    int q;\n    cin >> q;\n    int len;\n    string x;\n    cin >> x;\n    int p = 1;\n    for (int i = 1; i <= M - 10; i++)\n        p = p * 25 % mod;\n    len = x.size();\n    bool flag = 0;\n    if (len > sq) {\n        pre(len);\n        flag = 1;\n    }\n    while (q--) {\n        int ty;\n        scanf(\"%lld\", &ty);\n        if (ty == 1) {\n            cin >> x;\n            len = x.size();\n            if (len > sq)\n                pre(len), flag = 1;\n            else\n                flag = 0;\n        }\n        if (ty == 2) {\n            int n;\n            scanf(\"%lld\", &n);\n            if (flag)\n                printf(\"%lld\\n\", (pw(26, n) - ans[n] + mod) % mod);\n            else {\n                int all = pw(26, n);\n                int bad = 0;\n                for (int j = 0; j < len; j++) {\n                    int res = C(n, j) * p[n - j];\n                    res %= mod;\n                    bad += res;\n                    bad %= mod;\n                }\n                all -= bad;\n                all += mod;\n                all %= mod;\n                printf(\"%lld\\n\", all);\n            }\n        }\n    }\n}\n// qMtFipvodmWwQvpSpXVefvclLdTDJeexvnpvqnIojXIxXvNvVtXwbuIiEaYUVOtlpFRgcgzGVLafSiCvvxnwkoIYRGkVahoQWIlfsdWhgOEETYaxDSbOPVhSeMJpNlOw"
}