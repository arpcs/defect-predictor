{
    "id": 217644218,
    "contestId": 666,
    "creationTimeSeconds": 1691420314,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 666,
        "index": "C",
        "name": "Codeword",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2500,
        "tags": [
            "combinatorics",
            "strings"
        ]
    },
    "author": {
        "contestId": 666,
        "members": [
            {
                "handle": "WilliamFranklin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461947700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 3174400,
    "source": "#include <iostream>\r\n#include <cstring>\r\n#include <string>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <sstream>\r\n#include <cstdio>\r\n\r\nusing namespace std;\r\n\r\nconst int N = 1e5 + 5, mod = 1e9 + 7;\r\n\r\nstring s;\r\nint m;\r\nlong long fact[N];\r\nlong long infact[N];\r\nlong long mi[N];\r\nlong long mi1[N];\r\nint last = 0;\r\n\r\nlong long quickpow(long long a, long long b) {\r\n\tlong long res = 1;\r\n\twhile (b) {\r\n\t\tif (b & 1) res = res * a % mod;\r\n\t\t\r\n\t\ta = a * a % mod;\r\n\t\t\r\n\t\tb >>= 1;\r\n\t}\r\n\t\r\n\treturn res;\r\n}\r\n\r\nint main() {\r\n\tcin >> m >> s;\r\n\t\r\n\tlast = s.size();\r\n\tfact[0] = 1;\r\n\tmi[0] = mi1[0] = 1;\r\n\tinfact[0] = 1;\r\n\tfor (int i = 1; i < N; i++) {\r\n\t\tfact[i] = fact[i - 1] * i % mod;\r\n\t\tinfact[i] = quickpow(fact[i], mod - 2);\r\n\t\tmi[i] = mi[i - 1] * 25 % mod;\r\n\t\tmi1[i] = mi1[i - 1] * 26 % mod;\r\n\t}\r\n\t\r\n\tlong long ans = 0;\r\n\twhile (m--) {\r\n\t\tint op, n;\r\n\t\t\r\n\t\tscanf(\"%d\", &op);\r\n\t\t\r\n\t\tif (op == 1) {\r\n\t\t\tcin >> s;\r\n\t\t\tlast = s.size();\r\n\t\t\tans = 0;\r\n\t\t} else {\r\n\t\t\tscanf(\"%d\", &n);\r\n\t\t\tint t = s.size();\r\n\t\t\tfor (int i = last; i <= n; i++) {\r\n\t\t\t\tans = (ans + mi[i - s.size()] * mi1[n - i] % mod * fact[i - 1] % mod * infact[t - 1] % mod * infact[i - t] % mod) % mod;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (int i = last; i > n; i--) {\r\n\t\t\t\tans = (ans - mi[i - s.size()] * mi1[n - i] % mod * fact[i - 1] % mod * infact[t - 1] % mod * infact[i - t] % mod + mod) % mod;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlast = n + 1;\r\n\t\t\t\r\n\t\t\tprintf(\"%lld\\n\", ans);\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn 0;\r\n}"
}