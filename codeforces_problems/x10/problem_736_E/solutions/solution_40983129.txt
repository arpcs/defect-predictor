{
    "id": 40983129,
    "contestId": 736,
    "creationTimeSeconds": 1532976259,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 736,
        "index": "E",
        "name": "Chess Championship",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2900,
        "tags": [
            "constructive algorithms",
            "flows",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 736,
        "members": [
            {
                "handle": "ReaLNero1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1480264500
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 35,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 9113600,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nint n, m;\nint wins [3000];\nchar tourn [3000][3010];\nint main(){\n  scanf(\"%d %d\", &m, &n);\n  for(int i = 0; i<m; i++){\n    for(int j = 0; j<m; j++)\n      tourn[i][j] = 'D';\n    tourn[i][m] = '\\0';\n    tourn[i][i] = 'X';\n  }\n  int sum = 0;\n  for(int i = 0; i<n; i++){\n    scanf(\"%d\", wins+i);\n    wins[i] -= m-1;\n    sum += wins[i];\n  }\n  if(sum < 0){\n    printf(\"no\\n\");\n    return 0;\n  }\n  if(m != n){\n    int mn = sum/(m-n);\n    int reps = sum % (m-n);\n    if(-1*mn > wins[n-1]){\n      printf(\"no\\n\");\n      return 0;\n    }\n    for(int i = n; i<m-reps; i++)\n      wins[i] = -1*mn;\n    for(int i = m-reps; i<m; i++)\n      wins[i] = -1*(mn+1);\n  }else if(sum != 0){\n    printf(\"no\\n\");\n    return 0;\n  }\n  for(int i = 0; i<m; i++){\n    if(wins[i] > m-i-1){\n      printf(\"no\\n\");\n      return 0;\n    }\n    int end_idx = m-1;\n    int next_idx = m-1;\n    while(wins[i] > 0){\n      while(next_idx > i && wins[next_idx] == wins[end_idx])\n        next_idx--;\n      if(end_idx - next_idx > wins[i]){\n        for(int j = next_idx+1; j<next_idx+1+wins[i]; j++){\n          wins[j]++;\n          tourn[i][j] = 'W';\n          tourn[j][i] = 'L';\n        }\n        wins[i] = 0;\n      }else{\n        for(int j = next_idx+1; j<=end_idx; j++){\n          wins[j]++;\n          tourn[i][j] = 'W';\n          tourn[j][i] = 'L';\n        }\n        wins[i] -= (end_idx-next_idx);\n        end_idx = next_idx;\n      }\n    }\n  }\n  printf(\"yes\\n\");\n  for(int i = 0; i<m; i++){\n    printf(\"%s\\n\", tourn[i]);\n  }\n}\n"
}