{
    "id": 199232146,
    "contestId": 1423,
    "creationTimeSeconds": 1679831621,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1423,
        "index": "B",
        "name": "Valuable Paper",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "flows",
            "graph matchings",
            "graphs"
        ]
    },
    "author": {
        "contestId": 1423,
        "members": [
            {
                "handle": "PseudoCode"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601903100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 561,
    "memoryConsumedBytes": 2867200,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\n#define pll pair<ll, ll>\r\n// #define pll pair<double, double>\r\n#define vpll vector<pair<ll, ll>>\r\n// #define pdd pair<double, double>\r\n\r\n#define pd pair<double, double>\r\n#define vl vector<ll>\r\n#define vd vector<double>\r\n#define vi vector<int>\r\n#define vs vector<string>\r\n#define vvi vector<vi>\r\n#define vvl vector<vl>\r\n#define NO cout << \"NO\" << endl\r\n#define YES cout << \"YES\" << endl\r\n#define debug(x) cout << x << endl\r\n#define push_back push_back\r\n#define all(x) x.begin(), x.end()\r\n#define fr(i, s, e) for (ll i = s; i < e; i++)\r\n#define rep(i, s) for (ll i = 0; i < s.size(); i++)\r\n#define frr(i, s, e) for (ll i = s; i > e; i--)\r\n#define input(x, n)            \\\r\n    for (ll i = 0; i < n; i++) \\\r\n    cin >> x[i]\r\nusing namespace std;\r\nll mod = 998244353;\r\nvoid print(vl &v)\r\n{\r\n    fr(i, 0, (int)v.size()) cout << v[i] << \" \";\r\n    cout << endl;\r\n}\r\nll power(ll x,\r\n         ll y, ll p)\r\n{\r\n    ll res = 1;\r\n\r\n    x = x % p;\r\n\r\n    while (y > 0)\r\n    {\r\n\r\n        if (y & 1)\r\n            res = (res * x) % p;\r\n\r\n        y = y >> 1;\r\n        x = (x * x) % p;\r\n    }\r\n    return res % mod;\r\n}\r\n\r\nll modInverse(ll n,\r\n              ll p)\r\n{\r\n    return power(n, p - 2, p) % mod;\r\n}\r\n\r\nll mex(vl &v)\r\n{\r\n    set<ll> s(begin(v), end(v));\r\n    ll l = 0;\r\n    while (1)\r\n    {\r\n        if (s.count(l) == 0)\r\n            return l;\r\n        l++;\r\n    }\r\n    return l;\r\n}\r\n\r\n// const ll N = (int)5e6;\r\n// ll pre[N];\r\n\r\n// void add(ll i, ll val)\r\n// {\r\n//     for (; i < N; i += (i & -i))\r\n//     {\r\n//         pre[i] += val;\r\n//     }\r\n// }\r\n// ll get(ll i)\r\n// {\r\n//     ll ans = 0;\r\n//     for (; i > 0; i -= (i & -i))\r\n//     {\r\n//         ans += pre[i];\r\n//     }\r\n//     return ans;\r\n// }\r\nconst long N = 10005;\r\nlong n, m, dd[N], match[N], ti, kq, l, r, mid;\r\nvector<long> ke[N], cp[N], c;\r\nbool dfs(long u)\r\n{\r\n    for (long i = 0; i < ke[u].size(); i++)\r\n        if (cp[u][i] <= mid)\r\n        {\r\n            long v = ke[u][i];\r\n            if (dd[v] == ti)\r\n                continue;\r\n            dd[v] = ti;\r\n            if (match[v] == 0)\r\n            {\r\n                match[v] = u;\r\n                return 1;\r\n            }\r\n            if (dfs(match[v]))\r\n            {\r\n                match[v] = u;\r\n                return 1;\r\n            }\r\n        }\r\n    return 0;\r\n}\r\nvoid solve(ll tst = 0)\r\n{\r\n\r\n    cin >> n >> m;\r\n    for (long i = 1; i <= m; i++)\r\n    {\r\n        long u, v, w;\r\n        cin >> u >> v >> w;\r\n        ke[u].push_back(v);\r\n        cp[u].push_back(w);\r\n    }\r\n    l = 1;\r\n    r = 1000000001;\r\n    while (l < r)\r\n    {\r\n        mid = (l + r) >> 1;\r\n        c.clear();\r\n        for (long i = 1; i <= n; i++)\r\n        {\r\n            dd[i] = match[i] = 0;\r\n            c.push_back(i);\r\n        }\r\n        ti = 0;\r\n        kq = 0;\r\n        while (1)\r\n        {\r\n            ti++;\r\n            long cu = c.size();\r\n            for (long i = c.size() - 1; i >= 0; i--)\r\n                if (dfs(c[i]))\r\n                {\r\n                    kq++;\r\n                    c[i] = c.back();\r\n                    c.pop_back();\r\n                }\r\n            if (cu == c.size())\r\n                break;\r\n        }\r\n        if (kq == n)\r\n            r = mid;\r\n        else\r\n            l = mid + 1;\r\n    }\r\n    if (l == 1000000001)\r\n        cout << -1;\r\n    else\r\n        cout << l;\r\n}\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n    int t = 1;\r\n    // cin >> t;\r\n\r\n    while (t--)\r\n    {\r\n        solve();\r\n    }\r\n}"
}