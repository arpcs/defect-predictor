{
    "id": 205660141,
    "contestId": 1423,
    "creationTimeSeconds": 1683944320,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1423,
        "index": "B",
        "name": "Valuable Paper",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "flows",
            "graph matchings",
            "graphs"
        ]
    },
    "author": {
        "contestId": 1423,
        "members": [
            {
                "handle": "ChinaDWH"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601903100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 1029,
    "memoryConsumedBytes": 7577600,
    "source": "#include<bits/stdc++.h>\r\n#define xs first\r\n#define ys second\r\nusing namespace std;\r\ntypedef pair<int,int> PII;\r\ntypedef pair<int,pair<int,int>> PIPII;\r\nconst int N=2e4+10,M=3e5+10,INF=2e9;\r\nint h[N],e[M],ne[M],f[M],idx;\r\nint q[N],d[N],cur[N];\r\nint n,m,S,T;\r\nPIPII ei[M];\r\nvoid add(int a,int b,int c)\r\n{\r\n    e[idx]=b,ne[idx]=h[a],f[idx]=c,h[a]=idx++;\r\n    e[idx]=a,ne[idx]=h[b],f[idx]=0,h[b]=idx++;\r\n}\r\nbool bfs()\r\n{\r\n\tmemset(d,-1,sizeof(d));\r\n    int hh=0,tt=0;\r\n    q[0]=S,d[S]=0,cur[S]=h[S];\r\n    while(hh<=tt)\r\n    {\r\n        int u=q[hh++];\r\n        for(int i=h[u];~i;i=ne[i])\r\n        {\r\n            int j=e[i];\r\n            if(d[j]==-1&&f[i])\r\n            {\r\n                d[j]=d[u]+1;\r\n                cur[j]=h[j];\r\n                if(j==T)return true;\r\n                q[++tt]=j;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nint find(int u,int limit)\r\n{\r\n    if(u==T)return limit;\r\n    int flow=0;\r\n    for(int i=cur[u];~i&&flow<limit;i=ne[i])\r\n    {\r\n        cur[u]=i;\r\n        int j=e[i];\r\n        if(d[j]==d[u]+1&&f[i])\r\n        {\r\n            int t=find(j,min(f[i],limit-flow));\r\n            if(!t)d[j]=-1;\r\n            f[i]-=t,f[i^1]+=t,flow+=t;\r\n        }\r\n    }\r\n    return flow;\r\n}\r\nint dinic()\r\n{\r\n    int res=0,flow;\r\n    while(bfs())while(flow=find(S,INF))res+=flow;\r\n    return res;\r\n}\r\nbool check(int mid)\r\n{\r\n\tmemset(h,-1,sizeof(h));\r\n\tidx=0;\r\n\tfor(int i=1;i<=m;i++)\r\n\t{\r\n\t\tif(ei[i].xs>mid)break;\r\n\t\tadd(ei[i].ys.xs,ei[i].ys.ys,1);\r\n\t}\r\n\tS=N-1,T=N-2;\r\n\tfor(int i=1;i<=n;i++)add(S,i,1),add(i+n,T,1);\r\n\treturn dinic()==n;\r\n}\r\nsigned main()\r\n{\r\n\tios::sync_with_stdio(0),cin.tie(0),cout.tie(0);\r\n    cin>>n>>m;\r\n    for(int i=1;i<=m;i++)\r\n    {\r\n    \tint u,v,w;\r\n    \tcin>>u>>v>>w;\r\n    \tei[i]={w,{u,v+n}};\r\n\t}\r\n\tsort(ei+1,ei+m+1);\r\n\tint l=1,r=1e9;\r\n\twhile(l<r)\r\n\t{\r\n\t\tint mid=l+r>>1;\r\n\t\tif(check(mid))r=mid;\r\n\t\telse l=mid+1;\r\n\t}\r\n\tif(!check(r))r=-1;\r\n\tcout<<r;\r\n\treturn 0;\r\n}"
}