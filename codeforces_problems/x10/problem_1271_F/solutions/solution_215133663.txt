{
    "id": 215133663,
    "contestId": 1271,
    "creationTimeSeconds": 1690094237,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1271,
        "index": "F",
        "name": "Divide The Students",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2700,
        "tags": [
            "brute force"
        ]
    },
    "author": {
        "contestId": 1271,
        "members": [
            {
                "handle": "for_sx_e_1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1576401300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 0,
    "source": "#include<algorithm>\r\n#include<cstdio>\r\n#include<vector>\r\nconst int maxn=3e3+5;\r\nint t;\r\nint ga[2],gb[2],gc[2];\r\nint d[8];\r\nstruct seg{int xl,xr,y,coe;};\r\nstd::vector<seg> go(int da,int db,int dc,int id){\r\n\tint a=ga[id]-da,b=gb[id]-db,c=gc[id]-dc,mi=std::min(a,c);\r\n\tif(a<0||b<0||c<0)return {};\r\n//\tprintf(\"id=%d,a=%d,b=%d,c=%d\\n\",id,a,b,c);\r\n\tif(mi<=b)return {(seg){0,mi,mi,-1}};\r\n\telse return {(seg){0,mi-b,b,0},(seg){mi-b+1,mi,mi,-1}};\r\n}\r\nvoid report(int i,int j,int k,int l,bool rev){\r\n\tint dec[8]={-1,i,j,k,std::min(d[4],ga[0]-i-j-k),\r\n\t\tl,std::min(d[6],gb[0]-i-j-l),std::min(d[7],gc[0]-i-j-l)};\r\n\tfor(int p=1;p<=7;p++)printf(\"%d \",rev?d[p]-dec[p]:dec[p]);\r\n\tprintf(\"\\n\");\r\n\treturn;\r\n}\r\nsigned main(){\r\n\tscanf(\"%d\",&t);\r\n\tfor(int wc=1;wc<=t;wc++){\r\n\t\tscanf(\"%d%d%d%d%d%d\",ga,gb,gc,ga+1,gb+1,gc+1);\r\n\t\tfor(int i=1;i<=7;i++)scanf(\"%d\",d+i);\r\n\t\tint ta=ga[0]+ga[1]-d[1]-d[2]-d[3]-d[4],\r\n\t\t\ttb=gb[0]+gb[1]-d[1]-d[2]-d[5]-d[6],\r\n\t\t\ttc=gc[0]+gc[1]-d[1]-d[3]-d[5]-d[7];\r\n\t\tif(std::min(std::min(ta,tb),tc)<0){\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tbool found=false;\r\n\t\tfor(int i=0;i<=d[2]&&!found;i++)for(int j=0;j<=d[5]&&!found;j++){\r\n\t\t\tstd::vector<seg>lef=go(i,i+j,j,0),rig=go(d[2]-i,d[2]+d[5]-i-j,d[5]-j,1);\r\n//\t\t\tprintf(\"i=%d,j=%d\\n\",i,j);\r\n\t\t\tfor(seg l:lef){\r\n\t\t\t\tif(found)break;\r\n\t\t\t\tfor(seg r:rig){\r\n\t\t\t\t\tif(found)break;\r\n\t\t\t\t\tif(l.xr+r.xr<d[3]||l.xl+r.xl>d[3])continue;\r\n\t\t\t\t\tbool rev=false;\r\n\t\t\t\t\tif(r.coe==0)std::swap(l,r),rev=true;\r\n\t\t\t\t\tif(l.coe==0){\r\n\t\t\t\t\t\tint nl=std::max(r.xl,d[3]-l.xr);\r\n\t\t\t\t\t\tif(l.y+r.y+r.coe*nl>=d[1])found=true,\r\n\t\t\t\t\t\t\treport(std::min(d[1],l.y),i,std::min(d[3],l.xr),j,rev);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tif(l.y+r.y>=d[1]+d[3])found=true,\r\n\t\t\t\t\t\t\treport(std::min(d[1],l.y-l.xr),i,std::min(d[3],l.xr),j,rev);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(!found)printf(\"-1\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n/*\r\n3\r\n9 4 13\r\n1 10 3\r\n1 2 3 4 5 6 7\r\n9 4 13\r\n1 10 3\r\n2 1 3 4 5 6 7\r\n1 2 3\r\n4 5 6\r\n0 0 0 0 0 0 0\r\n*/\r\n/*\r\n111\r\n110\r\n101\r\n100\r\n011\r\n010\r\n001\r\n*/\r\n//namespace burningContract\r\n"
}