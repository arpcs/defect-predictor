{
    "id": 215116023,
    "contestId": 1271,
    "creationTimeSeconds": 1690077776,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1271,
        "index": "F",
        "name": "Divide The Students",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2700,
        "tags": [
            "brute force"
        ]
    },
    "author": {
        "contestId": 1271,
        "members": [
            {
                "handle": "locsey"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1576401300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 125,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define sz(A) (int)A.size() \r\n#define fi first\r\n#define se second\r\n\r\nusing std :: cin;\r\nusing std :: min; \r\nusing std :: max; \r\nusing std :: cout; \r\nusing std :: vector; \r\n\r\nconstexpr int M = 3005; \r\nconstexpr int INF = 0x3f3f3f3f; \r\n\r\ntypedef long long ll; \r\ntypedef unsigned long long ull; \r\ntypedef double db; \r\ntypedef std :: pair < int, int > pii; \r\n\r\ninline int read() { \r\n\tint f = 1, s = 0; char ch = getchar(); \r\n\twhile(!isdigit(ch)) (ch == '-') && (f = -1), ch = getchar(); \r\n\twhile(isdigit(ch)) s = s * 10 + ch - '0', ch = getchar(); \r\n\treturn f * s; \r\n}\r\n\r\nnamespace Solver {\r\n\tint n, a[8], lim[2][3], rem[2][3], bt[8]; \r\n\tinline bool chk() {for(int i = 0; i < 2; ++i) for(int j = 0; j < 3; ++j) if(lim[i][j] < 0) return 0; return 1;}\r\n\tinline void solve() {\r\n\t\tfor(int o = 0; o < 2; ++o) for(int i = 2; ~i; --i) rem[o][i] = read(); \r\n\t\tfor(int i = 7; i; --i) a[i] = read(); \r\n\t\tfor(int xx = 0; xx < 2; ++xx) \r\n\t\t    for(int yy = 0; yy < 3; ++yy) {\r\n\t\t    \tvector < int > ve; int lst = 0; \r\n\t\t    \tfor(int i = 1; i < 8; ++i) if((i >> yy & 1) && (__builtin_popcount(i) > 1)) ve.push_back(i);\r\n\t\t\t\t    else if(__builtin_popcount(i) > 1) lst = i; \r\n\t\t    \tint x = ve[0], y = ve[1], z = ve[2]; \r\n\t\t    \tfor(int i = 0; i <= a[x]; ++i) \r\n\t\t    \t    for(int j = 0; j <= a[y]; ++j) {\r\n\t\t    \t        memcpy(lim, rem, sizeof(rem)); \r\n\t\t    \t    \tbt[x] = i, bt[y] = j; \r\n\t\t    \t    \tfor(int k = 0; k < 3; ++k) if(x >> k & 1) lim[xx][k] -= i, lim[xx ^ 1][k] -= a[x] - i; \r\n\t\t    \t    \tfor(int k = 0; k < 3; ++k) if(y >> k & 1) lim[xx][k] -= j, lim[xx ^ 1][k] -= a[y] - j; \r\n\t\t    \t    \tint g = lim[xx][yy]; if(g < 0) continue ; int cnt = min(g, a[z]); bt[z] = cnt; \r\n\t\t\t\t\t\tfor(int k = 0; k < 3; ++k) if(z >> k & 1) lim[xx][k] -= cnt, lim[xx ^ 1][k] -= a[z] - cnt; \r\n\t\t    \t    \tif(!chk()) continue ; \r\n\t\t    \t    \tint mn1 = INF, mn2 = INF, s = 0; \r\n\t\t    \t    \tfor(int k = 0; k < 3; ++k) if(lst >> k & 1) mn1 = min(mn1, lim[0][k]), mn2 = min(mn2, lim[1][k]);\r\n\t\t    \t    \ts = mn1 + mn2; if(s < a[lst]) continue ; mn1 = min(mn1, a[lst]), mn2 = a[lst] - mn1; bt[lst] = mn1; \r\n\t\t    \t    \tfor(int k = 0; k < 3; ++k) if(lst >> k & 1) lim[0][k] -= mn1, lim[1][k] -= mn2; \r\n\t\t    \t    \tfor(int k = 0; k < 3; ++k) cnt = min(a[1 << k], lim[0][k]), bt[1 << k] = cnt, lim[0][k] -= cnt, lim[1][k] -= a[1 << k] - cnt;\r\n\t\t\t\t\t \tif(chk()) {\r\n\t\t\t\t\t \t\tfor(int k = 7; k; --k) printf(\"%d \", bt[k]); \r\n\t\t\t\t\t \t\tputs(\"\");  \r\n\t\t\t\t\t \t\treturn ; \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\tputs(\"-1\"); \r\n\t}\r\n\tinline void mian() {\r\n\t\tint T = read(); \r\n\t\twhile(T --) solve(); \r\n\t}\r\n} ; \r\n\r\n\r\nint main() \r\n{\r\n\t\r\n\tSolver :: mian(); \r\n\treturn 0; \r\n} "
}