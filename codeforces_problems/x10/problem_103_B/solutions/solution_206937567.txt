{
    "id": 206937567,
    "contestId": 103,
    "creationTimeSeconds": 1684843556,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 103,
        "index": "B",
        "name": "Cthulhu",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1500,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs"
        ]
    },
    "author": {
        "contestId": 103,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1312714800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\nusing namespace  std;\ntypedef long long ll;\n#define all(v) v.begin(),v.end()\n#define IOS ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);\n\nint dx[] = {-1, 1, 0 , 0 , 1 ,  -1 , 1 ,-1};\nint dy[] = {0, 0, 1 , -1, 1, -1, -1, 1};\nconst int N = 1e2 + 10;\nvector<vector<int>>g;\nint start[N] , End[N] , timer = 1 , cycle = 0;\nvoid detect_cycle(int node , int parent) {\n    start[node] = timer++;\n    for(int i : g[node]) {\n        if(i == parent) continue;\n        else if(start[i] == 0) detect_cycle(i , node);\n        else if(End[i] == 0) {\n            cycle = 1;\n        }\n    }\n    End[node] = timer++;\n}\nvoid Testcase() {\n    int n , m; cin >> n >> m;\n    g.resize(n);\n    for(int i = 0; i < m; i++) {\n        int u , v; cin >> u >> v;\n        --u , --v;\n        g[u].push_back(v);\n        g[v].push_back(u);\n    }\n    int ans = 0;\n    for(int i = 0; i < n; i++) {\n        if(start[i] == 0) {\n            detect_cycle(i , -1);\n            ans++;\n        }\n    if(cycle and ans == 1) cout << \"FHTAGN!\\n\";\n    else cout << \"NO\\n\";\n}\nint main() {\n    IOS;\n    int tc = 1;\n//    cin >> tc;\n    while(tc--) {\n        Testcase();\n    }\n    return 0;\n    //\"Perhaps..,we 're asking the wrong questions ..\" -Agent Brown\n}\n   \t\t\t \t \t\t \t\t \t \t   \t  \t\t \t \t",
    "suggested_categories": [
        "algorithm",
        "graph theory",
        "c++",
        "dfs",
        "data structures",
        "coding patterns",
        "competitive programming",
        "debugging",
        "recursion",
        "complexity analysis",
        "code efficiency",
        "graph traversal",
        "error handling",
        "input/output handling",
        "modularity",
        "testing",
        "optimization",
        "code reusability",
        "code structure",
        "coding conventions"
    ]
}