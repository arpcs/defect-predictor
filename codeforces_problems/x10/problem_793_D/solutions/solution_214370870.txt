{
    "id": 214370870,
    "contestId": 793,
    "creationTimeSeconds": 1689692492,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 793,
        "index": "D",
        "name": "Presents in Bankopolis",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 793,
        "members": [
            {
                "handle": "queen"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1492965900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 43,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 4608000,
    "source": "#include <bits/stdc++.h>\r\n//#include <ext/pb_ds/assoc_container.hpp>\r\n\r\n#define x first\r\n#define y second\r\n#define ndl '\\n'\r\n#define mp make_pair\r\n#define mt make_tuple\r\n#define pb push_back\r\n#define up_b upper_bound\r\n#define low_b lower_bound\r\n#define sz(x) (int)x.size()\r\n#define all(x) x.begin(), x.end()\r\n#define rall(x) x.rbegin(), x.rend()\r\n\r\nusing namespace std;\r\n//using namespace __gnu_pbds;\r\n\r\n//template<typename T> using indexed_set = tree <T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());//uniform_int_distribution<int> (l, r)\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef unsigned int uint;\r\ntypedef unsigned long long ull;\r\ntypedef pair<ll, ll> pll;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<int, ll> pil;\r\ntypedef pair<ll, int> pli;\r\ntypedef pair<int, ull> piu;\r\ntypedef vector<vector<int>> matrix;\r\n\r\nconst ll INF = (ll)1e18 + 123;\r\nconst ld EPS = 1e-9;\r\nconst int inf = 1e9 + 123;\r\nconst int MOD = 1e9 + 7;\r\nconst int N = 83;\r\nconst int M = 1e6 + 123;\r\nconst double pi = 3.14159265359;\r\nconst int dx[] = {0, 0, 1, -1};\r\nconst int dy[] = {1, -1, 0, 0};\r\n\r\nint g[N][N];\r\n\r\nint dp[N][N][N][2];\r\n\r\nvoid solve(){\r\n    int n, k, m;\r\n    cin >> n >> k >> m;\r\n    if (k == 1){\r\n        cout << 0;\r\n        return;\r\n    }\r\n    k--;\r\n    for (int i = 1; i <= n; i++){\r\n        for (int j = 1; j <= n; j++){\r\n            g[i][j] = inf;\r\n        }\r\n    }\r\n    while (m--){\r\n        int u, v, c;\r\n        cin >> u >> v >> c;\r\n        assert(u != v);\r\n        g[u][v] = min(g[u][v], c);\r\n    }\r\n\r\n    \r\n    memset(dp, 0x3f, sizeof dp);\r\n    int ans = inf;\r\n    for (int len = 2; len <= n; len++){\r\n        for (int i = 1, j = len; j <= n; i++, j++){\r\n            for (int l = 1; l <= k; l++){\r\n                dp[i][j][l][0] = dp[i][j-1][l][0];\r\n                dp[i][j][l][1] = dp[i+1][j][l][1];\r\n                if (l == 1){\r\n                    dp[i][j][1][0] = min(dp[i][j][1][0], g[i][j]);\r\n                    dp[i][j][1][1] = min(dp[i][j][1][1], g[j][i]);\r\n\r\n                }\r\n                dp[i][j][l][0] = min(dp[i][j][l][0], dp[i+1][j][l-1][1] + g[i][j]);\r\n                dp[i][j][l][1] = min(dp[i][j][l][1], dp[i][j-1][l-1][0] + g[j][i]);\r\n                for (int x = i+1; x < j; x++){\r\n                    dp[i][j][l][0] = min(dp[i][j][l][0], dp[x][j][l-1][0] + g[i][x]);\r\n                    dp[i][j][l][1] = min(dp[i][j][l][1], dp[i][x][l-1][1] + g[j][x]);\r\n\r\n                }\r\n\r\n                //cout << i << \" \" << j << \" \" << l<< \" \"<< dp[i][j][l][0]<<\" \"<<dp[i][j][l][1] << endl;\r\n            }\r\n            ans = min({ans, dp[i][j][k][0], dp[i][j][k][1]});\r\n        }\r\n    }\r\n    if (ans == inf) ans = -1;\r\n    cout << ans;\r\n}\r\n    \r\n\r\nint main(){\r\n    #ifdef me\r\n        freopen(\"input.txt\", \"r\", stdin);\r\n        freopen(\"output.txt\", \"w\", stdout);\r\n    #endif\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int t = 1;  \r\n    //cin >> t;\r\n    for (int i = 1; i <= t; i++){\r\n        //cout << \"Case #\" << i << \": \";\r\n        solve();\r\n    }\r\n    #ifdef KAZAKH\r\n      //  cout << endl << 1.0 * clock() / CLOCKS_PER_SEC << endl;\r\n    #endif\r\n    return 0;\r\n}\r\n"
}