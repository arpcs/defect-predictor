{
    "id": 188323966,
    "contestId": 793,
    "creationTimeSeconds": 1673097328,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 793,
        "index": "D",
        "name": "Presents in Bankopolis",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 793,
        "members": [
            {
                "handle": "Lehatr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1492965900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 4096000,
    "source": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\n\nint dp[80][80][80][2];\n//int dp[5][5][5][2];\n\nint main() {\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n\n    int n, k;\n    cin >> n >> k;\n    int m;\n    cin >> m;\n    vector<vector<int>> go(n, vector<int> (n, (int) 1e9));\n    for (int i = 0; i < m; i++) {\n        int a, b, c;\n        cin >> a >> b >> c;\n        a--;\n        b--;\n        go[a][b] = min(go[a][b], c);\n    }\n\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            for (int w = j; w < n; w++) {\n                dp[i][j][w][0] = 0;\n            }\n        }\n    }\n\n    for (int kk = 0; kk < k - 1; kk++) {\n        int now = 0;\n        int pr = 1;\n        if (kk % 2 == 0) {\n            now = 1;\n            pr = 0;\n        }\n\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                for (int w = 0; w < n; w++) {\n                    dp[i][j][w][now] = (int) 1e9;\n                }\n            }\n        }\n\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                for (int w = j; w < n; w++) {\n                    if (dp[i][j][w][pr] >= (int) 1e9) {\n                        continue;\n                    }\n                    for (int to = j; to <= w; to++) {\n                        if (to > i) {\n                            dp[to][i + 1][to - 1][now] = min(dp[to][i + 1][to - 1][now], dp[i][j][w][pr] + go[i][to]);\n                            if (to + 1 < n) {\n                                dp[to][to + 1][w][now] = min(dp[to][to + 1][w][now], dp[i][j][w][pr] + go[i][to]);\n                            }\n                        } else if (to < i) {\n                            dp[to][to + 1][i - 1][now] = min(dp[to][to + 1][i - 1][now], dp[i][j][w][pr] + go[i][to]);\n                            if (to - 1 >= 0) {\n                                dp[to][j][to - 1][now] = min(dp[to][j][to - 1][now], dp[i][j][w][pr] + go[i][to]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    int ans = (int) 1e9;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            for (int w = 0; w < n; w++) {\n                ans = min(ans, dp[i][j][w][(k + 1) % 2]);\n            }\n        }\n    }\n    cout << ans << endl;\n}\n"
}