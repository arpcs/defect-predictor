{
    "id": 213042140,
    "contestId": 793,
    "creationTimeSeconds": 1688954957,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 793,
        "index": "D",
        "name": "Presents in Bankopolis",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 793,
        "members": [
            {
                "handle": "tomas_fang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1492965900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\nconst int INF = 1000000007;\nconst int N = 81;\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  int n, m, p;\n  cin >> n >> p >> m;\n\n  vector<vector<int>> c(N, vector<int>(N, INF));\n  for (int i = 1, x, y, dis; i <= m; ++i) {\n    cin >> x >> y >> dis;\n    c[x][y] = min(dis, c[x][y]);\n  }\n\n  vector<vector<vector<vector<int>>>> f(N, vector<vector<vector<int>>>(N, vector<vector<int>>>(N, vector<int>(2, INF))));\n  \n  for (int i = 1; i <= n; ++i) {\n    for (int j = 1; j <= n; ++j) {\n      for (int k = 0; k <= p; ++k) {\n        f[i][j][k][0] = f[i][j][k][1] = INF;\n      }\n    }\n  }\n\n  for (int i = 1; i <= n; ++i) {\n    f[i][i][1][0] = f[i][i][1][1] = 0;\n  }\n\n  for (int d = 1; d < n; ++d) {\n    for (int i = 1; i + d <= n; ++i) {\n      int j = i + d;\n      for (int k = 2; k <= p; ++k) {\n        for (int i2 = i + 1; i2 < j; ++i2) {\n          f[i][j][k][0] = min(f[i][j][k][0], f[i2][j][k - 1][0] + c[i][i2]);\n          f[i][j][k][0] = min(f[i][j][k][0], f[i2][j][k - 1][1] + c[i][j]);\n          f[i][j][k][0] = min(f[i][j][k][0], f[i2][j][k][0] + c[i][i2]);\n          f[i][j][k][0] = min(f[i][j][k][0], f[i2][j][k][1] + c[i][j]);\n        }\n        f[i][j][k][0] = min(f[i][j][k][0], f[j][j][k - 1][0] + c[i][j]);\n        f[i][j][k][0] = min(f[i][j][k][0], f[j][j][k][0] + c[i][j]);\n        for (int j2 = j - 1; j2 > i; --j2) {\n          f[i][j][k][1] = min(f[i][j][k][1], f[i][j2][k - 1][1] + c[j][j2]);\n          f[i][j][k][1] = min(f[i][j][k][1], f[i][j2][k - 1][0] + c[j][i]);\n          f[i][j][k][1] = min(f[i][j][k][1], f[i][j2][k][1] + c[j][j2]);\n          f[i][j][k][1] = min(f[i][j][k][1], f[i][j2][k][0] + c[j][i]);\n        }\n        f[i][j][k][1] = min(f[i][j][k][1], f[i][i][k - 1][1] + c[j][i]);\n        f[i][j][k][1] = min(f[i][j][k][1], f[i][i][k][1] + c[j][i]);\n      }\n    }\n  }\n  \n  int ans = INF;\n  for (int i = 1; i <= n; ++i) {\n    for (int j = 1; j <= n; ++j) {\n      ans = min(ans, f[i][j][p][0]);\n      ans = min(ans, f[i][j][p][1]);\n    }\n  }\n  cout << (ans == INF ? -1 : ans) << endl;\n  return 0;\n}\n// bSytZokiRqLryxqYmqNlAljYwZmKpsCtgTLuIMWmmAKVLNmrQXAZmrxBZAYpBoumpXWlsXYBiktkjOXndguEedfMOtPWfGAbmJoChhUEDcWXncJvKUecPTDCKFzjqJJJ"
}