{
    "contestId": 793,
    "index": "D",
    "name": "Presents in Bankopolis",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "dp",
        "graphs",
        "shortest paths"
    ],
    "desc": {
        "title": "D. Presents in Bankopolis",
        "statement": "<p>Bankopolis is an incredible city in which all the <span class=\"tex-span\"><i>n</i></span> crossroads are located on a straight line and numbered from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span> along it. On each crossroad there is a bank office.</p><p>The crossroads are connected with <span class=\"tex-span\"><i>m</i></span> oriented bicycle lanes (the <span class=\"tex-span\"><i>i</i></span>-th lane goes from crossroad <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub></span> to crossroad <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span>), the difficulty of each of the lanes is known.</p><p>Oleg the bank client wants to gift happiness and joy to the bank employees. He wants to visit exactly <span class=\"tex-span\"><i>k</i></span> offices, in each of them he wants to gift presents to the employees.</p><p>The problem is that Oleg don't want to see the reaction on his gifts, so he can't use a bicycle lane which passes near the office in which he has already presented his gifts (formally, the <span class=\"tex-span\"><i>i</i></span>-th lane passes near the office on the <span class=\"tex-span\"><i>x</i></span>-th crossroad if and only if <span class=\"tex-span\"><i>min</i>(<i>u</i><sub class=\"lower-index\"><i>i</i></sub>,\u2009<i>v</i><sub class=\"lower-index\"><i>i</i></sub>)\u2009&lt;\u2009<i>x</i>\u2009&lt;\u2009<i>max</i>(<i>u</i><sub class=\"lower-index\"><i>i</i></sub>,\u2009<i>v</i><sub class=\"lower-index\"><i>i</i></sub>)))</span>. Of course, in each of the offices Oleg can present gifts exactly once. Oleg is going to use exactly <span class=\"tex-span\"><i>k</i>\u2009-\u20091</span> bicycle lane to move between offices. Oleg can start his path from any office and finish it in any office.</p><p>Oleg wants to choose such a path among possible ones that the total difficulty of the lanes he will use is minimum possible. Find this minimum possible total difficulty.</p>",
        "inputSpecification": "<p>The first line contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>,\u2009<i>k</i>\u2009\u2264\u200980</span>)\u00a0\u2014 the number of crossroads (and offices) and the number of offices Oleg wants to visit.</p><p>The second line contains single integer <span class=\"tex-span\"><i>m</i></span> (<span class=\"tex-span\">0\u2009\u2264\u2009<i>m</i>\u2009\u2264\u20092000</span>)\u00a0\u2014 the number of bicycle lanes in Bankopolis.</p><p>The next <span class=\"tex-span\"><i>m</i></span> lines contain information about the lanes.</p><p>The <span class=\"tex-span\"><i>i</i></span>-th of these lines contains three integers <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>u</i><sub class=\"lower-index\"><i>i</i></sub>,\u2009<i>v</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i></span>, <span class=\"tex-span\">1\u2009\u2264\u2009<i>c</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u20091000</span>), denoting the crossroads connected by the <span class=\"tex-span\"><i>i</i></span>-th road and its difficulty.</p>",
        "outputSpecification": "<p>In the only line print the minimum possible total difficulty of the lanes in a valid path, or <span class=\"tex-font-style-tt\">-1</span> if there are no valid paths.</p>",
        "samples": [
            {
                "input": "7 4<br/>4<br/>1 6 2<br/>6 2 2<br/>2 4 2<br/>2 7 1<br/>",
                "output": "6<br/>"
            },
            {
                "input": "4 3<br/>4<br/>2 1 2<br/>1 3 2<br/>3 4 2<br/>4 1 1<br/>",
                "output": "3<br/>"
            }
        ],
        "note": "<p>In the first example Oleg visiting banks by path <span class=\"tex-span\">1\u2009\u2192\u20096\u2009\u2192\u20092\u2009\u2192\u20094</span>.</p><p>Path <span class=\"tex-span\">1\u2009\u2192\u20096\u2009\u2192\u20092\u2009\u2192\u20097</span> with smaller difficulity is incorrect because crossroad <span class=\"tex-span\">2\u2009\u2192\u20097</span> passes near already visited office on the crossroad <span class=\"tex-span\">6</span>.</p><p>In the second example Oleg can visit banks by path <span class=\"tex-span\">4\u2009\u2192\u20091\u2009\u2192\u20093</span>.</p>"
    }
}