{
    "id": 221951686,
    "contestId": 817,
    "creationTimeSeconds": 1693925341,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 817,
        "index": "E",
        "name": "Choosing The Commander",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "bitmasks",
            "data structures",
            "trees"
        ]
    },
    "author": {
        "contestId": 817,
        "members": [
            {
                "handle": "bkifhr8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1497539100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 42,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 75673600,
    "source": "//MaDaoVuong\n#include<bits/stdc++.h>\n#define pii pair<int, int>\n#define pll pair<long long, long long>\n#define fi first\n#define se second\n#define pb push_back\n#define setpre(n) fixed << setprecision(n)\n#define mp make_pair\n#define int long long\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\nusing namespace std;\nint n, sz;\nstruct node\n{\n\tint child[2];\n\tint cnt;\n\tnode()\n\t{\n\t\tchild[0] = child[1] = -1;\n\t\tcnt = 0;\n\t}\n};\nvector<node>trie;\nvoid Add(int x)\n{\n\tint pos = 0;\n\tfor(int i = 27; i >= 0; i--)\n\t{\n\t\tint id = (x >> i) & 1;\n\t\tif(trie[pos].child[id] == -1)\n\t\t{\n\t\t\ttrie.pb(node());\n\t\t\ttrie[pos].child[id] = trie.size() - 1;\n\t\t}\n\t\tpos = trie[pos].child[id];\n\t\ttrie[pos].cnt++;\n\t}\n}\nvoid Delete(int x)\n{\n\tint pos = 0;\n\tfor(int i = 27; i >= 0; i--)\n\t{\n\t\tint id = (x >> i) & 1;\n\t\tpos = trie[pos].child[id];\n\t\ttrie[pos].cnt--; \n\t}\n}\nint calc(int pers, int lead)\n{\n\tint pos = 0;\n\tint res = 0;\n\tfor(int i = 27; i >= 0; i--)\n\t{\n\t\tint id = (pers >> i) & 1;\n\t\tint bit = (lead >> i) & 1;\n\t\tif(bit == 1)\n\t\t{\n\t\t\tif(trie[pos].child[id] != -1)\n\t\t\t{\n\t\t\t\tint plus = trie[pos].child[id];\n\t\t\t\tres += trie[plus].cnt;\n\t\t\t}\n\t\t\tif(trie[pos].child[1 - id] == -1) return res;\n\t\t\telse pos = trie[pos].child[1 - id];\n\t\t}\n\t\telse if(bit == 0)\n\t\t{\n\t\t\tif(trie[pos].child[id] == -1) return res;\n\t\t\telse pos = trie[pos].child[id];\n\t\t}\n\t}\n\treturn res;\n}\nsigned main(){\n\t//freopen(\".inp\", \"r\", stdin); freopen(\".out\", \"w\", stdout);\n\t//freopen(\"inp.text\", \"r\", stdin);\n\t//freopen(\"out.text\", \"w\", stdout);\n\tcin.tie(0)->sync_with_stdio(0);\n\ttrie.pb(node());\n\tcin >> n;\n\twhile(n--)\n\t{\n\t\tint event;\n\t\tcin >> event;\n\t\tif(event == 1)\n\t\t{\n\t\t\tint warrior;\n\t\t\tcin >> warrior;\n\t\t\tAdd(warrior);\n\t\t}\n\t\telse if(event == 2)\n\t\t{\n\t\t\tint warrior;\n\t\t\tcin >> warrior;\n\t\t\tDelete(warrior);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tint pers, lead;\n\t\t\tcin >> pers >> lead;\n\t\t\tcout << calc(pers, lead) << '\\n';\n\t\t}\n\t}\n}\n\n  \t \t\t \t \t\t \t \t\t    \t\t \t\t\t \t\t\t"
}