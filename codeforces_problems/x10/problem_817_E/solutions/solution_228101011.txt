{
    "id": 228101011,
    "contestId": 817,
    "creationTimeSeconds": 1697251006,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 817,
        "index": "E",
        "name": "Choosing The Commander",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "bitmasks",
            "data structures",
            "trees"
        ]
    },
    "author": {
        "contestId": 817,
        "members": [
            {
                "handle": "Agakiss"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1497539100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 42,
    "timeConsumedMillis": 296,
    "memoryConsumedBytes": 48128000,
    "source": "// LUOGU_RID: 129235961\n#include<bits/stdc++.h>\r\n#define N 4000040\r\nint q, tot = 1, opt, p, l;\r\nint sum[N];\r\nint tr[N][2];\r\nvoid insert(int x, int z) {\r\n\tint p = 1;\r\n\tbool t;\r\n\tfor (int i = 31; i >= 0; i--) {\r\n\t\tt = x & (1 << i);\r\n\t\tif (!tr[p][t]) tr[p][t] = ++tot;\r\n\t\tp = tr[p][t];\r\n\t\tsum[p] += z;\r\n\t}\r\n}\r\nint search(int p, int l) {\r\n\tint k = 1, res = 0;\r\n\tbool x, y;\r\n\tfor (int i = 31; i >= 0; i--) {\r\n\t\tx = p & (1 << i), y = l & (1 << i);\r\n\t\tif (y) res += sum[tr[k][x]], k = tr[k][x ^ 1];\r\n\t\telse k = tr[k][x];\r\n\t}\r\n\treturn res;\r\n}\r\nint main() {\r\n\tstd::ios::sync_with_stdio(NULL);\r\n\tstd::cin.tie(NULL);\r\n\tstd::cin >> q;\r\n\twhile (q--) {\r\n\t\tstd::cin >> opt;\r\n\t\tif (opt == 1) {\r\n\t\t\tstd::cin >> p;\r\n\t\t\tinsert(p, 1);\r\n\t\t}\r\n\t\tif (opt == 2) {\r\n\t\t\tstd::cin >> p;\r\n\t\t\tinsert(p, -1);\r\n\t\t}\r\n\t\tif (opt == 3) {\r\n\t\t\tstd::cin >> p >> l;\r\n\t\t\tstd::cout << search(p, l) << std::endl;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
}