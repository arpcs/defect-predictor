{
    "id": 228550774,
    "contestId": 817,
    "creationTimeSeconds": 1697548520,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 817,
        "index": "E",
        "name": "Choosing The Commander",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "bitmasks",
            "data structures",
            "trees"
        ]
    },
    "author": {
        "contestId": 817,
        "members": [
            {
                "handle": "lxhCB_KID_2695"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1497539100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 42,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 72192000,
    "source": "// LUOGU_RID: 130016727\n#include<iostream>\r\n#include<cstdio>\r\n#include<cstring>\r\n#include<string>\r\n#include<algorithm>\r\n#include<cmath>\r\n#define FOR(i,a,b) for(int i=(a);i<=(b);i++)\r\n#define RFOR(i,a,b) for(int i=(a);i>=(b);i--)\r\n#define hh() putchar('\\n')\r\n#define kg() putchar(' ')\r\n#define qwe(s) cout<<s;\r\n#define int long long\r\nusing namespace std;\r\ntypedef long long ll;\r\nll lread(){char c;ll x=0,y=1;c=getchar();while(c<'0'||c>'9'){if(c=='-') y=-1;c=getchar();}while(c>='0'&&c<='9'){x=(x<<3)+(x<<1)+(c^'0');c=getchar();}return x*y;}\r\nint iread(){char c;int x=0,y=1;c=getchar();while(c<'0'||c>'9'){if(c=='-') y=-1;c=getchar();}while(c>='0'&&c<='9'){x=(x<<3)+(x<<1)+(c^'0');c=getchar();}return x*y;}\r\nll exgcd(ll a,ll b,ll &x,ll &y,ll c){if(!b){x=c/a;y=0;if(c%a)a=-1;return a;}int g=exgcd(b,a%b,y,x,c);y-=a/b*x;x=x%(b/g);y=(c-a*x)/b;return g;}\r\nvoid swep(int &x,int &y){x=x^y;y=x^y;x=x^y;}\r\nll qmax(ll a,ll b){return (a>b ? a : b);}\r\nll qmin(ll a,ll b){return (a<b ? a : b);}\r\nll qpow(ll a,ll b,ll p){ll an=1;while(b){if(b&1) an=(an*a)%p;a=(a*a)%p;b>>=1;}return an;}\r\nll sgcd(ll a,ll b){if(b==0) return a;else return sgcd(b,a%b);}\r\nll lcm(ll a,ll b){return a*b/sgcd(a,b);}\r\nbool ss(ll a){if(a<2) return 0;for(int i=2;i*i<=a;i++){if(a%i==0) return 0;}return 1;}\r\nll qabs(ll k){return (k<0 ? -k : k);}\r\nint lowbit_i(int x){return x&-x;}\r\nll lowbit_l(ll x){return x&-x;}\r\nconst int N=3e6+5;\r\nstruct node{\r\n\tint ch[2];\r\n}trie[N];\r\nint sz[N];\r\nint cnt=1;\r\nvoid build(int x,int y,int z){\r\n\tfor(int i=32;i>=0;i--){\r\n\t\tint c=(x>>i)&1;\r\n\t\tif(!trie[y].ch[c]) trie[y].ch[c]=++cnt;\r\n\t\ty=trie[y].ch[c];\r\n\t\tsz[y]+=z;\r\n\t}\r\n}\r\nint query(int x,int y,int z){\r\n\tint sum=0;\r\n\tfor(int i=32;i>=0;i--){\r\n\t\tint c=(x>>i)&1;\r\n\t\tint d=(z>>i)&1;\r\n\t\tif(d){\r\n\t\t\tsum+=sz[trie[y].ch[c]];\r\n\t\t\ty=trie[y].ch[c^1];\r\n\t\t}\r\n\t\telse {\r\n\t\t\ty=trie[y].ch[c];\r\n\t\t}\r\n\t}\r\n\treturn sum;\r\n}\r\nint n;\r\n main(){\r\n\tn=iread();\r\n\tFOR(i,1,n){\r\n\t\tint op;\r\n\t\tint x;\r\n\t\top=iread();\r\n\t\tx=iread();\r\n\t\tswitch(op){\r\n\t\t\tcase 1:\r\n\t\t\t\tbuild(x,1,1);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tbuild(x,1,-1);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tint y=iread();\r\n\t\t\t\tprintf(\"%lld\\n\",query(x,1,y));\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
}