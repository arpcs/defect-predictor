{
    "id": 179034210,
    "contestId": 592,
    "creationTimeSeconds": 1667460697,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 592,
        "index": "E",
        "name": "BCPC",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2700,
        "tags": [
            "binary search",
            "geometry",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 592,
        "members": [
            {
                "handle": "J_ai_bt_dou"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1446309000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 373,
    "memoryConsumedBytes": 24064000,
    "source": "#include <bits/stdc++.h>\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n#define int long long\r\n#define faster ios_base::sync_with_stdio(0); cin.tie(0);\r\nusing namespace std;\r\nusing ll = long long;\r\nusing ld = long double;\r\nusing pdi = pair <ld, int>;\r\nusing pii = pair <int, int>;\r\nmt19937_64 Rand(chrono::steady_clock::now().time_since_epoch().count());\r\nconst int maxN = 5e5 + 1;\r\nconst int Mod = 1e9 + 7;\r\n//const int inf =\r\nconst ld PI = atanl(1) * 4;\r\nconst ld eps = 1e-18;\r\nint n, c, d;\r\npii a[maxN];\r\npair <ld, int> b[maxN];\r\n\r\ninline ll sum(ll x){\r\n    return x * (x - 1) / 2;\r\n}\r\n\r\nvoid Init(){\r\n    cin >> n >> c >> d;\r\n    for (int i = 1; i <= n; ++i){\r\n        cin >> a[i].fi >> a[i].se;\r\n        a[i].fi -= c;\r\n        a[i].se -= d;\r\n        b[i].fi = atan2l(a[i].se, a[i].fi);\r\n        b[i].se = i;\r\n    }\r\n    sort(b + 1, b + n + 1);\r\n    for (int i = 1; i <= n; ++i){\r\n        b[i + n] = b[i];\r\n        b[i + n].fi = b[i].fi + 2 * PI;\r\n    }\r\n    ll ans = 0;\r\n    for (int i = 1; i <= n; ++i){\r\n        auto k1 = lower_bound(b + 1, b + 2 * n + 1, pdi{b[i].fi, -1e9}) - b;\r\n        auto k2 = upper_bound(b + 1, b + 2 * n + 1, pdi{b[i].fi, 1e9}) - b;\r\n        auto k3 = lower_bound(b + 1, b + 2 * n + 1, pdi{b[i].fi + PI - eps, -1e9}) - b;\r\n        auto k4 = upper_bound(b + 1, b + 2 * n + 1, pdi{b[i].fi + PI + eps, 1e9}) - b;\r\n        int r = k3 - k2;\r\n        int l = k1 + n - k4;\r\n        int u = k4 - k3 + k2 - i - 1;\r\n        int d = i - k1;\r\n        ans += sum(r + u);\r\n        //ans += sum(r + d);\r\n        ans += sum(l + u);\r\n        //ans += sum(l + d);\r\n        ans -= sum(u);\r\n        ans += sum(d);\r\n        //ans -= sum(l);\r\n        //ans -= sum(r);\r\n        //cerr << k1 << \" \" << k2 << \" \" << k3 << \" \" << k4 << \" \" << l << \" \" << r << \" \" << u << \" \" << d << \" \" << ans << \"\\n\";\r\n    }\r\n    cout <<  n * (n - 1) * (n - 2) / 6 - ans / 2;\r\n\r\n}\r\n\r\n#define debu\r\n#define taskname \"test\"\r\nsigned main(){\r\n    faster\r\n    if (fopen(taskname\".inp\", \"r\")){\r\n        freopen(taskname\".inp\", \"r\", stdin);\r\n        freopen(taskname\".out\", \"w\", stdout);\r\n    }\r\n    int tt = 1;\r\n    //cin >> tt;\r\n    while (tt--){\r\n        Init();\r\n    }\r\n    if (fopen(\"timeout.txt\", \"r\")){\r\n        ofstream timeout(\"timeout.txt\");\r\n        timeout << signed(double(clock()) / CLOCKS_PER_SEC * 1000);\r\n        timeout.close();\r\n        #ifndef debug\r\n        cerr << \"Time elapsed: \" << signed(double(clock()) / CLOCKS_PER_SEC * 1000) << \"ms\\n\";\r\n        #endif // debug\r\n    }\r\n}\r\n"
}