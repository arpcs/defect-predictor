{
    "id": 184049636,
    "contestId": 592,
    "creationTimeSeconds": 1670288963,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 592,
        "index": "E",
        "name": "BCPC",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2700,
        "tags": [
            "binary search",
            "geometry",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 592,
        "members": [
            {
                "handle": "SummerSky"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1446309000
    },
    "programmingLanguage": "MS C++ 2017",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 1154,
    "memoryConsumedBytes": 23347200,
    "source": "#include <stdlib.h>\r\n#include <time.h>\r\n#include <vector>\r\n#include <math.h>\r\n#include <algorithm>\r\n#include <sstream>\r\n#include <iostream>\r\n#include <fstream>\r\n#include <string>\r\n#include <string.h>\r\n#include <map>\r\n#include <stack>\r\n#include <queue>\r\n#include <utility>\r\n#include <set>\r\n#include <bitset>\r\n#include <time.h>\r\n\r\nusing namespace std;\r\n\r\nconst int M=400000+5;\r\n\r\ntypedef long long int ll;\r\n\r\nint sign(ll x){\r\n\tif (x >= 0){\r\n\t\treturn 1;\r\n\t} else {\r\n\t\treturn -1;\r\n\t}\r\n}\r\nstruct POINT{\r\n\tll r;\r\n\tll w;\r\n\tbool operator < (const POINT& x) const {\r\n\t\tif ((r * x.w - w * x.r) * sign(w) * sign(x.w) < 0){\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t}\r\n}point[M];\r\n\r\nll r[M], w[M];\r\nvector<POINT> vr0,vrp,vrn;\r\n\r\nint cmp(POINT p1, POINT p2){\r\n\tif ((p1.r * p2.w - p1.w * p2.r) * sign(p1.w) * sign(p2.w) < 0){\r\n\t\treturn -1;\r\n\t} else {\r\n\t\tif ((p1.r * p2.w - p1.w * p2.r) * sign(p1.w) * sign(p2.w) > 0){\r\n\t\t\treturn 1;\r\n\t\t} else {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\npair<int,int> bs(vector<POINT> &vr1, POINT p){\r\n\tif (vr1.empty()){\r\n\t\treturn make_pair(0, 0);\r\n\t}\r\n\t\r\n\tint id1 = 0;\r\n\tint f = cmp(vr1[0], p);\r\n\tif (f >= 0){\r\n\t\t;\r\n\t} else {\r\n\t\tint l = 0;\r\n\t\tint r = vr1.size();\r\n\t\tr--;\r\n\t\twhile(l < r){\r\n\t\t\tint m = (l + r + 1) / 2;\r\n\t\t\tint g = cmp(vr1[m], p);\r\n\t\t\tif (g == -1){\r\n\t\t\t\tl = m;\r\n\t\t\t} else {\r\n\t\t\t\tr = m - 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tid1 = l + 1;\r\n\t}\r\n\t\r\n\tint id2 = 0;\r\n\tf = cmp(vr1[vr1.size() - 1], p);\r\n\tif (f <= 0){\r\n\t\t;\r\n\t} else {\r\n\t\tint l = 0;\r\n\t\tint r = vr1.size();\r\n\t\tr--;\r\n\t\twhile(l < r){\r\n\t\t\tint m = (l + r) / 2;\r\n\t\t\tint g = cmp(vr1[m], p);\r\n\t\t\tif (g == 1){\r\n\t\t\t\tr = m;\r\n\t\t\t} else {\r\n\t\t\t\tl = m + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tid2 = vr1.size();\r\n\t\tid2 = id2 - r;\r\n\t}\r\n\t\r\n\t\r\n\treturn make_pair(id1, id2);\r\n}\r\n\r\n\r\n\r\nint main()\r\n{\r\n\t\t\r\n\t//freopen(\"input.txt\",\"r\",stdin);\r\n\t//freopen(\"output.txt\",\"w\",stdout);\r\n\t\r\n\ttime_t t_start,t_end;\r\n\tt_start=clock();\r\n\t\r\n\tint n; cin>>n;\r\n\tll c,d; cin>>c>>d;\r\n\tfor (int i = 0; i < n; i++){\r\n\t\tcin>>r[i]>>w[i];\r\n\t\tr[i] -= c;\r\n\t\tw[i] -= d;\r\n\t\tpoint[i].r = r[i];\r\n\t\tpoint[i].w = w[i];\r\n\t}\r\n\t\r\n\tfor (int i = 0; i < n; i++){\r\n\t\tif (w[i] == 0){\r\n\t\t\tvr0.push_back(point[i]);\r\n\t\t}\r\n\t\tif (w[i] > 0){\r\n\t\t\tvrp.push_back(point[i]);\r\n\t\t}\r\n\t\tif (w[i] < 0){\r\n\t\t\tvrn.push_back(point[i]);\r\n\t\t}\r\n\t}\t\r\n\t\r\n\tsort(vr0.begin(), vr0.end());\r\n\tsort(vrp.begin(), vrp.end());\r\n\tsort(vrn.begin(), vrn.end());\r\n\t\r\n\t/*\r\n\tfor \r\n\tri*wj>rj*wi\r\n\trj*wk>rk*wj\r\n\trk*wi>ri*wk\r\n\tnote that if wi,wj,wk are all positive or negative, it is impossible\r\n\tthus,\r\n\tif wi>0,wj>0,wk<0, we have\r\n\tri/wi>rj/wj\r\n\trj/wj<rk/wk\r\n\trk/wk<ri/wi\r\n\ti.e.,rj/wj<rk/wk<ri/wi, we enumerate rk/wk, and use binary search\r\n\tto find rj/wj and ri/wi\r\n\tit is similar for the case wi<0,wj<0,wk>0;\r\n\tfinally, note that there can be at most one wi=0\r\n\tsuppose that wi=0, then\r\n\tri*wj>0\r\n\trj*wk>rk*wj\r\n\t0>ri*wk\r\n\tthus, if ri>0, we have wj>0>wk, and rj/wj<rk/wk, therefore we enumerate\r\n\tri/wj, and use binary search to find rk/wk, it is similar for the case\r\n\tof ri<0\r\n\t*/\r\n\t\r\n\tll res = 0;\r\n\tfor (int i = 0; i < vrp.size(); i++){\t\t\r\n\t\tpair<int,int> pr = bs(vrn, vrp[i]);\r\n\t\tll n1 = pr.first;\r\n\t\tll n2 = pr.second;\r\n\t\tres = res + n1 * n2;\r\n\t}\r\n\t\r\n\tfor (int i = 0; i < vrn.size(); i++){\r\n\t\tpair<int,int> pr = bs(vrp, vrn[i]);\r\n\t\tll n1 = pr.first;\r\n\t\tll n2 = pr.second;\r\n\t\tres = res + n1 * n2;\r\n\t}\r\n\t\r\n\tll np = 0;\r\n\tll nn = 0;\r\n\tfor (int i = 0; i < vr0.size(); i++){\r\n\t\tif (vr0[i].r > 0){\r\n\t\t\tnp++;\r\n\t\t}\r\n\t\tif (vr0[i].r < 0){\r\n\t\t\tnn++;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor (int i = 0; i < vrp.size(); i++){\r\n\t\tpair<int,int> pr = bs(vrn, vrp[i]);\r\n\t\tll n1 = pr.first;\r\n\t\tll n2 = pr.second;\t\t\r\n\t\tres = res + np * n2;\r\n\t\tres = res + nn * n1;\r\n\t}\r\n\tcout<<res<<endl;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\r\n\tt_end=clock();\r\n//\tprintf(\"%.10f\\n\", (double)(t_end-t_start)/CLOCKS_PER_SEC );\t\r\n\t\r\n\t\r\n\treturn 0;\r\n\t\r\n}\r\n\r\n"
}