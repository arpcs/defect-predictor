{
    "id": 180153572,
    "contestId": 592,
    "creationTimeSeconds": 1667966721,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 592,
        "index": "E",
        "name": "BCPC",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2700,
        "tags": [
            "binary search",
            "geometry",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 592,
        "members": [
            {
                "handle": "biabeogo147"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1446309000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 32153600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nstruct in4\r\n{\r\n    long long a, b;\r\n    double hsg;\r\n};\r\n\r\nconst double eps = 0.00000000001, pi = acos(-1);\r\nconst int N = 1e6 + 5;\r\nint n;\r\nin4 A[N];\r\ndouble hsg[N];\r\nlong long a, b;\r\n\r\nbool kiemTra(int pos1, int pos2)\r\n{\r\n    double soDoi = A[pos1].hsg + 180;\r\n    soDoi -= 360 * (soDoi >= 360);\r\n\r\n    if (A[pos1].hsg <= soDoi)\r\n        return A[pos1].hsg <= A[pos2].hsg && A[pos2].hsg <= soDoi;\r\n    else\r\n        return A[pos2].hsg <= soDoi || A[pos2].hsg >= A[pos1].hsg;\r\n}\r\n\r\nint realPos(int pos)\r\n{\r\n    return pos > n ? pos - n : pos;\r\n}\r\n\r\nint main()\r\n{\r\n\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n\r\n    cin >> n >> a >> b;\r\n    for (int i = 1; i <= n; ++i)\r\n    {\r\n        cin >> A[i].a >> A[i].b;\r\n        A[i].a -= a, A[i].b -= b;\r\n        A[i].hsg = atan2(A[i].b, A[i].a) * 180 / pi;\r\n        A[i].hsg += (A[i].hsg < 0) * 360;\r\n    }\r\n\r\n    sort(A + 1, A + n + 1, [](const in4 &a, const in4 &b)\r\n         { return a.hsg < b.hsg; });\r\n\r\n    vector<in4> newA;\r\n    vector<int> soLuong;\r\n\r\n    soLuong.emplace_back(0);\r\n    newA.emplace_back((in4){0, 0, 0});\r\n\r\n    soLuong.emplace_back(1);\r\n    newA.emplace_back(A[1]);\r\n    for (int i = 2; i <= n; ++i)\r\n        if (fabs(A[i].hsg - A[i - 1].hsg) <= eps)\r\n            ++soLuong.back();\r\n        else\r\n            newA.emplace_back(A[i]), soLuong.emplace_back(1);\r\n\r\n    long long ans = 1ll * n * (n - 1) * (n - 2) / 6;\r\n    for (int i = 1; i < newA.size(); ++i)\r\n        A[i] = newA[i], ans -= 1ll * soLuong[i] * (soLuong[i] - 1) * (soLuong[i] - 2) / 6;\r\n    n = newA.size() - 1;\r\n\r\n\r\n    for (int i = 1, j = 2, cnt = 0; i <= n; cnt -= soLuong[++i])\r\n    {\r\n        while (kiemTra(i, realPos(j)) && j <= 2 * n)\r\n            cnt += soLuong[realPos(j++)];\r\n        ans -= 1ll * soLuong[i] * cnt * (cnt - 1) / 2;\r\n    }\r\n\r\n    cout << ans;\r\n\r\n    return 0;\r\n}\r\n"
}