{
    "id": 236138184,
    "contestId": 463,
    "creationTimeSeconds": 1701922818,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 463,
        "index": "A",
        "name": "Caisa and Sugar",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1200,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    "author": {
        "contestId": 463,
        "members": [
            {
                "handle": "dophu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1409383800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#pragma GCC optimize(\"O3\")\r\n#include <bits/stdc++.h>\r\n#define ll long long\r\nusing namespace std;\r\nconst int N=101;\r\npair <ll,ll> a[N];  // khi pair sort thi default se sort theo first truoc\r\nint main()\r\n{\r\n    ///FIND THE ELEMENT THAT MAXIMISES THE NUMBER OF SWEETS ,NOT MINIMISE THE COST OF SUGAR\r\n    cin.tie()->sync_with_stdio(0);\r\n    ll n,s;\r\n    cin>>n>>s;\r\n    ll sum=0;\r\n    for (ll j=0;j<n;j++) {\r\n        cin>>a[j].first>>a[j].second;\r\n        sum+=a[j].first*100+a[j].second;\r\n    }\r\n    sort(a,a+n);\r\n    ll maxn=0;\r\n    if (s<a[0].first || s*100 <sum) {\r\n        cout<<-1;\r\n    }\r\n    else {\r\n        for (ll i=0;i<n;i++) {\r\n            if (s<a[i].first) {\r\n                break;\r\n            }\r\n            else {\r\n                if (a[i].second !=0) {\r\n                    maxn=max(maxn,100-a[i].second);\r\n                }\r\n            }\r\n        }\r\n        cout<<maxn;\r\n    }\r\n}"
}