{
    "id": 232819375,
    "contestId": 1032,
    "creationTimeSeconds": 1700029554,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1032,
        "index": "D",
        "name": "Barcelonian Distance",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1032,
        "members": [
            {
                "handle": "Susie.Rain"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542557100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "// LUOGU_RID: 135189732\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n//#define int long long\r\n#define debug(x) cout<<x<<\"--------------------------------------\\n\" ;\r\nconst int N = 2e3 + 10;\r\ntypedef long long ll;\r\nconst int INF = 1e9 ;\r\nconst int MOD = 1e9 + 7 ;\r\ntypedef pair<int,int> PII ;\r\nint gcd(int a,int b){\r\n    return b ? gcd(b,a%b) : a ;\r\n}\r\nll qpow(int a,int k){\r\n    ll res = 1 ;\r\n    while (k){\r\n        if(k&1) res = 1ll * res * a % MOD ;\r\n        a = 1ll * a * a % MOD ;\r\n        k >>= 1 ;\r\n    }\r\n    return res ;\r\n}\r\nint n;\r\ndouble a , b , c;\r\ndouble x[10] , y[10];\r\nconst double eps=1e-10;\r\nconst double PI=acos(-1);\r\ninline int sgn(double x){\r\n    return fabs(x)<eps?0:(x<0?-1:1);\r\n}\r\nstruct point{\r\n    double x,y;\r\n    point(double a=0,double b=0):x(a),y(b){}\r\n    point operator +(const point &A)const{\r\n        return point(x+A.x,y+A.y);\r\n    }\r\n    point operator -(const point &A)const{\r\n        return point(x-A.x,y-A.y);\r\n    }\r\n    point operator *(const double v)const{\r\n        return point(x*v,y*v);\r\n    }\r\n    point operator /(const double v)const{\r\n        return point(x/v,y/v);\r\n    }\r\n    bool operator ==(const point &A)const{\r\n        return sgn(x-A.x)==0&&sgn(y-A.y)==0;\r\n    }\r\n    double norm(){\r\n        return sqrt(x*x+y*y);\r\n    }\r\n};\r\ndouble dist(point a,point b){\r\n    return (a-b).norm();\r\n}\r\nvoid solve(){\r\n    point p[10];\r\n    cin >> a >> b >> c;\r\n    // ax + by + c = 0;\r\n    // y = (-ax - c)/b;\r\n    // x = (-by - c)/a;\r\n    for(int i=1;i<=2;i++) cin >> p[i].x >> p[i].y;\r\n    p[3].x = p[1].x , p[3].y = (-a*p[1].x-c)/b;\r\n    p[4].y = p[1].y , p[3].x = (-b*p[1].y-c)/a;\r\n    p[5].x = p[2].x , p[5].y = (-a*p[2].x-c)/b;\r\n    p[6].y = p[2].y , p[6].x = (-b*p[2].y-c)/a;\r\n    double ans = INF + eps;\r\n    for(int i=3;i<=4;i++){\r\n        for(int j=5;j<=6;j++){\r\n            ans = min(ans,{\r\n                fabs(p[1].x-p[i].x) + fabs(p[1].y-p[i].y) +\r\n                        dist(p[i],p[j]) + fabs(x[2]-x[j])+ fabs(y[2]-y[j])\r\n            });\r\n        }\r\n    }\r\n    cout << fixed << setprecision(7) ;\r\n    cout << ans << '\\n';\r\n}\r\nsigned main(){\r\n    ios::sync_with_stdio(false) ;\r\n    cin.tie(0) ;\r\n    int tt = 1 ;\r\n//    cin >> tt ;\r\n    while (tt--) solve() ;\r\n    return 0 ;\r\n}"
}