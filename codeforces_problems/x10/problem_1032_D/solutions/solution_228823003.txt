{
    "id": 228823003,
    "contestId": 1032,
    "creationTimeSeconds": 1697728898,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1032,
        "index": "D",
        "name": "Barcelonian Distance",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1032,
        "members": [
            {
                "handle": "antonio_montana_ro"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542557100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <set>\r\n#include <map>\r\n#include <vector>\r\n#include <iomanip>\r\n#include <algorithm>\r\n#define int long long\r\n#define pb push_back\r\nusing namespace std;\r\ntemplate <typename T>\r\nvoid debug (T x, string sir)\r\n{\r\n    cout << sir << \" este \" << x << '\\n';\r\n}\r\nstruct punct\r\n{\r\n    long double x,y;\r\n};\r\npunct p[10];\r\nlong double distm (punct a,punct b)\r\n{\r\n    long double rasp = 0;\r\n    if (a.x-b.x > 0)\r\n        rasp+=a.x-b.x;\r\n    else\r\n        rasp+=b.x-a.x;\r\n    if(a.y - b.y > 0)\r\n        rasp+=a.y-b.y;\r\n    else\r\n        rasp+=b.y-a.y;\r\n    return rasp;\r\n}\r\nlong double distn (punct a,punct b)\r\n{\r\n    long double rasp = (a.x-b.x)*(a.x-b.x) + (a.y-b.y)*(a.y-b.y);\r\n    return sqrt(rasp);\r\n}\r\nlong double dp[10][10];\r\nvoid solve()\r\n{\r\n    long double a,b,c;\r\n    long double x1,y1,x2,y2;\r\n    cin >> a >> b >> c;\r\n    cin >> x1 >> y1 >> x2 >> y2;\r\n    p[0] = {x1,y1};\r\n    p[5] = {x2,y2};\r\n    //a*x + b*y + c = 0;\r\n    p[1] = {(-c-b*y1)/a,y1};\r\n    p[2] = {x1,(-c-a*x1)/b};\r\n    p[3] = {(-c-b*y2)/a,y2};\r\n    p[4] = {x2,(-c-a*x2)/b};\r\n    // 0 - A\r\n    // 1 - intersectia lui A cu d pe orizontala\r\n    // 2 - intersectia lui A cu d pe verticala\r\n    // 3 - intersectia lui B cu d pe orizontala\r\n    // 4 - intersectia lui B cu d pe verticala\r\n    // 5 - B\r\n    for (int i=0;i<=5;i++)\r\n        for(int j=0;j<=5;j++)\r\n            dp[i][j] = 1e10;\r\n    for (int i=0;i<6;i++)\r\n        for(int j=i+1;j<6;j++)\r\n        {\r\n            if (i==0 || j==0)\r\n            {\r\n                dp[i][j] = distm(p[i],p[j]);\r\n                continue;\r\n            }\r\n            dp[i][j] = distn(p[i],p[j]);\r\n        }\r\n   for (int k=0;k<6;k++)\r\n        for (int i=0;i<6;i++)\r\n            for(int j=i+1;j<6;j++)\r\n                if (dp[i][j] > dp[i][k] + dp[k][j])\r\n                    dp[i][j] = dp[i][k] + dp[k][j];\r\n   cout << fixed << setprecision(20) << dp[0][5];\r\n}\r\nint32_t main()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    int t = 1;\r\n    //cin >> t;\r\n    while (t)\r\n    {\r\n        t--;\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n"
}