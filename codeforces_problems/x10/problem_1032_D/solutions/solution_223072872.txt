{
    "id": 223072872,
    "contestId": 1032,
    "creationTimeSeconds": 1694516298,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1032,
        "index": "D",
        "name": "Barcelonian Distance",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1032,
        "members": [
            {
                "handle": "MiinaMagdy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542557100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "/*\r\n+---------------------------------------------+\r\n|                                             |\r\n|       \u00a9 12/09/2023 (13:13) MinaMagdy        |\r\n|                                             |\r\n+---------------------------------------------+\r\n*/\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n#define ordered_set tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>\r\n#define multi_ordered_set tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update>\r\n#define endl \"\\n\"\r\n#define MOD 1000000007\r\n#define INF 2000000000\r\n#define all(s) s.begin(), s.end()\r\n#define rall(s) s.rbegin(), s.rend()\r\n#define sz(x) int(x.size())\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef unsigned long long ull;\r\ntypedef complex<ld> Point;\r\n\r\nld a, b, c;\r\nld f(ld x) {\r\n    return (-a * x - c) / b;\r\n}\r\n\r\nld finv(ld y) {\r\n    return (-b * y - c) / a;\r\n}\r\n\r\nvoid cin_point(Point &p) {\r\n    ld x, y;\r\n    cin >> x >> y;\r\n    p = {x, y};\r\n}\r\n\r\nld manhat(Point p1, Point p2) {\r\n    return abs(p1.real() - p2.real()) + abs(p1.imag() - p2.imag());\r\n}\r\n\r\nPoint ternaryX(Point p) {\r\n    ll lx = -1e18, rx = 1e18;\r\n    Point best;\r\n    while (lx <= rx) {\r\n        ll x1 = lx + (rx - lx) / 3;\r\n        ll x2 = rx - (rx - lx) / 3;\r\n        ld y1 = f(x1);\r\n        ld y2 = f(x2);\r\n        Point p1(x1, y1), p2(x2, y2);\r\n        if (manhat(p, p1) < manhat(p, p2)) {\r\n            rx = x2 - 1;\r\n            best = p1;\r\n        }\r\n        else {\r\n            lx = x1 + 1;\r\n            best = p2;\r\n        }\r\n    } \r\n    return best;\r\n}\r\n\r\n\r\nPoint ternaryY(Point p) {\r\n    ll ly = -1e18, ry = 1e18;\r\n    Point best;\r\n    while (ly <= ry) {\r\n        ll y1 = ly + (ry - ly) / 3;\r\n        ll y2 = ry - (ry - ly) / 3;\r\n        ld x1 = finv(y1);\r\n        ld x2 = finv(y2);\r\n        Point p1(x1, y1), p2(x2, y2);\r\n        if (manhat(p, p1) < manhat(p, p2)) {\r\n            ry = y2 - 1;\r\n            best = p1;\r\n        }\r\n        else {\r\n            ly = y1 + 1;\r\n            best = p2;\r\n        }\r\n    } \r\n    return best;\r\n}\r\n\r\nvoid solve() {\r\n    cin >> a >> b >> c;\r\n    Point A, B;\r\n    cin_point(A);\r\n    cin_point(B);\r\n    Point nearA = ternaryX(A);\r\n    Point nearB = ternaryX(B);\r\n    Point nearAv = ternaryY(A);\r\n    Point nearBv = ternaryY(B);\r\n    ld ans = manhat(A, B);\r\n    for (auto& p1 : {nearA, nearAv, {A.real(), f(A.real())}, {finv(A.imag()), A.imag()}}) {\r\n        for (auto& p2 : {nearB, nearBv, {B.real(), f(B.real())}, {finv(B.imag()), B.imag()}}) {\r\n            ans = min(ans, manhat(A, p1) + abs(p1 - p2) + manhat(p2, B));\r\n        }\r\n    }\r\n    cout << setprecision(8) << fixed << ans << endl;\r\n}\r\n\r\nint main(void)\r\n{\r\n    ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);\r\n    int testcase = 1;\r\n    // cin >> testcase;\r\n    while (testcase--)\r\n        solve();\r\n    return 0;\r\n}"
}