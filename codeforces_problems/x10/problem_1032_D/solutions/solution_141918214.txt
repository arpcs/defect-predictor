{
    "id": 141918214,
    "contestId": 1032,
    "creationTimeSeconds": 1641565897,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1032,
        "index": "D",
        "name": "Barcelonian Distance",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1032,
        "members": [
            {
                "handle": "TooSmarthToHandle"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542557100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "\r\n#include<bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <ext/pb_ds/detail/standard_policies.hpp>\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n\r\n\r\n#define LETS_GET_SCHWIFTY ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);  \r\n#define ff              first\r\n#define ss              second\r\n#define int             long long\r\n#define ll              long long\r\n#define pb              push_back\r\n#define pii             pair<int,int>\r\n#define vi              vector<int>\r\n#define pqb             priority_queue<int>\r\n#define pqs             priority_queue<int,vi,greater<int> >\r\n#define setbits(x)      __builtin_popcountll(x)\r\n#define zerobits(x)      __builtin_ctzll(x)\r\n#define mod             998244353\r\n#define inf             1e18\r\n#define ps(x,y)         fixed<<setprecision(y)<<x\r\n#define vpii            vector<pair<int,int> >\r\n#define all(x)          x.begin(),x.end()\r\n#define matrixprint(arr,a,b,c,d) for(int i=a;i<=c;i++){for(int j=b;j<=d;j++){cout<<arr[i][j]<<\" \";}cout<<\"\\n\";}\r\n#define show(arr,x,y)   for(int i=x;i<=y;i++){cout<<arr[i]<<\" \";}cout<<\"\\n\"\r\n#define sz(x)           (int)x.size()\r\n#define db(x)           cout<<x<<\"\\n\";\r\n\r\ntypedef tree<\r\nint,\r\nnull_type,\r\nless<int>,\r\nrb_tree_tag,\r\ntree_order_statistics_node_update>\r\nordered_set;\r\n\r\n//insert,find_by_order,order_of_key,lower_bound,upper_bound;\r\n\r\n#define TRACE\r\n#ifdef TRACE\r\n#define deb(...) __f(#__VA_ARGS__, __VA_ARGS__)\r\ntemplate <typename Arg1>\r\nvoid __f(const char* name, Arg1&& arg1) {\r\n    cout << name << \" : \" << arg1 << std::endl;\r\n}\r\ntemplate <typename Arg1, typename... Args>\r\nvoid __f(const char* names, Arg1&& arg1, Args&&... args) {\r\n    const char* comma = strchr(names + 1, ','); cout.write(names, comma - names) << \" : \" << arg1 << \" | \"; __f(comma + 1, args...);\r\n}\r\n#else\r\n#define deb(...)\r\n#endif\r\n\r\n  \r\n//////////////////////////////code//////////////////////////////\r\n\r\nconst int N = 200;\r\n\r\n#define ld long double \r\n\r\n\r\nbool cmp(ld a , ld b)\r\n{\r\n        return (a - b) < 1e-10;\r\n}\r\n\r\n\r\n\r\nvoid solve()\r\n{\r\n\r\n        int a , b , c;\r\n        cin >> a >> b >> c;\r\n\r\n        int x1 , y1 , x2 , y2;\r\n        cin >> x1 >> y1 >> x2 >> y2;\r\n\r\n        int ans1 = (int)abs(x2 - x1) + (int)abs(y2 - y1);\r\n\r\n        if(a == 0 || b == 0)\r\n        {\r\n                cout << ans1 << \"\\n\";\r\n                return;\r\n        }\r\n\r\n        int g = __gcd( __gcd(a , b) , c);\r\n\r\n            a /= g , b /= g , c /= g;\r\n\r\n        ld A = a , B = b , C = c , X1 = x1 , X2 = x2 , Y1 = y1 , Y2 = y2;\r\n\r\n        vector<long double>ans(5);\r\n\r\n        ans[0] += fabsl(Y1 + (C + A * X1) / B);\r\n        ans[0] += fabsl( sqrtl( ( X2 - X1) * (X2 - X1) + (A * (X2 - X1) / B) * (A * (X2 - X1) / B) ) );\r\n        ans[0] += fabsl( Y2 + (C + A * X2) / B);\r\n\r\n        ans[1] += fabsl(Y1 + (C + A * X1) / B);\r\n        ans[1] += fabsl( sqrtl( ( X1 + (C + B * Y2) / A ) * ( X1 + (C + B * Y2) / A ) + ( Y2 + (C + A * X1) / B ) * ( Y2 + (C + A * X1) / B ) ) );\r\n        ans[1] += fabsl(X2 + (C + B * Y2) / A);\r\n\r\n        ans[2] += fabsl(X1 + (C + B * Y1) / A);\r\n        ans[2] += fabsl( sqrtl( ( X2 + (C + B * Y1) / A ) * ( X2 + (C + B * Y1) / A ) + ( Y1 + (C + A * X2) / B ) * ( Y1 + (C + A * X2) / B ) ) );\r\n        ans[2] += fabsl( Y2 + (C + A * X2) / B);\r\n\r\n\r\n        ans[3] += fabsl(X1 + (C + B * Y1) / A);\r\n        ans[3] += fabsl( sqrtl( ( Y2 - Y1) * (Y2 - Y1) + (B * (Y2 - Y1) / A) * (B * (Y2 - Y1) / A) ) );\r\n        ans[3] += fabsl( X2 + (C + B * Y2) / A);\r\n\r\n\r\n        ans[4] = (ld)ans1;\r\n\r\n        sort(all(ans) , cmp);\r\n\r\n        cout << ps(ans[0] , 10) << \"\\n\";\r\n\r\n    \r\n\r\n}\r\n\r\nint32_t main()\r\n{   \r\n\r\n    LETS_GET_SCHWIFTY;\r\n\r\n     #ifndef ONLINE_JUDGE\r\n     freopen(\"INP.txt\", \"r\", stdin);\r\n     freopen(\"out.txt\", \"w\", stdout);\r\n     #endif  \r\n\r\n\r\n    int t = 1;\r\n   //cin >> t;\r\n\r\n    while (t--)\r\n        solve();\r\n\r\n}\r\n\r\n// check out for following mistakes-\r\n// if using pb operation on vector and then trying to access index..check if sizeof that vec could remain 0 only\r\n// is using prime sieve make sure it fits\r\n// when using factorial template or combinatorics make sure that you edit fillfac fun values and array values\r\n\r\n"
}