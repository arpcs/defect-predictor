{
    "id": 214540087,
    "contestId": 1198,
    "creationTimeSeconds": 1689801764,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1198,
        "index": "B",
        "name": "Welfare State",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1198,
        "members": [
            {
                "handle": "SeyedAmirHs00"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1564497300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define int long long\n\nint32_t main() {\n  int n;\n  cin >> n;\n  vector<int> a(n);\n  for (auto &x : a) {\n    cin >> x;\n  }\n  const int SQ = sqrt(n) + 1;\n  vector<int> dp(n / SQ + 1);\n  int q;\n  cin >> q;\n  while (q--) {\n    int t;\n    cin >> t;\n    if (t == 2) {\n      int x;\n      cin >> x;\n      for (int i = 0; i < SQ; i++) {\n        dp[i] = max(dp[i], x);\n      }\n    } else {\n      int p, x;\n      cin >> p >> x;\n      p--;\n      int y = dp[p / SQ];\n      for (int i = (p / SQ) * SQ; i < (p / SQ + 1) * SQ; i++) {\n        a[i] = max(a[i], y);\n      }\n      a[p] = x;\n      dp[p / SQ] = 0;\n    }\n  }\n  for (int i = 0; i < SQ; i++) {\n    for (int j = i * SQ; j < (i + 1) * SQ; j++) {\n      a[j] = max(a[j], dp[i]);\n    }\n  }\n  for (int i = 0; i < n; i++) {\n    cout << a[i] << ' ';\n  }\n  cout << '\\n';\n}"
}