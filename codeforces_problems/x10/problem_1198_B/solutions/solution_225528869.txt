{
    "id": 225528869,
    "contestId": 1198,
    "creationTimeSeconds": 1695824927,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1198,
        "index": "B",
        "name": "Welfare State",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1198,
        "members": [
            {
                "handle": "jack1eno.1.2401"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1564497300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 7987200,
    "source": "#include<bits/stdc++.h>\r\n\r\n////Ta thuat\r\n//#pragma GCC optimize(\"O2\")\r\n//#pragma GCC target(\"avx,avx2,fma\")\r\n\r\n#define MOD 1000000007\r\n#define fi first\r\n#define se second\r\n#define ll long long\r\n#define ii pair<int,int>\r\n#define Dennis \"\"\r\n#define heap_max(a) priority_queue<a>\r\n#define heap_min(a) priority_queue<a, vector<a>, greater <a>>\r\n#define all(x) (x).begin(), (x).end()\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define el cout << '\\n'\r\n#define rep(i, n) for(int i = 0; i < (n); i++)\r\n#define For(i, a, b) for(int i = (a); i <= (b); i++)\r\n#define Fod(i, a, b) for(int i = (a); i >= (b); i--)\r\n#define bit(x, i) ((x >> i) & 1)\r\n\r\nusing namespace std;\r\ntemplate <class X, class Y> bool minimize(X &a, Y b){\r\n    if (a > b) return a = b, true;\r\n    return false;\r\n}\r\ntemplate <class X, class Y> bool maximize(X &a, Y b){\r\n    if (a < b) return a = b, true;\r\n    return false;\r\n}\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\nint rnd(int l, int r) {return l + rng() % (r - l + 1);}\r\nconst int N = 1e6 + 5;\r\n\r\nint n, a[N], p[N];\r\nvector<ii> vec;\r\n\r\nvoid solve(){\r\n    cin >> n;\r\n    For(i,1,n) cin >> a[i];\r\n\r\n    vec.pb({0, 0});\r\n    memset(p, 0, sizeof(p));\r\n\r\n    int Q; cin >> Q;\r\n    For(id,1,Q){\r\n        int type; cin >> type;\r\n        if(type == 1){\r\n            int pos, val; cin >> pos >> val;\r\n            a[pos] = val;\r\n            p[pos] = id;\r\n        }else{\r\n            int val; cin >> val;\r\n            vec.pb({id, val});\r\n        }\r\n    }\r\n\r\n    int sz = vec.size()-1;\r\n    Fod(i,sz-1,0){\r\n        maximize(vec[i].se, vec[i+1].se);\r\n    }\r\n\r\n    For(i,1,n){\r\n        auto it = lower_bound(all(vec), make_pair(p[i], 0)) - vec.begin();\r\n        cout << max(a[i], vec[it].se) << \" \";\r\n    }\r\n\r\n\r\n}\r\n\r\nint main(){\r\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n    int bla = uniform_int_distribution<int>(1, 100)(rng);\r\n    #define TASK \"\"\r\n    if(fopen(TASK\".inp\", \"r\")) {\r\n        freopen(TASK\".inp\", \"r\", stdin);\r\n        freopen(TASK\".out\", \"w\", stdout);\r\n    }\r\n    int T = 1;\r\n    //cin >> T;\r\n    while(T--){\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}