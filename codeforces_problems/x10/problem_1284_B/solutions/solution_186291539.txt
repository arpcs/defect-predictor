{
    "id": 186291539,
    "contestId": 1284,
    "creationTimeSeconds": 1671648371,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1284,
        "index": "B",
        "name": "New Year and Ascent Sequence",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1400,
        "tags": [
            "binary search",
            "combinatorics",
            "data structures",
            "dp",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1284,
        "members": [
            {
                "handle": "kabulmanmike221"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1578139500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 1945600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nint bs(vector<int>& nums,int node){\r\n   \r\n   int low=0;\r\n   int high=nums.size()-1;\r\n   int idx=-1;\r\n   while(low<=high){\r\n    int mid=(low+high)/2;\r\n    if(nums[mid]<=node){\r\n      idx=mid;\r\n      low=mid+1;\r\n    }\r\n    else{\r\n      high=mid-1;\r\n    }\r\n     \r\n\r\n   }\r\n\r\n\r\n  return idx;\r\n  \r\n\r\n\r\n\r\n}\r\nint main(){\r\n\r\n\r\nvector<vector<int>> v;\r\nint n;\r\ncin>>n;\r\nfor(int i=0;i<n;i++){\r\n    int p;\r\n    cin>>p;\r\n    vector<int> temp;\r\n    for(int j=0;j<p;j++) {\r\n        int var;\r\n        cin>>var;\r\n        temp.push_back(var);\r\n    }\r\n    v.push_back(temp);\r\n}\r\n\r\n\r\nvector<vector<int>> temp;\r\n\r\nfor(int i=0;i<v.size();i++){\r\n    vector<int> t=v[i];\r\n    sort(t.begin(),t.end());\r\n    reverse(t.begin(),t.end());\r\n    if(v[i]==t){\r\n        temp.push_back(v[i]);\r\n    }\r\n}\r\nv=temp;\r\n// for(int i=0;i<v.size();i++){\r\n//     for(int j=0;j<v[i].size();j++){\r\n//         cout<<v[i][j]<<\" \";\r\n//     }\r\n//     cout<<endl;\r\n// }\r\n\r\nfor(int i=0;i<v.size();i++) sort(v[i].begin(),v[i].end());\r\nvector<int> maxi;\r\nfor(int i=0;i<v.size();i++) maxi.push_back(v[i].back());\r\nsort(maxi.begin(),maxi.end());\r\n//for(int i=0;i<maxi.size();i++) cout<<maxi[i]<<\" \";\r\n//cout<<endl;\r\n\r\n  long long int ans=0;\r\nfor(int i=0;i<v.size();i++){\r\n\r\n  int prev=ans;\r\n  int curr=v[i][0];\r\n  \r\n   \r\n    ans+=((upper_bound(maxi.begin(),maxi.end(),curr)-maxi.begin()));\r\n    //cout<<idx<<endl;\r\n\r\n  \r\n  //cout<<\"diff:\"<<ans-prev<<\" \"<<\"curr: \"<<curr<<endl;\r\n \r\n}\r\n\r\n//cout<<\"ans : \";\r\n cout<<n*n-ans<<endl;\r\n\r\n\r\n\r\n}"
}