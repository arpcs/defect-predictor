{
    "id": 205731738,
    "contestId": 1284,
    "creationTimeSeconds": 1683989347,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1284,
        "index": "B",
        "name": "New Year and Ascent Sequence",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1400,
        "tags": [
            "binary search",
            "combinatorics",
            "data structures",
            "dp",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1284,
        "members": [
            {
                "handle": "rv1225"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1578139500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 9011200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int maxn = 1e6 + 7;\r\nint mi[maxn], ma[maxn];\r\nbool mark[maxn];\r\n\r\nint main()\r\n{\r\n    int n, g = 0;\r\n    cin >> n;\r\n    for(int j = 0; j < n; j++){\r\n        int x, mini = maxn, maxi = 0;\r\n        cin >> x;\r\n        for(int i = 0; i < x; i++){\r\n            int a;\r\n            cin >> a;\r\n            if(a > mini)\r\n                mark[j] = 1;\r\n            mini = min(mini, a);\r\n            maxi = max(maxi, a);\r\n        }\r\n        mi[j] = mini;\r\n        ma[j] = maxi;\r\n        if(mark[j] == 1){\r\n            ma[j] = -1;\r\n            g++;\r\n        }\r\n    }\r\n    int cnt = 0;\r\n    sort(ma, ma + n);\r\n    for(int i = 0; i < n; i++){\r\n        if(mark[i] == 1)\r\n            cnt += n + n - 1;\r\n        else{\r\n           int l = 0, r = n;\r\n            while(r - l > 1){\r\n                int mid = (r + l) / 2;\r\n                if(ma[mid] > mi[i]){\r\n                    r = mid;\r\n                }\r\n                else if(ma[mid] <= mi[i])\r\n                    l = mid;\r\n            }\r\n            cnt += n - r;\r\n        }\r\n    }\r\n    cout << cnt - ( g * (g - 1));\r\n    return 0;\r\n}\r\n"
}