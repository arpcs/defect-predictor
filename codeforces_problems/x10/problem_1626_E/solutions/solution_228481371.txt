{
    "id": 228481371,
    "contestId": 1626,
    "creationTimeSeconds": 1697505581,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1626,
        "index": "E",
        "name": "Black and White Tree",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "dfs and similar",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1626,
        "members": [
            {
                "handle": "chinawcp"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642343700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 20275200,
    "source": "#include<bits/stdc++.h>\r\n#define ll long long \r\n#define ill __int128 \r\n#define ull unsigned long long\r\n#define ld long double\r\n#define yes \"Yes\"\r\n#define no \"No\"\r\nusing namespace std;\r\nconst int inf = 1e9;\r\nconst ll linf = 1e18;\r\nconst int maxn = 1e6 + 5;\r\nconst int N = 2e7 + 5;\r\nconst double eps = 1e-8;\r\nconst int mod = 1e9 + 7;\r\nconst double pi = acos(-1);\r\nconst int prime_bas = 2333;\r\n\r\nint sgn(double x){\r\n    if (fabs(x) < eps)\r\n        return 0;\r\n    if (x < 0)\r\n        return -1;\r\n    else\r\n        return 1;\r\n}\r\nll power(ll x, ll k, int mod = mod){\r\n    if(k == 1) return x;\r\n    if(k == 0) return 1;\r\n    ll tmp = power(x, k / 2, mod);\r\n    if(k & 1) return tmp * tmp % mod * x % mod;\r\n    return tmp * tmp % mod;\r\n}\r\nbool Mbe; double Tim;\r\ntemplate<size_t size>\r\nstruct Road{\r\n    int to[size], next[size], head[size], cnt = 1;\r\n    ll w[size];\r\n    void add(int x, int y, ll ww){\r\n        to[cnt] = y;\r\n        w[cnt] = ww;\r\n        next[cnt] = head[x];\r\n        head[x] = cnt ++;\r\n    }\r\n    void clear(int n){\r\n        for(int i = 0; i <= n; i ++){\r\n            head[i] = 0;\r\n        }\r\n        cnt = 1;\r\n    }\r\n};\r\nRoad <maxn> road; // \u65e0\u5411\u56fe * 2\r\nvoid slove(){\r\n    int n; cin >> n;\r\n    vector<bool> c(n + 1), ans(n + 1, false);\r\n    int cnt = 0;\r\n    for(int i = 1; i <= n; i ++){\r\n        int x; cin >> x;\r\n        c[i] = x, cnt += x;\r\n    }\r\n    for(int i = 1; i < n; i ++){\r\n        int x, y; cin >> x >> y;\r\n        road.add(x, y, 0);\r\n        road.add(y, x, 0);\r\n    }\r\n    vector<bool> f(n + 1, false), g(n + 1, false);\r\n    vector<int> siz(n + 1, 0);\r\n    auto dfs = [&f, &c, &siz] (auto self, int x, int fa) -> void{\r\n        siz[x] = c[x], f[x] = c[x];\r\n        for(int i = road.head[x]; i; i = road.next[i]){\r\n            int to = road.to[i];\r\n            if(to == fa) continue;\r\n            self(self, to, x);\r\n            if(c[to]) f[x] = true;\r\n            if(f[to] && siz[to] > 1) f[x] = true;\r\n            siz[x] += siz[to];\r\n        }\r\n    };\r\n    auto dfs2 = [&f, &c, &siz, &g] (auto self, int x, int fa) -> void{\r\n        g[x] = f[x] | g[x];\r\n        for(int i = road.head[x]; i; i = road.next[i]){\r\n            int to = road.to[i];\r\n            if(to == fa) continue;\r\n            if(g[fa] && siz[1] - siz[to] > 1) g[x] = true;\r\n            self(self, to, x);\r\n        }\r\n    };\r\n    dfs(dfs, 1, 0);\r\n    dfs2(dfs2, 1, 0);\r\n    for(int i = 1; i <= n; i ++){\r\n        cout << int(ans[i]) << \" \";\r\n    }\r\n    cout << '\\n';\r\n}\r\nbool Med;\r\nint main()\r\n{\r\n    fprintf(stderr, \"%.3lf MB\\n\", (&Med - &Mbe) / 1048576.0);\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0), cout.tie(0);\r\n    int t = 1, flag = 1;\r\n    // cin >> t, Tim = clock(), flag = 0;\r\n    while(t --){\r\n        if(flag) Tim = clock(), flag = 0;\r\n        slove();\r\n    }\r\n    cerr << '\\n' << 1e3 * (clock() - Tim) / CLOCKS_PER_SEC << \" ms\";\r\n}"
}