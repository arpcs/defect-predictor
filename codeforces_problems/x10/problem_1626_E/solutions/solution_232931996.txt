{
    "id": 232931996,
    "contestId": 1626,
    "creationTimeSeconds": 1700117644,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1626,
        "index": "E",
        "name": "Black and White Tree",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "dfs and similar",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1626,
        "members": [
            {
                "handle": "DoNotMoZheng"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642343700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 49049600,
    "source": "#pragma GCC target(\"avx,avx2\")\r\n#pragma GCC optimize(\"Ofast\")\r\n\r\n#include<bits/stdc++.h>\r\n\r\n#define mem(x,y)memset(x,y,sizeof(x))\r\n#define rep(i,l,r)for(int i = l;i <= r;i ++)\r\n#define dep(i,r,l)for(int i = r;i >= l;i --)\r\n#define tov(i)for(int i = head[x];i;i = e[i].nxt)\r\n#define pb push_back\r\n#define pi pair <int,int> \r\n\r\nusing namespace std;\r\n\r\nint read(){\r\n    int s = 0,w = 1;\r\n    char ch = getchar();\r\n    while(ch < '0' || ch > '9'){if(ch == '-')w = -1;ch = getchar();}\r\n    while(ch >= '0' && ch <= '9')s = s * 10 + ch - '0',ch = getchar();\r\n    return s * w;\r\n}\r\n\r\nnamespace Tem{\r\n    const int mod = 0;//Notice Here!!!!!!!!!!\r\n    int fac[1000010],ifac[1000010];\r\n\r\n    inline int gcd(int a, int b){\r\n        int az = __builtin_ctz(a);\r\n        int bz = __builtin_ctz(b);\r\n        int z = az > bz ? bz : az;\r\n        int diff;\r\n        b >>= bz;\r\n        while(a){\r\n            a >>= az;\r\n            diff = b - a;\r\n            az = __builtin_ctz(diff);\r\n            if(a < b)b = a;\r\n            a = diff < 0 ? -diff : diff;\r\n        }\r\n        return b << z;\r\n    }\r\n\r\n    inline int poww(int x,int y,int MOD = mod){\r\n        int s = 1;\r\n        for(;y;x = x * x % MOD,y >>= 1)if(y & 1)s = s * x % MOD;\r\n        return s;\r\n    }\r\n\r\n    void initfac(int n,int MOD = mod){\r\n        fac[0] = fac[1] = ifac[0] = ifac[1] = 1;\r\n        rep(i,2,n)fac[i] = fac[i - 1] * i % MOD;\r\n        ifac[n] = poww(fac[n],MOD - 2,MOD);\r\n        dep(i,n - 1,2)ifac[i] = ifac[i + 1] * (i + 1)% MOD;\r\n    }\r\n\r\n    inline int inv(int x,int MOD = mod){return poww(x,MOD - 2)% MOD;}\r\n\r\n    inline int C(int x,int y,int MOD = mod){return fac[x] * ifac[y] % MOD * ifac[x - y] % MOD;}\r\n\r\n    void Add(int &x,int y){x = x + y >= mod ? x + y - mod : x + y;}\r\n    void Dec(int &x,int y){x = x - y < 0 ? x - y + mod : x - y;}\r\n    void Mul(int &x,int y){x = x * y % mod;}\r\n}using namespace Tem;\r\n\r\nint n;\r\nint a[1000010];\r\nint ans[1000010];\r\nint f[1000010];\r\nint dep[1000010];\r\nbool bk[1000010];\r\nint sum;\r\n\r\nvector <int> e[1000010];\r\n\r\nvoid add(int x,int y){e[x].push_back(y);}\r\n\r\nvoid solve1(){\r\n    int pos = -1;\r\n    rep(i,1,n)if(a[i] == 1)pos = i;\r\n    for(int v : e[pos])ans[v] = 1;\r\n    ans[pos] = 1;\r\n    rep(i,1,n)printf(\"%lld \",ans[i]);\r\n}\r\n\r\nvoid dfs(int x,int fa){\r\n    dep[x] = dep[fa] + 1;\r\n    f[x] = fa;\r\n    for(int v : e[x]){\r\n        if(v != fa){\r\n            dfs(v,x);\r\n        }\r\n    }\r\n}\r\n\r\nvoid dfs1(int x,int fa){\r\n    if(ans[x] == 0){\r\n        ans[x] = 1;\r\n        sum ++;\r\n    }\r\n    for(int v : e[x]){\r\n        if(v != fa && !bk[v]){\r\n            dfs1(v,x);\r\n        }\r\n    }\r\n}\r\n\r\nvoid doit(int u,int v){\r\n    int tmpu,tmpv;\r\n    tmpu = u;tmpv = v;\r\n    if(dep[u] < dep[v])swap(u,v);\r\n    vector <int> q;\r\n    while(dep[u] > dep[v]){\r\n        bk[u] = 1;q.push_back(u);\r\n        u = f[u];\r\n        bk[u] = 1;q.push_back(u);\r\n    }\r\n    while(u != v){\r\n        bk[u] = bk[v] = 1;q.push_back(u);q.push_back(v);\r\n        u = f[u];v = f[v];\r\n        bk[u] = bk[v] = 1;q.push_back(u);q.push_back(v);\r\n    }\r\n    int pos1,pos2;\r\n    u = tmpu;v = tmpv;\r\n    for(int to : e[u])if(bk[to])pos1 = to;\r\n    for(int to : e[v])if(bk[to])pos2 = to;\r\n    ans[pos1] = ans[pos2] = ans[u] = ans[v] = 1;\r\n    dfs1(u,0);\r\n    dfs1(v,0);\r\n    dfs1(pos1,0);\r\n    dfs1(pos2,0);\r\n    for(int v : q)bk[v] = 0;\r\n    q.clear();\r\n}\r\n\r\nvoid solve2(){\r\n    dfs(1,0);\r\n    vector <int> q;\r\n    rep(i,1,n)if(a[i] == 1)q.push_back(i);\r\n    srand(time(0));\r\n    random_shuffle(q.begin(),q.end());\r\n    int siz = q.size();\r\n    rep(i,0,siz - 1){\r\n        int j = siz - 1 - i;\r\n      //  rep(j,i + 1,siz - 1){\r\n            doit(q[i],q[j]);\r\n            if(sum == n)break;\r\n      // }\r\n        if(sum == n)break;\r\n    }\r\n\r\n    rep(i,1,n)printf(\"%d \",ans[i]);\r\n}\r\n\r\nsigned main(){\r\n    cin>>n;\r\n    rep(i,1,n)a[i] = read();\r\n    rep(i,1,n - 1){\r\n        int x,y;\r\n        x = read(),y = read();\r\n        add(x,y);\r\n        add(y,x);\r\n    }\r\n    int cnt = 0;\r\n    rep(i,1,n)cnt += a[i];\r\n    if(cnt >= 2500){\r\n        rep(i,1,n)printf(\"1 \");\r\n        return 0;\r\n    }\r\n    if(cnt == 0){\r\n        rep(i,1,n)printf(\"0 \");\r\n        return 0;\r\n    }\r\n    if(cnt == 1)solve1();\r\n    else solve2();\r\n}"
}