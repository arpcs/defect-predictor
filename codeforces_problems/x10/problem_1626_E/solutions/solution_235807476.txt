{
    "id": 235807476,
    "contestId": 1626,
    "creationTimeSeconds": 1701761314,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1626,
        "index": "E",
        "name": "Black and White Tree",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "dfs and similar",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1626,
        "members": [
            {
                "handle": "__log__"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642343700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 65,
    "timeConsumedMillis": 343,
    "memoryConsumedBytes": 15564800,
    "source": "# include <bits/stdc++.h>\r\n# define maxn 300100\r\nusing namespace std;\r\n\r\nint n;\r\nint c[maxn], dp[maxn];\r\nint head[maxn], tot;\r\nint nxt[maxn << 1], to[maxn << 1];\r\nbool f[maxn], g[maxn];\r\n\r\nvoid add_edge(int u, int v) {\r\n    nxt[++tot] = head[u];\r\n    to[tot] = v;\r\n    head[u] = tot;\r\n}\r\n\r\nvoid dfs1(int u, int fa) {\r\n    if(c[u]) f[u] = 1, dp[u] = 1;\r\n    for(int i = head[u]; i; i = nxt[i]) {\r\n        int v = to[i];\r\n        if(v == fa) continue;\r\n        dfs1(v, u);\r\n        if(c[v] || (f[v] && dp[v] > 1)) f[u] = 1;\r\n        dp[u] += dp[v];\r\n    }\r\n}\r\n\r\nvoid dfs(int u, int fa) {\r\n    if(f[u] || c[fa]) g[u] = 1;\r\n    for(int i = head[u]; i; i = nxt[i]) {\r\n        int v = to[i];\r\n        if(v == fa) continue;\r\n        if(g[u] && dp[1] - dp[v] > 1) g[v] = 1;\r\n        dfs(v, u);\r\n    }\r\n}\r\n\r\nint main() {\r\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n    cin >> n;\r\n    for(int i = 1; i <= n; ++i) cin >> c[i];\r\n    for(int i = 1; i < n; ++i) {\r\n        int u, v;\r\n        cin >> u >> v;\r\n        add_edge(u, v), add_edge(v, u);\r\n    }\r\n    dfs1(1, 1);\r\n    dfs(1, 1);\r\n    for(int i = 1; i <= n; ++i) cout << (f[i] || g[i]) << ' ';\r\n    return 0;\r\n}\r\n"
}