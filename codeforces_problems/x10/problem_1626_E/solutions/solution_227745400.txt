{
    "id": 227745400,
    "contestId": 1626,
    "creationTimeSeconds": 1697074831,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1626,
        "index": "E",
        "name": "Black and White Tree",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "dfs and similar",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1626,
        "members": [
            {
                "handle": "Raisetsu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642343700
    },
    "programmingLanguage": "MS C++ 2017",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/*\r\nThe world tells me your lie.\r\n\"Everything is perfect.\"\r\n*/\r\n#include <bits/stdc++.h>\r\n#define mp(x, y) make_pair(x, y)\r\n#define all(v) (v).begin(), (v).end()\r\nusing i128 = __int128;\r\nusing i64 = long long;\r\nusing u64 = unsigned long long;\r\n\r\ninline void solve() {\r\n\tint n, cnt = 0; std::cin >> n;\r\n\tstd::vector<int> col(n + 5);\r\n\tfor (int i = 1; i <= n; i++)\r\n\t\tstd::cin >> col[i], cnt += col[i];\r\n\t\t\r\n\tstd::vector<std::vector<int>> g(n + 5);\r\n\tauto addedge = [&](const int& u, const int& v, std::vector<std::vector<int>>& vec) {\r\n\t\tvec[u].push_back(v);\r\n\t};\r\n\tfor (int i = 1, u, v; i < n; i++)\r\n\t\tstd::cin >> u >> v, addedge(u, v, g), addedge(v, u, g);\r\n\tstd::vector<int> siz(n + 5);\r\n\tstd::vector<std::vector<int>> e(n + 5);\r\n\tauto dfs = [&](auto self, const int& u, const int& fath) -> void {\r\n\t\tsiz[u] = col[u];\r\n\t\tfor (int v : g[u]) if (v != fath) {\r\n\t\t\tself(self, v, u);\r\n\t\t\tsiz[u] += siz[v];\r\n\t\t\tif (col[v] || siz[v] >= 2) {\r\n\t\t\t\taddedge(v, u, e);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (col[fath] || cnt - siz[u] >= 2) addedge(fath, u, e);\r\n\t};\r\n\tdfs(dfs, 1, 0);\r\n\r\n\tstd::vector<bool> vis(n + 5);\r\n\tstd::queue<int> que;\r\n\tfor (int i = 1; i <= n; i++) if (col[i]) que.push(i), vis[i] = true;\r\n\twhile (!que.empty()) {\r\n\t\tint u = que.front(); que.pop();\r\n\t\tfor (int v : e[u]) if (!vis[v]) que.push(v);\r\n\t}\r\n\tfor (int i = 1; i <= n; i++) std::cout << vis[i] << \" \";\r\n}\r\n\r\nint main() {\r\n  std::ios::sync_with_stdio(false);\r\n\tstd::cin.tie(0), std::cout.tie(0);\r\n\r\n\tint T = 1;\r\n\t// std::cin >> T;\r\n\twhile (T--) solve();\r\n\treturn 0;\r\n}\r\n"
}