{
    "id": 229673565,
    "contestId": 1626,
    "creationTimeSeconds": 1698229378,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1626,
        "index": "E",
        "name": "Black and White Tree",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "dfs and similar",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1626,
        "members": [
            {
                "handle": "JWRuixi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642343700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 34611200,
    "source": "#include <bits/stdc++.h>\r\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2\")\r\n// #define ATC\r\n#define LL long long\r\n#define eb emplace_back\r\n#define writesp(x) write(x), putchar(' ')\r\n#define writeln(x) write(x), putchar('\\n')\r\n#define FIO(FILENAME) freopen(FILENAME\".in\", \"r\", stdin), freopen(FILENAME\".out\", \"w\", stdout)\r\nusing namespace std;\r\n\r\n#ifdef ATC\r\n#include <atcoder/all>\r\nusing namespace atcoder;\r\n#endif\r\n\r\nnamespace IO {\r\n    char ibuf[(1 << 20) + 1], *iS, *iT;\r\n#if ONLINE_JUDGE\r\n#define gh() (iS == iT ? iT = (iS = ibuf) + fread(ibuf, 1, (1 << 20) + 1, stdin), (iS == iT ? EOF : *iS++) : *iS++)\r\n#else\r\n#define gh() getchar()\r\n#endif\r\n    inline long long read() {\r\n        char ch = gh();\r\n        long long x = 0;\r\n        bool t = 0;\r\n        while (ch < '0' || ch > '9') t |= ch == '-', ch = gh();\r\n        while (ch >= '0' && ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = gh();\r\n        return t ? ~(x - 1) : x;\r\n    }\r\n    template<typename _Tp>\r\n    inline void write(_Tp x) {\r\n        static char stk[64], *top = stk;\r\n        if (x < 0) {\r\n            x = ~(x - 1);\r\n            putchar('-');\r\n        }\r\n        do *top++ = x % 10, x /= 10;\r\n        while (x);\r\n        while (top != stk) putchar((*--top) | 48);\r\n    }\r\n}\r\n\r\nusing IO::read;\r\nusing IO::write;\r\n\r\nconst int N = 3e5 + 500;\r\nint n, cl[N], dfc, L[N], R[N], par[N], sz[N], c[N], rev[N], as[N];\r\nbool ck[N];\r\nvector<int> G[N];\r\n\r\ninline void dfs (int u, int fa) {\r\n    rev[L[u] = ++dfc] = u, par[u] = fa;\r\n    sz[u] = cl[u];\r\n    for (int v : G[u]) {\r\n        if (v == fa) continue;\r\n        dfs(v, u);\r\n        sz[u] += sz[v];\r\n    }\r\n    R[u] = dfc;\r\n}\r\n\r\nint main() {\r\n    n = read();\r\n    for (int i = 1; i <= n; i++) cl[i] = read();\r\n    for (int i = 1, u, v; i < n; i++) {\r\n        u = read(), v = read();\r\n        G[u].eb(v);\r\n        G[v].eb(u);\r\n    }\r\n    dfs(1, 0);\r\n    for (int i = 1; i <= n; i++) ck[par[i]] |= cl[i];\r\n    int all = accumulate(cl + 1, cl + n + 1, 0);\r\n    for (int i = 1; i <= n; i++) {\r\n        if (cl[i]) {\r\n            for (int j : G[i]) {\r\n                if (j == par[i]) continue;\r\n                if (!sz[j]) {\r\n                    ++c[L[j]], --c[R[j] + 1];\r\n                }\r\n                ++c[L[j]], --c[L[j] + 1];\r\n            }\r\n            if (par[i]) {\r\n                if (sz[par[i]] >= 2) {\r\n                    ++c[1], --c[L[par[i]]], ++c[R[par[i]] + 1], --c[n + 1];\r\n                }\r\n                if (sz[i] == all) {\r\n                    ++c[1], --c[L[i]], ++c[R[i] + 1], --c[n + 1];\r\n                }\r\n                ++c[L[par[i]]], --c[L[par[i]] + 1];\r\n            }\r\n        } else if (ck[i]) {\r\n            for (int j : G[i]) {\r\n                if (j == par[i]) continue;\r\n                if (all - sz[j] >= 2) {\r\n                    ++c[L[j]], --c[R[j] + 1];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    for (int i = 1, j = 0; i <= n; i++) {\r\n        j += c[i];\r\n        as[rev[i]] = !!j;\r\n    }\r\n    for (int i = 1; i <= n; i++) writesp(as[i] | cl[i]);\r\n}\r\n// I love WHQ!"
}