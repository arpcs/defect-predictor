{
    "id": 229964571,
    "contestId": 1626,
    "creationTimeSeconds": 1698387870,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1626,
        "index": "E",
        "name": "Black and White Tree",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "dfs and similar",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1626,
        "members": [
            {
                "handle": "juewwj"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642343700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 65,
    "timeConsumedMillis": 343,
    "memoryConsumedBytes": 26828800,
    "source": "#include <bits/stdc++.h>\r\n\r\n//#define DEBUG\r\n// #define InTerminal\r\n//#pragma GCC optimize(3,\"Ofast\",\"inline\")\r\n//#pragma GCC optimize(2)\r\n\r\n#define endl '\\n'\r\n#define int long long\r\n#define i64 long long\r\n#define i128 __int128\r\n#define db double\r\n#define fi first\r\n#define se second\r\n#define pb push_back\r\n#define PII pair<int,int>\r\n#define VI vector<int>\r\n#define VPII vector<pair<int, int> >\r\n#define VVI vector<vector<int> >\r\n#define VVVI vector<vector<vector<int> > >\r\n#define SIZ(a) ((int)(a).size())\r\n#define FOR(i, l, r) for (int i = (l); i <= (r); ++i)\r\n#define REP(i, r, l) for (int i = (r); i >= (l); --i)\r\n#define SIZ(a) ((int)(a).size())\r\n#define FOR(i, l, r) for (int i = (l); i <= (r); ++i)\r\n#define REP(i, r, l) for (int i = (r); i >= (l); --i)\r\n#define for_n(i,a,b) for(int i = a;i < b;i++)\r\n#define ALL(a) a.begin(),a.end()\r\n\r\n#ifdef DEBUG\r\n#ifdef InTerminal\r\n#define dbg(x...) do { cerr << \"\\033[32;1m\" << #x << \" -> \"; err(x); } while (0)\r\nvoid err() { cerr << \"\\033[39;0m\" << endl; }\r\n#else\r\n#define dbg(x...) do { cerr  << #x << \" -> \"; err(x); } while (0)\r\nvoid err() { std::cerr << endl; }\r\n#endif\r\ntemplate<typename T, typename... A>\r\nvoid err(T a, A... x) { std::cerr << a << ' '; err(x...); }\r\n#else\r\n#define dbg(...)\r\n#endif\r\n\r\nconst int INF = 2e18;\r\nconst int Max = 1e9;\r\nconst int N = 3e5 + 10;\r\nconst int M = 4e6 + 10;\r\nconst int lim = 2e7 + 10;\r\nconst int mod = 998244353;\r\nconst double EPS = 1e-9;\r\nconst double PI = acos(-1.0);\r\n\r\nvoid yes() { std::cout << \"YES\" << endl; }\r\nvoid no() { std::cout << \"NO\" << endl; }\r\n\r\n\r\nconstexpr int P = 998244353;\r\n// assume -P <= x < 2P\r\nint norm(int x) {\r\n    if (x < 0) { x += P; }\r\n    if (x >= P) { x -= P; }\r\n    return x;\r\n}\r\ntemplate<typename E>\r\nE power(E n, int k) {\r\n    E ret = E(1);\r\n    while (k) {\r\n        if (k & 1) ret *= n;\r\n        n *= n;\r\n        k >>= 1;\r\n    } return ret;\r\n}\r\nstruct Z {\r\n    int x;\r\n    Z(signed xx = 0) : x(norm(xx)) {}\r\n    Z(long long xx): x(norm(xx % P)) {}\r\n    int val() const { return x; }\r\n    Z operator-() const { return Z(norm(P - x)); }\r\n    Z inv() const { assert(x != 0); return power(*this, P - 2); }\r\n    Z &operator*=(const Z &rhs) { x = (long long)(x) * rhs.x % P; return *this; }\r\n    Z &operator+=(const Z &rhs) { x = norm(x + rhs.x); return *this; }\r\n    Z &operator-=(const Z &rhs) { x = norm(x - rhs.x); return *this; }\r\n    Z &operator/=(const Z &rhs) { return *this *= rhs.inv(); }\r\n    friend Z operator*(const Z &lhs, const Z &rhs) { Z res = lhs; res *= rhs; return res; }\r\n    friend Z operator+(const Z &lhs, const Z &rhs) { Z res = lhs; res += rhs; return res; }\r\n    friend Z operator-(const Z &lhs, const Z &rhs) { Z res = lhs; res -= rhs; return res; }\r\n    friend Z operator/(const Z &lhs, const Z &rhs) { Z res = lhs; res /= rhs; return res; }\r\n    friend std::istream &operator>>(std::istream &is, Z &a) { long long v; is >> v; a = Z(v); return is; }\r\n    friend std::ostream &operator<<(std::ostream &os, const Z &a) { return os << a.val(); }\r\n};\r\n\r\n\r\nusing namespace std;\r\nmt19937 RD(time(0));\r\n\r\nint n,m,k,q;\r\n\r\n\r\n\r\nvoid solve()\r\n{\r\n    cin >> n;\r\n\r\n    VI c(n + 1);\r\n    for(int i = 1;i <= n;++i) cin >> c[i];\r\n\r\n    k = count(ALL(c), 1);\r\n\r\n    VVI g(n + 1);\r\n    for(int i = 1;i <= n - 1;++i) {\r\n        int u, v; cin >> u >> v;\r\n        g[u].pb(v); g[v].pb(u);\r\n    }\r\n\r\n    VI ans(n + 1);\r\n    for(int i = 1;i <= n;++i) {\r\n        if(c[i] == 1) {\r\n            ans[i] = 1;\r\n            for(auto v : g[i]) {\r\n                ans[v] |= 1;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    VI siz(n + 1);\r\n    auto dfs1 = [&](auto dfs1, int u, int f) ->bool {\r\n        siz[u] += c[u];\r\n        for(auto v : g[u]) {\r\n            if(v == f) continue;\r\n            ans[u] |= dfs1(dfs1, v, u);\r\n            siz[u] += siz[v];\r\n        }\r\n        if(siz[u] >= 2 && ans[u] == 1) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    bool tmp = dfs1(dfs1, 1, 0);\r\n\r\n    auto dfs2 = [&](auto dfs2, int u, int f, int state) -> void {\r\n        ans[u] |= state;\r\n        for(auto v : g[u]) {\r\n            if(v == f) continue;\r\n            int nstate = (k - siz[v] >= 2) && ans[u];\r\n            dfs2(dfs2, v, u, nstate);\r\n        }\r\n    };\r\n\r\n    dfs2(dfs2, 1, 0, 0);\r\n\r\n    for(int i = 1;i <= n;++i) {\r\n        cout << ans[i] << \" \";\r\n    }\r\n    cout << endl;\r\n}\r\n\r\n\r\nsigned main()\r\n{\r\n    // freopen(\"./data.in\", \"r\",in);\r\n\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);cout.tie(0);\r\n\r\n    int beg__TT = clock();\r\n\r\n    int t = 1;\r\n//    cin >> t;\r\n    while(t--)\r\n    {\r\n        solve();\r\n    }\r\n\r\n#ifdef DEBUG\r\n    cerr << \"use : \" << (clock() - beg__TT) << \"ms\\n\";\r\n#endif\r\n    return 0;\r\n}\r\n\r\n\r\n\r\n"
}