{
    "id": 227541454,
    "contestId": 296,
    "creationTimeSeconds": 1696943808,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 296,
        "index": "B",
        "name": "Yaroslav and Two Strings",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 296,
        "members": [
            {
                "handle": "Fire_Raku"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1365694200
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 38,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 5836800,
    "source": "// LUOGU_RID: 128642524\n#include <bits/stdc++.h>\ntypedef long long ll;\nint read() {\n\tint x = 0, f = 1;\n\tchar c = getchar();\n\twhile(!isdigit(c)) {\n\t\tif(c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile(isdigit(c)) {\n\t\tx = (x << 3) + (x << 1) + (c - '0');\n\t\tc = getchar();\n\t}\n\treturn x * f;\n}\nconst int mod = 1000000007;\nint t, n;\nll val[100010][2], dp[100010][2][2], sa[100010];\nchar s[100010], w[100010];\nvoid Solve() {\n\tn = read();\n\tstd::cin >> s + 1;\n\tstd::cin >> w + 1;\n\tfor(int i = 1; i <= n; i++) {\n\t\tif(s[i] == '?' && w[i] == '?') {\n\t\t\tval[i][0] = 45;\n\t\t\tval[i][1] = 45;\n\t\t\tsa[i] = 10;\n\t\t}\n\t\telse if(s[i] == '?') {\n\t\t\tval[i][0] = (w[i] - '0');\n\t\t\tval[i][1] = 9 - (w[i] - '0');\n\t\t\tsa[i] = 1;\n\t\t}\n\t\telse if(w[i] == '?') {\n\t\t\tval[i][0] = 9 - (s[i] - '0');\n\t\t\tval[i][1] = (s[i] - '0');\n\t\t\tsa[i] = 1;\n\t\t}\n\t\telse {\n\t\t\tval[i][0] = (s[i] < w[i]);\n\t\t\tval[i][1] = (s[i] > w[i]);\n\t\t\tsa[i] = (s[i] == w[i]);\n\t\t}\n\t}\n\tdp[0][0][0] = 1;\n\tfor(int i = 1; i <= n; i++) {\n\t\tdp[i][0][0] = (dp[i - 1][0][0] * sa[i]);\n\t\tdp[i][1][0] = (dp[i - 1][0][0] * val[i][0] % mod + dp[i - 1][1][0] * (val[i][0] + sa[i]) % mod) % mod;\n\t\tdp[i][0][1] = (dp[i - 1][0][0] * val[i][1] % mod + dp[i - 1][0][1] * (val[i][1] + sa[i]) % mod) % mod;\n\t\tdp[i][1][1] = (dp[i - 1][1][0] * val[i][1] % mod + \n\t\t\t \t\t   dp[i - 1][0][1] * val[i][0] % mod + \n\t\t\t \t\t   dp[i - 1][1][1] * (val[i][0] + val[i][1] + sa[i]) % mod) % mod; \n\t}\n\tstd::cout << dp[n][1][1] << \"\\n\";\n}\n\nint main() {\n\t\n\tSolve();\n\n\treturn 0;\n}"
}