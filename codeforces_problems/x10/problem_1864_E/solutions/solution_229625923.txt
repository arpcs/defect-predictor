{
    "id": 229625923,
    "contestId": 1864,
    "creationTimeSeconds": 1698185606,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1864,
        "index": "E",
        "name": "Guess Game",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "bitmasks",
            "data structures",
            "games",
            "math",
            "probabilities",
            "sortings",
            "strings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1864,
        "members": [
            {
                "handle": "frodakcin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1693060500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <cstdio>\n#include <vector>\n#include <numeric>\n#include <algorithm>\n\ntemplate<typename T> bool ckmin(T& a, T const& b) {return b < a? a= b, 1: 0;}\ntemplate<typename T> bool ckmin(T& a, T && b) {return b < a? a= b, 1: 0;}\ntemplate<typename T> bool ckmax(T& a, T const& b) {return b > a? a= b, 1: 0;}\ntemplate<typename T> bool ckmax(T& a, T && b) {return b > a? a= b, 1: 0;}\nint const INF = 0x3f3f3f3f;\nint main() {\n\tint T; scanf(\"%d\", &T);\n\tfor(int tc=1;tc<=T;++tc) {\n\t\tint N; scanf(\"%d\", &N);\n\t\tstd::vector<int> a(N), b(N), ord(N);\n\t\tfor(int &x: a) scanf(\"%d\", &x);\n\t\tfor(int &x: b) scanf(\"%d\", &x);\n\t\tstd::iota(ord.begin(), ord.end(), 0);\n\t\tstd::sort(ord.begin(), ord.end(), [&](int l, int r) {return a[l]<a[r] || !(a[r]<a[l]) && b[l]<b[r];});\n\n\t\tstd::vector<int> smax(N + 1, -INF); // index: ord\n\t\tfor(int i = N-1;i >= 0; -- i)\n\t\t\tsmax[i] = std::max(smax[i+1], b[ord[i]]);\n\n\t\tint best = INF;\n\t\tfor(int i = 0, j = 0;i < N;)\n\t\t{\n\t\t\tfor(j = i + 1;j < N && a[ord[i]] == a[ord[j]];++j);\n\t\t\tint bmax = smax[j];\n\t\t\tint amax = a[ord[i]];\n\t\t\tckmin(best, std::abs(bmax - amax));\n\t\t\tif(j - i >= 2)\n\t\t\t\tfor(;i < j; ++ i)\n\t\t\t\t\tckmax(bmax, b[ord[i]]),\n\t\t\t\t\t\tckmin(best, std::abs(bmax - amax));\n\t\t\telse\n\t\t\t\ti = j;\n\t\t}\n\t\tprintf(\"%d\\n\", best);\n\t}\n\treturn 0;\n}\n"
}