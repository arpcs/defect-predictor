{
    "id": 233940538,
    "contestId": 1864,
    "creationTimeSeconds": 1700754948,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1864,
        "index": "E",
        "name": "Guess Game",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "bitmasks",
            "data structures",
            "games",
            "math",
            "probabilities",
            "sortings",
            "strings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1864,
        "members": [
            {
                "handle": "tch1cherin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1693060500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 18,
    "timeConsumedMillis": 764,
    "memoryConsumedBytes": 60313600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int MOD = 998244353;\r\n\r\nint solve(vector<int> s, int bit = 30, int j = 1) {\r\n  if (bit == -1) {\r\n    int n = (int)s.size();\r\n    return 1LL * n * n * j % MOD;\r\n  } else if (s.empty()) {\r\n    return 0;\r\n  } else {\r\n    vector<int> t[2];\r\n    for (int value : s) {\r\n      t[(value >> bit) & 1].push_back(value);\r\n    }\r\n    int x = (int)t[0].size(), y = (int)t[1].size();\r\n    int ans = (solve(t[0], bit - 1, j) + solve(t[1], bit - 1, j + 1)) % MOD;\r\n    ans = (ans + 1LL * x * y * (2 * j + 1)) % MOD;\r\n    return ans;\r\n  }\r\n}\r\n\r\nint inverse(int x) {\r\n  int ans = 1;\r\n  for (int base = x, p = MOD - 2; p > 0; base = 1LL * base * base % MOD, p /= 2) {\r\n    if (p & 1) {\r\n      ans = 1LL * ans * base % MOD;\r\n    }\r\n  }\r\n  return ans;\r\n}\r\n\r\nint main() {\r\n  cin.tie(nullptr)->sync_with_stdio(false);\r\n  int t;\r\n  cin >> t;\r\n  while (t--) {\r\n    int n;\r\n    cin >> n;\r\n    vector<int> s(n);\r\n    for (int &v : s) {\r\n      cin >> v;\r\n    }\r\n    cout << 1LL * solve(s) * inverse(1LL * n * n % MOD) % MOD << \"\\n\";\r\n  }\r\n}\r\n"
}