{
    "id": 232480348,
    "contestId": 1864,
    "creationTimeSeconds": 1699779601,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1864,
        "index": "E",
        "name": "Guess Game",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "bitmasks",
            "data structures",
            "games",
            "math",
            "probabilities",
            "sortings",
            "strings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1864,
        "members": [
            {
                "handle": "Rahul42081"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1693060500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\n#define MAX (ll) 3e3+1\r\n#define mod (ll) 998244353\r\n#define all(x) x.begin(),x.end()\r\n#define pr pair<int,int>\r\ntypedef long long int ll;\r\ntypedef long double dl;\r\nusing namespace std;\r\nll n,k,m,s;\r\nstruct trie{\r\n    int val=0;\r\n    trie *left=NULL,*right=NULL;\r\n};\r\ntrie *head=NULL;\r\n// int get_sum(trie *node){\r\n//     return (node->left?node->left->val:0)+(node->right?node->right->val:0)\r\n// }\r\nll power(int a,int b){\r\n    if(b==0) return 1;\r\n    ll ans=power(a,b/2);\r\n    if(b%2) return 1ll*ans*ans%mod*a%mod;\r\n    return 1ll*ans*ans%mod;\r\n}\r\nvoid build(trie *node,vector<int> &v,int i,int bit){\r\n    // cout<<bit<<endl;\r\n    if(bit<0) {\r\n        node->val++;\r\n        return;\r\n    }\r\n    // trie *node=new trie();\r\n    if((v[i]>>bit)&1){\r\n        if(node->right==NULL){\r\n            node->right=new trie();\r\n            // node->right->val=1;\r\n            build(node->right,v,i,bit-1);\r\n            node->val++;\r\n        }else{\r\n            node->val++;\r\n            build(node->right,v,i,bit-1);       \r\n        }\r\n    }\r\n    else {\r\n        if(node->left==NULL){\r\n            node->left=new trie();\r\n            // node->right->val=1;\r\n            build(node->left,v,i,bit-1);\r\n            node->val++;\r\n        }else{\r\n            node->val++;\r\n            build(node->left,v,i,bit-1);       \r\n        }\r\n    }\r\n    // return node;\r\n}\r\nint get(trie *node,int v,int bit,int i){\r\n    if(!node) return 0;\r\n    if(i==bit) return ((v&(1<<bit)))?(node->right?node->right->val:0):(node->left?node->left->val:0);\r\n    ll ans=0;\r\n    if(v&(1<<i)) ans+=get(node->right,v,bit,i-1);\r\n    else ans+=get(node->left,v,bit,i-1);\r\n    return ans;\r\n}\r\nll nc2(ll n){\r\n    return n*(n-1);\r\n}\r\nint popcount(int x){\r\n    int ans=0;\r\n    for(int i=0;i<31;i++){\r\n        ans+=(((1<<i)&x)>0);\r\n    }\r\n    return ans;\r\n}\r\nvoid solve(){   \r\n    cin>>n;\r\n    vector<int> v(n);\r\n    for(int &i:v) cin>>i;\r\n    head=new trie();\r\n    for(int i=0;i<n;i++){\r\n        // cout<<\"str\"<<endl;\r\n        build(head,v,i,30);\r\n        // cout<<\"end\"<<endl;\r\n    }\r\n    // cout<<get(head,9,0,30)<<endl;\r\n    ll ans=0;\r\n    for(int i=0;i<n;i++){\r\n        int str=-1,count=0;\r\n        for(int j=30;j>=0;j--){\r\n            if(str==-1 and (v[i]&(1<<j))) str=j;\r\n            int mask=v[i];\r\n            mask^=(1<<j);\r\n            int bit=(((1<<j)&v[i])>0);\r\n            // count+=((1>>j)&v[i]);\r\n            // cout<<\"bit: \"<<j<<\" \"<<count<<\" \"<<str<<\" \"<<get(head,mask,j,30)<<endl;\r\n            ans+=(str==-1?get(head,mask,j,30):(((count+(count>0)+2*((count%2 and bit==0) or (count%2==0 and bit==1))))*get(head,mask,j,30)));\r\n            // cout<<ans<<endl;\r\n            count+=(((1<<j)&v[i])>0);\r\n        }\r\n        int set_bits=popcount(v[i]);\r\n        ans+=(set_bits+1)*get(head,v[i],0,30);\r\n        // cout<<ans<<endl;\r\n    }\r\n    //  cout<<ans<<endl;\r\n    cout<<1ll*ans*power(nc2(n)+n,mod-2)%mod<<endl;\r\n}\r\nint main(){\r\n    int t=1; \r\n    cin>>t;\r\n    // std::ios::sync_with_stdio(false);\r\n    // std::cin.tie(nullptr);\r\n    while(t--) solve();\r\n    return 0;\r\n}\r\n\r\n"
}