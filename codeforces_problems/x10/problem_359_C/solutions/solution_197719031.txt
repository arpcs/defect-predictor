{
    "id": 197719031,
    "contestId": 359,
    "creationTimeSeconds": 1679031424,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 359,
        "index": "C",
        "name": "Prime Number",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1900,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 359,
        "members": [
            {
                "handle": "struggl3r"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1383379200
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 819200,
    "source": "#include <bits/stdc++.h> \r\nusing namespace std;\r\n \r\ntypedef long long int LL;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<LL, LL> pll;\r\ntypedef pair<string, string> pss;\r\ntypedef vector<int> vi;\r\ntypedef vector<vi> vvi;\r\ntypedef vector<pii> vii;\r\ntypedef vector<LL> vl;\r\ntypedef vector<vl> vvl;\r\n \r\ndouble EPS = 1e-9;\r\nint INF = 1000000005;\r\nlong long INFF = 1000000000000000005LL;\r\ndouble PI = acos(-1);\r\nint dirx[8] = { -1, 0, 0, 1, -1, -1, 1, 1 };\r\nint diry[8] = { 0, 1, -1, 0, -1, 1, -1, 1 };\r\n\r\n \r\n#define FOR(a, b, c) for (int(a) = (b); (a) < (c); ++(a))\r\n#define FORN(a, b, c) for (int(a) = (b); (a) <= (c); ++(a))\r\n#define FORD(a, b, c) for (int(a) = (b); (a) >= (c); --(a))\r\n#define FORSQ(a, b, c) for (int(a) = (b); (a) * (a) <= (c); ++(a))\r\n#define FORC(a, b, c) for (char(a) = (b); (a) <= (c); ++(a))\r\n#define FOREACH(a, b) for (auto&(a) : (b))\r\n#define REP(i, n) FOR(i, 0, n)\r\n#define REPN(i, n) FORN(i, 1, n)\r\n#define MAX(a, b) a = max(a, b)\r\n#define MIN(a, b) a = min(a, b)\r\n#define SQR(x) ((LL)(x) * (x))\r\n#define RESET(a, b) memset(a, b, sizeof(a))\r\n#define fi first\r\n#define se second\r\n#define mp make_pair\r\n#define pb push_back\r\n#define ALL(v) v.begin(), v.end()\r\n#define ALLA(arr, sz) arr, arr + sz\r\n#define SIZE(v) (int)v.size()\r\n#define SORT(v) sort(ALL(v))\r\n#define REVERSE(v) reverse(ALL(v))\r\n#define SORTA(arr, sz) sort(ALLA(arr, sz))\r\n#define REVERSEA(arr, sz) reverse(ALLA(arr, sz))\r\n#define PERMUTE next_permutation\r\n#define TC(t) while (t--)\r\n \r\ninline string IntToString(LL a)\r\n{\r\n    char x[100];\r\n    sprintf(x, \"%lld\", a);\r\n    string s = x;\r\n    return s;\r\n}\r\n \r\ninline LL StringToInt(string a)\r\n{\r\n    char x[100];\r\n    LL res;\r\n    strcpy(x, a.c_str());\r\n    sscanf(x, \"%lld\", &res);\r\n    return res;\r\n}\r\n \r\ninline string GetString(void)\r\n{\r\n    char x[1000005];\r\n    scanf(\"%s\", x);\r\n    string s = x;\r\n    return s;\r\n}\r\n \r\ninline string uppercase(string s)\r\n{\r\n    int n = SIZE(s);\r\n    REP(i, n)\r\n    if (s[i] >= 'a' && s[i] <= 'z')\r\n        s[i] = s[i] - 'a' + 'A';\r\n    return s;\r\n}\r\n \r\ninline string lowercase(string s)\r\n{\r\n    int n = SIZE(s);\r\n    REP(i, n)\r\n    if (s[i] >= 'A' && s[i] <= 'Z')\r\n        s[i] = s[i] - 'A' + 'a';\r\n    return s;\r\n}\r\n \r\ninline void OPEN(string s)\r\n{\r\n#ifndef TESTING\r\n    freopen((s + \".in\").c_str(), \"r\", stdin);\r\n    freopen((s + \".out\").c_str(), \"w\", stdout);\r\n#endif\r\n}\r\n/*----------------------------------------------------------------------------------------------------*/\r\n// Binary Exponentiation\r\n#define mod 1000000007\r\nlong long binpow(long long a, long long b) {\r\n    if (b == 0)\r\n        return 1;\r\n    long long res = binpow(a, b / 2);\r\n    if (b % 2)\r\n        return (((res * res)%mod) * a)%mod;\r\n    else\r\n        return (res * res)%mod;\r\n}\r\n/*----------------------------------------------------------------------------------------------------*/\r\n// nCk\r\n\r\nint C(int n, int k) {\r\n    double res = 1;\r\n    for (int i = 1; i <= k; ++i)\r\n        res = (res * (n - k + i) / i);\r\n    return (int)(res + 0.01);\r\n}\r\n/*----------------------------------------------------------------------------------------------------*/\r\n// Sieve of Eratosthenes\r\nvector<bool> is_prime(int n){\r\n    vector<bool> isprime(n+1, true);\r\n    isprime[0] = isprime[1] = false;\r\n    for (int i = 2; i <= n; i++) {\r\n        if (isprime[i] && (long long)i * i <= n) {\r\n            for (int j = i * i; j <= n; j += i)\r\n                isprime[j] = false;\r\n        }\r\n    }\r\n    return isprime;\r\n}\r\n/*----------------------------------------------------------------------------------------------------*/\r\n\r\n// Calculating nCr%p\r\nunsigned long long power(unsigned long long x, int y, int p)\r\n{\r\n    unsigned long long res = 1; // Initialize result\r\n    x = x % p; // Update x if it is more than or\r\n    // equal to p\r\n    while (y > 0) \r\n    {\r\n        // If y is odd, multiply x with result\r\n        if (y & 1)\r\n            res = (res * x) % p;\r\n        // y must be even now\r\n        y = y >> 1; // y = y/2\r\n        x = (x * x) % p;\r\n    }\r\n    return res;\r\n}\r\nunsigned long long modInverse(unsigned long long n,  int p)\r\n{\r\n    return power(n, p - 2, p);\r\n}\r\nunsigned long long nCrModPFermat( long long n, int r, int p)\r\n{\r\n    // If n<r, then nCr should return 0\r\n    if (n < r)\r\n        return 0;\r\n    // Base case\r\n    if (r == 0)\r\n        return 1;\r\n  \r\n    // Fill factorial array so that we\r\n    // can find all factorial of r, n\r\n    // and n-r\r\n    unsigned long long fac[n + 1];\r\n    fac[0] = 1;\r\n    for (int i = 1; i <= n; i++)\r\n        fac[i] = (fac[i - 1] * i) % p;\r\n  \r\n    return (fac[n] * modInverse(fac[r], p) % p\r\n            * modInverse(fac[n - r], p) % p)\r\n           % p;\r\n}\r\n\r\n/*-----------------------------------------------------------------------------------------------------*/\r\n \r\n\r\nLL bpow(LL x, LL v) {\t\r\n\tif (v == 0)\r\n\t\treturn 1 % mod;\r\n \r\n\tif (v % 2 == 1)\r\n\t\treturn (x * bpow(x, v - 1)) % mod;\r\n \r\n\tLL r = bpow(x, v / 2);\r\n \r\n\treturn (r * r) % mod;\t\r\n}\r\n \r\nint main()\r\n{\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0); cout.tie(0);\r\n    LL n,x; cin>>n>>x;\r\n    vector<LL> arr(n);\r\n    LL den=0;\r\n    for(int i=0; i<n; i++) cin>>arr[i], den+=arr[i];\r\n    LL p=0;\r\n    for(int i=0; i<n; i++){\r\n        arr[i] = den-arr[i];\r\n    }\r\n    SORT(arr);\r\n    REVERSE(arr);\r\n    while(true){\r\n        p = arr[arr.size()-1];\r\n        int cnt=0;\r\n        while(arr.size()>0 && arr[arr.size()-1]==p){\r\n            cnt++;\r\n            arr.pop_back();\r\n        }\r\n        if(cnt%x==0){\r\n            for(int i=0; i<cnt/x;i++){\r\n                arr.push_back(p+1);\r\n            }\r\n        }\r\n        else{\r\n             p = min(p , den);\r\n             cout<<binpow(x, p);\r\n             break;\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n\r\n\r\n}\r\n"
}