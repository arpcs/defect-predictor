{
    "id": 209819095,
    "contestId": 359,
    "creationTimeSeconds": 1686886779,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 359,
        "index": "C",
        "name": "Prime Number",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1900,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 359,
        "members": [
            {
                "handle": "melted_scoop"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1383379200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 819200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nconst int m = 1e9 + 7 , N = 319;\r\nvector<int> v;\r\n\r\nint binpow(int a , int b){\r\n    a %= m;\r\n    long long res = 1;\r\n    while (b > 0) {\r\n        if (b & 1)\r\n            res = res * a % m;\r\n        a = a * a % m;\r\n        b >>= 1;\r\n    }\r\n    return res % m;\r\n}\r\n\r\nvoid kk(int n)\r\n{\r\n    bool prime[n + 1];\r\n    memset(prime, true, sizeof(prime));\r\n  \r\n    for (int p = 2; p * p <= n; p++) {\r\n        if (prime[p] == true) {\r\n            for (int i = p * p; i <= n; i += p)\r\n                prime[i] = false;\r\n        }\r\n    }\r\n    for (int p = 2; p <= n; p++)\r\n        if (prime[p])\r\n            v.push_back(p);\r\n}\r\n\r\nint32_t main (){\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    //int t; cin >> t;\r\n    //while(t--){\r\n        kk(N);\r\n        int n , x; cin >> n >> x;\r\n        int cur = x;\r\n        int a[n] , sum = 0;\r\n        for(int i = 0 ; i < n ; i++){\r\n            cin >> a[i];\r\n            sum += a[i];\r\n        }\r\n        sort(a , a + n);\r\n        int mn = 1e18 , y = 1;\r\n        for(int i = 0 ; i < n ; i++) mn = min(mn , sum - a[i]);\r\n        int pr_ = sum - mn;\r\n        if(a[0] == a[n - 1]){\r\n           int l = 0 , r = 0;\r\n           for(int i = 0 ; i < v.size() ; i++){\r\n               if(n % v[i] == 0){\r\n                   while(n % v[i] == 0){\r\n                       n /= v[i];\r\n                       l++;\r\n                   }\r\n               }\r\n               if(x % v[i] == 0){\r\n                   while(x % v[i] == 0){\r\n                       x /= v[i];\r\n                       r++;\r\n                   }\r\n               }\r\n               r *= pr_;\r\n               for(int pp = 0 ; pp < min(l , r) ; pp++){\r\n                   y *= v[i];\r\n               }\r\n               l = 0 , r = 0;\r\n           }\r\n           if(n > 1){\r\n               if(x % n == 0){\r\n                   y *= n;\r\n               }\r\n           }\r\n        }\r\n        int ans = y;\r\n        ans %= m;\r\n        ans *= binpow(cur , mn);\r\n        ans %= m;\r\n        cout << ans << '\\n';\r\n    //}\r\n    return 0 ;\r\n}"
}