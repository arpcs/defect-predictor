{
    "contestId": 1195,
    "index": "A",
    "name": "Drinks Choosing",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1000,
    "tags": [
        "greedy",
        "math"
    ],
    "desc": {
        "title": "A. Drinks Choosing",
        "statement": "<p>Old timers of Summer Informatics School can remember previous camps in which each student was given a drink of his choice on the vechorka (late-evening meal). Or may be the story was more complicated?</p><p>There are $$$n$$$ students living in a building, and for each of them the favorite drink $$$a_i$$$ is known. So you know $$$n$$$ integers $$$a_1, a_2, \\dots, a_n$$$, where $$$a_i$$$ ($$$1 \\le a_i \\le k$$$) is the type of the favorite drink of the $$$i$$$-th student. The drink types are numbered from $$$1$$$ to $$$k$$$.</p><p>There are infinite number of drink sets. Each set consists of <span class=\"tex-font-style-bf\">exactly two</span> portions of the same drink. In other words, there are $$$k$$$ types of drink sets, the $$$j$$$-th type contains two portions of the drink $$$j$$$. The available number of sets of each of the $$$k$$$ types is infinite.</p><p>You know that students will receive the minimum possible number of sets to give all students exactly one drink. Obviously, the number of sets will be exactly $$$\\lceil \\frac{n}{2} \\rceil$$$, where $$$\\lceil x \\rceil$$$ is $$$x$$$ rounded up.</p><p>After students receive the sets, they will distribute their portions by their choice: each student will get exactly one portion. Note, that if $$$n$$$ is odd then one portion will remain unused and the students' teacher will drink it.</p><p>What is the maximum number of students that can get their favorite drink if $$$\\lceil \\frac{n}{2} \\rceil$$$ sets will be chosen optimally and students will distribute portions between themselves optimally?</p>",
        "inputSpecification": "<p>The first line of the input contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le n, k \\le 1\\,000$$$) \u2014 the number of students in the building and the number of different drinks.</p><p>The next $$$n$$$ lines contain student's favorite drinks. The $$$i$$$-th line contains a single integer from $$$1$$$ to $$$k$$$ \u2014 the type of the favorite drink of the $$$i$$$-th student.</p>",
        "outputSpecification": "<p>Print exactly one integer \u2014 the maximum number of students that can get a favorite drink.</p>",
        "samples": [
            {
                "input": "\n5 3\n1\n3\n1\n1\n2\n",
                "output": "\n4\n"
            },
            {
                "input": "\n10 3\n2\n1\n3\n2\n3\n3\n1\n3\n1\n2\n",
                "output": "\n9\n"
            }
        ],
        "note": "<p>In the first example, students could choose three sets with drinks $$$1$$$, $$$1$$$ and $$$2$$$ (so they will have two sets with two drinks of the type $$$1$$$ each and one set with two drinks of the type $$$2$$$, so portions will be $$$1, 1, 1, 1, 2, 2$$$). This way all students except the second one will get their favorite drinks.</p><p>Another possible answer is sets with drinks $$$1$$$, $$$2$$$ and $$$3$$$. In this case the portions will be $$$1, 1, 2, 2, 3, 3$$$. Then all the students except one will gain their favorite drinks. The only student that will not gain the favorite drink will be a student with $$$a_i = 1$$$ (i.e. the first, the third or the fourth).</p>"
    },
    "suggested_categories": [
        "combinatorics",
        "probability",
        "mathematics",
        "optimization",
        "algorithms",
        "data structures",
        "greedy",
        "dynamic programming",
        "simulation",
        "game theory",
        "graph theory",
        "number theory",
        "divide and conquer",
        "set theory",
        "integer programming",
        "discrete mathematics",
        "competition programming",
        "problem solving",
        "logic",
        "coding challenges"
    ]
}