{
    "id": 232574033,
    "contestId": 1658,
    "creationTimeSeconds": 1699848019,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1658,
        "index": "B",
        "name": "Marin and Anti-coprime Permutation",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 800,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1658,
        "members": [
            {
                "handle": "yiyihum"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1648391700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 4096000,
    "source": "// generated by GPT4 2023-11-13 04:00:18\n#include<bits/stdc++.h>\nusing namespace std;\nconst int mod = 998244353;\nconst int N = 1e3+10;\nint dp[N][N], fac[N], inv[N];\n\nint power(int a, int b, int m){\n    int ret = 1;\n    while(b){\n        if(b & 1) ret = 1LL * ret * a % m;\n        b >>= 1;\n        a = 1LL * a * a % m;\n    }\n    return ret;\n}\n\nint main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0); cout.tie(0);\n    fac[0] = inv[0] = 1;\n    for(int i = 1; i < N; i++){\n        fac[i] = 1LL * fac[i-1] * i % mod;\n        inv[i] = power(fac[i], mod - 2, mod);\n    }\n    dp[1][1] = 1;\n    for(int i = 2; i < N; i++){\n        dp[i][i] = 1LL * fac[i] * inv[2] % mod;\n        for(int j = i - 1; j > 0; j--){\n            dp[i][j] = (dp[i][j+1] + 1LL * dp[i-1][j] * j % mod * inv[2] % mod) % mod;\n        }\n    }\n    int t; cin >> t;\n    while(t--){\n        int n; cin >> n;\n        cout << dp[n][1] << \"\\n\";\n    }\n    return 0;\n}\n"
}