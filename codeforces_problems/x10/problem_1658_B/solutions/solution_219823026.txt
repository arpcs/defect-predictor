{
    "id": 219823026,
    "contestId": 1658,
    "creationTimeSeconds": 1692637574,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1658,
        "index": "B",
        "name": "Marin and Anti-coprime Permutation",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 800,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1658,
        "members": [
            {
                "handle": "LoliQuyetCoVOI"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1648391700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 7987200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int MOD = 998244353;\r\nlong long gt[1000007];\r\n\r\nvoid solve() {\r\n    int n; cin >> n;\r\n    if (n%2==1) {\r\n        cout << \"0\\n\";\r\n        return;\r\n    }\r\n    cout << (gt[n/2]*gt[n/2]%MOD) << '\\n';\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    gt[0] = 1;\r\n    for (int i = 1; i <= 1000000; ++i) {\r\n        gt[i] = gt[i-1] * (1LL * i);\r\n        gt[i] %= MOD;\r\n    }\r\n    int t; cin >> t;\r\n    while (t--) solve();\r\n    return 0;\r\n}\r\n"
}