{
    "id": 229034313,
    "contestId": 1658,
    "creationTimeSeconds": 1697877949,
    "relativeTimeSeconds": 949,
    "problem": {
        "contestId": 1658,
        "index": "B",
        "name": "Marin and Anti-coprime Permutation",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 800,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1658,
        "members": [
            {
                "handle": "Ayush74"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1697877000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define mod 998244353\r\n#define Fact_length 1001\r\n#define int long long\r\nint pow(int a,int b) //(a^b)\r\n{\r\n    int ans=1,ax=a;\r\n    while(b!=0)\r\n    {\r\n        if(b%2==1)\r\n        {\r\n            ans*=ax;\r\n            ax*=ax;\r\n            b/=2;\r\n        }\r\n    }\r\n    return ans;\r\n}\r\nint powmod(int a,int b) //(a^b)%mod;\r\n{\r\n    int ans=1;\r\n    int ax=a%mod;\r\n    while(b)\r\n    {\r\n        if(b%2==1) ans*=ax;\r\n        ax*=ax;\r\n        ax%=mod;\r\n        ans%=mod;\r\n        b/=2;\r\n    }\r\n    return ans;\r\n}\r\nint mod_inv(int a)\r\n{\r\n    a%=mod;\r\n    int x=powmod(a,mod-2);\r\n    return x;\r\n}\r\nint Factorial[Fact_length];\r\nint fact() //n!%mod\r\n{\r\n    Factorial[0]=1;\r\n    for(int i=1;i<Fact_length;i++)\r\n    {\r\n        Factorial[i]=i*Factorial[i-1];\r\n        Factorial[i]%=mod;\r\n    }\r\n    return 0;\r\n}\r\nint ncr(int n,int r) //nCr %p\r\n{\r\n    if(n<r)\r\n    return 0;\r\n    int ans=Factorial[n];\r\n    ans%=mod;\r\n    ans*=mod_inv(Factorial[r]);\r\n    ans%=mod;\r\n    ans*=mod_inv(Factorial[n-r]);\r\n    ans%=mod;\r\n    return ans;\r\n}\r\nint npr(int n,int r) //nPr\r\n{\r\n    int ans=Factorial[n];\r\n    ans%=mod;\r\n    ans*=mod_inv(Factorial[n-r]);\r\n    ans%=mod;\r\n    return ans;\r\n}\r\nvoid solve()\r\n{\r\n    int n;\r\n    cin>>n;\r\n    if(n%2!=0)\r\n    {\r\n        cout<<0<<endl;\r\n        return;\r\n    }\r\n    cout<<(((Factorial[n/2]*Factorial[(n/2)-1])%mod)*(n/2))%mod<<endl;\r\n    return;\r\n}\r\n\r\nint32_t main()\r\n{\r\n    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);\r\n    int t; cin>>t;\r\n    fact();\r\n    while(t--) solve();\r\n    return 0;\r\n}"
}