{
    "id": 227733202,
    "contestId": 1523,
    "creationTimeSeconds": 1697055701,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1523,
        "index": "E",
        "name": "Crypto Lights",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1523,
        "members": [
            {
                "handle": "maghrabyJr_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1622385300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 57,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 3174400,
    "source": "#include \"bits/stdc++.h\"\r\n#pragma GCC optimize(\"O3,unroll-loops\")\r\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\r\nusing namespace std;\r\n#define int long long\r\n\r\nconst int MOD = 1e9 + 7;\r\nint F[200010], F_[200010];\r\n\r\nint power(int a, int b){\r\n         int res= 1;\r\n         while(b)\r\n         {\r\n                  if(b & 1) res= res * a % MOD;\r\n                  a= a * a % MOD;\r\n                  b >>= 1;\r\n         }\r\n         return res;\r\n}\r\nint modInv(int x){\r\n         return power(x, MOD - 2);\r\n}\r\n\r\nint choose(int n, int r){\r\n         if(n < 0) return 0;\r\n         if(n < r) return 0;\r\n         return (F[n] * F_[r] % MOD) * F_[n - r] % MOD;\r\n}\r\nint starsAndBars(int n, int k){\r\n         //distribute n objects over k buckets\r\n         if(n < 0) return 0;\r\n         return choose(n + k - 1, k - 1);\r\n}\r\nvoid solve(){\r\n         int n, k;\r\n         cin>>n>>k;\r\n\r\n         int ans = 0;\r\n         int pr = 1;\r\n         for(int x = 1; x <= n; x++)\r\n         {\r\n                  pr *= x; pr %= MOD;\r\n                  pr *= modInv(n - x + 1); pr %= MOD;\r\n                  ans += pr * starsAndBars(n - x - (x - 1) * (k - 1), x + 1) % MOD;\r\n                  ans %= MOD;\r\n         }\r\n         cout<<(ans + 1) % MOD<<\"\\n\";\r\n}\r\nint32_t main(){\r\n         cin.tie(0);\r\n         cin.sync_with_stdio(0);\r\n\r\n         F[0]= F_[0]= 1;\r\n         for(int i = 1; i < 200010; i++){\r\n                  F[i]= F[i - 1] * i % MOD;\r\n                  F_[i]= modInv(F[i]);\r\n         }\r\n         int T; cin>>T;\r\n         while(T--) solve();\r\n}"
}