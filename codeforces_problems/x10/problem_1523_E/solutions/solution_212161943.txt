{
    "id": 212161943,
    "contestId": 1523,
    "creationTimeSeconds": 1688525757,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1523,
        "index": "E",
        "name": "Crypto Lights",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1523,
        "members": [
            {
                "handle": "zzpcd"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1622385300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 1228800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int Mod = 1e9 + 7;\r\nint Norm(int x) {\r\n    if (x < 0) {\r\n        x += Mod;\r\n    }\r\n    if (x >= Mod) {\r\n        x -= Mod;\r\n    }\r\n    return x;\r\n}\r\ntemplate<class T>\r\nT power(T a, ll b) {\r\n    T res = 1;\r\n    for (; b; b /= 2, a *= a) {\r\n        if (b % 2) {\r\n            res *= a;\r\n        }\r\n    }\r\n    return res;\r\n}\r\nstruct Z {\r\n    int x;\r\n    Z(int x = 0) : x(Norm(x)) {}\r\n    Z(ll x) : x(Norm(x % Mod)) {}\r\n    int val() const {\r\n        return x;\r\n    }\r\n    Z operator-() const {\r\n        return Z(Norm(Mod - x));\r\n    }\r\n    Z inv() const {\r\n        assert(x != 0);\r\n        return power(*this, Mod - 2);\r\n    }\r\n    Z &operator*=(const Z &rhs) {\r\n        x = ll(x) * rhs.x % Mod;\r\n        return *this;\r\n    }\r\n    Z &operator+=(const Z &rhs) {\r\n        x = Norm(x + rhs.x);\r\n        return *this;\r\n    }\r\n    Z &operator-=(const Z &rhs) {\r\n        x = Norm(x - rhs.x);\r\n        return *this;\r\n    }\r\n    Z &operator/=(const Z &rhs) {\r\n        return *this *= rhs.inv();\r\n    }\r\n    friend Z operator*(const Z &lhs, const Z &rhs) {\r\n        Z res = lhs;\r\n        res *= rhs;\r\n        return res;\r\n    }\r\n    friend Z operator+(const Z &lhs, const Z &rhs) {\r\n        Z res = lhs;\r\n        res += rhs;\r\n        return res;\r\n    }\r\n    friend Z operator-(const Z &lhs, const Z &rhs) {\r\n        Z res = lhs;\r\n        res -= rhs;\r\n        return res;\r\n    }\r\n    friend Z operator/(const Z &lhs, const Z &rhs) {\r\n        Z res = lhs;\r\n        res /= rhs;\r\n        return res;\r\n    }\r\n    friend std::istream &operator>>(std::istream &is, Z &a) {\r\n        ll v;\r\n        is >> v;\r\n        a = Z(v);\r\n        return is;\r\n    }\r\n    friend std::ostream &operator<<(std::ostream &os, const Z &a) {\r\n        return os << a.val();\r\n    }\r\n};\r\n#define MN 100005\r\nint n, k;\r\nZ f[MN], fac[MN], ifac[MN];\r\nZ C(int n, int m) {\r\n    if(n < m) return 0;\r\n    return fac[n] * ifac[m] * ifac[n - m];\r\n}\r\nvoid solve() {\r\n    cin >> n >> k;\r\n    Z ans = 0;\r\n    for(int i = (n + 1 >> 1); i >= 1; i--) {\r\n        int u = n - (k - 1) * (i - 1) - i;\r\n        Z ret = C(u + i, i);\r\n        f[i] = ret;\r\n        // cerr << ret << \"\\n\";\r\n        ret = (ret * (n - i) - f[i + 1] * (i + 1));\r\n        // cerr << i << \" \" << ret << \"\\n\";\r\n        ret = ret * fac[i] * ifac[n] * fac[n - i - 1];\r\n        // cerr << ret * (i + 1) << \" \" << ret * 3 * (i + 1) << \"\\n\";\r\n        ans += (i + 1) * ret;\r\n    }\r\n    cout << ans << \"\\n\";\r\n}\r\nvoid init(int n = 1e5) {\r\n    fac[0] = 1;\r\n    for(int i = 1; i <= n; i++)\r\n        fac[i] = fac[i - 1] * i;\r\n    ifac[n] = fac[n].inv();\r\n    for(int i = n; i; i--) ifac[i - 1] = ifac[i] * i;\r\n}\r\nint main()\r\n{\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(nullptr); cout.tie(nullptr);\r\n    init();\r\n    int TT = 1;\r\n    cin >> TT;\r\n    while(TT--) {\r\n        solve();\r\n    }\r\n}"
}