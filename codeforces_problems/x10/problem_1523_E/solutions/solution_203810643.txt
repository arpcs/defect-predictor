{
    "id": 203810643,
    "contestId": 1523,
    "creationTimeSeconds": 1682692475,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1523,
        "index": "E",
        "name": "Crypto Lights",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1523,
        "members": [
            {
                "handle": "_Time_Lord_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1622385300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 1638400,
    "source": "#include <bits/stdc++.h>\r\n#pragma GCC optimize(\"O3\")\r\n#pragma GCC optimize(\"unroll-loops\")\r\n#define pb push_back\r\n#define F first\r\n#define S second\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define ld long double\r\n#define endl '\\n'\r\n#define TIME 1.0*clock()/CLOCKS_PER_SEC\r\n#define pii pair < int , int >\r\n#define Endl '\\n'\r\n#define int ll\r\n\r\n\r\nusing namespace std;\r\n\r\nmt19937 gen(chrono::system_clock::now().time_since_epoch().count());\r\n\r\nconst int mod = 1e9 + 7;\r\nconst ll FFTM = 998244353;\r\n\r\nconst int SX[4] = {0 , 1 , 0, -1};\r\nconst int SY[4] = {1 , 0 , -1 , 0};\r\nconst int rx[8] = {1, -1, 0, 0, 1, 1, -1, -1};\r\nconst int ry[8] = {0, 0, 1, -1, 1, -1, 1, -1};\r\nconst int kx[8] = {1, 1, -1, -1, 2, 2, -2, -2};\r\nconst int ky[8] = {2, -2, 2, -2, 1, -1, 1, -1};\r\n\r\n\r\nvector<vector<int> > a;\r\nvector<vector<int> > used;\r\nvector<vector<int> > nxt;\r\n\r\nll bin_pow(ll x){\r\n    ll ans = 1;\r\n    ll st = mod - 2;\r\n    while(st > 0){\r\n        if(st % 2 == 0){\r\n            st /= 2;\r\n            x = (x * x) % mod;\r\n        }\r\n        else{\r\n            ans *= x;\r\n            ans %= mod;\r\n            st--;\r\n        }\r\n    }\r\n    return ans;\r\n}\r\n\r\nint32_t main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n#ifdef LOCAL\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#else\r\n    //freopen(\"input.txt\", \"r\", stdin);\r\n    //freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n\r\n\r\n\r\n    vector<int> fak;\r\n\r\n    int cur = 1;\r\n    fak.pb(1);\r\n    for(int i = 1; i <= 100001; i++){\r\n        cur *= i;\r\n        cur %= mod;\r\n        fak.pb(cur);\r\n    }\r\n\r\n    int t;\r\n    cin >> t;\r\n    while(t--) {\r\n        int n, k;\r\n        cin >> n >> k;\r\n\r\n        int ans = 1;\r\n\r\n        for (int p = 1; p <= n; p++) {\r\n            int calc = n - (k - 1) * (p - 1);\r\n            if(calc < p - 1) break;\r\n            if (calc >= p - 1) {\r\n                int res = fak[calc];\r\n                res *= fak[n - p];\r\n                res %= mod;\r\n                int bp = bin_pow(fak[n]);\r\n                res *= bp;\r\n                res %= mod;\r\n\r\n                bp = bin_pow(calc - p);\r\n\r\n                res *= bp;\r\n                res %= mod;\r\n                ans += res;\r\n                ans %= mod;\r\n            }\r\n\r\n        }\r\n        cout << ans << endl;\r\n    }\r\n\r\n    return 0;\r\n}"
}