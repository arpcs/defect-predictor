{
    "id": 223374326,
    "contestId": 1658,
    "creationTimeSeconds": 1694705603,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1658,
        "index": "F",
        "name": "Juju and Binary String",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1658,
        "members": [
            {
                "handle": "ieeMeow"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1648391700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 200,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 1331200,
    "source": "// LUOGU_RID: 124730897\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nvoid solve() {\r\n\tint n, m;\r\n\tcin >> n >> m;\r\n\tstring str;\r\n\tcin >> str;\r\n\tif (m == n) {\r\n\t\tcout << 1 << \"\\n\" << 1 << \" \" << n << \"\\n\";\r\n\t\treturn;\r\n\t}\r\n\tint cnt = count(str.begin(), str.end(), '1');\r\n\tif (1ll * cnt * m % n) {\r\n\t\tcout << -1 << \"\\n\";\r\n\t\treturn;\r\n\t}\r\n\tcnt = 1ll * cnt * m / n;\r\n\tvector<int> p(n + 1);\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tp[i + 1] = p[i] + (str[i] == '1');\r\n\t}\r\n\tvector<array<int, 2>> ans(3);\r\n\tauto upd = [&](decltype(ans) c) {\r\n\t\tif (c.size() < ans.size()) {\r\n\t\t\tans = c;\r\n\t\t}\r\n\t};\r\n\tauto get = [&](int l, int r) {\r\n\t\treturn p[r] - p[l];\r\n\t};\r\n\tfor (int l = 0; l < n; l++) {\r\n\t\tint r = l + m;\r\n\t\tif (r <= n) {\r\n\t\t\tif (get(l, r) == cnt) {\r\n\t\t\t\tupd({{l, r - 1}});\r\n\t\t\t}\r\n\t\t} else if (get(l, n) + get(0, r % n) == cnt) {\r\n\t\t\tupd({array{0, r % n - 1}, array{l, n - 1}});\r\n\t\t}\r\n\t}\r\n\tcout << ans.size() << \"\\n\";\r\n\tfor (auto [x, y] : ans) {\r\n\t\tcout << x + 1 << \" \" << y + 1 << \"\\n\";\r\n\t}\r\n}\r\nint main() {\r\n\tint t;\r\n\tcin >> t;\r\n\twhile (t--) {\r\n\t\tsolve();\r\n\t}\r\n\treturn 0;\r\n}"
}