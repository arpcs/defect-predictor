{
    "id": 232856230,
    "contestId": 1658,
    "creationTimeSeconds": 1700051782,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1658,
        "index": "F",
        "name": "Juju and Binary String",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1658,
        "members": [
            {
                "handle": "locsey"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1648391700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 200,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 3379200,
    "source": "#include <bits/stdc++.h> \r\n\r\nusing std :: cin; \r\nusing std :: cout; \r\nusing std :: vector; \r\n\r\nconstexpr int M = 2e5 + 5, mod = 1e9 + 7; \r\nconstexpr int INF = 0x3f3f3f3f; \r\n\r\ntypedef long long ll; \r\ntypedef unsigned long long ull; \r\ntypedef double db; \r\n\r\n//char buf[1 << 23], *p1 = buf, *p2 = buf, obuf[1 << 23], *O = obuf;\r\n//#define getchar() (p1 == p2) && (p2 = (p1 = buf) + fread(buf, 1, 1 << 21, stdin), p1 == p2)? EOF : *p1++\r\n\r\ninline int read() {\r\n\tint f = 1, s = 0; char ch = getchar(); \r\n\twhile(!isdigit(ch)) (ch == '-') && (f = -1), ch = getchar(); \r\n\twhile(isdigit(ch)) s = s * 10 + ch - '0', ch = getchar(); \r\n\treturn f * s; \r\n}\r\n\r\nnamespace Solver {\r\n\tint n, m; char str[M];\r\n\tll a[M << 1]; \r\n\tinline void solve() {\r\n\t\tn = read(), m = read(), scanf(\"%s\", str + 1); int s0 = 0, s1 = 0; \r\n\t\tfor(int i = 1; i <= n; ++i) if(str[i] == '1') s1 ++; else s0 ++;\r\n\t\tif((ll)s1 * m % n) return puts(\"-1\"), void(); \r\n\t\tfor(int i = 1; i <= n; ++i) a[i] = a[i + n] = str[i] == '1' ? -s0 : s1;\r\n\t\tint l = 0, r = 0; \r\n\t\tfor(int i = 1; i <= 2 * n; ++i) {\r\n\t\t\ta[i] += a[i - 1];\r\n\t\t\tif(i >= m && a[i] == a[i - m]) {l = i - m + 1, r = i; break ;}\r\n\t\t}\r\n\t\tif(r <= n) cout << 1 << '\\n' << l << ' ' << r << '\\n'; \r\n\t\telse {\r\n\t\t\tr -= n;\r\n\t\t\tcout << 2 << '\\n' << 1 << ' ' << r << '\\n' << l << ' ' <<n <<'\\n'; \r\n\t\t} \r\n\t}\r\n\tinline void mian() {\r\n\t\tint t = read(); \r\n\t\twhile(t --) solve(); \r\n\t}\r\n} ; \r\n\r\nint main() \r\n{\r\n\t\r\n\tSolver :: mian();\r\n\treturn 0; \r\n}"
}