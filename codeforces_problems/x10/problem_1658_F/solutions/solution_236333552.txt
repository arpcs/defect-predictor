{
    "id": 236333552,
    "contestId": 1658,
    "creationTimeSeconds": 1702035820,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1658,
        "index": "F",
        "name": "Juju and Binary String",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1658,
        "members": [
            {
                "handle": "Donbcheap"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1648391700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 1331200,
    "source": "#include<bits/stdc++.h>\r\n#define fastIO ios::sync_with_stdio(0); cin.tie(0); cout.tie(0)  \r\n\r\nusing namespace std;\r\n  \r\nvoid solve()  \r\n{\r\n    int n, m;\r\n    cin >> n >> m;\r\n    cin.ignore();\r\n\r\n    string s;\r\n    cin >> s;\r\n\r\n    long long total_ones = 0;\r\n    for (char& c : s) total_ones += c - 48;\r\n\r\n    if (n == m)\r\n        cout << \"1\\n1 \" << n;\r\n    else if ((total_ones * m) % n != 0) // total_ones / n = needed_ones / m , needed_ones must be integer number\r\n        cout << -1;\r\n    else // the trick is that we need to minimize the number of subsegments we take\r\n    {\r\n        int needed_ones = (total_ones * m) / n;\r\n        \r\n        vector<int> ones_0_to_i(s.size() + 1);\r\n        ones_0_to_i[0] = 0;\r\n        ones_0_to_i[1] = s.front() - '0';\r\n        for (int i = 2; i <= s.size(); i++)\r\n            ones_0_to_i[i] = ones_0_to_i[i - 1] + (s[i - 1] - '0');\r\n\r\n        int l = 1, r = m;\r\n        while (l <= s.size())\r\n        {\r\n            int cur = (r > l ? ones_0_to_i[r] - ones_0_to_i[l - 1]\r\n                : ones_0_to_i[r] + (ones_0_to_i[s.size()] - ones_0_to_i[l - 1]));\r\n\r\n            if (cur == needed_ones)\r\n            {\r\n                if (l < r)\r\n                    cout << \"1\\n\" << l << \" \" << r << \"\\n\\n\";\r\n                else\r\n                    cout << \"2\\n\" << 1 << \" \" << r << \"\\n\" << l << \" \" << n << \"\\n\\n\";\r\n\r\n                return;\r\n            }\r\n\r\n            l++;\r\n            r++; \r\n            if (r == ones_0_to_i.size())\r\n                r = 1;\r\n        }\r\n    }\r\n\r\n    cout << \"\\n\\n\";\r\n}\r\n\r\nint main()\r\n{\r\n    fastIO;\r\n\r\n    int t;\r\n    cin >> t;\r\n\r\n    while (t--)\r\n        solve(); \r\n\r\n    return 0;\r\n}"
}