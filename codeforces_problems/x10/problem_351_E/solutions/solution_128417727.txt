{
    "id": 128417727,
    "contestId": 351,
    "creationTimeSeconds": 1631275969,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 351,
        "index": "E",
        "name": "Jeff and Permutation",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 351,
        "members": [
            {
                "handle": "yash30201"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1380900600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 6963200,
    "source": "// Problem: E. Jeff and Permutation\n// Contest: Codeforces - Codeforces Round #204 (Div. 1)\n// URL: https://codeforces.com/problemset/problem/351/E\n\n\n#include <bits/stdc++.h>\nusing namespace std;\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\nusing ordered_set = tree<int, null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ;\n#define endl '\\n'\n#define vi vector<int>\n#define vb vector<bool>\n#define vp vector<pair<int, int>>\n#define Pq priority_queue<int>\n#define Pqr priority_queue<int, vector<int>, greater<int> >\n#define mod 1000000007\n#define bigmod 9999999999971LL\n#define M_PI 3.14159265358979323846\n#define pint pair<int, int>\n#define rep(i, a, b) for (int i = a; i <= b; i++)\n#define per(i, b, a) for (int i = b; i >= a; --i)\n#define mms(a, n) memset(a, n, sizeof(a))\n#define all(a) a.begin(), a.end()\n#define n_ones(x) __builtin_popcountll(x)\n#define pb push_back\n#define eb emplace_back\n#define fi first\n#define se second\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n#define op_deci(n) cout << fixed << setprecision(10) << n <<'\\n';\nvoid op_vec(vector<int> &a){\n\tfor(auto &i : a) cout<<i<<' ';\n\tcout<<'\\n';\n}\n#define see(args...)                             \\\n    {                                            \\\n        cerr << \"LINE \" << __LINE__;             \\\n        string _s = #args;                       \\\n        replace(_s.begin(), _s.end(), ',', ' '); \\\n        stringstream _ss(_s);                    \\\n        istream_iterator<string> _it(_ss);       \\\n        err(_it, args);                          \\\n        cerr << endl;                            \\\n    }\nvoid err(istream_iterator<string> it) {}\ntemplate <typename T, typename... Args>\nvoid err(istream_iterator<string> it, T a, Args... args) {\n    cerr << ' ' << *it << \" = \" << a;\n    err(++it, args...);\n}\ninline void op() { cout << '\\n'; }\ntemplate <typename T, typename... Types>\ninline void op(T var1, Types... var2) {\n    cout << var1 << ' ';\n    op(var2...);\n}\ninline void ip() {}\ntemplate <typename T, typename... Types>\ninline void ip(T& var1, Types&... var2) {\n    cin >> var1;\n    ip(var2...);\n}\ntemplate <typename T, typename U>\ninline void min_self(T& x, U y) {\n    if (y < x) x = y;\n}\ntemplate <typename T, typename U>\ninline void max_self(T& x, U y) {\n    if (x < y) x = y;\n}\ntemplate <class T1, class T2>\nostream& operator<<(ostream& out, pair<T1, T2> pair) {\n    return out << \"(\" << pair.first << \", \" << pair.second << \")\";\n}\ntemplate <class T>\nostream& operator<<(ostream& out, vector<T> vec) {\n    out << \"(\";\n    for (auto& v : vec) out << v << ' ';\n    return out << \")\";\n}\ntemplate <class T>\nostream& operator<<(ostream& out, set<T> vec) {\n    out << \"(\";\n    for (auto& v : vec) out << v << \", \";\n    return out << \")\";\n}\ntemplate <class L, class R>\nostream& operator<<(ostream& out, map<L, R> vec) {\n    out << \"(\";\n    for (auto& v : vec) out << \"[\" << v.first << \", \" << v.second << \"]\";\n    return out << \")\";\n}\ntemplate <class A, class B>\nistream& operator>>(istream& in, pair<A, B>& a) {\n    return in >> a.first >> a.second;\n}\ntemplate <class A>\nistream& operator>>(istream& in, vector<A>& a) {\n    for (A& i : a) in >> i;\n    return in;\n}\ntemplate <class Container>\nvoid split(const std::string& str, Container& cont, char delim = ',') {\n    stringstream ss(str);\n    string token;\n    while (std::getline(ss, token, delim)) {\n        cont.push_back(token);\n    }\n}\n\n// cout << fixed << setprecision(10) << pi <<\" \"<<npi<<endl;\n// INT64_MAX\n// transform(all(s), s.begin(), ::tolower);\n// clock()<=2.5*CLOCKS_PER_SEC\n// op_vec(a);\n// op_deci(n);\n\n// Bit manipulation \n// a+b == a|b + a&b;\n// a+b = (a ^ b) + (a & b)*2\n// => a | b = a ^ b + a&b\n// x & (x - 1) => Clears the LSB set bit in x\n// x ^ (x & (x - 1)) => Returns the LSB set bit in x\n// x & (-x) => Also returns the LSB set bit in x\n// For checking if n is power of 2, n & (n - 1) fails for n == 0 !!!\n\n\n// Ordered set example\n// set is {1, 5, 6, 17, 88}, ie ordered_set oset;\n// *(oset.find_by_order(2)) : 3rd element in the set i.e. 6\n// oset.order_of_key(6) : Count of elements strictly smaller than 6 is 2.\n\n\n\n\nint px[4] = {-1, 0, 1, 0};\nint py[4] = {0, -1, 0, 1};\nconst int N = 1e5;\nstruct seg_tree{\n\tint n;\n\tvector<int> t;\n\tseg_tree(){\n\t\tn = 2*N + 5;\n\t\tt.assign(2*n, 0);\n\t}\n\tvoid clear(){\n\t\tfill(t.begin(), t.end() , 0);\n\t}\n\tvoid set(int pos, int value){\n\t\tpos += n;\n\t\tfor(t[pos] += value ; pos > 1 ; pos >>= 1){\n\t\t\tt[pos >> 1] = t[pos] + t[pos^1];\n\t\t}\n\t}\n\tint get(int l, int r){ // [l, r)\n\t\tint res = 0;\n\t\tfor(l += n, r += n ; l < r ; l >>= 1, r >>= 1){\n\t\t\tif(l & 1) res += t[l++];\n\t\t\tif(r & 1) res += t[--r];\n\t\t}\n\t\treturn res;\n\t}\n};\n\nvoid abcd() {\n    int n;\n    ip(n);\n    vi a(n);\n    ip(a);\n    \n    seg_tree sgl, sgr;\n    \n    auto get_idx = [&](){\n    \tsgl.clear();\n    \tsgr.clear();\n    \trep(i,0,n-1) sgr.set(a[i] + N, 1);\n    \tbool invert;\n    \tint counter = 0;\n    \trep(i,0,n-1){\n    \t\tinvert = false;\n    \t\tsgr.set(a[i] + N, -1);\n    \t\tif(a[i] < 0){\n    \t\t\tint lft = sgl.get(a[i] + 1 + N, -a[i] + 1 + N); // decrease\n    \t\t\tint rgt = sgr.get(a[i] + N, -a[i] + N); // increase\n    \t\t\tif(lft - rgt > 0){\n    \t\t\t\ta[i] = -a[i];\n    \t\t\t\tinvert = true;\n    \t\t\t}\n    \t\t}\n    \t\telse if(a[i] > 0){\n    \t\t\tint lft = sgl.get(-a[i] + 1 + N, a[i] + 1 + N); // increase\n    \t\t\tint rgt = sgr.get(-a[i] + N, a[i] + N); // increase\n    \t\t\tif(rgt - lft > 0){\n    \t\t\t\tinvert = true;\n    \t\t\t\ta[i] = -a[i];\n    \t\t\t}\n    \t\t}\n    \t\telse{\n    \t\t\t// do nothing\n    \t\t}\n    \t\t\n    \t\tif(invert){\n    \t\t\tsgl.set(-a[i] + N, 1);\n    \t\t\tcounter++;\n    \t\t}\n    \t\telse sgl.set(a[i] + N, 1);\n    \t}\n    \treturn counter;\n    };\n    \n    for(int ix = get_idx(); ix != 0; ix = get_idx()){\n    \t// see(cnt);\n    }\n    \n    int res = 0;\n    sgl.clear();\n    \n    per(i,n-1,0){\n    \tres += sgl.get(0, a[i] + N);\n    \tsgl.set(a[i] + N, 1);\n    }\n    \n    op(res);\n    \n    return;\n}\nint32_t main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    int t = 1;\n    // cin >> t;\n    while (t--) {\n        abcd();\n    }\n    return 0;\n}\n"
}