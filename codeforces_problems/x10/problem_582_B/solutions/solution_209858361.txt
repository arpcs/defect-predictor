{
    "id": 209858361,
    "contestId": 582,
    "creationTimeSeconds": 1686917508,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 582,
        "index": "B",
        "name": "Once Again...",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "dp",
            "matrices"
        ]
    },
    "author": {
        "contestId": 582,
        "members": [
            {
                "handle": "jurassicparkran"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1443890700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 48,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "\r\n#include <algorithm>\r\n#include <cstdio>\r\nusing namespace std;\r\n\r\nint cnt[305] = {0};\r\nint dp[10010];\r\nint a[10010];\r\nint max_num;\r\nint n, t;\r\nint len;\r\nint ans;\r\n\r\nint main() {\r\n\tscanf(\"%d%d\", &n, &t);\r\n\tmax_num = 0, ans = 0, len = n * min(n, t);\r\n\tfor (int i = 1; i <= n; ++i) {\r\n\t\tscanf(\"%d\", &a[i]);\r\n\t\tmax_num = max(max_num, ++cnt[a[i]]);\r\n\t}\r\n\tfor (int i = n + 1; i <= len; ++i) {\r\n\t\ta[i] = a[i - n];\r\n\t}\r\n\tfor (int i = 1; i <= len; ++i) {\r\n\t\tdp[i] = 1;\r\n\t\tfor (int j = i - 1; j >= max(i - n, 1); --j) {\r\n\t\t\tif (a[i] >= a[j]) {\r\n\t\t\t\tdp[i] = max(dp[i], dp[j] + 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tans = max(ans, dp[i]);\r\n\t}\r\n\tif (t <= n) {\r\n\t\tprintf(\"%d\\n\", ans);\r\n\t} else {\r\n\t\tprintf(\"%d\\n\", ans + max_num * (t - n));\r\n\t}\r\n\treturn 0;\r\n}\r\n"
}