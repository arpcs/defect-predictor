{
    "id": 214612021,
    "contestId": 582,
    "creationTimeSeconds": 1689854854,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 582,
        "index": "B",
        "name": "Once Again...",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "dp",
            "matrices"
        ]
    },
    "author": {
        "contestId": 582,
        "members": [
            {
                "handle": "Pekiban"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1443890700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 268390400,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int mxN = 300;\r\nint bit[mxN], cnt[mxN];\r\n\r\nvoid update(int idx, int x) {\r\n    int s = 0;\r\n    for (; idx < mxN; idx = (idx | (idx+1))) {\r\n        bit[idx] = max(bit[idx], x);\r\n    }\r\n}\r\nint mx(int idx) {\r\n    int s = 0;\r\n    for (; idx >= 0; idx = (idx & (idx + 1)) - 1) {\r\n        s = max(s, bit[idx]);\r\n    }\r\n    return s;\r\n}\r\nint main() {\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int n, t;\r\n    cin >> n >> t;\r\n    int en = 400000;\r\n    const int d = n*min(en, t); // mozda iz n u n+1??\r\n    int a[d];\r\n    for (int i = 0; i < n; ++i) {\r\n        cin >> a[i];\r\n        a[i]--;\r\n        cnt[a[i]]++;\r\n    }\r\n    for (int i = n; i < d; ++i) {\r\n        a[i] = a[i-n];\r\n    }\r\n    int dp[d];\r\n    for (int i = 0; i < d; ++i) {\r\n        dp[i] = mx(a[i])+1;\r\n        update(a[i], dp[i]);\r\n    }\r\n    long long ans = 0;\r\n    if (t <= en) {\r\n        for (int i = (n-1)*t; i < n*t; ++i) {\r\n            ans = max(ans, dp[i]*1LL);\r\n        }\r\n    }\r\n    else {\r\n        for (int i = d-n; i < d; ++i) {\r\n            ans = max(ans, dp[i]+cnt[a[i]]*1LL*(t-en));\r\n        }\r\n    }\r\n    cout << ans << '\\n';\r\n}"
}