{
    "id": 186155109,
    "contestId": 582,
    "creationTimeSeconds": 1671570630,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 582,
        "index": "B",
        "name": "Once Again...",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "dp",
            "matrices"
        ]
    },
    "author": {
        "contestId": 582,
        "members": [
            {
                "handle": "tanjiro23"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1443890700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 48,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 716800,
    "source": "// Author: $%Ayush Gupta%$\n\n#include <bits/stdc++.h>\n#include \"ext/pb_ds/assoc_container.hpp\"\n#include \"ext/pb_ds/tree_policy.hpp\"\nusing namespace std;\nusing namespace __gnu_pbds;\ntemplate <class T>\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\ntemplate <class key, class value, class cmp = std::less<key>>\nusing ordered_map = tree<key, value, cmp, rb_tree_tag, tree_order_statistics_node_update>;\n#define int long long\n#define all(x) x.begin(), x.end()\n#define FIO                           \\\n\tios_base::sync_with_stdio(false); \\\n\tcin.tie(NULL);                    \\\n\tcout.tie(NULL)\n#define deb(x) cout << #x << \"=\" << x << endl\n#define deb2(x, y) cout << #x << \"=\" << x << \",\" << #y << \"=\" << y << endl\n#define endl \"\\n\"\nconst int mod = 1000000007;\n//===================================DEBUG TEMPLATE=================================================\nvoid __print(int x) { cerr << x; }\nvoid __print(float x) { cerr << x; }\nvoid __print(double x) { cerr << x; }\nvoid __print(long double x) { cerr << x; }\nvoid __print(char x) { cerr << '\\'' << x << '\\''; }\nvoid __print(const char *x) { cerr << '\\\"' << x << '\\\"'; }\nvoid __print(const string &x) { cerr << '\\\"' << x << '\\\"'; }\nvoid __print(bool x) { cerr << (x ? \"true\" : \"false\"); }\n\ntemplate <typename T, typename V>\nvoid __print(const pair<T, V> &x)\n{\n\tcerr << '{';\n\t__print(x.first);\n\tcerr << ',';\n\t__print(x.second);\n\tcerr << '}';\n}\ntemplate <typename T>\nvoid __print(const T &x)\n{\n\tint f = 0;\n\tcerr << '{';\n\tfor (auto &i : x)\n\t\tcerr << (f++ ? \",\" : \"\"), __print(i);\n\tcerr << \"}\";\n}\nvoid _print() { cerr << \"]\\n\"; }\ntemplate <typename T, typename... V>\nvoid _print(T t, V... v)\n{\n\t__print(t);\n\tif (sizeof...(v))\n\t\tcerr << \", \";\n\t_print(v...);\n}\n#ifndef ONLINE_JUDGE\n#define debug(x...)               \\\n\tcerr << \"[\" << #x << \"] = [\"; \\\n\t_print(x)\n#else\n#endif\n\n//====================================DEBUG TEMPLATE==============================================\n\nconst int INF = 1e15;\n\nstruct Matrix\n{\n\tvector<vector<int>> mat;\n\tint n_rows, n_cols;\n\n\tMatrix()\n\t{\n\t}\n\n\tMatrix(vector<vector<int>> values)\n\t{\n\t\tn_rows = values.size();\n\t\tn_cols = values[0].size();\n\t\tmat = values;\n\t}\n\n\tstatic Matrix identity_matrix(int n)\n\t{\n\t\tvector<vector<int>> values(n, vector<int>(n, 0));\n\t\treturn values;\n\t}\n\n\tMatrix operator*(const Matrix &other) const\n\t{\n\t\tint n = n_rows, m = other.n_cols;\n\t\tvector<vector<int>> result(n, vector<int>(m, 0));\n\t\tfor (int i = 0; i < n; i++)\n\t\t{\n\t\t\tfor (int j = 0; j < m; j++)\n\t\t\t{\n\t\t\t\tint tmp = -INF;\n\t\t\t\tfor (int k = 0; k < n_cols; k++)\n\t\t\t\t{\n\t\t\t\t\ttmp = max(tmp, other.mat[i][k] + mat[k][j]);\n\t\t\t\t}\n\t\t\t\tresult[i][j] = tmp;\n\t\t\t}\n\t\t}\n\t\treturn Matrix(result);\n\t}\n\n\tinline bool is_square() const\n\t{\n\t\treturn n_rows == n_cols;\n\t}\n};\n\nMatrix pw(Matrix a, int p)\n{\n\tMatrix result = Matrix::identity_matrix(a.n_cols);\n\twhile (p > 0)\n\t{\n\t\tif (p & 1)\n\t\t\tresult = a * result;\n\t\ta = a * a;\n\t\tp >>= 1;\n\t}\n\treturn result;\n}\n\nvoid solve()\n{\n\tint n, T;\n\tcin >> n >> T;\n\tvector<int> a(n);\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tcin >> a[i];\n\t}\n\tvector<vector<int>> d(n, vector<int>(n, 0));\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tfor (int j = 0; j < n; j++)\n\t\t{\n\t\t\tif (a[j] < a[i])\n\t\t\t{\n\t\t\t\td[i][j] = -INF;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\td[i][j] = 1;\n\t\t\t\tfor (int k = 0; k < j; k++)\n\t\t\t\t{\n\t\t\t\t\tif (a[k] <= a[j])\n\t\t\t\t\t{\n\t\t\t\t\t\td[i][j] = max(d[i][j], 1 + d[i][k]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tMatrix A(d);\n\tMatrix res = pw(A, T);\n\tint ans = 0;\n\tfor (int i = 0; i < n; i++)\n\t{\n\t\tfor (int j = 0; j < n; j++)\n\t\t{\n\t\t\tans = max(ans, res.mat[i][j]);\n\t\t}\n\t}\n\tcout << ans;\n}\n\nint32_t main()\n{\n\tFIO;\n\tint t = 1;\n\t// cin >> t;\n\tint x = 1;\n\twhile (t--)\n\t{\n\t\tsolve();\n\t\tx++;\n\t}\n}"
}