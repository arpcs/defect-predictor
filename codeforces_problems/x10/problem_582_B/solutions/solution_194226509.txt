{
    "id": 194226509,
    "contestId": 582,
    "creationTimeSeconds": 1676809899,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 582,
        "index": "B",
        "name": "Once Again...",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "dp",
            "matrices"
        ]
    },
    "author": {
        "contestId": 582,
        "members": [
            {
                "handle": "Krzychuo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1443890700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 35,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 1228800,
    "source": "/*************************************************************************************************************\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u283f\u281b\u281b\u281b\u280b\u2809\u2808\u2809\u2809\u2809\u2809\u281b\u283b\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u280b\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2809\u281b\u28bf\u28ff\u28ff\u28ff\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u28ff\u28ff\u284f\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u28e4\u28e4\u28e4\u28c4\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u28bf\u28ff\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u28ff\u288f\u28f4\u28ff\u28f7\u2800\u2800\u2800\u2800\u2800\u28be\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2846\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2808\u28ff\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u28df\u28fe\u28ff\u285f\u2801\u2800\u2800\u2800\u2800\u2800\u2880\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28a2\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28b8\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u28ff\u28ff\u28df\u2800\u2874\u2804\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u283b\u28ff\u28ff\u28ff\u28ff\u28f7\u28c4\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u28ff\u281f\u283b\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2836\u28b4\u28ff\u28ff\u28ff\u28ff\u28ff\u28e7\u2800\u2800\u2800\u2800\u2800\u2800\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28c1\u2840\u2800\u2800\u28b0\u28a0\u28e6\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28fc\u28ff\u28ff\u28ff\u28ff\u28ff\u2844\u2800\u28f4\u28f6\u28ff\u2844\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u284b\u2800\u2800\u2800\u280e\u28b8\u28ff\u2846\u2800\u2800\u2800\u2800\u2800\u2800\u28f4\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2817\u2898\u28ff\u28df\u281b\u283f\u28fc\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u280b\u2880\u284c\u28b0\u28ff\u287f\u28bf\u2840\u2800\u2800\u2800\u2800\u2800\u2819\u283f\u28ff\u28ff\u28ff\u28ff\u28ff\u2847\u2800\u28b8\u28ff\u28ff\u28e7\u2880\u28fc\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u28f7\u28bb\u2804\u2818\u281b\u280b\u281b\u2803\u2800\u2800\u2800\u2800\u2800\u28bf\u28e7\u2808\u2809\u2819\u281b\u280b\u2800\u2800\u2800\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u28e7\u2800\u2808\u28b8\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u281f\u2800\u2800\u2800\u2800\u2880\u2883\u2800\u2800\u28b8\u28ff\u28ff\u28ff\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u287f\u2800\u2834\u2897\u28e0\u28e4\u28f4\u2876\u2836\u2816\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28c0\u2878\u2800\u28ff\u28ff\u28ff\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u28ff\u2840\u28a0\u28fe\u28ff\u280f\u2800\u2820\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u281b\u2809\u2800\u28ff\u28ff\u28ff\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u28ff\u28e7\u2808\u28b9\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f0\u28ff\u28ff\u28ff\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u28ff\u28ff\u2844\u2808\u2803\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28e0\u28f4\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u28ff\u28ff\u28e7\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28e0\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u28ff\u28ff\u28f7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28f4\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u28ff\u28ff\u28ff\u28e6\u28c4\u28c0\u28c0\u28c0\u28c0\u2800\u2800\u2800\u2800\u2818\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u2844\u2800\u2800\u2800\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28e7\u2800\u2800\u2800\u2819\u28ff\u28ff\u285f\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2807\u2800\u2801\u2800\u2800\u2839\u28ff\u2803\u2800\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u281b\u28ff\u28ff\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2890\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u28ff\u28ff\u28ff\u283f\u281b\u2809\u2809\u2801\u2800\u28bb\u28ff\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u2808\u28ff\u28ff\u287f\u2809\u281b\u281b\u281b\u2809\u2809\r\n\t\t\t\t\t\t\t\t\t\t\u28ff\u287f\u280b\u2801\u2800\u2800\u2880\u28c0\u28e0\u2874\u28f8\u28ff\u28c7\u2844\u2800\u2800\u2800\u2800\u2880\u287f\u2804\u2819\u281b\u2800\u28c0\u28e0\u28e4\u28e4\u2804\r\n*************************************************************************************************************/\r\n#include <set>\r\n#include <map>\r\n#include <queue>\r\n#include <cmath>\r\n#include <tuple>\r\n#include <random>\r\n#include <vector>\r\n#include <bitset>\r\n#include <chrono>\r\n#include <iomanip>\r\n#include <cassert>\r\n#include <sstream>\r\n#include <iostream>\r\n#include <algorithm>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\nusing namespace std;\r\n#define UwU cin.tie(0);ios_base::sync_with_stdio(0);\r\n#define test int test_num;cin>>test_num;while(test_num--)\r\n#define prec(k) cout<<fixed<<setprecision(k);\r\n#define cl(n,k) ((n)+(k)-1)/(k)\r\n#define f first\r\n#define s second\r\nusing ll = long long;\r\nusing ld = long double;\r\nusing pii = pair<int,int>;\r\nusing pll = pair<ll,ll>;\r\nll gcd(ll a, ll b){return (b==0?a:gcd(b,a%b));}\r\nll lcm(ll a, ll b){return a/gcd(a,b)*b;}\r\nconst int M = 1e9 + 7;\r\nconst int O = 998244353;\r\nconst ld EPS = 1e-10;\r\nconst ld PI = 3.14159265358979323846;\r\nconst ll INF = (ll)1e18 + 5;\r\n\r\nconst int N = 100 + 5;\r\nconst int L = 26;\r\n\r\nint n, T;\r\nint w[N];\r\nint adj[N][N];\r\nint dp[L][N][N];\r\nint ans[N];\r\nint temp[N];\r\n\r\nint main(){\r\n\tUwU\r\n\r\n\tcin >> n >> T;\r\n\r\n\tfor(int i=0;i<n;i++){\r\n\t\tcin >> w[i];\r\n\t}\r\n\r\n\tfor(int i=0;i<n;i++){\r\n\t\tfor(int j=0;j<n;j++){\r\n\t\t\tadj[i][j] = -1;\r\n\t\t}\r\n\t}\r\n\r\n\tfor(int l=0;l<L;l++){\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tfor(int j=0;j<n;j++){\r\n\t\t\t\tdp[l][i][j] = -1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfor(int i=0;i<n;i++){\r\n\t\tfor(int j=i+1;j<n;j++){\r\n\t\t\tif(w[i] <= w[j]){\r\n\t\t\t\tadj[i][j] = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfor(int i=0;i<n;i++){\r\n\t\tfor(int j=0;j<=i;j++){\r\n\t\t\tif(w[i] <= w[j]){\r\n\t\t\t\tdp[0][i][j] = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfor(int k=0;k<n;k++){\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tfor(int j=0;j<n;j++){\r\n\t\t\t\tif(adj[i][k] == -1 || adj[k][j] == -1) continue;\r\n\t\t\t\tadj[i][j] = max(adj[i][j], adj[i][k] + adj[k][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfor(int k=0;k<n;k++){\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\tfor(int j=0;j<n;j++){\r\n\t\t\t\tif(dp[0][i][k] != -1 && adj[k][j] != -1){\r\n\t\t\t\t\tdp[0][i][j] = max(dp[0][i][j], dp[0][i][k] + adj[k][j]);\r\n\t\t\t\t}\r\n\t\t\t\tif(adj[i][k] != -1 && dp[0][k][j] != -1){\r\n\t\t\t\t\tdp[0][i][j] = max(dp[0][i][j], adj[i][k] + dp[0][k][j]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfor(int l=1;l<L;l++){\r\n\t\tfor(int k=0;k<n;k++){\r\n\t\t\tfor(int i=0;i<n;i++){\r\n\t\t\t\tfor(int j=0;j<n;j++){\r\n\t\t\t\t\tif(dp[l-1][i][k] == -1 || dp[l-1][k][j] == -1) continue;\r\n\t\t\t\t\tdp[l][i][j] = max(dp[l][i][j], dp[l-1][i][k] + dp[l-1][k][j]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfor(int i=0;i<n;i++){\r\n\t\tans[i] = 1;\r\n\t}\r\n\r\n\tT--;\r\n\tfor(int l=0;l<L;l++){\r\n\t\tif((T>>l)&1){\r\n\t\t\tfor(int i=0;i<n;i++){\r\n\t\t\t\ttemp[i] = 0;\r\n\t\t\t}\r\n\r\n\t\t\tfor(int i=0;i<n;i++){\r\n\t\t\t\tfor(int j=0;j<n;j++){\r\n\t\t\t\t\tif(dp[l][i][j] == -1) continue;\r\n\t\t\t\t\ttemp[j] = max(temp[j], ans[i] + dp[l][i][j]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor(int i=0;i<n;i++){\r\n\t\t\t\tans[i] = temp[i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tint maxi = 0;\r\n\tfor(int i=0;i<n;i++){\r\n\t\tmaxi = max(maxi, ans[i]);\r\n\t}\r\n\r\n\tcout << maxi;\r\n\r\n\treturn 0;\r\n}\r\n"
}