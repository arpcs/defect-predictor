{
    "id": 214388542,
    "contestId": 582,
    "creationTimeSeconds": 1689701015,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 582,
        "index": "B",
        "name": "Once Again...",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "dp",
            "matrices"
        ]
    },
    "author": {
        "contestId": 582,
        "members": [
            {
                "handle": "VLTisME986"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1443890700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 48,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 307200,
    "source": "#include <bits/stdc++.h>\r\n\r\n  using namespace std;\r\n\r\n  #define ll long long\r\n  #define f first\r\n  #define s second\r\n\r\n  typedef pair <int, int> ii;\r\n\r\n  // THINK CAREFULLY, DONT BE \"UNCERTAIN\" ABOUT UR CODE, PROVE FULLY, SOLVE ALL CASES, ALL UR \"?\" ARE SOLVED\r\n  // 1 SUB = 1 AC\r\n\r\n  const int N = 1e2;\r\n  const int MOD = 1e9 + 7;\r\n\r\n  int dx[4]{0, 0, -1, 1};\r\n  int dy[4]{1, -1, 0, 0};\r\n\r\n  int n, T, res;\r\n  int a[N + 5], b[2 * N * N + 5], d[2 * N * N + 5], l[305], cnt[N + 5][305];\r\n\r\n  void solve(){\r\n       cin >> n >> T;\r\n       for (int i = 1; i <= n; ++i) cin >> a[i];\r\n       if (T < 2 * n){// bcz T = 2n -> length = n.2n = 2n^2\r\n           for (int i = 1; i <= T * n; ++i){\r\n                b[i] = (i % n == 0 ? a[n] : a[i % n]);\r\n                d[i] = 1e9;\r\n           }\r\n           for (int i = 1; i <= T * n; ++i){\r\n                int k = upper_bound(d + 1, d + T * n + 1, b[i]) - d;\r\n                res = max(res, k);\r\n                d[k] = b[i];\r\n           }\r\n           cout << res;\r\n       }\r\n       else{\r\n            for (int i = 1; i <= n; ++i){\r\n                 // a[i] is the minimum \r\n                 for (int j = 1; j <= n * n; ++j){\r\n                      if ((j % n == 0 ? a[n] : a[j % n]) >= a[i]) b[j] = (j % n == 0 ? a[n] : a[j % n]);\r\n                      else b[j] = 0; \r\n                      d[j] = 1e9;\r\n                 }\r\n                 int tmp = 0;\r\n                 for (int j = 1; j <= n * n; ++j){\r\n                      if (!b[j]) continue;\r\n                      int k = upper_bound(d + 1, d + n * n + 1, b[j]) - d;\r\n                      tmp = max(tmp, k);\r\n                      d[k] = b[j];\r\n                 }\r\n                 l[a[i]] = tmp;\r\n            }\r\n            for (int i = 1; i <= n; ++i){\r\n                 for (int j = 1; j <= n; ++j) cnt[i][a[j]] = cnt[i - 1][a[j]];\r\n                 ++cnt[i][a[i]];\r\n            }\r\n            for (int i = 1; i <= n * n; ++i){\r\n                 b[i] = (i % n == 0 ? a[n] : a[i % n]);\r\n                 d[i] = 1e9;\r\n            }\r\n            // 2 10\r\n            // 1 2\r\n            // 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 \r\n            for (int i = 1; i <= n * n; ++i){\r\n                 int k = upper_bound(d + 1, d + n * n + 1, b[i]) - d;\r\n                 d[k] = b[i];\r\n                 for (int j = 1; j <= n; ++j){\r\n                      // choose a[j] as a middle number, a[j] >= b[i]\r\n                      if (a[j] < b[i]) continue;\r\n                      int rem = k + cnt[n][a[j]] - cnt[i % n == 0 ? n : i % n][a[j]] + (n - i / n - (i % n != 0)) * cnt[n][a[j]] + (T - 2 * n) * cnt[n][a[j]] + l[a[j]];\r\n                      res = max(res, rem);\r\n                 }\r\n            } \r\n            cout << res;\r\n       }\r\n  }\r\n\r\n  signed main(){\r\n         ios::sync_with_stdio(0);\r\n         cin.tie(0);\r\n         int test;\r\n         if (0) cin >> test;\r\n         else test = 1;\r\n         while (test--){\r\n                solve();\r\n          }\r\n     }"
}