{
    "id": 177255049,
    "contestId": 582,
    "creationTimeSeconds": 1666323805,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 582,
        "index": "B",
        "name": "Once Again...",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "dp",
            "matrices"
        ]
    },
    "author": {
        "contestId": 582,
        "members": [
            {
                "handle": "_Kamisato_Ayaka"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1443890700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 48,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "// LUOGU_RID: 90787220\n#define HT_walnut no tui,juan\n#define frein(x) freopen(#x\".in\",\"r\",stdin);\n#define freout(x) freopen(#x\".out\",\"w\",stdout);\n#define HT putchar('\\n');\n#define ht signed\n#define mk vector<string>::iterator\n#include <iostream>\n#include <algorithm>\n#include <cstring>\n#include <vector>\n#include <string>\n#include <bitset>\n#include <deque>\n#include <queue>\n#include <cmath>\n#include <map>\n#include <set>\nusing namespace std;\n#define ll long long\n#define db double\n#define ull unsigned long long\ninline int in () {\n    int x = 0;\n    bool f  = 0;\n    char c = getchar();\n    while (c > '9' || c < '0') {\n        if(c == '-') f = 1;\n        c = getchar();\n    }\n    while (c <= '9' && c >= '0') {\n        x = (x << 3) + (x << 1) + (c ^ 48);\n        c = getchar();\n    }\n    if(f) return -x;\n    else return x;\n}\n#define int long long \nconst int N = 1e4 + 10;\nconst int M = 310;\nint n, t, m, ans;\nint f;\nint a[N];\nint q[M];\nint sum[M];\ninline void update(int x, int val) {\n    while (x <= 300) {\n        q[x] = max(q[x], val);\n        x += x & (-x);\n    }\n}\ninline int get_max(int x) {\n    int res = 0;\n    while (x) {\n        res = max(q[x], res);\n        x -= x & (-x);\n    }\n    return res;\n}\nht main () {\n    // #ifdef DEBUG\n    // frein(a);\n    // freout(a);\n    // #endif\n    n = in();\n    t = in();\n    for (int i = 1; i <= n; ++i) {\n        a[i] = in();\n        sum[a[i]]++;\n    }\n    int k = min(n, t);\n    for (int i = 1; i < k; ++i) \n        for (int j = 1; j <= n; ++j) a[i * n + j] = a[j];\n    m = n * k;\n    int res = 0;\n    for (int i = 1; i <= m; ++i) {\n        f = get_max(a[i]) + 1;\n        update(a[i], f);\n        res = max(res, f);\n    }\n    ans = res;\n    if (n < t) {\n        for (int i = 1; i <= n; ++i) ans = max(ans, res + (t - n) * sum[a[i]]);\n    }\n    printf(\"%lld\", ans);\n    return 0;\n}"
}