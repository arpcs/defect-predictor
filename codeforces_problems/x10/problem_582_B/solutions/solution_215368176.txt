{
    "id": 215368176,
    "contestId": 582,
    "creationTimeSeconds": 1690208016,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 582,
        "index": "B",
        "name": "Once Again...",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "dp",
            "matrices"
        ]
    },
    "author": {
        "contestId": 582,
        "members": [
            {
                "handle": "economist"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1443890700
    },
    "programmingLanguage": "GNU C11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// reminder: i have autism\n\n#include <iostream>\n#include<math.h>\n#include <vector>\n#include <map>\n#include <set>\n#include <unordered_set>\n#include <queue>\n#include <stack>\n#include <string>\n#include <bitset>\n#include <deque>\n#include <random>\n#include <algorithm>\n#include <iterator>\n#include <numeric>\n#include <tuple>\n#include <thread>\n#include <chrono>\ntypedef long long ll;\nusing namespace std;\n \nconst ll mod = 1e9+7;\nconst ll inf = 1e18+1e17;\n \n\nint bitcount(ll n) { return n == 0 ? 0 : bitcount(n & (n - 1)) + 1;}\nll gcd(ll a, ll b) { return b ? gcd(b, a % b) : a;}\nll binexp(ll a, ll b){\n    if (!b) return 1;\n    ll res = binexp(a, b/2);\n    res = (res*res)%mod;\n    if(b%2) res = (res*a)%mod;\n    return res;\n}\nll rev(ll x) {return binexp(x, mod - 2);}\n\n\n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    int n,T;\n    cin >> n >> T;\n    vector<int> a(n);\n    map<int,ll> cnt;\n    for(int i =0 ;i<n;i++){\n        cin >> a[i];\n        cnt[a[i]]++;\n    }\n    if(T>1){\n        for(int i = 0;i<n;i++) a.push_back(a[i]);\n    }\n    else{\n        vector<int> dp(n,0);\n        dp[0] = 1;\n        for(int i = 1;i<n;i++){\n            dp[i] = 1;\n            for(int j = 0;j<i;j++){\n                if(a[j]<=a[i]) dp[i] = max(dp[i], dp[j]+1);\n            }\n        }\n        int ans = 1;\n        for(int i =0;i<n;i++) ans=max(ans,dp[i]);\n        cout << ans << endl;\n        return 0;\n    }\n    //a1,a2...an,a1,a2...an - do dp[i] = longest non decreasing subseq that ends in index i (than ans = max(ans, dp[i] + (T-2)*cnt[a[i]]));\n    vector<int> dp(2*n,0);\n    //dp[0]=1;\n    ll ans = 1ll*T*cnt[a[0]];\n    for(int i =0;i<2*n;i++){\n        dp[i] = 1;\n        //cout << \" i = \" << i << endl;\n        for(int j = 0;j<i;j++){\n            //cout << \" j = \" << j << endl;\n            if(a[j]<=a[i]) dp[i]=max(dp[i],dp[j]+1);\n        }\n        //cout << \" i = \" << i << \" dp[i] = \" << dp[i] << endl;\n        //cout << \"i = \" << i << \" a[i] = \" << a[i] << \" cnt = \" << cnt[a[i]] << \" dp[i] = \" << dp[i] << endl;\n        ll tmp = 1ll*dp[i] + 1ll*max((T-3),0)*cnt[a[i]];\n        if(T==2){\n            ans = max(ans, tmp);\n            continue;\n        }\n        vector<int> fu;\n        int index = (i%n);\n        //cout << \"index = \" << index << endl;\n        for(int j = index+1; j<n;j++) if(a[j]>=a[i]) fu.push_back(a[j]);\n        if(T>2) for(int j =0;j<n;j++) if(a[j]>=a[i]) fu.push_back(a[j]);\n        int k = (int) fu.size();\n        //cout << \" k = \" << k << endl;\n        vector<int> tmp_dp(k,0);\n        for(int j = 0;j<k;j++){\n            tmp_dp[j] = 1;\n            for(int l = 0;l<j;l++){\n                if(fu[l]<=fu[j]) tmp_dp[j] = max(tmp_dp[j], tmp_dp[l]+1);\n            }\n        }\n        int ans2 = 0;\n        for(int j = 0;j<k;j++) ans2 = max(ans2, tmp_dp[j]);\n        //cout << \"i = \" <<\n        ans = max(ans, tmp+ans2);\n    }\n    cout << ans << endl;\n}"
}