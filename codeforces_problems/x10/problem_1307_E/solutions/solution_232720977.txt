{
    "id": 232720977,
    "contestId": 1307,
    "creationTimeSeconds": 1699950552,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "E",
        "name": "Cow and Treats",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2500,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "greedy",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "DisconnectedGraph"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 307200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define _rep(i_,a_,b_) for(int i_ = (a_); i_ <= (b_); ++i_)\r\n#define mid ((L+R) >> 1)\r\n#define multiCase() int testCnt = in(); _rep(curCase,1,testCnt)\r\n#ifdef ONLINE_JUDGE\r\n#define debug(...) 0\r\n#else\r\n#define debug(...) fprintf(stderr, __VA_ARGS__), fflush(stderr)\r\n#endif\r\nusing ll = long long;\r\nusing pii = pair<int,int>;\r\n\r\nint in(void) { int x; scanf(\"%d\", &x); return x; } ll inl(void) { ll x; scanf(\"%lld\", &x); return x; }\r\nvoid out(int x) { printf(\"%d \", x); } void outln(int x) { printf(\"%d\\n\", x); }\r\nvoid out(ll x) { printf(\"%lld \", x); } void outln(ll x) { printf(\"%lld\\n\", x); }\r\ntemplate<typename T> void chkmax(T &a, const T &b) { a = max(a, b); } \r\ntemplate<typename T> void chkmin(T &a, const T &b) { a = min(a, b); } \r\nconst int kN = 5500, p = 1e9 + 7;\r\nint n = in(), m = in(), s[kN], tot[kN]; vector<int> g[kN];\r\nint f[kN][2], f2[kN][2], tmp[kN], tmp2[kN];\r\nint main() { \r\n\t_rep(i,1,n) ++tot[s[i] = in()];\r\n\t_rep(i,1,m) {\r\n\t\tint f = in(), h = in();\r\n\t\tg[f].emplace_back(h);\r\n\t}\r\n\t_rep(i,1,n) sort(g[i].begin(), g[i].end());\r\n\t_rep(i,0,n) f[i][0] = 1; int slp = 0;\r\n\t_rep(i,1,n) if(g[i].size()) {\r\n\t\tvector<pii> ele;\r\n\t\tfor(auto x : g[i]) {\r\n\t\t\tint p = 1, left = x, l_id = -1, r_id = -1;\r\n\t\t\twhile(p <= n && left) left -= s[p++] == i;\r\n\t\t\tif(!left) l_id = p - 1;\r\n\t\t\telse continue;\r\n\t\t\tp = n, left = x;\r\n\t\t\twhile(p >= 1 && left) left -= s[p--] == i;\r\n\t\t\tif(!left) r_id = p + 1;\r\n\t\t\telse continue;\r\n\t\t\tele.emplace_back(l_id, r_id);\r\n\t\t}\r\n\t\tif(ele.empty()) continue;\r\n\t\tsort(ele.begin(), ele.end());\r\n\t\tfor(auto &[a, b] : ele) debug(\"(%d, %d)\\n\", a, b);\r\n\t\tint a = ele[0].first, b = ele[0].second;\r\n\t\tbool flag = a <= b, flag2 = false;\r\n\t\tif(a > b) {\r\n\t\t\t_rep(j,a,n) flag |= f[j][0] | f[j][1];\r\n\t\t\t_rep(j,0,b - 1) flag |= f[j][0] | f[j][1];\r\n\t\t}\r\n\t\tif(flag && ele.size() >= 2) {\r\n\t\t\tauto [x1, y1] = ele[0];\r\n\t\t\tauto [x2, y2] = ele[1];\r\n\t\t\tif(x1 < y2) _rep(j,x1,y2 - 1) flag2 |= f[j][0] | f[j][1];\r\n\t\t\tif(x2 < y1) _rep(j,x2,y1 - 1) flag2 |= f[j][0] | f[j][1];\r\n\t\t}\r\n\t\tif(!flag) continue;\r\n\t\tif(!flag2) { slp += 1;\r\n\t\t\tmemset(f2, 0, sizeof(f2));\r\n\t\t\tfor(auto &[x, y] : ele) {\r\n\t\t\t\t_rep(_,0,1) _rep(j,x + 1,n) f2[j][_] = (f2[j][_] + f[j][_]) % p;\r\n\t\t\t\tf2[x][1] = (f2[x][1] + f[x][0]) % p;\r\n\t\t\t\tf2[x][1] = (f2[x][1] + f[x][1]) % p;\r\n\t\t\t\t_rep(_,0,1) _rep(j,0,y - 1) f2[j][_] = (f2[j][_] + f[j][_]) % p;\r\n\t\t\t}\r\n\t\t} else { slp += 2;\r\n\t\t\tmemset(f2, 0, sizeof(f2)); memset(tmp, 0, sizeof(tmp)); memset(tmp2, 0, sizeof(tmp2));\r\n\t\t\t_rep(a,0,ele.size() - 1) _rep(b,a + 1,ele.size() - 1) {\r\n\t\t\t\tauto [x1, y1] = ele[a];\r\n\t\t\t\tauto [x2, y2] = ele[b];\r\n\t\t\t\tif(x1 < y2) tmp[x1 + 1]++, tmp[y2]--, tmp2[x1]++;\r\n\t\t\t\tif(x2 < y1) tmp[x2 + 1]++, tmp[y1]--, tmp2[x2]++;\r\n\t\t\t}\t\r\n\t\t\t_rep(i,1,n) tmp[i] += tmp[i - 1];\r\n\t\t\t_rep(_,0,1) _rep(i,0,n) f2[i][_] = (f2[i][_] + 1ll * f[i][_] * tmp[i] % p) % p;\r\n\t\t\t_rep(i,0,n) if(tmp2[i]) debug(\"??\\n\"), f2[i][1] = (f2[i][1] + 1ll * f[i][0] * tmp2[i] % p) % p, f2[i][1] = (f2[i][1] + 1ll * f[i][1] * tmp2[i] % p) % p;\r\n\t\t}\r\n\t\tmemcpy(f, f2, sizeof(f));\r\n\t\t_rep(i,0,n) _rep(j,0,1) debug(\"%d%c\", f2[i][j], \" \\n\"[j == 1]);\r\n\t\tdebug(\"Finish Sweetness = %d\\n\", i);\r\n\t} \r\n\tout(slp);\r\n\tint sum = f[0][0];\r\n\t_rep(i,0,n) sum = (sum + f[i][1]) % p; \r\n\toutln(sum);\r\n\treturn 0;\r\n}\r\n\r\n/* \r\na list of keywords\r\nclear empty push_back pop_back push pop top front back\r\nemplace_back emplace push_front pop_front insert erase\r\nfind count set reset bitset map vector string multiset\r\nfirst second iterator prev next deque multimap reverse\r\nsort begin end list modify query init check calc prime\r\nputchar getchar puts scanf printf max min swap replace\r\nmake_pair make_tuple numeric_limits auto function null\r\n*/"
}