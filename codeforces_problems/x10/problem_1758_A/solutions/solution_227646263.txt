{
    "id": 227646263,
    "contestId": 1758,
    "creationTimeSeconds": 1697014652,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1758,
        "index": "A",
        "name": "SSeeeeiinngg DDoouubbllee",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "constructive algorithms",
            "strings"
        ]
    },
    "author": {
        "contestId": 1758,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1669390500
    },
    "programmingLanguage": "Python 2",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "def rearrange_to_palindrome(t, strings):\n    results = []\n    for s in strings:\n        frequency = {}\n        for char in s:\n            frequency[char] = frequency.get(char, 0) + 1\n        \n        odd_count_chars = []\n        even_count_chars = []\n        for char, count in frequency.items():\n            if count % 2 == 0:\n                even_count_chars.append(char * (count // 2))\n            else:\n                odd_count_chars.append(char * ((count - 1) // 2))\n        \n        if len(odd_count_chars) > 1:\n            return \"NO SOLUTION\"\n        \n        palindrome = ''.join(even_count_chars + odd_count_chars + even_count_chars[::-1])\n        results.append(palindrome)\n    \n    return results\n\n# Read input\nt = int(input())\nstrings = []\nfor _ in range(t):\n    s = input().strip()\n    strings.append(s)\n\n# Call the function and print the results\nresults = rearrange_to_palindrome(t, strings)\nfor palindrome in results:\n    print(palindrome)\n\n  \t \t \t\t \t \t\t\t\t \t\t\t\t \t \t\t \t   \t"
}