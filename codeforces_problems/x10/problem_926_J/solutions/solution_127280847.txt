{
    "id": 127280847,
    "contestId": 926,
    "creationTimeSeconds": 1630172209,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 926,
        "index": "J",
        "name": "Segments",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 926,
        "members": [
            {
                "handle": "qwerty190"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1521300900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 46,
    "timeConsumedMillis": 467,
    "memoryConsumedBytes": 59187200,
    "source": "#include<bits/stdc++.h>\r\n#define ll long long\r\n#define pii pair<int,int>\r\nusing namespace std;\r\nconst int mxn=2e5+5;\r\nconst int inf=1e9;\r\nstruct DSU {\r\n\tint parent[mxn];\r\n\tint sz[mxn];\r\n\tint comp;\r\n\tvoid init(int n) {\r\n\t\tfor(int i = 1; i <= n; i++) {\r\n\t\t\tparent[i] = i;\r\n\t\t\tsz[i] = 1;\r\n\t\t}\r\n\t\tcomp = n;\r\n\t}\r\n\tint findrep(int u) {\r\n\t\treturn parent[u] == u ? u : parent[u] = findrep(parent[u]);\r\n\t}\r\n\tvoid unite(int u,int v) {\r\n\t\tu = findrep(u);\r\n\t\tv = findrep(v);\r\n\t\tif(u == v) return;\r\n\t\r\n\t\tif(sz[u] > sz[v]) swap(u,v);\r\n\t\tcomp--;\r\n\t\tparent[u] = v;\r\n\t\tsz[v] += sz[u];\r\n\t}\r\n} dsu;\r\nstruct node {\r\n\tvector<int> v;\r\n\tnode *left;\r\n\tnode * right;\r\n\r\n\tnode(node *l = NULL, node *r = NULL) : left(l), right(r) {}\r\n\tvoid update(int b,int e,int l,int r,int x) {\r\n\t\tif(b > r || e < l) return;\r\n\r\n\t\tif(b >= l && e <= r) {\r\n\t\t\tfor(int i : v) dsu.unite(abs(i),x);\r\n\t\t\tv.clear();\r\n\t\t    v.push_back(-x);\r\n\t\t    return;\r\n\t\t}\r\n\r\n\t\tif(!v.empty() && v[0] < 0) {\r\n\t\t\tdsu.unite(-v[0],x);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tv.push_back(x);\r\n\r\n\t\tif(!left) left = new node();\r\n\t\tif(!right) right = new node();\r\n\r\n\t\tint mid = b + e >> 1;\r\n\r\n\t\tleft-> update(b,mid,l,r,x);\r\n\t\tright-> update(mid + 1,e,l,r,x);\r\n\t}\r\n\r\n\r\n\r\n} *root;\r\n\r\nint L[mxn],R[mxn];\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\r\n\tdsu.init(n);\r\n\r\n\troot = new node();\r\n\r\n\tvector<int> v;\r\n\r\n\r\n\r\n\r\n\tfor(int i = 1; i <= n; i++) {\r\n\t\tint l,r;\r\n\t\tscanf(\"%d%d\",&L[i],&R[i]);\r\n\t\tv.push_back(L[i]);\r\n\t\tv.push_back(R[i]);\r\n\t}\r\n\r\n\tsort(v.begin(),v.end());\r\n\tv.erase(unique(v.begin(),v.end()),v.end());\r\n\r\n\tfor(int i = 1; i <= n; i++) {\r\n\t\tL[i] = lower_bound(v.begin(),v.end(),L[i]) - v.begin() + 1;\r\n\t\tR[i] = lower_bound(v.begin(),v.end(),R[i]) - v.begin() + 1;\r\n\t}\r\n\tint M = v.size() + 5;\r\n\r\n\r\n\tfor(int i = 1; i <= n; i++) {\r\n\t\troot->update(1,M,L[i],R[i],i);\r\n\t\tprintf(\"%d \", dsu.comp - (n - i));\r\n\t}\r\n\r\n\r\n\r\n\t\r\n}"
}