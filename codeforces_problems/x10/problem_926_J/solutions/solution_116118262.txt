{
    "id": 116118262,
    "contestId": 926,
    "creationTimeSeconds": 1620919096,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 926,
        "index": "J",
        "name": "Segments",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 926,
        "members": [
            {
                "handle": "ektrojohn"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1521300900
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 20,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 6348800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\nset <pair<int, bool>> segments;\r\nint n;\r\nint const N = 2e5+5;\r\nint ans[N], a[N], b[N];\r\n\r\nint main()\r\n{\r\n    scanf(\"%d\", &n);\r\n    for(int i=0; i<n; i++) scanf(\"%d%d\", &a[i], &b[i]);\r\n    segments.insert({a[0], false});\r\n    segments.insert({b[0], true});\r\n    ans[0] = 2;\r\n    for(int i=1; i<n; i++)\r\n    {\r\n        auto it = segments.lower_bound({a[i], false});\r\n        if(!((*it).second) && a[i] <= (*it).first)\r\n        {\r\n            if(b[i] < (*it).first)\r\n            {\r\n                segments.insert({a[i], false});\r\n                segments.insert({b[i], true});\r\n            }\r\n            else\r\n            {\r\n                if(a[i] != (*it).first)\r\n                {\r\n                    segments.insert({a[i], false});\r\n                    segments.erase(it++);\r\n                }\r\n                else it++;\r\n            }\r\n        }\r\n        while(b[i] > (*it).first)\r\n        {\r\n            if(a[i] > (*it).first)\r\n            {\r\n                segments.insert({a[i], false});\r\n                segments.insert({b[i], true});\r\n                break;\r\n            }\r\n            segments.erase(it++);\r\n            if(it == segments.end())\r\n            {\r\n                segments.insert({b[i], true});\r\n                break;\r\n            }\r\n            if(b[i] < (*it).first)\r\n            {\r\n                it--;\r\n                segments.erase(it);\r\n                segments.insert({b[i], true});\r\n                break;\r\n            }\r\n            segments.erase(it++);\r\n            if(b[i] <= (*it).first) break;\r\n        }\r\n        ans[i] = segments.size();\r\n    }\r\n    for(int i=0; i<n; i++) printf(\"%d \", ans[i]/2);\r\n    return 0;\r\n}\r\n"
}