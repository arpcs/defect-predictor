{
    "id": 133132639,
    "contestId": 926,
    "creationTimeSeconds": 1635234852,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 926,
        "index": "J",
        "name": "Segments",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 926,
        "members": [
            {
                "handle": "phuthai_29_06_05"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1521300900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n using namespace std;\r\n #define ll long long\r\n struct pt\r\n {\r\n     ll t,p,cs;\r\n }a[100005];\r\n map<ll,ll>m;\r\n ll n,l[1000005],r[1000005],res;\r\n vector<ll> adj;\r\n pt check(pt x, pt y)\r\n {\r\n    pt kqua;\r\n    kqua.t=x.t;\r\n    kqua.p=y.p;\r\n    if(x.p>0 and y.t>0)\r\n         kqua.cs=x.cs+y.cs-1;\r\n    else\r\n        kqua.cs=x.cs+y.cs;\r\n    return res;\r\n\r\n }\r\n void upd(int i,int u,int l,int r,int node)\r\n {\r\n     if(u>r or u<l or l>r ) return;\r\n     if(a[node].cs==1  and a[node].t==1 and a[node].p==1 ) return;\r\n     if(i<=l and r<=u)\r\n     {\r\n         a[node].cs=1;\r\n         a[node].p=1;\r\n         a[node].t=1;\r\n         return;\r\n     }\r\n     ll mid=(l+r)/2;\r\n     upd(i,u,l,mid,node*2);\r\n     upd(i,u,mid+1,r,node*2+1);\r\n     a[node]=check(a[node*2],a[node*2+1]);\r\n }\r\n\r\n int main()\r\n {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);cout.tie(0);\r\n    cin>>n;\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n       cin>>l[i]>>r[i];\r\n       adj.push_back(l[i]);\r\n       adj.push_back(r[i]);\r\n    }\r\n    sort(adj.begin(),adj.end());\r\n    adj.erase(unique(adj.begin(),adj.end()),adj.end());\r\n    for(int i:adj)\r\n    m[i]=res++;\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        l[i]=m[l[i]];\r\n        r[i]=m[r[i]];\r\n        upd(l[i],r[i]-1,1,res,1);\r\n        cout<<a[1].cs<<\" \";\r\n    }\r\n }\r\n"
}