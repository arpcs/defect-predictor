{
    "id": 227087335,
    "contestId": 926,
    "creationTimeSeconds": 1696742474,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 926,
        "index": "J",
        "name": "Segments",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 926,
        "members": [
            {
                "handle": "niter"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1521300900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 46,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 9728000,
    "source": "#include <bits/stdc++.h>\r\n#define lop(i,a,b) for(int i = (a); i < b; i++)\r\n#define pii pair<int,int>\r\n#define ff first\r\n#define ss second\r\n#define pb push_back\r\n#define mp make_pair\r\n#define ins insert\r\n#define opa(x) cout << #x << \" = \" << x << \", \";\r\n#define op(x) cout << #x << \" = \" << x << endl;\r\n#define ops(x) cout << x << endl;\r\n#define STL(x) cout << #x << \" : \"; for(auto &qwe:x) cout << qwe << ' '; cout << endl;\r\n#define spac cout << ' ';\r\n#define entr cout << endl;\r\nusing namespace std;\r\n\r\nostream& operator<<(ostream& os, pii A){\r\n    os <<\"[\" << A.ff << \", \" << A.ss << \"]\";\r\n}\r\n\r\nint main(){\r\n    ios::sync_with_stdio(false); cin.tie(0);\r\n    int n; cin >> n;\r\n    set<pii> S;\r\n    lop(i,0,n){\r\n        int L, R; cin >> L >> R;\r\n        if(S.size() > 0){\r\n            auto it = S.upper_bound(mp(L, 2e9));\r\n            if(it != S.begin()){\r\n                it = prev(it);\r\n            }\r\n            if(it->ss < L){\r\n                it++;\r\n            }\r\n            if(it == S.end()){\r\n                S.insert(mp(L, R));\r\n            }\r\n            else if(it->ff > R){\r\n                S.insert(mp(L, R));\r\n            }\r\n            else{\r\n                int ed_l = min(it->ff, L);\r\n                int ed_r = max(it->ss, R);\r\n                vector<pii> to_del;\r\n                for(auto j = it; j != S.end(); j++){\r\n                    if(j->ff > R) break;\r\n//                    op(*j)\r\n                    to_del.pb(*j);\r\n                    ed_r = max(j->ss, R);\r\n                }\r\n                if(!to_del.empty()){\r\n                    for(auto &j:to_del){\r\n                        S.erase(j);\r\n                    }\r\n                    S.insert(mp(ed_l, ed_r));\r\n                }\r\n                else{\r\n                    S.insert(mp(ed_l, ed_r));\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            S.insert(mp(L, R));\r\n        }\r\n//        cerr << \"ans = \";\r\n        cout << S.size() << ' ';\r\n//        STL(S)\r\n    } cout << '\\n';\r\n}\r\n/*\r\n2\r\n80 98\r\n71 74\r\n*/"
}