{
    "id": 191525552,
    "contestId": 792,
    "creationTimeSeconds": 1675253484,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 792,
        "index": "E",
        "name": "Colored Balls",
        "type": "PROGRAMMING",
        "rating": 2500,
        "tags": [
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 792,
        "members": [
            {
                "handle": "Omar_Mohammad"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1490625300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n//#pragma GCC optimize (\"Ofast, no-stack-protector, unroll-loops, fast-math, O3\")\r\n#define ios {ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);}\r\n#define mp(x, y) make_pair(x, y)\r\n#define popCnt(x) (__builtin_popcountll(x))\r\n#define pb(x) push_back(x);\r\n#define F first\r\n#define S second\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntemplate<typename T> using ordered_set = tree<T, null_type,less<T>, rb_tree_tag,tree_order_statistics_node_update>;\r\ntemplate<typename T1, typename T2> ostream& operator<<(ostream& out, const pair<T1, T2>& x) {return out <<\"(\" << x.F << \", \" << x.S << \")\";}\r\ntemplate<typename T1, typename T2> istream& operator>>(istream& in, pair<T1, T2>& x) {return in >> x.F >> x.S;}\r\ntemplate<typename T> istream& operator>>(istream& in, vector<T>& a) {for(auto &x : a) in >> x; return in;};\r\ntemplate<typename T> ostream& operator<<(ostream& out, vector<T>& a) {for(auto &x : a) out << x << ' '; return out;};\r\ntemplate<typename T> ostream& operator<<(ostream& out, priority_queue<T> a) {\r\n    while(!a.empty()){\r\n        cout << a.top() << \" \";\r\n        a.pop();\r\n    }\r\n    cout << \"\\n\";\r\n};\r\ntemplate<typename T> ostream& operator<<(ostream& out, set<T>& a) {for(auto &x : a) out << x << ' '; return out;};\r\ntemplate<typename T> ostream& operator<<(ostream& out, deque<T>& a) {for(auto &x : a) out << x << ' '; return out;};\r\ntemplate<typename T> ostream& operator<<(ostream& out, multiset<T>& a) {for(auto &x : a) out << x << ' '; return out;};\r\ntemplate<typename T> ostream& operator<<(ostream& out, ordered_set<T>& a) {for(auto &x : a) out << x << ' '; return out;};\r\ntemplate<typename T> ostream& operator<<(ostream& out, map<T, T>& a) {for(auto &x : a) out <<\"(\" << x.F << \", \" << x.S <<\")\"; return out;};\r\nconst char el ='\\n';\r\nconst char sp = ' ';\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\nll rand(ll l , ll r) {\r\n    return uniform_int_distribution<ll>(l, r)(rng);\r\n}\r\nll gcd(ll a, ll b, ll& x, ll& y) {\r\n    if (b == 0) {\r\n        x = 1;\r\n        y = 0;\r\n        return a;\r\n    }\r\n    ll x1, y1;\r\n    ll d = gcd(b, a % b, x1, y1);\r\n    x = y1;\r\n    y = x1 - y1 * (a / b);\r\n    return d;\r\n}\r\n\r\nbool find_any_solution(ll a, ll b, ll c, ll &x0, ll &y0, ll &g) {\r\n    g = gcd(abs(a), abs(b), x0, y0);\r\n    if (c % g) {\r\n        return false;\r\n    }\r\n    x0 *= c / g;\r\n    y0 *= c / g;\r\n    if (a < 0) x0 = -x0;\r\n    if (b < 0) y0 = -y0;\r\n    return true;\r\n}\r\nll get_min(ll i, ll tot){\r\n    ll a, b, g;\r\n    find_any_solution(i, i + 1, tot, a, b, g);\r\n    if(a < 0){\r\n        ll val = (abs(a) + i) / (i + 1);\r\n        a += val * (i + 1);\r\n        b -= val * i;\r\n    }\r\n    else{\r\n        ll val = (abs(b) + i - 1) / (i);\r\n        b += val * i;\r\n        a -= val * (i + 1);\r\n    }\r\n    if(a < 0 || b < 0)\r\n        return -1;\r\n    ll opt_val = a / (i + 1);\r\n    a -= opt_val * (i + 1);\r\n    b += opt_val;\r\n    return a + b;\r\n}\r\nvoid solve(){\r\n    int n;\r\n    cin >> n;\r\n    ll tot = 0;\r\n    vector<int> arr(n);\r\n    for(int i = 0; i < n; i++){\r\n        cin >> arr[i];\r\n        tot += arr[i];\r\n    }\r\n//    cout << arr << el;\r\n    ll ans = 1e18;\r\n    for(int i = 1; i <= sqrt(tot); i++){\r\n        bool can_i = true;\r\n        ll cur_tot = 0;\r\n        for(int j = 0; j < n; j++){\r\n            ll val = get_min(i, arr[j]);\r\n            if(val == -1){\r\n                can_i = false;\r\n                break;\r\n            }\r\n            cur_tot += val;\r\n        }\r\n        if(can_i){\r\n//            cout << i << sp << cur_tot << el;\r\n            ans = min(ans, cur_tot);\r\n        }\r\n    }\r\n//    cout << ans << el;\r\n    for(int i = 1; i <= sqrt(tot); i++){\r\n        ll sz = tot / i;\r\n        bool can_sz = true;\r\n        ll cur_tot = 0;\r\n        for(int j = 0; j < n; j++){\r\n            ll val = get_min(sz, arr[j]);\r\n            if(val == -1){\r\n                can_sz = false;\r\n                break;\r\n            }\r\n            cur_tot += val;\r\n        }\r\n        if(can_sz){\r\n            ans = min(ans, cur_tot);\r\n        }\r\n        sz--;\r\n        can_sz = false;\r\n        cur_tot = 0;\r\n        for(int j = 0; j < n; j++){\r\n            ll val = get_min(sz, arr[j]);\r\n            if(val == -1){\r\n                can_sz = false;\r\n                break;\r\n            }\r\n            cur_tot += val;\r\n        }\r\n        if(can_sz){\r\n            ans = min(ans, cur_tot);\r\n        }\r\n    }\r\n    cout << ans << el;\r\n}\r\nint main(){\r\n    ios;\r\n    int t = 1;\r\n//    cin >> t;\r\n    while(t--){\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}