{
    "id": 225607561,
    "contestId": 792,
    "creationTimeSeconds": 1695884110,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 792,
        "index": "E",
        "name": "Colored Balls",
        "type": "PROGRAMMING",
        "rating": 2500,
        "tags": [
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 792,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1490625300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 4198400,
    "source": "#include<bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\nusing namespace std;\n#define bug(var) cout<<#var<<\" \"<<var<<endl;\n#define FastRead    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\ntemplate <typename T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\ntypedef long long int ll;\nconst int MOD = (int)1e9+7;\nconst int MAX = 1e6;\nint arr[MAX],n;\nll getAnsLo(ll x)\n{\n    ll ans=0;\n    for(int i=0; i<n; i++)\n    {\n\n        if(arr[i]%x)\n        {\n            ll nw = arr[i]/x;\n            ll rem = arr[i]%x;\n            int req = x-rem;\n            if(req>nw) return -1;\n            ans++;\n            ans+=arr[i]/x;\n        }\n        else\n            ans+=arr[i]/x;\n\n    }\n    return ans;\n}\nll getAnsHi(ll x)\n{\n    ll ans=0;\n    ll rem = 0;\n    for(int i=0; i<n; i++)\n    {\n        if(arr[i]%x)\n        {\n            ll nw = arr[i]/x;\n            ll rem = arr[i]%x;\n            if(rem>nw) return -1;\n            ans+=arr[i]/x;\n        }\n        else\n            ans+=arr[i]/x;\n\n    }\n    return ans;\n\n}\nll getAns(ll x)\n{\n    ll lo = getAnsLo(x);\n    ll hi = getAnsHi(x);\n    if(lo==-1 || hi==-1) return max(lo,hi);\n    return min(lo,hi);\n}\nset<int>d;\nvoid genDiv(int n)\n{\n    int sq=sqrt(n);\n    for(int i=1; i<=sq; i++)\n    {\n        if(n%i==0)\n        {\n            d.insert(i);\n            d.insert(n/i);\n        }\n    }\n}\nvoid solve(int cs)\n{\n    cin>>n;\n    for(int i=0; i<n; i++)\n    {\n        cin>>arr[i];\n        genDiv(arr[i]);\n    }\n    ll ans=1e12;\n    for(auto it:d)\n    {\n        ll x = it;\n        while(x>=1)\n        {\n            for(int j=0; j<2; j++)\n            {\n                ll cur = getAns(x+j);\n                if(cur!=-1)\n                {\n                    ans=min(ans,cur);\n                }\n            }\n            x/=2;\n        }\n\n    }\n\n    cout<<ans<<endl;\n\n\n}\nint main()\n{\n    FastRead\n    int tc=1;\n    //cin>>tc;\n    for(int cs=1; cs<=tc; cs++)\n        solve(cs);\n\n    return 0;\n}\n\n\n\n \t\t    \t    \t \t\t\t  \t\t \t  \t\t \t"
}