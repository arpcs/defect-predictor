{
    "id": 191269561,
    "contestId": 792,
    "creationTimeSeconds": 1675091433,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 792,
        "index": "E",
        "name": "Colored Balls",
        "type": "PROGRAMMING",
        "rating": 2500,
        "tags": [
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 792,
        "members": [
            {
                "handle": "Superposition"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1490625300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 296,
    "memoryConsumedBytes": 0,
    "source": "// Om Namah Shivaya\r\n\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\ntemplate<typename T> using Tree = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\ntypedef long long int ll;\r\ntypedef long double ld;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, ll> pll;\r\n\r\n#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL)\r\n#define pb push_back\r\n#define endl '\\n'\r\n#define sz(a) a.size()\r\n#define setbits(x) __builtin_popcountll(x)\r\n#define ff first\r\n#define ss second\r\n#define conts continue\r\n#define ceil2(x, y) ((x + y - 1) / (y))\r\n#define all(a) a.begin(), a.end()\r\n#define rall(a) a.rbegin(), a.rend()\r\n#define yes cout << \"Yes\" << endl\r\n#define no cout << \"No\" << endl\r\n\r\n#define rep(i, n) for(int i = 0; i < n; ++i)\r\n#define rep1(i, n) for(int i = 1; i <= n; ++i)\r\n#define rev(i, s, e) for(int i = s; i >= e; --i)\r\n#define trav(i, a) for(auto &i : a)\r\n\r\nbool iseven(ll a) {\r\n    if (!(a & 1)) return true;\r\n    else return false;\r\n}\r\n\r\ntemplate<typename T>\r\nvoid amin(T &a, T b) {\r\n    a = min(a, b);\r\n}\r\n\r\ntemplate<typename T>\r\nvoid amax(T &a, T b) {\r\n    a = max(a, b);\r\n}\r\n\r\n#define debug(x) cout << #x << \" = \"; print(x); cout << endl\r\n\r\nvoid print(int i) {\r\n    cout << i;\r\n}\r\n\r\nvoid print(ll i) {\r\n    cout << i;\r\n}\r\n\r\nvoid print(string i) {\r\n    cout << i;\r\n}\r\n\r\nvoid print(char i) {\r\n    cout << i;\r\n}\r\n\r\nvoid print(double i) {\r\n    cout << i;\r\n}\r\n\r\nvoid print(ld i) {\r\n    cout << i;\r\n}\r\n\r\ntemplate<typename T, typename V>\r\nvoid print(pair<T, V> v) {\r\n    cout << \"{\";\r\n    print(v.ff);\r\n    cout << \",\";\r\n    print(v.ss);\r\n    cout << \"}\";\r\n}\r\n\r\ntemplate<typename T>\r\nvoid print(vector<T> v) {\r\n    cout << \"[ \";\r\n\r\n    for (auto i : v) {\r\n        print(i);\r\n        cout << \" \";\r\n    }\r\n\r\n    cout << \"]\";\r\n}\r\n\r\ntemplate<typename T>\r\nvoid print(set<T> v) {\r\n    cout << \"[ \";\r\n\r\n    for (auto i : v) {\r\n        print(i);\r\n        cout << \" \";\r\n    }\r\n\r\n    cout << \"]\";\r\n}\r\n\r\ntemplate<typename T>\r\nvoid print(multiset<T> v) {\r\n    cout << \"[ \";\r\n\r\n    for (auto i : v) {\r\n        print(i);\r\n        cout << \" \";\r\n    }\r\n\r\n    cout << \"]\";\r\n}\r\n\r\ntemplate<typename T>\r\nvoid print(Tree<T> v) {\r\n    cout << \"[ \";\r\n\r\n    for (auto i : v) {\r\n        print(i);\r\n        cout << \" \";\r\n    }\r\n\r\n    cout << \"]\";\r\n}\r\n\r\ntemplate<typename T, typename V>\r\nvoid print(map<T, V> v) {\r\n    cout << \"{ \";\r\n    for (auto p : v) {\r\n        print(p);\r\n        cout << \" \";\r\n    }\r\n\r\n    cout << \"}\";\r\n}\r\n\r\n/*\r\n\r\nrefs:\r\neditorial\r\n\r\n\r\ndivide balls of type i into k sets of size x and x+1\r\n\r\nmin(k,x) <= sqrt(a[i])\r\n\r\nfind best ans when k <= sqrt(a[1])\r\nfind best ans when x <= sqrt(a[1])\r\n\r\nk <= sqrt(a[1]):\r\nonce k is fixed, x can take any of the 3 values (a[i]/k-1), (a[i]/k), (a[i]/k+1)\r\ntry all these values of x\r\n\r\nx <= sqrt(a[1]):\r\niterate over all x and check if possible\r\n\r\nhow to check if given x is possible and if so, find the min #of sets required?\r\n\r\ninitially put all balls of col i into ceil2(a[i],x+1) boxes of size x+1\r\n\r\nnow some balls are extra\r\nso we have to remove these extra balls to make #of balls = a[i]\r\n\r\n#of extra balls = ceil2(a[i],x+1) * (x+1) - a[i]\r\n\r\nthe #of extra balls must be <= #of boxes\r\n\r\nif this is satisfied for all i, then x is valid\r\n\r\nmin #of sets is just sum(ceil2(a[i],x+1))\r\n\r\n*/\r\n\r\nconst int MOD = 1e9 + 7;\r\nconst int N = 1e5 + 5;\r\nconst int inf1 = int(1e9) + 5;\r\nconst ll inf2 = ll(1e18) + 5;\r\n\r\nvoid solve(int test_case)\r\n{\r\n    ll n; cin >> n;\r\n    vector<ll> a(n);\r\n    rep(i, n) cin >> a[i];\r\n\r\n    ll ans = inf2;\r\n\r\n    auto go = [&](ll x) {\r\n        if (x < 0) return;\r\n\r\n        ll sum = 0;\r\n\r\n        rep(i, n) {\r\n            ll boxes = ceil2(a[i], x + 1);\r\n            ll tot = boxes * (x + 1);\r\n            ll remov = tot - a[i];\r\n\r\n            if (remov > boxes) return;\r\n\r\n            sum += boxes;\r\n        }\r\n\r\n        amin(ans, sum);\r\n    };\r\n\r\n    rep1(k, sqrtl(a[0]) + 5) {\r\n        go(a[0] / k);\r\n        go(a[0] / k - 1);\r\n        go(a[0] / k + 1);\r\n    }\r\n\r\n    rep1(x, sqrtl(a[0]) + 5) {\r\n        go(x);\r\n    }\r\n\r\n    cout << ans << endl;\r\n}\r\n\r\nint main()\r\n{\r\n    fastio;\r\n\r\n    int t = 1;\r\n    // cin >> t;\r\n\r\n    rep1(i, t) {\r\n        solve(i);\r\n    }\r\n\r\n    return 0;\r\n}"
}