{
    "id": 213774425,
    "contestId": 770,
    "creationTimeSeconds": 1689338246,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 770,
        "index": "A",
        "name": "New Password",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "*special",
            "implementation"
        ]
    },
    "author": {
        "contestId": 770,
        "members": [
            {
                "handle": "ReemRefaat"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1489233600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 47,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define Friendy ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n#define ll long long\r\n#define sz size\r\n/*bool comp(pair<string,string>left,pair<string,string>right){\r\nreturn left.second<right.second;\r\n}*/\r\nll mult(ll a,ll b, ll m)\r\n{\r\n    return ((a%m)*(b%m))%m;\r\n}\r\n/*ll fastPower(ll x, ll n)\r\n{\r\n    ll res=1;\r\n    while(n>0)\r\n    {\r\n        if(n%2==1)\r\n        res*=x;\r\n        x=x*x;\r\n        n/=2;\r\n    }\r\n    return res;\r\n}*/\r\n/*bool isBinaryPalindrome(int n){\r\n    string  binary=\"\";\r\n    while(n>0){\r\n        binary+=to_string(n%2);\r\n        n/=2;\r\n    }\r\n    int l=0,r=binary.sz()-1;\r\n    while(l<r){\r\n        if(binary[l]!=binary[r])\r\n        return false;\r\n        l++;\r\n        r--;\r\n    }\r\n}*/\r\n/*void merge(int arr[],int lb,int ub){\r\n     int mid=(lb+ub)/2;\r\n    int i=lb,j=mid+1,k=lb;\r\n    int b[ub-lb+1];\r\n    while(i<=mid&&j<=ub){\r\n        if(arr[i]<arr[j])\r\n            b[k++]=arr[i++];\r\n        else\r\n            b[k++]=arr[j++];\r\n    }\r\n\r\n    while(i<=mid){\r\n    b[k++]=arr[i++];\r\n}\r\n while(j<=ub){\r\n    b[k++]=arr[j++];\r\n}\r\nfor(i=0;i<(ub-lb+1);i++)\r\narr[i]=b[i];\r\n}\r\nvoid mergesort(int arr[],int lb,int ub){\r\n\r\n        int mid=(lb+ub)/2;\r\n        if(lb>=ub)\r\n        return;\r\n\r\n        mergesort(arr,lb,mid);\r\n        mergesort(arr,mid+1,ub);\r\n        merge(arr,lb,ub);\r\n    return;\r\n}*/\r\n/*bool isPalindrome(string s){\r\n     int l=0,r=s.sz()-1;\r\n    while(l<r){\r\n        if(s[l]!=s[r])\r\n        return false;\r\n        l++;\r\n        r--;\r\n\r\n    }\r\n    return true;\r\n}*/\r\n/*bool PowOfTwo(ll n)\r\n{\r\n    return (n>0)&&((n&(n-1))==0);\r\n}*/\r\n/*bool isSqr(ll x){\r\n    ll y=sqrt(x);\r\n    return y*y==x;\r\n}*/\r\n/*bool isPrime(int n)\r\n{\r\n    if(n==0||n==1) return false;\r\n    for(int i=2;i<=sqrt(n);i++)\r\n    {\r\n        if(n%i==0)\r\n        return false;\r\n    }\r\n    return true;\r\n}*/\r\n\r\nint main()\r\n{ //Don't stop until u r proud <3\r\n\r\n Friendy\r\n int n,k; cin>>n>>k;\r\nstring s=\"abcdefghijklmnopqrstuvwxyz\";\r\nstring ans=\"\";\r\n\r\nfor(int i=0;i<n;i++){\r\n    ans+=s[i%k];\r\n}\r\ncout<<ans<<endl;\r\nreturn 0;\r\n}\r\n"
}