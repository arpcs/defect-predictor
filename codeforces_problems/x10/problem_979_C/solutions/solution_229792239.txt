{
    "id": 229792239,
    "contestId": 979,
    "creationTimeSeconds": 1698305620,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 979,
        "index": "C",
        "name": "Kuro and Walking Route",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "trees"
        ]
    },
    "author": {
        "contestId": 979,
        "members": [
            {
                "handle": "Epilogue"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1526308500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 36864000,
    "source": "#include <bits/stdc++.h>\r\n#define rep(i, l, r) for(int i = l; i <= r; i++)\r\n#define rep2(i, l, r) for(int i = l; i >= r; i--)\r\n#define fi first\r\n#define se second\r\n#define bit(i, x) (x >> i & 1)\r\nconst int N = 3e5 + 3;\r\nusing namespace std;\r\nint n, x, y;\r\nvector<int> G[N];\r\nint sz[N];\r\nint tr[N];\r\nvoid dfs(int u, int par) {\r\n    sz[u] = 1;\r\n    for(int v : G[u]) if (v != par) {\r\n        tr[v] = u;\r\n        dfs(v, u);\r\n        sz[u] += sz[v];\r\n    }\r\n}\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0); cout.tie(0);\r\n\r\n    cin >> n >> x >> y;\r\n    rep(i, 1, n - 1) {\r\n        int u, v; cin >> u >> v;\r\n        G[u].push_back(v);\r\n        G[v].push_back(u);\r\n    }\r\n\r\n    dfs(y, -1);\r\n\r\n    int xx = x;\r\n    while (tr[xx] != y) {\r\n        xx = tr[xx];\r\n    }\r\n\r\n    cout << 1ll*n*(n - 1) - 1ll*sz[x]*(n - sz[xx]);\r\n\r\n    return 0 ^ 0;\r\n}\r\n// Identify Thief O_O\r\n"
}