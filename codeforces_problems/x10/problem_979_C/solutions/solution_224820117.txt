{
    "id": 224820117,
    "contestId": 979,
    "creationTimeSeconds": 1695526425,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 979,
        "index": "C",
        "name": "Kuro and Walking Route",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "trees"
        ]
    },
    "author": {
        "contestId": 979,
        "members": [
            {
                "handle": "FallenStar_2007"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1526308500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 36659200,
    "source": "#include<bits/stdc++.h>\r\n#define endl '\\n'\r\n#define elif else if\r\nusing namespace std;\r\ntypedef long long LL;\r\ntypedef unsigned long long ULL;\r\nconst int INF = 0x3f3f3f3f, MOD = 1e9+7, N = 3e5+5, LGN = 20;\r\nconst LL INFLL = 0x3f3f3f3f3f3f3f3f;\r\nint x, y;\r\nstruct Tree{\r\n\tint n, rt, dep[N], sz[N], f[N][LGN];\r\n\tvector<int> Adj[N];\r\n\tvoid add(int u, int v){\r\n\t\tAdj[u].push_back(v);\r\n\t\tAdj[v].push_back(u);\r\n\t}\r\n\tvoid dfs(int u){\r\n\t\tsz[u] = 1;\r\n\t\tfor(auto v : Adj[u]){\r\n\t\t\tif(v != f[u][0]){\r\n\t\t\t\tdep[v] = dep[u]+1,\r\n\t\t\t\tf[v][0] = u,\r\n\t\t\t\tdfs(v);\r\n\t\t\t\tsz[u] += sz[v];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tvoid init(int r){\r\n\t\tmemset(sz, 0, sizeof(sz));\r\n\t\tmemset(dep, 0, sizeof(dep));\r\n\t\tmemset(f, 0, sizeof(f));\r\n\t\trt = r;\r\n\t\tdep[rt] = 1;\r\n\t\tf[rt][0] = rt;\r\n\t\tdfs(rt);\r\n\t\tfor(int k = 1; k < LGN; k++)\r\n\t\t\tfor(int i = 1; i <= n; i++)\r\n\t\t\t\tf[i][k] = f[f[i][k-1]][k-1];\r\n\t}\r\n\tint path(int u){\r\n\t\treturn sz[u]*(sz[u]-1);\r\n\t}\r\n\tint lca(int u, int v){\r\n\t\tif(dep[u] < dep[v]) swap(u, v);\r\n\t\tfor(int k = LGN-1; k >= 0; k--)\r\n\t\t\tif(dep[f[u][k]] >= dep[v])\r\n\t\t\t\tu = f[u][k];\r\n\t\tif(u == v)\r\n\t\t\treturn u;\r\n\t\tfor(int k = LGN-1; k >= 0; k--)\r\n\t\t\tif(f[u][k] != f[v][k])\r\n\t\t\t\tu = f[u][k],\r\n\t\t\t\tv = f[v][k];\r\n\t\treturn f[u][0];\r\n\t}\r\n\tint find(int u){\r\n\t\tfor(int k = LGN-1; k >= 0; k--)\r\n\t\t\tif(f[u][k] != rt)\r\n\t\t\t\tu = f[u][k];\r\n\t\treturn u;\r\n\t}\r\n}tr;\r\nint main(){\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0);\r\n\tint u, v;\r\n\tcin>>tr.n>>x>>y;\r\n\tfor(int i = 1; i < tr.n; i++){\r\n\t\tcin>>u>>v;\r\n\t\ttr.add(u, v);\r\n\t}\r\n\ttr.init(y);\r\n\tcout<<tr.path(y)-tr.sz[x]*(tr.sz[y]-tr.sz[tr.find(x)]);\r\n\treturn 0;\r\n}\r\n"
}