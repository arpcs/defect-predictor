{
    "id": 214715317,
    "contestId": 979,
    "creationTimeSeconds": 1689926834,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 979,
        "index": "C",
        "name": "Kuro and Walking Route",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "trees"
        ]
    },
    "author": {
        "contestId": 979,
        "members": [
            {
                "handle": "luogu_bot4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1526308500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 22016000,
    "source": "// LUOGU_RID: 116774212\n//DFS,\u7edf\u8ba1\u6811\u5927\u5c0f \r\n#include<cstdio> \r\n#include<vector>\r\n#include<cstring>\r\nusing namespace std;\r\nconst int Maxn = 3e5 + 5;\r\nint n,x,y,cnta,cntb;\r\nbool vis_y;\r\nbool vis[Maxn],visy[Maxn];\r\nvector<int>edge[Maxn];//edge[i]\u5b58\u50a8\u7684\u662f\u70b9i\u80fd\u8d70\u5230\u7684\u70b9 \r\nint DFS1(int fath)\r\n//\u7b2c\u4e00\u904dDFS\u7684\u8fc7\u7a0b\u4e2d\u7d2f\u8ba1cntb \u5e76\u6807\u8bb0y\u6240\u5728\u7684\u5b50\u6811 \r\n//\u8fd4\u56de\u503c\u662f\u4ee5fath\u4e3a\u6839\u7684\u5b50\u6811\u5927\u5c0f \r\n{\r\n\tvis[fath]=true;\r\n\tint lim=edge[fath].size();\r\n\tint cnt = 0;\r\n\tfor(int i=0;i<lim;i++){\r\n\t\tint v = edge[fath][i];\r\n\t\tif(vis[v]) continue;\r\n\t\tint temp = DFS1(v);\r\n\t\tcnt += temp;\r\n\t\tif(v==y) cnta = temp, vis_y = true;\r\n\t\tif(vis_y && fath==x)\r\n\t\t//\u5c06\u7b2c\u4e00\u5c42\u7ed3\u70b9\uff08x\u7684\u5b50\u8282\u70b9\uff09\u4e2d\u80fd\u8d70\u5230y\u7684\u90a3\u4e2a\u70b9\u6807\u8bb0visy[i]=true \r\n\t\t{\r\n\t\t\tvisy[v] = true;\r\n\t\t\tvis_y = false;\t\r\n\t\t}\r\n\t}\r\n\treturn cnt+1;\r\n } \r\nint DFS2(int fath)\r\n//\u7b2c\u4e8c\u904dDFS\u6700\u7ec8\u8fd4\u56decntb \r\n//\u4ecd\u7136\u8fd4\u56de\u5b50\u6811\u5927\u5c0f\uff0c\u4f46\u662f\u4e0d\u7edf\u8ba1\u80fd\u8d70\u5230y\u7684\u90a3\u4e2a\u5b50\u6811 \r\n{\r\n\tvis[fath]=true; \r\n\tif(visy[fath]) return 0; //\u4e0d\u7edf\u8ba1 \r\n\tint lim = edge[fath].size();\r\n\tint cnt = 0;\r\n\tfor(int i=0;i<lim;i++)\r\n\t{\r\n\t\tint v=edge[fath][i];\r\n\t\tif(vis[v]) continue;\r\n\t\tcnt += DFS2(v);\r\n\t}\r\n\treturn cnt+1; \r\n}\r\nint main()\r\n{\r\n\tscanf(\"%d%d%d\",&n,&x,&y); \r\n\tfor(int i=1;i<n;i++) {\r\n\t\tint a,b;\r\n\t\tscanf(\"%d%d\",&a,&b);\r\n\t\t//bidirectional \r\n\t\tedge[b].push_back(a);\r\n\t\tedge[a].push_back(b);\r\n\t}\r\n\tcnta = cntb = 0;\r\n\tvis_y = false;\r\n\tmemset(vis,0,sizeof(vis));\r\n\t//\u4ee5x\u4e3a\u6811\u6839\u904d\u5386\u6574\u68f5\u6811 \r\n\tDFS1(x);\r\n\tmemset(vis,0,sizeof(vis));\r\n\t//\u7edf\u8ba1\u6574\u68f5\u6811\u7684\u5927\u5c0f\uff0c\u9664\u4e86\u80fd\u8d70\u5230y\u7684\u90a3\u4e2a\u5206\u652f \r\n\tcntb = DFS2(x); \r\n//\tprintf(\"cnta=%d cntb=%d\\n\",cnta,cntb);\r\n\tprintf(\"%lld\",(long long)n*(n-1) - (long long)cnta*cntb);\r\n\treturn 0;\r\n}"
}