{
    "id": 227440067,
    "contestId": 979,
    "creationTimeSeconds": 1696874643,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 979,
        "index": "C",
        "name": "Kuro and Walking Route",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "trees"
        ]
    },
    "author": {
        "contestId": 979,
        "members": [
            {
                "handle": "xpact_chaos"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1526308500
    },
    "programmingLanguage": "GNU C11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nconst int MAXN = 3e5;\r\n\r\nint n, m, u, v, x, y, sub_size[MAXN + 5];\r\nbool vis[MAXN + 5], chk_sub[MAXN + 5];\r\nvector<int> adj[MAXN + 5];\r\n\r\nint DFS(int u)\r\n{\r\n    vis[u] = true; sub_size[u] = 1;\r\n    if (u == x)\r\n        chk_sub[u] = true;\r\n    else chk_sub[u] = false;\r\n    for (int v: adj[u])\r\n        if (!vis[v])\r\n        {\r\n            sub_size[u] += DFS(v);\r\n            chk_sub[u] |= chk_sub[v];\r\n        }\r\n    return sub_size[u];\r\n}\r\n\r\nint main()\r\n{\r\n    scanf(\"%d%d%d\", &n, &x, &y);\r\n    m = n - 1;\r\n    while (m--)\r\n    {\r\n        scanf(\"%d%d\", &u, &v);\r\n        adj[u].push_back(v);\r\n        adj[v].push_back(u);\r\n    }\r\n    DFS(y);\r\n\r\n    long long fin;\r\n    for (int v: adj[y])\r\n        if (chk_sub[v])\r\n        {\r\n            fin = sub_size[y] - sub_size[v];\r\n            break;\r\n        }\r\n\r\n    printf(\"%I64d\", 1LL * n * (n - 1) - fin * sub_size[x]);\r\n    return 0;\r\n}"
}