{
    "id": 218476470,
    "contestId": 979,
    "creationTimeSeconds": 1691838942,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 979,
        "index": "C",
        "name": "Kuro and Walking Route",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "trees"
        ]
    },
    "author": {
        "contestId": 979,
        "members": [
            {
                "handle": "Aglatalha"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1526308500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 217,
    "memoryConsumedBytes": 33689600,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n#define int long long\r\n#define pii pair<int,int>\r\n#define sz(x) x.size()\r\n#define bg begin\r\n#define vi vector<int>\r\n#define endl '\\n'\r\n#define vvi vector<vi> \r\n#define vp vector<pii>\r\n#define ppi pair<pii,int>\r\n#define triple tuple<int,int,int>\r\n#define ppp pair<pii,pii>\r\n#define pip pair<int,pii>\r\n#define vpp vector<ppi>\r\n#define sp << \" \" << \r\n#define ff first\r\n#define ss second\r\n#define F(xxx,yyy) for (int xxx=1;xxx<=yyy;++xxx)\r\n#define pb push_back\r\n#define ordered_set tree<int, null_type, greater<int>, rb_tree_tag, tree_order_statistics_node_update>\r\nconst int inf = 2e18;\r\nconst int N = 5e5+1;\r\nconst int MOD = 1e9+7;\r\nvoid setIO(string name) {\r\n\tfreopen((name + \".in\").c_str(), \"r\", stdin);\r\n\tfreopen((name + \".out\").c_str(), \"w\", stdout);\r\n}\r\nint n,x,y;\r\nvi edges[N],sub(N),tin(N),tout(N);\r\nint t = 1;\r\nint dfs(int node,int par) {\r\n    sub[node] = 1;\r\n    tin[node] = t++;\r\n    for (auto nb : edges[node]) {\r\n        if (nb ^ par) sub[node]+=dfs(nb,node);\r\n    }\r\n    tout[node] = t++;\r\n    return sub[node];\r\n}\r\nbool is_ancestor(int x,int y) {\r\n    return tin[x]<=tin[y] && tout[x]>=tout[y];\r\n}\r\nvoid solve() {\r\n    //setIO(\"chickens\")\r\n    cin >> n >> x >> y;\r\n    F(i,n-1){\r\n        int u,v;\r\n        cin >> u >> v;\r\n        edges[u].pb(v);\r\n        edges[v].pb(u);\r\n    }\r\n    dfs(1,1);\r\n    int ans;\r\n    int fl = 0;\r\n    if (!is_ancestor(x,y) && !is_ancestor(y,x)) {\r\n        ans = n*(n-1)-sub[x]*sub[y];\r\n    }\r\n    else if (is_ancestor(y,x)) swap(x,y),fl = 1;\r\n    if (is_ancestor(x,y) || fl){\r\n        int c;\r\n        for (auto nb : edges[x]) {\r\n            if (is_ancestor(nb,y)) {\r\n                c = nb;\r\n                break;\r\n            }\r\n        }\r\n        ans = n*(n-1)-(sub[x]-sub[c])*sub[y];\r\n    }\r\n    cout << ans << endl;\r\n}  \r\n \r\n \r\n \r\nsigned main() { \r\n\tios_base::sync_with_stdio(0);cin.tie(0);\r\n    #ifdef Local\r\n        freopen(\"input.in \", \"r\", stdin);\r\n        freopen(\"input.out\", \"w\", stdout);  \r\n    #endif\r\n    int t = 1;\r\n    //cin >> t;\r\n    while (t--) solve();\r\n}"
}