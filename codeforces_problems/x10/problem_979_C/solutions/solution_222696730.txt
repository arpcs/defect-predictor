{
    "id": 222696730,
    "contestId": 979,
    "creationTimeSeconds": 1694338040,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 979,
        "index": "C",
        "name": "Kuro and Walking Route",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "trees"
        ]
    },
    "author": {
        "contestId": 979,
        "members": [
            {
                "handle": "Son"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1526308500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 18227200,
    "source": "#include <cstdio>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <cstring>\r\nusing namespace std;\r\n#define LL long long\r\n\r\nint n,x,y;\r\nvector < int > E[300005];\r\n\r\nint dfs_count(int u, int p ){\r\n    int ans = 1;\r\n    for ( int v : E[u] ){\r\n        if ( v==p) continue;\r\n        ans += dfs_count(v,u);\r\n    }\r\n    return ans;\r\n}\r\n\r\nint dfs( int u , int p, int e ){\r\n    if ( u == e ) return true;\r\n\r\n    for ( int v : E[u] ){\r\n        if ( v == p ) continue;\r\n        if ( dfs(v,u,e) ) return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nint main(){\r\n\r\n    scanf(\"%d%d%d\",&n,&x,&y);\r\n    for ( int i = 1; i < n; i++ ){\r\n        int u , v;\r\n        scanf(\"%d%d\",&u,&v);\r\n        E[u].push_back(v);\r\n        E[v].push_back(u);\r\n    }\r\n\r\n    int opx = 0, opy = 0;\r\n    for ( int v : E[x] ){\r\n        if ( dfs(v,x,y) ) {\r\n            opx = v;\r\n            break;\r\n        }\r\n    }\r\n\r\n    for ( int v : E[y] ){\r\n        if ( dfs(v,y,x) ){\r\n            opy = v;\r\n            break;\r\n        }\r\n    }\r\n\r\n    int cntx = 0,cnty = 0;\r\n    for ( int v : E[x] ){\r\n        if ( v != opx ) cntx += dfs_count(v,x);\r\n    }\r\n    for ( int v : E[y] ){\r\n        if ( v != opy ) cnty += dfs_count(v,y);\r\n    }\r\n\r\n    printf(\"%lld\\n\",(n * 1LL * (n-1)) - (cntx + 1) * 1LL * (cnty + 1));\r\n    return 0;\r\n}"
}