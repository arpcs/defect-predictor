{
    "id": 215265733,
    "contestId": 979,
    "creationTimeSeconds": 1690140563,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 979,
        "index": "C",
        "name": "Kuro and Walking Route",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "trees"
        ]
    },
    "author": {
        "contestId": 979,
        "members": [
            {
                "handle": "_3bdo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1526308500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 217,
    "memoryConsumedBytes": 22323200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 3e5 + 1;\r\nvector <int> tree[N];\r\nint s[N], s2[N];\r\nint n, x, y;\r\nint dfs(int node, int parent, int sz[])\r\n{\r\n     int res = 1;\r\n     for (auto child : tree[node]) \r\n     {\r\n          if (child == parent) continue;\r\n          res += dfs(child, node, sz);\r\n     }\r\n     return sz[node] = res;\r\n}\r\nint main()\r\n{\r\n     ios_base::sync_with_stdio(NULL);\r\n     cin.tie(NULL); cout.tie(NULL);\r\n\r\n     cin >> n >> x >> y;\r\n     for (int i = 1; i < n; i++)\r\n     {\r\n          int u, v;\r\n          cin >> u >> v;\r\n          tree[u].push_back(v);\r\n          tree[v].push_back(u);\r\n     }\r\n     dfs(x, 0, s);\r\n     dfs(y, 0, s2);\r\n     long long ans = 1ll * n * (n - 1);\r\n     ans -= 1ll * s[y] * s2[x];\r\n     cout << ans;\r\n}"
}