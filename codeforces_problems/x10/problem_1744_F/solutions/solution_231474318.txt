{
    "id": 231474318,
    "contestId": 1744,
    "creationTimeSeconds": 1699194019,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1744,
        "index": "F",
        "name": "MEX vs MED",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1744,
        "members": [
            {
                "handle": "_Traniac_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1665930900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define endl                \"\\n\"\r\n#define read(v)              for(auto &x: v) cin>>x  \r\n#define all(x)              (x).begin(), (x).end() \r\n#define fast_io             ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\r\n#define file_io             freopen(\"input.txt\", \"r+\", stdin);freopen(\"output.txt\", \"w+\", stdout);\r\n#define int                 long long\r\n#define ld                  long double\r\n#define printv(v)           for(int i=0;i<v.size();i++){cout<<v[i]<<\" \";}cout<<endl; \r\nvoid google(int t) {cout << \"Case #\" << t << \": \";}\r\nint bpow(int base,int power){int res=1;while(power){if(power&1){res *= base;power--;}else{base *= base;power /=2;}}return res;}\r\n\r\n\r\nvoid solve(){\r\n\r\n    int n;\r\n    cin>>n;\r\n    vector<int>v(n);\r\n    read(v);\r\n\r\n\r\n    vector<int>vt(n+1);\r\n    for(int i=0;i<n;i++){\r\n        vt[v[i]] = i;\r\n    }\r\n\r\n    \r\n    int num = 0;\r\n    int ind1 = vt[0];\r\n    int ind2 = vt[0];\r\n    vector<bool>vp(n+1,0);\r\n    vp[0] = 1;\r\n\r\n\r\n    int ans = 0;\r\n    while(num<n){\r\n        int sz = ind2-ind1+1;\r\n        int p = sz/2;\r\n        if((sz&1)==0)p--;\r\n\r\n        if(num>=p){\r\n\r\n      \r\n            int x = (num+1)-(sz-(num+1));\r\n            int left,right;\r\n\r\n            if((num+1)==n){\r\n                left = 0;\r\n                right = 0;\r\n            }else{\r\n                if(vt[num+1]<ind1){\r\n                    left = ind1-vt[num+1]-1;\r\n                    right = n-1-ind2;\r\n                }else{\r\n                    left = ind1;\r\n                    right = vt[num+1]-ind2-1;\r\n                }\r\n            }\r\n\r\n             \r\n            // cout<<ind1<<\" \"<<ind2<<\" \"<<x<<endl; \r\n            // cout<<left<<\" \"<<right<<endl;\r\n\r\n            if(left>right)swap(left,right);\r\n\r\n\r\n            if(x>right){\r\n\r\n                \r\n                int t = x-right;\r\n                int l = right+1;\r\n                int l2 = left+1;\r\n                int mn = min(l2,t);\r\n\r\n                // cout<<mn<<endl;\r\n\r\n                ans += (l*mn);\r\n\r\n                l2 -= mn;\r\n\r\n                if(l2>0){\r\n                    l2 = min(l2,l);\r\n                    int p1 = (l*l2)-((l*(l2-1))/2);\r\n                    ans += p1;   \r\n\r\n                }\r\n\r\n\r\n            }else{\r\n                int l = x+1;\r\n                int l2 = min(left+1,l);\r\n                int p1 = (l*l2)-((l*(l2-1))/2);\r\n                ans += p1;                \r\n            }\r\n\r\n           \r\n            // cout<<ans<<endl<<endl;\r\n        }\r\n\r\n        if((num+1)==n)break;\r\n        if(vt[num+1]<ind1){\r\n           for(int i=vt[num+1];i<ind1;i++){\r\n               vp[v[i]] = 1;\r\n           }\r\n           ind1 = vt[num+1];\r\n        }else{\r\n           for(int i=ind2+1;i<=vt[num+1];i++){\r\n              vp[v[i]] = 1; \r\n           } \r\n           ind2 = vt[num+1];\r\n        }\r\n\r\n        while((num+1)<n and vp[num+1]){\r\n            num++;\r\n        }\r\n\r\n    }\r\n\r\n    cout<<ans<<endl;\r\n   \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nint32_t main(){\r\n    fast_io;\r\n    \r\n    int q;\r\n    cin>>q;\r\n    while(q--){\r\n        solve();\r\n    \r\n    }\r\n\r\n    return 0;\r\n}"
}