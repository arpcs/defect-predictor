{
    "id": 231382281,
    "contestId": 1744,
    "creationTimeSeconds": 1699125109,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1744,
        "index": "F",
        "name": "MEX vs MED",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1744,
        "members": [
            {
                "handle": "KingOfHababeesh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1665930900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 31,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 9625600,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n#define int long long\r\n#define ll long long\r\n#define F first\r\n#define S second\r\n#define endl '\\n'\r\n#define all(x) x.begin() , x.end()\r\n#define FIO ios::sync_with_stdio(0);cin.tie(0);cout.tie(0)\r\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\r\n\r\nconst long long mod = 1e9+7 , Inf = LLONG_MAX ;\r\nconst int N = 300005 , inf = INT_MAX ;\r\nint mvi[] = {1 , -1 , 0 , 0 , 1 , 1 , -1 , -1 } ;\r\nint mvj[] = {0 , 0 , 1 , -1 , 1 , -1 , 1 , -1 } ;\r\n\r\nint a[N] , pmin[N] , pmax[N] , idx[N] ;\r\n\r\nint32_t main() { FIO ;\r\n\r\n    int t ; cin >> t ;\r\n    while ( t-- ) {\r\n        int n ; cin >> n ;\r\n        for ( int i = 1 ; i <= n ; i ++ ) cin >> a[i] , idx[a[i]] = i ;\r\n        pmin[0] = idx[0] ; pmax[0] = idx[0] ;\r\n        for ( int i = 1 ; i < n ; i ++ ) pmin[i] = min(pmin[i-1] , idx[i]) , pmax[i] = max(pmax[i-1] , idx[i]) ;\r\n        int ans = 0 ;\r\n        for ( int i = 1 ; i <= n ; i ++ ) {\r\n            int req = (i+1)/2-1 ;\r\n            int l = pmin[req] , r = pmax[req] ;\r\n            if ( r-l+1 > i ) continue ;\r\n            int still = i - (r-l+1) ;\r\n            int a = min(still , l-1) , b = min(still , n-r) ;\r\n            //cout << l << ' ' << r << ' ' << still << ' ' << a << ' ' << b << endl ;\r\n            a = a+1 , b = still-b+1 ;\r\n            ans += (max(0LL , a-b+1)) ;\r\n        }\r\n        cout << ans << endl ;\r\n    }\r\n\r\n    return 0 ;\r\n}\r\n"
}