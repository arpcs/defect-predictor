{
    "id": 228161330,
    "contestId": 1367,
    "creationTimeSeconds": 1697283321,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1367,
        "index": "E",
        "name": "Necklace Assembly",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "brute force",
            "dfs and similar",
            "dp",
            "graphs",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1367,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1592318100
    },
    "programmingLanguage": "Clang++20 Diagnostics",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 5222400,
    "source": "/*************************************************\nNote:\n*************************************************/\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <stdio.h>\n#include <iostream>\n#include <vector>\n#include <iomanip>\n#include <string.h>\n#include <algorithm>\n#include <cmath>\n#include <cstring>\n#define ll long long\n#define ull unsigned long long\nusing namespace std;\nconst int N = 1e5 + 10;\nconst int INF = 0x3f3f3f3f;\ninline int read()\n{\n    int s = 0, w = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9')\n    {\n        if (ch == '-')\n            w = -1;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9')\n        s = s * 10 + ch - '0', ch = getchar();\n    return s * w;\n}\nint a[100];\nint gcd(int x, int y)\n{\n    return y ? gcd(y, x % y) : x;\n}\nint main()\n{\n    int t = read();\n    while (t--)\n    {\n        memset(a, 0, sizeof(a));\n        int n = read(), k = read(), ans = 0;\n        string s;\n        cin >> s;\n        s = \" \" + s;\n        for (int i = 1; i <= n; i++)\n            a[s[i] - 'a']++;\n        for (int i = 1; i <= n; i++)\n        {\n            int sum = 0, len = i / gcd(i, k);\n            for (int i = 0; i < 26; i++)\n                sum += a[i] / len;\n            if (sum >= gcd(i, k))\n                ans = max(ans, i);\n        }\n        cout << ans << endl;\n    }\n    return 0;\n}\n\t\t   \t    \t\t  \t\t\t\t  \t\t \t\t \t \t\t"
}