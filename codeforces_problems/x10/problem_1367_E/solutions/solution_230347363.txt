{
    "id": 230347363,
    "contestId": 1367,
    "creationTimeSeconds": 1698573373,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1367,
        "index": "E",
        "name": "Necklace Assembly",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "brute force",
            "dfs and similar",
            "dp",
            "graphs",
            "greedy",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1367,
        "members": [
            {
                "handle": "MiinaMagdy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1592318100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/*\r\n+---------------------------------------------+\r\n|                                             |\r\n|       \u00a9 26/10/2023 (17:17) MinaMagdy        |\r\n|                                             |\r\n+---------------------------------------------+\r\n*/\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n#define ordered_set tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>\r\n#define multi_ordered_set tree<int, null_type, less_equal<int>, rb_tree_tag, tree_order_statistics_node_update>\r\n#define endl \"\\n\"\r\n#define MOD 1000000007\r\n#define INF 2000000000\r\n#define all(s) s.begin(), s.end()\r\n#define rall(s) s.rbegin(), s.rend()\r\n#define sz(x) int(x.size())\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef unsigned long long ull;\r\n\r\nvoid solve() {\r\n    int n, k;\r\n    cin >> n >> k;\r\n    string s;\r\n    cin >> s;\r\n    vector<int> freq(26, 0);\r\n    for (auto& c : s)\r\n        freq[c - 'a']++;\r\n    sort(rall(freq));\r\n    int ans = 0;\r\n    for (int d = 1; d * d <= k; d++) {\r\n        if (k % d == 0) {\r\n            for (auto& div : {d, k / d}) {\r\n                auto good = [&](ll x) {\r\n                    int sum = 0;\r\n                    for (int i = 0; i < 26; i++)\r\n                        sum += freq[i] / x;\r\n                    return sum >= div;\r\n                };\r\n                int l = 1, r = 1, best = 0;\r\n                while (good(r)) r *= 2;\r\n                while (l <= r) {\r\n                    ll mid = (l + r) / 2;\r\n                    (good(mid) ? l = mid + 1, best = mid * div : r = mid - 1);\r\n                }\r\n                ans = max(ans, best);\r\n            }\r\n        }\r\n    }\r\n    cout << ans << endl;\r\n}\r\n\r\nint main(void) {\r\n    ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);\r\n    int testcase = 1;\r\n    cin >> testcase;\r\n    while (testcase--)\r\n        solve();\r\n    return 0;\r\n}"
}