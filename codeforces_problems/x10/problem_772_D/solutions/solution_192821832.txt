{
    "id": 192821832,
    "contestId": 772,
    "creationTimeSeconds": 1675922682,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 772,
        "index": "D",
        "name": "Varying Kibibits",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2700,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    "author": {
        "contestId": 772,
        "members": [
            {
                "handle": "Hovery"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1492356900
    },
    "programmingLanguage": "Python 3",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "# LUOGU_RID: 101759075\n#include <bits/stdc++.h>\r\n\r\ntemplate<unsigned P>\r\nclass modint {\r\n  static_assert(1 <= P, \"P must be a positive integer\");\r\n\r\n  using mint = modint<P>;\r\n\r\nprotected:\r\n  unsigned v;\r\n\r\npublic:\r\n  constexpr modint() : v() {}\r\n\r\n  template<typename T,\r\n           typename std::enable_if<std::is_integral<T>::value &&\r\n                                       std::is_signed<T>::value,\r\n                                   bool>::type = true>\r\n  constexpr modint(T t_v) : v() {\r\n    long long tmp = t_v % static_cast<long long>(P);\r\n    if (tmp < 0) {\r\n      tmp += P;\r\n    }\r\n    v = tmp;\r\n  }\r\n\r\n  template<typename T,\r\n           typename std::enable_if<std::is_integral<T>::value &&\r\n                                       std::is_unsigned<T>::value,\r\n                                   bool>::type = true>\r\n  constexpr modint(T t_v) : v() {\r\n    v = t_v % P;\r\n  }\r\n\r\n  constexpr unsigned val() const {\r\n    return v;\r\n  }\r\n\r\n  static constexpr unsigned mod() {\r\n    return P;\r\n  }\r\n\r\n  static constexpr mint raw(unsigned v) {\r\n    mint res;\r\n    res.v = v;\r\n    return res;\r\n  }\r\n\r\n  constexpr mint &operator+=(const mint &rhs) {\r\n    v < P - rhs.v ? v += rhs.v : v -= P - rhs.v;\r\n    return *this;\r\n  }\r\n\r\n  constexpr mint &operator++() {\r\n    v + 1 < P ? ++v : v = 0;\r\n    return *this;\r\n  }\r\n\r\n  constexpr mint operator++(int) {\r\n    mint tmp = *this;\r\n    v + 1 < P ? ++v : v = 0;\r\n    return tmp;\r\n  }\r\n\r\n  constexpr mint &operator-=(const mint &rhs) {\r\n    v < rhs.v ? v += P - rhs.v : v -= rhs.v;\r\n    return *this;\r\n  }\r\n\r\n  constexpr mint &operator--() {\r\n    v ? --v : v = P - 1;\r\n    return *this;\r\n  }\r\n  \r\n  constexpr mint operator--(int) {\r\n    mint tmp = *this;\r\n    v ? --v : v = P - 1;\r\n    return tmp;\r\n  }\r\n\r\n  constexpr mint operator-() const {\r\n    mint res;\r\n    res.v = v ? P - v : 0;\r\n    return res;\r\n  }\r\n\r\n  constexpr mint &operator*=(const mint &rhs) {\r\n    v = static_cast<unsigned long long>(v) * rhs.v % P;\r\n    return *this;\r\n  }\r\n\r\n  constexpr mint pow(unsigned long long b) const {\r\n    mint a(*this), s(1);\r\n    for (; b; b >>= 1) {\r\n      if (b & 1) {\r\n        s *= a;\r\n      }\r\n      a *= a;\r\n    }\r\n    return s;\r\n  }\r\n\r\n  constexpr mint inv() const {\r\n    return pow(P - 2);\r\n  }\r\n\r\n  constexpr friend mint operator+(const mint &lhs, const mint &rhs) {\r\n    return mint(lhs) += rhs;\r\n  }                                                                              \r\n                                                                                 \r\n  constexpr friend mint operator-(const mint &lhs, const mint &rhs) {            \r\n    return mint(lhs) -= rhs;                                                     \r\n  }\r\n\r\n  constexpr friend mint operator*(const mint &lhs, const mint &rhs) {\r\n    return mint(lhs) *= rhs;\r\n  }\r\n\r\n  constexpr friend bool operator==(const mint &lhs, const mint &rhs) {\r\n    return lhs.v == rhs.v;\r\n  }\r\n\r\n  constexpr friend bool operator!=(const mint &lhs, const mint &rhs) {\r\n    return lhs.v != rhs.v;\r\n  }\r\n\r\n  friend std::istream &operator>>(std::istream &in, mint &x) {\r\n    return in >> x.v;\r\n  }\r\n\r\n  friend std::ostream &operator<<(std::ostream &out, const mint &x) {\r\n    return out << x.v;\r\n  }\r\n};\r\n\r\nusing mint = modint<1000000007>;\r\n\r\nmint pow2[1000001];\r\n\r\nstruct info { \r\n  mint s1, s2;\r\n  int s3;\r\n  info (int x = 0) : s1(mint(x) * x), s2(x), s3(x > 0) {}\r\n  info (mint s1, mint s2, int s3) : s1(s1), s2(s2), s3(s3) {}\r\n\r\n  friend info operator + (const info &a, const info &b) {\r\n    return info(a.s1 * pow2[b.s3] + b.s1 * pow2[a.s3] + 2 * a.s2 * b.s2, a.s2 * pow2[b.s3] + b.s2 * pow2[a.s3], a.s3 + b.s3);\r\n  }\r\n\r\n  info &operator += (const info &rhs) {\r\n    *this = *this + rhs;\r\n    return *this;\r\n  }\r\n};\r\n\r\nconstexpr int lim = 1e6;\r\n\r\nsigned main() {\r\n  std::ios::sync_with_stdio(false);\r\n  std::cin.tie(nullptr);\r\n\r\n  int n;\r\n  std::cin >> n;\r\n  \r\n  pow2[0] = 1;\r\n  for (int i = 1; i <= n; ++i) {\r\n    pow2[i] = pow2[i - 1] * 2;\r\n  }\r\n\r\n  std::vector<info> f(lim);\r\n  for (int i = 1; i <= n; ++i) {\r\n    int x;\r\n    std::cin >> x;\r\n    f[x] += x;\r\n  }\r\n\r\n  for (int i = 0, base = 1; i < 6; ++i, base *= 10) {\r\n    for (int j = lim - 1; ~j; --j) {\r\n      if (j / base % 10 < 9) {\r\n        f[j] += f[j + base];\r\n      }\r\n    }\r\n  }\r\n\r\n  std::vector<mint> g(lim);\r\n  for (int i = 0; i < lim; ++i) {\r\n    g[i] = f[i].s1;\r\n  }\r\n\r\n  for (int i = 0, base = 1; i < 6; ++i, base *= 10) {\r\n    for (int j = 0; j < lim; ++j) {\r\n      if (j / base % 10 < 9) {\r\n        g[j] -= g[j + base];\r\n      }\r\n    }\r\n  }\r\n\r\n  long long res = 0;\r\n  for (int i = 0; i < lim; ++i) {\r\n    res ^= 1ll * i * g[i].val();\r\n  }\r\n\r\n  std::cout << res << '\\n';\r\n}"
}