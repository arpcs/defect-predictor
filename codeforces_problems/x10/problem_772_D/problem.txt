{
    "contestId": 772,
    "index": "D",
    "name": "Varying Kibibits",
    "type": "PROGRAMMING",
    "points": 2250.0,
    "rating": 2700,
    "tags": [
        "bitmasks",
        "dp"
    ],
    "desc": {
        "title": "D. Varying Kibibits",
        "statement": "<p>You are given <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span>. Denote this list of integers as <span class=\"tex-span\"><i>T</i></span>.</p><p>Let <span class=\"tex-span\"><i>f</i>(<i>L</i>)</span> be a function that takes in a non-empty list of integers <span class=\"tex-span\"><i>L</i></span>.</p><p>The function will output another integer as follows: </p><ul> <li> First, all integers in <span class=\"tex-span\"><i>L</i></span> are padded with leading zeros so they are all the same length as the maximum length number in <span class=\"tex-span\"><i>L</i></span>. </li><li> We will construct a string where the <span class=\"tex-span\"><i>i</i></span>-th character is the minimum of the <span class=\"tex-span\"><i>i</i></span>-th character in padded input numbers. </li><li> The output is the number representing the string interpreted in base 10. </li></ul><p>For example <span class=\"tex-span\"><i>f</i>(10,\u20099)\u2009=\u20090</span>, <span class=\"tex-span\"><i>f</i>(123,\u2009321)\u2009=\u2009121</span>, <span class=\"tex-span\"><i>f</i>(530,\u2009932,\u200981)\u2009=\u200930</span>.</p><p>Define the function </p><center class=\"tex-equation\"><img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/34a509f74cbc53a043710b4c2baed78d6aeb4c3e.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></center> Here, <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/0241ed64f7f754d714cf9b2cef41ae3ac7b2cb35.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> denotes a subsequence.<p>In other words, <span class=\"tex-span\"><i>G</i>(<i>x</i>)</span> is the sum of squares of sum of elements of nonempty subsequences of <span class=\"tex-span\"><i>T</i></span> that evaluate to <span class=\"tex-span\"><i>x</i></span> when plugged into <span class=\"tex-span\"><i>f</i></span> modulo <span class=\"tex-span\">1\u2009000\u2009000\u2009007</span>, then multiplied by <span class=\"tex-span\"><i>x</i></span>. The last multiplication is not modded. </p><p>You would like to compute <span class=\"tex-span\"><i>G</i>(0),\u2009<i>G</i>(1),\u2009...,\u2009<i>G</i>(999\u2009999)</span>. To reduce the output size, print the value <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/8758e4ee150415656efb78a88beae1c6d7f1c5bb.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>, where <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/c4b7092c0f7ce6535f2574569c98f7b3c2fe2c5f.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> denotes the bitwise XOR operator.</p>",
        "inputSpecification": "<p>The first line contains the integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u20091\u2009000\u2009000</span>)\u00a0\u2014 the size of list <span class=\"tex-span\"><i>T</i></span>.</p><p>The next line contains <span class=\"tex-span\"><i>n</i></span> space-separated integers, <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub>,\u2009<i>a</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">0\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009999\u2009999</span>)\u00a0\u2014 the elements of the list. </p>",
        "outputSpecification": "<p>Output a single integer, the answer to the problem.</p>",
        "samples": [
            {
                "input": "3<br/>123 321 555<br/>",
                "output": "292711924<br/>"
            },
            {
                "input": "1<br/>999999<br/>",
                "output": "997992010006992<br/>"
            },
            {
                "input": "10<br/>1 1 1 1 1 1 1 1 1 1<br/>",
                "output": "28160<br/>"
            }
        ],
        "note": "<p>For the first sample, the nonzero values of <span class=\"tex-span\"><i>G</i></span> are <span class=\"tex-span\"><i>G</i>(121)\u2009=\u2009144\u2009611\u2009577</span>, <span class=\"tex-span\"><i>G</i>(123)\u2009=\u200958\u2009401\u2009999</span>, <span class=\"tex-span\"><i>G</i>(321)\u2009=\u2009279\u2009403\u2009857</span>, <span class=\"tex-span\"><i>G</i>(555)\u2009=\u2009170\u2009953\u2009875</span>. The bitwise XOR of these numbers is equal to <span class=\"tex-span\">292\u2009711\u2009924</span>.</p><p>For example, <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/53a1c46c7cd2d3d56e89fe99af6328601758b327.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>, since the subsequences <span class=\"tex-span\">[123]</span> and <span class=\"tex-span\">[123,\u2009555]</span> evaluate to <span class=\"tex-span\">123</span> when plugged into <span class=\"tex-span\"><i>f</i></span>.</p><p>For the second sample, we have <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/330ab8a9387bb33a82877190f4439f4e9ccd8e92.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></p><p>For the last sample, we have <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/0e0eeb7662af22bf04ea1a2ea669b162d53ad7ba.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>, where <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/4f42013cbab8c31325f2cf28b60aa2ccc1cf89d3.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> is the binomial coefficient.</p>"
    },
    "suggested_categories": [
        "mathematics",
        "number theory",
        "algorithms",
        "dynamic programming",
        "combinatorics",
        "bitwise operations",
        "sequence processing",
        "subsequences",
        "modular arithmetic",
        "integer manipulation",
        "function theory",
        "string padding",
        "sequence interpretation",
        "problem solving",
        "coding challenges",
        "computational complexity",
        "mathematical functions",
        "arithmetic",
        "pattern matching",
        "sequence summation"
    ]
}