{
    "id": 230751332,
    "contestId": 766,
    "creationTimeSeconds": 1698798767,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 766,
        "index": "C",
        "name": "Mahmoud and a Message",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 766,
        "members": [
            {
                "handle": "tej_17"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1486487100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 307200,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\nint MOD = 1e9+7;\n\nunordered_map<int, int> dp;\nint longestSubstring = INT_MIN;\nint minSubStrings = INT_MAX;\n\nbool check(vector<int>& arr, vector<int>& freq) {\n\tint sum = 0;\n\tfor(auto x: arr) sum += x;\n\tfor(int i=0;i<26;i++) {\n\t\tif(sum > freq[i] && arr[i] > 0) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nint recurse(int idx, string& a, vector<int>& freq) {\n\t\n\tif(idx >= a.size()) {\n\t\treturn 1;\n\t}\n\tif(dp.find(idx) != dp.end()) {\n\t\treturn dp[idx];\n\t}\n\t\n\tint ans = 0;\n\tvector<int> temp(26, 0);\n\tfor(int i=idx;i<a.size();i++) {\n\t\ttemp[a[i] - 'a']++;\n\t\tif(check(temp, freq)) {\n\t\t\tint sum = 0;\n\t\t\tfor(auto x: temp) sum += x;\n\t\t\tlongestSubstring = max(longestSubstring, sum);\n\t\t\tans = (ans % MOD + recurse(i+1, a, freq) % MOD) % MOD;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn dp[idx] = ans;\n}\n\n\n\nint main() {\n\t// your code goes here\n\tint n;\n\tcin >> n;\n\tstring a;\n\tcin >> a;\n\tvector<int> freq;\n\tfor(int i=0;i<26;i++) {\n\t\tint x;\n\t\tcin >> x;\n\t\tfreq.push_back(x);\n\t}\n\tvector<int> minSize(26, 0);\n\tint curr = 0;\n\tfor(int i=0;i<a.size();i++) {\n\t\tminSize[a[i]-'a']++;\n\t\tif(!check(minSize, freq)) {\n\t\t\tfor(int j=0;j<26;j++) {\n\t\t\t\tminSize[j] = 0;\n\t\t\t}\n\t\t\tcurr++;\n\t\t\ti--;\n\t\t}\n\t}\n\tint ans = recurse(0, a, freq);\n\tcout << ans << endl;\n\tcout << longestSubstring << endl;\n\tcout << curr+1 << endl;\n\treturn 0;\n}"
}