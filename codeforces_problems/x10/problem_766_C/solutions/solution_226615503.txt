{
    "id": 226615503,
    "contestId": 766,
    "creationTimeSeconds": 1696433623,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 766,
        "index": "C",
        "name": "Mahmoud and a Message",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 766,
        "members": [
            {
                "handle": "MPG_1386"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1486487100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#include <string>\r\n#include <iostream>\r\n#include <vector>\r\n#include <set>\r\n#include <bitset>\r\n#include <map>\r\nlong long const mod = 1e9 + 7, maxn = 1e5 + 100, INF = 2e18;\r\ntypedef long long ll; \r\nusing namespace std;\r\n#define max_heap priority_queue<ll>\r\n#define min_heap priority_queue<ll, vector<ll>, greater<ll>> // size(), push(), top(), pop();\r\n\r\n// reverse (v.begin(), v.end());\r\n// sort (, , greater<type>())\r\n// stack --> pop(), top(), push(), size();\r\n// queue --> push(), pop(), size(), front(), back();\r\n// deque --> push_back(), push_front(), pop_back(), pop_front();\r\n// set --> *s.lower_bound(x)\r\n// lower_bound(v.begin(), v.end(), adad) --> iterator\r\n//__biultin_popcount(), __builtin_ctz()\r\n// stable_sort\r\n// multiset.erase(mlt.find(x));\r\n\r\n\r\n\r\n// ll gcd(ll a, ll b){\r\n//     if (b == 0)\r\n//         return a;\r\n//     return gcd(b, a % b);\r\n// }\r\n \r\n// ll lcm(ll a, ll b){\r\n//     return ((a * b) / (gcd(a, b)));\r\n// }\r\n \r\n// bool isprime(ll n){\r\n//     if (n <= 1)\r\n//         return false;\r\n//     for (ll i = 2; i < n; i++)\r\n//         if (n % i == 0)\r\n//             return false;\r\n//     return true;\r\n// }\r\n\r\n\r\n\r\nstring s;\r\nll dp[1001];\r\nll alpha[26];\r\nint main(){\r\n//ios_base::sync_with_stdio(false);\r\n//cin.tie(0);\r\n//freopen(\"input.txt\", \"r\", stdin);\r\n//freopen(\"output.txt\", \"w\", stdout);\r\n\r\nll n, j1, j2 = -INF, j3 = 0;\r\ncin >> n >> s;\r\nfor (int i = 0; i < 26; i++)\r\n    cin >> alpha[i];\r\n// j3:\r\nll cur = 0, ja = INF;\r\nfor (int i = 0; i < s.size(); i++){\r\n    if (cur + 1 <= min(ja, alpha[int(s[i]) - 97])){\r\n        cur++;\r\n        ja = min(ja, alpha[int(s[i]) - 97]);\r\n        //cout << \"P \" << i << ' ' << cur << alpha[int(s[i]) - 97] << endl; \r\n\r\n    }\r\n    else{\r\n        j3++;\r\n        cur = 1;\r\n        ja = alpha[int(s[i]) - 97];\r\n    }\r\n}\r\nj3++;\r\n//cout << j3 << endl;\r\n// j2:\r\nfor (int i = 0; i < s.size(); i++){\r\n    cur = 0;\r\n    ja = INF;\r\n    for (int j = i; j < s.size(); j++){\r\n        if (j == s.size() - 1){\r\n            j2 = max(j2, cur);\r\n            //cout << i << ' ' << cur << endl;\r\n        }\r\n        if (cur + 1 <= min(ja, alpha[int(s[j]) - 97])){\r\n            cur++;\r\n            ja = min(ja, alpha[int(s[j]) - 97]);\r\n        }\r\n\r\n        else {\r\n            //cout << i << ' ' << cur << endl;\r\n            j2 = max(j2, cur);\r\n            break;\r\n        }\r\n    }\r\n}\r\n//cout << j2 << endl;\r\n// j1 :\r\ndp[0] = 1; // bechand halat mishe i ta ye aval ro tagsim kard?\r\nfor (int i = 0; i < s.size(); i++){\r\n    ll sum = 0;\r\n    cur = 0;\r\n    ja = INF;\r\n    for (int j = i; j > -1; j--){\r\n        if (cur + 1 <= min(ja, alpha[int(s[j]) - 97])){\r\n            cur++;\r\n            ja = min(ja, alpha[int(s[j]) - 97]);\r\n            sum = (sum + dp[i - cur + 1]) % mod;\r\n            //cout << \"E \" << i + 1 << ' ' << cur << endl;\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    \r\n    dp[i + 1] = sum;\r\n    //cout << i + 1 << ' ' << dp[i + 1] << endl;\r\n}\r\ncout << dp[s.size()] << endl << j2 << endl << j3 << endl;\r\n}"
}