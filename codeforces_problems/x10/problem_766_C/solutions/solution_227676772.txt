{
    "id": 227676772,
    "contestId": 766,
    "creationTimeSeconds": 1697027808,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 766,
        "index": "C",
        "name": "Mahmoud and a Message",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 766,
        "members": [
            {
                "handle": "saintrock"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1486487100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 795,
    "memoryConsumedBytes": 9216000,
    "source": "#include <cstdio>\n#include <algorithm>\n\nconst int maxn = 1005;\nconst int mod = (int)1e9 + 7;\nconst int inf = 0x3f3f3f3f;\nchar s[maxn];\nint lim[maxn];\nint psum[26][maxn];\nbool whole[maxn][maxn];\nint way[maxn][maxn];\nint mn[maxn][maxn];\nint mx;\n\nint main () {\n    int n;\n    (void)!scanf(\"%d%s\", &n, s + 1);\n    for (int i = 0; i < 26; i++) scanf(\"%d\", &lim[i]);\n    for (int i = 0; i < 26; i++) {\n        char c = 'a' + i;\n        for (int j = 1; j <= n; j++) {\n            psum[i][j] = psum[i][j - 1] + (s[j] == c);\n        }\n    }\n    for (int len = 1; len <= n; len++) {\n        for (int l = 1, r = len; r <= n; l++, r++) {\n            whole[l][r] = true;\n            for (int i = 0; i < 26; i++) {\n                int cnt = psum[i][r] - psum[i][l - 1];\n                if (cnt && len > lim[i]) {\n                    whole[l][r] = false;\n                    break;\n                }\n            }\n            if (whole[l][r]) mx = len;\n\n            way[l][r] = whole[l][r] ? 1 : 0;\n            for (int k = l; k < r; k++) {\n                if (whole[l][k]) {\n                    way[l][r] += way[k + 1][r];\n                    way[l][r] %= mod;\n                }\n            }\n\n            if (whole[l][r]) mn[l][r] = 1;\n            else {\n                mn[l][r] = inf;\n                for (int k = l; k < r; k++) {\n                    if (whole[l][k]) {\n                        mn[l][r] = std::min(mn[l][r], 1 + mn[k + 1][r]);\n                    }\n                }\n            }\n        }\n    }\n\n    printf(\"%d\\n%d\\n%d\\n\", way[1][n], mx, mn[1][n]);\n}\n"
}