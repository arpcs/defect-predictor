{
    "id": 233383076,
    "contestId": 1689,
    "creationTimeSeconds": 1700374960,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1689,
        "index": "A",
        "name": "Lex String",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "brute force",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1689,
        "members": [
            {
                "handle": "peoplewater_but_Au"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1654878900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 512000,
    "source": "// LUOGU_RID: 135898721\n#include<iostream>\r\n#include<cstring>\r\n#include<queue>\r\n#include<set>\r\n#include<map>\r\n#include<cmath>\r\n#include<algorithm>\r\n\r\nusing namespace std;\r\n\r\n#define itn int\r\ntypedef long long ll;\r\ntypedef pair<int, int> PII;\r\ntypedef pair<ll, int> PLI;\r\ntypedef pair<int, ll> PIL;\r\ntypedef pair<ll, ll> PLL;\r\n\r\n#define x first\r\n#define y second\r\n#define sci(x) scanf(\"%d\", &x)\r\n#define scl(x) scanf(\"%lld\", &x)\r\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\r\n#define lep(i,a,b) for(int i=(a);i>=(b);i--)\r\n#define pri(x) printf(\"%d \", (x))\r\n#define prl(x) printf(\"%lld \", (x))\r\n#define pli(x) printf(\"%d\\n\", (x))\r\n#define pll(x) printf(\"%lld\\n\", (x))\r\n#define mem(a, x) memset(a, x, sizeof a)\r\n#define mep(a, x) memcpy(a, x, sizeof x)\r\n#define yes cout << \"YES\" << endl;\r\n#define no cout << \"NO\" << endl;\r\n//printf(\"case:%d %d\\n\", );\r\n\r\nconst int N = 2e5 + 10;\r\nint n, m, k, q;\r\n\r\nchar s[N], t[N];\r\n\r\nvoid solve()\r\n{\r\n    cin >> n >> m >> k;\r\n    cin >> s + 1 >> t + 1;\r\n    priority_queue<char, vector<char>, greater<char>> qa, qb;\r\n    rep(i, 1, n) qa.push(s[i]);\r\n    rep(i, 1, m) qb.push(t[i]);\r\n    int cnt1 = 0, cnt2 = 0;\r\n    while(qa.size() && qb.size())\r\n    {\r\n        char a = qa.top();\r\n        char b = qb.top();\r\n        if(a < b)\r\n        {\r\n            if(cnt1 == k) \r\n            {\r\n                printf(\"%c\", b); qb.pop();\r\n                cnt1 = 0, cnt2++;\r\n            }\r\n            else\r\n            {\r\n                printf(\"%c\", a); qa.pop();\r\n                cnt1++, cnt2 = 0;\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(cnt2 == k) \r\n            {\r\n                printf(\"%c\", a); qa.pop();\r\n                cnt1++, cnt2 = 0;\r\n            }\r\n            else\r\n            {\r\n                printf(\"%c\", b); qb.pop();\r\n                cnt1 = 0, cnt2++;\r\n            }\r\n        }\r\n    }\r\n    \r\n    puts(\"\");\r\n}\r\n\r\nint main() {\r\n    int T; cin >> T;\r\n    while (T--)\r\n    {\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}