{
    "id": 184323573,
    "contestId": 593,
    "creationTimeSeconds": 1670500595,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 593,
        "index": "D",
        "name": "Happy Tree Party",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2400,
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "math",
            "trees"
        ]
    },
    "author": {
        "contestId": 593,
        "members": [
            {
                "handle": "SummerSky"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1446655500
    },
    "programmingLanguage": "MS C++ 2017",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <stdlib.h>\r\n#include <time.h>\r\n#include <vector>\r\n#include <math.h>\r\n#include <algorithm>\r\n#include <sstream>\r\n#include <iostream>\r\n#include <fstream>\r\n#include <string>\r\n#include <string.h>\r\n#include <map>\r\n#include <stack>\r\n#include <queue>\r\n#include <utility>\r\n#include <set>\r\n \r\nusing namespace std;\r\n \r\ntypedef long long int ll;\r\n \r\nconst int M=200000+10;\r\n \r\nstruct EDGE{\r\n\tint u;\r\n\tint v;\r\n\tll w;\r\n}edge[M];\r\n \r\nvector<EDGE> adj[M];\r\n \r\nint pa[M];\r\nint fpa(int x){\r\n\treturn pa[x] = (x == pa[x] ? x : fpa(pa[x]));}map<pair<int,int>, ll> mp;int par[M]; int vis[M];void dfs(int cur, int p){\r\n\tvis[cur] = 1;\r\n\tpar[cur] = p;\r\n\tfor (int i = 0; i < adj[cur].size(); i++){\r\n\t\tEDGE e = adj[cur][i];\r\n\t\tint nxt = e.v;\r\n\t\tif (nxt == cur){\r\n\t\t\tnxt = e.u;\r\n\t\t}\r\n\t\tif (nxt != p){\r\n\t\t\tdfs(nxt, cur);\r\n\t\t}\r\n\t}\r\n}\r\n int thr = 32;\r\nvector<pair<int, ll> > vr[2];void solve(int u, int bit){\r\n\tvr[bit].clear();\r\n\tint cur = u;\r\n\tfor (int i = 0; i < thr; i++){\r\n\t\tint pu = fpa(u);\r\n\t\tint paru = par[pu];\r\n\t\tvr[bit].push_back(make_pair(pu, mp[make_pair(pu, paru)]));\r\n\t\tif (pu == 1){\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tu = paru;\r\n\t\t\r\n\t}} int main(){\t\tint n,m; cin>>n>>m;\tfor (int i = 1; i <= n - 1; i++){\r\n\t\t//cin>>edge[i].u>>edge[i].v>>edge[i].w;\r\n\t\tscanf(\"%d %d\", &edge[i].u, &edge[i].v);\r\n\t\tcin>>edge[i].w;\r\n\t\tadj[edge[i].u].push_back(edge[i]);\r\n\t\tadj[edge[i].v].push_back(edge[i]);\r\n\t\tmp[make_pair(edge[i].u, edge[i].v)] = edge[i].w;\r\n\t\tmp[make_pair(edge[i].v, edge[i].u)] = edge[i].w;\r\n\t}\t\r\n\tdfs(1, 0);\t\r\n\tfor (int i = 0; i < M; i++){\r\n\t\tvis[i] = 0;\r\n\t}\r\n\tfor (int i = 0; i <= n; i++){\r\n\t\tpa[i] = i;\r\n\t}\r\n\t\tfor (int iq = 1; iq <= m; iq++){\r\n\t\tint ty;\r\n\t\t//cin>>ty;\r\n\t\tscanf(\"%d\",&ty);\r\n\t\t//cout<<\"iq = \"<<iq<<endl;\r\n\t\tif (ty == 1){\r\n\t\t\tint u,v; \r\n\t\t\t//cin>>u>>v;\r\n\t\t\tscanf(\"%d %d\",&u,&v);\r\n\t\t\tll y; cin>>y;\r\n\t\t\tsolve(u, 0);\r\n\t\t\tsolve(v, 1);\r\n\t\t\t\t\t\tint lca = -1;\t\t\tfor (int j = 0; j < vr[0].size(); j++){\r\n\t\t\t\tvis[vr[0][j].first] = iq;\r\n\t\t\t}\r\n\t\t\tfor (int j = vr[1].size() - 1; j >= 0; j--){\r\n\t\t\t\tif (vis[vr[1][j].first] == iq){\r\n\t\t\t\t\tlca = vr[1][j].first;\t\t\t\t\t\r\n\t\t\t\t}else{\r\n\t\t\t\t    break;\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\t\t\t\t\t\tif (lca == -1){\r\n\t\t\t\t//cout<<0<<endl;\t\t\t\tprintf(\"0\\n\");\t\t\t} else {\r\n\t\t\t\tint bit = 0;\tfor (int j = 0; j + 1 < vr[bit].size(); j++){\t\t\t\t\t\r\n\t\t\t\t\tint cur = vr[bit][j].first;\r\n\t\t\t\t\tint p = vr[bit][j + 1].first;\r\n\t\t\t\t\tif (cur == lca){\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tll w = vr[bit][j].second;\r\n\t\t\t\t\ty = y / w;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tbit = 1;\r\n\t\t\t\tfor (int j = 0; j + 1 < vr[bit].size(); j++){\t\t\t\t\t\r\n\t\t\t\t\tint cur = vr[bit][j].first;\r\n\t\t\t\t\tint p = vr[bit][j + 1].first;\r\n\t\t\t\t\tif (cur == lca){\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tll w = vr[bit][j].second;\r\n\t\t\t\t\ty = y / w;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tcout<<y<<endl;\r\n \r\n\t\t\t    \r\n\t\t\t}\t\t\t    \t\t} else {\t\t\tint p; cin>>p;\r\n\t\t\tll c; cin>>c;\t\t\tint u = edge[p].u;\r\n\t\t\tint v = edge[p].v;\r\n\t\t\t//cout<<\"u = \"<<u<<\" v = \"<<v<<endl;\t\t\tif (c > 1){\t\t\t\t\t\t\t\tmp[make_pair(u, v)] = c;\r\n\t\t\t\tmp[make_pair(v, u)] = c;\r\n\t\t\t} else {\t\t\t\tint pu = fpa(u);\r\n\t\t\t\tint pv = fpa(v);\r\n\t\t\t\t//cout<<\"u = \"<<u<<\" pu = \"<<pu<<\" v = \"<<v<<\" pv = \"<<pv<<endl;\r\n\t\t\t\t//cout<<par[5]<<endl;\r\n\t\t\t\tif (par[u] == v){\t\t\t\t\t\r\n\t\t\t\t\tpa[pu] = pv;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpa[pv] = pu;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\t\t\t\r\n\t\r\n\treturn 0;\r\n\t\r\n\t    \r\n\t}"
}