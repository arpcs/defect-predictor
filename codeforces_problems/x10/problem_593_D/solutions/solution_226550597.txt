{
    "id": 226550597,
    "contestId": 593,
    "creationTimeSeconds": 1696405091,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 593,
        "index": "D",
        "name": "Happy Tree Party",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2400,
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "math",
            "trees"
        ]
    },
    "author": {
        "contestId": 593,
        "members": [
            {
                "handle": "cake_cake_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1446655500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 58,
    "timeConsumedMillis": 1403,
    "memoryConsumedBytes": 56320000,
    "source": "// LUOGU_RID: 127519129\n#include<iostream>\r\n#include<algorithm>\r\n#include<cstring>\r\n#include<vector>\r\n#include<queue>\r\n#include<map>\r\n#include<set>\r\n#define fi first\r\n#define se second\r\n#define ios ios::sync_with_stdio(false); cin.tie(0);cout.tie(0);\r\nusing namespace std;\r\ntypedef pair<int,int> PII;\r\ntypedef long long ll;\r\nconst int N=2e5+10;\r\nint h[N],e[2*N],ne[2*N];\r\nll w[2*N],idx,b[N];\r\nint p[N],d[N],f[N][40];\r\nstruct node\r\n{\r\n\tint f,l;\r\n}edg[N];\r\nint find(int x)\r\n{\r\n\tif(x!=p[x]) p[x]=find(p[x]);\r\n\treturn p[x];\r\n}\r\nvoid init(int u,int fa)\r\n{\r\n\td[u]=d[fa]+1; \r\n\tf[u][0]=fa;\r\n\tfor(int i=1;i<=30;i++)\r\n\t{\r\n\t\tf[u][i]=f[f[u][i-1]][i-1];\r\n\t}\r\n\tfor(int i=h[u];i!=-1;i=ne[i])\r\n\t{\r\n\t\tint v=e[i];\r\n\t\tif(v==fa) continue;\r\n\t\tif(w[i]==1)\r\n\t\t{\r\n\t\t\tp[v]=find(u);\r\n\t\t}\r\n\t\tb[v]=w[i];\r\n\t\tinit(v,u);\r\n\t}\r\n}\r\nint lca(int a,int b)\r\n{\r\n\tif(d[a]<d[b]) swap(a,b);\r\n\tfor(int i=30;i>=0;i--)\r\n\t{\r\n\t\tif(d[f[a][i]]>=d[b]) a=f[a][i];\r\n\t}\r\n\tif(a==b) return a;\r\n\tfor(int i=30;i>=0;i--)\r\n\t{\r\n\t\tif(f[a][i]!=f[b][i])\r\n\t\t{\r\n\t\t\ta=f[a][i];\r\n\t\t\tb=f[b][i];\r\n\t\t}\r\n\t}\r\n\treturn f[a][0];\r\n}\r\n\r\nvoid add(int a,int b,ll c)\r\n{\r\n\te[idx]=b,ne[idx]=h[a],w[idx]=c,h[a]=idx++;\r\n}\r\nvoid solve()\r\n{\r\n\tmemset(h,-1,sizeof h);\r\n\tint n,m;\r\n\tcin>>n>>m;\r\n\tfor(int i=1;i<n;i++)\r\n\t{\r\n\t\tint a,b;\r\n\t\tll c;\r\n\t\tcin>>a>>b>>c;\r\n\t\tadd(a,b,c);\r\n\t\tadd(b,a,c);\r\n\t\tedg[i]={a,b};\r\n\t}\r\n\tfor(int i=1;i<=n;i++)\tp[i]=i;\r\n\tinit(1,0);\r\n\twhile(m--)\r\n\t{\r\n\t\tint op;\r\n\t\tcin>>op;\r\n\t\t\r\n\t\tif(op==1)\r\n\t\t{\r\n\t\t\t//cout<<1<<endl;\r\n\t\t\tint a,aa;\r\n\t\t\tll c;\r\n\t\t\tcin>>a>>aa>>c;\r\n\t\t\tint fa=lca(a,aa);\r\n\t\t\t//cout<<fa<<endl;\r\n\t\t\twhile(d[fa]<d[a] && c)\r\n\t\t\t{\r\n\t\t\t\tc/=b[a];\r\n\t\t\t\ta=find(f[a][0]);\r\n\t\t\t}\r\n\t\t\twhile(d[fa]<d[aa] && c)\r\n\t\t\t{\r\n\t\t\t\tc/=b[aa];\r\n\t\t\t\taa=find(f[aa][0]);\r\n\t\t\t}\r\n\t\t\tcout<<c<<\"\\n\";\r\n\t\t}else\r\n\t\t{\r\n\t\t\tint idx;\r\n\t\t\tll c;\r\n\t\t\tcin>>idx>>c;\r\n\t\t\tint u=edg[idx].f,v=edg[idx].l;\r\n\t\t\tint son;\r\n\t\t\tif(f[u][0]==v) son=u;\r\n\t\t\telse son=v;\r\n\t\t\tb[son]=c;\r\n\t\t\tif(b[son]==1) p[son]=find(f[son][0]);\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n}\r\nint main()\r\n{\r\n\tios;\r\n\tint t=1;\r\n\t//cin>>t;\r\n\twhile(t--) solve();\r\n\treturn 0;\r\n}\r\n"
}