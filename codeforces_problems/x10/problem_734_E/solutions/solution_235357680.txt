{
    "id": 235357680,
    "contestId": 734,
    "creationTimeSeconds": 1701509192,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 734,
        "index": "E",
        "name": "Anton and Tree",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "dfs and similar",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 734,
        "members": [
            {
                "handle": "Xinglan3533"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1479227700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 15974400,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define ll long long \r\n#define int ll\r\n\r\nusing namespace std;\r\n\r\nconst int N = 2e5 + 10, INF = 1e12;\r\nint n, w[N];\r\nint u[N], v[N];\r\nint h[N], e[N * 2], ne[N * 2], idx;\r\nint p[N], num[N], cnt = 0, minx = INF;\r\n\r\nvoid add(int a, int b) {\r\n\te[idx] = b, ne[idx] = h[a], h[a] = idx ++ ;\r\n}\r\n\r\nint find(int x) {\r\n\tif(x != p[x]) p[x] = find(p[x]);\r\n\treturn p[x];\r\n}\r\n\r\nvoid DFS(int u, int fa, int op) {\r\n\tint ans = 0;\r\n\tfor(int i = h[u]; i != -1; i = ne[i]) {\r\n\t\tint j = e[i];\r\n\t\tif(j == fa) continue;\r\n\t\t\r\n\t\tans ++ ;\r\n\t\tDFS(j, u, op);\r\n\t}\r\n\t\r\n\tif(w[u] == op) {\r\n\t\tif(ans == 1) cnt += 1;\r\n\t\telse if(ans > 1) cnt += 2;\r\n\t}\r\n}\r\n\r\nsigned main()\r\n{\r\n\tscanf(\"%lld\", &n);\r\n\tmemset(h, -1, sizeof h);\r\n\tfor(int i = 1; i <= n; i ++ ) p[i] = i;\r\n\tfor(int i = 1; i <= n; i ++ ) scanf(\"%lld\", &w[i]);\r\n\tfor(int i = 1; i <= n - 1; i ++ ) {\r\n\t\tscanf(\"%lld%lld\", &u[i], &v[i]);\r\n\t\t\r\n\t\tif(w[u[i]] != w[v[i]]) continue;\r\n\t\t\r\n\t\tint fu = find(u[i]), fv = find(v[i]);\r\n\t\tp[fu] = fv;\r\n\t}\r\n\t\r\n\tint root;\r\n\tfor(int i = 1; i <= n - 1; i ++ ) {\r\n\t\tif(find(u[i]) != find(v[i])) {\r\n\t\t\troot = find(u[i]);\r\n\t\t\tadd(find(u[i]), find(v[i]));\r\n\t\t\tadd(find(v[i]), find(u[i]));\r\n\t\t}\r\n\t}\r\n\t\r\n\tcnt = 0; DFS(root, -1, 1);\r\n\tif(w[root] == 0) cnt ++ ;\r\n\tminx = min(minx, cnt);\r\n\t\r\n\tcnt = 0; DFS(root, -1, 0);\r\n\tif(w[root] == 1) cnt ++ ;\r\n\tminx = min(minx, cnt);\r\n\t\r\n\tprintf(\"%lld\\n\", minx);\r\n\treturn 0;\r\n}\r\n\r\n\r\n/*\r\n  15\r\n  0 1 0 0 1 1 0 1 1 1 1 1 0 1 0\r\n  13 6\r\n */"
}