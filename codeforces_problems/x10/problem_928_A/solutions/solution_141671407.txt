{
    "id": 141671407,
    "contestId": 928,
    "creationTimeSeconds": 1641319354,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 928,
        "index": "A",
        "name": "Login Verification",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1200,
        "tags": [
            "*special",
            "strings"
        ]
    },
    "author": {
        "contestId": 928,
        "members": [
            {
                "handle": "forecaster"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1519486500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define  fast ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);\r\nmap<char,long long int>hashing;\r\nmap<long long int,long long int>hashing1;\r\nbool test=true;vector<string> out;\r\nmap<long long int,bool>vis;\r\nint main()\r\n{\r\n\tfast;\r\nstring s;\r\nlong long int n;\r\ncin>>s;\r\ncin>>n;\r\nvector<string>vect(n);\r\nfor(long long int i(0);i<n;i++){\r\n\tcin>>vect[i];}\r\nbool test=true;\r\nstring s1=\"O0o\";\r\nstring s2=\"IiLl1\";\r\nlong long int som=0;\r\nfor(long long int i(0);i<n;i++){\r\n\tsom=0;\r\n\tif(vect[i].length()!=s.length())continue;\r\n\tif(s==vect[i]){test=false;break;}\r\n\tfor(long long int j(0);j<vect[i].length();j++){\r\n\t\tif((vect[i][j]!=s[j])and(abs(vect[i][j]-s[j])!=32)and(not((s1.find(vect[i][j])!=string::npos)and(s1.find(s[j])!=string::npos)))and(not((s2.find(vect[i][j])!=string::npos)and(s2.find(s[j])!=string::npos)))){\r\n\t\t\tbreak;\r\n\t\t\t}\r\n\t\tsom++;\r\n\t\t\r\n\t\t}\r\n\t\tif(som==s.length()){test=false;break;}}\r\nif(test==true){\r\n\tcout<<\"Yes\"<<endl;}\r\nelse{\r\n\tcout<<\"No\"<<endl;}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n \r\n \r\n\t\r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n\t \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n \r\n\t\r\n\t\r\n\t\t\r\n\t\r\n \r\n\t\r\n \r\n\t\r\n\t\r\n\t\r\n\t\t\r\n\t\r\n\t\t\r\n \r\n \r\n\t\r\n\t\r\n\t\r\nreturn 0;}\r\n"
}