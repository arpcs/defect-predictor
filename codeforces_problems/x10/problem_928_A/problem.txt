{
    "contestId": 928,
    "index": "A",
    "name": "Login Verification",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 1200,
    "tags": [
        "*special",
        "strings"
    ],
    "desc": {
        "title": "A. Login Verification",
        "statement": "<p>When registering in a social network, users are allowed to create their own convenient login to make it easier to share contacts, print it on business cards, etc.</p><p>Login is an arbitrary sequence of lower and uppercase latin letters, digits and underline symbols (\u00ab<span class=\"tex-font-style-tt\">_</span>\u00bb). However, in order to decrease the number of frauds and user-inattention related issues, it is prohibited to register a login if it is <span class=\"tex-font-style-it\">similar</span> with an already existing login. More precisely, two logins <span class=\"tex-span\"><i>s</i></span> and <span class=\"tex-span\"><i>t</i></span> are considered similar if we can transform <span class=\"tex-span\"><i>s</i></span> to <span class=\"tex-span\"><i>t</i></span> via a sequence of operations of the following types: </p><ul> <li> transform lowercase letters to uppercase and vice versa; </li><li> change letter \u00ab<span class=\"tex-font-style-tt\">O</span>\u00bb (uppercase latin letter) to digit \u00ab<span class=\"tex-font-style-tt\">0</span>\u00bb and vice versa; </li><li> change digit \u00ab<span class=\"tex-font-style-tt\">1</span>\u00bb (one) to any letter among \u00ab<span class=\"tex-font-style-tt\">l</span>\u00bb (lowercase latin \u00ab<span class=\"tex-font-style-tt\">L</span>\u00bb), \u00ab<span class=\"tex-font-style-tt\">I</span>\u00bb (uppercase latin \u00ab<span class=\"tex-font-style-tt\">i</span>\u00bb) and vice versa, or change one of these letters to other. </li></ul><p>For example, logins \u00ab<span class=\"tex-font-style-tt\">Codeforces</span>\u00bb and \u00ab<span class=\"tex-font-style-tt\">codef0rces</span>\u00bb as well as \u00ab<span class=\"tex-font-style-tt\">OO0OOO00O0OOO0O00OOO0OO_lol</span>\u00bb and \u00ab<span class=\"tex-font-style-tt\">OO0OOO0O00OOO0O00OO0OOO_1oI</span>\u00bb are considered similar whereas \u00ab<span class=\"tex-font-style-tt\">Codeforces</span>\u00bb and \u00ab<span class=\"tex-font-style-tt\">Code_forces</span>\u00bb are not.</p><p>You're given a list of existing logins with no two <span class=\"tex-font-style-it\">similar</span> amonst and a newly created user login. Check whether this new login is <span class=\"tex-font-style-it\">similar</span> with any of the existing ones.</p>",
        "inputSpecification": "<p>The first line contains a non-empty string <span class=\"tex-span\"><i>s</i></span> consisting of lower and uppercase latin letters, digits and underline symbols (\u00ab<span class=\"tex-font-style-tt\">_</span>\u00bb) with length not exceeding <span class=\"tex-span\">50</span> \u00a0\u2014 the login itself.</p><p>The second line contains a single integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u20091\u2009000</span>)\u00a0\u2014 the number of existing logins.</p><p>The next <span class=\"tex-span\"><i>n</i></span> lines describe the existing logins, following the same constraints as the user login (refer to the first line of the input). It's guaranteed that no two existing logins are similar.</p>",
        "outputSpecification": "<p>Print \u00ab<span class=\"tex-font-style-tt\">Yes</span>\u00bb (without quotes), if user can register via this login, i.e. none of the existing logins is <span class=\"tex-font-style-it\">similar</span> with it.</p><p>Otherwise print \u00ab<span class=\"tex-font-style-tt\">No</span>\u00bb (without quotes).</p>",
        "samples": [
            {
                "input": "1_wat<br/>2<br/>2_wat<br/>wat_1<br/>",
                "output": "Yes<br/>"
            },
            {
                "input": "000<br/>3<br/>00<br/>ooA<br/>oOo<br/>",
                "output": "No<br/>"
            },
            {
                "input": "_i_<br/>3<br/>__i_<br/>_1_<br/>I<br/>",
                "output": "No<br/>"
            },
            {
                "input": "La0<br/>3<br/>2a0<br/>La1<br/>1a0<br/>",
                "output": "No<br/>"
            },
            {
                "input": "abc<br/>1<br/>aBc<br/>",
                "output": "No<br/>"
            },
            {
                "input": "0Lil<br/>2<br/>LIL0<br/>0Ril<br/>",
                "output": "Yes<br/>"
            }
        ],
        "note": "<p>In the second sample case the user wants to create a login consisting of three zeros. It's impossible due to collision with the third among the existing.</p><p>In the third sample case the new login is similar with the second one.</p>"
    }
}