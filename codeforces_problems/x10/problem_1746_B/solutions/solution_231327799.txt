{
    "id": 231327799,
    "contestId": 1746,
    "creationTimeSeconds": 1699099026,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1746,
        "index": "B",
        "name": "Rebellion",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1746,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1665844500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n    int t;\n    cin >> t;\n\n    for (int i = 0; i < t; i++)\n    {\n        int n;\n        cin >> n;\n\n        int a[n];\n        for (int j = 0; j < n; j++)\n        {\n            cin >> a[j];\n        }\n\n        int operations = 0;\n\n        int deletion = 0;\n        int j = 0;\n        int k = n - 1;\n\n        while (a[j] == 0)\n        {\n            j++;\n        }\n\n        while (a[k] == 1)\n        {\n            k--;\n        }\n\n        for (; j < k;)\n        {\n            if (a[j] == 0)\n            {\n                j++;\n            }\n            else\n            {\n                deletion++;\n            }\n            if (a[k] == 1)\n            {\n                k--;\n            }\n            else\n            {\n                deletion++;\n            }\n            if (a[j] == 1 && a[k] == 0)\n            {\n                operations++;\n                deletion = 0;\n                j++;\n                k--;\n            }\n        }\n\n        if (deletion > 0)\n        {\n            operations++;\n        }\n\n        if (deletion == n)\n        {\n            operations = 0;\n        }\n\n        cout << operations << endl;\n    }\n\n    return 0;\n}\n  \t\t \t\t\t\t\t\t\t\t   \t\t \t\t   \t\t\t\t\t\t\t"
}