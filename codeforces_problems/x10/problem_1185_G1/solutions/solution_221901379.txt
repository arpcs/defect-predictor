{
    "id": 221901379,
    "contestId": 1185,
    "creationTimeSeconds": 1693898516,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1185,
        "index": "G1",
        "name": "Playlist for Polycarp (easy version)",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2100,
        "tags": [
            "bitmasks",
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 1185,
        "members": [
            {
                "handle": "Faccirx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560955500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 307200,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define int int32_t\r\n\r\nconstexpr int inf=2e9;\r\nconstexpr double eps=1e-8;\r\n\r\ntemplate<class T>\r\nconstexpr bool chmax(T &a,const T &b){\r\n\tif(a<b) return a=b,true;\r\n\treturn false;\r\n}\r\ntemplate<class T>\r\nconstexpr bool chmin(T &a,const T &b){\r\n\tif(a>b) return a=b,true;\r\n\treturn false;\r\n}\r\n\r\nstd::mt19937_64 rng(std::random_device{}());\r\n\r\ntemplate<const int P>\r\nconstexpr int norm(int x){\r\n\tif(x<0) x+=P;\r\n\tif(x>=P) x-=P;\r\n\treturn x;\r\n}\r\n\r\ntemplate<const int P>\r\nclass Mint{\r\nprivate:\r\n\tint x;\r\npublic:\r\n\tconstexpr Mint():x(0){}\r\n\tconstexpr Mint(int x):x(norm<P>(x%P)){}\r\n\texplicit constexpr operator int()const{\r\n\t\treturn x;\r\n\t}\r\n\tconstexpr Mint operator-()const{\r\n\t\treturn Mint(norm<P>(P-x));\r\n\t}\r\n\tconstexpr Mint pow(int b)const{\r\n\t\tMint res=1;\r\n\t\tfor(auto a=*this;b;a*=a,b>>=1){\r\n\t\t\tif(b&1){\r\n\t\t\t\tres*=a;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\tconstexpr Mint inv()const{\r\n\t\tassert(x!=0);\r\n\t\treturn pow(P-2);\r\n\t}\r\n\tfriend constexpr Mint operator+(const Mint &a,const Mint &b){\r\n\t\treturn norm<P>(a.x+b.x);\r\n\t}\r\n\tfriend constexpr Mint operator-(const Mint &a,const Mint &b){\r\n\t\treturn norm<P>(a.x-b.x);\r\n\t}\r\n\tfriend constexpr Mint operator*(const Mint &a,const Mint &b){\r\n\t\treturn 1ll*a.x*b.x%P;\r\n\t}\r\n\tfriend constexpr Mint operator/(const Mint &a,const Mint &b){\r\n\t\treturn a*b.inv();\r\n\t}\r\n\tconstexpr Mint &operator+=(const Mint &b)&{\r\n\t\treturn *this=*this+b;\r\n\t}\r\n\tconstexpr Mint &operator-=(const Mint &b)&{\r\n\t\treturn *this=*this-b;\r\n\t}\r\n\tconstexpr Mint &operator*=(const Mint &b)&{\r\n\t\treturn *this=*this*b;\r\n\t}\r\n\tconstexpr Mint &operator/=(const Mint &b)&{\r\n\t\treturn *this=*this/b;\r\n\t}\r\n\tfriend constexpr std::istream &operator>>(std::istream &is,Mint &a){\r\n\t\tint v;\r\n\t\tis>>v;\r\n\t\ta=v;\r\n\t\treturn is;\r\n\t}\r\n\tfriend constexpr std::ostream &operator<<(std::ostream &os,const Mint &a){\r\n\t\tint v=(int)a;\r\n\t\tos<<v;\r\n\t\treturn os;\r\n\t}\r\n\tfriend constexpr bool operator==(const Mint &a,const Mint &b){\r\n\t\treturn (int)a==(int)b;\r\n\t}\r\n\tfriend constexpr bool operator!=(const Mint &a,const Mint &b){\r\n\t\treturn (int)a!=(int)b;\r\n\t}\r\n};\r\n\r\ntemplate<const int x,const int P>\r\nconstexpr Mint<P>Inv=Mint<P>(x).inv();\r\n\r\nconstexpr int P=1e9+7;\r\n\r\nvoid flying(){\r\n\tint n,m;\r\n\tstd::cin>>n>>m;\r\n\tstd::vector<int>t(n),g(n);\r\n\tfor(int i=0;i<n;i++){\r\n\t\tstd::cin>>t[i]>>g[i];\r\n\t\tg[i]--;\r\n\t}\r\n\r\n\tstd::vector dp(3,std::vector(15,std::vector<Mint<P>>(1<<n)));\r\n\tdp[0][0][0]=1;\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tfor(int mask=0;mask<(1<<n);mask++){\r\n\t\t\tfor(int k=0;k<3;k++){\r\n\t\t\t\tdp[k][i%15][mask]=0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int j=0;j<n;j++){\r\n\t\t\tif(t[j]>i){\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tfor(int mask=0;mask<(1<<n);mask++){\r\n\t\t\t\tif(mask>>j&1){\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tfor(int k=0;k<3;k++){\r\n\t\t\t\t\tif(k==g[j]&&i!=t[j]){\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdp[g[j]][i%15][mask^(1<<j)]+=dp[k][((i-t[j])%15+15)%15][mask];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tMint<P>ans=0;\r\n\tfor(int mask=0;mask<(1<<n);mask++){\r\n\t\tfor(int i=0;i<3;i++){\r\n\t\t\tans+=dp[i][m%15][mask];\r\n\t\t}\r\n\t}\r\n\tstd::cout<<ans<<\"\\n\";\r\n}\r\n\r\nint32_t main(){\r\n\tstd::ios::sync_with_stdio(false);\r\n\tstd::cin.tie(nullptr);\r\n\tstd::cout.tie(nullptr);\r\n\tflying();\r\n\treturn 0;\r\n}"
}