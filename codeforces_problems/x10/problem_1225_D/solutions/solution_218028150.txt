{
    "id": 218028150,
    "contestId": 1225,
    "creationTimeSeconds": 1691590187,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1225,
        "index": "D",
        "name": "Power Products",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1800,
        "tags": [
            "hashing",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1225,
        "members": [
            {
                "handle": "Ann185"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1572087900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 819200,
    "source": "#include<bits/stdc++.h>\r\n#define mod 1000000007\r\n#define mod2 998244353\r\n#define inf 1000000000000000\r\n#define N 1e5+1\r\n#define pb push_back\r\n#define fix(f,n) std::fixed<<std::setprecision(n)<<f\r\n#define all(x) x.begin(), x.end()\r\n#define rep(a,b,i) for(ll i=a;i<b;i++)\r\n#define rrep(a,b,i) for(ll i=a;i>=b;i--)\r\n#define p(x) cout<<x<<\"\\n\"\r\n#define pl(x) cout<<x<<\" \"\r\nusing namespace std;\r\n\r\n\r\nvoid __print(int x) {cerr << x;}\r\nvoid __print(long x) {cerr << x;}\r\nvoid __print(long long x) {cerr << x;}\r\nvoid __print(unsigned x) {cerr << x;}\r\nvoid __print(unsigned long x) {cerr << x;}\r\nvoid __print(unsigned long long x) {cerr << x;}\r\nvoid __print(float x) {cerr << x;}\r\nvoid __print(double x) {cerr << x;}\r\nvoid __print(long double x) {cerr << x;}\r\nvoid __print(char x) {cerr << '\\'' << x << '\\'';}\r\nvoid __print(const char *x) {cerr << '\\\"' << x << '\\\"';}\r\nvoid __print(const string &x) {cerr << '\\\"' << x << '\\\"';}\r\nvoid __print(bool x) {cerr << (x ? \"true\" : \"false\");}\r\n\r\ntemplate<typename T, typename V>\r\nvoid __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}\r\ntemplate<typename T>\r\nvoid __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? \",\" : \"\"), __print(i); cerr << \"}\";}\r\nvoid _print() {cerr << \"]\\n\";}\r\ntemplate <typename T, typename... V>\r\nvoid _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << \", \"; _print(v...);}\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x...) cerr << \"[\" << #x << \"] = [\"; _print(x)\r\n#else\r\n#define debug(x...)\r\n#endif\r\n\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef map<int,int> mii;\r\ntypedef map<ll,ll> mll;\r\ntypedef set<ll> stll;\r\ntypedef vector<long long> vll;\r\ntypedef vector<vector<long long>> vvll;\r\ntypedef pair<long long, long long> pll;\r\ntypedef vector<pair<long long, long long>> vpll;\r\ntypedef vector<pair<int,int>> vpii;\r\ntypedef vector<int> vii;\r\n\r\n\r\n//hcf-lcm\r\n\r\nll gcd(ll a, ll b)\r\n{\r\n  if (b == 0)\r\n    return a;\r\n  return gcd(b, a % b);\r\n}\r\n\r\nll lcm(ll a, ll b)\r\n{\r\n    return (a / gcd(a, b)) * b;\r\n}\r\n\r\n// binary exp\r\n\r\nll binpow(ll a, ll b, ll m) {\r\n    a %= m;\r\n    long long res = 1;\r\n    while (b > 0) {\r\n        if (b & 1)\r\n            res = res * a % m;\r\n        a = a * a % m;\r\n        b >>= 1;\r\n    }\r\n    return res;\r\n}\r\n\r\nll modinv(ll a,ll m){\r\n    return binpow(a,m-2,m);\r\n}\r\n// prime and divisors related\r\n\r\nvll fac; //factorial of n \r\nvoid factorial(ll n){\r\n    fac.clear();\r\n    fac.resize(n+1);\r\n    fac[0]=1;\r\n    fac[1]=1;\r\n    for (ll i=2;i<=n;i++) fac[i]=fac[i-1]*i;\r\n}\r\n\r\n\r\nvector<bool> isprime; //true=prime\r\nvoid primecheck(ll n){ \r\n    isprime.clear();\r\n    isprime.assign(n+1,true);\r\n    isprime[0]=false;\r\n    isprime[1]=false;\r\n    for (ll i=2;i*i<=n;i++){\r\n        if (isprime[i]){\r\n            for (ll j=i*i;j<=n;j+=i) isprime[j]=false;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nvll lpf; //largest prime factor of n\r\nvoid lpf_sieve(ll n){\r\n    // largest prime factors of numbers upto n\r\n    lpf.clear();\r\n    lpf.assign(n+1,0);\r\n    for (ll i=2;i<=n;i++) {\r\n        if (lpf[i]==0){\r\n            for (ll j=i;j<=n;j+=i) lpf[j]=i;\r\n        }\r\n    }\r\n}\r\n\r\nmll pfc;\r\nvoid pf(ll n){\r\n    // prints prime factorization of n\r\n    // requires lpf\r\n    pfc.clear();\r\n    pfc[1]++;\r\n    while (n>1){\r\n        pfc[lpf[n]]++;\r\n        n/=lpf[n];\r\n    }    \r\n}\r\n\r\nmll fc;\r\nvoid divsrs(ll n){\r\n    //all factors of n\r\n    fc.clear();\r\n    for (int i=1; i<=sqrt(n); i++){\r\n        if (n%i == 0){\r\n            if (n/i == i)\r\n                fc[i]++;\r\n            else {\r\n                fc[i]++;\r\n                fc[n/i]++;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//basic recursive dfs of a graph/tree\r\nvoid recdfs(ll node,vll v[],bool visited[]){\r\n    visited[node]=true;\r\n    for(auto i:v[node]){\r\n        if(!visited[i]){\r\n            recdfs(i,v,visited);\r\n        }\r\n    }\r\n}\r\n//basic iterative dfs of a graph/tree\r\nvoid itrdfs(ll node,vll v[],bool visited[]){\r\n    stack<ll>s;\r\n    s.push(node);\r\n    while(!s.empty()){\r\n        ll z=s.top();\r\n        s.pop();\r\n        visited[z]=true;\r\n        for(auto i:v[z]){\r\n            if(!visited[i])\r\n            s.push(i);\r\n        }\r\n    }\r\n}\r\n//dsu\r\nvll parent;\r\nvll sz;\r\nvoid init(ll n){\r\n    parent.resize(n+1);\r\n    sz.assign(n+1,1);\r\n    rep(1,n+1,i){\r\n        parent[i]=i;\r\n    }\r\n}\r\nll findparent(ll x){\r\n   if(parent[x]==x){\r\n     return x;\r\n   }\r\n   else\r\n   return parent[x]=findparent(parent[x]);\r\n}\r\n \r\nvoid union_sets(ll a, ll b) {\r\n    a = findparent(a);\r\n    b = findparent(b);\r\n    if (a != b) {\r\n        if (sz[a] < sz[b])\r\n            swap(a, b);\r\n        parent[b] = a;\r\n        sz[a] += sz[b];\r\n    }\r\n}\r\n\r\n//action time\r\nvoid solve(){\r\n    lpf_sieve(N);\r\n      ll n,k;\r\n      cin>>n>>k;\r\n      vll v(n);\r\n      map<vpll,ll>mp;\r\n      \r\n      rep(0,n,i){\r\n        cin>>v[i];\r\n        vpll tmp;\r\n        pf(v[i]);\r\n        for(auto i:pfc){\r\n            if(i.second&k!=0)\r\n            tmp.pb({i.first,i.second%k});\r\n        }\r\n        mp[tmp]++;\r\n      }\r\n      \r\n      ll ans=0;\r\n      rep(0,n,i){\r\n\r\n        pf(v[i]);\r\n        vpll tmp,tmp2;\r\n\r\n        for(auto i:pfc){\r\n            if(i.second%k!=0)\r\n            tmp.pb({i.first,k-i.second%k});\r\n        }\r\n        for(auto i:pfc){\r\n            if(i.second%k!=0)\r\n            tmp2.pb({i.first,i.second%k});\r\n        }\r\n        debug(tmp,tmp2);\r\n        if(tmp==tmp2){\r\n            ans+=mp[tmp]-1;\r\n        }\r\n        else{\r\n            ans+=mp[tmp2];\r\n        }\r\n        debug(ans);\r\n      }\r\n      p(ans/2);\r\n\r\n  \r\n\r\n\r\n}\r\n\r\nint main(){\r\n#ifndef ONLINE_JUDGE\r\n  freopen(\"input.txt\",\"r\",stdin);\r\n  freopen(\"output.txt\",\"w\",stdout);\r\n#endif\r\nios_base::sync_with_stdio(false);\r\ncin.tie(NULL);\r\ncout.tie(NULL);\r\nint t=1;\r\n// cin>>t;\r\nwhile(t--){\r\n    solve();\r\n}\r\nreturn 0;\r\n}"
}