{
    "id": 231047301,
    "contestId": 427,
    "creationTimeSeconds": 1698969256,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 427,
        "index": "D",
        "name": "Match & Catch",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dp",
            "string suffix structures",
            "strings"
        ]
    },
    "author": {
        "contestId": 427,
        "members": [
            {
                "handle": "Sparkle_Twilight"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1399044600
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 169,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 102400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;const int N=5005;int dp[N],dps[N],dpt[N];void sol(const string&s,int a[N]){int i,j,size=s.size();memset(dp,0,sizeof(dp));for(i=size-1;i>=0;--i)for(j=0;j<size;++j)if(i!=j){if(s[i]!=s[j])dp[j]=0;else{dp[j]=dp[j+1]+1;a[i]=max(a[i],dp[j]);}}}int main(){string s,t;cin>>s>>t;sol(s,dps);sol(t,dpt);int i,j,ret=s.size()+1,n=s.size(),m=t.size();memset(dp,0,sizeof(dp));for(i=n-1;i>=0;--i)for(j=0;j<m;++j){if(s[i]==t[j]){dp[j]=dp[j+1]+1;if(dp[j]>dps[i]&&dp[j]>dpt[j]){ret=min(ret,max(dps[i],dpt[j])+1);}}else dp[j]=0;}printf(\"%d\\n\",ret>n ?-1 :ret);}"
}