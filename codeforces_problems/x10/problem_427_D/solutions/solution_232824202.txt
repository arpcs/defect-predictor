{
    "id": 232824202,
    "contestId": 427,
    "creationTimeSeconds": 1700032901,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 427,
        "index": "D",
        "name": "Match & Catch",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dp",
            "string suffix structures",
            "strings"
        ]
    },
    "author": {
        "contestId": 427,
        "members": [
            {
                "handle": "B.White"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1399044600
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 169,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 2355200,
    "source": "#include<cstdio>\r\n#include<cstring>\r\n#include<algorithm>\r\nusing namespace std;\r\nconst int N=2e4+10;\r\n\r\nint n,last=1,tot=1,f[N],g[N],ans=N; char s[N];\r\nstruct node{int fa,len,v[26];}tr[N];\r\nvoid add(int c,int *cnt) {\r\n\tint p=last,x=last=++tot; tr[x].len=tr[p].len+1;\r\n\tfor(\t;p&&tr[p].v[c]==0;p=tr[p].fa) tr[p].v[c]=x;\r\n\tif(!p)  tr[x].fa=1;\r\n\telse {\r\n\t\tint q=tr[p].v[c],y;\r\n\t\tif(tr[p].len+1==tr[q].len) tr[x].fa=q;\r\n\t\telse {\r\n\t\t\ttr[y=++tot]=tr[q]; f[y]=f[q]; g[y]=g[q];\r\n\t\t\ttr[y].len=tr[p].len+1;\r\n\t\t\ttr[q].fa=tr[x].fa=y;\r\n\t\t\tfor(\t;p&&tr[p].v[c]==q;p=tr[p].fa) tr[p].v[c]=y;\r\n\t\t}\r\n\t}\r\n\tx=last;\r\n\twhile(x&&cnt[x]<=1) cnt[x]++,x=tr[x].fa;\r\n}\r\n\r\n\r\nint main() {\r\n\tscanf(\"%s\",s+1);last=1;for(int i=1;s[i];i++) add(s[i]-'a',f);\r\n\tscanf(\"%s\",s+1);last=1;for(int i=1;s[i];i++) add(s[i]-'a',g);\r\n\tfor(int i=2;i<=tot;i++) if(f[i]==g[i]&&f[i]==1) ans=min(ans,tr[tr[i].fa].len+1);\r\n\tif(ans==N) puts(\"-1\");\r\n\telse printf(\"%d\\n\",ans);\r\n\treturn 0;\r\n}"
}