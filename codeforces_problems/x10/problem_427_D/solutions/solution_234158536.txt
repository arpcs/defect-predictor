{
    "id": 234158536,
    "contestId": 427,
    "creationTimeSeconds": 1700869249,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 427,
        "index": "D",
        "name": "Match & Catch",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dp",
            "string suffix structures",
            "strings"
        ]
    },
    "author": {
        "contestId": 427,
        "members": [
            {
                "handle": "xuhaotian"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1399044600
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 169,
    "timeConsumedMillis": 468,
    "memoryConsumedBytes": 409600,
    "source": "#include<bits/stdc++.h>\r\n#define ull unsigned long long\r\nusing namespace std;\r\nconst int maxn=5e3;\r\nconst int mod=12227;\r\nconst int jin=13331;\r\nstring a,b;\r\nint n,m;\r\null hash_a[maxn+5],hash_b[maxn+5],pre[maxn+5];\r\null get_hash_a(ull lef,ull rig){\r\n\treturn hash_a[rig]-hash_a[lef-1]*pre[rig-lef+1];\r\n}\r\null get_hash_b(ull lef,ull rig){\r\n\treturn hash_b[rig]-hash_b[lef-1]*pre[rig-lef+1];\r\n}\r\nstruct node{\r\n\tint tot,cnt[mod+5][2],tail[mod+5],nxt[mod+5];\r\n\tull val[mod+5];\r\n\tvoid init(){\r\n\t\tmemset(tail,0,sizeof(tail));\r\n\t\ttot=0;\r\n\t}\r\n\tvoid insert(ull hash,int opt){\r\n\t\tint now=hash%mod;\r\n\t\tfor(int i=tail[now];i;i=nxt[i]){\r\n\t\t\tif(val[i]==hash){\r\n\t\t\t\tcnt[i][opt]++;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\ttot++;\r\n\t\tnxt[tot]=tail[now],tail[now]=tot;\r\n\t\tval[tot]=hash;\r\n\t\tcnt[tot][opt]=1,cnt[tot][opt^1]=0;\r\n\t}\r\n\tint chtailk(){\r\n\t\tfor(int i=1;i<=tot;i++){\r\n\t\t\tif(cnt[i][0]==1&&cnt[i][1]==1){\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n}hash_table;\r\nsigned main(){\r\n\tcin>>a>>b;\r\n\tpre[0]=1;\r\n\tfor(int i=1;i<=maxn;i++){\r\n\t\tpre[i]=pre[i-1]*jin;\r\n\t}\r\n\tif(n>m){\r\n\t\tswap(n,m);\r\n\t\tswap(a,b);\r\n\t}\r\n\tn=a.size(),m=b.size();\r\n\ta=\" \"+a,b=\" \"+b;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\thash_a[i]=hash_a[i-1]*jin+a[i];\r\n\t}\r\n\tfor(int i=1;i<=m;i++){\r\n\t\thash_b[i]=hash_b[i-1]*jin+b[i];\r\n\t}\r\n\tfor(int len=1;len<=n;len++){\r\n\t\thash_table.init();\r\n\t\tfor(int lef=1;lef+len-1<=n;lef++){\r\n\t\t\tint rig=lef+len-1;\r\n\t\t\thash_table.insert(get_hash_a(lef,rig),0);\r\n\t\t}\r\n\t\tfor(int lef=1;lef+len-1<=m;lef++){\r\n\t\t\tint rig=lef+len-1;\r\n\t\t\thash_table.insert(get_hash_b(lef,rig),1);\r\n\t\t}\r\n\t\tif(hash_table.chtailk()){\r\n\t\t\tcout<<len;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\tcout<<-1;\r\n\treturn 0;\r\n} \r\n"
}