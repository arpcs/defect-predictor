{
    "id": 227631672,
    "contestId": 1437,
    "creationTimeSeconds": 1697007448,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1437,
        "index": "E",
        "name": "Make It Increasing",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "binary search",
            "constructive algorithms",
            "data structures",
            "dp",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1437,
        "members": [
            {
                "handle": "Linmobi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1603809300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 106,
    "timeConsumedMillis": 389,
    "memoryConsumedBytes": 6041600,
    "source": "/*\n * @Descripttion: \n * @version: \n * @Author: Linmobi\n * @Date: 2023-10-07 16:01:38\n * @LastEditors: Linmobi\n * @LastEditTime: 2023-10-11 14:52:41\n */\n#include<bits/stdc++.h>\n// #define int long long\ntypedef long long ll;\ntypedef unsigned long long ull;\n#define rep(i, a, b) for(int i = (a); i <= signed(b); i ++)\n#define per(i, a, b) for(int i = (a); i >= signed(b); i --)\n\nusing namespace std;\n\nconst int P = 2e9 + 7;\nconst int L = 5e5 + 5;\n\ninline ll qpow(ll a, ll b) { ll ans = 1, q = a; while(b) { if(b & 1) { ans *= q; ans %= P; } q *= q; q %= P; b >>= 1; } return ans; }\ninline int read() {int f = 0, x = 1; char ch = getchar(); while(ch < '0' || ch > '9') { if(ch == '-') x = -1; ch = getchar(); } while(ch >= '0' && ch <= '9') { f = (f << 1) + (f << 3) + ch - '0'; ch = getchar(); } return x * f; }\n\nint a[L], pos[L], maxn = -P;\n\nint lower[L], cnt;\n\nsigned main() {\n    int n = read(), k = read();\n    rep(i, 1, n) {\n        a[i] = read() - i;\n    }\n    rep(i, 1, k) {\n        pos[i] = read();\n        if(maxn > a[pos[i]]) puts(\"-1\"), exit(0);\n        maxn = a[pos[i]];\n    }\n    sort(pos + 1, pos + 1 + k);\n    a[0] = -P;\n    pos[0] = 0;\n    pos[k + 1] = n + 1;\n    a[n + 1] = P;\n    rep(q, 0, k) {\n        int minn = a[pos[q]], maxn = a[pos[q + 1]];\n        // cerr << pos[q] << ' ' << pos\n        // cerr << minn << ' ' << maxn << endl;\n        rep(i, pos[q] + 1, pos[q + 1] - 1) {\n            int w = a[i];\n            if(w < minn || w > maxn) continue;\n            int pos = upper_bound(lower + 1, lower + 1 + cnt, w) - (lower);\n            if(pos > cnt) lower[++ cnt] = a[i];\n            else lower[pos] = a[i];\n        } \n        // cerr << cnt << endl;\n    }\n    cout << n - cnt - k << endl;\n    return 0;\n}\n \t  \t\t\t\t\t \t\t\t\t \t \t\t  \t \t\t  \t \t"
}