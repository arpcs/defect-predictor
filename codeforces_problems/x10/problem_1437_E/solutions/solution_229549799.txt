{
    "id": 229549799,
    "contestId": 1437,
    "creationTimeSeconds": 1698146429,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1437,
        "index": "E",
        "name": "Make It Increasing",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "binary search",
            "constructive algorithms",
            "data structures",
            "dp",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1437,
        "members": [
            {
                "handle": "Noctambulant"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1603809300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 106,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 11366400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n#define ll long long\r\n#define ff first\r\n#define ss second\r\n#define all(v) v.begin(),v.end()\r\n#define pb push_back\r\n#define pob pop_back\r\n#define nl '\\n'\r\n\r\n\r\nint cs;\r\nvoid solve(){\r\n  //cout<<\"Case \"<<++cs<<\": \";\r\n  int n,k;\r\n  cin>>n>>k;\r\n  int a[n+2],b[k+2];\r\n  for(int i=1;i<=n;i++){\r\n      cin>>a[i];\r\n      a[i]-=i;\r\n  }\r\n  a[0]=-1e9,a[n+1]=2e9;\r\n  a[n+1]-=(n+1);\r\n  for(int i=1;i<=k;i++)cin>>b[i];\r\n  b[0]=0,b[k+1]=n+1;\r\n  int ans=0;\r\n  for(int i=0;i<=k;i++){\r\n    int l=b[i],r=b[i+1];\r\n    if(a[l]>a[r]){\r\n      cout<<-1<<nl;\r\n      return;\r\n    }\r\n\r\n    vector<int>lis;\r\n    for(int j=l+1;j<r;j++){\r\n      if(a[j]>=a[l] && a[j]<=a[r]){\r\n        auto it=upper_bound(all(lis),a[j]);\r\n        if(it==lis.end())lis.pb(a[j]);\r\n        else *it=a[j];\r\n      }\r\n    }\r\n    ans+=(r-l-1)-lis.size();\r\n  }\r\n\r\n  cout<<ans<<nl;\r\n}\r\n\r\nsigned main(){\r\n  ios_base::sync_with_stdio(false);\r\n  cin.tie(NULL);\r\n  int t=1;\r\n  //cin>>t;\r\n  while(t--){\r\n    solve();\r\n  }\r\n}\r\n"
}