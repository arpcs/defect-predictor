{
    "id": 228869488,
    "contestId": 1437,
    "creationTimeSeconds": 1697770737,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1437,
        "index": "E",
        "name": "Make It Increasing",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "binary search",
            "constructive algorithms",
            "data structures",
            "dp",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1437,
        "members": [
            {
                "handle": "Capps"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1603809300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 577,
    "memoryConsumedBytes": 228556800,
    "source": "#include <bits/stdc++.h>\r\nusing i64 = long long;\r\n\r\nconstexpr int inf = 1 << 30;\r\nconstexpr int mod = 8e6 + 3;\r\n\r\nstruct cpHash {\r\n    int hd[mod], val[mod << 1], nt[mod << 1], tot;\r\n    int to[mod << 1];\r\n\r\n    void clear() {\r\n        for (int i = 1; i <= tot; i++) {\r\n            int u = to[i] % mod;\r\n            hd[u] = 0;\r\n        }\r\n        tot = 0;\r\n    }\r\n    int &operator[](const int &x) {\r\n        int u = x % mod;\r\n        for (int i = hd[u]; i; i = nt[i])\r\n            if (to[i] == x)\r\n                return val[i];\r\n\r\n        to[++tot] = x;\r\n        nt[tot] = hd[u];\r\n        hd[u] = tot;\r\n        return val[tot] = -inf;\r\n    }\r\n} t;\r\n\r\nvoid add(int i, int y) {\r\n    for (; i < inf; i += i & -i)\r\n        t[i] = std::max(t[i], y);\r\n}\r\nint get(int i) {\r\n    int res = -inf;\r\n    for (; i; i -= i & -i)\r\n        res = std::max(res, t[i]);\r\n    return res;\r\n}\r\n\r\nsigned main() {\r\n    std::ios_base::sync_with_stdio(0), std::cin.tie(0);\r\n\r\n    int n, k;\r\n    std::cin >> n >> k;\r\n\r\n    std::vector<int> a(n + 2, 0);\r\n\r\n    for (int i = 1; i <= n; i++) {\r\n        std::cin >> a[i];\r\n        a[i] = a[i] - i + n + 1;\r\n    }\r\n    a[n + 1] = 1e9 + 10;\r\n\r\n    std::vector<bool> b(n + 2, false);\r\n    for (int x, i = 0; i < k; i++) {\r\n        std::cin >> x;\r\n        b[x] = true;\r\n    }\r\n    b[0] = b[n + 1] = true;\r\n\r\n    i64 ans = 0;\r\n    std::vector<int> f(n + 2, 0);\r\n\r\n    add(1, 0);\r\n    int cnt = 0;\r\n    for (int i = 1; i <= n + 1; i++) {\r\n        f[i] = get(a[i]) + 1;\r\n        // std::cerr << i << ' ' << f[i] << '\\n';\r\n        cnt++;\r\n        if (b[i]) {\r\n            ans += cnt - f[i];\r\n            cnt = 0;\r\n            t.clear();\r\n            add(a[i], 0);\r\n        } else {\r\n            add(a[i], f[i]);\r\n        }\r\n    }\r\n\r\n    if (ans < 0 or ans > n)\r\n        ans = -1;\r\n    std::cout << ans;\r\n}\r\n"
}