{
    "id": 211101232,
    "contestId": 1361,
    "creationTimeSeconds": 1687761685,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1361,
        "index": "F",
        "name": "Johnny and New Toy",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3300,
        "tags": [
            "data structures",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1361,
        "members": [
            {
                "handle": "Neutralised"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1591281300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 17817600,
    "source": "#include <bits/stdc++.h>\r\n#include <bits/extc++.h>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n#define ep emplace_back\r\nusing ll = long long;\r\nconstexpr int N = 200003;\r\nint n, q, a[N], b[N], pos[N << 2];\r\nll res, res1[N << 2], res2[N << 2];\r\nvector<tree<int, null_type, less<int>,\r\nrb_tree_tag, tree_order_statistics_node_update>> sl, sr;\r\n\r\nmain() {\r\n\tios :: sync_with_stdio(0), cin.tie(0);\r\n\tcin >> n, sl.resize(n << 2), sr.resize(n << 2);\r\n\tfor(int i = 1; i <= n; ++i) cin >> a[i];\r\n\tfor(int i = 1; i < n; ++i) cin >> b[i];\r\n\tauto Bld = [&](auto U, int u, int l, int r) -> void {\r\n\t\tif(l > r) return; pos[u] = l;\r\n\t\tfor(int i = l; i <= r; ++i) if(b[i] < b[pos[u]]) pos[u] = i;\r\n\t\tfor(int i = l; i <= pos[u]; ++i) sl[u].insert(a[i]);\r\n\t\tfor(int i = pos[u] + 1; i <= r + 1; ++i) sr[u].insert(a[i]);\r\n\t\tU(U, u << 1, l, pos[u] - 1), U(U, u << 1 | 1, pos[u] + 1, r);\r\n\t\tfor(int x : sr[u]) {\r\n\t\t\tint d = sl[u].order_of_key(x);\r\n\t\t\tres1[u] += sl[u].size() - d, res2[u] += d;\r\n\t\t}\r\n\t\t// cerr << \"on vertex \" << u << \" : \";\r\n\t\t// for(int x : sl[u]) cerr << x << ' '; cerr << \" ; \";\r\n\t\t// for(int x : sr[u]) cerr << x << ' '; cerr << '\\n';\r\n\t\tres += min(res1[u], res2[u]);\r\n\t}; Bld(Bld, 1, 1, n - 1);\r\n\t// cerr << \"initial res : \" << res << '\\n';\r\n\tauto Swap = [&](int x, int y) -> void {\r\n\t\tvector<tuple<int, bool, int, int>> del;\r\n\t\tauto Mdf = [&](auto U, int u, int l, int r, int x, int y) -> void {\r\n\t\t\tif(l > r || x < l || x > r + 1) return;\r\n\t\t\tconst int X = a[x], Y = a[y];\r\n\t\t\tauto it1 = sl[u].find(X), it2 = sr[u].find(X);\r\n\t\t\tU(U, u << 1, l, pos[u] - 1, x, y);\r\n\t\t\tU(U, u << 1 | 1, pos[u] + 1, r, x, y);\r\n\t\t\tres -= min(res1[u], res2[u]);\r\n\t\t\tif(it1 != sl[u].end()) { // \u5728\u5de6\u5b50\u6811\u4e2d\r\n\t\t\t\tint d1 = sr[u].order_of_key(X), d2 = sr[u].order_of_key(Y);\r\n\t\t\t\tres1[u] += d2 - d1, res2[u] += d1 - d2, del.ep(make_tuple(u, 0, X, Y));\r\n\t\t\t} else {\r\n\t\t\t\tint d1 = sl[u].order_of_key(X), d2 = sl[u].order_of_key(Y);\r\n\t\t\t\tres1[u] += d1 - d2, res2[u] += d2 - d1, del.ep(make_tuple(u, 1, X, Y));\r\n\t\t\t}\r\n\t\t\tres += min(res1[u], res2[u]);\r\n\t\t};\r\n\t\tMdf(Mdf, 1, 1, n - 1, x, y);\r\n\t\tMdf(Mdf, 1, 1, n - 1, y, x), swap(a[x], a[y]);\r\n\t\tfor(auto [u, f, v1, v2] : del) {\t \r\n\t\t\tauto &t = f ? sr[u] : sl[u];\r\n\t\t\tt.erase(v1), t.insert(v2);\r\n\t\t}\r\n\t\tauto print = [&](auto U, int u, int l, int r) -> void {\r\n\t\t\tif(l > r) return;\r\n\t\t\tU(U, u << 1, l, pos[u] - 1);\r\n\t\t\tU(U, u << 1 | 1, pos[u] + 1, r);\r\n\t\t\tcerr << \"!!! \" << u << \" : \";\r\n\t\t\tfor(int x : sl[u]) cerr << x << ' '; cerr << \" ; \";\r\n\t\t\tfor(int x : sr[u]) cerr << x << ' '; cerr << '\\n';\r\n\t\t};\r\n\t\t// print(print, 1, 1, n - 1);\r\n\t}; cin >> q;\r\n\tfor(int x, y; q--; )\r\n\t\tcin >> x >> y, Swap(x, y), cout << res << '\\n';\r\n}"
}