{
    "id": 209859465,
    "contestId": 1361,
    "creationTimeSeconds": 1686918073,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1361,
        "index": "F",
        "name": "Johnny and New Toy",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3300,
        "tags": [
            "data structures",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1361,
        "members": [
            {
                "handle": "hzr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1591281300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 7487,
    "memoryConsumedBytes": 1033113600,
    "source": "#include<bits/stdc++.h>\r\n#define ll long long\r\nusing namespace std;\r\nconst int maxn=400010;\r\nint i,j,k,n,m,p[maxn],w[maxn];\r\nint Fa[maxn];\r\nint find(int x){\r\n    return Fa[x]==x?x:Fa[x]=find(Fa[x]);\r\n}\r\nvoid merge(int x,int y){\r\n    int X=find(x),Y=find(y);\r\n    if(X!=Y)Fa[X]=Y;\r\n}\r\nint id[maxn],cnt;\r\nvector<int>V[maxn];\r\nnamespace st{\r\n    #define Mid ((L+R)/2)\r\n    #define ls(x) d[x].son[0]\r\n    #define rs(x) d[x].son[1]\r\n    struct node{\r\n        int Num1,Num2,son[2];\r\n        ll Ans1;\r\n    }d[maxn*100];int dNum;\r\n    void update(int rt){\r\n        d[rt].Num1=d[ls(rt)].Num1+d[rs(rt)].Num1;\r\n        d[rt].Num2=d[ls(rt)].Num2+d[rs(rt)].Num2;\r\n        d[rt].Ans1=d[ls(rt)].Ans1+d[rs(rt)].Ans1+1ll*d[ls(rt)].Num1*d[rs(rt)].Num2;\r\n        // d[rt].Ans2=d[ls(rt)].Ans2+d[rs(rt)].Ans2+1ll*d[ls(rt)].Num2*d[rs(rt)].Num1;\r\n    }\r\n    void Change(int &rt,int L,int R,int x,int op,int val){\r\n        if(!rt)rt=++dNum;\r\n        if(L==R){\r\n            if(op==1)d[rt].Num1+=val;\r\n            else d[rt].Num2+=val;\r\n        }else{\r\n            if(x<=Mid)Change(ls(rt),L,Mid,x,op,val);\r\n            else Change(rs(rt),Mid+1,R,x,op,val);\r\n            update(rt);\r\n        }\r\n    }\r\n    ll getans(int rt){\r\n        return min(d[rt].Ans1,1ll*d[rt].Num1*d[rt].Num2-d[rt].Ans1);\r\n    }\r\n}\r\nint Root[maxn],dfn[maxn],sz[maxn],D;\r\nvoid dfs(int now){\r\n    if(V[now].size()==0)dfn[now]=++D,sz[now]=1;\r\n    else{\r\n        for(int x:V[now])dfs(x),sz[now]+=sz[x];\r\n    }\r\n}\r\nll Ans;\r\nset<int>S[2][maxn];\r\nll getAns(int rt){\r\n    ll Num=0;\r\n    for(int x:S[0][rt])\r\n        for(int y:S[1][rt])\r\n            if(x>y)++Num;\r\n    return min(Num,S[0][rt].size()*S[1][rt].size()-Num);\r\n}\r\nvoid Change(int rt,int id,int val,int op){\r\n    if(V[rt].size()==0){\r\n        ;\r\n    }else{\r\n        if(sz[rt]<=30){\r\n            Ans-=getAns(rt);\r\n            if(id<=sz[V[rt][0]]){\r\n                Change(V[rt][0],id,val,op);\r\n                if(op==1)S[0][rt].insert(val);\r\n                else S[0][rt].erase(val);\r\n            }else{\r\n                Change(V[rt][1],id-sz[V[rt][0]],val,op);\r\n                if(op==1)S[1][rt].insert(val);\r\n                else S[1][rt].erase(val);\r\n            }\r\n            Ans+=getAns(rt);\r\n        }else{\r\n            Ans-=st::getans(Root[rt]);\r\n            if(id<=sz[V[rt][0]]){\r\n                Change(V[rt][0],id,val,op);\r\n                st::Change(Root[rt],1,n,val,1,op);\r\n            }else{\r\n                Change(V[rt][1],id-sz[V[rt][0]],val,op);\r\n                st::Change(Root[rt],1,n,val,2,op);\r\n            }\r\n            Ans+=st::getans(Root[rt]);\r\n        }\r\n    }\r\n    // cerr<<\"Change \"<<rt<<' '<<id<<' '<<val<<' '<<op<<\" | \"<<Ans<<endl;\r\n}\r\nvoid init(){\r\n    for(int i=1;i<=n+n;i++)Fa[i]=i;cnt=n;\r\n    for(int i=n-1;i>=1;i--){\r\n        ++cnt;\r\n        int X=find(id[i]),Y=find(id[i]+1);\r\n        Fa[X]=Fa[Y]=cnt;\r\n        V[cnt].push_back(X);\r\n        V[cnt].push_back(Y);\r\n    }\r\n    dfs(cnt);\r\n    for(int i=1;i<=n;i++)Change(cnt,i,p[i],1);\r\n}\r\nint main(){\r\n    cin>>n;\r\n    for(i=1;i<=n;i++)scanf(\"%d\",&p[i]);\r\n    for(i=1;i<n;i++)scanf(\"%d\",&w[i]),id[w[i]]=i;\r\n    cin>>m;\r\n    init();\r\n    for(i=1;i<=m;i++){\r\n        int x,y;\r\n        scanf(\"%d%d\",&x,&y);\r\n        Change(cnt,x,p[x],-1);\r\n        Change(cnt,y,p[y],-1);\r\n        swap(p[x],p[y]);\r\n        Change(cnt,x,p[x],1);\r\n        Change(cnt,y,p[y],1);\r\n        printf(\"%lld\\n\",Ans);\r\n    }\r\n}"
}