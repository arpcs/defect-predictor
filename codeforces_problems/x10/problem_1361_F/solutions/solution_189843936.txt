{
    "id": 189843936,
    "contestId": 1361,
    "creationTimeSeconds": 1674220649,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1361,
        "index": "F",
        "name": "Johnny and New Toy",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3300,
        "tags": [
            "data structures",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1361,
        "members": [
            {
                "handle": "ITworker_Z"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1591281300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 80384000,
    "source": "#include<bits/stdc++.h>\r\n#include<bits/extc++.h>\r\n#define LL long long\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\ntypedef pair<int,int> PII;\r\ntypedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> bst;\r\ninline int read(){\r\n\tint x=0,f=1;char ch;\r\n\twhile(!isdigit(ch=getchar()))if(ch=='-')f=-f;\r\n\tdo x=(x<<3)+(x<<1)+(ch^48);while(isdigit(ch=getchar()));\r\n\treturn x*f;\r\n}\r\nconst int N=1e6+5;\r\nint n,m,tot;\r\nLL ans;\r\nint f[N],g[N];\r\nstruct node{\r\n    int l,r,pos=-1;\r\n    LL val;\r\n    bst S;\r\n}T[N];\r\nint solve(int l,int r){\r\n    int x=++tot;\r\n    for(int i=l;i<=r;++i)\r\n        T[x].S.insert(f[i]);\r\n    if(l==r)return x;\r\n    int p=l;\r\n    for(int i=l+1;i<r;++i)\r\n        if(g[i]<g[p])p=i;\r\n    T[x].pos=p;\r\n    T[x].l=solve(l,p);\r\n    T[x].r=solve(p+1,r);\r\n    for(int i=l;i<=p;++i)\r\n        T[x].val+=T[T[x].r].S.order_of_key(f[i]);\r\n    ans+=min(T[x].val,(LL)T[T[x].l].S.size()*(LL)T[T[x].r].S.size()-T[x].val);\r\n    return x;\r\n}\r\nvoid update(int p,int on){\r\n    int x;\r\n    for(x=1;~T[x].pos;){\r\n        ans-=min(T[x].val,(LL)T[T[x].l].S.size()*(LL)T[T[x].r].S.size()-T[x].val);\r\n        if(on>0)T[x].S.insert(f[p]);\r\n        else T[x].S.erase(f[p]);\r\n        if(p<=T[x].pos)\r\n            T[x].val+=on*(int)T[T[x].r].S.order_of_key(f[p]),\r\n            x=T[x].l;\r\n        else\r\n            T[x].val+=on*(int)(T[T[x].l].S.size()-T[T[x].l].S.order_of_key(f[p])),\r\n            x=T[x].r;\r\n    }\r\n    if(on>0)T[x].S.insert(f[p]);\r\n    else T[x].S.erase(f[p]);\r\n    for(x=1;~T[x].pos;){\r\n        ans+=min(T[x].val,(LL)T[T[x].l].S.size()*(LL)T[T[x].r].S.size()-T[x].val);ans+=min(T[x].val,(int)T[T[x].l].S.size()*(int)T[T[x].r].S.size()-T[x].val);\r\n        if(p<=T[x].pos)x=T[x].l;\r\n        else x=T[x].r;\r\n    }\r\n}\r\nsigned main(){\r\n    n=read();\r\n    for(int i=1;i<=n;++i)f[i]=read();\r\n    for(int i=1;i<n;++i)g[i]=read();\r\n    solve(1,n);\r\n    m=read();\r\n    for(int i=1;i<=m;++i){\r\n        int x=read(),y=read();\r\n        if(x!=y){\r\n            update(x,-1),update(y,-1);\r\n            swap(f[x],f[y]);\r\n            update(x,1),update(y,1);\r\n        }\r\n        printf(\"%lld\\n\",ans);\r\n    }\r\n\treturn 0;\r\n}\r\n"
}