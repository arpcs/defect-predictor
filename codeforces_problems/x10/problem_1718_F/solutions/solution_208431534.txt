{
    "id": 208431534,
    "contestId": 1718,
    "creationTimeSeconds": 1685887154,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1718,
        "index": "F",
        "name": "Burenka, an Array and Queries",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 3300,
        "tags": [
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1718,
        "members": [
            {
                "handle": "llingy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1660660500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 208,
    "timeConsumedMillis": 2199,
    "memoryConsumedBytes": 33177600,
    "source": "// LUOGU_RID: 112067477\n// 6th gen\r\n#include<iostream>\r\n#include<map>\r\n#include<cstring>\r\n#include<algorithm>\r\nusing namespace std;\r\nnamespace lly\r\n{\r\n    constexpr int N=1e5+5,B=320;using ll=long long;using lll=__int128;constexpr lll tl1=1;\r\n    int pri[N],tot=0;bool vis[N];\r\n    inline void init(int n)\r\n    {\r\n        for(int i=2;i<=n;i++)\r\n        {\r\n            if(!vis[i]) pri[++tot]=i;\r\n            for(int j=i+i;j<=n;j+=i) vis[j]=true;\r\n        }\r\n    }\r\n    int n,m;\r\n    map<lll,int>mp;\r\n    int tp[N],tpt=0;\r\n    inline int dfs(int dep,int pm,int fl)\r\n    {\r\n        if(dep==tpt+1) return m/pm*fl;\r\n        int ans=0;\r\n        if(tp[dep]<=m/pm) ans+=dfs(dep+1,pm*tp[dep],-fl);\r\n        ans+=dfs(dep+1,pm,fl);\r\n        return ans;\r\n    }\r\n    inline int get(lll st)\r\n    {\r\n        if(mp.find(st)!=mp.end()) return mp[st];\r\n        else return mp[st]=dfs(1,1,1);\r\n    }\r\n    int a[N],sm[N][70];\r\n    struct Q{int l,r,id;}qs[N];\r\n    int t[N],ct[N],f[N],bel[N],ans[N];\r\n    inline void add(int x)\r\n    {\r\n        if(x==1) return;\r\n        if(!(t[x]++)) ct[m/x]++;\r\n    }\r\n    inline void del(int x)\r\n    {\r\n        if(x==1) return;\r\n        if(!(--t[x])) ct[m/x]--;\r\n    }\r\n    inline void work()\r\n    {\r\n        ios::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);\r\n        init(100000);int q;cin>>n>>m>>m>>q;\r\n        for(int i=1;i<=n;i++)\r\n        {\r\n            cin>>a[i];\r\n            memcpy(sm[i],sm[i-1],sizeof(sm[i-1]));\r\n            for(int j=1;j<=65;j++)\r\n            {\r\n                if(a[i]%pri[j]) continue;\r\n                sm[i][j]++;\r\n                while(a[i]%pri[j]==0) a[i]/=pri[j];\r\n            }\r\n        }\r\n        for(int i=1;i<=q;i++) cin>>qs[i].l>>qs[i].r,qs[i].id=i;\r\n        for(int i=1;i<=n;i++) bel[i]=(i-1)/B+1;\r\n        sort(qs+1,qs+q+1,[](const Q&x,const Q&y){return bel[x.l]<bel[y.l]||(bel[x.l]==bel[y.l]&&((bel[x.l]&1)?x.r<y.r:x.r>y.r));});\r\n        int l=1,r=0;\r\n        for(int i=1;i<=q;i++)\r\n        {\r\n            while(r<qs[i].r) add(a[++r]);\r\n            while(l>qs[i].l) add(a[--l]);\r\n            while(r>qs[i].r) del(a[r--]);\r\n            while(l<qs[i].l) del(a[l++]);\r\n            for(int j=1;j<=B;j++) f[j]=1;\r\n            lll st=0;tpt=0;\r\n            for(int j=1;j<=65;j++)\r\n            {\r\n                if(sm[l-1][j]!=sm[r][j])\r\n                {\r\n                    st|=tl1<<j;\r\n                    for(int k=pri[j];k<=B;k+=pri[j]) f[k]=0;\r\n                    tp[++tpt]=pri[j];\r\n                }\r\n            }\r\n            ans[qs[i].id]=get(st);\r\n            for(int j=1;j<=B;j++) f[j]+=f[j-1],ans[qs[i].id]-=ct[j]*f[j];\r\n        }\r\n        for(int i=1;i<=q;i++) cout<<ans[i]<<\"\\n\";\r\n    }\r\n}\r\nint main()\r\n{\r\n    #ifdef llydebug\r\n    freopen(\".in\",\"r\",stdin);\r\n    #endif\r\n    lly::work();\r\n    return 0;\r\n}"
}