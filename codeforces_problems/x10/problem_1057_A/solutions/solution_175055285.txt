{
    "id": 175055285,
    "contestId": 1057,
    "creationTimeSeconds": 1665179243,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1057,
        "index": "A",
        "name": "Bmail Computer Network",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 900,
        "tags": [
            "*special",
            "dfs and similar",
            "trees"
        ]
    },
    "author": {
        "contestId": 1057,
        "members": [
            {
                "handle": "Dilwar5625"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1539335100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 24064000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int mx = 2000010;\r\nvector<int>vec[mx + 5];\r\n\r\nint main()\r\n{\r\n    int node, edge;\r\n    cin>>node>>edge;\r\n    while(edge--)\r\n    {\r\n        int x,y;\r\n        cin>>x>>y;\r\n        vec[x].push_back(y);\r\n        vec[y].push_back(x);\r\n    }\r\n    int dis[node + 5];\r\n    int vis[node + 5];\r\n    int parent[node + 5];\r\n    for(int i = 1; i <= node; i++)dis[i] = 0;\r\n    for(int i = 1; i <= node; i++)vis[i] = 0;\r\n    for(int i = 1; i <= node; i++)parent[i] = 0;\r\n    queue<int>qu;\r\n    qu.push(1);\r\n    vis[1] = 1;\r\n    dis[1] = 0;\r\n    parent[1] = 0;\r\n    while(!qu.empty())\r\n    {\r\n        int k = qu.front();\r\n        qu.pop();\r\n        for(auto child : vec[k])\r\n        {\r\n            if(vis[child] == 0)\r\n            {\r\n                vis[child] = 1;\r\n                qu.push(child);\r\n                dis[child] = dis[k] + 1;\r\n                parent[child] = k;\r\n            }\r\n        }\r\n    }\r\n    /*for(int i = 1; i <= node; i++)\r\n        cout<<dis[i]<<\" \";*/\r\n    vector<int>path;\r\n    int x = node;\r\n    while(x != 0)\r\n    {\r\n        path.push_back(x);\r\n        x = parent[x];\r\n    }\r\n    reverse(path.begin(), path.end());\r\n    for(int i = 0; i < path.size(); i++)\r\n        cout<<path[i]<<\" \";\r\n    cout<<\"\\n\";\r\n}\r\n"
}