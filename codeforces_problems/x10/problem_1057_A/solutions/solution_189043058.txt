{
    "id": 189043058,
    "contestId": 1057,
    "creationTimeSeconds": 1673562963,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1057,
        "index": "A",
        "name": "Bmail Computer Network",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 900,
        "tags": [
            "*special",
            "dfs and similar",
            "trees"
        ]
    },
    "author": {
        "contestId": 1057,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1539335100
    },
    "programmingLanguage": "Node.js",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 32358400,
    "source": "\"use strict\"\n\nconst readline = require(\"readline\")\n\nlet linesCount = 2\nlet routerCount\nlet routersConns = []\nconst routers = new Map()\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n  terminal: false,\n})\n\nrl.on(\"line\", function (line) {\n  if (linesCount === 2) {\n    routerCount = parseInt(line, 10)\n    linesCount--\n    return\n  }\n\n  if (linesCount === 1) {\n    routersConns = line.split(\" \").map(l => parseInt(l, 10))\n    linesCount--\n  }\n\n  if (linesCount == 0) {\n    rl.emit(\"end\")\n    rl.close()\n    return\n  }\n})\n\nrl.on(\"end\", () => {\n  main()\n})\n\nconst main = () => {\n  const path = [routerCount]\n  \n  for (let i = 1; i <= routerCount; i++) {\n    routers.set(i, undefined)\n  }\n\n  for (const [idx, value] of routersConns.entries()) {\n    routers.set(idx+2, value)\n  }\n\n  let i = routerCount\n  while(path[path.length-1] != 1) {\n    const parent = routers.get(i)\n    path.push(parent)\n    i = parent\n  }\n\n  console.log(path.sort().join(\" \"))\n}\n\n\t\t \t    \t   \t \t \t  \t\t  \t\t\t \t \t\t"
}