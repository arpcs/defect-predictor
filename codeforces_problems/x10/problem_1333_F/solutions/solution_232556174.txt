{
    "id": 232556174,
    "contestId": 1333,
    "creationTimeSeconds": 1699820893,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1333,
        "index": "F",
        "name": "Kate and imperfection",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2200,
        "tags": [
            "greedy",
            "implementation",
            "math",
            "number theory",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1333,
        "members": [
            {
                "handle": "DaviHenrique"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586356500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 116,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 2048000,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n#define endl \"\\n\"\nconst int N = 500000;\nint n;\nint md[N + 1];\nvoid build(){\n  md[1] = 1;\n  for(int i = 1; i <= n; i++){\n    for(int j = 2; j * i <= n; j++){\n      md[i * j] = i;\n    }\n  }\n}\nint main(){\n  cin.tie(0)->sync_with_stdio(0);\n  cin >> n;\n  build();\n  sort(md+1, md+n+1);\n  for(int i = 1; i < n; i++){\n    cout << md[i + 1] << \" \";\n  }\n  cout << endl;\n  return 0;\n}\n"
}