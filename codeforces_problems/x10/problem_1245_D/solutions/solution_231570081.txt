{
    "id": 231570081,
    "contestId": 1245,
    "creationTimeSeconds": 1699267334,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1245,
        "index": "D",
        "name": "Shichikuji and Power Grid",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "dsu",
            "graphs",
            "greedy",
            "shortest paths",
            "trees"
        ]
    },
    "author": {
        "contestId": 1245,
        "members": [
            {
                "handle": "crazytanker34"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1572618900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 499,
    "memoryConsumedBytes": 108441600,
    "source": "#include <bits/stdc++.h>\r\n#define fori(i,a,b) for(int i = a;i <= b;i ++)\r\n#define fore(i,a,b) for(int i = a;i >= b;i --)\r\n#define pb push_back\r\n#define pii pair<int,int>\r\nusing namespace std;\r\ntypedef long long ll;\r\nint const N = 3e6 + 10;\r\nint x[N],y[N],c[N],k[N];\r\nint n;ll res;\r\nint root[N];\r\nint get(int u)\r\n{\r\n    if(root[u] < 0) return u;\r\n    return root[u] = get(root[u]);\r\n}\r\nstruct black{int u,v;ll va;};\r\nblack pos[N];\r\nbool cmp(black A,black B)\r\n{\r\n    return A.va < B.va;\r\n}\r\nvoid add(int u,int v)\r\n{\r\n    u = get(u);\r\n    v = get(v);\r\n    if(root[u] > root[v]) swap(u,v);\r\n    root[u] += root[v];\r\n    root[v] = u;\r\n}\r\nmain()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n    if(fopen(\"1.inp\",\"r\"))\r\n    {\r\n        freopen(\"1.inp\",\"r\",stdin);\r\n        freopen(\"1.out\",\"w\",stdout);\r\n    }\r\n    cin >> n;\r\n    fori(i,1,n) cin >> x[i] >> y[i];\r\n    fori(i,1,n) cin >> c[i];\r\n    fori(i,1,n) cin >> k[i];\r\n    int o = 0;\r\n    fori(i,0,n) root[i] = -1;\r\n    fori(i,1,n)\r\n    {\r\n        fori(j,i,n)\r\n        {\r\n            if(i == j) pos[++ o] = {0,i,c[i]};\r\n            else\r\n            {\r\n                 int dis = abs(x[i] - x[j]) + abs(y[i] - y[j]);\r\n                 pos[++ o] = {i,j,1ll * (k[i] + k[j]) * dis};\r\n            }\r\n        }\r\n    }\r\n    sort(pos + 1,pos + o + 1,cmp);\r\n    vector<int> ans;\r\n    vector<pii> e;\r\n    fori(i,1,o)\r\n    {\r\n        int u = pos[i].u;\r\n        int v = pos[i].v;\r\n        int w = pos[i].va;\r\n        if(get(u) == get(v)) continue;\r\n        res += w;\r\n        add(u,v);\r\n        if(u == 0) ans.pb(v);\r\n        else e.pb({u,v});\r\n    }\r\n    cout << res << \"\\n\";\r\n    cout << ans.size() << \"\\n\";\r\n    for(auto v : ans) cout << v << \" \";\r\n    cout << \"\\n\";\r\n    cout << e.size() << \"\\n\";\r\n    for(auto [u,v] : e) cout << u << \" \" << v << \"\\n\";\r\n\treturn 0;\r\n}\r\n"
}