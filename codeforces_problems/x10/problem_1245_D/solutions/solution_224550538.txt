{
    "id": 224550538,
    "contestId": 1245,
    "creationTimeSeconds": 1695352398,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1245,
        "index": "D",
        "name": "Shichikuji and Power Grid",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "dsu",
            "graphs",
            "greedy",
            "shortest paths",
            "trees"
        ]
    },
    "author": {
        "contestId": 1245,
        "members": [
            {
                "handle": "peepdamonster"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1572618900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 716,
    "memoryConsumedBytes": 50585600,
    "source": "// #pragma GCC optimize(\"Ofast,unroll-loops\")\r\n// #pragma GCC target(\"avx2,popcnt,lzcnt,abm,bmi,bmi2,fma,tune=native\")\r\n// #pragma expected_value\r\n// #pragma isolated_call\r\n// #pragma disjoint\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define ld long double\r\n#define pb push_back\r\n#define setpre(i) setprecision(i)<<fixed\r\n#define foru(i, a, b) for(int i=a;i<=b;++i)\r\n#define ford(i, a, b) for(int i=a;i>=b;--i)\r\n#define mp make_pair\r\n#define moo cout<<\"moo \"\r\n#define fi first\r\n#define se second\r\n\r\nll lmod = 1e9 + 7;\r\ntypedef vector<int> vi;\r\ntypedef vector< vector<int> > vvi;\r\ntypedef pair<int, int> ii;\r\ntypedef pair<double, double> dd;\r\n\r\nint dsu[2001];\r\nint find(int x) { return dsu[x] < 0 ? x : dsu[x] = find(dsu[x]); }\r\nbool join(int x, int y){\r\n    x = find(x); y = find(y);\r\n    if(x == y) return false;\r\n\r\n    if(dsu[x] > dsu[y]) swap(x, y);\r\n    dsu[x] += dsu[y];\r\n    dsu[y] = x;\r\n    return true;\r\n}\r\n\r\nstruct edge{\r\n    int x, y; ll cost;\r\n    edge(int x, int y, ll cost): x(x), y(y), cost(cost) {};\r\n    const bool operator >(const edge &other) const { return cost > other.cost; }\r\n};\r\n\r\npriority_queue< edge, vector<edge>, greater<edge> > pq;\r\nll ans = 0;\r\nvector<ii> edges;\r\nvi pos;\r\n\r\nvoid MST(){\r\n    memset(dsu, -1, sizeof dsu);\r\n    while(!pq.empty()){\r\n        auto u = pq.top(); pq.pop();\r\n        if(join(u.x, u.y)){\r\n            if(!u.x) pos.pb(u.y);\r\n            else edges.emplace_back(u.x, u.y);\r\n            ans += u.cost;\r\n        }\r\n    }\r\n}\r\n\r\nll c[2001], k[2001];\r\nll x[2001], y[2001];\r\n\r\n\r\nint main(){\r\n    #ifdef LOCAL\r\n    freopen(\"input.inp\", \"r\", stdin);\r\n    freopen(\"output.out\", \"w\", stdout);\r\n    #endif\r\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n\r\n    int n; cin >> n;\r\n    foru(i, 1, n) cin >> x[i] >> y[i];\r\n    foru(i, 1, n) {\r\n        cin >> c[i];\r\n        pq.emplace(0, i, c[i]);\r\n    }\r\n    foru(i, 1, n) cin >> k[i];\r\n    foru(i, 1, n - 1) foru(j, i + 1, n) pq.emplace(i, j, (k[i] + k[j]) * (abs(x[i] - x[j]) + abs(y[i] - y[j])));\r\n\r\n    MST();\r\n\r\n    cout << ans << '\\n';\r\n\r\n    cout << pos.size() << '\\n';\r\n    for(int i: pos) cout << i << '\\n';\r\n\r\n    cout << edges.size() << '\\n';\r\n    for(auto i: edges) cout << i.fi << \" \" << i.se << '\\n';\r\n\r\n    return 0;\r\n}"
}