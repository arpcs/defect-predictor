{
    "id": 231945800,
    "contestId": 1245,
    "creationTimeSeconds": 1699451138,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1245,
        "index": "D",
        "name": "Shichikuji and Power Grid",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1900,
        "tags": [
            "dsu",
            "graphs",
            "greedy",
            "shortest paths",
            "trees"
        ]
    },
    "author": {
        "contestId": 1245,
        "members": [
            {
                "handle": "himanshupatil45h"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1572618900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 264,
    "memoryConsumedBytes": 51609600,
    "source": "#include <bits/stdc++.h>\r\n#define Mxv 100010\r\n#define inf 1000000000\r\n#define linf 1000000000000000000\r\n#define fi first\r\n#define se second\r\n#define ll long long\r\n// #define u unsigned\r\n#define null NULL\r\n#define pb push_back\r\n#define ob pop_back\r\n#define scan(arr,n) for(int i=0;i<n;i++) cin>>arr[i]\r\n#define print(arr,n) for(int i=0;i<n;i++) cout<<arr[i]<<\" \"\r\n#define printR(arr,n) for(int i=n-1;i>=0;i--) cout<<arr[i]<<\" \"\r\n#define len size()\r\n#define mins(a,b) a = min(a,b)\r\n#define maxs(a,b) a = max(a,b)\r\n#define TLE ios::sync_with_stdio(0),cin.tie(0),cout.tie(0)\r\nusing namespace std;\r\nconst int mod = 1e9+7;\r\n\r\nint Parent[2010];\r\nint Rank[2010];\r\nint getParent(int i)\r\n{\r\n\tif(Parent[i] == i) return i;\r\n\treturn getParent(Parent[i]);\r\n}\r\nvoid Union(int a,int b)\r\n{\r\n\tint parent_A = getParent(a);\r\n\tint parent_B = getParent(b);\r\n\tif(Rank[parent_A] >= Rank[parent_B])\r\n\t{\r\n\t\tParent[parent_B] = parent_A;\r\n\t\tRank[parent_A] += Rank[parent_B];\r\n\t}\r\n\telse\r\n\t{\r\n\t\tParent[parent_A] = parent_B;\r\n\t\tRank[parent_B] += Rank[parent_A];\r\n\t}\r\n}\r\nbool isCycle(int u,int v)\r\n{\r\n\treturn getParent(u) == getParent(v);\r\n}\r\n\r\nint main()\r\n{\r\n\tTLE;\r\n\t// int t,google=1;cin>>t;\r\n\t// while(t--)\r\n\t// {\r\n\t\tint n;cin>>n;\r\n\t\tfor(int i=0;i<=n;i++) Parent[i] = i,Rank[i]=1;\r\n\t\tvector<pair<int,int>> city(n);\r\n\t\tvector<pair<ll,pair<int,int>>> edges;\r\n\t\tvector<int> ps(n),w(n);\r\n\r\n\t\tfor(int i=0;i<n;i++) cin>>city[i].fi>>city[i].se;\r\n\t\tscan(ps,n);\r\n\t\tscan(w,n);\r\n\t\t\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tfor(int j=i+1;j<n;j++)\r\n\t\t\t{\r\n\t\t\t\tll dist = (w[i] + w[j]) *1ll* (abs(city[i].fi-city[j].fi) + abs(city[i].se-city[j].se));\r\n\t\t\t\tedges.pb({dist,{i,j}});\r\n\t\t\t}\r\n\t\t\tedges.pb({ps[i],{n,i}});\r\n\t\t}\r\n\r\n\t\t// for(auto &i:edges)\r\n\t\t// \tcout<<i.fi<<\",\"<<i.se.fi<<\" \"<<i.se.se<<\"\\n\";\r\n\r\n\t\tsort(edges.begin(),edges.end());\r\n\t\tvector<bool> taked(edges.size(),false);\r\n\t\tvector<int> powerStation;\r\n\t\tll amount = 0,cnt=0;\r\n\t\tfor(int i=0;i<edges.size();i++)\r\n\t\t{\r\n\t\t\tint u = edges[i].se.fi,v = edges[i].se.se;\r\n\t\t\tif(!isCycle(u,v))\r\n\t\t\t{\r\n\t\t\t\tUnion(u,v);\r\n\t\t\t\ttaked[i] = true;\r\n\t\t\t\tcnt++;\r\n\t\t\t\tamount += edges[i].fi;\r\n\t\t\t\tif(u == n) powerStation.pb(v+1),taked[i]=false,cnt--;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcout<<amount<<\"\\n\";\r\n\t\tcout<<powerStation.size()<<\"\\n\";\r\n\t\tprint(powerStation,powerStation.size());cout<<\"\\n\";\r\n\t\tcout<<cnt<<\"\\n\";\r\n\t\tfor(int i=0;i<edges.size();i++)\r\n\t\t\tif(taked[i]) cout<<edges[i].se.fi+1<<\" \"<<edges[i].se.se+1<<\"\\n\";\r\n\t// }\r\n}\r\n \r\n \r\n \r\n/*\r\n\r\n\t8 -1 -4 2 6 -3\r\n\r\n\t-4 -3 -1 2 6 8\r\n\r\n\t-4 3 1 2 6 8\r\n\t-4 1 2 3 6 8\r\n\r\n*/"
}