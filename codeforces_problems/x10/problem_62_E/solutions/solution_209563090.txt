{
    "id": 209563090,
    "contestId": 62,
    "creationTimeSeconds": 1686658924,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 62,
        "index": "E",
        "name": "World Evil",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2700,
        "tags": [
            "dp",
            "flows"
        ]
    },
    "author": {
        "contestId": 62,
        "members": [
            {
                "handle": "Lyamzin_alexandr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1298649600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 614400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nvector<vector<ll>> g, f, c;\r\nvector<ll> d, ptr;\r\nll t;\r\nll dfs(ll v, ll C = 1e18) {\r\n    if (C == 0) return 0;\r\n    if (v == t) return C;\r\n    for (; ptr[v] < (ll)g[v].size(); ++ptr[v]) {\r\n        if (d[g[v][ptr[v]]] <= d[v]) continue;\r\n        ll z = dfs(g[v][ptr[v]], min(C, c[v][ptr[v]]));\r\n        if (z) {\r\n            c[v][ptr[v]] -= z;\r\n            f[v][ptr[v]] += z;\r\n            for (ll j = 0; j < (ll)g[g[v][ptr[v]]].size(); ++j) {\r\n                if (g[g[v][ptr[v]]][j] == v) {\r\n                    c[g[v][ptr[v]]][j] += z;\r\n                    f[g[v][ptr[v]]][j] -= z;\r\n                    break;\r\n                }\r\n            }\r\n            ++ptr[v];\r\n            return z;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    ll n, m;\r\n    cin >> n >> m;\r\n    vector<vector<ll>> H(m - 1, vector<ll>(n)), V(m, vector<ll>(n));\r\n    g.resize(n * m + 2);\r\n    f.resize(n * m + 2);\r\n    c.resize(n * m + 2);\r\n    t = n * m + 1;\r\n    for (ll i = 0; i < m - 1; ++i) {\r\n        for (ll j = 0; j < n; ++j) {\r\n            cin >> H[i][j];\r\n            g[i * n + j].push_back((i + 1) * n + j), f[i * n + j].push_back(0), c[i * n + j].push_back(H[i][j]);\r\n            //g[(i + 1) * n + j].push_back(i * n + j), f[(i + 1) * n + j].push_back(0), c[(i + 1) * n + j].push_back(H[i][j]);\r\n        }\r\n    }\r\n    for (ll i = 0; i < m; ++i) {\r\n        for (ll j = 0; j < n; ++j) {\r\n            cin >> V[i][j];\r\n            g[i * n + j].push_back(i * n + (j + 1) % n), f[i * n + j].push_back(0), c[i * n + j].push_back(V[i][j]);\r\n            g[i * n + (j + 1) % n].push_back(i * n + j), f[i * n + (j + 1) % n].push_back(0), c[i * n + (j + 1) % n].push_back(V[i][j]);\r\n        }\r\n    }\r\n    for (ll i = 0; i < n; ++i) g[n * m].push_back(i), f[n * m].push_back(0), c[n * m].push_back(1e18);\r\n    for (ll i = 0; i < n; ++i) g[(m - 1) * n + i].push_back(n * m + 1), f[(m - 1) * n + i].push_back(0), c[(m - 1) * n + i].push_back(1e18);\r\n    for (ll l = 0; l < 100; ++l) {\r\n        d.assign(n * m + 2, -1);\r\n        d[n * m] = 0;\r\n        vector<ll> q = {n * m};\r\n        for (ll i = 0; i < (ll)q.size(); ++i) {\r\n            for (ll j = 0; j < (ll)g[q[i]].size(); ++j) {\r\n                if (d[g[q[i]][j]] == -1 && c[q[i]][j]) d[g[q[i]][j]] = d[q[i]] + 1, q.push_back(g[q[i]][j]);\r\n            }\r\n        }\r\n        if (d[n * m + 1] == -1) break;\r\n        ptr.assign(n * m + 2, 0);\r\n        while (dfs(n * m));\r\n    }\r\n    ll ans = 0;\r\n    for (auto z : f[n * m]) ans += z;\r\n    cout << ans;\r\n}"
}