{
    "id": 207954839,
    "contestId": 62,
    "creationTimeSeconds": 1685532804,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 62,
        "index": "E",
        "name": "World Evil",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2700,
        "tags": [
            "dp",
            "flows"
        ]
    },
    "author": {
        "contestId": 62,
        "members": [
            {
                "handle": "namis"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1298649600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 18,
    "timeConsumedMillis": 1216,
    "memoryConsumedBytes": 9011200,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <vector>\r\n\r\nconst long long INF = 1234567890123456789LL;\r\n\r\nint main() {\r\n    std::ios_base::sync_with_stdio(false);\r\n    std::cin.tie(nullptr);\r\n\r\n    int n, m;\r\n    std::cin >> n >> m;\r\n    std::vector<std::vector<int>> h(100100, std::vector<int>(6));\r\n    std::vector<std::vector<int>> v(100100, std::vector<int>(6));\r\n    std::vector<int64_t> cur(64, INF);\r\n    std::vector<int64_t> pre(64);\r\n    std::vector<int64_t> sh(64);\r\n    std::vector<int64_t> sv(64);\r\n    for (int i = 1; i < m; ++i) {\r\n        for (int j = 0; j < n; ++j) {\r\n            std::cin >> h[i][j];\r\n        }\r\n    }\r\n    for (int i = 0; i < m; ++i) {\r\n        for (int j = 0; j < n; ++j) {\r\n            std::cin >> v[i][j];\r\n        }\r\n    }\r\n    cur[0] = 0;\r\n\r\n    for (int i = 1; i < m; ++i) {\r\n        std::copy(cur.begin(), cur.end(), pre.begin());\r\n        std::fill(cur.begin(), cur.end(), INF);\r\n        cur[0] = 0;\r\n\r\n        sh[0] = sv[0] = 0;\r\n        for (int j = 1; j < (1 << n); ++j) {\r\n            int k = __builtin_ctz(j);\r\n            sh[j] = sh[j ^ (1 << k)] + h[i][k];\r\n            sv[j] = sv[j ^ (1 << k)] + v[i][k];\r\n        }\r\n        for (int j = 0; j < (1 << n); ++j) {\r\n            for (int k = 0; k < (1 << n); ++k) {\r\n                cur[j] = std::min(cur[j], pre[k] + sh[j ^ k]);\r\n            }\r\n            cur[j] += sv[j ^ (j >> 1) ^ ((j & 1) << (n - 1))];\r\n        }\r\n    }\r\n    std::cout << cur[(1 << n) - 1];\r\n    return 0;\r\n}"
}