{
    "id": 233840162,
    "contestId": 1726,
    "creationTimeSeconds": 1700670626,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "F",
        "name": "Late For Work (submissions are not allowed)",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2900,
        "tags": [
            "data structures",
            "greedy",
            "schedules",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "Sparkle_Twilight"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 4812800,
    "source": "#include<bits/stdc++.h>\r\ntemplate <typename _Tp>void read(_Tp &x){\r\n\tchar ch=getchar();bool f=false;while(!isdigit(ch))f|=ch=='-',ch=getchar();\r\n\tx=ch&15,ch=getchar();while(isdigit(ch))x=x*10+(ch&15),ch=getchar();\r\n\tif(f)x=-x;\r\n}\r\ntemplate <typename _Tp,typename... Args>void read(_Tp &t,Args &...args){read(t);read(args...);}\r\nconst int N=200005;typedef long long ll;\r\nll l[N],r[N],d[N];\r\nint main(){\r\n\tint n,t;read(n,t);\r\n\tauto norm=[&](ll x){return (x%t+t)%t;};\r\n\tfor(int i=1,g,c;i<=n;++i)read(g,c),l[i]=norm(-c),r[i]=norm(g-c);\r\n\tfor(int i=1;i<n;++i)read(d[i]),d[i]+=d[i-1];\r\n\tstd::map<int,ll> dp;for(int i=1;i<=n;++i)l[i]=norm(l[i]-d[i-1]),r[i]=norm(r[i]-d[i-1]),dp[l[i]]=dp[norm(r[i]-1)]=0;\r\n\tauto get=[&](int x){auto it=dp.find(x);return it==dp.end()?1e18:it->second;};\r\n\tfor(int i=1;i<=n;++i){\r\n\t\tif(l[i]<=r[i]){\r\n\t\t\tll mn=get(l[i]);for(auto it=dp.lower_bound(r[i]);it!=dp.end();it=dp.erase(it))mn=std::min(mn,it->second+(t-it->first)+l[i]);\r\n\t\t\tfor(auto it2=dp.begin();it2!=dp.end()&&it2->first<l[i];it2=dp.erase(it2))mn=std::min(mn,it2->second+l[i]-it2->first);\r\n\t\t\tdp[l[i]]=mn;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tll mn=get(l[i]);for(auto it2=dp.lower_bound(r[i]);it2!=dp.end()&&it2->first<l[i];it2=dp.erase(it2))mn=std::min(mn,it2->second+l[i]-it2->first);\r\n\t\t\tdp[l[i]]=mn;\r\n\t\t}\r\n\t}\r\n\tll mn=1e18;for(const auto &it:dp)mn=std::min(mn,it.second);\r\n\tprintf(\"%lld\\n\",mn+d[n-1]);\r\n\treturn 0;\r\n}"
}