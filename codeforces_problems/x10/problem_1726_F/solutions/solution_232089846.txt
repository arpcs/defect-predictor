{
    "id": 232089846,
    "contestId": 1726,
    "creationTimeSeconds": 1699542409,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "F",
        "name": "Late For Work (submissions are not allowed)",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2900,
        "tags": [
            "data structures",
            "greedy",
            "schedules",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "Sparkle_Twilight"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 6348800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long LL;\r\nconst int N=200005;\r\nconst LL MAX=1e15+7;\r\nint n,t;\r\nint g[N],c[N];\r\nstruct qq{\r\n\tint l,r,id;\r\n\tbool operator<(const qq&x)const{\r\n\t\treturn r<x.r;\r\n\t}\r\n};\r\nint reg (LL x)\r\n{\r\n\tx%=t;\r\n\treturn x<0?x+t:x;\r\n}\r\nLL d[N];\r\nint L[N],R[N];\r\nLL f[N];\r\nset<qq> S;\r\nset<qq> :: iterator split(int x)\r\n{\r\n\tauto it=S.lower_bound({0,x,0});\r\n\tif (it==S.end()||it->l==x) return it;\r\n\tauto now=*it;\r\n\tS.erase(now);\r\n\tS.insert({now.l,x-1,now.id});\r\n\treturn S.insert({x,now.r,now.id}).first;\r\n}\r\nvoid cover (int l,int r,int x)\r\n{\r\n\tif (l<=r)\r\n\t{\r\n\t\tauto ed=split(r+1);\r\n\t\tauto st=split(l);\r\n\t\tfor (auto it=st;it!=ed;)\tS.erase(it++);\r\n\t\tS.insert({l,r,x});\r\n\t}\r\n\telse\t{cover(l,t-1,x);cover(0,r,x);}\r\n}\r\nint main()\r\n{\r\n\tscanf(\"%d%d\",&n,&t);\r\n\tfor (int u=1;u<=n;u++) scanf(\"%d%d\",&g[u],&c[u]);\r\n\tfor (int u=1;u<n;u++) {scanf(\"%d\",&d[u]);d[u]+=d[u-1];}\r\n\tfor (int u=1;u<=n;u++)\r\n\t{\r\n\t\tc[u]=reg((LL)c[u]+d[u-1]);\r\n\t\tL[u]=reg(-c[u]);\r\n\t\tR[u]=reg(L[u]+g[u]);\r\n\t}\r\n\tS.insert({0,t-1,n+1});\r\n\tf[n+1]=0;\r\n\tfor (int u=n;u>=1;u--)\r\n\t{\r\n\t\tauto it=S.lower_bound({0,L[u],0});\r\n\t\tf[u]=f[it->id]+(it->id==n+1?0:reg(L[it->id]-L[u]));\r\n\t\tcover(R[u],L[u],u);\r\n\t}\r\n\tLL ans=MAX;\r\n\tfor (auto xx:S)\r\n\t{\r\n\t\tif (xx.id==n+1) ans=0;\r\n\t\telse\t\t\tans=min(ans,f[xx.id]+reg(L[xx.id]-xx.r));\r\n\t}\r\n\tprintf(\"%lld\\n\",ans+d[n-1]);\r\n\treturn 0;\r\n}"
}