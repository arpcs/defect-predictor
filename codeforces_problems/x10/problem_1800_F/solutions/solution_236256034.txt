{
    "id": 236256034,
    "contestId": 1800,
    "creationTimeSeconds": 1701975458,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1800,
        "index": "F",
        "name": "Dasha and Nightmares",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "bitmasks",
            "hashing",
            "meet-in-the-middle",
            "strings"
        ]
    },
    "author": {
        "contestId": 1800,
        "members": [
            {
                "handle": "Taha_adeel"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1677767700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 46,
    "timeConsumedMillis": 2058,
    "memoryConsumedBytes": 28160000,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define FAST ios::sync_with_stdio(0); cin.tie(0)\ntemplate<class T> struct V: vector<T>{using vector<T>::vector;\n    void sort()        { std::sort(this->begin(), this->end()); }\n    void sort_dsc()    { std::sort(this->begin(), this->end(), greater<T>()); }\n    auto sum()         { T sum = 0; for(auto& i: *this) sum += i; return sum; }\n    auto freqs()       { map<T, int> freq; for(auto& i: *this) freq[i]++; return freq; }\n    auto indices()     { int n=this->size(); map<T, V<int>> ii; for(int i=0; i<n; i++) ii[(*this)[i]].push_back(i); return ii; }\n    auto prefix_sums() { int n=this->size(); V<T> ps(n+1,0); for(int i=0; i<n; i++) ps[i+1] = ps[i]+(*this)[i]; return ps; }\n    friend ostream& operator<<(ostream& out, const V<T>& v) { for(auto& i: v) out << i << ' '; return out; }\n    friend istream& operator>>(istream& in, V<T>& v)        { for(auto& i: v) in >> i; return in; }\n};\n#define pY {cout << \"YES\"; return;}\n#define pN {cout << \"NO\";  return;}\n#define display(x) if(x) pY else pN\n\n#define FOR(i, n)     for(int i = 0; i < (int)n; ++i)\n#define FOR1(i, n)    for(int i = 1; i <= (int)n; ++i)\n#define ROF(i, n)     for(int i = (int)n-1; i >= 0; --i)\n#define all(v)        v.begin(), v.end()\n#define pb push_back\n\nconstexpr char nl = '\\n';\nconstexpr int MOD = 1000000007;\nusing ll  = long long int;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\nusing vi  = V<int>;\nusing vll = V<ll>;\n\n/*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*/\n\nvoid solve() {\n    int n; cin >> n;\n    V<string> s(n); cin >> s;\n\n    vi a(n), b(n);\n    FOR(i, n) {\n        for(auto& c: s[i]) {\n            a[i] |= (1 << (c - 'a')); // Whether s[i] contains c or not\n            b[i] ^= (1 << (c - 'a')); // Whether s[i] contains odd number of c or not\n        }\n    }\n\n    ll ans = 0;\n    FOR(c, 26) {\n        map<int, ll> freqs;\n        FOR(i, n) {\n            if((a[i] & (1 << c)) == 0) {\n                freqs[b[i]]++;\n            }\n        }\n\n        int mask = ((1 << 26) - 1) ^ (1 << c);\n        for(auto& [k, f]: freqs) {\n            if(freqs.count(k ^ mask))\n                ans += f * freqs[k ^ mask];\n        }\n    }\n\n    cout << ans / 2;\n}\n\nint main() {\n    FAST;\n    solve();\n    cout << nl;\n    \n    return 0;\n}"
}