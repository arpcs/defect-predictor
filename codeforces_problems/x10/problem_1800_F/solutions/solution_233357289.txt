{
    "id": 233357289,
    "contestId": 1800,
    "creationTimeSeconds": 1700339928,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1800,
        "index": "F",
        "name": "Dasha and Nightmares",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "bitmasks",
            "hashing",
            "meet-in-the-middle",
            "strings"
        ]
    },
    "author": {
        "contestId": 1800,
        "members": [
            {
                "handle": "broniy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1677767700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 1060,
    "memoryConsumedBytes": 15462400,
    "source": "#include <iostream>\r\n#include <bits/stdc++.h>\r\n#include <stack>\r\n\r\n\r\ntypedef long long ll;\r\n\r\ntypedef std::pair<int, int> pp;\r\nconst int INF = INT_MAX >> 1;\r\nconst int MOD = 1e9 + 7;\r\n\r\nconst int MAX = 2e5;\r\n\r\n\r\nint main() {\r\n    int n;\r\n    std::cin >> n;\r\n    std::vector<std::string> srr(n);\r\n    std::vector<int> arr(n, 0);\r\n    std::vector<int> brr(n, 0);\r\n    for (auto &s: srr) std::cin >> s;\r\n\r\n    for (int i=0; i<n; i++) {\r\n        for (char c: srr[i]) {\r\n            arr[i] |= (1<<(c-'a'));\r\n            brr[i] ^= (1 << (c-'a'));\r\n        }\r\n    }\r\n    ll result = 0;\r\n    for (int i=0; i<26; i++) {\r\n        std::vector<int> crr;\r\n        for (int j=0; j<n; j++) {\r\n            if (arr[j]>>i & 1^1) crr.push_back(brr[j]);\r\n        }\r\n        std::sort(crr.begin(), crr.end());\r\n        for (int a: crr) {\r\n            int b = (-1 & ((1<<26 - 1)^(1<<i))) ^ a;\r\n            auto j1 = std::lower_bound(crr.begin(), crr.end(), b);\r\n            auto j2 = std::upper_bound(crr.begin(), crr.end(), b);\r\n            result += j2-j1;\r\n        }\r\n\r\n    }\r\n    std::cout << result/2 << std::endl;\r\n\r\n}\r\n\r\n\r\n"
}