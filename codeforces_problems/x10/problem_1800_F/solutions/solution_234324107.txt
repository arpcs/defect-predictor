{
    "id": 234324107,
    "contestId": 1800,
    "creationTimeSeconds": 1700940801,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1800,
        "index": "F",
        "name": "Dasha and Nightmares",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "bitmasks",
            "hashing",
            "meet-in-the-middle",
            "strings"
        ]
    },
    "author": {
        "contestId": 1800,
        "members": [
            {
                "handle": "28leoleo28"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1677767700
    },
    "programmingLanguage": "Java 17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 686,
    "memoryConsumedBytes": 23244800,
    "source": "import java.util.*;\r\nimport java.io.*;\r\nimport java.math.*;\r\npublic class Main{\r\n    static PrintWriter out = new PrintWriter(System.out);\r\n    static class FastScanner {\r\n    \t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n    \t\tStringTokenizer st = new StringTokenizer(\"\");\r\n    \t\tString next() {\r\n    \t\t\twhile (!st.hasMoreTokens())\r\n    \t\t\t\ttry {\r\n    \t\t\t\t\tst = new StringTokenizer(br.readLine());\r\n    \t\t\t\t} catch (IOException e) {\r\n    \t\t\t\t\te.printStackTrace();\r\n    \t\t\t\t}\r\n    \t\t\treturn st.nextToken();\r\n    \t\t}\r\n    \t\tint nextInt() {\r\n    \t\t\treturn Integer.parseInt(next());\r\n    \t\t}\r\n    \t\tlong nextLong() {\r\n    \t\t\treturn Long.parseLong(next());\r\n    \t\t}\r\n    \t\tString nextString() {\r\n    \t\t    return new String(next().toCharArray());\r\n    \t\t}\r\n    \t\tint[] readIntArr(int n){\r\n    \t\t    int[] arr = new int[n+1];\r\n    \t\t    for(int i=1;i<=n;i++) arr[i]=nextInt();\r\n    \t\t    return arr;\r\n    \t\t}\r\n    \t\tlong[] readLongArr(int n){\r\n    \t\t    long[] arr = new long[n+1];\r\n    \t\t    for(int i=1;i<=n;i++) arr[i]=nextLong();\r\n    \t\t    return arr;\r\n    \t\t}\r\n\t   }\r\n     public static void main(String []args) throws Exception\r\n     {  \r\n\t\t    solve();\r\n\t\t    out.close();\r\n     }\r\n     public static void solve() throws Exception{\r\n        FastScanner fs = new FastScanner();\r\n        int n = fs.nextInt();\r\n        long ans=0;\r\n  \t    Map<Integer,Integer> map=new HashMap<>();\r\n  \t    int mask = (1<<26)-1;\r\n  \t    for(int i=1;i<=n;i++){\r\n  \t      String s =fs.nextString();\r\n  \t      int len = s.length();\r\n  \t      int[] cnt = new int[26];\r\n  \t      for(int j=0;j<len;j++) cnt[s.charAt(j)-'a']++;\r\n  \t      int num = 0;\r\n  \t      for(int j=0;j<26;j++){\r\n  \t        if(cnt[j]%2==1) num = num |(1<<j);\r\n  \t      }\r\n  \t      for(int j=0;j<26;j++){\r\n  \t        int tar = mask^(1<<j);\r\n  \t        if((num | tar)!=tar) continue;\r\n  \t        tar = tar^num;\r\n  \t        ans+=map.getOrDefault(tar,0);\r\n  \t      }\r\n  \t      map.put(num,map.getOrDefault(num,0)+1);\r\n  \t    }\r\n\t    \r\n\t    \r\n\r\n        \r\n        out.println(ans);\r\n     }\r\n}"
}