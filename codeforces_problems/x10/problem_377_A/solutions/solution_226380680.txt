{
    "id": 226380680,
    "contestId": 377,
    "creationTimeSeconds": 1696312964,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 377,
        "index": "A",
        "name": "Maze",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1600,
        "tags": [
            "dfs and similar"
        ]
    },
    "author": {
        "contestId": 377,
        "members": [
            {
                "handle": "mohitaggar2008"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1388331000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 89,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 21504000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef vector<int> vi;\r\ntypedef vector<vi> vvi;\r\ntypedef vector<string> vs;\r\ntypedef vector<ll> vll;\r\n vi dir={0,1,0,-1,0};\r\n\r\nvoid MakeKWalls(int x,int y, int &k, vs& arr, vvi &visi){\r\n        if(k==0) return;\r\n        \r\n\r\n        int n=visi.size(),m=visi[0].size();\r\n        visi[x][y]=1;\r\n        for(int d=0;d<4;++d){\r\n              int nx=x+dir[d];\r\n              int ny=y+dir[d+1];\r\n\r\n              if(nx>=0 and nx<n and ny>=0 and ny< m and arr[nx][ny]=='.' and visi[nx][ny]==0 ){\r\n                    MakeKWalls(nx,ny, k,arr, visi);\r\n              }\r\n        }\r\n        if(k>0){\r\n            arr[x][y]='X';\r\n            k--;\r\n        }\r\n}\r\n\r\nint main(){\r\n    \r\n    int n,m,k;\r\n    cin>>n>>m>>k;\r\n    \r\n    vs arr;\r\n    for(int i=0;i<n;++i){\r\n          string str;\r\n          for(int j=0;j<m;++j){\r\n               char ch;\r\n               cin>>ch;\r\n               str += ch;\r\n          }\r\n          arr.push_back(str);\r\n    }\r\n    \r\n    vvi visi(n,vi(m,0));\r\n   for(int i=0;i<n;++i){\r\n       for(int j=0;j<m;++j){\r\n            if(arr[i][j] == '.'){\r\n              MakeKWalls(i,j,k,arr,visi);\r\n            }\r\n            \r\n       }\r\n   }\r\n    \r\n    for(int i=0;i<n;++i){\r\n          cout<<arr[i]<<endl;\r\n    }\r\n    return 0;\r\n}"
}