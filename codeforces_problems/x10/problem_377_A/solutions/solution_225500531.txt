{
    "id": 225500531,
    "contestId": 377,
    "creationTimeSeconds": 1695813834,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 377,
        "index": "A",
        "name": "Maze",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1600,
        "tags": [
            "dfs and similar"
        ]
    },
    "author": {
        "contestId": 377,
        "members": [
            {
                "handle": "HK_Yato"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1388331000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 89,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 63078400,
    "source": "#include <bits/stdc++.h>\r\n#define int long long\r\n#define pb push_back\r\n#define F first\r\n#define S second\r\nusing namespace std;\r\nconst int mod=1e9 + 7;\r\nconst int N = 1e6 + 5;\r\nint t=1,n,m,k,q,c=0,cur=0,ans=0,sum=0,flag=0,mn=1e9,mx=0;\r\nint arr[N],brr[N];//,freq[N],freq2[N],cum[N];\r\nstring s,ss,srr[N];\r\nchar grid[1000][1000];\r\nint cost[1000][1000];\r\nint dx[]={0,0,1,-1};\r\nint dy[]{1,-1,0,0};\r\nqueue<pair<int,int>>an;\r\nvoid bfs(int i,int j)\r\n{\r\n    queue<pair<int,int>>qu;\r\n    cost[i][j]=0;\r\n    qu.push({i,j});\r\n    while(qu.size())\r\n    {\r\n        pair<int,int> cur=qu.front();\r\n        qu.pop();\r\n        an.push(cur);\r\n        if(an.size()>k)\r\n            an.pop();\r\n        for(int in=0;in<4;in++)\r\n        {\r\n            int newx=cur.first+dx[in];\r\n            int newy=cur.second+dy[in];\r\n            if(newx>=0 and newx<n and newy>=0 and newy<m and cost[newx][newy]==-1 and grid[newx][newy]!='#')\r\n            {\r\n                qu.push({newx,newy});\r\n                cost[newx][newy]=cost[cur.first][cur.second]+1;\r\n            }\r\n        }\r\n    }\r\n}\r\nint32_t main()\r\n{\r\n    cin.tie(0);cout.tie(0);ios::sync_with_stdio(false);\r\n    //cin>>t;\r\n    while(t--)\r\n    {\r\n        cin>>n>>m>>k;\r\n        int ans1,ans2;\r\n        for(int i=0;i<n;i++)\r\n            for(int j=0;j<m;j++)\r\n            {\r\n                cin>>grid[i][j];\r\n                cost[i][j]=-1;\r\n                if(grid[i][j]=='.')\r\n                    ans1=i,ans2=j;\r\n            }\r\n        bfs(ans1,ans2);\r\n        while(an.size())\r\n        {\r\n            pair<int,int> cur=an.front();\r\n            an.pop();\r\n            grid[cur.first][cur.second]='X';\r\n        }\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            for(int j=0;j<m;j++)\r\n                cout<<grid[i][j];\r\n            cout<<'\\n';\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"
}