{
    "id": 230882061,
    "contestId": 377,
    "creationTimeSeconds": 1698866331,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 377,
        "index": "A",
        "name": "Maze",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1600,
        "tags": [
            "dfs and similar"
        ]
    },
    "author": {
        "contestId": 377,
        "members": [
            {
                "handle": "sorokin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1388331000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 89,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 28364800,
    "source": "#include <algorithm>\r\n#include <cassert>\r\n#include <cstdint>\r\n#include <cstdlib>\r\n#include <iostream>\r\n#include <vector>\r\n\r\nvoid dfs(std::vector<std::vector<char>>& maze, size_t n, size_t m, size_t& k, size_t i, size_t j)\r\n{\r\n    assert(maze[i][j] == '.');\r\n    maze[i][j] = 'g';\r\n    if (i != 0 && maze[i - 1][j] == '.')\r\n    {\r\n        dfs(maze, n, m, k, i - 1, j);\r\n    }\r\n\r\n    if (j != 0 && maze[i][j - 1] == '.')\r\n    {\r\n        dfs(maze, n, m, k, i, j - 1);\r\n    }\r\n\r\n    if ((i + 1) != n && maze[i + 1][j] == '.')\r\n    {\r\n        dfs(maze, n, m, k, i + 1, j);\r\n    }\r\n\r\n    if ((j + 1) != m && maze[i][j + 1] == '.')\r\n    {\r\n        dfs(maze, n, m, k, i, j + 1);\r\n    }\r\n\r\n    assert(maze[i][j] == 'g');\r\n    if (k != 0)\r\n    {\r\n        --k;\r\n        maze[i][j] = 'X';\r\n    }\r\n    else\r\n    {\r\n        maze[i][j] = 'b';\r\n    }\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    std::ios_base::sync_with_stdio(false);\r\n    std::cin.tie(nullptr);\r\n\r\n    size_t n, m, k;\r\n    std::cin >> n >> m >> k;\r\n\r\n    std::vector<std::vector<char>> maze;\r\n    for (size_t i = 0; i != n; ++i)\r\n    {\r\n        std::vector<char> row;\r\n        for (size_t j = 0; j != m; ++j)\r\n        {\r\n            char c;\r\n            std::cin >> c;\r\n            row.push_back(c);\r\n        }\r\n\r\n        maze.push_back(std::move(row));\r\n    }\r\n\r\n    size_t start_i, start_j;\r\n\r\n    for (size_t i = 0; i != n; ++i)\r\n    {\r\n        for (size_t j = 0; j != m; ++j)\r\n        {\r\n            if (maze[i][j] == '.')\r\n            {\r\n                start_i = i;\r\n                start_j = j;\r\n                goto found_start;\r\n            }\r\n        }\r\n    }\r\n\r\nfound_start:\r\n    dfs(maze, n, m, k, start_i, start_j);\r\n\r\n    for (size_t i = 0; i != n; ++i)\r\n    {\r\n        for (size_t j = 0; j != m; ++j)\r\n        {\r\n            char c = maze[i][j];\r\n            assert(c != 'g');\r\n\r\n            if (c == 'b')\r\n                c = '.';\r\n\r\n            std::cout << c;\r\n        }\r\n        std::cout << '\\n';\r\n    }\r\n}\r\n"
}