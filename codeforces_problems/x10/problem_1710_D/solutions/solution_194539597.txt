{
    "id": 194539597,
    "contestId": 1710,
    "creationTimeSeconds": 1677049753,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1710,
        "index": "D",
        "name": "Recover the Tree",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 3400,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1710,
        "members": [
            {
                "handle": "joke3579"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658673300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 28,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 4096000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std; \r\n#define inline __attribute__((__gnu_inline__, __always_inline__, __artificial__)) inline\r\nusing pii = pair<int,int>; using vi = vector<int>; using vp = vector<pii>; using ll = long long; \r\nusing ull = unsigned long long; using db = double; using ld = long double; \r\ntemplate<typename T1, typename T2> T1 max(T1 a, T2 b) { return a > b ? a : b; }\r\ntemplate<typename T1, typename T2> T1 min(T1 a, T2 b) { return a < b ? a : b; }\r\n#define multi int T; cin >> T; while ( T -- )\r\n#define timer cerr << 1. * clock() / CLOCKS_PER_SEC << '\\n';\r\n#define iot ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\r\n#define file(x) freopen(#x\".in\", \"r\", stdin), freopen(#x\".out\", \"w\", stdout)\r\n#define rep(i,s,t) for (register int i = (s), i##_ = (t) + 1; i < i##_; ++ i)\r\n#define pre(i,s,t) for (register int i = (s), i##_ = (t) - 1; i > i##_; -- i)\r\n#define eb emplace_back\r\n#define pb pop_back\r\nconst int N = 2e3 + 10;\r\nint n, fa[N];\r\nchar ch[N][N];\r\n\r\nsigned main() {\r\n\tmulti {\r\n\t\tcin >> n;\r\n\t\trep(i,1,n) cin >> ch[i] + i, fa[i] = i;\r\n\t\trep(i, 1, n) pre(j, i - 1, 1) if(ch[j][i] == '1' and fa[i] > j) {\r\n\t\t\tcout << j << ' ' << i << '\\n';\r\n\t\t\tif(fa[fa[i] - 1] > j) {\r\n\t\t\t\tcout << j << ' ' << fa[i] - 1 << '\\n';\r\n\t\t\t\tpre(k, fa[fa[i] - 1] - 1, j + 1) if (fa[k] == k) \r\n\t\t\t\t\tcout << i << ' ' << k << '\\n';\r\n\t\t\t} rep(k, j, i) fa[k] = fa[j];\r\n\t\t}\r\n\t}\r\n} "
}