{
    "id": 196056330,
    "contestId": 1710,
    "creationTimeSeconds": 1677958780,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1710,
        "index": "D",
        "name": "Recover the Tree",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 3400,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1710,
        "members": [
            {
                "handle": "hrazvan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658673300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define MAXN 5100\r\ntypedef pair<int,int> pii;\r\nint n;\r\nchar good[MAXN][MAXN];\r\nint lv[MAXN],rv[MAXN];\r\nvector<pii> ans;\r\n\r\n\r\nvoid work()\r\n{\r\n\tans.clear();\r\n\tcin>>n;\r\n\tfor (int i=1;i<=n;i++)\r\n\t{\r\n\t\tlv[i]=rv[i]=i;\r\n\t\tcin>>(good[i]+i);\r\n\t}\r\n\tfor (int len=2;len<=n;len++)\r\n\t\tfor (int l=1;l<=n+1-len;l++)\r\n\t\t{\r\n\t\t\tint r=l+len-1;\r\n\t\t\tif (good[l][r]=='1' && lv[l]!=lv[r] && rv[l]!=rv[r])\r\n\t\t\t{\r\n\t\t\t\tans.push_back({l,r});\r\n\t\t\t\tvector<int> tmp[2];\r\n\t\t\t\tint id=1;\r\n\t\t\t\ttmp[0].push_back({l});\r\n\t\t\t\ttmp[1].push_back({r});\r\n\t\t\t\tfor (int i=rv[l]+1;i<lv[r];i++)\r\n\t\t\t\t\tif (lv[i]==i)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tans.push_back({tmp[id].back(),i});\r\n\t\t\t\t\t\ttmp[id].push_back(i);\r\n\t\t\t\t\t\tid^=1;\r\n\t\t\t\t\t}\r\n\t\t\t\tint lm=lv[l];\r\n\t\t\t\tint rm=rv[r];\r\n\t\t\t\tfor (int i=lm;i<=rm;i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tlv[i]=lm;\r\n\t\t\t\t\trv[i]=rm;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\tfor (auto p:ans)\r\n\t\tcout<<p.first<<' '<<p.second<<endl;\r\n}\r\n\r\nint main()\r\n{\r\n\tint casenum=1;\r\n\tcin>>casenum;\r\n\tfor (int testcase=1;testcase<=casenum;testcase++)\r\n\t\twork();\r\n\treturn 0;\r\n}"
}