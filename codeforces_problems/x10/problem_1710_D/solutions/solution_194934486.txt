{
    "id": 194934486,
    "contestId": 1710,
    "creationTimeSeconds": 1677335854,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1710,
        "index": "D",
        "name": "Recover the Tree",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 3400,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1710,
        "members": [
            {
                "handle": "dqstz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658673300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 4403200,
    "source": "// LUOGU_RID: 103032820\n#include<bits/stdc++.h>\r\n#define Yukinoshita namespace\r\n#define Yukino std\r\nusing Yukinoshita Yukino;\r\nint read()\r\n{\r\n\tint s=0;\r\n\tchar ch=getchar();\r\n\twhile(ch<'0'||ch>'9') ch=getchar();\r\n\twhile(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();\r\n\treturn s;\r\n}\r\nconst int mxn=2005;\r\nchar t[mxn][mxn];\r\nint f[mxn],p[mxn];\r\nvoid addedge(int x,int y)\r\n{\r\n\tif(x>y) swap(x,y);\r\n\tf[y]=x;\r\n}\r\nvector<int> yukino(vector<int> pos)\r\n{\r\n\tif(pos.size()<=2) return pos;\r\n\tint n=pos.size(),i,cnt=1;\r\n\tvector<int> res;\r\n\tassert(n!=3);\r\n\tp[0]=1;\r\n\tfor(i=4;i<n;i+=2)\r\n\t\tp[cnt++]=i;\r\n\tp[cnt++]=3,p[cnt++]=0;\r\n\tfor(i=5;i<n;i+=2)\r\n\t\tp[cnt++]=i;\r\n\tp[cnt++]=2;\r\n\tfor(i=0;i<cnt;i++)\r\n\t\tres.push_back(pos[p[i]]);\r\n\treturn res;\r\n} \r\nvoid dfs(int l,int r)\r\n{\r\n\tif(l>=r) return;\r\n\tt[l][r]='0';\r\n\tint i,j,pre,nxt;\r\n\tfor(i=l;i<=r;i++)\r\n\t\tpre=t[l][i]=='1'?i:pre;\r\n\tfor(i=r;i>=l;i--)\r\n\t\tnxt=t[i][r]=='1'?i:nxt;\r\n\t//cout<<l<<' '<<r<<':'<<pre<<' '<<nxt<<endl;\r\n\tif(pre>=nxt)\r\n\t{\r\n\t\tdfs(l,nxt-1),dfs(nxt,pre),dfs(pre+1,r);\r\n\t\taddedge(nxt-1,nxt),addedge(pre,pre+1);\r\n\t\treturn;\r\n\t}\r\n\tvector<int> pos;\r\n\tfor(i=l;i<=r;i=pre+1)\r\n\t{\r\n\t\tpos.push_back(i);\r\n\t\tfor(j=i;j<=r;j++)\r\n\t\t\tif(t[i][j]=='1')\r\n\t\t\t\tpre=j;\r\n\t\tdfs(i,pre); \r\n\t}\r\n\tpos=yukino(pos);\r\n\tfor(i=1;i<pos.size();i++)\r\n\t\taddedge(pos[i-1],pos[i]);\r\n}\r\nint main()\r\n{\r\n\tint T=read(),n,i;\r\n\twhile(T--)\r\n\t{\r\n\t\tn=read();\r\n\t\tfor(i=1;i<=n;i++)\r\n\t\t\tscanf(\"%s\",t[i]+i);\r\n\t\tdfs(1,n);\r\n\t\tfor(i=2;i<=n;i++)\r\n\t\t\tprintf(\"%d %d\\n\",i,f[i]);\r\n\t}\r\n} "
}