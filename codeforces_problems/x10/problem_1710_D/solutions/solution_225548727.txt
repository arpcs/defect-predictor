{
    "id": 225548727,
    "contestId": 1710,
    "creationTimeSeconds": 1695833766,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1710,
        "index": "D",
        "name": "Recover the Tree",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 3400,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 1710,
        "members": [
            {
                "handle": "rzh123"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1658673300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 28,
    "timeConsumedMillis": 780,
    "memoryConsumedBytes": 3993600,
    "source": "// LUOGU_RID: 126411248\n// \u611f\u89c9\u7ec6\u8282\u633a\u591a\u7684\n\n#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <numeric>\n#include <algorithm>\n#include <utility>\n#include <cassert>\nusing namespace std;\nconstexpr int N=2005;\nint n;\nbool con[N][N];\nvector<pair<int,int> > ans;\npair<int,int> rg[N];\nint pos[N];\nvoid adde(int u,int v){\n\t// printf(\"adde %d %d\\n\",u,v);\n\tans.emplace_back(u,v);\n}\nsigned main(){\n\tint Tcnt;scanf(\"%d\",&Tcnt);\n\twhile(Tcnt--){\n\t\tscanf(\"%d\",&n);\n\t\tans.clear();\n\t\tfor(int i{1};i<=n;++i){\n\t\t\trg[i]=make_pair(i,i);\n\t\t\tpos[i]=i;\n\t\t\tfor(int j{i};j<=n;++j){\n\t\t\t\tchar c;\tscanf(\" %c\",&c);\n\t\t\t\tcon[i][j]=con[j][i]=(c=='1');\n\t\t\t}\n\t\t}\n\t\tfor(int len{2};len<=n;++len){\n\t\t\tfor(int l{1};l<=n-len+1;++l){\n\t\t\t\tint r{l+len-1};\n\t\t\t\tif(!con[l][r]) continue;\n\t\t\t\tint i{pos[l]},j{pos[r]};\n\t\t\t\tif(i==j) continue;\n\t\t\t\t// printf(\"l=%d(%d[%d,%d]),r=%d(%d[%d,%d])\\n\",l,i,rg[i].first,rg[i].second,r,j,rg[j].first,rg[j].second);\n\t\t\t\t// assert(l>=rg[i].first&&l<=rg[i].second);\n\t\t\t\t// assert(r>=rg[j].first&&r<=rg[j].second);\n\t\t\t\tadde(l,r);\n\t\t\t\tif(rg[i].second+1<rg[j].first){\n\t\t\t\t\tadde(l,rg[j].first-1);\n\t\t\t\t\tfor(int k{i+1};k<=j-2;++k){\n\t\t\t\t\t\tif(pos[rg[k].second]!=k||pos[rg[k].first]!=k) continue;\n\t\t\t\t\t\tif(pos[rg[k].second+1]==j) break;\n\t\t\t\t\t\tadde(rg[k].second,r);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\trg[j].first=rg[i].first;\n\t\t\t\tfor(int p{rg[i].first};p<=rg[j].second;++p){\n\t\t\t\t\tpos[p]=j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(auto pr:ans) printf(\"%d %d\\n\",pr.first,pr.second);\n\t}\n\treturn 0;\n}\n\n/*\n\u6027\u8d28\uff1a\n(S1,S2 \u662f\u533a\u95f4) \u5982\u679c S1 \u8fde\u901a,S2 \u8fde\u901a\uff0c\u5219\nS1\u2229S2 \u8fde\u901a\nS1\u222aS2 \u8fde\u901a\n\n\u6bcf\u6b21\u8fde\u8fb9\u65f6\u8981\u4fdd\u8bc1\u4e0d\u6539\u53d8\u5176\u4ed6\u8fde\u901a\u5757\u7684\u8fde\u901a\u5173\u7cfb\n\u53ef\u4ee5\u4efb\u4f55\u65f6\u5019\u5206\u6210\u82e5\u5e72\u6bb5 [li,ri]\uff0c\u6bcf\u4e00\u6bb5\u5185\u90e8\u8fde\u901a\uff0c\u6bb5\u4e4b\u95f4\u4e0d\u8fde\u901a\n\u8fde\u901a L in [li,ri],R in [lj,R,rj] \u65f6\uff1a\n\t[li,ri] [l[i+1],r[i+1]] ... [l[j-1],r[j-1]] [lj,rj]\n\tadde L,R\n\tadde L--r[j-1]\n\tadde r[k]--R (i+1<=k<=j-2)\n*/\n\n/*\n1111\n 111\n  10\n   1\n\n1--4,4--2,2--3\n\n100001\n2--4--5--3\n\n1001\n*/"
}