{
    "id": 233879907,
    "contestId": 486,
    "creationTimeSeconds": 1700727030,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 486,
        "index": "D",
        "name": "Valid Sets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "dfs and similar",
            "dp",
            "math",
            "trees"
        ]
    },
    "author": {
        "contestId": 486,
        "members": [
            {
                "handle": "Flaming_Blade"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1415718000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 204800,
    "source": "// LUOGU_RID: 136467494\n//3:20\n#include <bits/stdc++.h>//\u55b5\u5185\uff5e\n#define re register//\u55b5\u5185\uff5e\n#define int long long\nusing namespace std;//\u55b5\u5185\uff5e\ntypedef long long ll;\ntypedef long double ld;\nconst int N = 2005;//\u55b5\u5185\uff5e\u8981\u586b\u6570\u5b57\u54df\uff5e\nconst int Mod = 1e9 + 7;\ninline int read(){\n    int s = 0,f = 1;char c = getchar();\n    while (!isdigit(c)){if (c == '-')f = -1;c = getchar();}\n    while (isdigit(c)){s = (s<<3) + (s<<1) + (c ^ 48);c = getchar();}\n    return s * f;\n}//\u55b5\u5185\uff5e\nint d,n;\nint head[N],cnt,sum,vis[N],ans,rnk[N];\nint f[N];\nstruct s{\n    int id,val;\n    friend bool operator < (const s x,const s y){\n        return x.val < y.val;\n    }\n}a[N];\nstruct node{\n    int v,next;\n}tree[N << 1];\nvoid add(int u,int v){\n    tree[++cnt].next = head[u];\n    tree[cnt].v = v;\n    head[u] = cnt;\n}\nvoid dfs(int u,int father,int tar){\n    f[u] = 1;\n    if (a[rnk[u]].val > tar + d || a[rnk[u]].val < tar) return;\n    if (vis[u])return;\n    int sum = 1;\n    for (int i = head[u];i;i=tree[i].next){\n        int v = tree[i].v;if (v == father) continue;\n        dfs(v,u,tar);\n        sum = sum * f[v] % Mod;\n    }\n    f[u] = (f[u] + sum) % Mod;\n}\nsigned main(){\n    d = read(),n = read();\n    for (int i=1;i<=n;i++) a[i] = (s){i,read()};\n    for (int i=1,u,v;i < n;i++){\n        u = read();v = read();\n        add(u,v);add(v,u);\n    }\n    sort(a+1,a+n+1);\n    for (int i=1;i<=n;i++)\n        rnk[a[i].id] = i;\n    for (int i=1;i<=n;i++){//minnum : a[i],all value should be in [a[i],a[i] + d]\n        memset(f,0,sizeof(f));\n        int tmp = 1;\n        for (int j = head[a[i].id];j;j = tree[j].next){\n            dfs(tree[j].v,a[i].id,a[i].val);\n            tmp = tmp * f[tree[j].v] % Mod;\n        }\n        //cout << a[i].id << \" \" << tmp << endl;\n        ans = (ans + tmp) % Mod;\n        vis[a[i].id] = 1;\n    }\n    cout << ans << endl;\n    return 0;\n}//\u55b5\u5185\uff5e\n/*\n*/"
}