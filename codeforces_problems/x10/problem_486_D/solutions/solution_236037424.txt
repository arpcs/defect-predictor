{
    "id": 236037424,
    "contestId": 486,
    "creationTimeSeconds": 1701862925,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 486,
        "index": "D",
        "name": "Valid Sets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "dfs and similar",
            "dp",
            "math",
            "trees"
        ]
    },
    "author": {
        "contestId": 486,
        "members": [
            {
                "handle": "Ryuga_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1415718000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 204800,
    "source": "/*If we keep holding onto yesterday, what are we going to be tomorrow?*/\r\n\r\n\r\n#include<bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n#define int long long int \r\nbool debugg = false;\r\n#define dbg if(debugg)\r\n#define F first \r\n#define S second \r\ntemplate <typename T>\r\nusing order_set = tree<T, null_type,less<T>, rb_tree_tag,tree_order_statistics_node_update>;\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());  \r\n\r\nconst int N = 2003 , M = 1000000007;\r\nvector<int>g[N];\r\nint a[N] , d , n;;\r\nint dfs(int u , int p , int root)\r\n{\r\n    int ans = 1;\r\n    for(auto v : g[u]){\r\n        if(v == p) continue;\r\n        int dif = a[v] - a[root];\r\n        if(dif < 0 || dif > d) continue;\r\n        if(dif == 0 && v < root) continue;\r\n        ans = (ans * (1 + dfs(v , u , root))) % M;\r\n    }\r\n\r\n    return ans;\r\n}\r\n\r\nvoid solve()\r\n{\r\n    \r\n    cin >> d >> n;\r\n    for(int i = 1 ; i <= n ; i ++) cin >> a[i];\r\n    for(int i = 0 ; i < n - 1 ; i ++){\r\n        int u , v;\r\n        cin >> u >> v;\r\n        g[u].push_back(v);\r\n        g[v].push_back(u);\r\n    }\r\n    int ans = 0;\r\n    for(int i = 1 ; i <= n ; i ++){\r\n        \r\n        ans = (ans + dfs(i , 0 , i)) % M;\r\n    }\r\n\r\n    cout << ans << '\\n';\r\n}\r\n\r\n\r\n\r\nint32_t main()\r\n{\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n        \r\n    int t  = 1;\r\n    //cin >> t;\r\n    \r\n    while(t--){\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n\r\n}"
}