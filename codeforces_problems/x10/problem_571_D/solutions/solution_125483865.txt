{
    "id": 125483865,
    "contestId": 571,
    "creationTimeSeconds": 1628600770,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 571,
        "index": "D",
        "name": "Campus",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 3100,
        "tags": [
            "binary search",
            "data structures",
            "dsu",
            "trees"
        ]
    },
    "author": {
        "contestId": 571,
        "members": [
            {
                "handle": "juruo_hjr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1440261000
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 81,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 45772800,
    "source": "#include <bits/stdc++.h>\r\n#define LL long long\r\n\r\nusing namespace std;\r\n\r\nconst int maxn = 5e5 + 5;\r\n\r\nstruct uset {\r\n\tint cnt, t[maxn], sz[maxn], blg[maxn];\r\n\tint find(int x) {\r\n\t\twhile (blg[x] != x) x = blg[x];\r\n\t\treturn x;\r\n\t}\r\n\tvoid merge(int ti, int x, int y) {\r\n\t\tx = find(x), y = find(y);\r\n\t\tif (x == y) return ;\r\n\t\tif (sz[x] < sz[y]) swap(x, y);\r\n\t\tsz[x] += sz[y], blg[y] = x, t[y] = ti;\r\n\t}\r\n\tvoid init(int count) {\r\n\t\tcnt = count;\r\n\t\tfor (int i = 1; i <= cnt; i++) sz[i] = 1, blg[i] = i;\r\n\t}\r\n} a, b;\r\n\r\nint usd[maxn];\r\nvector< pair<int, LL> > oper[maxn];\r\n\r\nint main() {\r\n\t// freopen(\"test.in\", \"r\", stdin);\r\n\t// freopen(\"test.out\", \"w\", stdout);\r\n\tint n, m; scanf(\"%d%d\", &n, &m);\r\n\ta.init(n), b.init(n);\r\n\tfor (int i = 1; i <= n; i++) oper[i].push_back(make_pair(-1, 0ll));\r\n\tfor (int ti = 1; ti <= m; ti++) {\r\n\t\tchar cmd = getchar(); int x, y;\r\n\t\twhile (cmd != 'U' && cmd != 'M' && cmd != 'A' && cmd != 'Z' && cmd != 'Q')\r\n\t\t\tcmd = getchar();\r\n\t\tif (cmd == 'U') scanf(\"%d%d\", &x, &y), a.merge(ti, x, y);\r\n\t\telse if (cmd == 'M') scanf(\"%d%d\", &x, &y), b.merge(ti, x, y);\r\n\t\telse if (cmd == 'A') {\r\n\t\t\tscanf(\"%d\", &x), x = a.find(x);\r\n\t\t\toper[x].push_back(make_pair(ti, oper[x].back().second + a.sz[x]));\r\n\t\t} else if (cmd == 'Z') scanf(\"%d\", &x), x = b.find(x), usd[x] = ti;\r\n\t\telse {\r\n\t\t\tscanf(\"%d\", &x); \r\n\t\t\tint tag = usd[x], pos = x, l; LL ans = 0;\r\n\t\t\twhile (b.blg[pos] != pos) {\r\n\t\t\t\tif (usd[b.blg[pos]] > b.t[pos]) tag = max(tag, usd[b.blg[pos]]);\r\n\t\t\t\tpos = b.blg[pos];\r\n\t\t\t}\r\n\t\t\tl = lower_bound(oper[x].begin(), oper[x].end(), make_pair(tag, 0ll)) - oper[x].begin();\r\n\t\t\tans += oper[x].back().second - oper[x][l - 1].second;\r\n\t\t\twhile (a.blg[x] != x) {\r\n\t\t\t\tint bx = a.blg[x];\r\n\t\t\t\tl = lower_bound(oper[bx].begin(), oper[bx].end(), make_pair(max(tag, a.t[x]), 0ll)) - oper[bx].begin();\r\n\t\t\t\tans += oper[bx].back().second - oper[bx][l - 1].second;\r\n\t\t\t\tx = bx;\r\n\t\t\t}\r\n\t\t\tprintf(\"%lld\\n\", ans);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
}