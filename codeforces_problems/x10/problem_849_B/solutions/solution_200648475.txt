{
    "id": 200648475,
    "contestId": 849,
    "creationTimeSeconds": 1680592133,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 849,
        "index": "B",
        "name": "Tell Your World",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1600,
        "tags": [
            "brute force",
            "geometry"
        ]
    },
    "author": {
        "contestId": 849,
        "members": [
            {
                "handle": "kasiru_69"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504272900
    },
    "programmingLanguage": "Java 11",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 0,
    "source": "import java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\npublic class Main\r\n{\r\n    static final PrintWriter out =new PrintWriter(System.out);\r\n    static final FastReader sc = new FastReader();\r\n    /*\r\n                       _oo0oo_\r\n                      o8888888o\r\n                      88\" . \"88\r\n                      (| -_- |)\r\n                      0\\  =  /0\r\n                    ___/`---'\\___\r\n                  .' \\\\|     |// '.\r\n                 / \\\\|||  :  |||// \\\r\n                / _||||| -:- |||||- \\\r\n               |   | \\\\\\  -  /// |   |\r\n               | \\_|  ''\\---/''  |_/ |\r\n               \\  .-\\__  '-'  ___/-. /\r\n             ___'. .'  /--.--\\  `. .'___\r\n          .\"\" '<  `.___\\_<|>_/___.' >' \"\".\r\n         | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |\r\n         \\  \\ `_.   \\_ __\\ /__ _/   .-` /  /\r\n     =====`-.____`.___ \\_____/___.-`___.-'=====\r\n                       `=---='\r\n \r\n    */\r\n     static class Pair{\r\n          int f,l;\r\n          public Pair(int first,int last)\r\n          {\r\n                this.f=first;\r\n                this.l=last;\r\n          }\r\n    }\r\n\tpublic static void main (String[] args) throws java.lang.Exception\r\n\t{\r\n\t    int tes=4;\r\n\t    lable:while(tes-->0)\r\n\t    {\r\n           int n=sc.nextInt(),i,j;\r\n           int a[]=new int[n];\r\n           for(i=0;i<n;i++) a[i]=sc.nextInt();\r\n           if(help((double)a[1]-(double)a[0],a) || help((double)a[2]-(double)a[1],a) || help(((double)a[2]-(double)a[0])/2,a)) System.out.println(\"Yes\");\r\n           else System.out.println(\"No\");\r\n\t    }\r\n\t}\r\n    public static boolean help(double val,int a[])\r\n    {\r\n        HashSet<Double> set=new HashSet<>();\r\n        for(int i=0;i<a.length;i++)\r\n        set.add(a[i]-(val*i));\r\n        return set.size()==2;\r\n    }\r\n\t public static long pow(long x, long y, long p)\r\n    {\r\n        if(y==0)\r\n            return 1;\r\n        if(y==1)\r\n            return x;\r\n        long ans=pow(x,y/2,p);\r\n        ans=(ans*ans)%p;\r\n        if(y%2==1)\r\n            ans=(ans*x)%p;\r\n        return (int)ans;\r\n    }\r\n    private static long gcd(long a, long b) {\r\n        if (b == 0)\r\n            return a;\r\n        return gcd(b, a % b);\r\n    }\r\n    private static long lcm(long a, long b) {\r\n        return (a / gcd(a, b)) * b;\r\n    }\r\n\tstatic class FastReader {\r\n        BufferedReader br;\r\n        StringTokenizer st;\r\n \r\n        public FastReader()\r\n        {\r\n            br = new BufferedReader(\r\n                new InputStreamReader(System.in));\r\n        }\r\n \r\n        String next()\r\n        {\r\n            while (st == null || !st.hasMoreElements()) {\r\n                try {\r\n                    st = new StringTokenizer(br.readLine());\r\n                }\r\n                catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n            return st.nextToken();\r\n        }\r\n \r\n        int nextInt() { return Integer.parseInt(next()); }\r\n \r\n        long nextLong() { return Long.parseLong(next()); }\r\n \r\n        double nextDouble()\r\n        {\r\n            return Double.parseDouble(next());\r\n        }\r\n \r\n        String nextLine()\r\n        {\r\n            String str = \"\";\r\n            try {\r\n                str = br.readLine();\r\n            }\r\n            catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n            return str;\r\n        }\r\n    }\r\n}"
}