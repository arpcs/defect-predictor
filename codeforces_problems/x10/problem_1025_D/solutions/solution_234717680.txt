{
    "id": 234717680,
    "contestId": 1025,
    "creationTimeSeconds": 1701162715,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1025,
        "index": "D",
        "name": "Recovering BST",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2100,
        "tags": [
            "brute force",
            "dp",
            "math",
            "number theory",
            "trees"
        ]
    },
    "author": {
        "contestId": 1025,
        "members": [
            {
                "handle": "tunglaaam2000"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1534685700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 81,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 25804800,
    "source": "#include<bits/stdc++.h>\r\n#define int long long\r\n#define pb push_back\r\n#define pii pair<int,int>\r\n#define fi first\r\n#define se second\r\nusing namespace std;\r\nconst int N=800;\r\nconst int inf=1e17;\r\nconst int mod=1e9+7;\r\nint ok[N][N],dp[N][N][4],a[N];\r\nint n;\r\nbool DP(int i,int j,int cc){\r\n    if(dp[i][j][cc]==0)return false;\r\n    if(dp[i][j][cc]==1)return true;\r\n    if(i>j)return true;\r\n    if(i==j){\r\n        if(cc&&ok[i][i-1])return true;\r\n        if(!cc&&ok[i][i+1])return true;\r\n        return false;\r\n    }\r\n    dp[i][j][cc]=0;\r\n   // if(i==1&&j==3&&cc==0)cout<<\"dsdadwa\"<<endl;\r\n    for(int k=i;k<=j;k++){\r\n        //if(i==1&&j==3&&cc==0)cout<<k<<\" \"<<\"dsdadwa\"<<endl;\r\n        if(cc==1){\r\n            if(ok[i-1][k]&&DP(i,k-1,0)&&DP(k+1,j,1)){\r\n                dp[i][j][cc]=1;\r\n                //cout<<i<<\" \"<<j<<\" \"<<cc<<endl;\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            if(ok[k][j+1]&&DP(i,k-1,0)&&DP(k+1,j,1)){\r\n                dp[i][j][cc]=1;\r\n                //cout<<i<<\" \"<<j<<\" \"<<cc<<endl;\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    //if(i==1&&j==3&&cc==0)cout<<\"dsdadwa\"<<endl;\r\n    dp[i][j][cc]=0;\r\n    return false;\r\n}\r\nmain(){\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);cout.tie(0);\r\n    //freopen(\"qtree.inp\",\"r\",stdin);\r\n    //freopen(\"qtree.out\",\"w\",stdout);\r\n    cin>>n;\r\n    for(int i=1;i<=n;i++)cin>>a[i];\r\n    for(int i=0;i<=n+1;i++)\r\n    for(int j=0;j<=n+1;j++){\r\n        if(__gcd(a[i],a[j])>1)ok[i][j]=true;\r\n        dp[i][j][0]=dp[i][j][1]=-1;\r\n    }\r\n    bool ans=false;\r\n    for(int i=1;i<=n;i++)if(DP(1,i-1,0)&&DP(i+1,n,1)){\r\n        //cout<<i;\r\n        ans=true;\r\n        break;\r\n    }\r\n    if(ans)cout<<\"Yes\";\r\n    else cout<<\"No\";\r\n}\r\n"
}