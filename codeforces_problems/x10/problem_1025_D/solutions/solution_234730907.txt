{
    "id": 234730907,
    "contestId": 1025,
    "creationTimeSeconds": 1701165554,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1025,
        "index": "D",
        "name": "Recovering BST",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2100,
        "tags": [
            "brute force",
            "dp",
            "math",
            "number theory",
            "trees"
        ]
    },
    "author": {
        "contestId": 1025,
        "members": [
            {
                "handle": "giavu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1534685700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 11,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 11980800,
    "source": "#pragma GCC optimize (\"Ofast\" , \"O3\" , \"O2\" , \"O1\")\r\n#pragma GCC target (\"avx2,bmi,bmi2,lzcnt,popcnt\")\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define f(a,b,c) for(int a=b;a<=c;++a)\r\n\r\nconst int HH = 7e2 + 5;\r\n\r\nint n , m;\r\nint a[HH];\r\nint GCD[HH][HH];\r\nint dp[HH][HH][5];\r\n\r\nint DP(int i , int j , int k){\r\n\r\n    ///++m;\r\n    if (dp[i][j][k] != -1)            return dp[i][j][k];\r\n\r\n    if (i >= j)                       return dp[i][j][k] = 1;\r\n\r\n    if (k == 1 && GCD[j][j + 1] <= 1) return dp[i][j][k] = 0;\r\n\r\n    if (k == 2 && GCD[i][i - 1] <= 1) return dp[i][j][k] = 0;\r\n\r\n    f (p , i , j){\r\n        if (k == 1 && GCD[p][p + 1] > 1) if ((DP(i , p - 1 , 1) && DP(p + 1 , j , 2))) return dp[i][j][k] = 1;\r\n        if (k == 2 && GCD[p][p - 1] > 1) if ((DP(i , p - 1 , 1) && DP(p + 1 , j , 2))) return dp[i][j][k] = 1;\r\n    }\r\n\r\n    return dp[i][j][k] = 0;\r\n}\r\n\r\n/// dp[i][j][k] la kha nang tao cay np voi k = 1 co dinh l - 1 , k = 2 co dinh r + 1\r\n\r\nmain (){\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0); cout.tie(0);\r\n\r\n    cin >> n;\r\n    f (i , 1 , n) cin >> a[i];\r\n\r\n    f (i , 0 , n + 1)\r\n        f (j , 0 , n + 1)\r\n            GCD[i][j] = __gcd(a[i] , a[j]),\r\n            dp[i][j][1] = dp[i][j][2] = -1;\r\n\r\n    int ans = 0;\r\n    f (p , 1 , n)\r\n        if (GCD[p][p - 1] > 1 && GCD[p][p + 1] > 1)\r\n            ans = max (ans , (int) (DP(1 , p - 1 , 1) && DP(p + 1 , n , 2)));\r\n\r\n    cout << (ans ? \"Yes\" : \"No\");\r\n\r\n}\r\n\r\n"
}