{
    "id": 213237137,
    "contestId": 1025,
    "creationTimeSeconds": 1689060728,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1025,
        "index": "D",
        "name": "Recovering BST",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2100,
        "tags": [
            "brute force",
            "dp",
            "math",
            "number theory",
            "trees"
        ]
    },
    "author": {
        "contestId": 1025,
        "members": [
            {
                "handle": "MOG_SD"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1534685700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 81,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 88678400,
    "source": "#include<bits/stdc++.h>\r\n#define il inline\r\n#define _(d) while(d(isdigit(ch=getchar())))\r\nusing namespace std;\r\nconst int N=701;\r\nint n,g[N][N],a[N];bitset<N> f[N][N],vis[N][N];\r\nil int read(){\r\n    int x,f=1;char ch;\r\n    _(!)ch=='-'?f=-1:f;x=ch^48;\r\n    _()x=(x<<1)+(x<<3)+(ch^48);\r\n    return f*x;\r\n}\r\nil int gcd(int x,int y){\r\n    return x==0?y:gcd(y%x,x);\r\n}\r\nil bool search(int l,int r,int rt){\r\n    if(l>r)return 1;if(l==r)return !g[l][rt];\r\n    if(vis[l][r][rt])return f[l][r][rt];\r\n    for(int i=l;i<=r;i++){\r\n        if(!g[i][rt]&&search(l,i-1,i)&&search(i+1,r,i)){\r\n            f[l][r][rt]=1;break;\r\n        }\r\n    }\r\n    vis[l][r][rt]=1;return f[l][r][rt];\r\n}\r\nint main()\r\n{\r\n    n=read();\r\n    for(int i=1;i<=n;i++)a[i]=read();\r\n    for(int i=1;i<=n;i++)for(int j=1;j<=n;j++){\r\n        if(gcd(a[i],a[j])==1)g[i][j]=1;\r\n    }\r\n    if(search(1,n,0))puts(\"Yes\");else puts(\"No\");\r\n    return 0;\r\n}"
}