{
    "id": 223072108,
    "contestId": 1025,
    "creationTimeSeconds": 1694515890,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1025,
        "index": "D",
        "name": "Recovering BST",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2100,
        "tags": [
            "brute force",
            "dp",
            "math",
            "number theory",
            "trees"
        ]
    },
    "author": {
        "contestId": 1025,
        "members": [
            {
                "handle": "Ljc07"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1534685700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 81,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 6041600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define IOS ios::sync_with_stdio(false), cin.tie(nullptr)\r\n#define xx first\r\n#define yy second\r\n#define lowbit(x) (x & (-x))\r\n// #define int long long\r\n#define db long double\r\nmt19937 rnd((unsigned int)chrono::steady_clock::now().time_since_epoch().count());\r\ntypedef pair<int, int> pii;\r\nconst int inf = 0x3f3f3f3f, N = 710, M = 2 * N;\r\nconst int mod = 1e9 + 7;\r\nconst double PI = acos(-1);\r\nint f[N][N][2], g[N][N], n, val[N];\r\nsigned main()\r\n{\r\n    IOS;\r\n    cin >> n;\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        cin >> val[i];\r\n        f[i][i][0] = f[i][i][1] = 1;\r\n    }\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        for (int j = i; j <= n; j++)\r\n        {\r\n            if (__gcd(val[i], val[j]) != 1)\r\n            {\r\n                g[i][j] = g[j][i] = 1;\r\n            }\r\n        }\r\n    }\r\n    for (int len = 2; len <= n; len++)\r\n    {\r\n        for (int l = 1; l + len - 1 <= n; l++)\r\n        {\r\n            int r = l + len - 1;\r\n            for (int k = l; k < r; k++)\r\n            {\r\n                if (f[l][k][0] && f[k + 1][r][1])\r\n                {\r\n                    if (g[l][k + 1])\r\n                        f[l][r][1] = 1;\r\n                    if (g[r][k])\r\n                        f[l][r][0] = 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    int flag = 0;\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        flag |= f[1][i][1] & f[i][n][0];\r\n    }\r\n    if (flag)\r\n        cout << \"YES\\n\";\r\n    else\r\n        cout << \"NO\\n\";\r\n    return 0;\r\n}"
}