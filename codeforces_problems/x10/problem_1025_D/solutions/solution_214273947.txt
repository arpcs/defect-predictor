{
    "id": 214273947,
    "contestId": 1025,
    "creationTimeSeconds": 1689641387,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1025,
        "index": "D",
        "name": "Recovering BST",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2100,
        "tags": [
            "brute force",
            "dp",
            "math",
            "number theory",
            "trees"
        ]
    },
    "author": {
        "contestId": 1025,
        "members": [
            {
                "handle": "bkifhr10"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1534685700
    },
    "programmingLanguage": "C# 10",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<cstdio>\nusing namespace std;\nint l[705][705],r[705][705];\nint b[705][705],a[705];\nint f[705][705];\nint gcd(int a,int b)\n{\n\tif(b==0)return a;\n\treturn gcd(b,a%b);\n}\nint main()\n{\n\tint m,n,i,k,len,j;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\tscanf(\"%d\",&a[i]);\n\tfor(i=1;i<=n;i++)\n\tfor(j=1;j<=n;j++)\n\tif(gcd(a[i],a[j])==1)b[i][j]=0;\n\telse b[i][j]=1;\n\tfor(i=1;i<=n;i++)r[i][i]=1,l[i][i]=1;\n\tfor(len=2;len<=n;len++)\n\tfor(i=1;i+len-1<=n;i++)\n\t{\n\t\tint j=i+len-1;\t\t\n\t\tfor(k=i;k<=j-1;k++)\n\t\tr[i][j]|=r[i][k]&b[k][j]&l[k][j-1];\n\t\tfor(k=i+1;k<=j;k++)\n\t\tl[i][j]|=r[i+1][k]&b[i][k]&l[k][j];\n\t\t//printf(\"%d %d\\n\",l[i][j],r[i][j]); \n\t}\n\tfor(i=1;i<=n;i++)\n\tif(r[1][i]&l[i][n]){\n\t\tprintf(\"Yes\");return 0; \n\t}\n\tprintf(\"No\");\n}\n    \t \t \t     \t \t\t \t \t   \t\t  \t\t"
}