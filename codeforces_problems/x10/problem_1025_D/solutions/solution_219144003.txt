{
    "id": 219144003,
    "contestId": 1025,
    "creationTimeSeconds": 1692205501,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1025,
        "index": "D",
        "name": "Recovering BST",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2100,
        "tags": [
            "brute force",
            "dp",
            "math",
            "number theory",
            "trees"
        ]
    },
    "author": {
        "contestId": 1025,
        "members": [
            {
                "handle": "canonica1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1534685700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 889,
    "memoryConsumedBytes": 7884800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\n#define ld long double\r\n#define int long long\r\n#define sz(x) (int)(x).size()\r\n#define all(a) (a).begin(), (a).end()\r\n#define rall(a) (a).rbegin(), (a).rend()\r\n#define gen(a, b) uniform_int_distribution<int>(a, b)(rnd)\r\ntemplate<typename T, typename U> bool imin(T& a, U b){if (a > b) {a = b;return true;} return false;}\r\ntemplate<typename T, typename U> bool imax(T& a, U b){if (a < b){a = b; return true;} return false;}\r\n#define F_OR(i, a, b, s) for (int i=(a); (s)>0?i<(b):i>=(b); i+=(s))\r\n#define F_OR1(e) F_OR(i, 0, e, 1)\r\n#define F_OR2(i, e) F_OR(i, 0, e, 1)\r\n#define F_OR3(i, b, e) F_OR(i, b, e, 1)\r\n#define F_OR4(i, b, e, s) F_OR(i, b, e, s)\r\n#define GET5(a, b, c, d, e, ...) e\r\n#define F_ORC(...) GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1)\r\n#define FOR(...) F_ORC(__VA_ARGS__)(__VA_ARGS__)\r\n\r\nconst int N = 701;\r\nconst int INF = 1e18;\r\nconst int mod = 1e9 + 7;\r\nconst ld EPS = 1e-6;\r\nmt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());\r\n#ifndef ONPC\r\n#define endl '\\n'\r\n#endif\r\nbool used[N];\r\nvector<int> a(N);\r\nbool l[N];\r\nbool r[N];\r\nvector<int> G[N];\r\nvoid dfs(int v, int A, int B) {\r\n    used[v] = true;\r\n    for(auto u : G[v]) {\r\n        if (!used[u]) {\r\n            if (a[v - 1]<=A && a[v-1] >= B) {\r\n                if (a[u - 1] <= a[v - 1] && !l[v]) {\r\n                    l[v] = true;\r\n                    dfs(u, min(A, a[v - 1]), B);\r\n                } else if(a[u - 1] > a[v - 1] && !r[v]){\r\n                    r[v] = true;\r\n                    dfs(u, A, max(B, a[v - 1] + 1));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nsigned main() {\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n#ifdef ONPC\r\n    freopen(\"test.txt\", \"r\", stdin);\r\n#endif\r\n    int n;\r\n    cin >> n;\r\n    for (int i = 0; i < n; ++i) {\r\n        cin >> a[i];\r\n    }\r\n    sort(rall(a));\r\n    for (int i = 1; i <= n; ++i) {\r\n        for (int j = i + 1; j <= n; ++j) {\r\n            if (gcd(a[i - 1] , a[j - 1]) > 1) {\r\n                G[i].push_back(j);\r\n                G[j].push_back(i);\r\n            }\r\n        }\r\n    }\r\n    int tt= n;\r\n    char ok = 0;\r\n    while(tt-- >= 1) {\r\n        fill(used, used + N,false);\r\n        fill(r, r + N,false);\r\n        fill(l, l + N,false);\r\n        dfs(tt,INF, -INF);\r\n        int col = 0;\r\n        for (int i = 1; i <= n; ++i) {\r\n            col += used[i];\r\n        }\r\n        ok |= (col==n);\r\n        sort(all(a));\r\n        fill(used, used + N,false);\r\n        fill(r, r + N,false);\r\n        fill(l, l + N,false);\r\n        dfs(tt,INF, -INF);\r\n        col = 0;\r\n        for (int i = 1; i <= n; ++i) {\r\n            col += used[i];\r\n        }\r\n        ok |= (col==n);\r\n        sort(rall(a));\r\n\r\n\r\n    }\r\n    if (ok) {\r\n        cout << \"Yes\" << endl;\r\n    } else {\r\n        cout << \"No\" << endl;\r\n    }\r\n}"
}