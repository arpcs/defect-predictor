{
    "id": 222469109,
    "contestId": 727,
    "creationTimeSeconds": 1694182331,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 727,
        "index": "B",
        "name": "Bill Total Value",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1600,
        "tags": [
            "expression parsing",
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 727,
        "members": [
            {
                "handle": "RDai2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1476522300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 33,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n    ios::sync_with_stdio(0);\n    cin.tie(0); cout.tie(0);\n\n    string s; cin >> s;\n    vector<vector<string>> prices;\n\n    bool capturing = false;\n    for (char c : s) {\n        if (!capturing & (capturing = (c == '.' || isdigit(c))))\n            prices.emplace_back(vector<string>(1));\n        if (!capturing)\n            continue;\n        if (c == '.')\n            prices.back().emplace_back();\n        else\n            prices.back().back().push_back(c);\n    }\n\n    vector<pair<int,int>> parsed;\n    for (auto& price : prices) {\n        if (price.size() == 1 || price.back().size() == 3) {\n            int dollar = stoi(accumulate(price.begin(), price.end(), string()));\n            parsed.push_back(make_pair(dollar, 0));\n        } else {\n            int dollar = stoi(accumulate(price.begin(), prev(price.end()), string()));\n            int cent = stoi(*price.rbegin());\n            parsed.push_back(make_pair(dollar, cent));\n        }\n    }\n\n    pair<int,int> ans = accumulate(parsed.begin(), parsed.end(), make_pair(0, 0), [](pair<int,int> a, pair<int,int> b) {\n        a.first += b.first;\n        a.second += b.second;\n        return move(a);\n    });\n    ans.first += ans.second / 100;\n    ans.second %= 100;\n\n    string dollar = to_string(ans.first);\n    string cent = to_string(ans.second);\n    for (int i = 0; i < dollar.size(); i++) {\n        cout << dollar[i];\n        if (i != dollar.size()-1 && (dollar.size()-i-1) % 3 == 0)\n            cout << '.';\n    }\n    if (cent == \"0\") {\n        cout << endl;\n        return 0;\n    }\n    cout << '.';\n    cout << setfill('0') << setw(2) << cent << endl;\n\n    return 0;\n}\n"
}