{
    "id": 216713320,
    "contestId": 727,
    "creationTimeSeconds": 1690895136,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 727,
        "index": "B",
        "name": "Bill Total Value",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1600,
        "tags": [
            "expression parsing",
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 727,
        "members": [
            {
                "handle": "3982580943570984"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1476522300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <numeric>\r\n#include <set>\r\n#include <stdlib.h>\r\n#include <string>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n  string str;\r\n  cin >> str;\r\n\r\n  vector<string> prices;\r\n  string curr_price;\r\n  set<char> chrs = {'.', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'};\r\n  for (auto e : str) {\r\n    if (!chrs.contains(e)) {\r\n      if (!curr_price.empty()) {\r\n        prices.push_back(curr_price);\r\n        curr_price.clear();\r\n      }\r\n\r\n      continue;\r\n    }\r\n\r\n    curr_price.push_back(e);\r\n  }\r\n\r\n  prices.push_back(curr_price);\r\n\r\n  int64_t mn = 0, sb = 0;\r\n\r\n  for (auto price : prices) {\r\n    vector<string> sub_prs;\r\n    string sub_pr;\r\n    for (auto e : price) {\r\n      if (e != '.') {\r\n        sub_pr.push_back(e);\r\n      } else {\r\n        sub_prs.push_back(sub_pr);\r\n        sub_pr.clear();\r\n      }\r\n    }\r\n\r\n    sub_prs.push_back(sub_pr);\r\n\r\n    if (sub_prs.back().size() == 2) {\r\n      sb += atoi(sub_prs.back().c_str());\r\n      string str;\r\n      for (auto st : sub_prs) {\r\n        if (st != sub_prs.back()) {\r\n          str += st;\r\n        }\r\n      }\r\n\r\n      mn += stoll(str);\r\n    } else {\r\n      string str;\r\n      for (auto st : sub_prs)\r\n        str += st;\r\n\r\n      mn += stoll(str);\r\n    }\r\n  }\r\n\r\n  mn += int(sb / 100);\r\n  sb %= 100;\r\n\r\n  if (mn != 0) {\r\n    vector<string> res;\r\n    while (mn % 1000 > 0) {\r\n      res.push_back(to_string(mn % 1000));\r\n      mn /= 1000;\r\n    }\r\n\r\n    std::reverse(res.begin(), res.end());\r\n\r\n    for (auto e : res) {\r\n      cout << e << '.';\r\n    }\r\n  } else {\r\n    cout << mn << '.';\r\n  }\r\n\r\n  if (sb < 10)\r\n    cout << '0' << sb << endl;\r\n  else\r\n    cout << sb << endl;\r\n}\r\n"
}