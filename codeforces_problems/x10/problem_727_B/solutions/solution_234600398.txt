{
    "id": 234600398,
    "contestId": 727,
    "creationTimeSeconds": 1701095599,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 727,
        "index": "B",
        "name": "Bill Total Value",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1600,
        "tags": [
            "expression parsing",
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 727,
        "members": [
            {
                "handle": "yimi_y"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1476522300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// generated by GPT4 2023-11-27 14:33:18\n#include <iostream>\n#include <regex>\n#include <string>\n#include <vector>\n#include <iomanip>\n#include <sstream>\n\nusing namespace std;\n\nstring formatPrice(float price) {\n    stringstream ss;\n    ss << fixed << setprecision(2) << price;\n\n    string str = ss.str();\n    int pos = str.find('.');\n    while (pos > 3) {\n        pos -= 3;\n        str.insert(pos, \".\");\n    }\n\n    return str;\n}\n\nint main() {\n    string s;\n    cin >> s;\n\n    regex priceRegex(\"([0-9]+(\\\\.[0-9]{3})*\\\\.[0-9]{2})|([0-9]+(\\\\.[0-9]{3})*)\");\n    sregex_iterator it(s.begin(), s.end(), priceRegex);\n    sregex_iterator it_end;\n\n    float totalPrice = 0;\n    while (it != it_end) {\n        string priceStr = it->str();\n        priceStr.erase(remove(priceStr.begin(), priceStr.end(), '.'), priceStr.end());\n        float price = stof(priceStr) / 100;\n        totalPrice += price;\n        ++it;\n    }\n\n    cout << formatPrice(totalPrice) << endl;\n\n    return 0;\n}\n"
}