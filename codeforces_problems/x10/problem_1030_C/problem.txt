{
    "contestId": 1030,
    "index": "C",
    "name": "Vasya and Golden Ticket",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1300,
    "tags": [
        "implementation"
    ],
    "desc": {
        "title": "C. Vasya and Golden Ticket",
        "statement": "<p>Recently Vasya found a golden ticket \u2014 a sequence which consists of $$$n$$$ digits $$$a_1a_2\\dots a_n$$$. Vasya considers a ticket to be lucky if it can be divided into two or more non-intersecting segments with equal sums. For example, ticket $$$350178$$$ is lucky since it can be divided into three segments $$$350$$$, $$$17$$$ and $$$8$$$: $$$3+5+0=1+7=8$$$. Note that each digit of sequence should belong to <span class=\"tex-font-style-bf\">exactly</span> one segment.</p><p>Help Vasya! Tell him if the golden ticket he found is lucky or not.</p>",
        "inputSpecification": "<p>The first line contains one integer $$$n$$$ ($$$2 \\le n \\le 100$$$) \u2014 the number of digits in the ticket.</p><p>The second line contains $$$n$$$ digits $$$a_1 a_2 \\dots a_n$$$ ($$$0 \\le a_i \\le 9$$$) \u2014 the golden ticket. Digits are printed without spaces.</p>",
        "outputSpecification": "<p>If the golden ticket is lucky then print \"<span class=\"tex-font-style-tt\">YES</span>\", otherwise print \"<span class=\"tex-font-style-tt\">NO</span>\" (both case insensitive).</p>",
        "samples": [
            {
                "input": "5<br/>73452<br/>",
                "output": "YES<br/>"
            },
            {
                "input": "4<br/>1248<br/>",
                "output": "NO<br/>"
            }
        ],
        "note": "<p>In the first example the ticket can be divided into $$$7$$$, $$$34$$$ and $$$52$$$: $$$7=3+4=5+2$$$.</p><p>In the second example it is impossible to divide ticket into segments with equal sum.</p>"
    },
    "suggested_categories": [
        "algorithms",
        "number theory",
        "dynamic programming",
        "combinatorics",
        "mathematics",
        "strings",
        "divide and conquer",
        "pattern matching",
        "data structures",
        "greedy algorithms",
        "brute force",
        "integer partitioning",
        "summation problems",
        "sequence analysis",
        "digital invariance",
        "counting problems",
        "set partitioning",
        "equality partitioning",
        "optimization problems",
        "sequence division"
    ]
}