{
    "id": 211824083,
    "contestId": 1416,
    "creationTimeSeconds": 1688299802,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1416,
        "index": "F",
        "name": "Showing Off",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 3300,
        "tags": [
            "flows",
            "graph matchings",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1416,
        "members": [
            {
                "handle": "dlolfe"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601219100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 6451200,
    "source": "#include <bits/stdc++.h>\r\nnamespace _default{\r\n    using namespace std;\r\n    #define lovely return\r\n    #define _lzy_ 0\r\n    #define LL long long\r\n    #define int long long\r\n    #define DB double\r\n    #define PII std::pair<int, int>\r\n    #define X first\r\n    #define Y second\r\n    #define uF(i, x, y) for(int i = (x); i <= (y); ++ i)\r\n    #define uf(i, x, y) for(int i = (x); i < (y); ++ i)\r\n    #define dF(i, x, y) for(int i = (x); i >= (y); -- i)\r\n    #define df(i, x, y) for(int i = (x); i > (y); -- i)\r\n    #define ef(i, u) for(int i = head[(u)]; i; i = ne[i])\r\n    #define sett(x, y) memset(x, y, sizeof x)\r\n    #define copy(x, y) memcpy(x, y, sizeof x)\r\n    const int MOD = 1e9 + 7;\r\n    const DB EPS = 1e-8;\r\n    template<typename T> inline T read(){\r\n        T s = 0; int f = 0; char ch = getchar();\r\n        while(!isdigit(ch)){if(ch == '-') f = 1; ch = getchar();}\r\n        while(isdigit(ch)) s = s * 10 + ch - 48, ch = getchar();\r\n        return f ? ~s + 1 : s;\r\n    }\r\n    template<typename T> inline void write(T x, const char *s = \"\"){\r\n        static int st[40]; int top = 0;\r\n        if(x < 0){putchar('-'); x = -x;}\r\n        if(!x) putchar('0');\r\n        while(x) st[++ top] = x % 10, x /= 10;\r\n        while(top) putchar(st[top --] + 48);\r\n        printf(\"%s\", s);\r\n    }\r\n    template<typename T> inline void updmin(T &x, T y){if(x > y) x = y;}\r\n    template<typename T> inline void updmax(T &x, T y){if(x < y) x = y;}\r\n    template<typename T> inline void updadd(T &x, T y){(x += y % MOD) %= MOD;}\r\n    template<typename T> inline void updmul(T &x, T y){(x *= y % MOD) %= MOD;}\r\n    int cmp(DB a, DB b){if(fabs(a - b) < EPS) return 0; return a - b > EPS ? 1 : -1;}\r\n}\r\nusing namespace _default;\r\nconst int N = 1e5 + 5;\r\nint n, a[N];\r\nint ne[N], sign[N], dp[N], pre[N];\r\nbool use[3];\r\nchar s[5];\r\nstruct Sec{\r\n    int l, r, s;\r\n    Sec(int _l = 0, int _r = 0, int _s = 1) : l(_l), r(_r), s(_s){}\r\n}b[N];\r\ninline void Solve(int l, int r){\r\n    // if(n == 100000) printf(\"%d %d\\n\", l, r);\r\n    int last = l - 1, sum = 1, tot = 0;\r\n    uF(i, l, r){\r\n        if(a[i] == 1){\r\n            if(a[i - 1] != 1) b[++ tot] = Sec(last + 1, i - 1, sum);\r\n            last = i, sum = 1;\r\n        }\r\n        else{\r\n            sum *= a[i];\r\n            if(sum > 1e9) break;\r\n        }\r\n    }\r\n    if(a[r] != 1) b[++ tot] = Sec(last + 1, r, sum);\r\n    // printf(\"L:%d R:%d\\n\", l, r);\r\n    // uF(i, 1, tot) printf(\"%d %d\\n\", b[i].l, b[i].r);\r\n    sum = 1;\r\n    uF(i, 2, tot){\r\n        if(sum > 1e9){\r\n            for(int i = l; i <= r && a[i] == 1; ++ i) sign[i + 1] = 2;\r\n            for(int i = r; i >= l && a[i] == 1; -- i) sign[i] = 2;\r\n            return;\r\n        }\r\n        sum *= b[i].s;\r\n    }\r\n    if(sum > 1e9){\r\n        for(int i = l; i <= r && a[i] == 1; ++ i) sign[i + 1] = 2;\r\n        for(int i = r; i >= l && a[i] == 1; -- i) sign[i] = 2;\r\n        return;\r\n    }\r\n    uF(i, 1, tot){\r\n        dp[i] = 0, sum = b[i].s;\r\n        dF(j, i - 1, 0){\r\n            if(dp[i] < dp[j] + b[j + 1].l - b[j].r - 1 + sum)\r\n                dp[i] = dp[j] + b[j + 1].l - b[j].r - 1 + sum, pre[i] = j;\r\n            sum *= b[j].s;\r\n        }\r\n    }\r\n    for(int i = l; i <= r && a[i] == 1; ++ i) sign[i + 1] = 2;\r\n    for(int i = r; i >= l && a[i] == 1; -- i) sign[i] = 2;\r\n    // uF(i, 1, tot) printf(\"%d \", b[i].s);\r\n    // puts(\"\");\r\n    int cur = tot;\r\n    while(cur){\r\n        uF(i, b[pre[cur]].r + 1, b[pre[cur] + 1].l) sign[i] = 2;\r\n        cur = pre[cur];\r\n    }\r\n}\r\nsigned main(){\r\n    n = read<int>();\r\n    uF(i, 1, n) a[i] = read<int>();\r\n    scanf(\"%s\", s); int len = strlen(s);\r\n    uf(i, 0, len){\r\n        if(s[i] == '+') use[0] = true;\r\n        else if(s[i] == '-') use[1] = true;\r\n        else use[2] = true;\r\n    }\r\n    if(use[0] && use[2]){\r\n        int last = 0;\r\n        uF(i, 1, n){\r\n            if(!a[i]){\r\n                if(n == 100000) printf(\"%lld\\n\", i);\r\n                if(n == 100000) printf(\"%lld %lld\\n\", last, i);\r\n                Solve(last + 1, i - 1);\r\n                last = i, sign[i] = sign[i + 1] = 2;\r\n            }\r\n        }\r\n        if(last < n) Solve(last + 1, n);\r\n        write(a[1]);\r\n        uF(i, 2, n){\r\n            putchar(sign[i] ? '+' : '*');\r\n            write(a[i]);\r\n        }\r\n    }\r\n    else if(use[2] && !use[1]){\r\n        uf(i, 1, n) write(a[i], \"*\");\r\n        write(a[n]);\r\n    }\r\n    else if(use[2] && use[1]){\r\n        bool flag = true;\r\n        uf(i, 1, n){\r\n            if(!a[i + 1] && flag) write(a[i], \"-\");\r\n            else write(a[i], \"*\");\r\n        }\r\n        write(a[n]);\r\n    }\r\n    else if(use[0]){\r\n        uf(i, 1, n) write(a[i], \"+\");\r\n        write(a[n]);\r\n    }\r\n    else{\r\n        uf(i, 1, n) write(a[i], \"-\");\r\n        write(a[n]);\r\n    }\r\n    puts(\"\");\r\n    lovely _lzy_;\r\n}\r\n/*\r\n10\r\n2 1 1 2 1 2 1 2 1 2\r\n+*\r\n\r\n4\r\n2 1 2 1\r\n*+\r\n*/"
}