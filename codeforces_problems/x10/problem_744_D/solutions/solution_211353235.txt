{
    "id": 211353235,
    "contestId": 744,
    "creationTimeSeconds": 1687966659,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 744,
        "index": "D",
        "name": "Hongcow Draws a Circle",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 3200,
        "tags": [
            "geometry"
        ]
    },
    "author": {
        "contestId": 744,
        "members": [
            {
                "handle": "gdryrp"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1481992500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 182,
    "timeConsumedMillis": 4945,
    "memoryConsumedBytes": 1536000,
    "source": "#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma\")\r\n#pragma GCC optimize(\"unroll-loops\")\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n \r\n#define ull unsigned long long\r\n#define ll long long\r\n#define x first\r\n#define y second\r\n#define pb(a) push_back(a)\r\n#define mp(a, b) make_pair(a, b)\r\n#define el '\\n'\r\n#define all(a) a.begin(), a.end()\r\n#define sz(a) (ll)a.size()\r\n#define doaayah ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0)\r\n#define ld long double\r\n \r\nconst ld eps = 1e-5;\r\nconst ld pi = acos(-1);\r\nconst ll maxn = 1e4 + 5;\r\nld maxi = 3e8;\r\n \r\nll n, m;\r\nvector<pair< pair<ld, ld> , ll> > allColor; // {x, y}, color 1 = red, 2 = blue\r\n \r\nld mod_2pi(ld x) {\r\n    while (x < 0) x += 2 * pi;\r\n    while (x > 2 * pi) x -= 2 * pi;\r\n    return x;\r\n}\r\n \r\nbool possible_circle(ll i, ld r) {\r\n    ld x0 = allColor[i].x.x, y0 = allColor[i].x.y;\r\n    ll color0 = allColor[i].y;\r\n \r\n    vector< pair<ld, ll> > inout; // {angle, in/out & color}\r\n    if (color0 == 1) {\r\n        inout.pb(mp(0, -1));\r\n        inout.pb(mp(2 * pi, 1));\r\n    }\r\n \r\n    for (ll j = 0; j < m+n; j++) {\r\n        if (i == j) continue;\r\n \r\n        ld x1 = allColor[j].x.x, y1 = allColor[j].x.y;\r\n        ll color1 = allColor[j].y;\r\n \r\n        ld d = sqrt((x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0));\r\n        if (d > 2 * r) continue;\r\n \r\n        ld theta = atan2(y0 - y1, x0 - x1);\r\n        ld beta = acos(d / (2 * r));\r\n \r\n        ld le = mod_2pi(theta - beta);\r\n        ld ri = mod_2pi(theta + beta);\r\n        inout.pb(mp(le, -color1));\r\n        inout.pb(mp(ri, color1));\r\n        if (le > ri) {\r\n            inout.pb(mp(0, -color1));\r\n            inout.pb(mp(2 * pi, color1));\r\n        }\r\n    }\r\n \r\n    sort(all(inout));\r\n \r\n    ll redcnt = 0, bluecnt = 0;\r\n    for (ll j=0; j < sz(inout); j++) {\r\n        if (inout[j].y == -1) {\r\n            redcnt++;\r\n        } else if (inout[j].y == 1) {\r\n            redcnt--;\r\n        } else if (inout[j].y == -2) {\r\n            bluecnt++;\r\n        } else if (inout[j].y == 2) {\r\n            bluecnt--;\r\n        }\r\n \r\n        if (redcnt && !bluecnt) return true;\r\n    }\r\n \r\n    return false;\r\n}\r\n \r\nvoid solve() {\r\n    cin >> n >> m;\r\n    for (ll i=0;i<n;i++){\r\n        ld inp1, inp2; cin >> inp1 >> inp2;\r\n        allColor.pb(mp(mp(inp1, inp2), 1));\r\n    }\r\n    for (ll i=0;i<m;i++) {\r\n        ld inp1, inp2; cin >> inp1 >> inp2;\r\n        allColor.pb(mp(mp(inp1, inp2), 2));\r\n    }\r\n \r\n    for (ll i=0; i<m+n; i++) {\r\n        if (possible_circle(i, maxi)) {\r\n            cout << -1 << el;\r\n            return;\r\n        }\r\n    }\r\n \r\n    ld l = 0, r = maxi, ans = 0;\r\n    for (ll i=0; i<m+n; i++) {\r\n        if (!possible_circle(i, ans)) continue;\r\n\r\n        l = ans;\r\n        r = maxi;\r\n \r\n        for (ll j=0; j<45; j++) {\r\n            ld mid = (l + r) / 2;\r\n            if (possible_circle(i, mid)) {\r\n                ans = mid;\r\n                l = mid;\r\n            } else {\r\n                r = mid;\r\n            }\r\n        }\r\n    }\r\n\r\n    cout << fixed << setprecision(20) << ans << el;\r\n}\r\n\r\nint main() {\r\n    doaayah;\r\n    ll tc = 1;\r\n    while (tc--) {\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n}"
}