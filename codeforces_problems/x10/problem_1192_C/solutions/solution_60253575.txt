{
    "id": 60253575,
    "contestId": 1192,
    "creationTimeSeconds": 1567930354,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1192,
        "index": "C",
        "name": "Cubeword",
        "type": "PROGRAMMING",
        "tags": [
            "*special",
            "brute force",
            "dp",
            "meet-in-the-middle"
        ]
    },
    "author": {
        "contestId": 1192,
        "members": [
            {
                "handle": "L4V4L"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1564063500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 90,
    "timeConsumedMillis": 1575,
    "memoryConsumedBytes": 11878400,
    "points": 100.0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define ll long long\r\nconst int P = 998244353;\r\nint n, m, p, q, r; ll ans = 0, coef [2][2][2] = {{{24,12}, {12,4}}, {{12,6}, {4,1}}}, g[66][66][66], h[11][66][66];\r\nvector <string> v [11];\r\ninline int gt (char c) {return (c >= 'a') ? (c - 'a') * 2  : ((c >='A') ? (c-'A') * 2 + 1 : 52 + c -'0');}\r\n\r\nint main()\r\n{\r\n  ios::sync_with_stdio(false); cin>>n;\r\n\r\n  for (int i = 1; i <= n; i++){\r\n\r\n  string s; cin>>s;\r\n  v[s.size()].push_back(s);\r\n  reverse(s.begin(),s.end());\r\n  v[s.size()].push_back(s);\r\n\r\n  for(auto t : s) m = max (m, gt(t) + 1);\r\n    }\r\n     for (int i = 3; i <= 10; i++){\r\n     sort(v[i].begin(), v[i].end());\r\n     v[i].erase(unique(v[i].begin(), v[i].end()), v[i].end());//rimuove singolo elemento o intervallo elementi + duplicati\r\n     for (auto t : v[i]) h[i] [gt(t[0])] [gt(t[i-1])] ++;\r\n     for (int p = 0; p < m; p++) for (int q = 0; q < m; q++) for (int r = 0; r < m; r++) g[p][q][r] = 0;\r\n     for (int p = 0; p < m; p++) for (int q = 0; q < m; q++) for (int r = 0; r < m; r++) for (int s = 0; s < m; s++) g[p][q][r] = (g[p][q][r] + h[i][p][s] * h[i][q][s] * h[i][r][s]) % P;\r\n     for (int p = 0; p < m; p++) for (int q = p; q < m; q++) for (int r = q; r < m; r++) for (int s = r; s < m; s++) ans = (ans + g[p][q][r] * g[p][q][s] % P * g[p][r][s] % P * g[q][r][s] % P * coef[p == q][q == r][r == s]) % P;\r\n   }\r\n   printf(\"%lld\\n\", ans);\r\n  return 0;\r\n}\r\n"
}