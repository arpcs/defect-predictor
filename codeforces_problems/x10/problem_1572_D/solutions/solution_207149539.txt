{
    "id": 207149539,
    "contestId": 1572,
    "creationTimeSeconds": 1685021537,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1572,
        "index": "D",
        "name": "Bridge Club",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2800,
        "tags": [
            "flows",
            "graph matchings",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1572,
        "members": [
            {
                "handle": "LittleTwoawa"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631975700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// LUOGU_RID: 111237097\n#include<bits/stdc++.h>\r\n#define ld long double\r\n#define ui unsigned int\r\n#define ull unsigned long long\r\n#define int long long\r\n#define eb emplace_back\r\n#define pb pop_back\r\n#define mp make_pair\r\n#define pii pair<int,int>\r\n#define fi first\r\n#define se second\r\n#define power(x) ((x)*(x))\r\n#define gcd(x,y) __gcd(x,y)\r\n#define lcm(x,y) (x*y/gcd(x,y))\r\n#define lg(x,y)  __lg(x,y)\r\nusing namespace std;\r\n\r\ntemplate<typename T=int> inline T read()\r\n{\r\n    T s=0,w=1; char c=getchar();\r\n    while(!isdigit(c)) {if(c=='-') w=-1; c=getchar();}\r\n    while(isdigit(c)) s=(s<<1)+(s<<3)+(c^48),c=getchar();\r\n    return s*w;\r\n}\r\ntemplate<typename T=int> inline void write(T x,char ch)\r\n{\r\n    if(x<0) x=-x,putchar('-');\r\n    static char stk[25]; int top=0;\r\n    do {stk[top++]=x%10+'0',x/=10;} while(x);\r\n    while(top) putchar(stk[--top]);\r\n    putchar(ch);\r\n    return;\r\n}\r\n\r\nnamespace MyTool\r\n{\r\n    static const int Mod=998244353;\r\n    template<typename T> inline void Swp(T &a,T &b) {T t=a;a=b;b=t;}\r\n    template<typename T> inline void cmax(T &a,T b) {a=a>b?a:b;}\r\n    template<typename T> inline void cmin(T &a,T b) {a=a<b?a:b;}\r\n    template<typename T> inline void Madd(T &a,T b) {a=a+b>Mod?a+b-Mod:a+b;}\r\n    template<typename T> inline void Mdel(T &a,T b) {a=a-b<0?a-b+Mod:a-b;}\r\n    template<typename T> inline void Mmul(T &a,T b) {a=a*b%Mod;}\r\n    template<typename T> inline void Mmod(T &a)     {a=(a%Mod+Mod)%Mod;}\r\n    template<typename T> inline T    Cadd(T a,T b)  {return a+b>=Mod?a+b-Mod:a+b;}\r\n    template<typename T> inline T    Cdel(T a,T b)  {return a-b<0?a-b+Mod:a-b;}\r\n    template<typename T> inline T    Cmul(T a,T b)  {return a*b%Mod;}\r\n    template<typename T> inline T    Cmod(T a)      {return (a%Mod+Mod)%Mod;}\r\n    inline int qpow(int a,int b) {int res=1; while(b) {if(b&1) Mmul(res,a); Mmul(a,a); b>>=1;} return res;}\r\n    inline int qmul(int a,int b) {int res=0; while(b) {if(b&1) Madd(res,a); Madd(a,a); b>>=1;} return res;}\r\n    inline int Qpow(int a,int b) {int res=1; while(b) {if(b&1) res=qmul(res,a); a=qmul(a,a); b>>=1;} return res;} \r\n}\r\nusing namespace MyTool;\r\n\r\ninline void file()\r\n{\r\n    freopen(\".in\",\"r\",stdin);\r\n    freopen(\".out\",\"w\",stdout);\r\n    return;\r\n}\r\n\r\nbool Mbe;\r\n\r\nnamespace LgxTpre\r\n{\r\n    static const int MAX=(1<<20)+10;\r\n    static const int inf=2147483647;\r\n    static const int INF=4557430888798830399;\r\n    static const int mod=1e9+7;\r\n    static const int bas=131;\r\n\t\r\n\tint n,k,val[MAX]\uff1b\r\n\tbool tag[MAX];\r\n\tstruct EDGE{signed x,y; int val;}E[MAX*20]; int cnte; \r\n\t#define bct(x) (__builtin_popcount(x))\r\n\t\r\n\tstruct edge{signed nex,to; int val,flow;}e[MAX<<2];\r\n\tint head[MAX],cnt=1;\r\n\tinline void add(int x,int y,int flow,int val)\r\n\t{\r\n\t\te[++cnt].nex=head[x],head[x]=cnt,e[cnt].to=y,e[cnt].val=val,e[cnt].flow=flow;\r\n\t\te[++cnt].nex=head[y],head[y]=cnt,e[cnt].to=x,e[cnt].val=-val,e[cnt].flow=0;\r\n\t}    \r\n\t\r\n\tint s,t;\r\n    int maxflow,mincost;\r\n    int dis[MAX],vis[MAX],pre[MAX],incf[MAX];\r\n    queue<int> q;\r\n    inline bool SPFA()\r\n    {\r\n        memset(vis,0,sizeof vis),memset(dis,0x3f,sizeof dis);\r\n        q.push(s),vis[s]=1,dis[s]=0,incf[s]=INF;\r\n        while(!q.empty())\r\n        {\r\n            int now=q.front(); q.pop();\r\n            vis[now]=0;\r\n            for(int i=head[now];i;i=e[i].nex)\r\n            {\r\n                int to=e[i].to,val=e[i].val,flow=e[i].flow;\r\n                if(!flow) continue;\r\n                if(dis[to]>dis[now]+val)\r\n                {\r\n                    dis[to]=dis[now]+val,incf[to]=min(incf[now],flow),pre[to]=i;\r\n                    if(!vis[to]) vis[to]=1,q.push(to);\r\n                }\r\n            }\r\n        }\r\n        return dis[t]!=INF;\r\n    }\r\n    inline void Augment()\r\n    {\r\n        int now=t;\r\n        maxflow+=incf[t],mincost+=incf[t]*dis[t];\r\n        while(now!=s)\r\n        {\r\n            int i=pre[now];\r\n            e[i].flow-=incf[t],e[i^1].flow+=incf[t],now=e[i^1].to;\r\n        }\r\n    }\r\n    inline void solve()\r\n    {\r\n        while(SPFA()) Augment();\r\n    }\r\n\t\r\n    inline void mian()\r\n    {\r\n    \tn=read(),k=read();\r\n    \tfor(int i=0;i<(1<<n);++i) val[i]=read();\r\n    \tfor(signed i=0;i<(1<<n);++i) for(signed j=0;j<n;++j) if(i>>j&1) E[++cnte]=(EDGE){i,i^(1<<j),val[i]+val[i^(1<<j)]};\r\n    \tsort(E+1,E+cnte+1,[](EDGE a,EDGE b){return a.val>b.val;});\r\n    \ts=(1<<n)+1,t=(1<<n)+2,add(s,1<<n,k,0);\r\n    \tfor(int i=1;i<=min(cnte,2*n*k);++i)\r\n    \t{\r\n    \t\tint x=E[i].x,y=E[i].y,val=E[i].val;\r\n    \t\tif(bct(x)&1) add(x,y,1,-val); else add(y,x,1,-val);\r\n    \t\tif(!tag[x])  {if(bct(x)&1) add(1<<n,x,1,0); else add(x,t,1,0);}\r\n    \t\tif(!tag[y])  {if(bct(y)&1) add(1<<n,y,1,0); else add(y,t,1,0);}\r\n\t\t\ttag[x]=1,tag[y]=1;\r\n\t\t}\r\n    \tsolve(),write(-mincost,'\\n');\r\n    \treturn;\r\n    }\r\n}\r\n\r\nbool Med;\r\n\r\nsigned main()\r\n{\r\n//  file();\r\n    fprintf(stderr,\"%.3lf MB\\n\",abs(&Med-&Mbe)/1048576.0);\r\n    int Tbe=clock();\r\n    LgxTpre::mian();\r\n    int Ted=clock();\r\n    cerr<<1e3*(Ted-Tbe)/CLOCKS_PER_SEC<<\" ms\\n\";\r\n    return (0-0);\r\n}"
}