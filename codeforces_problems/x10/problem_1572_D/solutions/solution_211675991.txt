{
    "id": 211675991,
    "contestId": 1572,
    "creationTimeSeconds": 1688184733,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1572,
        "index": "D",
        "name": "Bridge Club",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2800,
        "tags": [
            "flows",
            "graph matchings",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1572,
        "members": [
            {
                "handle": "Kevin114514"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631975700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 200,
    "timeConsumedMillis": 2479,
    "memoryConsumedBytes": 384409600,
    "source": "//Author: Kevin5307\r\n#include<bits/stdc++.h>\r\n//#pragma GCC optimize(\"O2\")\r\nusing namespace std;\r\n#define ll long long\r\n#define int ll\r\n#define ull unsigned ll\r\n#define pb push_back\r\n#define mp make_pair\r\n#define ALL(x) (x).begin(),(x).end()\r\n#define rALL(x) (x).rbegin(),(x).rend()\r\n#define srt(x) sort(ALL(x))\r\n#define rev(x) reverse(ALL(x))\r\n#define rsrt(x) sort(rALL(x))\r\n#define sz(x) (int)(x.size())\r\n#define inf 0x3f3f3f3f\r\n#define pii pair<int,int>\r\n#define lb(v,x) (int)(lower_bound(ALL(v),x)-v.begin())\r\n#define ub(v,x) (int)(upper_bound(ALL(v),x)-v.begin())\r\n#define uni(v) v.resize(unique(ALL(v))-v.begin())\r\n#define longer __int128_t\r\nvoid die(string S){puts(S.c_str());exit(0);}\r\nclass MinCostMaxFlow\r\n{\r\n\tprivate:\r\n\t\tstruct edge\r\n\t\t{\r\n\t\t\tint v,capa,cost;\r\n\t\t\tedge(int _v,int _capa,int _cost)\r\n\t\t\t{\r\n\t\t\t\tv=_v;\r\n\t\t\t\tcapa=_capa;\r\n\t\t\t\tcost=_cost;\r\n\t\t\t}\r\n\t\t\tedge(){}\r\n\t\t}E[5001000];\r\n\t\tvector<int> G[1201000];\r\n\t\tint p;\r\n\t\tint dist[1201000];\r\n\t\tint head[1201000];\r\n\t\tbool inque[1201000];\r\n\t\tbool vis[1201000];\r\n\t\tbool spfa(int s,int t)\r\n\t\t{\r\n\t\t\tmemset(dist,inf,sizeof(dist));\r\n\t\t\tmemset(inque,0,sizeof(inque));\r\n\t\t\tdist[s]=0;\r\n\t\t\tinque[s]=1;\r\n\t\t\tqueue<int> q;\r\n\t\t\tq.push(s);\r\n\t\t\twhile(!q.empty())\r\n\t\t\t{\r\n\t\t\t\tint x=q.front();\r\n\t\t\t\tq.pop();\r\n\t\t\t\tinque[x]=0;\r\n\t\t\t\tfor(auto e:G[x])\r\n\t\t\t\t\tif(E[e].capa&&dist[x]+E[e].cost<dist[E[e].v])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdist[E[e].v]=dist[x]+E[e].cost;\r\n\t\t\t\t\t\tif(!inque[E[e].v])\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tq.push(E[e].v);\r\n\t\t\t\t\t\t\tinque[E[e].v]=1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn dist[t]<inf;\r\n\t\t}\r\n\t\tint cost;\r\n\t\tint dfs(int u,int t,int flow)\r\n\t\t{\r\n\t\t\tif(u==t)\r\n\t\t\t\treturn flow;\r\n\t\t\tvis[u]=1;\r\n\t\t\tint ans=0;\r\n\t\t\tfor(;head[u]<sz(G[u]);head[u]++)\r\n\t\t\t{\r\n\t\t\t\tint e=G[u][head[u]];\r\n\t\t\t\tif(!vis[E[e].v]&&E[e].capa&&dist[E[e].v]==dist[u]+E[e].cost)\r\n\t\t\t\t{\r\n\t\t\t\t\tint augflow=dfs(E[e].v,t,min(E[e].capa,flow-ans));\r\n\t\t\t\t\tif(augflow)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcost+=augflow*E[e].cost;\r\n\t\t\t\t\t\tE[e].capa-=augflow;\r\n\t\t\t\t\t\tE[e^1].capa+=augflow;\r\n\t\t\t\t\t\tans+=augflow;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvis[u]=0;\r\n\t\t\treturn ans;\r\n\t\t}\r\n\tpublic:\r\n\t\tvoid clear()\r\n\t\t{\r\n\t\t\tp=0;\r\n\t\t\tfor(int i=0;i<1201000;i++)\r\n\t\t\t\tG[i].clear();\r\n\t\t\tmemset(vis,0,sizeof(vis));\r\n\t\t}\r\n\t\tMinCostMaxFlow()\r\n\t\t{\r\n\t\t\tclear();\r\n\t\t}\r\n\t\tvoid addEdge(int u,int v,int capa,int cost)\r\n\t\t{\r\n\t\t\tG[u].pb(p);\r\n\t\t\tE[p++]=edge(v,capa,cost);\r\n\t\t\tG[v].pb(p);\r\n\t\t\tE[p++]=edge(u,0,-cost);\r\n\t\t}\r\n\t\tpii mcmf(int s,int t)\r\n\t\t{\r\n\t\t\tcost=0;\r\n\t\t\tint ans=0;\r\n\t\t\twhile(spfa(s,t))\r\n\t\t\t{\r\n\t\t\t\tmemset(head,0,sizeof(head));\r\n\t\t\t\tint x;\r\n\t\t\t\twhile((x=dfs(s,t,inf)))\tans+=x;\r\n\t\t\t}\r\n\t\t\treturn mp(ans,cost);\r\n\t\t}\r\n}mcmf;\r\nint a[1201000];\r\nbool fl[1201000];\r\nsigned main()\r\n{\r\n\tint n,k;\r\n\tscanf(\"%lld%lld\",&n,&k);\r\n\tint x=(1<<n);\r\n\tmcmf.addEdge(x+1,x+2,k,0);\r\n\tvector<int> vec;\r\n\tfor(int i=0;i<x;i++)\r\n\t\tscanf(\"%lld\",a+i);\r\n\tfor(int i=0;i<x;i++) if(__builtin_popcount(i)%2)\r\n\t\tfor(int j=0;j<n;j++)\r\n\t\t\tvec.pb(a[i]+a[i^(1<<j)]);\r\n\trsrt(vec);\r\n\tint pos=min(sz(vec)-1,(n+n)*k);\r\n\tint cnt=0;\r\n\tfor(int i=0;i<x;i++)\r\n\t{\r\n\t\tint a=::a[i];\r\n\t\tif(__builtin_popcount(i)%2)\r\n\t\t{\r\n\t\t\tbool flag=0;\r\n\t\t\tfor(int j=0;j<n;j++) if(::a[i^(1<<j)]+::a[i]>=vec[pos])\r\n\t\t\t{\r\n\t\t\t\tif(::a[i^(1<<j)]+::a[i]==vec[pos])\r\n\t\t\t\t{\r\n\t\t\t\t\tcnt++;\r\n\t\t\t\t\tif(cnt>=pos+5)\r\n\t\t\t\t\t{\r\n//\t\t\t\t\t\tcerr<<i<<\" \"<<(i^(1<<j))<<\" \"<<cnt<<endl;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tmcmf.addEdge(i,i^(1<<j),1,0);\r\n\t\t\t\tflag=1;\r\n\t\t\t\tfl[i^(1<<j)]=1;\r\n\t\t\t}\r\n\t\t\tif(flag)\r\n\t\t\t\tmcmf.addEdge(x+2,i,1,-a);\r\n\t\t}\r\n//\t\telse if(fl[i])\r\n//\t\t\tmcmf.addEdge(i,x+3,1,-a);\r\n\t}\r\n\tfor(int i=0;i<x;i++)\r\n\t\tif(__builtin_popcount(i)%2==0)\r\n\t\t\tif(fl[i])\r\n\t\t\t\tmcmf.addEdge(i,x+3,1,-a[i]);\r\n\tprintf(\"%lld\\n\",-mcmf.mcmf(x+1,x+3).second);\r\n\treturn 0;\r\n}"
}