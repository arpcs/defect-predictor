{
    "id": 216716693,
    "contestId": 1140,
    "creationTimeSeconds": 1690896587,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1140,
        "index": "E",
        "name": "Palindrome-less Arrays",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "combinatorics",
            "divide and conquer",
            "dp"
        ]
    },
    "author": {
        "contestId": 1140,
        "members": [
            {
                "handle": "wj123_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1553267100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 307200,
    "source": "// LUOGU_RID: 118510344\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define all(x) (x).begin(), (x).end()\r\n#define x first\r\n#define y second\r\n#define int long long\r\n#define endl '\\n'\r\n#define sz(x) ((int)(x).size())\r\nmt19937 rnd(random_device{}());\r\ntypedef long long ll;\r\ntypedef pair<int, int> pii;\r\ntypedef double db;\r\nconst int N =5e5 + 10, mod = 998244353, inf = 1e18;\r\nconst double eps = 1e-12;\r\nll gcd(ll a, ll b) { return b ? gcd(b, a % b) : a; }\r\nll qmi(ll a, ll b, ll mod)\r\n{\r\n    ll res = 1;\r\n    a %= mod;\r\n    assert(b >= 0);\r\n    for (; b; b >>= 1)\r\n    {\r\n        if (b & 1)\r\n            res = res * a % mod;\r\n        a = a * a % mod;\r\n    }\r\n    return res;\r\n}\r\n// head\r\nvoid solve()\r\n{\r\n    int n, k;\r\n    cin >>n >>k;\r\n    vector<int> a(n);\r\n    for(auto &i : a) cin >>i;\r\n    for(int i = 1; i + 1 < n; ++i)\r\n    {\r\n        if(a[i - 1]!=-1 && a[i + 1]!=-1 && a[i] == a[i + 1])\r\n        {\r\n            cout<<\"0\\n\";\r\n            return;\r\n        }\r\n    }\r\n    int ans = 1;\r\n    for(int i = 0;i < n; ++i)\r\n    {\r\n        if(i&1)\r\n        if(a[i] == -1)\r\n        {\r\n            int j = i;\r\n            while(j < n && a[j] == -1) j+=2;\r\n            if(j == i + 2)\r\n            {\r\n                int v = k - 2;\r\n                if(i - 2 < 0) v++;\r\n                if(j >= n) v++;\r\n                ans = ans * v%mod;\r\n            }\r\n            else\r\n            {\r\n                int t = (j - i)/2;\r\n                if(j >= n)\r\n                {\r\n                    int v = k - 1;\r\n                    if(i - 2 < 0) v++;\r\n                    ans = ans * qmi(k - 1, t-  1, mod)%mod *v%mod;\r\n                }\r\n                else\r\n                {\r\n                    vector dp(t + 1, vector(2,0ll));\r\n                    if(i - 2 < 0 || a[i - 2]!=a[j]) dp[1][1] = 1;\r\n                    dp[1][0] = k - 1;\r\n                    for(int i = 2; i <= t; ++i)\r\n                    {\r\n                        dp[i][0] = (dp[i - 1][1] + dp[i - 1][0]) * (k - 1)%mod;\r\n                        dp[i][1] = dp[i - 1][0];\r\n                    }\r\n                    ans = (ans * dp[t][0])%mod;\r\n                }\r\n                \r\n            }\r\n            i = j;\r\n        }\r\n    }\r\n    for(int i = 0;i < n; ++i)\r\n    {\r\n        if(!(i&1))\r\n        if(a[i] == -1)\r\n        {\r\n            int j = i;\r\n            while(j < n && a[j] == -1) j+=2;\r\n            if(j == i + 2)\r\n            {\r\n                int v = k - 2;\r\n                if(i - 2 < 0) v++;\r\n                if(j >= n) v++;\r\n                ans = ans * v%mod;\r\n            }\r\n            else\r\n            {\r\n                int t = (j - i)/2;\r\n                if(j >= n)\r\n                {\r\n                    int v = k - 1;\r\n                    if(i - 2 < 0) v++;\r\n                    ans = ans * qmi(k - 1, t-  1, mod)%mod *v%mod;\r\n                }\r\n                else\r\n                {\r\n                    vector dp(t + 1, vector(2,0ll));\r\n                    if(i - 2 < 0 || a[i - 2]!=a[j]) dp[1][1] = 1;\r\n                    dp[1][0] = k - 1;\r\n                    for(int i = 2; i <= t; ++i)\r\n                    {\r\n                        dp[i][0] = (dp[i - 1][1] + dp[i - 1][0]) * (k - 1)%mod;\r\n                        dp[i][1] = dp[i - 1][0];\r\n                    }\r\n                    ans = (ans * dp[t][0])%mod;\r\n                }\r\n            }\r\n            i = j;\r\n        }\r\n    }\r\n    cout<<ans<<endl;\r\n}\r\nsigned main()\r\n{\r\n    std::ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    cout << fixed << setprecision(2);\r\n    int t = 1;\r\n    // cin >> t;\r\n    while (t--)\r\n    {\r\n        solve();\r\n    }\r\n}"
}