{
    "id": 235827944,
    "contestId": 1140,
    "creationTimeSeconds": 1701770860,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1140,
        "index": "E",
        "name": "Palindrome-less Arrays",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "combinatorics",
            "divide and conquer",
            "dp"
        ]
    },
    "author": {
        "contestId": 1140,
        "members": [
            {
                "handle": "qwq7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1553267100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 3891200,
    "source": "// LUOGU_RID: 138313404\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nusing i64 = long long;\r\n\r\nconstexpr int mod = 998244353;\r\n\r\nint qpow(int a, int b) {\r\n    int res = 1;\r\n    while (b) {\r\n        if (b & 1) res = 1ll * res * a % mod;\r\n        a = 1ll * a * a % mod;\r\n        b >>= 1;\r\n    }\r\n    return res;\r\n}\r\n\r\nvoid solve() {\r\n    int n, k;\r\n    cin >> n >> k;\r\n    vector<int> a(n);\r\n    vector<int> odd{-2}, even{-2};\r\n    for (auto& x : a) cin >> x;\r\n    vector<array<int, 2>> f(n + 1);\r\n    for (int i = 0; i < n; i++) {\r\n        if (i & 1) odd.emplace_back(a[i]);\r\n        else even.emplace_back(a[i]);\r\n    }\r\n    odd.emplace_back(-3), even.emplace_back(-3);\r\n    f[0][1] = 1;\r\n    for (int i = 1; i <= n; i++) {\r\n        f[i][0] = 1ll * f[i - 1][1] * (k - 1) % mod;\r\n        f[i][1] = (f[i - 1][0] + 1ll * f[i - 1][1] * (k - 2) % mod) % mod;\r\n    }  \r\n    auto calc = [&](vector<int>& v) {\r\n        int res = 1;\r\n        for (int i = 0; i + 1 < n; ) {\r\n            int j = i + 1;\r\n            while (j < v.size() and v[j] == -1) j++;\r\n            int len = j - i - 1;\r\n            if (j - i == 1) {\r\n                if (~v[i] and ~v[j] and v[i] == v[j]) return 0;\r\n                i = j;\r\n                continue;\r\n            }\r\n            if (v[i] == -2 and v[j] == -3) {\r\n                res = 1ll * k * qpow(k - 1, len - 1) % mod;\r\n            } else if (v[i] == -2) {\r\n                res = 1ll * qpow(k - 1, len) % mod;\r\n            } else if (v[j] == -3) {\r\n                res = 1ll * res * qpow(k - 1, len) % mod;\r\n            } else if (v[i] == v[j]) {\r\n                res = 1ll * res * f[j - i - 1][0] % mod;\r\n            } else if (v[i] != v[j]) {\r\n                res = 1ll * res * f[j - i - 1][1] % mod;\r\n            }\r\n            i = j;\r\n        }\r\n        return res;\r\n    };\r\n    cout << 1ll * calc(even) * calc(odd) % mod << '\\n';\r\n}\r\n\r\nint main() {\r\n    cin.tie(0)->sync_with_stdio(false);\r\n    int T = 1;\r\n    while (T--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}