{
    "id": 229955079,
    "contestId": 1140,
    "creationTimeSeconds": 1698381116,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1140,
        "index": "E",
        "name": "Palindrome-less Arrays",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "combinatorics",
            "divide and conquer",
            "dp"
        ]
    },
    "author": {
        "contestId": 1140,
        "members": [
            {
                "handle": "rakkoon69"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1553267100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 49,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 6758400,
    "source": "// #pragma GCC optimize(\"trapv\")\r\n#include <bits/stdc++.h>\r\n\r\n#define int long long\r\n#define ll long long\r\n#define II pair<int, int>\r\n#define fs first\r\n#define sc second\r\n#define endl '\\n'\r\n\r\n#define mp(x, y) make_pair(x, y)\r\n#define sz(x) ((int) (x.size()))\r\n#define forlr(i, l, r) for(int i = l; i <= r; i++)\r\n#define forrl(i, r, l) for(int i = r; i >= l; i--)\r\n#define show(v) for(auto i : v) cout << i << \" \"; cout << endl;\r\n#define showlr(v, l, r) for (int i = l; i <= r; i++) cout << v[i] << \" \"; cout << endl;\r\n#define all(v) v.begin(), v.end()\r\n#define Unique(v) v.erase(unique(all(v)), v.end());\r\n\r\nconst long long LINF = 1ll << 60;\r\nconst int INF = 1 << 30;\r\nconst int N = 2e5 + 5;\r\nconst int MOD = 998244353;\r\n\r\nusing namespace std;\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count()); \r\n\r\nint n, k;\r\nint dpd[N], dps[N];\r\n\r\nint same(int len);\r\n\r\nint dif(int len) {\r\n    if(len <= 0) return dpd[len] = 1;\r\n    if(dpd[len] != -1) return dpd[len];\r\n    if(len == 1) return dpd[len] = k - 2;\r\n    \r\n    if(len % 2 == 0) {\r\n        dpd[len] = (k - 2) * dif(len - 1) + same(len - 1);    \r\n    } else {\r\n        dpd[len] = ((k - 2) * dif(len / 2) % MOD) * dif(len / 2) % MOD + 2 * (same(len / 2) * dif(len / 2) % MOD);\r\n    }\r\n    dpd[len] %= MOD;\r\n    \r\n    return dpd[len];\r\n}\r\n\r\nint same(int len) {\r\n    if(len <= 0) return dps[len] = 0;\r\n    if(dps[len] != -1) return dps[len];\r\n    if(len == 1) return dps[len] = k - 1;\r\n\r\n    if(len % 2 == 0) {\r\n        dps[len] = (k - 1) * dif(len - 1);\r\n    } else {\r\n        dps[len] = ((same(len / 2) * same(len / 2)) % MOD) + (k - 1) * ((dif(len / 2) * dif(len / 2)) % MOD);\r\n    }\r\n    dps[len] %= MOD;\r\n\r\n    return dps[len];\r\n}\r\n\r\nint solve(vector<int>& a) {\r\n    int m = sz(a) - 1;\r\n\r\n\r\n    int ans = 1, last = 0;\r\n    forlr(i, 1, m) {\r\n        if(a[i] == -1) continue;\r\n        if(last == i - 1) {\r\n            if(a[last] == a[i]) return 0;\r\n            last = i;\r\n            continue;\r\n        }\r\n        if(a[i] == a[last]) {\r\n            ans = (ans * same(i - last - 1)) % MOD;\r\n        } else if(last == 0) {\r\n            if(i > 2) ans = (ans * (same(i - last - 2) + (dif(i - last - 2) * (k - 1)) % MOD)) % MOD;\r\n            else ans = (ans * (k - 1)) % MOD;\r\n        } else {\r\n            ans = (ans * dif(i - last - 1)) % MOD;\r\n        }\r\n        last = i;\r\n    }\r\n    if(last == 0) {\r\n        if(m == 1) ans = k;\r\n        else ans = ((((k * (k - 1)) % MOD) * dif(m - 2)) % MOD) + ((k * same(m - 2) % MOD) * (m > 2));   \r\n    } else if(last != m) ans = (ans * (same(m - last - 1) + (dif(m - last - 1) * (k - 1)) % MOD)) % MOD;\r\n\r\n    return ans % MOD;\r\n}\r\n\r\nint32_t main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL); cout.tie(NULL);\r\n\r\n    cin >> n >> k;\r\n\r\n    vector<int> a, b;\r\n    a.push_back(0);\r\n    b.push_back(0);\r\n    \r\n    forlr(i, 1, n) {\r\n        int x;\r\n        cin >> x;\r\n        if(i & 1) a.push_back(x);\r\n        else b.push_back(x);\r\n    }\r\n\r\n    memset(dpd, -1, sizeof(dpd));\r\n    memset(dps, -1, sizeof(dps));\r\n\r\n    // cout << ((((200000ll * (200000ll - 1ll)) % MOD) *(200000ll - 1ll)) % MOD)  << endl; \r\n\r\n    int ans = (solve(a) * solve(b)) % MOD;\r\n    cout << ans << endl;\r\n\r\n    return 0;\r\n}"
}