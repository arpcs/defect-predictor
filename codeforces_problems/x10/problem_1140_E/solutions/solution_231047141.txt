{
    "id": 231047141,
    "contestId": 1140,
    "creationTimeSeconds": 1698969038,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1140,
        "index": "E",
        "name": "Palindrome-less Arrays",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "combinatorics",
            "divide and conquer",
            "dp"
        ]
    },
    "author": {
        "contestId": 1140,
        "members": [
            {
                "handle": "GenghizKhan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1553267100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 49,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 4710400,
    "source": "#include <bits/stdc++.h>\r\n#define mod 998244353\r\n#define lim 1000000000000000007\r\n#define lim1 18446744073709551615  // Unsigned\r\n#define sq(a) ((a) * (a))\r\n#define all(v) v.begin(), v.end()\r\n#define pb push_back\r\nusing namespace std;\r\ntypedef long long int ll;\r\ntypedef pair<int, int> pi;\r\ntypedef pair<int, pi> pii;\r\nconst int N = (int)2e5 + 5;\r\nll same[N], diff[N];\r\nvector<int> a[2];\r\nll solve(int j, ll k) {\r\n    int l = 0;\r\n    ll ret = 1;\r\n    for (int i = 1; i < a[j].size(); i++) {\r\n        if (a[j][i] > 0) {\r\n            if (l > 0) {\r\n                if (a[j][l] == a[j][i])\r\n                    ret = (ret * same[i - 1 - l]) % mod;\r\n                else\r\n                    ret = (ret * diff[i - 1 - l]) % mod;\r\n            } else if (i > 1)\r\n                ret = ((k - 1) * diff[i - 2] + same[i - 2]) % mod;\r\n            l = i;\r\n        }\r\n    }\r\n    int n = a[j].size();\r\n    if (l > 0 && l < n - 1)\r\n        ret = (ret * (((k - 1) * diff[n - l - 2] + same[n - l - 2]) % mod)) % mod;\r\n    else if (l == 0) {\r\n        if (n == 2)\r\n            ret = k;\r\n        else\r\n            ret = (k * same[n - 3] + ((k * (k - 1)) % mod) * diff[n - 3]) % mod;\r\n    }\r\n    return ret;\r\n}\r\nint power(long long x, unsigned int y, int p) {\r\n    // calculates x^y\r\n    int res = 1;\r\n    x = x % p;\r\n    if (x == 0)\r\n        return 0;\r\n    while (y > 0) {\r\n        if (y & 1) {\r\n            res = (res * x) % p;\r\n        }\r\n        y = y >> 1;\r\n        x = (x * x) % p;\r\n    }\r\n    return res;\r\n}\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n\r\n    int n, k, x;\r\n    cin >> n >> k;\r\n    same[0] = 0;\r\n    diff[0] = 1;\r\n    for (int l = 1; l <= n; l++) {\r\n        // same[l] = ((k - 1) * diff[l - 1]) % mod;\r\n        // diff[l] = (same[l - 1] + ((k - 2) * diff[l - 1]) % mod) % mod;\r\n        same[l] = (power(k - 1, l, mod) - same[l - 1] + mod) % mod;\r\n        diff[l] = (power(k - 1, l, mod) - diff[l - 1] + mod) % mod;\r\n    }\r\n    a[0].pb(0);\r\n    a[1].pb(0);\r\n    for (int i = 1; i <= n; i++) {\r\n        cin >> x;\r\n        a[i & 1].pb(x);\r\n    }\r\n    cout << ((solve(0, k) * solve(1, k)) % mod);\r\n}"
}