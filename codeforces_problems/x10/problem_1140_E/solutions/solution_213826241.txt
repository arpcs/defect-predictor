{
    "id": 213826241,
    "contestId": 1140,
    "creationTimeSeconds": 1689364297,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1140,
        "index": "E",
        "name": "Palindrome-less Arrays",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "combinatorics",
            "divide and conquer",
            "dp"
        ]
    },
    "author": {
        "contestId": 1140,
        "members": [
            {
                "handle": "diobrando97"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1553267100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 49,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 8704000,
    "source": "#include <bits/stdc++.h>\r\n#pragma GCC optimize(3)\r\n#define ll long long\r\n#define pii pair<int, int>\r\n#define pll pair<long long, long long>\r\n#define F first\r\n#define S second\r\n#define endl '\\n'\r\nusing namespace std;\r\nconst int inf = 0x3f3f3f3f;\r\nconst ll Inf = 1e18;\r\nconst int mod = 998244353;\r\nconst int N = 2e5 + 5;\r\n\r\nconst int maxn = 2e5 + 5;\r\n\r\nll fac[maxn], inv[maxn];\r\nvoid init(){\r\n    fac[0] = fac[1] = inv[0] = inv[1] = 1;\r\n    for(int i=2; i<maxn; i++){\r\n        fac[i] = (i * fac[i-1]) % mod;\r\n        inv[i] = mod - mod/i * inv[mod%i] % mod;\r\n    }\r\n    return;\r\n}\r\n\r\nll C(int n, int k){\r\n    if(n < k || k < 0 || n < 0) return 0;\r\n    return fac[n] * inv[k] % mod * inv[n-k] % mod;\r\n}\r\n\r\n\r\nint n, k;\r\nint a[N];\r\nll dp[N][2];\r\n\r\nvoid solve(){\r\n    cin >> n >> k;\r\n    for(int i=1; i<=n; i++) cin >> a[i];\r\n    vector<int> b, c;\r\n    for(int i=1; i<=n; i++){\r\n        if(i & 1) b.push_back(a[i]);\r\n        else c.push_back(a[i]);\r\n    }\r\n\r\n    memset(dp, 0, sizeof dp);\r\n    dp[0][0] = 1;\r\n    for(int i=0; i<n; i++){\r\n        dp[i+1][0] += dp[i][1];\r\n        dp[i+1][1] += dp[i][0] * (k-1) % mod + dp[i][1] * (k-2) % mod;\r\n        dp[i+1][1] %= mod;\r\n    }\r\n\r\n    auto cal = [&](vector<int> &v) -> ll {\r\n        ll res = 1;\r\n        int m = v.size();\r\n        for(int i=1; i<m; i++) if(v[i] > 0 && v[i-1] > 0 && v[i] == v[i-1]) return 0;\r\n        int l = 0, r = m - 1;\r\n        while(l < m && v[l] == -1){\r\n            l++;\r\n            res = res * (k-1) % mod;\r\n        }\r\n        if(l == m){\r\n            return res * k % mod * inv[k-1] % mod;\r\n        }\r\n        while(r > l && v[r] == -1){\r\n            r--;\r\n            res = res * (k-1) % mod;\r\n        }\r\n        for(int i=l; i<=r; i++){\r\n            if(v[i] > -1) continue;\r\n            int j = i;\r\n            while(j + 1 <= r && v[j+1] == -1) j++;\r\n            int len = j - i + 1;\r\n            ll val = 1;\r\n            if(v[i-1] == v[j+1]) {\r\n                val = dp[len][1];\r\n            } else{\r\n                val = (dp[len][0] + dp[len][1] * (k-2) % mod * inv[k-1]) % mod;\r\n            }\r\n            res = res * val % mod;\r\n            i = j;           \r\n        }\r\n        // cout << \"res=\" << res << endl;\r\n        return res;\r\n    };\r\n\r\n    ll ans = cal(b) * cal(c) % mod;\r\n    cout << ans << endl;\r\n} \r\n \r\n \r\nint main(){\r\n    ios::sync_with_stdio(0); cin.tie(0);\r\n    // freopen(\"input.txt\", \"r\", stdin);\r\n    // freopen(\"output.txt\", \"w\", stdout);\r\n    init();\r\n    int t = 1;\r\n    // cin >> t;\r\n    while(t--)\r\n    solve();\r\n \r\n    return 0;\r\n}"
}