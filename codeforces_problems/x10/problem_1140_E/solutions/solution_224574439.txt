{
    "id": 224574439,
    "contestId": 1140,
    "creationTimeSeconds": 1695368794,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1140,
        "index": "E",
        "name": "Palindrome-less Arrays",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "combinatorics",
            "divide and conquer",
            "dp"
        ]
    },
    "author": {
        "contestId": 1140,
        "members": [
            {
                "handle": "Lihg"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1553267100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 32,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 16793600,
    "source": "#include<bits/stdc++.h>\r\n\r\n#define i64 long long\r\n#define pii pair<int,int>\r\n#define pli pair<i64,int>\r\n#define int128 __int128_t\r\nusing namespace std;\r\n\r\nconst i64 mod=998244353;\r\n\r\nint main()\r\n{\r\n\tios::sync_with_stdio(false);\r\n    cin.tie(0),cout.tie(0);\r\n    cout<<fixed<<setprecision(10);\r\n    \r\n    i64 n,k;cin>>n>>k;\r\n    vector<vector<i64>>dp(n+1,vector<i64>(2,0));\r\n    vector<i64>a(n+1,0);\r\n    for(int i=1;i<=n;i++) cin>>a[i];\r\n    dp[0][0]=1;dp[0][1]=0;\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        dp[i][1]=dp[i-1][0]*(k-1);dp[i][1]%=mod;\r\n        dp[i][0]=dp[i-1][1]+dp[i-1][0]*(k-2);dp[i][0]%=mod;\r\n    }\r\n    vector<i64>v1,v2;\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        if(i&1) v1.push_back(a[i]);\r\n        else v2.push_back(a[i]);\r\n    }\r\n\r\n    auto count = [&] (vector<i64>v)\r\n    {\r\n        i64 res=1;\r\n        for(int i=0;i<v.size();)\r\n        {\r\n            int j;\r\n            if(v[i]==-1)\r\n            {\r\n                for(j=i+1;v[j]==-1&&j<v.size();j++);\r\n                if(j==v.size())\r\n                {\r\n                    if(v.size()==1) return k;\r\n                    res=(dp[v.size()-2][0]*(k-1)+dp[v.size()-2][1])%mod;\r\n                    res*=k;\r\n                    res%=mod;\r\n                    return res;\r\n                }\r\n                else\r\n                {\r\n                    res*=(dp[j-1][0]*(k-1)+dp[j-1][1]);\r\n                    res%=mod;\r\n                    i=j;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if(i==v.size()-1) return res;\r\n                for(j=i+1;v[j]==-1 && j<v.size();j++);\r\n                if(j==v.size())\r\n                {\r\n                    res*=(dp[v.size()-i-2][0]*(k-1)+dp[v.size()-i-2][1]);\r\n                    res%=mod;\r\n                }\r\n                else\r\n                {\r\n                    if(v[i]==v[j])\r\n                    {\r\n                        res*=dp[j-i-1][1];\r\n                        res%=mod;\r\n                    }\r\n                    else res*=dp[j-i-1][0],res%=mod;\r\n                }\r\n                i=j;\r\n            }\r\n        }\r\n        return res;\r\n    };\r\n    i64 ans=1;\r\n    ans*=count(v1);ans%=mod;\r\n    ans*=count(v2);ans%=mod;\r\n    cout<<ans<<\"\\n\";\r\n    return 0;   \r\n}"
}