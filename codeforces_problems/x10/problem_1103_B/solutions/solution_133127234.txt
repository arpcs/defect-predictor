{
    "id": 133127234,
    "contestId": 1103,
    "creationTimeSeconds": 1635230510,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1103,
        "index": "B",
        "name": "Game with modulo",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "constructive algorithms",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1103,
        "members": [
            {
                "handle": "Hinata__"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1548167700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1024000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long \r\nconst int inf = 1e18;\r\n#define D long double\r\nconst long double pi = 3.141592653589793238;\r\n#define FIO ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);\r\nconst int MOD = 1000000007;\r\n#define fi first\r\n#define se second\r\n// #define endl '\\n'\r\nconst int N = 2e5 + 10;\r\nint m ;\r\n\r\nint query(int x , int y){\r\n    cout << \"? \" << x << \" \" << y << endl; \r\n    int res ; cin >> res ; return res ; \r\n}\r\n\r\nvoid solve(){\r\n    int l , r , ans , it = -1 ; \r\n    for(int i = 0 ; i < 30 ; i++){\r\n        int x = query((1LL<<i),(1LL<<(i+1)));\r\n        if(x==(1LL<<i)){\r\n            it = i ; break ;\r\n        }\r\n    }\r\n    if(it==-1)exit(1);\r\n    l = (1LL<<it)+1 ; r = (1LL<<(it+1)); ans = r ;  \r\n    while(l<=r){\r\n        int m = (l+r)/2 ;\r\n        if(query((1LL<<it),m)!=(1LL<<it))r = m-1 , ans = m ;\r\n        else l = m+1; \r\n    }\r\n    cout << \"! \" << ans << endl; \r\n} \r\n\r\nsigned main() {\r\n        FIO\r\n        int t = 1;\r\n        // cout << (1LL<<32) - (int)(2e9) << endl;\r\n        // cin >> t;\r\n        while(1){\r\n            string s ; cin >> s ; \r\n            if(s==\"start\")solve();\r\n            else break; \r\n        }\r\n\r\n}"
}