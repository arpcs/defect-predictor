{
    "id": 154838350,
    "contestId": 1103,
    "creationTimeSeconds": 1650796935,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1103,
        "index": "B",
        "name": "Game with modulo",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "constructive algorithms",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1103,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1548167700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 40,
    "timeConsumedMillis": 108,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\nint n,i,a,b,mid;\nchar c[8],op;\nvoid outp(int x){\n\tif(x>9)\n\toutp(x/10);\n\tputchar(x%10+48);\n\treturn ;\n}\nint main()\n{\n\tscanf(\"%s\",c);\n\twhile(c[0]^'e'){\n\t\tputs(\"? 0 1\");\n\t\ta=0,b=1;\n\t\tfflush(stdout);\n\t\top=getchar();\n\t\twhile(op!='x'&&op!='y') op=getchar();\n\t\twhile(op=='y'&&(b>>29)==0){\n\t\t\ta=b;\n\t\t\tb*=2;\n\t\t\tputchar('?');\n\t\t\tputchar(' ');\n\t\t\toutp(a);\n\t\t\tputchar(' ');\n\t\t\toutp(b);\n\t\t\tputchar('\\n');\n\t\t\tfflush(stdout);\n\t\t\top=getchar();\n\t\t\twhile(op!='x'&&op!='y') op=getchar();\n\t\t}\n\t\tif(b>>29&&op=='y'){\n\t\t\ta=b;\n\t\t\tb=1000000000;\n\t\t}\n\t\ta++;\n\t\twhile(a<b){\n\t\t\tmid=(a>>1)+(b>>1)+(a&b&1);\n\t\t\tputchar('?');\n\t\t\tputchar(' ');\n\t\t\toutp(a-1);\n\t\t\tputchar(' ');\n\t\t\toutp(mid);\n\t\t\tputchar('\\n');\n\t\t\tfflush(stdout);\n\t\t\top=getchar();\n\t\t\twhile(op!='x'&&op!='y'&&op!='e') op=getchar();\n\t\t\tif(op=='y') a=mid+1;\n\t\t\telse if(op=='x') b=mid;\n\t\t\telse return 0;\n\t\t}\n\t\tprintf(\"! %d\\n\",b);\n\t\tfflush(stdout);\n\t\tscanf(\"%s\",c);\n\t\tif(c[0]=='m') return 0;\n\t}\n\treturn 0;\n}\n  \t \t     \t  \t\t\t\t  \t\t\t\t \t \t \t"
}