{
    "id": 165772531,
    "contestId": 51,
    "creationTimeSeconds": 1658833802,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 51,
        "index": "F",
        "name": "Caterpillar",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2800,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 51,
        "members": [
            {
                "handle": "4501897xz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1293552000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 100,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 12288000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define fi first\r\n#define se second\r\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\r\n#define per(i,a,b) for(int i=(a);i>=(b);i--)\r\ntypedef pair<int,int> pii;\r\ntypedef vector<int> vi;\r\ntypedef vector<pii> vp;\r\n\r\nlong long read() {\r\n\tlong long res=0, w=1; char c=getchar();\r\n\twhile(!isdigit(c)) {if(c=='-') w=-1; c=getchar();}\r\n\twhile(isdigit(c)) {res=res*10+c-48, c=getchar();}\r\n\treturn res*w;\r\n}\r\n\r\nconst int N=1e5+9;\r\n\r\nint n,m,ans,dfn[N],low[N],tick,dcc[N],cnt;\r\nvp e[N];\r\nvi t[N];\r\nbool evst[N],nvst[N],cut[N];\r\n\r\nvoid tarjan(int u) {\r\n\tdfn[u]=low[u]=++tick;\r\n\tfor(auto ed:e[u]) {\r\n\t\tint v=ed.fi, id=ed.se;\r\n\t\tif(evst[id]) continue; evst[id]=1;\r\n\t\tif(!dfn[v]) {\r\n\t\t\ttarjan(v), low[u]=min(low[u],low[v]);\r\n\t\t\tif(low[v]>dfn[u]) cut[id]=1;\r\n\t\t} else low[u]=min(low[u],dfn[v]);\r\n\t}\r\n}\r\nvoid dfs(int u) {\r\n\tdcc[u]=cnt;\r\n\tfor(auto ed:e[u]) {\r\n\t\tint v=ed.fi, id=ed.se;\r\n\t\tif(evst[id]||cut[id]) continue; evst[id]=1;\r\n\t\tdfs(v);\r\n\t}\r\n}\r\n\r\nint f[N],lcnt,dd,deg[N];\r\n\r\nvoid dfst(int u) {\r\n\tnvst[u]=1; f[u]=1;\r\n\tfor(auto v:t[u]) if(!nvst[v]) {\r\n\t\tdeg[u]++, deg[v]++; dfst(v);\r\n\t\tdd=max(dd,f[u]+f[v]);\r\n\t\tf[u]=max(f[u],f[v]+1);\r\n\t} lcnt+=(deg[u]<=1);\r\n\tdd=max(dd,f[u]);\r\n}\r\nint cald(int x) {\r\n\tlcnt=dd=0; dfst(x);\r\n\treturn lcnt+dd-1-(lcnt>1);\r\n}\r\n\r\nsigned main() {\r\n\tn=read(), m=read();\r\n\trep(i,1,m) {\r\n\t\tint u=read(), v=read();\r\n\t\te[u].emplace_back(pii(v,i)), e[v].emplace_back(pii(u,i));\r\n\t}\r\n\trep(i,1,n) if(!dfn[i]) tarjan(i);\r\n\trep(i,1,m) evst[i]=0;\r\n\trep(i,1,n) if(!dcc[i]) ++cnt, dfs(i);\r\n\tans=n;\r\n\trep(i,1,n) for(auto v:e[i]) t[dcc[i]].emplace_back(dcc[v.fi]);\r\n\trep(i,1,cnt) if(!nvst[i]) ans-=cald(i)-1;\r\n\tprintf(\"%d\\n\",ans-1);\r\n\treturn 0;\r\n}"
}