{
    "id": 205380467,
    "contestId": 1106,
    "creationTimeSeconds": 1683769089,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1106,
        "index": "B",
        "name": "Lunar New Year and Food Ordering",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1500,
        "tags": [
            "data structures",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1106,
        "members": [
            {
                "handle": "Shady_Mo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1548938100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#pragma GCC optimize(\"03\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\n#pragma GCC optimization(\"unroll-loops\")\n\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/rope>\n\nusing namespace std;\nusing namespace __gnu_pbds;\nusing namespace __gnu_cxx;\n\ntypedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> indexed_set;\n\n#define ONLINE_JUDGE\n#define end1 '\\n'\n#define mod 1000000007\n#define N 1000005\n#define OOL 1'000'000'000'000'000'005\n#define OO 1'000'000'005\n#define ebs 1e-9\n#define e 2.718281828\n#define PI acos(-1.0)\n#define popcnt(x) __builtin_popcountll(x)\n#define ctz(x) __builtin_ctzll(x)\n#define clz(x) __builtin_clzll(x)\n#define parity(x) __builtin_parity(x)\n#define debug(...) [](const auto&...x){ char c='='; cerr<<#__VA_ARGS__<<\" \"; ((cerr<<exchange(c,',')<<\" \"<<x),...); cerr<<endl; }(__VA_ARGS__);\n\nint dx[] = { 0, 0, 1, -1, 1, -1, 1, -1 };\nint dy[] = { 1, -1, 0, 0, -1, 1, 1, -1 };\n\nvoid file() {\n#ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \" r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif\n}\n\nvoid solve() {\n    int n, m;\n    cin >> n >> m;\n    vector<long long> a(n), c(n);\n    map<long long, long long> rem;\n    priority_queue<pair<long long, long long>, vector<pair<long long, long long>>, greater<>> pq;\n    for (int i = 0; i < n; i++) cin >> a[i], rem[i + 1] = a[i];\n    for (int i = 0; i < n; i++) cin >> c[i], pq.push(make_pair(c[i], i + 1));\n    for (int i = 0; i < m; i++) {\n        long long t, d, ans = 0;\n        cin >> t >> d;\n        while (d) {\n            if (rem[t]) {\n                ans += c[t - 1] * min(d, rem[t]);\n                long long mn = min(d, rem[t]);\n                rem[t] -= mn;\n                d -= mn;\n            }\n            else {\n                while (pq.size() && !rem[pq.top().second]) pq.pop();\n                if (pq.empty()) break;\n                ans += pq.top().first * min(d, rem[pq.top().second]);\n                long long mn = min(d, rem[pq.top().second]);\n                rem[pq.top().second] -= mn;\n                d -= mn;\n            }\n        }\n        cout << ans << end1;\n    }\n}\n\ninline void init() {\n    ios_base::sync_with_stdio(false), cout.tie(NULL), cin.tie(NULL);\n}\n\nint main() {\n    file();\n    init();\n    int tt = 1;\n    //cin >> tt;\n    for (int tc = 1; tc <= tt; tc++) solve();\n}"
}