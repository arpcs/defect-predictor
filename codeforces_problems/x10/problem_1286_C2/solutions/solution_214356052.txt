{
    "id": 214356052,
    "contestId": 1286,
    "creationTimeSeconds": 1689685485,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1286,
        "index": "C2",
        "name": "Madhouse (Hard version)",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2800,
        "tags": [
            "brute force",
            "constructive algorithms",
            "hashing",
            "interactive",
            "math"
        ]
    },
    "author": {
        "contestId": 1286,
        "members": [
            {
                "handle": "wcywcywcywcy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1578233100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 512000,
    "source": "#include <bits/stdc++.h>\r\n#define L(i, j, k) for (int i = (j); i <= (k); i++)\r\n#define R(i, j, k) for (int i = (j); i >= (k); i--)\r\n#define G(i, u, g) for (int i = g.h[u]; ~i; i = g.ne[i])\r\n#define ms(x, v) memset(x, v, sizeof x)\r\n#define ll long long\r\nusing namespace std;\r\nconst int N = 110;\r\nchar res[N], f[N][26];\r\nmultiset<string> ss;\r\nvector<string> v;\r\nint t[26], l[26];\r\nvoid solve(int n) {\r\n    cout << \"? \" << 1 << ' ' << n << endl;\r\n    cout.flush();\r\n    L(i, 1, n * (n + 1) / 2) {\r\n        string s;\r\n        cin >> s;\r\n        sort(s.begin(), s.end());\r\n        ss.insert(s);\r\n    }\r\n    cout << \"? \" << 1 << ' ' << n - 1 << endl;\r\n    cout.flush();\r\n    L(i, 1, n * (n - 1) / 2) {\r\n        string s;\r\n        cin >> s;\r\n        sort(s.begin(), s.end());\r\n        ss.erase(ss.find(s));\r\n    }\r\n    for (string s : ss) v.emplace_back(s);\r\n    sort(v.begin(), v.end(), [] (string i, string j) { return i.size() < j.size(); });\r\n    int now = n;\r\n    for (string s : v) {\r\n        L(i, 0, s.size() - 1) t[s[i] - 'a']++;\r\n        L(i, 0, s.size() - 1) if (t[s[i] - 'a'] > l[s[i] - 'a']) {\r\n            res[now--] = s[i];\r\n            break;\r\n        }\r\n        L(i, 0, 25) l[i] = t[i], t[i] = 0;\r\n    }\r\n}\r\nint main() {\r\n    ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\r\n    int n; cin >> n;\r\n    if (n == 1) {\r\n        cout << \"? \" << 1 << ' ' << 1 << endl;\r\n        cout.flush();\r\n        char c; cin >> c;\r\n        cout << \"! \" << c << endl;\r\n        return 0;\r\n    }\r\n    if (n <= 3) {\r\n        solve(n);\r\n        cout << \"! \" << res + 1 << endl;\r\n        return 0;\r\n    }\r\n    solve(n / 2);\r\n    cout << \"? \" << 1 << ' ' << n << endl;\r\n    cout.flush();\r\n    L(i, 1, n * (n + 1) / 2) {\r\n        string s; cin >> s;\r\n        L(j, 0, s.size() - 1) f[s.size()][s[j] - 'a']++;\r\n    }\r\n    R(i, (n - 1) / 2, 0) {\r\n        int l = i + 1, r = n - i;\r\n        ms(t, 0);\r\n        L(j, l, r - 1) t[res[j] - 'a']++;\r\n        L(j, 0, 25) if (f[i + 1][j] - f[i][j] > t[j]) {\r\n            res[r] = j + 'a';\r\n            break;\r\n        }\r\n        if (!res[r]) cout << r << endl, assert(1 + 2 == 2);\r\n    }\r\n    cout << \"! \" << res + 1 << endl;\r\n    return 0;\r\n}"
}