{
    "id": 216142672,
    "contestId": 802,
    "creationTimeSeconds": 1690576341,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 802,
        "index": "I",
        "name": "Fake News (hard)",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "string suffix structures"
        ]
    },
    "author": {
        "contestId": 802,
        "members": [
            {
                "handle": "Sogol"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1495958700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 16,
    "timeConsumedMillis": 1871,
    "memoryConsumedBytes": 183091200,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\n \n#define pb       push_back\n#define Sz(x)    int((x).size())\n#define all(x)   x.begin(), x.end()\n#define fi       first\n#define se       second\n#define cl       clear\n \nconst int lg    =  20;\nconst int maxn  =  1e6   + 10;\nconst int maxa  =  2e9   +  5;\nconst int mod   =  1e9   +  7;\nconst ll  inf   =  2e18;\nconst double eps = 1e-9;\n\nvector <int> vct;\nvector <pair <pair <int, int>, int> > vc, vec[maxn];\nint rnk[maxn][lg], x[maxn], cn[maxn], le[maxn], ri[maxn];\n\ninline void radix_sort(){\n    int n = max(30, Sz(vc));\n    for (int i = 0; i < Sz(vc); i ++){\n        vec[vc[i].fi.se].pb(vc[i]);\n    }\n    vc.cl();\n    for (int i = 0; i <= n; i ++){\n        for (auto x : vec[i]) vc.pb(x);\n        vec[i].cl();\n    }\n    for (int i = 0; i < Sz(vc); i ++){\n        vec[vc[i].fi.fi].pb(vc[i]);\n    }\n    vc.cl();\n    for (int i = 0; i <= n; i ++){\n        for (auto x : vec[i]) vc.pb(x);\n        vec[i].cl();\n    }\n    return;\n}\n\ninline int lcp(int x, int y){\n    int ans = 0;\n    for (int i = lg - 1; i >= 0; i --){\n        if(rnk[x][i] == rnk[y][i]){\n            ans += (1 << i);\n            x += (1 << i);\n            y += (1 << i);\n        }\n    }\n    return ans;\n}\n\nint main(){\n    ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);\n    int t;\n    string s;\n    cin >> t;\n    while (t --){\n        cin >> s;\n        int n = Sz(s);\n        for (int i = 0; i < n; i ++) rnk[i][0] = s[i] - 'a' + 1;\n        for (int j = 1; j < lg; j ++){\n            vc.cl();\n            for (int i = 0; i < n; i ++){\n                vc.pb({{rnk[i][j - 1], 0}, i});\n                if(i + (1 << (j - 1)) < n) vc.back().fi.se = rnk[i + (1 << (j - 1))][j - 1];\n            }\n            radix_sort();\n            int r = 1;\n            for (int i = 0; i < n; i ++){\n                if(i && vc[i].fi != vc[i - 1].fi) r ++;\n                rnk[vc[i].se][j] = r;\n            }\n        }\n        for (int i = 0; i < n; i ++) x[rnk[i][lg - 1] - 1] = i;\n        for (int i = 1; i < n; i ++) cn[i] = lcp(x[i], x[i - 1]);\n        vct.cl();\n        for (int i = 1; i < n; i ++){\n            while(!vct.empty() && cn[vct.back()] >= cn[i]) vct.pop_back();\n            le[i] = vct.empty() ? i : i - vct.back();\n            vct.pb(i);\n        }\n        vct.cl();\n        for (int i = n - 1; i > 0; i --){\n            while(!vct.empty() && cn[vct.back()] > cn[i]) vct.pop_back();\n            ri[i] = vct.empty() ? n - i : vct.back() - i;\n            vct.pb(i);\n        }\n        ll ans = 0;\n        for (int i = 1; i < n; i ++) ans += 1ll * le[i] * ri[i] * cn[i];\n        cout << ans * 2 + 1ll * Sz(s) * (Sz(s) + 1) / 2 << endl;\n    }\n    return 0;\n}"
}