{
    "id": 230243762,
    "contestId": 1684,
    "creationTimeSeconds": 1698509733,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1684,
        "index": "H",
        "name": "Hard Cut",
        "type": "PROGRAMMING",
        "points": 3250.0,
        "rating": 3400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "divide and conquer",
            "math"
        ]
    },
    "author": {
        "contestId": 1684,
        "members": [
            {
                "handle": "nguyenquocthinhhung"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1652970900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 811,
    "memoryConsumedBytes": 4096000,
    "source": "#include<cstdio>\r\n#include<cstring>\r\nusing namespace std;\r\nconst int o=1<<21;\r\nint T,n,sm;bool cut[o];char str[o];\r\nint main(){\r\nfor(scanf(\"%d\",&T);T--;putchar('\\n'),sm=0){\r\nscanf(\"%s\",str+1);cut[n=strlen(str+1)]=1;\r\nfor(int i=1;i<=n;++i) sm+=str[i]-48;\r\nif(!sm){printf(\"-1\");continue;}\r\nfor(int s=1,cnt,tar,v;1;s<<=1) if(s>=sm){\r\ncnt=1;v=0;tar=s-sm;\r\nfor(int i=1;i<n;++i)\r\nif((v+=str[i]-48)&&tar>=v) tar-=v,cut[i]=0,v*=2;\r\nelse cut[i]=1,v=0,++cnt;\r\nif(!tar){\r\nprintf(\"%d\\n\",cnt);\r\nfor(int i=1,l=1;i<=n;++i) if(cut[i]) printf(\"%d %d\\n\",l,i),l=i+1;\r\nbreak;\r\n}\r\n}\r\n}\r\nreturn 0;\r\n}"
}