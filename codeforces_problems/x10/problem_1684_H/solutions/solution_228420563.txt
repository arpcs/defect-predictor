{
    "id": 228420563,
    "contestId": 1684,
    "creationTimeSeconds": 1697462391,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1684,
        "index": "H",
        "name": "Hard Cut",
        "type": "PROGRAMMING",
        "points": 3250.0,
        "rating": 3400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "divide and conquer",
            "math"
        ]
    },
    "author": {
        "contestId": 1684,
        "members": [
            {
                "handle": "cyb1010"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1652970900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 1024000,
    "source": "/**\r\n * @author : cyb1010\r\n * @date   : 2023-10-16 19:29:44\r\n * @file   : Hard_Cut.cpp\r\n */\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define fo(s) freopen(s \".in\", \"r\", stdin), freopen(s \".out\", \"w\", stdout)\r\n#define fi first\r\n#define se second\r\ntypedef double db;\r\ntypedef long double ldb;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\nint __, _, n, lst;\r\nchar s[1000010];\r\nvector<int> g, ans;\r\nint f(int x) { return 1 << ((x & (x - 1)) ? __lg(x) + 1 : __lg(x)); }\r\nint gg(int x) { return (x >> 1) * 3 + ((x & 1) ? 1 : 0); }\r\nvoid work(int l, int r, int y) {\r\n    if (y == r - l + 1 << 1) {\r\n        if (r - l > 3)\r\n            for (int i = l; i <= r; i += 4) work(i, i + 3, 8);\r\n        else if (g[l + 1] == g[l] + 1) {\r\n            if (g[l + 2] != g[l] + 2) ans.push_back(g[l] + 2);\r\n            ans.push_back(g[l + 2]), ans.push_back(g[r]);\r\n        } else if (g[l + 1] == g[l] + 2)\r\n            ans.push_back(g[l + 1]), work(l + 2, r, 3);\r\n        else\r\n            ans.push_back(g[l] + 2), work(l + 1, r, 4);\r\n        return;\r\n    }\r\n    if (r - l + 1 == 5) {\r\n        if (g[r] - g[l] == 4)\r\n            ans.push_back(g[r - 1]), ans.push_back(g[r]);\r\n        else if (g[l + 1] - g[l] > 1) {\r\n            if (g[l + 1] - g[l] > 2) ans.push_back(g[l] + 2);\r\n            ans.push_back(g[l + 1]), work(l + 2, r, 3);\r\n        } else if (g[l + 2] - g[l + 1] > 1) {\r\n            ans.push_back(g[l]);\r\n            if (g[l + 2] - g[l + 1] > 2) ans.push_back(g[l + 1] + 2);\r\n            ans.push_back(g[l + 2]), work(l + 3, r, 2);\r\n        } else if (g[l + 3] - g[l + 2] > 1) {\r\n            ans.push_back(g[l]), ans.push_back(g[l + 1]);\r\n            if (g[l + 3] - g[l + 2] > 2) ans.push_back(g[l + 2] + 2);\r\n            ans.push_back(g[l + 3]), ans.push_back(g[r]);\r\n        } else {\r\n            work(l, l + 2, 3);\r\n            if (g[r] - g[r - 1] > 2) ans.push_back(g[r - 1] + 2);\r\n            ans.push_back(g[r]);\r\n        }\r\n        return;\r\n    }\r\n    if (y <= gg(r - l + 1)) {\r\n        if ((r - l + 1) & 1) ans.push_back(g[l++]), y--;\r\n        for (int i = l; i <= r; i += 2) {\r\n            if (y > r - i + 1) {\r\n                if (g[i + 1] > g[i] + 1) ans.push_back(g[i] + 1);\r\n                ans.push_back(g[i + 1]), y -= 3;\r\n            } else\r\n                ans.push_back(g[i]), ans.push_back(g[i + 1]), y -= 2;\r\n        }\r\n        return;\r\n    }\r\n    if (r - l + 1 == 10) return work(l, l + 3, 8), work(l + 4, r, 8);\r\n    if (r - l + 1 == 9) {\r\n        if (g[l + 1] == g[l] + 1) {\r\n            if (g[l + 2] == g[l] + 2) {\r\n                ans.push_back(g[l + 2]), work(l + 3, r, 9);\r\n                puts(\"sss\");\r\n            } else\r\n                ans.push_back(g[l + 2]), work(l + 2, r, 10);\r\n        } else {\r\n            if (g[l + 1] != g[l] + 2) ans.push_back(g[l] + 2);\r\n            ans.push_back(g[l + 1]), ans.push_back(g[l + 2]);\r\n            ans.push_back(g[l + 3]), ans.push_back(g[l + 4]);\r\n            work(l + 5, r, 8);\r\n        }\r\n        return;\r\n    }\r\n    int mid = l + r >> 1;\r\n    work(l, mid, y >> 1), work(mid + 1, r, y >> 1);\r\n}\r\nint main() {\r\n    // fo(\"Hard_Cut\");\r\n    scanf(\"%d\", &_);\r\n    for (int ___ = 1; ___ <= _; ___++) {\r\n        scanf(\"%s\", s + 1), n = strlen(s + 1), g.clear(), ans.clear();\r\n        for (int i = 1; i <= n; i++) s[i] == '1' && (g.push_back(i), 1);\r\n        if (g.empty()) {\r\n            printf(\"-1\\n\\n\");\r\n            continue;\r\n        }\r\n        work(0, g.size() - 1, f(g.size()));\r\n        if (ans.back() < n) ans.push_back(n);\r\n        printf(\"%d\\n\", ans.size()), lst = 1;\r\n        for (auto i : ans) printf(\"%d %d\\n\", lst, i), lst = i + 1;\r\n        printf(\"\\n\");\r\n    }\r\n    return 0 ^ __ ^ 0;\r\n}"
}