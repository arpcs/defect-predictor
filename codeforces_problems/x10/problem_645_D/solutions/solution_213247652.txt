{
    "id": 213247652,
    "contestId": 645,
    "creationTimeSeconds": 1689064586,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 645,
        "index": "D",
        "name": "Robot Rapping Results Report",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "graphs"
        ]
    },
    "author": {
        "contestId": 645,
        "members": [
            {
                "handle": "heyguysitsme"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1458318900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 10444800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long int ll;\r\ntypedef pair<ll,ll> LL;\r\ntypedef long double ld;\r\n#define M 1000000007\r\n#define endl '\\n'\r\n#define print(vec)        \\\r\n    for (auto &x : vec)   \\\r\n        cout << x << ' '; \\\r\n    cout << endl;\r\n#define scan(vec)       \\\r\n    for (auto &x : vec) \\\r\n    cin >> x\r\n#define scanv(vec)      \\\r\n    for (auto &x : vec) \\\r\n    cin >> x.first >> x.second\r\n#define prllv(vec)     \\\r\n    for (auto &x : vec) \\\r\n    cout << x.first << ' ' << x.second << endl\r\n#define lb(vec, i) lower_bound(vec.begin(), vec.end(), i)\r\n#define ub(vec, i) upper_bound(vec.begin(), vec.end(), i)\r\n#define pll pair<ll, ll>\r\n#define v(a) vector<a>\r\n#define m(a) map << a, a >>\r\n#define s(a) set<a>\r\n#define ms(a) multiset<a>\r\n#define sg(a) set<a, greater<a>>\r\n#define msg(a) multiset<a, greater<a>>\r\n#define pqmin(a) priority_queue<a, vector<a>, greater<a>>\r\n#define pqmax(a) priority_queue<a>\r\n#define all(a) (a).begin(), (a).end()\r\n#define llno(a) cout << a << endl\r\n#define llp(a) cout << a.first << ' ' << a.second << endl\r\n\r\nll pows[100001];\r\nbool done = 0;\r\n\r\nll power10(ll n){\r\n    if(!done){\r\n        pows[0] = 1;\r\n        for(ll i = 1; i <= 100000; i++)\r\n            pows[i] = (pows[i-1] * 10LL) % M;\r\n        done = 1;\r\n    }\r\n    return pows[n];\r\n}\r\n\r\nll calc(string& num,ll n,ll prest,ll tight,vector<vector<vector<ll>>>&dp,ll sum){\r\n    if(n==0) return sum;\r\n    if(dp[n][prest][tight]!=-1) return dp[n][prest][tight];\r\n    ll ub = num[num.size()-n]-'0';\r\n    ll ans = 0;\r\n    if(tight==0){\r\n        if(prest==0){\r\n            ans+=calc(num,n-1,0,0,dp,sum);\r\n            ans%=M;\r\n            for(ll i=1;i<=9;i++) {\r\n                ans+=calc(num,n-1,i+1,0,dp,(sum+(i*pows[n-1])%M)%M);\r\n                ans%=M;\r\n            }\r\n        }\r\n        else{\r\n            ll last = prest-1;\r\n            for(ll i=0;i<=9;i++){\r\n                if(i!=last) ans+=calc(num,n-1,i+1,0,dp,(sum+(i*pows[n-1])%M)%M);\r\n                else ans+=calc(num,n-1,i+1,0,dp,sum);\r\n                ans%=M;\r\n            }\r\n        }\r\n    }\r\n    else{\r\n        if(prest==0){\r\n            if(ub==0){\r\n                ans+=calc(num,n-1,0,1,dp,sum);\r\n                ans%=M;\r\n            }\r\n            else{\r\n                ans+=calc(num,n-1,0,0,dp,sum);\r\n                ans%=M;\r\n                for(ll i=1;i<ub;i++) {\r\n                    ans+=calc(num,n-1,i+1,0,dp,(sum+(i*pows[n-1])%M)%M);\r\n                    ans%=M;\r\n                }\r\n                ans+=calc(num,n-1,ub+1,1,dp,(sum+(ub*pows[n-1])%M)%M);\r\n                ans%=M;\r\n            }\r\n        }\r\n        else{\r\n            ll last = prest-1;\r\n            for(ll i=0;i<=9;i++){\r\n                if(i<ub){\r\n                    if(i!=last) {\r\n                        ans+=calc(num,n-1,i+1,0,dp,(sum+(i*pows[n-1])%M)%M);\r\n                        ans%=M;\r\n                    }\r\n                    else{\r\n                        ans+=calc(num,n-1,i+1,0,dp,sum);\r\n                        ans%=M;\r\n                    }\r\n                }\r\n            }\r\n            if(last==ub) ans+=calc(num,n-1,ub+1,1,dp,sum);\r\n            else ans+=calc(num,n-1,ub+1,1,dp,(sum+(ub*pows[n-1])%M)%M);\r\n            ans%=M;\r\n        }\r\n    }\r\n    return dp[n][prest][tight]=ans%M;\r\n}\r\n\r\nll calculate(string& L){\r\n    ll prev_dig = 10;\r\n    ll res = 0;\r\n    for(ll i = 0; i < L.length(); i++){\r\n        if((L[i] - '0') != prev_dig){\r\n            res = (res + (L[i] - '0') * pows[L.length() - i - 1]) % M;\r\n        }\r\n        prev_dig = (L[i] - '0');\r\n    }\r\n    return res % M;\r\n}\r\n\r\nll valid(ll i,ll num){\r\n    ll right = pow((double)num,1.0/(i-1));\r\n    ll left = 1;\r\n    while(left<=right){\r\n        ll mid = (right+left)/2;\r\n        ll sum = 1,temp=1;\r\n        for(ll j=1;j<i;j++){\r\n            temp*=mid;\r\n            sum+=temp;\r\n        }\r\n        if(sum==num) {\r\n            return mid;\r\n        }\r\n        if(sum<num) left = mid+1;\r\n        else right = mid-1;\r\n    }\r\n    return -1;\r\n}\r\n\r\nvoid dijsktra(ll start,vector<LL>adjacency[],vector<ll>&dist){\r\n    priority_queue<LL,vector<LL>,greater<LL>> queue;\r\n    dist[start] = 0;\r\n    queue.push({0,start});\r\n    while(!queue.empty()){\r\n        LL popped = queue.top();\r\n        queue.pop();\r\n        if(popped.first>dist[popped.second]) continue;\r\n        for(ll i=0;i<adjacency[popped.second].size();i++){\r\n            LL elem = adjacency[popped.second][i];\r\n            if(dist[popped.second]+elem.second<dist[elem.first]){\r\n                dist[elem.first] = dist[popped.second]+elem.second;\r\n                queue.push({dist[elem.first],elem.first});\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nll conv(string& temp){\r\n    ll n = temp.size();\r\n    ll sum = 0;\r\n    ll res = 1;\r\n    for(ll i=0;i<n;i++){\r\n        sum+=(temp[i]-'0')*res;\r\n        res*=2;\r\n    }\r\n    return sum;\r\n}\r\n\r\nll calc(ll index,vector<ll>&B,ll k,vector<ll>&ans,vector<vector<pair<ll,ll>>>&dp){\r\n    if(k==0) return 0;\r\n    if(index==B.size()) return 0;\r\n    if(dp[index][k].first!=-1) return dp[index][k].first;\r\n    ll p1 = calc(index+1,B,k,ans,dp);\r\n    ll p2 = INT_MIN;\r\n    if(B[index]<=k) p2 = 1 + calc(index,B,k-B[index],ans,dp);\r\n    ll sec = 0;\r\n    if(p2>p1) sec = 1;\r\n    dp[index][k].first = max(p1,p2);\r\n    dp[index][k].second = sec;\r\n    return dp[index][k].first;\r\n}\r\n\r\nvoid genans(vector<ll>&ans,vector<vector<pair<ll,ll>>>&dp,ll index,vector<ll>&B,ll k){\r\n    if(index==B.size()) return;\r\n    if(dp[index][k].second==1) ans.push_back(index);\r\n    if(dp[index][k].second==1) genans(ans,dp,index,B,k-B[index]);\r\n    else genans(ans,dp,index+1,B,k);\r\n}\r\n\r\nclass DisjollSet{\r\n    vector<ll>size,parent;\r\n    public:\r\n        DisjollSet(ll n){\r\n            size.resize(n+1);\r\n            parent.resize(n+1);\r\n            for(ll i=0;i<=n;i++){\r\n                parent[i]=i;\r\n                size[i]=1;\r\n            }\r\n        }\r\n        ll findUPar(ll node){\r\n            if(node==parent[node]) return node;\r\n            else return parent[node]=findUPar(parent[node]);\r\n        }\r\n        void UnionBySize(ll u,ll v){\r\n            ll Pu=findUPar(u);\r\n            ll Pv=findUPar(v);\r\n            if(Pu==Pv) return;\r\n            if(size[Pu]<size[Pv]){\r\n                parent[Pu]=Pv;\r\n                size[Pv]+=size[Pu];\r\n            }\r\n            else{\r\n                parent[Pv]=Pu;\r\n                size[Pu]+=size[Pv];\r\n            }\r\n        }\r\n};\r\n\r\n// bool findCycle(int node,int par,vector<int> adj[],vector<int>& color){\r\n//     color[node]=1;\r\n//     for(auto x:adj[node]){\r\n//         if(x!=par){\r\n//             if(color[x]==0) {\r\n//                 if(findCycle(x,node,adj,color)) return true;\r\n//             }\r\n//             else if(color[x]==1)  return true;\r\n//         }\r\n//     }\r\n//     return false;\r\n    // color[node] = 1;\r\n    //   for (auto it: adj[node]) {\r\n    //     if (!color[it]) {\r\n    //       if (findCycle(it, node, adj,color))\r\n    //         return true;\r\n    //     } else if (it != par)\r\n    //       return true;\r\n    //   }\r\n\r\n    //   return false;\r\n// }\r\n\r\nvoid findCycle(ll node,ll parent,v(ll) adj[],v(ll)& color,v(ll)& par,vector<vector<ll>>&ans){\r\n    color[node]=1;\r\n    for(auto x:adj[node]){\r\n        if(x!=parent){\r\n            if(color[x]==0) {\r\n                par[x]=node;\r\n                findCycle(x,node,adj,color,par,ans);\r\n            }\r\n            else if(color[x]==1){\r\n                v(ll) temp;\r\n                temp.push_back(x);\r\n                ll start = node;\r\n                while(start!=x){\r\n                    temp.push_back(start);\r\n                    start = par[start];\r\n                }\r\n                temp.push_back(x);\r\n                reverse(temp.begin(),temp.end());\r\n                ans.push_back(temp);\r\n            }\r\n        }\r\n    }   \r\n    color[node]=2;\r\n}   \r\n\r\nvoid solve()\r\n{\r\n    ll n,m;\r\n    cin>>n>>m;\r\n    set<int>out;\r\n    set<int>in;\r\n    v(ll) par(n+1);\r\n    v(ll) adj[n+1];\r\n    for(int i=1;i<=n;i++){\r\n        out.insert(i);\r\n        in.insert(i);\r\n    }\r\n    vector<pair<int,int>>input(m);\r\n    for(int i=0;i<m;i++){\r\n        ll u,v;\r\n        cin>>u>>v;\r\n        input[i].first=u;\r\n        input[i].second=v;\r\n    }\r\n    ll start=-1;\r\n    for(int i=0;i<m;i++){   \r\n        ll u = input[i].first;\r\n        ll v = input[i].second;\r\n        out.erase(u);\r\n        in.erase(v);\r\n        adj[u].push_back(v);\r\n        if(in.size()==1 && out.size()==1){\r\n            start = i+1;\r\n            break;\r\n        }\r\n    }\r\n    if(start==-1){\r\n        cout<<-1<<endl;\r\n        return;\r\n    }\r\n    ll inv = *out.begin();\r\n    set<int>pin;\r\n    for(int i=1;i<=n;i++){\r\n        if(i!=inv){\r\n            int flag = 0;\r\n            for(auto x:adj[i]){\r\n                if(x!=inv){\r\n                    flag = 1;\r\n                    break;\r\n                }\r\n            }\r\n            if(flag==0) pin.insert(i);\r\n        }\r\n    }\r\n    if(pin.size()==1){\r\n        cout<<start<<endl;\r\n        return;\r\n    }\r\n    else{\r\n        for(int j=start;j<m;j++){\r\n            ll u = input[j].first;\r\n            ll v = input[j].second;\r\n            if(v!=inv){\r\n                pin.erase(u);\r\n                if(pin.size()==1){\r\n                    cout<<j+1<<endl;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    cout<<-1<<endl;\r\n}\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n\r\n    ll t = 1;\r\n    // cin>>t;\r\n    while (t--)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n\r\n"
}