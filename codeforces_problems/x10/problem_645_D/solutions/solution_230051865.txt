{
    "id": 230051865,
    "contestId": 645,
    "creationTimeSeconds": 1698425139,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 645,
        "index": "D",
        "name": "Robot Rapping Results Report",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1800,
        "tags": [
            "binary search",
            "dp",
            "graphs"
        ]
    },
    "author": {
        "contestId": 645,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1458318900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\n\n#define ll long long\n#define all(a) a.begin(),a.end()\n#define endl '\\n'\n#define ld long double\nusing namespace std;\ntypedef vector<vector<ll>> matrix;\n\nvoid Tamora() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n#ifndef ONLINE_JUDGE\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif\n}\n\nconst ll mod = 1e9 + 7, inf = 1e9 + 5, N = 2e3 + 5, M = 65, LG = 23, P1 = 37, P2 = 31;\n\nvector<pair<int, int>> adj[N];\nint n, m;\n\nbool valid(int k) {\n    vector<int> dep(n + 1);\n    for (int i = 1; i <= n; i++)\n        for (auto j: adj[i])\n            if (j.second <= k)\n                dep[j.first]++;\n    queue<int> q;\n    for (int i = 1; i <= n; i++)\n        if (!dep[i])\n            q.push(i);\n    while (q.size()) {\n        if (q.size() > 1)\n            return 0;\n        int cur = q.front();\n        q.pop();\n        for (auto i: adj[cur]) {\n            if (i.second > k)\n                continue;\n            dep[i.first]--;\n            if (!dep[i.first])\n                q.push(i.first);\n        }\n    }\n    return 1;\n\n}\n\nvoid solve() {\n    cin >> n >> m;\n    for (int i = 1; i <= m; i++) {\n        int u, v;\n        cin >> u >> v;\n        adj[u].push_back({v, i});\n    }\n    int l = 1, r = m, mid, ans = -1;\n    while (r >= l) {\n        mid = (l + r) / 2;\n        if (valid(mid))\n            ans = mid, r = mid - 1;\n        else\n            l = mid + 1;\n    }\n    cout << ans;\n}\n\nint main() {\n    Tamora();\n    int t = 1;\n    //cin >> t;\n    for (int i = 1; i <= t; i++)\n        solve();\n\n    return 0;\n}\n \t  \t\t   \t\t \t\t  \t \t \t\t\t   \t\t"
}