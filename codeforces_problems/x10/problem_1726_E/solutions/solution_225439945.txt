{
    "id": 225439945,
    "contestId": 1726,
    "creationTimeSeconds": 1695769016,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "E",
        "name": "Almost Perfect",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "combinatorics",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 7270400,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\n// Template (v1.5.1 - 2023-07-17) (codeforces:cebolinha, atcoder:edu) {{{\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\ntemplate<class T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;\n\n#pragma GCC optimize(\"O3,unroll-loops\")\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\n\n#define int long long\n#define fastio ios::sync_with_stdio(false); cin.tie(nullptr)\n\ntemplate<class T> using min_priority_queue = priority_queue<T, vector<T>, greater<T>>;\nusing ii = pair<int, int>;\nusing iii = array<int, 3>;\n\n#define V vector\n#define all(c) c.begin(), c.end()\n#define rall(c) c.rbegin(), c.rend()\n#define sz(x) (int) (x).size()\n#define pb push_back\n#define eb emplace_back\n#define ff first\n#define ss second\n#define nemo ><>\n#define loop(ii, n) for (int ii = 0; ii < (n); ii++)\n#define cond(c, t, f) ((c) ? (t) : (f))\n#define mem(a, b) memset((a), (b), sizeof(a))\n#define inbounds(x, l, r) ((l) <= (x) && (x) <= (r))\n#define L1(res...) [&](auto const& x){ return res; }\n#define L2(res...) [&](auto const& x, auto const& y){ return res; }\n\ntemplate<class T, class U> inline void miq(T& a, U b){ if (a > b) a = b; }\ntemplate<class T, class U> inline void maq(T& a, U b){ if (a < b) a = b; }\n\ntemplate<class T, class U> auto &operator>>(istream &is, pair<T, U> &p) { return is >> p.ff >> p.ss; }\ntemplate<class T, class U> auto &operator<<(ostream &os, pair<T, U> const& p) { return os << '(' << p.first << ' ' << p.second << ')'; }\n\nconst auto ES = \"\", SEP = \" \";\ntemplate<class T> auto &operator>>(istream& is, vector<T> &c) { for (auto &x : c) is >> x; return is; }\ntemplate<class T> auto &operator<<(ostream& os, vector<T> const &c) { auto sep = ES; for (auto x : c) os << sep << x, sep = SEP; return os; }\ntemplate<class T> auto &operator<<(ostream& os, set<T> const &c) { auto sep = ES; for (auto x : c) os << sep << x, sep = SEP; return os; }\ntemplate<class T> auto &operator<<(ostream& os, multiset<T> const &c) { auto sep = ES; for (auto x : c) os << sep << x, sep = SEP; return os; }\ntemplate<class T> auto &operator<<(ostream& os, unordered_set<T> const &c) { auto sep = ES; for (auto x : c) os << sep << x, sep = SEP; return os; }\ntemplate<class T> auto &operator<<(ostream& os, ordered_set<T> const &c) { auto sep = ES; for (auto x : c) os << sep << x, sep = SEP; return os; }\ntemplate<class T> auto &operator<<(ostream& os, deque<T> const &c) { auto sep = ES; for (auto x : c) os << sep << x, sep = SEP; return os; }\ntemplate<class K, class V> auto &operator<<(ostream& os, map<K,V> const &c) { auto sep = ES; for (auto x : c) os << sep << x, sep = SEP; return os; }\ntemplate<class K, class V> auto &operator<<(ostream& os, unordered_map<K,V> const &c) { auto sep = ES; for (auto x : c) os << sep << x, sep = SEP; return os; }\n\ntemplate<class... A> void in(A &...a) { ((cin >> a), ...); }\ntemplate<class... A> void out(A const&... a) { auto sep = ES; ((cout << sep << a, sep = SEP), ...); cout << '\\n'; }\ntemplate<class... A> void print(A const&... a) { ((cout << a), ...); }\n#define var(x) \"[\", #x, \" \", x, \"] \"\ntemplate<class... A> void db(A const&... a) { ((cout << (a)), ...); cout << endl; }\n//}}}\n\ntemplate <unsigned P>/*{{{*/\nstruct Z {\n  unsigned value;\n\n  constexpr Z() : value(0) {}\n\n  template<typename T, typename = enable_if_t<std::is_integral<T>::value>>\n  constexpr Z(T a) : value((((long long)a % P) + P) % P) {}\n\n  Z& operator+=(Z rhs) {\n    value += rhs.value;\n    if (value >= P) value -= P;\n    return *this;\n  }\n\n  Z& operator-=(Z rhs) {\n    value += P - rhs.value;\n    if (value >= P) value -= P;\n    return *this;\n  }\n\n  Z& operator*=(Z rhs) {\n    value = (unsigned long long)value * rhs.value % P;\n    return *this;\n  }\n\n  Z& operator/=(Z rhs) { return *this *= pow(rhs, -1); }\n\n  Z operator+() const { return *this; }\n\n  Z operator-() const { return Z() - *this; }\n\n  bool operator==(Z rhs) const { return value == rhs.value; }\n\n  bool operator!=(Z rhs) const { return value != rhs.value; }\n\n  friend Z operator+(Z lhs, Z rhs) { return lhs += rhs; }\n\n  friend Z operator-(Z lhs, Z rhs) { return lhs -= rhs; }\n\n  friend Z operator*(Z lhs, Z rhs) { return lhs *= rhs; }\n\n  friend Z operator/(Z lhs, Z rhs) { return lhs /= rhs; }\n\n  friend ostream& operator<<(ostream& out, Z a) { return out << a.value; }\n\n  friend istream& operator>>(istream& in, Z& a) {\n    long long x;\n    in >> x;\n    a = Z(x);\n    return in;\n  }\n};\n\ntemplate<unsigned P>\nZ<P> pow(Z<P> x, long long p) {\n  if (x == 0) {\n    return p == 0 ? 1 : 0;\n  }\n  p %= P -1;\n  if (p < 0) p += P-1;\n  Z<P> res = 1;\n  while (p) {\n    if (p & 1) {\n      res *= x;\n    }\n    x *= x;\n    p >>= 1;\n  }\n  return res;\n}/*}}}*/\n\ntemplate <unsigned P>/*{{{*/\nstruct Combinatorics {\n  vector<Z<P>> fact, ifact;\n\n  explicit Combinatorics(int N) : fact(N), ifact(N) {\n    fact[0] = 1;\n    for (int i = 1; i < N; i++) fact[i] = fact[i-1] * i;\n    ifact[N-1] = 1 / fact[N-1];\n    for (int i = N-1; i-1 >= 0; i--) ifact[i-1] = ifact[i] * i;\n  }\n\n  Z<P> C(int n, int k) const {\n    return k < 0 || n < k ?  0 : fact[n] * ifact[k] * ifact[n-k];\n  }\n\n  Z<P> S(int n, int k) const {\n    return k == 0 ? n == 0 : C(n + k - 1, k - 1);\n  }\n};/*}}}*/\n\nconst int MOD = 998'244'353;\nconst int MAXN = 6e5 + 8;\nusing mint = Z<MOD>;\n\nCombinatorics<MOD> C(MAXN);\n\nauto main() -> signed {\n  fastio;\n\n  int T; in(T); while (T--) {\n    int N; in(N);\n\n    V<mint> reds(N+1);\n    reds[0] = 1;\n    for (int i = 1; i <= N; i++) {\n      reds[i] += reds[i-1];\n      if (i-2 >= 0) reds[i] += reds[i-2] * (i-1);\n    }\n\n    auto greens = [&](int x) {\n      return C.fact[x] / (pow(mint(2), x/2) * C.fact[x/2]);\n    };\n\n    mint ans = 0;\n    for (int c2 = 0; 2*c2 <= N; c2 += 2) {\n      int c1 = N - 2*c2;\n      mint w = C.C(c1+c2, c1);\n      w *= reds[c1];\n      w *= greens(c2) * pow(mint(2), c2/2);\n      ans += w;\n    }\n    out(ans);\n  }\n}\n\n\n \t\t   \t\t\t \t\t \t\t \t \t\t\t\t \t   \t\t"
}