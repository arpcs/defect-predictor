{
    "id": 231731172,
    "contestId": 1726,
    "creationTimeSeconds": 1699360429,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "E",
        "name": "Almost Perfect",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "combinatorics",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "HappyIvan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 34713600,
    "source": "/*\r\n *                                                     __----~~~~~~~~~~~------___\r\n *                                    .  .   ~~//====......          __--~ ~~\r\n *                    -.            \\_|//     |||\\\\  ~~~~~~::::... /~\r\n *                 ___-==_       _-~o~  \\/    |||  \\\\            _/~~-\r\n *         __---~~~.==~||\\=_    -_--~/_-~|-   |\\\\   \\\\        _/~\r\n *     _-~~     .=~    |  \\\\-_    '-~7  /-   /  ||    \\      /\r\n *   .~       .~       |   \\\\ -_    /  /-   /   ||      \\   /\r\n *  /  ____  /         |     \\\\ ~-_/  /|- _/   .||       \\ /\r\n *  |~~    ~~|--~~~~--_ \\     ~==-/   | \\~--===~~        .\\\r\n *           '         ~-|      /|    |-~\\~~       __--~~\r\n *                       |-~~-_/ |    |   ~\\_   _-~            /\\\r\n *                            /  \\     \\__   \\/~                \\__\r\n *                        _--~ _/ | .-~~____--~-/                  ~~==.\r\n *                       ((->/~   '.|||' -_|    ~~-/ ,              . _||\r\n *                                  -_     ~\\      ~~---l__i__i__i--~~_/\r\n *                                  _-~-__   ~)  \\--______________--~~\r\n *                                //.-~~~-~_--~- |-------~~~~~~~~\r\n *                                       //.-~~~--\\\r\n *                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n *\r\n *                               \u795e\u517d\u4fdd\u4f51            \u6c38\u65e0BUG\r\n */\r\n\r\n/*\r\n * @Description: I want to be the weakest vegetable in the world!\r\n * @Author: I.Z.\r\n */\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define MOD         998244353\r\n#define speMOD      2933256077ll\r\n#define int         long long\r\n#define pii         pair<int,int>\r\n#define all(v)      v.begin(),v.end()\r\n#define pb          push_back\r\n#define REP(i,b,e)  for(int i=(b);i<(int)(e);++i)\r\n#define over(x)     {cout<<x<<endl;return;}\r\n#define lowbit(x)   ((x)&(-(x)))\r\n#define cntbit(x)   __builtin_popcount(x)\r\n#define rf(v)       shuffle(all(v),sd);\r\nmt19937 sd(std::random_device{}());\r\nint qpow (int a,int b,int m=MOD,int res=1){\r\n\ta%=m;\r\n\twhile(b>0)res=(b&1)?(res*a%m):(res),a=a*a%m,b>>=1;\r\n\treturn res;\r\n}\r\nstring YN(bool x,string Y=\"Yes\",string N=\"No\") {\r\n\tif(x){\r\n\t\treturn Y;\r\n\t} else {\r\n\t\treturn N;\r\n\t}\r\n}\r\nint fac[2000005],inv[2000005];\r\nvoid init(int n){\r\n\tfac[0]=inv[0]=1;\r\n\tREP(i,1,n+1)fac[i]=fac[i-1]*i%MOD;\r\n\tinv[n]=qpow(fac[n],MOD-2);\r\n\tfor(int i=n-1;i>=1;--i)inv[i]=inv[i+1]*(i+1)%MOD;\r\n}\r\nint binom(int x,int y){\r\n\treturn x<y||y<0? 0:fac[x]*inv[y]%MOD*inv[x-y]%MOD;\r\n}\r\nbool cmp(int x,int y){\r\n\treturn x<y;\r\n}\r\nint n;\r\nint f[300005];\r\nvoid Main() {\r\n\tcin>>n;\r\n\tint ans=0;\r\n\tfor(int i=0;i*4<=n;++i){\r\n\t\tans+=binom(n-2*i,2*i)*binom(2*i,i)%MOD*fac[i]%MOD*f[n-4*i]%MOD;\r\n\t\tans%=MOD;\r\n\t}\r\n\tcout<<ans<<endl;\r\n}\r\nvoid TC() {\r\n\tinit(300000);\r\n\tf[1]=1;f[2]=2;\r\n\tREP(i,3,300001)f[i]=(f[i-1]+(i-1)*f[i-2])%MOD;\r\n\tint tc=1;\r\n\tcin>>tc;\r\n\twhile(tc--) {\r\n\t\tMain();\r\n\t\tcout.flush();\r\n\t}\r\n}\r\nsigned main() {\r\n\treturn cin.tie(0),cout.tie(0),ios::sync_with_stdio(0),TC(),0;\r\n}\r\n/*\r\n1. CLEAR the arrays (ESPECIALLY multitests)\r\n2. DELETE useless output\r\n */\r\n"
}