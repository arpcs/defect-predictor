{
    "id": 220963752,
    "contestId": 1726,
    "creationTimeSeconds": 1693310532,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "E",
        "name": "Almost Perfect",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "combinatorics",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "MattTheNub"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 6041600,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\n#include <ext/pb_ds/assoc_container.hpp>\nusing namespace __gnu_pbds;\n\ntemplate <class T> using v = vector<T>;\nusing ll = long long;\nusing dd = long double;\nusing int2 = pair<int, int>;\nusing ll2 = pair<ll, ll>;\nusing dd2 = pair<dd, dd>;\n\n#define f first\n#define s second\n#define all(x) begin(x), end(x)\nistream &__cin = cin;\n#ifdef DEV_MODE\n#include \"debug.h\"\n__cinwrapper __cin_wrapper;\n#define cin __cin_wrapper\n#else\n#define dbg(...)\n#define dbg2d(...)\n#endif\n\ntemplate <class T1, class T2>\nistream &operator>>(istream &in, pair<T1, T2> &p) {\n  in >> p.first >> p.second;\n  return in;\n}\ntemplate <class T> istream &operator>>(istream &in, v<T> &v) {\n  for (auto &x : v)\n    in >> x;\n  return in;\n}\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\n\n/*\n _______________________________________\n( If you don't fail at least 90% of the )\n( time, you're not aiming high enough.  )\n(                                       )\n( - Alan Kay                            )\n ---------------------------------------\n        o   ^__^\n         o  (oo)\\_______\n            (__)\\       )\\/\\\n                ||----w |\n                ||     ||\n*/\n\nconst bool INTERACTIVE = false;\nconst bool MULTITEST = true;\n/******************************************************************************/\nconst int MOD = 998244353;\n\nclass mint {\n  int val;\n\npublic:\n  mint() : val(0) {}\n  template <class T> mint(T v) : val(v % MOD) {\n    if (val < 0)\n      val += MOD;\n  }\n\n  explicit operator ll() { return val; }\n  explicit operator int() { return val; }\n\n  friend mint &operator+=(mint &a, mint b) {\n    a.val += b.val;\n    if (a.val >= MOD)\n      a.val -= MOD;\n    return a;\n  }\n  friend mint &operator-=(mint &a, mint b) {\n    a.val -= b.val;\n    if (a.val < 0)\n      a.val += MOD;\n    return a;\n  }\n  friend mint &operator*=(mint &a, mint b) {\n    a.val = ((ll)a.val * b.val) % MOD;\n    return a;\n  }\n  friend mint &operator/=(mint &a, mint b) { return a *= pow(b, MOD - 2); }\n  friend mint &operator++(mint &x) { return x += 1; }\n  friend mint &operator--(mint &x) { return x -= 1; }\n  friend mint operator++(mint &x, int) {\n    mint tmp = x;\n    ++x;\n    return tmp;\n  }\n  friend mint operator--(mint &x, int) {\n    mint tmp = x;\n    --x;\n    return tmp;\n  }\n  friend mint operator-(mint x) {\n    if (x == 0)\n      return x;\n    return {-x.val + MOD};\n  }\n\n  friend mint operator+(mint a, mint b) { return a += b; }\n  friend mint operator-(mint a, mint b) { return a -= b; }\n  friend mint operator*(mint a, mint b) { return a *= b; }\n  friend mint operator/(mint a, mint b) { return a /= b; }\n\n  friend istream &operator>>(istream &in, mint &x) { return in >> x.val; }\n  friend ostream &operator<<(ostream &out, mint x) { return out << x.val; }\n\n  friend bool operator==(mint a, mint b) { return a.val == b.val; }\n  friend bool operator!=(mint a, mint b) { return a.val != b.val; }\n\n  friend mint pow(mint a, unsigned long long b) {\n    mint acc = 1;\n    while (b) {\n      if (b & 1)\n        acc *= a;\n      a *= a;\n      b >>= 1;\n    }\n\n    return acc;\n  }\n\n  static v<mint> fac, ifac;\n  static void gen_fac(int n) {\n    int old = fac.size();\n    if (old < n + 1) {\n      fac.resize(n + 1);\n      for (int i = old; i <= n; i++) {\n        fac[i] = fac[i - 1] * i;\n      }\n    }\n  }\n  static void gen_ifac(int n) {\n    int old = ifac.size();\n    if (old < n + 1) {\n      ifac.resize(n + 1);\n      for (int i = old; i <= n; i++) {\n        ifac[i] = ifac[i - 1] / i;\n      }\n    }\n  }\n  static mint c(int n, int k) {\n    if (k > n)\n      return 0;\n#ifdef DEV_MODE\n    assert(n < fac.size());\n    assert(n < ifac.size());\n#endif\n    return fac[n] * ifac[k] * ifac[n - k];\n  }\n  static mint p(int n, int k) {\n    if (k > n)\n      return 0;\n#ifdef DEV_MODE\n    assert(n < fac.size());\n    assert(n < ifac.size());\n#endif\n    return fac[n] * ifac[n - k];\n  }\n};\nv<mint> mint::fac = {1};\nv<mint> mint::ifac = {1};\nauto &fac = mint::fac, &ifac = mint::ifac;\nusing mint2 = pair<mint, mint>;\n\nvoid solve() {\n  int n;\n  cin >> n;\n  v<mint> dp(n + 1);\n  dp[0] = dp[1] = 1;\n  for (int i = 2; i <= n; i++) {\n    dp[i] = dp[i - 1] + (i - 1) * dp[i - 2];\n  }\n  mint::gen_fac(2 * n);\n  mint::gen_ifac(2 * n);\n  mint ans = 0;\n  for (int i = 0; i <= n / 4; i++) {\n    ans += mint::c(n - 2 * i, 2 * i) * fac[2 * i] * ifac[i] * dp[n - 4 * i];\n  }\n  cout << ans << '\\n';\n}\n\nint main() {\n#ifdef DEV_MODE\n  debug_start(INTERACTIVE, \"misc-in.txt\");\n#else\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n#endif\n  int t;\n  if (MULTITEST)\n    cin >> t;\n  else\n    t = 1;\n  while (t--)\n    solve();\n\n#ifdef DEV_MODE\n  debug_exit(INTERACTIVE);\n#endif\n}\n#ifdef DEV_MODE\n#include \"debug.cpp\"\n#endif"
}