{
    "id": 220719531,
    "contestId": 1726,
    "creationTimeSeconds": 1693142790,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1726,
        "index": "E",
        "name": "Almost Perfect",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2400,
        "tags": [
            "combinatorics",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 1726,
        "members": [
            {
                "handle": "anton_h"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662474900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 420,
    "memoryConsumedBytes": 17408000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std; \r\nusing ll = long long;\r\nusing ld = long double;\r\nusing vl = vector<ll>;\r\nusing vvl = vector<vl>;\r\nusing pll = pair<ll,ll>;\r\nusing vpll = vector<pll>;\r\nusing vb = vector<bool>;\r\nusing vs = vector<string>; //\r\nconst ll oo = 0x3f3f3f3f3f3f3f3fLL;\r\nconst ld eps = 1e-9;\r\n#define sz(c) ll((c).size())\r\n#define all(c) begin(c),end(c)\r\n#define mp make_pair\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define xx first\r\n#define yy second\r\n#define FOR(i,a,b) for (ll i=(a); i<(b); i++)\r\n#define FORD(i,a,b) for (ll i=ll(b)-1; i>=(a); i--)\r\n#define TR(X) ({ if(1) cerr << \"TR: \" << (#X) << \" = \" << (X) << endl; })\r\n\r\nconst ll MAXN = 3e5, MOD = 998'244'353;\r\nvl pure(MAXN + 1);\r\nvl fak(2 * MAXN), fakInv(2 * MAXN);\r\nvl prod(MAXN);\r\nvl pot2(MAXN);\r\n\r\n// Schnelle Exponentiation a^x mod m, a >= 0, x >= 0, m >= 2\r\nll modExp(ll a, ll x, ll m) {\r\n    if (x == 0) return 1;\r\n    ll res = modExp(a, x/2, m);\r\n    res = (res * res) % m;\r\n    return (x % 2) ? (res * a) % m : res;\r\n}\r\n// Inverses a^(-1) mod p, a > 0, p Primzahl\r\nll modInv(ll a, ll p) {\r\n    return modExp(a, p - 2, p);\r\n}\r\n\r\nll nCr(ll n, ll k){\r\n    if(k < 0 || k > n)\r\n        exit(42);\r\n    return fak[n] * fakInv[n - k] % MOD * fakInv[k] % MOD;\r\n}\r\n\r\nvoid solve(){\r\n    ll n;\r\n    cin >> n;\r\n    vl ne(n / 4 + 1);\r\n    FOR(k, 0, sz(ne)){\r\n        ll np = 2 * k + 1;\r\n        ll kp = n - 4 * k;\r\n        ne[k] = nCr(np + kp - 1, kp) * prod[k] % MOD * pot2[k] % MOD;\r\n    }\r\n    ll ans = 0;\r\n    FOR(k, 0, sz(ne)) ans += ne[k] * pure[n - 4 * k] % MOD;\r\n    ans %= MOD;\r\n    cout << ans << \"\\n\";\r\n}\r\n\r\nint main() { \r\n    cin.sync_with_stdio(0);\r\n    cin.tie(0);\r\n\r\n    pure[0] = 1;\r\n    pure[1] = 1;\r\n    FOR(i, 2, sz(pure)) pure[i] = (pure[i - 1] + (i - 1) * pure[i - 2]) % MOD;\r\n\r\n    fak[0] = 1;\r\n    fakInv[0] = 1;\r\n    FOR(i, 1, sz(fak)){\r\n        fak[i] = i * fak[i - 1] % MOD;\r\n        fakInv[i] = modInv(fak[i], MOD);\r\n    }\r\n\r\n    prod[0] = 1;\r\n    FOR(k, 1, MAXN) prod[k] = prod[k - 1] * (2 * k - 1) % MOD;\r\n\r\n    pot2[0] = 1;\r\n    FOR(i, 1, sz(pot2)) pot2[i] = pot2[i - 1] * 2 % MOD;\r\n\r\n    ll t; cin >> t;\r\n    while(t--)\r\n        solve();\r\n\r\n}\r\n"
}