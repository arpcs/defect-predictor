{
    "id": 202271447,
    "contestId": 592,
    "creationTimeSeconds": 1681578769,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 592,
        "index": "A",
        "name": "PawnChess",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1200,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 592,
        "members": [
            {
                "handle": "liagol"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1446309000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 102400,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <math.h>\r\n#include \"string.h\"\r\n#include <vector>\r\n#include <stack>\r\n#include <queue>\r\n#include <map>\r\n#include <list>\r\n\r\nusing namespace std;\r\n\r\nstruct Node\r\n{\r\n    int val = 0;\r\n    Node *le = nullptr;\r\n    Node *ri = nullptr;\r\n};\r\n\r\nNode *head;\r\n\r\nvoid setVal(Node **cur, int pos, int cle, int cri)\r\n{\r\n    //cout << \"cle=\" << cle << \", cri=\" << cri << \", cur=\" << cur << \"\\n\";\r\n\r\n    if ((*cur) == nullptr)\r\n    {\r\n        (*cur) = new Node;\r\n    }\r\n\r\n    if (cle == cri)\r\n    {\r\n        (*cur)->val = 1;\r\n        return;\r\n    }\r\n\r\n    int m = (cle+cri)/2;\r\n\r\n    if (pos <= m)\r\n    {\r\n        setVal(&((*cur)->le), pos, cle, m);\r\n    }\r\n    else\r\n    {\r\n        setVal(&((*cur)->ri), pos, m+1, cri);\r\n    }\r\n\r\n    ((*cur)->val)++;\r\n}\r\n\r\nint getAns(Node *cur, int le, int ri, int cle, int cri)\r\n{\r\n    if (cur == nullptr || le > ri)\r\n    {\r\n        return 0;\r\n    }\r\n\r\n    if (le == cle && ri == cri)\r\n    {\r\n        return cur->val;\r\n    }\r\n\r\n    int m = (cri+cle)/2;\r\n\r\n    return getAns(cur->le, le, min(ri, m), cle, m) +\r\n           getAns(cur->ri, max(le, m+1), ri, m+1, cri);\r\n}\r\n\r\nchar op[3][4] = {\"MOV\", \"ADD\", \"SUB\"};\r\nuint8_t r[4];\r\nchar cmd[100000];\r\n\r\nvoid opReg(int rix, int st, int val)\r\n{\r\n    rix--;\r\n    switch(st)\r\n    {\r\n    case 0:\r\n        r[rix] = val;\r\n        break;\r\n    case 1:\r\n        r[rix] += val;\r\n        break;\r\n    case 2:\r\n        r[rix] -= val;\r\n        break;\r\n    }\r\n\r\n    cout << \"r\" << rix + 1 << \"=\" << (int)r[rix] << \"\\n\";\r\n}\r\n\r\nbool isRegOk(int ix, int le, int &rix)\r\n{\r\n    if (cmd[ix] < '1' || cmd[ix] > '4')\r\n    {\r\n        return false;\r\n    }\r\n\r\n    if (ix + 1 < le && (cmd[ix+1] == ' ' || cmd[ix+1] == ','))\r\n    {\r\n        rix = cmd[ix] - '0';\r\n        return true;\r\n    }\r\n\r\n    if (ix + 1 >= le)\r\n    {\r\n        rix = cmd[ix] - '0';\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nbool isDigit(char ch)\r\n{\r\n    return (ch >= '0' && ch <= '9');\r\n}\r\n\r\nbool isNum(int ix, int le, int &val)\r\n{\r\n    cerr << \"isNum for \" << cmd + ix << \"\\n\";\r\n    int res = 0;\r\n\r\n    if (!isDigit(cmd[ix]))\r\n    {\r\n        return false;\r\n    }\r\n\r\n    res = cmd[ix] - '0';\r\n    ix++;\r\n    while (ix < le && isDigit(cmd[ix]))\r\n    {\r\n        res *= 10;\r\n        res += cmd[ix] - '0';\r\n        ix++;\r\n    }\r\n\r\n    //cout << \"res=\" << \"\\n\";\r\n    if ((ix < le && (cmd[ix] == ' ' || cmd[ix] == '\\r')) || ix == le)\r\n    {\r\n        val = res;\r\n        cout << \"val=\" << val << \"\\n\";\r\n        return true;\r\n    }\r\n    //cout << \"bug\\n\";\r\n\r\n    return false;\r\n}\r\n\r\nint64_t nod(int64_t a, int64_t b)\r\n{\r\n    while(b)\r\n    {\r\n        if (a%b == 0)\r\n        {\r\n            return b;\r\n        }\r\n\r\n        int64_t te = b;\r\n        b = a%b;\r\n        a = te;\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\nchar f[8][8];\r\nvector<pair<int,int>> w;\r\nvector<pair<int,int>> b;\r\n\r\nvoid solve()\r\n{\r\n    for (int i = 0; i < 8; ++i)\r\n    {\r\n        for (int j = 0; j < 8; ++j)\r\n        {\r\n            cin >> f[i][j];\r\n\r\n            if (f[i][j] == 'W')\r\n            {\r\n                w.push_back(pair<int,int>(i,j));\r\n            }\r\n            else if (f[i][j] == 'B')\r\n            {\r\n                b.push_back(pair<int,int>(i,j));\r\n            }\r\n        }\r\n    }\r\n\r\n    int miw = 8;\r\n    int mib = 8;\r\n\r\n    for (int i = 0; i < w.size(); ++i)\r\n    {\r\n        int cur = 0;\r\n        for (int j = w[i].first - 1; j >= 0; --j)\r\n        {\r\n            if (f[j][w[i].second] != '.')\r\n            {\r\n                cur = 8;\r\n                break;\r\n            }\r\n            cur++;\r\n        }\r\n\r\n        miw = min(miw, cur);\r\n    }\r\n\r\n    for (int i = 0; i < b.size(); ++i)\r\n    {\r\n        int cur = 0;\r\n        for (int j = b[i].first + 1; j < 8; ++j)\r\n        {\r\n            if (f[j][w[i].second] != '.')\r\n            {\r\n                cur = 8;\r\n                break;\r\n            }\r\n            cur++;\r\n        }\r\n\r\n        mib = min(mib, cur);\r\n    }\r\n\r\n    if (miw <= mib)\r\n    {\r\n        cout << \"A\\n\";\r\n    }\r\n    else\r\n    {\r\n        cout << \"B\\n\";\r\n    }\r\n}\r\n\r\nvoid precalc()\r\n{\r\n}\r\n\r\nint main()\r\n{\r\n    //freopen(\"input.txt\", \"r\", stdin);\r\n    //freopen(\"output.txt\", \"w\", stdout);\r\n\r\n    int t = 1;\r\n    //cin >> t;\r\n    //getchar();\r\n\r\n    precalc();\r\n\r\n    for (int i = 0; i < t; ++i)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n"
}