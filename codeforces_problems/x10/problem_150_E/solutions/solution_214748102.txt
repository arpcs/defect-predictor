{
    "id": 214748102,
    "contestId": 150,
    "creationTimeSeconds": 1689944316,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 150,
        "index": "E",
        "name": "Freezing with Style",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3000,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "trees"
        ]
    },
    "author": {
        "contestId": 150,
        "members": [
            {
                "handle": "_chroneZ"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1329490800
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 118,
    "timeConsumedMillis": 6270,
    "memoryConsumedBytes": 20480000,
    "source": "// LUOGU_RID: 116827277\n#pragma GCC optimize(\"Ofast\", \"unroll-loops\")\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nusing i64 = long long;\r\n\r\nconstexpr int N = 1e5 + 10, inf = 2e9;\r\n\r\nvector<pair<int, int>> G[N];\r\nint n, L, R;\r\nint ans, rec1, rec2;\r\nint W; // \u5927\u4e8e\u7b49\u4e8e W \u65f6\u8fb9\u6743\u503c\u4e3a 0\uff0c\u5c0f\u4e8e\u4e3a 1\r\n\r\nint vis[N];\r\nint siz[N], msiz[N], tsiz, root;\r\nvoid calcsiz(int u, int father) {\r\n\tsiz[u] = 1;\r\n\tfor(auto [v, w] : G[u]) {\r\n\t\tif(v == father || vis[v]) continue;\r\n\t\tcalcsiz(v, u); siz[u] += siz[v];\r\n\t}\r\n\tmsiz[u] = max(siz[u], tsiz - siz[u]);\r\n\tif(msiz[u] <= msiz[root]) root = u;\r\n}\r\n\r\nint dis[N], lim, rec[N], it[N];\r\nvoid calcdis(int u, int father, int len) {\r\n\tlim = max(lim, len);\r\n\tif(dis[u] < rec[len]) {\r\n\t\trec[len] = dis[u];\r\n\t\tit[len] = u;\r\n\t}\r\n\tfor(auto [v, w] : G[u]) {\r\n\t\tif(v == father || vis[v]) continue;\r\n\t\tw = (w < W); dis[v] = dis[u] + w;\r\n\t\tcalcdis(v, u, len + 1);\r\n\t}\r\n}\r\n\r\nint f[N], it2[N];\r\n\r\nint q[N], head, tail;\r\n\r\nvoid dfz(int u) {\r\n\tvis[u] = 1; f[0] = 0; it2[0] = u;\r\n\tint cl = 0;\r\n\tfor(auto [v, w] : G[u]) {\r\n\t\tif(vis[v]) continue;\r\n\t\tdis[v] = (w = (w < W)), lim = 0;\r\n\t\tcalcdis(v, u, 1); \r\n\r\n\t\thead = 0, tail = -1;\r\n\t\tfor(int i = lim; i >= 1; i--) {\r\n\t\t\tint maxv = -inf, cur;\r\n\t\t\tif(i == lim) {\r\n\t\t\t\tint lo = max(0, L - i), hi = min(cl + 1, R - i);\r\n\t\t\t\tfor(int j = lo; j <= hi; j++) {\r\n\t\t\t\t\twhile(head <= tail && f[q[tail]] < f[j]) tail--;\r\n\t\t\t\t\tq[++tail] = j;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\twhile(head <= tail && q[head] < L - i) head++;\r\n\t\t\t\tif(R - i >= 0 && R - i <= cl) {\r\n\t\t\t\t\twhile(head <= tail && f[q[tail]] < f[R - i]) tail--;\r\n\t\t\t\t\tq[++tail] = R - i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(head <= tail) maxv = f[q[head]], cur = it2[q[head]];\r\n\t\t\tif(rec[i] * 2 <= i + maxv) ans = 1, rec1 = it[i], rec2 = cur;\r\n\t\t}\t\r\n\t\t\r\n\t\tfor(int i = 1; i <= lim; i++) {\r\n\t\t\tif(i - 2 * rec[i] > f[i]) {\r\n\t\t\t\tf[i] = i - 2 * rec[i];\r\n\t\t\t\tit2[i] = it[i];\r\n\t\t\t}\r\n\t\t\trec[i] = inf; it[i] = -1;\r\n\t\t}\r\n\t\tcl = max(cl, lim);\r\n\t}\r\n\tfor(int i = 1; i <= cl; i++)\r\n\t\tf[i] = -inf, it2[i] = -1;\r\n\r\n\tfor(auto [v, w] : G[u]) {\r\n\t\tif(vis[v]) continue;\r\n\t\ttsiz = siz[v], root = v; calcsiz(v, u);\r\n\t\tdfz(root);\r\n\t}\r\n}\r\n\r\nsigned main() {\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(nullptr); cout.tie(nullptr);\r\n\r\n\tcin >> n >> L >> R;\r\n\tint l = inf, r = -inf;\r\n\tfor(int i = 1; i < n; i++) {\r\n\t\tint u, v, w; cin >> u >> v >> w;\r\n\t\tl = min(l, w), r = max(r, w);\r\n\t\tG[u].emplace_back(v, w), G[v].emplace_back(u, w);\r\n\t}\r\n\t\r\n\tmemset(f, 0x3f, sizeof f);\r\n\tint mid, res; pair<int, int> P;\r\n\twhile(l <= r) {\r\n\t\tmid = (l + r + 1) >> 1; W = mid;\r\n\r\n\t\tfill(vis + 1, vis + n + 1, 0);\r\n\t\tfill(rec + 1, rec + n + 1, inf);\r\n\t\tfill(f + 1, f + n + 1, -inf);\r\n\t\ttsiz = n, root = 1; calcsiz(1, -1);\r\n\t\tans = 0; dfz(root);\r\n\r\n\t\tif(ans) res = mid, P = {rec1, rec2}, l = mid + 1;\r\n\t\telse r = mid - 1;\r\n\t}\r\n\tcout << P.first << \" \" << P.second << \"\\n\";\r\n}"
}