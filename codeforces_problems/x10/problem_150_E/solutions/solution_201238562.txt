{
    "id": 201238562,
    "contestId": 150,
    "creationTimeSeconds": 1680946901,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 150,
        "index": "E",
        "name": "Freezing with Style",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3000,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "trees"
        ]
    },
    "author": {
        "contestId": 150,
        "members": [
            {
                "handle": "Good_WeekDay_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1329490800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 118,
    "timeConsumedMillis": 6988,
    "memoryConsumedBytes": 70246400,
    "source": "// LUOGU_RID: 107493571\n// LUOGU_RID: 107270647\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC optimize(\"unroll-loops\")\r\n#pragma GCC target (\"sse,sse2,sse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int MAXN=101010;\r\nint read()\r\n{\r\n\tint x=0,f=1;\r\n\tchar ch=getchar();\r\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\r\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\r\n\treturn x*f;\r\n}\r\nint n,l,r; \r\nstruct eg\r\n{\r\n\tint u,v,w;\r\n\tint nxt;\r\n}edge[MAXN*2];\r\nint head[MAXN];\r\nint cnt=0;\r\nvoid add_edge(int u,int v,int w)\r\n{\r\n\tcnt++;\r\n\tedge[cnt].u=u;\r\n\tedge[cnt].v=v;\r\n\tedge[cnt].w=w;\r\n\tedge[cnt].nxt=head[u];\r\n\thead[u]=cnt;\r\n}\r\nstruct ln\r\n{\r\n\tint u,v,w;\r\n}e[MAXN];\r\nvector<int> tmp;\r\nmap<int,int> mp;\r\nint siz[MAXN];\r\nint dep_len[MAXN];\r\nint dep_1[MAXN];\r\nint vis[MAXN]; \r\nint mx_dep_len[MAXN];\r\nvector<int> vt;\r\nvoid cl()\r\n{\r\n\tfor(int k=0;k<vt.size();k++)\r\n\t{\r\n\t\tint u=vt[k];\r\n\t\tdep_len[u]=0;\r\n\t\tdep_1[u]=0;\r\n\t\tsiz[u]=0;\r\n\t}\r\n}\r\nvoid dfs_find(int u,int fa)\r\n{\r\n\tvt.push_back(u);\r\n\tfor(int i=head[u];i;i=edge[i].nxt)\r\n\t{\r\n\t\tint v=edge[i].v;\r\n\t\tif(v==fa)\r\n\t\t{\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif(vis[v])\r\n\t\t{\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tdfs_find(v,u);\r\n\t}\r\n}\r\nvoid dfs_dep(int u,int fa)\r\n{\r\n\tmx_dep_len[u]=dep_len[u];\r\n\tfor(int i=head[u];i;i=edge[i].nxt)\r\n\t{\r\n\t\tint v=edge[i].v;\r\n\t\tif(v==fa||vis[v])\r\n\t\t{\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tdep_1[v]=dep_1[u]+edge[i].w;\r\n\t\tdep_len[v]=dep_len[u]+1;\r\n\t\tdfs_dep(v,u);\r\n\t\tmx_dep_len[u]=max(mx_dep_len[u],mx_dep_len[v]); \r\n\t}\r\n}\r\nvoid dfs_siz(int u,int fa)\r\n{\r\n\tsiz[u]=1;\r\n\tfor(int i=head[u];i;i=edge[i].nxt)\r\n\t{\r\n\t\tint v=edge[i].v;\r\n\t\tif(v==fa||vis[v])\r\n\t\t{\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tdfs_siz(v,u);\r\n\t\tsiz[u]+=siz[v];\r\n\t}\r\n}\r\nint wi;\r\nint wval;\r\nint tot_siz;\r\nvoid dfs_find_wi(int u,int fa)\r\n{\r\n\tint cc=tot_siz-siz[u];\r\n\tfor(int i=head[u];i;i=edge[i].nxt)\r\n\t{\r\n\t\tint v=edge[i].v;\r\n\t\tif(v==fa||vis[v])\r\n\t\t{\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\t\r\n\t\tdfs_find_wi(v,u);\r\n\t\t\r\n\t\tcc=max(cc,siz[v]);\r\n\t}\r\n\tif(cc<wval)\r\n\t{\r\n\t\twval=cc;\r\n\t\twi=u;\r\n\t}\r\n}\r\nbool cmp1(int a,int b)\r\n{\r\n\treturn mx_dep_len[a]<mx_dep_len[b];\r\n} \r\nbool cmp2(int a,int b)\r\n{\r\n\treturn dep_len[a]>dep_len[b];\r\n} \r\nint bk[MAXN];\r\nint bk_ps[MAXN];\r\nint ok=0;\r\nint ok_u;\r\nint ok_v;\r\nint que[MAXN];\r\nvector<int> bk_tmp[MAXN]; \r\nint ps_wi[120][MAXN];\r\nvoid divv(int now,int u)\r\n{\r\n//\tcout<<u<<\"\\n\";\r\n\tdfs_find(u,0);\r\n\tcl();\r\n\tif(!ps_wi[now][u])\r\n\t{\r\n\t\t\r\n\t\tdfs_siz(u,0);\r\n\t\twi=0;\r\n\t\twval=0x3f3f3f3f;\r\n\t\ttot_siz=siz[u];\t\r\n\t\tdfs_find_wi(u,0);\r\n\t\tps_wi[now][u]=wi;\r\n\t\tu=ps_wi[now][u];\r\n\r\n\t} \r\n\telse\r\n\t{\r\n\t\tu=ps_wi[now][u];\r\n\t\t\r\n\t}\r\n\tvt.clear();\r\n\t//cout<<\"--\"<<u<<\"\\n\";\r\n\t//dfs_siz(u,0);\r\n\tdfs_dep(u,0);\r\n\tvis[u]=1;\r\n\tvector<int> cd;\r\n\tfor(int i=head[u];i;i=edge[i].nxt)\r\n\t{\r\n\t\tint v=edge[i].v;\r\n\t\tif(vis[v])\r\n\t\t{\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tcd.push_back(v);\r\n\t}\r\n\t\r\n\t//stable_sort(cd.begin(),cd.end(),cmp1);\r\n\t//V: 0 - mx_dep_len[u]\r\n\t\r\n\tvector<int> tmp;\r\n\tfor(int i=0;i<cd.size();i++)\r\n\t{\r\n\t\tbk_tmp[mx_dep_len[cd[i]]].push_back(cd[i]);\r\n\t}\r\n\tcd.clear(); \r\n\tfor(int i=0;i<=mx_dep_len[u];i++)\r\n\t{\r\n\t\twhile(!bk_tmp[i].empty())\r\n\t\t{\r\n\t\t\tcd.push_back(bk_tmp[i].back());\r\n\t\t\tbk_tmp[i].pop_back();\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\tint mx=0;\r\n\tif(cd.size())\r\n\t{\r\n\t\tmx=mx_dep_len[cd[cd.size()-1]];\r\n\t\tfor(int i=0;i<=mx;i++)\r\n\t\t{\r\n\t\t\tbk[i]=-0x3f3f3f3f;\r\n\t\t\tbk_ps[i]=0;\r\n\t\t}\r\n\t}\r\n\tbk[0]=0;\r\n\tbk_ps[0]=u;\r\n\tfor(int k=0;k<cd.size();k++)\r\n\t{\r\n\t\tint v=cd[k];\r\n\t\tdfs_find(v,u);\r\n\t\t\r\n\t\tfor(int k2=0;k2<vt.size();k2++)\r\n\t\t{\r\n\t\t\tbk_tmp[dep_len[vt[k2]]].push_back(vt[k2]);\r\n\t\t} \r\n\t\tvt.clear();\r\n\t\tfor(int i=mx_dep_len[v];i>=0;i--)\r\n\t\t{\r\n\t\t\twhile(!bk_tmp[i].empty())\r\n\t\t\t{\r\n\t\t\t\tvt.push_back(bk_tmp[i].back());\r\n\t\t\t\tbk_tmp[i].pop_back();\r\n\t\t\t}\r\n\t\t}\t\r\n\t\t\r\n\t\tint rc=-1;\r\n\t\tint ql=1,qr=0;\r\n\t\tfor(int k2=0;k2<vt.size();k2++)\r\n\t\t{\r\n\t\t\tint u=vt[k2];\r\n\t\t\twhile(rc<r-dep_len[u]&&rc<mx_dep_len[v])\r\n\t\t\t{\r\n\t\t\t\trc++;\r\n\t\t\t\twhile(bk[rc]>bk[que[qr]]&&qr>=ql)\r\n\t\t\t\t{\r\n\t\t\t\t\tqr--;\t\t\r\n\t\t\t\t}\r\n\t\t\t\tqr++;\r\n\t\t\t\tque[qr]=rc;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\twhile(que[ql]<l-dep_len[u]&&ql<=qr)\r\n\t\t\t{\r\n\t\t\t\tql++;\r\n\t\t\t}\r\n\t\t\tif(ql>qr)\r\n\t\t\t{\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif(bk[que[ql]]+dep_1[u]<0||que[ql]>mx_dep_len[v])\r\n\t\t\t{\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tok=1;\r\n\t\t\t\tok_u=u;\r\n\t\t\t\tok_v=bk_ps[que[ql]];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int k2=0;k2<vt.size();k2++)\r\n\t\t{\r\n\t\t\tif(dep_1[vt[k2]]>bk[dep_len[vt[k2]]])\r\n\t\t\t{\r\n\t\t\t\tbk[dep_len[vt[k2]]]=dep_1[vt[k2]];\r\n\t\t\t\tbk_ps[dep_len[vt[k2]]]=vt[k2];\r\n\t\t\t}\r\n\t\t}\t\r\n\t\tvt.clear();\r\n\t\tif(ok)\r\n\t\t{\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\t \t\r\n\tif(ok)\r\n\t{\r\n\t\treturn ;\r\n\t}\r\n\tfor(int i=head[u];i;i=edge[i].nxt)\r\n\t{\r\n\t\tint v=edge[i].v;\r\n\t\tif(vis[v])\r\n\t\t{\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tdivv(now+1,v);\r\n\t\tif(ok)\r\n\t\t{\r\n\t\t\treturn ;\r\n\t\t}\r\n\t}\t\t\t\t\t\r\n}\r\nint main()\r\n{\r\n\tcin>>n>>l>>r;\r\n\tfor(int i=1;i<=n-1;i++)\r\n\t{\r\n\t\te[i].u=read();\r\n\t\te[i].v=read();\r\n\t\te[i].w=read();\r\n\t\ttmp.push_back(e[i].w);\r\n\t}\r\n\t\r\n\tsort(tmp.begin(),tmp.end());\r\n\t\r\n\tfor(int i=0;i<tmp.size();i++)\r\n\t{\r\n\t\tmp[tmp[i]]=i+1;\r\n\t}\r\n\r\n\tfor(int i=1;i<=n-1;i++)\r\n\t{\r\n\t\te[i].w=mp[e[i].w];\r\n\t}\r\n\t\r\n\tint l=1,r=n-1;\r\n\tint mid=(l+r)/2;\r\n\tint ans=-1;\r\n\tint au=0,av=0;\r\n\twhile(l<=r)\r\n\t{\r\n\t\tmid=(l+r)/2;\r\n\t\tok=0;\r\n\t\tmemset(head,0,sizeof(head));\r\n\t\tmemset(vis,0,sizeof(vis));\r\n\t\tcnt=0;\r\n\t\t\r\n\t\tfor(int i=1;i<=n-1;i++)\r\n\t\t{\r\n\t\t\tif(e[i].w>=mid)\r\n\t\t\t{\r\n\t\t\t//\tcout<<\"?\\n\";\r\n\t\t\t\tadd_edge(e[i].u,e[i].v,1);\r\n\t\t\t\tadd_edge(e[i].v,e[i].u,1);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tadd_edge(e[i].u,e[i].v,-1);\r\n\t\t\t\tadd_edge(e[i].v,e[i].u,-1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tdivv(0,1);\r\n\t\tif(ok)\r\n\t\t{\r\n\t\t\tl=mid+1;\r\n\t\t\tif(mid>ans)\r\n\t\t\t{\r\n\t\t\t\tans=mid;\r\n\t\t\t\tau=ok_u;\r\n\t\t\t\tav=ok_v;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tr=mid-1;\r\n\t\t}\r\n\t}\r\n\t\r\n\tcout<<au<<\" \"<<av<<\"\\n\";\r\n    return 0;\r\n}\r\n"
}