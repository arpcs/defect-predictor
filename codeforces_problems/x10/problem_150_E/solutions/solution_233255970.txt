{
    "id": 233255970,
    "contestId": 150,
    "creationTimeSeconds": 1700290458,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 150,
        "index": "E",
        "name": "Freezing with Style",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3000,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "trees"
        ]
    },
    "author": {
        "contestId": 150,
        "members": [
            {
                "handle": "third_wrist"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1329490800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 118,
    "timeConsumedMillis": 5708,
    "memoryConsumedBytes": 27750400,
    "source": "//C C_C\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define pb push_back\r\nll n, L, R, mn, cnt, rt, all, a1, a2, ans;\r\nll last[100005], w[100005], sz[100005], f[100005], d[100005];\r\nll dep[100005], que[100005], dn[100005], gn[100005], g[100005];\r\nbool vis[100005], bul[100005];\r\nstruct node {\r\n\tll to, val, w;\r\n};\r\nvector<node> s[100005];\r\nvoid findrt(ll x, ll fa) {\r\n\tsz[x] = 1;\r\n\tll mx = 0;\r\n\tfor (int i = 0; i < s[x].size(); i++) {\r\n\t\tif (s[x][i].to != fa && !vis[s[x][i].to]) {\r\n\t\t\tfindrt(s[x][i].to, x);\r\n\t\t\tsz[x] += sz[s[x][i].to];\r\n\t\t\tmx = max(mx, sz[s[x][i].to]);\r\n\t\t}\r\n\t}\r\n\tmx = max(mx, all - sz[x]);\r\n\tif (mx < mn) {\r\n\t\tmn = mx;\r\n\t\trt = x;\r\n\t}\r\n}\r\nbool cmp(node a, node b) {\r\n\treturn dep[a.to] < dep[b.to];\r\n}\r\nvoid get_dp(ll x, ll fa) {\r\n\tdep[x] = 0;\r\n\tfor (int i = 0; i < s[x].size(); i++) {\r\n\t\tif (!vis[s[x][i].to] && s[x][i].to != fa) {\r\n\t\t\tget_dp(s[x][i].to, x);\r\n\t\t\tdep[x] = max(dep[x], dep[s[x][i].to] + 1);\r\n\t\t}\r\n\t}\r\n}\r\nvoid build(ll x) {\r\n\tif (!s[x].size()) {\r\n\t\treturn ;\r\n\t}\r\n\tfor (int i = 0; i < s[x].size(); i++) {\r\n\t\tif (!vis[s[x][i].to]) {\r\n\t\t\tget_dp(s[x][i].to, x);\r\n\t\t}\r\n\t}\r\n\tsort(s[x].begin(), s[x].end(), cmp);\r\n}\r\nvoid ud(ll x, ll fa, ll dep, ll val) {\r\n\tif (val > g[dep]) {\r\n\t\tg[dep] = val;\r\n\t\tgn[dep] = x; \r\n\t}\r\n\tsz[x] = 1;\r\n\tfor (int i = 0; i < s[x].size(); i++) {\r\n\t\tif (!vis[s[x][i].to] && s[x][i].to != fa) {\r\n\t\t\tud(s[x][i].to, x, dep + 1, val + s[x][i].w);\r\n\t\t\tsz[x] += sz[s[x][i].to];\r\n\t\t}\r\n\t}\r\n}\r\nvoid solve(ll x) {\r\n\tvis[x] = 1;\r\n\tll mx = 0;\r\n\tif (!bul[x]) {\r\n\t\tbuild(x);\r\n\t\tbul[x] = 1;\r\n\t}\r\n\td[0] = 0;\r\n\tdn[0] = x;\r\n\tfor (int i = 0; i < s[x].size(); i++) {\r\n\t\tif (!vis[s[x][i].to]) {\r\n\t\t\tud(s[x][i].to, x, 1, s[x][i].w);\r\n\t\t\tll l = 1, r = 0;\r\n\t\t\tfor (int j = min(R - 1, mx); j >= L; j--) {\r\n\t\t\t\twhile (l <= r && d[que[r]] <= d[j]) {\r\n\t\t\t\t\tr--;\r\n\t\t\t\t}\r\n\t\t\t\tque[++r] = j;\r\n\t\t\t}\r\n\t\t\tfor (int j = 1; g[j] != -1e18; j++) {\r\n\t\t\t\tif (L >= j) {\r\n\t\t\t\t\twhile (l <= r && d[que[r]] <= d[L - j]) {\r\n\t\t\t\t    \tr--;\r\n\t\t\t\t    }\r\n\t\t\t\t    que[++r] = L - j;\r\n\t\t\t\t}\r\n\t\t\t\twhile (l <= r && que[l] > R - j) {\r\n\t\t\t\t\tl++;\r\n\t\t\t\t}\r\n\t\t\t\tif (l <= r && d[que[l]] + g[j] > ans) {\r\n\t\t\t\t\tans = d[que[l]] + g[j];\r\n\t\t\t\t\ta1 = dn[que[l]];\r\n\t\t\t\t\ta2 = gn[j];\r\n\t\t\t\t}\r\n \t\t    }\r\n \t\t    for (int j = 1; g[j] != -1e18; j++) {\r\n \t\t    \tif (d[j] < g[j]) {\r\n \t\t    \t    d[j] = g[j];\r\n\t\t\t\t\tdn[j] = gn[j];\t\r\n\t\t\t\t}\r\n \t\t    \tg[j] = -1e18;\r\n \t\t    \tmx = max(mx, (ll) j);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor (int i = 1; d[i] != -1e18; i++) {\r\n\t\td[i] = -1e18;\r\n\t}\r\n\tfor (int i = 0; i < s[x].size(); i++) {\r\n\t\tif (!vis[s[x][i].to]) {\r\n\t\t\trt = 0;\r\n\t\t\tmn = 1e18;\r\n\t\t\tall = sz[s[x][i].to];\r\n\t\t\tfindrt(s[x][i].to, x);\r\n\t\t\tsolve(rt);\r\n\t\t}\r\n\t}\r\n}\r\nint main() {\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0);\r\n\tcin >> n >> L >> R;\r\n\tfor (int i = 1; i < n; i++) {\r\n\t\tint x, y, z;\r\n\t\tcin >> x >> y >> z;\r\n\t\ts[x].pb({y, z});\r\n\t\ts[y].pb({x, z});\r\n\t\tw[i] = z;\r\n\t}\r\n\tsort(w + 1, w + n + 1);\r\n\tll w1 = unique(w + 1, w + n + 1) - w - 1;\r\n\tfor (int i = 0; i <= n; i++) {\r\n\t\td[i] = g[i] = -1e18;\r\n\t}\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tfor (int j = 0; j < s[i].size(); j++) {\r\n\t\t\ts[i][j].val = lower_bound(w + 1, w + w1 + 1, s[i][j].val) - w;//why not -1?\r\n\t\t}\r\n\t}\r\n\tll l = 1, r = w1, b1, b2;\r\n\twhile (l <= r) {\r\n\t\tll mid = (l + r) / 2;\r\n\t\tfor (int i = 0; i <= n; i++) {\r\n\t\t\tvis[i] = 0;\r\n\t\t}\r\n\t\tfor (int i = 1; i <= n; i++) {\r\n\t\t\tfor (int j = 0; j < s[i].size(); j++) {\r\n\t\t\t\ts[i][j].w = s[i][j].val >= mid ? 1 : -1;//what's the difference?\r\n\t\t\t}\r\n\t\t}\r\n\t\trt = 0;\r\n\t\tmn = 1e18;\r\n\t\tans = -1e18;\r\n\t\tall = n;\r\n\t\tfindrt(1, 0);\r\n\t\tsolve(rt);\r\n\t\tif (ans >= 0) {\r\n\t\t\tl = mid + 1;\r\n\t\t\tb1 = a1;\r\n\t\t\tb2 = a2;\r\n\t\t} else {\r\n\t\t\tr = mid - 1;\r\n\t\t}\r\n\t}\r\n\tcout << b1 << \" \" << b2;\r\n\treturn 0;\r\n}"
}