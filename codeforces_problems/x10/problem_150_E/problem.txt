{
    "contestId": 150,
    "index": "E",
    "name": "Freezing with Style",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 3000,
    "tags": [
        "binary search",
        "data structures",
        "divide and conquer",
        "trees"
    ],
    "desc": {
        "title": "E. Freezing with Style",
        "statement": "<p>This winter is so... well, you've got the idea :-) The Nvodsk road system can be represented as <span class=\"tex-span\"><i>n</i></span> junctions connected with <span class=\"tex-span\"><i>n</i>\u2009-\u20091</span> bidirectional roads so that there is a path between any two junctions. The organizers of some event want to choose a place to accommodate the participants (junction <span class=\"tex-span\"><i>v</i></span>), and the place to set up the contests (junction <span class=\"tex-span\"><i>u</i></span>). Besides, at the one hand, they want the participants to walk about the city and see the neighbourhood (that's why the distance between <span class=\"tex-span\"><i>v</i></span> and <span class=\"tex-span\"><i>u</i></span> should be no less than <span class=\"tex-span\"><i>l</i></span>). On the other hand, they don't want the participants to freeze (so the distance between <span class=\"tex-span\"><i>v</i></span> and <span class=\"tex-span\"><i>u</i></span> should be no more than <span class=\"tex-span\"><i>r</i></span>). Besides, for every street we know its beauty \u2014 some integer from <span class=\"tex-span\">0</span> to <span class=\"tex-span\">10<sup class=\"upper-index\">9</sup></span>. Your task is to choose the path that fits in the length limits and has the largest average beauty. We shall define the average beauty as a median of sequence of the beauties of all roads along the path.</p><p>We can put it more formally like that: let there be a path with the length <span class=\"tex-span\"><i>k</i></span>. Let <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> be a non-decreasing sequence that contains exactly <span class=\"tex-span\"><i>k</i></span> elements. Each number occurs there exactly the number of times a road with such beauty occurs along on path. We will represent the path median as number <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">\u230a<i>k</i>\u2009/\u20092\u230b</sub></span>, assuming that <span class=\"tex-font-style-bf\">indexation starting from zero</span> is used. <span class=\"tex-span\">\u230a<i>x</i>\u230b</span> \u2014 is number <span class=\"tex-span\"><i>\u0445</i></span>, rounded down to the nearest integer.</p><p>For example, if <span class=\"tex-span\"><i>a</i>\u2009=\u2009{0,\u20095,\u200912}</span>, then the median equals to <span class=\"tex-span\">5</span>, and if <span class=\"tex-span\"><i>a</i>\u2009=\u2009{0,\u20095,\u20097,\u200912}</span>, then the median is number <span class=\"tex-span\">7</span>.</p><p>It is guaranteed that there will be at least one path with the suitable quantity of roads.</p>",
        "inputSpecification": "<p>The first line contains three integers <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>l</i></span>, <span class=\"tex-span\"><i>r</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>l</i>\u2009\u2264\u2009<i>r</i>\u2009&lt;\u2009<i>n</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup></span>).</p><p>Next <span class=\"tex-span\"><i>n</i>\u2009-\u20091</span> lines contain descriptions of roads of the Nvodsk, each line contains three integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span>, <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub>,\u2009<i>b</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u2009<i>n</i></span>, <span class=\"tex-span\">0\u2009\u2264\u2009<i>c</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>, <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009\u2260\u2009<i>b</i><sub class=\"lower-index\"><i>i</i></sub></span>) \u2014 junctions <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>b</i><sub class=\"lower-index\"><i>i</i></sub></span> are connected with a street whose beauty equals <span class=\"tex-span\"><i>c</i><sub class=\"lower-index\"><i>i</i></sub></span>.</p>",
        "outputSpecification": "<p>Print two integers \u2014 numbers of the junctions, where to accommodate the participants and set up the contests, correspondingly. If there are multiple optimal variants, print any of them.</p>",
        "samples": [
            {
                "input": "6 3 4<br/>1 2 1<br/>2 3 1<br/>3 4 1<br/>4 5 1<br/>5 6 1<br/>",
                "output": "4 1<br/>"
            },
            {
                "input": "6 3 4<br/>1 2 1<br/>2 3 1<br/>3 4 1<br/>4 5 2<br/>5 6 2<br/>",
                "output": "6 3<br/>"
            },
            {
                "input": "5 1 4<br/>1 2 1<br/>1 3 4<br/>3 4 7<br/>3 5 2<br/>",
                "output": "4 3<br/>"
            },
            {
                "input": "8 3 6<br/>1 2 9<br/>2 3 7<br/>3 4 7<br/>4 5 8<br/>5 8 2<br/>3 6 3<br/>2 7 4<br/>",
                "output": "5 1<br/>"
            }
        ],
        "note": "<p>In the first sample all roads have the same beauty. That means that all paths of the positive length have the same median. Thus, any path with length from <span class=\"tex-span\">3</span> to <span class=\"tex-span\">4</span>, inclusive will be valid for us.</p><p>In the second sample the city looks like that: 1 - 2 - 3 - 4 - 5 - 6. Two last roads are more valuable and we should choose any path that contains both of them and has the suitable length. It is either the path between <span class=\"tex-span\">2</span> and <span class=\"tex-span\">6</span> or the path between <span class=\"tex-span\">3</span> and <span class=\"tex-span\">6</span>.</p>"
    },
    "suggested_categories": [
        "graph theory",
        "shortest path",
        "median",
        "network analysis",
        "optimization",
        "geometric algorithms",
        "algorithms",
        "data structures",
        "network flow",
        "dynamic programming",
        "mathematics",
        "combinatorial optimization",
        "integer sequences",
        "routing",
        "geographical data",
        "path finding",
        "average calculation",
        "city planning",
        "travel optimization",
        "winter events"
    ]
}