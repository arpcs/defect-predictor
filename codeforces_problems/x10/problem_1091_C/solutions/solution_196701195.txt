{
    "id": 196701195,
    "contestId": 1091,
    "creationTimeSeconds": 1678386010,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1091,
        "index": "C",
        "name": "New Year and the Sphere Transmission",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1400,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1091,
        "members": [
            {
                "handle": "tou__rist"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1546180500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 23,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 15052800,
    "source": "#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC target(\"avx,avx2,fma,sse4\")\r\n#pragma GCC optimization (\"unroll-loops\")\r\n#include<bits/stdc++.h>\r\n#include <chrono>\r\nusing namespace std;\r\nusing namespace chrono;\r\n#define ll long long int\r\n#define getunique(v) {sort(v.begin(), v.end()); v.erase(unique(v.begin(), v.end()), v.end());}\r\n\r\nnamespace number_theory {\r\n  ll gcd(ll x, ll y) {\r\n    if (x == 0) return y;\r\n    if (y == 0) return x;\r\n    return gcd(y, x % y);\r\n  }\r\n  bool isprime(ll n) { \r\n    if (n <= 1) return false; \r\n    if (n <= 3) return true; \r\n    \r\n    if (n % 2 == 0 || n % 3 == 0) return false; \r\n    \r\n    for (ll i = 5; i * i <= n; i += 6) \r\n    if (n % i == 0 || n % (i+2) == 0) \r\n      return false; \r\n    \r\n    return true; \r\n  } \r\n   \r\n  bool prime[15000105]; \r\n  void sieve(int n) { \r\n    for (ll i = 0; i <= n; i++) prime[i] = 1;\r\n    for (ll p = 2; p * p <= n; p++) { \r\n    if (prime[p] == true) { \r\n      for (ll i = p * p; i <= n; i += p) \r\n      prime[i] = false; \r\n    } \r\n    } \r\n    prime[1] = prime[0] = 0;\r\n  } \r\n   \r\n  vector<ll> primelist;\r\n  bool __primes_generated__ = 0;\r\n   \r\n  void genprimes(int n) {\r\n    __primes_generated__ = 1;\r\n    sieve(n + 1);\r\n    for (ll i = 2; i <= n; i++) if (prime[i]) primelist.push_back(i);\r\n  }\r\n   \r\n  vector<ll> factors(ll n) {\r\n    if (!__primes_generated__) {\r\n    cerr << \"Call genprimes you dope\" << endl;\r\n    exit(1);\r\n    }\r\n    vector<ll> facs;\r\n   \r\n    for (ll i = 0; primelist[i] * primelist[i] <= n && i < primelist.size(); i++) {\r\n    if (n % primelist[i] == 0) {\r\n      while (n % primelist[i] == 0) {\r\n      n /= primelist[i];\r\n      facs.push_back(primelist[i]);\r\n      }\r\n    }\r\n    }\r\n    if (n > 1) {\r\n    facs.push_back(n);\r\n    }\r\n    sort(facs.begin(), facs.end());\r\n    return facs;\r\n  }\r\n  \r\n  vector<ll> getdivs(ll n) {\r\n    vector<ll> divs;\r\n    for (ll i = 1; i * i <= n; i++) {\r\n      if (n % i == 0) {\r\n        divs.push_back(i);\r\n        divs.push_back(n / i);\r\n      }\r\n    }\r\n    getunique(divs);\r\n    return divs;\r\n  }\r\n}\r\nusing namespace number_theory;\r\n\r\n//-------------------------------------------CONSTANT-------------------------------------------------\r\nlong long INF = 1000000000000000005LL;\r\ndouble PI = acos(-1);\r\nconst int mod = 1e9 + 7;\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x) cerr << #x <<\" \"; _print(x); cerr << endl;\r\n#else\r\n#define debug(x)\r\n#endif\r\n/* Bit-Stuff */\r\n#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\r\n#define rep(i,n) for(ll i=0;i<n;i++)\r\n#define rep1(i,a,b) for(ll i=a;i<b;i++)\r\n#define pb push_back\r\n#define pb push_back\r\n#define take(a,n) for(ll j=0;j<n;j++) cin>>a[j];\r\n#define give(a,n) for(int j=0;j<n;j++) cout<<a[j]<<' ';\r\n#define eb emplace_back // fastest way to insert element at back in vector\r\n#define pii pair<ll,ll>\r\n#define mll map<ll,ll> // sort(by key remember),unique,key-value\r\n#define s2L set<lli>\r\n#define vs vector<string>\r\n#define vi vector<int>\r\n#define v2i vector<vi>\r\n#define umap unordered_map<int,int>\r\n#define F first\r\n#define S second\r\n#define si set<ll>\r\n#define yes cout<<\"YES\"<<endl;\r\n#define no cout<<\"NO\"<<endl;\r\n#define endl \"\\n\"\r\n#define ip(a) ll a;cin>>a;\r\n#define all(x) (x).begin(), (x).end()\r\n#define atoz \"abcdefghijklmnopqrstuvwxyz\"\r\n#define UNIQUE(v) v.erase(unique(all(v)), v.end())\r\n#define mini(a)    ( min_element((a).begin(), (a).end()) - (a).begin())\r\n#define maxi(a)    ( max_element((a).begin(), (a).end()) - (a).begin())\r\n#define countDgt return floor(log10(n)+1);\r\n#define printf(x)   for(auto ele : ans ) cout << ele << \" \";\r\nstruct custom_hash {\r\n    static uint64_t splitmix64(uint64_t x) {\r\n        // http://xorshift.di.unimi.it/splitmix64.c\r\n        x += 0x9e3779b97f4a7c15;\r\n        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n        return x ^ (x >> 31);\r\n    }\r\n\r\n    size_t operator()(uint64_t x) const {\r\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n        return splitmix64(x + FIXED_RANDOM);\r\n    }\r\n};\r\n//----------------------------------------FUNCTIONS-----------------------------------------------\r\nvoid google(int t) {cout << \"Case #\" << t << \": \";}\r\nll fastpow(ll a, ll b,ll MOD){if(b==0)return 1;if(b%2==0){ll take=fastpow(a,b/2,MOD);if(MOD!=0)return (take*take)%MOD;else return (take*take);}else{ll take=fastpow(a,b-1,MOD);if(MOD!=0)return (a*take)%MOD;else return (a*take);}}\r\nvi factor(int n){vi ret;for (int i = 2; i * i <= n; i++){while (n % i == 0){ret.pb(i); n /= i;}}if (n > 1) ret.pb(n);return ret;}\r\nll noOfDivisors(){ll n;cin >> n;for(int q = 0; q < n; q++){int x;int div_num = 0;cin >> x;for (int i = 1; i * i <= x; i++) {if (x % i == 0) {div_num += i * i == x ? 1 : 2;}}cout << div_num << '\\n';}}\r\nll mod_add(ll a, ll b) {a = a % mod; b = b % mod; return (((a + b) % mod) + mod) % mod;}\r\nvector<int> sieve(int n) {int*arr = new int[n + 1](); vector<int> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}\r\n\r\n/* DEBUG */\r\ntypedef unsigned long long ull;\r\ntypedef long double lld;\r\n\r\nvoid _print(ll t) {cerr << t;}\r\nvoid _print(int t) {cerr << t;}\r\nvoid _print(string t) {cerr << t;}\r\nvoid _print(char t) {cerr << t;}\r\nvoid _print(lld t) {cerr << t;}\r\nvoid _print(double t) {cerr << t;}\r\nvoid _print(ull t) {cerr << t;}\r\n\r\n \r\ntemplate <class T, class V> void _print(pair <T, V> p);\r\ntemplate <class T> void _print(vector <T> v);//can be debug vector of any type(int,char,string..)\r\ntemplate <class T> void _print(set <T> v);\r\ntemplate <class T, class V> void _print(map <T, V> v);\r\ntemplate <class T> void _print(multiset <T> v);\r\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.F); cerr << \",\"; _print(p.S); cerr << \"}\";}\r\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <typename T1, typename T2> void amax(T1 &x, T2 y){if(x < y) x = y;}\r\ntemplate <typename T1, typename T2> void amin(T1 &x, T2 y){if(x > y) x = y;}\r\n//\r\n/*-------------------------------------Imp Concept---------------------------------------------->\r\n/*\r\n48-57 -> 0-9\r\n65-90 -> A-Z\r\n97-122 -> a-z\r\n(a + b) mod M = ((a mod M) + (b mod M)) mod M.\r\n(a - b) mod M = ((a mod M) - (b mod M)) mod M.\r\n(a * b) mod M = ((a mod M) * (b mod M)) mod M.\r\n*//*/-----------------------------CODE BEGIN :)-----------------------------------------/*/\r\n//ll n,m,a,b,c,d,k,f,ans,q,N,K;\r\n\r\n\r\n// 1,1 sum -4, -1 -1 max sum \r\n\r\nconst int MOD = 1e9+7;\r\nll n,k,l,m,a,b,x,c,d;\r\nvoid run_case(){cin >> n;\r\n  \r\n  vector<ll> d = getdivs(n);\r\n  \r\n  vector<ll> ans;\r\n  \r\n  for (ll g: d) {\r\n    ll len = n / g;\r\n    ans.push_back(g * (len * (len - 1) / 2) + len);\r\n  }\r\n  \r\n  getunique(ans);\r\n  \r\n  for (ll x: ans) cout << x << \" \";\r\n\r\n\r\n}\r\nint  main(){\r\nfastio();\r\n#ifndef ONLINE_JUDGE\r\n  freopen(\"Error.txt\", \"w\", stderr);\r\n#endif\r\n  // int t;\r\n  // cin>>t;\r\n  // while(t--){\r\n    \r\n\r\n    run_case();\r\n // }\r\n}\r\n \r\n\r\n"
}