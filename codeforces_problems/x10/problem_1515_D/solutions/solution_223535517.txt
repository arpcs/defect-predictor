{
    "id": 223535517,
    "contestId": 1515,
    "creationTimeSeconds": 1694809593,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1515,
        "index": "D",
        "name": "Phoenix and Socks",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1500,
        "tags": [
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1515,
        "members": [
            {
                "handle": "asimAlrim"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619966100
    },
    "programmingLanguage": "Python 3",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "t = int(input())\r\n\r\nfor i in range(t):\r\n    n, l, r = [*map(int, input().split())]\r\n    c = [*map(int, input().split())]\r\n\r\n    mincost = 0\r\n    middle_index = l\r\n\r\n    first_half = c[:l]\r\n    second_half = c[l:]\r\n\r\n    for y in max(first_half, second_half):\r\n        if max(first_half, second_half).count(y) > 1 and len(first_half) != len(second_half):\r\n            min(first_half, second_half).append(y)\r\n            max(first_half, second_half).remove(y)\r\n            mincost += 1\r\n        if len(first_half) == len(second_half):\r\n            break\r\n\r\n    first_half.sort()\r\n    second_half.sort()\r\n\r\n    if len(first_half) < len(second_half):\r\n        mincost += (n//2) - len(first_half)\r\n    elif len(first_half) > len(second_half):\r\n        mincost += (n//2) - len(second_half)\r\n\r\n    if len(first_half) == len(second_half):\r\n        for f in range(max(len(first_half), len(second_half))):\r\n            if first_half[f] != second_half[f]:\r\n                mincost += 1\r\n    else:\r\n        first_half.append(second_half)\r\n        z = n // 2\r\n        for y in range(n // 2):\r\n            if first_half[y] != first_half[z]:\r\n                mincost += 1\r\n            z += 1\r\n\r\n    print(mincost)"
}