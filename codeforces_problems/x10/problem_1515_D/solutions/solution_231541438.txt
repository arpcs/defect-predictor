{
    "id": 231541438,
    "contestId": 1515,
    "creationTimeSeconds": 1699248278,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1515,
        "index": "D",
        "name": "Phoenix and Socks",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1500,
        "tags": [
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1515,
        "members": [
            {
                "handle": "BrAin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1619966100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 20,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 13824000,
    "source": "#include<bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n\r\ntemplate <typename T> using o_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n// greater_equal means greater to lower and less_equal means lower to greater\r\n//*s.find_by_order(1); // iterate to the k-th largest element\r\n//s.order_of_key(-5); // number of items that the strictly greater then our item\r\n\r\ntypedef long long ll;\r\n#define ull unsigned long long\r\n#define ld long double\r\n#define endl '\\n'\r\n#define all(a) (a).begin(),(a).end()\r\n#define INF 1e18 + 9\r\n#define inf (1 << 30)\r\nconst ld eps = 1e-15;\r\nconst ll mod = 1e9 + 7;\r\n#define int long long\r\n\r\nvoid solve()\r\n{\r\n    int n, l, r; cin >> n >> l >> r;\r\n    vector<int> a(n + 1);\r\n    map<int, int> mpl, mpr;\r\n    for(int i = 1; i <= n; i++) {\r\n      cin >> a[i];\r\n      if(i <= l) mpl[a[i]]++;\r\n      else mpr[a[i]]++;\r\n    }\r\n    \r\n    //for(auto u: mpl) cout << u.first << ' ' << u.second << '\\n';\r\n\r\n    int ans = 0;\r\n\r\n    if(l <= r) {\r\n      for(auto u: mpl) {\r\n        int mn = min(u.second, mpr[u.first]);\r\n        mpr[u.first] -= mn;\r\n        if(mn < u.second) {\r\n          ans += (u.second - mn);\r\n        }\r\n      }\r\n      int rem = ans;\r\n      int cnt = 0, cnt1 = 0;\r\n      for(auto u: mpr) {\r\n        //cout << u.first << ' ' << u.second << '\\n';\r\n        cnt1 += u.second;\r\n        if(u.second % 2 == 1) {\r\n          if(rem == 0) cnt++;\r\n          else rem--;\r\n        }\r\n      }\r\n      cnt1 -= ans;\r\n      //if(rem > 0) cnt1 -= rem;\r\n      ans += (cnt1 / 2);\r\n      ans += (cnt / 2);\r\n    }\r\n    else {\r\n      for(auto u: mpr) {\r\n        int mn = min(u.second, mpl[u.first]);\r\n        mpl[u.first] -= mn;\r\n        if(mn < u.second) {\r\n          ans += (u.second - mn);\r\n        }\r\n      }\r\n      \r\n      int rem = ans;\r\n      int cnt = 0, cnt1 = 0;\r\n      for(auto u: mpl) {\r\n        cnt1 += u.second;\r\n        if(u.second % 2 == 1) {\r\n          if(rem == 0) cnt++;\r\n          else rem--;\r\n        }\r\n      }\r\n      cnt1 -= ans;\r\n      //if(rem > 0) cnt1 -= rem;\r\n      ans += (cnt1 / 2);\r\n      ans += (cnt / 2);\r\n    }\r\n\r\n    cout << ans << '\\n';\r\n}\r\n\r\n\r\nint32_t main() {\r\n  ios_base::sync_with_stdio(0);\r\n  cin.tie(0); cout.tie(0);\r\n  int t; t = 1;\r\n  //prec();\r\n  cin >> t;\r\n  for(int i = 1; i <= t; i++){\r\n    //cout << \"Case \" << i << \": \";\r\n    solve();\r\n  }\r\n  return 0;\r\n}"
}