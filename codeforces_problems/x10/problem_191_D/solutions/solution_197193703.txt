{
    "id": 197193703,
    "contestId": 191,
    "creationTimeSeconds": 1678689789,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 191,
        "index": "D",
        "name": "Metro Scheme",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2700,
        "tags": [
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 191,
        "members": [
            {
                "handle": "Superluobo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1338132600
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 61,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 26726400,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <cstring>\r\n#include <vector>\r\n#include <map>\r\nusing namespace std;\r\n\r\nnamespace solve\r\n{\r\n    const int maxn = 1e5 + 10;\r\n\r\n    vector<int> e[maxn];\r\n    inline void add(int x, int y) { e[x].push_back(y), e[y].push_back(x); }\r\n\r\n    int n, m;\r\n\r\n    int dfn[maxn], low[maxn], scc[maxn], siz[maxn], deg[maxn];\r\n    int cnt, father[maxn];\r\n\r\n    map<int, int> is[maxn];\r\n\r\n    void tarjan(int x, int fa)\r\n    {\r\n        low[x] = dfn[x] = ++cnt;\r\n        for (int v : e[x])\r\n            if (v != fa)\r\n            {\r\n                if (!dfn[v])\r\n                {\r\n                    tarjan(v, x), low[x] = min(low[x], low[v]);\r\n                    if (low[v] >= dfn[v])\r\n                    {\r\n                        is[x][v] = is[v][x] = 1;\r\n                    }\r\n                }\r\n                else\r\n                    low[x] = min(low[x], dfn[v]);\r\n            }\r\n    }\r\n    int tot, vis[maxn];\r\n    vector<int> b[maxn];\r\n    void dfs(int x, int fa)\r\n    {\r\n        vis[x] = 1, b[tot].push_back(x);\r\n        for (int v : e[x])\r\n            if (v != fa && !vis[v] && !is[x].count(v))\r\n                dfs(v, x);\r\n    }\r\n\r\n    void main()\r\n    {\r\n        cin >> n >> m;\r\n        if (m == 0)\r\n        {\r\n            cout << 0 << \" \" << 0 << endl;\r\n            return;\r\n        }\r\n        for (int i = 0, x, y; i < m; i++)\r\n            cin >> x >> y, add(x, y), deg[x]++, deg[y]++;\r\n        int res = 0;\r\n        for (int i = 1; i <= n; i++)\r\n            res += deg[i] % 2;\r\n        res /= 2;\r\n        for (int i = 1; i <= n; i++)\r\n            if (!dfn[i])\r\n                tarjan(i, 0);\r\n        for (int i = 1; i <= n; i++)\r\n            if (!vis[i])\r\n                tot++, dfs(i, 0);\r\n        if (tot == 1)\r\n        {\r\n            cout << 1 << \" \" << m << endl;\r\n            return;\r\n        }\r\n        for (int i = 1; i <= tot; i++)\r\n            if ((int)b[i].size() >= 3)\r\n            {\r\n                int num = 0;\r\n                for (int x : b[i])\r\n                    num += deg[x] >= 3;\r\n                if (num < 2)\r\n                    res++;\r\n            }\r\n        cout << min(m, res) << \" \" << m << endl;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    ios::sync_with_stdio(false), cin.tie(0);\r\n    int T = 1;\r\n    // cin >> T;\r\n    while (T--)\r\n        solve::main();\r\n}"
}