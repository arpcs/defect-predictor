{
    "id": 219392763,
    "contestId": 79,
    "creationTimeSeconds": 1692328954,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 79,
        "index": "C",
        "name": "Beaver",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1800,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "hashing",
            "strings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 79,
        "members": [
            {
                "handle": "hoanghuy2205"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1304175600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <string>\r\n#include <vector>\r\n\r\nint main() {\r\n    std::string s;\r\n    std::cin >> s;\r\n\r\n    int n;\r\n    std::cin >> n;\r\n\r\n    std::vector<std::string> boringStrings(n);\r\n    for (int i = 0; i < n; ++i) {\r\n        std::cin >> boringStrings[i];\r\n    }\r\n\r\n    int maxLength = 0;\r\n    int startPos = 0;\r\n    int currentLength = 0;\r\n    int currentStart = 0;\r\n\r\n    for (int i = 0; i < s.length(); ++i) {\r\n        bool isBoring = false;\r\n        for (const std::string& boring : boringStrings) {\r\n            if (s.substr(i, boring.length()) == boring) {\r\n                isBoring = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isBoring) {\r\n            if (currentLength > maxLength) {\r\n                maxLength = currentLength;\r\n                startPos = currentStart;\r\n            }\r\n            currentLength = 0;\r\n            currentStart = i + 1;\r\n        } else {\r\n            currentLength++;\r\n        }\r\n    }\r\n\r\n    if (currentLength > maxLength) {\r\n        maxLength = currentLength;\r\n        startPos = currentStart;\r\n    }\r\n\r\n    std::cout << maxLength << \" \" << startPos << std::endl;\r\n\r\n    return 0;;\r\n}\r\n"
}