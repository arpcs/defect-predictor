{
    "id": 218867280,
    "contestId": 79,
    "creationTimeSeconds": 1692069761,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 79,
        "index": "C",
        "name": "Beaver",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1800,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "hashing",
            "strings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 79,
        "members": [
            {
                "handle": "ziche"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1304175600
    },
    "programmingLanguage": "Clang++17 Diagnostics",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\n#include <string>\nusing namespace std;\n\nconst int MAX_N = 100;\nconst int MAX_S = 100000;\n\nint mx = -1;\nint p = -1;\nstring list[MAX_N];\nint n;\nstring s;\nint prefix[MAX_S];\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n\n  cin >> s;\n  cin >> n;\n\n  for (int i = 0; i < n; i++) {\n    cin >> list[i];\n  }\n\n  int i = 0;\n  int l = 0;\n\n  for (int j = 1; j < s.size(); j++) {\n    while (l > 0 && s[j] != s[l]) {\n      l = prefix[l - 1];\n    }\n    if (s[j] == s[l]) {\n      l++;\n    }\n    prefix[j] = l;\n  }\n\n  for (int j = 0; j < n; j++) {\n    int k = 0;\n    for (int m = 0; m < list[j].size(); m++) {\n      while (k > 0 && list[j][m] != s[k]) {\n        k = prefix[k - 1];\n      }\n      if (list[j][m] == s[k]) {\n        k++;\n      }\n      if (k == s.size()) {\n        l = m + 2 - s.size();\n        break;\n      }\n    }\n    if (l > mx) {\n      mx = l;\n      p = l - s.size() + 1;\n    }\n  }\n\n  cout << mx << \" \" << p << endl;\n  return 0;\n}\n// RGoeryOkNrhUQyIqHdAAuvuRFBceYCZbmrynuYVJvYgHCaRpfzltOJMSFSNENUdEJTVbXkDGDHodsVPJKjcXfAaRMHcTdXWgwqEQlaqzbaWFASiUnoKkyWzexgzzlpem"
}