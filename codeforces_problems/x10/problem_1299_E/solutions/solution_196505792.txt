{
    "id": 196505792,
    "contestId": 1299,
    "creationTimeSeconds": 1678279752,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1299,
        "index": "E",
        "name": "So Mean",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 3400,
        "tags": [
            "interactive",
            "math"
        ]
    },
    "author": {
        "contestId": 1299,
        "members": [
            {
                "handle": "bachbeo2007"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581257100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 102400,
    "source": "// Judges with GCC >= 12 only needs Ofast\r\n// #pragma GCC optimize(\"O3,no-stack-protector,fast-math,unroll-loops,tree-vectorize\")\r\n// MLE optimization\r\n// #pragma GCC optimize(\"conserve-stack\")\r\n// Old judges\r\n// #pragma GCC target(\"sse4.2,popcnt,lzcnt,abm,mmx,fma,bmi,bmi2\")\r\n// New judges. Test with assert(__builtin_cpu_supports(\"avx2\"));\r\n// #pragma GCC target(\"avx2,popcnt,lzcnt,abm,bmi,bmi2,fma,tune=native\")\r\n// Atcoder\r\n// #pragma GCC target(\"avx2,popcnt,lzcnt,abm,bmi,bmi2,fma\")\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\r\nuniform_real_distribution<> pp(0.0,1.0);\r\n#define ld long double\r\n#define pii pair<int,int>\r\n#define piii pair<int,pii>\r\n#define fi first\r\n#define se second\r\nconst int inf=1e9;\r\nconst int mod=998244353;\r\nconst int mod2=1e9+7;\r\nconst int maxn=805;\r\nconst int maxm=200005;\r\nconst int maxq=500005;\r\nconst int maxl=20;\r\nconst int maxa=1000005;\r\nint power(int a,int n){\r\n    int res=1;\r\n    while(n){\r\n        if(n&1) res=res*a%mod;\r\n        a=a*a%mod;n>>=1;\r\n    }\r\n    return res;\r\n}\r\nint n,p[maxn],pos[maxn],d2[maxn],d3[maxn],d5[maxn],d7[maxn];\r\nint query(set<int> s){\r\n    cout << \"? \" << (int)s.size();\r\n    for(int v:s) cout << ' ' << v;\r\n    cout << endl;\r\n    int x;cin >> x;return x;\r\n}\r\nvoid print(){\r\n    if(p[1]>n/2){\r\n        for(int i=1;i<=n;i++) p[i]=n+1-p[i];\r\n    }\r\n    cout << \"!\";\r\n    for(int i=1;i<=n;i++) cout << \" \" << p[i];\r\n    cout << endl;\r\n    return;\r\n}\r\nvoid change(int x,int val){\r\n    p[x]=val;pos[val]=x;\r\n}\r\npii get(int x){\r\n    set<int> s;\r\n    for(int i=1;i<=n;i++){\r\n        if(!p[i]) s.insert(i);\r\n    }\r\n    pii res={-1,-1};\r\n    for(int i=1;i<=n;i++){\r\n        if(p[i]) continue;\r\n        s.erase(i);\r\n        if(query(s)){\r\n            if(res.fi==-1) res.fi=i;\r\n            else res.se=i;\r\n        }\r\n        s.insert(i);\r\n    }\r\n    return res;\r\n}\r\nvoid f3(){\r\n    for(int i=1;i<=n;i++) d3[i]=-1;\r\n    for(int i=1;i<=n;i++){\r\n        if(d3[i]!=-1 || p[i]) continue;\r\n        if(query({pos[1],pos[2],i})) d3[i]=0;\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        if(d3[i]!=-1 || p[i]) continue;\r\n        if(query({pos[2],pos[3],i})) d3[i]=1;\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        if(d3[i]!=-1 || p[i]) continue;\r\n        d3[i]=2;\r\n    }\r\n}\r\nvoid f5(){\r\n    for(int i=1;i<=n;i++) d5[i]=-1;\r\n    for(int i=1;i<=n;i++){\r\n        if(d5[i]!=-1 || p[i]) continue;\r\n        if(query({pos[1],pos[n],pos[n-2],pos[n-3],i})) d5[i]=(5-(3*n+1)%5)%5;\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        if(d5[i]!=-1 || p[i]) continue;\r\n        if(query({pos[2],pos[n],pos[n-2],pos[n-3],i})) d5[i]=(5-(3*n+2)%5)%5;\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        if(d5[i]!=-1 || p[i]) continue;\r\n        if(query({pos[3],pos[n],pos[n-2],pos[n-3],i})) d5[i]=(5-(3*n+3)%5)%5;\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        if(d5[i]!=-1 || p[i]) continue;\r\n        if(query({pos[4],pos[n],pos[n-2],pos[n-3],i})) d5[i]=(5-(3*n+4)%5)%5;\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        if(d5[i]!=-1 || p[i]) continue;\r\n        d5[i]=(5-(3*n)%5)%5;\r\n    }\r\n}\r\nvoid f7(){\r\n    for(int i=1;i<=n;i++) d7[i]=-1;\r\n    for(int i=1;i<=n;i++){\r\n        if(d7[i]!=-1 || p[i]) continue;\r\n        if(query({pos[1],pos[2],pos[3],pos[n-1],pos[n-2],pos[n-3],i})) d7[i]=(7-(3*n)%7)%7;\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        if(d7[i]!=-1 || p[i]) continue;\r\n        if(query({pos[1],pos[2],pos[3],pos[n],pos[n-2],pos[n-3],i})) d7[i]=(7-(3*n+1)%7)%7;\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        if(d7[i]!=-1 || p[i]) continue;\r\n        if(query({pos[1],pos[2],pos[3],pos[n],pos[n-1],pos[n-3],i})) d7[i]=(7-(3*n+2)%7)%7;\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        if(d7[i]!=-1 || p[i]) continue;\r\n        if(query({pos[1],pos[2],pos[3],pos[n],pos[n-1],pos[n-2],i})) d7[i]=(7-(3*n+3)%7)%7;\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        if(d7[i]!=-1 || p[i]) continue;\r\n        if(query({pos[1],pos[2],pos[4],pos[n],pos[n-1],pos[n-2],i})) d7[i]=(7-(3*n+4)%7)%7;\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        if(d7[i]!=-1 || p[i]) continue;\r\n        if(query({pos[1],pos[3],pos[4],pos[n],pos[n-1],pos[n-2],i})) d7[i]=(7-(3*n+5)%7)%7;\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        if(d7[i]!=-1 || p[i]) continue;\r\n        d7[i]=(7-(3*n+6)%7)%7;\r\n    }\r\n}\r\nvoid f8(){\r\n    for(int i=1;i<=n;i++){\r\n        if(p[i]) continue;\r\n        if(d2[i]==0){\r\n            if(query({pos[1],pos[2],pos[3],i})) d2[i]=2;\r\n        }\r\n        else{\r\n            if(query({pos[1],pos[2],pos[4],i})) d2[i]=1;\r\n            else d2[i]=3;\r\n        }\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        if(p[i]) continue;\r\n        if(d2[i]==0){\r\n            if(query({pos[n],pos[n-1],pos[n-2],pos[n-3],pos[1],pos[3],pos[4]})) d2[i]=0;\r\n            else d2[i]=4;\r\n        }\r\n        else if(d2[i]==1){\r\n            if(query({pos[n],pos[n-1],pos[n-2],pos[n-3],pos[1],pos[2],pos[4]})) d2[i]=1;\r\n            else d2[i]=5;\r\n        }\r\n        else if(d2[i]==2){\r\n            if(query({pos[n],pos[n-1],pos[n-2],pos[n-3],pos[1],pos[2],pos[3]})) d2[i]=2;\r\n            else d2[i]=6;\r\n        }\r\n        else{\r\n            if(query({pos[n],pos[n-1],pos[n-2],pos[n-3],pos[2],pos[3],pos[4]})) d2[i]=7;\r\n            else d2[i]=3;\r\n        }\r\n    }\r\n}\r\nmap<vector<int>,int> mp;\r\nvoid solve(){\r\n    cin >> n;\r\n    pii a=get(1);\r\n    change(a.fi,1);change(a.se,n);\r\n    for(int i=1;i<=n;i++){\r\n        if(p[i]) continue;\r\n        else d2[i]=query({i,pos[1]});\r\n    }\r\n    for(int i=2;i<=min(n/2,4);i++){\r\n        a=get(i);\r\n        if(d2[a.fi]==i%2){change(a.fi,i);change(a.se,n-i+1);}\r\n        else{change(a.se,i);change(a.fi,n-i+1);}\r\n    }\r\n    if(n<=8){\r\n        print();\r\n        return;\r\n    }\r\n    f3();f5();f7();f8();\r\n    for(int i=1;i<=n;i++) mp[{i%8,i%3,i%5,i%7}]=i;\r\n    for(int i=1;i<=n;i++){\r\n        if(p[i]) continue;\r\n        p[i]=mp[{d2[i],d3[i],d5[i],d7[i]}];\r\n    }\r\n    print();\r\n}\r\nsigned main(){\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);cout.tie(NULL);\r\n    int test=1;//cin >> test;\r\n    while(test--) solve();\r\n}\r\n"
}