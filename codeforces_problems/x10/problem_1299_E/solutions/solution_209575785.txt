{
    "id": 209575785,
    "contestId": 1299,
    "creationTimeSeconds": 1686666570,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1299,
        "index": "E",
        "name": "So Mean",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 3400,
        "tags": [
            "interactive",
            "math"
        ]
    },
    "author": {
        "contestId": 1299,
        "members": [
            {
                "handle": "SiRiehn_nx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581257100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 75,
    "timeConsumedMillis": 530,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nmt19937 rnd(chrono::steady_clock().now().time_since_epoch().count() + (size_t)(new char));\r\ntypedef vector<int> vec;\r\nint n, mod = 1, pos[805], now[805], a[805], p[805];\r\nbool query(vec x)\r\n{\r\n    if (x.size() == 1)\r\n        return 1;\r\n    cout << \"? \" << x.size() << \" \";\r\n    for (auto i : x)\r\n        cout << i << \" \";\r\n    cout << endl;\r\n    int y;\r\n    cin >> y;\r\n    return y;\r\n}\r\nvec erase(vec x, int y)\r\n{\r\n    x.erase(find(x.begin(), x.end(), y));\r\n    return x;\r\n}\r\nvoid find(int l, int r)\r\n{\r\n    vec c;\r\n    for (int i = 1; i <= n; i++)\r\n        if (!a[i])\r\n            c.push_back(i);\r\n    for (int i = 1; i <= n; i++)\r\n        if (!a[p[i]] && now[p[i]] == l % mod && query(erase(c, p[i]))) {\r\n            pos[l] = p[i];\r\n            a[p[i]] = l;\r\n            break;\r\n        }\r\n    for (int i = 1; i <= n; i++)\r\n        if (!a[p[i]] && now[p[i]] == r % mod && query(erase(c, p[i]))) {\r\n            pos[r] = p[i];\r\n            a[p[i]] = r;\r\n            break;\r\n        }\r\n}\r\nint main()\r\n{\r\n    ios::sync_with_stdio(0);\r\n    cin >> n;\r\n    if (n == 2) {\r\n        cout << \"! 1 2\" << endl;\r\n        return 0;\r\n    }\r\n    for (int i = 1; i <= n; i++)\r\n        p[i] = i;\r\n    shuffle(p + 1, p + n + 1, rnd);\r\n    find(1, n);\r\n    mod = 2;\r\n    for (int i = 1; i <= n; i++)\r\n        if (!a[i])\r\n            now[i] = query({ pos[1], i });\r\n    for (int i = 2; (i << 1) <= n; i++) {\r\n        find(i, n + 1 - i);\r\n        if (i == (mod << 1)) {\r\n            for (int j = 1; j <= n; j++)\r\n                if (!a[j]) {\r\n                    vec c = { j };\r\n                    for (int k = 1; k <= (mod << 1); k++)\r\n                        if (k % (mod << 1) != now[j])\r\n                            c.push_back(pos[k]);\r\n                    if (query(c))\r\n                        now[j] += mod;\r\n                }\r\n            mod <<= 1;\r\n        }\r\n    }\r\n    if (a[1] > (n >> 1))\r\n        for (int i = 1; i <= n; i++)\r\n            a[i] = n + 1 - a[i];\r\n    cout << \"! \";\r\n    for (int i = 1; i <= n; i++)\r\n        cout << a[i] << \" \";\r\n    cout << endl;\r\n    return 0;\r\n}"
}