{
    "id": 236182639,
    "contestId": 1033,
    "creationTimeSeconds": 1701946014,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1033,
        "index": "G",
        "name": "Chip Game",
        "type": "PROGRAMMING",
        "points": 4000.0,
        "rating": 3500,
        "tags": [
            "games"
        ]
    },
    "author": {
        "contestId": 1033,
        "members": [
            {
                "handle": "juruoA"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1538931900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 63,
    "timeConsumedMillis": 904,
    "memoryConsumedBytes": 3174400,
    "source": "// LUOGU_RID: 138573718\n#include <bits/stdc++.h>\r\nusing std::bitset;\r\nusing std::cout;\r\nusing std::deque;\r\nusing std::endl;\r\nusing std::greater;\r\nusing std::lower_bound;\r\nusing std::make_pair;\r\nusing std::map;\r\nusing std::max;\r\nusing std::min;\r\nusing std::multimap;\r\nusing std::multiset;\r\nusing std::nth_element;\r\nusing std::pair;\r\nusing std::priority_queue;\r\nusing std::queue;\r\nusing std::reverse;\r\nusing std::set;\r\nusing std::sort;\r\nusing std::sqrt;\r\nusing std::stable_sort;\r\nusing std::string;\r\nusing std::swap;\r\nusing std::unique;\r\nusing std::upper_bound;\r\nusing std::vector;\r\ntypedef long long li;\r\ntypedef long double lf;\r\n\r\ninline li read(){\r\n\tli ans = 0, f = 1;\r\n\tchar ch = getchar();\r\n\twhile(ch < '0' || ch > '9'){\r\n\t\tf = (ch == '-') ? -1 : 1;\r\n\t\tch = getchar();\r\n\t}\r\n\twhile(ch <= '9' && ch >= '0'){\r\n\t\tans = ans * 10 + (ch ^ 48);\r\n\t\tch = getchar();\r\n\t}\r\n\treturn ans * f;\r\n} \r\n\r\nli a[200010], n, m;\r\nli v[200010];\r\n\r\nint main(){\r\n    // freopen(\"review.in\", \"r\", stdin);\r\n    // freopen(\"review.out\", \"w\", stdout);\r\n    // freopen(\"wonderful.ans\", \"r\", stdin);\r\n    // freopen(\"www.ww\", \"w\", stdout);\r\n    n = read(), m = read();\r\n    for(li i = 1; i <= n; i++) a[i] = read();\r\n    li ans3 = 0, ans4 = 0, ans1;\r\n    for(li s = 2; s <= 2 * m; s++){\r\n        for(li i = 1; i <= n; i++) v[i] = a[i] % s;\r\n        sort(v + 1, v + 1 + n);\r\n        v[n + 1] = s - 1;\r\n        for(li i = 1; i <= n + 1; i++){\r\n            li l = v[i - 1] + 1, r = min(m, v[i]);\r\n            if((n - i + 1) & 1){\r\n                l = max(l, v[n - 1] / 2 + 1);\r\n                ans3 += max(min(r, s - l) - max(l, s - r) + 1, 0ll);\r\n            } else{\r\n                l = max(l, v[n] / 2 + 1);\r\n                ans4 += max(min(r, s - l) - max(l, s - r) + 1, 0ll);\r\n            }\r\n        }\r\n    }\r\n    ans1 = (m * m - ans3 - ans4) >> 1;\r\n    printf(\"%lld %lld %lld %lld\\n\", ans1, ans1, ans3, ans4);\r\n    return 0;\r\n}"
}