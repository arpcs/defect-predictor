{
    "contestId": 672,
    "index": "A",
    "name": "Summer Camp",
    "type": "PROGRAMMING",
    "points": 500.0,
    "rating": 800,
    "tags": [
        "implementation"
    ],
    "desc": {
        "title": "A. Summer Camp",
        "statement": "<p>Every year, hundreds of people come to summer camps, they learn new algorithms and solve hard problems.</p><p>This is your first year at summer camp, and you are asked to solve the following problem. All integers starting with <span class=\"tex-span\">1</span> are written in one line. The prefix of these line is \"<span class=\"tex-font-style-tt\">123456789101112131415...</span>\". Your task is to print the <span class=\"tex-span\"><i>n</i></span>-th digit of this string (digits are numbered starting with <span class=\"tex-span\">1</span>.</p>",
        "inputSpecification": "<p>The only line of the input contains a single integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u20091000</span>)\u00a0\u2014 the position of the digit you need to print.</p>",
        "outputSpecification": "<p>Print the <span class=\"tex-span\"><i>n</i></span>-th digit of the line.</p>",
        "samples": [
            {
                "input": "3<br/>",
                "output": "3<br/>"
            },
            {
                "input": "11<br/>",
                "output": "0<br/>"
            }
        ],
        "note": "<p>In the first sample the digit at position <span class=\"tex-span\">3</span> is '<span class=\"tex-font-style-tt\">3</span>', as both integers <span class=\"tex-span\">1</span> and <span class=\"tex-span\">2</span> consist on one digit.</p><p>In the second sample, the digit at position <span class=\"tex-span\">11</span> is '<span class=\"tex-font-style-tt\">0</span>', it belongs to the integer <span class=\"tex-span\">10</span>.</p>"
    },
    "suggested_categories": [
        "algorithms",
        "mathematics",
        "number sequences",
        "string manipulation",
        "data structures",
        "indexing",
        "iterative algorithms",
        "pattern matching",
        "combinatorics",
        "looping",
        "pattern recognition",
        "positional notation",
        "numeric patterns",
        "pattern generation",
        "sequence generation",
        "pattern analysis",
        "positional notation",
        "character extraction",
        "iterative processes",
        "problem solving"
    ]
}