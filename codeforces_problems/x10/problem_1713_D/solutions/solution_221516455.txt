{
    "id": 221516455,
    "contestId": 1713,
    "creationTimeSeconds": 1693626638,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1713,
        "index": "D",
        "name": "Tournament Countdown",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "interactive",
            "number theory",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1713,
        "members": [
            {
                "handle": "hunter19019"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1659796500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 33,
    "timeConsumedMillis": 794,
    "memoryConsumedBytes": 7987200,
    "source": "// LUOGU_RID: 123548562\n#include<iostream>\r\n#include<algorithm>\r\n#include<cstring>\r\n#include<cmath>\r\n#include<vector>\r\n#include<cstring>\r\n#include<queue>\r\n#include<map>\r\n#include<unordered_map>\r\n#include<set>\r\n#include<stack>\r\n#define x first\r\n#define y second\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef unsigned long long ull;\r\nconst int N = 1e+6+10,p=998244353;\r\ntypedef pair<int,int> PII;\r\n//vector<char>g[N];\r\nint n,m,c[N],d[N],cnt;\r\nll read()\r\n{\r\n    ll x=0,f=1;\r\n    char c=getchar();\r\n    while(c<'0'||c>'9'){if(c=='-') f=-1;c=getchar();}\r\n    while(c>='0'&&c<='9') x=x*10+c-'0',c=getchar();\r\n    return x*f;\r\n}\r\nint ask(int a, int b)\r\n{\r\n    printf(\"? %d %d\\n\",a,b);\r\n    fflush(stdout);\r\n    return read();\r\n}\r\nvoid print(int x)\r\n{\r\n    printf(\"! %d\\n\",x);\r\n    fflush(stdout);\r\n}\r\nint main()\r\n{\r\n    int q,t,a,b;\r\n    t = read();\r\n    while (t--)\r\n    {\r\n        n = read();\r\n        cnt = 1 << n;\r\n        for(int i = 1; i <= cnt; i++)\r\n            c[i] = i;\r\n        if(cnt == 2)\r\n        {\r\n            q = ask(1,2);\r\n            print(q);\r\n            continue;\r\n        }\r\n        while (cnt > 2)\r\n        {\r\n            int tot = 0;\r\n            for(int i = 1; i <= cnt; i += 4)\r\n            {\r\n                q = ask(c[i],c[i+3]);\r\n                if(!q)\r\n                {\r\n                    if(ask(c[i+1],c[i+2])==1) d[++tot] = c[i+1];\r\n                    else d[++tot] = c[i+2];\r\n                }\r\n                else if(q == 1)\r\n                {\r\n                    if(ask(c[i],c[i+2])==1)d[++tot] = c[i];\r\n                    else d[++tot] = c[i+2];\r\n                }\r\n                else\r\n                {\r\n                    if(ask(c[i+1],c[i+3]) == 1) d[++tot] = c[i+1];\r\n                    else d[++tot] = c[i+3];\r\n                }\r\n            }\r\n            cnt = tot;\r\n            for(int i = 1; i <= cnt;i++) c[i] = d[i];\r\n        }\r\n        if(cnt == 1)\r\n        {\r\n            print(c[1]);\r\n            //printf(\"! %d\\n\",c[1]);\r\n        }\r\n        else\r\n        {\r\n            if(ask(c[1],c[2]) == 1)print(c[1]);\r\n            else print(c[2]);\r\n        }\r\n\r\n    }\r\n    return 0;\r\n}"
}