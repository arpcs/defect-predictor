{
    "id": 228990493,
    "contestId": 1713,
    "creationTimeSeconds": 1697840667,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1713,
        "index": "D",
        "name": "Tournament Countdown",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "greedy",
            "interactive",
            "number theory",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1713,
        "members": [
            {
                "handle": "bkifhr6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1659796500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 33,
    "timeConsumedMillis": 764,
    "memoryConsumedBytes": 1126400,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n#define rep(i , st , ed) for(int i = st; i < ed; i++)\n#define f first\n#define s second\nint query(int i, int j) {\n    cout << \"? \" << i << \" \" << j << '\\n';\n    cout.flush();\n    int x; cin >> x;\n    return x;\n}\nint main(){\n    ios::sync_with_stdio(0); cin.tie(NULL); cout.tie(0);\n    // #ifndef ONLINE_JUDGE\n    // freopen(\"in.txt\", \"r\", stdin);\n    // freopen(\"out.txt\", \"w\", stdout);\n    // freopen(\"error.txt\", \"w\", stderr);\n    // #endif \n    int t; cin >> t;\n    while(t--){\n        int n; cin >> n;\n        vector<int> player(1 << n);\n        iota(player.begin() , player.end() , 1);\n        while(player.size() >= 4){\n            vector<int> tmp;\n            for(int i = 0; i < (int) player.size(); i += 4){\n                int result = query(player[i] , player[i + 2]);\n                int x , y;\n                if(result == 1) x = player[i] , y = player[i + 3];\n                else if(result == 2) x = player[i + 1] , y = player[i + 2];\n                else if(result == 0) x = player[i + 1] , y = player[i + 3];\n                result = query(x , y);\n                assert(result != 0);\n                if(result == 1) tmp.emplace_back(x);\n                else tmp.emplace_back(y);\n            }\n            swap(tmp , player);\n        }\n        if(player.size() == 2){\n            int result = query(player[0] , player[1]);\n            if(result == 2) player[0] = player[1];            \n        }\n        cout << \"! \" << player[0] << '\\n';\n        cout.flush();\n    }\n}\n \t  \t\t \t \t \t     \t\t  \t\t \t\t\t   \t"
}