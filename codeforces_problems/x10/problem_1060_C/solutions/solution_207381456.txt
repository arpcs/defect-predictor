{
    "id": 207381456,
    "contestId": 1060,
    "creationTimeSeconds": 1685118432,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1060,
        "index": "C",
        "name": "Maximum Subrectangle",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "implementation",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1060,
        "members": [
            {
                "handle": "sakil_ju"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1538636700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 102400,
    "source": "#include <ext/pb_ds/assoc_container.hpp> // Common file\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <functional> // for less\r\n#include <iostream>\r\n#include<bits/stdc++.h>\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n#define endl \"\\n\"\r\n#define deb(n) cout<<\"Hello \"<<n<<endl;\r\n#define ll  long long\r\n#define F first\r\n#define S second\r\n#define MAXN 200005;\r\nll mod = 1e9 + 7;\r\ntypedef tree<ll, null_type, less<ll>, rb_tree_tag,\r\n        tree_order_statistics_node_update>\r\n        ordered_set;\r\n\r\n\r\nvoid solve(int t)\r\n{\r\n   ll n,m;\r\n   cin>>n>>m;\r\n   ll a[n],b[m],pre_sum1[n],pre_sum2[m];\r\n   for(ll i = 0;i < n;i++) cin>>a[i];\r\n   for(ll i = 0;i < m;i++) cin>>b[i];\r\n\r\n   ll x;\r\n   cin>>x;\r\n\r\n   pre_sum1[0] = a[0];\r\n\r\n   for(ll i = 1;i < n;i++)\r\n   {\r\n       pre_sum1[i] = pre_sum1[i-1] + a[i];\r\n   }\r\n\r\n   pre_sum2[0] = b[0];\r\n\r\n   for(ll i = 1;i < m;i++)\r\n   {\r\n       pre_sum2[i] = pre_sum2[i-1] + b[i];\r\n   }\r\n\r\n   ll x1 = -1,x2 = -1,y1 = -1,y2 = -1,mx_len = 0,mx_len2 = 0,mn_sum = LLONG_MAX;\r\n\r\n   for(ll i = 0;i < n;i++)\r\n   {\r\n       for(ll j = i;j < n;j++)\r\n       {\r\n           ll cur_sum = pre_sum1[j];\r\n           if(i)\r\n            cur_sum -= pre_sum1[i-1];\r\n\r\n           if(cur_sum <= x && (j - i + 1) >= mx_len)\r\n           {\r\n              if((j-i+1) == mx_len)\r\n               {\r\n                   if(cur_sum < mn_sum)\r\n                    mn_sum = cur_sum;\r\n                   continue;\r\n               }\r\n              mn_sum = cur_sum;\r\n              mx_len = j - i + 1;\r\n              x1 = i,x2 = j;\r\n           }\r\n       }\r\n   }\r\n\r\n   mn_sum = LLONG_MAX;\r\n\r\n   for(ll i = 0;i < m;i++)\r\n   {\r\n       for(ll j = i;j < m;j++)\r\n       {\r\n           ll cur_sum = pre_sum2[j];\r\n           if(i)\r\n            cur_sum -= pre_sum2[i-1];\r\n\r\n           if(cur_sum <= x && (j - i + 1) >= mx_len2 )\r\n           {\r\n               if((j-i+1) == mx_len2)\r\n               {\r\n                   if(cur_sum < mn_sum)\r\n                    mn_sum = cur_sum;\r\n                   continue;\r\n               }\r\n               mn_sum = cur_sum;\r\n               mx_len2 = j - i + 1;\r\n               y1 = i,y2 = j;\r\n           }\r\n\r\n       }\r\n   }\r\n//   cout<<x1<<\" \"<<x2<<\" \"<<y1<<\" \"<<y2<<endl;\r\n   if(x1 == -1  || y1 == -1)\r\n   {\r\n       cout<<0<<endl;\r\n   }\r\n   else\r\n   {\r\n\r\n           ll ans = 1;\r\n           for(ll i = x1;i <= x2;i++)\r\n           {\r\n               for(ll j = y1;j <= y2;j++)\r\n               {\r\n                   ll cur_a = pre_sum1[i];\r\n                   ll cur_b = pre_sum2[j];\r\n                   if(x1)\r\n                    cur_a -= pre_sum1[x1-1];\r\n                   if(y1)\r\n                    cur_b -= pre_sum2[y1-1];\r\n\r\n                  if((cur_a * cur_b) <= x)\r\n                  {\r\n                      ll len = (i - x1 + 1) * (j - y1 + 1);\r\n                      ans = max(ans,len);\r\n                  }\r\n               }\r\n           }\r\n           cout<<ans<<endl;\r\n\r\n   }\r\n\r\n}\r\n\r\nmain()\r\n{\r\n    //freopen(\"traffic.in\", \"r\", stdin);\r\n    //freopen(\"traffic.out\", \"w\", stdout);\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int t = 1;\r\n\r\n//    cin>>t;\r\n\r\n    for(int tc = 1; tc <= t; tc++)\r\n    {\r\n//        cout<<\"Case \"<<tc<<\":\\n\";\r\n        solve(tc);\r\n    }\r\n    return 0;\r\n}\r\n"
}