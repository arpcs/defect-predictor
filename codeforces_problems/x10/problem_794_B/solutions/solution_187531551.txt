{
    "id": 187531551,
    "contestId": 794,
    "creationTimeSeconds": 1672583553,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 794,
        "index": "B",
        "name": "Cutting Carrot",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1200,
        "tags": [
            "geometry",
            "math"
        ]
    },
    "author": {
        "contestId": 794,
        "members": [
            {
                "handle": "Maxwell01"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1494668100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 31,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define debug(x) cout << \"[\" << #x << \" = \" << x << \"] \"\r\n#define ff first\r\n#define ss second\r\n\r\nusing namespace std;\r\nusing ll = long long;\r\nusing ld = long double;\r\nusing pii = pair<int,int>;\r\nusing vi = vector<int>;\r\n\r\nusing tii = tuple<int,int,int>;\r\n// auto [a,b,c] = ...\r\n// .insert({a,b,c})\r\n\r\nconst int oo = (int)1e9; //INF to INT\r\nconst ll OO = 0x3f3f3f3f3f3f3f3fLL; //INF to LL\r\n\r\n/*wa? coloca long long que passa;\r\ntestar casos, n = 0? n = 1? todos os numeros iguais?\r\nUma resposta \u00f3tima pode ter tamanho 2?\r\nRELER O ENUNCIADO!*/\r\n\r\nld bhaskara(ld a, ld b, ld c){\r\n    ld delta = b * b - 4 * a * c;\r\n    ld r1 = (-b - sqrt(delta)) / (2*a);\r\n    ld r2 = (-b + sqrt(delta)) / (2*a);\r\n    //como escolher a raiz? menor? maior? isso troca o sinal\r\n    //return max(r1,r2);\r\n    return min(r1,r2);\r\n}\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n\r\n    int n; \r\n    ld h, B = 1.0, goal;\r\n    cin >> n >> h;\r\n    vector<ld> ans(n);\r\n    ld tang = 2*h;\r\n    goal = ( (B * h) / 2 ) / n;\r\n    cout.precision(20);\r\n    for(int i = 1; i < n; i++){\r\n        ans[i] = bhaskara(-1 , B * tang, -goal * tang);\r\n        B = B - 2 * ans[i] / tang;\r\n        ans[i] += ans[i-1];   \r\n    }\r\n    reverse(ans.begin(), ans.end());\r\n    for(int i = 0; i < n-1; i++){\r\n        cout << abs(h-ans[i]) << \" \"; //n sei escolher a raiz certa\r\n    }\r\n    cout << endl;\r\n}\r\n"
}