{
    "id": 212932615,
    "contestId": 559,
    "creationTimeSeconds": 1688888871,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 559,
        "index": "A",
        "name": "Gerald's Hexagon",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1600,
        "tags": [
            "brute force",
            "geometry",
            "math"
        ]
    },
    "author": {
        "contestId": 559,
        "members": [
            {
                "handle": "tomas_fang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1437573600
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#pragma GCC optimize(\"O3\")\n#pragma GCC target(\"avx2\")\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef long double ld;\ntypedef vector<int> vi;\ntypedef vector<double> vd;\ntypedef vector<ll> vl;\ntypedef vector<vi> vvi;\ntypedef vector<vl> vvl;\ntypedef pair<int, int> pii;\ntypedef pair<double, double> pdd;\ntypedef pair<ll, ll> pll;\ntypedef vector<pii> vii;\ntypedef vector<pll> vll;\ntypedef vector<pdd> vdd;\n#define PB push_back\n#define F first\n#define S second\n#define MP make_pair\n#define endl '\\n'\n#define all(a) (a).begin(), (a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define sz(a) a.length()\nconst double PI = acos(-1);\nconst double eps = 1e-9;\nconst int inf = 2000000000;\nconst ll infLL = 9000000000000000000;\n#define MOD 1000000007\n#define mem(a, b) memset(a, b, sizeof(a))\n#define gcd(a, b) __gcd(a, b)\n#define lcm(a, b) (a * (b / gcd(a, b)))\n#define sqr(a) ((a) * (a))\n#define optimize()                                                             \\\n  ios_base::sync_with_stdio(0);                                                \\\n  cin.tie(0);                                                                  \\\n  cout.tie(0);\n#define fraction()                                                             \\\n  cout.unsetf(ios::floatfield);                                                \\\n  cout.precision(10);                                                          \\\n  cout.setf(ios::fixed, ios::floatfield);\ntypedef vector<int>::iterator vit;\ntypedef set<int>::iterator sit;\ninline bool checkBit(ll n, int i) { return n & (1LL << i); }\ninline ll setBit(ll n, int i) {\n  return n | (1LL << i);\n  ;\n}\ninline ll resetBit(ll n, int i) { return n & (~(1LL << i)); }\nint dx4[] = {0, 0, +1, -1};\nint dy4[] = {+1, -1, 0, 0};\nint dx8[] = {+1, 0, -1, 0, +1, +1, -1, -1};\nint dy8[] = {0, +1, 0, -1, +1, -1, +1, -1};\ninline bool EQ(double a, double b) { return fabs(a - b) < 1e-9; }\ninline bool isLeapYear(ll year) {\n  return (year % 400 == 0) || (year % 4 == 0 && year % 100 != 0);\n}\ninline bool isIntege(double num) { return (num == (int)num); }\ninline bool collinear(int x1, int y1, int x2, int y2, int x3, int y3) {\n  return (y1 - y2) * (x1 - x3) == (y1 - y3) * (x1 - x2);\n}\ninline double coDist(double x1, double y1, double x2, double y2) {\n  return sqrt(((x1 - x2) * (x1 - x2)) + ((y1 - y2) * (y1 - y2)));\n}\ninline ld degreetoradian(ld x) {\n  ld val = PI * x;\n  val /= (180.0);\n  return val;\n}\ninline double TriangleAreaWithSide(double a, double b, double c) {\n  double s = (a + b + c) / 2;\n  double area = sqrt(s * (s - a) * (s - b) * (s - c));\n  return area;\n}\ninline void normal(ll &a) {\n  a %= MOD;\n  (a < 0) && (a += MOD);\n}\ninline ll modMul(ll a, ll b) {\n  a %= MOD, b %= MOD;\n  normal(a), normal(b);\n  return (a * b) % MOD;\n}\ninline ll modAdd(ll a, ll b) {\n  a %= MOD, b %= MOD;\n  normal(a), normal(b);\n  return (a + b) % MOD;\n}\ninline ll modSub(ll a, ll b) {\n  a %= MOD, b %= MOD;\n  normal(a), normal(b);\n  a -= b;\n  normal(a);\n  return a;\n}\ninline ll modPow(ll b, ll p) {\n  ll r = 1;\n  while (p) {\n    if (p & 1)\n      r = modMul(r, b);\n    b = modMul(b, b);\n    p >>= 1;\n  }\n  return r;\n}\ninline ll modInverse(ll a) { return modPow(a, MOD - 2); }\ninline ll modDiv(ll a, ll b) { return modMul(a, modInverse(b)); }\ninline bool equalTo(double a, double b) {\n  if (fabs(a - b) <= eps)\n    return true;\n  else\n    return false;\n}\ninline bool notEqual(double a, double b) {\n  if (fabs(a - b) > eps)\n    return true;\n  else\n    return false;\n}\ninline bool lessThan(double a, double b) {\n  if (a + eps < b)\n    return true;\n  else\n    return false;\n}\ninline bool lessThanEqual(double a, double b) {\n  if (a < b + eps)\n    return true;\n  else\n    return false;\n}\ninline bool greaterThan(double a, double b) {\n  if (a > b + eps)\n    return true;\n  else\n    return false;\n}\ninline bool greaterThanEqual(double a, double b) {\n  if (a + eps > b)\n    return true;\n  else\n    return false;\n}\nstruct edge {\n  int p, q, w;\n};\nbool cmp(edge &a, edge &b) { return a.w < b.w; }\nstring to_s(int t) {\n  stringstream ss;\n  ss << t;\n  return ss.str();\n}\ntemplate <typename F, typename S>\nostream &operator<<(ostream &os, const pair<F, S> &p) {\n  return os << \"(\" << p.first << \", \" << p.second << \")\";\n}\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T> &v) {\n  os << \"{\";\n  for (auto it = v.begin(); it != v.end(); ++it) {\n    if (it != v.begin())\n      os << \", \";\n    os << *it;\n  }\n  return os << \"}\";\n}\ntemplate <typename T> ostream &operator<<(ostream &os, const set<T> &v) {\n  os << \"[\";\n  for (auto it = v.begin(); it != v.end(); ++it) {\n    if (it != v.begin())\n      os << \", \";\n    os << *it;\n  }\n  return os << \"]\";\n}\ntemplate <typename T> ostream &operator<<(ostream &os, const multiset<T> &v) {\n  os << \"[\";\n  for (auto it = v.begin(); it != v.end(); ++it) {\n    if (it != v.begin())\n      os << \", \";\n    os << *it;\n  }\n  return os << \"]\";\n}\ntemplate <typename F, typename S>\nostream &operator<<(ostream &os, const map<F, S> &v) {\n  os << \"[\";\n  for (auto it = v.begin(); it != v.end(); ++it) {\n    if (it != v.begin())\n      os << \", \";\n    os << it->first << \" = \" << it->second;\n  }\n  return os << \"]\";\n}\n#define dbg(args...)                                                           \\\n  do {                                                                         \\\n    cerr << #args << \" : \";                                                    \\\n    faltu(args);                                                               \\\n  } while (0)\nclock_t tStart = clock();\n#define timeStamp                                                              \\\n  dbg(\"Execution Time: \", (double)(clock() - tStart) / CLOCKS_PER_SEC)\nvoid faltu() { cerr << endl; }\ntemplate <typename T> void faltu(T a[], int n) {\n  for (int i = 0; i < n; ++i)\n    cerr << a[i] << ' ';\n  cerr << endl;\n}\ntemplate <typename T, typename... hello>\nvoid faltu(T arg, const hello &... rest) {\n  cerr << arg << ' ';\n  faltu(rest...);\n}\nint main() {\n  optimize();\n  double a[10];\n  for (int i = 0; i < 6; i++) {\n    cin >> a[i];\n  }\n  double ang = (PI * 120.0) / 180.0;\n  double A1 = ((a[0] * a[1]) / 2) * sin(ang);\n  double A2 = ((a[2] * a[3]) / 2) * sin(ang);\n  double A3 = ((a[4] * a[5]) / 2) * sin(ang);\n  double x1 = sqrt(sqr(a[0]) + sqr(a[1]) - (2.0 * a[0] * a[1] * cos(ang)));\n  double x2 = sqrt(sqr(a[3]) + sqr(a[2]) - (2.0 * a[3] * a[2] * cos(ang)));\n  double x3 = sqrt(sqr(a[4]) + sqr(a[5]) - (2.0 * a[4] * a[5] * cos(ang)));\n  double A4 = TriangleAreaWithSide(x1, x2, x3);\n  double ar = TriangleAreaWithSide(1, 1, 1);\n  int tottri = (A1 + A2 + A3 + A4) / ar;\n  cout << tottri << endl;\n}\n\n// OZMvMlWscbceprddfkzTRMjJQSWbjciyEPlNcCrBNZqaYCSdiuNBeAYILNVKGOvGzXhSApNqbivvojwjkQSsmHFapjvCyZtUlxdFnUqWotyOFYJvOXqfbuMatxBbhaUe"
}