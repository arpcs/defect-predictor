{
    "id": 146324649,
    "contestId": 809,
    "creationTimeSeconds": 1644828023,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 809,
        "index": "A",
        "name": "Do you want a date?",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1500,
        "tags": [
            "implementation",
            "math",
            "sortings"
        ]
    },
    "author": {
        "contestId": 809,
        "members": [
            {
                "handle": "dhruvil8804"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1495303500
    },
    "programmingLanguage": "Java 11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 69,
    "timeConsumedMillis": 811,
    "memoryConsumedBytes": 6758400,
    "source": "/*\r\n                       _oo0oo_\r\n                      o8888888o\r\n                      88\" . \"88\r\n                      (| -_- |)\r\n                      0\\  =  /0\r\n                    ___/`---'\\___\r\n                  .' \\\\|     |// '.\r\n                 / \\\\|||  :  |||// \\\r\n                / _||||| -:- |||||- \\\r\n               |   | \\\\\\  -  /// |   |\r\n               | \\_|  ''\\---/''  |_/ |\r\n               \\  .-\\__  '-'  ___/-. /\r\n             ___'. .'  /--.--\\  `. .'___\r\n          .\"\" '<  `.___\\_<|>_/___.' >' \"\".\r\n         | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |\r\n         \\  \\ `_.   \\_ __\\ /__ _/   .-` /  /\r\n     =====`-.____`.___ \\_____/___.-`___.-'=====\r\n                       `=---='\r\n \r\n*/\r\n\r\nimport java.util.*;\r\nimport java.math.*;\r\nimport java.io.*;\r\nimport java.lang.Math.*;\r\n\r\npublic class KickStart2020 {\r\n\t static class FastReader {\r\n\t\tBufferedReader br;\r\n\t\tStringTokenizer st;\r\n\r\n\t\tpublic FastReader() {\r\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\r\n\t\t}\r\n\r\n\t\tString next() {\r\n\t\t\twhile (st == null || !st.hasMoreElements()) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\r\n\t\t\t\t} catch (IOException e) {\r\n\t\t\t\t\te.printStackTrace();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn st.nextToken();\r\n\t\t}\r\n\r\n\t\tint nextInt() {\r\n\t\t\treturn Integer.parseInt(next());\r\n\t\t}\r\n\r\n\t\tlong nextLong() {\r\n\t\t\treturn Long.parseLong(next());\r\n\t\t}\r\n\r\n\t\tdouble nextDouble() {\r\n\t\t\treturn Double.parseDouble(next());\r\n\t\t}\r\n\r\n\t\tfloat nextFloat() {\r\n\t\t\treturn Float.parseFloat(next());\r\n\t\t}\r\n\r\n\t\tString nextLine() {\r\n\t\t\tString str = \"\";\r\n\t\t\ttry {\r\n\t\t\t\tstr = br.readLine();\r\n\t\t\t} catch (IOException e) {\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t}\r\n\t\t\treturn str;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic long gcd(long a, long b) {\r\n\t\tif (b == 0)\r\n\t\t\treturn a;\r\n\t\treturn gcd(b, a % b);\r\n\r\n\t}\r\n\tstatic long lcm(long a, long b) {\r\n\t\treturn a / gcd(a, b) * b;\r\n\t}\r\n\r\n\tpublic static class Pair implements Comparable<Pair> {\r\n\t\tpublic char index;\r\n\t\tpublic int value;\r\n\r\n\t\tpublic Pair(char index, int value) {\r\n\t\t\tthis.index = index;\r\n\t\t\tthis.value = value;\r\n\t\t}\r\n\r\n\t\t@Override\r\n\t\tpublic int compareTo(Pair other) {\r\n\t\t\t// multiplied to -1 as the author need descending sort order\r\n\t\t\tif(other.index < this.index) return -1;\r\n\t\t\tif(other.index > this.index) return 1;\r\n\t\t\tif(other.value < this.value) return -1;\r\n\t\t\tif(other.value > this.value) return 1;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t@Override\r\n\t\tpublic String toString() {\r\n\t\t\treturn this.index + \" \" + this.value;\r\n\t\t}\r\n\t}\r\n\tstatic boolean isPrime(long d) {\r\n\t\tif(d == 0) return true;\r\n\t\tif (d == 1)\r\n\t\t\treturn false;\r\n\t\tfor (int i = 2; i <= (long) Math.sqrt(d); i++) {\r\n\t\t\tif (d % i == 0)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tstatic String decimalTob(int n, int k , String count) {\r\n          int x = n % k;\r\n          int y = n / k;\r\n          count += x;\r\n          if(y > 0) {\r\n             count = decimalTob(y, k, count);\r\n          }\r\n          return count;\r\n\t}\r\n\tstatic long powermod(long x, long y, long mod) {\r\n\t\tif(y == 0) return 1;\r\n\t\tlong value = powermod(x, y / 2, mod);\r\n\t\tif(y % 2 == 0) return (value * value) % mod;\r\n\t\treturn (value * (value * x) % mod) % mod;\r\n\t}\r\n\tstatic long power(long x, long y) {\r\n\t\tif(y == 0) return 1;\r\n\t\tlong value = power(x, y / 2);\r\n\t\tif(y % 2 == 0) return (value * value);\r\n\t\treturn value * value * x;\r\n\t    }\r\n     static int bS(int l, int r, int find, int arr[]) {\r\n             if(r < l) return l;\r\n                int mid = (l + r) / 2;\r\n             if(arr[mid] >= find) return bS(l, mid - 1, find, arr);\r\n             return bS(mid + 1, r, find, arr);\r\n        }\r\n   \tpublic static void main(String[] args) throws Exception {\r\n\t\tFastReader sc = new FastReader();\r\n\t\tPrintWriter out = new PrintWriter(System.out);\r\n\t\tint t = 1;\r\n\t\touterloop:\r\n\t\t\twhile(t-- > 0) {\r\n           int n = sc.nextInt();\r\n           int mod = 1000000000 + 7;\r\n          Integer arr[] = new Integer[n];\r\n          for(int i = 0; i < n; i++) arr[i] = sc.nextInt();\r\n          Arrays.sort(arr, Collections.reverseOrder());\r\n          long ans = 0;\r\n          for(int i = 0; i < n; i++) {\r\n              long temp = (powermod(2, n - 1 - i, mod) - powermod(2, i, mod) + mod) % mod;\r\n              temp *= arr[i];\r\n              ans += temp;\r\n              ans %= mod;\r\n          }\r\n          out.println(ans);\r\n             }\r\n\t\tout.close();\r\n\t}\r\n}"
}