{
    "id": 225619262,
    "contestId": 83,
    "creationTimeSeconds": 1695890485,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 83,
        "index": "E",
        "name": "Two Subsequences",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2800,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    "author": {
        "contestId": 83,
        "members": [
            {
                "handle": "Jacksonrr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1305299400
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 69222400,
    "source": "#include<bits/stdc++.h>\r\n#define inf 0x7fffffff\r\n#define bigMax 10000\r\n#define ll long long\r\n#define pb push_back\r\n#define dir4 dx[5]={-1,0,1,0},dy[5]={0,1,0,-1}\r\n#define rep(i,l,x) for(int i=l;i<x;i++)\r\n#define repn(i,l,x) for(int i=l;i<=x;i++)\r\nusing namespace std;\r\nchar gc(){char _ch=getchar();if(_ch=='\\n'||_ch==' ') _ch=getchar();return _ch;}\r\n\tinline int read(){int _res=0,_ch,_flag=0;if((_ch=getchar())=='\\n') _ch=getchar();if(_ch=='-') _flag=1;else if(_ch>='0'&&_ch<='9') _res=_ch-'0';while((_ch=getchar())>='0'&&_ch<='9')_res=_res*10+_ch-'0';_flag?-_res:_res;}\r\nnamespace calcu{const ll mo=1e9+7;struct martrix{ll h,w,v[105][105]={};inline ll read(ll _h,ll _w){h=_h,w=_w;for(ll i=1;i<=_h;i++){for(ll j=1;j<=_w;j++){scanf(\"%lld\",&v[i][j]);}}}inline void print(ll _h,ll _w){for(ll i=1;i<=_h;i++){for(ll j=1;j<=_w;j++){printf(\"%lld \",v[i][j]);}putchar('\\n');}}};martrix operator*(martrix _fir, martrix _sec){martrix _res;_res.h=_fir.h,_res.w=_sec.w;if(_fir.w!=_sec.h) return _res;repn(i,1,_res.h){repn(j,1,_res.w){repn(k,1,_fir.w){_res.v[i][j]=(_res.v[i][j]+_fir.v[i][k]*_sec.v[k][j])%mo;}}}return _res;}template<typename T>T quickpow(T _a,ll _b){T _sum=_a;_b--;while(_b){if(_b&1) _sum=(_sum*_a);_a=(_a*_a);_b>>=1;}return _sum;}}inline void write(int _x){if(_x<0){putchar('-');_x=-_x;}if(_x>9) write(_x/10);putchar(_x%10+'0');}\r\nint gcd(int _fnum,int _snum){if(_snum!=0) return gcd(_snum,_fnum%_snum);else return _fnum;}\r\nll Lgcd(ll _fnum,ll _snum){if(_snum!=0) return Lgcd(_snum,_fnum%_snum);else return _fnum;}\r\nint lcm(int _fnum,int _snum){return _fnum*_snum/gcd(_fnum,_snum);}\r\nll Llcm(ll _fnum,ll _snum){return _fnum*_snum/Lgcd(_fnum,_snum);}\r\nfloat getDis(float _sx, float _sy, float _ex, float _ey){return sqrt((_sx-_ex)*(_sx-_ex)+(_sy-_ey)*(_sy-_ey));}\r\nbool checkOverlap(int sx1,int sy1,int ex1,int ey1,int sx2,int sy2,int ex2,int ey2){if(!(sx1<=ex1))swap(sx1,ex1);if(!(sx2<=ex2)) swap(sx2,ex2);if(!(sy1<=ey1)) swap(sy1,ey1);if(!(sy2<=ey2)) swap(sy2,ey2);return !((sx1>ex2)||(ex1<sx2)||(sy1>ey2)||(ey1<sy2));}\r\nll quickpow(ll _a,ll _b,ll _modu){\tll _sum=1;while(_b){if(_b&1) _sum=(_sum*_a)%_modu;_a=(_a*_a)%_modu;_b>>=1;}return _sum;}\r\nint cf_t;\r\ntypedef pair<int,int> P;\r\n\r\nconst int maxn = 2e5+5;\r\nint n,trie[maxn*20][2]={},dp[maxn*20]={},tot=1,tag[maxn*20]={},len,xcost,nw;\r\nstring s[maxn]={};\r\nint g(int a,int b){\r\n\tbool good;\r\n\tfor(int i=0;i<len;i++){\r\n\t\tgood = true;\r\n\t\tfor(int j=0;i+j<len;j++){\r\n\t\t\tif(s[a][j]!=s[b][i+j]){\r\n\t\t\t\tgood=false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(good){\r\n\t\t//\tcout<<\"g(\"<<a<<\",\"<<b<<\")=\"<<i<<endl; \r\n\t\t\treturn i;\r\n\t\t}\r\n\t}\r\n\t//cout<<\"g(\"<<a<<\",\"<<b<<\")=\"<<len<<endl;\r\n\treturn len; \r\n}\r\nint insert(string &str,int p,int pos){\r\n\tif(pos == len) return dp[p] = nw;\r\n\tint ch = str[pos] - '0';\r\n\tif( trie[p][ch] == 0 ) trie[p][ch] = ++tot;\r\n\t\ttag[trie[p][0]]+=tag[p];\r\n\t\ttag[trie[p][1]]+=tag[p];\r\n\t\tdp[p]+=tag[p];\r\n\t\ttag[p]=0;\r\n\treturn dp[p] = min( dp[p], insert( str , trie[p][ch] , pos+1) );\r\n}\r\nint search(string &str, int p , int pos){\r\n\t\r\n\tif(pos == len){\r\n\t\ttag[trie[p][0]]+=tag[p];\r\n\t\ttag[trie[p][1]]+=tag[p];\r\n\t\tdp[p]+=tag[p];\r\n\t\ttag[p]=0;\r\n\t\t//cout<<\"Accepted \"<<dp[p]<<endl;\r\n\t\treturn dp[p];\r\n\t}\r\n\t\r\n\tint ch = str[pos] - '0';\r\n\tif( trie[p][ch] == 0 ){\r\n\t\t//cout<<\"Failed\"<<endl;\r\n\t\treturn inf/2;\r\n\t}\r\n\t\r\n\ttag[trie[p][0]]+=tag[p];\r\n\ttag[trie[p][1]]+=tag[p];\r\n\tdp[p]+=tag[p];\r\n\ttag[p]=0;\r\n\t\r\n\treturn search( str , trie[p][ch] , pos + 1 );\r\n}\r\nvoid solve(){\r\n\tcin>>n;\r\n\tmemset( dp , 63 , sizeof(dp) );\r\n\trepn(i,1,n){\r\n\t\tcin>>s[i];\r\n\t\treverse(s[i].begin(),s[i].end()); \r\n\t}\r\n\t/*\r\n\t\tdp S \u8868\u793a \u8003\u8651\u5230\u7b2ci\u4e2a\u5b57\u7b26\u4e32\u4e4b\u524d\uff0c\u73b0\u6709\u4e24\u4e2a\u538b\u7f29\u5b57\u7b26\u4e32\r\n\t\t\t\t\t\u5176\u4e2d\u4e00\u4e2a\u4ee5si-1\u7ed3\u5c3e  \u53e6\u4e00\u4e2a\u4ee5S\u7ed3\u5c3e \r\n\t\t\t\t\t\r\n\t\t\u6bcf\u6b21\u8003\u8651\u52a0\u5165\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32si\r\n\t\tdp S(1...si-2) += cost(si-1,si)\r\n\t\tnew dp S(si-1) = min{dp S(1,...si-2) + cost(S(1,...,si-2),si)} \r\n\t*/\r\n\tlen = (int) s[1].length();\r\n\tint sum = len; dp[1] = len;\r\n\tfor(int i=2;i<=n;i++){\r\n\t\t//new j \u8868\u793a \u524d j  \u5339\u914d \u5373  (...len-j, len-j+1, ... len-1) \r\n\t\tnw = inf/2;\r\n\t\tfor(int j=0;j<=len;j++){\r\n\t\t\t//cout<<\"Try: i=\"<<i<<\" j=\"<<j<<endl; \r\n\t\t\txcost = len - j;\r\n\t\t\tnw = min( nw , xcost + search(s[i],1,len-j));\r\n\t\t}\r\n\t\txcost = g( i - 1 , i );\r\n\t\ttag[1] += xcost; \r\n\t\t// dp S(si-1) \u4e0d\u5e94\u5f53\u88ab cost(si-1,si) \u6253\u4e0a\u6807\u8bb0,\u5e76\u4e14\u5728search nw \u7684\u65f6\u5019\u5df2\u7ecf\u5904\u7406\u8fc7\u6240\u6709\u7684tag \r\n\t\tassert(nw<=200000);\r\n\t\tinsert( s[i - 1] , 1 , 0 );\r\n\t}\r\n\tcout << dp[1] << endl;\r\n\r\n}\r\nint main(){\r\n/*\t //Online_Judge\r\n\t   freopen(\"input.txt\",\"r\",stdin);\r\n\t   freopen(\"output.txt\",\"w\",stdout);\r\n*/\r\n\r\n\tcf_t=1;//scanf(\"%d\",&cf_t);\r\n\twhile(cf_t--) solve();\r\n\r\n\treturn 0;\r\n}\r\n"
}