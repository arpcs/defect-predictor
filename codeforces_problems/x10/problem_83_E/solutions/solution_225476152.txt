{
    "id": 225476152,
    "contestId": 83,
    "creationTimeSeconds": 1695802476,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 83,
        "index": "E",
        "name": "Two Subsequences",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2800,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    "author": {
        "contestId": 83,
        "members": [
            {
                "handle": "kyly"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1305299400
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 1496,
    "memoryConsumedBytes": 22323200,
    "source": "// LUOGU_RID: 126320220\n#include <bits/stdc++.h>\r\n#define RI register int\r\ntypedef long long LL;\r\n\r\n#define FILEIO(name) freopen(name\".in\", \"r\", stdin), freopen(name\".out\", \"w\", stdout);\r\n\r\nusing namespace std;\r\n\r\nchar s[200005][22];\r\nint Mn[1 << 22];//\u9530\uff08\u96fe\uff09\r\nint len;\r\n\r\ninline void Reverse(char *s, int l) {\r\n  for (RI i = 1, j = l; i < j; ++i, --j)\r\n    swap(s[i], s[j]);\r\n}\r\n\r\nint GetMin(char *s, int l) {\r\n  int now = 1;\r\n  for (RI i = 1; i <= l; ++i)\r\n    if (s[i] == '0') now <<= 1;\r\n    else now <<= 1, now |= 1;\r\n  return Mn[now];\r\n}\r\nint Query(char *s) {\r\n  int re = 0x3f3f3f3f;\r\n  for (RI i = 0; i <= len; ++i) {\r\n    Reverse(s, i);\r\n    re = min(re, GetMin(s, i) + len - i);\r\n    Reverse(s, i);\r\n  }\r\n  return re;\r\n}\r\nint Solve(char *s, char *t) {\r\n  int re = 0;\r\n  for (RI i = len; i; --i) {\r\n    int flag = 1;\r\n    for (RI j = len; flag && j > len - i; --j)\r\n      if (s[j] != t[i - (len - j)])\r\n        flag = 0;\r\n    if (flag) { re = i; break; }\r\n  }\r\n  return len - re;\r\n}\r\nvoid Insert(char *s, int val) {\r\n  int now = 1;\r\n  for (RI i = 1; i <= len; ++i) {\r\n    Mn[now] = min(Mn[now], val);\r\n    if (s[i] == '0') now <<= 1;\r\n    else now <<= 1, now |= 1;\r\n  }\r\n  Mn[now] = min(Mn[now], val);\r\n}\r\n\r\nint main() {\r\n  \r\n#ifdef LOCAL\r\n  FILEIO(\"a\");\r\n#endif\r\n\r\n  int n; cin >> n;\r\n  for (RI i = 1; i <= n; ++i)\r\n    cin >> (s[i] + 1);\r\n  len = strlen(s[1] + 1);\r\n  int tag = len;\r\n  memset(Mn, 0x3f, sizeof(Mn));\r\n  Mn[1] = 0;\r\n  for (RI i = 2; i <= n; ++i) {\r\n    int re = Query(s[i]);\r\n    re += tag;\r\n    tag += Solve(s[i - 1], s[i]);\r\n    Reverse(s[i - 1], len);\r\n    Insert(s[i - 1], re - tag);\r\n  }\r\n  int ans = Mn[1];\r\n  printf(\"%d\\n\", ans + tag);\r\n\r\n  return 0;\r\n}"
}