{
    "id": 208243039,
    "contestId": 1496,
    "creationTimeSeconds": 1685760494,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1496,
        "index": "A",
        "name": "Split it!",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 900,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1496,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1615377900
    },
    "programmingLanguage": "Clang++20 Diagnostics",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "// Problem: B - B\n// Contest: Virtual Judge - 22\u7ea7\u8bad\u7ec3\u8d5b\uff085.28\uff09\n// URL: https://vjudge.net/contest/561022#problem/B\n// Memory Limit: 256 MB\n// Time Limit: 1000 ms\n//\n// Powered by CP Editor (https://cpeditor.org)\n\n/*\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u28f6\u28f6\u28f6\u28f6\u28e6\u28c4\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2847\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2880\u28f9\u28ff\u28ff\u28ff\u28ff\u28ff\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u28f4\u28fc\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28f6\u28c4\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f8\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28c6\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28e0\u28f6\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28e6\u28e4\u28c0\u2800\u2800\u2800\u2800\u2800\u2800\u2800\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u281f\u2809\u2819\u283b\u283f\u28bf\u28ff\u28ff\u28ff\u28ff\u28f6\u28e6\u2840\u2800\u2800\u2800\u2800\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f4\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u2801\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2809\u2899\u28fb\u28ff\u28ff\u28ff\u28f7\u2800\u2800\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28a0\u28fe\u28ff\u28ff\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28f4\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2801\u2800\n\u28f7\u28c4\u2800\u2800\u2800\u2800\u2800\u28f4\u28ff\u28ff\u280b\u2801\u2838\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2800\n\u28ff\u28ff\u28f7\u28e6\u2840\u2880\u28fc\u28ff\u28ff\u284f\u2800\u2800\u2800\u28ff\u28ff\u28ff\u28ff\u28ff\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2819\u283f\u28ff\u28ff\u28ff\u281f\u2801\u2800\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28fe\u28ff\u287f\u283b\u2803\u2800\u2800\u2800\u28bb\u28ff\u28ff\u28ff\u28ff\u2808\u28bf\u28ff\u28ff\u28ff\u28ff\u28e7\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28c4\u2800\u2800\u2800\u2800\u2818\u28ff\u28ff\u28ff\u28ff\u2800\u2800\u28bb\u28ff\u28ff\u28ff\u28ff\u2846\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\n\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28e4\u2840\u2800\u2800\u28ff\u28ff\u28ff\u28ff\u2847\u2800\u2800\u28b9\u28ff\u28ff\u28ff\u28ff\u2844\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\n\u283b\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28e6\u28e0\u28ff\u28ff\u28ff\u287f\u2801\u2800\u2800\u2800\u28bb\u28ff\u28ff\u28ff\u2807\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n            \u5764\u5764\u4fdd\u4f51       \u901f\u901fAC     \u6c38\u65e0BUG\n*/\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#include <queue>\n#include <set>\n#include <stack>\n#include <string>\n#include <unordered_set>\n// #include <unordered_map>\n#include <vector>\n#define enedl \"\\n\"\n#define int long long\n#define abcd \u5e05\u54e5\nconst int N = 1e7 + 7;\nusing namespace std;\nvoid solve() {\n  int n, m;\n  char s[109];\n  cin >> n >> m;\n  cin >> s + 1;\n  if (n % 2 == 0 && n / 2 == m) {\n    cout << \"NO\" << endl;\n    return;\n  }\n  if (m == 0) {\n    cout << \"YES\" << endl;\n    return;\n  }\n  for (int i = 1; i <= m; ++i)\n    if (s[i] != s[n + 1 - i]) {\n      cout << \"NO\" << endl;\n      return;\n    }\n  cout << \"YES\" << endl;\n}\n\nsigned main() {\n  ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n  int \u5e05\u54e5;\n  cin >> \u5e05\u54e5;\n  while (\u5e05\u54e5--) {\n    solve();\n  }\n  return 0;\n}\n\n\t \t   \t\t \t\t  \t  \t    \t    \t\t\t"
}