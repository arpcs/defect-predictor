{
    "id": 219470084,
    "contestId": 1152,
    "creationTimeSeconds": 1692373879,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1152,
        "index": "D",
        "name": "Neko and Aki's Prank",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "dp",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1152,
        "members": [
            {
                "handle": "suncut"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1556116500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/*\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 1010,P = 1e9 + 7;\r\ntypedef long long LL;\r\nLL dp[N],jc[N],ny[N];\r\nLL cnt = 0,tot,n,ans;\r\nbool check(int a,int b)\r\n{\r\n\tif(a > tot || b > tot) return false;\r\n\tif(a < b) return false;\r\n\tif(a == b && (a+b) < 2*tot) return false;\r\n\treturn true;\r\n}\r\nbool dfs(int a,int b,bool flag)\r\n{\r\n\t++ans;\r\n\tif(flag) ++cnt;\r\n\tif(check(a,b+1))\r\n\t{\r\n\t\tdfs(a,b+1,!flag);\r\n\t\tif(check(a+1,b))dfs(a+1,b,false);\r\n\t}\r\n\telse if(check(a+1,b)) dfs(a+1,b,!flag);\r\n}\r\n//tot=4;\r\n//dfs(1,0,true);\r\n//cout << cnt << endl; \r\nLL quick_pow(LL a,LL b)\r\n{\r\n\tLL res = 1;\r\n\twhile(b)\r\n\t{\r\n\t\tif(b&1) res = (res * a) % P;\r\n\t\tb = b >> 1;\r\n\t\ta = (a*a)%P;\r\n\t}\r\n\treturn res;\r\n}\r\nint main()\r\n{\r\n\tcin >> n;\r\n\tjc[0] = 1;\r\n\tfor(LL i = 1;i <= 2*n;++i) jc[i] = (jc[i-1]*i) % P;\r\n\tny[2*n] = quick_pow(jc[2*n],P-2);\r\n\tfor(LL i = 2*n-1;i >= 0;--i) ny[i] = (ny[i+1]*(i+1))%P;\r\n\tdp[1] = 1;\r\n\tfor(int i = 2;i <= n;++i)\r\n\t{\r\n\t\tfor(int j = 0;j < i;++j)\r\n\t\t\tdp[i] = (dp[i] + dp[i-j-1]*(((jc[2*j]*ny[j])%P*ny[j+1])%P))%P;\r\n\t\ttot = i;\r\n\t\tcnt = 0;\r\n\t\tdfs(1,0,true);\r\n\t\tdp[i] += cnt;\r\n\t}\r\n\tcout << dp[n] << endl;\r\n\treturn 0;\r\n}\r\n*/\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 1010;\r\ntypedef long long LL;\r\nconst LL P = 1e9 + 7;\r\nLL dp[N],jc[N],ny[N];\r\nLL cnt = 0,tot,n;\r\nbool check(int a,int b)\r\n{\r\n\tif(a > tot || b > tot) return false;\r\n\tif(a < b) return false;\r\n\tif(a == b && (a+b) < 2*tot) return false;\r\n\treturn true;\r\n}\r\nbool dfs(int a,int b,bool flag)\r\n{\r\n\t//++ans;\r\n\tif(flag) ++cnt;\r\n\tif(check(a,b+1))\r\n\t{\r\n\t\tdfs(a,b+1,!flag);\r\n\t\tif(check(a+1,b))dfs(a+1,b,false);\r\n\t}\r\n\telse if(check(a+1,b)) dfs(a+1,b,!flag);\r\n}\r\n//tot=4;\r\n//dfs(1,0,true);\r\n//cout << cnt << endl; \r\nLL quick_pow(LL a,LL b)\r\n{\r\n\tLL res = 1;\r\n\twhile(b)\r\n\t{\r\n\t\tif(b&1) res = (res * a) % P;\r\n\t\tb = b >> 1;\r\n\t\ta = (a*a)%P;\r\n\t}\r\n\treturn res;\r\n}\r\nint main()\r\n{\r\n\tcin >> n;\r\n\tjc[0] = 1;\r\n\tfor(LL i = 1;i <= 2*n;++i) jc[i] = (jc[i-1]*i) % P;\r\n\tny[2*n] = quick_pow(jc[2*n],P-2);\r\n\tfor(LL i = 2*n-1;i >= 0;--i) ny[i] = (ny[i+1]*(i+1))%P;\r\n\tdp[1] = 1;\r\n\tfor(int i = 2;i <= n;++i)\r\n\t{\r\n\t\tfor(int j = 0;j < i;++j)\r\n\t\t\tdp[i] = (dp[i] + dp[i-j-1]*(((jc[2*j]*ny[j])%P*ny[j+1])%P))%P;\r\n\t\ttot = i;\r\n\t\tcnt = 0;\r\n\t\t//dfs(1,0,true);\r\n\t\tdp[i] += cnt;\r\n\t}\r\n\tcout << dp[n] << endl;\r\n\treturn 0;\r\n}"
}