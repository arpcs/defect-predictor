{
    "contestId": 1152,
    "index": "D",
    "name": "Neko and Aki's Prank",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2100,
    "tags": [
        "dp",
        "greedy",
        "trees"
    ],
    "desc": {
        "title": "D. Neko and Aki's Prank",
        "statement": "<p>Neko is playing with his toys on the backyard of Aki's house. Aki decided to play a prank on him, by secretly putting catnip into Neko's toys. Unfortunately, he went overboard and put an entire bag of catnip into the toys...</p><p>It took Neko an entire day to turn back to normal. Neko reported to Aki that he saw a lot of weird things, including a <a href=\"https://en.wikipedia.org/wiki/Trie\">trie</a> of all correct bracket sequences of length $$$2n$$$.</p><p>The definition of correct bracket sequence is as follows:</p><ul> <li> The empty sequence is a correct bracket sequence, </li><li> If $$$s$$$ is a correct bracket sequence, then $$$(\\,s\\,)$$$ is a correct bracket sequence, </li><li> If $$$s$$$ and $$$t$$$ are a correct bracket sequence, then $$$st$$$ is also a correct bracket sequence. </li></ul><p>For example, the strings \"<span class=\"tex-font-style-tt\">(())</span>\", \"<span class=\"tex-font-style-tt\">()()</span>\" form a correct bracket sequence, while \"<span class=\"tex-font-style-tt\">)(</span>\" and \"<span class=\"tex-font-style-tt\">((</span>\" not.</p><p>Aki then came up with an interesting problem: What is the size of the maximum matching (the largest set of edges such that there are no two edges with a common vertex) in this trie? Since the answer can be quite large, print it modulo $$$10^9 + 7$$$.</p>",
        "inputSpecification": "<p>The only line contains a single integer $$$n$$$ ($$$1 \\le n \\le 1000$$$).</p>",
        "outputSpecification": "<p>Print exactly one integer\u00a0\u2014 the size of the maximum matching in the trie. Since the answer can be quite large, print it modulo $$$10^9 + 7$$$.</p>",
        "samples": [
            {
                "input": "\n1\n",
                "output": "\n1\n"
            },
            {
                "input": "\n2\n",
                "output": "\n3\n"
            },
            {
                "input": "\n3\n",
                "output": "\n9\n"
            }
        ],
        "note": "<p>The pictures below illustrate tries in the first two examples (for clarity, the round brackets are replaced with angle brackets). The maximum matching is highlighted with blue.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/ae958651337b764b9bc1c5faa6d932484d706874.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>\u00a0<img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/02dada4d8f72106f53fe243e05632bb45d5ed9db.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center>"
    },
    "suggested_categories": [
        "algorithms",
        "data structures",
        "dynamic programming",
        "graph theory",
        "combinatorics",
        "string processing",
        "tree traversal",
        "recursive functions",
        "mathematical modulo operations",
        "bracket sequences",
        "trie data structure",
        "matching algorithms",
        "tree visualization",
        "pranks",
        "toy manipulation",
        "catnip effects",
        "codeforces problems",
        "online judges",
        "competitive programming",
        "modular arithmetic"
    ]
}