{
    "id": 231585446,
    "contestId": 361,
    "creationTimeSeconds": 1699274561,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 361,
        "index": "A",
        "name": "Levko and Table",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "constructive algorithms",
            "implementation"
        ]
    },
    "author": {
        "contestId": 361,
        "members": [
            {
                "handle": "7odabeh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1384102800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 22,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\n#include <iostream>\r\n#include <cmath>\r\n#include <string>\r\n#include <algorithm>\r\n#include <map>\r\n#include <vector>\r\n#include <list>\r\n#include <queue>\r\n#include <stack>\r\n#include <set>\r\n#include <iomanip>\r\n/***********************************************/\r\n/* Dear online judge:\r\n * I've read the problem, and tried to solve it.\r\n * Even if you don't accept my solution, you should respect my effort.\r\n * I hope my code compile and get accepted.\r\n *      ____________\r\n *     /            \\\r\n *    /  /\\      /\\  \\\r\n *   /  /  \\    /  \\  \\\r\n *   \\                /\r\n *    \\     \\___/    /\r\n *     \\____________/\r\n */\r\n#define ll long long\r\n\r\n\r\nusing namespace std;\r\n\r\nvoid fast() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n}\r\n\r\nll C(int n, int m) {\r\n    ll fact = 1;\r\n    for (int i = 0; i < m; ++i) {\r\n        fact *= (n - i);\r\n        fact /= (i + 1);\r\n    }\r\n    return fact;\r\n}\r\n\r\nbool comp(pair<vector<int>, string> fir, pair<vector<int>, string> sec) {\r\n    if (fir.first[3] != sec.first[3])\r\n        return fir.first[3] > sec.first[3];\r\n    else if (fir.first[2] != sec.first[2])\r\n        return fir.first[2] > sec.first[2];\r\n    else if (fir.first[1] != sec.first[1])\r\n        return fir.first[1] > sec.first[1];\r\n    else if (fir.first[0] != sec.first[0])\r\n        return fir.first[0] > sec.first[0];\r\n    else\r\n        return fir.second < sec.second;\r\n}\r\n\r\nll calc(vector<int> v) {\r\n    ll c = 0, ans = 0;\r\n    for (auto i: v) {\r\n        if (i)c++;\r\n        else ans += c;\r\n    }\r\n    return ans;\r\n}\r\n\r\nbool tri(int a, int b, int c) {\r\n    return (a + b > c && a + c > b && b + c > a);\r\n}\r\n\r\nbool seg(int a, int b, int c) {\r\n    return (a + b == c || a + c == b || b + c == a);\r\n}\r\n\r\nclass registeration {\r\nprivate:\r\n    string name;\r\n    string phone_number;\r\n    string gmail;\r\n    string date_of_birth;\r\n    int age;\r\npublic:\r\n    registeration() {\r\n        cout << \"WELCOME\\n\";\r\n    }\r\n\r\n    registeration(string n, string pn, string g, string db, int a) {\r\n        name = n;\r\n        phone_number = pn;\r\n        gmail = g;\r\n        date_of_birth = db;\r\n        age = a;\r\n    }\r\n\r\n    void print() {\r\n        cout << \"Name : \" << name << '\\n' << \"Phone number : \" << phone_number << '\\n' << \"Gmail : \" << gmail << '\\n'\r\n             << \"Date of birth : \" << date_of_birth << '\\n'\r\n             << \"Age : \" << age << '\\n';\r\n    }\r\n\r\n    ~registeration() {\r\n        cout << \"Thank you for registeration :) \\n\";\r\n    }\r\n};\r\n//\r\n//int BinarySearch(vector<int> v, int left, int right, int key) {\r\n//    int mn = INT_MAX;\r\n//    while (left <= right) {\r\n//        int mid = left + (right - left) / 2;\r\n//        if (v[mid] == key)\r\n//            return 0;\r\n//        if (v[mid] > key) {\r\n//            right = mid - 1;\r\n//            mn = min(mn, abs(v[mid] - key));\r\n//        } else {\r\n//            left = mid + 1;\r\n//            mn = min(mn, abs(v[mid] - key));\r\n//        }\r\n//    }\r\n//    return mn;\r\n//}\r\n//\r\n//int BinarySearch1(vector<int> v, int left, int right, int key) {\r\n//    int mn = INT_MAX;\r\n//    while (left <= right) {\r\n//        int mid = left + (right - left) / 2;\r\n//        if (v[mid] == key)\r\n//            return 0;\r\n//        if (v[mid] > key) {\r\n//            right = mid + 1;\r\n//            mn = min(mn, abs(v[mid] - key));\r\n//        } else {\r\n//            left = mid - 1;\r\n//            mn = min(mn, abs(v[mid] - key));\r\n//        }\r\n//    }\r\n//    return mn;\r\n//}\r\n\r\n\r\nbool comp1(string s1, string s2) {\r\n    return s1 + s2 < s2 + s1;\r\n}\r\n\r\nbool prime(ll n) {\r\n    if (n == 2) return 1;\r\n    if (n < 2 || n % 2 == 0)return 0;\r\n    for (int i = 3; i * i <= n; ++i) {\r\n        if (n % i == 0)\r\n            return 0;\r\n    }\r\n    return 1;\r\n}\r\n\r\n\r\nvector<ll> primefactors(ll n) {\r\n    vector<ll> a;\r\n    for (int i = 2; i * i <= n; ++i) {\r\n        while (n % i == 0) {\r\n            a.push_back(i);\r\n            n /= i;\r\n        }\r\n    }\r\n    if (n > 1)\r\n        a.push_back(n);\r\n    return a;\r\n}\r\n\r\n\r\n//ll primefactint(ll n) {\r\n//    map<int, int> mp;\r\n//    for (int i = 2; i * i <= n; ++i) {\r\n//        while (n % i == 0) {\r\n//            mp[i]++;\r\n//            n /= i;\r\n//        }\r\n//    }\r\n//}\r\n\r\n\r\nint gcdd(ll a, ll b) {\r\n    if (b == 0)\r\n        return a;\r\n    return gcdd(b, a % b);\r\n}\r\n\r\nll int fact(ll a) {\r\n    ll sum = 1;\r\n    for (int i = 1; i <= a; ++i) {\r\n        sum *= i;\r\n    }\r\n    return sum;\r\n}\r\n\r\nint lcmm(int x, int y) {\r\n    return x * y / gcdd(x, y);\r\n}\r\n\r\nbool perfect(int n) {\r\n    ll sum = 0;\r\n    for (int i = 1; i <= n / 2; ++i) {\r\n        if (n % i == 0)\r\n            sum += i;\r\n    }\r\n    if (sum == n)return 1;\r\n    return 0;\r\n\r\n}\r\n\r\nint mul(int a, int b) {\r\n    if (b == 1)\r\n        return a;\r\n    return a + mul(a, b - 1);\r\n}\r\n\r\nint arr[1011], fre[1011];\r\n\r\nll sum(ll n) {\r\n    int sum = 0;\r\n    while (n) {\r\n        sum += n % 10;\r\n        n /= 10;\r\n    }\r\n    return sum;\r\n}\r\n\r\nll bignum(ll num) {\r\n    ll sum = 0;\r\n    while (num) {\r\n        sum += num % 10;\r\n        num /= 10;\r\n    }\r\n    return sum;\r\n}\r\n\r\nbool good(string s) {\r\n    for (int i = 0; i < s.size() - 1; ++i) {\r\n        if (s[i] == s[i + 1])\r\n            return 0;\r\n    }\r\n    return 1;\r\n}\r\n\r\nconst int N = 1e5;\r\n\r\nvector<int> check(vector<int> v) {\r\n    vector<int> a(v.size(), 0);\r\n    for (int i = 0; i < v.size(); ++i) {\r\n        if (v[i] > v[i + 1])\r\n            a[i + 1] = v[i] - v[i + 1];\r\n    }\r\n    return a;\r\n}\r\n\r\nclass date {\r\nprivate:\r\n    int month;\r\n    int day;\r\n    int year;\r\npublic:\r\n    date(int m, int d, int y) {\r\n        month = m;\r\n        day = d;\r\n        year = y;\r\n        if (month < 1 || month > 12)\r\n            month = 1;\r\n    }\r\n\r\n    void set_year(int year) {\r\n        year = year;\r\n    }\r\n\r\n    void set_day(int day) {\r\n        day = day;\r\n    }\r\n\r\n    int get_year() {\r\n        return year;\r\n    }\r\n\r\n    int get_day() {\r\n        return day;\r\n    }\r\n\r\n    int get_month() {\r\n        return month;\r\n    }\r\n\r\n    void print() {\r\n        cout << day << \"/\" << month << \"/\" << year << '\\n';\r\n    }\r\n\r\n};\r\n\r\nclass employee {\r\nprivate:\r\n    string fn;\r\n    string ln;\r\n    float salary;\r\npublic:\r\n    employee(string f, string l, float s) {\r\n        fn = f;\r\n        ln = l;\r\n        salary = s;\r\n        if (salary < 0)\r\n            salary = 0;\r\n    }\r\n\r\n    void set_fn(string f) {\r\n        fn = f;\r\n    }\r\n\r\n    void set_ln(string l) {\r\n        ln = l;\r\n    }\r\n\r\n    void set_s(int s) {\r\n        if (s < 0)s = 0;\r\n    }\r\n\r\n    string get_fn() {\r\n        return fn;\r\n    }\r\n\r\n    string get_ln() {\r\n        return ln;\r\n    }\r\n\r\n    int get_s() {\r\n        return salary;\r\n    }\r\n\r\n    void per(int p) {\r\n        salary = (salary * p) / 100 + salary;\r\n    }\r\n\r\n\r\n};\r\n\r\nclass complexx {\r\nprivate:\r\n    double r;\r\n    double i;\r\npublic:\r\n    complexx(double r = 0, double i = 0) {\r\n        this->r = r;\r\n        this->i = i;\r\n    }\r\n\r\n    complexx addcom(complexx a, complexx b) {\r\n        complexx c;\r\n        c.r = a.r + b.r;\r\n        c.i = a.i + b.i;\r\n        return c;\r\n    }\r\n\r\n    void print() {\r\n        cout << \"(\" << r << \",\" << i << \")\" << '\\n';\r\n    }\r\n};\r\n\r\nclass fraa {\r\nprivate:\r\n    int nom, dom;\r\npublic:\r\n    fraa(int a = 0, int b = 0) {\r\n        nom = a;\r\n        dom = b;\r\n    }\r\n\r\n    void add(fraa dude) {\r\n        int a = dude.nom;\r\n        int b = dude.dom;\r\n        int te = dom * b;\r\n        nom *= b;\r\n        nom += a * dom;\r\n        dom = te;\r\n        int g = __gcd(nom, dom);\r\n        nom /= g;\r\n        dom /= g;\r\n    }\r\n\r\n    void print() {\r\n        cout << nom << \"/\" << dom;\r\n    }\r\n};\r\n\r\nconst int maxn = 100 + 10;\r\nint cl[maxn], rw[maxn], ch[maxn][maxn];\r\n\r\nvoid solve() {\r\n//    date ob(13, 27, 2004);\r\n//    ob.print();\r\n//    employee ob(\"ahmed\", \"hassan\", 2000), ob1(\"rana\", \"mohamed\", 1200);\r\n//    cout << ob.get_s() * 12 << '\\n' << ob1.get_s() * 12 << '\\n';\r\n//    ob.per(10);\r\n//    ob1.per(20);\r\n//    cout << ob.get_s() * 12 << '\\n' << ob1.get_s() * 12 << '\\n';\r\n\r\n    int n, k;\r\n    cin >> n >> k;\r\n    int a[n][n];\r\n    for (int i = 0; i < n; ++i) {\r\n        for (int j = 0; j < n; ++j) {\r\n            if (i == j)\r\n                cout << k << \" \";\r\n            else cout << 0 << \" \";\r\n        }\r\n        cout << '\\n';\r\n    }\r\n\r\n}\r\n\r\nint main() {\r\n//    freopen(\"input.txt\", \"r\", stdin);\r\n    fast();\r\n    int t = 1;\r\n//    cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n}\r\n"
}