{
    "id": 232310103,
    "contestId": 61,
    "creationTimeSeconds": 1699665533,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 61,
        "index": "D",
        "name": "Eternal Victory",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1800,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "shortest paths",
            "trees"
        ]
    },
    "author": {
        "contestId": 61,
        "members": [
            {
                "handle": "asd222asd123456789"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1298390400
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 44,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 7680000,
    "source": "// LUOGU_RID: 134431540\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 200010;\r\n#define DEBUG\r\nvoid debug_out() {cerr << '\\n'; }\r\ntemplate <typename Head>\r\nvoid debug_out(Head H) {\r\n    cerr << H <<endl;\r\n}\r\n\r\ntemplate <typename Head, typename... Tail>\r\nvoid debug_out(Head H, Tail... T) {\r\n    cerr << H << \", \";\r\n    debug_out(T...);\r\n}\r\n#ifdef DEBUG\r\n#define debug(...) std::cerr << \"[\" #__VA_ARGS__ \"]: \", debug_out(__VA_ARGS__)\r\n#else\r\n#define debug(...)\r\n#endif\r\nmt19937 eng(time(0));\r\nint randint(int a, int b)\r\n{\r\n    uniform_int_distribution<int> dis(a, b);\r\n    return dis(eng);\r\n}\r\ninline int read()\r\n{\r\n\tint x = 0,f = 1;char ch = getchar();\r\n\twhile(ch<'0'||ch>'9') {if(ch=='-')f=-1;ch = getchar();}\r\n\twhile(ch>='0'&&ch<='9') {x = x*10+ch-48;ch = getchar();}\r\n\treturn x*f;\r\n}\r\nconst int mod = 1e9+7;\r\ninline int power(int d,int r)\r\n{\r\n\tint res = 1;\r\n\twhile(r)\r\n\t{\r\n\t\tif(r%2==1) res = res*d%mod;\r\n\t\tr/=2;d = d*d%mod;\r\n\t}\r\n\treturn res;\r\n}\r\nstruct pos\r\n{\r\n\tint v,w;\r\n};vector<pos>g[N];\r\nint son[N];int dp[N][2];\r\nint cal(int id)\r\n{\r\n\treturn dp[id][0]-dp[id][1];\r\n}\r\nint Max = 0;\r\nvoid dfs1(int u,int f,int sum)\r\n{\r\n//\tdebug(u,f);\r\n\tMax = max(Max,sum);\r\n\tfor(pos cur:g[u])\r\n\t{\r\n\t\tint v = cur.v,w = cur.w;\r\n\t\tif(v==f)continue;\r\n\t\tdfs1(v,u,sum+w);\r\n\t}\r\n\treturn;\r\n}\r\nsigned main()\r\n{\r\n\tint n;n = read();\r\n\tint sum = 0;\r\n\tfor(int i = 1;i<n;i++)\r\n\t{\r\n\t\tint u,v,w;u = read();v = read();w = read();\r\n\t\tg[u].push_back(pos{v,w});g[v].push_back(pos{u,w});\r\n\t\tsum+=w;\r\n\t}\r\n\tdfs1(1,1,0);\r\n\tcout<<2*sum-Max;\r\n\treturn 0;\r\n}\r\n"
}