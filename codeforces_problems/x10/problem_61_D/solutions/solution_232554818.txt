{
    "id": 232554818,
    "contestId": 61,
    "creationTimeSeconds": 1699819746,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 61,
        "index": "D",
        "name": "Eternal Victory",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1800,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "shortest paths",
            "trees"
        ]
    },
    "author": {
        "contestId": 61,
        "members": [
            {
                "handle": "H3HunTer"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1298390400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 11980800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef int it;\r\ntypedef pair<ll, ll> pii;\r\ntypedef pair<ll, pii> piii;\r\ntypedef pair<pii, pii> piiii;\r\n//#pragma GCC optimize ('O3')\r\n//#pragma GCC target('avx2')\r\n//#pragma GCC optimize('Ofast,unroll-loops')\r\n#define sep  '\\n'\r\n#define pes  ' '\r\n#define int long long\r\n#define print(x,n) for(int i=1; i<=n ; i++)cout<<x[i]<<' '\r\n#define scan(x,n) for(int i=1 ; i<=n ; i++)cin>>x[i]\r\n#define all(x) x.begin(), x.end()\r\n#define pb push_back\r\n#define F first\r\n#define fir first\r\n#define S second\r\n#define sz size\r\n#define KIDS int cl = 2*v, cr = 2*v + 1\r\n#define MID int mid = (tl + tr) / 2\r\n#define LEN int len = (tr - tl + 1)\r\n#define PAIN if(tl>tr || l > tr || r < tl)return;\r\n#define PAINQUERY if(tl>tr || l > tr || r < tl)return 0;\r\n#define PAINQUERY2 if(tl>tr || l > tr || r < tl)return {-1,-1};\r\n#define ASK l <= tl && tr <= r\r\nconst int maxx =2e5+10;\r\nconst int LOG = 20;\r\nconst int mxx = 1000+100;\r\nconst ll inf = 1e18;\r\nconst int Mod = 1e9+7;\r\nconst int hashh = 1e15 + 37;\r\n\r\n\r\n/*===========================================================================================================================*/\r\n//ll tav(ll a, ll p) { return p ? tav(a * a % Mod, p / 2) * (p & 1 ? a : 1) % Mod : 1; }\r\n/*===========================================================================================================================*/\r\nint n , ans , dp[maxx] , mx;\r\nvector<pii> g[maxx];\r\nvoid dfs(int v , int par = -1)\r\n{\r\n    for(auto X : g[v]){\r\n        if(X.F == par)continue;\r\n        dfs(X.F , v);\r\n        dp[v] = max(dp[v] , dp[X.F] + X.S);\r\n        mx = max(mx , dp[v]);\r\n    }\r\n}\r\nvoid solve()\r\n{\r\n    int n;\r\n    cin>>n;\r\n    for(int i = 1 ; i <= n-1;i++){\r\n        int u , v , c;\r\n        cin>>u>>v>>c;\r\n        g[u].pb({v,c});\r\n        g[v].pb({u,c});\r\n        ans+=2*c;\r\n    }\r\n    dfs(1);\r\n    cout<<ans-mx;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n    check maxx\r\n    check clear\r\n*/\r\n\r\n\r\n\r\n\r\n/*===========================================================================================================================*/\r\nsigned main(){\r\n  ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\r\n    int tc = 1;\r\n   // cin>>tc;\r\n    while(tc--){\r\n        solve();\r\n    }\r\n\r\n\r\n}\r\n"
}