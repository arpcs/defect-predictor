{
    "id": 232802558,
    "contestId": 61,
    "creationTimeSeconds": 1700006056,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 61,
        "index": "D",
        "name": "Eternal Victory",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1800,
        "tags": [
            "dfs and similar",
            "graphs",
            "greedy",
            "shortest paths",
            "trees"
        ]
    },
    "author": {
        "contestId": 61,
        "members": [
            {
                "handle": "Biult"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1298390400
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 6451200,
    "source": "// LUOGU_RID: 135153969\n#include<bits/stdc++.h>\r\n#define int long long\r\nusing namespace std;\r\nconst int N = 1e5 + 5;\r\nconst int M = 1e3 + 5;\r\n\r\nint n;\r\n\r\nint head[N], tot;\r\nstruct edge{\r\n\tint to, nxt;\r\n\tint w;\r\n}e[N << 1];\r\n\r\ninline void add(int x, int y, int w){\r\n\te[++ tot].to = y;\r\n\te[tot].w = w;\r\n\te[tot].nxt = head[x];\r\n\thead[x] = tot;\r\n}\r\n\r\nint dis[N];\r\nint mx;\r\n\r\ninline void Dfs(int now, int fath){\r\n\tmx = max(mx, dis[now]);\r\n\t\r\n\tfor(int i = head[now]; i; i = e[i].nxt){\r\n\t\tint v = e[i].to;\r\n\t\t\r\n\t\tif(v != fath){\r\n\t\t\tdis[v] = dis[now] + e[i].w;\r\n\t\t\tDfs(v, now);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nint sum;\r\n\r\nint x, y, z;\r\n\r\nsigned main(){\r\n\tios::sync_with_stdio(false);\r\n\t\r\n\tcin >> n;\r\n\t\r\n\tfor(int i = 1; i < n; ++ i){\r\n\t\tcin >> x >> y >> z;\r\n\t\tadd(x, y, z);\r\n\t\tadd(y, x, z);\r\n\t\tsum += z;\r\n\t}\r\n\t\r\n\tDfs(1, 0);\r\n\t\r\n\tcout << sum * 2 - mx;\r\n\t\r\n\treturn 0;\r\n}"
}