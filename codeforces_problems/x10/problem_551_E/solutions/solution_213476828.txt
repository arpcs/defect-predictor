{
    "id": 213476828,
    "contestId": 551,
    "creationTimeSeconds": 1689152560,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 551,
        "index": "E",
        "name": "GukiZ and GukiZiana",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2500,
        "tags": [
            "binary search",
            "data structures",
            "implementation"
        ]
    },
    "author": {
        "contestId": 551,
        "members": [
            {
                "handle": "nb_jzy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1434127500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 2605,
    "memoryConsumedBytes": 37683200,
    "source": "#include<bits/stdc++.h>\r\n#define int long long\r\nusing namespace std;\r\nconst int maxn=6e5+5,inf=0x3f3f3f3f;\r\nint n,m,a[maxn],t,l,r,x,y,s,id[maxn],st[maxn],ed[maxn],len,lazy[maxn];\r\nvector<int> g[maxn];\r\nvoid change(int u,int v,int w){\r\n\tif(id[u]==id[v]){\r\n\t\tfor(int i=u;i<=v;i++) a[i]+=w;\r\n\t\tg[id[u]].clear();\r\n\t\tfor(int i=st[id[u]];i<=ed[id[u]];i++){\r\n\t\t\tg[id[u]].push_back(a[i]);\r\n\t\t}\r\n\t\tsort(g[id[u]].begin(),g[id[u]].end());\r\n\t}\r\n\telse{\r\n\t\tfor(int i=u;i<=ed[id[u]];i++) a[i]+=w;\r\n\t\tg[id[u]].clear();\r\n\t\tfor(int i=st[id[u]];i<=ed[id[u]];i++){\r\n\t\t\tg[id[u]].push_back(a[i]);\r\n\t\t}\r\n\t\tsort(g[id[u]].begin(),g[id[u]].end());\r\n\t\tfor(int i=id[u]+1;i<id[v];i++) lazy[i]+=w;\r\n\t\tfor(int i=st[id[v]];i<=v;i++) a[i]+=w;\r\n\t\tg[id[v]].clear();\r\n\t\tfor(int i=st[id[v]];i<=ed[id[v]];i++){\r\n\t\t\tg[id[v]].push_back(a[i]);\r\n\t\t}\r\n\t\tsort(g[id[v]].begin(),g[id[v]].end());\r\n\t}\r\n}\r\nint query(int u){\r\n\tint minn=inf,maxx=inf;\r\n\tfor(int i=1;i<=len;i++){\r\n\t\tint h=lower_bound(g[i].begin(),g[i].end(),u-lazy[i])-g[i].begin();\r\n\t\tif(g[i][h]+lazy[i]==u){\r\n\t\t\tfor(int j=st[i];j<=ed[i];j++){\r\n\t\t\t\tif(a[j]+lazy[i]==u){\r\n\t\t\t\t\tminn=j;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tfor(int i=len;i>=1;i--){\r\n\t\tint h=upper_bound(g[i].begin(),g[i].end(),u-lazy[i])-g[i].begin();\r\n\t\tif(h==0) continue; \r\n\t\tif(g[i][h-1]+lazy[i]==u){\r\n\t\t\tfor(int j=ed[i];j>=st[i];j--){\r\n\t\t\t\tif(a[j]+lazy[i]==u){\r\n\t\t\t\t\tmaxx=j;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tif(minn==inf&&maxx==inf) return -1;\r\n\treturn maxx-minn;\r\n}\r\nsigned main()\r\n{\r\n\tscanf(\"%lld%lld\",&n,&m);\r\n\ts=sqrt(n);\r\n\tlen=n/s+(n%s!=0);\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tid[i]=(i-1)/s+1;\r\n\t\tscanf(\"%lld\",&a[i]);\r\n\t\tg[id[i]].push_back(a[i]);\r\n\t}\r\n\tfor(int i=1;i<=len;i++) sort(g[i].begin(),g[i].end()),st[i]=(i-1)*s+1,ed[i]=min(n,i*s);\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tscanf(\"%lld\",&t);\r\n\t\tif(t==1){\r\n\t\t\tscanf(\"%lld%lld%lld\",&l,&r,&x);\r\n\t\t\tchange(l,r,x);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tscanf(\"%lld\",&y);\r\n\t\t\tprintf(\"%lld\\n\",query(y));\r\n\t\t}\r\n\t}\r\n}"
}