{
    "id": 219195769,
    "contestId": 551,
    "creationTimeSeconds": 1692252817,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 551,
        "index": "E",
        "name": "GukiZ and GukiZiana",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2500,
        "tags": [
            "binary search",
            "data structures",
            "implementation"
        ]
    },
    "author": {
        "contestId": 551,
        "members": [
            {
                "handle": "Optimator"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1434127500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <algorithm>\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <map>\n#define P 500\n#define L 1000\n#define N 500000\n#define T 1000000000\n#define LL long long\nusing namespace std;\nint n, m;\nLL s[N + 5], o[P + 5];\nmap<int, int> M1[P + 5];\nmap<int, int> M2[P + 5];\nvoid fix(int pt) {\n  M1[pt].clear();\n  M2[pt].clear();\n  if (o[pt] > T)\n    return;\n  for (int i = pt * L; i < pt * L + L; i++) {\n    if (M1[pt].count(s[i]) == 0) {\n      M1[pt][s[i]] = i;\n    }\n    M2[pt][s[i]] = i;\n  }\n  return;\n}\nint main() {\n  scanf(\"%d %d\", &n, &m);\n  memset(s, 0, sizeof(s));\n  for (int i = 0; i < n; i++)\n    scanf(\"%d\", &s[i]);\n  n = N;\n  memset(o, 0, sizeof(o));\n  for (int i = 0; i < P; i++)\n    fix(i);\n  for (int i = 1; i <= m; i++) {\n    int a, b, c, d;\n    scanf(\"%d\", &a);\n    if (a == 1) {\n      scanf(\"%d %d %d\", &b, &c, &d);\n      b--, c--;\n      int pb = b / L, pc = c / L;\n      if (pb == pc) {\n        for (int j = b; j <= c; j++) {\n        \n// DefNGWhJakzcIRyEOKIYlCFDnxGcSehlmsuXkVionLThnayWPmvUJbGTmYMHUgmFwbeDOXQcTZbKLIXjyWBZpRxkKKwGKlAiMMtiVPmoJRUmQTJPRHQksjYcjMukslDZ"
}