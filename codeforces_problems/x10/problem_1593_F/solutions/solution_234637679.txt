{
    "id": 234637679,
    "contestId": 1593,
    "creationTimeSeconds": 1701116182,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1593,
        "index": "F",
        "name": "Red-Black Number",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "dfs and similar",
            "dp",
            "implementation",
            "math",
            "meet-in-the-middle"
        ]
    },
    "author": {
        "contestId": 1593,
        "members": [
            {
                "handle": "AhmedRamadan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634135700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 545,
    "memoryConsumedBytes": 41574400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int N = 4e1, MX = 1e2;\r\nint dp[N][N][N][2 * N + 1];\r\nint vis[N][N][N][2 * N + 1];\r\n\r\nint main() {\r\n    \r\n    int step = 0;\r\n    // memset(dp, -1, sizeof dp);\r\n    auto Free_Palestine = [&]() {\r\n        int n, A, B;\r\n        cin >> n >> A >> B;\r\n        string s;\r\n        cin >> s;\r\n        step ++;\r\n        auto solve = [&](const auto self, int i = 0, int sumA = 0, int sumB = 0, int cnt = 0) -> int {\r\n            if(i == n) {\r\n                if(sumA || sumB || abs(cnt - 40) == n) return MX;\r\n                return abs(cnt - 40);\r\n            } \r\n            int &ret = dp[i][sumA][sumB][cnt];\r\n            if(vis[i][sumA][sumB][cnt] == step) return ret;\r\n            vis[i][sumA][sumB][cnt] = step;\r\n            ret = self(self, i + 1, (sumA * 10 + (s[i] - '0')) % A, sumB, cnt + 1);\r\n            ret = min(ret, self(self, i + 1, sumA,(sumB * 10 + (s[i] - '0')) % B, cnt - 1));\r\n            return ret;\r\n        };\r\n        \r\n        \r\n        auto solve2 = [&](const auto self, int i = 0, int sumA = 0, int sumB = 0, int cnt = 0) -> void {\r\n            if(i == n) return;\r\n            int ret = solve(solve, i, sumA, sumB, cnt);\r\n            if(ret == solve(solve, i + 1, (sumA * 10 + (s[i] - '0')) % A, sumB, cnt + 1)) {\r\n                cout << 'R';\r\n                self(self, i + 1, (sumA * 10 + (s[i] - '0')) % A, sumB, cnt + 1);\r\n                return;\r\n            } else {\r\n                cout << 'B'; \r\n                self(self, i + 1, sumA, (sumB * 10 + (s[i] - '0')) % B, cnt - 1);\r\n                return;\r\n            }\r\n        };\r\n        \r\n        // cerr << \"\\n\\n\";\r\n        int ans = solve(solve, 0, 0, 0, 40);\r\n        // cout << ans << '\\n';\r\n        if(ans > n) {\r\n            cout << -1;\r\n            return;\r\n        }\r\n        solve2(solve2, 0, 0, 0, 40);\r\n     };\r\n    \r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n \r\n    int t = 1;\r\n    cin >> t;\r\n    for(int ti = 1; ti <= t; ti ++) {\r\n        Free_Palestine();\r\n        cout << (ti == t ? \"\" : \"\\n\");\r\n    }\r\n    return 0;\r\n}"
}