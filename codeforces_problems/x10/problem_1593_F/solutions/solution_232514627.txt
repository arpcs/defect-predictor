{
    "id": 232514627,
    "contestId": 1593,
    "creationTimeSeconds": 1699797960,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1593,
        "index": "F",
        "name": "Red-Black Number",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "dfs and similar",
            "dp",
            "implementation",
            "math",
            "meet-in-the-middle"
        ]
    },
    "author": {
        "contestId": 1593,
        "members": [
            {
                "handle": "ipip"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1634135700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 151244800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int MAX_N = 64;\r\n\r\nbool dp[MAX_N][MAX_N][MAX_N][MAX_N]; // (taken, red, mod A, mod B) -> may be\r\npair<bool, int> sert[MAX_N][MAX_N][MAX_N][MAX_N]; // the same -> (true (red) | false(black), prev red/black)\r\n\r\nint main()\r\n{\r\n\tint t;\r\n\tcin >> t;\r\n\r\n\twhile (t--)\r\n\t{\r\n\t\tint n, a, b;\r\n\t\tstring x;\r\n\t\tcin >> n >> a >> b >> x;\r\n\r\n\t\tfor (int i = 0; i <= n; i++)\r\n\t\t\tfor (int j = 0; j <= n; j++)\r\n\t\t\t\tfor (int k = 0; k < a; k++)\r\n\t\t\t\t\tfor (int l = 0; l < b; l++)\r\n\t\t\t\t\t\tdp[i][j][k][l] = false;\r\n\r\n\t\tdp[0][0][0][0] = true;\r\n\r\n\t\tfor(int taken = 0; taken < n; taken++)\r\n\t\t\tfor(int red = 0; red <= taken; red++)\r\n\t\t\t\tfor(int remA = 0; remA < a; remA++)\r\n\t\t\t\t\tfor(int remB = 0; remB < b; remB++)\r\n\t\t\t\t\t\tif (dp[taken][red][remA][remB])\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// red transition\r\n\t\t\t\t\t\t\tdp[taken + 1][red + 1][(remA  + (x[taken] - '0')) % a][remB] = true;\r\n\t\t\t\t\t\t\tsert[taken + 1][red + 1][(remA  + (x[taken] - '0')) % a][remB] = { true, remA };\r\n\r\n\t\t\t\t\t\t\t// black transition\r\n\t\t\t\t\t\t\tdp[taken + 1][red][remA][(remB  + (x[taken] - '0')) % b] = true;\r\n\t\t\t\t\t\t\tsert[taken + 1][red][remA][(remB  + (x[taken] - '0')) % b] = { false, remB };\r\n\t\t\t\t\t\t}\r\n\r\n\t\tint bestRed = 0;\r\n\r\n\t\tfor (int red = 1; red < n; red++)\r\n\t\t\tif (dp[n][red][0][0] && abs(red - (n - red)) <= abs(bestRed - (n - bestRed)))\r\n\t\t\t\tbestRed = red;\r\n\r\n\t\tif (bestRed == 0)\r\n\t\t{\r\n\t\t\tcout << \"-1\\n\";\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tint taken = n;\r\n\t\t\tint red = bestRed;\r\n\t\t\tint remA = 0;\r\n\t\t\tint remB = 0;\r\n\t\t\tstring ans = \"\";\r\n\t\t\t\r\n\t\t\twhile (taken > 0)\r\n\t\t\t{\r\n\t\t\t\tauto way = sert[taken][red][remA][remB];\r\n\t\t\t\tif (way.first)\r\n\t\t\t\t{\r\n\t\t\t\t\tred--;\r\n\t\t\t\t\tremA = way.second;\r\n\t\t\t\t\tans.push_back('R');\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tremB = way.second;\r\n\t\t\t\t\tans.push_back('B');\r\n\t\t\t\t}\r\n\t\t\t\ttaken--;\r\n\t\t\t}\r\n\r\n\t\t\treverse(ans.begin(), ans.end());\r\n\t\t\tcout << ans << '\\n';\r\n\t\t}\r\n\t}\r\n\r\n\treturn 0;\r\n}"
}