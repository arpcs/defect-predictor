{
    "id": 212271979,
    "contestId": 1187,
    "creationTimeSeconds": 1688585212,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1187,
        "index": "D",
        "name": "Subarray Sorting",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "data structures",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1187,
        "members": [
            {
                "handle": "I_hate_Dasha_Lobas"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1561905900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 173,
    "timeConsumedMillis": 545,
    "memoryConsumedBytes": 225792000,
    "source": "\r\n#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <map>\r\n#include <set>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\n#include <numeric>\r\n#include <cmath>\r\n#include <random>\r\n#include <queue>\r\n#include <cstdlib>\r\n#include <stack>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n\r\n\r\nvector <stack <int>> vs;\r\nvector <int> tree;\r\nint s = 1;\r\n\r\n\r\n\r\nbool f = true;\r\n\r\nvoid modif(int ind, int l, int r, int indx)\r\n{\r\n    if (r - l == 1)\r\n    {\r\n        if (vs[l].size() > 1)\r\n        {\r\n            vs[l].pop();\r\n        }\r\n        else\r\n        {\r\n            f = false;\r\n        }\r\n        tree[ind] = vs[l].top();\r\n        return;\r\n    }\r\n\r\n    int m = (r + l) / 2;\r\n    if (indx < m)\r\n        modif(ind * 2 + 1, l, m, indx);\r\n    else\r\n        modif(ind * 2 + 2, m, r, indx);\r\n    tree[ind] = min(tree[ind * 2 + 1], tree[ind * 2 + 2]);\r\n}\r\n\r\nint get(int ind, int l, int r, int rx)\r\n{\r\n    if (r - l == 1)\r\n        return l;\r\n    int m = (r + l) / 2;\r\n    if (tree[ind * 2 + 1] < rx)\r\n        return get(ind * 2 + 1, l, m, rx);\r\n    return get(ind * 2 + 2, m, r, rx);\r\n}\r\nsigned main()\r\n{\r\n\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n\r\n    int t;\r\n    cin >> t;\r\n    while (t--)\r\n    {\r\n        int n;\r\n        cin >> n;\r\n\r\n        vs.resize(n + 1);\r\n\r\n        map <int, int> nums;\r\n        vector <int> a(n);\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            cin >> a[i];\r\n            nums[a[i]]++;\r\n        }\r\n        vector <int> b(n);\r\n        f = true;\r\n\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            cin >> b[i];\r\n            nums[b[i]]--;\r\n            if (nums[b[i]] < 0)\r\n                f = false;\r\n            if (nums[b[i]] == 0)\r\n                nums.erase(b[i]);\r\n        }\r\n        if (nums.size() > 0)\r\n            f = false;\r\n\r\n        for (int i = 0; i <= n; i++)\r\n            vs[i].push(999999999);\r\n        for (int i = n - 1; i >= 0; i--)\r\n        {\r\n            vs[a[i]].push(i);\r\n        }\r\n        s = 1;\r\n        while (s < (n+1))\r\n            s *= 2;\r\n        tree.clear();\r\n        tree.resize(s * 2 , 999999999);\r\n        for (int i = 0; i <= n; i++)\r\n        {\r\n            tree[s - 1 + i] = vs[i].top();\r\n        }\r\n        for (int i = s - 2; i >= 0; i--)\r\n        {\r\n            tree[i] = min(tree[i * 2 + 1], tree[i * 2 + 2]);\r\n        }\r\n        for (int i = 0 ; i < n ;  i++)\r\n        {\r\n            int ind = vs[b[i]].top();\r\n            int y = get(0, 0, s, ind);\r\n            if (y < b[i])\r\n            {\r\n                f = false;\r\n            }\r\n            modif(0 , 0 , s , b[i]);\r\n        }\r\n        if (f == true)\r\n            cout << \"YES\\n\";\r\n        else\r\n            cout << \"NO\\n\";\r\n    }\r\n}"
}