{
    "id": 213186195,
    "contestId": 1187,
    "creationTimeSeconds": 1689024256,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1187,
        "index": "D",
        "name": "Subarray Sorting",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "data structures",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1187,
        "members": [
            {
                "handle": "eyadhjarray111"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1561905900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 48,
    "timeConsumedMillis": 1543,
    "memoryConsumedBytes": 168652800,
    "source": "#include <bits/stdc++.h>\r\n#include <cstring>\r\n#include <math.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double db;\r\n//typedef double db;\r\n#define ss second\r\n#define ff first\r\n#define pb push_back\r\n#define vi vector<int>\r\n#define pii pair<int,int>\r\n#define vii vector<pii>\r\n#define vl vector<ll>\r\n#define pll pair<ll,ll>\r\n#define vll vector<pll>\r\n#define vd vector<db>\r\n#define pdd  pair<db,db>\r\n#define vdd  vector<pdd>\r\n#define mll map <ll,ll>\r\n#define sl set <ll>\r\n#define sll set <pll>\r\n#define f(i,j,k,l) for(ll i=j;i<k;i+=l)\r\n#define fj(j,m) for(auto j=m.begin();j!=m.end();j++)\r\n#define yes cout<<\"YES\"<<endl;\r\n#define no cout<<\"NO\"<<endl;\r\n//#define endl \"\\n\"\r\nconst db pi=3.14159265359;\r\nconst ll mod = 998244353;\r\nconst db EPS = 0.000000001; // 1 e -9\r\nconst ll inf = (ll)1e18;\r\nll gcd(ll a , ll b) {return b ? gcd(b , a % b) : a ;}\r\nll lcm(ll a , ll b) {return (a * b) / gcd(a , b);}\r\n\r\nll n1;\r\n\r\nll mrg (ll &x ,ll &y)\r\n{\r\n    return x+y;\r\n}\r\n\r\nstruct segment_tree\r\n{\r\n    vector<ll> tree;\r\n    void clear()\r\n    {\r\n        tree.clear();\r\n    }\r\n\r\n    void init(int num, const vector<ll>& a)\r\n    {\r\n        n1 = num;\r\n        tree.assign(4 * n1, 0ll);\r\n        build(a);\r\n    }\r\n\r\n    void build(const vector<ll>& a, int id=0,int ns = 0, int ne = n1-1)\r\n    {\r\n        if(ns==ne){\r\n            tree[id] = a[ns];\r\n            return ;\r\n        }\r\n        int l = 2*id+1;\r\n        int r = l+1;\r\n        int md = ns+(ne-ns)/2;\r\n        build(a,l, ns, md);\r\n        build(a,r, md+1, ne);\r\n        tree[id] = mrg(tree[l],tree[r]);\r\n    }\r\n\r\n\r\n    ll query(int qs, int qe, int id=0, int ns=0, int ne=n1-1)\r\n    {\r\n        if(ns>qe || qs>ne){\r\n            return 0; ///infnity\r\n        }\r\n        if(qs<=ns && qe>=ne){\r\n            return tree[id];\r\n        }\r\n        int l = 2*id+1;\r\n        int r = l+1;\r\n        int md = ns+(ne-ns)/2;\r\n        ll ndl = query(qs, qe, l, ns, md);\r\n        ll ndr = query(qs, qe,r, md+1,ne);\r\n        return mrg(ndl,ndr );\r\n    }\r\n\r\n    void upd(int pos , int val , int id=0, int ns=0,int ne=n1-1)\r\n    {\r\n        if(ns>pos || pos>ne){\r\n            return;\r\n        }\r\n        if(ns==ne){\r\n            tree[id]=val;\r\n            return ;\r\n        }\r\n        int l = 2*id+1;\r\n        int r = l+1;\r\n        int md = ns+(ne-ns)/2;\r\n        upd(pos, val,l, ns, md);\r\n        upd(pos, val, r, md+1, ne);\r\n        tree[id] = mrg(tree[l],tree[r]);\r\n    }\r\n} sta , stb ,stc ,ste ,sts ,stt ,stu ,stv;\r\n\r\nint run_case() {\r\n    ll x, y, r, z, l, q, k, n, w, p, h;\r\n    cin >> k ;\r\n    sta.clear();\r\n    stb.clear();\r\n    vl m1(k+1),m2(k+1);\r\n    vector<vl> a(k+1),b(k+1),d(k+1),e(k+1),o(k+1),g(k+1),s1(k+1),t(k+1),u(k+1),v(k+1);\r\n    f(i,0,k,1)\r\n    {\r\n        cin >> x ;\r\n        a[x].pb(i);\r\n        m1[x]++;\r\n    }\r\n    f(i,0,k,1)\r\n    {\r\n        cin >> y;\r\n        b[y].pb(i);\r\n        m2[y]++;\r\n    }\r\n    f(i,0,k+1,1)\r\n    {\r\n        m1[i]-=m2[i];\r\n        if (m1[i]>0)\r\n        {\r\n            no;\r\n            return 0;\r\n        }\r\n    }\r\n    vl c(k,0);\r\n    sta.init(k,c);\r\n    stb.init(k,c);\r\n    ste.init(k,c);\r\n    stc.init(k,c);\r\n    sts.init(k,c);\r\n    stt.init(k,c);\r\n    stu.init(k,c);\r\n    stv.init(k,c);\r\n    for(ll i=k;i>=0;i--)\r\n    {\r\n        f(j,0,a[i].size(),1)\r\n        {\r\n            d[i].pb(sta.query(a[i][j],k-1));\r\n            sta.upd(a[i][j],1);\r\n            s1[i].pb(sts.query(a[i][j],k-1));\r\n            sts.upd(a[i][j],i*i);\r\n        }\r\n        f(j,0,b[i].size(),1)\r\n        {\r\n            e[i].pb(stb.query(b[i][j],k-1));\r\n            stb.upd(b[i][j],1);\r\n            t[i].pb(stt.query(b[i][j],k-1));\r\n            stt.upd(b[i][j],i*i);\r\n        }\r\n    }\r\n    f(i,0,k+1,1)\r\n    {\r\n        f(j,0,a[i].size(),1)\r\n        {\r\n            g[i].pb(stc.query(a[i][j],k-1));\r\n            stc.upd(a[i][j],1);\r\n            u[i].pb(stu.query(a[i][j],k-1));\r\n            stu.upd(a[i][j],i*i);\r\n        }\r\n        f(j,0,b[i].size(),1)\r\n        {\r\n            o[i].pb(ste.query(b[i][j],k-1));\r\n            ste.upd(b[i][j],1);\r\n            v[i].pb(stv.query(b[i][j],k-1));\r\n            stv.upd(b[i][j],i*i);\r\n        }\r\n    }\r\n    f(i,0,k+1,1)\r\n    {\r\n        f(j,0,d[i].size(),1)\r\n        {\r\n            if (d[i][j]>e[i][j] || s1[i][j]!=t[i][j] && d[i][j]==e[i][j] || g[i][j]==o[i][j] && u[i][j]!=v[i][j] || g[i][j]<o[i][j])\r\n            {\r\n                no;\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n    yes;\r\n    return 0;\r\n}\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    ll t = 1;cin >> t;\r\n    while (t--) {\r\n        run_case();\r\n    }\r\n    return 0;\r\n}\r\n"
}