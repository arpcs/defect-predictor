{
    "id": 228684552,
    "contestId": 445,
    "creationTimeSeconds": 1697636056,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 445,
        "index": "B",
        "name": "DZY Loves Chemistry",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1400,
        "tags": [
            "dfs and similar",
            "dsu",
            "greedy"
        ]
    },
    "author": {
        "contestId": 445,
        "members": [
            {
                "handle": "Ravindra45"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1404651900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n// #include <ext/pb_ds/assoc_container.hpp>\r\n// #include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace std;\r\n// using namespace __gnu_pbds;\r\n\r\n// typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update>pbds;\r\n//  pbds A;\r\n//  finding kth element\r\n//  *A.find_by_order(k)\r\n//  finding number of elements smaller than x\r\n//  A.order_of_key(x)\r\n//----------------------------------------------------------------------------------------------------------------------------------------------//\r\n#define int long long int\r\n#define endl \"\\n\"\r\n#define pb emplace_back\r\n#define all(v) v.begin(), v.end()\r\n#define rall(v) v.rbegin(), v.rend()\r\n#define sum(v) (accumulate(v.begin(), v.end(), 0ll))\r\n#define fo(i, n) for (i = 0; i < n; i++)\r\n#define sortall(v) sort(all(v))\r\n#define maxi(v) *max_element(v.begin(), v.end());\r\n#define mini(v) *min_element(v.begin(), v.end());\r\n#define yes cout << \"YES\" << endl\r\n#define no cout << \"NO\" << endl\r\n#define vec(v) vector<int> v\r\n#define cout(n) cout << n << endl\r\n#define sz(v) v.size()\r\n#define lowb(a, x) (lower_bound((a).begin(), (a).end(), (x)) - (a).begin())\r\n#define uppb(a, x) (upper_bound((a).begin(), (a).end(), (x)) - (a).begin())\r\n#define ook order_of_key\r\n#define fbo find_by_order //  *ITERATOR* pointing to the kth element (0 order)\r\n\r\nconst int N = 998244353;\r\nconst int mod = 1e9 + 7;\r\ndouble PI = acos(-1);\r\n// int isprime[1000009];\r\n\r\n// generate(v.begin(), v.end(), randomize);\r\n\r\ntemplate <class T>\r\nistream &operator>>(istream &stream, vector<T> &v)\r\n{\r\n    for (T &vi : v)\r\n    {\r\n        stream >> vi;\r\n    }\r\n    return stream;\r\n}\r\n\r\ntemplate <class T>\r\nostream &operator<<(ostream &stream, vector<T> &v)\r\n{\r\n    for (T &vi : v)\r\n    {\r\n        stream << vi << ' ';\r\n    }\r\n    return stream;\r\n}\r\n// #############################################################################################################################################//\r\nbool sortbyCond(const pair<int, int> &a, const pair<int, int> &b)\r\n{\r\n    if (a.first != b.first)\r\n        return (a.first < b.first);\r\n    else\r\n        return (a.second > b.second);\r\n}\r\n\r\nbool sortrev(const pair<int, int> &a, const pair<int, int> &b)\r\n{\r\n    return (a.first > b.first);\r\n}\r\n\r\nint randomize()\r\n{\r\n    return (rand() % 100);\r\n}\r\n\r\nint expo(int a, int b)\r\n{\r\n    int ans = 1;\r\n    while (b > 0)\r\n    {\r\n        if (b & 1)\r\n        {\r\n            ans = (ans * a) % mod;\r\n        }\r\n        a = (a * a) % mod;\r\n        b >>= 1;\r\n    }\r\n    return ans;\r\n}\r\n\r\n// to express the number in sum of power of 2\r\n// while(n>0)\r\n// {\r\n//     if(n%2==1)\r\n//     {\r\n//         cout<<pow(2,i)<<\" \"\r\n//     }\r\n//     i++;\r\n//     n=n/2;\r\n// }\r\n\r\n/*void sieve(int n)\r\n{\r\n    memset(isprime,-1,sizeof(isprime));\r\n    isprime[1]=1;\r\n    for(int i=2;i<=n;i++)\r\n    {\r\n        if(isprime[i]==-1)\r\n        {\r\n            for(int j=i;j<=n;j+=i)\r\n            {\r\n                if(isprime[i]==-1)\r\n                {\r\n                    isprime[i]=i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}*/\r\nint n, m;\r\nbool mark[60];\r\nbool mat[60][60];\r\n \r\nvoid dfs(int index)\r\n{\r\n\tmark[index] = true;\r\n\tfor(int i = 0; i < n; i++)\r\n\t\tif(mat[index][i] && !mark[i])\r\n\t\t\tdfs(i);\r\n}\r\n// ##############################################################################################################################################//\r\nvoid accepted()\r\n{\r\n    cin >> n >> m;\r\n\tint a, b;\r\n\tfor(int i = 0; i < m; i++)\r\n    {\r\n\t\tcin >> a >> b;\r\n\t\tmat[a - 1][b - 1] = mat[b - 1][a - 1] = true;\r\n\t}\r\n\tint cnt = 0;\r\n\tfor(int i = 0; i < n; i++)\r\n    {\r\n\t\tif(!mark[i])\r\n        {\r\n\t\t\tcnt++;\r\n\t\t\tdfs(i);\r\n\t\t}\r\n\t}\r\n\tcout <<(1<<(n-cnt))<< endl;\r\n}\r\n    // #############################################################################################################################################//\r\n    int32_t main()\r\n    {\r\n\r\n        int T = 1;\r\n       // cin >> T;\r\n        while (T--)\r\n        {\r\n            accepted();\r\n        }\r\n        return 0;\r\n    }\r\n    //----------------------------------------------------------------------------------------------------------------------------------------"
}