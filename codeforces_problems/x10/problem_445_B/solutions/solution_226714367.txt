{
    "id": 226714367,
    "contestId": 445,
    "creationTimeSeconds": 1696498667,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 445,
        "index": "B",
        "name": "DZY Loves Chemistry",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1400,
        "tags": [
            "dfs and similar",
            "dsu",
            "greedy"
        ]
    },
    "author": {
        "contestId": 445,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1404651900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 32,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\n\nusing namespace std;\nconst long long mod = 1e9 + 7;\nconst double PI = acos(-1.0);\n#define IOS ios::sync_with_stdio(false),cin.tie(NULL),cout.tie(NULL);\n#define ll long long\n#define ve vector<ll>\n#define graph vector<ve>\n#define tc          ll testcase;   cin>>testcase;   while(testcase--)\n#define all(num)      (num).begin(), (num).end()\n\n//             \"\u0648\u064e\u0623\u064e\u0646 \u0644\u0651\u064e\u064a\u0652\u0633\u064e \u0644\u0650\u0644\u0652\u0625\u0650\u0646\u0633\u064e\u0627\u0646\u0650 \u0625\u0650\u0644\u0651\u064e\u0627 \u0645\u064e\u0627 \u0633\u064e\u0639\u064e\u0649 \ufd3f39\ufd3e \u0648\u064e\u0623\u064e\u0646\u0651\u064e \u0633\u064e\u0639\u0652\u064a\u064e\u0647\u064f \u0633\u064e\u0648\u0652\u0641\u064e \u064a\u064f\u0631\u064e\u0649 \ufd3f40\ufd3e \u062b\u064f\u0645\u0651\u064e \u064a\u064f\u062c\u0652\u0632\u064e\u0627\u0647\u064f \u0627\u0644\u0652\u062c\u064e\u0632\u064e\u0627\u0621 \u0627\u0644\u0652\u0623\u064e\u0648\u0652\u0641\u064e\u0649 \"\n//                                  My way to My dream\n//#ifdef ONLINE_JUDGE\n//    freopen(\"input.txt\", \"r\", stdin);\n//    freopen(\"output.txt\", \"w\", stdout);\n//#endif\n//////////////////////////////////////////////////////////////////////////////////////////////////\nll byfar = 1 ;\nvoid dfs(ll i  , graph &g ,vector<bool> &vis  )\n{\n    vis [ i ] = 1 ;\n    byfar*=2;\n    for(auto x : g[i])\n    {\n        if(!vis[x])\n            dfs(x, g, vis);\n    }\n}\nint main() {\nll n ,  m ; cin >> n >> m  ;\ngraph g (n+1);\nvector<bool> vis (n+1 , 0 );\n    for (int i = 0; i < m; ++i) {\n       ll frm , to ; cin >> frm >> to ;\n       g[frm].push_back(to);\n       g[to].push_back(frm);\n    }\n    ll mlt=1;\n    for (int i = 1; i <= n ; ++i) {\n        if(!vis[i]) {\n            byfar=1;\n            dfs(i, g, vis );\n           mlt *= byfar/2;\n        }\n    }\n    cout << mlt << '\\n' ;\n}\n   \t  \t\t    \t   \t   \t\t \t\t\t\t \t \t"
}