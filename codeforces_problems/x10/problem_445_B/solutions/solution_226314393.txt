{
    "id": 226314393,
    "contestId": 445,
    "creationTimeSeconds": 1696258641,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 445,
        "index": "B",
        "name": "DZY Loves Chemistry",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1400,
        "tags": [
            "dfs and similar",
            "dsu",
            "greedy"
        ]
    },
    "author": {
        "contestId": 445,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1404651900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/*\n    Author Yousef__sobhi\n*/\n#include <iostream>\n#include <string>\n#include <sstream>\n#include <iomanip> \n#include <math.h>\n#include <stdio.h>\n#include <assert.h>\n#include <string.h>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <map>\n#include <set>\n#include <functional>\n#include <algorithm>\n#include <unordered_map>\n#include <unordered_set>\n#include <bitset>\n#include <complex>\nusing namespace std;\n#define ll long long int\n#define endl \"\\n\"\n#define fastread() ios_base::sync_with_stdio(false);cin.tie(NULL);\n#define pb( x ) push_back( x )\n#define pf( x ) push_front( x )\n#define all(ch) ch.begin() , ch.end() \n#define allr(ch) ch.rbegin() , ch.rend()\n#define kill(x) cout << x << endl ;\n#define ON(n , k) ( (n) | (1 << (k)) )\n#define OFF(n , k) ((n) & ~(1 << (k)))\n#define isON(n , k) (((n) >> k) & 1)\n#define F first\n#define S second\nconst long long MAX = 2e18;\nconst long long MIN = -2e18;\nconst long long MOD = 998244353 ;\nconst long long N = 1e5 + 10 ;\nvoid files(){\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n}\nvector <ll> getDivisors(ll a){\n    vector <ll> vvec ;\n    ll i = 1 ;\n    for (i = 1 ; i * i < a ; i++){\n        if (a % i == 0){\n            vvec.pb(i) ;\n            vvec.pb(a / i) ;\n        }\n    }\n    if (i * i == a)\n        vvec.pb(i) ;\n    return vvec ;\n}\nbool isprime (ll n) {\n    if (n < 2)\n        return false ;\n    for (int i = 2 ; i * i <= n ; i ++){\n        if (n % i == 0)\n            return false ;\n    }\n    return true ;\n}\nstring getBinary (ll n) {\n    string ret = \"\" ;\n    for (ll i = 63 ; i >= 0 ; i --){\n        if (isON(n , i)){\n            ret += \"1\" ;\n        }\n        else\n            ret += \"0\" ;\n    }\n    return ret ;\n}\n// bool is_prime[N] ;\n// void sieve(){ \n//     // O(N)\n//     for (int i = 0 ; i < N ; i++)\n//         is_prime[i] = true ;\n//     is_prime[0] = 0 ; \n//     is_prime[1] = 0 ;\n//     for (ll i = 2 ; i * i < N ; i++){\n//         if (is_prime[i]){\n//             for (ll k = i * i ; k < N ; k += i)\n//                 is_prime[k] = false ;\n//         }\n//     }\n// }\nll mod(ll a , ll b) {\n    return ((a % b + b) % b) ;\n}\nvector <pair<ll , ll>> getprimefactors(ll n) {\n    vector <pair<ll ,ll>> ret ;\n    for (int i = 2 ; i * i <= n ; i++){\n        int e = 0 ;\n        while (n % i == 0){\n            n /= i ;\n            e ++ ;\n        }\n        if (e > 0){\n            ret.push_back({i , e}) ;\n        }\n    }\n    if (n > 1)\n        ret.push_back({n , 1}) ;\n    return ret ;\n}\nll lcm(ll a , ll b) {\n    return a * (b / __gcd(a , b)) ;\n}\nll FastPow(ll a , ll b) {\n    if (b == 0) return 1 ;\n    if (b == 1) return a ;\n    if (b % 2){\n        return (a % MOD * FastPow(a , b / 2) % MOD * FastPow(a , b / 2) % MOD) % MOD ; \n    }\n    else {\n        return (FastPow(a , b / 2) % MOD * FastPow(a , b / 2) % MOD) % MOD ; \n    }\n}\nll ModInverse (ll x){\n    return FastPow(x , MOD - 2) ;\n}\nll fac(ll n){\n    ll x = 1 ;\n    for (ll i = 2 ; i <= n ; i++){\n        x *= i ;\n        x %= MOD ;\n    }\n    return x ;\n}\nll nPr(ll a , ll b){\n    if (b > a)\n        return 0 ;\n    return (fac(a) * ModInverse(a - b)) % MOD;\n}\nll nCr(ll a , ll b){\n    if (b > a)\n        return 0 ;\n    return (fac(a) * ModInverse(a - b) * ModInverse(b)) % MOD ;\n}\n//=============================START=================================\nvector <int> adj[N] ;\nint vis[N] ;\nint n , m , res ; \nvoid dfs (int i) {\n    vis[i] = 1 ;\n    for (auto x : adj[i]) {\n        if (!vis[x]){\n            res ++ ;\n            dfs(x) ;\n        }\n    }\n}\nvoid solve (){\n    cin >> n >> m ;\n    for (int i = 1 ; i <= m ; i++){\n        int a , b ; cin >> a >> b ; \n        adj[a].pb(b) ;\n        adj[b].pb(a) ;\n    }\n    for (int i = 1 ; i <= n ; i ++){\n        if (!vis[i])\n            dfs(i) ;\n    }\n    kill((1 << res)) ;\n}\n//==============================END==================================\nint main() {\n    fastread()\n    // files() ;\n    ll Test ;\n    Test = 1 ;\n    // cin >> Test ;\n    sieve() ;\n    while (Test --)\n    {\n        cout << fixed << showpoint << setprecision(9) ;\n        solve() ;\n    }\n} \n \t  \t \t \t\t\t\t  \t     \t   \t  \t\t\t"
}