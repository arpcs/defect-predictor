{
    "id": 210826907,
    "contestId": 145,
    "creationTimeSeconds": 1687580031,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 145,
        "index": "C",
        "name": "Lucky Subsequence",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ]
    },
    "author": {
        "contestId": 145,
        "members": [
            {
                "handle": "vjudge4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1327215600
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 58,
    "timeConsumedMillis": 498,
    "memoryConsumedBytes": 3276800,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n\n#define el '\\n'\nusing ll = long long;\n\nconst ll md =1e9+7;\nll n, k, maxi, arr[100003], dem[2500], cnt, dp[100003], fact[100003], inv[100003];\n\nll pw(ll x, ll y){\n\tll ans = 1;\n\twhile(y > 0){\n\t\tif(y & 1) ans = (ans * x) % md;\n\t\tx = (x*x) % md;\n\t\ty >>= 1;\n\t}\n\treturn ans;\n}\n\nll C(ll n,ll k){\n\tif(n < k) return 0;\n\treturn ((fact[n]*inv[k] % md)*inv[n-k])%md;\n}\n\nint main(){\n\tios::sync_with_stdio(false); cin.tie(0);\n\tcin >> n >> k;\n\t\n\tfact[0] = 1;\n\tinv[0] = 1;\n\tfor(int i = 1; i <= n; i++){\n\t\tfact[i] = (fact[i-1]*i) % md;\n\t\tinv[i] = pw(fact[i], md - 2);\n\t}\n\t\n\tfor(ll i = 1; i <= n; i++){\n\t\tcin >> arr[i];\n\t\tll res = 1;\n\t\tll x = arr[i];\n\t\tbool flag = true;\n\t\twhile(x > 0){\n\t\t\tif(x % 10 == 4) res = res << 1;\n\t\t\telse if(x % 10 == 7) res = res << 1 | 1;\n\t\t\telse{\n\t\t\t\tflag = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tx /= 10;\n\t\t}\n\t\tif(flag){\n\t\t\tmaxi = max(maxi, res);\n\t\t\tdem[res]++;\n\t\t\tcnt++;\t\n\t\t}\n\t}\n\tdp[0] = 1;\n\tfor(ll i = 1; i <= maxi; i++){\n\t\tfor(ll j = k; j > 0; j--){\n\t\t\tdp[j] = (dp[j] + (dp[j-1]*dem[i]) % md) % md;\n\t\t}\n\t}\n\tll ans = 0;\n\tfor(ll lucky = 0; lucky <= k; lucky++){\n\t\tans = (ans + (dp[lucky]*C(n-cnt,k-lucky)) % md) % md;\n\t}\n\tcout << ans << el;\n\treturn 0;\n}\n   \t\t \t \t\t \t\t     \t    \t  \t"
}