{
    "id": 173797578,
    "contestId": 145,
    "creationTimeSeconds": 1664359211,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 145,
        "index": "C",
        "name": "Lucky Subsequence",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ]
    },
    "author": {
        "contestId": 145,
        "members": [
            {
                "handle": "5_Lei"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1327215600
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 74752000,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int maxn =  1e5+5;\nconst int inf = 1e9;\nconst int N = 3e3+5;\nconst ll Inf = 1e18;\nconst ll mod = 1e9+7;\nint R()\n{\n    int x = 0,f = 1;\n    char c = getchar();\n    while(c>'9' || c<'0')\n    {\n        if(c=='-')f=-1;\n        c = getchar();\n    }\n    while(c>='0' && c<='9')\n    {\n        x = (x<<1)+(x<<3)+(c^48);\n        c = getchar();\n    }\n    return x*f;\n}\n\nll inv[maxn],fac[maxn],a[maxn],dp[N][N];\n\nmap<ll,int>mp;\nvector<ll>V;\n\nbool check(ll x)\n{\n    while(x)\n    {\n        if(x % 10 != 4 && x % 10 != 7)return 0;\n        x /= 10;\n    }\n    return 1;\n}\n\nll qpow(ll a,ll b)\n{\n    ll ans = 1;\n    while(b)\n    {\n        if(b&1)ans = ans * a % mod;\n        a = a * a % mod;\n        b >>= 1;\n    }\n    return ans;\n}\n\nll C(ll n,ll m){return fac[n] * inv[m] % mod * inv[n-m] % mod;}\n\nvoid Lei()\n{\n    ll n = R(),k = R(),cnt = 0,ans = 0;\n    for(int i = 1 ; i <= n ; i++)\n    {\n        a[i] = R();\n        if(check(a[i]))\n        {\n            if(!mp[a[i]])V.push_back(a[i]);\n            mp[a[i]]++;\n        }   \n        else cnt++;\n    }\n    \n    fac[0] = 1,inv[0] = 1;\n    for(int i = 1 ; i <= n ; i++)fac[i] = fac[i-1] * i % mod;\n    inv[n] = qpow(fac[n],mod-2);\n    for(ll i = n-1 ; i >= 1 ; i--)inv[i] = inv[i+1] * (i + 1ll) % mod;\n\n    ll m = V.size();\n    dp[0][0] = 1;\n    for(int i = 1 ; i <= m ; i++)\n    {\n        dp[i][0] = 1;\n        for(int j = 1 ; j <= i + 1 ; j++)\n            dp[i][j] = (dp[i-1][j-1] + dp[i-1][j]) * mp[V[i-1]] % mod;\n    }\n    \n\n    for(int i = 0 ; i <= min(m,k) ; i++)\n        ans = (ans + dp[m][i] * C(cnt,k-i) % mod) % mod;\n    \n    // for(int i = 0 ; i <= m ; i++)printf(\"%d %lld %lld\\n\",i,m,dp[m][i]);\n    printf(\"%lld\\n\",ans);\n}\n\nint main()\n{\n    Lei();\n    return 0;\n}"
}