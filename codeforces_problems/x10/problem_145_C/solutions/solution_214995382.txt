{
    "id": 214995382,
    "contestId": 145,
    "creationTimeSeconds": 1690005589,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 145,
        "index": "C",
        "name": "Lucky Subsequence",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ]
    },
    "author": {
        "contestId": 145,
        "members": [
            {
                "handle": "Morning_Glory"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1327215600
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 58,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 1024000,
    "source": "#include <cstdio>\r\n#include <map>\r\nusing namespace std;\r\nconst int maxn = 1e5 + 10;\r\nconst int maxc = 1025;\r\nconst int mod = 1e9 + 7;\r\nint n, m;\r\nint f[maxc], fac[maxn], inv[maxn];\r\nmap <int, int> num;\r\nbool check (int x)\r\n{\r\n    while (x) {\r\n        int t = x % 10;\r\n        if (t != 4 && t != 7)   return false;\r\n        x /= 10;\r\n    }\r\n    return true;\r\n}\r\nint ksm (int a, int b)\r\n{\r\n    int s = 1;\r\n    for ( ; b; b >>= 1, a = 1ll * a * a % mod)\r\n        if (b & 1)  s = 1ll * s * a % mod;\r\n    return s;\r\n}\r\nint C (int n, int m)\r\n{\r\n    if (n < m)  return 0;\r\n    return 1ll * fac[n] * inv[m] % mod * inv[n - m] % mod;\r\n}\r\nint main ()\r\n{\r\n    scanf(\"%d%d\", &n, &m);\r\n\r\n    fac[0] = inv[0] = 1;\r\n    for (int i = 1; i <= n; ++i)    fac[i] = 1ll * fac[i - 1] * i % mod;\r\n    inv[n] = ksm(fac[n], mod - 2);\r\n    for (int i = n - 1; i >= 1; --i)    inv[i] = 1ll * inv[i + 1] * (i + 1) % mod;\r\n\r\n    int tot = 0;\r\n    for (int i = 1, a; i <= n; ++i) {\r\n        scanf(\"%d\", &a);\r\n        if (check(a))   ++num[a];\r\n        else    ++tot;\r\n    }\r\n\r\n    int cnt = num.size();\r\n    f[0] = 1;\r\n    for (map <int, int> :: iterator it = num.begin(); it != num.end(); ++it) {\r\n        int s = it->second;\r\n        for (int i = cnt; i >= 1; --i)  f[i] = (f[i] + 1ll * f[i - 1] * s % mod) % mod;\r\n    }\r\n\r\n    int ans = 0;\r\n    for (int i = m > cnt? cnt: m; i >= 0; --i) \r\n        ans = (ans + 1ll * f[i] * C(tot, m - i) % mod) % mod;\r\n    printf(\"%d\\n\", ans);\r\n    return 0;\r\n}"
}