{
    "id": 214359117,
    "contestId": 145,
    "creationTimeSeconds": 1689686919,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 145,
        "index": "C",
        "name": "Lucky Subsequence",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ]
    },
    "author": {
        "contestId": 145,
        "members": [
            {
                "handle": "NgoTham"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1327215600
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 1740800,
    "source": "#include <bits/stdc++.h>\r\n#define FastIO ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)\r\n#define ll long long\r\n#define PB push_back\r\n#define ALL(v) (v).begin(), (v).end()\r\n#define FOR(i, a, b) for (int i = (a), _b = (b); i <= _b; i++)\r\n#define FORD(i, b, a) for (int i = (b), _a = (a); i >= _a; i--)\r\n#define fi   first\r\n#define se   second\r\n#define BIT(x, i) (((x) >> (i)) & 1)\r\n\r\nusing namespace std;\r\n\r\n/** END OF TEMPLATE **/\r\n\r\nconst int mxN = 1e5 + 5;\r\nconst int MOD = 1e9 + 7;\r\nint n, k;\r\nbool check(int x) {\r\n    while(x != 0) {\r\n        if(x % 10 == 4 || x % 10 == 7) return 1;\r\n        x /= 10;\r\n    }\r\n    return 0;\r\n}\r\n\r\nint fact[mxN+5], inv[mxN+5];\r\nint Pow(int a, int b) {\r\n    int ret = 1;\r\n    while(b) {\r\n        //cerr << a << ' ' << b << '\\n';\r\n        if(b & 1) ret = 1ll*ret*a % MOD;\r\n        a = 1ll*a*a % MOD;\r\n        b >>= 1;\r\n    }\r\n    return ret;\r\n}\r\nint inverse(int x, int m) {\r\n    return Pow(x, m-2);\r\n}\r\nint comb(int k, int n) {\r\n    return k > n ? 0 : 1ll*fact[n] * inv[n-k] % MOD * inv[k] % MOD;\r\n}\r\nvoid precalc() {\r\n    fact[0] = 1;\r\n    FOR(i, 1, mxN) fact[i] = 1ll*fact[i-1]*i % MOD;\r\n    inv[mxN] = inverse(fact[mxN], MOD);\r\n    FORD(i, mxN, 1) inv[i-1] = 1ll*inv[i]*i % MOD;\r\n}\r\nint a[mxN], f[mxN];\r\nmap<int, int> cnt;\r\nsigned main()\r\n{\r\n    FastIO;\r\n    //freopen(\".inp\", \"r\", stdin);\r\n    //freopen(\".out\", \"w\", stdout);\r\n    cin >> n >> k;\r\n    FOR(i, 1, n) cin >> a[i];\r\n    precalc();\r\n    int num = 0;\r\n    FOR(i, 1, n)\r\n        if(check(a[i])) cnt[a[i]]++;\r\n        else num++;\r\n    f[0] = 1;\r\n    for(auto it : cnt) {\r\n        int x = it.se;\r\n        FORD(i, k, 1) {\r\n            f[i] += 1ll*f[i-1]*x % MOD;\r\n            if(f[i] >= MOD) f[i] -= MOD;\r\n        }\r\n    }\r\n    int res = 0;\r\n    FOR(i, 0, k) {\r\n        res += f[i]*comb(k - i, num);\r\n        if(res >= MOD) res -= MOD;\r\n    }\r\n    cout << res;\r\n    return 0;\r\n}\r\n\r\n/*\r\n6 2\r\n4 4 7 7 47 47\r\n*/\r\n"
}