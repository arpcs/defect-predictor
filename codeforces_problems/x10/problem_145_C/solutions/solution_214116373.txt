{
    "id": 214116373,
    "contestId": 145,
    "creationTimeSeconds": 1689537750,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 145,
        "index": "C",
        "name": "Lucky Subsequence",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ]
    },
    "author": {
        "contestId": 145,
        "members": [
            {
                "handle": "zavodil"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1327215600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 58,
    "timeConsumedMillis": 686,
    "memoryConsumedBytes": 1740800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint MOD = 1e9 + 7;\r\nconst int N = 2e5 + 100;\r\n\r\nint a[10000];\r\nint dp[10000];\r\nint fact[N];\r\nint inv_fact[N];\r\n\r\nint sum(int a, int b) {\r\n    return (a + b) % MOD;\r\n}\r\n\r\nint mult(long long a, long long b) {\r\n    return (a * b) % MOD;\r\n}\r\n\r\nint binpow(int x, int y) {\r\n    if (y == 0) return 1;\r\n    if (y & 1) return mult(binpow(x, y - 1), x);\r\n    else {\r\n        int c = binpow(x, y / 2);\r\n        return mult(c, c);\r\n    }\r\n}\r\n\r\nint C(int n, int k) {\r\n    return mult(fact[n], mult(inv_fact[n - k], inv_fact[k]));\r\n}\r\n\r\nint is_happy_number(int x) {\r\n    int comp = 1;\r\n    while (x > 0) {\r\n        comp *= 2;\r\n        if (x % 10 != 4 && x % 10 != 7) return -1;\r\n        comp += (x % 10 == 4);\r\n        x /= 10;\r\n    }\r\n    return comp;\r\n}\r\n\r\nint main() {\r\n    fact[0] = 1;\r\n    inv_fact[0] = 1;\r\n    for (int i = 1; i < N; i++) {\r\n        fact[i] = mult(fact[i - 1], i);\r\n        inv_fact[i] = binpow(fact[i], MOD - 2);\r\n    }\r\n    int n, k;\r\n    cin >> n >> k;\r\n    int kol = 0;\r\n    for (int i = 0; i < n; i++) {\r\n        int x;\r\n        cin >> x;\r\n        int val = is_happy_number(x);\r\n        if (val == -1) kol++;\r\n        else {\r\n            a[val]++;\r\n        }\r\n    }\r\n    dp[0] = 1;\r\n    for (int i = 0; i < 10000; i++) \r\n        if (a[i] != 0) {\r\n        for (int j = 9998; j >= 0; j--) {\r\n            dp[j + 1] = sum(dp[j + 1], mult(dp[j], a[i]));\r\n        }\r\n    }\r\n    int answer = 0;\r\n    for (int i = 0; i < 10000; i++) {\r\n            if (k - i >= 0 && k - i <= kol) answer = sum(answer, mult(dp[i], C(kol, k - i)));\r\n    }\r\n    cout << answer;\r\n}/*1689537750.67564*/"
}