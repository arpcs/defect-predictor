{
    "id": 222083413,
    "contestId": 1556,
    "creationTimeSeconds": 1694009110,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1556,
        "index": "H",
        "name": "DIY Tree",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3300,
        "tags": [
            "graphs",
            "greedy",
            "math",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1556,
        "members": [
            {
                "handle": "1092515503"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1630247700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 143,
    "timeConsumedMillis": 5538,
    "memoryConsumedBytes": 38092800,
    "source": "//Code By CXY07\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n//#define FILE\r\n//#define int long long\r\n#define file(FILENAME) freopen(FILENAME\".in\", \"r\", stdin), freopen(FILENAME\".out\", \"w\", stdout)\r\n#define randint(l, r) (rand() % ((r) - (l) + 1) + (l))\r\n#define LINE() cout << \"LINE = \" << __LINE__ << endl\r\n#define debug(x) cout << #x << \" = \" << x << endl\r\n#define abs(x) ((x) < 0 ? (-(x)) : (x))\r\n#define inv(x) qpow((x), mod - 2)\r\n#define lowbit(x) ((x) & (-(x)))\r\n#define ull unsigned long long\r\n#define pii pair<int, int>\r\n#define LL long long\r\n#define mp make_pair\r\n#define pb push_back\r\n#define scd second\r\n#define vec vector\r\n#define fst first\r\n#define endl '\\n'\r\n\r\nconst int MAXN = 3010;\r\nconst int INF = 2e9;\r\nconst double eps = 1e-6;\r\nconst double PI = acos(-1);\r\n//const int mod = 1e9 + 7;\r\n//const int mod = 998244353;\r\n//const int G = 3;\r\n//const int base = 131;\r\n\r\nint n, k, m1, m, Ans = INF;\r\nint d_lim[MAXN], X[MAXN], Y[MAXN], W[MAXN];\r\nbool vis[MAXN];\r\nvec<int> G[MAXN];\r\n\r\ntemplate<typename T> inline bool read(T &a) {\r\n\ta = 0; char c = getchar(); int f = 1;\r\n\twhile(c < '0' || c > '9') { if(c == '-') f = -1; c = getchar(); }\r\n\twhile(c >= '0' && c <= '9') { a = a * 10 + (c ^ 48); c = getchar(); }\r\n\treturn a *= f, true;\r\n}\r\n\r\nstruct M1 {\r\n\tint S;\r\n\tstruct DSU {\r\n\t\tint f[MAXN];\r\n\t\tint find(int x) { return f[x] == x ? x : f[x] = find(f[x]); }\r\n\t\tvoid unity(int x, int y) { (find(x) != find(y)) && (f[find(x)] = find(y)); }\r\n\t\tbool Init(int S) { \r\n\t\t\tfor(int i = 1; i <= n; ++i) f[i] = i; \r\n\t\t\tfor(int i = 1; i <= m1; ++i) {\r\n\t\t\t\tif(!((S >> (i - 1)) & 1)) continue;\r\n\t\t\t\tif(find(X[i]) != find(Y[i])) unity(X[i], Y[i]);\r\n\t\t\t\telse return false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t} ex[MAXN], tmp;\r\n\tvoid Init(int _S) { S = _S; }\r\n\tbool chk(int S) { return tmp.Init(S); }\r\n\tvoid build() {\r\n\t\tfor(int i = m1 + 1; i <= m + 1; ++i) {\r\n\t\t\tif(!vis[i] && i <= m) continue;\r\n\t\t\tex[i].Init(S);\r\n\t\t\tfor(int j = m1 + 1; j <= m; ++j) {\r\n\t\t\t\tif(!vis[j] || i == j) continue;\r\n\t\t\t\tex[i].unity(X[j], Y[j]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tbool valid(int x) { return ex[m + 1].find(X[x]) != ex[m + 1].find(Y[x]); }\r\n\tbool valid(int x, int y) { return (ex[x].find(X[y]) != ex[x].find(Y[y])); }\r\n} M1;\r\n\r\nstruct M2 {\r\n\tint S, d[MAXN];\r\n\tvoid add(int S) {\r\n\t\tfor(int i = 1; i <= n; ++i) d[i] = 0;\r\n\t\tfor(int i = 1; i <= m1; ++i) if((S >> (i - 1)) & 1) d[X[i]]++, d[Y[i]]++;\r\n\t}\r\n\tbool chk(int S) {\r\n\t\tadd(S);\r\n\t\tfor(int i = 1; i <= k; ++i) if(d[i] > d_lim[i]) return false;\r\n\t\treturn true;\r\n\t}\r\n\tvoid Init(int _S) { S = _S; }\r\n\tvoid build() {\r\n\t\tadd(S);\r\n\t\tfor(int i = m1 + 1; i <= m; ++i)\r\n\t\t\tif(vis[i]) d[X[i]]++, d[Y[i]]++;\r\n\t}\r\n\tbool valid(int x) {\r\n\t\td[X[x]]++, d[Y[x]]++;\r\n\t\tbool res = (d[X[x]] <= d_lim[X[x]] && d[Y[x]] <= d_lim[Y[x]]);\r\n\t\td[X[x]]--, d[Y[x]]--; return res;\r\n\t}\r\n\tbool valid(int x, int y) {\r\n\t\td[X[x]]--, d[Y[x]]--, d[X[y]]++, d[Y[y]]++;\r\n\t\tbool res = (d[X[y]] <= d_lim[X[y]] && d[Y[y]] <= d_lim[Y[y]]);\r\n\t\td[X[x]]++, d[Y[x]]++, d[X[y]]--, d[Y[y]]--; return res;\r\n\t}\r\n} M2;\r\n\r\nbool SPFA(int _s, int _t) {\r\n\tqueue<int> Q;\r\n\tstatic int dis[MAXN], len[MAXN], pre[MAXN];\r\n\tstatic bool inq[MAXN];\r\n\twhile(Q.size()) Q.pop();\r\n\tfor(int i = m1 + 1; i <= m + 2; ++i)\r\n\t\tdis[i] = INF, len[i] = pre[i] = 0, inq[i] = false;\r\n\tdis[_s] = 0, inq[_s] = true; Q.push(_s);\r\n\twhile(Q.size()) {\r\n\t\tint x = Q.front(); Q.pop(); inq[x] = false;\r\n\t\tfor(auto to : G[x]) {\r\n\t\t\tint w = vis[to] ? -W[to] : W[to];\r\n\t\t\tif(dis[to] > dis[x] + w || (dis[to] == dis[x] + w && len[to] > len[x] + 1)) {\r\n\t\t\t\tdis[to] = dis[x] + w, len[to] = len[x] + 1, pre[to] = x;\r\n\t\t\t\tif(!inq[to]) Q.push(to), inq[to] = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif(dis[_t] == INF) return false;\r\n\tfor(int x = pre[_t]; x != _s; x = pre[x]) vis[x] ^= 1;\r\n\treturn true;\r\n}\r\n\r\nbool Augment() {\r\n\tM1.build(); M2.build(); int _s = m + 1, _t = m + 2;\r\n\tfor(int i = m1 + 1; i <= m + 2; ++i) G[i].clear();\r\n\tfor(int i = m1 + 1; i <= m; ++i) {\r\n\t\tif(vis[i]) continue;\r\n\t\tif(M1.valid(i)) G[_s].pb(i);\r\n\t\tif(M2.valid(i)) G[i].pb(_t);\r\n\t}\r\n\tfor(int i = m1 + 1; i <= m; ++i) {\r\n\t\tif(!vis[i]) continue;\r\n\t\tfor(int j = m1 + 1; j <= m; ++j) {\r\n\t\t\tif(vis[j]) continue;\r\n\t\t\tif(M1.valid(i, j)) G[i].pb(j);\r\n\t\t\tif(M2.valid(i, j)) G[j].pb(i);\r\n\t\t}\r\n\t}\r\n\treturn SPFA(_s, _t);\r\n}\r\n\r\nint Matroid_Intersection(int S) {\r\n\tint res = 0, cnt = n - 1 - __builtin_popcount(S);\r\n\tmemset(vis, false, sizeof vis);\r\n\twhile(Augment()) cnt--;\r\n\tif(cnt) return INF;\r\n\tfor(int i = 0; i < m1; ++i) if((S >> i) & 1) res += W[i + 1];\r\n\tfor(int i = m1 + 1; i <= m; ++i) if(vis[i]) res += W[i];\r\n\treturn res;\r\n}\r\n\r\nsigned main () {\r\n\tread(n), read(k);\r\n\tfor(int i = 1; i <= k; ++i) read(d_lim[i]);\r\n\tfor(int i = k + 1; i <= n; ++i) d_lim[i] = INF;\r\n\tm = (k - 1) * k >> 1;\r\n\tfor(int i = 1; i <= n; ++i)\r\n\t\tfor(int j = i + 1; j <= n; ++j) {\r\n\t\t\tif(j > k) { read(W[++m]); X[m] = i, Y[m] = j; } \r\n\t\t\telse { read(W[++m1]); X[m1] = i, Y[m1] = j; }\r\n\t\t}\r\n\tfor(int S = 0; S < (1 << m1); ++S) {\r\n\t\tif(!M1.chk(S) || !M2.chk(S)) continue;\r\n\t\tM1.Init(S); M2.Init(S);\r\n\t\tAns = min(Ans, Matroid_Intersection(S));\r\n\t}\r\n\tprintf(\"%d\\n\", Ans);\r\n\treturn 0;\r\n}\r\n"
}