{
    "id": 229658840,
    "contestId": 587,
    "creationTimeSeconds": 1698220953,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 587,
        "index": "F",
        "name": "Duff is Mad",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 3000,
        "tags": [
            "data structures",
            "strings"
        ]
    },
    "author": {
        "contestId": 587,
        "members": [
            {
                "handle": "ljszs"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1444926600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 2433,
    "memoryConsumedBytes": 267571200,
    "source": "// LUOGU_RID: 131514324\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nusing ll=long long;\r\nusing ull=unsigned long long;\r\n//#define mid ((l+r)>>1)\r\n//#define len (r-l+1)\r\n//#define ls p<<1\r\n//#define rs p<<1|1\r\n//#define int long long\r\nconstexpr int inf=1e9+7;\r\nconstexpr int mod=998244353;\r\n//constexpr ll inf=1e18+7;\r\nconstexpr int N=100005;\r\nint n,m;\r\nstring s[N];\r\nstruct node\r\n{\r\n    int len,id;\r\n}a[N];\r\n\r\nint p[N];\r\nbool cmp(node a,node b)\r\n{\r\n    return a.len<b.len;\r\n}\r\nint mp[8102][8102];\r\n// char buf[1<<21],*p1,*p2;\r\n// #define getchar() (p1==p2&&(p2=(p1=buf)+fread(buf,1,1<<21,stdin),p1==p2)?EOF:*p1++)\r\nll read(){ll x=0,f=1;char ch=getchar();while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}while(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+ch-'0',ch=getchar();return x*f;}\r\nvoid wt(long long x,char ch=0){if(x<0) putchar('-'),wt(-x);else{if(x>=10) wt(x/10);putchar(x%10+'0');}if(ch) putchar(ch);return;}\r\nsigned main(){\r\n    // freopen(\"A.in\",\"r\",stdin);\r\n    // freopen(\"A.out\",\"w\",stdout);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    n=read();m=read();\r\n    for(int i=1;i<=n;++i)\r\n    {\r\n        cin>>s[i];\r\n        a[i].len=s[i].size();\r\n        s[i]=\" \"+s[i];\r\n        a[i].id=i;\r\n    }\r\n    sort(a+1,a+1+n,cmp);\r\n    for(int now=1;now<=n;++now)\r\n    {\r\n        int j=0;\r\n        for(int i=2;i<=a[now].len;++i)p[i]=0;\r\n        for(int i=2;i<=a[now].len;++i)\r\n        {\r\n            while(j>0&&s[a[now].id][i]!=s[a[now].id][j+1])j=p[j];\r\n            if(s[a[now].id][i]==s[a[now].id][j+1])++j;\r\n            p[i]=j;\r\n        }\r\n        for(int nx=1;nx<=n;++nx)\r\n        {\r\n            j=0;\r\n            for(int i=1;i<=a[nx].len;++i)\r\n            {\r\n                while(j>0&&s[a[nx].id][i]!=s[a[now].id][j+1])j=p[j];\r\n                if(s[a[nx].id][i]==s[a[now].id][j+1])++j;\r\n                if(j==a[now].len)\r\n                {\r\n                    mp[a[now].id][a[nx].id]++;\r\n                    // cout<<a[now].id<<\" \"<<a[nx].id<<endl; \r\n                    j=p[j];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // for(int i=1;i<=n;++i)\r\n    // {\r\n    //     for(int j=1;j<=n;++j)\r\n    //     {\r\n    //         cout<<\"i:\"<<i<<\" \"<<\"j:\"<<j<<\" \"<<mp[i][j]<<endl;\r\n    //     }\r\n    // }\r\n    while(m--)\r\n    {\r\n        int l=read(),r=read(),k=read();\r\n        ll ans=0;\r\n        for(int i=l;i<=r;++i)\r\n        {\r\n            // if(s[i]==s[k]&&i>=k)ans++;\r\n            ans+=mp[i][k];\r\n        }\r\n        wt(ans,'\\n');\r\n    }\r\n    // cout<<clock()/(double)CLOCKS_PER_SEC;\r\n    fclose(stdin);\r\n    fclose(stdout);\r\n    return 0;\r\n}"
}