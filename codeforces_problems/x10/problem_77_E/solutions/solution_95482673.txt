{
    "id": 95482673,
    "contestId": 77,
    "creationTimeSeconds": 1602660406,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 77,
        "index": "E",
        "name": "Martian Food",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2800,
        "tags": [
            "geometry"
        ]
    },
    "author": {
        "contestId": 77,
        "members": [
            {
                "handle": "4790iop"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1303226100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 43,
    "timeConsumedMillis": 686,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nnamespace Sakurajima_Mai{\r\n    //#pragma GCC optimize(2)\r\n    //#pragma G++ optimize(2)\r\n    #define si(a) scanf(\"%d\",&a)\r\n    #define sl(a) scanf(\"%lld\",&a)\r\n    #define sd(a) scanf(\"%lf\",&a)\r\n    #define ss(a) scanf(\"%s\",a)\r\n    #define ms(a) memset(a,0,sizeof(a))\r\n    #define reg register\r\n    #define repi(i,a,b) for(reg int i=a,bbb=b;i<=bbb;++i)//attention reg int or reg ll ?\r\n    #define repd(i,a,b) for(reg int i=a,bbb=b;i>=bbb;--i)\r\n    #define reps(s) for(reg int i=head[s],v=e[i].to;i;i=e[i].nxt,v=e[i].to)\r\n    #define ce(i,r) i==r?'\\n':' '\r\n    #define pb push_back \r\n    #define all(x) x.begin(),x.end()\r\n    #define gmn(a,b) a=min(a,b)\r\n    #define gmx(a,b) a=max(a,b)\r\n    #define fi first\r\n    #define se second\r\n    #define pr(x) cout<<#x<<\": \"<<x<<endl\r\n    typedef long long ll;\r\n    typedef unsigned long long ull;\r\n    typedef double db;\r\n    const int infi=2e9;\r\n    const ll infl=4e18;\r\n    inline int qi(){\r\n    int f=0,fu=1; char c=getchar();\r\n    while(c<'0'||c>'9'){ if(c=='-')fu=-1; c=getchar(); }\r\n    while(c>='0'&&c<='9'){ f=(f<<3)+(f<<1)+c-48; c=getchar(); }\r\n    return f*fu;\r\n    }\r\n    inline ll ql(){\r\n        ll f=0;int fu=1; char c=getchar();\r\n        while(c<'0'||c>'9'){ if(c=='-')fu=-1; c=getchar(); }\r\n        while(c>='0'&&c<='9'){ f=(f<<3)+(f<<1)+c-48; c=getchar(); }\r\n        return f*fu;\r\n    }\r\n    inline ll ceil_div(ll a,ll b){ return (a+b-1)/b; }\r\n    //std::mt19937 rnd(time(0));//std::mt19937_64 rnd(time(0));\r\n}\r\nusing namespace Sakurajima_Mai;\r\nconst db pi=acos(-1.0);\r\nconst db eps=1e-6;\r\ninline int sgn(db x){ return fabs(x)<eps?0:(x<0?-1:1); }\r\nstruct Point{\r\n    #define Vec Point\r\n    db x,y;\r\n    Point(){}\r\n    Point(db _x,db _y){x=_x,y=_y;}\r\n    void input(){sd(x),sd(y);} \r\n    bool operator ==(Point b)const{return sgn(x-b.x)==0&&sgn(y-b.y)==0;}\r\n    Point operator +(const Point &b)const{return Point(x+b.x,y+b.y);}\r\n    Point operator -(const Point &b)const{return Point(x-b.x,y-b.y);}\r\n    Point operator /(const db b)const{return Point(x/b,y/b);}\r\n    Point operator *(const db b)const{return Point(x*b,y*b);}\r\n    db operator ^(const Point &b)const{return x*b.y-y*b.x;}//??\r\n    db operator *(const Point &b)const{return x*b.x+y*b.y;}//??\r\n    db dis(Point p){ return sqrt((x-p.x)*(x-p.x)+(y-p.y)*(y-p.y)); }\r\n};\r\nstruct Circle{\r\n    Point o; db r;\r\n    Circle(){}\r\n    Circle(Point _o,db _r){ o=_o,r=_r;}\r\n};\r\ninline db sqr(db x) { return x*x; }\r\ninline db dist(Point a,Point b)\r\n{\r\n\treturn sqrt(sqr(a.x-b.x)+sqr(a.y-b.y));\r\n}\r\ndb Inversion_CtoC(Point O,db R,Circle A)\r\n{\r\n    db OA=A.o.dis(O);\r\n   \treturn (A.r/(OA*OA-A.r*A.r))*R*R;\r\n}\r\nint main()\r\n{\r\n    db R=20; Point O(0,0);\r\n    int T=qi();\r\n    while(T--)\r\n    {\r\n        db r1,r2; sd(r1),sd(r2);\r\n        db lx=R*R/(2*r1),rx=R*R/(2*r2);\r\n        Circle now(Point((lx+rx)/2,0),(rx-lx)/2);\r\n        db nowr=(r1-r2);\r\n        int n=qi();\r\n        repi(i,1,n){           \r\n            now.o.y+=(rx-lx);\r\n            nowr=Inversion_CtoC(O,R,now);\r\n\t\t\tif(sgn(nowr-eps)<0) break;         \r\n        }\r\n        printf(\"%.10lf\\n\",nowr);\r\n    }\r\n    return 0;\r\n}"
}