{
    "id": 227487871,
    "contestId": 77,
    "creationTimeSeconds": 1696918378,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 77,
        "index": "E",
        "name": "Martian Food",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2800,
        "tags": [
            "geometry"
        ]
    },
    "author": {
        "contestId": 77,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1303226100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 43,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 0,
    "source": "// Judges with GCC >= 12 only needs Ofast\n// #pragma GCC optimize(\"O3,no-stack-protector,fast-math,unroll-loops,tree-vectorize\")\n// MLE optimization\n// #pragma GCC optimize(\"conserve-stack\")\n// Old judges\n// #pragma GCC target(\"sse4.2,popcnt,lzcnt,abm,mmx,fma,bmi,bmi2\")\n// New judges. Test with assert(__builtin_cpu_supports(\"avx2\"));\n// #pragma GCC target(\"avx2,popcnt,lzcnt,abm,bmi,bmi2,fma,tune=native\")\n// Atcoder\n// #pragma GCC target(\"avx2,popcnt,lzcnt,abm,bmi,bmi2,fma\")\n/*\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\ntypedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;\n- insert(x),erase(x)\n- find_by_order(k): return iterator to the k-th smallest element\n- order_of_key(x): the number of elements that are strictly smaller\n*/\n\n#include<bits/stdc++.h>\nusing namespace std;\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\nuniform_real_distribution<> pp(0.0,1.0);\n#define int long long\n#define ld long double\n#define pii pair<int,int>\n#define piii pair<pii,int>\n#define mpp make_pair\n#define fi first\n#define se second\nconst int inf=1e18;\nconst int mod=998244353;\nconst int maxn=200005;\nconst int bl=650;\nconst int maxs=655;\nconst int maxm=200005;\nconst int maxq=1000005;\nconst int maxl=20;\nconst int maxa=1000000;\nconst int root=3;\nint power(int a,int n){\n    int res=1;\n    while(n){\n        if(n&1) res=res*a%mod;\n        a=a*a%mod;n>>=1;\n    }\n    return res;\n}\n\nconst int iroot=power(3,mod-2);\nconst int base=101;\n\nvoid solve(){\n    int n;\n    ld r1,r2,r3;\n    cin >> r1 >> r2 >> n;r3=r1-r2;n+=3;\n    ld a1=-1/r1,a2=1/r2,a3=1/r3,a4=0;\n    if(a1*a2+(a1+a2)*a3>=0) a4=a1+a2+a3+2*sqrtl(a1*a2+(a1+a2)*a3);\n    else a4=a1+a2+a3;\n    ld r4=1/a4,ans=0;\n    if(n==4) ans=r4;\n    else{\n        //an=((n*(a1+a2)+C)^2-a1*a2)/(a1+a2)\n        ld C1=a4-a3-7*(a1+a2);//2*C\n        ld C2=a3-9*(a1+a2)-3*C1;//(C^2-a1*a2)/(a1+a2)\n        //cout << a1 << ' ' << a2 << ' ' << a3 << ' ' << a4 << ' ' << C1 << ' ' << C2 << '\\n';\n        ans=1/((a1+a2)*n*n+C1*n+C2);\n    }\n    cout << setprecision(10) << fixed << ans << '\\n';\n}\n\nsigned main(){\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);cout.tie(NULL);\n    int test=1;cin >> test;\n    while(test--) solve();\n}\n\n\t\t\t   \t\t   \t \t\t \t\t  \t  \t\t \t \t \t"
}