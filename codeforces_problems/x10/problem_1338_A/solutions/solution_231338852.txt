{
    "id": 231338852,
    "contestId": 1338,
    "creationTimeSeconds": 1699104345,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1338,
        "index": "A",
        "name": "Powered Addition",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1500,
        "tags": [
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1338,
        "members": [
            {
                "handle": "MJ21"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586700300
    },
    "programmingLanguage": "Java 8",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 0,
    "source": "import java.util.Scanner;\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.io.PrintWriter;\r\nimport java.util.StringTokenizer;\r\nimport org.omg.CORBA.VM_NONE;\r\nimport java.util.Arrays;\r\nimport java.lang.Math;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Cv {\r\n//==========================Solution============================//\r\n\tpublic static void main(String[] args) {\r\n\t\tFastScanner sc = new FastScanner();\r\n\t\tPrintWriter o = new PrintWriter(System.out);\r\n\t\tint t = sc.nextInt();\r\n\t\twhile (t-- > 0) {\r\n\t\t\tint n = sc.nextInt();\r\n\t\t\tlong[] arr = new long[n];\r\n\t\t\tlong max = 0;\r\n\t\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\t\tarr[i] = sc.nextLong();\r\n\t\t\t}\r\n\t\t\tfor (int i = 1; i < n; i++) {\r\n\t\t\t\tif (arr[i] < arr[i-1]) {\r\n\t\t\t\t\tint h = 1;\r\n\t\t\t\t\twhile (arr[i]+Math.pow(2,h)-1<arr[i-1]) {\r\n\t\t\t\t\t\th++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tarr[i]+=Math.pow(2,h)-1;\r\n\t\t\t\t\tif (h > max) {\r\n\t\t\t\t\t\tmax=h;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\to.println(max);\r\n\t\t}\r\n\t\to.close();\r\n\t}\r\n//==============================================================//\r\n\tstatic class FastScanner {\r\n\r\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n\t\tStringTokenizer st = new StringTokenizer(\"\");\r\n\r\n\t\tpublic String next() {\r\n\t\t\twhile (!st.hasMoreElements()) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tst = new StringTokenizer(br.readLine());\r\n\t\t\t\t} catch (IOException e) {\r\n\t\t\t\t\te.printStackTrace();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn st.nextToken();\r\n\t\t}\r\n\t\t\r\n\t\tpublic String nextLine() {\r\n\t\t\tString str = \"\";\r\n\t\t\ttry {\r\n\t\t\t\tstr = br.readLine();\r\n\t\t\t} catch (IOException e) {\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t}\r\n\t\t\treturn str;\r\n\t\t}\r\n\t\t\r\n\t\tbyte nextByte() {\r\n\t\t\treturn Byte.parseByte(next());\r\n\t\t}\r\n\r\n\t\tshort nextShort() {\r\n\t\t\treturn Short.parseShort(next());\r\n\t\t}\r\n\r\n\t\tint nextInt() {\r\n\t\t\treturn Integer.parseInt(next());\r\n\t\t}\r\n\t\t\r\n\t\tlong nextLong() {\r\n\t\t\treturn java.lang.Long.parseLong(next());\r\n\t\t}\r\n\t\t\r\n\t\tdouble nextDouble() {\r\n\t\t\treturn Double.parseDouble(next());\r\n\t\t}\r\n\t}\r\n}\r\n// ~001=110\r\n// 1^0=1 0^0=0 1^1=0\r\n// 1&0=0 0&0=0 1&1=1\r\n// 1|0=1 0|0=0 1|1=1\r\n// n<<x = n*Math.pow(2,x)\r\n// n>>x = |n/Math.pow(2,x)|, \u0433\u0434\u0435 |a| \u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u0435 \u0432 \u043c\u0435\u043d\u044c\u0448\u0443\u044e \u0441\u0442\u043e\u0440\u043e\u043d\u0443 "
}