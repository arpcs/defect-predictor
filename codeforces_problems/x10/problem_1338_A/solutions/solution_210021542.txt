{
    "id": 210021542,
    "contestId": 1338,
    "creationTimeSeconds": 1687067488,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1338,
        "index": "A",
        "name": "Powered Addition",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1500,
        "tags": [
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1338,
        "members": [
            {
                "handle": "54skyxenon"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1586700300
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 342,
    "memoryConsumedBytes": 9523200,
    "source": "# https://codeforces.com/contest/1338/problem/A\n\nfrom math import log2, ceil\n\n'''\n4\n2 -1 -3 -4\n\n2\n-1 -> 0 -> 2\n-3 -> -1 -> 3\n-4 -> -3 -> -1 -> 3\n\n'''\n\ndef solve():\n    n = int(input())\n    A = list(map(int, input().split()))\n    ans = 0\n    \n    for i in range(1, n):\n        # the biggest jump needs to be 2^(x - 1) >= d + 1\n        # x - 1 >= log(d + 1)\n        if A[i] < A[i - 1]:\n            x = 1\n            while A[i] < A[i - 1]:\n                A[i] += 2 ** (x - 1)\n                x += 1\n            ans = max(ans, x - 1)\n                \n            x_lower = 0\n            while A[i] - (2 ** x_lower) >= A[i - 1]:\n                A[i] -= 2 ** x_lower\n                x_lower += 1\n\n    return ans\n\nt = int(input())\nfor _ in range(t):\n    print(solve())"
}