{
    "id": 230936749,
    "contestId": 1646,
    "creationTimeSeconds": 1698913140,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1646,
        "index": "F",
        "name": "Playing Around the Table",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2900,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1646,
        "members": [
            {
                "handle": "Dawnq"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1646408100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 156,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 4915200,
    "source": "// LUOGU_RID: 132927901\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=105;\r\nint n,a[N][N];\r\nvector<vector<int>>Ans;\r\ninline int Solve(int x){\r\n\tfor(int i=0;i<n;++i)if(a[x][i]>1)return i;\r\n\treturn n;\r\n}\r\nsigned main(){\r\n\tstd::ios::sync_with_stdio(false);\r\n\tcin.tie(0),cout.tie(0);\r\n\tcin>>n;\r\n\tfor(int i=0;i<n;++i){\r\n\t\tfor(int j=0,x;j<n;++j)cin>>x,++a[i][x-1];\r\n\t}\r\n\twhile(1){\r\n\t\tint p=-1;\r\n\t\tfor(int i=0;i<n;++i)if(Solve(i)!=n)p=i;\r\n\t\tif(p==-1)break;\r\n\t\tvector<int>tmp(n);\r\n\t\tfor(int j=0;j<n;++j){\r\n\t\t\tint i=(p+j)%n,val=Solve(i);\r\n\t\t\ttmp[i]=val+1,--a[i][val],++a[(i+1)%n][val];\r\n\t\t}\r\n\t\tAns.push_back(tmp);\r\n\t}\r\n\tfor(int i=0;i<n-1;++i){\r\n\t\tfor(int j=0;j<=i;++j){\r\n\t\t\tvector<int>tmp(n);\r\n\t\t\tfor(int k=0;k<n;++k)tmp[k]=(k+n-1-i)%n+1;\r\n\t\t\tAns.push_back(tmp);\r\n\t\t}\r\n\t}\r\n\tcout<<Ans.size()<<\"\\n\";\r\n\tfor(auto i:Ans){\r\n\t\tfor(int j:i)cout<<j<<\" \";\r\n\t\tcout<<\"\\n\";\r\n\t}\r\n\treturn 0;\r\n}"
}