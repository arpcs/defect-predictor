{
    "id": 222510792,
    "contestId": 1221,
    "creationTimeSeconds": 1694203309,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1221,
        "index": "B",
        "name": "Knights",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1221,
        "members": [
            {
                "handle": "akarshkumar32"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1568903700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\ntypedef tree<int, null_type, greater<int>, rb_tree_tag, tree_order_statistics_node_update> pbds; // find_by_order, order_of_key\r\n\r\ntypedef unsigned long int ul;\r\ntypedef long long int ll;\r\ntypedef unsigned long long int  ull;\r\ntypedef long double lld;\r\n\r\n#ifndef ONLINE_JUDGE\r\n#include \"debug.h\"\r\n#define debug(x...) cerr << \"[\" << #x << \"] = \"; _print(x); cerr<<endl;\r\n#else\r\n#define debug(x...)\r\n#endif\r\n\r\ntemplate<typename T, typename T1>T amax(T &a, T1 b) {if (b > a)a = b; return a;}\r\ntemplate<typename T, typename T1>T amin(T &a, T1 b) {if (b < a)a = b; return a;}\r\n\r\n#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\r\n#define MOD 1000000007\r\n#define MOD1 998244353\r\n#define INF 1e18\r\n#define nline \"\\n\"\r\n#define pb push_back\r\n#define ppb pop_back\r\n#define mp make_pair\r\n#define ff first\r\n#define ss second\r\n#define PI 3.141592653589793238462\r\n#define sz(x) ((int)(x).size())\r\n#define all(x) (x).begin(), (x).end()\r\n#define uniq(v) (v).erase(unique(all(v)),(v).end())\r\n#define ivec(x) for(auto &i:x) cin>>i;\r\n#define ovec(x) for(auto &i:x) cout<<i<<\" \"; cout<<endl;\r\n\r\n\r\n\r\nvoid print_YN(bool f) {cout << (f ? \"YES\\n\" : \"NO\\n\");}\r\nll round_up(ll a, ll b) {return (a + b - 1) / b;} //  round_up(a/b)\r\nll round_down(ll a, ll b) {return a / b;} //round_down(a/b)\r\nvector<ll> allfactors(ll n) {vector<ll>v; for (ll i = 2; i <= sqrt(n); i++) {if (n % i == 0) {v.push_back(i); if ((n / i) != i)v.push_back(n / i);}} v.push_back(n); return v;}\r\nll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}\r\nll lcm(ll a, ll b) { ll ret ; ll g = __gcd(a, b) ; ret = a / g ; ret = ret * b ; return ret ; }\r\nll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}\r\nvoid extendgcd(ll a, ll b, ll*v) {if (b == 0) {v[0] = 1; v[1] = 0; v[2] = a; return ;} extendgcd(b, a % b, v); ll x = v[1]; v[1] = v[0] - v[1] * (a / b); v[0] = x; return;} //pass an arry of size1 3\r\nll mminv(ll a, ll b) {ll arr[3]; extendgcd(a, b, arr); return arr[0];} //for non prime b\r\nll mminvprime(ll a, ll b) {return expo(a, b - 2, b);}\r\nbool revsort(ll a, ll b) {return a > b;}\r\nvoid swap(int &x, int &y) {int temp = x; x = y; y = temp;}\r\nll combination(ll n, ll r, ll m, ll *fact, ll *ifact) {ll val1 = fact[n]; ll val2 = ifact[n - r]; ll val3 = ifact[r]; return (((val1 * val2) % m) * val3) % m;}\r\nvoid google(int t) {cout << \"Case #\" << t << \": \";}\r\nvector<ll> sieve(int n) {int*arr = new int[n + 1](); vector<ll> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}\r\nll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\r\nll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}\r\nll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}\r\nll mod_div(ll a, ll b, ll m) {a = a % m; b = b % m; return (mod_mul(a, mminvprime(b, m), m) + m) % m;}  //only for prime m\r\nbool isPrime(ll x) {for (ll i = 2; i * i <= x; i++) {if (x % i == 0) return false;} return true;}\r\nvector<ll> z_function(ll n, string s) {vector<ll> z(n); ll l = 0, r = 0; for (ll i = 1; i < n; i++) {if (i <= r) {z[i] = min(r - i + 1, z[i - l]);} while (i + z[i] < n and (s[z[i]] == s[i + z[i]])) {z[i]++;} if (i + z[i] - 1 > r) { l = i; r = i + z[i] - 1;}} return z;}\r\nint const N = 2e5 + 10;\r\n\r\n/*--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/\r\n\r\n\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    vector<vector<char>>v(n, vector<char>(n, '@'));\r\n    int dr[] = {-2,-1,1,2,-2,-1,1,2};\r\n    int dc[] = {-1,-2,-2,-1,1,2,2,1};\r\n    for (int i = 0; i < n; i++) {\r\n        for (int j = 0; j < n; j++) {\r\n            if (v[i][j] == '@') {\r\n                v[i][j] = 'B';\r\n                for (int k = 0; k < 8; k++) {\r\n                    int nr = i + dr[k];\r\n                    int nc = j + dc[k];\r\n                    if (nr >= 0 and nr <= n - 1 and nc >= 0 and nc <= n - 1) {\r\n                        if (v[nr][nc] == 'B' or v[nr][nc] == '@')\r\n                            v[nr][nc] = 'W';\r\n                    }\r\n                }\r\n            }\r\n            else if (v[i][j] == 'W') {\r\n                for (int k = 0; k < 8; k++) {\r\n                    int nr = i + dr[k];\r\n                    int nc = j + dc[k];\r\n                    if (nr >= 0 and nr <= n - 1 and nc >= 0 and nc <= n - 1) {\r\n                        if (v[nr][nc] == 'W' or v[nr][nc] == '@')\r\n                            v[nr][nc] = 'B';\r\n                    }\r\n                }\r\n            }\r\n            else if (v[i][j] == 'B') {\r\n                for (int k = 0; k < 8; k++) {\r\n                    int nr = i + dr[k];\r\n                    int nc = j + dc[k];\r\n                    if (nr >= 0 and nr <= n - 1 and nc >= 0 and nc <= n - 1) {\r\n                        if (v[nr][nc] == 'B' or v[nr][nc] == '@')\r\n                            v[nr][nc] = 'W';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        for (int j = 0; j < n; j++) {\r\n            cout << v[i][j];\r\n        }\r\n        cout << nline;\r\n    }\r\n\r\n}\r\n\r\n\r\nint32_t main() {\r\n\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n    freopen(\"error.txt\", \"w\", stderr);\r\n#endif\r\n\r\n    fastio();\r\n\r\n    int T = 1;\r\n    // cin >> T;\r\n    while (T--) {\r\n        solve();\r\n    }\r\n\r\n#ifndef ONLINE_JUDGE\r\n    cerr << \"\\ntime taken : \" << (float)clock() / CLOCKS_PER_SEC << \" secs\" << endl;\r\n#endif\r\n\r\n    return 0;\r\n}"
}