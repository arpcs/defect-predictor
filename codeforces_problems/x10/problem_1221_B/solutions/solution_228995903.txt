{
    "id": 228995903,
    "contestId": 1221,
    "creationTimeSeconds": 1697851592,
    "relativeTimeSeconds": 2492,
    "problem": {
        "contestId": 1221,
        "index": "B",
        "name": "Knights",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1221,
        "members": [
            {
                "handle": "Gerges_Hany"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1697849100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n \r\nusing namespace std; \r\n#define sz(s) (int)(s.size())  \r\n#define rall(s)  s.rbegin(), s.rend()\r\n#define all(vec)  vec.begin(), vec.end()\r\n#define Time cerr << \"Time elapsed: \" << 1.0 * clock() / CLOCKS_PER_SEC << \" s.\\n\";\r\n \r\nint tt, tc;\r\ntypedef long long ll;\r\ntypedef long double ld;\r\nconst ll INF = 1LL << 60;\r\nconst int mod = 998244353, N = 2e3 + 5;\r\n\r\ntemplate < typename T = int > istream& operator >> (istream &in, vector < T > &v) {\r\n  for (auto &x : v) in >> x; return in;\r\n}\r\n  \r\ntemplate < typename T = int > ostream& operator << (ostream &out, const vector < T > &v) { \r\n  for (const T &x : v) out << x << ' '; return out;\r\n}\r\n\r\n/*\r\n  \r\n  A knight is a chess piece that can attack a piece in cell (x2, y2) from the cell (x1, y1) \r\n  if one of the following conditions is met:\r\n  |x1\u2212x2|=2 and |y1\u2212y2|=1 or |x1\u2212x2|=1 and |y1\u2212y2|=2\r\n\r\n*/\r\n\r\nvoid Accepted(){\r\n\r\n  int n;\r\n  cin >> n;\r\n  vector < string > a(n, string(n, 'W'));\r\n  if (n & 1){\r\n    for (int i = 0; i < n; ++i) a[i][n / 2] = 'B';\r\n    for (int i = 0; i < n; ++i) a[n / 2][i] = 'B';\r\n  }else{\r\n    for (int i = 0; i < n; ++i) a[i][n / 2] = a[i][(n / 2) - 1] = 'B';\r\n    for (int i = 0; i < n; ++i) a[n / 2][i] = a[(n / 2) - 1][i] = 'B';\r\n  }\r\n  for (auto &x : a) cout << x << '\\n';\r\n\r\n} \r\n\r\nint main(){ \r\n\r\n  ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n  if (fopen(\"input.txt\", \"r\")) freopen(\"input.txt\", \"r\", stdin), freopen(\"output.txt\", \"w\", stdout); \r\n\r\n  tt = tc = 1; // cin >> tt;\r\n  while (tt--) Accepted(), ++tc;  \r\n\r\n  return 0;\r\n}"
}