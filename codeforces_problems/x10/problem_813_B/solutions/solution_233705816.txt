{
    "id": 233705816,
    "contestId": 813,
    "creationTimeSeconds": 1700579950,
    "relativeTimeSeconds": 3250,
    "problem": {
        "contestId": 813,
        "index": "B",
        "name": "The Golden Age",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "brute force",
            "math"
        ]
    },
    "author": {
        "contestId": 813,
        "members": [
            {
                "handle": "curtain-cpp"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1700576700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <cstring>\r\n#include <string>\r\n#include <vector>\r\n#include <map>\r\n#include <cmath>\r\n#include <queue>\r\n#include <set>\r\n#include <stack>\r\n#include <unordered_map>\r\n#include <numeric>\r\n#include <bitset>\r\n#include <functional>\r\nusing namespace std;\r\ntypedef long long  LL;\r\ntypedef unsigned long long uLL;\r\ntypedef pair<LL,LL> PII;\r\nconst int N = 2e5+10;\r\nconst int inf = 0x3f3f3f3f;\r\nconst double pi = acos(-1);\r\n#define debug(x) cout<<\"[debug]\"#x<<\"=\"<<x<<'\\n';\r\ntemplate <int T>\r\nstruct ModInt {\r\n    const static int MD = T;\r\n    int x;\r\n    ModInt(LL x = 0)\r\n        : x(x % MD) {}\r\n    int get() { return x; }\r\n    ModInt operator+(const ModInt& that) const {\r\n        int x0 = x + that.x;\r\n        return ModInt(x0 < MD ? x0 : x0 - MD);\r\n    }\r\n    ModInt operator-(const ModInt& that) const {\r\n        int x0 = x - that.x;\r\n        return ModInt(x0 < MD ? x0 + MD : x0);\r\n    }\r\n    ModInt operator*(const ModInt& that) const {\r\n        return ModInt((long long)x * that.x % MD);\r\n    }\r\n    ModInt operator/(const ModInt& that) const {\r\n        return *this * that.inverse();\r\n    }\r\n    void operator+=(const ModInt& that) {\r\n        x += that.x;\r\n        if (x >= MD)\r\n            x -= MD;\r\n    }\r\n    void operator-=(const ModInt& that) {\r\n        x -= that.x;\r\n        if (x < 0)\r\n            x += MD;\r\n    }\r\n    void operator*=(const ModInt& that) { x = (long long)x * that.x % MD; }\r\n    void operator/=(const ModInt& that) { *this = *this / that; }\r\n    ModInt inverse() const {\r\n        int a = x, b = MD, u = 1, v = 0;\r\n        while (b) {\r\n            int t = a / b;\r\n            a -= t * b;\r\n            std::swap(a, b);\r\n            u -= t * v;\r\n            std::swap(u, v);\r\n        }\r\n        if (u < 0)\r\n            u += MD;\r\n        return u;\r\n    }\r\n    friend ostream& operator<<(ostream& os, ModInt x) {\r\n        os << x.get();\r\n        return os;\r\n    }\r\n};//\u5168\u5c40\u53d8\u91cf\u8bb0\u5f97\u6e05\u96f6\uff01\r\nconst int mod=998244353;\r\ntypedef ModInt<mod> mint;\r\nLL gcd(LL a, LL b)\r\n{\r\n   return b ? gcd(b, a % b) : a;\r\n}\r\nLL qsm(LL a, LL b)\r\n{\r\n    LL ans = 1 ;\r\n    while (b)\r\n    {\r\n        if (b & 1)\r\n            ans = (LL)ans * a ;\r\n        a = (LL)a * a ;\r\n        b >>= 1;\r\n    }\r\n    return ans ;\r\n}\r\nvoid solve()\r\n{\r\n   LL x,y,l,r;\r\n   cin>>x>>y>>l>>r;\r\n   LL st=x,cnt=0;\r\n   vector<LL>ans;\r\n   while(st<=r){\r\n        cnt++;\r\n        st*=x;\r\n   }\r\n   st=y;\r\n   LL cnt1=0;\r\n   while(st<=r){\r\n       cnt1++;\r\n       st*=y;\r\n   }\r\n   //cout<<cnt<<\" \"<<cnt1<<'\\n';\r\n   for(int i=0;i<=cnt;i++){\r\n       for(int j=0;j<=cnt1;j++){\r\n          LL temp=qsm(x,i)+qsm(y,j);\r\n          if(temp>=l&&temp<=r){\r\n               ans.push_back(temp);\r\n          }\r\n       }\r\n   }\r\n   sort(ans.begin(),ans.end());\r\n   ans.erase(unique(ans.begin(),ans.end()),ans.end());\r\n   LL x1=-1;\r\n   for(int i=0;i<ans.size()-1;i++){\r\n       x1=max(x1,ans[i+1]-ans[i]-1);\r\n   }\r\n   cout<<max(x1,r-ans.back())<<'\\n';\r\n}\r\nint main()\r\n{\r\n   ios::sync_with_stdio(0); cin.tie(0),cout.tie(0);\r\n   solve();\r\n}"
}