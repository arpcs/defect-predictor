{
    "id": 228705379,
    "contestId": 813,
    "creationTimeSeconds": 1697644876,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 813,
        "index": "B",
        "name": "The Golden Age",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "brute force",
            "math"
        ]
    },
    "author": {
        "contestId": 813,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1496675100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 85,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include<bits/stdc++.h>\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\n#define ff first\n#define ss second\n#define pb push_back\n#define pf push_front\nusing namespace std;\nusing namespace __gnu_pbds;\n#define ll long long\n#define YES cout <<\"YES\\n\"\n#define NO cout <<\"NO\\n\"\n#define inf 1e18\ntypedef tree<ll, null_type, greater_equal<ll>, rb_tree_tag, tree_order_statistics_node_update> pbds;\nll x, y, l, r;\n\nll p(ll b, ll pr) {\n    ll mul = 1;\n    while (pr) {\n        if (mul > r / b) return -1;\n        mul *= b;\n        if (mul > r) return -1;\n        pr--;\n    }\n    return mul;\n}\n\nvoid solve() {\n    set<ll>st;\n    cin >> x >> y >> l >> r;\n    for (ll a = 0; a <= 60; a++) {\n        if (p(x, a) == -1) break;\n        for (ll b = 0; b <= 60; b++) {\n            if (p(y, b) == -1) break;\n            ll n = p(x, a) + p(y, b);\n            if (n > r) break;\n            if (n >= l) st.insert(n);\n        }\n    }\n    // st.insert(r);\n    ll pre = l;\n    ll ans = 0;\n    for (auto u : st) {\n        // cout << u << ' ';\n        ll len;\n        if (u == l) len = 0;\n        else len = u - pre - 1;\n        ans = max(ans, len);\n        pre = u;\n    }\n    if (st.size() and * st.begin() != l) {\n        ll len = *st.begin() - l;\n        ans = max(ans, len);\n    }\n    if (st.size() == 0) {\n        ans = r - l + 1;\n    }\n    else if (*st.rbegin() != r) {\n        ans = max(ans, r - pre);\n    }\n    if (ans < 0) ans = 0;\n    cout << ans << '\\n';\n\n}\n\nint main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n\n    ll tc = 1; // cin >> tc;\n    while (tc--) {\n        solve();\n    }\n}\n \t\t \t \t\t\t \t   \t   \t \t \t\t   \t \t"
}