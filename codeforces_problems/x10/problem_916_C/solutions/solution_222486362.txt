{
    "id": 222486362,
    "contestId": 916,
    "creationTimeSeconds": 1694189610,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 916,
        "index": "C",
        "name": "Jamie and Interesting Graph",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 916,
        "members": [
            {
                "handle": "plevande"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1516372500
    },
    "programmingLanguage": "PyPy 3",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 2867200,
    "source": "import sys \r\ninput = sys.stdin.buffer.readline \r\n\r\nprimes = [2, 3]\r\nfor p in range(5, 2*10**5):\r\n    is_prime = True \r\n    for p2 in primes:\r\n        if p2*p2 > p:\r\n            break \r\n        if p % p2==0:\r\n            is_prime = False\r\n            break \r\n    if is_prime:\r\n        primes.append(p)\r\n        \r\ndef process(n, m):\r\n    my_prime = None\r\n    for x in primes:\r\n        if x >= n-1 and x <= 2*n:\r\n            my_prime = x \r\n            true_prime = x \r\n            break \r\n    g = [[] for i in range(n+1)]\r\n    for i in range(1, n):\r\n        if my_prime-(n-1) > 0:\r\n            g[i].append([i+1, 2])\r\n            my_prime-=2 \r\n        else:\r\n            g[i].append([i+1, 1])\r\n            my_prime-=1 \r\n    assert my_prime==0\r\n    m-=(n-1)\r\n    for i in range(1, n+1):\r\n        if m==0:\r\n            break\r\n        for j in range(i+2, n+1):\r\n            if m > 0:\r\n                g[i].append([j, 3])\r\n                m-=1 \r\n            if m==0:\r\n                break \r\n    sys.stdout.write(f'{true_prime} {true_prime}\\n')\r\n    for i in range(1, n+1):\r\n        for a, b in g[i]:\r\n            sys.stdout.write(f'{i} {a} {b}\\n')\r\n                \r\n            \r\n    \r\n    return \r\n\r\nn, m = [int(x) for x in input().split()]\r\nprocess(n, m)"
}