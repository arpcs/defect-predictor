{
    "id": 205713343,
    "contestId": 916,
    "creationTimeSeconds": 1683978658,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 916,
        "index": "C",
        "name": "Jamie and Interesting Graph",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 916,
        "members": [
            {
                "handle": "ZH_666qaq"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1516372500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// LUOGU_RID: 110280045\n#include <bits/stdc++.h>\r\n#define lowbit(x) x & (-x)\r\n#define endl \"\\n\"\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\nnamespace fastIO {\r\n\tinline int read() {\r\n\t\tregister int x = 0, f = 1;\r\n\t\tregister char c = getchar();\r\n\t\twhile (c < '0' || c > '9') {\r\n\t\t\tif(c == '-') f = -1;\r\n\t\t\tc = getchar();\r\n\t\t}\r\n\t\twhile (c >= '0' && c <= '9') x = x * 10 + c - '0', c = getchar();\r\n\t\treturn x * f;\r\n\t}\r\n\tinline void write(int x) {\r\n\t\tif(x < 0) putchar('-'), x = -x;\r\n\t\tif(x > 9) write(x / 10);\r\n\t\tputchar(x % 10 + '0');\r\n\t\treturn;\r\n\t}\r\n}\r\nusing namespace fastIO;\r\n\r\nint main() {\r\n\t//freopen(\".in\",\"r\",stdin);\r\n\t//freopen(\".out\",\"w\",stdout);\r\n\tint n, m;\r\n    n = read(), m = read(); \r\n    cout << 10003 << \" \" << 10003 << endl << \"1 2 \" << 10003 - n + 2 << endl;\r\n    for(int i = 2; i < n; i ++) {\r\n    \tcout << i << \" \" << i + 1 << \" 1\\n\";\r\n\t}\r\n    m -= n - 1;\r\n    for(int i = 0, j = n; m --) {\r\n        if(++ j > n) {\r\n        \tj = ++ i + 2;\r\n\t\t}\r\n        cout << i << \" \" << j << \" 1000000000\\n\";\r\n    }\r\n    return 0;\r\n}\r\n"
}