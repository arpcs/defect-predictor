{
    "id": 235407641,
    "contestId": 1873,
    "creationTimeSeconds": 1701531985,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1873,
        "index": "H",
        "name": "Mad City",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "dsu",
            "games",
            "graphs",
            "shortest paths",
            "trees"
        ]
    },
    "author": {
        "contestId": 1873,
        "members": [
            {
                "handle": "AKG_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1695306900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 35225600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n#define endl '\\n'\r\nvoid solve();\r\nsigned main()\r\n{\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(NULL);\r\n\tcout.tie(NULL);\r\n\tint tt = 1;\r\n\tcin >> tt;\r\n\twhile (tt--)solve();\r\n\treturn 0;\r\n}\r\n\r\nint n, a, b;\r\nconst int nn = 3e5;\r\nvector<int> v[nn];\r\nvector<int> vis(nn);\r\nint in;\r\n\r\nvoid dfs(int f, int u)\r\n{\r\n\tvis[u] = 1;\r\n\tfor (int i = 0; i < v[u].size(); i++)\r\n\t{\r\n\t\tif (in)return;\r\n\t\tint j = v[u][i];\r\n\t\tif (j == f)continue;\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (vis[j])\r\n\t\t\t{\r\n\t\t\t\tin = j;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tdfs(u, j);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nint df(int f, int u)\r\n{\r\n\tvis[u] = 1;\r\n\tint dis = n;\r\n\tfor (int i = 0; i < v[u].size(); i++)\r\n\t{\r\n\t\tint j = v[u][i];\r\n\t\tif (j == f)continue;\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (j == in)\r\n\t\t\t{\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tdis = min(dis, df(u, j) + 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn dis;\r\n}\r\n\r\nvoid solve()\r\n{\r\n\tin = 0;\r\n\tcin >> n >> a >> b;\r\n\tauto clr = []()->void {for (int i = 1; i <= n; i++)vis[i] = 0; };\r\n\r\n\tclr();\r\n\tfor (int i = 1; i <= n; i++)v[i].clear();\r\n\tfor (int i = 1; i <= n; i++)\r\n\t{\r\n\t\tint x, y;\r\n\t\tcin >> x >> y;\r\n\t\tv[x].push_back(y);\r\n\t\tv[y].push_back(x);\r\n\t}\r\n\r\n\tdfs(-1, b);\r\n\tint m, v;\r\n\tclr();\r\n\tif (in == a)\r\n\t{\r\n\t\tm = 0;\r\n\t}\r\n\telse \r\n\t{\r\n\t\tm = df(-1, a);\r\n\t}\r\n\r\n\tclr();\r\n\tif (in == b)\r\n\t{\r\n\t\tv = 0;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tv = df(-1, b);\r\n\t}\r\n\r\n\tif (v < m)cout << \"YES\" << endl;\r\n\telse cout << \"NO\" << endl;\r\n\r\n\treturn;\r\n}"
}