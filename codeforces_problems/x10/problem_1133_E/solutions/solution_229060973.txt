{
    "id": 229060973,
    "contestId": 1133,
    "creationTimeSeconds": 1697891593,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1133,
        "index": "E",
        "name": "K Balanced Teams",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "dp",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1133,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1551971100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 11,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 100454400,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n#define loopU(n)           for (int i=0 ; i<n ; i++)\n#define loopD(n)           for (int i=n-1 ; i>=0 ; i--)\n#define loopu(i,in1,in2)    for (ll i=in1 ; i<=in2 ; i++)\n#define loopd(j,in1,in2)    for (int j=in1 ; j>=in2 ; j--)\n#define ll                 long long\n#define f                  first\n#define s                  second\n#define pub                push_back\n#define sz                 size()\n#define el                 \"\\n\"\n#define vi                 vector\n//#define sort(v)            sort(v.begin(),v.end())\n#define reverse(v)         reverse(v.begin(),v.end())\n#define fixed(n,cnt)         fixed << setprecision(cnt) << n\nint N,K, dp[5005][5005], a[5005];\nint solve(int i, int n, int k)\n{\n    if(n==N || n<i || k>=K) return 0;\n    if(dp[i][n] != -1) return dp[i][n];\n    if(a[n]-a[i] <= 5 || i==n)\n        dp[i][n] = n-i+1+solve(n+1,N-1,k+1);\n     \n    else\n    {\n        int inc = solve(i,n-1,k);\n        int exc = solve(i+1,n,k);\n        dp[i][n] = max(inc,exc);\n    }\n    return dp[i][n];\n}\n\nint main()\n{\n    cin.tie(0);\n    cin.sync_with_stdio(0);\n    cin >> N >> K;\n    loopU(N) cin >> a[i];\n    sort(a,a+N);\n    memset(dp,-1,sizeof dp);\n    cout << solve(0,N-1,0);\n\n\n    return 0;\n}\n\n \t  \t\t \t\t\t\t \t   \t \t \t   \t\t\t\t \t"
}