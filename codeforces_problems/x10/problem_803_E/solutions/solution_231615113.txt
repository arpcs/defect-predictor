{
    "id": 231615113,
    "contestId": 803,
    "creationTimeSeconds": 1699287042,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 803,
        "index": "E",
        "name": "Roma and Poker",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "graphs"
        ]
    },
    "author": {
        "contestId": 803,
        "members": [
            {
                "handle": "SkyWave2022"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1493391900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 28,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 13721600,
    "source": "// LUOGU_RID: 133759166\n//\n//  main.cpp\n//  Roma and Poker\n//\n//  Created by SkyWave Sun on 2023/11/7.\n//\n\n#include <iostream>\n#include <set>\n#include <unordered_map>\nusing namespace std;\n\nconst int N = 2001;\n\nint n, k;\n\nchar str[N + 1];\n\nset<int> st[N];\n\nchar ans[N + 1];\n\nbool dfs(int pos, int sub) {\n    if (pos == n + 1) {\n        if (abs(sub) == k) {\n            return true;\n        }\n        return false;\n    }\n    if (abs(sub) >= k) {\n        return false;\n    }\n    if (st[pos].count(sub)) {\n        return false;\n    }\n    st[pos].insert(sub);\n    if (str[pos] == 'W') {\n        return dfs(pos + 1, sub + 1);\n    }\n    if (str[pos] == 'D') {\n        return dfs(pos + 1, sub);\n    }\n    if (str[pos] == 'L') {\n        return dfs(pos + 1, sub - 1);\n    }\n    if (dfs(pos + 1, sub + 1)) {\n        ans[pos] = 'W';\n        return true;\n    }\n    if (dfs(pos + 1, sub)) {\n        ans[pos] = 'D';\n        return true;\n    }\n    if (dfs(pos + 1, sub - 1)) {\n        ans[pos] = 'L';\n        return true;\n    }\n    return false;\n}\n\n\n\nint main(int argc, const char * argv[]) {\n    scanf(\"%d%d\", &n, &k);\n    scanf(\"%s\", str + 1);\n    memcpy(ans, str, sizeof(str));\n    if (dfs(1, 0)) {\n        puts(ans + 1);\n    } else {\n        puts(\"NO\");\n    }\n    return 0;\n}\n"
}