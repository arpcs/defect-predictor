{
    "id": 232604331,
    "contestId": 803,
    "creationTimeSeconds": 1699870873,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 803,
        "index": "E",
        "name": "Roma and Poker",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "graphs"
        ]
    },
    "author": {
        "contestId": 803,
        "members": [
            {
                "handle": "arpeggio"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1493391900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 28,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 2048000,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define double long double\n\nconst int N = 1010;\nchar dp[N][N << 1];\nint val(char c)\n{\n    if (c == 'W')\n        return 1;\n    if (c == 'L')\n        return -1;\n    return 0;\n}\nvoid solve()\n{\n    int n, k;\n    string s, t = \"WLD\";\n    cin >> n >> k >> s;\n    s = '\\0' + s;\n    dp[0][k] = 'W';\n    for (int i = 1; i <= n; ++i)\n        for (int j = 0; j <= 2 * k; ++j)\n        {\n            if (s[i] != '?' && j - val(s[i]) > 0 && j - val(s[i]) < 2 * k && dp[i - 1][j - val(s[i])])\n                dp[i][j] = s[i];\n            else if (s[i] == '?')\n                for (char c : t)\n                    if (j - val(c) > 0 && j - val(c) < 2 * k && dp[i - 1][j - val(c)])\n                        dp[i][j] = c;\n        }\n\n    if (dp[n][2 * k])\n    {\n        string ans;\n        int cur = 2 * k;\n        for (int i = n; i; --i)\n            ans += dp[i][cur], cur -= val(dp[i][cur]);\n        reverse(ans.begin(), ans.end());\n        cout << ans;\n        return;\n    }\n    if (dp[n][0])\n    {\n        string ans;\n        int cur = 0;\n        for (int i = n; i; --i)\n            ans += dp[i][cur], cur -= val(dp[i][cur]);\n        reverse(ans.begin(), ans.end());\n        cout << ans;\n        return;\n    }\n    cout << \"NO\";\n}\nsigned main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n\n    // int T;\n    // cin >> T;\n    // while (T--)\n    //     solve();\n    solve();\n    return 0;\n}"
}