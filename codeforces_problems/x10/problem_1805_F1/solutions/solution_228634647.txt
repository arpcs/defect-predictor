{
    "id": 228634647,
    "contestId": 1805,
    "creationTimeSeconds": 1697610567,
    "relativeTimeSeconds": 5667,
    "problem": {
        "contestId": 1805,
        "index": "F1",
        "name": "Survival of the Weakest (easy version)",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2600,
        "tags": [
            "binary search",
            "brute force",
            "implementation",
            "math",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1805,
        "members": [
            {
                "handle": "q-w-q-w-q"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1697604900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 119,
    "timeConsumedMillis": 342,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int N = 3005, mod = 1e9 + 7;\r\nint n, a[N], ans;\r\n\r\nvoid process(int &n) {\r\n    static int pt[N], b[N];\r\n    priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> q;\r\n\r\n    int x = (a[1] + a[2]) % mod, v0 = a[1] + a[2];\r\n    for (int i = 1; i != n - 1; i++) {\r\n        x = 2 * x;\r\n        if (x >= mod) {\r\n            x -= mod;\r\n        }\r\n    }\r\n    ans = (ans + x) % mod;\r\n\r\n    for (int i = 1; i != n; i++) {\r\n        pt[i] = i + 1;\r\n        q.emplace(a[i + 1] + a[i] - v0, i);\r\n    }\r\n\r\n    for (int t = 1; t != n; t++) {\r\n        auto [v, id] = q.top();\r\n        q.pop();\r\n        b[t] = v;\r\n        pt[id]++;\r\n        q.emplace(a[id] + a[pt[id]] - v0, id);\r\n    }\r\n    n--;\r\n\r\n    memcpy(a + 1, b + 1, n << 2);\r\n}\r\n\r\nint main() {\r\n    cin >> n;\r\n    for (int i = 1; i <= n; i++) {\r\n        cin >> a[i];\r\n    }\r\n    sort(a + 1, a + n + 1);\r\n\r\n    while (n > 1) {\r\n        process(n);\r\n    }\r\n    cout << ans << endl;\r\n}"
}