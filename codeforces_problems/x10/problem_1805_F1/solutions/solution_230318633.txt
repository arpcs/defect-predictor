{
    "id": 230318633,
    "contestId": 1805,
    "creationTimeSeconds": 1698560387,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1805,
        "index": "F1",
        "name": "Survival of the Weakest (easy version)",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2600,
        "tags": [
            "binary search",
            "brute force",
            "implementation",
            "math",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1805,
        "members": [
            {
                "handle": "THEUltimate1234"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1680446100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 119,
    "timeConsumedMillis": 1154,
    "memoryConsumedBytes": 409600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define in insert\r\n#define pb push_back\r\n#define mp make_pair\r\n#define ff first\r\n#define ss second\r\n#define pi pair<ll, ll>\r\n#define ll long long\r\n\r\n\r\nconst int maxn = 3 * 1e3 + 5;\r\nconst ll mod = 1e9 + 7;\r\nset<pair<ll, pi> > s;\r\nvector<ll> v, ans;\r\nll arr[maxn];\r\n\r\nll exp(int x) {\r\n\tll ans = 1;\r\n\tfor(int i = 0; i < x; i++) {\r\n\t\tans = ans *2;\r\n\t\tans %= mod;\r\n\t}\r\n\treturn ans;\r\n}\r\n\r\nvoid solve(int k) {\r\n\tans.pb(arr[1]);\r\n\tfor(int i = 2; i <= k; i++) {\r\n\t\tarr[i] -= arr[1];\r\n\t}\r\n\tarr[1] = 0;\r\n\tfor(int i = 1; i < k; i++) s.in(mp((arr[i] + arr[i + 1]) , mp(i, i + 1)));\r\n\twhile(v.size() < k - 1) {\r\n\t\tauto it = s.begin();\r\n\t\tv.pb(it -> ff);\r\n\t\tint x = (*it).ss.ff;\r\n\t\tint y = (*it).ss.ss;\r\n\t\ts.erase(it);\r\n\t\tif(y < k) {\r\n\t\t\ts.in(mp(arr[x] + arr[y + 1], mp(x, y + 1)));\r\n\t\t}\r\n\t}\r\n\tfor(int i = 0; i < v.size(); i++) arr[i + 1] = v[i];\r\n\tv.clear();\r\n\ts.clear();\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\tcin >> n;\r\n\tfor(int i = 1; i <= n; i++) {\r\n\t\tcin >> arr[i];\r\n\t}\r\n\tsort(arr + 1, arr + n + 1);\r\n\tint m = n;\r\n\twhile(m > 0) {\r\n\t\tsolve(m);\r\n\t\tm--;\r\n\t}\r\n    for(int i = 0; i < ans.size(); i++) {\r\n    \tans[i] = ans[i] * exp(n - 1 - i);\r\n    \tans[i] %= mod;\r\n    \tarr[1] += ans[i];\r\n    \tarr[1] %= mod;\r\n\t}\r\n\tcout << arr[1];\r\n\treturn 0;\r\n}\r\n"
}