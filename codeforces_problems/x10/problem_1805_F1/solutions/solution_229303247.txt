{
    "id": 229303247,
    "contestId": 1805,
    "creationTimeSeconds": 1697985876,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1805,
        "index": "F1",
        "name": "Survival of the Weakest (easy version)",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2600,
        "tags": [
            "binary search",
            "brute force",
            "implementation",
            "math",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1805,
        "members": [
            {
                "handle": "YXHuang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1680446100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 119,
    "timeConsumedMillis": 576,
    "memoryConsumedBytes": 9420800,
    "source": "// LUOGU_RID: 131130959\n#include <bits/stdc++.h>\r\n#ifndef ONLINE_JUDGE\r\n#include \"lib.h\"\r\n#endif\r\n#define rep(i, min, max) for(int i = (min); i <= (max); ++i)\r\n#define nrep(i, max, min) for(int i = (max); i >= (min); --i)\r\n#define case() int Ts = read(); rep(T, 1, Ts)\r\n#define putf(flag) puts((flag) ? \"YES\" : \"NO\")\r\n#define put(x) printf(\"%d \", x)\r\n#define putl(x) printf(\"%lld \", x)\r\n#define endl() putchar('\\n')\r\n#define reads(str) scanf(\"%s\", str + 1)\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ninline int read()\r\n{\r\n    int now=0; bool nev=false; char c=getchar();\r\n    while(c<'0' || c>'9') { if(c=='-') nev=true; c=getchar(); }\r\n    while(c>='0' && c<='9') { now=(now<<1)+(now<<3)+(c&15); c=getchar(); }\r\n    return nev?-now:now;\r\n}\r\n\r\nconst int N = 3e3 + 10;\r\nconst ll mod = 1e9 + 7;\r\n\r\nll a[N], pw[N];\r\nbool vis[N][N];\r\n\r\nstruct node {\r\n    ll v; int x, y;\r\n    bool operator > (const node &b) const {\r\n        return v > b.v;\r\n    }\r\n};\r\nvector<node> rmv_list;\r\npriority_queue<node, vector<node>, greater<node>> heap;\r\n\r\nvector<int> vec;\r\ninline node _(int x, int y) {\r\n    return {vec[x] + vec[y], x, y};\r\n}\r\n\r\nll sum;\r\n\r\nvoid solve(int n) {\r\n    heap = {};\r\n    heap.push(_(0, 1));\r\n    int cnt = 0;\r\n    while(!heap.empty() && cnt < n - 1) {\r\n        node p = heap.top(); heap.pop();\r\n        if(p.x >= p.y || vis[p.x][p.y]) continue;\r\n        // print(p.x, p.y);\r\n        vis[p.x][p.y] = 1;\r\n        rmv_list.push_back(p);\r\n        heap.push(_(p.x + 1, p.y));\r\n        heap.push(_(p.x, p.y + 1));\r\n        cnt ++;\r\n    }\r\n    vec.clear();\r\n    for(node &p : rmv_list) {\r\n        // print(p.v);\r\n        vec.push_back(p.v);\r\n        vis[p.x][p.y] = 0;\r\n    }\r\n    rmv_list.clear();\r\n    // plist(vec);\r\n    ll base = vec[0];\r\n    sum = (sum + base * pw[n - 2]) % mod;\r\n    for(int &i : vec) i -= base;\r\n}\r\n\r\nint main(){\r\n    int n = read();\r\n    vec.resize(n);\r\n    rep(i, 0, n - 1) vec[i] = read();\r\n    sort(vec.begin(), vec.end());\r\n    pw[0] = 1;\r\n    rep(i, 1, n) pw[i] = pw[i - 1] * 2 % mod;\r\n    nrep(i, n, 2) solve(i);//, plist(vec);\r\n    putl(sum);\r\n}"
}