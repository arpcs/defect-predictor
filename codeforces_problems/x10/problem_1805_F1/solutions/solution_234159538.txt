{
    "id": 234159538,
    "contestId": 1805,
    "creationTimeSeconds": 1700871140,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1805,
        "index": "F1",
        "name": "Survival of the Weakest (easy version)",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2600,
        "tags": [
            "binary search",
            "brute force",
            "implementation",
            "math",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1805,
        "members": [
            {
                "handle": "CJ_xde_lt"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1680446100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 119,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 16793600,
    "source": "// LUOGU_RID: 136695222\n#include<bits/stdc++.h>\r\n#pragma GCC optimize(\"Ofast,no-stack-protector,fast-math\",3)\r\nusing namespace std;\r\nconst int N=(1<<21)+10,M=1e9+7;\r\nusing ll=long long;\r\nusing ul=unsigned long long;\r\nusing ld=double;\r\nstring s;\r\nint n,a[N],b[N],K;\r\nstruct dat{\r\n    int v,x,y;\r\n    bool operator<(const dat &z)\r\n    const{return v>z.v;}\r\n};\r\nint main(){\r\n    ios::sync_with_stdio(false);\r\n    int i,j,k,l,r,x,y,z;\r\n    for(x=1,cin>>n;x<=n;++x)cin>>a[x];\r\n    sort(a+1,a+n+1);\r\n    for(x=2;x<=n;++x)a[x]-=a[1];\r\n    for(int _t=n-1;_t;--_t){\r\n        (K=a[1]<<1)>=M&&(K-=M),a[1]=0;\r\n        priority_queue<dat>q1;\r\n        q1.push({a[2],1,2});\r\n        for(x=1;x<=_t;++x){\r\n            dat at=q1.top();q1.pop(),b[x]=at.v;\r\n            if(at.y<=_t)q1.push({a[at.x]+a[at.y+1],at.x,at.y+1});\r\n            if(at.x==at.y-1)q1.push({a[at.x+1]+a[at.y+1],at.x+1,at.y+1});\r\n        }\r\n        for(x=2;x<=_t;++x)a[x]=b[x]-b[1];\r\n        a[1]=(b[1]+K)%M;\r\n    }\r\n    printf(\"%d\\n\",a[1]%M);\r\n    return 0;\r\n}"
}