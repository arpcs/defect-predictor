{
    "id": 234331416,
    "contestId": 1805,
    "creationTimeSeconds": 1700946603,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1805,
        "index": "F1",
        "name": "Survival of the Weakest (easy version)",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2600,
        "tags": [
            "binary search",
            "brute force",
            "implementation",
            "math",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1805,
        "members": [
            {
                "handle": "gabriel88766"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1680446100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\ntypedef long long int ll;\r\ntypedef unsigned long long int ull;\r\nconst ll INF_LL = 0x3f3f3f3f3f3f3f3f, MOD = 1e9+7; //1e9+7\r\nconst int INF_INT = 0x3f3f3f3f;\r\nconst long double PI = acosl(-1.), EPS = 1e-9; \r\nusing namespace std;\r\n\r\n//cout << fixed << setprecision(6)\r\nint main(){\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    //freopen(\"in\", \"r\", stdin); //test input\r\n    int n;\r\n    cin >> n;\r\n    vector<ll> v(n);\r\n    for(int i=0;i<n;i++) cin >> v[i];\r\n    sort(v.begin(), v.end());\r\n    for(int i=n-1;i>=1;i--){\r\n        //from 0 to i; best i sums\r\n        ll beg = v[0]; //if v[i].v >= beg v[i].v else v[i].v + MOD\r\n        ll fs = v[0] + v[1];\r\n        if(v[1] < v[0]) fs += MOD;\r\n        // fs+MOD >= sums >= fs \r\n        ll lo = fs-1, hi = fs+MOD;\r\n        while(lo != hi){ //lo+1 is the limit\r\n            ll mid = lo + (hi - lo + 1) / 2;\r\n            int p = i;\r\n            ll qt = 0;\r\n            for(int j=0;j<i;j++){\r\n                while(p > 0){\r\n                    ll n1 = v[j] >= v[0] ? v[j] : v[j] + MOD;\r\n                    ll n2 = v[p] >= v[0] ? v[p] : v[p] + MOD;\r\n                    if(n1 + n2 <= mid) break;\r\n                    else --p;\r\n                }\r\n                if(p > j) qt += p-j;\r\n                else break;\r\n            }\r\n            if(qt >= i) hi = mid - 1;\r\n            else lo = mid;\r\n        }\r\n        int p2 = i;\r\n        vector<ll> news;\r\n        for(int j=0;j<i;j++){\r\n            while(p2 > 0){\r\n                ll n1 = v[j] >= v[0] ? v[j] : v[j] + MOD;\r\n                ll n2 = v[p2] >= v[0] ? v[p2] : v[p2] + MOD;\r\n                if(n1 + n2 <= lo) break;\r\n                else --p2;\r\n            }\r\n            if(p2 <= j) break;\r\n            for(int k=j+1;k<=p2;k++){\r\n                ll n1 = v[j] >= v[0] ? v[j] : v[j] + MOD;\r\n                ll n2 = v[k] >= v[0] ? v[k] : v[k] + MOD;\r\n                news.push_back(n1+n2);\r\n            }\r\n        }\r\n        while(news.size() < i) news.push_back(lo+1);\r\n        assert(news.size() == i);\r\n        sort(news.begin(), news.end());\r\n        for(int j=0;j<i;j++) v[j] = news[j];\r\n    }\r\n    cout << v[0] << \"\\n\";\r\n}"
}