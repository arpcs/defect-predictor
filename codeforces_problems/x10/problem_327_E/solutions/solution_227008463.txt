{
    "id": 227008463,
    "contestId": 327,
    "creationTimeSeconds": 1696681709,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 327,
        "index": "E",
        "name": "Axis Walking",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "combinatorics",
            "constructive algorithms",
            "dp",
            "meet-in-the-middle"
        ]
    },
    "author": {
        "contestId": 327,
        "members": [
            {
                "handle": "WhoWillBecomeMaster"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1372941000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 134451200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n//#define int long long\r\n#define yes \"YES\"\r\n#define no \"NO\"\r\n#define endl \"\\n\"\r\n\r\nvoid fast()\r\n{\r\n\tios_base::sync_with_stdio(0);\r\n\tcin.tie(0);\r\n\tcout.tie(0);\r\n\r\n}\r\nvector<int> for_v(int n)\r\n{\r\n\tvector<int>v(n);\r\n\tfor (int i = 0; i < n; i++)\r\n\t\tcin >> v[i];\r\n\treturn v;\r\n}\r\nlong long gcd(long long a, long long b) {\r\n\tif (b == 0)\r\n\t\treturn a;\r\n\telse return  gcd(b, a%b);\r\n}\r\n\r\nint n;\r\nint dp[(1 << 24)];\r\nint ans[(1 << 24)];\r\nint arr[30];\r\nint k[3];\r\nint const mod = 1e9 + 7;\r\nint solve(int mask)\r\n{\r\n\tif (mask == (1 << n) - 1)\r\n\t\treturn 1;\r\n\tif (mask != 0)\r\n\t{\r\n\t\tint num = 0;\r\n\t\tint nn = mask;\r\n\t\twhile (nn)\r\n\t\t{\r\n\t\t\tint bt = log2(nn&(-nn));\r\n\t\t\tnum += arr[bt];\r\n\t\t\tnn = (nn ^ (1 << bt));\r\n\t\t\tif (ans[nn] != 0)\r\n\t\t\t{\r\n\t\t\t\tnum += ans[nn];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tans[nn] = num;\r\n\r\n\t\tif (num == k[0] || num == k[1])\r\n\t\t\treturn 0;\r\n\t}\r\n\tint &ret = dp[mask];\r\n\tif (ret + 1)return ret;\r\n\tret = 0;\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\tif ((mask&(1 << i)) == 0)\r\n\t\t\tret += solve((mask|(1 << i)));\r\n\t\tret %= mod;\r\n\t}\r\n\treturn ret;\r\n}\r\nint32_t main()\r\n{\r\n\tfast(); \r\n\tmemset(dp, -1, sizeof dp);\r\n\tcin >> n;\r\n\tfor (int i = 0; i < n; i++)\r\n\t\tcin >> arr[i];\r\n\tint q; cin >> q;\r\n\tfor (int i = 0; i < q; i++)\r\n\t\tcin >> k[i];\r\n\tint ans = solve(0);\r\n\tcout << ans << endl;\r\n}"
}