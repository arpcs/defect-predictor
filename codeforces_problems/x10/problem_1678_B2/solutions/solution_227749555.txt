{
    "id": 227749555,
    "contestId": 1678,
    "creationTimeSeconds": 1697079669,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1678,
        "index": "B2",
        "name": "Tokitsukaze and Good 01-String (hard version)",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1800,
        "tags": [
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1678,
        "members": [
            {
                "handle": "ss_x"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1652020500
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "import java.io.*;\r\nimport java.util.*;\r\n\r\npublic class Main {    \r\n    private void tc() {\r\n        int t = io.nextInt();\r\n        while (t-- > 0) {\r\n            int n = io.nextInt();\r\n            char[] s = io.next().toCharArray();\r\n            int as=0,a=1;\r\n            for(int i=1;i<n;i+=2) { \r\n                boolean b=s[i]!=s[i-1];\r\n                if (b) {\r\n                    as++;\r\n                    if (i > 2)s[i] = s[i - 1] = s[i - 2];\r\n                    else if (i < n - 1)s[i] = s[i - 1] = s[i + 1];\r\n                }\r\n                if(i<n-1 && s[i]!=s[i+1] && s[i+1]==s[i+2])a++;\r\n            }\r\n            io.println(as+\" \"+a);\r\n        }\r\n    }\r\n    \r\n    public static void main(String[] args) {\r\n        boolean fm=false;//fm=true;\r\n        try{io=fm?new Kattio(new FileInputStream(p(\"input.txt\"))):new Kattio();}catch (FileNotFoundException e) {e.printStackTrace();}\r\n        int n=fm?io.nextInt():1;for(int i=0;i<n;i++)new Main().tc();io.flush();io.close();\r\n    }\r\n    private static Kattio io=null;\r\n    public static File p(String a){return new File(Main.class.getResource(\"\").getPath()+a);}    \r\n    public static class Kattio extends PrintWriter{\r\n        BufferedReader r;StringTokenizer st;\r\n        public Kattio(){this(System.in,System.out);}\r\n        public Kattio(FileInputStream f){this(f,System.out);}\r\n        public Kattio(InputStream i,OutputStream o){super(o);r=new BufferedReader(new InputStreamReader(i));}\r\n        public Kattio(String intput, String output)throws IOException{super(output);r=new BufferedReader(new FileReader(intput));}\r\n        public String next(){try{while(st==null||!st.hasMoreTokens())st=new StringTokenizer(r.readLine());return st.nextToken();}catch(Exception e){}return null;}\r\n        public int nextInt(){return Integer.parseInt(next());}\r\n        public double nextDouble(){return Double.parseDouble(next());}\r\n        public long nextLong(){return Long.parseLong(next());}\r\n    }\r\n}\r\n"
}