{
    "id": 235609766,
    "contestId": 1758,
    "creationTimeSeconds": 1701623150,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1758,
        "index": "E",
        "name": "Tick, Tock",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2500,
        "tags": [
            "combinatorics",
            "dfs and similar",
            "dsu",
            "graphs"
        ]
    },
    "author": {
        "contestId": 1758,
        "members": [
            {
                "handle": "Dada878"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1669390500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 21811200,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n#ifdef DEBUG\r\nbool debug_mode = true;\r\n#else\r\nbool debug_mode = false;\r\n#endif\r\n#define cerr if(debug_mode) cerr\r\ntemplate<typename T> void _do(T x){cerr<<x<<\"\\n\";}\r\ntemplate<typename T, typename ...U> void _do(T x, U ...y){cerr << x << \", \"; _do(y...);}\r\n#define dbg(...) cerr << #__VA_ARGS__ << \" = \"; _do(__VA_ARGS__);\r\ntemplate <class T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\ninline char readchar(){static char buffer[BUFSIZ], * now = buffer + BUFSIZ, * end = buffer + BUFSIZ;if (now == end){if (end < buffer + BUFSIZ)return EOF;end = (buffer + fread(buffer, 1, BUFSIZ, stdin));now = buffer;}return *now++;}\r\ninline int nextint(){int x = 0, c = readchar(), neg = false;while(('0' > c || c > '9') && c!='-' && c!=EOF) c = readchar();if(c == '-') neg = true, c = readchar();while('0' <= c && c <= '9') x = x*10 + (c^'0'), c = readchar();if(neg) x = -x;return x;}\r\ninline string nextstring(){string x;char c = readchar();while(('a' > c || c > 'z') && c!=EOF) c = readchar();while('a' <= c && c <= 'z') x += c, c = readchar();return x;}\r\ntemplate<typename T>void debug(const T &v,int h,int w,string sv=\" \"){for(int i=0;i<h;i++){cerr<<v[i][0];for(int j=1;j<w;j++)cerr<<sv<<v[i][j];cerr<<endl;}};\r\ntemplate<typename T>void debug(const T &v,int n,string sv=\" \"){if(n!=0)cerr<<v[0];for(int i=1;i<n;i++)cerr<<sv<<v[i];cerr<<endl;};\r\ntemplate<typename T>void debug(const vector<T>&v){debug(v,v.size());}\r\ntemplate<typename T>void debug(const vector<vector<T>>&v){for(auto &vv:v)debug(vv,vv.size());}\r\ntemplate<typename T>void debug(stack<T> st){while(!st.empty()){cerr<<st.top()<<\" \";st.pop();}cerr<<endl;}\r\ntemplate<typename T>void debug(queue<T> st){while(!st.empty()){cerr<<st.front()<<\" \";st.pop();}cerr<<endl;}\r\ntemplate<typename T>void debug(deque<T> st){while(!st.empty()){cerr<<st.front()<<\" \";st.pop_front();}cerr<<endl;}\r\ntemplate<typename T>void debug(priority_queue<T> st){while(!st.empty()){cerr<<st.top()<<\" \";st.pop();}cerr<<endl;}\r\ntemplate<typename T>void debug(priority_queue<T, vector<int>, greater<int>> st){while(!st.empty()){cerr<<st.top()<<\" \";st.pop();}cerr<<endl;}\r\ntemplate<typename T>void debug(const set<T>&v){for(auto z:v)cerr<<z<<\" \";cerr<<endl;}\r\ntemplate<typename T>void debug(const multiset<T>&v){for(auto z:v)cerr<<z<<\" \";cerr<<endl;}\r\ntemplate<typename T,typename V>void debug(const map<T,V>&v){for(auto z:v)cerr<<\"[\"<<z.first<<\"]=\"<<z.second<<\",\";cerr<<endl;}\r\ntemplate<typename T,size_t size>void debug(const array<T, size> &a){for(auto z:a)cerr<<z<<\" \";cerr<<endl;}\r\nstruct custom_hash {static uint64_t splitmix64(uint64_t x) {/*http://xorshift.di.unimi.it/splitmix64.c*/x += 0x9e3779b97f4a7c15;x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;x = (x ^ (x >> 27)) * 0x94d049bb133111eb;return x ^ (x >> 31);}size_t operator()(uint64_t x) const {static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();return splitmix64(x + FIXED_RANDOM);}};\r\n#define int long long\r\n#define endl \"\\n\"\r\n#define io ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n#define all(x) x.begin(), x.end()\r\n#define square(x) ((x)*(x))\r\n#define cubed(x) ((x)*(x)*(x))\r\n#define ff first\r\n#define ss second\r\n#define pii pair<int, int>\r\n#define ary2 array<int, 2>\r\n#define ary3 array<int, 3>\r\n#define ary4 array<int, 4>\r\n#define ary5 array<int, 5>\r\n#define lowbit(x) ((x)&(-x))\r\n#define szz(x) ((int)x.size())\r\n\r\nconst int maxn = 2e5 + 10;\r\nconst int mod = 1e9 + 7;\r\n\r\nint n, m, h;\r\nbool vis[maxn];\r\nint val[maxn];\r\nbool valid = true;\r\n\r\nvector<pii> graph[maxn];\r\nvector<vector<int>> tb;\r\n\r\nint idr[maxn];\r\nint idc[maxn];\r\n\r\nint id = 0;\r\n\r\nint r(int x) {\r\n    if (!idr[x]) idr[x] = ++id;\r\n    return idr[x];\r\n}\r\n\r\nint c(int x) {\r\n    if (!idc[x]) idc[x] = ++id;\r\n    return idc[x];\r\n}\r\n\r\nvoid dfs(int v) {\r\n    for (auto [u, c] : graph[v]) {\r\n        if (vis[u]) {\r\n            if ((val[u] + val[v] + c) % h != 0) {\r\n                valid = false;\r\n            }\r\n            continue;\r\n        }\r\n        val[u] = (h - c - val[v]) % h;\r\n        vis[u] = true;\r\n        dfs(u);\r\n    }\r\n}\r\n\r\nint fpow(int x, int p) {\r\n    if (p == 0) return 1;\r\n    return (fpow(x, p-1) % mod * x) % mod;\r\n}\r\n\r\nvoid sol() {\r\n    // input\r\n    cin >> n >> m >> h;\r\n    tb.resize(n, vector<int>(m));\r\n    for (int i = 0; i < n; i++) {\r\n        for (int j = 0; j < m; j++) {\r\n            cin >> tb[i][j];\r\n            if (tb[i][j] != -1) {\r\n                graph[r(i)].push_back({c(j), tb[i][j]});\r\n                graph[c(j)].push_back({r(i), tb[i][j]});\r\n            }\r\n        }\r\n    }\r\n    // dfs fomr all connected component\r\n    int com = 0;\r\n    for (int i = 0; i < n; i++) {\r\n        int u = r(i);\r\n        if (vis[u]) continue;\r\n        val[u] = 0;\r\n        com++;\r\n        vis[u] = true;\r\n        dfs(u);\r\n    }\r\n    for (int j = 0; j < m; j++) {\r\n        int u = c(j);\r\n        if (vis[u]) continue;\r\n        val[u] = 0;\r\n        com++;\r\n        vis[u] = true;\r\n        dfs(u);\r\n    }\r\n    // output\r\n    if (!valid) {\r\n        cout << 0 << endl;\r\n    } else {\r\n        cout << fpow(h, com-1) << endl;\r\n    }\r\n    // reset\r\n    tb.clear();\r\n    valid = true;\r\n    for (int i = 1; i <= n*2 + m*2; i++) {\r\n        vis[i] = false;\r\n        val[i] = 0;\r\n        graph[i].clear();\r\n    }\r\n}\r\n\r\nsigned main() {\r\n    io;\r\n    int t;\r\n    cin >> t;\r\n    while (t--) sol();\r\n}"
}