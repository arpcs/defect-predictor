{
    "id": 231662595,
    "contestId": 1758,
    "creationTimeSeconds": 1699328109,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1758,
        "index": "E",
        "name": "Tick, Tock",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2500,
        "tags": [
            "combinatorics",
            "dfs and similar",
            "dsu",
            "graphs"
        ]
    },
    "author": {
        "contestId": 1758,
        "members": [
            {
                "handle": "luogu_bot1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1669390500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 63,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 23244800,
    "source": "// LUOGU_RID: 133780367\n#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#include <bits/stdc++.h>\n#define LL long long\nusing namespace std;\n\n#define L(i, s, t) for(int i = s; i <= t; ++i)\n#define R(i, t, s) for(int i = t; i >= s; --i)\n\nvoid read(int &x) {\n    x = 0; int w = 1; char c = getchar(); for(; c < '0' || c > '9'; c = getchar()) if (c == '-') w = -1;\n    for(; c <= '9' && c >= '0'; c = getchar()) x = x * 10 + c - '0'; x *= w;\n}\nconst int N = 2e5;\n\nint t, n, m, h, fa[N + 5], flag[N + 5], g[N + 5];\nvector<int > a[N + 5];\n\nint find(int x) {\n\tif (fa[x] == x)\n\t\treturn x;\n\tint ff = find(fa[x]);\n\t(g[x] += g[fa[x]]) %= h;\n\treturn fa[x] = ff;\n}\n\nint tot;\n\nconst LL Mod = 1e9 + 7;\n\nLL ksm(LL x, LL y) {\n\tLL res = 1;\n\twhile(y) {\n\t\tif (y & 1)\n\t\t\tres = res * x % Mod;\n\t\tx = x * x % Mod;\n\t\ty >>= 1;\n\t} \n\treturn res;\n}\n\nvoid solve() {\n\tread(n); read(m); read(h);\n\tfor(int i = 1; i <= n; ++i) {\n\t\ta[i].clear(); a[i].resize(m + 1);\n\t\tfor(int j = 1; j <= m; ++j)\n\t\t\tread(a[i][j]);\n\t}\n\tfor(int i = 1; i <= n; ++i) fa[i] = i;\n\tfor(int i = 1; i <= n; ++i) g[i] = 0;\n\tint sum = 0;\n\ttot = n;\n\tfor(int j = 1; j <= m; ++j) {\n\t\tint tt = 0, lst = 0;\n\t\tfor(int i = 1; i <= n; ++i)\n\t\t\tif (a[i][j] != -1) {\n\t\t\t\ttt = 1;\n\t\t\t\tif (lst) {\n\t\t\t\t\tint fx = find(lst), fy = find(i);\n\t\t\t\t\tif (fx == fy) {\n\t\t\t\t\t\tif (((a[i][j] - a[lst][j] + g[i]) % h + h) % h != g[lst]) {\n\t\t\t\t\t\t\tcout << 0 << endl;\n\t\t\t\t\t\t\treturn ;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (fx < fy)  {\n\t\t\t\t\t\t\tfa[fx] = fy;\n\t\t\t\t\t\t\tg[fx] = ((a[i][j] - a[lst][j] + g[i] - g[lst]) % h + h) % h;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tfa[fy] = fx;\n\t\t\t\t\t\t\tg[fy] = ((g[lst] - a[i][j] + a[lst][j] - g[i]) % h + h) % h;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlst = i;\n\t\t\t}\n\t\tif (j != 1 && !tt) ++sum;\n\t}\n\tfor(int i = 1; i <= n; ++i) flag[i] = 0;\n\tint kk = sum;\n\tfor(int i = 1; i <= n; ++i)\n\t\tif (a[i][1] != -1) flag[find(i)] = 1;\n\n\tfor(int i = 1; i <= n; ++i)\n\t\tif (find(i) == i && flag[i] == 0) ++kk;\n\tprintf(\"%lld\\n\", ksm(h, kk));\n}\n\nint main() {\n\t// freopen(\"t.in\", \"r\", stdin);\n\tread(t);\n\twhile(t--) solve();\n    return 0;\n}"
}