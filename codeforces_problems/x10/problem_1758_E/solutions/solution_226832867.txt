{
    "id": 226832867,
    "contestId": 1758,
    "creationTimeSeconds": 1696575725,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1758,
        "index": "E",
        "name": "Tick, Tock",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2500,
        "tags": [
            "combinatorics",
            "dfs and similar",
            "dsu",
            "graphs"
        ]
    },
    "author": {
        "contestId": 1758,
        "members": [
            {
                "handle": "Tx_Lcy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1669390500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 63,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 27443200,
    "source": "// LUOGU_RID: 127974390\n//A tree without skin will surely die.\n//A man without face is invincible.\n#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n#define sqr(x) ((x)*(x))\n#define all(x) (x).begin(),(x).end()\n#define Tim ((double)clock()/CLOCKS_PER_SEC)\n#define mid ((l+r)>>1)\n#define lowbit(x) (x&-x)\nint const N=2e5+10;\nint const mod=1e9+7;\nvector<int>a[N];\nint cha[N],n,m,h,ct,fa[N];\ninline int find(int x){\n    if (x==fa[x]) return x;\n    int t=fa[x];fa[x]=find(fa[x]),cha[x]+=cha[t],cha[x]%=h;\n    return fa[x];\n}\nvoid solve(){\n    cin>>n>>m>>h;\n    for (int i=1;i<=n;++i){\n        a[i].resize(m+1);\n        for (int j=1;j<=m;++j) cin>>a[i][j];\n    }\n    for (int i=1;i<=m;++i) fa[i]=i,cha[i]=0;\n    for (int j=1;j<=n;++j){\n        vector<int>vec;\n        for (int i=1;i<=m;++i) if (a[j][i]!=-1) vec.push_back(i);\n        if (vec.size()<2) continue;\n        for (int i=1;i<(int)vec.size();++i){\n            int x=find(vec[i]),y=find(vec[0]);\n            if (x^y){\n                cha[x]=(a[j][vec[i]]-cha[vec[i]]-a[j][vec[0]]+cha[vec[0]]+h+h)%h;\n                fa[x]=y;\n            }else if (cha[x]!=(a[j][vec[i]]-cha[vec[i]]-a[j][vec[0]]+cha[vec[0]]+h+h)%h)\n                return cout<<\"0\\n\",void();\n        }\n    }\n    for (int i=1;i<=n;++i){\n        for (int j=m;j>=1;--j)\n            if (a[i][j]!=-1) a[i][find(j)]=(a[i][j]-cha[j]+h)%h;\n        for (int j=1;j<=m;++j)\n            if (a[i][find(j)]!=-1) a[i][j]=(a[i][find(j)]+cha[j])%h;\n    }\n    for (int i=1;i<=n;++i) fa[i]=i,cha[i]=0;\n    for (int j=1;j<=m;++j){\n        vector<int>vec;\n        for (int i=1;i<=n;++i) if (a[i][j]!=-1) vec.push_back(i);\n        if (vec.size()<2) continue;\n        for (int i=1;i<(int)vec.size();++i){\n            int x=find(vec[i]),y=find(vec[0]);\n            if (x^y){\n                cha[x]=(a[vec[i]][j]-cha[vec[i]]-a[vec[0]][j]+cha[vec[0]]+h+h)%h;\n                fa[x]=y;\n            }else if (cha[x]!=(a[vec[i]][j]-cha[vec[i]]-a[vec[0]][j]+cha[vec[0]]+h+h)%h)\n                return cout<<\"0\\n\",void();\n        }\n    }\n    for (int j=1;j<=m;++j){\n        for (int i=n;i>=1;--i)\n            if (a[i][j]!=-1) a[find(i)][j]=(a[i][j]-cha[i]+h)%h;\n        for (int i=1;i<=n;++i)\n            if (a[find(i)][j]!=-1) a[i][j]=(a[find(i)][j]+cha[i])%h;\n    }\n    int ans=1;map<int,int>mp;\n    for (int i=1;i<=n;++i)\n        if (a[i][1]==-1 && !mp[find(i)]) mp[find(i)]=1,ans*=h,ans%=mod;\n    for (int j=2;j<=m;++j){\n        int fl=1;\n        for (int i=1;i<=n;++i) fl&=(a[i][j]==-1);\n        if (fl) ans*=h,ans%=mod;\n    }\n    cout<<ans<<'\\n';\n}\nsigned main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0),cout.tie(0);\n    int t=1;\n    cin>>t;\n    while (t--) solve();\n    return 0;\n}"
}