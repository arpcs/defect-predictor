{
    "id": 233527605,
    "contestId": 1144,
    "creationTimeSeconds": 1700464052,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1144,
        "index": "E",
        "name": "Median String",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "bitmasks",
            "math",
            "number theory",
            "strings"
        ]
    },
    "author": {
        "contestId": 1144,
        "members": [
            {
                "handle": "Alfeh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1554041100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 17,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1843200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long int \r\nconst int sz = 2e5 + 5, mod = 1e9 + 7;\r\nstring add(string c, string d) {\r\n    int n = c.size();\r\n    string ans = \"\";\r\n     int cary = 0;\r\n    for(int i = n - 1; i >= 0; i--) {\r\n        int a = (c[i] - 'a' + 1) + (d[i] - 'a' + 1) + cary;\r\n        // cout << a << \" \" << c[i] - 'a' + 1 << \" \" << d[i] - 'a' + 1 << \"\\n\";\r\n        //assert(a % 2 == 0);\r\n        // a /= 2;\r\n        cary = (a - 1) / 26;\r\n        int md = a % 26;\r\n        if(md == 0) md = 26;\r\n        md--;\r\n        ans += char('a' + md);\r\n        // cout << cary << \" \" << md << \"\\n\";\r\n    }\r\n    if(cary) ans += char('a' + cary - 1), n++;\r\n    reverse(ans.begin(), ans.end());\r\n    return ans;\r\n}\r\nstring divide(string c) {\r\n    int cary = 0;\r\n    string ans = \"\";\r\n    for(int i = 0; i < c.size(); i++) {\r\n        int a = cary * 26 + (c[i] - 'a') + 1;\r\n        // cout << a << \"\\n\";\r\n        int b = a / 2;\r\n        if(b) {\r\n            b--;\r\n            ans += char('a' + b);\r\n        } else {\r\n            if(!ans.empty()) {\r\n                int j = ans.size() - 1;\r\n                while(1) {\r\n                    if(ans[j] == 'a') {\r\n                        ans[j] = 'z';\r\n                        j--;\r\n                    } else {\r\n                        ans[j]--;\r\n                        break;\r\n                    }\r\n                }\r\n                ans += 'z';\r\n            }\r\n        }\r\n        cary = a % 2;\r\n    }\r\n    return ans;\r\n}\r\nint32_t main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int n; cin >> n;\r\n    string c, d; cin >> c >> d;\r\n    string ans = add(c, d);\r\n    c = ans;\r\n    // cout << c << \"\\n\";\r\n    string ee = \"qoztvz\";\r\n    // cout << add(ee, ee) << \"\\n\";\r\n    // return 0;\r\n    ans = divide(c);\r\n    cout << ans << \"\\n\";\r\n    // cout << add(ans, ans) << \"\\n\";\r\n    return 0;\r\n}\r\n"
}