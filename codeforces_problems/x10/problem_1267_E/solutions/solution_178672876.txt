{
    "id": 178672876,
    "contestId": 1267,
    "creationTimeSeconds": 1667214746,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1267,
        "index": "E",
        "name": "Elections",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 1267,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1575183600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef pair<int, int> PII;\n\nconst int N = 110;\nint a[N][N];\nint sum[N];\n\nbool cmp(PII a, PII b) {\n    if (a.first != b.first)\n        return a.first < b.first;\n    else\n        return a.second < b.second;\n}\n\nvoid solve() {\n    int n, m;\n    cin >> n >> m;\n    swap(n, m);\n\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++) scanf(\"%d\", &a[i][j]);\n\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j < m; j++) {\n            a[i][j] -= a[i][m];\n            sum[j] += a[i][j];\n        }\n\n    // for (int i = 1; i < m; i ++) cout << sum[i] << ' ' ;\n    // cout << endl;\n\n    vector<int> res;\n    for (int k = 1; k < m; k++) {\n        vector<PII> v;\n        for (int i = 1; i <= n; i++) v.push_back({a[i][k], i});\n\n        sort(v.begin(), v.end(), cmp);\n\n        vector<int> s;\n        int kk = 0;\n        while (sum[k] < 0) {\n            sum[k] -= v[kk].first;\n            s.push_back(v[kk].second);\n            kk++;\n        }\n      //   for (auto c : s) cout << c << ' ' ;\n      //   cout << endl;\n        if (res.empty() || s.size() < res.size()) res = s;\n    }\n    cout << res.size() << '\\n';\n    for (int c : res) cout << c << ' ';\n}\n\nsigned main() {\n    int T;\n    // cin >> T;\n    T = 1;\n    while (T--) {\n        solve();\n    }\n    return 0;\n}\n  \t   \t \t \t\t   \t  \t\t\t    \t  \t\t\t"
}