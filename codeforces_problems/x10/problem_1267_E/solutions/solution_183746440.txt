{
    "id": 183746440,
    "contestId": 1267,
    "creationTimeSeconds": 1670082065,
    "relativeTimeSeconds": 6365,
    "problem": {
        "contestId": 1267,
        "index": "E",
        "name": "Elections",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 1267,
        "members": [
            {
                "handle": "Pan1n"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1670075700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 23,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define pb push_back\r\n#define all(x) (x).begin(),(x).end()\r\n#define eps 1e-7\r\n\r\nusing namespace std;\r\nusing ll = long long;\r\nusing ld = long double;\r\n\r\nbool cmp(vector<int>& v1, vector<int>& v2) {\r\n    if (1 >= v1.size())\r\n        assert(\"some\");\r\n    return (v1.back()-v1[1]) <= (v2.back() - v2[1]);\r\n}\r\n\r\nvector<vector<int>> ar;\r\n\r\nint32_t main()\r\n{\r\n    int n, m;\r\n    cin >> n >> m;\r\n\r\n    ar.resize(m, vector<int>(n+1));\r\n\r\n\r\n    vector<int> sum_k(n);\r\n\r\n    for (int i = 0; i < m; i++) {\r\n        ar[i][0] = i;\r\n        for (int j = 0; j < n; j++) {\r\n            cin >> ar[i][j+1];\r\n            sum_k[j] += ar[i][j+1];\r\n        }\r\n        reverse(next(ar[i].begin()), ar[i].end());\r\n    }\r\n\r\n    vector<int> ans(m);\r\n    for (int i = 0; i < m; i++)\r\n        ans[i] = i+1;\r\n\r\n    vector<int> temp;\r\n    temp.reserve(n);\r\n    for (int k = 0; k <= n-2; k++) {\r\n        sort(all(ar), cmp);\r\n        int sum_n = sum_k[n-1];\r\n        int var = sum_k[k];\r\n        temp.clear();\r\n        for (int i = 0; i < m && sum_n > var; i++) {\r\n            temp.pb(ar[i][0]+1);\r\n            sum_n -= ar[i][1];\r\n            var -= ar[i].back();\r\n        }\r\n        if (temp.size() < ans.size()) {\r\n            ans = temp;\r\n        }\r\n        for (int i = 0; i < m; i++)\r\n            if (ar[i].size())\r\n                ar[i].pop_back();\r\n    }\r\n    cout << ans.size() << '\\n';\r\n    for (auto item : ans)\r\n        cout << item << \" \";\r\n    return 0;\r\n}"
}