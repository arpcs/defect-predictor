{
    "id": 138477761,
    "contestId": 442,
    "creationTimeSeconds": 1638990931,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 442,
        "index": "A",
        "name": "Borya and Hanabi",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "bitmasks",
            "brute force",
            "implementation"
        ]
    },
    "author": {
        "contestId": 442,
        "members": [
            {
                "handle": "DreadArceus"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1403191800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nvoid solveCase()\r\n{\r\n    int n = 0;\r\n    cin >> n;\r\n    vector<int> v(n);\r\n    set<int> all;\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        string s;\r\n        cin >> s;\r\n        v[i] += 1 << (s[1] - '1');\r\n        if (s[0] == 'R')\r\n            v[i] += 1 << 5;\r\n        else if (s[0] == 'G')\r\n            v[i] += 1 << 6;\r\n        else if (s[0] == 'B')\r\n            v[i] += 1 << 7;\r\n        else if (s[0] == 'Y')\r\n            v[i] += 1 << 8;\r\n        else\r\n            v[i] += 1 << 9;\r\n        all.insert(v[i]);\r\n    }\r\n\r\n    int ans = 11;\r\n    for (int mask = 0; mask < (1 << 10); mask++)\r\n    {\r\n        vector<set<int>> opt(n, all);\r\n        bool good = true;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            for (int b = 0; b < 10; b++)\r\n                if ((mask >> b) & 1)\r\n                    for (int card : all)\r\n                        if (((card >> b) & 1) != ((v[i] >> b) & 1))\r\n                            opt[i].erase(card);\r\n            good &= opt[i].size() == 1;\r\n        }\r\n\r\n        if (good)\r\n            ans = min(ans, __builtin_popcount(mask));\r\n    }\r\n\r\n    cout << ans;\r\n}\r\n\r\nint32_t main()\r\n{\r\n    ios::sync_with_stdio(false), cin.tie(NULL);\r\n    solveCase();\r\n}"
}