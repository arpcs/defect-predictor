{
    "id": 204837118,
    "contestId": 442,
    "creationTimeSeconds": 1683388002,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 442,
        "index": "A",
        "name": "Borya and Hanabi",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "bitmasks",
            "brute force",
            "implementation"
        ]
    },
    "author": {
        "contestId": 442,
        "members": [
            {
                "handle": "aaronzjgu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1403191800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n\n#pragma optimization_level 3\n#pragma GCC optimize(\"Ofast,no-stack-protector,unroll-loops,fast-math,O3\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx\")\n#pragma GCC optimize(\"Ofast\")//Comment optimisations for interactive problems (use endl)\n#pragma GCC target(\"avx,avx2,fma\")\n#pragma GCC optimization (\"unroll-loops\")\n\nusing namespace std;\n\nstruct PairHash {inline std::size_t operator()(const std::pair<int, int> &v) const { return v.first * 31 + v.second; }};\n\n// speed\n#define Code ios_base::sync_with_stdio(false);\n#define By ios::sync_with_stdio(0);\n#define Sumfi cout.tie(NULL);\n\n// alias\nusing ll = long long;\nusing ld = long double;\nusing ull = unsigned long long;\n\n// constants\nconst ld PI = 3.14159265358979323846;  /* pi */\nconst ll INF = 1e18;\nconst ld EPS = 1e-9;\nconst ll MAX_N = 202020;\nconst ll mod = 1e9 + 7;\n\n// typedef\ntypedef pair<ll, ll> pll;\ntypedef vector<pll> vpll;\ntypedef array<ll,3> all3;\ntypedef array<ll,4> all4;\ntypedef array<ll,5> all5;\ntypedef vector<all3> vall3;\ntypedef vector<all4> vall4;\ntypedef vector<all5> vall5;\ntypedef pair<ld, ld> pld;\ntypedef vector<pld> vpld;\ntypedef vector<ld> vld;\ntypedef vector<ll> vll;\ntypedef vector<ull> vull;\ntypedef vector<vll> vvll;\ntypedef vector<int> vi;\ntypedef vector<bool> vb;\ntypedef deque<ll> dqll;\ntypedef deque<pll> dqpll;\ntypedef pair<string, string> pss;\ntypedef vector<pss> vpss;\ntypedef vector<string> vs;\ntypedef vector<vs> vvs;\ntypedef unordered_set<ll> usll;\ntypedef unordered_set<pll, PairHash> uspll;\ntypedef unordered_map<ll, ll> umll;\ntypedef unordered_map<pll, ll, PairHash> umpll;\n\n// macros\n#define rep(i,m,n) for(ll i=m;i<n;i++)\n#define rrep(i,m,n) for(ll i=n;i>=m;i--)\n#define all(a) begin(a), end(a)\n#define rall(a) rbegin(a), rend(a)\n#define ZERO(a) memset(a,0,sizeof(a))\n#define MINUS(a) memset(a,0xff,sizeof(a))\n#define INF(a) memset(a,0x3f3f3f3f3f3f3f3fLL,sizeof(a))\n#define ASCEND(a) iota(all(a),0)\n#define sz(x) ll((x).size())\n#define BIT(a,i) (a & (1ll<<i))\n#define BITSHIFT(a,i,n) (((a<<i) & ((1ll<<n) - 1)) | (a>>(n-i)))\n#define pyes cout<<\"yes\\n\";\n#define pno cout<<\"no\\n\";\n#define endl \"\\n\"\n#define pneg1 cout<<\"-1\\n\";\n#define ppossible cout<<\"Possible\\n\";\n#define pimpossible cout<<\"Impossible\\n\";\n#define TC(x) cout<<\"Case #\"<<x<<\": \";\n#define X first\n#define Y second\n\n// utility functions\ntemplate <typename T>\nvoid print(T &&t)  { cout << t << \"\\n\"; }\ntemplate<typename T>\nvoid printv(vector<T>v){ll n=v.size();rep(i,0,n){cout<<v[i];if(i+1!=n)cout<<' ';}cout<<endl;}\ntemplate<typename T>\nvoid printvv(vector<vector<T>>v){ll n=v.size();rep(i,0,n)printv(v[i]);}\ntemplate<typename T>\nvoid printvln(vector<T>v){ll n=v.size();rep(i,0,n)cout<<v[i]<<endl;}\nvoid fileIO(string in = \"input.txt\", string out = \"output.txt\") {freopen(in.c_str(),\"r\",stdin); freopen(out.c_str(),\"w\",stdout);}\nvoid readf() {freopen(\"\", \"rt\", stdin);}\ntemplate <typename... T>\nvoid in(T &...a) { ((cin >> a), ...); }\ntemplate<typename T>\nvoid readv(vector<T>& v){rep(i,0,sz(v)) cin>>v[i];}\ntemplate<typename T, typename U>\nvoid readp(pair<T,U>& A) {cin>>A.first>>A.second;}\ntemplate<typename T, typename U>\nvoid readvp(vector<pair<T,U>>& A) {rep(i,0,sz(A)) readp(A[i]); }\ntemplate<typename T>\nvoid readvall(vector<T>& v, ll n) {rep(i,0,sz(v)) rep(j,0,n) cin>>v[i][j];}\ntemplate<typename T>\nvoid readvv(vector<vector<T>>& A) {rep(i,0,sz(A)) readv(A[i]);}\n\nstruct Combination {\n    vll fac, inv;\n    ll n, MOD;\n\n    ll modpow(ll n, ll x, ll MOD = mod) { if(!x) return 1; ll res = modpow(n,x>>1,MOD); res = (res * res) % MOD; if(x&1) res = (res * n) % MOD; return res; }\n\n    Combination(ll _n, ll MOD = mod): n(_n + 1), MOD(MOD) {\n        inv = fac = vll(n,1);\n        rep(i,1,n) fac[i] = fac[i-1] * i % MOD;\n        inv[n - 1] = modpow(fac[n - 1], MOD - 2, MOD);\n        rrep(i,1,n - 2) inv[i] = inv[i + 1] * (i + 1) % MOD;\n    }\n\n    ll fact(ll n) {return fac[n];}\n    ll nCr(ll n, ll r) {\n        if(n < r or n < 0 or r < 0) return 0;\n        return fac[n] * inv[r] % MOD * inv[n-r] % MOD;\n    }\n};\n\nstruct Matrix {\n    ll r,c;\n    vvll matrix;\n    Matrix(ll r, ll c, ll v = 0): r(r), c(c), matrix(vvll(r,vll(c,v))) {}\n    Matrix(vvll m) : r(sz(m)), c(sz(m[0])), matrix(m) {}\n\n    Matrix operator*(const Matrix& B) const {\n        Matrix res(r, B.c);\n        rep(i,0,r) rep(j,0,B.c) rep(k,0,B.r) {\n                    res.matrix[i][j] = (res.matrix[i][j] + matrix[i][k] * B.matrix[k][j] % mod) % mod;\n                }\n        return res;\n    }\n\n    Matrix copy() {\n        Matrix copy(r,c);\n        copy.matrix = matrix;\n        return copy;\n    }\n\n    ll get(ll y, ll x) {\n        return matrix[y][x];\n    }\n\n    Matrix pow(ll n) {\n        assert(r == c);\n        Matrix res(r,r);\n        Matrix now = copy();\n        rep(i,0,r) res.matrix[i][i] = 1;\n        while(n) {\n            if(n & 1) res = res * now;\n            now = now * now;\n            n /= 2;\n        }\n        return res;\n    }\n};\n\n// geometry data structures\ntemplate <typename T>\nstruct Point {\n    T y,x;\n    Point(T y, T x) : y(y), x(x) {}\n    Point(pair<T,T> p) : y(p.first), x(p.second) {}\n    Point() {}\n    void input() {cin>>y>>x;}\n    friend ostream& operator<<(ostream& os, const Point<T>& p) { os<<p.y<<' '<<p.x<<'\\n'; return os;}\n    Point<T> operator+(Point<T>& p) {return Point<T>(y + p.y, x + p.x);}\n    Point<T> operator-(Point<T>& p) {return Point<T>(y - p.y, x - p.x);}\n    Point<T> operator*(ll n) {return Point<T>(y*n,x*n); }\n    Point<T> operator/(ll n) {return Point<T>(y/n,x/n); }\n    bool operator<(const Point &other) const {if (x == other.x) return y < other.y;return x < other.x;}\n    Point<T> rotate(Point<T> center, ld angle) {\n        ld si = sin(angle * PI / 180.), co = cos(angle * PI / 180.);\n        ld y = this->y - center.y;\n        ld x = this->x - center.x;\n\n        return Point<T>(y * co - x * si + center.y, y * si + x * co + center.x);\n    }\n    ld distance(Point<T> other) {\n        T dy = abs(this->y - other.y);\n        T dx = abs(this->x - other.x);\n        return sqrt(dy * dy + dx * dx);\n    }\n\n    T norm() { return x * x + y * y; }\n};\n\ntemplate<typename T>\nstruct Line {\n    Point<T> A, B;\n    Line(Point<T> A, Point<T> B) : A(A), B(B) {}\n    Line() {}\n\n    void input() {\n        A = Point<T>();\n        B = Point<T>();\n        A.input();\n        B.input();\n    }\n\n    T ccw(Point<T> &a, Point<T> &b, Point<T> &c) {\n        T res = a.x * b.y + b.x * c.y + c.x * a.y;\n        res -= (a.x * c.y + b.x * a.y + c.x * b.y);\n        return res;\n    }\n\n    bool isIntersect(Line<T> o) {\n        T p1p2 = ccw(A,B,o.A) * ccw(A,B,o.B);\n        T p3p4 = ccw(o.A,o.B,A) * ccw(o.A,o.B,B);\n        if (p1p2 == 0 && p3p4 == 0) {\n            pair<T,T> p1(A.y, A.x), p2(B.y,B.x), p3(o.A.y, o.A.x), p4(o.B.y, o.B.x);\n            if (p1 > p2) swap(p2, p1);\n            if (p3 > p4) swap(p3, p4);\n            return p3 <= p2 && p1 <= p4;\n        }\n        return p1p2 <= 0 && p3p4 <= 0;\n    }\n\n    pair<bool,Point<ld>> intersection(Line<T> o) {\n        if(!this->intersection(o)) return {false, {}};\n        ld det = 1. * (o.B.y-o.A.y)*(B.x-A.x) - 1.*(o.B.x-o.A.x)*(B.y-A.y);\n        ld t = ((o.B.x-o.A.x)*(A.y-o.A.y) - (o.B.y-o.A.y)*(A.x-o.A.x)) / det;\n        return {true, {A.y + 1. * t * (B.y - A.y), B.x + 1. * t * (B.x - A.x)}};\n    }\n\n    //@formula for : y = ax + fl\n    //@return {a,fl};\n    pair<ld, ld> formula() {\n        T y1 = A.y, y2 = B.y;\n        T x1 = A.x, x2 = B.x;\n        if(y1 == y2) return {1e9, 0};\n        if(x1 == x2) return {0, 1e9};\n        ld a = 1. * (y2 - y1) / (x2 - x1);\n        ld b = -x1 * a + y1;\n        return {a, b};\n    }\n};\n\ntemplate<typename T>\nstruct Circle {\n    Point<T> center;\n    T radius;\n    Circle(T y, T x, T radius) : center(Point<T>(y,x)), radius(radius) {}\n    Circle(Point<T> center, T radius) : center(center), radius(radius) {}\n    Circle() {}\n\n    void input() {\n        center = Point<T>();\n        center.input();\n        cin>>radius;\n    }\n\n    bool circumference(Point<T> p) {\n        return (center.x - p.x) * (center.x - p.x) + (center.y - p.y) * (center.y - p.y) == radius * radius;\n    }\n\n    bool intersect(Circle<T> c) {\n        T d = (center.x - c.center.x) * (center.x - c.center.x) + (center.y - c.center.y) * (center.y - c.center.y);\n        return (radius - c.radius) * (radius - c.radius) <= d and d <= (radius + c.radius) * (radius + c.radius);\n    }\n\n    bool include(Circle<T> c) {\n        T d = (center.x - c.center.x) * (center.x - c.center.x) + (center.y - c.center.y) * (center.y - c.center.y);\n        return d <= radius * radius;\n    }\n};\n\nll __gcd(ll x, ll y) { return !y ? x : __gcd(y, x % y); }\nall3 __exgcd(ll x, ll y) { if(!y) return {x,1,0}; auto [g,x1,y1] = __exgcd(y, x % y); return {g, y1, x1 - (x/y) * y1}; }\nll __lcm(ll x, ll y) { return x / __gcd(x,y) * y; }\nll modpow(ll n, ll x, ll MOD = mod) { if(x < 0) return modpow(modpow(n,-x,MOD), MOD-2,MOD); n%=MOD; if(!x) return 1; ll res = modpow(n,x>>1,MOD); res = (res * res) % MOD; if(x&1) res = (res * n) % MOD; return res; }\n\nstring C = \"RGBYW\", N = \"12345\";\nbool helper(vs& A, ll cm, ll nm) {\n    unordered_map<char, unordered_set<char>> color, number;\n    unordered_set<string> both;\n    rep(i,0,sz(A)) {\n        bool cok = false, nok = false;\n        rep(j,0,5) {\n            if(BIT(cm,j) and A[i][0] == C[j]) cok = true;\n            if(BIT(nm,j) and A[i][1] == N[j]) nok = true;\n        }\n        if(!cok and !nok) {\n            both.insert(A[i]);\n        } else if(!nok) {\n            color[A[i][0]].insert(A[i][1]);\n        } else if(!cok) {\n            number[A[i][1]].insert(A[i][0]);\n        }\n    }\n    for(auto& c : C) {\n        if(color.count(c) and sz(color[c]) == 1) color.erase(c);\n    }\n    for(auto& n : N) {\n        if(number.count(n) and sz(number[n]) == 1) number.erase(n);\n    }\n    return sz(both) <= 1 and sz(color) == 0 and sz(number) == 0;\n}\nll solve(vs A, ll n) {\n    ll res = INF;\n    rep(i,0,1<<5) rep(j,0,1<<5) {\n        if(helper(A,i,j)) res = min(res, (ll)(__builtin_popcountll(i) + __builtin_popcountll(j)));\n    }\n    return res;\n}\nint main() {\n    Code By Sumfi\n    cout.precision(12);\n    ll tc = 1;\n    //in(tc);\n    rep(i,1,tc+1) {\n        ll n;\n        in(n);\n        vs A(n);\n        readv(A);\n        print(solve(A,n));\n    }\n    return 0;\n}"
}