{
    "id": 223372709,
    "contestId": 442,
    "creationTimeSeconds": 1694704953,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 442,
        "index": "A",
        "name": "Borya and Hanabi",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "bitmasks",
            "brute force",
            "implementation"
        ]
    },
    "author": {
        "contestId": 442,
        "members": [
            {
                "handle": "stolis"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1403191800
    },
    "programmingLanguage": "Java 8",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 0,
    "source": "import java.util.HashSet;\r\nimport java.util.Scanner;\r\nimport java.util.Set;\r\n\r\npublic class A442 {\r\n\r\n    public static void main(String[] args) {\r\n        String colors = \"RGBYW\";\r\n        Scanner in = new Scanner(System.in);\r\n        boolean[][] seen = new boolean[5][5];\r\n        int N = in.nextInt();\r\n        for (int n=0; n<N; n++) {\r\n            String s = in.next();\r\n            int color = colors.indexOf(s.charAt(0));\r\n            int number = s.charAt(1) - '0';\r\n            seen[color][number] = true;\r\n        }\r\n        int min = Integer.MAX_VALUE;\r\n        Set<Integer> set = new HashSet<>();\r\n        for (int colorMask = 0; colorMask < 32; colorMask++) {\r\n            mask: for (int numberMask = 0; numberMask < 32; numberMask++) {\r\n                set.clear();\r\n                for (int c=0; c<5; c++) {\r\n                    int cMatch = 32*(colorMask & (1 << c));\r\n                    for (int n=0; n<5; n++) {\r\n                        int nMatch = numberMask & (1 << n);\r\n                        if (seen[c][n] && !set.add(cMatch + nMatch)) {\r\n                            continue mask;\r\n                        }\r\n                    }\r\n                }\r\n                int cand = Integer.bitCount(colorMask) + Integer.bitCount(numberMask);\r\n                min = Math.min(cand, min);\r\n            }\r\n        }\r\n        System.out.println(min);\r\n    }\r\n\r\n}\r\n"
}