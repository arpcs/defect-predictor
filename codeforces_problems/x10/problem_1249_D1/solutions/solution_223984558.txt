{
    "id": 223984558,
    "contestId": 1249,
    "creationTimeSeconds": 1695104963,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1249,
        "index": "D1",
        "name": "Too Many Segments (easy version)",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 1249,
        "members": [
            {
                "handle": "dazed_and_confused"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1571754900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\r\n\r\n\r\nusing namespace std;\r\n\r\nconst int INF = 1e9;\r\n\r\nbool cmp (tuple <int, int, int> & t1, tuple <int, int, int> & t2){\r\n\r\n     return (get<0>(t1) > get<0>(t2) || (get<0>(t1) == get<0>(t2) && get<1>(t1) < get<1>(t2)) || (get<0>(t1) == get<0>(t2) && get<1>(t1) == get<1>(t2) && get<2>(t1) < get<2>(t2)));\r\n}\r\nsigned main() {\r\n   ios_base::sync_with_stdio(false);\r\n   cin.tie(nullptr);\r\n   int n, k;\r\n   cin >> n >> k;\r\n   vector <tuple <int, int, int>> a(n);\r\n   for (int i = 0; i < n; i++){\r\n      int u, v;\r\n      cin >> u >> v;\r\n      if (u > v){\r\n        swap(u, v);\r\n      }\r\n      a[i] = make_tuple(v, u, i);\r\n   }\r\n   sort(a.begin(), a.end(), cmp);\r\n   vector <vector <tuple <int, int, int>>> dots(201);\r\n   for (int i = 1; i <= 200; i++){\r\n\r\n      for (int j = 0; j < n; j++){\r\n        if (i >= get<1>(a[j]) && i <= get<0>(a[j])){\r\n            dots[i].push_back(a[j]);\r\n        }\r\n      }\r\n   }\r\n   vector <int> used(n);\r\n   vector <int> ans;\r\n   for (int i = 1; i <= 200; i++){\r\n        if (dots[i].size() > k){\r\n        //sort(dots[i].begin(), dots[i].end(), cmp);\r\n\r\n\r\n                int cnt = k;\r\n                for (int x = 0; x < dots[i].size(); x++){\r\n                    if (used[get<2>(dots[i][x])]){\r\n                        cnt++;\r\n                    }\r\n                }\r\n\r\n                int cnt2 = dots[i].size() - cnt;\r\n                for (int x = 0; x < dots[i].size(); x++){\r\n                    if (cnt2 == 0)\r\n                        break;\r\n                    if (!used[get<2>(dots[i][x])]){\r\n                        ans.push_back(get<2>(dots[i][x]) + 1);\r\n                        used[get<2>(dots[i][x])] = 1;\r\n                        cnt2--;\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n   }\r\n   cout << ans.size() << endl;\r\n   sort(ans.begin(), ans.end());\r\n   for (int i = 0; i < ans.size(); i++){\r\n     cout << ans[i] << \" \";\r\n   }\r\n   cout << endl;\r\n   return 0;\r\n}\r\n"
}