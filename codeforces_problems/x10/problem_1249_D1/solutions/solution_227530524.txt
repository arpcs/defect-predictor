{
    "id": 227530524,
    "contestId": 1249,
    "creationTimeSeconds": 1696939620,
    "relativeTimeSeconds": 5520,
    "problem": {
        "contestId": 1249,
        "index": "D1",
        "name": "Too Many Segments (easy version)",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 1249,
        "members": [
            {
                "handle": "Georgegg"
            }
        ],
        "participantType": "VIRTUAL",
        "teamId": 125389,
        "teamName": "ma5no2 w nm4eha ma5no2",
        "ghost": false,
        "startTimeSeconds": 1696934100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include \"bits/stdc++.h\"\r\nusing namespace std;\r\n#include<unordered_map>\r\n#pragma GCC optimize (\"O3\")\r\n#pragma GCC optimize (\"unroll-loops\")\r\n#define ll  long long\r\n#define ld  long double\r\n#define ull unsigned long long\r\n#define I_hate_code5raforces ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);\r\n//freopen(\"Input.txt\", \"r\", stdin); freopen(\"Output.txt\", \"w\", stdout);\r\n#define mem(arr, val) memset(arr,val,sizeof(arr))\r\n#define sz(s) (int) (s.size())\r\n#define all(vect) vect.begin(), vect.end()\r\nconst int dirx[] = {0, 0, -1, 1, 1, -1, 1, -1};\r\nconst int diry[] = {1, -1, 0, 0, 1, 1, -1, -1};\r\nconst ll inf = 1e8 + 6;\r\nconst int N = 250;\r\nconst ll mod = 998244353;\r\nbool getbit(ll num, int idx) { return ((num >> idx) & 1); }\r\nvoid set1(int &num, int idx) { num |= (1ll << idx); }\r\nvoid set0(int &num, int idx) { num &= (~(1ll << idx)); }\r\nll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }\r\nll lcm(ll a, ll b) { return a / gcd(a, b) * b; }\r\nint fix(int x, int k) { return ((x % k) + k) % k;}\r\nint m,k,seg[N*4],lazy[N*4];\r\npair<int,int>arr[N];\r\nbool vis[N];\r\nvoid push(int n,int l,int r) {\r\n    if (l != r) {\r\n        lazy[n * 2] += lazy[n];\r\n        lazy[n * 2 + 1] += lazy[n];\r\n    }\r\n    seg[n] += lazy[n];\r\n    lazy[n] = 0;\r\n}\r\nint val;\r\nvoid update(int n,int l,int r,int st,int end) {\r\n    push(n,l,r);\r\n    if (l > end or r < st)return;\r\n    if (l >= st and r <= end) {\r\n        lazy[n] += val;\r\n        return;\r\n    }\r\n    int mid = (l + r) / 2;\r\n    update(n * 2, l, mid, st, end);\r\n    update(n * 2 + 1, mid + 1, r, st, end);\r\n}\r\nint get(int n,int l,int r,int idx) {\r\n    push(n,l,r);\r\n    if (l == r) {\r\n        return seg[n];\r\n    }\r\n    int mid = (l + r) / 2;\r\n    if (idx <= mid)\r\n        return get(n * 2, l, mid, idx);\r\n    else\r\n        return get(n * 2 + 1, mid + 1, r, idx);\r\n}\r\nint main() {\r\n    I_hate_code5raforces;\r\n    cin >> m >> k;\r\n    for (int g = 1; g <= m; g++) {\r\n        cin >> arr[g].first >> arr[g].second;\r\n        val = 1;\r\n        update(1, 1, 200, arr[g].first, arr[g].second);\r\n    }\r\n\r\n\r\n    vector<int> ans;\r\n    for (int g = 200; g >= 0; g--) {\r\n        int x = get(1, 1, 200, g);\r\n        while (x > k) {\r\n            int idx = 1;\r\n            int mx = 0;\r\n            for (int i = 1; i <= m; i++) {\r\n                if (vis[i])continue;\r\n                if (arr[i].first <= g and arr[i].second >= g) {\r\n                    int tmp = g - arr[i].first + 1;\r\n                    if (tmp > mx) {\r\n                        mx = tmp;\r\n                        idx = i;\r\n                    }\r\n                }\r\n            }\r\n            val = -1;\r\n            update(1, 1, 200, arr[idx].first, arr[idx].second);\r\n            ans.push_back(idx);\r\n            vis[idx] = 1;\r\n            x--;\r\n        }\r\n    }\r\n\r\n    cout << sz(ans) << \"\\n\";\r\n    for (auto &it: ans)cout << it << \" \";\r\n\r\n}"
}