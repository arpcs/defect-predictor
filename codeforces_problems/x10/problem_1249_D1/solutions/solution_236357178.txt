{
    "id": 236357178,
    "contestId": 1249,
    "creationTimeSeconds": 1702041890,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1249,
        "index": "D1",
        "name": "Too Many Segments (easy version)",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 1249,
        "members": [
            {
                "handle": "RICHARD-H"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1571754900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 2355200,
    "source": "#include<bits/stdc++.h>\r\n#include<ext/rope>\r\nusing namespace std;\r\nusing namespace __gnu_cxx;\r\ntypedef long long lol;\r\ntypedef pair<int, int> pii;\r\ntypedef unsigned int uin;\r\n\r\nconst int N = 2e5 + 5;\r\nint n, k;\r\nvector<int> ers;\r\n\r\nstruct node \r\n{\r\n    int first, second, id;\r\n    bool operator < (const node &other) const {\r\n        if (first == other.first && second == other.second) return id < other.id;\r\n        if (first == other.first) return second < other.second;\r\n        return first < other.first;\r\n    }\r\n} sec[N];\r\nset<pii> s;\r\n\r\nint main () {\r\n    \r\n    scanf (\"%d%d\", &n, &k);\r\n    for (int i (1); i <= n; ++ i ) \r\n        scanf (\"%d%d\", &sec[i].first, &sec[i].second), sec[i].id = i;\r\n    \r\n    sort (sec + 1, sec + n + 1);\r\n\r\n    for (int i (1); i <= n; ++ i ) \r\n    {\r\n        int l = sec[i].first;\r\n        s.insert ({sec[i].second + 1, sec[i].id});\r\n        while (!s.empty() && s.begin() -> first <= l) s.erase (s.begin());\r\n        while ((int)s.size() > k) ers.push_back (prev(s.end()) -> second), s.erase (prev(s.end()));\r\n    }\r\n\r\n    printf (\"%lld\\n\", ers.size());\r\n    sort (ers.begin(), ers.end());\r\n    for (int &item : ers) printf (\"%d \", item);\r\n    \r\n    return 0;\r\n}\r\n"
}