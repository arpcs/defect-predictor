{
    "id": 234069423,
    "contestId": 213,
    "creationTimeSeconds": 1700838305,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 213,
        "index": "B",
        "name": "Numbers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1900,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 213,
        "members": [
            {
                "handle": "leifangyu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1343662200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// generated by GPT4 2023-11-24 23:05:01\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int N = 102, M = 1<<9, MOD = 1e9+7;\r\nint dp[N][N][N][M], a[10], n;\r\n\r\nint add(int a, int b){\r\n    a += b;\r\n    if(a >= MOD) a -= MOD;\r\n    return a;\r\n}\r\n\r\nint solve(int i, int j, int k, int mask){\r\n    if(i == n+1) return (j == a[0] && k == a[1] && mask == 0);\r\n    if(dp[i][j][k][mask] != -1) return dp[i][j][k][mask];\r\n    int ret = 0;\r\n    for(int d = 0; d < 10; ++d){\r\n        if(d == 0 && i == 1) continue;\r\n        if(d == 0){\r\n            if(j+1 > a[0]) continue;\r\n            ret = add(ret, solve(i+1, j+1, k, mask));\r\n        }\r\n        else if(d == 1){\r\n            if(k+1 > a[1]) continue;\r\n            ret = add(ret, solve(i+1, j, k+1, mask));\r\n        }\r\n        else{\r\n            if((mask>>(d-2))&1) continue;\r\n            if((a[d]-1) > ((n-i)-(9-d))) continue;\r\n            ret = add(ret, solve(i+1, j, k, mask|(1<<(d-2))));\r\n        }\r\n    }\r\n    return dp[i][j][k][mask] = ret;\r\n}\r\n\r\nint main(){\r\n    cin >> n;\r\n    for(int i = 0; i < 10; ++i) cin >> a[i];\r\n    memset(dp, -1, sizeof dp);\r\n    cout << solve(1, 0, 0, 0) << \"\\n\";\r\n    return 0;\r\n}\r\n"
}