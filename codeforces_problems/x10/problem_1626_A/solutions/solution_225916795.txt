{
    "id": 225916795,
    "contestId": 1626,
    "creationTimeSeconds": 1696082365,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1626,
        "index": "A",
        "name": "Equidistant Letters",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "constructive algorithms",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1626,
        "members": [
            {
                "handle": "v4ishnavi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642343700
    },
    "programmingLanguage": "GNU C11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <stdio.h>\r\n#include <string.h>\r\n#include <stdlib.h>\r\n// for each pair of letters that appear twice\r\n// letters max appear twice\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\", &t);\r\n    for (int i = 0; i < t; i++)\r\n    {\r\n        char *s = (char *)malloc(sizeof(char) * 53);\r\n        scanf(\"%s\", s);\r\n        int table[26];\r\n        for (int m = 0; m < 26; m++)\r\n        {\r\n            table[m] = 0;\r\n        }\r\n        int q = 0;\r\n        while (s[q] != '\\0')\r\n        {\r\n            table[s[q] - 'a']++;\r\n            q++;\r\n        }\r\n        for (int m = 0; m < 26; m++)\r\n        {\r\n            if (table[m] == 1)\r\n            {\r\n                char ss = m + 'a';\r\n                printf(\"%c\", ss);\r\n                table[m]--;\r\n            }\r\n        }\r\n        for (int m = 0; m < 26; m++)\r\n        {\r\n            if (table[m] == 2)\r\n            {\r\n                char ss = m + 'a';\r\n                printf(\"%c\", ss);\r\n            \r\n            }\r\n        }\r\n        for (int m = 0; m < 26; m++)\r\n        {\r\n            if (table[m] == 2)\r\n            {\r\n                char ss = m + 'a';\r\n                printf(\"%c\", ss);\r\n        \r\n            }\r\n        }\r\n    }\r\n}"
}