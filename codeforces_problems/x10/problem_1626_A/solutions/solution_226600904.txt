{
    "id": 226600904,
    "contestId": 1626,
    "creationTimeSeconds": 1696428910,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1626,
        "index": "A",
        "name": "Equidistant Letters",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "constructive algorithms",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1626,
        "members": [
            {
                "handle": "ammar_hammoud"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642343700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define go ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\r\ntypedef long long ll;\r\n\r\nint main() {\r\n    go\r\n    int t; cin >> t;\r\n    while(t--){\r\n    \tstring s; cin >> s;\r\n    \tsort(s.begin(), s.end()); cout << s << endl;\r\n    }\r\n    \r\n    \r\n    return 0;\r\n}"
}