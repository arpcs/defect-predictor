{
    "id": 229784138,
    "contestId": 1810,
    "creationTimeSeconds": 1698301224,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1810,
        "index": "G",
        "name": "The Maximum Prefix",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3200,
        "tags": [
            "dp"
        ]
    },
    "author": {
        "contestId": 1810,
        "members": [
            {
                "handle": "uglythrushe"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1680273300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 38,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 201216000,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 5e5 + 50, mod = 1e9 + 7, INF = 1e18;\nlong long t, n, m;\nlong long qmi(long long a, long long k) {\n  long long res = 1;\n  while (k) {\n    if (k & 1) res = res * a % mod;\n    k >>= 1;\n    a = a * a % mod;\n  }\n  return res;\n}\nsigned main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0), cout.tie(0);\n  cin >> t;\n  while (t--) {\n    cin >> n;\n    vector<long long> x(n + 1), y(n + 1), p(n + 1), h(n + 1);\n    for (long long i = 1; i < n + 1; i++) {\n      cin >> x[i] >> y[i];\n      p[i] = x[i] * qmi(y[i], mod - 2) % mod;\n    }\n    for (long long i = 0; i < n + 1; i++) cin >> h[i];\n    vector<vector<long long>> dp(n + 1, vector<long long>(n + 1));\n    for (long long i = 0; i < n + 1; i++) dp[0][i] = h[i];\n    for (long long i = 1; i < n + 1; i++) {\n      dp[i][0] = (dp[i - 1][0] * (1 - p[i]) % mod + mod) % mod;\n      dp[i][0] = (dp[i][0] + dp[i - 1][1] * p[i] % mod) % mod;\n      for (long long j = 1; j < n - i + 1; j++) {\n        dp[i][j] = (dp[i - 1][j + 1] * p[i] % mod +\n                    dp[i - 1][j - 1] * (1 - p[i]) % mod + mod) %\n                   mod;\n      }\n      long long j = n + 1 - i;\n      dp[i][j] =\n          (dp[i - 1][j - 1] * (1 - p[i]) % mod + dp[i - 1][j] * p[i] % mod) %\n          mod;\n    }\n    for (long long i = 1; i < n + 1; i++) cout << dp[i][0] << \" \";\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"
}