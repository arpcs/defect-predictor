{
    "id": 183546209,
    "contestId": 267,
    "creationTimeSeconds": 1669950026,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 267,
        "index": "C",
        "name": "Berland Traffic",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2700,
        "tags": [
            "math",
            "matrices"
        ]
    },
    "author": {
        "contestId": 267,
        "members": [
            {
                "handle": "husongjin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1358002800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 32,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 409600,
    "source": "// LUOGU_RID: 96274866\n#pragma GCC optimize(3)\r\n#pragma GCC optimize(2)\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC optimize(\"inline\")\r\n#pragma GCC optimize(\"unroll-loops\")\r\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int maxn=110;\r\nconst double eps=1e-8;\r\n\r\nint e[maxn][maxn],n,m;\r\n\r\ninline double change(double x) { return x<eps?eps:x; }\r\n\r\ndouble a[maxn][maxn];\r\ndouble root[maxn];\r\n\r\nvoid guass()\r\n{\r\n    for (int i=1;i<=n;i++)\r\n    {\r\n        for (int j=1;j<=n;j++)\r\n        {\r\n            if (i==j)\r\n                continue;\r\n            if (fabs(a[i][i])<eps)\r\n                continue;\r\n            double d=a[j][i]/a[i][i];\r\n            for (int k=i;k<=n+1;k++)\r\n                a[j][k]-=a[i][k]*d;\r\n        }\r\n    }\r\n    for (int i=1;i<=n;i++)\r\n        if (fabs(a[i][i])>eps)\r\n            root[i]=a[i][n+1]/a[i][i];\r\n}\r\n\r\nstruct edge\r\n{\r\n    int x,y;\r\n    double cap;\r\n};\r\nvector<edge> edges;\r\n\r\ninline void add(int x,int y,double cap)\r\n{\r\n    edges.push_back({x,y,cap});\r\n    if (x!=1&&x<n)\r\n        a[x][x]--,a[x][y]++;\r\n    if (y!=1&&y<n)\r\n        a[y][y]--,a[y][x]++;\r\n}\r\n    \r\nint main()\r\n{\r\n    scanf(\"%d%d\",&n,&m);\r\n    double c;\r\n    for (int i=1,x,y;i<=m;i++)\r\n    {\r\n        scanf(\"%d%d%lf\",&x,&y,&c);\r\n\t\tadd(x,y,c);\r\n    }\r\n    a[1][n+1]=1,a[n][n+1]=n+1,a[1][1]=1,a[n][n]=1;\r\n    guass();\r\n    double mul=1e18;\r\n    int flag=0;\r\n    for (auto k:edges)\r\n    {\r\n        if (fabs(root[k.y]-root[k.x])<eps)\r\n            continue;\r\n        mul=min(mul,1.0*k.cap/fabs(root[k.y]-root[k.x])),flag=1;\r\n    }\r\n    if (!flag)\r\n        mul=0;\r\n    for (int i=1;i<=n;i++)\r\n        root[i]*=mul;\r\n    double sum=0;\r\n    for (auto k:edges)\r\n        if (k.x==n||k.y==n)\r\n            sum+=fabs(root[k.y]-root[k.x]);\r\n    printf(\"%lf\\n\",sum);\r\n    for (auto k:edges)\r\n        printf(\"%lf\\n\",root[k.y]-root[k.x]);\r\n}"
}