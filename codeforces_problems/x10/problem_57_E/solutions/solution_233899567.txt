{
    "id": 233899567,
    "contestId": 57,
    "creationTimeSeconds": 1700735077,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 57,
        "index": "E",
        "name": "Chess",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3000,
        "tags": [
            "math",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 57,
        "members": [
            {
                "handle": "SunsetSamsara"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1295971200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 45,
    "timeConsumedMillis": 186,
    "memoryConsumedBytes": 16384000,
    "source": "// LUOGU_RID: 136490504\n\n#include <iostream>\n#include <cstdio>\n#include <queue>\n\nusing namespace std;\nconst int mod = 1000000007;\n\nint mp[2003][2003];\nint ans[6000];\n\nint dirx[] = {1, 1, -1, -1, 2, 2, -2, -2};\nint diry[] = {2, -2, 2, -2, 1, -1, 1, -1};\n\nstruct sxd\n{\n\tint x, y;\n};\n\nqueue<sxd> Q;\n\nint n;\nlong long k;\nlong long cnt;\n\ninline void bfs(int x, int y)\n{\n\tmp[x][y] = 1;\n\tQ.push((sxd){x, y});\n\twhile(!Q.empty())\n\t{\n\t\tsxd tmp = Q.front();\n\t\tQ.pop();\n\t\tans[mp[tmp.x][tmp.y]]++;\n\t\tif(mp[tmp.x][tmp.y] > 500)\n\t\t\tbreak;\n\t\tfor(int i = 0; i < 8; ++i)\n\t\t{\n\t\t\tint tx = tmp.x + dirx[i];\n\t\t\tint ty = tmp.y + diry[i];\n\t\t\tif(mp[tx][ty]) continue;\n\t\t\tmp[tx][ty] = mp[tmp.x][tmp.y] + 1;\n\t\t\tQ.push((sxd){tx, ty});\n\t\t}\n\t}\n}\n\nsigned main()\n{\n\tcin >> k >> n;\n\tfor(int i = 1, x, y; i <= n; ++i)\n\t{\n\t\tcin >> x >> y;\n\t\tx += 1001;\n\t\ty += 1001;\n\t\tmp[x][y] = 1;\n\t}\n\tbfs(1001, 1001);\n\tif(k < 500)\n\t{\n\t\tfor(int i = 1; i <= k+1; ++i)\n\t\t\tcnt = (cnt+ans[i])%mod;\n\t\tcout << cnt << endl;\n\t}\n\telse\n\t{\n\t\tlong long inc = ans[500] - ans[499];\n\t\tk -= 498;\n\t\tk %= mod;\n\t\tfor(int i = 0; i <= 499; ++i)\n\t\t\tcnt = (cnt+ans[i])%mod;\n\t\tcout << (((k*ans[500]%mod+cnt)%mod+(k*(k-1)>>1)%mod*inc%mod)%mod+mod)%mod << endl;\n\t}\n\treturn 0;\n}"
}