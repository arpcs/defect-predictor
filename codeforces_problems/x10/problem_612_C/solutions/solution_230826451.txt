{
    "id": 230826451,
    "contestId": 612,
    "creationTimeSeconds": 1698842988,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 612,
        "index": "C",
        "name": "Replace To Make Regular Bracket Sequence",
        "type": "PROGRAMMING",
        "rating": 1400,
        "tags": [
            "data structures",
            "expression parsing",
            "math"
        ]
    },
    "author": {
        "contestId": 612,
        "members": [
            {
                "handle": "charmyy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1451055600
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 2969600,
    "source": "// Problem: C. Replace To Make Regular Bracket Sequence\r\n// Contest: Codeforces - Educational Codeforces Round 4\r\n// URL: https://codeforces.com/contest/612/problem/C\r\n// Memory Limit: 256 MB\r\n// Time Limit: 1000 ms\r\n// \r\n// Powered by CP Editor (https://cpeditor.org)\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n\r\nconst int N = 2e5+5;\r\n\r\nbool check(char a,char b){\r\n\tif(a=='{'&&b=='}') return true;\r\n\tif(a=='['&&b==']') return true;\r\n\tif(a=='('&&b==')') return true;\r\n\tif(a=='<'&&b=='>') return true;\r\n\treturn false;\r\n}\r\n\r\nint main(){\r\n\tstring a;\r\n\tcin>>a;\r\n\t\r\n\tint n=0,m=0;\r\n\tfor(int i=0;i<a.size();i++){\r\n\t\tif(a[i]=='{'||a[i]=='('||a[i]=='['||a[i]=='<'){\r\n\t\t\tn++;\r\n\t\t}\r\n\t\tif(a[i]=='}'||a[i]==')'||a[i]==']'||a[i]=='>'){\r\n\t\t\tm++;\r\n\t\t}\r\n\t}\r\n\tif(n!=m){\r\n\t\tcout<<\"Impossible\\n\";\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\tstack<char> st;\r\n\tll ans=0;\r\n\tfor(int i=0;i<a.size();i++){\r\n\t\tif(a[i]=='{'||a[i]=='('||a[i]=='['||a[i]=='<'){\r\n\t\t\tst.push(a[i]);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tif(st.size()&&!check(st.top(),a[i])){\r\n\t\t\t\tans++;\r\n\t\t\t}\r\n\t\t\telse if(st.empty()){\r\n\t\t\t\tcout<<\"Impossible\\n\";\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\tst.pop();\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tcout<<ans<<\"\\n\";\r\n\t\r\n\t\r\n\treturn 0;\t\r\n\r\n}\r\n"
}