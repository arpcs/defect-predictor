{
    "id": 211107741,
    "contestId": 612,
    "creationTimeSeconds": 1687766468,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 612,
        "index": "C",
        "name": "Replace To Make Regular Bracket Sequence",
        "type": "PROGRAMMING",
        "rating": 1400,
        "tags": [
            "data structures",
            "expression parsing",
            "math"
        ]
    },
    "author": {
        "contestId": 612,
        "members": [
            {
                "handle": "MuhannadW"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1451055600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 16,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define InTheNameOfAllah          \\\r\n    ios_base::sync_with_stdio(0); \\\r\n    cin.tie(NULL);\r\n#define int long long\r\nusing namespace std;\r\nint nxt()\r\n{\r\n    int x;\r\n    cin >> x;\r\n    return x;\r\n}\r\nbool is_opening(char x)\r\n{\r\n    if (x == '(' || x == '{' || x == '[' || x == '<')\r\n        return 1;\r\n    else\r\n        return 0;\r\n}\r\nbool is_sme(char y, char z)\r\n{\r\n    if (y == '(' && z == ')')\r\n        return 1;\r\n    else if (y == '{' && z == '}')\r\n        return 1;\r\n    else if (y == '[' && z == ']')\r\n        return 1;\r\n    else if (y == '<' && z == '>')\r\n        return 1;\r\n    return 0;    \r\n}\r\nsigned main()\r\n{\r\n    InTheNameOfAllah int a = 0, ans = 0;\r\n    bool rbs = 1;\r\n    string s;\r\n    cin >> s;\r\n    for (int i = 0; i < s.size(); i++)\r\n        if (is_opening(s[i]))\r\n            a++;\r\n        else\r\n        {\r\n            a--;\r\n            if (a < 0)\r\n                rbs = 0;\r\n        }\r\n    if (a > 0)\r\n        rbs = 0;\r\n    int i = 0, k = 0;\r\n    while (i < s.size())\r\n    {\r\n        if (is_opening(s[i]))      \r\n            k = 0;\r\n        else\r\n        {\r\n         //   cout << \"!is_sme(s[ \" << i - (k + 1) << \" ], s[ \" << i << \" ]) =  \" << !is_sme(s[i - (k + 1)], s[i]) << endl;\r\n            if(!is_sme(s[i - (k + 1)], s[i]))\r\n                ans++;\r\n            k += 2;\r\n        }\r\n        i++;\r\n    }\r\n    if (!rbs)\r\n        cout << \"Impossible\";\r\n    else\r\n        cout << ans;\r\n}"
}