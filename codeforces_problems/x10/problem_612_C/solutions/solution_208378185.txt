{
    "id": 208378185,
    "contestId": 612,
    "creationTimeSeconds": 1685846657,
    "relativeTimeSeconds": 1157,
    "problem": {
        "contestId": 612,
        "index": "C",
        "name": "Replace To Make Regular Bracket Sequence",
        "type": "PROGRAMMING",
        "rating": 1400,
        "tags": [
            "data structures",
            "expression parsing",
            "math"
        ]
    },
    "author": {
        "contestId": 612,
        "members": [
            {
                "handle": "yeVegetable"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1685845500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 7372800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define endl '\\n'\r\n#define inf 0x3f3f3f3f\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\n// typedef __int128 lll;\r\ntypedef pair<ll, ll> P;\r\n#define x first\r\n#define y second\r\n// #define double long double\r\n#define pi 3.14159265358\r\n// #define int ll\r\nint lowbit(int x) {return x & (~x + 1);}\r\n// int lcm(int x, int y) {return x / __gcd(x, y) * y;}\r\nvoid printv(vector<int> & v) {for(int i = 0; i < v.size(); i++) cout << v[i]; cout << endl;}\r\n\r\n/***************************************************************************************************/\r\nconst int p = 1e9 + 7;\r\nconst int pp = 998244353;\r\nconst int N = 1e6 + 10;\r\n\r\nint dx[8] = {0, -1, 0, 1, -1, -1, 1, 1}, dy[8] = {-1, 0, 1, 0, -1, 1, -1, 1};\r\nint ddx[8] = {1, 1, 2, 2, -1, -1, -2, -2}, ddy[8] = {2, -2, 1, -1, 2, -2, 1, -1};\r\n\r\n/***************************************************************************************************/\r\ninline ll read() {\r\n    ll x = 0, f = 1;\r\n    char c = getchar();\r\n    while(c < '0' || c > '9'){\r\n        if(c == '-') f = -1;\r\n        c = getchar();\r\n    }\r\n    while(c >= '0' && c <= '9'){\r\n        x = (x << 1) + (x << 3) + (c ^ 48);\r\n        c = getchar();\r\n    }\r\n    return x * f;\r\n}\r\n/***************************************************************************************************/\r\n// vector<int> a;\r\n\r\n// struct Node {\r\n//     int l, r;\r\n//     int ma;\r\n//     int mi;\r\n// }tr[N << 2];\r\n\r\n// void push_up(int u) {\r\n//     tr[u].ma = max(tr[u << 1].ma, tr[u << 1 | 1].ma);\r\n//     tr[u].mi = min(tr[u << 1].mi, tr[u << 1 | 1].mi);\r\n// }\r\n\r\n// void build(int u, int l, int r) {\r\n//     tr[u] = {l, r};\r\n//     if(l == r) {\r\n//         tr[u].ma = a[l];\r\n//         tr[u].mi = a[l];\r\n//         return ;\r\n//     }\r\n//     int mid = (l + r) >> 1;\r\n//     build(u << 1, l, mid), build(u << 1 | 1, mid + 1, r);\r\n//     push_up(u);\r\n// }\r\n\r\n// P query(int u, int l, int r) {\r\n//     if(tr[u].l == l && tr[u].r == r) {\r\n//         return {tr[u].mi, tr[u].ma};\r\n//     }\r\n//     int mid = (tr[u].l + tr[u].r) >> 1;\r\n//     int ans = 0;\r\n//     if(r <= mid) return query(u << 1, l, r);\r\n//     if(mid < l) return query(u << 1 | 1, l, r);\r\n//     P lson = query(u << 1, l, mid), rson = query(u << 1 | 1, mid + 1, r);\r\n//     return {min(lson.x, rson.x), max(lson.y, rson.y)};\r\n// }\r\n// \r\n// void modify(int u, int x, int v) {\r\n//     tr[u].s += v;\r\n//     if(tr[u].l == x && tr[u].r == x) {\r\n//         return ;\r\n//     }\r\n//     int mid = (tr[u].l + tr[u].r) >> 1;\r\n//     if(x <= mid) modify(u << 1, x, v);\r\n//     else modify(u << 1 | 1, x, v);\r\n//     push_up(u);\r\n// }\r\n/***************************************************************************************************/\r\n//                      prime\r\n// \r\n// int ans[N], idx;\r\n// bool st[N] = {1, 1};\r\n// void init() {\r\n//     for(int i = 2; i < N; i++) {\r\n//         if(!st[i]) ans[++ idx] = i;\r\n//         for(int j = 1; ans[j] * i < N; j++) {\r\n//             st[i * ans[j]] = 1;\r\n//             if(i % ans[j] == 0) break;\r\n//         }\r\n//     }\r\n// }\r\n\r\n/***************************************************************************************************/\r\n//                vector\u56e0\u5b50 O(sqrt(n))\r\n//\r\n// vector<int> divisor(int n) {\r\n//     vector<int> ans(1, 1), t;\r\n//     if(n == 1) return ans;\r\n//     int i = 2;\r\n//     for (i = 2; i * i < n; i++) {\r\n//         if (n % i == 0) {\r\n//             ans.push_back(i);\r\n//             // while(n % i == 0) n /= i;\r\n//             t.push_back(n / i);\r\n//         }\r\n//     }\r\n//     if (n == i * i) ans.push_back(i);\r\n//     for (int i = t.size() - 1; i >= 0; i--) ans.push_back(t[i]);\r\n//     ans.push_back(n);\r\n//     return ans;\r\n// }\r\n/***************************************************************************************************/\r\n//                          \u6b27\u62c9\u7b5b\r\n// \r\nvector<int> d[202020];\r\nvoid init() {\r\n    int n = 2e5 + 10;\r\n    for(int i = 1; i <= n; i++) {\r\n        for(int j = i; j <= n; j += i) {\r\n            d[j].push_back(i);\r\n        }\r\n    }\r\n}\r\n/***************************************************************************************************/\r\n//                          \u5b8c\u5168\u5e73\u65b9check\r\n// \r\n// bool check(ll x) {\r\n//     ll a = sqrt(x);\r\n//     while(a * a < x) a ++ ;\r\n//     while(a * a > x) a -- ;\r\n//     return a * a == x;\r\n// }\r\n/***************************************************************************************************/\r\n//                              BIT\r\n// \r\n// int n, q;\r\n// \r\n// vector<int> tr;\r\n// \r\n// void add(vector<int> & tr, int k, int v) {\r\n//     for(; k <= n; k += lowbit(k)) tr[k] += v;\r\n// }\r\n// \r\n// int ask(vector<int> & tr, int k) {\r\n//     int ans = 0;\r\n//     while(k) {\r\n//         ans += tr[k];\r\n//         k -= lowbit(k);\r\n//     }\r\n//     return ans;\r\n// }\r\n/***************************************************************************************************/\r\n//                               qsm\r\nll qsm(ll a, ll b, ll p) {\r\n    ll ans = 1;\r\n    while(b) {\r\n        if(b & 1) ans = (ans * a) % p;\r\n        b >>= 1;\r\n        a = (a * a) % p;\r\n    }\r\n    return ans % p;\r\n}\r\n/***************************************************************************************************/\r\n////                            \u9ad8\u7cbe\u51cf\r\n// void trimZero(vector<int> &A) {\r\n//     while (A.back() == 0 && A.size() > 1) A.pop_back();\r\n// }\r\n\r\n// vector<int> sub(vector<int> &A, vector<int> &B) {\r\n//     vector<int> C;\r\n//     int t = 0;\r\n//     for (int i = 0; i < A.size(); i++)\r\n//     {\r\n//         t = A[i] - t;\r\n//         if (i < B.size()) t -= B[i];\r\n//         C.push_back((t + 10) % 10);\r\n//         if (t < 0) t = 1;\r\n//         else t = 0;\r\n//     }\r\n//     trimZero(C);\r\n//     reverse(C.begin(), C.end());\r\n//     return C;\r\n// }\r\n/***************************************************************************************************/\r\n////                         dij\r\n//\r\n// int h[N], e[N], ne[N], d[N], w[N], idx, n, m, c[N];\r\n\r\n// bool st[N];\r\n\r\n// void init() {\r\n//     memset(d, 0x3f, sizeof d);\r\n//     memset(h, -1, sizeof h);\r\n// }\r\n\r\n// void add(int a, int b, int c) {\r\n//     e[idx] = b, ne[idx] = h[a], w[idx] = c, h[a] = idx ++ ;\r\n// }\r\n\r\n// int dijkstra() {\r\n//     priority_queue<P, vector<P>, greater<P>> q;\r\n//     q.push({0, 1});\r\n//     while(q.size()) {\r\n//         auto u = q.top();\r\n//         q.pop();\r\n//         int id = u.second;\r\n//         if(st[id]) continue;\r\n//         st[id] = 1;\r\n//         for(int i = h[id]; ~i; i = ne[i]) {\r\n//             int t = e[i];\r\n//             if(d[t] > u.ff + w[i]) {\r\n//                 d[t] = u.ff + w[i];\r\n//                 q.push({d[t], t});\r\n//             }\r\n//         }\r\n//     }\r\n//     return d[n];\r\n// }\r\n/***************************************************************************************************/\r\n//                \u62d3\u6392\r\n// void topSort() {\r\n//     const int m = 2e5 + 10;\r\n//     int q[m] = {};\r\n//     int hh = 0, tt = -1;\r\n//     for(int i = 1; i <= n; i++) if(!d[i]) q[++tt] = i;\r\n//     while(hh <= tt) {\r\n//         int u = q[hh++];\r\n//         for(int i = h[u]; ~i; i = ne[i]) {\r\n//             int t = e[i];\r\n//             d[t] -- ;\r\n//             if(!d[t]) q[++tt] = t;\r\n//         }\r\n//     }\r\n// }\r\n/***************************************************************************************************/\r\n////             string \u9ad8\u7cbe\u52a0\r\n// string add(const string& A, const string& B) {\r\n//     string C;\r\n//     int t = 0;\r\n//     for (int i = A.size() - 1, j = B.size() - 1; i >= 0 || j >= 0 || t > 0; i--, j--) {\r\n//         if (i >= 0) t += (A[i] - '0');\r\n//         if (j >= 0) t += (B[j] - '0');\r\n//         C += ((t % 10) + '0');\r\n//         t /= 10;\r\n//     }\r\n//     reverse(C.begin(), C.end());\r\n//     return C;\r\n// }\r\n/***************************************************************************************************/\r\n////                      \u9ad8\u7cbe\u4e58\r\n// vector <int> mul(vector <int> A, int b) {\r\n//     vector <int> C;\r\n\r\n//     int t = 0;\r\n//     for (int i = 0; i < A.size(); i ++) {\r\n//         t += A[i] * b;       // t + A[i] * b = 7218\r\n//         C.push_back(t % 10); // \u53ea\u53d6\u4e2a\u4f4d 8\r\n//         t /= 10;             // 721 \u770b\u4f5c \u8fdb\u4f4d\r\n//     }\r\n\r\n//     while (t) {            // \u5904\u7406\u6700\u540e\u5269\u4f59\u7684 t\r\n//         C.push_back(t % 10);\r\n//         t /= 10;\r\n//     }\r\n\r\n//     while (C.size() > 1 && C.back() == 0) C.pop_back();\r\n\r\n//     return C;\r\n// }\r\n\r\n/***************************************************************************************************/\r\n//             v * v \u9ad8\u7cbe\r\n// vector<int> mul(vector<int> A, vector<int> B) {\r\n//     vector<int> C(A.size() + B.size() + 7, 0);  // \u6570\u7ec4C\u5f00\u5927\u4e00\u70b9\u6ca1\u4e8b\uff0c\u53cd\u6b63\u53ef\u4ee5\u53bb\u524d\u5bfc\u96f6\u7684\r\n//     for (int i = 0; i < A.size(); i ++) {\r\n//         for (int j = 0; j < B.size(); j ++) {\r\n//             C[i + j] += A[i] * B[j];\r\n//         }\r\n//     }\r\n\r\n//     // \u5904\u7406\u8fdb\u4f4d\r\n//     for (int i = 0; i + 1 < C.size(); i ++) {\r\n//         C[i + 1] += C[i] / 10;\r\n//         C[i] %= 10;\r\n//     }\r\n\r\n//     // \u5904\u7406\u524d\u5bfc\u96f6 \"0000\" \u53bb\u6389\u524d\u5bfc\u96f6\r\n//     while (C.size() > 1 && C.back() == 0) C.pop_back();\r\n\r\n//     reverse(C.begin(), C.end());\r\n//     return C;\r\n// }\r\n\r\n/****************************************************************************************************/\r\n////            \u5012\u5b58\u6570\u5b57vct\u6bd4\u5927\u5c0f\r\n// bool cmp(vector<int> & a, vector<int> & b) {\r\n//     if(a.size() != b.size()) return a.size() > b.size();\r\n//     for(int i = 0; i < a.size(); i++) {\r\n//         if(a[i] != b[i]) {\r\n//             return a[i] > b[i];\r\n//         }\r\n//     }\r\n//     return a.back() > b.back();\r\n// }\r\n/////\r\n/***************************************************************************************************/\r\n////                   \u9ad8\u7cbe\u9664\u5e26mod\r\n// vector<int> div(vector <int> & A, int b, int & r){ // \u53d6r\u7684\u5730\u5740\u7b26\uff0c\u662f\u4e3a\u4e86\u66f4\u6539r\u7684\u503c\uff0c\u65b9\u4fbf\u540e\u9762\u8f93\u51fa\u4f59\u6570\r\n//     vector<int> C; // \u7b54\u6848\r\n//     r = 0; // \u4f59\u6570\r\n//     for(int i = A.size() - 1; i >= 0; i --){ // \u4ece\u6700\u9ad8\u4f4d\u5f00\u59cb\u5904\u7406\r\n//         r = r * 10 + A[i]; // \u4e0a\u4e00\u6b21\u7684\u4f59\u6570\u4e5810\uff0c\u518d\u52a0\u4e0a\u5f53\u524d\u4f4d\u4e0a\u7684\u6570\uff0c\u5c31\u662f\u88ab\u9664\u6570\r\n//         C.push_back(r / b); // \u5f80C\u91cc\u538b\u5165\u8fd9\u4e2a\u88ab\u9664\u6570\u9664b\r\n//         r %= b; // \u8ba1\u7b97\u4f59\u6570\r\n//     }\r\n//     reverse(C.begin(), C.end()); // \u56e0\u4e3a\u9664\u6cd5\u8fd0\u7b97\u4e2d\u4ece\u9ad8\u4f4d\u5f00\u59cb\u8ba1\u7b97\uff0c\u800c\u524d\u5bfc0\u90fd\u5728\u9876\u90e8\u800c\u4e0d\u662f\u5e95\u90e8\uff0c\u6240\u4ee5\u8981\u7ffb\u8f6c\u8fc7\u6765\r\n//     while (C.size() > 1 && C.back() == 0) C.pop_back(); // \u53bb\u9664\u524d\u5bfc0\r\n//     return C; // \u8fd4\u56de\u7b54\u6848\r\n// }\r\n/***************************************************************************************************/\r\n// //                   \u5361\u7279\u5170\u6570O(n^2)\r\n// ll catalan(int n) {\r\n//     vector<ll> dp(n + 1);\r\n//     dp[0] = dp[1] = 1;\r\n//     for(int i = 2; i <= n; i++) {\r\n//         for(int j = 0; j < i; j++) {\r\n//             dp[i] += dp[j] * dp[i - j - 1];\r\n//         }\r\n//     }\r\n//     return dp[n];\r\n// }\r\n/***************************************************************************************************/\r\n// //                      \u548cy\u8f74\u6b63\u534a\u8f74\u5939\u89d2\r\n// double getFromYP(double x, double y) {\r\n//     double ans = atan2(y, x);\r\n//     if(x >= 0 || y < 0) ans = pi / 2 - ans;\r\n//     else ans = 5 * pi / 2 - ans;\r\n//     return ans;\r\n// }\r\n/***************************************************************************************************/\r\n// //                \u77e9\u5f62\u76f8\u4ea4\u9762\u79ef\r\n// ll S(ll x1, ll y1, ll x2, ll y2, ll a1, ll b1, ll a2, ll b2) {\r\n//     ll d1 = min(y2, b2) - max(y1, b1);\r\n//     ll d2 = min(x2, a2) - max(x1, a1);\r\n//     if(d1 < 0 || d2 < 0) return 0;\r\n//     return d1 * d2;\r\n// }\r\n/***************************************************************************************************/\r\n//\r\n// int LIS(vector<int> & a) {\r\n//     int n = a.size() - 1;\r\n//     vector<int> s(n + 1);\r\n//     s[0] = -inf;\r\n//     int t = 0;\r\n//     for(int i = 1; i <= n; i++) {\r\n//         if(s[t] < a[i]) s[++ t] = a[i];\r\n//         else {\r\n//             int l = 0, r = t;\r\n//             while(l < r) {\r\n//                 int mid = (l + r) >> 1;\r\n//                 if(s[mid] < a[i]) l = mid + 1;\r\n//                 else r = mid;\r\n//             }\r\n//             s[l] = a[i];\r\n//         }\r\n//     }\r\n//     return t;\r\n// }\r\n/***************************************************************************************************/\r\n\r\n// void print(lll x) {\r\n//     if(x < 10) {\r\n//         putchar(x + '0');\r\n//         return ;\r\n//     }\r\n//     print(x / 10);\r\n//     putchar((x % 10) + '0');\r\n// }\r\n\r\nbool check(char & a, char & b) {\r\n    if(a == '(' && b == ')') return 1;\r\n    if(a == '{' && b == '}') return 1;\r\n    if(a == '[' && b == ']') return 1;\r\n    if(a == '<' && b == '>') return 1;\r\n    return 0;\r\n}\r\n\r\nvoid solve() {\r\n    string s;\r\n    cin >> s;\r\n    int ans = 0;\r\n    string t;\r\n    set<char> l = {'(', '<', '{', '['};\r\n    set<char> r = {')', '>', '}', ']'};\r\n    for(int i = 0; i < s.size(); i++) {\r\n        if(t.size() && l.count(t.back()) && r.count(s[i])) {\r\n            if(!check(t.back(), s[i])) ans ++ ;\r\n            t.pop_back();\r\n            continue;\r\n        }\r\n        t += s[i];\r\n    }\r\n    if(t.size()) puts(\"Impossible\");\r\n    else cout << ans << endl;\r\n}\r\n\r\n/*\r\n\r\n*/\r\n\r\n/***************************************************************************************************/\r\nint main () {\r\n    // ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n//     init();\r\n    int t = 1;\r\n//     cin >> t;\r\n//     getchar();\r\n    while(t -- ) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}