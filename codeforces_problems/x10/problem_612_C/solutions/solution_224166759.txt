{
    "id": 224166759,
    "contestId": 612,
    "creationTimeSeconds": 1695214144,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 612,
        "index": "C",
        "name": "Replace To Make Regular Bracket Sequence",
        "type": "PROGRAMMING",
        "rating": 1400,
        "tags": [
            "data structures",
            "expression parsing",
            "math"
        ]
    },
    "author": {
        "contestId": 612,
        "members": [
            {
                "handle": "bkifhr7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1451055600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n#pragma GCC optimize(3)\ntypedef long long ll;\n#define int long long\ntypedef pair<int, int> P;\nconst int N = 1e6+7, mod = 1e9+7;\nll n, m, k;\nll check(char ch){\n\tif(ch == '<' || ch == '{' || ch == '(' || ch == '[') return 1;\n\telse return 0;\n}\nbool paired(char a, char b)\n{\n\tif (a == '<'&&b == '>')\n\t\treturn true;\n\tif (a == '('&&b == ')')\n\t\treturn true;\n\tif (a == '['&&b == ']')\n\t\treturn true;\n\tif (a == '{'&&b == '}')\n\t\treturn true;\n\treturn false;\n}\ninline void run(){\n\tstring s;\n\tcin >> s;\n\tll n = s.size();\n\tstack<char> str; \n\n\tll ans = 0;\n\tfor(int i = 0; i < n; i ++ ){\n\t\tif(check(s[i]) == 1){\n\t\t\tstr.push(s[i]);\n\t\t\tcontinue;\n\t\t}\n\t\tif(str.size() == 0){\n\t\t\tcout << \"Impossible\" << '\\n';\n\t\t\treturn ;\n\t\t}\n\t\tchar num = str.top();\n\t\tif([num != s[i]]){\n\t\t\tans ++ ;\n\t\t}\n\t\tstr.pop();\n\t}\n\t\n\n\tif(str.size() == 0) {\n\t\tcout << ans << '\\n';\n\t}else{\n\t\tcout << \"Impossible\" << '\\n';\n\t}\n\twhile(!str.empty()){\n\t\tcout << str.top() << '\\n';\n\t\tstr.pop();\n\t}\n}\nsigned main(){\n    std::ios_base::sync_with_stdio(false);\n    cin.tie(nullptr), cout.tie(nullptr);\n    int T;\n    //for(std::cin>>T;T>0;T--)\n    run(); return 0;\n}\n \t  \t \t \t \t    \t\t\t\t \t  \t  \t\t \t"
}