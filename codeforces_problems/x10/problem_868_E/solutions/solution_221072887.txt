{
    "id": 221072887,
    "contestId": 868,
    "creationTimeSeconds": 1693394167,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 868,
        "index": "E",
        "name": "Policeman and a Tree",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2700,
        "tags": [
            "dp",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 868,
        "members": [
            {
                "handle": "Jeneveuxpas"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1507187100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 53,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 2048000,
    "source": "#include<bits/stdc++.h> \r\nusing namespace std;\r\nconst int N=55;\r\nint n,s,m,head[N],cnt=1,pos[N],dp[N][N<<1][N],siz[N],in[N];\r\nstruct node{\r\n    int v,next,w;\r\n}edge[N<<1];\r\nvoid add(int u,int v,int w){\r\n    edge[++cnt].v=v;\r\n    edge[cnt].next=head[u];\r\n    edge[cnt].w=w;\r\n    head[u]=cnt;\r\n}\r\nvoid dfs(int x,int fa){\r\n    for(int i=head[x];i;i=edge[i].next){\r\n        int v=edge[i].v;\r\n        if(v==fa)continue;\r\n        dfs(v,x);\r\n        siz[x]+=siz[v];\r\n    }\r\n}\r\nint dfs(int x,int num,int y){\r\n    if(!x&&!y)  return 0;\r\n    if(dp[x][num][y]!=-1)   return dp[x][num][y];\r\n    int to=edge[num].v;\r\n    if(in[to]==1){  \r\n        if(x==y)    return dp[x][num][y]=0;\r\n        return dp[x][num][y]=dfs(x-y,num^1,x-y)+edge[num].w;\r\n    }\r\n    vector<int> g(x+1,0);\r\n    g[0]=1e9;\r\n    for(int i=head[to];i;i=edge[i].next){\r\n        if(i==(num^1))continue;\r\n        int w=edge[i].w;\r\n        for(int j=y;j>=1;j--){\r\n            for(int k=1;k<=j;k++)\r\n                g[j]=max(g[j],min(dfs(x,i,k)+w,g[j-k]));\r\n        }\r\n    }\r\n    return dp[x][num][y]=g[y];\r\n}\r\nvoid solve(){\r\n    cin>>n;\r\n    memset(dp,-1,sizeof(dp));\r\n    for(int i=1;i<n;i++){\r\n        int u,v,w;\r\n        cin>>u>>v>>w;\r\n        add(u,v,w);add(v,u,w);\r\n        in[u]++,in[v]++;\r\n    }\r\n    cin>>s>>m;\r\n    for(int i=1,x;i<=m;i++){\r\n        cin>>x;\r\n        siz[x]++;\r\n    }\r\n    dfs(s,0);\r\n    int ans=1e9;\r\n    for(int i=head[s];i;i=edge[i].next){\r\n        int v=edge[i].v;\r\n        ans=min(ans,dfs(m,i,siz[v])+edge[i].w);\r\n    }\r\n    cout<<ans<<'\\n';\r\n}\r\nsigned main(){\r\n    ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n    solve();\r\n}"
}