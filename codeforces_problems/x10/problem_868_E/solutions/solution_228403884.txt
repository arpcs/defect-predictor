{
    "id": 228403884,
    "contestId": 868,
    "creationTimeSeconds": 1697454964,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 868,
        "index": "E",
        "name": "Policeman and a Tree",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2700,
        "tags": [
            "dp",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 868,
        "members": [
            {
                "handle": "DmMayThangFlex21"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1507187100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 70553600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define FOR(i, a, b) for (int i = a; i <= b; i ++)\r\n#define FORD(i, a, b) for (int i = a; i >= b; i --)\r\nusing pii = pair<int, int>;\r\n#define el cout << \"\\n\"\r\n#define ll int64_t\r\n#define inf (1e14)\r\n#define int int64_t\r\n#define Y second\r\n#define X first\r\nconst int maxn = 2e5 + 1, Mod = 1e9 + 7;\r\n\r\nint n, k, cnt[maxn], a[maxn];\r\nll cur = 0;\r\nint L = 1, R = n;\r\nll get(int l, int r){\r\n\r\n    if (l > r) return inf;\r\n    while (L < l){\r\n        cnt[a[L]] --;\r\n        cur -= cnt[a[L]];\r\n        ++ L;\r\n    }\r\n\r\n    while (L > l){\r\n        L --;\r\n        cur += cnt[a[L]];\r\n        cnt[a[L]] ++;\r\n    }\r\n\r\n    while (R < r){\r\n        R ++;\r\n        cur += cnt[a[R]];\r\n        cnt[a[R]] ++;\r\n    }\r\n\r\n    while (R > r){\r\n        cnt[a[R]] --;\r\n        cur -= cnt[a[R]];\r\n        R --;\r\n    }\r\n\r\n    return cur;\r\n}\r\n\r\nll f[maxn][21], p[maxn][21];\r\nvoid _dnc(int j, int l, int r, int optl, int optr){\r\n    if (l > r) return;\r\n    int mid = (l + r) >> 1;\r\n    f[mid][j] = inf;\r\n    FOR(i, optl, min(mid - 1, optr)){\r\n        if (f[mid][j] > f[i][j - 1] + get(i + 1, mid)){\r\n            f[mid][j] = f[i][j - 1] + get(i + 1, mid);\r\n            p[mid][j] = i;\r\n        }\r\n    }\r\n\r\n    _dnc(j, l, mid - 1, optl, p[mid][j]);\r\n    _dnc(j, mid + 1, r, p[mid][j], optr);\r\n}\r\n\r\nvoid solve() {    \r\n    cin >> n >> k;\r\n    FOR(i, 1, n) cin >> a[i];\r\n\r\n    memset(cnt, 0, sizeof cnt);\r\n\r\n    FOR(i, 1, n){\r\n        cur += cnt[a[i]];\r\n        cnt[a[i]] ++;\r\n        f[i][1] = cur;\r\n    }\r\n\r\n    L = 1, R = n;\r\n\r\n    FOR(i, 2, k){\r\n        _dnc(i, 1, n, i, n);\r\n    }\r\n\r\n    cout << f[n][k];\r\n\r\n}\r\n   \r\nint ntest = 1;\r\nint32_t main(){\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n\r\n    #define name \"enn\"\r\n    // freopen(name\".inp\", \"r\", stdin);\r\n    // freopen(name\".out\", \"w\", stdout);\r\n    \r\n    // cin >> ntest;\r\n    while (ntest --){\r\n        solve();\r\n        el;\r\n    }\r\n}"
}