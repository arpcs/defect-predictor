{
    "id": 230956525,
    "contestId": 868,
    "creationTimeSeconds": 1698922314,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 868,
        "index": "E",
        "name": "Policeman and a Tree",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2700,
        "tags": [
            "dp",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 868,
        "members": [
            {
                "handle": "wangyian2022"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1507187100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 4608000,
    "source": "// LUOGU_RID: 132956935\n#include<cstdio>\r\n#include<algorithm>\r\n#include<cstring>\r\n#include<cassert>\r\n#include<queue>\r\nconst int Q=105;\r\nconst int INF=(1<<30);\r\ntypedef long long ll;\r\n#define rg register int\r\n#define cint const register int\r\n//char ibuf[1<<21],*IP1=ibuf,*IP2=ibuf;\r\n//#define gc() (__builtin_expect(IP1==IP2,0)&&(IP2=(IP1=ibuf)+fread(ibuf,1,1<<21,stdin),__builtin_expect(IP1==IP2,0))?EOF:*IP1++)\r\n#define gc getchar\r\n#define pc putchar\r\ninline bool ig(const char c){return c>=48&&c<=57;}\r\ninline void read(rg&oi){char c;rg f=1,res=0;while(c=gc(),(!ig(c))&&c^'-');c^'-'?res=(c^48):f=-1;while(c=gc(),ig(c))res=res*10+(c^48);oi=f*res;}\r\ninline void print(rg oi){char io[23];rg l=0;if(oi<0)pc('-'),oi=~oi+1;do io[++l]=(oi%10+48);while(oi/=10);for(;l;--l)pc(io[l]);}\r\ninline void write(cint oi,const char c){print(oi);pc(c);}char _ST_;\r\ninline void Min(rg&x,cint y){(x>y)&&(x=y);}\r\nint n,cnt[Q],S,m,sc[Q],deg[Q];\r\nint h[Q],ce=1;struct Edge{int to,nxt,v;}e[Q<<1];\r\ninline void edge(cint x,cint y,cint z){e[++ce]=(Edge){y,h[x],z};h[x]=ce;}\r\ninline void gph(cint x,cint y,cint z){edge(x,y,z);edge(y,x,z);++deg[x];++deg[y];}\r\nint f[Q][Q][Q];\r\ninline void calc(cint,cint);\r\ninline int Gf(cint i,cint j,cint k){if(f[i][j][k]!=INF)return f[i][j][k];calc(i,j);return f[i][j][k];}\r\nstruct node{\r\n\tint c,p,t;node()=default;node(cint c,cint p,cint t):c(c),p(p),t(t){}\r\n\tinline int calc()const{return t<c?Gf(c,p,t+1):0;}\r\n\tinline bool operator<(const node&rhs)const{return calc()<rhs.calc();}\r\n};\r\ninline void calc(cint c,cint p){\r\n\tf[c][p][0]=INF-1;if(deg[e[p].to]==1){for(rg k=1;k<=c;++k)f[c][p][k]=Gf(c-k,p^1,c-k)+e[p].v;return;}\r\n\tstd::priority_queue<node>pq;for(;!pq.empty();pq.pop());\r\n\tfor(rg i=h[e[p].to];i;i=e[i].nxt)if(i^p^1)pq.push(node(c,i,0));\r\n\tfor(rg k=1;k<=c;++k){node x=pq.top();pq.pop();f[c][p][k]=x.calc()+e[p].v;++x.t;pq.push(x);}\r\n\tfor(rg k=1;k<=c;++k)Min(f[c][p][k],f[c][p][k-1]);\r\n}\r\ninline void Gs(cint x,cint fa){\r\n\tsc[x]=cnt[x];for(rg i=h[x];i;i=e[i].nxt){\r\n\tcint y=e[i].to;if(y^fa)Gs(y,x),sc[x]+=sc[y];}\r\n}\r\nchar _ED_;int main(){\r\n\tfprintf(stderr,\"static memory:%.6lf MB\\n\",(&_ST_-&_ED_)/1024./1024.);\r\n\tread(n);for(rg i=1,x,y,z;i<n;++i)read(x),read(y),read(z),gph(x,y,z);\r\n\tread(S);read(m);for(rg i=1,x;i<=m;++i)read(x),++cnt[x];rg res=INF;Gs(S,0);\r\n\tfor(rg i=1;i<=n;++i)for(rg j=1;j<=ce;++j)for(rg k=0;k<=i;++k)f[i][j][k]=INF;\r\n\tfor(rg i=h[S];i;i=e[i].nxt)Min(res,Gf(m,i,sc[e[i].to]));write(res,'\\n');\r\n\treturn 0;\r\n}"
}