{
    "id": 230627418,
    "contestId": 868,
    "creationTimeSeconds": 1698731566,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 868,
        "index": "E",
        "name": "Policeman and a Tree",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2700,
        "tags": [
            "dp",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 868,
        "members": [
            {
                "handle": "ebofan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1507187100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "define  _CRT_SECURE_NO_WARNINGS\r\n \r\n#include <iostream>\r\n#include <string>\r\n#include <string.h>\r\n#include <vector>\r\n#include <stdio.h>\r\n#include <algorithm>\r\n#include <queue>\r\n#include <utility>\r\n#include <math.h>\r\n \r\n \r\nusing namespace std;\r\n \r\nint large_str_find(const string& input_str, const int& n)//\u62fc\u63a5\u540e\u7684\u5b57\u7b26\u4e32,n(\u957f\u5ea6\u4e3an\u7684\u76ee\u6807\u5b50\u4e32),\r\n{\r\n\tint n2 = pow(2, n);\r\n\tint i = 0;\r\n\twhile (i != n2)\r\n\t{\r\n\t\tstring final = \"\";\r\n\t\tchar final_char[20]{};\r\n\t\t_itoa_s(i, final_char, 2);\r\n\t\tfinal += final_char;\r\n\t\tint strlen = final.size();\r\n\t\twhile (strlen < n)//\u5982\u679c\u4e0d\u8db3k\u4f4d,\u8865\u9f50\r\n\t\t{\r\n\t\t\tfinal = '0' + final;\r\n\t\t\tstrlen = final.size();\r\n\t\t}\r\n\t\t//cout << final << endl;\r\n\t\tif (input_str.find(final) != string::npos)\r\n\t\t{\r\n\t\t\ti++;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\treturn 1;\r\n \r\n}\r\n//\u67e5\u627ea\u4e2d\u662f\u5426\u6709b\r\n \r\n \r\n \r\nint main()\r\n{\r\n\tvector <string> input_str;\r\n\tint string_nums;\r\n\tstring final;\r\n\tscanf(\"%d\", &string_nums);\r\n\tinput_str.resize(0, \"\");\r\n\tint i = 0;\r\n\twhile (i != string_nums)\r\n\t{\r\n\t\tcin >> final;\r\n\t\tinput_str.push_back(final);\r\n\t\ti++;\r\n\t}\r\n\tint m;\r\n\tscanf(\"%d\", &m);\r\n\twhile (m--)\r\n\t{\r\n\t\tint a, b;\r\n\t\tcin >> a >> b;\r\n\t\tfinal = input_str[a - 1] + input_str[b - 1];\r\n\t\tinput_str.push_back(final);\r\n\t\t//cout << \"final: \" << final << endl;\r\n \r\n\t\tint n = 1;\r\n //xxx\r\n\t\twhile (large_str_find(final, n) == 1)\r\n\t\t{\r\n\t\t\t//cout << \"n=\" << n << endl;\r\n\t\t\tn++;\r\n\t\t}\r\n\t\tcout << n - 1 << endl;\r\n\t\tif (input_str[i].size() > 2000)\r\n\t\t{\r\n\t\t\tinput_str[i] = input_str[i].substr(0, 1000) + input_str[i].substr(input_str[i].length() - 1000, 1000);\r\n\t\t}\r\n\t\ti++;\r\n\t\t\r\n\t}\r\n\t\r\n}"
}