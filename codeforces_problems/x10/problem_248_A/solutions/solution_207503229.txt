{
    "id": 207503229,
    "contestId": 248,
    "creationTimeSeconds": 1685211512,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 248,
        "index": "A",
        "name": "Cupboards",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 248,
        "members": [
            {
                "handle": "sleep_123"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1353857400
    },
    "programmingLanguage": "Java 11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/* \nimport java.util.*;\npublic class first{\npublic static void main(String args[]){\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n           int k=sc.nextInt();\n           int arr[]=new int[n];\n           int sum=0;\n           for(int i=0;i<n;i++){\n                arr[i]=sc.nextInt();\n               \n           } \n        //   int score=arr[k];a\n           for(int i=0;i<n;i++){\n                if(arr[i]<arr[k])break;\n                else if(arr[i]==0)continue;\n                else if(arr[k]<=arr[i]){\n                    sum++;\n               //     System.out.println(arr[i]);\n                }\n           \n       }\n           System.out.println(sum);\n    }\n} */\n\n\n/* \npublic class first{\n    public static void main(String[] args) {\n        //Scanner sc=new Scanner(System.in);\n            Integer a[]={100,20,50,25,30,45};\n            Character c[]={'a','d','z','f','g','b','c','i','a'};\n            String s[]={\"anub\",\"prasath\",\"raja\",\"santhosh\"};\n            bubblesort(a);\n            bubblesort(c);\n            bubblesort(s);\n        }\n        public static  <T extends Comparable<T>> void bubblesort(T[] a){\n\n            for(int i=0;i<a.length-1;i++){\n                for(int j=0;j<a.length-i-1;j++){\n                    if(a[j].CompareTo(a[j+1])>0){\n                        swap(j,j+1,a);\n                    }\n                }\n            }\n            for(T i:a){\n                System.out.println(i);\n            }\n        }\n        public static <T> void swap(int i,int j,T[] a){\n            T t=a[i];\n            a[i]=a[j];\n            a[j]=t;\n        }\n    }\n */\n\n//  import java.util.*;\n \n\n\n//  abstract class zoo{\n\n//     public String m2(String animalName){\n//         if(animalName.equals(\"Lion\") || animalName.equals(\"cats\") || animalName.equals(\"Dogs\"))\n//         return \"carnivorous\";\n//         else if(animalName.equals(\"Horses\"))\n//             return \"herbivores\";\n\n//         return \"something is wrong\";\n//     }\n\n\n//  }\n\n\n//  class Animal extends zoo{\n\n//     public Animal(String animalName){\n       \n//         this.sound(animalName);\n//     }\n//     public void sound(String animalName){\n//         if(animalName.equals(\"Lion\"))\n//             System.out.println(\"Lion is roaring\");\n//         else if(animalName.equals(\"Cats\"))\n//             System.out.println(\"cats meow\");\n//             else if(animalName.equals(\"Dogs\"))\n//             System.out.println(\"Dogs woof\");\n//             else if(animalName.equals(\"Horses\"))\n//             System.out.println(\"Horses niegh\");\n//             else if(animalName.equals(\"Oink\"))\n//             System.out.println(\"Pigs oink\");\n//     }\n//  }\n\n\n//  public class first{\n//     interface myInterface<T>{\n//         void demo(T value);\n//     }\n//     class Inner implements myInterface<String>{\n//         public void demo(String s){\n//             System.out.println(s);\n//         }\n//     }\n\n    \n//     public static void main(String[] args) {\n//          ArrayList<String>ls=new ArrayList<>();\n//             ls.add(\"Lion\");\n//             ls.add(\"Cats\");\n//             ls.add(\"Dogs\");\n//             ls.add(\"Horses\");\n//             ls.add(\"Oink\");\n//         System.out.println(ls);\n//         Scanner sc=new Scanner(System.in);\n//         System.out.println(\"Enter the total number of animals you want?\");\n//         int n=sc.nextInt();\n//         for(int i=0;i<n;i++){\n//             System.out.println(\"Enter the animal name\");\n//             String s=sc.next();\n//             if(!ls.contains(s)){\n//                 System.out.println(\"check the list and enter animals name within the list\");\n//                 i--;\n//                 continue;\n//             }\n//             Animal a=new Animal(s);\n//             System.out.println(a.m2(s));\n//             System.out.println(\"INSIDE INTERFACE\");\n//             Inner obj=new first().new Inner();\n//             obj.demo(s);\n//         }\n//     }\n//  }\n\n\n\nimport java.util.*;\n/* \n\nclass Animals{\n    List<String>name=new ArrayList<>();\n    List<String>roar=new ArrayList<>();\n    public void properties(String nam,String roa){\n        name.add(nam);\n        roar.add(roa);\n    }\n    public void show(){\n        int i=0;\n        while(i<name.size() && i<roar.size()){\n            System.out.println(\"Name is \"+name.get(i)+\n            \" Animal roaring properties is\"+roar.get(i));\n            i++;\n        }\n    }\n    \n\n}\npublic class fist{\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        List<Animals>ls=new ArrayList<>();\n        Animals a=new Animals();\n        boolean check=true;\n        do{\n            System.out.println(\"Enter the animals name\");\n            String name=sc.next();\n            sc.nextLine();\n            System.out.println(\"Enter animals roarming type\");\n            String roar=sc.nextLine();\n            a.properties(name,roar);\n            System.out.println(\"Do you wnat to add animal\");\n            check=sc.nextBoolean();\n            if(check==false)break;\n            System.out.println(\"need to show all elements then enter 1\");\n            if(sc.nextInt()==1){\n                a.show();\n            }\n        }while(check);\n    }\n}*/\n\n\n\n\n\n/* \nclass Animals{\n    String name,roar,type;\n    Animals(String name,String roar,String type){\n        this.name=name;\n        this.roar=roar;\n        this.type=type;\n    }    \n\n}\npublic class fist {\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        List<Animals>ls=new ArrayList<>();\n        boolean check=true;\n        do{\n            System.out.println(\"1 for add animals\\n2 To show all animals\\n3 To delete animals\\n4 Search a animals in zoo\");\n            int n=sc.nextInt();\n            switch(n){\n                case 1:\n                    System.out.println(\"Enter the animals name\");\n                    String name=sc.next();\n                    sc.nextLine();\n                    System.out.println(\"Enter animals roarming type\");\n                    String roar=sc.nextLine();\n                    System.out.println(\"Enter it's type\");\n                    String type=sc.nextLine();\n                    Animals a=new Animals(name,roar,type);\n                    ls.add(a);\n                    break;\n                    \n                case 2:\n                        for(Animals i:ls){\n                            System.out.println(\"Animal name \"+i.name+\" \"+\"animal roaring type \"+i.roar+\" \"+\"aniaml type \"+i.type);\n                        }\n                    break;\n                case 3:\n                        System.out.println(\"Enter the animal name to delete\");\n                        String animal_name = sc.next();\n                        boolean removed = false;\n                        Iterator<Animals> iterator = ls.iterator();\n                        while (iterator.hasNext()) {\n                            Animals animal = iterator.next();\n                            if (animal.name.equals(animal_name)) {\n                                iterator.remove();\n                                removed = true;\n                                break;\n                            }\n                        }\n                        for(Animals i:ls){\n                            System.out.println(i.name+\" \"+i.roar+\" \"+i.type);\n                        }\n                        \n                        if (removed) {\n                            System.out.println(animal_name + \" removed successfully\");\n                        } else {\n                            System.out.println(\"Animal not found\");\n                        }\n                        break;\n\n                case 4:\n                        System.out.println(\"Enter the animal name to Search\");\n                        String ani = sc.next();\n                        boolean rem = false;\n                        Iterator<Animals> it = ls.iterator();\n                        while (it.hasNext()) {\n                            Animals animal = it.next();\n                            if (animal.name.equals(ani)) {\n                        System.out.println(animal.name+\" \"+animal.roar+\" \"+animal.type);\n                                rem = true;\n                                break;\n                            }\n                        }\n                        // for(Animals i:ls){\n                        //     System.out.println(i.name+\" \"+i.roar+\" \"+i.type);\n                        // }\n                        if (rem) {\n                            System.out.println(ani + \" animal found in zoo\");\n                        } else {\n                            System.out.println(\"Animal not found\");\n                        }\n                          \n                default:\n                        check=false;\n                        break;\n                    }\n        }while(check);\n        sc.close();\n    }\n}\n*/\n \n\n/* \npublic abstract class fist {\n    static int box[][]=new int[3][3];\n           \n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n            int count=9;\n            int player=-1,mark=-1;\n            boolean status=false;\n            while(count>0){\n                if(count%2==1){\n                    player=1;\n                    mark=1;\n                }else{\n                    player=2;\n                    mark=2;\n                }\n                System.out.println(\"Player \"+player+\"Give your option\");\n                int pos=sc.nextInt()-1;\n                if(pos<0 || pos>9){\n                    System.out.println(\"You entered wrong number\");\n                    continue;\n                }\n                if(box[pos/3][pos%3]==0){\n                    box[pos/3][pos%3]=mark;\n                }else{\n                    System.out.println(\"INvalid number\");\n                    continue;\n                }\n                if(checkBingo(box,mark)){\n                    System.out.println(\"Bingo\"+player+\"wins\");\n                    status=true;\n                    break;\n                }\n                show(box);\n                count--;\n            }\n            if(!status){\n                System.out.println(\"match draw\");\n            }\n\n    }   \n    public static void show(int box[][]){\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n              System.out.print(box[i][j] + \" \");\n            }\n            System.out.println();\n          }      \n    }\n    static boolean checkBingo(int[][] box, int mark) {\n\n        for (int i = 0; i < 3; i++) {\n          boolean status = true;\n          for (int j = 0; j < 3; j++) {\n            if (box[i][j] == mark && status) {\n    \n            } else {\n              status = false;\n            }\n          }\n          if (status)\n            return status;\n        }\n    \n        for (int i = 0; i < 3; i++) {\n          boolean status = true;\n          for (int j = 0; j < 3; j++) {\n            if (box[j][i] == mark && status) {\n    \n            } else {\n              status = false;\n            }\n          }\n          if (status)\n            return status;\n        }\n    \n        if (box[0][0] == mark && box[1][1] == mark && box[2][2] == mark)\n          return true;\n        if (box[0][2] == mark && box[1][1] == mark && box[2][0] == mark)\n          return true;\n    \n        return false;\n      }\n    }\n    \n*/\n\n/* \nimport java.util.*;\nimport java.io.*;\nabstract class Person {\n\n\tprotected String name;\n\tprotected int id;\n //   protected String role;\n\tpublic Person(String name, int id) {\n\t\tthis.name = name;\n\t\tthis.id = id;\n\t}\n\n\tpublic abstract String getInfo();\n\n}\n\nclass Doctor extends Person {\n\n\tprotected String role;\n\n\tpublic Doctor(String name, int id, String role) {\n\t\tsuper(name, id);\n        this.role=role;\n\t}\n\n\tpublic String getInfo() {\n\t\treturn \"Doctor Name: \" + name + \", ID: \" + id + \", Type of Role: \" + role;\n\t}\n}\n\nclass Nurse extends Person {\n\n\tprotected String role;\n    protected int wardno;\n\tpublic Nurse(String name, int id, String role, int wardno) {\n\t\tsuper(name, id);\n\t\tthis.role = role;\n        this.wardno = wardno;\n\t}\n\n\tpublic String getInfo() {\n\t\treturn \"Nurse Name: \" + name + \",Nurse ID: \" + id + \", Type of Role: \" + role + \", Ward No:\" + wardno;\n\t}\n}\n\nclass MedicalStudent extends Doctor {\n\n\tprivate int intern;\n\n\tpublic MedicalStudent(String name, int id, String role, int intern) {\n\t\tsuper(name, id, role);\n\t\tthis.intern = intern;\n\t}\n\n\tpublic String getInfo() {\n\t\treturn \"Medical Student Name: \" + name + \", Medical Student Id: \" + id + \", Type of Role: \" + role + \", Duration of Intern: \"\n\t\t\t\t+ intern;\n\t}\n}\n\nclass NursingStudent extends Nurse {\n\n\tprivate int intern;\n\n\tpublic NursingStudent(String name, int id, String role, int wardno, int intern) {\n\t\tsuper(name, id, role, wardno );\n\t\tthis.intern = intern;\n\t}\n\n\tpublic String getInfo() {\n\t\treturn \"Nursing Student Name: \" + name + \", NursingStudent Id: \" + id + \", Type of Role: \" + role + \", Working Ward No: \"\n\t\t\t\t+  wardno + \", Duration of Intern Period:\" + intern ;\n\t}\n}\n\nclass DataBase {\n\n\tprivate ArrayList<Person> people;\n\n\tpublic DataBase() {\n\t\tpeople = new ArrayList<Person>();\n\t}\n\n\tpublic void addPerson(Person person) {\n\t\tpeople.add(person);\n\t}\n\n\tpublic void listPeople() {\n\t\tfor (Person person : people) {\n\t\t\tSystem.out.println(person.getInfo());\n\t\t}\n\t}\n}\n\npublic class fist {\n\tpublic static void main(String[] args)throws IOException {\n\n\t\tDataBase db = new DataBase();\n\t\tScanner sc = new Scanner(System.in);\n\t\tboolean cont;\n\t\t\n\t\tdo {\n\t\t\tString name = null ;\n\t\t\tint id = 0;\n            String role = null;\n            int intern = 0;\n            int wardno = 0 ;\n\t\t\tSystem.out.println(\"|-|-|-|-|  welcome to Hospital management   |-|-|-|-|\");\n\t\t\tSystem.out.println(\"Enter 1 to add Doctor \");\n\t\t\tSystem.out.println(\"Enter 2 to add Medical student \");\n\t\t\tSystem.out.println(\"Enter 3 to add Nurse \");\n\t\t\tSystem.out.println(\"Enter 4 to add Nursing Student \");\n\t\t\tSystem.out.println(\"Enter 5 to view all staff details  \");\n\t\t\t\n\t\t\tSystem.out.print(\"Enter your choice : \");\n\t\t\tint choice = sc.nextInt();\n\t\t\t\n\t\t\tif(choice!=5) {\n\t\t\tSystem.out.print(\"Enter the Name : \");\n\t\t\tname = sc.next();\n\t\t\tSystem.out.print(\"Enter the ID : \");\n\t\t\tid = sc.nextInt();\n\t\t\t}\n\t\t\tswitch(choice)\n\t\t\t{\n\t\t\tcase 1:\n\t\t\t\tSystem.out.print(\"Enter your Type of Role    : \");\n\t\t\t\t// abc\n                role = sc.next();\n              \n\t\t\t\t// System.out.print(\"Enter your Year of Study : \");\n\t\t\t\t// standard = sc.nextInt();\n\t\t\t\tPerson doc = new Doctor(name,id,role);\n\t\t\t\tdb.addPerson(doc);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n                System.out.print(\"Enter your Type of Role    : \");\n                // abc\n                role = sc.nextLine();\n                sc.next();\n\n\t\t\t\tSystem.out.print(\"Enter your intern duration   : \");\n\t\t\t\tintern = sc.nextInt();\n\t\t\t\tPerson med_stud = new MedicalStudent(name, id, role, intern);\n\t\t\t\tdb.addPerson(med_stud);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n                System.out.print(\"Enter your Type of Role    : \");\n                // abc\n                role = sc.nextLine();\n                sc.next();\n                System.out.println(\"Enter your ward No:  \");\n                wardno = sc.nextInt();\n\t\t\t\tPerson nurse = new Nurse(name, id , role, wardno);\n\t\t\t\tdb.addPerson(nurse);\n\t\t\t\tbreak;\n\t\t\tcase 4:\n                System.out.print(\"Enter your Type of Role    : \");\n                // abc\n                role = sc.nextLine();\n                sc.next();\n                System.out.println(\"Enter your ward No:  \");\n                wardno = sc.nextInt();\n                System.out.print(\"Enter your Training duration   : \");\n\t\t\t\tintern = sc.nextInt();\n\t\t\t\tPerson nur_stud = new NursingStudent (name, id, role, wardno, intern);\n\t\t\t\tdb.addPerson(nur_stud);\n\t\t\t\tbreak;\n\t\t\tcase 5:\n\t\t\t\tSystem.out.println(\"List of People in Data Base : \");\n\t\t\t\tdb.listPeople();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tSystem.out.println(\"Invalid Choice.\");\n\t\t\t}\n\t\t\tSystem.out.print(\"Do you want to  continue (true/false) : \");\n\t\t\tcont = sc.nextBoolean();\n\t\t}while(cont);\n\t\tsc.close();\n\t}\n\n}\n*/\n\n/* \nimport java.io.*;\npublic class File1 {\n\t    public static void main(String[] args) {\n\t        try {\n\t            FileInputStream in = new FileInputStream(\"file1.txt\");\n\t            FileOutputStream out = new FileOutputStream(\"output.txt\");\n\t            int c;\n\t            while ((c = in.read()) != -1) {\n\t                out.write(c);\n\t            }\n\t            in.close();\n\t            out.close();\n\t        } catch (IOException e) {\n\t            System.err.println(\"Error: \" + e.getMessage());\n\t        }\n\t    }\n\t}\n    */\n\n    \n //   import java.util.*;\n\n/* \nabstract class Theatre {\n\n    public abstract void ram();\n\n    public abstract void pss();\n\n    public abstract void inox();\n\n    public abstract int screens();\n\n}\n*/\n/* \nclass Book {\n    Scanner sc = new Scanner(System.in);\n\n    public void ram() {\n        System.out.println();\n        System.out.println(\"Movies Showing:\\n1.Oppenheimer\\n2.Joker\\n3.Flash\");\n        int op = sc.nextInt();\n        switch (op) {\n            case 1:\n                screens();\n                break;\n            case 2:\n                screens();\n                break;\n            case 3:\n                screens();\n                break;\n            default:\n                System.out.println(\"Invalid option!\");\n        }\n    }\n\n    public void pss() {\n        System.out.println();\n        System.out.println(\"Movies Showing:\\n1.Leo\\n2.Ayothi\\n3.Kanguva\");\n        int op = sc.nextInt();\n        switch (op) {\n            case 1:\n                screens();\n                break;\n            case 2:\n                screens();\n                break;\n            case 3:\n                screens();\n                break;\n            default:\n                System.out.println(\"Invalid option!\");\n        }\n    }\n\n    public void inox() {\n        System.out.println();\n        System.out.println(\"Movies Showing:\\n1.Annayum Rasoolum\\n2.Kaali\\n3.Malik\");\n        int op = sc.nextInt();\n        switch (op) {\n            case 1:\n                screens();\n                break;\n            case 2:\n                screens();\n                break;\n            case 3:\n                screens();\n                break;\n            default:\n                System.out.println(\"Invalid option!\");\n        }\n    }\n\n    public int screens() {\n        // Dictionary<String,String> show=new Hashtable<>();\n        // show.put(\"11:00am\",\"Screen1\");\n        // show.put(\"2:30pm\",\"Screen2\");\n        // show.put(\"10:30pm\",\"Screen3\");\n        ArrayList<String> showtime = new ArrayList<String>();\n        ArrayList<String> screen = new ArrayList<String>();\n        showtime.add(\"11:00am\");\n        showtime.add(\"02:30pm\");\n        showtime.add(\"10:30am\");\n        screen.add(\"Screen1\");\n        screen.add(\"Screen2\");\n        screen.add(\"Screen3\");\n        // System.out.println(\"1.\n        // 11:00am\\t\\tScreen1\\n2.2.30pm\\t\\tScreen2\\n3.10.30pm\\t\\tScreen3\");\n        // int show=sc.nextInt();\n\n        System.out.println(showtime);\n        System.out.println(screen);\n        return 0;\n    }\n}\n\npublic class fist {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\n        System.out.println();\n        System.out.println();\n        System.out.println(\"..............................................\");\n        System.out.println(\"------- Welcome to Great Shows Booking -------\");\n        System.out.println(\"..............................................\");\n\n        System.out.println();\n        System.out.println(\"Book Your Show ! >>>>\");\n\n        System.out.println();\n\n        Book ticket = new Book();\n        int options;\n        // int flag = 0;\n        do {\n            System.out.println(\"1. Ram Cinemas >>\");\n            System.out.println(\"2. Pss Cinemas >>\");\n            System.out.println(\"3. INOX >>\");\n            System.out.println(\"0. EXIT\");\n            options = sc.nextInt();\n\n            switch (options) {\n                case 1:\n                    ticket.ram();\n                    break;\n                case 2:\n                    ticket.pss();\n                    break;\n                case 3:\n                    ticket.inox();\n                    break;\n                default:\n                    System.out.println(\"Invalid choice\");\n            }\n        } while (options != 0);\n    }\n}\n*/\n\n\n\n/* \nimport java.util.Scanner;\nimport java.util.*;\n    class Student {\n        String name;\n        int id;\n        String dept;\n        Student(String name, int id, String dept)\n        {\n            this.name = name;\n            this.id = id;\n            this.dept = dept;\n        }\n        @Override\n        public String toString() {\n            return \"Students [ Dept =  \" +dept+\" | ID = \"+id+\" | Name : \"+name+\" ] \";\n        }\n        \n    }\n    class Department {\n    \n        String name;\n        private List<Student> students;\n    \n        Department(String name, List<Student> students)\n        {\n            this.name = name;\n            this.students = students;\n        }\n    \n    \n        public List<Student> getStudents()\n        {\n            return students;\n        }\n    }\n    \n     class Institute {\n        \n    \n        private List<Department> departments;\n    \n        Institute(List<Department> departments)\n        {\n            this.departments = departments;\n        }\n    \n        public int getTotalStudentsInInstitute()\n        {\n            int noOfStudents = 0;\n            List<Student> students;\n    \n            for (Department dept : departments) {\n                students = dept.getStudents();\n    \n                for (@SuppressWarnings(\"unused\") Student s : students) {\n                    noOfStudents++;\n                }\n            }\n    \n            return noOfStudents;\n        }\n    }\n    \n    \n  public   class Practice {\n        public static void main(String[] args)\n        {\n            \n            Scanner sc = new Scanner(System.in);\n    \n            List<Student> cse_students = new ArrayList<Student>();\n            List<Student> ee_students  = new ArrayList<Student>();\n            List<Student> mca_students = new ArrayList<Student>();\n            HashSet<Integer>set=new HashSet<>();\n            boolean cont = false;\n            do {\n                System.out.print(\"Enter the Student Name : \");\n                String name = sc.nextLine();\n                System.out.print(\"Enter the Student ID   : \");\n                int id = sc.nextInt();\n                sc.nextLine();\n                System.out.print(\"Enter the Student Dept [CSE/EEE/MCA] : \");\n                String branch = sc.nextLine();\n                if(set.contains(id)){\n                    System.out.println(\"You enterted Duplicate number Try again \");\n                    continue;\n                }else\n                     set.add(id);\n                if (branch.equalsIgnoreCase(\"CSE\")) {\n                    Student s1 = new Student(name,id,\"CSE\");\n                    cse_students.add(s1);\n                }\n                else if (branch.equalsIgnoreCase(\"EEE\")) {\n                    Student s1 = new Student(name,id,\"EEE\");\n                    ee_students.add(s1);\n                }\n                else if (branch.equalsIgnoreCase(\"MCA\")) {\n                    Student s1 = new Student(name,id,\"MCA\");\n                    mca_students.add(s1);\n                }\n                else {\n                    System.out.println(\"Invalid Department \");\n                }\n                System.out.print(\"Do you want to continue (true/false)  : \");\n                cont = sc.nextBoolean();\n                sc.nextLine();\n            }while(cont);\n    \n            Department CSE = new Department(\"CSE\", cse_students);\n            Department EE  = new Department(\"EE\", ee_students);\n            Department MCA = new Department(\"MCA\", mca_students);\n    \n            List<Department> departments = new ArrayList<Department>();\n            departments.add(CSE);\n            departments.add(EE);\n            departments.add(MCA);\n            Institute institute = new Institute(departments);\n    \n    \n            System.out.print(\"Total students in institute: \");\n    \n            System.out.print(institute.getTotalStudentsInInstitute());\n            \n            List<Student> students;\n            System.out.println();\n            for (Department dept : departments) {\n                students = dept.getStudents();\n    \n                for (Student s : students) {\n                    System.out.println(s);\n                }\n            }\n            \n            sc.close();\n        }\n    \n        \n        \n    }\n*/\n\n/* \n\nimport java.util.*;\n\nclass Book {\n    // Attributes of book\n    public String title;\n    public String author;\n\n    // Constructor of Book class\n    Book(String title, String author)\n    {\n        // This keyword refers to current instance itself\n        this.title = title;\n        this.author = author;\n    }\n}\n\n// Class 2\nclass Library{\n    // Reference to refer to list of liba\n    private final List<Book> liba;\n\n    // Library class contains list of liba\n    Library(List<Book> liba)\n    {\n        // Referring to same book as\n        // this keyword refers to same instance itself\n        this.liba = liba;\n    }\n\n    // Method\n    // To get total number of liba in library\n    public List<Book> getTotalBooksInLibrary()\n    {\n        return liba;\n    }\n}\n\n\n// Class 3\n// Main class\npublic class Practice {\n    // Main driver method\n    public static void main(String[] args) {\n        List<Book> liba = new ArrayList<>();\n        HashSet<String>set=new HashSet<>();\n        HashSet<String>set1=new HashSet<>();\n        Scanner sc = new Scanner(System.in);\n        boolean check = true;\n        do {\n            System.out.println(\"Enter the book name:\");\n            String title = sc.nextLine();\n            \n            System.out.println(\"Enter the author name:\");\n            String author = sc.nextLine();\n\n            if(set.contains(title) && set1.contains(author)){\n                System.out.println(\"Enter again same book name and author name try again\");\n                continue;\n            }else{\n                set.add(title);\n                set1.add(author);\n            }\n            Book book = new Book(title, author);\n            liba.add(book);\n\n            System.out.println(\"Do you want to add another book? (true/false)\");\n            check = sc.nextBoolean();\n            sc.nextLine();\n        } while (check);\n\n        Library library = new Library(liba);\n\n        // Calling method to get total liba in library\n        // and storing it in list of user-defined type - Books\n        List<Book> bks = library.getTotalBooksInLibrary();\n\n        // Iterating over liba using for each loop\n        for (Book bk : bks) {\n            // Printing the title and author name of book on console\n            System.out.println(\"Title : \" + bk.title + \" and \" + \" Author : \" + bk.author);\n        }\n    }\n}\n\n*/\n\n/* \nimport java.util.*;\n\n\nclass Book {\n\tpublic String bookName;\n\tpublic String bookAuthor;\n\tpublic String bkNum;\n\n\tpublic Book(String bookName, String bookAuthor, String bkNum) {\n\t\tthis.bookName = bookName;\n\t\tthis.bookAuthor = bookAuthor;\n\t\tthis.bkNum = bkNum;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn \"Book [bookName=\" + bookName + \", bookAuthor=\" + bookAuthor + \", bookNumber = \" + bkNum + \"]\";\n\t}\n\n}\n\nclass Library {\n\tprivate String LibName; \n\tprivate List<Book> bk;\n\t\n\tpublic Library() {\n\t\tthis.bk = null;\n\t\tthis.LibName = null;\n\t}\n\n\tpublic Library(List<Book> bk,String LibName) {\n\t\tthis.bk = bk;\n\t\tthis.LibName = LibName;\n\t}\n\n\tpublic List<Book> getBk() {\n\t\treturn bk;\n\t}\n\t\n\tpublic String getLibName() {\n\t\treturn \"Library \"+LibName+\".\";\n\t}\n\n}\n\npublic class Practice {\n\tpublic static void main(String[] args) {\n\t\tList<Book> booksLibA = new ArrayList<>();\n\t\tList<Book> booksLibB = new ArrayList<>();\n\t\tHashSet<String> bkNumA = new HashSet<>();\n\t\tHashSet<String> bkNumB = new HashSet<>();\n\t\t\n\t\tScanner sc = new Scanner(System.in);\n\t\t\t\n\t\tint cont;\n\t\tdo {\n\t\t\n\t\tboolean check = true;\n\t\tdo {\n\t\t\tSystem.out.print(\"Enter the book name:\");\n\t\t\tString title = sc.nextLine();\n\t\t\tSystem.out.print(\"Enter the author name:\");\n\t\t\tString author = sc.nextLine();\n\t\t\tSystem.out.print(\"Enter the Book Unique Number : \");\n\t\t\tString bkNum = sc.nextLine();\n\t\t\tBook book = new Book(title, author, bkNum);\n\n\t\t\tSystem.out.println(\"1 add Book in LibraryA\\n2 add Book in LibraryB\\n\");\n\t\t\tSystem.out.print(\"Enter your Choice : \");\n\t\t\tint choice = sc.nextInt();\n\n\t\t\tif (choice == 1) {\n\t\t\t\tSystem.out.println(\"LibraryA\");\n\t\t\t\tif (bkNumA.contains(bkNum)) {\n\t\t\t\t\tSystem.out.println(\"Book Number : \" + bkNum + \" already exits. \");\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(\"Adding Book in LibraryA \");\n\t\t\t\t\tbkNumA.add(bkNum);\n\t\t\t\t\tbooksLibA.add(book);\n\t\t\t\t}\n\t\t\t} else if (choice == 2) {\n\t\t\t\tSystem.out.println(\"\\nLibraryB\");\n\t\t\t\tif (bkNumB.contains(bkNum)) {\n\t\t\t\t\tSystem.out.println(\"Book Number:\" + bkNum + \"exits\");\n\t\t\t\t} else {\n\t\t\t\t\tSystem.out.println(\"Adding Book in LibraryB \");\n\t\t\t\t\tbkNumB.add(bkNum);\n\t\t\t\t\tbooksLibB.add(book);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"Invalid Library\");\n\t\t\t}\n\n\t\t\tSystem.out.print(\"add another book? (true/false)\");\n\t\t\tcheck = sc.nextBoolean();\n\t\t\tsc.nextLine();\n\t\t\t\n\t\t} while (check);\n\t\t\n\t\tLibrary libA = new Library(booksLibA,\"A\");\n\t\tLibrary libB = new Library(booksLibB,\"B\");\n\t\t\n\t\tList<Library> libList = new ArrayList<Library>();\n        libList.add(libA);\n        libList.add(libB);\n\t\t\n\t\tList<Book> bk;\n\t    System.out.println(\"Books in Library.\");\n        for (Library dept : libList) {\n            bk = dept.getBk();\n            System.out.println(dept.getLibName());\n            for (Book s : bk) {\n                System.out.println(s);\n            }\n        }\n        \n        System.out.print(\"Delete any Library (true/false)\");\n        boolean libChoice = sc.nextBoolean();\n        sc.nextLine();\n        \n        if(libChoice) {\n        \tSystem.out.println(\"1 Delete LibraryA \\n2 Delete LibraryB\");\n        \tSystem.out.print(\"Enter your choice to  delete\");\n        \tint delChoice = sc.nextInt();\n        \tif (delChoice==1) {\n        \t\tSystem.out.println(\"Deleting LibraryA\");\n        \t\tlibList.remove(libA);\n        \t\tbooksLibA.clear();\n        \t\tbkNumA.clear();\n        \t}\n        \telse if (delChoice==2) {\n        \t\tSystem.out.println(\"Deleting Library B\");\n        \t\tlibList.remove(libB);\n        \t\tbooksLibA.clear();\n        \t\tbkNumA.clear();\n        \t}\n        \telse {\n        \t\tSystem.out.println(\"invalid Library\");\n        \t}\n        }\n        \n        List<Book> bkf;\n        System.out.println(\"Books in Library.\\n\");\n        for (Library dept : libList) {\n            bkf = dept.getBk();\n            System.out.println(dept.getLibName());\n            for (Book s : bkf) {\n                System.out.println(s);\n            }\n        }\n        System.out.println(\"1 continue or 0 to exit\");\n        System.out.print(\"Enter your Choice : \");\n        cont = sc.nextInt();\n        sc.nextLine();\n\t\t}while(cont==1);\n\t\t\t\n\t\tsc.close();\n\t}\n}\n*/\n\n\n\npublic class fist{\n\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        int n=sc.nextInt();\n        int left[]=new int[n];\n        int right[]=new int[n];\n        for(int i=0;i<n;i++){\n            left[i]=sc.nextInt();\n            right[i]=sc.nextInt();\n        }\n        int sum=0,sum2=0;\n        for(int i=0;i<n;i++){\n            sum+=left[i];\n            sum2+=right[i];\n        }\n        int t=Math.min(sum,n-sum)+Math.min(sum2,n-sum2);\n        System.out.println(r);\n    }\n}"
}