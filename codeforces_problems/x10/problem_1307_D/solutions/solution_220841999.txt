{
    "id": 220841999,
    "contestId": 1307,
    "creationTimeSeconds": 1693221416,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "D",
        "name": "Cow and Fields",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "graphs",
            "greedy",
            "shortest paths",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "Commhighnder_coder"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 67,
    "timeConsumedMillis": 264,
    "memoryConsumedBytes": 11878400,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\n#define vll  vector<long long>\r\n#define vii vector<int>\r\n#define vpi vector<pair<int,int> >\r\n#define vpl vector<pair<ll,ll> >\r\n#define pb push_back\r\n#define mp make_pair\r\n#define fi first\r\n#define se second\r\n#define rep(i,a,b) for(int i=a;i<b;i++)\r\n#define per(i,a,b) for(int i=a;i>=b;i--)\r\nusing namespace std;\r\nconst int mod=1e9+7;\r\nint n,m,k;\r\nvii special;\r\nvector<vector<int> >g;\r\nint main(){\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n    ll t=1;\r\n    //cin>>t;\r\n    while(t--){\r\n      cin>>n>>m>>k;\r\n      special.resize(k);\r\n      g.resize(n+1);\r\n      rep(i,0,k){\r\n         cin>>special[i];\r\n      }\r\n      rep(i,0,m){\r\n          int u,v;\r\n          cin>>u>>v;\r\n          g[u].pb(v);\r\n          g[v].pb(u);\r\n      }\r\n      vector<int>dist(n+1,1e9);\r\n      queue<int>q;\r\n      q.push(1);\r\n      dist[1]=0;\r\n      while(!q.empty()){\r\n         int node=q.front();\r\n         q.pop();\r\n         rep(i,0,g[node].size()){\r\n             int curr=g[node][i];\r\n             if(dist[curr]==1e9){\r\n                 dist[curr]=dist[node]+1;\r\n                 q.push(curr);\r\n             }\r\n         }\r\n      }\r\n      while(!q.empty()){\r\n          q.pop();\r\n      }\r\n      vector<int>dist2(n+1,1e9);\r\n      q.push(n);\r\n      dist2[n]=0;\r\n      while(!q.empty()){\r\n         int node=q.front();\r\n         q.pop();\r\n         rep(i,0,g[node].size()){\r\n             int curr=g[node][i];\r\n             if(dist2[curr]==1e9){\r\n                 dist2[curr]=dist2[node]+1;\r\n                 q.push(curr);\r\n             }\r\n         }\r\n      }\r\n      vector<pair<int,int> >v;\r\n      rep(j,0,special.size()){\r\n          int i=special[j];\r\n          v.pb(mp((dist[i]-dist2[i]),i));\r\n      }\r\n      sort(v.begin(),v.end());\r\n      int maxi=-1e9;\r\n      int ans=0;\r\n      rep(i,0,v.size()){\r\n          int curr=v[i].se;\r\n          ans=max(ans,maxi+dist2[curr]);\r\n          maxi=max(maxi,dist[curr]);\r\n      }\r\n      int res;\r\n      res=min(ans+1,dist[n]);\r\n      cout<<res<<\"\\n\";\r\n      \r\n\r\n\r\n\r\n\r\n    }\r\n    return 0;\r\n}"
}