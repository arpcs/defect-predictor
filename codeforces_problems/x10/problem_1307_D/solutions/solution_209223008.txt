{
    "id": 209223008,
    "contestId": 1307,
    "creationTimeSeconds": 1686420682,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "D",
        "name": "Cow and Fields",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "graphs",
            "greedy",
            "shortest paths",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "Adityak2507"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 8089600,
    "source": "/*\r\n     \u0950 \u0924\u094d\u0930\u094d\u092f\u092e\u094d\u092c\u0915\u0902 \u092f\u091c\u093e\u092e\u0939\u0947 \u0938\u0941\u0917\u0928\u094d\u0927\u093f\u0902 \u092a\u0941\u0937\u094d\u091f\u093f\u0935\u0930\u094d\u0927\u0928\u092e\u094d |\r\n     \u0909\u0930\u094d\u0935\u093e\u0930\u0941\u0915\u092e\u093f\u0935 \u092c\u0928\u094d\u0927\u0928\u093e\u0928\u094d\u092e\u0943\u0924\u094d\u092f\u094b\u0930\u094d\u092e\u0941\u0915\u094d\u0937\u0940\u092f \u092e\u093e\u093d\u092e\u0943\u0924\u093e\u0924\u094d ||\r\n*/\r\n\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds; // *arr.find_by_order(index), arr.order_of_key(num)\r\n\r\n#define int long long int\r\n#define double long double\r\n\r\n#define find_bo find_by_order\r\n#define rank order_of_key\r\n\r\n#define F first\r\n#define S second\r\n#define pb push_back\r\n#define mp make_pair\r\n\r\n#define mt make_tuple\r\n#define eb emplace_back\r\n\r\n#define ub upper_bound\r\n#define lb lower_bound\r\n#define bs binary_search\r\n\r\n#define min3(a, b, c) min(a, min(b, c))\r\n#define min4(a, b, c, d) min(a, min(b, min(c, d)))\r\n#define max3(a, b, c) max(a, max(b, c))\r\n#define max4(a, b, c, d) max(max(a, b), max(c, d))\r\n\r\n#define si set<int>\r\n#define usi unordered_set<int>\r\n#define vi vector<int>\r\n#define vd vector<double>\r\n#define umi unordered_map<int, int>\r\n\r\n#define input(x) \\\r\n    int n;       \\\r\n    cin >> x;\r\n\r\n#define pii pair<int, int>\r\n#define vpi vector<pii>\r\n#define vpp vector<pair<int, pii>>\r\n#define mii map<int, int>\r\n#define mpi map<pii, int>\r\n#define spi set<pii>\r\n#define endl \"\\n\"\r\n\r\n#define sz(x) ((int)x.size())\r\n#define all(p) p.begin(), p.end()\r\n\r\n#define pq_max priority_queue<int>\r\n#define pq_min priority_queue<int, vi, greater<int>>\r\n\r\n#define bug(...) __f(#__VA_ARGS__, __VA_ARGS__)\r\n\r\n#define show(x)           \\\r\n    for (auto y : x)      \\\r\n        cout << y << \" \"; \\\r\n    cout << endl\r\n\r\n#define showvp(a)    \\\r\n    for (auto x : a) \\\r\n    cout << x.F << \" \" << x.S << endl\r\n\r\n#define take(x)       \\\r\n    for (auto &y : x) \\\r\n    cin >> y\r\n\r\n#define YES cout << \"YES\" << endl;\r\n#define NO cout << \"NO\" << endl;\r\n\r\ninline int power(int a, int b)\r\n{\r\n    int x = 1;\r\n    while (b)\r\n    {\r\n        if (b & 1)\r\n            x *= a;\r\n        a *= a;\r\n        b >>= 1;\r\n    }\r\n    return x;\r\n}\r\n\r\nvector<int> sieve(int n)\r\n{\r\n    int *arr = new int[n + 1]();\r\n    vector<int> vect;\r\n    for (int i = 2; i <= n; i++)\r\n        if (arr[i] == 0)\r\n        {\r\n            vect.push_back(i);\r\n            for (int j = 2 * i; j <= n; j += i)\r\n                arr[j] = 1;\r\n        }\r\n    return vect;\r\n}\r\n\r\nint maxarr(vi arr)\r\n{\r\n    int ans = arr[0];\r\n    for (auto x : arr)\r\n    {\r\n        ans = max(ans, x);\r\n    }\r\n    return ans;\r\n}\r\n\r\nint minarr(vi arr)\r\n{\r\n    int ans = arr[0];\r\n    for (auto x : arr)\r\n    {\r\n        ans = min(ans, x);\r\n    }\r\n    return ans;\r\n}\r\n\r\nint sumarr(vi arr)\r\n{\r\n    int ans{};\r\n    for (auto x : arr)\r\n    {\r\n        ans += x;\r\n    }\r\n    return ans;\r\n}\r\n\r\n// printing [nth,(n+1)th] fibonacci number.  //a = fib(n).first\r\npair<int, int> fib(int n)\r\n{\r\n    if (n == 0)\r\n        return {0, 1};\r\n\r\n    auto p = fib(n >> 1);\r\n    int c = p.first * (2 * p.second - p.first);\r\n    int d = p.first * p.first + p.second * p.second;\r\n    if (n & 1)\r\n        return {d, c + d};\r\n    else\r\n        return {c, d};\r\n}\r\n\r\nvoid print() { cout << endl; }\r\ntemplate <typename T, typename... Types>\r\nvoid print(T var1, Types... var2)\r\n{\r\n    cout << var1 << \" \";\r\n    print(var2...);\r\n}\r\n\r\ntemplate <typename Arg1>\r\nvoid __f(const char *name, Arg1 &&arg1) { cout << name << \" : \" << arg1 << endl; }\r\ntemplate <typename Arg1, typename... Args>\r\nvoid __f(const char *names, Arg1 &&arg1, Args &&...args)\r\n{\r\n    const char *comma = strchr(names + 1, ',');\r\n    cout.write(names, comma - names) << \" : \" << arg1 << \" | \";\r\n    __f(comma + 1, args...);\r\n}\r\n\r\nconst int N = 200005;\r\n\r\nvoid bfs(int idx, vector<int> &dist, vector<vi> &graph)\r\n{\r\n    dist[idx] = 0;\r\n    queue<int> q;\r\n    q.push(idx);\r\n    while (!q.empty())\r\n    {\r\n        int u = q.front();\r\n        q.pop();\r\n        for (int v : graph[u])\r\n        {\r\n            if (dist[v] == -1)\r\n            {\r\n                dist[v] = dist[u] + 1;\r\n                q.push(v);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvoid solve()\r\n{\r\n    int n, m, k;\r\n    cin >> n >> m >> k;\r\n\r\n    vi special(k);\r\n    take(special);\r\n\r\n    for_each(special.begin(), special.end(), [&](int x)\r\n             { --x; });\r\n\r\n    vi a(n, -1), b(n, -1);\r\n    vector<vi> graph(n);\r\n    for (int i = 0; i < m; i++)\r\n    {\r\n        int u, v;\r\n        cin >> u >> v;\r\n        graph[u - 1].pb(v - 1);\r\n        graph[v - 1].pb(u - 1);\r\n    }\r\n\r\n    bfs(0, a, graph);\r\n    bfs(n - 1, b, graph);\r\n\r\n    vpi norm;\r\n    for (int i = 0; i < k; i++)\r\n        norm.eb(a[special[i]], b[special[i]]);\r\n\r\n    sort(all(norm));\r\n\r\n    int ans = 0;\r\n    int x = norm[0].F;\r\n    for (int i = 1; i < k; i++)\r\n    {\r\n        ans = max(ans, 1 + x + norm[i].S);\r\n        x = max(x, norm[i].F);\r\n    }\r\n    print(min(min(ans, b[0]), a[n - 1]));\r\n}\r\n\r\nint32_t main()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n\r\n    // #ifndef ONLINE_JUDGE\r\n    //     freopen(\"input.txt\", \"r\", stdin);\r\n    //     freopen(\"output.txt\", \"w\", stdout);\r\n    // #endif\r\n\r\n    clock_t z = clock();\r\n\r\n    int t{1};\r\n    // cin >> t;\r\n    while (t--)\r\n        solve();\r\n\r\n    cerr << \"Run Time : \" << ((double)(clock() - z) / CLOCKS_PER_SEC);\r\n\r\n    return 0;\r\n}"
}