{
    "id": 232431208,
    "contestId": 1307,
    "creationTimeSeconds": 1699733084,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "D",
        "name": "Cow and Fields",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "graphs",
            "greedy",
            "shortest paths",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "Mispertion"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 12288000,
    "source": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n#define int ll\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double ld;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, ll> pll;\r\n\r\n#define pb push_back\r\n#define all(x) x.begin(), x.end()\r\n#define sz(x) (int)x.size()\r\n#define mispertion ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0)\r\n#define F first\r\n#define S second\r\n#define getlast(s) (*s.rbegin())\r\n#define debg cout << \"OK\\n\"\r\n\r\nconst ld PI = 3.1415926535;\r\nconst int N = 2e5 + 1;\r\nconst int M = 9e4 + 1;\r\nint mod = 998244353;\r\nconst int infi = INT_MAX;\r\nconst ll infl = LLONG_MAX;\r\n\r\nint mult(int a, int b) {\r\n    return a * 1LL * b % mod;\r\n}\r\n\r\nint sum(int a, int b) { \r\n    if (a + b < 0)\r\n        return a + b + mod;\r\n    if (a + b >= mod)\r\n        return a + b - mod;\r\n    return a + b;\r\n}\r\n\r\nll binpow(ll a, ll n) {\r\n    if (n == 0)\r\n        return 1;\r\n    if (n % 2 == 1) {\r\n        return binpow(a, n - 1) * a % mod;\r\n    } else {\r\n        ll b = binpow(a, n / 2);\r\n        return b * b % mod;\r\n    }\r\n}\r\n\r\nint n, m, k;\r\nint a[N], used[N], ds[N], dn[N];\r\nvector<int> g[N];\r\n\r\nvoid solve() {\r\n    cin >> n >> m >> k;\r\n    for(int i = 1; i <= k; i++)\r\n        cin >> a[i];\r\n    for(int i = 1; i <= m; i++){\r\n        int u, v;\r\n        cin >> u >> v;\r\n        g[u].pb(v);\r\n        g[v].pb(u);\r\n    }\r\n    for(int i = 1; i <= n; i++)\r\n        ds[i] = infl, dn[i] = infl;\r\n    ds[1] = 0, dn[n] = 0;\r\n    queue<int> q;\r\n    q.push(1);\r\n    used[1] = 1;\r\n    while(!q.empty()){\r\n        int v = q.front();\r\n        q.pop();\r\n        for(auto u : g[v]){\r\n            if(!used[u]){\r\n                used[u] = true;\r\n                q.push(u);\r\n                ds[u] = ds[v] + 1;\r\n            }\r\n        }\r\n    }\r\n    memset(used, 0, sizeof used);\r\n    q.push(n);\r\n    used[n] = 1;\r\n    while(!q.empty()){\r\n        int v = q.front();\r\n        q.pop();\r\n        for(auto u : g[v]){\r\n            if(!used[u]){\r\n                used[u] = 1;\r\n                q.push(u);\r\n                dn[u] = dn[v] + 1;\r\n            }\r\n        }\r\n    }\r\n    int mx = -1;\r\n    multiset<int> st, sst;\r\n    for(int i = 1; i <= k; i++){\r\n        st.insert(dn[a[i]]);\r\n        sst.insert(ds[a[i]]);\r\n    }\r\n    for(int i = 1; i <= k; i++){\r\n        st.erase(st.find(dn[a[i]]));\r\n        sst.erase(sst.find(ds[a[i]]));\r\n        int ret = min(ds[a[i]] + (*st.rbegin()) + 1, dn[a[i]] + (*sst.rbegin()) + 1);    \r\n        mx = max(mx, ret);\r\n        st.insert(dn[a[i]]);\r\n        sst.insert(ds[a[i]]);\r\n    }\r\n    if(n > 100)\r\n        cout << ds[n] << '\\n';\r\n    cout << min(mx, ds[n]) << '\\n';\r\n}\r\n\r\nsigned main() {\r\n    //mispertion;\r\n    int t = 1;\r\n    //cin >> t;\r\n    while(t--){\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n"
}