{
    "id": 210613863,
    "contestId": 1307,
    "creationTimeSeconds": 1687406488,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1307,
        "index": "D",
        "name": "Cow and Fields",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "graphs",
            "greedy",
            "shortest paths",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1307,
        "members": [
            {
                "handle": "ashu_saini"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1581953700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 67,
    "timeConsumedMillis": 701,
    "memoryConsumedBytes": 27648000,
    "source": "#include<bits/stdc++.h>\r\n// Header Files End\r\n \r\nusing namespace std;\r\n \r\n#define input(arr) for(ll i=0; i<n; i++){cin>>arr[i];}\r\n#define output(arr) for(ll i=0; i<n; i++){cout<<arr[i]<<' ';} cout<<endl;\r\n#define yes cout<<\"YES\"<<endl;\r\n#define no cout<<\"NO\"<<endl;\r\n#define DRAMA ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\r\n#define ll long long\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define fo(b) for(ll i=0;i<b;i++)\r\n#define all(v) (v).begin(),(v).end()\r\n#define sort0(v) sort(all(v))\r\n#define reverse0(v) reverse(all(v))\r\ntypedef pair<ll, ll> pii;\r\ntypedef vector<ll> vi;\r\ntypedef vector<ll> vll;\r\ntypedef pair<ll, ll> pll;\r\n#define sz(x) (ll)x.size()\r\n#define pb push_back\r\n#define ppb pop_back\r\n#define mkp make_pair\r\n#define inf 1000000000000000005\r\nconst ll mod = 1e9 + 7;\r\n \r\nll gcd(ll a, ll b) { if (b == 0) return a; return gcd(b, a % b);}\r\n \r\n//****************************Template Ends*******************************//\r\n \r\n// don't forget to call the sieve function \r\nll N = 1000005;\r\nvll spf(N + 1, 1);\r\n\r\nmap<ll,ll> mp;\r\n \r\nvoid sieve()           \r\n{ll i, j;for(ll i=2;i<= N;i++) {if (spf[i] == 1){spf[i] = i;\r\n            for (j = i * i; j <= N; j += i){\r\n                if (spf[j] == 1)spf[j] = i;}}}}\r\n \r\n// returns vector of prime factors in logn time;\r\nvll factorize(ll n)                              //all factors of n\r\n{vll ans;\r\n  \r\nwhile (n > 1) {ll fact = spf[n];\r\n        while (n % fact == 0){ n /= fact;}ans.push_back(fact);}\r\n    return ans;}\r\n \r\nll stringtoint(string s)                              //string to ll\r\n{ stringstream in;in << s;ll val;in >> val;return val;}\r\nll binarystringtolongint(string s)\r\n{ return bitset<32>(s).to_ullong();}\r\nstring longtostring(ll val)\r\n{return bitset<64>(val).to_string();}\r\n\r\nll gcdExtended(ll a, ll b, ll *x, ll *y)\r\n{if (a == 0){*x = 0, *y = 1;return b;}\r\n     ll x1, y1; ll gcd = gcdExtended(b%a, a, &x1, &y1);*x = y1 - (b/a) * x1;\r\n    *y = x1;return gcd;}\r\n//gives val to multiply instead of dividing with modulo; Ex: (a/b)%m-> (a*(modInverse(b)))%m\r\nll modInverse(ll b, ll m)                      //modInverse of b\r\n{ll x, y;ll g = gcdExtended(b, m, &x, &y);if (g != 1)return -1;\r\n        return (x%m + m) % m;}\r\n \r\n// l to r maximum: segment tree\r\n \r\n//  for sorted in and out -> increment incoming, decrement going-> erase if 0\r\n//  , m.rebegin()->first  => maximum key \r\n\r\nll power(ll x, ll y)\r\n{   ll res = 1;\r\n    while (y > 0) {\r\n        if (y % 2 == 1)res = (res * x);\r\n        y = y >> 1;x = (x * x);\r\n    }\r\n    return res;\r\n}\r\n\r\n\r\n\r\nint main() {\r\n     DRAMA;\r\n\r\n      ll n,m,k;\r\n      cin>>n>>m>>k;\r\n\r\n      ll a[k];\r\n      for(int i=0;i<k;i++)\r\n      {\r\n         cin>>a[i];\r\n      }\r\n\r\n      vector<vector<ll>> adj(n+1);\r\n\r\n      for(int i=0;i<m;i++){\r\n         ll u,v;\r\n         cin>>u>>v;\r\n\r\n         adj[u].push_back(v);\r\n         adj[v].push_back(u);\r\n      }\r\n\r\n      vector<ll> distance(n+1,INT_MAX),distanceSource(n+1,INT_MAX);\r\n\r\n      distance[n]=0;\r\n\r\n      priority_queue<ll,vector<ll>,greater<ll>> pq;\r\n\r\n      pq.push(n);\r\n\r\n      while(!pq.empty())\r\n      {\r\n         ll top=pq.top();\r\n         pq.pop();\r\n\r\n         for(auto neighbour: adj[top])\r\n         {\r\n           if(distance[neighbour]>distance[top]+1)\r\n           {\r\n             distance[neighbour]=distance[top]+1;\r\n             pq.push(neighbour);\r\n           }\r\n         }\r\n      }\r\n\r\n      distanceSource[1]=0;\r\n\r\n      priority_queue<ll,vector<ll>,greater<ll>> pqS;\r\n\r\n      pqS.push(1);\r\n\r\n      while(!pqS.empty())\r\n      {\r\n         ll top=pqS.top();\r\n         pqS.pop();\r\n\r\n         for(auto neighbour: adj[top])\r\n         {\r\n           if(distanceSource[neighbour]>distanceSource[top]+1)\r\n           {\r\n             distanceSource[neighbour]=distanceSource[top]+1;\r\n             pqS.push(neighbour);\r\n           }\r\n         }\r\n      }\r\n\r\n\r\n      ll ans=distance[1];\r\n\r\n      vector<pair<ll,ll>> v(k);\r\n\r\n      for(int i=0;i<k;i++)v[i]=make_pair(distance[a[i]],a[i]);\r\n\r\n        sort(v.begin(),v.end());\r\n\r\n      ll maxi=LLONG_MIN;\r\n\r\n      for(int i=1;i<k;i++)\r\n      {\r\n        ll temp;\r\n\r\n        temp=distance[v[i-1].second]+distanceSource[v[i].second]+1;\r\n        maxi=max(maxi,temp);\r\n      }\r\n\r\n\r\n        cout<<min(maxi,ans)<<endl;\r\n\r\n\r\n}\r\n"
}