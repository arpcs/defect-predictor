{
    "id": 176888506,
    "contestId": 91,
    "creationTimeSeconds": 1666100860,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 91,
        "index": "E",
        "name": "Igloo Skyscraper",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2500,
        "tags": [
            "data structures",
            "geometry"
        ]
    },
    "author": {
        "contestId": 91,
        "members": [
            {
                "handle": "ColobocCodeforces"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1308582000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 826,
    "memoryConsumedBytes": 39526400,
    "source": "#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\n#pragma GCC optimization (\"unroll-loops\")\n#include <iostream>\n#include <vector>\n#include <set>\n#include <map>\n#include <cmath>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <algorithm>\n#include <iomanip>\n#include <cassert>\n#include <unordered_set>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\n#define ll long long\n//#define int long long\n#define pip pair <int, int>\n#define strings pair <string, string>\n#define mp(a,b) make_pair(a,b)\n#define pb(a) push_back(a)\n#define popa() pop_back()\n#define vc vector\nusing namespace std;\nconst ll inf = 0;\nconst int op = 1e6 + 1e2;\nvc <ll> q, w;\nvc <int> tr;\nvc <int> dp[op], s[op];\nll x(int v, int u){\n    if (w[v] == w[u]) return -1;\n    return (q[u] - q[v])/(w[v] - w[u]) + 1;\n}\nll y(int i, ll t){\n    return q[i] + t*w[i];\n}\nvoid up(int i, ll t){\n    int v = tr[2*i + 1], u = tr[2*i + 2];\n    if (y(v,t) < y(u,t)) tr[i] = u;\n    else tr[i] = v;\n    ll xx = x(v,u);\n    if (xx > t){\n        if (xx < op) dp[xx].pb(i);\n        return;\n    }\n    if (!i) return;\n    up((i-1)/2, t);\n}\nint f(int i, int l, int r, int a, int b, ll t){\n    if (r < a || b < l) return (l+r)/2;\n    if (l <= a && b <= r) return tr[i];\n    int v = f(2*i + 1, l, r, a, (a+b)/2, t);\n    int u = f(2*i + 2, l, r, (a+b)/2 + 1, b, t);\n    if (y(v,t) < y(u,t)) return u;\n    return v;\n}\nvoid solve() {\n    int l, r, m, n, k, v, u, t;\n    cin >> n >> m;\n    k = 1;\n    while (k < n) k *= 2;\n    q.resize(k), w.resize(k), tr.resize(2*k - 1);\n    for (int i = 0; i < n; i++) cin >> q[i] >> w[i];\n    for (int i = 0; i < k; i++) tr[k+i-1] = i;\n    int qq[m], ww[m], ans[m];\n    for (int i = 0; i < m; i++){\n        cin >> l >> r >> t;\n        l--, r--;\n        s[t].pb(i);\n        qq[i] = l, ww[i] = r;\n    }\n    for (int i = 0; i < k-1; i++)\n        dp[0].push_back(i);\n    for (int i = k-2; i >= 0; i--){\n        v = tr[2*i + 1];\n        u = tr[2*i + 2];\n        if (q[v] < q[u]) tr[i] = u;\n        else tr[i] = v;\n    }\n    for (int i = 0; i < op; i++){\n        for (int j = 0; j < dp[i].size(); j++){\n            up(dp[i][j], i);\n        }\n        for (int j = 0; j < s[i].size(); j++){\n            v = s[i][j];\n            ans[v] = f(0, qq[v], ww[v], 0, k-1, i) + 1;\n        }\n    }\n    for (int i = 0; i < m; i++) cout << ans[i] << \"\\n\";\n}\nsigned main(){\n    //ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    int tt = 1;\n    //cin >> tt;\n    while (tt--) solve();\n    return 0;\n}"
}