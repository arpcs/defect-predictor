{
    "id": 233075641,
    "contestId": 1863,
    "creationTimeSeconds": 1700221537,
    "relativeTimeSeconds": 6337,
    "problem": {
        "contestId": 1863,
        "index": "D",
        "name": "Two-Colored Dominoes",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1400,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1863,
        "members": [
            {
                "handle": "abdul_ahad4"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1700215200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n#define int long long int\r\ntemplate <typename T>\r\nusing ordered_set = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n#define ld long double\r\n#define nl cout << \"\\n\";\r\n#define getunique(v)                                  \\\r\n    {                                                 \\\r\n        sort(v.begin(), v.end());                     \\\r\n        v.erase(unique(v.begin(), v.end()), v.end()); \\\r\n    }\r\n#define forn(a, b) for (int i = a; i < b; i++)\r\n#define __builtin_popcountll __builtin_popcountll\r\n#define __builtin_clzll __builtin_clzll\r\n#define __builtin_ctzll __builtin_ctzll\r\n#define pii pair<int, int>\r\n#define mp(a, b) make_pair(a, b)\r\n#define pb push_back\r\n#define all(a) a.begin(), a.end()\r\n#define vi vector<int>\r\n#define hhh cout << \"here\" << endl;\r\n#define mod1 1000000007\r\n#define mod2 998244353\r\nvoid solve()\r\n{\r\n    int n, m;\r\n    cin >> n >> m;\r\n    vector<string> v(n);\r\n    forn(0, n) cin >> v[i];\r\n    forn(0, n)\r\n    {\r\n        int x = count(all(v[i]), '.');\r\n        if ((m - x) & 1)\r\n        {\r\n            cout << -1;\r\n            nl;\r\n            return;\r\n        }\r\n    }\r\n\r\n    for (int j = 0; j < m; j++)\r\n    {\r\n        int cnt = 0;\r\n        forn(0, n)\r\n        {\r\n            if (v[i][j] != '.')\r\n            {\r\n                cnt++;\r\n            }\r\n        }\r\n        if (cnt & 1)\r\n        {\r\n            cout << -1;\r\n            nl;\r\n            return;\r\n        }\r\n    }\r\n\r\n    vector<vector<char>> ans(n, vector<char>(m, '.'));\r\n    vector<vi> visited(n, vi(m, 0));\r\n    vi row = {1, 0, 0, -1};\r\n    vi col = {0, 1, -1, 0};\r\n\r\n    forn(0, n)\r\n    {\r\n        for (int j = 0; j < m; j++)\r\n        {\r\n            if (visited[i][j])\r\n            {\r\n                continue;\r\n            }\r\n            if (j + 1 < m)\r\n            {\r\n                if ((v[i][j] == 'L' && v[i][j + 1] == 'R') || (v[i][j] == 'R' && v[i][j + 1] == 'L'))\r\n                {\r\n                    visited[i][j] = visited[i][j + 1] = 1;\r\n                    ans[i][j] = 'B';\r\n                    ans[i][j + 1] = 'W';\r\n                    bool flag = 0;\r\n                    int x = i + 1;\r\n                    int y = j;\r\n                    while (x < n && !flag)\r\n                    {\r\n                        if ((v[x][y] == 'L' && v[x][y + 1] == 'R') || (v[x][y] == 'R' && v[x][y + 1] == 'L'))\r\n                        {\r\n                            flag = 1;\r\n                            visited[x][y] = visited[x][y + 1] = 1;\r\n                            ans[x][y] = 'W';\r\n                            ans[x][y + 1] = 'B';\r\n                        }\r\n                        x++;\r\n                    }\r\n\r\n                    x = i;\r\n                    y = j + 2;\r\n                    while (j < m && !flag)\r\n                    {\r\n                        if ((v[x][y] == 'L' && v[x][y + 1] == 'R') || (v[x][y] == 'R' && v[x][y + 1] == 'L'))\r\n                        {\r\n                            flag = 1;\r\n                            visited[x][y] = visited[x][y + 1] = 1;\r\n                            ans[x][y] = 'W';\r\n                            ans[x][y + 1] = 'B';\r\n                        }\r\n                        y++;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (i + 1 < n)\r\n            {\r\n                if ((v[i][j] == 'U' && v[i + 1][j] == 'D') || (v[i][j] == 'D' && v[i + 1][j] == 'U'))\r\n                {\r\n                    visited[i][j] = visited[i + 1][j] = 1;\r\n                    ans[i][j] = 'B';\r\n                    ans[i + 1][j] = 'W';\r\n                    bool flag = 0;\r\n                    int x = i;\r\n                    int y = j + 1;\r\n                    while (j < m && !flag)\r\n                    {\r\n                        if ((v[x][y] == 'U' && v[x + 1][y] == 'D') || (v[x][y] == 'D' && v[x + 1][y] == 'D'))\r\n                        {\r\n                            flag = 1;\r\n                            visited[x][y] = visited[x + 1][y] = 1;\r\n                            ans[x][y] = 'W';\r\n                            ans[x + 1][y] = 'B';\r\n                        }\r\n                        y++;\r\n                    }\r\n\r\n                    x = i + 2;\r\n                    y = j;\r\n                    while (j < m && !flag)\r\n                    {\r\n                        if ((v[x][y] == 'U' && v[x + 1][y] == 'D') || (v[x][y] == 'D' && v[x + 1][y] == 'D'))\r\n                        {\r\n                            flag = 1;\r\n                            visited[x][y] = visited[x + 1][y] = 1;\r\n                            ans[x][y] = 'W';\r\n                            ans[x + 1][y] = 'B';\r\n                        }\r\n                        x++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    forn(0, n)\r\n    {\r\n        for (int j = 0; j < m; j++)\r\n        {\r\n            cout << ans[i][j];\r\n        }\r\n        nl;\r\n    }\r\n}\r\nsigned main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n    int t = 1;\r\n    cin >> t;\r\n    while (t--)\r\n    {\r\n        solve();\r\n        // nl;\r\n    }\r\n    return 0;\r\n}\r\n\r\n/*\r\n..LR..\r\nULRU..\r\nDLRDUU\r\n..LRDD\r\n\r\n\r\n*/"
}