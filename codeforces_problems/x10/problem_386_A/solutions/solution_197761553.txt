{
    "id": 197761553,
    "contestId": 386,
    "creationTimeSeconds": 1679055747,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 386,
        "index": "A",
        "name": "Second-Price Auction",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 386,
        "members": [
            {
                "handle": "bkifhr8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1389906900
    },
    "programmingLanguage": "Java 8",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 0,
    "source": "import java.util.*;\npublic class Main{\n    static boolean isPrime(int n)\n    {\n\n        // Check if number is less than\n        // equal to 1\n        if (n <= 1)\n            return false;\n\n            // Check if number is 2\n        else if (n == 2)\n            return true;\n\n            // Check if n is a multiple of 2\n        else if (n % 2 == 0)\n            return false;\n\n        // If not, then just check the odds\n        for (int i = 3; i <= Math.sqrt(n); i += 2) {\n            if (n % i == 0)\n                return false;\n        }\n        return true;\n    }\n    public static void recur(Map<Integer,Integer> map){\n        boolean flag=false;\n        Iterator<Map.Entry<Integer,Integer>>  it;\n        it = map.entrySet().iterator();\n        while(it.hasNext())\n        {\n            int i=0;\n            if(i>4) {\n                flag=true;\n                int fr = map.get(i);\n                map.put(i/2,map.getOrDefault(i/2,0)+fr);\n                map.put(i-i/2,map.getOrDefault(i-i/2,0)+fr);\n\n            }\n\n        }\n            if(!flag)\n                return;\n            recur(map);\n        }\n\n    public static void main(String args[])\n    {\n        Scanner sc = new Scanner(System.in);\n       int n = sc.nextInt();\n       int arr[] = new int[n];\n       int arr2[] = new int[n];\n       for(int i=0;i<n;i++) {\n           arr[i] = sc.nextInt();\n           arr2[i] = arr[i];\n       }\n       Arrays.sort(arr2);\n       int max = arr2[n-1];\n       int max2  = arr2[n-2];\n        int imax = Arrays.binarySearch(arr,max);\n        System.out.println((1+imax)+\" \"+max2);\n\n\n    }\n}\n\t   \t \t\t \t    \t\t \t\t \t \t    \t\t \t"
}