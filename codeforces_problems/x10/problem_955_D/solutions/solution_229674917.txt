{
    "id": 229674917,
    "contestId": 955,
    "creationTimeSeconds": 1698230163,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 955,
        "index": "D",
        "name": "Scissors",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "brute force",
            "strings"
        ]
    },
    "author": {
        "contestId": 955,
        "members": [
            {
                "handle": "LGyxj"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1521822900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 77,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 23040000,
    "source": "// LUOGU_RID: 131548638\n#include <algorithm>\r\n#include <iostream>\r\n#include <cstring>\r\n#define xx first\r\n#define yy second\r\nusing namespace std;\r\nconst int N = 5e5 + 5, M = 20;\r\ntypedef pair<int, int> pii;\r\ntypedef long long ll;\r\nint n, m, k;\r\nchar s1[N], s[N];\r\nint pre[N], suf[N];\r\nint tr[N << 2], tag[N << 2];\r\nvoid cg(int nd, int l, int r, int L, int R) {\r\n\tif (tag[nd]) return;\r\n\tif (l <= L && r >= R) return void(tag[nd] = tr[nd] = 1);\r\n\tconst int mid = L + R >> 1;\r\n\tif (l <= mid) cg(nd << 1, l, r, L, mid);\r\n\tif (r > mid) cg(nd << 1 | 1, l, r, mid + 1, R);\r\n\ttr[nd] = tr[nd << 1] || tr[nd << 1 | 1];\r\n}\r\nbool get(int nd, int l, int r, int L, int R) {\r\n\tif (tag[nd]) return 1;\r\n\tif (l <= L && r >= R) return tr[nd];\r\n\tconst int mid = L + R >> 1; bool res = 0;\r\n\tif (l <= mid) res = get(nd << 1, l, r, L, mid);\r\n\tif (res) return 1;\r\n\tif (r > mid) res = get(nd << 1 | 1, l, r, mid + 1, R);\r\n\treturn res;\r\n}\r\nint fail[N];\r\nvoid get_fail() {\r\n\tfail[1] = 0;\r\n\tfor (int i = 2, j = 0; i <= m; ++ i) {\r\n\t\twhile (j && s1[i] != s1[j + 1]) j = fail[j];\r\n\t\tif (s1[i] == s1[j + 1]) ++ j;\r\n\t\tfail[i] = j;\r\n\t}\r\n}\r\nvoid get_match(int * suf) {\r\n\tfor (int i = 1, j = 0; i <= n; ++ i) {\r\n\t\twhile (j && s[i] != s1[j + 1]) j = fail[j];\r\n\t\tif (s[i] == s1[j + 1]) ++ j;\r\n\t\tif (i >= k && !suf[j]) suf[j] = i;\r\n\t\tif (j == m) {\r\n\t\t\tif (max(i, k) + k <= n && k <= m) {\r\n\t\t\t\tcout << \"Yes\\n\";\r\n\t\t\t\tcout << max(i, k) - k + 1 << \" \" << max(i, k) + 1 << '\\n';\r\n\t\t\t\texit(0);\r\n\t\t\t}\r\n\t\t\tif (min(n - k + 1, i) - k >= 1 && k >= m) {\r\n\t\t\t\tcout << \"Yes\\n\";\r\n\t\t\t\tcout << min(n - k + 1, i) - k << \" \" << min(n - k + 1, i) << '\\n';\r\n\t\t\t\texit(0);\r\n\t\t\t}\r\n\t\t\tj = fail[j];\r\n\t\t}\r\n\t}\r\n\tfor (int i = n; i; -- i) suf[i] && (suf[fail[i]] = suf[fail[i]] ? min(suf[fail[i]], suf[i]) : suf[i]);\r\n}\r\nsigned main() {\r\n\tios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n\tcin >> n >> m >> k >> s + 1 >> s1 + 1;\r\n\tget_fail(); get_match(suf);\r\n\treverse(s + 1, s + n + 1); reverse(s1 + 1, s1 + m + 1);\r\n\tget_fail(); get_match(pre);\r\n\treverse(pre + 1, pre + m + 1);\r\n\tfor (int i = 1; i <= m; ++ i) pre[i] = n - pre[i] + 1;\r\n\tfor (int i = 1; i < m; ++ i) {\r\n\t\tif (i <= k && m - i <= k && pre[i + 1] != n + 1 && suf[i] && suf[i] < pre[i + 1]) {\r\n\t\t\tcout << \"Yes\\n\";\r\n\t\t\tcout << suf[i] - k + 1 << \" \" << pre[i + 1] << '\\n';\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\tcout << \"No\\n\";\r\n\treturn 0;\r\n}"
}