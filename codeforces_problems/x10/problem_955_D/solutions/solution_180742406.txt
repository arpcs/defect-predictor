{
    "id": 180742406,
    "contestId": 955,
    "creationTimeSeconds": 1668340339,
    "relativeTimeSeconds": 3139,
    "problem": {
        "contestId": 955,
        "index": "D",
        "name": "Scissors",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "brute force",
            "strings"
        ]
    },
    "author": {
        "contestId": 955,
        "members": [
            {
                "handle": "orz_z"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1668337200
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 19,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 40755200,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n#define rep(i, l, r) for(int i = l; i <= r; ++i)\n#define kep(i, r, l) for(int i = r; i >= l; --i)\n//#define int long long\ntypedef long long ll;\n#define ha putchar(' ')\n#define he putchar('\\n')\ninline int read() {\n\tint x = 0, f = 1;\n\tchar c = getchar();\n\twhile (c < '0' || c > '9') {\n\t\tif (c == '-') f = -1;\n\t\tc = getchar();\n\t}\n\twhile (c >= '0' && c <= '9') x = (x << 3) + (x << 1) + (c ^ 48), c = getchar();\n\treturn x * f;\n}\n\ninline void write(int x) {\n\tif (x < 0) {\n\t\tputchar('-'), x = -x;\n\t}\n\tif (x > 9) write(x / 10);\n\tputchar(x % 10 + 48);\n}\n\nconst int _ = 5e5 + 5;\n\nint n, m, k, nxt[_], mn[_], mx[_];\n\nvector<int> d[_], p[_];\n\nchar s[_], t[_];\n\nvoid dfs(int u) {\n\tfor (int v : d[u]) dfs(v), mn[u] = min(mn[u], mn[v]);\n}\n\nvoid dfs2(int u) {\n\tfor (int v : p[u]) dfs(v), mx[u] = max(mx[u], mx[v]);\n}\n\nsigned main() {\n\tn = read(), m = read(), k = read();\n\tscanf(\"%s%s\", s + 1, t + 1);\n\tif (n < 2 * k) {\n\t\treturn puts(\"No\"), 0;\n\t}\n\tmemset(mn, 0x3f, sizeof mn);\n\tfor (int i = 2, j = 0; i <= m; ++i) {\n\t\twhile (j && t[i] != t[j + 1]) j = nxt[j];\n\t\tif (t[i] == t[j + 1]) j++;\n\t\tnxt[i] = j, d[j].push_back(i);\n\t}\n\tfor (int i = 1, j = 0; i <= n; ++i) {\n\t\twhile (j && s[i] != t[j + 1]) j = nxt[j];\n\t\tif (s[i] == t[j + 1]) j++;\n\t\twhile (j > k) j = nxt[j];\n\t\tif (j == m && (i <= k || i + k <= n)) {\n\t\t\tputs(\"Yes\");\n\t\t\tif (i >= k) printf(\"%d %d\", i - k + 1, i + 1);\n\t\t\telse printf(\"%d %d\", 1, k + 1);\n\t\t\treturn 0;\n\t\t}\n\t\tif (i >= k) mn[j] = min(mn[j], i);\n\t}\n\tdfs(0);\n\tmemset(nxt, 0, sizeof nxt);\n\tnxt[m] = m + 1, p[m + 1].push_back(m);\n\tfor (int i = m - 1, j = m + 1; i >= 1; --i) {\n\t\twhile (j != m + 1 && t[i] != t[j - 1]) j = nxt[j];\n\t\tif (t[i] == t[j - 1]) j--;\n\t\tnxt[i] = j, p[j].push_back(i);\n\t}\n\tfor (int i = n, j = m + 1; i >= 1; --i) {\n\t\twhile (j != m + 1 && s[i] != t[j - 1]) j = nxt[j];\n\t\tif (s[i] == t[j - 1]) j--;\n\t\twhile (m - j + 1 > k) j = nxt[j];\n\t\tif (j == 1 && (i >= n - k + 1 || i - k >= 1)) {\n\t\t\tputs(\"Yes\");\n\t\t\tif (i <= n - k + 1) printf(\"%d %d\", i - k, i);\n\t\t\telse printf(\"%d %d\", n - 2 * k + 1, n - k + 1);\n\t\t\treturn 0;\n\t\t}\n\t\tif (i <= n - k + 1) mx[j] = max(mx[j], i);\n\t}\n\tdfs2(m + 1);\n\trep(i, 0, m) if (mn[i] < mx[i + 1]) {\n\t\tputs(\"Yes\");\n\t\tprintf(\"%d %d\", mn[i] - k + 1, mx[i + 1]);\n\t\treturn 0;\n\t}\n\tputs(\"No\");\n}"
}