{
    "id": 195859489,
    "contestId": 1254,
    "creationTimeSeconds": 1677867196,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1254,
        "index": "B2",
        "name": "Send Boxes to Alice (Hard Version)",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 2100,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory",
            "ternary search",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1254,
        "members": [
            {
                "handle": "DilshodbekX"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1574174100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 90,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 7987200,
    "source": "#pragma GCC optimize(\"Ofast,O3,unroll-loops\")\r\n#pragma GCC target(\"avx2\")\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define SZ(s) ((int)s.size())\r\n#define all(x) (x).begin(), (x).end()\r\n#define lla(x) (x).rbegin(), (x).rend()\r\n#define bpc(x) __builtin_popcount(x)\r\n#define bpcll(x) __builtin_popcountll(x)\r\n#define MP make_pair\r\n//#define endl '\\n'\r\n\r\nmt19937 rng(chrono::high_resolution_clock::now().time_since_epoch().count());\r\n\r\ntypedef long long ll;\r\nconst int MOD = 998244353;\r\nconst int N = 150000 + 3e2;\r\n\r\nvoid solve(){\r\n    int n;\r\n    cin >> n;\r\n\r\n    vector<ll> a(n);\r\n    for (int i = 0; i < n; i++){\r\n        cin >> a[i];\r\n        if (i > 0) a[i] += a[i - 1];\r\n    }\r\n\r\n    ll sum = a[n - 1];\r\n\r\n    if (sum == 1){\r\n        cout << -1 << endl;\r\n        return;\r\n    }\r\n\r\n    vector<ll> divisors;\r\n    for (ll p = 2; p <= n; p++){\r\n        if (sum % p) continue;\r\n        divisors.push_back(p);\r\n        while (sum % p == 0) sum /= p;\r\n    }\r\n\r\n    if (sum > 1) divisors.push_back(sum);\r\n\r\n    ll ans = 1e18;\r\n\r\n    for (ll d : divisors){\r\n        ll res = 0;\r\n        for (int i = 0; i < n; i++){\r\n            res += min(a[i] % d, d - a[i] % d);\r\n        }\r\n        ans = min(ans, res);\r\n    }\r\n\r\n    cout << ans << endl;\r\n\r\n}\r\n\r\nint main(){\r\n    clock_t startTime = clock();\r\n    ios_base::sync_with_stdio(false);\r\n\r\n#ifdef LOCAL\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n\r\n    int test_cases = 1;\r\n    // cin >> test_cases;\r\n\r\n    for (int test = 1; test <= test_cases; test++){\r\n        // cout << (solve() ? \"YES\" : \"NO\") << endl;\r\n        solve();\r\n    }\r\n\r\n    cerr << \"Time: \" << int((double) (clock() - startTime) / CLOCKS_PER_SEC * 1000) << \" ms\" << endl;\r\n\r\n    return 0;\r\n}\r\n"
}