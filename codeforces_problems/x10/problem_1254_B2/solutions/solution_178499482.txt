{
    "id": 178499482,
    "contestId": 1254,
    "creationTimeSeconds": 1667125422,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1254,
        "index": "B2",
        "name": "Send Boxes to Alice (Hard Version)",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 2100,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "number theory",
            "ternary search",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1254,
        "members": [
            {
                "handle": "Potoccino."
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1574174100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define ll  long long\r\n#define ld long double\r\n#define ii pair <int,int>\r\n#define F first\r\n#define S second\r\n#define pb push_back\r\n#define IOS ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n#define all(x) x.begin(),x.end()\r\n#define rall(x) x.rbegin(),x.rend()\r\n#define int long long\r\nusing namespace std;\r\n\r\nconst int  INF = 1e14+5;\r\nconst int  mod = 1e9+7;\r\nconst int N = 2e5+5;\r\n\r\nvoid _clear(){\r\n\r\n}\r\n\r\nvector<long long> divisors(long long x){\r\n\tvector<long long>ret;\r\n\tfor(long long i =1 ; i*i <=x;i++){\r\n\t\tif(x%i==0){\r\n\t\t\tif(i != 1)ret.pb(i);\r\n\t\t\tif(i*i!=x)ret.pb(x/i);\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nvoid solve(){\r\n\tint n;\r\n\tcin >> n;\r\n\tvector<int>a(n);\r\n\tlong long sum = 0;\r\n\tfor(int i = 0 ; i < n ; i ++ ){\r\n\t\tcin >> a[i];\r\n\t\tsum += a[i];\r\n\t}\r\n\t\r\n\tif((n == 1 && a[0] == 1) || sum == 0 ){\r\n\t\tcout << -1 << '\\n';\r\n\t\treturn;\r\n\t}\r\n\t\r\n\t\r\n\tvector<long long> d = divisors(sum);\r\n\tlong long ans = 1e18;\r\n\tfor(long long  x : d){\r\n\t\tvector<pair<long long,long long>> extra;\r\n\t\t// first is index , second is extra;\r\n\t\tfor(int i = 0 ; i < n ; i ++ ){\r\n\t\t\tif(a[i] % x == 0)\r\n\t\t\t\tcontinue;\r\n\t\t\textra.emplace_back(i , a[i] % x);\r\n\t\t}\r\n\t\tlong long cnt = 0 ;\r\n\t\tfor(int i = 0 ; i < (int)extra.size() - 1 ; i ++ ){\r\n\t\t\tif(extra[i].S + extra[i+1].S == x){\r\n\t\t\t\tcnt += min(extra[i].S , extra[i+1].S) * (extra[i+1].F - extra[i].F);\r\n\t\t\t\ti ++ ;\r\n\t\t\t\tcontinue;\r\n\t\t\t}else if(extra[i].S + extra[i+1].S < x){\r\n\t\t\t\tcnt += extra[i].S * (extra[i+1].F - extra[i].F);\r\n\t\t\t\textra[i+1].S += extra[i].S;\r\n\t\t\t}else{\r\n\t\t\t\tif(x - extra[i].S <= x - extra[i+1].S){\r\n\t\t\t\t\t// move to rhe left\r\n\t\t\t\t\textra[i+1].S -= x - extra[i].S;\r\n\t\t\t\t\tcnt += (x - extra[i].S) * (extra[i+1].F - extra[i].F);\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// extra[i].S -= x - extra[i + 1].S;\r\n\t\t\t\t\tcnt += (x - extra[i + 1].S) * (extra[i+1].F - extra[i].F);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tans = min(ans , cnt);\r\n\t}\r\n\tcout << ans << '\\n';\r\n}\r\n\r\n\r\nint32_t main(){\r\n\tIOS;\r\n\tint t=1;\r\n\t// cin >> t;\r\n\tfor(int i = 1 ; i <= t ; i ++ ){\r\n\t\tsolve();\r\n\t\t_clear();\r\n\t}\r\n}\r\n"
}