{
    "contestId": 1368,
    "index": "F",
    "name": "Lamps on a Circle",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2600,
    "tags": [
        "games",
        "implementation",
        "interactive",
        "math"
    ],
    "desc": {
        "title": "F. Lamps on a Circle",
        "statement": "<p><span class=\"tex-font-style-it\">This is an interactive problem.</span></p><p>John and his imaginary friend play a game. There are $$$n$$$ lamps arranged in a circle. Lamps are numbered $$$1$$$ through $$$n$$$ in clockwise order, that is, lamps $$$i$$$ and $$$i + 1$$$ are adjacent for any $$$i = 1, \\ldots, n - 1$$$, and also lamps $$$n$$$ and $$$1$$$ are adjacent. Initially all lamps are turned off.</p><p>John and his friend take turns, with John moving first. On his turn John can choose to terminate the game, or to make a move. To make a move, John can choose any positive number $$$k$$$ and turn any $$$k$$$ lamps of his choosing on. In response to this move, John's friend will choose $$$k$$$ <span class=\"tex-font-style-bf\">consecutive</span> lamps and turn all of them off (the lamps in the range that were off before this move stay off). Note that the value of $$$k$$$ is the same as John's number on his last move. For example, if $$$n = 5$$$ and John have just turned three lamps on, John's friend may choose to turn off lamps $$$1, 2, 3$$$, or $$$2, 3, 4$$$, or $$$3, 4, 5$$$, or $$$4, 5, 1$$$, or $$$5, 1, 2$$$.</p><p>After this, John may choose to terminate or move again, and so on. However, John can not make more than $$$10^4$$$ moves.</p><p>John wants to maximize the number of lamps turned on at the end of the game, while his friend wants to minimize this number. Your task is to provide a strategy for John to achieve optimal result. Your program will play interactively for John against the jury's interactor program playing for John's friend.</p><p>Suppose there are $$$n$$$ lamps in the game. Let $$$R(n)$$$ be the number of turned on lamps at the end of the game if both players act optimally. Your program has to terminate the game with at least $$$R(n)$$$ turned on lamps within $$$10^4$$$ moves. Refer to Interaction section below for interaction details.</p><p>For technical reasons <span class=\"tex-font-style-bf\">hacks for this problem are disabled.</span></p>",
        "inputSpecification": null,
        "outputSpecification": null,
        "samples": [
            {
                "input": "\n3\n",
                "output": "\n\n0\n"
            },
            {
                "input": "\n4\n\n1",
                "output": "\n\n2 1 3\n\n0\n"
            }
        ],
        "note": "<p>When $$$n = 3$$$, any John's move can be reversed, thus $$$R(3) = 0$$$, and terminating the game immediately is correct.</p><p>$$$R(4) = 1$$$, and one strategy to achieve this result is shown in the second sample case.</p><p>Blank lines in sample interactions are for clarity and should not be printed.</p>"
    },
    "suggested_categories": [
        "game theory",
        "optimization",
        "strategy",
        "interactive problem",
        "combinatorial games",
        "decision making",
        "dynamic programming",
        "turn-based game",
        "mathematical strategy",
        "graph theory",
        "algorithmic strategy",
        "puzzle",
        "mathematics",
        "combinatorics",
        "sequential decision making",
        "game ai",
        "search algorithm",
        "simulation",
        "adversarial game",
        "logic game"
    ]
}