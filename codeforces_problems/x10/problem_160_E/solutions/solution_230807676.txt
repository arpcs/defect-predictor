{
    "id": 230807676,
    "contestId": 160,
    "creationTimeSeconds": 1698835254,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 160,
        "index": "E",
        "name": "Buses and People",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "sortings"
        ]
    },
    "author": {
        "contestId": 160,
        "members": [
            {
                "handle": "EasonLiang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1331046000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 49,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 8396800,
    "source": "// LUOGU_RID: 132791645\n#include <bits/stdc++.h>\r\n#define C const\r\n\r\nusing namespace std;\r\n\r\ntemplate<typename Tp>\r\ninline void chmin (Tp &x, C Tp &y) { if (x > y) x = y; }\r\ntemplate<typename Tp>\r\ninline void chmax (Tp &x, C Tp &y) { if (x < y) x = y; }\r\n\r\ntypedef double dbl;\r\ntypedef long long ll;\r\nconst int maxn = 1e5 + 20, maxm = 1e5 + 20, inf = 0x3f3f3f3f;\r\nint n, m, len, ans[maxm];\r\n\r\nvector<int> vec;\r\n\r\nstruct Qry {\r\n\tint l, r, t, id;\r\n\t\r\n\tinline void read (C int &idx) {\r\n\t\tscanf (\"%d%d%d\", &l, &r, &t);\r\n\t\tid = idx; vec.push_back (t);\r\n\t}\r\n} qry[maxn + maxm];\r\n\r\n#define ls (u << 1)\r\n#define rs (ls | 1)\r\n#define mid ((l + r) >> 1)\r\n\r\nint val[4 * (maxn + maxm)], idx[maxn + maxm];\r\n\r\nint query (C int &u, C int &l, C int &r, C int &p, C int &t) {\r\n\tif (val[u] < p || r < t) return -1;\r\n\tif (l == r) return idx[l];\r\n\tint res = query (ls, l, mid, p, t);\r\n\tif (~res) return res;\r\n\treturn query (rs, mid + 1, r, p, t);\r\n}\r\n\r\nvoid modify (C int &u, C int &l, C int &r, C int &p, C int &t, C int &id) {\r\n\tif (l == r) return void (p > val[u] && (val[u] = p, idx[l] = id));\r\n\tif (t <= mid) modify (ls, l, mid, p, t, id);\r\n\telse modify (rs, mid + 1, r, p, t, id);\r\n\tval[u] = max (val[ls], val[rs]);\r\n}\r\n\r\ninline int query (C int &p, C int &t) {\r\n\treturn query (1, 1, len, p, t);\r\n}\r\n\r\ninline void modify (C int &p, C int &t, C int &id) {\r\n\treturn modify (1, 1, len, p, t, id);\r\n}\r\n\r\n#undef ls\r\n#undef rs\r\n#undef mid\r\n\r\nint main () {\r\n\tscanf (\"%d%d\", &n, &m); vec.reserve (n + m);\r\n\t\r\n\tfor (int i = 1; i <= n + m; ++i) qry[i].read (i);\r\n\t\r\n\tsort (vec.begin (), vec.end ());\r\n\tlen = unique (vec.begin (), vec.end ()) - vec.begin ();\r\n\t\r\n\tfor (int i = 1; i <= n + m; ++i)\r\n\t\tqry[i].t = lower_bound (vec.begin (), vec.begin () + len, qry[i].t) - vec.begin () + 1;\r\n\t\r\n\tsort (qry + 1, qry + n + m + 1, [] (Qry fir, Qry sec) {\r\n\t\treturn fir.l != sec.l ? fir.l < sec.l : fir.id < sec.id;\r\n\t});\r\n\t\r\n\tfor (int i = 1; i <= n + m; ++i)\r\n\t\tif (qry[i].id <= n) modify (qry[i].r, qry[i].t, qry[i].id);\r\n\t\telse ans[qry[i].id - n] = query (qry[i].r, qry[i].t);\r\n\t\r\n\tfor (int i = 1; i <= m; ++i) printf (\"%d \", ans[i]);\r\n\r\n\treturn 0;\r\n}\r\n"
}