{
    "contestId": 1849,
    "index": "A",
    "name": "Morning Sandwich",
    "type": "PROGRAMMING",
    "rating": 800,
    "tags": [
        "implementation",
        "math"
    ],
    "desc": {
        "title": "A. Morning Sandwich",
        "statement": "<p>Monocarp always starts his morning with a good ol' sandwich. Sandwiches Monocarp makes always consist of bread, cheese and/or ham.</p><p>A sandwich always follows the formula: </p><ul> <li> a piece of bread </li><li> a slice of cheese or ham </li><li> a piece of bread </li><li> $$$\\dots$$$ </li><li> a slice of cheese or ham </li><li> a piece of bread </li></ul><p>So it always has bread on top and at the bottom, and it alternates between bread and filling, where filling is a slice of either cheese or ham. Each piece of bread and each slice of cheese or ham is called a layer.</p><p>Today Monocarp woke up and discovered that he has $$$b$$$ pieces of bread, $$$c$$$ slices of cheese and $$$h$$$ slices of ham. What is the maximum number of layers his morning sandwich can have?</p>",
        "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 1000$$$)\u00a0\u2014 the number of testcases.</p><p>Each testcase consists of three integers $$$b, c$$$ and $$$h$$$ ($$$2 \\le b \\le 100$$$; $$$1 \\le c, h \\le 100$$$)\u00a0\u2014 the number of pieces of bread, slices of cheese and slices of ham, respectively.</p>",
        "outputSpecification": "<p>For each testcase, print a single integer\u00a0\u2014 the maximum number of layers Monocarp's morning sandwich can have.</p>",
        "samples": [
            {
                "input": "<div class=\"test-example-line test-example-line-even test-example-line-0\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 1 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">10 1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 7 8</div>",
                "output": "\n3\n7\n5\n"
            }
        ],
        "note": "<p>In the first testcase, Monocarp can arrange a sandwich with three layers: either a piece of bread, a slice of cheese and another piece of bread, or a piece of bread, a slice of ham and another piece of bread.</p><p>In the second testcase, Monocarp has a lot of bread, but not too much filling. He can arrange a sandwich with four pieces of bread, one slice of cheese and two slices of ham.</p><p>In the third testcase, it's the opposite\u00a0\u2014 Monocarp has a lot of filling, but not too much bread. He can arrange a sandwich with three pieces of bread and two slices of cheese, for example.</p>"
    },
    "suggested_categories": [
        "algorithms",
        "mathematics",
        "combinatorics",
        "data structures",
        "dynamic programming",
        "greedy algorithms",
        "number theory",
        "simulation",
        "string algorithms",
        "enumeration",
        "counting",
        "iterative problem solving",
        "conditional logic",
        "optimization",
        "problem solving",
        "logical thinking",
        "pattern matching",
        "sequence analysis",
        "mathematical modeling",
        "mathematical logic"
    ]
}