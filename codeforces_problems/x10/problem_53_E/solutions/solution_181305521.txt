{
    "id": 181305521,
    "contestId": 53,
    "creationTimeSeconds": 1668686649,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 53,
        "index": "E",
        "name": "Dead Ends",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2500,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    "author": {
        "contestId": 53,
        "members": [
            {
                "handle": "That_Level_Again"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1294329600
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#define pb push_back\r\n\r\nusing namespace std;\r\nconst int MAX_N = 12, MASK = (1>>10) + 50;\r\nvector<int> adj[MAX_N];\r\nint dp[MASK][MASK];\r\n\r\nint main()\r\n{\r\n    int n, m, k;\r\n    cin >> n >> m >> k;\r\n    int u, v;\r\n    for (int i = 0; i < m; i ++) {\r\n        cin >> u >> v;\r\n        adj[u].pb(v);\r\n        adj[v].pb(u);\r\n    }\r\n    for (int i = 1; i < 11; i ++) {\r\n        for (int u: adj[i]) {\r\n            dp[(1<<(i - 1)) + (1<<(u - 1))][(1<<(i - 1)) + (1<<(u - 1))] = 1;\r\n        }\r\n    }\r\n    long long ans = 0;\r\n    int pos;\r\n    for (int i = 0; i < (1<<n); i ++) {\r\n        for (int j = 0; j < (1<<n); j ++) {\r\n            if ((i | j) == i && dp[i][j] == 0 && __builtin_popcount(j) > 1) {\r\n                pos = __builtin_ctz(j);\r\n                for (int u: adj[pos + 1]) {\r\n                    if (((i>>(u - 1)) & 1) && !((j>>(u - 1)) & 1)) {\r\n                        dp[i][j] += dp[i - (1<<pos)][j - (1<<pos)] + dp[i - (1<<pos)][j - (1<<pos) + (1<<(u - 1))];\r\n                    }\r\n                }\r\n                if (i == (1<<n) - 1 && __builtin_popcount(j) == k) {\r\n                    ans += dp[i][j];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    cout << ans << '\\n';\r\n}\r\n"
}