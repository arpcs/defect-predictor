{
    "id": 224985700,
    "contestId": 1105,
    "creationTimeSeconds": 1695576940,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1105,
        "index": "B",
        "name": "Zuhair and Strings",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1100,
        "tags": [
            "brute force",
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 1105,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1547985900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 37,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 512000,
    "source": "#include <iostream>\n#include<bits/stdc++.h>\n\ntypedef long long int ll;\n\nusing namespace std;\n\n\n\n\nint main()\n{\n\n   ll n,k,p1=0,p2=0,cnt=0,level=0;\n   cin>>n>>k;\n\n   string s;\n   cin>>s;\n   vector<int> vec;\n\n   char c='a';\n\n\n\n\n   for(int i=0;i<26;i++)\n   {\n         cnt=0,level=0;\n         for(ll i=0;i<n;i++)\n            {\n                        if(s[i]==c)\n                        {\n                              cnt++;\n                        }\n\n\n\n\n\n                        else\n                        {\n                            if(cnt>=k)\n                                level=level+ (cnt/k);\n\n\n\n                            cnt=0;\n\n                        }\n\n\n                        if(i==n-1 && s[i]==c)\n                        {\n                            if(cnt>=k)\n                                level=level+ (cnt/k);\n\n\n\n                            cnt=0;\n                        }\n\n           }\n\n\n           vec.push_back(level);\n\n           c++;\n\n   }\n\n\n\n\n    sort(vec.begin(), vec.end(), greater<int>());\n\n    cout<<vec[0]<<endl;\n\n\n\n\n\n    return 0;\n}\n\n\t\t\t \t \t   \t\t \t \t \t\t \t\t \t   \t\t"
}