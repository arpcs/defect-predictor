{
    "contestId": 690,
    "index": "F1",
    "name": "Tree of Life (easy)",
    "type": "PROGRAMMING",
    "rating": 1300,
    "tags": [],
    "desc": {
        "title": "F1. Tree of Life (easy)",
        "statement": "<p>Heidi has finally found the mythical Tree of Life \u2013 a legendary combinatorial structure which is said to contain a prophecy crucially needed to defeat the undead armies.</p><p>On the surface, the Tree of Life is just a regular undirected tree well-known from computer science. This means that it is a collection of <span class=\"tex-span\"><i>n</i></span> points (called vertices), some of which are connected using <span class=\"tex-span\"><i>n</i>\u2009-\u20091</span> line segments (edges) so that each pair of vertices is connected by a <span class=\"tex-font-style-it\">path</span> (a sequence of one or more edges).</p><p>To decipher the prophecy, Heidi needs to perform a number of steps. The first is counting the number of <span class=\"tex-font-style-it\">lifelines</span> in the tree \u2013 these are paths of length <span class=\"tex-span\">2</span>, i.e., consisting of two edges. Help her!</p>",
        "inputSpecification": "<p>The first line of the input contains a single integer <span class=\"tex-span\"><i>n</i></span> \u2013 the number of vertices in the tree (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u200910000</span>). The vertices are labeled with the numbers from 1 to <span class=\"tex-span\"><i>n</i></span>. Then <span class=\"tex-span\"><i>n</i>\u2009-\u20091</span> lines follow, each describing one edge using two space-separated numbers <span class=\"tex-span\"><i>a</i>\u2002<i>b</i></span> \u2013 the labels of the vertices connected by the edge (<span class=\"tex-span\">1\u2009\u2264\u2009<i>a</i>\u2009&lt;\u2009<i>b</i>\u2009\u2264\u2009<i>n</i></span>). It is guaranteed that the input represents a tree.</p>",
        "outputSpecification": "<p>Print one integer \u2013 the number of lifelines in the tree.</p>",
        "samples": [
            {
                "input": "4<br/>1 2<br/>1 3<br/>1 4<br/>",
                "output": "3"
            },
            {
                "input": "5<br/>1 2<br/>2 3<br/>3 4<br/>3 5<br/>",
                "output": "4"
            }
        ],
        "note": "<p>In the second sample, there are four lifelines: paths between vertices <span class=\"tex-span\">1</span> and <span class=\"tex-span\">3</span>, <span class=\"tex-span\">2</span> and <span class=\"tex-span\">4</span>, <span class=\"tex-span\">2</span> and <span class=\"tex-span\">5</span>, and <span class=\"tex-span\">4</span> and <span class=\"tex-span\">5</span>.</p>"
    },
    "suggested_categories": [
        "combinatorial structures",
        "graph theory",
        "tree data structures",
        "pathfinding algorithms",
        "network analysis",
        "undirected graphs",
        "prophecy deciphering",
        "algorithmic puzzles",
        "mythical quests",
        "undead armies",
        "legendary trees",
        "vertex labeling",
        "edge representation",
        "integer sequences",
        "ancient prophecies",
        "fantasy adventures",
        "graph connectivity",
        "algorithmic challenges",
        "mythical creatures",
        "tree propagation"
    ]
}