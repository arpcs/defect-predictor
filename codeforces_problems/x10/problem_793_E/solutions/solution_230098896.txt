{
    "id": 230098896,
    "contestId": 793,
    "creationTimeSeconds": 1698459544,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 793,
        "index": "E",
        "name": "Problem of offices",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2900,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 793,
        "members": [
            {
                "handle": "locsey"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1492965900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 204800,
    "source": "// LUOGU_RID: 131971757\n#include <bits/stdc++.h>\r\n#define fi first \r\n#define se second \r\n\r\nusing std :: cin;\r\nusing std :: min; \r\nusing std :: max; \r\nusing std :: cout; \r\nusing std :: vector; \r\n\r\nconstexpr int M = 5005; \r\nconstexpr int INF = 0x3f3f3f3f; \r\n\r\ntypedef long long ll; \r\ntypedef unsigned long long ull;\r\ntypedef __uint128_t LLL; \r\ntypedef double db; \r\ntypedef unsigned int ui; \r\ntypedef std :: pair < int, int > pii; \r\n\r\n//char buf[1 << 23], *p1 = buf, *p2 = buf, obuf[1 << 23], *O = obuf;\r\n//#define getchar() (p1 == p2) && (p2 = (p1 = buf) + fread(buf, 1, 1 << 21, stdin), p1 == p2)? EOF : *p1++\r\n\r\ninline int read() { \r\n\tint f = 1, s = 0; char ch = getchar(); \r\n\twhile(!isdigit(ch)) (ch == '-') && (f = -1), ch = getchar(); \r\n\twhile(isdigit(ch)) s = s * 10 + ch - '0', ch = getchar(); \r\n\treturn f * s; \r\n}\r\n\r\nnamespace Solver {\r\n\tint n, a, b, c, d, sz[M], tot; \r\n\tvector < int > adj[M]; int prt[M]; \r\n\tstd :: bitset < M > dp, cur;\r\n\tinline void dfs(int x, int fa) {\r\n\t    prt[x] = fa; if(!adj[x].size()) return sz[x] = 1, ++tot, void(); \r\n\t    for(int &y : adj[x]) dfs(y, x), sz[x] += sz[y]; \r\n\t}\r\n    int mk[M]; \r\n    inline int get(int x) {while(prt[x] ^ 1) x = prt[x]; return x;}\r\n    inline bool chk(int a, int b, int c) {\r\n    \tint s = sz[get(c)]; if(tot / 2 <= s) return 0;\r\n    \tdp = cur; \r\n    \twhile(prt[a] ^ 1) {\r\n    \t\tint f = prt[a];\r\n    \t\tfor(int &x : adj[f]) if(x ^ a) dp |= dp << sz[x];\r\n    \t\ta = f; \r\n\t\t}\r\n\t\twhile(prt[b] ^ 1) {\r\n\t\t\tint f = prt[b]; \r\n\t\t\tfor(int &x : adj[f]) if(x ^ b) dp |= dp << sz[x];\r\n\t\t\tb = f; \r\n\t\t}\r\n\t\treturn dp[tot / 2 - s - 1]; \r\n\t}\r\n    inline bool chk(int a, int b, int c, int d) {\r\n    \treturn chk(a, c, b) && chk(b, d, c); \r\n\t}\r\n\tinline void mian() {\r\n\t\tn = read(), a = read(), b = read(), c = read(), d = read();\r\n\t\tfor(int i = 2, x; i <= n; ++i) x = read(), adj[x].push_back(i); \r\n\t\tdfs(1, 0); if(tot & 1) return puts(\"NO\"), void(); cur[0] = 1;\r\n\t\tmk[get(a)] = mk[get(b)] = mk[get(c)] = mk[get(d)] = 1; \r\n\t\tputs(chk(a, c, b, d) || chk(a, d, b, c) ? \"YES\" : \"NO\");\r\n\t}\r\n}\r\n\r\nint main() \r\n{\r\n\tSolver :: mian(); \r\n\treturn 0; \r\n}   "
}