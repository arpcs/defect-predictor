{
    "id": 216794634,
    "contestId": 793,
    "creationTimeSeconds": 1690952607,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 793,
        "index": "E",
        "name": "Problem of offices",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2900,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 793,
        "members": [
            {
                "handle": "gaoyucheng"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1492965900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 44,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 204800,
    "source": "// LUOGU_RID: 118582163\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=5010;\r\nint n,a,b,c,d,fa[N],sz[N];\r\nvector<int> G[N];\r\nbitset<N> f,ff;\r\nbool check(int a,int b,int c){\r\n    f=ff;\r\n    if(sz[1]/2-2<0) return 0;\r\n    while(fa[a]!=1){\r\n        int na=a;a=fa[a];\r\n        for(int x:G[a])\r\n            if(x!=na)\r\n                f|=(f<<sz[x]);\r\n    }\r\n    a=c;\r\n    while(fa[a]!=1){\r\n        int na=a;a=fa[a];\r\n        for(int x:G[a])\r\n            if(x!=na)\r\n                f|=(f<<sz[x]);\r\n    }\r\n    return f[sz[1]/2-2];\r\n}\r\nint main(){\r\n    scanf(\"%d%d%d%d%d\",&n,&a,&b,&c,&d);\r\n    for(int i=2;i<=n;++i) scanf(\"%d\",fa+i),G[fa[i]].push_back(i);\r\n    for(int i=n;i;--i){\r\n        if(G[i].empty()) sz[i]=1;\r\n        sz[fa[i]]+=sz[i];\r\n    }\r\n    if(sz[1]&1){puts(\"NO\");return 0;}\r\n    ff.set(0);\r\n    for(int i:G[1]) \r\n        if(i!=a&&i!=b&&i!=c&&i!=d) \r\n            ff|=(ff<<sz[i]);\r\n    puts(((check(a,b,c)&&(check(c,d,b)))||(check(a,b,d)&&check(d,c,b)))?\"YES\":\"NO\");\r\n    return 0;\r\n}"
}