{
    "id": 228736196,
    "contestId": 793,
    "creationTimeSeconds": 1697677068,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 793,
        "index": "E",
        "name": "Problem of offices",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2900,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 793,
        "members": [
            {
                "handle": "CN__james1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1492965900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 44,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 307200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std; \r\n\r\nint n, tot, a, b, c, d; \r\nint fa[5005], siz[5005], tag[5005]; \r\nvector<int> G[5005]; \r\ninline int get(int x) { while (fa[x] != 1) x = fa[x]; return x; }\r\n\r\nbitset<5005> F, f; \r\ninline bool chk(int a, int b, int c) {\r\n    if (tot / 2 - 1 - siz[c] < 0) return 0; \r\n    f = F; \r\n    while (fa[a] != 1) {\r\n        int be = a; a = fa[a]; \r\n        for (int x : G[a]) if (x != a) f |= f << siz[x]; \r\n    }\r\n    while (fa[b] != 1) {\r\n        int be = b; b = fa[b]; \r\n        for (int x : G[b]) if (x != b) f |= f << siz[x]; \r\n    }\r\n    return f[tot / 2 - 1 - siz[c]]; \r\n}\r\ninline bool check(int a, int c, int b, int d) {\r\n    return chk(a, b, c) && chk(c, d, b); \r\n}\r\n\r\nint main(void) {\r\n    ios::sync_with_stdio(0); \r\n    cin >> n >> a >> b >> c >> d; \r\n    for (int i = 2; i <= n; ++i) cin >> fa[i], G[fa[i]].emplace_back(i); \r\n    for (int i = n; i >= 1; --i) {\r\n        if (G[i].empty()) ++tot, siz[i] = 1; \r\n        siz[fa[i]] += siz[i]; \r\n    }\r\n    if (tot & 1) return cout << \"NO\\n\", 0; \r\n    tag[get(a)] = tag[get(b)] = tag[get(c)] = tag[get(d)] = 1; \r\n    F[0] = 1; \r\n    for (int x : G[1]) if (!tag[x]) F |= F << siz[x]; \r\n    if (check(a, c, b, d) || check(a, d, b, c)) cout << \"YES\\n\"; \r\n    else cout << \"NO\\n\"; \r\n    return 0; \r\n}"
}