{
    "id": 183547093,
    "contestId": 793,
    "creationTimeSeconds": 1669951263,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 793,
        "index": "E",
        "name": "Problem of offices",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2900,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 793,
        "members": [
            {
                "handle": "pzrpzr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1492965900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 44,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 204800,
    "source": "// LUOGU_RID: 96276030\n#include<bits/stdc++.h>\r\n#define N 10000\r\nusing namespace std;\r\nint n,a,b,c,d,fa[N],head[N],bz[N],m,\r\nnxt[N],to[N],tot,siz[N],tag,sa,sb,sc,sd;\r\nbitset<N>f;\r\nvoid link(int x,int y){nxt[++tot]=head[x];head[x]=tot;to[tot]=y;}\r\nvoid dg(int k){\r\n\tif(!head[k])siz[k]=1;\r\n\tif(k==a)bz[k]=1;if(k==b)bz[k]=2;\r\n\tif(k==c)bz[k]=3;if(k==d)bz[k]=4;\r\n\tfor(int i=head[k];i;i=nxt[i]){\r\n\t \tdg(to[i]);siz[k]+=siz[to[i]];bz[k]|=bz[to[i]];\r\n\t}\r\n}\r\nvoid dfs(int k){\r\n\tfor(int i=head[k];i;i=nxt[i])\r\n\tif(!bz[to[i]])f|=(f<<siz[to[i]]);\r\n\tif(fa[k]!=1&&fa[k]!=0)dfs(fa[k]); \r\n}\r\nint main(){\r\n\tscanf(\"%d\",&n);\r\n\tscanf(\"%d%d%d%d\",&a,&b,&c,&d);\r\n\tfor(int i=2;i<=n;i++){\r\n\t\tscanf(\"%d\",&fa[i]);link(fa[i],i);\r\n\t}dg(1);if(siz[1]&1){printf(\"NO\");return 0;}\r\n\tm=siz[1]/2-1;\r\n\tfor(int i=head[1];i;i=nxt[i]){\r\n\t\tif(siz[to[i]]>m){printf(\"NO\");return 0;}\r\n\t\tif(bz[to[i]]==1)sa=siz[to[i]];if(bz[to[i]]==2)sb=siz[to[i]];\r\n\t\tif(bz[to[i]]==3)sc=siz[to[i]];if(bz[to[i]]==4)sd=siz[to[i]];\r\n\t}tag=1;\r\n\tf[0]=1;dfs(a);dfs(b);dfs(1);\r\n\tif(!f[m-sc]&&!f[m-sd])tag=0;\r\n\tf.reset();f[0]=1;dfs(c);dfs(d);dfs(1);\r\n\tif(!f[m-sa]&&!f[m-sb])tag=0;\r\n\tif(tag)printf(\"YES\");\r\n\telse printf(\"NO\");\r\n}"
}