{
    "id": 220414167,
    "contestId": 682,
    "creationTimeSeconds": 1692983463,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 682,
        "index": "C",
        "name": "Alyona and the Tree",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 682,
        "members": [
            {
                "handle": "aditya_04"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1466181300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 106,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 18227200,
    "source": "//#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long int\r\n#include <iostream>\r\n#include<vector>\r\n#include<map>\r\nvoid preprocessing(ll node,ll par,vector<pair<ll,ll>> *adj,vector<ll> &subTree){\r\n    ll tem = 1;\r\n    for(auto j: adj[node]){\r\n        ll child = j.first;\r\n        ll wt = j.second;\r\n        if(child==par) continue;\r\n        preprocessing(child,node,adj,subTree);\r\n        tem += subTree[child];\r\n    }\r\n    subTree[node] = tem;\r\n}\r\nvoid dfs(ll node,ll par,ll dist,vector<ll> &nums,vector<pair<ll,ll>> *adj,vector<ll>&subTree,ll &count){\r\n    if(dist>nums[node]) {count+=subTree[node];\r\n    return;}\r\n    for(auto j: adj[node]){\r\n        ll child = j.first;\r\n        ll wt = j.second;\r\n        if(child==par) continue;\r\n        dfs(child,node,max(dist+wt,(ll)0),nums,adj,subTree,count);\r\n    }\r\n}\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n    ll t;\r\n    //  cin >> t;\r\n    t = 1;\r\n    while (t--) {\r\n        ll k,n;\r\n        cin >>n;\r\n       vector<pair<ll,ll>> adj[n+1];\r\n      vector<ll> nums(n+1,0);\r\n      for(ll i=1;i<=n;i++) cin>>nums[i];\r\n       for(ll i=0;i<n-1;i++){\r\n           ll x,y,wt;\r\n           cin>>y>>wt;\r\n           x = i+2;\r\n           adj[x].push_back({y,wt});\r\n           adj[y].push_back({x,wt});\r\n       }\r\n       ll count=0;\r\n       vector<ll> subTree(n+1,0);\r\n       preprocessing(1,0,adj,subTree);\r\n       dfs(1,0,0,nums,adj,subTree,count);\r\n       cout<<count<<endl;\r\n    }\r\n    return 0;\r\n}"
}