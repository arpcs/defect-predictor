{
    "id": 220357350,
    "contestId": 682,
    "creationTimeSeconds": 1692955234,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 682,
        "index": "C",
        "name": "Alyona and the Tree",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 682,
        "members": [
            {
                "handle": "suprend"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1466181300
    },
    "programmingLanguage": "MS C++ 2017",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 106,
    "timeConsumedMillis": 312,
    "memoryConsumedBytes": 9625600,
    "source": "\ufeff#include <iostream>\r\n#include <fstream>\r\n#include <cmath>\r\n#include <iomanip>\r\n#include <vector>\r\n#include <string>\r\n#include <algorithm>\r\n#include <map>\r\n#include <cstring>\r\n#include <deque>\r\n#include <queue>\r\n#include <stack>\r\n#include <cctype>\r\n#include <set>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n\r\nint dfs(vector<vector<pair<int, int>>>& g, vector<int>& a, ll dist, ll minim, int v, int p) {\r\n    if (dist - a[v] > minim) {\r\n        return 0;\r\n    }\r\n\r\n    int sum = 1;\r\n    for (pair<int, int> u : g[v]) {\r\n        if (u.first != p) {\r\n            sum += dfs(g, a, dist + u.second, min(minim, dist), u.first, v);\r\n        }\r\n    }\r\n    return sum;\r\n}\r\n\r\nint main() {\r\n    int t;\r\n    t = 1;\r\n    for (t; t > 0; t--) {\r\n        int n;\r\n        cin >> n;\r\n        vector<int> a(n + 1);\r\n        for (int i = 1; i <= n; i++) {\r\n            cin >> a[i];\r\n        }\r\n        vector<vector<pair<int, int>>> g(n + 1);\r\n        for (int i = 1; i <= n - 1; i++) {\r\n            int p, c;\r\n            cin >> p >> c;\r\n            g[i + 1].push_back({p, c});\r\n            g[p].push_back({i + 1, c});\r\n        }\r\n\r\n        cout << n - dfs(g, a, 0, 0, 1, 0);\r\n    }\r\n}"
}