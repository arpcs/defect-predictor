{
    "id": 219649578,
    "contestId": 682,
    "creationTimeSeconds": 1692520664,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 682,
        "index": "C",
        "name": "Alyona and the Tree",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 682,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1466181300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 106,
    "timeConsumedMillis": 296,
    "memoryConsumedBytes": 20070400,
    "source": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\nusing namespace std;\ntypedef long long LL;\nconst int maxn = 1e5 + 10;\nint n, a[maxn];\nstruct Edge {int v, w;};\nvector<Edge> G[maxn];\nLL f[maxn];\nint siz[maxn], ans;\nvoid solve_1(int u, int fa, LL pre_max) {\n    f[u] = pre_max;\n    int ret = 1;\n    for(int i = 0; i < G[u].size(); ++i) {\n        int v = G[u][i].v, w = G[u][i].w;\n        if(v == fa) continue;\n        solve_1(v, u, max((LL)w, pre_max + w));\n        ret += siz[v];\n    }\n    siz[u] = ret;\n    return;\n}\nvoid solve_2(int u, int fa) {\n    if(f[u] > a[u]) {\n        ans += siz[u];\n        return;\n    }\n    for(int i = 0; i < G[u].size(); ++i) {\n        int v = G[u][i].v, w = G[u][i].w;\n        if(v == fa) continue;\n        solve_2(v, u);\n    }\n}\nint main() {\n    scanf(\"%d\", &n);\n    for(int i = 1; i <= n; ++i) scanf(\"%d\", a + i);\n    for(int i = 2; i <= n; ++i) {\n        int v, w; scanf(\"%d%d\", &v, &w);\n        G[i].push_back((Edge){v, w});\n        G[v].push_back((Edge){i, w});\n    }\n    solve_1(1, 0, 0);\n    solve_2(1, 0);\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n\t\t \t\t\t  \t\t\t\t  \t \t\t \t  \t\t \t\t\t"
}