{
    "id": 228841149,
    "contestId": 682,
    "creationTimeSeconds": 1697738054,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 682,
        "index": "C",
        "name": "Alyona and the Tree",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 682,
        "members": [
            {
                "handle": "rodiz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1466181300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 106,
    "timeConsumedMillis": 514,
    "memoryConsumedBytes": 21606400,
    "source": "#include<iostream>;\r\n#include<vector>;\r\n#include<string>;\r\n#include<algorithm>;\r\nusing namespace std;\r\n\r\nconst int INF = 100000000;\r\n\r\nint ans = 0;\r\n\r\n\r\nvoid dfs1(vector<vector<pair<int,int>>>& graph, vector<int>&dist,vector<int>&pos,vector<int>&cnt, int v, int p = -1) {\r\n\tfor (int i = 0; i != graph[v].size(); ++i) {\r\n\t\tint to = graph[v][i].first, len = graph[v][i].second;\r\n\t\tif (to != p) {\r\n\t\t\tif (len > dist[v] + len) {\r\n\t\t\t\tdist[to] = len;\r\n\t\t\t\tpos[to] = v;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdist[to] = dist[v] + len;\r\n\t\t\t\tpos[to] = pos[v];\r\n\t\t\t}\r\n\t\t\tdfs1(graph, dist, pos, cnt, to, v);\r\n\t\t\tcnt[v] += cnt[to];\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvoid dfs2(vector<vector<pair<int, int>>>& graph, vector<int>& a, vector<int>&pos,vector<int>&dist, vector<int>&cnt, int v, int p = -1) {\r\n\tif (dist[v] > a[v]) {\r\n\t\tans += cnt[v];\r\n\t}\r\n\telse {\r\n\t\tfor (int i = 0; i != graph[v].size(); ++i) {\r\n\t\t\tint to = graph[v][i].first;\r\n\t\t\tif (to != p) {\r\n\t\t\t\tdfs2(graph, a, pos, dist, cnt, to, v);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tint n; cin >> n;\r\n\tvector<int>a(n);\r\n\tfor (int i = 0; i != n; ++i) {\r\n\t\tcin >> a[i];\r\n\t}\r\n\tvector<vector<pair<int,int>>>graph(n);\r\n\tfor (int i = 0; i != n - 1; ++i) {\r\n\t\tint p, c; cin >> p >> c;\r\n\t\tgraph[i + 1].push_back({ p - 1,c });\r\n\t\tgraph[p - 1].push_back({ i + 1,c });\r\n\t}\r\n\tvector<int>dist(n, 0),pos(n,-1),cnt(n,1);\r\n\tdfs1(graph, dist, pos, cnt,0);\r\n\tdfs2(graph, a, pos, dist, cnt, 0);\r\n\tcout << ans;\r\n\treturn 0;\r\n}"
}