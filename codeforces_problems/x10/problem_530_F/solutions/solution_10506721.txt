{
    "id": 10506721,
    "contestId": 530,
    "creationTimeSeconds": 1427567703,
    "relativeTimeSeconds": 5703,
    "problem": {
        "contestId": 530,
        "index": "F",
        "name": "Jumping frogs",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "*special"
        ]
    },
    "author": {
        "contestId": 530,
        "members": [
            {
                "handle": "TDiva"
            },
            {
                "handle": "taras.klaskovsky"
            }
        ],
        "participantType": "CONTESTANT",
        "teamId": 10854,
        "teamName": "\u0416\u0435\u043b\u0430\u0442\u0438\u043d\u043e\u0432\u044b\u0439 \u041e\u043a\u0442\u0430\u044d\u0434\u0440",
        "ghost": false,
        "startTimeSeconds": 1427562000
    },
    "programmingLanguage": "Picat",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 20,
    "timeConsumedMillis": 1731,
    "memoryConsumedBytes": 0,
    "source": "main =>\r\n  N = read_int(),\r\n  X = [0],\r\n  Y = [0],\r\n  Visited = [true],\r\n  Distance = 0,\r\n  foreach (Q in 1..N)\r\n    X := X ++ [read_int()],\r\n    Y := Y ++ [read_int()],\r\n    Visited := Visited ++ [false]\r\n  end,\r\n  foreach (Size in 1..10)\r\n    foreach (Q in 2..length(Visited))\r\n      Visited[Q] := false\r\n    end,\r\n    L = length(Visited),\r\n    \r\n    Visited[1] := true,\r\n    foreach (Iteration in 1..L)\r\n      foreach (I in 1..L)\r\n    foreach (J in 1..L)\r\n      if (Visited[I] == true) then\r\n        if (abs(X[I] - X[J]) = Size) then\r\n          if (Y[I] = Y[J]) then\r\n        Visited[J] := true,\r\n        Distance := max(Distance, abs(X[I]) + abs(Y[I]))\r\n          end\r\n        end,\r\n        \r\n        \r\n        if (abs(Y[I] - Y[J]) = Size) then\r\n          if (X[I] = X[J]) then\r\n        Visited[J] := true,\r\n        Distance := max(Distance, abs(X[I]) + abs(Y[I]))\r\n          end\r\n        end\r\n      end\r\n    end\r\n      end\r\n    end\r\n  end,\r\n  println(Distance)."
}