{
    "id": 134161739,
    "contestId": 850,
    "creationTimeSeconds": 1635901437,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 850,
        "index": "B",
        "name": "Arpa and a list of numbers",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2100,
        "tags": [
            "implementation",
            "number theory"
        ]
    },
    "author": {
        "contestId": 850,
        "members": [
            {
                "handle": "zuoyifan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504535700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 153,
    "timeConsumedMillis": 951,
    "memoryConsumedBytes": 27136000,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n\r\nll prm[100005], b[1000005], q, p, n, res = 0x3f3f3f3f3f3f3f3f, sum[1000005], mx;\r\nll a[1000005];\r\nbool vis[1000005];\r\n\r\nvoid init()\r\n{\r\n\tfor (ll i = 2; i <= 1000000; i++)\r\n\t{\r\n\t\tif (!vis[i]) prm[++prm[0]] = i;\r\n\t\tfor (ll j = 1; j <= prm[0] && i * prm[j] <= 1000000; j++)\r\n\t\t{\r\n\t\t\tvis[i * prm[j]] = 1;\r\n\t\t\tif (i % prm[j] == 0) break;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nll check(ll R, ll x)\r\n{\r\n\tll pos = b[x];\r\n\treturn (R - pos) * p;\r\n}\r\n\r\nsigned main()\r\n{\r\n\tinit();\r\n\tscanf(\"%lld%lld%lld\", &n, &q, &p);\r\n\tfor (ll i = 1; i <= n; i++) scanf(\"%lld\", &b[i]), ++a[b[i]], mx = max(mx, b[i]);\r\n\tsort(b + 1, b + n + 1);\r\n\tfor (ll i = 1; i <= mx; i++) sum[i] = sum[i - 1] + a[i] * i;\r\n\tfor (ll qq = 1; qq <= prm[0]; qq++)\r\n\t{\r\n\t\tll i = prm[qq], tmp = 0;\r\n\t\tfor (ll j = 0; i * j <= mx; j++)\r\n\t\t{\r\n\t\t\tll l = upper_bound(b + 1, b + n + 1, i * j) - b;\r\n\t\t\tll r = upper_bound(b + 1, b + n + 1, i * (j + 1) - 1) - b - 1;\r\n//\t\t\twhile (b[l] <= i * j) ++l;\r\n//\t\t\twhile (b[l - 1] > i * j) --l;\r\n//\t\t\twhile (b[r] >= i * (j + 1)) --r;\r\n//\t\t\twhile (b[r + 1] < i * (j + 1)) ++r;\r\n\t\t\tll L = l, R = r, mid, ans = L - 1;\r\n\t\t\tif (L > R) continue;\r\n\t\t\twhile (l <= r)\r\n\t\t\t{\r\n\t\t\t\tll now = check(i * (j + 1), mid = l + r >> 1);\r\n//\t\t\t\tif (now == q) {ans = mid; break;}\r\n\t\t\t\tif (now > q) l = mid + 1, ans = mid;\r\n\t\t\t\telse r = mid - 1;\r\n\t\t\t} \r\n//\t\t\twhile (ans >= L && check(i * (j + 1), ans) < q) --ans;\r\n//\t\t\twhile (ans < R && check(i * (j + 1), ans) > q) ++ans;\r\n//\t\t\tprintf(\"*%d %d %d %d %d %d %d\\n\", i * j, i * (j + 1) - 1, L, ans, R, sum[b[R]], sum[b[ans]]); \r\n\t\t\ttmp += (ans - L + 1) * q + ((R - ans) * i * (j + 1) - (sum[b[R]] - sum[b[ans]])) * p;\r\n\t\t} \r\n//\t\tprintf(\"%d %d\\n\", i, tmp); \r\n\t\tres = min(res, tmp);\r\n\t} printf(\"%lld\", res);\r\n}\r\n"
}