{
    "id": 235752001,
    "contestId": 1030,
    "creationTimeSeconds": 1701710910,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1030,
        "index": "E",
        "name": "Vasya and Good Sequences",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    "author": {
        "contestId": 1030,
        "members": [
            {
                "handle": "__Secret"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1537707900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 66,
    "timeConsumedMillis": 296,
    "memoryConsumedBytes": 7168000,
    "source": "    #include <bits/stdc++.h>\r\n    using namespace std;\r\n    /*\r\n    #pragma GCC optimize(\"Ofast\") \r\n    #pragma comment(linker, \"/stack:200000000\") \r\n    #pragma GCC target( \"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\" ) \r\n    #pragma GCC optimize(\"unroll-loops\") \r\n    #pragma GCC optimize(\"profile-values,profile-reorder-functions,tracer\") \r\n    #pragma GCC optimize(\"vpt\") \r\n    #pragma GCC optimize(\"rename-registers\") \r\n    #pragma GCC optimize(\"move-loop-invariants\") \r\n    #pragma GCC optimize(\"unswitch-loops\") \r\n    #pragma GCC optimize(\"function-sections\") \r\n    #pragma GCC optimize(\"data-sections\") \r\n    #pragma GCC optimize(\"branch-target-load-optimize\") \r\n    #pragma GCC optimize(\"branch-target-load-optimize2\") \r\n    #pragma GCC optimize(\"btr-bb-exclusive\") \r\n    #pragma GCC optimize(\"inline\") \r\n    #pragma GCC optimize(\"-fgcse\") \r\n    #pragma GCC optimize(\"-fgcse-lm\") \r\n    #pragma GCC optimize(\"-fipa-sra\") \r\n    #pragma GCC optimize(\"-ftree-pre\") \r\n    #pragma GCC optimize(\"-ftree-vrp\") \r\n    #pragma GCC optimize(\"-fpeephole2\") \r\n    #pragma GCC optimize(\"-ffast-math\") \r\n    #pragma GCC optimize(\"-fsched-spec\") \r\n    #pragma GCC optimize(\"-falign-jumps\") \r\n    #pragma GCC optimize(\"-falign-loops\") \r\n    #pragma GCC optimize(\"-falign-labels\") \r\n    #pragma GCC optimize(\"-fdevirtualize\") \r\n    #pragma GCC optimize(\"-fcaller-saves\") \r\n    #pragma GCC optimize(\"-fcrossjumping\") \r\n    #pragma GCC optimize(\"-fthread-jumps\") \r\n    #pragma GCC optimize(\"-freorder-blocks\") \r\n    #pragma GCC optimize(\"-fschedule-insns\") \r\n    #pragma GCC optimize(\"inline-functions\") \r\n    #pragma GCC optimize(\"-ftree-tail-merge\") \r\n    #pragma GCC optimize(\"-fschedule-insns2\") \r\n    #pragma GCC optimize(\"-fstrict-aliasing\") \r\n    #pragma GCC optimize(\"-falign-functions\") \r\n    #pragma GCC optimize(\"-fcse-follow-jumps\") \r\n    #pragma GCC optimize(\"-fsched-interblock\") \r\n    #pragma GCC optimize(\"-fpartial-inlining\") \r\n    #pragma GCC optimize(\"no-stack-protector\") \r\n    #pragma GCC optimize(\"-freorder-functions\") \r\n    #pragma GCC optimize(\"-findirect-inlining\") \r\n    #pragma GCC optimize(\"-fhoist-adjacent-loads\") \r\n    #pragma GCC optimize(\"-frerun-cse-after-loop\") \r\n    #pragma GCC optimize(\"inline-small-functions\") \r\n    #pragma GCC optimize(\"-finline-small-functions\") \r\n    #pragma GCC optimize(\"-ftree-switch-conversion\") \r\n    #pragma GCC optimize(\"-foptimize-sibling-calls\") \r\n    #pragma GCC optimize(\"-fexpensive-optimizations\") \r\n    #pragma GCC optimize(\"inline-functions-called-once\") \r\n    #pragma GCC optimize(\"-fdelete-null-pointer-checks\")\r\n    */\r\n    #define ll long long \r\n    #define all(x) x.begin(),x.end()\r\n    #define sz(x) (int) x.size()\r\n    #define f first\r\n    #define s second\r\n    #define ld long double\r\n    #define yes cout << \"YES\" << endl\r\n    #define no cout << \"NO\" << endl\r\n    #define pb push_back\r\n    #define popcount __builtin_popcountll\r\n    #define int long long\r\n    #define endl '\\n'\r\n    const long double Eps = 1e-7; \r\n    const int max1 = 1e9*1.4; \r\n    const int min1 = -1e9 *1.4;\r\n    const ll mod1 = 1000000007;\r\n    const ll mod2 = 2000000011;\r\n    const ll mod3 = 3000000017;\r\n    const ll mod = 998244353;\r\n    const int N = 2e5 + 100;\r\n    const int B = 1e5 + 100;\r\n    const ll INF = 1e18 + 100;\r\n    mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n    ll binpow(ll x,ll y,ll md) {\r\n        if(y == 0) return 1;        \r\n        if(y == 1) return x;\r\n        if(y % 2 == 0) {\r\n            ll now = binpow(x,y/2,md);\r\n            return (1ll*now*now) % md;\r\n        }\r\n        else {\r\n            ll now = binpow(x,y/2,md);\r\n            return (1ll*((1ll*now*now) % mod)*x) % md;\r\n        }\r\n    }\r\n    /*\r\n    for(int l = 0;l < logn - 1;l++) {\r\n        for(int i = 0;i + (2 << l) <= n;i++) {\r\n            sp[l + 1][i] = merge(sp[l][i],sp[l][i + (1 << l)]);\r\n        }\r\n    }   \r\n    int rmq(int l,int r) {\r\n        int t = log2(r - l);\r\n        return merge(sp[t][l],sp[t][r - (1 << t)]);\r\n    }\r\n    */\r\n    void solve() {\r\n        int n;\r\n        cin >> n;\r\n        int a[n + 1];\r\n        for(int i = 1;i <= n;i++) cin >> a[i];\r\n        int pref0[n + 1] = {},pref1[n + 1] = {};\r\n        int ans = 0;\r\n        int now1 = 0;\r\n        pref0[0] = 1;\r\n        for(int i = 1;i <= n;i++) {\r\n            int g = __builtin_popcountll(a[i]) % 2;\r\n            now1 = (now1 + g) % 2;\r\n            if(now1 == 0) {\r\n                pref0[i] = pref0[i - 1] + 1;\r\n                pref1[i] = pref1[i - 1];\r\n            }\r\n            else {\r\n                pref0[i] = pref0[i - 1];\r\n                pref1[i] = pref1[i - 1];\r\n                pref1[i]++;\r\n            }\r\n        }\r\n        int now = 0;    \r\n        for(int i = 1;i <= n;i++) {\r\n            int g = __builtin_popcountll(a[i]) % 2;\r\n            now = (now + g) % 2;\r\n            if(now % 2 == 0) {ans+=pref0[max(0ll,i - 201)];if(i - 201 < 0) ans--;}\r\n            else {ans+=pref1[max(0ll,i - 201)];}\r\n            int sum = 0;\r\n            int mx = 0;\r\n            for(int j = i;j >= max(1ll,i - 199);j--) {\r\n                sum+=__builtin_popcountll(a[j]);\r\n                mx = max(mx,1ll*__builtin_popcountll(a[j]));\r\n                if(mx*2 > sum || sum % 2 == 1) continue;\r\n                ans++; \r\n            }\r\n        }\r\n        cout << ans << endl;\r\n    }\r\n    signed main() {\r\n        ios_base::sync_with_stdio(NULL);\r\n        cin.tie(0);\r\n        cout.tie(0);\r\n        int tt = 1;\r\n        while(tt--) {\r\n            solve();\r\n        }\r\n    }   "
}