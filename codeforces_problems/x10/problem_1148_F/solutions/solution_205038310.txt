{
    "id": 205038310,
    "contestId": 1148,
    "creationTimeSeconds": 1683515381,
    "relativeTimeSeconds": 7481,
    "problem": {
        "contestId": 1148,
        "index": "F",
        "name": "Foo Fighters",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2700,
        "tags": [
            "bitmasks",
            "constructive algorithms"
        ]
    },
    "author": {
        "contestId": 1148,
        "members": [
            {
                "handle": "allitnicS"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1683507900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 58,
    "timeConsumedMillis": 295,
    "memoryConsumedBytes": 4812800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define int long long\r\n#define rep(i, s, e) for (int i = s; i <= e; ++i)\r\n#define drep(i, s, e) for (int i = s; i >= e; --i)\r\n#define file(a) freopen(#a\".in\", \"r\", stdin), freopen(#a\".out\", \"w\", stdout)\r\n#define pv(a) cout << #a << \" = \" << a << endl\r\n#define pa(a, l, r) cout << #a \" : \"; rep(_, l, r) cout << a[_] << ' '; cout << endl\r\n\r\nconst int inf = 1e18;\r\n\r\nconst int N = 3e5 + 10;\r\n\r\nint read() {\r\n  int x = 0, f = 1; char c = getchar();\r\n  for (; c < '0' || c > '9'; c = getchar()) if (c == '-') f = -1;\r\n  for (; c >= '0' && c <= '9'; c = getchar()) x = x * 10 + c - 48;\r\n  return x * f;\r\n}\r\n\r\nint n, a[N], b[N], sum, ans;\r\n\r\nint calc(int s, int d) {\r\n  int res = 0;\r\n  rep(i, 1, n) {\r\n    if (b[i] & ((1ll << d) - 1)) continue;\r\n    if (__builtin_parityll(b[i] & s)) res -= a[i];\r\n    else res += a[i];\r\n  }\r\n  if (res > (inf >> d)) res = inf;\r\n  else res <<= d;\r\n  if (!s) res -= sum;\r\n  return res;\r\n}\r\n\r\nint f(int s) {\r\n  int res = 0;\r\n  rep(i, 1, n) {\r\n    if (__builtin_parityll(s & b[i])) res -= a[i];\r\n    else res += a[i];\r\n  }\r\n  return res;\r\n}\r\n\r\nsigned main() {\r\n  n = read();\r\n  rep(i, 1, n) a[i] = read(), b[i] = read();\r\n  sum = accumulate(a + 1, a + n + 1, 0ll);\r\n  if (sum < 0) {\r\n    rep(i, 1, n) a[i] = -a[i];\r\n    sum = -sum;\r\n  }\r\n  drep(i, 61, 0) {\r\n    if (calc(ans, i) >= 0) ans |= 1ll << i;\r\n  }\r\n  printf(\"%lld\\n\", ans);\r\n  return 0;\r\n}"
}