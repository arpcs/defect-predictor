{
    "id": 221935651,
    "contestId": 1251,
    "creationTimeSeconds": 1693918547,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1251,
        "index": "F",
        "name": "Red-White Fence",
        "type": "PROGRAMMING",
        "rating": 2500,
        "tags": [
            "combinatorics",
            "fft"
        ]
    },
    "author": {
        "contestId": 1251,
        "members": [
            {
                "handle": "Gamal74"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1571929500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, ll> pll;\r\ntypedef vector<int> vi;\r\n\r\n#define fi first\r\n#define se second\r\n#define pp push_back\r\n#define all(x) (x).begin(), (x).end()\r\n#define Ones(n) __builtin_popcount(n)\r\n#define endl '\\n'\r\n#define mem(arrr, xx) memset(arrr,xx,sizeof arrr)\r\n//#define int long long\r\n#define debug(x) cout << (#x) << \" = \" << x << endl\r\n\r\nvoid Gamal() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n#ifdef Clion\r\n    freopen(\"input.txt\", \"r\", stdin), freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n}\r\n\r\nint dx[] = {+0, +0, -1, +1, +1, +1, -1, -1};\r\nint dy[] = {-1, +1, +0, +0, +1, -1, +1, -1};\r\n\r\nconst double EPS = 1e-9;\r\nconst ll OO = 0X3F3F3F3F3F3F3F3F;\r\nconst int N = 2e5 + 5, INF = INT_MAX, MOD = 998244353, LOG = 20;\r\n\r\n#define rep(aa, bb, cc) for(int aa = bb; aa < cc;aa++)\r\n#define sz(a) (int)a.size()\r\n\r\nconst ll mod = (119 << 23) + 1, root = 62; // = 998244353\r\n// For p < 2^30 there is also e.g. 5 << 25, 7 << 26, 479 << 21\r\n// and 483 << 21 (same root). The last two are > 10^9.\r\n\r\n\r\nint modpow(int b, int e) {\r\n    int ans = 1;\r\n    for (; e; b = 1ll * b * b % mod, e /= 2)\r\n        if (e & 1) ans = 1ll * ans * b % mod;\r\n    return ans;\r\n}\r\n\r\ntypedef vector<ll> vl;\r\n\r\nvoid ntt(vi &a) {\r\n    int n = sz(a), L = 31 - __builtin_clz(n);\r\n    static vi rt(2, 1);\r\n    for (static int k = 2, s = 2; k < n; k *= 2, s++) {\r\n        rt.resize(n);\r\n        int z[] = {1, modpow(root, mod >> s)};\r\n        rep(i, k, 2 * k) rt[i] = 1ll * rt[i / 2] * z[i & 1] % mod;\r\n    }\r\n    vi rev(n);\r\n    rep(i, 0, n) rev[i] = (rev[i / 2] | (i & 1) << L) / 2;\r\n    rep(i, 0, n) if (i < rev[i]) swap(a[i], a[rev[i]]);\r\n    for (int k = 1; k < n; k *= 2)\r\n        for (int i = 0; i < n; i += 2 * k)\r\n            rep(j, 0, k) {\r\n                int z = 1ll * rt[j + k] * a[i + j + k] % mod, &ai = a[i + j];\r\n                a[i + j + k] = ai - z + (z > ai ? mod : 0);\r\n                ai += (ai + z >= mod ? z - mod : z);\r\n            }\r\n}\r\n\r\nvi conv(const vi &a, const vi &b) {\r\n    if (a.empty() || b.empty()) return {};\r\n    int s = sz(a) + sz(b) - 1, B = 32 - __builtin_clz(s), n = 1 << B;\r\n    int inv = modpow(n, mod - 2);\r\n    vi L(a), R(b), out(n);\r\n    L.resize(n), R.resize(n);\r\n    ntt(L), ntt(R);\r\n    rep(i, 0, n) out[-i & (n - 1)] = (ll) L[i] * R[i] % mod * inv % mod;\r\n    ntt(out);\r\n    return {out.begin(), out.begin() + s};\r\n}\r\n\r\nvoid solve() {\r\n    int n, k;\r\n    cin >> n >> k;\r\n    vl a(n), b(k);\r\n    for (int i = 0; i < n; ++i)cin >> a[i];\r\n    for (int i = 0; i < k; ++i)cin >> b[i];\r\n    sort(all(a));\r\n    sort(all(b));\r\n    vl ans(12 * 1e5 + 10);\r\n    for (int i = 0; i < k; ++i) {\r\n        int j = 0;\r\n        vector<vl>v;\r\n        v.push_back({1});\r\n        while (j < n && a[j] < b[i]) {\r\n            int cnt = 1;\r\n            while (j + 1 < n && a[j] == a[j + 1])cnt++, j++;\r\n            j++;\r\n            cnt = min(cnt,2);\r\n            vl p(cnt + 1);\r\n            p[0] = 1,p[1] = 2;\r\n            if(cnt == 2)p[2] = 1;\r\n            v.push_back(p);\r\n        }\r\n        while (v.size() > 1){\r\n            vector<vl>nv;\r\n            for (int l = 0; l + 1 < v.size(); l += 2) {\r\n                nv.push_back(conv(v[l],v[l+1]));\r\n            }\r\n            if(v.size()&1)nv.push_back(v.back());\r\n            v = ::move(nv);\r\n        }\r\n        auto cur = v.back();\r\n        for (int l = 0; l < cur.size(); ++l) {\r\n            ans[2 * b[i] + (l + 1) * 2] = (ans[2 * b[i] + (l + 1) * 2] + cur[l]) % mod;\r\n        }\r\n    }\r\n\r\n    int q;\r\n    cin >> q;\r\n    while (q--) {\r\n        int x;\r\n        cin >> x;\r\n        cout << ans[x] << endl;\r\n    }\r\n\r\n}\r\n\r\n\r\nsigned main() {\r\n    Gamal();\r\n    int t = 1;\r\n//    cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n}"
}