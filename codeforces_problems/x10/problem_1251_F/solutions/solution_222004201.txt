{
    "id": 222004201,
    "contestId": 1251,
    "creationTimeSeconds": 1693962652,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1251,
        "index": "F",
        "name": "Red-White Fence",
        "type": "PROGRAMMING",
        "rating": 2500,
        "tags": [
            "combinatorics",
            "fft"
        ]
    },
    "author": {
        "contestId": 1251,
        "members": [
            {
                "handle": "flyfeng"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1571929500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 107,
    "timeConsumedMillis": 857,
    "memoryConsumedBytes": 79360000,
    "source": "// LUOGU_RID: 123911976\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nlong long ksm(long long a,long long b,long long mod){\r\n\tlong long res=1;\r\n\ta%=mod;\r\n\twhile(b){\r\n\t\tif(b&1) res=res*a%mod;\r\n\t\ta=a*a%mod;\r\n\t\tb>>=1;\r\n\t}\r\n\treturn res;\r\n}\r\n//\u4e8c\u6b21\u5269\u4f59 2log\r\nstruct cipolla {\r\n    long long n,p,w2,a; //w2 = a*a-n mod p\r\n \r\n    struct cx {long long x,y;} ;//Fp2 = {x+yw | x,y belong to Fp}\r\n    cx mul(cx a,cx b) {return (cx){(a.x*b.x+a.y*b.y%p*w2)%p,(a.x*b.y+a.y*b.x)%p};}\r\n    cx cx_qpow(cx a,int n) {\r\n        cx ans = (cx){1,0};\r\n        for (;n;n>>=1,a=mul(a,a)) if (n&1) ans=mul(ans,a);\r\n        return ans;\r\n    }\r\n \r\n    void getsol(long long _n,long long _p,long long&ans1,long long&ans2)\r\n    {\r\n        n = _n, p = _p;\r\n        ans1=ans2=-1; //\u6700\u591a\u4e24\u4e2a\u89e3,\u65e0\u89e3\u662f-1\r\n        if (n==0 || p==2) {ans1=n; return ;}\r\n \r\n        if (ksm((long long)n,(long long)(p-1)/2,(long long)p) == p-1) return ;\r\n \r\n        for (a=rand()%p;;a==p-1?(a=0):(++a)) {\r\n            if (ksm((a*a-n+p)%p,(p-1)/2,p) == p-1) {\r\n                w2 = (a*a-n+p)%p;\r\n                break;\r\n            }\r\n        }\r\n        cx b = (cx){a,1};\r\n        b = cx_qpow(b,(p+1)/2);\r\n        ans1 = b.x;\r\n        if (ans1 != p-ans1) ans2 = p-ans1;\r\n        return ;\r\n    }\r\n};\r\n\r\nnamespace Poly{\r\n\tconst int N=3e6+10;\r\n\tconst int mod=998244353;\r\n\tconst int g=3,gi=332748118;//\u6839\u636e\u6a21\u6570\u4e0d\u540c\u6539\u53d8\u539f\u6839\r\n\tusing poly=vector<long long>;\r\n\tint r[N];\r\n\tint limit,L;\r\n\tvoid init(int n,int m){\r\n\t    limit=1;L=0;\r\n\t    while(limit<=n+m) limit<<=1,L++;\r\n\t    for(int i=0;i<limit;i++){\r\n\t        r[i]=(r[i>>1]>>1)|((i&1)<<(L-1));\r\n\t    }\r\n\t}\r\n\tvoid ntt(poly &v,int type){\r\n\t\tint len=v.size();\r\n\t    for(int i=0;i<len;i++){\r\n\t        if(i<r[i]) swap(v[i],v[r[i]]);\r\n\t    }\r\n\t    for(int mid=1;mid<len;mid<<=1){\r\n\t        long long wn=ksm(type==1?g:gi,(mod-1)/(mid<<1),mod);\r\n\t        for(int j=0,R=mid<<1;j<limit;j+=R){\r\n\t            long long w=1;\r\n\t            for(int k=0;k<mid;k++,w=(w*wn)%mod){\r\n\t                long long x=v[j+k],y=v[j+mid+k]*w%mod;\r\n\t                v[j+k]=(x+y)%mod;\r\n\t                v[j+k+mid]=(x-y+mod)%mod;\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t    if(type==-1){\r\n\t        long long inv=ksm(len,mod-2,mod);\r\n\t        for(int i=0;i<len;i++){\r\n\t        \tv[i]=v[i]*inv%mod;\r\n\t        }\r\n\t    }\r\n\t}\r\n\t//\u53cd\u8f6c\u591a\u9879\u5f0f\u7cfb\u6570\r\n\tvoid Reverse(poly &a){\r\n\t\treverse(a.begin(),a.end());\r\n\t}\r\n\t//\u591a\u9879\u5f0f\u4e58\u6cd5\r\n\tpoly Mul(poly A,poly B,int len=0){\r\n\t\tint n=A.size(),m=B.size();\r\n\t\tif(len){\r\n\t\t\tif(n>len){\r\n\t\t\t\tA.resize(len),n=len;\r\n\t\t\t}\r\n\t\t\tif(m>len) B.resize(len),m=len;\r\n\t\t}\r\n\t\tif(n<=30||m<=30){\r\n\t\t\tpoly res(n+m-1);\r\n\t\t\tfor(int i=0;i<n;i++){\r\n\t\t\t\tfor(int j=0;j<m;j++){\r\n\t\t\t\t\tres[i+j]=(res[i+j]+A[i]*B[j]%mod)%mod;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(len){\r\n\t\t\t\tres.resize(len);\r\n\t\t\t}\r\n\t\t\treturn res;\r\n\t\t}\r\n\t\tinit(n,m);\r\n\t\tA.resize(limit);B.resize(limit);\r\n\t\tfor(int i=min(n,m);i<limit;i++){\r\n\t\t\tif(i>=n) A[i]=0;\r\n\t\t\tif(i>=m) B[i]=0;\r\n\t\t}\r\n\t\tntt(A,1);ntt(B,1);\r\n\t\tfor(int i=0;i<limit;i++){\r\n\t\t\tA[i]=A[i]*B[i]%mod;\r\n\t\t}\r\n\t\tntt(A,-1);\r\n\t\tif(len==0){\r\n\t\t\tA.resize(n+m-1);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tA.resize(len);\r\n\t\t}\r\n\t\treturn A;\r\n\t}\r\n\t//\u6c42\u5bfc\r\n\tpoly Direv(poly res){\r\n\t\tfor(int i=1;i<(int)res.size();i++){\r\n\t\t\tres[i-1]=res[i]*i%mod;\r\n\t\t}\r\n\t\tres.pop_back();\r\n\t\treturn res;\r\n\t}\r\n\t//\u79ef\u5206\r\n\tpoly Inter(poly res){\r\n\t\tint len=res.size();\r\n\t\tfor(int i=len-1;i>=1;i--){\r\n\t\t\tres[i]=res[i-1]*ksm(i,mod-2,mod)%mod;\r\n\t\t}\r\n\t\tres[0]=0;\r\n\t\treturn res;\r\n\t}\r\n\t//B(x)=2B'(x)-A(x)B'(x)B'(x) \r\n\tpoly GetInv(int n,poly &a){\r\n\t\tif(n==1){\r\n\t\t\treturn {ksm(a[0],mod-2,mod)};\r\n\t\t}\r\n\t\tpoly b=GetInv((n+1)>>1,a);\r\n\t\tpoly c=a;\r\n\t\tint m=b.size();\r\n\t\tinit(n,n);\r\n\t\tc.resize(limit);b.resize(limit);\r\n\t\tfor(int i=m;i<limit;i++){\r\n\t\t\tb[i]=0;\r\n\t\t}\r\n\t\tfor(int i=n;i<limit;i++){\r\n\t\t\tc[i]=0;\r\n\t\t}\r\n\t\tntt(b,1);ntt(c,1);\r\n\t\tfor(int i=0;i<limit;i++){\r\n\t\t\tc[i]=(2-c[i]*b[i]%mod+mod)%mod;\r\n\t\t\tc[i]=c[i]*b[i]%mod;\r\n\t\t}\r\n\t\tntt(c,-1);\r\n\t\tc.resize(n);\r\n\t\treturn c;\r\n\t}\r\n\t//\u591a\u9879\u5f0f\u6c42\u9006\r\n\tpoly Inv(poly a){\r\n\t\tint len=a.size();\r\n\t\treturn GetInv(len,a);\r\n\t}\r\n\t//b'x=a'x/ax\r\n\tpoly Ln(poly a){\r\n\t\tint n=a.size();\r\n\t\ta=Mul(Direv(a),Inv(a));\r\n\t\ta.resize(n);\r\n\t\treturn Inter(a);\r\n\t}\r\n\t//gx=g'x(1-ln(g'x)+ax)\r\n\tpoly Exp(int n,poly &a){\r\n\t\tif(n==1){\r\n\t\t\treturn {1};\r\n\t\t}\r\n\t\tpoly b=Exp((n+1)>>1,a);\r\n\t\tb.resize(n);\r\n\t\tfor(int i=(n+1)>>1;i<n;i++) {\r\n\t\t\tb[i]=0;\r\n\t\t}\r\n\t\tpoly e=Ln(b);\r\n\t\tpoly c=a;\r\n\t\tinit(n,n);\r\n\t\tb.resize(limit);e.resize(limit);c.resize(limit);\r\n\t\tfor(int i=n;i<limit;i++){\r\n\t\t\tc[i]=e[i]=b[i]=0;\r\n\t\t}\r\n\t\tntt(b,1);ntt(c,1);ntt(e,1);\r\n\t\tfor(int i=0;i<limit;i++){\r\n\t\t\tc[i]=b[i]*((1-e[i]+mod+c[i])%mod)%mod;\r\n\t\t}\r\n\t\tntt(c,-1);\r\n\t\tc.resize(n);\r\n\t\treturn c;\r\n\t}\r\n\tpoly Exp(poly a){\r\n\t\treturn Exp((int)a.size(),a);\r\n\t}\r\n\tconst int inv2=ksm(2,mod-2,mod);\r\n\t//g(x)=(f(x)+g'x*g'x)/(2*g'x)\r\n\tpoly Sqrt(int n,poly &a){\r\n\t\tif(n==1){\r\n\t\t\tif(a[0]==1)\r\n\t\t\t\treturn {1};\r\n\t\t\telse{\r\n\t\t\t\tlong long ans1,ans2;\r\n\t\t\t\tcipolla res;\r\n\t\t\t\tres.getsol(a[0],mod,ans1,ans2);\r\n\t\t\t\treturn {min(ans1,ans2)};\r\n\t\t\t}\r\n\t\t}\r\n\t\tpoly b=Sqrt((n+1)>>1,a);\r\n\t\tb.resize(n);\r\n\t\tfor(int i=(n+1)>>1;i<n;i++) {\r\n\t\t\tb[i]=0;\r\n\t\t}\r\n\t\tpoly e=Inv(b);\r\n\t\tpoly c=a;\r\n\t\tinit(n,n);\r\n\t\tb.resize(limit);c.resize(limit);e.resize(limit);\r\n\t\tfor(int i=n;i<limit;i++){\r\n\t\t\tc[i]=b[i]=e[i]=0;\r\n\t\t}\r\n\t\tntt(b,1);ntt(c,1);ntt(e,1);\r\n\t\tfor(int i=0;i<limit;i++){\r\n\t\t\tc[i]=(c[i]+b[i]*b[i]%mod)%mod*inv2%mod*e[i]%mod;\r\n\t\t}\r\n\t\tntt(c,-1);\r\n\t\tc.resize(n);\r\n\t\treturn c;\r\n\t}\r\n\tpoly Sqrt(poly a){\r\n\t\tint n=(int)a.size();\r\n\t\treturn Sqrt(n,a);\r\n\t}\r\n\t//f(x)^k=e^(kln(f(x)))\r\n\tpoly Pow_1(poly a,long long k){\r\n\t\ta=Ln(a);\r\n\t\tfor(int i=0;i<(int)a.size();i++){\r\n\t\t\ta[i]=a[i]*k%mod;\r\n\t\t}\r\n\t\treturn Exp(a);\r\n\t}\r\n\t//f(x)^k=(f(x)/f(t))^k*(f(t)^k) t\u4e3a\u7b2c\u4e00\u4e2a\u4e0d\u4e3a0\u5143\u7d20\r\n\tpoly Pow_2(poly a,long long k,long long k1){\r\n\t\tint x=-1;\r\n\t\tfor(int i=0;i<(int)a.size();i++){\r\n\t\t\tif(a[i]) {\r\n\t\t\t\tx=i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tint n=(int)a.size();\r\n\t\tif(x==-1||x*k>n)\r\n\t\treturn vector<long long>(n,0);\r\n\t\tpoly res(n-x);\r\n\t\tlong long val=a[x];\r\n\t\tlong long inv=ksm(val,mod-2,mod);\r\n\t\tfor(int i=x;i<n;i++){\r\n\t\t\tres[i-x]=a[i]*inv%mod;\r\n\t\t}\r\n\t\tres=Pow_1(res,k);\r\n\t\tval=ksm(val,k1,mod);\r\n\t\tx=x*k;\r\n\t\tx=min(x,n);\r\n\t\tfor(int i=0;i<x;i++){\r\n\t\t\ta[i]=0;\r\n\t\t}\r\n\t\tfor(int i=x;i<n;i++){\r\n\t\t\ta[i]=res[i-x]*val%mod;\r\n\t\t}\r\n\t\treturn a;\r\n\t}\r\n\tpoly Pow(poly a,long long k,long long k1=0){\r\n\t\treturn a[0]==1?Pow_1(a,k):Pow_2(a,k,k1);\r\n\t}\r\n\t//\u591a\u9879\u5f0f\u9664\u6cd5 y=kx+b\r\n\tvoid Div(poly y,poly x,poly &k,poly &b){\r\n\t\tint n=y.size(),m=x.size();\r\n\t\tReverse(y);Reverse(x);\r\n\t\tpoly o=x;o.resize(n-m+1);\r\n\t\tk=Mul(y,Inv(o),n-m+1);\r\n\t\tReverse(k);Reverse(y);Reverse(x);\r\n\t\tb=Mul(k,x,m-1);\r\n\t\tfor(int i=0;i<m-1;i++){\r\n\t\t\tb[i]=(mod-b[i]+y[i])%mod;\r\n\t\t}\r\n\t}\r\n\tlong long w4=ksm(g,(mod-1)/4,mod);\r\n\tlong long invw4=ksm(w4,mod-2,mod);\r\n\t//\u6b27\u62c9\u516c\u5f0f\u53d8\u6362\u5f97\u51fa\r\n\tpoly Cos(poly a){\r\n\t\tint n=a.size();\r\n\t\tpoly b;\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\ta[i]=a[i]*w4%mod;\r\n\t\t}\r\n\t\ta=Exp(a);\r\n\t\tb=Inv(a);\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\ta[i]=(a[i]+b[i])%mod*inv2%mod;\r\n\t\t}\r\n\t\treturn a;\r\n\t}\r\n\tpoly Sin(poly a){\r\n\t\tint n=a.size();\r\n\t\tpoly b;\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\ta[i]=a[i]*w4%mod;\r\n\t\t}\r\n\t\ta=Exp(a);\r\n\t\tb=Inv(a);\r\n\t\tfor(int i=0;i<n;i++){\r\n\t\t\ta[i]=(a[i]+mod-b[i])%mod*inv2%mod*invw4%mod;\r\n\t\t}\r\n\t\treturn a;\r\n\t}\r\n}\r\nusing namespace Poly;\r\nlong long fac[N],inv[N];\r\nvoid init(int n=N-10){\r\n    fac[0]=1;\r\n    for(int i=1;i<=n;i++){\r\n        fac[i]=fac[i-1]*i%mod;\r\n    }\r\n    inv[n]=ksm(fac[n],mod-2,mod);\r\n    for(int i=n-1;i>=0;i--){\r\n        inv[i]=inv[i+1]*(i+1)%mod;\r\n    }\r\n}\r\nlong long C(int n,int m){\r\n    if(n<0||m<0||n<m) return 0;\r\n    return fac[n]*inv[m]%mod*inv[n-m]%mod;\r\n}\r\nvoid solve(){\r\n\tinit();\r\n\tint n,k;\r\n\tcin>>n>>k;\r\n\tvector<int>a(n),cnt(3e5+1);\r\n\tfor(int i=0;i<n;i++){\r\n\t\tcin>>a[i];\r\n\t\tcnt[a[i]]++;\r\n\t}\r\n\tsort(a.begin(),a.end());\r\n\ta.erase(unique(a.begin(),a.end()),a.end());\r\n\tvector<int>red(k);\r\n\tvector<long long>ans(6e5+1,0);\r\n\tfor(int i=0;i<k;i++){\r\n\t\tcin>>red[i];\r\n\t\tint num1=0,num2=0;\r\n\t\tfor(int j=0;j<(int)a.size();j++){\r\n\t\t\tif(a[j]>=red[i]) break;\r\n\t\t\tif(cnt[a[j]]>=2) num2++;\r\n\t\t\telse num1++;\r\n\t\t}\r\n\t\tpoly A(num1+1,0),B(num2+num2+1,0);\r\n\t\tfor(int i=0;i<=num1;i++){\r\n\t\t\tA[i]=ksm(2,i,mod)*C(num1,i)%mod;\r\n\t\t}\r\n\t\tfor(int i=0;i<=num2+num2;i++){\r\n\t\t\tB[i]=C(num2+num2,i);\r\n\t\t}\r\n\t\tA=Mul(A,B);\r\n\t\tfor(int j=0;j<(int)A.size();j++){\r\n\t\t\tans[(j+1+red[i])]=(ans[(j+1+red[i])]+A[j])%mod;\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\tint q;\r\n\tcin>>q;\r\n\twhile(q--){\r\n\t\tint x;\r\n\t\tcin>>x;\r\n\t\tcout<<ans[x/2]<<'\\n';\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\r\n\tint t=1;\r\n\twhile(t--){\r\n\t\tsolve();\r\n\t}\r\n\treturn 0;\r\n}"
}