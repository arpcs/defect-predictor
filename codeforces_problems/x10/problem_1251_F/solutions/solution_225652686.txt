{
    "id": 225652686,
    "contestId": 1251,
    "creationTimeSeconds": 1695905799,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1251,
        "index": "F",
        "name": "Red-White Fence",
        "type": "PROGRAMMING",
        "rating": 2500,
        "tags": [
            "combinatorics",
            "fft"
        ]
    },
    "author": {
        "contestId": 1251,
        "members": [
            {
                "handle": "michaelmonir"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1571929500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 107,
    "timeConsumedMillis": 4991,
    "memoryConsumedBytes": 133427200,
    "source": "// \u0627\u0646\u0627 \u0627\u0644\u0645\u0634\u0637\u0634\u0637\n//#pragma GCC optimize(\"O3\")\n//#pragma GCC optimize(\"unroll-loops\")\n//#pragma GCC target(\"avx,avx2,fma\")\n#include<bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\n#define int long long\n#define pb push_back\n#define all(v) v.begin(), v.end()\ntypedef long long ll;\n#define compact(v) sort(all(v)); v.erase(unique(all(v)), v.end())\ntypedef pair<int, int> pi;\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<vii> viii;\ntypedef vector<viii> viiii;\n\n#define v(a,b,c,d) (a, viii(b, vii(c, vi(d))))\n\ntypedef vector<bool> vb;\n//#define endl '\\n'\n#define clr(v, d)            memset(v, d, sizeof(v))\n#define max3(a, b, c)         max(a, max(b, c))\nconst int Min = -1e16;\nconst int Max = 1e16;\n\ntypedef tree< pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\n\nconst int mod = (119 << 23) + 1, root = 62; // = 998244353\n// For p < 2^30 there is also e.g. 5 << 25, 7 << 26, 479 << 21\n// and 483 << 21 (same root). The last two are > 10^9.\n\n\nll modpow(ll b, ll e) {\n    ll ans = 1;\n    for (; e; b = b * b % mod, e /= 2)\n        if (e & 1) ans = ans * b % mod;\n    return ans;\n}\n#define sz(a) (int)a.size()\n#define rep(aa, bb, cc) for(int aa = bb; aa < cc;aa++)\n\ntypedef vector<ll> vl;\n//remember to also write mod_pow\nvoid ntt(vl &a) {\n    int n = sz(a), L = 31 - __builtin_clz(n);\n    static vl rt(2, 1);\n    for (static int k = 2, s = 2; k < n; k *= 2, s++) {\n        rt.resize(n);\n        ll z[] = {1, modpow(root, mod >> s)};\n        rep(i, k, 2 * k) rt[i] = rt[i / 2] * z[i & 1] % mod;\n    }\n    vi rev(n);\n    rep(i, 0, n) rev[i] = (rev[i / 2] | (i & 1) << L) / 2;\n    rep(i, 0, n) if (i < rev[i]) swap(a[i], a[rev[i]]);\n    for (int k = 1; k < n; k *= 2)\n        for (int i = 0; i < n; i += 2 * k)\n            rep(j, 0, k) {\n        ll z = rt[j + k] * a[i + j + k] % mod, &ai = a[i + j];\n        a[i + j + k] = ai - z + (z > ai ? mod : 0);\n        ai += (ai + z >= mod ? z - mod : z);\n    }\n}\n\nvl conv(const vl &a, const vl &b) {\n    if (a.empty() || b.empty()) return {};\n    int s = sz(a) + sz(b) - 1, B = 32 - __builtin_clz(s), n = 1 << B;\n    int inv = modpow(n, mod - 2);\n    vl L(a), R(b), out(n);\n    L.resize(n), R.resize(n);\n    ntt(L), ntt(R);\n    rep(i, 0, n) out[-i & (n - 1)] = (ll) L[i] * R[i] % mod * inv % mod;\n    ntt(out);\n    return {out.begin(), out.begin() + s};\n}\n\n\nvoid solve(int kkkk, int tttt)\n{\n    int n; cin >> n; int k; cin >> k;\n    vector<int> a(n); for (int i = 0; i < n; i++) cin >> a[i];\n    map<int, int> mapp; for (int i : a) mapp[i]++;\n    vector<int> b(k); for (int i = 0; i < k; i++) cin >> b[i];\n    int N =6e5+5;\n    vector<int> answers(N);\n    for (int num : b)\n    {\n        vii q;\n        q.pb({1});\n        for (auto it : mapp)\n        {\n            if (it.first >= num) break;\n            vector<int> v{1, 2};\n            if (it.second >= 2) v.pb(1);\n            q.pb(v);\n        }\n        for (int i = 0; ; i+=2)\n        {\n            if (i == q.size()-1) break;\n            vi v1 = q[i], v2 = q[i+1];\n            vi res = conv(v1, v2);\n            q.pb(res);\n        }\n        for (int i = 0; i < q.back().size(); i++)\n            if (num+1+i < N)\n                answers[num+1+i] += q.back()[i], answers[num+1+i] %= mod;\n    }\n\n    int q; cin >> q;\n    for (int i = 0; i < q; i++)\n    {\n        int x; cin >> x; x/=2;\n        int c = answers[x]; c %= mod; c += mod; c %= mod;\n        cout << c << endl;\n    }\n}\n\nvoid fast() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); }\n\nsigned main()\n{\n//    freopen(\"input.txt\",\"rt\",stdin);\n//    freopen(\"output.txt\",\"wt\",stdout);\n    fast();\n\n    int t = 0, i = 0;\n//    int t; cin >> t;\n//    for (int i = 1; i <= t; i++)\n        solve(t, i);\n    return 0;\n}"
}