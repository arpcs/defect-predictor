{
    "id": 225649693,
    "contestId": 1251,
    "creationTimeSeconds": 1695904521,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1251,
        "index": "F",
        "name": "Red-White Fence",
        "type": "PROGRAMMING",
        "rating": 2500,
        "tags": [
            "combinatorics",
            "fft"
        ]
    },
    "author": {
        "contestId": 1251,
        "members": [
            {
                "handle": "michaelmonir"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1571929500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 22,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 56320000,
    "source": "// \u0627\u0646\u0627 \u0627\u0644\u0645\u0634\u0637\u0634\u0637\n//#pragma GCC optimize(\"O3\")\n//#pragma GCC optimize(\"unroll-loops\")\n//#pragma GCC target(\"avx,avx2,fma\")\n#include<bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\n#define int long long\n#define pb push_back\n#define all(v) v.begin(), v.end()\ntypedef long long ll;\n#define compact(v) sort(all(v)); v.erase(unique(all(v)), v.end())\ntypedef pair<int, int> pi;\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<vii> viii;\ntypedef vector<viii> viiii;\n\n#define v(a,b,c,d) (a, viii(b, vii(c, vi(d))))\n\ntypedef vector<bool> vb;\n//#define endl '\\n'\n#define clr(v, d)            memset(v, d, sizeof(v))\n#define max3(a, b, c)         max(a, max(b, c))\nconst int Min = -1e16;\nconst int Max = 1e16;\n\ntypedef tree< pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\n\nconst int M = 3e6+10;\nconst ll mod = (119 << 23) + 1, root = 3; // = 998244353\nint add ( int a , int b)\n{\n    return (a + b) % mod;\n}\nint mul ( int a , int b)\n{\n    return 1LL * a * b % mod;\n}\nint fp( int b , int p)\n{\n    if(!p)\n        return 1;\n    int temp = fp(b,p/2);\n    temp = mul(temp,temp);\n    if(p&1)\n        temp = mul(temp,b);\n    return temp;\n}\n\nint fact[M], inv[M];\nvoid build()\n{\n    fact[0] = fact[1] = inv[0] = inv[1] = 1;\n    for (int i = 2; i < M; i++)\n    {\n        fact[i] = fact[i - 1] * i % mod;\n        inv[i] = inv[mod % i] * (mod - mod / i) % mod;\n    }\n    for (int i = 2; i < M; i++)\n        inv[i] = inv[i] * inv[i - 1] % mod;\n}\nint nCr( int n , int r)\n{\n    return mul(fact[n],mul(inv[n-r],inv[r]));\n}\nint nPr(int n, int r)\n{\n    int ans = nCr(n, r); ans *= fact[r];\n    ans %= mod;\n    return ans;\n}\n\n\nvector<ll> I;\n//remember to also write mod_pow\ntypedef vector<ll> vl;\nvoid ntt(ll* x, ll* temp, ll* roots, int n, int skip) {\n    if (n == 1) return;\n    int n2 = n/2;\n    ntt(x     , temp, roots, n2, skip*2);\n    ntt(x+skip, temp, roots, n2, skip*2);\n    for(int i =0; i < n; i++) temp[i] = x[i*skip];\n    for(int i = 0; i < n2; i++) {\n        ll s = temp[2*i], t = temp[2*i+1] * roots[skip*i];\n        x[skip*i] = (s + t) % mod; x[skip*(i+n2)] = (s - t) % mod;\n    }\n}\nll modpow(ll b, ll e){\n    if(!e)return 1;\n    if(e&1)return b * modpow(b,e-1) % mod;\n    return modpow(b*b%mod,e>>1);\n}\nvoid ntt(vl& x, bool inv = false) {\n    ll e = modpow(root, (mod-1) / x.size());\n    if (inv) e = modpow(e, mod-2);\n    vl roots(x.size(), 1), temp = roots;\n    for(int i = 1; i < x.size(); i++) roots[i] = roots[i-1] * e % mod;\n    ntt(&x[0], &temp[0], &roots[0], x.size(), 1);\n}\nvl conv(vl a, vl b) {\n    int s = a.size() + b.size() - 1; if (s <= 0) return {};\n    int L = s > 1 ? 32 - __builtin_clz(s - 1) : 0, n = 1 << L;\n    if (s <= 200) { // (factor 10 optimization for |a|,|b| = 10)\n        vl c(s);\n        for(int i = 0; i < a.size(); i++)for(int j = 0; j < b.size(); j++)\n                c[i + j] = (c[i + j] + a[i] * b[j]) % mod;\n        return c;\n    }\n    a.resize(n); ntt(a);\n    b.resize(n); ntt(b);\n    vl c(n); ll d = modpow(n, mod-2);\n    for(int i = 0; i < n; i++) c[i] = a[i] * b[i] % mod * d % mod;\n    ntt(c, true); c.resize(s); return c;\n}\nvector<ll> fpconv(int n) {\n    if (n == 1) {\n        return I;\n    }\n    auto ret = fpconv(n >> 1);\n    if (n & 1) {\n        ret = conv(ret,ret);\n        ret = conv(ret,I);\n    } else {\n        ret = conv(ret,ret);\n    }\n    return ret;\n}\n\n\nvoid solve(int kkkk, int tttt)\n{\n    int n; cin >> n; int k; cin >> k;\n    vector<int> a(n); for (int i = 0; i < n; i++) cin >> a[i];\n    map<int, int> mapp; for (int i : a) mapp[i]++;\n    vector<int> b(k); for (int i = 0; i < k; i++) cin >> b[i];\n    int N = 1e6+5;\n    vector<int> answers(N);\n    for (int num : b)\n    {\n        priority_queue<pair<int, vi>> q;\n        q.push({-1, {1}});\n        for (auto it : mapp)\n        {\n            if (it.first >= num) break;\n            vector<int> v{1, 2};\n            if (it.second >= 2) v.pb(1);\n            q.push({-v.size(), v});\n        }\n        while (q.size() >= 2)\n        {\n            vi v1 = q.top().second; q.pop();\n            vi v2 = q.top().second; q.pop();\n            vi res = conv(v1, v2);\n            q.push({-res.size(), res});\n        }\n        for (int i = 0; i < q.top().second.size(); i++)\n            answers[num+1+i] += q.top().second[i], answers[num+1+i] %= mod;\n    }\n\n    int q; cin >> q;\n    for (int i = 0; i < q; i++)\n    {\n        int x; cin >> x; x/=2;\n        cout << answers[x] << endl;\n    }\n}\n\nvoid fast() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); }\n\nsigned main()\n{\n    build();\n//    freopen(\"input.txt\",\"rt\",stdin);\n//    freopen(\"output.txt\",\"wt\",stdout);\n    fast();\n\n    int t = 0, i = 0;\n//    int t; cin >> t;\n//    for (int i = 1; i <= t; i++)\n        solve(t, i);\n    return 0;\n}"
}