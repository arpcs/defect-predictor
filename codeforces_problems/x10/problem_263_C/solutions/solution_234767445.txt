{
    "id": 234767445,
    "contestId": 263,
    "creationTimeSeconds": 1701181574,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 263,
        "index": "C",
        "name": "Circle of Numbers",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "dfs and similar",
            "implementation"
        ]
    },
    "author": {
        "contestId": 263,
        "members": [
            {
                "handle": "nguyenquocthinhhung"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1358350200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 45,
    "timeConsumedMillis": 904,
    "memoryConsumedBytes": 35225600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int N = 100100;\r\n\r\nint n, u, v, i, vis[N];\r\nvector<int> ans;\r\nset<int> edges[N];\r\n\r\nbool check(int u, int v, int p) {\r\nif (p > 0 && !edges[p].count(v)) return 0;\r\nint cnt = 0;\r\nfor (int x : edges[v]) cnt += edges[u].count(x);\r\nreturn (cnt >= 2);\r\n}\r\n\r\nvoid solve(int u = 1, int p = 0) {\r\nif (vis[u]++) return;\r\n\r\nans.push_back(u);\r\n\r\nfor (int v : edges[u])\r\nif (!vis[v] && check(u, v, p))\r\nreturn solve(v, u);\r\n}\r\n\r\nint main() {\r\ncin >> n;\r\nfor (i = 0; i < 2 * n; ++i) {\r\nscanf(\"%d %d\", &u, &v);\r\nedges[u].insert(v);\r\nedges[v].insert(u);\r\n}\r\nsolve();\r\nif (ans.size() != n) return printf(\"-1\"), 0;\r\nfor (int x : ans) printf(\"%d \", x);\r\nreturn 0;\r\n}"
}