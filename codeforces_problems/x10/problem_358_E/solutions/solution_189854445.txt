{
    "id": 189854445,
    "contestId": 358,
    "creationTimeSeconds": 1674226739,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 358,
        "index": "E",
        "name": "Dima and Kicks",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2300,
        "tags": [
            "brute force",
            "dsu",
            "graphs",
            "implementation"
        ]
    },
    "author": {
        "contestId": 358,
        "members": [
            {
                "handle": "DeadlyPillow"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1382715000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 9523200,
    "source": "///Etfsh5t nseet el rank\r\n#pragma GCC optimize(\"O3\")\r\n#pragma GCC optimize(\"unroll-loops\")\r\n#pragma GCC target(\"avx,avx2,fma\")\r\n#include \"bits/stdc++.h\"\r\nusing namespace std;\r\n\r\n#define pb push_back\r\n#define F first\r\n#define S second\r\n#define f(i, a, b) for (int i = a; i < b; i++)\r\n#define all(a) a.begin(), a.end()\r\n#define rall(a) a.rbegin(), a.rend()\r\n#define sz(x) (int)(x).size()\r\n#define mp(x, y) make_pair(x, y)\r\n#define popCnt(x) (__builtin_popcountll(x))\r\n//#define int ll\r\n\r\nusing ll = long long;\r\nusing ull = unsigned long long;\r\nusing uint = uint32_t;\r\nusing ii = pair<int, int>;\r\n\r\nconst int N = 3e5 + 5, A = 12, LG = 18, MOD = (119 << 23) + 1;\r\nconst long double PI = acos(-1);\r\nconst long double EPS = 1e-9;\r\nconst int dx[] = {-1,1,0,0};\r\nconst int dy[] = {0,0,-1,1};\r\nint n, m;\r\nint grid[1005][1005];\r\nbool vis[1005][1005];\r\nbool visDir[1005][1005][4];\r\nint cntOdd = 0, ans = 0;\r\nvoid dfs(int x, int y, int prvDir = -1, int curLen = 0) {\r\n    vis[x][y] = true;\r\n    int cnt = 0;\r\n    f(i,0,4) {\r\n        int nx = x + dx[i];\r\n        int ny = y + dy[i];\r\n        if(!nx||!ny||nx>n||ny>m||!grid[nx][ny])continue;\r\n        if(visDir[x][y][i])continue;\r\n        visDir[x][y][i]=visDir[nx][ny][i^1]=true;\r\n        if(prvDir != i)ans = __gcd(ans, curLen);\r\n        cnt += 1;\r\n        dfs(nx,ny,i,curLen * (i == prvDir) + 1);\r\n    }\r\n    if(!cnt)ans = __gcd(ans, curLen);\r\n}\r\nvoid doWork() {\r\n\r\n    cin >> n >> m;\r\n    f(i,1,n+1)\r\n    f(j,1,m+1)  cin >> grid[i][j];\r\n    f(i,1,n+1)\r\n    f(j,1,m+1)if(grid[i][j]) {\r\n        int cnt = 0;\r\n        f(k,0,4) {\r\n            cnt += grid[i+dx[k]][j+dy[k]];\r\n        }\r\n        cntOdd += (cnt & 1);\r\n    }\r\n\r\n    if(cntOdd!=0 && cntOdd != 2) {\r\n        cout << \"-1\\n\";\r\n        return;\r\n    }\r\n    int cntVis = 0;\r\n    for(int i = 1; i <= n; i++)\r\n    for(int j = 1; j <= m; j++) {\r\n        if(!vis[i][j] && grid[i][j]) {\r\n            dfs(i, j);\r\n            cntVis += 1;\r\n        }\r\n    }\r\n    if(ans < 2 || cntVis > 1) {\r\n        cout << \"-1\\n\";\r\n        return;\r\n    }\r\n\r\n    f(i,2,ans+1)if(ans%i==0)cout << i << ' ';\r\n\r\n}\r\nint32_t main(){\r\n#ifdef ONLINE_JUDGE\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n#endif // ONLINE_JUDGE\r\n    int t = 1;\r\n//     cin >> t;\r\n    while (t--)\r\n        doWork();\r\n\r\n    return 0;\r\n}\r\n"
}