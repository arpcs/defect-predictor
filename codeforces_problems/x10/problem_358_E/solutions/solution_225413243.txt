{
    "id": 225413243,
    "contestId": 358,
    "creationTimeSeconds": 1695749098,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 358,
        "index": "E",
        "name": "Dima and Kicks",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2300,
        "tags": [
            "brute force",
            "dsu",
            "graphs",
            "implementation"
        ]
    },
    "author": {
        "contestId": 358,
        "members": [
            {
                "handle": "SamyakSinghania"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1382715000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 28364800,
    "source": "#include<bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n#define int long long\r\n#define double long double\r\n#define endl \"\\n\"\r\n#define input(a) for(auto &x:a) cin>>x\r\n#define all(x) x.begin(),x.end()\r\n#define rsort(c) sort(all(c)); reverse(all(c))\r\n#define sz(c) (int)c.size()\r\n#define print(a) for(auto x : a) cout << x << \" \"; cout << endl\r\n#define print1(a) for(auto x : a) cout << x.first << \" \" << x.second << endl\r\n#define printall(a) for(auto x:a){ print(x); } cout<<endl\r\n#define fil(ar, val) memset(ar, val, sizeof(ar))  // 0x3f for inf, 0x80 for -INF can also use with pairs\r\n\r\ntypedef vector<int> vi;\r\ntypedef vector<vector<int>> vvi;\r\ntypedef pair<int,int> pi;\r\ntypedef vector<pair<int,int>> vpi;\r\n\r\ntemplate<typename T> using PQ = priority_queue<T>;\r\ntemplate<typename T> using QP = priority_queue<T,vector<T>,greater<T>>;\r\ntemplate<typename T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\ntemplate<typename T> using ordered_multiset = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\ntemplate<typename T>T min(const vector<T>&v){return *min_element(v.begin(),v.end());}\r\ntemplate<typename T>T max(const vector<T>&v){return *max_element(v.begin(),v.end());}\r\ntemplate<typename T>T acc(const vector<T>&v){return accumulate(v.begin(),v.end(),T(0));};\r\n\r\n#ifndef ONLINE_JUDGE\r\n#include<debug.h>\r\n#else\r\n#define bug(...)\r\n#define bug1(...)\r\n#define debug(x)\r\n#endif\r\n\r\n// mt19937 rng(chrono::high_resolution_clock::now().time_since_epoch().count());\r\n// cout<<rng()%100<<endl;\r\n\r\nint gcd(int a, int b){\r\n    return b == 0 ? a : gcd(b, a % b);   \r\n}\r\nint digitsum(int n){int ret=0;while(n){ret+=n%10;n/=10;}return ret;}\r\nint power(int x,int n){\r\n    if(n==0)    return 1;\r\n    int a=power(x,n/2);\r\n    if(n%2==0)  return (a*a);\r\n    else    return (a*a*x);\r\n}\r\nvoid myerase(ordered_set<int> &s, int v){\r\n    int rank = s.order_of_key(v);\r\n    auto it = s.find_by_order(rank);\r\n    s.erase(it);\r\n}\r\nvoid myerase(ordered_multiset<int> &s, int v){\r\n    int rank = s.order_of_key(v);\r\n    auto it = s.find_by_order(rank);\r\n    s.erase(it);\r\n}\r\nint isPerfectSquare(int x) {\r\n    int s = (int) sqrtl(x);\r\n    while (s * s < x) s++;\r\n    while (s * s > x) s--;\r\n    return s*s==x;\r\n}\r\n\r\nconst int maxn=1005;\r\nint a[maxn][maxn],mark[maxn][maxn];\r\nint dy[]={0,1,0,-1};\r\nint dx[]={1,0,-1,0};\r\nbool vis[maxn][maxn];\r\nint size1=0;\r\nvoid dfs(int x,int y){\r\n    size1++;\r\n    vis[x][y]=1;\r\n    for(int i=0;i<4;i++){\r\n        int ny=x+dy[i];\r\n        int nx=y+dx[i];\r\n        if(!vis[ny][nx] && a[ny][nx]){\r\n            dfs(ny,nx);\r\n        }\r\n    }\r\n}\r\n//DECLARE DP GLOBALLY;\r\n//THINK BEFORE USING SET/MULTISET;\r\nvoid solve(){\r\n    //observations-\r\n    // the route can be either a cycle or a path with (start and end) points\r\n    // turning points are crucial to calculate k;\r\n    // all the points should be reachable from any 1 point\r\n    // the final answer will be all the diivisor of K\r\n    int n,m;\r\n    cin>>n>>m;\r\n    int x1=0;\r\n    for(int i=1;i<=n;i++){\r\n        for(int j=1;j<=m;j++){\r\n            cin>>a[i][j];\r\n            x1+=a[i][j];\r\n        }\r\n    }\r\n    int flag=0;\r\n    for(int i=1;i<=n;i++){\r\n        for(int j=1;j<=m;j++){\r\n            if(a[i][j]){\r\n                dfs(i,j);\r\n                bug1(size1,x1);\r\n                if(size1!=x1){\r\n                    cout<<-1<<endl;\r\n                    return;\r\n                }\r\n                else{\r\n                    flag=1;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(flag)    break;\r\n    }\r\n    int p1=0;\r\n    for(int i=1;i<=n;i++){\r\n        for(int j=1;j<=m;j++){if(!a[i][j])  continue;\r\n            int on[4]={};\r\n            int sum=0;\r\n            for(int k=0;k<4;k++){\r\n                int ny=i+dy[k];\r\n                int nx=j+dx[k];\r\n                on[k]=a[ny][nx];\r\n                sum+=on[k];\r\n            }\r\n            if(sum==1 || ((on[0]||on[2]) && (on[1]||on[3]))){\r\n                mark[i][j]=1;\r\n            }\r\n            if(sum&1){\r\n                bug(i,j,sum);\r\n                p1++;\r\n            }\r\n        }\r\n    }\r\n    debug(p1);\r\n    if(!(p1==0 || p1==2)){\r\n        cout<<-1<<endl;\r\n        return;\r\n    }\r\n    int g=-1;\r\n    for(int i=1;i<=n;i++){\r\n        int pre=-1;\r\n        for(int j=1;j<=m;j++){\r\n            if(mark[i][j]){\r\n                if(pre!=-1){\r\n                    if(g==-1){\r\n                        g=j-pre;\r\n                    }\r\n                    else{\r\n                        g=gcd(g,j-pre);\r\n                    }\r\n                }\r\n                else{\r\n                    pre=j;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    for(int j=1;j<=m;j++){\r\n        int pre=-1;\r\n        for(int i=1;i<=n;i++){\r\n            if(mark[i][j]){\r\n                if(pre!=-1){\r\n                    if(g==-1){\r\n                        g=i-pre;\r\n                    }\r\n                    else{\r\n                        g=gcd(g,i-pre);\r\n                    }\r\n                }\r\n                else{\r\n                    pre=i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if(g<2){\r\n        cout<<-1<<endl;\r\n        return;\r\n    }\r\n    for(int i=2;i<=g;i++){\r\n        if(g%i==0){\r\n            cout<<i<<\" \";\r\n        }\r\n    }\r\n    cout<<endl;\r\n    return;\r\n}\r\nsigned main(){\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    // int tt=1;\r\n    int t=1;\r\n    // cin>>t;\r\n    while(t--){\r\n        // cout<<\"Case #\"<<tt<<\": \";\r\n        // tt++;\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}