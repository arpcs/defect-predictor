{
    "id": 235575269,
    "contestId": 358,
    "creationTimeSeconds": 1701617819,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 358,
        "index": "E",
        "name": "Dima and Kicks",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2300,
        "tags": [
            "brute force",
            "dsu",
            "graphs",
            "implementation"
        ]
    },
    "author": {
        "contestId": 358,
        "members": [
            {
                "handle": "zbceyond"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1382715000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 561,
    "memoryConsumedBytes": 3174400,
    "source": "#include<iostream>\r\nusing namespace std;\r\n\r\nint N,M;\r\nbool mark[1002][1002];\r\nbool isv[1002][1002];\r\n\r\nbool visited[1002][1002];\r\n\r\nint gcd(int a, int b){\r\n    if (a<0) a = -a;\r\n    if (b<0) b = -b;\r\n    while(a>0){\r\n        int tmp = a;\r\n        a = b%a;\r\n        b = tmp;\r\n    }\r\n    return b;\r\n}\r\n\r\nvoid s(int i, int j){\r\n    visited[i][j] = true;\r\n    if (!visited[i+1][j] && mark[i+1][j]) s(i+1,j);\r\n    if (!visited[i-1][j] && mark[i-1][j]) s(i-1,j);\r\n    if (!visited[i][j+1] && mark[i][j+1]) s(i,j+1);\r\n    if (!visited[i][j-1] && mark[i][j-1]) s(i,j-1);\r\n}\r\n\r\nbool isconnected(){\r\n    bool f = true;\r\n    for (int i=0;i<N+2 && f;i++){\r\n        for (int j=0;j<N+2 && f;j++){\r\n            if (mark[i][j]){s(i,j);f = false;}\r\n        }\r\n    }\r\n    for (int i=0;i<N+2;i++) for (int j=0;j<N+2;j++){\r\n        if (mark[i][j] && !visited[i][j]) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n\r\n\r\nint main(){\r\n    cin>>N>>M;\r\n    for (int i=0;i<N+2; i++) for (int j=0;j<N+2;j++) mark[i][j] = isv[i][j] = false;\r\n    for (int i=1;i<=N;i++){\r\n        for (int j=1;j<=M;j++){\r\n            cin>>mark[i][j];\r\n        }\r\n    }\r\n    int odd = 0;\r\n    int num = 0;\r\n\r\n    for (int i=1;i<=N;i++){\r\n        for (int j=1;j<=M;j++){\r\n            if (mark[i][j]){\r\n                num++;\r\n                if ((mark[i-1][j] || mark[i+1][j]) && (mark[i][j-1] || mark[i][j+1])){\r\n                    isv[i][j] = true;\r\n                }\r\n                if (mark[i+1][j]^mark[i-1][j]^mark[i][j-1]^mark[i][j+1]){\r\n                    isv[i][j] = true;\r\n                    odd++;\r\n                    if (odd>2){\r\n                        cout<<\"-1\"; return 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (!isconnected() || num<2) {cout<<-1; return 0;}\r\n    bool found = false;\r\n    int x, y;\r\n    int ans = 0;\r\n    for (int i=1;i<=N;i++){\r\n        for (int j=1;j<=M;j++){\r\n            if (isv[i][j]){\r\n                if (!found) {found = true;  x = i; y = j;}\r\n                ans = gcd(ans,x-i);\r\n                ans = gcd(ans,y-j);\r\n            }\r\n        }\r\n    }\r\n    if (ans==1) {cout<<\"-1\"; return 0;}\r\n    for (int i=2;i<=ans;i++) if (ans%i==0) cout<<i<<\" \";\r\n\r\n}\r\n"
}