{
    "id": 221556205,
    "contestId": 1436,
    "creationTimeSeconds": 1693652156,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1436,
        "index": "B",
        "name": "Prime Square",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 900,
        "tags": [
            "constructive algorithms",
            "math"
        ]
    },
    "author": {
        "contestId": 1436,
        "members": [
            {
                "handle": "arpit.ras"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1603548300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 819200,
    "source": "//      \u091c\u092f \u0936\u094d\u0930\u0940 \u0930\u093e\u092e     //\r\n/* \r\n        \u0939\u0930\u0947 \u0915\u0943\u0937\u094d\u0923 \u0939\u0930\u0947 \u0915\u0943\u0937\u094d\u0923\r\n \r\n        \u0915\u0943\u0937\u094d\u0923 \u0915\u0943\u0937\u094d\u0923 \u0939\u0930\u0947 \u0939\u0930\u0947 \r\n \r\n        \u0939\u0930\u0947 \u0930\u093e\u092e \u0939\u0930\u0947 \u0930\u093e\u092e\r\n \r\n        \u0930\u093e\u092e \u0930\u093e\u092e \u0939\u0930\u0947 \u0939\u0930\u0947\u0965   \r\n                          */                             \r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nlong long modu    = 1e9+7; \r\nlong long modu9   = 998244353;\r\n// when 10^9 +7 modulus is required\r\nlong long inf     = 1e18+5 ;\r\nlong long stdsize = 1e9 ;\r\ntypedef long long ll ;\r\ntypedef unsigned long long int lll ; \r\n#define int long long\r\n#define nl '\\n'\r\n#define endl '\\n'\r\n#define vi  vector<int> \r\n#define pii pair<int,int>\r\n#define fr first\r\n#define sc second\r\n#define sp \" \"\r\n#define mkpr make_pair\r\n#define all(x)  (x).begin(),(x).end()\r\n#define gcd(a,b)   __gcd(a,b)  \r\n#define vpi vector<pii> \r\n#define vvi vector<vi>\r\n#define vvpi vector<vpi>\r\n#define itlp(it,v)  for(auto it=v.begin();it!=v.end();it++)\r\n#define mst(a,val)  memset(a,val,sizeof(a)) \r\n#define pn {cout<<\"NO\"<<nl; return;}\r\n#define prDouble(x) cout << fixed << setprecision(10) << x<<sp;\r\n#define py {cout<<\"YES\"<<nl; return;}\r\nvoid envecel(vector<int> &v,int n) ;\r\nvoid printvec(vector<int> &v) ;\r\nvoid print2dvecc(vector<vector<char>> &g );\r\nvoid print2dveci(vector<vector<int>> &g );\r\n \r\n// template<typename T>vector<T> \r\n// slicevec (vector<T> const &v, int m, int n) \r\n// { auto first = v.begin() + m;\r\n//    auto last = v.begin() + n + 1;\r\n//    vector<T> vector(first, last);\r\n//    return vector ;}\r\n \r\ninline void debugMode() ;\r\nlong long bin_exponent(ll a,ll b,ll c) ;\r\nstring i2b(int n);\r\nlong long negexp(long long ans,int mod) ;\r\nstring inttostr(long long n) ;\r\nvoid pr(deque<int> &dq) ;\r\nvoid pr();\r\n\r\n// void precompute_fact();\r\n// int u=300005;\r\n// long long fact[300005];\r\n// long long binfact[300005];\r\n \r\nint dx[4]={1,0,-1,0};\r\nint dy[4]={0,-1,0,1};\r\n\r\nbool isvalid(int i,int j, int n , int m)\r\n{\r\n    if(i<0 || i>=n ||j<0 || j>=m)\r\n        return false;\r\n    return true;\r\n}\r\n\r\nset<int> prime;\r\nvoid gen()\r\n{\r\n   if(!prime.empty())\r\n      return ;\r\n   vector<int> s(1e5,0);\r\n   for(int i=2;i<=10055;i++)\r\n   {\r\n      if(s[i])\r\n          continue;\r\n       prime.insert(i);\r\n       for(int j=2*i;j<=10055;j+=i)\r\n         s[j]=1;\r\n   }\r\n}\r\nvoid solve()\r\n{\r\n   gen();\r\n   int n;\r\n   cin>>n;\r\n   if(prime.count(n))\r\n   {\r\n      for(int i=0;i<n;i++)\r\n      {\r\n         for(int j=0;j<n;j++)\r\n         {\r\n            cout<<1<<sp;\r\n         }\r\n         cout<<nl;\r\n      }\r\n   }\r\n   else\r\n   {\r\n      int sum= n*(n-1);\r\n      int x= *prime.upper_bound(sum);\r\n      int req= x-sum;\r\n      for(int i=0;i<n;i++)\r\n      {\r\n         for(int j=0;j<n;j++)\r\n         {\r\n            if(i==j)\r\n               cout<<req<<sp;\r\n            else\r\n               cout<<n<<sp;\r\n         }\r\n         cout<<nl;\r\n      }\r\n   }\r\n   \r\n\r\n}\r\n\r\nvoid pr(deque<int> &dq)\r\n{\r\n     \r\n}\r\n \r\nvoid pr()\r\n{\r\n    \r\n}       \r\nsigned main()\r\n{   \r\nios_base::sync_with_stdio(false);\r\n  cin.tie(NULL);\r\n  cout.tie(NULL);\r\n  //debugMode();\r\n  //precompute_fact();\r\n  int t=1;\r\n  cin>>t; \r\n  while(t--)\r\n  { \r\n    // int x=\r\n     solve();\r\n    // if(x==0)\r\n    //   cout<<-1<<nl;\r\n  }\r\n}\r\nvoid print2dveci(vector<vector<int>> &g )\r\n{\r\n  int n=g.size();\r\n   int i;\r\n   for(i=0;i<n;i++)\r\n   {\r\n     cout<<i<<\" -> \";\r\n        for(auto v:g[i])\r\n        {\r\n            if(v==1000000000000000000 )\r\n                cout<<\".\"<<sp;\r\n            else\r\n            cout<<v<<sp;\r\n        }\r\n        cout<<nl;\r\n   }\r\n   cout<<nl;\r\n}\r\n\r\nvoid print2dvecc(vector<vector<char>> &g )\r\n{\r\n   int n=g.size();\r\n   int i;\r\n   for(i=0;i<n;i++)\r\n   {\r\n     cout<<i<<\" -> \";\r\n        for(auto v:g[i])\r\n        {\r\n            cout<<v<<sp;\r\n        }\r\n        cout<<nl;\r\n   }\r\n   cout<<nl;\r\n}\r\nvoid envecel(vector<int> &v,int n)\r\n{ \r\n    int q;\r\n   for(int i=0;i<n;i++)\r\n   {\r\n      cin>>q;\r\n      v.push_back(q);\r\n   }\r\n}\r\n\r\nvoid printvec(vector< int > &v)\r\n{\r\n    int i;\r\n    int n=v.size();\r\n for(i=0;i<n;i++)\r\n   {\r\n      cout<<v[i]<<sp;\r\n   }\r\n //  cout<<sp;\r\n   cout<<\"\\n\";\r\n}\r\ninline void debugMode() \r\n {   \r\n  \r\n  // #ifndef ONLINE_JUDGE\r\n  // freopen(\"input.txt\", \"r\", stdin);\r\n  // freopen(\"output.txt\", \"w\", stdout);\r\n  // #endif // ONLINE_JUDGE}\r\n  // to find precision of any data type\r\n // std::cout << std::numeric_limits<unsigned long long>::digits10 << std::endl;\r\n}\r\nstring i2b(int n)\r\n{\r\n  string s;\r\n  while(n)\r\n  {\r\n     int x=n%2; n/=2;\r\n     s+=(x+'0');\r\n  }\r\n  reverse(all(s));\r\n  return s;\r\n}\r\nlong long bin_exponent(ll a,ll b,ll c=1e9 +7)\r\n { \r\n    ll ans=1;\r\n   while(b)\r\n   {\r\n    if(b%2==1)\r\n    {\r\n        ans=(1LL*ans*a)%c;\r\n    }\r\n    a=(1LL*a*a)%c;\r\n    b/=2;\r\n   }\r\n   // ans+=c; ans%=c;\r\n   return ans;}\r\nlong long negexp(long long ans,int mod)\r\n   { return (((ans%mod)+mod)%mod);\r\n   }\r\nstring inttostr(long long n) \r\n  { \r\n  stringstream ss;\r\n  ss<<n;\r\n  string ans;\r\n  ss>>ans;\r\n  return ans;\r\n  }\r\n\r\n//---------BELLMAN FORD CODE-----------\r\n\r\n//   int n,m;\r\n// struct edge\r\n// {\r\n//     int a, b, cost;\r\n// };\r\n\r\n// int  v;\r\n// vector<edge> e;\r\n// void solve()\r\n// {   \r\n//     cin>>n>>m;\r\n//     for(int i=0;i<m;i++)\r\n//     {\r\n//         int a,b,cost;\r\n//         cin>>a>>b>>cost;\r\n//         a--; \r\n//         b--;\r\n//         edge c;\r\n//         c.a=a; c.b=b; c.cost=cost;\r\n//         e.push_back(c);\r\n//     }\r\n//    vector<int> d (n, inf);\r\n//     d[v] = 0;\r\n//     for (int i=0; i<n-1; ++i)\r\n//        { \r\n//         for (int j=0; j<m; ++j)\r\n//          { \r\n//           if(d[e[j].a] < inf)\r\n//             d[e[j].b] = min (d[e[j].b], d[e[j].a] + e[j].cost);\r\n//          }\r\n//       }\r\n//       cout<<d[n-1]<<nl;\r\n//     //  cout<<\"OK\"<<nl;\r\n// }\r\n\r\n//void prstack(stack<int> st)\r\n// {\r\n//    while(!st.empty())\r\n//    {\r\n//      cout<<st.top()<<sp;\r\n//      st.pop();\r\n//    }\r\n//    cout<<nl;\r\n// }\r\n// void prqueue(queue<int> q)\r\n// {\r\n//     while(!q.empty())\r\n//     {\r\n//         cout<<q.front()<<sp;\r\n//         q.pop();\r\n//     }\r\n//     cout<<nl;\r\n// }\r\n// -------------DISJOINT SET CODE------------\r\n\r\n\r\n// vi par;\r\n// vi sz;\r\n// int findpar(int x)\r\n// {\r\n//     if(x==par[x])\r\n//         return x;\r\n//     else\r\n//         return par[x]=findpar(par[x]);\r\n// }\r\n// int ncp;    //shows no of connected components (init by n)\r\n// int mx;    // shows maximum size of connected components(init by 1) \r\n// void merge(int a,int b)\r\n// {\r\n//     int p1=findpar(a);\r\n//     int p2=findpar(b);\r\n//     if(p1==p2)\r\n//         return;\r\n//     if(sz[p1]>sz[p2])\r\n//     {\r\n//         par[p2]=p1;\r\n//         sz[p1]+=sz[p2];\r\n//         mx=max(mx,sz[p1]);\r\n//     }\r\n//     else\r\n//     {\r\n//         par[p1]=p2;\r\n//         sz[p2]+=sz[p1];\r\n//         mx=max(mx,sz[p2]);\r\n//     }\r\n//     ncp--;\r\n// }\r\n////// when size of vector is not given but input is given\r\n// void in(int n)\r\n// {\r\n//     string s;\r\n//     cin.ignore();\r\n//     for(int i=0;i<n;i++)\r\n//     {\r\n//         getline(cin,s);\r\n//         stringstream in(s);\r\n//         int a;\r\n//         while(in>>a)\r\n//         {\r\n//             people[i+1][a] = 1;\r\n//         }\r\n//     }\r\n// }"
}