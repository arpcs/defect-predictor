{
    "id": 231865539,
    "contestId": 1359,
    "creationTimeSeconds": 1699397493,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1359,
        "index": "E",
        "name": "Modular Stability",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "combinatorics",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1359,
        "members": [
            {
                "handle": "mayer1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1590676500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 7987200,
    "source": "// LUOGU_RID: 133921135\n#include <bits/stdc++.h>\r\n\r\n#define int long long\r\n\r\n#define FOR(a, b, c) for (int a = b, _ = c; a <= _; ++a)\r\n#define REP(a, b, c) for (int a = b, _ = c; a >= _; --a)\r\n\r\nusing namespace std;\r\n\r\nconst int MaxN = 5e5 + 5, Mod = 998244353;\r\n\r\n// int n, k, cnt;\r\n\r\n// int a[10], p[10];\r\n\r\n// void dfs(int x, int las)\r\n// {\r\n//     if (x > k)\r\n//     {\r\n//         bool ans = true;\r\n        \r\n//         FOR(i, 1, k) p[i] = i;\r\n//         do\r\n//         {\r\n//             FOR(i, 0, n)\r\n//             {\r\n//                 int val = i;\r\n//                 FOR(j, 1, k) val %= a[p[j]];\r\n//                 if (val != i % a[1]) { ans = false; break; }\r\n//             }\r\n//             if (!ans) break;\r\n//         } while (next_permutation(p + 1, p + 1 + k));\r\n\r\n//         // if (ans) FOR(i, 1, k) cout << a[i] << \" \\n\"[i == k];\r\n//         if (ans)\r\n//         {\r\n//             FOR(i, 1, k) cout << a[i] << \" \\n\"[i == k];\r\n//             cnt++;\r\n//         }\r\n//         else\r\n//         {\r\n//             cout << \"FALSE\\n\";\r\n//         }\r\n//         return;\r\n//     }\r\n\r\n//     FOR(i, las + 1, n)\r\n//     {\r\n//         a[x] = i;\r\n//         dfs(x + 1, i);\r\n//     }\r\n// }\r\n\r\nint n, k;\r\n\r\nint qpow(int x, int y)\r\n{\r\n    if (y == 0) return 1;\r\n    int res = qpow(x, y / 2);\r\n    res = res * res % Mod;\r\n    if (y & 1) res = res * x % Mod;\r\n    return res;\r\n}\r\n\r\nint fac[MaxN], inv[MaxN];\r\n\r\nvoid init(int n)\r\n{\r\n    FOR(i, fac[0] = 1, n) fac[i] = fac[i - 1] * i % Mod;\r\n    inv[n] = qpow(fac[n], Mod - 2);\r\n    REP(i, n, 1) inv[i - 1] = inv[i] * i % Mod;\r\n}\r\n\r\nint C(int n, int m)\r\n{\r\n    if (m > n) return 0;\r\n    return fac[n] * inv[m] % Mod * inv[n - m] % Mod;\r\n}\r\n\r\nsigned main()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin >> n >> k;\r\n\r\n    // dfs(1, 0);\r\n    init(max(n, k));\r\n\r\n    int ans = 0;\r\n\r\n    FOR(i, 1, n)\r\n    {\r\n        // cerr << n / i - 1 << ':' << k - 1 << '\\n';\r\n        (ans += C(n / i - 1, k - 1)) %= Mod;\r\n    }\r\n    cout << ans;\r\n}"
}