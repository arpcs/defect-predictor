{
    "contestId": 1359,
    "index": "E",
    "name": "Modular Stability",
    "type": "PROGRAMMING",
    "rating": 2000,
    "tags": [
        "combinatorics",
        "math",
        "number theory"
    ],
    "desc": {
        "title": "E. Modular Stability",
        "statement": "<p>We define $$$x \\bmod y$$$ as the remainder of division of $$$x$$$ by $$$y$$$ ($$$\\%$$$ operator in C++ or Java, <span class=\"tex-font-style-tt\">mod</span> operator in Pascal).</p><p>Let's call an array of positive integers $$$[a_1, a_2, \\dots, a_k]$$$ <span class=\"tex-font-style-it\">stable</span> if for every permutation $$$p$$$ of integers from $$$1$$$ to $$$k$$$, and for every non-negative integer $$$x$$$, the following condition is met:</p><center> $$$ (((x \\bmod a_1) \\bmod a_2) \\dots \\bmod a_{k - 1}) \\bmod a_k = (((x \\bmod a_{p_1}) \\bmod a_{p_2}) \\dots \\bmod a_{p_{k - 1}}) \\bmod a_{p_k} $$$ </center><p>That is, for each non-negative integer $$$x$$$, the value of $$$(((x \\bmod a_1) \\bmod a_2) \\dots \\bmod a_{k - 1}) \\bmod a_k$$$ does not change if we reorder the elements of the array $$$a$$$.</p><p>For two given integers $$$n$$$ and $$$k$$$, calculate the number of <span class=\"tex-font-style-it\">stable</span> arrays $$$[a_1, a_2, \\dots, a_k]$$$ such that $$$1 \\le a_1 &lt; a_2 &lt; \\dots &lt; a_k \\le n$$$.</p>",
        "inputSpecification": "<p>The only line contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\le n, k \\le 5 \\cdot 10^5$$$).</p>",
        "outputSpecification": "<p>Print one integer \u2014 the number of <span class=\"tex-font-style-it\">stable</span> arrays $$$[a_1, a_2, \\dots, a_k]$$$ such that $$$1 \\le a_1 &lt; a_2 &lt; \\dots &lt; a_k \\le n$$$. Since the answer may be large, print it modulo $$$998244353$$$.</p>",
        "samples": [
            {
                "input": "\n7 3\n",
                "output": "\n16\n"
            },
            {
                "input": "\n3 7\n",
                "output": "\n0\n"
            },
            {
                "input": "\n1337 42\n",
                "output": "\n95147305\n"
            },
            {
                "input": "\n1 1\n",
                "output": "\n1\n"
            },
            {
                "input": "\n500000 1\n",
                "output": "\n500000\n"
            }
        ],
        "note": null
    }
}