{
    "id": 223308131,
    "contestId": 1017,
    "creationTimeSeconds": 1694673918,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1017,
        "index": "H",
        "name": "The Films",
        "type": "PROGRAMMING",
        "points": 3250.0,
        "rating": 3300,
        "tags": [
            "brute force"
        ]
    },
    "author": {
        "contestId": 1017,
        "members": [
            {
                "handle": "feropen"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1533737100
    },
    "programmingLanguage": "GNU C11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 1e5+5;\r\nconst int K = 105;\r\nconst int V = 3e5;\r\nconst int mod = 998244353;\r\nconst int bl = 320;\r\ntypedef long long ll;\r\nint n,m,q,a[N];\r\nint cnt[N],lst[N],nxt[N],len[N],id[N],rem[N];\r\nint inv[V+5],ifac[V+5],fac[V+5],to[V+5],tot,C[N],ans[N];\r\nvector<int>mi[K][N],A[K];\r\nstruct Node{\r\n    int l,r,k,id;\r\n}b[N];\r\nbool cmp(Node i,Node j){return id[i.l]==id[i.l]?i.r < j.r:id[i.l]<id[j.l];}\r\nvoid add(int x)\r\n{\r\n    if(!rem[cnt[x]+1]) nxt[cnt[x]+1] = nxt[cnt[x]],lst[nxt[cnt[x]]] = cnt[x]+1,lst[cnt[x]+1] = cnt[x],nxt[cnt[x]] = cnt[x]+1;\r\n    if(rem[cnt[x]] == 1 && cnt[x]) lst[cnt[x]+1] = lst[cnt[x]],nxt[lst[cnt[x]]] = cnt[x]+1;\r\n    rem[cnt[x]]--;\r\n    cnt[x]++;\r\n    rem[cnt[x]]++;\r\n}\r\nvoid del(int x)\r\n{\r\n    if(!rem[cnt[x]-1]) lst[cnt[x]-1] = lst[cnt[x]],nxt[lst[cnt[x]]] = cnt[x]-1,nxt[cnt[x]-1] = cnt[x],lst[cnt[x]] = cnt[x]-1;\r\n    if(rem[cnt[x]] == 1) nxt[cnt[x]-1] = nxt[cnt[x]],lst[nxt[cnt[x]]] = cnt[x]-1;\r\n    rem[cnt[x]]--;\r\n    cnt[x]--;\r\n    rem[cnt[x]]++;\r\n}\r\nvoid build(int k)\r\n{\r\n    to[k] = ++tot;\r\n    for(int i = 0;i <= n;i++) if(len[i]) mi[tot][i].resize(len[i]+1);\r\n    C[tot] = 1;\r\n    for(int i = 1;i <= m;i++) C[tot] = 1ll*C[tot]*fac[cnt[i]+k]%mod;\r\n    A[tot].resize(n+1);\r\n    A[tot][0] = 1;\r\n    for(int i = 1;i <= n;i++) A[tot][i] = 1ll*A[tot][i-1]*(1ll*m*k+i)%mod;\r\n    for(int i = 0;len[i];i++)\r\n    {\r\n        int t = ifac[k+i];\r\n        mi[tot][i][0] = 1;\r\n        for(int j = 1;j <= len[i];j++) mi[tot][i][j] = 1ll*mi[tot][i][j-1]*t%mod;\r\n    }\r\n}\r\nint main()\r\n{\r\n    scanf(\"%d%d%d\",&n,&m,&q);\r\n    for(int i = 1;i <= n;i++) scanf(\"%d\",a+i),cnt[a[i]]++,id[i] = (i-1)/bl+1;\r\n    for(int i = 1;i <= m;i++) len[cnt[i]]++,cnt[i] = 0;\r\n    for(int i = n;i > 0;i--) len[i-1] += len[i]; \r\n    inv[1] = ifac[1] = ifac[0] = fac[1] = fac[0] = 1;\r\n    rem[0] = m;\r\n    for(int i = 2;i <= V;i++)\r\n    {\r\n        inv[i] = mod-1ll*mod/i*inv[mod%i]%mod;\r\n        ifac[i] = 1ll*ifac[i-1]*inv[i]%mod;\r\n        fac[i] = 1ll*fac[i-1]*i%mod;\r\n    }\r\n    for(int i = 1;i <= n;i++) add(a[i]);\r\n    for(int i = 1;i <= q;i++)\r\n    {\r\n        scanf(\"%d%d%d\",&b[i].l,&b[i].r,&b[i].k);\r\n        if(!to[b[i].k]) build(b[i].k);\r\n        b[i].k = to[b[i].k];\r\n        b[i].id = i;\r\n    }\r\n    sort(b+1,b+1+q,cmp);\r\n    for(int i = 1,L = 1,R = 0;i <= q;i++)\r\n    {\r\n        int l = b[i].l,r = b[i].r,k = b[i].k;\r\n        while(R < r) del(a[++R]);\r\n        while(L > l) del(a[--L]);\r\n        while(R > r) add(a[R--]);\r\n        while(L < l) add(a[L++]);\r\n        ll cur = 1ll*A[k][l-1+n-r]*C[k]%mod;\r\n        for(int i = 0,flag = 1;i || flag;i = nxt[i],flag = 0) cur = cur * mi[k][i][rem[i]]%mod;\r\n        ans[b[i].id] = cur;\r\n    }\r\n    for(int i = 1;i <= q;i++) printf(\"%d\\n\",ans[i]);\r\n    return 0;\r\n}"
}