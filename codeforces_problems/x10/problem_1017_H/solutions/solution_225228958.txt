{
    "id": 225228958,
    "contestId": 1017,
    "creationTimeSeconds": 1695717197,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1017,
        "index": "H",
        "name": "The Films",
        "type": "PROGRAMMING",
        "points": 3250.0,
        "rating": 3300,
        "tags": [
            "brute force"
        ]
    },
    "author": {
        "contestId": 1017,
        "members": [
            {
                "handle": "Nogtade"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1533737100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 2948,
    "memoryConsumedBytes": 296038400,
    "source": "// LUOGU_RID: 126191758\n// K\u4e0d\u540c\uff0c\u4e0d\u597d\u7ef4\u62a4\uff0c \u76f4\u63a5\u6309K\u5206\u7c7b,\u8dd1\u83ab\u961f \r\n// \u03c0A_^ * (Anum^(r - l + 1))\r\n//\u7ef4\u62a4\u5de6\u8fb9 \r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n#define LL long long \r\nconst int MAX = 1e5 + 70;\r\nconst int MOD = 998244353;\r\nint n, m, q, a[MAX], bl[MAX], tot[MAX], ID[MAX], NUM = 0;\r\nint blen; //\u5757\u957f \r\nLL c[MAX]; // \u8868\u793a\u5f53\u524d\u51fa\u73b0\u7684\u5143\u7d20\u4e2a\u6570 \r\nLL b[MAX]; //\u8868\u793a\u6bcf\u79cd\u5143\u7d20\u62e5\u6709\u591a\u5c11\u4e2a \r\nLL S[MAX], ANS, INV[MAX], ans[MAX]; // \u8868\u793aAnum^(r - l + 1);\r\nstruct node { int l, r, id; }K[120][MAX];\r\nbool mycmp(node X, node Y) { return bl[X.l] < bl[Y.l] || (bl[X.l] == bl[Y.l] && X.r < Y.r); }\r\nLL quick_mi(LL x, LL y) {\r\n\tLL xx = x, res = 1;\r\n\twhile(y) {\r\n\t\tif(y % 2) res = res * xx % MOD;\r\n\t\ty /= 2;\r\n\t\txx = xx * xx % MOD; \r\n\t}\r\n\treturn res % MOD;\r\n}\r\nvoid prework(LL num, LL ADD) { //\u5904\u7406 A_num^(r - l + 1) \r\n\tmemset(S, 0, sizeof(S));\r\n\tS[n] = 1; for(int i = n - 1; i >= 0; i--) S[i] = (S[i + 1] * (num - i) % MOD); \r\n\tfor(int i = 1; i <= n; i++) b[a[i]]++;\r\n\tfor(int i = 1; i <= m; i++) b[i] = (b[i] + ADD) % MOD; //\u8868\u793a\u5f53\u524d\u6bcf\u79cd\u5143\u7d20\u6709\u591a\u5c11 \u4e2a \r\n}\r\nvoid add(LL x) {\r\n\tANS = ANS * (b[x] - c[x]) % MOD;\r\n\tc[x] = (c[x] + 1) % MOD;\r\n}\r\nvoid red(int x) {\r\n\tc[x]--;\r\n\tANS = ANS * (INV[b[x] - c[x]]) % MOD;\r\n}\r\nvoid work(int x, int k) {\r\n//\tif(tot[x] == 0) return ;\r\n\tmemset(c, 0, sizeof(c));\r\n\tmemset(b, 0, sizeof(b));\r\n\tprework(k * m + n, k), ANS = 1;\r\n\tsort(K[x] + 1, K[x] + tot[x] + 1, mycmp);\r\n\tint l = K[x][1].l, r = K[x][1].r;\r\n\tfor(int i = l; i <= r; i++) add(a[i]);\r\n//\tprintf(\"k %d ANS %d \\n\", k, ANS);\r\n\tans[K[x][1].id] = ANS * S[(r - l + 1)] % MOD;\r\n\tfor(int i = 2; i <= tot[x]; i++) {\r\n\t\twhile(l > K[x][i].l) add(a[--l]);\r\n\t\twhile(l < K[x][i].l) red(a[l++]);\r\n\t\twhile(r > K[x][i].r) red(a[r--]);\r\n\t\twhile(r < K[x][i].r) add(a[++r]);\r\n\t\tans[K[x][i].id] = ANS * S[(r - l + 1)] % MOD; \r\n\t}\r\n}\r\nsigned main() {\r\n\tscanf(\"%lld%lld%lld\", &n, &m, &q);\r\n\tfor(int i = 0; i <= n; i++) { INV[i] = (quick_mi(i, MOD - 2)); } \r\n\tblen = pow(n, (2.0 / 3.0));\r\n\tfor(int i = 1; i <= n; i++) bl[i] = (i - 1) / blen + 1;\r\n\tfor(int i = 1; i <= n; i++) scanf(\"%lld\", &a[i]);\r\n\tfor(int i = 1; i <= q; i++) {\r\n\t\tint l, r, k; scanf(\"%lld%lld%lld\", &l, &r, &k);\r\n\t\tif(ID[k] == 0) ID[k] = ++NUM;\r\n\t\tK[ID[k]][++tot[ID[k]]] = {(node){l, r, i}}; \r\n\t}\r\n\tfor(int i = 0; i <= 1e5; i++) {\r\n\t\tif(ID[i]) work(ID[i], i); \r\n\t}\r\n\tfor(int i = 1; i <= q; i++) printf(\"%lld\\n\", ans[i]);\r\n\treturn 0;\r\n}"
}