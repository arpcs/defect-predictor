{
    "id": 223346236,
    "contestId": 1017,
    "creationTimeSeconds": 1694694613,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1017,
        "index": "H",
        "name": "The Films",
        "type": "PROGRAMMING",
        "points": 3250.0,
        "rating": 3300,
        "tags": [
            "brute force"
        ]
    },
    "author": {
        "contestId": 1017,
        "members": [
            {
                "handle": "a_z_c"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1533737100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 58,
    "timeConsumedMillis": 2339,
    "memoryConsumedBytes": 13516800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int maxn = 3e5 + 10;\r\nconst int mod = 998244353;\r\nint inv[maxn];\r\nint fac[maxn], ifac[maxn];\r\nint Pow(int a, int b, int mod) {\r\n\tint res = 1;\r\n\twhile(b) {\r\n\t\tif(b & 1) res = 1ll * res * a % mod;\r\n\t\ta = 1ll * a * a % mod, b >>= 1;\r\n\t}\r\n\treturn res;\r\n}\r\nint C(int n, int m) {\r\n\treturn 1ll * fac[n] * ifac[m] % mod * ifac[n - m] % mod;\r\n}\r\nint A(int n, int m) {\r\n\treturn 1ll * fac[n] * ifac[n - m] % mod;\r\n}\r\nint dn[maxn];\r\nint idn[maxn];\r\nint ccnt[maxn];\r\nint totc[maxn], tot, len, curk;\r\nint ans;\r\n\r\nvoid Add(int col) {\r\n\tans = 1ll * ans * ((totc[col] + curk - ccnt[col] + mod) % mod) % mod * idn[len] % mod * dn[len + 1] % mod;\r\n\tccnt[col]++;\r\n\tlen++;\r\n}\r\n\r\nvoid Del(int col) {\r\n\tans = 1ll * ans * inv[totc[col] + curk - ccnt[col] + 1] % mod * idn[len] % mod * dn[len - 1] % mod;\r\n\tccnt[col]--;\r\n\tlen--;\r\n}\r\nclass Query {\r\npublic:\r\n\tint l, r, id;\r\n\tQuery() = default;\r\n\tQuery(int l, int r, int id) : l(l), r(r), id(id){\r\n\t}\r\n};\r\nmap<int, vector<Query>> Q;\r\nint a[maxn];\r\nint n, m, q;\r\nint out[maxn];\r\nint main() {\r\n\tinv[1] = fac[0] = fac[1] = ifac[0] = ifac[1] = 1;\r\n\tfor(int i = 2; i < maxn; i++) {\r\n\t\tinv[i] = 1ll * (mod - mod / i) * inv[mod % i] % mod;\r\n\t\tfac[i] = 1ll * fac[i - 1] * i % mod;\r\n\t\tifac[i] = 1ll * ifac[i - 1] * inv[i] % mod;\r\n\t}\r\n\tcin >> n >> m >> q;\r\n\tfor(int i = 1; i <= n; i++) {\r\n\t\tcin >> a[i];\r\n\t\ttotc[a[i]]++;\r\n\t}\r\n\tfor(int i = 1; i <= q; i++) {\r\n\t\tint l, r, k;\r\n\t\tcin >> l >> r >> k;\r\n\t\tQ[k].emplace_back(l, r, i);\r\n\t}\r\n\tfor(auto &[k, seq] : Q) {\r\n\t\ttot = (n + 1ll * m * k % mod) % mod;\r\n\t\tint blc = max(3, (int)(n / sqrt(seq.size())));\r\n\t\tsort(seq.begin(), seq.end(), [blc](const Query &a, const Query &b) -> bool {\r\n\t\t\tif((a.l - 1) / blc == (b.l - 1) / blc) return (a.r < b.r) ^ (((a.l - 1) / blc ) & 1);\r\n\t\t\treturn (a.l - 1) / blc < (b.l - 1) / blc;\r\n\t\t});\r\n\t\tdn[n] = idn[n] = 1;\r\n\t\tfor(int i = n - 1; ~i; i--) dn[i] = 1ll * dn[i + 1] * (tot - i) % mod, idn[i] = Pow(dn[i], mod - 2, mod);\r\n\t\tint l = 1, r = 0;\r\n\t\tans = dn[0];\r\n\t\tcurk = k;\r\n\t\tlen = 0;\r\n\t\tmemset(ccnt, 0, sizeof(ccnt[0]) * (m + 1));\r\n\t\tfor(auto cur : seq) {\r\n\t\t\twhile(cur.l < l) Add(a[--l]);\r\n\t\t\twhile(cur.r > r) Add(a[++r]);\r\n\t\t\twhile(cur.l > l) Del(a[l++]);\r\n\t\t\twhile(cur.r < r) Del(a[r--]);\r\n\t\t\tout[cur.id] = ans;\r\n\t\t}\r\n\t}\r\n\tfor(int i = 1; i <= q; i++) {\r\n\t\tcout << out[i] << \"\\n\";\r\n\t}\r\n}"
}