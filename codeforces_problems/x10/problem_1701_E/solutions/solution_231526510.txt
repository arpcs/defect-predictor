{
    "id": 231526510,
    "contestId": 1701,
    "creationTimeSeconds": 1699233853,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1701,
        "index": "E",
        "name": "Text Editor",
        "type": "PROGRAMMING",
        "rating": 2500,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1701,
        "members": [
            {
                "handle": "bkifhr8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1657290900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 64,
    "timeConsumedMillis": 1107,
    "memoryConsumedBytes": 819200,
    "source": "#include <bits/stdc++.h>\n\nusing i64 = long long;\n\nconstexpr int inf = 1e9;\n\nvoid update(int &x, int y) {\n    if (x > y) {\n        x = y;\n    }\n}\n\nvoid solve() {\n    int N, M;\n    std::cin >> N >> M;\n    \n    std::string S, T;\n    std::cin >> S >> T;\n    \n    std::vector<std::vector<int>> dp(M + 1,\n                std::vector<int>    (3, inf));\n    dp[M][0] = 0;\n    for (int i = N; i >= 1; i--) {\n        std::vector<std::vector<int>> f(M + 1,\n                    std::vector<int>   (3, inf));\n        for (int j = M; j >= 0; j--) {\n            if (j - 1 >= 0 && S[i - 1] == T[j - 1]) {\n                update(f[j - 1][0], dp[j][0] + 1);\n            }\n            update(f[j][0], dp[j][0] + 1);\n            update(dp[j][1], dp[j][0]);\n            \n            if (j - 1 >= 0 && S[i - 1] == T[j - 1]) {\n                update(f[j - 1][1], dp[j][1]);\n            }\n            update(dp[j][2], dp[j][1] + 1);\n            \n            if (j - 1 >= 0 && S[i - 1] == T[j - 1]) {\n                update(f[j - 1][2], dp[j][2] + 1);\n            }\n            update(f[j][2], dp[j][2] + 2);\n        }\n        std::swap(dp, f);\n    }\n    for (int i = M; i >= 0; i--) {\n        update(dp[i][1], dp[i][0]);\n        update(dp[i][2], dp[i][1] + 1);\n    }\n    \n    int ans = std::min(dp[0][1], dp[0][2]);\n    std::cout << (ans != inf ? ans : -1) << \"\\n\";\n}\n\nint main() {\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(nullptr);\n    \n    int T;\n    std::cin >> T;\n    \n    while (T--) {\n        solve();\n    }\n    \n    return 0;\n}\n\t\t\t\t \t \t  \t   \t\t\t\t        \t\t\t\t\t"
}