{
    "id": 218054493,
    "contestId": 1704,
    "creationTimeSeconds": 1691601056,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1704,
        "index": "B",
        "name": "Luke is a Foodie",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1000,
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1704,
        "members": [
            {
                "handle": "tahauchiha11"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1659276300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 59,
    "timeConsumedMillis": 358,
    "memoryConsumedBytes": 9625600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long int ll;\r\ntypedef vector<int> vi;\r\ntypedef pair<int,int> pi;\r\n#define all(x) (x).begin(),(x).end()\r\n#define rall(x) x.rbegin(),x.rend()\r\n#define ff first\r\n#define ss second\r\n#define pb push_back\r\n#define mp make_pair\r\n#define endl \"\\n\"\r\n#define yes cout<<\"YES\"<<\"\\n\"\r\n#define no cout<<\"NO\"<<\"\\n\"\r\n#define rep(i,a,b) for (ll i = a; i < b; i++)\r\n#define rev(i,a,b) for(ll i=a;i>=b;i--)\r\n#define rev_sort(x) sort(all(x),greater<ll>())\r\n\r\nconst int mod=1e9+7;\r\nll binpow (ll a,ll b,ll m) {\r\n    \r\n    ll res = 1;\r\n    while (b > 0) {\r\n        if (b % 2 == 1) res = (res * a)%m;\r\n        a = a * a%m;\r\n        b = b / 2;\r\n    }\r\n    return res;\r\n}\r\nll inverse(ll b, ll mod) {\r\n    return binpow(b, mod - 2, mod);\r\n}\r\nint gcd(int a,int b){\r\n\tif(b==0)\r\n\t\treturn a;\r\n\telse\r\n\t\treturn gcd(b,a%b);\r\n}\r\nll M = 1000000;\r\nll sieve[1000000];\r\nvoid Createsieve()\r\n{\r\n\t\r\n   for(int i=1;i<=M;i++){\r\n   \tsieve[i]=i;\r\n   } \r\n   for(int i=2;i*i<=M;i++){\r\n   \tif(sieve[i]==i){\r\n   \tfor(int j=i*i;j<=M;j+=i){\r\n   \t\tif(sieve[j]==j){\r\n   \t\t\tsieve[j]=i;\r\n   \t\t}\r\n   \t}\r\n   }\r\n   }\r\n}\r\nint digitsum(int a){\r\n\tint result=0;\r\n\twhile(a>0){\r\n\t\tresult+=a%10;\r\n\t\ta/=10;\r\n\t}\r\n\treturn result;\r\n}\r\nll fact(ll n)\r\n{\r\n    ll factorial = 1;\r\n    for (int i = 1; i <= n; + +i)\r\n    {\r\n        factorial *= i;\r\n        factorial %= mod;\r\n    }\r\n    return factorial;\r\n}\r\n// Function to return Breadth First Traversal of given graph.\r\nvector<int> bfsOfGraph(int V, vector<int> adj[]) {\r\n    int vis[V] = {0}; \r\n    vis[0] = 1; \r\n    queue<int> q;\r\n    // push the initial starting node \r\n    q.push(0); \r\n    vector<int> bfs; \r\n    // iterate till the queue is empty \r\n    while(!q.empty()) {\r\n       // get the topmost element in the queue \r\n        int node = q.front(); \r\n        q.pop(); \r\n        bfs.push_back(node); \r\n        // traverse for all its neighbours \r\n        for(auto it : adj[node]) {\r\n            // if the neighbour has previously not been visited, \r\n            // store in Q and mark as visited \r\n            if(!vis[it]) {\r\n                vis[it] = 1; \r\n                q.push(it); \r\n            }\r\n        }\r\n    }\r\n    return bfs; \r\n}\r\nvoid dfs(int node, vector<int> adj[], int vis[], vector<int> &ls) {\r\n    vis[node] = 1; \r\n    ls.push_back(node); \r\n    // traverse all its neighbours\r\n    for(auto it : adj[node]) {\r\n        // if the neighbour is not visited\r\n        if(!vis[it]) {\r\n            dfs(it, adj, vis, ls); \r\n        }\r\n    }\r\n}\r\n// Function to return a list containing the DFS traversal of the graph.\r\nvector<int> dfsOfGraph(int V, vector<int> adj[]) {\r\n    int vis[V] = {0}; \r\n    int start = 0;\r\n    // create a list to store dfs\r\n    vector<int> ls; \r\n    // call dfs for starting node\r\n    dfs(start, adj, vis, ls); \r\n    return ls; \r\n}\r\nll lcm(ll a,ll b){\r\n\tll g=__gcd(a,b);\r\n\treturn (a*b/g);\r\n}\r\nll getClosestPerfectSquare(ll x){\r\n\tll y=sqrt(x);\r\n\tif((y*y)==x){\r\n\t\treturn x;\r\n\t}\r\n\tll z=(y+1)*(y+1);\r\n\treturn z;\r\n}\r\nvoid solve() {\r\n\tll n,x;\r\n\tcin>>n>>x;\r\n\tvector<ll> a(n);\r\n\trep(i,0,n){\r\n\t\tcin>>a[i];\r\n\t}\r\n\tll l=a[0]-x;\r\n\tll r=a[0]+x;\r\n\tll cnt=0;\r\n\trep(i,1,n){\r\n\t\tl=max(l,a[i]-x);\r\n\t\tr=min(r,a[i]+x);\r\n\t\tif(l>r){\r\n\t\t\tl=a[i]-x;\r\n\t\t\tr=a[i]+x;\r\n\t\t\tcnt++;\r\n\t\t}\r\n\t}\r\n\tcout<<cnt<<endl;\r\n}\r\nint main(){\r\n\t\r\n\tll t=1;\r\n\tcin>>t;\r\n\twhile(t--){\r\n\t\tsolve();\r\n   \t}\t\r\n\treturn 0;\r\n}"
}