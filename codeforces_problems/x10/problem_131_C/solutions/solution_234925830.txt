{
    "id": 234925830,
    "contestId": 131,
    "creationTimeSeconds": 1701261089,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 131,
        "index": "C",
        "name": "The World is a Theatre",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1400,
        "tags": [
            "combinatorics",
            "math"
        ]
    },
    "author": {
        "contestId": 131,
        "members": [
            {
                "handle": "codefierce"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1322233200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/*\n\n+---------------------------------------------+\n|                                             |\n|  \u00a9  Fortis Fortuna Adiuvat ~ codefierce     |\n|                                             |\n+---------------------------------------------+\n\n*/\n#include <algorithm>\n#include <array>\n#include <bitset>\n#include <cassert>\n#include <chrono>\n#include <climits>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n#include <iomanip>\n#include <iostream>\n#include <iterator>\n#include <map>\n#include <queue>\n#include <random>\n#include <set>\n#include <string>\n#include <unordered_map>\n#include <unordered_set>\n#include <vector>\n\nusing namespace std;\n\n#define int long long int\n#define float long double\n#define endl '\\n'\n#define all(p) begin(p), end(p)\n#define rall(p) rbegin(p), rend(p)\n#define sz(n) (int)n.size()\n#define hash_set unordered_set\n#define hash_map unordered_map\n#define add(num) emplace_back(num)\n#define srt(num) sort(all(num))\n#define rsrt(num) sort(rall(num))\n#define uniq(vec) vec.resize(unique(all(vec)) - vec.begin());\n#define toUpper(str) transform(str.begin(), str.end(), str.begin(), ::toupper)\n#define toLower(str) transform(str.begin(), str.end(), str.begin(), ::tolower)\n#define setbits(x) __builtin_popcountll(x)\n\n#ifndef ONLINE_JUDGE\n#include \"debug.h\"\n#else\n#define debug(...) 42\n#endif\n\ntemplate <typename T>\nusing min_pq = priority_queue<T, vector<T>, greater<T>>;\n\ntemplate <typename T>\nusing max_pq = priority_queue<T>;\n\ntemplate <typename T>\nistream& operator>>(istream& cin, vector<T>& a) {\n  for (auto& x : a) cin >> x;\n  return cin;\n}\n\ntemplate <typename... Args>\nvoid in(Args&... args) {\n  ((cin >> args), ...);\n}\n\ntemplate <typename... Args>\nvoid printInline(Args const&... args) {\n  bool firstArg = true;\n  ((cout << (firstArg ? \"\" : \" \") << args, firstArg = false), ...);\n}\n\ntemplate <typename... Args>\nvoid print(Args const&... args) {\n  printInline(args...);\n  cout << endl;\n}\n\nvoid printNo() { print(\"NO\"); }\nvoid printYes() { print(\"YES\"); }\nvoid print_yn(bool b, string ans1 = \"YES\", string ans2 = \"NO\") {\n  cout << ((b ? ans1 : ans2)) << endl;\n}\nvoid print_ans_flt(float n, int prec = 10) { cout << fixed << setprecision(prec) << n << endl; }\n\ntemplate <typename T>\nusing vv = vector<vector<T>>;\nusing vi = vector<int>;\nusing vpp = vector<pair<int, int>>;\n\ntemplate <typename T>\nvv<T> make_vector(int rows, int cols, T init_value) {\n  vv<T> mat(rows, vector<T>(cols, init_value));\n  return mat;\n}\n\nint parseInt(string num, int base = 10) {\n  return sz(num) == 0 ? 0 : stoll(num, nullptr, base);\n}\n\nstring bin(int num, int bits = 32) {\n  return bitset<32>(num).to_string().substr(32 - bits);\n}\n\nvoid print_arr(vector<int> arr) {\n  for (int i : arr) {\n    cout << i << \" \";\n  }\n  cout << endl;\n}\n\ntemplate <typename T>\nstruct range_iterator {\n  using iterator_category = random_access_iterator_tag;\n  using value_type = T;\n  using difference_type = ptrdiff_t;\n  using pointer = T*;\n  using reference = T&;\n\n  T value, step;\n  range_iterator(T value, T step) : value(value), step(step) {}\n  range_iterator& operator++() {\n    value += step;\n    return *this;\n  }\n  bool operator==(range_iterator const& other) const {\n    return step > 0 ? value >= other.value : value <= other.value;\n  }\n  bool operator!=(range_iterator const& other) const {\n    if (step > 0) {\n      return value < other.value;\n    } else {\n      return value > other.value;\n    }\n  }\n  T operator*() const { return value; }\n};\n\ntemplate <typename T>\nstruct range_struct {\n  T start, stop, step;\n\n  range_struct(T start, T stop)\n      : start(start), stop(stop), step(start < stop ? 1 : -1) {}\n  range_struct(T start, T stop, T step)\n      : start(start), stop(stop), step(start < stop ? step : -1 * step) {}\n  range_iterator<T> begin() { return range_iterator<T>(start, step); }\n  range_iterator<T> end() { return range_iterator<T>(stop, step); }\n};\n\ntemplate <typename T>\nrange_struct<T> range(T begin, T end, T step = 1) {\n  return range_struct<T>(begin, end, step);\n}\n\ntemplate <typename T>\nrange_struct<T> range(T end) {\n  return range_struct<T>(T{}, end);\n}\n\n//  find_by_order - nth element in sorted sequence\n//  order_of_key - order of element in sorted sequence\nusing namespace __gnu_pbds;\n\ntemplate <class T>\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\ntemplate <class T>\nusing ordered_multiset = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\nconst int N = 30 + 1;\nconst int INF = 1e18;\nconst int mod = 1e9 + 7;\n\nvector<int> fact(N, 0), inv_fact(N, 0);\nint modpow(int a, int n, int mod) {\n  a %= mod;\n  int res = 1;\n  while (n > 0) {\n    if (n & 1) {\n      res = res * a % mod;\n    }\n    a = a * a % mod;\n    n >>= 1;\n  }\n  return res;\n}\nint mod_inverse(int n, int p) {\n  return modpow(n, p - 2, p);\n}\n\nint C(int n, int r) {\n  if (r == n) return 1;\n  if (r > n)\n    return 0;\n  return fact[n] * inv_fact[r] % mod * inv_fact[n - r] % mod;\n}\n// add this to setup\nvoid init_combination() {\n  fact[0] = inv_fact[0] = 1;\n  for (int i = 1; i <= N; i++) {\n    fact[i] = (fact[i - 1] * i) % mod;\n    inv_fact[i] = mod_inverse(fact[i], mod);\n  }\n}\n\nvoid setup() {\n  init_combination();\n}\n\nvoid solve() {\n  int n, m, t;\n  in(n, m, t);\n  int boys = 0;\n  debug(C(5, 4));\n  debug(C(5, 5));\n  int ans = 0;\n  for (int i = max(4ll, t - m); i <= min(n, t - 1); i++) {\n    int curr = C(n, i) * C(m, t - i);\n    ans += curr;\n  }\n  print(ans);\n}\n\nsigned main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n\n  setup();\n  int t = 1;\n  // in(t);\n\n  while (t--) {\n    solve();\n  }\n\n  return 0;\n};"
}