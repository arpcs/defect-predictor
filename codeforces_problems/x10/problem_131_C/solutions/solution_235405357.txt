{
    "id": 235405357,
    "contestId": 131,
    "creationTimeSeconds": 1701530964,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 131,
        "index": "C",
        "name": "The World is a Theatre",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1400,
        "tags": [
            "combinatorics",
            "math"
        ]
    },
    "author": {
        "contestId": 131,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1322233200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 16076800,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n\n\n\n#define ll long long\n#define pii pair<int,int>\n#define pll pair<ll,ll>\n#define pb push_back\n#define  el '\\n'\n#define all(x) x.begin(),x.end()\nll mod = 1e9+7;\nconst ll INF = 0x3f3f3f3f3f3f3f3f;\n//const int INF = 1e9;\nconst int N = 1e6;\n\nbool cmp(const pair<int, int>& a,const pair<int, int>& b){\n    if(a.first == b.first)\n        return a.second > b.second;\n\n    return a.first < b.first;\n}\n\n\n//bool cmp(const string& a,const string& b){return a+b < b+a;}\n\n\n\n\n// knight movse\n//int dx[] = {-2, -2, 2, 2, -1, -1, 1, 1};\n//int dy[] = {-1, 1, 1, -1, -2, 2, -2, 2};\n\nint dx[] = {1, -1, 0, 0, -1, -1, 1, 1};\nint dy[] = {0, 0, 1, -1, -1, 1, 1, -1};\n\nconst char dc[4]={'U','R','D','L'};\n#define HereWeGo() ios::sync_with_stdio(0),cin.tie(nullptr),cout.tie(nullptr);\n\nll fac[N+1];\nll inv[N+1];\nll exp(ll x, ll n, ll m) {\n    x %= m;\n    ll res = 1;\n    while (n > 0) {\n        if (n % 2 == 1) { res = res * x % m; }\n        x = x * x % m;\n        n /= 2;\n    }\n    return res;\n}\n\nvoid factorial() {\n    fac[0] = 1;\n    for (int i = 1; i <= N; i++) { fac[i] = fac[i - 1] * i % mod; }\n}\n\nvoid inverses() {\n    inv[N] = exp(fac[N], mod - 2, mod);\n    for (int i = N; i >= 1; i--) { inv[i - 1] = inv[i] * i % mod; }\n}\n\nll choose(int n, int r) { return fac[n] * inv[r] % mod * inv[n - r] % mod; }\n\n\nvoid RunCase() {\n    factorial();\n    inverses();\n    int n,m,t;\n    cin >> n >> m >> t;\n    ll res = 0;\n    for (int i = 4; i <= n ; ++i) {\n        if(t-i <= m && t-i >= 1){\n            res += (choose(n,i)%mod*choose(m,t-i)%mod)%mod;\n            res %= mod;\n        }\n    }\n    cout << res << el;\n\n\n}\n\n\n\n\n\n\n\n\n\n\nint main(){\n    HereWeGo();\n    //    freopen(\"moocast.in\", \"r\", stdin);\n    //    freopen(\"moocast.out\", \"w\", stdout);\n    int t = 1;\n//    cin >> t;\n\n//    getline(cin , s);\n    for (int i = 0; i < t; ++i)\n    {\n        //        cout<<\"Case #\"<<i+1<<\": \";\n        RunCase();\n    }\n    return 0;\n}\n\t\t\t   \t\t  \t\t\t   \t  \t\t  \t\t \t\t\t\t"
}