{
    "id": 230237042,
    "contestId": 750,
    "creationTimeSeconds": 1698508788,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 750,
        "index": "H",
        "name": "New Year and Snowy Grid",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3500,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "interactive"
        ]
    },
    "author": {
        "contestId": 750,
        "members": [
            {
                "handle": "nguyenquocthinhhung"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1483107300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 16,
    "timeConsumedMillis": 358,
    "memoryConsumedBytes": 78643200,
    "source": "#include<cstdio>\r\n#include<algorithm>\r\n#define ull unsigned long long\r\nusing namespace std;\r\nvoid read(int &res)\r\n{\r\n\tres=0;char ch=getchar();\r\n\twhile(ch<'0'||ch>'9') ch=getchar();\r\n\twhile('0'<=ch&&ch<='9') res=(res<<1)+(res<<3)+(ch^48),ch=getchar();\r\n}\r\nvoid readc(char &ch)\r\n{\r\n\tch=getchar();\r\n\twhile(ch!='#'&&ch!='.') ch=getchar();\r\n}\r\nconst int N=1010;\r\nconst int dx[8]={-1,-1,-1,0,0,1,1,1};\r\nconst int dy[8]={-1,0,1,-1,1,-1,0,1};\r\nconst int dex[16]={-2,-2,-2,-2,-2,-1,-1,0,0,1,1,2,2,2,2,2};\r\nconst int dey[16]={-2,-1,0,1,2,-2,2,-2,2,-2,2,-2,-1,0,1,2};\r\nbool vis[N+10][N+10];\r\nint h,w,q;\r\nint id(int x,int y){return x*(w+2)+y+1;}\r\nint fa[N*N+10],g[N*N+10],x[N+10],y[N+10];\r\nvector<pair<int,int> > p;\r\nint findfa(int x)\r\n{\r\n\tif(fa[x]==x) return x;\r\n\telse\r\n\t{\r\n\t\tp.push_back({x,fa[x]});\r\n\t\treturn fa[x]=findfa(fa[x]);\r\n\t}\r\n}\r\nvoid merge(int x,int y)\r\n{\r\n\tx=findfa(x),y=findfa(y);\r\n\tif(x!=y)\r\n\t{\r\n\t\tp.push_back({x,fa[x]});\r\n\t\tfa[x]=y;\r\n\t}\r\n}\r\nint findfa1(int x)\r\n{\r\n\tif(fa[x]==x) return x;\r\n\telse return fa[x]=findfa1(fa[x]);\r\n}\r\nvoid merge1(int x,int y)\r\n{\r\n\tx=findfa1(x),y=findfa1(y);\r\n\tif(x!=y) fa[x]=y;\r\n}\r\nconst ull mod=999979;\r\nstruct hash_table\r\n{\r\n\tint st[mod+10],tot;\r\n\tstruct edge\r\n\t{\r\n\t\tull key;int last;\r\n\t}e[N*N*4];\r\n\tvoid insert(ull key)\r\n\t{\r\n\t\tull h=key%mod;\r\n\t\tfor(int i=st[h];i!=0;i=e[i].last)\r\n\t\t\tif(e[i].key==key)\r\n\t\t\t\treturn;\r\n\t\te[++tot].key=key;\r\n\t\te[tot].last=st[h];\r\n\t\tst[h]=tot;\r\n\t}\r\n\tbool query(ull key)\r\n\t{\r\n\t\tull h=key%mod;\r\n\t\tfor(int i=st[h];i!=0;i=e[i].last)\r\n\t\t\tif(e[i].key==key)\r\n\t\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n}t;\r\nvoid print()\r\n{\r\n\tfor(int i=0;i<=h+1;i++,puts(\"\"))\r\n\t\tfor(int j=0;j<=w+1;j++)\r\n\t\t\tprintf(\"%3d \",findfa(id(i,j)));\r\n\tputs(\"\");\r\n}\r\nint main()\r\n{\r\n//\tfreopen(\"a.in\",\"r\",stdin);\r\n\tread(h),read(w),read(q);\r\n\tfor(int i=1;i<=h;i++)\r\n\t\tfor(int j=1;j<=w;j++)\r\n\t\t{\r\n\t\t\tchar ch;readc(ch);\r\n\t\t\tvis[i][j]=(ch=='.');\r\n\t\t}\r\n\tvis[0][0]=vis[0][1]=vis[1][0]=vis[h+1][w+1]=vis[h][w+1]=vis[h+1][w]=true;\r\n\tfor(int i=0;i<=h+1;i++)\r\n\t\tfor(int j=0;j<=w+1;j++)\r\n\t\t\tfa[id(i,j)]=id(i,j);\r\n\tfor(int i=0;i<=h+1;i++)\r\n\t\tfor(int j=0;j<=w+1;j++)\r\n\t\t{\r\n\t\t\tif(vis[i][j]) continue;\r\n\t\t\tif(i>0&&!vis[i-1][j]) merge1(id(i,j),id(i-1,j));\r\n\t\t\tif(j>0&&!vis[i][j-1]) merge1(id(i,j),id(i,j-1));\r\n\t\t\tif(i>0&&j>0&&!vis[i-1][j-1]) merge1(id(i,j),id(i-1,j-1));\r\n\t\t\tif(i>0&&j<w+1&&!vis[i-1][j+1]) merge1(id(i,j),id(i-1,j+1));\r\n\t\t}\r\n\tfor(int i=0;i<=h+1;i++)\r\n\t\tfor(int j=0;j<=w+1;j++)\r\n\t\t\tfa[id(i,j)]=findfa1(id(i,j));\r\n\tfor(int i=1;i<=h;i++)\r\n\t\tfor(int j=1;j<=w;j++)\r\n\t\t{\r\n\t\t\tif(!vis[i][j]) continue;\r\n\t\t\tif(i==1&&j==1||i==h&&j==w) continue;\r\n\t\t\tg[0]=0;\r\n\t\t\tfor(int d=0;d<8;d++)\r\n\t\t\t\tif(!vis[i+dx[d]][j+dy[d]])\r\n\t\t\t\t\tg[++g[0]]=fa[id(i+dx[d],j+dy[d])];\r\n\t\t\tfor(int k=1;k<=g[0];k++)\r\n\t\t\t\tfor(int w=k+1;w<=g[0];w++)\r\n\t\t\t\t\tif(g[k]!=g[w])\r\n\t\t\t\t\t\tt.insert((ull)N*N*g[k]+g[w]),t.insert((ull)N*N*g[w]+g[k]);\r\n\t\t}\r\n\tif(fa[id(h+1,0)]==fa[id(0,w+1)])\r\n\t{\r\n\t\tfor(;q--;)\r\n\t\t{\r\n\t\t\tputs(\"NO\\n\");\r\n\t\t\tfflush(stdout);\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\tfor(int k;q--;)\r\n\t{\r\n\t\tread(k);\r\n\t\tfor(int i=1;i<=k;i++) read(x[i]),read(y[i]);\r\n\t\tg[0]=0,g[++g[0]]=fa[id(h+1,0)],g[++g[0]]=fa[id(0,w+1)];\r\n\t\tfor(int i=1;i<=k;i++)\r\n\t\t\tfor(int d=0;d<8;d++)\r\n\t\t\t\tif(!vis[x[i]+dx[d]][y[i]+dy[d]])\r\n\t\t\t\t\tg[++g[0]]=fa[id(x[i]+dx[d],y[i]+dy[d])];\r\n\t\tfor(int i=1;i<=k;i++)\r\n\t\t{\r\n\t\t\tvis[x[i]][y[i]]=false;\r\n\t\t\tfor(int d=0;d<8;d++)\r\n\t\t\t\tif(!vis[x[i]+dx[d]][y[i]+dy[d]])\r\n\t\t\t\t\tmerge(id(x[i],y[i]),id(x[i]+dx[d],y[i]+dy[d]));\r\n\t\t}\r\n\t\tbool ans=true;\r\n\t\tif(findfa(id(h+1,0))==findfa(id(0,w+1))) ans=false;\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor(int i=1;i<=k;i++)\r\n\t\t\t{\r\n\t\t\t\tfor(int d=0;d<16;d++)\r\n\t\t\t\t{\r\n\t\t\t\t\tint Dx=x[i]+dex[d],Dy=y[i]+dey[d];\r\n\t\t\t\t\tif(0<=Dx&&Dx<=h+1&&0<=Dy&&Dy<=w+1&&!vis[Dx][Dy])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(findfa(id(h+1,0))==findfa(id(Dx,Dy))&&findfa(id(0,w+1))==findfa(id(x[i],y[i]))\r\n\t\t\t\t\t\t||findfa(id(h+1,0))==findfa(id(x[i],y[i]))&&findfa(id(0,w+1))==findfa(id(Dx,Dy)))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tans=false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!ans) break;\r\n\t\t\t}\r\n\t\t\tif(ans)\r\n\t\t\t{\r\n\t\t\t\tfor(int i=1;i<=g[0];i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor(int j=1;j<=g[0];j++)\r\n\t\t\t\t\t\tif(g[i]!=g[j])\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(t.query((ull)N*N*g[i]+g[j]))\r\n\t\t\t\t\t\t\t\tif(findfa(id(h+1,0))==findfa(g[i])&&findfa(id(0,w+1))==findfa(g[j]))\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tans=false;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tif(!ans) break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(!ans) puts(\"NO\");\r\n\t\telse puts(\"YES\");\r\n\t\tfflush(stdout);\r\n\t\tfor(int i=1;i<=k;i++) vis[x[i]][y[i]]=true;\r\n\t\treverse(p.begin(),p.end());\r\n\t\tfor(auto v:p) fa[v.first]=v.second;\r\n\t\tp.clear();\r\n\t}\r\n\treturn 0;\r\n}\r\n \t\t\t \t  \t\t  \t\t\t\t\t\t   \t \t  \t\t \t\t"
}