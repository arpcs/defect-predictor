{
    "id": 231112187,
    "contestId": 750,
    "creationTimeSeconds": 1699012343,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 750,
        "index": "H",
        "name": "New Year and Snowy Grid",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3500,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "interactive"
        ]
    },
    "author": {
        "contestId": 750,
        "members": [
            {
                "handle": "Max_s_xaM"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1483107300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 16,
    "timeConsumedMillis": 514,
    "memoryConsumedBytes": 11468800,
    "source": "// LUOGU_RID: 133137277\n#include <iostream>\r\n#include <algorithm>\r\n#include <map>\r\n\r\ntypedef long long ll;\r\ntypedef double lf;\r\n\r\n#define DEBUG 1\r\nstruct IO\r\n{\r\n    #define MAXSIZE (1 << 20)\r\n    #define isdigit(x) (x >= '0' && x <= '9')\r\n    char buf[MAXSIZE], *p1, *p2;\r\n    char pbuf[MAXSIZE], *pp;\r\n    #if DEBUG\r\n    #else\r\n    IO() : p1(buf), p2(buf), pp(pbuf) {}\r\n    ~IO() {fwrite(pbuf, 1, pp - pbuf, stdout);}\r\n    #endif\r\n    #define gc() (p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, MAXSIZE, stdin), p1 == p2) ? ' ' : *p1++)\r\n    #define blank(x) (x == ' ' || x == '\\n' || x == '\\r' || x == '\\t')\r\n\r\n    template <typename T>\r\n    void Read(T &x)\r\n    {\r\n        #if DEBUG\r\n        std::cin >> x;\r\n        #else\r\n        bool sign = 0; char ch = gc(); x = 0;\r\n        for (; !isdigit(ch); ch = gc())\r\n            if (ch == '-') sign = 1;\r\n        for (; isdigit(ch); ch = gc()) x = x * 10 + (ch ^ 48);\r\n        if (sign) x = -x;\r\n        #endif\r\n    }\r\n    void Read(char *s)\r\n    {\r\n        char ch = gc();\r\n        for (; blank(ch); ch = gc());\r\n        for (; !blank(ch); ch = gc()) *s++ = ch;\r\n        *s = 0;\r\n    }\r\n    void Read(char &c) {for (c = gc(); blank(c); c = gc());}\r\n\r\n    void Push(const char &c)\r\n    {\r\n        #if DEBUG\r\n        putchar(c);\r\n        #else\r\n        if (pp - pbuf == MAXSIZE) fwrite(pbuf, 1, MAXSIZE, stdout), pp = pbuf;\r\n        *pp++ = c;\r\n        #endif\r\n    }\r\n    template <typename T>\r\n    void Write(T x)\r\n    {\r\n        if (x < 0) x = -x, Push('-');\r\n        static T sta[35];\r\n        int top = 0;\r\n        do sta[top++] = x % 10, x /= 10; while (x);\r\n        while (top) Push(sta[--top] ^ 48);\r\n    }\r\n    template <typename T>\r\n    void Write(T x, char lst) {Write(x), Push(lst);}\r\n} IO;\r\n#define Read(x) IO.Read(x)\r\n#define Write(x, y) IO.Write(x, y)\r\n#define Put(x) IO.Push(x)\r\n\r\nusing namespace std;\r\n\r\nconst int MAXN = 1010, MAXM = 1e6 + 10;\r\nconst int dx[8] = {-1, 0, 1, 1, 1, 0, -1, -1}, dy[8] = {-1, -1, -1, 0, 1, 1, 1, 0};\r\nconst int cx[16] = {-2, -1, 0, 1, 2, 2, 2, 2, 2, 1, 0, -1, -2, -2, -2, -2}, cy[16] = {-2, -2, -2, -2, -2, -1, 0, 1, 2, 2, 2, 2, 2, 1, 0, -1};\r\n\r\nint n, m, q;\r\nchar mp[MAXN][MAXN];\r\nint bel[MAXM], tot;\r\nmap <ll, int> HASH;\r\n#define hash(x, y) HASH[(ll)x * MAXN + y]\r\n\r\nint fa[MAXM];\r\nint Find(int k) {return k == fa[k] ? k : fa[k] = Find(fa[k]);}\r\ninline void Union(int u, int v) {u = Find(u), v = Find(v); if (u != v) fa[u] = v;}\r\n\r\nint main()\r\n{\r\n    #if DEBUG\r\n    #else\r\n    ios::sync_with_stdio(0), cin.tie(0);\r\n    #endif\r\n    cin >> n >> m >> q;\r\n    for (int i = 1; i <= n; i++) cin >> mp[i] + 1;\r\n    for (int i = 1; i <= n * m + 2; i++) fa[i] = i;\r\n    for (int i = 1; i <= n; i++)\r\n        for (int j = 1; j <= m; j++)\r\n            if (mp[i][j] == '#')\r\n            {\r\n                for (int k = 0; k < 8; k++)\r\n                {\r\n                    int x = i + dx[k], y = j + dy[k];\r\n                    if (x < 1 || x > n || y < 1 || y > m || mp[x][y] == '.') continue;\r\n                    Union((i - 1) * m + j, (x - 1) * m + y);\r\n                }\r\n                if (i == n || j == 1) Union(n * m + 1, (i - 1) * m + j);\r\n                if (i == 1 || j == m) Union(n * m + 2, (i - 1) * m + j);\r\n            }\r\n    for (int i = 1; i <= n * m + 2; i++)\r\n        if ((i > n * m || mp[(i - 1) / m + 1][(i - 1) % m + 1] == '#') && fa[i] == i) bel[i] = ++tot;\r\n    for (int i = 1; i <= n * m + 2; i++) bel[i] = bel[Find(i)];\r\n    // for (int i = 1; i <= n; i++, cout << \"\\n\")\r\n    //     for (int j = 1; j <= m; j++) cout << bel[(i - 1) * m + j] << \" \";\r\n    // cout << bel[n * m + 1] << \" \" << bel[n * m + 2] << \"\\n\\n\";\r\n    for (int i = 1; i <= n; i++)\r\n        for (int j = 1; j <= m; j++)\r\n            if (mp[i][j] == '#')\r\n            {\r\n                for (int k = 0; k < 16; k++)\r\n                {\r\n                    int x = i + cx[k], y = j + cy[k];\r\n                    if (x < 1 || x > n || y < 1 || y > m || mp[x][y] == '.') continue;\r\n                    if (bel[(i - 1) * m + j] != bel[(x - 1) * m + y])\r\n                        hash(bel[(i - 1) * m + j], bel[(x - 1) * m + y])++, hash(bel[(x - 1) * m + y], bel[(i - 1) * m + j])++;\r\n                }\r\n                if ((i >= n - 1 || j <= 2) && bel[n * m + 1] != bel[(i - 1) * m + j])\r\n                    hash(bel[n * m + 1], bel[(i - 1) * m + j])++, hash(bel[(i - 1) * m + j], bel[n * m + 1])++;\r\n                if ((i <= 2 || j >= m - 1) && bel[n * m + 2] != bel[(i - 1) * m + j])\r\n                    hash(bel[n * m + 2], bel[(i - 1) * m + j])++, hash(bel[(i - 1) * m + j], bel[n * m + 2])++;\r\n            }\r\n    static int p, ax[15], ay[15], id[15], blk[100], top;\r\n    static int e[1000][2], cnt, cur;\r\n    if (bel[n * m + 1] == bel[n * m + 2] || hash(bel[n * m + 1], bel[n * m + 2]))\r\n    {\r\n        while (q--)\r\n        {\r\n            cin >> p;\r\n            while (p--) cin >> ax[p] >> ay[p];\r\n            cout << \"NO\\n\", fflush(stdout);\r\n        }\r\n        return 0;\r\n    }\r\n    for (int i = 1; i <= tot; i++) fa[i] = i;\r\n    while (q--)\r\n    {\r\n        cin >> p;\r\n        blk[1] = bel[n * m + 1], blk[2] = bel[n * m + 2], top = 2;\r\n        cnt = 0, cur = tot;\r\n        for (int i = 1; i <= p; i++)\r\n        {\r\n            cin >> ax[i] >> ay[i];\r\n            id[i] = ++cur, fa[cur] = cur, mp[ax[i]][ay[i]] = '#';\r\n            for (int k = 0; k < 8; k++)\r\n            {\r\n                int x = ax[i] + dx[k], y = ay[i] + dy[k];\r\n                if (x < 1 || x > n || y < 1 || y > m || mp[x][y] == '.') continue;\r\n                Union(cur, bel[(x - 1) * m + y]);\r\n                blk[++top] = bel[(x - 1) * m + y];\r\n            }\r\n            if (ax[i] == n || ay[i] == 1) Union(cur, bel[n * m + 1]);\r\n            if (ax[i] == 1 || ay[i] == m) Union(cur, bel[n * m + 2]);\r\n            bel[(ax[i] - 1) * m + ay[i]] = Find(id[i]);\r\n        }\r\n        sort(blk + 1, blk + top + 1), top = unique(blk + 1, blk + top + 1) - blk - 1;\r\n        // for (int i = 1; i <= cur; i++) cout << Find(i) << \" \"; cout << \"\\n\";\r\n        for (int i = 1; i <= p; i++)\r\n        {\r\n            for (int k = 0; k < 16; k++)\r\n            {\r\n                int x = ax[i] + cx[k], y = ay[i] + cy[k];\r\n                if (x < 1 || x > n || y < 1 || y > m || mp[x][y] == '.') continue;\r\n                // cout << \"Near \" << Find(id[i]) << \" \" << Find(bel[(x - 1) * m + y]) << \" #\\n\";\r\n                if (Find(id[i]) != Find(bel[(x - 1) * m + y]))\r\n                    hash(Find(id[i]), Find(bel[(x - 1) * m + y]))++, hash(Find(bel[(x - 1) * m + y]), Find(id[i]))++,\r\n                    e[++cnt][0] = Find(id[i]), e[cnt][1] = Find(bel[(x - 1) * m + y]);\r\n            }\r\n            if ((ax[i] >= n - 1 || ay[i] <= 2) && Find(bel[n * m + 1]) != Find(id[i]))\r\n                hash(Find(id[i]), Find(bel[n * m + 1]))++, hash(Find(bel[n * m + 1]), Find(id[i]))++,\r\n                e[++cnt][0] = Find(id[i]), e[cnt][1] = Find(bel[n * m + 1]);\r\n                // cout << \"Near \" << Find(id[i]) << \" \" << Find(bel[n * m + 1]) << \"\\n\";\r\n            if ((ax[i] <= 2 || ay[i] >= m - 1) && Find(bel[n * m + 2]) != Find(id[i]))\r\n                hash(Find(id[i]), Find(bel[n * m + 2]))++, hash(Find(bel[n * m + 2]), Find(id[i]))++,\r\n                e[++cnt][0] = Find(id[i]), e[cnt][1] = Find(bel[n * m + 2]);\r\n                // cout << \"Near \" << Find(id[i]) << \" \" << Find(bel[n * m + 2]) << \"\\n\";\r\n        }\r\n        if (Find(bel[n * m + 1]) == Find(bel[n * m + 2]) || hash(Find(bel[n * m + 1]), Find(bel[n * m + 2]))) cout << \"NO\\n\", fflush(stdout);\r\n        else\r\n        {\r\n            // for (int i = 1; i <= top; i++) cout << Find(blk[i]) << \" \"; cout << \"\\n\";\r\n            // cout << Find(bel[n * m + 1]) << \" \" << Find(bel[n * m + 2]) << \"\\n\";\r\n            bool flag = 1;\r\n            for (int i = 1; i <= top; i++)\r\n                for (int j = 1; j <= top; j++)\r\n                    if (i != j && Find(blk[i]) == Find(bel[n * m + 1]) && Find(blk[j]) == Find(bel[n * m + 2]) && hash(blk[i], blk[j]))\r\n                    {\r\n                        // cout << hash(Find(blk[i]), Find(blk[j])) << \"\\n\";\r\n                        flag = 0;\r\n                        break;\r\n                    }\r\n            if (flag) cout << \"YES\\n\";\r\n            else cout << \"NO\\n\";\r\n            fflush(stdout);\r\n        }\r\n        for (int i = 1; i <= p; i++) mp[ax[i]][ay[i]] = '.', bel[(ax[i] - 1) * m + ay[i]] = 0;\r\n        for (int i = 1; i <= top; i++) fa[blk[i]] = blk[i];\r\n        for (int i = 1; i <= cnt; i++) hash(e[i][0], e[i][1])--, hash(e[i][1], e[i][0])--;\r\n    }\r\n    return 0;\r\n}"
}