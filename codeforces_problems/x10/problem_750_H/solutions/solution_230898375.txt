{
    "id": 230898375,
    "contestId": 750,
    "creationTimeSeconds": 1698881037,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 750,
        "index": "H",
        "name": "New Year and Snowy Grid",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3500,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "interactive"
        ]
    },
    "author": {
        "contestId": 750,
        "members": [
            {
                "handle": "Sparkle_Twilight"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1483107300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 16,
    "timeConsumedMillis": 4227,
    "memoryConsumedBytes": 171212800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define rep(i,l,r)for(int i=l;i<=r;i++)\r\n#define pii pair<int,int>\r\n#define mp make_pair\r\n#define N 1010\r\nconst int dx[]={-1,-1,0,1,1,1,0,-1};\r\nconst int dy[]={0,1,1,1,0,-1,-1,-1};\r\n\r\nint n,m,Q,S,T,cnt,flag;\r\nint ch[N][N],id[N][N];\r\nchar s[N];\r\nint fa[N*N];\r\nset<pii>se;\r\n\r\nint find(int x){return x==fa[x] ? x : fa[x]=find(fa[x]);}\r\nint find2(int x){return x==fa[x] ? x : find(fa[x]);}\r\npii get(int x,int y){return mp(min(x,y),max(x,y));}\r\nvoid merge(int x,int y){fa[find2(x)]=find2(y);}\r\n\r\nint K,top,ans;\r\nint bx[N],by[N],st[N];\r\nint main()\r\n{\r\nscanf(\"%d%d%d\",&n,&m,&Q);\r\nfor(int i=1;i<=n;i++){\r\nscanf(\"%s\",s+1);\r\nfor(int j=1;j<=m;j++)ch[i][j]=(s[j]=='#');\r\n}\r\nS=++cnt;T=++cnt;\r\nrep(i,1,n)rep(j,1,m)id[i][j]=++cnt;\r\nrep(i,1,n){ch[i][0]=ch[i][m+1]=1;id[i][0]=S;id[i][m+1]=T;}\r\nrep(i,1,m){ch[0][i]=ch[n+1][i]=1;id[0][i]=T;id[n+1][i]=S;}\r\nrep(i,1,cnt)fa[i]=i;\r\nrep(i,1,n)rep(j,1,m)if(ch[i][j]){\r\nrep(k,0,7){\r\nint nx=i+dx[k],ny=j+dy[k];\r\nif(ch[nx][ny])fa[find(id[i][j])]=find(id[nx][ny]);\r\n}\r\n}\r\nrep(i,1,n)rep(j,1,m){\r\nif(i==1&&j==1)continue;\r\nif(i==n&&j==m)continue;\r\nrep(k,0,7)rep(l,k+1,7){\r\nint nx=i+dx[k],ny=j+dy[k];\r\nint mx=i+dx[l],my=j+dy[l];\r\nse.insert(get(find(id[nx][ny]),find(id[mx][my])));\r\nif(get(find(id[nx][ny]),find(id[mx][my]))==get(find(S),find(T)))flag=1,i=n+1,j=m+1;\r\n}\r\n}\r\nif(flag){rep(i,1,Q)puts(\"NO\");return 0;}\r\n\r\nwhile(Q--){\r\nscanf(\"%d\",&K);\r\ntop=0;\r\nrep(i,1,K){\r\nscanf(\"%d%d\",&bx[i],&by[i]);ch[bx[i]][by[i]]=1;\r\nst[++top]=find(id[bx[i]][by[i]]);\r\nrep(k,0,7){\r\nint nx=bx[i]+dx[k],ny=by[i]+dy[k];\r\nif(ch[nx][ny])st[++top]=find(id[nx][ny]);\r\n}\r\n}\r\nst[++top]=find(S);st[++top]=find(T);\r\nsort(st+1,st+top+1);\r\ntop=unique(st+1,st+top+1)-st-1;\r\nrep(i,1,K)rep(k,0,7){\r\nint nx=bx[i]+dx[k],ny=by[i]+dy[k];\r\nif(ch[nx][ny])merge(id[nx][ny],id[bx[i]][by[i]]);\r\n}\r\nans=1;\r\nrep(i,1,top)if(find2(st[i])==find2(S))\r\nrep(j,1,top)if(find2(st[j])==find2(T)&&se.find(get(st[i],st[j]))!=se.end())\r\nans=0;\r\nputs(ans ? \"YES\" : \"NO\");fflush(stdout);\r\nrep(i,1,K)ch[bx[i]][by[i]]=0;\r\nwhile(top)fa[st[top]]=st[top],top--;\r\n}\r\nreturn 0;\r\n}"
}