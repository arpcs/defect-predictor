{
    "id": 232504534,
    "contestId": 1870,
    "creationTimeSeconds": 1699792806,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1870,
        "index": "E",
        "name": "Another MEX Problem",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "brute force",
            "dp",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1870,
        "members": [
            {
                "handle": "hamuim"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1695047700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 143564800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define mod 1000000003\r\n#define mpi (atan(1) * 4)\r\n#define all(a) a.begin(), a.end()\r\n#define mka(a, v) memset(a, v, sizeof(a))\r\ntypedef long long ll;\r\ntypedef double dl;\r\ntypedef long double dll;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, ll> pil;\r\n\r\nint arr[5010], mex[5010][5010];\r\nbool dp[5010][8500], chk[5010];\r\n\r\nvoid sol()\r\n{\r\n    int i, p, n, m, k, x;\r\n    cin >> n;\r\n    for (i = 1; i <= n; i++)\r\n        cin >> arr[i];\r\n    for (i = 1; i <= n; i++) {\r\n        for (p = 0; p <= n; p++)\r\n            chk[p] = 0;\r\n        m = 0;\r\n        for (p = i; p <= n; p++) {\r\n            chk[arr[p]] = 1;\r\n            while (chk[m] == 1)\r\n                m++;\r\n            mex[i][p] = m;\r\n        }\r\n    }\r\n    dp[0][0] = 1;\r\n    m = -1;\r\n    for (i = 1; i <= n; i++)\r\n        for (p = i; p <= n; p++)\r\n            m = max(m, mex[i][p]);\r\n    k = 1;\r\n    while (m > 0) {\r\n        k *= 2;\r\n        m /= 2;\r\n    }\r\n    vector<pii> rng;\r\n    for (i = 1; i <= n; i++)\r\n        for (p = i; p <= n; p++)\r\n            if (i == p)\r\n                rng.push_back({i, p});\r\n            else if (mex[i + 1][p] != mex[i][p] && mex[i][p - 1] != mex[i][p])\r\n                rng.push_back({i, p});\r\n    sort(all(rng), [](pii& a, pii& b) { return a.second < b.second; });\r\n    dp[0][0] = 1;\r\n    x = 0;\r\n    for (i = 1; i <= n; i++) {\r\n        for (p = 0; p < k; p++)\r\n            dp[i][p] = dp[i - 1][p];\r\n        while (x < rng.size() && rng[x].second == i) {\r\n            for (p = 0; p < k; p++)\r\n                dp[i][p] |= dp[rng[x].first - 1][p ^ mex[rng[x].first][rng[x].second]];\r\n            x++;\r\n        }\r\n    }\r\n    for (i = 0, m = -1; i < k; i++)\r\n        if (dp[n][i] == 1)\r\n            m = max(m, i);\r\n    cout << m;\r\n}\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(NULL), cin.tie(NULL), cout.tie(NULL);\r\n    int te, in_type;\r\n    in_type = 1;\r\n    if (in_type == 0)\r\n        te = 1;\r\n    else\r\n        cin >> te;\r\n    while (te--) {\r\n        sol();\r\n        cout << \"\\n\";\r\n    }\r\n\r\n    return 0;\r\n}"
}