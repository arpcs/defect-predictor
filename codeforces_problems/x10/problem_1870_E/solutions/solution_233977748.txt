{
    "id": 233977748,
    "contestId": 1870,
    "creationTimeSeconds": 1700784535,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1870,
        "index": "E",
        "name": "Another MEX Problem",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "brute force",
            "dp",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1870,
        "members": [
            {
                "handle": "tostes"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1695047700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 108,
    "memoryConsumedBytes": 100352000,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n \n#define _ << ' ' <<\n#define pb push_back\n#define eb emplace_back\n#define all(x) begin(x), end(x)\n#define mp make_pair\n#define f first\n#define s second\n#define sz(x) int((x).size())\n#define each(x,A) for(auto &x: A)\n#define FOR(i, a, b) for (int i=a; i<(b); i++)\n#define F0R(i, a) for (int i=0; i<(a); i++)\n#define FORd(i,a,b) for (int i = (b)-1; i >= a; i--)\n#define F0Rd(i,a) for (int i = (a)-1; i >= 0; i--)\n \nusing ll = long long;\nusing db = long double;\nusing pl = pair<ll,ll>;\nusing pi = pair<int,int>;\nusing cd = complex<db>;\nusing vi = vector<int>;\nusing vpi = vector<pi>;\nusing vd = vector<db>;\nusing vl = vector <ll>;\nusing str = string;\ntemplate<class T> using V = vector<T>; \n \n//const int MOD = 1e9+7;\n \ntemplate<typename A, typename B> ostream& operator<<(ostream &os, const pair<A, B> &p) { return os << '(' << p.first << \", \" << p.second << ')'; }\ntemplate<typename T> ostream& operator<<(ostream &os, const vector<T> &v) { os << '('; string sep; for (const auto &x : v) os << sep << x, sep = \", \"; return os << ')'; }\ntemplate<typename T, size_t size> ostream& operator<<(ostream &os, const array<T, size> &arr) { os << '{'; string sep; for (const auto &x : arr) os << sep << x, sep = \", \"; return os << '}'; }\n \ntemplate<typename T > ostream& operator<<(ostream &os, const set<T> &st){os << '{'; string sep; for(const auto &x: st) os << sep << x, sep = \", \"; return os << '}';}\ntemplate<typename A, typename B> ostream& operator<<(ostream &os, const map<A,B> &mm){os << '{'; string sep; for(const auto &x: mm) os << sep << x, sep = \", \"; return os << '}';}\n \n//mt19937_64 mt_rand(chrono::high_resolution_clock::now().time_since_epoch().count());\n//uniform_int_distribution<long long> rg(1,1e9);\n\nint used[5000][5001];\n\nvoid solve(){\n  int n;\n  cin >> n;\n  for(int i=0; i<n; i++) for(int j=0; j<n+1; j++) used[i][j] = 0;\n  \n  vi a(n); each(x,a) cin >> x;\n\n  vi possible_mex;\n  vi positions(n,0);\n\n  vi auxiliar_vector(2*n+1);\n  int size_auxiliar = 0;\n\n  possible_mex.pb(0);\n  if(a[0]==0) possible_mex.pb(1);\n  positions[0] = sz(possible_mex);\n\n  while(size_auxiliar < positions[0]){\n    auxiliar_vector[size_auxiliar] = possible_mex[size_auxiliar];\n    size_auxiliar++;\n  }\n\n\n  for(int i=1; i<n; i++){\n    positions[i] = positions[i-1];\n\n    vi at(n+1,0);\n    int mex = 0;\n    for(int j=i; j>=0; j--){\n      at[a[j]]++;\n      if(j==0){\n        while(at[mex]>0) mex++;\n        auxiliar_vector[size_auxiliar++] = mex;\n        continue;\n      }\n\n      if(at[mex]>0){\n        while(at[mex]>0) mex++;\n        if(!used[j-1][mex]){\n          used[j-1][mex] = 1;\n          for(int k=0; k<positions[j-1]; k++){\n            int v = possible_mex[k];\n            auxiliar_vector[size_auxiliar++] = v^mex;\n          }\n        }\n      }\n    }\n    sort(auxiliar_vector.begin(), auxiliar_vector.begin() + size_auxiliar);\n\n    size_auxiliar = unique(auxiliar_vector.begin(), auxiliar_vector.begin()+size_auxiliar) - auxiliar_vector.begin();\n    while(positions[i] < size_auxiliar){\n      possible_mex.pb(auxiliar_vector[positions[i]]);\n      positions[i]++;\n    }\n  }\n  cout << possible_mex[positions[n-1]-1] << endl;\n}\n \nint main(){\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  //freopen(\"input5.in\", \"r\", stdin);\n  //freopen(\"problemname.txt\", \"w\", stdout);\n  int t; cin >> t;\n  while(t--) solve();\n\n}"
}