{
    "id": 232917205,
    "contestId": 1870,
    "creationTimeSeconds": 1700102801,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1870,
        "index": "E",
        "name": "Another MEX Problem",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "brute force",
            "dp",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1870,
        "members": [
            {
                "handle": "The_way_to_Rome"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1695047700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 264,
    "memoryConsumedBytes": 202956800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nnamespace FastIO {\r\n\t#define iL (1 << 20)\r\n\tchar ibuf[iL],*iS = ibuf + iL,*iT = ibuf + iL;\r\n\t#define gc() (iS == iT ? (iT = (iS = ibuf) + fread(ibuf,1,iL,stdin),iS == iT ? EOF : *iS++) : *iS++)\r\n\ttemplate<typename T>\r\n\tinline void read(T &a) {\r\n\t\tchar ch;int sign = 0;\r\n\t\tfor(ch = gc();!isdigit(ch);ch = gc())\r\n\t\t\tif(ch == '-') sign = 1;\r\n\t\ta = ch & 15;\r\n\t\tfor(ch = gc();isdigit(ch);ch = gc())\r\n\t\t\ta = (a << 3) + (a << 1) + (ch & 15);\r\n\t\tif(sign) a = -a;\r\n\t}\r\n\tchar Out[iL],*iter = Out;\r\n\t#define flush() fwrite(Out,1,iter - Out,stdout),iter = Out\r\n\ttemplate<typename T>\r\n\tinline void write(T x,char end = '\\n') {\r\n\t\tint c[40],l = 0;if(x < 0) *iter++ = '-',x = -x;\r\n\t\tdo c[++l] = x % 10,x /= 10; while(x);\r\n\t\twhile(l) *iter++ = c[l--] + '0';\r\n\t\t*iter++ = end;flush();\r\n\t}\r\n\t#undef iL\r\n\t#undef gc\r\n\t#undef flush\r\n}\r\nusing namespace FastIO;\r\n\r\nconst int N = 5e3 + 5,Sz = 1 << 13;\r\nint n,a[N];\r\nint ton[N];\r\nint mex[N][N],R[N][N];\r\nint f[Sz],vst[Sz];\r\ninline void work() {\r\n\tread(n);\r\n\tfor(int i = 1;i <= n;i++) read(a[i]);\r\n\tfor(int l = 1;l <= n;l++) {\r\n\t\tfor(int i = 0;i <= n;i++) ton[i] = 0;\r\n\t\tfor(int r = l;r <= n;r++) ton[a[r]]++;\r\n\t\tint res = 0;\r\n\t\twhile(ton[res]) ++res;\r\n\t\tfor(int r = n;r >= l;r--) {\r\n\t\t\tmex[l][r] = res;\r\n\t\t\t--ton[a[r]];\r\n\t\t\tif(!ton[a[r]]) res = min(res,a[r]);\r\n\t\t}\r\n\t}\r\n\tint m = 1 << __lg(n) + 1;\r\n\tfor(int i = n + 1;i >= 1;i--) {\r\n\t\tfor(int j = 0;j <= n;j++)\r\n\t\t\tR[i][j] = (i >= n) ? n + 1 : R[i + 1][j];\r\n\t\tfor(int j = i;j <= n;j++)\r\n\t\t\tR[i][mex[i][j]] = min(R[i][mex[i][j]],j);\r\n\t}\r\n\tfor(int i = 0;i < m;i++) f[i] = n + 1,vst[i] = 0;\r\n\tf[0] = 0;\r\n\tfor(int i = 1;i < m;i++) {\r\n\t\tint minn = 1e9,k = -1;\r\n\t\tfor(int j = 0;j < m;j++) if(!vst[j] && f[j] < minn) minn = f[j],k = j;\r\n\t\tvst[k] = 1;\r\n\t\tif(f[k] > n) break;\r\n\t\tfor(int t = 0;t <= n;t++)\r\n\t\t\tif(f[k ^ t] > R[f[k] + 1][t])\r\n\t\t\t\tf[k ^ t] = R[f[k] + 1][t];\r\n\t}\r\n\tfor(int i = m - 1;i >= 0;i--)\r\n\t\tif(f[i] <= n) { printf(\"%d\\n\",i);break;}\r\n}\r\nint main() {\r\n\tint T;\r\n\tread(T);\r\n\twhile(T--) work();\r\n\treturn 0;\r\n}\r\n"
}