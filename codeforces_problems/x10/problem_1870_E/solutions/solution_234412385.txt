{
    "id": 234412385,
    "contestId": 1870,
    "creationTimeSeconds": 1701001082,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1870,
        "index": "E",
        "name": "Another MEX Problem",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "brute force",
            "dp",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1870,
        "members": [
            {
                "handle": "66H6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1695047700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 592,
    "memoryConsumedBytes": 204595200,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing i64 = long long;\r\n\r\nvoid solve() {\r\n    int n;\r\n    std::cin >> n;\r\n    \r\n    std::vector<int> a(n);\r\n    for (int i = 0; i < n; i++) {\r\n        std::cin >> a[i];\r\n    }\r\n    \r\n    std::vector<std::vector<int>> mex(n + 1, std::vector<int>(n + 1));\r\n    for (int i = 0; i < n; i++) {\r\n        std::vector<bool> b(n + 1);\r\n        for (int j = i; j < n; j++) {\r\n            b[a[j]] = true;\r\n            int k = mex[i][j];\r\n            while (b[k]) {\r\n                k++;\r\n            }\r\n            mex[i][j + 1] = k;\r\n        }\r\n    }\r\n    \r\n    std::vector<std::vector<int>> max(n, std::vector<int>(n + 1));\r\n    std::vector<std::vector<bool>> use(n, std::vector<bool>(n + 1));\r\n    for (int j = 1; j <= n; j++) {\r\n        for (int i = j - 1; i >= 0; i--) {\r\n            max[i][j] = std::max(mex[i + 1][j], mex[i][j - 1]);\r\n            if (max[i][j] < mex[i][j]) {\r\n                max[i][j] = mex[i][j];\r\n                use[i][j] = true;\r\n            }\r\n        }\r\n    }\r\n    max.clear();\r\n    max.shrink_to_fit();\r\n    \r\n    std::vector<std::vector<bool>> dp(n + 1, std::vector<bool>(8192));\r\n    dp[0][0] = true;\r\n    for (int i = 1; i <= n; i++) {\r\n        dp[i] = dp[i - 1];\r\n        for (int j = 0; j < i; j++) {\r\n            if (use[j][i]) {\r\n                int v = mex[j][i];\r\n                for (int k = 0; k < 8192; k++) {\r\n                    dp[i][k] = dp[i][k] | dp[j][k ^ v];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    for (int i = 8191; i >= 0; i--) {\r\n        if (dp[n][i]) {\r\n            std::cout << i << \"\\n\";\r\n            return;\r\n        }\r\n    }\r\n    \r\n    assert(false);\r\n}\r\n\r\nint main() {\r\n    std::ios::sync_with_stdio(false);\r\n    std::cin.tie(nullptr);\r\n    \r\n    int t;\r\n    std::cin >> t;\r\n    \r\n    while (t--) {\r\n        solve();\r\n    }\r\n    \r\n    return 0;\r\n}"
}