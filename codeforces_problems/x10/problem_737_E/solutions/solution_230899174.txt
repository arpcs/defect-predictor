{
    "id": 230899174,
    "contestId": 737,
    "creationTimeSeconds": 1698882289,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 737,
        "index": "E",
        "name": "Tanya is 5!",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 3300,
        "tags": [
            "graph matchings",
            "graphs",
            "greedy",
            "schedules"
        ]
    },
    "author": {
        "contestId": 737,
        "members": [
            {
                "handle": "Sparkle_Twilight"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1479632700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 140,
    "timeConsumedMillis": 1185,
    "memoryConsumedBytes": 163840000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=60,M=1e5+10;\r\nint n,m,b,cst[N],sum[N],buy[N],id[N],c[N][N],S[N],T[N],ans;\r\nint pir[N],tid[N<<1],cnt,mch[N<<1][M],col[M<<4];\r\nbool cmp(int a,int b){return T[a]>T[b];}\r\nint hd[N],tot;\r\nstruct edge{int u,v;}e[M<<4];\r\nvoid add(int u,int v){e[++tot]={u,v};}\r\nset<int> s[N<<1];\r\nvoid dfs(int u,int x,int y){//\u817e\u51fa\u7a7a\u95f4\r\nint id=mch[u][x],v=(e[id].u==u?e[id].v:e[id].u);\r\nmch[u][x]=mch[v][x]=0;\r\nif(mch[v][y])dfs(v,y,x);\r\nelse s[v].insert(x),s[v].erase(y);\r\nmch[v][y]=mch[u][y]=id,col[id]=y;\r\n}\r\nsigned main(){\r\nscanf(\"%d%d%d\",&n,&m,&b);\r\nfor(int i=1;i<=m;i++)scanf(\"%d\",&cst[i]),id[i]=i;\r\nfor(int i=1,k;i<=n;i++){\r\nscanf(\"%d\",&k);\r\nfor(int x;k--;)scanf(\"%d\",&x),scanf(\"%d\",&c[i][x]);\r\n}\r\nfor(int i=1;i<=n;i++){\r\nfor(int j=1;j<=m;j++)S[i]+=c[i][j],T[j]+=c[i][j];\r\n}\r\nfor(int i=1;i<=n;i++)ans=max(ans,S[i]);\r\nsort(id+1,id+m+1,cmp);\r\nfor(int I=1;I<=m;I++){\r\nint i=id[I];\r\nif(cst[i]<=b)b-=cst[i],buy[i]=1;\r\n}\r\ncnt=n+m;\r\nfor(int i=1;i<=m;i++){\r\nans=max(ans,buy[i]?(T[i]+1)/2:T[i]);\r\nif(buy[i])pir[i]=++cnt,tid[cnt]=i;\r\n}\r\nfor(int i=1;i<=n;i++){\r\nfor(int j=1;j<=m;j++){\r\nfor(;c[i][j]--;){\r\nsum[j]++;\r\nif(!buy[j])add(i,j+n);\r\nelse if(sum[j]<=T[j]/2)add(i,j+n);\r\nelse add(i,pir[j]);\r\n}\r\n}\r\n}\r\nfor(int i=1;i<=cnt;i++){\r\nfor(int j=1;j<=ans;j++)s[i].insert(j);\r\n}\r\nfor(int i=1;i<=tot;i++){\r\nint u=e[i].u,v=e[i].v;\r\nint c1=*s[u].begin(),c2=*s[v].begin();\r\nif(mch[v][c1])dfs(v,c1,c2),s[v].erase(c2);\r\nmch[u][c1]=mch[v][c1]=i,col[i]=c1;\r\ns[u].erase(c1),s[v].erase(c1);\r\n}\r\nprintf(\"%d\\n\",ans);\r\nfor(int i=1;i<=m;i++)printf(\"%d\",buy[i]);\r\nprintf(\"\\n%d\\n\",tot);\r\nfor(int i=1;i<=tot;i++)printf(\"%d %d %d 1\\n\",e[i].u,e[i].v<=n+m?e[i].v-n:tid[e[i].v],col[i]-1);\r\n}"
}