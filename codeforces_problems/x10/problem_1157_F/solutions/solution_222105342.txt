{
    "id": 222105342,
    "contestId": 1157,
    "creationTimeSeconds": 1694014801,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1157,
        "index": "F",
        "name": "Maximum Balanced Circle",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "dp",
            "greedy",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1157,
        "members": [
            {
                "handle": "Sourav.Kumar007"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1556289300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 40,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 8294400,
    "source": "#include<bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n#define ordered_set tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>\r\n#define endl '\\n'\r\n#define int long long\r\n#define all(a) a.begin(),a.end()\r\n#define pb push_back\r\n#define mod 1000000007\r\n#define inf 1e18\r\n#define ppb pop_back\r\n#define ff first\r\n#define ss second\r\n \r\n///  order_of_key return number of elements less than x -> os.order_of_key(x)\r\n///  cout << \"oth element  : \" << *os.find_by_order(0) << endl; so it returns value of index\r\n \r\nint lcm(int x,int y)\r\n{\r\n    return (x * 1LL * y) / __gcd(x,y);\r\n}\r\n \r\n// Graph on 2D Grid\r\n/*----------------------Graph Moves----------------*/\r\n//const int dx[]={+1,-1,+0,+0};\r\n//const int dy[]={+0,+0,+1,-1};\r\n//const int dx[]={+0,+0,+1,-1,-1,+1,-1,+1};   // Kings Move\r\n//const int dy[]={-1,+1,+0,+0,+1,+1,-1,-1};  // Kings Move\r\n//const int dx[]={-2, -2, -1, -1,  1,  1,  2,  2};  // Knights Move\r\n//const int dy[]={-1,  1, -2,  2, -2,  2, -1,  1}; // Knights Move\r\n/*------------------------------------------------*/\r\n \r\n#define debug(x); cerr << #x <<\" \"; _print(x); cerr << endl;\r\n \r\nvoid _print(int t) {cerr << t;}\r\nvoid _print(string t) {cerr << t;}\r\nvoid _print(char t) {cerr << t;}\r\nvoid _print(double t) {cerr << t;}\r\n \r\ntemplate <class T, class V> void _print(pair <T, V> p);\r\ntemplate <class T> void _print(vector <T> v);\r\ntemplate <class T> void _print(set <T> v);\r\ntemplate <class T, class V> void _print(map <T, V> v);\r\ntemplate <class T> void _print(multiset <T> v);\r\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\r\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\n\r\nint mp[300000];\r\n\r\nvoid solve()\r\n{\r\n    int n,i,last=0,ans=0,l,r,sum=0;\r\n    cin >> n;\r\n    int arr[n+5];\r\n    for(i=1; i<=n; i++)\r\n    {\r\n        cin >> arr[i];\r\n        mp[arr[i]]++;\r\n        if(mp[arr[i]] > ans)\r\n        {\r\n            ans = mp[arr[i]];\r\n            l = r = arr[i];\r\n        }\r\n    }\r\n    for(i=1; i<=2e5; i++)\r\n    {\r\n        if(!mp[i])\r\n        {\r\n            sum = last = 0;\r\n            continue;\r\n        }\r\n        sum += mp[i];\r\n        if(last == 0)\r\n        {\r\n            last = i;\r\n        }\r\n        else \r\n        {\r\n            if(sum > ans)\r\n            {\r\n                ans = sum;\r\n                l = last;\r\n                r = i;\r\n            }\r\n            if(mp[i] == 1)\r\n            {\r\n                last = i;\r\n                sum = 1;\r\n            }\r\n        }\r\n    }\r\n    cout << ans << endl;\r\n    vector <int> res;\r\n    while(mp[l]--)\r\n    {\r\n        res.pb(l);\r\n    }\r\n    for(i=l+1; i<r; i++)\r\n    {\r\n        while(mp[i] > 1)\r\n        {\r\n            res.pb(i);\r\n            mp[i]--;\r\n        }\r\n    }\r\n    while(mp[r]-- && l < r)\r\n    {\r\n        res.pb(r);\r\n    }\r\n    for(i=r-1; i>l; i--)\r\n    {\r\n        res.pb(i);\r\n    }\r\n    for(auto it : res)\r\n    {\r\n        cout << it << \" \";\r\n    }\r\n    cout << endl;\r\n}\r\n \r\nint32_t main()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n \r\n    int t = 1;\r\n    while(t--)\r\n    {\r\n        solve();\r\n    }\r\n}\r\n/**\r\nTest Case :\r\n \r\n**/"
}