{
    "id": 226205599,
    "contestId": 1157,
    "creationTimeSeconds": 1696185252,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1157,
        "index": "F",
        "name": "Maximum Balanced Circle",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "dp",
            "greedy",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1157,
        "members": [
            {
                "handle": "varahamihira_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1556289300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 40,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 3174400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int N = 2E5 + 10;\r\nint a[N], cnt[N];\r\nint main(){\r\n  ios::sync_with_stdio(false);\r\n  cin.tie(nullptr);\r\n  \r\n  int n;\r\n  cin >> n;\r\n\r\n  for(int i = 1; i <= n; ++i) cin >> a[i];\r\n  for(int i = 1; i <= n; ++i) ++cnt[a[i]];\r\n\r\n  int ans = 0, sum = 0, l, ans_l, ans_r;\r\n  bool flag = false;\r\n  for(int i = 1; i <= N; ++i){\r\n    if(!flag){\r\n      if(cnt[i]){\r\n        flag = true;\r\n        l = i;\r\n        sum += cnt[i];\r\n      }\r\n    }\r\n    else{\r\n      sum += cnt[i];\r\n      if(cnt[i] <= 1){\r\n        if(ans < sum){\r\n          ans = sum;\r\n          ans_l = l;\r\n          if(cnt[i] == 0) ans_r = i - 1;\r\n          else ans_r = i;\r\n        }\r\n\r\n        if(cnt[i] == 0) flag = false, sum = 0;\r\n        else flag = true, sum = cnt[i], l = i;\r\n      }\r\n    }\r\n  }\r\n\r\n  vector<int> ret;\r\n  for(int i = ans_l; i <= ans_r; ++i)\r\n    ret.emplace_back(i), cnt[i]--;\r\n\r\n  for(int i = ans_r; i >= ans_l; --i)\r\n    while(cnt[i]) ret.emplace_back(i), cnt[i]--;\r\n  \r\n  cout << ret.size() << endl;\r\n  for(int& x: ret)\r\n    cout << x << ' '; cout << endl;\r\n  return 0;\r\n}"
}