{
    "id": 219733642,
    "contestId": 1470,
    "creationTimeSeconds": 1692581115,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1470,
        "index": "D",
        "name": "Strange Housing",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2200,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "graph matchings",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1470,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1609857300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 108,
    "memoryConsumedBytes": 7168000,
    "source": "#include<bits/stdc++.h>\nconst int QWQ=3e5+5;\nusing namespace std;\ninline int read(){\n\tint x=0,f=1; char ch=getchar();\n\twhile (!isdigit(ch)){ if (ch=='-') f=-1; ch=getchar(); }\n\twhile (isdigit(ch)){ x=(x<<3)+(x<<1)+(ch^48); ch=getchar(); }\n\treturn x*f;\n}\nstruct node{ int to,next; } E[QWQ];\nint father[QWQ],fa[QWQ],v[QWQ];\nint t,n,m,head[QWQ],cnt;\ninline void append(int x,int y){\n\tE[++cnt].to=y;\n\tE[cnt].next=head[x];\n\thead[x]=cnt;\n}\nint get(int k){\n\tif (father[k]==k) return k;\n\treturn father[k]=get(father[k]);\n}\nvoid dfs(int u,int f){\n\tfa[u]=f;\n\tfor (int i=head[u];i;i=E[i].next)\n\t\tif (!fa[E[i].to]) dfs(E[i].to,u);\n}\nvoid bdfs(int u){\n\tbool fl=1;\n\tfor (int i=head[u];i;i=E[i].next)\n\t\tif (v[E[i].to]){ fl=0; break; }\n\tif (fl) v[u]=1;\n\tfor (int i=head[u];i;i=E[i].next)\n\t\tif (fa[E[i].to]==u) bdfs(E[i].to);\n}\ninline void init(){\n\tfor (int i=1;i<=n;i++)\n\t\thead[i]=v[i]=fa[i]=0;\n\tfor (int i=1;i<=n;i++)\n\t\tfather[i]=i;\n\tcnt=0;\n}\nsigned main(){\n\tt=read();\n\twhile (t--){\n\t\tn=read(),m=read(); init();\n\t\tfor (int i=1;i<=m;i++){\n\t\t\tint x=read(),y=read();\n\t\t\tappend(x,y),append(y,x);\n\t\t\tfather[get(x)]=get(y);\n\t\t} bool fl=1;\n\t\tfor (int i=1;i<=n;i++)\n\t\t\tif (get(i)!=get(1))\n\t\t\t\t{ fl=0; break; }\n\t\tif (!fl){ puts(\"NO\"); continue; }\n\t\tfa[1]=1; dfs(1,1); bdfs(1); \n\t\tint res=0; puts(\"YES\");\n\t\tfor (int i=1;i<=n;i++) res+=v[i];\n\t\tprintf(\"%d\\n\",res);\n\t\tfor (int i=1;i<=n;i++)\n\t\t\tif (v[i]) printf(\"%d \",i);\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}\n\n/******************************************************************************************************/\n \t\t \t \t \t\t \t \t\t  \t  \t\t\t\t\t\t  \t \t"
}