{
    "id": 213502723,
    "contestId": 1470,
    "creationTimeSeconds": 1689163554,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1470,
        "index": "D",
        "name": "Strange Housing",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2200,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "graph matchings",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1470,
        "members": [
            {
                "handle": "gf202209"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1609857300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 8396800,
    "source": "// LUOGU_RID: 115150622\n// http://codeforces.com/problemset/problem/1470/D\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int MAXN=3e5+5;\r\nint n,m;\r\nbool flag;\r\nint head[MAXN],tot;\r\nint biao[MAXN];\r\nint used[MAXN];\r\nstruct node{\r\n    int nxt;\r\n    int to;\r\n}e[MAXN<<1];\r\nvoid edgeadd(int u,int v){\r\n    e[++tot].nxt=head[u];\r\n    e[tot].to=v;\r\n    head[u]=tot;\r\n}\r\nvoid init(){\r\n    memset(head,0,sizeof head);\r\n    memset(used,0,sizeof used);\r\n    memset(biao,0,sizeof biao);\r\n    tot=0;flag=0;\r\n}\r\nvoid dfs(int u,int fa){\r\n    used[u]=1;\r\n    for(int i=head[u];i;i=e[i].nxt){\r\n        int v=e[i].to;\r\n        if(v==fa)continue;\r\n        if(v==u)continue;\r\n        if(used[v])continue;\r\n        dfs(v,u);\r\n    }\r\n}\r\nbool check1(){\r\n    memset(used,0,sizeof used);\r\n    used[1]=1;\r\n    dfs(1,0);\r\n    for(int i=1;i<=n;i++)\r\n        if(!used[i])\r\n            return 0;\r\n    return 1;\r\n}\r\nvoid dfs2(int u,int fa){\r\n    // cout<<\"dfs\u524d\uff1a\"<<u<<\"\\n\";\r\n    used[u]=1;\r\n    for(int i=head[u];i;i=e[i].nxt){\r\n        int v=e[i].to;\r\n        if(v==fa)continue;\r\n        if(v==u)continue;\r\n        if(!biao[v]&&!biao[u])continue;\r\n        if(used[v])continue;\r\n        // cout<<\"dfs2: \"<<u<<\" \"<<v<<\"\\n\";\r\n        dfs2(v,u);\r\n    }\r\n}\r\nbool check2(){\r\n    memset(used,0,sizeof used);\r\n    used[1]=1;\r\n    dfs2(1,0);\r\n    // for(int i=1;i<=n;i++)\r\n        // cout<<\"used:\"<<i<<\" \"<<used[i]<<\"\\n\";\r\n    \r\n    for(int i=1;i<=n;i++)\r\n        if(!used[i])\r\n            return 0;\r\n    return 1;\r\n}\r\nbool check(){\r\n    memset(biao,0,sizeof biao);\r\n    for(int i=1;i<=n;i++){\r\n        bool flag1=1;\r\n        for(int t=head[i];t;t=e[t].nxt){\r\n            int v=e[t].to;\r\n            if(biao[v])flag1=0;\r\n        }\r\n        if(flag1)\r\n            biao[i]=1;\r\n    }\r\n    // cout<<\"check: \";\r\n    // for(int i=1;i<=n;i++)\r\n        // if(biao[i])cout<<i<<\" \";\r\n    // cout<<\"\\t\"<<check2()<<\"\\n\";\r\n    return check2();\r\n}\r\nvoid solve(){\r\n    init();\r\n    cin>>n>>m;\r\n    for(int i=1,u,v;i<=m;i++){\r\n        cin>>u>>v;\r\n        edgeadd(u,v);\r\n        edgeadd(v,u);\r\n    }\r\n    if(!check1()){\r\n        cout<<\"NO\\n\";\r\n        return ;\r\n    }\r\n    if(!check()){\r\n        memset(biao,0,sizeof biao);\r\n        biao[1]=1;\r\n        // cout<<\"114514\\n\";\r\n        check();\r\n    }\r\n    int cnt=0;\r\n    for(int i=1;i<=n;i++)\r\n        if(biao[i])cnt++;\r\n    cout<<\"YES\\n\"<<cnt<<\"\\n\";\r\n    for(int i=1;i<=n;i++)\r\n        if(biao[i])cout<<i<<\" \";\r\n    cout<<\"\\n\";\r\n}\r\nsigned main(){\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    ios::sync_with_stdio(false);\r\n    int T;\r\n    cin>>T;\r\n    while(T--)solve();\r\n}"
}