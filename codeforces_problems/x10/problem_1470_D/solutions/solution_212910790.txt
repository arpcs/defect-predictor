{
    "id": 212910790,
    "contestId": 1470,
    "creationTimeSeconds": 1688873867,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1470,
        "index": "D",
        "name": "Strange Housing",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2200,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "graph matchings",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1470,
        "members": [
            {
                "handle": "ziche"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1609857300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 2867200,
    "source": "#include <algorithm>\n#include <cstring>\n#include <iostream>\nusing namespace std;\nconst int N = 100010, M = N * 2;\nint n, m, cn, cnt;\nint h[N], ne[M], e[M], idx;\nint fa[N];\nint label[N];\nbool vis[N];\nvoid init() {\n  idx = 0, cnt = 0;\n  for (int i = 0; i <= n; i++)\n    h[i] = -1, fa[i] = i, label[i] = 0, vis[i] = false;\n}\nvoid add(int a, int b) { ne[idx] = h[a], e[idx] = b, h[a] = idx++; }\nint find(int x) {\n  if (fa[x] != x) {\n    fa[x] = find(fa[x]);\n  }\n  return fa[x];\n}\nvoid unite(int x, int y) {\n  x = find(x), y = find(y);\n  if (x == y)\n    return;\n  fa[y] = x;\n  cn--;\n}\nvoid dfs(int u, int c) {\n  if (c == 1) {\n    for (int i = h[u]; i != -1; i = ne[i]) {\n      int j = e[i];\n      label[j] = 2;\n    }\n    for (int i = h[u]; i != -1; i = ne[i]) {\n      int j = e[i];\n      if (!vis[j]) {\n        vis[j] = true;\n        dfs(j, label[j]);\n      }\n    }\n  } else if (c == 2) {\n    for (int i = h[u]; i != -1; i = ne[i]) {\n      int j = e[i];\n      if (!vis[j] && label[j] != 2) {\n        label[j] = 1;\n        vis[j] = true;\n        dfs(j, label[j]);\n      }\n    }\n  }\n}\nint main() {\n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  cout.tie(NULL);\n  int T;\n  cin >> T;\n  while (T--) {\n    cin >> n >> m;\n    cn = n;\n    init();\n    for (int i = 0; i < m; i++) {\n      int a, b;\n      cin >> a >> b;\n      add(a, b), add(b, a);\n      unite(a, b);\n    }\n    if (cn != 1) {\n      cout << \"NO\" << endl;\n      continue;\n    }\n    vis[1] = true;\n    label[1] = 1;\n    dfs(1, 1);\n    cout << \"YES\" << endl;\n    for (int i = 1; i <= n; i++)\n      if (label[i] == 1)\n        cnt++;\n    cout << cnt << endl;\n    for (int i = 1; i <= n; i++)\n      if (label[i] == 1)\n        cout << i << ' ';\n    cout << endl;\n  }\n  return 0;\n}\n\n// pmKDDXyfgAdqBQWqvDulvqTLWXwRxQUqsQyhxEyvpOjYQTmDEpJhpeaAgcvEtUTHqIiBlYZogdulmwmqaVssbDuGAwkullpSVzCoxzCPCNwjMbQtiuaODEkzFmJJXQRq"
}