{
    "id": 214703741,
    "contestId": 1470,
    "creationTimeSeconds": 1689920439,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1470,
        "index": "D",
        "name": "Strange Housing",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2200,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "graph matchings",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1470,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1609857300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 44,
    "timeConsumedMillis": 343,
    "memoryConsumedBytes": 19660800,
    "source": "#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int MAXN=3e5+10;\ninline int read(){\n\tint x=0,f=1; char ch=getchar();\n\twhile(!isdigit(ch)){if(ch=='-') f=-1; ch=getchar();}\n\twhile(isdigit(ch)) x=(x<<1)+(x<<3)+(ch^48),ch=getchar();\n\treturn x*f; \n}\nint T,n,m;\nvector<int> G[MAXN<<1];\nbool col[MAXN],vis[MAXN];\ninline void bfs(int s){\n\tqueue<int> q;\n\tfor(int i=1;i<=n;i++) col[i]=vis[i]=0;\n\tq.push(s); col[s]=1;\n\twhile(!q.empty()){\n\t\tbool flag=true;\n\t\tint u=q.front(); q.pop();\n\t\tfor(auto v:G[u]) if(col[v]) flag=false;\n\t\tif(flag) col[u]=1;\n\t\tfor(auto v:G[u]) if(!vis[v]) vis[v]=1,q.push(v);\n\t}\n}\nsigned main(){\n\tT=read();\n\twhile(T--){\n\t\tn=read(); m=read();\n\t\tfor(int i=1;i<=n;i++) G[i].clear();\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tint u,v; u=read(); v=read();\n\t\t\tG[u].push_back(v);\n\t\t\tG[v].push_back(u);\n\t\t}\n\t\tbfs(1);\n\t\tbool flag=true;\n\t\tfor(int i=1;i<=n;i++) if(!vis[i]){puts(\"NO\"); flag=false; break;}\n\t\tif(!flag) continue;\n\t\tputs(\"YES\");\n\t\tint ans=0;\n\t\tfor(int i=1;i<=n;i++) ans+=col[i];\n\t\tprintf(\"%lld\\n\",ans);\n\t\tfor(int i=1;i<=n;i++) if(col[i]) printf(\"%lld \",i);\n\t\tprintf(\"\\n\"); \n\t}\n\treturn 0;\n} \n  \t      \t\t \t\t      \t\t\t \t\t\t\t\t\t\t"
}