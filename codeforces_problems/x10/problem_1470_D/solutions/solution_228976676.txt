{
    "id": 228976676,
    "contestId": 1470,
    "creationTimeSeconds": 1697829520,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1470,
        "index": "D",
        "name": "Strange Housing",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2200,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "graph matchings",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1470,
        "members": [
            {
                "handle": "MoHA4MmED"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1609857300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 7475200,
    "source": "#include <iostream>\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define ll long long\r\n#define vip(n) cout << n << endl;\r\n#define echo(b) cout << b\r\n#define No cout << \"NO\" << '\\n';\r\n#define Yes cout << \"YES\" << '\\n';\r\n#define all(n) n.begin(), n.end()\r\n#define FOR(x, n) for (int i = x; i < n; i++)\r\n#define FORR(n) for (int i = n - 1; i >= 0; i--)\r\nll gcd(ll a, ll b)\r\n{\r\n  if (b == 0)\r\n    return a;\r\n  return gcd(b, a % b);\r\n}\r\nll LCM(ll a, ll b)\r\n{\r\n  return (a * b) / gcd(a, b);\r\n}\r\nvoid recursive(ll n)\r\n{\r\n  for (int i = 0; i < n; i++)\r\n    cout << \"*\";\r\n  cout << endl;\r\n  if (n > 0)\r\n    recursive(n - 1);\r\n}\r\nbool Isprime(ll n)\r\n{\r\n  if (n == 2)\r\n    return 1;\r\n  for (int i = 2; i * i <= n; i++)\r\n  {\r\n    if (n % i == 0)\r\n      return 0;\r\n  }\r\n  return 1;\r\n}\r\ninline ll Sum_Of_Digit(ll n)\r\n{\r\n  ll x = 0;\r\n  while (n != 0)\r\n    x += (n % 10), n /= 10;\r\n  return x;\r\n}\r\nstring To_String(ll n)\r\n{\r\n  string s;\r\n  while (n > 0)\r\n    s += (n % 10) + '0';\r\n  reverse(s.begin(), s.end());\r\n  return s;\r\n}\r\nvector<vector<ll>> edge(300009);\r\nbool vis[300009];\r\nvector<ll> ans;\r\nll y;\r\nvoid DFS(int i , int head , int prev)\r\n{\r\n  if(y == -1)\r\n  vis[i] = true;\r\n  else return;\r\n  ll z = 0; \r\n  for(auto j : edge[i])\r\n  {\r\n    if(j == head || prev == head) z = 1;\r\n    if(!vis[j])\r\n    DFS(j , head , i);\r\n  }\r\n   if(z == 0){\r\n    if(i != head && y == -1)\r\n     y = i;\r\n   }\r\n}\r\ninline void solve()\r\n{\r\n  memset(vis , 0 , sizeof(vis));\r\n  for(int i = 1 ;  i < 300009 ; i++)\r\n  edge[i].clear();\r\n  ans.clear();\r\n  ll n = 0, pass = 0, u = 0, v = 0;\r\n  cin >> n >> pass;\r\n  FOR(0, pass)\r\n  {\r\n    cin >> u >> v;\r\n    edge[u].push_back(v);\r\n    edge[v].push_back(u);\r\n  }\r\n  FOR(1 , n + 1)\r\n  {\r\n    y = -1;\r\n    if(!vis[i])\r\n    DFS(i , i , 0);\r\n    // cout << y << ' ';\r\n    if(y != -1)\r\n    {\r\n    ans.push_back(i);\r\n    ans.push_back(y);\r\n    } \r\n  }\r\n  if(ans.size() == 0)\r\n  No\r\n  else \r\n  {\r\n    Yes\r\n    cout << ans.size() << '\\n';\r\n    for(auto i : ans)\r\n    cout << i << ' ';\r\n    cout << '\\n';\r\n  }\r\n\r\n}\r\nstruct node\r\n{\r\n  int data;\r\n  node *next;\r\n};\r\nclass Copy\r\n{\r\nprivate:\r\n  int a1, a2, a3, a4, a5, a6, a7, a8;\r\n\r\npublic:\r\n  Copy(const Copy &a)\r\n  {\r\n    a1 = a.a1;\r\n    a2 = a.a2;\r\n    a3 = a.a3;\r\n    a4 = a.a4;\r\n    a5 = a.a5;\r\n    a6 = a.a6;\r\n    a7 = a.a7;\r\n    a8 = a.a8;\r\n  }\r\n  void p()\r\n  {\r\n    cout << a1 << ' ' << a2 << ' ' << a3 << ' ' << a4 << ' ' << a5 << ' ' << a6 << ' ' << a7 << \" \" << a8 << '\\n';\r\n  }\r\n};\r\nint main()\r\n{\r\n  ios::sync_with_stdio(false);\r\n  cin.tie(0);\r\n  ll _ = 1;\r\n  cin >> _;\r\n  while (_--)\r\n    solve();\r\n}\r\n"
}