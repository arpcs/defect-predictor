{
    "id": 226677277,
    "contestId": 1470,
    "creationTimeSeconds": 1696476384,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1470,
        "index": "D",
        "name": "Strange Housing",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2200,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "graph matchings",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1470,
        "members": [
            {
                "handle": "Mirage_Insane"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1609857300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 44,
    "timeConsumedMillis": 436,
    "memoryConsumedBytes": 9625600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define SF scanf\r\n#define PF printf\r\nstruct Edge {\r\n\tint to, next;\r\n}edge[600005];\r\nint head[300005], cnt;\r\nbool vis[300005], col[300005];\r\nvoid add(int u, int v) {\r\n\tedge[++cnt].to = v;\r\n\tedge[cnt].next = head[u];\r\n\thead[u] = cnt;\r\n}\r\nvoid dfs(int x) {\r\n\tvis[x] = 1;\r\n\tbool flag = true;\r\n\tfor(int i = head[x]; i; i = edge[i].next) {\r\n\t\tint to = edge[i].to;\r\n\t\tif(col[to]) {\r\n\t\t\tflag = false;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tcol[x] = flag;\r\n\tfor(int i = head[x]; i; i = edge[i].next) {\r\n\t\tint to = edge[i].to;\r\n\t\tif(vis[to]) continue;\r\n\t\tdfs(to);\r\n\t}\r\n}\r\nint main() {\r\n\tint T;\r\n\tSF(\"%d\", &T);\r\n\twhile(T--) {\r\n\t\tcnt = 0;\r\n\t\tint n, m, ans = 0;\r\n\t\tSF(\"%d%d\", &n, &m);\r\n\t\tfor(int i = 1; i <= n; i++) col[i] = vis[i] = head[i] = 0;\r\n\t\tfor(int i = 1; i <= m; i++) {\r\n\t\t\tint u, v;\r\n\t\t\tSF(\"%d%d\", &u, &v);\r\n\t\t\tadd(u, v), add(v, u);\r\n\t\t}\r\n\t\tdfs(1);\r\n\t\tbool flag = false;\r\n\t\tfor(int i = 1; i <= n; i++) {\r\n\t\t\tif(!vis[i]) {\r\n\t\t\t\tPF(\"NO\\n\");\r\n\t\t\t\tflag = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(flag) continue;\r\n\t\tfor(int i = 1; i <= n; i++) ans += col[i];\r\n\t\tPF(\"YES\\n\");\r\n\t\tPF(\"%d\\n\", ans);\r\n\t\tfor(int i = 1; i <= n; i++) {\r\n\t\t\tif(col[i]) PF(\"%d \", i);\r\n\t\t}\r\n\t\tPF(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}"
}