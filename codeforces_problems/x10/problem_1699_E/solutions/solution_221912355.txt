{
    "id": 221912355,
    "contestId": 1699,
    "creationTimeSeconds": 1693905664,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1699,
        "index": "E",
        "name": "Three Days Grace",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2600,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "math",
            "number theory",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1699,
        "members": [
            {
                "handle": "bkifhr6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1656945300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 65,
    "timeConsumedMillis": 2666,
    "memoryConsumedBytes": 120217600,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n\n#define mp make_pair\n#define fi first\n#define se second\n#define pb push_back\n#define ppb pop_back\n#define int long long\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\n\nconst int MAXM = 5e6 + 7;\nconst int MAXN = 1e6 + 7;\n\nint read()\n{\n    int x = 0, f = 1;\n    char ch = getchar();\n    while(!isdigit(ch)){if(ch == '-')f = -1; ch = getchar();}\n    while(isdigit(ch))x = (x << 3) + (x << 1) + (ch ^ 48), ch = getchar();\n    return x * f;\n}\ntemplate<typename T>\nvoid read(T &x){\n    x = 0; T f = 1;\n    char ch = getchar();\n    while(!isdigit(ch)){if(ch == '-')f = -1; ch = getchar();}\n    while(isdigit(ch))x = (x << 3) + (x << 1) + (ch ^ 48), ch = getchar();\n    x *= f;\n}\ntemplate<typename T, typename... Args>\nvoid read(T &x, Args &...args){read(x),read(args...);}\n\nint T;\n\nint n, m;\nint a[MAXM], t[MAXM], f[MAXM];\n\nvoid solve()\n{\n    read(n, m);\n    memset(a, 0, (m + 1) * 8);\n    memset(t, 0, (m + 1) * 8);\n    int lim = 1e9 + 7, ans = 1e9 + 7;\n    for(int i = 1; i <= n; i++)\n    {\n        int x = read();\n        lim = min(lim, x);\n        a[x] = t[x] = 1;\n    }\n    for(int i = 1; i <= m; i++) f[i] = i;\n    int pt = m;\n    for(int i = m; i; i--)\n    {\n        if(i * i <= m)\n        {\n            for(int j = i * i; j <= m; j += i)\n            {\n                t[f[j]] -= a[j];\n                f[j] = min(f[j], f[j / i]);\n                t[f[j]] += a[j]; \n            }\n        }\n        while(!t[pt]) pt--;\n        if(i <= lim) ans = min(ans, pt - i);\n    }\n    printf(\"%lld\\n\", ans);\n}\n\nsigned main()\n{\n    read(T);\n    while(T--) solve();\n    return 0;\n}\n\t\t\t \t \t\t\t\t\t \t  \t  \t\t\t\t \t\t \t  \t"
}