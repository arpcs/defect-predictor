{
    "id": 229803990,
    "contestId": 237,
    "creationTimeSeconds": 1698310891,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 237,
        "index": "E",
        "name": "Build String",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "flows",
            "graphs"
        ]
    },
    "author": {
        "contestId": 237,
        "members": [
            {
                "handle": "xvzhiming"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1351179000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 102400,
    "source": "//#pragma GCC optimize(2)\r\n//#pragma GCC optimize(3, \"Ofast\", \"inline\")\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int N = 210, M = 10010;\r\nconst int inf = 0x3f3f3f3f;\r\n\r\nint head[N], nxt[M], to[M], idx;\r\nint wf[M], wc[M];\r\n\r\nvoid init() {\r\n\tidx = 0;\r\n\tmemset(head, -1, sizeof head);\r\n}\r\n\r\nvoid add(int a, int b, int c, int d) {\r\n\tnxt[idx] = head[a], head[a] = idx;\r\n\tto[idx] = b, wf[idx] = c, wc[idx] = d, idx++;\r\n\t\r\n\tnxt[idx] = head[b], head[b] = idx;\r\n\tto[idx] = a, wf[idx] = 0, wc[idx] = -d, idx++;\r\n}\r\n\r\nint n, S, T, c[30];\r\nchar s[N];\r\nint dist[N], pre[N], prei[N];\r\nbool inque[N];\r\n\r\nbool spfa() {\r\n\tmemset(dist, 0x3f, sizeof dist);\r\n\tdist[S] = 0;\r\n\tqueue <int> q;\r\n\tinque[S] = true;\r\n\tq.push(S);\r\n\twhile (!q.empty()) {\r\n\t\tint f = q.front(); q.pop();\r\n\t\tinque[f] = false;\r\n\t\tfor (int i = head[f]; ~i; i = nxt[i]) {\r\n\t\t\tif (wf[i] && dist[f]+wc[i] < dist[to[i]]) {\r\n\t\t\t\tdist[to[i]] = dist[f]+wc[i];\r\n\t\t\t\tpre[to[i]] = f, prei[to[i]] = i;\r\n\t\t\t\tif (!inque[to[i]]) {\r\n\t\t\t\t\tinque[to[i]] = true;\r\n\t\t\t\t\tq.push(to[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn dist[T] != inf;\r\n}\r\n\r\nint dfs() {\r\n\tint p = T, res = inf;\r\n\twhile (p != S) {\r\n\t\tint i = prei[p];\r\n\t\tp = pre[p];\r\n\t\tres = min(res, wf[i]);\r\n\t}\r\n\tp = T;\r\n\twhile (p != S) {\r\n\t\tint i = prei[p];\r\n\t\tp = pre[p];\r\n\t\twf[i] -= res;\r\n\t\twf[i^1] += res;\r\n\t}\r\n\treturn res;\r\n}\r\n\r\nvoid dinic(int &flow, int &cost) {\r\n\twhile (spfa()) {\r\n\t\tint t = dfs();\r\n\t\tflow += t, cost += t*dist[T];\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tinit();\r\n\tscanf(\"%s\", s+1);\r\n\tS = 201, T = 202;\r\n\tint m = strlen(s+1);\r\n\tfor (int i = 1; i <= m; i++) c[s[i]-'a']++;\r\n\tfor (int i = 1; i <= 26; i++) {\r\n\t\tadd(S, i, c[i-1], 0);\r\n\t}\r\n\tscanf(\"%d\", &n);\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tint x; scanf(\"%s%d\", s+1, &x);\r\n\t\tint len = strlen(s+1);\r\n\t\tmemset(c, 0, sizeof c);\r\n\t\tfor (int j = 1; j <= len; j++) c[s[j]-'a']++;\r\n\t\tfor (int j = 1; j <= 26; j++) {\r\n\t\t\tadd(j, 26+i, c[j-1], i);\r\n\t\t}\r\n\t\tadd(26+i, T, x, 0);\r\n\t}\r\n\t\r\n\tint flow, cost;\r\n\tdinic(flow, cost);\r\n\tif (flow < m) puts(\"-1\");\r\n\telse printf(\"%d\\n\", cost);\r\n\t\r\n\treturn 0;\r\n}"
}