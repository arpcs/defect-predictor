{
    "id": 234669774,
    "contestId": 1225,
    "creationTimeSeconds": 1701151336,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1225,
        "index": "B2",
        "name": "TV Subscriptions (Hard Version)",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1300,
        "tags": [
            "implementation",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1225,
        "members": [
            {
                "handle": "LahsivK4070"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1572087900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 24,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 9830400,
    "source": "#include<bits/stdc++.h>\r\n \r\nusing namespace std;\r\n \r\n#define int long long\r\n#define enl \"\\n\"\r\nconst int MAX = 1e6 + 5;\r\nconst int MOD = 1e9+7;\r\n\r\nsigned main(){\r\n \r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n \r\n    // freopen(\"input.txt\", \"r\", stdin);\r\n    // freopen(\"output.txt\", \"w\", stdout);\r\n\r\n    // use arrays always as vectors sometimes lead to tle\r\n    // use \\n instead of endl, again the same reason as above\r\n    // never forget to use setprecison(10) when ans is in double\r\n    // there are very less palindromes and prime factors for a given number\r\n    // 10 mins late is better than a wrong submission\r\n    // use c++17 only\r\n\r\n    int t;\r\n    cin >> t;\r\n\r\n    while(t--){\r\n\r\n        int n, k, d;\r\n        cin >> n >> k >> d;\r\n\r\n        vector<int> v(n);\r\n        for (int i = 0; i<n; i++){\r\n            cin >> v[i];\r\n        }\r\n\r\n        map<int, int> mp;\r\n        int ans = k;\r\n\r\n        for (int i = 0; i<d; i++){\r\n            mp[v[i]]++;\r\n        }\r\n\r\n        ans = min(ans, (int)mp.size());\r\n\r\n        for (int i = d; i < n; i++){\r\n\r\n            mp[v[i - d]]--;\r\n            if(mp[v[i-d]] == 0){\r\n                mp.erase(v[i - d]);\r\n            }\r\n\r\n            mp[v[i]]++;\r\n            ans = min(ans, (int)mp.size());\r\n        }\r\n\r\n        cout << ans << endl;\r\n    }\r\n\r\n    return 0;\r\n}"
}