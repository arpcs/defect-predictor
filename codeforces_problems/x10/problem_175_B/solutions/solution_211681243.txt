{
    "id": 211681243,
    "contestId": 175,
    "creationTimeSeconds": 1688190380,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 175,
        "index": "B",
        "name": "Plane of Tanks: Pro",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1400,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 175,
        "members": [
            {
                "handle": "StepanovStepanovic"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1334390400
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 46,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 307200,
    "source": "#include <iostream>\n#include <map>\n#include <set>\n#include <algorithm>\n#include <string>\n#include <vector>\nusing namespace std;\n  \n//1/5 more than 2/6?\n//5 * 2 > 1 * 6\n//1/5 > 2/6\n\n//If ad > bc, a/b > c/d\nbool moreThan(int a, int b, int c, int d){\n  int bc = b * c;\n  int ad = a * d;\n  return ad > bc;\n}\n\n//If ad >= bc, a/b >= c/d\nbool moreThanEq(int a, int b, int c, int d){\n  int bc = b * c;\n  int ad = a * d;\n  return ad >= bc;\n}\n\nint main(){\n  int n;\n  cin >> n;\n\n  set<string> nameset;\n  vector<string> names;\n  map<string, int> playerMax;\n  for (int i = 0; i < n; i++){\n    string name;\n    cin >> name;\n\n    int score;\n    cin >> score;\n    if(nameset.find(name) == nameset.end()){\n      names.push_back(name);\n      nameset.insert(name);\n    }\n\n    if (playerMax.find(name) == playerMax.end()){\n      playerMax[name] = score;\n    }\n    else{\n      playerMax[name] = max(playerMax[name], score);\n    }\n  }\n  sort(names.begin(), names.end());\n\n  vector<int> maxes;\n  for (auto pair: playerMax){\n    maxes.push_back(pair.second);\n    //cout << \"player score:\" << pair.second << \"\\n\";\n  }\n  sort(maxes.begin(), maxes.end());\n  \n  map<int,int> maxEnds;\n  int s = maxes.size();\n  for (int i = 0; i < s; i++){\n    int cur = maxes[i];\n    if (i + 1 < s && cur != maxes[i + 1]){\n      maxEnds[cur] = i;\n      //cout << \"score:\" << cur << \"maxind:\" << i << \"\\n\";\n    }\n    else if (i == s - 1){\n      maxEnds[cur] = i;\n      //cout << \"score:\" << cur << \"maxind:\" << i << \"\\n\";\n    }\n  }\n  \n  cout << names.size() << \"\\n\";\n  for (auto name: names){\n    int score = playerMax[name];\n    int endInd = maxEnds[score];\n    \n    cout << name << \" \";\n    int notMoreThan = endInd + 1;\n    //cout << \"notMoreThan:\" << notMoreThan << \",s:\" << s << \"\\n\";\n    bool geq99 = moreThanEq(notMoreThan, s, 99, 100);\n    bool geq90 = moreThanEq(notMoreThan, s, 90, 100);\n    bool geq80 = moreThanEq(notMoreThan, s, 80, 100);\n    bool geq50 = moreThanEq(notMoreThan, s, 50, 100);\n    if (geq99){\n      cout << \"pro\\n\";\n    }\n    else if (geq90){\n      cout << \"hardcore\\n\";\n    }\n    else if (geq80){\n      cout << \"average\\n\";\n    }\n    else if (geq50){\n      cout << \"random\\n\";\n    }\n    else{\n      cout << \"noob\\n\";\n    }\n  }\n}\n"
}