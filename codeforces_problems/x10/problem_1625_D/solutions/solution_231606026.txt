{
    "id": 231606026,
    "contestId": 1625,
    "creationTimeSeconds": 1699282586,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1625,
        "index": "D",
        "name": "Binary Spiders",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "data structures",
            "implementation",
            "math",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1625,
        "members": [
            {
                "handle": "UnrealZoned"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1641989100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define int long long\r\n\r\nusing namespace std;\r\n\r\nconst int inf = 2e9;\r\n\r\nvoid solve() {\r\n    int n, k;\r\n    cin >> n >> k;\r\n\r\n    vector<pair<int, int>> a(n);\r\n    for (int i = 0; i < n; ++i) {\r\n        cin >> a[i].first;\r\n        a[i].second = i;\r\n    }\r\n\r\n    sort(a.begin(), a.end());\r\n\r\n    vector<int> dp(n, 1), p(n, -1);\r\n\r\n    int l = 0, r = 1;\r\n    while (true) {\r\n        if ((a[l].first ^ a[r].first) >= k) {\r\n            p[r] = l;\r\n            ++l;\r\n\r\n            r = max(l, r);\r\n            if (l == n) {\r\n                break;\r\n            }\r\n        } else {\r\n            p[++r] = l - 1;\r\n\r\n            if (r == n) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    for (int i = 1; i < n; ++i) {\r\n        if (p[i] == -1) {\r\n            dp[i] = dp[i - 1];\r\n            continue;\r\n        }\r\n\r\n        dp[i] = max(dp[i - 1], dp[p[i]] + 1);\r\n    }\r\n\r\n    cout << dp[n - 1] << \"\\n\";\r\n    set<int> ans;\r\n\r\n    int idx = n - 1;\r\n    while (idx != -1) {\r\n        ans.insert(a[idx].second + 1);\r\n        idx = p[idx];\r\n    }\r\n\r\n    for (auto el : ans) {\r\n        cout << el << ' ';\r\n    }\r\n}\r\n\r\nsigned main() {\r\n    int t = 1;\r\n\r\n    while (t--) {\r\n        solve();\r\n    }\r\n}\r\n"
}