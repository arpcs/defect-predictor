{
    "id": 229368035,
    "contestId": 1625,
    "creationTimeSeconds": 1698035913,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1625,
        "index": "D",
        "name": "Binary Spiders",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "data structures",
            "implementation",
            "math",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1625,
        "members": [
            {
                "handle": "Zeuszzz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1641989100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h> \r\nusing namespace std;\r\n#define int long long\r\nconst int N = 1e6 + 5;\r\nconst int mod = 998244353;\r\nconst int inf = 1e18;\r\npair<int,int> a[N];\r\nint nex[N << 2][2];\r\nint ww[N  << 2][2];\r\nint pos[N << 2][2]; \r\nint nest[N];\r\nint cnt;\r\n\tint n, k ;\r\nvoid insert(int x , int w , int ps) {\r\n\tint p = 0;\r\n\tfor(int i = 29;i >= 0;i--) {\r\n\t\tint v = ((x >> i) & 1);\r\n\t\tif(!nex[p][v])\r\n\t\tnex[p][v] = ++cnt;\r\n\r\n\t\tif(ww[p][v] <= w) {\r\n\t\t\tww[p][v] = max(ww[p][v] , w);\r\n\t\t\t// pos[p][v] = ps;\r\n\t\t}\r\n\t\tp = nex[p][v];\r\n\t}\r\n}\r\n\r\n\r\npair<int,int> query(int x) {\r\n\tint ans = -1;\r\n\tint targe;\r\n\tint p = 0;\r\n\tint w = 0;\r\n\tfor(int i = 29;i >= 0;i--) {\r\n\t\tint v = (!((x >> i) & 1));\r\n\t\tif(nex[p][v]) {\r\n\t\t\tif(w + (1 << i) >= k){\r\n\t\t\t\tif(ans < ww[p][v]) {\r\n\t\t\t\t\tans = ww[p][v];\r\n\t\t\t\t\t// targe = pos[p][v];\r\n\t\t\t\t}\r\n\t\t\t\tp = nex[p][!v];\r\n\t\t\t}\r\n\t\t\telse w += (1 << i) , p = nex[p][v];\r\n\t\t}else {\r\n\t\t\tp = nex[p][!v];\r\n\t\t}\r\n\t}\r\n\treturn {ans , targe};\r\n}\r\n\r\nvoid solve() {\r\n\tcin >> n >> k;\r\n\tfor(int i= 1;i <= n;i++) cin >> a[i].first , a[i].second = i;\r\n\tsort(a + 1 , a+ 1 + n);\r\n\tint ans = -1;\r\n\r\n\tvector<int>dp(n + 1);\r\n\r\n\tfor(int i = 1;i <= n;i++) {\r\n\t\tauto v  = query(a[i].first);\r\n\t\tif(v.first == -1) {\r\n\t\t\tinsert(a[i].first , 1 , i);\r\n\t\t\tdp[i] = 1;\r\n\t\t}else {\r\n\t\t\tans = max(ans , v.first + 1);\r\n\t\t\tdp[i] = ans;\r\n\t\t\tnest[i] = v.second;\r\n\t\t\tinsert(a[i].first ,v.first + 1 , i);\r\n\t\t}\r\n\t}\r\n\r\n\tif(k == 0) {\r\n\t\tcout << n << \"\\n\";\r\n\t\tfor(int i = 1;i <= n;i++) {cout << i << \" \";}return;\r\n\t}\r\n\r\n\tcout <<ans<< \"\\n\";\r\n\t// for(int i = 1;i <= n;i++) {\r\n\t// \tcout << dp[i] << \" \\n\"[i == n];\r\n\t// }\r\n\tvector<int>v;\r\n\tif(ans != -1)\r\n\tfor(int i = n ;i >= 1;i--) {\r\n\t\tif(dp[i] == ans) {\r\n\t\t\tint p = i;\r\n\t\t\tv.push_back(a[p].second);\r\n\t\t\tfor(int j = i - 1;j >= 1;j--) {\r\n\t\t\t\tif((a[j].first ^ a[p].first) >= k and dp[j] = dp[p] - 1) {\r\n\t\t\t\t\tv.push_back(a[j].second);\r\n\t\t\t\t\tp = j;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tsort(v.begin() , v.end());\r\n\tfor(int i = 0;i < v.size();i++) {\r\n\t\tcout << v[i];\r\n\t\tif(i != v.size() - 1) cout << \" \";\r\n\t}\r\n\r\n}\r\nsigned main()\r\n{\r\n\tios::sync_with_stdio(false),cin.tie(0),cout.tie(0);\r\n\tint _ = 1;\r\n\t// cin>>_;\r\n\twhile(_--)\r\n\t{\r\n\t\tsolve();\r\n\t} \r\n}"
}