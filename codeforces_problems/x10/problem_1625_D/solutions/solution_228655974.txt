{
    "id": 228655974,
    "contestId": 1625,
    "creationTimeSeconds": 1697622116,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1625,
        "index": "D",
        "name": "Binary Spiders",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "data structures",
            "implementation",
            "math",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1625,
        "members": [
            {
                "handle": "chinawcp"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1641989100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 109,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 80998400,
    "source": "// LUOGU_RID: 130155964\n#include<bits/stdc++.h>\r\n#define ll long long \r\n#define ill __int128 \r\n#define ull unsigned long long\r\n#define ld long double\r\n#define yes \"Yes\"\r\n#define no \"No\"\r\nusing namespace std;\r\nconst int inf = 1e9;\r\nconst ll linf = 1e18;\r\nconst int maxn = 1e6 + 5;\r\nconst int N = 2e7 + 5;\r\nconst double eps = 1e-8;\r\nconst int mod = 1e9 + 7;\r\nconst double pi = acos(-1);\r\nconst int prime_bas = 2333;\r\n\r\nint sgn(double x){\r\n    if (fabs(x) < eps)\r\n        return 0;\r\n    if (x < 0)\r\n        return -1;\r\n    else\r\n        return 1;\r\n}\r\nll power(ll x, ll k, int mod = mod){\r\n    if(k == 1) return x;\r\n    if(k == 0) return 1;\r\n    ll tmp = power(x, k / 2, mod);\r\n    if(k & 1) return tmp * tmp % mod * x % mod;\r\n    return tmp * tmp % mod;\r\n}\r\nbool Mbe; double Tim;\r\nstruct node{\r\n    int l, r, val;\r\n}tr[maxn << 2];\r\nint idx = 0, bas[35], n, k; \r\nvector<int> q[35];\r\ninline void insert(int x, int id){\r\n    int now = 0;\r\n    for(int i = 30; i >= 0; i --){\r\n        int op = x & bas[i];\r\n        if(op == 0) {\r\n            if(tr[now].l == 0) tr[now].l = ++ idx, q[i].push_back(idx);\r\n            now = tr[now].l;\r\n        }\r\n        else{\r\n            if(tr[now].r == 0) tr[now].r = ++ idx, q[i].push_back(idx);\r\n            now = tr[now].r;\r\n        }\r\n        tr[now].val = id;\r\n    }\r\n}\r\npair<int, int> dfs(int dep, int x, int y){\r\n    if(dep < 0) return pair(tr[x].val, tr[y].val);\r\n    if(k >> dep & 1){\r\n        pair<int, int> ans; ans.first = -1;\r\n        if(tr[x].l && tr[y].r) ans = dfs(dep - 1, tr[x].l, tr[y].r);\r\n        if(ans.first == -1 && tr[x].r && tr[y].l) ans = dfs(dep - 1, tr[x].r, tr[y].l); \r\n        return ans;\r\n    }\r\n    if(tr[x].l && tr[y].r) return pair(tr[tr[x].l].val, tr[tr[y].r].val);\r\n    if(tr[x].r && tr[y].l) return pair(tr[tr[x].r].val, tr[tr[y].l].val);\r\n    pair<int, int> ans; ans.first = -1;\r\n    if(tr[x].l && tr[y].l) ans = dfs(dep - 1, tr[x].l, tr[y].l);\r\n    if(ans.first == -1 && tr[x].r && tr[y].r) ans = dfs(dep - 1, tr[x].r, tr[y].r);\r\n    return ans;\r\n}\r\nvoid slove(){\r\n    cin >> n >> k;\r\n    vector<int> a(n + 1);\r\n    for(int i = 1; i <= n; i ++){\r\n        cin >> a[i];\r\n    }\r\n    if(k == 0){\r\n        cout << n << '\\n';\r\n        for(int i = 1; i <= n; i ++){\r\n            cout << i << \" \";\r\n        }\r\n        cout << '\\n';\r\n        return;\r\n    }\r\n    for(int i = 1; i <= n; i ++){\r\n        insert(a[i], i);\r\n    }\r\n    vector<int> ans;\r\n    for(int i = 30; i >= 0; i --){\r\n        if(k & bas[i]){\r\n            for(auto x : q[i + 1]){\r\n                pair<int, int> res = dfs(i, x, x);\r\n                if(res.first == -1) ans.push_back(tr[x].val);\r\n                else ans.push_back(res.first), ans.push_back(res.second);\r\n            }\r\n            if(ans.size() < 2){\r\n                cout << -1 << \"\\n\";\r\n                return;\r\n            }\r\n            cout << ans.size() << \"\\n\";\r\n            for(int j = 0, nn = ans.size(); j < nn; j ++){\r\n                cout << ans[j] << \" \";\r\n            }\r\n            cout << '\\n';\r\n            return;\r\n        }\r\n    }\r\n}\r\nbool Med;\r\nint main()\r\n{\r\n    fprintf(stderr, \"%.3lf MB\\n\", (&Med - &Mbe) / 1048576.0);\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0), cout.tie(0);\r\n    int t = 1, flag = 1;\r\n    for(int i = 0; i <= 30; i ++){\r\n        bas[i] = (1 << i);\r\n    }\r\n    // cin >> t, Tim = clock(), flag = 0;\r\n    while(t --){\r\n        if(flag) Tim = clock(), flag = 0;\r\n        slove();\r\n    }\r\n    cerr << '\\n' << 1e3 * (clock() - Tim) / CLOCKS_PER_SEC << \" ms\";\r\n}"
}