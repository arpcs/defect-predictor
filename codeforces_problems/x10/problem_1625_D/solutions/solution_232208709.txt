{
    "id": 232208709,
    "contestId": 1625,
    "creationTimeSeconds": 1699612675,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1625,
        "index": "D",
        "name": "Binary Spiders",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2300,
        "tags": [
            "bitmasks",
            "data structures",
            "implementation",
            "math",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1625,
        "members": [
            {
                "handle": "sham4ik"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1641989100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 21708800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nusing ll = long long;\r\n#define int long long\r\n#define ld long double\r\nconst int N = 3e5 + 3;\r\nconst int mod = 1e9 + 7;\r\nconst int inf = LONG_LONG_MAX;\r\nconst ll p = 10009;\r\nld eps = 0.001;\r\n#define pi  3.14159265358979323846\r\n\r\n\r\nvector<vector<int>>bor(N, vector<int>(2));\r\nvector<int>cnt(N);\r\nint e = 1;\r\nvoid pb(int val){\r\n    int v = 0;\r\n    for(int bit = 31; bit >= 0; --bit){\r\n        int curr_bit = (val >> bit) & 1;\r\n        if(bor[v][curr_bit] == 0){\r\n            bor[v][curr_bit] = e;\r\n            ++e;\r\n        }\r\n        v = bor[v][curr_bit];\r\n        cnt[v] += 1;\r\n    }\r\n}\r\n\r\nint res = 0;\r\nvoid calc(int val){\r\n    int v = 0;\r\n    for(int bit = 31; bit >= 0; --bit){\r\n        int curr_bit = (val >> bit) & 1;\r\n        if(bor[v][curr_bit ^ 1] > 0 && cnt[bor[v][curr_bit ^ 1]] > 0){\r\n            res += (1 << bit);\r\n            //cout << res << '\\n';\r\n            v = bor[v][curr_bit ^ 1];\r\n            continue;\r\n        }\r\n        v = bor[v][curr_bit];\r\n    }\r\n}\r\n\r\n\r\n\r\nvoid solve() {\r\n\r\n    int n, k;\r\n    cin >> n >> k;\r\n    vector<int>arr(n);\r\n    for(auto &i : arr) cin >> i;\r\n    if(k == 0){\r\n        if(n < 2){\r\n            cout << \"-1\\n\";\r\n            return;\r\n        }\r\n        cout << arr.size() << '\\n';\r\n        for(auto &i : arr) cout << i << ' ';\r\n        return;\r\n    }\r\n    map<int,int>mapa;\r\n    for(int i = 0; i < n; ++i){\r\n        pb(arr[i]);\r\n        mapa[arr[i]] = i;\r\n    }\r\n    vector<int>ans;\r\n    map<int,int>used;\r\n    for(int i = 0; i < n; ++i){\r\n        if(used[arr[i]]) continue;\r\n        int now = arr[i];\r\n        vector<int>res2;\r\n        while(true){\r\n            res2.push_back(mapa[now] + 1);\r\n            used[now] = 1;\r\n            res = 0;\r\n            calc(now);\r\n            int y = now ^ res;\r\n            if(res < k) break;\r\n            if(used[y]) break;\r\n            now = y;\r\n        }\r\n        if(ans.size() < res2.size()){\r\n            ans = res2;\r\n        }\r\n    }\r\n    if(ans.size() < 2){\r\n        cout << \"-1\\n\";\r\n        return;\r\n    }\r\n    cout << ans.size() << '\\n';\r\n    for(auto &i : ans) cout << i << ' ';\r\n\r\n}\r\n\r\n\r\nsigned main() {\r\n  ios_base::sync_with_stdio(false);\r\n  cin.tie(nullptr);\r\n  cout.tie(nullptr);\r\n  int tt = 1;\r\n  //    cin >> tt;\r\n  for (int _ = 0; _ < tt; ++_) {\r\n    solve();\r\n  }\r\n}\r\n//\r\n"
}