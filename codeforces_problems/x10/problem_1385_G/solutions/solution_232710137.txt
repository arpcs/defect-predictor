{
    "id": 232710137,
    "contestId": 1385,
    "creationTimeSeconds": 1699943766,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1385,
        "index": "G",
        "name": "Columns Swaps",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "2-sat",
            "dfs and similar",
            "dsu",
            "graphs",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1385,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1594996500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "int n,m,f[N],maxn,x,ans,t;\nvector<int> a[N],b[N],s1[N],s2[N];\nint find(int x){\n  return (x == f[x])?x:f[x] = find(f[x]);\n}\nint main(){\n  for (cin >> t;t--;){\n    cin >> n;\n    fill(a + 1,a + n + 1,a[0]);\n    fill(b + 1,b + n + 1,b[0]);\n    fill(s1 + 1,s1 + 2 * n + 1,s1[0]);\n    fill(s2 + 1,s2 + 2 * n + 1,s2[0]);\n    ans = 0;\n    for (int i = 1;i <= 2 * n;i++){\n      f[i] = i;\n    }\n    for (int i = 1;i <= 2 * n;i++){\n      cin >> x;\n      (i <= n)?a[x].push_back(i):b[x].push_back(i - n);\n    }\n    for (int i = 1;i <= n;i++){\n      (a[x].size() + b[x].size() != 2) && (ans = -1);\n      if (a[i].size() < b[i].size()){\n        swap(a[i],b[i]);\n      }\n      if (a[i].size() && b[i].size()){\n        int f1 = a[i][0],f2 = b[i][0];\n        f[find(f1 + n)] = find(f2 + n);\n        f[find(f1)] = find(f2);\n      }\n      else{\n        int f1 = a[i][1],f2 = a[i][0];\n        f[find(f1 + n)] = find(f2);\n        f[find(f1)] = find(f2 + n);\n      }\n    }\n    for (int i = 1;i <= n;i++){\n      (find(i) == find(i + n)) && (ans = -1);\n      s1[find(i)].push_back(i);\n      s2[find(i + n)].push_back(i);\n    }\n    if (ans == -1){\n      cout << \"-1\\n\";\n      continue;\n    }\n    vector<int> d;\n    for (int i = 1;i <= n;i++){\n      if (s1[i].size() > s2[i].size()){\n        swap(s1[i],s2[i]);\n      }\n      for (auto j : s1[i]){\n        d.push_back(j);\n      }\n    }\n    cout << d.size() << \"\\n\";\n    for (auto i : d){\n      cout << i << \" \";\n    }\n    cout << \"\\n\";\n  }\n}\n\t\t   \t\t\t\t      \t\t\t \t   \t\t    \t\t"
}