{
    "id": 234030135,
    "contestId": 1385,
    "creationTimeSeconds": 1700826956,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1385,
        "index": "G",
        "name": "Columns Swaps",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "2-sat",
            "dfs and similar",
            "dsu",
            "graphs",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1385,
        "members": [
            {
                "handle": "IceKylin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1594996500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 35,
    "timeConsumedMillis": 264,
    "memoryConsumedBytes": 22528000,
    "source": "// LUOGU_RID: 136643501\n//By IceKylin\r\n//Default:CF-style\r\n//-std=c++14 -O2 -Wl,-stack=536870912\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nusing ll=long long;//int\r\nusing pll=pair<ll,ll>;\r\n#define pb push_back\r\n#define lob lower_bound\r\n#define upb upper_bound\r\n#define ft first\r\n#define sd second\r\n#define mp make_pair\r\n#define gc getchar\r\n#define pc putchar\r\n#define _for(i,j,k) for(ll i(j),_(k);i<=_;++i)\r\n#define _rep(i,j,k) for(ll i(j),_(k);i>=_;--i)\r\n#define ios ios::sync_with_stdio(0)\r\n#define Tp template\r\n#define Tn typename\r\n#define auto ll\r\n\r\nnamespace NUMBERS{\r\n    constexpr ll mod1=1e9+7,mod2=998244353;\r\n    constexpr ll inf=0x3f3f3f3f;\r\n    constexpr long long INF=1e18;\r\n    constexpr ll base1=131,base2=13331;\r\n    ll seed=chrono::steady_clock::now().time_since_epoch().count();\r\n    mt19937 rnd(size_t(new char)^seed);\r\n    mt19937_64 rnd_64(size_t(new char)^seed);\r\n}\r\n\r\nnamespace FAST_IO{\r\n    ll rd(){\r\n        char c=gc(),f=0;ll x=0;for(;!isdigit(c);c=gc())c=='-'&&(f=1);\r\n        for(;isdigit(c);c=gc())x=x*10+c-48;return f?-x:x;\r\n    }\r\n    void rd(ll&x){x=rd();}\r\n    Tp<Tn ...R>void rd(ll&x,R&...r){rd(x),rd(r...);}\r\n    void wt(ll x){if(x<0)x=-x,pc('-');if(x>9)wt(x/10);pc(x%10+48);}\r\n    void wt(ll x,char c){wt(x),pc(c);}\r\n    Tp<Tn ...R>void wt(ll x,char c,R...r){wt(x,c),wt(r...);}\r\n    void in(ll a[],ll n){_for(i,1,n)rd(a[i]);}\r\n    void out(ll a[],ll n){_for(i,1,n-1)wt(a[i],' ');wt(a[n],'\\n');}\r\n}\r\n\r\nnamespace OPERATIONS{\r\n    void add(ll&x,ll y,ll p){x+=y,x>=p&&(x-=p),x<0&&(x+=p);}\r\n    void gmx(auto&x,auto y){x<y&&(x=y);}\r\n    void gmi(auto&x,auto y){x>y&&(x=y);}\r\n    ll div_c(ll x,ll y){return (x+y-1)/y;}\r\n    ll lowbit(ll x){return x&-x;}\r\n    ll qpow(ll x,ll y,ll p,ll k=1){\r\n        for(x>p&&(x%=p);y;y>>=1,x=x*x%p)(y&1)&&(k=k*x%p);return k;\r\n    }\r\n    ll exgcd(ll&x,ll&y,ll a,ll b,ll k=1){\r\n        return b?(k=exgcd(y,x,b,a%b),y-=a/b*x,k):(x=1,y=0,a);\r\n    }\r\n}\r\n\r\nnamespace DEBUG{\r\n    ll debug_cnt=0;\r\n    void init_cnt(ll n){debug_cnt=n;}\r\n    void debug(){cout<<\"debug #\"<<++debug_cnt<<'\\n';}\r\n    void debug(auto n){debug();cout<<n<<'\\n';}\r\n    void debug(auto a[],ll n){\r\n        debug();_for(i,1,n-1)cout<<a[i]<<' ';cout<<a[n]<<'\\n';\r\n    }\r\n}\r\n\r\nusing namespace NUMBERS;\r\nusing namespace FAST_IO;\r\nusing namespace OPERATIONS;\r\nusing namespace DEBUG;\r\n#define maxn 200014\r\nll T,n,cnt,fa[maxn*2],ans[maxn];\r\nvector<ll>a[maxn],b[maxn],g[maxn];\r\nvoid init(){\r\n\t_for(i,1,n*2)fa[i]=i;\r\n}\r\nll find(ll x){\r\n\treturn x==fa[x]?x:fa[x]=find(fa[x]);\r\n}\r\nvoid merge(ll x,ll y){\r\n\tx=find(x),y=find(y),fa[x]=y;\r\n}\r\nsigned main(){\r\n    #define ONLINE\r\n    #ifndef ONLINE\r\n    freopen(\"test.in\",\"r\",stdin);\r\n    freopen(\"test.out\",\"w\",stdout);\r\n    #endif\r\n    rd(T);\r\n    while(T--){\r\n    \trd(n),init();\r\n    \t_for(i,1,n)a[i].clear(),b[i].clear();\r\n    \t_for(i,1,n)a[rd()].pb(i);\r\n    \t_for(i,1,n)b[rd()].pb(i);\r\n    \t_for(i,1,n){\r\n    \t\tif(a[i].size()+b[i].size()!=2){\r\n\t\t\t\tpc('-'),pc('1'),pc('\\n');\r\n\t\t\t\tgoto nxt;\r\n\t\t\t}\r\n\t\t\tif(a[i].size()==2){\r\n\t\t\t\tmerge(a[i][0],a[i][1]+n);\r\n\t\t\t\tmerge(a[i][0]+n,a[i][1]);\r\n\t\t\t}\r\n\t\t\telse if(b[i].size()==2){\r\n\t\t\t\tmerge(b[i][0],b[i][1]+n);\r\n\t\t\t\tmerge(b[i][0]+n,b[i][1]);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tmerge(a[i][0],b[i][0]);\r\n\t\t\t\tmerge(a[i][0]+n,b[i][0]+n);\r\n\t\t\t}\r\n\t\t}\r\n\t\tcnt=0;\r\n\t\t_for(i,1,n*2)g[i].clear();\r\n\t\t_for(i,1,n)g[find(i)].pb(i);\r\n\t\t_for(i,1,n){\r\n\t\t\tif(g[i].size()<g[i+n].size()){\r\n\t\t\t\tfor(ll x:g[i])ans[++cnt]=x;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tfor(ll x:g[i+n])ans[++cnt]=x;\r\n\t\t\t}\r\n\t\t}\r\n\t\twt(cnt,'\\n');\r\n\t\tif(cnt)out(ans,cnt);\r\n\t\tnxt:;\r\n\t}\r\n}\r\n"
}