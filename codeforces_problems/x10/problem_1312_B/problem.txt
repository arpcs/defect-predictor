{
    "contestId": 1312,
    "index": "B",
    "name": "Bogosort",
    "type": "PROGRAMMING",
    "rating": 1000,
    "tags": [
        "constructive algorithms",
        "sortings"
    ],
    "desc": {
        "title": "B. Bogosort",
        "statement": "<p>You are given an array $$$a_1, a_2, \\dots , a_n$$$. Array is good if for each pair of indexes $$$i &lt; j$$$ the condition $$$j - a_j \\ne i - a_i$$$ holds. Can you shuffle this array so that it becomes good? To shuffle an array means to reorder its elements arbitrarily (leaving the initial order is also an option).</p><p>For example, if $$$a = [1, 1, 3, 5]$$$, then shuffled arrays $$$[1, 3, 5, 1]$$$, $$$[3, 5, 1, 1]$$$ and $$$[5, 3, 1, 1]$$$ are good, but shuffled arrays $$$[3, 1, 5, 1]$$$, $$$[1, 1, 3, 5]$$$ and $$$[1, 1, 5, 3]$$$ aren't.</p><p>It's guaranteed that it's always possible to shuffle an array to meet this condition.</p>",
        "inputSpecification": "<p>The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 100$$$) \u2014 the number of test cases.</p><p>The first line of each test case contains one integer $$$n$$$ ($$$1 \\le n \\le 100$$$) \u2014 the length of array $$$a$$$.</p><p>The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\dots , a_n$$$ ($$$1 \\le a_i \\le 100$$$).</p>",
        "outputSpecification": "<p>For each test case print the shuffled version of the array $$$a$$$ which is good.</p>",
        "samples": [
            {
                "input": "\n3\n1\n7\n4\n1 1 3 5\n6\n3 2 1 5 6 4\n",
                "output": "\n7\n1 5 1 3\n2 4 6 1 3 5\n"
            }
        ],
        "note": null
    }
}