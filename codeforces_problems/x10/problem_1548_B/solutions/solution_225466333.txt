{
    "id": 225466333,
    "contestId": 1548,
    "creationTimeSeconds": 1695795909,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1548,
        "index": "B",
        "name": "Integers Have Friends",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1800,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "math",
            "number theory",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1548,
        "members": [
            {
                "handle": "RMJRemote"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1627828500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 57,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 10854400,
    "source": "// Hydro submission #6513cac3c2daeacf001b5b9e@1695795908010\n#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\nconst int MAXN = 2e5 + 5;\r\nint n;\r\nlong long a[MAXN], tr[4 * MAXN], b[MAXN];\r\nlong long gcd(long long a, long long b){\r\n  if (!a || !b){\r\n    return max(a, b);\r\n  }\r\n  while (a ^= b ^= a ^= b %= a);\r\n  return b;\r\n}\r\nvoid js(int id, int l, int r){\r\n  if (l == r){\r\n    tr[id] = b[l];\r\n    return ;\r\n  }\r\n  int mid = (l + r) >> 1;\r\n  js(id * 2, l, mid);\r\n  js(id * 2 + 1, mid + 1, r);\r\n  tr[id] = gcd(tr[id * 2], tr[id * 2 + 1]);\r\n}\r\nlong long find(int id, int l, int r, int ql, int qr){\r\n  if (ql <= l && r <= qr){\r\n    return tr[id];\r\n  }else if (l > qr || r < ql){\r\n    return 0;\r\n  }\r\n  int mid = (l + r) >> 1;\r\n  return gcd(find(id * 2, l, mid, ql, qr), find(id * 2 + 1, mid + 1, r, ql, qr));\r\n}\r\nvoid Solve(){\r\n  for (int i = 1; i <= 4 * n; i++){\r\n    tr[i] = 0;\r\n  }\r\n  cin >> n;\r\n  for (int i = 1; i <= n; i++){\r\n    cin >> a[i];\r\n    b[i - 1] = abs(a[i] - a[i - 1]);\r\n  }\r\n  if (n == 1){\r\n    cout << \"1\\n\";\r\n    return ;\r\n  }\r\n  js(1, 1, n - 1);\r\n  int ans = 0;\r\n  for (int i = 1, j = 1; i < n; i++){\r\n    while (j <= i && find(1, 1, n - 1, j, i) == 1){\r\n      j++;\r\n    }\r\n    ans = max(ans, i - j + 2);\r\n  }\r\n  cout << ans << '\\n';\r\n}\r\nint main(){\r\n  ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n  int t;\r\n  cin >> t;\r\n  while (t--){\r\n    Solve();\r\n  }\r\n  return 0;\r\n}"
}