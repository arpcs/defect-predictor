{
    "id": 225535261,
    "contestId": 1548,
    "creationTimeSeconds": 1695827645,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1548,
        "index": "B",
        "name": "Integers Have Friends",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1800,
        "tags": [
            "binary search",
            "data structures",
            "divide and conquer",
            "math",
            "number theory",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1548,
        "members": [
            {
                "handle": "20111019Yu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1627828500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 6451200,
    "source": "// LUOGU_RID: 126405899\n#include <iostream>\r\nusing namespace std;\r\nlong long t, n, a[200005], b[200005], gd[400005];\r\n\r\nlong long gcd(long long x, long long y){\r\n\tint res = x % y;\r\n\twhile(res) x = y, y = res, res = x % y;\r\n\treturn y;\r\n}\r\nvoid pushup(int rt){\r\n\tgd[rt] = gcd(gd[rt << 1], gd[rt << 1 | 1]);\r\n}\r\nvoid build(int l, int r, int rt){\r\n\tif(l == r){\r\n\t\tgd[rt] = b[l];\r\n\t\treturn;\r\n\t}\r\n\tint mid = (l + r) / 2;\r\n\tbuild(l, mid, rt << 1);\r\n\tbuild(mid + 1, r, rt << 1 | 1);\r\n\tpushup(rt);\r\n}\r\nint query(int L, int R, int l, int r, int rt){\r\n\tif(l == r || L <= l && r <= R) return gd[rt];\r\n\tint mid = (l + r) / 2, ans = 0;\r\n\tif(mid >= L) ans = gcd(ans, query(L, R, l, mid, rt << 1));\r\n\tif(mid + 1 <= R) ans = gcd(ans, query(L, R, mid + 1, r, rt << 1 | 1));\r\n\treturn ans;\r\n}\r\nbool check(int mid){\r\n\tfor( int i = 1; i + mid - 1 <= n; i++ ) if(query(i, i + mid - 1, 1, n, 1) >= 2) return 1;\r\n\treturn 0;\r\n}\r\n\r\nsigned main(){\r\n\tios::sync_with_stdio(0);\r\n\tcin.tie(0), cout.tie(0);\r\n\tcin >> t;\r\n\twhile(t--){\r\n\t\tcin >> n;\r\n\t\tfor( int i = 1; i <= n; i++ ) cin >> a[i];\r\n\t\tn--;\r\n\t\tfor( int i = 1; i <= n; i++ ) b[i] = abs(a[i] - a[i + 1]);\r\n\t\tbuild(1, n, 1);\r\n\t\tint l = 1, r = n;\r\n\t\twhile(l < r){\r\n\t\t\tint mid = (l + r + 1) / 2;\r\n\t\t\tif(check(mid)) l = mid;\r\n\t\t\telse r = mid - 1;\r\n\t\t}\r\n\t\tcout << l + 1 << endl;\r\n\t}\r\n\treturn 0;\r\n}"
}