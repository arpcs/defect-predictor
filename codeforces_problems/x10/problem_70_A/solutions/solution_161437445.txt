{
    "id": 161437445,
    "contestId": 70,
    "creationTimeSeconds": 1655867281,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 70,
        "index": "A",
        "name": "Cookies",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1300,
        "tags": [
            "math"
        ]
    },
    "author": {
        "contestId": 70,
        "members": [
            {
                "handle": "Chet8n"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1301155200
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long int ll;\r\ntypedef pair<int, int> pi;\r\n#define fastio ios::sync_with_stdio(0); cin.tie(0); cout.tie(0)\r\n#define all(x) (x).begin(), (x).end()\r\n#define endl \"\\n\"\r\n#define pb push_back\r\n#define mp make_pair\r\n#define F first\r\n#define S second\r\n#define yes cout << \"YES\" << endl\r\n#define no cout << \"NO\" << endl\r\n#define ceill(x, y) ((x + y - 1) / y)\r\n#define setbits(x) __builtin_popcountll(x)\r\n\r\nconst int mod = 1e6 + 3;\r\nconst int inf = 2e9 + 5;\r\nconst long long infl = 2e18 + 5;\r\ndouble PI = 3.14159265358979323846;\r\n\r\ntemplate <int M>\r\nstruct ModInt {\r\n    int val;\r\n\r\n    ModInt(long long x = 0): val((x % M + M) % M) {}\r\n    inline ModInt pow(long long n) const { ModInt ans = 1, x(*this); while (n) { if (n & 1) ans *= x; x *= x; n /= 2; } return ans; }    ModInt inverse() const { return pow(M - 2); }\r\n    inline ModInt inv() const { return pow(M - 2); }\r\n\r\n    inline friend ModInt pow(const ModInt &m, long long n) { return m.pow(n); }\r\n    inline friend ModInt inv(const ModInt &m) { return m.inv(); }\r\n\r\n    inline ModInt operator+() const { ModInt m; m.val = val; return m; }\r\n    inline ModInt operator-() const { ModInt m; m.val = M - val; return m; }\r\n    inline ModInt &operator+=(const ModInt &m) { if ((val += m.val) >= M) val -= M; return *this; }\r\n    inline ModInt &operator-=(const ModInt &m) { if ((val -= m.val) < 0) val += M; return *this; }\r\n    inline ModInt &operator*=(const ModInt &m) { val = (long long) val * m.val % M; return *this; }\r\n    inline ModInt &operator/=(const ModInt &m) { val = (long long) val * m.inv().val % M; return *this; }\r\n\r\n    inline friend ModInt operator+ (const ModInt &lhs, const ModInt &rhs) { return ModInt(lhs) += rhs; }\r\n    inline friend ModInt operator- (const ModInt &lhs, const ModInt &rhs) { return ModInt(lhs) -= rhs; }\r\n    inline friend ModInt operator* (const ModInt &lhs, const ModInt &rhs) { return ModInt(lhs) *= rhs; }\r\n    inline friend ModInt operator/ (const ModInt &lhs, const ModInt &rhs) { return ModInt(lhs) /= rhs; }\r\n    inline friend bool operator==(const ModInt &lhs, const ModInt &rhs) { return lhs.val == rhs.val; }\r\n    inline friend bool operator!=(const ModInt &lhs, const ModInt &rhs) { return lhs.val != rhs.val; }\r\n\r\n    inline ModInt &operator++() { return *this += 1; }\r\n    inline ModInt &operator--() { return *this -= 1; }\r\n    inline ModInt operator++(int) { ModInt result(*this); *this += 1; return result; }\r\n    inline ModInt operator--(int) { ModInt result(*this); *this -= 1; return result; }\r\n\r\n    template <typename T> inline explicit operator T() const { return T(val); }\r\n\r\n    friend std::ostream& operator<<(std::ostream& os, const ModInt& m) {\r\n        return os << m.val;\r\n\r\n    }\r\n    friend std::istream &operator>>(std::istream &is, ModInt &m) {\r\n        long long x; is >> x; m = x;\r\n        return is;\r\n    }\r\n};\r\n\r\nusing mint = ModInt<mod>;\r\n\r\n#ifdef LOCAL\r\n#include \"algo/debug.h\"\r\n#else\r\n#define db(...) 20\r\n#endif\r\n\r\nvoid solve() {\r\n\r\n    int n;\r\n    cin >> n;\r\n\r\n    vector<mint> dp(n+5, -1);\r\n    function<mint(int)> go = [&](int x) {\r\n        if (x <= 1) {\r\n            return (mint)1;\r\n        }\r\n\r\n        if(dp[x] != -1){\r\n            return dp[x];\r\n        }\r\n\r\n        mint k = 1;\r\n        mint here = 0;\r\n        x -= 1;\r\n        while (x >= 0) {\r\n            here += go(x) * k;\r\n            x--;\r\n            k *= 2;\r\n        }\r\n\r\n        return dp[x] = here;\r\n    };\r\n\r\n    cout << go(3) << endl;\r\n\r\n\r\n\r\n}\r\n\r\nint32_t main()\r\n{\r\n    fastio;\r\n    int testCases = 1;\r\n    // cin >> testCases;\r\n    for (int i = 1; i <= testCases; i++) {\r\n        solve();\r\n    }\r\n}"
}