{
    "id": 233989592,
    "contestId": 1872,
    "creationTimeSeconds": 1700798928,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1872,
        "index": "G",
        "name": "Replace With Product",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "brute force",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1872,
        "members": [
            {
                "handle": "harshithabejji"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1694097300
    },
    "programmingLanguage": "GNU C11",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define maxx 200001\r\n\r\ndouble ara[maxx],prefix_sum[maxx],prefix_multiplication[maxx];\r\n\r\ndouble get(int l,int r)\r\n{\r\n    return (prefix_multiplication[r]/prefix_multiplication[l-1]-(prefix_sum[r]-prefix_sum[l-1]));\r\n}\r\n\r\nmain()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        prefix_multiplication[0]=1;\r\n        for(int i=1;i<=n;i++)\r\n        {\r\n            scanf(\"%lf\",&ara[i]);\r\n            prefix_sum[i]=prefix_sum[i-1]+ara[i];\r\n            prefix_multiplication[i]=prefix_multiplication[i-1]*ara[i];\r\n        }\r\n        vector<int> v;\r\n        for(int i=1;i<=n;i++)\r\n        {\r\n            if(ara[i]>1)\r\n            {\r\n                v.push_back(i);\r\n            }\r\n        }\r\n        if(v.size()>40)\r\n        {\r\n            printf(\"%d %d\\n\",v[0],v.back());\r\n        }\r\n        else\r\n        {\r\n            int l=1,r=1;\r\n            for(int i:v)\r\n            {\r\n                for(int k:v)\r\n                {\r\n                    if(i<=k)\r\n                    {\r\n                        if(get(i,k)>get(l,r))\r\n                        {\r\n                            l=i;\r\n                            r=k;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            printf(\"%d %d\\n\",l,r);\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}"
}