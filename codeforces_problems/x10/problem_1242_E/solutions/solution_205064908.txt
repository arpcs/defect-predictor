{
    "id": 205064908,
    "contestId": 1242,
    "creationTimeSeconds": 1683539068,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1242,
        "index": "E",
        "name": "Planar Perimeter",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3200,
        "tags": [
            "constructive algorithms",
            "graphs"
        ]
    },
    "author": {
        "contestId": 1242,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1573052700
    },
    "programmingLanguage": "Clang++20 Diagnostics",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 67,
    "timeConsumedMillis": 748,
    "memoryConsumedBytes": 25395200,
    "source": "#include<bits/stdc++.h>\n#define ll long long\nusing namespace std;\nconst int F=1e5+4;\nint f,flag;\nstruct G{\n\tint val,bj;\n}g[F];\nbool cmp(G a,G b){\n\treturn a.val>b.val;\n}\ndeque<int>q;\nvector<int>vec[F];\nint main(){\n\tscanf(\"%d\",&f);\n\tfor(int i=1;i<=f;i++){\n\t\tscanf(\"%d\",&g[i].val);\n\t\tg[i].bj=i;\n\t}\n\tsort(g+1,g+f+1,cmp);\n\tfor(int i=1;i<=g[1].val;i++){\n\t\tvec[g[1].bj].push_back(flag);\n\t\tq.push_back(flag);\n\t\tflag++;\n\t}\n\tg[f+1].val=3;\n\tfor(int i=2;i<=f;i++){\n\t\tint bj2=min(g[i].val-1,((int)q.size()+g[i].val-g[i+1].val)/2);\n\t\tfor(int j=1;j<bj2;j++){\n\t\t\tvec[g[i].bj].push_back(q.back());\n\t\t\tq.pop_back();\n\t\t}\n\t\tvec[g[i].bj].push_back(q.back());\n\t\tfor(int j=bj2;j<g[i].val-1;j++){\n\t\t\tvec[g[i].bj].push_back(flag);\n\t\t\tq.push_back(flag);\n\t\t\tflag++;\n\t\t}\n\t\tvec[g[i].bj].push_back(q.front());\n\t\tq.push_back(q.front());\n\t\tq.pop_front();\n\t}\n\tprintf(\"%d\\n\",flag);\n\tfor(int i=1;i<=f;i++){\n\t\tfor(int j=0;j<vec[i].size();j++){\n\t\t\tprintf(\"%d \",vec[i][j]+1);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}\n\t \t  \t    \t  \t\t  \t\t\t  \t     \t\t\t\n  \t     \t    \t\t\t\t \t\t  \t\t \t \t \t"
}