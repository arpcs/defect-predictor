{
    "id": 220806044,
    "contestId": 1242,
    "creationTimeSeconds": 1693194465,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1242,
        "index": "E",
        "name": "Planar Perimeter",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3200,
        "tags": [
            "constructive algorithms",
            "graphs"
        ]
    },
    "author": {
        "contestId": 1242,
        "members": [
            {
                "handle": "le0n"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1573052700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 6246400,
    "source": "#include <cstdio>\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\n\r\nint a[100005], b[100005], l[100005], r[100005];\r\nint sz[100005];\r\nint tmp[100005], wow[100005], cnt, len;\r\nvector<int> num[100005];\r\nbool cmp(int x, int y)\r\n{\r\n\treturn a[x] < a[y];\r\n}\r\n\r\nint main()\r\n{\r\n\tint n, i, tot, x, j;\r\n\tscanf(\"%d\", &n);\r\n\tfor(i = 1; i <= n; i++)\r\n\t\tscanf(\"%d\", a + i);\r\n\tfor(i = 1; i <= n; i++)\r\n\t\tb[i] = i;\r\n\tsort(b + 1, b + n + 1, cmp);\r\n//\tfor(i = 1; i <= n; i++)\r\n//\t\tprintf(\"!%d\\n\", b[i]);\r\n\tl[1] = r[1] = a[b[1]];\r\n\tfor(i = 2; i <= n; i++)\r\n\t{\r\n\t\tr[i] = r[i - 1] + a[b[i]];\r\n\t\tl[i] = ((a[b[i]] - r[i - 1]) % 2 + 2) % 2 + 2;\r\n\t\tif(l[i] == 2)\r\n\t\t\tl[i] = 4;\r\n\t}\r\n\tsz[n] = l[n];\r\n\tfor(i = n - 1; i >= 1; i--)\r\n\t\tif(r[i] < a[b[i + 1]])\r\n\t\t\tsz[i] = r[i];\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(sz[i + 1] > a[b[i + 1]])\r\n\t\t\t\tsz[i] = max(l[i], sz[i + 1] - a[b[i + 1]]);\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tsz[i] = a[b[i + 1]];\r\n\t\t\t\tif((sz[i] & 1) != (l[i] & 1))\r\n\t\t\t\t\tsz[i]--;\r\n\t\t\t\tif(sz[i] < l[i])\r\n\t\t\t\t\tsz[i] += 2;\r\n\t\t\t}\r\n\t\t}\r\n//\tfor(i = 1; i <= n; i++)\r\n//\t\tprintf(\"?%d %d %d\\n\", sz[i], l[i], r[i]);\r\n\tfor(i = 1; i <= sz[1]; i++)\r\n\t{\r\n\t\ttmp[i] = i;\r\n\t\tnum[b[1]].emplace_back(i);\r\n\t}\r\n\ttot = sz[1];\r\n\tfor(i = 2; i <= n; i++)\r\n\t{\r\n\t\tx = (sz[i - 1] + a[b[i]] - sz[i]) / 2;\r\n//\t\tprintf(\"!!%d\\n\", x);\r\n\t\tfor(j = 1; j <= x; j++)\r\n\t\t\tnum[b[i]].emplace_back(tmp[sz[i - 1] - x + j]);\r\n\t\tnum[b[i]].emplace_back(tmp[1]);\r\n\t\tfor(j = x + 2; j <= a[b[i]]; j++)\r\n\t\t\tnum[b[i]].emplace_back(++tot);\r\n\t\tfor(j = sz[i - 1] - x + 2; j <= sz[i]; j++)\r\n\t\t\ttmp[j] = tot - (j - (sz[i - 1] - x + 2));\r\n\t\tx = tmp[1];\r\n\t\tfor(j = 1; j < sz[i]; j++)\r\n\t\t\ttmp[j] = tmp[j + 1];\r\n\t\ttmp[sz[i]] = x;\r\n//\t\tfor(j = 1; j <= sz[i]; j++)\r\n//\t\t\tprintf(\"%d \", tmp[j]);\r\n//\t\tprintf(\"\\n\");\r\n\t}\r\n\tprintf(\"%d\\n\", tot);\r\n\tfor(i = 1; i <= n; i++)\r\n\t{\r\n\t\tfor(auto p: num[i])\r\n\t\t\tprintf(\"%d \", p);\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}"
}