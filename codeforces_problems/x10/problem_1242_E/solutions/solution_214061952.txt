{
    "id": 214061952,
    "contestId": 1242,
    "creationTimeSeconds": 1689520091,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1242,
        "index": "E",
        "name": "Planar Perimeter",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3200,
        "tags": [
            "constructive algorithms",
            "graphs"
        ]
    },
    "author": {
        "contestId": 1242,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1573052700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 67,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 6451200,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    int f;\n    cin >> f;\n    vector<pair<int, int>> a(f);\n    for (int i = 0; i < f; ++i) {\n        int x;\n        cin >> x;\n        a[i] = {x, i};\n    }\n    sort(a.begin(), a.end(), greater<pair<int, int>>());\n    int n = 0;\n    deque<int> q;\n    vector<vector<int>> v(f);\n    for (int i = 0; i < a[0].first; ++i) {\n        q.push_back(n);\n        v[a[0].second].push_back(n);\n        ++n;\n    }\n    for (int i = 1; i < f; ++i) {\n        int e, k;\n        tie(e, k) = a[i];\n        int p = min(e - 1, ((int)q.size() + e - (i == f - 1 ? 3 : a[i + 1].first)) / 2);\n        for (int j = 0; j < p - 1; ++j) {\n            v[k].push_back(q.back());\n            q.pop_back();\n        }\n        v[k].push_back(q.back());\n        for (int j = p; j < e - 1; ++j) {\n            v[k].push_back(n);\n            q.push_back(n);\n            ++n;\n        }\n        v[k].push_back(q.front());\n        q.push_back(q.front());\n        q.pop_front();\n    }\n    cout << n << \"\\n\";\n    for (int i = 0; i < f; ++i)\n        for (int j : v[i])\n            cout << j + 1 << \" \\n\"[j == v[i].back()];\n    return 0;\n}\n \t  \t   \t\t \t   \t\t   \t\t\t\t\t \t\t \t"
}