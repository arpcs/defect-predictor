{
    "contestId": 1242,
    "index": "E",
    "name": "Planar Perimeter",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 3200,
    "tags": [
        "constructive algorithms",
        "graphs"
    ],
    "desc": {
        "title": "E. Planar Perimeter",
        "statement": "<p>Ujan has finally cleaned up his house and now wants to decorate the interior. He decided to place a beautiful carpet that would really tie the guest room together.</p><p>He is interested in carpets that are made up of polygonal patches such that each side of a patch is either a side of another (different) patch, or is an exterior side of the whole carpet. In other words, the carpet can be represented as a planar graph, where each patch corresponds to a face of the graph, each face is a simple polygon. The perimeter of the carpet is the number of the exterior sides. </p><p>Ujan considers a carpet beautiful if it consists of $$$f$$$ patches, where the $$$i$$$-th patch has exactly $$$a_i$$$ sides, and the perimeter is the smallest possible. Find an example of such a carpet, so that Ujan can order it!</p>",
        "inputSpecification": "<p>The first line of input contains a single integer $$$f$$$ ($$$1 \\leq f \\leq 10^5$$$), the number of patches in the carpet. </p><p>The next line contains $$$f$$$ integers $$$a_1, \\ldots, a_f$$$ ($$$3 \\leq a_i \\leq 3\\cdot 10^5$$$), the number of sides of the patches. The total number of the sides of the patches $$$a_1 + \\ldots + a_f$$$ does not exceed $$$3\\cdot10^5$$$.</p>",
        "outputSpecification": "<p>Output the description of the carpet as a graph. </p><p>First, output a single integer $$$n$$$ ($$$3 \\leq n \\leq 3 \\cdot 10^5$$$), the total number of vertices in your graph (the vertices must be numbered from $$$1$$$ to $$$n$$$). </p><p>Then output $$$f$$$ lines containing the description of the faces. The $$$i$$$-th line should describe the $$$i$$$-th face and contain $$$a_i$$$ distinct integers $$$v_{i,1}, \\ldots, v_{i,a_i}$$$ ($$$1 \\leq v_{i,j} \\leq n$$$), which means that the vertices $$$v_{i,j}$$$ and $$$v_{i,(j \\bmod{a_i})+1}$$$ are connected by an edge for any $$$1 \\leq j \\leq a_i$$$.</p><p>The graph should be planar and satisfy the restrictions described in the problem statement. Its perimeter should be the smallest possible. <span class=\"tex-font-style-bf\">There should be no double edges or self-loops in the graph.</span> The graph should be connected. Note that a solution always exists; if there are multiple solutions, output any of them.</p>",
        "samples": [
            {
                "input": "\n2\n3 3\n",
                "output": "\n4\n2 1 4 \n1 2 3 \n"
            },
            {
                "input": "\n3\n5 3 5\n",
                "output": "\n6\n1 2 3 4 5\n4 5 6\n1 3 4 6 5\n"
            }
        ],
        "note": "<p>In the first sample, the two triangular faces are connected by a single edge, which results in the minimum perimeter $$$4$$$.</p><p>The figure shows one possible configuration for the second sample. The minimum perimeter in this case is $$$3$$$. </p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/14f684e0a21b8440171c1e7089eb036b3e57ebee.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center>"
    },
    "suggested_categories": [
        "graph theory",
        "planar graphs",
        "polygonal patches",
        "interior decorating",
        "simple polygons",
        "perimeter optimization",
        "connected graphs",
        "combinatorial geometry",
        "artificial intelligence",
        "optimization problems",
        "mathematical modeling",
        "algorithms",
        "complexity theory",
        "geometric algorithms",
        "graph representation",
        "discrete mathematics",
        "computational geometry",
        "interior design",
        "combinatorics",
        "mathematical optimization"
    ]
}