{
    "id": 199447193,
    "contestId": 730,
    "creationTimeSeconds": 1679939893,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 730,
        "index": "B",
        "name": "Minimum and Maximum",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "interactive"
        ]
    },
    "author": {
        "contestId": 730,
        "members": [
            {
                "handle": "hiddeniiitian"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1477209600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1228800,
    "source": "/* \u0936\u094d\u0930\u0940 \u0917\u0923\u0947\u0936\u093e\u092f \u0928\u092e\u0903 */\r\n/* \u0950 \u0928\u092e\u0903 \u0936\u093f\u0935\u093e\u092f */\r\n/* ENCODED BY ------------------------------------> MAYANK PANDEY */\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define all(v) \\\r\n    v.begin(), v.end()\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define te       \\\r\n    ll test;     \\\r\n    cin >> test; \\\r\n    for (ll tes = 1; tes <= test; tes++)\r\n#define fast                          \\\r\n    ios_base::sync_with_stdio(false); \\\r\n    cin.tie(NULL);\r\n#define endl \\\r\n    \"\\n\"\r\n#define nxt cout << endl;\r\n#define in(v)         \\\r\n    for (auto &x : v) \\\r\n        cin >> x;\r\n#define out(v)            \\\r\n    for (auto &x : v)     \\\r\n    {                     \\\r\n        cout << x << \" \"; \\\r\n    }                     \\\r\n    nxt;\r\n#define mout(v)                                     \\\r\n    for (auto &x : v)                               \\\r\n    {                                               \\\r\n        cout << x.first << \" \" << x.second << endl; \\\r\n    }                                               \\\r\n    // nxt\r\n#define FL                            \\\r\n    freopen(\"input.txt\", \"r\", stdin); \\\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n// fucntion\r\n// ll MOD = 998244353;\r\nll power(ll a, ll b, ll m)\r\n{\r\n    ll ans = 1;\r\n    while (b)\r\n    {\r\n        if (b & 1)\r\n            ans = (ans * 1LL * a) % m;\r\n        a = (a * 1LL * a) % m;\r\n        b >>= 1;\r\n    }\r\n    return ans;\r\n}\r\ninline ll ssqrt(ll x)\r\n{\r\n    long long l = sqrtl(x) - 50, r = sqrtl(x) + 150;\r\n    l = max(l, 0ll);\r\n    while (l < r - 1)\r\n    {\r\n        long long mid = l + r >> 1;\r\n        if (mid * mid <= x)\r\n            l = mid;\r\n        else\r\n            r = mid;\r\n    }\r\n    return l;\r\n}\r\n\r\nvector<ll> trial_division(ll num) // O (sqrt(num)+20)\r\n{\r\n    vector<ll> factor;\r\n    for (ll i = 2; i * i <= num; i++)\r\n    {\r\n        while (num % i == 0)\r\n        {\r\n            factor.push_back(i);\r\n            num /= i;\r\n        }\r\n    }\r\n    if (num > 1)\r\n    {\r\n        factor.push_back(num);\r\n    }\r\n    return factor;\r\n}\r\nll mod_add(ll a, ll b, ll m)\r\n{\r\n    return ((a % m) + (b % m)) % m;\r\n}\r\nll mod_mul(ll a, ll b, ll m)\r\n{\r\n    return ((a % m) * (b % m)) % m;\r\n}\r\nll mod_sub(ll a, ll b, ll m)\r\n{\r\n    return (((a % m) - (b % m)) % m + m) % m;\r\n}\r\nll mod_div(ll a, ll b, ll m)\r\n{\r\n    return (mod_mul(a, power(b, m - 2, m), m)) % m;\r\n}\r\nvector<ll> know_all_prime(ll num)\r\n{\r\n    vector<ll> ans;\r\n    for (ll i = 2; i * i <= num; i++)\r\n    {\r\n        if (num % i == 0)\r\n        {\r\n            ans.push_back(i);\r\n        }\r\n        while (num % i == 0)\r\n        {\r\n            num /= i;\r\n        }\r\n    }\r\n    if (num > 1)\r\n    {\r\n        ans.push_back(num);\r\n    }\r\n    return ans;\r\n}\r\nll phi(ll num)\r\n{\r\n    ll ans = num;\r\n    vector<ll> arr = know_all_prime(num);\r\n    for (ll i = 0; i < arr.size(); i++)\r\n    {\r\n        ans *= (arr[i] - 1);\r\n        ans /= arr[i];\r\n    }\r\n    return ans;\r\n}\r\nvoid extendgcd(ll a, ll b, vector<ll> &v) // pass an vector of size 3 with address\r\n{\r\n    if (b == 0)\r\n    {\r\n        v[0] = 1; // x = v[0]\r\n        v[1] = 0; // y = v[1]\r\n        v[2] = a; // v[2] = gcd(a,b)\r\n        return;\r\n    }\r\n    extendgcd(b, a % b, v);\r\n    ll x = v[1];\r\n    v[1] = v[0] - v[1] * (a / b);\r\n    v[0] = x;\r\n    return;\r\n}\r\nll modulo_inverse_prime(ll a, ll m)\r\n{\r\n    return power(a, m - 2, m);\r\n}\r\nll modulo_inverse_nonprime(ll a, ll m)\r\n{\r\n    vector<ll> ans(3, 0);\r\n    if (__gcd(a, m) != 1)\r\n    {\r\n        return -1;\r\n    }\r\n    extendgcd(a, m, ans);\r\n    return (ans[0] % m + m) % m;\r\n}\r\nll lcm(ll a, ll b)\r\n{\r\n    return (a / __gcd(a, b)) * b;\r\n}\r\nvoid solve();\r\nvector<vector<ll>> sieve(1e5 + 10);\r\nint main()\r\n{\r\n    // fast;\r\n    te\r\n    {\r\n        solve();\r\n    }\r\n}\r\nvoid solve()\r\n{\r\n    ll num;\r\n    cin >> num;\r\n    deque<int> dq;\r\n    dq.push_back(1);\r\n    for (ll i = 2; i <= num; i++)\r\n    {\r\n        cout << \"? \" << dq.back() << \" \" << i << endl;\r\n        cout.flush();\r\n        char x;\r\n        cin >> x;\r\n        if (x == '=')\r\n        {\r\n            dq.push_back(i);\r\n            continue;\r\n        }\r\n        if (x == '<')\r\n        {\r\n            dq.push_back(i);\r\n            continue;\r\n        }\r\n        if (dq.size() == 1)\r\n        {\r\n            dq.push_front(i);\r\n            continue;\r\n        }\r\n\r\n        cout << \"? \" << dq.front() << \" \" << i << endl;\r\n        cout.flush();\r\n        // char x;\r\n        cin >> x;\r\n        if (x == '>')\r\n        {\r\n            dq.push_front(i);\r\n        }\r\n    }\r\n    cout << \"! \" << dq.front() << \" \" << dq.back() << endl;\r\n}"
}