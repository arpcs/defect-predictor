{
    "id": 209227316,
    "contestId": 997,
    "creationTimeSeconds": 1686424525,
    "relativeTimeSeconds": 6925,
    "problem": {
        "contestId": 997,
        "index": "D",
        "name": "Cycles in product",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2900,
        "tags": [
            "combinatorics",
            "divide and conquer",
            "trees"
        ]
    },
    "author": {
        "contestId": 997,
        "members": [
            {
                "handle": "353cerega"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1686417600
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 102400,
    "source": "//#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC optimize(\"O3,unroll-loops\")\r\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\r\n#include <bits/stdc++.h>\r\n\r\n\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\nusing ld = long double;\r\n\r\n#define X first\r\n#define Y second\r\n\r\n//const int mod = 1000000007;\r\nconst int mod = 998244353;\r\n\r\n\r\n\r\nll dp[2][4000];\r\n\r\nvoid solve()\r\n{\r\n    int n, m;\r\n    int k;\r\n    cin >> n >> m >> k;\r\n    if (k%2!=0)\r\n    {\r\n        cout << 0 << \"\\n\";\r\n        return;\r\n    }\r\n    int k2 = k/2;\r\n    vector<vector<int>> g;\r\n    vector<vector<int>> g2;\r\n    for (int w=0;w<2;w++)\r\n    {\r\n        g.resize(n);\r\n        for (int i=1;i<n;i++)\r\n        {\r\n            int u, v;\r\n            cin >> u >> v;\r\n            u--, v--;\r\n            g[u].push_back(v);\r\n            g[v].push_back(u);\r\n        }\r\n        for (int i=0;i<n;i++) sort(g[i].begin(),g[i].end());\r\n        swap(n,m);\r\n        swap(g,g2);\r\n    }\r\n    vector<int> A(k2+1), B(k2+1);\r\n    for (int w=0;w<2;w++)\r\n    {\r\n        A[0] = n;\r\n        for (int i=0;i<n;i++)\r\n        {\r\n            int cur = 0, nxt = 1;\r\n            for (int j=0;j<n;j++) dp[cur][j] = 0;\r\n            dp[cur][i] = 1;\r\n            for (int q=1;q<=k2;q++)\r\n            {\r\n                for (int j=0;j<n;j++) dp[nxt][j] = 0;\r\n                for (int j=0;j<n;j++)\r\n                {\r\n                    if (dp[cur][j]==0) continue;\r\n                    for (int u: g[j])\r\n                    {\r\n                        dp[nxt][u] += dp[cur][j];\r\n                        dp[nxt][u] %= mod;\r\n                    }\r\n                }\r\n                swap(cur,nxt);\r\n                for (int j=0;j<=i;j++)\r\n                {\r\n                    //if (dp[cur][j]>=mod) dp[cur][j] %= mod;\r\n                    if (i==j) A[q] = (A[q]+dp[cur][j]*1LL*dp[cur][j])%mod;\r\n                    else A[q] = (A[q]+dp[cur][j]*1LL*dp[cur][j]*2)%mod;\r\n                }\r\n            }\r\n        }\r\n        swap(n,m);\r\n        swap(g,g2);\r\n        swap(A,B);\r\n    }\r\n    ll ans = 0;\r\n    vector<vector<ll>> C(k+1,vector<ll>(k+1));\r\n    for (ll i=0;i<=k;i++)\r\n    {\r\n        C[i][0] = C[i][i] = 1;\r\n        for (ll j=1;j<i;j++) C[i][j] = (C[i-1][j-1]+C[i-1][j])%mod;\r\n    }\r\n    for (int i=0;i<=k;i+=2)\r\n    {\r\n        ans = (ans+A[i/2]*B[(k-i)/2]%mod*C[k][i])%mod;\r\n    }\r\n    cout << ans << \"\\n\";\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    ll T;\r\n    T = 1;\r\n    //cin >> T;\r\n    while (T--) solve();\r\n}"
}