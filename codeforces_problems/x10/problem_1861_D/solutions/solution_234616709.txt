{
    "id": 234616709,
    "contestId": 1861,
    "creationTimeSeconds": 1701103189,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1861,
        "index": "D",
        "name": "Sorting By Multiplication",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "dp",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1861,
        "members": [
            {
                "handle": "scnucjh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1693492500
    },
    "programmingLanguage": "Java 8",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 16,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 4710400,
    "source": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.StringJoiner;\nimport java.util.StringTokenizer;\n\n\npublic class Main {\n\n\n  public static class Printer {\n    StringJoiner stringJoiner;\n    public Printer() {\n      stringJoiner = new StringJoiner(\"\\n\");\n    }\n\n    public void addString(String s) {\n      stringJoiner.add(s);\n    }\n\n    public void addInt(int a) {\n      stringJoiner.add(String.format(\"%d\", a));\n    }\n\n    public void addLong(long a) {\n      stringJoiner.add(String.format(\"%d\", a));\n    }\n\n    public void print() {\n      System.out.println(stringJoiner);\n    }\n\n  }\n\n\n  public static class Scanner {\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    StringTokenizer st = new StringTokenizer(\"\");\n\n    public String next() {\n      while (!st.hasMoreTokens())\n        try {\n          st = new StringTokenizer(br.readLine());\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n      return st.nextToken();\n    }\n\n    public int nextInt() {\n      return Integer.parseInt(next());\n    }\n\n    public int[] readIntArray(int n) {\n      int[] a = new int[n];\n      for (int i = 0; i < n; i++)\n        a[i] = nextInt();\n      return a;\n    }\n\n    public long nextLong() {\n      return Long.parseLong(next());\n    }\n  }\n\n  static Scanner scanner = new Scanner();\n  static Printer printer = new Printer();\n  static int N = 200010;\n  static int[] dpDesc  = new int[N];\n  static int[] dpInc  = new int[N];\n\n  public static void main(String[] args) {\n    boolean multiCase = true;\n    int caseNum = multiCase ? scanner.nextInt() : 1;\n    for (int i = 1; i <= caseNum; i++) {\n      run();\n    }\n    printer.print();\n  }\n\n  public static void run() {\n    int n = scanner.nextInt();\n    int[] a = new int[n];\n    for (int i = 0; i < n; i++) {\n      a[i] = scanner.nextInt();\n    }\n    dpDesc[0] = 1;\n    for (int i = 1; i < n; i++) {\n      dpDesc[i] = dpDesc[i - 1] + (a[i] >= a[i - 1] ? 1 : 0);\n    }\n    int ans = dpDesc[n - 1];\n    dpInc[n - 1] = 1;\n    for (int i = n - 2; i >= 0; i--) {\n      dpInc[i] = dpInc[i + 1] + (a[i] >= a[i + 1] ? 1 : 0);\n      ans = Math.min(ans, dpDesc[i] + dpInc[i + 1] - 1);\n    }\n    ans = Math.min(ans, dpInc[0] - 1);\n    printer.addInt(ans);\n  }\n}\n"
}