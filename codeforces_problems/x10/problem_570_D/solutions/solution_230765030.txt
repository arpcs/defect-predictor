{
    "id": 230765030,
    "contestId": 570,
    "creationTimeSeconds": 1698814563,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 570,
        "index": "D",
        "name": "Tree Requests",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "binary search",
            "bitmasks",
            "constructive algorithms",
            "dfs and similar",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 570,
        "members": [
            {
                "handle": "Nogtade"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1439483400
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 87654400,
    "source": "// LUOGU_RID: 132734431\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define LL long long \r\n#define PII pair<int, int>\r\nconst int MAX = 5e5 + 70;\r\nint n, m;\r\nint siz[MAX];\r\nint bson[MAX], top[MAX], dep[MAX];\r\nbool c[MAX], ans[MAX];\r\nchar ch[MAX];\r\nvector<int> son[MAX];\r\nvector<PII> ask[MAX]; //\u6302\u4e0a\u8be2\u95ee \r\nvector<PII> hav[MAX];\r\nint cnt[MAX][30]; //\u8868\u793a\u6df1\u5ea6x\u7684\u4e3a  \u7684\u8282\u70b9\u6570 \r\nvoid dfs_size(int x, int fa) {\r\n\tdep[x] = dep[fa] + 1; siz[x] = 1;\r\n\tfor(auto y : son[x]) {\r\n\t\tdfs_size(y, x);\r\n\t\tsiz[x] += siz[y];\r\n\t}\r\n}\r\nvoid pre_dfs(int x, int chain) {\r\n\tLL Max = 0; int id = 0;\r\n\tfor(auto y : son[x]) if(siz[y] > siz[id]) id = y;\r\n\tbson[x] = id; top[x] = chain;\r\n\tfor(int y : son[x]) {\r\n\t\tif(y == bson[x]) pre_dfs(y, chain);\r\n\t\telse pre_dfs(y, y);\r\n\t}\r\n}\r\nvoid dfs(int x, int fa) {\r\n\tfor(auto y : son[x]) {\r\n\t\tif(y != bson[x]) dfs(y, x);\r\n\t} //\u904d\u5386\u6e05\u513f\u5b50 \r\n\tif(bson[x]) dfs(bson[x], x); //\u904d\u5386\u91cd\u513f\u5b50\r\n\tfor(auto y : son[x]) {\r\n\t\tif(y != bson[x]) {\r\n\t\t\tfor(auto u : hav[y]) {\r\n\t\t\t\thav[x].push_back(u);\r\n//\t\t\t\tprintf(\"f %d s %d\\n\", u.first, u.second);\r\n\t\t\t\tcnt[u.first][u.second]++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n//\tprintf(\"dep[%d] %d ch %d\\n\", x, dep[x], (ch[x] - 'a' + 1));\r\n//\tprintf(\"x %d fa %d\\n\", x, fa);\r\n\tcnt[dep[x]][(ch[x] - 'a') + 1] += 1; //\u81ea\u5df1\u7684\u70b9\r\n\tPII Now; Now.first = dep[x], Now.second = (ch[x] - 'a' + 1);\r\n\thav[x].push_back(Now); \r\n\tfor(auto y : ask[x]) {\r\n\t\tint akdep = y.first, id = y.second;\r\n\t\tint num = 0;\r\n\t\tfor(int j = 1; j <= 26; j++) {\r\n\t\t\tif(cnt[akdep][j] % 2) num++;\r\n\t\t}\r\n\t\tif(num > 1) ans[id] = 0;\r\n\t\telse ans[id] = 1;\r\n\t}\r\n\tif(top[x] == x) {\r\n\t\tfor(auto y : hav[x]) cnt[y.first][y.second] = 0;\r\n\t} \r\n}\r\nint main() {\r\n\tscanf(\"%d%d\", &n, &m);\r\n\tfor(int i = 2; i <= n; i++) {\r\n\t\tint x; scanf(\"%d\", &x);\r\n\t\tson[x].push_back(i);\r\n\t}\r\n\tscanf(\"%s\", ch + 1);\r\n//\tfor(int i = 1; i <= n; i++) cout<<ch[i];\r\n\tdfs_size(1, 0);\r\n\tpre_dfs(1, 1);\r\n\tfor(int i = 1; i <= m; i++) {\r\n\t\tint x, y; scanf(\"%d%d\", &x, &y);\r\n\t\tPII Now; Now.first = y, Now.second = i;\r\n\t\task[x].push_back(Now);  \r\n\t}\r\n\tdfs(1, 0); //\u8be2\u95ee \r\n\tfor(int i = 1; i <= m; i++) {\r\n\t\tif(ans[i]) printf(\"Yes\\n\");\r\n\t\telse printf(\"No\\n\");\r\n\t}\r\n\treturn 0;\r\n}"
}