{
    "id": 222084720,
    "contestId": 570,
    "creationTimeSeconds": 1694009711,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 570,
        "index": "D",
        "name": "Tree Requests",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "binary search",
            "bitmasks",
            "constructive algorithms",
            "dfs and similar",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 570,
        "members": [
            {
                "handle": "thisislike"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1439483400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 65,
    "timeConsumedMillis": 1200,
    "memoryConsumedBytes": 166809600,
    "source": "#include<bits/stdc++.h>\r\n#define endl '\\n'\r\nusing namespace std;\r\nusing i64=long long ;\r\nusing ld=long double;\r\nconst int N=5e5+10;\r\nconst int mod=1e9+7;\r\nint sz[N];\r\nint son[N];\r\nint d[N];\r\nvector<int> a[N];\r\nint cnt[N][27];\r\nstring s;\r\nint ans[N];\r\nstruct ll{\r\n\tint id;\r\n\tint x;\r\n};\r\nvector<ll> q[N];\r\nvoid dfs(int x){\r\n\tfor(auto y:a[x]){\r\n\t\td[y]=d[x]+1;\r\n\t\tdfs(y);\r\n\t\tsz[x]+=sz[y];\r\n\t\tif(sz[y]>sz[son[x]]) son[x]=y;\r\n\t}\r\n\tsz[x]++;\r\n}\r\nvoid cal(int x){\r\n\tcnt[d[x]][s[x]-'a']++;\r\n\tfor(auto y:a[x]) cal(y);\r\n}\r\nvoid del(int x){\r\n\tcnt[d[x]][s[x]-'a']=0;\r\n\tfor(auto y:a[x]){\r\n\t\tdel(y);\r\n\t}\r\n}\r\nvoid dfs2(int x,int k){\r\n\tfor(auto y:a[x]){\r\n\t\tif(y==son[x]) continue;\r\n\t\tdfs2(y,0);\r\n\t}\r\n\tif(son[x]) dfs2(son[x],1);\r\n\tcnt[d[x]][s[x]-'a']++;\r\n\tfor(auto y:a[x]){\r\n\t\tif(y==son[x]) continue;\r\n\t\tcal(y);\r\n\t}\r\n\tfor(auto [x,y]:q[x]){\r\n\t\tint res=0;\r\n\t\tfor(int i=0;i<='z'-'a';i++){\r\n\t\t\tif(cnt[y][i]%2) res++;\r\n\t\t}\r\n\t\tans[x]=res<2?1:0;\r\n\t}\r\n\tif(k) return ;\r\n\tdel(x);\r\n}\r\nvoid solve(){\r\n\tint n,m;\r\n\tcin>>n>>m;\r\n\td[1]=1;\r\n\tfor(int i=2;i<=n;i++){\r\n\t\tint x;\r\n\t\tcin>>x;\r\n\t\ta[x].push_back(i);\r\n\t}\r\n\tcin>>s;\r\n\ts=\"1\"+s;\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tint x,y;\r\n\t\tcin>>x>>y;\r\n\t\tq[x].push_back({i,y});\r\n\t}\r\n\tdfs(1);\r\n\tdfs2(1,0);\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tcout<<(ans[i]?\"Yes\":\"No\")<<endl;\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(nullptr);\r\n\tcout.tie(nullptr);\r\n\r\n\t\tsolve();\r\n\treturn 0;\r\n}"
}