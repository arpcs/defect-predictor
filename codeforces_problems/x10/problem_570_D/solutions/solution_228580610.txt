{
    "id": 228580610,
    "contestId": 570,
    "creationTimeSeconds": 1697560649,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 570,
        "index": "D",
        "name": "Tree Requests",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "binary search",
            "bitmasks",
            "constructive algorithms",
            "dfs and similar",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 570,
        "members": [
            {
                "handle": "_Andromeda"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1439483400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 65,
    "timeConsumedMillis": 733,
    "memoryConsumedBytes": 150937600,
    "source": "// LUOGU_RID: 130057775\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nint read()\n{\n\tint a = 0,x = 1;char ch = getchar();\n\twhile(ch > '9' || ch < '0') {if(ch == '-') x = -1;ch = getchar();}\n\twhile(ch >= '0' && ch <= '9') {a = a*10 + ch-'0';ch = getchar();}\n\treturn a*x;\n}\nconst int N=1e6+7;\nint n,m,head[N],nxt[N],go[N],cnt,d[N],dep[N],fa[N],son[N];\nint *g[N],o[N<<2],*p,q1[N],q2[N],ans[N];\nchar s[N];\nvector<int>vec[N];\nvoid add(int u,int v)\n{\n\tgo[++cnt] = v;\n\tnxt[cnt] = head[u];\n\thead[u] = cnt;\n}\n\nvoid dfs1(int u)\n{\n\tdep[u] = dep[fa[u]] + 1;\n\tfor(int e = head[u];e;e = nxt[e]) {\n\t\tint v = go[e];dfs1(v);\n\t\tif(d[v] > d[son[u]]) son[u] = v;\n\t}\n\td[u] = d[son[u]] + 1;\n}\n\nvoid dp(int u)\n{\n\tif(son[u]) {\n\t\tg[son[u]] = g[u] + 1;\n\t\tdp(son[u]);\n\t}\n\tfor(int e = head[u];e;e = nxt[e]) {\n\t\tint v = go[e];if(v == son[u]) continue;\n\t\tg[v] = p,p += d[v] << 1;dp(v);\n\t\tfor(int i = 0;i < d[v];i ++) g[u][i+1] ^= g[v][i];\n\t}\n\tg[u][0] ^= 1<<(s[u]-'a');\n\tfor(int i = 0;i < vec[u].size();i ++) {\n\t\tans[vec[u][i]] = (dep[u] > q2[vec[u][i]] || q2[vec[u][i]] >= dep[u]+d[u]) || (g[u][q2[vec[u][i]]-dep[u]] == (g[u][q2[vec[u][i]]-dep[u]]&-g[u][q2[vec[u][i]]-dep[u]]));\n\t}\n}\n\nint main()\n{\n\tn = read(), m = read();\n\tfor(int i = 2;i <= n;i ++) {\n\t\tfa[i] = read();add(fa[i],i);\n\t}\n\tscanf(\"%s\",s+1);\n\tfor(int i = 1;i <= m;i ++) {\n\t\tq1[i] = read(),q2[i] = read();\n\t\tvec[q1[i]].push_back(i);\n\t}\n\tdfs1(1);g[1] = p = o;p += d[1]<<1;\n\tdp(1);for(int i = 1;i <= m;i ++) puts(ans[i]?\"Yes\":\"No\");\n\treturn 0;\n}"
}