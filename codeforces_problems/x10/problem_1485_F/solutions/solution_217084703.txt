{
    "id": 217084703,
    "contestId": 1485,
    "creationTimeSeconds": 1691134800,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1485,
        "index": "F",
        "name": "Copy or Prefix Sum",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2400,
        "tags": [
            "combinatorics",
            "data structures",
            "dp",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1485,
        "members": [
            {
                "handle": "baoziwu2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613141400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 498,
    "memoryConsumedBytes": 10444800,
    "source": "// LUOGU_RID: 118990520\n#include <iostream>\r\n#include <cstring>\r\n#include <algorithm>\r\n#include <map>\r\n\r\nint constexpr N = 2e5 + 5;\r\nint constexpr mod = 1e9 + 7;\r\n\r\nusing std::cin, std::cout;\r\nusing ll = long long;\r\n\r\nint n, b[N];\r\n\r\nclass ModInt {\r\n\tint val;\r\npublic:\r\n\tModInt() : val(0) {}\r\n\tModInt(const ModInt& ano) : val((ll)(ano.val + mod) % mod) {}\r\n\ttemplate<class T>\r\n\tModInt(T val) : val((ll)(val + mod) % mod) {}\r\n\t\r\n\tModInt &operator = (const ModInt &ano) {\r\n\t\tval = ano.val;\r\n\t\treturn *this;\r\n\t}\r\n\t\r\n\tModInt &operator = (int const &ano) {\r\n\t\tval = ano % mod;\r\n\t\treturn *this;\r\n\t}\r\n\t\r\n\tModInt operator + (const ModInt &ano) const {\r\n\t\tint temp = val + ano.val;\r\n\t\tif(temp >= mod) temp -= mod;\r\n\t\treturn ModInt(temp);\r\n\t}\r\n\t\r\n\ttemplate<class T>\r\n\tModInt operator + (const T &ano) const {\r\n\t\tint temp = val + ano;\r\n\t\tif(temp >= mod) temp -= mod;\r\n\t\treturn ModInt(temp);\r\n\t}\r\n\t\r\n\tModInt operator - (const ModInt &ano) const {\r\n\t\tll temp = val - ano.val;\r\n\t\tif(temp < 0) temp += mod;\r\n\t\treturn ModInt(temp);\r\n\t}\r\n\t\r\n\ttemplate<class T>\r\n\tModInt operator - (const T &ano) const {\r\n\t\tll temp = val - ano;\r\n\t\tif(temp < 0) temp += mod;\r\n\t\treturn ModInt(temp);\r\n\t}\r\n\t\r\n\tModInt operator * (const ModInt &ano) const {\r\n\t\treturn ModInt((ll)val * ano.val);\r\n\t}\r\n\t\r\n\ttemplate<class T>\r\n\tModInt operator * (T const &ano) const {\r\n\t\treturn ModInt((ll)val * ano);\r\n\t}\r\n\t\r\n\tfriend std::istream &operator >> (std::istream &in, ModInt &t) {\r\n\t\tin >> t.val;\r\n\t\tt.val %= mod;\r\n\t\treturn in;\r\n\t}\r\n\t\r\n\tfriend std::ostream &operator << (std::ostream &out, ModInt const &t) {\r\n\t\tout << t.val;\r\n\t\treturn out;\r\n\t}\r\n\t\r\n\toperator int() const {\r\n\t\treturn val;\r\n\t}\r\n};\r\n\r\nvoid solve() {\r\n\tcin >> n;\r\n\tfor(int i = 1; i <= n; ++ i) cin >> b[i];\r\n\tstd::map<int, ModInt> f;\r\n\tf[0] = 1; int addit = 0; ModInt ans = 1;\r\n\tfor(int i = 1; i <= n; ++ i) {\r\n\t\tModInt temp = ans - f[-addit];\r\n\t\tans = ans + temp;\r\n\t\tf[-addit] =  f[-addit] + temp;\r\n\t\taddit = addit + b[i];\r\n\t}\r\n\tcout << ans << std::endl;\t\r\n}\r\n\r\nmain() {\r\n\tint T;\r\n\tcin >> T;\r\n\twhile(T --) solve();\r\n\treturn 0;\r\n}"
}