{
    "id": 217074743,
    "contestId": 1485,
    "creationTimeSeconds": 1691128451,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1485,
        "index": "F",
        "name": "Copy or Prefix Sum",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2400,
        "tags": [
            "combinatorics",
            "data structures",
            "dp",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1485,
        "members": [
            {
                "handle": "34DAI"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613141400
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 31,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 13004800,
    "source": "// Hydro submission #64cc92803ff216c89d9b97ef@1691128449075\n/*\r\n    Author : TLE_Automaton && hhdxgd && JRXGD && hwd-gd\r\n    Right Output ! & Accepted !\r\n*/\r\n\r\n#include <bits/stdc++.h>\r\n#define int long long\r\nusing namespace std;\r\n\r\nint T;\r\nconst int L = 2e5 + 5;\r\nint n, a[L], pre[L], sum[L];\r\nconst int modn = 1e9 + 7;\r\n\r\n\r\ninline int read() {\r\n\tint x = 0, f = 1;\r\n\tchar ch = getchar();\r\n\twhile (!isdigit(ch))\r\n\t\tf = (ch == '-' ? -1 : f), ch = getchar();\r\n\twhile (isdigit(ch))\r\n\t\tx = (x << 3) + (x << 1) + (ch - '0'), ch = getchar();\r\n\treturn x * f;\r\n}\r\n\r\nmap<long long, long long> f;\r\n\r\nvoid init() {\r\n\tfor (int i = 0; i <= n; i++) {\r\n\t\ta[i] = 0, pre[i] = 0, sum[i] = 0;\r\n\t}\r\n\tf.clear();\r\n\treturn ;\r\n}\r\n\r\nvoid solve() {\r\n\tn = read();\r\n\tinit();\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\ta[i] = read();\r\n\t\tpre[i] = pre[i - 1] + a[i];\r\n\t}\r\n\tsum[0] = 1, f[0] = 1;\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tsum[i] += sum[i - 1] * 2 - f[0 - pre[i - 1]];\r\n\t\tsum[i] %= modn;\r\n\t\tsum[i] += modn;\r\n\t\tsum[i] %= modn;\r\n\t\tf[a[i] - pre[i]] = sum[i - 1];\r\n\t}\r\n\tcout << sum[n] << endl;\r\n\treturn ;\r\n}\r\n\r\n\r\nsigned main() {\r\n\tT = read();\r\n\twhile (T--) {\r\n\t\tsolve();\r\n\t}\r\n\treturn 0;\r\n}"
}