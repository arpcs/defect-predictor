{
    "id": 214317850,
    "contestId": 1485,
    "creationTimeSeconds": 1689669302,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1485,
        "index": "F",
        "name": "Copy or Prefix Sum",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2400,
        "tags": [
            "combinatorics",
            "data structures",
            "dp",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1485,
        "members": [
            {
                "handle": "Darren0724"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1613141400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 31,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 28979200,
    "source": "#pragma GCC optimize(\"Ofast\",\"O3\",\"unroll-loops\")\r\n#pragma GCC target(\"avx2\")\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n#define all(x) x.begin(),x.end()\r\n#define pii pair<int,int>\r\n#define rz resize\r\n#define pb emplace_back\r\n#define chmin(a,b) a=min(a,b)\r\n#define chmax(a,b) a=max(a,b)\r\n#define ACorz ios_base::sync_with_stdio(false);cin.tie(0);\r\n#define endl '\\n'\r\nmt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());\r\nconst int INF=1e18,INF2=1e9;\r\nconst int mod=1e9+7;\r\nconst int mod1=998244353;\r\nconst int N=1000000;\r\nvector<int> fac(N+1),inv(N+1);\r\nvoid add(int &a,int b){\r\n    a+=b;\r\n    a+=mod;\r\n    a%=mod;\r\n}\r\nint mul(int a,int b){\r\n    return a*b%mod;\r\n}\r\nint pw(int a,int b){\r\n    int ans=1;\r\n    while(b){\r\n        if(b&1){\r\n            ans=mul(ans,a);\r\n        }\r\n        a=mul(a,a);\r\n        b>>=1;\r\n    }\r\n    return ans;\r\n}\r\nint C(int a,int b){\r\n    if(a<0||b<0||b>a){\r\n        return 0;\r\n    }\r\n    return mul(fac[a],mul(inv[b],inv[a-b]));\r\n}\r\nvoid init(){\r\n    fac[0]=inv[0]=1;\r\n    for(int i=1;i<=N;i++){\r\n        fac[i]=mul(fac[i-1],i);\r\n        inv[i]=pw(fac[i],mod-2);\r\n    }\r\n}\r\nvoid KingFlag(){\r\n    int n;cin>>n;\r\n    map<int,int> m;\r\n    m[0]=1;\r\n    int d=0;\r\n    int total=1;\r\n    for(int i=0;i<n;i++){\r\n        int k;cin>>k;\r\n        int p=m[-d];\r\n        d+=k;\r\n        add(m[k-d],total-p);\r\n        add(total,total-p);\r\n    }\r\n    int ans=0;\r\n    for(auto e:m){\r\n        add(ans,e.second);\r\n    }\r\n    cout<<ans<<endl;\r\n}\r\nsigned main(){\r\n    ACorz;\r\n    int t;cin>>t;\r\n    while(t--){\r\n        KingFlag();\r\n    }\r\n    \r\n    return 0;\r\n}"
}