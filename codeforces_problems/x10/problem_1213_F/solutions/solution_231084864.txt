{
    "id": 231084864,
    "contestId": 1213,
    "creationTimeSeconds": 1698999321,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1213,
        "index": "F",
        "name": "Unstable String Sort",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "data structures",
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy",
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 1213,
        "members": [
            {
                "handle": "FLY_lai"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1567175700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 9830400,
    "source": "// LUOGU_RID: 133094167\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\nconst int N = 200005;\r\n\r\nint n, k;\r\nint p[N], q[N];\r\nvector<int> e[N];\r\n\r\nint dfn[N], low[N], cur = 0;\r\nint stk[N], tp = 0;\r\nbool onstk[N] = {};\r\nint clr[N], cnt = 0;\r\n\r\nint dfs(int x) {\r\n\tdfn[x] = low[x] = ++cur;\r\n\tstk[++tp] = x;\r\n\tonstk[x] = true;\r\n\tfor (auto i: e[x])\r\n\t\tif (!dfn[i])\r\n\t\t\tlow[x] = min(low[x], dfs(i));\r\n\t\telse if (onstk[i])\r\n\t\t\tlow[x] = min(low[x], dfn[i]);\r\n\tif (low[x] == dfn[x]) {\r\n\t\tcnt++;\r\n\t\twhile (true) {\r\n\t\t\tclr[stk[tp]] = cnt;\r\n\t\t\tonstk[stk[tp]] = false;\r\n\t\t\tif (stk[tp--] == x)\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treturn low[x];\r\n}\r\n\r\nvector<int> E[N];\r\n\r\nint main() {\r\n\tcin >> n >> k;\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tcin >> p[i];\r\n\t\tif (i > 1)\r\n\t\t\te[p[i - 1]].push_back(p[i]);\r\n\t}\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tcin >> q[i];\r\n\t\tif (i > 1)\r\n\t\t\te[q[i - 1]].push_back(q[i]);\r\n\t}\r\n\tdfs(1);\r\n\tif (k > cnt)\r\n\t\tputs(\"NO\");\r\n\telse {\r\n\t\tfor (int i = 1; i <= n; i++)\r\n\t\t\tfor (auto j: e[i]) {\r\n\t\t\t\tif (clr[i] != clr[j])\r\n\t\t\t\t\tE[clr[i]].push_back(clr[j]);\r\n\t\t\t}\r\n\t\t\r\n\t}\r\n\treturn 0;\r\n}"
}