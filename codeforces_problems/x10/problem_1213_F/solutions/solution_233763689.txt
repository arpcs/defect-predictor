{
    "id": 233763689,
    "contestId": 1213,
    "creationTimeSeconds": 1700630493,
    "relativeTimeSeconds": 4893,
    "problem": {
        "contestId": 1213,
        "index": "F",
        "name": "Unstable String Sort",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "data structures",
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy",
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 1213,
        "members": [
            {
                "handle": "R3mix"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1700625600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 3993600,
    "source": "#include <algorithm>\r\n#include <array>\r\n#include <bitset>\r\n#include <cassert>\r\n#include <chrono>\r\n#include <cmath>\r\n#include <cstring>\r\n#include <functional>\r\n#include <iomanip>\r\n#include <iostream>\r\n#include <limits.h>\r\n#include <map>\r\n#include <numeric>\r\n#include <queue>\r\n#include <random>\r\n#include <set>\r\n#include <stdio.h>\r\n#include <vector>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double ld;\r\n\r\nint main() {\r\n    cin.sync_with_stdio(0);cin.tie(0);\r\n    int totalTests = 1;\r\n    for (int testNumber = 0; testNumber < totalTests; testNumber++) {\r\n        int n,k; cin >> n >> k;\r\n        vector<vector<int>>p(2, vector<int>(n));\r\n        vector<vector<int>>key(2, vector<int>(n+1));\r\n        for (int i = 0; i < 2; i++) {\r\n            for (int j = 0; j < n; j++) cin >> p[i][j];\r\n        }\r\n        for (int i = 0; i < 2; i++) {\r\n            for (int j = 0; j < n; j++) key[i][p[i][j]] = j;\r\n        }\r\n\r\n        vector<int>ends;\r\n        int cend = key[1][p[0][0]];\r\n        for (int i = 1; i < n; i++) {\r\n            if (i > cend) {\r\n                ends.push_back(cend);\r\n                assert(key[1][p[0][i]] > cend);\r\n            }\r\n            int curr = p[0][i];\r\n            cend = max(cend, key[1][curr]);\r\n        }\r\n        ends.push_back(n-1);\r\n\r\n        if (ends.size() < k) {cout << \"NO\" << \"\\n\"; continue;}\r\n        assert(n < 1e5);\r\n        reverse(ends.begin(), ends.end());\r\n        char c = 'a';\r\n        string res = \"\";\r\n\r\n        for (int i = 0; i < n; i++) {\r\n            res += c;\r\n            if (ends.back() == i) {\r\n                ends.pop_back();\r\n                if (c != 'z') c++;\r\n            }\r\n        }\r\n\r\n        cout << \"YES\" << \"\\n\";\r\n        cout << res << \"\\n\";\r\n    }\r\n    return 0;\r\n}"
}