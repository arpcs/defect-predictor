{
    "id": 145649021,
    "contestId": 250,
    "creationTimeSeconds": 1644326335,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 250,
        "index": "E",
        "name": "Mad Joe",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force"
        ]
    },
    "author": {
        "contestId": 250,
        "members": [
            {
                "handle": "tutanboxdor"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1353938400
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 9523200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\n\r\nint n, m;\r\nchar grid[105][10005];\r\nint vis[105][10005][2];\r\n\r\nint dfs(int x, int y, int dir){\r\n  // assert(x + dir >= 0 && y + dir >= 0);\r\n  if(x == n)\r\n    return 0;\r\n  if(vis[x][y][(dir == -1 ? 0 : 1)] > m)\r\n    return -(int)1e9;\r\n  vis[x][y][dir]++;\r\n  if(grid[x+1][y] == '.')\r\n    return dfs(x+1, y, dir) + 1;\r\n  else if(grid[x][y+dir] == '.')\r\n    return dfs(x, y+dir, dir) + 1;\r\n  else if(grid[x][y+dir] == '+'){\r\n    grid[x][y+dir] = '.';\r\n    return dfs(x, y, -dir) + 1;\r\n  }\r\n  else if(grid[x][y+dir] == '#'){\r\n    return dfs(x, y, -dir) + 1;\r\n  }\r\n  return -(int)1e9;\r\n}\r\n\r\nint main()\r\n{\r\n  cin.tie(0) -> ios_base::sync_with_stdio(0);\r\n  \r\n  cin >> n >> m;\r\n  for(int i=0;i<=n+1;i++)\r\n    for(int j=0;j<=m+1;j++)\r\n      grid[i][j] = '#';\r\n  for(int i=1;i<=n;i++)\r\n    for(int j=1;j<=m;j++)\r\n      cin >> grid[i][j];\r\n  int x = dfs(1, 1, 1);\r\n  if(x < 0)\r\n    cout << \"Never\\n\";\r\n  else\r\n    cout << x << '\\n';\r\n  // for(int i=0;i<=n+1;i++){\r\n  //   for(int j=0;j<=m+1;j++)\r\n  //     cout << \"{ \" << vis[i][j][0] << \", \" << vis[i][j][1] << \"} \";  \r\n  //   cout << '\\n';\r\n  // }\r\n\r\n  \r\n}    \r\n"
}