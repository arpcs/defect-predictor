{
    "id": 139040092,
    "contestId": 250,
    "creationTimeSeconds": 1639457756,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 250,
        "index": "E",
        "name": "Mad Joe",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "brute force"
        ]
    },
    "author": {
        "contestId": 250,
        "members": [
            {
                "handle": "SmolBrain"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1353938400
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\ntemplate <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;\r\n\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC target(\"avx,avx2,sse,sse2,sse3,sse4,popcnt,fma\")\r\n#pragma GCC optimize(\"unroll-loops\")\r\n\r\ntypedef long long int ll;\r\ntypedef long double ld;\r\n\r\n#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL)\r\n#define endl '\\n'\r\n#define pb push_back\r\n#define conts continue\r\n#define all(a) a.begin(),a.end()\r\n#define rall(a) a.rbegin(), a.rend()\r\n#define yes cout << \"YES\" << endl\r\n#define no cout << \"NO\" << endl\r\n#define ff first\r\n#define ss second\r\n#define ceil2(x,y) (x+y-1) / y\r\n#define sz(a) a.size()\r\n#define setbits(x) __builtin_popcountll(x)\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x) cout << #x <<\" = \"; print(x); cout << endl;\r\n#else\r\n#define debug(x)\r\n#endif\r\n\r\n#define rep(i,n) for(ll i = 0; i < n; ++i)\r\n#define rep1(i,n) for(ll i = 1; i <= n; ++i)\r\n\r\nbool iseven(ll n) {if ((n & 1) == 0) return true; return false;}\r\n\r\nvoid print(ll t) {cout << t;}\r\nvoid print(int t) {cout << t;}\r\nvoid print(string t) {cout << t;}\r\nvoid print(char t) {cout << t;}\r\nvoid print(double t) {cout << t;}\r\nvoid print(ld t) {cout << t;}\r\n\r\ntemplate <class T, class V> void print(pair <T, V> p);\r\ntemplate <class T> void print(vector <T> v);\r\ntemplate <class T> void print(set <T> v);\r\ntemplate <class T, class V> void print(map <T, V> v);\r\ntemplate <class T> void print(multiset <T> v);\r\ntemplate <class T, class V> void print(pair <T, V> p) {cout << \"{\"; print(p.ff); cout << \",\"; print(p.ss); cout << \"}\";}\r\ntemplate <class T> void print(vector <T> v) {cout << \"[ \"; for (T i : v) {print(i); cout << \" \";} cout << \"]\";}\r\ntemplate <class T> void print(set <T> v) {cout << \"[ \"; for (T i : v) {print(i); cout << \" \";} cout << \"]\";}\r\ntemplate <class T> void print(multiset <T> v) {cout << \"[ \"; for (T i : v) {print(i); cout << \" \";} cout << \"]\";}\r\ntemplate <class T, class V> void print(map <T, V> v) {cout << \"[ \"; for (auto i : v) {print(i); cout << \" \";} cout << \"]\";}\r\n\r\nconst ll MOD = 1e9+7;\r\nconst ll maxn = 1e5 + 5;\r\nconst ll inf = 1e18;\r\n\r\nvoid solve()\r\n{\r\n    ll n,m; cin >> n >> m;\r\n    vector<vector<char>> a(n+5,vector<char>(m+5, '#'));\r\n    rep1(i,n) rep1(j,m) cin >> a[i][j];\r\n\r\n    // dir => 1 = right, 0 = left\r\n\r\n    ll row = 1, col = 1, dir = 1;\r\n    ll ans = 0;\r\n\r\n    while(row < n){\r\n        set<ll> free, brick;\r\n        ll leftwall, rightwall;\r\n\r\n        for(ll j = col; j >= 0; --j){\r\n            if(a[row][j] == '#'){\r\n                leftwall = j;\r\n                break;\r\n            }\r\n\r\n            if(a[row][j] == '+') brick.insert(j);\r\n            if(a[row+1][j] == '.') free.insert(j);\r\n        }    \r\n\r\n        for(ll j = col+1; j <= m+1; ++j){\r\n            if(a[row][j] == '#'){\r\n                rightwall = j;\r\n                break;\r\n            }\r\n\r\n            if(a[row][j] == '+') brick.insert(j);\r\n            if(a[row+1][j] == '.') free.insert(j);\r\n        }\r\n\r\n        if(free.empty()){\r\n            cout << \"Never\" << endl;\r\n            return;\r\n        }\r\n\r\n        while(true){\r\n            ll nxtbrick, nxtfree;\r\n            if(dir) nxtbrick = inf, nxtfree = inf;\r\n            else nxtbrick = -1, nxtfree = -1;\r\n\r\n            auto it1 = brick.lower_bound(col), it2 = free.lower_bound(col);\r\n\r\n            if(dir){\r\n                if(it1 != brick.end()) nxtbrick = *it1;\r\n                if(it2 != free.end()) nxtfree = *it2;\r\n            }\r\n            else{\r\n                if(it1 != brick.begin()) it1--, nxtbrick = *it1;\r\n                if(it2 != free.begin()) it2--, nxtfree = *it2;\r\n            }\r\n\r\n            if(dir){\r\n                if(nxtbrick == inf and nxtfree == inf){\r\n                    ll temp = rightwall - col;\r\n                    ans += temp;\r\n                    col = rightwall - 1;\r\n                }\r\n                else if(nxtbrick <= nxtfree){\r\n                    ll temp = nxtbrick - col;\r\n                    ans += temp;\r\n                    col = nxtbrick - 1;\r\n                    brick.erase(nxtbrick);\r\n                }\r\n                else{\r\n                    ll temp = nxtfree - col + 1;\r\n                    ans += temp;\r\n                    row++;\r\n                    col = nxtfree;\r\n                    break;\r\n                }\r\n            }\r\n            else{\r\n                if(nxtbrick == -1 and nxtfree == -1){\r\n                    ll temp = col - leftwall;\r\n                    ans += temp;\r\n                    col = leftwall + 1;\r\n                }\r\n                else if(nxtbrick >= nxtfree){\r\n                    ll temp = col - nxtbrick;\r\n                    ans += temp;\r\n                    col = nxtbrick + 1;\r\n                    brick.erase(nxtbrick);\r\n                }\r\n                else{\r\n                    ll temp = col - nxtfree + 1;\r\n                    ans += temp;\r\n                    row++;\r\n                    col = nxtfree;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            dir ^= 1;\r\n        }\r\n    }\r\n\r\n    cout << ans << endl;\r\n}\r\n\r\nsigned main()\r\n{\r\n    fastio;\r\n    solve();\r\n    return 0;\r\n}"
}