{
    "id": 209609513,
    "contestId": 551,
    "creationTimeSeconds": 1686690043,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 551,
        "index": "D",
        "name": "GukiZ and Binary Operations",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "implementation",
            "math",
            "matrices",
            "number theory"
        ]
    },
    "author": {
        "contestId": 551,
        "members": [
            {
                "handle": "Radan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1434127500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 512000,
    "source": "//Radin (you can say Radan)\n#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef deque<int> dq;\ntypedef long double ld;\ntypedef pair<int , int> pii;\n\nconst int Mx = 101;\nconst int LOG = 23;\nconst int INF = 2e9;\nconst int maxn = 3e6;\nconst ll mod = 1e9+7;\n\n#define F first\n#define S second\n#define endl \"\\n\"\n#define pb push_back\n#define all(x) (x).begin(),(x).end()\n#define ms(x , y) memset(x , y , sizeof x)\nll pw(ll a, ll b, ll md){ll res=1;b=max(b,0ll);while(b){if(b&1){res=(a*res)%md;}a=(a*a)%md;b>>=1;}return(res%md);}\n\nll n , k , l , M;\nll res = 1;\n\nstruct matrix {\n\tll n , m , Mat[Mx][Mx];\n\tmatrix(int x , int y , int a = 0) {\n\t\tn = x , m = y;\n\t\tfor(int i = 0 ; i < n ; i ++)\n\t\t\tfor(int j = 0 ; j < n ; j ++)\n\t\t\t\tMat[i][j] = a;\n\t}\n\tmatrix operator * (matrix &mt) {\n\t\tmatrix r = matrix(n , mt.m);\n\t\tfor(int i = 0 ; i < n ; i ++)\n\t\t\tfor(int j = 0 ; j < m ; j ++)\n\t\t\t\tfor(int k = 0 ; k < mt.m ; k ++)\n\t\t\t\t\tr.Mat[i][k] = (r.Mat[i][k] + mt.Mat[j][k] * Mat[i][j]) % M;\n\t\treturn r;\n\t}\n};\nmatrix power(matrix x , ll b) {\n\tmatrix res = matrix(x.n , x.n);\n\tfor(int i = 0 ; i < x.n ; i ++)\n\t\tres.Mat[i][i] = 1;\n\t\n\twhile(b) {\n\t\tif(b & 1)\n\t\t\tres = res * x;\n\t\tb >>= 1;\n\t\tx = x * x;\n\t}\n\treturn res;\n}\n\nint main() {\n\tcin.tie(0)->sync_with_stdio(0);\n\n\tcin >> n >> k >> l >> M;\n\n\tif(l < 63 && pw(2 , l , 8e18) <= k)\n\t\treturn cout << 0 , 0;\n\n\tmatrix x = matrix(2 , 2 , 1);\n\tx.Mat[1][1] = 0;\n\n\tx = power(x , n+1);\n\tll Pow = pw(2 , n , M);\n\n\t/*for(int i = 0 ; i < 2 ; i ++) {\n\t\tfor(int j = 0 ; j < 2 ; j ++)\n\t\t\tcout << x.Mat[i][j] << \" \";\n\t\tcout << endl;\n\t}*/\n\n\tfor(int i = 0 ; i < l ; i ++) {\n\t\tif((k >> i) & 1)\n\t\t\tres = res * (Pow - x.Mat[0][0] + M) % M;\n\t\telse\n\t\t\tres = res * x.Mat[0][0] % M;\n\t}\n\n\tcout << res % M;\n\n\treturn 0;\n}"
}