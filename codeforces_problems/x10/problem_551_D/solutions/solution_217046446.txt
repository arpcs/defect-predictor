{
    "id": 217046446,
    "contestId": 551,
    "creationTimeSeconds": 1691096990,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 551,
        "index": "D",
        "name": "GukiZ and Binary Operations",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "combinatorics",
            "implementation",
            "math",
            "matrices",
            "number theory"
        ]
    },
    "author": {
        "contestId": 551,
        "members": [
            {
                "handle": "zavodil"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1434127500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 204800,
    "source": "#include<iostream>\r\n#include<vector>\r\n#include<cassert>\r\nusing namespace std;\r\nlong long m;\r\ntypedef vector<vector<long long>>matrix;\r\n\r\nmatrix mul(matrix a, matrix b)\r\n{\r\n  matrix ans = a;\r\n  for (long long i = 0; i < 2; i++)\r\n  {\r\n    for (long long j = 0; j < 2; j++)\r\n    {\r\n      ans[i][j] = 0;\r\n      for (long long k = 0; k < 2; k++)\r\n      {\r\n        ans[i][j] += a[i][k] * b[k][j];\r\n      }\r\n      ans[i][j] %= m;\r\n    }\r\n  }\r\n  return ans;\r\n}\r\n\r\nmatrix matpow(matrix a, long long x)\r\n{\r\n  if (x == 1) return a;\r\n  if (x % 2 == 1)\r\n  {\r\n    return mul(matpow(a, x - 1), a);\r\n  }\r\n  else\r\n  {\r\n    matrix tmp = matpow(a, x / 2);\r\n    return mul(tmp, tmp);\r\n  }\r\n}\r\n\r\nlong long binpow(long long n, long long k)\r\n{\r\n  if (k == 0) return 1;\r\n  if (k % 2 == 1)\r\n  {\r\n    return (binpow(n, k - 1) * n) % m;\r\n  }\r\n  else\r\n  {\r\n    long long tmp = binpow(n, k / 2);\r\n    return (tmp * tmp) % m;\r\n  }\r\n}\r\n\r\nint main()\r\n{\r\n  long long n, k;\r\n  cin >> n >> k;\r\n  long long l;\r\n  cin >> l;\r\n  cin >> m;\r\n  matrix x;\r\n  vector<long long>tmp(2);\r\n  x.resize(2, tmp);\r\n  x[0][0] = 1;\r\n  x[0][1] = 1;\r\n  x[1][0] = 1;\r\n  x[1][1] = 0;\r\n  x = matpow(x, n + 1);\r\n  long long ans = 1;\r\n  for (long long i = 0; i < l; i++)\r\n  {\r\n    if (k % 2 == 0)\r\n    {\r\n      ans = (ans * x[0][0]) % m;\r\n    }\r\n    else\r\n    {\r\n      long long s = binpow(2, n);\r\n      s -= x[0][0];\r\n      while (s < 0) s += m;\r\n      ans = (ans * s) % m;\r\n    }\r\n    k = k >> 1;\r\n  }\r\n  if (k != 0)\r\n  {\r\n    cout << 0 << endl;\r\n  }\r\n  else\r\n  {\r\n    cout << ans % m << endl;\r\n  }\r\n}/*1691096989.8572292*/"
}