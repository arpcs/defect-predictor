{
    "id": 214980335,
    "contestId": 1491,
    "creationTimeSeconds": 1689994433,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1491,
        "index": "I",
        "name": "Ruler Of The Zoo",
        "type": "PROGRAMMING",
        "points": 5000.0,
        "rating": 3500,
        "tags": [
            "brute force",
            "data structures"
        ]
    },
    "author": {
        "contestId": 1491,
        "members": [
            {
                "handle": "Navigato"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1614519300
    },
    "programmingLanguage": "Python 3",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 997,
    "memoryConsumedBytes": 2252800,
    "source": "number = int(input())\r\nfrom time import time\r\n\r\n\r\nclass Zoo:\r\n    animal_list = []\r\n    king = None\r\n    fight = 0\r\n    win = False\r\n    never_win = False\r\n    Time = 0\r\n\r\n    def __init__(self):\r\n        Zoo.king = Animal()\r\n        for i in range(number - 1):\r\n            Zoo.animal_list.append(Animal())\r\n        Zoo.Time = time()\r\n\r\n\r\nclass Animal:\r\n    index = 0\r\n\r\n    def __init__(self):\r\n        self.strength = [int(x) for x in input().split(' ')]\r\n        self.consecutive = 0\r\n        self.index = Animal.index\r\n        Animal.index += 1\r\n\r\n    def fight(self):\r\n        Zoo.fight += 1\r\n        opponent = Zoo.animal_list[0]\r\n        if time() - Zoo.Time > 0.95:\r\n            Zoo.never_win = True\r\n            self.index = -1\r\n            Zoo.fight = -1\r\n            return\r\n        opponent.fought = True\r\n        if self.strength[self.consecutive] > opponent.strength[opponent.consecutive]:\r\n            Zoo.animal_list.append(opponent)\r\n            Zoo.animal_list.pop(0)\r\n            self.consecutive += 1\r\n            if self.consecutive == 3:\r\n                Zoo.win = True\r\n        else:\r\n            self.consecutive = 0\r\n            Zoo.animal_list.append(self)\r\n            Zoo.king = Zoo.animal_list[0]\r\n            Zoo.animal_list.pop(0)\r\n            Zoo.king.consecutive += 1\r\n\r\n\r\nZoo()\r\nwhile not Zoo.win and not Zoo.never_win:\r\n    Zoo.king.fight()\r\nprint(Zoo.king.index)\r\nprint(Zoo.fight, end=' ')\r\n"
}