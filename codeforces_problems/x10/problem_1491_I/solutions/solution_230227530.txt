{
    "id": 230227530,
    "contestId": 1491,
    "creationTimeSeconds": 1698507608,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1491,
        "index": "I",
        "name": "Ruler Of The Zoo",
        "type": "PROGRAMMING",
        "points": 5000.0,
        "rating": 3500,
        "tags": [
            "brute force",
            "data structures"
        ]
    },
    "author": {
        "contestId": 1491,
        "members": [
            {
                "handle": "nguyenquocthinhhung"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1614519300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 75,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 1126400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef vector<int> vi;\r\ntypedef pair<int,int> pii;\r\ntypedef pair<ll,ll> pll;\r\ntypedef tuple<ll,ll,ll> plll;\r\n\r\ntemplate<typename T>\r\ninline T read(){\r\n    T x=0,f=0;char ch=getchar();\r\n    while(!isdigit(ch)) f|=(ch=='-'),ch=getchar();\r\n    while(isdigit(ch)) x=x*10+(ch^48),ch=getchar();\r\n    return f?-x:x;\r\n}\r\n\r\n#define rdi read<int>\r\n#define rdll read<ll>\r\n#define fi first\r\n#define se second\r\n#define pb push_back\r\n#define ppb pop_back\r\n#define mp make_pair\r\n\r\nconst int N=6010;\r\nconst ll INF=0x3f3f3f3f3f3f3f3f;\r\n\r\nenum Color{red,blue,green};\r\n\r\nstruct Animal{\r\n    array<int,3> k;\r\n    int id,pos,nxt;\r\n    Color c;\r\n    int& operator [] (const int &id) {return k[id];}\r\n};\r\nvector<Animal> a,b;\r\n\r\nint n;\r\npll ans;\r\n\r\nvoid bf(){\r\n    deque<Animal> q(a.begin()+1,a.end());\r\n    const int lim=2e4;\r\n    Animal cur=a[0];int cnt=0;\r\n    for(int x=1;x<=lim;x++){\r\n        auto now=q[0];q.pop_front();\r\n        if(cur[cnt]>now[0]) ++cnt,q.pb(now);\r\n        else cnt=1,swap(cur,now),q.pb(now);\r\n        if(cnt==3) cout<<cur.id<<' '<<x<<endl,exit(0);\r\n    } \r\n}\r\n\r\nvector<plll> st;\r\nvector<pll> reds;\r\nvoid insert(ll b,ll bpos,ll pos){\r\n    while(!st.empty()&&get<0>(st.back())>=b) st.ppb();\r\n    st.pb({b,bpos,pos});\r\n}\r\n\r\nint main(){\r\n    n=rdi();a.resize(n);\r\n    for(int i=0;i<n;i++){\r\n        for(int j:{0,1,2}) a[i][j]=rdi();\r\n        a[i].id=i,a[i].c=blue,a[i].nxt=-1;\r\n    }\r\n    bf();\r\n    if(a[0][0]>a[1][0]) swap(a[0],a[1]);\r\n    a.pb(a[0]),a.erase(a.begin());\r\n    for(int i=1;i<n;i++)\r\n        if(a[i-1][1]>a[i][0]) a[i].c=red;\r\n\r\n    for(int i=0;i<n;i++){\r\n        a[i].pos=i;\r\n        if(a[i].c==red) continue;\r\n        int nxt=(i+1)%n;\r\n        if(a[nxt].c==red) nxt=(nxt+1)%n;\r\n        a[i].c=(a[i][2]>a[nxt][0]?green:blue);\r\n    }\r\n\r\n    a.pb(a[0]);\r\n    for(int i=0;i<n;i++){\r\n        if(a[i].c==red) continue;\r\n        if(a[i+1].c==red) a[i].nxt=a[i+1].pos;\r\n        b.pb(a[i]);\r\n    }\r\n\r\n    ll sum=0;\r\n    while(1){\r\n        st.clear(),reds.clear();\r\n\r\n        for(int i=0;i<(int)b.size();i++){\r\n            auto now=b[i];\r\n            insert((now.c==blue?now[1]:-INF),now.pos,i);\r\n        }\r\n\r\n        ll minx=INF;\r\n        for(int i=0;i<(int)b.size();i++){\r\n            auto now=b[i];\r\n            insert((now.c==blue?now[1]:-INF),now.pos,i);\r\n            int nxtr=now.nxt;\r\n            if(nxtr==-1) continue;\r\n            reds.pb({nxtr,i});\r\n            auto pos=lower_bound(st.begin(),st.end(),(plll){a[nxtr][0],-1,-1});\r\n            if(pos==st.begin()) continue;\r\n            pos--;\r\n            ll dis=i-get<2>(*pos);\r\n            if(dis<0) dis+=b.size();\r\n            minx=min(minx,dis);\r\n        }\r\n        if(minx>=INF) return puts(\"-1 -1\"),0;\r\n        else if(minx){\r\n            sum+=minx*(n-1);\r\n            for(auto now:reds) b[now.se].nxt=-1;\r\n            for(auto now:reds){\r\n                int pos=now.se-minx;\r\n                if(pos<0) pos+=b.size();\r\n                b[pos].nxt=now.fi;\r\n            }\r\n        }\r\n\r\n        ans={INF,INF};\r\n        for(int i=0;i<(int)b.size();i++){\r\n            if(b[i].nxt==-1) continue;\r\n            auto nxt=a[b[i].nxt];\r\n            if(b[i][1]<nxt[0]){\r\n                b[i].nxt=-1,b.insert(b.begin()+i+1,nxt);\r\n                b[i].c=b[i][2]>nxt[0]?green:blue;\r\n                int nnxt=i+2;\r\n                if(nnxt==b.size()) nnxt=0;\r\n                b[i+1].c=b[i+1][2]>b[nnxt][0]?green:blue;\r\n            }\r\n            else if(b[i].c==green) ans=min(ans,{sum+nxt.pos+2,b[i].id});\r\n        }\r\n        if(ans.fi!=INF) return cout<<ans.se<<' '<<ans.fi<<'\\n',0;\r\n    }\r\n    return 0;\r\n}\r\n"
}