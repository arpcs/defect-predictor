{
    "id": 197567705,
    "contestId": 107,
    "creationTimeSeconds": 1678911911,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 107,
        "index": "A",
        "name": "Dorm Water Supply",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1400,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 107,
        "members": [
            {
                "handle": "HitmanX97"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1314111600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double ld;\r\n#define output(v) for(auto&it:v){cout<<it<<\" \";}cout<<\"\\n\"\r\n#define input(v) for(auto&it:v){cin>>it;}\r\n#define watch(x) cerr<<#x<<\" : \"<<x<<endl;\r\n#define all(v) v.begin(),v.end()\r\nvoid FastCode() {\r\n    std::ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n}\r\nvoid File(){\r\n//        freopen(\"mex.in\", \"r\", stdin);\r\n//        freopen(\"373.in\", \"w\", stdout);\r\n}\r\n\r\nvoid preprocessing(){\r\n\r\n}\r\nint n , m;\r\nconst int N =1e3+5;\r\nvector<pair<int , int>> adj[N];\r\nint inDegree[N] , outDegree[N];\r\nbool vis[N];\r\nbool isCycle;\r\nint EN;\r\nint dfs(int node){\r\n    if(vis[node]){\r\n        isCycle = true;\r\n        return 2e9;\r\n    }\r\n    int mn = 2e9;\r\n    if(outDegree[node] == 0) EN = node;\r\n    for(auto [u , w] : adj[node]){\r\n        mn = min({mn , w , dfs(u)});\r\n    }\r\n    return mn;\r\n}\r\nvoid testCase(int ct){\r\n    cin >> n >> m;\r\n    for(int i = 0 ; i < m ; i++){\r\n        int f , t , d;\r\n        cin >> f >> t >> d;\r\n        adj[f].push_back({t , d});\r\n        inDegree[t]++;\r\n        outDegree[f]++;\r\n    }\r\n    vector<array<int,3>> ans;\r\n    for(int i = 1 ; i <= n ; i++){\r\n        if(inDegree[i]) continue;\r\n        isCycle = false;\r\n        int mn = dfs(i);\r\n        if(isCycle) continue;\r\n        ans.push_back({i , EN , mn});\r\n    }\r\n    cout<<ans.size()<<\"\\n\";\r\n    for(auto [u , f , d] : ans)\r\n        cout<<u<<\" \"<<f<<\" \"<<d<<\"\\n\";\r\n}\r\nint32_t main(){\r\n    FastCode();\r\n    File();\r\n    preprocessing();\r\n    int t = 1;\r\n//    cin >> t;\r\n    for(int i = 1 ; i <= t ;i++)\r\n        testCase(i);\r\n    return 0;\r\n}"
}