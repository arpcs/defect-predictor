{
    "id": 212188690,
    "contestId": 107,
    "creationTimeSeconds": 1688544141,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 107,
        "index": "A",
        "name": "Dorm Water Supply",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1400,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 107,
        "members": [
            {
                "handle": "123sad"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1314111600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 38,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 3584000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nint in[(int)1e5];\r\nint out[(int)1e5];\r\nint dis[(int)1e5];\r\nstruct node {\r\n    int x, w; \r\n};\r\nstruct point {\r\n    int x, y, w;\r\n};\r\nvector<node>v[(int)1e5];\r\nvector<point>st;\r\npair<int,int> dfs(int u) {\r\n    \r\n    for (auto& it : v[u]) {\r\n        dis[it.x] = min(dis[u], it.w);\r\n        return dfs(it.x);\r\n    }\r\n    return { u,dis[u] };\r\n}\r\nint main() {\r\n    int n; int m;\r\n    cin >> n >> m;\r\n    memset(dis, 0x3f, sizeof(dis));\r\n    for (int i = 1; i <= m; i++) {\r\n        int x, y; int z;\r\n        cin >> x >> y>>z;\r\n        v[x].push_back({y,z});\r\n          in[y]++;\r\n          out[x]++;\r\n    }\r\n    queue<int>q;\r\n    for (int i = 1; i <= n; i++) {\r\n        if (in[i] == 0&&out[i])q.push(i);\r\n    }\r\n    while (q.size()) {\r\n        auto u = q.front(); q.pop();\r\n        auto it = dfs(u);\r\n        st.push_back({ u,it.first,it.second });\r\n    }\r\n    cout << st.size()<<\"\\n\";\r\n    for (auto it : st) {\r\n        cout << it.x << \" \" << it.y << \" \" << it.w << \"\\n\";\r\n    }\r\n  \r\n  \r\n    return 0;\r\n}"
}