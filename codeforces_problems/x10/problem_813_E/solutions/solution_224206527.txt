{
    "id": 224206527,
    "contestId": 813,
    "creationTimeSeconds": 1695231839,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 813,
        "index": "E",
        "name": "Army Creation",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 813,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1496675100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include\"bits/stdc++.h\"\n#include\"unordered_map\"\nusing namespace std;\n\n#define endl '\\n'\n#define ll long long\n\nvoid run()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n#ifndef ONLINE_JUDGE\n    freopen(\"in.txt\", \"r\", stdin);\n    freopen(\"out.txt\", \"w\", stdout);\n#else\n#endif\n}\nstruct node;\nextern node *empty;\nstruct node\n{\n    node *l,*r;\n    int fr;\n    node()\n    {\n        fr=0;\n        l=r=this;\n    }\n    node(int val,node *L=empty,node *R=empty)\n    {\n        fr=val;\n        l=L;\n        r=R;\n    }\n};\nnode *empty=new node();\nnode *insert(node *root,int s,int e,int val)\n{\n    if(val>e||val<s)\n        return root;\n    if(s==e)\n    {\n        return new node(root->fr+1);\n    }\n    ll mid=s+e>>1;\n    node *L=insert(root->l,s,mid,val);\n    node *R=insert(root->r,mid+1,e,val);\n    return new node(L->fr+R->fr,L,R);\n}\nint query(node *L,node *R,int s,int e,int val)\n{\n    if(s>=val)\n        return 0;\n    if(e<val){\n\n        return R->fr-L->fr;\n    }\n    int mid=s+e>>1;\n    return query(L->l,R->l,s,mid,val)+query(L->r,R->r,mid+1,e,val);\n}\nconst int N=1e5+5;\nnode *arr[N];\nvoid solve()\n{\n    int n,k;\n    cin>>n>>k;\n    map<int,vector<int> >mp;\n    vector<int>b(n+1);\n    arr[0]=empty;\n    for(int i=1;i<=n;i++){\n        int x;cin>>x;\n        int sz=mp[x].size();\n        sz-=k;\n        mp[x].push_back(i);\n        if(sz>=0)\n            b[i]=mp[x][sz];\n        else b[i]=-1;\n        arr[i]=insert(arr[i-1],-1,n,b[i]);\n        //cout<<b[i]<<\" \";\n    }\n    //cout<<endl;\n    int q;\n    cin>>q;\n    int last=0;\n    while(q--){\n        int x,y;\n        cin>>x>>y;\n        x+=last;x%=n;x++;\n        y+=last;y%=n;y++;\n        if(x>y)\n            swap(x,y);\n        last=query(arr[x-1],arr[y],-1,n,x);\n        cout<<last<<endl;\n    }\n}\n\nint main()\n{\n    run();\n    int t=1;\n    //cin >> t;\n    while (t--)\n    {\n        solve();\n    }\n}\n\n \t  \t\t \t\t\t \t\t    \t \t\t"
}