{
    "id": 219726587,
    "contestId": 813,
    "creationTimeSeconds": 1692568911,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 813,
        "index": "E",
        "name": "Army Creation",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 813,
        "members": [
            {
                "handle": "danx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1496675100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 264,
    "memoryConsumedBytes": 67481600,
    "source": "\r\n#pragma GCC optimize (\"Ofast\")\r\n//#pragma GCC target (\"avx2\")\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n \r\n#define int long long\r\n#define ll long long\r\n#define ld long double\r\n#define all(x) x.begin(), x.end()\r\n#define rall(x) x.rbegin(), x.rend()\r\n#define LB lower_bound\r\n#define UB upper_bound\r\n#define ii pair<int, int>\r\n#define ff first\r\n#define ss second\r\n#define mp make_pair\r\n#define pb push_back\r\n#define ppb pop_back\r\n#define vi vector<int>\r\n#define vvi vector<vi>\r\n#define vb vector<bool>\r\n#define vvb vector<vb>\r\n#define vs vector<string>\r\n#define vii vector<ii>\r\n#define vvii vector<vii>\r\n#define vll vector<ll>\r\n#define vld vector<ld>\r\n \r\nconst int N = 1e6+6;\r\n\r\nvi seg[N];\r\nint n, k, q;\r\nvi v;\r\n\r\nvoid build(int p = 1, int l = 1, int r = n) {\r\n  if (l > r) return;\r\n\r\n  if (l == r) {\r\n    seg[p].pb(v[l]);\r\n    return;\r\n  }\r\n \r\n  int mid = (l+r)/2;\r\n  build(p*2, l, mid);\r\n  build(p*2+1, mid+1, r);\r\n\r\n  seg[p].resize(seg[p*2].size() + seg[p*2+1].size());\r\n  merge(all(seg[p*2]), all(seg[p*2+1]), seg[p].begin());\r\n}\r\n\r\nint query(int a, int b, int p = 1, int l = 1, int r = n) {\r\n    if (l > r || a > r || b < l) return 0;\r\n  \r\n    if (a <= l && r <= b) {\r\n      return LB(all(seg[p]), a) - seg[p].begin();\r\n    }\r\n \r\n    int mid = (l+r)/2;\r\n    int x = query(a, b, p*2, l, mid);\r\n    int y = query(a, b, p*2+1, mid+1, r);\r\n  \r\n    return x + y;\r\n}\r\n\r\nsigned main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n\r\n    cin >> n >> k;\r\n    v.resize(n+1);\r\n    \r\n    vvi idx(N);\r\n    for (int i = 1; i <= n; i++) {\r\n      cin >> v[i];\r\n\r\n      int x = v[i];\r\n      if (idx[x].size() >= k) {\r\n        v[i] = idx[x][idx[x].size() - k];\r\n      }\r\n      else {\r\n        v[i] = -1;\r\n      }\r\n      idx[x].pb(i);\r\n    }\r\n\r\n    build();\r\n\r\n    cin >> q;\r\n    int last = 0;\r\n    while (q--) {\r\n      int l, r;\r\n      cin >> l >> r;\r\n      l = (l + last) % n + 1;\r\n      r = (r + last) % n + 1;\r\n      if (l > r) swap(l, r);\r\n\r\n      last = query(l, r);\r\n      cout << last << \"\\n\";\r\n    }\r\n \r\n    return 0;\r\n} "
}