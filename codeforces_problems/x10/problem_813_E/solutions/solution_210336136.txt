{
    "id": 210336136,
    "contestId": 813,
    "creationTimeSeconds": 1687259561,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 813,
        "index": "E",
        "name": "Army Creation",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 813,
        "members": [
            {
                "handle": "Ripiaun"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1496675100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 23961600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define pb push_back\r\n#define sz(a) ((int) a.size())\r\n#define all(a) a.begin(), a.end()\r\n#define ls u << 1\r\n#define rs u << 1 | 1\r\nconst int N = 1e5 + 15;\r\nint n, k, q, a[N], b[N];\r\nvector<int> pos[N];\r\nvector<int> tr[N << 2];\r\nvoid build(int u, int l, int r) {\r\n\tif(l == r) {\r\n\t\ttr[u].pb(b[l]);\r\n\t\treturn;\r\n\t}\r\n\tint m = (l + r) / 2;\r\n\tbuild(ls, l, m);\r\n\tbuild(rs, m + 1, r);\r\n\ttr[u].resize(r - l + 1);\r\n\tmerge(tr[ls].begin(), tr[ls].end(), tr[rs].begin(), tr[rs].end(), tr[u].begin());\r\n}\r\nint get(int ql, int qr, int x, int u = 1, int l = 1, int r = n) {\r\n\tif(ql > r || l > qr) return 0;\r\n\tif(ql <= l && r <= qr) {\r\n\t\tint j = lower_bound(all(tr[u]), x) - tr[u].begin();\r\n\t\treturn j;\r\n\t}\r\n\tint m = (l + r) / 2;\r\n\treturn get(ql, qr, x, ls, l, m) + get(ql, qr, x, rs, m + 1, r);\r\n}\r\nint main() {\r\n\tios::sync_with_stdio(0);\r\n\tcin.tie(0);\r\n\tcin >> n >> k;\r\n\tfor(int i = 1; i <= n; i++) {\r\n\t\tcin >> a[i];\r\n\t}\r\n\tfor(int i = 1; i <= n; i++) {\r\n\t\tpos[a[i]].pb(i);\r\n\t\tif(sz(pos[a[i]]) > k) b[i] = pos[a[i]][sz(pos[a[i]]) - k - 1];\r\n\t\telse b[i] = 0;\r\n\t}\r\n\tbuild(1, 1, n);\r\n\tint last = 0;\r\n\tcin >> q;\r\n\twhile(q--) {\r\n\t\tint x, y;\r\n\t\tcin >> x >> y;\r\n\t\tint l = ((x + last) % n) + 1;\r\n\t\tint r = ((y + last) % n) + 1;\r\n\t\tif(l > r) swap(l, r);\r\n\t\tlast = get(l, r, l);\r\n\t\tcout << last << '\\n';\r\n\t}\r\n}\r\n"
}