{
    "id": 199132955,
    "contestId": 813,
    "creationTimeSeconds": 1679766113,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 813,
        "index": "E",
        "name": "Army Creation",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "binary search",
            "data structures"
        ]
    },
    "author": {
        "contestId": 813,
        "members": [
            {
                "handle": "alex.kudryashov"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1496675100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 16179200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double ld;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, ll> pll;\r\ntypedef pair<ld, ld> pdd;\r\n#define fi first\r\n#define se second\r\n#define all(_) _.begin(), _.end()\r\n#define rall(_) _.rbegin(), _.rend()\r\n#define sz(_) (int)_.size()\r\n#define m_p make_pair\r\n#define vi vector<int>\r\n#define vvi vector<vi>\r\n#define vvvi vector<vvi>\r\n#define vll vector<ll>\r\n#define vvll vector<vll>\r\n#define vvvll vector<vvll>\r\n#define vpii vector<pii>\r\n#define vpll vector<pll>\r\n#define vvpii vector<vpii>\r\n#define vvpll vector<vpll>\r\n#define pb push_back\r\nostream &operator<<(ostream &out, vector<ll> &arr) { for (auto &i : arr) out << i << ' '; return out; }\r\nostream &operator<<(ostream &out, vector<int> &arr) { for (auto &i : arr) out << i << ' '; return out; }\r\nostream &operator<<(ostream &out, vector<char> &arr) { for (auto &i : arr) out << i << ' '; return out; }\r\ntemplate<typename _1, typename _2> ostream &operator<<(ostream &out, pair<_1, _2> &p) { out << p.first << ' ' << p.second; return out; }\r\ntemplate<typename _1, typename _2> istream &operator>>(istream &in, pair<_1, _2> &p) { in >> p.first >> p.second; return in; }\r\ntemplate<typename _> ostream &operator<<(ostream &out, vector<_> &arr) { for (auto &i : arr) out << i << '\\n'; return out; }\r\ntemplate<typename _> istream &operator>>(istream &in, vector<_> &arr) { for (auto &i : arr) in >> i; return in; }\r\ntemplate<typename _1, typename _2> bool chmin(_1 &a, _2 b) { if (b < a) return a = b, true; return false; }\r\ntemplate<typename _1, typename _2> bool chmax(_1 &a, _2 b) { if (a < b) return a = b, true; return false; }\r\nconst int INF = 1e9 + 20;\r\nconst ll INFLL = 2e18 + 20;\r\nconst ll MOD = 998244353;\r\n/*TODO:\r\n * check precalc array\r\n * DON'T GET STUCK ON ONE APPROACH\r\n * vi -> vll, pii -> pll\r\n * THINK TWICE BEFORE CODING\r\n*/\r\n//#define MULTITASK\r\nconst int N = 101010;\r\nconst int G = (1 << 17);\r\nvi tree[2*G];\r\nvoid build(vi &v){\r\n    for(int i = G; i < G + sz(v); i++) tree[i] = {v[i-G]};\r\n    for(int i = G - 1; i >= 1; i--){\r\n        tree[i].resize(sz(tree[i*2]) + sz(tree[i * 2 + 1]));\r\n        merge(all(tree[i*2]), all(tree[2*i+1]), tree[i].begin());\r\n    }\r\n}\r\nint get(int ql, int qr, int kth, int node = 1, int l = 0, int r = G){\r\n    if(ql <= l && r <= qr) return lower_bound(all(tree[node]), kth) - tree[node].begin();\r\n    if(qr <= l || r <= ql) return 0;\r\n    int mid = l + (r - l) / 2;\r\n    return get(ql, qr, kth, node * 2, l, mid) + get(ql, qr, kth, node * 2 + 1, mid, r);\r\n}\r\nvoid solve_case() {\r\n    int n, k;\r\n    cin >> n >> k;\r\n    vi a(n);\r\n    cin >> a;\r\n    vvi pos(N);\r\n    vi kth(n);\r\n    for(int i = 0; i < n; i++){\r\n        int kt = (pos[a[i]].size() < k ? -1 : pos[a[i]][pos[a[i]].size() - k]);\r\n        pos[a[i]].pb(i);\r\n        kth[i] = kt;\r\n    }\r\n    build(kth);\r\n    int q;\r\n    cin >> q;\r\n    int last = 0;\r\n    while(q--){\r\n        int x, y;\r\n        cin >> x >> y;\r\n        x = (x + last) % n + 1;\r\n        y = (y + last) % n + 1;\r\n        if(x >= y) swap(x, y);\r\n        x--;\r\n        last = get(x, y, x);\r\n        cout << last << \"\\n\";\r\n    }\r\n}\r\nsigned main() {\r\n    cin.tie(nullptr)->sync_with_stdio(false);\r\n#ifdef LOCAL\r\n    clock_t tStart = clock();\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n#endif\r\n    int ___ = 1;\r\n#ifdef MULTITASK\r\n    cin >> ___;\r\n#endif\r\n    while (___--) {\r\n        solve_case();\r\n        cout << \"\\n\";\r\n    }\r\n#ifdef LOCAL\r\n    fprintf(stderr, \">> Runtime: %.10fs\\n\", (double) (clock() - tStart) / CLOCKS_PER_SEC);\r\n#endif\r\n}"
}