{
    "id": 234741722,
    "contestId": 1832,
    "creationTimeSeconds": 1701169880,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1832,
        "index": "D1",
        "name": "Red-Blue Operations (Easy Version)",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "binary search",
            "greedy",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1832,
        "members": [
            {
                "handle": "TLE_Automaton"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1683902100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 14,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 7987200,
    "source": "/*\r\n * @Author: Linmobi\r\n * @Date: 2023-11-28 16:15:39\r\n * @LastEditors: Linmobi\r\n * @LastEditTime: 2023-11-28 19:10:26\r\n * @FilePath: /cff/D1.cpp\r\n * @Description: \r\n */\r\n#include<bits/stdc++.h>\r\n#define int long long\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\n#define rep(i, a, b) for(int i = (a); i <= signed(b); i ++)\r\n#define per(i, a, b) for(int i = (a); i >= signed(b); i --)\r\n\r\nusing namespace std;\r\n\r\nconst int P = 1e9 + 7;\r\nconst int L = 2e5 + 5;\r\n\r\ninline ll qpow(ll a, ll b) { ll ans = 1, q = a; while(b) { if(b & 1) { ans *= q; ans %= P; } q *= q; q %= P; b >>= 1; } return ans; }\r\ninline int read() {int f = 0, x = 1; char ch = getchar(); while(ch < '0' || ch > '9') { if(ch == '-') x = -1; ch = getchar(); } while(ch >= '0' && ch <= '9') { f = (f << 1) + (f << 3) + ch - '0'; ch = getchar(); } return x * f; }\r\n\r\nint n, q, a[L], k, tmp[L], tt[L], tot, pre[L], erp[L];\r\n\r\nsigned main() {\r\n    n = read(), q = read();\r\n    rep(i, 1, n) a[i] = read(), tot += a[i] - (i - 1);\r\n    sort(a + 1, a + 1 + n);\r\n    pre[0] = P;\r\n    rep(i, 1, n) pre[i] = min(pre[i - 1], a[i] - (i - 1));\r\n    erp[n + 1] = P;\r\n    per(i, n, 1) erp[i] = min(erp[i + 1], a[i]);\r\n    rep(i, 1, q) {\r\n        int k = read();\r\n        // cerr << \"t\" << i << ' ' << pre[k] << endl;\r\n        if(k <= n) printf(\"%lld \", min(pre[k] + k, erp[k + 1]));\r\n        else {\r\n            int nm = (k - n) / 2;\r\n            if((k - n) & 1) {\r\n                int minn = min(a[n] - k, pre[n - 1]);   \r\n                int tot2 = tot - (a[n] - (n - 1)) + (a[n] - k);\r\n                if((nm - (tot2 - minn * n)) >= 0) printf(\"%lld \", (ll)(minn - ceil(1.0 * (nm - (tot2 - minn * n)) / n) + k));\r\n                else printf(\"%lld \", minn + k);\r\n            } else {\r\n                int minn = pre[n];\r\n                if((nm - (tot - minn * n)) >= 0) printf(\"%lld \", (ll)(minn - ceil(1.0 * (nm - (tot - minn * n)) / n) + k));\r\n                else printf(\"%lld \", minn + k);\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}"
}