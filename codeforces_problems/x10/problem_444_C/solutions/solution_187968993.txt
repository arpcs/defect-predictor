{
    "id": 187968993,
    "contestId": 444,
    "creationTimeSeconds": 1672865097,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 444,
        "index": "C",
        "name": "DZY Loves Colors",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 444,
        "members": [
            {
                "handle": "MientusJJ"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1404651900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#ifdef _MSC_VER\r\n#define _CRT_SECURE_NO_WARNINGS\r\n#endif\r\n//#define DEBUG\r\n\r\n\r\n#include <iostream>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <queue>\r\n#include <cstring>\r\n#include <iomanip>\r\n#include <numeric>\r\n#include <string>\r\n#include <cmath>\r\n#include <math.h>\r\n#include <set>\r\n#include <map>\r\n#include <stack>\r\n#include <bitset>\r\n#include <fstream>\r\n#include <chrono>\r\n#include <random>\r\n#include <fstream>\r\n#define es ios::sync_with_stdio(false);cin.tie(nullptr);\r\n//#define x first\r\n//#define y second\r\n#define all(v) (v).begin(),(v).end()\r\n#define prec(i) cout << std::fixed << std::setprecision(i)\r\n#define randomizer mt19937 rng(chrono::steady_clock::now().time_since_epoch().count())\r\n#define mst(v,k) memset((v),(k),sizeof(v));\r\n\r\n\r\nusing namespace std;\r\nusing ll = long long;\r\nusing ull = unsigned long long;\r\nusing pii = pair<int, int>;\r\nusing pll = pair<ll, ll>;\r\nusing pdd = pair<double, double>;\r\nconst int maxik = 1e5 + 7;\r\nconst int maxN = 30;\r\nconst int INF = 0x3f3f3f3f;\r\nconst ll INFll = 1e18;\r\nconst int modik = 1e9 + 7;\r\nconst int tight = 2;\r\nconst int hash2 = 11777;\r\nconst int hash1 = 12269;\r\nconst double eps = 1e-6;\r\nconst int modik2 = 998'244'353;\r\nconst int generatorModik2 = 3;\r\nconst double PI = acos(-1.);\r\n#ifdef DEBUG\r\nfstream in(\"C:/Temp/input.txt\", ios::in);\r\nfstream out(\"C:/Temp/output.txt\", ios::out | ios::trunc);\r\n#define cin in\r\n#define cout out\r\n#endif // DEBUG \r\n\r\nstruct cell\r\n{\r\n\tll sum{ 0 };\r\n\tll color{ 0 };\r\n\tll flag{ 0 };\r\n\tll lazy{ 0 };\r\n};\r\nint n, m;\r\nint sz = 1;\r\nint c;\r\nvector<cell> sTree;\r\nll check(int l, int r, int LL=1, int RR=sz, int indx=1);\r\nvoid upd(int l, int r, ll x, int LL = 1, int RR = sz, int indx = 1);\r\nvoid pushdown(ll indx, int LL, int RR, int mid);\r\nint main()\r\n{\r\n\r\n\tes;\r\n\tcin >> n >> m;\r\n\twhile (sz<n)\r\n\t{\r\n\t\tsz <<= 1;\r\n\t}\r\n\tsTree.resize(sz * 2);\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tsTree[sz + i - 1].color =i;\r\n\t}\r\n\twhile(m--)\r\n\t{\r\n\t\tcin >> c;\r\n\t\tif(c==1)\r\n\t\t{\r\n\t\t\tint l, r, x;\r\n\t\t\tcin >> l >> r >> x;\r\n\t\t\tupd(l, r, x);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tint l, r;\r\n\t\t\tcin >> l >> r;\r\n\t\t\tcout << check(l, r) << \"\\n\";\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\nvoid pushdown(ll indx, int LL, int RR, int mid)\r\n{\r\n\tsTree[indx * 2].sum += sTree[indx].flag * (RR - LL + 1);\r\n\tsTree[indx * 2 | 1].sum += sTree[indx].flag * (RR - mid);\r\n\tsTree[indx * 2 | 1].flag += sTree[indx].flag;\r\n\tsTree[indx * 2].flag += sTree[indx].flag;\r\n\tsTree[indx * 2].color = sTree[indx * 2 | 1].color = sTree[indx].lazy;\r\n\tsTree[indx * 2].lazy = sTree[indx * 2 | 1].lazy = sTree[indx].lazy;\r\n\tsTree[indx].flag = 0;\r\n\tsTree[indx].lazy = 0;\r\n\treturn;\r\n}\r\nll check(int l, int r, int LL, int RR, int indx)\r\n{\r\n\tif(LL> RR || RR<l || LL>r)\r\n\t{\r\n\t\treturn 0ll;\r\n\t}\r\n\tif(LL>=l && RR<=r)\r\n\t{\r\n\t\treturn sTree[indx].sum;\r\n\t}\r\n\tint mid = (LL + RR) >> 1;\r\n\tif (sTree[indx].flag)\r\n\t{\r\n\t\tpushdown(indx, LL, RR,mid);\r\n\t}\r\n\treturn check(l, r, LL, mid, indx * 2) + check(l, r, mid + 1, RR, indx * 2 | 1);\r\n}\r\nvoid upd(int l, int r, ll x, int LL, int RR, int indx)\r\n{\r\n\tif (LL > RR || RR<l || LL>r)\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\tif (LL >= l && RR <= r && sTree[indx].color)\r\n\t{\r\n\t\tsTree[indx].sum += (RR - LL + 1) * abs(x - sTree[indx].color);\r\n\t\tsTree[indx].flag += abs(x - sTree[indx].color);\r\n\t\tsTree[indx].color = sTree[indx.lazy]=x;\r\n\t\treturn;\r\n\t}\r\n\tint mid = (LL + RR) >> 1;\r\n\tif (sTree[indx].flag)\r\n\t{\r\n\t\tpushdown(indx, LL, RR, mid);\r\n\t\r\n\t}\r\n\tupd(l, r, x, LL, mid, indx * 2);\r\n\tupd(l, r, x, mid + 1, RR, indx * 2 | 1);\r\n\tif (sTree[indx*2].color==sTree[indx*2|1].color)\r\n\t{\r\n\t\tsTree[indx].color = sTree[indx * 2].color;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tsTree[indx].color = 0;\r\n\t}\r\n\tsTree[indx].sum = sTree[indx * 2].sum + sTree[indx * 2 | 1].sum;\r\n\treturn;\r\n}\r\n"
}