{
    "id": 197343210,
    "contestId": 444,
    "creationTimeSeconds": 1678783373,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 444,
        "index": "C",
        "name": "DZY Loves Colors",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 444,
        "members": [
            {
                "handle": "hanweizhe"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1404651900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 48128000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\nll tree[2000005];\r\nll sum[2000005];\r\nll lazy[2000005];\r\nll n,m;\r\n\r\nvoid build(ll node,ll l,ll r){\r\n\tif(l==r){\r\n\t\ttree[node]=l;\r\n\t\treturn ;\r\n\t}\r\n\tll mid=(l+r)>>1;\r\n\tbuild(node*2,l,mid);\r\n\tbuild(node*2+1,mid+1,r);\r\n\t\r\n}\r\n\r\nvoid pushdown(ll node,ll l,ll r){\r\n\tif(lazy[node]){\r\n\t\ttree[node*2]=tree[node];\r\n\t\ttree[node*2+1]=tree[node];\r\n\t\tsum[node*2]+=lazy[node]/2;\r\n\t\tsum[node*2+1]+=lazy[node]/2;\r\n\t\tlazy[node*2]=lazy[node]/2;\r\n\t\tlazy[node*2+1]=lazy[node]/2;\r\n\t\tlazy[node]=0;\r\n\t}\r\n}\r\n\r\nvoid updatal(ll node,ll l,ll r,ll L,ll R,ll val){\r\n\tif(L<=l&&r<=R&&tree[node]!=0){\r\n\t\tsum[node]+=abs((tree[node]-val)*(r-l+1));\r\n\t\ttree[node]=val;\r\n\t\tlazy[node]=abs((tree[node]-val)*(r-l+1));\r\n\t\treturn ;\r\n\t}\r\n\tpushdown(node,l,r);\r\n\tll mid=(l+r)>>1;\r\n\tif(L<=mid)updatal(node*2,l,mid,L,R,val);\r\n\tif(R>mid)updatal(node*2+1,mid+1,r,L,R,val);\r\n\tsum[node]=sum[node*2]+sum[node*2+1];\r\n\tif(tree[node*2]==tree[node*2+1]){\r\n\t\ttree[node]=tree[node*2];\t\r\n\t}else{\r\n\t\ttree[node]=0;\r\n\t}\r\n}\r\n\r\nll ry(ll node,ll l,ll r,ll L,ll R){\r\n\tif(L<=l&&r<=R)return sum[node];\r\n\tpushdown(node,l,r);\r\n\tll mid=(l+r)>>1;\r\n\tll ans=0;\r\n\tif(L<=mid)ans+=ry(node*2,l,mid,L,R);\r\n\tif(R>mid)ans+=ry(node*2+1,mid+1,r,L,R);\r\n\treturn ans;\r\n}\r\n\r\nint main(){\r\n\twhile(cin >> n >> m){\r\n\t\tmemset(tree,0,sizeof(tree));\r\n\t\tbuild(1,1,n);\r\n\t\tmemset(sum,0,sizeof(sum));\r\n\t\tfor(int i=0;i<m;i++){\r\n\t\t\tll p,tl,tr,t;\r\n\t\t\tcin >> p;\r\n\t\t\tif(p==1){\r\n\t\t\t\tcin >> tl >> tr >> t;\r\n\t\t\t\tupdatal(1,1,n,tl,tr,t);\r\n\t\t\t}else{\r\n\t\t\t\tcin >> tl >> tr;\r\n\t\t\t\tcout << ry(1,1,n,tl,tr) << endl;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\n//2023\u5e7403\u670814\u65e5 16\u65f642\u520647.953\u79d2"
}