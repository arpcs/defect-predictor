{
    "id": 232218964,
    "contestId": 1601,
    "creationTimeSeconds": 1699617896,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1601,
        "index": "F",
        "name": "Two Sorts",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3400,
        "tags": [
            "binary search",
            "dfs and similar",
            "math",
            "meet-in-the-middle"
        ]
    },
    "author": {
        "contestId": 1601,
        "members": [
            {
                "handle": "crimson000"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1635143700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 405,
    "memoryConsumedBytes": 13721600,
    "source": "\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\nusing PII = pair<ll, ll>;\r\n\r\nll read()\r\n{\r\n    ll x = 0, f = 1;\r\n    char ch = getchar();\r\n    while(ch < '0' || ch > '9')\r\n    {\r\n        if(ch == '-') f = -1;\r\n        ch = getchar();\r\n    }\r\n    while(ch >= '0' && ch <= '9')\r\n    {\r\n        x = (x << 3) + (x << 1) + (ch ^ '0');\r\n        ch = getchar();\r\n    }\r\n    return x * f;\r\n}\r\n\r\nconst int N = 1e6 + 10;\r\nconst int mod1 = 998244353, mod2 = 1e9 + 7;\r\nvector<ll> val[7];\r\nll sum[7];\r\nll cnt1, cnt2, n;\r\n\r\nll get(ll x)\r\n{\r\n    return (x % mod1 + mod1) % mod1;\r\n}\r\n\r\nvoid dfs1(int dep, ll x)\r\n{\r\n    if(dep == 7) return;\r\n    val[dep].push_back(get(cnt1 - x));\r\n    sum[dep] += get(cnt1 - x);\r\n    cnt1 ++;\r\n    for(int i = 0; i <= 9; i ++ )\r\n        dfs1(dep + 1, x * 10 + i);\r\n}\r\n\r\nll ans;\r\nvoid dfs2(int dep, ll x)\r\n{\r\n    if(x > n) return;\r\n    if(x * 1000000 + 999999 <= n && x * 1000000 * 10 > n)\r\n    {\r\n        ll mul = 1;\r\n        for(int i = 0; i <= 6; i ++, mul *= 10)\r\n        {\r\n            ll b = get(cnt2 + 1 - x * mul);\r\n            int pos = lower_bound(val[i].begin(), val[i].end(), mod1 - b) - val[i].begin();\r\n            ans = (ans + sum[i] + b * val[i].size() - mod1 * (val[i].size() - pos)) % mod2;\r\n        }\r\n        cnt2 += cnt1;\r\n        return;\r\n    }\r\n    cnt2 ++;\r\n    ans = (ans + get(cnt2 - x)) % mod2;\r\n    for(int i = !dep; i <= 9; i ++ )\r\n        dfs2(dep + 1, x * 10 + i);\r\n}\r\n\r\nint main()\r\n{\r\n    #ifdef LOCAL\r\n        freopen(\"D:\\\\workspace\\\\in_and_out\\\\in.in\", \"r\", stdin);\r\n        freopen(\"D:\\\\workspace\\\\in_and_out\\\\out.out\", \"w\", stdout);\r\n    #endif\r\n\r\n    n = read();\r\n    dfs1(0, 0);\r\n    for(int i = 0; i <= 6; i ++ ) sort(val[i].begin(), val[i].end());\r\n    cnt2 = -1;\r\n    dfs2(0, 0);\r\n    cout << ans << endl;\r\n\r\n    return 0;\r\n}\r\n\r\n// And in that light, I find deliverance.\r\n// \u6bba\u3057\u3066\u3042\u3052\u308b"
}