{
    "id": 229366607,
    "contestId": 831,
    "creationTimeSeconds": 1698034429,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 831,
        "index": "C",
        "name": "Jury Marks",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms"
        ]
    },
    "author": {
        "contestId": 831,
        "members": [
            {
                "handle": "eerriicc"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499958300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 57,
    "timeConsumedMillis": 468,
    "memoryConsumedBytes": 307200,
    "source": "#include <iostream>\n#include <vector>\n#include <unordered_set>\n#include <set>\nusing namespace std;\n\nint main() {\n    int k,n;\n    cin >> k >> n;\n    vector<int> marks(k+1);\n    for(int i=1; i<=k; i++){\n        cin >> marks[i];\n    }\n    set<int> v;\n    int center;\n    cin >> center;\n    for(int i=1; i<n; i++){\n        int temp;\n        cin >> temp;\n        v.insert(temp);\n    }\n    vector<int> prefix (k+1);\n    prefix[1]=marks[1];\n    for(int i=2;i<=k;i++){\n        prefix[i]=prefix[i-1]+marks[i];\n    }\n    unordered_set<int> ans;\n    for(int i=1;i<=k; i++){\n        set<int> copy = v;\n        for(int j=1; j<=k; j++){\n            int find;\n            if (i!=j){\n                find = center+prefix[j]-prefix[i];\n                copy.erase(find);\n            }\n        }\n        if(copy.empty()){\n            ans.insert(prefix[i]);\n        }\n    }\n    cout << ans.size();\n    return 0;\n}\n"
}