{
    "id": 194311696,
    "contestId": 831,
    "creationTimeSeconds": 1676872166,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 831,
        "index": "C",
        "name": "Jury Marks",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms"
        ]
    },
    "author": {
        "contestId": 831,
        "members": [
            {
                "handle": "cgzico"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499958300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 57,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "// Problem: C. Jury Marks\n// Contest: Codeforces - Codeforces Round #424 (Div. 2, rated, based on VK Cup Finals)\n// URL: https://codeforces.com/problemset/problem/831/C\n// Memory Limit: 256 MB\n// Time Limit: 2000 ms\n// \n// Powered by CP Editor (https://cpeditor.org)\n\n#pragma GCC optimize(2)\n\n#include<algorithm>\n#include<cstring>\n#include<iostream>\n#include<vector>\n#include<queue>\n#include<map>\n#include<unordered_map>\n#include<set>\n#include<unordered_set>\n\nint main() {\n  std::ios_base::sync_with_stdio(0); \n  std::cin.tie(0);\n  \n  int k, n;\n  std::cin >> k >> n;\n  std::vector<int> a(k);\n  for (int i = 0; i < k; i++) std::cin >> a[i];\n  std::vector<int> sums(k);\n  sums[0] = a[0];\n  for (int i = 1; i < k; i++) {\n      sums[i] = a[i] + sums[i - 1];\n  }\n  std::sort(sums.begin(), sums.end());\n  \n  std::vector<int> b(n);\n  for (int i = 0; i < n; i++) std::cin >> b[i];\n  std::sort(b.begin(), b.end());\n  \n  std::set<int> results;\n  \n  for (int i = 0; i < k; i++) {\n      int pre_a = sums[i];\n      int ai = i + 1, bi = 1;\n      while (ai < k && bi < n) {\n          int diff = b[bi] - b[bi - 1];\n          while (ai < k && sums[ai] - pre_a != diff) ai++;\n          \n          if (ai < k && sums[ai] - pre_a == diff) {\n              bi++;\n              pre_a = sums[ai];\n              ai++;\n          }\n          else break;\n      }\n      \n      if (bi == n) {\n          results.insert(b[0] - sums[i]);\n      }\n  }\n  \n  std::cout << results.size();\n  return 0;\n}\n"
}