{
    "id": 218724384,
    "contestId": 831,
    "creationTimeSeconds": 1691963483,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 831,
        "index": "C",
        "name": "Jury Marks",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms"
        ]
    },
    "author": {
        "contestId": 831,
        "members": [
            {
                "handle": "Kodik"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499958300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 57,
    "timeConsumedMillis": 1231,
    "memoryConsumedBytes": 100147200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define f first\r\n#define s second\r\n#define ll long long\r\n\r\n\r\nint nxt() { int a; cin >> a; return a; }\r\n\r\nvoid solve() {\r\n\tint k = nxt(), n = nxt();\r\n\tvector<int> b(n);\r\n\tset<int> a_sums; \r\n\tunordered_map<int, int> possible;\r\n\tint sum = 0, solution = 0;\r\n\tfor(int i=0; i<k; ++i) {\r\n\t\tsum += nxt();\r\n\t\ta_sums.insert(sum);\r\n\t}\r\n\tgenerate(b.begin(), b.end(), nxt);\r\n\r\n\tbool found = true;\r\n\tfor(int i:b) {\r\n\t\tfor(int j:a_sums) {\r\n\t\t\tif(possible.count(i-j)) { found = true; }\r\n\t\t\tif(found) possible[i-j]++;\r\n\t\t\tif(possible[i-j] == n) solution++;\r\n\t\t}\r\n\t\tif(!found) {cout << 0 << endl; exit(0);}\r\n\t\tfound = false;\r\n\t}\r\n\r\n\tcout << solution << endl;\r\n}\r\n \r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n    int t = 1;\r\n    // cin >> t;\r\n    while(t--){\r\n        solve();\r\n    }  \r\n    return 0;\r\n}"
}