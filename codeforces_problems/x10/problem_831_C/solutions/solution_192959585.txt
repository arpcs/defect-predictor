{
    "id": 192959585,
    "contestId": 831,
    "creationTimeSeconds": 1675960249,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 831,
        "index": "C",
        "name": "Jury Marks",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms"
        ]
    },
    "author": {
        "contestId": 831,
        "members": [
            {
                "handle": "Will_Get_To_Master"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1499958300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <bits/stdc++.h>\r\n#define vi vector<int>\r\n#define pb push_back\r\n#define ll long long\r\n#define optimise ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    optimise;\r\n    int t;\r\n    //cin >> t;\r\n    t = 1;\r\n    while(t--) {\r\n        int k, n;\r\n        cin >> k >> n;\r\n        vi v(k), v2(n);\r\n        for (int i = 0; i < k; i++) {\r\n            cin >> v[i];\r\n        }\r\n        for (int i = 0; i < n; i++) {\r\n            cin >> v2[i];\r\n        }\r\n        vi v3 = v;\r\n        for (int i = 1; i < k; i++) {\r\n            v[i] = v[i] + v[i - 1];\r\n        }\r\n        set<int> s;\r\n\r\n        for (int i = 0; i < k; i++) {\r\n            for (int j = 0; j < n; j++) {\r\n                s.insert(v2[j] - v[i]);\r\n            }\r\n        }\r\n\r\n        vector<pair<bool,int>> watches;\r\n        for (auto x : v2) {\r\n            watches.pb({true, x});\r\n        }\r\n        /*\r\n        cout << \"Possible case: \" << endl;\r\n        for (auto x : s)\r\n            cout << x << \" \" ;\r\n        cout << endl;\r\n        */\r\n\r\n        int counter {};\r\n        for (auto x : s) {\r\n            bool flag = true;\r\n            for (auto  y : v2) {\r\n                auto p = lower_bound(v.begin(), v.end(), y - x );\r\n                if (p == v.end()) {\r\n                    flag = false;\r\n                    break;\r\n                }\r\n\r\n                /*\r\n                for (auto z : v) {\r\n                    if (x + z == y.second) {\r\n                        y.first = false;\r\n                        break;\r\n                    }\r\n                } */\r\n            }\r\n            if (flag)\r\n                counter++;\r\n            /*\r\n            bool test = true;\r\n            for (auto w : watches) {\r\n                if (w.first) test = false;\r\n            }\r\n            if (test)\r\n                counter++;\r\n            watches.clear();\r\n            for (auto x : v2) {\r\n                watches.pb({true, x});\r\n            }\r\n            */\r\n        }\r\n\r\n\r\n        cout << counter << endl;\r\n    }\r\n    return 0;\r\n}\r\n"
}