{
    "id": 226125693,
    "contestId": 1109,
    "creationTimeSeconds": 1696146283,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1109,
        "index": "F",
        "name": "Sasha and Algorithm of Silence's Sounds",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3200,
        "tags": [
            "data structures",
            "trees"
        ]
    },
    "author": {
        "contestId": 1109,
        "members": [
            {
                "handle": "mazihang2022"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1550334900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 27648000,
    "source": "// LUOGU_RID: 126868907\n#include<bits/stdc++.h>\r\n#define ll long long\r\n#define fir first\r\n#define sec second\r\n#define pii pair<int,int>\r\nusing namespace std;\r\n\r\nconst int maxn=200005;\r\nconst int logn=21;\r\nconst int inf=0x3f3f3f3f;\r\n\r\nnamespace Solve {\r\n\tvector<pii> get(int);\r\n\tstruct Val {\r\n\t\tint mi,cnt;\r\n\t\tVal operator + (const Val &rhs) const {\r\n\t\t\tint v=min(mi,rhs.mi);\r\n\t\t\treturn {v,(mi==v)*cnt+(rhs.mi==v)*rhs.cnt};\r\n\t\t}\r\n\t};\r\n\tstruct Tag {\r\n\t\tint v;\r\n\t\tTag operator + (const Tag &rhs) const {\r\n\t\t\treturn {v+rhs.v};\r\n\t\t}\r\n\t};\r\n\tstruct ST {\r\n\t\tstruct Node {\r\n\t\t\tint l,r;\r\n\t\t} a[maxn*4];\r\n\t\tVal val[maxn*4];\r\n\t\tTag tag[maxn*4];\r\n\t\tvoid pushup(int x) {\r\n\t\t\tval[x]=val[x*2]+val[x*2+1];\r\n\t\t}\r\n\t\tvoid spread(int x,Tag t) {\r\n\t\t\tval[x].mi+=t.v;\r\n\t\t\ttag[x]=tag[x]+t;\r\n\t\t}\r\n\t\tvoid pushdown(int x) {\r\n\t\t\tspread(x*2,tag[x]);\r\n\t\t\tspread(x*2+1,tag[x]);\r\n\t\t\ttag[x]={};\r\n\t\t}\r\n\t\tvoid build(int l,int r,int k=1) {\r\n\t\t\ta[k]={l,r};\r\n\t\t\ttag[k]={};\r\n\t\t\tif(l==r) {\r\n\t\t\t\tval[k]={0,1};\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n\t\t\tint mid=(l+r)>>1;\r\n\t\t\tbuild(l,mid,k*2);\r\n\t\t\tbuild(mid+1,r,k*2+1);\r\n\t\t\tpushup(k);\r\n\t\t}\r\n\t\tvoid update(int l,int r,Tag t,int k=1) {\r\n\t\t\tif(a[k].r<l||a[k].l>r) {\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n\t\t\tif(l<=a[k].l&&a[k].r<=r) {\r\n\t\t\t\tspread(k,t);\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n\t\t\tpushdown(k);\r\n\t\t\tupdate(l,r,t,k*2);\r\n\t\t\tupdate(l,r,t,k*2+1);\r\n\t\t\tpushup(k);\r\n\t\t}\r\n\t\tvoid change(int x,Val v,int k=1) {\r\n\t\t\tif(a[k].l==a[k].r) {\r\n\t\t\t\tval[k]=v;\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n\t\t\tpushdown(k);\r\n\t\t\tint mid=(a[k].l+a[k].r)>>1;\r\n\t\t\tchange(x,v,k*2+(x>mid));\r\n\t\t\tpushup(k); \r\n\t\t}\r\n\t\tVal ask(int l,int r,int k=1) {\r\n\t\t\tif(a[k].r<l||a[k].l>r) {\r\n\t\t\t\treturn {inf,0};\r\n\t\t\t}\r\n\t\t\tif(l<=a[k].l&&a[k].r<=r) {\r\n\t\t\t\treturn val[k];\r\n\t\t\t}\r\n\t\t\tpushdown(k);\r\n\t\t\treturn ask(l,r,k*2)+ask(l,r,k*2+1);\r\n\t\t} \r\n\t} seg;\r\n\tstruct LCT {\r\n\t\tstruct Node {\r\n\t\t\tint ch[2],fa,mi,id,rev;\r\n\t\t} a[maxn];\r\n\t\tvector<vector<int>> v;\r\n\t\tLCT() {\r\n\t\t\ta[0].mi=inf;\r\n\t\t}\r\n\t\tvoid init(int x,int v) {\r\n\t\t\ta[x].id=v;\r\n\t\t}\r\n\t\tbool isroot(int x) {\r\n\t\t\treturn a[a[x].fa].ch[0]!=x&&a[a[x].fa].ch[1]!=x;\r\n\t\t}\r\n\t\tvoid pushup(int x) {\r\n\t\t\ta[x].mi=min({a[x].id,a[a[x].ch[0]].mi,a[a[x].ch[1]].mi});\r\n\t\t}\r\n\t\tvoid spread(int x) {\r\n\t\t\ta[x].rev^=1;\r\n\t\t\tswap(a[x].ch[0],a[x].ch[1]);\r\n\t\t}\r\n\t\tvoid pushdown(int x) {\r\n\t\t\tif(a[x].rev) {\r\n\t\t\t\tspread(a[x].ch[0]);\r\n\t\t\t\tspread(a[x].ch[1]);\r\n\t\t\t\ta[x].rev=0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tvoid pushall(int x) {\r\n\t\t\tif(!isroot(x)) {\r\n\t\t\t\tpushall(a[x].fa);\r\n\t\t\t}\r\n\t\t\tpushdown(x);\r\n\t\t}\r\n\t\tvoid rotate(int x) {\r\n\t\t\tint y=a[x].fa,z=a[y].fa;\r\n\t\t\tif(!isroot(y)) {\r\n\t\t\t\ta[z].ch[a[z].ch[1]==y]=x;\r\n\t\t\t}\r\n\t\t\ta[x].fa=z;\r\n\t\t\tint d=a[y].ch[1]==x;\r\n\t\t\ta[y].ch[d]=a[x].ch[!d];\r\n\t\t\ta[a[x].ch[!d]].fa=y;\r\n\t\t\ta[x].ch[!d]=y,a[y].fa=x;\r\n\t\t\tpushup(y),pushup(x);\r\n\t\t}\r\n\t\tvoid splay(int x) {\r\n\t\t\tpushall(x);\r\n\t\t\twhile(!isroot(x)) {\r\n\t\t\t\tint y=a[x].fa;\r\n\t\t\t\tif(!isroot(y)) {\r\n\t\t\t\t\trotate(((a[y].ch[0]==x)^(a[a[y].fa].ch[0]==y))?x:y);\r\n\t\t\t\t}\r\n\t\t\t\trotate(x);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvoid access(int x) {\r\n\t\t\tfor(int p=0;x;p=x,x=a[x].fa) {\r\n\t\t\t\tsplay(x);\r\n\t\t\t\ta[x].ch[1]=p;\r\n\t\t\t\tpushup(x);\r\n\t\t\t}\r\n\t\t}\r\n\t\tint fd(int x) {\r\n\t\t\taccess(x);\r\n\t\t\tsplay(x);\r\n\t\t\twhile(true) {\r\n\t\t\t\tpushdown(x);\r\n\t\t\t\tif(!a[x].ch[0]) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tx=a[x].ch[0];\r\n\t\t\t}\r\n\t\t\tsplay(x);\r\n\t\t\treturn x;\r\n\t\t}\r\n\t\tvoid makeroot(int x) {\r\n\t\t\taccess(x);\r\n\t\t\tsplay(x);\r\n\t\t\tspread(x);\r\n\t\t}\r\n\t\tvoid split(int x,int y) {\r\n\t\t\tmakeroot(x);\r\n\t\t\taccess(y);\r\n\t\t\tsplay(y);\r\n\t\t}\r\n\t\tvoid cut(int x,int y) {\r\n//\t\t\tcerr<<\"cut: \"<<x<<\" \"<<y<<\"\\n\";\r\n\t\t\tsplit(x,y);\r\n\t\t\ta[y].ch[0]=a[x].fa=0;\r\n\t\t\tpushup(y);\r\n\t\t}\r\n\t\tvoid link(int x,int y) {\r\n\t\t\tif(fd(x)==fd(y)) {\r\n\t\t\t\treturn ;\r\n\t\t\t}\r\n//\t\t\tcerr<<\"link: \"<<x<<\" \"<<y<<\"\\n\";\r\n\t\t\tmakeroot(x);\r\n\t\t\ta[x].fa=y;\t\r\n\t\t}\r\n\t\tint ask(int x,int y) {\r\n//\t\t\tcerr<<\"ask: \"<<x<<\" \"<<y<<\"\\n\";\r\n\t\t\tif(fd(x)==fd(y)) {\r\n\t\t\t\tsplit(x,y);\r\n//\t\t\t\tcerr<<\"answer: \"<<a[y].mi<<\"\\n\";\r\n\t\t\t\treturn a[y].mi;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t} lct;\r\n\tint n,m;\r\n\tint l=1,r;\r\n\tpii pos[maxn];\r\n\tvector<vector<int>> a;\r\n\tvector<int> ins[maxn];\r\n\tvoid clear() {\r\n\t\t\r\n\t}\r\n\tvoid edge(int x,int y) {\r\n\t\tins[max(x,y)].push_back(min(x,y));\r\n\t}\r\n\tint id(int x,int y) {\r\n\t\treturn (x-1)*m+y;\r\n\t}\r\n\tvoid del(int x,int y) {\r\n\t\tif(x<1||y<1||x>n||y>m) {\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tif(x>1&&l<=a[x-1][y]&&a[x-1][y]<=r) {\r\n\t\t\tlct.cut(id(x,y),id(x-1,y));\r\n\t\t}\r\n\t\tif(y>1&&l<=a[x][y-1]&&a[x][y-1]<=r) {\r\n\t\t\tlct.cut(id(x,y),id(x,y-1));\r\n\t\t}\r\n\t\tif(x<n&&l<=a[x+1][y]&&a[x+1][y]<=r) {\r\n\t\t\tlct.cut(id(x,y),id(x+1,y));\r\n\t\t}\r\n\t\tif(y<m&&l<=a[x][y+1]&&a[x][y+1]<=r) {\r\n\t\t\tlct.cut(id(x,y),id(x,y+1));\r\n\t\t}\r\n\t}\r\n\tint ask(int x,int y) {\r\n\t\tint res=0;\r\n\t\tif(x>1&&l<=a[x-1][y]&&a[x-1][y]<=r) {\r\n\t\t\tint v=lct.ask(id(x,y),id(x-1,y));\r\n\t\t\tdel(pos[v].fir,pos[v].sec);\r\n\t\t\tres=max(res,v);\r\n\t\t\tlct.link(id(x,y),id(x-1,y));\r\n\t\t}\r\n\t\tif(y>1&&l<=a[x][y-1]&&a[x][y-1]<=r) {\r\n\t\t\tint v=lct.ask(id(x,y),id(x,y-1));\r\n\t\t\tdel(pos[v].fir,pos[v].sec);\r\n\t\t\tres=max(res,v);\r\n\t\t\tlct.link(id(x,y),id(x,y-1));\r\n\t\t}\r\n\t\tif(x<n&&l<=a[x+1][y]&&a[x+1][y]<=r) {\r\n\t\t\tint v=lct.ask(id(x,y),id(x+1,y));\r\n\t\t\tdel(pos[v].fir,pos[v].sec);\r\n\t\t\tres=max(res,v);\r\n\t\t\tlct.link(id(x,y),id(x+1,y));\r\n\t\t}\r\n\t\tif(y<m&&l<=a[x][y+1]&&a[x][y+1]<=r) {\r\n\t\t\tint v=lct.ask(id(x,y),id(x,y+1));\r\n\t\t\tdel(pos[v].fir,pos[v].sec);\r\n\t\t\tres=max(res,v);\r\n\t\t\tlct.link(id(x,y),id(x,y+1));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\tvoid add(int x,int y) {\r\n\t\tif(x>1&&l<=a[x-1][y]&&a[x-1][y]<=r) {\r\n\t\t\tlct.link(id(x,y),id(x-1,y));\r\n\t\t}\r\n\t\tif(y>1&&l<=a[x][y-1]&&a[x][y-1]<=r) {\r\n\t\t\tlct.link(id(x,y),id(x,y-1));\r\n\t\t}\r\n\t\tif(x<n&&l<=a[x+1][y]&&a[x+1][y]<=r) {\r\n\t\t\tlct.link(id(x,y),id(x+1,y));\r\n\t\t}\r\n\t\tif(y<m&&l<=a[x][y+1]&&a[x][y+1]<=r) {\r\n\t\t\tlct.link(id(x,y),id(x,y+1));\r\n\t\t}\r\n\t}\r\n\tvoid main(int tid) {\r\n\t\tcin>>n>>m;\r\n\t\ta.resize(n+1,vector<int>(m+1));\r\n\t\tfor(int i=1;i<=n;i++) {\r\n\t\t\tfor(int j=1;j<=m;j++) {\r\n\t\t\t\tcin>>a[i][j];\r\n\t\t\t\tpos[a[i][j]]={i,j};\r\n\t\t\t\tlct.init(id(i,j),a[i][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i=1;i<=n;i++) {\r\n\t\t\tfor(int j=1;j<=m-1;j++) {\r\n\t\t\t\tedge(a[i][j],a[i][j+1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i=1;i<=n-1;i++) {\r\n\t\t\tfor(int j=1;j<=m;j++) {\r\n\t\t\t\tedge(a[i][j],a[i+1][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tint s=n*m,p=1;\r\n\t\tseg.build(1,s);\r\n\t\tll ans=0;\r\n\t\tfor(r=1;r<=s;r++) {\r\n\t\t\tseg.update(1,r,{1});\r\n\t\t\tfor(int l:ins[r]) {\r\n\t\t\t\tseg.update(1,l,{-1});\r\n\t\t\t}\r\n\t\t\tint c=ask(pos[r].fir,pos[r].sec);\r\n\t\t\twhile(l<=c) {\r\n\t\t\t\tdel(pos[l].fir,pos[l].sec);\r\n\t\t\t\tl++;\r\n\t\t\t}\r\n\t\t\tadd(pos[r].fir,pos[r].sec);\r\n\t\t\tVal v=seg.ask(l,r);\r\n\t\t\tans+=(v.mi==1)*v.cnt;\r\n\t\t}\r\n\t\tcout<<ans<<\"\\n\";\r\n\t}\r\n\tvoid init() {\r\n\t\t\r\n\t}\r\n}\r\n\r\nsigned main() {\r\n//\tfreopen(\"data.in\",\"r\",stdin);\r\n//\tfreopen(\"data.out\",\"w\",stdout);\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0),cout.tie(0);\r\n\tint T=1;\r\n//\tcin>>T;\r\n\tSolve::init();\r\n\tfor(int t=1;t<=T;t++) {\r\n\t\tSolve::main(t);\r\n\t\tSolve::clear();\r\n\t}\r\n#ifndef ONLINE_JUDGE\r\n\tcerr<<\"Time: \"<<clock()<<\"ms\\n\";\r\n#endif\r\n}"
}