{
    "id": 153110004,
    "contestId": 1109,
    "creationTimeSeconds": 1649478212,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1109,
        "index": "F",
        "name": "Sasha and Algorithm of Silence's Sounds",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3200,
        "tags": [
            "data structures",
            "trees"
        ]
    },
    "author": {
        "contestId": 1109,
        "members": [
            {
                "handle": "tiantian666"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1550334900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 17,
    "timeConsumedMillis": 468,
    "memoryConsumedBytes": 57753600,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <vector>\r\n#include <queue>\r\n#include <set>\r\n#include <cstdlib>\r\n\r\nusing namespace std;\r\nconst int N = 2005;\r\nconst int M = 200005;\r\ntypedef pair<int , int> pii;\r\nint dx[] = {0 , 1 , 0 , -1 , 0} , dy[] = {0 , 0 , 1 , 0 , -1};\r\nint vis[N][N] , a[N][N] , ch[M << 1][2] , rev[M << 1] , fa[M << 1] , g[M] , n , m , Ans;\r\npii b[M];\r\ninline int read() {\r\n    int x=0,ff=1;\r\n    char ch=getchar();\r\n\twhile(ch<'0'||ch>'9') {\r\n        if(ch=='-')\r\n            ff=-1;\r\n        ch=getchar();\r\n    }\r\n    while(ch>='0'&&ch<='9') {\r\n        x=(x<<1)+(x<<3)+(ch^48);\r\n        ch=getchar();\r\n    }\r\n    return x*ff;\r\n}\r\n\r\ninline int get(int x) {return x == ch[fa[x]][1];}\r\ninline bool nrt(int x) {return ch[fa[x]][0] == x || ch[fa[x]][1] == x;}\r\ninline void pushr(int x) {swap(ch[x][0] , ch[x][1]); rev[x] ^= 1;}\r\ninline void pushdown(int x) {if(rev[x]) {if(ch[x][0]) pushr(ch[x][0]); if(ch[x][1]) pushr(ch[x][1]); rev[x] = 0;}}\r\ninline void update(int x) {if(nrt(x)) update(fa[x]); pushdown(x);}\r\n\r\ninline void rotate(int x) {\r\n\tint y = fa[x] , z = fa[y] , k = get(x);\r\n\tif(nrt(y)) ch[z][get(y)] = x; \r\n\tch[y][k] = ch[x][k ^ 1]; if(ch[x][k ^ 1]) fa[ch[x][k ^ 1]] = y;\r\n\tch[x][k ^ 1] = y; fa[y] = x; fa[x] = z; return;\r\n} \r\n\r\ninline void splay(int x) {\r\n\tupdate(x); \r\n\tfor(int f = fa[x]; f = fa[x] , nrt(x) ; rotate(x)) {\r\n\t\tif(nrt(f)) rotate(get(f) == get(x) ? f : x);\r\n\t}\r\n}\r\n\r\ninline void access(int x) {\r\n\tfor(int p = 0; x ; p = x , x = fa[x]) {\r\n\t\tsplay(x); ch[x][1] = p; \r\n\t}\r\n}\r\n\r\ninline int findrt(int x) {\r\n\taccess(x); splay(x); while(ch[x][0]) {pushdown(x); x = ch[x][0];} splay(x); return x;\r\n}\r\n\r\ninline void makert(int x) {access(x); splay(x); pushr(x);} \r\ninline bool link(int x , int y) {makert(x); if(findrt(y) == x) return 0; fa[x] = y; return 1;}\r\ninline void cut(int x , int y) {makert(x); if(findrt(y) != x || fa[y] != x || ch[y][0]) return; fa[y] = ch[x][1] = 0; return;}\r\n\r\ninline int id(int x , int y) {return (x - 1) * m + y;}\r\nstruct Seg{\r\n\tint l , r;\r\n\tint mn , num , tag;\r\n\t#define l(x) tr[x].l\r\n\t#define r(x) tr[x].r\r\n\t#define mn(x) tr[x].mn\r\n\t#define num(x) tr[x].num \r\n\t#define tag(x) tr[x].tag\r\n}tr[M << 2];\r\n\r\ninline void Pushup(int x) {\r\n\tmn(x) = min(mn(x << 1) , mn(x << 1 | 1)); num(x) = 0; \r\n\tnum(x) += (mn(x) == mn(x << 1)) * num(x << 1); num(x) += (mn(x) == mn(x << 1 | 1)) * num(x << 1 | 1);\r\n}\r\n\r\ninline void pushv(int x , int v) {mn(x) += v; tag(x) += v; return;}\r\ninline void Pushdown(int x) {if(tag(x)) {pushv(x << 1 , tag(x)); pushv(x << 1 | 1 , tag(x)); tag(x) = 0;}}\r\ninline void build(int x , int l , int r) {\r\n\tl(x) = l , r(x) = r; if(l == r) {mn(x) = l ; num(x) = 1; tag(x) = 0; return;}\r\n\tint mid = (l + r) >> 1;\r\n\tbuild(x << 1 , l , mid); build(x << 1 | 1 , mid + 1 , r); Pushup(x);\r\n}\r\n\r\ninline void change(int x , int l , int r , int v) {\r\n//\tif(x == 1) cout << \"change l r v \" << l << \" \" << r << \" \" << v << '\\n'; \r\n\tif(l <= l(x) && r(x) <= r) {pushv(x , v); return;}\r\n\tPushdown(x); int mid = (l(x) + r(x)) >> 1;\r\n\tif(l <= mid) change(x << 1 , l , r , v); if(mid < r) change(x << 1 | 1 , l , r , v);\r\n\tPushup(x); \r\n}\r\n\r\ninline pii query(int x , int l , int r) {\r\n\tif(l <= l(x) && r(x) <= r) {return make_pair(mn(x) , num(x));}\r\n\tint mid = (l(x) + r(x)) >> 1; Pushdown(x);\r\n\tif(l > mid) return query(x << 1 | 1 , l , r); if(r <= mid) return query(x << 1 , l , r);\r\n\tpii L = query(x << 1 , l , r) , R = query(x << 1 | 1 , l , r);\r\n\tint Mn = min(L.first , R.first) , Num = 0; Num = (Mn == L.first) * L.second + (Mn == R.first) * R.second; return make_pair(Mn , Num);\r\n}\r\n\r\nint main () {\r\n\tn = read(); m = read();\r\n\tfor(int i = 1;i <= n;i++) {\r\n\t\tfor(int j = 1;j <= m;j++) a[i][j] = read() , b[a[i][j]] = make_pair(i , j); \r\n\t}\r\n\tint r = 1; build(1 , 1 , n * m); \r\n\tfor(int l = 1;l <= n * m;l++) {\r\n\t\twhile(r <= n * m) {\r\n\t\t\tpii nw = b[r]; bool ok = 1; vis[nw.first][nw.second] = 1; // cout << \"x y \" << nw.first << \" \" << nw.second << '\\n';\r\n\t\t\tfor(int i = 1;i <= 4;i++) {\r\n\t\t\t\tint nx = nw.first + dx[i] , ny = nw.second + dy[i];\r\n\t\t\t\tif(nx < 1 || nx > n || ny < 1 || ny > m || !vis[nx][ny]) continue;\r\n\t\t\t//\tcout << \"lk x y nx ny \" << nw.first << \" \" << nw.second << \" \" << nx << \" \" << ny << endl; \r\n\t\t\t\tbool tmp = link(id(nw.first , nw.second) , id(nx , ny));\r\n\t\t\t\tok = ok & tmp;\r\n\t\t\t}\r\n\t\t//\tcout << \"l r ok \" << l << \" \" << r << \" \" << ok << endl;\r\n\t\t\tif(!ok) {\r\n\t\t\t\tg[l] = r - 1; \r\n\t\t\t\tfor(int i = 1;i <= 4;i++) {\r\n\t\t\t\t\tint nx = nw.first + dx[i] , ny = nw.second + dy[i];\r\n\t\t\t\t\tif(nx < 1 || nx > n || ny < 1 || ny > m || !vis[nx][ny]) continue;\r\n\t\t\t\t//\tcout << \"del x y nx ny \" << nw.first << \" \" << nw.second << \" \" << nx << \" \" << ny << '\\n'; \r\n\t\t\t\t\tcut(id(nw.first , nw.second) , id(nx , ny));\r\n\t\t\t\t}\r\n\t\t\t\tvis[nw.first][nw.second] = 0;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tg[l] = r; r++;\r\n\t\t//\tcout << \"R \" << r << endl;\r\n\t\t}\r\n\t\tif(!g[l] && r > n * m) g[l] = n * m;\r\n\t//\tcout << \"l r \" << l << \" \" << r << '\\n';\r\n\t\tvis[b[l].first][b[l].second] = 0;\r\n\t\tpii nw = b[l]; \r\n\t\tfor(int i = 1;i <= 4;i++) {\r\n\t\t\tint nx = nw.first + dx[i] , ny = nw.second + dy[i];\r\n\t\t\tif(nx < 1 || nx > n || ny < 1 || ny > m) continue; \r\n\t\t\tif(a[nw.first][nw.second] < a[nx][ny]) change(1 , a[nx][ny] , n * m , -1);\r\n\t\t\tif(!vis[nx][ny]) continue;\r\n\t\t//\tcout << \"Nx Ny \" << nx << \" \" << ny << endl;\r\n\t\t//\tcout << \"del l nx ny \" << l << \" \" << nx << \" \" << ny << '\\n'; \r\n\t\t\tcut(id(nw.first , nw.second) , id(nx , ny)); \r\n\t\t}\r\n\t}\r\n//\tfor(int i = 1;i <= n * m;i++) cout << g[i] << \" \"; puts(\"\"); \r\n\tfor(int i = 1;i <= n;i++) {\r\n\t\tfor(int j = 1;j <= m;j++) vis[i][j] = 1;\r\n\t}\r\n//\tcout << \"sth: \" << mn(1) << \" \" << num(1) << '\\n'; \r\n//\tfor(int i = 1;i <= n * m;i++) cout << \"i mx num \" << i << \" \" << query(1 , i , i).first << \" \" << query(1 , i , i).second << '\\n'; \r\n\tfor(int l = 1;l <= n * m;l++) {\r\n\t\tpii nw = b[l]; \r\n\t\tpii Nw = query(1 , l , g[l]); // cout << \"Mx num \" << Nw.first << \" \" << Nw.second << '\\n';\r\n\t\tif(Nw.first == 1) Ans = Ans + Nw.second;\r\n\t\tfor(int i = 1;i <= 4;i++) {\r\n\t\t\tint nx = nw.first + dx[i] , ny = nw.second + dy[i];\r\n\t\t\tif(nx < 1 || nx > n || ny < 1 || ny > m || !vis[nx][ny]) continue;\r\n\t\t\tchange(1 , a[nx][ny] , n * m , 1);\r\n\t\t}\r\n\t\tchange(1 , 1 , n * m , -1); vis[nw.first][nw.second] = 0;\r\n\t}\r\n\tprintf(\"%d\\n\" , Ans);\r\n\treturn 0;\r\n}\r\n"
}