{
    "id": 218414156,
    "contestId": 1769,
    "creationTimeSeconds": 1691802505,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1769,
        "index": "B2",
        "name": "\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 II",
        "type": "PROGRAMMING",
        "rating": 1400,
        "tags": [
            "*special",
            "binary search",
            "brute force",
            "math"
        ]
    },
    "author": {
        "contestId": 1769,
        "members": [
            {
                "handle": "ladamalina"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1670058000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "//#pragma GCC optimize(\"O3\")\r\n//#pragma GCC optimize(\"unroll-loops\")\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std::literals;\r\n\r\nusing ll = long long;\r\nusing ull = unsigned long long;\r\nusing ii [[maybe_unused]] = std::pair<int, int>;\r\nusing vi [[maybe_unused]] = std::vector<int>;\r\nusing vvi [[maybe_unused]] = std::vector<vi>;\r\nusing vvvi [[maybe_unused]] = std::vector<vvi>;\r\nusing vii [[maybe_unused]] = std::vector<ii>;\r\nusing vb [[maybe_unused]] = std::vector<bool>;\r\nusing vd [[maybe_unused]] = std::vector<double>;\r\n\r\n#define FOR(_i, _a, _b) for (int _i = (_a); _i <= (_b); ++(_i))\r\n#define FORD(_i, _a, _b) for (int _i = (_a); _i >= (_b); --(_i))\r\n#define RNG(_l) (_l).begin(), (_l).end()\r\n#define SORT(_l) std::sort((_l).begin(), (_l).end())\r\n#define CI(_v) static_cast<int>(_v)\r\n#define CD(_v) static_cast<double>(_v)\r\n#define F first\r\n#define S second\r\n#define PB push_back\r\n\r\n[[maybe_unused]] const int MAX = std::numeric_limits<int>::max();\r\n[[maybe_unused]] const int MIN = std::numeric_limits<int>::min();\r\n\r\nvoid Solution([[maybe_unused]] std::istream& cin, [[maybe_unused]] std::ostream& cout) {\r\n  int n;\r\n  cin >> n;\r\n  std::vector<ull> a(n);\r\n  std::vector<ull> a_pref(n+1);\r\n  FOR(i, 0, n-1) {\r\n    cin >> a[i];\r\n    a_pref[i+1] = a_pref[i] + a[i];\r\n  }\r\n  auto total_bytes = a_pref[n];\r\n  std::set<int> matches;\r\n  FOR(i, 0, n-1) {\r\n    FOR(j, 0, 99) {\r\n      ull local_bytes_min = std::ceil(CD(a[i]*j)/100);\r\n      ull local_bytes_max = std::floor(CD(a[i]*(j+1))/100);\r\n\r\n      ull global_bytes_min = a_pref[i] + local_bytes_min;\r\n      ull global_bytes_max = a_pref[i] + local_bytes_max;\r\n\r\n      int global_perc_min = std::floor(CD(global_bytes_min)*100/CD(total_bytes));\r\n      int global_perc_max = std::floor(CD(global_bytes_max)*100/CD(total_bytes));\r\n\r\n      if (j >= global_perc_min && j <= global_perc_max) {\r\n        matches.insert(j);\r\n      }\r\n    }\r\n  }\r\n  matches.insert(0);\r\n  matches.insert(100);\r\n  for (auto p : matches) {\r\n    cout << p << '\\n';\r\n  }\r\n}\r\n\r\n[[maybe_unused]] void TestSolution() {\r\n  {\r\n    std::istringstream cin(\"1\\n\"\r\n                           \"6\\n\"s);\r\n    std::ostringstream cout;\r\n    std::string e_cout(\"0\\n\"\r\n                       \"16\\n\"\r\n                       \"33\\n\"\r\n                       \"50\\n\"\r\n                       \"66\\n\"\r\n                       \"83\\n\"\r\n                       \"100\\n\"s);\r\n    auto start_t = std::chrono::high_resolution_clock::now();\r\n    Solution(cin, cout);\r\n    auto end_t = std::chrono::high_resolution_clock::now();\r\n    auto total_t = std::chrono::duration_cast<std::chrono::milliseconds>(end_t - start_t).count();\r\n    std::cerr << total_t << \" ms\"sv << std::endl;\r\n    auto a_cout = cout.str();\r\n    assert(a_cout == e_cout);\r\n  }\r\n  {\r\n    std::istringstream cin(\"2\\n\"\r\n                           \"100 500\\n\"s);\r\n    std::ostringstream cout;\r\n    std::string e_cout(\"0\\n\"\r\n                       \"95\\n\"\r\n                       \"96\\n\"\r\n                       \"97\\n\"\r\n                       \"98\\n\"\r\n                       \"99\\n\"\r\n                       \"100\\n\"s);\r\n    auto start_t = std::chrono::high_resolution_clock::now();\r\n    Solution(cin, cout);\r\n    auto end_t = std::chrono::high_resolution_clock::now();\r\n    auto total_t = std::chrono::duration_cast<std::chrono::milliseconds>(end_t - start_t).count();\r\n    std::cerr << total_t << \" ms\"sv << std::endl;\r\n    auto a_cout = cout.str();\r\n    assert(a_cout == e_cout);\r\n  }\r\n  {\r\n    std::istringstream cin(\"4\\n\"\r\n                           \"10000000000 2 2 9999999998\\n\"s);\r\n    std::ostringstream cout;\r\n    std::string e_cout(\"0\\n\"\r\n                       \"50\\n\"\r\n                       \"99\\n\"\r\n                       \"100\\n\"s);\r\n    auto start_t = std::chrono::high_resolution_clock::now();\r\n    Solution(cin, cout);\r\n    auto end_t = std::chrono::high_resolution_clock::now();\r\n    auto total_t = std::chrono::duration_cast<std::chrono::milliseconds>(end_t - start_t).count();\r\n    std::cerr << total_t << \" ms\"sv << std::endl;\r\n    auto a_cout = cout.str();\r\n    assert(a_cout == e_cout);\r\n  }\r\n  {\r\n    std::istringstream cin(\"6\\n\"\r\n                           \"170 130 400 256 30 100\\n\"s);\r\n    std::ostringstream cout;\r\n    std::string e_cout(\"0\\n\"\r\n                       \"17\\n\"\r\n                       \"43\\n\"\r\n                       \"44\\n\"\r\n                       \"84\\n\"\r\n                       \"90\\n\"\r\n                       \"99\\n\"\r\n                       \"100\\n\"s);\r\n    auto start_t = std::chrono::high_resolution_clock::now();\r\n    Solution(cin, cout);\r\n    auto end_t = std::chrono::high_resolution_clock::now();\r\n    auto total_t = std::chrono::duration_cast<std::chrono::milliseconds>(end_t - start_t).count();\r\n    std::cerr << total_t << \" ms\"sv << std::endl;\r\n    auto a_cout = cout.str();\r\n    assert(a_cout == e_cout);\r\n  }\r\n  {\r\n    std::istringstream cin(\"3\\n\"\r\n                           \"217 62 208\\n\"s);\r\n    std::ostringstream cout;\r\n    std::string e_cout(\"0\\n\"\r\n                       \"50\\n\"\r\n                       \"51\\n\"\r\n                       \"99\\n\"\r\n                       \"100\\n\"s);\r\n    auto start_t = std::chrono::high_resolution_clock::now();\r\n    Solution(cin, cout);\r\n    auto end_t = std::chrono::high_resolution_clock::now();\r\n    auto total_t = std::chrono::duration_cast<std::chrono::milliseconds>(end_t - start_t).count();\r\n    std::cerr << total_t << \" ms\"sv << std::endl;\r\n    auto a_cout = cout.str();\r\n    assert(a_cout == e_cout);\r\n  }\r\n  std::cerr << \"TestSolution OK\"sv << std::endl;\r\n}\r\n\r\nint main() {\r\n  std::ios::sync_with_stdio(false);\r\n  std::cin.tie(nullptr);\r\n  std::cout.tie(nullptr);\r\n//#ifndef NDEBUG\r\n//  TestSolution();\r\n//#endif\r\n  Solution(std::cin, std::cout);\r\n  return 0;\r\n}\r\n"
}