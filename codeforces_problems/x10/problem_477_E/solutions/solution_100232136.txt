{
    "id": 100232136,
    "contestId": 477,
    "creationTimeSeconds": 1606961858,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 477,
        "index": "E",
        "name": "Dreamoon and Notepad",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3100,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 477,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1413122400
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 20,
    "timeConsumedMillis": 951,
    "memoryConsumedBytes": 32563200,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n#define SZ(x)((int)(x).size())\n#define all(x)(x).begin(),(x).end()\n#define loop(i,n)for(int i=0;i<(n);++i)\n#define cont(i,n)for(int i=1;i<=(n);++i)\n#define circ(i,a,b)for(int i=(a);i<=(b);++i)\n#define range(i,a,b,c)for(int i=(a);((c)>0?i<=(b):i>=(b));i+=(c))\n#define foreach(it,v)for(__typeof((v).begin())it=(v).begin();it!=(v).end();++it)\n#define y0 y0O0OO00OO0OO0OO0OOO00OO0OO0O0O000OO0\n#define y1 y1II11II11III11I1III11II111IIII1II1I1\n#define pub push_back\n#define pob pop_back\n#define mak make_pair\ntypedef long long ll;typedef long double lf;const int Inf=0x3f3f3f3f;const ll INF=0x3f3f3f3f3f3f3f3fll;const int qwq=1<<19;int N,Q;int a[qwq];struct Query{int r1,c1,r2,c2,id;Query(int r1,int c1,int r2,int c2,int id):r1(r1),c1(c1),r2(r2),c2(c2),id(id){}bool inline operator<(const Query&a)const{return r2<a.r2;}};struct Segtree{int dt[qwq<<1];void inline init(){memset(dt,Inf,sizeof(dt));}void inline add(int a,int x){a+=qwq;dt[a]=x;while(a>>=1)dt[a]=min(dt[a<<1],dt[a<<1|1]);}int inline get(int l,int r){int res=Inf;for(l+=qwq,r+=qwq+1;l<r;l>>=1,r>>=1){if(l&1)res=min(res,dt[l++]);if(r&1)res=min(res,dt[--r]);}return res;}}sl,sr,qj;vector<Query>q1,q2;int ans[qwq];vector<int>dd;int inline mianx(int a,int l,int r){return max(min(a,r),l);}int inline Ubval(int val){int l=-1,r=SZ(dd);while(r-l>1){int m=(l+r)>>1;if(a[dd[m]]>val)r=m;else l=m;}return r;}int inline Lbpos(int val){return lower_bound(all(dd),val)-dd.begin();}int inline FLbpos(int val){return upper_bound(all(dd),val,greater<int>())-dd.begin();}void inline solve(){int qid=0;sl.init();sr.init();qj.init();cont(i,N)qj.add(i,a[i]);cont(i,N){while(SZ(dd)&&a[dd.back()]>=a[i])dd.pob();sl.add(SZ(dd),a[i]-2*i);sr.add(SZ(dd),-a[i]-2*i);int rp=SZ(dd);dd.pub(i);while(qid<SZ(q1)&&q1[qid].r2==i){int id=q1[qid].id;int r1=q1[qid].r1,c1=q1[qid].c1;int r2=q1[qid].r2,c2=q1[qid].c2;int lp=Lbpos(r1);ans[id]=min(ans[id],r2-r1+c2+1);ans[id]=min(ans[id],r2-r1+abs(min(c1,a[dd[lp]])-c2));int rpos=Ubval(c2),lpos=rpos-1,pos;rpos=mianx(rpos,lp,rp);lpos=mianx(lpos,lp,rp);if(abs(a[dd[lpos]]-c2)<abs(a[dd[rpos]]-c2))pos=lpos;else pos=rpos;ans[id]=min(ans[id],r2-r1+abs(a[dd[pos]]-c2)+1);rpos=Ubval(c2),lpos=rpos-1;rpos=mianx(rpos,0,lp);lpos=mianx(lpos,-1,lp-1);ans[id]=min(ans[id],r2+r1+sr.get(0,lpos)+c2+1);ans[id]=min(ans[id],r2+r1+sl.get(rpos,lp-1)-c2+1);int sp=min(Ubval(min(c1,a[dd[lp]])),lp);rpos=Ubval(c2),lpos=rpos-1;rpos=mianx(rpos,0,sp);lpos=mianx(lpos,-1,sp-1);ans[id]=min(ans[id],r2+r1+sr.get(0,lpos)+c2);ans[id]=min(ans[id],r2+r1+sl.get(rpos,sp-1)-c2);++qid;}}dd.clear();sl.init();sr.init();--qid;range(i,N,1,-1){while(SZ(dd)&&a[dd.back()]>=a[i])dd.pob();sl.add(SZ(dd),a[i]+2*i);sr.add(SZ(dd),-a[i]+2*i);int rp=SZ(dd);dd.pub(i);while(~qid&&q1[qid].r2==i){int id=q1[qid].id;int r1=q1[qid].r1,c1=q1[qid].c1;int r2=q1[qid].r2,c2=q1[qid].c2;int rpos=Ubval(c2),lpos=rpos-1;rpos=mianx(rpos,0,rp+1);lpos=mianx(lpos,-1,rp);ans[id]=min(ans[id],sr.get(0,lpos)+c2-r2-r1+1);ans[id]=min(ans[id],sl.get(rpos,rp)-c2-r2-r1+1);int sp=min(Ubval(min(qj.get(r1,r2),c1)),rp);rpos=Ubval(c2),lpos=rpos-1;rpos=mianx(rpos,0,sp);lpos=mianx(lpos,-1,sp-1);ans[id]=min(ans[id],sr.get(0,lpos)+c2-r2-r1);ans[id]=min(ans[id],sl.get(rpos,sp-1)-c2-r2-r1);--qid;}}}int main(){scanf(\"%d\",&N);cont(i,N)scanf(\"%d\",a+i);scanf(\"%d\",&Q);memset(ans,Inf,sizeof(ans));cont(i,Q){int r1,c1,r2,c2;scanf(\"%d%d%d%d\",&r1,&c1,&r2,&c2);if(r1<=r2)q1.pub(Query(r1,c1,r2,c2,i));else q2.pub(Query(N-r1+1,c1,N-r2+1,c2,i));}sort(all(q1));solve();reverse(a+1,a+N+1);sort(all(q2));q2.swap(q1);solve();cont(i,Q)printf(\"%d\\n\",ans[i]);return 0;}\n\t    \t\t\t \t \t\t\t\t\t\t\t \t        \t\t\t"
}