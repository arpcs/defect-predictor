{
    "id": 233611988,
    "contestId": 1882,
    "creationTimeSeconds": 1700508008,
    "relativeTimeSeconds": 4508,
    "problem": {
        "contestId": 1882,
        "index": "D",
        "name": "Tree XOR",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "bitmasks",
            "dfs and similar",
            "dp",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1882,
        "members": [
            {
                "handle": "Bedoo"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1700503500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 342,
    "memoryConsumedBytes": 26214400,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n#define ll long long\r\n#define ld long double\r\n#define f first\r\n#define s second\r\nconst int N = 3e5+5;\r\nconst int mod = 1e9+7;\r\n\r\nll n , a[N] , sz[N], ans[N] , res[N];\r\nvector<int> adj[N];\r\n\r\nvoid dfs(int node , int par)\r\n{\r\n    sz[node] = 1;\r\n    for(auto ch : adj[node])\r\n    {\r\n        if (ch == par) continue;\r\n        dfs(ch , node);\r\n        sz[node] += sz[ch];\r\n        ans[node] += ans[ch] + (a[ch]^a[node]) * sz[ch];\r\n    }\r\n}\r\n\r\nvoid sheel(int node , int par)\r\n{\r\n    ans[par] -= ans[node] + (a[node]^a[par]) * sz[node];\r\n    sz[par] -= sz[node];\r\n\r\n    ans[node] += ans[par] + (a[par]^a[node]) * sz[par];\r\n    sz[node] += sz[par];\r\n}\r\n\r\nvoid erg3(int node , int par)\r\n{\r\n    ans[node] -= ans[par] + (a[par]^a[node]) * sz[par];\r\n    sz[node] -= sz[par];\r\n\r\n    ans[par] += ans[node] + (a[node]^a[par]) * sz[node];\r\n    sz[par] += sz[node];\r\n}\r\n\r\nvoid solve(int node , int par)\r\n{\r\n    if (node != par)\r\n        sheel(node , par);\r\n\r\n    res[node] = ans[node];\r\n    for(auto ch : adj[node])\r\n    {\r\n        if (ch == par) continue;\r\n        solve(ch , node);\r\n    }\r\n\r\n    if (node != par)\r\n        erg3(node, par);\r\n}\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n\r\n    int t;\r\n    cin >> t;\r\n    while(t--)\r\n    {\r\n        cin >> n;\r\n\r\n        for(int i=1; i<=n; i++)\r\n            cin >> a[i];\r\n\r\n        for(int i=1; i<n; i++)\r\n        {\r\n            int x , y;\r\n            cin >> x >> y;\r\n            adj[x].push_back(y) , adj[y].push_back(x);\r\n        }\r\n\r\n        dfs(1, 1);\r\n        solve(1, 1);\r\n\r\n        for(int i=1; i<=n; i++)\r\n            cout << res[i] << ' ';\r\n        cout << \"\\n\";\r\n\r\n        for(int i=0; i<=n; i++)\r\n        {\r\n            ans[i] = res[i] = sz[i] = 0;\r\n            adj[i].clear();\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}