{
    "id": 234001142,
    "contestId": 1882,
    "creationTimeSeconds": 1700808188,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1882,
        "index": "D",
        "name": "Tree XOR",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "bitmasks",
            "dfs and similar",
            "dp",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1882,
        "members": [
            {
                "handle": "wjwzbdx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1695652500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 40857600,
    "source": "#include <bits/stdc++.h>\r\n#define dug(x) cerr << \"\u6b7b\u4e86\u5427\u5c0f\u4e11\" << x << endl\r\n#define fir(a, b, c) for (int a = b; a < c; a++)\r\nusing namespace std;\r\nusing i64 = long long;\r\nusing two = array<int, 2>;\r\ntemplate <class T> bool chmax(T &a, T b)\r\n{\r\n    a > b ? (a = a) : (a = b);\r\n    return a == b;\r\n}\r\ntemplate <class T> bool chmin(T &a, T b)\r\n{\r\n    a > b ? (a = b) : (a = a);\r\n    return a == b;\r\n}\r\nvoid solve()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    vector<vector<int>> edge(n);\r\n    vector<int> w(n);\r\n    fir(i, 0, n) cin >> w[i];\r\n    for (int i = 1; i < n; i++)\r\n    {\r\n        int a, b;\r\n        cin >> a >> b;\r\n        a--, b--;\r\n        edge[a].push_back(b);\r\n        edge[b].push_back(a);\r\n    }\r\n    vector<i64> ans(n);\r\n    vector<i64> siz(n, 1);\r\n    function<void(int, int)> dfs = [&](int u, int fa) {\r\n        for (auto c : edge[u])\r\n        {\r\n            if (c == fa)\r\n                continue;\r\n            dfs(c, u);\r\n            siz[u] += siz[c];\r\n            ans[0] += siz[c] * (w[u] ^ w[c]);\r\n        }\r\n    };\r\n    dfs(0, -1);\r\n    //cout << ans[0] << endl;\r\n    function<void(int, int, i64)> dfs1 = [&](int u, int fa, i64 tem) {\r\n        ans[u] = tem;\r\n        for (auto c : edge[u])\r\n        {\r\n            if (c == fa)\r\n                continue;\r\n            dfs1(c, u, tem - siz[c] * (w[u] ^ w[c]) + (n - siz[c]) * (w[u] ^ w[c]));\r\n        }\r\n    };\r\n    dfs1(0, -1, ans[0]);\r\n    for (auto c : ans)\r\n        cout << c << \" \";\r\n    cout << endl;\r\n}\r\nsigned main()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout << setprecision(15) << fixed;\r\n    int t;\r\n    cin >> t;\r\n    while (t--)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}