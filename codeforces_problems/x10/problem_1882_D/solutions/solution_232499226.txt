{
    "id": 232499226,
    "contestId": 1882,
    "creationTimeSeconds": 1699790042,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1882,
        "index": "D",
        "name": "Tree XOR",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "bitmasks",
            "dfs and similar",
            "dp",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1882,
        "members": [
            {
                "handle": "dominique38"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1695652500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<iostream>\r\n#include<vector>\r\n#include<functional>\r\n#include<algorithm>\r\n#include<set>\r\n#include<iomanip>\r\n#include<cassert>\r\n#include\"debug.h\"\r\n#include<queue>\r\nusing namespace std;\r\nusing int64 = long long;\r\n\r\nvoid solve(){\r\n    int n;  cin>>n;\r\n    vector<int> a(n);   for(int&x:a)cin>>x;\r\n    vector<vector<int>> tree(n);\r\n    for(int i=0;i<n-1;i++){\r\n        int u,v;    cin>>u>>v;  --u;    --v;\r\n        tree[u].push_back(v);\r\n        tree[v].push_back(u);\r\n    }\r\n\r\n    // ------- setup --------\r\n    vector<int> sz(n,0),scr(n,0);\r\n    function<void(int,int)> dfs = [&](int par,int child)->void{\r\n        sz[child]=1;\r\n        for(int kid:tree[child])if(kid!=par){\r\n            dfs(child,kid);\r\n            sz[child]+=sz[kid];\r\n            scr[child]+=scr[kid] + sz[kid] * (a[child]^a[kid]);\r\n        }\r\n        // scr[child] += sz[child] * (a[child]^(par==-1 ? a[child] : a[par]));\r\n        // debug(child,scr[child],sz[child]);cout<<endl;\r\n    };\r\n    dfs(-1,0);\r\n    // for(int x:scr)debug(x);\r\n    //     cout<<endl;\r\n    // ------- solve -------\r\n    vector<int> ans(n,0);\r\n    ans[0]=scr[0];\r\n    function<void(int,int)> dfs2 = [&](int par,int child)->void{\r\n        // debug(child,ans[child],\"a\");cout<<endl;\r\n        for(int kid:tree[child])if(kid!=par){\r\n            // int sznow = sz[child] + sztop;\r\n            ans[kid] = (n-sz[kid]) * (a[kid]^a[child]) + ans[child]-sz[kid] * (a[child]^a[kid]);\r\n            dfs2(child,kid);\r\n        }\r\n    };\r\n    dfs2(-1,0);\r\n    for(int x:ans)cout<<x<<\" \";\r\n    cout<<\"\\n\";\r\n}\r\n\r\n\r\nint main(){\r\n\r\n    int tt; cin>>tt;\r\n    while(tt--)solve();\r\n\r\n    return 0;\r\n}"
}