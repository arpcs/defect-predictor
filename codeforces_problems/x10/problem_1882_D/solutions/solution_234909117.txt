{
    "id": 234909117,
    "contestId": 1882,
    "creationTimeSeconds": 1701252804,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1882,
        "index": "D",
        "name": "Tree XOR",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "bitmasks",
            "dfs and similar",
            "dp",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1882,
        "members": [
            {
                "handle": "fsjhhh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1695652500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 12492800,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <vector>\r\n#include <map>\r\n#include <unordered_map>\r\n#include <set>\r\n#include <unordered_set>\r\n#include <queue>\r\n#include <deque>\r\n#include <iomanip> // std::fixed std::setprecision(x) \u4fdd\u7559x\u4f4d\u5c0f\u6570\r\n#include <array>\r\n#include <bitset>\r\n#include <functional>\r\n#include <ranges>\r\n//#include <bits/stdc++.h>\r\n//priority_queue \u4f18\u5148\u961f\u5217\r\n#define IOS                           \\\r\n    std::ios::sync_with_stdio(false); \\\r\n    std::cin.tie(0);                  \\\r\n    std::cout.tie(0);\r\n\r\ntypedef long long LL;\r\ntypedef __int128 i128;\r\ntypedef std::pair<int, int> PII;\r\ntypedef std::pair<LL, LL> PLL;\r\nconst int INF = 0x3f3f3f3f;\r\nconst LL INFL = 0x3f3f3f3f3f3f3f3f;\r\n\r\nvoid solve() {\r\n    int n;\r\n    std::cin >> n;\r\n    std::vector<int> a(n);\r\n    for (int i = 0; i < n; i++) {\r\n        std::cin >> a[i];\r\n    }\r\n\r\n    std::vector<std::vector<int>> edges(n);\r\n    for (int i = 0; i < n - 1; i++) {\r\n        int u, v;\r\n        std::cin >> u >> v;\r\n        u -- ;\r\n        v -- ;\r\n        edges[u].push_back(v);\r\n        edges[v].push_back(u);\r\n    }\r\n\r\n    std::vector<int> siz(n);\r\n    std::vector<LL> ans(n);\r\n    auto dfs_1 = [&](auto self, int u, int fa) -> void {\r\n        siz[u] = 1;\r\n        for (auto v : edges[u]) {\r\n            if (v == fa) {\r\n                continue;\r\n            }\r\n            self(self, v, u);\r\n            siz[u] += siz[v];\r\n            ans[0] += (a[u] ^ a[v]) * (siz[v]); \r\n        }\r\n    };\r\n\r\n    dfs_1(dfs_1, 0, -1);\r\n\r\n    auto dfs_2 = [&](auto self, int u, int fa) -> void {\r\n        for (auto v : edges[u]) {\r\n            if (v == fa) {\r\n                continue;\r\n            }\r\n            ans[v] = ans[u] - siz[v] * (a[u] ^ a[v]) + (n - siz[v]) * (a[u] ^ a[v]);\r\n            self(self, v, u);\r\n        }\r\n    };\r\n\r\n    dfs_2(dfs_2, 0, -1);\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        std::cout << ans[i] << \" \\n\"[i == n - 1];\r\n    }\r\n\r\n}\r\n\r\nint main() {\r\n    IOS;\r\n    int t = 1;\r\n    std::cin >> t;\r\n    while (t -- )\r\n        solve();\r\n    return 0;\r\n}\r\n"
}