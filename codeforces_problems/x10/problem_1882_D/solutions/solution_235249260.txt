{
    "id": 235249260,
    "contestId": 1882,
    "creationTimeSeconds": 1701446250,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1882,
        "index": "D",
        "name": "Tree XOR",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "bitmasks",
            "dfs and similar",
            "dp",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1882,
        "members": [
            {
                "handle": "susut"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1695652500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 14848000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nusing ll = long long;\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    int t;\r\n    cin >> t;\r\n    while (t--){\r\n        int n, u, v;\r\n        cin >> n;\r\n        vector<int> a(n + 1);\r\n        for (int i = 1; i <= n; i++) cin >> a[i];\r\n        vector<vector<int>> g(n + 1);\r\n        for (int i = 1; i < n; i++){\r\n            cin >> u >> v;\r\n            g[u].push_back(v);\r\n            g[v].push_back(u);\r\n        }\r\n        vector<int> p(n + 1), q;\r\n        vector<bool> vis(n + 1);\r\n        q.push_back(1);\r\n        vis[1] = true;\r\n        int j = 0;\r\n        while (j < q.size()){\r\n            u = q[j++];\r\n            for (auto& v: g[u]){\r\n                if (vis[v]) continue;\r\n                vis[v] = true;\r\n                q.push_back(v);\r\n                p[v] = u;\r\n            }\r\n        }\r\n        vector<int> sz(n + 1, 1);\r\n        vector<ll> ans(n + 1);\r\n        for (int i = n - 1; i > 0; i--){\r\n            v = q[i], u = p[v];\r\n            sz[u] += sz[v];\r\n            ans[1] += 1LL * (a[u] ^ a[v]) * sz[v];\r\n        }\r\n        for (int i = 1; i < n; i++){\r\n            v = q[i], u = p[v];\r\n            ans[v] = ans[u] - 1LL * (a[u] ^ a[v]) * (sz[v] * 2 - n);\r\n        }\r\n        for (int i = 1; i <= n; i++) cout << ans[i] << \" \";\r\n        cout << endl;\r\n    }\r\n}"
}