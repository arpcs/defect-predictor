{
    "id": 236416419,
    "contestId": 1882,
    "creationTimeSeconds": 1702064333,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1882,
        "index": "D",
        "name": "Tree XOR",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "bitmasks",
            "dfs and similar",
            "dp",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1882,
        "members": [
            {
                "handle": "Ghassane"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1695652500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 295,
    "memoryConsumedBytes": 46489600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#pragma GCC optimize(\"O3,unroll-loops\")\r\n#define sim template < class c\r\n#define ris return * this\r\n#define dor > debug & operator <<\r\n#define eni(x) sim > typename \\\r\n  enable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\r\nsim > struct rge { c b, e; };\r\nsim > rge<c> range(c i, c j) { return rge<c> {i, j}; }\r\nsim > auto dud(c* x) -> decltype(cerr << *x, 0);\r\nsim > char dud(...);\r\nstruct debug {\r\n#ifdef LOCAL\r\n    ~debug() { cerr << endl; }\r\n    eni( != ) cerr << boolalpha << i; ris;\r\n}\r\neni( == ) ris << range(begin(i), end(i));\r\n}\r\nsim, class b dor(pair < b, c > d) {\r\n    ris << \"(\" << d.first << \", \" << d.second << \")\";\r\n}\r\nsim dor(rge<c> d) {\r\n    *this << \"[\";\r\n    for (auto it = d.b; it != d.e; ++it)\r\n        *this << \", \" + 2 * (it == d.b) << *it;\r\n    ris << \"]\";\r\n}\r\n#else\r\n    sim dor(const c&) { ris; }\r\n#endif\r\n};\r\n#define imie(...) \"[\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\r\n///////////////////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////\r\n///////////////////////////////////////////////////////////////////////////\r\n#define int long long\r\nvoid test_case(){\r\n    int n;\r\n    cin >> n;\r\n    vector<int> a(n + 1);\r\n    vector<int> sz(n + 1), dp(n + 1), ans(n + 1);\r\n    vector<vector<int>> adj(n + 1);\r\n    for(int i = 1; i <= n; i++){\r\n        cin >> a[i];\r\n    }\r\n    for(int i = 0; i < n - 1; i++){\r\n        int u, v;\r\n        cin >> u >> v;\r\n        adj[u].push_back(v);\r\n        adj[v].push_back(u);\r\n    }\r\n    function<void(int, int)> getSizes = [&](int v, int par){\r\n        sz[v] = 1;\r\n        for(auto it : adj[v]){\r\n            if(it == par)continue;\r\n            getSizes(it, v);\r\n            sz[v] += sz[it];\r\n        }\r\n    };\r\n    getSizes(1, -1);\r\n    function<void(int, int)> getDp = [&](int v, int par){\r\n        for(auto it: adj[v]){\r\n            if(it == par)continue;\r\n            getDp(it, v);\r\n            dp[it] += (sz[it] * (a[v] ^ a[it]));\r\n            dp[v] += dp[it];\r\n        }\r\n    };\r\n    getDp(1, -1);\r\n    for(int i = 1; i <= n; i++){\r\n        ans[i] = dp[i];\r\n    }\r\n    debug() << imie(dp) imie(sz);\r\n    function<void(int, int)> dfs = [&](int v, int par){\r\n         for(auto it : adj[v]){\r\n            if(it == par)continue;\r\n            ans[it] += ans[v] - dp[it] - (a[v] ^ a[it]) * sz[it] + (n - sz[it]) * (a[v] ^ a[it]);\r\n            dfs(it, v);\r\n         }\r\n    };\r\n    dfs(1, -1);\r\n    for(int i = 1; i <= n; i++){\r\n        cout << ans[i] << \" \";\r\n    }\r\n    cout << '\\n';\r\n}\r\nint32_t main() {\r\n ios::sync_with_stdio(false);\r\n cin.tie(0);\r\n int t;\r\n cin >> t;\r\n while(t--){\r\n    test_case();\r\n } \r\n}\r\n"
}