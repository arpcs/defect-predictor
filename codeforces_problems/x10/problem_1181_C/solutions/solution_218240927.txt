{
    "id": 218240927,
    "contestId": 1181,
    "creationTimeSeconds": 1691722743,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1181,
        "index": "C",
        "name": "Flag",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1900,
        "tags": [
            "brute force",
            "combinatorics",
            "dp",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1181,
        "members": [
            {
                "handle": "Antonn_114"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560677700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 32256000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int NM = 2e3+5;\r\nlong long choose[NM][NM];\r\nint main() {\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(0);\r\n\tcout.tie(0);\r\n    memset(choose, 0, sizeof choose);\r\n    for (int i = 0; i < NM; i++){\r\n        choose[i][0] = 1;\r\n    }\r\n    for (int i = 1; i < NM; i++){\r\n        for (int j = 1; j <= min(10, i); j++){\r\n            choose[i][j] = choose[i - 1][j] + choose[i - 1][j - 1];\r\n        }\r\n    }\r\n    int n, m;\r\n    cin >> n >> m;\r\n    vector<vector<char>> a(n, vector<char>(m));\r\n    for (auto& i : a) for (auto& j : i) cin >> j;\r\n    vector<vector<int>> dp1(n, vector<int>(m));\r\n    for (int i = 0; i < m; i++){\r\n        dp1[0][i] = 1;\r\n    }\r\n    for (int i = 1; i < n; i++){\r\n        for (int j = 0; j < m; j++){\r\n            if (a[i][j] == a[i - 1][j]) dp1[i][j] = dp1[i - 1][j] + 1;\r\n            else dp1[i][j] = 1;\r\n        }\r\n    }\r\n    auto check = [&](int x, int y){\r\n        if (x - dp1[x][y]*2 < 0) return false;\r\n        return (dp1[x][y] == dp1[x - dp1[x][y]][y] && dp1[x][y] == dp1[x - dp1[x][y]*2][y]);\r\n    };\r\n    long long res = 0;\r\n    for (int i = 0; i < n; i++){\r\n        int cnt = 0;\r\n        int x = -1;\r\n        for (int j = 0; j < m; j++){\r\n            bool ok = check(i, j);\r\n            if (!ok || (ok && dp1[i][j] != x)){\r\n                res += choose[cnt + 1][2];\r\n                cnt = ok;\r\n            }else{\r\n                cnt++;\r\n            }\r\n            x = dp1[i][j];\r\n            if (j == m - 1){\r\n                res += choose[cnt + 1][2];\r\n            }\r\n        }\r\n    }\r\n    cout << res << endl;\r\n\treturn 0;\r\n}\r\n"
}