{
    "id": 209567514,
    "contestId": 1181,
    "creationTimeSeconds": 1686661688,
    "relativeTimeSeconds": 4088,
    "problem": {
        "contestId": 1181,
        "index": "C",
        "name": "Flag",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1900,
        "tags": [
            "brute force",
            "combinatorics",
            "dp",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1181,
        "members": [
            {
                "handle": "sushmanth.dampur8780"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1686657600
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 23,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 10956800,
    "source": "#author: sushmanth\r\n\r\nfrom sys import stdin\r\ninput = stdin.readline\r\n\r\ninp = lambda : list(map(int,input().split()))\r\n\r\n\"\"\"\r\nfix the middle value\r\n\"\"\"\r\n\r\ndef answer():\r\n\r\n    ans , colval = 0 , [0 for i in range(n)]\r\n    for j in range(m):\r\n\r\n        pref , prev = [0] , '?' \r\n        for i in range(n):\r\n            if(prev != a[i][j]):\r\n                pref.append(1)\r\n            else:\r\n                pref.append(pref[-1] + 1)\r\n\r\n            prev = a[i][j]\r\n\r\n\r\n        endpoint = n\r\n        suf , prev = [0 for i in range(n + 1)] , '?'\r\n        for i in range(n - 1 , -1 , -1):\r\n            \r\n            if(prev != a[i][j]):\r\n\r\n                if(prev != '?'):\r\n\r\n                    mul = 0\r\n                    if(j != 0 and endpoint != n):\r\n                        if((a[i][j - 1] == a[i][j]) and (a[i + 1][j - 1] == a[i + 1][j]) and (a[endpoint][j - 1] == a[endpoint][j])):\r\n                            if(prev_suf[i + 1] == suf[i + 1]):\r\n                                mul = colval[i + 1]\r\n                                colval[i + 1] += 1\r\n                            else:\r\n                                colval[i + 1] = 1\r\n\r\n                        else:\r\n                            colval[i + 1] = 1\r\n\r\n                    else:\r\n                        colval[i + 1] = 1\r\n\r\n                        \r\n                    middle = suf[i + 1]\r\n                    top = pref[i + 1]\r\n                    bottom = suf[endpoint]\r\n                    if(top >= middle and bottom >= middle):\r\n                        ans += (mul + 1)\r\n                    else:\r\n                        colval[i + 1] = 0\r\n\r\n                    \r\n                suf[i] = 1\r\n                endpoint = i + 1\r\n            else:\r\n                suf[i] += suf[i + 1] + 1\r\n                \r\n            prev = a[i][j]\r\n\r\n\r\n        prev_suf = suf[:]\r\n\r\n    \r\n    return ans\r\n        \r\n\r\nfor T in range(1):\r\n\r\n    n , m = inp()\r\n    a = [input().strip() for i in range(n)]\r\n    \r\n    print(answer())\r\n    \r\n    \r\n"
}