{
    "id": 200472755,
    "contestId": 1202,
    "creationTimeSeconds": 1680463579,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1202,
        "index": "A",
        "name": "You Are Given Two Binary Strings...",
        "type": "PROGRAMMING",
        "rating": 1100,
        "tags": [
            "bitmasks",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1202,
        "members": [
            {
                "handle": "itsaryanpatil"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1565188500
    },
    "programmingLanguage": "MS C++ 2017",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\nstring rev(string s){\r\n    string s2 = \"\";\r\n    for (int i = s.length()-1; i >= 0; i--){\r\n        s2 += s[i];\r\n    }\r\n    return s2;\r\n}\r\n\r\nstring decToBin(int n){\r\n    string s = \"\";\r\n    while(n > 1){\r\n        s += (n%2 + 48);\r\n        n /= 2;\r\n    }\r\n    s += (n + 48);\r\n    return rev(s);\r\n}\r\n\r\nint binToDec(string s){\r\n    int n = 0;\r\n    for (int i = 0; i < s.length(); i++){\r\n        n += (s[i] - 48)*pow(2,s.length()-i-1);\r\n    }\r\n    return n;\r\n}\r\n\r\nstring genRevSk(string x, string y, int k){\r\n    int nx = binToDec(x);\r\n    int ny = binToDec(y);\r\n    int n = nx + ny * pow(2,k);\r\n    return rev(decToBin(n));\r\n}\r\n\r\nbool lexLess(string s1, string s2){\r\n    int min = s1.length() < s2.length() ? s1.length():s2.length();\r\n    for (int i = 0; i < min; i++){\r\n        //cout << s1[i] << \"  \" << s2[i] << endl;\r\n        if (s1[i] == '0' && s2[i] == '1'){\r\n            return true;\r\n        }\r\n        if (s2[i] == '1' && s2[i] == '0'){\r\n            return false;\r\n        }\r\n\r\n    }\r\n    if (s1.length() < s2.length()){\r\n        return true;\r\n    }\r\n    else{\r\n        return false;\r\n    }\r\n}\r\n\r\nint getK(string x, string y){\r\n    int min = 0;\r\n    string lex[1000];\r\n    for (int i = 0; i < 1000; i++){\r\n        lex[i] = genRevSk(x,y,i);\r\n    }\r\n    string m = genRevSk(x,y,0);\r\n    for (int i = 1; i < 1000; i++){\r\n        //cout << lex[i] << \"  \" << m << endl;\r\n        if (lex[i] < m) {\r\n            m = lex[i];\r\n            min = i;\r\n        }\r\n    }\r\n    return min;\r\n    /*int k = 0;\r\n    while(true){\r\n        if(genRevSk(x,y,k)[0] == '0'){\r\n            return k;\r\n        }\r\n        k++;\r\n    }*/\r\n}\r\n\r\nint main() {\r\n    int t;\r\n    cin >> t;\r\n    string x;\r\n    string y;\r\n    for (int i = 0; i < t; i++){\r\n        cin >> x;\r\n        cin >> y;\r\n        cout << getK(x,y) << endl;\r\n    }\r\n    //cout << genRevSk(\"10001\",\"110\",1);\r\n    //cout << binToDec(\"1010\");\r\n    //cout << getK(\"10001\",\"110\");\r\n    return 0;\r\n}\r\n\r\n/*4\r\n1010\r\n11\r\n10001\r\n110\r\n1\r\n1\r\n1010101010101\r\n11110000\r\n*/\r\n\r\n"
}