{
    "id": 219904464,
    "contestId": 896,
    "creationTimeSeconds": 1692703833,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 896,
        "index": "B",
        "name": "Ithea Plays With Chtholly",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "constructive algorithms",
            "games",
            "greedy",
            "interactive"
        ]
    },
    "author": {
        "contestId": 896,
        "members": [
            {
                "handle": "riariti"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1512223500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\n#ifdef local\r\n#include \"../local.hpp\"\r\n#else\r\n#define dbg(...)\r\n#endif\r\n\r\nusing i64 = long long;\r\n\r\nvoid solve() {\r\n    int n, m, c;\r\n    std::cin >> n >> m >> c;\r\n\r\n    std::vector<int> a(n, n);\r\n    int l = 0, r = n - 1;\r\n    for (std::size_t tc = 1; tc <= m; tc++) {\r\n        int p;\r\n        std::cin >> p;\r\n\r\n        int ans = -1;\r\n\r\n        if (p <= c / 2) {\r\n            if (l == 0 || p >= a[l - 1]) {\r\n                ans = l;\r\n                a[l] = p;\r\n                l++;\r\n            } else {\r\n                // auto it = std::upper_bound(a.begin(), a.end(), p);\r\n                // int nl = std::distance(a.begin(), it);\r\n                int nl = 0;\r\n                while (a[nl] <= p) {\r\n                    nl++;\r\n                }\r\n\r\n                a[nl] = p;\r\n                ans = nl + 1;\r\n            }\r\n\r\n            goto print;\r\n        }\r\n\r\n        if (r == n - 1 || p <= a[r + 1]) {\r\n            ans = r;\r\n            r--;\r\n            a[r] = p;\r\n        } else {\r\n            // auto it = std::upper_bound(a.rbegin(), a.rend(), p);\r\n            // int nr = std::distance(a.rbegin(), it);\r\n            int nr = n - 1;\r\n            while (a[nr] >= p) {\r\n                nr--;\r\n            }\r\n\r\n            a[nr] = p;\r\n            ans = nr + 1;\r\n        }\r\n\r\n    print:\r\n        std::cout << ans << std::endl;\r\n    }\r\n}\r\n\r\nint32_t main() {\r\n    std::ios::sync_with_stdio(0);\r\n    std::cin.tie(nullptr), std::cout.tie(nullptr);\r\n\r\n    int tc = 1;\r\n\r\n    for (int t = 1; t <= tc; t++) {\r\n        dbg(\"Case: #\", t);\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n}"
}