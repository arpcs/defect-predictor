{
    "id": 220060732,
    "contestId": 265,
    "creationTimeSeconds": 1692809705,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 265,
        "index": "B",
        "name": "Roadside Trees (Simplified Edition)",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1000,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 265,
        "members": [
            {
                "handle": "Capt_Farvez"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1358686800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 102400,
    "source": "/* Bismillahir Rahmanir Raheem */\r\n#include <bits/stdc++.h>\r\n#include <iomanip>\r\n#include <cmath>\r\n#define readFirst() (ios_base::sync_with_stdio(false), cin.tie(NULL));\r\n#define ll long long int\r\n#define vll vector<long long int>\r\n#define mll map<long long int, long long int>\r\n#define pb push_back\r\n#define pp pop_back\r\n#define gcd(x, y) __gcd(x, y)\r\n#define lcm(x, y) (x/gcd(x,y))*y\r\n#define pi M_PI\r\n#define YES cout << \"YES\\n\"\r\n#define NO cout << \"NO\\n\"\r\n#define Yes cout << \"Yes\\n\"\r\n#define No cout << \"No\\n\"\r\n#define lpi(strt,en) for(ll i=strt; i<en; i++)\r\n#define lpj(strt,en) for(ll j=strt; j<en; j++)\r\nusing namespace std;\r\nconst int INF = 1e9;\r\n\r\nbool is_prime(ll n){\r\n    if (n <= 1)\r\n        return false;\r\n    for (ll i = 2; i <= sqrt(n); i++){\r\n        if (n % i == 0)\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nll digits_sum(ll n){\r\n    ll sum = 0;\r\n    while (n){\r\n        sum += (n % 10);\r\n        n /= 10;\r\n    }\r\n    return sum;\r\n}\r\nbool isPalindrome(ll number) {\r\n    ll originalNumber = number, reversedNumber = 0;\r\n    while (number > 0) {\r\n        ll digit = number % 10;\r\n        reversedNumber = reversedNumber * 10 + digit;\r\n        number /= 10;\r\n    }\r\n    return (originalNumber == reversedNumber);\r\n}\r\n\r\nbool stringIsPalindrome(string s){\r\n    ll sz = s.size();\r\n    for(ll i = 0; i < sz/2; i++) {\r\n        if(s[i] != s[sz-i-1]){\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nvll prime_numbers;\r\nvoid sieve(ll n){\r\n    prime_numbers.resize(n + 1, true);\r\n    prime_numbers[0] = prime_numbers[1] = false;\r\n    for(ll i=2; i <= sqrt(n); i++){\r\n        if (prime_numbers[i]) {\r\n            for(ll j=i*i; j<=n; j+=i) {\r\n                prime_numbers[j] = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/*************************** START ***************************/\r\nvoid solve(){\r\n    ll n;\r\n    cin>>n;\r\n\r\n    ll arr[n];\r\n \r\n    ll sum=n;\r\n    for(ll i=0; i<n; i++){\r\n        cin>>arr[i];\r\n        //sum+= arr[i];\r\n    }\r\n \r\n    ll curPos=0;\r\n \r\n    for(ll i=0 ; i<n ; i++){\r\n        if(curPos>arr[i]){\r\n            sum += min(curPos,arr[i]);\r\n            sum++;\r\n            curPos = min(curPos,arr[i]);\r\n        }\r\n        else if(curPos<arr[i]){\r\n            sum += (arr[i]-curPos);\r\n            curPos = arr[i];\r\n            if(i!=0){\r\n                sum++;\r\n            }\r\n        }\r\n        else{\r\n            sum++ ;\r\n        }\r\n    }\r\n    cout<<sum<<endl ;\r\n}\r\n\r\nint main(){   \r\n    readFirst();\r\n    ll tCases = 1;\r\n    //cin >> tCases;\r\n    //cin.ignore();\r\n    ll cnt=1;\r\n    while (tCases--){\r\n        solve();\r\n        //cout<<cnt<<endl;\r\n        cnt++;\r\n\r\n    }\r\n    return 0;\r\n}"
}