{
    "id": 216968742,
    "contestId": 538,
    "creationTimeSeconds": 1691057479,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 538,
        "index": "H",
        "name": "Summer Dichotomy",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3200,
        "tags": [
            "2-sat",
            "data structures",
            "dfs and similar",
            "greedy"
        ]
    },
    "author": {
        "contestId": 538,
        "members": [
            {
                "handle": "xkcdjerry"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1430064000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 53,
    "timeConsumedMillis": 327,
    "memoryConsumedBytes": 7884800,
    "source": "// LUOGU_RID: 118839422\n#include <cstdio>\n#include <algorithm>\n#include <vector>\n#define N 100010\nusing std::vector;\nint tl, tr, n, m;\nint l[N], r[N], n1, n2;\nint col[N], ok;\nvector<int> e[N];\nbool flag;\n//\u9ed1\u767d\u67d3\u8272\nvoid dfs(int x)\n{\n\tfor(auto i:e[x])\n\t{\n\t\tif(col[i]==col[x]) flag=true;\n\t\tif(!col[i]) col[i]=-col[x],dfs(i);\n\t}\n}\n\nint main()\n{\n\tscanf(\"%d%d%d%d\",&tl,&tr,&n,&m);\n\t//\u627e\u6240\u6709\u533a\u95f4\u7684\u4ea4\n\tn1=1e9,n2=0;\n\tfor(int i=1;i<=n;i++)\n\t{\n\t\tscanf(\"%d%d\",l+i,r+i);\n\t\tif(r[i]<n1) n1=r[i];\n\t\tif(l[i]>n2) n2=l[i];\n\t}\n\t//\u8c03\u6574\u4f7f\u5f97\u80fd\u591f\u51d1\u51fa[tl,tr]\n\tif(n1+n2<tl) n2=tl-n1;\n\tif(n1+n2>tr) n1=tr-n2;\n\t//\u81f3\u5c11\u6709\u4e00\u4e2a\u8001\u5e08\u7684\u8981\u6c42\u4f7f\u5f97\u53e6\u4e00\u7ec4\u5185\u7684\u8001\u5e08\u65e0\u6cd5\u6ee1\u8db3\n\tif(n1<0||n2<0) return puts(\"IMPOSSIBLE\"), 0;\n\tfor (int i = 1; i <= n; ++i)\n\t{\n\t\t//\u901a\u8fc7\u548c\u54ea\u8fb9\u77db\u76fe\u5224\u65ad\u5f80\u54ea\u8fb9\u5206\n\t\tint p1= l[i]<=n1&&n1<=r[i];\n\t\tint p2= l[i]<=n2&&n2<=r[i];\n\t\tif (!p1&&!p2) return puts(\"IMPOSSIBLE\"), 0;\n\t\tif (!p2) col[i]=1;\n\t\tif (!p1) col[i]=-1;\n\t}\n\tfor(int i=0,u,v;i<m;i++)\n\t{\n\t\tscanf(\"%d%d\",&u,&v);\n\t\te[u].push_back(v);\n\t\te[v].push_back(u);\n\t}\n\tfor(int i=1;i<=n;i++) if(col[i]) dfs(i); //\u5148\u6ee1\u8db3\u6307\u5b9a\u7684\n\tfor(int i=1;i<=n;i++) if(!col[i]) col[i]=1,dfs(i); //\u7136\u540e\u968f\u4fbf\u5f04\n\n\tif(flag) return puts(\"IMPOSSIBLE\"),0;\n\tputs(\"POSSIBLE\");\n\tprintf(\"%d %d\\n\",n1,n2);\n\tfor(int i=1;i<=n;i++) printf(\"%d\", (3-col[i])/2);\n\tputs(\"\");\n}"
}