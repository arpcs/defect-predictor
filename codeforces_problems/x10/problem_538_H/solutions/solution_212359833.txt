{
    "id": 212359833,
    "contestId": 538,
    "creationTimeSeconds": 1688648404,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 538,
        "index": "H",
        "name": "Summer Dichotomy",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3200,
        "tags": [
            "2-sat",
            "data structures",
            "dfs and similar",
            "greedy"
        ]
    },
    "author": {
        "contestId": 538,
        "members": [
            {
                "handle": "YunQian"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1430064000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 98201600,
    "source": "#include<bits/stdc++.h>\r\n\r\n#define ll long long\r\n\r\nusing namespace std;\r\n\r\ninline int read(){\r\n\t#ifndef ONLINE_JUDGE\r\n\t\tint ccc;cin>>ccc;return ccc;\r\n\t#endif\r\n\tint x=0,f=1;char c=getchar();\r\n\tfor(;(c<'0'||c>'9');c=getchar()){if(c=='-')f=-1;}\r\n\tfor(;(c>='0'&&c<='9');c=getchar())x=x*10+(c&15);\r\n\treturn x*f;\r\n}\r\n\r\nconst int mod=998244353;\r\nint ksm(int x,int y,int p=mod){\r\n\tint ans=1;\r\n\tfor(int i=y;i;i>>=1,x=1ll*x*x%p)if(i&1)ans=1ll*ans*x%p;\r\n\treturn ans%p;\r\n}\r\nint inv(int x,int p=mod){return ksm(x,p-2,p)%p;}\r\nmt19937 rnd(time(0));\r\nint randint(int l,int r){return rnd()%(r-l+1)+l;}\r\n\r\nvoid cmax(int &x,int v){x=max(x,v);}\r\nvoid cmin(int &x,int v){x=min(x,v);}\r\n\r\nconst int N=2e6+5;\r\n\r\nint n,m,U,D,ncnt;\r\n\r\nstruct Node{\r\n\tint l,r,id;\r\n\tNode(int L,int R,int I):l(L),r(R),id(I){}\r\n\tNode(){}\r\n};\r\nvector<Node>Is;\r\n\r\nnamespace sat{\r\n\t#define tr(x) ((x)<<1)\r\n\t#define fs(x) ((x)<<1|1)\r\n\r\n\tvector<int>G[N];\r\n\r\n\tvector<pair<int,int> >edges;\r\n\t#define fi first\r\n\t#define se second\r\n\t#define mk make_pair\r\n\tvoid adde(int x,int y){edges.emplace_back(mk(x,y));G[x].emplace_back(y);}\r\n\tvoid add(int x,int y){adde(x,y),adde(y^1,x^1);}\r\n\tvoid to(int x,int y){// x => y (not y => not x)\r\n\t\t// cout<<x<<\" => \"<<y<<endl;\r\n\t\tadde(tr(x),tr(y)),adde(fs(y),fs(x));\r\n\t}\r\n\tvoid nto(int x,int y){//not x => y (not y => x)\r\n\t\t// cout<<\"not \"<<x<<\" => \"<<y<<endl;\r\n\t\tadde(fs(x),tr(y)),adde(fs(y),tr(x));\r\n\t}\r\n\tvoid ton(int x,int y){// x => not y (y => not x)\r\n\t\t// cout<<x<<\" => not \"<<y<<endl;\r\n\t\tadde(tr(x),fs(y)),adde(tr(y),fs(x));\r\n\t}\r\n\r\n\tvoid neq(int x,int y){nto(x,y),ton(x,y);}\r\n\tvoid eq(int x,int y){to(x,y),to(y,x);}\r\n\r\n\tint dfn[N],dfc,low[N],stk[N],top,scc[N],sc;\r\n\tbool ins[N];\r\n\r\n\tvoid dfs(int u){\r\n\t\tdfn[u]=low[u]=++dfc,stk[++top]=u,ins[u]=1;\r\n\t\tfor(int v:G[u]){\r\n\t\t\tif(!dfn[v])dfs(v),cmin(low[u],low[v]);\r\n\t\t\telse if(ins[v])cmin(low[u],dfn[v]);\r\n\t\t}\r\n\t\tif(low[u]!=dfn[u])return ;\r\n\t\tscc[u]=++sc,ins[u]=0;\r\n\t\twhile(stk[top]!=u)ins[stk[top]]=0,scc[stk[top]]=sc,top--;top--;\r\n\t}\r\n\r\n\tint c[N],ind[N];\r\n\tqueue<int>q;\r\n\tbool topo(){\r\n\t\tint tot=0;\r\n\t\tfor(int i=1;i<=sc;i++)if(ind[i]==0)q.push(i);\r\n\t\twhile(q.size()){\r\n\t\t\tint x=q.front();q.pop();c[x]=++tot;\r\n\t\t\tfor(int v:G[x])if(--ind[v]==0)q.push(v);\r\n\t\t}\r\n\t\treturn tot==sc;\r\n\t}\r\n\r\n\tvector<int> solve(){\r\n\t\t// cout<<\"ncnt = \"<<ncnt<<endl;\r\n\t\tfor(int i=1;i<=ncnt*2+1;i++)if(!dfn[i])dfs(i);\r\n\t\tfor(int i=1;i<=ncnt*2+1;i++)G[i].clear();\r\n\r\n\t\t// for(auto e:edges)cout<<e.fi<<\" \"<<e.se<<endl;\r\n\t\t// cout<<\"scc = \";for(int i=1;i<=ncnt*2;i++)cout<<scc[i]<<\" \";puts(\"\");\r\n\r\n\t\tfor(auto e:edges){\r\n\t\t\tint u=scc[e.fi],v=scc[e.se];\r\n\t\t\tif(u==v)continue;\r\n\t\t\tG[u].emplace_back(v),ind[v]++;\r\n\t\t}\r\n\r\n\t\tassert(topo());\r\n\t\tvector<int>ans(ncnt+1);\r\n\r\n\t\tfor(int i=1;i<=ncnt;i++){\r\n\t\t\tif(c[scc[tr(i)]]==c[scc[fs(i)]]){puts(\"IMPOSSIBLE\");exit(0);}\r\n\t\t\tif(c[scc[tr(i)]]>c[scc[fs(i)]])ans[i]=2;\r\n\t\t\telse ans[i]=1;\r\n\t\t}\r\n\r\n\t\treturn ans;\r\n\t}\r\n\r\n};\r\n\r\nusing sat::to;\r\nusing sat::neq;\r\nusing sat::add;\r\nusing sat::eq;\r\nvector<int>posl,posr;\r\n\r\nint b;\r\n#define ls(p) (p<<1)\r\n#define rs(p) (p<<1|1)\r\nvoid build(int l,int r,int p){\r\n\tcmax(ncnt,p+n+b);\r\n\tif(l==r){add(tr(p+n),tr(l)),add(fs(p+n+b),fs(l));return ;}\r\n\tint mid=(l+r)>>1;build(l,mid,ls(p)),build(mid+1,r,rs(p));\r\n\tto(p+n,ls(p)+n),to(p+n,rs(p)+n),to(p+n+b,ls(p)+n+b),to(p+n+b,rs(p)+n+b);\r\n}\r\nvoid adde1(int x,int l,int r,int ql,int qr,int p){\r\n\tif(l>r)return ;\r\n\t// cout<<\"adde1 \"<<x<<\" -> [\"<<l<<\",\"<<r<<\"]\\n\";\r\n\tif(l<=ql&&qr<=r)return add(tr(x),fs(p+n+b)),add(fs(x),tr(p+n)),void();\r\n\tint mid=(ql+qr)>>1;\r\n\tif(l<=mid)adde1(x,l,r,ql,mid,ls(p));\r\n\tif(r>mid)adde1(x,l,r,mid+1,qr,rs(p));\r\n}\r\nvoid adde2(int x,int l,int r,int ql,int qr,int p){\r\n\tif(l>r)return ;\r\n\t// cout<<\"adde2 \"<<x<<\" -> [\"<<l<<\",\"<<r<<\"]\\n\";\r\n\tif(l<=ql&&qr<=r)return add(tr(x),tr(p+n)),add(fs(x),fs(p+n+b)),void();\r\n\tint mid=(ql+qr)>>1;\r\n\tif(l<=mid)adde2(x,l,r,ql,mid,ls(p));\r\n\tif(r>mid)adde2(x,l,r,mid+1,qr,rs(p));\r\n}\r\n\r\nconst int INF=1e9;\r\n\r\nsigned main(void){\r\n\r\n#ifndef ONLINE_JUDGE\r\n\tfreopen(\"in.in\",\"r\",stdin);\r\n\t// freopen(\"out.out\",\"w\",stdout);\r\n#endif\r\n\r\n\tD=read(),U=read(),n=read(),m=read();Is.resize(n);posl.resize(n),posr.resize(n);b=n*4;\r\n\tfor(int i=0;i<n;i++)Is[i].l=read(),Is[i].r=read(),Is[i].id=i+1,posl[i]=Is[i].l,posr[i]=Is[i].r;\r\n\tbuild(1,n,1);\r\n\r\n\tsort(posl.begin(),posl.end()),sort(posr.begin(),posr.end());\r\n\r\n\t// puts(\"OK\");\r\n\t// cout<<\"posl = \";for(int x:posl)cout<<x<<\" \";puts(\"\");\r\n\t// cout<<\"posr = \";for(int x:posr)cout<<x<<\" \";puts(\"\");\r\n\r\n\tfor(auto t:Is){\r\n\t\t// cout<<\"t = [\"<<t.l<<\",\"<<t.r<<\"]\\n\";\r\n\t\tauto p=upper_bound(posl.begin(),posl.end(),t.r)-posl.begin()+1;\r\n\t\t// cout<<\"p = \"<<p<<endl;\r\n\t\tif(p<=n){\r\n\t\t\tif(t.id<p)adde1(t.id,p,n,1,n,1);\r\n\t\t\telse adde1(t.id,p,t.id-1,1,n,1),adde1(t.id,t.id+1,n,1,n,1);\r\n\t\t}\r\n\t\tp=upper_bound(posl.begin(),posl.end(),U-t.l)-posl.begin()+1;\r\n\t\tif(p<=n){\r\n\t\t\tif(t.id<p)adde2(t.id,p,n,1,n,1);\r\n\t\t\telse adde2(t.id,p,t.id-1,1,n,1),adde2(t.id,t.id+1,n,1,n,1);\r\n\t\t}\r\n\t\tp=lower_bound(posr.begin(),posr.end(),t.l)-posr.begin();\r\n\t\t// cout<<\"p = \"<<p<<endl;\r\n\t\tif(p>0){\r\n\t\t\tif(t.id>p)adde1(t.id,1,p,1,n,1);\r\n\t\t\telse adde1(t.id,1,t.id-1,1,n,1),adde1(t.id,t.id+1,p,1,n,1);\r\n\t\t}\r\n\t\tp=lower_bound(posr.begin(),posr.end(),D-t.r)-posr.begin();\r\n\t\tif(p>0){\r\n\t\t\tif(t.id>p)adde2(t.id,1,p,1,n,1);\r\n\t\t\telse adde2(t.id,1,t.id-1,1,n,1),adde2(t.id,t.id+1,p,1,n,1);\r\n\t\t}\r\n\t}\r\n\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tint u=read(),v=read();\r\n\t\tneq(u,v);\r\n\t}\r\n\r\n\tvector<int>res=sat::solve();\r\n\tvector<int>L(3,0),R(3,INF);\r\n\r\n\t// cout<<\"res = \";for(int i=1;i<=ncnt;i++)cout<<res[i]<<\" \";puts(\"\");\r\n\r\n\tfor(auto t:Is)cmax(L[res[t.id]],t.l),cmin(R[res[t.id]],t.r);\r\n\r\n\tputs(\"POSSIBLE\");\r\n\tcout<<L[1]<<\" \"<<max(L[2],D-L[1])<<endl;\r\n\tfor(int i=1;i<=n;i++)cout<<res[i];puts(\"\");\r\n\r\n\treturn 0;\r\n}"
}