{
    "id": 203213545,
    "contestId": 538,
    "creationTimeSeconds": 1682311438,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 538,
        "index": "H",
        "name": "Summer Dichotomy",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3200,
        "tags": [
            "2-sat",
            "data structures",
            "dfs and similar",
            "greedy"
        ]
    },
    "author": {
        "contestId": 538,
        "members": [
            {
                "handle": "Falco_amurensis"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1430064000
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 5734400,
    "source": "#include<bits/stdc++.h>\r\n#define reg register\r\n#define pb push_back\r\n#define maxn 100010\r\n#define cmax(a,b) ((a)<(b)?(a)=(b),1:0)\r\n#define cmin(a,b) ((a)>(b)?(a)=(b),1:0)\r\nint read() {\r\n\treg int s=0,f=1; reg char ch;\r\n\tfor(;(ch=getchar())<'0'||ch>'9';ch=='-'?f=-f:0);\r\n\tfor(;ch>='0'&&ch<='9';s=s*10+ch-'0',ch=getchar());\r\n\treturn s*f;\r\n}\r\nconst int inf=1e9;\r\nint t,T,n,m,K,L,R,l[maxn],r[maxn],c[maxn],id[maxn],l1[maxn],r1[maxn],l2[maxn],r2[maxn];\r\nbool rev[maxn];\r\nstd::vector<int>e[maxn];\r\nvoid col(reg int x) {\r\n\tid[x]=K;\r\n\tif(!c[x]) cmax(l1[K],l[x]),cmin(r1[K],r[x]); else cmax(l2[K],l[x]),cmin(r2[K],r[x]);\r\n\tfor(reg auto i:e[x]) if(!~c[i]) c[i]=c[x]^1,col(i); else if(c[i]==c[x]) puts(\"IMPOSSIBLE\"),exit(0);\r\n}\r\nvoid print() {\r\n\tputs(\"POSSIBLE\");\r\n\treg int L1=0,R1=0,L2=0,R2=0;\r\n\tfor(reg int i=1;i<=K;++i)\r\n\t\tif(!rev[i]) cmax(L1,l1[i]),cmin(R1,r1[i]),cmax(L2,l2[i]),cmin(R2,r2[i]);\r\n\t\telse cmax(L1,l2[i]),cmin(R1,r2[i]),cmax(L2,l1[i]),cmin(R2,r1[i]);\r\n\tif(L1+L2<=t) t-R1>=L2?printf(\"%d %d\\n\",R1,t-R1):printf(\"%d %d\\n\",t-L2,L2);\r\n\telse printf(\"%d %d\\n\",L1,L2);\r\n\tfor(reg int i=1;i<=n;++i) printf(\"%d\",c[i]^rev[id[i]]?2:1);\r\n\tputs(\"\");\r\n}\r\nint main() {\r\n\tt=read(),T=read(),n=read(),m=read(),R=inf;\r\n\tfor(reg int i=1;i<=n;++i) l[i]=read(),r[i]=read(),cmax(L,l[i]),cmin(R,r[i]);\r\n\tfor(reg int i=1,x,y;i<=m;++i) x=read(),y=read(),e[x].pb(y),e[y].pb(x);\r\n\tmemset(c,-1,(n+1)*sizeof(int));\r\n\tfor(reg int i=1;i<=n;++i) if(!~c[i]) {\r\n\t\t++K,r1[K]=r2[K]=inf,c[i]=0,col(i);\r\n\t\tif(l1[K]>r1[K]||l2[K]>r2[K]) puts(\"IMPOSSIBLE\"),exit(0);\r\n\t}\r\n\t// if(L<=R) {\r\n\t// \tfor(reg int i=1;i<=K;++i)\r\n\t// \t\tif(l2[i]<=T-L&&r2[i]>=t-R) continue;\r\n\t// \t\telse if(l1[i]<=T-L&&r1[i]>=t-R) rev[i]=1;\r\n\t// \t\telse goto skip;\r\n\t// \tprint();\r\n\t// \tskip:;\r\n\t// }\r\n\tfor(reg int i=1;i<=K;++i)\r\n\t\tif(r1[i]>=L&&r1[i]>=t-R&&l2[i]<=R&&l2[i]<=T-L) rev[i]=0;\r\n\t\telse if(r2[i]>=L&&r2[i]>=t-R&&l1[i]<=R&&l1[i]<=T-L) rev[i]=1;\r\n\t\telse puts(\"IMPOSSIBLE\"),exit(0);\r\n\tprint();\r\n\treturn 0;\r\n}"
}