{
    "id": 231716013,
    "contestId": 1867,
    "creationTimeSeconds": 1699356669,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1867,
        "index": "F",
        "name": "Most Different Tree",
        "type": "PROGRAMMING",
        "points": 4000.0,
        "rating": 2700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "greedy",
            "hashing"
        ]
    },
    "author": {
        "contestId": 1867,
        "members": [
            {
                "handle": "duanyuu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1694442900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 200,
    "timeConsumedMillis": 1450,
    "memoryConsumedBytes": 232448000,
    "source": "#include<bits/stdc++.h>\r\n#define ll long long\r\n#define fi first\r\n#define se second\r\n#define pb push_back\r\n#define ull unsigned long long\r\n#define inf 0x3f3f3f3f\r\nusing namespace std;\r\nconst int N=1e6+5;\r\nconst ull mask=std::chrono::steady_clock::now().time_since_epoch().count();\r\nint n,U[N],V[N];\r\null f[N];\r\null shift(ull x){\r\n    x^=mask;\r\n    x^=x<<13;\r\n    x^=x>>7;\r\n    x^=x<<17;\r\n    x^=mask;\r\n    return x;\r\n}\r\nvector<int>G[N];\r\nmap<ull,int>id;\r\nint m,fa[105];\r\nvoid dfs(int u,int topf){\r\n    f[u]=1;\r\n    for(auto v:G[u]){\r\n        if(v==topf)continue;\r\n        dfs(v,u),f[u]+=shift(f[v]);\r\n    }\r\n    id[f[u]]=1;\r\n}\r\null g[105];\r\nmap<ull,int>id2;\r\nint dfs(int x){\r\n    for(int i=1;i<x;i++)g[i]=1;\r\n    for(int i=x-1;i>1;i--)if(fa[i])g[fa[i]]+=shift(g[i]);\r\n    if(id2.count(g[1]))return 0;\r\n    id2[g[1]]=1;\r\n    if(x>m){\r\n        if(!id.count(g[1]))return 1;\r\n        return 0;\r\n    }\r\n    for(int i=1;i<x;i++){\r\n        fa[x]=i;\r\n        if(dfs(x+1))return 1;\r\n    }return 0;\r\n}\r\nint main(){\r\n    //freopen(\"data.in\",\"r\",stdin);\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0),cout.tie(0);\r\n    cin>>n;\r\n    for(int i=1;i<n;i++){\r\n        cin>>U[i]>>V[i];\r\n        G[U[i]].pb(V[i]),G[V[i]].pb(U[i]);\r\n    }\r\n    dfs(1,0);\r\n    for(m=1;m<=n;m++){\r\n        id2.clear();\r\n        if(dfs(2)){\r\n            if(m!=n){\r\n                for(int i=2;i<=m;i++){\r\n                    cout<<fa[i]+1<<\" \"<<i+1<<\"\\n\";\r\n                }\r\n                int pre=2;\r\n                for(int i=m+2;i<=n;i++){\r\n                    cout<<pre<<\" \"<<i<<\"\\n\";\r\n                    pre=i;\r\n                }\r\n                cout<<1<<\" \"<<pre<<\"\\n\";\r\n            }\r\n            else{\r\n                for(int i=2;i<=n;i++){\r\n                    cout<<fa[i]<<\" \"<<i<<\"\\n\";\r\n                }\r\n            }\r\n            return 0;\r\n        }\r\n    }\r\n    for(int i=1;i<n;i++)cout<<U[i]<<\" \"<<V[i]<<\"\\n\";\r\n}"
}