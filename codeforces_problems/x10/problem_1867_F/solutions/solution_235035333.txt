{
    "id": 235035333,
    "contestId": 1867,
    "creationTimeSeconds": 1701340185,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1867,
        "index": "F",
        "name": "Most Different Tree",
        "type": "PROGRAMMING",
        "points": 4000.0,
        "rating": 2700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "dfs and similar",
            "greedy",
            "hashing"
        ]
    },
    "author": {
        "contestId": 1867,
        "members": [
            {
                "handle": "bkifhr7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1694442900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 200,
    "timeConsumedMillis": 1684,
    "memoryConsumedBytes": 249446400,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int MAXN = 2e6 + 10;\n\nmap<vector<int>, int> h;\nvector<vector<int>> t;\nvector<int> s, g[MAXN];\n\ninline \nint get(vector<int> &a) {\n\tif (h.find(a) != h.end()) return h[a]; int tot = 1;\n\tfor (int u : a) tot += s[u]; s.push_back(tot), t.push_back(a);\n\tint x = h.size(); return h[a] = x;\n}\n\nint id[MAXN], cnt;\n\nvoid dfs(int u, int f) {\n\tvector<int> a;\n\tfor (int v : g[u]) if (v != f) dfs(v, u), a.push_back(id[v]);\n\tsort(a.begin(), a.end()), id[u] = get(a), cnt = max(cnt, id[u]);\n}\n\nvector<int> a, b, c; int p, ans;\n\nvoid solve(int n, int k, int pre) {\n\tif (!k) {\n\t\tint x = get(b); c.push_back(x);\n\t\treturn x > cnt && (ans = n, p = x), void();\n\t}\n\tfor (int i = pre; i < a.size(); i++) {\n\t\tif (s[a[i]] > k) continue;\n\t\tb.push_back(a[i]), solve(n, k - s[a[i]], i);\n\t\tif (ans) return ; b.pop_back();\n\t}\n}\n\nvoid print(int u, int f) {\n\tfor (int v : t[u]) printf(\"%d %d\\n\", ++ans, f), print(v, ans);\n}\n\nint n;\n\nint main() {\n\tscanf(\"%d\", &n);\n\tfor (int i = 1, u, v; i < n; i++) {\n\t\tscanf(\"%d%d\", &u, &v);\n\t\tg[u].push_back(v), g[v].push_back(u);\n\t}\n\tdfs(1, 0);\n\tfor (int i = 1; i <= n; i++) {\n\t\tsolve(i, i - 1, 0);\n\t\tif (ans) {\n\t\t\tans = 1;\n\t\t\tfor (int j = n; j > i; j--, ans++) printf(\"%d %d\\n\", ans, ans + 1);\n\t\t\treturn print(p, ans), 0;\n\t\t}\n\t\ta.insert(a.end(), c.begin(), c.end()), sort(a.begin(), a.end());\n\t\tb.clear(), c.clear();\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j : g[i]) if (i < j) printf(\"%d %d\\n\", i, j);\n\t}\n}\n\t\t\t \t\t  \t\t \t\t \t\t \t \t\t\t\t\t      \t"
}