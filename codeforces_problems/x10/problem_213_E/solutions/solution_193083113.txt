{
    "id": 193083113,
    "contestId": 213,
    "creationTimeSeconds": 1676044230,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 213,
        "index": "E",
        "name": "Two Permutations",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2700,
        "tags": [
            "data structures",
            "hashing",
            "strings"
        ]
    },
    "author": {
        "contestId": 213,
        "members": [
            {
                "handle": "luogu_bot5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1343662200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 26419200,
    "source": "// LUOGU_RID: 101872735\n// #include <bits/stdc++.h>\n#include <iostream>\n#include <set>\n#include <cstdio>\n#include <cstring>\nusing namespace std;\nusing ull = unsigned long long;\nnamespace Main {\n\tconst int N = 2e5 + 5;\n\tconst ull R = 23;\n\tint n, m, pre[N];\n\tull a[N], b[N];\n\tull p1[N], h[N];\n\tstruct node {\n\t\tull sum, val;\n\t\tint ls, rs;\n\t} t[N << 2];\n\tint Root;\n\tint TreeCnt;\n\tvoid newnode(int &p) {\n\t\tif (p == 0) p = ++TreeCnt;\n\t}\n\tvoid update(int p) {\n\t\tt[p].sum = t[t[p].ls].sum + t[t[p].rs].sum;\n\t\tt[p].val = t[t[p].ls].val * p1[t[t[p].rs].sum] + t[t[p].rs].val;\n\t}\n\tvoid change(int &p, int l, int r, int x, int y) {\n\t\tnewnode(p);\n\t\tif (l == r) {\n\t\t\tif (y == 0) --t[p].sum;\n\t\t\telse ++t[p].sum;\n\t\t\tt[p].val = y;\n\t\t\treturn;\n\t\t}\n\t\tint mid = (l + r) >> 1;\n\t\tif (x <= mid) change(t[p].ls, l, mid, x, y);\n\t\telse change(t[p].rs, mid + 1, r, x, y);\n\t\tupdate(p);\n\t}\n\tint main() {\n\t\tios::sync_with_stdio(false);\n\t\tcin.tie(0), cout.tie(0);\n\t\tcin >> n >> m;\n\t\tfor (int i = 1; i <= n; ++i) {\n\t\t\tcin >> a[i];\n\t\t}\n\t\tfor (int i = 1; i <= m; ++i) {\n\t\t\tcin >> b[i];\n\t\t\tpre[b[i]] = i;\n\t\t}\n\t\tull Hash_a = 0, sum = 0;\n\t\tp1[0] = 1;\n\t\tfor (int i = 1; i <= n; ++i) {\n\t\t\tHash_a = Hash_a * R + a[i];\n\t\t\tp1[i] = p1[i - 1] * R;\n\t\t\tsum += p1[i - 1];\n\t\t}\n\t\tint ans = 0;\n\t\tfor (int i = 1; i <= m; ++i) {\n\t\t\tif (i > n) change(Root, 1, m, pre[i - n], 0);\n\t\t\tchange(Root, 1, n, pre[i], i);\n\t\t\tif (i >= n && t[1].val == (i - n) * sum + Hash_a) ++ans;\n\t\t}\n\t\tcout << ans << '\\n';\n\t\treturn 0;\n\t}\n}\nint main() {\n\treturn Main::main();\n}"
}