{
    "id": 210666932,
    "contestId": 213,
    "creationTimeSeconds": 1687444304,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 213,
        "index": "E",
        "name": "Two Permutations",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2700,
        "tags": [
            "data structures",
            "hashing",
            "strings"
        ]
    },
    "author": {
        "contestId": 213,
        "members": [
            {
                "handle": "_lcy_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1343662200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 48,
    "timeConsumedMillis": 1122,
    "memoryConsumedBytes": 60416000,
    "source": "// LUOGU_RID: 113142287\n#include <algorithm>\r\n#include <iostream>\r\n#include <cstring>\r\n#include <cstdio>\r\n#include <map>\r\n\r\n#define int long long\r\n\r\nusing namespace std;\r\n\r\nusing ULL = unsigned long long;\r\nusing PII = pair<int, int>;\r\nconst int N = 200010;\r\nconst int P = 23;\r\n\r\nint n, m, a[N], b[N], ans;\r\nULL h1[N], p[N], Base;\r\nmap<ULL, bool> Map;\r\nPII tmp[N];\r\n\r\nstruct node {\r\n\tint l, r;\r\n\tULL hash;\r\n\tint size;\r\n}tr[N << 2];\r\n#define ls u << 1\r\n#define rs u << 1 | 1\r\n\r\nvoid pushup(int u) {\r\n\ttr[u].size = tr[ls].size + tr[rs].size;\r\n\ttr[u].hash = (ULL)tr[rs].hash + tr[ls].hash * p[tr[rs].size];\r\n}\r\nvoid build(int u, int l, int r) {\r\n\ttr[u] = {l, r, 0, 0};\r\n\tif (l == r) return;\r\n\tint mid = l + r >> 1;\r\n\tbuild(ls, l, mid), build(rs, mid + 1, r);\r\n}\r\nvoid insert(int u, int x, int v) {\r\n\tif (tr[u].l == tr[u].r) {\r\n\t\ttr[u].hash = v; tr[u].size = 1;\r\n\t\treturn;\r\n\t}\r\n\tint mid = tr[u].l + tr[u].r >> 1;\r\n\tif (x <= mid) insert(ls, x, v);\r\n\telse insert(rs, x, v);\r\n\tpushup(u);\r\n}\r\nvoid remove(int u, int x) {\r\n\tif (tr[u].l == tr[u].r) {\r\n\t\ttr[u].hash = tr[u].size = 0;\r\n\t\treturn;\r\n\t}\r\n\tint mid = tr[u].l + tr[u].r >> 1;\r\n\tif (x <= mid) remove(ls, x);\r\n\telse remove(rs, x);\r\n\tpushup(u);\r\n}\r\nsigned main() {\r\n\tscanf(\"%lld%lld\", &n, &m);\r\n\tfor (int i = 1; i <= n; i ++ )\r\n\t\tscanf(\"%lld\", &a[i]);\r\n\tfor (int i = 1; i <= m; i ++ )\r\n\t\tscanf(\"%lld\", &b[i]);\r\n\tp[0] = 1;\r\n\tfor (int i = 1; i <= n; i ++ )\r\n\t\th1[i] = h1[i - 1] * P + a[i];\r\n\tfor (int i = 1; i <= m; i ++ )\r\n\t\tp[i] = p[i - 1] * P;\r\n\tfor (int i = 0; i < n; i ++ )\r\n\t\tBase = Base + p[i];\r\n\tfor (int i = 0; i <= m - n; i ++ )\r\n\t\tMap[h1[n] + Base * i] = true;\r\n\t\r\n\tfor (int i = 1; i <= m; i ++ )\r\n\t\ttmp[i] = {b[i], i};\r\n\tsort(tmp + 1, tmp + m + 1);\r\n\tbuild(1, 1, m);\r\n\tfor (int i = 1; i <= n; i ++ )\r\n\t\tinsert(1, tmp[i].second, tmp[i].first);\r\n\tfor (int i = n + 1; i <= m; i ++ ) {\t\r\n\t\tint hash = tr[1].hash;\r\n\t\tif (Map[hash]) ans ++ ;\r\n\t\tremove(1, tmp[i - n].second);\r\n\t\tinsert(1, tmp[i].second, tmp[i].first);\r\n\t}\r\n\tif (Map[tr[1].hash]) ans ++ ;\r\n\tprintf(\"%lld\\n\", ans);\r\n\treturn 0;\r\n}"
}