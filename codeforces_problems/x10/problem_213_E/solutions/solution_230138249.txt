{
    "id": 230138249,
    "contestId": 213,
    "creationTimeSeconds": 1698482538,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 213,
        "index": "E",
        "name": "Two Permutations",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2700,
        "tags": [
            "data structures",
            "hashing",
            "strings"
        ]
    },
    "author": {
        "contestId": 213,
        "members": [
            {
                "handle": "vegeone"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1343662200
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 16793600,
    "source": "#include<bits/stdc++.h>//\r\nusing namespace std;\r\n#define endl '\\n'\r\ntypedef unsigned long long int64;\r\nconst int N=2e5+10;\r\ntypedef unsigned long long ull;\r\nconst ull D = std::chrono::steady_clock::now().time_since_epoch().count();\r\ntypedef pair<int,int>pp;\r\nint a[N],b[N],pos[N];\r\nint64 d[N];\r\nstruct info{\r\n\tint res;\r\n    int64 num;\r\n}; \r\nstruct Node{\r\n\tinfo val;\r\n}node[N*4];\r\ninfo operator +(const info &a,const info &b){\r\n\tinfo temp;\r\n    temp.res=a.res+b.res;\r\n    temp.num=a.num*d[b.res]+b.num;\r\n    return temp;\r\n}\r\nvoid update(int id){\r\n\tnode[id].val=node[id*2].val+node[id*2+1].val;\r\n}\r\nvoid change(int id,int l,int r,int pos,int dd){\r\n\tif(l==r){\r\n\t\tnode[id].val={dd?node[id].val.res+1:node[id].val.res-1,(int64)dd};\r\n\t}else {\r\n\t\tint mid=(l+r)>>1;\r\n\t\tif(pos<=mid)change(id*2,l,mid,pos,dd);\r\n\t\telse change(id*2+1,mid+1,r,pos,dd);\r\n\t\tupdate(id);\r\n\t}\r\n}\r\nint main()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    int n,m;\r\n    cin>>n>>m;\r\n    int64 sum=0,aa=0;\r\n    d[0]=1;\r\n    for(int i=1;i<=n;++i){\r\n        cin>>a[i];\r\n        sum=sum*D+a[i];\r\n        d[i]=d[i-1]*D;\r\n        aa+=d[i-1];\r\n    }\r\n    for(int i=1;i<=m;++i){\r\n        cin>>b[i];\r\n        pos[b[i]]=i;\r\n    }\r\n    int cnt=0;\r\n    for(int i=1;i<=m;++i){\r\n        if(i>n)change(1,1,m,pos[i-n],0);\r\n        change(1,1,m,pos[i],i);\r\n        if(i>=n&&node[1].val.num==(i-n)*aa+sum)\r\n            ++cnt;\r\n    }\r\n    cout<<cnt<<endl;\r\n    return 0;\r\n}"
}