{
    "id": 184315586,
    "contestId": 1028,
    "creationTimeSeconds": 1670496290,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1028,
        "index": "C",
        "name": "Rectangles",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1600,
        "tags": [
            "geometry",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1028,
        "members": [
            {
                "handle": "Dance_Of_Faith"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1535387700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <cstdio>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nconst int N = 200005;\r\n\r\nint n;\r\n\r\nstruct Rec {\r\n  int x1, y1, x2, y2;\r\n  friend Rec operator & (Rec a, Rec b) {\r\n    return (Rec){ max(a.x1, b.x1), max(a.y1, b.y1), min(a.x2, b.x2), min(a.y2, b.y2) };\r\n  }\r\n  int Have() {\r\n    return x1 <= x2 && y1 <= y2;\r\n  }\r\n} a[N], lf[N], rg[N];\r\n\r\nint main() {\r\n  scanf(\"%d\", &n);\r\n  for (int i = 1; i <= n; ++i) {\r\n    scanf(\"%d%d%d%d\", &a[i].x1, &a[i].y1, &a[i].x2, &a[i].y2);\r\n  }\r\n  lf[0] = rg[n + 1] = (Rec){ -1e9, -1e9, 1e9, 1e9 };\r\n  for (int i = 1; i <= n; ++i) {\r\n    lf[i] = lf[i - 1] & a[i];\r\n  }\r\n  for (int i = n; i >= 1; --i) {\r\n    rg[i] = rg[i + 1] & a[i];\r\n  }\r\n  pair<int, int> ans = make_pair(1e9, 1e9);\r\n  for (int i = 1; i <= n; ++i) {\r\n    Rec t = lf[i - 1] & rg[i + 1];\r\n    if (t.Have()) {\r\n      ans = min(ans, make_pair(t.x1, t.y1));\r\n    }\r\n  }\r\n  printf(\"%d %d\\n\", ans.first, ans.second);\r\n  \r\n  return 0;\r\n}"
}