{
    "id": 184156323,
    "contestId": 753,
    "creationTimeSeconds": 1670377553,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 753,
        "index": "B",
        "name": "Interactive Bulls and Cows (Easy)",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation"
        ]
    },
    "author": {
        "contestId": 753,
        "members": [
            {
                "handle": "hayoung0_0"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1483002300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\n#pragma optimization_level 3\r\n#pragma GCC optimize(\"Ofast,no-stack-protector,unroll-loops,fast-math,O3\")\r\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx\")\r\n#pragma GCC optimize(\"Ofast\")//Comment optimisations for interactive problems (use endl)\r\n#pragma GCC target(\"avx,avx2,fma\")\r\n#pragma GCC optimization (\"unroll-loops\")\r\n\r\nusing namespace std;\r\n\r\nstruct PairHash {inline std::size_t operator()(const std::pair<int, int> &v) const { return v.first * 31 + v.second; }};\r\n\r\n// speed\r\n#define Code ios_base::sync_with_stdio(false);\r\n#define By ios::sync_with_stdio(0);\r\n#define Sumfi cout.tie(NULL);\r\n\r\n// alias\r\nusing ll = long long;\r\nusing ld = long double;\r\nusing ull = unsigned long long;\r\n\r\n// constants\r\nconst ld PI = 3.14159265358979323846;  /* pi */\r\nconst ll INF = 1e18;\r\nconst ld EPS = 1e-9;\r\nconst ll MAX_N = 10101010;\r\nconst ll mod = 21945;\r\n\r\n// typedef\r\ntypedef pair<ll, ll> pll;\r\ntypedef vector<pll> vpll;\r\ntypedef array<ll,3> all3;\r\ntypedef array<ll,5> all5;\r\ntypedef vector<all3> vall3;\r\ntypedef vector<all5> vall5;\r\ntypedef vector<ld> vld;\r\ntypedef vector<ll> vll;\r\ntypedef vector<vll> vvll;\r\ntypedef vector<int> vi;\r\ntypedef deque<ll> dqll;\r\ntypedef deque<pll> dqpll;\r\ntypedef pair<string, string> pss;\r\ntypedef vector<pss> vpss;\r\ntypedef vector<string> vs;\r\ntypedef vector<vs> vvs;\r\ntypedef unordered_set<ll> usll;\r\ntypedef unordered_set<pll, PairHash> uspll;\r\ntypedef unordered_map<ll, ll> umll;\r\ntypedef unordered_map<pll, ll, PairHash> umpll;\r\n\r\n// macros\r\n#define rep(i,m,n) for(ll i=m;i<n;i++)\r\n#define rrep(i,m,n) for(ll i=n;i>=m;i--)\r\n#define all(a) begin(a), end(a)\r\n#define rall(a) rbegin(a), rend(a)\r\n#define ZERO(a) memset(a,0,sizeof(a))\r\n#define MINUS(a) memset(a,0xff,sizeof(a))\r\n#define INF(a) memset(a,0x3f3f3f3f3f3f3f3fLL,sizeof(a))\r\n#define ASCEND(a) iota(all(a),0)\r\n#define sz(x) ll((x).size())\r\n#define BIT(a,i) (a & (1ll<<i))\r\n#define BITSHIFT(a,i,n) (((a<<i) & ((1ll<<n) - 1)) | (a>>(n-i)))\r\n#define pyes cout<<\"YES\\n\";\r\n#define pno cout<<\"NO\\n\";\r\n#define endl \"\\n\"\r\n#define pneg1 cout<<\"-1\\n\";\r\n#define ppossible cout<<\"Possible\\n\";\r\n#define pimpossible cout<<\"Impossible\\n\";\r\n#define TC(x) cout<<\"Case #\"<<x<<\": \";\r\n#define X first\r\n#define Y second\r\n\r\n// utility functions\r\ntemplate <typename T>\r\nvoid print(T &&t)  { cout << t << \"\\n\"; }\r\ntemplate<typename T>\r\nvoid printv(vector<T>v){ll n=v.size();rep(i,0,n){cout<<v[i];if(i+1!=n)cout<<' ';}cout<<endl;}\r\ntemplate<typename T>\r\nvoid printvln(vector<T>v){ll n=v.size();rep(i,0,n)cout<<v[i]<<endl;}\r\nvoid fileIO() {freopen(\"input.txt\",\"r\",stdin); freopen(\"output.txt\",\"w\",stdout);}\r\nvoid hackerCupIO() {freopen(\"/Users/summerflower/Downloads/worklife_balance_chapter_1_input (1).txt\", \"r\", stdin); freopen(\"/Users/summerflower/Downloads/solution.txt\",\"w\",stdout);}\r\nvoid readf() {freopen(\"\", \"rt\", stdin);}\r\ntemplate<typename T>\r\nvoid readv(vector<T>& v){rep(i,0,sz(v)) cin>>v[i];}\r\ntemplate<typename T, typename U>\r\nvoid readp(pair<T,U>& A) {cin>>A.first>>A.second;}\r\ntemplate<typename T, typename U>\r\nvoid readvp(vector<pair<T,U>>& A) {rep(i,0,sz(A)) readp(A[i]); }\r\nvoid readvall3(vall3& A) {rep(i,0,sz(A)) cin>>A[i][0]>>A[i][1]>>A[i][2];}\r\nvoid readvall5(vall5& A) {rep(i,0,sz(A)) cin>>A[i][0]>>A[i][1]>>A[i][2]>>A[i][3]>>A[i][4];}\r\nvoid readvvll(vvll& A) {rep(i,0,sz(A)) readv(A[i]);}\r\n\r\nstruct Combination {\r\n    vll fac, inv;\r\n    ll n, MOD;\r\n\r\n    ll modpow(ll n, ll x, ll MOD = mod) { if(!x) return 1; ll res = modpow(n,x>>1,MOD); res = (res * res) % MOD; if(x&1) res = (res * n) % MOD; return res; }\r\n\r\n    Combination(ll _n, ll MOD = mod): n(_n + 1), MOD(MOD) {\r\n        inv = fac = vll(n,1);\r\n        rep(i,1,n) fac[i] = fac[i-1] * i % MOD;\r\n        inv[n - 1] = modpow(fac[n - 1], MOD - 2, MOD);\r\n        rrep(i,1,n - 2) inv[i] = inv[i + 1] * (i + 1) % MOD;\r\n    }\r\n\r\n    ll fact(ll n) {return fac[n];}\r\n    ll nCr(ll n, ll r) {\r\n        if(n < r or n < 0 or r < 0) return 0;\r\n        return fac[n] * inv[r] % MOD * inv[n-r] % MOD;\r\n    }\r\n};\r\n\r\nstruct Matrix {\r\n    ll r,c;\r\n    vvll matrix;\r\n    Matrix(ll r, ll c, ll v = 0): r(r), c(c), matrix(vvll(r,vll(c,v))) {}\r\n\r\n    Matrix operator*(const Matrix& B) const {\r\n        Matrix res(r, B.c);\r\n        rep(i,0,r) rep(j,0,B.c) rep(k,0,B.r) {\r\n                    res.matrix[i][j] = (res.matrix[i][j] + matrix[i][k] * B.matrix[k][j] % mod) % mod;\r\n                }\r\n        return res;\r\n    }\r\n\r\n    Matrix copy() {\r\n        Matrix copy(r,c);\r\n        copy.matrix = matrix;\r\n        return copy;\r\n    }\r\n\r\n    Matrix pow(ll n) {\r\n        assert(r == c);\r\n        Matrix res(r,r);\r\n        Matrix now = copy();\r\n        rep(i,0,r) res.matrix[i][i] = 1;\r\n        while(n) {\r\n            if(n & 1) res = res * now;\r\n            now = now * now;\r\n            n /= 2;\r\n        }\r\n        return res;\r\n    }\r\n};\r\n\r\n// geometry data structures\r\ntemplate <typename T>\r\nstruct Point {\r\n    T y,x;\r\n    Point(T y, T x) : y(y), x(x) {}\r\n    Point(pair<T,T> p) : y(p.first), x(p.second) {}\r\n    Point() {}\r\n    void input() {cin>>y>>x;}\r\n    friend ostream& operator<<(ostream& os, const Point<T>& p) { os<<p.y<<' '<<p.x<<'\\n'; return os;}\r\n    Point<T> operator+(Point<T>& p) {return Point<T>(y + p.y, x + p.x);}\r\n    Point<T> operator-(Point<T>& p) {return Point<T>(y - p.y, x - p.x);}\r\n    Point<T> operator*(ll n) {return Point<T>(y*n,x*n); }\r\n    Point<T> operator/(ll n) {return Point<T>(y/n,x/n); }\r\n\r\n    Point<T> rotate(Point<T> center, ld angle) {\r\n        ld si = sin(angle * PI / 180.), co = cos(angle * PI / 180.);\r\n        ld y = this->y - center.y;\r\n        ld x = this->x - center.x;\r\n\r\n        return Point<T>(y * co - x * si + center.y, y * si + x * co + center.x);\r\n    }\r\n    ld distance(Point<T> other) {\r\n        T dy = abs(this->y - other.y);\r\n        T dx = abs(this->x - other.x);\r\n        return sqrt(dy * dy + dx * dx);\r\n    }\r\n};\r\n\r\ntemplate<typename T>\r\nstruct Line {\r\n    Point<T> A, B;\r\n    Line(Point<T> A, Point<T> B) : A(A), B(B) {}\r\n    Line() {}\r\n\r\n    void input() {\r\n        A = Point<T>();\r\n        B = Point<T>();\r\n        A.input();\r\n        B.input();\r\n    }\r\n\r\n    T ccw(Point<T> &a, Point<T> &b, Point<T> &c) {\r\n        T res = a.x * b.y + b.x * c.y + c.x * a.y;\r\n        res -= (a.x * c.y + b.x * a.y + c.x * b.y);\r\n        return res;\r\n    }\r\n\r\n    bool isIntersect(Line<T> o) {\r\n        T p1p2 = ccw(A,B,o.A) * ccw(A,B,o.B);\r\n        T p3p4 = ccw(o.A,o.B,A) * ccw(o.A,o.B,B);\r\n        if (p1p2 == 0 && p3p4 == 0) {\r\n            pair<T,T> p1(A.y, A.x), p2(B.y,B.x), p3(o.A.y, o.A.x), p4(o.B.y, o.B.x);\r\n            if (p1 > p2) swap(p2, p1);\r\n            if (p3 > p4) swap(p3, p4);\r\n            return p3 <= p2 && p1 <= p4;\r\n        }\r\n        return p1p2 <= 0 && p3p4 <= 0;\r\n    }\r\n\r\n    pair<bool,Point<ld>> intersection(Line<T> o) {\r\n        if(!this->intersection(o)) return {false, {}};\r\n        ld det = 1. * (o.B.y-o.A.y)*(B.x-A.x) - 1.*(o.B.x-o.A.x)*(B.y-A.y);\r\n        ld t = ((o.B.x-o.A.x)*(A.y-o.A.y) - (o.B.y-o.A.y)*(A.x-o.A.x)) / det;\r\n        return {true, {A.y + 1. * t * (B.y - A.y), B.x + 1. * t * (B.x - A.x)}};\r\n    }\r\n\r\n    //@formula for : y = ax + b\r\n    //@return {a,b};\r\n    pair<ld, ld> formula() {\r\n        T y1 = A.y, y2 = B.y;\r\n        T x1 = A.x, x2 = B.x;\r\n        if(y1 == y2) return {1e9, 0};\r\n        if(x1 == x2) return {0, 1e9};\r\n        ld a = 1. * (y2 - y1) / (x2 - x1);\r\n        ld b = -x1 * a + y1;\r\n        return {a, b};\r\n    }\r\n};\r\n\r\ntemplate<typename T>\r\nstruct Circle {\r\n    Point<T> center;\r\n    T radius;\r\n    Circle(T y, T x, T radius) : center(Point<T>(y,x)), radius(radius) {}\r\n    Circle(Point<T> center, T radius) : center(center), radius(radius) {}\r\n    Circle() {}\r\n\r\n    void input() {\r\n        center = Point<T>();\r\n        center.input();\r\n        cin>>radius;\r\n    }\r\n\r\n    bool circumference(Point<T> p) {\r\n        return (center.x - p.x) * (center.x - p.x) + (center.y - p.y) * (center.y - p.y) == radius * radius;\r\n    }\r\n\r\n    bool intersect(Circle<T> c) {\r\n        T d = (center.x - c.center.x) * (center.x - c.center.x) + (center.y - c.center.y) * (center.y - c.center.y);\r\n        return (radius - c.radius) * (radius - c.radius) <= d and d <= (radius + c.radius) * (radius + c.radius);\r\n    }\r\n\r\n    bool include(Circle<T> c) {\r\n        T d = (center.x - c.center.x) * (center.x - c.center.x) + (center.y - c.center.y) * (center.y - c.center.y);\r\n        return d <= radius * radius;\r\n    }\r\n};\r\n\r\nll __gcd(ll x, ll y) { return !y ? x : __gcd(y, x % y); }\r\nall3 __exgcd(ll x, ll y) { if(!y) return {x,1,0}; auto [g,x1,y1] = __exgcd(y, x % y); return {g, y1, x1 - (x/y) * y1}; }\r\nll __lcm(ll x, ll y) { return x / __gcd(x,y) * y; }\r\nll modpow(ll n, ll x, ll MOD = mod) { n%=MOD; if(!x) return 1; ll res = modpow(n,x>>1,MOD); res = (res * res) % MOD; if(x&1) res = (res * n) % MOD; return res; }\r\n\r\npll ask(string s) {\r\n    print(s);\r\n    ll b,c;\r\n    cin>>b>>c;\r\n    if(b == 4 and c == 0) exit(0);\r\n    return {b,c};\r\n}\r\n\r\nstring toString(vll& A) {\r\n    string res = \"\";\r\n    rep(i,0,sz(A)) res.push_back(A[i] + '0');\r\n    return res;\r\n}\r\n\r\nvoid solve() {\r\n    vll cand;\r\n    rep(i,0,10) {\r\n        if(sz(cand) == 4) break;\r\n        auto [b,c] = ask(string(4,i+'0'));\r\n        if(b or c) cand.push_back(i);\r\n    }\r\n    do {\r\n        ask(toString(cand));\r\n    }while(next_permutation(all(cand)));\r\n}\r\n\r\nint main() {\r\n    Code By Sumfi\r\n    cout.precision(12);\r\n    ll tc = 1;\r\n    //cin>>tc;\r\n    rep(i,1,tc+1) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n\r\n"
}