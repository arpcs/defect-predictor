{
    "id": 228973568,
    "contestId": 1783,
    "creationTimeSeconds": 1697827663,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1783,
        "index": "A",
        "name": "Make it Beautiful",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "constructive algorithms",
            "math",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1783,
        "members": [
            {
                "handle": "dyson_spherical"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1673188500
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 2764800,
    "source": "# import sys;input=sys.stdin.readline\r\ndef solve():\r\n    n=int(input())\r\n    A=map(int,input().strip().split())\r\n    sorted(A)\r\n    if A[0]==A[-1]:\r\n        print(\"NO\\n\")\r\n    else:\r\n        print(\"YES\\n\")\r\n        print(A[n-1], end=\" \")\r\n        for i in range(0,n-1):\r\n            print(A[i],end=\" \")\r\n\r\n\r\nfor _ in range(int(input())):\r\n    solve()",
    "suggested_categories": [
        "algorithm",
        "input/output handling",
        "list manipulation",
        "looping",
        "conditional statements",
        "code optimization",
        "code modularity",
        "code documentation",
        "python programming",
        "error handling",
        "code testing",
        "code efficiency",
        "code refactoring",
        "code complexity",
        "code readability",
        "code structure",
        "data validation",
        "code debugging",
        "code reusability",
        "code maintenance"
    ]
}