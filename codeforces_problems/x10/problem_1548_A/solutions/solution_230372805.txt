{
    "id": 230372805,
    "contestId": 1548,
    "creationTimeSeconds": 1698585958,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1548,
        "index": "A",
        "name": "Web of Lies",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1400,
        "tags": [
            "brute force",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1548,
        "members": [
            {
                "handle": "abhishekyadav.MNNIT"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1627828500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 72,
    "timeConsumedMillis": 1185,
    "memoryConsumedBytes": 819200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long int ll;\r\n\r\n// BINARY EXPONENTIATION CODE\t\r\n\r\n// long long binpow(long long a, long long b, long long m) {\r\n//     a %= m;\r\n//     long long res = 1;\r\n//     while (b > 0) {\r\n//         if (b & 1)\r\n//             res = res * a % m;\r\n//         a = a * a % m;\r\n//         b >>= 1;\r\n//     }\r\n//     return res;\r\n// }\r\n\r\n// SEIVE CODE\r\n\r\n// void SieveOfEratosthenes(int n) \r\n// { \r\n\r\n//     bool prime[n + 1]; \r\n//     memset(prime, true, sizeof(prime)); \r\n  \r\n//     for (int p = 2; p * p <= n; p++) { \r\n//         // If prime[p] is not changed, then it is a prime \r\n//         if (prime[p] == true) { \r\n          \r\n//             for (int i = p * p; i <= n; i += p) \r\n//                 prime[i] = false; \r\n//         } \r\n//     } \r\n  \r\n//     // Print all prime numbers \r\n//     for (int p = 2; p <= n; p++) \r\n//         if (prime[p]) \r\n//             v.push_back(p);\r\n// } \r\n\r\n// DSU CODE\r\n// const int N = 500 * 1000 + 13;\r\n\r\n\r\n// int rk[N], p[N];\r\n\r\n// int getP(int a){\r\n// \treturn (a == p[a] ? a : p[a] = getP(p[a]));\r\n// }\r\n\r\n// void unite(int a, int b){\r\n// \ta = getP(a), b = getP(b);\r\n// \tif (a == b) return;\r\n// \tif (rk[a] < rk[b]) swap(a, b);\r\n// \tp[b] = a;\r\n// \trk[a] += rk[b];\r\n// }\r\n\r\nvoid solve()\r\n{\r\n    ll n,m;\r\n    cin>>n>>m;\r\n\r\n    vector<int> friends(n,0);\r\n    int nobles = n;\r\n    for(int i = 0;i < m;i++){\r\n        int x,y;\r\n        cin>>x>>y;\r\n        if(x > y){\r\n            swap(x,y);\r\n        }\r\n        x--,y--;\r\n        if(friends[x] == 0){\r\n            nobles--;\r\n        }\r\n        friends[x]++;\r\n    }\r\n    int q;\r\n    cin>>q;\r\n    while(q--){\r\n        int type;\r\n        cin>>type;\r\n        if(type == 1){\r\n            int x,y;\r\n            cin>>x>>y;\r\n            if(x > y){\r\n                swap(x,y);\r\n            }\r\n            x--,y--;\r\n            if(friends[x] == 0){\r\n                nobles--;\r\n            }\r\n            friends[x]++;\r\n        }\r\n        else if(type == 2){\r\n            int x,y;\r\n            cin>>x>>y;\r\n            if(x > y){\r\n                swap(x,y);\r\n            }\r\n            x--;\r\n            y--;\r\n            friends[x]--;\r\n            if(friends[x] == 0){\r\n                nobles++;\r\n            }\r\n        }else{\r\n            cout<<nobles<<endl;\r\n        }\r\n    }\r\n}\r\n \r\nint main(){\r\n    #ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n\t\t// int t;\r\n\t\t// cin>>t;\r\n\t\t// while(t--){\r\n\t\t// \t\tsolve();\r\n\t\t// }\r\n\t\t\t\tsolve();\r\n\t\t\t\r\n}\r\n\r\n\r\n\r\n \r\n\r\n\r\n"
}