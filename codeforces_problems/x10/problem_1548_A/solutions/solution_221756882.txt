{
    "id": 221756882,
    "contestId": 1548,
    "creationTimeSeconds": 1693783994,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1548,
        "index": "A",
        "name": "Web of Lies",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1400,
        "tags": [
            "brute force",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1548,
        "members": [
            {
                "handle": "ahmedmus"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1627828500
    },
    "programmingLanguage": "Java 8",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 0,
    "source": "// Online Java Compiler\r\n// Use this editor to write, compile and run your Java code online\r\nimport java.util.Scanner;\r\nimport java.util.HashSet;\r\nimport java.util.Iterator;\r\npublic class HelloWorld {\r\n    public static void main(String[] args) {\r\n       Scanner in = new Scanner(System.in);\r\n       int n = in.nextInt();\r\n       int f = in.nextInt();\r\n       HashSet<Integer> [] graph = new HashSet [n + 1];\r\n       int [] alived = new int [n+1];\r\n       for (int i = 1 ; i <= n ; i++ ){\r\n           graph[i] = new HashSet<Integer>();\r\n       }\r\n        for (int i = 0;  i <= f ; i++ ){\r\n            int u = in.nextInt();\r\n            int v = in.nextInt();\r\n            graph[u].add(v);\r\n            graph[v].add(u);\r\n        }\r\n        int q = in.nextInt();\r\n        HashSet<Integer> [] copiedGraph = null;\r\n        for (int i = 0 ; i < q ; i ++){\r\n            int command = in.nextInt();\r\n            if (command == 1 || command == 2){\r\n              int u = in.nextInt();\r\n              int v = in.nextInt();\r\n              if (copiedGraph == null){\r\n                  copiedGraph = copyGraph(graph);\r\n              }\r\n              if (command == 1){\r\n                  copiedGraph[u].add(v);\r\n                  copiedGraph[v].add(u);\r\n              }\r\n              if (command == 2){\r\n                  copiedGraph[u].remove(v);\r\n                  copiedGraph[v].remove(u);\r\n              }\r\n              \r\n            }\r\n            if (command == 3){\r\n                 if (copiedGraph == null){\r\n                    copiedGraph = copyGraph(graph);\r\n                 }\r\n                for (int j = 1; j <= n ; i++ ){\r\n                    HashSet<Integer> st = copiedGraph[j];\r\n                    if (!st.isEmpty()){\r\n                         Iterator<Integer> it = st.iterator();\r\n                         while(it.hasNext()){\r\n                            copiedGraph[it.next()].remove(j); \r\n                         }\r\n                         alived[j] = -1;\r\n                    }\r\n                 }\r\n                 int sum = 0;\r\n                 for (int j = 1 ; j <= n ; j++ ){\r\n                     if (alived[j] == 0){\r\n                         sum++;\r\n                     }\r\n                 }\r\n                 System.out.println(sum);\r\n                 copiedGraph = null;\r\n                 alived = new int [n+1];\r\n                 \r\n                 \r\n            }\r\n        }\r\n       \r\n      \r\n    }\r\n    public static  HashSet<Integer> [] copyGraph(HashSet<Integer> [] graph ){\r\n        HashSet<Integer> [] cop = new  HashSet [graph.length];\r\n         for (int i = 1 ; i < cop.length ; i++ ){\r\n           cop[i] = new HashSet<Integer>();\r\n           cop[i].addAll(graph[i]);\r\n       }\r\n       return cop;\r\n    }\r\n    \r\n}"
}