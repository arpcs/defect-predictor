{
    "id": 216972954,
    "contestId": 1548,
    "creationTimeSeconds": 1691059928,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1548,
        "index": "A",
        "name": "Web of Lies",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1400,
        "tags": [
            "brute force",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1548,
        "members": [
            {
                "handle": "Zeyad_Farag"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1627828500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 9830400,
    "source": "#include<bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#define             endl \"\\n\"\r\n#define             ll long long\r\n#define             pii pair<int,int>\r\n#define             pll pair<ll,ll>\r\n#define             f(a) for(int i=0;i<a;i++)\r\n#define             rf(a) for(int i=arr-1;i>=0;i--)\r\n#define             w  int t;cin>>t;while(t--)\r\n#define             all(v) v.begin(),v.end()\r\n#define             rall(v) v.rbegin(),v.rend()\r\n#define             yes cout<<\"YES\"<<endl\r\n#define             no cout<<\"NO\"<<endl\r\n#define             prev2pn(x) pow(2,floor(log2(x)))\r\n#define             RR iostream::sync_with_stdio(false);cin.tie(nullptr); \\\r\n                    cout.tie(nullptr);\r\n#define             arrRange(a , l , r) int _##arr[(r-l)+1]; int* arr= _##arr-l;\r\n#define             ordered_set tree<pll, null_type,less<pll>, \\\r\n                    rb_tree_tag,tree_order_statistics_node_update>\r\n#define             OO 0x3f3f3f3f3f3f3f3f\r\n#define             pr(v) for(int i=0;i<v.size();i++)cout<<v[i]<<\" \";\r\n#define             ld long double\r\n#define             fr first\r\n#define             se second\r\n#define             sz(s) (int)s.size()\r\n#define             ones(x) __builtin_popcount(x)\r\nconst ll MOD=1e9+7;\r\nconst int N= 2e5+5;\r\nconst int K= 2e5+5;\r\nconst double EPS = 1e-6;\r\nconst double PI = 3.14159265;\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\nll n,m,k;\r\nset<int>adj[N];\r\nbool vis[N];\r\nconst int dx[]={0,0,1,-1},dy[]={1,-1,0,0};\r\nconst int dx8[]={-1,1,1,1,-1,-1,0,0},dy8[]={0,0,1,-1,-1,1,1,-1};\r\nbool valid(int a,int b){\r\n    return (a<0||b<0||a>=n||b>=m);\r\n}\r\nll lcm(ll a,ll b){\r\n    return (a*b)/__gcd(a,b);\r\n}\r\nvoid solve(){\r\n    cin>>n>>m;\r\n    for (int i = 0; i < m; ++i) {\r\n        int a,b;\r\n        cin>>a>>b;\r\n        adj[a].insert(b);\r\n        adj[b].insert(a);\r\n    }\r\n    set<int>s,temp;\r\n    set<pii>er;\r\n    for (int i = 1; i <=n ; ++i) {\r\n        if(!adj[i].empty()){\r\n            auto u=adj[i].upper_bound(i);\r\n            if(u==adj[i].end()){\r\n                temp.insert(i);\r\n            }\r\n        }\r\n    }\r\n    cin>>k;\r\n    vector<pii>v;\r\n    int cnt=sz(temp);\r\n    while (k--){\r\n        int type;\r\n        cin>>type;\r\n        if(type==1){\r\n            int a,b;\r\n            cin>>a>>b;\r\n            adj[a].insert(b);\r\n            adj[b].insert(a);\r\n            auto u=adj[a].upper_bound(a);\r\n            // each node kill if it has nodes greater than it\r\n            if(u!=adj[a].end()){\r\n                if(temp.find(a)!=temp.end()) {\r\n                    cnt--;\r\n                    temp.erase(a);\r\n                }\r\n            }\r\n             u=adj[b].upper_bound(b);\r\n            if(u!=adj[b].end()){\r\n                if(temp.find(b)!=temp.end()) {\r\n                    cnt--;\r\n                    temp.erase(b);\r\n                }\r\n            }\r\n\r\n        }else if(type==2){\r\n            int a,b;\r\n            cin>>a>>b;\r\n            adj[a].erase(b);\r\n            adj[b].erase(a);\r\n            auto u= adj[a].upper_bound(a);\r\n            if(u==adj[a].end()){\r\n                if(temp.find(a)==temp.end()) {\r\n                    cnt++;\r\n                    temp.insert(a);\r\n                }\r\n            }\r\n            u= adj[b].upper_bound(b);\r\n            if(u==adj[b].end()){\r\n                if(temp.find(b)==temp.end()) {\r\n                    cnt++;\r\n                    temp.insert(b);\r\n                }\r\n            }\r\n        }else{\r\n            cout<<cnt<<endl;\r\n        }\r\n    }\r\n}\r\nint main(){\r\n    RR\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"in.txt\", \"r\", stdin);\r\n    freopen(\"out.txt\", \"w\", stdout);\r\n#endif\r\n    int t=1;\r\n//    cin>>t;\r\n    while (t--){\r\n        solve();\r\n    }\r\n}"
}