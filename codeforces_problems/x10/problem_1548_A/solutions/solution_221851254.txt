{
    "id": 221851254,
    "contestId": 1548,
    "creationTimeSeconds": 1693848918,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1548,
        "index": "A",
        "name": "Web of Lies",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1400,
        "tags": [
            "brute force",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1548,
        "members": [
            {
                "handle": "ahmedmus"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1627828500
    },
    "programmingLanguage": "Java 8",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "import java.util.Scanner;\r\nimport java.util.HashMap;\r\nimport java.util.Iterator;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\npublic class HelloWorld {\r\n    static class Query{\r\n        int type;\r\n        int u;\r\n        int v;\r\n    }\r\n    public static void main(String[] args) {\r\n       Scanner in = new Scanner(System.in);\r\n       int n = in.nextInt();\r\n       int f = in.nextInt();\r\n       int [] graph = new int [n + 1];\r\n       int countAlive = n;\r\n  \r\n        for (int i = 0;  i < f ; i++ ){\r\n            int u = in.nextInt();\r\n            int v = in.nextInt();\r\n            int test ;\r\n            if (u > v){\r\n                test = graph[v];\r\n                graph[v]++;\r\n\r\n            }else{\r\n                test = graph[u];\r\n                graph[u]++;\r\n             \r\n            }\r\n            if (test == 0){\r\n               countAlive--;\r\n            }\r\n            \r\n            \r\n        }\r\n        int q = in.nextInt();\r\n        HashMap<Integer , Integer> copiedGraph = null;\r\n      \r\n        int pointer = 0;\r\n       \r\n        for (int i = 0 ; i < q ; i ++){\r\n            int command = in.nextInt();\r\n            if (command == 1 || command == 2){\r\n              \r\n              int u = in.nextInt();\r\n              int v = in.nextInt();\r\n              int test = Math.min(u , v);\r\n              if (command == 1){\r\n                 \r\n                   int val = graph[test];\r\n                  \r\n                   if (val == 0){\r\n                      newCountAlive --;\r\n                  }\r\n                  graph[test]++;\r\n                  \r\n            \r\n                 \r\n                  \r\n                 \r\n              }\r\n              if (command == 2){\r\n                  int val = graph[test];\r\n                  \r\n                  \r\n                  if (val != 0){\r\n                  val--;\r\n\r\n                 graph[test]--;\r\n                   \r\n                  if (val == 0 ){\r\n                      newCountAlive ++;\r\n                  }\r\n                  }\r\n              }\r\n              \r\n            }\r\n            if (command == 3){\r\n            \r\n                 System.out.println(countAlive);\r\n                // copiedGraph = null;\r\n                // newCountAlive = countAlive;\r\n                \r\n                 \r\n                 \r\n            }\r\n        }\r\n       \r\n      \r\n    }\r\n   \r\n}"
}