{
    "id": 236300215,
    "contestId": 1676,
    "creationTimeSeconds": 1702021697,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1676,
        "index": "B",
        "name": "Equal Candies",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "greedy",
            "math",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1676,
        "members": [
            {
                "handle": "sasikalanalagatla"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1652193900
    },
    "programmingLanguage": "Java 17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 512000,
    "source": "import java.util.Arrays;\r\nimport java.util.Scanner;\r\n\r\npublic class CandyDistribution {\r\n\r\n    public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n        int t = scanner.nextInt(); // Number of test cases\r\n\r\n        while (t-- > 0) {\r\n            int n = scanner.nextInt(); // Number of boxes\r\n            int[] candies = new int[n];\r\n\r\n            // Input the quantity of candies in each box\r\n            for (int i = 0; i < n; i++) {\r\n                candies[i] = scanner.nextInt();\r\n            }\r\n\r\n            // Calculate the minimum number of candies to eat\r\n            int result = minimumCandiesToEat(candies);\r\n            System.out.println(result);\r\n        }\r\n    }\r\n\r\n    private static int minimumCandiesToEat(int[] candies) {\r\n        // Sort the array to easily find the median\r\n        Arrays.sort(candies);\r\n\r\n        // Calculate the median\r\n        int median = candies[candies.length / 2];\r\n\r\n        // Calculate the total number of candies to eat\r\n        int totalCandiesToEat = 0;\r\n        for (int i = 0; i < candies.length; i++) {\r\n            totalCandiesToEat += Math.abs(candies[i] - median);\r\n        }\r\n\r\n        return totalCandiesToEat;\r\n    }\r\n}\r\n"
}