{
    "id": 219718111,
    "contestId": 1278,
    "creationTimeSeconds": 1692560105,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1278,
        "index": "C",
        "name": "Berry Jam",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1278,
        "members": [
            {
                "handle": "rajipthakur01"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1576766100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace chrono;\r\nusing namespace __gnu_pbds;\r\n\r\ntemplate <typename T> using pbds = tree<T, null_type,less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n// find_by_order(K): Returns an iterator to the Kth largest element (counting from zero)\r\n// order_of_key (K): Returns the number of items that are strictly smaller than K\r\n\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double lld;\r\ntypedef vector<int> vi;\r\ntypedef vector<ll> vl;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, ll> pll;\r\ntypedef vector<pii> vii;\r\ntypedef vector<pll> vll;\r\ntypedef vector<vi> vvi;\r\ntypedef vector<vii> vvii;\r\ntypedef vector<vl> vvl;\r\n\r\n\r\n#define ff first\r\n#define ss second\r\n#define pb push_back\r\n#define mp make_pair\r\n#define all(x) x.begin(), x.end()\r\n#define rall(x) x.rbegin(), x.rend()\r\n#define sz(a) ((ll)a.size())\r\n#define each(seq) for (auto e : seq)\r\n#define acc(a) accumulate(all(a), 0ll)\r\n#define f0(i, n) for (ll i = 0; i < n; i++)\r\n#define f1(i, n) for (ll i = 1; i <= n; i++)\r\n#define google cout << \"Case #\" << i << \": \";\r\n#define M 1000000007\r\n#define MM 998244353\r\n#define PI 3.141592653589793238462\r\nconst ll inf=1e18;\r\nll popcount(ll t) {return __builtin_popcountll(t);}\r\nvoid setIO(string s) {\r\n    freopen((s + \".in\").c_str(), \"r\", stdin);\r\n    freopen((s + \".out\").c_str(), \"w\", stdout);\r\n}\r\n//Debug Template begin\r\nvoid _print(ll t) {cerr << t;}\r\nvoid _print(int t) {cerr << t;}\r\nvoid _print(string t) {cerr << t;}\r\nvoid _print(char t) {cerr << t;}\r\nvoid _print(lld t) {cerr << t;}\r\nvoid _print(double t) {cerr << t;}\r\nvoid _print(ull t) {cerr << t;}\r\n \r\ntemplate <class T, class V> void _print(pair <T, V> p);\r\ntemplate <class T> void _print(vector <T> v);\r\ntemplate <class T> void _print(set <T> v);\r\ntemplate <class T, class V> void _print(map <T, V> v);\r\ntemplate <class T> void _print(multiset <T> v);\r\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\r\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate<class T> void _print(pbds<T> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\n//Debug Template end\r\n\r\nvi dx = {0, 0, -1, 1}, dy = {-1, 1, 0, 0};\r\nvi dx2 = {1, 1, 0, -1, -1, -1, 0, 1}, dy2 = {0, 1, 1, 1, 0, -1, -1, -1};\r\n\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n/*---------------------------------------------------------------------------------------------------------------------------*/\r\nll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}\r\nll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}\r\nvoid extendgcd(ll a, ll b, ll*v) {if (b == 0) {v[0] = 1; v[1] = 10; v[2] = a; return ;} extendgcd(b, a % b, v); ll x = v[1]; v[1] = v[0] - v[1] * (a / b); v[0] = x; return;} //pass an arry of size1 3\r\nll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\r\nll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}\r\nll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}\r\nll mminv(ll a, ll b) {ll arr[3]; extendgcd(a, b, arr); return mod_add(arr[0], 0, b);} //for non prime b\r\nll mminvprime(ll a, ll b) {return expo(a, b - 2, b);}\r\nbool revsort(ll a, ll b) {return a > b;}\r\nll mod_div(ll a, ll b, ll m) {a = a % m; b = b % m; return (mod_mul(a, mminvprime(b, m), m) + m) % m;}  //only for prime m\r\nll combination(ll n, ll r, ll m, ll *fact, ll *ifact) {ll val1 = fact[n]; ll val2 = ifact[n - r]; ll val3 = ifact[r]; return (((val1 * val2) % m) * val3) % m;}\r\nvector<ll> sieve(int n) {int*arr = new int[n + 1](); vector<ll> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}\r\nll phin(ll n) {ll number = n; if (n % 2 == 0) {number /= 2; while (n % 2 == 0) n /= 2;} for (ll i = 3; i <= sqrt(n); i += 2) {if (n % i == 0) {while (n % i == 0)n /= i; number = (number / i * (i - 1));}} if (n > 1)number = (number / n * (n - 1)) ; return number;} //O(sqrt(N))\r\nll getRandomNumber(ll l, ll r) {return uniform_int_distribution<ll>(l, r)(rng);} \r\n/*--------------------------------------------------------------------------------------------------------------------------*/\r\n// map<ll,ll> dp;\r\n// ll getmin(vl &a,ll left,ll right,ll pcnt1,ll pcnt2,ll scnt1,ll scnt2){\r\n\r\n//         if(pcnt1+scnt1==pcnt2+scnt2) return 0;\r\n//         ll ans=inf;\r\n//         if(dp.find({left,right})!=dp.end()) return dp[{left,right}];\r\n//         //    cout<<pcnt1<<\" \"<<pcnt2<<\" \"<<scnt1<<\" \"<<scnt2<<\"\\n\";\r\n\r\n//         if(right<=a.size()-1){\r\n//             if(a[right]==1){\r\n//                 ans=min(ans,1+getmin(a,left,right+1,pcnt1,pcnt2,scnt1-1,scnt2));\r\n//             }else{\r\n//                 ans=min(ans,1+getmin(a,left,right+1,pcnt1,pcnt2,scnt1,scnt2-1));\r\n//             }\r\n//         }\r\n\r\n//         if(left>=1){\r\n//              if(a[left]==1){\r\n//                 ans=min(ans,1+getmin(a,left-1,right,pcnt1-1,pcnt2,scnt1,scnt2));\r\n//             }else{\r\n//                 ans=min(ans,1+getmin(a,left-1,right,pcnt1,pcnt2-1,scnt1,scnt2));\r\n//             }\r\n//         }\r\n\r\n//         return dp[{left,right}]= ans;\r\n// }\r\n\r\nvoid solve()\r\n{\r\n    ll n;\r\n    cin>>n;\r\n\r\n    /*\r\n        // red-blue=0\r\n        //dift=red-blue;\r\n\r\n        dift-difl-difr=0;\r\n        \r\n        rt-bt-rl+bl-rr+br=0;\r\n        rt-rl-rr=bt-bl-br\r\n        \r\n        dif-difl=difr\r\n\r\n    */\r\n\r\n    ll pcnt1=0,pcnt2=0,scnt1=0,scnt2=0;\r\n    vl a(2*n+1,0);\r\n\r\n    ll dif=0;\r\n\r\n   for(ll i=1;i<=2*n;i++){\r\n        cin>>a[i];\r\n        if(a[i]==1) dif++;\r\n        else dif--;\r\n   }\r\n\r\n    map<ll,ll> suff;\r\n    ll y=0;\r\n   for(int i=n+1;i<=2*n;i++){\r\n        if(a[i]==1) y++;\r\n        else y--;\r\n\r\n        if(suff.find(y)==suff.end()){\r\n            suff[y]=i;\r\n        }\r\n   }\r\n\r\n    ll ans=inf;\r\n\r\n    if(dif==0) ans=0;\r\n   \r\n\r\n    ll difl=0;\r\n    \r\n   for(int i=n;i>=1;i--){\r\n        if(a[i]==1) difl++;\r\n        else difl--;\r\n\r\n        ll difr=dif-difl;\r\n\r\n        if(suff.find(difr)!=suff.end()){\r\n            ans=min(ans,suff[difr]-i+1);\r\n        }\r\n   }\r\n\r\n   cout<<ans;\r\n\r\n  \r\n\r\n}\r\nint main()\r\n{\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    // setIO(\"\");\r\n    ll t=1;\r\n    cin >> t;\r\n    f1(i, t)\r\n    {\r\n        // google\r\n        solve();\r\n        cout << \"\\n\";\r\n    }\r\n    return 0;\r\n}"
}