{
    "id": 235322048,
    "contestId": 1278,
    "creationTimeSeconds": 1701494836,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1278,
        "index": "C",
        "name": "Berry Jam",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1278,
        "members": [
            {
                "handle": "vanshu05"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1576766100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 8192000,
    "source": "#include \"bits/stdc++.h\"\r\n#include<cmath>\r\n#define ll  long long\r\n#define uint unsigned long long\r\n#define vi vector<int>\r\n#define vvi vector<vi >\r\n#define vb vector<bool>\r\n#define vvb vector<vb >\r\n#define fr(i,n) for(int i=0; i<(n); i++)\r\n#define rep(i,a,n) for(int i=(a); i<(n); i++)\r\n#define nl cout<<\"\\n\"\r\n#define dbg(var) cout<<#var<<\"=\"<<var<<\" \"\r\n#define all(v) v.begin(),v.end()\r\n#define sz(v) (int)(v.size())\r\n#define srt(v)  sort(v.begin(),v.end())         // sort \r\n#define mxe(v)  *max_element(v.begin(),v.end())     // find max element in vector\r\n#define mne(v)  *min_element(v.begin(),v.end())     // find min element in vector\r\n#define unq(v)  v.resize(distance(v.begin(), unique(v.begin(), v.end())));\r\n// make sure to sort before applying unique // else only consecutive duplicates would be removed \r\nusing namespace std;\r\ntypedef pair<int, int> pi;\r\nint MOD=1e9+7;      // Hardcoded, directly change from here for functions!\r\n\r\n\r\n\r\n// ================================== take ip/op like vector,pairs directly!==================================\r\ntemplate<typename typC,typename typD> istream &operator>>(istream &cin,pair<typC,typD> &a) { return cin>>a.first>>a.second; }\r\ntemplate<typename typC> istream &operator>>(istream &cin,vector<typC> &a) { for (auto &x:a) cin>>x; return cin; }\r\ntemplate<typename typC,typename typD> ostream &operator<<(ostream &cout,const pair<typC,typD> &a) { return cout<<a.first<<' '<<a.second; }\r\ntemplate<typename typC,typename typD> ostream &operator<<(ostream &cout,const vector<pair<typC,typD>> &a) { for (auto &x:a) cout<<x<<'\\n'; return cout; }\r\ntemplate<typename typC> ostream &operator<<(ostream &cout,const vector<typC> &a) { int n=a.size(); if (!n) return cout; cout<<a[0]; for (int i=1; i<n; i++) cout<<' '<<a[i]; return cout; }\r\n// ===================================END Of the input module ==========================================\r\n\r\n\r\n\r\n//==================================== compute higher powers with mod ===================================\r\nuint power(int x, int y, int p =  MOD)\r\n{\r\n    unsigned long long res = 1;\r\n\r\n    x = x % p;\r\n    while (y > 0)\r\n    {\r\n\r\n        if (y & 1)\r\n            res = (res * x) % p;\r\n\r\n        y = y >> 1;\r\n        x = (x * x) % p;\r\n    }\r\n    return res;\r\n}\r\n\r\n// =============================================================================================================\r\n\r\nuint modInverse(int n, int p=MOD)       // using fermats little thm. [p needs to be prime which is mostly the case as mod value generally is 1e9+7]\r\n{\r\n    return power(n, p - 2, p);\r\n}\r\n// can also derive this using extended euclidean... however this has a much simpler code....\r\n\r\n\r\n// =========================================Used to calculate nCr of higher values ===================================\r\nuint nCr(int n, int r, int p=MOD)     // faster calculation.. \r\n{\r\n    if (n < r)\r\n        return 0;\r\n\r\n    if (r == 0)\r\n        return 1;\r\n        \r\n    vector<int> fac(n+1,0);\r\n    fac[0] = 1;\r\n    for (int i = 1; i <= n; i++)\r\n        fac[i] = (fac[i - 1] * i) % p;\r\n\r\n    return (fac[n] * modInverse(fac[r], p) % p * modInverse(fac[n - r], p) % p) % p;\r\n}\r\n\r\n\r\n// ==================================BINARY SEARCH MODULE=========================================\r\nbool poss(int mid,vector<int>& arr){        // evaludate the condition!\r\n    if(mid)   return mid;\r\n    return 1;\r\n}\r\n\r\nint BinSearch(vector<int>& arr ,int lo,int hi, bool pos=1){      // pos means find max ...\r\n    int res=-1;\r\n    while(lo<=hi){\r\n        int mid=(lo+hi+1)/2;\r\n        if(poss(mid,arr)){\r\n            res=mid;\r\n            if(pos)    lo=mid+1;\r\n            else hi=mid-1;\r\n        }\r\n        else{\r\n            if(pos)    hi=mid-1;\r\n            else lo=mid+1;\r\n        }\r\n    }\r\n    return res;\r\n}\r\n// =====================================END of BinSearch Module=========================================\r\n/// ====================================PRIME utility ==================================================\r\n// int sz=1e6+5;\r\n// bool PrimeSieve[1000005];   // 1e6+5\r\n// void buildSieve(){\r\n//     for(int i=2;i<=sz;i++)    PrimeSieve[i]=1;\r\n//     PrimeSieve[0]=0;// \r\n//     PrimeSieve[1]=0;    // 1 is neither prime nor composite \r\n//     for(int i=2;i<sz;i++){\r\n//         if(PrimeSieve[i]==0)    continue;       // the current number itself is composite \r\n//         for(int j=2;j*i<sz;j++){\r\n//             PrimeSieve[i*j]=0;\r\n//         }\r\n//     }\r\n// }\r\n// add SieveOfEratosthenes\r\n// add isPrime ad\r\nint  isPrime(int n){\r\n     if(n==2 || n==3) return -1;\r\n     for(int i=2;i<=sqrt(n);i++){\r\n        if(n%i==0) return i;\r\n     }\r\n     return -1;\r\n}\r\n\r\n\r\n/// ====================================PRIME utility ENDS here=========================================\r\n\r\nvoid jai_shri_ram() {\r\nint n;\r\ncin>>n;\r\nvi a(2*n);\r\ncin>>a;\r\nvi v(2*n);\r\nint x=0;\r\nmap<int,int>map,map1;\r\nfor(int i=n-1;i>=0;i--){\r\n    if(a[i]==1) x++;\r\n    else x--;\r\n    v[i]=x;\r\n    if(map1.find(x)==map1.end()) map1[x]=i;\r\n}\r\nint y=0;\r\nfor(int i=n;i<2*n;i++){\r\n    if(a[i]==1) y++;\r\n    else y--;\r\n    v[i]=y;\r\n    if(map.find(y)==map.end()) map[y]=i;\r\n}\r\nif(x+y==0){\r\n    cout<<\"0\"<<endl;\r\n    return;\r\n}\r\n//cout<<x<<\" \"<<y<<\" \";-\r\nint ans=2*n;\r\nfor(int i=n-1;i>=0;i--){\r\n    int sum=(x+y);\r\n    if(v[i]==sum){\r\n        ans=min(ans,n-i);\r\n\r\n    }\r\n    else{\r\n        if(map.find(sum-v[i])==map.end()) continue;\r\n        else{\r\n            ans=min(ans,-i+1+map[sum-v[i]]);\r\n        }\r\n    }\r\n   // cout<<ans<<\" \"<<i<<endl;\r\n}\r\n//cout<<ans<<\" \";\r\nfor(int i=n;i<2*n;i++){\r\n    int sum=(x+y);\r\n    if(v[i]==sum){\r\n        ans=min(ans,i-n+1);\r\n\r\n    }\r\n    else{\r\n        if(map1.find(sum-v[i])==map1.end()) continue;\r\n        else{\r\n            ans=min(ans,i+1-map1[sum-v[i]]);\r\n        }\r\n    }\r\n  //  cout<<ans<<\" \";\r\n}\r\ncout<<ans<<endl;\r\n}\r\n\r\n\r\nint main(){\r\n ios_base::sync_with_stdio(false);\r\n cin.tie(NULL);\r\n int t=1;\r\n cin>>t;\r\n \r\n   while(t--){\r\n  jai_shri_ram();\r\n   }\r\n    return 0;\r\n}"
}