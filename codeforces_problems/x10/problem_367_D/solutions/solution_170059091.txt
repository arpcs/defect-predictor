{
    "id": 170059091,
    "contestId": 367,
    "creationTimeSeconds": 1661775574,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 367,
        "index": "D",
        "name": "Sereja and Sets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "bitmasks",
            "dfs and similar"
        ]
    },
    "author": {
        "contestId": 367,
        "members": [
            {
                "handle": "Abdelrahim303"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1385479800
    },
    "programmingLanguage": "Java 11",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 0,
    "source": "\r\nimport java.util.*;\r\nimport java.io.*;\r\npublic class Test {\r\n\r\nstatic int [][] dp;\r\n\r\n    public static void main(String[] args)throws Exception {\r\n       // PrintWriter pw = new PrintWriter(\"C:\\\\Users\\\\DELL\\\\IdeaProjects\\\\oop\\\\src\\\\output2.txt\", \"UTF-8\");\r\n        //Scanner sc = new Scanner(new File(\"C:\\\\Users\\\\DELL\\\\Desktop\\\\second_flight_input.txt\"));\r\n\r\n         Scanner sc= new Scanner(System.in);\r\n         PrintWriter pw= new PrintWriter(System.out);\r\n\r\n\r\n\r\n        int t = 1;// sc.nextInt();\r\n        while (t-- > 0) {\r\n\r\n            int n = sc.nextInt();\r\n            int m =sc.nextInt();\r\n            char grid [][] = new char [n][m];\r\n\r\n            for (int i =0;i<n;i++){\r\n                grid[i]=sc.next().toCharArray();\r\n            }\r\n         int ans=0;\r\n            int dp[][]= new int [m][n];\r\n            for (int j=0;j<m;j++){\r\n                for (int i=0;i<n;i++)\r\n                    if (grid[i][j]=='1')\r\n                        dp[j][i]= 1+((j>0)? dp[j-1][i]:0);\r\n\r\n            }\r\n            for (int j=0;j<m;j++){\r\n                Arrays.sort(dp[j]);\r\n                for (int i=0;i<n;i++){\r\n                    ans = Math.max(ans,dp[j][i]*(n-i));\r\n                }\r\n            }\r\n            pw.println(ans);\r\n\r\n\r\n\r\n            }\r\n\r\n            pw.close();\r\n\r\n        }\r\n\r\n\r\n\r\n}\r\n"
}