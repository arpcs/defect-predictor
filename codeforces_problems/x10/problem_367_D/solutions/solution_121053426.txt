{
    "id": 121053426,
    "contestId": 367,
    "creationTimeSeconds": 1625166413,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 367,
        "index": "D",
        "name": "Sereja and Sets",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "bitmasks",
            "dfs and similar"
        ]
    },
    "author": {
        "contestId": 367,
        "members": [
            {
                "handle": "BucketPotato"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1385479800
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 7372800,
    "source": "#include <iostream>\n#include <set>\n#include <queue>\n\nusing namespace std;\n\n#define MAXN 100100\n#define MAXM 21\n\nint n, d, m;\nset<int> bad;\nmultiset<int> curr;\nint which[MAXN];\nbool ok[1 << MAXM];\n\nint nbits(int a) {\n\tint res = 0;\n\tfor (int j = 0; j < m; j++)\n\t\tif (a & (1 << j))\n\t\t\tres++;\n\treturn res;\n}\n\nint main() {\n\n\tscanf(\" %d%d%d\", &n, &m, &d);\n\tfor (int i = 0; i < m; i++) {\n\t\tint v; scanf(\" %d\", &v);\n\t\tfor (int j = 0; j < v; j++) {\n\t\t\tint c; scanf(\" %d\", &c);\n\t\t\twhich[c - 1] = i;\n\t\t}\n\t}\n\n\tfor (int i = 0; i < d; i++)\n\t\tcurr.insert(which[i]);\n\n\tfor (int i = d; i <= n; i++) {\n\n\t\tint tone = 0;\n\t\tfor (int j = 0; j < m; j++)\n\t\t\tif (curr.count(j)) {\n\t\t\t\t// cout << \" have \" << j;\n\t\t\t\ttone += (1 << j);\n\t\t\t}\n\t\t// cout << endl;\n\n\t\tbad.insert((1 << m) - tone - 1);\n\n\t\tif (i == n) break;\n\n\t\tcurr.erase(curr.find(which[i - d]));\n\t\tcurr.insert(which[i]);\n\t}\n\n\tfor (int i = 0; i < (1 << m); i++)\n\t\tok[i] = true;\n\n\tqueue<int> curr;\n\n\tfor (int i : bad)\n\t\tcurr.push(i), ok[i] = false;\n\n\twhile (curr.size()) {\n\n\t\tint cv = curr.front();\n\t\tcurr.pop();\n\n\t\tfor (int i = 0; i < m; i++) {\n\t\t\tif (!(cv & (1 << i))) continue;\n\t\t\tint nv = cv - (1 << i);\n\t\t\tif (ok[nv]) {\n\t\t\t\tok[nv] = false;\n\t\t\t\tcurr.push(nv);\n\t\t\t}\n\t\t}\n\t}\n\n\tint ans = m;\n\tfor (int i = 0; i < (1 << m); i++)\n\t\tif (ok[i])\n\t\t\tans = min(ans, nbits(i));\n\tprintf(\"%d\\n\", ans);\n\n}"
}