{
    "id": 212157398,
    "contestId": 721,
    "creationTimeSeconds": 1688521565,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "B",
        "name": "Passwords",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1100,
        "tags": [
            "implementation",
            "math",
            "sortings",
            "strings"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "nguyen60c"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "JavaScript",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "var firstInput = readline().split(\" \").map(Number);\r\nvar n = firstInput[0];\r\nvar k = firstInput[1];\r\nvar correctPsw = \"\";\r\nvar input = [];\r\nfor (var i = 0; i < n; i++) {\r\n    var item = readline();\r\n    input.push(item);\r\n    print(i)\r\n}\r\ncorrectPsw = readline();\r\n\r\nvar bestWrongAttempts = 0;\r\nvar worstWrongAttempts = 0;\r\n\r\nvar arr = [];\r\n// loop and assign items to array\r\nfor (var i = 0; i < input.length; i++) {\r\n  arr[i] = 0;\r\n}\r\n\r\n// get number of wrong attempts\r\nfor (var i = 0; i < input.length; i++) {\r\n  arr[input[i].length] += 1;\r\n}\r\n\r\nfor (var i = 0; i < arr.length; i++) {\r\n  if (arr[i] > 0) {\r\n    if (i < correctPsw.length) {\r\n      bestWrongAttempts += arr[i];\r\n    }else{\r\n      worstWrongAttempts += arr[i];\r\n    }\r\n  }\r\n}\r\nbestWrongAttempts = bestWrongAttempts -1;\r\nvar bestCase =\r\n  bestWrongAttempts + Math.floor(bestWrongAttempts / firstInput[1]) * 5 + 1;\r\n  print(input.length, (input.length - 1) / firstInput[1], 1)\r\nvar worstCase =\r\n  worstWrongAttempts + bestWrongAttempts + Math.floor((worstWrongAttempts + bestWrongAttempts) / firstInput[1]) * 5 + 1;\r\nprint(bestCase, worstCase);\r\n"
}