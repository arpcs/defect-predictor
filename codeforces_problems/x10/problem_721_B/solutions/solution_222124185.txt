{
    "id": 222124185,
    "contestId": 721,
    "creationTimeSeconds": 1694024972,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 721,
        "index": "B",
        "name": "Passwords",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1100,
        "tags": [
            "implementation",
            "math",
            "sortings",
            "strings"
        ]
    },
    "author": {
        "contestId": 721,
        "members": [
            {
                "handle": "Durjoy_JUST"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475244300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 66,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "/*\r\n\r\n     Begin in the name of GOD!\r\n     Durjoy's code...\r\n\r\n*/\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define go_fast ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\r\n#define fl(i, a, n) for (int i = a; i < n; i++)\r\n#define fll(i, n, a) for (int i = n; i >= a; i--)\r\n#define ll long long\r\n#define nl '\\n'\r\n#define yes cout << \"YES\" << nl\r\n#define no cout << \"NO\" << nl\r\nconst ll MOD = 1e9 + 7;\r\n\r\nvoid solve()\r\n{\r\n      int n, k;\r\n      cin >> n >> k;\r\n\r\n      vector<int> len(n);\r\n      len.clear();\r\n\r\n      string s;\r\n\r\n      for(int i = 0; i < n; i++)\r\n      {\r\n        cin >> s;\r\n\r\n        len.push_back(s.size());\r\n      }\r\n\r\n      cin >> s;\r\n\r\n      int take = s.size();\r\n\r\n      sort(len.begin(), len.end());\r\n\r\n      int best = -1, worst = -1;\r\n\r\n      for(int i = 0; i < n; i++)\r\n      {\r\n        if(len[i] == take)\r\n        {\r\n            worst = i + 1;\r\n        }\r\n      }\r\n\r\n      for(int i = n - 1; i >= 0; i--)\r\n      {\r\n        if(len[i] == take)\r\n        {\r\n            best = i + 1;\r\n        }\r\n      }\r\n\r\n      best = best + ((best - 1) / k) * 5;\r\n      worst = worst + ((worst - 1) / k) * 5;\r\n\r\n      cout << best << \" \" << worst;\r\n}\r\n\r\nint main()\r\n{\r\n\r\n    go_fast;\r\n\r\n    // int t, q = 0;\r\n    // cin >> t;\r\n\r\n    // while (t--)\r\n    // {\r\n        solve();\r\n    // }\r\n\r\n    return 0;\r\n}"
}