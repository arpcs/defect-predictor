{
    "id": 227310427,
    "contestId": 914,
    "creationTimeSeconds": 1696849666,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 914,
        "index": "G",
        "name": "Sum the Fibonacci",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 2600,
        "tags": [
            "bitmasks",
            "divide and conquer",
            "dp",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 914,
        "members": [
            {
                "handle": "FLAME."
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1516462500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 170,
    "timeConsumedMillis": 2355,
    "memoryConsumedBytes": 54681600,
    "source": "// LUOGU_RID: 128436649\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nconst int K=19,lK=18,N=(1<<lK)+5,lN=(1<<lK),mod=1e9+7,inv2=5e8+4;\r\nint cnt[N],Fib[N],n,A[N],B[N],C[N],F[K][N],H[N],Ans[N],Res;\r\nvoid FWTor(int* F,int Case){\r\n\tfor(int Len=1;Len<lN;Len<<=1){\r\n\t\tfor(int i=0;i<lN;i+=(Len<<1)){\r\n\t\t\tfor(int j=0;j<Len;j++){\r\n\t\t\t\tF[i+j+Len]=(F[i+j+Len]+F[i+j]*Case+mod)%mod;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nvoid FWTand(int* F,int Case){\r\n\tfor(int Len=1;Len<lN;Len<<=1){\r\n\t\tfor(int i=0;i<lN;i+=(Len<<1)){\r\n\t\t\tfor(int j=0;j<Len;j++){\r\n\t\t\t\tF[i+j]=(F[i+j]+F[i+j+Len]*Case+mod)%mod;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nvoid FWTxor(int* F,int Case){\r\n\tfor(int Len=1;Len<lN;Len<<=1){\r\n\t\tfor(int i=0;i<lN;i+=(Len<<1)){\r\n\t\t\tfor(int j=0;j<Len;j++){\r\n\t\t\t\tint x=F[i+j],y=F[i+j+Len];\r\n\t\t\t\tF[i+j]=(x+y)%mod;F[i+j+Len]=(x-y+mod)%mod;\r\n\t\t\t\tif(Case==-1)F[i+j]=F[i+j]*inv2%mod,F[i+j+Len]=F[i+j+Len]*inv2%mod;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nvoid Init(){\r\n\tfor(int i=1;i<lN;i++)cnt[i]=cnt[i>>1]+(i&1);Fib[0]=0,Fib[1]=1;\r\n\tfor(int i=2;i<lN;i++)Fib[i]=(Fib[i-1]+Fib[i-2])%mod;\r\n}\r\nvoid WorkA(){\r\n\tfor(int i=0;i<lN;i++)F[cnt[i]][i]=A[i],A[i]=0;\r\n\tfor(int i=0;i<K;i++)FWTor(F[i],1);\r\n\tfor(int i=0;i<K;i++){\r\n\t\tfor(int j=0;j<lN;j++)H[j]=0;\r\n\t\tfor(int j=0;j<=i;j++){\r\n\t\t\tfor(int k=0;k<lN;k++){\r\n\t\t\t\tH[k]=(H[k]+F[j][k]*F[i-j][k]%mod)%mod;\r\n\t\t\t}\r\n\t\t}FWTor(H,-1);\r\n\t\tfor(int j=0;j<lN;j++)if(cnt[j]==i)A[j]=(A[j]+H[j])%mod;\r\n\t}\r\n}\r\nvoid WorkC(){\r\n\tFWTxor(C,1);\r\n\tfor(int i=0;i<lN;i++)C[i]=C[i]*C[i]%mod;\r\n\tFWTxor(C,-1);\r\n}\r\nsigned main(){\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0);cout.tie(0);Init();cin>>n;\r\n\tfor(int i=1,x;i<=n;i++)cin>>x,A[x]++,B[x]++,C[x]++;\r\n\tWorkA();WorkC();for(int i=0;i<lN;i++)A[i]=A[i]*Fib[i]%mod,B[i]=B[i]*Fib[i]%mod,C[i]=C[i]*Fib[i]%mod;\r\n\tFWTand(A,1),FWTand(B,1);FWTand(C,1);for(int i=0;i<lN;i++)Ans[i]=A[i]*B[i]%mod*C[i]%mod;FWTand(Ans,-1);\r\n\tfor(int i=1;i<lN;i<<=1)Res=(Res+Ans[i])%mod;cout<<Res;\r\n\treturn 0;\r\n}"
}