{
    "id": 224199277,
    "contestId": 914,
    "creationTimeSeconds": 1695227865,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 914,
        "index": "G",
        "name": "Sum the Fibonacci",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 2600,
        "tags": [
            "bitmasks",
            "divide and conquer",
            "dp",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 914,
        "members": [
            {
                "handle": "shakib"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1516462500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 170,
    "timeConsumedMillis": 2698,
    "memoryConsumedBytes": 5222400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define ll long long\r\n#define cpy(x, y, s) memcpy(x, y, sizeof(x[0]) * (s))\r\n\r\nconst int N = 1 << 17;\r\nconst int mod = 1e9 + 7;\r\n\r\nll n, ans, f[N], x[N], y[N], z[N], fib[N];\r\nvoid AND(ll *f, ll op)\r\n{\r\n    for (int d = 2, k = 1; k < N; k <<= 1, d <<= 1)\r\n        for (int i = 0; i < N; i += d)\r\n            for (int j = 0; j < k; j++)\r\n                f[i | j] = (f[i | j] + op * f[i | j | k] + mod) % mod;\r\n}\r\nvoid XOR(ll *f, ll op)\r\n{\r\n    for (int d = 2, k = 1; k < N; k <<= 1, d <<= 1)\r\n        for (int i = 0; i < N; i += d)\r\n            for (int j = 0; j < k; j++)\r\n                f[i | j] = f[i | j] + f[i | j | k],\r\n                      f[i | j | k] = f[i | j] - f[i | j | k] - f[i | j | k],\r\n                      f[i | j] = f[i | j] * op % mod,\r\n                      f[i | j | k] = f[i | j | k] * op % mod;\r\n}\r\nvoid mul(ll *f, ll *g)\r\n{\r\n    for (int i = 0; i < N; i++)\r\n        f[i] = f[i] * g[i] % mod;\r\n}\r\n\r\nint main()\r\n{\r\n    cin >> n, fib[1] = 1;\r\n    for (int i = 2; i < N; i++)\r\n        fib[i] = (fib[i - 1] + fib[i - 2]) % mod;\r\n    for (int i = 1, s; i <= n; i++)\r\n        cin >> s, f[s]++;\r\n    for (ll i = 1, t = 0; i < N; i++, t = 0)\r\n        for (int j = i;; j = (j - 1) & i)\r\n        {\r\n            t = (t + f[j] * f[i ^ j]) % mod;\r\n            if (j == 0)\r\n            {\r\n                x[i] = t;\r\n                break;\r\n            }\r\n        }\r\n    cpy(y, f, N), cpy(z, f, N), XOR(y, 1), mul(y, y), XOR(y, mod + 1 >> 1);\r\n    for (int i = 0; i < N; i++)\r\n        x[i] = x[i] * fib[i] % mod, y[i] = y[i] * fib[i] % mod, z[i] = z[i] * fib[i] % mod;\r\n    AND(x, 1), AND(y, 1), AND(z, 1), mul(x, y), mul(x, z), AND(x, -1);\r\n    for (int i = 1; i < N; i <<= 1)\r\n        ans = (ans + x[i]) % mod;\r\n    cout << ans << endl;\r\n    return 0;\r\n}"
}