{
    "id": 225225205,
    "contestId": 914,
    "creationTimeSeconds": 1695715004,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 914,
        "index": "G",
        "name": "Sum the Fibonacci",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 2600,
        "tags": [
            "bitmasks",
            "divide and conquer",
            "dp",
            "fft",
            "math"
        ]
    },
    "author": {
        "contestId": 914,
        "members": [
            {
                "handle": "FreshOrange"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1516462500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 467,
    "memoryConsumedBytes": 45158400,
    "source": "// LUOGU_RID: 126186421\n#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int N=1<<17|1,M=1e6+10;\r\nconst int mod=1e9+7,inv2=500000004;\r\ntypedef long long E;\r\n\r\nvoid px(E *a,E *b,int n){\r\n  for(int i=0; i<n; i++) a[i]=a[i]*b[i]%mod;\r\n}\r\n\r\nvoid FWTAND(E *a,int n,int op){\r\n  for(int len=2,o=1; len<=n; len<<=1,o<<=1){\r\n    for(int pos=0; pos<n; pos+=len){\r\n      for(int j=0; j<o; j++){\r\n        a[pos+j]=(a[pos+j]+a[pos+j+o]*op%mod)%mod;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nvoid FWTOR(E *a,int n,int op){\r\n  for(int len=2,o=1; len<=n; len<<=1,o<<=1){\r\n    for(int pos=0; pos<n; pos+=len){\r\n      for(int j=0; j<o; j++){\r\n        a[pos+j+o]=(a[pos+j+o]+op*a[pos+j]%mod)%mod;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nvoid FWTXOR(E *a,int n,int op){\r\n  for(int len=2,o=1; len<=n; len<<=1,o<<=1){\r\n    for(int pos=0; pos<n; pos+=len){\r\n      for(int j=0; j<o; j++){\r\n        a[j+pos]=(a[j+pos]+a[j+pos+o])%mod;\r\n        a[j+pos+o]=(a[j+pos]-a[j+pos+o]-a[j+pos+o])%mod;\r\n        a[j+pos]=a[j+pos]*op%mod;\r\n        a[j+pos+o]=a[j+pos+o]*op%mod;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n#define cpy(f,g,n) memcpy(f,g,sizeof(E)*n)\r\n\r\nE a[18][N],b[18][N],f[N],g[N],p[N],u[N];\r\nint n;\r\nE fib[N],val[N],cnt[N];\r\n\r\nint main(){\r\n\r\n  cin>>n;\r\n  fib[0]=0,fib[1]=1;\r\n  for(int i=2; i<=(1<<17); i++) fib[i]=(fib[i-1]+fib[i-2])%mod;\r\n  for(int i=1; i<=n; i++){\r\n    scanf(\"%lld\",val+i);\r\n    cnt[val[i]]++;\r\n    f[val[i]]++;\r\n    a[__builtin_popcount(val[i])][val[i]]++;\r\n  }\r\n\r\n  int t=(1<<17);\r\n  FWTXOR(f,t,1);\r\n  for(int i=0; i<t; i++) f[i]=f[i]*f[i]%mod;\r\n  FWTXOR(f,t,inv2);\r\n  for(int i=0; i<=17; i++){\r\n    FWTOR(a[i],t,1);\r\n  }\r\n  for(int i=0; i<=17; i++){\r\n    for(int j=0; j<=i; j++){\r\n      for(int k=0; k<t; k++){\r\n        b[i][k]=(b[i][k]+a[j][k]*a[i-j][k]%mod)%mod;\r\n      }\r\n    }\r\n  }\r\n\r\n  for(int i=0; i<=17; i++){\r\n    FWTOR(b[i],t,-1);\r\n  }\r\n\r\n  for(int i=0; i<t; i++){\r\n    g[i]=fib[i]*b[__builtin_popcount(i)][i]%mod;\r\n    p[i]=fib[i]*cnt[i]%mod;\r\n    u[i]=fib[i]*f[i]%mod;\r\n  }\r\n\r\n  FWTAND(g,t,1),FWTAND(p,t,1),FWTAND(u,t,1);\r\n  for(int i=0; i<t; i++) g[i]=g[i]*p[i]%mod*u[i]%mod;\r\n  FWTAND(g,t,-1);\r\n\r\n  E ans=0;\r\n  for(int i=1; i<=t; i<<=1){\r\n    ans=(ans+g[i])%mod;\r\n  }\r\n\r\n  cout<<(ans+mod)%mod<<endl;\r\n\r\n  return 0;\r\n}\r\n"
}