{
    "id": 209610058,
    "contestId": 955,
    "creationTimeSeconds": 1686690851,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 955,
        "index": "F",
        "name": "Heaps",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2600,
        "tags": [
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 955,
        "members": [
            {
                "handle": "tvladm"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1521822900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n///#pragma GCC target (\"sse4.2\")\r\n\r\n///#pragma GCC optimize(\"O1\")\r\n///#pragma GCC optimize(\"O2\")\r\n\r\n///#pragma GCC optimize(\"O3\")\r\n///#pragma GCC optimize(\"Os\")\r\n///#pragma GCC optimize(\"Ofast\")\r\n///#pragma GCC target(\"avx,avx2,fma\")\r\n\r\n///#pragma GCC target(\"avx2\")\r\n\r\nusing namespace std;\r\n\r\nbool home = 1;\r\n#define int ll\r\n\r\ntypedef long long ll;\r\nconst int N = (int) 3e5 + 7;\r\nconst int M = 20;\r\nint dep[N], down[N], dp[N][M];\r\nvector<int> g[N];\r\nint n;\r\n\r\nvoid dfs1(int a, int p = -1) {\r\n  down[a] = 1;\r\n  vector<int> kids;\r\n  for (auto &b : g[a]) {\r\n    if (b != p) {\r\n      kids.push_back(b);\r\n      dep[b] = 1 + dep[a];\r\n      dfs1(b, a);\r\n      down[a] = max(down[a], down[b] + 1);\r\n    }\r\n  }\r\n  g[a] = kids;\r\n  for (int j = 0; j < M; j++) {\r\n    dp[a][j] = -1;\r\n  }\r\n}\r\n\r\nvoid dfs2(int a) {\r\n  dp[a][1] = n;\r\n  for (auto &b : g[a]) dfs2(b);\r\n  for (int h = 2; h < M; h++) {\r\n    vector<int> kek;\r\n    for (auto &b : g[a]) {\r\n      kek.push_back(dp[b][h - 1]);\r\n    }\r\n    sort(kek.begin(), kek.end());\r\n    for (int k = 1; k <= (int) g[a].size(); k++) {\r\n      if (k <= kek[k - 1]) {\r\n        dp[a][h] = k;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nvoid dfs3(int a) {\r\n  for (auto &b : g[a]) {\r\n    dfs3(b);\r\n    for (int h = 1; h < M; h++) {\r\n      dp[a][h] = max(dp[a][h], dp[b][h]);\r\n    }\r\n  }\r\n}\r\n\r\nint main() {\r\n#ifdef ONLINE_JUDGE\r\n  home = 0;\r\n#endif\r\n\r\n  if (home) {\r\n    freopen(\"I_am_iron_man\", \"r\", stdin);\r\n  }\r\n  else {\r\n    ios::sync_with_stdio(0); cin.tie(0);\r\n  }\r\n\r\n  cin >> n;\r\n  for (int i = 1; i < n; i++) {\r\n    int x, y;\r\n    cin >> x >> y;\r\n    g[x].push_back(y);\r\n    g[y].push_back(x);\r\n  }\r\n  dep[1] = 1;\r\n  dfs1(1);\r\n  ll ret = 0;\r\n  for (int i = 1; i <= n; i++) {\r\n    ret += down[i];\r\n  }\r\n  dfs2(1);\r\n  dfs3(1);\r\n  for (int i = 1; i <= n; i++) {\r\n    int last = 1;\r\n    for (int h = M - 1; h >= 1; h--) {\r\n      if (dp[i][h] != -1) {\r\n        ret += (dp[i][h] - last) * h;\r\n        last = dp[i][h];\r\n      }\r\n    }\r\n  }\r\n  cout << ret << \"\\n\";\r\n  return 0;\r\n}\r\n"
}