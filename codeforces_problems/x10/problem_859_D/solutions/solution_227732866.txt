{
    "id": 227732866,
    "contestId": 859,
    "creationTimeSeconds": 1697055438,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 859,
        "index": "D",
        "name": "Third Month Insanity",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "dp",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 859,
        "members": [
            {
                "handle": "Gamal74"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1505583300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, ll> pll;\r\ntypedef vector<int> vi;\r\n\r\n#define fi first\r\n#define se second\r\n#define pp push_back\r\n#define all(x) (x).begin(), (x).end()\r\n#define Ones(n) __builtin_popcount(n)\r\n#define endl '\\n'\r\n#define mem(arrr, xx) memset(arrr,xx,sizeof arrr)\r\n//#define int long long\r\n#define debug(x) cout << (#x) << \" = \" << x << endl\r\n\r\nvoid Gamal() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n#ifdef Clion\r\n    freopen(\"input.txt\", \"r\", stdin), freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n}\r\n\r\nint dx[] = {+0, +0, -1, +1, +1, +1, -1, -1};\r\nint dy[] = {-1, +1, +0, +0, +1, -1, +1, -1};\r\n\r\nconst double EPS = 1e-9;\r\nconst ll OO = 0X3F3F3F3F3F3F3F3F;\r\nconst int N = 2e5 + 5, INF = INT_MAX, MOD = 1e9 + 7, LOG = 20;\r\n\r\n\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n    vector<vector<double>> g(1 << n, vector<double>(1 << n));\r\n    for (int i = 0; i < 1 << n; ++i) {\r\n        for (int j = 0; j < 1 << n; ++j) {\r\n            cin >> g[i][j];\r\n            g[i][j] /= 100;\r\n        }\r\n    }\r\n\r\n    vector<vector<double>> win(1 << n, vector<double>(n + 1));\r\n    for (int i = 0; i < 1 << n; ++i)win[i][0] = 1;\r\n    \r\n    for (int rwnd = 1; rwnd <= n; ++rwnd) {\r\n        for (int i = 0; i < 1 << n; ++i) {\r\n            for (int p = 0; p < 1 << n; ++p) {\r\n                if (i / (1 << rwnd) != p / (1 << rwnd))continue;\r\n                if (i / (1 << (rwnd - 1)) == p / (1 << (rwnd - 1)))continue;\r\n                win[i][rwnd] += g[i][p] * win[i][rwnd - 1] * win[p][rwnd - 1];\r\n            }\r\n        }\r\n    }\r\n    int root = 0;\r\n    for (int i = 0; i < 1 << n; ++i) {\r\n        if (win[i][n] > win[root][n])\r\n            root = i;\r\n    }\r\n\r\n    auto dfs = [&](auto dfs, int u, int rwnd) {\r\n        double ret = win[u][rwnd] * ((1 << (rwnd - 1)));\r\n        if (rwnd == 1)return ret;\r\n        int best = -1;\r\n        for (int p = 0; p < 1 << n; ++p) {\r\n            if (u / (1 << rwnd) != p / (1 << rwnd))continue;\r\n            if (u / (1 << (rwnd - 1)) == p / (1 << (rwnd - 1)))continue;\r\n            if (best == -1 || win[p][rwnd - 1] > win[best][rwnd - 1])\r\n                best = p;\r\n        }\r\n        ret += dfs(dfs, best, rwnd - 1);\r\n        ret += dfs(dfs, u, rwnd - 1);\r\n        return ret;\r\n    };\r\n\r\n\r\n    cout << fixed << setprecision(10) << dfs(dfs, root, n);\r\n}\r\n\r\n\r\nsigned main() {\r\n    Gamal();\r\n    int t = 1;\r\n//    cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n}"
}