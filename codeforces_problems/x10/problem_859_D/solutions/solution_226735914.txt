{
    "id": 226735914,
    "contestId": 859,
    "creationTimeSeconds": 1696509423,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 859,
        "index": "D",
        "name": "Third Month Insanity",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "dp",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 859,
        "members": [
            {
                "handle": "michaelmonir"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1505583300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "// \u0627\u0646\u0627 \u0627\u0644\u0645\u0634\u0637\u0634\u0637\n//#pragma GCC optimize(\"O3\")\n//#pragma GCC optimize(\"unroll-loops\")\n//#pragma GCC target(\"avx,avx2,fma\")\n#include<bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\n#define int long long\n#define pb push_back\n#define all(v) v.begin(), v.end()\ntypedef long long ll;\n#define compact(v) sort(all(v)); v.erase(unique(all(v)), v.end())\ntypedef pair<int, int> pi;\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<vii> viii;\ntypedef vector<viii> viiii;\ntypedef vector<double> vd;\ntypedef vector<vd> vdd;\ntypedef vector<vdd> vddd;\n\n\ntypedef vector<bool> vb;\n//#define endl '\\n'\n#define clr(v, d)            memset(v, d, sizeof(v))\n#define max3(a, b, c)         max(a, max(b, c))\nconst int Min = -1e16;\nconst int Max = 1e16;\n\ntypedef tree< pair<int, int>, null_type, less<pair<int, int>>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\n\ndouble check(vector<int> v, vector<vector<double>> &dp, int index)\n{\n    if (v.size() == 0) return 0;\n    int n = v.size();\n    double ans = 0;\n    for (int mask = 0; mask < (1<<n) / 2; mask++)\n    {\n        vector<int> vv;\n        for (int i = 0; i < n/2; i++)\n        {\n            if (mask & (1<<i))\n                vv.pb(v[2*i]);\n            else\n                vv.pb(v[2*i+1]);\n        }\n        ans = max(ans, check(vv, dp, index+1));\n    }\n    if (index != -1)\n        for (int i : v)\n            ans += dp[index+1][i]*(1<<index);\n    return ans;\n}\n\nvoid solve(int kkkk, int tttt)\n{\n    int N; cin >> N;\n    int n = (1<<N);\n    vdd arr(n, vd(n)); for (int i = 0; i < n; i++) for (int j = 0; j < n; j++) cin >> arr[i][j], arr[i][j]/=100;\n\n    vdd dp(N+1, vd(n));\n    for (int i = 0; i < n; i++) dp[0][i] = 1;\n\n    for (int round = 0; round < N; round++)\n    {\n        int len = (1<<round);\n        for (int s1 = 0; s1+len*2-1 < n; s1 += len*2)\n        {\n            int e1 = s1+len-1, s2=e1+1, e2 = s2+len-1;\n            for (int i = s1; i <= e1; i++)\n            {\n                for (int j = s2; j <= e2; j++)\n                {\n                    double oldprob = dp[round][i]*dp[round][j];\n                    dp[round+1][i] += arr[i][j]*oldprob;\n                    dp[round+1][j] += arr[j][i]*oldprob;\n                }\n            }\n        }\n    }\n    vector<int> v(n); for (int i = 0; i < n; i++) v[i] = i;\n    double ans = check(v, dp, -1);\n    cout << ans << endl;\n}\n\nvoid fast() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); }\n\nsigned main()\n{\n    cout << fixed << setprecision(10);\n//    freopen(\"input.txt\",\"rt\",stdin);\n//    freopen(\"output.txt\",\"wt\",stdout);\n    fast();\n\n    int t = 0, i = 0;\n//    int t; cin >> t;\n//    for (int i = 1; i <= t; i++)\n        solve(t, i);\n    return 0;\n}"
}