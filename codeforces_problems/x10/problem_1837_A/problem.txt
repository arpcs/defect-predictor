{
    "contestId": 1837,
    "index": "A",
    "name": "Grasshopper on a Line",
    "type": "PROGRAMMING",
    "rating": 800,
    "tags": [
        "constructive algorithms",
        "math"
    ],
    "desc": {
        "title": "A. Grasshopper on a Line",
        "statement": "<p>You are given two integers $$$x$$$ and $$$k$$$. Grasshopper starts in a point $$$0$$$ on an OX axis. In one move, it can jump some integer distance, <span class=\"tex-font-style-bf\">that is not divisible by $$$k$$$</span>, to the left or to the right.</p><p>What's the smallest number of moves it takes the grasshopper to reach point $$$x$$$? What are these moves? If there are multiple answers, print any of them.</p>",
        "inputSpecification": "<p>The first line contains a single integer $$$t$$$ ($$$1 \\le t \\le 1000$$$)\u00a0\u2014 the number of testcases.</p><p>The only line of each testcase contains two integers $$$x$$$ and $$$k$$$ ($$$1 \\le x \\le 100$$$; $$$2 \\le k \\le 100$$$)\u00a0\u2014 the endpoint and the constraint on the jumps, respectively.</p>",
        "outputSpecification": "<p>For each testcase, in the first line, print a single integer $$$n$$$\u00a0\u2014 the smallest number of moves it takes the grasshopper to reach point $$$x$$$.</p><p>In the second line, print $$$n$$$ integers, each of them not divisible by $$$k$$$. A positive integer would mean jumping to the right, a negative integer would mean jumping to the left. The endpoint after the jumps should be exactly $$$x$$$.</p><p>Each jump distance should be from $$$-10^9$$$ to $$$10^9$$$. In can be shown that, for any solution with the smallest number of jumps, there exists a solution with the same number of jumps such that each jump is from $$$-10^9$$$ to $$$10^9$$$.</p><p>It can be shown that the answer always exists under the given constraints. If there are multiple answers, print any of them.</p>",
        "samples": [
            {
                "input": "<div class=\"test-example-line test-example-line-even test-example-line-0\">3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">10 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">10 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 4</div>",
                "output": "\n2\n7 3\n1\n10\n1\n3\n"
            }
        ],
        "note": null
    },
    "suggested_categories": [
        "algorithms",
        "mathematics",
        "dynamic programming",
        "number theory",
        "graph theory",
        "greedy algorithm",
        "combinatorics",
        "search algorithms",
        "conditional logic",
        "data structures",
        "optimization",
        "integer operations",
        "modular arithmetic",
        "recursive functions",
        "divisibility",
        "combinatorial optimization",
        "problem solving",
        "computational complexity",
        "test case design",
        "programming challenges"
    ]
}