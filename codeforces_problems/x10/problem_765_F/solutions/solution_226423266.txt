{
    "id": 226423266,
    "contestId": 765,
    "creationTimeSeconds": 1696329710,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 765,
        "index": "F",
        "name": "Souvenirs",
        "type": "PROGRAMMING",
        "points": 3250.0,
        "rating": 3100,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 765,
        "members": [
            {
                "handle": "C1F5CFE9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1487059500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#define int long long\r\nusing namespace std;\r\nnamespace IO\r\n{\r\n\ttemplate<typename T>inline void read(T &x)\r\n\t{\r\n\t\tx=0;int y=1;\r\n\t\tchar c=getchar();\r\n\t\twhile(c<'0'||c>'9'){if(c=='-')y=-1; c=getchar();}\r\n\t\twhile(c>='0'&&c<='9'){x=x*10+c-'0'; c=getchar();}\r\n\t\tx*=y;\r\n\t\treturn;\r\n\t}\r\n\ttemplate<typename T>inline void write(T x)\r\n\t{\r\n\t\tif(x<0){putchar('-');x=-x;}\r\n\t\tif(x>9) write(x/10);\r\n\t\tputchar(x%10 + '0');\r\n\t\treturn;\r\n\t}\r\n}\r\nusing namespace IO;\r\n#define writeln(x) write(x),putchar('\\n')\r\n#define writesp(x) write(x),putchar(' ')\r\n#define debug printf(\"Now is on line %d\\n\",__LINE__)\r\nconst int INF=0x3f3f3f3f;\r\nconst int N=2e5+5;\r\nint n,Q,tot=0,a[N],t[N*4];\r\nstruct Que{int r,ans;}qq[int(3e5+5)];\r\nstruct Tree{int l,r,id,val;}f[N*80];\r\nvector<int> w[N];\r\nint New_f()\r\n{\r\n\tf[++tot]=Tree{0,0,0,INF};\r\n\treturn tot;\r\n}\r\nvoid pushup_f(int id)\r\n{\r\n\tif(f[id].l)\r\n\t{\r\n\t\tf[id].id=f[f[id].l].id;f[id].val=f[f[id].l].val;\r\n\t\tif(f[id].r && f[f[id].r].val<f[id].val) f[id].id=f[f[id].r].id,f[id].val=f[f[id].r].val;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif(f[id].r) f[id].id=f[f[id].r].id,f[id].val=f[f[id].r].val;\r\n\t}\r\n\treturn;\r\n}\r\nvoid change_f(int id,int l,int r,int p,int x)\r\n{\r\n\tif(l==r){f[id]=Tree{0,0,l,x};return;}\r\n\tint mid=(l+r)>>1;\r\n\tif(p<=mid)\r\n\t{\r\n\t\tif(!f[id].l) f[id].l=New_f();\r\n\t\tchange_f(f[id].l,l,mid,p,x);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tif(!f[id].r) f[id].r=New_f();\r\n\t\tchange_f(f[id].r,mid+1,r,p,x);\r\n\t}\r\n\tpushup_f(id);\r\n\treturn;\r\n}\r\nTree query_f(int id,int l,int r,int L,int R)\r\n{\r\n\tif(L<=l && r<=R) return f[id];\r\n\tint mid=(l+r)>>1;Tree x=Tree{0,0,0,INF},y;\r\n\tif(L<=mid && f[id].l) x=query_f(f[id].l,l,mid,L,R);\r\n\tif(mid<R && f[id].r)\r\n\t{\r\n\t\ty=query_f(f[id].r,mid+1,r,L,R);\r\n\t\tif(y.val<x.val) x=y;\r\n\t}\r\n\treturn x;\r\n}\r\nvoid pushup_t(int id)\r\n{\r\n\tt[id]=min(t[id<<1],t[id<<1|1]);\r\n\treturn;\r\n}\r\nvoid change_t(int id,int l,int r,int p,int x)\r\n{\r\n\tif(l==r){t[id]=min(t[id],x);return;}\r\n\tint mid=(l+r)>>1;\r\n\tif(p<=mid) change_t(id<<1,l,mid,p,x);\r\n\telse change_t(id<<1|1,mid+1,r,p,x);\r\n\tpushup_t(id);\r\n\treturn;\r\n}\r\nint query_t(int id,int l,int r,int L,int R)\r\n{\r\n\tif(L<=l && r<=R) return t[id];\r\n\tint mid=(l+r)>>1,x=INF;\r\n\tif(L<=mid) x=query_t(id<<1,l,mid,L,R);\r\n\tif(mid<R) x=min(x,query_t(id<<1|1,mid+1,r,L,R));\r\n\treturn x;\r\n}\r\nsigned main()\r\n{\r\n\tint l,r,x,mxa=0;Tree q;\r\n\tread(n);\r\n\tfor(int i=1;i<=n;++i)\r\n\t{\r\n\t\tread(a[i]);\r\n\t\t++a[i];\r\n\t\tmxa=max(mxa,a[i]);\r\n\t}\r\n\tread(Q);\r\n\tfor(int i=1;i<=Q;++i)\r\n\t{\r\n\t\tread(x);read(qq[i].r);\r\n\t\tw[x].emplace_back(i);\r\n\t}\r\n\tNew_f();\r\n\tmemset(t,0x3f,(n*4+1)*sizeof(int));\r\n\tfor(int i=n;i>=1;--i)\r\n\t{\r\n\t\tl=a[i];r=mxa;\r\n\t\tdo\r\n\t\t{\r\n\t\t\tq=query_f(1,1,mxa,l,r);\r\n\t\t\tif(q.val==INF) break;\r\n\t\t\tchange_t(1,1,n,q.val,q.id-a[i]);\r\n\t\t\tr=(l+q.id)/2;\r\n\t\t}while(l<r);\r\n\t\tl=1;r=a[i];\r\n\t\tdo\r\n\t\t{\r\n\t\t\tq=query_f(1,1,mxa,l,r);\r\n\t\t\tif(q.val==INF) break;\r\n\t\t\tchange_t(1,1,n,q.val,a[i]-q.id);\r\n\t\t\tl=(r+q.id+1)/2;\r\n\t\t}while(l<r);\r\n\t\tchange_f(1,1,mxa,a[i],i);\r\n\t\tfor(int j : w[i]) qq[j].ans=query_t(1,1,n,i,qq[j].r);\r\n\t}\r\n\tfor(int i=1;i<=Q;++i) writeln(qq[i].ans);\r\n\treturn 0;\r\n}"
}