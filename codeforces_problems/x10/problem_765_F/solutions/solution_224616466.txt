{
    "id": 224616466,
    "contestId": 765,
    "creationTimeSeconds": 1695389855,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 765,
        "index": "F",
        "name": "Souvenirs",
        "type": "PROGRAMMING",
        "points": 3250.0,
        "rating": 3100,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 765,
        "members": [
            {
                "handle": "wangzheng2008"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1487059500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 2401,
    "memoryConsumedBytes": 140288000,
    "source": "// LUOGU_RID: 125603882\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int MAXN=3e5+5;\r\nint tr[MAXN<<5],ls[MAXN<<5],rs[MAXN<<5],n,m,a[MAXN],cnt,L[MAXN],R[MAXN],tree[MAXN],hd[MAXN],ans[MAXN];\r\nvoid add(int &u,int v,int l,int r,int k,int x)\r\n{\r\n\tu=++cnt,tr[u]=x,ls[u]=ls[v],rs[u]=rs[v];\r\n\tif(l==r) return;\r\n\tint mid=(l+r)/2;\r\n\tif(mid>=k) add(ls[u],ls[v],l,mid,k,x);\r\n\telse add(rs[u],rs[v],mid+1,r,k,x);\r\n}\r\nint qr(int u,int l,int r,int L,int R)\r\n{\r\n\tif(L<=l&&r<=R) return tr[u];\r\n\tif(L>r||l>R) return INT_MAX;\r\n\tint mid=(l+r)/2;\r\n\treturn min(qr(ls[u],l,mid,L,R),qr(rs[u],mid+1,r,L,R));\r\n}\r\nvector<int> Qr[MAXN],Add[MAXN];\r\nint lowbit(int x)\r\n{\r\n\treturn x&(-x);\r\n}\r\nvoid upd(int k,int x)\r\n{\r\n\twhile(k<=n)\r\n\t{\r\n\t\ttree[k]=min(tree[k],x);\r\n\t\tk+=lowbit(k);\r\n\t}\r\n}\r\nint get(int k)\r\n{\r\n\tint ans=INT_MAX;\r\n\twhile(k)\r\n\t{\r\n\t\tans=min(ans,tree[k]);\r\n\t\tk-=lowbit(k);\r\n\t}\r\n\treturn ans;\r\n}\r\nint main()\r\n{\r\n\ttr[0]=INT_MAX;\r\n\tcin>>n;\r\n\tfor(int i=1;i<=n;i++) cin>>a[i];\r\n\tcin>>m;\r\n\tfor(int i=n;i>0;i--)\r\n\t\tadd(hd[i],hd[i+1],1,1e9,a[i],i);\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tint now=1e9,p=i+1;\r\n\t\twhile(now>=a[i])\r\n\t\t{\r\n\t\t\tint nxt=qr(hd[p],1,1e9,a[i],now);\r\n\t\t\tif(nxt>n) break;\r\n\t\t\tAdd[i].push_back(nxt);\r\n\t\t\tp=nxt+1,now=(a[nxt]+a[i]+1)/2-1;\r\n\t\t}\r\n\t\tnow=1,p=i+1;\r\n\t\twhile(now<=a[i])\r\n\t\t{\r\n\t\t\tint nxt=qr(hd[p],1,1e9,now,a[i]);\r\n\t\t\tif(nxt>n) break;\r\n\t\t\tAdd[i].push_back(nxt);\r\n\t\t\tp=nxt+1,now=(a[nxt]+a[i])/2+1;\r\n\t\t}\r\n\t}\r\n\tfor(int i=1;i<=m;i++)\r\n\t{\r\n\t\tcin>>L[i]>>R[i];\r\n\t\tQr[L[i]].push_back(i);\r\n\t}\r\n\tmemset(tree,0x3f,sizeof(tree));\r\n\tfor(int i=n;i>0;i--)\r\n\t{\r\n\t\tfor(int j=0;j<Add[i].size();j++)\r\n\t\t{\r\n\t\t\tint u=Add[i][j];\r\n\t\t\tupd(u,abs(a[i]-a[u]));\r\n\t\t}\r\n\t\tfor(int j=0;j<Qr[i].size();j++)\r\n\t\t{\r\n\t\t\tint u=Qr[i][j];\r\n\t\t\tans[u]=get(R[u]);\r\n\t\t}\r\n\t}\r\n\tfor(int i=1;i<=m;i++) cout<<ans[i]<<'\\n';\r\n\treturn 0;\r\n}"
}