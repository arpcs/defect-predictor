{
    "id": 229648623,
    "contestId": 765,
    "creationTimeSeconds": 1698214760,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 765,
        "index": "F",
        "name": "Souvenirs",
        "type": "PROGRAMMING",
        "points": 3250.0,
        "rating": 3100,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 765,
        "members": [
            {
                "handle": "luogu_bot1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1487059500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 935,
    "memoryConsumedBytes": 220876800,
    "source": "// LUOGU_RID: 131498888\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=1e6+10,inf=1e9;\r\nint n,m,Rem[N],ans[N];\r\nint Gy[N];\r\nstruct node{\r\n\tint id,l;\r\n};\r\nvector<node> Hui[N];\r\nint ma[N<<4];\r\nint ls[N<<4],rs[N<<4],cnt=1,rt=1;\r\nint lowbit(int x){\r\n\treturn x&(-x);\r\n}\r\nvoid add(int x,int k){//\u540e\u7f00 \r\n\twhile(x){\r\n\t\tGy[x]=min(Gy[x],k);\r\n\t\tx-=lowbit(x);\r\n\t}\r\n}\r\nint query(int x){\r\n\tint res=inf;\r\n\twhile(x<=n){\r\n\t\tres=min(res,Gy[x]);\r\n\t\tx+=lowbit(x);\r\n\t}\r\n\treturn res;\r\n}\r\nvoid update(int l,int r,int x,int v,int &p){\r\n\tif(!p) p=++cnt;\r\n\tma[p]=max(ma[p],v);//\u6700\u53f3\r\n\tif(l==r) return;\r\n\tint mid=l+r>>1;\r\n\tif(x<=mid) update(l,mid,x,v,ls[p]);\r\n\telse update(mid+1,r,x,v,rs[p]);\r\n}\r\nint Query(int x,int y,int l,int r,int p){\r\n\tif(!p) return 0;\r\n\tif(x<=l&&y>=r) return ma[p];\r\n\tint res=0,mid=(l+r)/2;\r\n\tif(x<=mid) res=max(res,Query(x,y,l,mid,ls[p]));\r\n\tif(y>mid) res=max(res,Query(x,y,mid+1,r,rs[p]));\r\n\treturn res;\r\n}\r\n \r\nvoid init(){\r\n\tfor(int i=1;i<=n;i++) Gy[i]=inf;\r\n\tfor(int i=1;i<=cnt;i++) ma[i]=ls[i]=rs[i]=0;\r\n\tcnt=rt=1;\r\n}\r\nvoid solve(){\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tint pos=Query(Rem[i],inf,0,inf,rt);\r\n\t\twhile(pos){\r\n\t\t\t//cout<<i<<' '<<Rem[i]<<' '<<pos<<' '<<(Rem[i]+Rem[pos]-1)/2<<'\\n';\r\n\t\t\tadd(pos,Rem[pos]-Rem[i]);\r\n\t\t\tpos=Query(Rem[i],(Rem[i]+Rem[pos]-1)/2,0,inf,rt);\r\n\t\t\t//\u56e0\u4e3a\u6211\u4eec\u8981\u6c42\u7684\u662f\u5c0f\u4e8e ?/2 \u6ca1\u6709\u7b49\u4e8e \u6240\u4ee5-1 \r\n\t\t\t//\u5982\u679c\u4e0d\u51cf1 \u53ef\u80fd\u51fa\u73b0Remi\u662f2 Rempos\u662f1 \u9664\u4e00\u4e0b\u8fd8\u662f1 \u7b54\u6848\u5f97\u5230pos \u6b7b\u5faa\u73af  \r\n\t\t}\r\n\t\tupdate(0,inf,Rem[i],i,rt);\r\n\t\tfor(auto y:Hui[i]){\r\n\t\t\tans[y.id]=min(ans[y.id],query(y.l));\r\n\t\t}\r\n\t}\r\n}\r\nint main(){\r\n\tios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n\tcin>>n;\r\n\tfor(int i=1;i<=n;i++) cin>>Rem[i];\r\n\tcin>>m;\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tans[i]=inf;\r\n\t\tint l,r;\r\n\t\tcin>>l>>r;\r\n\t\tHui[r].push_back({i,l});\r\n\t}\r\n\tinit();\r\n\tsolve();\r\n\tfor(int i=1;i<=n;i++) Rem[i]=inf-Rem[i];\r\n\tinit();\r\n\tsolve();\r\n\tfor(int i=1;i<=m;i++) cout<<ans[i]<<'\\n';\r\n\treturn 0;\r\n}"
}