{
    "id": 226675232,
    "contestId": 765,
    "creationTimeSeconds": 1696474535,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 765,
        "index": "F",
        "name": "Souvenirs",
        "type": "PROGRAMMING",
        "points": 3250.0,
        "rating": 3100,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 765,
        "members": [
            {
                "handle": "marvinthang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1487059500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 2090,
    "memoryConsumedBytes": 129740800,
    "source": "/*************************************\r\n*    author: marvinthang             *\r\n*    created: 24.09.2023 22:19:47    *\r\n*************************************/\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define                  fi  first\r\n#define                  se  second\r\n#define                left  ___left\r\n#define               right  ___right\r\n#define                TIME  (1.0 * clock() / CLOCKS_PER_SEC)\r\n#define             MASK(i)  (1LL << (i))\r\n#define           BIT(x, i)  ((x) >> (i) & 1)\r\n#define  __builtin_popcount  __builtin_popcountll\r\n#define              ALL(v)  (v).begin(), (v).end()\r\n#define           REP(i, n)  for (int i = 0, _n = (n); i < _n; ++i)\r\n#define          REPD(i, n)  for (int i = (n); i-- > 0; )\r\n#define        FOR(i, a, b)  for (int i = (a), _b = (b); i < _b; ++i) \r\n#define       FORD(i, b, a)  for (int i = (b), _a = (a); --i >= _a; ) \r\n#define       FORE(i, a, b)  for (int i = (a), _b = (b); i <= _b; ++i) \r\n#define      FORDE(i, b, a)  for (int i = (b), _a = (a); i >= _a; --i) \r\n#define        scan_op(...)  istream & operator >> (istream &in, __VA_ARGS__ &u)\r\n#define       print_op(...)  ostream & operator << (ostream &out, const __VA_ARGS__ &u)\r\n#ifdef LOCAL\r\n    #include \"debug.h\"\r\n#else\r\n    #define file(name) if (fopen(name\".inp\", \"r\")) { freopen(name\".inp\", \"r\", stdin); freopen(name\".out\", \"w\", stdout); }\r\n    #define DB(...) 23\r\n    #define db(...) 23\r\n    #define debug(...) 23\r\n#endif\r\n\r\ntemplate <class U, class V> scan_op(pair <U, V>)  { return in >> u.first >> u.second; }\r\ntemplate <class T> scan_op(vector <T>)  { for (size_t i = 0; i < u.size(); ++i) in >> u[i]; return in; }\r\ntemplate <class U, class V> print_op(pair <U, V>)  { return out << '(' << u.first << \", \" << u.second << ')'; }\r\ntemplate <size_t i, class T> ostream & print_tuple_utils(ostream &out, const T &tup) { if constexpr(i == tuple_size<T>::value) return out << \")\";  else return print_tuple_utils<i + 1, T>(out << (i ? \", \" : \"(\") << get<i>(tup), tup); }\r\ntemplate <class ...U> print_op(tuple<U...>) { return print_tuple_utils<0, tuple<U...>>(out, u); }\r\ntemplate <class Con, class = decltype(begin(declval<Con>()))> typename enable_if <!is_same<Con, string>::value, ostream&>::type operator << (ostream &out, const Con &con) { out << '{'; for (__typeof(con.begin()) it = con.begin(); it != con.end(); ++it) out << (it == con.begin() ? \"\" : \", \") << *it; return out << '}'; }\r\ntemplate <class A, class B> bool minimize(A &a, B b)  { if (a > b) { a = b; return true; } return false; }\r\ntemplate <class A, class B> bool maximize(A &a, B b)  { if (a < b) { a = b; return true; } return false; }\r\n\r\n// end of template\r\n\r\nconst int MAX = 1e5 + 5;\r\nconst int INF = (int) 2e9 + 7;\r\nconst int BLOCK_SIZE = 320;\r\nconst int MAX_BLOCK = MAX / BLOCK_SIZE + 5;\r\n\r\nint N, A[MAX], Q, left[MAX], right[MAX], block_id[MAX];\r\n\r\nvoid init(void) {\r\n    cin >> N;\r\n    REP(i, N) cin >> A[i];\r\n    cin >> Q;\r\n}\r\n\r\npair <int, int> val[MAX];\r\nint dp[MAX_BLOCK][MAX];\r\n\r\nvoid process(void) {\r\n    int numBlock = (N - 1) / BLOCK_SIZE + 1;\r\n    REP(b, numBlock) {\r\n        left[b] = b * BLOCK_SIZE;\r\n        right[b] = min(N, left[b] + BLOCK_SIZE);\r\n        FOR(i, left[b], right[b]) {\r\n            block_id[i] = b;\r\n            val[i] = pair {A[i], i};\r\n        }\r\n        sort(val + left[b], val + right[b]);\r\n        int mi = INF;\r\n        FOR(i, left[b] + 1, right[b]) minimize(mi, val[i].fi - val[i - 1].fi);\r\n        dp[b][right[b] - 1] = dp[b][left[b]] = mi;\r\n    }\r\n    REP(b, numBlock) {\r\n        REP(t, numBlock) if (t != b) {\r\n            int j = left[b];\r\n            FOR(i, left[t], right[t]) {\r\n                dp[b][val[i].se] = INF;\r\n                while (j < right[b] && val[j] < val[i]) ++j;\r\n                if (j > left[b]) minimize(dp[b][val[i].se], val[i].fi - val[j - 1].fi);\r\n                if (j < right[b]) minimize(dp[b][val[i].se], val[j].fi - val[i].fi);\r\n            }\r\n        }\r\n    }\r\n    REPD(i, numBlock) FOR(j, right[i], N) {\r\n        if (i + 1 < numBlock && j >= right[i + 1]) minimize(dp[i][j], dp[i + 1][j]);\r\n        minimize(dp[i][j], dp[i][j - 1]);\r\n\r\n    }\r\n    REP(i, numBlock) REPD(j, left[i]) {\r\n        if (i && j < left[i - 1]) minimize(dp[i][j], dp[i - 1][j]);\r\n        minimize(dp[i][j], dp[i][j + 1]);\r\n    }\r\n    while (Q--) {\r\n        int l, r; cin >> l >> r; --l; --r;\r\n        int res = INF;\r\n        int bl = block_id[l], br = block_id[r];\r\n        if (bl == br) {\r\n            int last = INF;\r\n            FOR(i, left[bl], right[bl]) if (l <= val[i].se && val[i].se <= r) {\r\n                if (last != INF) minimize(res, val[i].fi - last);\r\n                last = val[i].fi;\r\n            }\r\n        } else {\r\n            res = bl + 1 < br ? min(dp[bl + 1][r], dp[br - 1][l]) : INF;\r\n            int pr = left[br];\r\n            int prv = -1;\r\n            FOR(pl, left[bl], right[bl]) if (l <= val[pl].se && val[pl].se <= r) {\r\n                while (pr < right[br] && val[pr] < val[pl]) {\r\n                    if (l <= val[pr].se && val[pr].se <= r) prv = pr;\r\n                    pr++;\r\n                }\r\n                while (pr < right[br] && (l > val[pr].se || r < val[pr].se)) ++pr;\r\n                if (prv != -1) minimize(res, val[pl].fi - val[prv].fi);\r\n                if (pr < right[br]) minimize(res, val[pr].fi - val[pl].fi);\r\n            }\r\n            int last = INF;\r\n            FOR(i, left[bl], right[bl]) if (l <= val[i].se) {\r\n                if (last != INF) minimize(res, val[i].fi - last);\r\n                last = val[i].fi;\r\n            }\r\n            last = INF;\r\n            FOR(i, left[br], right[br]) if (val[i].se <= r) {\r\n                if (last != INF) minimize(res, val[i].fi - last);\r\n                last = val[i].fi;\r\n            }\r\n        }\r\n        cout << res << '\\n';\r\n    }\r\n}\r\n\r\nint main(void) {\r\n    ios_base::sync_with_stdio(false); cin.tie(nullptr); // cout.tie(nullptr);\r\n    file(\"test\");\r\n    init();\r\n    process();\r\n    cerr << \"Time elapsed: \" << TIME << \" s.\\n\";\r\n    return (0^0);\r\n}"
}