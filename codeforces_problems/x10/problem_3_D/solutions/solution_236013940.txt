{
    "id": 236013940,
    "contestId": 3,
    "creationTimeSeconds": 1701849538,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 3,
        "index": "D",
        "name": "Least Cost Bracket Sequence",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 3,
        "members": [
            {
                "handle": "syrtin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1267963200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 50,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 2969600,
    "source": "#include <bits/stdc++.h>\r\n#define all(v) v.begin(), v.end()\r\n#define pb push_back\r\n#define ss second\r\n#define ff first\r\n#define vt vector\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef vector<int> vi;\r\ntypedef vector<ll> vll;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, ll> pll;\r\ntypedef pair<double, int> pdi;\r\nconst int inf = 1e9 + 10000;\r\nconst int mod = 1e9+7;\r\nconst int maxn = 5e4 + 12;\r\nstring s;\r\nint n, m;\r\nint p[maxn], t[maxn * 4], it, c[maxn * 4];\r\nll ans;\r\nvoid build(int v , int l, int r) {\r\n\tif(l + 1 == r) {\r\n\t\tt[v] = p[l];\r\n\t\treturn;\r\n\t}\r\n\tbuild(v * 2 + 1, l, (l + r) / 2), build(v * 2 + 2, (l + r) / 2, r);\r\n\tt[v] = min(t[v * 2 + 1], t[v * 2 + 2]);\r\n}\r\nvoid upd(int v, int l, int r) {\r\n\tif(l >= it) {\r\n\t\tc[v]++;\r\n\t\tt[v] -= 2;\r\n\t\treturn;\r\n\t}\r\n\tif(r <= it) {\r\n\t\treturn;\r\n\t}\r\n\tif(c[v]) {\r\n\t\tc[v * 2 + 1] += c[v], c[v * 2 + 2] += c[v];\r\n\t\tt[v * 2 + 1] -= c[v] * 2, t[v * 2 + 2] -= c[v] * 2;\r\n\t\tc[v] = 0;\r\n\t}\r\n\tupd(v * 2 + 1, l, (l + r) / 2), upd(v * 2 + 2, (l + r) / 2, r);\r\n\tt[v] = min(t[v * 2 + 1], t[v * 2 + 2]);\r\n}\r\nint get(int v , int l, int r) {\r\n\tif(l >= it)return t[v];\r\n\tif(r <= it)return inf;\r\n\tif(c[v]) {\r\n\t\tc[v * 2 + 1] += c[v], c[v * 2 + 2] += c[v];\r\n\t\tt[v * 2 + 1] -= c[v] * 2, t[v * 2 + 2] -= c[v] * 2;\r\n\t\tc[v] = 0;\r\n\t}\r\n\treturn min(get(v * 2 + 1, l, (l + r) / 2), get(v * 2 + 2, (l + r) / 2, r));\r\n}\r\nvoid solve() {\r\n\tcin >> s;\r\n\tn = s.size();\r\n\tvector<pii> a;\r\n\tint cnt = 0;\r\n\tfor(int i = 0; i < n; i++) {\r\n\t\tif(s[i] == '?'){\r\n\t\t\tint x, y;\r\n\t\t\tcin >> x >> y;\r\n\t\t\tans += x, m++;\r\n\t\t\ta.pb({y - x, i});\r\n\t\t\tp[i] = 1;\r\n\t\t\ts[i] = '(';\r\n\t\t}\r\n\t\telse if(s[i] == '(') {\r\n\t\t\tp[i] = 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcnt++;\r\n\t\t\tp[i] = -1;\r\n\t\t}\r\n\t\tif(i)p[i] += p[i - 1];\r\n\t}\r\n\tsort(all(a));\r\n\tbuild(0, 0, n);\r\n\tfor(auto i : a) {\r\n\t\tit = i.ss;\r\n\t\tint x = get(0, 0, n);\r\n\t\tif(x >= 2) {\r\n\t\t\tans += i.ff;\r\n\t\t\tcnt++;\r\n\t\t\ts[i.ss] = ')';\r\n\t\t\tupd(0, 0, n);\r\n\t\t}\r\n\t}\r\n\tif(cnt != n / 2) {\r\n\t\tcout << \"-1\";\r\n\t\treturn;\r\n\t}\r\n\tcout << ans << '\\n' << s;\r\n}\r\nint main() {\r\n\tios_base::sync_with_stdio(0);\r\n\tcin.tie(0);\r\n\tint times = 1;\r\n\t//cin >> times;\r\n\tfor(int i = 1; i <= times; i++) {\r\n\t\tsolve();\r\n\t}\r\n\treturn 0;\r\n}\r\n"
}