{
    "id": 229509976,
    "contestId": 3,
    "creationTimeSeconds": 1698124244,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 3,
        "index": "D",
        "name": "Least Cost Bracket Sequence",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 3,
        "members": [
            {
                "handle": "okay4869"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1267963200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 80,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 1740800,
    "source": "#include <bits/stdc++.h>\r\n#define int long long\r\n#define NOT_GIVING_UP_IS_MY_MAGIC ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\nusing namespace std;\r\n\r\n\r\nvoid solve()\r\n{\r\n    string s; cin >> s; int b = 0, cost = 0; int l, r;\r\n    set<pair<int, int>> st;\r\n    for(int i = 0; i < s.size(); ++i) {\r\n        if(s[i] == '(')\r\n        {\r\n            ++b;\r\n        }\r\n        else if(s[i] == ')')\r\n        {\r\n            --b;\r\n        }\r\n        else\r\n        {\r\n            cin >> l >> r; --b; s[i] = ')';\r\n            cost += r; st.insert({l-r, i});\r\n        }\r\n        while(b < 0 && st.size())\r\n        {\r\n            b += 2;\r\n            s[(*st.begin()).second] = '(';\r\n            cost += (*st.begin()).first;\r\n            st.erase(st.begin());\r\n        }\r\n        if(b < 0)\r\n        {\r\n            break;\r\n        }\r\n    }\r\n    if(b == 0) {\r\n        cout << cost << \"\\n\";\r\n        cout << s << \"\\n\";\r\n    }\r\n    else {\r\n        cout << -1 << \"\\n\";\r\n    }\r\n}\r\n\r\n\r\nsigned main() \r\n{\r\n\r\n    NOT_GIVING_UP_IS_MY_MAGIC\r\n    int testcase = 1;\r\n    // cin >> testcase;\r\n\r\n    while (testcase--)\r\n    {\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n\r\n}\r\n"
}