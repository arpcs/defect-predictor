{
    "id": 228066821,
    "contestId": 3,
    "creationTimeSeconds": 1697217952,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 3,
        "index": "D",
        "name": "Least Cost Bracket Sequence",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 3,
        "members": [
            {
                "handle": "Crypto_Wiz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1267963200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main() {\r\n    string s;\r\n    cin >> s;\r\n    int n = s.size();\r\n    int m = count(s.begin(), s.end(), '?');\r\n    vector<pair<int, int>> cost(m);\r\n    for (int i = 0, j = 0; i < n; i++) {\r\n        if (s[i] == '?') {\r\n            cin >> cost[j].first >> cost[j].second;\r\n            j++;\r\n        }\r\n    }\r\n    int open = 0, close = 0, ans = 0;\r\n    for (int i = 0; i < n; i++) {\r\n        if (s[i] == '(') {\r\n            open++;\r\n        } else if (s[i] == ')') {\r\n            close++;\r\n        } else {\r\n            if (open < close) {\r\n                ans += cost[open].first;\r\n                open++;\r\n            } else {\r\n                ans += cost[close].second;\r\n                close++;\r\n            }\r\n        }\r\n        if (close > open) {\r\n            cout << -1 << endl;\r\n            return 0;\r\n        }\r\n    }\r\n    if (open != close) {\r\n        cout << -1 << endl;\r\n        return 0;\r\n    }\r\n    cout << ans << endl;\r\n    open = close = 0;\r\n    for (int i = 0; i < n; i++) {\r\n        if (s[i] == '(') {\r\n            open++;\r\n            cout << '(';\r\n        } else if (s[i] == ')') {\r\n            close++;\r\n            cout << ')';\r\n        } else {\r\n            if (open < close) {\r\n                open++;\r\n                cout << '(';\r\n            } else {\r\n                close++;\r\n                cout << ')';\r\n            }\r\n        }\r\n    }\r\n    cout << endl;\r\n    return 0;\r\n}\r\n"
}