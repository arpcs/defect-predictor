{
    "id": 230061667,
    "contestId": 3,
    "creationTimeSeconds": 1698429390,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 3,
        "index": "D",
        "name": "Least Cost Bracket Sequence",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 3,
        "members": [
            {
                "handle": "bkifhr8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1267963200
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 49,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 3276800,
    "source": "#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\n\nstruct bracket {\n    int L, R, id;\n    bool operator<( const bracket y ) const{\n        return L-R > y.L-y.R || L-R == y.L-y.R && id < y.id;\n    }\n};\n\nsigned main()\n{\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n    string str;\n    cin>>str;\n    int n=0, blance=0, res=0, t=0;\n    vector<bracket> arr;\n    priority_queue<bracket> pq;\n    for( int i=0 ; i < str.size() ; i++ ) if( str[i] == '?' ) n++, arr.push_back({0,0,i});\n    for( int i=0 ; i < n ; i++ ) {\n        int a, b;\n        cin>>a>>b;\n        arr[i]={a,b,arr[i].id};\n    }\n    for( int i=0 ; i < str.size() ; i++ ) {\n        if( str[i] == '(' ) blance++;\n        if( str[i] == ')' ) blance--;\n        if( str[i] == '?' ) blance--, res+=arr[t].R, pq.push(bracket{arr[t++]}), str[i]=')';\n        if( blance < 0 ) str[pq.top().id]='(', res=res-pq.top().R+pq.top().L, pq.pop(), blance+=2;\n    }\n    if( blance ) {\n        cout<<-1<<'\\n';\n        return 0;\n    }\n    cout<<res<<'\\n';\n    cout<<str<<'\\n';\n}\n\n  \t   \t\t\t\t\t\t  \t\t\t  \t\t\t\t\t\t \t\t\t\t\t"
}