{
    "id": 232803012,
    "contestId": 3,
    "creationTimeSeconds": 1700007204,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 3,
        "index": "D",
        "name": "Least Cost Bracket Sequence",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 3,
        "members": [
            {
                "handle": "CFstannum"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1267963200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 80,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 1126400,
    "source": "// LUOGU_RID: 135154722\n#include<bits/stdc++.h>\n#define int long long\nusing namespace std;\nconstexpr int N=5e4+5;\nstruct DAT{int val,pos;friend bool operator<(DAT X,DAT Y){return X.val<Y.val;}};\npriority_queue<DAT>Q;\nstring s;\nint n,k,ans;\nsigned main(){\n  int i,j,l,r,x,y;\n  ios::sync_with_stdio(i=0);\n  for(cin>>s,n=s.size();i<n;++i){\n    if(s[i]=='(')++k;\n    else{\n      --k;\n      if(s[i]=='?'){\n        cin>>x>>y;\n        ans+=y;\n        s[i]=')';\n        Q.push({y-x,i});\n      }\n      if(k<0){\n        if(Q.empty())return puts(\"-1\"),0;\n        ans-=Q.top().val;\n        s[Q.top().pos]='(';\n        Q.pop();\n        k+=2;\n      }\n    }\n  }\n  if(k)return puts(\"-1\"),0;\n  printf(\"%lld\\n%s\\n\",ans,s.c_str());\n  return 0;\n}"
}