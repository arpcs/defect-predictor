{
    "id": 236145365,
    "contestId": 1901,
    "creationTimeSeconds": 1701929400,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1901,
        "index": "C",
        "name": "Add, Divide and Floor",
        "type": "PROGRAMMING",
        "rating": 1400,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1901,
        "members": [
            {
                "handle": "aditya0610"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1700836500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 11,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 1638400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long int\r\n#define cY cout << 'Y' << 'E' << 'S' << endl\r\n#define cN cout << 'N' << 'O' << endl\r\n#define nP cout << -1 << endl\r\n#define vi vector<int>\r\n#define vl vector<long long>\r\n#define vll vector<vector<long long>>\r\n#define vpi vector<pair<int, int>>\r\n#define vpl vector<pair<long long, long long>>\r\n#define pb push_back\r\n#define fr first\r\n#define sc second\r\n#define mod 1000000007\r\n\r\nvoid takevec(vector<ll> &v)\r\n{\r\n    ll n = v.size();\r\n    for (ll i = 0; i < n; i++)\r\n    {\r\n        cin >> v[i];\r\n    }\r\n}\r\nvoid printvec(vector<ll> &v)\r\n{\r\n    ll n = v.size();\r\n    for (ll i = 0; i < n; i++)\r\n    {\r\n        cout << v[i] << \" \";\r\n    }\r\n    cout << endl;\r\n}\r\n\r\nll madd(ll a, ll b)\r\n{\r\n    return (a + b) % mod;\r\n}\r\nll msub(ll a, ll b)\r\n{\r\n    return (((a - b) % mod) + mod) % mod;\r\n}\r\nll mmul(ll a, ll b)\r\n{\r\n    return ((a % mod) * (b % mod)) % mod;\r\n}\r\nll mpow(ll a, ll b)\r\n{\r\n    ll res = 1;\r\n    while (b)\r\n    {\r\n        if (b & 1)\r\n        {\r\n            res = (res * a) % mod;\r\n        }\r\n        b >>= 1;\r\n        a = (a * a) % mod;\r\n    }\r\n    return res;\r\n}\r\nll minv(ll base)\r\n{\r\n    return mpow(base, mod - 2);\r\n}\r\nll mdiv(ll a, ll b)\r\n{\r\n    return mmul(a, minv(b));\r\n}\r\n\r\nll largeExpo1(ll a, ll b)\r\n{\r\n    // When a is very large\r\n    a = a % mod;\r\n    return mpow(a, b);\r\n}\r\nll largeMul(ll a, ll b)\r\n{\r\n    // when nos. are very big\r\n    ll res = 0;\r\n    while (b)\r\n    {\r\n        if (b & 1)\r\n        {\r\n            res = (res + a) % mod;\r\n        }\r\n        b >>= 1;\r\n        a = (a + a) % mod;\r\n    }\r\n    return res;\r\n}\r\nll largeExpo2(ll a, ll b)\r\n{\r\n    // When mod is very large eg. 1e18+7\r\n    ll res = 1;\r\n    while (b)\r\n    {\r\n        if (b & 1)\r\n        {\r\n            res = largeMul(res, a);\r\n        }\r\n        b >>= 1;\r\n        a = largeMul(a, a);\r\n    }\r\n    return res;\r\n}\r\nvoid primeCalculate(vector<ll> &prime, ll N, vector<ll> &arr)\r\n{\r\n    for (ll i = 2; i * i <= N; i++)\r\n    {\r\n        if (prime[i])\r\n        {\r\n            for (ll j = i * i; j <= N; j += i)\r\n            {\r\n                prime[j] = 0;\r\n            }\r\n        }\r\n    }\r\n    for(ll i = 2;i <= N;i++){\r\n        if(prime[i]){\r\n            arr.pb(i);\r\n        }\r\n    }\r\n\r\n    /*\r\n    ek vector prime ,ek khali vector arr jo elements store krega, ek N jaha tk ke primes chahiye\r\n    ll N = jaha tk chahiye;\r\n    vl prime(N+1,1);\r\n    vl arr;\r\n    */\r\n}\r\n\r\nbool check(ll mid, vl &x, vpl &v, ll n, ll m)\r\n{\r\n\r\n    vl temp(n + 1, 0);\r\n    for (ll i = 0; i < mid; i++)\r\n    {\r\n        temp[x[i]]++;\r\n    }\r\n\r\n    vl pre(n + 1, 0);\r\n    for (ll i = 1; i <= n; i++)\r\n    {\r\n        pre[i] = pre[i - 1] + temp[i];\r\n    }\r\n\r\n    for (ll i = 0; i < m; i++)\r\n    {\r\n\r\n        ll l = v[i].first;\r\n        ll r = v[i].second;\r\n        ll sz = r - l + 1;\r\n        ll ones = pre[r] - pre[l - 1];\r\n        if (ones > (sz - ones))\r\n        {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n    ll t;\r\n    cin >> t;\r\n    while (t--)\r\n    {\r\n        ll n;\r\n        cin >> n;\r\n        vl v(n);\r\n        takevec(v);\r\n        sort(v.begin(),v.end());\r\n        ll mini = v[0];\r\n        ll maxi = v[n-1];\r\n        ll cnt = 0;\r\n        vl op;\r\n        while(maxi != mini){\r\n            if(maxi & 1){\r\n                op.pb(0);\r\n                mini = (mini)/2;\r\n                maxi = (maxi)/2;\r\n            }\r\n            else{\r\n                op.pb(1);\r\n                mini = (mini + 1)/2;\r\n                maxi = (maxi + 1)/2;\r\n            }\r\n            cnt++;\r\n        }\r\n        cout << cnt << endl;\r\n        if(cnt <= n)printvec(op);\r\n    }\r\n    return 0;\r\n}"
}