{
    "id": 212905482,
    "contestId": 685,
    "creationTimeSeconds": 1688869040,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 685,
        "index": "E",
        "name": "Travelling Through the Snow Queen's Kingdom",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2800,
        "tags": [
            "bitmasks",
            "brute force",
            "divide and conquer",
            "graphs"
        ]
    },
    "author": {
        "contestId": 685,
        "members": [
            {
                "handle": "N_z__"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1466699700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 22118400,
    "source": "#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4.1,sse4.2,avx,avx2,popcnt\")\r\n#if defined(LOCAL) or not defined(LUOGU)\r\n#pragma GCC optimize(3)\r\n#pragma GCC optimize(\"Ofast,unroll-loops\")\r\n#endif\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#ifdef LOCAL\r\n#include\"dbg.h\"\r\n#define dbgu(...) dbg(__VA_ARGS__)\r\n#else\r\n#define dbg(...) (__VA_ARGS__)\r\n#define dbgu(...)\r\n#endif\r\nnamespace Fread{const int SIZE=1<<16;char buf[SIZE],*S,*T;inline char getchar(){if(S==T){T=(S=buf)+fread(buf,1,SIZE,stdin);if(S==T)return'\\n';}return *S++;}}namespace Fwrite{const int SIZE=1<<16;char buf[SIZE],*S=buf,*T=buf+SIZE;inline void flush(){fwrite(buf,1,S-buf,stdout);S=buf;}inline void putchar(char c){*S++=c;if(S==T)flush();}struct NTR{~NTR(){flush();}}ztr;}\r\n#define getchar Fread::getchar\r\n#define putchar Fwrite::putchar\r\n#define Setprecision 10\r\nnamespace Fastio{struct Reader{template<typename T>Reader&operator>>(T&x){char c=getchar();short f=1;while(c<'0'||c>'9'){if(c=='-')f*=-1;c=getchar();}x=0;while(c>='0'&&c<='9'){x=(x<<1)+(x<<3)+(c^48);c=getchar();}x*=f;return *this;}Reader&operator>>(double&x){char c=getchar();short f=1,s=0;x=0;double t=0;while((c<'0'||c>'9')&&c!='-'&&c!='.'){if(c=='-')f*=-1;c=getchar();}while(c>='0'&&c<='9'&&c!='.')x=x*10+(c^48),c=getchar();if(c=='.')c=getchar();else return x*=f,*this;while(c>='0'&&c<='9')t=t*10+(c^48),s++,c=getchar();while(s--)t/=10.0;x=(x+t)*f;return*this;}Reader&operator>>(long double&x){char c=getchar();short f=1,s=0;x=0;long double t=0;while((c<'0'||c>'9')&&c!='-'&&c!='.'){if(c=='-')f*=-1;c=getchar();}while(c>='0'&&c<='9'&&c!='.')x=x*10+(c^48),c=getchar();if(c=='.')c=getchar();else return x*=f,*this;while(c>='0'&&c<='9')t=t*10+(c^48),s++,c=getchar();while(s--)t/=10.0;x=(x+t)*f;return*this;}Reader&operator>>(char&c){c=getchar();while(c=='\\n'||c==' '||c=='\\r')c=getchar();return *this;}Reader&operator>>(char*str){int len=0;char c=getchar();while(c=='\\n'||c==' '||c=='\\r')c=getchar();while(c!='\\n'&&c!=' '&&c!='\\r')str[len++]=c,c=getchar();str[len]='\\0';return*this;}Reader&operator>>(std::string&str){char c=getchar();while(c=='\\n'||c==' '||c=='\\r')c=getchar();while(c!='\\n'&&c!=' '&&c!='\\r')str.push_back(c),c=getchar();return*this;}Reader(){}}cin;const char endl='\\n';struct Writer{typedef __int128 mxdouble;template<typename T>Writer&operator<<(T x){if(x==0)return putchar('0'),*this;if(x<0)putchar('-'),x=-x;static int sta[45];int top=0;while(x)sta[++top]=x%10,x/=10;while(top)putchar(sta[top]+'0'),--top;return*this;}Writer&operator<<(double x){if(x<0)putchar('-'),x=-x;mxdouble _=x;x-=(double)_;static int sta[45];int top=0;while(_)sta[++top]=_%10,_/=10;if(!top)putchar('0');while(top)putchar(sta[top]+'0'),--top;putchar('.');for(int i=0;i<Setprecision;i++)x*=10;_=x;while(_)sta[++top]=_%10,_/=10;for(int i=0;i<Setprecision-top;i++)putchar('0');while(top)putchar(sta[top]+'0'),--top;return*this;}Writer&operator<<(long double x){if(x<0)putchar('-'),x=-x;mxdouble _=x;x-=(long double)_;static int sta[45];int top=0;while(_)sta[++top]=_%10,_/=10;if(!top)putchar('0');while(top)putchar(sta[top]+'0'),--top;putchar('.');for(int i=0;i<Setprecision;i++)x*=10;_=x;while(_)sta[++top]=_%10,_/=10;for(int i=0;i<Setprecision-top;i++)putchar('0');while(top)putchar(sta[top]+'0'),--top;return*this;}Writer&operator<<(char c){putchar(c);return*this;}Writer&operator<<(char*str){int cur=0;while(str[cur])putchar(str[cur++]);return *this;}Writer&operator<<(const char*str){int cur=0;while(str[cur])putchar(str[cur++]);return*this;}Writer&operator<<(std::string str){int st=0,ed=str.size();while(st<ed)putchar(str[st++]);return*this;}Writer(){}}cout;}\r\n#define cin Fastio::cin\r\n#define cout Fastio::cout\r\n#define endl Fastio::endl\r\n#define int long long\r\npair<int,int>e[200001];\r\nint dp[1001][1001],ans[200001];\r\nvector<tuple<int,int,int,int>>Q[1001];\r\nmain()\r\n{\r\n\tint n,m,q;\r\n\tcin>>n>>m>>q;\r\n\tfor(int x=1;x<=m;x++)\r\n\tcin>>e[x].first>>e[x].second;\r\n\tfor(int x=1;x<=q;x++)\r\n\t{\r\n\t\tint l,r,s,t;\r\n\t\tcin>>l>>r>>s>>t;\r\n\t\tQ[l].push_back({r,s,t,x});\r\n\t}\r\n\tmemset(dp,0x7f,sizeof(dp));\r\n\tfor(int x=m;x>=1;x--)\r\n\t{\r\n\t\tdp[e[x].first][e[x].second]=dp[e[x].second][e[x].first]=x;\r\n\t\tfor(int y=1;y<=n;y++)\r\n\t\tdp[e[x].first][y]=dp[e[x].second][y]=min(dp[e[x].first][y],dp[e[x].second][y]);\r\n\t\tfor(auto [r,s,t,i]:Q[x])\r\n\t\tans[i]=dp[s][t]<=r;\r\n\t}\r\n\tfor(int x=1;x<=q;x++)\r\n\tcout<<array<string,2>({\"No\",\"Yes\"})[ans[x]]<<endl; \r\n}\r\n\r\n"
}