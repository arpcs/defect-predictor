{
    "id": 231005703,
    "contestId": 1736,
    "creationTimeSeconds": 1698941477,
    "relativeTimeSeconds": 5777,
    "problem": {
        "contestId": 1736,
        "index": "D",
        "name": "Equal Binary Subsequences",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "constructive algorithms",
            "geometry",
            "greedy",
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 1736,
        "members": [
            {
                "handle": "RamanujGoel"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1698935700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define rep(i, a, b) for(int i = a; i < (b); ++i)\n#define all(x) begin(x), end(x)\n#define sz(x) (int)(x).size()\ntypedef long long ll;\ntypedef pair<ll, ll> pii;\ntypedef vector<ll> vi;\n\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\n#define ordered_set tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update>\n\nconstexpr long long inf = 200000000000000000ll;\n\n// constexpr long long mod = 998244353ll;\nconstexpr long long mod = 1000000007ll;\n\n// #include \"atcoder/lazysegtree\"\n\n// #include \"atcoder/segtree\"\n// // #include \"atcoder/mergesorttree\"\n\n// using namespace atcoder;\n\n// using mint = modint;\n\n\nvoid solve() {\n  int n;\n  cin >> n;\n  string s;\n  cin >> s;\n  int oc = 0;\n  rep (i, 0, 2 * n) {\n    if (s[i] == '1') oc ++;\n  }\n  if (oc % 2 == 1) {\n    cout << -1 << endl; return;\n  }\n\n\n  vector<int> s1, s2;\n\n  for (int i = 0; i < n * 2; i ++) {\n    if (s1.size() == s2.size()) {\n      s2.push_back(i);\n    }\n    else if (s1.size() < s2.size()) {\n      if (s[i] == s[s2[s1.size()]]) {\n\ts1.push_back(i);\n      }\n      else {\n\ts2.push_back(i);\n      }\n    }\n    else {\n      // can't happen\n    }\n  }\n\n  if (s1.size() == s2.size()) {\n    cout << 0 << endl;\n    rep (i, 0, s1.size()) {\n      cout << s1[i] + 1 << \" \";\n    }\n    cout << endl;\n    return;\n    // cout << s1.size() << endl;\n  }\n\n  else {\n    // s2.size is more\n    while (s[s1[s1.size()-1]] == s[s2[s2.size()-1]]) {\n      s1.pop_back();\n      s2.pop_back();\n    }\n    map<int, int> mp;\n    vector<int> shuffle;\n    for (int i = s1.size(); i < s2.size(); i ++) {\n      shuffle.push_back(s2[i]);\n    }\n    shuffle.push_back(s1[s1.size()-1]);\n    cout << shuffle.size() << \" \";\n    rep (i, 0, shuffle.size()) {\n      cout << shuffle[i] + 1 << \" \";\n    }\n    cout << endl;\n    mp[shuffle[0]] = shuffle[shuffle.size()-1];\n    rep (i, 1, shuffle.size()) {\n      mp[shuffle[i]] = mp[shuffle[i-1]];\n    }\n    vector<char> ns(2 * n);\n    rep (i, 0, 2*n) {\n      if (mp.find(i) == mp.end()) {\n\tns[i] = s[i];\n      }\n      else {\n\tns[i] = s[mp[i]];\n      }\n    }\n    s1.clear(); s2.clear();\n    for (int i = 0; i < n * 2; i ++) {\n      if (s1.size() == s2.size()) {\n\ts2.push_back(i);\n      }\n      else if (s1.size() < s2.size()) {\n\tif (ns[i] == ns[s2[s1.size()]]) {\n\t  s1.push_back(i);\n\t  cout << i+1 << \" \";\n\t}\n\telse {\n\t  s2.push_back(i);\n\t}\n      }\n      else {\n\t// can't happen\n      }\n    }\n    cout << endl;\n\n  }\n  \n  \n  \n  // int sidx = 0;\n  // while (sidx < 2 * n) {\n  //   if (s[sidx] == s[sidx+1]) {\n  //     sidx += 2;\n  //   }\n  //   else {\n  //     break;\n  //   }\n  // }\n  // vector<bool> b;\n  // for (int j = sidx; j <= 2 * n; j ++) {\n  //   b.push_back((s[j] == '1'));\n  // }\n\n  // int l = b.size();\n\n  // if (!b[0]) {\n  //   for (int i = 0; i < l; i ++) {\n  //     b[i] = !b[i];\n  //   }\n  // }\n  // // starts with 1, 0\n  // // find next 1\n  // // \n}\n\nint main() {\n  \n  ios_base::sync_with_stdio(false);\n  cin.tie(NULL);\n  \n  \n  int t = 1;\n  cin >> t; \n  // modint::set_mod(mod);\n  // std::setprecision(30);\n  while (t--) {\n    solve();\n  }\n  cout << endl;\n}\n\n  \n"
}