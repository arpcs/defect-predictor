{
    "id": 230488129,
    "contestId": 724,
    "creationTimeSeconds": 1698666005,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 724,
        "index": "B",
        "name": "Batch Sort",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1500,
        "tags": [
            "brute force",
            "greedy",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 724,
        "members": [
            {
                "handle": "Abel51"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475928900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// LUOGU_RID: 132479628\n// #pragma GCC optimize(2)\r\n// #pragma GCC optimize(3)\r\n// #pragma GCC optimize(\"Ofast\")\r\n// #pragma GCC optimize(\"inline\")\r\n// #pragma GCC optimize(\"-fgcse\")\r\n// #pragma GCC optimize(\"-fgcse-lm\")\r\n// #pragma GCC optimize(\"-fipa-sra\")\r\n// #pragma GCC optimize(\"-ftree-pre\")\r\n// #pragma GCC optimize(\"-ftree-vrp\")\r\n// #pragma GCC optimize(\"-fpeephole2\")\r\n// #pragma GCC optimize(\"-ffast-math\")\r\n// #pragma GCC optimize(\"-fsched-spec\")\r\n// #pragma GCC optimize(\"unroll-loops\")\r\n// #pragma GCC optimize(\"-falign-jumps\")\r\n// #pragma GCC optimize(\"-falign-loops\")\r\n// #pragma GCC optimize(\"-falign-labels\")\r\n// #pragma GCC optimize(\"-fdevirtualize\")\r\n// #pragma GCC optimize(\"-fcaller-saves\")\r\n// #pragma GCC optimize(\"-fcrossjumping\")\r\n// #pragma GCC optimize(\"-fthread-jumps\")\r\n// #pragma GCC optimize(\"-funroll-loops\")\r\n// #pragma GCC optimize(\"-fwhole-program\")\r\n// #pragma GCC optimize(\"-freorder-blocks\")\r\n// #pragma GCC optimize(\"-fschedule-insns\")\r\n// #pragma GCC optimize(\"inline-functions\")\r\n// #pragma GCC optimize(\"-ftree-tail-merge\")\r\n// #pragma GCC optimize(\"-fschedule-insns2\")\r\n// #pragma GCC optimize(\"-fstrict-aliasing\")\r\n// #pragma GCC optimize(\"-fstrict-overflow\")\r\n// #pragma GCC optimize(\"-falign-functions\")\r\n// #pragma GCC optimize(\"-fcse-skip-blocks\")\r\n// #pragma GCC optimize(\"-fcse-follow-jumps\")\r\n// #pragma GCC optimize(\"-fsched-interblock\")\r\n// #pragma GCC optimize(\"-fpartial-inlining\")\r\n// #pragma GCC optimize(\"no-stack-protector\")\r\n// #pragma GCC optimize(\"-freorder-functions\")\r\n// #pragma GCC optimize(\"-findirect-inlining\")\r\n// #pragma GCC optimize(\"-fhoist-adjacent-loads\")\r\n// #pragma GCC optimize(\"-frerun-cse-after-loop\")\r\n// #pragma GCC optimize(\"inline-small-functions\")\r\n// #pragma GCC optimize(\"-finline-small-functions\")\r\n// #pragma GCC optimize(\"-ftree-switch-conversion\")\r\n// #pragma GCC optimize(\"-foptimize-sibling-calls\")\r\n// #pragma GCC optimize(\"-fexpensive-optimizations\")\r\n// #pragma GCC optimize(\"-funsafe-loop-optimizations\")\r\n// #pragma GCC optimize(\"inline-functions-called-once\")\r\n// #pragma GCC optimize(\"-fdelete-null-pointer-checks\")\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n#define rep(i,a,b) for(register int i=a;i<=b;i++)\r\n#define rep1(i,a,b) for(int i=a;i<b;i++)\r\n#define rep2(i,a,b) for(int i=a;i>=b;i--)\r\n#define clean(x) memset(x,0,sizeof x)\r\n#define dirty(x) memset(x,0x7f,sizeof x)\r\ntemplate <typename T>\r\ninline void read(T &x){\r\n    x=0;\r\n    int f=1;\r\n    char ch=getchar();\r\n    while(!isdigit(ch)){\r\n        if(ch=='-') f=-1;\r\n        ch=getchar();\r\n    }\r\n    while(isdigit(ch)) x=x*10+(ch^48),ch=getchar();\r\n    x*=f;\r\n    return ;\r\n}\r\ntemplate <typename T>\r\ninline void write(T x){\r\n    if(x<0) putchar('-'),x=-x;\r\n    if(x>9) write(x/10);\r\n    putchar(x%10+'0');\r\n    return ;\r\n}\r\nconst int N=2e5+5;\r\nvector<int> G[N];\r\nint vis[N];\r\nbool flag=false;\r\ninline void DFS(int pos,int clr){\r\n\tif(vis[pos]){\r\n\t\tif(vis[pos]!=clr) flag=true;\r\n\t\treturn ;\r\n\t}\r\n\tvis[pos]=clr;\r\n\tfor(auto v:G[pos]) DFS(v,3-clr);\r\n\treturn ;\r\n}\r\nconst int N=1e3+5;\r\nint mp[N][N];\r\nsigned main(){\r\n    int n,m;\r\n    cin>>n>>m;\r\n    rep(i,1,n)rep(j,1,m) read(mp[i][j]);\r\n    rep(i,1,m)rep(j,1,m){\r\n    \tint cnt=0;\r\n    \trep(k,1,n){\r\n    \t\tswap(mp[k][i],mp[k][j]);\r\n    \t\tint p=0;\r\n    \t\trep(l,1,m)if(mp[k][l]!=l) p++;\r\n    \t\tif(p<=2) cnt++;\r\n    \t\tswap(mp[k][i],mp[k][j]);\r\n    \t}\r\n    \tif(cnt==n) return puts(\"YES\"),0;\r\n    }\r\n    puts(\"NO\");\r\n    return 0;\r\n}"
}