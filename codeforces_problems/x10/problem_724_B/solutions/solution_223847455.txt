{
    "id": 223847455,
    "contestId": 724,
    "creationTimeSeconds": 1695045575,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 724,
        "index": "B",
        "name": "Batch Sort",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1500,
        "tags": [
            "brute force",
            "greedy",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 724,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475928900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define ll long long\n#define pb push_back\n#define ff first\n#define ss second\n#define ull unsigned long long\n#define YES cout << \"YES\\n\"\n#define NO cout << \"NO\\n\"\n#define nn '\\n'\n#define LL_INF (1LL << 62)\n#define INF (1 << 30)\n#define mem(name, value) memset(name, value, sizeof(name))\n#define SetBit(x, k) (x |= (1LL << k))\n#define ClearBit(x, k) (x &= ~(1LL << k))\n#define CheckBit(x, k) (x & (1LL << k))\n#define mod 1000000007\n#define N7 10000007\n#define N5 100005\n#define hakuna ios_base::sync_with_stdio(false);\n#define matata cin.tie(NULL);\n\nvoid solve()\n{\n    int n, m;\n    cin >> n >> m;\n\n    int arr[n + 1][m + 1];\n\n    int n_ok[n + 1][m + 1];\n    mem(n_ok, 0);\n    for (int i = 1; i <= n; i++)\n    {\n        // YES;\n        for (int j = 1; j <= m; j++)\n        {\n            cin >> arr[i][j];\n            if (arr[i][j] != j)\n            {\n                n_ok[i][j] = 1;\n            }\n        }\n    }\n\n    bool f = 1;\n    for (int i = 1; i <= n; i++)\n    {\n        // YES;\n        for (int j = 1; j <= m; j++)\n        {\n            n_ok[i][0] += n_ok[i][j];\n        }\n        if (n_ok[i][0] > 2)\n            f = 0;\n    }\n    if (f)\n    {\n        YES;\n        return;\n    }\n\n    int brrr[n + 1][m + 1];\n\n    for (int i = 0; i <= n; i++)\n    {\n        // YES;\n        for (int j = 0; j <= m; j++)\n        {\n            brrr[i][j] = n_ok[i][j];\n        }\n    }\n\n    for (int i = 1; i <= m; i++)\n    {\n        // YES;\n        bool ff = 1;\n        for (int ii = 0; ii <= n; ii++)\n        {\n            // YES;\n            for (int jj = 0; jj <= m; jj++)\n            {\n                n_ok[ii][jj] = brrr[ii][jj];\n            }\n        }\n\n        // YES;\n\n        for (int j = 1; j <= m; j++)\n        {\n            if (i == j)\n                continue;\n            // YES;\n            for (int k = 1; k < n; k++)\n            {\n                if (n_ok[k][i] == 0)\n                    n_ok[k][i] = 1;\n                else if (n_ok[k][i] == j)\n                    n_ok[k][i] = 0;\n\n                if (n_ok[k][j] == 0)\n                    n_ok[k][j] = 1;\n                else if (n_ok[k][j] == i)\n                    n_ok[k][j] = 0;\n            }\n        }\n\n        for (int j = 1; j <= n; j++)\n        {\n            for (int k = 1; k <= m; k++)\n            {\n                n_ok[j][0] += n_ok[j][k];\n            }\n            if (n_ok[j][0] > 2)\n                ff = 0;\n        }\n        if (ff)\n        {\n            YES;\n            return;\n            break;\n        }\n    }\n    NO;\n}\nint main()\n{\n    // hakuna matata\n        ll t = 1; // cin>>t;\n    for (ll tc = 1; tc <= t; tc++)\n    {\n        // printf(\"Case %lld: \",tc);\n        // printf(\"\\n\");\n        solve();\n    }\n    return 0;\n}\n/*\n\n\n*/\n   \t\t\t  \t       \t  \t  \t\t\t \t\t\t\t\t"
}