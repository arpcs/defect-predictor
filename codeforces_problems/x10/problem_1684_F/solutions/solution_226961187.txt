{
    "id": 226961187,
    "contestId": 1684,
    "creationTimeSeconds": 1696658594,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1684,
        "index": "F",
        "name": "Diverse Segments",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "data structures",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1684,
        "members": [
            {
                "handle": "djx2021"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1652970900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 134,
    "timeConsumedMillis": 514,
    "memoryConsumedBytes": 39116800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=200100;\r\nstruct RANGE{ int l,r;}range[N];\r\nint a[N],b[N],mnL[N],mxR[N],oo[N];\r\nmultiset<int> se;\r\nvector<int> pos[N],ad[N],de[N];\r\ninline int read(){\r\n\tint FF=0,RR=1;\r\n\tchar ch=getchar();\r\n\tfor(;!isdigit(ch);ch=getchar()) if(ch=='-') RR=-1;\r\n\tfor(;isdigit(ch);ch=getchar()) FF=(FF<<1)+(FF<<3)+ch-48;\r\n\treturn FF*RR;\r\n}\r\nint count(int x,int L,int R){\r\n\tif(L>R) return 0;\r\n\treturn upper_bound(pos[x].begin(),pos[x].end(),R)-lower_bound(pos[x].begin(),pos[x].end(),L);\r\n}\r\nvoid sx(int &L,int R){\r\n\twhile(L<=R&&count(a[L],mnL[L],L-1)+count(a[L],R+1,mxR[L])==0) L++;\r\n}\r\nvoid work(){\r\n\tint n=read(),m=read();\r\n\tfor(int i=1;i<=n;i++) a[i]=b[i]=read();\r\n\tsort(b+1,b+n+1);\r\n\tint tot=unique(b+1,b+n+1)-b-1;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\ta[i]=lower_bound(b+1,b+tot+1,a[i])-b;\r\n\t\tpos[a[i]].push_back(i);\r\n\t}\r\n\tfor(int i=1;i<=m;i++){\r\n\t\trange[i].l=read(),range[i].r=read();\r\n\t\tad[range[i].l].push_back(range[i].r),de[range[i].r].push_back(range[i].r);\r\n\t}\r\n    for(int i=1;i<=n;i++) mnL[i]=n+5,mxR[i]=0;\r\n\tse.clear();\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tfor(int x:ad[i]) se.insert(x);\r\n\t\tif(!se.empty()){\r\n\t\t\tauto it=se.end();\r\n\t\t\tmxR[i]=*(--it);\r\n\t\t}\r\n\t\tfor(int x:de[i]) se.erase(se.find(x));\r\n\t}\r\n\tse.clear();\r\n\tfor(int i=1;i<=n;i++) ad[i].clear(),de[i].clear();\r\n\tfor(int i=1;i<=m;i++) ad[range[i].r].push_back(range[i].l),de[range[i].l].push_back(range[i].l);\r\n\tfor(int i=n;i;i--){\r\n\t\tfor(int x:ad[i]) se.insert(x);\r\n\t\tif(!se.empty()) mnL[i]=*(se.begin());\r\n\t\tfor(int x:de[i]) se.erase(se.find(x));\r\n\t}\r\n\tfor(int i=1;i<=n;i++) ad[i].clear(),de[i].clear();\r\n\tfor(int i=1,j=1;i<=n;i++){\r\n\t\twhile(j<i&&count(a[i],j,i-1)) j++;\r\n\t\too[i]=j; \r\n\t}\r\n\tint L=1,R=0,ans;\r\n\tfor(int i=1;i<=m;i++) if(oo[range[i].r]>range[i].l) R=max(R,oo[range[i].r]-1);\r\n\tsx(L,R),ans=R-L+1,R++;\r\n\tfor(;R<=n;R++){\r\n        sx(L,R);\r\n        if(L<=R) ans=min(ans,R-L+1);\r\n\t}\r\n\tprintf(\"%d\\n\",ans);\r\n    for(int i=1;i<=tot;i++) pos[i].clear();\r\n}\r\nint main(){\r\n\tint T=read();\r\n\twhile(T--) work();\r\n\tfprintf(stderr,\"%d ms\\n\",int(1e3*clock()/CLOCKS_PER_SEC));\r\n\treturn 0;\r\n}\r\n"
}