{
    "id": 229762392,
    "contestId": 1684,
    "creationTimeSeconds": 1698279026,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1684,
        "index": "F",
        "name": "Diverse Segments",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "data structures",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1684,
        "members": [
            {
                "handle": "fjashufi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1652970900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 134,
    "timeConsumedMillis": 468,
    "memoryConsumedBytes": 44032000,
    "source": "// LUOGU_RID: 131631749\n#include<bits/stdc++.h>\nusing namespace std;\nint t,n,m;\nint a[200005],b[200005];\nstruct stu{\n\tint l,r;\n}s[200005],st[200005];\nint mx[20][200005],cnt=0,tong[200005],pre[200005],logg[200005],lim[200005],ans=0,num;\nvector<int>aa[200005],dd[200005];\nset<int>col[200005];\nset<int>::iterator it;\nint find_pre(int x,int y){\n\tif(col[x].empty())return (-1);\n\tit=col[x].lower_bound(y);\n\tif(it==col[x].begin())return (-1);\n\tit--;\n\tif((*it)<y)return (*it);\n\treturn (-1);\n}\nint find_nex(int x,int y){\n\tif(col[x].empty())return (-1);\n\tit=col[x].upper_bound(y);\n\tif(it==col[x].end())return (-1);\n\tif((*it)>y)return (*it);\n\treturn (-1);\n}\nvoid del(int x){\n\tint sp=find_pre(a[x],x),sx=find_nex(a[x],x);\n    if(pre[x]>=lim[x])num--;\n    if(sx!=-1){\n        if(pre[sx]>=lim[sx])num--;\n        pre[sx]=sp;\n        if(pre[sx]>=lim[sx])num++;\n    }\n    col[a[x]].erase(x);\n}\nvoid add(int x){\n\tint sp=find_pre(a[x],x),sx=find_nex(a[x],x);\n\tpre[x]=sp;\n    if(pre[x]>=lim[x])num++;\n    if(sx!=-1){\n        if(pre[sx]>=lim[sx])num--;\n        pre[sx]=x;\n        if(pre[sx]>=lim[sx])num++;\n    }\n    col[a[x]].insert(x);\n}\nvoid solve(){\n\tmultiset<int>ls;\n\tfor(int i=1;i<=n;i++)col[i].clear(),aa[i].clear(),dd[i].clear();\n\tfor(int i=1;i<=cnt;i++){\n\t\taa[st[i].l].push_back(st[i].l);\n\t\tdd[st[i].r].push_back(st[i].l);\n\t}\n\tfor(int i=1;i<=n;i++){\n\t\tfor(int j=0;j<aa[i].size();j++)ls.insert(aa[i][j]);\n\t\tlim[i]=1000000000;\n\t\tif(ls.size())lim[i]=(*ls.begin());\n\t\tfor(int j=0;j<dd[i].size();j++)ls.erase(ls.find(dd[i][j]));\n\t}\n\tfor(int i=1;i<=n;i++)col[a[i]].insert(i);\n\tnum=0;\n\tfor(int i=1;i<=n;i++)if(pre[i]>=lim[i])num++;\n\tint L=1,R=1;\n\twhile(L<=n){\n\t\tif(R<L)R=L;\n\t\twhile(R<=n&&num){\n\t\t\tdel(R);R++;\n\t\t}\n\t\tif(num==0)ans=min(ans,R-L);\n\t\tadd(L++);\n\t}\n}\nint query(int l,int r){\n\tint c=logg[r-l+1];\n\treturn max(mx[c][l],mx[c][r-(1<<c)+1]);\n}\nint main(){\n\t// freopen(\"test.in\",\"r\",stdin);\n\t// freopen(\"test.out\",\"w\",stdout);\n\tscanf(\"%d\",&t);\n\tlogg[0]=(-1);for(int i=1;i<=200000;i++)logg[i]=logg[i/2]+1;\n\twhile(t--){\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tscanf(\"%d\",&a[i]);\n\t\t\tb[i]=a[i];\n\t\t}\n\t\tsort(b+1,b+1+n);\n\t\tcnt=unique(b+1,b+1+n)-b-1;\n\t\tfor(int i=1;i<=n;i++)a[i]=lower_bound(b+1,b+1+cnt,a[i])-b;\n\t\tfor(int i=1;i<=n;i++)tong[i]=(-1);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tpre[i]=tong[a[i]];\n\t\t\ttong[a[i]]=i;\n\t\t\tmx[0][i]=pre[i];\n\t\t}\n\t\tfor(int j=1;j<=logg[n];j++){\n\t\t\tfor(int i=1;i+(1<<j)-1<=n;i++){\n\t\t\t\tmx[j][i]=max(mx[j-1][i],mx[j-1][i+(1<<(j-1))]);\n\t\t\t}\n\t\t}\n\t\tcnt=0;ans=n;\n\t\tfor(int i=1;i<=m;i++){\n\t\t\tscanf(\"%d%d\",&s[i].l,&s[i].r);\n\t\t\tint mmx=query(s[i].l,s[i].r);\n\t\t\tif(mmx>=s[i].l){\n\t\t\t\tst[++cnt]=s[i];\n\t\t\t}\n\t\t}\n\t\tif(cnt){\n\t\t\tsolve();\n\t\t}else ans=0;\n\t\tprintf(\"%d\\n\",ans);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=0;j<=19;j++)mx[j][i]=0;\n\t\t}\n\t}\n\treturn 0;\n}"
}