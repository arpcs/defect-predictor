{
    "id": 224575286,
    "contestId": 1263,
    "creationTimeSeconds": 1695369455,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1263,
        "index": "F",
        "name": "Economic Difficulties",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2400,
        "tags": [
            "data structures",
            "dfs and similar",
            "dp",
            "flows",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 1263,
        "members": [
            {
                "handle": "lzc0115"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1575038100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 181,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 16691200,
    "source": "#include<iostream>\r\n#include<algorithm>\r\n#include<vector>\r\n#include<cstring>\r\n\r\nusing namespace std;\r\n\r\nint n, _n[2], fa[2][2010], p[2][2010], d[2][1010][1010], f[2][1010][1010], dfn[2][2010], a[2][2010], x, tot, ans;\r\nvector<int> v[2][2010];\r\n\r\nvoid dfs(int o, int x, int f){\r\n  fa[o][x] = f;\r\n  dfn[o][x] = ++tot;\r\n  for(int i = 0; i < v[o][x].size(); i++){\r\n    int y = v[o][x][i];\r\n    if(y != f) dfs(o, y, x);\r\n  }\r\n}\r\n\r\nint main(){\r\n  cin >> n;\r\n  for(int o = 0; o <= 1; o++){\r\n    cin >> _n[o];\r\n    for(int i = 2; i <= _n[o]; i++){\r\n      cin >> x;\r\n      v[o][x].push_back(i);\r\n      v[o][i].push_back(x);\r\n    }\r\n    for(int i = 1; i <= n; i++){\r\n      cin >> a[o][i];\r\n    }\r\n    tot = 0;\r\n    dfs(o, 1, 0);\r\n  }\r\n  for(int o = 0; o <= 1; o++){\r\n    for(int i = 1; i <= n; i++){\r\n      int x = a[o][i], nw = i - 1, cnt = 0;\r\n      while(x){\r\n        if(!p[o][x]) p[o][x] = i;\r\n        else{\r\n          while(nw >= p[o][x]) d[o][i][nw--] = cnt;\r\n        }\r\n        x = fa[o][x];\r\n        cnt++;\r\n      }\r\n      d[o][i][0] = cnt - 1;\r\n    }\r\n  }\r\n  memset(f, 0x3f3f3f, sizeof(f));\r\n  f[1][1][0] = d[1][1][0];\r\n  f[0][1][0] = d[0][1][0];\r\n  for(int i = 1; i <= n - 1; i++){\r\n    for(int j = 0; j < i; j++){\r\n      f[0][i + 1][j] = min(f[0][i][j] + d[0][i + 1][i], f[0][i + 1][j]);\r\n      f[1][i + 1][i] = min(f[0][i][j] + d[1][i + 1][j], f[1][i + 1][i]);\r\n      f[1][i + 1][j] = min(f[1][i][j] + d[1][i + 1][i], f[1][i + 1][j]);\r\n      f[0][i + 1][i] = min(f[1][i][j] + d[0][i + 1][j], f[0][i + 1][i]);      \r\n    }\r\n  }\r\n  ans = 1e9;\r\n  for(int i = 0; i < n; i++) ans = min(ans, min(f[0][n][i], f[1][n][i]));\r\n  cout << (_n[0] + _n[1] - 2 - ans);\r\n  return 0;\r\n}"
}