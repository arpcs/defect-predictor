{
    "id": 224567978,
    "contestId": 1263,
    "creationTimeSeconds": 1695364628,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1263,
        "index": "F",
        "name": "Economic Difficulties",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2400,
        "tags": [
            "data structures",
            "dfs and similar",
            "dp",
            "flows",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 1263,
        "members": [
            {
                "handle": "Sai_t"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1575038100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 181,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 39833600,
    "source": "// LUOGU_RID: 125537506\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nint n,a,L[2222],R[2222],sz[2222],up[2222][2222],dp[2222];\r\nstruct Edge{int nxt,v;}e[4444];\r\nint hd[2222],tote;\r\nvoid adde(int u,int v){\r\n\te[++tote]=(Edge){hd[u],v};\r\n\thd[u]=tote;\r\n}\r\nvoid dfs(int u){\r\n\tif(u>1)sz[u]=1;\r\n\telse sz[u]=0;\r\n\tfor(int i=hd[u];i;i=e[i].nxt){\r\n\t\tint v=e[i].v;\r\n\t\tdfs(v);\r\n\t\tsz[u]+=sz[v];\r\n\t\tL[u]=min(L[u],L[v]);\r\n\t\tR[u]=max(R[u],R[v]);\r\n\t}\r\n//\tcout<<u<<' '<<L[u]<<' '<<R[u]<<' '<<sz[u]<<endl;\r\n\tup[L[u]][R[u]]=max(up[L[u]][R[u]],sz[u]);\r\n}\r\nsigned main(){\r\n\tios::sync_with_stdio(0);\r\n\tcin.tie(0);cout.tie(0);\r\n\tcin>>n;\r\n\tfor(int op=0;op<2;op++){\r\n\t\tcin>>a;\r\n\t\tmemset(hd,0,sizeof(hd));tote=0;\r\n\t\tfor(int i=1;i<=a;i++)L[i]=a+1,R[i]=0;\r\n\t\tfor(int i=2;i<=a;i++){\r\n\t\t\tint u;cin>>u;\r\n\t\t\tadde(u,i);\r\n\t\t}\r\n\t\tfor(int i=1;i<=n;i++){\r\n\t\t\tint u;cin>>u;\r\n\t\t\tL[u]=R[u]=i;\r\n\t\t}\r\n\t\tdfs(1);\r\n\t}\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tfor(int j=i;j<=n;j++)\r\n\t\t\tdp[j]=max(dp[j],dp[i-1]+up[i][j]);\r\n//\tfor(int i=1;i<=n;i++)for(int j=1;j<=n;j++)\r\n//\t\tcout<<i<<' '<<j<<' '<<up[i][j]<<endl;\r\n\tcout<<dp[n]<<endl;\r\n\treturn 0;\r\n}\r\n"
}