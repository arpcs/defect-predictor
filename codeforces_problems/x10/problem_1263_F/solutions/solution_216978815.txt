{
    "id": 216978815,
    "contestId": 1263,
    "creationTimeSeconds": 1691062757,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1263,
        "index": "F",
        "name": "Economic Difficulties",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2400,
        "tags": [
            "data structures",
            "dfs and similar",
            "dp",
            "flows",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 1263,
        "members": [
            {
                "handle": "yela"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1575038100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define int long long\ntypedef long double ld;\ntypedef long long ll;\ntypedef unsigned long long ull;\n#define pb push_back\n#define F first\n#define S second\n#define mp make_pair\n#define sz(x)(int) x.size()\n#define ins insert\n#define speed ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr)\n#define rep(i, a, b) for (int i = a; i < b; i++)\n#define pf push_front\n#define pb push_back\n#define all(x) x.begin(), x.end()\n#define pii pair < int, int >\n#define pll pair < ll, ll >\n#define vi vector < int >\n#define vll vector < long long >\n#define vpii vector < pair < int, int >>\n#define vpll vector < pair < long long, long long >>\n#define mem(x, val) memset(x, val, sizeof x)\n#define debug cerr << \"OK\\n\";\n\nmt19937 bruh(chrono::steady_clock::now().time_since_epoch().count());\nmt19937_64 rofl(chrono::steady_clock::now().time_since_epoch().count());\n\nconst int inf = 1e9 + 100;\nconst ll INF = (ll)1e18;\nconst ll INF1 = (ll)1e14 + 1;\nconst int N = (int)2e3 + 5;\nconst ll mod = (ll)1e9 + 7;\nconst ll mod1 = (ll)1e9 + 9;\nconst ll MAX = (ll)1e6 + 5;\n//const int P = 331;\nconst int K = 17;\n\nll binpow(ll a, ll n) {\n    if (n == 0) return 1;\n    if (n == 1) return (a % mod);\n    ll r = binpow(a, n / 2);\n    if (n & 1) return (((r * r) % mod) * a) % mod;\n    return (r * r) % mod;\n}\n\nvoid setIO(string s) {\n    freopen((s + \".in\").c_str(), \"r\", stdin);\n    freopen((s + \".out\").c_str(), \"w\", stdout);\n}\n\nint dx[4] = {\n    0,\n    -1,\n    0,\n    1\n};\n\nint dy[4] = {\n    1,\n    0,\n    -1,\n    0\n};\n\nll add(ll a, ll b) {\n    return (((a + b) % mod) + mod) % mod;\n}\n\nll mul(ll a, ll b) {\n    return (a * b) % mod;\n}\n\nint p[N], pz[N], x[N], y[N], suf[N], fus[N], dp[N];\nbool used[N], was[N];\n\nint deg[N], deg1[N];\n\nvoid solve() {\n    int n, a, b;\n    cin >> n >> a;\n    for (int i = 1; i < a; i++) {\n        int u;\n        cin >> u;\n        p[i + 1] = u;\n        deg1[u]++;\n    }\n    for (int i = 1; i <= n; i++) {\n        cin >> x[i];\n    }\n    cin >> b;\n    for (int i = 1; i < b; i++) {\n        int u;\n        cin >> u;\n        pz[i + 1] = u;\n        deg[u]++;\n    }\n    for (int i = 1; i <= n; i++) {\n        cin >> y[i];\n    }\n    used[1] = 1;\n    was[1] = 1;\n    \n    for (int i = 1; i <= n; i++) {\n        int u = x[i];\n        int cnt = 0, c = 0;\n        while(deg1[u] <= 1) {\n            cnt++;\n            u = p[u];\n        }\n        u = y[i];\n        while(deg[u] <= 1) {\n            c++;\n            u = pz[u];\n        }\n        suf[i] = cnt;\n        fus[i] = c;\n        for (int j = i - 1; j > 0; --j) {\n            suf[j] += cnt;\n            fus[j] += c;\n        }\n        for (int j = 1; j <= i; j++) {\n            dp[i] = max(dp[i], dp[i - j] + max(suf[i - j + 1], fus[i - j + 1]));\n        }\n    }\n    cout << dp[n] << \"\\n\";\n}\n\nsigned main() {\n    speed;\n    int T = 1;\n    //cin >> T;\n    for (int i = 1; i <= T; i++) {\n        solve();\n    }\n    #ifdef ONPC\n        cerr << endl << \"finished in \" << clock() * 1.0 / CLOCKS_PER_SEC << \" sec\" << endl;\n    #endif\n    return 0;\n}\n\n"
}