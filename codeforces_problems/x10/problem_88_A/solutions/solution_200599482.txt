{
    "id": 200599482,
    "contestId": 88,
    "creationTimeSeconds": 1680544687,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 88,
        "index": "A",
        "name": "Chord",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1200,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    "author": {
        "contestId": 88,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1307458800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 75,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\n#include <string>\nusing namespace std;\n\nstring notes[] = { \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"B\", \"H\" };\n\nint getindex(string s) {\n    for (int i = 0; i < 12; i++) {\n        if (notes[i] == s)\n            return i;\n    }\n    return 0;\n}\n\nstring check (int index1, int index2, int index3){\n    int first_tones, second_tones, third_tones;\n    \n    if (index2 < index1) {\n        first_tones = index2 + 12 - index1;\n    }\n    else {\n        first_tones = index2 - index1;\n    }\n    if (index3 < index2) {\n        second_tones = index3 + 12 - index2;\n    }\n    else {\n        second_tones = index3 - index2;\n    }\n    \n    if (first_tones == 4 && second_tones == 3)\n        return \"major\";\n    \n    else if (first_tones == 3 && second_tones == 4)\n        return \"minor\";\n\n    else\n        return \"strange\";\n}\n\n\nint main() {\n    int index1, index2, index3;\n\n    string s1, s2, s3;\n    string s[6];\n    \n   \n    cin >> s1 >> s2 >> s3;\n    \n    \n    index1 = getindex(s1);\n    index2 = getindex(s2);\n    index3 = getindex(s3);\n    \n    \n    s[0] = check(index1, index2, index3);\n    s[1] = check(index1, index3, index2);\n    s[2] = check(index2, index1, index3);\n    s[3] = check(index2, index3, index1);\n    s[4] = check(index3, index1, index2);\n    s[5] = check(index3, index2, index1);\n    \n    int i = 0;\n    while(i < 6){\n        if(s[i] == \"major\" || s[i] == \"minor\"){\n            cout << s[i] << endl;\n            return 0;\n        }\n        i++;\n    }\n    \n    cout << \"strange\" << endl;\n    return 0;\n}\n\t \t  \t\t   \t     \t  \t\t  \t  \t"
}