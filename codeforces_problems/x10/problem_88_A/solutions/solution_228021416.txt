{
    "id": 228021416,
    "contestId": 88,
    "creationTimeSeconds": 1697199890,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 88,
        "index": "A",
        "name": "Chord",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1200,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    "author": {
        "contestId": 88,
        "members": [
            {
                "handle": "Hazem__Said"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1307458800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "                      #include <bits/stdc++.h>\r\n                      #include <chrono>\r\n                      using namespace std;\r\n                      \r\n\r\n                      #define ll long long\r\n                      #define what_is(x) cerr << #x << \" is \" << x << endl;\r\n                      #define all(x) x.begin(),x.end()\r\n                      //cout << std::fixed << std::setprecision(2) << decimalNumbe\r\n                      const ll  mod = 1e9 + 7;\r\n                      #define ln '\\n'\r\n                      typedef vector<ll> vec;\r\n                      void hazem()\r\n                                                              {\r\n                                                              ios_base ::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);\r\n                                                              #ifndef ONLINE_JUDGE\r\n                                                              freopen(\"input.txt\", \"r\", stdin), freopen(\"output.txt\", \"w\", stdout);\r\n                                                              #endif\r\n                                                              \r\n                                                              }\r\n            /*\r\n\r\n                   \r\n                      ll power(ll num,ll p,ll m)\r\n                      {\r\n                      ll res=1;\r\n                      while(p)\r\n                      {\r\n                      if(p%2==1)\r\n                      {\r\n                                res=((res%m) *(num%m))%m;\r\n                      }\r\n                      num=((num%m) * (num%m))%m;\r\n                      p/=2;\r\n                      }\r\n                      return res;\r\n                      }\r\n                      int ind=-1;\r\n                      map<int,int>res;\r\n                      bool can(int num,int i)\r\n                      {\r\n                      int l=0,r=res.size()-1;\r\n                      while(l<=r)\r\n                      {\r\n                      int mid=l+((r-l)/2);\r\n                      if(res[mid]==num and mid!=i)\r\n                      {\r\n                      ind=mid;\r\n                      return true;\r\n                      }\r\n                      else if(res[mid]>num)\r\n                      {\r\n                      r=mid-1;\r\n                      }\r\n                      else\r\n                      {\r\n                      l=mid+1;\r\n                      }\r\n                      }\r\n                      return false;\r\n                      }\r\n                      vector<ll>fact(ll num)  \r\n                      {\r\n                      if(num<=1)\r\n                      {\r\n                      return {1};\r\n                      }\r\n                      vector<ll>res;\r\n                      for(int i=2;i<=num;i++)\r\n                      {\r\n                      if(num%i==0)\r\n                      {\r\n                      res.push_back(i);\r\n                      while(num%i==0)\r\n                      {\r\n                      num/=i;\r\n                      }\r\n                      \r\n                      }\r\n\r\n                      }\r\n                      return res;\r\n                      }\r\n            double d(double a,double b,double c,double k)\r\n            {\r\n            return sqrt((a-c)*(a-c)+(b-k)*(b-k));\r\n            }\r\n            ll las(ll num)\r\n            {\r\n            ll y=1;\r\n            ll x=10;\r\n            for(int i=0;i<num;i++){\r\n            y+=x;\r\n            x*=10;\r\n            }\r\n            return y;\r\n            }\r\n              vector<int>y;\r\n  bool prime[20000010];\r\n  int tprime[20000010];\r\n  void SieveOfEratosthenes(ll n) \r\n  { \r\n\r\n      \r\n      memset(prime, true, sizeof(prime)); \r\n    \r\n      for (ll p = 2; p * p <= n; p++) { \r\n          if (prime[p] == true) { \r\n          \r\n              for (ll i = p * p; i <= n; i += p) \r\n                  prime[i] = false; \r\n          } \r\n      } \r\n    \r\n\r\n        \r\n  } \r\n  void tt()\r\n  {\r\n    int j=0;\r\n    for(int i=3;i<=20000000;i++)\r\n    {\r\n        if(prime[i] and prime[i+2])\r\n        {\r\n          tprime[j++]=i;\r\n        }\r\n    }\r\n  }\r\n  \r\nvec ans;\r\nset<ll>dont;\r\nll memory[int(1e5)];\r\n    ll dp(ll ind, ll o)\r\n    {\r\nif(ind>=ans.size())\r\n{\r\n  return 1;\r\n}\r\nauto &it=memory[ind];\r\nif(it!=-1)return it;\r\nll leave=dp(ind+1,o);\r\nll take=1;\r\nif(dont.count(o*ans[ind]))\r\n{\r\n  take=1+dp(ind+1,o*ans[ind]);\r\n}\r\nreturn it=max(take,leave);\r\n    }\r\n            */\r\n\r\n              bool is_prime(int num)\r\n {\r\n if(num<=1)\r\n {\r\n return false;\r\n }\r\n for (int i = 2; i*i <=num; i++)\r\n {\r\n if(num%i==0)\r\n {\r\n           return false;\r\n }\r\n }\r\n return true;\r\n }\r\nunsigned long long factorial(ll n)\r\n{\r\n    unsigned long long result = 1;\r\n    for (int i = 2; i <= n; ++i) {\r\n        result *= i;\r\n    }\r\n    return result;\r\n}\r\n\r\nunsigned long long NCR(ll n, ll r)\r\n{\r\n    if (r > n - r) {\r\n        r = n - r;\r\n    }\r\n\r\n    unsigned long long numerator = 1;\r\n    unsigned long long denominator = 1;\r\n\r\n    for (int i = 0; i < r; ++i) {\r\n        numerator *= (n - i);\r\n        denominator *= (r - i);\r\n    }\r\n\r\n    return numerator / denominator;\r\n}\r\n\r\nint gcd(int a,int b)\r\n{\r\n  if(b>a)\r\n  {\r\n    swap(a,b);\r\n  }\r\n  if(b==0)\r\n  {\r\n    return a;\r\n  }\r\nreturn gcd(b,a%b);    \r\n}\r\nint lcm(int a,int b)\r\n{\r\n  return (a/gcd(a,b) )*b;\r\n}\r\n                      void solution() {\r\nll d,m;\r\ncin>>d>>m;\r\nll Common_dis=lcm(d,m);\r\nd=(Common_dis-1)/d;\r\nm=(Common_dis-1)/m;\r\nif(min(m,d)==m)m++;\r\nelse d++;\r\n\r\nif(d>m)\r\n{\r\n  cout<<\"Dasha\\n\";\r\n}\r\nelse if(d==m)\r\n{\r\n  cout<<\"Equal\\n\";\r\n}\r\nelse\r\n{\r\n  cout<<\"Masha\\n\";\r\n}\r\n\r\n                      }\r\n            \r\n\r\n                      \r\n\r\n\r\n\r\n                      void solution2();\r\n                      \r\n\r\n\r\n                      int main() {\r\n            hazem();\r\n                      \r\n                      int test = 1;\r\n      // cin >> test;\r\n                      while (test--) {\r\n                                solution();\r\n                                // solution2();\r\n                      }\r\n\r\n                      \r\n                      }"
}