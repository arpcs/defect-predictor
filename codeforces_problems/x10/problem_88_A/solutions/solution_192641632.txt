{
    "id": 192641632,
    "contestId": 88,
    "creationTimeSeconds": 1675791260,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 88,
        "index": "A",
        "name": "Chord",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1200,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    "author": {
        "contestId": 88,
        "members": [
            {
                "handle": "zeus_pro_max"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1307458800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 75,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define _freopen_in freopen(\"input.txt\", \"r\", stdin)\r\n#define _freopen_out freopen(\"output.txt\", \"w\", stdout)\r\n#define _fast_io ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)\r\n#define _iterator(container) container.begin(), container.end()\r\n#define _str(x) to_string((x))\r\n#define _len(x) int(size((x)))\r\n#define _max(x, y, z) max((x), max((y), (z)))\r\n#define _min(x, y, z) min((x), min((y), (z)))\r\n#define _print_list(list) for (auto x : list) { cout << x << \" \"; } cout << '\\n'\r\n#define _print_grid(grid) for (const auto& v : grid) { for (auto x : v) { cout << x << \" \"; } cout << '\\n'; }\r\n#define _print_map(mp) for (const auto& [ k, v ] : mp) { cout << k << \": \" << v << endline; }\r\n#define _lcm(x, y) (((x) * (y)) / __gcd((x), (y)))\r\n#define _index_of(list, x) find(list.begin(), list.end(), (x)) - list.begin()\r\n#define _sublist(list, x, y) decltype(list)(list.begin() + x, list.begin() + y + 1)\r\n#define endline '\\n'\r\n#define MULTI_LINE(...) #__VA_ARGS__\r\n\r\nconstexpr long long int MOD = (long long int)1e9 + 7;\r\nconstexpr long double eps = 5e-8;\r\n\r\nusing namespace std;\r\n\r\ntypedef long long int ll;\r\ntypedef unsigned long long int ull;\r\n\r\nint gap(string a, string b)\r\n{\r\n\tunordered_map<string, int> chordMap;\r\n\tchordMap[\"C\"] = 1;\r\n\tchordMap[\"C#\"] = 2;\r\n\tchordMap[\"D\"] = 3;\r\n\tchordMap[\"D#\"] = 4;\r\n\tchordMap[\"E\"] = 5;\r\n\tchordMap[\"F\"] = 6;\r\n\tchordMap[\"F#\"] = 7;\r\n\tchordMap[\"G\"] = 8;\r\n\tchordMap[\"G#\"] = 9;\r\n\tchordMap[\"A\"] = 10;\r\n\tchordMap[\"B\"] = 11;\r\n\tchordMap[\"H\"] = 12;\r\n\r\n\tint from = chordMap[a];\r\n\r\n\tvector<string> chords = { \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"B\", \"H\" };\r\n\tint dist = 1, i = from;\r\n\tdo\r\n\t{\r\n\t\tif (chords[i] == b)\r\n\t\t{\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdist++;\r\n\t\ti = (i + 1) % 12;\r\n\t} while (i != from);\r\n\r\n\treturn dist;\r\n}\r\n\r\nvoid run(int tc)\r\n{\r\n\tvector<string> chord(3);\r\n\tcin >> chord[0];\r\n\tcin >> chord[1];\r\n\tcin >> chord[2];\r\n\r\n\tsort(begin(chord), end(chord));\r\n\r\n\tdo\r\n\t{\r\n\t\tint gap_xy = gap(chord[0], chord[1]);\r\n\t\tint gap_yz = gap(chord[1], chord[2]);\r\n\r\n\t\tif (gap_xy == 4 and gap_yz == 3)\r\n\t\t{\r\n\t\t\tcout << \"major\\n\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse if (gap_xy == 3 and gap_yz == 4)\r\n\t\t{\r\n\t\t\tcout << \"minor\\n\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t} while (next_permutation(begin(chord), end(chord)));\r\n\r\n\tcout << \"strange\\n\";\r\n}\r\n\r\n/**\r\n * Problem Name: \r\n * Problem URL: \r\n * References 1: \r\n *\r\n * Solution Time Complexity: \r\n * Solution Space Complexity: \r\n *\r\n * @author zeus\r\n */\r\nint main()\r\n{\r\n    _fast_io;\r\n    // _freopen_in;\r\n\r\n    int t = 1;\r\n    // cin >> t;\r\n\r\n    for (int i = 1; i <= t; i++)\r\n    {\r\n        run(i);\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}