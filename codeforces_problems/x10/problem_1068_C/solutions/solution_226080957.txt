{
    "id": 226080957,
    "contestId": 1068,
    "creationTimeSeconds": 1696105428,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1068,
        "index": "C",
        "name": "Colored Rooks",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "graphs"
        ]
    },
    "author": {
        "contestId": 1068,
        "members": [
            {
                "handle": "Mahmoud_Alaaraj"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1540398900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 512000,
    "source": "/*\r\n    o-> Submitted By Mahmoud Alaaraj.\r\n    o-> Status: Alhamdulillah <3\r\n    o-> Created: 30/09/2023, 21:53:36.\r\n*/\r\n\r\n// Problem Name = \"Colored Rooks\".\r\n// Class: C.\r\n\r\n#include <bits/stdc++.h>\r\n#define fastIO ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\r\n#define endl '\\n'\r\ntypedef long long ll;\r\nusing namespace std;\r\n\r\n\r\nvoid Solve() {\r\n    \r\n    int n, m;\r\n    cin >> n >> m;\r\n\r\n    vector<vector<int>> graph(n+10);\r\n    vector<int> squareSide(n+10, 1);\r\n    vector<set<pair<int, int>>> rocks(n+10);\r\n\r\n    for (int c=1; c<=n; c++) {\r\n        graph[c].push_back(c);\r\n    }\r\n\r\n    for (int i=0; i<m; i++) {\r\n\r\n        int u, v;\r\n\r\n        cin >> u >> v;\r\n\r\n        graph[u].push_back(v);\r\n\r\n        squareSide[u]++;\r\n\r\n    }\r\n\r\n    for (int c=1; c<=n; c++) {\r\n\r\n        int startPoint = squareSide[c-1]+1;\r\n\r\n        for (int i=0; i<squareSide[c]; i++) {\r\n            \r\n            for (int j=0; j<squareSide[c]-i-1; j++) {\r\n\r\n                rocks[c].insert({startPoint+i, startPoint+j});\r\n                rocks[c].insert({(*rocks[c].begin()).first, startPoint+j});\r\n\r\n            }\r\n\r\n            rocks[graph[c][i]].insert({startPoint+i, startPoint+squareSide[c]-i-1});\r\n            rocks[graph[c][i]].insert({(*rocks[graph[c][i]].begin()).first, startPoint+squareSide[c]-i-1});\r\n\r\n        }\r\n\r\n        squareSide[c]+=squareSide[c-1];\r\n\r\n    }\r\n\r\n    int last = 1e9;\r\n\r\n    for (int c=1; c<=n; c++) {\r\n\r\n        cout << rocks[c].size() << endl;\r\n\r\n        for (auto [x, y]:rocks[c]) {\r\n\r\n            cout << x << \" \" << y << endl;\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nint main() {\r\n    fastIO\r\n\r\n    #ifndef ONLINE_JUDGE\r\n    freopen(\"inputs.txt\", \"rt\", stdin);\r\n    freopen(\"outputs.txt\", \"wt\", stdout);\r\n    #endif\r\n\r\n    Solve();\r\n}"
}