{
    "id": 228349362,
    "contestId": 1068,
    "creationTimeSeconds": 1697403326,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1068,
        "index": "C",
        "name": "Colored Rooks",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "graphs"
        ]
    },
    "author": {
        "contestId": 1068,
        "members": [
            {
                "handle": "Dr.rabi3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1540398900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/***   Coding for Fun ^^ \u0648\u064e\u0645\u064e\u0627 \u062a\u064e\u0648\u0652\u0641\u0650\u064a\u0642\u0650\u064a \u0625\u0650\u0644\u0651\u064e\u0627 \u0628\u0650\u0627\u0644\u0644\u0651\u064e\u0647\u0650 \u06da \u0639\u064e\u0644\u064e\u064a\u0652\u0647\u0650 \u062a\u064e\u0648\u064e\u0643\u0651\u064e\u0644\u0652\u062a\u064f \u0648\u064e\u0625\u0650\u0644\u064e\u064a\u0652\u0647\u0650 \u0623\u064f\u0646\u0650\u064a\u0628\u064f    ***/\r\n#pragma GCC optimize (\"O3\")\r\n#pragma GCC optimize (\"unroll-loops\")\r\n#include <bits/stdc++.h>\r\n#include <ext/numeric>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#define ll long long\r\n#define ull unsigned ll\r\n#define ld long double\r\n#define ed '\\n'\r\n#define all(x) x.begin(), x.end()\r\n#define rall(x) x.rbegin(), x.rend()\r\n#define fixed(x) fixed<<setprecision(x)\r\n#define memo(dp,x) memset(dp,x,sizeof(dp))\r\n#define sumOf(a) (ll)((-1 + sqrt(8LL * a + 1)) / 2)\r\n#define cout(...) cerr << \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"]\\n\";\r\n#define Good_Bay return\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\ntemplate < typename T > using ordered_set = tree< T, null_type, less_equal< T >, rb_tree_tag, tree_order_statistics_node_update >;\r\n\r\ntemplate < typename T > istream& operator >> (istream& in, vector < T >& v) {\r\n    for (auto& x : v) in >> x;\r\n    return in;\r\n}\r\n\r\ntemplate < typename T > ostream& operator << (ostream& out, const vector < T >& v) {\r\n    for (const T& x : v) out << x << ' ';\r\n    return out;\r\n}\r\n\r\nvoid Accept() { // for VS code\r\n    ios_base::sync_with_stdio(false);\r\n    cout.tie(nullptr);\r\n    cin.tie(nullptr);\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n}\r\n\r\nconstexpr ll mod = 1e9 + 7, oo = 0x3f3f3f3f, N = 9999999999999 + 5;\r\nconst double pi = acos(-1), EPS = 1e-7;\r\nconstexpr ll OO = 0x3f3f3f3f3f3f3f3f;\r\n\r\nconstexpr int dy[] = { 0 , 1 , -1 , 0  , 1 , -1 , 1  , -1 };\r\nconstexpr int dx[] = { 1 , 0 ,  0 , -1 , 1 , -1 , -1 ,  1 };\r\n\r\nvoid doWork(int T) {\r\n    int n, m;\r\n    cin >> n >> m;\r\n    vector<pair<int, int>>ans[n + 1];\r\n    for (int i = 1;i <= n;i++) {\r\n        ans[i].push_back({ i,i });\r\n    }\r\n    int cnt = 200;\r\n    for (int i = 0;i < m;i++) {\r\n        int a, b;\r\n        cin >> a >> b;\r\n        ans[a].push_back({ cnt++,b });\r\n    }\r\n    for (int i = 1;i <= n;i++) {\r\n        cout << ans[i].size() << ed;\r\n        for (auto j : ans[i])\r\n            cout << j.first << ' ' << j.second << ed;\r\n    }\r\n}\r\nint main() {\r\n    cerr << \"M3L4 El-Code MYTFHM4\";\r\n    Accept();\r\n    // freopen(\"visitfj.in\", \"r\", stdin);\r\n    // freopen(\"visitfj.out\", \"w\", stdout);\r\n    int _ = 1;\r\n    // cin >> _;\r\n    for (int __ = 1;__ <= _;__++) {\r\n        // cout << \"Case #\" << __ << \": \";\r\n        doWork(__);\r\n        if (__ < _)cout << '\\n';\r\n        // cout << '\\n';\r\n    }\r\n    Good_Bay 0;\r\n}"
}