{
    "id": 222816950,
    "contestId": 1799,
    "creationTimeSeconds": 1694370144,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1799,
        "index": "D2",
        "name": "Hot Start Up (hard version)",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 2100,
        "tags": [
            "data structures",
            "dp"
        ]
    },
    "author": {
        "contestId": 1799,
        "members": [
            {
                "handle": "darksparrow"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1677508500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 311,
    "memoryConsumedBytes": 2867200,
    "source": "// \u2591\u2592\u2593\u2588\u25ba\u2500\u2550 \u24b9\u24b6\u24c7\u24c0\u24c8\u24c5\u24b6\u24c7\u24c7\u24c4\u24cc \u2550\u2500\u25c4\u2588\u2593\u2592\u2591\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);\r\n#define int long long int\r\n#define mod 1000000007\r\n// true means remove cpu1 \r\n//false means remove cpu2\r\nbool take(int cpu1, int cpu2, vector<int>& diff, unordered_map<int,vector<int>> &occ, int curr){\r\n   auto it = lower_bound(occ[cpu1].begin(),occ[cpu1].end(),curr);\r\n   if(it == occ[cpu1].end())\r\n   return true;\r\n\r\n   auto ik = lower_bound(occ[cpu2].begin(),occ[cpu2].end(),curr);\r\n   if(ik == occ[cpu2].end())\r\n   return false;\r\n\r\n   // means dono mein next occ available hai \r\n   int nextocc1 = *it;\r\n   int nextocc2 = *ik;\r\n   int extra1,extra2;\r\n\r\n   if(nextocc1 > nextocc2){\r\n      // means that cpu2 ki next occ near hai \r\n      extra1 = diff[cpu1];\r\n      int indst = ik-occ[cpu2].begin();\r\n      int indend = lower_bound(occ[cpu2].begin(),occ[cpu2].end(),nextocc1) - occ[cpu2].begin();\r\n\r\n      extra2 = (indend - indst) * diff[cpu2];\r\n   }\r\n   else{\r\n      extra2 = diff[cpu2];\r\n      int indst = it-occ[cpu1].begin();\r\n      int indend = lower_bound(occ[cpu1].begin(),occ[cpu1].end(),nextocc2) - occ[cpu1].begin();\r\n\r\n      extra1 = (indend - indst) * diff[cpu1];\r\n   }\r\n   if(extra1 > extra2)\r\n   return false;\r\n   return true;\r\n}\r\n\r\nint32_t main()\r\n{\r\n   fast\r\n   int t;\r\n   cin>>t;\r\n   while(t--){\r\n      int n,k;\r\n      cin>>n>>k;\r\n      vector<int> prog(n),cold(k+1),hot(k+1),diff(k+1);\r\n      unordered_map<int,vector<int>> occ;\r\n\r\n      for(int i=0; i<n; i++)\r\n      {\r\n         cin>>prog[i];\r\n         occ[prog[i]].push_back(i);\r\n      }\r\n\r\n      for(int i=1; i<=k; i++)\r\n      cin>>cold[i];\r\n      for(int i=1; i<=k; i++)\r\n      {\r\n         cin>>hot[i];\r\n         diff[i] = cold[i] - hot[i];\r\n      }\r\n      int cost = 0;\r\n      // calculate the basic cost\r\n\r\n      for(int i=0; i<n; i++)\r\n      cost += hot[prog[i]];\r\n      \r\n      int cpu1 = prog[0];\r\n      int cpu2 = -1;\r\n      cost += diff[prog[0]];\r\n\r\n      for(int i=1; i<n; i++)\r\n      {\r\n         int curr = prog[i];\r\n         if(curr == cpu1 || curr == cpu2)\r\n         continue;\r\n\r\n         cost += diff[curr];\r\n         if(cpu2 == -1){\r\n            cpu2 = curr;\r\n         }\r\n         else{\r\n            bool out = take(cpu1,cpu2,diff,occ,i);\r\n            if(out == true)\r\n               cpu1 = curr;\r\n            else\r\n               cpu2 = curr;\r\n         }\r\n      }\r\n      cout<<cost<<endl;\r\n   }\r\n   return 0;\r\n}\r\n\r\n"
}