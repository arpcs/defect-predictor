{
    "id": 234398449,
    "contestId": 1613,
    "creationTimeSeconds": 1700993698,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1613,
        "index": "E",
        "name": "Crazy Robot",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 1613,
        "members": [
            {
                "handle": "Ardelion"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1638369300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define int \t\t\tlong long\r\n#define X \t\t\t\tfirst\r\n#define Y \t\t\t\tsecond\r\n#define DEB(x)  \t\tcout << #x << \" = \" << x << endl;\r\n#define all(x) \t\t\tx.begin(), x.end()\r\n#define pb        \t\tpush_back\r\n#define lb        \t\tlower_bound\r\n#define ub        \t\tupper_bound\r\n#define migmig  \t    ios::sync_with_stdio(false);cin.tie(NULL);\r\n#define FileIO \t \t\tfreopen(\"input.txt\", \"r\", stdin); freopen(\"output.txt\", \"w\", stdout);\r\n#define exit(x) \t\t{cout << x << endl; return;}\r\n\r\ntypedef pair<int, int> pii;\r\n\r\nconst int N = 1e6+13;\r\nconst int MOD = 1e9 + 7; //998244353; //1e9+9;\r\nconst int INF = LLONG_MAX;\r\nconst int8_t dx[4] = {1, -1, 0,  0};\r\nconst int8_t dy[4] = {0,  0, 1, -1};\r\n\r\nint GCD(int _a, int _b) { return (!_b ? _a : GCD(_b, _a % _b)); }\r\nint POW(int _a, int _b) { int x = (!_b ? 1 : POW(_a, _b >> 1)); return x * x * (_b & 1 ? _a : 1); }\r\n\r\nint n, m;\r\nvector<vector<int>> dist;\r\nvector<vector<char>> MAP;\r\nqueue<pii> q;\r\n\r\nbool IS_VALID(int x, int y) {\r\n    if( (0 > x || x >= n) || (0 > y || y >= m) )\r\n        return 0;\r\n    if(MAP[x][y] == '#')\r\n        return 0;\r\n    int v = 0, nx, ny;\r\n    for(int d : {0, 1, 2, 3}) {\r\n        nx = x + dx[d];\r\n        ny = y + dy[d];\r\n        if( (0 <= nx && nx < n) && (0 <= ny && ny < m) ) {\r\n            if(MAP[nx][ny] == '.') {\r\n                v++;\r\n            }\r\n        }\r\n    }\r\n    if (v > 1)\r\n        return 0;\r\n    return 1;\r\n}\r\n\r\nvoid BFS(int v) {\r\n    int x = v/N;\r\n    int y = v%N;\r\n    int nx, ny;\r\n    dist[x][y] = 0;\r\n    q.push({x, y});\r\n    while(!q.empty()) {\r\n        pii temp = q.front();\r\n        q.pop();\r\n        x = temp.X;\r\n        y = temp.Y;\r\n        MAP[x][y] = (MAP[x][y] == 'L' ? 'L' : '+');\r\n        for(int d : {0, 1, 2, 3}) {\r\n            nx = x + dx[d];\r\n            ny = y + dy[d];\r\n            if(IS_VALID(nx, ny) && dist[nx][ny] > dist[x][y] + 1) {\r\n                dist[nx][ny] = dist[x][y] + 1;\r\n                q.push({nx, ny});\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvoid F() {\r\n    migmig;\r\n    cin >> n >> m;\r\n    int x, y;\r\n    MAP.clear();\r\n    dist.clear();\r\n    char a;\r\n    for(int i = 0; i < n; i++) {\r\n        vector<int> v1;\r\n        vector<char> v2;\r\n        for(int j = 0; j < m; j++) {\r\n            cin >> a;\r\n            if(a == 'L') {\r\n                x = i;\r\n                y = j;\r\n            }\r\n            v2.pb(a);\r\n            v1.pb(INF);\r\n        }\r\n        MAP.pb(v2);\r\n        dist.pb(v1);\r\n    }\r\n    BFS(x*N+y);\r\n    for(int i = 0; i < n; i++) {\r\n        for(int j = 0; j < m; j++) {\r\n            cout << MAP[i][j];\r\n        }\r\n        cout << endl;\r\n    }\r\n}\r\n\r\nint32_t main() {\r\n    int t=1;\r\n    cin >> t;\r\n    while(t--)\r\n        F();\r\n    return 0;\r\n}\r\n"
}