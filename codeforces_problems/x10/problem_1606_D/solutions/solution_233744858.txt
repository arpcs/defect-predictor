{
    "id": 233744858,
    "contestId": 1606,
    "creationTimeSeconds": 1700604378,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1606,
        "index": "D",
        "name": "Red-Blue Matrix",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1606,
        "members": [
            {
                "handle": "MostafaM.Galal"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1635518100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 32358400,
    "source": "#include <bits/stdc++.h>\r\n#include <random>\r\n\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef long double ld;\r\n\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\ntemplate <typename  T>\r\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\n\r\nconst ll N = 2e6+5, inf = LONG_MAX, mod = 1e9+7;\r\nvoid fast() { ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); }\r\nll add ( ll a , ll b)\r\n{\r\n    return (a + b) % mod;\r\n}\r\nll mul ( ll a , ll b)\r\n{\r\n    return 1LL * a * b % mod;\r\n}\r\n\r\nll fp( ll b , ll p)\r\n{\r\n    if(!p)\r\n        return 1;\r\n    ll temp = fp(b,p/2);\r\n    temp = mul(temp,temp);\r\n    if(p&1)\r\n        temp = mul(temp,b);\r\n    return temp;\r\n}\r\n\r\nll fact[N], inv[N];\r\nvoid build()\r\n{\r\n    fact[0] = fact[1] = inv[0] = inv[1] = 1;\r\n    for (ll i = 2; i < N; i++)\r\n    {\r\n        fact[i] = fact[i - 1] * i % mod;\r\n        inv[i] = inv[mod % i] * (mod - mod / i) % mod;\r\n    }\r\n    for (ll i = 2; i < N; i++)\r\n        inv[i] = inv[i] * inv[i - 1] % mod;\r\n}\r\nll nCr( ll n , ll r)\r\n{\r\n    return mul(fact[n],mul(inv[n-r],inv[r]));\r\n}\r\nll nPr(ll n, ll r)\r\n{\r\n    ll ans = nCr(n, r); ans *= fact[r];\r\n    ans %= mod;\r\n    return ans;\r\n}\r\n\r\nll mex(vector<ll> a){\r\n    set<ll> s;\r\n    ll n = (ll)a.size();\r\n\r\n    for (int i = 0; i < n; ++i)\r\n        s.insert(a[i]);\r\n\r\n    ll cu = 0;\r\n    for(auto ch : s){\r\n        if (ch != cu)\r\n            break;\r\n        cu++;\r\n    }\r\n\r\n    return cu;\r\n}\r\n\r\nvector<bool> isPrime(2000001, true);\r\nvoid sieveOfEratosthenes() {\r\n    ll n = 2000000;\r\n    isPrime[0] = isPrime[1] = false;\r\n    for (int i = 2; i <= n; i++) {\r\n        if (isPrime[i]) {\r\n            for (int j = 2 * i; j <= n; j += i)\r\n                isPrime[j] = false;\r\n        }\r\n    }\r\n}\r\n\r\ndouble fibonacci(ll n) {\r\n    double phi = (1 + sqrt(5)) / 2;\r\n    double psi = (1 - sqrt(5)) / 2;\r\n    double fn = (pow(phi, n) - pow(psi, n)) / sqrt(5);\r\n    return round(fn);\r\n}\r\n\r\nvector<ll> divis(ll n) {\r\n    vector<ll> r;\r\n    for (ll i = 1; i <= (ll)sqrt(n); ++i) {\r\n        if (n % i == 0) {\r\n            r.push_back(i);\r\n            if (n / i != i)\r\n                r.push_back(n / i);\r\n        }\r\n    }\r\n    return r;\r\n}\r\n\r\nvoid primeFactors(ll n, map<ll, ll>& m) {\r\n    while (n % 2 == 0) {\r\n        m[2]++;\r\n        n /= 2;\r\n    }\r\n    for (ll i = 3; i <= sqrt(n); i += 2) {\r\n        while (n % i == 0) {\r\n            m[i]++;\r\n            n /= i;\r\n        }\r\n    }\r\n    if (n > 2)\r\n        m[n]++;\r\n}\r\n\r\nvector<ll> sieveOfEratosthenes(ll n) {\r\n    vector<bool> isPrime(n + 1, true);\r\n    vector<ll> v;\r\n    isPrime[0] = isPrime[1] = false;\r\n    for (int i = 2; i <= n; i++) {\r\n        if (isPrime[i]) {\r\n            if (i * i <= n) {\r\n                v.push_back(i);\r\n                for (int j = 2 * i; j <= n; j += i)\r\n                    isPrime[j] = false;\r\n            } else\r\n                v.push_back(i);\r\n        }\r\n    }\r\n    return v;\r\n}\r\n\r\nbool func(ll x, ll k){\r\n    if ((ll)(log10(x) / log10((ll)log2(x))) >= k){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nint main() {\r\n    fast();\r\n\r\n    ll t, tt;\r\n    cin >> t;\r\n    tt = t;\r\n//    t = 1;\r\n\r\n    while (t--) {\r\n        ll n, m;\r\n        cin >> n >> m;\r\n        vector<vector<ll>> a(n, vector<ll>(m));\r\n        vector<vector<pair<ll, ll>>> l(n, vector<pair<ll, ll>>(m)), r(n, vector<pair<ll, ll>>(m));\r\n        vector<set<ll>> cr(m), cb(m);\r\n\r\n        for (ll i = 0; i < n; ++i){\r\n            for (ll j = 0; j < m; ++j){\r\n                cin >> a[i][j];\r\n                l[i][j] = {LONG_LONG_MAX, 0};\r\n                r[i][j] = {LONG_LONG_MAX, 0};\r\n            }\r\n        }\r\n\r\n        for (ll i = 0; i < n; ++i){\r\n            l[i][0] = {a[i][0], a[i][0]};\r\n            r[i][m-1] = {a[i][m-1], a[i][m-1]};\r\n            for (ll j = 1; j < m; ++j){\r\n                l[i][j] = {min(l[i][j-1].first, a[i][j]), max(l[i][j-1].second, a[i][j])};\r\n                r[i][m-1-j] = {min(r[i][m-j].first, a[i][m-1-j]), max(r[i][m-j].second, a[i][m-1-j])};\r\n            }\r\n        }\r\n\r\n        for (ll i = 0; i < n - 1; ++i){\r\n            for (ll j = 0; j < m - 1; ++j){\r\n                if (l[i][j].first > l[i+1][j].second && r[i][j+1].second < r[i+1][j+1].first)\r\n                    cr[j].insert(i);\r\n                if (l[i][j].second < l[i+1][j].first && r[i][j+1].first > r[i+1][j+1].second)\r\n                    cb[j].insert(i);\r\n            }\r\n        }\r\n\r\n        bool done = false;\r\n        for (ll i = 0; i < m-1; ++i){\r\n            if ((ll)cr[i].size() + (ll)cb[i].size() == n - 1){\r\n                done = true;\r\n                cout << \"YES\" << endl;\r\n                for (ll j = 0; j < n; ++j){\r\n                    if (cr[i].find(j) != cr[i].end())\r\n                        cout << \"R\";\r\n                    else\r\n                        cout << \"B\";\r\n                }\r\n                cout << ' ' << i+1 << endl;\r\n            }\r\n        }\r\n\r\n        if (!done)\r\n            cout << \"NO\" << endl;\r\n    }\r\n    return 0;\r\n}"
}