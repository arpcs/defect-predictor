{
    "id": 235823394,
    "contestId": 1606,
    "creationTimeSeconds": 1701768559,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1606,
        "index": "D",
        "name": "Red-Blue Matrix",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1606,
        "members": [
            {
                "handle": "AKALemon"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1635518100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 40,
    "timeConsumedMillis": 998,
    "memoryConsumedBytes": 243609600,
    "source": "// #pragma GCC optimize(\"Ofast\", \"inline\", \"-ffast-math\")\r\n// #pragma GCC target(\"avx,sse2,sse3,sse4,mmx\")\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef unsigned long long ull;\r\ntypedef long long ll;\r\ntypedef double db;\r\n// #define int long long\r\nint dx[] = {0, 1, 0, -1}, dy[] = {1, 0, -1, 0};\r\nconst int N = 1e6 + 50, LOGN = 30;\r\nconst ll mod = 1e9 + 7, inf = 1e9;\r\n\r\nvoid solve(){\r\n    [](){\r\n        int n, m;cin >> n >> m;\r\n        vector a(n + 1,vector<int> (m + 1));\r\n        for (int i = 1; i <= n; i++)\r\n        for (int j = 1; j <= m; j++) \r\n            cin >> a[i][j];\r\n        vector<vector<vector<int>>> l(n + 1, vector<vector<int>> (m + 1, vector<int> (2)));\r\n        vector<vector<vector<int>>> r(n + 1, vector<vector<int>> (m + 1, vector<int> (2)));\r\n        for (int i = 1; i <= n; i++) {\r\n            l[i][1][0] = l[i][1][1] = a[i][1];\r\n            r[i][m][0] = r[i][m][1] = a[i][m];\r\n        }\r\n        for (int i = 1; i <= n; i++)\r\n        for (int j = 2; j <= m; j++) {\r\n            l[i][j][0] = min(l[i][j - 1][0], a[i][j]);\r\n            l[i][j][1] = max(l[i][j - 1][1], a[i][j]);\r\n        }\r\n        for (int i = 1; i <= n; i++)\r\n        for (int j = m - 1; j >= 1; j--) {\r\n            r[i][j][0] = min(r[i][j + 1][0], a[i][j]);\r\n            r[i][j][1] = max(r[i][j + 1][1], a[i][j]);\r\n        }\r\n        for (int j = 1; j < m; j++) {\r\n            vector<int> id(n + 1);\r\n            iota(id.begin(), id.end(), 0);\r\n            sort(id.begin() + 1, id.end(), [&](int x, int y) {\r\n                if (l[x][j][0] != l[y][j][0]) return l[x][j][0] < l[y][j][0];\r\n                return x < y;\r\n            });\r\n\r\n            vector<vector<int>> up(2, vector<int> (2));\r\n            vector<vector<vector<int>>> down(n + 1, vector<vector<int>> (2, vector<int> (2)));\r\n            down[n][0][0] = l[id[n]][j][0], down[n][0][1] = l[id[n]][j][1];\r\n            down[n][1][0] = r[id[n]][j + 1][0], down[n][1][1] = r[id[n]][j + 1][1];\r\n\r\n            for (int i = n - 1; i >= 1; i--) {\r\n                down[i][0][0] = min(down[i + 1][0][0], l[id[i]][j][0]);\r\n                down[i][0][1] = max(down[i + 1][0][1], l[id[i]][j][1]);\r\n                down[i][1][0] = min(down[i + 1][1][0], r[id[i]][j + 1][0]);\r\n                down[i][1][1] = max(down[i + 1][1][1], r[id[i]][j + 1][1]);\r\n            }\r\n            for (int i = 1; i < n; i++) {\r\n                if (i == 1) {\r\n                    up[0][0] = l[id[1]][j][0], up[0][1] = l[id[1]][j][1];\r\n                    up[1][0] = r[id[1]][j + 1][0], up[1][1] = r[id[1]][j + 1][1];\r\n                }else {\r\n                    up[0][0] = min(up[0][0], l[id[i]][j][0]), up[0][1] = max(up[0][1], l[id[i]][j][1]);\r\n                    up[1][0] = min(up[1][0], r[id[i]][j + 1][0]), up[1][1] = max(up[1][1], r[id[i]][j + 1][1]);\r\n                }\r\n                if (up[0][1] < down[i + 1][0][0] && up[1][0] > down[i + 1][1][1]) {\r\n                    cout << \"YES\\n\";\r\n                    vector<char> ans(n + 1);\r\n                    for (int k = 1; k <= n; k++) {\r\n                        if (k <= i) ans[id[k]] = 'B';\r\n                        else ans[id[k]] = 'R';\r\n                    }\r\n                    for (int k = 1; k <= n; k++) {\r\n                        cout << ans[k];\r\n                    }\r\n                    cout << \" \" << j << '\\n';\r\n                    return;\r\n                }\r\n            }\r\n\r\n        }\r\n        cout << \"NO\\n\";\r\n        return;\r\n    }();\r\n    \r\n    \r\n}\r\n\r\nsigned main(){\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n    cout << setprecision(15) << fixed;\r\n    int t = 1;\r\n    cin >> t;\r\n    while(t--)solve();\r\n    return 0;\r\n}\r\n"
}