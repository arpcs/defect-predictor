{
    "id": 144093651,
    "contestId": 159,
    "creationTimeSeconds": 1643216511,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 159,
        "index": "E",
        "name": "Zebra Tower",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 1700,
        "tags": [
            "*special",
            "data structures",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 159,
        "members": [
            {
                "handle": "Retarded_Ape"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1331280000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// #include <ext/pb_ds/assoc_container.hpp>\r\n// #include <ext/pb_ds/tree_policy.hpp>\r\n// using namespace __gnu_pbds;\r\n// template <typename T> \r\n// using oset = tree\r\n//     <T, null_type, less<T>, \r\n//     rb_tree_tag,tree_order_statistics_node_update>; \r\n\r\n\r\n#define INF 1000000000000000000\r\n#define int long long\r\n#define mod 1000000007\r\n#define endl \"\\n\"\r\n\r\n//shortcuts\r\ntypedef vector<int> vi;\r\n#define pb push_back\r\n#define ff first\r\n#define ss second\r\n#define all(damn) damn.begin(),damn.end()\r\n\r\n#define time(function_name, ...) {Timer t(#function_name); function_name(__VA_ARGS__);}\r\n#define Time(var,function_name,...){Timer t(#function_name); var = function_name(__VA_ARGS__);}\r\nclass Timer {\r\n    string name;\r\n    decltype(chrono::high_resolution_clock::now()) startTime, endTime;\r\n    public:\r\n    #ifndef ONLINE_JUDGE\r\n    Timer(string s) {\r\n        name = s;\r\n        startTime = chrono::high_resolution_clock::now();\r\n    }\r\n    ~Timer() {\r\n        endTime = chrono::high_resolution_clock::now();\r\n        cerr << name << \" took \" << chrono::duration_cast<chrono::milliseconds>(endTime-startTime).count() << \"ms\" << endl;\r\n    }\r\n    #else\r\n    Timer(string s) {}\r\n    #endif\r\n};\r\n\r\n\r\nclass Segtree{\r\n    vector<int> T,a;\r\n    public:\r\n        void init(int n){\r\n            a.resize(n+1, 0);\r\n            T.resize(4*n+1,0);\r\n        }\r\n\r\n        void update(int v, int pos, int val, int TL, int TR){\r\n            //cout << TL << \" \" << TR << endl;\r\n            if(TL==TR){\r\n                T[v] = val;\r\n                a[pos] = val;\r\n                return;\r\n            }\r\n            int MID = (TL+TR)/2;\r\n            if(MID>=pos)update(2*v, pos, val, TL, MID);\r\n            else update(2*v+1, pos, val, MID+1, TR);\r\n            T[v] = T[2*v] + T[2*v+1];\r\n        }\r\n\r\n        int query(int v, int L, int R, int TL, int TR){\r\n            if(L>R)return 0;\r\n            if(TL==L && TR==R)return T[v];\r\n            int MID = (TL+TR)/2;\r\n            int res = query(2*v, L, min(R,MID), TL, MID) + query(2*v+1, max(L,MID+1), R, MID+1, TR);\r\n            return res;\r\n        }\r\n};\r\n\r\n\r\nint binexpo(int a, int n){\r\n    if(n==0)return 1;\r\n    int res = 0;\r\n    if(n%2)res = (a*binexpo(a,n-1))%mod;\r\n    else{\r\n        res = binexpo(a,n/2);\r\n        res*=res;\r\n        res%=mod;\r\n    }\r\n    return res;\r\n}\r\n\r\nint scanInt(){\r\n    int a;\r\n    cin >> a;\r\n    return a;\r\n}\r\n\r\nvector<int> scanVec(int n){\r\n    vector<int> res(n);\r\n    for(int i = 0; i<n; i++)cin >> res[i];\r\n    return res;\r\n}\r\n\r\n\r\nstruct triplet{\r\n    int first;\r\n    int second;\r\n    int index;\r\n    bool operator < (const triplet &A) const{\r\n        if(first==A.first)return second < A.second;\r\n        return first < A.first;\r\n    }\r\n};\r\n\r\n\r\nclass Seive{\r\n    int flag = 0;\r\n    int prim[100005] = {0};\r\n    public:\r\n\r\n    void init(){\r\n        if(flag)return;\r\n        flag = 1;\r\n        for(int i = 2; i<100005; i++){\r\n            if(prim[i])continue;\r\n            for(int j = i*i;j<100005; j+=i){\r\n                prim[j] = 1;\r\n            }\r\n            //cout << i << endl;\r\n        }\r\n    }\r\n\r\n    int isPrime(int i){\r\n        if(prim[i])return 0;\r\n        return 1;\r\n    }\r\n};\r\n\r\n\r\n\r\nvoid solve(){\r\n    int n;\r\n    cin >> n;\r\n    map<int, vector<pair<int, int>>> x;\r\n    map<int, set<pair<int, int>>> y;\r\n\r\n    pair<int, int> flag = {-1,-1};\r\n\r\n    for(int i = 0; i<n; i++){\r\n        int a1, b1;\r\n        cin >> a1 >> b1;\r\n        x[a1].pb({b1, i+1});\r\n        if(b1 > flag.ff){\r\n            flag.ff = b1;\r\n            flag.ss = a1;\r\n        }\r\n    }\r\n    for(auto &i : x){\r\n        int sum = 0;\r\n        int cnt = 0;\r\n        sort(all(i.ss));\r\n        reverse(all(i.ss));\r\n        for(auto itr: i.ss){\r\n            cnt++;\r\n            sum += itr.ff;\r\n            y[cnt].insert({sum, i.ff});\r\n        }\r\n    }\r\n    int ma = flag.ff;\r\n    vi ans;\r\n    ans.pb(flag.ss);\r\n    pair<int, int> A1, B1;\r\n    for(auto i : x){\r\n        int sum = 0;\r\n        int cnt = 0;\r\n        for(auto itr: i.ss){\r\n            cnt++;\r\n            sum += itr.ff;\r\n            auto temp = y[cnt].end();\r\n            if(temp!=y[cnt].begin()) temp--;\r\n            while(temp!=y[cnt].begin() && ((*temp).ss) == i.ff)temp--;\r\n            if(((*temp).ss) != i.ff){\r\n                int tans = sum + ((*temp).ff);\r\n                //cout << cnt << \" >> \" << ((*temp).ff) << \" \" << sum << endl;\r\n                if(tans > ma){\r\n                    ma = tans;\r\n                    A1 = {i.ff, cnt};\r\n                    B1 = {(*temp).ss, cnt};\r\n                }\r\n            }\r\n\r\n            temp = y[cnt+1].end();\r\n            if(temp!=y[cnt+1].begin()) temp--;\r\n            while(temp!=y[cnt+1].begin() && ((*temp).ss) == i.ff)temp--;\r\n            if( temp.size() && ((*temp).ss) != i.ff){\r\n                int tans = sum + ((*temp).ff);\r\n                cout << cnt+1 << \" >> \" << ((*temp).ff) << \" \" << sum << endl;\r\n                if(tans > ma){\r\n                    ma = tans;\r\n                    B1 = {i.ff, cnt};\r\n                    A1 = {(*temp).ss, cnt+1};\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    cout << ma << endl;\r\n    if(ma>=flag.ff){\r\n        ans.clear();\r\n        int cnt = 0;\r\n        //sort(all())\r\n        for(int i = 0; i<min(A1.ss, B1.ss); i++){\r\n            ans.pb(x[A1.ff][i].ss);\r\n            ans.pb(x[B1.ff][i].ss);\r\n            cnt++;\r\n            //cout << \" :: \"<<  x[A1.ff][i].ss << endl;\r\n            //cout <<\" :: \" <<x[B1.ff][i].ss << endl;\r\n\r\n        }\r\n        if(A1.ss>B1.ss){\r\n            ans.pb(x[A1.ff][cnt].ss);\r\n        }else if(B1.ss > A1.ss){\r\n            reverse(all(ans));\r\n            ans.pb(x[B1.ff][cnt].ss);\r\n            reverse(all(ans));\r\n        }\r\n    }\r\n    cout << ans.size() << endl;\r\n    for(auto i : ans)cout << i << \" \";\r\n    cout << endl;\r\n\r\n}\r\n\r\nsigned main(){\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n \r\n    //int t;cin >> t;while(t--)\r\n    solve();\r\n}\r\n\r\n//"
}