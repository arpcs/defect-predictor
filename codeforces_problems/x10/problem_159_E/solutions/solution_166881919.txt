{
    "id": 166881919,
    "contestId": 159,
    "creationTimeSeconds": 1659594021,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 159,
        "index": "E",
        "name": "Zebra Tower",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 1700,
        "tags": [
            "*special",
            "data structures",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 159,
        "members": [
            {
                "handle": "niunai01"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1331280000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 35,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 4812800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nint p,q,n,i,j,k,h,ans,s[100005],c[100005],l[100005],id[100005],H[100005],b[100005];\r\nbool cmp(int x,int y){\r\n\tif(c[x]==c[y]) return l[x]>l[y];\r\n\treturn c[x]<c[y];\r\n}\r\nsigned main(){\r\n\tscanf(\"%I64d\",&n);\r\n\tfor(i=0;i<n;i++){\r\n\t\tscanf(\"%I64d%I64d\",&c[i],&l[i]);\r\n\t\tid[i]=i;\r\n\t}\r\n\tfor(int i=0;i<=n+2;i++) H[i]=-1e18;\r\n\tsort(id,id+n,cmp);id[n]=-1;\r\n\tfor(i=0;i<n;i+=j,k++){\r\n\t\ts[k]=i;\r\n\t\tfor(h=j=0;c[id[i+j]]==c[id[i]];j++){\r\n\t\t\th+=l[id[i+j]];\r\n\t\t\tfor(int t=-1;t<=1;t++){\r\n\t\t\t\tif(h+H[j+t+1]>ans){\r\n\t\t\t\t\tans=h+H[j+t+1];\r\n\t\t\t\t\tp=k;q=b[j+t];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(h=j=0;c[id[i+j]]==c[id[i]];j++){\r\n\t\t\th+=l[id[i+j]];\r\n\t\t\tif(H[j+1]<h){\r\n\t\t\t\tH[j+1]=h;\r\n\t\t\t\tb[j]=k;\r\n\t\t\t} \r\n\t\t}\r\n\t}\r\n\ts[k]=n;\r\n\tif(s[p+1]-s[p]<s[q+1]-s[q]) swap(q,p);\r\n\tint t=(s[q+1]-s[q])*2+(s[p+1]-s[p]!=s[q+1]-s[q]);\r\n\tprintf(\"%I64d\\n%I64d\\n\",ans,t);\r\n\tfor(i=s[p],j=s[q];t--;i++,j++){\r\n\t\tprintf(\"%I64d \",id[i]+1);\r\n\t\tif(t) printf(\"%I64d \",id[j]+1),t--;\r\n\t}\r\n\treturn 0;\r\n} \r\n"
}