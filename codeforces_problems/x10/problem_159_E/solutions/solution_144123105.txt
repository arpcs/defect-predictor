{
    "id": 144123105,
    "contestId": 159,
    "creationTimeSeconds": 1643260886,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 159,
        "index": "E",
        "name": "Zebra Tower",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 1700,
        "tags": [
            "*special",
            "data structures",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 159,
        "members": [
            {
                "handle": "shiviDON"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1331280000
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 35,
    "timeConsumedMillis": 1200,
    "memoryConsumedBytes": 31129600,
    "source": "from  collections import  defaultdict\r\nn=int(input())\r\ng=defaultdict(list)\r\nfor i in range(n):\r\n    c,s=map(int,input().strip().split())\r\n    g[c].append((s,i+1))\r\npref=defaultdict(list)\r\nfor i in g:\r\n    g[i].sort(key=lambda s:s[0],reverse=True)\r\n    pre=g[i][0][0]\r\n    sz=1\r\n    pref[sz].append((pre,i))\r\n    for id in range(1,len(g[i])):\r\n        sz+=1\r\n        pre+=g[i][id][0]\r\n        pref[sz].append((pre,i))\r\nans=0\r\npair=None\r\n# print(pref)\r\n[pref[i].sort(reverse=True) for i in pref]\r\nfor i in pref:\r\n    if len(pref[i])>=2:\r\n        if pref[i][0][0]+pref[i][1][0]>ans:\r\n            ans=pref[i][0][0]+pref[i][1][0]\r\n            pair=((pref[i][0][1],i),(pref[i][1][1],i)) #id, size of pref taken\r\n    if i==1:\r\n        continue\r\n    i2=i-1\r\n    if pref[i2][0][1]==pref[i][0][1]:\r\n        if len(pref[i2])>=2:\r\n            if pref[i2][1][0]+pref[i][0][0]>ans:\r\n                ans=pref[i2][1][0]+pref[i][0][0]\r\n                pair=((pref[i2][1][1],i2),(pref[i][0][1],i))\r\n        if len(pref[i])>=2:\r\n            if pref[i2][0][0] + pref[i][1][0] > ans:\r\n                ans = pref[i2][0][0] + pref[i][1][0]\r\n                pair = ((pref[i2][0][1], i2), (pref[i][1][1], i))\r\n    else:\r\n        if pref[i2][0][0] + pref[i][0][0] > ans:\r\n            ans = pref[i2][0][0] + pref[i][0][0]\r\n            pair = ((pref[i2][0][1], i2), (pref[i][0][1], i))\r\nprint(ans)\r\ngen=[]\r\nfor col,sz in pair:\r\n    gen1=[id for wt,id in g[col][:sz]]\r\n    gen.append(gen1)\r\na,b=sorted(gen,key=len,reverse=True)\r\nprint(len(a)+len(b))\r\nwhile a :\r\n    print(a.pop(0),end=\" \")\r\n    if b:\r\n        print(b.pop(0),end=\" \")\r\n"
}