{
    "id": 220881021,
    "contestId": 1358,
    "creationTimeSeconds": 1693240650,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1358,
        "index": "C",
        "name": "Celex Update",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "math"
        ]
    },
    "author": {
        "contestId": 1358,
        "members": [
            {
                "handle": "job_ke_liye"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1590503700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nconst int MOD = 1000000007; // Adjust the modulo as needed\r\n\r\n// Function to calculate modular exponentiation\r\nlong long power(long long base, long long exponent) {\r\n    long long result = 1;\r\n    while (exponent > 0) {\r\n        if (exponent % 2 == 1) {\r\n            result = (result * base) % MOD;\r\n        }\r\n        base = (base * base) % MOD;\r\n        exponent /= 2;\r\n    }\r\n    return result;\r\n}\r\n\r\n// Function to calculate modular inverse using Fermat's Little Theorem\r\nlong long modInverse(long long num) {\r\n    return power(num, MOD - 2);\r\n}\r\n\r\n// Function to calculate binomial coefficient using Lucas Theorem\r\nlong long binomialCoeff(long long n, long long k) {\r\n    if (k == 0) {\r\n        return 1;\r\n    }\r\n\r\n    long long num = 1;\r\n    long long den = 1;\r\n\r\n    while (n > 0 || k > 0) {\r\n        long long nDigit = n % MOD;\r\n        long long kDigit = k % MOD;\r\n        num = (num * nDigit) % MOD;\r\n        den = (den * kDigit) % MOD;\r\n        n /= MOD;\r\n        k /= MOD;\r\n    }\r\n\r\n    long long result = (num * modInverse(den)) % MOD;\r\n    return result;\r\n}\r\n\r\nint main() {\r\n    int t; // Number of test cases\r\n    // cout << \"Enter the number of test cases: \";\r\n    cin >> t;\r\n\r\n    while (t--) {\r\n        long long a,b,c,d;\r\n        cin>>a>>b>>c>>d;\r\n        int n=c-a+1;\r\n        int m=d-b+1;        // cout << \"Enter the dimensions of the matrix (n m): \";\r\n        // cin >> n >> m;\r\n\r\n        long long paths = binomialCoeff(n + m - 2, min(n - 1, m - 1));\r\n        cout << << paths << endl;\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}