{
    "contestId": 439,
    "index": "E",
    "name": "Devu and Birthday Celebration",
    "type": "PROGRAMMING",
    "points": 2500.0,
    "rating": 2100,
    "tags": [
        "combinatorics",
        "dp",
        "math"
    ],
    "desc": {
        "title": "E. Devu and Birthday Celebration",
        "statement": "<p>Today is Devu's birthday. For celebrating the occasion, he bought <span class=\"tex-span\"><i>n</i></span> sweets from the nearby market. He has invited his <span class=\"tex-span\"><i>f</i></span> friends. He would like to distribute the sweets among them. As he is a nice guy and the occasion is great, he doesn't want any friend to be sad, so he would ensure to give at least one sweet to each friend. </p><p>He wants to celebrate it in a unique style, so he would like to ensure following condition for the distribution of sweets. Assume that he has distributed <span class=\"tex-span\"><i>n</i></span> sweets to his friends such that <span class=\"tex-span\"><i>i</i><sup class=\"upper-index\"><i>th</i></sup></span> friend is given <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> sweets. He wants to make sure that there should not be any positive integer <span class=\"tex-span\"><i>x</i>\u2009&gt;\u20091</span>, which divides every <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>.</p><p>Please find the number of ways he can distribute sweets to his friends in the required way. Note that the order of distribution is important, for example [1, 2] and [2, 1] are distinct distributions. As the answer could be very large, output answer modulo <span class=\"tex-span\">1000000007</span> <span class=\"tex-span\">(10<sup class=\"upper-index\">9</sup>\u2009+\u20097)</span>.</p><p>To make the problem more interesting, you are given <span class=\"tex-span\"><i>q</i></span> <span class=\"tex-font-style-bf\">queries</span>. Each query contains an <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>f</i></span> pair. For each query please output the required number of ways modulo <span class=\"tex-span\">1000000007</span> <span class=\"tex-span\">(10<sup class=\"upper-index\">9</sup>\u2009+\u20097)</span>.</p>",
        "inputSpecification": "<p>The first line contains an integer <span class=\"tex-span\"><i>q</i></span> representing the number of queries <span class=\"tex-span\">(1\u2009\u2264\u2009<i>q</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup>)</span>. Each of the next <span class=\"tex-span\"><i>q</i></span> lines contains two space space-separated integers <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>f</i></span> <span class=\"tex-span\">(1\u2009\u2264\u2009<i>f</i>\u2009\u2264\u2009<i>n</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup>)</span>.</p>",
        "outputSpecification": "<p>For each query, output a single integer in a line corresponding to the answer of each query.</p>",
        "samples": [
            {
                "input": "5<br/>6 2<br/>7 2<br/>6 3<br/>6 4<br/>7 4<br/>",
                "output": "2<br/>6<br/>9<br/>10<br/>20<br/>"
            }
        ],
        "note": "<p>For first query: <span class=\"tex-span\"><i>n</i>\u2009=\u20096,\u2009<i>f</i>\u2009=\u20092</span>. Possible partitions are [1, 5] and [5, 1].</p><p>For second query: <span class=\"tex-span\"><i>n</i>\u2009=\u20097,\u2009<i>f</i>\u2009=\u20092</span>. Possible partitions are [1, 6] and [2, 5] and [3, 4] and [4, 3] and [5, 3] and [6, 1]. So in total there are 6 possible ways of partitioning.</p>"
    },
    "suggested_categories": [
        "combinatorics",
        "number theory",
        "permutations",
        "modulo arithmetic",
        "divisibility",
        "mathematics",
        "counting",
        "distribution",
        "algorithms",
        "dynamic programming",
        "combinatorial problems",
        "integer partition",
        "factorization",
        "prime numbers",
        "combinatorial optimization",
        "mathematical logic",
        "number sets",
        "cryptography",
        "computational complexity",
        "problem solving"
    ]
}