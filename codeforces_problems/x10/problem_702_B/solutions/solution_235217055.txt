{
    "id": 235217055,
    "contestId": 702,
    "creationTimeSeconds": 1701433690,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 702,
        "index": "B",
        "name": "Powers of Two",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "brute force",
            "data structures",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 702,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1469804400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 43,
    "timeConsumedMillis": 358,
    "memoryConsumedBytes": 5324800,
    "source": "#include <iostream>\n#include <queue>\n#include <iostream>\n#include <unordered_map>\n#include <sstream>\n#include <cmath>\n#include<map>\n#include<vector>\n#include <iomanip>\nusing namespace std;\n\nbool isPrime(int n) {\n    if (n <= 1) {\n        return false;\n    }\n    for (int i = 2; i*i <= n; ++i) {\n        if (n % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint smallestPrimeDivisor(int x) {\n    for (int i = 2; i <= x; ++i) {\n        if (x % i == 0 && isPrime(i)) {\n            return i;\n        }\n    }\n    return -1;\n}\nint main() {\n    int n;\n    cin >> n;\n    vector<int> arr(n);\n\n    for (int i = 0; i < n; i++) {\n        cin >> arr[i];\n    }\n\n    unordered_map<int, int> freq;\n    long long count = 0;\n\n    for (int i = 0; i < n; i++) {\n        int current = arr[i];\n        for (int j = 0; j <= 31; j++) {\n            int target = (1 << j) - current;\n            if (freq.count(target)) {\n                count += freq[target];\n            }\n        }\n        freq[current]++;\n    }\n\n    cout << count << endl;\n    return 0;\n}\n\n \t \t\t\t\t   \t\t\t   \t \t  \t \t\t \t \t\t\t"
}