{
    "id": 232544410,
    "contestId": 702,
    "creationTimeSeconds": 1699812474,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 702,
        "index": "B",
        "name": "Powers of Two",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "brute force",
            "data structures",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 702,
        "members": [
            {
                "handle": "bkifhr8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1469804400
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 43,
    "timeConsumedMillis": 2027,
    "memoryConsumedBytes": 107315200,
    "source": "#include<iostream>\n#include<cstring>\n#include<string>\n#include<vector>\n#include<algorithm>\n#include<cmath>\n#include<iomanip>\n#include<unordered_set>\n#include<set>\n#include<queue>\n#include <map>\n#include <unordered_map>\n#include <iterator>\n#include <list>\n\n\n#define _USE_MATH_DEFINES\n\n#define M_PI 314159265358979323846264338327\n#define lli long long int\n#define li long int\n#define ld long double\n#define f0r(i,x) for(int i=0;i<x;i++)\n#define all(x) x.begin(), x.end()\n\nusing namespace std;\n\n\n\nconst lli inf = 1e9, MAX = 1e5 + 5;\nvector<pair<int, int>>adj[MAX];\n//vector<int>finalAdj[MAX];\n//vector<int>d(MAX, inf), p(MAX);\n//vector<int>parent(MAX);\n//vector<bool>visit(MAX);\n//vector<int>cat(MAX);\n//vector<int>team(MAX);\nvector<vector<char>>grid;\n//vector<vector<bool>>vis;\n//\n//\nint n, m, k;\n//\n//int walls = 0;\n//\n//\nint dx[] = { 1, 0, -1, 0, -1, -1, 1, 1 };\nint dy[] = { 0, -1, 0, 1, -1, 1, -1, 1 };\n//char di[] = { 'D', 'L', 'U', 'R' };\n//vector<char>color(MAX);\n//\n//\n//bool dfs(int x) {\n//    visit[x] = true;\n//    if (x == m) { return true; }\n//    else if (x > m) { return false; }\n//    for (auto u : adj[x]) {\n//        if (!visit[u]) { dfs(u); }\n//    }\n//\n//}\n\n\n\n\nint r, c;\n\n\nmap<pair<int, int>, bool> allowed;\nvector<char> dist;\n\n\nvoid bfs(int a, int b) {\n    deque<pair<int, int>>q;\n\n    q.push_front({ a,b });\n\n    while (!q.empty()) {\n        int x = q.front().first;\n        int y = q.front().second;\n        q.pop_front();\n\n        f0r(i, 4) {\n            int nx = x + dx[i], ny = y + dy[i];\n            if (grid[nx][ny] == '.' && (nx > n || ny > m)) { cout << \"yes\\n\"; return; }\n            if (grid[nx][ny] == '.') {\n                q.push_back({ nx,ny });\n                if (i == 0) { dist.push_back('D'); }\n                if (i == 1) { dist.push_back('L'); }\n                if (i == 2) { dist.push_back('U'); }\n                if (i == 3) { dist.push_back('R'); }\n            }\n        }\n    }\n\n\n}\n\n\nbool isPrime(lli n) {\n    if ((!(n % 2)) && n > 2) { return false; }\n    for (int i = 3; i * i <= n; i += 2) {\n        if (!(n % i)) { return false; }\n    }\n    return true;\n}\n\nint isPrime2(lli n) {\n    if ((!(n % 2)) && n > 2) { return 2; }\n    for (int i = 3; i * i <= n; i += 2) {\n        if (!(n % i)) { return i; }\n    }\n    return n;\n}\n\nlli gcd(lli a, lli b) {\n\n    if (!b) { return a; }\n\n    return gcd(b, a % b);\n}\n\nlli lcm(lli a, lli b) {\n    return (a * b) / gcd(a, b);\n}\n\nint min(int x) {\n    int a = 2;\n    int b = x / 2;\n    return a, b;\n\n}\n\n\nint g(int x) {\n    if (x == 0) { return 0; }\n    if (x == 1) { return 1; }\n    if (x == 2) { return 2; }\n    if (isPrime(x) && x % 2 == 1) { return 0; }\n    else {\n        int a = isPrime2(x);\n        int b = x / a;\n\n        return g(a) + g(b);\n\n    }\n}\n\n\n\nint main() {\n\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n\n    int t = 1;\n    //cin >> t;\n    while (t--) {\n        \n        double n;\n        cin >> n;\n        vector<int>v(n);\n        vector<lli>p2;\n        map<int, int>mp;\n        f0r(i, 32) {\n            p2.push_back(1ll*(1 << i));\n        }\n      /*  f0r(i, 32) {\n            cout << p2[i] << \"\\n\";\n        }*/\n\n        f0r(i,n) {\n            cin >> v[i];\n            mp[v[i]]++;\n        }\n        lli ans = 0;\n        f0r(i, n) {\n            lli a = v[i];\n            f0r(j, 32) {\n                lli b = p2[j] - a;\n\n                if (mp[b]) {\n                    if (a == b) {\n                        ans += mp[b] - 1;\n                    }\n                    else { ans += mp[b]; }\n                }\n            }\n        }\n        \n        cout << (ans>>1);\n\n\n\n        ///sieve\n\n        //bool prime[1000000];\n        //memset(prime, true, sizeof(prime));\n        //prime[0] = prime[1] = false;\n        //for (lli i = 2; i*i <  1000000; i++) {\n        //\tif (prime[i]) {\n        //\t\tfor (lli j = i * i; j < 1000000; j += i) {\n        //\t\t\tprime[j] = false;\n        //\t\t}\n        //\t}\n        //\n        //}\n\n        //f0r(i, 1000000) {\n        //\tif (prime[i]) {\n        //\t\tcout << i << \" \";\n        //\t}\n        //}\n    }\n\n}\n  \t     \t \t  \t   \t\t\t \t  \t\t\t\t\t"
}