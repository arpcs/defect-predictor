{
    "id": 231927333,
    "contestId": 702,
    "creationTimeSeconds": 1699442839,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 702,
        "index": "B",
        "name": "Powers of Two",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "brute force",
            "data structures",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 702,
        "members": [
            {
                "handle": "bkifhr6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1469804400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "import java.util.HashMap;\nimport java.util.Scanner;\n\nclass CountPairsWithPowerOf2Sum {\n    public static void main(String[] args) {\n\n\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = scanner.nextInt();\n        }\n\n        int count = countPairsWithPowerOf2Sum(arr);\n\n        System.out.println(count);\n    }\n\n    public static int countPairsWithPowerOf2Sum(int[] a) {\n        HashMap<Integer, Integer> frequencyMap = new HashMap<>();\n        int count = 0;\n\n        for (int element : a) {\n            for (int k = 0; k <= 31; k++) {\n                int complement = (1 << k) - element;\n                if (frequencyMap.containsKey(complement)) {\n                    count += frequencyMap.get(complement);\n                }\n            }\n            frequencyMap.put(element, frequencyMap.getOrDefault(element, 0) + 1);\n        }\n\n        return count;\n    }\n}\n\n \t \t \t\t\t  \t\t   \t  \t\t  \t \t\t\t \t\t\t"
}