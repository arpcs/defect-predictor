{
    "id": 144038115,
    "contestId": 193,
    "creationTimeSeconds": 1643179130,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 193,
        "index": "C",
        "name": "Hamming Distance",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math",
            "matrices"
        ]
    },
    "author": {
        "contestId": 193,
        "members": [
            {
                "handle": "Rushroom"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1338737400
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "/*\r\n * @Description: I want to be the weakest vegetable in the world!\r\n * @Author: CGBoy\r\n * @Date: 2022-01-26 13:48:09\r\n */\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define forr(i,a,n) for(int i=a;i<=n;i++)\r\n#define rep(i,n) forr(i,0,n-1)\r\n#define repp(i,n) forr(i,1,n)\r\n#define pb push_back\r\n#define mp make_pair\r\n#define init(a,i) memset(a,i,sizeof(a))\r\n#define fi first\r\n#define se second\r\n#define mod 1000000007\r\n#define MOD 998244353\r\n#define MAXN 0x3f3f3f3f\r\nint T, case_;\r\nint a, b, c, d, e, f;\r\nint res[10], sum, mn = MAXN, best[10];\r\nstring ans[10];\r\nvoid solve() {\r\n    cin >> a >> b >> c >> d >> e >> f;\r\n    rep(x, 1000000) {\r\n        a -= x, b -= x, c -= x;\r\n        res[0] = -a - b + e + f;\r\n        res[1] = -a - c + d + f;\r\n        res[2] = b + c - f;\r\n        res[3] = -b - c + d + e;\r\n        res[4] = a + c - e;\r\n        res[5] = a + b - d;\r\n        res[6] = x;\r\n        a += x, b += x, c += x;\r\n        bool fail = 0;\r\n        sum = 0;\r\n        rep(i, 7) {\r\n            if (res[i] % 2 != 0 || res[i] < 0)fail = 1;\r\n            else  res[i] /= 2, sum += res[i];\r\n        }\r\n        if (fail || sum > mn)continue;\r\n        mn = sum;\r\n        memcpy(best, res, sizeof(best));\r\n    }\r\n    if (mn == MAXN) {\r\n        cout << -1;\r\n        return;\r\n    }\r\n    for (int i = 0; i < 7; i++) for (int j = 0; j < best[i]; j++) for (int k = 0; k < 4; k++) {\r\n        if (((i + 1) >> k) & 1) ans[k] += 'b';\r\n        else ans[k] += 'a';\r\n    }\r\n    cout << mn << endl << ans[0] << endl << ans[1] << endl << ans[2] << endl << ans[3];\r\n}\r\nint main() {\r\n    T = 1;\r\n\r\n    for (case_ = 1;case_ <= T;case_++)solve();\r\n    return 0;\r\n}"
}