{
    "id": 218019379,
    "contestId": 1481,
    "creationTimeSeconds": 1691586623,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1481,
        "index": "F",
        "name": "AB Tree",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3100,
        "tags": [
            "dp",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1481,
        "members": [
            {
                "handle": "programpiggy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1612535700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 84,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 228454400,
    "source": "// LUOGU_RID: 119958046\n#include <bits/stdc++.h>\r\n#define ll long long\r\n#define ull unsigned long long\r\nusing namespace std;\r\n\r\nvector<ll> vct[100005],tag[100005],nonl[100005],lf[100005];\r\nll cnt2[100005],cnt[100005],dep[100005],op[100005],vis[100005],mxdep;\r\nbool dp[1005][100005],frm[1005][100005];\r\nchar ans[100005];\r\n\r\nvoid dfs(ll root) {\r\n\tcnt[dep[root]]++;\r\n\tmxdep=max(mxdep,dep[root]+1);\r\n\tif (vct[root].size()) {\r\n\t\tnonl[dep[root]].push_back(root);\r\n\t}else{\r\n\t\tlf[dep[root]].push_back(root);\r\n\t}\r\n\tfor (ll i:vct[root]) {\r\n\t\tdep[i]=dep[root]+1;\r\n\t\tdfs(i);\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tll n,x;\r\n\tcin >> n >> x;\r\n\tfor (ll i=2; i<=n; i++) {\r\n\t\tll fa;\r\n\t\tcin >> fa;\r\n\t\tvct[fa].push_back(i);\r\n\t}\r\n\tdfs(1);\r\n\tfor (ll i=0; i<n; i++) {\r\n\t\tcnt2[cnt[i]]++;\r\n\t\ttag[cnt[i]].push_back(i);\r\n\t}\r\n\tvector<pair<ll,ll>> vv;\r\n\tfor (ll i=1; i<=n; i++) {\r\n\t\tif (cnt2[i]) {\r\n\t\t\tll tot=i;\r\n\t\t\tfor (ll j=1; j<=cnt2[i]; j<<=1) {\r\n\t\t\t\tcnt2[i]-=j;\r\n\t\t\t\tvv.push_back({tot,i});\r\n\t\t\t\ttot*=2;\r\n\t\t\t}\r\n\t\t\tif (cnt2[i])\r\n\t\t\t\tvv.push_back({cnt2[i]*i,i});\r\n\t\t}\r\n\t}\r\n\tdp[0][0]=1;\r\n\tfor (ll i=0; i<vv.size(); i++) {\r\n\t\tfor (ll j=0; j<=n; j++) {\r\n\t\t\tif (j<vv[i].first)dp[i+1][j]=dp[i][j];\r\n\t\t\telse {\r\n\t\t\t\tdp[i+1][j]=dp[i][j]|dp[i][j-vv[i].first];\r\n\t\t\t\tif (dp[i][j-vv[i].first])frm[i+1][j]=1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (dp[vv.size()][x]) {\r\n\t\tcout<< mxdep<< endl;\r\n\t\tll nw=vv.size(),nwp=x;\r\n\t\twhile (nw) {\r\n\t\t\tif (frm[nw][nwp]) {\r\n\t\t\t\top[vv[nw-1].second]+=vv[nw-1].first/vv[nw-1].second;\r\n\t\t\t\tnwp-=vv[nw-1].first;\r\n\t\t\t}\r\n\t\t\tnw--;\r\n\t\t}\r\n\t\tfor (ll i=1; i<=n; i++) {\r\n//\t\tcout<<i<<\":\"<<op[i]<< endl;\r\n\t\t\tfor (ll j=1; j<=op[i]; j++) {\r\n\t\t\t\tvis[tag[i][j-1]]=1;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (ll i=1; i<=n; i++) {\r\n\t\t\tif (vis[dep[i]]) {\r\n\t\t\t\tputchar('a');\r\n\t\t\t} else {\r\n\t\t\t\tputchar('b');\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tcout<< mxdep+1<< endl;\r\n\t\tll nwa=x,nwb=n-x;\r\n\t\tfor (ll i=0; i<n; i++) {\r\n\t\t\tif (nwa>nwb) {\r\n\t\t\t\tfor (ll j:nonl[i]) {\r\n\t\t\t\t\tvis[j]=1;\r\n\t\t\t\t\tnwa--;\r\n\t\t\t\t}\r\n\t\t\t\tfor (ll j:lf[i]){\r\n\t\t\t\t\tif (nwa){\r\n\t\t\t\t\t\tvis[j]=1;\r\n\t\t\t\t\t\tnwa--;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tvis[j]=0;\r\n\t\t\t\t\t\tnwb--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (ll j:nonl[i]) {\r\n\t\t\t\t\tvis[j]=0;\r\n\t\t\t\t\tnwb--;\r\n\t\t\t\t}\r\n\t\t\t\tfor (ll j:lf[i]){\r\n\t\t\t\t\tif (nwb){\r\n\t\t\t\t\t\tvis[j]=0;\r\n\t\t\t\t\t\tnwb--;\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tvis[j]=1;\r\n\t\t\t\t\t\tnwa--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (ll i=1; i<=n; i++) {\r\n\t\t\tif (vis[i]) {\r\n\t\t\t\tputchar('a');\r\n\t\t\t} else {\r\n\t\t\t\tputchar('b');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n/*\r\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\r\n\u3000\u25a0\u25a0\u25a0\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u25a0\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u25a0\u25a0\u3000\u3000\u3000\u3000\u25a0\u25a0\u25a0\u25a0\u3000\u3000\r\n\u3000\u25a0\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u25a0\u3000\u3000\u25a0\u25a0\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u25a0\u25a0\u3000\u3000\u25a0\u25a0\u3000\u3000\u25a0\u3000\u3000\r\n\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u25a0\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u25a0\u25a0\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u25a0\u25a0\u3000\u3000\u25a0\u3000\u3000\u3000\u25a0\u25a0\u3000\r\n\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u25a0\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\r\n\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\r\n\u3000\u25a0\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u25a0\u25a0\u25a0\u3000\u3000\u25a0\u3000\u3000\u25a0\u25a0\u25a0\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u25a0\u3000\u3000\r\n\u3000\u25a0\u25a0\u25a0\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\r\n\u3000\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u3000\r\n\u3000\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u25a0\u25a0\u3000\r\n\u3000\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u25a0\u25a0\u3000\u3000\u25a0\u25a0\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u25a0\u25a0\u3000\r\n\u3000\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u25a0\u25a0\u3000\u3000\u3000\u3000\u25a0\u25a0\u25a0\u25a0\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u3000\u3000\u25a0\u25a0\u3000\u3000\u3000\u3000\u25a0\u25a0\u25a0\u25a0\u25a0\u25a0\u3000\u3000\u3000\u25a0\u25a0\u25a0\u25a0\u3000\u3000\r\n*/\r\n",
    "suggested_categories": [
        "algorithm",
        "data structures",
        "dynamic programming",
        "graph traversal",
        "tree traversal",
        "recursive functions",
        "input handling",
        "output generation",
        "numeric data manipulation",
        "loop iteration",
        "conditional statements",
        "variable declaration",
        "iostream",
        "array manipulation",
        "vector container",
        "pair container",
        "bit manipulation",
        "code complexity",
        "code optimization",
        "competitive programming"
    ]
}