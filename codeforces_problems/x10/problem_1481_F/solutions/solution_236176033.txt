{
    "id": 236176033,
    "contestId": 1481,
    "creationTimeSeconds": 1701942091,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1481,
        "index": "F",
        "name": "AB Tree",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3100,
        "tags": [
            "dp",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1481,
        "members": [
            {
                "handle": "AC-Automation"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1612535700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 18329600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define y1 jiajia\r\nvoid read(auto &x) {\r\n\tchar ch = getchar(); x = 0; ll f = 1;\r\n\twhile (isdigit(ch) == 0 && ch != '-') ch = getchar();\r\n\tif (ch == '-') f = -1, ch = getchar();\r\n\twhile (isdigit(ch)) {x = x * 10 + ch - 48; ch = getchar();}\r\n\tx *= f;\r\n}\r\nbitset<100005> dp[1000];\r\nvector<int> vec[100005];\r\nint sz[100005], dep;\r\nint rsz[1000];\r\nvector<int> id[100005];\r\nvector<int> G[100005];\r\nvoid dfs(int u, int de) {\r\n\tdep = max(dep, de);\r\n\tid[de].push_back(u);\r\n\tsz[de]++;\r\n\tfor (auto v : G[u]) {\r\n\t\tdfs(v, de + 1);\r\n\t}\r\n}\r\nint nd[100005];\r\nint toi[100005];\r\nvoid dfs2(int x, int y) {\r\n\tif (x == 0) return;\r\n\tfor (int i = y; i >= 0; i -= rsz[x]) {\r\n\t\tif (dp[x - 1][i]) {\r\n\t\t\tdfs2(x - 1, i);\r\n\t\t\tnd[x] = (y - i) / rsz[x];\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n}\r\nint inid[100005];\r\nint ans[100005];\r\nint main() {\r\n\tint n, k; read(n); read(k);\r\n\tfor (int i = 2; i <= n; i++) {\r\n\t\tint f; read(f); G[f].push_back(i);\r\n\t}\r\n\tdfs(1, 1);\r\n\tfor (int i = 1; i < dep; i++) {\r\n\t\tvec[sz[i]].push_back(i);\r\n\t}\r\n\tdp[0][0] = 1;\r\n\tint tot = 0;\r\n\tfor (int i = 1; i <= dep; i++) {\r\n\t\tfor (auto x : id[i]) inid[x] = i;\r\n\t}\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tif (vec[i].size()) {\r\n\t\t\t++tot;\r\n\t\t\ttoi[tot] = i;\r\n\t\t\trsz[tot] = i;\r\n\t\t\tdp[tot] = dp[tot - 1];\r\n\t\t\tfor (auto x : vec[i]) {\r\n\t\t\t\tdp[tot] |= (dp[tot] << i);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t++tot;\r\n\ttoi[tot] = n + 1;\r\n\trsz[tot] = sz[dep];\r\n\tdp[tot] = dp[tot - 1];\r\n\tdp[tot] |= (dp[tot] << sz[dep]);\r\n\tvec[n + 1].push_back(dep);\r\n\tif (dp[tot][k]) {\r\n\t\tcout << dep << '\\n';\r\n\t\tdfs2(tot, k);\r\n\t\tfor (int i = 1; i <= tot; i++) {\r\n\t\t\tfor (int j = 0; j < nd[i]; j++) {\r\n\t\t\t\tfor (auto x : id[vec[toi[i]][j]]) ans[x] = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse {\r\n\t\tcout << dep + 1 << '\\n';\r\n\t\tbool bj = 0;\r\n\t\tfor (int i = k - 1; i >= 0; i--) {\r\n\t\t\tif (dp[tot - 1][i]) {\r\n\t\t\t\tdfs2(tot - 1, i);\r\n\t\t\t\tint x = k - i;\r\n\t\t\t\tint idd = dep;\r\n\t\t\t\tfor (int j = 0; j < x; j++) ans[id[idd][j]] = -1;\r\n\t\t\t\tfor (int j = x; j < id[idd].size(); j++) ans[id[idd][j]] = 2;\r\n\t\t\t\tbj = 1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (bj == 0) return 5;\r\n\t\tfor (int i = 1; i < tot; i++) {\r\n\t\t\tfor (auto tq : vec[toi[i]]) if (tq == dep) return 2;\r\n\t\t\tfor (int j = 0; j < nd[i]; j++) {\r\n\t\t\t\tif (nd[i] > vec[toi[i]].size()) return 3;\r\n\t\t\t\tif (vec[toi[i]][j] == dep) return 4;\r\n\t\t\t\tfor (auto x : id[vec[toi[i]][j]]) {\r\n\t\t\t\t\tif (ans[x] != 0) return 1000 + ans[x];\r\n\t\t\t\t\tans[x] = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tif (ans[i] == 1 || ans[i] == -1) cout << 'a';\r\n\t\telse cout << 'b';\r\n\t}\r\n\treturn 0;\r\n}\r\n/*\r\n7 3\r\n1 2 2 2 2 2\r\n*/\r\n"
}