{
    "id": 226718120,
    "contestId": 1481,
    "creationTimeSeconds": 1696500659,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1481,
        "index": "F",
        "name": "AB Tree",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3100,
        "tags": [
            "dp",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1481,
        "members": [
            {
                "handle": "locsey"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1612535700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 84,
    "timeConsumedMillis": 655,
    "memoryConsumedBytes": 23040000,
    "source": "#include <bits/stdc++.h>\r\n#define fi first \r\n#define se second\r\n\r\nusing std :: cin;\r\nusing std :: min; \r\nusing std :: max; \r\nusing std :: cout; \r\nusing std :: vector; \r\n\r\nconstexpr int M = 1e5 + 5; \r\nconstexpr int INF = 0x3f3f3f3f; \r\n\r\ntypedef long long ll; \r\ntypedef unsigned long long ull; \r\ntypedef double db; \r\ntypedef std :: pair < int, int > pii; \r\n\r\n//char buf[1 << 23], *p1 = buf, *p2 = buf, obuf[1 << 23], *O = obuf;\r\n//#define getchar() (p1 == p2) && (p2 = (p1 = buf) + fread(buf, 1, 1 << 21, stdin), p1 == p2)? EOF : *p1++\r\n\r\ninline int read() { \r\n\tint f = 1, s = 0; char ch = getchar(); \r\n\twhile(!isdigit(ch)) (ch == '-') && (f = -1), ch = getchar(); \r\n\twhile(isdigit(ch)) s = s * 10 + ch - '0', ch = getchar(); \r\n\treturn f * s; \r\n}\r\n\r\nnamespace Solver {\r\n\tchar _st; \r\n\tint n, x, m; \r\n\tstd :: bitset < M > dp[505];\r\n\tint occ[M], dep[M], f[M], cp[M], vis[M]; vector < int > adj[M], P[M]; \r\n\tint to[M], lc[M]; \r\n\tinline void get(int d, int c) {\r\n\t\tif(!d) return ; \r\n\t\tfor(int j = 0; j <= cp[to[d]] && j * to[d] <= c; ++j) if(dp[d - 1][c - j * to[d]]) {\r\n\t\t\tfor(int k = 0; k < j; ++k) vis[P[to[d]][k]] = 1; \r\n\t\t\tget(d - 1, c - j * to[d]); \r\n\t\t\treturn ; \r\n\t\t}\r\n\t}\r\n\tint mxd; \r\n\tinline void dfs(int x, int d) {\r\n\t\tdep[x] = d, mxd = max(mxd, d); occ[d] ++; if(!adj[x].size()) lc[d] ++; \r\n\t\tfor(int &y : adj[x]) dfs(y, d + 1); \r\n\t}\r\n\tchar _ed; \r\n\tinline void mian() {\r\n\t\tn = read(), x = read(); \r\n\t\tfor(int i = 2; i <= n; ++i) f[i] = read(), adj[f[i]].push_back(i); \r\n\t\tdfs(1, 0); \r\n\t\tdp[0][0] = 1; \r\n\t\tfor(int i = 0; i <= mxd; ++i) cp[occ[i]] ++, P[occ[i]].push_back(i); \r\n\t\tfor(int i = 1; i <= n; ++i) if(cp[i]) {\r\n\t\t\t++m; dp[m] = dp[m - 1], to[m] = i; \r\n\t\t\tfor(int j = 1; j <= cp[i]; ++j) dp[m] |= dp[m] << i; \r\n\t\t} \r\n\t\tif(dp[m][x]) {\r\n\t\t\tcout << mxd + 1 << '\\n'; \r\n\t\t\tget(m, x); \r\n\t\t\tfor(int i = 1; i <= n; ++i) putchar('b' - vis[dep[i]]); \r\n\t\t\treturn ; \r\n\t\t}\r\n\t\tint lst = x; \r\n\t\twhile(!dp[m][lst]) --lst; \r\n\t\tcout << mxd + 2 << '\\n'; \r\n\t\tget(m, lst); int ex = 0; \r\n\t\tfor(int i = 0; i <= mxd; ++i) if(!vis[i] && lc[i] >= x - lst) {ex = i; break ;}\r\n\t\tint ned = x - lst; \r\n\t\tfor(int i = 1; i <= n; ++i) {\r\n\t\t\tif(vis[dep[i]]) putchar('a'); \r\n\t\t\telse {\r\n\t\t\t\tif(dep[i] == ex && ned && !adj[i].size()) putchar('a'), --ned; \r\n\t\t\t\telse putchar('b'); \r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n}\r\n\r\nint main() \r\n{\r\n\tSolver :: mian(); \r\n\treturn 0; \r\n}     "
}