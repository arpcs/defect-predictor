{
    "id": 218487013,
    "contestId": 374,
    "creationTimeSeconds": 1691844805,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 374,
        "index": "C",
        "name": "Inna and Dima",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "implementation"
        ]
    },
    "author": {
        "contestId": 374,
        "members": [
            {
                "handle": "magiccat"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1387380600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 47,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 42188800,
    "source": "// LUOGU_RID: 120568729\n// LUOGU_RID: 120548753\r\n//  AC one more times\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n\r\nconst int mod = 1e9 + 7;\r\nconst int N = 1e3 + 10;\r\n\r\nbool ok = false;\r\nint n, m, cnt[N][N], f[N][N], res = 0;\r\nint g[N][N];\r\nbool vis[N][N];\r\nmap<char, int> mp;\r\nint dx[] = {0, 0, -1, 1};\r\nint dy[] = {-1, 1, 0, 0};\r\nint dfs(int tx, int ty, int k)\r\n{\r\n    //cout<<tx<<\" \"<<ty<<\" \"<<\"\\n\";\r\n    if(f[tx][ty])  return f[tx][ty];\r\n    //f[tx][ty] = 1;\r\n    vis[tx][ty] = true;\r\n    if(ok)  return res;\r\n    for(int i = 0; i < 4; i++)\r\n    {\r\n        int x = tx + dx[i];\r\n        int y = ty + dy[i];\r\n        if(x < 1 || x > n || y < 1 || y > m || (k + 1) % 4 != g[x][y])\r\n            continue;\r\n        if(vis[x][y] || ok)\r\n        {\r\n            ok = true;\r\n            return res;\r\n        }\r\n        f[tx][ty] = max(dfs(x, y, (k + 1) % 4) + 1, f[tx][ty]);\r\n    }\r\n    vis[tx][ty] = false;\r\n    return f[tx][ty];\r\n}\r\nvoid solve()\r\n{       \r\n    mp['D'] = 0, mp['I'] = 1, mp['M'] = 2, mp['A'] = 3;\r\n    //memset(f, -1, sizeof f);\r\n    cin>>n>>m;\r\n    for(int i = 1; i <= n; i++)\r\n        for(int j = 1; j <= m; j++)\r\n        {\r\n            char x; cin>>x;\r\n            g[i][j] = mp[x];\r\n        }\r\n\r\n\r\n    for(int i = 1; i <= n; i++)\r\n    {\r\n        for(int j = 1; j <= m; j++)\r\n        {\r\n            if(g[i][j] == 0)\r\n            {\r\n                f[i][j] = 0;\r\n                res = max(dfs(i, j, 0) + 1, res);\r\n            }\r\n            // if(res >= n * m / 4 + 1)\r\n            //     break;\r\n        }\r\n        // if(ok)\r\n        //     break;\r\n    }       \r\n    if(ok)\r\n    {\r\n        cout<<\"Poor Inna!\\n\";\r\n\r\n    }\r\n    else if(res / 4 == 0)\r\n        cout<<\"Poor Dima!\\n\";\r\n    else \r\n        cout<<res / 4<<'\\n';\r\n\r\n    return;\r\n}\r\n\r\n\r\n  \r\nint main()\r\n{\r\n    std::ios::sync_with_stdio(false);   cin.tie(nullptr), cout.tie(nullptr);\r\n    \r\n    int TC = 1;\r\n    \r\n    //cin >> TC;    \r\n    for(int tc = 1; tc <= TC; tc++)\r\n    {\r\n        //cout << \"Case #\" << tc << \": \";         \r\n        solve();\r\n    }\r\n\r\n\r\n    return 0;\r\n}"
}