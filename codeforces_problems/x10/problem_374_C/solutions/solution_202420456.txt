{
    "id": 202420456,
    "contestId": 374,
    "creationTimeSeconds": 1681684906,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 374,
        "index": "C",
        "name": "Inna and Dima",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "implementation"
        ]
    },
    "author": {
        "contestId": 374,
        "members": [
            {
                "handle": "ab_rar"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1387380600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 857,
    "memoryConsumedBytes": 166502400,
    "source": "#include<bits/stdc++.h>\r\n#define int long long \r\n#define pii pair<int,int>\r\nusing namespace std;\r\nconst int N = 2e3 + 10;\r\nint mod = 1e9 + 7;\r\nmap<pii, vector<pii>> adj;\r\nstring s[N];\r\nint dx[] = { 0, 0, 1, -1 };\r\nint dy[] = { 1, -1, 0, 0 };\r\nchar next(char  x) {\r\n    if (x == 'D') return 'I';\r\n    if (x == 'I') return 'M';\r\n    if (x == 'M') return 'A';\r\n    if (x == 'A') return 'D';\r\n    return ' ';\r\n}\r\nint color[N][N];\r\nbool dfs(int x, int y) {\r\n    //  directed graph \r\n    color[x][y] = 1;\r\n    for (auto i : adj[{x, y}]) {\r\n        if (color[i.first][i.second] == 0) {\r\n            if (dfs(i.first, i.second))\r\n                return true;\r\n        }\r\n        else if (color[i.first][i.second] == 1) {\r\n            return true;\r\n        }\r\n    }\r\n    color[x][y] = 2;\r\n    return false;\r\n}\r\nint count = 0;\r\nint dfscount(int x, int y) {\r\n    int cnt = 0;\r\n    if (s[x][y] == 'A') ++cnt;\r\n    ++color[x][y];\r\n    for (auto i : adj[{x, y}]) {\r\n        if (color[i.first][i.second] == 0) {\r\n            cnt += dfscount(i.first, i.second);\r\n        }\r\n    }\r\n    return cnt;\r\n}\r\nint32_t main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    int n, m;\r\n    cin >> n >> m;\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> s[i];\r\n    }\r\n    vector<pii> v;\r\n    for (int i = 0; i < n; ++i) {\r\n        for (int j = 0; j < m; ++j) {\r\n            if (s[i][j] == 'D') v.push_back({ i, j });\r\n            for (int k = 0; k < 4; ++k) {\r\n                int tx = i + dx[k];\r\n                int ty = j + dy[k];\r\n                if (tx >= 0 && tx < n && ty >= 0 && ty < m) {\r\n                    if (next(s[i][j]) == s[tx][ty]) {\r\n                        adj[{i, j}].push_back({ tx, ty });\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    int ans = 0;\r\n    for (auto i : v) {\r\n        if (color[i.first][i.second] == 0) {\r\n            if (dfs(i.first, i.second)) {\r\n                cout << \"Poor Inna!\";\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n    for (int i = 0; i < n; ++i) {\r\n        for (int j = 0; j < m; ++j) {\r\n            color[i][j] = 0;\r\n        }\r\n    }\r\n    for (auto i : v) {\r\n        if (color[i.first][i.second] == 0) {\r\n          //  ans += dfscount(i.first, i.second);\r\n          ans  = max(ans, dfscount(i.first, i.second));\r\n        }\r\n    }\r\n    if (ans == 0) cout << \"Poor Dima!\";\r\n    else cout << ans;\r\n\r\n\r\n}\r\n\r\n\r\n"
}