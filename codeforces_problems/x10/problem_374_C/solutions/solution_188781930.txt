{
    "id": 188781930,
    "contestId": 374,
    "creationTimeSeconds": 1673367071,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 374,
        "index": "C",
        "name": "Inna and Dima",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1900,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "implementation"
        ]
    },
    "author": {
        "contestId": 374,
        "members": [
            {
                "handle": "Fragarach"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1387380600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 6041600,
    "source": "#include <iostream>\r\n#include <string>\r\n\r\nusing namespace std;\r\n\r\nconst int mx = 1e3;\r\n\r\nint n, m;\r\nchar table[mx][mx];\r\n\r\nbool poorDima = true;\r\nbool poorInna = false;\r\n\r\nchar color[mx][mx];\r\nint dp[mx][mx];\r\n\r\nvoid dfs(int,int,int,int,int);\r\nvoid whoIsPoor(){\r\n\r\n  for(int i = 0; i < n; ++i)\r\n    for(int j = 0; j < m; ++j){\r\n      color[i][j] = 'w';\r\n      dp[i][j] = 0;\r\n    }\r\n\r\n  for(int i = 0; i < n; ++i)\r\n    for(int j = 0; j < m; ++j)\r\n      if(color[i][j] == 'w' && table[i][j] == 'D')\r\n        dfs(i, j, 0, i, j);\r\n}\r\n\r\nint main(){\r\n  ios_base::sync_with_stdio(false);\r\n  cin.tie(nullptr);\r\n\r\n  cin >> n >> m;\r\n  for(int i = 0; i < n; ++i)\r\n    for(int j = 0; j < m; ++j)\r\n      cin >> table[i][j];\r\n  \r\n  whoIsPoor();\r\n  \r\n  if(poorDima){\r\n    cout << \"Poor Dima!\\n\";\r\n  } else if(poorInna){\r\n    cout << \"Poor Inna!\\n\";\r\n  } else {\r\n    int ans = 0;\r\n    for(int i = 0; i < n; ++i)\r\n      for(int j = 0; j < m; ++j)\r\n        ans = max(ans, dp[i][j]);\r\n\r\n    cout << ans << '\\n';\r\n\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\nint dx[4] = {1, 0, 0, -1};\r\nint dy[4] = {0, 1, -1, 0};\r\nstring name = \"DIMA\";\r\nvoid dfs(int i, int j, int k, int pi, int pj){\r\n  color[i][j] = 'g';\r\n\r\n  if(k == 3){\r\n    poorDima = false;\r\n    k = 0;\r\n\r\n    if(dp[pi][pj] == 0) \r\n      dp[pi][pj] = 1;\r\n\r\n  } else {\r\n    k++;\r\n  }\r\n\r\n  int best = 0;\r\n  for(int ix = 0; ix < 4; ++ix){\r\n    int ni = i+dx[ix];\r\n    int nj = j+dy[ix];\r\n\r\n    if(ni < 0 || nj < 0 || ni == n || nj == m)\r\n      continue;\r\n    if(table[ni][nj] != name[k])\r\n      continue;\r\n    \r\n    if(k > 0 || color[ni][nj] == 'w' || poorDima){\r\n\r\n      if(k == 0)\r\n        dfs(ni, nj, k, ni, nj);\r\n      else \r\n        dfs(ni, nj, k, pi, pj);\r\n\r\n      if(k == 0)\r\n        best = max(dp[ni][nj], best);\r\n\r\n    } else if(color[ni][nj] == 'g'){\r\n      poorInna = true;\r\n    }\r\n  }\r\n\r\n  dp[pi][pj] = best + 1;\r\n\r\n  color[i][j] = 'b';\r\n}"
}