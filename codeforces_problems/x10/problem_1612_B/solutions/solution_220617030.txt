{
    "id": 220617030,
    "contestId": 1612,
    "creationTimeSeconds": 1693086890,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1612,
        "index": "B",
        "name": "Special Permutation",
        "type": "PROGRAMMING",
        "rating": 900,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1612,
        "members": [
            {
                "handle": "bijoy__13"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1637573700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#include<iostream>\r\n#include <iomanip>\r\n#include<string>\r\n#include <ios>\r\n#include <utility>\r\n#include <cmath>\r\nusing namespace std;\r\n//1000000007\r\nusing ll = long long;\r\nll mod = 1e9 + 7;\r\n#include<sstream>\r\n#include<numeric>\r\n#define filein          freopen(\"input.txt\",\"r\",stdin)\r\n#define fileout         freopen(\"output.txt\",\"w\",stdout)\r\n#include<bits/stdc++.h>\r\n#define endl            \"\\n\"\r\n#define ya              cout<<\"YES\\n\";\r\n#define no              cout<<\"NO\\n\";\r\n#define pb              push_back\r\n#define fast_cin        ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n#define all(bi)         bi.begin(),bi.end()\r\n#define printv(bi)      for(ll i=0;i<bi.size();i++)cout<<bi[i]<<\" \";cout<<endl;\r\n#define print(x)        printf(\"%lld\\n\",x);\r\n#define scc(x)          scanf(\"%lld\",&x);\r\n#define see(x)          cout<<x<<endl;\r\n#define N            200005\r\n#define ff           first\r\n#define ss           second\r\ntypedef  pair<ll, ll> pi;\r\n//string str = bitset<number_bits>(any_input).to_string();\r\n//priority_queue<pi, vector<pi>, decltype (cmp)> pQ (cmp);\r\nll inf = 1e18;\r\nll dx[] = { -1, 1, 0, 0, -1, -1, 1, 1};\r\nll dy[] = {0, 0, 1, -1, -1, 1, 1, -1};\r\n////policy based data structure commonFile.\r\n/*#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>>\r\nusing namespace __gnu_pbds;\r\n//->less equal,less,greater as u wish\r\n#define ordered_set tree<ll,null_type,less<ll>,rb_tree_tag, tree_order_statistics_node_update>*/\r\n////*________________________________________________________________________________________\r\n/*\r\nbool cmp(pair<ll, ll>& a,\r\n         pair<ll, ll>& b)\r\n{\r\n    if (a.first != b.first)\r\n        return a.first < b.first;\r\n    else\r\n    {\r\n        return a.second > b.second;\r\n    }\r\n}*/\r\n\r\n\r\n/*graph?binary search?two pointers?greedy?observation..?,dp?..sgmntTree..?*/\r\nvoid solve()\r\n{\r\n    ll i,j,n,m;\r\n    ll x, y, q, k;\r\n    ll a, b;\r\n    cin >>n>>a>>b;\r\n    set<ll>st;\r\n    vector<ll>vc,vcc;\r\n    vc.pb(a);\r\n    vcc.pb(b);\r\n    for(i=1;i<=n;i++)\r\n    {\r\n        if(i==a||i==b)\r\n        {\r\n            ;\r\n        }else\r\n        st.insert(i);\r\n    }\r\n    ll rem=n-a+1;\r\n    if(rem<n/2)\r\n    {\r\n        see(-1)\r\n        return;\r\n    }\r\n    while(vc.size()<n/2)\r\n    {\r\n        if(*st.rbegin()<a)\r\n        {\r\n            see(-1)\r\n            return;\r\n        }\r\n        vc.pb(*st.rbegin());\r\n        st.erase(*st.rbegin());\r\n    }\r\n    //printv(vc);\r\n    while(st.size()>0)\r\n    {\r\n        vcc.pb(*st.rbegin());\r\n        st.erase(*st.rbegin());\r\n    }\r\n    sort(all(vcc));\r\n    if(vcc.back()==b)\r\n    {\r\n        for(i=0;i<n/2;i++)\r\n        {\r\n            cout<<vc[i]<<\" \";\r\n        }\r\n        for(i=0;i<n/2;i++)\r\n        {\r\n            cout<<vcc[i]<<\" \";\r\n        }\r\n        cout<<endl;\r\n\r\n    }else\r\n    {\r\n        see(-1)\r\n    }\r\n\r\n\r\n}\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    int t;\r\n    t = 1;\r\n    int j = 1, i;\r\n    cin >> t;\r\n    while (t--)\r\n    {\r\n        //cout << \"Case \" << j++ << \": \";\r\n        solve();\r\n    }\r\n}\r\n/*.\r\n.\r\n.\r\n.*/\r\n//vector<ll>v_prime = seive(100000);\r\n/*vector<ll> seive(ll  n)\r\n{\r\n    //prime array return\r\n    vector<ll>prime;\r\n    for (ll i = 3; i * i <= n; i = i + 2)\r\n    {\r\n        if (isprime[i] == true)\r\n        {\r\n            for (ll j = i * i; j <= n; j += i+i)\r\n            {\r\n                isprime[j] = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    prime.pb(2);\r\n    for (ll i = 3; i <= n; i += 2)\r\n    {\r\n        if (isprime[i] == true)prime.pb(i);\r\n    }\r\n    return prime;\r\n\r\n}*/\r\n//.................//\r\n/*vector<pi> prime_factor(ll n)\r\n{\r\n    vector<pi>v;\r\n    for (ll i = 0; i < v_prime.size() && v_prime[i]*v_prime[i] <= n; i++)\r\n    {\r\n        if (n % v_prime[i] == 0)\r\n        {\r\n            ll cnt = 0;\r\n            while (n % v_prime[i] == 0)\r\n            {\r\n                cnt++;\r\n                n /= v_prime[i];\r\n            }\r\n            v.pb({v_prime[i], cnt});\r\n        }\r\n    }\r\n    if (n > 1)\r\n        v.pb({n, 1});\r\n    return v;\r\n}*/\r\n\r\n//counting the divisors in(O^1/3).(using seeive upto 10^6 for prime).\r\n//vlog theke likha demo\r\n/*ll count_divisor(ll n)\r\n{\r\n    ll ans = 1;\r\n    for (ll i = 0; i < prime.size(); i++)\r\n    {\r\n        ll cnt=1;\r\n        if (prime[i]*prime[i]*prime[i] <= n)\r\n        {\r\n\r\n            while (n % prime[i] == 0)\r\n            {\r\n                cnt++;\r\n                n = n / prime[i];\r\n            }\r\n        }\r\n        ans=ans*cnt;\r\n    }\r\n    if(isprime[n]==true)ans=ans*2;\r\n    // if it is  squre of any prime  check,age ekta squre array banai niya;\r\n    if(chk)ans=ans*3;\r\n    else if(n!=1)ans=ans*4;\r\n\r\n}\r\n*/\r\n//ETF:a^b%m=(a^(b%(m-1)))%m;\r\n/*ll bigmod(ll b, ll p, ll mod)\r\n{\r\n    if (p == 0)\r\n        return 1;\r\n    ll ans = bigmod(b, p / 2, mod);\r\n    ans = (ans % mod) % mod * (ans % mod) % mod;\r\n    if (p & 1)\r\n        return (ans * b) % mod;\r\n    else\r\n        return ans % mod;\r\n}*/\r\n/*ll fact[1000005];\r\nll invers[1000005];\r\nvoid ncr(ll n)\r\n{\r\n\r\n\r\n    fact[0] = fact[1]=invers[0] = 1;\r\n    for (ll i = 1; i <= n; i++)\r\n    {\r\n        fact[i] = (fact[i - 1] * i) % mod;\r\n    }\r\n    invers[n] = bigmod(fact[n], mod - 2, mod);\r\n    for (ll i = n - 1; i >= 1; i--)\r\n    {\r\n        invers[i] = (invers[i + 1] * (i + 1)) % mod;\r\n    }\r\n    //this will be output\r\n    //(((fact[n] * invers[r]) % mod) * invers[n - r]) % mod;\r\n\r\n}*/\r\n/* prime fact using log(n) upto 10^7\r\n int prime[N];\r\n void seive()\r\n {\r\n     for(int i=2;i<N;i++)\r\n         prime[i]=i;\r\n     prime[1]=1;\r\n     for(int i=4;i<N;i+=2)\r\n         prime[i]=2;\r\n     for(int i=3;i*i<N;i++)\r\n     {\r\n         if(prime[i]==i)\r\n         {\r\n             for(int j=i*i;j<N;j+=i)\r\n                 prime[j]=i;\r\n         }\r\n     }\r\n }\r\n vector<int>prime_fact(int n)\r\n {\r\n     vector<int>v;\r\n     while(n!=1)\r\n     {\r\n         v.pb(prime[n]);\r\n         n/=prime[n];\r\n     }\r\n     return v;\r\n }*/\r\n//euler phi function calculation from cpalgo\r\n/*int phi[mx];\r\nvoid myfun()\r\n{\r\n    ll i,j;\r\n    for(i=0;i<=mx;i++)phi[i]=i;\r\n    for(i=2;i<=mx;i++)\r\n    {\r\n        if(phi[i]==i)\r\n        {\r\n            for(j=i;j<=mx;j+=i)\r\n            {\r\n                phi[j]-=phi[j]/i;\r\n            }\r\n        }\r\n    }\r\n}*/\r\n\r\n/*\r\nstring subtract(string num1, string num2) {\r\n    string result = \"\";\r\n    int carry = 0;\r\n    int n1 = num1.length(), n2 = num2.length();\r\n    for (int i = n1 - 1, j = n2 - 1; i >= 0 || j >= 0; i--, j--) {\r\n        int d1=0;\r\n        if(i>=0)\r\n        {\r\n            d1=num1[i]-'0';\r\n        }\r\n        int d2=0;\r\n        if(j>=0)\r\n        {\r\n            d2=num2[j]-'0';\r\n        }\r\n        int diff = d1 - d2 - carry;\r\n        if (diff < 0) {\r\n            diff += 10;\r\n            carry = 1;\r\n        } else {\r\n            carry = 0;\r\n        }\r\n        result += to_string(diff);\r\n    }\r\n    while(result.back()=='0')result.pop_back();\r\n    reverse(result.begin(), result.end());\r\n    return result;\r\n}\r\n*/"
}