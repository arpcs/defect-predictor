{
    "id": 221748883,
    "contestId": 1612,
    "creationTimeSeconds": 1693773259,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1612,
        "index": "B",
        "name": "Special Permutation",
        "type": "PROGRAMMING",
        "rating": 900,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1612,
        "members": [
            {
                "handle": "1OMAR1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1637573700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\n#define endl '\\n'\r\nusing namespace std;\r\nvoid solve() {\r\n    int n, a, b;\r\n    cin >> n >> a >> b;\r\n    bool found[100 + 5] = {false};\r\n    vector<int> p;\r\n    int cnt = n / 2 - 1;\r\n    for (int i = n; i >= 1; i--) {\r\n        if (!found[i] && cnt > 0 && i != b && i != a && i > a) {\r\n            p.push_back(i);\r\n            cnt--;\r\n            found[i] = true;\r\n        }\r\n    }\r\n    p.push_back(a);\r\n    cnt = n / 2 - 1;\r\n    for (int i = 1; i <= n; i++) {\r\n        if (!found[i] && cnt > 0 && i != b && i != a && i < b) {\r\n            p.push_back(i);\r\n            cnt--;\r\n            found[i] = true;\r\n        }\r\n    }\r\n    p.push_back(b);\r\n    if (p.size() != n) {\r\n        cout << -1 << endl;\r\n    }\r\n    else {\r\n        for (int i = 0; i < n; i++) {\r\n            cout << p[i] << \" \\n\"[i == n - 1];\r\n        }\r\n    }\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    int t = 1;\r\n    cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}