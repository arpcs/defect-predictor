{
    "id": 227529264,
    "contestId": 1627,
    "creationTimeSeconds": 1696939144,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "C",
        "name": "Not Assigning",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "number theory",
            "trees"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "Kushagra_18"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 11673600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n typedef long long ll;\r\ntypedef vector<int> vec;\r\n#define mod 1000000007\r\nint gcdExtended(int a, int b, int* x, int* y)\r\n{\r\n if (a == 0) {\r\n *x = 0, *y = 1;\r\n return b;\r\n}\r\nint x1, y1;\r\nint gcd = gcdExtended(b % a, a, &x1, &y1);\r\n *x = y1 - (b / a) * x1;\r\n*y = x1;\r\n return gcd;\r\n}\r\nll modInverse(ll A, int M)\r\n{\r\nint x, y;\r\nint g = gcdExtended(A, M, &x, &y);\r\n int res = (x % M + M) % M;\r\nreturn res;\r\n}\r\nvoid dfs(vector<ll>&vis,vector<vector<ll>>&adj,ll st,map<pair<ll,ll>,ll>&m)\r\n{\r\n  vis[st]=1;\r\n  ll wt=2;\r\n  queue<ll>q;\r\n  q.push(st);\r\n  while(!q.empty())\r\n  {\r\n    ll x=q.front();\r\n    q.pop();\r\n    for(auto k:adj[x])\r\n    {\r\n      if(vis[k]==0)\r\n      {\r\n        ll mn=min(k,x);\r\n        ll mx=max(k,x);\r\n        m[{mn,mx}]=wt;\r\n        wt=7-wt;\r\n        vis[k]=1;\r\n        q.push(k);\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n int main() {\r\n      \r\n  ios_base::sync_with_stdio(false);\r\ncin.tie(NULL);\r\nll t;\r\ncin>>t;\r\nwhile(t--)\r\n{\r\n  ll n;\r\n  cin>>n;\r\n  vector<vector<ll>>adj(n+1);\r\n  vector<pair<ll,ll>>v1;\r\n  for(ll i=0;i<n-1;i++)\r\n  {\r\n    ll u,v;\r\n    cin>>u>>v;\r\n    ll a=min(u,v);\r\n    ll b=max(u,v);\r\n    v1.push_back({a,b});\r\n    adj[u].push_back(v);\r\n    adj[v].push_back(u);\r\n  }\r\n  ll flag=1;\r\n  ll st=1;\r\n  for(ll i=1;i<=n;i++)\r\n  {\r\n    if(adj[i].size()>2)\r\n    {\r\n      flag=0;\r\n    }\r\n    if(adj[i].size()==1)\r\n    {\r\n      st=i;\r\n    }\r\n  }\r\n  if(flag==0)\r\n  cout<<-1<<endl;\r\n  else\r\n  {\r\n       vector<ll>vis(n+1,0);\r\n       map<pair<ll,ll>,ll>m;\r\n       dfs(vis,adj,st,m);\r\n       for(ll i=0;i<n-1;i++)\r\n       {\r\n        cout<<m[v1[i]]<<\" \";\r\n       }\r\n       cout<<endl;\r\n  }\r\n}\r\nreturn 0;\r\n}"
}