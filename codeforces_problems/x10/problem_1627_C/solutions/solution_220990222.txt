{
    "id": 220990222,
    "contestId": 1627,
    "creationTimeSeconds": 1693322981,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "C",
        "name": "Not Assigning",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "number theory",
            "trees"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "mysterious_tanjil"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 1122,
    "memoryConsumedBytes": 31744000,
    "source": "#include<bits/stdc++.h>\r\n#include<math.h>\r\n#define    ll  long long int\r\n#define ull unsigned long long int\r\n#include <ext/pb_ds/detail/standard_policies.hpp>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\ntypedef tree< ll, null_type, less<ll >, rb_tree_tag, tree_order_statistics_node_update> order_set;\r\n#define fbo find_by_order\r\n#define ook order_of_key\r\n#define    F     first\r\n#define    S    second\r\n#define    all(x) (x).begin(),(x).end()\r\n#define    print(res) cout<<#res<<\" = \";for(auto x:res) cout<<x<<\" \"; cout<<endl\r\n#define    see(res) cout<<#res<<\" = \"<<res<<endl\r\n#define    fast ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)\r\n#define    pf      push_front\r\n#define    pb      push_back\r\n#define    NL      printf(\"\\n\")\r\n#define    YES       printf(\"YES\\n\")\r\n#define    NO        printf(\"NO\\n\")\r\n#define    Yes       printf(\"Yes\\n\")\r\n#define    No        printf(\"No\\n\")\r\n#define tc int tc;scanf(\"%d\",&tc);for(int cs=1;cs<=tc;cs++)\r\n\r\nconst ll mxn=2e5+6;\r\nconst ll mod=1e9+7;\r\nvector<ll> edge[mxn];\r\nmap< pair<ll,ll> ,ll > mp;\r\nvoid Reset()\r\n{\r\n    mp.clear() ;\r\n    for(ll i=1 ; i<=mxn ; i++ )\r\n    {\r\n        edge[i].clear() ;\r\n    }\r\n}\r\nll val = 3;\r\nvoid Dfs(ll child , ll parent)\r\n{\r\n    if(val==2) val = 3;\r\n    else val = 2;\r\n    for(auto cur : edge[child])\r\n    {\r\n        if(cur==parent) continue;\r\n        mp[{ cur , child }] = val ;\r\n        mp[{ child , cur }] = val ;\r\n        Dfs(cur ,child);\r\n    }\r\n\r\n}\r\n\r\n\r\nint main( )\r\n{\r\n\r\n tc\r\n\r\n {\r\n     Reset() ;\r\n     ll n ; cin>>n ;\r\n     vector<pair<ll,ll> > vct;\r\n     for(ll i=1 ; i<n ; i++)\r\n     {\r\n         ll u , v ; cin>>u>>v ;\r\n         vct.push_back({u,v});\r\n         edge[u].push_back(v);\r\n         edge[v].push_back(u);\r\n     }\r\n     bool flag = true;\r\n     ll root = 1;\r\n     for(ll i=1 ; i<=n ; i++)\r\n     {\r\n         if(edge[i].size()>2)\r\n         {\r\n             flag = false;\r\n             break;\r\n         }\r\n         if(edge[i].size()==1) root = i;\r\n     }\r\n     if(flag==false)\r\n     {\r\n         cout<<-1<<endl;\r\n         continue;\r\n     }\r\n     Dfs(root,0) ;\r\n     vector<ll>res ;\r\n     for(auto &[x,y] : vct)\r\n     {\r\n        res.push_back(mp[{x,y}] );\r\n     }\r\n     for(auto x: res) cout<<x<< \" \";NL;\r\n     cout<<endl;\r\n\r\n }\r\n\r\n    return 0;\r\n}\r\n//printf(\"Case %d: \",cs);\r\n"
}