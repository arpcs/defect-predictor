{
    "id": 223792761,
    "contestId": 1627,
    "creationTimeSeconds": 1695011492,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "C",
        "name": "Not Assigning",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "number theory",
            "trees"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "greg.yiwen"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n//Ref: https://cplusplus.com/reference/deque/deque/\r\n\r\nvector<int> solve() {\r\n    int n = child.size() - 1;\r\n\r\n    for (int i = 1; i <= n; i++) {\r\n        if (child[i].size() > 2){\r\n            return {-1};\r\n        }\r\n    }\r\n    v = vector<bool>(n + 1, false);\r\n    ans = vector<int>(n - 1, 0);\r\n    deque<pair<int, int>> q;\r\n    q.push_back({1, 0});\r\n    v[1] = true;\r\n\r\n    while (!q.empty()) {\r\n        int p = q.front().first;\r\n        int x = q.front().second;\r\n        q.pop_front();\r\n\r\n        for (auto i : child[p]) {\r\n            if (v[i.first]){\r\n                continue;\r\n            }else if (x == 0) {\r\n                ans[i.second] = 2;\r\n                x = 2;\r\n            } else if (x == 2) {\r\n                ans[i.second] = 3;\r\n                x = 3;\r\n            } else if (x == 3) {\r\n                ans[i.second] = 2;\r\n                x = 2;\r\n            }\r\n\r\n            v[i.first] = true;\r\n            q.push_back({i.first, x});\r\n        }\r\n    } \r\n    return ans;\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    vector<vector<pair<int, int>>> child;\r\n    vector<bool> v;\r\n    vector<int> ans;\r\n    cin.tie(nullptr);\r\n\r\n    int t; cin >> t;\r\n\r\n    while (t--) {\r\n        int n; cin >> n;\r\n\r\n        child = vector<vector<pair<int, int>>>(n + 1);\r\n        for (int i = 0; i < n - 1; i++) {\r\n            int u, v; cin >> u >> v;\r\n\r\n            child[u].push_back({v, i});\r\n            child[v].push_back({u, i});\r\n        }\r\n\r\n        vector<int> result = solve();\r\n\r\n        if (result[0] == -1) {\r\n            cout << -1 << endl;\r\n        } else {\r\n            for (int i = 0; i < n - 1; i++) {\r\n                cout << result[i] << \" \";\r\n            }\r\n            cout << endl;\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n\r\nvector<vector<pair<int, int>>> child;\r\nvector<bool> v;\r\nvector<int> ans;\r\n\r\nvector<int> solve() {\r\n    int n = child.size() - 1;\r\n\r\n    for (int i = 1; i <= n; i++) {\r\n        if (child[i].size() > 2){\r\n            return {-1};\r\n        }\r\n    }\r\n    v = vector<bool>(n + 1, false);\r\n    ans = vector<int>(n - 1, 0);\r\n    deque<pair<int, int>> q;\r\n    q.push_back({1, 0});\r\n    v[1] = true;\r\n\r\n    while (!q.empty()) {\r\n        int p = q.front().first;\r\n        int x = q.front().second;\r\n        q.pop_front();\r\n\r\n        for (auto i : child[p]) {\r\n            if (v[i.first]){\r\n                continue;\r\n            }else if (x == 0) {\r\n                ans[i.second] = 2;\r\n                x = 2;\r\n            } else if (x == 2) {\r\n                ans[i.second] = 3;\r\n                x = 3;\r\n            } else if (x == 3) {\r\n                ans[i.second] = 2;\r\n                x = 2;\r\n            }\r\n\r\n            v[i.first] = true;\r\n            q.push_back({i.first, x});\r\n        }\r\n    } \r\n    return ans;\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n\r\n    int t; cin >> t;\r\n\r\n    while (t--) {\r\n        int n; cin >> n;\r\n\r\n        child = vector<vector<pair<int, int>>>(n + 1);\r\n        for (int i = 0; i < n - 1; i++) {\r\n            int u, v; cin >> u >> v;\r\n\r\n            child[u].push_back({v, i});\r\n            child[v].push_back({u, i});\r\n        }\r\n\r\n        vector<int> result = solve();\r\n\r\n        if (result[0] == -1) {\r\n            cout << -1 << endl;\r\n        } else {\r\n            for (int i = 0; i < n - 1; i++) {\r\n                cout << result[i] << \" \";\r\n            }\r\n            cout << endl;\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}