{
    "id": 220685271,
    "contestId": 1627,
    "creationTimeSeconds": 1693132741,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1627,
        "index": "C",
        "name": "Not Assigning",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "number theory",
            "trees"
        ]
    },
    "author": {
        "contestId": 1627,
        "members": [
            {
                "handle": "lightovernight"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642257300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 10649600,
    "source": "#include <bits/stdc++.h>\r\n#define endl \"\\n\"\r\n#define MOD 1000000007\r\nconst int N = 2e5 + 10;\r\nusing namespace std;\r\ntypedef long long ll;\r\nvector<pair<int,int> > gra[N];\r\nint ans[N];\r\nint vis[N];\r\nvoid dfs(int i,int color)\r\n{\r\n    vis[i] = 1;\r\n    for(auto edge : gra[i])\r\n    {\r\n        if(vis[edge.first])\r\n            continue;\r\n        ans[edge.second] = color ^ 1;\r\n        dfs(edge.first,color^1);\r\n    }\r\n}\r\nvoid solve(int t)\r\n{\r\n    int n;\r\n    cin >> n;\r\n    int u,v;\r\n    for(int i = 1; i <= n; i++)\r\n    {\r\n        gra[i].clear();\r\n        vis[i] = 0;\r\n        ans[i] = -1;\r\n    }\r\n    for(int i = 1; i <= n-1; i++)\r\n    {\r\n        cin >> u >> v;\r\n        gra[u].push_back({v,i});\r\n        gra[v].push_back({u,i});\r\n    }\r\n    for(int i = 1;  i<= n; i++)\r\n    {\r\n        if(gra[i].size() > 2)\r\n        {\r\n            cout << -1 << endl;\r\n            return;\r\n        }\r\n    }\r\n    for(int i = 1; i <= n; i++)\r\n    {\r\n        if(gra[i].size() == 1)\r\n        {\r\n            dfs(i,0);\r\n            break;\r\n        }\r\n    }\r\n    for(int i = 1; i <= n - 1; i++)\r\n    {\r\n        if(ans[i] == 0)\r\n            cout << 2 << \" \";\r\n        else if(ans[i] == 1)\r\n            cout << 5 << \" \";\r\n        else\r\n            cout << ans[i] << \" \";\r\n    }\r\n    cout << endl;\r\n}\r\nint main()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    int t = 1;\r\n    cin >> t;\r\n    for (int i = 1; i <= t; i++)\r\n    {\r\n        solve(i);\r\n    }\r\n    cout.flush();\r\n    system(\"pause\");\r\n}"
}