{
    "id": 233884371,
    "contestId": 723,
    "creationTimeSeconds": 1700729839,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 723,
        "index": "D",
        "name": "Lakes in Berland",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 723,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475494500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 409600,
    "source": "#include <bits/stdc++.h>\n#define S second\n#define F first\n#define int long long\n#define pb push_back\n#define all(x) x.begin(),x.end()\n#define yes \"YES\\n\"\n#define no \"NO\\n\"\n#define ent \"\\n\"\n#define rv reverse\n#define give_me_more_speed ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n#define ex exit(0)\n\nusing namespace std;\n\nconst int maxn = 100;\n\nint n , m , k;\n\nchar a[maxn][maxn];\n\nint used[maxn][maxn];\n\nint comp[maxn];\n\nint dx[] = {0 , 0 , -1 , 1 , 1 , -1 , -1 , 1};\nint dy[] = {-1 , 1 , 0 , 0 , 1 , -1 , 1 , -1};\n\nint used1[maxn][maxn];\n\nvector <pair <int , pair <int , int> >> ans;\n\nint col = 0;\n\nvoid dfs1(int x , int y){\n  used1[x][y] = 1;\n  for(int i = 0;i < 4;i++){\n    int tx = dx[i] + x;\n    int ty = dy[i] + y;\n    if(a[tx][ty] == '.' && ty >= 1 && ty <= m && tx >= 1 && tx <= n && used1[tx][ty] == 0){\n      dfs1(tx , ty);\n    }\n  }\n}\n\nvoid dfs(int x , int y){\n  comp[col]++;\n  used[x][y] = 1;\n  for(int i = 0;i < 4;i++){\n    int tx = dx[i] + x;\n    int ty = dy[i] + y;\n    if(a[tx][ty] == '.' && tx > 1 && tx < n && ty > 1 && ty < m && used[tx][ty] == 0){\n      dfs(tx , ty);\n    }\n  }\n}\n\nint sum = 0;\n\nvoid check(int x , int y){\n  sum++;\n  a[x][y] = '*';\n  for(int i = 0;i < 4;i++){\n    int tx = dx[i] + x;\n    int ty = dy[i] + y;\n    if(a[tx][ty] == '.' && tx > 1 && tx < n && ty > 1 && ty < m){\n      check(tx , ty);\n    }\n  }\n}\n\nvoid solve(){\n  cin>>n >> m >> k;\n  for(int i = 1;i <= n;i++){\n    for(int j = 1;j <= m;j++){\n      cin>>a[i][j];\n    }\n  }\n  for(int i = 1;i <= n;i++){\n    for(int j = 1;j <= m;j++){\n      if(a[i][j] == '.' && (i == 1 || j == 1 || i == n || j == m) && used1[i][j] == 0){\n        dfs1(i , j);\n      }\n    }\n  }\n  for(int i = 1;i <= n;i++){\n    for(int j = 1;j <= m;j++){\n      if(a[i][j] == '.' && i > 1 && i < n && j > 1 && j < m && used[i][j] == 0 && used1[i][j] == 0){\n        col++;\n        dfs(i , j);\n        ans.pb({comp[col] , {i , j}});\n      }\n    }\n  }\n  int cal = col - k;\n  sort(all(ans));\n  for(auto to : ans){\n    if(cal > 0){\n      int x = to.S.F;\n      int y = to.S.S;\n      check(x , y);\n      cal--;\n    }\n  }\n  cout<<sum<<ent;\n  for(int i = 1;i <= n;i++){\n    for(int j = 1;j <= m;j++){\n      cout<<a[i][j];\n    }\n    cout<<ent;\n  }\n}\n\nsigned main(){\n  //freopen(\"x\" , \"r\" , stdin);\n  //freopen(\"x\" , \"w\" , stout);\n  give_me_more_speed\n  int t = 1;\n  //cin>>t;\n  for(int i = 1;i <= t;i++){\n    solve();\n  }\n}\n\n\n\n\t\t   \t\t\t\t   \t \t\t\t   \t\t\t \t\t \t\t\t"
}