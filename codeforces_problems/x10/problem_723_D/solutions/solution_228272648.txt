{
    "id": 228272648,
    "contestId": 723,
    "creationTimeSeconds": 1697361822,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 723,
        "index": "D",
        "name": "Lakes in Berland",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1600,
        "tags": [
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 723,
        "members": [
            {
                "handle": "youssefbahy2022"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1475494500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 409600,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <cmath>\r\n#include <algorithm>\r\n#include <utility>\r\n#include <map>\r\n#include <set>\r\n#include <queue>\r\n#include <stack>\r\n#include <bitset>\r\n#include <iomanip>\r\n#include <cstring>\r\n#include <numeric>\r\n#include <climits>\r\n#pragma GCC optimize(\"-Ofast\")\r\n#pragma GCC optimize(\"-ffast-math\")\r\n#pragma GCC optimize(\"-funroll-loops\")\r\n#pragma GCC optimize(\"-funroll-all-loops,-fpeel-loops,-funswitch-loops\")\r\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,sse4.2,popcnt,abm,mmx,avx2,tune=native\")\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define Youssef_Bahy ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n#define Num_of_Digits(n) ((int)log10(n) + 1)\r\n#define PI 3.1415926535897932384626433832795\r\n#define MOD 1000000007\r\n#define read(type) readInt<type>()\r\nusing namespace std;\r\nconst int N=1e6+5,INF=1e9;\r\nconst ll OO=1e118;\r\nll t=1;\r\nint dr[]={1, 0, -1, 0};\r\nint dc[]={0, 1, 0, -1};\r\nvector<vector<char>>grid;\r\nvector<vector<bool>>visited;\r\nvector<vector<int>>lakes;\r\nvector<int>lake;\r\nint n, m, k;\r\nbool isValid(int r, int c) {\r\n    return r>=0 && r<n && c>=0 && c<m;\r\n}\r\nvoid DFS(int r, int c) {\r\n    visited[r][c]=true;\r\n    lake.push_back(r*m+c);\r\n    for(int i=0;i<4;i++) {\r\n        int nr=r+dr[i];\r\n        int nc=c+dc[i];\r\n        if(isValid(nr, nc) && !visited[nr][nc] && grid[nr][nc]=='.')\r\n            DFS(nr, nc);\r\n    }\r\n}\r\nvoid sepOcean(int r, int c) {\r\n    visited[r][c]=true;\r\n    for(int i=0;i<4;i++) {\r\n        int nr=r+dr[i];\r\n        int nc=c+dc[i];\r\n        if(isValid(nr, nc) && grid[nr][nc]=='.' && !visited[nr][nc]) DFS(nr, nc);\r\n    }\r\n}\r\nbool srt(vector<int>&a, vector<int>&b) {\r\n    return a.size()<b.size();\r\n}\r\nvoid solve()\r\n{\r\n    cin>>n>>m>>k;\r\n    grid.assign(n, vector<char>(m));\r\n    visited.assign(n, vector<bool>(m, 0));\r\n    for(int i=0;i<n;i++) {\r\n        for(int j=0;j<m;j++) {\r\n            cin>>grid[i][j];\r\n        }\r\n    }\r\n    for(int i=0;i<m;i++) {\r\n        if(grid[0][i]=='.') DFS(0, i);\r\n        if(grid[n-1][i]=='.') DFS(n-1, i);\r\n    }\r\n    for(int i=0;i<n;i++) {\r\n        if(grid[i][0]=='.') DFS(i, 0);\r\n        if(grid[i][m-1]=='.') DFS(i, m-1);\r\n    }\r\n    for(int i=1;i<n;i++) {\r\n        for(int j=1;j<m;j++) {\r\n            if(!visited[i][j] && grid[i][j]=='.') {\r\n                lake.clear();\r\n                DFS(i, j);\r\n                lakes.push_back(lake);\r\n            }\r\n        }\r\n    }\r\n    sort(lakes.begin(), lakes.end(), srt);\r\n    int sz=(int)lakes.size()-k;\r\n    ll ans=0;\r\n    for(int i=0;i<sz;i++) {\r\n        for(auto&x:lakes[i]) {\r\n            int r=x/m;\r\n            int c=x-r*m;\r\n            grid[r][c]='*';\r\n            ans++;\r\n        }\r\n    }\r\n    cout<<ans<<'\\n';\r\n    for(int i=0;i<n;i++) {\r\n        for(int j=0;j<m;j++) {\r\n            cout<<grid[i][j];\r\n        }\r\n        cout<<'\\n';\r\n    }\r\n}\r\nint main()\r\n{\r\n    Youssef_Bahy\r\n//    cin>>t;\r\n    while(t--)\r\n        solve();\r\n}\r\n"
}