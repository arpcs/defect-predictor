{
    "id": 221522618,
    "contestId": 1762,
    "creationTimeSeconds": 1693632377,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1762,
        "index": "B",
        "name": "Make Array Good",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1100,
        "tags": [
            "constructive algorithms",
            "implementation",
            "number theory",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1762,
        "members": [
            {
                "handle": "This_is_Adroit"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1671114900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 514,
    "memoryConsumedBytes": 5836800,
    "source": "// ================================================================================================//\r\n#include<bits/stdc++.h>\r\n#include<limits.h>\r\n#include<cmath>\r\n#include<iomanip>\r\n// ================================================================================================//\r\n\r\nconst int MAX_VAL=INT_MAX;\r\nconst int MIN_VAL=INT_MIN;\r\nconst int E=1e9+7;\r\n#define int                 long long int\r\nusing namespace std;\r\n// ================================================================================================//\r\n\r\n// Driver Code;\r\nint32_t main()\r\n{\r\n    int TC;cin>>TC;while(TC--){\r\n        int n,val;cin>>n;vector<pair<int,int>> vec; vector<pair<int,int>>ans_vec;\r\n        for(int i=0;i<n;i++)\r\n\r\n        {\r\n            cin>>val;\r\n            vec.push_back(pair<int,int>(val,i+1));\r\n        }sort(vec.begin(),vec.end());\r\n        for(int i=1;i<n;i++)\r\n        {\r\n            int rem=vec[i-1].first-(vec[i].first%vec[i-1].first);\r\n            vec[i].first+=rem;\r\n            ans_vec.push_back(pair<int,int>(vec[i].second,rem));\r\n        }\r\n        sort(ans_vec.begin(),ans_vec.end());\r\n        cout<<n-1<<endl;\r\n        for(int i=0;i<n-1;i++)cout<<ans_vec[i].first<<\" \"<<ans_vec[i].second<<endl;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return 0;}\r\n\r\n\r\n"
}