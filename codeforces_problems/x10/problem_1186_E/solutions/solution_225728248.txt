{
    "id": 225728248,
    "contestId": 1186,
    "creationTimeSeconds": 1695958458,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1186,
        "index": "E",
        "name": "Vus the Cossack and a Field",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2500,
        "tags": [
            "divide and conquer",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1186,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1561710000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 33,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 8089600,
    "source": "// Judges with GCC >= 12 only needs Ofast\n// #pragma GCC optimize(\"O3,no-stack-protector,fast-math,unroll-loops,tree-vectorize\")\n// MLE optimization\n// #pragma GCC optimize(\"conserve-stack\")\n// Old judges\n// #pragma GCC target(\"sse4.2,popcnt,lzcnt,abm,mmx,fma,bmi,bmi2\")\n// New judges. Test with assert(__builtin_cpu_supports(\"avx2\"));\n// #pragma GCC target(\"avx2,popcnt,lzcnt,abm,bmi,bmi2,fma,tune=native\")\n// Atcoder\n// #pragma GCC target(\"avx2,popcnt,lzcnt,abm,bmi,bmi2,fma\")\n/*\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\ntypedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;\n- insert(x),erase(x)\n- find_by_order(k): return iterator to the k-th smallest element\n- order_of_key(x): the number of elements that are strictly smaller\n*/\n\n#include<bits/stdc++.h>\nusing namespace std;\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\nuniform_real_distribution<> pp(0.0,1.0);\n#define int long long\n#define ld long double\n#define pii pair<int,int>\n#define piii pair<pii,int>\n#define mpp make_pair\n#define fi first\n#define se second\nconst int inf=1e18;\nconst int mod=998244353;\nconst int maxn=1005;\nconst int bl=650;\nconst int maxs=655;\nconst int maxm=200005;\nconst int maxq=1000005;\nconst int maxl=20;\nconst int maxa=1000000;\nconst int root=3;\nint power(int a,int n){\n    int res=1;\n    while(n){\n        if(n&1) res=res*a%mod;\n        a=a*a%mod;n>>=1;\n    }\n    return res;\n}\nconst int iroot=power(3,mod-2);\nconst int base=101;\n\nint n,m,q,c[maxn][maxn],C[35][35],C2[35][2];\n\nvoid precal(){\n    for(int i=0;i<n;i++){\n        for(int j=0;j<m;j++){\n            char ch;cin >> ch;\n            c[i][j]=ch-'0';\n            if(i) c[i][j]+=c[i-1][j];\n            if(j) c[i][j]+=c[i][j-1];\n            if(i && j) c[i][j]-=c[i-1][j-1];\n        }\n    }\n    for(int i=0;i<=30;i++){\n        C[i][0]=1;\n        for(int j=1;j<=i;j++) C[i][j]=C[i-1][j]+C[i-1][j-1];\n        for(int j=0;j<=i;j++) C2[i][j&1]+=C[i][j];\n    }\n}\nint g(int x){\n    int total=0,cc=0;\n    for(int i=29;i>=0;i--){\n        if(x&(1<<i)) total+=C2[i][cc],cc^=1;\n    }\n    //cout << x << ' ' << total << '\\n';\n    return total;\n}\n\nint query(int x,int y){\n    if(x<0 || y<0) return 0;\n    int dx=x/n,dy=y/m,rx=x%n,ry=y%m;\n\n    int x0=g(dx),x1=dx-x0,y0=g(dy),y1=dy-y0;\n    int res=(x0*y0+x1*y1)*c[n-1][m-1]+(x0*y1+x1*y0)*(n*m-c[n-1][m-1]);\n\n    int bx=__builtin_popcount(dx)&1;\n    if(bx) res+=y1*c[rx][m-1] + y0*((rx+1)*m-c[rx][m-1]);\n    else res+=y0*c[rx][m-1] + y1*((rx+1)*m-c[rx][m-1]);\n\n    //cout << x0 << ' ' << x1 << ' ' << y0 << ' ' << y1 << '\\n';\n\n    int by=__builtin_popcount(dy)&1;\n    if(by) res+=x1*c[n-1][ry] + x0*((ry+1)*n-c[n-1][ry]);\n    else res+=x0*c[n-1][ry] + x1*((ry+1)*n-c[n-1][ry]);\n\n    if(bx^by) res+=(rx+1)*(ry+1)-c[rx][ry];\n    else res+=c[rx][ry];\n\n    return res;\n}\n\nvoid solve(){\n    cin >> n >> m >> q;\n    precal();\n    for(int i=1;i<=q;i++){\n        int x1,y1,x2,y2;cin >> x1 >> y1 >> x2 >> y2;\n        x1--;x2--;y1--;y2--;\n        cout << query(x2,y2)-query(x1-1,y2)-query(x2,y1-1)+query(x1-1,y1-1) << '\\n';\n    }\n}\n\nsigned main(){\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);cout.tie(NULL);\n    int test=1;//cin >> test;\n    while(test--) solve();\n\n}\n\n  \t\t   \t\t\t  \t\t  \t\t\t \t \t  \t\t  \t"
}