{
    "id": 203168644,
    "contestId": 1107,
    "creationTimeSeconds": 1682263861,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1107,
        "index": "C",
        "name": "Brutality",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1107,
        "members": [
            {
                "handle": "bkifhr8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1548516900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 14,
    "timeConsumedMillis": 139,
    "memoryConsumedBytes": 11468800,
    "source": "#include <bits/stdc++.h>\n#include<iostream>\n#include<deque>\n#include<set>\n\n#define loop(start,lessThan,incOrDec)  for(int i=start;i<lessThan;i+=incOrDec)\n\n#define loop1(nn10)                       loop(0,nn10,1)\n\n#define farray(as)                      loop1(arrays(as)){cin>>as[i];}\n\n#define arrays(ass)                      sizeof(ass)/sizeof(ass[0])\n\n#define ll                             long long\n\n#define ull                            unsigned long long\n\n#define pb(n1)                          push_back(n1)\n\n#define whilep                          int p; cin>>p;while(p--)\n\nusing namespace std;\n double dbtp(double x1,double x2,double y1,double  y2){\n  return sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n\n }\n pair<double,double> ch(double y1,double y2,double y3,double y4,bool&ok){\n    pair<double,double>p;\n    if(y1<y3){\n        p.first=y3;\n        if(y2<y3)ok=true;\n        else if(y2>y4)p.second=y4;\n        else p.second=y2;\n        return p;\n    }\n\n\n        p.first=y1;\n        if(y4<y1)ok=true;\n        else if(y4>y2)p.second=y2;\n        else p.second=y4;\n        return p;\n\n\n\n\n }\n\n ll fromBToD(string s,ll x){\n  ll sum=0, n=s.size()-1,i=0;\n  while(n>=0){\n        ll num;\n  if(s[i]<'A')num=s[i]-'0';\n  else {\n     num=s[i]-'A'+10;\n  }i++;\n    sum=sum+pow(x,n--)*num;\n  }\n  return sum;\n }\n\n\n ull fromBToD(vector<ll>v ){\n  ull sum=0, n=v.size();\n  loop1(n)sum=sum+v[i]*(ull)pow((ll)2,i);\n  return sum;\n }\n char get(ll x){\n  char a='A';\n  loop1(x){\n   a++;\n  }\n  return a;\n\n }\n int fromDToB(ll n){\n   int c=0;\n   while(n){\n    ll num=n%2;\n    n/=2;\n    c+=num;\n   }\n   return c;\n }\nint main()\n\n{\n    cin.tie(0);\n    cout.tie(0);\n    cin.sync_with_stdio(0);\n    ll n,k;cin>>n>>k;\n    ll v[n];farray(v);\n    char a[n];farray(a);\n    ll sum=0;\n    loop1(n){\n     set<ll>s;\n     while(true){\n        if(s.empty()||(i<n&&a[i]==a[i-1]))s.insert(v[i++]);\n        else{\n            int k2=k;\n            set<ll>:: reverse_iterator it ;\n            it=s.rbegin();\n            while(k2&&it!=s.rend()){\n                sum+=*it;\n                it++;k2--;\n            }\n            break;\n        }\n     }\n     i--;\n    }\n    cout<<sum;\n}\n\n   \t \t   \t\t\t \t  \t     \t  \t \t\t\t\t"
}