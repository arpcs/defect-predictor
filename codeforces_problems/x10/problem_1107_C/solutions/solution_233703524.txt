{
    "id": 233703524,
    "contestId": 1107,
    "creationTimeSeconds": 1700578748,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1107,
        "index": "C",
        "name": "Brutality",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1107,
        "members": [
            {
                "handle": "__vladimir__"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1548516900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 6246400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define int long long\r\ntypedef long long ll;\r\ntypedef vector<ll> vi; \r\ntypedef pair<int, int> ii; \r\ntypedef vector<ii> vii; \r\ntypedef vector<vi> vvi;\r\n#define F first\r\n#define S second\r\n#define pb emplace_back\r\n#define M 1000000007\r\n#define watch(x) cout << (#x) << \" is \" << (x) << endl\r\n#define IOS ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\r\n#define all(c) c.begin(), c.end()\r\n#define ws \" \"\r\n#define ln \"\\n\" \r\n\r\nint32_t main() {\r\n    IOS;\r\n    #ifndef ONLINE_JUDGE\r\n        freopen(\"input.txt\", \"r\", stdin);\r\n        freopen(\"output.txt\", \"w\", stdout);\r\n    #endif  \r\n\r\n    //------------------------------------------------------------\r\n\r\n    int n, k;\r\n    cin >> n >> k;\r\n\r\n    int ar[n];\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> ar[i];\r\n    }\r\n\r\n    string s;\r\n    cin >> s;\r\n\r\n    char prev = '$';\r\n    int index = 0, ans = 0;\r\n    while (index < n and prev != s[index]) {\r\n        prev = s[index];\r\n        priority_queue<int> pq;\r\n        while (index < n and s[index] == prev) {\r\n            pq.push(ar[index]);\r\n            index++;\r\n        }\r\n\r\n        int count = 0;\r\n        while (count < k and !pq.empty()) {\r\n            count++;\r\n            ans += pq.top();\r\n            pq.pop();\r\n        }\r\n    }\r\n\r\n    cout << ans << ln;\r\n} \r\n\r\n// Check boundary cases such as n == 0 or n == 1\r\n"
}