{
    "id": 225511272,
    "contestId": 1107,
    "creationTimeSeconds": 1695817967,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1107,
        "index": "C",
        "name": "Brutality",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1107,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1548516900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 6758400,
    "source": "#include <bits/stdc++.h>\n#define ll long long\n#define el \"\\n\"\n#define all(v) v.begin(),v.end()\n#define allr(v) v.rbegin(),v.rend()\n#define fl(i,n) for(ll i = 0;i < n;i++)\n#define fastIO ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\nusing namespace std;\nconst ll OO = INT64_MAX;\nconst ll sz = 1e6 + 10;\nint dx[8] = {1,-1,0,0,1,1,-1,-1};\nint dy[8] = {0,0,-1,1,-1,1,-1,1};\nll gcd(ll a,ll b){\n    if (!b)\n        return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return (a*b)/gcd(a,b);\n}\nbool comp(pair<ll,ll> p1,pair<ll,ll> p2){\n    return p1.second < p2.second;\n}\nint main(){\n    fastIO\n//    freopen(\"outofplace.in\",\"r\",stdin);\n//    freopen(\"outofplace.out\",\"w\",stdout);\n    ll n,k; cin >> n >> k;\n    vector<ll> v(n); for(ll &e:v) cin >> e;\n    string s; cin >> s;\n    ll ans = 0;\n    ll i = 0, j = 0;\n    vector<ll> tem;\n    while (i < n){\n       tem.clear();\n       while(j < n && s[i] == s[j])\n           tem.push_back(v[j++]);\n       sort(all(tem),greater<ll>());\n       if (tem.size() <= k) ans += accumulate(all(tem),0ll);\n       else ans += accumulate(tem.begin(),tem.begin() + k,0ll);\n       i = j;\n    }\n    cout << ans << el;\n    return 0;\n}\n\n\n\n \t \t\t \t\t  \t \t\t  \t\t \t \t  \t \t\t\t \t"
}