{
    "id": 217175465,
    "contestId": 1107,
    "creationTimeSeconds": 1691183735,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1107,
        "index": "C",
        "name": "Brutality",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1107,
        "members": [
            {
                "handle": "Shohanur_1603020"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1548516900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 499,
    "memoryConsumedBytes": 6860800,
    "source": "\r\n\r\n\r\n  #include<iostream>\r\n  #include<bits/stdc++.h>\r\n  using namespace  std;\r\n  typedef long long ll;\r\n  typedef unsigned long long ull;\r\n  typedef long long  int lli;\r\n  #define  pb   push_back\r\n  #define  ins insert\r\n  #define YES cout<<\"YES\"<<endl\r\n  #define NO cout<<\"NO\"<<endl\r\n  #define Yes cout<<\"Yes\"<<endl\r\n  #define No cout<<\"No\"<<endl\r\n  #define sorted(k) sort(k.begin(),k.end())\r\n  #define rsorted(k) sort(k.rbegin(),k.rend())\r\n  #define reversed(k) reverse(k.begin(),k.end())\r\n\r\n\r\n\r\n     int main()\r\n     {\r\n         ll  n,k;\r\n\r\n           cin>>n>>k;\r\n\r\n            ll  arr[n];\r\n\r\n\r\n              for(ll i=0;i<n;i++)\r\n                  cin>>arr[i];\r\n\r\n              string s;\r\n\r\n                cin>>s;\r\n\r\n\r\n                  ll  res=arr[0],streak=1;\r\n\r\n                    map<ll,ll> my_map;\r\n\r\n\r\n                      ll  num1,num2;\r\n\r\n\r\n                        if(my_map.find(arr[0])==my_map.end())\r\n                        my_map.ins({arr[0],0});\r\n                          my_map[arr[0]]++;\r\n\r\n\r\n\r\n                            for(ll  i=1;i<n;i++)\r\n                            {\r\n\r\n                                  if(s[i]==s[i-1])\r\n                                  {\r\n\r\n                                        streak++;\r\n\r\n\r\n                                          if(streak<=k)\r\n                                          {\r\n\r\n                                              if(my_map.find(arr[i])==my_map.end())\r\n                                              my_map.ins({arr[i],0});\r\n                                                my_map[arr[i]]++;\r\n\r\n                                                  res+=arr[i];\r\n\r\n                                          }\r\n\r\n                                          else\r\n                                          {\r\n                                                num1=my_map.begin()->first;\r\n                                                  num2=arr[i];\r\n\r\n\r\n                                                    if(num2>num1)\r\n                                                    {\r\n                                                          res+=num2-num1;\r\n\r\n\r\n                                                            if(--my_map[num1]==0)\r\n                                                                  my_map.erase(num1);\r\n\r\n\r\n                                                              if(my_map.find(num2)==my_map.end())\r\n                                                              my_map.ins({num2,0});\r\n                                                                my_map[num2]++;\r\n                                                    }\r\n                                          }\r\n                                  }\r\n\r\n                                  else\r\n                                  {\r\n\r\n                                        streak=1;\r\n\r\n                                          my_map.clear();\r\n\r\n                                            if(my_map.find(arr[i])==my_map.end())\r\n                                              my_map.ins({arr[i],0});\r\n                                                my_map[arr[i]]++;\r\n\r\n                                                  res+=arr[i];\r\n\r\n\r\n\r\n                                  }\r\n\r\n\r\n\r\n\r\n                            }\r\n\r\n\r\n                             cout<<res<<endl;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n     }\r\n"
}