{
    "id": 234353255,
    "contestId": 1451,
    "creationTimeSeconds": 1700973793,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1451,
        "index": "B",
        "name": "Non-Substring Subsequence",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 900,
        "tags": [
            "dp",
            "greedy",
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 1451,
        "members": [
            {
                "handle": "lwh_lwh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1605969300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "// generated by GPT4 2023-11-26 12:43:10\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0); cout.tie(0);\r\n\r\n    int t;\r\n    cin >> t;\r\n    while(t--) {\r\n        int n, q;\r\n        cin >> n >> q;\r\n        string s;\r\n        cin >> s;\r\n        vector<int> prefix1(n), prefix0(n);\r\n        prefix1[0] = (s[0] == '1');\r\n        prefix0[0] = (s[0] == '0');\r\n        for(int i=1; i<n; i++) {\r\n            prefix1[i] = prefix1[i-1] + (s[i] == '1');\r\n            prefix0[i] = prefix0[i-1] + (s[i] == '0');\r\n        }\r\n        while(q--) {\r\n            int l, r;\r\n            cin >> l >> r;\r\n            l--, r--;\r\n            bool left = (l > 0 && s[l] == '1' && prefix1[l-1] > 0) || \r\n                        (l > 0 && s[l] == '0' && prefix0[l-1] > 0);\r\n            bool right = (r < n-1 && s[r] == '1' && prefix1[n-1] - prefix1[r] > 0) ||\r\n                         (r < n-1 && s[r] == '0' && prefix0[n-1] - prefix0[r] > 0);\r\n            if(left || right) cout << \"YES\\n\";\r\n            else cout << \"NO\\n\";\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}