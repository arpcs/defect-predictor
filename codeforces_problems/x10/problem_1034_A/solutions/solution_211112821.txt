{
    "id": 211112821,
    "contestId": 1034,
    "creationTimeSeconds": 1687769953,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1034,
        "index": "A",
        "name": "Enlarge GCD",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "number theory"
        ]
    },
    "author": {
        "contestId": 1034,
        "members": [
            {
                "handle": "SmartBig"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1537540500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 14,
    "timeConsumedMillis": 858,
    "memoryConsumedBytes": 10547200,
    "source": "// LUOGU_RID: 113352541\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nconst int _ = 3e5 + 7;\n \ninline int fpl(int a, int b, int p) {\n    int temp = a, ans = 0;\n    while (b) {\n        if (b & 1) ans = (ans + temp) % p;\n        temp = (temp + temp) % p;\n        b = b >> 1;\n    }\n    return ans % p;\n}\n \ninline int fpow(int a, int b, int p) {\n    int temp = a, ans = 1;\n    while (b) {\n        if (b & 1) ans = fpl(ans,temp,p);\n        temp = fpl(temp,temp,p);\n        b = b >> 1;\n    }\n    return ans % p;\n}\n \n \nint n, a[_];\nint tot, cn[_];\nbool ch[_];\nvoid pr(int N) {\n    ch[1] = 1;\n    for (int i = 2; i <= N; i++) {\n        if (ch[i] == 0) cn[++tot] = i;\n        for (int j = 1; j <= tot && cn[j] * i <= N; j++) {\n            ch[i * cn[j]] = 1;\n            if (i % cn[j] == 0) break;\n        }\n    }\n}\nint num[_];\nbool vis[_], vs[_];\nint maxmi[_];\nsigned main() {\n    pr(1e3 + 7);\n    \n    cin >> n;\n    int ANS = n;\n    for (int i = 1; i <= n; i++)\n        cin >> a[i];\n    for (int i = 1; i <= n; i++) {\n        int temp = a[i];\n        for (int k = 1; k <= tot; k++) { \n            int P = cn[k]; \n            if (a[i] % P == 0) num[P]++;\n        }\n    }\n    \n    for (int i = 1; i <= tot; i++) {\n        int P = cn[i];\n        if (num[P] != n)\n            // cout << P << \" \" << maxmi[P] << '\\n';\n            // cout << P << ' ' << num[P] << '\\n';\n        ANS = min(ANS, n - num[P]);\n    }\n\n    if (ANS == n) cout << \"-1\";\n    else cout << ANS << '\\n';\n    return 0;\n}"
}