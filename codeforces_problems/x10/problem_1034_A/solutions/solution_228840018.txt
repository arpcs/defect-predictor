{
    "id": 228840018,
    "contestId": 1034,
    "creationTimeSeconds": 1697737461,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1034,
        "index": "A",
        "name": "Enlarge GCD",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "number theory"
        ]
    },
    "author": {
        "contestId": 1034,
        "members": [
            {
                "handle": "Reda_Amezzargou"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1537540500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nint findGCD(int arr[], int n) { \r\n    int result = arr[0]; \r\n    for (int i = 1; i < n; i++) { \r\n        result = __gcd(arr[i], result); \r\n        if(result == 1) { \r\n            return 1; \r\n        } \r\n    } \r\n    return result; \r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    int N[n];\r\n    int aGCD[n];\r\n    for(int i=0;i<n;i++){\r\n        cin >> N[i];\r\n    }\r\n    int gc = findGCD(N,n);\r\n    for(int i=0;i<n;i++){\r\n        N[i] /= gc;\r\n    }\r\n    int max =0;\r\n    for(int i=0;i<n;i++){\r\n        for(int j=0;j<n;j++){\r\n            if(__gcd(N[i],N[j])>max && N[i]!=N[j]){\r\n                max = __gcd(N[i],N[j]);\r\n            }\r\n        }\r\n    }\r\n    if(max == 0){\r\n        max = __gcd(N[0],N[1]);\r\n    }\r\n    int cnt =0;\r\n    for(int i=0;i<n;i++){\r\n        if(N[i] % max !=0){\r\n            cnt ++;\r\n        }\r\n    }\r\n    if(n==2 && N[0]!=N[1]){\r\n        cout << 1 << endl;\r\n    }else if(cnt == n || cnt == 0){\r\n        cout << -1 << endl;\r\n    }else{\r\n       cout << cnt << endl; \r\n    }\r\n}"
}