{
    "id": 232041077,
    "contestId": 1034,
    "creationTimeSeconds": 1699520077,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1034,
        "index": "A",
        "name": "Enlarge GCD",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "number theory"
        ]
    },
    "author": {
        "contestId": 1034,
        "members": [
            {
                "handle": "imposterx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1537540500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 421,
    "memoryConsumedBytes": 6553600,
    "source": "#include<bits/stdc++.h>\r\n\r\n#define int long long\r\n\r\nusing namespace std;\r\n\r\nint32_t main()\r\n{\r\n    vector<int>pr(sqrt(15000004), 0);\r\n    vector<int>vec;\r\n    for(int i = 2; i * i <= 15000000; i++){\r\n        if(!pr[i]){\r\n            vec.push_back(i);\r\n            for(int j = i + i; j * j <= 15000000; j+=i)pr[j] = 1;\r\n        }\r\n    }\r\n    int n;\r\n    cin >> n;\r\n    int gcd = 0;\r\n    map<int, int> mp;\r\n    for(int i = 0; i < n; i++){\r\n        int x;\r\n        cin >> x;\r\n        mp[x]++;\r\n        gcd = __gcd(x, gcd);\r\n    }\r\n    vector<pair<int, int>>fre(sqrt(15000004));\r\n    int t = gcd;\r\n    for(int i = 0; i < vec.size(); i++){\r\n        while(gcd % vec[i] == 0){\r\n            fre[vec[i]].first++;\r\n            gcd /= vec[i];\r\n        }\r\n    }\r\n    vector<int>cnt(sqrt(15000003));\r\n    for(auto i : mp){\r\n        int t = i.first;\r\n        vector<int>a;\r\n        for(int j = 0; vec[j] * vec[j] <= t; j++){\r\n            if(t % vec[j] == 0)a.push_back(vec[j]);\r\n            while(t % vec[j] == 0){\r\n                t/=vec[j];\r\n                fre[vec[j]].second++;\r\n            }\r\n        }\r\n        if (t != 1 && t * t <= 15000000)a.push_back(t), fre[t].second++;\r\n        for(auto j : a){\r\n            if (fre[j].first < fre[j].second){\r\n                cnt[j] += i.second;\r\n            }\r\n            fre[j].second = 0;\r\n        }\r\n    }\r\n    int mx = 0;\r\n    for(int i = 2; i * i <= 15000000; i++){\r\n        mx = max(mx, cnt[i]);\r\n    }\r\n    cout << (!mx?-1:n - mx);\r\n}\r\n"
}