{
    "id": 228632650,
    "contestId": 1034,
    "creationTimeSeconds": 1697609396,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1034,
        "index": "A",
        "name": "Enlarge GCD",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1800,
        "tags": [
            "number theory"
        ]
    },
    "author": {
        "contestId": 1034,
        "members": [
            {
                "handle": "EL_shahaby"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1537540500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 74,
    "timeConsumedMillis": 951,
    "memoryConsumedBytes": 120217600,
    "source": "\r\n#define _USE_MATH_DEFINES\r\n#include <bits/stdc++.h>\r\n#include \"algorithm\"\r\n#include \"vector\"\r\n#include \"set\"\r\n#include \"map\"\r\n\r\n\r\nusing namespace std;\r\n\r\n\r\n// ordered_set & ordered_multiset\r\n//# include <ext/pb_ds/assoc_container.hpp>\r\n//#include <ext/pb_ds/tree_policy.hpp>\r\n//using namespace __gnu_pbds;\r\n//#define ordered_set tree<int , null_type, less<> , rb_tree_tag , tree_order_statistics_node_update>\r\n//typedef tree<int , null_type , less_equal<int> , rb_tree_tag , tree_order_statistics_node_update> ordered_multiset;\r\n//\r\n//void myerase(ordered_set &t , int v){\r\n//    int rank = t.order_of_key(v); // Number of elements that are less than v in t\r\n//    ordered_set:: iterator it = t.find_by_order(rank); // Iterator that points to the (rank+1)th element in t\r\n//    t.erase(it);\r\n//}\r\n//\r\nvoid fileIO(void) {\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n    freopen(\"error.txt\", \"w\", stderr);\r\n#endif\r\n#ifdef ONLINE_JUDGE\r\n#endif\r\n}\r\n\r\n\r\n\r\ntypedef long long  ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double ld;\r\n\r\ntypedef pair<int, int> pi;\r\ntypedef pair<int, pi> p3i;\r\n\r\ntypedef pair<ll, ll> pll;\r\ntypedef pair<ll, pll> p3ll;\r\n\r\ntypedef pair<ll, ld> plld;\r\ntypedef pair<double, pi> pd2i;\r\n\r\ntypedef vector<int> vi;\r\ntypedef vector<pi> v2i;\r\ntypedef vector<p3i> v3i;\r\n\r\ntypedef vector<ll> vll;\r\ntypedef vector<pll> v2ll;\r\ntypedef vector<p3ll> v3ll;\r\n\r\ntypedef vector<string> vs;\r\ntypedef vector<bool> vb;\r\n\r\ntypedef vector<vi> vvi;\r\ntypedef vector<vll> vvl;\r\n\r\ntypedef priority_queue<int> pq_max;\r\ntypedef priority_queue<int, vi, greater<int>> pq_min;\r\n\r\n#define loop(n)          for(ll i = 0; i < (n); i++)\r\n#define lp(x, s, e)      for(int x = (s); x < (e); x++)\r\n#define lpe(x, s, e)     for(int x = (s); x <= (e); x++)\r\n\r\n#define loop_r(n)          for(int i = (n) - 1; i >= 0; i--)\r\n#define loop1(n);    for(ll i = 1; i <= n; ++i)\r\n#define lp_r(x, s, e)      for(int x = (e) - 1; x >= (s); x--)\r\n#define lpe_r(x, s, e)     for(int x = (e); x >= (s); x--)\r\n\r\n#define MP make_pair\r\n#define PB push_back\r\n#define EmB emplace_back\r\n#define Em emplace\r\n#define len(s)   (int)s.length()\r\n#define sz(v)    (int)v.size()\r\n#define all(a)   a.begin(),a.end()\r\n#define all_r(a)   a.rbegin(),a.rend()\r\n#define clr(x, val)    memset((x), (val), sizeof(x))\r\n#define maxEle *max_element\r\n#define minEle *min_element\r\n#define SetPre(n, x)  cout << fixed << setprecision(n) << x\r\n\r\n#define tests int t; cin >> t; int i_t = 0; while(i_t++ < t)\r\n#define SetPre(n, x)  cout << fixed << setprecision(n) << x\r\n\r\n#define endl '\\n'\r\n#define kill return 0\r\n\r\n\r\n#define ceil_i(a, b) ((a+b-1)/b)\r\n#define floor_i(a, b) (a/b)\r\n#define round_i(a, b) ((a+(b/2))/b)\r\n\r\nint const len = 10 ;\r\n\r\nint dx_all[8] = {1, 0, -1, 0, 1, 1, -1, -1},\r\n        dy_all[8] = {0, 1, 0, -1, -1, 1, -1, 1};\r\n\r\nint dx[4] = {0, 1, -1, 0},\r\n        dy[4] = {1, 0, 0, -1};\r\n\r\nint dx_down[2] = {1, 0},\r\n        dy_down[2]={0,1};\r\n\r\nvoid fastIO(void) {\r\n\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n}\r\n\r\n\r\n//const int N = 2e5 + 5;\r\n//const int mod = 1e9+7;\r\n//const int INF = 1e9+9;\r\n//const double PI = 3.1415926536;\r\n//\r\n//bool vis[N];\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\nbool coprime(int x, int y) {    // Two numbers are called relatively prime, or coprime, if their greatest common divisor equals 1\r\n\r\n\r\n    while (y != 0) {\r\n        int temp = y;\r\n        y = x % y;\r\n        x = temp;\r\n    }\r\n    return x == 1;\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nll nCr(ll M, ll r)\r\n{\r\n    ll res = 0;\r\n    if (r == 0) return 1;\r\n    else res = nCr(M, r - 1) * (M - r + 1) / r;\r\n    return res;\r\n}\r\n\r\n\r\nbool is_prime(ll num) {\r\n    if (num == 2) return true;\r\n    if (num < 2 || !(num % 2)) return false;\r\n\r\n    for (ll i = 3; i * i <= num; i += 2) {\r\n        if (!(num % i)) return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\r\null GCD(ull a, ull b)\r\n{\r\n    if (b == 0) return a;\r\n    return gcd(b, a % b);\r\n}\r\nll LCM(ull x,ull y){\r\n    return (ll)((x/(ll)GCD(x,y))*y);\r\n}\r\n//////////////////////////////////////////////// Main ////////////////////////////////////////////////////\r\n\r\n\r\n//vector <ll> primes;\r\n//void sieve(){\r\n//    vector <bool> isprime(1000005,1);\r\n//    isprime[0] = isprime[1] = 0;\r\n//    for(ll i = 2 ; i<=1000000 ; i++){\r\n//        if(isprime[i]){\r\n//            for(ll j = i*i ; j<=1000000 ; j+=i){\r\n//                isprime[j] = 0;\r\n//            }\r\n//        }\r\n//    }\r\n//    for(int i=2; i<=1000000 ; i++)\r\n//        if(isprime[i])primes.push_back(i);\r\n//}\r\n\r\n\r\n#define MAX sqrt(10000000)+1\r\nconst int N = 15000005;\r\n\r\nvector <ll> primes;\r\nvoid sieve(){\r\n    vector <bool> isprime(1000005,1);\r\n    isprime[0] = isprime[1] = 0;\r\n    for(ll i = 3 ; i*i<=(ll)MAX ; i+=2){\r\n        if(isprime[i]){\r\n            for(ll j = i*i ; j<= (ll)MAX ; j+=i){\r\n                isprime[j] = 0;\r\n            }\r\n        }\r\n    }\r\n    primes.push_back(2);\r\n    for(int i=3; i<=MAX ; i+=2)\r\n        if(isprime[i])primes.push_back(i);\r\n}\r\n\r\nconst int mxn=(1.5*1e7)+10;\r\n\r\nint mul[mxn];\r\nint counts[mxn];\r\n\r\nint main() {\r\n\r\n    fileIO();\r\n    fastIO();\r\n\r\n    int n,x,g=0; cin >> n;\r\n\r\n    loop(n)\r\n    {\r\n        cin >> x;\r\n        counts[x]++;\r\n        g = GCD(g,x);\r\n    }\r\n\r\n    int mx = 0;\r\n    for(int i = g+1 ; i <= mxn ; i++){\r\n        if(!mul[i])\r\n        {\r\n            int cnt = 0;\r\n            for(int j = i ; j<= mxn ; j+=i) {\r\n                mul[j] = 1;\r\n                cnt += counts[j];\r\n            }\r\n            mx = max(mx,cnt);\r\n        }\r\n    }\r\n    cout << (mx ? n-mx : -1 );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"
}