{
    "id": 235690533,
    "contestId": 1633,
    "creationTimeSeconds": 1701684447,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1633,
        "index": "E",
        "name": "Spanning Tree Queries",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy",
            "math",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1633,
        "members": [
            {
                "handle": "qzz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1643639700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 16,
    "timeConsumedMillis": 717,
    "memoryConsumedBytes": 4812800,
    "source": "// LUOGU_RID: 138186283\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n//#define int long long\r\ntypedef long long ll;\r\nnamespace IO {\r\n\ttemplate<typename T = int>\r\n\tinline T rd() {\r\n\t\tchar ch = getchar();\r\n\t\tT x = 0;\r\n\t\tbool C1 = 0;\r\n\t\twhile (ch < '0' || ch > '9') C1 |= ch == '-', ch = getchar();\r\n\t\twhile (ch >= '0' && ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();\r\n\t\treturn C1 ? ~(x - 1) : x;\r\n\t}\r\n\ttemplate<typename T>\r\n\tinline void wr(T x) {\r\n\t\tif (x < 0) x = ~(x - 1), putchar('-');\r\n\t\tif (x > 9) wr(x / 10);\r\n\t\tputchar(x % 10 + '0');\r\n\t}\r\n}\r\nusing namespace IO;\r\nmt19937 mand(time(0));\r\nconst ll rwt = 1;\r\nconst double rwd = 1.0;\r\nvoid cmx(int &x, int y);\r\nvoid cmn(int &x, int y);\r\nint imax(int x, int y);\r\nint imin(int x, int y);\r\nint iabs(int x);\r\nint Mand(int x, int y);\r\n/*int qpow(int x, int k);\r\nvoid smd(int &x, int y);\r\nvoid dmd(int &x, int y);\r\nvoid pmd(int &x, int y);\r\nint amd(int x, int y);\r\nint mmd(int x, int y);*/\r\nconst int INF = 1e9 + 9;\r\nconst int N = 1e5 + 5;\r\nstruct Edge {\r\n\tint from, to, w;\r\n} edge[N];\r\nstruct S1 {\r\n\tint Xi, K1, K2;\r\n} s2[N];\r\nint s1[N], Pa[N], DY[N], Pre2[N], t, n, n1, n2, m, q, k1, A, B, C;\r\nll Pre1[N], ans;\r\nvoid Solve();\r\nll Solve1(int x);\r\nbool check(int id, int x);\r\nint Find(int x);\r\nbool cmp1(Edge x, Edge y);\r\nbool cmp2(S1 x, S1 y);\r\nsigned main() {\r\n\tt = 1;\r\n\twhile (t--) {\r\n\t\tSolve();\r\n\t}\r\n\treturn 0;\r\n}\r\nvoid Solve() {\r\n\tint l, r, mid, T1, T2;\r\n\tn = rd(), m = rd();\r\n\tfor (int i = 1; i <= m; i++) {\r\n\t\tedge[i].from = rd(), edge[i].to = rd(), edge[i].w = rd();\r\n\t}\r\n\tsort(edge + 1, edge + m + 1, cmp1);\r\n\tq = rd(), k1 = rd(), A = rd(), B = rd(), C = rd();\r\n\tfor (int i = 1; i <= m; i++) {\r\n\t\tif (!check(i, edge[i].w)) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tl = 0, r = edge[i].w, T1 = edge[i].w;\r\n\t\twhile (l <= r) {\r\n\t\t\tmid = (l + r) >> 1;\r\n\t\t\tif (check(i, mid)) {\r\n\t\t\t\tT1 = mid;\r\n\t\t\t\tr = mid - 1;\r\n\t\t\t} else {\r\n\t\t\t\tl = mid + 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tl = edge[i].w, r = INF, T2 = edge[i].w;\r\n\t\twhile (l <= r) {\r\n\t\t\tmid = (l + r) >> 1;\r\n\t\t\tif (check(i, mid)) {\r\n\t\t\t\tT2 = mid;\r\n\t\t\t\tl = mid + 1;\r\n\t\t\t} else {\r\n\t\t\t\tr = mid - 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\ts2[++n2] = (S1){T1, edge[i].w, -1};\r\n\t\ts2[++n2] = (S1){edge[i].w + 1, -edge[i].w - edge[i].w, 2};\r\n\t\ts2[++n2] = (S1){T2 + 1, edge[i].w, -1};\r\n\t}\r\n\tsort(s2 + 1, s2 + n2 + 1, cmp2);\r\n\tfor (int i = 1; i <= n2; i++) {\r\n\t\tDY[i] = s2[i].Xi;\r\n\t\tPre1[i] = Pre1[i - 1] + s2[i].K1;\r\n\t\tPre2[i] = Pre2[i - 1] + s2[i].K2;\r\n\t}\r\n\tfor (int i = 1; i <= q; i++) {\r\n\t\tT1 = rd();\r\n\t\tans ^= Solve1(T1);\r\n\t}\r\n\tfor (int i = q + 1; i <= k1; i++) {\r\n\t\tT1 = (rwt * T1 * A % C + B) % C;\r\n\t\tans ^= Solve1(T1);\r\n\t}\r\n\twr(ans), putchar('\\n');\r\n\treturn;\r\n}\r\nll Solve1(int x) {\r\n\tint T1 = upper_bound(DY + 1, DY + n2 + 1, x) - DY - 1;\r\n\treturn rwt * Pre2[T1] * x + Pre1[T1];\r\n}\r\nbool check(int id, int x) {\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tPa[i] = i;\r\n\t}\r\n\tint T1 = 1, T2;\r\n\tfor (int i = 1; i <= m; i++) {\r\n\t\tif (edge[i].w <= x) {\r\n\t\t\tT1 = i;\r\n\t\t} else {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tT2 = T1 + 1;\r\n\tn1 = 0;\r\n\twhile (n1 < m) {\r\n\t\tif (T2 > m) {\r\n\t\t\ts1[++n1] = T1;\r\n\t\t\tT1--;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (T1 < 1) {\r\n\t\t\ts1[++n1] = T2;\r\n\t\t\tT2++;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (x - edge[T1].w <= edge[T2].w - x) {\r\n\t\t\ts1[++n1] = T1;\r\n\t\t\tT1--;\r\n\t\t} else {\r\n\t\t\ts1[++n1] = T2;\r\n\t\t\tT2++;\r\n\t\t}\r\n\t}\r\n\tfor (int i = 1; i <= m; i++) {\r\n\t\tint x = edge[s1[i]].from, y = edge[s1[i]].to;\r\n\t\tif (s1[i] == id) {\r\n\t\t\tif (Find(x) == Find(y)) {\r\n\t\t\t\treturn 0;\r\n\t\t\t} else {\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (Find(x) == Find(y)) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tPa[Find(x)] = Find(y);\r\n\t}\r\n\treturn 0;\r\n}\r\nint Find(int x) {\r\n\tif (Pa[x] == x) {\r\n\t\treturn x;\r\n\t}\r\n\treturn Pa[x] = Find(Pa[x]);\r\n}\r\nbool cmp1(Edge x, Edge y) {\r\n\treturn x.w < y.w;\r\n}\r\nbool cmp2(S1 x, S1 y) {\r\n\treturn x.Xi < y.Xi;\r\n}\r\nvoid cmx(int &x, int y) {\r\n\tx = (y > x ? y : x);\r\n\treturn;\r\n}\r\nvoid cmn(int &x, int y) {\r\n\tx = (y < x ? y : x);\r\n\treturn;\r\n}\r\nint imax(int x, int y) {\r\n\treturn (x < y ? y : x);\r\n}\r\nint imin(int x, int y) {\r\n\treturn (x < y ? x : y);\r\n}\r\nint iabs(int x) {\r\n\treturn (x < 0 ? -x : x);\r\n}\r\nint Mand(int x, int y) {\r\n\treturn (mand() % (y - x + 1) + (y - x + 1)) % (y - x + 1) + x;\r\n}\r\n/*int qpow(int x, int k) {\r\n\tint Ans = 1;\r\n\tfor (int i = k; i; i >>= 1, pmd(x, x)) {\r\n\t\tif (i & 1) {\r\n\t\t\tpmd(Ans, x);\r\n\t\t}\r\n\t}\r\n\treturn Ans;\r\n}\r\nvoid smd(int &x, int y) {\r\n\tx = (x + y >= mod ? x + y - mod : x + y);\r\n\treturn;\r\n}\r\nvoid dmd(int &x, int y) {\r\n\tx = (x - y < 0 ? x - y + mod : x - y);\r\n\treturn;\r\n}\r\nvoid pmd(int &x, int y) {\r\n\tx = rwt * x * y % mod;\r\n\treturn;\r\n}\r\nint amd(int x, int y) {\r\n\treturn (x + y >= mod ? x + y - mod : x + y);\r\n}\r\nint mmd(int x, int y) {\r\n\treturn (x - y < 0 ? x - y + mod : x - y);\r\n}*/"
}