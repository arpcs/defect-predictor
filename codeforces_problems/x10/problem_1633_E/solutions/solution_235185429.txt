{
    "id": 235185429,
    "contestId": 1633,
    "creationTimeSeconds": 1701416991,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1633,
        "index": "E",
        "name": "Spanning Tree Queries",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy",
            "math",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1633,
        "members": [
            {
                "handle": "LiuXingJian"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1643639700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 25,
    "timeConsumedMillis": 3728,
    "memoryConsumedBytes": 218009600,
    "source": "// LUOGU_RID: 137669347\n#include<iostream>\r\n#include<cstdio>\r\n#include<algorithm>\r\n#define M 10000005\r\n#define N 800005\r\n#define ll long long\r\nusing namespace std;\r\nll read(){\r\n\tll x=0,f=1;char ch=getchar();\r\n\twhile(ch<'0' || ch>'9'){\r\n\t\tif(ch=='-')f=-1;\r\n\t\tch=getchar();\r\n\t}\r\n\twhile(ch>='0' && ch<='9'){\r\n\t\tx=(x<<1)+(x<<3)+(ch^48);\r\n\t\tch=getchar();\r\n\t}\r\n\treturn x*f;\r\n}\r\nvoid write(ll x){\r\n\tif(x<0)x=-x,putchar('-');\r\n\tif(x/10)write(x/10);\r\n\tputchar(x%10+'0');\r\n}\r\nstruct edg{\r\n\tll u,v,w,c;\r\n}a[N];\r\nstruct Node{\r\n\tll val,num;\r\n}q[M];\r\nbool cmp(edg x,edg y){\r\n\tif(x.c!=y.c)return x.c<y.c;\r\n\telse return x.w>y.w;\r\n}\r\nbool cmp2(Node x,Node y){\r\n\treturn x.val<y.val;\r\n}\r\nll pos[N],cnt,n,m,maxn[N],f[N];\r\nll ans[N],an[N];\r\nll find(ll x){\r\n\tif(x==f[x])return x;\r\n\telse return f[x]=find(f[x]);\r\n}\r\nvoid merge(ll x,ll y){\r\n\tx=find(x);y=find(y);if(x!=y)f[x]=y;\r\n}\r\nvoid MST(ll p,ll val){\r\n\tsort(a+1,a+m+1,cmp);\r\n\tfor(ll i=1;i<=n;i++)f[i]=i;\r\n\tfor(ll i=1;i<=m;i++){\r\n\t\tll u=find(a[i].u),v=find(a[i].v);\r\n\t\tif(u!=v)ans[p]+=(a[i].w>=val?a[i].w:-a[i].w),maxn[p]+=(a[i].w>=val),merge(u,v);\r\n\t}\r\n\tmaxn[p]=(n-1-maxn[p])-maxn[p];\r\n}\r\nint main(){\r\n\tn=read();m=read();\r\n\tfor(ll i=1;i<=m;i++)a[i].u=read(),a[i].v=read(),a[i].w=read(),a[i].c=a[i].w;\r\n\tsort(a+1,a+m+1,cmp);pos[++cnt]=0;\r\n\tfor(ll i=1;i<=m;i++)pos[++cnt]=a[i].w+1;\r\n\tfor(ll i=1;i<=m;i++){\r\n\t\tfor(ll j=i+1;j<=m;j++){\r\n\t\t\tll p=(a[i].w+a[j].w)/2;\r\n\t\t\tpos[++cnt]=p+((a[i].w+a[j].w)%2);\r\n\t\t}\r\n\t}\r\n\tsort(pos+1,pos+cnt+1);cnt=unique(pos+1,pos+cnt+1)-pos-1;\r\n\tfor(ll i=1;i<=cnt;i++){\r\n\t\tfor(ll j=1;j<=m;j++)a[j].c=abs(a[j].w-pos[i]);\r\n\t\tMST(i,pos[i]);\r\n\t}\r\n\tll p=read(),k=read(),a=read(),b=read(),c=read();\r\n\tfor(ll i=1;i<=p;i++)q[i].val=read(),q[i].num=i;\r\n\tfor(ll i=p+1;i<=k;i++)q[i].val=(q[i-1].val*1ll*a+b)%c,q[i].num=i;\r\n\tsort(q+1,q+k+1,cmp2);ll np=0;ll an2=0;\r\n\tfor(ll i=1;i<=k;i++){\r\n\t\twhile(np+1<=cnt && pos[np+1]<=q[i].val)np++;\r\n\t\tll tmp=q[i].val;\r\n\t\tan2^=ans[np]+tmp*maxn[np];\r\n\t}\r\n\twrite(an2);\r\n}"
}