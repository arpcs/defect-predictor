{
    "id": 199366304,
    "contestId": 1413,
    "creationTimeSeconds": 1679897311,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1413,
        "index": "E",
        "name": "Solo mid Oracle",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2100,
        "tags": [
            "greedy",
            "math",
            "ternary search"
        ]
    },
    "author": {
        "contestId": 1413,
        "members": [
            {
                "handle": "Murkbane"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1603623900
    },
    "programmingLanguage": "C# 10",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 5836800,
    "source": "int setsNum = Convert.ToInt32(Console.ReadLine());\r\nfor (int k = 0; k < setsNum; k++)\r\n{\r\n    int playersNum = Convert.ToInt32(Console.ReadLine());\r\n\r\n    var teamA = Console.ReadLine().Split().Select(int.Parse).ToArray();\r\n    var teamB = Console.ReadLine().Split().Select(int.Parse).ToArray();\r\n    var result = new int[playersNum];\r\n\r\n    Dictionary<int, Queue<int>> team_a = new Dictionary<int, Queue<int>>();\r\n    Dictionary<int, Queue<int>> team_b = new Dictionary<int, Queue<int>>();\r\n\r\n    for (int i = 0; i < playersNum; i++)\r\n    {\r\n        if (team_a.ContainsKey(teamA[i]))\r\n            team_a[teamA[i]].Enqueue(i);\r\n        else\r\n        {\r\n            team_a.Add(teamA[i], new Queue<int>());\r\n            team_a[teamA[i]].Enqueue(i);\r\n        }\r\n\r\n        if (team_b.ContainsKey(teamB[i]))\r\n            team_b[teamB[i]].Enqueue(i);\r\n        else\r\n        {\r\n            team_b.Add(teamB[i], new Queue<int>());\r\n            team_b[teamB[i]].Enqueue(i);\r\n        }\r\n    }\r\n\r\n    Array.Sort(teamA);\r\n    Array.Sort(teamB);\r\n\r\n    for (int i = 0; i < playersNum; i++)\r\n        result[team_a[teamA[i]].Dequeue()] = team_b[teamB[playersNum - 1 - i]].Dequeue();\r\n\r\n    for (int i = 0; i < playersNum; i++)\r\n    {\r\n        Console.Write(result[i] + 1);\r\n        Console.Write(\" \");\r\n    }\r\n\r\n    Console.WriteLine();\r\n}"
}