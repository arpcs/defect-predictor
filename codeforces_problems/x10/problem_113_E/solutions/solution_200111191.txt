{
    "id": 200111191,
    "contestId": 113,
    "creationTimeSeconds": 1680346053,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 113,
        "index": "E",
        "name": "Sleeping",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2700,
        "tags": [
            "combinatorics",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 113,
        "members": [
            {
                "handle": "luogu_bot1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1315494000
    },
    "programmingLanguage": "Python 3",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 60,
    "memoryConsumedBytes": 0,
    "source": "# LUOGU_RID: 106654446\ndef num_differing_digits(a, b):\r\n    return sum(1 for x, y in zip(str(a), str(b)) if x != y)\r\n\r\nh, m, k = map(int, input().split())\r\nh1, m1 = map(int, input().split())\r\nh2, m2 = map(int, input().split())\r\n\r\ncount = 0\r\nfor hour in range(h1, h2+1):\r\n    for minute in range(m if hour == h2 else 0, m if hour == h1 else m1-1, -1):\r\n        if num_differing_digits(hour, minute) >= k:\r\n            count += 1\r\n\r\nprint(count)\r\n"
}