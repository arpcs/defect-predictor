{
    "id": 229953878,
    "contestId": 1523,
    "creationTimeSeconds": 1698379895,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1523,
        "index": "F",
        "name": "Favorite Game",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3300,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    "author": {
        "contestId": 1523,
        "members": [
            {
                "handle": "taicailea"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1622385300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 53760000,
    "source": "// LUOGU_RID: 131813523\n#include <bits/stdc++.h>\r\n#define int long long\r\nusing namespace std;\r\nstruct mh\r\n{\r\n  int x, y, t;\r\n} st[105];\r\nbool cmp(mh a, mh b)\r\n{\r\n  return a.t < b.t;\r\n}\r\nint n, m, ans, x[20], y[20], fuckabcd[20005][20], FUCKABCD[20005][105], dp[20005][105], k[20005][105];\r\nvoid solve(int state)\r\n{\r\n  for (int i = 0; i <= m; i++)\r\n  {\r\n    if (k[state][i])\r\n      for (int j = i + 1; j <= m; j++)\r\n        if (st[i].t + abs(st[i].x - st[j].x) + abs(st[i].y - st[j].y) <= st[j].t)\r\n          k[state][j] = max(k[state][j], k[state][i] + 1);\r\n    if (i)\r\n      for (int j = 1; j <= m; j++)\r\n        if (k[state][j] == i)\r\n          dp[state][k[state][j]] = min(dp[state][k[state][j]], st[j].t);\r\n    for (int j = 1; j <= n; j++)\r\n      if (!(state & (1 << j - 1)))\r\n        dp[(state | (1 << j - 1))][i] = min(dp[(state | (1 << j - 1))][i], dp[state][i] + fuckabcd[state][j]);\r\n    if (k[state][i])\r\n      for (int j = 1; j <= n; j++)\r\n        if (!(state & (1 << j - 1)))\r\n          dp[(state | (1 << j - 1))][k[state][i]] = min(dp[(state | (1 << j - 1))][k[state][i]], st[i].t + abs(st[i].x - x[j]) + abs(st[i].y - y[j]));\r\n    for (int j = i + 1; j <= m; j++)\r\n      if (dp[state][i] + FUCKABCD[state][j] <= st[j].t)\r\n        k[state][j] = max(k[state][j], i + 1);\r\n    ans = max(ans, k[state][i]);\r\n  }\r\n}\r\nsigned main()\r\n{\r\n#ifndef ONLINE_JUDGE\r\n  freopen(\"data/data.in\", \"r\", stdin);\r\n// freopen(\"data/data.out\", \"w\", stdout);\r\n#endif\r\n  std::ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\r\n  cin >> n >> m;\r\n  for (int i = 1; i <= n; i++)\r\n    cin >> x[i] >> y[i];\r\n  for (int i = 1; i <= m; i++)\r\n    cin >> st[i].x >> st[i].y >> st[i].t;\r\n  sort(st + 1, st + m + 1, cmp);\r\n  memset(dp, 0x3f, sizeof dp);\r\n  memset(fuckabcd, 0x3f, sizeof fuckabcd);\r\n  memset(FUCKABCD, 0x3f, sizeof FUCKABCD);\r\n  for (int state = 0; state < (1 << n); state++)\r\n    for (int j = 1; j <= n; j++)\r\n      if (!(state & (1 << j - 1)))\r\n        for (int z = 1; z <= n; z++)\r\n          if ((state & (1 << z - 1)))\r\n            fuckabcd[state][j] = min(fuckabcd[state][j], abs(x[j] - x[z]) + abs(y[j] - y[z]));\r\n  for (int state = 0; state < (1 << n); state++)\r\n    for (int j = 1; j <= m; j++)\r\n      for (int z = 1; z <= n; z++)\r\n        if ((state & (1 << z - 1)))\r\n          FUCKABCD[state][j] = min(FUCKABCD[state][j], abs(st[j].x - x[z]) + abs(st[j].y - y[z]));\r\n  for (int i = 1; i <= n; i++)\r\n    dp[(1 << i - 1)][0] = 0;\r\n  for (int i = 1; i <= m; i++)\r\n    k[0][i] = 1;\r\n  for (int state = 0; state < (1 << n); state++)\r\n    solve(state);\r\n  cout << ans;\r\n  exit(0);\r\n}"
}