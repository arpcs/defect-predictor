{
    "id": 228351973,
    "contestId": 1868,
    "creationTimeSeconds": 1697406288,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1868,
        "index": "B1",
        "name": "Candy Party (Easy Version)",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "bitmasks",
            "constructive algorithms",
            "graphs",
            "greedy",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1868,
        "members": [
            {
                "handle": "Sherbiny"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1694354700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n//#include <atcoder/all>\n#define f first\n#define s second\n#define FAST()    ios_base::sync_with_stdio(false); cin.tie(NULL);\n#define IN()  freopen(\"input.txt\", \"r\", stdin);\n#define OUT() freopen(\"output.txt\", \"w\", stdout) ;\nusing namespace std;using ll =  long long ;using ld =  double ;\nconst ll  N =2e5+5, M=1e9+7; const double  EPS = 1e-7;\ntypedef __int128 i28;\nusing vi = vector<ll>;\ntemplate<class T> using min_heap = priority_queue<T, std::vector<T>, std::greater<T>>;\nint dx[] = {0, 0, 1, -1, 1, -1, 1, -1}, dx4[] = {1, 0 , 0 , -1};\nint dy[] = {1, -1, 0, 0, 1, -1, -1, 1}, dy4[] = {0, 1, -1 ,0 };\n\n\nvoid no(){\n    cout<<\"No\";\n}\nvoid solve(){\n\n    int n,in;\n    ll sum=0;\n    cin>>n;\n    vi vs;\n    map<ll,int>up,dow;\n    for (int i = 0; i <n ; ++i) {\n        cin>>in;\n        vs.push_back(in);\n        sum+=in;\n    }\n    if (sum%n !=0){\n       no();\n        return;\n    }\n    sum/=n;\n\n    for (int i = 0; i <n ; ++i) {\n        if (vs[i]==sum)continue;\n        if (vs[i]>sum)up[vs[i]-sum]++;\n        else dow[sum-vs[i]]++;\n        if (__builtin_popcount(abs(sum-vs[i]) )>1){\n            no();\n            return;\n        }\n    }\n\n    while (!up.empty() and !dow.empty()){\nauto u= std::min_element(up.begin(), up.end()),d= std::min_element(dow.begin(), dow.end());\n\n\n        if (u->first > d->first){\n            if (d->second&1){\n                no();\n                return;\n            }\n            dow[u->first*2]+=d->second/2;\n            up.erase(d);\n        }else if(u->first < d->first){\n            if (u->second&1){\n                no();\n                return;\n            }\n            up[u->first*2]+=u->second/2;\n            up.erase(u);\n\n        }else {\nint dif= min(u->second,d->second);\nu->second-=dif;\nd->second-=dif;\n            if (u->second==0){\n                up.erase(u);\n            }\n            if (d->second==0){\n                dow.erase(d);\n            }\n        }\n    }\n\nif(up.empty() and dow.empty())    cout<<\"YES\";\nelse no();\n\n\n\n}\nint main(){\n\n\n    FAST()\n    //    IN()\n    //    OUT()\n    int t=1;\n    cin>>t;\n    while (t--){\n        solve();\n        cout<<\"\\n\";\n    }\n\n\n    return 0;\n}"
}