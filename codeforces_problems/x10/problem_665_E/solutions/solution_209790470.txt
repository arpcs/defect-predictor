{
    "id": 209790470,
    "contestId": 665,
    "creationTimeSeconds": 1686849072,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 665,
        "index": "E",
        "name": "Beautiful Subarrays",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "data structures",
            "divide and conquer",
            "strings",
            "trees"
        ]
    },
    "author": {
        "contestId": 665,
        "members": [
            {
                "handle": "MVP_Harry"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461164400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 28,
    "timeConsumedMillis": 1107,
    "memoryConsumedBytes": 372736000,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n#define INF 0x3f3f3f3f\n#define ll long long\n#define pb push_back\n#define mp make_pair\n#define all(w) w.begin(), w.end()\n#define rep(i, m, n) for (int i = m; i <= n; i++)\n#define per(i, m, n) for (int i = m; i >= n; i--)\n\nconst int MAXN = 1e6 + 5;\nconst int LOGN = 31;\nconst int MAXV = MAXN * LOGN;\n\nint n, k, trie_size;\nint cnt[MAXV], trie[MAXV][2];\n\nvoid add(int x) {\n    int v = 0;\n    cnt[v]++;\n\n    per(i, 30, 0) {\n        int bit = (x >> i) & 1;\n        if (trie[v][bit] == -1) {\n            assert(trie_size < MAXV - 1);\n            trie[v][bit] = ++trie_size;\n        }\n        v = trie[v][bit];\n        cnt[v]++;\n    }\n}\n\nint calc(int x) {\n    auto get_cnt = [](int v) { return v == -1 ? 0 : cnt[v]; };\n\n    int cur = 0;\n    int v = 0;\n    int ans = 0;\n\n    per(i, 30, 0) {\n        if (v == -1) break;\n\n        int bit = (x >> i) & 1;\n        if ((cur | (1 << i)) >= k) {\n            ans += get_cnt(trie[v][bit ^ 1]);\n            v = trie[v][bit];\n        } else {\n            v = trie[v][bit ^ 1];\n            cur |= (1 << i);\n        }\n    }\n    if (cur >= k) \n        ans += get_cnt(v);\n\n    return ans;\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(0); cout.tie(0);\n\n    cin >> n >> k;\n    memset(trie, -1, sizeof trie);\n    \n    add(0);\n    int s = 0;\n    ll ans = 0;\n    rep(i, 1, n) {\n        int x;\n        cin >> x;\n        s ^= x;\n        ans += calc(s);\n        add(s);\n    }\n\n    cout << ans << endl;\n    \n    return 0;\n}\n"
}