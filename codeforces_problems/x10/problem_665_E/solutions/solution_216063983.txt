{
    "id": 216063983,
    "contestId": 665,
    "creationTimeSeconds": 1690533632,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 665,
        "index": "E",
        "name": "Beautiful Subarrays",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "data structures",
            "divide and conquer",
            "strings",
            "trees"
        ]
    },
    "author": {
        "contestId": 665,
        "members": [
            {
                "handle": "fll"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461164400
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define fi first\r\n#define se second\r\n#define all(x) begin(x), end(x)\r\n\r\nusing LL = long long;\r\nusing PII = pair<int, int>;\r\nusing PLI = pair<LL, int>;\r\nusing ULL = unsigned long long;\r\n\r\nconst int inf = 2000000000;\r\nconst int mod = 998244353;\r\n\r\nconst array<int, 2> dir[4] = {{0, -1}, {0, 1}, {-1, 0}, {1, 0}};\r\n\r\nstruct Trie{\r\n    int cnt;\r\n    Trie *next[2];\r\n    \r\n    Trie(){\r\n        cnt = 0;\r\n        memset(next, 0, sizeof(next));\r\n    }  \r\n};\r\n\r\nvoid solve(){\r\n    \r\n    int n, k;\r\n    cin >> n >> k;\r\n    \r\n    vector<int> a(n);\r\n    \r\n    for(int i = 0; i < n; ++i){\r\n        cin >> a[i];\r\n    }\r\n    \r\n    Trie *root = new Trie();\r\n    \r\n    auto add = [&](int x) -> void {\r\n        auto now = root;\r\n        for(int i = 2; i >= 0; --i){\r\n            int b = x >> i & 1;\r\n            if(!now->next[b]){\r\n                now->next[b] = new Trie();\r\n            } \r\n            now = now->next[b];\r\n            now->cnt ++;\r\n        }  \r\n    };\r\n    \r\n    \r\n    auto query = [&](int x) -> int {\r\n        auto now = root;\r\n        int res = 0;\r\n        for(int i = 2; i >= 0 && now; --i){\r\n            int b = x >> i & 1;\r\n            if(k >> i & 1){\r\n                if(now->next[b])\r\n                    res += now->next[b]->cnt;\r\n                now = now->next[b ^ 1];\r\n            }else{\r\n                now = now->next[b];\r\n            }\r\n        }\r\n        return res;\r\n    };\r\n    \r\n    int sum = 0;\r\n\r\n    LL ans = 0;\r\n    for(int i = 0; i < n; ++i){\r\n        sum ^= a[i];\r\n        ans += i - query(sum);\r\n        if(sum >= k)    ans ++;\r\n        add(sum);    \r\n    }\r\n    \r\n    cout << ans << endl;\r\n    \r\n}\r\n\r\n\r\nint main(){\r\n\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n\t\r\n    // int t;\r\n    // for(cin >> t; t; --t){\r\n        // solve();\r\n    // }\r\n    \r\n    solve();\r\n\r\n    return 0;\r\n}\r\n"
}