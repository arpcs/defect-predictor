{
    "id": 205382504,
    "contestId": 883,
    "creationTimeSeconds": 1683772489,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 883,
        "index": "I",
        "name": "Photo Processing",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "dp"
        ]
    },
    "author": {
        "contestId": 883,
        "members": [
            {
                "handle": "yiyiyize"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1508573100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 2764800,
    "source": "//\r\n// Created by wangyancheng02 on 2023/5/11.\r\n//\r\n# include<iostream>\r\n# include<cstring>\r\n# include<algorithm>\r\n# include<vector>\r\n#define IOS ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n\r\nusing namespace std;\r\nusing ll = long long;\r\nconst int N = 300010;\r\nbool f[N];\r\nint a[N];\r\nint n,k;\r\n\r\nint C[N];\r\nint lowbit(int x){\r\n    return x & -x;\r\n}\r\nint query(int x){\r\n    if(x < 1) return -1;\r\n    int res = 0;\r\n    for(;x;x-=lowbit(x)){\r\n        res += C[x];\r\n    }\r\n    return res;\r\n}\r\nvoid modify(int x){\r\n    for(;x<=n;x+= lowbit(x)){\r\n        C[x] += 1;\r\n    }\r\n}\r\n// \u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u4f18\u5316dp\r\nbool check(int mid){\r\n\r\n    fill(C,C + n + 1,0);\r\n\r\n    for(int l=1,r=k;r<=n;++r){\r\n        // \u53cc\u6307\u9488 \u627e\u5230\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u4e0b\u6807\r\n        while(l <= r && a[r] - a[l] > mid){\r\n            l ++;\r\n        }\r\n        // \u6b64\u65f6\u7684l\u6ee1\u8db3\u6761\u4ef6  \u5fc5\u987b\u6ee1\u8db3l <= r - k + 1\r\n        // \u6b64\u65f6\u5728[l,r-k+1]\u533a\u95f4\u6ee1\u8db3\u6761\u4ef6\r\n        // \u90a3\u4e48\u6211\u4eec\u9700\u8981\u5224\u65ad[l-1,r-k]\u533a\u95f4\u4e00\u5b9a\u9700\u8981\u5b58\u5728\u4e00\u4e2a1  \u4f7f\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a401\u524d\u7f00\u548c\r\n        // s[r-k] - s[l-2] >= 1\u5373\u53ef   \u4f46\u662f\u5982\u679cl - 2 <= 0\u7684\u65f6\u5019\r\n        if(l <= r - k + 1){\r\n            if(l - 2 <= 0){\r\n                modify(r);\r\n            }else{\r\n                int t = query(r - k) - query(l - 2);\r\n                if(t) modify(r);\r\n            }\r\n        }\r\n    }\r\n    // \u7b2cn\u4e2a\u503c\u662f\u5426\u4e3atrue\r\n    return query(n) - query(n-1);\r\n}\r\n\r\nint main(){\r\n    IOS;\r\n    cin >> n >> k;\r\n    for(int i=1;i<=n;++i){\r\n        cin >> a[i];\r\n    }\r\n\r\n    sort(a + 1,a + n + 1);\r\n\r\n    int l = 0,r = a[n] - a[1];\r\n\r\n\r\n    while(l < r){\r\n        int mid= (l + r) >> 1;\r\n        if(check(mid)) r = mid;\r\n        else l = mid + 1;\r\n    }\r\n\r\n    printf(\"%d\\n\",l);\r\n\r\n    return 0;\r\n}"
}