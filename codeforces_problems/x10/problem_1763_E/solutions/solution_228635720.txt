{
    "id": 228635720,
    "contestId": 1763,
    "creationTimeSeconds": 1697611146,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1763,
        "index": "E",
        "name": "Node Pairs",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dp",
            "graphs",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1763,
        "members": [
            {
                "handle": "shmax_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1671460500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/*\r\n * powered by ANDRIY POPYK\r\n * in honor of MYSELF and SEGMENT DECOMPOSITION and N^(log(N)) and (Harry Potter and the Methods of Rationality) and Monkie D. Luffy\r\n*/\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n\r\n//#pragma GCC optimize(\"O3\")\r\n//#pragma GCC target(\"avx,avx2,fma\")\r\n//#pragma GCC optimization (\"unroll-loops\")\r\n//#pragma GCC target(\"avx,avx2,sse,sse2,sse3,sse4,popcnt\")\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n#define int long long\r\n#define float long double\r\n#define elif else if\r\n#define endl \"\\n\"\r\n#define mod 1000000007\r\n#define pi acos(-1)\r\n#define eps 0.000000001\r\n#define inf 1000'000'000'000'000'000LL\r\n#define FIXED(a) cout << fixed << setprecision(a)\r\n#define all(x) x.begin(), x.end()\r\n#define rall(x) x.rbegin(), x.rend()\r\n#define time_init auto start = std::chrono::high_resolution_clock::now()\r\n#define time_report                                       \\\r\n    auto end = std::chrono::high_resolution_clock::now(); \\\r\n    std::cout << std::chrono::duration_cast<std::chrono::milliseconds>(end - start).count() << \" ms\" << endl\r\n#define debug(x) \\\r\n    { cerr << #x << \" = \" << x << endl; }\r\n#define len(x) (int) x.size()\r\n#define sqr(x) ((x) * (x))\r\n#define cube(x) ((x) * (x) * (x))\r\n#define bit(x, i) (((x) >> (i)) & 1)\r\n#define set_bit(x, i) ((x) | (1LL << (i)))\r\n#define clear_bit(x, i) ((x) & (~(1LL << (i))))\r\n#define toggle_bit(x, i) ((x) ^ (1LL << (i)))\r\n#define low_bit(x) ((x) & (-(x)))\r\n#define count_bit(x) __builtin_popcountll(x)\r\n#define srt(x) sort(all(x))\r\n#define rsrt(x) sort(rall(x))\r\n#define mp make_pair\r\n#define maxel(x) (*max_element(all(x)))\r\n#define minel(x) (*min_element(all(x)))\r\n#define maxelpos(x) (max_element(all(x)) - x.begin())\r\n#define minelpos(x) (min_element(all(x)) - x.begin())\r\n#define sum(x) (accumulate(all(x), 0LL))\r\n#define product(x) (accumulate(all(x), 1LL, multiplies<int>()))\r\n#define gcd __gcd\r\n#define lcm(a, b) ((a) / gcd(a, b) * (b))\r\n#define rev(x) (reverse(all(x)))\r\n#define shift_left(x, k) (rotate(x.begin(), x.begin() + k, x.end()))\r\n#define shift_right(x, k) (rotate(x.rbegin(), x.rbegin() + k, x.rend()))\r\n#define is_sorted(x) (is_sorted_until(all(x)) == x.end())\r\n#define is_even(x) (((x) &1) == 0)\r\n#define is_odd(x) (((x) &1) == 1)\r\n#define pow2(x) (1LL << (x))\r\n\r\nstruct custom_hash {\r\n    static uint64_t splitmix64(uint64_t x) {\r\n        // http://xorshift.di.unimi.it/splitmix64.c\r\n        x += 0x9e3779b97f4a7c15;\r\n        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n        return x ^ (x >> 31);\r\n    }\r\n\r\n    size_t operator()(uint64_t x) const {\r\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n        return splitmix64(x + FIXED_RANDOM);\r\n    }\r\n};\r\n\r\ntemplate<typename T>\r\nusing min_heap = priority_queue<T, vector<T>, greater<T>>;\r\ntemplate<typename T>\r\nusing max_heap = priority_queue<T, vector<T>, less<T>>;\r\ntemplate<typename T>\r\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\ntemplate<typename T>\r\nusing ordered_multiset = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\ntemplate<typename T>\r\nusing matrix = vector<vector<T>>;\r\ntemplate<typename T>\r\nusing graph = vector<vector<T>>;\r\nusing hashmap = gp_hash_table<int, int, custom_hash>;\r\n\r\ntemplate<typename T>\r\nvector<T> vect(int n, T val) {\r\n    return vector<T>(n, val);\r\n}\r\n\r\ntemplate<typename T>\r\nvector<vector<T>> vect(int n, int m, T val) {\r\n    return vector<vector<T>>(n, vector<T>(m, val));\r\n}\r\n\r\ntemplate<typename T>\r\nvector<vector<vector<T>>> vect(int n, int m, int k, T val) {\r\n    return vector<vector<vector<T>>>(n, vector<vector<T>>(m, vector<T>(k, val)));\r\n}\r\n\r\ntemplate<typename T>\r\nvector<vector<vector<vector<T>>>> vect(int n, int m, int k, int l, T val) {\r\n    return vector<vector<vector<vector<T>>>>(n, vector<vector<vector<T>>>(m, vector<vector<T>>(k, vector<T>(l, val))));\r\n}\r\n\r\ntemplate<typename T>\r\nmatrix<T> new_matrix(int n, int m, T val) {\r\n    return matrix<T>(n, vector<T>(m, val));\r\n}\r\n\r\ntemplate<typename T>\r\ngraph<T> new_graph(int n) {\r\n    return graph<T>(n);\r\n}\r\n\r\ntemplate<class T, class S>\r\ninline bool chmax(T &a, const S &b) {\r\n    return (a < b ? a = b, 1 : 0);\r\n}\r\n\r\ntemplate<class T, class S>\r\ninline bool chmin(T &a, const S &b) {\r\n    return (a > b ? a = b, 1 : 0);\r\n}\r\n\r\nusing i8 = int8_t;\r\nusing i16 = int16_t;\r\nusing i32 = int32_t;\r\nusing i64 = int64_t;\r\nusing i128 = __int128_t;\r\nusing u8 = uint8_t;\r\nusing u16 = uint16_t;\r\nusing u32 = uint32_t;\r\nusing u64 = uint64_t;\r\nusing u128 = __uint128_t;\r\n\r\ntemplate<typename T>\r\nusing vec = vector<T>;\r\n\r\nsigned main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n    int p;\r\n    cin >> p;\r\n    vec<int> dp(p + 1, inf);\r\n    dp[0] = 0;\r\n    for (int i = 1; i <= p; i++) {\r\n        for (int j = 1; j <= i; j++) {\r\n            if (i - j * (j - 1) / 2 >= 0)\r\n                chmin(dp[i], dp[i - j * (j - 1) / 2] + j);\r\n            else\r\n                break;\r\n        }\r\n    }\r\n    cout << dp[p] << \" \" << dp[p] * (dp[p] - 1) / 2 - p << endl;\r\n\r\n}"
}