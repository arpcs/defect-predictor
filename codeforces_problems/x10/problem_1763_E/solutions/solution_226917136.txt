{
    "id": 226917136,
    "contestId": 1763,
    "creationTimeSeconds": 1696615423,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1763,
        "index": "E",
        "name": "Node Pairs",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dp",
            "graphs",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1763,
        "members": [
            {
                "handle": "sans.undertale"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1671460500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 126259200,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nvector<pair<int,int>> rah;\nint dp[20001][700][2];\nbool determined[20001][700];\npair<int,int> grr(int target, int onnode){\n    if (target==0){\n        return {0,0};\n    }\n    if (determined[target][onnode] != 0){\n        return {dp[target][onnode][0], dp[target][onnode][1]};\n    }\n    for (int i = 0; i <= onnode; i++){\n        if (rah[i].first > target){\n            break;\n        }\n        if (!determined[target][onnode]){\n            determined[target][onnode] = true;\n            dp[target][onnode][0] = grr(target-rah[i].first,i).first + rah[i].second;\n            dp[target][onnode][1] = grr(target-rah[i].first,i).first*rah[i].second+grr(target-rah[i].first,i).second;\n        } else{\n            if (dp[target][onnode][0] > grr(target-rah[i].first,i).first + rah[i].second){\n                dp[target][onnode][0] = grr(target-rah[i].first,i).first + rah[i].second;\n                dp[target][onnode][1] = grr(target-rah[i].first,i).first*rah[i].second+grr(target-rah[i].first,i).second;\n            } else if (dp[target][onnode][0] == grr(target-rah[i].first,i).first + rah[i].second){\n                dp[target][onnode][1] = max((int) dp[target][onnode][1],grr(target-rah[i].first,i).first*rah[i].second+grr(target-rah[i].first,i).second);\n            }\n        }\n    }\n    return {dp[target][onnode][0], dp[target][onnode][1]};\n\n}\nint main(){\n    int n; cin >> n;\n    int current = 2;\n    while (current*(current-1)/2 <= n){\n        rah.push_back({(current-1)*current/2, current});\n        current+=1;\n    }\n    cout << grr(n, rah.size()-1).first << \" \" <<grr(n, rah.size()-1).second;\n}"
}