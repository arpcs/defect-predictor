{
    "id": 146049220,
    "contestId": 856,
    "creationTimeSeconds": 1644663673,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 856,
        "index": "C",
        "name": "Eleventh Birthday",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ]
    },
    "author": {
        "contestId": 856,
        "members": [
            {
                "handle": "namcartoon06"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1505050500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 353280000,
    "source": "#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\nconst int mod=998244353;\r\nint dp1[2001][1001][11],dp2[2001][1001][11],n,a[2001],visited1[2001][1001][11],visited2[2001][1001][11];\r\nlong long fa[2001],ef,of;\r\nvector <int> e,o;\r\nvoid init(){\r\n    for (int i=0;i<=n;i++)\r\n        for (int j=0;j<=n/2;j++)\r\n            for (int k=0;k<11;k++)\r\n                visited1[i][j][k]=dp1[i][j][k]=visited2[i][j][k]=dp2[i][j][k]=0;\r\n    e.clear();\r\n    o.clear();\r\n}\r\nint d(int x){\r\n    int cnt=0;\r\n    while (x>0){\r\n        cnt++;\r\n        x/=10;\r\n    }\r\n    return cnt;\r\n}\r\nint sum(int x){\r\n    int s=1,res=0;\r\n    while (x>0){\r\n        res+=(x%10)*s;\r\n        s=-s;\r\n        x/=10;\r\n    }\r\n    return res*(-s);\r\n}\r\nint f(int i, int p, int x){\r\n    if (p<0)\r\n        return 0;\r\n    if (i==-1)\r\n        return (!p&&!x);\r\n    if (visited1[i][p][x])\r\n        return dp1[i][p][x];\r\n    visited1[i][p][x]=1;\r\n    return dp1[i][p][x]=(f(i-1,p-1,(x+11-o[i])%11)+f(i-1,p,(x+o[i])%11))%mod;\r\n}\r\nint f2(int i, int p, int x){\r\n    if (p<0)\r\n        return 0;\r\n    if (i==-1)\r\n        return (!p&&!x);\r\n    if (visited2[i][p][x])\r\n        return dp2[i][p][x];\r\n    visited2[i][p][x]=1;\r\n    return dp2[i][p][x]=(f2(i-1,p-1,(x+11-e[i])%11)+f2(i-1,p,(x+e[i])%11))%mod;\r\n}\r\nvoid solve(){\r\n    init();\r\n    cin >> n;\r\n    for (int i=0;i<n;i++){\r\n        cin >> a[i];\r\n        if (d(a[i])&1)\r\n            o.push_back(sum(a[i]));\r\n        else\r\n            e.push_back(sum(a[i]));\r\n    }\r\n    ef=fa[e.size()];\r\n    of=(fa[(o.size()+1)/2]*fa[o.size()-(o.size()+1)/2])%mod;\r\n    if (o.empty()){\r\n        int x=0;\r\n        for (int i:e)\r\n            x=(x+i)%11;\r\n        if (x){\r\n            cout << 0 << '\\n';\r\n            return;\r\n        }\r\n        cout << ef << '\\n';\r\n        return;\r\n    }\r\n    if (e.empty()){\r\n        cout << (of*f(o.size()-1,(o.size()+1)/2,0))%mod << '\\n';\r\n        return;\r\n    }\r\n    int res=0;\r\n    for (int i=0;i<11;i++){\r\n        int fo=(of*f(o.size()-1,(o.size()+1)/2,i))%mod,fe=0;\r\n        for (int j=0;j<=e.size();j++){\r\n            int val=(fa[j]*fa[e.size()-j])%mod;\r\n            fe+=(1LL*val*f2(e.size()-1,j,(11-i)%11))%mod;\r\n            fe%=mod;\r\n        }\r\n        res+=(fo*fe)%mod;\r\n        res%=mod;\r\n    }\r\n    cout << res << '\\n';\r\n}\r\nint main(){\r\n    ios_base::sync_with_stdio(NULL);cin.tie(nullptr);\r\n    fa[0]=1;\r\n    for (int i=1;i<=2000;i++)\r\n        fa[i]=(fa[i-1]*i)%mod;\r\n    int t;\r\n    cin >> t;\r\n    while (t--)\r\n        solve();\r\n}\r\n"
}