{
    "id": 199948291,
    "contestId": 1663,
    "creationTimeSeconds": 1680267882,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1663,
        "index": "A",
        "name": "Who Tested?",
        "type": "PROGRAMMING",
        "tags": [
            "*special",
            "expression parsing",
            "trees"
        ]
    },
    "author": {
        "contestId": 1663,
        "members": [
            {
                "handle": "curio1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1648823700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "//****************************Template Begins****************************//\r\n\r\n// Header Files\r\n#include<bits/stdc++.h>\r\n#include<iostream>\r\n#include<iomanip>\r\n#include<algorithm>\r\n#include<vector>\r\n#include<utility>\r\n#include<set>\r\n#include<unordered_set>\r\n#include<list>\r\n#include<iterator>\r\n#include<deque>\r\n#include<queue>\r\n#include<stack>\r\n#include<set>\r\n#include<bitset>\r\n#include<random>\r\n#include<map>\r\n#include<unordered_map>\r\n#include <numeric>\r\n#include<stdio.h>\r\n#include<complex>\r\n#include<math.h>\r\n#include<cstring>\r\n#include<chrono>\r\n#include<string>\r\n#include \"ext/pb_ds/assoc_container.hpp\"\r\n#include \"ext/pb_ds/tree_policy.hpp\"\r\n// Header Files End\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\ntemplate<class T>\r\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update> ;\r\n\r\ntemplate<class key, class value, class cmp = std::less<key>>\r\nusing ordered_map = tree<key, value, cmp, rb_tree_tag, tree_order_statistics_node_update>;\r\n// find_by_order(k)  returns iterator to kth element starting from 0;\r\n// order_of_key(k) returns count of elements strictly smaller than k;\r\ntemplate <class T>\r\nusing ordered_set =\r\n    tree<T, null_type, std::less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\ntemplate <class T>\r\nistream &operator>>(istream &stream, vector<T> &v) {\r\n\tfor (int i = 0; i < (int)v.size(); i++) stream >> v[i];\r\n\treturn stream;\r\n}\r\ntemplate <class T1, class T2>\r\nistream &operator>>(istream &stream, pair<T1, T2> &p) {\r\n\treturn stream >> p.first >> p.second;\r\n}\r\ntemplate <class T>\r\nostream &operator<<(ostream &stream, const vector<T> &v) {\r\n\tfor (int i = 0; i < (int)v.size(); i++) stream << v[i] << ' ';\r\n\tstream << '\\n';\r\n\treturn stream;\r\n}\r\ntemplate <class T1, class T2>\r\nostream &operator<<(ostream &stream, const pair<T1, T2> &pair) {\r\n\treturn stream << pair.first << ' ' << pair.second;\r\n}\r\n\r\n#define sn ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\r\n#define ll long long\r\n#define umap unordered_map\r\n#define uset unordered_set\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define all(v) (v).begin(),(v).end()\r\n#define all1(v) (v).begin()+1,(v).end()\r\n#define allr(v) (v).rbegin(),(v).rend()\r\n#define allr1(v) (v).rbegin()+1,(v).rend()\r\n#define sortall(v) sort(all(v))\r\ntypedef pair<int, int> pii;\r\ntypedef vector<int> vi;\r\ntypedef vector<ll> vll;\r\ntypedef pair<ll, ll> pll;\r\n#define sz(x) (ll)x.size()\r\n#define pb push_back\r\n#define pob pop_back()\r\n#define mkp make_pair\r\n#define fo(i,a,b) for(ll i=a;i<=b;i++)\r\n#define inf 1000000000000000005\r\n#define f first\r\n#define s second\r\n#define py cout<<\"YES\"<<\"\\n\"\r\n#define pn cout<<\"NO\"<<\"\\n\"\r\n#define mod 1000000007\r\n#define endl '\\n'\r\ntemplate<typename T, typename T1>T amax(T &a, T1 b) {if (b > a)a = b; return a;}\r\ntemplate<typename T, typename T1>T amin(T &a, T1 b) {if (b < a)a = b; return a;}\r\n\r\n\r\nll inv(ll i) {if (i == 1) return 1; return (mod - ((mod / i) * inv(mod % i)) % mod) % mod;}\r\n\r\nll mod_mul(ll a, ll b) {a = a % mod; b = b % mod; return (((a * b) % mod) + mod) % mod;}\r\n\r\nll mod_add(ll a, ll b) {a = a % mod; b = b % mod; return (((a + b) % mod) + mod) % mod;}\r\n\r\nll gcd(ll a, ll b) { if (b == 0) return a; return gcd(b, a % b);}\r\n\r\nll ceil_div(ll a, ll b) {return a % b == 0 ? a / b : a / b + 1;}\r\n\r\nll pwr(ll a, ll b) {a %= mod; ll res = 1; while (b > 0) {if (b & 1) res = res * a % mod; a = a * a % mod; b >>= 1;} return res;}\r\n\r\nll binpow(ll a, ll b) {if (b == 0) {return 1;} ll res = binpow(a, b / 2); if (b % 2) {return res * res * a;} else {return res * res;}}\r\n\r\n//---Check---//\r\nll highestPowerof2(ll n) { ll p = (ll)log2(n);   return (ll)pow(2, p);}\r\nbool isPowerOfTwo(int n) { if (n == 0)   return false;   return (ceil(log2(n)) == floor(log2(n)));}\r\nbool isPerfectSquare(ll x) {if (x >= 0) {ll sr = sqrt(x); return (sr * sr == x);} return false;}\r\nbool isPrime(ll n) {if (n <= 1)return false; if (n <= 3)return true; if (n % 2 == 0 || n % 3 == 0)return false; for (int i = 5; i * i <= n; i = i + 6)if (n % i == 0 || n % (i + 2) == 0)return false; return true;}\r\n\r\n//---Compare---//\r\nbool comparator(const pair<ll, ll> &a, const pair<ll, ll> &b) {if (a.first != b.first) {return a.first < b.first;} return a.second > b.second;}\r\n\r\n//---Bits---//\r\nstring decToBinary(int n) {string s = \"\"; int i = 0; while (n > 0) {s = to_string(n % 2) + s; n = n / 2; i++;} return s;}\r\nll binaryToDecimal(string n) {string num = n; ll dec_value = 0; int base = 1; int len = num.length(); for (int i = len - 1; i >= 0; i--) {if (num[i] == '1')dec_value += base; base = base * 2;} return dec_value;}\r\nll countSetBits(ll n) { ll count = 0;  while (n) { count += n & 1; n >>= 1;  }  return count;}\r\n\r\n \r\n// --GCD-- //\r\nint gcd(int a, int b) { if (b == 0) { return abs(a); } return gcd(b, a % b); }\r\n \r\n//-- LCM --//\r\nint lcm(int a, int b) { return (a / gcd(a, b)) * b; }\r\n \r\nstruct DSU\r\n{\r\n\tint n;\r\n\tvi p;\r\n\tvi size;\r\n\tDSU(int N)\r\n\t{\r\n\t\tn = N;\r\n\t\tp.assign(n + 1, -1);\r\n\t\tsize.assign(n + 1, 1);\r\n\t\tfor (int i = 0; i <= n; i++)p[i] = i;\r\n\t}\r\n\tint Find(int i)\r\n\t{\r\n\t\tif (p[i] == i)return i;\r\n\t\treturn p[i] = Find(p[i]);\r\n\t}\r\n\tvoid Merge(int a, int b) // b ko a me Merge\r\n\t{\r\n\t\ta = Find(a), b = Find(b);\r\n\t\tif (a != b)\r\n\t\t{\r\n\t\t\tp[b] = a;\r\n\t\t\tsize[a] += size[b];\r\n\t\t}\r\n\t}\r\n};\r\n// -- Roots -- //\r\nll findRoots(ll a, ll b, ll c)\r\n{\r\n\tll d = b * b - 4 * a * c;\r\n\tdouble sqrt_val = sqrt(abs(d));\r\n\tll ans;\r\n\tif (d > 0) {\r\n\t\tif ( (double)(-b + sqrt_val) / (2 * a) > 0)\r\n\t\t{\r\n\t\t\tans = (double)(-b + sqrt_val) / (2 * a);\r\n\t\t\treturn ans;\r\n\t\t}\r\n\t\tif ( (double)(-b - sqrt_val) / (2 * a) > 0)\r\n\t\t{\r\n\t\t\tans = (double)(-b - sqrt_val) / (2 * a);\r\n\t\t\treturn ans;\r\n\t\t}\r\n\r\n\t}\r\n\telse if (d == 0) {\r\n\t\tif ( -(double)b / (2 * a) > 0) {\r\n\t\t\treturn ans = -(double)b / (2 * a);\r\n\t\t}\r\n\t}\r\n\r\n\treturn ans;\r\n}\r\n//---Miscellaneous---//\r\nstring removeLeadingZeros(string str) {const regex pattern(\"^0+(?!$)\"); str = regex_replace(str, pattern, \"\"); return str;}\r\n//****************************************************Template Ends*************************************************************************************************************************************************//\r\n\r\nvoid solve() {\r\n\tcout<<\"Bucketpotato\"<<'\\n';\r\n}\r\n\r\nint main() {\r\n\tsn;\r\n#ifndef ONLINE_JUDGE\r\n\t// for getting input from input.txt\r\n\tfreopen(\"inputf.txt\", \"r\", stdin);\r\n\t// for writing output to output.txt\r\n\tfreopen(\"outputf.txt\", \"w\", stdout);\r\n#endif\r\n\t// int TESTS = 1;\r\n\t// cin >> TESTS;\r\n\t// for (int i = 1; i <= TESTS; ++i) {\r\n\t// \t//cout << \"Case #\" << i << \": \";\r\n\t// \tsolve();\r\n\r\n\t// }\r\n\tsolve();\r\n\treturn 0;\r\n}\r\n"
}