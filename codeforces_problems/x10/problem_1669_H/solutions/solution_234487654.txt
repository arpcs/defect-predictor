{
    "id": 234487654,
    "contestId": 1669,
    "creationTimeSeconds": 1701020302,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1669,
        "index": "H",
        "name": "Maximal AND",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "bitmasks",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1669,
        "members": [
            {
                "handle": "ASLEH"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1650551700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<iostream>\r\n#include<vector>\r\n//  n! <=> ceil((powl((n/Ei),n))*sqrtl(2*pi*n));\r\n//  n!! <=> normal factorial but we skip every second number\r\n//  EX : 9!! ==> 9 * 7 * 5 * 3 * 1\r\nusing namespace std;\r\nusing ll = long long ;\r\nconst double pi = acos(-1) ;\r\nconst double Ei = 2.718281828;\r\nint search(int number , int size , vector<int> array ) {\r\n    int in = 0 ;\r\n    for(int i = size / 2 ; i >= 1 ; i /= 2 ) {\r\n        while( array[ in + i ] <= number && in + i < size )\r\n        in += i , cout << in << \"\\n\"  ;\r\n    }\r\n    if( array[in] == number ) {\r\n        return true ;\r\n    }\r\n    return false ;\r\n}\r\nlong long MaxSumSubArray(vector<int> array , int size ) {\r\n    long long sum = 0 , ans = 0 ;\r\n    for(int i = 0 ; i < size ; ++ i ) {\r\n        ans = max ( (ll) array[i] , ans + array[i] ) ;\r\n        sum = max( sum , ans ) ;\r\n    }\r\n    return sum ;\r\n}\r\nvoid ShiftLeft(vector<char> &array , int size , int ind ) {\r\n    for(int i = ind ; i < size ; ++ i ) {\r\n        array[i] = array[ i + 1 ] ;\r\n    }\r\n}\r\nvoid solve() {\r\n    ll n , k ; cin >> n >> k ;\r\n    vector<ll> v(n) ;\r\n    for(int i = 0 ; i < n ; ++ i )\r\n    cin >> v[i] ;\r\n    vector<int> bit(32) ;\r\n    for(int i = 0 ; i <= 30 ; ++ i ) {\r\n        for(auto x : v ){\r\n            bit[i] += ( ( x >> i ) & 1 ) ;\r\n        }\r\n    }\r\n    for(int i = 30 ; i >= 0 ; i -- ) {\r\n        ll y = n - bit[i] ;\r\n        if ( y == 0 )continue ;\r\n        if( y <= k ) {\r\n            for(int j = 0 ; j < n ; ++ j ) {\r\n                v[j] |= ( 1 << i ) ;\r\n            }\r\n            k -= y ;\r\n        }\r\n    }\r\n    ll ans = v[0] ;\r\n    for(int i = 1 ; i < n ; ++ i )\r\n    ans &= v[i] ;\r\n    cout << ans << \"\\n\" ;\r\n}\r\nsigned main()\r\n{\r\n    ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);\r\n    int t  = 1 ;  cin >> t ;\r\n    while( t -- ) solve() ;\r\n}"
}