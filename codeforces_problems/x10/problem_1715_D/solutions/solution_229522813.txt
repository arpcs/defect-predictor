{
    "id": 229522813,
    "contestId": 1715,
    "creationTimeSeconds": 1698132511,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1715,
        "index": "D",
        "name": "2+ doors",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 1900,
        "tags": [
            "2-sat",
            "bitmasks",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1715,
        "members": [
            {
                "handle": "yela"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1661006100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 91,
    "timeConsumedMillis": 312,
    "memoryConsumedBytes": 12288000,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\n//#define int long long\ntypedef long double ld;\ntypedef long long ll;\ntypedef unsigned long long ull;\n#define pb push_back\n#define F first\n#define S second\n#define mp make_pair\n#define sz(x)(int) x.size()\n#define ins insert\n#define speed ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr)\n#define rep(i, a, b) for (int i = a; i < b; i++)\n#define pf push_front\n#define pb push_back\n#define all(x) x.begin(), x.end()\n#define pii pair < int, int >\n#define pll pair < ll, ll >\n#define vi vector < int >\n#define vll vector < long long >\n#define vpii vector < pair < int, int >>\n#define vpll vector < pair < long long, long long >>\n#define debug cerr << \"OK\\n\";\n\nmt19937 bruh(chrono::steady_clock::now().time_since_epoch().count());\nmt19937_64 rofl(chrono::steady_clock::now().time_since_epoch().count());\n\nconst int inf = 1e9 + 100;\nconst ll INF = (ll)1e18;\nconst ll INF1 = (ll)1e14 + 1;\nconst int N = (int)2e5 + 5;\nconst int mod = (ll)1e9 + 7;\nconst int mod1 = (ll)1e9 + 9;\nconst ll MAX = (ll)1e6 + 5;\nconst ll P = 300007;\nconst int K = 800;\n\nll binpow(ll a, ll n) {\n    if (n == 0) return 1;\n    if (n == 1) return (a % mod);\n    ll r = binpow(a, n / 2);\n    if (n & 1) return (((r * r) % mod) * a) % mod;\n    return (r * r) % mod;\n}\n\nvoid setIO(string s) {\n    freopen((s + \".in\").c_str(), \"r\", stdin);\n    freopen((s + \".out\").c_str(), \"w\", stdout);\n}\n\nint dx[4] = {\n    0,\n    -1,\n    0,\n    1\n};\n\nint dy[4] = {\n    1,\n    0,\n    -1,\n    0\n};\n\nll add(ll a, ll b) {\n    return (((a + b) % mod) + mod) % mod;\n}\n\nll mul(ll a, ll b) {\n    return (a * b) % mod;\n}\n\nvector<pii> g[N];\nint a[N], n, q;\n\nvoid solve() {\n    cin >> n >> q;\n    for (int i = 1; i <= q; i++) {\n        int u, v, x;\n        cin >> u >> v >> x;\n        g[u].pb({v, x});\n        g[v].pb({u, x});\n    }\n    for (int i = 1; i <= n; i++) {\n        a[i] = (1 << 30) - 1;\n    }\n    for (int k = 0; k < 30; k++) {\n        for (int i = 1; i <= n; i++) {\n            for (auto [j, X] : g[i]) {\n                int x = (X >> k) & 1;\n                if (x == 0) {\n                    if (((a[i] >> k) & 1))\n                    a[i] ^= (1 << k);\n                    if (((a[j] >> k) & 1))\n                    a[j] ^= (1 << k);\n                }\n            }\n            \n        }\n        for (int i = 1; i <= n; i++) {\n            if (!((a[i] >> k) & 1))continue;\n            bool bad = 0;\n            for (auto [j, X] : g[i]) {\n                int x = (X >> k) & 1;\n                if (x == 1) {\n                    if (!((a[j] >> k) & 1) || i == j) {\n                        bad = 1;\n                        break;\n                    }\n                }\n            }\n            if (!bad) {\n                if ((a[i] >> k) & 1) {\n                    a[i] ^= (1 << k);\n                }\n            }\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        if (sz(g[i]) == 0) a[i] = 0;\n        cout << a[i] << \" \";\n    }\n}\n\nsigned main() {\n    speed;\n    int T = 1;\n    //cin >> T;\n    for (int i = 1; i <= T; i++) {\n        solve();\n    }\n    #ifdef ONPC\n        cerr << endl << \"finished in \" << clock() * 1.0 / CLOCKS_PER_SEC << \" sec\" << endl;\n    #endif\n    return 0;\n}\n\n"
}