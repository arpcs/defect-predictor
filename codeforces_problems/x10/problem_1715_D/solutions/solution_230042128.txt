{
    "id": 230042128,
    "contestId": 1715,
    "creationTimeSeconds": 1698421578,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1715,
        "index": "D",
        "name": "2+ doors",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 1900,
        "tags": [
            "2-sat",
            "bitmasks",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1715,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1661006100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 91,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 4403200,
    "source": "#include <iostream>\n#include <cstring>\n#include <algorithm>\n\nusing namespace std;\n\nconst int N = 1e5 + 10, M = N * 2;\nint n, m;\nint h[N], e[M], w[M], ne[M], idx;\nint a[N], mx[N], d[N], q[N];\n\nvoid add(int a, int b, int c) {\n    e[idx] = b, w[idx] = c, ne[idx] = h[a], h[a] = idx ++ ;\n}\n\nvoid topsort() {\n    int hh = 0, tt = -1;\n    for (int i = 1; i <= n; i ++ )\n        if (!d[i]) q[ ++ tt] = i;\n    while (hh <= tt) {\n        int x = q[hh ++];\n        for (int i = h[x]; ~i; i = ne[i]) {\n            int j = e[i], b = w[i];\n            for (int k = 0; k < 30; k ++ )\n                if ((b >> k & 1) && !(a[x] >> k & 1))\n                    if (!(mx[j] >> k & 1)) a[x] |= (1 << k);\n        }\n        for (int i = h[x]; ~i; i = ne[i]) {\n            int j = e[i], b = w[i], go = 0;\n            for (int k = 0; k < 30; k ++ )\n                if ((b >> k & 1) && !(a[x] >> k & 1)) go |= (1 << k);\n            a[j] |= go;\n            if ( -- d[j] == 0) q[ ++ tt] = j;\n        }\n    }\n}\n\nint main() {\n    scanf(\"%d%d\", &n, &m);\n    memset(h, -1, sizeof h);\n    for (int i = 1; i <= n; i ++ ) mx[i] = (1 << 30) - 1;\n    while (m -- ) {\n        int u, v, c;\n        scanf(\"%d%d%d\", &u, &v, &c);\n        if (u == v) {\n            a[u] = c, mx[u] &= c;\n            continue;\n        }\n        if (u > v) swap(u, v);\n        add(u, v, c);\n        d[v] ++;\n        mx[v] &= c;\n        mx[u] &= c;\n    }\n    topsort();\n    for (int i = 1; i <= n; i ++ ) printf(\"%d \", a[i]);\n    puts(\"\");\n    return 0;\n}\n\t\t \t\t \t    \t \t   \t \t\t \t  \t\t\t\t\t\t"
}