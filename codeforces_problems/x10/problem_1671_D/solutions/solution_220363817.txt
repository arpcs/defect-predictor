{
    "id": 220363817,
    "contestId": 1671,
    "creationTimeSeconds": 1692961264,
    "relativeTimeSeconds": 3964,
    "problem": {
        "contestId": 1671,
        "index": "D",
        "name": "Insert a Progression",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1671,
        "members": [
            {
                "handle": "EasonLiang"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1692957300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\nconst int inf = 0x3f3f3f3f;\r\n\r\nvoid solve () {\r\n    int n, x; scanf (\"%d%d\", &n, &x);\r\n\r\n    vector<int> a (n + 1);\r\n    ll tot = 0, ans = inf;\r\n\r\n    for (int i = 1; i <= n; ++i) {\r\n        scanf (\"%d\", &a[i]);\r\n\r\n        if (i == 1) continue;\r\n\r\n        tot += abs (a[i] - a[i - 1]);\r\n    }\r\n\r\n    ans = min (ans, x - 1ll + abs (x - a[1]));\r\n    ans = min (ans, x - 1ll + abs (1 - a[1]));\r\n    ans = min (ans, x - 1ll + abs (x - a[n]));\r\n    ans = min (ans, x - 1ll + abs (1 - a[n]));\r\n    ans += tot;\r\n\r\n    int mn[2], mx[2];\r\n\r\n    auto wkmn = [=] (int i) {\r\n        if (!i) return inf;\r\n        return - abs (a[i] - a[i + 1]) + abs (1 - a[i]) + abs (1 - a[i + 1]);\r\n    };\r\n\r\n    auto wkmx = [=] (int i) {\r\n        if (!i) return inf;\r\n        return - abs (a[i] - a[i + 1]) + abs (x - a[i]) + abs (x - a[i + 1]);\r\n    };\r\n\r\n    for (int i = 1; i < n; ++i) {\r\n        int d = abs (a[i] - a[i + 1]);\r\n        ans = min (ans, tot + x - 1 + abs (1 - a[i]) + abs (x - a[i + 1]) - d);\r\n        ans = min (ans, tot + x - 1 + abs (x - a[i]) + abs (1 - a[i + 1]) - d);\r\n\r\n        ll wmn = wkmn (i), wmx = wkmx (i);\r\n\r\n        if (wmn < wkmn (mn[0]))\r\n            mn[1] = mn[0], mn[0] = i;\r\n        else if (wmn < wkmn (mn[1]))\r\n            mn[1] = i;\r\n\r\n        if (wmx < wkmx (mx[0]))\r\n            mx[1] = mx[0], mx[0] = i;\r\n        else if (wmx < wkmx (mx[1]))\r\n            mx[1] = i;\r\n    }\r\n\r\n    if (mn[0] != mx[0])\r\n        ans = min (ans, tot + wkmn (mn[0]) + wkmx (mx[0]));\r\n    else\r\n        ans = min (ans, tot + wkmn (mn[0]) + wkmx (mx[1])),\r\n        ans = min (ans, tot + wkmn (mn[1]) + wkmx (mx[0]));\r\n    \r\n    ans = min (ans, tot + wkmn (mn[0]) + abs (x - a[1]));\r\n    ans = min (ans, tot + wkmn (mn[0]) + abs (x - a[n]));\r\n    ans = min (ans, tot + wkmx (mx[0]) + abs (1 - a[1]));\r\n    ans = min (ans, tot + wkmx (mx[0]) + abs (1 - a[n]));\r\n    ans = min (ans, tot + abs (x - a[1]) + abs (1 - a[n]));\r\n    ans = min (ans, tot + abs (1 - a[1]) + abs (x - a[n]));\r\n\r\n    printf (\"%lld\\n\", ans); ///\r\n}\r\n\r\nint main () {\r\n    int t = 1;\r\n    scanf (\"%d\", &t);\r\n    while (t--) solve ();\r\n    return 0;\r\n}"
}