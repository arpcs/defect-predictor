{
    "id": 223819176,
    "contestId": 1671,
    "creationTimeSeconds": 1695031027,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1671,
        "index": "D",
        "name": "Insert a Progression",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1671,
        "members": [
            {
                "handle": "SidharthSura"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1650638100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\nint main(){\r\n   ios_base::sync_with_stdio(false);\r\n   cin.tie(NULL);\r\n   int t;  cin>>t;\r\n   while(t--){\r\n      int n , x ;    cin>>n>>x;\r\n      vector<int> v(n);\r\n      for(auto &it : v) cin>>it;\r\n      map<int, vector<int> > m1;\r\n      map<int, int> maxi , mini;\r\n      for(int i=0;i<n-1;i++){\r\n         if( v[i] != v[i+1]){\r\n            m1[min(v[i] , v[i+1])].push_back(max(v[i+1] , v[i]));\r\n            m1[-max(v[i] , v[i+1])].push_back(-min(v[i+1] , v[i]));\r\n         } \r\n      }\r\n      for(auto it : m1){\r\n         if(it.first < 0){\r\n            if(!maxi[-it.first]) maxi[-it.first] = -it.first;\r\n            for(auto it2 : it.second){\r\n               if(!maxi[-it2]) maxi[-it2] = maxi[-it.first];        \r\n            }\r\n         }\r\n         else{\r\n            if(!mini[it.first])  mini[it.first] = it.first;\r\n            for(auto it2 : it.second){\r\n               if(!mini[it2]) mini[it2] = mini[it.first];\r\n            }\r\n         }\r\n      }\r\n      if(maxi[1] == 0)  maxi[1]=1;\r\n      int start = maxi[1] , fin=-1;\r\n      auto it = mini.lower_bound(x);\r\n      if(it != mini.end()){\r\n         fin = (it)->second;\r\n      }\r\n      if(fin == -1)  fin = x;\r\n      int ans=0;\r\n      for(int i=0;i<n-1;i++)  ans+=abs(v[i+1] - v[i]);\r\n      if(start >= fin){cout<<ans<<\"\\n\";}\r\n      else{\r\n         int min_ans = 100000000;\r\n         for(int i=0;i<n-1;i++){\r\n            min_ans = min(min_ans , min(abs(v[i] - start) + abs(v[i+1] - fin) , abs(v[i] - fin) + abs(v[i+1] - start)) - abs(v[i+1] -v[i]) + abs(fin - start));\r\n         }\r\n         min_ans = min({min_ans , min({abs(v[0] - fin) , abs(v[0]-start) , abs(v[n-1] - fin) , abs(v[n-1] - start)}) + fin - start});  \r\n         cout<<min_ans + ans<<\"\\n\";\r\n      }\r\n   }\r\n}"
}