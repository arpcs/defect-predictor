{
    "id": 215114378,
    "contestId": 1295,
    "creationTimeSeconds": 1690075890,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1295,
        "index": "E",
        "name": "Permutation Separation",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "data structures",
            "divide and conquer"
        ]
    },
    "author": {
        "contestId": 1295,
        "members": [
            {
                "handle": "SoiMae"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1580308500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 264,
    "memoryConsumedBytes": 11468800,
    "source": "#include<bits/stdc++.h>\r\n#define ls (u << 1)\r\n#define rs (ls | 1)\r\n#define mid (L + R >> 1)\r\n#define INT long long\r\n#define pii pair<INT, INT>\r\n#define x first\r\n#define y second\r\n#define inf 0x3f3f3f3f\r\n#define INF 0x3f3f3f3f3f3f3f3f\r\nusing namespace std;\r\nconst int NN = 2e5 + 100;\r\nINT a[NN], b[NN], chk[NN], n, m, k, pre[NN], pos[NN], ans = inf;\r\nchar s[NN];\r\nINT mn[NN], fg[NN];\r\nvoid push_up(INT u){\r\n\tmn[u] = min(mn[ls], mn[rs]);\r\n}\r\nvoid push_down(INT u, INT L, INT R){\r\n\tmn[ls] += fg[u];\r\n\tmn[rs] += fg[u];\r\n\tfg[ls] += fg[u];\r\n\tfg[rs] += fg[u];\r\n\tfg[u] = 0;\r\n}\r\nvoid update(INT u, INT L, INT R, INT st, INT ed, INT x){\r\n\tif(L >= ed || R <= st) return;\r\n\tif(L >= st && R <= ed){\r\n\t\tmn[u] += x;\r\n\t\tfg[u] += x;\r\n\t\treturn;\r\n\t}\r\n\tpush_down(u, L, R);\r\n\tupdate(ls, L, mid, st, ed, x);\r\n\tupdate(rs, mid, R, st, ed, x);\r\n\tpush_up(u);\r\n}\r\nINT calc(INT u, INT L, INT R, INT st, INT ed){\r\n\tif(L >= ed || R <= st) return inf;\r\n\tif(L >= st && R <= ed){\r\n\t\treturn mn[u];\r\n\t}\r\n\tpush_down(u, L, R);\r\n\treturn min(calc(ls, L, mid, st, ed), calc(rs, mid, R, st, ed));\r\n}\r\nvoid build(INT u, INT L, INT R){\r\n\tif(L + 1 == R){\r\n\t\tmn[u] = pre[L];\r\n\t\treturn;\r\n\t}\r\n\tbuild(ls, L, mid);\r\n\tbuild(rs, mid, R);\r\n\tpush_up(u);\r\n}\r\nvoid solve(){\r\n\tfor(INT i = 1; i <= n; i++) pos[a[i]] = i;\r\n\tfor(INT i = 1; i < n; i++) pre[i] = pre[i - 1] + b[i];\r\n\tbuild(1, 1, n);\r\n\tans = min(ans, mn[1]);\r\n\tfor(INT i = 1; i <= n; i++){\r\n\t\tupdate(1, 1, n, 1, pos[i], b[pos[i]]);\r\n\t\tupdate(1, 1, n, pos[i], n, -b[pos[i]]);\r\n\t\tans = min(ans, calc(1, 1, n, 1, n));\r\n\t}\r\n}\r\nint main(){\r\n#ifndef ONLINE_JUDGE\r\n\tfreopen(\"in.in\", \"r\", stdin);\r\n\tfreopen(\"out.out\", \"w\", stdout);\r\n#endif\r\n\tcin >> n;\r\n\tfor(INT i = 1; i <= n; i++) scanf(\"%lld\", &a[i]);\r\n\tfor(INT i = 1; i <= n; i++) scanf(\"%lld\", &b[i]);\r\n\tsolve();\r\n\tprintf(\"%lld\\n\", ans);\r\n}\r\n\r\n"
}