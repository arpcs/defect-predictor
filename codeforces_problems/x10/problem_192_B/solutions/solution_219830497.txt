{
    "id": 219830497,
    "contestId": 192,
    "creationTimeSeconds": 1692641725,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 192,
        "index": "B",
        "name": "Walking in the Rain",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1100,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    "author": {
        "contestId": 192,
        "members": [
            {
                "handle": "MohamedElsayedRabiee"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1338132600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    vector<int> tiles(n);\r\n    for (int i = 0; i < n; ++i) {\r\n        cin >> tiles[i];\r\n    }\r\n\r\n    vector<int> days_available(n);\r\n    days_available[0] = tiles[0]; // Tile 1 is available for 'tiles[0]' days\r\n    days_available[1] = min(tiles[0], tiles[1]); // Tile 2 is available for the minimum of 'tiles[0]' and 'tiles[1]' days\r\n\r\n    for (int i = 2; i < n; ++i) {\r\n        days_available[i] = min(tiles[i], max(days_available[i - 1], days_available[i - 2]));\r\n    }\r\n\r\n    cout << days_available[n - 1] - 1 << endl; // Subtract 1 because the day of destruction is not counted\r\n\r\n    return 0;\r\n}\r\n"
}