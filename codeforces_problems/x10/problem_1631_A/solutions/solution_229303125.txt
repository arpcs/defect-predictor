{
    "id": 229303125,
    "contestId": 1631,
    "creationTimeSeconds": 1697985826,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1631,
        "index": "A",
        "name": "Min Max Swap",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 1631,
        "members": [
            {
                "handle": "OneSadKid"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1643294100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#ifndef CONTESTSMTH_HEADER_H\n#define CONTESTSMTH_HEADER_H\n\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace std;\n\ntemplate <typename K, typename V = __gnu_pbds::null_type>\nusing tree = __gnu_pbds::tree<K, V, less<K>, __gnu_pbds::rb_tree_tag, __gnu_pbds::tree_order_statistics_node_update>;\ntemplate <typename K, typename V = __gnu_pbds::null_type>\nusing htable = __gnu_pbds::gp_hash_table<K, V>;\nusing llong = long long;\nauto isz = [](const auto& c) { return int(c.size()); };\n#ifdef VSE\nmt19937 rng(0);\n#else\nmt19937 rng((size_t) make_shared<char>().get());\n#endif\n\n#endif //CONTESTSMTH_HEADER_H\n\n#ifndef CONTESTSMTH_UTILS_H\n#define CONTESTSMTH_UTILS_H\n\n\n\ntemplate <typename T>\nauto make_vector(T val, size_t d) {\n    return vector<T>(d, val);\n}\n\ntemplate <typename T, typename ...Ds>\nauto make_vector(T val, size_t d, Ds... ds) {\n    return vector<decltype(make_vector(val, ds...))>(d, make_vector(val, ds...));\n}\n\nauto min(auto a, auto b) {\n    return a < b ? a : b;\n}\n\nauto max(auto a, auto b) {\n    return a < b ? b : a;\n}\n\ntemplate <typename T>\nvoid relmax(T& a, const T& b) {\n    a = max(a, b);\n}\n\ntemplate <typename T>\nvoid relmin(T& a, const T& b) {\n    a = min(a, b);\n}\n\nvoid massert(bool c) {\n#ifdef VSE\n    assert(c);\n#else\n    if (!c) {\n        this_thread::sleep_for(chrono::hours(1));\n    }\n#endif\n}\n\n#ifdef VSE\n#define dolocal(...) {__VA_ARGS__ ;}\n#else\n#define dolocal(...)\n#endif\n\ntemplate<typename T>\nvector<T> read_vector(int size) {\n    vector<T> v(size);\n    for (int i = 0; i < size; i++) {\n        cin >> v[i];\n    }\n    return v;\n}\n\n#endif //CONTESTSMTH_UTILS_H\n\n\nstruct Solver {\n    void solve() {\n        int n;\n        cin >> n;\n        auto a = read_vector<int>(n);\n        auto b = read_vector<int>(n);\n        for (int i = 0; i < n; i++) {\n            if (a[i] < b[i]) {\n                swap(a[i], b[i]);\n            }\n        }\n        cout << (*max_element(begin(a), end(a))) * (*max_element(begin(b), end(b))) << \"\\n\";\n    }\n};\n\nint main(int argc, char** argv) {\n#ifdef VSE\n    if (argc == 2) assert(freopen(argv[1], \"r\", stdin));\n#endif\n    ios_base::sync_with_stdio(false); cin.tie(0);\n    int t = 1;\n    cin >> t;\n    for (int it = 1; it <= t; it++) {\n        Solver().solve();\n    }\n}"
}