{
    "id": 236207155,
    "contestId": 1674,
    "creationTimeSeconds": 1701955928,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1674,
        "index": "D",
        "name": "A-B-C Sort",
        "type": "PROGRAMMING",
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "implementation",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1674,
        "members": [
            {
                "handle": "vignesh_viggu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1651502100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nusing ll = long long;\r\n#define pb push_back\r\n#define ff first\r\n#define ss second\r\n#define vi vector <ll>\r\n#define vvi vector <vi>\r\n#define pii pair<ll, ll>\r\n#define ppi pair<pii, ll>\r\n#define vii vector<pii>\r\n#define mii map<ll, ll>\r\n#define mci map<char, ll>\r\n#define miv map<int, vi>\r\n#define mis map<int, set<int>>\r\n#define setbits(n) __builtin_popcount(n)\r\n#define all(v) (v).begin(), (v).end()\r\n#define yes cout<<\"YES\"<<endl\r\n#define no cout<<\"NO\"<<endl\r\n#define endl \"\\n\"\r\n#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL)\r\n#define fo(x,y) for(int i=x;i<y;i++)\r\n#define fo1(x,y) for(int i=x;i<y;i++)\r\n#define fo2(x,y) for(int j=x;j<y;j++)\r\n#define show2(a, b) cout<<a<<' '<<b<<endl\r\n#define show3(a, b, c) cout<<a<<' '<<b<<' '<<c<<endl\r\n#define show(arr) for (auto i:arr) cout<<i<<' '; \r\n#define Endl endl\r\n#define read(arr) for(auto &x : arr) cin>>x;\r\n#define print(arr) for(auto &x: arr) cout<<x<<\" \"; cout<<endl;\r\n#define sortv(arr) sort(arr.begin(), arr.end())\r\n#define sorta(arr) sort(arr.begin(), arr.end())\r\n#define revers(arr) reverse(arr.begin(), arr.end())\r\ndouble pie = 3.141592653589793238;\r\n ll mod=1e9+7;\r\n ll fact[100005];\r\nll gcd(ll a,ll b)\r\n{\r\n    if(b==0)\r\n    return a;\r\n    return (gcd(b,a%b));\r\n}\r\nll pw(ll x,ll n,ll M)\r\n{\r\n    ll result=1;\r\n    while(n>0)\r\n    {\r\n        if(n % 2 ==1)\r\n            result=(result * x)%M;\r\n        x=(x*x)%M;\r\n        n=n/2;\r\n    }\r\n    return result;\r\n}\r\n \r\nll inverse(ll A,ll M)\r\n{\r\n    return pw(A,M-2,M) % M;\r\n}\r\nll ncr(ll n,ll r)\r\n{\r\n    if(n < r) return 0; \r\n    ll v  = (fact[n] * inverse(fact[n-r],mod)) % mod;\r\n    v = (v * inverse(fact[r],mod)) % mod;\r\n    return v;\r\n}\r\nbool cmp(const pair<int, int> &x, const pair<int, int> &y) {\r\n    if (x.first != y.first)\r\n        return (x.first < y.first);\r\n    else\r\n        return (x.second > y.second);\r\n}\r\nll pwr(ll x,ll n,ll mo)\r\n{\r\n    ll res=1;\r\n    if(n==0)\r\n        return 1;\r\n    if(n==1)\r\n        return (x%mo);\r\n    if(n%2)\r\n        res=x%mo;\r\n    ll temp=pwr(x,n/2,mo);\r\n    return (res*((temp*temp)%mo))%mo;\r\n}\r\nll modInverse(ll a, ll m)\r\n{\r\n    return pwr(a,m-2,m);\r\n}\r\nll nCrModp(ll n, ll r, ll p)\r\n{\r\n    if (r > n - r)\r\n        r = n - r;\r\n    ll C[r + 1];\r\n    memset(C, 0, sizeof(C));\r\n    C[0] = 1;\r\n    for (ll i = 1; i <= n; i++) {\r\n        for (ll j = min(i, r); j > 0; j--)\r\n            C[j] = (C[j] + C[j - 1]) % p;\r\n    }\r\n    return C[r];\r\n}\r\nll add(ll a, ll b) {\r\n    a += b;\r\n    if (a >= mod) a -= mod;\r\n    if (a < 0) a += mod;\r\n    return a;\r\n}\r\n \r\nll mul(ll a, ll b) {\r\n    return a * 1ll * b % mod;\r\n}\r\nvector<ll> SieveOfEratosthenes(ll n)\r\n{\r\n    bool prime[n + 1];\r\n    vector<ll> prie;\r\n    memset(prime, true, sizeof(prime));\r\n \r\n    for (int p = 2; p * p <= n; p++)\r\n    {\r\n        if (prime[p] == true)\r\n        {\r\n            for (int i = p * p; i <= n; i += p)\r\n                prime[i] = false;\r\n        }\r\n    }\r\n    for (int p = 2; p <= n; p++)\r\n        if (prime[p])\r\n            prie.push_back(p);\r\n    return prie;\r\n}\r\n \r\nbool is_prime(ll n) {\r\n    if (n == 1) {\r\n        return false;\r\n    }\r\n \r\n    int i = 2;\r\n    while (i*i <= n) {\r\n        if (n % i == 0) {\r\n            return false;\r\n        }\r\n        i += 1;\r\n    }\r\n    return true;\r\n}\r\n// ll vis[100005]={0};\r\n// vi adj[100005];\r\n// ll col[100005];\r\n// queue<int> q;\r\n \r\nll powe(ll n,ll m){\r\n    ll result = 1;\r\n    while(m--){\r\n        result*=n;\r\n    }\r\n \r\n    return result;\r\n}\r\n \r\n// vector<ll> memo(31,-1);\r\n// void call(){\r\n//     for(ll i=0;i<31;i++){\r\n//        memo[i] = powe(2,i);\r\n//     }\r\n// }\r\n \r\n//main solve block------------------------------------------------------------------------------\r\n//check constraints clearly\r\n//if graph think about relation between edges and nodes\r\n//observe the constraints carefully\r\n\r\nvoid solve()\r\n{\r\n    ll n;\r\n    cin >> n;\r\n    vector<ll> v(n);\r\n    read(v);\r\n    bool check = true;\r\n    ll prev = v[0];\r\n    ll rem = -1;\r\n    if(n==1){\r\n        yes;\r\n        return;\r\n    }\r\n    if(prev > v[1]){\r\n        rem = 1;\r\n    }else if(prev < v[i]){\r\n        rem = -1;\r\n    }else{\r\n        rem = 0;\r\n    }\r\n    prev = v[1];\r\n    for(ll i=2;i<n;i++){\r\n       if(prev > v[i] && rem == 1){\r\n           check = false;\r\n           break;\r\n       }\r\n       if(prev < v[i] && rem == 0){\r\n           check = false;\r\n           break;\r\n       }\r\n\r\n       if(prev > v[i]){\r\n         rem = 1;\r\n         prev = v[i];\r\n       }else if(prev < v[i]){\r\n        rem = -1;\r\n        prev = v[i];\r\n       }\r\n       else{\r\n        rem = 0;\r\n        prev = v[i];\r\n       }\r\n    }\r\n\r\n    if(check) yes;\r\n    else no;\r\n}\r\n//ends here----------------------------------------------------------------------------------------\r\n \r\n \r\n int32_t main(){ \r\n    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n    #ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\",\"r\",stdin);\r\n    freopen(\"output.txt\",\"w\",stdout);\r\n     #endif\r\n    ll t;\r\n    cin>>t;\r\n    while(t--)\r\n        solve();\r\n    return 0;\r\n}"
}