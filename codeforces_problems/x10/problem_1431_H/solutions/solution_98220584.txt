{
    "id": 98220584,
    "contestId": 1431,
    "creationTimeSeconds": 1605199667,
    "relativeTimeSeconds": 7967,
    "problem": {
        "contestId": 1431,
        "index": "H",
        "name": "Rogue-like Game",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "*special",
            "brute force",
            "greedy",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1431,
        "members": [
            {
                "handle": "Son"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1605191700
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 187,
    "memoryConsumedBytes": 8601600,
    "source": "import sun.font.TrueTypeFont\nimport java.util.*\n\nfun main(args : Array<String> ){\n    var tc = 1\n    var ans : Array < Int > = Array( tc ) { i -> 0 }\n    for ( i in 0..tc-1 ){\n        ans[i] = readInput()\n    }\n    println(ans.joinToString(\"\\n\"))\n}\n\nfun abs( a : Int ) : Int {\n    if ( a < 0 ) return a * -1\n    return a\n}\n\nvar C : Array < Array < Int > > = Array(1505){ i -> Array < Int > (1505) { j -> 0} }\nvar arr : Array < Int > = Array(1505) { i -> 0 }\nvar A : Array < Int > = Array(1505) { i -> 0 }\nvar B : Array < Int > = Array(1505) { i -> 0 }\nvar k : Int = 0\nvar n : Int = 0\nvar m : Int = 0\n\nfun readInput() : Int {\n    var lst = readline().split(' ')\n    n = lst[0].toInt()\n    m = lst[1].toInt()\n    k = lst[2].toInt()\n    lst = readline().split(' ')\n    A = Array ( n ) { i -> lst[i].toInt()}\n    lst = readline().split(' ')\n    B = Array ( m ) { i -> lst[i].toInt()}\n    for ( i in 0..n-1 ){\n        lst = readline().split(' ')\n        arr = Array( m ) { i -> lst[i].toInt() }\n        for ( j in 0..m-1 ){\n            C[i][j] = arr[j]\n        }\n    }\n\n    C[0][0] += k\n\n    var la = 0\n    var lb = 0\n    var ra = 0\n    var rb = 0\n    var pq : PriorityQueue < Int > = PriorityQueue < Int > ()\n    var turn = 0\n    var sum : Long = 0L\n    sum += C[0][0]\n    turn += 1\n\n    while ( ra + 1 < n && A[ra+1] <= sum ){\n        ra += 1\n        for ( b in 0..rb ){\n            pq.add(-C[ra][b])\n        }\n    }\n\n    while ( rb + 1 < m && B[rb+1] <= sum ){\n        rb += 1\n        for ( a in 0..ra ){\n            pq.add(-C[a][rb])\n        }\n    }\n\n    while ( ra < n - 1 || rb < m - 1 ){\n        sum -= pq.peek()\n        pq.remove()\n        turn += 1\n        while ( ra + 1 < n && A[ra+1] <= sum ){\n            ra += 1\n            for ( b in 0..rb ){\n                pq.add(-C[ra][b])\n            }\n        }\n\n        while ( rb + 1 < m && B[rb+1] <= sum ){\n            rb += 1\n            for ( a in 0..ra ){\n                pq.add(-C[a][rb])\n            }\n        }\n    }\n    return turn\n}\n\nfun readline() : String{\n    var line = readLine()\n    return line.toString()\n}"
}