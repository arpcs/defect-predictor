{
    "id": 193576441,
    "contestId": 212,
    "creationTimeSeconds": 1676368595,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 212,
        "index": "E",
        "name": "IT Restaurants",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1500,
        "tags": [
            "dfs and similar",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 212,
        "members": [
            {
                "handle": "bkifhr6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1342450800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 716800,
    "source": "// https://www.luogu.com.cn/problem/CF212E\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 5005;\nint n, head[N], pos, sz[N], ans;\nstruct Edge\n{\n\tint u, v, nxt;\n} e[N << 1];\nbool dp[N], res[N];\n \nvoid addEdge(int u, int v)\n{\n\te[++pos] = {u, v, head[u]};\n\thead[u] = pos;\n}\n \nvoid dfs(int fa, int u)\n{\n\tsz[u] = 1;\n\tvector<int> v;\n\tfor (int i = head[u]; i; i = e[i].nxt)\n\t{\n\t\tif (e[i].v == fa)\n\t\t\tcontinue;\n\t\tdfs(u, e[i].v);\n\t\tsz[u] += sz[e[i].v];\n\t\tv.push_back(sz[e[i].v]);\n\t}\n\tv.push_back(n - sz[u]);\n\tmemset(dp, 0, sizeof(dp));\n\tdp[0] = true;\n\tfor (auto &&i : v)\n\t\tfor (int j = n - 2; j >= i; j--)\n\t\t\tdp[j] |= dp[j - i];\n\tfor (int i = 1; i < n - 1; i++)\n\t{\n\t\tif (!res[i] && dp[i])\n\t\t\tans++;\n\t\tres[i] |= dp[i];\n\t}\n}\n \nint main()\n{\n#ifndef ONLINE_JUDGE\n\tfreopen(\"data.in\", \"r\", stdin);\n\t// freopen(\"data.out\", \"w\", stdout);\n#endif\n\tcin >> n;\n\tint u, v;\n\tfor (int i = 1; i < n; i++)\n\t{\n\t\tscanf(\"%d%d\", &u, &v);\n\t\taddEdge(u, v), addEdge(v, u);\n\t}\n\tdfs(0, 1);\n\tcout << ans << endl;\n\tfor (int i = 1; i < n - 1; i++)\n\t\tif (res[i])\n\t\t\tprintf(\"%d %d\\n\", i, n - 1 - i);\n\treturn 0;\n}\n \t\t\t  \t   \t\t \t\t \t  \t\t  \t\t \t \t"
}