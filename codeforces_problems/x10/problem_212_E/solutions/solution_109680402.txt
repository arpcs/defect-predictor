{
    "id": 109680402,
    "contestId": 212,
    "creationTimeSeconds": 1615446234,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 212,
        "index": "E",
        "name": "IT Restaurants",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1500,
        "tags": [
            "dfs and similar",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 212,
        "members": [
            {
                "handle": "dharmicksai"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1342450800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 204800,
    "source": "#include<bits/stdc++.h>\r\n#define MOD 1000000007\r\n#define IO ios_base::sync_with_stdio(false);cin.tie(NULL);\r\n#define forf(i,a,b) for(i=a;i<b;i++)\r\n#define forr(i,a,b) for(i=a;i>b;i--)\r\n#define mp make_pair\r\n#define f first\r\n#define s second\r\n#define pb(x) push_back(x)\r\ntypedef  long long  int ll;\r\ntypedef std::vector<int> vi;\r\n\r\n#define input(vec,a,b) for(ll i =a;i<b;i++) cin>>vec[i]\r\n#define print(vec,a,b) for(ll i=a;i<b;i++) cout<<vec[i]<<\" \" ;cout<<endl;\r\n#define all(a) a.begin(),a.end()\r\nusing namespace std;\r\nvi v[1001];\r\nset<int> output;\r\nset<int>s,s1;\r\nvoid dfs(int parent[] , int vertice , int n ,int sum[])\r\n{\r\n          sum[vertice] = 1;\r\n         for(auto y: v[vertice])\r\n         {\r\n                  if(y==parent[vertice])\r\n                  continue;\r\n                  parent[y] = vertice;\r\n                  dfs(parent , y,n,sum);\r\n                  sum[vertice]+=sum[y];\r\n                  \r\n         }\r\n         if(sum[vertice]==1)\r\n         {\r\n                  return;\r\n         }\r\n         s.clear();\r\n         s1.clear();\r\n         s.insert(0);\r\n         for(auto y:v[vertice])\r\n         {\r\n                  ll xc = sum[y];\r\n                  if(y==parent[vertice])\r\n                  {\r\n                           xc=n-sum[vertice];\r\n                           // cout<<xc<<\" \";\r\n                  }\r\n                  for(auto z: s)\r\n                  {\r\n                           if(z+xc>=n-1)\r\n                           break;\r\n                           if(s.count(z+xc)==0)\r\n                           {\r\n                                    s1.insert(z+xc);\r\n                           }\r\n                  }\r\n                  for(auto z:s1)\r\n                  {\r\n                           if(z<=0)\r\n                           continue;\r\n                           s.insert(z);\r\n                  }\r\n                  s1.clear();\r\n         }\r\n         for(auto y: s)\r\n         {\r\n                  output.insert(y);\r\n         }\r\n}\r\n\r\n\r\nvoid solve(){\r\n            int n,i,x,y;\r\n            cin>>n;\r\n            for(i=0;i<n-1;i++)\r\n            {\r\n                     cin>>x>>y;\r\n                     x--;\r\n                     y--;\r\n                     v[x].pb(y);\r\n                     v[y].pb(x);\r\n            }\r\n            int parent[n]={0};\r\n            int sum[n] = {0};\r\n            parent[0]=-1;\r\n            dfs(parent,0,n,sum);\r\n            output.erase(0);\r\n            cout<<output.size()<<endl;\r\n            for(auto y:output)\r\n            {\r\n                     \r\n                     cout<<y<<\" \"<<n-y-1<<endl;\r\n            }\r\n            \r\n}\r\n\r\nint main()\r\n{\r\n      IO;\r\n      ll t=1;\r\n//       cin>>t;\r\n\r\n\r\n      while(t--)\r\n      {\r\n\r\n          solve();\r\n      }\r\n    return 0;\r\n}"
}