{
    "id": 146857735,
    "contestId": 212,
    "creationTimeSeconds": 1645205098,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 212,
        "index": "E",
        "name": "IT Restaurants",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1500,
        "tags": [
            "dfs and similar",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 212,
        "members": [
            {
                "handle": "lis05"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1342450800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#pragma GCC target(\"avx2\")\n#pragma GCC optimize(\"O3\")\n#include<bits/stdc++.h>\n#include<x86intrin.h>\nusing namespace std;\n\nconst int NMAX=5000;\nvector<int>g[NMAX+5];\nint dfs(int v,int p=-1){\n    if(g[v].size()>2)return 1;\n    for(auto u:g[v]){\n        if(u==p)continue;\n        return dfs(u,v)+1;\n    }\n    return 1;\n}\n\nsigned main(){\n    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n    int n;\n    cin>>n;\n    for(int i=1;i<n;i++){\n        int a,b;\n        cin>>a>>b;\n        g[a].push_back(b);\n        g[b].push_back(a);\n    }\n    int max_chain=0;\n    for(int i=1;i<=n;i++){\n        if(g[i].size()==1)max_chain=max(max_chain,dfs(i,-1));\n    }\n    if(max_chain==n){\n        max_chain--;\n    }\n    max_chain--;\n    set<pair<int,int>>st;\n    for(int i=1;i<=max_chain;i++)st.insert({i,n-i-1});\n    for(int i=max_chain;i>=1;i--)st.insert({n-i-1,i});\n    cout<<st.size()<<\"\\n\";\n    for(auto [a,b]:st)cout<<a<<\" \"<<b<<\"\\n\";\n}"
}