{
    "id": 91541346,
    "contestId": 212,
    "creationTimeSeconds": 1598942113,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 212,
        "index": "E",
        "name": "IT Restaurants",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1500,
        "tags": [
            "dfs and similar",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 212,
        "members": [
            {
                "handle": "SAIF_IIT-JU"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1342450800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 3174400,
    "source": "/*\r\n\r\n    author : s@if\r\n\r\n*/\r\n\r\n#include<bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n\r\n#define \t\tNIL \t\t\t-1\r\n#define\t\t \tfi\t \t\t    first\r\n#define \t\tsec \t\t\tsecond\r\n#define \t\tMAX \t\t\tINT_MAX\r\n#define\t\t\tINF \t\t\t1e9\r\n#define \t\tll \t\t\t    long long\r\n#define \t\tPI \t\t\t    acos(-1.0)\r\n#define\t\t\tMOD \t\t\t1000000007\r\n#define \t\tPLL \t\t\tpair<ll,ll>\r\n#define \t\tPII\t\t\t    pair<int,int>\r\n#define \t\tull \t\t\tunsigned long long\r\n#define \t\tFor(i,a,b) \t\tfor(int i=a;i<=(int)b;i++)\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag,\r\n            tree_order_statistics_node_update> new_data_set;\r\n\r\n//*find_by_order(k)  gives the kth element;\r\n//order_of_key(item)   gives the index(number of element strictly less than item) of item;\r\n\r\n\r\ninline int in() {int x; scanf(\"%d\", &x); return x; }\r\nbool Check(int N , int pos)\t{\treturn (bool) (N & (1<<pos));}\r\nint Set(int N, int pos) {\treturn N = N | (1<<pos);}\r\n\r\nint fx[]={+0,+0,+1,-1,-1,+1,-1,+1};    // King's move\r\nint fy[]={-1,+1,+0,+0,+1,+1,-1,-1};\r\nint hx[]={-2,-2,-1,+1,+2,+2,-1,+1};    // Knight's move\r\nint hy[]={+1,-1,+2,+2,-1,+1,-2,-2};\r\nint dx[]={+1,-1,+0,+0};\r\nint dy[]={+0,+0,+1,-1};\r\n\r\nconst int MAXN = (int)2e5+9;\r\n\r\nvector<int>adj[MAXN];\r\nset<PII>ans;\r\nvector<PII>tmp;\r\nint dp[MAXN], n;\r\n\r\nvoid dfs(int curr, int prev)\r\n{\r\n    dp[curr] = 1;\r\n    for(int i=0; i<adj[curr].size(); i++)\r\n    {\r\n        int v = adj[curr][i];\r\n        if(v!=prev){\r\n            dfs(v, curr);\r\n            dp[curr]+=dp[v];\r\n        }\r\n    }\r\n}\r\n\r\nvoid dfs2(int curr, int prev)\r\n{\r\n    int a = dp[curr]-1, b = n-a-1;\r\n    if(a>0 && b>0) tmp.push_back(PII(a, b));\r\n    for(int i=0; i<adj[curr].size(); i++)\r\n    {\r\n        int v = adj[curr][i];\r\n        if(v!=prev) dfs2(v, curr);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n/*\tfreopen(\"input.txt\",\"r\",stdin);\r\n    freopen(\"output.txt\",\"w\",stdout);\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);  */\r\n\r\n    int i,j,k,l,m,p,q,x,y,u,v,r,tc,t;\r\n\r\n    cin>>n;\r\n    for(i=1; i<n; i++)\r\n    {\r\n        cin>>u>>v;\r\n        adj[u].push_back(v);\r\n        adj[v].push_back(u);\r\n    }\r\n\r\n    dfs(1,-1); dfs2(1,-1);\r\n\r\n    int mx = 0;\r\n\r\n    for(i=0; i<tmp.size(); i++)\r\n    {\r\n        mx = max(mx, tmp[i].fi+tmp[i].sec);\r\n    }\r\n\r\n    for(i=0; i<tmp.size(); i++)\r\n    {\r\n        if(mx==tmp[i].fi+tmp[i].sec)\r\n        {\r\n            if(tmp[i].fi==tmp[i].sec)\r\n                ans.insert(tmp[i]);\r\n            else{\r\n                int a = tmp[i].fi, b = tmp[i].sec;\r\n                ans.insert(PII(min(a,b),max(a,b)));\r\n                ans.insert(PII(max(a,b),min(a,b)));\r\n            }\r\n        }\r\n    }\r\n\r\n    cout<<ans.size()<<endl;\r\n    set<PII>::iterator it;\r\n    for(it = ans.begin(); it!=ans.end(); it++)\r\n    {\r\n        cout<<(*it).fi<<\" \"<<(*it).sec<<endl;\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n// read the question correctly (is y a vowel? what are the exact constraints?)\r\n// look out for SPECIAL CASES (n=1?) and overflow (ll vs int?)\r\n\r\n"
}