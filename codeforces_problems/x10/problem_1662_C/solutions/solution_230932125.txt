{
    "id": 230932125,
    "contestId": 1662,
    "creationTimeSeconds": 1698910820,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1662,
        "index": "C",
        "name": "European Trip",
        "type": "PROGRAMMING",
        "tags": [
            "dp",
            "graphs",
            "math",
            "matrices"
        ]
    },
    "author": {
        "contestId": 1662,
        "members": [
            {
                "handle": "ademik"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1650798300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 1840,
    "memoryConsumedBytes": 2662400,
    "source": "# include <bits/stdc++.h>\r\n# define TIME 1e3 * clock() / CLOCKS_PER_SEC\r\nusing std :: cin; using std :: cout; using std :: max; \r\nusing std :: min; using std :: cerr; using std :: abs; \r\nusing std :: make_pair; using std :: vector; \r\ntypedef long long i64; \r\ntypedef std :: pair < int, int > pii; \r\nconst int N = 220, Mod = 998244353; \r\ni64 n, m, ki;\r\ni64 add(i64 x, i64 y) {return x + y - (x + y >= Mod ? Mod : 0);}\r\ni64 sub(i64 x, i64 y) {return x - y + (x - y < 0 ? Mod : 0);}\r\nstruct matrix {\r\n\ti64 r, c, a[N][N];\r\n\tmatrix() {}\r\n\tmatrix(int x) {r = c = x; for(int i = 1; i <= x; i ++) for(int j = 1; j <= x; j ++) a[i][j] = (i == j);}\r\n\tmatrix(int x, int y) {r = x; c = y; memset(a, 0, sizeof(a));} \r\n\tmatrix operator *(const matrix &tmp) const {\r\n\t\tmatrix res(r, tmp.c); \r\n\t\tfor(int i = 1; i <= res.r; i ++) {\r\n\t\t\tfor(int j = 1; j <= res.c; j ++) {\r\n\t\t\t\tfor(int k = 1; k <= c; k ++) {\r\n\t\t\t\t\tres.a[i][j] = add(res.a[i][j], a[i][k] * tmp.a[k][j] % Mod);\r\n\t\t\t\t\tassert(res.a[i][j] <= Mod);  \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn res; \r\n\t}\t\r\n} f; \r\ni64 calc(i64 k)\r\n{\r\n\tif(k < 0) return 0; \r\n\tmatrix now(n + n), x = f; \r\n\twhile(k) {\r\n\t\tif(k & 1) now = now * x; \r\n\t\tx = x * x; k >>= 1;  \r\n\t}\r\n\ti64 res = 0; \r\n\tfor(int i = 1; i <= n; i ++) res = add(res, now.a[i][i]); \r\n\treturn res; \r\n}\r\nint main()\r\n{\r\n\tstd :: ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0); \r\n\tcin >>n >>m >>ki; f = matrix(2 * n, 2 * n); \r\n\tfor(int i = 1; i <= n; i ++) {\r\n\t\tf.a[i][i + n] = f.a[i + n][i] = 1; \r\n\t}\r\n\tfor(int i = 1, u, v; i <= m; i ++) {\r\n\t\tcin >>u >>v; \r\n\t\tf.a[u][v] ++; f.a[v + n][v] --;\r\n\t\tf.a[v][u] ++; f.a[u + n][u] --;  \r\n\t}\r\n\tcout <<sub(calc(ki), calc(ki - 2)) <<\"\\n\"; \r\n\treturn 0;  \r\n}"
}