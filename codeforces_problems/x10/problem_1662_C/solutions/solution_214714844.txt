{
    "id": 214714844,
    "contestId": 1662,
    "creationTimeSeconds": 1689926602,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1662,
        "index": "C",
        "name": "European Trip",
        "type": "PROGRAMMING",
        "tags": [
            "dp",
            "graphs",
            "math",
            "matrices"
        ]
    },
    "author": {
        "contestId": 1662,
        "members": [
            {
                "handle": "OIer_Chtholly"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1650798300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<cstdio>\r\n#include<cstring>\r\n #define ll long long\r\nusing namespace std;\r\n \r\nconst ll MOD=998244353,G=3,N=110,mod=998244353;\r\nll add(ll x,ll y){return x+y>=MOD?x+y-MOD:x+y;}\r\nll sub(ll x,ll y){return x>=y?x-y:x+MOD-y;}\r\n \r\nll fast_pow(ll b,ll p)\r\n{\r\n\tll ans=1;while(p){if(p&1)ans=ans*b%MOD;b=b*b%MOD;p>>=1;}\r\n\treturn ans;\r\n}\r\nll INV(ll x){return fast_pow(x,MOD-2);}\r\nll n,m,k;\r\n \r\n// struct matrix{\r\n// \tll a[N][N];\r\n// \tll *operator[](ll x){return a[x];}\r\n// \tconst ll *operator[](ll x)const{return a[x];}\r\n// \tvoid I(){\r\n// \t\tfor(ll i=0;i<n;i++)\r\n// \t\t\tfor(ll j=0;j<n;j++)a[i][j]=0;\r\n// \t\tfor(ll i=0;i<n;i++)a[i][i]=1;\r\n// \t}\r\n\t// void Zero(){memset(a,0,sizeof(a));}\r\n\t// inline matrix operator *(matrix y){\r\n\t// \tmatrix z;z.Zero();\r\n\t// \tfor(ll i=0;i<n;i++)\r\n\t// \t\tfor(ll j=0;j<n;j++)\r\n\t// \t\t\tfor(ll k=0;k<n;k++)\r\n\t// \t\t\t\tz.a[i][j]=((z.a[i][j]+a[i][k]*y.a[k][j]%mod)%mod+mod)%mod;\r\n\t// \treturn z;\r\n\t// }\r\n\t// inline matrix operator +(matrix y){\r\n\t// \tmatrix z;\r\n\t// \tfor(ll i=0;i<n;i++)\r\n\t// \t\tfor(ll j=0;j<n;j++)\r\n\t// \t\t\tz.a[i][j]=(a[i][j]+y.a[i][j]+mod)%mod;\r\n\t// \treturn z;\r\n\t// }\r\n// };\r\n\r\n\r\nstruct matrix\r\n{\r\n\tll a[120][120];\r\n\tll *operator[](ll x){return a[x];}\r\n\tconst ll *operator[](ll x)const{return a[x];}\r\n\tmatrix(){memset(a,0,sizeof(a));}\r\n\tvoid Zero(){memset(a,0,sizeof(a));}\r\n\tinline matrix operator *(matrix y){\r\n\t\tmatrix z;z.Zero();\r\n\t\tfor(ll i=0;i<n;i++)\r\n\t\t\tfor(ll j=0;j<n;j++)\r\n\t\t\t\tfor(ll k=0;k<n;k++)\r\n\t\t\t\t\tz.a[i][j]=((z.a[i][j]+a[i][k]*y.a[k][j]%mod)%mod+mod)%mod;\r\n\t\treturn z;\r\n\t}\r\n\tinline matrix operator +(matrix y){\r\n\t\tmatrix z;z.Zero();\r\n\t\tfor(ll i=0;i<n;i++)\r\n\t\t\tfor(ll j=0;j<n;j++)\r\n\t\t\t\tz.a[i][j]=(a[i][j]+y.a[i][j]+mod)%mod;\r\n\t\treturn z;\r\n\t}\r\n};\r\n\r\n\r\nstruct Matrix{\r\n\tmatrix a[2][2];\r\n\tinline Matrix operator *(Matrix y){\r\n\t\tMatrix z;z.Zero();\r\n\t\tfor(ll i=0;i<2;i++)\r\n\t\t\tfor(ll j=0;j<2;j++)\r\n\t\t\t\tfor(ll k=0;k<2;k++)\r\n\t\t\t\t\tz.a[i][j]=z.a[i][j]+(a[i][k]*y.a[k][j]);\r\n\t\treturn z;\r\n\t}\r\n};\r\n \r\nll deg[200];\r\n \r\nMatrix Qpow(Matrix x,ll y){\r\n\tMatrix z=x;\r\n\tfor(;y;y>>=1){\r\n\t\tif(y&1)z=z*x;\r\n\t\tx=x*x;\r\n\t}\r\n\treturn z;\r\n}\r\nint main()\r\n{\r\n\t\r\n\tscanf(\"%d%d%d\",&n,&m,&k);\r\n\tif(k<=2){printf(\"0\");return 0;}\r\n\tmatrix D,E,I;\r\n\tfor(ll i=1,a=0,b=0;i<=m;i++)\r\n\t{\r\n\t\tscanf(\"%d%d\",&a,&b);a--,b--;deg[a]++,deg[b]++;E[a][b]=E[b][a]=1;\r\n\t}\r\n\tfor(ll i=0;i<n;i++)I[i][i]=1;\r\n\tfor(ll i=0;i<n;i++){D[i][i]=sub(1,deg[i]);}\r\n\tmatrix SC=E*E;for(ll i=0;i<n;i++)SC[i][i]=0;\r\n\tfor(ll i=0;i<n;i++){\r\n\t\tfor(ll j=0;j<n;j++)\r\n\t\t\tprintf(\"%lld \",SC[i][j]);\r\n\t\tputs(\"\");\r\n\t}puts(\"A-----\");\r\n\tfor(ll i=0;i<n;i++){\r\n\t\tfor(ll j=0;j<n;j++)\r\n\t\t\tprintf(\"%lld \",E[i][j]);\r\n\t\tputs(\"\");\r\n\t}puts(\"E-----\");\r\n\tfor(ll i=0;i<n;i++){\r\n\t\tfor(ll j=0;j<n;j++)\r\n\t\t\tprintf(\"%lld \",D[i][j]);\r\n\t\tputs(\"\");\r\n\t}puts(\"D-----\");\r\n\tMatrix F;F.a[0][1]=D,F.a[1][1]=E,F.a[1][0]=I;\r\n\tMatrix P=F;\r\n\t// k-=2;\r\n\t// ll B=20;while(!(k&(1<<B)))B--;\r\n\t// for(ll j=B-1;j>=0;j--)\r\n\t// {\r\n\t// \tP=P*P;if(k&(1<<j))P=P*F;\r\n\t// }\r\n\t\r\n\tfor(ll i=0;i<n;i++){\r\n\t\tfor(ll j=0;j<n;j++)\r\n\t\t\tprintf(\"%lld \",P.a[0][0][i][j]);\r\n\t\tputs(\"\");\r\n\t}puts(\"00-----\");\r\n\tfor(ll i=0;i<n;i++){\r\n\t\tfor(ll j=0;j<n;j++)\r\n\t\t\tprintf(\"%lld \",P.a[0][1][i][j]);\r\n\t\tputs(\"\");\r\n\t}puts(\"01-----\");\r\n\tfor(ll i=0;i<n;i++){\r\n\t\tfor(ll j=0;j<n;j++)\r\n\t\t\tprintf(\"%lld \",P.a[1][0][i][j]);\r\n\t\tputs(\"\");\r\n\t}puts(\"10-----\");\r\n\tfor(ll i=0;i<n;i++){\r\n\t\tfor(ll j=0;j<n;j++)\r\n\t\t\tprintf(\"%lld \",P.a[1][1][i][j]);\r\n\t\tputs(\"\");\r\n\t}puts(\"11-----\");\r\n\tP=Qpow(P,k-3);\r\n\tmatrix FINAL=SC*P.a[1][1]+E*P.a[0][1];\r\n\tll ans=0;for(ll i=0;i<n;i++)ans=add(ans,FINAL[i][i]);printf(\"%lld\\n\",ans);\r\n}\r\n\r\n/*\r\ng++ test.cpp -o test -std=c++14 -Wall -fsanitize=undefined,address -DLOCAL\r\ng++ test.cpp -o test -std=c++14 -Wall -O2 -DLOCAL\r\n./test < 1.in\r\n*/"
}