{
    "id": 211839246,
    "contestId": 1062,
    "creationTimeSeconds": 1688308193,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1062,
        "index": "E",
        "name": "Company",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "data structures",
            "dfs and similar",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1062,
        "members": [
            {
                "handle": "Duck_sajin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542209700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 29286400,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define lowit(x) (x & -x)\r\n#define fre(z) freopen(z \".in\", \"r\", stdin), freopen(z \".out\", \"w\", stdout)\r\n#define sto                           \\\r\n    std::ios::sync_with_stdio(false); \\\r\n    std::cin.tie(nullptr);            \\\r\n    std::cout.tie(nullptr);\r\n\r\n#define pb push_back\r\n#define range(x) x.begin(), x.end()\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef pair<ll, ll> PII;\r\nconst int INF = 0x3f3f3f3f;\r\n\r\ninline ll read() {\r\n    char ch;\r\n    ll x = 0;\r\n    bool f = true;\r\n    for (ch = getchar(); !isdigit(ch); ch = getchar())\r\n        if (ch == '-')\r\n            f ^= f;\r\n    for (; isdigit(ch); ch = getchar())\r\n        x = (x << 3) + (x << 1) + ch - 48;\r\n    return f ? x : -x;\r\n}\r\n\r\ntemplate <int T>\r\nstruct ModInt {\r\n    const static int MD = T;\r\n    int x;\r\n    ModInt(ll x = 0)\r\n        : x(x % MD) {}\r\n    int get() { return x; }\r\n    ModInt operator+(const ModInt& that) const {\r\n        int x0 = x + that.x;\r\n        return ModInt(x0 < MD ? x0 : x0 - MD);\r\n    }\r\n    ModInt operator-(const ModInt& that) const {\r\n        int x0 = x - that.x;\r\n        return ModInt(x0 < MD ? x0 + MD : x0);\r\n    }\r\n    ModInt operator*(const ModInt& that) const {\r\n        return ModInt((long long)x * that.x % MD);\r\n    }\r\n    ModInt operator/(const ModInt& that) const {\r\n        return *this * that.inverse();\r\n    }\r\n    void operator+=(const ModInt& that) {\r\n        x += that.x;\r\n        if (x >= MD)\r\n            x -= MD;\r\n    }\r\n    void operator-=(const ModInt& that) {\r\n        x -= that.x;\r\n        if (x < 0)\r\n            x += MD;\r\n    }\r\n    void operator*=(const ModInt& that) { x = (long long)x * that.x % MD; }\r\n    void operator/=(const ModInt& that) { *this = *this / that; }\r\n    ModInt inverse() const {\r\n        int a = x, b = MD, u = 1, v = 0;\r\n        while (b) {\r\n            int t = a / b;\r\n            a -= t * b;\r\n            std::swap(a, b);\r\n            u -= t * v;\r\n            std::swap(u, v);\r\n        }\r\n        if (u < 0)\r\n            u += MD;\r\n        return u;\r\n    }\r\n    friend ostream& operator<<(ostream& os, ModInt x) {\r\n        os << x.get();\r\n        return os;\r\n    }\r\n};\r\nconst int mod = 998244353;\r\ntypedef ModInt<mod> mint;\r\n#define PrDEBUG\r\n#ifdef PrDEBUG\r\n#define DE(x) cerr << __LINE__ << \" \" << #x << \" \" << x << endl\r\n#else\r\n#define DE(x)\r\n#endif\r\n// #define ONLINE_JUDGE\r\n// #define LOCAL_DEFINE\r\n// #define ON_T\r\nconst int N = 1e5 + 10;\r\nvector<int> node[N];\r\nint dfn[N], idfn[N], top[N], sz[N], son[N], idx, dep[N], f[N];\r\nvoid dfs(int u) {\r\n    sz[u] = 1;\r\n    for (int x : node[u]) {\r\n        dep[x] = dep[u] + 1;\r\n        f[x] = u;\r\n        dfs(x);\r\n        sz[u] += sz[x];\r\n        if (sz[son[u]] < sz[x])\r\n            son[u] = x;\r\n    }\r\n}\r\nvoid dfs2(int u, int to) {\r\n    dfn[u] = ++idx;\r\n    idfn[idx] = u;\r\n    top[u] = to;\r\n    if (son[u])\r\n        dfs2(son[u], to);\r\n    for (int x : node[u])\r\n        if (x != son[u]) {\r\n            dfs2(x, x);\r\n        }\r\n}\r\nint lca(int u, int v) {\r\n    if (u > v)\r\n        swap(u, v);\r\n    if (u == 0)\r\n        return v;\r\n    while (top[u] != top[v]) {\r\n        if (dep[top[u]] < dep[top[v]])\r\n            swap(u, v);\r\n        u = f[top[u]];\r\n    }\r\n    if (dep[u] < dep[v])\r\n        swap(u, v);\r\n    return v;\r\n}\r\nstruct Node {\r\n    int v[2];\r\n    Node() {\r\n        v[0] = v[1] = 0;\r\n    }\r\n    Node(int x) {\r\n        v[0] = v[1] = x;\r\n    }\r\n    friend Node operator+(Node x, Node y) {\r\n        Node ans;\r\n        ans.v[0] = min(x.v[0], y.v[0]);\r\n        ans.v[1] = max(x.v[1], y.v[1]);\r\n        return ans;\r\n    }\r\n} tr[N << 2];\r\n#define ls o << 1\r\n#define rs o << 1 | 1\r\n#define mid (l + r >> 1)\r\nvoid build(int o, int l, int r) {\r\n    if (l == r)\r\n        return tr[o] = dfn[l], void();\r\n    build(ls, l, mid), build(rs, mid + 1, r);\r\n    tr[o] = tr[ls] + tr[rs];\r\n}\r\nNode ask(int o, int l, int r, int L, int R) {\r\n    if (l == L && r == R) {\r\n        return tr[o];\r\n    }\r\n    if (R <= mid)\r\n        return ask(ls, l, mid, L, R);\r\n    else if (mid < L)\r\n        return ask(rs, mid + 1, r, L, R);\r\n    else\r\n        return ask(ls, l, mid, L, mid) + ask(rs, mid + 1, r, mid + 1, R);\r\n}\r\nint mm[20][N];\r\nint llca(int l, int r) {\r\n    if (l > r)\r\n        return 0;\r\n    int k = __lg(r - l + 1);\r\n    return lca(mm[k][l], mm[k][r - (1 << k) + 1]);\r\n};\r\nvoid solve() {\r\n    int n = read(), q = read();\r\n    for (int i = 2; i <= n; i++)\r\n        node[read()].push_back(i);\r\n    dfs(1);\r\n    dfs2(1, 1);\r\n    build(1, 1, n);\r\n    for (int i = 1; i <= n; i++)\r\n        mm[0][i] = i;\r\n    for (int i = 1; i < 20; i++)\r\n        for (int j = 1; j + (1 << i) - 1 <= n; j++)\r\n            mm[i][j] = lca(mm[i - 1][j], mm[i - 1][j + (1 << i - 1)]);\r\n    for (int i = 1; i <= q; i++) {\r\n        int l = read(), r = read();\r\n        Node ans = ask(1, 1, n, l, r);\r\n        int out = 0, t = 1;\r\n        for (int j = 0; j < 2; j++) {\r\n            int x = idfn[ans.v[j]];\r\n            int L = llca(l, x - 1), R = llca(x + 1, r);\r\n            int res = lca(L, R);\r\n            if (dep[res] >= dep[t]) {\r\n                t = res;\r\n                out = x;\r\n            }\r\n        }\r\n        cout << out << \" \" << dep[t] << \"\\n\";\r\n    }\r\n}\r\n\r\nint main() {\r\n#ifdef ONLINE_JUDGE\r\n    // fre(\"1\");\r\n#endif\r\n    cout << fixed << setprecision(12);\r\n    int T = 1;\r\n#ifdef ON_T\r\n    T = read();\r\n#endif\r\n    for (int i = 1; i <= T; i++)\r\n        solve();\r\n        // std::cout << __cplusplus << std::endl;\r\n\r\n#ifdef LOCAL_DEFINE\r\n    cerr << \"Time elapsed: \" << 1.0 * clock() / CLOCKS_PER_SEC << \" s.\\n\";\r\n#endif\r\n    return 0;\r\n}\r\n",
    "suggested_categories": [
        "c++ programming",
        "algorithms",
        "data structures",
        "graph theory",
        "dynamic programming",
        "mathematics",
        "code optimization",
        "template metaprogramming",
        "debugging techniques",
        "competitive programming",
        "io handling",
        "code organization",
        "bit manipulation",
        "complexity analysis",
        "modular arithmetic",
        "tree traversal",
        "binary search",
        "recursion",
        "error handling",
        "performance profiling"
    ]
}