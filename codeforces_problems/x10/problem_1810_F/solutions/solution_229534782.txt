{
    "id": 229534782,
    "contestId": 1810,
    "creationTimeSeconds": 1698138815,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1810,
        "index": "F",
        "name": "M-tree",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2800,
        "tags": [
            "data structures",
            "math",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1810,
        "members": [
            {
                "handle": "discretebuffalo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1680273300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 819200,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 10;\nint a[N];\nvoid solve() {\n  int n, m, q;\n  cin >> n >> m >> q;\n  for (int i = 1; i <= n; i++) cin >> a[i];\n  multiset<int> s;\n  for (int i = 1; i <= n; i++) s.insert(a[i]);\n  while (q--) {\n    int x, y;\n    cin >> x >> y;\n    s.erase(s.find(a[x]));\n    a[x] = y;\n    s.insert(a[x]);\n    int t = ceil(1.0 * n / m);\n    int res = 0, cnt = 0;\n    for (auto it = --s.end(); cnt <= t; it--, cnt++) {\n      res = max(res, *it + cnt);\n      if (it == s.begin()) break;\n    }\n    cout << res << ' ';\n  }\n  cout << endl;\n}\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  int T;\n  cin >> T;\n  while (T--) {\n    solve();\n  }\n  return 0;\n}\n"
}