{
    "id": 232747004,
    "contestId": 1810,
    "creationTimeSeconds": 1699964174,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1810,
        "index": "F",
        "name": "M-tree",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2800,
        "tags": [
            "data structures",
            "math",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1810,
        "members": [
            {
                "handle": "accurateniobium"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1680273300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 904,
    "memoryConsumedBytes": 819200,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 2e5 + 7;\nint a[N];\nmultiset<int> st;\nint main() {\n  int t;\n  scanf(\"%d\", &t);\n  while (t--) {\n    int n, m, q;\n    cin >> n >> m >> q;\n    st.clear();\n    for (int i = 1; i <= n; i++) {\n      cin >> a[i];\n      st.insert(a[i]);\n    }\n    while (q--) {\n      int x, y;\n      cin >> x >> y;\n      st.erase(st.find(a[x]));\n      a[x] = y;\n      st.insert(a[x]);\n      int cnt = ceil(1.0 * n / m) + 1;\n      auto it = --st.end();\n      while (--cnt) {\n        it--;\n      }\n      cout << (*it) + ceil(1.0 * n / m) << \" \";\n    }\n    cout << \"\\n\";\n  }\n  return 0;\n}\n"
}