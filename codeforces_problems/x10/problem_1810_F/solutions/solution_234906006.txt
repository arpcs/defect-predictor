{
    "id": 234906006,
    "contestId": 1810,
    "creationTimeSeconds": 1701251254,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1810,
        "index": "F",
        "name": "M-tree",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2800,
        "tags": [
            "data structures",
            "math",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1810,
        "members": [
            {
                "handle": "Lazy.JPG"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1680273300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 58,
    "timeConsumedMillis": 826,
    "memoryConsumedBytes": 10444800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing ll = long long;\r\n\r\n/*\r\n\u8d2a\u5fc3\u7684\u653e\r\n\u5927\u7684\u653e\u7b2c\u4e00\u5c42 \u503c\u4f4d\u81ea\u5df1+1\r\n\u6ee1\u4e86\u653e\u4e0b\u4e00\u5c42\uff0c\u6b64\u65f6\u6ea2\u51fa\u7684\u6570\u7b49\u4ef7\u4e8e\u81ea\u8eab+1\r\n\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6a21\u62df\u4e00\u4e0b\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u53d1\u73b0\u5176\u5b9e\u548c\u6570\u4f4d\u5dee\u4e0d\u591a\uff0c\u6ee1\u8db3\u53f6\u5b50\u6570\u540e\u8fdb\u4f4d\u5373\u53ef\r\n\u6bcf\u6b21\u8fdb\u4f4d \u7b49\u4ef7\u4e8e \u53f6\u5b50\u5f80\u4e0b\u653e\r\n*/\r\n\r\nvoid solve(){\r\n\tint n, m, q;\r\n\tstd::cin >> n >> m >> q;\r\n\tstd::map<int, int> f;\r\n\tf[0] = 0;\r\n\tauto split = [&](int x){\r\n\t\tauto it = std::prev(f.upper_bound(x));\r\n\t\tf[x] = it->second;\r\n\t};\r\n\r\n\tauto add = [&](int x){\r\n\t\tsplit(x);\r\n\t\tauto it = f.find(x);\r\n\t\twhile (it->second == m - 1){\r\n\t\t\tit = f.erase(it);\r\n\t\t}\r\n\t\tif (it->first != x) f[x] = 0;\r\n\t\tsplit (it->first + 1);//\u4fdd\u8bc1\u6700\u53f3\u8fb9\u6709\u4e00\u4e2a\u7aef\u70b9\r\n\t\tit->second += 1;\r\n\t};\r\n\r\n\tauto del = [&](int x){\r\n\t\tsplit(x);\r\n\t\tauto it = f.find(x);\r\n\t\twhile (it->second == 0){\r\n\t\t\tit = f.erase(it);\r\n\t\t}\r\n\t\tif (it->first != x) f[x] = m - 1;\r\n\t\tsplit(it->first + 1);\r\n\t\tit->second -= 1;\r\n\t};\r\n\r\n\tstd::vector<int> a(n);\r\n\tfor (int i = 0; i < n; i++){\r\n\t\tstd::cin >> a[i];\r\n\t\tadd(a[i]);\r\n\t}\r\n\r\n\twhile (q--){\r\n\t\tint x, y;\r\n\t\tstd::cin >> x >> y;\r\n\t\tx--;\r\n\t\tdel(a[x]);\r\n\t\ta[x] = y;\r\n\t\tadd(a[x]);\r\n\r\n\t\t//\u5220\u63890\u6765\u4f7f\u53f6\u5b50\u662f\u6ee1\u7684\r\n\t\tdel(0);\r\n\t\t//\u627e\u5230\u7b2c\u4e00\u4e2a\u6709\u503c\u4f4d+1\r\n\t\tauto it = std::prev(f.end());\r\n\t\twhile (it != f.begin() && std::prev(it)->second == 0){\r\n\t\t\tit--;\r\n\t\t\tf.erase(std::next(it));\r\n\t\t}\r\n\t\tstd::cout << it->first << \" \\n\"[q == 0];\r\n\t\tadd(0);\r\n\t}\r\n}\r\n\r\nint main(){\r\n    std::ios::sync_with_stdio(false);\r\n    std::cin.tie(nullptr);\r\n    int t;\r\n    std::cin >> t;\r\n    while (t--){\r\n    \tsolve();\r\n    }\r\n    return 0;\r\n}"
}