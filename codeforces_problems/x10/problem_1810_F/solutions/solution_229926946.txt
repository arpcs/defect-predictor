{
    "id": 229926946,
    "contestId": 1810,
    "creationTimeSeconds": 1698349805,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1810,
        "index": "F",
        "name": "M-tree",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2800,
        "tags": [
            "data structures",
            "math",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1810,
        "members": [
            {
                "handle": "kosherquadrefiore"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1680273300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 1638400,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 2e5 + 10;\nlong long a[N];\nvoid solve() {\n  long long n, m, q;\n  cin >> n >> m >> q;\n  multiset<long long> M;\n  for (long long i = 1; i <= n; i++) {\n    cin >> a[i];\n    M.insert(a[i]);\n  }\n  while (q--) {\n    long long x, y;\n    cin >> x >> y;\n    M.erase(M.find(a[x]));\n    M.insert(y);\n    a[x] = y;\n    long long res = 0;\n    long long cnt = ceil(1.0 * n / m);\n    if (n % m == 0) cnt++;\n    long long idx = 0;\n    for (auto it = M.begin(); it != M.end(); it++) {\n      res = max(res, *it + cnt - idx / m);\n      idx++;\n    }\n    cout << res << \" \";\n  }\n  cout << '\\n';\n}\nsigned main() {\n  ios_base::sync_with_stdio(false), cin.tie(0);\n  long long t = 1;\n  cin >> t;\n  while (t--) {\n    solve();\n  }\n  return 0;\n}\n"
}