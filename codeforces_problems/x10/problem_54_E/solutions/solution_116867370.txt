{
    "id": 116867370,
    "contestId": 54,
    "creationTimeSeconds": 1621561114,
    "relativeTimeSeconds": 5614,
    "problem": {
        "contestId": 54,
        "index": "E",
        "name": "Vacuum \u0421leaner",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2700,
        "tags": [
            "geometry"
        ]
    },
    "author": {
        "contestId": 54,
        "members": [
            {
                "handle": "hpfdf"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1621555500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 94,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 512000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconstexpr int N = 1.1e4;\r\nint n;\r\n\r\nint sgn(double x) { return x < -1e-8 ? -1 : x > 1e-8 ? 1 : 0; }\r\n\r\nstruct P {\r\n    double x, y;\r\n    P() : x(0), y(0) {}\r\n    P(double x, double y) : x(x), y(y) {}\r\n\r\n    double crs(const P& a, const P& b) const {\r\n        return (a.x - x) * (b.y - y) - (a.y - y) * (b.x - x);\r\n    }\r\n\r\n    double dot(const P& a, const P& b) const {\r\n        return (a.x - x) * (b.x - x) + (a.y - y) * (b.y - y);\r\n    }\r\n\r\n    double mod() const { return hypot(x, y); }\r\n    double mod2() const { return x * x + y * y; }\r\n\r\n    P operator-(const P& a) const { return P(x - a.x, y - a.y); }\r\n\r\n} a[N * 2], o;\r\n\r\ndouble scn() {\r\n    double ans = 1e100, cur = 0;\r\n    int p = 0;\r\n    for (int i = 0; i < n; ++i) {\r\n        P u = a[i + 1] - a[i];\r\n        while (sgn(o.dot(u, a[p + 1] - a[p])) > 0) {\r\n            cur += o.crs(a[p], a[p + 1]);\r\n            ++p;\r\n        }\r\n        double l = a[i].dot(a[i + 1], a[p]);\r\n        l /= (a[i + 1] - a[i]).mod2();\r\n        P v(a[i].x + (a[i + 1].x - a[i].x) * l, a[i].y + (a[i + 1].y - a[i].y) * l);\r\n        double sa = o.crs(a[i], v) + o.crs(v, a[p]);\r\n        ans = min(ans, fabs(sa - cur));\r\n\r\n        cur -= o.crs(a[i], a[i + 1]);\r\n    }\r\n    return ans;\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin >> n;\r\n    for (int i = 0; i < n; ++i) cin >> a[i].x >> a[i].y;\r\n    if (sgn(a[0].crs(a[1], a[2])) < 0) {\r\n        reverse(a, a + n);\r\n    }\r\n\r\n    for (int i = 0; i < n; ++i) a[i + n] = a[i];\r\n\r\n    for (int i = 1; i < n; ++i) {\r\n        if (sgn(a[i].dot(a[i - 1], a[i + 1])) >= 0) {\r\n            cout << \"0\\n\";\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    double ans = scn();\r\n    for (int i = 0; i < 2 * n; ++i) a[i].x = -a[i].x;\r\n    reverse(a, a + 2 * n);\r\n    ans = min(ans, scn());\r\n    cout << setprecision(15) << fixed << ans / 2 << endl;\r\n    return 0;\r\n}"
}