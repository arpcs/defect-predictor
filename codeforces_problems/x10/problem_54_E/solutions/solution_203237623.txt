{
    "id": 203237623,
    "contestId": 54,
    "creationTimeSeconds": 1682335763,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 54,
        "index": "E",
        "name": "Vacuum \u0421leaner",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2700,
        "tags": [
            "geometry"
        ]
    },
    "author": {
        "contestId": 54,
        "members": [
            {
                "handle": "platelet"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1294733700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 1638400,
    "source": "#include <bits/stdc++.h>\r\n#define rep(i, l, r) for(int i = (l); i <= (r); i++)\r\n#define per(i, r, l) for(int i = (r); i >= (l); i--)\r\n#define mem(a, b) memset(a, b, sizeof a)\r\n#define For(i, l, r) for(int i = (l), i##e = (r); i < i##e; i++)\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define SZ(x) int(x.size())\r\n#define all(x) x.begin(), x.end()\r\n\r\ntemplate<class T> inline T& cmin(T& a, const T& b) { if(b < a) a = b; return a; }\r\ntemplate<class T> inline T& cmax(T& a, const T& b) { if(a < b) a = b; return a; }\r\n\r\nusing namespace std;\r\nusing ll = long long;\r\nusing vec = complex<double>;\r\n\r\nconst int N = 5e4 + 8;\r\n\r\nint n;\r\nvec a[N], b[N];\r\n\r\ninline int add(int a, int b) {\r\n    if((a += b) >= n) a -= n;\r\n    return a;\r\n}\r\ninline int sub(int a, int b) {\r\n    if((a -= b) < 0) a += n;\r\n    return a;\r\n}\r\ndouble solve() {\r\n    For(i, 0, n) b[i] = a[i] - a[sub(i, 1)];\r\n    double ans = 1e18, area = 0;\r\n    int j = 0;\r\n    For(i, 0, n) {\r\n        auto now = conj(b[i] / abs(b[i]));\r\n        while(1) {\r\n            auto t = b[add(j, 1)] * now;\r\n            if(real(t) < 0 || imag(t) < 0) break;\r\n            area += imag(conj(a[add(j, 1)]) * a[j]);\r\n            j = add(j, 1);\r\n        }\r\n        auto tmp = a[i] + real((a[j] - a[i]) * now) * conj(now);\r\n        cmin(ans, area + imag(conj(a[i]) * tmp) + imag(conj(tmp) * a[j]));\r\n        area -= imag(conj(a[add(i, 1)]) * a[i]);\r\n        // cout << i << ' ' << j << ' ' << ans << endl;\r\n    }\r\n    return ans * 0.5;\r\n}\r\nint main() {\r\n    cin.tie(0)->sync_with_stdio(0);\r\n    cin >> n;\r\n    For(i, 0, n) {\r\n        int x, y;\r\n        cin >> x >> y;\r\n        a[i] = {x, y};\r\n    }\r\n    if(imag(conj(a[1] - a[0]) * (a[2] - a[1])) < 0) reverse(a, a + n);\r\n    double ans = solve();\r\n    reverse(a, a + n);\r\n    For(i, 0, n) a[i] = conj(a[i]);\r\n    cmin(ans, solve());\r\n    cout << setprecision(10) << fixed << ans << '\\n';\r\n}"
}