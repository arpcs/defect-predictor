{
    "id": 232006307,
    "contestId": 467,
    "creationTimeSeconds": 1699492450,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 467,
        "index": "D",
        "name": "Fedor and Essay",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2400,
        "tags": [
            "dfs and similar",
            "dp",
            "graphs",
            "hashing",
            "strings"
        ]
    },
    "author": {
        "contestId": 467,
        "members": [
            {
                "handle": "sane1981"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1411054200
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 264,
    "memoryConsumedBytes": 10854400,
    "source": "// LUOGU_RID: 134085870\n#include<bits/stdc++.h>\r\n#include<string>\r\n#include<map>\r\n#include<vector>\r\n#include<stack>\r\n#include<queue>\r\nusing namespace std;\r\nconst int N=1e5+5;\r\nint n,m,cnt;\r\nstring s[N],g1,g2;\r\nmap <string,int> id;\r\nvoid change(string &x){\r\n\tfor(int i=0;i<x.length();i++)\r\n\t\tif(x[i]>='A'&&x[i]<='Z') x[i]=x[i]-'A'+'a';\r\n}\r\nint tot,in[N];\r\nvector <int> G[N],E[N];\r\nint dfn[N],low[N],dfnum,col[N],colnum;\r\nbool ins[N];\r\nstack <int> S;\r\nstruct node{\r\n\tint Num,Len;\r\n}group[N],f[N];\r\nnode get(string w){\r\n\tnode res=(node){0,(int)w.length()};\r\n\tfor(int i=0;i<w.length();i++)\r\n\t\tres.Num+=(int)(w[i]=='r');\r\n\treturn res;\r\n}\r\nnode compare(node a,node b){\r\n\tif(a.Num==b.Num) return a.Len<b.Len?a:b;\r\n\treturn a.Num<b.Num?a:b;\r\n}\r\nvoid Tarjan(int u){\r\n\tdfn[u]=low[u]=++dfnum;\r\n\tS.push(u);ins[u]=true;\r\n\tfor(int i=0;i<E[u].size();i++){\r\n\t\tint v=E[u][i];\r\n\t\tif(!dfn[v]) Tarjan(v),low[u]=min(low[u],low[v]);\r\n\t\telse if(ins[v]) low[u]=min(low[u],dfn[v]);\r\n\t}\r\n\tif(dfn[u]==low[u]){\r\n\t\tcol[u]=++colnum;ins[u]=false;\r\n\t\tgroup[colnum]=f[u];\r\n\t\twhile(S.top()!=u){\r\n\t\t\tcol[S.top()]=colnum;ins[S.top()]=false;\r\n\t\t\tgroup[colnum]=compare(group[colnum],f[S.top()]);\r\n\t\t\tS.pop();\r\n\t\t}S.pop();\r\n\t}\r\n}\r\nqueue <int> Q;\r\nvoid Topu(){\r\n\tfor(int i=1;i<=colnum;i++) if(in[i]==0) Q.push(i);\r\n\twhile(!Q.empty()){\r\n\t\tint u=Q.front();Q.pop();\r\n\t\tfor(int i=0;i<G[u].size();i++){\r\n\t\t\tint v=G[u][i];\r\n\t\t\tin[v]--;\r\n\t\t\tgroup[v]=compare(group[v],group[u]);\r\n\t\t\tif(!in[v]) Q.push(v);\r\n\t\t}\r\n\t} \r\n}\r\nint main(){\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tcin>>s[i];change(s[i]);\r\n\t}\r\n\tscanf(\"%d\",&m);\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tcin>>g1>>g2;\r\n\t\tchange(g1);change(g2);\r\n\t\tif(!id[g1]) id[g1]=++tot,f[id[g1]]=get(g1);\r\n\t\tif(!id[g2]) id[g2]=++tot,f[id[g2]]=get(g2);\r\n\t\tE[id[g1]].push_back(id[g2]);\r\n\t}\r\n//\tcout<<tot<<endl;\r\n\tfor(int i=1;i<=tot;i++) if(!dfn[i]) Tarjan(i);\r\n\tfor(int i=1;i<=tot;i++)\r\n\t\tfor(int j=0;j<E[i].size();j++)\r\n\t\t\tif(col[E[i][j]]!=col[i]){\r\n\t\t\t\tG[col[E[i][j]]].push_back(col[i]);\r\n\t\t\t\tin[col[i]]++;\r\n\t\t\t}\r\n\tTopu();\r\n\tlong long ans1=0,ans2=0;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tnode temp=get(s[i]);\r\n\t\tif(!id[s[i]]) ans1+=(long long)temp.Num,ans2+=(long long)temp.Len;\r\n\t\telse ans1+=(long long)group[col[id[s[i]]]].Num,ans2+=(long long)group[col[id[s[i]]]].Len;\r\n\t}\r\n\tprintf(\"%lld %lld\\n\",ans1,ans2);\r\n\treturn 0;\r\n}"
}