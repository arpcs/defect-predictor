{
    "id": 233048491,
    "contestId": 141,
    "creationTimeSeconds": 1700202960,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 141,
        "index": "D",
        "name": "Take-off Ramps",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2300,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 141,
        "members": [
            {
                "handle": "gdf_yhm"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1326034800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 24268800,
    "source": "// LUOGU_RID: 135529200\n#include<bits/stdc++.h>\r\n#define int long long\r\n#define db double\r\n#define mod 1000000007\r\nusing namespace std;\r\nconst int maxn=200010;\r\nconst int inf=1e18;\r\ninline int read(){\r\n\tint x=0,f=1;\r\n\tchar ch=getchar();\r\n\twhile(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}\r\n\twhile(ch>='0'&&ch<='9'){x=(x<<3)+(x<<1)+(ch-48);ch=getchar();}\r\n\treturn x*f;\r\n}\r\n\r\nint n,m;\r\nstruct nd{\r\n\tint pos,id;\r\n}fr[maxn],to[maxn];\r\nbool cmp(nd u,nd v){return u.pos<v.pos;}\r\nint s,t;\r\nint head[maxn],tot;\r\nstruct edgend{\r\n\tint nxt,to,w,fr;\r\n}e[maxn<<1];\r\nvoid add(int u,int v,int w){e[++tot]={head[u],v,w,u};head[u]=tot;}\r\nstruct node{\r\n\tint id,dis;\r\n\tbool operator <(const node&tmp)const{return dis>tmp.dis;}\r\n};\r\nint dis[maxn],pre[maxn];\r\npriority_queue<node> q;\r\nbool vis[maxn];\r\nvector<int> ans;\r\n\r\nint T;\r\nsigned main(){\r\n\t//\tfreopen(\".in\",\"r\",stdin);\r\n\t//\tfreopen(\".out\",\"w\",stdout);\r\n\t\r\n\tn=read();m=read();s=2*n+1,t=2*n+2;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tint x=read(),d=read(),tim=read(),p=read();\r\n\t\tif(x-p<0){\r\n\t\t\tfr[i]={inf,i};\r\n\t\t\tto[i]={inf,i+n};\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tfr[i]={x-p,i};to[i]={x+d,i+n};\r\n\t\tadd(i,i+n,p+tim);\r\n\t}\r\n\tsort(fr+1,fr+n+1,cmp);\r\n\tsort(to+1,to+n+1,cmp);\r\n\tif(fr[1].pos==inf){\r\n\t\tprintf(\"%lld\\n\",m);\r\n\t\treturn 0;\r\n\t}\r\n\tadd(s,fr[1].id,fr[1].pos);\r\n\tadd(s,to[1].id,to[1].pos);\r\n\tfr[n+1].pos=inf;\r\n\tfor(int i=1,j=1;i<=n;i++){\r\n\t\twhile(fr[j].pos<to[i].pos)j++;\r\n\t\tif(fr[j].pos==inf){\r\n\t\t\tadd(fr[j-1].id,t,m-fr[j-1].pos);\r\n\t\t\tadd(to[j-1].id,t,m-to[j-1].pos);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tadd(to[i].id,fr[j].id,fr[j].pos-to[i].pos);\r\n\t}\r\n\tfor(int i=2;i<=n;i++){\r\n\t\tif(fr[i].pos==inf)break;\r\n\t\tadd(fr[i-1].id,fr[i].id,fr[i].pos-fr[i-1].pos);\r\n\t}\r\n\tfor(int i=2;i<=n;i++){\r\n\t\tif(to[i].pos==inf)break;\r\n\t\tadd(to[i-1].id,to[i].id,to[i].pos-to[i-1].pos);\r\n\t}\r\n\tmemset(dis,0x3f,sizeof(dis));\r\n\tdis[s]=0;q.push({s,0});\r\n//\tfor(int i=1;i<=tot;i++)cout<<e[i].fr<<\" \"<<e[i].to<<\" \"<<e[i].w<<\"\\n\";\r\n\twhile(!q.empty()){\r\n\t\tint u=q.top().id;q.pop();\r\n\t\tif(vis[u])continue;\r\n\t\tvis[u]=1;\r\n\t\tfor(int i=head[u];i;i=e[i].nxt){\r\n\t\t\tint v=e[i].to;\r\n\t\t\tif(dis[v]>dis[u]+e[i].w){\r\n\t\t\t\tdis[v]=dis[u]+e[i].w;\r\n\t\t\t\tpre[v]=u;\r\n\t\t\t\tq.push({v,dis[v]});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprintf(\"%lld\\n\",dis[t]);\r\n\twhile(t!=s){\r\n\t\tif(pre[t]<=n&&t>n&&t<=2*n)ans.push_back(pre[t]);\r\n\t\tt=pre[t];\r\n\t}\r\n\tprintf(\"%lld\\n\",(int)ans.size());\r\n\tsort(ans.begin(),ans.end());\r\n\tfor(int i:ans)printf(\"%lld \",i);\r\n}"
}