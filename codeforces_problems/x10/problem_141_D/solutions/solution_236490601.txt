{
    "id": 236490601,
    "contestId": 141,
    "creationTimeSeconds": 1702120945,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 141,
        "index": "D",
        "name": "Take-off Ramps",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2300,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 141,
        "members": [
            {
                "handle": "Hamed_Ghaffari"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1326034800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 498,
    "memoryConsumedBytes": 23654400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long       ll;\r\ntypedef pair<int, int>  pii;\r\n\r\n#define FastIO          cin.tie(NULL); cout.tie(NULL); ios_base::sync_with_stdio(false);\r\n#define FileIO          freopen(\"input.txt\", \"r\", stdin); freopen(\"output.txt\", \"w\", stdout);\r\n#define F               first\r\n#define S               second\r\n#define max_heap(T)     priority_queue<T>\r\n#define min_heap(T)     priority_queue<T, vector<T>, greater<T>>\r\n#define fr(i,a,b)       for(int i=a;i<b;i++)\r\n#define frr(i,a,b)      for(int i=a;i>b;i--)\r\n#define frin(i,A)       for(auto &i : A)\r\n#define frp(a,b,A)      for(auto [a, b] : A)\r\n#define SZ(x)           (int)x.size()\r\n#define all(A)          A.begin(), A.end()\r\n#define mins(a,b)       a = min(a,b)\r\n#define maxs(a,b)       a = max(a,b)\r\n#define pb              push_back\r\n#define Mp              make_pair\r\n#define kill(x)         cout << x << '\\n', exit(0)\r\n#define md(a)           (a%MOD+MOD)%MOD\r\n\r\nconst ll  INF  = 2e18;\r\nconst ll  MOD  = 1e9 + 7;\r\nconst int MAXN = 2e5 + 5;\r\nconst int LOG  = 30;\r\n\r\nint n, L, U[MAXN], V[MAXN], W[MAXN];\r\nint par[MAXN], pid[MAXN];\r\nbool ok[MAXN];\r\nvector<pair<pii, int>> g[MAXN];\r\nll dis[MAXN];\r\n\r\nvoid dj() {\r\n    fill(dis, dis+MAXN, INF);\r\n    dis[0] = 0;\r\n    par[0] = -1;\r\n    priority_queue<pair<ll, int>> q;\r\n    q.push({0, 0});\r\n    while(SZ(q)) {\r\n        ll d = -q.top().F;\r\n        int v = q.top().S;\r\n        q.pop();\r\n        if(d != dis[v]) continue;\r\n        frin(u, g[v])\r\n            if(dis[u.F.F] > d+u.F.S) {\r\n                q.push({-(dis[u.F.F] = d+u.F.S), u.F.F});\r\n                par[u.F.F] = v;\r\n                pid[u.F.F] = u.S;\r\n            }\r\n    } \r\n}\r\n\r\nvoid solve() {\r\n    cin >> n >> L;\r\n    vector<int> pts;\r\n    pts.pb(0), pts.pb(L);\r\n    fr(i, 1, n+1) {\r\n        int x, d, t, p;\r\n        cin >> x >> d >> t >> p;\r\n        if(x >= p) {\r\n            ok[i] = 1;\r\n            U[i] = x-p;\r\n            V[i] = x+d;\r\n            W[i] = p+t;\r\n            pts.pb(U[i]);\r\n            pts.pb(V[i]);\r\n        }\r\n    }\r\n    sort(all(pts));\r\n    pts.resize(unique(all(pts))-pts.begin());\r\n    L = lower_bound(all(pts), L)-pts.begin();\r\n    fr(i, 1, n+1)\r\n        U[i] = lower_bound(all(pts), U[i])-pts.begin(),\r\n        V[i] = lower_bound(all(pts), V[i])-pts.begin();\r\n    fr(i, 1, SZ(pts))\r\n        g[i-1].pb({{i, pts[i]-pts[i-1]}, 0}),\r\n        g[i].pb({{i-1, pts[i]-pts[i-1]}, 0});\r\n    fr(i, 1, n+1)\r\n        if(ok[i])\r\n            g[U[i]].pb({{V[i], W[i]}, i});\r\n    dj();\r\n    cout << dis[L] << '\\n';\r\n    vector<int> ans;\r\n    for(;L!=-1; L = par[L])\r\n        if(pid[L])\r\n            ans.pb(pid[L]);\r\n    cout << SZ(ans) << '\\n';\r\n    reverse(all(ans));\r\n    frin(x, ans)\r\n        cout << x << ' ';\r\n    cout << '\\n';\r\n}\r\n\r\nint32_t main() {\r\n    FastIO\r\n    int T = 1;\r\n    // cin >> T;\r\n    while(T--)\r\n        solve();\r\n    return 0;\r\n}"
}