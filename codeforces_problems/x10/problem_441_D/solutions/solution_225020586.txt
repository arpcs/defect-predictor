{
    "id": 225020586,
    "contestId": 441,
    "creationTimeSeconds": 1695611245,
    "relativeTimeSeconds": 2845,
    "problem": {
        "contestId": 441,
        "index": "D",
        "name": "Valera and Swaps",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "constructive algorithms",
            "dsu",
            "graphs",
            "implementation",
            "math",
            "string suffix structures"
        ]
    },
    "author": {
        "contestId": 441,
        "members": [
            {
                "handle": "Routec"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1695608400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 409600,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\nusing ll=long long;\nusing P=pair<ll,ll>;\nstatic const ll INF=1e15;\nll par[3005];\nll rank_[3005];\nll Size[3005];\nll Left[3005];\nvoid init_uf(ll n){\n    for(ll i=0;i<n;i++){\n        par[i]=i;rank_[i]=0;Size[i]=1;Left[i]=i;\n    }\n}\nll find(ll x){\n    if(par[x]==x)return x;\n    return par[x]=find(par[x]);\n}\nvoid unite(ll x,ll y){\n    x=find(x);y=find(y);\n    if(x==y)return ;\n    if(rank_[x]<rank_[y]){\n    par[x]=y;Size[y]+=Size[x];\n    Left[y]=min(Left[y],Left[x]);\n    }\n    else{\n        par[y]=x;Size[x]+=Size[y];\n         Left[x]=min(Left[y],Left[x]);\n        if(rank_[x]==rank_[y])\n        rank_[x]++;\n    }\n}\nbool same(ll x,ll y){\n    return find(x)==find(y);\n}\nll getsize(ll x){\n    return Size[find(x)];\n}\nll getl(ll x){\n  return Left[find(x)];\n}\nll N;\nll per[3005];\nll M;\nvoid solve(){\n\ninit_uf(N+1);\nfor(ll i=1;i<=N;i++)unite(per[i],i);\nset<ll>S;\nfor(ll i=1;i<=N;i++)S.insert(find(i));\nif(N-S.size()==M)cout<<0<<endl;\nelse if(N-S.size()<M){\nll c=M-(N-S.size());\nvector<P>ans;\nfor(ll k=0;k<c;k++){\ninit_uf(N+1);\nfor(ll j=1;j<=N;j++)unite(per[j],j);\nll Min=INF;\nfor(ll i=1;i<=N;i++){ll l=getl(i);if(l!=1)Min=min(Min,l);}\nans.push_back(P(1,Min));\nswap(per[1],per[Min]);\n}\ncout<<ans.size()<<endl;\nfor(ll i=0;i<ans.size();i++)cout<<ans[i].first<<\" \"<<ans[i].second<<\" \";cout<<endl;\n}else{\nll c=(N-S.size())-M;\n\nvector<P>ans;\nfor(ll k=0;k<c;k++){\ninit_uf(N+1);\nfor(ll j=1;j<=N;j++)unite(per[j],j);\nll Min=INF;\nfor(ll i=1;i<=N;i++)if(2<=getsize(i)){\nMin=min(Min,getl(i));\n}\nll Min1=INF;\nfor(ll i=1;i<=N;i++)if(getl(i)==Min&&i!=Min)Min1=min(Min1,i);\nans.push_back(P(Min,Min1));\nswap(per[Min],per[Min1]);\n\n}\ncout<<ans.size()<<endl;\nfor(ll i=0;i<ans.size();i++)cout<<ans[i].first<<\" \"<<ans[i].second<<\" \";cout<<endl;\n\n}\n\n\n\n}\nint main(){\ncin>>N;\nfor(ll i=1;i<=N;i++)cin>>per[i];\ncin>>M;\nsolve();\n  return 0;\n}"
}