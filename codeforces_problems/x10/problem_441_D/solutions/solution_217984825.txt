{
    "id": 217984825,
    "contestId": 441,
    "creationTimeSeconds": 1691570774,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 441,
        "index": "D",
        "name": "Valera and Swaps",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "constructive algorithms",
            "dsu",
            "graphs",
            "implementation",
            "math",
            "string suffix structures"
        ]
    },
    "author": {
        "contestId": 441,
        "members": [
            {
                "handle": "toomatho"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1402241400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 204800,
    "source": "#include<bits/stdc++.h>\r\n\r\n#define pii pair<int,int>\r\n#define fi first\r\n#define pb push_back\r\n#define si second\r\n#define int long long\r\n// #define mod 1000000007\r\n#define mod 998244353\r\n#define fast ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\r\n#define double long double\r\n#define all(o) o.begin(),o.end()\r\nusing namespace std;\r\nint power(int x, int y)\r\n{\r\n    int res = 1;\r\n    x = x % mod;\r\n    while (y > 0)\r\n    {\r\n        if (y & 1)\r\n            res = (res*x) % mod;\r\n        y = y>>1; // y = y/2\r\n        x = (x%mod*x%mod) % mod;\r\n    }\r\n    return res%mod;\r\n}\r\nint inv(int  n)\r\n{\r\n    return power(n,mod-2)%mod;\r\n}\r\n\r\n\r\n\r\nint n;\r\nint a[20005];\r\n\r\nint vis[3005];\r\n\r\nvoid solve(){\r\n\r\n    cin>>n;\r\n    for(int i=1;i<=n;i++)\r\n        cin>>a[i];\r\n\r\n    vector<vector<int>> vec;\r\n    for(int i=1;i<=n;i++)\r\n    {   \r\n        vector<int> v;\r\n\r\n        if(vis[i]==0){\r\n\r\n            int cur=i;\r\n            while(vis[cur]==0){\r\n                v.pb(cur);\r\n                vis[cur]=1;\r\n                cur=a[cur];\r\n            }\r\n            vec.pb(v);\r\n        }\r\n    }\r\n    int m;\r\n    cin>>m;\r\n\r\n    int sum=0;\r\n    for(auto v:vec)\r\n        sum+=v.size()-1;\r\n\r\n    vector<pii> res;\r\n\r\n    int id=1;\r\n\r\n\r\n    if(sum<m)\r\n    {\r\n        for(int i=0;i<vec.size();i++){\r\n\r\n            int mn=1e9;\r\n            for(auto x:vec[i])\r\n                mn=min(mn,x);\r\n            if(mn!=1)\r\n                res.pb({1,mn}); \r\n        }\r\n        sort(all(res));\r\n        int dif=m-sum;\r\n        cout<<dif<<'\\n';\r\n        for(int i=0;i<dif;i++)\r\n            cout<<res[i].fi<<' '<<res[i].si<<' ';\r\n        cout<<'\\n';\r\n        return;\r\n    }\r\n\r\n    while(sum>m){\r\n        int mn=1e9;\r\n        int id=-1;\r\n        for(int i=0;i<vec.size();i++)\r\n        {\r\n            if(vec[i].size()>=2)\r\n            {\r\n                for(auto x:vec[i])\r\n                    if(x<mn)\r\n                    {\r\n                        mn=x;\r\n                        id=i;\r\n                    }    \r\n            }\r\n        }\r\n\r\n        if(id!=-1)\r\n        {\r\n            int pos=0;\r\n\r\n            int sz=vec[id].size();\r\n            for(int i=0;i<sz;i++)\r\n                if(mn==vec[id][i])\r\n                    pos=i;\r\n            int bf=(pos-1+sz)%sz;\r\n            \r\n            res.pb({mn,vec[id][bf]});\r\n\r\n            vector<int> nw;\r\n            for(int i=0;i<sz;i++)\r\n                if(i!=bf)\r\n                    nw.pb(vec[id][i]);\r\n            vec[id]=nw;\r\n            sum--;\r\n        }\r\n    }\r\n    cout<<res.size()<<'\\n';\r\n    for(auto [x,y]:res)\r\n        cout<<min(x,y)<<\" \"<<max(x,y)<<' ';\r\n    cout<<'\\n';\r\n\r\n}  \r\n\r\n\r\n\r\nint32_t main(){\r\n    fast\r\n    int t=1;\r\n    int tc=0;\r\n    // cin>>t; \r\n\r\n\r\n    while(t--) \r\n    {\r\n      tc++;\r\n      // cout<<\"Case #\"<<tc<<\": \";\r\n        solve();\r\n    }\r\n}\r\n\r\n"
}