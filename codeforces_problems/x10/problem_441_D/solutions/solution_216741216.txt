{
    "id": 216741216,
    "contestId": 441,
    "creationTimeSeconds": 1690907990,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 441,
        "index": "D",
        "name": "Valera and Swaps",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "constructive algorithms",
            "dsu",
            "graphs",
            "implementation",
            "math",
            "string suffix structures"
        ]
    },
    "author": {
        "contestId": 441,
        "members": [
            {
                "handle": "leshek2002"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1402241400
    },
    "programmingLanguage": "Java 8",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 108,
    "memoryConsumedBytes": 0,
    "source": "import java.util.Arrays;\r\nimport java.util.Scanner;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Scanner sc = new Scanner(System.in);\r\n        int n = sc.nextInt();\r\n        int[] merge = new int[n];\r\n        int[] rep = new int[1000005];\r\n        for (int i = 0; i < n; i++) {\r\n            merge[i] = sc.nextInt();\r\n            rep[merge[i]]++;\r\n        }\r\n\r\n        for (int i = 1; i < 1000005; i++) {\r\n            if (rep[i] < rep[i + 1]) {\r\n                System.out.print(\"-1\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        int count = 0;\r\n        for (int i = 0; i < n; i++) {\r\n            if (rep[i] > count)\r\n                count = rep[i];\r\n        }\r\n\r\n        Arrays.fill(rep, 0);\r\n        System.out.println(count);\r\n        for (int i = 0; i < n; i++) {\r\n            rep[merge[i]]++;\r\n            System.out.print(rep[merge[i]] + \" \");\r\n        }\r\n\r\n    }\r\n}"
}