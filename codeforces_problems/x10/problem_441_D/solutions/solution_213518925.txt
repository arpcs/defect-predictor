{
    "id": 213518925,
    "contestId": 441,
    "creationTimeSeconds": 1689169582,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 441,
        "index": "D",
        "name": "Valera and Swaps",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "constructive algorithms",
            "dsu",
            "graphs",
            "implementation",
            "math",
            "string suffix structures"
        ]
    },
    "author": {
        "contestId": 441,
        "members": [
            {
                "handle": "niao_v"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1402241400
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 307200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long LL;\r\ntypedef long double LD;\r\n// #define int long long\r\n#define For(i,a,b)  for(int i=(a),(i##i)=(b);i<=(i##i);++i)\r\nconst int maxn = 3e3+9, mod = 1e9 + 7, inf = 0x3f3f3f3f;\r\nconst LL _inf = 0x3f3f3f3f3f3f3f3f;\r\nint T, x, y, z, k, n, m, a[maxn], mp[maxn], v[maxn];\r\nLL A, B;\r\n\r\nint find(int x){\r\n    if(mp[x]==x)    return x;\r\n    return mp[x]=find(mp[x]);\r\n}\r\nvoid merge(int x,int y){\r\n    int a=find(x), b=find(y);\r\n    if(a==b)    return;\r\n    mp[a]=b;\r\n}\r\n\r\nvoid reorder(vector<int>&q){\r\n    int mi=q[0], beg=0, i=0;\r\n    for(auto it:q){\r\n        if(it<mi)   mi=it, beg=i;\r\n        ++i;\r\n    }\r\n    queue<int> qu;\r\n    vector<int> tmp;\r\n    for(int j=0;j<beg;++j)    qu.push(q[j]);\r\n    for(int j=beg;j<q.size();++j) tmp.emplace_back(q[j]);\r\n    while(qu.size())    tmp.emplace_back(qu.front()), qu.pop();\r\n    q=tmp;\r\n}\r\n\r\nvoid init(){\r\n    cin>>n;\r\n    For(i,1,n)  cin>>a[i], v[i]=0, mp[i]=i;\r\n    cin>>m;\r\n    int cnt=0;\r\n    vector<vector<int> > p;\r\n    vector<int> tmp;\r\n    For(i,1,n){\r\n        if(v[i]==0){\r\n            tmp.clear();\r\n            int cur=i;\r\n            while(v[cur]==0)    tmp.emplace_back(cur), v[cur]=1, merge(i,cur),cur=a[cur];\r\n            ++cnt;\r\n            p.emplace_back(tmp);\r\n        }\r\n    }\r\n    if(m==n-cnt)\r\n        cout<<0<<'\\n';\r\n    else if(m<n-cnt){\r\n        vector<pair<int,int> > q;\r\n        set<vector<int> > s;\r\n        for(auto it:p)   if(it.size()>1) s.insert(it);\r\n        int up=n-m, cnt=p.size();\r\n        while(cnt<up){\r\n            vector<int> beg=*(s.begin());\r\n            int mi=beg[1], cur=1, f=0;\r\n            while(cur<beg.size()){\r\n                if(beg[cur]<mi) mi=beg[cur];\r\n                ++cur;\r\n            }\r\n            swap(a[beg[0]], a[mi]), q.emplace_back(beg[0], mi);\r\n            vector<int> tmp, temp;\r\n            temp.emplace_back(beg[0]);\r\n            for(int i=1;i<beg.size();++i){\r\n                if(f==0)    tmp.emplace_back(beg[i]);\r\n                else    temp.emplace_back(beg[i]);\r\n                if(beg[i]==mi)  f=1;\r\n            }\r\n            ++cnt;\r\n            s.erase(s.begin());\r\n            reorder(tmp);\r\n            if(tmp.size()>1)    s.insert(tmp);\r\n            if(temp.size()>1)   s.insert(temp);\r\n        }\r\n        cout<<q.size()<<'\\n';\r\n        for(auto it:q)  cout<<it.first<<\" \"<<it.second<<\" \";\r\n        cout<<'\\n';\r\n    }\r\n    else{\r\n        vector<pair<int,int> > q;\r\n        int to=n-m;\r\n        For(i,2,n){\r\n            if(find(a[i])!=find(a[1])){\r\n                q.emplace_back(1,i);\r\n                swap(a[i],a[1]);\r\n                merge(a[i],a[1]);\r\n                if(--cnt==to)   break;\r\n            }\r\n        }\r\n        cout<<q.size()<<'\\n';\r\n        // sort(q.begin(),q.end());\r\n        for(auto it:q)  cout<<it.first<<\" \"<<it.second<<\" \";\r\n        cout<<'\\n';\r\n    }\r\n}\r\n\r\nsigned main(){\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0), cout.tie(0);\r\n    // cin>>T;\r\n    // while(T--)\r\n    init();\r\n\t\r\n\t\r\n\treturn 0;\r\n}\r\n\r\n/*\r\n7\r\n7 3 4 5 6 1 2\r\n0\r\n*/"
}