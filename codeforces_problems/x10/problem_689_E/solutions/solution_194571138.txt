{
    "id": 194571138,
    "contestId": 689,
    "creationTimeSeconds": 1677072106,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 689,
        "index": "E",
        "name": "Mike and Geometry Problem",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "combinatorics",
            "data structures",
            "dp",
            "geometry",
            "implementation"
        ]
    },
    "author": {
        "contestId": 689,
        "members": [
            {
                "handle": "_callmelucian"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1467822900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 69,
    "timeConsumedMillis": 608,
    "memoryConsumedBytes": 14643200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef pair<int,int> pii;\r\n#define NL \"\\n\"\r\n#define SP \" \"\r\n#define fmax(a, b) a = max(a, b)\r\n#define fmin(a, b) a = min(a, b)\r\n#define all(v) v.begin(), v.end()\r\n\r\nconst int mn = 2e5 + 1;\r\nconst ll MOD = 1e9 + 7;\r\nll fact[mn];\r\n\r\nll binpow (ll a, ll b) {\r\n    if (!b) return 1;\r\n    ll val = binpow(a, b / 2);\r\n    if (b % 2) return val * val % MOD * a % MOD;\r\n    return val * val % MOD;\r\n}\r\n\r\nll nCk (ll n, ll k) {\r\n    return fact[n] * binpow(fact[k] * fact[n - k] % MOD, MOD - 2) % MOD;\r\n}\r\n\r\nint main()\r\n{\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n\r\n    fact[0] = 1;\r\n    for (ll i = 1; i < mn; i++) fact[i] = fact[i - 1] * i % MOD;\r\n\r\n    map<int,int> mp;\r\n    int n, k; cin >> n >> k;\r\n    while (n--) {\r\n        int l, r; cin >> l >> r;\r\n        mp[l]++, mp[r + 1]--;\r\n    }\r\n    ll cnt = 0, pre = INT_MIN, ans = 0;\r\n    for (auto u : mp) {\r\n        if (u.second == 0) continue;\r\n        if (cnt >= k) ans += (u.first - pre) * nCk(cnt, k) % MOD, ans %= MOD;\r\n        pre = u.first, cnt += u.second;\r\n    }\r\n    cout << ans;\r\n\r\n    return 0;\r\n}\r\n"
}