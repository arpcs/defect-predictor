{
    "id": 210103632,
    "contestId": 689,
    "creationTimeSeconds": 1687095066,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 689,
        "index": "E",
        "name": "Mike and Geometry Problem",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "combinatorics",
            "data structures",
            "dp",
            "geometry",
            "implementation"
        ]
    },
    "author": {
        "contestId": 689,
        "members": [
            {
                "handle": "mcDinic"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1467822900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 24064000,
    "source": "// LUOGU_RID: 112968001\n#include<bits/stdc++.h>\r\n#define ll long long\r\n#define linf 0x3f3f3f3f3f3f3f3f\r\n#define inf 0x7fffffff\r\n#define v e[i].y\r\nusing namespace std;\r\ninline ll read(){\r\n    char ch=getchar();ll x=0,w=1;\r\n    while(!isdigit(ch)){if(ch=='-')w=-1;ch=getchar();}\r\n    while(isdigit(ch))x=(x<<1)+(x<<3)+ch-48,ch=getchar();return w==1?x:-x;\r\n}\r\ninline void write(ll x){\r\n    if(x<0)x=-x,putchar('-');\r\n    if(x<10){putchar(48+x);return;}\r\n    write(x/10),putchar((x+10)%10+48);\r\n}\r\nconst ll mod=1e9+7;\r\nll n=read(),m=read(),po1[400500],po2[400050],po3[400500],c[400050],Val[400500],b[400500],fac[200050],inv[204040],t,ans;\r\nstruct node{int l,r;}e[200005];\r\ninline ll qpow(ll x,ll y){ll an=1;for(;y;y>>=1){if(y&1)an=an*x%mod;x=x*x%mod;}return an;}\r\ninline ll C(ll x,ll y){return x<y?0ll:fac[x]*inv[x-y]%mod*inv[y]%mod;}\r\nint main(){\r\n    fac[0]=inv[0]=1;\r\n    for(int i=1;i<=2e5;i++)fac[i]=fac[i-1]*i%mod;\r\n    inv[200000]=qpow(fac[200000],mod-2);\r\n    for(int i=2e5-1;i>=1;i--)inv[i]=inv[i+1]*(i+1)%mod;\r\n    for(int i=1;i<=n;i++)e[i].l=read(),e[i].r=read(),c[++t]=e[i].l,c[++t]=e[i].r;\r\n    sort(c+1,c+1+t),t=unique(c+1,c+1+t)-c-1;\r\n    for(int i=1;i<=n;i++){\r\n        e[i].l=lower_bound(c+1,c+1+t,e[i].l)-c,e[i].r=lower_bound(c+1,c+1+t,e[i].r)-c,b[e[i].l]++,b[e[i].r]--;\r\n        if(e[i].l!=e[i].r)po1[e[i].l]++,po2[e[i].r]++;\r\n        else po3[e[i].l]++;\r\n    }\r\n    for(int i=1;i<t;i++)Val[i]=(c[i+1]-c[i]+1)%mod;\r\n    int o1=0;\r\n    for(int i=1;i<t;i++)o1+=b[i],ans=(ans+C(o1,m)*Val[i]%mod)%mod;\r\n    //\u7279\u5224\u5728\u5355\u70b9\u76f8\u4ea4\r\n    for(int i=1;i<t;i++)ans=(ans+(C(po1[i]+po2[i]+po3[i],m)-C(po1[i],m)-C(po2[i],m)+mod+mod)%mod)%mod;\r\n    write(ans);\r\n    return 0;\r\n}"
}