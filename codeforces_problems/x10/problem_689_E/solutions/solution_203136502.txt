{
    "id": 203136502,
    "contestId": 689,
    "creationTimeSeconds": 1682245913,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 689,
        "index": "E",
        "name": "Mike and Geometry Problem",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "combinatorics",
            "data structures",
            "dp",
            "geometry",
            "implementation"
        ]
    },
    "author": {
        "contestId": 689,
        "members": [
            {
                "handle": "jd_Kdcgc"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1467822900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 69,
    "timeConsumedMillis": 670,
    "memoryConsumedBytes": 36352000,
    "source": "/*\r\n\u0924\u0938\u094d\u092e\u093e\u0924\u094d\u0924\u094d\u0935\u092e\u0941\u0924\u094d\u0924\u093f\u0937\u094d\u0920 \u092f\u0936\u094b \u0932\u092d\u0938\u094d\u0935\r\n\u091c\u093f\u0924\u094d\u0935\u093e \u0936\u0924\u094d\u0930\u0942\u0928\u094d\u092d\u0941\u0919\u094d \u0915\u094d\u0937\u094d\u0935 \u0930\u093e\u091c\u094d\u092f\u0902 \u0938\u092e\u0943\u0926\u094d\u0927\u092e\u094d |\r\n\u092e\u092f\u0948\u0935\u0948\u0924\u0947 \u0928\u093f\u0939\u0924\u093e: \u092a\u0942\u0930\u094d\u0935\u092e\u0947\u0935\r\n\u0928\u093f\u092e\u093f\u0924\u094d\u0924\u092e\u093e\u0924\u094d\u0930\u0902 \u092d\u0935 \u0938\u0935\u094d\u092f\u0938\u093e\u091a\u093f\u0928\u094d ||\r\n*/\r\n\r\n// Author : Jeewant Dhingra\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define int            long long int\r\n#define F              first\r\n#define S              second\r\n#define pb             push_back\r\n#define si             set <int>\r\n#define vi             vector <int>\r\n#define vc             vector <char>\r\n#define vvi            vector <vi>\r\n#define vvc            vector <vc>\r\n#define pii            pair <int, int>\r\n#define vpi            vector <pii>\r\n#define vpp            vector <pair<int, pii>>\r\n#define mii            map <int, int>\r\n#define mpi            map <pii, int>\r\n#define spi            set <pii>\r\n#define endl           \"\\n\"\r\n#define sz(x)          ((int) x.size())\r\n#define all(p)         p.begin(), p.end()\r\n#define double         long double\r\n#define que_max        priority_queue <int>\r\n#define que_min        priority_queue <int, vi, greater<int>>\r\n#define bug(...)       __f (#__VA_ARGS__, __VA_ARGS__)\r\n#define print(a)       for(auto x : a) cout << x << \" \"; cout << endl\r\n#define print1(a)      for(auto x : a) cout << x.F << \" \" << x.S << endl\r\n#define print2(a,x,y)  for(int i = x; i < y; i++) cout<< a[i]<< \" \"; cout << endl\r\n\r\nconst int N = 2e5 + 5;\r\nconst int mod = 1e9 + 7;\r\nconst int inf = 1e17;\r\n\r\nint gcd(int a, int b) { if (b == 0) return a; return gcd(b, a % b);}\r\n\r\nint lcm(int a,int b) {return a*b/gcd(a,b);}\r\n\r\nint inv(int i) {if (i == 1) return 1; return (mod - ((mod / i) * inv(mod % i)) % mod) % mod;}\r\n \r\nint mod_mul(int a, int b) {a = a % mod; b = b % mod; return (((a * b) % mod) + mod) % mod;}\r\n \r\nint mod_add(int a, int b) {a = a % mod; b = b % mod; return (((a + b) % mod) + mod) % mod;}\r\n\r\n// vi sieve (N + 1);\r\n// void primes ()\r\n// {\r\n// \tfor (int i = 2; i <= N; i++)\r\n// \t{\r\n// \t\tif (sieve [i] == -1) sieve [i] = i;\r\n// \t\tfor (int j = i * i; j <= N; j += i)\r\n// \t\t{\r\n// \t\t\tif (sieve [j] == -1) sieve [j] = i;\r\n// \t\t}\r\n// \t}\r\n// }\r\n\r\nvi fact (N + 1, 1);\r\nvoid findFactorial () {\r\n \r\n\tfact [0] = fact [1] = 1;\r\n\tfor (int i = 2; i <= N; i++) {\r\n \r\n\t\tfact [i] = mod_mul (fact [i - 1], i);\r\n\t}\r\n}\r\n \r\nvi ifact (N + 1, 1);\r\nvoid findIFactorial () {\r\n \r\n\tifact[N] = inv (fact[N]);\r\n    for (int i = N - 1; i > 0; i--)\r\n    {\r\n        ifact[i] = mod_mul (i + 1, ifact[i + 1]);\r\n    }\r\n}\r\n \r\nint nCr (int n, int r)\r\n{\r\n    if (r > n) return 0;\r\n \r\n    int ans = fact [n];\r\n    ans = mod_mul (ans, ifact[r]);\r\n    ans = mod_mul (ans, ifact[n - r]);\r\n \r\n    return ans;\r\n}\r\n\r\ninline int power(int a, int b)\r\n{\r\n\tint ans = 1;\r\n\twhile (b)\r\n\t{\r\n\t\tif (b & 1) ans *= a, ans %= mod;\r\n\r\n\t\ta *= a; a %= mod;\r\n\t\tb = b >> 1;\r\n\t}\r\n\r\n\treturn ans;\r\n}\r\n\r\ntemplate <typename Arg1>\r\nvoid __f (const char* name, Arg1&& arg1) { cout << name << \" : \" << arg1 << endl; }\r\ntemplate <typename Arg1, typename... Args>\r\nvoid __f (const char* names, Arg1&& arg1, Args&&... args)\r\n{\r\n\tconst char* comma = strchr (names + 1, ',');\r\n\tcout.write (names, comma - names) << \" : \" << arg1 << \" | \"; __f (comma + 1, args...);\r\n}\r\n\r\nvoid solve() {\r\n\r\n\tint n, k;\r\n\tcin >> n >> k;\r\n\r\n\tmii mp;\r\n\tfor (int i = 0; i < n; i++) {\r\n\r\n\t\tint l, r;\r\n\t\tcin >> l >> r;\r\n\r\n\t\tmp [l]++;\r\n\t\tmp [r + 1]--;\r\n\t}\r\n\r\n\tvi v;\r\n\tfor (auto& x : mp) v.pb (x.F);\r\n\r\n\tint ans = 0;\r\n\tint curr = 0;\r\n\tfor (int i = 0; i < v.size () - 1; i++) {\r\n\r\n\t\tcurr += mp [v [i]]++;\r\n\t\tint sz = v [i + 1] - v [i];\r\n\r\n\t\tif (curr >= k) ans = (ans + nCr (curr, k) * sz) % mod;\r\n\t}\r\n\r\n\tcout << ans << endl;\r\n}\r\n\r\nint32_t main()\r\n{\r\n\tios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n\r\n#ifndef ONLINE_JUDGE\r\n\tfreopen(\"input.txt\",  \"r\",  stdin);\r\n\tfreopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n\r\n\tclock_t z = clock();\r\n\r\n\tfindFactorial ();\r\n\tfindIFactorial ();\r\n\t// primes ();\r\n\r\n\tcout << setprecision (12) << fixed;\r\n\r\n\tint t = 1;\r\n\t// cin >> t;\r\n\twhile (t--) solve();\r\n\r\n\tcerr << \"Run Time : \" << ((double)(clock() - z) / CLOCKS_PER_SEC) << \" \";\r\n\r\n\treturn 0;\r\n}"
}