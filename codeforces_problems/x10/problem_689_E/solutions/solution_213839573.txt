{
    "id": 213839573,
    "contestId": 689,
    "creationTimeSeconds": 1689378484,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 689,
        "index": "E",
        "name": "Mike and Geometry Problem",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "combinatorics",
            "data structures",
            "dp",
            "geometry",
            "implementation"
        ]
    },
    "author": {
        "contestId": 689,
        "members": [
            {
                "handle": "IsitaRex"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1467822900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 9318400,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define fi first\r\n#define se second\r\n#define forn(i,n) for(int i=0; i< (int)n; ++i)\r\n#define for1(i,n) for(int i=1; i<= (int)n; ++i)\r\n#define fore(i,l,r) for(int i=(int)l; i<= (int)r; ++i)\r\n#define ford(i,n) for(int i=(int)(n) - 1; i>= 0; --i)\r\n#define fored(i,l,r) for(int i=(int)r; i>= (int)l; --i)\r\n#define pb push_back\r\n#define el '\\n'\r\n#define d(x) cout<< #x<< \" \" << x<<el\r\n#define ri(n) scanf(\"%d\",&n)\r\n#define sz(v) ((int)v.size())\r\n#define all(v) v.begin(),v.end()\r\n#define allr(v) v.rbegin(),v.rend()\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef double ld;\r\ntypedef pair<int,int> ii;\r\ntypedef pair<char,int> pci;\r\ntypedef tuple<int, int, int> tiii;\r\ntypedef pair<ll,ll> pll;\r\ntypedef vector<int> vi;\r\n\r\nconst int inf = 1e9;\r\nconst int m = 1e9 + 7;\r\nconst int nax = 1e5+200;\r\nconst ld pi = acos(-1);\r\nconst ld eps= 1e-9;\r\n\r\nint dr[] = {1,-1,0, 0,1,-1,-1, 1};\r\nint dc[] = {0, 0,1,-1,1, 1,-1,-1};\r\nll factorial[int(4e5 + 10)];\r\n// a*x+b*y = g\r\nll gcde(ll a, ll b, ll& x, ll& y) {\r\n  x = 1, y = 0;\r\n  ll x1 = 0, y1 = 1, a1 = a, b1 = b;\r\n  ll q;\r\n  while (b1) {\r\n    q = a1 / b1;\r\n    tie(x, x1) = make_tuple(x1, x - q * x1);\r\n    tie(y, y1) = make_tuple(y1, y - q * y1);\r\n    tie(a1, b1) = make_tuple(b1, a1 - q * b1);\r\n  }\r\n  return a1;\r\n}\r\n\r\nll inverse(ll a){\r\n  ll x, y;\r\n  ll g = gcde(a, m, x, y);\r\n  if (g != 1) {\r\n    cout << \"No solution!\";\r\n    return -1;\r\n  }else{\r\n    x = (x % m + m) % m;\r\n    return x;\r\n  }\r\n}\r\n\r\nlong long binomial_coefficient(int n, int k) {\r\n    return factorial[n] * inverse(factorial[k] * factorial[n - k] % m) % m;\r\n}\r\n\r\nint main(){\r\n  ios_base::sync_with_stdio(false);\r\n  cin.tie(NULL); cout.tie(NULL);\r\n  cout << setprecision(20)<< fixed;\r\n  int n,k; cin>>n>>k;\r\n\r\n\r\n  factorial[0] = 1;\r\n  factorial[1] = 1;\r\n  fore(i, 2, 4e5 + 5){\r\n    factorial[i] = 1LL*factorial[i-1]*i%m;\r\n  }\r\n  vector<int> coord;\r\n  vector<pair<int,int>> seg;\r\n  forn(i,n){\r\n    int u, v; cin>>u>>v;\r\n    seg.pb({u,v});\r\n    coord.pb(u);\r\n    coord.pb(v);\r\n    coord.pb(v+1);\r\n  }\r\n\r\n  sort(all(coord));\r\n  \r\n  coord.erase(unique(all(coord)), coord.end());\r\n  coord.pb(coord.back() +1);\r\n  vector<int> pref(4e5 + 10, 0);\r\n  forn(i,n){\r\n    int start = lower_bound(all(coord), seg[i].fi) - coord.begin();\r\n    int end = lower_bound(all(coord), seg[i].se) - coord.begin();\r\n    pref[start]++;\r\n    pref[end+1]--;\r\n  }\r\n  partial_sum(all(pref), pref.begin());\r\n  ll ans = 0LL;\r\n  forn(i, 4e5 + 10){\r\n    if(pref[i] < k) continue;\r\n    ll cnt = 0;\r\n    if(i + 1 < sz(coord)) cnt = (coord[i+1]-coord[i]+m)%m;\r\n    ans = (ans +( 1LL*cnt*binomial_coefficient(pref[i], k))%m)%m;\r\n  }\r\n  cout<<ans%m<<el;\r\n\r\n}"
}