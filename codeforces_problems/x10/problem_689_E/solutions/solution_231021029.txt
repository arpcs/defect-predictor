{
    "id": 231021029,
    "contestId": 689,
    "creationTimeSeconds": 1698948246,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 689,
        "index": "E",
        "name": "Mike and Geometry Problem",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "combinatorics",
            "data structures",
            "dp",
            "geometry",
            "implementation"
        ]
    },
    "author": {
        "contestId": 689,
        "members": [
            {
                "handle": "Normal_People"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1467822900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <cmath>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <cstring>\r\n#include <map>\r\n#include <numeric>\r\n#include <string>\r\n#include <cstdint>\r\n#include <set>\r\n#include <queue> \r\nusing namespace std;\r\n#define fr(i, n) for (int64_t i = 0; i < n; i++)\r\n#define frn(i,a, n) for (int64_t i = a; i < n; i++)\r\n#define vet vector<int64_t>  \r\n#define vst vector<string>  \r\n#define aint64_t(v)  v.begin(),v.end()\r\n#define en cout << \"\\n\"\r\n#define all(v)  v.begin(),v.end()\r\n#define ll int64_t\r\n#define mp make_pair\r\n\r\n\r\n\r\n// clang++ -std=c++20 check.cpp -o a\r\n// clang++ -std=c++20 random.cpp -o r\r\n\r\nint64_t gcd(int64_t a, int64_t b)\r\n{\r\n    while (b != 0)\r\n    {\r\n        int64_t temp = b;\r\n        b = a % b;\r\n        a = temp;\r\n    }\r\n    return a;\r\n}\r\n\r\nint64_t lcm(int64_t a, int64_t b)\r\n{\r\n    int64_t gcdValue = gcd(a, b);\r\n    return (a * b) / gcdValue;\r\n}\r\n\r\n// void dfs(vector<vector<int64_t> > &graph,vector<bool>& check,map<pair<int64_t,int64_t> ,int64_t>& m,int value,int64_t index){\r\n//     // cout << index << \" index \\n\";\r\n//     // cout << \"yes\\n\";\r\n//     check[index] = true;\r\n//     for (auto j :graph[index]){\r\n//         if(!check[j]){\r\n//             m[{index,j}]=value;\r\n//             m[{j,index}]=value;\r\n//             // cout << m[{j,index}] << \"\\n\";\r\n//             // cout << j << \" \" << index << \"\\n\";\r\n//             if(value == 2) value = 3;\r\n//             else value =2;\r\n//             dfs(graph,check,m,value,j);\r\n//         }\r\n//     }\r\n// }\r\n\r\nint64_t mod = 1000000007;\r\nvoid solve()\r\n{\r\n    int64_t n,k;\r\n    cin>>n>>k;\r\n    vet l(n),r(n);\r\n    fr(i,n)cin >> l[i] >> r[i];\r\n    sort(all(l));\r\n    sort(all(r));\r\n    int i =0,j=0;\r\n    int64_t ans = 0,ma=1;\r\n    // en;\r\n    while(j<n){\r\n        if(ma>=k && r[j]>=l[i]){\r\n            // cout << l[i] << \" \" << r[j];\r\n            // en;\r\n            ans += max(abs(r[j]),abs(l[i]))-min(abs(r[j]),abs(l[i])) + 1;\r\n        }\r\n        if(l[i]<=r[j] && i<n-1){\r\n            i++;\r\n            ma++;\r\n            // cout << ma;\r\n            // en;\r\n        }\r\n        else{\r\n            ma--;\r\n            j++;\r\n        }\r\n        \r\n        ans %=mod;\r\n    }\r\n    \r\n\r\n    cout << ans;\r\n    en;\r\n    \r\n}\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    int64_t t = 1;\r\n    // cin >> t;\r\n    while (t--)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}