{
    "id": 228758797,
    "contestId": 689,
    "creationTimeSeconds": 1697698410,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 689,
        "index": "E",
        "name": "Mike and Geometry Problem",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "combinatorics",
            "data structures",
            "dp",
            "geometry",
            "implementation"
        ]
    },
    "author": {
        "contestId": 689,
        "members": [
            {
                "handle": "Pawan_Lahoti"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1467822900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "import sys\r\ninput=sys.stdin.readline\r\nfrom collections import defaultdict\r\n\r\nmod=10**9+7\r\nMAXN=300001\r\n\r\ndef power(a,b):\r\n\r\n    res=1\r\n    while b>0:\r\n        if b&1:\r\n            res=(res*a)%mod\r\n        b>>=1\r\n        a=(a*a)%mod\r\n    \r\n    return res\r\n\r\nfact=[1 for _ in range(MAXN)]\r\ninv_fact=[1 for _ in range(MAXN)]\r\n\r\nfor i in range(2,MAXN):\r\n    fact[i]=(fact[i-1]*i)%mod\r\n    inv_fact[i]=power(fact[i],mod-2)\r\n\r\ndef ncr(n,r):\r\n    if n<r:\r\n        return 0\r\n    return (((fact[n]*inv_fact[r])%mod)*inv_fact[n-r])%mod\r\n\r\nn,k=map(int,input().split())\r\n\r\nmp=defaultdict(int)\r\n\r\nend_points=[]\r\n\r\nfor _ in range(n):\r\n    l,r=map(int,input().split())\r\n    mp[l]+=1\r\n    mp[r+1]-=1\r\n\r\nend_points=list(mp.keys())\r\n\r\nend_points.sort()\r\n\r\nans=0\r\ncurr=0\r\n\r\nfor i in range(len(end_points)-1):\r\n    curr+=mp[end_points[i]]\r\n    ans+=(end_points[i+1]-end_points[i])*ncr(curr,k)\r\n\r\nprint(ans)\r\n"
}