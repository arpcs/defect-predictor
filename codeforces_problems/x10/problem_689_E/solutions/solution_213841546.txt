{
    "id": 213841546,
    "contestId": 689,
    "creationTimeSeconds": 1689381486,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 689,
        "index": "E",
        "name": "Mike and Geometry Problem",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "combinatorics",
            "data structures",
            "dp",
            "geometry",
            "implementation"
        ]
    },
    "author": {
        "contestId": 689,
        "members": [
            {
                "handle": "AngelOlan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1467822900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\nusing vi = vector<ll>;\r\nusing pi = pair<ll, ll>;\r\n\r\n#define fi first\r\n#define se second\r\n#define pb push_back\r\n#define SZ(x) ll((x).size())\r\n#define ALL(x) begin(x), end(x)\r\n#define FOR(i, a, b) for (ll i = (a); i < (b); i++)\r\n#define ROF(i, a, b) for (ll i = (a)-1; i >= (b); i--)\r\n#define ENDL '\\n'\r\n\r\nconstexpr ll MAXN = 2e5 + 5, MOD = 1e9 + 7;\r\n\r\nll fact[MAXN];\r\n\r\nll fastpow(ll a, ll b, ll m) {\r\n    ll res = 1;\r\n    a %= m;\r\n    while (b) {\r\n        if (b & 1)\r\n            res = (res * a) % m;\r\n        a = (a * a) % m;\r\n        b >>= 1;\r\n    }\r\n    return res;\r\n}\r\nll modInverse(ll b) { return fastpow(b, MOD - 2, MOD) % MOD; }\r\n\r\nll C(int n, int k) {  // O(log p)\r\n    if (n < k)\r\n        return 0;\r\n    return fact[n] * modInverse(fact[k]) % p * modInverse(fact[n - k]) % p;\r\n}\r\n\r\nmap<ll, ll> mapa;\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(nullptr);\r\n\r\n    fact[0] = 1;\r\n    FOR(i, 1, MAXN) {\r\n        fact[i] = fact[i - 1] * i % MOD;\r\n    }\r\n\r\n    ll n, k;\r\n    cin >> n >> k;\r\n    FOR(i, 0, n) {\r\n        ll x, y;\r\n        cin >> x >> y;\r\n        mapa[x]++;\r\n        mapa[y + 1]--;\r\n    }\r\n\r\n    ll cnt = 0;\r\n    ll ans = 0;\r\n    ll ultimo = 0;\r\n    for (auto m : mapa) {\r\n        ans += (m.first - ultimo - 1) * C(cnt, k) % MOD;\r\n        cnt += m.second;\r\n        ans %= MOD;\r\n        ans += C(cnt, k) % MOD;\r\n        ultimo = m.first;\r\n        ans %= MOD;\r\n    }\r\n    cout << ans << ENDL;\r\n\r\n    return 0;\r\n}"
}