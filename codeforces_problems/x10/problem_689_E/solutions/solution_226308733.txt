{
    "id": 226308733,
    "contestId": 689,
    "creationTimeSeconds": 1696256288,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 689,
        "index": "E",
        "name": "Mike and Geometry Problem",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "combinatorics",
            "data structures",
            "dp",
            "geometry",
            "implementation"
        ]
    },
    "author": {
        "contestId": 689,
        "members": [
            {
                "handle": "khanhtai"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1467822900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 41062400,
    "source": "#include<bits/stdc++.h>\r\n#define int long long\r\n#define pb push_back\r\n#define fast ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);\r\n#define MOD 1000000007\r\n#define INF 1e18\r\n#define fi first\r\n#define se second\r\n#define FOR(i,a,b) for(int i=a;i<=b;i++)\r\n#define FORD(i,a,b) for(int i=a;i>=b;i--)\r\n#define sz(a) ((int)(a).size())\r\n#define endl '\\n'\r\n#define pi 3.14159265359\r\n#define TASKNAME \"689E\"\r\ntemplate<typename T> bool maximize(T &res, const T &val) { if (res < val){ res = val; return true; }; return false; }\r\ntemplate<typename T> bool minimize(T &res, const T &val) { if (res > val){ res = val; return true; }; return false; }\r\nusing namespace std;\r\ntypedef pair<int,int> ii;\r\ntypedef pair<int,ii> iii;\r\ntypedef vector<int> vi;\r\nconst int MAXN = 2e5 + 9;\r\nint n,k,l[MAXN],r[MAXN];\r\nint fact[MAXN],ifact[MAXN];\r\nint power(int a,int b){\r\n    int res = 1;\r\n    while(b>0){\r\n        if (b&1){\r\n            res = (res * a) % MOD;\r\n        }\r\n        b>>=1;\r\n        a= (a * a) % MOD;\r\n    }\r\n    return res;\r\n}\r\nvoid gen(int N = 2e5){\r\n    fact[0] = 1;\r\n    for(int i=1;i<=n;i++){\r\n        fact[i] = (fact[i-1] * i) % MOD;\r\n    }\r\n    ifact[n] = power(fact[n],MOD-2);\r\n    for(int i=n;i>=1;i--){\r\n        ifact[i-1] = (ifact[i] * i) % MOD;\r\n    }\r\n}\r\nint C(int n,int k){\r\n    return ((fact[n] * ifact[n-k])%MOD * ifact[k])%MOD;\r\n}\r\nvector<int> position;\r\nunordered_map<int,int> mp,transfer;\r\nint start[MAXN],stop[MAXN];\r\nmain()\r\n{\r\n    fast;\r\n   // freopen(TASKNAME\".inp\",\"r\",stdin);\r\n   // freopen(TASKNAME\".out\",\"w\",stdout);\r\n    cin>>n>>k;\r\n    gen();\r\n    for(int i=1;i<=n;i++){\r\n        cin>>l[i]>>r[i];\r\n        position.pb(l[i]);\r\n        position.pb(r[i]);\r\n    }\r\n    sort(position.begin(),position.end());\r\n    int last = -INF, id = 0;\r\n    for(auto x: position){\r\n        if (x != last) {\r\n            last = x;\r\n            mp[x] = ++id;\r\n            transfer[id] = x;\r\n        }\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        int x = mp[l[i]];\r\n        int y = mp[r[i]];\r\n        start[x]++;\r\n        stop[y]++;\r\n    }\r\n    int cur = 0,ans = 0;\r\n    for(int i=1;i<=id;i++){\r\n        cur += start[i];\r\n        if (cur>=k) ans = (ans + C(cur,k))%MOD;\r\n\r\n//        cout<<C(cur,k)<<endl;\r\n        cur -= stop[i];\r\n\r\n        if (i<id and cur>=k) ans = (ans + C(cur,k) * (transfer[i+1]-1-transfer[i])%MOD)%MOD;\r\n    }\r\n    cout<<ans<<endl;\r\n}\r\n\r\n"
}