{
    "id": 229875723,
    "contestId": 689,
    "creationTimeSeconds": 1698327794,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 689,
        "index": "E",
        "name": "Mike and Geometry Problem",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "combinatorics",
            "data structures",
            "dp",
            "geometry",
            "implementation"
        ]
    },
    "author": {
        "contestId": 689,
        "members": [
            {
                "handle": "sz_zx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1467822900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 16179200,
    "source": "#include <bits/stdc++.h>\r\nusing LL = long long;\r\n#pragma GCC optimize(3)\r\nusing ULL = unsigned long long;\r\nusing PII = std::pair<int, int>;\r\n#define all(x) (x).begin(), (x).end()\r\nconst int mod = 1e9 + 7;\r\nconst int N = 1e6 + 10;\r\nconst LL INF = 1e9;\r\nLL ksm(LL a, LL b, int mod = 998244353)\r\n{\r\n    LL res = 1;\r\n    while (b)\r\n    {\r\n        if (b & 1)\r\n            res = (LL)res * a % mod;\r\n        a = (LL)a * a % mod;\r\n        b >>= 1;\r\n    }\r\n    return res;\r\n}\r\nLL get_inv(long long x)\r\n{\r\n    return ksm(x, mod - 2, mod);\r\n}\r\nLL fact[N], inv[N];\r\nvoid init() {\r\n    \r\n}\r\nLL C(LL x, LL y) {\r\n    if (y<0 || y>x)return 0;\r\n    return 1LL * fact[x] * inv[y] % mod * inv[x - y] % mod;\r\n}\r\n//LL C(int x, int y)\r\n//{\r\n//    LL z = 1;\r\n//    for (LL i = x; i >= x - y + 1; i--)\r\n//        z = z * i % mod;\r\n//    for (int i = 1; i <= y; i++)\r\n//        z = z * get_inv(i) % mod;\r\n//    return z;\r\n//}\r\n#define int long long\r\nvoid Solve()\r\n{\r\n    int n, k;\r\n    std::cin >> n >> k;\r\n    fact[0] = 1;\r\n    for (int i = 1; i <= n+5; i++) {\r\n        fact[i] = (LL)fact[i - 1] * i % mod;\r\n    }\r\n    inv[n+1] = ksm(fact[n+1], mod - 2, mod);\r\n    for (int i = n; i >= 0; --i) {\r\n        inv[i] = 1LL * inv[i + 1] * (i + 1) % mod;\r\n    }\r\n    std::map<int, int> mp;\r\n    for (int i = 1; i <= n; ++i) {\r\n        int l, r;\r\n        std::cin >> l >> r;\r\n        mp[l]++, mp[r + 1]--;\r\n    }\r\n    LL ans = 0, tmp = 0;\r\n    auto cur = mp.begin()->first;\r\n    for (auto [x, y] : mp) {\r\n        LL cnt = x - cur;\r\n        if (tmp >= k)ans += C(tmp, k) * cnt % mod;\r\n        tmp += y;\r\n        cur = x;\r\n    }\r\n    std::cout << ans << \"\\n\";\r\n    return;\r\n}\r\n\r\nsigned main()\r\n{\r\n    std::ios::sync_with_stdio(0);\r\n    std::cin.tie(0), std::cout.tie(0);\r\n    std::cout << std::fixed << std::setprecision(15);\r\n\r\n#ifdef LOCAL\r\n    freopen(\"in.in\", \"r\", stdin);\r\n    freopen(\"out.out\", \"w\", stdout);\r\n#endif\r\n    \r\n    int tt = 1;\r\n    //std::cin >> tt;\r\n    while (tt--)\r\n    {\r\n        Solve();\r\n    }\r\n    return 0;\r\n}"
}