{
    "id": 208993704,
    "contestId": 689,
    "creationTimeSeconds": 1686228355,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 689,
        "index": "E",
        "name": "Mike and Geometry Problem",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "combinatorics",
            "data structures",
            "dp",
            "geometry",
            "implementation"
        ]
    },
    "author": {
        "contestId": 689,
        "members": [
            {
                "handle": "lybzscyzb"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1467822900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 69,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 7987200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=5e5;\r\nconst int M=2e6;\r\nconst int mod=1e9+7;\r\nconst int INF=0x3f3f3f3f;\r\nint n,m;\r\nint fac[N+5],inv[N+5];\r\nstruct Node{\r\n\tint pos,f;\r\n\tbool friend operator<(Node a,Node b){\r\n\t\tif(a.pos!=b.pos)return a.pos<b.pos;\r\n\t\treturn a.f<b.f;\r\n\t}\r\n}p[N+5];\r\nint qpow(int a,int b){\r\n\tint c=1;\r\n\twhile(b){\r\n\t\tif(b&1)c=1LL*c*a%mod;\r\n\t\ta=1LL*a*a%mod;\r\n\t\tb>>=1;\r\n\t}\r\n\treturn c;\r\n}\r\nint C(int n,int m){\r\n\treturn 1LL*fac[n]*inv[m]%mod*inv[n-m]%mod;\r\n}\r\nint main(){\r\n\tios::sync_with_stdio(0);\r\n\tcin.tie(0);cout.tie(0);\r\n\tcin>>n>>m;\r\n\tfac[0]=1;\r\n\tfor(int i=1;i<=n;i++)fac[i]=1LL*i*fac[i-1]%mod;\r\n\tinv[n]=qpow(fac[n],mod-2);\r\n\tfor(int i=n-1;i>=0;i--)inv[i]=1LL*(i+1)*inv[i+1]%mod;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tint l,r;cin>>l>>r;\r\n\t\tp[i].pos=l,p[i].f=1;\r\n\t\tp[i+n].pos=r+1,p[i+n].f=-1;\r\n\t}\r\n\tsort(p+1,p+1+2*n);\r\n\tint lst=0,cur=0,ans=0,f=0;\r\n\tfor(int i=1;i<=n*2;){\r\n\t\tif(f)ans=(ans+1LL*(p[i].pos-lst)*C(cur,m)%mod)%mod;\r\n\t\tint l=i,r=i;\r\n\t\twhile(r<=n*2 && p[r].pos==p[l].pos){\r\n\t\t\tcur+=p[r].f;\r\n\t\t\t++r;\r\n\t\t}\r\n\t\ti=r;\r\n\t\tlst=p[l].pos;\r\n\t\tf=(cur>=m);\r\n\t}\r\n\tcout<<ans;\r\n\treturn 0;\r\n}"
}