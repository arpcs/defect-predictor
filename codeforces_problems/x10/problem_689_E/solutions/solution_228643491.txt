{
    "id": 228643491,
    "contestId": 689,
    "creationTimeSeconds": 1697615600,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 689,
        "index": "E",
        "name": "Mike and Geometry Problem",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2000,
        "tags": [
            "combinatorics",
            "data structures",
            "dp",
            "geometry",
            "implementation"
        ]
    },
    "author": {
        "contestId": 689,
        "members": [
            {
                "handle": "ldctql"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1467822900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 69,
    "timeConsumedMillis": 311,
    "memoryConsumedBytes": 48128000,
    "source": "// LUOGU_RID: 130124569\n//  ______                                                 _  __\r\n// |  ____|                                          /\\   | |/ /\r\n// | |____   _____ _ __ _   _  ___  _ __   ___      /  \\  | ' /    ______  ___   _\r\n// |  __\\ \\ / / _ \\ '__| | | |/ _ \\| '_ \\ / _ \\    / /\\ \\ |  <    |_  /\\ \\/ / | | |\r\n// | |___\\ V /  __/ |  | |_| | (_) | | | |  __/   / ____ \\| . \\    / /  >  <| |_| |\r\n// |______\\_/ \\___|_|   \\__, |\\___/|_| |_|\\___|  /_/    \\_\\_|\\_\\  /___|/_/\\_\\\\__, |\r\n//                       __/ |                                                __/ |\r\n//                      |___/                                                |___/\r\n#include <bits/stdc++.h>\r\n#define int long long\r\nusing namespace std;\r\nmt19937 rnd(time(0) ^ clock());\r\nconst int N = 1e6 + 10, ldc = 1e9 + 7;\r\nint n, m, jc[N], inv[N], l[N], r[N], res;\r\nint random(int l, int r) {\r\n\treturn rnd() % (r - l + 1) + l;\r\n}\r\nint read() {\r\n\tchar ch;\r\n\tint s = 0; int w = 1;\r\n\twhile ((ch = getchar()) > '9' || ch < '0') if (ch == '-') w = -1;\r\n\twhile (ch >= '0' && ch <= '9') s = (s << 1) + (s << 3) + (ch ^ 48), ch = getchar();\r\n\treturn s * w;\r\n}\r\nstruct node {\r\n\tint num, op;\r\n} a[N];\r\nint cal(int a, int b) {\r\n\tint res = 1 % ldc;\r\n\tfor (; b; b >>= 1) {\r\n\t\tif (b & 1) res = (res * a) % ldc;\r\n\t\ta = (a * a) % ldc;\r\n\t}\r\n\treturn res;\r\n}\r\nint C(int n, int m) {\r\n\tif (n < m) return 0;\r\n\treturn jc[n] * inv[m] % ldc * inv[n - m] % ldc;\r\n}\r\nbool cmp(node a, node b) {\r\n\treturn a.num < b.num;\r\n}\r\nsigned main() {\r\n\tn = read(); m = read();\r\n\tjc[0] = 1;\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tjc[i] = jc[i - 1] * i % ldc;\r\n\t}\r\n\tinv[n] = cal(jc[n], ldc - 2);\r\n\tfor (int i = n - 1; i >= 0; i--) {\r\n\t\tinv[i] = inv[i + 1] * (i + 1) % ldc;\r\n\t}\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tl[i] = read(); r[i] = read();\r\n\t\ta[i * 2 - 1].num = l[i]; a[i * 2 - 1].op = 1;\r\n\t\ta[i * 2].num = r[i] + 1; a[i * 2].op = -1;\r\n\t}\r\n\tsort(a + 1, a + 1 + n + n, cmp);\r\n\tint now = 0;\r\n\tfor (int i = 1; i <= n + n; i++) {\r\n\t\tres = (res + (a[i].num - a[i - 1].num) * C(now, m) % ldc) % ldc;\r\n\t\tnow += a[i].op;\r\n\t}\r\n\tprintf(\"%lld\\n\", res);\r\n\treturn 0;\r\n}"
}