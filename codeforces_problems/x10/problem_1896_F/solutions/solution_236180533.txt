{
    "id": 236180533,
    "contestId": 1896,
    "creationTimeSeconds": 1701944753,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1896,
        "index": "F",
        "name": "Bracket Xoring",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1896,
        "members": [
            {
                "handle": "sheercold"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1700923800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 42,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 13926400,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main () {\n  ios::sync_with_stdio(false);\n  cin.tie(nullptr);\n  int tt;\n  cin >> tt;\n  while (tt--) {\n    int n;\n    cin >> n;\n    string s;\n    cin >> s;\n    bool pos = true;\n    if (s[0] != s[2 * n - 1]) {\n      pos = false;\n    }\n    int sum = 0;\n    for (int i = 0; i < 2 * n; i++) {\n      sum += s[i] - '0';\n    }\n    if (sum % 2 != 0) {\n      pos = false;\n    }\n    if (!pos) {\n      cout << -1 << \"\\n\";\n      continue;\n    }\n    vector<int> first(2 * n);\n    for (int i = 0, l = 0, r = 0; i < n; i++) {\n      if (s[i] != s[2 * n - 1 - i]) {\n        if (l < r) {\n          first[i] = 1;\n          first[2 * n - 1 - i] = 1;\n          ++l;\n          --r;\n        } else {\n          first[i] = 0;\n          first[2 * n - 1 - i] = 0;\n          --l;\n          ++r;\n        }\n      } else {\n        first[i] = 1;\n        first[2 * n - 1 - i] = 0;\n        ++l;\n        ++r;\n      }\n    }\n    vector<int> ns(2 * n);\n    for (int i = 0, pr = 0, v = 0; i < 2 * n; i++) {\n      ns[i] = s[i] - '0';\n      if (v == 0) {\n        pr = 1;\n      } else {\n        pr ^= first[i] ^ first[i - 1] ^ 1;\n      }\n      ns[i] ^= pr;\n      if (first[i]) {\n        ++v;\n      } else {\n        --v;\n      }\n    }\n    vector<vector<int>> ans;\n    ans.push_back(first);\n    if (ns[0] == 1) {\n      for (int i = 0; i < 2 * n; i++) {\n          first[i] = (i % 2) ^ 1;\n      }\n      for (int i = 0, pr = 0, v = 0; i < 2 * n; i++) {\n        if (v == 0) {\n          pr = 1;\n        } else {\n          pr ^= first[i] ^ first[i - 1] ^ 1;\n        }\n        ns[i] ^= pr;\n        if (first[i]) {\n          ++v;\n        } else {\n          --v;\n        }\n      }\n      ans.push_back(first);\n    }\n    vector<int> second(2 * n);\n    for (int i = 0, l = 0, r = 0; i < n; i++) {\n      if (ns[i] == 0) {\n        first[i] = second[i] = 1;\n        first[2 * n - 1 - i] = second[2 * n - 1 - i] = 0;\n        ++l;\n        ++r;\n      } else {\n        if (l < r) {\n          first[i] = 1;\n          second[i] = 0;\n          first[2 * n - 1 - i] = 0;\n          second[2 * n - 1 - i] = 1;\n          ++l;\n          --r;\n        } else {\n          first[i] = 0;\n          second[i] = 1;\n          first[2 * n - 1 - i] = 1;\n          second[2 * n - 1 - i] = 0;\n          --l;\n          ++r;\n        }\n      }\n    }\n    ans.push_back(first);\n    ans.push_back(second);\n    cout << ans.size() << '\\n';\n    for (auto x : ans) {\n      for (auto b : x) {\n        if (b) {\n          cout << \"(\";\n        } else {\n          cout << \")\";\n        }\n      }\n      cout << '\\n';\n    }\n  }\n  return 0;\n}\n"
}