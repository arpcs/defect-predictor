{
    "id": 218040763,
    "contestId": 516,
    "creationTimeSeconds": 1691595198,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 516,
        "index": "D",
        "name": "Drazil and Morning Exercise",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2800,
        "tags": [
            "dfs and similar",
            "dp",
            "dsu",
            "trees",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 516,
        "members": [
            {
                "handle": "ImALAS"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1424190900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 42,
    "timeConsumedMillis": 546,
    "memoryConsumedBytes": 23347200,
    "source": "#include <bits/stdc++.h>\r\n#define pb emplace_back\r\n#define fir first\r\n#define sec second\r\n\r\nusing i64 = long long;\r\nusing pii = std::pair<int, int>;\r\nusing pli = std::pair<i64, int>;\r\nconst int maxn = 1e5 + 5;\r\nvoid chkmax(int& x, int y) { if(y > x) x = y; return ; }\r\nvoid chkmax(i64& x, i64 y) { if(y > x) x = y; return ; }\r\nstd::vector<pii> G[maxn];\r\nbool vis[maxn];\r\nint n, pre[maxn], sz[maxn], ans;\r\ni64 f[maxn][2];\r\npli a[maxn];\r\nint find(int x) { return x == pre[x] ? x : pre[x] = find(pre[x]); }\r\nvoid merge(int x, int y) {\r\n\tx = find(x), y = find(y);\r\n\tif(x == y) return ;\r\n\tif(sz[x] > sz[y])\r\n\t\tstd::swap(x, y);\r\n\tpre[x] = y; chkmax(ans, sz[y] += sz[x]);\r\n\treturn ;\r\n}\r\n\r\nvoid dfs1(int u, int fa) {\r\n\tf[u][0] = f[u][1] = 0;\r\n\tfor(auto& [v, w] : G[u]) {\r\n\t\tif(v == fa) continue ;\r\n\t\tdfs1(v, u);\r\n\t\ti64 z = f[v][0] + w;\r\n\t\tif(z >= f[u][0])\r\n\t\t\tf[u][1] = f[u][0], f[u][0] = z;\r\n\t\telse if(z >= f[u][1])\r\n\t\t\tf[u][1] = z;\r\n\t}\r\n\treturn ;\r\n}\r\n\r\nvoid dfs2(int u, int fa) {\r\n\ta[u] = {f[u][0], u};\r\n\tfor(auto& [v, w] : G[u]) {\r\n\t\tif(v == fa)\r\n\t\t\tcontinue ;\r\n\t\ti64 tmp1 = f[u][0], tmp2 = f[u][1], tmp3 = f[v][0], tmp4 = f[v][1];\r\n\t\tif(f[u][0] == f[v][0] + w)\r\n\t\t\tf[u][0] = f[u][1];\r\n\t\ti64 z = f[u][0] + w;\r\n\t\tif(z >= f[v][0])\r\n\t\t\tf[v][1] = f[v][0], f[v][0] = z;\r\n\t\telse if(z >= f[v][1])\r\n\t\t\tf[v][1] = z;\r\n\t\tdfs2(v, u);\r\n\t\tf[u][0] = tmp1; f[u][1] = tmp2; f[v][0] = tmp3; f[v][1] = tmp4;\r\n\t}\r\n\treturn ;\r\n}\r\n\r\nint main() {\r\n\tscanf(\"%d\", &n);\r\n\tfor(int i = 1;i < n;++ i) {\r\n\t\tint u, v, c; scanf(\"%d %d %d\", &u, &v, &c);\r\n\t\tG[u].pb(v, c); G[v].pb(u, c);\r\n\t}\r\n\tdfs1(1, 0); dfs2(1, 0);\r\n\tstd::sort(a + 1, a + 1 + n, std::greater<pli>());\r\n\tint q; scanf(\"%d\", &q);\r\n\twhile(q --) {\r\n\t\ti64 x; scanf(\"%lld\", &x); ans = 1;\r\n\t\tfor(int i = 1;i <= n;++ i)\r\n\t\t\tpre[i] = i, sz[i] = 1, vis[i] = false;\r\n\t\tfor(int l = 1, r = 0;l <= n;++ l) {\r\n\t\t\twhile(r < n&&a[l].fir - a[r + 1].fir <= x) {\r\n\t\t\t\t++ r; vis[a[r].sec] = true;\r\n\t\t\t\tfor(auto& [v, w] : G[a[r].sec])\r\n\t\t\t\t\tif(vis[v])\r\n\t\t\t\t\t\tmerge(v, a[r].sec);\r\n\t\t\t}\r\n\t\t\tvis[a[l].sec] = false;\r\n\t\t\t-- sz[find(a[l].sec)];\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", ans);\r\n\t}\r\n\treturn 0;\r\n}"
}