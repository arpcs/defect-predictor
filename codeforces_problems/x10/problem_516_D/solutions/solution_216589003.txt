{
    "id": 216589003,
    "contestId": 516,
    "creationTimeSeconds": 1690812935,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 516,
        "index": "D",
        "name": "Drazil and Morning Exercise",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2800,
        "tags": [
            "dfs and similar",
            "dp",
            "dsu",
            "trees",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 516,
        "members": [
            {
                "handle": "luogu_bot4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1424190900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 42,
    "timeConsumedMillis": 732,
    "memoryConsumedBytes": 11980800,
    "source": "// LUOGU_RID: 118342622\n#include<bits/stdc++.h>\r\n#define llong long long\r\n#define mkpr make_pair\r\n#define riterator reverse_iterator\r\nusing namespace std;\r\nconst int N = 1e5;\r\nstruct Edge\r\n{\r\n    int v,nxt; llong w;\r\n} e[(N<<1)+3];\r\nint fe[N+3];\r\nint fa[N+3];\r\nllong dis[N+3];\r\nint ans[N+3];\r\nint stk[N+3];\r\nint n,q,en,rt,diau,diav,tp; llong l;\r\n \r\nvoid addedge(int u,int v,int w)\r\n{\r\n    en++; e[en].v = v; e[en].w = w;\r\n    e[en].nxt = fe[u]; fe[u] = en;\r\n}\r\n \r\nvoid dfs1(int u,int tfa)\r\n{\r\n    for(int i=fe[u]; i; i=e[i].nxt)\r\n    {\r\n        int v = e[i].v; if(v==tfa) continue;\r\n        dis[v] = dis[u]+e[i].w;\r\n        dfs1(v,u);\r\n    }\r\n}\r\nvoid dfs2(int u,int tfa)\r\n{\r\n    for(int i=fe[u]; i; i=e[i].nxt)\r\n    {\r\n        int v = e[i].v; if(v==tfa) continue;\r\n        dis[v] = dis[u]+e[i].w;\r\n        dfs2(v,u);\r\n    }\r\n}\r\nvoid dfs3(int u,int tfa,llong tdis)\r\n{\r\n    dis[u] = max(dis[u],tdis);\r\n    for(int i=fe[u]; i; i=e[i].nxt)\r\n    {\r\n        int v = e[i].v; if(v==tfa) continue;\r\n        dfs3(v,u,tdis+e[i].w);\r\n    }\r\n}\r\nvoid dfs4(int u)\r\n{\r\n    stk[++tp] = u;\r\n    int left = 0,right = tp;\r\n    while(left<right)\r\n    {\r\n        int mid = (left+right+1)>>1;\r\n        if(dis[stk[mid]]<dis[u]-l) {left = mid;}\r\n        else {right = mid-1;}\r\n    }\r\n//  printf(\"u=%d tp=%d pos=%d\\n\",u,tp,left);\r\n    ans[u]++; ans[stk[left]]--;\r\n    for(int i=fe[u]; i; i=e[i].nxt)\r\n    {\r\n        int v = e[i].v; if(v==fa[u]) continue; fa[v] = u;\r\n        dfs4(v);\r\n        ans[u] += ans[v];\r\n    }\r\n    tp--;\r\n}\r\n \r\nint main()\r\n{\r\n    scanf(\"%d\",&n);\r\n    for(int i=1; i<n; i++) {int u,v,w; scanf(\"%d%d%d\",&u,&v,&w); addedge(u,v,w); addedge(v,u,w);}\r\n    dfs1(1,0);\r\n    for(int i=1; i<=n; i++) {if(dis[i]>dis[diau]) {diau = i;}}\r\n    dis[diau] = 0ll; dfs2(diau,0);\r\n    for(int i=1; i<=n; i++) {if(dis[i]>dis[diav]) {diav = i;}}\r\n    dfs3(diav,0,0ll);\r\n    for(int i=1; i<=n; i++) {if(rt==0||dis[i]<dis[rt]) {rt = i;}}\r\n    scanf(\"%d\",&q);\r\n    while(q--)\r\n    {\r\n        scanf(\"%I64d\",&l); for(int i=1; i<=n; i++) ans[i] = 0;\r\n        dfs4(rt);\r\n        int fans = 0; for(int i=1; i<=n; i++) fans = max(fans,ans[i]);\r\n        printf(\"%d\\n\",fans);\r\n    }\r\n    return 0;\r\n}"
}