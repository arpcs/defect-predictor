{
    "id": 224258880,
    "contestId": 516,
    "creationTimeSeconds": 1695279598,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 516,
        "index": "D",
        "name": "Drazil and Morning Exercise",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2800,
        "tags": [
            "dfs and similar",
            "dp",
            "dsu",
            "trees",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 516,
        "members": [
            {
                "handle": "yingxue"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1424190900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 1622,
    "memoryConsumedBytes": 18432000,
    "source": "#include<bits/stdc++.h>\r\n#define il inline\r\nusing namespace std;\r\nil int read()\r\n{\r\n    int xr=0,F=1; char cr;\r\n    while(cr=getchar(),cr<'0'||cr>'9') if(cr=='-') F=-1;\r\n    while(cr>='0'&&cr<='9')\r\n        xr=(xr<<3)+(xr<<1)+(cr^48),cr=getchar();\r\n    return xr*F;\r\n}\r\n#define int long long\r\nconst int N=1e5+5;\r\nint n,q;\r\nstruct edge{int nxt,to,w;} e[N<<1];\r\nint head[N],cnt;\r\nil void add(int u,int v,int w) {e[++cnt]={head[u],v,w};head[u]=cnt;}\r\nint mx,rt,f[N];\r\nvoid dfs(int u,int fa,int dep)\r\n{\r\n    if(dep>mx) mx=dep,rt=u;\r\n    f[u]=max(f[u],dep);\r\n    for(int i=head[u];i;i=e[i].nxt)\r\n    {\r\n        int v=e[i].to,w=e[i].w;\r\n        if(v!=fa) dfs(v,u,dep+w);\r\n    }\r\n}\r\nint p[N],fa[N],siz[N],ans;\r\nbool cmp(int x,int y) {return f[x]>f[y];}\r\nint find(int x) {return fa[x]==x?x:fa[x]=find(fa[x]);}\r\nil void merge(int x,int y)\r\n{\r\n    if(find(x)==find(y)) return;\r\n    siz[find(x)]+=siz[find(y)],fa[find(y)]=find(x);\r\n    ans=max(ans,siz[find(x)]);\r\n}\r\nil void ins(int x)\r\n{\r\n    for(int i=head[x];i;i=e[i].nxt)\r\n    {\r\n        int v=e[i].to;\r\n        if(f[v]>=f[x]) merge(v,x);\r\n    }\r\n}\r\nil int solve(int lim)\r\n{\r\n    ans=0;\r\n    for(int i=1;i<=n;i++) p[i]=fa[i]=i,siz[i]=1;\r\n    sort(p+1,p+n+1,cmp);\r\n    for(int l=1,r=1;l<=n;l++)\r\n    {\r\n        while(r<=n&&f[p[l]]-f[p[r]]<=lim) ins(p[r]),r++;\r\n        siz[find(p[l])]--;\r\n    }\r\n    return ans;\r\n}\r\nsigned main()\r\n{\r\n    n=read();\r\n    for(int i=1;i<n;i++) \r\n    {\r\n        int u=read(),v=read(),w=read();\r\n        add(u,v,w),add(v,u,w);\r\n    }\r\n    dfs(1,0,0),dfs(rt,0,0),dfs(rt,0,0);\r\n    q=read();\r\n    while(q--)\r\n    {\r\n        int lim=read();\r\n        printf(\"%lld\\n\",solve(lim));\r\n    }\r\n    return 0;\r\n}\r\n    "
}