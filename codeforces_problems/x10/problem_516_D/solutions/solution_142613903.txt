{
    "id": 142613903,
    "contestId": 516,
    "creationTimeSeconds": 1642082459,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 516,
        "index": "D",
        "name": "Drazil and Morning Exercise",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2800,
        "tags": [
            "dfs and similar",
            "dp",
            "dsu",
            "trees",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 516,
        "members": [
            {
                "handle": "ycx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1424190900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 42,
    "timeConsumedMillis": 342,
    "memoryConsumedBytes": 24064000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nconst int maxn=2e5+5;\r\nconst int maxm=2e5+5;\r\nint n,m,x,y,w,hd[maxn],cnt,fa[maxn],up[maxn],f[maxn],g[maxn],id[maxn],siz[maxn];\r\nint read(){\r\n\tint x=0,f=1;char ch=getchar();\r\n\twhile(!isdigit(ch)){if(ch=='-')f=-1;ch=getchar();}\r\n\twhile(isdigit(ch)){x=x*10+ch-48;ch=getchar();}\r\n\treturn x*f;\t\r\n}\r\nstruct Edge{\r\n\tint nxt,to,val;\t\r\n}edge[maxm];\r\nvoid add(int u,int v,int w){\r\n\tedge[++cnt].nxt=hd[u];\r\n\tedge[cnt].to=v;\r\n\tedge[cnt].val=w;\r\n\thd[u]=cnt;\r\n\treturn ;\t\r\n}\r\nvoid dfs(int u){\r\n\tfor(int i=hd[u];i;i=edge[i].nxt){\r\n\t\tint v=edge[i].to;\r\n\t\tif(v==fa[u])continue;\r\n\t\tfa[v]=u;dfs(v);\r\n\t\tg[u]=max(g[u],f[v]+edge[i].val);\r\n\t\tif(g[u]>f[u])swap(g[u],f[u]);\r\n\t}\r\n\treturn ;\r\n}\r\nbool cmp(int a,int b){return f[a]==f[b]?a<b:f[a]<f[b];}\r\nvoid dfs1(int u){\r\n\tfor(int i=hd[u];i;i=edge[i].nxt){\r\n\t\tint v=edge[i].to;\r\n\t\tif(v==fa[u])continue;\r\n\t\tg[v]=max(g[v],((f[v]+edge[i].val==f[u])?g[u]:f[u])+edge[i].val);\r\n\t\tif(g[v]>f[v])swap(g[v],f[v]);\r\n\t\tdfs1(v);\r\n\t}\r\n\tfor(int i=hd[u];i;i=edge[i].nxt){\r\n\t\tint v=edge[i].to;\r\n\t\tif(cmp(u,v))up[v]=u;\r\n\t\telse up[u]=v;\r\n\t}\r\n\treturn ;\r\n}\r\nint find(int x){return fa[x]==x?x:fa[x]=find(fa[x]);}\r\nint solve(int d){\r\n\tint res=0;\r\n\tfor(int i=1;i<=n;i++)fa[i]=i,siz[i]=1;\r\n\tfor(int l=n,r=n;l>=1;l--){\r\n\t\twhile(f[id[r]]-f[id[l]]>d)siz[find(id[r--])]--;\r\n\t\tres=max(res,siz[id[l]]);\r\n\t\tfa[id[l]]=up[id[l]];\r\n\t\tsiz[fa[id[l]]]+=siz[id[l]];\r\n\t}\r\n\treturn res;\r\n}\r\nsigned main(){\r\n\tn=read();\r\n\tfor(int i=1;i<n;i++){\r\n\t\tx=read(),y=read(),w=read();\r\n\t\tadd(x,y,w),add(y,x,w);\t\r\n\t}\r\n\tdfs(1);dfs1(1);\r\n\tfor(int i=1;i<=n;i++)id[i]=i;\r\n\tsort(id+1,id+n+1,cmp);\r\n//\tfor(int i=1;i<=n;i++)cout<<up[i]<<\" \";\r\n\tm=read();\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tx=read();\r\n\t\tcout<<solve(x)<<endl;\t\r\n\t}\r\n\treturn 0;\t\r\n}"
}