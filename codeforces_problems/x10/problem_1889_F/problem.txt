{
    "contestId": 1889,
    "index": "F",
    "name": "Doremy's Average Tree",
    "type": "PROGRAMMING",
    "points": 3500.0,
    "rating": 3500,
    "tags": [
        "data structures",
        "dp",
        "greedy",
        "trees"
    ],
    "desc": {
        "title": "F. Doremy's Average Tree",
        "statement": "<p>Doremy has a rooted tree of size $$$n$$$ whose root is vertex $$$r$$$. Initially there is a number $$$w_i$$$ written on vertex $$$i$$$. Doremy can use her power to perform this operation <span class=\"tex-font-style-bf\">at most</span> $$$k$$$ times:</p><ol> <li> Choose a vertex $$$x$$$ ($$$1 \\leq x \\leq n$$$). </li><li> Let $$$s = \\frac{1}{|T|}\\sum_{i \\in T} w_i$$$ where $$$T$$$ is the set of all vertices in $$$x$$$'s subtree. </li><li> For all $$$i \\in T$$$, assign $$$w_i := s$$$. </li></ol><p>Doremy wants to know what is the lexicographically smallest$$$^\\dagger$$$ array $$$w$$$ after performing all the operations. Can you help her?</p><p>If there are multiple answers, you may output any one.</p><p>$$$^\\dagger$$$ For arrays $$$a$$$ and $$$b$$$ both of length $$$n$$$, $$$a$$$ is lexicographically smaller than $$$b$$$ if and only if there exist an index $$$i$$$ ($$$1 \\leq i \\le n$$$) such that $$$a_i &lt; b_i$$$ and for all indices $$$j$$$ such that $$$j&lt;i$$$, $$$a_j=b_j$$$ is satisfied.</p>",
        "inputSpecification": "<p>The input consists of multiple test cases. The first line contains a single integer $$$t$$$ ($$$1\\le t\\le 10^4$$$)\u00a0\u2014 the number of test cases. The description of the test cases follows.</p><p>The first line contains three integers $$$n$$$, $$$r$$$, $$$k$$$ ($$$2 \\le n \\le 5000$$$, $$$1 \\le r \\le n$$$, $$$0 \\le k \\le \\min(500,n)$$$).</p><p>The second line contains $$$n$$$ integers $$$w_1,w_2,\\ldots,w_n$$$ ($$$1 \\le w_i \\le 10^6$$$).</p><p>Each of the next $$$n-1$$$ lines contains two integers $$$u_i$$$, $$$v_i$$$ ($$$1 \\leq u_i, v_i \\leq n$$$), representing an edge between $$$u_i$$$ and $$$v_i$$$.</p><p>It is guaranteed that the given edges form a tree.</p><p>It is guaranteed that the sum of $$$n$$$ does not exceed $$$50\\,000$$$.</p>",
        "outputSpecification": "<p>For each test case, In the first line, output a single integer $$$cnt$$$ ($$$0 \\le cnt \\le k$$$)\u00a0\u2014 the number of operations you perform.</p><p>Then, in the second line output $$$cnt$$$ integers $$$p_1,p_2,\\ldots,p_{cnt}$$$\u00a0\u2014 $$$x$$$ is chosen to be $$$p_i$$$ for $$$i$$$-th operation.</p><p>If there are multiple answers, you may output any one.</p>",
        "samples": [
            {
                "input": "<div class=\"test-example-line test-example-line-even test-example-line-0\">4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">6 1 1</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 9 2 6 1 8</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 2</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">2 4</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 6</div><div class=\"test-example-line test-example-line-odd test-example-line-1\">3 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">7 7 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">3 1 3 3 1 1 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">7 1</div><div class=\"test-example-line test-example-line-even test-example-line-2\">7 2</div><div class=\"test-example-line test-example-line-even test-example-line-2\">7 4</div><div class=\"test-example-line test-example-line-even test-example-line-2\">1 5</div><div class=\"test-example-line test-example-line-even test-example-line-2\">2 3</div><div class=\"test-example-line test-example-line-even test-example-line-2\">4 6</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">6 5 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 1 3 1 1 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 3</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 1</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">5 6</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">3 4</div><div class=\"test-example-line test-example-line-odd test-example-line-3\">1 2</div><div class=\"test-example-line test-example-line-even test-example-line-4\">3 2 1</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1000000 999999 999997</div><div class=\"test-example-line test-example-line-even test-example-line-4\">2 1</div><div class=\"test-example-line test-example-line-even test-example-line-4\">1 3</div>",
                "output": "\n1\n2\n2\n1 4\n1\n5\n1\n1\n"
            }
        ],
        "note": "<p>In the first test case:</p><p><img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/e2fb0b63efe33e8821527c4e53c108316ad1579d.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></p><p>At first $$$w=[1,9,2,6,1,8]$$$. You can choose some vertex $$$x$$$ to perform at most one operation.</p><ul> <li> If $$$x=1$$$, $$$w=[\\frac{9}{2},\\frac{9}{2},\\frac{9}{2},\\frac{9}{2},\\frac{9}{2},\\frac{9}{2}]$$$. </li><li> If $$$x=2$$$, $$$w=[1,\\frac{15}{2},2,\\frac{15}{2},1,8]$$$. </li><li> If $$$x=3$$$, $$$w=[1,9,\\frac{11}{3},6,\\frac{11}{3},\\frac{11}{3}]$$$. </li><li> If $$$x \\in \\{4, 5, 6\\}$$$, $$$w=[1,9,2,6,1,8]$$$. </li><li> If you don't perform any operation, $$$w=[1,9,2,6,1,8]$$$. </li></ul><p>$$$w$$$ is lexicographically smallest when $$$x=2$$$.</p>"
    }
}