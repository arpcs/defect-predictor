{
    "id": 235834297,
    "contestId": 1889,
    "creationTimeSeconds": 1701774368,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1889,
        "index": "F",
        "name": "Doremy's Average Tree",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3500,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1889,
        "members": [
            {
                "handle": "aa11113"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1698503700
    },
    "programmingLanguage": "Python 3",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 102400,
    "source": "import sys\r\nsys.setrecursionlimit(10**6)\r\ndef f(kkk,passed,g):\r\n    q=[kkk]\r\n    bfs=[]\r\n    so=0\r\n    d=0\r\n    while q:\r\n        a=q.pop(0)\r\n        bfs.append(a)\r\n        so+=passed[a]\r\n        d+=1\r\n        for l in g[a]:\r\n            q.append(l)\r\n    so/=d\r\n    for ll in bfs:\r\n        passed[ll]=so\r\n    return passed\r\n    \r\n\r\n\r\nfor o in range(int(input())):\r\n    n,r,k=map(int,input().strip().split())\r\n    w=list(map(int,input().strip().split()))\r\n    g=[[]for _ in range(n)]\r\n    gg=[]\r\n    for pp in range(n-1):\r\n        u,v=map(int,input().strip().split())\r\n        if v==r:\r\n            u,v=v,u\r\n        gg.append(u-1)\r\n        g[u-1].append(v-1)\r\n        g[v-1].append(u-1)\r\n    rrr=[r]\r\n    while rrr:\r\n        b=rrr.pop(0)\r\n        for m in g[b]:\r\n            if b in g[m]:\r\n                g[m].remove(b)\r\n            rrr.append(m)\r\n    h=[]\r\n    ans=0\r\n    ind=-2345\r\n    initial=w.copy()\r\n    ww=w.copy()\r\n    lll=[]\r\n    for oo in range(k):\r\n        flag=0\r\n        for kkk in range(n):\r\n            if kkk in lll:\r\n                continue\r\n            passed=ww.copy()\r\n            te=f(kkk,passed,g)\r\n            if te<initial:\r\n                initial=te\r\n                ind=kkk+1\r\n                flag=1\r\n        if flag==1:\r\n            h.append(ind)\r\n            lll.append(ind-1)\r\n            ans+=1\r\n            flag=0\r\n            ww=initial.copy()\r\n        else:\r\n            break\r\n    print(ans)\r\n    if ans>0:\r\n        print(*h)"
}