{
    "id": 233291779,
    "contestId": 514,
    "creationTimeSeconds": 1700310272,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 514,
        "index": "C",
        "name": "Watto and Mechanism",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "binary search",
            "data structures",
            "hashing",
            "string suffix structures",
            "strings"
        ]
    },
    "author": {
        "contestId": 514,
        "members": [
            {
                "handle": "dsak1aa"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1423931400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 998,
    "memoryConsumedBytes": 7372800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nusing ll = long long;\r\nconst int N = 6e5 + 10;\r\nconst ll mod = 1e12 + 7;\r\nll p[N];\r\nset<ll> st;\r\nint n, m;\r\n\r\nll get (string s) {\r\n\tll res = 0;\r\n\tfor (int i = 0; i < s.size(); ++i) {\r\n\t\tres = (res * 131 + s[i]) % mod;\r\n\t}\r\n\treturn res;\r\n}\r\nint main() {\r\n\tcin >> n >> m;\t\r\n\tfor (int i = 0; i < n; ++i) {\r\n\t\tstring s;\r\n\t\tcin >> s;\r\n\t\tst.insert(get(s));\t\r\n\t}\r\n\tp[0] = 1;\r\n\tfor (int i = 1; i < N; ++i) p[i] = (p[i - 1] * 131) % mod;\r\n\t\r\n\tfor (int i = 0; i < m; ++i) {\r\n\t\tstring s;\r\n\t\tcin >> s;\r\n\t\tll hs = get(s);\r\n\t\tbool ok = 0;\r\n\t\tfor (int j = 0; j < s.size(); ++j) {\r\n\t\t\t\r\n\t\t\tfor (int c = 'a'; c <= 'c'; ++c) {\r\n\t\t\t\tif (c != s[j]) {\r\n\t\t\t\t\tll ths = (hs + (c - s[j]) * p[s.size() - j - 1]) % mod;\r\n\t\t\t\t\tths = (ths + mod) % mod;\r\n\t\t\t\t\tif (st.count(ths)) {\r\n\t\t\t\t\t\tok = 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t\tif (ok) break;\r\n\t\t}\r\n\t\tif (ok) cout << \"YES\" << \"\\n\";\r\n\t\telse cout << \"NO\" << \"\\n\";\r\n\t}\r\n\treturn 0;\r\n}"
}