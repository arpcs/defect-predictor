{
    "id": 235820420,
    "contestId": 1744,
    "creationTimeSeconds": 1701767244,
    "relativeTimeSeconds": 3744,
    "problem": {
        "contestId": 1744,
        "index": "C",
        "name": "Traffic Light",
        "type": "PROGRAMMING",
        "rating": 1000,
        "tags": [
            "binary search",
            "implementation",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1744,
        "members": [
            {
                "handle": "Abdulrahman-Nasser"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1701763500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int  long long\r\n#define endl \"\\n\"\r\n#define all(v) v.begin(), v.end()\r\n#define allr(v) v.rbegin(), v.rend()\r\nint gcds(int x, int y)\r\n{\r\n    return(!y ? x : gcd(y, x % y));\r\n}\r\nbool prime(int n){\r\n    if (n == 1 || n == 0)\r\n        return 0;\r\n    for (int i = 2; i * i <= n; i++)\r\n        if (n % i == 0)\r\n            return false;\r\n    return true;\r\n}\r\n\r\n\r\nint gcd(int a, int b) \r\n{ \r\n  if (a == 0) \r\n    return b; \r\n  return gcd(b % a, a); \r\n} \r\nint lcm(int x, int y)\r\n{\r\n    return x / gcd(x, y) * y;\r\n}\r\n\r\nint gcdVec(vector<int> arr, int n) \r\n{ \r\n    int result = arr[0]; \r\n    for (int i = 1; i < n; i++) \r\n    { \r\n        result = gcd(arr[i], result); \r\n  \r\n        if(result == 1) \r\n            return 1; \r\n    } \r\n    return result; \r\n} \r\n\r\nbool cmp(pair<int,char> a, pair<int,char> b){\r\n    if(a.first != b.first){\r\n        return a.first < b.first;\r\n    }\r\n    return a.second > b.second;\r\n}\r\n\r\n\r\nvoid solve() {\r\n    \r\n    int n; cin >> n;\r\n    char c; cin >> c;\r\n    string s;cin >> s;\r\n    int mx = 0;\r\n    bool ok = 0;\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        if(s[i] == 'g')ok = 1;\r\n    }\r\n    if(!ok){\r\n        cout << n << endl;\r\n        return\r\n    }\r\n    \r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        if(s[i] == c){\r\n            int j = i;\r\n            int cnt = 0;\r\n            while(s[j] != 'g'){\r\n                j++;\r\n                if(j == n ){\r\n                    cnt += j-i;\r\n                    j = 0;\r\n                }\r\n            }\r\n            if(cnt)\r\n                mx = max(mx, j + cnt);\r\n            else\r\n                mx = max(mx, j-i);\r\n        }\r\n    }\r\n    \r\n    cout << mx << endl;\r\n    \r\n    \r\n    \r\n    \r\n}\r\n    \r\n    \r\n\r\nsigned main()\r\n{\r\n    ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\r\n\r\n    int t = 1;\r\n    cin >> t;\r\n    while(t--){\r\n        solve();\r\n    }\r\n\r\n}"
}