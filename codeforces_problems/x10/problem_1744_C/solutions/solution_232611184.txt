{
    "id": 232611184,
    "contestId": 1744,
    "creationTimeSeconds": 1699875003,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1744,
        "index": "C",
        "name": "Traffic Light",
        "type": "PROGRAMMING",
        "rating": 1000,
        "tags": [
            "binary search",
            "implementation",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1744,
        "members": [
            {
                "handle": "danilka200300"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1665930900
    },
    "programmingLanguage": "Clang++17 Diagnostics",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 108,
    "memoryConsumedBytes": 10547200,
    "source": "#include <iostream>\r\n#include <vector>\r\n\r\nint main() {\r\n\tstd::vector<int> result;\r\n\tint t = 1;\r\n\tstd::cin >> t;\r\n\tfor (int i = 0; i < t; i += 1) {\r\n\t\tint n = 1;\r\n\t\tchar c;\r\n\t\tstd::cin >> n >> c;\r\n\t\tstd::string s;\r\n\t\tstd::cin >> s;\r\n\t\tif (c == 'g') {\r\n\t\t\tresult.push_back(0);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tbool flag1 = false;\r\n\t\tint k = 0;\r\n\t\tint maxi = 0;\r\n\t\tfor (int j = 0; j < n; j += 1) {\r\n\t\t\tif ((s[j] == c) && (k == 0)) {\r\n\t\t\t\tflag1 = true;\r\n\t\t\t}\r\n\t\t\tif ((s[j] == 'g') && (k != 0)) {\r\n\t\t\t\tmaxi = std::max(maxi, k);\r\n\t\t\t\tflag1 = false;\r\n\t\t\t\tk = 0;\r\n\t\t\t}\r\n\t\t\tif (flag1) {\r\n\t\t\t\tk += 1;\r\n\t\t\t}\r\n\t\t\tif (n - j == 1) {\r\n\t\t\t\tif (s[j] == c) {\r\n\t\t\t\t\tk = 1;\r\n\t\t\t\t}\r\n\t\t\t\tif (s[j] == 'g') {\r\n\t\t\t\t\tmaxi = std::max(maxi, k);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (s[j] != 'g') {\r\n\t\t\t\t\tint p = 0;\r\n\t\t\t\t\twhile (s[p] != 'g') {\r\n\t\t\t\t\t\tk += 1;\r\n\t\t\t\t\t\tp += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmaxi = std::max(maxi, k);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult.push_back(maxi);\r\n\t}\r\n\tfor (int i = 0; i < result.size(); i += 1) {\r\n\t\tstd::cout << result[i] << \"\\n\";\r\n\t}\r\n}"
}