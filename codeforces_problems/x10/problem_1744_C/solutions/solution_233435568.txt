{
    "id": 233435568,
    "contestId": 1744,
    "creationTimeSeconds": 1700405356,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1744,
        "index": "C",
        "name": "Traffic Light",
        "type": "PROGRAMMING",
        "rating": 1000,
        "tags": [
            "binary search",
            "implementation",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1744,
        "members": [
            {
                "handle": "bkifhr10"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1665930900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 61,
    "memoryConsumedBytes": 921600,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n\nint solve(string& s, int n, char c) {\n    s += s;\n    int cnt = 0, max_distance = 0, flag = 0;\n\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] == c) {\n            flag = 1;\n        }\n        if (s[i] == 'g') {\n            flag = 0;\n            max_distance = max(max_distance, cnt);\n            cnt = 0;\n        }\n        if (flag == 1) {\n            cnt++;\n        }\n    }\n\n    return max_distance;\n}\n\nint main() {\n    int t;\n    cin >> t;\n\n    while (t--) {\n        int n;\n        char c;\n        string s;\n        cin >> n >> c >> s;\n\n        cout << solve(s, n, c) << endl;\n    }\n\n    return 0;\n}\n\n    \t  \t   \t \t\t \t     \t\t\t\t\t\t\t\t"
}