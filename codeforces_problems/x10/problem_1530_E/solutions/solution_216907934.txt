{
    "id": 216907934,
    "contestId": 1530,
    "creationTimeSeconds": 1691012865,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1530,
        "index": "E",
        "name": "Minimax",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "constructive algorithms",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1530,
        "members": [
            {
                "handle": "_helloLad"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1626532500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 64,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 5017600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define IOS ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n#define ll long long\r\n\r\nint main(){\r\n    IOS\r\n    int t;\r\n    cin>>t;\r\n    while(t--){\r\n        string s;\r\n        cin>>s;\r\n        int n;\r\n        n=s.size();\r\n        sort(s.begin(),s.end());\r\n        map<char,int> mp;\r\n        for(auto &it:s){\r\n            mp[it]++;\r\n        }\r\n        vector<int> v;\r\n        vector<char> c;\r\n        for(auto &it:mp){\r\n            c.push_back(it.first);\r\n            v.push_back(it.second);\r\n        }\r\n        int ct;\r\n        int check=0;\r\n        for(int i=0;i<c.size();++i){\r\n            if(v[i]==1){\r\n                ct=i;\r\n                check=1;\r\n                break;\r\n            }\r\n        }\r\n        if(check){\r\n            cout<<c[ct];\r\n            for(auto &it:s){\r\n                if(it!=c[ct]){\r\n                    cout<<it;\r\n                }\r\n            }\r\n            cout<<\"\\n\";\r\n            continue;\r\n        }\r\n        if(c.size()==1){\r\n            cout<<s<<\"\\n\";\r\n            continue;\r\n        }\r\n        v[0]--;\r\n        string res;\r\n        res.push_back(c[0]);\r\n        if(c.size()==2){\r\n            if(v[0]-v[1]>1){\r\n                for(int i=0;i<v[1];++i){\r\n                    res.push_back(c[1]);\r\n                }\r\n                for(int i=0;i<v[0];++i){\r\n                    res.push_back(c[0]);\r\n                }\r\n            }else{\r\n                for(int i=0;i<min(v[0],v[1]);++i){\r\n                    res.push_back(c[0]);\r\n                    res.push_back(c[1]);\r\n                }\r\n                for(int i=0;i<v[0]-min(v[0],v[1]);++i){\r\n                    res.push_back(c[0]);\r\n                }\r\n                for(int i=0;i<v[1]-min(v[0],v[1]);++i){\r\n                    res.push_back(c[1]);\r\n                }\r\n            }\r\n        }\r\n        if(c.size()>2){\r\n            if(v[0]-(n-v[0]-1)>1){\r\n                res.push_back(c[1]);\r\n                for(int i=0;i<v[0];++i){\r\n                    res.push_back(c[0]);\r\n                }\r\n                res.push_back(c[2]);\r\n                v[1]--;\r\n                v[2]--;\r\n                for(int i=1;i<c.size();++i){\r\n                    for(int j=0;j<v[i];++j){\r\n                        res.push_back(c[i]);\r\n                    }\r\n                }\r\n            }else{\r\n                multiset<char> st;\r\n                for(auto &it:s){\r\n                    if(it!=c[0]){\r\n                        st.insert(it);\r\n                    }\r\n                }\r\n                while(1){\r\n                    if(st.size()==0){\r\n                        break;\r\n                    }\r\n                    if(v[0]>0){\r\n                        res.push_back(c[0]);\r\n                    }\r\n                    res.push_back(*st.begin());\r\n                    st.erase(st.begin());\r\n                    v[0]--;\r\n                }\r\n                for(int i=0;i<v[0];++i){\r\n                    res.push_back(c[0]);\r\n                }\r\n            }\r\n        }\r\n        cout<<res<<\"\\n\";\r\n    }\r\n    return 0;\r\n}\r\n\r\n",
    "defect_evaluation_v3": {
        "good solution": 20,
        "wrong solution": 75,
        "compilation error": 5,
        "runtime error": 0
    }
}