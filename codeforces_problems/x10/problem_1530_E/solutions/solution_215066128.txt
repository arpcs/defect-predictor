{
    "id": 215066128,
    "contestId": 1530,
    "creationTimeSeconds": 1690040314,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1530,
        "index": "E",
        "name": "Minimax",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "constructive algorithms",
            "greedy",
            "strings"
        ]
    },
    "author": {
        "contestId": 1530,
        "members": [
            {
                "handle": "Kambar_Z"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1626532500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define For(i, n)           for(int i = 0; i < n; ++i)\r\n#define all(x)              (x).begin(),(x).end()\r\n#define rall(x)             (x).rbegin(),(x).rend()\r\n#define ls(x)               x+x+1\r\n#define rs(x)               x+x+2\r\n#define endl                '\\n'\r\n\r\n#define ld                  long double\r\n#define pii                 pair<int, int>\r\n#define vt                  vector\r\n#define ll                  long long\r\n\r\n#define sim template < class c\r\n#define ris return * this\r\n#define dor > debug & operator <<\r\n#define eni(x) sim > typename \\\r\nenable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\r\nsim > struct rge { c b, e; };\r\nsim > rge<c> range(c i, c j) { return rge<c>{i, j}; }\r\nsim > auto dud(c* x) -> decltype(cerr << *x, 0);\r\nsim > char dud(...);\r\n#define LOCAL\r\nstruct debug {\r\n#ifdef LOCAL\r\n~debug() { cerr << endl; }\r\neni(!=) cerr << boolalpha << i; ris; }\r\neni(==) ris << range(begin(i), end(i)); }\r\nsim, class b dor(pair < b, c > d) {\r\nris << \"(\" << d.first << \", \" << d.second << \")\";\r\n}\r\nsim dor(rge<c> d) {\r\n*this << \"[\";\r\nfor (auto it = d.b; it != d.e; ++it)\r\n    *this << \", \" + 2 * (it == d.b) << *it;\r\nris << \"]\";\r\n}\r\n#else\r\nsim dor(const c&) { ris; }\r\n#endif\r\n};\r\n#define imie(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\r\n\r\ntemplate<typename T>\r\nvoid read(vt<T> & a) {\r\n    For(i, a.size()) cin >> a[i];\r\n}\r\ntemplate<typename T>\r\nvoid print(vt<T> & a) {\r\n    For(i, a.size()) cout << a[i] << \" \";\r\n    cout << endl;\r\n}\r\ntemplate<typename T>\r\nvoid print2(vt<vt<T> > & a) {\r\n    For(i, a.size()) {\r\n        For(j, a[i].size()) cout << a[i][j] << \" \";\r\n        cout << endl;\r\n    }\r\n}\r\ntemplate<typename T>\r\nvoid read2(vt<vt<T> > & a) {\r\n    For(i, a.size()) For(j, a[i].size()) cin >> a[i][j];\r\n}\r\n\r\nconst int MAX = 1e9;\r\nconst int MOD = 1e9+7;\r\nconst int BINT = 32;\r\nconst int BLONG = 64;\r\nconst ll  INF = 1e18;\r\nconst ld  PI  = 3.14159265358979323846;\r\n\r\n// THE SOLUTION IS ALWAYS SIMPLE\r\n// THE CODE IS ALWAYS SHORT\r\n\r\nvoid solve()\r\n{\r\n    string s; cin >> s;\r\n    int n = s.length();\r\n    vt<int> a(n);\r\n    For(i, n) a[i] = s[i] - 'a';\r\n    vt<int> buffer(26);\r\n    int cnt = 0;\r\n    For(i, n) {\r\n        buffer[a[i]]++;\r\n        if (buffer[a[i]] == 1) cnt++;\r\n    }\r\n\r\n    For(i, 26) {\r\n        if (buffer[i] == 1) {\r\n            string ans = \"\";\r\n            ans += char(i + 'a');\r\n            buffer[i]--;\r\n            For(j, 26) {\r\n                while (buffer[j]) {\r\n                    ans += char(j + 'a');\r\n                    buffer[j]--;\r\n                }\r\n            }\r\n            cout << ans << endl;\r\n            return;\r\n        }\r\n    }\r\n\r\n    if (cnt == 1) {\r\n        cout << s << endl;\r\n    } else if (cnt == 2) {\r\n        vt<int> arr;\r\n        For(i, 26) {\r\n            if (buffer[i]) arr.push_back(i);\r\n        }\r\n        string ans = \"\";\r\n        if (buffer[arr[0]] - 2 <= buffer[arr[1]]) {\r\n            int pr = 0;\r\n            if (buffer[arr[pr]] > 1) {\r\n                ans += char(arr[pr] + 'a');\r\n                ans += char(arr[pr] + 'a');\r\n                buffer[arr[pr]] -= 2;\r\n                pr = 1;\r\n            }\r\n            while (buffer[arr[0]] + buffer[arr[1]] != 0) {\r\n                if ((pr == 0 && buffer[arr[0]] != 0) || buffer[arr[1]] == 0) {\r\n                    ans += char(arr[0] + 'a');\r\n                    buffer[arr[0]]--;\r\n                } else if ((pr == 1 && buffer[arr[1]] != 0) || buffer[arr[0]] == 0) {\r\n                    ans += char(arr[1] + 'a');\r\n                    buffer[arr[1]]--;\r\n                }\r\n                pr ^= 1;\r\n            }\r\n        } else {\r\n            int pr = 1;\r\n            if (buffer[arr[pr]] > 1) {\r\n                ans += char(arr[pr] + 'a');\r\n                ans += char(arr[pr] + 'a');\r\n                buffer[arr[pr]] -= 2;\r\n            }\r\n            pr = 1;\r\n            string suffix = \"\";\r\n            while (buffer[arr[0]] + buffer[arr[1]] != 0) {\r\n                if ((pr == 0 && buffer[arr[0]] != 0) || buffer[arr[1]] == 0) {\r\n                    suffix += char(arr[0] + 'a');\r\n                    buffer[arr[0]]--;\r\n                } else if ((pr == 1 && buffer[arr[1]] != 0) || buffer[arr[0]] == 0) {\r\n                    suffix += char(arr[1] + 'a');\r\n                    buffer[arr[1]]--;\r\n                }\r\n                pr ^= 1;\r\n            }\r\n            reverse(all(suffix));\r\n            ans += suffix;\r\n        }\r\n        // print(buffer);\r\n        // print(arr);\r\n        cout << ans << endl;\r\n    } else { \r\n        int first = -1;\r\n        For(i, 26) {\r\n            if (buffer[i]) {\r\n                first = i;\r\n                break;\r\n            }\r\n        }\r\n        if (buffer[first] - 2 > n - buffer[first]) {\r\n            string ans = \"\";\r\n            ans += char(first + 'a');\r\n            buffer[first]--;\r\n            For(i, 26) {\r\n                if (i == first || buffer[i] == 0) continue;\r\n                ans += char(i + 'a');\r\n                buffer[i]--;\r\n                break;\r\n            }\r\n            For(i, 26) {\r\n                while (buffer[i]) {\r\n                    ans += char(i + 'a');\r\n                    buffer[i]--;\r\n                }\r\n            }\r\n            cout << ans << endl;\r\n            return;\r\n        }\r\n        string ans = \"\";\r\n        ans += char(first + 'a');\r\n        buffer[first]--;\r\n        if (buffer[first] != 0) {\r\n            ans += char(first + 'a');\r\n            buffer[first]--;\r\n        }\r\n        For(i, 26) {\r\n            if (i == first || buffer[i] == 0) continue;\r\n\r\n            while (buffer[i]) {\r\n                ans += char(i + 'a');\r\n                if (buffer[first] != 0) {\r\n                    ans += char(first + 'a');\r\n                    buffer[first]--;\r\n                }\r\n                buffer[i]--;\r\n            }\r\n        }\r\n        \r\n        cout << ans << endl;\r\n    }\r\n}\r\n\r\nvoid precalc() {}\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n#ifdef DEBUG\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n#endif\r\n    int T;\r\n    T = 1;\r\n    cin >> T;\r\n    precalc();\r\n    For(t, T) solve();\r\n    return 0;\r\n}"
}