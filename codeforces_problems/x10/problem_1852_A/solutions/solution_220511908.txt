{
    "id": 220511908,
    "contestId": 1852,
    "creationTimeSeconds": 1693055009,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1852,
        "index": "A",
        "name": "Ntarsis' Set",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1800,
        "tags": [
            "binary search",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1852,
        "members": [
            {
                "handle": "_Secret_Ninja"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1690122900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 33,
    "timeConsumedMillis": 312,
    "memoryConsumedBytes": 1843200,
    "source": "/*\r\n     42.\r\n*/\r\n#include <bits/stdc++.h>\r\n// Common file\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n// Including tree_order_statistics_node_update\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n#define int            long long int\r\n#define F              first\r\n#define S              second\r\n#define pb             push_back\r\n#define si             set <int>\r\n#define vi             vector <int>\r\n#define pii            pair <int, int>\r\n#define vpi            vector <pii>\r\n#define vpp            vector <pair<int, pii>>\r\n#define mii            map <int, int>\r\n#define mpi            map <pii, int>\r\n#define spi            set <pii>\r\n#define endl           \"\\n\"\r\n#define sz(x)          ((int) x.size())\r\n#define all(p)         p.begin(), p.end()\r\n#define double         long double\r\n#define que_max        priority_queue <int>\r\n#define que_min        priority_queue <int, vi, greater<int>>\r\n#define bug(...)       __f (#__VA_ARGS__, __VA_ARGS__)\r\n#define print(a)       for(auto x : a) cout << x << \" \"; cout << endl\r\n#define print1(a)      for(auto x : a) cout << x.F << \" \" << x.S << endl\r\n#define print2(a,x,y)  for(int i = x; i < y; i++) cout<< a[i]<< \" \"; cout << endl\r\n#define ll long long\r\n\r\nconst int MOD = 1000000007;\r\ninline int power(int a, int b, int mod)\r\n{\r\n    int x = 1;\r\n    while (b)\r\n    {\r\n        if (b & 1) {x *= a; x%=mod;}\r\n        a *= a;\r\n        a%=mod;\r\n        b >>= 1;\r\n    }\r\n    return x;\r\n}\r\n\r\ntemplate <typename Arg1>\r\nvoid __f (const char* name, Arg1&& arg1) { cout << name << \" : \" << arg1 << endl; }\r\ntemplate <typename Arg1, typename... Args>\r\nvoid __f (const char* names, Arg1&& arg1, Args&&... args)\r\n{\r\n    const char* comma = strchr (names + 1, ',');\r\n    cout.write (names, comma - names) << \" : \" << arg1 << \" | \"; __f (comma + 1, args...);\r\n}\r\n\r\nconst int N = 300005;\r\nconst int inf = 1e18;\r\ndouble eps = 0.00001;\r\n\r\nint findGCD(int a1, int b1) {\r\n   if (b1 == 0){\r\n      return a1;\r\n      \r\n   }\r\n   return findGCD(b1, a1 % b1);\r\n}\r\nlong long lcm(int a, int b)\r\n{\r\n    return (a / findGCD(a, b)) * b;\r\n}\r\nint fact(int x, int y)\r\n{\r\n    int ans = 1;\r\n    for(int i=2; i<=x; i++)\r\n    {\r\n        if(i == (y)) continue;\r\n        ans*=i;\r\n        ans%=MOD;\r\n    }\r\n    return ans;\r\n}\r\n\r\nint gcdExtended(int a, int b, int *x, int *y)\r\n{\r\n    // Base Case\r\n    if (a == 0)\r\n    {\r\n        *x = 0, *y = 1;\r\n        return b;\r\n    }\r\n \r\n    int x1, y1; // To store results of recursive call\r\n    int gcd = gcdExtended(b%a, a, &x1, &y1);\r\n \r\n    // Update x and y using results of recursive\r\n    // call\r\n    *x = y1 - (b/a) * x1;\r\n    *y = x1;\r\n \r\n    return gcd;\r\n}\r\n\r\nint modInverse(int b, int m)\r\n{\r\n    int x, y; // used in extended GCD algorithm\r\n    int g = gcdExtended(b, m, &x, &y);\r\n \r\n    // Return -1 if b and m are not co-prime\r\n    if (g != 1)\r\n        return -1;\r\n \r\n    // m is added to handle negative x\r\n    return (x%m + m) % m;\r\n}\r\n \r\n// Function to compute a/b under modulo m\r\nint modDivide(int a, int b, int m)\r\n{\r\n    a = a % m;\r\n    int inv = modInverse(b, m);\r\n    if (inv == -1)\r\n       return -1;\r\n    else\r\n       return (inv * a) % m;\r\n}\r\n\r\nbool can(int y, int k, int ak, int a1, int m)\r\n{\r\n    for(int j=0; j<=y; j++)\r\n    {\r\n        int s = k*(ak + j) + (a1 + (y-j));\r\n        if(s == m) return true;\r\n    }\r\n    return false;\r\n}\r\nint arr[200005];\r\nbool check(int n, int k, int y)\r\n{\r\n    // bug(y,k);\r\n    while(k--)\r\n    {\r\n        // bug(y);\r\n        int lb = lower_bound(arr, arr+n, y) - arr;\r\n        y-=lb;\r\n    }\r\n    if(y==1) return 0;\r\n    return 1;\r\n    \r\n}\r\n\r\nvoid solve()\r\n{\r\n    int n; cin>>n;\r\n    int k; cin>>k;\r\n    \r\n    for(int i=0; i<n; i++)\r\n    {\r\n        cin>>arr[i];\r\n    }\r\n    int a = 0;\r\n    for(int y= n*k+1; y>0; y/=2)\r\n    {\r\n        while(!check(n, k,  a+y)) a+=y;\r\n    }\r\n    cout<<a<<endl;\r\n}   \r\n\r\n\r\n\r\nint32_t main()\r\n{\r\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\",  \"r\",  stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n    clock_t z = clock();\r\n    // precalc();\r\n    int tt = 1;\r\n    cin >> tt;\r\n    \r\n    for(int i=1;i<=tt; i++)\r\n    {\r\n     // cout<<\"Case #\"<<i<<\": \";\r\n     solve();\r\n     // cout<<'\\n';\r\n    }\r\n    // while (tt--) solve();\r\n\r\n    cerr << \"Run Time : \" << ((double)(clock() - z) / CLOCKS_PER_SEC);\r\n    return 0;\r\n}"
}