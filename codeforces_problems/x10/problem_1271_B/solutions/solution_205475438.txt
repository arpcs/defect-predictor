{
    "id": 205475438,
    "contestId": 1271,
    "creationTimeSeconds": 1683836098,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1271,
        "index": "B",
        "name": "Blocks",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1271,
        "members": [
            {
                "handle": "achhadahappy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1576401300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n#define ll long long\r\n#define int long long\r\n#define endl \"\\n\"\r\n#define ptr(a, n)               \\\r\n    for (int i = 0; i < n; i++) \\\r\n    {                           \\\r\n        cout << a[i] << ' ';    \\\r\n    }\r\n#define fort(z, x, t) for (ll z = x; z < t; z++)\r\n#define rev(z, x, t) for (ll z = t; z > x; z--)\r\n#define arin(a, n)             \\\r\n    ll a[n];                   \\\r\n    for (ll i = 0; i < n; i++) \\\r\n    {                          \\\r\n        cin >> a[i];           \\\r\n    }\r\n#define pb push_back\r\n#define vein(v, n)             \\\r\n    vector<ll> v;              \\\r\n    for (ll i = 0; i < n; i++) \\\r\n    {                          \\\r\n        ll x;                  \\\r\n        cin >> x;              \\\r\n        v.pb(x);               \\\r\n    }\r\n#define seint(s, n)            \\\r\n    set<int> s;                \\\r\n    for (ll i = 0; i < n; i++) \\\r\n    {                          \\\r\n        ll x;                  \\\r\n        cin >> x;              \\\r\n        s.insert(x);           \\\r\n    }\r\n#define vint(v) vector<ll> v;\r\n#define vstring(vs, n)         \\\r\n    vector<string> vs;         \\\r\n    for (ll i = 0; i < n; i++) \\\r\n    {                          \\\r\n        string s;              \\\r\n        cin >> s;              \\\r\n        vs.pb(s);              \\\r\n    }\r\n#define num(n) \\\r\n    ll n;      \\\r\n    cin >> n;\r\n#define out(n) cout << n << endl;\r\n#define sortv(v) sort(v.begin(), v.end());\r\n#define mpll map<ll, ll> mpi;\r\n#define mpchar map<char, ll> mpc;\r\n#define cin(a, n, b) \\\r\n    f(i, n)          \\\r\n    {                \\\r\n        cin >> a[i]; \\\r\n        b[i] = a[i]; \\\r\n    }\r\n#define yes cout << \"YES\" << endl;\r\n#define no cout << \"NO\" << endl;\r\ntypedef tree<ll, null_type, less_equal<ll>, rb_tree_tag, tree_order_statistics_node_update> ordered_multiset;\r\ntypedef tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\r\nconst int N = 1e5 + 10;\r\nvoid solve()\r\n{\r\n    num(n);\r\n    string s;\r\n    cin >> s;\r\n    int chk = 0;\r\n    for (int i = 0; i < n - 1; i++)\r\n    {\r\n        if (s[i] != s[i + 1])\r\n            chk++;\r\n    }\r\n    if (!chk)\r\n    {\r\n        cout << 0 << endl;\r\n        return;\r\n    }\r\n    string s1 = \"\";\r\n    int ct = 1;\r\n    string real = s;\r\n    while (ct != 0 && s.size() > 1)\r\n    {\r\n        ct = 0;\r\n        s1 = \"\";\r\n        for (int i = 0; i < s.size() - 1; i++)\r\n        {\r\n            // cout << i << endl;\r\n            if (s[i] == s[i + 1])\r\n            {\r\n                ct++;\r\n                i++;\r\n                continue;\r\n            }\r\n            s1 += s[i];\r\n        }\r\n        int xct = 1;\r\n        for (int i = s.size() - 1; i >= 1; i--)\r\n        {\r\n            if (s[i] == s[i - 1])\r\n            {\r\n                xct++;\r\n            }\r\n            else\r\n            {\r\n                break;\r\n            }\r\n        }\r\n        if (xct % 2 == 1)\r\n        {\r\n            s1 += s[s.size() - 1];\r\n        }\r\n        s = s1;\r\n        // cout << s1 << endl;\r\n    }\r\n    // cout << s1 << endl;\r\n    if (s.size() % 4 == 2)\r\n    {\r\n        cout << -1 << endl;\r\n        return;\r\n    }\r\n    int rem = s.size() % 4;\r\n    s1 = s;\r\n    // cout << rem << endl;\r\n    if (rem == 2)\r\n    {\r\n        cout << -1 << endl;\r\n        return;\r\n    }\r\n    s = real;\r\n    vector<int> ans;\r\n    // cout << s1 << endl;\r\n    if (rem == 0)\r\n    {\r\n        for (int i = 0; i < n - 1; i++)\r\n        {\r\n            if (s[i] == s[i + 1])\r\n            {\r\n                if (s[i] == 'W')\r\n                {\r\n                    ans.pb(i + 1);\r\n                    s[i] = 'B';\r\n                    s[i + 1] = 'B';\r\n                }\r\n                i++;\r\n            }\r\n            else\r\n            {\r\n                if (s[i] == 'B')\r\n                {\r\n                    continue;\r\n                }\r\n                else\r\n                {\r\n                    ans.pb(i + 1);\r\n                    s[i] = 'B';\r\n                    s[i + 1] = 'W';\r\n                }\r\n            }\r\n        }\r\n\r\n        for (int i = 0; i < n - 1; i++)\r\n        {\r\n            if (s[i] == s[i + 1])\r\n            {\r\n                if (s[i] == 'W')\r\n                {\r\n                    ans.pb(i + 1);\r\n                    s[i] = 'B';\r\n                    s[i + 1] = 'B';\r\n                }\r\n                i++;\r\n            }\r\n            else\r\n            {\r\n                if (s[i] == 'B')\r\n                {\r\n                    ans.pb(i + 1);\r\n                    s[i] = 'W';\r\n                    s[i + 1] = 'B';\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else\r\n    {\r\n        char x = s1[0];\r\n        // cout << s1 << endl;\r\n        if (rem == 1)\r\n        {\r\n            for (int i = 0; i < n - 1; i++)\r\n            {\r\n                if (s[i] != x)\r\n                {\r\n                    if (s[i] == 'W')\r\n                    {\r\n                        s[i] = 'B';\r\n                    }\r\n                    else\r\n                    {\r\n                        s[i] = 'W';\r\n                    }\r\n                    ans.pb(i + 1);\r\n                    if (s[i + 1] == 'W')\r\n                    {\r\n                        s[i + 1] = 'B';\r\n                    }\r\n                    else\r\n                    {\r\n                        s[i + 1] = 'W';\r\n                    }\r\n                }\r\n            }\r\n            set<char> st;\r\n            for (int i = 0; i < s.size(); i++)\r\n            {\r\n                st.insert(s[i]);\r\n            }\r\n            if (st.size() > 1)\r\n            {\r\n                for (int i = 0; i < s.size() - 1; i++)\r\n                {\r\n                    if (s[i] == s[i + 1])\r\n                    {\r\n                        ans.pb(i + 1);\r\n                    }\r\n                }\r\n            }\r\n            // cout << s << endl;\r\n        }\r\n        else\r\n        {\r\n            for (int i = 0; i < n - 1; i++)\r\n            {\r\n                if (s[i] == x)\r\n                {\r\n                    if (s[i] == 'W')\r\n                    {\r\n                        s[i] = 'B';\r\n                    }\r\n                    else\r\n                    {\r\n                        s[i] = 'W';\r\n                    }\r\n                    ans.pb(i + 1);\r\n                    if (s[i + 1] == 'W')\r\n                    {\r\n                        s[i + 1] = 'B';\r\n                    }\r\n                    else\r\n                    {\r\n                        s[i + 1] = 'W';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    cout << ans.size() << endl;\r\n    for (auto i : ans)\r\n    {\r\n        cout << i << \" \";\r\n    }\r\n    cout << endl;\r\n}\r\nsigned main()\r\n{\r\n    // #ifndef ONLINE_JUDGE\r\n    // freopen(\"input.txt\", \"r\", stdin);\r\n    // freopen(\"output.txt\", \"w\", stdout);\r\n    // #endif\r\n    std::ios::sync_with_stdio(false);\r\n    std::cin.tie(0);\r\n    solve();\r\n    return 0;\r\n}"
}