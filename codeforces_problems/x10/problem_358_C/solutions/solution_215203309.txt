{
    "id": 215203309,
    "contestId": 358,
    "creationTimeSeconds": 1690123740,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 358,
        "index": "C",
        "name": "Dima and Containers",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 358,
        "members": [
            {
                "handle": "SamyakSinghania"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1382715000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n#define int long long\r\n#define double long double\r\n#define endl \"\\n\"\r\n#define input(a) for(auto &x:a) cin>>x\r\n#define all(x) x.begin(),x.end()\r\n#define rsort(c) sort(all(c)); reverse(all(c))\r\n#define sz(c) (int)c.size()\r\n#define print(a) for(auto x : a) cout << x << \" \"; cout << endl\r\n#define print1(a) for(auto x : a) cout << x.first << \" \" << x.second << endl\r\n#define printall(a) for(auto x:a){ print(x); } cout<<endl\r\n#define fil(ar, val) memset(ar, val, sizeof(ar))  // 0x3f for inf, 0x80 for -INF can also use with pairs\r\n\r\ntypedef vector<int> vi;\r\ntypedef vector<vector<int>> vvi;\r\ntypedef pair<int,int> pi;\r\ntypedef vector<pair<int,int>> vpi;\r\n\r\ntemplate<typename T> using PQ = priority_queue<T>;\r\ntemplate<typename T> using QP = priority_queue<T,vector<T>,greater<T>>;\r\ntemplate<typename T> using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\ntemplate<typename T> using ordered_multiset = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\ntemplate<typename T>T min(const vector<T>&v){return *min_element(v.begin(),v.end());}\r\ntemplate<typename T>T max(const vector<T>&v){return *max_element(v.begin(),v.end());}\r\ntemplate<typename T>T acc(const vector<T>&v){return accumulate(v.begin(),v.end(),T(0));};\r\n\r\n#ifndef ONLINE_JUDGE\r\n#include<debug.h>\r\n#else\r\n#define bug(...)\r\n#define bug1(...)\r\n#define debug(x)\r\n#endif\r\n\r\n// mt19937 rng(chrono::high_resolution_clock::now().time_since_epoch().count());\r\n// cout<<rng()%100<<endl;\r\n\r\nint gcd(int a, int b){\r\n    return b == 0 ? a : gcd(b, a % b);   \r\n}\r\nint digitsum(int n){int ret=0;while(n){ret+=n%10;n/=10;}return ret;}\r\nint power(int x,int n){\r\n    if(n==0)    return 1;\r\n    int a=power(x,n/2);\r\n    if(n%2==0)  return (a*a);\r\n    else    return (a*a*x);\r\n}\r\nvoid myerase(ordered_set<int> &s, int v){\r\n    int rank = s.order_of_key(v);\r\n    auto it = s.find_by_order(rank);\r\n    s.erase(it);\r\n}\r\nvoid myerase(ordered_multiset<int> &s, int v){\r\n    int rank = s.order_of_key(v);\r\n    auto it = s.find_by_order(rank);\r\n    s.erase(it);\r\n}\r\nint lsbit(int n){\r\n    int res=((n) & -(n));\r\n    return __builtin_ctz(res);\r\n}\r\nint isPerfectSquare(int x) {\r\n    int s = (int) sqrtl(x);\r\n    while (s * s < x) s++;\r\n    while (s * s > x) s--;\r\n    return s*s==x;\r\n}\r\n\r\n//DECLARE DP GLOBALLY;\r\n//THINK BEFORE USING SET/MULTISET;\r\nvoid solve(){\r\n    int n;\r\n    cin>>n;\r\n    vi v1={0,0,0};\r\n    vpi curr;\r\n    int num1=0;\r\n    for(int i=0;i<n;i++){\r\n        int x;\r\n        cin>>x;\r\n        if(x==0){\r\n            sort(all(curr));\r\n            if(curr.size()==0){\r\n                cout<<0<<endl;\r\n            }\r\n            else if(curr.size()==1){\r\n                cout<<\"pushStack\"<<endl;\r\n                cout<<\"1 popStack\"<<endl;\r\n            }\r\n            else if(curr.size()==2){\r\n                cout<<\"pushStack\"<<endl;\r\n                cout<<\"pushQueue\"<<endl;\r\n                cout<<\"2 popStack popQueue\"<<endl;\r\n            }\r\n            else{\r\n                // bug(i);\r\n                vi x(3);\r\n                int len=curr.size();\r\n                x[0]=curr[len-1].second;\r\n                x[1]=curr[len-2].second;\r\n                x[2]=curr[len-3].second;\r\n                sort(all(x));\r\n                for(int i=1;i<x[0];i++){\r\n                    cout<<\"pushStack\"<<endl;\r\n                }\r\n                cout<<\"pushQueue\"<<endl;\r\n                for(int i=x[0]+1;i<x[1];i++){\r\n                    cout<<\"pushStack\"<<endl;\r\n                }\r\n                cout<<\"pushFront\"<<endl;\r\n                for(int i=x[1]+1;i<=x[2];i++){\r\n                    cout<<\"pushStack\"<<endl;\r\n                }\r\n                for(int i=x[2]+1;i<=len;i++){\r\n                    cout<<\"pushQueue\"<<endl;\r\n                }\r\n                cout<<\"3 popStack popQueue popFront\"<<endl;\r\n            }\r\n            curr.clear();\r\n            num1=0;\r\n        }\r\n        else{\r\n            curr.push_back({x,++num1});\r\n        }\r\n    }\r\n    if(curr.size()>0){\r\n        int len=curr.size();\r\n        for(int i=0;i<len;i++){\r\n            cout<<\"pushStack\"<<endl;\r\n        }\r\n    }\r\n}\r\nsigned main(){\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    // int tt=1;\r\n    int t=1;\r\n    // cin>>t;\r\n    while(t--){\r\n        // cout<<\"Case #\"<<tt<<\": \";\r\n        // tt++;\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}