{
    "id": 198410862,
    "contestId": 358,
    "creationTimeSeconds": 1679340819,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 358,
        "index": "C",
        "name": "Dima and Containers",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 358,
        "members": [
            {
                "handle": "its_shyam640"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1382715000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n\r\n// ++++++++++++++++++++++++++++++++++++++++++++  @its_shyam640 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n/********************    Codeforces Header Files    *************************************/\r\n\r\n// #include <atcoder/convolution>       \r\n// // Convolution of two arrays is defined as C[i + j] = \u2211(a[i] * b[j]) for every i and j\r\n// using namespace atcoder;\r\n\r\n\r\n\r\nusing namespace std;\r\n\r\n#define               li                        long int\r\n#define               lf                        long float\r\n#define               ld                        long double\r\n#define               lli                       long long int\r\n#define               llf                       long long float\r\n#define               lld                       long long double\r\n#define               usig                      unsigned\r\n#define               sig                       signed\r\n#define               def_mod                   1000000007\r\n#define               infi                      1e18\r\n#define               neg_infi                  -1e18\r\n#define               endl                      \"\\n\"\r\n#define               vi                        vector<int>\r\n#define               vc                        vector<char>\r\n#define               vs                        vector<string>\r\n#define               vlli                      vector<long long int> \r\n#define               vllf                      vector<long long float>\r\n#define               vlld                      vector<long long double>\r\n\r\n#define               pf                        push_front\r\n#define               pb                        push_back\r\n#define               ob                        pop_back\r\n#define               of                        pop_front\r\n\r\n\r\n#define               it(var)                   var.begin(),var.end()\r\n#define               rit(var)                  var.rbegin(),var.rend()\r\n#define               mid(left,right)           (left+(right-left)/2)\r\n#define               fast_io                   ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\r\n#define               _print(x)                 cerr << #x << \" = \" << x << endl;\r\n\r\ntemplate <typename T> T _gcd(T a, T b){if(a%b) return _gcd(b,a%b);return b;}\r\ntemplate <typename T> T _lcm(T a, T b){return (a*(b/_gcd(a,b)));}\r\ntemplate <typename T, typename... Args> auto sum(T a, Args... args) { return a + sum(args...); }\r\ntemplate<typename T> bool comparator(pair<T,T>& a, pair<T,T>& b){return (a.second<b.second);}\r\nbool all_Chars_Same(string s) {return (s.find_first_not_of(s[0]) == string::npos);}\r\n\r\n\r\nconst long double pi = atan2(0, -1);\r\nstring pi100 = \"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679\";\r\n\r\n\r\nclass Debug{\r\n   public:\r\n      void dbg(auto var) {cerr << var;}\r\n\r\n      // pair print\r\n      template <class T, class V> \r\n      void dbg(pair <T, V> p) {cerr<< \"pair = {\"; dbg(p.first); cerr << \",\"; dbg(p.second); cerr << \"}\" << endl;}\r\n\r\n      // vector print\r\n      template <class T> \r\n      void dbg(vector <T> v) {cerr << \"array = { \"; for (T i : v) {dbg(i); cerr << \" \";} cerr << \"}\" << endl;}\r\n\r\n      // print set\r\n      template <class T> \r\n      void dbg(set <T> v) {cerr << \"set = [ \"; for (T i : v) {dbg(i); cerr << \" \";} cerr << \"]\" << endl;}\r\n      \r\n      // print map\r\n      template <class T, class V> \r\n      void dbg(map <T, V> v) {cerr << \"map = [ \\n\"; for (auto i : v) {dbg(i); cerr << endl;} cerr << \"]\" << endl;}\r\n      \r\n      // print unordered_map\r\n      template <class T, class V> \r\n      void dbg(unordered_map <T, V> v) {cerr << \"ump = [ \"; for (auto i : v) {dbg(i); cerr << \" \";} cerr << \"]\" << endl;}\r\n      \r\n      // print multiset\r\n      template <class T> \r\n      void dbg(multiset <T> v) {cerr << \"multiset = [ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\" << endl;}\r\n};\r\n\r\n\r\n/*###########################################       Usefull Functions          #############################################*/\r\n\r\n/**************************** Check if number is prime or not   ********************************/\r\nbool isPrime(lli n){auto count = 0;for(auto idx=1;(idx*idx)<=n;idx++){if((idx*idx)==n){count++;continue;}if(n%idx==0)count+=2;}if(count==2)return true;return false;}\r\n\r\nlli inv(lli i){if(i==1) return 1;return (def_mod-((def_mod/i)*inv(def_mod%i))%def_mod)%def_mod;}\r\n\r\n/****************************** GENERATE PRIME FACTORS  ********************************/\r\nmap<lli,lli> primeFactors(lli n){ map<lli,lli> factors; while (n % 2 == 0) { factors[2]++; n = n/2; } for (int i = 3; i <= sqrt(n); i = i + 2) { while (n % i == 0) { factors[i]++; n = n/i; } } if (n > 2) factors[n]++; return factors; }\r\n\r\n/****************************** GENERATE Factorial  *******************************/\r\nstring stringFactorial(lli n){ if (n>1000){ cout << \" Integer Overflow\"<< endl; return \"\"; } lli counter; unsigned long long int sum = 0; if (n == 0) return \"1\"; for (counter=1;counter<=n;counter++) sum = sum + log(counter); string result = to_string(round(exp(sum))); return result; }\r\n\r\nlli moduloFactorial(lli n, lli p){if (n >= p) return 0; lli result = 1; for (lli i = 1; i <= n; i++) result = (result * i) % p; return result;}\r\n\r\n\r\n/****************************** Generate Testcases **************************/\r\nvoid genTestArr(auto &arr, auto pivot){ generate(arr.begin(), arr.end(), [&pivot]{ return (rand() % pivot); });}\r\n\r\n\r\n/****************************** SORT MAP BY VALUE **************************/\r\nvoid sortMapByValue(map<string, int>& M) { multimap<int, string> MM; for (auto& it : M) { MM.insert({ it.second, it.first }); } for (auto& it : MM) { cout << it.second << ' ' << it.first << endl; } }\r\n\r\n\r\n/******** Getting GCD on subsegements ************/\r\n// Like [0],[0,1],[0,2],[0,3]....,[0,n-1]\r\n\r\nvector<map<lli,lli>> gcdOnSubsegments(vlli arr){ vector<map<lli, lli>> sub_gcd(arr.size()); /* Key is gcd, Value is the largest length such that gcd(a[i - len], ..., a[i]) equals to key. */ sub_gcd[0][arr[0]] = 0; for(lli i = 1; i < arr.size(); i++){ sub_gcd[i][arr[i]] = 0; for(auto it: sub_gcd[i - 1]){ lli new_gcd = __gcd(it.first, arr[i]); sub_gcd[i][new_gcd] = max(sub_gcd[i][new_gcd], it.second + 1); } } return sub_gcd; }\r\n\r\n/********************  CREATE BINARY TREE *********************/\r\nstruct TreeNode{\r\n    int data;\r\n    TreeNode* left, * right;\r\n};\r\n\r\n\r\nTreeNode* newNode(int data){\r\n    TreeNode* node = (TreeNode*)malloc(sizeof(TreeNode));\r\n    node->data = data;\r\n    node->left = node->right = NULL;\r\n    return (node);\r\n}\r\n\r\nTreeNode* createTreeFromLOT(auto arr,lli i, lli n){\r\n   TreeNode *root = nullptr;\r\n   if (i < n){\r\n      root = newNode(arr[i]);\r\n      root->left = createTreeFromLOT(arr,2 * i + 1, n);\r\n      root->right = createTreeFromLOT(arr,2 * i + 2, n);\r\n   }\r\n   return root;\r\n}\r\n\r\nvoid displayTree(TreeNode* root){\r\n   if (root != NULL){\r\n      displayTree(root->left);\r\n      cout << root->data<<\" -> \";\r\n      displayTree(root->right);\r\n   }\r\n}\r\n\r\nvoid file_input_output(){\r\n   ios_base::sync_with_stdio(0); \r\n   cin.tie(0); \r\n   cout.tie(0);\r\n   #ifndef ONLINE_JUDGE\r\n   freopen(\"input.txt\", \"r\", stdin);\r\n   freopen(\"output.txt\", \"w\", stdout);\r\n   freopen(\"error.txt\", \"w\", stderr);\r\n   #endif\r\n}\r\n\r\n/* $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ SNIPPET ENDED $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$*/\r\n\r\n\r\n\r\nint main(int argc, char const *argv[]) {\r\n   clock_t begin = clock();\r\n   Debug d;\r\n   fast_io\r\n   // file_input_output();       // Taking file input and displaying output in output.txt\r\n   // Write your code here....\r\n   lli t;\r\n   cin>>t;\r\n   int count = 0, n;\r\n   vector<string> qq = {\"pushStack\", \"pushQueue\", \"pushFront\", \"pushBack\"};\r\n   vector<string> cmd = {\"popStack\", \"popQueue\",\"popFront\"};\r\n   while(t--){\r\n      cin>>n;\r\n      if(n==0){\r\n         lli p = min(3, count);\r\n         cout<<p;\r\n         if(p>0){\r\n            for(int i=0;i<p;i++)\r\n               cout<<\" \"<<cmd[i];\r\n            count = 0;\r\n         }\r\n      }else{\r\n         count++;\r\n         lli z = n%4;\r\n         cout<<qq[z];\r\n      }\r\n      cout<<endl;\r\n   }\r\n\r\n\r\n\r\n   #ifndef ONLINE_JUDGE \r\n   clock_t end = clock();\r\n   cout<<\"\\n\\nExecuted In: \"<<double(end - begin) / CLOCKS_PER_SEC*1000<<\" ms\"<<endl;\r\n   cout<<\"Date : \"<<__DATE__<< endl;\r\n   cout<<\"Time : \"<<__TIME__<< endl;\r\n   #endif \r\n   return 0;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/************ INTPUT *****************/\r\n\r\n\r\n\r\n\r\n/************* OUTPUT *****************/\r\n"
}