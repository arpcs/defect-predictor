{
    "id": 209945030,
    "contestId": 358,
    "creationTimeSeconds": 1686994699,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 358,
        "index": "C",
        "name": "Dima and Containers",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 358,
        "members": [
            {
                "handle": "welltimespent"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1382715000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream> \n#include <vector>\n\nusing ll = long long;\n\n#define all(x) begin(x), end(x)\n#define sz(x) (int) (x).size()\n\nvoid solve()\n{\n    int n;\n    std::cin >> n;\n    std::vector<int> commands (n);\n    for (int i {}; i < n; ++i)\n    {\n        std::cin >> commands[i];\n    }\n\n    int deck {};\n    std::vector<std::string> containers; \n\n    for (int i {}; i < n; ++i)\n    {\n        if (!commands[i])\n        {\n            if (!sz(containers))\n            {\n                std::cout << 0 << '\\n';\n            }\n            else \n            {\n                std::cout << std::min(sz(containers), 3);\n                for (int i {std::min(sz(containers), 3)}; i > 0; --i)\n                {\n                    std::cout << \" \" << containers[i];\n                }\n                std::cout << '\\n';\n                containers = {};\n                deck = 0;\n            }\n        }\n        else \n        {\n            if (commands[i] % 3 == 1)\n            {\n                std::cout << \"pushStack\\n\";\n                containers.push_back(\"popStack\");\n            }\n            else if (commands[i] % 2 == 0)\n            {\n                std::cout << \"pushQueue\\n\";\n                containers.push_back(\"popQueue\");\n            }\n            else \n            {\n                if (deck % 2)\n                {\n                    std::cout << \"pushBack\\n\";\n                    containers.push_back(\"popBack\");\n                }\n                else \n                {\n                    std::cout << \"pushFront\\n\";\n                    containers.push_back(\"popFront\");\n                }\n                ++deck;\n            }\n            \n        }\n    }\n\n}\n\nint main()\n{\n    std::cin.tie(0)->sync_with_stdio(0);\n    solve();\n}"
}