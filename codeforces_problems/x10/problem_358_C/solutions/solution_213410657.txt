{
    "id": 213410657,
    "contestId": 358,
    "creationTimeSeconds": 1689101066,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 358,
        "index": "C",
        "name": "Dima and Containers",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 358,
        "members": [
            {
                "handle": "ratmir_gis"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1382715000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 358,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n#define int long long\n#define ld long double\n\nusing namespace std;\n\nint32_t main() {\n    int n, k = 0, max1 = 0, max2 = 0, max3 = 0;\n    cin >> n;\n    vector<int> ans;\n    for (int i = 0; i < n; i++) {\n        int x;\n        cin >> x;\n        if (x != 0) {\n            ans.push_back(x);\n            if (max1 < x) {\n                max3 = max2;\n                max2 = max1;\n                max1 = x;\n            } else if (max2 < x) {\n                max3 = max2;\n                max2 = x;\n            } else if (max3 < x) {\n                max3 = x;\n            }\n        }\n        if (x == 0 || i == n - 1) {\n            bool flag1 = false, flag2 = false, flag3 = false, flag1_num = false, flag2_num = false, flag3_num = false;\n            for (int j = 0; j < ans.size(); j++) {\n                if (ans[j] == max1 && !flag1_num) {\n                    if (!flag2) {\n                        cout << \"pushQueue\" << '\\n';\n                        k++;\n                        flag2 = true;\n                    } else if (!flag3) {\n                        cout << \"pushBack\" << '\\n';\n                        k++;\n                        flag3 = true;\n                    } else if (!flag1) {\n                        cout << \"pushStack\" << '\\n';\n                        k++;\n                        flag1 = true;\n                    }\n                    flag1_num = true;\n                } else if (ans[j] == max2 && !flag2_num) {\n                    if (!flag2) {\n                        cout << \"pushQueue\" << '\\n';\n                        k++;\n                        flag2 = true;\n                    } else if (!flag3) {\n                        cout << \"pushBack\" << '\\n';\n                        k++;\n                        flag3 = true;\n                    } else if (!flag1) {\n                        cout << \"pushStack\" << '\\n';\n                        k++;\n                        flag1 = true;\n                    }\n                    flag2_num = true;\n                } else if (ans[j] == max3 && !flag3_num) {\n                    if (!flag2) {\n                        cout << \"pushQueue\" << '\\n';\n                        k++;\n                        flag2 = true;\n                    } else if (!flag3) {\n                        cout << \"pushBack\" << '\\n';\n                        k++;\n                        flag3 = true;\n                    } else if (!flag1) {\n                        cout << \"pushStack\" << '\\n';\n                        k++;\n                        flag1 = true;\n                    }\n                    flag3_num = true;\n                } else {\n                    if (!flag1 || !flag2 || !flag3) {\n                        cout << \"pushStack\" << '\\n';\n                    } else {\n                        cout << \"pushBack\" << '\\n';\n                    }\n                }\n            }\n        }\n        if (x == 0) {\n            cout << k;\n            if (k == 0) {\n                cout << '\\n';\n            } else if (k == 1) {\n                cout << ' ';\n                cout << \"popQueue\" << '\\n';\n            } else if (k == 2) {\n                cout << ' ';\n                cout << \"popQueue\" << ' ';\n                cout << \"popFront\" << '\\n';\n            } else if (k == 3) {\n                cout << ' ';\n                cout << \"popQueue\" << ' ';\n                cout << \"popFront\" << ' ';\n                cout << \"popStack\" << '\\n';\n            }\n            ans.clear();\n            k = max1 = max2 = max3 = 0;\n        }\n    }\n    return 0;\n}\n"
}