{
    "id": 211036995,
    "contestId": 358,
    "creationTimeSeconds": 1687701920,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 358,
        "index": "C",
        "name": "Dima and Containers",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 358,
        "members": [
            {
                "handle": "lamn90568"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1382715000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\n#define EL '\\n'\r\n\r\nusing namespace std;\r\ntypedef long long ll;\r\nvector<string> cons1 = {\"popStack\",\"popQueue\",\"popFront\"};\r\nvector<string> cons2 = {\"pushStack\",\"pushQueue\",\"pushFront\"};\r\nint main(){\r\n//    ios_base::sync_with_stdio(false);\r\n//    cin.tie(0);cout.tie(0);\r\n\r\n    int n;cin>>n;\r\n    vector<int> v,cur;\r\n\r\n    for(int i=1;i<=n;i++){\r\n        int x;cin>>x;\r\n        v.push_back(x);\r\n    }\r\n    v.push_back(0);\r\n    for(int i=0;i<=n;i++){\r\n        if(!v[i]){\r\n            if(cur.size()){\r\n                if(cur.size() <= 3){\r\n                    for(int j = 0;j<cur.size();j++)cout<<cons2[j]<<EL;\r\n                }\r\n                else{\r\n                    vector<int> s = cur;\r\n                    sort(s.begin(),s.end());\r\n                    multiset <int> mx = {s[s.size()-1],s[s.size()-2],s[s.size()-3]};\r\n                    int id = 0;\r\n                    while(!mx.count(cur[id]))cout<<\"pushBtack\"<<EL,mx.erase(mx.find(cur[id])),id++;\r\n                    cout<<\"pushStack\"<<EL;\r\n                    id++;\r\n                    while(!mx.count(cur[id]))cout<<\"pushBack\"<<EL,mx.erase(mx.find(cur[id])),id++;\r\n                    cout<<\"pushQueue\"<<EL;\r\n                    id++;\r\n                    while(!mx.count(cur[id]))cout<<\"pushBack\"<<EL,mx.erase(mx.find(cur[id])),id++;\r\n                    cout<<\"pushFront\"<<EL;\r\n                    id++;\r\n                    while(id < n){\r\n                        cout<<\"pushBack\"<<EL;\r\n                        id++;\r\n                    }\r\n                }\r\n                    if(i != n){\r\n                        int t = cur.size();\r\n                        cout<<min(3,t)<<' ';\r\n                        for(int j=0;j<min(3,t);j++)cout<<cons1[j]<<EL;\r\n                        cur.clear();\r\n                    }\r\n\r\n            }\r\n            else {\r\n                if(i != n)cout<<0<<EL;\r\n            }\r\n        }\r\n        else cur.push_back(v[i]);\r\n    }\r\n}\r\n"
}