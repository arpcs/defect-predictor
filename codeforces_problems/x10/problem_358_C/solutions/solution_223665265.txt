{
    "id": 223665265,
    "contestId": 358,
    "creationTimeSeconds": 1694896698,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 358,
        "index": "C",
        "name": "Dima and Containers",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 358,
        "members": [
            {
                "handle": "YassineBenYounes"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1382715000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#include \"debugging.cpp\"\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double ld;\r\ntypedef double db;\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#define pbds tree<pair<ll, ll>, null_type, less<pair<ll,ll>>,rb_tree_tag, tree_order_statistics_node_update>\r\nusing namespace __gnu_pbds;\r\nll gcd(ll a , ll b) {return b ? gcd(b , a % b) : a ;} // greatest common divisor (PGCD)\r\nll lcm(ll a , ll b) {return (a * b) / gcd(a , b);} // least common multiple (PPCM)\r\nint dx[8] = {1, 0, 0, -1, 1, 1, -1, -1};\r\nint dy[8] = {0, 1, -1, 0, 1, -1, -1, 1};\r\n#define endl \"\\n\"\r\n#define ss second\r\n#define ff first\r\n#define all(x) (x).begin() , (x).end()\r\n#define pb push_back\r\n#define vi vector<int>\r\n#define vii vector<pair<int,int>>\r\n#define vl vector<ll>\r\n#define vll vector<pair<ll,ll>>\r\n#define pii pair<int,int>\r\n#define pll pair<ll,ll>\r\n#define pdd  pair<double,double>\r\n#define vdd  vector<pdd>\r\n#define speed ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\r\nusing namespace std;\r\n////////////////////Only Clear Code//////////////////////////\r\n\r\nvoid usaco_problem(){\r\n    freopen(\"race.in\", \"r\", stdin);\r\n    freopen(\"race.out\", \"w\", stdout);\r\n}\r\n\r\nvoid init(){\r\n    #ifndef ONLINE_JUDGE\r\n \r\nfreopen(\"input.txt\", \"r\", stdin);\r\n \r\nfreopen(\"output.txt\", \"w\", stdout);\r\n \r\n#endif // ONLINE_JUDGE\r\n}\r\n\r\nconst int mx = 2e5+5;\r\nconst int LOG = 25;\r\nconst ll inf = 1e18;\r\nconst ll mod = 1e8;\r\n\r\nstring tab[3] = {\"popStack\", \"popFront\", \"popBack\"};\r\n\r\nstring add[3] = {\"pushStack\", \"pushFront\", \"pushBack\"};\r\n\r\nvoid run_case(){\r\n    int n;cin >> n;\r\n    stack<int> st;\r\n    deque<int> dq;\r\n    int k = 0;\r\n    for(int i = 0; i < n; i++){\r\n        int x;cin >> x;\r\n        if(x == 0){\r\n            vii v;\r\n            if(!st.empty())v.pb({st.top(), 0});\r\n            if(!dq.empty())v.pb({dq.front(), 1});\r\n            if(dq.size() > 1)v.pb({dq.back(), 2});\r\n            sort(all(v), greater<pii>());\r\n            cout << k << \" \";\r\n            for(int i = 0;i < k;i++){\r\n                int t = v[i].ss;\r\n                cout << tab[t] << \" \";\r\n            }\r\n            cout << endl;\r\n            k = 0;\r\n        }\r\n        else{\r\n            vii v;\r\n            if(!st.empty())v.pb({st.top(), 0});\r\n            else v.pb({-1e9, 0});\r\n            if(!dq.empty())v.pb({dq.front(), 1});\r\n            else v.pb({-1e9, 1});\r\n            if(dq.size() > 1)v.pb({dq.back(), 2});\r\n            else v.pb({-1e9, 2});\r\n            sort(all(v));\r\n            if(k == 3 && x <= v[0].ff){\r\n                cout << \"pushQueue\" << endl;\r\n                continue;\r\n            }\r\n            cout << add[v[0].ss] << endl;\r\n            if(v[0].ss == 0){\r\n                st.push(x);\r\n            }\r\n            else if(v[0].ss == 1){\r\n                dq.push_front(x);\r\n            }\r\n            else{\r\n                dq.push_back(x);\r\n            }\r\n            k = min(k + 1, 3);\r\n        }\r\n    }\r\n}\r\n\r\nint main(){\r\n    init();\r\n    //usaco_problem();\r\n    speed;\r\n    int t;\r\n    //cin >> t;\r\n    t = 1;\r\n    while(t--){\r\n        run_case();\r\n    }\r\n}\r\n\r\n/*\r\n    NEVER GIVE UP!\r\n    DOING SMTHNG IS BETTER THAN DOING NTHNG!!!\r\n    Your Guide when stuck:\r\n    - Continue keyword only after reading the whole input\r\n    - Don't use memset with testcases\r\n    - Check for corner cases(n=1, n=0)\r\n    - Check where you declare n(Be careful of declaring it globally and in main)\r\n*/"
}