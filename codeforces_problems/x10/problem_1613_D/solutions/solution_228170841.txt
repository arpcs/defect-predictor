{
    "id": 228170841,
    "contestId": 1613,
    "creationTimeSeconds": 1697287866,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1613,
        "index": "D",
        "name": "MEX Sequences",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "dp",
            "math"
        ]
    },
    "author": {
        "contestId": 1613,
        "members": [
            {
                "handle": "nectarl"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1638369300
    },
    "programmingLanguage": "MS C++ 2017",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 32,
    "timeConsumedMillis": 748,
    "memoryConsumedBytes": 7987200,
    "source": "#define _CRT_SECURE_NO_WARNINGS\r\n#include<iostream> \r\n#include<map>\r\n#include<algorithm>\r\n#include<string.h>\r\n#include<vector>\r\n#include<numeric>\r\n#include<vector>\r\n#include<set>\r\n#include<cmath>\r\n#include<string.h>\r\n#include<random>\r\n#include<queue>\r\n#include<bitset>\r\n#include<iomanip>\r\n#include<unordered_map>\r\n#include<algorithm>\r\n#include<stdlib.h>\r\n#include<fstream>\r\n#include<stack>\r\nusing namespace std;\r\n#define pc(x) fixed<<setprecision(x) \r\n#define sp(t) ll t;cin>>t;while(t--) \r\n#define ssp(t) ll t;t=1;while(t--) \r\n#define per(x,a,b) for( ll x=(b);(x)>=(a);--x) \r\n#define rep(x,a,b) for( ll x=(a);(x)<=(b);++x)\r\n#define all(a) (a).begin(),(a).end()\r\n#define mst(x,z) memset(x,z,sizeof(x))\r\n#define nm(x,y) ll x;ll y;scanf(\"%lld%lld\",&x,&y);\r\n#define up(x,y) x/y+(x%y!=0)\r\n#define nmm(x,y,z) ll x;ll y;ll z;scanf(\"%lld%lld%lld\",&x,&y,&z);\r\n#define pi pair<ll,ll> \r\n#define lowbit(x) (-x)&x\r\n#define ld long double\r\n#define ll long long\r\n#define lll __int128\r\n#define ull unsigned long long\r\n#define ar(a,n) for(int i=1;i<=n;++i)cin>>a[i];\r\n#define f1 first \r\n#define ifret(x) cout<<x<<endl;return 0;\r\n#define ifcon(x) cout<<x<<endl;continue;\r\n#define vve(s,n,x) vector<vector<ll> > s(n+1,vector<ll>(n+1,x));\r\n#define ve(s,n,x) vector<ll> s(n+1,x);\r\n#define g(n) ll n;cin>>n;\r\n#define ci(a,b) scanf(\"%lld%lld\",&a,&b);\r\n#define f2 second \r\n#define INF 100000000000000000LL\r\n#define getinv(n) inv[1]=1; rep(i,2,n){     inv[i]=(p-p/i)*inv[p%i]%p;  }\r\nld iz = 1.0;\r\n//ll qpow(ll a, ll d, ll p) { ll ret = 1; while (d) { if (d % 2)ret = (__int128)a * ret % p; d >>= 1; a = (__int128)a * a % p; }return ret; }\r\nll gcd(ll x, ll y) { if (x < y)swap(x, y); if (x % y == 0)return y; return gcd(y, x % y); }\r\nvoid exgcd(ll a, ll b, ll& x, ll& y) { if (!b) { x = 1; y = 0; } else { exgcd(b, a % b, y, x); y -= a / b * x; } }\r\n//ll qpow(ll a, ll d, ll p) { ll ret = 1; while (d) { if (d % 2)ret = a * ret % p; d >>= 1; a = a * a % p; }return ret; }\r\n//lll qpow(lll a, lll d, lll p) { lll ret = 1; while (d) { if (d % 2)ret = a * ret % p; d >>= 1; a = a * a % p; }return ret; }\r\n//ll randint(ll mi, ll ma) { random_device seed; ranlux48 engine(seed()); uniform_int_distribution<> distrib(mi, ma); return distrib(engine); }\r\n//ll miller(ll x) { if (x < 3) return x == 2; if (x % 2 == 0) return false; ll A[] = { 2, 325, 9375, 28178, 450775, 9780504, 1795265022 }, d = x - 1, r = 0; while (d % 2 == 0)d /= 2, ++r; for (auto a : A) { ll v = qpow(a, d, x); if (v <= 1 || v == x - 1)  continue; for (int i = 0; i < r; ++i) { v = (__int128)v * v % x; if (v == x - 1 && i != r - 1) { v = 1; break; }if (v == 1)return false; }if (v != 1)return false; }return true; }\r\n//ll pollard_rho(ll x) { if (x == 4)return 2; if (miller(x))return x; while (1) { ll c = randint(1, x - 1); auto f = [=](ll xx) { return ((lll)xx * xx + c) % x; }; ll t, r; t = r = 0; ll p = 1, q = 1; do { rep(i, 1, 128) { t = f(t); r = f(f(r)); if (t == r || (q = (lll)p * abs(t - r) % x) == 0) { break; }p = q; }ll d; if ((d = __gcd(p, x)) > 1)return d; } while (t != r); } }\r\nstruct node { ll x, y; bool operator>(const node& a)const { return x > a.x; } };\r\ninline int read() { int x = 0, f = 1; char ch = getchar(); while (ch < '0' || ch>'9') { if (ch == '-')f = -1; ch = getchar(); }while (ch >= '0' && ch <= '9')x = x * 10 + ch - '0', ch = getchar(); return x * f; }\r\nll inv(ll a, ll p) { ll x, y; exgcd(a, p, x, y); return (x % p + p) % p; }\r\nll bsgs(ll a, ll b, ll p) { unordered_map<ll, ll> mp; ll t = sqrt(p) + 1, tmp = 1; rep(i, 1, t) { tmp = tmp * a % p; mp[b * tmp % p] = i; }ll bb = tmp; rep(i, 1, t) { if (mp[bb])return i * t - mp[bb]; bb = bb * tmp % p; }return -1; }\r\n//ll exbsgs(ll a, ll b, ll p) { a %= p; b %= p; if (b == 1 || p == 1)return 0; int g = gcd(a, p), k = 0, na = 1; while (g > 1) { if (b % g != 0)return -1; k++; b /= g; p /= g; na = na * (a / g) % p; if (na == b)return k; g = gcd(a, p); }na = inv(na, p); na += p; na %= p; int f = bsgs(a, b * na % p, p); if (f == -1)return -1; return f + k; }\r\n//lll gcd(lll x, lll y) { if (x < y)swap(x, y); if (x % y == 0)return y; return gcd(y, x % y); }\r\n//void exgcd(lll a, lll b, lll& x, lll& y) { if (!b) { x = 1; y = 0; } else { exgcd(b, a % b, y, x); y -= a / b * x; } }\r\nll discrete(vector<ll>& d) { sort(all(d)); d.erase(unique(all(d)), d.end()); return d.size(); }\r\n//unordered_map<ll, ll> mp_mu; int mu[5000001]; ll sum_mu[5000001];\r\n//bool isprime[10000001]; int prime[1000001]; int d[10000001];\r\n//void seive() { mu[1] = 1; mst(isprime, 1); ll cnt = 0; for (int i = 2; i <= 10000000; ++i) { if (isprime[i]) { prime[++cnt] = i; mu[i] = -1; }for (int j = 1; j <= cnt && prime[j] * i <= 5000000; ++j) { isprime[prime[j] * i] = 0; if (i % prime[j] == 0) { mu[i * prime[j]] = 0; break; } else mu[i * prime[j]] = -mu[i]; } } }\r\n#define ls(x) tre[x].ls\r\n#define rs(x) tre[x].rs\r\n#define getsum(a,i,j,_i,_j) a[i-1][j-1]+a[_i][_j]-a[_i][j-1]-a[i-1][_j]\r\n//ll get_mu(ll x) {\r\n//\tif (x <= 5000000)return sum_mu[x];\r\n//\tif (mp_mu[x])return mp_mu[x];\r\n//\tll ret = 1;\r\n//\tfor (int i = 2, j; i <= x; i = j + 1) {\r\n//\t\tj = x / (x / i);\r\n//\t\tret -= get_mu(x / i) * (j - i + 1);\r\n//\t\ti = j + 1;\r\n//\t}\r\n//\treturn mp_mu[x] = ret;\r\n//}\r\n//ll get_phi(ll x) {\r\n//\tll ret = 0;\r\n//\tfor (int i = 1, j; i <= x; i = j + 1) {\r\n//\t\tj = x / (x / i);\r\n//\t\tret += (get_mu(j) - get_mu(i - 1)) * (x / i) * (x / i);\r\n//\t\ti = j + 1;\r\n//\t}\r\n//\treturn (ret - 1) / 2;\r\n//}\r\n//char s[1000010];\r\n//char ans[10005];\r\nll md = 998244353;\r\n#define ad(x,y) x=(x+y)%md; \r\nll d[500005][2];\r\nint main() {\r\n\tsp(Qwpvin) {\r\n\t\tll ans = 0; ll tmp;\r\n\t\tg(n);\r\n\t\trep(i, 0, n + 2) {\r\n\t\t\td[i][0] = 0;\r\n\t\t\td[i][1] = 0;\r\n\t\t}\r\n\t\td[0][0] = 1;\r\n\t\trep(i, 1, n) {\r\n\t\t\tcin >> tmp;\r\n\t\t\tif (tmp) {\r\n\t\t\t\tad(ans, d[tmp - 1][0]);\r\n\t\t\t\tad(ans, d[tmp - 1][1]);\r\n\t\t\t}\r\n\t\t\tad(ans, d[tmp][0]);\r\n\t\t\tad(ans, d[tmp + 1][0]);\r\n\t\t\tad(ans, d[tmp + 1][1]);\r\n\t\t\tif (tmp) {\r\n\t\t\t\tad(d[tmp - 1][1], d[tmp - 1][1]);\r\n\t\t\t\tad(d[tmp - 1][1], d[tmp - 1][0]);\r\n\t\t\t}\r\n\t\t\tad(d[tmp + 1][0], d[tmp + 1][0]);\r\n\t\t\tad(d[tmp + 1][1], d[tmp + 1][1]);\r\n\t\t\tad(d[tmp + 1][0], d[tmp][0]);\r\n\t\t}\r\n\t\tcout << (ans) % md << endl;\r\n\t}\r\n}"
}