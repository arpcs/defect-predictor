{
    "id": 146617861,
    "contestId": 1044,
    "creationTimeSeconds": 1645009355,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1044,
        "index": "C",
        "name": "Optimal Polygon Perimeter",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "dp",
            "geometry"
        ]
    },
    "author": {
        "contestId": 1044,
        "members": [
            {
                "handle": "xzzduang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1541355000
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 327,
    "memoryConsumedBytes": 7270400,
    "source": "#include<iostream>\r\n#include<stdio.h>\r\n#include<ctype.h>\r\n#include<algorithm>\r\n#define N 300005\r\n#define int long long\r\nusing namespace std;\r\ninline int read(){\r\n\tint x=0,f=0; char ch=getchar();\r\n\twhile(!isdigit(ch)) f|=(ch==45),ch=getchar();\r\n\twhile(isdigit(ch)) x=(x<<3)+(x<<1)+(ch^48),ch=getchar();\r\n\treturn f?-x:x;\r\n}\r\nint n,x[N],y[N],minX,minY,maxX,maxY,vis[4],p[10],cnt,can[N],ans[10];\r\ninline int calc(){\r\n\tminX=minY=1e9,maxX=maxY=-1e9;\r\n\tfor(int i=1;i<=n;++i){\r\n\t\tif(!can[i]) continue;\r\n\t\tmaxX=max(maxX,x[i]);\r\n\t\tminX=min(minX,x[i]);\r\n\t\tmaxY=max(maxY,y[i]);\r\n\t\tminY=min(minY,y[i]);\r\n\t}\r\n\treturn 2*(maxX-minX+maxY-minY);\r\n}\r\nsigned main(){\r\n\tn=read();\r\n\tminX=minY=1e9,maxX=maxY=-1e9;\r\n\tfor(int i=1;i<=n;++i){\r\n\t\tx[i]=read(),y[i]=read();\r\n\t\tmaxX=max(maxX,x[i]);\r\n\t\tminX=min(minX,x[i]);\r\n\t\tmaxY=max(maxY,y[i]);\r\n\t\tminY=min(minY,y[i]);\r\n\t}\r\n\tfor(int i=1;i<=n;++i){\r\n\t\tint flag=0;\r\n\t\tif(!vis[0] && x[i]==maxX) flag=1,vis[0]=1;\r\n\t\tif(!vis[1] && x[i]==minX) flag=1,vis[1]=1;\r\n\t\tif(!vis[2] && y[i]==maxY) flag=1,vis[2]=1;\r\n\t\tif(!vis[3] && y[i]==minY) flag=1,vis[3]=1;\r\n\t\tif(x[i]==maxX && y[i]==maxY) flag=1;\r\n\t\tif(x[i]==minX && y[i]==maxY) flag=1;\r\n\t\tif(x[i]==maxX && y[i]==minY) flag=1;\r\n\t\tif(x[i]==minX && y[i]==minY) flag=1;\r\n\t\tif(flag) p[cnt++]=i;\r\n\t}\r\n\tfor(int s=0;s<(1<<cnt);++s){\r\n\t\tint k=__builtin_popcount(s);\r\n\t\tif(k==2){\r\n\t\t\tminX=minY=1e9,maxX=maxY=-1e9;\r\n\t\t\tfor(int j=0;j<cnt;++j){\r\n\t\t\t\tif((1<<j)&s){\r\n\t\t\t\t\tint i=p[j];\r\n\t\t\t\t\tmaxX=max(maxX,x[i]);\r\n\t\t\t\t\tminX=min(minX,x[i]);\r\n\t\t\t\t\tmaxY=max(maxY,y[i]);\r\n\t\t\t\t\tminY=min(minY,y[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(int i=1;i<=n;++i){\r\n\t\t\t\tint t1=minX,t2=minY,t3=maxX,t4=maxY;\r\n\t\t\t\tmaxX=max(maxX,x[i]);\r\n\t\t\t\tminX=min(minX,x[i]);\r\n\t\t\t\tmaxY=max(maxY,y[i]);\r\n\t\t\t\tminY=min(minY,y[i]);\r\n\t\t\t\tans[3]=max(ans[3],2*(maxX-minX+maxY-minY));\r\n\t\t\t\tminX=t1,minY=t2,maxX=t3,maxY=t4;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(k<3) continue;\r\n\t\tfor(int i=0;i<cnt;++i){\r\n\t\t\tif((1<<i)&s) can[p[i]]=1;\r\n\t\t}\r\n\t\tans[k]=max(ans[k],calc());\r\n\t\tfor(int i=0;i<cnt;++i) can[p[i]]=0;\r\n\t}\r\n\tfor(int i=1;i<=n;++i) can[i]=1;\r\n\tfor(int i=3;i<=cnt;++i) printf(\"%lld \",ans[i]);\r\n\tint tmp=calc();\r\n\tfor(int i=cnt+1;i<=n;++i) printf(\"%lld \",tmp);\r\n\treturn 0;\r\n}\r\n"
}