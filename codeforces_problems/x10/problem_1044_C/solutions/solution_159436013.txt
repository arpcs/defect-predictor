{
    "id": 159436013,
    "contestId": 1044,
    "creationTimeSeconds": 1654293989,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1044,
        "index": "C",
        "name": "Optimal Polygon Perimeter",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "dp",
            "geometry"
        ]
    },
    "author": {
        "contestId": 1044,
        "members": [
            {
                "handle": "bkifhr6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1541355000
    },
    "programmingLanguage": "Python 3",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "import sys\nsubsets = []\n\ndef f(set):\n    minx = 10**8\n    maxx = -10**8\n    miny =minx\n    maxy=maxx\n    for p in set:\n        x=p[0]\n        y=p[1]\n        if x <= minx:\n            minx = x\n        if x >= maxx:\n            maxx = x\n        if y <= miny:\n            miny = y\n        if y >= maxy:\n            maxy = y\n    return 2*(maxx -minx+maxy-miny)\ninp = sys.stdin\nfor i in range(len(inp)):\n    if i == 0:\n        pass\n    else:\n        x= int(input())\n        y = int(input())\n        p = [x,y]\n        subsets.append(p)\n        if len(subsets)==3:\n            result = str(f(subsets))\n        elif len(subsets)>3:\n            result = result + f\" {f(subsets)}\"\n\nprint(result)\n\t\t   \t\t \t   \t    \t\t   \t     \t \t"
}