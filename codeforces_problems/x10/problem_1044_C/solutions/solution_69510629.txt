{
    "id": 69510629,
    "contestId": 1044,
    "creationTimeSeconds": 1579947684,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1044,
        "index": "C",
        "name": "Optimal Polygon Perimeter",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "dp",
            "geometry"
        ]
    },
    "author": {
        "contestId": 1044,
        "members": [
            {
                "handle": "anctartica"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1541355000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\n#define pb           push_back\n#define pii          pair<int,int>\n#define vi           vector<int>\n#define vpii         vector<pair<int,int>>\n#define gph          map<int, vector<int>>\n#define mp           make_pair\n#define FOR(i, n) for (int i = 0; i <  (int)(n); i++)\n#define FOR1(i, n) for (int i = 1; i <= (int)(n); i++)\n#define FORD0(i, n) for (int i = (int)n; i >= 0; i--)\n#define FORD1(i, n) for (int i = (int)n; i >= 1; i--)\n#define FORS(i, n) for(; i < (int)(n); i++)\n#define debug(X) { cout << #X << \" = \" << (X) << endl; }\n#define printArr(A,n) { cout << #A << \" = \"; FOR(i,n) cout << A[i] << ' '; cout << endl; }\nusing namespace std;\n#define int long long int\nvpii points;\nint sol(vpii & a, vpii & b){\n    int ans= 0;\n    FOR(i, a.size()){\n        FOR(j, b.size()){\n            int minX = 1e9, maxX= -1e9, minY = 1e9, maxY = -1e9;\n            minX = min(a[i].first, minX);\n            minY = min(a[i].second, minY);\n            maxX = max(a[i].first, maxX);\n            maxY = max(a[i].second, maxY);\n            minX = min(b[j].first, minX);\n            minY = min(b[j].second, minY);\n            maxX = max(b[j].first, maxX);\n            maxY = max(b[j].second, maxY);\n            FOR(p, points.size()){\n                int minX2 = min(points[p].first, minX);\n                int minY2 = min(points[p].second, minY);\n                int maxX2 = max(points[p].first, maxX);\n                int maxY2 = max(points[p].second, maxY);\n                ans = max(ans, (maxX2 - minX2)*2 + 2*(maxY2 - minY2));\n            } \n        }\n    }\n    return ans;\n}\nsigned main(){\n    ios_base::sync_with_stdio(false);cin.tie(NULL);\n\n    int n;cin >> n;\n    int x, y;\n    int minX = 1e9, maxX= -1e9, minY = 1e9, maxY = -1e9;\n    FOR(i, n){\n        cin >>x >> y;\n        minX = min(minX, x);\n        minY = min(minY, y);\n        maxY = max(maxY, y);\n        maxX = max(maxX, x);\n        points.pb(mp(x, y));\n    }\n    int area = (maxX - minX)*2 + 2*(maxY - minY);\n\n    int ans = 0;\n //   debug(n);\n    vector<pii> a, b, c, d;\n    for(int i = 0; i < n; i++){\n        if(points[i].first == minX || points[i].first == maxX \n                || points[i].second == maxY || points[i].second == minY){\n            int minX = 1e9, maxX= -1e9, minY = 1e9, maxY = -1e9;\n            minX = min(points[i].first, minX);\n            minY = min(points[i].second, minY);\n            maxX = max(points[i].first, maxX);\n            maxY = max(points[i].second, maxY);\n//            debug(i);\n            for(int j = i+1; j < n; j++){\n                if(points[j].first == minX || points[j].first == maxX \n                        || points[j].second == maxY || points[j].second == minY){\n                    minX = min(points[j].first, minX);\n                    minY = min(points[j].second, minY);\n                    maxX = max(points[j].first, maxX);\n                    maxY = max(points[j].second, maxY);\n                    for(int k = 0; k < n; k++){\n                        int minX2 = min(points[k].first, minX);\n                        int minY2 = min(points[k].second, minY);\n                        int maxX2 = max(points[k].first, maxX);\n                        int maxY2 = max(points[k].second, maxY);\n                        ans = max(ans, (maxX2 - minX2)*2 + 2*(maxY2 - minY2));\n                    }\n                }\n            }\n        }\n    }\n    /*\n    FOR(i, n){\n        int x = points[i].first;\n        int y = points[i].second;\n        if(x == minX)a.pb(mp(x, y));\n        if(x == maxX)b.pb(mp(x, y));\n        if(y == minY)c.pb(mp(x, y));\n        if(y == maxY)d.pb(mp(x, y));\n    }\n    int ans = sol(a, b);\n    ans = max(ans, sol(a, c));\n    ans = max(ans, sol(a, d));\n    ans = max(ans, sol(b, c));\n    ans = max(ans, sol(b, d));\n    ans = max(ans, sol(c, d));*/\n    cout << ans << \" \";\n    FOR(i, n- 3)cout << area << \" \";\n\n}\n\n\n"
}