{
    "id": 109048890,
    "contestId": 1044,
    "creationTimeSeconds": 1614828351,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1044,
        "index": "C",
        "name": "Optimal Polygon Perimeter",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "dp",
            "geometry"
        ]
    },
    "author": {
        "contestId": 1044,
        "members": [
            {
                "handle": "inszva"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1541355000
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\n\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/hash_policy.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\n#define LL long long\n#define int long long\n#define ull unsigned long long\n#define fi first\n#define se second\n#define pll pair<LL, LL>\n#define pii pair<int, int>\n#define fastio ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n#define SZ(x) ((int)(x.size()))\n#define LC (id<<1)\n#define RC (id<<1|1)\n\nconstexpr int N = 4e7+9;\nconstexpr int M = 1e9+7;\n#ifdef int\nconstexpr int INF = 0x3f3f3f3f3f3f3f3f;\nconstexpr int INF2 = 0xcfcfcfcfcfcfcfcf;\n#else\nconstexpr int INF = 0x3f3f3f3f;\nconstexpr int INF2 = 0xcfcfcfcf;\n#endif\n\n\nsigned main() {\n    fastio;\n    int n;\n    cin >> n;\n    vector<pii> a(n);\n    for (auto& [x, y]: a) cin >> x >> y;\n    auto solve = [&](const vector<pii>& a) {\n        int n = SZ(a);\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            ans += abs(a[i].fi-a[(i+1)%n].fi) + abs(a[i].se-a[(i+1)%n].se);\n        }\n        return ans;\n    };\n    if (n == 3) {\n        cout << solve(a) << \"\\n\";\n        return 0;\n    }\n    vector<int> id(n);\n    iota(id.begin(), id.end(), 0);\n    int l = *min_element(id.begin(), id.end(), [&](int i, int j) {\n        return a[i].fi < a[j].fi;\n    });\n    int r = *min_element(id.begin(), id.end(), [&](int i, int j) {\n        return a[i].fi > a[j].fi;\n    });\n    int u = *min_element(id.begin(), id.end(), [&](int i, int j) {\n        return a[i].se < a[j].se;\n    });\n    int d = *min_element(id.begin(), id.end(), [&](int i, int j) {\n        return a[i].se > a[j].se;\n    });\n    int ans4 = solve(vector<pii>{a[l], a[r], a[u], a[d]});\n    auto cal3 = [&](int i, int j) {\n        if (i == j) return 0ll;\n        int ans = 0;\n        for (int k = 0; k < n; k++) {\n            if (k == i || k == j) continue;\n            ans = max(ans, solve({a[i], a[j], a[k]}));\n        }\n        return ans;\n    };\n    int ans3 = 0;\n    vector<int> tmp = {l, r, u, d};\n    vector<int> id2(4);\n    iota(id2.begin(), id2.end(), 0);\n    do {\n        int i = tmp[id2[0]], j = tmp[id2[1]];\n        ans3 = max(ans3, cal3(i, j));\n    } while (next_permutation(id2.begin(), id2.end()));\n    for (int k = 3; k <= n; k++) {\n        if (k == 3) cout << ans3 << \" \";\n        else cout << ans4 << \" \";\n    }\n    cout << \"\\n\";\n    return 0;\n}"
}