{
    "id": 49954925,
    "contestId": 1044,
    "creationTimeSeconds": 1550244957,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1044,
        "index": "C",
        "name": "Optimal Polygon Perimeter",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "dp",
            "geometry"
        ]
    },
    "author": {
        "contestId": 1044,
        "members": [
            {
                "handle": "Tutis"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1541355000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 702,
    "memoryConsumedBytes": 21811200,
    "source": "/*input\r\n3\r\n0 0\r\n0 2\r\n2 0\r\n*/\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef long double ld;\r\nstruct point\r\n{\r\n\tint x, y;\r\n};\r\nint main()\r\n{\r\n\tios_base::sync_with_stdio(false);\r\n\tint n;\r\n\tcin >> n;\r\n\tpoint a[n];\r\n\tfor (point &i : a)\r\n\t\tcin >> i.x >> i.y;\r\n\tmap<int, int>X;\r\n\tmap<int, int>Y;\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\tX[a[i].x] = i;\r\n\t\tY[a[i].y] = i;\r\n\t}\r\n\tvector<int>id;\r\n\tid.push_back((*(X.begin())).second);\r\n\tid.push_back((*(Y.begin())).second);\r\n\tid.push_back((*(--X.end())).second);\r\n\tid.push_back((*(--Y.end())).second);\r\n\tsort(id.begin(), id.end());\r\n\tint ANS4 = 0;\r\n\tfor (int t = 0; t < 4; t++)\r\n\t{\r\n\t\tANS4 += abs(a[id[t]].x - a[id[(t + 1) % 4]].x);\r\n\t\tANS4 += abs(a[id[t]].y - a[id[(t + 1) % 4]].y);\r\n\t}\r\n\tint ANS3 = 0;\r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\t\tfor (int id2 = 0; id2 < 4; id2++)\r\n\t\t{\r\n\t\t\tfor (int id3 = 0; id3 < 4; id3++)\r\n\t\t\t{\r\n\t\t\t\tint GAL = 0;\r\n\t\t\t\tvector<int>ids = {i, id[id2], id[id3]};\r\n\t\t\t\tsort(ids.begin(), ids.end());\r\n\t\t\t\tfor (int t = 0; t < 3; t++)\r\n\t\t\t\t{\r\n\t\t\t\t\tGAL += abs(a[ids[t]].x - a[ids[(t + 1) % 3]].x);\r\n\t\t\t\t\tGAL += abs(a[ids[t]].y - a[ids[(t + 1) % 3]].y);\r\n\t\t\t\t}\r\n\t\t\t\tANS3 = max(ANS3, GAL);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcout << ANS3 << \" \";\r\n\tfor (int i = 4; i <= n; i++)\r\n\t\tcout << ANS4 << \" \";\r\n\r\n}"
}