{
    "id": 149433876,
    "contestId": 1044,
    "creationTimeSeconds": 1647095058,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1044,
        "index": "C",
        "name": "Optimal Polygon Perimeter",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "dp",
            "geometry"
        ]
    },
    "author": {
        "contestId": 1044,
        "members": [
            {
                "handle": "Jerry_yuu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1541355000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 358,
    "memoryConsumedBytes": 10854400,
    "source": "#pragma GCC optimize(3)\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC optimize(\"inline\")\r\n#include \"bits/stdc++.h\"\r\nusing namespace std;\r\n#define int long long\r\nint read()\r\n{\r\n    int x=0,f=1;char ch=getchar();\r\n    while (ch<'0'||ch>'9'){if (ch=='-') f=-1;ch=getchar();}\r\n    while (ch>='0'&&ch<='9'){x=x*10+ch-48;ch=getchar();}\r\n    return x*f;\r\n}\r\nint fac[50];\r\nvoid init(){\r\n    fac[0]=fac[1]=1;\r\n    for(int i=2;i<=20;i++) {\r\n        fac[i]=fac[i-1]*i;\r\n    }\r\n}\r\nint C(int n,int m) {\r\n    return fac[n]/fac[n-m]/fac[m];\r\n}\r\n#define maxn 300005\r\n#define maxm 600005\r\n#define inf 0x3f3f3f3f3f3f3f3f\r\nint n;\r\n\r\nvector<int> x,y;\r\n\r\nvoid solve() {\r\n    n=read();\r\n    for(int i=1;i<=n;i++) {\r\n        int a=read(),b=read();\r\n        x.push_back(a);\r\n        y.push_back(b);\r\n    }\r\n    int min_x=*min_element(x.begin(),x.end());\r\n    int max_x=*max_element(x.begin(),x.end());\r\n    int min_y=*min_element(y.begin(),y.end());\r\n    int max_y=*max_element(y.begin(),y.end());\r\n    int ans=0;\r\n    for(int i=0;i<n;i++) {\r\n        int dx=max(max_x-x[i],x[i]-min_x);\r\n        int dy=max(max_y-y[i],y[i]-min_y);\r\n        ans=max(ans,2*(dx+dy));\r\n    }\r\n    cout<<ans<<' ';\r\n    for(int i=4;i<=n;i++) {\r\n        cout<<2*(max_x-min_x+max_y-min_y)<<' ';\r\n    }\r\n\r\n}\r\n\r\nsigned main() {\r\n    int T=1;\r\n    while (T--) {\r\n        solve();\r\n    }\r\n}"
}