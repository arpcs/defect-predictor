{
    "id": 91099783,
    "contestId": 1044,
    "creationTimeSeconds": 1598498405,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1044,
        "index": "C",
        "name": "Optimal Polygon Perimeter",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "dp",
            "geometry"
        ]
    },
    "author": {
        "contestId": 1044,
        "members": [
            {
                "handle": "Tlatoani"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1541355000
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 327,
    "memoryConsumedBytes": 10240000,
    "source": "import java.io.BufferedReader\nimport java.io.InputStreamReader\nimport kotlin.math.max\nimport kotlin.math.min\n\nfun main() {\n    val jin = BufferedReader(InputStreamReader(System.`in`))\n    val n = jin.readLine().toInt()\n    var minX = Int.MAX_VALUE\n    var maxX = Int.MIN_VALUE\n    var minY = Int.MAX_VALUE\n    var maxY = Int.MIN_VALUE\n    val points = Array(n) {\n        val (x, y) = jin.readLine().split(\" \").map { it.toInt() }\n        minX = min(minX, x)\n        maxX = max(maxX, x)\n        minY = min(minY, y)\n        maxY = max(maxY, y)\n        Point(x, y)\n    }\n    var answer3 = 0\n    for (p in points) {\n        answer3 = max(answer3, max(p.x - minX, maxX - p.x) + max(p.y - minY, maxY - p.y))\n    }\n    print(2 * answer3)\n    println(\" ${2 * (maxX - minX + maxY - minY)}\".repeat(n - 3))\n}\n\ndata class Point(val x: Int, val y: Int)"
}