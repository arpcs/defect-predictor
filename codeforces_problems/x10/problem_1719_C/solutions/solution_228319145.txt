{
    "id": 228319145,
    "contestId": 1719,
    "creationTimeSeconds": 1697385443,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1719,
        "index": "C",
        "name": "Fighting Tournament",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1400,
        "tags": [
            "binary search",
            "data structures",
            "implementation",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1719,
        "members": [
            {
                "handle": "Sergur"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1660660500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 23,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 1536000,
    "source": "#include <iostream>\r\n#include <iomanip>\r\n#include <string>\r\n#include <vector>\r\n#include <deque>\r\n#include <algorithm>\r\n#include <limits>\r\n#include <cmath>\r\n\r\nstruct Info\r\n{\r\n    int ind, strength, wins;\r\n};\r\n\r\nvoid alg()\r\n{\r\n    int n = 0, q = 0;\r\n    std::cin >> n >> q;\r\n    std::deque<Info> a(n);\r\n    {\r\n        int ind = 0;\r\n        for (auto& [i, s, w] : a) { std::cin >> s; i = ind++; w = 0; }\r\n    }\r\n\r\n    Info best = a.front();\r\n    a.pop_front();\r\n    while (--n)\r\n    {\r\n        if (best.strength < a.front().strength) { std::swap(best, a.front()); }\r\n        best.wins++;\r\n        a.push_back(a.front());\r\n        a.pop_front();\r\n    }\r\n    a.push_back(best);\r\n\r\n    std::sort(a.begin(), a.end(), [](const Info& a, const Info& b)\r\n        {\r\n            return a.ind < b.ind;\r\n        }\r\n    );\r\n\r\n    while (q--)\r\n    {\r\n        int i = 0, k = 0;\r\n        std::cin >> i >> k;\r\n        i--;\r\n        int c = std::min(a[i].wins, std::max<int>(k - i + (i != 0), 0));\r\n        if (a[i].strength == best.strength) { c += std::max<int>(k - a.size() + 1, 0); }\r\n        std::cout << c << '\\n';\r\n        /*int c = std::min(a[i].second, std::max(k - i + (i > 0), 0));\r\n        if (i == itMax - a.begin()) { c += std::max(k - n + 1, 0); }\r\n        std::cout << c << '\\n';*/\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    std::ios_base::sync_with_stdio(false); std::cin.tie(nullptr);\r\n    int t = 0;\r\n    std::cin >> t;\r\n    while (t--) { alg(); }\r\n}"
}