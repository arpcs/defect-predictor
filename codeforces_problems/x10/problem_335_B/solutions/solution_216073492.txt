{
    "id": 216073492,
    "contestId": 335,
    "creationTimeSeconds": 1690538839,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 335,
        "index": "B",
        "name": "Palindrome",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 335,
        "members": [
            {
                "handle": "Lyamzin_alexandr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1375549200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 2764800,
    "source": "#include <bits/stdc++.h>\r\n#pragma GCC optimize(\"-O3\")\r\nusing namespace std;\r\ntypedef long long ll;\r\nstring s, ans1, ans2;\r\nmap<pair<ll, ll>, ll> dp;\r\nll ans(ll l, ll r, bool z = 0) {\r\n    if (l > r) return 0;\r\n    if (z) {\r\n        if (l == r) {\r\n            ans2.push_back(s[l]);\r\n            return 1;\r\n        }\r\n        if (s[l] == s[r]) {\r\n            ll x = 2 + ans(l + 1, r - 1, 1);\r\n            if ((ll)ans1.size() + (ll)ans2.size() < 100) ans1.push_back(s[l]);\r\n            if ((ll)ans1.size() + (ll)ans2.size() < 100) ans2.push_back(s[r]);\r\n            return min(x, (ll)100);\r\n        }\r\n        ll x = ans(l + 1, r);\r\n        if (x > 99) {\r\n            x = ans(l + 1, r, 1);\r\n            return x;\r\n        }\r\n        ll y = ans(l, r - 1);\r\n        if (y > 99) {\r\n            y = ans(l, r - 1, 1);\r\n            return y;\r\n        }\r\n        if (x >= y) x = ans(l + 1, r, 1);\r\n        else y = ans(l, r - 1, 1);\r\n        return max(x, y);\r\n    }\r\n    if (dp[{l, r}]) return dp[{l, r}];\r\n    if (l == r) return dp[{l, r}] = 1;\r\n    if (s[l] == s[r]) {\r\n        ll x = 2 + ans(l + 1, r - 1);\r\n        if (x > 99) {\r\n            ans(l + 1, r - 1, 1);\r\n            if ((ll)ans1.size() + (ll)ans2.size() < 100) ans1.push_back(s[l]);\r\n            if ((ll)ans1.size() + (ll)ans2.size() < 100) ans2.push_back(s[r]);\r\n        }\r\n        return dp[{l, r}] = min(x, (ll)100);\r\n    }\r\n    ll x = ans(l + 1, r);\r\n    if (x > 99) {\r\n        x = ans(l + 1, r, 1);\r\n        return dp[{l, r}] = x;\r\n    }\r\n    ll y = ans(l, r - 1);\r\n    if (y > 99) {\r\n        y = ans(l, r - 1, 1);\r\n        return dp[{l, r}] = y;\r\n    }\r\n    return dp[{l, r}] = max(x, y);\r\n}\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cin >> s;\r\n    ll n = (ll)s.size();\r\n    if (ans(0, n) < 100) ans(0, n, 1);\r\n    reverse(ans1.begin(), ans1.end());\r\n    cout << ans1 << ans2;\r\n}"
}