{
    "id": 231266615,
    "contestId": 335,
    "creationTimeSeconds": 1699065169,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 335,
        "index": "B",
        "name": "Palindrome",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 335,
        "members": [
            {
                "handle": "daitouzero"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1375549200
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 72,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 36659200,
    "source": "// LUOGU_RID: 133225163\n#include <bits/stdc++.h>\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double ldouble;\r\ntypedef std::pair<int ,int > pii;\r\nint const N=3e3+5;\r\nint n,dp[N][N];         \r\nstd::string S;\r\ninline std::string print(int l,int r,int len)\r\n{\r\n    if (!len) return \"\";\r\n    if (len==1)\r\n    {\r\n        std::string temp=\"\";\r\n        temp+=S[l];\r\n        return temp;\r\n    }\r\n    if (S[l]==S[r-1]) return S[l]+print(l+1,r-1,len-2)+S[r-1];\r\n    if (dp[l][r]==dp[l+1][r]) return print(l+1,r,len);\r\n    return print(l,r-1,len);\r\n}\r\nint main()\r\n{\r\n    std::ios::sync_with_stdio(false);\r\n    std::cin.tie(0);std::cout.tie(0);\r\n    std::cin>>S;\r\n    if (S.length()>3000) S=S.substr(0,3000);\r\n    n=S.length();\r\n    for (int r=0;r<=n;r++)\r\n        for (int l=r;l>=0;l--)\r\n        {\r\n            if (r-l<2) dp[l][r]=r-l;\r\n            else if (S[l]==S[r-1]) dp[l][r]=dp[l+1][r-1]+2;\r\n            else dp[l][r]=std::max(dp[l+1][r],dp[l][r-1]);\r\n        }\r\n    std::string res=print(0,n,std::min(dp[0][n],100));\r\n    std::cout<<res;\r\n    return 0;\r\n}"
}