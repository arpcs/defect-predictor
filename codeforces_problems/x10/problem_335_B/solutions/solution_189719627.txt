{
    "id": 189719627,
    "contestId": 335,
    "creationTimeSeconds": 1674119704,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 335,
        "index": "B",
        "name": "Palindrome",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "dp"
        ]
    },
    "author": {
        "contestId": 335,
        "members": [
            {
                "handle": "rakkoon69"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1375549200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 72,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 79360000,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <iomanip>\r\n#include <cmath>\r\n#include <cstring>\r\n\r\n#define ll long long\r\n#define II pair<int, int>\r\n#define fs first\r\n#define sc second\r\n#define endl '\\n'\r\n\r\nconst double PI = 3.141592653589793238;\r\nconst long long LINF = 1ll << 60;\r\nconst int INF = 1 << 30;\r\nconst int N = 5e4 + 5;\r\n\r\nusing namespace std;\r\n\r\nstring s;\r\nint cnt[27];\r\nint dp[4444][4444];\r\n\r\nint solve(int l, int r) {\r\n    if(dp[l][r] != -1) return dp[l][r];\r\n    if(l == r) return dp[l][r] = 1;\r\n    if(l + 1 == r) return dp[l][r] = (s[l] == s[r]) ? 2 : 1;\r\n    return dp[l][r] = max({solve(l + 1, r - 1) + ((s[l] == s[r]) ? 2 : 0), \r\n                            solve(l, r - 1),\r\n                             solve(l + 1, r)});\r\n}\r\n\r\nint32_t main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL); cout.tie(NULL);\r\n\r\n    cin >> s;\r\n\r\n    int n = s.size();\r\n    s = \"@\" + s;\r\n\r\n    for(int i = 1; i <= n; i++) {\r\n        cnt[s[i] - 'a']++;\r\n    }\r\n\r\n    for(int i = 0; i < 26; i++) {\r\n        if(cnt[i] >= 100) {\r\n            for(int x = 1; x <= 100; x++) {\r\n                char c = 'a' + i;\r\n                cout << c;\r\n            }\r\n            cout << endl;\r\n            return 0;\r\n        }\r\n    } \r\n\r\n    memset(dp, -1, sizeof(dp));\r\n\r\n    int ans = solve(1, n);\r\n    int l = 1, r = n;\r\n\r\n    string res = \"\";\r\n    for(int i = 1; i <= (dp[1][n] + 1) / 2; i++) {\r\n        while(dp[l + 1][r] == ans) l++;\r\n        while(dp[l][r - 1] == ans) r--;\r\n        ans -= 2;\r\n        res += s[l];\r\n        l++, r--;\r\n    }\r\n\r\n    string tmp = \"\";\r\n    for(int i = 0; i < min(50, (int) (res.size())); i++) tmp += res[i];\r\n    res = tmp;\r\n\r\n    if(dp[1][n] & 1 && dp[1][n] <= 100) {\r\n        cout << res;\r\n        for(int i = res.size() - 2; i >= 0; i--) cout << res[i];\r\n        cout << endl;\r\n    } else {\r\n        cout << res;\r\n        reverse(res.begin(), res.end());\r\n        cout << res;\r\n        cout << endl;\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}