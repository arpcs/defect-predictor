{
    "id": 219876829,
    "contestId": 819,
    "creationTimeSeconds": 1692688063,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 819,
        "index": "E",
        "name": "Mister B and Flight to the Moon",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2800,
        "tags": [
            "constructive algorithms",
            "graphs"
        ]
    },
    "author": {
        "contestId": 819,
        "members": [
            {
                "handle": "kintakku"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1498574100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 1740800,
    "source": "// Code written for Jasnah\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main() {\r\n  int N;\r\n  cin >> N;\r\n  vector<vector<int>> ans;\r\n  auto add_path = [&](vector<int> path) -> void {\r\n    ans.push_back(path);\r\n  };\r\n  function<void(int)> solve = [&](int n) {\r\n    if (n == 3) {\r\n      add_path({1, 2, 3});\r\n      add_path({1, 2, 3});\r\n      return;\r\n    }\r\n    if (n == 4) {\r\n      add_path({1, 2, 4});\r\n      add_path({1, 3, 4});\r\n      add_path({2, 3, 4});\r\n      return;\r\n    }\r\n    solve(n - 2);\r\n    int s = n, t = n - 1;\r\n    for (int i = 1; i <= n - 3; i++)\r\n      add_path({s, i, t, i + 1});\r\n    add_path({s, n - 2, t});\r\n    add_path({s, 1, t});\r\n  };\r\n  solve(N);\r\n  cout << (int)ans.size() << '\\n';\r\n  for (auto edges : ans) {\r\n    cout << (int)edges.size() << \" \";\r\n    for (auto edge : edges)\r\n      cout << edge << \" \";\r\n    cout << '\\n';\r\n  }\r\n}"
}