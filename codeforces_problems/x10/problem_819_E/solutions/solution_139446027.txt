{
    "id": 139446027,
    "contestId": 819,
    "creationTimeSeconds": 1639628096,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 819,
        "index": "E",
        "name": "Mister B and Flight to the Moon",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2800,
        "tags": [
            "constructive algorithms",
            "graphs"
        ]
    },
    "author": {
        "contestId": 819,
        "members": [
            {
                "handle": "wenhao801"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1498574100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 2150400,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <cstring>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\ninline int read () {\r\n    int ret = 0, t = 1;\r\n    char c = getchar();\r\n    while ((c < '0' || c > '9') && c != '-') c = getchar();\r\n    if (c == '-') t = -1, c = getchar();\r\n    while (c >= '0' && c <= '9') ret = ret * 10 + c - '0', c = getchar();\r\n    return ret * t;\r\n}\r\n\r\nint cur = 0;\r\nvector <int> out;\r\nvoid add3 (int u, int v, int w) {\r\n    ++cur;\r\n    out.push_back(3), out.push_back(u), out.push_back(v), out.push_back(w), out.push_back(-1);\r\n}\r\nvoid add4 (int u, int v, int w, int x) {\r\n    ++cur;\r\n    out.push_back(4), out.push_back(u), out.push_back(v), out.push_back(w), out.push_back(x), out.push_back(-1);\r\n}\r\n\r\nint main () {\r\n    int n = read(), i, j;\r\n    if (n % 2 == 0) {\r\n        int now;\r\n        if (n % 4 == 0) now = 0;\r\n        else {\r\n            add3(6, 1, 2);\r\n            add4(6, 2, 5, 3);\r\n            add3(3, 4, 5);\r\n            add3(1, 2, 3);\r\n            add4(1, 3, 6, 4);\r\n            add3(4, 5, 6);\r\n            add3(2, 3, 4);\r\n            add4(2, 4, 1, 5);\r\n            add3(5, 6, 1);\r\n            now = 6;\r\n        }\r\n        for (now; now < n; now += 4) {\r\n            add3(now + 1, now + 2, now + 3), add3(now + 1, now + 2, now + 3);\r\n            add3(now + 2, now + 3, now + 4), add3(now + 2, now + 3, now + 4);\r\n            add3(now + 3, now + 4, now + 1), add3(now + 3, now + 4, now + 1);\r\n            add3(now + 4, now + 1, now + 2), add3(now + 4, now + 1, now + 2);\r\n            for (i = 1; i < now; i += 2)\r\n                add4(i, now + 1, i + 1, now + 2), add4(i, now + 1, i + 1, now + 2),\r\n                add4(i, now + 3, i + 1, now + 4), add4(i, now + 3, i + 1, now + 4);\r\n        }\r\n    }\r\n    else {\r\n        add3(1, 2, 3), add3(1, 2, 3);\r\n        for (i = 4; i <= n; i += 2) {\r\n            for (j = 4; j < i; j += 2)\r\n                add4(j, i, j + 1, i + 1), add4(j, i, j + 1, i + 1);\r\n            add4(1, i, 2, i + 1); add4(2, i, 3, i + 1);\r\n            add3(1, i, i + 1); add3(3, i, i + 1);\r\n        }\r\n    }\r\n    printf(\"%d\\n\", cur);\r\n    for (auto i: out) if (i == -1) putchar('\\n'); else printf(\"%d \", i);\r\n    return 0;\r\n}"
}