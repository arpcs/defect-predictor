{
    "id": 217723348,
    "contestId": 1693,
    "creationTimeSeconds": 1691425890,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1693,
        "index": "E",
        "name": "Outermost Maximums",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3400,
        "tags": [
            "data structures",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1693,
        "members": [
            {
                "handle": "kid_magic"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1655390100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 42,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 9625600,
    "source": "// LUOGU_RID: 119583931\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int MAXN=2e5+5;\r\nint n;///\r\nint a[MAXN];//\r\nint Bit[MAXN];\r\nint lowbit(int x)\r\n{\r\n    return (x&(-x));\r\n}\r\nvoid update(int k,int x)\r\n{\r\n    for(int i=k;i<=n;i+=lowbit(i))\r\n    {\r\n        Bit[i]+=x;\r\n    }\r\n    return;\r\n}\r\nint Sum(int k)\r\n{\r\n    int Res=0;\r\n    for(int i=k;i>=1;i-=lowbit(i))\r\n    {\r\n        Res+=Bit[i];\r\n    }\r\n    return Res;\r\n}\r\n\r\nvector<int>Pos[MAXN];\r\nint main()\r\n{\r\n    // freopen(\"date.in\",\"r\",stdin);\r\n    // freopen(\"date.out\",\"w\",stdout);\r\n    scanf(\"%d\",&n);\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        scanf(\"%d\",&a[i]);\r\n        Pos[a[i]].push_back(i);\r\n    }\r\n    int l=1,r=n;\r\n    long long Res=0;\r\n    for(int i=n;i>=1;i--)\r\n    {\r\n        if(Pos[i].empty())\r\n        {\r\n            continue;\r\n        }\r\n        for(int j=0;j<Pos[i].size();j++)\r\n        {\r\n            int v=Pos[i][j];\r\n            update(v,1);\r\n        }\r\n        int L=Pos[i][0];\r\n        int R=Pos[i].back();\r\n        int Ml=max(L,l);\r\n        int Mr=min(R,r);\r\n        if(Ml<=Mr)\r\n        {\r\n            Res+=Sum(R)-Sum(L-1);\r\n            l=L;\r\n            r=R;\r\n        }\r\n        else\r\n        {\r\n            if(R<l)\r\n            {\r\n                Res+=Sum(l-1)-Sum(L-1);\r\n                r=l-1;\r\n                l=L;\r\n                \r\n                \r\n            }\r\n            else if(r<L)\r\n            {\r\n                Res+=Sum(R)-Sum(r);\r\n                l=r+1;\r\n                r=R;\r\n            }\r\n        }\r\n        //printf(\"%d %d::\\n\",i,Res);\r\n    }\r\n    printf(\"%lld\\n\",Res);\r\n}"
}