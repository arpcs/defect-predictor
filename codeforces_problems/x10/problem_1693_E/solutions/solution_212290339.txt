{
    "id": 212290339,
    "contestId": 1693,
    "creationTimeSeconds": 1688601492,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1693,
        "index": "E",
        "name": "Outermost Maximums",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3400,
        "tags": [
            "data structures",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1693,
        "members": [
            {
                "handle": "275307894a"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1655390100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 3174400,
    "source": "#include<bits/stdc++.h>\r\n#define Gc() getchar() \r\n#define Me(x,y) memset(x,y,sizeof(x))\r\n#define Mc(x,y) memcpy(x,y,sizeof(x))\r\n#define d(x,y) ((m)*(x-1)+(y))\r\n#define R(n) (rnd()%(n)+1)\r\n#define Pc(x) putchar(x)\r\n#define LB lower_bound\r\n#define UB upper_bound\r\n#define fi first\r\n#define se second\r\nusing namespace std;using ll=long long;using db=double;using lb=long db;using ui=unsigned;using ull=unsigned long long;using pii=pair<int,int>;using LL=__int128;\r\nconst int N=1e5+5,M=1e5+5,K=2e4+5,mod=1e9+7,Mod=mod-1;const db eps=1e-9;const int INF=1e9+7;mt19937 rnd(time(0));\r\nint n,A[N];ll ans;vector<int> Id[N];\r\nnamespace bit{\r\n\tint f[N];void add(int x,int y){while(x<=n) f[x]+=y,x+=x&-x;}int qry(int x){int ans=0;while(x) ans+=f[x],x-=x&-x;return ans;}\r\n}\r\nint main(){\r\n\tint i,j;scanf(\"%d\",&n);\r\n\tfor(i=1;i<=n;i++) scanf(\"%d\",&A[i]),Id[A[i]].emplace_back(i),ans+=(A[i]>0);\r\n\tint LL=0,RR=n+1;\r\n\tfor(i=n;i;i--){\r\n\t\tif(Id[i].empty()) continue;\r\n\t\tans+=bit::qry(Id[i].back())-bit::qry(Id[i].front()-1);\r\n\t\tint L=Id[i].front(),R=Id[i].back();\r\n\t\tif(L>RR) ans+=bit::qry(L)-bit::qry(RR),L=RR+1;\r\n\t\tif(R<LL) ans+=bit::qry(LL-1)-bit::qry(R),R=LL-1;\r\n\t\tLL=L;RR=R;\r\n\t\tfor(int j:Id[i]) bit::add(j,1);\r\n\t\t// cerr<<ans<<'\\n';\r\n\t}\r\n\tprintf(\"%lld\\n\",ans);\r\n}"
}