{
    "id": 209741919,
    "contestId": 1693,
    "creationTimeSeconds": 1686819751,
    "relativeTimeSeconds": 6751,
    "problem": {
        "contestId": 1693,
        "index": "E",
        "name": "Outermost Maximums",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3400,
        "tags": [
            "data structures",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1693,
        "members": [
            {
                "handle": "He_Ren"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1686813000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 21606400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef pair<int,int> pii;\r\nconst int MAXN = 2e5 + 5;\r\n\r\nstruct Data\r\n{\r\n\tint to[3], cnt[3];\r\n};\r\n\r\nData operator + (const Data &A,const Data &B)\r\n{\r\n\tData res;\r\n\tfor(int i=0; i<3; ++i)\r\n\t{\r\n\t\tres.to[i] = A.to[B.to[i]];\r\n\t\tres.cnt[i] = A.cnt[B.to[i]] + B.cnt[i];\r\n\t}\r\n\treturn res;\r\n}\r\n\r\nstruct Segment_Tree\r\n{\r\n\tData tree[MAXN<<2];\r\n\tint bak[MAXN][2];\r\n\t#define ls(u) ((u)<<1)\r\n\t#define rs(u) ((u)<<1|1)\r\n\t#define lson(u) ls(u),l,mid\r\n\t#define rson(u) rs(u),mid+1,r\r\n\tvoid push_up(int u)\r\n\t{\r\n\t\ttree[u] = tree[ls(u)] + tree[rs(u)];\r\n\t}\r\n\tvoid update(int u,int l,int r,int q,int t,int k)\r\n\t{\r\n\t\tif(l == r)\r\n\t\t{\r\n\t\t\tbak[l][t] += k;\r\n\t\t\tif(bak[l][0] && bak[l][1])\r\n\t\t\t{\r\n\t\t\t\tfor(int i=0; i<3; ++i)\r\n\t\t\t\t{\r\n\t\t\t\t\ttree[u].to[i] = 2;\r\n\t\t\t\t\ttree[u].cnt[i] = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if(bak[l][0])\r\n\t\t\t{\r\n\t\t\t\ttree[u].to[0] = 0; tree[u].cnt[0] = 0;\r\n\t\t\t\ttree[u].to[1] = 2; tree[u].cnt[1] = 1;\r\n\t\t\t\ttree[u].to[2] = 0; tree[u].cnt[2] = 0;\r\n\t\t\t}\r\n\t\t\telse if(bak[l][1])\r\n\t\t\t{\r\n\t\t\t\ttree[u].to[0] = 2; tree[u].cnt[0] = 1;\r\n\t\t\t\ttree[u].to[1] = 1; tree[u].cnt[1] = 0;\r\n\t\t\t\ttree[u].to[2] = 1; tree[u].cnt[2] = 0;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfor(int i=0; i<3; ++i)\r\n\t\t\t\t{\r\n\t\t\t\t\ttree[u].to[i] = i;\r\n\t\t\t\t\ttree[u].cnt[i] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tint mid = (l+r)>>1;\r\n\t\tif(q<=mid) update(lson(u),q,t,k);\r\n\t\telse update(rson(u),q,t,k);\r\n\t\tpush_up(u);\r\n\t}\r\n\tData query(int u,int l,int r,int q)\r\n\t{\r\n\t\tif(r<=q) return tree[u];\r\n\t\tint mid = (l+r)>>1;\r\n\t\tif(q<=mid) return query(lson(u),q);\r\n\t\telse return query(lson(u),q) + query(rson(u),q);\r\n\t}\r\n}tree;\r\n\r\nint a[MAXN];\r\n\r\nint main(void)\r\n{\r\n\tint n;\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=1; i<=n; ++i)\r\n\t\tscanf(\"%d\",&a[i]);\r\n\t\r\n\tfor(int i=1; i<=n+1; ++i)\r\n\t\ttree.update(1,0,n, a[i], 1, 1);\r\n\ttree.update(1,0,n, 0, 0, 1);\r\n\t\r\n\tll ans = 0;\r\n\tfor(int i=1; i<=n; ++i)\r\n\t{\r\n\t\ttree.update(1,0,n, a[i], 1, -1);\r\n\t\t\r\n\t\tif(a[i]) ans += tree.query(1,0,n, a[i]-1).cnt[2];\r\n\t\t\r\n\t\ttree.update(1,0,n, a[i], 0, 1);\r\n\t}\r\n\t\r\n\tprintf(\"%lld\\n\",ans);\r\n\treturn 0;\r\n}\r\n"
}