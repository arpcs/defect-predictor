{
    "id": 210547026,
    "contestId": 812,
    "creationTimeSeconds": 1687351672,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 812,
        "index": "D",
        "name": "Sagheer and Kindergarten",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2700,
        "tags": [
            "dfs and similar",
            "graphs",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 812,
        "members": [
            {
                "handle": "bkifhr7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1496326500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 3174400,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\n#define mem(a, b) memset(a, b, sizeof(a));\n#define IOS ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\nconst int N = 1e5 + 5;\n/////////////////////////////////////////////////////////////////////////////////////\nll wj[N];\nvector<ll> a[N];\nbool flog;\n\nll dfs(ll u, ll p)\n{\n    for (int i = 0; i < a[u].size(); ++i)\n    {\n        if (a[u][i] == p) return 2;\n        ll  sum = dfs(a[u][i], p);\n        if (sum) return sum + 1;\n    }\n    return 0;\n}\n\nauto solve()\n{\n    ll n, m, k, q; cin >> n >> m >> k >> q;\n    while (k--)\n    {\n        ll u, v; cin >> u >> v;\n        if (wj[v] != 0)\n        {\n            a[u].push_back(wj[v]);\n        }\n        wj[v] = u;\n    }\n    while (q--)\n    {\n        ll u, v; cin >> u >> v;\n        flog = 0;\n        ll ans = dfs(wj[v], u);\n        cout << ans << endl;\n    }\n}\n\nint main()\n{\n    IOS;\n    //int T; cin >> T; while (T--)\n        solve();\n    return 0;\n}\n   \t\t   \t \t \t\t \t    \t  \t\t  \t\t\t"
}