{
    "id": 224195040,
    "contestId": 812,
    "creationTimeSeconds": 1695225776,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 812,
        "index": "D",
        "name": "Sagheer and Kindergarten",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2700,
        "tags": [
            "dfs and similar",
            "graphs",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 812,
        "members": [
            {
                "handle": "u_noob_i"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1496326500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define INF 1e9\r\n#define pb push_back\r\n#define pr pop_back\r\n#define rep(a, b, c) for (int(a) = (b); (a) <= (c); ++(a))\r\n#define irep(a, b, c) for (int(a) = (b); (a) >= (c); --(a))\r\n#define pi pair<int, int>\r\n#define pl pair<ll, ll>\r\n#define vi vector<int>\r\n#define vb vector<bool>\r\n#define vl vector<ll>\r\n#define vpi vector<pair<int, int>>\r\n#define vpl vector<pair<ll, ll>>\r\n#define vvi vector<vector<int>>\r\n#define vvl vector<vector<ll>>\r\n#define vvvi vector<vector<vector<int>>>\r\nll M = 1e9 + 7;\r\n\r\nvi p, r, dep;\r\nvvi adj;\r\n\r\nvoid disj(int n)\r\n{\r\n    p.resize(n);\r\n    r.resize(n);\r\n    rep(i, 0, n - 1) p[i] = i, r[i] = 1;\r\n}\r\n\r\nint find(int u)\r\n{\r\n    if (p[u] != u)\r\n        p[u] = find(p[u]);\r\n    return p[u];\r\n}\r\n\r\nvoid merge(int u, int v)\r\n{\r\n    int x = find(u), y = find(v);\r\n    if (r[y] < r[x])\r\n    {\r\n        p[y] = x;\r\n        r[x] += r[y];\r\n    }\r\n    else\r\n    {\r\n        p[x] = y;\r\n        r[y] += r[x];\r\n    }\r\n}\r\n\r\nvoid dfs(int u, int p = -1)\r\n{\r\n    dep[u] = 1;\r\n    for (auto v : adj[u])\r\n        if (v != p)\r\n        {\r\n            dfs(v, u);\r\n            dep[u] += dep[v];\r\n        }\r\n}\r\n\r\nvoid solve()\r\n{\r\n    int n, m, k, q;\r\n    cin >> n >> m >> k >> q;\r\n    disj(n);\r\n    adj.resize(n);\r\n    vi toy(m, -1);\r\n    rep(i, 1, k)\r\n    {\r\n        int u, v;\r\n        cin >> u >> v;\r\n        u--;\r\n        v--;\r\n        if (toy[v] == -1)\r\n            toy[v] = u;\r\n        else\r\n        {\r\n            adj[toy[v]].pb(u);\r\n            merge(u, toy[v]);\r\n            toy[v] = u;\r\n        }\r\n    }\r\n    dep.assign(n, -1);\r\n    rep(i, 0, n - 1) if (dep[i] == -1) dfs(i);\r\n    rep(i, 1, q)\r\n    {\r\n        int u, v;\r\n        cin >> u >> v;\r\n        u--;\r\n        v--;\r\n        v = toy[v];\r\n        if (v == -1 || find(u) != find(v))\r\n            cout << 0 << \"\\n\";\r\n        else\r\n            cout << dep[u] << \"\\n\";\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    cin.sync_with_stdio(false);\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n\r\n    int tt;\r\n    tt = 1;\r\n    for (int TT = 1; TT <= tt; TT++)\r\n    {\r\n        solve();\r\n        cout << \"\\n\";\r\n    }\r\n}\r\n"
}