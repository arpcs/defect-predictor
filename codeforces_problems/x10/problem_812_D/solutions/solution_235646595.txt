{
    "id": 235646595,
    "contestId": 812,
    "creationTimeSeconds": 1701654751,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 812,
        "index": "D",
        "name": "Sagheer and Kindergarten",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2700,
        "tags": [
            "dfs and similar",
            "graphs",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 812,
        "members": [
            {
                "handle": "SummerSky"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1496326500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 57,
    "timeConsumedMillis": 733,
    "memoryConsumedBytes": 10137600,
    "source": "#include <stdlib.h>\r\n#include <time.h>\r\n#include <vector>\r\n#include <math.h>\r\n#include <algorithm>\r\n#include <sstream>\r\n#include <iostream>\r\n#include <fstream>\r\n#include <string>\r\n#include <string.h>\r\n#include <map>\r\n#include <stack>\r\n#include <queue>\r\n#include <utility>\r\n#include <set>\r\n#include <deque>\r\n\r\nusing namespace std;\r\ntypedef long long int ll;\r\n\r\nconst int M=100000+10;\r\n\r\nint ind[M];\r\nint toy[M];\r\nvector<int> adj[M];\r\nint intime[M],outtime[M];\r\nint timestamp = 1;\r\n\r\nint vis[M];\r\nint childnum[M];\r\nvoid dfs(int cur, int par){\r\n\tintime[cur] = timestamp++;\r\n\tchildnum[cur] = 1;\r\n\tfor (int i = 0; i < adj[cur].size(); i++){\r\n\t\tint nxt = adj[cur][i];\r\n\t\tif (nxt != par){\r\n\t\t\tdfs(nxt, cur);\r\n\t\t\tchildnum[cur] += childnum[nxt];\r\n\t\t}\r\n\t}\r\n\touttime[cur] = timestamp++;\r\n}\r\n\r\nint main() {\r\n\t\r\n\t//freopen(\"input.txt\",\"r\",stdin);\r\n\t//freopen(\"output.txt\",\"w\",stdout);\r\n\t\r\n\t\r\n\tint n,m,k,q; cin>>n>>m>>k>>q;\r\n\t\r\n\tfor (int i = 0; i < k; i++){\r\n\t\tint a,b; cin>>a>>b;\r\n\t\tif (toy[b] == 0){\r\n\t\t\ttoy[b] = a;\r\n\t\t} else {\r\n\t\t\t//adj[a].push_back(toy[b]);\r\n\t\t\tadj[toy[b]].push_back(a);\r\n\t\t\tind[a]++;\r\n\t\t\ttoy[b] = a;\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\t\r\n\t\r\n\tfor (int i = 1; i <= n; i++){\r\n\t\tif (!vis[i] && ind[i] == 0){\r\n\t\t\tdfs(i, 0);\r\n\t\t}\r\n\t}\r\n\t\r\n//\tcout<<\"childnum\"<<endl;\r\n//\tfor (int i = 1; i <= n; i++){\r\n//\t\tcout<<childnum[i]<<\" \";\r\n//\t}\r\n//\tcout<<endl;\r\n//\t\r\n//\tcout<<\"intime\"<<endl;\r\n//\tfor (int i = 1; i <= n; i++){\r\n//\t\tcout<<intime[i]<<\" \";\r\n//\t}\r\n//\tcout<<endl;\r\n//\t\r\n//\tcout<<\"outtime\"<<endl;\r\n//\tfor (int i = 1; i <= n; i++){\r\n//\t\tcout<<outtime[i]<<\" \";\r\n//\t}\r\n//\tcout<<endl;\r\n\t\r\n\t\r\n\tll res = 0;\r\n\tfor (int iq = 0; iq < q; iq++){\r\n\t\tint x,y; cin>>x>>y;\r\n\t\tint p = toy[y];\r\n\t\tif (intime[x] < intime[p] && outtime[p] < outtime[x]){\r\n\t\t\tcout<<childnum[x]<<endl;\r\n\t\t} else {\r\n\t\t\tcout<<0<<endl;\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\treturn 0;\r\n}\r\n"
}