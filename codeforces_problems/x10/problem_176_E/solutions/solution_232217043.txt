{
    "id": 232217043,
    "contestId": 176,
    "creationTimeSeconds": 1699617017,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 176,
        "index": "E",
        "name": "Archaeology",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3100,
        "tags": [
            "data structures",
            "dfs and similar",
            "trees"
        ]
    },
    "author": {
        "contestId": 176,
        "members": [
            {
                "handle": "luogu_bot1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1334934300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 55,
    "timeConsumedMillis": 778,
    "memoryConsumedBytes": 58777600,
    "source": "// LUOGU_RID: 134352847\n// Words are flowing out like endless rain into a paper cup,\r\n// They slither while they pass, they slip away across the universe\r\n// Pools of sorrow, waves of joy are drifting through my opened mind,\r\n// Possessing and caressing me.\r\n// Jai guru de va om\r\n// Nothing's gonna change my world,\r\n// Nothing's gonna change my world,\r\n//\r\n// Nothing's gonna change my world,\r\n// Nothing's gonna change my world,\r\n//\r\n// Images of broken light which dance before me like a million eyes,\r\n// That call me on and on across the universe,\r\n// Thoughts meander like a restless wind inside a letter box they\r\n// Tumble blindly as they make their way\r\n// Across the universe\r\n// Jai guru de va om\r\n// Nothing's gonna change my world,\r\n// Nothing's gonna change my world,\r\n//\r\n// Nothing's gonna change my world,\r\n// Nothing's gonna change my world,\r\n//\r\n// Sounds of laughter shades of earth are ringing\r\n// Through my open views inciting and inviting me\r\n// Limitless undying love which shines around me like a\r\n// Million suns, it calls me on and on\r\n// Across the universe\r\n// Jai guru de va om\r\n// Nothing's gonna change my world,\r\n// Nothing's gonna change my world,\r\n//\r\n// Nothing's gonna change my world,\r\n// Nothing's gonna change my world,\r\n//\r\n// Jai guru de va\r\n\r\n//#pragma GCC optimize(3)\r\n//#pragma GCC target(\"avx\")\r\n//#pragma GCC target(\"avx,avx2\")\r\n//#pragma GCC optimize(\"Ofast\")\r\n//#pragma GCC optimize(\"inline\")\r\n//#pragma GCC optimize(\"-fgcse\")\r\n//#pragma GCC optimize(\"-fgcse-lm\")\r\n//#pragma GCC optimize(\"-fipa-sra\")\r\n//#pragma GCC optimize(\"-ftree-pre\")\r\n//#pragma GCC optimize(\"-ftree-vrp\")\r\n//#pragma GCC optimize(\"-fpeephole2\")\r\n//#pragma GCC optimize(\"-ffast-math\")\r\n//#pragma GCC optimize(\"-fsched-spec\")\r\n//#pragma GCC optimize(\"unroll-loops\")\r\n//#pragma GCC optimize(\"-falign-jumps\")\r\n//#pragma GCC optimize(\"-falign-loops\")\r\n//#pragma GCC optimize(\"-falign-labels\")\r\n//#pragma GCC optimize(\"-fdevirtualize\")\r\n//#pragma GCC optimize(\"-fcaller-saves\")\r\n//#pragma GCC optimize(\"-fcrossjumping\")\r\n//#pragma GCC optimize(\"-fthread-jumps\")\r\n//#pragma GCC optimize(\"-funroll-loops\")\r\n//#pragma GCC optimize(\"-fwhole-program\")\r\n//#pragma GCC optimize(\"Ofast,fast-math\")\r\n//#pragma GCC optimize(\"-freorder-blocks\")\r\n//#pragma GCC optimize(\"-fschedule-insns\")\r\n//#pragma GCC optimize(\"inline-functions\")\r\n//#pragma GCC optimize(\"-ftree-tail-merge\")\r\n//#pragma GCC optimize(\"-fschedule-insns2\")\r\n//#pragma GCC optimize(\"-fstrict-aliasing\")\r\n//#pragma GCC optimize(\"-fstrict-overflow\")\r\n//#pragma GCC optimize(\"-falign-functions\")\r\n//#pragma GCC optimize(\"-fcse-skip-blocks\")\r\n//#pragma GCC optimize(\"-fcse-follow-jumps\")\r\n//#pragma GCC optimize(\"-fsched-interblock\")\r\n//#pragma GCC optimize(\"-fpartial-inlining\")\r\n//#pragma GCC optimize(\"no-stack-protector\")\r\n//#pragma GCC optimize(\"-freorder-functions\")\r\n//#pragma GCC optimize(\"-findirect-inlining\")\r\n//#pragma GCC optimize(\"-fhoist-adjacent-loads\")\r\n//#pragma GCC optimize(\"-frerun-cse-after-loop\")\r\n//#pragma GCC optimize(\"inline-small-functions\")\r\n//#pragma GCC optimize(\"-finline-small-functions\")\r\n//#pragma GCC optimize(\"-ftree-switch-conversion\")\r\n//#pragma GCC optimize(\"-foptimize-sibling-calls\")\r\n//#pragma GCC optimize(\"-fexpensive-optimizations\")\r\n//#pragma GCC optimize(\"-funsafe-loop-optimizations\")\r\n//#pragma GCC optimize(\"inline-functions-called-once\")\r\n//#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\r\n//#pragma GCC optimize(2)\r\n#include<bits/stdc++.h>\r\n//#include<iostream>\r\n//#include<string>\r\n//#include<cmath>\r\n//#include<cstdio>\r\n//#include<cctype>\r\n//#include<cstring>\r\n//#include<iomanip>\r\n//#include<cstdlib>\r\n//#include<ctime>\r\n//#include<set>\r\n//#include<map>\r\n//#include<utility>\r\n//#include<queue>\r\n//#include<vector>\r\n//#include<stack>\r\n//#include<sstream>\r\n//#include<algorithm>\r\nusing namespace std;\r\n/*=====================================================================*/\r\n#define ll long long\r\n#define int ll\r\n#define pii pair<int,int>\r\n#define vi vector<int>\r\n#define vii vector<pii>\r\n#define pdd pair<double,double>\r\n#define ull unsigned long long\r\n#define pb push_back\r\n#define rep(i,n) for(int i=0;i<(int)(n);++i)\r\n#define all(s) (s).begin(),(s).end()\r\n#define repd(i,n) for(int i=(int)(n)-1;i>=0;--i)\r\n#define forr(i,a,b,c) for(int i=(int)(a);i<=(int)(b);i+=(int)(c))\r\n#define forn(i,p,n) for(int i=(int)(p);i<=(int)(n);++i)\r\n#define ford(i,p,n) for(int i=(int)(n);i>=(int)(p);--i)\r\n#define foreach(i,c) for(__typeof(c.begin())i=(c.begin());i!=(c).end();++i)\r\n#define INF 0x3f3f3f3f\r\n#define PI acos(-1)\r\n#define Endl(x) cout<<x<<endl;\r\n#define Blank(x) cout<<x<<\" \";\r\n#define modcg(x) if(x>=mod)x-=mod;\r\n#define modcl(x) if(x<0)x+=mod;\r\n#define lowbit(x) (x)&(-(x))\r\n/*=====================================================================*/\r\nstring int_to_string(ll n)\r\n{\r\n\tstring s=\"\";\r\n\twhile(n)\r\n\t{\r\n\t\tll now=n%10;\r\n\t\ts+=now+'0';\r\n\t\tn/=10;\r\n\t}\r\n\treverse(s.begin(),s.end());\r\n\treturn s;\r\n}\r\nll string_to_int(string s)\r\n{\r\n\tll n=0;\r\n\trep(i,s.size())\r\n\t{\r\n\t\tn*=10;\r\n\t\tn+=s[i]-'0';\r\n\t}\r\n\treturn n;\r\n}\r\nmt19937 GeN(chrono::system_clock::now().time_since_epoch().count());\r\nint Rand(int l,int r)\r\n{\r\n\tuniform_int_distribution<>RAND1(l,r);\r\n\treturn RAND1(GeN);\r\n}\r\nstruct Fastmod\r\n{\r\n\tint mod,b;\r\n\ttypedef __int128 lll;\r\n\tvoid init(int m)\r\n\t{\r\n\t\tmod=m;\r\n\t\tb=((lll)1<<64)/mod;\r\n\t}\r\n\tint operator()(ull a)\r\n\t{\r\n\t\tint q=((lll)a*b)>>64,r=a-q*mod;\r\n\t\tmodcg(r);\r\n\t\treturn r;\r\n\t}\r\n}MOD;\r\nint mul(int a,int b)\r\n{\r\n\treturn MOD(a*b);\r\n}\r\n/*======================================================================*/\r\nconst int dx[]={-1,0,1,0};\r\nconst int dy[]={0,-1,0,1};\r\nconst int month[2][12]={{31,28,31,30,31,30,31,31,30,31,30,31},{31,29,31,30,31,30,31,31,30,31,30,31}};\r\n//think twice,code once\r\n//think once,debug forever\r\nconst int MAXN=2e5+10,MAXM=22;\r\nvii v[MAXN];\r\nstruct ST_TABLE\r\n{\r\n\tint dfn[MAXN];\r\n\tint head;\r\n\tint dep[MAXN];\r\n\tint pos[MAXN];\r\n\tint fa[MAXN];\r\n\tvoid dfs(int now,int f)\r\n\t{\r\n\t\tdfn[++head]=now;\r\n\t\tpos[now]=head;\r\n\t\tfor(auto P:v[now])\r\n\t\t{\r\n\t\t\tint u=P.first,c=P.second;\r\n\t\t\tif(u==f)\r\n\t\t\t{\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tdep[u]=dep[now]+c;\r\n\t\t\tfa[u]=now;\r\n\t\t\tdfs(u,now);\r\n\t\t\tdfn[++head]=now;\r\n\t\t}\r\n\t}\r\n\tint Min(int a,int b)\r\n\t{\r\n\t\tif(dep[a]<dep[b])\r\n\t\t{\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\treturn b;\r\n\t}\t\r\n\tint st[MAXN][MAXM];\r\n\tint Log[MAXN];\r\n\tvoid build()\r\n\t{\r\n\t\tdfs(1,0);\r\n\t\tforn(i,2,head)\r\n\t\t{\r\n\t\t\tLog[i]=Log[i>>1]+1;\r\n\t\t}\r\n\t\tforn(i,1,head)\r\n\t\t{\r\n\t\t\tst[i][0]=dfn[i];\r\n\t\t}\r\n\t\tforn(j,1,Log[head])\r\n\t\t{\r\n\t\t\tforn(i,1,head)\r\n\t\t\t{\r\n\t\t\t\tif((i+(1<<j))>head)\r\n\t\t\t\t{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tst[i][j]=Min(st[i][j-1],st[i+(1<<(j-1))][j-1]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tint qry(int l,int r)\r\n\t{\r\n\t\tint s=Log[r-l+1];\r\n\t\treturn Min(st[l][s],st[r-(1<<s)+1][s]);\r\n\t}\r\n\tint lca(int x,int y)\r\n\t{\r\n\t\tx=pos[x],y=pos[y];\r\n\t\tint l,r;\r\n\t\tl=min(x,y),r=max(x,y);\r\n\t\treturn qry(l,r);\r\n\t}\r\n\tint dist(int x,int y)\r\n\t{\r\n\t\treturn dep[x]+dep[y]-dep[lca(x,y)]*2;\r\n\t}\r\n}ST;\r\nint n,m;\r\nbool use[MAXN];\r\nset<pii> s;\r\nint ans=0;\r\nint S,T;\r\nvoid ins(int x)\r\n{\r\n\tint pos=ST.pos[x];\r\n\tif(s.size()==0)\r\n\t{\r\n\t\tS=T=x;\r\n\t\ts.insert({pos,x});\r\n\t\treturn;\r\n\t}\r\n\tif(pos<(*s.begin()).first)\r\n\t{\r\n\t\tS=x;\r\n\t\tans+=ST.dist(x,(*s.begin()).second);\r\n\t\ts.insert({pos,x});\r\n\t\treturn;\r\n\t}\r\n\tif(pos>(*s.rbegin()).first)\r\n\t{\r\n//\t\tcout<<x<<\" \"<<(*s.rbegin()).second<<endl;\r\n\t\tT=x;\r\n\t\tans+=ST.dist(x,(*s.rbegin()).second);\r\n\t\ts.insert({pos,x});\r\n\t\treturn;\r\n\t}\r\n\tauto nxt=s.lower_bound({pos,x});\r\n\tauto lst=nxt;lst--;\r\n\tint y=(*lst).second,z=(*nxt).second;\r\n\tans-=ST.dist(y,z);ans+=ST.dist(x,y);ans+=ST.dist(x,z);\r\n\ts.insert({pos,x});\r\n}\r\nvoid del(int x)\r\n{\r\n\tint pos=ST.pos[x];\r\n\tif(s.size()==1)\r\n\t{\r\n\t\tS=T=0;\r\n\t\ts.erase({pos,x});\r\n\t\treturn;\r\n\t}\r\n\tif(pos==(*s.begin()).first)\r\n\t{\r\n//\t\tcout<<\"FFF1\"<<endl;\r\n\t\tauto P=s.begin();P++;\r\n\t\tS=(*P).second;\r\n\t\tans-=ST.dist(x,(*P).second);\r\n\t\ts.erase({pos,x});\r\n\t\treturn;\r\n\t}\r\n\tif(pos==(*s.rbegin()).first)\r\n\t{\r\n//\t\tcout<<\"FFF2\"<<endl;\r\n//\t\tfor(auto P:s)\r\n//\t\t{\r\n//\t\t\tcout<<P.first<<\" \"<<P.second<<endl; \r\n//\t\t}\r\n\t\tauto P=s.end();P--;P--;\r\n//\t\tcout<<(*P).first<<\" \"<<(*P).second<<endl;\r\n\t\tT=(*P).second;\r\n\t\tans-=ST.dist(x,(*P).second);\r\n\t\ts.erase({pos,x});\r\n\t\treturn;\r\n\t}\r\n\tauto nxt=s.lower_bound({pos,x});nxt++;\r\n\tauto lst=nxt;lst--;lst--;\r\n\tint y=(*lst).second,z=(*nxt).second;\r\n\tans+=ST.dist(y,z);ans-=ST.dist(x,y);ans-=ST.dist(x,z);\r\n\ts.erase({pos,x});\r\n}\r\nvoid upd(int x)\r\n{\r\n\tif(S)\r\n\t{\r\n\t\tans-=ST.dist(S,T);\r\n\t}\r\n\tif(use[x])\r\n\t{\r\n\t\tdel(x);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tins(x);\r\n\t}\r\n\tif(T)\r\n\t{\r\n\t\tans+=ST.dist(S,T);\r\n\t}\r\n\tuse[x]^=1;\r\n}\r\nvoid solve()\r\n{\r\n\tcin>>n;\r\n\tforn(i,1,n-1)\r\n\t{\r\n\t\tint x,y,z;\r\n\t\tcin>>x>>y>>z;\r\n\t\tv[x].pb(pii(y,z));\r\n\t\tv[y].pb(pii(x,z));\r\n\t}\r\n\tST.build();\r\n\tcin>>m;\r\n\tforn(i,1,m)\r\n\t{\r\n\t\tchar c;\r\n\t\tcin>>c; \r\n\t\tif(c=='?')\r\n\t\t{\r\n\t\t\tcout<<(ans>>1)<<endl;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tint p;\r\n\t\t\tcin>>p;\r\n\t\t\tupd(p);\r\n\t\t}\r\n\t}\r\n}\r\n/*======================================================================*/\r\nsigned main()\r\n{\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n\tstd::ios::sync_with_stdio(false);\r\n//#define Hank2007\r\n#ifdef Hank2007\r\n\tfreopen(\"input.txt\",\"r\",stdin);\r\n\tfreopen(\"output1.txt\",\"w\",stdout);\r\n#endif\r\n  \t/*====================================================================*/\r\n  \tint TEST_CASE=1;\r\n//\tcin>>TEST_CASE;\r\n  \twhile(TEST_CASE--)\r\n  \t{\r\n  \t\tsolve();\r\n  \t}\r\n  \treturn 0;\r\n}\r\n/*\r\n//\r\nstart coding at\r\nfinish debugging at\r\n*/\r\n"
}