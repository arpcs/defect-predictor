{
    "id": 218461880,
    "contestId": 748,
    "creationTimeSeconds": 1691831842,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 748,
        "index": "D",
        "name": "Santa Claus and a Palindrome",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy"
        ]
    },
    "author": {
        "contestId": 748,
        "members": [
            {
                "handle": "Felix555"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1482656700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nint32_t main() {\r\n    int m,n,answer=0;\r\n    map<string,vector<int>> a,b;\r\n    string s;\r\n    cin >> m >> n;\r\n    while (m--) {\r\n        cin >> s >> n;\r\n        if (s == string(s.rbegin(),s.rend())) b[s].push_back(n);\r\n        else a[s].push_back(n);\r\n    }\r\n    for (auto &[_,x] : b) {\r\n        x.push_back(INT_MIN);\r\n        sort(x.begin(),x.end());\r\n    }\r\n    for (auto &[_,x] : a) sort(x.rbegin(),x.rend());\r\n    for (auto [x,y] : a) {\r\n        string z(x.rbegin(),x.rend());\r\n        for (int i = 0; i < min(y.size(),a[z].size()); i++) if (y[i]+a[z][i] > 0) answer += y[i]+a[z][i];\r\n    }\r\n    answer /= 2;\r\n    n = 0;\r\n    for (auto &[_,x] : b) {\r\n        while (!x.empty()) {\r\n            if (x[x.size()-2]+x.back() > 0) {\r\n                if (x[x.size()-2] < 0) n = max(n,-x[x.size()-2]);\r\n                answer += x[x.size()-2]+x.back();\r\n                x.pop_back();\r\n                x.pop_back();\r\n            } else {\r\n                n = max(n,x.back());\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    answer += n;\r\n    cout << answer;\r\n}"
}