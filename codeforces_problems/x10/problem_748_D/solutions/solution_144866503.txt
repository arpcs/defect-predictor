{
    "id": 144866503,
    "contestId": 748,
    "creationTimeSeconds": 1643734543,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 748,
        "index": "D",
        "name": "Santa Claus and a Palindrome",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy"
        ]
    },
    "author": {
        "contestId": 748,
        "members": [
            {
                "handle": "Anadii"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1482656700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 12902400,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <ext/pb_ds/detail/standard_policies.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n#define endl \"\\n\" //interactive\r\n#define int long long\r\n#define ll long long\r\n#define ld long double\r\n#define pii pair<ll, ll>\r\ntypedef vector<int> vi;\r\ntypedef vector<vector<int>> vvi;\r\ntypedef vector<pair<int, int>> vpi;\r\n#define all(value) value.begin(), value.end()\r\n\r\ntemplate <class T>\r\nusing pq = priority_queue<T>;\r\ntemplate <class T>\r\nusing pqg = priority_queue<T, vector<T>, greater<T>>;\r\n\r\ntemplate <class T>\r\nbool ckmin(T &a, const T &b)\r\n{\r\n    return b < a ? a = b, 1 : 0;\r\n}\r\ntemplate <class T>\r\nbool ckmax(T &a, const T &b)\r\n{\r\n    return a < b ? a = b, 1 : 0;\r\n}\r\nmt19937 rng((unsigned int)chrono::steady_clock::now().time_since_epoch().count());\r\n#define deb(value) cout << #value << \" is =\" << value << endl;\r\n#define derun deb(\"running\");\r\ntypedef tree<pair<ll, ll>, null_type, less<pair<ll, ll>>, rb_tree_tag, tree_order_statistics_node_update> omultiset;\r\ntypedef tree<long long, null_type, less<long long>, rb_tree_tag, tree_order_statistics_node_update> oset;\r\ntypedef tree<long long, null_type, greater<long long>, rb_tree_tag, tree_order_statistics_node_update> oset1;\r\ntypedef tree<pair<ll, ll>, null_type, greater<pair<ll, ll>>, rb_tree_tag, tree_order_statistics_node_update> omultiset1;\r\n/*  member functions :\r\n                1. order_of_key(k) : number of elements strictly lesser than k\r\n                2. find_by_order(k) : k-th element in the set (counting from zero)  */\r\n#define fast                          \\\r\nios_base::sync_with_stdio(false); \\\r\ncin.tie(NULL);                    \\\r\ncout.tie(NULL);\r\n\r\nint dx[4] = {1, 0, 0, -1}, dy[4] = {0, -1, 1, 0};\r\nconst int mod = 1e9 + 7, mod2 = 998244353, inf = 1e18;\r\nlong long binpow(int a, int b, int m = mod)\r\n{\r\n    a %= m;\r\n    int res = 1;\r\n    while (b > 0)\r\n    {\r\n        if (b & 1)\r\n            res = (res * a) % m;\r\n        a = (a * a) % m;\r\n        b /= 2;\r\n    }\r\n    return res;\r\n}\r\nint modinv(int n, int m = mod)\r\n{\r\n    return binpow(n, m - 2, m);\r\n}\r\n/*.................................................................................................*/\r\n\r\n\r\nvoid solve()\r\n{\r\n    int n, k;\r\n    cin >> n >> k;\r\n    map<int, int>rev;\r\n    map<string, pq<int>> pair;\r\n    vector<string>s(n);\r\n    vector<int>a(n);\r\n    map<string, vector<int>>mp;\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        cin >> s[i] >> a[i];\r\n        string temp = s[i];\r\n        reverse(all(temp));\r\n        if (temp == s[i])\r\n        {\r\n            rev[i] = 1;\r\n            mp[s[i]].push_back(a[i]);\r\n        }\r\n        else pair[s[i]].push(a[i]);\r\n    }\r\n    int ans = 0, mi = 0, mx = 0;\r\n\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        if (rev[i] == 0)\r\n        {\r\n            string temp = s[i];\r\n            reverse(all(temp));\r\n            if (!pair[s[i]].empty() && !pair[temp].empty())\r\n            {\r\n                int x = pair[s[i]].top();\r\n                int y = pair[temp].top();\r\n                pair[s[i]].pop();\r\n                pair[temp].pop();\r\n                ans += max((int)0, x + y);\r\n            }\r\n        }\r\n    }\r\n    map<string, int>odd, even;\r\n    for (auto i : mp)\r\n    {\r\n        sort(i.second.rbegin(), i.second.rend());\r\n        int sum = 0;\r\n        for (int j = 0; j < i.second.size(); j++)\r\n        {\r\n            sum += i.second[j];\r\n            if (j % 2==0)ckmax(odd[i.first], sum);\r\n            else ckmax(even[i.first], sum);\r\n        }\r\n        ans += even[i.first];\r\n    }\r\n    int ori=ans;\r\n    for (auto i : mp)\r\n    {\r\n        ans=max(ans,ori-even[i.first]+odd[i.first]);\r\n    }\r\n    cout << ans << endl;\r\n}\r\n\r\n\r\n\r\nsigned main()\r\n{\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n    fast;\r\n    int test = 1;\r\n    // cin >> test;\r\n    while (test--)\r\n    {\r\n        solve();\r\n    }\r\n\r\n}"
}