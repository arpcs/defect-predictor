{
    "id": 169935077,
    "contestId": 748,
    "creationTimeSeconds": 1661663086,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 748,
        "index": "D",
        "name": "Santa Claus and a Palindrome",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "constructive algorithms",
            "data structures",
            "greedy"
        ]
    },
    "author": {
        "contestId": 748,
        "members": [
            {
                "handle": "tsyeel"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1482656700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 62,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 2048000,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconstexpr int N = ((int)2e5) + 500;\r\n\r\nusing i64 = long long;\r\nusing ui64 = unsigned long long;\r\nusing uint = unsigned int;\r\nconstexpr uint MOD_N = 998244353;\r\nconstexpr int MAX = ((int)1e9);\r\n\r\n\r\nvoid solve() \r\n{   \r\n    int n, k;\r\n    cin >> n >> k;\r\n    map<string, vector<vector<int>>> vals;\r\n    for(int i = 0; i < n; i++)\r\n    {\r\n        string s;\r\n        int bt;\r\n        cin >> s >> bt;\r\n        if(vals.count(s))\r\n        {\r\n            vals[s][0].push_back(bt);\r\n            continue;\r\n        }\r\n        string rev = s;\r\n        reverse(rev.begin(), rev.end());\r\n        if(vals.count(rev))\r\n            vals[rev][1].push_back(bt);\r\n        else\r\n        {\r\n            vals.emplace(s, vector<vector<int>>(2));\r\n            vals[s][0].push_back(bt);\r\n        }\r\n        \r\n    }\r\n    vector<pair<int, int>> store;\r\n    int max = 0;\r\n    int sum = 0;\r\n    for(auto& it : vals)\r\n    {\r\n        const string& str = it.first;\r\n        bool f = true;\r\n        for(int i = 0; i < k / 2 && f; i++)\r\n            if(str[i] != str[k - i - 1])\r\n                f = false;\r\n        if(f)\r\n        {\r\n            vector<int>& v = it.second[0];\r\n            sort(v.begin(), v.end(), greater<int>());\r\n            int i = 0;\r\n            while(i < v.size() - 1)\r\n            {\r\n                int num = v[i] + v[i + 1];\r\n                if(num <= 0)\r\n                    break;\r\n                sum += num;\r\n                if(v[i] < 0)\r\n                {\r\n                    store.push_back({v[i], v[i + 1]});\r\n                }\r\n                else if(v[i + 1] < 0)\r\n                {\r\n                    store.push_back({v[i + 1], v[i]});\r\n                }\r\n                i += 2;\r\n            }\r\n            if(i < v.size() && v[i] > max)\r\n                max = v[i];\r\n        }\r\n        else\r\n        {\r\n            vector<int> &v1 = it.second[0], &v2 = it.second[1];\r\n            sort(v1.begin(), v1.end(), greater<int>());\r\n            sort(v2.begin(), v2.end(), greater<int>());\r\n            int sz = v1.size() < v2.size() ? v1.size() : v2.size();\r\n            for(int i = 0; i < sz; i++)\r\n            {\r\n                int num = v1[i] + v2[i];\r\n                if(num <= 0)\r\n                    break;\r\n                sum += num;\r\n            }\r\n\r\n        }\r\n    }\r\n    int res = max + sum;\r\n    if(store.size() != 0)\r\n    {\r\n        sort(store.begin(), store.end(), [](const pair<int, int>& p1, const pair<int, int>& p2){\r\n            return p1.first < p2.first;\r\n        });\r\n        if(-store[0].first > max)\r\n        {\r\n            res -= max + store[0].first;\r\n        }\r\n    }\r\n    cout << res << '\\n';\r\n\r\n}\r\n\r\nint main()\r\n{\r\n    #ifdef LOCAL\r\n        freopen(\"in\", \"r\", stdin);\r\n        freopen(\"out\", \"w\", stdout);\r\n    #endif\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n\r\n    int cases = 1;\r\n    // cin >> cases;\r\n    while(cases--)\r\n        solve();\r\n    return 0;\r\n}"
}