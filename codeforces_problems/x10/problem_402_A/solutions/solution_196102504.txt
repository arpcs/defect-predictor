{
    "id": 196102504,
    "contestId": 402,
    "creationTimeSeconds": 1678002692,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 402,
        "index": "A",
        "name": "Nuts",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1100,
        "tags": [
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 402,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1394983800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n#include <iostream>\nusing namespace std;\n#include <stack>\n#include <vector>\n#include <set>\n#include <string>\n#include <algorithm>\n#include <unordered_map>\n#include <unordered_set>\ntypedef long long int ll;\n#define MAX 200001\n#include <map>\nconst int MOD = 998244353;\nconst ll MaxVal = 2e18; \nstring PI = \"314159265358979323846264338327\";\nmap<ll, ll> freq;\nvector<ll> power2;\nvector<string> f(46);\nstring fs = \"\";\n\nll getval(ll x){\n    ll smax = 0, smin = 9;\n    while (x > 0){\n        ll tmp = x%10;\n        smax = max(smax, tmp);\n        smin = min(smin, tmp);\n        x/=10;\n    }\n    return smax*smin;\n}\n\nvoid solve(){\n    int k, a, b, v;\n    cin >> k >> a >> b >> v;\n    int part = a/v;\n    if (a%v) part++;\n    int res = 0;\n    while (b > 0 && part > 0){\n        part-=min(b + 1, k);\n        b-=min(b, k);\n        res++;\n    }\n    if (part > 0){\n        res+=part;\n    }\n    cout << res;\n}   \n\nint main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    \n    // cout << fs;\n    // for (int i = 10; i<20; i++)\n    //     cout << f[i] << \"\\n\";\n    int t;\n    t = 1;\n    // cin >> t;       \n    while (t--) solve();    \n}    \n \n \t    \t   \t\t \t\t \t\t \t     \t \t\t"
}