{
    "id": 178424903,
    "contestId": 402,
    "creationTimeSeconds": 1667058918,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 402,
        "index": "A",
        "name": "Nuts",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1100,
        "tags": [
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 402,
        "members": [
            {
                "handle": "utchchhwas"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1394983800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n// defines\r\n// #define ONLINE_JUDGE 1\r\n#define DBG 1\r\n#define FAST_IO 1\r\n// #define FILE_IO 1\r\n\r\n// utility macros\r\n#define sz(c) int(size(c))\r\n#define all(c) begin(c), end(c)\r\n#define rall(c) rbegin(c), rend(c)\r\n#define range(c, b, e) next(begin(c), b), next(begin(c), e)\r\n\r\n// debug utilities\r\n#ifdef ONLINE_JUDGE\r\n#undef DBG\r\n#endif\r\n#ifdef DBG\r\n#define dbg(args...) { __dbg_print(#args, args); }\r\ntemplate <typename... Args>\r\nvoid __dbg_print(const string& argNames, const Args&... args) {\r\n\tstringstream ss;\r\n    ss << \">> \" << argNames << \" = \";\r\n    ((ss << args << \", \"), ...);\r\n\tstring s(ss.str());\r\n\ts.erase(s.end()-2);\r\n    cerr << s << endl;\r\n}\r\n#else\r\n#define dbg(args...) \"Set your heart ablaze.\"\r\n#endif\r\n\r\n// type aliases\r\nusing ll = long long;\r\n\r\n// globals\r\nconst ll MOD = 1'000'000'007;\r\nconst double PI = acos(-1);\r\n\r\n// utility functions\r\ntemplate <typename T> inline T ceil(T x, T y);\r\ntemplate <typename T1, typename T2> istream& operator>>(istream& is, pair<T1, T2>& p);\r\ntemplate <typename T1, typename T2> ostream& operator<<(ostream& os, const pair<T1, T2>& p);\r\ntemplate <typename T> istream& operator>>(istream& is, vector<T>& v);\r\ntemplate <typename T> ostream& operator<<(ostream& os, const vector<T>& v);\r\ntemplate <typename T, typename V> ostream& operator<<(ostream& os, const set<T, V>& st);\r\ntemplate <typename T, typename V> ostream& operator<<(ostream& os, const multiset<T, V>& mst);\r\ntemplate <typename T1, typename T2, typename V> ostream& operator<<(ostream& os, const map<T1, T2, V>& mp);\r\ntemplate <typename T1, typename T2, typename V> ostream& operator<<(ostream& os, const multimap<T1, T2, V>& mmp);\r\ntemplate <typename T> vector<string> bin(const T& x, int b = 1);\r\n\r\n// useful data structures and algorithms\r\nll binpow(ll a, ll n, ll m);\r\n\r\n\r\nvoid precalc() {}\r\n\r\nvoid solve() {\r\n    int k, a, b, v; cin >> k >> a >> b >> v;\r\n\r\n    int r = 0;\r\n    int cnt = min(b / (k-1), ceil(a, k*v));\r\n    r += cnt*k*v;\r\n    if (r < a) {\r\n        ++cnt;\r\n        int t = b % (k-1);\r\n        r += (t+1)*v;\r\n    }\r\n    if (r < a) {\r\n        cnt += ceil(a-r, v);\r\n    }\r\n    cout << cnt << \"\\n\";\r\n}\r\n\r\n\r\nint main() {\r\n\t\r\n#ifdef FAST_IO\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(nullptr);\r\n\tcout.tie(nullptr);\r\n#endif\r\n\r\n#ifdef FILE_IO\r\n\tfreopen(\"input.txt\", \"r\", stdin);\r\n\tfreopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n\r\n\tint tc = 1;\r\n\t// cin >> tc;\r\n\r\n\tprecalc();\r\n\r\n\tfor (int t = 1; t <= tc; ++t) {\r\n\t\tsolve();\r\n\t\t// cout << endl;\r\n\t}\r\n\t// cout << \"All OK!\" << endl;\r\n\r\n\treturn 0;\r\n}\r\n\r\n\r\ntemplate <typename T> \r\ninline T ceil(T x, T y) {\r\n\treturn (x + y - 1) / y;\r\n}\r\n\r\ntemplate <typename T1, typename T2>\r\nistream& operator>>(istream& is, pair<T1, T2>& p) {\r\n    is >> p.first >> p.second;\r\n    return is;\r\n}\r\n\r\ntemplate <typename T1, typename T2>\r\nostream& operator<<(ostream& os, const pair<T1, T2>& p) {\r\n    os << \"(\" << p.first << \",\" << p.second << \")\";\r\n    return os;\r\n}\r\n\r\ntemplate <typename T>\r\nistream& operator>>(istream& is, vector<T>& v) {\r\n    for (auto& x : v) {\r\n        is >> x;\r\n    }\r\n    return is;\r\n}\r\n\r\ntemplate <typename T>\r\nostream& operator<<(ostream& os, const vector<T>& v) {\r\n    int i = 0, n = sz(v);\r\n    if (os.rdbuf() == cout.rdbuf()) {\r\n        for (; i < sz(v); ++i) {\r\n            os << v[i] << ((i != n-1) ? \" \" : \"\");\r\n        }\r\n    }\r\n    else {\r\n        os << \"[\";\r\n        for (; i < n; ++i) {\r\n            os << v[i] << ((i != n-1) ? \", \" : \"\");\r\n        }\r\n        os << \"]\";\r\n    }\r\n    return os;\r\n}\r\n\r\ntemplate <typename T, typename V>\r\nostream& operator<<(ostream& os, const set<T, V>& st) {\r\n    int i = 0, n = sz(st);\r\n    os << \"{\";\r\n    for (auto& x : st) {\r\n        os << x << ((i != n-1) ? \", \" : \"\");\r\n        ++i;\r\n    }\r\n    os << \"}\";\r\n    return os;\r\n}\r\n\r\ntemplate <typename T, typename V>\r\nostream& operator<<(ostream& os, const multiset<T, V>& mst) {\r\n    int i = 0, n = sz(mst);\r\n    os << \"{\";\r\n    for (auto& x : mst) {\r\n        os << x << ((i != n-1) ? \", \" : \"\");\r\n        ++i;\r\n    }\r\n    os << \"}\";\r\n    return os;\r\n}\r\n\r\ntemplate <typename T1, typename T2, typename V>\r\nostream& operator<<(ostream& os, const map<T1, T2, V>& mp) {\r\n    int i = 0, n = sz(mp);\r\n    os << \"{\";\r\n    for (auto& [k,v] : mp) {\r\n        os << \"{\" << k << \",\" << v << \"}\" << ((i != n-1) ? \", \" : \"\");\r\n        ++i;\r\n    }\r\n    os << \"}\";\r\n    return os;\r\n}\r\n\r\ntemplate <typename T1, typename T2, typename V>\r\nostream& operator<<(ostream& os, const multimap<T1, T2, V>& mmp) {\r\n    int i = 0, n = sz(mmp);\r\n    os << \"{\";\r\n    for (auto& [k,v] : mmp) {\r\n        os << \"{\" << k << \",\" << v << \"}\" << ((i != n-1) ? \", \" : \"\");\r\n        ++i;\r\n    }\r\n    os << \"}\";\r\n    return os;\r\n}\r\n\r\ntemplate <typename T>\r\nvector<string> bin(const T& x, int b) {\r\n    const int n = sizeof(T);\r\n    stringstream ss;\r\n    ss << bitset<8*n>(x);\r\n    string s(ss.str());\r\n    vector<string> v;\r\n    for (int i = n-b; i < n; ++i) {\r\n        v.push_back(s.substr(8*i, 8));\r\n    }\r\n    return v;\r\n}\r\n\r\nll binpow(ll a, ll n, ll m = MOD) {\r\n    a %= m;\r\n    ll p = 1;\r\n    while (n > 0) {\r\n        if (n&1) {\r\n            p = (p*a) % m;\r\n        }\r\n        a = (a*a) % m;\r\n        n >>= 1;\r\n    }\r\n    return p;\r\n}\r\n"
}