{
    "id": 224049878,
    "contestId": 92,
    "creationTimeSeconds": 1695132475,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 92,
        "index": "B",
        "name": "Binary Number",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 92,
        "members": [
            {
                "handle": "Safwat0100Virtual"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1308582000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "\r\n#include <iostream>\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define yes cout << \"YES\" << endl\r\n#define no cout << \"NO\" << endl\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n#define txtinput freopen(\"input.txt\", \"r\", stdin)\r\n#define txtoutput freopen(\"output.txt\", \"w\", stdout)\r\n#define FAST                    \\\r\n    ios::sync_with_stdio(NULL); \\\r\n    cin.tie(0);                 \\\r\n    cout.tie(0);\r\nint mod = 1e9 + 7;\r\nvoid divisors(int n)\r\n{\r\n    int ans = 0;\r\n    set<int> v;\r\n    int x = n, sum = 1;\r\n    string a = to_string(n);\r\n    for (int i = 1; i * i <= (n); i++)\r\n    {\r\n        if (n % i == 0)\r\n        {\r\n            int sum = 0;\r\n\r\n            string s = to_string(i);\r\n            for (int i = 0; i < a.length(); i++)\r\n            {\r\n                for (int j = 0; j < s.length(); j++)\r\n                {\r\n                    if (a[i] == s[j])\r\n                    {\r\n                        sum++;\r\n                    }\r\n                }\r\n            }\r\n            if (sum > 0)\r\n            {\r\n                ans++;\r\n            }\r\n            sum = 0;\r\n            if (i != n / i)\r\n            {\r\n                s = to_string(n / i);\r\n                for (int i = 0; i < a.length(); i++)\r\n                {\r\n                    for (int j = 0; j < s.length(); j++)\r\n                    {\r\n                        if (a[i] == s[j])\r\n                        {\r\n                            sum++;\r\n                        }\r\n                    }\r\n                }\r\n                if (sum > 0)\r\n                {\r\n                    ans++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    cout << ans;\r\n}\r\nint pro(int n)\r\n{\r\n    for (int i = 2; i * i <= (n); i++)\r\n    {\r\n        if (n % i == 0)\r\n        {\r\n            return i;\r\n        }\r\n    }\r\n    return n;\r\n}\r\n// a*b=gcd(a,b)/lcm(a,b);\r\nint lcm(int a, int b)\r\n{\r\n    return a * b / gcd(a, b);\r\n}\r\nbool F = false;\r\n\r\nvoid prime_divi(int n)\r\n{\r\n    vector<int> divs;\r\n    for (int i = 2; i <= sqrt(n); i++)\r\n    {\r\n        if (!(n % i))\r\n        {\r\n            while (!(n % i))\r\n            {\r\n                n /= i;\r\n            }\r\n            divs.pb(i);\r\n        }\r\n    }\r\n    if (n > 1)\r\n        divs.pb(n);\r\n    for (int i = 0; i < divs.size(); i++)\r\n        cout << divs[i] << \" \";\r\n}\r\nint fastpower(int a, int n)\r\n{\r\n    int ans = 1;\r\n    while (n > 0)\r\n    {\r\n        if (n % 2 == 1)\r\n            ans *= a;\r\n        a *= a;\r\n        n /= 2;\r\n    }\r\n    return ans;\r\n}\r\nint power(int a, int n, int mod)\r\n{\r\n    if (n == 0)\r\n        return 1;\r\n    if (n % 2 == 0)\r\n    {\r\n        int ans = power(a, n / 2, mod);\r\n        ans %= mod;\r\n        ans *= ans;\r\n        ans %= mod;\r\n        return ans;\r\n    }\r\n    else\r\n    {\r\n        int ans = power(a, n / 2, mod);\r\n        ans %= mod;\r\n        ans *= ans;\r\n        ans %= mod;\r\n        ans *= a;\r\n        ans %= mod;\r\n        return ans;\r\n    }\r\n}\r\nint digit(string s)\r\n{\r\n    int sum = 0;\r\n    for (int i = 0; i < s.size(); i++)\r\n    {\r\n        sum *= 10;\r\n        sum += s[i] - 48;\r\n    }\r\n    return sum;\r\n}\r\nint nCr(int n, int r)\r\n{\r\n    int Ans = 1;\r\n    if (r > n - r)\r\n        r = n - r;\r\n    for (int i = 0; i < r; ++i)\r\n    {\r\n        Ans *= (n - i);\r\n        Ans /= (i + 1);\r\n    }\r\n    return Ans;\r\n}\r\nint binaryEX(int x, int n)\r\n{\r\n    int sum = 1;\r\n    while (n > 0)\r\n    {\r\n        if (n % 2 == 1)\r\n            sum *= x;\r\n        x *= x;\r\n        n = n / 2;\r\n    }\r\n    return sum;\r\n}\r\nint mulMod(int a, int b, int m)\r\n{\r\n    return ((a % m) * (b % m) % m);\r\n}\r\nint powerMod(int x, int n, int mod)\r\n{\r\n    int sum = 1;\r\n    while (n > 0)\r\n    {\r\n        if (n % 2 == 1)\r\n            sum = (sum * x) % mod;\r\n        x = mulMod(x, x, mod);\r\n        n = n / 2;\r\n    }\r\n    return sum;\r\n}\r\nint gcd(int a, int b)\r\n{\r\n    if (b == 0)\r\n        return a;\r\n    else\r\n        return gcd(b, a % b);\r\n}\r\nint gcdE_rec(int a, int b, int &x, int &y)\r\n{\r\n    if (b == 0)\r\n    {\r\n        x = 1;\r\n        y = 0;\r\n        return a;\r\n    }\r\n    int x1, y1;\r\n    int d = gcdE_rec(b, a % b, x1, y1);\r\n    x = y1;\r\n    y = x1 - y1 * (a / b);\r\n    return d;\r\n}\r\nint gen(int n, int d, int ans, int sum)\r\n{\r\n\r\n    queue<string> q;\r\n    int g = 0;\r\n    q.push(\"1\");\r\n    while (n--)\r\n    {\r\n        string s1 = q.front();\r\n        q.pop();\r\n        int b = 0;\r\n        string a = s1;\r\n        while (d > a.length())\r\n        {\r\n            a += \"0\";\r\n        }\r\n        //    cout << a << endl;\r\n        for (int i = 0; i < a.length(); i++)\r\n        {\r\n            if (a[i] == '1')\r\n                b++;\r\n            else\r\n                b--;\r\n        }\r\n        if (b + ans == sum)\r\n        {\r\n            g++;\r\n        }\r\n        string s2 = s1;\r\n        q.push(s1.append(\"0\"));\r\n        q.push(s2.append(\"1\"));\r\n    }\r\n    if (-1 * d + ans == sum)\r\n        g++;\r\n    return g;\r\n}\r\nbool prime[1000100];\r\nvector<int> sei;\r\nvoid sieve(int n)\r\n{\r\n\r\n    prime[0] = 1, prime[1] = 1;\r\n    for (int i = 2; i <= 1000000; i++)\r\n    {\r\n        prime[i] = 0;\r\n    }\r\n    for (int i = 2; i <= 1000000; i++)\r\n    {\r\n        if (prime[i] == 0)\r\n        {\r\n            sei.pb(i);\r\n            for (int j = 2 * i; j <= 1000000; j += i)\r\n                prime[j] = 1;\r\n        }\r\n    }\r\n}\r\nbool prim(int n)\r\n{\r\n    for (int i = 2; i * i <= n; i++)\r\n    {\r\n        if (n % i == 0)\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n/*\r\n############################################################################################################################################################################\r\n############################################################################################################################################################################\r\n############################################################################################################################################################################\r\n############################################################################################################################################################################\r\n############################################################################################################################################################################\r\n############################################################################################################################################################################\r\n############################################################################################################################################################################\r\n############################################################################################################################################################################\r\n############################################################################################################################################################################\r\n############################################################################################################################################################################\r\n*/\r\nint binaryToDecimal(int n)\r\n{\r\n    int num = n;\r\n    int dec_value = 0;\r\n\r\n    // Initializing base value to 1, i.e 2^0\r\n    int base = 1;\r\n\r\n    int temp = num;\r\n    while (temp)\r\n    {\r\n        int last_digit = temp % 10;\r\n        temp = temp / 10;\r\n\r\n        dec_value += last_digit * base;\r\n\r\n        base = base * 2;\r\n    }\r\n\r\n    return dec_value;\r\n}\r\nvoid decToBinary(int n)\r\n{\r\n    // array to store binary number\r\n    int binaryNum[32];\r\n\r\n    // counter for binary array\r\n    int i = 0;\r\n    while (n > 0)\r\n    {\r\n\r\n        // storing remainder in binary array\r\n        binaryNum[i] = n % 2;\r\n        n = n / 2;\r\n        i++;\r\n    }\r\n\r\n    // printing binary array in reverse order\r\n    for (int j = i - 1; j >= 0; j--)\r\n        cout << binaryNum[j];\r\n}\r\nvoid safwat()\r\n\r\n{\r\n    int sum = 0;\r\n    string s;\r\n    cin >> s;\r\n    int j = s.length() - 1;\r\n    if (s == '1')\r\n    {\r\n        cout << \"0\";\r\n        return;\r\n    }\r\n    for (int i = s.length() - 1; i >= 0;)\r\n    {\r\n        if (s[i] == '0')\r\n        {\r\n            i--;\r\n            sum++;\r\n        }\r\n        while (s[i] == '1' && i >= 0)\r\n        {\r\n            s[i] = '0';\r\n            i--;\r\n            sum++;\r\n            if (s[i] == '0')\r\n            {\r\n                s[i] = '1';\r\n                sum++;\r\n                break;\r\n            }\r\n            if (s[i] == '1' && i == 0)\r\n                break;\r\n            // cout << s << \" \";\r\n        }\r\n    }\r\n    cout << sum + 1;\r\n}\r\n\r\nsigned main()\r\n{\r\n    int t = 1;\r\n    // cin >> t;\r\n    while (t--)\r\n    {\r\n        safwat();\r\n        cout << endl;\r\n    }\r\n    return 0;\r\n}\r\n"
}