{
    "id": 229698485,
    "contestId": 1353,
    "creationTimeSeconds": 1698240385,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1353,
        "index": "D",
        "name": "Constructing the Array",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "data structures",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1353,
        "members": [
            {
                "handle": "scutsky"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1589466900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 5324800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long LL;\r\nconst int N=200010;\r\nint ans[N];\r\nstruct A\r\n{\r\n    int len,l,r;\r\n    bool operator<(const A&t)const\r\n    {\r\n        if (len!=t.len) return len<t.len;\r\n        return l>t.l;\r\n    }\r\n};\r\nvoid solve()\r\n{\r\n    int n;\r\n    cin>>n;\r\n    set<A> S;\r\n    S.insert({n,1,n});\r\n    for (int i=1;i<=n;i++)\r\n    {\r\n        auto [len,l,r]=*S.rbegin();\r\n        S.erase(*S.rbegin());\r\n        int t=r-l+1,mid;\r\n        if (t&1) mid=l+r>>1;\r\n        else mid=l+r-1>>1;\r\n        ans[mid]=i;\r\n        if (l!=mid) S.insert({mid-l,l,mid-1});\r\n        if (r!=mid) S.insert({r-mid,mid+1,r});\r\n    }\r\n    for (int i=1;i<=n;i++) cout<<ans[i]<<\" \";\r\n    cout<<\"\\n\";\r\n}\r\nint main()\r\n{\r\n    ios::sync_with_stdio(false); cin.tie(nullptr);\r\n    int t;\r\n    cin>>t;\r\n    while (t--) solve();\r\n    return 0;\r\n}"
}