{
    "id": 227441321,
    "contestId": 1353,
    "creationTimeSeconds": 1696875225,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1353,
        "index": "D",
        "name": "Constructing the Array",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "data structures",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1353,
        "members": [
            {
                "handle": "Harshvardhan_Acharya"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1589466900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 2457600,
    "source": "#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,fma\")\r\n#pragma GCC optimize(\"unroll-loops\")\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n \r\n#include <ext/pb_ds/assoc_container.hpp>\r\nusing namespace __gnu_pbds;\r\ntypedef tree<int,null_type,less<int>,rb_tree_tag,\r\n            tree_order_statistics_node_update> indexed_set;//auto x = s.find_by_order(2);\r\n\r\ntemplate <int MOD=1000000007>\r\nstruct Modular {\r\n  int value;\r\n  static const int MOD_value = MOD;\r\n\r\n  Modular(long long v = 0) { value = v % MOD; if (value < 0) value += MOD;}\r\n  Modular(long long a, long long b) : value(0){ *this += a; *this /= b;}\r\n\r\n  Modular& operator+=(Modular const& b) {value += b.value; if (value >= MOD) value -= MOD; return *this;}\r\n  Modular& operator-=(Modular const& b) {value -= b.value; if (value < 0) value += MOD;return *this;}\r\n  Modular& operator*=(Modular const& b) {value = (long long)value * b.value % MOD;return *this;}\r\n  template<int T> friend Modular<T> inverse(Modular<T>);\r\n  friend Modular mexp(Modular a, long long e) {\r\n    Modular res = 1;if(e<0){res=inverse(a); return mexp(res,-e);} while (e) { if (e&1) res *= a; a *= a; e >>= 1; }\r\n    return res;\r\n  }\r\n  friend Modular inverse(Modular a) { return mexp(a, MOD - 2); }\r\n\r\n  Modular& operator/=(Modular const& b) { return *this *= inverse(b); }\r\n  friend Modular operator+(Modular a, Modular const b) { return a += b; }\r\n  friend Modular operator-(Modular a, Modular const b) { return a -= b; }\r\n  friend Modular operator-(Modular const a) { return 0 - a; }\r\n  friend Modular operator*(Modular a, Modular const b) { return a *= b; }\r\n  friend Modular operator/(Modular a, Modular const b) { return a /= b; }\r\n  friend std::ostream& operator<<(std::ostream& os, Modular const& a) {return os << a.value;}\r\n  friend bool operator==(Modular const& a, Modular const& b) {return a.value == b.value;}\r\n  friend bool operator!=(Modular const& a, Modular const& b) {return a.value != b.value;}\r\n};\r\nvoid __print(int x) {cerr << x;}\r\nvoid __print(long x) {cerr << x;}\r\nvoid __print(long long x) {cerr << x;}\r\nvoid __print(unsigned x) {cerr << x;}\r\nvoid __print(unsigned long x) {cerr << x;}\r\nvoid __print(unsigned long long x) {cerr << x;}\r\nvoid __print(float x) {cerr << x;}\r\nvoid __print(double x) {cerr << x;}\r\nvoid __print(long double x) {cerr << x;}\r\nvoid __print(char x) {cerr << '\\'' << x << '\\'';}\r\nvoid __print(const char *x) {cerr << '\\\"' << x << '\\\"';}\r\nvoid __print(const string &x) {cerr << '\\\"' << x << '\\\"';}\r\nvoid __print(bool x) {cerr << (x ? \"true\" : \"false\");}\r\ntemplate<int T> void __print(Modular<T> x){cerr<< x.value;}\r\n\r\ntemplate<typename T, typename V>\r\nvoid __print(const pair<T, V> &x) {cerr << '{'; __print(x.first); cerr << ','; __print(x.second); cerr << '}';}\r\ntemplate<typename T>\r\nvoid __print(const T &x) {int f = 0; cerr << '{'; for (auto &i: x) cerr << (f++ ? \",\" : \"\"), __print(i); cerr << '}';}\r\nvoid _print() {cerr << \"]\\n\";}\r\ntemplate <typename T, typename... V>\r\nvoid _print(T t, V... v) {__print(t); if (sizeof...(v)) cerr << \", \"; _print(v...);}\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x...) cerr << \"[\" << #x << \"] = [\"; _print(x)\r\n#else\r\n#define debug(x...)\r\n#endif\r\n\r\ntemplate<typename X, typename Y> auto remin(const X& x, const Y& y) { return (y < x) ? y : x; }\r\ntemplate<typename X, typename Y> auto remax(const X& x, const Y& y) { return (x < y) ? y : x; }\r\ntemplate<typename X, typename Y> bool ckmin(X& x, const Y& y) { return (y < x) ? (x=y,1):0; }\r\ntemplate<typename X, typename Y> bool ckmax(X& x, const Y& y) { return (x < y) ? (x=y,1):0; }\r\ntemplate<typename T> T&& vmin(T&& val){return std::forward<T>(val);}\r\ntemplate<typename T0, typename T1, typename... Ts> auto vmin(T0&& val1, T1&& val2, Ts&&... vs){return (val1 < val2) ?vmin(val1, std::forward<Ts>(vs)...) :vmin(val2, std::forward<Ts>(vs)...);}\r\ntemplate<typename T> T&& vmax(T&& val){return std::forward<T>(val);}\r\ntemplate<typename T0, typename T1, typename... Ts> auto vmax(T0&& val1, T1&& val2, Ts&&... vs){return (val1 > val2) ?vmax(val1, std::forward<Ts>(vs)...) :vmax(val2, std::forward<Ts>(vs)...);}\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef pair<int,int> p32;\r\ntypedef pair<ll,ll> p64;\r\ntypedef pair<double,double> pdd;\r\ntypedef vector<ll> v64;\r\ntypedef vector<int> v32;\r\ntypedef vector<vector<int> > vv32;\r\ntypedef vector<vector<ll> > vv64;\r\ntypedef vector<vector<p64> > vvp64;\r\ntypedef vector<p64> vp64;\r\ntypedef vector<p32> vp32;\r\ntemplate<typename X> using minheap=priority_queue<X,vector<X>,greater<X>>;\r\ntemplate<typename X> using maxheap=priority_queue<X>;\r\n//ll M = 1000000007 ;// 998244353;\r\n#define forn(i,e) for(ll i = 0; i < e; i++)\r\n#define forsn(i,s,e) for(ll i = s; i < e; i++)\r\n#define rforn(i,s) for(ll i = s; i >= 0; i--)\r\n#define rforsn(i,s,e) for(ll i = s; i >= e; i--)\r\n#define ifnot(x) if(!(x))\r\n#define hsb(x) ((sizeof(decltype((x)*1LL))*8) - __builtin_clzll((x)*1LL))\r\n#define ln \"\\n\"\r\n#define dbg(x) cout<<#x<<\" = \"<<x<<ln\r\n#define mp make_pair\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n#define fast_cin() ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)\r\n#define all(x) (x).begin(), (x).end()\r\n#define sz(x) ((ll)(x).size())\r\ninline ll ceil(ll a,ll b){ll res=a/b;if(b*res!=a)res+=(a<0)^(b>0);return res;}\r\ninline ll floor(ll a,ll b){ll res=a/b;if(b*res!=a)res-=(a>0)^(b>0);return res;}\r\nconst double eps = 1e-10;\r\nconst ll LINF = 1001002003004005006ll;\r\nconst int INF = 1001001001;\r\n#define reset(a,x) {(a).clear();(a).resize(x);}\r\n#define dame { cout<<\"-1\"<<ln; return 0;}\r\n#define yn {cout<<\"YES\"<<ln;}else{cout<<\"NO\"<<ln;}\r\n#define v(T) vector<T>\r\ntemplate<typename T>inline istream& operator>>(istream&i,v(T)&v)\r\n{forn(j,sz(v))i>>v[j];return i;}\r\ntemplate<typename T>string join(const v(T)&v)\r\n{stringstream s;forn(i,sz(v))s<<' '<<v[i];return s.str().substr(1);}\r\ntemplate<typename T>inline ostream& operator<<(ostream&o,const v(T)&v)\r\n{if(sz(v))o<<join(v);return o;}\r\ntemplate<typename T1,typename T2>inline istream& operator>>(istream&i,pair<T1,T2>&v)\r\n{return i>>v.fi>>v.se;}\r\ntemplate<typename T1,typename T2>inline ostream& operator<<(ostream&o,const pair<T1,T2>&v)\r\n{return o<<v.fi<<\",\"<<v.se;}\r\ntemplate<typename T>inline ll suma(const v(T)& a) { ll res(0); for (auto&& x : a) res += x; return res;}\r\n#undef v\r\nconst int N=1e6+5;\r\n\r\n\r\nvoid solve(){\r\n    int n;\r\n    cin>>n;\r\n    minheap<p32> s;\r\n    v32 a(n+1);\r\n    s.push({-n,1});\r\n    int i=0;\r\n    while(!s.empty()){\r\n        i++;\r\n        p32 x=s.top();\r\n        s.pop();\r\n        int l=x.se;\r\n        int r=x.se-x.fi-1;\r\n        int mid=l+(r-l)/2;\r\n        a[mid]=i;\r\n        if(mid!=l){\r\n            s.push({-(mid-l),l});\r\n        }\r\n        if(mid!=r){\r\n            s.push({-(r-mid),mid+1});\r\n        }\r\n    }\r\n    forsn(i,1,n+1){\r\n        cout<<a[i]<<' ';\r\n    }\r\n    cout<<ln;\r\n    \r\n\r\n}\r\nint main()\r\n{\r\n    //#ifndef ONLINE_JUDGE\r\n        //freopen(\"input.txt\", \"r\", stdin);\r\n        //freopen(\"output.txt\", \"w\", stdout);\r\n    //#endif\r\n    fast_cin();\r\n    ll t=1;\r\n    cin >> t;\r\n    for(int it=1;it<=t;it++) {\r\n     //cout << \"Case #\" << it << \": \";\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}