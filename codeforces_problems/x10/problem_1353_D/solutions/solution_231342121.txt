{
    "id": 231342121,
    "contestId": 1353,
    "creationTimeSeconds": 1699105967,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1353,
        "index": "D",
        "name": "Constructing the Array",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "data structures",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1353,
        "members": [
            {
                "handle": "st88"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1589466900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\n#include <cstdio>\n\nusing namespace std;\n\nstruct seg {\n    int l;\n    int siz;\n};\n\nbool comp(seg a, seg b) {\n    /* return a.siz < b.siz; */\n    if (a.siz != b.siz)\n        return a.siz < b.siz;\n    else\n        return a.l > b.l;\n}\n\n#define MAXN 20'000\n\nint a[MAXN];\n\nvoid solve(int n) {\n    set<seg, decltype(comp) *> s(comp);\n    s.insert({.l = 0, .siz = n});\n    int i = 1;\n    while (!s.empty()) {\n        auto bs = s.rbegin();\n        int l = bs->l, r = bs->l + bs->siz - 1;\n        s.erase(*bs);\n        int c;\n        if ((r - l + 1) & 1)\n            c = (l + r) / 2;\n        else\n            c = (l + r - 1) / 2;\n\n        a[c] = i;\n\n        if (l != c)\n            s.insert({.l = l, .siz = c - l});\n        if (r != c)\n            s.insert({.l = c + 1, .siz = r - c});\n\n        ++i;\n    }\n\n    for (int i = 0; i < n; ++i)\n        printf(\"%d \", a[i]);\n\n    putchar('\\n');\n}\n\nint main() {\n    int t;\n    scanf(\"%d\", &t);\n    while (t-- > 0) {\n        int n;\n        scanf(\"%d\", &n);\n        solve(n);\n    }\n    return 0;\n}\n"
}