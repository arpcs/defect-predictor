{
    "id": 228774402,
    "contestId": 1353,
    "creationTimeSeconds": 1697707485,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1353,
        "index": "D",
        "name": "Constructing the Array",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "data structures",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1353,
        "members": [
            {
                "handle": "ShadowMas"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1589466900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 716800,
    "source": "// LUOGU_RID: 130365916\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nstruct node\r\n{\r\n    int l, r, len;\r\n    bool operator<(const node &t) const\r\n    {\r\n        return len < t.len;\r\n    }\r\n};\r\nint n, a[200005], i, idx, T;\r\nint main()\r\n{\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"data/data1.in\", \"r\", stdin);\r\n    // freopen(\"data/data1.out\", \"w\", stdout);\r\n#endif\r\n    scanf(\"%d\", &T);\r\n    while (T--)\r\n    {\r\n        priority_queue<node> q;\r\n        idx = 0;\r\n        scanf(\"%d\", &n);\r\n        q.push({1, n, n});\r\n        for (int i = 1; i <= n; i++)\r\n            a[i] = 0;\r\n        while (q.size())\r\n        {\r\n            auto cur = q.top();\r\n            q.pop();\r\n            if (cur.len <= 0)\r\n                continue;\r\n            if (cur.len & 1)\r\n                idx = cur.l + cur.r >> 1;\r\n            else\r\n                idx = cur.l + cur.r - 1 >> 1;\r\n            a[idx] = ++i;\r\n            q.push({cur.l, idx - 1, idx - cur.l});\r\n            q.push({idx + 1, cur.r, cur.r - idx});\r\n        }\r\n\r\n        for (int i = 1; i <= n; i++)\r\n            printf(\"%d%c\", a[i], \" \\n\"[i == n]);\r\n    }\r\n\r\n    return 0;\r\n}"
}