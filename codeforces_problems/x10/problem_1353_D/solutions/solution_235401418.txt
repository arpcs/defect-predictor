{
    "id": 235401418,
    "contestId": 1353,
    "creationTimeSeconds": 1701529107,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1353,
        "index": "D",
        "name": "Constructing the Array",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "data structures",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1353,
        "members": [
            {
                "handle": "amirisokokok"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1589466900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 6144000,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std ; \r\ntypedef long long int ll ; \r\ntypedef pair<ll,ll> pll ; \r\ntypedef pair<ll,pll> plll ; \r\n\r\nconst ll maxn = 2e5 +10 ; \r\n\r\nll t  ; \r\n\r\n\r\nint main()\r\n{\r\n\tios_base::sync_with_stdio(false) ; \r\n\tcin >> t ; \r\n\twhile(t--)\r\n\t{\r\n\t\tll n ; \r\n\t\tll a[maxn] , i = 1 ; \t\r\n\t\tset <plll> s ; \r\n\r\n\t\tcin >> n ; \r\n\t\ts.insert( { -n , { 1,n} } ) ;  \r\n\t\t\r\n\t\tfor(int i=0 ; i<=n+5 ; i++)\r\n\t\t{\r\n\t\t\ta[i] = 0 ; \r\n\t\t}\r\n\t\t\r\n\t\twhile(s.size())\r\n\t\t{\r\n\t\t\tplll p = *s.begin() ; \r\n\t\t\ts.erase(s.begin()) ; \r\n\t\t\t\r\n\t\t\tll r = p.second.second , l = p.second.first ; \r\n\t\t\tll c = (l+r)/2 ; \r\n\t\t//\tshow(s) ; \r\n\t\t///\tc/out << \"*\" << endl ; \r\n\t\t//\tcout << l << \" \" << r << \" **\" << c << endl ; \r\n\t\t\t\r\n\t\t\tif(c == l and c == r)\r\n\t\t\t{\r\n\t\t\t\ta[c] = i ; \r\n\t\t\t\ti++ ; \r\n\t\t\t} \r\n\t\t\telse if(l == c)\r\n\t\t\t{\r\n\t\t\t\ta[c] = i ; i++ ; \r\n\t\t\t\ts.insert(plll(-1 , pll(c+1 , r )))\t;\r\n\t\t\t}\r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\ta[c] = i ; \r\n\t\t\t\ti++ ; \r\n\t\t\t\ts.insert(plll( l-c , pll(l , c-1 ))) ;\r\n\t\t\t\ts.insert(plll( c-r , pll(c+1 , r ))); \r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor(int i=1 ; i<=n ; i++)\r\n\t\t{\r\n\t\t\tcout << a[i] << \" \" ; \r\n\t\t}\r\n\t\tcout << endl ;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\t\r\n}"
}