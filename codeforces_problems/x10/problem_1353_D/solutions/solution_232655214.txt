{
    "id": 232655214,
    "contestId": 1353,
    "creationTimeSeconds": 1699891584,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1353,
        "index": "D",
        "name": "Constructing the Array",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "data structures",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1353,
        "members": [
            {
                "handle": "Manoush"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1589466900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 1638400,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long int\r\n#define pb push_back\r\n#define endl '\\n'\r\n#define F first\r\n#define S second\r\n#define grid(u) char u[5][5]\r\n#define gridd(u) char u[5][5]\r\n#define pi pair<ll,ll>\r\n#define pii pair<pi,ll>\r\nusing namespace std;\r\nll mod=1e13;\r\nll fastpower (ll base,ll power){\r\n    ll res=1;\r\n    if (power==0)return 1;\r\n    while (power>1){\r\n        //cout<<base<<\" \"<<power<<endl;\r\n        if (power%2==0){\r\n            base*=base;\r\n            power/=2;\r\n        }else {\r\n            res*=base;\r\n            base*=base;\r\n            power/=2;\r\n        }\r\n        base%=mod;\r\n        res%=mod;\r\n    }\r\n    res*=base;\r\n    res%=mod;\r\n    return res;\r\n}\r\nll fun (pii aa,pii bb){\r\n    auto a=aa.F;\r\n    auto b=bb.F;\r\n    if (a.F==b.F)return a.S>b.S;\r\n    else return a.F<b.F;\r\n}\r\nvector<ll>arr(200005);\r\n//ll time;\r\n/*struct cmp {\r\n\tbool operator() (const pair<int, int> &a, const pair<int, int> &b) const {\r\n\t\tint lena = a.second - a.first + 1;\r\n\t\tint lenb = b.second - b.first + 1;\r\n\t\tif (lena == lenb) return a.first < b.first;\r\n\t\treturn lena > lenb;\r\n\t}\r\n};*/\r\nstruct cmp {\r\n    bool operator()(const pi &a,const pi &b)const {\r\n        ll lena=a.S-a.F+1;\r\n        ll lenb=b.S-b.F+1;\r\n        if (lena == lenb)return a.F < b.F;\r\n        else lena > lenb;\r\n    }\r\n};\r\nset<pi,cmp>s;\r\nll timer;\r\nint main()\r\n{\r\n    //freopen(\"time.in\",\"r\",stdin);\r\n    //freopen(\"time.out\",\"w\",stdout);\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n    /*amili[0]=1;\r\n    amili[1]=1;\r\n    for (ll i=2;i<=2000005;i++){\r\n        amili[i]=amili[i-1]*i;\r\n        amili[i]%=mod;\r\n    }*/\r\n    /*ll sum=4;\r\n    v.pb(sum);\r\n    ll ind=2;\r\n    value.pb(ind);\r\n    while (sum<=1e18){\r\n        sum*=2;\r\n        ind++;\r\n        v.pb(sum);\r\n        value.pb(ind);\r\n        //cout<<sum<<\" \"<<ind<<endl;\r\n    }*/\r\n        //cout<<\"HELLO\"<<endl;\r\n    ll t=1;\r\n    cin>>t;\r\n    while (t--){\r\n        ll n;\r\n        cin>>n;\r\n        timer=1;\r\n        s.insert({1,n});\r\n        while (!s.empty()){\r\n            pi u=*s.begin();\r\n            s.erase(s.begin());\r\n            if (u.F==u.S){\r\n                arr[u.F]=timer;\r\n                timer++;\r\n                continue;\r\n            }\r\n            ll lenu=u.S-u.F+1;\r\n            ll mid;\r\n            if (lenu%2==1)mid=(u.F+u.S)/2;\r\n            else mid=(u.F+u.S-1)/2;\r\n            arr[mid]=timer;\r\n            timer++;\r\n            ll l=u.F;\r\n            ll r=u.S;\r\n            if (l<mid)s.insert({l,mid-1});\r\n            if (r>mid)s.insert({mid+1,r});\r\n        }\r\n        for (ll i=1;i<=n;i++)cout<<arr[i]<<\" \";\r\n        cout<<endl;\r\n    }\r\n    return 0;\r\n}\r\n"
}