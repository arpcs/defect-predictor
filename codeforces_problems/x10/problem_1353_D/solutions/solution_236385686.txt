{
    "id": 236385686,
    "contestId": 1353,
    "creationTimeSeconds": 1702051056,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1353,
        "index": "D",
        "name": "Constructing the Array",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "data structures",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1353,
        "members": [
            {
                "handle": "niwrad"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1589466900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 4096000,
    "source": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <cmath>\n#include <set>\n#include <array>\n#include <cstdio>\n#include <vector>\n#include <string>\n#include <fstream>\n#include <tuple>\n#include <numeric>\n#include <map>\n#include <iomanip>\n#include <math.h>\n#include <queue>\n#include <sstream>\n#include <stack>\n#include <initializer_list>\n#include <functional>\n#include <cstring>\n\n\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nstruct cmp {\n    bool operator() (const pair<int, int> &a, const pair<int, int> &b) const {\n        int lena = a.second - a.first + 1;\n        int lenb = b.second - b.first + 1;\n        if (lena == lenb) return a.first < b.first;\n        return lena > lenb;\n    }\n};\n\nint main() {\n    int t;\n    cin >> t;\n    while (t--) {\n        int n;\n        cin >> n;\n        set<pair<int, int>, cmp> segs;\n        segs.insert({0, n - 1});\n        vector<int> a(n);\n        for (int i = 1; i <= n; ++i) {\n            pair<int, int> cur = *segs.begin();\n            segs.erase(segs.begin());\n            int id = (cur.first + cur.second) / 2;\n            a[id] = i;\n            if (cur.first < id) segs.insert({cur.first, id - 1});\n            if (id < cur.second) segs.insert({id + 1, cur.second});\n        }\n        for (auto it : a) cout << it << \" \";\n        cout << endl;\n    }\n}\n\n\n/*int main() {\n    std::ios_base::sync_with_stdio(0);\n    std::cin.tie(0);\n    int t;\n    std::cin >> t;\n    for (int c = 0; c < t; c++) {\n        int n;\n        std::cin >> n;\n        for (int i = 0; i < n; i++) {\n            \n        }\n    }\n}*/\n"
}