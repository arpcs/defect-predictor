{
    "id": 235062610,
    "contestId": 508,
    "creationTimeSeconds": 1701353146,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 508,
        "index": "D",
        "name": "Tanya and Password",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2500,
        "tags": [
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 508,
        "members": [
            {
                "handle": "mohammadsam"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1422376200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 44,
    "timeConsumedMillis": 467,
    "memoryConsumedBytes": 47104000,
    "source": "/*\n    in the name of god\n    created by: mohammadsam\n*/\n\n#include <bits/stdc++.h>\n\nusing namespace std;\n#define int long long \ntypedef pair<int,int> pii;\ntypedef pair<long long ,long long> pll;\ntypedef long long ll ;\n\n#define File          freopen(\"input.txt\", \"r\", stdin); freopen(\"output.txt\", \"w\", stdout);\n#define loop(i,f,d)   for(int i = f;i<d;i++)\n#define loop2(j,f,d)  for(int j = f;j>=d;j--)\n#define len(V)        V.size()\n#define sep           ' '\n#define endl          '\\n'\n#define pb(x)         push_back(x)\n#define debug(x)      cerr  << \"bug \" << x << endl;\n#define migmig        cin.tie(NULL);ios_base::sync_with_stdio(false);\n#define fi            first\n#define sec           second\n#define popcount(x)   __builtin_popcount(x)\n#define md(x)         (((x%MD)+MD)%MD)\n#define all(V)        V.begin(),V.end()\n#define Mp(a,b)       make_pair(a,b)\n#define gaws(a,b)     (((b-a+1LL)*(a+b))/2LL)\n#define vvi           vector<vector<int>>\n#define setprec(x)    fixed << setprecision(x)\n\nconst ll N = 2e5 + 100,K=70, MD = 1e9 + 7;\nconst ll inf = 2e9 , riz = -2e9;\nint n ; \nvector<string> arr(N);\nvector<char> cnt;\nint name[K][K];\nmap<char,int> mp;\nvector<string> g(N);\nvector<int> adj[N];\nvector<int> adjm[N];\nvector<int> ans;\nint pt[N];\nint dp[N],dm[N];\nvoid dfs(int u){\n    for(;pt[u] < len(adj[u]);){\n        pt[u]++;\n        dfs(adj[u][pt[u]-1]);\n    }\n    ans.pb(u);\n}\nint32_t main() {\n    //migmig\n    cin >> n ;\n    loop(i,0,n) cin >> arr[i];\n    loop(i,0,26) cnt.pb(char('a'+i));\n    loop(i,0,26) cnt.pb(char('A'+i));\n    loop(i,0,10) cnt.pb(char('0'+i));\n    //loop(i,0,len(cnt)) cout << cnt[i] << sep;\n    int p = 0 ;\n    loop(i,0,len(cnt)){\n        loop(j,0,len(cnt)) {\n            g[p] = \"\";\n            g[p].pb(cnt[i]);\n            g[p].pb(cnt[j]);\n            name[i][j] = p;\n            p++;\n        }\n    }\n    loop(i,0,len(cnt)) mp[cnt[i]] = i ;\n    loop(i,0,n){\n        string s = arr[i];\n        int x = mp[s[0]] , y = mp[s[1]],z=mp[s[2]];\n        adj[name[x][y]].pb(name[y][z]);\n        adjm[name[y][z]].pb(name[x][y]);\n        dp[name[x][y]]++;\n        dm[name[y][z]]++;\n    }\n    int ch = 0 ,ind = -1;\n    loop(i,0,N){\n        if(abs(dp[i]-dm[i]) != 0) ch++;\n        if(dp[i] == dm[i] + 1) ind = i ;\n    }\n    if(ch > 2){\n        cout << \"NO\" << endl;\n        return 0 ;\n    }\n    if(ch == 0){\n        loop(i,0,N){\n            if(dp[i]!=0) ind = i ;\n        }\n    }\n    else if(ch == 2){\n        loop(i,0,N){\n            if(dp[i] == dm[i] + 1) ind = i ;\n        }\n        if(ind==-1){\n            cout << \"NO\" << endl;\n            return 0 ;\n        }\n    }\n    dfs(ind);\n    string jab;\n    reverse(all(ans));\n    if(len(ans) == 0){\n        cout << \"NO\" << endl;\n        return 0 ;\n    }\n    jab.pb(g[ans[0]][0]);\n    loop(i,0,len(ans)) jab.pb(g[ans[i]][1]);\n    multiset<string> koft;\n    //if(n==2e5){\n    //    cout << \"YES\" << endl;\n    //    cout << jab << endl;\n    //    return 0 ;\n    //}\n    loop(i,0,n) koft.insert(arr[i]);\n    loop(i,2,len(jab)){\n        if(koft.find(jab.substr(i-2,3)) == koft.end()){\n            cout << \"NO\" << endl;\n            return 0 ;\n        }\n        koft.erase(koft.find(jab.substr(i-2,3)));\n    }\n    if(len(koft) != 0 ){\n        cout << \"NO\" << endl;\n        return 0 ;\n    }\n    cout << \"YES\" << endl;\n    cout << jab << endl;\n    \n    return 0;\n}"
}