{
    "id": 233204793,
    "contestId": 1203,
    "creationTimeSeconds": 1700242807,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1203,
        "index": "C",
        "name": "Common Divisors",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1203,
        "members": [
            {
                "handle": "Arnur2937"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1565706900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#include <queue>\r\n#define speed ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n#define russian setlocale(LC_ALL, \"Russian\");\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define bigInt __int128\r\n#define dl double long\r\n#define fl float\r\n#define all(s) s.begin(), s.end()\r\n#define pub push_back\r\n#define pob pop_back\r\n#define ins insert\r\n#define mp make_pair\r\n#define F first\r\n#define S second\r\n#define len length\r\nconst int N = 1000000;\r\nusing namespace std;\r\nbigInt binpow(ull n, ull pw, ull md = 18446744073709551615)\r\n{\r\n    bigInt ret;\r\n    if (pw == 0) return 1;\r\n    if (pw % 2)\r\n    {\r\n        ret = binpow(n, pw - 1, md);\r\n        ret *= n;\r\n    }\r\n    else\r\n    {\r\n        ret = binpow(n, pw / 2, md);\r\n        ret *= ret;\r\n    }\r\n    ret %= md;\r\n    return ret;\r\n}\r\nbigInt GSS(ull p, ull k)\r\n{\r\n    if (p == 1)\r\n    {\r\n        bigInt ret = p * (k + 1ULL);\r\n        return ret;\r\n    }\r\n    bigInt ret = binpow(p, k + 1ULL) - 1ULL;\r\n    ret /= p - 1ULL;\r\n    return ret;\r\n}\r\nbigInt ASS(bigInt a, bigInt b, ull n)\r\n{\r\n    bigInt ret = (a + b) * n;\r\n    ret /= 2;\r\n    return ret;\r\n}\r\nbigInt MMI(bigInt a, ull md)\r\n{\r\n    bigInt ret = binpow(a, md - 2ULL, md);\r\n    return ret;\r\n}\r\nbigInt mdiv(bigInt a, bigInt b, ull md)\r\n{\r\n    bigInt ret = a * MMI(b, md);\r\n    ret %= md;\r\n    return ret;\r\n}\r\nbigInt mmul(bigInt a, bigInt b, ull md = 18446744073709551615)\r\n{\r\n    bigInt ret = (a % md) * (b % md);\r\n    ret %= md;\r\n    return ret;\r\n}\r\nbigInt madd(bigInt a, bigInt b, ull md = 18446744073709551615)\r\n{\r\n    bigInt ret = (a % md) + (b % md);\r\n    ret %= md;\r\n    return ret;\r\n}\r\null GCD(ull a, ull b)\r\n{\r\n    ull mx = max(a, b), mn = min(a, b);\r\n    a = mx;\r\n    b = mn;\r\n    if (!(a % b))\r\n        return min(a, b);\r\n    else\r\n    {\r\n        ull r = a % b;\r\n        return GCD(b, r);\r\n    }\r\n}\r\null GD(ull a)\r\n{\r\n    for (int i = 2; i <= sqrt(a); ++i)\r\n    {\r\n        if (!(a % i))\r\n        {\r\n            ull ret = a / i;\r\n            return ret;\r\n        }\r\n    }\r\n    return 1;\r\n}\r\nvoid stTrans(stack<int> &st1, stack<int> &st2)\r\n{\r\n    stack<int> tempSt;\r\n    while (st1.size())\r\n    {\r\n        tempSt.push(st1.top());\r\n        st1.pop();\r\n    }\r\n    while (tempSt.size())\r\n    {\r\n        st2.push(tempSt.top());\r\n        tempSt.pop();\r\n    }\r\n}\r\nvoid stRev(stack<int> &st)\r\n{\r\n    stack<int> tempSt;\r\n    while (st.size())\r\n    {\r\n        tempSt.push(st.top());\r\n        st.pop();\r\n    }\r\n    stTrans(tempSt, st);\r\n}\r\nvoid stDisp(stack<int> &st)\r\n{\r\n    stack<int> tempSt;\r\n    while (st.size())\r\n    {\r\n        cout << st.top() << ' ';\r\n        tempSt.push(st.top());\r\n        st.pop();\r\n    }\r\n    while (tempSt.size())\r\n    {\r\n        st.push(tempSt.top());\r\n        tempSt.pop();\r\n    }\r\n}\r\nstruct pqComp\r\n{\r\n    bool operator()(const pair<int, int>& p1, const pair<int, int>& p2) const\r\n    {\r\n        return (p1.F < p2.F) || (p1.F == p2.F && p1.S < p2.S);\r\n    }\r\n};\r\nbool pCompF(pair<int, int>& p1, pair<int, int>& p2)\r\n{\r\n    return p1.F < p2.F;\r\n}\r\nbool pCompS(pair<int, int>& p1, pair<int, int>& p2)\r\n{\r\n    return p1.S < p2.S;\r\n}\r\nbool pCompFS(pair<int, int>& p1, pair<int, int>& p2)\r\n{\r\n    return (p1.F < p2.F) || (p1.F == p2.F && p1.S > p2.S);\r\n}\r\nvector <pair<int, int>> ds {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};//, {-1, -1}, {-1, 1}, {1, -1}, {1, 1}};\r\n\r\nint main() {\r\n    speed;\r\n    string a, b;\r\n    cin >> a >> b;\r\n    int n = a.len(), m = b.len();\r\n    vector<int> za(n), zb(n + m + 1);\r\n    b = a + '_' + b;\r\n    int l = 0, r = 0;\r\n    for (int i = 1; i < n; ++i) {\r\n        if (i <= r)\r\n            za[i] = min(za[i - l], r - i + 1);\r\n        while (i + za[i] < n && a[za[i]] == a[i + za[i]])\r\n            za[i]++;\r\n        if (i + za[i] - 1 > r)\r\n            l = i, r = i + za[i] - 1;\r\n    }\r\n    l = 0, r = 0;\r\n    for (int i = 1; i <= n + m; ++i) {\r\n        if (i <= r)\r\n            zb[i] = min(zb[i - l], r - i + 1);\r\n        while (i + zb[i] <= n + m && b[zb[i]] == b[i + zb[i]])\r\n            zb[i]++;\r\n        if (i + zb[i] - 1 > r)\r\n            l = i, r = i + zb[i] - 1;\r\n    }\r\n    vector<int> d;\r\n    for (int i = 1; i <= n; ++i) {\r\n        if (!(n % i) && !(m % i))\r\n            d.pub(i);\r\n    }\r\n    int ans = 0;\r\n    for (auto i: d) {\r\n        bool ok = 1;\r\n        for (int j = i; j < n; j += i)\r\n            ok = min(ok, za[j] >= i);\r\n        for (int j = n + 1; j <= n + m; j += i)\r\n            ok = min(ok, zb[j] >= i);\r\n        ans += ok;\r\n    }\r\n    cout << ans;\r\n}\r\n/*\r\n\u041d\u0415 \u0417\u0410\u0425\u041e\u0414\u0418\u0422 \u0420\u0415\u0428\u0415\u041d\u0418\u0415?\r\n1) \u041f\u0420\u041e\u0412\u0415\u0420\u042c \u041d\u0410 \u041e\u0427\u0415\u0412\u0418\u0414\u041d\u042b\u0415 \u041e\u0428\u0418\u0411\u041a\u0418 \u0412 \u041a\u041e\u0414\u0415\r\n2) \u041f\u0420\u041e\u0412\u0415\u0420\u042c \u041d\u0410 \u041f\u0415\u0420\u0415\u041f\u041e\u041b\u041d\u0415\u041d\u0418\u042f\r\n3) \u0423\u0411\u0415\u0414\u0418\u0421\u042c \u0412 \u041f\u0420\u0410\u0412\u0418\u041b\u042c\u041d\u041e\u0421\u0422\u0418 \u0410\u041b\u0413\u041e\u0420\u0418\u0422\u041c\u0410\r\n*/"
}