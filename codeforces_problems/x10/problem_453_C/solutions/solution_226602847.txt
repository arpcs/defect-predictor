{
    "id": 226602847,
    "contestId": 453,
    "creationTimeSeconds": 1696429702,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 453,
        "index": "C",
        "name": "Little Pony and Summer Sun Celebration",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2200,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "graphs"
        ]
    },
    "author": {
        "contestId": 453,
        "members": [
            {
                "handle": "MOon_Or"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1406907000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 2252800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define fast_io ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\r\n#define ll long long int\r\n#define F first\r\n#define S second\r\n\r\nconst int maxn = 1e5 + 10;\r\nint n, m, a[maxn], tmp, cnt, root, tedad[maxn];\r\nbool mark[maxn], mmark[maxn];\r\nvector <int> edg[maxn], vec;\r\n\r\nvoid input(){\r\n\tcin >> n >> m;\r\n\tfor(int i = 0; i < m; i++){\r\n\t\tint x, y;\r\n\t\tcin >> x >> y;\r\n\t\tedg[x].push_back(y);\r\n\t\tedg[y].push_back(x);\r\n\t}\r\n\tfor(int i = 1; i <= n; i++){\r\n\t\tcin >> a[i];\r\n\t}\r\n}\r\n\r\nvoid dfs(int v){\r\n\tmark[v] = 1;\r\n\tif(a[v] == 1)\r\n\t\ttmp++; root = v;\r\n\tfor(auto u : edg[v]){\r\n\t\tif(!mark[u]){\r\n\t\t\tdfs(u);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvoid solve(int v, int par){\r\n\tmmark[v] = 1;\r\n\tvec.push_back(v);\r\n\ttedad[v]++;\r\n\tfor(auto u : edg[v]){\r\n\t\tif(!mmark[u]){\r\n\t\t\tsolve(u, v);\r\n\t\t\tvec.push_back(v);\r\n\t\t\ttedad[v]++;\r\n\t\t}\r\n\t}\r\n\tif(tedad[v] % 2 != a[v] && par != -1){\r\n\t\ttedad[par]++;\r\n\t\ttedad[v]++;\r\n\t\tvec.push_back(par);\r\n\t\tvec.push_back(v);\r\n\t}\r\n}\r\n\r\nvoid check(){\r\n\tfor(int i = 1; i <= n; i++){\r\n\t\tif(!mark[i]){\r\n\t\t\tdfs(i);\r\n\t\t\tif(tmp > 0 && cnt == 0){\r\n\t\t\t\tsolve(root, -1);\r\n\t\t\t\tif(tedad[root] % 2 != a[root]){\r\n\t\t\t\t\tvec[0] = -1;\r\n\t\t\t\t}\r\n\t\t\t\tcnt++;\r\n\t\t\t}\r\n\t\t\ttmp = 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvoid out_put(){\r\n\tint sz = vec.size();\r\n\tif(vec[0] == -1)\r\n\t\tsz--;\r\n\tcout << sz << \"\\n\";\r\n\tfor(auto v : vec){\r\n\t\tif(v != -1){\r\n\t\t\tcout << v << \" \";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tfast_io;\r\n\tinput();\r\n\tcheck();\r\n\tif(cnt > 1){\r\n\t\tcout << -1;\r\n\t\treturn 0;\r\n\t}\r\n\tout_put();\r\n}\r\n"
}