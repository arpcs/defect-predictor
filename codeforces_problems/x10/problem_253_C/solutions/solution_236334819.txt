{
    "id": 236334819,
    "contestId": 253,
    "creationTimeSeconds": 1702036430,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 253,
        "index": "C",
        "name": "Text Editor",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 253,
        "members": [
            {
                "handle": "Dr.rabi3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354960800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 45,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 81920000,
    "source": "/***   Coding for Fun ^^ \u0648\u064e\u0645\u064e\u0627 \u062a\u064e\u0648\u0652\u0641\u0650\u064a\u0642\u0650\u064a \u0625\u0650\u0644\u0651\u064e\u0627 \u0628\u0650\u0627\u0644\u0644\u0651\u064e\u0647\u0650 \u06da \u0639\u064e\u0644\u064e\u064a\u0652\u0647\u0650 \u062a\u064e\u0648\u064e\u0643\u0651\u064e\u0644\u0652\u062a\u064f \u0648\u064e\u0625\u0650\u0644\u064e\u064a\u0652\u0647\u0650 \u0623\u064f\u0646\u0650\u064a\u0628\u064f    ***/\r\n/***   I love coding and programming, but i need partner ***/\r\n#pragma GCC optimize (\"O3\")\r\n#pragma GCC optimize (\"unroll-loops\")\r\n#include <bits/stdc++.h>\r\n#include <ext/numeric>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#define ll long long\r\n#define ull unsigned ll\r\n#define ld long double\r\n#define ed '\\n'\r\n#define all(x) x.begin(), x.end()\r\n#define rall(x) x.rbegin(), x.rend()\r\n#define fixed(x) fixed << setprecision(x)\r\n#define mem(dp,x) memset(dp,x,sizeof(dp))\r\n#define sumOf(a) (ll)((-1 + sqrt(8LL * a + 1)) / 2)\r\n\r\nconstexpr int mod = 1e9 + 7, oo = 0x3f3f3f3f, N = 1e5 + 5;\r\nconst double pi = acos(-1), EPS = 1e-7;\r\nconstexpr ll OO = 0x3f3f3f3f3f3f3f3f;\r\nconstexpr int dy[] = { 0 , 1 , -1 , 0  , 1 , -1 , 1  , -1 };\r\nconstexpr int dx[] = { 1 , 0 ,  0 , -1 , 1 , -1 , -1 ,  1 };\r\n\r\nnamespace Math {\r\n    int add(int a, int b) { return (0LL + a + b) % mod; }\r\n    int sub(int a, int b) { return ((0LL + a - b) % mod + mod) % mod; }\r\n    int mul(int a, int b) { return (1LL * a * b) % mod; }\r\n    int fp(int b, int p) {\r\n        ll res = 1; while (p) {\r\n            if (p & 1)\r\n                res = mul(res, b); b = mul(b, b); p >>= 1;\r\n        } return res;\r\n    }\r\n    int inv(int a) { return fp(a, mod - 2); }\r\n    int gcd(int a, int b) { return std::__gcd(a, b); }\r\n    int lcm(int a, int b) { return (a / gcd(a, b)) * b; }\r\n};\r\n\r\nusing namespace std;\r\nusing namespace Math;\r\nusing namespace __gnu_pbds;\r\n\r\nmt19937_64 rng(std::chrono::system_clock::now().time_since_epoch().count());\r\n\r\ntemplate < typename T, typename op = less<T> >\r\nusing ordered_set = tree< T, null_type, op, rb_tree_tag, tree_order_statistics_node_update >;\r\n\r\ntemplate < typename T > istream& operator >> (istream& in, vector < T >& v) {\r\n    for (auto& x : v) in >> x;\r\n    return in;\r\n}\r\n\r\ntemplate < typename T > ostream& operator << (ostream& out, const vector < T >& v) {\r\n    for (const T& x : v) out << x << ' ';\r\n    return out;\r\n}\r\n\r\nvoid Accept() { // for VS code\r\n    ios_base::sync_with_stdio(false);\r\n    cout.tie(nullptr);\r\n    cin.tie(nullptr);\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#else\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n}\r\n\r\nvoid doWork(int TC) {\r\n    int n;\r\n    cin >> n;\r\n    vector<int>v(n + 1);\r\n    vector<vector<int>>grid(n + 1, vector<int>(N));\r\n    for (int i = 1;i <= n;i++) {\r\n        int x;cin >> x;\r\n        for (int j = 1;j <= x;j++)\r\n            grid[i][j] = 1;\r\n        v[i] = x;\r\n    }\r\n    int s1, s2, e1, e2;\r\n    cin >> s1 >> s2 >> e1 >> e2;\r\n    queue<pair<int, int>>q;\r\n    vector<vector<int>>dest(n + 1, vector<int>(N, -1));\r\n    dest[s1][s2] = 0;\r\n    q.push({ s1,s2 });\r\n    while (!q.empty()) {\r\n        int x = q.front().first;\r\n        int y = q.front().second;\r\n        // cout << x << \" \" << y << ' ' << dest[x][y] << endl;\r\n        if (x == e1 && y == e2)break;\r\n        q.pop();\r\n        for (int i : {0, 1, 2, 3}) {\r\n            int xi = x + dx[i];\r\n            int yi = y + dy[i];\r\n            if (xi < 1 || xi > n)continue;\r\n            yi = min(yi, v[xi] + 1);\r\n            if (dest[xi][yi] != -1)continue;\r\n            q.push({ xi, yi });\r\n            dest[xi][yi] = dest[x][y] + 1;\r\n        }\r\n    }   \r\n    cout << dest[e1][e2];\r\n}\r\n\r\nint main() {\r\n    cerr << \"Dr.rabi3 love PS, but i'm not.\\n\";\r\n    Accept();\r\n    int _ = 1;\r\n    // cin >> _;\r\n    for (int __ = 1;__ <= _;__++) {\r\n        // cout << \"Case \" << __ << \": \";\r\n        doWork(__);\r\n        if (__ < _)cout << '\\n';\r\n        // cout << '\\n';\r\n    }\r\n    return 0;\r\n}"
}