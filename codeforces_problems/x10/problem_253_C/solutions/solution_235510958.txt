{
    "id": 235510958,
    "contestId": 253,
    "creationTimeSeconds": 1701602316,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 253,
        "index": "C",
        "name": "Text Editor",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 253,
        "members": [
            {
                "handle": "zyh440306"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354960800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nstatic int outlen = 2;\r\nstatic bool outflag = false;\r\nstruct FastIO\r\n{\r\n\tinline FastIO& operator >> (register int &f)\r\n\t{\r\n\t\tf = 0;\r\n\t\tregister char ch = getchar(), cmp = 0;\r\n\t\twhile(ch <= 32)\r\n\t\t{\r\n\t\t\tch = getchar();\r\n\t\t}\r\n\t\tcmp |= (ch == '-');\r\n\t\tif(cmp)\r\n\t\t{\r\n\t\t\tch = getchar();\r\n\t\t}\r\n\t\twhile(isdigit(ch))\r\n\t\t{\r\n\t\t\tf = (f << 3) + (f << 1) + (ch ^ 48);\r\n\t\t\tch = getchar();\r\n\t\t}\r\n\t\treturn f = cmp ? -f : f, *this;\r\n\t}\r\n\tinline FastIO& operator >> (register long long &f)\r\n\t{\r\n\t\tf = 0;\r\n\t\tregister char ch = getchar(), cmp = 0;\r\n\t\twhile(ch <= 32)\r\n\t\t{\r\n\t\t\tch = getchar();\r\n\t\t}\r\n\t\tcmp |= (ch == '-');\r\n\t\tif(cmp)\r\n\t\t{\r\n\t\t\tch = getchar();\r\n\t\t}\r\n\t\twhile(isdigit(ch))\r\n\t\t{\r\n\t\t\tf = (f << 3) + (f << 1) + (ch ^ 48);\r\n\t\t\tch = getchar();\r\n\t\t}\r\n\t\treturn f = cmp ? -f : f, *this;\r\n\t}\r\n\tinline FastIO& operator >> (register char &f)\r\n\t{\r\n\t\treturn f = getchar(), *this;\r\n\t}\r\n\tinline FastIO& operator >> (register string &f)\r\n\t{\r\n\t\tf.clear();\r\n\t\tregister char ch = getchar();\r\n\t\twhile(ch != '\\n' && ch != ' ')\r\n\t\t{\r\n\t\t\tf.push_back(ch);\r\n\t\t\tch = getchar();\r\n\t\t}\r\n\t\treturn *this;\r\n\t}\r\n\tinline FastIO& operator >> (register double &f)\r\n\t{\r\n\t\tf = 0;\r\n\t\tregister char ch = getchar(),  cmp = 0;\r\n\t\tregister long long ff = 0;\r\n\t\tregister long long x = 0;\r\n\t\tregister double d = 0.1;\r\n\t\twhile(ch <= 32)\r\n\t\t{\r\n\t\t\tch = getchar();\r\n\t\t}\r\n\t\tcmp |= (ch == '-');\r\n\t\tif(cmp)\r\n\t\t{\r\n\t\t\tch = getchar();\r\n\t\t}\r\n\t\twhile(isdigit(ch))\r\n\t\t{\r\n\t\t\tff = (ff << 3) + (ff << 1) + (ch ^ 48);\r\n\t\t\tch = getchar();\r\n\t\t}\r\n\t\tf += cmp ? -(double)ff : (double)ff;\r\n\t\tcmp |= (ch == '.');\r\n\t\tif(cmp)\r\n\t\t{\r\n\t\t\tch = getchar();\r\n\t\t}\r\n\t\twhile(isdigit(ch))\r\n\t\t{\r\n\t\t\tx = (x << 3) + (x << 1) + (ch ^ 48);\r\n\t\t\td *= 0.1;\r\n\t\t\tch = getchar();\r\n\t\t}\r\n\t\tf += x * d;\r\n\t\treturn *this;\r\n\t}\r\n\tinline FastIO& operator >> (register float &f)\r\n\t{\r\n\t\tf = 0;\r\n\t\tregister char ch = getchar(),  cmp = 0;\r\n\t\tregister int ff = 0;\r\n\t\tregister float d = 0.1, x = 0;\r\n\t\twhile(ch <= 32)\r\n\t\t{\r\n\t\t\tch = getchar();\r\n\t\t}\r\n\t\tcmp |= (ch == '-');\r\n\t\tif(cmp)\r\n\t\t{\r\n\t\t\tch = getchar();\r\n\t\t}\r\n\t\twhile(isdigit(ch))\r\n\t\t{\r\n\t\t\tff = (ff << 3) + (ff << 1) + (ch ^ 48);\r\n\t\t\tch = getchar();\r\n\t\t}\r\n\t\tf += cmp ? -(float)ff : (float)ff;\r\n\t\tcmp |= (ch == '.');\r\n\t\tif(cmp)\r\n\t\t{\r\n\t\t\tch = getchar();\r\n\t\t}\r\n\t\twhile(isdigit(ch))\r\n\t\t{\r\n\t\t\tx += (ch - 48) * d;\r\n\t\t\td *= 0.1;\r\n\t\t\tch = getchar();\r\n\t\t}\r\n\t\tf += x;\r\n\t\treturn *this;\r\n\t}\r\n\tinline FastIO& operator >> (register short &f)\r\n\t{\r\n\t\tf = 0;\r\n\t\tregister char ch = getchar(), cmp = 0;\r\n\t\twhile(ch <= 32)\r\n\t\t{\r\n\t\t\tch = getchar();\r\n\t\t}\r\n\t\tcmp |= (ch == '-');\r\n\t\tif(cmp)\r\n\t\t{\r\n\t\t\tch = getchar();\r\n\t\t}\r\n\t\twhile(isdigit(ch))\r\n\t\t{\r\n\t\t\tf = (f << 3) + (f << 1) + (ch ^ 48);\r\n\t\t\tch = getchar();\r\n\t\t}\r\n\t\treturn f = cmp ? -f : f, *this;\r\n\t}\r\n\tinline FastIO& operator << (register int f)\r\n\t{\r\n\t\tstatic char cc[10], len = -1;\r\n\t\t!f ? putchar('0') : 0;\r\n\t\tf < 0 ? putchar('-'), f = -f : 0;\r\n\t\twhile(f)\r\n\t\t{\r\n\t\t\tcc[++ len] = f % 10 + 48;\r\n\t\t\tf /= 10;\r\n\t\t}\r\n\t\twhile(~len)\r\n\t\t{\r\n\t\t\tputchar(cc[len]);\r\n\t\t\t-- len;\r\n\t\t}\r\n\t\treturn *this;\r\n\t}\r\n\tinline FastIO& operator << (register long long f)\r\n\t{\r\n\t\tstatic char cc[25], len = -1;\r\n\t\t!f ? putchar('0') : 0;\r\n\t\tf < 0 ? putchar('-'), f = -f : 0;\r\n\t\twhile(f)\r\n\t\t{\r\n\t\t\tcc[++ len] = f % 10 + 48;\r\n\t\t\tf /= 10;\r\n\t\t}\r\n\t\twhile(~len)\r\n\t\t{\r\n\t\t\tputchar(cc[len]);\r\n\t\t\t-- len;\r\n\t\t}\r\n\t\treturn *this;\r\n\t}\r\n\tinline FastIO& operator << (register char f)\r\n\t{\r\n\t\treturn putchar(f), *this;\r\n\t}\r\n\tinline FastIO& operator << (register string f)\r\n\t{\r\n\t\tregister int nn = f.size();\r\n\t\tfor(register int i = 0; i < nn; ++ i)\r\n\t\t{\r\n\t\t\tputchar(f[i]);\r\n\t\t}\r\n\t\treturn *this;\r\n\t}\r\n\tinline FastIO& operator << (register double f)\r\n\t{\r\n        register int y = int(f);\r\n        register char cnt = 0;\r\n        *this << y;\r\n        f -= y;\r\n        if(outflag)\r\n        {\r\n        \twhile(f - int(f) > 1e-6 && ++ cnt <= outlen)\r\n\t\t\t{\r\n\t\t\t\tf *= 10;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\twhile(f - int(f) > 1e-6)\r\n\t\t\t{\r\n\t\t\t\tf *= 10;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(f)\r\n\t\t{\r\n\t\t\t*this << '.' << int(f);\r\n\t\t}\r\n        return *this;\r\n    }\r\n};\r\nFastIO io;\r\n#define cin io\r\n#define cout io\r\n#define endl '\\n'\r\n#define iolimit_double_outlen(a) outlen=a;outflag=true\r\nint main()\r\n{\r\n\tiolimit_double_outlen(2);\r\n\tStack <int> s;\r\n\ts.push(1);\r\n\ts.push(2);\r\n\ts.push(3);\r\n\tcout << s.top() << endl;\r\n}"
}