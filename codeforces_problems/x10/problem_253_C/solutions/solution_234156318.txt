{
    "id": 234156318,
    "contestId": 253,
    "creationTimeSeconds": 1700865517,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 253,
        "index": "C",
        "name": "Text Editor",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 253,
        "members": [
            {
                "handle": "abdalllaabdalllla"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354960800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 45,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 10137600,
    "source": "#include <bits/stdc++.h>\r\n// #define int long long int\r\nusing namespace std;\r\n\r\nvoid put();\r\n//priority_queue <int, vector<int>, greater<int>> gq;\r\n\r\nconst int N  = 101;\r\nint n, a[N] {};\r\nbool visited[N][100001] {};\r\n\r\nbool valid (int x, int y) {\r\n\t\treturn x >= 0 && y >= 0 && x < n && y <= a[x] && !visited[x][y];  \r\n};\r\n\r\n\r\nint solve() {\r\n\tcin >> n;\r\n\tfor(int i = 0; i < n; ++i) \r\n\t\tcin >> a[i];\r\n\r\n\r\n\tint x_source, y_source, x_targert, y_target;\r\n\tcin >> x_source >> y_source >> x_targert >> y_target;\r\n\r\n\tx_source--, x_targert--, y_target--, y_source--;\r\n\t\r\n\tqueue<pair<int, int>> que;\r\n\t\r\n\tque.push({x_source, y_source});\r\n\r\n\t\r\n\r\n\tint dr[4] {0, 0, -1, 1}, dc[4] {1, -1, 0, 0};\r\n\tvisited[x_source][y_source] = 1;\r\n\r\n\tfor(int i = 0, sz = que.size(); sz; sz = que.size(), i++) {\r\n\t\twhile(sz--) {\r\n\t\t\tint f = que.front().first, s = que.front().second;\r\n\t\t\tque.pop();\r\n\t\t\tif(f == x_targert && s == y_target)\t\r\n\t\t\t\treturn i;\r\n\t\t\tfor(int j = 0; j < 4; ++j) {\r\n\t\t\t\tint nr = dr[j] + f, nc = dc[j] + s;\r\n\t\t\t\tif(nr >= 0 && nr < n && nc > a[nr])\r\n\t\t\t\t\tnc = a[nr];\r\n\r\n\r\n\t\t\t\tif(valid(nr, nc)) {\r\n\t\t\t\t\tque.push({nr, nc});\r\n\t\t\t\t\tvisited[nr][nc] = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn -1;\r\n}\r\n\r\nint32_t main() {\r\n\tput();\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(NULL);\r\n\t\r\n\tint tt = 1; //cin >> tt;\r\n\twhile(tt--) {\r\n\t\tcout << solve() << endl;\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n\r\nvoid put() {\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(NULL);\r\n//#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\",  \"r\",  stdin);\r\n    freopen(\"output.txt\", \"w\", stdout); \t\r\n//#endif  \r\n  }"
}