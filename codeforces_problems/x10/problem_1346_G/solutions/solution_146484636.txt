{
    "id": 146484636,
    "contestId": 1346,
    "creationTimeSeconds": 1644908199,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1346,
        "index": "G",
        "name": "Two IP Cameras",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "*special",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1346,
        "members": [
            {
                "handle": "C0ldSmi1e"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1590762900
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 35,
    "timeConsumedMillis": 2807,
    "memoryConsumedBytes": 4608000,
    "source": "import java.lang.AssertionError\r\n\r\nprivate fun readLn() = readLine()!! // string line\r\nprivate fun readInt() = readLn().toInt() // single int\r\nprivate fun readLong() = readLn().toLong() // single long\r\nprivate fun readDouble() = readLn().toDouble() // single double\r\nprivate fun readStrings() = readLn().split(\" \") // list of strings\r\nprivate fun readInts() = readStrings().map { it.toInt() } // list of ints\r\nprivate fun readLongs() = readStrings().map { it.toLong() } // list of longs\r\nprivate fun readDoubles() = readStrings().map { it.toDouble() } // list of doubles\r\n\r\nprivate fun myAssert(x: Boolean) {\r\n    if (!x) {\r\n        throw AssertionError()\r\n    }\r\n}\r\n\r\nfun main(args: Array<String>) {\r\n    var (k, n) = readInts()\r\n    var p = readInts()\r\n    var x = readInts()\r\n    if (n == 2) {\r\n        println(\"YES\")\r\n        println(\"${x[0]} ${p[0]}\")\r\n        println(\"${x[1]} ${p[0]}\")\r\n        return\r\n    }\r\n    for (bi in 0 until 3) {\r\n        for (bj in bi + 1 until 3) {\r\n            var diff = x[bj] - x[bi]\r\n            for (period in p) {\r\n                if (diff % period == 0) {\r\n                    var least = x[bi]\r\n                    var first = -1\r\n                    var g = 0\r\n                    for (i in 0 until n) {\r\n                        if ((x[i] - x[bi]) % period == 0) {\r\n                            least = minOf(least, x[i])\r\n                            continue\r\n                        }\r\n                        if (first == -1) {\r\n                            first = x[i]\r\n                        } else {\r\n                            var h = x[i] - first\r\n                            while (g > 0 && h > 0) {\r\n                                if (g > h) {\r\n                                    g %= h\r\n                                } else {\r\n                                    h %= g\r\n                                }\r\n                            }\r\n                            g = g + h\r\n                        }\r\n                    }\r\n                    for (v in p) {\r\n                        if (g % v == 0) {\r\n                            println(\"YES\")\r\n                            println(\"${least} ${period}\")\r\n                            println(\"${maxOf(first, 1)} ${v}\")\r\n                            return\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    println(\"NO\")\r\n}"
}