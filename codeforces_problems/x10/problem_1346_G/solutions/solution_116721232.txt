{
    "id": 116721232,
    "contestId": 1346,
    "creationTimeSeconds": 1621498922,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1346,
        "index": "G",
        "name": "Two IP Cameras",
        "type": "PROGRAMMING",
        "rating": 2300,
        "tags": [
            "*special",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1346,
        "members": [
            {
                "handle": "Chinese_zjc_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1590762900
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 35,
    "timeConsumedMillis": 763,
    "memoryConsumedBytes": 0,
    "source": "import java.util.Scanner\r\nimport kotlin.system.exitProcess\r\nval read=Scanner(System.`in`)\r\nval k=read.nextInt()\r\nval n=read.nextInt()\r\nval p=Array<Int>(k,{_->read.nextInt()})\r\nval x=Array<Int>(n,{_->read.nextInt()})\r\nfun __gcd(A:Int,B:Int):Int {return if(B!=0){__gcd(B,A%B)}else{A}}\r\nfun binary_search(v:Int):Boolean\r\n{\r\n    var l=0;var r=k-1\r\n    while(l!=r)\r\n    {\r\n        val mid=(l+r) shr 1\r\n        if(p[mid]<v)\r\n            l=mid+1\r\n        else\r\n            r=mid\r\n    }\r\n    return p[l]==v\r\n}\r\nfun test(k1:Int,b1:Int)\r\n{\r\n    var b2=0;var gcd=0\r\n    for(i in 0 until n)\r\n        if((x[i]-b1)%k1!=0)\r\n        {\r\n            if(b2==0)\r\n                b2=x[i]\r\n            else\r\n                gcd=__gcd(x[i]-b2,gcd)\r\n        }\r\n        else{}\r\n    if(b2==0)\r\n    {\r\n        println(\"YES\")\r\n        print(b1);print(' ');println(k1)\r\n        print(b1);print(' ');println(k1)\r\n        exitProcess(0)\r\n    }\r\n    else if(gcd==0)\r\n    {\r\n        println(\"YES\")\r\n        print(b1);print(' ');println(k1)\r\n        print(b2);print(' ');println(k1)\r\n        exitProcess(0)\r\n    }\r\n    else{}\r\n    var lim=Math.sqrt(gcd.toDouble()).toInt()\r\n    for(i in 1..lim)\r\n    {\r\n        if(gcd%i==0)\r\n        {\r\n            if(binary_search(i))\r\n            {\r\n                println(\"YES\")\r\n                print(b1);print(' ');println(k1)\r\n                print(b2);print(' ');println(i)\r\n                exitProcess(0)\r\n            }\r\n            if(binary_search(gcd/i))\r\n            {\r\n                println(\"YES\")\r\n                print(b1);print(' ');println(k1)\r\n                print(b2);print(' ');println(gcd/i)\r\n                exitProcess(0)\r\n            }\r\n        }\r\n    }\r\n}\r\nfun main()\r\n{\r\n    if(n==1)\r\n    {\r\n        println(\"YES\")\r\n        print(x[0]);print(' ');println(p[0])\r\n        print(x[0]);print(' ');println(p[0])\r\n        exitProcess(0)\r\n    }else{}\r\n    if(n==2)\r\n    {\r\n        println(\"YES\")\r\n        print(x[0]);print(' ');println(p[0])\r\n        print(x[1]);print(' ');println(p[0])\r\n        exitProcess(0)\r\n    }else{}\r\n    for(A in 0 until 3)\r\n        for(B in A+1 until 3)\r\n        {\r\n            val V=x[B]-x[A];var pos=0\r\n            for(i in 1..V)\r\n            {\r\n                while(pos!=k&&p[pos]<i)++pos\r\n                if(pos==k)break\r\n                else{}\r\n                if(p[pos]==i&&V%i==0)\r\n                    test(i,x[A])\r\n                else{}\r\n            }\r\n        }\r\n    println(\"NO\")\r\n}"
}