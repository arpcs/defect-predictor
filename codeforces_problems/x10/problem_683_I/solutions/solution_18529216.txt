{
    "id": 18529216,
    "contestId": 683,
    "creationTimeSeconds": 1466101788,
    "relativeTimeSeconds": 8988,
    "problem": {
        "contestId": 683,
        "index": "I",
        "name": "Loader",
        "type": "PROGRAMMING",
        "rating": 2500,
        "tags": [
            "*special",
            "graphs"
        ]
    },
    "author": {
        "contestId": 683,
        "members": [
            {
                "handle": "pekempey"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1466092800
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 16,
    "timeConsumedMillis": 342,
    "memoryConsumedBytes": 2560000,
    "source": "import java.util.*\r\n\r\nfun main(args : Array<String>) {\r\n    val sc = Scanner(System.`in`)\r\n\r\n    val h = sc.nextInt()\r\n    val w = sc.nextInt()\r\n\r\n    var g = Array(h, { i -> sc.next().toCharArray() })\r\n\r\n    var vis = Array(h, {\r\n        i -> Array(w, {\r\n            j -> Array(h, {\r\n                k -> Array(w, { i -> -1 })\r\n            })\r\n        })\r\n    })\r\n\r\n    var sy = -1\r\n    var sx = -1\r\n    var gy = -1\r\n    var gx = -1\r\n    var ly = -1\r\n    var lx = -1\r\n\r\n    for (i in 0..h - 1) {\r\n        for (j in 0..w - 1) {\r\n            if (g[i][j] == 'Y') {\r\n                sy = i\r\n                sx = j\r\n            } else if (g[i][j] == 'T') {\r\n                gy = i\r\n                gx = j\r\n            } else if (g[i][j] == 'B') {\r\n                ly = i\r\n                lx = j\r\n            }\r\n        }\r\n    }\r\n\r\n    vis[sy][sx][ly][lx] = -2\r\n    var qy: Queue<Int> = ArrayDeque<Int>()\r\n    var qx: Queue<Int> = ArrayDeque<Int>()\r\n    var qy2: Queue<Int> = ArrayDeque<Int>()\r\n    var qx2: Queue<Int> = ArrayDeque<Int>()\r\n\r\n    qy.add(sy)\r\n    qx.add(sx)\r\n    qy2.add(ly)\r\n    qx2.add(lx)\r\n\r\n    val dy = listOf(0, 1, 0, -1)\r\n    val dx = listOf(1, 0, -1, 0)\r\n    val dname = listOf('E', 'S', 'W', 'N')\r\n    val dname2 = listOf('e', 's', 'w', 'n')\r\n\r\n    while (!qy.isEmpty()) {\r\n        val y = qy.poll()\r\n        val x = qx.poll()\r\n        val ly = qy2.poll()\r\n        val lx = qx2.poll()\r\n\r\n        if (ly == gy && lx == gx) break\r\n\r\n        for (k in 0..3) {\r\n            val ny = y + dy[k]\r\n            val nx = x + dx[k]\r\n\r\n            if (ny < 0 || nx < 0 || ny >= h || nx >= w) continue\r\n            if (g[ny][nx] == 'X') continue\r\n            if (ny == ly && nx == lx) {\r\n                val nly = ly + dy[k]\r\n                val nlx = lx + dx[k]\r\n                if (nly < 0 || nlx < 0 || nly >= h || nlx >= w) continue\r\n                if (g[nly][nlx] == 'X') continue\r\n\r\n                if (vis[ny][nx][nly][nlx] == -1) {\r\n                    vis[ny][nx][nly][nlx] = k + 4\r\n                    qy.add(ny)\r\n                    qx.add(nx)\r\n                    qy2.add(nly)\r\n                    qx2.add(nlx)\r\n                }\r\n            } else {\r\n                if (vis[ny][nx][ly][lx] == -1) {\r\n                    vis[ny][nx][ly][lx] = k\r\n                    qy.add(ny)\r\n                    qx.add(nx)\r\n                    qy2.add(ly)\r\n                    qx2.add(lx)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    var ans = \"\"\r\n\r\n    for (i in 0..h - 1) {\r\n        for (j in 0..w - 1) {\r\n            if (vis[i][j][gy][gx] != -1) {\r\n                var y = i\r\n                var x = j\r\n                var ly = gy\r\n                var lx = gx\r\n\r\n                while (vis[y][x][ly][lx] != -2) {\r\n                    var k = vis[y][x][ly][lx]\r\n\r\n                    if (k < 4) {\r\n                        ans += dname2[k]\r\n                        y += dy[(k + 2) % 4]\r\n                        x += dx[(k + 2) % 4]\r\n                    } else {\r\n                        ans += dname[k % 4]\r\n                        y += dy[(k + 2) % 4]\r\n                        x += dx[(k + 2) % 4]\r\n                        ly += dy[(k + 2) % 4]\r\n                        lx += dx[(k + 2) % 4]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ans = ans.reversed()\r\n\r\n    if (!ans.isEmpty()) {\r\n        println(\"YES\")\r\n        println(ans)\r\n    } else {\r\n        println(\"NO\")\r\n    }\r\n}"
}