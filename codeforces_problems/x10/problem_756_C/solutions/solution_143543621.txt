{
    "id": 143543621,
    "contestId": 756,
    "creationTimeSeconds": 1642784598,
    "relativeTimeSeconds": 3798,
    "problem": {
        "contestId": 756,
        "index": "C",
        "name": "Nikita and stack",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2200,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 756,
        "members": [
            {
                "handle": "mtsd"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1642780800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 47,
    "timeConsumedMillis": 405,
    "memoryConsumedBytes": 8908800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef long double ld;\r\n#define inf 1000000007\r\n#define MP make_pair\r\n#define MT make_tuple\r\n#define PB push_back\r\n#define fi first\r\n#define se second\r\n#define rep(i,n) for(int i = 0; i < (int)(n); ++i)\r\n#define rrep(i,n) for(int i = (int)n-1; i >= 0; --i)\r\n#define srep(i,a,b) for(int i = (int)a; i < (int)(b); ++i)\r\n#define all(x) (x).begin(),(x).end()\r\n#define SUM(v) accumulate(all(v), 0LL)\r\n#define MIN(v) *min_element(all(v))\r\n#define MAX(v) *max_element(all(v))\r\n#define lb(c, x) distance((c).begin(), lower_bound(all(c), (x)))\r\n#define ub(c, x) distance((c).begin(), upper_bound(all(c), (x)))\r\n#define UNIQUE(x) sort(all(x)), x.erase(unique(all(x)), x.end())\r\n#define SZ(c) (int)(c).size()\r\ntemplate<typename T>\r\nostream& operator << (ostream& os, vector<T>& vec) {\r\n    os << \"{\";\r\n    for (int i = 0; i<(int)vec.size(); i++) {\r\n        os << vec[i] << (i + 1 == (int)vec.size() ? \"\" : \", \");\r\n    }\r\n    os << \"}\";\r\n    return os;\r\n}\r\n// pair\u51fa\u529b\r\ntemplate<typename T, typename U>\r\nostream& operator << (ostream& os, pair<T, U> pair_var) {\r\n    os << \"(\" << pair_var.first << \", \" << pair_var.second << \")\";\r\n    return os;\r\n}\r\n// map\u51fa\u529b\r\ntemplate<typename T, typename U>\r\nostream& operator << (ostream& os, map<T, U>& map_var) {\r\n    os << \"{\";\r\n    for(auto itr = map_var.begin(); itr != map_var.end(); itr++){\r\n        os << \"(\" << itr->first << \", \" << itr->second << \")\";\r\n        itr++;\r\n        if(itr != map_var.end()) os << \", \";\r\n        itr--;\r\n    }\r\n    os << \"}\";\r\n    return os;\r\n}\r\n// set \u51fa\u529b\r\ntemplate<typename T>\r\nostream& operator << (ostream& os, set<T>& set_var) {\r\n    os << \"{\";\r\n    for(auto itr = set_var.begin(); itr != set_var.end(); itr++){\r\n        os << (*itr);\r\n        ++itr;\r\n        if(itr != set_var.end()) os << \", \";\r\n        itr--;\r\n    }\r\n    os << \"}\";\r\n    return os;\r\n}\r\n// tuple \u51fa\u529b\r\ntemplate<int N,class Tuple>\r\nvoid out(ostream &os,const Tuple &t){}\r\ntemplate<int N,class Tuple,class H,class ...Ts>\r\nvoid out(ostream &os,const Tuple &t){\r\n    if(N)os<<\", \";\r\n    os<<get<N>(t);\r\n    out<N+1,Tuple,Ts...>(os,t);\r\n}\r\ntemplate<class ...Ts>\r\nostream& operator<<(ostream &os, const tuple<Ts...> &t){\r\n    os<<\"(\";\r\n    out<0,tuple<Ts...>,Ts...>(os,t);\r\n    os<<\")\";\r\n    return os;\r\n}\r\n#define overload2(_1, _2, name, ...) name\r\n#define vec(type, name, ...) vector<type> name(__VA_ARGS__)\r\n#define VEC(type, name, size)                                                                                                                                  \\\r\n    vector<type> name(size);                                                                                                                                   \\\r\n    IN(name)\r\n#define vv(type, name, h, ...) vector<vector<type>> name(h, vector<type>(__VA_ARGS__))\r\n#define VV(type, name, h, w)                                                                                                                                   \\\r\n    vector<vector<type>> name(h, vector<type>(w));                                                                                                             \\\r\n    IN(name)\r\n#define vvv(type, name, h, w, ...) vector<vector<vector<type>>> name(h, vector<vector<type>>(w, vector<type>(__VA_ARGS__)))\r\n#define vvvv(type, name, a, b, c, ...)                                                                                                                         \\\r\n    vector<vector<vector<vector<type>>>> name(a, vector<vector<vector<type>>>(b, vector<vector<type>>(c, vector<type>(__VA_ARGS__))))\r\n#define INT(...)                                                                                                                                               \\\r\n    int __VA_ARGS__;                                                                                                                                           \\\r\n    IN(__VA_ARGS__)\r\n#define LL(...)                                                                                                                                                \\\r\n    ll __VA_ARGS__;                                                                                                                                            \\\r\n    IN(__VA_ARGS__)\r\n#define STR(...)                                                                                                                                               \\\r\n    string __VA_ARGS__;                                                                                                                                        \\\r\n    IN(__VA_ARGS__)\r\n#define CHR(...)                                                                                                                                               \\\r\n    char __VA_ARGS__;                                                                                                                                          \\\r\n    IN(__VA_ARGS__)\r\n#define DBL(...)                                                                                                                                               \\\r\n    double __VA_ARGS__;                                                                                                                                        \\\r\n    IN(__VA_ARGS__)\r\nint scan() { return getchar(); }\r\nvoid scan(int &a) { cin >> a; }\r\nvoid scan(long long &a) { cin >> a; }\r\nvoid scan(char &a) { cin >> a; }\r\nvoid scan(double &a) { cin >> a; }\r\nvoid scan(string &a) { cin >> a; }\r\ntemplate <class T, class S> void scan(pair<T, S> &p) { scan(p.first), scan(p.second); }\r\ntemplate <class T> void scan(vector<T> &);\r\ntemplate <class T> void scan(vector<T> &a) {\r\n    for(auto &i : a) scan(i);\r\n}\r\ntemplate <class T> void scan(T &a) { cin >> a; }\r\nvoid IN() {}\r\ntemplate <class Head, class... Tail> void IN(Head &head, Tail &...tail) {\r\n    scan(head);\r\n    IN(tail...);\r\n}\r\nconst string YESNO[2] = {\"NO\", \"YES\"};\r\nconst string YesNo[2] = {\"No\", \"Yes\"};\r\nconst string yesno[2] = {\"no\", \"yes\"};\r\nvoid YES(bool t = 1) { cout << YESNO[t] << endl; }\r\nvoid NO(bool t = 1) { YES(!t); }\r\nvoid Yes(bool t = 1) { cout << YesNo[t] << endl; }\r\nvoid No(bool t = 1) { Yes(!t); }\r\nvoid yes(bool t = 1) { cout << yesno[t] << endl; }\r\nvoid no(bool t = 1) { yes(!t); }\r\n#ifdef LOCAL\r\nvoid debug_out() { cerr << endl; }\r\ntemplate <typename Head, typename... Tail>\r\nvoid debug_out(Head H, Tail... T) {\r\n    cerr << \" \" << H;\r\n    debug_out(T...);\r\n}\r\n#define dbg(...) \\\r\n    cerr << __LINE__ << \" [\" << #__VA_ARGS__ << \"]:\", debug_out(__VA_ARGS__)\r\n#define dump(x) cerr << __LINE__ << \" \" << #x << \" = \" << (x) << endl\r\n#else\r\n#define dbg(...) (void(0))\r\n#define dump(x) (void(0))\r\n#endif\r\ntemplate<typename A, typename T>\r\nstd::enable_if_t<std::is_convertible<T, A>::value> fill(A& array, const T& val)\r\n{\r\n    array = val;\r\n}\r\ntemplate<typename A, typename T>\r\nstd::enable_if_t<!std::is_convertible<T, A>::value> fill(A& array, const T& val)\r\n{\r\n    for (auto& a : array) {\r\n        fill(a, val);\r\n    }\r\n}\r\ntemplate <typename T, typename S> T ceil(T x, S y) {\r\n    assert(y);\r\n    return (y < 0 ? ceil(-x, -y) : (x > 0 ? (x + y - 1) / y : x / y));\r\n}\r\ntemplate <typename T, typename S> T floor(T x, S y) {\r\n    assert(y);\r\n    return (y < 0 ? floor(-x, -y) : (x > 0 ? x / y : x / y - (x % y == 0 ? 0 : 1)));\r\n}\r\nvector<int> iota(int n) {vector<int> a(n);iota(all(a), 0);return a;}\r\ntemplate <class T> T POW(T x, int n) {T res = 1;for(; n; n >>= 1, x *= x){if(n & 1) res *= x;}return res;}\r\nll pow2(int i) { return 1LL << i; }\r\nint topbit(signed t) { return t == 0 ? -1 : 31 - __builtin_clz(t); }\r\nint topbit(ll t) { return t == 0 ? -1 : 63 - __builtin_clzll(t); }\r\nint lowbit(signed a) { return a == 0 ? 32 : __builtin_ctz(a); }\r\nint lowbit(ll a) { return a == 0 ? 64 : __builtin_ctzll(a); }\r\n// int allbit(int n) { return (1 << n) - 1; }\r\nll allbit(ll n) { return (1LL << n) - 1; }\r\nint popcount(signed t) { return __builtin_popcount(t); }\r\nint popcount(ll t) { return __builtin_popcountll(t); }\r\nbool ispow2(int i) { return i && (i & -i) == i; }\r\n\r\n\r\ntemplate <class S> void fold_in(vector<S> &v) {}\r\ntemplate <typename Head, typename... Tail, class S> void fold_in(vector<S> &v, Head &&a, Tail &&...tail) {\r\n    for(auto e : a) v.emplace_back(e);\r\n    fold_in(v, tail...);\r\n}\r\ntemplate <class S> void renumber(vector<S> &v) {}\r\ntemplate <typename Head, typename... Tail, class S> void renumber(vector<S> &v, Head &&a, Tail &&...tail) {\r\n    for(auto &&e : a) e = lb(v, e);\r\n    renumber(v, tail...);\r\n}\r\ntemplate <class S, class... Args> void zip(vector<S> &head, Args &&...args) {\r\n    vector<S> v;\r\n    fold_in(v, head, args...);\r\n    sort(all(v)), v.erase(unique(all(v)), v.end());\r\n    renumber(v, head, args...);\r\n}\r\ntemplate<class T> inline bool chmax(T &a, T b){\r\n    if(a<b){\r\n        a = b;\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\ntemplate<class T> inline bool chmin(T &a, T b){\r\n    if(a>b){\r\n        a = b;\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\ntemplate<typename T> class segtree {\r\nprivate:\r\n    int n,sz,h;\r\n    vector<pair<T, int> > node;\r\n    vector<T> lazy;\r\n    void eval(int k) {\r\n        if(lazy[k]){\r\n            node[k].first += lazy[k];\r\n            if(k < n) {\r\n                lazy[k*2] += lazy[k], lazy[k*2+1] += lazy[k];\r\n            }\r\n            lazy[k] = 0;\r\n        }\r\n    }\r\n\r\npublic:\r\n    segtree(const vector<T>& v) : n(1), sz((int)v.size()), h(0) {\r\n        while(n < sz) n *= 2, h++;\r\n        node.resize(2*n, pair<T, int>(numeric_limits<T>::max(), sz));\r\n        lazy.resize(2*n, 0);\r\n        for(int i = 0; i < sz; i++){\r\n            node[i+n] = make_pair(v[i], i);\r\n        }\r\n        for(int i = n-1; i >= 1; i--){\r\n             node[i] = min(node[2*i], node[2*i+1]);\r\n        }\r\n    }\r\n    void range(int a, int b, T x, int k=1, int l=0, int r=-1){\r\n        if(r < 0) r = n;\r\n        eval(k);\r\n        if(b <= l || r <= a){\r\n            return;\r\n        }\r\n        if(a <= l && r <= b){\r\n            lazy[k] += x;\r\n            eval(k);\r\n        }else{\r\n            range(a, b, x, 2*k, l, (l+r)/2);\r\n            range(a, b, x, 2*k+1, (l+r)/2, r);\r\n            node[k] = min(node[2*k], node[2*k+1]);\r\n        }\r\n    }\r\n    pair<T, int> query(int a, int b) {\r\n        a += n, b += n - 1;\r\n        for(int i = h; i > 0; i--) eval(a >> i), eval(b >> i);\r\n        b++;\r\n        pair<T, int> res1 = make_pair(numeric_limits<T>::max(), sz);\r\n        pair<T, int> res2 = make_pair(numeric_limits<T>::max(), sz);\r\n        while(a < b) {\r\n            if(a & 1) eval(a), res1 = min(res1, node[a++]);\r\n            if(b & 1) eval(--b), res2 = min(res2, node[b]);\r\n            a >>= 1, b >>= 1;\r\n        }\r\n        return min(res1, res2);\r\n    }\r\n    void print() {\r\n        for(int i = 0; i < sz; i++){\r\n            pair<T,int> p;\r\n            p = query(i,i+1);\r\n            cout << \"st[\" << i << \"]: \" << p.first << \" \" << p.second << endl;\r\n        }\r\n    }\r\n};\r\nint a[100010];\r\nint main(){\r\n    cin.tie(0);\r\n    ios::sync_with_stdio(false);\r\n    INT(n);\r\n    vector<int> ppp(n+1);\r\n    segtree<int> seg(ppp);\r\n    int la = -1;\r\n    set<int> st;\r\n    set<int> pp;\r\n    rep(i,n){\r\n        INT(p,t);\r\n        p--;\r\n        chmax(la,p);\r\n        if(t==0){\r\n            a[p] = -1;\r\n            seg.range(p,n,-1);\r\n            pp.insert(p);\r\n        }else{\r\n            INT(k);\r\n            a[p] = k;\r\n            seg.range(p,n,+1);\r\n            st.insert(p);\r\n        }\r\n        if(a[la]==-1){\r\n            int K = seg.query(la,la+1).first;\r\n            dbg(K);\r\n            int ok = -1;\r\n            int ng = la;\r\n            while(ng-ok>1){\r\n                int mid = (ok+ng)/2;\r\n                if(seg.query(mid,la).first<=K-1){\r\n                    ok = mid;\r\n                }else{\r\n                    ng = mid;\r\n                }\r\n            }\r\n            if(a[ok+1]<=0||seg.query(ok+1,ok+2).first!=K){\r\n                cout << -1 << \"\\n\";\r\n            }else{\r\n                \r\n                cout << a[ok+1] << \"\\n\";\r\n                \r\n            }\r\n        }else{\r\n            cout << a[la] << \"\\n\";\r\n        }\r\n    }\r\n    return 0;\r\n}"
}