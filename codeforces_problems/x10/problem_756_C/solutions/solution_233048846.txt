{
    "id": 233048846,
    "contestId": 756,
    "creationTimeSeconds": 1700203249,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 756,
        "index": "C",
        "name": "Nikita and stack",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2200,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 756,
        "members": [
            {
                "handle": "lsj2009"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1485108900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 47,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 6860800,
    "source": "// LUOGU_RID: 135529836\n#include<bits/stdc++.h>\r\n//#define int long long\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define ld long double\r\n#define PII pair<int,int>\r\n#define INF 0x3f3f3f3f\r\n#define INFLL 0x3f3f3f3f3f3f3f3f\r\n#define chkmax(a,b) a=max(a,b)\r\n#define chkmin(a,b) a=min(a,b)\r\n#define rep(k,l,r) for(int k=l;k<=r;++k)\r\n#define per(k,r,l) for(int k=r;k>=l;--k)\r\n#define cl(f,x) memset(f,x,sizeof(f))\r\nusing namespace std;\r\nconst int N=1e5+5;\r\nint n,a[N];\r\nstruct SGT {\r\n\tstruct node {\r\n\t\tint l,r,tag,val;\r\n\t}; node tree[N<<2];\r\n\t#define ls(k) (k<<1)\r\n\t#define rs(k) (k<<1|1)\r\n\tvoid push_up(int k) {\r\n\t\ttree[k].val=max(tree[ls(k)].val,tree[rs(k)].val);\r\n\t}\r\n\tvoid build(int k,int l,int r) {\r\n\t\ttree[k]={l,r,0,0};\r\n\t\tif(l==r)\r\n\t\t\treturn;\r\n\t\tint mid=(l+r)>>1;\r\n\t\tbuild(ls(k),l,mid);\r\n\t\tbuild(rs(k),mid+1,r);\r\n\t\tpush_up(k);\r\n\t}\r\n\tvoid upd(int k,int val) {\r\n\t\ttree[k].val+=val; tree[k].tag+=val;\r\n\t}\r\n\tvoid push_down(int k) {\r\n\t\tint t=tree[k].tag;\r\n\t\tif(t!=0) {\r\n\t\t\tupd(ls(k),t); upd(rs(k),t);\r\n\t\t\ttree[k].tag=0;\r\n\t\t}\r\n\t}\r\n\tvoid update(int k,int ql,int qr,int val) {\r\n\t\tif(ql<=tree[k].l&&tree[k].r<=qr) {\r\n\t\t\tupd(k,val);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tpush_down(k);\r\n\t\tif(ql<=tree[ls(k)].r)\r\n\t\t\tupdate(ls(k),ql,qr,val);\r\n\t\tif(qr>=tree[rs(k)].l)\r\n\t\t\tupdate(rs(k),ql,qr,val);\r\n\t\tpush_up(k);\r\n\t}\r\n\tint query(int k) {\r\n\t\tif(tree[k].l==tree[k].r) \r\n\t\t\treturn tree[k].val>0? a[tree[k].l]:-1;\r\n\t\tpush_down(k);\r\n\t\tint val=tree[rs(k)].val;\r\n\t\tif(val>0)\r\n\t\t\treturn query(rs(k));\r\n\t\telse\r\n\t\t\treturn query(ls(k));\r\n\t}\r\n}; SGT T;\r\nvoid solve() {\r\n\tscanf(\"%d\",&n);\r\n\tT.build(1,1,n);\r\n\trep(i,1,n) {\r\n\t\tint p,op;\r\n\t\tscanf(\"%d%d\",&p,&op);\r\n\t\tif(!op)\r\n\t\t\tT.update(1,1,p,-1);\r\n\t\telse {\r\n\t\t\tscanf(\"%d\",&a[p]);\r\n\t\t\tT.update(1,1,p,1);\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",T.query(1));\r\n\t}\r\n}\r\nsigned main() {\r\n\tint testcase=1;\r\n\t//scanf(\"%d\",&testcase);\r\n\twhile(testcase--)\r\n\t\tsolve();\r\n\treturn 0;\r\n}"
}