{
    "id": 132661764,
    "contestId": 756,
    "creationTimeSeconds": 1634873895,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 756,
        "index": "C",
        "name": "Nikita and stack",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2200,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 756,
        "members": [
            {
                "handle": "DeMen100ns"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1485108900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 47,
    "timeConsumedMillis": 592,
    "memoryConsumedBytes": 9216000,
    "source": "/*\r\nAuthor : DeMen100ns (a.k.a Vo Khac Trieu self-destruct)\r\nSchool : VNU-HCM High school for the Gifted\r\n*/\r\n\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace __gnu_pbds;\r\n\r\nusing namespace std;\r\n\r\n/*Pragma*/\r\n#pragma GCC optimize(\"Ofast\")\r\n//#pragma GCC optimize(\"O3\")\r\n#pragma GCC target(\"avx,avx2,fma\")\r\n#pragma GCC optimization (\"unroll-loops\")\r\n//#pragma GCC optimize(\"Os\")\r\n\r\n/*Normal define*/\r\n#define int long long\r\n#define ll long long\r\n//#define endl '\\n'\r\n#define gcd __gcd\r\n#define ordered_set tree<ii, null_type,less<ii>, rb_tree_tag,tree_order_statistics_node_update>\r\n//#define p prev\r\n#define FastIO ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n#define count1 __builtin_popcountll\r\n\r\n/*For define*/\r\n#define For(i,a,b) for(ll i=a;i<=b;i++)\r\n#define foR(i,a,b) for(ll i=a;i>=b;i--)\r\n#define FOR(i,a,b) for(ll i=a;i<b;i++)\r\n#define forN(i,a,b,c) for(ll i=a;i<=b;i+=c)\r\n#define foRN(i,a,b,c) for(ll i=a;i>=b;i-=c)\r\n#define fora(i, a) for (auto i : a)\r\n\r\n/*push-pop-pair define*/\r\n#define pb push_back\r\n#define pob pop_back\r\n#define pf push_front\r\n#define pof pop_front\r\n#define x first\r\n#define y second\r\n\r\n/*Print define*/\r\n#define write(a, l, r) for (ll ik = l; ik <= r; ik++) cout << a[ik] << ' '; cout << endl\r\n#define writeln(a, l, r) for (ll ik = l; ik <= r; ik++) cout << a[ik] << endl\r\n\r\n/*Type-def*/\r\ntypedef unsigned long long  ull;\r\ntypedef vector<ll>      vi;\r\ntypedef pair<ll, ll>        ii;\r\ntypedef long double         ld;\r\n\r\n/* Calculation with MODULO*/\r\n\r\nll dec(ll x, ll y, int MOD) {return (x-y+MOD)%MOD;}\r\nll add(ll x, ll y, int MOD) {return (x + y) % MOD;}\r\nll mul(ll x, ll y, int MOD) {return ((x%MOD) * (y%MOD)) % MOD;}\r\nll bpow(ll x, ll y, int MOD) {ll res = 1; while (y) {if (y & 1) res = mul(res, x, MOD); x = mul(x, x, MOD); y >>= 1;} return res;}\r\nll ModInverse(ll x, int MOD) {return bpow(x, MOD - 2, MOD);}\r\nll Div(ll x, ll y, int MOD) {return mul(x, ModInverse(y, MOD), MOD);}\r\nll GetBit(ll val, ll num) {return ((val>>num) & 1LL);}\r\n\r\n/*Some simple checking and calculation function*/\r\nstring yn(bool k){if (k) return \"Yes\"; else return \"No\";}\r\n__int128 binpower(__int128 base, __int128 e, __int128 mod) {__int128 result = 1;base %= mod;while (e){if (e & 1)result = (__int128)result * base % mod;base = (__int128)base * base % mod;e >>= 1;    }return result;}\r\nbool check_composite(__int128 n, __int128 a, __int128 d, int s) {__int128 x = binpower(a, d, n); if (x == 1 or x == n - 1)return false;for (int r = 1; r < s; r++) {x = (__int128)x * x % n;if (x == n - 1)return false;}return true;};\r\nbool checkprime(__int128 n) {if (n < 2)return false;int r = 0;__int128 d = n - 1;while ((d & 1) == 0) {d >>= 1;r++;}for (int a : {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37}) {if (n == a)return true;if (check_composite(n, a, d, r))return false;}return true;}\r\nbool checksqr(ll k){return (trunc(sqrt(k))*trunc(sqrt(k))==k);}\r\nll lcm(ll a, ll b){return (a*b)/gcd(a,b);}\r\n//ll sum(ll n) {return n*(n+1)/2;}\r\n\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nconst int N = 1e5 + 105;\r\nint n, q;\r\nint a[N], pre[N], seg[4 * N], lazy[4 * N];\r\n\r\nvoid down(int id){\r\n    int t = lazy[id];\r\n    seg[id << 1] += t;\r\n    seg[id << 1 | 1] += t;\r\n    lazy[id << 1] += t;\r\n    lazy[id << 1 | 1] += t;\r\n    lazy[id] = 0;\r\n}\r\n\r\nvoid upd(int id, int l, int r, int u, int v, int val){\r\n    if (l > v || r < u) return;\r\n    if (l >= u && r <= v){\r\n        seg[id] += val;\r\n        lazy[id] += val;\r\n        return;\r\n    }\r\n    if (lazy[id]) down(id);\r\n    int mid = (l + r) >> 1;\r\n    upd(id << 1, l, mid, u, v, val);\r\n    upd(id << 1 | 1, mid + 1, r, u, v, val);\r\n    seg[id] = max(seg[id << 1], seg[id << 1 | 1]);\r\n}\r\n\r\nint get(int id = 1, int l = 1, int r = n){\r\n    //<=1 -> false\r\n    if (l == r){\r\n        if (seg[id] >= 1) return l;\r\n        else return n + 1;\r\n    }\r\n    if (lazy[id]) down(id);\r\n    int mid = (l + r) >> 1;\r\n    if (seg[id << 1] >= 1){\r\n        return get(id << 1, l, mid);\r\n    } else {\r\n        return get(id << 1 | 1, mid + 1, r);\r\n    }\r\n}\r\n\r\nint get_val(int id, int l, int r, int pos){\r\n    if (l == r && r == pos) return seg[id];\r\n    if (lazy[id]) down(id);\r\n    int mid = (l + r) >> 1;\r\n    if (mid >= pos) return get_val(id << 1, l, mid, pos);\r\n    else return get_val(id << 1 | 1, mid + 1, r, pos);\r\n}\r\n\r\nvoid solve(){\r\n    cin >> n;\r\n    For(i,1,n){\r\n        int p, v, type, ans;\r\n        cin >> p >> type;\r\n        p = n - p + 1;\r\n        if (type == 1){\r\n            cin >> v;\r\n            a[p] = v;\r\n            upd(1,1,n,p,n,1);\r\n        } else upd(1,1,n,p,n,-1);\r\n        int pos = get();\r\n        if (pos == n + 1) ans = -1;\r\n        else ans = a[pos];\r\n        cout << ans << endl;\r\n    }\r\n}\r\n\r\n//-1 -2 -1 0 1\r\nsigned main(){\r\n   // FastIO\r\n    int t = 1;// cin >> t;\r\n    while(t--){\r\n        solve();\r\n    }\r\n}\r\n/*\r\n//Delete define endl when interactive prolem\r\n\r\nINPUT :\r\n2\r\n5 4\r\n1000\r\n0000\r\n0110\r\n0000\r\n0001\r\n9 9\r\n001010001\r\n101110100\r\n000010011\r\n100000001\r\n101010101\r\n110001111\r\n000001111\r\n111100000\r\n000110000\r\n\r\nOUTPUT :\r\n\r\nIf it WA, check :\r\n- Special case (Usually, n=1)\r\n- WRONG FORMAT OUTPUT\r\n- Check reading\r\n- Change (ll) to (ull)\r\n- lleger Overflow (The number that bigger than 2^63-1)\r\n*/\r\n"
}