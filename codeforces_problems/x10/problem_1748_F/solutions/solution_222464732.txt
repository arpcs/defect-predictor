{
    "id": 222464732,
    "contestId": 1748,
    "creationTimeSeconds": 1694180504,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1748,
        "index": "F",
        "name": "Circular Xor Reversal",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 3000,
        "tags": [
            "bitmasks",
            "constructive algorithms"
        ]
    },
    "author": {
        "contestId": 1748,
        "members": [
            {
                "handle": "islingr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1668263700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 4198400,
    "source": "#include \"bits/stdc++.h\"\r\nusing namespace std;\r\n\r\n#define rep(i, a, b) for (auto i{a}; i < (b); ++i)\r\n#define per(i, a, b) for (auto i{b}; i-- > (a); )\r\n#define sz(x) (int)(x).size()\r\n#define all(x) (x).begin(), (x).end()\r\n#define rall(x) (x).rbegin(), (x).rend()\r\n\r\ntemplate <class T> bool uin(T& a, const T& b) { return a > b ? a = b, true : false; }\r\ntemplate <class T> bool uax(T& a, const T& b) { return a < b ? a = b, true : false; }\r\n\r\nusing ll = long long;\r\n\r\nvoid solve() {\r\n\tint n;\r\n\tcin >> n;\r\n\r\n\tvector<int> res;\r\n\tauto do_xor = [&](int i, int j) -> void {\r\n\t\tassert(i != j);\r\n\t\tif (i > j) j += n;\r\n\t\tfor (int k = i; k <= j - 1; ++k)\r\n\t\t\tres.push_back(k);\r\n\t\t// a[i] ^ a[i + 1], ..., a[j - 2] ^ a[j - 1], a[j - 1] ^ a[j], a[j]\r\n\t\tfor (int k = j - 2; k >= i; --k)\r\n\t\t\tres.push_back(k);\r\n\t\t// a[i] ^ a[j], a[i + 1] ^ a[j], ..., a[j - 2] ^ a[j], a[j - 1] ^ a[j], a[j]\r\n\t\tfor (int k = i + 1; k <= j - 2; ++k)\r\n\t\t\tres.push_back(k);\r\n\t\t// a[i] ^ a[j], a[i + 1] ^ a[i + 2], ..., a[j - 2] ^ a[j - 1], a[j - 1] ^ a[j], a[j]\r\n\t\tfor (int k = j - 1; k >= i + 1; --k)\r\n\t\t\tres.push_back(k);\r\n\t};\r\n\r\n\tauto do_swap = [&](int i, int j) -> void {\r\n\t\t// a[i] = a[i] ^ a[j]\r\n\t\tdo_xor(i, j);\r\n\t\t// a[j] = (a[i] ^ a[j]) ^ a[j] = a[i]\r\n\t\tdo_xor(j, i);\r\n\t\t// a[i] = (a[i] ^ a[j]) ^ a[i]\r\n\t\tdo_xor(i, j);\r\n\t};\r\n\r\n\tfor (int i = 0, j = n - 1; i < j; ++i, --j)\r\n\t\tdo_swap(i, j);\r\n\tfor (auto& x : res) x %= n;\r\n\r\n\tassert(sz(res) <= 250'000);\r\n\r\n\tcout << sz(res) << '\\n';\r\n\tfor (auto x : res)\r\n\t\tcout << x << ' ';\r\n\tcout << '\\n';\r\n}\r\n\r\nsigned main() {\r\n\tcin.tie(nullptr)->sync_with_stdio(false);\r\n\r\n\tsolve();\r\n}\r\n"
}