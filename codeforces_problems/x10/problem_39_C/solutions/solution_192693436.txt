{
    "id": 192693436,
    "contestId": 39,
    "creationTimeSeconds": 1675836333,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 39,
        "index": "C",
        "name": "Moon Craters",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "dp",
            "sortings"
        ]
    },
    "author": {
        "contestId": 39,
        "members": [
            {
                "handle": "Archaeopteryx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1287904200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 45,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 194048000,
    "source": "#include <cstdio>\r\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n#define rep(i,n) for (int i=0;i<n;i++)\nconst int N=4010;\nint n,c,r,x[N],y[N],d[N],g[N][N],f[N][N],s[N][N],t;\nvector<int> b[N];\nint dp(int l,int r){\nif (l>r) return 0;\nif (f[l][r]!=-1) return f[l][r];\nf[l][r]=dp(l+1,r);\nfor (int k:b[l]) if (y[k]<r&&dp(l,y[k])+dp(y[k],r)>f[l][r])\nf[l][r]=f[l][y[k]]+f[y[k]][r],s[l][r]=y[k];\nf[l][r]+=!!g[l][r];\nreturn f[l][r];\n}\nvoid dfs(int l,int r) {\nif (l>r) return;\nif (s[l][r]) dfs(l,s[l][r]),dfs(s[l][r],r);else dfs(l+1,r);\nif (g[l][r]) printf(\"%d \",g[l][r]);\n}\nint main() {\nscanf(\"%d\",&n);\nrep(i,n) scanf(\"%d%d\",&c,&r),x[i]=c-r,y[i]=c+r,d[i]=x[i],d[i+n]=y[i];\nsort(d,d+n+n);\nt=unique(d,d+n+n)-d;\nrep(i,n) {\nx[i]=upper_bound(d,d+t,x[i])-d;y[i]=upper_bound(d,d+t,y[i])-d;\nb[x[i]].push_back(i);g[x[i]][y[i]]=i+1;\n}\nmemset(f,-1,sizeof(f));\nprintf(\"%d\\n\",dp(1,t));\ndfs(1,t);\n}"
}