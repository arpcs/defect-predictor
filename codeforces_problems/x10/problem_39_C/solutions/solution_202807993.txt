{
    "id": 202807993,
    "contestId": 39,
    "creationTimeSeconds": 1681991629,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 39,
        "index": "C",
        "name": "Moon Craters",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "dp",
            "sortings"
        ]
    },
    "author": {
        "contestId": 39,
        "members": [
            {
                "handle": "jiangly"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1287904200
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing i64 = long long;\r\n\r\nint main() {\r\n    std::ios::sync_with_stdio(false);\r\n    std::cin.tie(nullptr);\r\n    \r\n    int n;\r\n    std::cin >> n;\r\n    \r\n    std::vector<int> c(n), r(n);\r\n    for (int i = 0; i < n; i++) {\r\n        std::cin >> c[i] >> r[i];\r\n    }\r\n    \r\n    std::vector<int> ord(n);\r\n    std::iota(ord.begin(), ord.end(), 0);\r\n    std::sort(ord.begin(), ord.end(), [&](int i, int j) {\r\n        return r[i] < r[j];\r\n    });\r\n    \r\n    std::vector<int> dp(n);\r\n    std::vector<std::vector<int>> sub(n);\r\n    \r\n    std::vector<int> g(n), lst(n);\r\n    \r\n    for (auto i : ord) {\r\n        std::vector<std::tuple<int, int, int>> e;\r\n        for (auto j : ord) {\r\n            if (c[j] - r[j] >= c[i] - r[i] && c[j] + r[j] <= c[i] + r[i]) {\r\n                e.emplace_back(c[j] - r[j], 1, j);\r\n                e.emplace_back(c[j] + r[j], -1, j);\r\n            }\r\n        }\r\n        \r\n        std::sort(e.begin(), e.end());\r\n        \r\n        int v = 0;\r\n        int u = -1;\r\n        for (auto [x, t, j] : e) {\r\n            if (t == 1) {\r\n                g[j] = v + dp[j];\r\n                lst[j] = u;\r\n            } else if (g[j] > v) {\r\n                v = g[j];\r\n                u = j;\r\n            }\r\n        }\r\n        dp[i] = v + 1;\r\n        while (u != -1) {\r\n            sub[i].push_back(u);\r\n            u = lst[u];\r\n        }\r\n    }\r\n    \r\n    std::vector<std::tuple<int, int, int>> e;\r\n    for (auto j : ord) {\r\n        e.emplace_back(c[j] - r[j], 1, j);\r\n        e.emplace_back(c[j] + r[j], -1, j);\r\n    }\r\n    \r\n    std::sort(e.begin(), e.end());\r\n    \r\n    int v = 0;\r\n    int u = -1;\r\n    for (auto [x, t, j] : e) {\r\n        if (t == 1) {\r\n            g[j] = v + dp[j];\r\n            lst[j] = u;\r\n        } else if (g[j] > v) {\r\n            v = g[j];\r\n            u = j;\r\n        }\r\n    }\r\n    int ans = v;\r\n    std::cout << ans << \"\\n\";\r\n    \r\n    std::queue<int> q;\r\n    while (u != -1) {\r\n        q.push(u);\r\n        u = lst[u];\r\n    }\r\n    while (!q.empty()) {\r\n        int x = q.front();\r\n        q.pop();\r\n        std::cout << x + 1 << \" \";\r\n        \r\n        for (auto y : sub[x]) {\r\n            q.push(y);\r\n        }\r\n    }\r\n    std::cout << \"\\n\";\r\n    \r\n    return 0;\r\n}"
}