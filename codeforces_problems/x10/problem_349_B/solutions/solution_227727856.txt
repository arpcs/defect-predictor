{
    "id": 227727856,
    "contestId": 349,
    "creationTimeSeconds": 1697051630,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 349,
        "index": "B",
        "name": "Color the Fence",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1700,
        "tags": [
            "data structures",
            "dp",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 349,
        "members": [
            {
                "handle": "12312_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1380295800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 35,
    "timeConsumedMillis": 156,
    "memoryConsumedBytes": 0,
    "source": "/* -> Authored By: \u0410\u0445\u043c\u0430\u0434 */\r\n#include \"bits/stdc++.h\"\r\nusing namespace std;\r\ntypedef long long ll;\r\n#define F first\r\n#define S second\r\n#define endl '\\n'\r\n#define pb emplace_back\r\n#define sqrt sqrtl\r\n#define clr(A, Val) memset(A, Val, sizeof(A));\r\n#define what_is(x) cerr << \"->\" << (#x) << \" = \" << x << endl\r\nconst int mod = 1e9 + 7, mod2 = 1e9 + 9, OO = 0x3f3f3f3f;\r\nconst long long lOO = 0x3f3f3f3f3f3f3f3f;\r\nint add(ll a, ll b) { return (a + b) % mod; }\r\nint mul(ll a, ll b) { return 1LL * a * b % mod; }\r\nlong long intlog(ll base, ll x) { return (log(x) / log(base)); }\r\nlong long Ceil(ll a, ll b) { return (a + b - 1) / b; }\r\nlong long calsum(long long st, long long ed) {\r\n  if (st > ed) swap(st, ed);\r\n  return (long long)((ed - st + 1) * (ed + st)) / 2;\r\n}\r\ntemplate <typename T>\r\nint32_t size_i(T &container) {\r\n  return static_cast<int32_t>(container.size());\r\n}\r\n// MIST!?!?!?!?!?\r\nstruct custom_hash {\r\n  static uint64_t splitmix64(uint64_t x) {\r\n    x += 0x9e3779b97f4a7c15;\r\n    x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n    x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n    return x ^ (x >> 31);\r\n  }\r\n\r\n  size_t operator()(uint64_t x) const {\r\n    static const uint64_t FIXED_RANDOM =\r\n        chrono::steady_clock::now().time_since_epoch().count();\r\n    return splitmix64(x + FIXED_RANDOM);\r\n  }\r\n};\r\n//->  U Sure?!\r\ntemplate <typename T1, typename T2>\r\nusing safe_map = unordered_map<T1, T2, custom_hash>;\r\n\r\ntemplate <typename T>\r\nistream &operator>>(istream &istream, vector<T> &v) {\r\n  for (auto &it : v) cin >> it;\r\n  return istream;\r\n}\r\ntemplate <typename T>\r\nostream &operator<<(ostream &ostream, vector<T> &C) {\r\n  for (auto &it : C) cout << it << \" \";\r\n  return ostream;\r\n}\r\n// Think again?!\r\nvoid AC() {\r\n  int ____ = 0;\r\n#ifndef ONLINE_JUDGE\r\n  ____ = 1;\r\n#endif\r\n  if (____ == 0) {\r\n    cin.tie(0)->sync_with_stdio(0);\r\n  }\r\n}\r\nll power(ll b, ll p) {\r\n  if (p == 0) return 1;\r\n  ll temp = power(b, p / 2);\r\n  temp = temp * temp;\r\n  if (p & 1) temp = temp * b;\r\n  return temp;\r\n}\r\n//    OK?!\r\n// SPEC??!!!\r\nconst int N = 3e5 + 10, BASE = 26, BASE2 = 37;\r\n\r\nvoid BURN() {\r\n  ll V;\r\n  cin >> V;\r\n  ll W[11];\r\n  for (ll i = 0; i <= 8; ++i) cin >> W[i];\r\n  ll mn = *min_element(W, W + 9);\r\n  ll mx = V / mn;\r\n  if (mx == 0) {\r\n    cout << -1 << endl;\r\n    return;\r\n  }\r\n  while (mx--) {\r\n    // cout << V << endl;\r\n    for (ll i = 8; i >= 0; --i) {\r\n      if (V - (mx * mn) - W[i] >= 0) {\r\n        cout << i + 1;\r\n        V -= W[i];\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nint main() {\r\n  AC();\r\n  ll TC = 1;\r\n  // cin >> TC;\r\n  cout << fixed << setprecision(10);\r\n  for (ll TCS = 1; TCS <= TC; ++TCS) {\r\n    // cout << \"Case #\" << TCS << \": \";\r\n    BURN();\r\n  }\r\n  return 0;\r\n}"
}