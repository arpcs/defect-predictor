{
    "id": 229605981,
    "contestId": 1560,
    "creationTimeSeconds": 1698170350,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1560,
        "index": "B",
        "name": "Who's Opposite?",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "math"
        ]
    },
    "author": {
        "contestId": 1560,
        "members": [
            {
                "handle": "RoroSin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1629297300
    },
    "programmingLanguage": "GNU C11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <stdio.h>\r\n\r\n\r\nint main() {\r\n    int n_sets;\r\n    scanf(\"%d\", &n_sets);\r\n\r\n\r\n    for (int set_number = 1; set_number <= n_sets; set_number++) {\r\n        int place, opposite_place, another_place;\r\n        scanf(\"%d %d %d\", &place, &opposite_place, &another_place);\r\n\r\n        int circle_half = opposite_place > place ? opposite_place - place : place - opposite_place;\r\n        int place_amount = circle_half * 2 + 2;\r\n        int another_opposite_place = another_place + circle_half;\r\n        if (another_opposite_place > place_amount || place > place_amount || opposite_place > place_amount || another_opposite_place == place || another_opposite_place == opposite_place)\r\n            another_opposite_place = -1;\r\n\r\n        printf(\"%d\\n\", another_opposite_place);\r\n    }\r\n    return 0;\r\n}"
}