{
    "id": 192858258,
    "contestId": 193,
    "creationTimeSeconds": 1675946111,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 193,
        "index": "A",
        "name": "Cutting Figure",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 193,
        "members": [
            {
                "handle": "Suman_Mandol"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1338737400
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 65,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\nconst int  mod = 1000000007; \r\n \r\n/*=================================Debug==================================*/\r\ntemplate <typename A, typename B> ostream& operator<<(ostream& os, const pair<A, B>& p) { return os << '(' << p.first << \", \" << p.second << ')'; }\r\ntemplate <typename T_container, typename T = typename enable_if<!is_same<T_container, string>::value, typename T_container::value_type>::type> ostream& operator<<(ostream& os, const T_container& v) { os << '{'; string sep; for (const T& x : v) os << sep << x, sep = \", \"; return os << '}'; }\r\nvoid dbg_out() { cerr << endl; }\r\ntemplate <typename Head, typename... Tail> void dbg_out(Head H, Tail... T) { cerr << \" \" << H; dbg_out(T...); }\r\n \r\n//#define MY\r\n#ifdef MY\r\n#define debug(args...) cerr << \"(\" << #args << \"):\", dbg_out(args)\r\n#else\r\n#define debug(args...)\r\n#endif\r\nchar grid[60][60];\r\nint cnt =0;\r\nint dx[]={0, 1,0,-1};\r\nint dy[]={1,0,-1,0};\r\nbool vis[60][60];\r\nint n, m ; \r\nbool valid(int x,int y)\r\n{\r\n    if(x<1 or x>n or y<1 or y>m)return 0;\r\n    return 1;\r\n}\r\nvoid dfs(int x, int  y, int a, int b)\r\n{\r\n    vis[x][y]=1;\r\n    if(x!=a or  y!=b)\r\n        cnt++;\r\n    for(int k=0;k<4;k++)\r\n    {\r\n        int i=x+dx[k];\r\n        int j= y+dy[k];\r\n        if(!valid(i, j))continue;\r\n        if(vis[i][j] or grid[i][j]=='.')continue;\r\n        if(i==a and j==b){\r\n            continue;\r\n        }\r\n        //debug(i,j);\r\n        dfs(i , j, a, b);\r\n    }\r\n}\r\nint main() {\r\n    ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\r\n    #ifndef ONLINE_JUDGE\r\n        freopen(\"input.txt\", \"r\", stdin);\r\n        freopen(\"output.txt\", \"w\", stdout);\r\n    #endif\r\n    cin>>n>>m; \r\n    int total_painted =0;\r\n    int x, y, x1, y1, f=1; \r\n    for(int i=1;i<=n;i++)for(int j =1; j<=m ;j++){\r\n        cin>>grid[i][j];\r\n        if(grid[i][j]=='#'){\r\n            total_painted++;\r\n            x=i;\r\n            y=j;\r\n            if(f){\r\n                x1=i,y1=j;\r\n                f=0;\r\n            }\r\n        }\r\n    }\r\n    if(total_painted<=2){\r\n        cout<<\"-1\"<<endl;\r\n        return 0; \r\n    }\r\n    debug(total_painted);\r\n    //for(int i=1;i<=n;i++)for(int j=1; j<=m;j++)cout<<grid[i][j]<<\" \\n\"[j==m];\r\n    bool ok =0; \r\n    for(int i=1; i<=n;i++)\r\n    {\r\n        for(int j =1; j<=m;j++)\r\n        {\r\n            cnt=0;\r\n            memset(vis, 0,sizeof vis);\r\n            if(grid[i][j]=='.')continue;\r\n            if(i==x and j==y)dfs(x1,y1, i,j);\r\n            else \r\n            dfs(x,y,i, j);\r\n            cnt++;\r\n            debug(cnt, i,j);\r\n            if(cnt!=total_painted)ok=1;\r\n        }\r\n    }\r\n    if(ok)cout<<1<<endl; \r\n    else cout<<2<<endl;\r\n    return 0;\r\n}"
}