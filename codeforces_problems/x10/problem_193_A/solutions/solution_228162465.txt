{
    "id": 228162465,
    "contestId": 193,
    "creationTimeSeconds": 1697283862,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 193,
        "index": "A",
        "name": "Cutting Figure",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 193,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1338737400
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 65,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 1740800,
    "source": "#include <bits/stdc++.h>\n#define ll long long\n#define pii pair<int,int>\n#define pll pair<ll,ll>\n#define vi vector<int>\n#define vl vector<ll>\n#define mp make_pair\n#define pb push_back\nusing namespace std;\nvi G[100000];\nvi low, tin;\nvector<bool> vis;\nint timer = 0;\nset<int> cutpoint;\nvoid dfs(int v, int p = -1){\n\tvis[v] = true;\n\tlow[v] = tin[v] = timer++;\n\tint children = 0;\n\tfor(int to : G[v]){\n\t\tif(to == p)\tcontinue;\n\t\tif(vis[to])\n\t\t\tlow[v] = min(low[v], tin[to]);\n\t\telse{\n\t\t\tdfs(to, v);\n\t\t\tlow[v] = min(low[v],low[to]);\n\t\t\tif(low[to] >= tin[v] && p != -1)\n\t\t\t\tcutpoint.insert(v);\n\t\t}\n\t}\n\tif(p == -1 && children > 1)\n\t\tcutpoint.insert(v);\n}\nint main(){\n\tint n, m;\n\tcin>>n>>m;\n\tchar mat[n][m];\n\tmap<pii, int> id;\n\tvector<pii> comp;\n\tint cnt = 0;\n\tfor(int i = 0; i < n; i++){\n\t\tfor(int j = 0; j < m; j++){\n\t\t\tcin>>mat[i][j];\n\t\t\tif(mat[i][j] == '#'){\n\t\t\t\tcomp.pb(mp(i,j));\n\t\t\t\tid[mp(i,j)] = cnt;\n\t\t\t\tcnt++;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 0; i < comp.size(); i++){\n\t\tfor(int j = i + 1; j < comp.size(); j++){\n\t\t\tif(comp[i].first == comp[j].first && abs(comp[i].second - comp[j].second)==1){\n\t\t\t\tG[i].pb(j);\n\t\t\t\tG[j].pb(i);\n\t\t\t}\n\t\t\tif(comp[i].second == comp[j].second && abs(comp[i].first - comp[j].first) == 1)\n\t\t\t{\n\t\t\t\tG[i].pb(j);\n\t\t\t\tG[j].pb(i);\n\t\t\t}\n\t\t}\n\t}\n\tvis.assign(n * m, false);\n\tlow.assign(n*m, -1);\n\ttin.assign(n*m, -1);\n\tfor(int i = 0; i < comp.size(); i++){\n\t\tif(!vis[i]){\n\t\t\tdfs(i);\n\t\t}\n\t}\n\tif(comp.size() == 1 || comp.size()==2)\n\t\tcout<<-1<<endl;\n\telse if(cutpoint.size() == 0 && comp.size()!=3)\n\t\tcout<<2<<endl;\n\telse\n\t\tcout<<1<<endl;\n\t//cout<<cutpoint.size()<<endl;\n}\n\t\t  \t\t\t \t\t\t\t\t  \t\t\t   \t\t\t\t\t \t \t"
}