{
    "id": 216762436,
    "contestId": 193,
    "creationTimeSeconds": 1690919592,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 193,
        "index": "A",
        "name": "Cutting Figure",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 193,
        "members": [
            {
                "handle": "bkifhr10"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1338737400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 65,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 307200,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\nclass Solution {\npublic:\nvoid dfs(int i,int j,vector<string>&grid,vector<vector<int>>&vis,int n,int m){\n   \n    if(i<0 || j<0 || i>=n || j>=m)return;\n    if(vis[i][j]==1)return;\n    if(grid[i][j]=='.')return;\n    vis[i][j]=1;\n\n    dfs(i-1,j,grid,vis,n,m);\n    dfs(i+1,j,grid,vis,n,m);\n    dfs(i,j-1,grid,vis,n,m);\n    dfs(i,j+1,grid,vis,n,m);\n}\n    int count_islands(vector<string>&grid,int n,int m){\n        int cnt=0;\n     \n     \n        vector<vector<int>>vis(n,vector<int>(m,0));\n        for(int i=0;i<n;i++){\n            for(int j=0;j<m;j++){\n                if(grid[i][j]=='#' && !vis[i][j]){\n                    cnt++;\n                    dfs(i,j,grid,vis,n,m);\n                }\n            }\n        }\n        return cnt;\n    }\n    int minDays(int n,int m,vector<string>&grid) {\n        int cnt=count_islands(grid,n,m);\n        int k=0;\n       // cout<<cnt<<endl;\n\n        if(cnt>=2)return 0;\n\n         \n\n        for(int i=0;i<n;i++){\n            for(int j=0;j<m;j++){\n                if(grid[i][j]=='#'){\n                   k++;\n                    grid[i][j]='.';\n                    int cnt2=count_islands(grid,n,m);\n                    if(cnt2>=2)return 1;\n                    grid[i][j]='#';\n                }\n            }\n        }\n        \n        if(k<=2)return -1;\n\n        return 2;//else\n    }\n};\n\nint main(){\n    int n,m;\n    cin>>n>>m;\n vector<string>g(n+1);\n    for(int i=0;i<n;i++){\n      cin>>g[i];\n    }\n    \n    \n    Solution obj;\n    int ans;\n   \n     ans= obj.minDays(n,m,g);\n   \n    \n    \n    cout<<ans<<endl;\n    \n    // for(int i=0;i<n;i++){\n    //     for(int j=0;j<m;j++){\n    //         cout<<g[i][j];\n    //     }\n    //     cout<<endl;\n    // }\n    \n    return 0;\n}\n\t \t \t \t  \t\t\t\t\t\t\t \t\t\t \t\t   \t\t \t\t"
}