{
    "id": 218141326,
    "contestId": 193,
    "creationTimeSeconds": 1691661699,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 193,
        "index": "A",
        "name": "Cutting Figure",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 193,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1338737400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n#define int long long\n\nvector<string> sheet;\nvector<vector<int>>in, low;\nint n,m, idx=0;\nbool articulationPoint(int i, int j, int pi=-1, int pj=-1)\n{\n    in[i][j]=low[i][j]=idx++;\n\n    int children=0;\n    for(int k=-1; k<=1; k++)\n        for(int l=-1; l<=1; l++)\n            if((k||l)&&(!k||!l))\n            {\n                int ni= i+k;\n                int nj= j+l;\n                if(ni>=0&& ni<n && nj>=0 && nj<m && sheet[ni][nj]=='#')\n                {\n                    if(~in[ni][nj] && (ni!= pi || nj!=pi))\n                        low[i][j]= min(low[i][j], in[ni][nj]);\n                    else if(in[ni][nj]==-1)\n                    {\n                        children ++;\n                        if(articulationPoint(ni, nj, i, j))\n                            return true;\n                        if(pi!=-1 && low[ni][nj]>=in[ni][nj])\n                            low[i][j]=min(low[i][j], low[ni][nj]);\n                    }\n                }\n            }\n\n    if(pi==-1 && children >1)\n        return true;\n\n    return false;\n}\n\nint32_t main()\n{\n    cin>>n>>m;\n\n    for(int i=0; i<n; i++)\n        cin>>sheet[i];\n\n    in.assign(n, vector<int>(m, -1));\n    low.assign(n, vector<int>(m));\n\n    int r,c,cnt=0;\n    for(int i=0; i<n; i++)\n        for(int j=0; j<m; j++)\n            if(sheet[i][j]=='#')\n                r=i, c=j, cnt++;\n\n                if(cnt<=2)\n                cout<<-1<<endl;\n                else if(articulationPoint(r,c))\n                        cout<<1<<endl;\n                        else\n                            cout<<2<<endl;\n\n                            return 0;\n                        }\n\n\t  \t\t     \t \t \t  \t \t    \t   \t"
}