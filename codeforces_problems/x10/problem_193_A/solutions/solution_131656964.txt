{
    "id": 131656964,
    "contestId": 193,
    "creationTimeSeconds": 1634050660,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 193,
        "index": "A",
        "name": "Cutting Figure",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 193,
        "members": [
            {
                "handle": "c_for_chnge"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1338737400
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 60,
    "memoryConsumedBytes": 4096000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long int\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC target(\"avx,avx2,fma\")\r\n\r\n#define all(x) (x).begin(), (x).end()\r\n#define int long long int\r\n#define endl \"\\n\"\r\n#define PB push_back\r\n#define F first\r\n#define S second\r\n#define fastio               \\\r\n    ios::sync_with_stdio(0); \\\r\n    cin.tie(0);              \\\r\n    cout.tie(0);\r\n\r\nvoid __print(int x)\r\n{\r\n    cerr << x;\r\n}\r\nvoid __print(unsigned x) { cerr << x; }\r\nvoid __print(unsigned long x) { cerr << x; }\r\nvoid __print(unsigned long long x) { cerr << x; }\r\nvoid __print(float x) { cerr << x; }\r\nvoid __print(double x) { cerr << x; }\r\nvoid __print(long double x) { cerr << x; }\r\nvoid __print(char x) { cerr << '\\'' << x << '\\''; }\r\nvoid __print(const char *x) { cerr << '\\\"' << x << '\\\"'; }\r\nvoid __print(const string &x) { cerr << '\\\"' << x << '\\\"'; }\r\nvoid __print(bool x) { cerr << (x ? \"true\" : \"false\"); }\r\n\r\ntemplate <typename Th, typename V>\r\nvoid __print(const pair<Th, V> &x)\r\n{\r\n    cerr << '{';\r\n    __print(x.first);\r\n    cerr << ',';\r\n    __print(x.second);\r\n    cerr << '}';\r\n}\r\ntemplate <typename Th>\r\nvoid __print(const Th &x)\r\n{\r\n    int f = 0;\r\n    cerr << '{';\r\n    for (auto &i : x)\r\n        cerr << (f++ ? \",\" : \"\"), __print(i);\r\n    cerr << \"}\";\r\n}\r\nvoid _print() { cerr << \"]\\n\"; }\r\ntemplate <typename Th, typename... V>\r\nvoid _print(Th t, V... v)\r\n{\r\n    __print(t);\r\n    if (sizeof...(v))\r\n        cerr << \", \";\r\n    _print(v...);\r\n}\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x...)               \\\r\n    cerr << \"[\" << #x << \"] = [\"; \\\r\n    _print(x)\r\n#else\r\n#define debug(x...)\r\n#endif\r\nconst int cc = 55;\r\nvector<vector<int>> a;\r\nvector<vector<int>> tin;\r\nvector<vector<int>> used;\r\nvector<vector<int>> low;\r\n\r\nint n, m;\r\nint timer = 0;\r\n\r\nint valid(int i, int j)\r\n{\r\n    if (i >= 0 && i < n && j >= 0 && j < m)\r\n        return 1;\r\n    return 0;\r\n}\r\n\r\nint dfs2(int i, int j, int pi, int pj)\r\n{\r\n    used[i][j] = 1;\r\n    tin[i][j] = timer++;\r\n    low[i][j] = tin[i][j];\r\n\r\n    int child = 0;\r\n\r\n    vector<pair<int, int>> dir{{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\r\n    for (auto it : dir)\r\n    {\r\n        int ni = i + it.first;\r\n        int nj = j + it.second;\r\n\r\n        if (pi == ni && pj == nj)\r\n            continue;\r\n\r\n        if (valid(ni, nj))\r\n        {\r\n            if (a[ni][nj] == 1)\r\n            {\r\n                if (used[ni][nj] == 0)\r\n                {\r\n                    if (pi == -1)\r\n                        child++;\r\n\r\n                    int ret = dfs2(ni, nj, i, j);\r\n                    if (ret)\r\n                        return ret;\r\n\r\n                    low[i][j] = min(low[i][j], low[ni][nj]);\r\n                    if (low[ni][nj] >= tin[i][j])\r\n                    {\r\n                        if (pi != -1)\r\n                            return 1;\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    low[i][j] = min(low[i][j], tin[ni][nj]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (pi == -1 && child > 1)\r\n        return 1;\r\n\r\n    return 0;\r\n}\r\n\r\nvoid dfs(int i, int j)\r\n{\r\n    used[i][j] = 1;\r\n\r\n    vector<pair<int, int>> dir{{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\r\n    for (auto it : dir)\r\n    {\r\n        int ni = i + it.first;\r\n        int nj = j + it.second;\r\n        if (valid(ni, nj))\r\n        {\r\n            if (a[ni][nj] == 1 && used[ni][nj] == 0)\r\n            {\r\n                dfs(ni, nj);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvoid solve()\r\n{\r\n\r\n    cin >> n >> m;\r\n    a.resize(n);\r\n    tin.resize(n);\r\n    used.resize(n);\r\n    low.resize(n);\r\n\r\n    int i, j, k, l;\r\n\r\n    for (i = 0; i < n; i++)\r\n    {\r\n        a[i].resize(m);\r\n        tin[i].resize(m);\r\n        used[i].resize(m);\r\n        low[i].resize(m);\r\n    }\r\n\r\n    for (i = 0; i < n; i++)\r\n    {\r\n        for (j = 0; j < m; j++)\r\n        {\r\n            char x;\r\n            cin >> x;\r\n            used[i][j] = 0;\r\n            if (x == '#')\r\n            {\r\n                a[i][j] = 1;\r\n            }\r\n            else\r\n            {\r\n                a[i][j] = 0;\r\n            }\r\n        }\r\n    }\r\n    debug(a);\r\n\r\n    int cnt = 0;\r\n    for (i = 0; i < n; i++)\r\n    {\r\n        for (j = 0; j < m; j++)\r\n        {\r\n            if (used[i][j] == 0 && a[i][j] == 1)\r\n            {\r\n                dfs(i, j);\r\n                cnt++;\r\n            }\r\n        }\r\n    }\r\n    debug(cnt);\r\n    if (cnt == 1)\r\n    {\r\n\r\n        // check if an articulation point exists or not , if yes\r\n        // return 1 else return 2\r\n        for (i = 0; i < n; i++)\r\n            for (j = 0; j < m; j++)\r\n                used[i][j] = 0;\r\n        int isap = 0;\r\n\r\n        for (i = 0; i < n; i++)\r\n        {\r\n            for (j = 0; j < m; j++)\r\n            {\r\n                if (used[i][j] == 0 && a[i][j] == 1)\r\n                {\r\n                    isap = dfs2(i, j, -1, -1);\r\n                }\r\n            }\r\n        }\r\n        debug(isap);\r\n        debug(tin);\r\n        debug(low);\r\n\r\n        if (isap)\r\n        {\r\n            cout << \"1\" << endl;\r\n        }\r\n        else\r\n        {\r\n            cout << \"2\" << endl;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        cout << \"0\" << endl;\r\n    }\r\n}\r\nsigned main()\r\n{\r\n    solve();\r\n}\r\n"
}