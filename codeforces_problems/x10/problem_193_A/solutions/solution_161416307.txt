{
    "id": 161416307,
    "contestId": 193,
    "creationTimeSeconds": 1655832994,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 193,
        "index": "A",
        "name": "Cutting Figure",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 193,
        "members": [
            {
                "handle": "Dinesh_Chintu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1338737400
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 65,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 614400,
    "source": "#include <iostream>\r\nusing namespace std;\r\n#include<bits/stdc++.h>\r\ntypedef long long ll;\r\n#define pb push_back \r\n#define ff first\r\n#define ss second\r\n#define ii pair<int,int> \r\n#define vii vector<ii> \r\n#define vi vector<int>\r\n#define endl '\\n'\r\n    //////////////////////////\r\n const int M=1e9+7;\r\n    long long mod(long long x){\r\n        return ((x%M + M)%M);\r\n    }\r\n    long long add(long long a, long long b){\r\n        return mod(mod(a)+mod(b));\r\n    }\r\n    long long mul(long long a, long long b){\r\n        return mod(mod(a)*mod(b));\r\n    }\r\n    int timer,n,m;\r\n    int dx[4]={1,0,-1,0};\r\n    int dy[4]={0,-1,0,1};\r\n    bool isvalid(int i, int j, vector<vector<bool>>&vis,vector<vector<char>>&adj){\r\n        if(i<0 or j<0 or i>=n or j>=m) return 0;\r\n        if(adj[i][j]=='.') return 0;\r\n        return 1;\r\n    }\r\n    set<pair<int,int>> s;\r\n    int nodes=1;\r\n    void dfs(int x,int y, int px, int py, vector<vector<char>>&adj,vector<vector<bool>> &vis, vector<vector<int>> &in,    vector<vector<int>> &low){\r\n        vis[x][y]=1;\r\n        in[x][y]=low[x][y]=timer++;\r\n        int cnt=0;\r\n        for(int i=0;i<4;i++){\r\n            int nx=dx[i]+x;\r\n            int ny=dy[i]+y;\r\n            if(isvalid(nx,ny,vis,adj)){\r\n                if(nx==px and ny==py) continue;\r\n                if(vis[nx][ny]){\r\n                    low[x][y]=min(low[x][y],in[nx][ny]);\r\n                }\r\n                else{\r\n                    dfs(nx,ny,x,y,adj,vis,in,low);\r\n                    nodes++;\r\n                    if(low[nx][ny]>=in[x][y] and (px!=-1 and py!=-1)) s.insert({x,y});\r\n                    cnt++;\r\n                    low[x][y]=min(low[x][y],low[nx][ny]);\r\n                }\r\n            }\r\n        }\r\n        if((px==-1 and py==-1) and cnt>1) s.insert({x,y});\r\n    }\r\nvoid solve(){\r\n    cin>>n>>m;\r\n    vector<vector<char>> adj(n,vector<char>(m));\r\n    vector<vector<bool>> vis(n,vector<bool>(m,0));\r\n    vector<vector<int>> in(n,vector<int>(m));\r\n        vector<vector<int>> low(n,vector<int>(m));\r\n    for(int i=0;i<n;i++){\r\n        for(int j=0;j<m;j++) cin>>adj[i][j];\r\n    }\r\n    for(int i=0;i<n;i++){\r\n        for(int j=0;j<m;j++){\r\n            if(adj[i][j]=='#' and vis[i][j]==0) dfs(i,j,-1,-1,adj,vis,in,low);\r\n        }\r\n    }\r\n    if(nodes<3) cout<<-1<<endl;\r\n    else if(s.size()) cout<<1<<endl;\r\n    else cout<<2<<endl;\r\n    \r\n}\r\n    \r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);   \r\n    int t=1;\r\n    // cin>>t;\r\n    while(t--){\r\n    solve();\r\n    //////////////////////////\r\n    // priority_queue<int> p;\r\n    // priority_queue<int,vector<int> ,greater<int>> p;\r\n    //  unordered_map<int, int> m;\r\n    // map<int,int> m;\r\n    /////////////////////////\r\n\r\n    }\r\n    \treturn 0;\r\n\r\n}"
}