{
    "id": 220789403,
    "contestId": 1423,
    "creationTimeSeconds": 1693170859,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1423,
        "index": "L",
        "name": "Light switches",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "meet-in-the-middle"
        ]
    },
    "author": {
        "contestId": 1423,
        "members": [
            {
                "handle": "MahmoudBassem"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601903100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#pragma GCC optimize (\"O3\")\r\n#pragma GCC target (\"sse4\")\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n\r\n#ifdef LOCAL\r\n#define dbg(...) debug(#__VA_ARGS__, __VA_ARGS__);\r\n#else\r\n#define dbg(...) 17;\r\n#endif\r\n\r\ntemplate<typename T, typename S> ostream& operator << (ostream &os, const pair<T, S> &p) { return os << \"(\" << p.first << \", \" << p.second << \")\"; }\r\ntemplate<typename C, typename T = decay<decltype(*begin(declval<C>()))>, typename enable_if<!is_same<C, string>::value>::type* = nullptr>\r\nostream& operator << (ostream &os, const C &c) { bool f = true; os << \"{\"; for (const auto &x : c) { if (!f) os << \", \"; f = false; os << x; } return os << \"}\"; }\r\ntemplate<typename T> void debug(string s, T x) { cerr << s << \" = \" << x << \"\\n\"; }\r\ntemplate<typename T, typename... Args> void debug(string s, T x, Args... args) { cerr << s.substr(0, s.find(',')) << \" = \" << x << \" | \"; debug(s.substr(s.find(',') + 2), args...); }\r\n\r\nint main() {\r\n    const int MAX = 1000;\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int n, s, d;\r\n    cin >> n >> s >> d;\r\n    vector<bitset<MAX>> use(s);\r\n    for (int i = 0; i < s; i++) { \r\n        int ci; \r\n        cin >> ci;\r\n        for (int j = 0; j < ci; j++) {\r\n            int x;\r\n            cin >> x;\r\n            use[i][x] = 1;\r\n        }\r\n    }\r\n    const int INF = 100;\r\n    int top = 2 * s / 3;\r\n    map<bitset<MAX>, int> dp1;\r\n    map<bitset<MAX>, int> dp2;\r\n    for (int mask = 0; mask < (1 << top); mask++) {\r\n        bitset<MAX> res;\r\n        for (int j = 0; j < top; j++) {\r\n            if ((1 << j) & mask) {\r\n                res ^= use[j];\r\n            }\r\n        }\r\n        if (dp1.find(res) == dp1.end()) {\r\n            dp1[res] = __builtin_popcount(mask);\r\n        } else {\r\n            dp1[res] = min(dp1[res], __builtin_popcount(mask));\r\n        }\r\n    }\r\n    int bot = s - top;\r\n    for (int mask = 0; mask < (1 << bot); mask++) {\r\n        bitset<MAX> res;\r\n        for (int j = 0; j < bot; j++) {\r\n            if ((1 << j) & mask) {\r\n                res ^= use[j + top];\r\n            }\r\n        }\r\n        if (dp2.find(res) == dp1.end()) {\r\n            dp2[res] = __builtin_popcount(mask);\r\n        } else {\r\n            dp2[res] = min(dp2[res], __builtin_popcount(mask));\r\n        }\r\n    }\r\n    while (d--) {\r\n        bitset<MAX> q;\r\n        int ti; \r\n        cin >> ti;\r\n        for (int i = 0; i < ti; i++) {\r\n            int x;\r\n            cin >> x;\r\n            q[x] = 1;\r\n        }\r\n        int ans = INF;\r\n        for (auto& check : dp2) {\r\n            bitset<MAX> store = check.first;\r\n            store ^= q;\r\n            if (dp1.find(store) != dp1.end()) {\r\n                ans = min(ans, dp1[store] + check.second);\r\n            }\r\n        }\r\n        if (ans == INF) {\r\n            cout << -1 << '\\n';\r\n        } else {\r\n            cout << ans << '\\n';\r\n        }\r\n    }\r\n}"
}