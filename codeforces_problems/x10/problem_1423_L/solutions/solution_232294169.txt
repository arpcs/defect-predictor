{
    "id": 232294169,
    "contestId": 1423,
    "creationTimeSeconds": 1699646429,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1423,
        "index": "L",
        "name": "Light switches",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "meet-in-the-middle"
        ]
    },
    "author": {
        "contestId": 1423,
        "members": [
            {
                "handle": "wxhtzdy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601903100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main() {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  int n, s, d;\n  cin >> n >> s >> d;\n  const int N = 1005;\n  vector<bitset<N>> b(n);\n  for (int i = 0; i < s; i++) {\n    int c;\n    cin >> c;\n    while (c--) {\n      int p;\n      cin >> p;\n      b[i][p] = 1;\n    }\n  }\n  unordered_map<bitset<N>, int> mp;\n  int L = (s + 2) / 3;\n  int R = s - L;\n  vector<bitset<N>> xr(1 << L);\n  for (int mask = 0; mask < (1 << L); mask++) {\n    for (int i = 0; i < L; i++) {\n      if (mask >> i & 1) {\n        xr[mask] = (xr[mask] ^ b[i]); \n      }\n    }\n  }\n  for (int mask = 0; mask < (1 << R); mask++) {\n    bitset<N> cur;\n    for (int i = 0; i < R; i++) {\n      if (mask >> i & 1) {\n        cur = (cur ^ b[L + i]); \n      }\n    }\n    if (!mp.count(cur)) {\n      mp[cur] = __builtin_popcount(mask);\n    } else {\n      mp[cur] = min(mp[cur], __builtin_popcount(mask));\n    }\n  }\n  for (int i = 0; i < d; i++) {\n    bitset<N> cur;\n    int c;\n    cin >> c;\n    while (c--) {\n      int p;\n      cin >> p;\n      cur[p] = 1;\n    }\n    int ans = 50;\n    for (int mask = 0; mask < (1 << L); mask++) {\n      if (mp.count(xr[mask] ^ cur)) {\n        ans = min(ans, __builtin_popcount(mask) + mp[xr[mask] ^ cur]);\n      }\n    }\n    if (ans > s) {\n      cout << -1 << '\\n';\n    } else {\n      cout << ans << '\\n';\n    }\n  }\n  return 0;\n}"
}