{
    "id": 211013337,
    "contestId": 1178,
    "creationTimeSeconds": 1687688418,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1178,
        "index": "H",
        "name": "Stock Exchange",
        "type": "PROGRAMMING",
        "points": 4000.0,
        "rating": 3500,
        "tags": [
            "binary search",
            "flows",
            "graphs"
        ]
    },
    "author": {
        "contestId": 1178,
        "members": [
            {
                "handle": "gongkoufadongji"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1563636900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 1228800,
    "source": "#include <bits/stdc++.h>\r\n//#define int long long\r\n#define ll long long\r\n#define endl '\\n'\r\n#define lowbit(x) (x&(-x))\r\n#define ull unsigned long long \r\n#define pii pair<int,int>\r\nusing namespace std;\r\nconst string yes=\"Yes\\n\",no=\"No\\n\";\r\nconst int N = 1000005,inf = 1e9,mod=1000000007;\r\nint qpow(int x,int y=mod-2,int mo=mod,int res=1){\r\n    for(;y;(x*=x)%=mo,y>>=1)if(y&1)(res*=x)%=mo;\r\n    return res;\r\n}\r\ntemplate <int N> struct MCMF{\r\n    struct E{\r\n        int to,cap,val,inv;\r\n    };\r\n    vector <E> g[N];\r\n    int dis[N],now[N],h[N],pre[N],preu[N];\r\n    void add(int u,int v,int f,int w){\r\n        g[u].push_back({v,f,w,(int)g[v].size()});\r\n        g[v].push_back({u,0,-w,(int)g[u].size()-1});\r\n    }\r\n    void dijkstra(int st){\r\n        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>q;\r\n        memset(dis,0x3f,sizeof dis);\r\n        memset(pre,-1,sizeof pre);\r\n        memset(preu,-1,sizeof preu);\r\n        dis[st]=0;q.push({0,st});\r\n        while(q.size()){\r\n            auto [d,u]=q.top();q.pop();\r\n            if(dis[u]<d)continue;\r\n            int x=0;\r\n            for(auto [v,f,w,inv]:g[u]){\r\n                if(f&&dis[v]>dis[u]+w+h[u]-h[v]){\r\n                    dis[v]=dis[u]+h[u]-h[v]+w;\r\n                    pre[v]=x;\r\n                    preu[v]=u;\r\n                    q.push({dis[v],v});\r\n                }\r\n                x++;\r\n            }\r\n        }\r\n    }\r\n    pair<int,int> min_cost_max_flow(int st,int ed){\r\n        memset(h,0,sizeof h);\r\n        for(int flow=0,cost=0,res=inf;;res=inf){\r\n            \r\n            dijkstra(st);\r\n            if(dis[ed]>inf)return {flow,cost};\r\n            for(int i=0;i<N;i++){\r\n                h[i]+=dis[i];\r\n            }\r\n            for(int i=ed;i!=st;i=preu[i]){\r\n                res=min(res,g[preu[i]][pre[i]].cap);\r\n            }\r\n            flow+=res;\r\n            cost+=res*h[ed];\r\n            for(int i=ed;i!=st;i=preu[i]){\r\n                g[i][g[preu[i]][pre[i]].inv].cap+=res;\r\n                g[preu[i]][pre[i]].cap-=res;\r\n            }\r\n        }\r\n    }\r\n};\r\nMCMF<22005>mcmf;\r\nint n;\r\npii a[5005];\r\nll b[5005],c[5005],d[5005],e[5005];\r\nint cnt[5005];\r\nbool ck(ll mid){\r\n    for(int i=1;i<=2*n;i++)c[i]=i,d[i]=a[i].first*mid+a[i].second,cnt[i]=0;\r\n    sort(c+1,c+1+2*n,[&](int x,int y){\r\n        return d[x]==d[y]?x<y:d[x]>d[y];\r\n    });\r\n    for(int i=1;i<=2*n;i++)e[c[i]]=i;\r\n    int mn=0;e[0]=inf;\r\n    sort(b+1,b+1+2*n,[&](int x,int y){\r\n        return a[x].second==a[y].second?e[x]<e[y]:a[x].second<a[y].second;\r\n    });\r\n    for(int i=1;i<=2*n;i++){\r\n        int now=b[i];\r\n        if(e[now]<e[mn])mn=now;\r\n        if(now<=n)cnt[mn]++;\r\n    }\r\n    int sum=0;\r\n    for(int i=1;i<=2*n;i++){\r\n        int now=c[i];\r\n        sum+=cnt[now];\r\n        if(now>n){\r\n            if(sum)sum--;\r\n            else return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nvoid solve(){\r\n    cin>>n;\r\n    for(int i=1;i<=2*n;i++){cin>>a[i].first>>a[i].second;b[i]=i;}\r\n    \r\n    int l=1,r=2e9;\r\n    while(l<=r){\r\n        int mid=(l+r)>>1;\r\n        if(ck(mid))r=mid-1;\r\n        else l=mid+1;\r\n    }\r\n    if(r==2e9){\r\n        cout<<-1<<endl;\r\n        return;\r\n    }\r\n    // cout<<l<<\" \"<<r<<endl;\r\n    // exit(0);\r\n    // cout<<r<<\" \"<<ck(r)<<endl;\r\n    //cout<<l<<\" \"<<ck(l)<<endl;\r\n    //exit(0);\r\n    ck(l);\r\n    int S=0,T=22002;\r\n    for(int i=1;i<=2*n;i++){\r\n        mcmf.add(i,2*n+i,inf,1);\r\n        mcmf.add(i,4*n+i,inf,0);\r\n        mcmf.add(2*n+i,4*n+i,inf,0);\r\n        mcmf.add(4*n+i,6*n+i,inf,1);\r\n        mcmf.add(4*n+i,8*n+i,inf,0);\r\n        mcmf.add(6*n+i,8*n+i,inf,0);\r\n        if(i<=n){\r\n            mcmf.add(S,i,1,0);\r\n        }\r\n        else{\r\n            mcmf.add(8*n+i,T,1,0);\r\n        }\r\n    }\r\n    for(int i=1;i<2*n;i++){\r\n        mcmf.add(6*n+c[i],6*n+c[i+1],inf,0);\r\n        mcmf.add(2*n+b[2*n+1-i],2*n+b[2*n-i],inf,0);\r\n    }\r\n    auto [x,y]=mcmf.min_cost_max_flow(S,T);\r\n    cout<<l<<\" \"<<y<<endl;\r\n}\r\nsigned main(){\r\n    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\r\n    cout<<fixed<<setprecision(12);\r\n    int t=1;\r\n    //cin>>t;\r\n    while (t--)solve();\r\n}"
}