{
    "id": 179178257,
    "contestId": 643,
    "creationTimeSeconds": 1667561839,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 643,
        "index": "E",
        "name": "Bear and Destroying Subtrees",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2700,
        "tags": [
            "dp",
            "math",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 643,
        "members": [
            {
                "handle": "5_Lei"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1462633500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 18,
    "timeConsumedMillis": 467,
    "memoryConsumedBytes": 162304000,
    "source": "// LUOGU_RID: 92782305\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int maxn = 5e5+50;\nconst int h = 30;\n\ntypedef long long ll;\ntypedef double db;\n\nint R()\n{\n    int x = 0,f = 1;\n    char c = getchar();\n    while(c > '9' || c < '0')\n    {\n        if(c == '-')f = -1;\n        c = getchar();\n    }\n    while(c >= '0' && c <= '9')\n    {\n        x = (x << 1) + (x << 3) + (c ^ 48);\n        c = getchar();\n    }\n    return x * f;\n}\n\ndb dp[maxn][40];\nint q,tot,fa[maxn];\n\nvoid del(int &x,int k)\n{\n    if(k > h || !x || !fa[x])return;\n    del(fa[x],k+1);\n    dp[fa[x]][k+1] /= (0.5 * dp[x][k] + 0.5);\n}\n\nvoid upd(int &x,int k)\n{\n    if(k > h || !x || !fa[x])return;\n    dp[fa[x]][k+1] *= (0.5 * dp[x][k] + 0.5);\n    upd(fa[x],k+1);\n}\n\nvoid Lei()\n{\n    q = R(),tot = 1;\n    for(int i = 1 ; i <= h ; i++)dp[1][i] = 1;\n    while(q--)\n    {\n        int opt = R(),x = R();\n        if(opt == 1)\n        {\n            fa[++tot] = x,x = tot;\n            for(int i = 1 ; i <= h ; i++)dp[x][i] = 1;\n            del(fa[x],1),upd(x,0);\n        }\n        else \n        {\n            db ans = h;\n            for(int i = 1 ; i <= h-1 ; i++)ans -= dp[x][i];\n            printf(\"%.10lf\\n\",ans-1);\n        }\n    }\n}\n\nint main()\n{\n    Lei();\n    return 0;\n}"
}