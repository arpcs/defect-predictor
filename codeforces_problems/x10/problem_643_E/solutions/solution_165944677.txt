{
    "id": 165944677,
    "contestId": 643,
    "creationTimeSeconds": 1658967141,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 643,
        "index": "E",
        "name": "Bear and Destroying Subtrees",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2700,
        "tags": [
            "dp",
            "math",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 643,
        "members": [
            {
                "handle": "Ignotus0"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1462633500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 72,
    "timeConsumedMillis": 498,
    "memoryConsumedBytes": 166297600,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing ll = long long;\r\n\r\ntemplate <typename T>\r\nvoid rd(T& x){\r\n    x = 0; char c = getchar(); int f = 1;\r\n    while(!isdigit(c)) f = c == '-' ? -1 : 1, c = getchar();\r\n    while(isdigit(c)) x = x * 10 + c - '0', c = getchar();\r\n    x *= f;\r\n}\r\ntemplate <typename T, typename... Args>\r\nvoid rd(T& x, Args&... args){rd(x); rd(args...);}\r\n\r\nconst int N = 5e5 + 10, B = 40;\r\n\r\nint q, tot = 1, fa[N];\r\ndouble f[N][B + 1];\r\nstd::vector <int> seq;\r\n\r\nvoid solve(){\r\n    int op, x; rd(op, x);\r\n    if(op == 1){\r\n        seq.clear();\r\n        fa[++tot] = x, x = tot;\r\n        for(int i = 1; i <= B; ++i) f[x][i] = 1;\r\n        for(int i = 0; i <= B && x; ++i) seq.push_back(x), x = fa[x];\r\n        int siz = seq.size();\r\n        for(int i = siz - 2; i > 0; --i) f[seq[i + 1]][i + 1] /= (f[seq[i]][i] + 1) / 2;\r\n        for(int i = 0; i < siz - 1; ++i) f[seq[i + 1]][i + 1] *= (f[seq[i]][i] + 1) / 2;\r\n    }\r\n    else{\r\n        double ans = B;\r\n        for(int i = 1; i <= B; ++i) ans -= f[x][i];\r\n        printf(\"%.7lf\\n\", ans);\r\n    }\r\n}\r\n\r\nint main(){\r\n    rd(q);\r\n    for(int i = 1; i <= B; ++i) f[1][i] = 1;\r\n    for(int i = 1; i <= q; ++i) solve();\r\n    return 0;\r\n}"
}