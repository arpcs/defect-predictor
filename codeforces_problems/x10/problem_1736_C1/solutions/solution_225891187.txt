{
    "id": 225891187,
    "contestId": 1736,
    "creationTimeSeconds": 1696070210,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1736,
        "index": "C1",
        "name": "Good Subarrays (Easy Version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1300,
        "tags": [
            "binary search",
            "data structures",
            "schedules",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1736,
        "members": [
            {
                "handle": "AhmedOmani"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1665412500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/*\r\nYou see, power, real power doesnt come to those who were born strongest or fastest or smartest.\r\nNo. It comes to those who will do anything to achieve it .\r\n*/\r\n\r\n#include<bits/stdc++.h>\r\n#include <cmath>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#define int long long\r\n#define OO 1e16\r\n\r\nusing namespace std ;\r\n\r\nusing namespace __gnu_pbds;\r\ntemplate<typename T>\r\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\nconst int MOD = 998244353 ;\r\n\r\nvoid Omani() {\r\nios::sync_with_stdio(0); cin.tie(0), cout.tie(0);\r\n#ifndef ONLINE_JUDGE\r\nfreopen(\"input.txt\", \"r\", stdin);\r\n#endif\r\n#ifdef _LOCAL_DEFINE\r\n  cerr << (double)clock() * 1.0 / CLOCKS_PER_SEC << endl;\r\n#endif\r\n}\r\n\r\nvoid Solve() {\r\n\r\n    int n ;\r\n    cin >> n ;\r\n\r\n    vector < int > arr(n);\r\n\r\n    for (auto &i : arr) cin >> i ;\r\n\r\n    int L = 0 , R = 0 , ans = 0 , idx = 1 ;\r\n\r\n    while(L < n) {\r\n\r\n        while(R < n && arr[R] >= idx)\r\n            R += 1 , idx += 1 ;\r\n\r\n        idx = 1 ;\r\n        int len = R - L ;\r\n\r\n        ans += len ;\r\n        L ++\r\n\r\n    }\r\n\r\n    cout << ans << endl;\r\n}\r\n\r\nsigned main() {\r\nOmani() ;\r\nint T = 1 ;                                                                    cin >> T ;\r\nwhile(T--)\r\n    Solve() ;\r\n}\r\n"
}