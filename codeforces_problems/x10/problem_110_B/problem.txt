{
    "contestId": 110,
    "index": "B",
    "name": "Lucky String",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1100,
    "tags": [
        "constructive algorithms",
        "strings"
    ],
    "desc": {
        "title": "B. Lucky String",
        "statement": "<p><span class=\"tex-font-style-underline\">Petya loves lucky numbers. We all know that lucky numbers are the positive integers whose decimal representations contain only the lucky digits <span class=\"tex-font-style-bf\">4</span> and <span class=\"tex-font-style-bf\">7</span>. For example, numbers <span class=\"tex-font-style-bf\">47</span>, <span class=\"tex-font-style-bf\">744</span>, <span class=\"tex-font-style-bf\">4</span> are lucky and <span class=\"tex-font-style-bf\">5</span>, <span class=\"tex-font-style-bf\">17</span>, <span class=\"tex-font-style-bf\">467</span> are not.</span></p><p>Petya recently learned to determine whether a string of lowercase Latin letters is lucky. For each individual letter all its positions in the string are written out in the increasing order. This results in <span class=\"tex-span\">26</span> lists of numbers; some of them can be empty. A string is considered lucky if and only if in each list the absolute difference of any two <span class=\"tex-font-style-bf\">adjacent</span> numbers is a lucky number. </p><p>For example, let's consider string \"<span class=\"tex-font-style-tt\">zbcdzefdzc</span>\". The lists of positions of equal letters are:</p><ul><li> <span class=\"tex-font-style-tt\">b</span>: <span class=\"tex-span\">2</span></li><li> <span class=\"tex-font-style-tt\">c</span>: <span class=\"tex-span\">3,\u200910</span></li><li> <span class=\"tex-font-style-tt\">d</span>: <span class=\"tex-span\">4,\u20098</span></li><li> <span class=\"tex-font-style-tt\">e</span>: <span class=\"tex-span\">6</span></li><li> <span class=\"tex-font-style-tt\">f</span>: <span class=\"tex-span\">7</span></li><li> <span class=\"tex-font-style-tt\">z</span>: <span class=\"tex-span\">1,\u20095,\u20099</span></li><li> Lists of positions of letters <span class=\"tex-font-style-tt\">a</span>, <span class=\"tex-font-style-tt\">g</span>, <span class=\"tex-font-style-tt\">h</span>, ..., <span class=\"tex-font-style-tt\">y</span> are empty.</li></ul><p>This string is lucky as all differences are lucky numbers. For letters <span class=\"tex-font-style-tt\">z</span>: <span class=\"tex-span\">5\u2009-\u20091\u2009=\u20094</span>, <span class=\"tex-span\">9\u2009-\u20095\u2009=\u20094</span>, for letters <span class=\"tex-font-style-tt\">c</span>: <span class=\"tex-span\">10\u2009-\u20093\u2009=\u20097</span>, for letters <span class=\"tex-font-style-tt\">d</span>: <span class=\"tex-span\">8\u2009-\u20094\u2009=\u20094</span>. </p><p>Note that if some letter occurs only once in a string, it doesn't influence the string's luckiness after building the lists of positions of equal letters. The string where all the letters are distinct is considered lucky.</p><p>Find the lexicographically minimal lucky string whose length equals <span class=\"tex-span\"><i>n</i></span>.</p>",
        "inputSpecification": "<p>The single line contains a positive integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup></span>) \u2014 the length of the sought string.</p>",
        "outputSpecification": "<p>Print on the single line the lexicographically minimal lucky string whose length equals <span class=\"tex-span\"><i>n</i></span>.</p>",
        "samples": [
            {
                "input": "5<br/>",
                "output": "abcda<br/>"
            },
            {
                "input": "3<br/>",
                "output": "abc<br/>"
            }
        ],
        "note": "<p>The lexical comparison of strings is performed by the &lt; operator in modern programming languages. String <span class=\"tex-span\"><i>a</i></span> is lexicographically less than string <span class=\"tex-span\"><i>b</i></span> if exists such <span class=\"tex-span\"><i>i</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>i</i>\u2009\u2264\u2009<i>n</i></span>), that <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009&lt;\u2009<i>b</i><sub class=\"lower-index\"><i>i</i></sub></span>, and for any <span class=\"tex-span\"><i>j</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>j</i>\u2009&lt;\u2009<i>i</i></span>) <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>j</i></sub>\u2009=\u2009<i>b</i><sub class=\"lower-index\"><i>j</i></sub></span>.</p>"
    }
}