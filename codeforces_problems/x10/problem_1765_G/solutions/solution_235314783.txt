{
    "id": 235314783,
    "contestId": 1765,
    "creationTimeSeconds": 1701489335,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1765,
        "index": "G",
        "name": "Guess the String",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "constructive algorithms",
            "interactive",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1765,
        "members": [
            {
                "handle": "KevinYao"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1669545300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 78,
    "timeConsumedMillis": 639,
    "memoryConsumedBytes": 0,
    "source": "// LUOGU_RID: 137804133\n// Author: kyEEcccccc\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nusing LL = long long;\r\nusing ULL = unsigned long long;\r\n\r\n#define F(i, l, r) for (int i = (l); i <= (r); ++i)\r\n#define FF(i, r, l) for (int i = (r); i >= (l); --i)\r\n#define MAX(a, b) ((a) = max(a, b))\r\n#define MIN(a, b) ((a) = min(a, b))\r\n#define SZ(a) ((int)((a).size()) - 1)\r\n\r\nmt19937_64 ran(chrono::system_clock::now().time_since_epoch().count());\r\n\r\nstring s;\r\n\r\nint query(int t, int p)\r\n{\r\n\tcout << t << ' ' << p << endl;\r\n\tint x;\r\n\tcin >> x;\r\n\treturn x;\r\n}\r\n\r\nchar invc(char x)\r\n{\r\n\treturn x == '1' ? '0' : '1';\r\n}\r\n\r\nvoid work(void)\r\n{\r\n\tint n;\r\n\tcin >> n;\r\n\tif (query(1, 2) == 1) s = \"00\";\r\n\telse s = \"01\";\r\n\tint cur = 4;\r\n\tif (n & 1)\r\n\t{\r\n\t\tint x = query(1, 3);\r\n\t\tif (x == 0) s += '1';\r\n\t\telse if (x == 1) s += '0';\r\n\t\telse s += s[1];\r\n\t\t++cur;\r\n\t}\r\n\twhile (cur <= n)\r\n\t{\r\n\t\tif (ran() & 1)\r\n\t\t{\r\n\t\t\tint x = query(1, cur);\r\n\t\t\tif (x >= 2)\r\n\t\t\t{\r\n\t\t\t\ts += s[x - 2];\r\n\t\t\t\ts += s[x - 1];\r\n\t\t\t}\r\n\t\t\telse if ((x == 0 && s[1] == '0') || (x == 1 && s[1] == '1'))\r\n\t\t\t{\r\n\t\t\t\tint y = query(1, cur - 1);\r\n\t\t\t\tif (y == 0) s += '1';\r\n\t\t\t\telse s += s[y - 1];\r\n\t\t\t\tif (x == 0) s += '1';\r\n\t\t\t\telse s += '0';\r\n\t\t\t}\r\n\t\t\telse if (x == 0)\r\n\t\t\t{\r\n\t\t\t\ts += '1';\r\n\t\t\t\ts += '1';\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ts += '1';\r\n\t\t\t\ts += '0';\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tint x = query(2, cur);\r\n\t\t\tif (x >= 2)\r\n\t\t\t{\r\n\t\t\t\ts += invc(s[x - 2]);\r\n\t\t\t\ts += invc(s[x - 1]);\r\n\t\t\t}\r\n\t\t\telse if ((x == 0 && s[1] == '0') || (x == 1 && s[1] == '1'))\r\n\t\t\t{\r\n\t\t\t\tint y = query(1, cur - 1);\r\n\t\t\t\tif (y == 0) s += '1';\r\n\t\t\t\telse s += s[y - 1];\r\n\t\t\t\tif (x == 0) s += '0';\r\n\t\t\t\telse s += '1';\r\n\t\t\t}\r\n\t\t\telse if (x == 0)\r\n\t\t\t{\r\n\t\t\t\ts += '0';\r\n\t\t\t\ts += '0';\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\ts += '0';\r\n\t\t\t\ts += '1';\r\n\t\t\t}\r\n\t\t}\r\n\t\tcur += 2;\r\n\t}\r\n\tcout << \"0 \" << s << endl;\r\n\tint tmp;\r\n\tcin >> tmp;\r\n}\r\n\r\nsigned main(void)\r\n{\r\n\t// freopen(\".in\", \"r\", stdin);\r\n\t// freopen(\".out\", \"w\", stdout);\r\n\tios::sync_with_stdio(0), cin.tie(nullptr);\r\n\r\n\tint _;\r\n\tcin >> _;\r\n\twhile (_--) work();\r\n\t\r\n\treturn 0;\r\n}"
}