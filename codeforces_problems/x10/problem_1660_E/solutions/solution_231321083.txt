{
    "id": 231321083,
    "contestId": 1660,
    "creationTimeSeconds": 1699095702,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1660,
        "index": "E",
        "name": "Matrix and Shifts",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1660,
        "members": [
            {
                "handle": "rdrf.myfoot"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1648737300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 795,
    "memoryConsumedBytes": 128921600,
    "source": "#include <iostream>\n#include <cstring>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <utility>\n#include <unordered_map>\n#include <tuple>\n#define MINVAL -5000\n#define MAXVAL 10001\nusing namespace std;\n\ntypedef long long int lli;\ntypedef unsigned long long int ulli;\ntypedef long double ld;\ntypedef pair<int,int> ii;\ntypedef vector<int> vi;\ntypedef vector<ii> vii;\ntypedef vector<vi> vvi;\ntypedef vector<vii> vvii;\n\nint log2_floor(unsigned long long i){\n    return i? __builtin_clzll(1)-__builtin_clzll(i):-1;\n}\nint arr[4010][4010];\nint memo[4010][4010];\nint main(){\n    int t;cin>>t;\n    while(t--){\n        int n;cin>>n;\n        int num_ones=0;\n        for(int r=0;r<n;r++){\n            string s;cin>>s;\n            for(int c=0;c<n;c++){\n                arr[r][c]=s[c]-'0';\n                // cin>>arr[r][c];\n                num_ones+=arr[r][c];\n                arr[r+n][c]=arr[r][c+n]=arr[r+n][c+n]=arr[r][c];\n                memo[r][c]=memo[r+n][c]=memo[r][c+n]=memo[r+n][c+n]=0;\n            }\n        }\n        for(int r=1;r<=2*n;r++){\n            for(int c=1;c<=2*n;c++){\n                memo[r][c]=memo[r-1][c-1]+arr[r-1][c-1];\n            }\n        }\n        int best=0;\n        for(int r=0;r<n;r++)for(int c=0;c<n;c++){\n            int r2=r+n,c2=c+n;\n            best=max(best,memo[r2][c2]-memo[r][c]);\n        }\n        cout<<(num_ones-best)+(n-best)<<\"\\n\";\n\n    }\n}"
}