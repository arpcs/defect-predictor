{
    "id": 229969625,
    "contestId": 1660,
    "creationTimeSeconds": 1698390450,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1660,
        "index": "E",
        "name": "Matrix and Shifts",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1660,
        "members": [
            {
                "handle": "Z_Maker"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1648737300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nusing PII = pair<int, int>;\r\n\r\nusing TP = tuple<int, int, int>;\r\n\r\nusing LL = long long;\r\n\r\nusing PLI = pair<LL, int>;\r\n\r\nconst int N = 35, M = 35, K = 110;\r\n\r\nvoid solve()\r\n{\r\n    int n;\r\n    string s;\r\n    cin >> n >> s;\r\n\r\n    vector<int> cnt(n + 1), kd(n + 1);\r\n    s = '?' + s;\r\n\r\n    int val = 0;\r\n    for(int i = 1;i <= n; i ++)\r\n    {\r\n        if(s[i] == '-')     val ++;\r\n        else    val = 0;\r\n        cnt[i] = cnt[i - 1] + (s[i] == '-');\r\n        kd[i] = kd[i - 1] + (val == 2);\r\n\r\n        if(val == 2)    val = 0;\r\n    }\r\n\r\n    auto check = [&] (int x, int y)\r\n    {\r\n        int sum = y - x + 1;\r\n        int sub = cnt[y] - cnt[x - 1];\r\n        int add = sum - sub;\r\n\r\n        int l = 0, r = kd[y] - kd[x - 1];\r\n\r\n        while(l < r)\r\n        {\r\n            int mid = l + r >> 1;\r\n            if(add + mid >= sub - mid * 2)      r = mid;\r\n            else    l = mid + 1;\r\n        }\r\n\r\n        return add + r == sub - 2 * r;\r\n    };\r\n\r\n    int ans = 0;\r\n\r\n    for(int i = 1;i <= n; i ++)\r\n        for(int j = i + 1;j <= n; j ++)\r\n        {\r\n            //clog << i << ' ' << j << ' ' << check(i, j) << '\\n';\r\n            ans += check(i, j);\r\n        }\r\n\r\n    cout << ans << '\\n';\r\n}\r\n\r\nint main()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n\r\n    int tt;\r\n    cin >> tt;\r\n    while(tt --)\r\n    {\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n\r\n}"
}