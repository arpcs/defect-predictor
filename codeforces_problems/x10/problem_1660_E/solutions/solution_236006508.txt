{
    "id": 236006508,
    "contestId": 1660,
    "creationTimeSeconds": 1701845329,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1660,
        "index": "E",
        "name": "Matrix and Shifts",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1660,
        "members": [
            {
                "handle": "dj_khalid"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1648737300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\n#include<iostream>\nusing namespace std;\nlong long int mod=1e9+7;\n#define int long long int\n\n\nint inverse(int i) {if (i == 1) return 1; return (mod - ((mod / i) * inverse(mod % i)) % mod) % mod;}\n \nint mod_mul(int a, int b) {a = a % mod; b = b % mod; return (((a * b) % mod) + mod) % mod;}\n \nint mod_add(int a, int b) {a = a % mod; b = b % mod; return (((a + b) % mod) + mod) % mod;}\n \nint gcd(int a, int b) { if (b == 0) return a; return gcd(b, a % b);}\n \nint ceil_div(int a, int b) {return a % b == 0 ? a / b : a / b + 1;}\n\nstring intobinary(int n) { return bitset<8>(n).to_string(); }\n \nint pwr(int a, int b) {a %= mod; int res = 1; while (b > 0) {if (b & 1) res = res * a % mod; a = a * a % mod; b >>= 1;} return res;}\n \nvector<pair<int, int>> fac(int n){\n    vector<pair<int, int>> res;\n    for (int i = 2; i * i <= n; i++){\n        if (n % i == 0){\n            int cnt = 0;\n            while (n % i == 0)\n                {n /= i;cnt++;}\n            res.push_back({i, cnt});\n        }\n    }\n    if (n > 1)\n        {res.push_back({n, 1});}\n\n   return res;\n}\n\nconst  int   N  =  2e5 ; \nvector<int> fact,  inv ;\n\nvoid pre ( ){\n    fact.resize(N+1);\n    inv.resize(N+1);\n    fact[0]=1; \n    for (int i=1 ; i<=N  ; i++){\n        fact[i] =  fact[i-1]*i %mod ; \n    }\n    inv[N] =  pwr(fact[N]  ,  mod-2  ) ; \n    for (int i=N ; i>=1 ; i--){\n        inv[i-1] =  inv[i]*i %mod ;\n    } \n} \n\nint ncr (int n , int r  ){\n  if ( n < 0  or r < 0  or  n < r )return 0 ; \n  return  fact[n] * inv[r] %mod  * inv[n-r]%mod ;  \n}\nint npr (int n , int r  ){\n  if ( n < 0  or r < 0  or  n < r )return 0 ; \n  return  fact[n] * inv[n-r]%mod ;  \n} \n\nstring sread(){\n    string t=\"\";\n    char c=getchar();\n    while(c==' '||c=='\\t'||c=='\\r'||c=='\\n'||c==0||c==EOF){\n        c=getchar();\n    }\n    while(!(c==' '||c=='\\t'||c=='\\r'||c=='\\n'||c==0||c==EOF)){\n        t+=c,c=getchar();\n    }\n    return t;\n}\n\n// code for sieve\n/*\n    int sz = 1e6+1;\n    vector <bool> isprime(sz, true);\n    vector <int> primes;\n    isprime[0] = isprime[1] = false;\n    for (int i = 2; i < sz; i++) {\n        if (!isprime[i]) continue;\n        primes.push_back(i);\n        for (int j = i*i; j < sz; j+=i)\n            {isprime[j] = false;}\n    }\n\n*/\n\n// \nsigned main(){\n    //freopen(\"input.txt\", \"r\", stdin);\n    //freopen(\"output.txt\", \"w\", stdout);\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    int i,j,k,n,m,t;\n    cin>>t;\n    while(t--){\n    \tcin>>n;\n    \tvector<vector<int>> a(n,vector<int>(n)),vis(n,vector<int>(n)),vis1(n,vector<int>(n));\n    \tint c1=0;\n    \tfor(int i=0;i<n;i++){\n    \t\tstring s;\n    \t\tcin>>s;\n    \t\tfor(int j=0;j<n;j++){\n    \t\t\ta[i][j]=s[j]-'0';\n    \t\t\t//cout<<a[i][j]<<\" \";\n    \t\t\tif(a[i][j]==1){c1++;}\n    \t\t}\n    \t}\n    \tint diag=0;\n    \tfor(int i=n-1;i>=0;i--){\n    \t\tfor(int j=0;j<n;j++){\n    \t\t\tint cnt=0,i1=i,j1=j;\n    \t\t\tif((a[i1][j1]==1)&&(vis[i1][j1]==0)){\n    \t\t\t\twhile((vis[i1][j1]==0)){\n    \t\t\t\t\tif(a[i1][j1]==1){\n    \t\t\t\t\t\tvis[i1][j1]=1;\n    \t\t\t\t\t\ti1++;\n    \t\t\t\t\t\tj1++;\n    \t\t\t\t\t\tj1%=n;\n    \t\t\t\t\t\ti1%=n;\n    \t\t\t\t\t\tcnt++;\n    \t\t\t\t\t}\n    \t\t\t\t\telse{\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\tdiag=max(diag,cnt);\n    \t\t}\n    \t}\n\n    \tfor(int i=0;i<n;i++){\n    \t\tfor(int j=0;j<n;j++){\n    \t\t\tint cnt=0,i1=i,j1=j;\n    \t\t\tif((a[i1][j1]==1)&&(vis1[i1][j1]==0)){\n    \t\t\t\twhile((vis1[i1][j1]==0)){\n    \t\t\t\t\tif(a[i1][j1]==1){\n    \t\t\t\t\t\tvis1[i1][j1]=1;\n    \t\t\t\t\t\ti1++;\n    \t\t\t\t\t\tj1++;\n    \t\t\t\t\t\tj1%=n;\n    \t\t\t\t\t\ti1%=n;\n    \t\t\t\t\t\tcnt++;\n    \t\t\t\t\t}\n    \t\t\t\t\telse{\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\tdiag=max(diag,cnt);\n    \t\t}\n    \t}\n    \t//cout<<diag<<\" \";\n    \tcout<<(n-diag)+(c1-diag)<<endl;\n    }\n    \n}"
}