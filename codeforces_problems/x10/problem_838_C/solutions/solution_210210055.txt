{
    "id": 210210055,
    "contestId": 838,
    "creationTimeSeconds": 1687157971,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 838,
        "index": "C",
        "name": "Future Failure",
        "type": "PROGRAMMING",
        "rating": 2800,
        "tags": [
            "dp",
            "games"
        ]
    },
    "author": {
        "contestId": 838,
        "members": [
            {
                "handle": "abc864197532"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1502085900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 390,
    "memoryConsumedBytes": 46182400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\n#define pb push_back\r\n#define pii pair<int, int>\r\n#define all(a) a.begin(), a.end()\r\n#define sz(a) ((int)a.size())\r\nconst int mod = 998244353, N = 1 << 18;\r\n\r\nint get(int x) {\r\n    if (x == 0) {\r\n        return 0;\r\n    }\r\n    int ans = 0;\r\n    while (x & 1 ^ 1) {\r\n        ans++, x >>= 1;\r\n    }\r\n    return ans;\r\n}\r\n\r\nint calc(string s) {\r\n    vector <int> cnt(26);\r\n    int n = s.length();\r\n    for (char c : s) {\r\n        cnt[c - 'a']++;\r\n    }\r\n    int num = 0;\r\n    for (int i = 1; i <= n; ++i) {\r\n        num += get(i);\r\n    }\r\n    for (int i = 0; i < 26; ++i) {\r\n        for (int j = 1; j <= cnt[i]; ++j) {\r\n            num -= get(j);\r\n        }\r\n    }\r\n    return num == 0;\r\n}\r\n\r\nmap <string, int> m2;\r\n\r\nint solve2(string s) {\r\n    if (m2.count(s)) {\r\n        return m2[s];\r\n    }\r\n    if (s.empty()) {\r\n        return 0;\r\n    }\r\n    if (!calc(s)) {\r\n        return m2[s] = 1;\r\n    }\r\n    for (int i = 0; i < s.length(); ++i) {\r\n        string t = s;\r\n        t.erase(t.begin() + i);\r\n        if (!solve2(t)) {\r\n            return m2[s] = 1;\r\n        }\r\n    }\r\n    return m2[s] = 0;\r\n}\r\n\r\n// aabbcc\r\n// 1. remove will lose and number of way is odd -> first lose\r\n// 2. otherwise -> first win\r\n\r\nll fac[N], facp[N], inv[N], dp[N][19];\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false), cin.tie(0);\r\n    // for (int n = 21; n <= 26; ++n) {\r\n    //     vector <int> num;\r\n    //     function <void(int)> run = [&](int sum) {\r\n    //         if (sum == n) {\r\n    //             string s;\r\n    //             char c = 'a';\r\n    //             for (int i : num) {\r\n    //                 s += string(i, c);\r\n    //                 c++;\r\n    //             }\r\n    //             if (!solve2(s)) {\r\n    //                 cout << s << '\\n';\r\n    //             }\r\n    //         } else {\r\n    //             for (int i = (num.empty() ? 1 : num.back()); sum + i <= n; ++i) {\r\n    //                 num.pb(i);\r\n    //                 run(sum + i);\r\n    //                 num.pop_back();\r\n    //             }\r\n    //         }\r\n    //     };\r\n    //     run(0);\r\n    // }\r\n    // int n = 40;\r\n    // vector <vector <int>> dp(n + 1, vector <int> (n + 1));\r\n    // for (int len = 1; len <= n * 2; ++len) {\r\n    //     for (int i = 0; i <= n; ++i) {\r\n    //         int j = len - i;\r\n    //         if (0 <= j && j <= n) {\r\n    //             int sum = 0;\r\n    //             for (int x = 1; x <= i + j; ++x) {\r\n    //                 sum += get(x);\r\n    //             }\r\n    //             for (int x = 1; x <= i; ++x) {\r\n    //                 sum -= get(x);\r\n    //             }\r\n    //             for (int x = 1; x <= j; ++x) {\r\n    //                 sum -= get(x);\r\n    //             }\r\n    //             if (sum != 0) {\r\n    //                 dp[i][j] = 1;\r\n    //             }\r\n    //             if (i && !dp[i - 1][j]) {\r\n    //                 dp[i][j] = 1;\r\n    //             }\r\n    //             if (j && !dp[i][j - 1]) {\r\n    //                 dp[i][j] = 1;\r\n    //             }\r\n    //             if (!dp[i][j]) {\r\n    //                 cout << i << ' ' << j << '\\n';\r\n    //             }\r\n    //         }\r\n    //     }\r\n    // }\r\n    int n, k, mod;\r\n    cin >> n >> k >> mod;\r\n    fac[0] = facp[0] = inv[0] = fac[1] = facp[1] = inv[1] = 1;\r\n    for (int i = 2; i <= n; ++i) {\r\n        fac[i] = fac[i - 1] * i % mod;\r\n        inv[i] = mod - inv[mod % i] * (mod / i) % mod;\r\n        facp[i] = facp[i - 1] * inv[i] % mod;\r\n    }\r\n    ll tot = 1;\r\n    for (int i = 0; i < n; ++i) {\r\n        tot = tot * k % mod;\r\n    }\r\n    if (n % 2 == 1) {\r\n        cout << tot << '\\n';\r\n        return 0;\r\n    }\r\n    dp[0][0] = 1;\r\n    for (int msk = 1; msk <= n; ++msk) {\r\n        for (int t = msk; t > 0; t -= t & (-t)) {\r\n            for (int i = 1; i <= 19; ++i) {\r\n                dp[msk][i] += dp[msk ^ t][i - 1] * facp[t] % mod;\r\n                if (dp[msk][i] >= mod) {\r\n                    dp[msk][i] -= mod;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ll ans = 0;\r\n    for (int i = 1; i <= min(k, 19); ++i) {\r\n        ans += dp[n][i] * fac[k] % mod * facp[k - i] % mod;\r\n        if (ans >= mod) {\r\n            ans -= mod;\r\n        }\r\n    }\r\n    ans = ans * fac[n] % mod;\r\n    cout << (tot + mod - ans) % mod << '\\n';\r\n}"
}