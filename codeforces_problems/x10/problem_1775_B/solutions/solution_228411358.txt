{
    "id": 228411358,
    "contestId": 1775,
    "creationTimeSeconds": 1697458512,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1775,
        "index": "B",
        "name": "Gardener and the Array",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "bitmasks",
            "constructive algorithms"
        ]
    },
    "author": {
        "contestId": 1775,
        "members": [
            {
                "handle": "Detach.."
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1673349300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define endl '\\n'\r\n\r\nusing namespace std;\r\n\r\nusing LL = long long;\r\nusing i128 = __int128_t;\r\nusing PII = pair<int, int>;\r\n\r\nconst LL LINF = 0x3f3f3f3f3f3f3f3f;\r\nconst int INF = 0x3f3f3f3f;\r\n\r\nvoid solve()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    vector<int> f((int)2e5 + 5);\r\n    vector<vector<int>> bit(n);\r\n    \r\n    for(int i = 0; i < n; i ++ )\r\n    {\r\n        int k;\r\n        cin >> k;\r\n        for(int j = 0; j < k; j ++ )\r\n        {\r\n            int x;\r\n            cin >> x;\r\n            f[x] ++ ;\r\n            bit[i].push_back(x);\r\n        }\r\n    }\r\n\r\n    for(int i = 0; i < n; i ++ )\r\n    {\r\n        bool ok2 = true;\r\n        for(auto it : bit[i])\r\n        {\r\n            if(f[it] == 1)\r\n            {\r\n                ok2 = false;\r\n                break;\r\n            } \r\n        }\r\n\r\n        if(ok2)\r\n        {\r\n            cout << \"Yes\" << endl;\r\n            return;\r\n        }\r\n    }\r\n\r\n    cout << \"No\" << endl;\r\n}\r\n \r\nint main()  \r\n{\r\n    ios::sync_with_stdio(false), cin.tie(nullptr);\r\n    int T = 1;\r\n    cin >> T;\r\n    while(T -- )\r\n        solve();\r\n\r\n    return 0;\r\n}"
}