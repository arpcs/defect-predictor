{
    "contestId": 1672,
    "index": "G",
    "name": "Cross Xor",
    "type": "PROGRAMMING",
    "points": 2750.0,
    "rating": 3200,
    "tags": [
        "constructive algorithms",
        "graphs",
        "math",
        "matrices"
    ],
    "desc": {
        "title": "G. Cross Xor",
        "statement": "<p>There is a grid with $$$r$$$ rows and $$$c$$$ columns, where the square on the $$$i$$$-th row and $$$j$$$-th column has an integer $$$a_{i, j}$$$ written on it. Initially, all elements are set to $$$0$$$. We are allowed to do the following operation:</p><ul> <li> Choose indices $$$1 \\le i \\le r$$$ and $$$1 \\le j \\le c$$$, then replace all values on the same row or column as $$$(i, j)$$$ with the value xor $$$1$$$. In other words, for all $$$a_{x, y}$$$ where $$$x=i$$$ or $$$y=j$$$ or both, replace $$$a_{x, y}$$$ with $$$a_{x, y}$$$ xor $$$1$$$. </li></ul><p>You want to form grid $$$b$$$ by doing the above operations a finite number of times. However, some elements of $$$b$$$ are missing and are replaced with '<span class=\"tex-font-style-tt\">?</span>' instead.</p><p>Let $$$k$$$ be the number of '<span class=\"tex-font-style-tt\">?</span>' characters. Among all the $$$2^k$$$ ways of filling up the grid $$$b$$$ by replacing each '<span class=\"tex-font-style-tt\">?</span>' with '<span class=\"tex-font-style-tt\">0</span>' or '<span class=\"tex-font-style-tt\">1</span>', count the number of grids, that can be formed by doing the above operation a finite number of times, starting from the grid filled with $$$0$$$. As this number can be large, output it modulo $$$998244353$$$.</p>",
        "inputSpecification": "<p>The first line contains two integers $$$r$$$ and $$$c$$$ ($$$1 \\le r, c \\le 2000$$$) \u00a0\u2014 the number of rows and columns of the grid respectively.</p><p>The $$$i$$$-th of the next $$$r$$$ lines contain $$$c$$$ characters $$$b_{i, 1}, b_{i, 2}, \\ldots, b_{i, c}$$$ ($$$b_{i, j} \\in \\{0, 1, ?\\}$$$).</p>",
        "outputSpecification": "<p>Print a single integer representing the number of ways to fill up grid $$$b$$$ modulo $$$998244353$$$.</p>",
        "samples": [
            {
                "input": "\n3 3\n?10\n1??\n010\n",
                "output": "\n1\n"
            },
            {
                "input": "\n2 3\n000\n001\n",
                "output": "\n0\n"
            },
            {
                "input": "\n1 1\n?\n",
                "output": "\n2\n"
            },
            {
                "input": "\n6 9\n1101011?0\n001101?00\n101000110\n001011010\n0101?01??\n00?1000?0\n",
                "output": "\n8\n"
            }
        ],
        "note": "<p>In the first test case, the only way to fill in the $$$\\texttt{?}$$$s is to fill it in as such:</p><center> <table class=\"tex-tabular\"><tbody><tr><td class=\"tex-tabular-border-left tex-tabular-text-align-center tex-tabular-border-right tex-tabular-border-top tex-tabular-border-bottom\"><span class=\"tex-font-style-tt\">0</span></td><td class=\"tex-tabular-border-left tex-tabular-text-align-center tex-tabular-border-right tex-tabular-border-top tex-tabular-border-bottom\"><span class=\"tex-font-style-tt\">1</span></td><td class=\"tex-tabular-border-left tex-tabular-text-align-center tex-tabular-border-right tex-tabular-border-top tex-tabular-border-bottom\"><span class=\"tex-font-style-tt\">0</span></td></tr><tr><td class=\"tex-tabular-border-left tex-tabular-text-align-center tex-tabular-border-right tex-tabular-border-top tex-tabular-border-bottom\"><span class=\"tex-font-style-tt\">1</span></td><td class=\"tex-tabular-border-left tex-tabular-text-align-center tex-tabular-border-right tex-tabular-border-top tex-tabular-border-bottom\"><span class=\"tex-font-style-tt\">1</span></td><td class=\"tex-tabular-border-left tex-tabular-text-align-center tex-tabular-border-right tex-tabular-border-top tex-tabular-border-bottom\"><span class=\"tex-font-style-tt\">1</span></td></tr><tr><td class=\"tex-tabular-border-left tex-tabular-text-align-center tex-tabular-border-right tex-tabular-border-top tex-tabular-border-bottom\"><span class=\"tex-font-style-tt\">0</span></td><td class=\"tex-tabular-border-left tex-tabular-text-align-center tex-tabular-border-right tex-tabular-border-top tex-tabular-border-bottom\"><span class=\"tex-font-style-tt\">1</span></td><td class=\"tex-tabular-border-left tex-tabular-text-align-center tex-tabular-border-right tex-tabular-border-top tex-tabular-border-bottom\"><span class=\"tex-font-style-tt\">0</span></td></tr></tbody></table> </center><p>This can be accomplished by doing a single operation by choosing $$$(i,j)=(2,2)$$$.</p><p>In the second test case, it can be shown that there is no sequence of operations that can produce that grid.</p>"
    },
    "suggested_categories": [
        "grid manipulation",
        "xor operations",
        "combinatorial optimization",
        "dynamic programming",
        "modular arithmetic",
        "graph coloring",
        "enumeration",
        "bit manipulation",
        "mathematical computation",
        "graph algorithms",
        "search algorithms",
        "discrete optimization",
        "constraint satisfaction",
        "number theory",
        "algorithm analysis",
        "combinatorics",
        "optimization problem",
        "computational complexity",
        "integer programming",
        "problem solving"
    ]
}