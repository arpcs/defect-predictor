{
    "id": 223638778,
    "contestId": 1629,
    "creationTimeSeconds": 1694879762,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1629,
        "index": "A",
        "name": "Download More RAM",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "brute force",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1629,
        "members": [
            {
                "handle": "Emran_Emran"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642862100
    },
    "programmingLanguage": "Python 3",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "class Ram:\r\n    def __init__(self):\r\n        self.takes = 0\r\n        self.add = 0\r\n\r\ndef main():\r\n    tt = int(input(\"Enter the number of test cases: \"))\r\n    for _ in range(tt):\r\n        n, k = map(int, input(\"Enter the values of n and k: \").split())\r\n        a = []\r\n        takes_input = input(f\"Enter the values of takes for RAM (space-separated): \")\r\n        takes = map(int, takes_input.split())\r\n        for take in takes:\r\n            ram = Ram()\r\n            ram.takes = take\r\n            a.append(ram)\r\n        adds_input = input(f\"Enter the values of add for RAM (space-separated): \")\r\n        adds = map(int, adds_input.split())\r\n        for i, add in enumerate(adds):\r\n            a[i].add = add\r\n        a.sort(key=lambda x: x.takes)\r\n        for i in range(n):\r\n            if k >= a[i].takes:\r\n                k += a[i].add\r\n        print(\"Result:\", k)\r\n\r\nif __name__ == \"__main__\":\r\n    main()"
}