{
    "id": 190753755,
    "contestId": 21,
    "creationTimeSeconds": 1674819668,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 21,
        "index": "A",
        "name": "Jabber ID",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1900,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 21,
        "members": [
            {
                "handle": "JOJO5862"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1277730300
    },
    "programmingLanguage": "Java 8",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 0,
    "source": "// LUOGU_RID: 100621819\n\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.InputStreamReader;\r\nimport java.util.StringTokenizer;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) throws IOException {\r\n        CF21AReader reader = new CF21AReader();\r\n        reader.init(System.in);\r\n        String str = reader.next();\r\n         if (str.charAt(str.length()-1)=='.'){\r\n            System.out.println(\"NO\");\r\n            return;\r\n        }\r\n        int index_At = str.indexOf('@');\r\n        int index_Xie = str.indexOf('/');\r\n        if (index_At==-1){\r\n            System.out.println(\"NO\");\r\n            return;\r\n        }\r\n        String username = str.substring(0,index_At);\r\n        String hostname;\r\n        String resource = \"\";\r\n        if (index_Xie!=-1){\r\n             try {\r\n                hostname = str.substring(index_At+1,index_Xie);\r\n            } catch (Exception e) {\r\n                System.out.println(\"NO\");\r\n                return;\r\n            }\r\n             resource = str.substring(index_Xie+1);\r\n             if (resource.equals(\"\")){\r\n                 System.out.println(\"NO\");\r\n                 return;\r\n             }\r\n        }else {\r\n             hostname = str.substring(index_At+1);\r\n        }\r\n//        System.out.println(username+\" \"+hostname+\" \"+resource);\r\n        if (username.length()>16 || hostname.length()>32){\r\n            System.out.println(\"NO\");\r\n            return;\r\n        }\r\n        if (resource.equals(\"\")){\r\n                if (checkHostname(hostname)&&isEmail(username)){\r\n                    System.out.println(\"YES\");\r\n                }else {\r\n                    System.out.println(\"NO\");\r\n                }\r\n        }else {\r\n            if (checkHostname(hostname)&&isEmail(username)&&isEmail(resource)){\r\n                System.out.println(\"YES\");\r\n            }else {\r\n                System.out.println(\"NO\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public static final String EMAIL_REGEX_DEFAULT = \"^[_a-zA-Z0-9]+$\";\r\n    public  static boolean checkHostname(String hostname){\r\n          int index = hostname.indexOf('.');\r\n        if (index!=-1){\r\n            String str[] = hostname.split(\"\\\\.\");\r\n            for(String key:str){\r\n                if (key.length()>16){\r\n                \r\n                    return false;\r\n                }\r\n            }\r\n        }else {\r\n            if (hostname.length()>16){\r\n                return false;\r\n            }\r\n        }\r\n        int len = hostname.length();\r\n        if (hostname.charAt(len-1)=='.'){\r\n    \r\n            return false;\r\n        }\r\n        if (len==0)return false;\r\n       \r\n        if (hostname.charAt(0)=='.')return false;\r\n        for (int i = 0; i < len-1; i++) {\r\n            if (hostname.charAt(i)=='.'&&hostname.charAt(i+1)=='.'){\r\n                return false;\r\n            }\r\n            if (hostname.charAt(i)!='.')\r\n                if(!((hostname.charAt(i)>='A'&&hostname.charAt(i)<='Z')||(hostname.charAt(i)>='a'&&hostname.charAt(i)<='z')||(hostname.charAt(i)>='0'&hostname.charAt(i)<='9')||(hostname.charAt(i)=='_')))\r\n                    return false;\r\n        }\r\n        if (hostname.charAt(len-1)!='.')\r\n        if(!((hostname.charAt(len-1)>='A'&&hostname.charAt(len-1)<='Z')||(hostname.charAt(len-1)>='a'&&hostname.charAt(len-1)<='z')||(hostname.charAt(len-1)>='0'&hostname.charAt(len-1)<='9')||(hostname.charAt(len-1)=='_')))\r\n            return false;\r\n        return true;\r\n    }\r\n    public static boolean isEmail(String email) {\r\n        return email.matches(EMAIL_REGEX_DEFAULT);\r\n    }\r\n\r\n}\r\nclass CF21AReader{\r\n    BufferedReader reader;\r\n    StringTokenizer tokenizer;\r\n\r\n    void init(InputStream inputStream){\r\n        reader = new BufferedReader(new InputStreamReader(System.in));\r\n        tokenizer = new StringTokenizer(\"\");\r\n    }\r\n    long nextLong() throws IOException {\r\n        return Long.parseLong(next());\r\n    }\r\n    String next() throws IOException {\r\n        while (!tokenizer.hasMoreTokens()){\r\n            tokenizer = new StringTokenizer(reader.readLine());\r\n        }\r\n        return tokenizer.nextToken();\r\n    }\r\n    int nextInt() throws IOException {\r\n        return Integer.parseInt(next());\r\n    }\r\n    String nextLine() throws IOException {\r\n        return reader.readLine();\r\n    }\r\n}"
}