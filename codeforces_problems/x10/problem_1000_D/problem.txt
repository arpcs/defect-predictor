{
    "contestId": 1000,
    "index": "D",
    "name": "Yet Another Problem On a Subsequence",
    "type": "PROGRAMMING",
    "rating": 1900,
    "tags": [
        "combinatorics",
        "dp"
    ],
    "desc": {
        "title": "D. Yet Another Problem On a Subsequence",
        "statement": "<p>The sequence of integers $$$a_1, a_2, \\dots, a_k$$$ is called a good array if $$$a_1 = k - 1$$$ and $$$a_1 &gt; 0$$$. For example, the sequences $$$[3, -1, 44, 0], [1, -99]$$$ are good arrays, and the sequences $$$[3, 7, 8], [2, 5, 4, 1], [0]$$$ \u2014 are not.</p><p>A sequence of integers is called good if it can be divided into a positive number of good arrays. Each good array should be a subsegment of sequence and each element of the sequence should belong to exactly one array. For example, the sequences $$$[2, -3, 0, 1, 4]$$$, $$$[1, 2, 3, -3, -9, 4]$$$ are good, and the sequences $$$[2, -3, 0, 1]$$$, $$$[1, 2, 3, -3 -9, 4, 1]$$$ \u2014 are not.</p><p>For a given sequence of numbers, count the number of its <span class=\"tex-font-style-bf\">subsequences</span> that are good sequences, and print the number of such subsequences modulo <span class=\"tex-font-style-bf\">998244353</span>.</p>",
        "inputSpecification": "<p>The first line contains the number $$$n~(1 \\le n \\le 10^3)$$$ \u2014 the length of the initial sequence. The following line contains $$$n$$$ integers $$$a_1, a_2, \\dots, a_n~(-10^9 \\le a_i \\le 10^9)$$$ \u2014 the sequence itself.</p>",
        "outputSpecification": "<p>In the single line output one integer \u2014 the number of subsequences of the original sequence that are good sequences, taken modulo <span class=\"tex-font-style-bf\">998244353</span>.</p>",
        "samples": [
            {
                "input": "3<br/>2 1 1<br/>",
                "output": "2<br/>"
            },
            {
                "input": "4<br/>1 1 1 1<br/>",
                "output": "7<br/>"
            }
        ],
        "note": "<p>In the first test case, two good subsequences \u2014 $$$[a_1, a_2, a_3]$$$ and $$$[a_2, a_3]$$$.</p><p>In the second test case, seven good subsequences \u2014 $$$[a_1, a_2, a_3, a_4], [a_1, a_2], [a_1, a_3], [a_1, a_4], [a_2, a_3], [a_2, a_4]$$$ and $$$[a_3, a_4]$$$.</p>"
    },
    "suggested_categories": [
        "sequence manipulation",
        "dynamic programming",
        "subsequences",
        "modular arithmetic",
        "array operations",
        "algorithm design",
        "mathematics",
        "combinatorics",
        "number theory",
        "programming contests",
        "integer manipulation",
        "mathematical analysis",
        "data structures",
        "combinatorial algorithms",
        "optimization",
        "problem solving",
        "algorithmic thinking",
        "mathematical modeling",
        "problem analysis",
        "computational complexity"
    ]
}