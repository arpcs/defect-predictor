{
    "id": 228733633,
    "contestId": 1000,
    "creationTimeSeconds": 1697671961,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1000,
        "index": "D",
        "name": "Yet Another Problem On a Subsequence",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 1000,
        "members": [
            {
                "handle": "marcus06"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1530110100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n \r\n#ifdef LOCAL\r\n#include \"LOCAL/debug.h\"\r\n#else\r\n#define debug(...)\r\n#endif\r\n \r\nconst int mod = 998244353;\r\nconst int mxn = 1e3 + 5;\r\n \r\nint n;\r\nint a[mxn];\r\nint cache[mxn];\r\n \r\nint binpow(int a, int n, int m) {\r\n    int ret = 1;\r\n    while (n) {\r\n        if (n & 1) ret = 1LL * ret * a % m;\r\n        a = 1LL * a * a % m;\r\n        n >>= 1;\r\n    }\r\n    return ret;\r\n}\r\n \r\nint f[mxn], invf[mxn];\r\nvoid init() {\r\n    for (int i = 0; i <= n; ++i) {\r\n        cache[i] = -1;\r\n    }\r\n \r\n    f[0] = 1;\r\n    for (int i = 1; i <= n; ++i) {\r\n        f[i] = 1LL * f[i - 1] * i % mod;\r\n    }\r\n \r\n    invf[n] = binpow(f[n], mod - 2, mod);\r\n    for (int i = n - 1; i >= 0; --i) {\r\n        invf[i] = 1LL * invf[i + 1] * (i + 1) % mod;\r\n    }\r\n}\r\n \r\nint C(int n, int k) {\r\n    assert(k <= n);\r\n    if (n == 0 || k == 0) return 0;\r\n \r\n    int res = f[n];\r\n    res = 1LL * res * invf[k] % mod;\r\n    res = 1LL * res * invf[n - k] % mod;\r\n    return res;\r\n}\r\n \r\nint dp(int x) \r\n    if(a[x] < 0) return 0;\r\n    if (x == n + 1) return 1;\r\n    if (cache[x] != -1) return cache[x];\r\n \r\n    int res = 0;\r\n    for (int i = x + a[x] + 1; i <= n + 1; ++i) {\r\n        res = 1LL * (1LL * res + 1LL * C(i - x, a[x]) * dp(i) % mod) % mod;\r\n    }\r\n    return cache[x] = res;\r\n}\r\n \r\nvoid solve() {\r\n    cin >> n;\r\n    for (int i = 1; i <= n; ++i) {\r\n        cin >> a[i];\r\n    }\r\n \r\n    init();\r\n    cout << dp(1) - 1;\r\n}\r\n \r\nint main() {\r\n    cin.tie(0)->sync_with_stdio(0);\r\n#ifdef LOCAL\r\n    freopen(\"main.in\", \"r\", stdin);\r\n#endif\r\n \r\n    int tt = 1;\r\n    while (tt--) {\r\n        solve();\r\n    }\r\n \r\n    return 0;\r\n}"
}