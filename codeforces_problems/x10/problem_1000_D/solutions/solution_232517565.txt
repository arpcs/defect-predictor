{
    "id": 232517565,
    "contestId": 1000,
    "creationTimeSeconds": 1699799711,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1000,
        "index": "D",
        "name": "Yet Another Problem On a Subsequence",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 1000,
        "members": [
            {
                "handle": "NissanK"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1530110100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 8806400,
    "source": "#include <bits/stdc++.h>\r\n\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n\r\n#define fastio() ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\r\n#define int\t\tlong long\r\n#define ll \t\tlong long\r\n#define lld\t\tlong double\r\n#define PI \t\t3.141592653589793238462\r\n#define INF \t1e18\r\n#define M    \t1000000007\r\n#define MOD1\t 998244353\r\n#define INF \t1e18\r\n#define nline \t\"\\n\"\r\n#define pb \t\tpush_back\r\n#define ppb \tpop_back\r\n#define ff \t\tfirst\r\n#define ss \t\tsecond\r\n#define set_bits __builtin_popcountll\r\n#define all(x) (x).begin(), (x).end()\r\n\r\ntypedef tree<pair<int,int>, null_type, less<pair<int,int>>, rb_tree_tag, tree_order_statistics_node_update> pbds; // find_by_order, order_of_key \r\n\r\n// Nissan Kumar is my name and I am the doomsday. \r\n\r\n/*...............................................................*/\r\nll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}\r\n\r\nll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}\r\n\r\nvoid extendgcd(ll a, ll b, ll*v) {if (b == 0) {v[0] = 1; v[1] = 0; v[2] = a; return ;} extendgcd(b, a % b, v); ll x = v[1]; v[1] = v[0] - v[1] * (a / b); v[0] = x; return;} //pass an arry of size1 3\r\n\r\nll mminv(ll a, ll b) {ll arr[3]; extendgcd(a, b, arr); return arr[0];} //for non prime b\r\n\r\nll mminvprime(ll a, ll b) {return expo(a, b - 2, b);}\r\n\r\nll combination(ll n, ll r, ll m, ll *fact, ll *ifact) {ll val1 = fact[n]; ll val2 = ifact[n - r]; ll val3 = ifact[r]; return (((val1 * val2) % m) * val3) % m;}\r\n\r\n\r\nll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}\r\nll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}\r\nll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}\r\nll mod_div(ll a, ll b, ll m) {a = a % m; b = b % m; return (mod_mul(a, mminvprime(b, m), m) + m) % m;}  //only for prime m\r\n\r\nll phin(ll n) {ll number = n; if (n % 2 == 0) {number /= 2; while (n % 2 == 0) n /= 2;} for (ll i = 3; i <= sqrt(n); i += 2) {if (n % i == 0) {while (n % i == 0)n /= i; number = (number / i * (i - 1));}} if (n > 1)number = (number / n * (n - 1)) ; return number;} //O(sqrt(N))\r\n\r\nvoid google(int t) {cout << \"Case #\" << t << \": \";}\r\n\r\nvector<ll> sieveVector(int n) {int*arr = new int[n + 1](); vector<ll> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}\r\n\r\nvector<int> sieve(int n){vector<int> primes(n + 1,1);primes[0] = 0;primes[1] = 0;for(int i = 2;i*i<=n;i++){if(primes[i]){for(int j = 2*i;j<=n;j+=i){primes[j] = 0;}}}return primes;}\r\n// change to j = i*i for better performance\r\nvector<int> spf(int n){vector<int> spf(n + 1);for(int i = 2;i<=n;i++){spf[i] = i;}for(int i = 2;i*i<=n;i++){if(spf[i] == i){for(int j = i * i;j<=n;j+=i){if(spf[j] == j)spf[j] = i;}}}return spf;}\r\n\r\n/*.....................................................*/\r\n\r\n\r\nint solve(int idx,int rem,vector<int> &arr,vector<vector<int>> &dp){\r\n\r\n\tint n = arr.size();\r\n\r\n\tif(idx == n){\r\n\t\tif(rem == 0) return 1;\r\n\t\telse return 0;\r\n\t}\r\n\r\n\tif(dp[idx][rem] != -1) return dp[idx][rem];\r\n\r\n\tint ans = 0;\r\n\r\n\tans += solve(idx + 1,rem,arr,dp); // not pick\r\n\r\n\tif((rem == 0) && (arr[idx] != 0) && (arr[idx] <= n)){\r\n\t\tans += solve(idx + 1,arr[idx],arr,dp); // pick\r\n\t\tans = ans % MOD1;\r\n\t}\r\n\telse if(rem != 0){\r\n\t\tans += solve(idx + 1,rem - 1,arr,dp); // pick\r\n\t\tans = ans % MOD1;\r\n\t}\r\n\r\n\tans = ans % MOD1;\r\n\r\n\treturn dp[idx][rem] = ans;\r\n}\r\n\r\nvoid testcases(int t){\r\n\tint n;\r\n\tcin>>n;\r\n\r\n\tvector<int> arr(n);\r\n\r\n\tfor(int i = 0;i<n;i++){\r\n\t\tcin>>arr[i];\r\n\t}\r\n\r\n\tvector<vector<int>> dp(n,vector<int> (n + 1,-1));\r\n\r\n\tint ans = solve(0,0,arr,dp);\r\n\r\n\tcout<<(ans-1 + MOD1)%MOD1<<endl;\r\n}\r\n\r\nsigned main(){\r\n\tfastio();\r\n\tint t=1;\r\n\t// cin>>t;\r\n\tfor(int i=0;i<t;i++){\r\n\t\ttestcases(i + 1);\r\n\t}\r\n}"
}