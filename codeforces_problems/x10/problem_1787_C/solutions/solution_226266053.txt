{
    "id": 226266053,
    "contestId": 1787,
    "creationTimeSeconds": 1696236390,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1787,
        "index": "C",
        "name": "Remove the Bracket",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1600,
        "tags": [
            "dp",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1787,
        "members": [
            {
                "handle": "Naitnal"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1675002900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#include <climits>\r\n#include <functional>\r\n#include <iomanip>\r\n#include <valarray>\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define mp make_pair\r\n#define fi first\r\n#define se second\r\n#define pii pair<int, int>\r\n#define pll pair<ll, ll>\r\n#define pb push_back\r\n#define rep(a, b, c) for (int a = b; a <= c; a++)\r\n#define per(a, b, c) for (int a = c; a >= b; a--)\r\n#define all(a) a.begin() + 1, a.end()\r\n#define all_(a) a.begin(), a.end()\r\n#define vi vector<int>\r\n#define vl vector<ll>\r\n#define vpii vector<pii>\r\n#define vpll vector<pll>\r\nconst int mod = 998244353;\r\nll gcd(ll a, ll b) {return b == 0 ? a : gcd(b, a % b);}\r\nll lcm(ll a, ll b) {return a / gcd(a, b) * b;}\r\nll fp_m (ll a, ll n) {\r\n    a %= mod;\r\n    ll res = 1; while (n) { if (n & 1) res = res * a % mod; a = a * a % mod; n >>= 1; } return res;\r\n}\r\nll fp (ll a, ll n) {\r\n    ll res = 1; while (n) { if (n & 1) res *= a; a *= a; n >>= 1; } return res;\r\n}\r\nll inv(ll x) {return fp_m(x, mod - 2);}\r\ntemplate<typename T>\r\nstd::ostream& operator<<(std::ostream& os, const std::vector<T>& vec) {\r\n    os << \"[\";\r\n    for (size_t i = 0; i < vec.size(); ++i) {\r\n        os << vec[i];\r\n        if (i < vec.size() - 1)\r\n            os << \", \";\r\n    }\r\n    os << \"]\";\r\n    return os;\r\n}\r\ntemplate<typename T, typename... Args>\r\nvoid debug(std::string name, T value, Args &&...arg) {\r\n    std::cout << name;\r\n    (..., (std::cout << '[' << arg << ']'));\r\n    std::cout << \" = \" << value << '\\n';\r\n}\r\n/*\r\n*/\r\nsigned main() {\r\n    std::ios::sync_with_stdio(0);\r\n    std::cin.tie(0); std::cout.tie(0);\r\n    int tt; std::cin >> tt;\r\n    while (tt--) {\r\n        int n, s; std::cin >> n >> s;\r\n        std::vector<int> a(n + 1);\r\n        for (int i = 1; i <= n; i++) {\r\n            std::cin >> a[i];\r\n        }\r\n        std::vector dp(n + 1, std::array<long long, 2>{(ll)4e18, (ll)4e18});\r\n        dp[1][0] = dp[1][1] = 0;\r\n        for (int i = 2; i <= n; i++) {\r\n            std::vector<long long> pre(2);\r\n            std::vector<long long> now(2);\r\n            if (i == 2) {\r\n                pre = {a[1], a[1]};\r\n            } else {\r\n                if (s >= a[i - 1]) {\r\n                    pre = {0, a[i - 1]};\r\n                } else {\r\n                    int max = s;\r\n                    int min = a[i - 1] - s;\r\n                    if (max < min) {\r\n                        std::swap(max, min);\r\n                    }\r\n                    pre = {min, max};\r\n                }\r\n            }\r\n            if (i == n) {\r\n                now = {a[n], a[n]};\r\n            } else {\r\n                if (s >= a[i]) {\r\n                    now = {0, a[i - 1]};\r\n                } else {\r\n                    int max = s;\r\n                    int min = a[i] - s;\r\n                    if (max < min) {\r\n                        std::swap(max, min);\r\n                    }\r\n                    now = {min, max};\r\n                }\r\n            }\r\n            for (int j = 0; j <= 1; j++) {\r\n                for (int k = 0; k <= 1; k++) {\r\n                    dp[i][k] = std::min(dp[i][k], dp[i - 1][j] + pre[j] * now[1 - k]);\r\n                }\r\n            }\r\n        }\r\n        std::cout << std::min(dp[n][0], dp[n][1]) << '\\n';\r\n    }\r\n} \r\n/*\r\n*/"
}