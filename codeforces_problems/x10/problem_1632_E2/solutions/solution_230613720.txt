{
    "id": 230613720,
    "contestId": 1632,
    "creationTimeSeconds": 1698712939,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1632,
        "index": "E2",
        "name": "Distance Tree (hard version)",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2700,
        "tags": [
            "binary search",
            "dfs and similar",
            "shortest paths",
            "trees"
        ]
    },
    "author": {
        "contestId": 1632,
        "members": [
            {
                "handle": "Sparkle_Twilight"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1643553300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 42,
    "timeConsumedMillis": 327,
    "memoryConsumedBytes": 30003200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nenum{N=300003};\r\nint i,j,u,v,n,T,dep,d[N],mx[N],f[N];\r\nbasic_string<int>G[N];\r\nvoid dfs(int u,int fa){\r\nint m=mx[u]=d[u]=d[fa]+1;\r\nfor(int&v:G[u])if(v!=fa){\r\ndfs(v,u);\r\nif(mx[u]<mx[v])m=mx[u],mx[u]=mx[v];\r\nelse m=max(m,mx[v]);\r\n}\r\nif(m)f[m-1]=max(f[m-1],mx[u]+m-2*d[u]);\r\n}\r\nmain(){\r\nfor(*d=-1,ios::sync_with_stdio(0),cin.tie(0),cin>>T;T--;cout<<'\\n'){\r\nfor(cin>>n,i=1;i<n;++i)cin>>u>>v,G[u]+=v,G[v]+=u;\r\ndfs(1,0),dep=mx[1];\r\nfor(i=n;~i;--i)f[i]=max(f[i],f[i+1]);\r\nfor(j=0,i=1;i<=n;++i){\r\nwhile(j<dep&&(f[j]+1>>1)+i>j)++j;\r\ncout<<j<<' ';\r\n}\r\nfor(i=0;i<=n+1;++i)f[i]=0,G[i].clear();\r\n}\r\n}"
}