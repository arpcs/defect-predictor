{
    "id": 232828117,
    "contestId": 1632,
    "creationTimeSeconds": 1700035403,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1632,
        "index": "E2",
        "name": "Distance Tree (hard version)",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2700,
        "tags": [
            "binary search",
            "dfs and similar",
            "shortest paths",
            "trees"
        ]
    },
    "author": {
        "contestId": 1632,
        "members": [
            {
                "handle": "Prean"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1643553300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 42,
    "timeConsumedMillis": 327,
    "memoryConsumedBytes": 58675200,
    "source": "// LUOGU_RID: 135205870\n#include<cstdio>\r\n#include<cctype>\r\nconst int M=3e5+5;\r\nint T,n,dfe,h[M],f[M],d[M],len[M],mx1[M],mx2[M],md1[M],md2[M],ans[M];\r\nstruct Edge{\r\n\tint v,nx;\r\n}e[M<<1];\r\ninline void Add(const int&u,const int&v){\r\n\te[++dfe]=(Edge){v,h[u]};h[u]=dfe;\r\n\te[++dfe]=(Edge){u,h[v]};h[v]=dfe;\r\n}\r\ninline int read(){\r\n\tint n(0);char s;while(!isdigit(s=getchar()));while(n=n*10+(s^48),isdigit(s=getchar()));return n;\r\n}\r\ninline void write(int n){\r\n\tstatic char s[20];int top(0);while(s[++top]=n%10^48,n/=10);while(putchar(s[top]),--top);\r\n}\r\ninline int max(const int&a,const int&b){\r\n\treturn a>b?a:b;\r\n}\r\ninline int min(const int&a,const int&b){\r\n\treturn a>b?b:a;\r\n}\r\ninline void DFS(const int&u){\r\n\tfor(int v,E=h[u];E;E=e[E].nx)if((v=e[E].v)^f[u]){\r\n\t\td[v]=d[u]+1;f[v]=u;DFS(v);len[u]=max(len[u],len[v]);\r\n\t\tif(mx1[v]+1>mx1[u])mx2[u]=mx1[u],mx1[u]=mx1[v]+1;else if(mx1[v]+1>mx2[u])mx2[u]=mx1[v]+1;\r\n\t}\r\n\tlen[u]=max(len[u],mx1[u]+mx2[u]);if(u==1)return;\r\n\tif(mx1[u]+d[u]>md1[d[u]])md2[d[u]]=md1[d[u]],md1[d[u]]=mx1[u]+d[u];\r\n\telse if(mx1[u]+d[u]>md2[d[u]])md2[d[u]]=mx1[u]+d[u];\r\n}\r\nsigned main(){\r\n\tT=read();\r\n\twhile(T--){\r\n\t\tn=read();for(int i=1;i<n;++i)Add(read(),read());DFS(1);\r\n\t\tfor(int i=0;i<=n;++i)ans[i]=mx1[1];\r\n\t\tfor(int u=2;u<=n;++u){\r\n\t\t\tint k=(len[u]+1)/2,b=max(mx1[u]+d[u]==md1[d[u]]?md2[d[u]]:md1[d[u]],d[u]-1);\r\n\t\t\tif(k>b)ans[0]=min(ans[0],k);else ans[b-k]=min(ans[b-k],b);\r\n\t\t}\r\n\t\tfor(int i=n-1;i>=1;--i)ans[i]=min(ans[i],ans[i+1]);\r\n\t\tfor(int i=1;i<=n;++i)write(ans[i]=min(ans[i],ans[i-1]+1)),putchar('\\n');putchar('\\n');\r\n\t\tfor(int i=0;i<=n;++i)h[i]=f[i]=d[i]=len[i]=mx1[i]=mx2[i]=md1[i]=md2[i]=ans[i]=0;\r\n\t}\r\n}"
}