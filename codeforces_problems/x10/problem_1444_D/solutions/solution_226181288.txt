{
    "id": 226181288,
    "contestId": 1444,
    "creationTimeSeconds": 1696173333,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1444,
        "index": "D",
        "name": "Rectangular Polyline",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2900,
        "tags": [
            "constructive algorithms",
            "dp",
            "geometry"
        ]
    },
    "author": {
        "contestId": 1444,
        "members": [
            {
                "handle": "sashatorba12022008"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1604228700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 42,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 138854400,
    "source": "#pragma GCC optimize(\"O3\", \"unroll-loops\")\r\n//#pragma GCC target(\"avx2\", \"bmi\", \"bmi2\", \"lzcnt\", \"popcnt\")\r\n#include <iostream>\r\n#include <array>\r\n#include <vector>\r\n#include <string>\r\n#include <algorithm>\r\n#include <stack>\r\n#include <cmath>\r\n#include <queue>\r\n#include <set>\r\n#include <map>\r\n#include <iomanip>\r\n#include <unordered_map>\r\n#include <random>\r\n#include <bitset>\r\n#include <chrono>\r\nusing namespace std;\r\nvector<bitset<1100000>> dp(1005);\r\nbool Divide(vector<int> a, vector<int>& l, vector<int>& r) {\r\n    int sum = 0;\r\n    for (auto i : a) {\r\n        sum += i;\r\n    }\r\n    if (sum % 2) {\r\n        return 0;\r\n    }\r\n    dp[0].reset();\r\n    dp[0].set(0);\r\n    for (int i = 0; i < a.size(); i++) {\r\n        dp[i + 1] = dp[i] | (dp[i] << a[i]);\r\n    }\r\n    if (dp[a.size()][sum / 2] == 0) {\r\n        return 0;\r\n    }\r\n    l.clear(); r.clear();\r\n    sum /= 2;\r\n    for (int i = a.size(); i > 0; i--) {\r\n        if (dp[i - 1][sum])l.push_back(a[i - 1]);\r\n        else r.push_back(a[i - 1]), sum -= a[i - 1];\r\n    }\r\n    return 1;\r\n}\r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int t; cin >> t;\r\n    while (t--) {\r\n        int n; cin >> n;\r\n        vector<int> v(n);\r\n        for (auto& i : v) {\r\n            cin >> i;\r\n        }\r\n        cin >> n;\r\n        vector<int> h(n);\r\n        for (auto& i : h) {\r\n            cin >> i;\r\n        }\r\n        sort(v.begin(), v.end()); sort(h.begin(), h.end());\r\n        vector<int> l, r, l1, r1;\r\n        if (v.size() != h.size() || !Divide(v, l, r) || !Divide(h, l1, r1)) {\r\n            cout << \"No\\n\"; continue;\r\n        }\r\n        cout << \"Yes\\n\";\r\n        if (l.size() > r.size()) {\r\n            swap(l, r);\r\n        }\r\n        if (l1.size() < r1.size()) {\r\n            swap(l1, r1);\r\n        }\r\n        sort(l.rbegin(), l.rend()); sort(r.rbegin(), r.rend()); sort(l1.begin(), l1.end()); sort(r1.begin(), r1.end());\r\n        for (auto i : r) {\r\n            l.push_back(-i);\r\n        }\r\n        for (auto i : r1) {\r\n            l1.push_back(-i);\r\n        }\r\n        int x = 0, y = 0;\r\n        for (int i = 0; i < n; i++) {\r\n            x += l[i];\r\n            cout << x << \" \" << y << endl;\r\n            y += l1[i];\r\n            cout << x << \" \" << y << endl;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n"
}