{
    "id": 229355239,
    "contestId": 1444,
    "creationTimeSeconds": 1698019647,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1444,
        "index": "D",
        "name": "Rectangular Polyline",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2900,
        "tags": [
            "constructive algorithms",
            "dp",
            "geometry"
        ]
    },
    "author": {
        "contestId": 1444,
        "members": [
            {
                "handle": "locsey"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1604228700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 63078400,
    "source": "#include <bits/stdc++.h>\r\n#define fi first \r\n#define se second \r\n\r\nusing std :: cin;\r\nusing std :: min; \r\nusing std :: max; \r\nusing std :: cout; \r\nusing std :: vector; \r\n\r\nconstexpr int M = 1005, N = 5e5 + 5; \r\nconstexpr int INF = 0x3f3f3f3f; \r\n\r\ntypedef long long ll; \r\ntypedef unsigned long long ull; \r\ntypedef double db; \r\ntypedef unsigned int ui; \r\ntypedef std :: pair < int, int > pii; \r\n\r\n//char buf[1 << 23], *p1 = buf, *p2 = buf, obuf[1 << 23], *O = obuf;\r\n//#define getchar() (p1 == p2) && (p2 = (p1 = buf) + fread(buf, 1, 1 << 21, stdin), p1 == p2)? EOF : *p1++\r\n\r\ninline int read() { \r\n\tint f = 1, s = 0; char ch = getchar(); \r\n\twhile(!isdigit(ch)) (ch == '-') && (f = -1), ch = getchar(); \r\n\twhile(isdigit(ch)) s = s * 10 + ch - '0', ch = getchar(); \r\n\treturn f * s; \r\n}\r\n\r\nnamespace Solver {\r\n\tint n, m, a[M], b[M], ok; \r\n\tstd :: bitset < N > dp[M];\r\n\tvector < int > A[2], B[2];\r\n\tinline void get(int n, int *a, vector < int > &A, vector < int > &B) {\r\n\t\tfor(int i = 0; i <= n; ++i) dp[i].reset(); dp[0][0] = 1; int s = 0; \r\n\t\tfor(int i = 1; i <= n; ++i) dp[i] = dp[i - 1] | (dp[i - 1] << a[i]), s += a[i];\r\n\t\tif(s & 1) return ok = 0, void(); int cur = s / 2;\r\n\t\tfor(int i = n; i; --i) {\r\n\t\t\tif(dp[i - 1][cur]) A.push_back(a[i]);\r\n\t\t\telse cur -= a[i], B.push_back(a[i]); \r\n\t\t}\r\n\t\tif(A.size() < B.size()) std :: swap(A, B); \r\n\t}\r\n\tinline void solve() {\r\n\t\tn = read();\r\n\t\tfor(int i = 0; i < 2; ++i) A[i].clear(), B[i].clear(); \r\n\t\tfor(int i = 1; i <= n; ++i) a[i] = read();\r\n\t\tm = read(); \r\n\t\tfor(int i = 1; i <= m; ++i) b[i] = read(); ok = 1;\r\n\t\tif(n ^ m) return puts(\"No\"), void(); \r\n\t\tget(n, a, A[0], A[1]), get(m, b, B[0], B[1]);\r\n\t\tif(!ok) return puts(\"No\"), void(); int re = 0; \r\n\t\tif(A[0].size() > B[0].size()) std :: swap(A[0], B[0]), std :: swap(A[1], B[1]), re = 1; \r\n\t\tfor(int i = 0; i < 2; ++i) std :: sort(A[i].begin(), A[i].end(), [](int x, int y) {return x > y;}), std :: sort(B[i].begin(), B[i].end());\r\n\t\tputs(\"Yes\"); vector < int > X, Y; int x = 0, y = 0;\r\n\t\tfor(int &z : A[0]) X.push_back(z); for(int &z : A[1]) X.push_back(-z);\r\n\t\tfor(int &z : B[0]) Y.push_back(z); for(int &z : B[1]) Y.push_back(-z);\r\n\t\tfor(int i = 0; i < n; ++i) {\r\n\t\t\tx += X[i]; if(!re) cout << x << ' ' << y << '\\n'; else cout << y << ' ' << x << '\\n'; \r\n\t\t\ty += Y[i]; if(!re) cout << x << ' ' << y << '\\n'; else cout << y << ' ' << x << '\\n'; \r\n\t\t}\r\n\t}\r\n\tinline void mian() {\r\n\t\tint t = read(); \r\n\t\twhile(t --) solve(); \r\n\t}\r\n\t\r\n}\r\n\r\nint main() \r\n{\r\n//\tfreopen(\"data.out\", \"r\", stdin); \r\n\tSolver :: mian(); \r\n\treturn 0; \r\n}   "
}