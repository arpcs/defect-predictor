{
    "id": 225660288,
    "contestId": 1444,
    "creationTimeSeconds": 1695909191,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1444,
        "index": "D",
        "name": "Rectangular Polyline",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2900,
        "tags": [
            "constructive algorithms",
            "dp",
            "geometry"
        ]
    },
    "author": {
        "contestId": 1444,
        "members": [
            {
                "handle": "complexor"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1604228700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 42,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 126156800,
    "source": "// LUOGU_RID: 126496534\n#include <cstdio>\n#include <algorithm>\n#include <cstring>\n#include <vector>\n#include <bitset>\ntypedef long long LL;\ntypedef std::pair<int, int> pii;\ntypedef std::pair<LL, LL> pll;\n#define MP std::make_pair\n#define fi first\n#define se second\nint read()\n{\n\tint s = 0, f = 1;\n\tchar c = getchar();\n\twhile (!(c >= '0' && c <= '9'))\n\t\tf ^= c == '-', c = getchar();\n\twhile (c >= '0' && c <= '9')\n\t\ts = s * 10 + (c - '0'), c = getchar();\n\treturn f ? s : -s;\n}\nconst int MAXN = 1005;\nint n, a[MAXN], b[MAXN], m;\npii ansa[MAXN], ansb[MAXN];\nstd::bitset<1000005> f[MAXN];\nstd::vector<int> x[2], y[2];\nbool divide(int n, int a[], std::vector<int> &x, std::vector<int> &xx)\n{\n\tx.clear(), xx.clear();\n\tf[0].set(0);\n\tint s = 0;\n\tfor (int i = 1; i <= n; i++) \n\t\ts += a[i], f[i] = f[i - 1] | (f[i - 1] << a[i]);\n\tif ((s & 1) || !f[n][s / 2]) return false;\n\ts >>= 1;\n\tfor (int i = n; i; i--)\n\t\tif (s >= a[i] && f[i - 1][s - a[i]])\n\t\t\ts -= a[i], x.push_back(a[i]);\n\t\telse xx.push_back(a[i]);\n\tfor (int i = 0; i <= n; i++) f[i].reset();\n\treturn true;\n}\nint main()\n{\n\tfor (int T = read(); T--; )\n\t{\n\t\tn = read();\n\t\tfor (int i = 1; i <= n; i++) a[i] = read();\n\t\tm = read();\n\t\tfor (int i = 1; i <= m; i++) b[i] = read();\n\t\tif (n != m || !divide(n, a, x[0], x[1]) || !divide(m, b, y[0], y[1]))\n\t\t{ printf(\"No\\n\"); continue; }\n\n\t\tprintf(\"Yes\\n\");\n\t\tbool rev = false;\n\t\tif (x[0].size() > y[0].size()) rev = true, std::swap(x, y);\n\t\tstd::sort(x[0].begin(), x[0].end(), std::greater<int>());\n\t\tstd::sort(x[1].begin(), x[1].end(), std::greater<int>());\n\t\tstd::sort(y[0].begin(), y[0].end());\n\t\tstd::sort(y[1].begin(), y[1].end());\n\n\t\tint l1 = x[0].size(), curx = 0, cury = 0, l2, l3;\n\t\tfor (int i = 0; i < l1; i++)\n\t\t{\n\t\t\tprintf(\"%d %d\\n\", curx, cury), (!rev ? curx : cury) += x[0][i];\n\t\t\tprintf(\"%d %d\\n\", curx, cury), (!rev ? cury : curx) += y[0][i];\n\t\t}\n\n\t\tl2 = y[0].size() - l1;\n\t\tfor (int i = 0; i < l2; i++)\n\t\t{\n\t\t\tprintf(\"%d %d\\n\", curx, cury), (!rev ? curx : cury) -= x[1][i];\n\t\t\tprintf(\"%d %d\\n\", curx, cury), (!rev ? cury : curx) += y[0][i + l1];\n\t\t}\n\n\t\tl3 = y[1].size();\n\t\tfor (int i = 0; i < l3; i++)\n\t\t{\n\t\t\tprintf(\"%d %d\\n\", curx, cury), (!rev ? curx : cury) -= x[1][i + l2];\n\t\t\tprintf(\"%d %d\\n\", curx, cury), (!rev ? cury : curx) -= y[1][i];\n\t\t}\n\t}\n\treturn 0;\n}"
}