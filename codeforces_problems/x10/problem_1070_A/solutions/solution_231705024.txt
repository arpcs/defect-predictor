{
    "id": 231705024,
    "contestId": 1070,
    "creationTimeSeconds": 1699354888,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1070,
        "index": "A",
        "name": "Find a Number",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "dp",
            "graphs",
            "number theory",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1070,
        "members": [
            {
                "handle": "ShortSpeed"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1540022700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 204800,
    "source": "#include <iostream>\r#include<bits/stdc++.h>\r#include<deque>\r#include<algorithm>\r#include<math.h>\r#include<sstream>\r#include<stdio.h>\r#include<bitset>\r#include<string>\r#include<vector>\r#include<unordered_map>\r#include<queue>\r#include<set>\r#include<fstream>\r#include<map>\r#define ld long double\r#define pi 3.1415926535897932384626433832795028841971\r#define MOD1 998244353\rusing namespace std;\rrandom_device seed_gen;\rmt19937_64 engine(seed_gen());\rint dx[4] = {1, 0, -1, 0};\rint dy[4] = {0, 1, 0, -1};\rtemplate <typename T, typename U> void debug(std::vector<pair<T, U>> v) {for (int i = 0; i < v.size(); i++) cout << \"[ \" << v[i].first << \" \" << v[i].second << \" ]\\n\"; cout << \"\\n\";}\rtemplate <typename T> void debug(std::vector<T> v) {cout << \"[ \"; for (int i = 0; i < v.size(); i++) cout << v[i] << \" \"; cout << \"]\\n\";}\rtemplate <typename T> void debug(std::set<T> v) {cout << \"[ \"; for (auto x : v) cout << x << \" \"; cout << \"]\\n\";}\rtemplate <typename T> void debug(std::multiset<T> v) {cout << \"[ \"; for (auto x : v) cout << x << \" \"; cout << \"]\\n\";}\rtemplate <typename T> void debug(vector<vector<T>> v) {int n = v.size(), m = v[0].size(); for (int i = 0; i < n; i++) {cout << \"[ \"; for (int j = 0; j < m; j++) cout << v[i][j] << \" \"; cout << \"]\\n\";}}\rtemplate <typename T> void debug(T i) {cout << \"[ \" << i << \" ]\\n\";}\rtemplate <typename T, typename U> void debug(T i, U j) {cout << \"[ \" << i << \" \" << j << \" ]\\n\";}\rtemplate <typename T, typename U, typename V> void debug(T i, U j, V k) {cout << \"[ \" << i << \" \" << j << \" \" << k << \" ]\\n\";}\rtemplate <typename T, typename U, typename V, typename X> void debug(T i, U j, V k, X l) {cout << \"[ \" << i << \" \" << j << \" \" << k << \" \" << l << \" ]\\n\";}\rtemplate <typename T, typename U> void debug(pair<T, U> x) {cout << \"[ \" << x.first << \" \" << x.second << \" ]\\n\";}\r\r\rint expo(int a, int b, int mod) {\r    int res = 1;\r    while (b > 0)\r    {   if (b & 1)\r            res = (res * a) % mod;\r        a = (a * a) % mod;\r        b = b >> 1;\r    } return res;\r}\rint gcd(int a, int b) {\r    if (b == 0) return a;\r    return gcd(b, a % b);\r}\rint mminvprime(int a, int b) {\r    return expo(a, b, b + 2);\r}\rstruct node\r{\r    int mod;\r    long long sum;\r    string s;\r    node(int mod, int sum, string s) {\r        this->mod = mod;\r        this->sum = sum;\r        this->s = s;\r    }\r};\rint main() {\r#ifndef ONLINE_JUDGE\r    freopen(\"input.txt\", \"r\", stdin);\r    freopen(\"output.txt\", \"w\", stdout);\r#endif\r    int f, s;\r    cin >> f >> s;\r    queue<node> q;\r    q.push(node(0, 0, \"\"));\r    string ans = \"-1\";\r    bool dp[f + 1][s + 1];\r    memset(dp, 0, sizeof dp);\r    while (!q.empty()) {\r        node cur = q.front();\r        q.pop();\r        if (cur.sum == s && cur.mod == 0) {\r            ans = cur.s;\r            break;\r        }\r        if (dp[cur.mod][cur.sum]) continue;\r        dp[cur.mod][cur.sum] = 1;\r        if (cur.sum <= s) {\r            for (int i = 0; i < 10; ++i)\r            {\r                int mmod = (cur.mod * 10 + i) % f;\r                long long ssum = cur.sum + i;\r                if (ssum <= s && dp[mmod][ssum] == 0)\r                {\r                    dp[mmod][ssum] = 1;\r                    q.push(node(mmod, ssum, cur.s + (char)(i + '0')));\r                }\r            }\r        }\r    }\r    cout << ans;\r    return 0;\r}"
}