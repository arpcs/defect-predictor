{
    "id": 219374785,
    "contestId": 1070,
    "creationTimeSeconds": 1692305619,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1070,
        "index": "A",
        "name": "Find a Number",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "dp",
            "graphs",
            "number theory",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1070,
        "members": [
            {
                "handle": "pizzaStieve"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1540022700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 25190400,
    "source": "#include<bits/stdc++.h>\r\n#define ll long long\r\n#define SD ios::sync_with_stdio(0);cin.tie(0);cout.tie(0)\r\n#define flot(n) cout << setprecision(n) << setiosflags(ios::fixed) << setiosflags(ios::showpoint)\r\n#define all(a) (a).begin() , (a).end()\r\n#define F first\r\n#define S second\r\n#define pii pair<int,int>\r\n#define pb push_back\r\n#define piii pair<pii,int>\r\n#define endl '\\n'\r\n//#define int ll\r\nusing namespace std;\r\nvoid readFromFile(string input = \"input.txt\",string output=\"output.txt\") {\r\n    #ifndef ONLINE_JUDGE\r\n        freopen(input.c_str(),\"r\",stdin);\r\n        freopen(output.c_str(),\"w\",stdout);\r\n    #endif\r\n}\r\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\r\nll rnd(ll x, ll y) {\r\n    return uniform_int_distribution<ll>(x, y)(rng);\r\n}\r\nconst int INF = 0x3f3f3f3f;\r\nconst ll INFLL = 0x3f3f3f3f3f3f3f3f;\r\nconst long double EPS = 1e-6;\r\nconst long double pi = acos(-1.0);\r\nconst int mod=1e9+7;\r\nconst int N = 5e6+5;\r\nconst int sq = 500;\r\nint d,s;\r\nint memo[5001][501][2];\r\nbool vis[5001][501][2];\r\nint dp(int sum,int md,bool nt) {\r\n    if(sum > s) return 5000*500+1;\r\n    if(sum == s && md == 0) return 0;\r\n    int &ret = memo[sum][md][nt];\r\n    if(vis[sum][md][nt]) {\r\n        return ret;\r\n    }\r\n    vis[sum][md][nt] = 1;\r\n    ret = 5000*500+1;\r\n    for(int i = !nt ; i <= 9 ; i++) {\r\n        ret = min(ret,1+dp(sum+i,(md*10+i)%d,nt|(i>0)));\r\n    }\r\n    return ret;\r\n}\r\nvoid build(int sum,int md,bool nt) {\r\n    if(sum == s && md == 0) return;\r\n    int ret = memo[sum][md][nt];\r\n    for(int i = !nt ; i <= 9 ; i++) {\r\n        if(1+dp(sum+i,(md*10+i)%d,nt|(i>0)) == ret) {\r\n            cout << i;\r\n            build(sum+i,(md*10+i)%d,nt|(i>0));\r\n            return;\r\n        }\r\n    }\r\n}\r\nvoid solve() {\r\n    cin >> d >> s;\r\n    string str;cin >> str;\r\n    int z = dp(0,0,0);\r\n    int zz = 4e9;\r\n    if(z >= 5000*500+1 || z <= 0)cout << -1 << endl;\r\n    else build(0,0,0);\r\n}\r\nint main() {\r\n    readFromFile();\r\n    SD;\r\n    int t = 1;\r\n//    cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n}\r\n"
}