{
    "id": 231630436,
    "contestId": 1070,
    "creationTimeSeconds": 1699294602,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1070,
        "index": "A",
        "name": "Find a Number",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "dp",
            "graphs",
            "number theory",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1070,
        "members": [
            {
                "handle": "AnotherLove"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1540022700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 185,
    "timeConsumedMillis": 919,
    "memoryConsumedBytes": 19148800,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n#define rep(a,b) for(int i=a;i<b;i++)\n#define IOS ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n#define rety return cout<<\"YES\",0;\n#define retn return cout<<\"NO\",0;\n#define yes  cout << \"YES\" << endl;\n#define no  cout << \"NO\" << endl;\n#define all(x) (x).begin(), (x).end()\n#include <ext/pb_ds/assoc_container.hpp>\nusing namespace __gnu_pbds;\ntypedef tree<long long,null_type,less_equal<long long>,rb_tree_tag,\ntree_order_statistics_node_update> os;\n#define print(g) for(auto x:g)\ntypedef long long ll;\ntypedef double db;\ntypedef long double ld;\n#define st string\n#define ff first\n#define ss second\n#define lb lower_bound\n#define ub upper_bound\n#define pb push_back\n#define eb emplace_back\n#define ve vector<ll>\n#define se set<ll>\n#define priq priority_queue<ll>\n#define priq_p priority_queue<pair<ll,ll>>\n#define vep vector<pair<ll,ll>>\nll mod=1e9+7,mod2=998244353;\n//*---------------------------------------------------------------------*/\nstruct node{\n   int md,sum;\n   string ans;\n};\nint vis[505][5005];\nint main()\n{\n  IOS;\n  ll p,x;\n  cin>>p>>x;\n   queue<node>q;\n   q.push({0,0,\"\"});\n\n   vis[0][0]=1;\n\n   while(!q.empty())\n   {\n     node u=q.front();\n     q.pop();\n\n     if(u.sum>x)\n        continue;\n\n      if(u.md==0 && u.sum==x)\n      {\n        cout<<u.ans<<endl;\n        return 0;\n      }\n      for(int i=0;i<=9;i++)\n      {\n        int a=(u.md*10+i)%p;\n        int b=u.sum+i;\n\n        if(!vis[a][b])\n        {\n          vis[a][b]=1;\n          q.push({a,b,u.ans+(char)(i+'0')});\n        }\n      }\n   }\n   cout<<-1<<endl;\n}\n"
}