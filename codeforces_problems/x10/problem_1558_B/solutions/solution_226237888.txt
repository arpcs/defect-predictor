{
    "id": 226237888,
    "contestId": 1558,
    "creationTimeSeconds": 1696219023,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1558,
        "index": "B",
        "name": "Up the Strip",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "brute force",
            "dp",
            "math",
            "number theory",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1558,
        "members": [
            {
                "handle": "arodnap33"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1629815700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 33,
    "timeConsumedMillis": 2074,
    "memoryConsumedBytes": 32051200,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing i64 = long long;\r\nusing namespace std;\r\n\r\nmt19937_64 gen64(chrono::steady_clock::now().time_since_epoch().count());\r\nmt19937 gen(chrono::steady_clock::now().time_since_epoch().count());\r\nuniform_int_distribution<i64> distrib(1, LLONG_MAX);\r\n\r\nvector<vector<i64>> matrixMul(vector<vector<i64>>& a, vector<vector<i64>>& b,\r\n                              i64 mod) {\r\n    int n = (int)a.size();\r\n    int m = (int)b[0].size();\r\n    vector<vector<i64>> c(n, vector<i64>(m));\r\n    for (int i = 0; i < n; i++) {\r\n        for (int j = 0; j < m; j++) {\r\n            for (int k = 0; k < (int)b.size(); k++) {\r\n                c[i][j] = (c[i][j] + a[i][k] * b[k][j] % mod) % mod;\r\n            }\r\n        }\r\n    }\r\n    return c;\r\n}\r\n\r\n// const int d = 30;\r\n\r\n// struct XorBasis {\r\n//     int basis[d];\r\n\r\n//     void init() {\r\n//         for (int i = 0; i < d; i++) basis[i] = 0;\r\n//     }\r\n\r\n//     void insert(int mask) {\r\n//         for (int i = d - 1; i >= 0; i--) {\r\n//             if (((mask >> i) & 1) == 0) continue;\r\n\r\n//             if (!basis[i]) {\r\n//                 basis[i] = mask;\r\n//                 return;\r\n//             }\r\n//             mask ^= basis[i];\r\n//         }\r\n//     }\r\n\r\n//     void merge(const XorBasis& from) {\r\n//         for (int i = d - 1; i >= 0; i--) {\r\n//             if (!from.basis[i]) continue;\r\n\r\n//             insert(from.basis[i]);\r\n//         }\r\n//     }\r\n\r\n//     int findMax() {\r\n//         int ret = 0;\r\n//         for (int i = d - 1; i >= 0; i--) {\r\n//             if (!basis[i] || (ret >> i & 1)) continue;\r\n\r\n//             ret ^= basis[i];\r\n//         }\r\n//         return ret;\r\n//     }\r\n// };\r\n\r\ni64 ceil(i64 a, i64 b) { return (a + b - 1) / b; }\r\n\r\nint ceil(int a, int b) { return (a + b - 1) / b; }\r\n\r\n// https://codeforces.com/problemset/problem/1725/C\r\n// https://codeforces.com/contest/1863/problem/E\r\n// https://codeforces.com/contest/1691/problem/D\r\n// https://codeforces.com/problemset/problem/1712/D\r\n// https://codeforces.com/problemset/problem/1696/E\r\n// https://codeforces.com/contest/1678/problem/C\r\n// https://codeforces.com/problemset/problem/1682/D\r\n// https://codeforces.com/contest/1674/problem/E\r\n// https://codeforces.com/contest/1611/problem/G\r\n// https://codeforces.com/contest/1622/problem/E\r\n// https://codeforces.com/problemset/problem/1613/D\r\n\r\n// https://codeforces.com/problemset/problem/1641/B\r\n// https://codeforces.com/contest/1619/problem/H\r\n// https://codeforces.com/problemset/problem/1612/E\r\n// https://codeforces.com/contest/1593\r\n// https://codeforces.com/contest/1610/problem/D\r\n// https://codeforces.com/contest/1574\r\n\r\nconst i64 MOD = 998244353;\r\nint add(int x, int y) {\r\n    x += y;\r\n    while (x >= MOD) x -= MOD;\r\n    while (x < 0) x += MOD;\r\n    return x;\r\n}\r\n\r\nbool frac_greater(pair<int, int> a, pair<int, int> b) {\r\n    return a.first * b.second > a.second * b.first;\r\n}\r\n\r\nbool intersect(pair<int, int> a, pair<int, int> b) {\r\n    if (a.first > b.first) swap(a, b);\r\n    return a.second > b.first and a.second < b.second;\r\n}\r\n\r\nvoid solve() {\r\n    i64 n, m;\r\n\r\n    cin >> n >> m;\r\n\r\n    vector<i64> f(n + 1);\r\n\r\n    f[1] = 1;\r\n\r\n    for (int i = 2; i <= n; i++) {\r\n        if (i == 2) {\r\n            f[2] = 2;\r\n        } else {\r\n            f[i] = (f[i] + 2 * f[i - 1] % m + 1) % m;\r\n        }\r\n\r\n        for (int j = i + i; j <= n; j += i) {\r\n            f[j] = (f[j] + f[i] - f[i - 1] + m) % m;\r\n        }\r\n    }\r\n\r\n    cout << f[n] << \"\\n\";\r\n}\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n\r\n    // int tt;\r\n    // cin >> tt;\r\n    // while (tt--) {\r\n    //     solve();\r\n    // }\r\n    solve();\r\n}\r\n"
}