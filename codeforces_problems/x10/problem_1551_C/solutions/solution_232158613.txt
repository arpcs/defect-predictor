{
    "id": 232158613,
    "contestId": 1551,
    "creationTimeSeconds": 1699567338,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1551,
        "index": "C",
        "name": "Interesting Story",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "greedy",
            "sortings",
            "strings"
        ]
    },
    "author": {
        "contestId": 1551,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1627050900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 40140800,
    "source": "#include <bits/stdc++.h>\n#define ll long long\n#define FAST                 \\\n    ios::sync_with_stdio(0); \\\n    cin.tie(0);              \\\n    cout.tie(0);\nll mod=1e9+7 ;\nusing namespace std;\n\nlong long const inf=1e18;\nlong long const modo=998244353;\nint dx[]={1,-1,0,0};\nint dy[]={0,0,1,-1};\nconst int N = 1e7+2;\nvector<int> lp(N+1);\nvector<int> pr;\nvoid lpf() {\n    for (int i = 2; i <= N; ++i) {\n        if (lp[i] == 0) {\n            lp[i] = i;\n            pr.push_back(i);\n        }\n\n        for (int j = 0; i * pr[j] <= N; ++j) {\n            lp[i * pr[j]] = pr[j];\n            if (pr[j] == lp[i]) {\n                break;\n            }\n        }\n    }\n}\nbool isPrime(long long  n)\n{\n    // Corner case\n    if (n <= 1)\n        return false;\n\n    // Check from 2 to n-1\n    for (long long  i = 2; i *i<= n; i++)\n        if (n % i == 0)\n            return false;\n\n    return true;\n}\nll power(ll x, ll p) {\n    ll ret = 1;\n    while (p) {\n        if (p & 1) ret = (1LL * ret * x) % mod;\n        x = (1LL * x * x) % mod;\n        p >>= 1;\n    }\n    return ret;\n}\n\nint modInverse(int x) {\n    return power(x, mod - 2);\n}\nbool ispal(string s) {\n    for(int i=0;i<s.size()/2;i++)\n        if(s[i]!=s[s.size()-i-1])\n            return false;\n    return true;\n}\nbool comp(string s1,string s2)\n{\n    if(s1.size()==s2.size())\n        return s1<s2;\n    else\n    {\n        return s1.size()<s2.size();\n    }\n}\nll numberOfDivisors(ll n)\n{\n    int primes[]={2,3,5,7,11,13,17,19};\n    ll num=1,ans=1;\n    for (int it:primes)\n    {\n        int c=0;\n        while(n%it==0)\n        {\n            n/=it;\n            c++;\n        }\n        ans*=c+1;\n        num*=it;\n    }\n    int all=0;\n    for(int i=1;i<num;i++)\n    {\n        bool can=1;\n        for (int it:primes)\n        {\n            if(i%it==0)\n            {\n                can=0;\n            }\n        }\n        if(can)\n        {\n            ll o=i;\n            for (;o*o<n;o+=num)\n            {\n                if(n%o==0)\n                {\n                    all += 2;\n                }\n            }\n            if (o*o==n)\n            {\n                all++;\n            }\n        }\n    }\n    return ans*all;\n}\nbool cycle=false;\nvoid dfs(int node,int par,vector<int>adjlist[],vector<int>&vis,vector<int>&temp){\n    vis[node]=2;\n    temp.push_back(node);\n    for(auto c:adjlist[node])\n        if(!vis[c])\n            dfs(c,node,adjlist,vis,temp);\n        else if(vis[c]==2&&c!=par) {\n            int num=0;\n            for(int i=temp.size();i>=0;i--){\n                if(temp[i]==c)\n                    break;\n                num++;\n            }\n            if(num&1)\n                cycle= true;\n        }\n    temp.pop_back();\n\n    vis[node]=1;\n}\nmap<int , int> primefactors(int n)\n{\n    map<int,int>a;\n    while(n!=1) {\n        a[lp[n]]++;\n        n/=lp[n];\n    }\n    return a;\n}\nbool cmp(pair<int,int>a,pair<int,int>b){\n    if(a.first==b.first)\n        return a.second>b.second;\n    else\n        return a.second<b.second;\n}\n\nsigned main() {\n\n    FAST\n#ifndef ONLINE_JUDGE\n    freopen(\"Input.txt\", \"r\", stdin);\n    freopen(\"Output.txt\", \"w\", stdout);\n#endif\n\n    int t;\n    cin>>t;\n    while (t--) {\n        int n;\n        cin>>n;\n        map<char,vector<pair<int,int>>>mp;\n        map<char,int>freq;\n        int lim=0;\n        for(int i=0;i<n;i++) {\n            string s;\n            cin>>s;\n            map<char,int>temp;\n            lim+=(int)s.size();\n            for(auto c:s)\n                temp[c]++,freq[c]++;\n            for(char j='a';j<='z';j++){\n                if(temp[j]<(s.size()+1)/2)\n                    mp[j].push_back({(int)s.size()-temp[j],temp[j]});\n            }\n\n        }\n        int ans=0;\n        char dude='2';\n        for(char i='a';i<='z';i++){\n            if(freq[i]>lim-freq[i]) {\n                if (n >= ans) {\n                    ans = n;\n\n                    dude = i;\n                }\n            }\n            else {\n                auto vec1=mp[i];\n                sort(vec1.begin(),vec1.end(),cmp);\n                int x=lim-freq[i];\n                int fr=freq[i];\n                int cnt=0;\n                for(int j=0;j<vec1.size();j++){\n                    fr-=vec1[j].second;\n                    x-=vec1[j].first;\n                    cnt++;\n                    if(fr>x)\n                        break;\n                }\n                if(n-cnt>=ans&&fr>x){\n                    ans=n-cnt;\n                    //cout<<cnt<<\" \"<<\"test\"<<\" \"<<i<<\"\\n\";\n                    dude=i;\n                }\n            }\n        }\n        cout<<ans<<\"\\n\";\n    }\n}\n\t \t \t \t    \t       \t\t  \t\t\t \t \t\t"
}