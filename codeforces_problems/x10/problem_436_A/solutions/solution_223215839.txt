{
    "id": 223215839,
    "contestId": 436,
    "creationTimeSeconds": 1694609806,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 436,
        "index": "A",
        "name": "Feed with Candy",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1500,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 436,
        "members": [
            {
                "handle": "HAIZENBURG"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1402673400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 60,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include<bits/stdc++.h>\r\n// primes 2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101\r\n// abcdefghijklmnopqrstuvwxyz\r\n#define PI 3.14159265359\r\ntypedef long long ll;//CLAWNS CAN NOT STOP SAYING   \u064a\u0627\u0631\u0628 \u0641\u0643 \u0627\u0644\u062f\u064a\u0642\u0629\r\n#define FAST ios::sync_with_stdio(0); cin.tie(NULL); cout.tie(0);\r\n#define on(n,k) ((n) | (1<<k))\r\n#define of(n,k) ((n) & (~(1<<k)))\r\n#define E   -1e9\r\nusing namespace std;\r\nbool prime(int n) {\r\n    int sq = sqrt(n);\r\n    for (int i = 2; i <= sq; i++)\r\n        if (n%i == 0)\r\n            return false;\r\n    return true;\r\n}\r\n//modulars\r\nll add(ll a,ll b,ll x)\r\n{\r\n    return ((a%x)+(b%x))%x ;\r\n}\r\nll sub(ll a,ll b,ll x)\r\n{\r\n    return ((a%x)-(b%x)+x)%x;\r\n}\r\nll mul(ll a,ll b,ll x)\r\n{\r\n    return ((a%x)*(b%x))%x;\r\n}\r\n//binary exponentiation\r\nll fpow(ll a,ll n)\r\n{\r\n    ll ans=1;\r\n    while (n>0)\r\n    {\r\n        if((n&1)==1)\r\n        {\r\n            ans=(ans*a);\r\n        }\r\n        a=a*a;\r\n        n/=2;\r\n    }\r\n    return ans;\r\n}\r\n// modular Exponentiation\r\nll modfpow(ll x,ll n,ll m)\r\n{\r\n    ll ans=1;\r\n    while (n>0)\r\n    {\r\n        if((n&1))\r\n        {\r\n            ans=(ans*x)%m;\r\n        }\r\n        x=(x*x)%m;\r\n        n/=2;\r\n    }\r\n    return ans;\r\n}\r\n\r\nvoid sieve_primes()\r\n{\r\n    // vis must be out we usage\r\n    bool vis[1000001]{0};\r\n    vis[0]=vis[1]=1;\r\n    for(ll i=2;i*i<1000001;i++)\r\n    {\r\n        if(vis[i]==0)\r\n        {\r\n            for(ll j=i*i;j<1000001;j+=i)\r\n            {\r\n                vis[j]=1;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n// GCD info\r\n/*\r\n * --> lcm(a,b)=a*b/gcd(a,b);\r\n * gcd(x,0)=x\r\n */\r\n\r\n// Combinatorices info\r\n/*\r\n *  how of many subset of length k can i have from arr of size n ??\r\n *  --> (n k) == n!/(k!((n-k)!))\r\n\r\n *  // geometric progression\r\n *  -->( a+ ak + ak2 +\u00b7\u00b7\u00b7 + b) = ( bk -a ) / ( k-1 );\r\n *  ..> ( 1 2 4 8 16 ) = ( 1*2^0 1*2^1 ....b) =( 16*2 - 1)/1\r\n */\r\n//\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\r\nll n,k,mx=0;\r\nvector<pair<ll,pair<ll,ll>>>v;\r\nbool vis1[3000];\r\nvoid dy(ll kth,ll pr,ll nm)\r\n{\r\n    mx=max(mx,nm);\r\n// mass, t, h\r\n    if(nm>n)return;\r\n    ll c=0;\r\n    for(auto i:v)\r\n    {\r\n        if(i.second.first!=pr and vis1[c]==0)\r\n        {\r\n            if(i.second.second<=kth )\r\n            {\r\n                vis1[c]=1;\r\n                dy(kth+i.first,i.second.first,nm+1);\r\n                break;\r\n            }\r\n        }\r\n        c++;\r\n    }\r\n}\r\nvoid clawn()\r\n{\r\n    cin>>n>>k;\r\n    memset(vis1,0,sizeof vis1);\r\n    v.resize(n); //  mass, t, h\r\n                         //  t h m\r\n    for(auto &i:v) {\r\n        cin >> i.second.first>>i.second.second>>i.first;\r\n    }\r\n    sort(v.rbegin(),v.rend());\r\n    ll c=0;\r\n    for(auto &i:v) {\r\n        if(i.second.first==0 and i.second.second<=k)\r\n        {\r\n            vis1[c]=1;\r\n            dy(k+i.first,0,1);\r\n            break;\r\n        }\r\n        c++;\r\n    }\r\n    memset(vis1,0,sizeof vis1);\r\n     c=0;\r\n    for(auto &i:v) {\r\n        if(i.second.first==1 and i.second.second<=k)\r\n        {\r\n            vis1[c]=1;\r\n            dy(k+i.first,1,1);\r\n            break;\r\n        }\r\n        c++;\r\n    }\r\n\r\n    cout<<mx<<endl;\r\n}\r\nint main() {\r\n\r\n    FAST;\r\n    // freopen(\"in.txt\",\"rt\",stdin);\r\n    // freopen(\"out.txt\",\"wt\",stdout);\r\n    int t=1;\r\n  // cin >> t;\r\n    for(ll i=1;i<=t;i++)\r\n        clawn();\r\n\r\n}"
}