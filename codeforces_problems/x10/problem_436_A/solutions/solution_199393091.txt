{
    "id": 199393091,
    "contestId": 436,
    "creationTimeSeconds": 1679912893,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 436,
        "index": "A",
        "name": "Feed with Candy",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1500,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 436,
        "members": [
            {
                "handle": "Tawfique007"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1402673400
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "/* Tawfique007\r\n *\r\n * Toufiqul Islam\r\n * CSE (18-19) - Rajshahi University\r\n *\r\n **/\r\n\r\n#ifndef OPT\r\n/* #pragma GCC optimize(\"O3\") */\r\n#pragma GCC optimize(\"Ofast,unroll-loops\")\r\n/* #pragma GCC target(\"avx,avx2,avx512,fma\") */\r\n#endif\r\n\r\n#include <bits/stdc++.h>\r\n\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\ntemplate <typename T> using oset = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\n/*--- Windows Specific ---*/\r\n#ifdef _WIN32\r\n// no getchar_unlocked on Windows so just call getchar\r\ninline int getchar_unlocked()\r\n{\r\n    return _getchar_nolock();\r\n}\r\ninline void putchar_unlocked(int c)\r\n{\r\n    _putchar_nolock(c);\r\n}\r\n#endif\r\n\r\n/*--- Basic Macros ---*/\r\n#define endl \"\\n\"\r\n#define ll int64_t\r\n#define ull uint64_t\r\n#define ld long double\r\n#define vt vector\r\n#define vti vt<int>\r\n#define vtl vt<ll>\r\n#define ar array\r\n#define pb push_back\r\n#define ff first\r\n#define ss second\r\n\r\n#define all(x) (x).begin(), (x).end()\r\n#define rall(x) (x).rbegin(), (x).rend()\r\n#define srt(x) sort(all((x)))\r\n#define rsrt(x) sort(rall((x)))\r\n#define sz(x) static_cast<int>((x).size())\r\n\r\n/*--- For Loop Macros ---*/\r\n#define F_OR(i, a, n, s) for (int i = (a); (s) > 0 ? i < (n) : i > (n); i += (s))\r\n#define F_OR1(n) F_OR(i, 0, n, 1)\r\n#define F_OR2(i, n) F_OR(i, 0, n, 1)\r\n#define F_OR3(i, a, n) F_OR(i, a, n, 1)\r\n#define F_OR4(i, a, n, s) F_OR(i, a, n, s)\r\n#define W_FOR(a, b, c, d, e, ...) e\r\n#define F_ORC(...) W_FOR(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1)\r\n#define FOR(...) F_ORC(__VA_ARGS__)(__VA_ARGS__)\r\n#define EACH(x, a) for (auto &x : a)\r\n\r\n/*--- Read Functions ---*/\r\n\r\nint nxtc()\r\n{\r\n    int c = getchar_unlocked();\r\n    while (c < '!' || c > '~')\r\n        c = getchar_unlocked();\r\n    return c;\r\n}\r\n\r\nint nxt()\r\n{\r\n    int x = 0;\r\n    bool negative = false;\r\n    int c = getchar_unlocked();\r\n    while ((c < '0' || c > '9') && c != '-')\r\n    {\r\n        c = getchar_unlocked();\r\n    }\r\n\r\n    if (c == '-')\r\n    {\r\n        negative = true;\r\n        c = getchar_unlocked();\r\n    }\r\n    while (c >= '0' && c <= '9')\r\n    {\r\n        x = (x << 1) + (x << 3) + c - 48;\r\n        c = getchar_unlocked();\r\n    }\r\n\r\n    if (negative)\r\n    {\r\n        return -x;\r\n    }\r\n\r\n    return x;\r\n}\r\n\r\nstring nxts()\r\n{\r\n    string i = \"\";\r\n    int temp = getchar_unlocked();\r\n    while (temp < '!' || temp > '~')\r\n        temp = getchar_unlocked();\r\n    while (temp >= '!' && temp <= '~')\r\n    {\r\n        i += static_cast<char>(temp);\r\n        temp = getchar_unlocked();\r\n    }\r\n    return i;\r\n}\r\n\r\nint64_t nxtl()\r\n{\r\n    int64_t x = 0;\r\n    bool negative = false;\r\n    int c = getchar_unlocked();\r\n    while ((c < '0' || c > '9') && c != '-')\r\n    {\r\n        c = getchar_unlocked();\r\n    }\r\n\r\n    if (c == '-')\r\n    {\r\n        negative = true;\r\n        c = getchar_unlocked();\r\n    }\r\n    while (c >= '0' && c <= '9')\r\n    {\r\n        x = (x << 1) + (x << 3) + c - 48;\r\n        c = getchar_unlocked();\r\n    }\r\n\r\n    if (negative)\r\n    {\r\n        return -x;\r\n    }\r\n\r\n    return x;\r\n}\r\n\r\nvoid read(string &s)\r\n{\r\n    s = nxts();\r\n}\r\nvoid read(int &x)\r\n{\r\n    x = nxt();\r\n}\r\nvoid read(int64_t &x)\r\n{\r\n    x = nxtl();\r\n}\r\n\r\ntemplate <class A> void read(vt<A> &v);\r\ntemplate <class A, size_t S> void read(ar<A, S> &a);\r\ntemplate <class T> void read(T &x)\r\n{\r\n    cin >> x;\r\n}\r\nvoid read(double &d)\r\n{\r\n    string t;\r\n    read(t);\r\n    d = stod(t);\r\n}\r\n\r\nvoid read(long double &d)\r\n{\r\n    string t;\r\n    read(t);\r\n    d = stold(t);\r\n}\r\n\r\ntemplate <class H, class... T> void read(H &h, T &...t)\r\n{\r\n    read(h);\r\n    read(t...);\r\n}\r\ntemplate <class A> void read(vt<A> &x)\r\n{\r\n    EACH(a, x)\r\n    {\r\n        read(a);\r\n    }\r\n}\r\ntemplate <class A, size_t S> void read(array<A, S> &x)\r\n{\r\n    EACH(a, x)\r\n    {\r\n        read(a);\r\n    }\r\n}\r\n\r\n/*--- To-String Functions ---*/\r\nstring to_string(char c)\r\n{\r\n    return string(1, c);\r\n}\r\nstring to_string(bool b)\r\n{\r\n    return b ? \"true\" : \"false\";\r\n}\r\nstring to_string(const char *s)\r\n{\r\n    return string(s);\r\n}\r\nstring to_string(string s)\r\n{\r\n    return s;\r\n}\r\nstring to_string(vt<bool> v)\r\n{\r\n    string res;\r\n    FOR(sz(v))\r\n    res += static_cast<char>('0' + v[i]);\r\n    return res;\r\n}\r\n\r\ntemplate <size_t S> string to_string(bitset<S> b)\r\n{\r\n    string res;\r\n    FOR(S)\r\n    res += static_cast<char>('0' + b[i]);\r\n    return res;\r\n}\r\ntemplate <class T> string to_string(T v)\r\n{\r\n    bool f = 1;\r\n    string res;\r\n    EACH(x, v)\r\n    {\r\n        if (!f)\r\n            res += ' ';\r\n        f = 0;\r\n        res += to_string(x);\r\n    }\r\n    return res;\r\n}\r\n\r\n/*--- Write Functions ---*/\r\nvoid write(string x)\r\n{\r\n    EACH(c, x)\r\n    {\r\n        putchar_unlocked(c);\r\n    }\r\n}\r\n\r\ntemplate <class A, class B> void write(pair<A, B> x);\r\n\r\ntemplate <class A> void write(A x)\r\n{\r\n    write(to_string(x));\r\n}\r\ntemplate <class H, class... T> void write(const H &h, const T &...t)\r\n{\r\n    write(h);\r\n    write(t...);\r\n}\r\n\r\ntemplate <class A, class B> void write(pair<A, B> p)\r\n{\r\n    write(p.ff, \" \", p.ss);\r\n}\r\n\r\n/*--- Print Functions ---*/\r\nvoid print()\r\n{\r\n    write(\"\\n\");\r\n}\r\ntemplate <class H, class... T> void print(const H &h, const T &...t)\r\n{\r\n    write(h);\r\n    if (sizeof...(t))\r\n        write(' ');\r\n    print(t...);\r\n}\r\n\r\n/*--- Debug Functions ---*/\r\ntemplate <typename A, typename B> ostream &operator<<(ostream &os, const pair<A, B> &p)\r\n{\r\n    return os << '(' << p.first << \", \" << p.second << ')';\r\n}\r\n\r\ntemplate <typename T_container,\r\n          typename T = typename enable_if<!is_same<T_container, string>::value, typename T_container::value_type>::type>\r\nostream &operator<<(ostream &os, const T_container &v)\r\n{\r\n    os << '{';\r\n    string sep;\r\n    for (const T &x : v)\r\n        os << sep << x, sep = \", \";\r\n    return os << '}';\r\n}\r\n\r\nvoid dbg_out()\r\n{\r\n    cerr << endl;\r\n}\r\n\r\ntemplate <typename Head, typename... Tail> void dbg_out(Head H, Tail... T)\r\n{\r\n    cerr << ' ' << H;\r\n    dbg_out(T...);\r\n}\r\n\r\n#ifdef LOCAL\r\n#define dbg(...) cerr << \"(\" << #__VA_ARGS__ << \"):\", dbg_out(__VA_ARGS__)\r\n#else\r\n#define dbg(...)\r\n#endif\r\n\r\n/*-=-%-=-%-=-%-=-%-=-%-=-%-=-%-=-%-=-%-=-%-=-%-=-%-=-%-=-%-=-%-=-%-=-%-=-%-=-%-=-%-=-%-=-%-=-*/\r\n\r\nvoid solve()\r\n{\r\n    int n, h, next, ans = 0;\r\n    read(n, h);\r\n\r\n    vt<pair<int, int>> candies[2];\r\n    FOR(n)\r\n    {\r\n        candies[nxt()].push_back({nxt(), nxt()});\r\n    }\r\n\r\n    rsrt(candies[0]);\r\n    rsrt(candies[1]);\r\n\r\n    vt<int> eats[2];\r\n\r\n    while (candies[0].back().first <= h || candies[1].back().first <= h)\r\n    {\r\n        if (candies[0].back().first <= h)\r\n        {\r\n            eats[0].push_back(candies[0].back().second);\r\n            candies[0].pop_back();\r\n        }\r\n        if (candies[1].back().first <= h)\r\n        {\r\n            eats[1].push_back(candies[1].back().second);\r\n            candies[1].pop_back();\r\n        }\r\n    }\r\n\r\n    if (eats[0].empty() && eats[1].empty())\r\n    {\r\n        print(\"0\");\r\n        return;\r\n    }\r\n\r\n    if (eats[0].empty())\r\n    {\r\n        next = 1;\r\n        goto NEXT;\r\n    }\r\n\r\n    if (eats[1].empty())\r\n    {\r\n        next = 0;\r\n        goto NEXT;\r\n    }\r\n\r\n    next = eats[0].back() >= eats[1].back() ? 0 : 1;\r\nNEXT:\r\n\r\n    while (true)\r\n    {\r\n\r\n        while (!candies[next].empty() && h >= candies[next].back().first)\r\n        {\r\n            eats[next].push_back(candies[next].back().second);\r\n            candies[next].pop_back();\r\n        }\r\n\r\n        if (eats[next].empty())\r\n        {\r\n            break;\r\n        }\r\n        srt(eats[next]);\r\n        h += eats[next].back();\r\n        eats[next].pop_back();\r\n        next = 1 - next;\r\n        ans++;\r\n    }\r\n    print(ans);\r\n}\r\n\r\nint32_t main()\r\n{\r\n    std::ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n\r\n    int tc = 1;\r\n\r\n    FOR(tc)\r\n    {\r\n        /* write(\"Case #\", i+1 , \": \"); */\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}