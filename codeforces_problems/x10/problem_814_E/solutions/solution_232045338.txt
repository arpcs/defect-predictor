{
    "id": 232045338,
    "contestId": 814,
    "creationTimeSeconds": 1699522115,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 814,
        "index": "E",
        "name": "An unavoidable detour for home",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 814,
        "members": [
            {
                "handle": "1234huang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1496837700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 716800,
    "source": "// LUOGU_RID: 134151339\n#include <bits/stdc++.h>\nusing namespace std;\n\ninline int read() {\n\tint x = 0, f = 0; char ch = getchar();\n\twhile(ch < '0' or ch > '9') f |= (ch == '-'), ch = getchar();\n\twhile(ch >= '0' and ch <= '9') x = (x << 1) + (x << 3) + (ch ^ 48), ch = getchar();\n\treturn f ? -x : x;\n}\n\nint __stk[128], __top;\ninline void write(int x) {\n    if(x < 0) putchar('-'), x = -x;\n\tdo { __stk[++__top] = x % 10, x /= 10; } while(x);\n\twhile (__top) putchar(__stk[__top--] + '0');\n}\n\nconst int mod = 1e9 + 7;\n\nvoid Min(int &x, int y) { y < x and (x = y); }\nvoid Max(int &x, int y) { y > x and (x = y); }\n\nvoid inc(int &x, int y) { (x += y) >= mod and (x -= mod); }\nvoid mul(int &x, int y) { x = 1ll * x * y % mod; }\n\nint q_pow(int x, int k) { int res = 1; for(; k; k >>= 1, mul(x, x)) if(k & 1) mul(res, x); return res; }\n\nbool stmer;\n\nconst int N = 51;\n\nint n, ans;\nint c[N][2], g[N][N][N], f[N][N], fac[N], inv[N];\n\nint C(int x, int y) { return y > x ? 0 : 1ll * fac[x] * inv[y] % mod * inv[x - y] % mod; }\n\nvoid init() {\n\tfac[0] = 1;\n\tfor(int i = 1; i < N; i++) fac[i] = 1ll * fac[i - 1] * i % mod;\n\tinv[N - 1] = q_pow(fac[N - 1], mod - 2);\n\tfor(int i = N - 1; i; i--) inv[i - 1] = 1ll * inv[i] * i % mod;\n}\n\nbool edmer;\nsigned main() {\n// \tfreopen(\"CF814E.in\", \"r\", stdin);\n// \tfreopen(\"CF814E.out\", \"w\", stdout);\n\tcerr << \"[Memory] \" << (&stmer - &edmer) / 1024 / 1024 << \" MB\\n\";\n\t\n\tn = read();\n\tfor(int i = 1; i <= n; i++)\n\t\tc[i][0] = c[i - 1][0], c[i][1] = c[i - 1][1], c[i][read() - 2]++;\n\n\tinit(), g[0][0][0] = 1;\n\n\tfor(int i = 0; i <= n; i++) for(int j = 0; j <= n; j++) for(int k = 0; k <= n; k++) {\n\t\tint val = 0;\n\n\t\tif(!(i + j)) {\n\t\t\tfor(int l = 3; l <= k; l++) inc(val, 1ll * g[0][0][k - l] * C(k - 1, l - 1) % mod * fac[l - 1] % mod * inv[2] % mod);\n\t\t}\n\t\telse if(!i) {\n\t\t\tif(j >= 2) inc(val, 1ll * g[0][j - 2][k] * (j - 1) % mod);\n\t\t\tif(k) inc(val, 1ll * g[0][j][k - 1] * k % mod);\n\t\t} \n\t\telse {\n\t\t\tif(j) inc(val, 1ll * g[i - 1][j - 1][k] * j % mod);\n\t\t\tif(k) inc(val, 1ll * g[i - 1][j + 1][k - 1] * k % mod);\n\t\t}\n\n        if(i + j + k) g[i][j][k] = val;\n\t}\n\n    if(c[1][0]) f[3][2]++;\n    if(c[1][1]) f[4][3]++;\n    \n    for(int i = 3; i <= n; i++) for(int j = 1; j < i; j++) for(int k = 1; j + k < i; k++)\n    inc(f[i][j], 1ll * f[i - j][k] * g[j][c[i - j][0] - c[i - j - k][0]][c[i - j][1] - c[i - j - k][1]] % mod);\n\n    for(int i = 1; i <= n; i++) inc(ans, 1ll * f[n][i] * g[0][c[n][0] - c[n - i][0]][c[n][1] - c[n - i][1]]);\n\n    write(ans);\n\n    cerr << \"[Runtime] \" << (double) clock() / CLOCKS_PER_SEC << \" seconds\\n\";\n\treturn 0;\n} "
}