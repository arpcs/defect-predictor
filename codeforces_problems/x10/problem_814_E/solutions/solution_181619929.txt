{
    "id": 181619929,
    "contestId": 814,
    "creationTimeSeconds": 1668867274,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 814,
        "index": "E",
        "name": "An unavoidable detour for home",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 814,
        "members": [
            {
                "handle": "return20071007"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1496837700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#include <atcoder/modint>\r\nusing namespace std;\r\ntypedef atcoder::modint1000000007 mint;\r\nconstexpr int N = 59;\r\nint n, d[N];\r\nmint f[N][N], g[N][N][N];\r\nbool vst[N][N][N];\r\nmint calc(int a, int b, int c) {\r\n  if (a < 0 || b < 0) return 0;\r\n  if (vst[a][b][c]) return g[a][b][c];\r\n  mint ret = 0;\r\n  if (c)\r\n    ret = a * calc(a - 1, b, c - 1) + b * calc(a + 1, b - 1, c - 1);\r\n  else if (a)\r\n    ret = (a - 1) * calc(a - 2, b, c) + b * calc(a, b - 1, c);\r\n  else if (b > 2) {\r\n    mint k = (b - 1) * (b - 2ll) >> 1;\r\n    for (int i = b - 3; ~i; --i) ret += k * calc(a, i, c), k *= i;\r\n  } else\r\n    ret = !b;\r\n  return vst[a][b][c] = true, g[a][b][c] = ret;\r\n}\r\nsigned main() {\r\n  cin.tie(nullptr)->sync_with_stdio(false);\r\n  for (cin >> n; int& x : span(d, n)) cin >> x;\r\n  for (int i = n; i; --i) {\r\n    int cnt[3]{};\r\n    for (int j = i; j < n; ++j) {\r\n      for (int k = j + 1; k <= n; ++k)\r\n        f[i][j] += f[j][k] * calc(cnt[1], cnt[2], k - j);\r\n      ++cnt[d[j] - 1];\r\n    }\r\n    f[i][n] = calc(cnt[1], cnt[2], 0);\r\n  }\r\n  return cout << f[1][1 + d[0]].val() << endl, 0;\r\n}"
}