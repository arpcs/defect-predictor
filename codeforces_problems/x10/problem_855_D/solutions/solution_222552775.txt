{
    "id": 222552775,
    "contestId": 855,
    "creationTimeSeconds": 1694242861,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 855,
        "index": "D",
        "name": "Rowena Ravenclaw's Diadem",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2500,
        "tags": [
            "trees"
        ]
    },
    "author": {
        "contestId": 855,
        "members": [
            {
                "handle": "shorya2448"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1506263700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 176332800,
    "source": "#include<bits/stdc++.h>\r\n#include<stdio.h> \r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp> \r\nusing namespace std;\r\nusing namespace __gnu_pbds ; \r\nusing ll = long long ;  \r\ntypedef tree<ll,null_type,less_equal<ll>,rb_tree_tag,tree_order_statistics_node_update> pbds ; \r\nll inf = 1e18 + 100 ;\r\nll ninf = -1e18 - 100 ;\r\nconst ll mod = 1e9 + 7 ; \r\nconst int MAXN = 1e6 ; \r\n\r\n\r\nll binary_lift[20][MAXN] ;  \r\nvoid make_lca_logn(ll n ) \r\n{\t\r\n\tfor(ll j = 1 ; j < 20 ; j++) \r\n\t{\r\n\t\tfor(ll i = 1 ; i <= n ; i++) \r\n\t\t{\r\n\t\t\tbinary_lift[j][i] = binary_lift[j-1][binary_lift[j-1][i]] ; \r\n\t\t}\r\n\t}\r\n}\r\n\r\nll give_lca(ll u , ll v) \r\n{\r\n\tll cu = u , cv = v ; \r\n\t\r\n\tfor(ll j = 19 ; j >= 0 ; j--) \r\n\t{\r\n\t\tif(binary_lift[j][cu] != binary_lift[j][cv]) \r\n\t\t{\r\n\t\t\tcu = binary_lift[j][cu] ; \r\n\t\t\tcv = binary_lift[j][cv] ; \r\n\t\t}\r\n\t}\r\n\t\r\n\tif(binary_lift[0][cv] == binary_lift[0][cu]) return binary_lift[0][cu] ;\r\n\telse return -1 ; \r\n}\r\n\r\nll parent[MAXN] ; \r\nll rankk[MAXN] ; \r\n\r\nll findparent(ll u) \r\n{\r\n\tif(parent[u] == u) return u ; \r\n\telse return parent[u] = findparent(parent[u]) ; \r\n}\r\nvoid solve() \r\n{\t \r\n\tll n ; \r\n\tcin >> n ; \r\n\t\r\n\t\r\n\tfor(ll i = 0 ; i <= n ; i++) \r\n\t{\r\n\t\trankk[i] = 1 ; \r\n\t\tparent[i] = i ; \r\n\t}\r\n\tvector<ll> adj[n+1] ;\r\n\tfor(ll i = 1 ; i <= n ; i++) \r\n\t{\r\n\t\tll type , par ; \r\n\t\tcin >> par >> type ; \r\n\t\t\r\n\t\tif(type == 0) binary_lift[0][i] = par ;\r\n\t\telse if(type == 1) parent[i] = par;  \r\n\t\t\r\n\t\tif(type != 0) binary_lift[0][i] = i ; \r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tmake_lca_logn(n) ; \r\n\t\r\n\r\n\tll q ; \r\n\tcin >> q ; \r\n\t\r\n\twhile(q--) \r\n\t{\r\n\t\tll type ; \r\n\t\tcin >> type ; \r\n\t\t\r\n\t\tll u , v ; \r\n\t\tcin >> u >> v ; \r\n\t\t\r\n\t\t\r\n\t\tif(type == 1) \r\n\t\t{\r\n\t\t\tll lca = give_lca(u,v) ; \r\n\t\t\tif(v != u && lca == u) cout << \"YES\" << endl; \r\n\t\t\telse cout << \"NO\" << endl; \r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t\r\n\t\t\tll par1 = findparent(v) ;\r\n\t\t\tll par2 = findparent(u) ; \r\n\t\t\t\r\n\t\t\t// cout << par1 << \" \" << par2 << endl ; \r\n\t\t\tif(par1 == par2) \r\n\t\t\t{\r\n\t\t\t\tif(v > u) cout << \"YES\" << endl; \r\n\t\t\t\telse cout << \"NO\" << endl; \r\n\t\t\t} \r\n\t\t\telse \r\n\t\t\t{\r\n\t\t\t\tll lca = give_lca(u,par1) ;\r\n\t\t\t\t\r\n\t\t\t\tif(lca == par1) cout << \"YES\" << endl; \r\n\t\t\t\telse cout << \"NO\" << endl; \r\n\t\t\t}\r\n \t\t}\r\n\t} \t\r\n}\r\n\r\n\r\nint32_t main()\r\n{\r\n    ios_base::sync_with_stdio(false) ;\r\n    cin.tie(NULL) ;\r\n    cout.tie(NULL) ;\r\n    // init_code() ;\r\n    ll t = 1 ; \r\n\t// cin >> t;  \r\n    while(t--) solve() ; \r\n    return 0 ; \r\n}\r\n"
}