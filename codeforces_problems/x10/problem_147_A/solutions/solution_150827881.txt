{
    "id": 150827881,
    "contestId": 147,
    "creationTimeSeconds": 1648153551,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 147,
        "index": "A",
        "name": "Punctuation",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1300,
        "tags": [
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 147,
        "members": [
            {
                "handle": "_Mohab_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1325602800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 85,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 9113600,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\nint dx4[] = {-1, 0, 0, 1};\r\nint dy4[] = {0, -1, 1, 0};\r\nint dx8[] = {1, 1, 0, -1, -1, -1, 0, 1};\r\nint dy8[] = {0, 1, 1, 1, 0, -1, -1, -1};\r\n#define endl '\\n'\r\n#define FAST  ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);\r\n#define ll  long long\r\n#define ull unsigned long long\r\n#define allr(x) x.rbegin(), x.rend()\r\n#define all(x) x.begin(), x.end()\r\n#define  tolower(sl)   transform(sl.begin(), sl.end(), sl.begin(), ::tolower)\r\n#define  toupper(su)   transform(su.begin(), su.end(), su.begin(), ::toupper)\r\nconst double pi = acos(-1);\r\nconst int N = 1e6 + 2;\r\nconst ll oo = LONG_LONG_MAX;\r\nconst int m = 1e9 + 7;\r\nint fact[N], dp[N];\r\nbool isprime[N];\r\n\r\n\r\nint to_int(string s) {\r\n    stringstream obj;\r\n    obj << s;\r\n    int n;\r\n    obj >> n;\r\n\r\n    return n;\r\n}\r\n\r\nbool isdigit(char c) {\r\n    if (c >= '0' && c <= '9') return true;\r\n    return false;\r\n}\r\n\r\nbool isoperator(char c) {\r\n    if (c == '+' || c == '-' || c == '*' || c == '/') return true;\r\n    return false;\r\n}\r\n\r\nbool cmp(string &a, string &b) { return a.size() < b.size(); }\r\n\r\nll LCM(ll a, ll b) {\r\n    return a * (b / (__gcd(a, b)));\r\n}\r\n\r\nll summ(ll n) {\r\n    return ((n * (n + 1)) / 2);\r\n}\r\n\r\n\r\null sumdigit(ull n) {\r\n    ll sum = 0;\r\n    while (n) {\r\n        sum += n % 10, n /= 10;\r\n    }\r\n    return sum;\r\n}\r\n\r\n\r\nll sum(int a, int b) {\r\n    a = (a % m + m) % m;\r\n    b = (b % m + m) % m;\r\n    return (a + b) % m;\r\n}\r\n\r\nll mul(int a, int b) {\r\n    a = (a % m + m) % m;\r\n    b = (b % m + m) % m;\r\n    return (a * 1LL * b) % m;\r\n}\r\n\r\nll power(ll x, ll y) {\r\n    if (y == 0) return 1;\r\n    ll temp = power(x, y / 2);\r\n    if (y % 2 == 0) return mul(temp, temp);\r\n    return mul(mul(x, temp), temp);\r\n}\r\n\r\nll modInverse(int x) {\r\n    return power(x, m - 2);\r\n}\r\n\r\nll nCr(int n, int r) {\r\n    return mul(fact[n], modInverse(mul(fact[r], fact[n - r])));\r\n}\r\n\r\n\r\nvoid seive() {\r\n    memset(isprime, true, sizeof isprime);\r\n    isprime[0] = false, isprime[1] = false;\r\n    for (int i = 2; i * i <= N; ++i) {\r\n        for (int j = i * i; j <= N; j += i) {\r\n            isprime[j] = false;\r\n        }\r\n    }\r\n}\r\n\r\nvector<ll> getPrimeFactors(ll n) {\r\n    vector<ll> ret;\r\n    for (ll i = 2; i * i <= n; i++) {\r\n        while (n % i == 0) n /= i, ret.push_back(i);\r\n    }\r\n    if (n != 1) ret.push_back(n);\r\n    return ret;\r\n}\r\n\r\nvector<ll> getDivisors(ll n) {\r\n    vector<ll> ret;\r\n    for (ll i = 1; i * i <= n; i++) {\r\n        if (n % i == 0) {\r\n            ret.push_back(i);\r\n            if (n / i != i) ret.push_back(n / i);\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n\r\n\r\nvoid Start() {\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n    ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);\r\n}\r\n\r\n\r\nint main() {\r\n    Start();\r\n    string s, temp = \"!?.,\";\r\n    getline(cin, s);\r\n    int  space = 0;\r\n    char p = NULL;\r\n    for (int i = 0; i < s.size(); ++i)\r\n    {\r\n        if(s[i] >= 'a' and s[i] <= 'z')\r\n        {\r\n            if(p!= NULL) cout << p << ' ' ,  p = NULL, space = 0;\r\n            if(space) cout << ' ', space = 0;\r\n            cout << s[i];\r\n        }\r\n        else if(temp.find(s[i]) != string::npos)\r\n        {\r\n            p = s[i];\r\n        }\r\n        else if(s[i] == ' ') space++;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
}