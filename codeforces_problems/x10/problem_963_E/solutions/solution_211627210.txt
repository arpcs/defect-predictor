{
    "id": 211627210,
    "contestId": 963,
    "creationTimeSeconds": 1688136839,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 963,
        "index": "E",
        "name": "Circles of Waiting",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3100,
        "tags": [
            "math"
        ]
    },
    "author": {
        "contestId": 963,
        "members": [
            {
                "handle": "jinhaoxian"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1523973900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 50,
    "timeConsumedMillis": 373,
    "memoryConsumedBytes": 16486400,
    "source": "// LUOGU_RID: 113626877\n#include<bits/stdc++.h>\nusing namespace std;\nconst long long mod=1000000007;\nint R,N;\nlong long a[5],inv[10005],dp[10005][205];\nlong long qpow(long long a,int b) {\n    long long res=1;\n    while (b) {\n        if (b&1) res=res*a%mod;\n        a=a*a%mod;\n        b>>=1;\n    }\n    return res;\n}\nint main() {\n    inv[0]=inv[1]=1;\n    for (int i=2;i<=10000;i++) inv[i]=(mod-mod/i)*inv[mod%i]%mod;\n    cin>>R>>a[1]>>a[2]>>a[3]>>a[4];\n    N=R*2+1;\n    a[0]=inv[a[1]+a[2]+a[3]+a[4]];\n    a[1]=a[1]*a[0]%mod;a[2]=a[2]*a[0]%mod;\n    a[3]=a[3]*a[0]%mod;a[4]=a[4]*a[0]%mod;\n    for (int i=1;i<=N;i++) {\n        for (int j=1;j<=N;j++) {\n            if ((R+1-i)*(R+1-i)+(R+1-j)*(R+1-j)>R*R) {\n                dp[(i-1)*N+j][N+1]=1;\n                continue;\n            }\n            if (i>1) dp[(i-1)*N+j][1]=a[1];\n            if (j>1) dp[(i-1)*N+j][N]=a[2];\n            dp[(i-1)*N+j][N+1]=mod-1;\n            if (j<N) dp[(i-1)*N+j][N+2]=a[4];\n            if (i<N) dp[(i-1)*N+j][N*2+1]=a[3];\n            dp[(i-1)*N+j][0]=mod-1;\n        }\n    }\n    for (int i=1;i<=N*N;i++) {\n        for (int j=i+1;j<=min(i+N,N*N);j++) {\n            if (!dp[j][i+N+1-j]) continue;\n            long long rd=dp[j][i+N+1-j]*qpow(dp[i][N+1],mod-2)%mod;\n            dp[j][i+N+1-j]=0;\n            dp[j][0]=(dp[j][0]+mod-dp[i][0]*rd%mod)%mod;\n            for (int u=1;u<=N;u++) {\n                dp[j][i+N+1-j+u]=(dp[j][i+N+1-j+u]+mod-dp[i][N+1+u]*rd%mod)%mod;\n            }\n        }\n    }\n    for (int i=N*N;i>=1;i--) {\n        for (int j=i-1;j>=max(1,i-N);j--) {\n            if (!dp[j][i+N+1-j]) continue;\n            long long rd=dp[j][i+N+1-j]*qpow(dp[i][N+1],mod-2)%mod;\n            dp[j][i+N+1-j]=0;\n            dp[j][0]=(dp[j][0]+mod-dp[i][0]*rd%mod)%mod;\n            for (int u=1;u<=N+j-i;u++) {\n                dp[j][i+N+1-j+u]=(dp[j][i+N+1-j+u]+mod-dp[i][N+1+u]*rd%mod)%mod;\n            }\n        }\n    }\n    cout<<dp[R*N+R+1][0]*qpow(dp[R*N+R+1][N+1],mod-2)%mod<<endl;\n    return 0;\n}"
}