{
    "id": 197450081,
    "contestId": 963,
    "creationTimeSeconds": 1678842702,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 963,
        "index": "E",
        "name": "Circles of Waiting",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 3100,
        "tags": [
            "math"
        ]
    },
    "author": {
        "contestId": 963,
        "members": [
            {
                "handle": "hleternity"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1523973900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 123,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 10649600,
    "source": "// LUOGU_RID: 104751131\n//\u5c06\u6bcf\u884c\u4ece\u5de6\u5230\u53f3\u7b2c\u4e00\u4e2a\u683c\u5b50\u5bf9\u5e94\u7684\u53d8\u91cf\u8bbe\u4e3a\u4e3b\u5143\uff0c\u5171 2R + 1 \u4e2a\uff0c\u8bbe\u6cd5\u5c06\u5176\u4ed6\u683c\u5b50\u5bf9\u5e94\u7684\u53d8\u91cf\u7528\u5173\u4e8e\u8fd9\u4e9b\u4e3b\u5143\u7684\u7ebf\u6027\u51fd\u6570\u8868\u793a\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long \r\n#define mod 1000000007\r\n#define N 109\r\n#define Time 1e3*clock()/CLOCKS_PER_SEC\r\ninline int read() \r\n{\r\n    register int x=0;\r\n    register char ch=cin.get();\r\n    register bool op=0;\r\n    while(!isdigit(ch)) {if(ch=='-')op=1;ch=cin.get();}\r\n    while(isdigit(ch)) {(x*=10)+=(ch^48);ch=cin.get();}\r\n    return op ? -x:x;\r\n}\r\ninline int qpow(register int base,register int power) \r\n{\r\n    int res=1;\r\n    while (power)\r\n    {\r\n        if(power&1) res=res*base%mod;\r\n        power>>=1;\r\n        base=base*base%mod;\r\n    }\r\n    return res;\r\n}\r\nint R,p,p1,p2,p3,p4,n,res; \r\nint a[N][N],ans[N*N];\r\nint id[N][N],g[N*N][N];\r\n//g[i][j][k]\u8868\u793af[i][j]\u7684\u7ebf\u6027\u8868\u8fbe\u5f0f\u4e2d\uff0c\u7b2ck\u4e2a\u4e3b\u5143\u7684\u7cfb\u6570\r\ninline void Guass() \r\n{\r\n    for(register int i(1);i<=n;++i) \r\n    {\r\n        int maxx=a[i][i],h=i;\r\n        for(register int j(i+1);j<=n;++j)  \r\n        if(maxx<a[j][i]) maxx=abs(a[h=j][i]);\r\n        if(!maxx) continue; \r\n        if(i!=h) swap(a[i],a[h]);\r\n        int inv=qpow(a[i][i],mod-2);\r\n        for(register int j(n+1);j>=i;--j) a[i][j]=a[i][j]*inv%mod;\r\n        for(register int j(i+1);j<=n;++j) \r\n            for(register int k(n+1);k>=i;--k) \r\n            a[j][k]=(a[j][k]-a[j][i]*a[i][k]%mod+mod)%mod;  \r\n    }\r\n    for(register int i(n);i>=1;--i)\r\n\t{\r\n\t\tfor(register int j(n);j>i;--j)\r\n\t\ta[i][n+1]=(a[i][n+1]-ans[j]*a[i][j]%mod+mod)%mod;\r\n\t\tans[i]=a[i][n+1]*qpow(a[i][i],mod-2);\r\n\t}\r\n}\r\ninline bool in(register int x,register int y) {return x*x+y*y<=R*R;}  \r\nsigned main() \r\n{\r\n    ios::sync_with_stdio(0);\r\n    R=read(),p1=read(),p2=read(),p3=read(),p4=read();\r\n    p=p1+p2+p3+p4;p=qpow(p,mod-2);\r\n    p1=p1*p%mod;p2=p2*p%mod;p3=p3*p%mod;p4=p4*p%mod; \r\n    int invp3=qpow(p3,mod-2);\r\n    for(register int x(-R);x<=R;++x) \r\n        for(register int y(-R);y<=R;++y) \r\n        if(in(x,y))id[x+R][y+R]=++n; \r\n    n=0;    \r\n    for(register int x(-R);x<=R;++x) \r\n        for(register int y(-R);y<=R;++y) \r\n        if(in(x,y)&&!(in(x-1,y))) g[id[x+R][y+R]][++n]=1;//\u94a6\u5b9a\u7b2c\u4e00\u5217\u4e3a\u4e3b\u5143\uff0c\u7cfb\u6570\u4e3a1\r\n    for(register int x(-R);x<=R;++x) \r\n        for(register int y(-R);y<=R;++y) \r\n        if(in(x,y)&&in(x-1,y))\r\n        {\r\n            int i=x+R,j=y+R;\r\n            memcpy(g[id[i][j]],g[id[i-1][j]],sizeof(g[id[i][j]]));\r\n            g[id[i][j]][n+1]=(g[id[i][j]][n+1]+mod-1)%mod;//\u5e38\u6570\u9879\r\n            if(in(x-2,y))   for(register int k(1);k<=n+1;++k) g[id[i][j]][k]=(g[id[i][j]][k]-p1*g[id[i-2][j]][k]%mod+mod)%mod;\r\n            if(in(x-1,y-1)) for(register int k(1);k<=n+1;++k) g[id[i][j]][k]=(g[id[i][j]][k]-p2*g[id[i-1][j-1]][k]%mod+mod)%mod;\r\n            if(in(x-1,y+1)) for(register int k(1);k<=n+1;++k) g[id[i][j]][k]=(g[id[i][j]][k]-p4*g[id[i-1][j+1]][k]%mod+mod)%mod;\r\n            for(register int k(1);k<=n+1;++k) g[id[i][j]][k]=g[id[i][j]][k]*invp3%mod;\r\n        }\r\n    int cnt=0;\r\n    for(register int x(-R);x<=R;++x) \r\n        for(register int y(-R);y<=R;++y) \r\n        if(in(x,y)&&!in(x+1,y)) \r\n        {\r\n            int i=x+R,j=y+R; \r\n            memcpy(a[++cnt],g[id[i][j]],sizeof(g[id[i][j]])); \r\n            if(in(x-1,y)) for(register int k(1);k<=n+1;++k) a[cnt][k]=(a[cnt][k]-p1*g[id[i-1][j]][k]%mod+mod)%mod;\r\n            if(in(x,y-1)) for(register int k(1);k<=n+1;++k) a[cnt][k]=(a[cnt][k]-p2*g[id[i][j-1]][k]%mod+mod)%mod;\r\n            if(in(x+1,y)) for(register int k(1);k<=n+1;++k) a[cnt][k]=(a[cnt][k]-p3*g[id[i+1][j]][k]%mod+mod)%mod;\r\n            if(in(x,y+1)) for(register int k(1);k<=n+1;++k) a[cnt][k]=(a[cnt][k]-p4*g[id[i][j+1]][k]%mod+mod)%mod;\r\n            a[cnt][n+1]=mod+1-a[cnt][n+1];//\u79fb\u9879\u53d6\u53cd\r\n        }\r\n    Guass();\r\n    res=g[id[R][R]][n+1];\r\n    for(register int i(1);i<=n;++i) res=(res+g[id[R][R]][i]*ans[i])%mod;\r\n    printf(\"%lld\\n\",res);\r\n//    cerr<<Time<<\" ms\\n\";\r\n    return 0;\r\n}   \r\n"
}