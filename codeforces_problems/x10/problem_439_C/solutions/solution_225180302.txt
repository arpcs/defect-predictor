{
    "id": 225180302,
    "contestId": 439,
    "creationTimeSeconds": 1695673758,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 439,
        "index": "C",
        "name": "Devu and Partitioning of the Array",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation",
            "number theory"
        ]
    },
    "author": {
        "contestId": 439,
        "members": [
            {
                "handle": "arthur_9548"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1401895800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 75,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 5939200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n#define float long double\r\n#define rep(i, a, b) for(int i = (int)(a); i < (int)(b); i++)\r\n#define esp ' '\r\n#define endl '\\n'\r\n#define YES \"YES\\n\"\r\n#define NO \"NO\\n\"\r\n#define IMP \"IMPOSSIBLE\\n\"\r\n#define pb push_back\r\n#define all(x) x.begin(), x.end()\r\n#define sz(x) (int)x.size()\r\n#define pii pair<int, int>\r\n#define vi vector<int>\r\n\r\nconstexpr int oo = (((unsigned int)-1)>>29);\r\nconstexpr int MOD = 1e9+7;\r\nconstexpr int MXN = 1e5+2;\r\n\r\nvoid solve(){\r\n\tint n, k, qp, qi; cin >> n >> k >> qp; qi = k - qp; \r\n\tvector<int> is, ps, nums(n);\r\n\tvector<vector<int>> ans(k);\r\n\trep(i, 0, n){\r\n\t\tcin >> nums[i];\r\n\t\tif (nums[i]%2)is.pb(i);\r\n\t\telse ps.pb(i);\r\n\t}\r\n\tint cp = sz(ps), ci = sz(is);\r\n\twhile(cp < qp and ci > 1){\r\n\t\trep(i, 0, 2){\r\n\t\t\tans[qp-cp-1].pb(is.back()); is.pop_back();\r\n\t\t}\r\n\t\tcp++; ci-=2;\r\n\t}\r\n\tif (cp < qp){\r\n\t\tcout << NO; return;\r\n\t}\r\n\trep(i, 0, qp){\r\n\t\tif (ans[i].empty()){\r\n\t\t\tans[i].pb(ps.back()); ps.pop_back();\r\n\t\t}\r\n\t}\r\n\twhile(not ps.empty()){\r\n\t\tans[0].pb(ps.back()); ps.pop_back();\r\n\t}\r\n\tif (ci < qi or (ci-qi)%2){\r\n\t\tcout << NO; return;\r\n\t}\r\n\tcout << YES;\r\n\trep(i, 0, ci-qi){\r\n\t\tans[0].pb(is.back()); is.pop_back();\r\n\t}\r\n\trep(i, qp, k){\r\n\t\tans[i].pb(is.back()); is.pop_back();\r\n\t}\r\n\trep(i, 0, k){\r\n\t\tcout << sz(ans[i]) << esp;\r\n\t\trep(j, 0, sz(ans[i]))cout << nums[ans[i][j]] << esp;\r\n\t\tcout << endl;\r\n\t}\r\n}\r\n\r\nsigned main(){\r\n\tios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n\tint t=1;\r\n\t//cin>>t;\r\n\twhile(t--)solve();\r\n}"
}