{
    "id": 213553842,
    "contestId": 439,
    "creationTimeSeconds": 1689186903,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 439,
        "index": "C",
        "name": "Devu and Partitioning of the Array",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation",
            "number theory"
        ]
    },
    "author": {
        "contestId": 439,
        "members": [
            {
                "handle": "Wasi_Ur"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1401895800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 19,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 2969600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#ifndef ONLINE_JUDGE\r\n  #include \"dbg.h\"\r\n#endif\r\n#define pb push_back\r\n#define int int64_t\r\n\r\nconst int N = 1e5 + 9;\r\nconst int inf = 1e18;\r\nconst int mod = 1e9 + 7;\r\n\r\n\r\n\r\nvoid solve() {\r\n  int n,k,p;\r\n  cin >> n >> k >> p;\r\n  vector<int> v(n);\r\n  vector<int> o,e;\r\n  for (int i = 0; i < n; i++) {\r\n    cin >> v[i];\r\n    if (v[i] & 1) o.pb(v[i]);\r\n    else e.pb(v[i]);\r\n  }\r\n  int rem = o.size() - (k - p);\r\n  if (o.size() < k - p) {\r\n    cout << \"NO\\n\";\r\n    return;\r\n  }\r\n  if (rem & 1) {\r\n    cout << \"NO\\n\";\r\n    return;\r\n  }\r\n  if (e.size() < p && 2*(p - e.size()) > rem) {\r\n    cout << \"NO\\n\";\r\n    return;\r\n  }\r\n  vector<vector<int>> even,odd;\r\n  if (e.size() >= p) {\r\n    while (even.size() != p) {\r\n      even.pb({e.back()});\r\n      e.pop_back();\r\n    }\r\n  }else {\r\n    int l = even.size();\r\n    while (!even.empty()) {\r\n      even.pb({e.back()});\r\n      e.pop_back();\r\n    }\r\n    int rem = p - l;\r\n    if (o.size() >= rem*2) {\r\n      while (rem--) {\r\n        vector<int> f;\r\n        f.pb(o.back());\r\n        o.pop_back();\r\n        f.pb(o.back());\r\n        o.pop_back();\r\n        even.pb(f);\r\n      }\r\n    }\r\n  }\r\n  while (odd.size() != k - p) {\r\n    odd.pb({o.back()});\r\n    o.pop_back();\r\n  }\r\n  \r\n  if (even.size() > odd.size()) swap(odd,even);\r\n  while (o.size()){\r\n      assert(o.size() != 1);\r\n      odd.back().pb(o.back());\r\n      o.pop_back();\r\n      odd.back().pb(o.back());\r\n      o.pop_back();   \r\n  }\r\n  \r\n  while (e.size()) {\r\n    odd.back().pb({e.back()});\r\n    e.pop_back();\r\n  }\r\n\r\n  cout << \"YES\\n\";\r\n  for (auto i:even) {\r\n    cout << i.size() << \" \";\r\n    for (auto j:i)\r\n      cout << j << \" \";\r\n    cout << '\\n';\r\n  }\r\n  for (auto i:odd) {\r\n    cout << i.size() << \" \";\r\n    for (auto j:i)\r\n      cout << j << \" \";\r\n    cout << '\\n';\r\n  }\r\n}\r\n\r\nint32_t main() {\r\n  ios_base::sync_with_stdio(0);\r\n  cin.tie(nullptr);cout.tie(0);\r\n\r\n  int t = 1,cs = 1;\r\n  //cin >> t;\r\n\r\n  while (t--) {\r\n    solve();\r\n  }\r\n  return 0;\r\n}"
}