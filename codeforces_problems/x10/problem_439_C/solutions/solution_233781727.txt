{
    "id": 233781727,
    "contestId": 439,
    "creationTimeSeconds": 1700642396,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 439,
        "index": "C",
        "name": "Devu and Partitioning of the Array",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation",
            "number theory"
        ]
    },
    "author": {
        "contestId": 439,
        "members": [
            {
                "handle": "Kazdale"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1401895800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 75,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 4505600,
    "source": "// LUOGU_RID: 136329833\n#include <iostream>\r\n#include <stack>\r\nusing namespace std;\r\nconstexpr int MAXN(1000007);\r\nstack <int> ji, ou;\r\nint a[MAXN];\r\nint n, k, p, odd, even;\r\ninline void read(int &temp) { cin >> temp; }\r\nint main() {\r\n\tios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);\r\n\tread(n), read(k), read(p);\r\n\tfor (int i(1); i <= n; ++i)  read(a[i]);\r\n\tfor (int i(1); i <= n; ++i)  if (a[i] % 2 == 1)  ++odd, ji.push(a[i]);\r\n\tfor (int i(1); i <= n; ++i)  if (a[i] % 2 == 0)  ++even, ou.push(a[i]);\r\n\tif (odd < k - p || (odd - k + p) / 2 + even < p || (odd - k + p) % 2 == 1)  return cout << \"NO\" << endl, 0;\r\n\tcout << \"YES\" << endl;\r\n\tfor (int i(1); i < p; ++i) {\r\n\t\tif ((int)(ji.size()) > k - p) {\r\n\t\t\tcout << \"2\" << \" \";\r\n\t\t\tcout << ji.top() << \" \";\r\n\t\t\tji.pop();\r\n\t\t\tcout << ji.top() << endl;\r\n\t\t\tji.pop();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcout << \"1\" << \" \";\r\n\t\t\tcout << ou.top() << endl;\r\n\t\t\tou.pop();\r\n\t\t}\r\n\t}\r\n\tif (p) {\r\n\t\tcout << (int)ji.size() - k + p + (int)ou.size() << \" \";\r\n\t\twhile ((int)ji.size() > k - p) {\r\n\t\t\tcout << ji.top() << \" \";\r\n\t\t\tji.pop();\r\n\t\t}\r\n\t\twhile (!ou.empty()) {\r\n\t\t\tcout << ou.top() << \" \";\r\n\t\t\tou.pop();\r\n\t\t}\r\n\t\tcout << endl;\r\n\t}\r\n\tfor (int i(1); i < k - p; ++i) {\r\n\t\tcout << \"1\" << \" \";\r\n\t\tcout << ji.top() << endl;\r\n\t\tji.pop();\r\n\t}\r\n\tif (k - p) {\r\n\t\tcout << ji.size() + ou.size() << \" \";\r\n\t\twhile (!ji.empty()) {\r\n\t\t\tcout << ji.top() << \" \";\r\n\t\t\tji.pop();\r\n\t\t}\r\n\t\twhile (!ou.empty()) {\r\n\t\t\tcout << ou.top() << \" \";\r\n\t\t\tou.pop();\r\n\t\t}\r\n\t\tcout << endl;\r\n\t}\r\n\treturn 0;\r\n}"
}