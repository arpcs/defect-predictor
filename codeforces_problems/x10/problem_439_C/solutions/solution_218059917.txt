{
    "id": 218059917,
    "contestId": 439,
    "creationTimeSeconds": 1691603500,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 439,
        "index": "C",
        "name": "Devu and Partitioning of the Array",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation",
            "number theory"
        ]
    },
    "author": {
        "contestId": 439,
        "members": [
            {
                "handle": "Andaloo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1401895800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 75,
    "timeConsumedMillis": 311,
    "memoryConsumedBytes": 4710400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n \r\ntypedef long long ll;\r\n#define f first\r\n#define s second\r\n#define pb push_back\r\n\r\nint32_t main() {\r\n\tios_base::sync_with_stdio(false); cin.tie(0);\r\n\r\n\tint n, k, p;\r\n\tcin >> n >> k >> p;\r\n\r\n\tvector<int> arr(n), even, odd;\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tcin >> arr[i];\r\n\t\tif (arr[i] % 2 == 0) even.pb(arr[i]);\r\n\t\telse odd.pb(arr[i]);\r\n\t}\r\n\r\n\tif (odd.size() < k-p || (odd.size() % 2) != (k-p) % 2 || even.size() + (odd.size() - (k-p))/2 < p) {\r\n\t\tcout << \"NO\" << endl;\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tvector<vector<int>> res;\r\n\tfor (int i = 0; i < k-p; i++) {\r\n\t\tres.pb({odd.back()});\r\n\t\todd.pop_back();\r\n\t}\r\n\twhile (p > 0 && odd.size() >= 2) {\r\n\t\tint x = odd.back();\r\n\t\todd.pop_back();\r\n\t\tint y = odd.back();\r\n\t\todd.pop_back();\r\n\t\tres.pb({x, y});\r\n\t\tp--;\r\n\t}\r\n\r\n\twhile (p > 0) {\r\n\t\tres.pb({even.back()});\r\n\t\teven.pop_back();\r\n\t\tp--;\r\n\t}\r\n\tfor (int i : even) {\r\n\t\tres.back().pb(i);\r\n\t}\r\n\tfor (int i : odd) {\r\n\t\tres.back().pb(i);\r\n\t}\r\n\t\r\n\t\r\n\tcout << \"YES\" << endl;\r\n\tfor (auto v : res) {\r\n\t\tcout << v.size() << \" \";\r\n\t\tfor (int i : v) cout << i << \" \";\r\n\t\tcout << endl;\r\n\t}\r\n\t\r\n} "
}