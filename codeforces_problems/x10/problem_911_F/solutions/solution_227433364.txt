{
    "id": 227433364,
    "contestId": 911,
    "creationTimeSeconds": 1696871892,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 911,
        "index": "F",
        "name": "Tree Destruction",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "graphs",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 911,
        "members": [
            {
                "handle": "Arshi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1514469900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 93,
    "timeConsumedMillis": 312,
    "memoryConsumedBytes": 21708800,
    "source": "/**********************GOD**********************/\r\n\r\n#include <iostream>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <iomanip>\r\n#include <cstdlib>\r\n#include <string>\r\n#include <vector>\r\n#include <set>\r\n#include <queue>\r\n#include <stack>\r\n#include <iterator>\r\n#include <map>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef pair<ll , ll> pll;\r\n\r\n#define len                 length()\r\n#define MP                  make_pair\r\n#define fs                  first\r\n#define sc                  second\r\n#define pb(x)               push_back(x)\r\n#define all(x)              x.begin() , x.end()\r\n#define kill(x)             cout << x , exit(0)\r\n\r\nconst ll INF = 1e18 + 8;\r\nconst ll MOD = 1e9 + 7;\r\nconst ll MXN = 2e5 + 6;\r\nconst ll LOG = 28 - 5;\r\n\r\nint n;\r\nint r1 , r2;\r\n\r\nvector<pair<int , int>> vc;\r\nvector<int> adj[MXN];\r\nint h[MXN] , d[MXN][2];\r\nbool mark[MXN];\r\n\r\nvoid DFS(int v , int p = 0)\r\n{\r\n    for(int u : adj[v]) {\r\n        if(u == p)\r\n            continue;\r\n        h[u] = h[v] + 1;\r\n        DFS(u , v);\r\n    }\r\n}\r\n\r\nvoid dfs(int c , int v , int p = 0)\r\n{\r\n    for(int u : adj[v]) {\r\n        if(u == p)\r\n            continue;\r\n        d[u][c] = d[v][c] + 1;\r\n        dfs(c , u , v);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n\r\n    cin >> n;\r\n    for(int i = 1 ; i < n ; i ++) {\r\n        int v , u;\r\n        cin >> v >> u;\r\n        adj[v].pb(u);\r\n        adj[u].pb(v);\r\n    }\r\n\r\n    DFS(1);\r\n    for(int i = 1 ; i <= n ; i ++)\r\n        if(h[i] > h[r1])\r\n            r1 = i;\r\n    dfs(0 , r1);\r\n    for(int i = 1 ; i <= n ; i ++)\r\n        if(d[i][0] > d[r2][0])\r\n            r2 = i;\r\n    dfs(1 , r2);\r\n    for(int i = 1 ; i <= n ; i ++)\r\n        vc.push_back({- d[i][1] , i});\r\n    sort(all(vc));\r\n\r\n    ll ans = 0;\r\n    for(int i = 1 ; i <= n ; i ++) {\r\n        if(d[i][0] + d[i][1] == d[r1][1])\r\n            ans += 1ll * d[i][1];\r\n        else\r\n            ans += 1ll * max(d[i][0] , d[i][1]);\r\n    }\r\n    cout << ans << '\\n';\r\n    for(auto[_ , i] : vc) {\r\n        if(d[i][0] + d[i][1] == d[r1][1])\r\n            continue;\r\n        int x;\r\n        if(d[i][0] > d[i][1])\r\n            x = r1;\r\n        else\r\n            x = r2;\r\n        mark[i] = 1;\r\n        cout << i << ' ' << x << ' ' << i << '\\n';\r\n    }\r\n    for(auto[_ , i] : vc) {\r\n        if(mark[i] || i == r2)\r\n            continue;\r\n        cout << i << ' ' << r2 << ' ' << i << '\\n';\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n/*!\r\nahkh\r\n*/\r\n"
}