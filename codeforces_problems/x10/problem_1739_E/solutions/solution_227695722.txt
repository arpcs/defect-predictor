{
    "id": 227695722,
    "contestId": 1739,
    "creationTimeSeconds": 1697035115,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1739,
        "index": "E",
        "name": "Cleaning Robot",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    "author": {
        "contestId": 1739,
        "members": [
            {
                "handle": "Citnaris"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664462100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 10035200,
    "source": "#include <bits/stdc++.h>\r\n#define int long long\r\n\r\nusing namespace std;\r\n\r\nconst int NR = 2e5 + 5;\r\n\r\nint n, ans, f[NR][2], nxt[2][NR][2];\r\nchar a[2][NR];\r\n\r\nsigned main() {\r\n    cin >> n;\r\n    for (int i = 0; i <= 1; ++i)\r\n        for (int j = 1; j <= n; ++j) cin >> a[i][j], ans += (a[i][j] == '1');\r\n    for (int i = n, p0 = -1, p1 = -1; i >= 1; --i) {\r\n        nxt[0][i][0] = p0, nxt[1][i][1] = p1;\r\n        if (a[0][i] == '1') p0 = i;\r\n        if (a[1][i] == '1') p1 = i;\r\n        nxt[0][i][1] = p1, nxt[1][i][0] = p0;\r\n    }\r\n    for (int i = n; i >= 1; --i) {\r\n        if (nxt[0][i][0] == -1 && nxt[0][i][1] == -1) f[i][0] = 0;\r\n        if (nxt[0][i][0] == -1 && nxt[0][i][1] != -1) f[i][0] = f[nxt[0][i][1]][1];\r\n        if (nxt[0][i][0] != -1 && nxt[0][i][1] == -1) f[i][0] = f[nxt[0][i][0]][0];\r\n        if (nxt[0][i][0] != -1 && nxt[0][i][1] != -1) {\r\n            int d0 = nxt[0][i][0], d1 = nxt[0][i][1] + 1;\r\n            if (d0 < d1) f[i][0] = f[nxt[0][i][0]][0];\r\n            else if (d0 > d1) f[i][0] = f[nxt[0][i][1]][1];\r\n            else f[i][0] = min(f[nxt[0][i][0]][0], f[nxt[0][i][1]][1]) + 1;\r\n        }\r\n        if (nxt[1][i][0] == -1 && nxt[1][i][1] == -1) f[i][1] = 0;\r\n        if (nxt[1][i][0] == -1 && nxt[1][i][1] != -1) f[i][1] = f[nxt[1][i][1]][1];\r\n        if (nxt[1][i][0] != -1 && nxt[1][i][1] == -1) f[i][1] = f[nxt[1][i][0]][0];\r\n        if (nxt[1][i][0] != -1 && nxt[1][i][1] != -1) {\r\n            int d0 = nxt[1][i][0] + 1, d1 = nxt[1][i][1];\r\n            if (d0 < d1) f[i][1] = f[nxt[1][i][0]][0];\r\n            else if (d0 > d1) f[i][1] = f[nxt[1][i][1]][1];\r\n            else f[i][1] = min(f[nxt[1][i][0]][0], f[nxt[1][i][1]][1]) + 1;\r\n        }\r\n    }\r\n    cout << ans - f[1][0] << '\\n';\r\n    return 0;\r\n}"
}