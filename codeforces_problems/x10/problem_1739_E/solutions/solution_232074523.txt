{
    "id": 232074523,
    "contestId": 1739,
    "creationTimeSeconds": 1699535887,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1739,
        "index": "E",
        "name": "Cleaning Robot",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    "author": {
        "contestId": 1739,
        "members": [
            {
                "handle": "RizkWar"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664462100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 16,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 204800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long double ld;\r\n#define nel cout<<\"\\n\";\r\n#define f first\r\n#define s second\r\n#define int long long\r\n\r\nvoid solve(){\r\n    int n,cnt=0; cin>>n;\r\n    vector<string> s(2);\r\n    cin>>s[0]>>s[1];\r\n    vector<vector<int>> a(2, vector<int>(n+4,0));\r\n    for(int i=0; i<2; i++){\r\n        for(int j=1; j<=n; j++){\r\n            a[i][j]=s[i][j-1]-'0';\r\n            cnt+=a[i][j];\r\n        }\r\n    }\r\n    vector<vector<pair<int,int>>> cl(2,vector<pair<int,int>>(n+5));\r\n    //1 if on the same path, 0 otherwise\r\n    int curClosest=n+1, type=2;\r\n    for(int j=n; j>=0; j--){\r\n        int cnt=0, pnt=-1;\r\n        if(a[0][j]==1){cnt++; pnt=0;}\r\n        if(a[1][j]==1){cnt++; pnt=1;}\r\n        for(int i=0; i<2; i++){\r\n            cl[i][j].f=curClosest;\r\n            if(type==2) cl[i][j].s=1;\r\n            else cl[i][j].s=(type==i);\r\n        }\r\n        if(cnt!=0) curClosest=j;\r\n        if(cnt==2) type=2;\r\n        else if(pnt!=-1) type=pnt;\r\n    }\r\n    vector<vector<vector<int>>> dp(2, vector<vector<int>>(n+5, vector<int>(2)));\r\n    //0 if you consider the same row, 1 if you ignore it\r\n    dp[0][n+1][0]=dp[1][n+1][0]=dp[0][n+1][1]=dp[1][n+1][1]=0;\r\n    for(int j=n; j>=0; j--) for(int i=0; i<2; i++){\r\n        int k=j+1;\r\n        if(a[i^1][k]==1){\r\n            if(k<n&&a[i][k+1]==1){\r\n                dp[i][k][0]=1+min(dp[i][k+1][0],dp[i^1][k+1][1]);\r\n            }\r\n            else{\r\n                dp[i][k][0]=dp[i^1][k][1];\r\n            }\r\n        }\r\n        else{\r\n            dp[i][k][0]=dp[i][k][1];\r\n        }\r\n        if(cl[i][j].f<n&&cl[i][j].s==0&&a[i][cl[i][j].f+1]==1&&a[i^1][cl[i][j].f]==1){\r\n            int nxt=cl[i][j].f;\r\n            dp[i][j][1]=1+min(dp[i^1][nxt+1][1],dp[i][nxt+1][0]);\r\n        }\r\n        else{\r\n            if(cl[i][j].s==0) dp[i][j][1]=dp[i^1][cl[i][j].f][1];\r\n            else{\r\n                dp[i][j][1]=dp[i][cl[i][j].f][0];\r\n            }\r\n        }\r\n    }\r\n    cout<<cnt-dp[0][1][0];\r\n}\r\n\r\nsigned main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    int God=1;\r\n    //cin >> God; \r\n    while (God--) {\r\n        solve();\r\n        nel;\r\n    }\r\n    return 0;\r\n}"
}