{
    "id": 233056369,
    "contestId": 1739,
    "creationTimeSeconds": 1700208425,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1739,
        "index": "E",
        "name": "Cleaning Robot",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    "author": {
        "contestId": 1739,
        "members": [
            {
                "handle": "aYi_7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664462100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 2969600,
    "source": "// Problem: E. Cleaning Robot\r\n// Contest: Codeforces - Educational Codeforces Round 136 (Rated for Div. 2)\r\n// URL: https://codeforces.com/problemset/problem/1739/E\r\n// Memory Limit: 512 MB\r\n// Time Limit: 3000 ms\r\n//\r\n// Powered by CP Editor (https://cpeditor.org)\r\n\r\n#include <bits/stdc++.h>\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define ci const int\r\n#define PLL pair<ll, ll>\r\n#define PII pair<int, int>\r\n#define PSI pair<string, int>\r\n#define PCI pair<char, int>\r\n#define inf 0x3f3f3f3f\r\n#define lowbit(x) x &(-x)\r\nusing namespace std;\r\nconst int N = 2e5 + 7;\r\nchar mp[3][N];\r\nint f[3][N];\r\nvoid solved() {\r\n    memset(f, 0, sizeof f);//\r\n    f[1][1] = 0;\r\n  int n;\r\n  cin >> n;\r\n  for (int i = 1; i <= 2; i++)\r\n    for (int j = 1; j <= n; j++) cin >> mp[i][j];\r\n\r\n  int res = 0;\r\n  if (mp[2][1] == '1') f[2][1] = 1;\r\n  f[1][2] = f[1][1] + mp[1][2] - '0';\r\n  if (mp[2][1] == '1') f[2][2] = f[2][1] + mp[2][2] - '0';\r\n  if (mp[2][2] == '1') f[2][2] = max(f[2][2], f[1][2] + 1);\r\n\r\n  for (int i = 3; i <= n; i++) {\r\n    f[1][i] = f[1][i - 1];\r\n    if (mp[1][i] == '1') {\r\n      f[1][i] =\r\n          max(f[1][i], f[2][i - 2] + mp[2][i - 1] + mp[2][i] - '0' - '0') + 1;\r\n    }\r\n    f[2][i] = f[2][i - 1];\r\n    if (mp[2][i] == '1') {\r\n      f[2][i] =\r\n          max(f[2][i], f[1][i - 2] + mp[1][i - 1] + mp[1][i] - '0' - '0') + 1;\r\n    }\r\n  }\r\n\r\n    cout << max(f[1][n], f[2][n]);\r\n}\r\n\r\nint main() {\r\n  ios::sync_with_stdio(false);\r\n  cin.tie(0), cout.tie(0);\r\n\r\n  solved();\r\n\r\n  return 0;\r\n}"
}