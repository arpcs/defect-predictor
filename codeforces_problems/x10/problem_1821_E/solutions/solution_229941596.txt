{
    "id": 229941596,
    "contestId": 1821,
    "creationTimeSeconds": 1698365700,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1821,
        "index": "E",
        "name": "Rearrange Brackets",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "sortings",
            "strings"
        ]
    },
    "author": {
        "contestId": 1821,
        "members": [
            {
                "handle": "lyh3.14"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682001300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 3584000,
    "source": "// LUOGU_RID: 131792731\n#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ninline ll read() {\r\n    ll x = 0, f = 1;\r\n    char ch = getchar();\r\n    while (ch < '0' || ch > '9') {\r\n        if (ch == '-') f = -1;\r\n        ch = getchar();\r\n    }\r\n    while (ch >= '0' && ch <= '9') {\r\n        x = (x << 1) + (x << 3) + (ch ^ '0');\r\n        ch = getchar();\r\n    }\r\n    return x * f;\r\n}\r\nconst int N = 2e5 + 10;\r\nint t, k, n; char a[N], b[N];\r\nint stk[N], top; int s1[N], s2[N], match[N];//s1\u662f\u5e38\u89c4\u7684\uff0c \u8868\u793a\u4ece1~i\u51fa\u73b0\u7684(\u7684\u4e2a\u6570 s2\u662f\u8868\u793a\u5728\u81ea\u5df1\u5916\u5c42\u7684\uff0c \u524d\u65b9\u7684(\u4e2a\u6570\r\nvoid init() {\r\n    top = 0; s1[0] = 0;\r\n}\r\nll solve() {\r\n    init(); ll ans = 0;\r\n    for (int i = 1; i <= n; i++) {\r\n        s1[i] = s1[i-1] + (a[i] == '(');\r\n        if (a[i] == '(') {\r\n            if (!top) s2[i] = 1;\r\n            else s2[i] = s2[stk[top]] + 1;\r\n            stk[++top] = i; ans += s2[i] - 1;\r\n        } else {\r\n            match[stk[top]] = i; --top;\r\n        }\r\n    }\r\n    //cerr << ans;\r\n    int st = 0; ll delta = 0; //()()()\r\n    for (int i = 1; i <= n; i++) {\r\n        if (a[i] == '(') {\r\n            ll sz = s2[i] - 1, sy = s1[match[i]-1] - s1[i];\r\n            if (sz + sy > delta) {\r\n                delta = sz + sy; st = i;\r\n            }\r\n        }\r\n    }\r\n    if (!st) return ans;\r\n    int cnt = 0; b[++cnt] = '(', b[++cnt] = ')';\r\n    for (int i = 1; i <= n; i++) {\r\n        if (i == st || i == match[st]) continue;\r\n        b[++cnt] = a[i];\r\n    }\r\n    for (int i= 1; i <= n; i++) a[i] = b[i]; //!!!\u4e0d\u80fd\u7528swap\r\n    return ans;\r\n}\r\nint main() {\r\n    t = read();\r\n    while (t--) {\r\n        k = read(); scanf(\"%s\", a + 1); ll ans = 1e18;\r\n        n = strlen(a + 1); reverse(a + 1, a + n + 1); //!!!reverse\u4ee5\u540e\u4e0d\u662f\u60f3\u8981\u7684\r\n        for (int i = 1; i <= n; i++) {\r\n        \ta[i] = (a[i] == '(') ? ')' : '(';\r\n        } a[n+1] = '\\0';\r\n        for (int i = 1; i <= k; i++) {\r\n            ans = min(ans, solve());\r\n        } ans = min(ans, solve());\r\n        printf(\"%lld\\n\", ans);\r\n    }\r\n    return 0;\r\n}\r\n/*\r\n100\r\n1\r\n(((())))\r\n*/\r\n"
}