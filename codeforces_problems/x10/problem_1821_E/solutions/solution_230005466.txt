{
    "id": 230005466,
    "contestId": 1821,
    "creationTimeSeconds": 1698408079,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1821,
        "index": "E",
        "name": "Rearrange Brackets",
        "type": "PROGRAMMING",
        "rating": 2100,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "sortings",
            "strings"
        ]
    },
    "author": {
        "contestId": 1821,
        "members": [
            {
                "handle": "secondboccoli"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1682001300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 4403200,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nconst long long N = 2e5 + 10;\nlong long n, k;\nvoid solve() {\n  string s;\n  cin >> k >> s;\n  n = s.size();\n  s = \" \" + s;\n  vector<long long> match(n + 1), matchPos(n + 1);\n  vector<bool> vis(n + 1);\n  stack<long long> stk;\n  for (long long i = 1; i <= n; i++) {\n    if (s[i] == '(')\n      stk.push(i);\n    else {\n      match[stk.top()] = i;\n      matchPos[i] = stk.top();\n      stk.pop();\n    }\n  }\n  while (k--) {\n    long long mx = 0, pos = -1;\n    for (long long i = 1; i <= n; i++) {\n      if (vis[i]) continue;\n      if (s[i] == '(') {\n        long long d = match[i] - i - 1;\n        if (mx < d) {\n          mx = d;\n          pos = i;\n        }\n      }\n    }\n    if (pos == -1) break;\n    long long l = pos, r = match[pos];\n    vis[l] = vis[r] = true;\n    match[matchPos[l]] = match[r];\n    matchPos[match[r]] = matchPos[l];\n  }\n  long long ans = 0, cnt = 0;\n  for (long long i = 1; i <= n; i++) {\n    if (vis[i]) continue;\n    if (s[i] == '(')\n      cnt++;\n    else {\n      ans += cnt - 1;\n      cnt--;\n    }\n  }\n  cout << ans << '\\n';\n}\nsigned main() {\n  ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\n  long long l_l_l = 1;\n  cin >> l_l_l;\n  while (l_l_l--) {\n    solve();\n  }\n  return 0;\n}\n"
}