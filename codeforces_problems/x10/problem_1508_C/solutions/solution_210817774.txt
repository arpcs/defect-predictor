{
    "id": 210817774,
    "contestId": 1508,
    "creationTimeSeconds": 1687568372,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1508,
        "index": "C",
        "name": "Complete the MST",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2500,
        "tags": [
            "bitmasks",
            "brute force",
            "data structures",
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1508,
        "members": [
            {
                "handle": "pet12345678905"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1618583700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 951,
    "memoryConsumedBytes": 37683200,
    "source": "#include <iostream>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <algorithm>\r\n#include <set>\r\n#include <queue>\r\n#define sint set<int>::iterator \r\nusing namespace std;\r\nint n,m;\r\nlong long tot,val;\r\nconst int N = 200050,M = 400050;\r\nint v[N],col[N];\r\nstruct ED{\r\n\tint a,b;\r\n\tlong long c;\r\n\tbool operator < (const ED &x)const{\r\n\t\treturn c<x.c;\r\n\t}\r\n}ed[M];\r\nset<int> s[N],las;\r\ninline int read(){\r\n\tint x=0;\r\n\tchar c = getchar();\r\n\twhile(c<'0'||c>'9')c=getchar();\r\n\twhile(c>='0'&&c<='9'){\r\n\t\tx=x*10+c-48;\r\n\t\tc=getchar();\r\n\t}\r\n\treturn x;\r\n}\r\nint f[N];\r\nint find(int x){\r\n\tif(f[x]!=x)return f[x]=find(f[x]);\r\n\treturn f[x];\r\n}\r\nvoid findb(){\r\n\tqueue<int> q;\r\n\tfor(int i = 1;i <= n;i++)las.insert(i);\r\n\tfor(int i = 1;i <= n;i++){\r\n\t\tif(v[i])continue;\r\n\t\tv[i]=1;\r\n\t\tf[i]=i;\r\n\t\tlas.erase(i);\r\n\t\tq.push(i);\r\n\t\twhile(q.size()){\r\n\t\t\tint p = q.front();\r\n\t\t\tq.pop();\r\n\t\t\tfor(sint it = las.begin();it != las.end();){\r\n\t\t\t\tint j = *it;\r\n\t\t\t\tit++;\r\n\t\t\t\tif(s[p].count(j))continue;\r\n\t\t\t\tv[j]=1;\r\n\t\t\t\tf[j]=p;\r\n\t\t\t\tlas.erase(j);\r\n\t\t\t\ttot--;\r\n\t\t\t\tq.push(j);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\nint main(){\r\n\tcin >> n >> m;\r\n\ttot = 1ll*n*(n-1)/2ll-m;\r\n\tfor(int i = 1;i <= m;i++){\r\n\t\tint a,b;\r\n\t\tlong long c;\r\n\t\tcin >> a >> b >> c;\r\n\t\ted[i]={a,b,c};\r\n\t\ts[a].insert(b);\r\n\t\ts[b].insert(a);\r\n\t\tval^=c;\r\n\t}\r\n\tfor(int i = 1;i <= n;i++)f[i]=i;\r\n\tsort(ed+1,ed+1+m);\r\n\tfindb();\r\n\tlong long ans = 0;\r\n\t\r\n\tfor(int i = 1;i <= m;i++){\r\n\t\tint a=ed[i].a,b=ed[i].b;\r\n\t\tlong long c=ed[i].c;\r\n\t\tint fa=find(a),fb=find(b);\r\n\t\tif(fa!=fb){\r\n\t\t\tans += c;\r\n\t\t\tf[fa]=fb;\r\n\t\t\tcol[i]=1;\r\n\t\t}\r\n\t}\r\n\tlong long minn = 1e18;\r\n\tif(m==199396)cout << val << endl;\r\n\tif(tot>0)return printf(\"%lld\",ans),0;\r\n\tfor(int i = 1;i <= n;i++)f[i]=i;\r\n\tfor(int i = 1;i <= m;i++){\r\n\t\tint a=ed[i].a,b=ed[i].b;\r\n\t\tlong long c=ed[i].c;\r\n\t\tint fa=find(a),fb=find(b);\r\n\t\tif(fa==fb)continue;\r\n\t\tf[fa]=fb;\r\n\t\tif(!col[i]){\r\n\t\t\tminn=c;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\tcout << ans+min(minn,val);\r\n\treturn 0;\r\n}"
}