{
    "id": 210983863,
    "contestId": 1508,
    "creationTimeSeconds": 1687661167,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1508,
        "index": "C",
        "name": "Complete the MST",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2500,
        "tags": [
            "bitmasks",
            "brute force",
            "data structures",
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1508,
        "members": [
            {
                "handle": "zyc070419"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1618583700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 1341,
    "memoryConsumedBytes": 9318400,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\nusing namespace std;\r\nconst int N = 2e5+ 10;\r\n\r\nstruct node {\r\n\tint x, y, val;\r\n\tnode(int a = 0, int b = 0, int c = 0) {x = a; y = b; val = c;}\r\n}E[N];\r\nstruct edge {\r\n\tint to, nxt, val;\r\n}e[N << 1];\r\nint n, m, val, fa[N], link[N], tot, num;\r\nll ans;\r\nbool vis[N], in[N];\r\nbitset<N> now, tmp, all;\r\n\r\nbool cmp(node x, node y) {return x.val < y.val;}\r\n\r\nvoid ins(int x, int y, int z) {\r\n\te[++tot].nxt = link[x]; e[tot].to = y; e[tot].val = z; link[x] = tot;\r\n\te[++tot].nxt = link[y]; e[tot].to = x; e[tot].val = z; link[y] = tot;\r\n}\r\n\r\nvoid work(int x, int anc) {\r\n\tif (x > n) return;\r\n//\tprintf(\"%d\\n\", x);\r\n\tvis[x] = true; all[x] = now[x] = 0; tmp = all; fa[x] = anc; num++;\r\n//\tcout << all << '\\n' << all._Find_first() << '\\n';\r\n\tfor (int i = link[x]; i; i = e[i].nxt) tmp[e[i].to] = 0;\r\n//\tcout << now << '\\n';\r\n\tnow |= tmp; work(now._Find_first(), anc);\r\n}\r\n\r\ninline int getfa(int x) {return x == fa[x] ? x : fa[x] = getfa(fa[x]);}\r\n\r\nint main() {\r\n\tint x, y, z; all.set(); all[0] = 0;\r\n\tscanf(\"%d%d\", &n, &m);\r\n\tfor (int i = 1; i <= m; ++i) {\r\n\t\tscanf(\"%d%d%d\", &x, &y, &z);\r\n\t\tE[i] = node(x, y, z); val ^= z;\r\n\t\tins(x, y, z);\r\n\t}\r\n\tfor (int i = 1; i <= n; ++i)\r\n\t\tif (!vis[i]) now.reset(), work(i, i), num--;\r\n\tsort(E + 1, E + 1 + m, cmp);\r\n\tfor (int i = 1; i <= m; ++i) {\r\n\t\tx = getfa(E[i].x); y = getfa(E[i].y);\r\n\t\tif (x == y) continue;\r\n\t\tans += 1ll * E[i].val; fa[x] = y; in[i] = true;\r\n\t}\r\n\tif (num + m == 1ll * n * (n - 1) / 2) {\r\n\t\tfor (int i = 1; i <= n; ++i) fa[i] = i;\r\n\t\tfor (int i = 1; i <= m; ++i) {\r\n\t\t\tif (E[i].val >= val) break;\r\n\t\t\tx = getfa(E[i].x), y = getfa(E[i].y);\r\n\t\t\tif (x == y) continue;\r\n\t\t\tfa[x] = y;\r\n\t\t\tif (!in[i]) {\r\n\t\t\t\tval = E[i].val;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}else val = 0;\r\n\tprintf(\"%lld\\n\", ans + val);\r\n\treturn 0;\r\n}"
}