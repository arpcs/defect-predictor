{
    "id": 204250259,
    "contestId": 1508,
    "creationTimeSeconds": 1683034075,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1508,
        "index": "C",
        "name": "Complete the MST",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2500,
        "tags": [
            "bitmasks",
            "brute force",
            "data structures",
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1508,
        "members": [
            {
                "handle": "5ab"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1618583700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 18022400,
    "source": "// LUOGU_RID: 109430706\n/* name: 1508C\n * author: 5ab\n * created at: 2023-05-02\n */\n#include <iostream>\n#include <algorithm>\n#include <numeric>\n#include <tuple>\nusing namespace std;\n\ntypedef long long ll;\nconst int max_n = 2e5, max_m = 2e5;\n\ntuple<int, int, int> e[max_m];\nint hd[max_n], des[max_m * 2], deg[max_n], nxt[max_m * 2], dsu[max_n], dsu2[max_n], e_cnt = 0;\nbool ext[max_n], has[max_n];\n\nvoid add(int s, int t)\n{\n\tdes[e_cnt] = t;\n\tnxt[e_cnt] = hd[s];\n\thd[s] = e_cnt++;\n\tdeg[s]--;\n}\n\nint fnd(int x) { return x == dsu[x] ? x : (dsu[x] = fnd(dsu[x])); }\nint fnd2(int x) { return x == dsu2[x] ? x : (dsu2[x] = fnd2(dsu2[x])); }\n\nsigned main()\n{\n\tios_base::sync_with_stdio(false);\n\tcin.tie(nullptr);\n\t\n\tint n, m, sm = 0;\n\t\n\tcin >> n >> m;\n\t\n\tfill(hd, hd + n, -1);\n\tiota(dsu, dsu + n, 0);\n\tiota(dsu2, dsu2 + n, 0);\n\tfill(deg, deg + n, n - 1);\n\t\n\tfor (int i = 0, x, y, c; i < m; i++)\n\t{\n\t\tcin >> x >> y >> c, x--, y--;\n\t\tadd(x, y), add(y, x);\n\t\te[i] = make_tuple(c, x, y);\n\t\tsm ^= c;\n\t}\n\tsort(e, e + m);\n\t\n\tint tec = 0;\n\t\n\tauto check = [&](int x) {\n\t\tfill(has, has + n, true);\n\t\tfor (int p = hd[x], dst; p != -1; p = nxt[p])\n\t\t{\n\t\t\tdst = des[p];\n\t\t\thas[dst] = false;\n\t\t}\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tif (has[i])\n\t\t\t{\n\t\t\t\tif (fnd(i) != fnd(x))\n\t\t\t\t{\n\t\t\t\t\tdsu[fnd(x)] = fnd(i);\n\t\t\t\t\ttec++;\n\t\t\t\t}\n\t\t\t}\n\t};\n\t\n\tint x = max_element(deg, deg + n) - deg;\n\t\n\tcheck(x);\n\tcopy(has, has + n, ext);\n\tfor (int i = 0; i < n; i++)\n\t\tif (!ext[i])\n\t\t\tcheck(i);\n\tif (tec < 1ll * n * (n - 1) / 2 - m)\n\t\tsm = 0;\n\t\n\tll ans = sm;\n\tfor (int i = 0; i < m; i++)\n\t{\n\t\tauto [c, x, y] = e[i];\n\t\tif (fnd(x) == fnd(y))\n\t\t{\n\t\t\tif (fnd2(x) != fnd2(y) && c < sm)\n\t\t\t{\n\t\t\t\tans -= sm;\n\t\t\t\tsm = c;\n\t\t\t\tans += c;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tans += c;\n\t\t\tdsu[fnd(x)] = fnd(y);\n\t\t\tdsu2[fnd2(x)] = fnd2(y);\n\t\t}\n\t}\n\t\n\tcout << ans << endl;\n\t\n\treturn 0;\n}\n// started coding at: 05-02 20:57:22"
}