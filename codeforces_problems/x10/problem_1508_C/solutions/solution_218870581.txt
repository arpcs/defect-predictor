{
    "id": 218870581,
    "contestId": 1508,
    "creationTimeSeconds": 1692072811,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1508,
        "index": "C",
        "name": "Complete the MST",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2500,
        "tags": [
            "bitmasks",
            "brute force",
            "data structures",
            "dfs and similar",
            "dsu",
            "graphs",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1508,
        "members": [
            {
                "handle": "duck_pear"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1618583700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/*\r\n  hmz is cute!\r\n------------------------\r\n  You've got to have faith.\r\n  Don't let them cut you down cut you down once more.\r\n*/\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define TY long long\r\n#define IL inline\r\n#define mod (TY)(1e9+7)\r\n#define pb push_back\r\n#define INF (TY)(1e9)\r\n#define MAXN 1000005\r\n#define MAXM 200005\r\n#define MAXK 27\r\n#define For(i,a,b) for(int i=(a);i<=(b);++i)\r\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\r\n#define Rof(i,a,b) for(int i=(a);i>=(b);--i)\r\n#define ROF(i,a,b) for(int i=(a);i>(b);--i)\r\nIL TY qr(){\r\n    TY u=0,v=1;char ch=getchar();\r\n    while(ch<'0'||ch>'9')v=(ch=='-'?-1:1),ch=getchar();\r\n    while(ch>='0'&&ch<='9')u=u*10+(ch-'0'),ch=getchar();\r\n    return u*v;\r\n}IL void qw(TY x){\r\n    if(x<0){putchar('-');x=-x;}\r\n    if(!x){putchar('0');return;}\r\n    if(x>=10)qw(x/10);putchar(x%10+'0');\r\n}IL void qw(TY x,char op){qw(x);putchar(op);}\r\nIL bool ischar(char ch){return (ch>='A'&&ch<='Z')||(ch>='a'&&ch<='z');}\r\nIL char getc(){\r\n    char ch=getchar();\r\n    while(!ischar(ch))ch=getchar();\r\n    return ch;\r\n}IL string qs(){\r\n    char ch=getchar();string s=\"\";\r\n    while(!ischar(ch))ch=getchar();\r\n    while(ischar(ch))s+=ch,ch=getchar();\r\n    return s;\r\n}IL void ws(string s){FOR(i,0,s.size())putchar(s[i]);}\r\nIL TY Ceil(TY x,TY y){return x/y+(x%y!=0);}\r\nIL TY Mod(TY x){return (x>=mod?x-mod:x);}\r\nIL void Mod(TY &x,TY y){x=Mod(x+y);}\r\nIL void Min(TY&x,TY y){x=(x<y?x:y);}\r\nIL void Max(TY&x,TY y){x=(x>y?x:y);}\r\nIL TY Pow(TY x,TY y){\r\n    TY ans=1,base=x;\r\n    while(y){\r\n        if(y&1)ans=ans*base%mod;\r\n        base=base*base%mod;y>>=1;\r\n    }return ans;\r\n}TY n,m,fa[MAXN],Fa[MAXN],ans;bool vis[1005][1005];\r\nstruct edge{TY u,v,w;}s[MAXN];\r\nvector<pair<TY,TY> > e[MAXN];\r\nqueue<TY> q;\r\nIL bool cmp1(edge x,edge y){return x.w<y.w;}\r\nIL bool cmp2(pair<TY,TY> x,pair<TY,TY> y){return x.first<y.first;}\r\nIL void Pb(TY i,TY j,TY k){e[i].pb({j,k});e[j].pb({i,k});}\r\nTY getfa(TY now){\r\n    if(fa[now]==now)return now;\r\n    else{\r\n        fa[now]=getfa(fa[now]);\r\n        return fa[now];\r\n    }\r\n}TY getFa(TY now){\r\n    if(Fa[now]==now)return now;\r\n    else{\r\n        Fa[now]=getfa(Fa[now]);\r\n        return Fa[now];\r\n    }\r\n}struct node{\r\n    TY tree[MAXN<<2];\r\n    IL TY push_up(TY x,TY y){return x!=INF?x:y;}\r\n    void build(TY now,TY l,TY r){\r\n        if(l==r){tree[now]=l;return;}\r\n        TY mid=(l+r)>>1;\r\n        build(now<<1,l,mid);\r\n        build(now<<1|1,mid+1,r);\r\n        tree[now]=push_up(tree[now<<1],tree[now<<1|1]);\r\n    }void update(TY now,TY l,TY r,TY x){\r\n        if(l==r){tree[now]=INF;return;}\r\n        TY mid=(l+r)>>1;\r\n        if(x<=mid)update(now<<1,l,mid,x);\r\n        else update(now<<1|1,mid+1,r,x);\r\n        tree[now]=push_up(tree[now<<1],tree[now<<1|1]);\r\n    }TY query(TY now,TY l,TY r,TY x,TY y){\r\n        if(l>y||r<x)return INF;\r\n        if(x<=l&&r<=y)return tree[now];\r\n        TY mid=(l+r)>>1;\r\n        return push_up(query(now<<1,l,mid,x,y),query(now<<1|1,mid+1,r,x,y));\r\n    }\r\n}tr;\r\nint main(){\r\n    n=qr();m=qr();\r\n    TY all=0;\r\n    For(i,1,n)fa[i]=Fa[i]=i;\r\n    For(i,1,m){\r\n        s[i].u=qr(),s[i].v=qr(),s[i].w=qr();\r\n        all^=s[i].w;\r\n        Pb(s[i].u,s[i].v,s[i].w);\r\n    }if(n*(n-1)/2-m<n){\r\n        For(i,1,n)FOR(j,0,e[i].size())vis[i][e[i][j].first]=1;\r\n        bool ok=0;sort(s+1,s+1+m,cmp1);\r\n        For(i,1,n)For(j,i+1,n)if(!vis[i][j]){\r\n            if(getfa(i)==getfa(j))ok=1;\r\n            else fa[getfa(i)]=getfa(j),Fa[getFa(i)]=getFa(j);\r\n        }ans+=(!ok)*all;\r\n        For(i,1,m)if(getfa(s[i].u)!=getfa(s[i].v)){\r\n            fa[getfa(s[i].u)]=getfa(s[i].v);\r\n            ans+=s[i].w;\r\n        }else if(getFa(s[i].u)==getFa(s[i].v)&&!ok&&s[i].w<all)ok=1,ans+=s[i].w-all;\r\n        qw(ans);\r\n    }else{\r\n        sort(s+1,s+1+m,cmp1);\r\n        tr.build(1,1,n);TY id=1;\r\n        q.push(1);\r\n        while(!q.empty()){\r\n            while(!q.empty()){\r\n                TY now=q.front();\r\n                q.pop();\r\n                tr.update(1,1,n,now);\r\n                e[now].pb({0,0});e[now].pb({n+1,0});\r\n                sort(e[now].begin(),e[now].end(),cmp2);\r\n                FOR(i,0,(TY)e[now].size()-1){\r\n                    TY fir=e[now][i].first+1,sec=e[now][i+1].first-1;\r\n                    while(tr.query(1,1,n,fir,sec)!=INF){\r\n                        TY tmp=tr.query(1,1,n,fir,sec);\r\n                        tr.update(1,1,n,tmp);\r\n                        q.push(tmp);\r\n                        fa[getfa(fa,now)]=getfa(fa,tmp);\r\n                    }\r\n                }\r\n            }while(id<=n&&tr.query(1,1,n,id,id)==INF)++id;\r\n            if(id<=n)q.push(id);\r\n        }For(i,1,m)if(getfa(fa,s[i].u)!=getfa(fa,s[i].v)){\r\n            ans+=s[i].w;fa[getfa(fa,s[i].u)]=getfa(fa,s[i].v);\r\n        }qw(ans);\r\n    }\r\n    return 0;\r\n}"
}