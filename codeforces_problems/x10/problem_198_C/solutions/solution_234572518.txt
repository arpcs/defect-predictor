{
    "id": 234572518,
    "contestId": 198,
    "creationTimeSeconds": 1701082825,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 198,
        "index": "C",
        "name": "Delivering Carcinogen",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "geometry"
        ]
    },
    "author": {
        "contestId": 198,
        "members": [
            {
                "handle": "nguyenquocthinhhung"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1340379000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 50,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long double lb;\r\nconst lb pi=acos(-1);\r\nlb xp,yp,vp,x,y,v,r,R,len1,len2,deg1,deg2,tl,tr,ans;\r\ninline lb check(lb t){\r\n\tlb deg=atan2(yp,xp)+t*vp,nx=R*cos(deg),ny=R*sin(deg),M=atan2(y,x)-atan2(ny,nx);\r\n\tif (M<0) M=-M;\r\n\tif (M>pi) M=pi*2-M;\r\n\treturn deg1+deg2>=M?sqrt((x-nx)*(x-nx)+(y-ny)*(y-ny)):len1+len2+r*(M-deg1-deg2);\r\n}\r\nint main(){\r\n\tcin>>xp>>yp>>vp>>x>>y>>v>>r;\r\n\tR=sqrt(xp*xp+yp*yp);\r\n\tlen1=sqrt(x*x+y*y-r*r),len2=sqrt(R*R-r*r);\r\n\tdeg1=atan(len1/r),deg2=atan(len2/r);\r\n\ttl=0,tr=1e9; vp/=R;\r\n\tfor (int i=1; i<=100; i++){\r\n\t\tlb mid=(tl+tr)/2;\r\n\t\tif (check(mid)/v<=mid) ans=mid,tr=mid;\r\n\t\telse tl=mid;\r\n\t}\r\n\tprintf(\"%.9lf\\n\",(double)ans);\r\n}"
}