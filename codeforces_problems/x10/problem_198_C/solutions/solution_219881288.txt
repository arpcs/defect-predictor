{
    "id": 219881288,
    "contestId": 198,
    "creationTimeSeconds": 1692690602,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 198,
        "index": "C",
        "name": "Delivering Carcinogen",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "geometry"
        ]
    },
    "author": {
        "contestId": 198,
        "members": [
            {
                "handle": "hylhyl"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1340379000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 50,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "#include<iostream>\r\n#include<stdio.h>\r\n#include<algorithm>\r\n#include<string.h>\r\n#include<math.h>\r\n#include<queue>\r\n#include<stack>\r\n#define ll long long\r\n#define pi acos(-1)\r\nusing namespace std;  \r\nstruct node\r\n{\r\n     double x,y,v,r;\r\n}p,Q,h,D;\r\ndouble mid,l,r,alp,thelen;\r\ndouble l1,l2,l3,a1;\r\ndouble dis(node a,node b)\r\n{\r\n      return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\r\n}\r\nbool CorssTheCircle(node a,node b)\r\n{\r\n      double d1=fabs(a.x*b.y-b.x*a.y)/dis(a,b),d2,d3,d4;\r\n      if (a1<1e-10 || d1-Q.r>-1e-10) return true; \r\n      return false;    \r\n} \r\ndouble judge(double t)\r\n{\r\n     double a=p.v*t+alp,t1;\r\n     h.x=p.r*cos(a); \r\n     h.y=p.r*sin(a); \r\n     l1=(Q.x*Q.x)+(Q.y*Q.y);\r\n     l2=(h.x*h.x)+(h.y*h.y);  \r\n     l3=(Q.x-h.x)*(Q.x-h.x)+(Q.y-h.y)*(Q.y-h.y);\r\n     a1=acos((l1+l2-l3)/(2*sqrt(l1)*sqrt(l2)))-acos(Q.r/sqrt(l1))-acos(Q.r/sqrt(l2));\r\n     if (CorssTheCircle(Q,h))  t1=dis(h,Q);\r\n     else t1=sqrt(l1-Q.r*Q.r)+sqrt(l2-Q.r*Q.r)+thelen*a1/(2*pi); \r\n     t1/=Q.v;\r\n     if (t1<t) return false;\r\n     return true;\r\n}\r\nint main()\r\n{ \r\n     while (~scanf(\"%lf%lf%lf\",&p.x,&p.y,&p.v))\r\n     { \r\n            scanf(\"%lf%lf%lf%lf\",&Q.x,&Q.y,&Q.v,&Q.r);\r\n            thelen=2*pi*Q.r;\r\n            p.r=sqrt(p.x*p.x+p.y*p.y); \r\n            D.x=D.y=0;\r\n            alp=acos(p.x/p.r);\r\n            if (p.y<0) alp=-alp;\r\n            p.v/=p.r;  \r\n            l=0; r=1e+10;\r\n            while (r-l>1e-12)\r\n            {\r\n                   mid=(l+r)*0.5; \r\n                   if (judge(mid)) l=mid;\r\n                       else  r=mid;\r\n            }\r\n            printf(\"%.9lf\\n\",l);\r\n     }\r\n     return 0;\r\n}"
}