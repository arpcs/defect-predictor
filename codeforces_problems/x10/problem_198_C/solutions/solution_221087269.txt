{
    "id": 221087269,
    "contestId": 198,
    "creationTimeSeconds": 1693401802,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 198,
        "index": "C",
        "name": "Delivering Carcinogen",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "geometry"
        ]
    },
    "author": {
        "contestId": 198,
        "members": [
            {
                "handle": "zavodil"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1340379000
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 50,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 0,
    "source": "import math\r\n \r\nxp, yp, vp = map(int, input().split())\r\nx, y, v, r = map(int, input().split())\r\n\r\nR = math.sqrt(xp * xp + yp * yp)\r\nlen1 = math.sqrt(x * x + y * y - r * r)\r\nlen2 = math.sqrt(R * R - r * r)\r\n\r\ndeg1 = math.atan(len1 / r)\r\ndeg2 = math.atan(len2 / r)\r\n\r\ntl = 0\r\ntr = 1e9\r\n\r\nvp /= R\r\n\r\ndef check(t):\r\n    deg = math.atan2(yp, xp) + t * vp\r\n\r\n    nx = R * math.cos(deg)\r\n    ny = R * math.sin(deg)\r\n\r\n    M = abs(math.atan2(y, x) - math.atan2(ny, nx))\r\n\r\n    if M > math.pi:\r\n        M = math.pi * 2 - M\r\n\r\n    return deg1 + deg2 >= M and math.sqrt((x - nx) ** 2 + (y - ny) ** 2) or len1 + len2 + r * (M - deg1 - deg2)\r\n\r\nfor _ in range(100):\r\n    mid = (tl + tr) / 2\r\n    \r\n    if check(mid) / v <= mid:\r\n        ans = mid\r\n        tr = mid\r\n    else:\r\n        tl = mid\r\n\r\nprint(\"{:.9f}\".format(ans))# 1693401802.403859"
}