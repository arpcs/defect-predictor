{
    "id": 223155056,
    "contestId": 198,
    "creationTimeSeconds": 1694569946,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 198,
        "index": "C",
        "name": "Delivering Carcinogen",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2400,
        "tags": [
            "binary search",
            "geometry"
        ]
    },
    "author": {
        "contestId": 198,
        "members": [
            {
                "handle": "AhmedYasser101"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1340379000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 7987200,
    "source": "#include <iostream>\r\n//#define endl \"\\n\"\r\n#define ul unsigned long long\r\n#define all(v) v.begin(), v.end()\r\n#define allr(v) v.rbegin(), v.rend()\r\n#define Yasser ios_base::sync_with_stdio(false); cin.tie(nullptr);cout.tie(nullptr);\r\n#define yes cout<<\"YES\"<< endl;\r\n#define no cout<<\"NO\"<< endl;\r\n#define f(n) for(int i = 0; i < n; i++)\r\n#define ones(n) __builtin_popcountll(n)\r\n\r\n#include <cmath>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <map>\r\n#include <set>\r\n#include <queue>\r\n#include <stack>\r\n#include <unordered_set>\r\n#include <iomanip>\r\n\r\ntypedef long long ll;\r\n//#include <bits/stdc++.h>\r\n#include <climits>\r\n\r\nint dx[8] = {+0, +0, -1, +1, +1, +1, -1, -1};\r\nint dy[8] = {-1, +1, +0, +0, +1, -1, +1, -1};\r\n\r\nusing namespace std;\r\n\r\nll gcd(ll a, ll b) {\r\n    if (b == 0)\r\n        return a;\r\n    return gcd(b, a % b);\r\n}\r\n\r\nll lcm(ll a, ll b) {\r\n    return (a * b) / gcd(a, b);\r\n}\r\n\r\nconst ll mod = 1e9 + 7, inf = 1e18, M = 5e1 + 5, N = 1e6 + 5;\r\nll spf[N];\r\nvector<ll> primes;\r\n\r\n\r\nvoid sieve() {\r\n    for (int i = 1; i < N; ++i)\r\n        spf[i] = i;\r\n\r\n    for (ll i = 2; i < N; ++i) {\r\n        if (spf[i] == i) {\r\n            primes.push_back(i);\r\n            for (ll j = i * i; j < N; j += i) {\r\n                if (spf[j] == j)\r\n                    spf[j] = i;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nbool is_prime(ll x) {\r\n    if (x == 1)\r\n        return false;\r\n    if (x == 2 || x == 3)\r\n        return true;\r\n    for (int i = 2; i * i <= x; ++i) {\r\n        if (x % i == 0)\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nll FastPow(ll n, ll m) {\r\n    ll ans = 1;\r\n    while (m) {\r\n        if (m & 1) {\r\n            ans *= n, ans %= mod;\r\n        }\r\n        m /= 2;\r\n        n *= n, n %= mod;\r\n    }\r\n    return ans;\r\n}\r\n\r\nvoid files() {\r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n    freopen(\"error.txt\", \"w\", stderr);\r\n#endif\r\n}\r\n\r\nvoid solve() {\r\n    int n, ans = 0;\r\n    cin >> n;\r\n    vector<int> v(n);\r\n    for(auto &i: v) cin >> i;\r\n    map<int,int> m;\r\n    for (int i = 0; i < n; ++i) {\r\n        int x;\r\n        cin >> x;\r\n        m[x] = i;\r\n    }\r\n    for (int i = 1; i < n; ++i) {\r\n        if(m[v[i]] < m[v[i - 1]]) {\r\n            ans = n - i;\r\n            break;\r\n        }\r\n    }\r\n    cout << ans  << endl;\r\n}\r\n\r\nint main() {\r\n//    files();\r\n    Yasser\r\n    ll t = 1;\r\n//    cin >> t;\r\n    while (t--)\r\n        solve();\r\n\r\n}"
}