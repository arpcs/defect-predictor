{
    "id": 228737284,
    "contestId": 896,
    "creationTimeSeconds": 1697678631,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 896,
        "index": "C",
        "name": "Willem, Chtholly and Seniorious",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "data structures",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 896,
        "members": [
            {
                "handle": "wxt1221"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1512223500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 512000,
    "source": "// LUOGU_RID: 130279163\n#include <iostream>\n#include <cstdio>\n#include <set>\n#include <queue>\n#define Nde std::set<node>::iterator\nint pow(int a,int b,int y){\n  if(b==0){\n    return 1;\n  }\n  if(b%2==1){\n    return (pow(a,b-1,y)*a)%y;\n  }\n  int temp=pow(a,b/2,y);\n  return (temp*temp)%y;\n}\nclass que{\n  public:\n    int cnt,num;\n    que(int a,int b){\n      num=a;\n      cnt=b;\n      return ;\n    }\n};\nbool operator < (que a,que b){\n  return a.num>b.num;\n}\nstd::priority_queue<que> qu;\ninline int read();\nnamespace pro{\n  class node{\n    public:\n      int l,r;\n      mutable int v;\n      node(int ll,int rr,int num){\n        l=ll;\n        r=rr;\n        v=num;\n        return ;\n      }\n  };\n  bool operator < (node a,node b){\n    return a.l<b.l;\n  }\n  std::set<node>odt;\n  int n;\n  Nde split(int x){\n    if(x>n){\n      return odt.end();\n    }\n    Nde temp=odt.upper_bound(node(x,0,0));\n    temp--;\n    if((*temp).l==x){\n      return temp;\n    }\n    int l=(*temp).l;\n    int r=(*temp).r;\n    int v=(*temp).v;\n    odt.erase(temp);\n    odt.insert(node(l,x-1,v));\n    return odt.insert(node(x,r,v)).first;\n  }\n  void assign(int l,int r,int v){\n    Nde itr=split(r+1);\n    Nde itl=split(l);\n    odt.erase(itl,itr);\n    odt.insert(node(l,r,v));\n  }\n  void mod1(int l,int r,int v){\n    Nde itr=split(r+1);\n    Nde itl=split(l);\n    for(;itl!=itr;itl++){\n      (*(itl)).v+=v;\n    }\n    return ;\n  }\n  int query1(int l,int r,int x){\n    Nde itr=split(r+1);\n    Nde itl=split(l);\n    qu=std::priority_queue<que>();\n    for(;itl!=itr;itl++){\n      qu.push(que((*itl).v,(*itl).r-(*itl).l+1));\n    }\n    while(x>0&&qu.size()>0){\n      que temp=qu.top();\n      qu.pop();\n      x-=(temp.cnt);\n      if(x<=0){\n        return temp.num;\n      }\n    }\n    return -1;\n  }\n  int query2(int l,int r,int x,int y){\n    Nde itr=split(r+1);\n    Nde itl=split(l);\n    int ans=0;\n    for(;itl!=itr;itl++){\n      ans+=(((long long)((itl->r)-(itl->l)+1))*pow(itl->v,x,y))%y;\n      ans%=y;\n    }\n    return ans;\n  } \n  inline int read();\n  int m,seed,vmax;\n  int rnd(){\n    int ret=seed;\n    seed=(seed*7ll+13ll)%1000000007ll;\n    return ret;\n  }\n  int a[100005];\n  int solve(){\n    n=read();\n    m=read();\n    seed=read();\n    vmax=read();\n    for(int i=1;i<=n;i++){\n      a[i]=(rnd()%vmax)+1;\n      odt.insert(node(i,i,a[i]));\n    }\n    for(int i=1;i<=m;i++){\n      int op=(rnd()%4)+1;\n      int l=(rnd()%n)+1;\n      int r=(rnd()%n)+1;\n      if(l>r){\n        std::swap(l,r);\n      }\n      int x,y;\n      if(op==3){\n        x=(rnd()%(r-l+1))+1;\n      }else{\n        x=(rnd()%vmax)+1;\n      }\n      if(op==4){\n        y=(rnd()%vmax)+1;\n      }\n      if(op==1){\n        mod1(l,r,x);\n      }else if(op==2){\n        assign(l,r,x);\n      }else if(op==3){\n        printf(\"%d\\n\",query1(l,r,x));\n      }else{\n        printf(\"%d\\n\",query2(l, r, x, y));\n      }\n    }\n    return 0; \n  }\n};\nint main(){\n\t#ifdef ONLINE_JUDGE\n\t#else\n\tfreopen(\".in\",\"r\",stdin);\n\tfreopen(\".out\",\"w\",stdout);\n\t#endif\n\treturn pro::solve();\n}\ninline int pro::read(){\n\tint x=0,f=1;char c=getchar();\n\twhile(c<'0'||c>'9'){\n\t\tc=='-'?f=-1:1;\n\t\tc=getchar();\n\t}\n\twhile(c>='0'&&c<='9'){\n\t\tx=(x<<3)+(x<<1)+(c^48);\n\t\tc=getchar();\n\t}\n\treturn f*x;\n}\n/*\nAnything about this program:\nType:\n\nDescription:\n\nExample:\n\t1:\n\t\tIn:\n\n\t\tOut:\nMore:\n\n*/\n\n\n"
}