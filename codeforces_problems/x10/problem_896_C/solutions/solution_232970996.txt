{
    "id": 232970996,
    "contestId": 896,
    "creationTimeSeconds": 1700140141,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 896,
        "index": "C",
        "name": "Willem, Chtholly and Seniorious",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2600,
        "tags": [
            "data structures",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 896,
        "members": [
            {
                "handle": "luogu_bot3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1512223500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 409600,
    "source": "// LUOGU_RID: 135451624\n#include<algorithm>\r\n#include<iostream>\r\n#include<cstring>\r\n#include<cstdio>\r\n#include<cmath>\r\n#include<set>\r\n#define pi pair<ll,int>\r\n#define fi first\r\n#define se second\r\n#define mp make_pair\r\n#define pb push_back\r\n#define ub upper_bound\r\n#define mll mutable ll\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\nconst int MAXN=1e5+5;\r\nint n,m,a[MAXN];\r\ninline ll ksm(ll x,int y,int MOD){x%=MOD;ll mul=1;while(y){if(y&1)mul=mul*x%MOD;x=x*x%MOD;y>>=1;}return mul;}\r\n\r\nnamespace ODT{\r\n\tstruct node{\r\n\t\tint l,r;mll c;node(int l,int r=0,ll c=0):l(l),r(r),c(c){}\r\n\t\tinline bool operator<(const node&b)const{return r<b.r;}\r\n\t};set<node>s;\r\n\ttypedef set<node>::iterator IT;\r\n\tinline IT split(int p){\r\n\t\tIT it=--s.ub(p);\r\n\t\tif(it->l==p)return it;\r\n\t\tint l=it->l,r=it->r;ll c=it->c;\r\n\t\ts.erase(it);s.insert(node(l,p-1,c));\r\n\t\treturn s.insert(node(p,r,c)).first;\r\n\t}\r\n\tinline void assign(int l,int r,ll k){\r\n\t\tIT itr=split(r+1),itl=split(l);\r\n\t\ts.erase(itl,itr);s.insert(node(l,r,k));\r\n\t}\r\n\tinline void update(int l,int r,int k){\r\n\t\tIT itr=split(r+1),itl=split(l);\r\n\t\tfor(;itl!=itr;itl++)itl->c+=k;\r\n\t}\r\n\tinline ll queryKth(int l,int r,int k){\r\n\t\tIT itr=split(r+1),itl=split(l);\r\n\t\tvector<pi>res;\r\n\t\tfor(;itl!=itr;itl++)res.pb(mp(itl->c,itl->r-itl->l+1));\r\n\t\tsort(res.begin(),res.end());\r\n\t\tfor(pi i:res)\r\n\t\t\tif(k>i.se)k-=i.se;\r\n\t\t\telse return i.fi;\r\n\t\treturn -1;\r\n\t}\r\n\tinline ll query(int l,int r,int x,int y){\r\n\t\tIT itr=split(r+1),itl=split(l);\r\n\t\tll res=0;\r\n\t\tfor(;itl!=itr;itl++)res=(res+ksm(itl->c,x,y)*(itl->r-itl->l+1))%y;\r\n\t\treturn res;\r\n\t}\r\n}using namespace ODT;\r\n\r\nint seed,vmax;\r\ninline int rnd(){int ret=seed;seed=(seed*7ll+13)%1000000007;return ret;}\r\nint main(){\r\n\tscanf(\"%d%d%d%d\",&n,&m,&seed,&vmax);\r\n\tint lst=1;a[1]=rnd()%vmax+1;\r\n\tfor(int i=2;i<=n;i++){\r\n\t\ta[i]=rnd()%vmax+1;\r\n\t\tif(a[i]!=a[lst])s.insert(node(lst,i-1,a[lst])),lst=i;\r\n\t}s.insert(node(lst,n,a[lst]));\r\n\tfor(int op,l,r,k;m--;){\r\n\t\top=(rnd()&3)+1;l=rnd()%n+1;r=rnd()%n+1;\r\n\t\tif(l>r)l^=r^=l^=r;\r\n\t\tk=rnd()%(op==3?r-l+1:vmax)+1;\r\n\t\tswitch(op){\r\n\t\t\tcase 1: update(l,r,k);break;\r\n\t\t\tcase 2: assign(l,r,k);break;\r\n\t\t\tcase 3: printf(\"%lld\\n\",queryKth(l,r,k));break;\r\n\t\t\tdefault:printf(\"%lld\\n\",query(l,r,k,rnd()%vmax+1));\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
}