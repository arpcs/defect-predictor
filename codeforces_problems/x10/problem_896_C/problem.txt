{
    "contestId": 896,
    "index": "C",
    "name": "Willem, Chtholly and Seniorious",
    "type": "PROGRAMMING",
    "points": 1500.0,
    "rating": 2600,
    "tags": [
        "data structures",
        "probabilities"
    ],
    "desc": {
        "title": "C. Willem, Chtholly and Seniorious",
        "statement": "<div class=\"epigraph\"><div class=\"epigraph-text\"><span class=\"tex-font-style-it\"><p>\u2014 Willem...</p><p>\u2014 What's the matter?</p><p>\u2014 It seems that there's something wrong with Seniorious...</p><p>\u2014 I'll have a look...</p></span></div></div><center><p><img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/43c1b40837a8d0f9245554bac363fe1a7a21a74b.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/></p></center><p>Seniorious is made by linking special talismans in particular order.</p><p>After over 500 years, the carillon is now in bad condition, so Willem decides to examine it thoroughly.</p><p>Seniorious has <span class=\"tex-span\"><i>n</i></span> pieces of talisman. Willem puts them in a line, the <span class=\"tex-span\"><i>i</i></span>-th of which is an integer <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>.</p><p>In order to maintain it, Willem needs to perform <span class=\"tex-span\"><i>m</i></span> operations.</p><p>There are four types of operations:</p><ul><li> <span class=\"tex-span\">1 <i>l</i> <i>r</i> <i>x</i></span>: For each <span class=\"tex-span\"><i>i</i></span> such that <span class=\"tex-span\"><i>l</i>\u2009\u2264\u2009<i>i</i>\u2009\u2264\u2009<i>r</i></span>, assign <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub>\u2009+\u2009<i>x</i></span> to <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>.</li><li> <span class=\"tex-span\">2 <i>l</i> <i>r</i> <i>x</i></span>: For each <span class=\"tex-span\"><i>i</i></span> such that <span class=\"tex-span\"><i>l</i>\u2009\u2264\u2009<i>i</i>\u2009\u2264\u2009<i>r</i></span>, assign <span class=\"tex-span\"><i>x</i></span> to <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>.</li><li> <span class=\"tex-span\">3 <i>l</i> <i>r</i> <i>x</i></span>: Print the <span class=\"tex-span\"><i>x</i></span>-th smallest number in the index range <span class=\"tex-span\">[<i>l</i>,\u2009<i>r</i>]</span>, i.e. the element at the <span class=\"tex-span\"><i>x</i></span>-th position if all the elements <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> such that <span class=\"tex-span\"><i>l</i>\u2009\u2264\u2009<i>i</i>\u2009\u2264\u2009<i>r</i></span> are taken and sorted into an array of non-decreasing integers. It's guaranteed that <span class=\"tex-span\">1\u2009\u2264\u2009<i>x</i>\u2009\u2264\u2009<i>r</i>\u2009-\u2009<i>l</i>\u2009+\u20091</span>.</li><li> <span class=\"tex-span\">4 <i>l</i> <i>r</i> <i>x</i> <i>y</i></span>: Print the sum of the <span class=\"tex-span\"><i>x</i></span>-th power of <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> such that <span class=\"tex-span\"><i>l</i>\u2009\u2264\u2009<i>i</i>\u2009\u2264\u2009<i>r</i></span>, modulo <span class=\"tex-span\"><i>y</i></span>, i.e. <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/bb452ebe2c68ca0f9c697357e053ba4e4b93c89e.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>.</li></ul>",
        "inputSpecification": "<p>The only line contains four integers <span class=\"tex-span\"><i>n</i>,\u2009<i>m</i>,\u2009<i>seed</i>,\u2009<i>v</i><sub class=\"lower-index\"><i>max</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>n</i>,\u2009<i>m</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup>,\u20090\u2009\u2264\u2009<i>seed</i>\u2009&lt;\u200910<sup class=\"upper-index\">9</sup>\u2009+\u20097,\u20091\u2009\u2264\u2009<i>vmax</i>\u2009\u2264\u200910<sup class=\"upper-index\">9</sup></span>).</p><p>The initial values and operations are generated using following pseudo code:</p><pre class=\"verbatim\"><br/>def rnd():<br/><br/>    ret = seed<br/>    seed = (seed * 7 + 13) mod 1000000007<br/>    return ret<br/><br/>for i = 1 to n:<br/><br/>    a[i] = (rnd() mod vmax) + 1<br/><br/>for i = 1 to m:<br/><br/>    op = (rnd() mod 4) + 1<br/>    l = (rnd() mod n) + 1<br/>    r = (rnd() mod n) + 1<br/><br/>    if (l &gt; r): <br/>         swap(l, r)<br/><br/>    if (op == 3):<br/>        x = (rnd() mod (r - l + 1)) + 1<br/>    else:<br/>        x = (rnd() mod vmax) + 1<br/><br/>    if (op == 4):<br/>        y = (rnd() mod vmax) + 1<br/><br/></pre><p>Here <span class=\"tex-span\"><i>op</i></span> is the type of the operation mentioned in the legend.</p>",
        "outputSpecification": "<p>For each operation of types <span class=\"tex-span\">3</span> or <span class=\"tex-span\">4</span>, output a line containing the answer.</p>",
        "samples": [
            {
                "input": "<br/>def rnd():<br/><br/>    ret = seed<br/>    seed = (seed * 7 + 13) mod 1000000007<br/>    return ret<br/><br/>for i = 1 to n:<br/><br/>    a[i] = (rnd() mod vmax) + 1<br/><br/>for i = 1 to m:<br/><br/>    op = (rnd() mod 4) + 1<br/>    l = (rnd() mod n) + 1<br/>    r = (rnd() mod n) + 1<br/><br/>    if (l > r): <br/>         swap(l, r)<br/><br/>    if (op == 3):<br/>        x = (rnd() mod (r - l + 1)) + 1<br/>    else:<br/>        x = (rnd() mod vmax) + 1<br/><br/>    if (op == 4):<br/>        y = (rnd() mod vmax) + 1<br/><br/>",
                "output": "10 10 7 9<br/>"
            },
            {
                "input": "2<br/>1<br/>0<br/>3<br/>",
                "output": "10 10 9 9<br/>"
            }
        ],
        "note": "<p>In the first example, the initial array is <span class=\"tex-span\">{8,\u20099,\u20097,\u20092,\u20093,\u20091,\u20095,\u20096,\u20094,\u20098}</span>.</p><p>The operations are:</p><ul> <li> <span class=\"tex-span\">2 6 7 9</span> </li><li> <span class=\"tex-span\">1 3 10 8</span> </li><li> <span class=\"tex-span\">4 4 6 2 4</span> </li><li> <span class=\"tex-span\">1 4 5 8</span> </li><li> <span class=\"tex-span\">2 1 7 1</span> </li><li> <span class=\"tex-span\">4 7 9 4 4</span> </li><li> <span class=\"tex-span\">1 2 7 9</span> </li><li> <span class=\"tex-span\">4 5 8 1 1</span> </li><li> <span class=\"tex-span\">2 5 7 5</span> </li><li> <span class=\"tex-span\">4 3 10 8 5</span> </li></ul>"
    }
}