{
    "id": 228880615,
    "contestId": 1560,
    "creationTimeSeconds": 1697781672,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1560,
        "index": "D",
        "name": "Make a Power of Two",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "greedy",
            "math",
            "strings"
        ]
    },
    "author": {
        "contestId": 1560,
        "members": [
            {
                "handle": "Sa7afy22"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1629297300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 25,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nint minMoves() {\r\n    string n;\r\n    cin >> n;\r\n    vector<string> powerOf2;\r\n    long long now = 1;\r\n    while (now <= (long long) 1e18) {\r\n        powerOf2.emplace_back(to_string(now));\r\n        now *= 2;\r\n    }\r\n    int mnMoves = n.size() + 1;\r\n    for (int i = powerOf2.size() - 1; i >= 0; --i) {\r\n        int pos = 0;\r\n        for (int c = 0; c < n.size(); c++) {\r\n            if (n[c] == powerOf2[i][pos])pos++;\r\n            if (pos == powerOf2[i].size())break;\r\n        }\r\n        mnMoves = min(mnMoves, (int) (n.size() + powerOf2[i].size() - 2 * pos));\r\n    }\r\n    return mnMoves;\r\n}\r\n\r\nsigned main() {\r\n    int cases;\r\n    cin >> cases;\r\n    while (cases--) {\r\n        cout << minMoves() << '\\n';\r\n    }\r\n}"
}