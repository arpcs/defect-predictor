{
    "id": 207854160,
    "contestId": 1379,
    "creationTimeSeconds": 1685449921,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1379,
        "index": "E",
        "name": "Inverse Genealogy",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2800,
        "tags": [
            "constructive algorithms",
            "divide and conquer",
            "dp",
            "math",
            "trees"
        ]
    },
    "author": {
        "contestId": 1379,
        "members": [
            {
                "handle": "Noproblem29"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1595149200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1638400,
    "source": "#include<bits/stdc++.h>\r\n#pragma GCC target( \"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2,tune=native\")\r\n#pragma GCC optimize(\"Ofast,unroll-loops,fast-math,O3\")\r\nusing namespace std;\r\n#define int long long\r\n#define y1 cheza\r\n#define ff first\r\n#define ss second\r\n// #define endl '\\n'\r\n// mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\nconst int N=2e5+100;\r\nconst int M=500;\r\nconst int INF=1e18+1;\r\nconst int mod=1e9+7;\r\nconst long double eps=1e-6;\r\nint n,k;\r\nint p[N];\r\nint get(int x){\r\n    if((x&(x-1))==0){\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\nbool check(){\r\n    if(k>max((n-3)/2,0ll)||n%2==0){\r\n        return 1;\r\n    }\r\n    if(get(n+1)){\r\n        if(k==1){\r\n            return 1;\r\n        }\r\n    }\r\n    else{\r\n        if(k==0){\r\n            return 1;\r\n        }\r\n    }\r\n    return 0;\r\n}\r\nvoid dfs(){\r\n    for(int i=1;i<(k-1)*2;i++){\r\n        p[i]=i-2;\r\n        p[i+1]=i;\r\n    }\r\n    \r\n    for(int i=1;i<=n-(k-1)*2;i++){\r\n        if(i==1){\r\n            p[i+(k-1)*2]=max(0ll,(k-1)*2-1);\r\n        }\r\n        else{\r\n            p[i+(k-1)*2]=i/2+(k-1)*2;\r\n        }\r\n    }\r\n    if(get(n-(k-1)*2+1)&&k>0){\r\n        p[n-1]=2;\r\n        p[n]=2;\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        cout<<p[i]<<' ';\r\n    }\r\n    cout<<'\\n';\r\n}\r\n\r\n\r\nvoid solve(){\r\n    for(int i=1;i<=n;i++){\r\n        p[i]=i/2;\r\n    }\r\n    cout<<\"YES\\n\";\r\n    for(int i=1;i<=n;i++){\r\n        cout<<p[i]<<' ';\r\n    }\r\n    cout<<'\\n';\r\n}\r\nvoid test(){ \r\n    cin>>n>>k;\r\n    if(check()){\r\n        cout<<\"NO\\n\";\r\n        return;\r\n    }\r\n    if(k==0){\r\n        solve();\r\n        return;\r\n    }\r\n    cout<<\"YES\\n\";\r\n    dfs();\r\n    \r\n}\r\n/*\r\n1 0=1\r\n1 1=0\r\n2 0=1\r\n2 1=0\r\n3 0=1\r\n3 1=0\r\n4 0=1\r\n4 1=0\r\n5 0=1\r\n5 1=1\r\n5 2=0\r\n6 1\r\n\r\n*/\r\nsigned main(){\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    // cout.tie(nullptr);\r\n    int t2=1;\r\n    //  cin>>t2;\r\n    while(t2--){\r\n        test();\r\n    }\r\n    return 0;\r\n\r\n}"
}