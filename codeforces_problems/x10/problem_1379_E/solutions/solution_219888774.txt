{
    "id": 219888774,
    "contestId": 1379,
    "creationTimeSeconds": 1692694700,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1379,
        "index": "E",
        "name": "Inverse Genealogy",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2800,
        "tags": [
            "constructive algorithms",
            "divide and conquer",
            "dp",
            "math",
            "trees"
        ]
    },
    "author": {
        "contestId": 1379,
        "members": [
            {
                "handle": "six-floor-slip-liu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1595149200
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 409600,
    "source": "#include<bits/stdc++.h>\r\n#define mem(a,b) memset(a,b,sizeof(a))\r\n#define forup(i,s,e) for(int i=(s);i<=(e);i++)\r\n#define fordown(i,s,e) for(int i=(s);i>=(e);i--)\r\nusing namespace std;\r\n#define gc getchar()\r\ninline int read(){\r\n    int x=0,f=1;char c;\r\n    while(!isdigit(c=gc)) if(c=='-') f=-1;\r\n    while(isdigit(c)){x=(x<<3)+(x<<1)+(c^48);c=gc;}\r\n    return x*f;\r\n}\r\n#undef gc\r\nconst int N=1e5+5,inf=0x3f3f3f3f;\r\nint n,k,s[N];\r\nbool isp2(int x){\r\n\treturn (x-(x&-x))==0;\r\n}\r\nsigned main(){\r\n\tn=read();k=read();\r\n\tif(!(n&1)){\r\n\t\tputs(\"NO\");\r\n\t\treturn 0;\r\n\t}\r\n\tint lf=(n+1)/2;\r\n\tif(k>=n-lf){\r\n\t\tputs(\"NO\");\r\n\t\treturn 0;\r\n\t}\r\n\tif(!isp2(n-k*2-1)) k--;\r\n\tforup(i,1,k){\r\n\t\ts[i]=i-1;\r\n\t\ts[i+k]=i;\r\n\t}\r\n\ts[k*2+1]=k;\r\n\tforup(i,k*2+2,n){\r\n\t\ts[i]=(i-k*2)/2+k*2;\r\n\t}\r\n\tif(!isp2(n-k*2-1)&&isp2(n-(k-1)*2-1)){\r\n\t\ts[1]=k+2;s[k+1]=k+2;\r\n\t\ts[k+2]=0;\r\n\t}\r\n\tputs(\"YES\");\r\n\tforup(i,1,n){\r\n\t\tprintf(\"%d \",s[i]);\r\n\t}\r\n}\r\n\r\n\r\n"
}