{
    "id": 219895899,
    "contestId": 1379,
    "creationTimeSeconds": 1692698544,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1379,
        "index": "E",
        "name": "Inverse Genealogy",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2800,
        "tags": [
            "constructive algorithms",
            "divide and conquer",
            "dp",
            "math",
            "trees"
        ]
    },
    "author": {
        "contestId": 1379,
        "members": [
            {
                "handle": "bkifhr6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1595149200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 120,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 2048000,
    "source": "#include<bits/stdc++.h>\n#define fir first\n#define sec second\n#define int long long\n#define pir pair<int,int>\n#define mkp(a,b) make_pair(a,b)\nusing namespace std;\ninline int read(){\n\tint x=0,f=1; char c=getchar();\n\twhile(!isdigit(c)){if(c=='-') f=-1; c=getchar();}\n\twhile(isdigit(c)){x=(x<<1)+(x<<3)+(c^48); c=getchar();}\n\treturn x*f;\n}\nconst int mod=998244353,inf=1e18,N=1e5+10;\nint n,k,fa[N],cnt,lg[N],pos;\ninline void full(int rt){\n\tqueue<int> qu;\n\tqu.push(rt);\n\tint now=rt;\n\twhile(!qu.empty()){\n\t\tint x=qu.front();\n\t\tqu.pop();\n\t\tif(now==n){\n\t\t\tpos=x;\n\t\t\tbreak;\n\t\t}\n\t\tfa[++now]=x,qu.push(now);\n\t\tfa[++now]=x,qu.push(now);\n\t}\n}\ninline void build(int p){\n\tif(cnt==k) return ;\n\tfa[p+1]=fa[p+2]=p,cnt++;\n\tbuild(p+2);\n}\ninline void print(){puts(\"YES\"); for(int i=1;i<=n;i++) cout<<fa[i]<<' ';}\nsigned main(){\n\tn=read(),k=read();\n\tlg[1]=0;\n\tfor(int i=2;i<=N-5;i++) lg[i]=lg[i>>1]+1; \n\tif(!k){\n\t\tif((1<<(lg[n+1]))==n+1){full(1);print();}\n\t\telse puts(\"NO\");\n\t\treturn 0;\n\t}\n\tif(n%2==0){puts(\"NO\"); return 0;}\n\tif(2*k+3>n){puts(\"NO\"); return 0;}\n\tbuild(1);\n\tfull(2*k+1);\n\tint num=n-2*k;\n\tif((1<<lg[num+1])==num+1){print();return 0;}\n\tif(k>=2&&n-4>=6){\n\t\tfa[3]=0,fa[1]=fa[2]=4;\n\t\tprint();\n\t\treturn 0;\n\t}\n\tif((1<<lg[num+3])!=num+3){\n\t\tfa[1]=fa[2]=pos,fa[3]=0;\n\t\tprint();\n\t\treturn 0;\n\t}\n\tputs(\"NO\");\n}\n\n\t\t   \t \t\t   \t   \t  \t\t\t  \t  \t\t\t\t"
}