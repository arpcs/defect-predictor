{
    "id": 211436531,
    "contestId": 402,
    "creationTimeSeconds": 1688046763,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 402,
        "index": "D",
        "name": "Upgrading Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1800,
        "tags": [
            "dp",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 402,
        "members": [
            {
                "handle": "Lyamzin_alexandr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1394983800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 45,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 1126400,
    "source": "#include <bits/stdc++.h>\r\n#pragma GCC optimize(\"-O3\")\r\nusing namespace std;\r\ntypedef long long ll;\r\nvector<ll> b, pr;\r\nll gcd(ll a, ll b) {\r\n    if (b == 0) return a;\r\n    return gcd(b, a % b);\r\n}\r\nll f(ll x) {\r\n    ll ans = 0, j = 0;\r\n    for (ll i = 0; i < (ll)pr.size() && pr[i] * pr[i] <= x; ++i) {\r\n        while (j < (ll)b.size() && b[j] < pr[i]) ++j;\r\n        while (x % pr[i] == 0) x /= pr[i], ans -= 2 * (j < (ll)b.size() && b[j] == pr[i]) - 1;\r\n    }\r\n    while (j < (ll)b.size() && b[j] < x) ++j;\r\n    if (x > 1) ans -= 2 * (j < (ll)b.size() && b[j] == x) - 1;\r\n    return ans;\r\n}\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    vector<ll> p(100000, 1);\r\n    for (ll i = 2; i < 100000; ++i) {\r\n        if (!p[i]) continue;\r\n        pr.push_back(i);\r\n        for (ll j = 2 * i; j < 100000; j += i) p[j] = 0;\r\n    }\r\n    ll n, m;\r\n    cin >> n >> m;\r\n    vector<ll> a(n), G(n, 0);\r\n    b.resize(m);\r\n    for (ll i = 0; i < n; ++i) cin >> a[i], G[i] = gcd(((i == 0) ? (0) : (G[i - 1])), a[i]);\r\n    for (ll i = 0; i < m; ++i) cin >> b[i];\r\n    for (ll i = n - 1, x = 1; i >= 0; --i) {\r\n        ll g = G[i] / x;\r\n        if (f(g) <= 0) x *= g;\r\n        a[i] /= x;\r\n    }\r\n    ll ans = 0;\r\n    for (ll i = 0; i < n; ++i) ans += f(a[i]);\r\n    cout << ans;\r\n}"
}