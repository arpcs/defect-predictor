{
    "id": 221797064,
    "contestId": 402,
    "creationTimeSeconds": 1693821854,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 402,
        "index": "D",
        "name": "Upgrading Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1800,
        "tags": [
            "dp",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 402,
        "members": [
            {
                "handle": "NBest"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1394983800
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 45,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 5324800,
    "source": "// LUOGU_RID: 123788854\n/*\u4e00\u5b9a\u662f\u4ece\u540e\u5f80\u524d\u9664gcd\uff0c\u4e0d\u7136\u524d\u9762\u5982\u679c\u5df2\u7ecf\u626b\u4e86\u5c31\u4e3a 0\u4e86\r\n\u6211\u4eec\u4ece\u540e\u5f80\u524d\u770b\u6bcf\u4e00\u4f4d\u8981\u4e0d\u8981\u9664\uff0c\u5982\u679c\u5bf9\u7b54\u6848\u6709\u8d21\u732e\u5c31\u9664\uff08\u574f\u6570\u5927\u4e8e\u597d\u6570\uff09\r\n\u8fd9\u6837\u4e3a\u4ec0\u4e48\u5bf9\uff1f\r\n\u8003\u8651\u5047\u8bbe\u6211\u4eec\u7b2c i \u4f4d\u574f\u6570\u5927\u4e8e\u597d\u6570\u4f46\u662f\u4e0d\u9664\uff0c\u8ba9 i-1 \u4f4d\u9664\uff0ci-1\u4f4d\u53ef\u80fd\u51fa\u73b0\uff1a\r\n\u574f\u6570\u6bd4\u7387\u66f4\u9ad8\uff0c\u8fd9\u4e2a\u65f6\u5019\u663e\u7136\u6211\u4eec\u540e\u9762\u7b54\u6848\u4e0d\u4f1a\u5bf9\u5176\u9020\u6210\u5f71\u54cd\uff0c\u4e5f\u4e00\u5b9a\u8981\u9664\uff0c\r\n\u90a3\u6bd4\u7387\u53d8\u4f4e\u5462\uff1f\r\n\u90a3\u663e\u7136\u662f\u540e\u9762\u9664\u4e86\u66f4\u4f18\u3002\r\n\u8bb0\u5f55\u4e00\u4e2a\u574f\u6570\u7684 gcd \u548c\u5168\u90e8\u7684 gcd\uff0c\u7b97\u8d21\u732e\u5373\u53ef\u3002\r\n*/\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nint read(){\r\n    int x=0,f=1;char c=getchar();\r\n    for(;!isdigit(c);c=getchar())if(c=='-')f=-1;\r\n    for(;isdigit(c);c=getchar())x=(x<<3)+(x<<1)+(c^48);\r\n    return x*f;\r\n}\r\nint n,m,tot,prime[1000006];\r\nbool vis[1000006];\r\nll ans,a[5002],b[5002];\r\nunordered_set<ll>pd;\r\nvoid init(){\r\n    for(int i=2;i<=1000000;i++){\r\n        if(!vis[i])prime[++tot]=i;\r\n        for(int j=1;j<=tot&&prime[j]*i<=1000000;j++){\r\n            vis[prime[j]*i]=1;\r\n            if(i%prime[j]==0)break;\r\n        }\r\n    }\r\n}\r\nll cal(ll x){\r\n    ll res=0;\r\n    for(int i=1;prime[i]*prime[i]<=x;i++){\r\n        if(x%prime[i])continue;\r\n        while(x%prime[i]==0){\r\n            x/=prime[i];\r\n            if(pd.find(prime[i])!=pd.end())res--;\r\n            else res++;\r\n        }\r\n    }\r\n    if(x>1){\r\n        if(pd.find(x)!=pd.end())res--;\r\n        else res++;\r\n    }\r\n    return res;\r\n}\r\nint main(){\r\n    n=read(),m=read();\r\n    init();\r\n    for(int i=1;i<=n;i++){\r\n        a[i]=read();\r\n        if(i==1)b[i]=a[i];\r\n        else b[i]=__gcd(b[i-1],a[i]);\r\n    }\r\n    for(int i=1;i<=m;i++){\r\n        pd.insert(read());\r\n    }\r\n    for(int i=1;i<=n;i++)ans+=cal(a[i]);\r\n    ll used=1;\r\n    for(ll i=n;i;--i){\r\n        if(b[i]==1)continue;\r\n        ll o=cal(b[i]/used);\r\n        if(o<0)ans-=o*i,used=b[i];\r\n    }\r\n    cout<<ans;\r\n    return 0;\r\n}"
}