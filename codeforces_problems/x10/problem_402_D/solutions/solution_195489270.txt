{
    "id": 195489270,
    "contestId": 402,
    "creationTimeSeconds": 1677695507,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 402,
        "index": "D",
        "name": "Upgrading Array",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1800,
        "tags": [
            "dp",
            "greedy",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 402,
        "members": [
            {
                "handle": "dbaumg"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1394983800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n\r\n    ll n, m;\r\n    cin >> n >> m;\r\n    ll a[n];\r\n    for (int i = 0; i < n; i++)\r\n        cin >> a[i];\r\n    set<ll> bad;\r\n    for (int i = 0; i < m; i++) {\r\n        ll b;\r\n        cin >> b;\r\n        bad.insert(b);\r\n    }\r\n    ll ans = 0;\r\n    for (int i = n - 1; i >= 0; i--) {\r\n        ll g = a[0];\r\n        for (int j = 0; j <= i; j++)\r\n            g = gcd(g, a[j]);\r\n        if (g == 1)\r\n            continue;\r\n        ll k = 0;\r\n        ll temp = g;\r\n        for (ll d = 2; d * d <= temp; d++) {\r\n            while (temp % d == 0) {\r\n                temp /= d;\r\n                if (bad.count(d) == 1)\r\n                    k -= 1;\r\n                else\r\n                    k += 1;\r\n            }\r\n        }\r\n        if (temp > 1) {\r\n            if (bad.count(temp) == 1)\r\n                k -= 1;\r\n            else\r\n                k += 1;\r\n        }\r\n        if (k < 0)\r\n            for (int j = 0; j <= i; j++)\r\n                a[j] /= g;\r\n        for (ll d = 2; d * d <= a[i]; d++) {\r\n            while (a[i] % d == 0) {\r\n                a[i] /= d;\r\n                if (bad.count(d) == 1)\r\n                    ans -= 1;\r\n                else\r\n                    ans += 1;\r\n            }\r\n        }\r\n        if (a[i] > 1) {\r\n            if (bad.count(a[i]) == 1)\r\n                ans -= 1;\r\n            else\r\n                ans += 1;\r\n        }\r\n    }\r\n    cout << ans;\r\n}"
}