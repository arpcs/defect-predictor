{
    "id": 233774212,
    "contestId": 580,
    "creationTimeSeconds": 1700638074,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 580,
        "index": "E",
        "name": "Kefa and Watch",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2500,
        "tags": [
            "data structures",
            "hashing",
            "strings"
        ]
    },
    "author": {
        "contestId": 580,
        "members": [
            {
                "handle": "MIKEFENG"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1442939400
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 11366400,
    "source": "// LUOGU_RID: 136317602\nbool M1;\r\n#include<iostream>\r\n#include<algorithm>\r\n#include<cstring>\r\n#include<cstdlib>\r\n#include<climits>\r\n#include<iomanip>\r\n#include<cassert>\r\n#include<random>\r\n#include<cstdio>\r\n#include<vector>\r\n#include<bitset>\r\n#include<stack>\r\n#include<queue>\r\n#include<deque>\r\n#include<cmath>\r\n#include<ctime>\r\n#include<map>\r\n#include<set>\r\n//#include<ext/pb_ds/assoc_container.hpp>\r\n//#include<ext/pb_ds/hash_policy.hpp>\r\n//#include<ext/pb_ds/priority_queue.hpp>\r\n#define fi first\r\n#define se second\r\n#define ll long long\r\n#define Vector Point\r\n#define I128 __int128\r\n#define LD long double\r\n#define ull unsigned ll\r\n#define pii pair<ll,int>\r\n#define pb(x) push_back(x)\r\n#define syt cerr<<\"sytakioi\\n\"\r\n#define F(i,a,b) for(int i=a,i##end=b;i<=i##end;++i)\r\n#define UF(i,a,b) for(int i=a,i##end=b;i>=i##end;--i)\r\n#define look_memory cerr<<abs(&M2-&M1)/1024.0/1024<<'\\n'\r\n#define rd_i(l,r) uniform_int_distribution<int>(l,r)(rd)\r\n#define rd_r(l,r) uniform_real_distribution<double>(l,r)(rd)\r\n#define look_time cerr<<(clock()-Time)*1.0/CLOCKS_PER_SEC<<'\\n'\r\nusing namespace std;\r\n//using namespace __gnu_cxx;\r\nmt19937 rd(time(0));\r\nconst int N=1e5+5;\r\nint n,m,k;\r\nchar c[N];\r\null pw[N],sum[N];\r\nstruct node{\r\n\tull val;int len;\r\n\tnode operator + (const node &x)const{return {val*pw[x.len]+x.val,len+x.len};}\r\n};\r\nstruct tree{node x;int tag;}tr[N<<2];\r\n#define ls k<<1\r\n#define rs k<<1|1\r\ninline void pushup(int k){tr[k].x=tr[ls].x+tr[rs].x;}\r\ninline void build(int k,int l=1,int r=n){\r\n\ttr[k].tag=-1;\r\n\tif(l==r) return void(tr[k].x={c[l]-'0',1});\r\n\tint mid=(l+r)>>1;\r\n\tbuild(ls,l,mid);build(rs,mid+1,r);\r\n\tpushup(k);\r\n}\r\ninline void push(int k,int val){tr[k].x.val=val*sum[tr[k].x.len-1];tr[k].tag=val;}\r\ninline void pushdown(int k){if(~tr[k].tag) push(ls,tr[k].tag),push(rs,tr[k].tag),tr[k].tag=-1;}\r\ninline void add(int k,int l,int r,int val,int l1=1,int r1=n){\r\n\tif(l<=l1&&r1<=r) return push(k,val);\r\n\tpushdown(k);\r\n\tint mid=(l1+r1)>>1;\r\n\tif(l<=mid) add(ls,l,r,val,l1,mid);\r\n\tif(mid<r) add(rs,l,r,val,mid+1,r1);\r\n\tpushup(k);\r\n}\r\ninline node query(int k,int l,int r,int l1=1,int r1=n){\r\n\tif(l<=l1&&r1<=r) return tr[k].x;\r\n\tint mid=(l1+r1)>>1;\r\n\tif(r<=mid) return query(ls,l,r,l1,mid);\r\n\tif(mid<l) return query(rs,l,r,mid+1,r1);\r\n\treturn query(ls,l,r,l1,mid)+query(rs,l,r,mid+1,r1);\r\n}\r\nbool M2;\r\nint main(){\r\n\tint Time=clock();\r\n\tlook_memory;\r\n\tcin.tie(nullptr)->sync_with_stdio(false);\r\n\tcin>>n>>m>>k>>(c+1);\r\n\tpw[0]=sum[0]=1;F(i,1,n) pw[i]=pw[i-1]*131,sum[i]=sum[i-1]+pw[i];\r\n\tbuild(1);\r\n\tF(i,1,m+k){\r\n\t\tint opt,l,r,x;cin>>opt>>l>>r>>x;\r\n\t\tif(opt==1) add(1,l,r,x);\r\n\t\telse{\r\n//\t\t\tcout<<query(1,l,r-x).val<<' '<<query(1,l+x,r).val<<'\\n';\r\n\t\t\tif(x==r-l+1||query(1,l,r-x).val==query(1,l+x,r).val) cout<<\"YES\\n\";\r\n\t\t\telse cout<<\"NO\\n\";\r\n\t\t}\r\n\t}\r\n\tlook_time;\r\n\treturn 0;\r\n}"
}