{
    "id": 235821087,
    "contestId": 580,
    "creationTimeSeconds": 1701767543,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 580,
        "index": "E",
        "name": "Kefa and Watch",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2500,
        "tags": [
            "data structures",
            "hashing",
            "strings"
        ]
    },
    "author": {
        "contestId": 580,
        "members": [
            {
                "handle": "ifififif"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1442939400
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 7987200,
    "source": "// Hydro submission #656ee97564a5510b82ea38f1@1701767541879\n#include<bits/stdc++.h>\r\n#define ll unsigned long long\r\nusing namespace std;\r\nll n,m,k,power[100005],power2[100005];\r\nll tree[400005],lazy[400005];\r\nconst ll mod=1e9+7;\r\nvoid pushup(ll x,ll l,ll r){\r\n\ttree[x]=(tree[x<<1]*power[(r-l+1)/2]+tree[x<<1|1])%mod;\r\n\treturn ;\r\n}\r\nvoid pushdown(ll x,ll l,ll r){\r\n\tll mid=(l+r)>>1;\r\n\tlazy[x<<1]=lazy[x],tree[x<<1]=power2[mid-l]*lazy[x]%mod*power[r-mid]%mod;\r\n\tlazy[x<<1|1]=lazy[x],tree[x<<1|1]=power2[r-mid-1]*lazy[x]%mod;\r\n\tlazy[x]=0;\r\n\treturn ;\r\n}\r\nvoid update(ll x,ll l,ll r,ll L,ll R,ll val){\r\n\tif(l>R||R<L) return;\r\n\tif(R>=r&&L<=l){\r\n\t\ttree[x]=power2[r-l]*val%mod;\r\n\t\tlazy[x]=val;\r\n\t\treturn ;\r\n\t}\r\n\tif(lazy[x]) pushdown(x,l,r);\r\n\tll mid=(l+r)>>1;\r\n\tif(L<=mid) update(x<<1,l,mid,L,R,val);\r\n\tif(R>mid) update(x<<1|1,mid+1,r,L,R,val);\r\n\tpushup(x,l,r);\r\n\treturn ;\r\n}\r\nvoid build(ll x,ll l,ll r){\r\n\tif(l==r){\r\n\t\tchar c;\r\n\t\tcin>>c;\r\n\t\ttree[x]=(c-'0');\r\n\t\treturn;\r\n\t}\r\n\tll mid=(l+r)>>1;\r\n\tbuild(x<<1,l,mid);\r\n\tbuild(x<<1|1,mid+1,r);\r\n\tpushup(x,l,r);\r\n\treturn ;\r\n}\r\nll query(ll x,ll l,ll r,ll L,ll R){\r\n\tif(R<l||L>r) return 0;\r\n\tif(r<=R&&L<=l) return tree[x];\r\n\tif(lazy[x]) pushdown(x,l,r);\r\n\tll mid=(l+r)>>1,ans=0;\t\r\n\tif(L<=mid) ans=query(x<<1,l,mid,L,R)*power[r-mid]%mod;\t\r\n\tif(R>mid) ans=(ans+query(x<<1|1,mid+1,r,L,R))%mod;\r\n\treturn ans;\r\n}\r\n//void test(ll x,ll l,ll r){\r\n//\tif(l==r){\r\n//\t\tcout<<tree[x];\r\n//\t\treturn;\r\n//\t}\r\n//\tll mid=(l+r)>>1;\r\n//\ttest(x<<1,l,mid);\r\n//\ttest(x<<1|1,mid+1,r);\r\n//\tpushup(x,l,r);\r\n//\treturn ;\r\n//}\r\nint main(){\r\n\tcin>>n>>m>>k;\r\n\tpower[0]=power2[0]=power[1]=power2[1]=1;\r\n\tfor(int i=2;i<=n;i++) power[i]=power[i-1]*10%mod,power2[i]=(power2[i-1]*10+1)%mod;\r\n//\tfor(int i=1;i<=n;i++) cout<<power[i]<<\" \"<<power2[i]<<endl;\r\n\tbuild(1,1,n);\r\n\tint tmp,l,r,d;\r\n\tfor(int i=1;i<=m+k;i++){\r\n\t\tcin>>tmp>>l>>r>>d;\r\n\t\tif(tmp==1){\r\n\t\t\tupdate(1,1,n,l,r,d);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tif(query(1,1,n,l,r-d)==query(1,1,n,l+d,r)*power[r-l-d+1]%mod) cout<<\"YES\\n\";\r\n\t\t\telse cout<<\"NO\\n\";\r\n//\t\t\tcout<<query(1,1,n,l,r)<<\" \"<<query(1,1,n,l,r-d)<<\" \"<<query(1,1,n,l+d,r)<<\" \"<<power[r-l-d+1]<<endl;\r\n\t\t}\r\n//\t\tcout<<tree[1]<<endl;\r\n//\t\ttest(1,1,n);\r\n//\t\tcout<<endl;\r\n\t}\r\n\treturn 0;\r\n} //https://www.cnblogs.com/Fast-Bird/p/11974851.html"
}