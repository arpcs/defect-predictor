{
    "id": 235820512,
    "contestId": 580,
    "creationTimeSeconds": 1701767280,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 580,
        "index": "E",
        "name": "Kefa and Watch",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2500,
        "tags": [
            "data structures",
            "hashing",
            "strings"
        ]
    },
    "author": {
        "contestId": 580,
        "members": [
            {
                "handle": "ifififif"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1442939400
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 80,
    "timeConsumedMillis": 733,
    "memoryConsumedBytes": 8089600,
    "source": "// Hydro submission #656ee86c64a5510b82ea37d1@1701767277860\n#include <iostream>\r\n#include <cstdio>\r\n#define N 100005\r\n#define int long long\r\nusing namespace std; \r\nconst int p = 17,mod = 1e9 + 9;\r\nint n,m,type,l,r,d;\r\nint pow[N],f[N],t[N<<2],tag[N<<2];\r\nchar s[N];\r\ninline int ls(int x){return x << 1;}\r\ninline int rs(int x){return x << 1 | 1;} \r\ninline void pushup(int x,int k) {\r\n\tt[x] = (t[ls(x)] * pow[k] % mod + t[rs(x)]) % mod;\r\n\tt[x] = (t[x] + mod) % mod; \r\n}\r\ninline void pushdown(int x,int l,int r) {\r\n\tif (tag[x] == -1) return;\r\n\tint mid = l + r >> 1;\r\n\tt[ls(x)] = f[mid - l + 1] * tag[x] % mod;\r\n\tt[rs(x)] = f[r - mid] * tag[x] % mod;\r\n\ttag[ls(x)] = tag[x], tag[rs(x)] = tag[x],tag[x] = -1;\r\n}\r\nvoid build(int x,int l,int r) {\r\n\ttag[x] = -1;\r\n\tif (l == r) {\r\n\t\tt[x] = s[l] - '0' + 1;\r\n\t\treturn;\r\n\t}\r\n\tint mid = l + r >> 1;\r\n\tbuild(ls(x),l,mid),build(rs(x),mid + 1,r);\r\n\tpushup(x,r - mid);\r\n}\r\nvoid update(int L,int R,int k,int x,int l,int r) {\r\n\tif (L <= l && R >= r) t[x] = f[r - l + 1] * k % mod,tag[x] = k;\r\n\telse {\r\n\t\tpushdown(x,l,r);\r\n\t\tint mid = l + r >> 1;\r\n\t\tif (L <= mid) update(L,R,k,ls(x),l,mid);\r\n\t\tif (R > mid) update(L,R,k,rs(x),mid + 1,r);\r\n\t\tpushup(x,r - mid);\r\n\t}\r\n}\r\nint query(int L,int R,int x,int l,int r) {\r\n\tif (L == l && R == r) return t[x];\r\n\telse {\r\n\t\tpushdown(x,l,r);\r\n\t\tint mid = l + r >> 1;\r\n\t\tif (R <= mid) return query(L,R,ls(x),l,mid);\r\n\t\telse if(L > mid) return query(L,R,rs(x),mid + 1, r);\r\n\t\telse return ((query(L,mid,ls(x),l,mid) * pow[R - mid] % mod + query(mid + 1,R,rs(x),mid + 1,r)) % mod + mod) % mod;\r\n\t}\r\n}\r\nsigned main(){\r\n\tint n,m,t;\r\n\tcin >> n >> m >> t, m += t,pow[0] = 1;\r\n\tscanf(\"%s\",s + 1);\r\n\tfor (int i = 1;i <= n;i ++) pow[i] = pow[i - 1] * p % mod, f[i] = (f[i - 1] * p % mod + 1) % mod;\r\n\tbuild(1,1,n);\r\n\tfor (int i = 1;i <= m;i ++) {\r\n\t\tcin >> type >> l >> r >> d;\r\n\t\tif (type == 1) update(l,r,d + 1,1,1,n);\r\n\t\telse {\r\n\t\t\tif (d == r -l + 1) puts(\"YES\");\r\n\t\t\telse {\r\n\t\t\t\tif (query(l,r - d,1,1,n) == query(l + d,r,1,1,n)) puts(\"YES\");\r\n\t\t\t\telse puts(\"NO\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"
}