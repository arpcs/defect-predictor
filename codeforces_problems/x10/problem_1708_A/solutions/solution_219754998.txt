{
    "id": 219754998,
    "contestId": 1708,
    "creationTimeSeconds": 1692601353,
    "relativeTimeSeconds": 153,
    "problem": {
        "contestId": 1708,
        "index": "A",
        "name": "Difference Operations",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1708,
        "members": [
            {
                "handle": "Romad"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1692601200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\n#define INF (int)1e9 + 10\r\n#define lINF (ll)1e18 + 10LL\r\nconst ll MOD = 1000000007LL;\r\n// #include <atcoder/modint.hpp>\r\n// using mint = atcoder::modint998244353;\r\n\r\nusing namespace std;\r\n\r\nvoid Solve() {\r\n    int n;\r\n    cin >> n;\r\n    vector<int> arr(n);\r\n    bool ok = true;\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> arr[i];\r\n        if (arr[i] % arr[0] != 0) ok = false;\r\n    }\r\n    if (ok)\r\n        cout << \"YES\\n\";\r\n    else\r\n        cout << \"NO\\n\";\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    int T = 1;\r\n    cin >> T;\r\n    while (T--) Solve();\r\n    return 0;\r\n}\r\n\r\n/*\r\n\ucc3e\uc544\uc57c \ud560 \uac83\ub4e4\r\n*int \uc624\ubc84\ud50c\ub85c\uc6b0, out of bounds\r\n*\ud2b9\uc218\ud55c \uacbd\uc6b0(n=1?)\r\n*\uc544\ubb34\uac83\ub3c4 \ud558\uc9c0 \uc54a\ub294 \ub300\uc2e0 \ubb34\uc5b8\uac00\ub97c \uc218\ud589\ud558\uae30. \uccb4\uacc4\uc801\uc778 \uc0c1\ud0dc\ub97c \uc720\uc9c0.\r\n*\uc801\uc5b4\ub450\uae30\r\n*\ud55c\uac00\uc9c0 \uc811\uadfc \ubc29\uc2dd\uc5d0 \uc5bd\uba54\uc774\uc9c0 \ub9d0\uae30\r\n*/\r\n// \uc54c\uace0\ub9ac\uc998\uc758 \uc791\ub3d9\ubc29\uc2dd \"\uc644\uc804\ud788\" \uc774\ud574\ud558\ub824 \ub178\ub825\ud558\uae30\r\n// \uc218\ud589 \ubaa9\ud45c\r\n// 1. \"\ucd94\ub860\"(\uadf8 \uc99d\uba85)\r\n// 2. \uc54c\uace0\ub9ac\uc998 \"\ucc98\uc74c\"\ubd80\ud130 \ud480\uc774\uacfc\uc815 \uc9c1\uc811 \uc804\uac1c, cutting\r\n// 3. \"\uad6c\ud604\""
}