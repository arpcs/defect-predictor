{
    "id": 230018161,
    "contestId": 713,
    "creationTimeSeconds": 1698412900,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 713,
        "index": "B",
        "name": "Searching Rectangles",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2200,
        "tags": [
            "binary search",
            "constructive algorithms",
            "interactive"
        ]
    },
    "author": {
        "contestId": 713,
        "members": [
            {
                "handle": "abhayg_07"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1473784500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\r\n// order_of_key(k) , find_by_order(k)\r\n\r\n#define int long long\r\n#define ll long long\r\n#define F first\r\n#define S second\r\n#define setbits(x) __builtin_popcountll(x)\r\n#define msb(x) (63-__builtin_clzll(x)) // if(x==0) returns -1\r\n#define lsb(x) (__builtin_ffsll(x)-1)\r\n#define fill(a,b) memset(a, b, sizeof(a))\r\n#define uniq(s) s.resize(unique(s.begin(), s.end()) - s.begin())\r\n#define f(i, x) for (int i = 0; i < x; i++)\r\n#define rep(i , a , b) for(int i = a ; i < b ; i++)\r\n#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)\r\n#define all(x) (x).begin(),(x).end()\r\n#define inf  1e18\r\n#define mod  1000000007\r\n// #define mod  998244353\r\n#define pi 3.14159265359\r\n\r\ntemplate <class X, class Y>\r\nostream &operator<<(ostream &os, pair<X, Y> const &p){\r\n    return os << \"(\" << p.first << \", \" << p.second << \") \";\r\n}\r\n\r\ntemplate <class Ch, class Tr, class Container>\r\nbasic_ostream<Ch, Tr> &operator<<(basic_ostream<Ch, Tr> &os, Container const &x){\r\n    for (auto &y : x)\r\n    os << y << \" \";\r\n    return os;\r\n}\r\n\r\nll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}\r\nll expo(ll a, ll b, ll m) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % m; a = (a * a) % m; b = b >> 1;} return res%m ;}\r\nint nCr(int n , int r){\r\nif (n < r) return 0;\r\nif (r > n - r) r = n - r;\r\nll ans = 1; ll i;\r\nfor (i = 1; i <= r; i++){ans = (ans*(n - r + i));ans /= i;} return ans;}\r\nll modinv(ll a , ll m ) {return expo(a , m-2 , m)%m;} // m is prime \r\n\r\nmap<vector<int>,int> M;\r\n\r\nint query( vector<int> q ){\r\n\r\n    if((q[0]>q[2])||(q[1]>q[3])) return 0;\r\n    if(M.find(q)!=M.end()) return M[q];\r\n    cout << \"? \" << q[0] << \" \" << q[1] << \" \" << q[2] << \" \" << q[3] << '\\n';\r\n    int cnt; cin >> cnt;\r\n    M[q]=cnt;\r\n    return cnt; \r\n}\r\n\r\n\r\nint32_t main(){\r\n    // fastio;\r\n    int n; cin >> n;\r\n    vector<int> a = {1,1,n,n};\r\n    f(i,4){\r\n        int l = a[i];\r\n        int r = a[(i+2)%4];\r\n        int mid , ans;\r\n\r\n        while( (i<2 && l <= r) || (i>1 && r <= l) ){ \r\n            mid = l+(r-l)/2;\r\n            vector<int> q;\r\n            f(j,4){\r\n                if(j!=i) q.push_back(a[j]);\r\n                else q.push_back(mid);\r\n            }\r\n            int cnt=query(q);\r\n            if(cnt==2){\r\n                ans = mid;\r\n                l = mid + ( i < 2 ? 1 : -1 );\r\n            }\r\n            else r = mid + ( i < 2 ? -1 : 1 );\r\n        }\r\n        a[i] = ans;\r\n    }\r\n\r\n    set<vector<int>> ans;\r\n    // cout << a << endl;\r\n\r\n    for( int x = 0 ; x < 16 ; x++ ){\r\n        if(setbits(x)!=3) continue;\r\n\r\n        vector<int> b = a;\r\n        int unset;\r\n        f(bit,4){\r\n            if((x&(1<<bit))==0) unset = bit;\r\n        }\r\n        int opp = (unset+2)%4;\r\n        // cout << unset << \" \" << opp << endl;\r\n        rep(y,opp,opp+4){\r\n                int bit = y%4;\r\n                if((x&(1<<bit))==0) continue;\r\n                vector<int> q = b;\r\n\r\n                if(bit!=opp){\r\n                    if(bit<2) q[bit]++;\r\n                    else q[bit]--;\r\n                    if(query(q)==0) continue;\r\n                }\r\n\r\n                int l = b[bit];\r\n                int r = b[(bit+2)%4];\r\n                int mid , val = -1;\r\n\r\n                while( (bit<2 && l<=r) || (bit>=2 && r<=l) ){\r\n                    mid = l+(r-l)/2;\r\n                    int j = mid;\r\n                    \r\n                    swap(j,q[bit]);\r\n                    int cnt = query(q);\r\n                    swap(j,q[bit]);\r\n\r\n                    if(cnt==2){\r\n                        l = mid + ( bit < 2 ? 1 : -1 );\r\n                    }\r\n                    else if(cnt==1){\r\n                        val = mid;\r\n                        l = mid + ( bit < 2 ? 1 : -1 );\r\n                    }\r\n                    else{\r\n                        r = mid + ( bit < 2 ? -1 : 1 );\r\n                    }\r\n                }\r\n                b[bit] = ( val == -1 ? b[bit] : val );\r\n        }\r\n        // cout << b << endl;\r\n        ans.insert(b);\r\n    }\r\n    set<vector<int>> finalans;\r\n    for( auto i : ans ){\r\n        int cnt = 0;\r\n        for( auto j : ans ){\r\n            if( j[0] >= i[0] && j[1] >= i[1] && j[2] <= i[2] && j[3] <= i[3] ){\r\n                cnt++;\r\n            }\r\n        }\r\n        if( cnt == 1 ) finalans.insert(i);\r\n    }\r\n    assert(finalans.size()==2);\r\n    cout << \"! \";\r\n    for( auto i : finalans ) cout << i; \r\n}"
}