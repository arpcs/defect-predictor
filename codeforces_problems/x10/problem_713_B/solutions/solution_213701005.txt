{
    "id": 213701005,
    "contestId": 713,
    "creationTimeSeconds": 1689286385,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 713,
        "index": "B",
        "name": "Searching Rectangles",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2200,
        "tags": [
            "binary search",
            "constructive algorithms",
            "interactive"
        ]
    },
    "author": {
        "contestId": 713,
        "members": [
            {
                "handle": "Kambar_Z"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1473784500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define For(i, n)           for(int i = 0; i < n; ++i)\r\n#define all(x)              (x).begin(),(x).end()\r\n#define rall(x)             (x).rbegin(),(x).rend()\r\n#define ls(x)               x+x+1\r\n#define rs(x)               x+x+2\r\n\r\n#define ld                  long double\r\n#define pii                 pair<int, int>\r\n#define vt                  vector\r\n#define ll                  long long\r\n\r\n#define sim template < class c\r\n#define ris return * this\r\n#define dor > debug & operator <<\r\n#define eni(x) sim > typename \\\r\nenable_if<sizeof dud<c>(0) x 1, debug&>::type operator<<(c i) {\r\nsim > struct rge { c b, e; };\r\nsim > rge<c> range(c i, c j) { return rge<c>{i, j}; }\r\nsim > auto dud(c* x) -> decltype(cerr << *x, 0);\r\nsim > char dud(...);\r\n#define LOCAL\r\nstruct debug {\r\n#ifdef LOCAL\r\n~debug() { cerr << endl; }\r\neni(!=) cerr << boolalpha << i; ris; }\r\neni(==) ris << range(begin(i), end(i)); }\r\nsim, class b dor(pair < b, c > d) {\r\nris << \"(\" << d.first << \", \" << d.second << \")\";\r\n}\r\nsim dor(rge<c> d) {\r\n*this << \"[\";\r\nfor (auto it = d.b; it != d.e; ++it)\r\n\t*this << \", \" + 2 * (it == d.b) << *it;\r\nris << \"]\";\r\n}\r\n#else\r\nsim dor(const c&) { ris; }\r\n#endif\r\n};\r\n#define imie(...) \" [\" << #__VA_ARGS__ \": \" << (__VA_ARGS__) << \"] \"\r\n\r\ntemplate<typename T>\r\nvoid read(vt<T> & a) {\r\n\tFor(i, a.size()) cin >> a[i];\r\n}\r\ntemplate<typename T>\r\nvoid print(vt<T> & a) {\r\n\tFor(i, a.size()) cout << a[i] << \" \";\r\n\tcout << endl;\r\n}\r\ntemplate<typename T>\r\nvoid print2(vt<vt<T> > & a) {\r\n\tFor(i, a.size()) {\r\n\t\tFor(j, a[i].size()) cout << a[i][j] << \" \";\r\n\t\tcout << endl;\r\n\t}\r\n}\r\ntemplate<typename T>\r\nvoid read2(vt<vt<T> > & a) {\r\n\tFor(i, a.size()) For(j, a[i].size()) cin >> a[i][j];\r\n}\r\n\r\nconst int MAX = 1e9;\r\nconst int MOD = 1e9+7;\r\nconst int BINT = 32;\r\nconst int BLONG = 64;\r\nconst ll  INF = 1e18;\r\nconst ld  PI  = 3.14159265358979323846;\r\n\r\n// THE SOLUTION IS ALWAYS SIMPLE\r\n// THE CODE IS ALWAYS SHORT\r\n\r\nint query(int x1, int y1, int x2, int y2) {\r\n\tcout << \"? \" << x1 << \" \" << y1 << \" \" << x2 << \" \" << y2 << endl;\r\n\tint count; cin >> count;\r\n\treturn count;\r\n}\r\n\r\nvoid solve()\r\n{\r\n\tint n; cin >> n;\r\n\tvt<vt<int> > a = {\r\n\t\t{1, 1, n, n},\r\n\t\t{1, 1, n, n},\r\n\t};\r\n\tint x1 = 0, y1 = 1, x2 = 2, y2 = 3;\r\n\tint l = a[0][x1], r = a[0][x2], m;\r\n\twhile (l < r) {\r\n\t\tm = (l + r) >> 1;\r\n\t\tint count = query(a[0][x1], a[0][y1], m, a[0][y2]);\r\n\t\tif (count == 0) {\r\n\t\t\tl = m + 1;\r\n\t\t} else {\r\n\t\t\tr = m;\r\n\t\t}\r\n\t}\r\n\ta[0][x2] = l;\r\n\tl = a[0][x1], r = a[0][x2];\r\n\twhile (l < r) {\r\n\t\tm = (l + r + 1) >> 1;\r\n\t\tint count = query(m, a[0][y1], a[0][x2], a[0][y2]);\r\n\t\tif (count == 0) {\r\n\t\t\tr = m - 1;\r\n\t\t} else {\r\n\t\t\tl = m;\r\n\t\t}\r\n\t}\r\n\ta[0][x1] = l;\r\n\tl = a[1][x1], r = a[1][x2];\r\n\twhile (l < r) {\r\n\t\tm = (l + r) >> 1;\r\n\t\tint count = query(a[1][x1], a[1][y1], m, a[1][y2]) - \r\n\t\t\t\t\t\t (a[1][x1] <= a[0][x1] && a[0][x2] <= m);\r\n\t\tif (count == 0) {\r\n\t\t\tl = m + 1;\r\n\t\t} else {\r\n\t\t\tr = m;\r\n\t\t}\r\n\t}\r\n\ta[1][x2] = l; \r\n\tl = a[1][x1], r = a[1][x2];\r\n\twhile (l < r) {\r\n\t\tm = (l + r + 1) >> 1;\r\n\t\tint count = query(m, a[1][y1], a[1][x2], a[1][y2]) - \r\n\t\t\t\t\t\t (m <= a[0][x1] && a[0][x2] <= a[1][x2]);\r\n\t\tif (count == 0) {\r\n\t\t\tr = m - 1;\r\n\t\t} else {\r\n\t\t\tl = m;\r\n\t\t}\r\n\t}\r\n\ta[1][x1] = l; \r\n\r\n\t// next\r\n\r\n\tl = a[0][y1], r = a[0][y2], m;\r\n\twhile (l < r) {\r\n\t\tm = (l + r) >> 1;\r\n\t\tint count = query(a[0][x1], a[0][y1], a[0][x2], m);\r\n\t\tif (count == 0) {\r\n\t\t\tl = m + 1;\r\n\t\t} else {\r\n\t\t\tr = m;\r\n\t\t}\r\n\t}\r\n\ta[0][y2] = l;\r\n\tl = a[0][y1], r = a[0][y2];\r\n\twhile (l < r) {\r\n\t\tm = (l + r + 1) >> 1;\r\n\t\tint count = query(a[0][x1], m, a[0][x2], a[0][y2]);\r\n\t\tif (count == 0) {\r\n\t\t\tr = m - 1;\r\n\t\t} else {\r\n\t\t\tl = m;\r\n\t\t}\r\n\t}\r\n\ta[0][y1] = l;\r\n\tl = a[1][y1], r = a[1][y2];\r\n\twhile (l < r) {\r\n\t\tm = (l + r) >> 1;\r\n\t\tint count = query(a[1][x1], a[1][y1], a[1][x2], m) - \r\n\t\t\t\t\t\t (a[1][y1] <= a[0][y1] && a[0][y2] <= m && a[1][x1] <= a[0][x1] && a[0][x2] <= a[1][x2]);\r\n\t\t// cout << m << \" = \" << count << \": \" << a[1][x1] << \" \" << a[0][x1] << \" \" << a[0][x2] << \" \" << a[1][x2] << endl;\r\n\t\tif (count == 0) {\r\n\t\t\tl = m + 1;\r\n\t\t} else {\r\n\t\t\tr = m;\r\n\t\t}\r\n\t}\r\n\ta[1][y2] = l; \r\n\tl = a[1][y1], r = a[1][y2];\r\n\twhile (l < r) {\r\n\t\tm = (l + r + 1) >> 1;\r\n\t\tint count = query(a[1][x1], m, a[1][x2], a[1][y2]) - \r\n\t\t\t\t\t\t (m <= a[0][y1] && a[0][y2] <= a[1][y2] && a[1][x1] <= a[0][x1] && a[0][x2] <= a[1][x2]);\r\n\t\t// cout << m << \" = \" << count << \": \" << a[1][x1] << \" \" << a[0][x1] << \" \" << a[0][x2] << \" \" << a[1][x2] << endl;\r\n\t\tif (count == 0) {\r\n\t\t\tr = m - 1;\r\n\t\t} else {\r\n\t\t\tl = m;\r\n\t\t}\r\n\t}\r\n\ta[1][y1] = l;\r\n\r\n\tcout << \"! \" << a[0][x1] << \" \" << a[0][y1] << \" \" << a[0][x2] << \" \" << a[0][y2] << \" \";\r\n\tcout << a[1][x1] << \" \" << a[1][y1] << \" \" << a[1][x2] << \" \" << a[1][y2] << \" \" << endl; \r\n}\r\n\r\nvoid precalc() {}\r\n\r\nint main()\r\n{\r\n\tios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n#ifdef DEBUG\r\n\tfreopen(\"output.txt\", \"w\", stdout);\r\n\tfreopen(\"input.txt\", \"r\", stdin);\r\n#endif\r\n\tint T;\r\n\tT = 1;\r\n\tprecalc();\r\n\tFor(t, T) solve();\r\n\treturn 0;\r\n}"
}