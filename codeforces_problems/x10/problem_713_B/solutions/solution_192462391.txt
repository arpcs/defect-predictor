{
    "id": 192462391,
    "contestId": 713,
    "creationTimeSeconds": 1675684451,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 713,
        "index": "B",
        "name": "Searching Rectangles",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2200,
        "tags": [
            "binary search",
            "constructive algorithms",
            "interactive"
        ]
    },
    "author": {
        "contestId": 713,
        "members": [
            {
                "handle": "Azimjonm0012"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1473784500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\r\nusing namespace std;\r\r\n#define mp make_pair \r\r\n#define fi first\r\r\n#define se second\r\r\n#define pb push_back\r\r\n#define pf push_front\r\r\n#define pob pop_back\r\r\n#define pof pop_front\r\r\n\r\r\ntypedef long long ll;\r\r\ntypedef unsigned long long ull;\r\r\ntypedef short int si;\r\r\ntypedef pair<int,int> pii;\r\r\ntypedef pair<ll,ll> pll;\r\r\n\r\r\nconst int nMax = 1e6+5;\r\r\nconst ll mod = 1e9+7;\r\r\n\r\r\nstruct rectangle {\r\r\n\tint x1, y1, x2, y2;\r\r\n};\r\r\n\r\r\nbool sudah = 0;\r\r\nrectangle x,y;\r\r\n\r\r\nint query(int a, int b, int c, int d) {\r\r\n\tcout << \"? \" << a << \" \" << b << \" \" << c << \" \" << d << endl;\r\r\n\tint res; cin >> res;\r\r\n\treturn res;\r\r\n}\r\r\nrectangle binser(rectangle a, int maks) {\r\r\n\trectangle res = {-1,-1,-1,-1};\r\r\n\tint l,r,mid;\r\r\n\r\r\n\tl = a.x1, r = a.x2;\r\r\n\twhile(l <= r) {\r\r\n\t\tmid = (l + r) / 2;\r\r\n\t\tif (query(a.x1, a.y1, mid, a.y2) >= maks) {\r\r\n\t\t\tres.x2 = mid;\r\r\n\t\t\tr = mid-1;\r\r\n\t\t}\r\r\n\t\telse {\r\r\n\t\t\tl = mid+1;\r\r\n\t\t}\r\r\n\t}\r\r\n//\tcout << \"Selesai \" << res.x2 << \"\\n\";\r\r\n\t\r\r\n\tl = a.x1, r = res.x2;\r\r\n\twhile(l <= r) {\r\r\n\t\tmid = (l + r) / 2;\r\r\n\t\tif (query(mid, a.y1, res.x2, a.y2) >= maks) {\r\r\n\t\t\tres.x1 = mid;\r\r\n\t\t\tl = mid+1;\r\r\n\t\t}\r\r\n\t\telse {\r\r\n\t\t\tr = mid-1;\r\r\n\t\t}\r\r\n\t}\r\r\n//\tcout << \"Selesai \" << res.x1 << \"\\n\";\r\r\n\r\r\n\tl = a.y1, r = a.y2;\r\r\n\twhile(l <= r) {\r\r\n\t\tmid = (l + r) / 2;\r\r\n\t\tif (query(res.x1, a.y1, res.x2, mid) >= maks) {\r\r\n\t\t\tres.y2 = mid;\r\r\n\t\t\tr = mid-1;\r\r\n\t\t}\r\r\n\t\telse {\r\r\n\t\t\tl = mid+1;\r\r\n\t\t}\r\r\n\t}\r\r\n//\tcout << \"Selesai \" << res.y2 << \"\\n\";\r\r\n\r\r\n\tl = a.y1, r = res.y2;\r\r\n\twhile(l <= r) {\r\r\n\t\tmid = (l + r) / 2;\r\r\n\t\tif (query(res.x1, mid, res.x2, res.y2) >= maks) {\r\r\n\t\t\tres.y1 = mid;\r\r\n\t\t\tl = mid+1;\r\r\n\t\t}\r\r\n\t\telse {\r\r\n\t\t\tr = mid-1;\r\r\n\t\t}\r\r\n\t}\r\r\n//\tcout << \"Selesai \" << res.y1 << \"\\n\";\r\r\n\treturn res;\r\r\n}\r\r\nvoid vertical(rectangle a) {\r\r\n\tint ans = -1, l = a.x1, r = a.x2-1, mid, queryL, queryR;\r\r\n\twhile(l <= r) {\r\r\n\t\tmid = (l + r) / 2;\r\r\n\t\tqueryL = query(a.x1, a.y1, mid, a.y2);\r\r\n\t\tqueryR = query(mid+1, a.y1, a.x2, a.y2);\r\r\n\t\tif (queryL == queryR) {\r\r\n\t\t\tif (queryL == 1) ans = mid;\r\r\n\t\t\tbreak;\r\r\n\t\t}\r\r\n\t\telse {\r\r\n\t\t\tif (queryL > queryR) r = mid-1;\r\r\n\t\t\telse l = mid+1;\r\r\n\t\t}\r\r\n\t}\r\r\n\tif (ans == -1) return;\r\r\n\tsudah = 1;\r\r\n\r\r\n\trectangle tmp = {a.x1, a.y1, ans, a.y2};\r\r\n\tx = binser(tmp, 1);\r\r\n\ttmp = {ans+1, a.y1, a.x2, a.y2};\r\r\n\ty = binser(tmp, 1);\r\r\n}\r\r\nvoid horizontal(rectangle a) {\r\r\n\tint ans = -1, l = a.y1, r = a.y2-1, mid, queryL, queryR;\r\r\n\twhile(l <= r) {\r\r\n\t\tmid = (l + r) / 2;\r\r\n\t\tqueryL = query(a.x1, a.y1, a.x2, mid);\r\r\n\t\tqueryR = query(a.x1, mid+1, a.x2, a.y2);\r\r\n//\t\tcout << \"Ketika \" << mid << \" \" << queryL << \" \" << queryR << \"\\n\";\r\r\n\t\tif (queryL == queryR) {\r\r\n\t\t\tif (queryL == 1) ans = mid;\r\r\n\t\t\tbreak;\r\r\n\t\t}\r\r\n\t\telse {\r\r\n\t\t\tif (queryL > queryR) r = mid-1;\r\r\n\t\t\telse l = mid+1;\r\r\n\t\t}\r\r\n\t}\r\r\n\tif (ans == -1) return;\r\r\n\tsudah = 1;\r\r\n\r\r\n//\tcout << ans << \"\\n\";\r\r\n\trectangle tmp = {a.x1, a.y1, a.x2, ans};\r\r\n\tx = binser(tmp, 1);\r\r\n\ttmp = {a.x1, ans+1, a.x2, a.y2};\r\r\n\ty = binser(tmp, 1);\r\r\n}\r\r\nint main(){\r\r\n\tios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\r\n\t// freopen(\"text.in\",r,stdin);\r\r\n\t// freopen(\"text.out\",w,stdout);\r\r\n\t\r\r\n\tint n; cin >> n;\r\r\n\trectangle r = {1,1,n,n};\r\r\n\r\r\n//\tcout << r.x1 << \" \" << r.y1 << \" \" << r.x2 << \" \" << r.y2 << \"\\n\";\r\r\n\t\r\r\n//\trectangle r = {2,2,3,5};\r\r\n\thorizontal(r);\r\r\n\tif (!sudah) vertical(r);\r\r\n\r\r\n\tcout << \"! \" << x.x1 << \" \" << x.y1 << \" \" << x.x2 << \" \" << x.y2 << \" \" << y.x1 << \" \" << y.y1 << \" \" << y.x2 << \" \" << y.y2 << \"\\n\";\r\r\n\r\r\n\r\r\n\treturn 0;\r\r\n}"
}