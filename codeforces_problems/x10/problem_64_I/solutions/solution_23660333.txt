{
    "id": 23660333,
    "contestId": 64,
    "creationTimeSeconds": 1483940685,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 64,
        "index": "I",
        "name": "Sort the Table",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "*special",
            "sortings"
        ]
    },
    "author": {
        "contestId": 64,
        "members": [
            {
                "handle": "lys1280023"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1298304000
    },
    "programmingLanguage": "Tcl",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 122,
    "memoryConsumedBytes": 2457600,
    "source": "namespace import ::tcl::mathfunc::*\r\n\r\ngets stdin s\r\nset colnames [split $s]\r\nset n [llength $colnames]\r\nfor {set i 0} {$i < $n} {incr i} {\r\n    set colindex([lindex $colnames $i]) $i\r\n}\r\ngets stdin s\r\nset ordernames [split $s \",\"]\r\nset m [llength $ordernames]\r\nfor {set i 0} {$i < $m} {incr i} {\r\n    set a [split [string trim [lindex $ordernames $i]]]\r\n    set order0($i) $colindex([lindex $a 0])\r\n    set order1($i) [expr [string compare [lindex $a 1] \"ASC\"] == 0 ? 1 : -1]\r\n}\r\n\r\nset rn 0\r\nwhile {1} {\r\n    gets stdin s\r\n    if {[string compare $s {}] == 0} {\r\n        break\r\n    }\r\n    set rows($rn) [split $s]\r\n    incr rn\r\n}\r\n\r\nfor {set i 0} {$i < $rn} {incr i} {\r\n    for {set j $i} {$j > 0} {incr j -1} {\r\n        set comp 0\r\n        for {set k 0} {$k < $m} {incr k} {\r\n            if {$order1($k) > 0} {\r\n                if {[scan [lindex $rows($j) $order0($k)] {%[0-9]} ttt] > 0} {\r\n                    set comp [expr [lindex $rows($j) $order0($k)] < [lindex $rows([expr $j-1]) $order0($k)] ? 1 : 0]\r\n                } else {\r\n                    set comp [expr [string compare [lindex $rows($j) $order0($k)] [lindex $rows([expr $j-1]) $order0($k)]] < 0 ? 1 : 0]\r\n                }\r\n            } else {\r\n                if {[scan [lindex $rows($j) $order0($k)] {%[0-9]} ttt] > 0} {\r\n                    set comp [expr [lindex $rows($j) $order0($k)] > [lindex $rows([expr $j-1]) $order0($k)] ? 1 : 0]\r\n                } else {\r\n                    set comp [expr [string compare [lindex $rows($j) $order0($k)] [lindex $rows([expr $j-1]) $order0($k)]] > 0 ? 1 : 0]\r\n                }\r\n            }\r\n            \r\n            if {$comp > 0} {\r\n                break\r\n            }\r\n        }\r\n        \r\n        if {$comp > 0} {\r\n            set tem $rows($j)\r\n            set rows($j) $rows([expr $j-1])\r\n            set rows([expr $j-1]) $tem\r\n        }\r\n    }\r\n}\r\n\r\nfor {set i 0} {$i < $rn} {incr i} {\r\n    puts stdout $rows($i)\r\n}"
}