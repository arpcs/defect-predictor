{
    "id": 124124422,
    "contestId": 64,
    "creationTimeSeconds": 1627566375,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 64,
        "index": "I",
        "name": "Sort the Table",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "*special",
            "sortings"
        ]
    },
    "author": {
        "contestId": 64,
        "members": [
            {
                "handle": "irkstepanov"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1298304000
    },
    "programmingLanguage": "Tcl",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 20,
    "timeConsumedMillis": 248,
    "memoryConsumedBytes": 3174400,
    "source": "set line [gets stdin]\r\n\r\nset columns {}\r\nset i 0\r\nset n [string length $line]\r\n\r\nwhile {$i < $n} {\r\n    set j $i\r\n    while {[expr $j + 1] < $n && [string index $line [expr $j + 1]] != \" \"} {\r\n        incr j\r\n    }\r\n    lappend columns [string range $line $i $j] \r\n    set i [expr $j + 2]\r\n}\r\n\r\nset k [llength $columns]\r\n\r\n\r\n\r\nset line [gets stdin]\r\nset num {}\r\nset order {}\r\nset i 0\r\nset n [string length $line]\r\n\r\nwhile {$i < $n} {\r\n    set j $i\r\n    while {[expr $j + 1] < $n && [string index $line [expr $j + 1]] != \" \"} {\r\n        incr j\r\n    }\r\n    set name [string range $line $i $j] \r\n    lappend num [lsearch $columns $name]\r\n    set i [expr $j + 2]\r\n    if {[string index $line $i] == \"A\"} {\r\n        lappend order 1\r\n        set i [expr $i + 2]\r\n    } else {\r\n        lappend order -1\r\n        set i [expr $i + 3]\r\n    }\r\n    incr i\r\n    if {$i == $n} {\r\n        break\r\n    }\r\n    incr i\r\n    incr i\r\n}\r\n\r\nset a {}\r\n\r\nwhile {1 > 0} {\r\n    set line [gets stdin]\r\n    if {$line == \"\"} {\r\n        break\r\n    }\r\n    set curr {}\r\n    set i 0\r\n    set n [string length $line]\r\n    while {$i < $n} {\r\n        set j $i\r\n        while {[expr $j + 1] < $n && [string index $line [expr $j + 1]] != \" \"} {\r\n            incr j\r\n        }\r\n        lappend curr [string range $line $i $j] \r\n        set i [expr $j + 2]\r\n    }\r\n    lappend a $curr\r\n}\r\n\r\nwhile {[llength $a] > 0} {\r\n    set best 0\r\n    set i 1\r\n    while {$i < [llength $a]} {\r\n        set better false\r\n        set j 0\r\n        while {$j < [llength $num]} {\r\n            set pos [lindex $num $j]\r\n            set x [lindex [lindex $a $i] $pos]\r\n            set y [lindex [lindex $a $best] $pos]\r\n            if {[lindex $order $j] == -1} {\r\n                if {[string compare $x $y] == 1} {\r\n                    set better true\r\n                } elseif {[string compare $x $y] == -1} {\r\n                    break\r\n                }\r\n            } else {\r\n                if {[string compare $x $y] == -1} {\r\n                    set better true\r\n                } elseif {[string compare $x $y] == 1} {\r\n                    break\r\n                }\r\n            }\r\n            \r\n            incr j\r\n        }\r\n        \r\n        if {$better == true} {\r\n            set best $i\r\n        }\r\n        incr i\r\n    }\r\n    \r\n    foreach x [lindex $a $best] {\r\n        puts -nonewline $x\r\n        puts -nonewline \" \"\r\n    }\r\n    puts \"\"\r\n    set a [lreplace $a $best $best]\r\n}\r\n\r\n\r\n#puts -nonewline \"/\"\r\n\r\n"
}