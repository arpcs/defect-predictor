{
    "id": 230902015,
    "contestId": 1491,
    "creationTimeSeconds": 1698886332,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1491,
        "index": "E",
        "name": "Fib-tree",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2400,
        "tags": [
            "brute force",
            "dfs and similar",
            "divide and conquer",
            "number theory",
            "trees"
        ]
    },
    "author": {
        "contestId": 1491,
        "members": [
            {
                "handle": "lsj2009"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1614519300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 25,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 7065600,
    "source": "// LUOGU_RID: 132874781\n#include<bits/stdc++.h>\r\n//#define int long long\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define ld long double\r\n#define PII pair<int,int>\r\n#define INF 0x3f3f3f3f\r\n#define INFLL 0x3f3f3f3f3f3f3f3f\r\n#define chkmax(a,b) a=max(a,b)\r\n#define chkmin(a,b) a=min(a,b)\r\n#define rep(k,l,r) for(int k=l;k<=r;++k)\r\n#define per(k,r,l) for(int k=r;k>=l;--k)\r\n#define cl(f,x) memset(f,x,sizeof(f))\r\nusing namespace std;\r\nconst int N=2e5+5;\r\nint head[N],len;\r\nstruct node {\r\n    int to,nxt;\r\n}; node edge[N<<1];\r\nvoid add_edge(int u,int v) {\r\n    edge[++len]={v,head[u]}; head[u]=len;\r\n}\r\nint siz[N],fib[N],is_fib[N],ans_u,ans_v;\r\nbool used[N];\r\nvoid init() {\r\n    fib[0]=fib[1]=1;\r\n\tis_fib[1]=1;\r\n    rep(i,2,26) {\r\n\t\tfib[i]=fib[i-1]+fib[i-2];\r\n\t\tis_fib[fib[i]]=i;\r\n\t}\r\n}\r\nvoid dfs(int u,int fa,const int v1,const int v2) {\r\n\tsiz[u]=1;\r\n    for(int i=head[u];i;i=edge[i].nxt) {\r\n        int v=edge[i].to;\r\n        if(v!=fa&&!used[v]) {\r\n            dfs(v,u,v1,v2);\r\n            if(siz[v]==v1||siz[v]==v2) {\r\n                ans_u=u; ans_v=v;\r\n            }\r\n            siz[u]+=siz[v];\r\n        }\r\n    }\r\n}\r\nbool solve(int u,int fa,int d) {\r\n\tif(d<=1)\r\n\t\treturn true;\r\n\tans_u=ans_v=0;\r\n\tdfs(u,fa,fib[d-1],fib[d-2]);\r\n\tif(!ans_v)\r\n\t\treturn false;\r\n\tint tu=ans_u,tv=ans_v;\r\n\tused[ans_v]=true;\r\n\tbool t=siz[ans_v]==fib[d-2];\r\n\treturn solve(u,fa,d-2+t)&&solve(tv,tu,d-1-t);\r\n}\r\nsigned main() {\r\n    init();\r\n\tint n;\r\n\tscanf(\"%d\",&n);\r\n\trep(i,2,n) {\r\n\t\tint u,v;\r\n\t\tscanf(\"%d%d\",&u,&v);\r\n\t\tadd_edge(u,v);\r\n\t\tadd_edge(v,u);\r\n\t}\r\n\tif(!is_fib[n])\r\n\t\tputs(\"NO\");\r\n\telse \r\n\t\tputs(solve(1,0,is_fib[n])? \"YES\":\"NO\");\r\n    return 0;\r\n}"
}