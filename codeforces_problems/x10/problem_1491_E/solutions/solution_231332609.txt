{
    "id": 231332609,
    "contestId": 1491,
    "creationTimeSeconds": 1699101383,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1491,
        "index": "E",
        "name": "Fib-tree",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2400,
        "tags": [
            "brute force",
            "dfs and similar",
            "divide and conquer",
            "number theory",
            "trees"
        ]
    },
    "author": {
        "contestId": 1491,
        "members": [
            {
                "handle": "zac2010"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1614519300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 7884800,
    "source": "// LUOGU_RID: 133376455\n#include <bits/stdc++.h>\r\n#define FL(i, a, b) for(int i = (a); i <= (b); ++i)\r\n#define FR(i, a, b) for(int i = (a); i >= (b); --i)\r\nusing namespace std;\r\nconstexpr int N = 2e5 + 10;\r\nstruct E{\r\n    int v, pre, nxt;\r\n} e[N << 1];\r\nint n, now, id, tote, sz[N], fa[N], hd[N], f[30];\r\nunordered_map<int, int> mp;\r\nvoid init(){\r\n    memset(hd, -1, sizeof(hd));\r\n    f[1] = 1;\r\n    FL(i, 2, 27) mp[f[i] = f[i - 1] + f[i - 2]] = i;\r\n}\r\nvoid Adde(int u, int v){\r\n    e[++tote] = {v, -1, hd[u]};\r\n    if(~hd[u]) e[hd[u]].pre = tote; hd[u] = tote;\r\n}\r\nvoid Dele(int x, int y){\r\n    for(int i = hd[x]; ~i; i = e[i].nxt){\r\n        if(e[i].v == y){\r\n            if(~e[i].pre) e[e[i].pre].nxt = e[i].nxt;\r\n            if(~e[i].nxt) e[e[i].nxt].pre = e[i].pre;\r\n            if(i == hd[x]) hd[x] = e[i].nxt;\r\n        }\r\n    }\r\n}\r\nvoid dfs(int u){\r\n    sz[u] = 1;\r\n    for(int i = hd[u]; ~i; i = e[i].nxt){\r\n        if(e[i].v == fa[u]) continue;\r\n        fa[e[i].v] = u, dfs(e[i].v);\r\n        sz[u] += sz[e[i].v];\r\n    }\r\n    if(mp[sz[u]] && now != mp[sz[u]] && now - mp[sz[u]] <= 2) id = u;\r\n}\r\nvoid solve(int rt, int fb){\r\n    if(fb <= 2) return;\r\n    now = fb, id = fa[rt] = 0, dfs(rt);\r\n    if(!id){printf(\"NO\\n\"); exit(0);}\r\n    Dele(fa[id], id), Dele(id, fa[id]);\r\n    solve(rt, mp[sz[rt] - sz[id]]), solve(id, mp[sz[id]]);\r\n}\r\nint main(){\r\n    scanf(\"%d\", &n), init();\r\n    FL(i, 2, n){\r\n        int u, v; scanf(\"%d%d\", &u, &v);\r\n        Adde(u, v), Adde(v, u);\r\n    }\r\n    if(!mp[n]) return printf(\"NO\\n\"), 0;\r\n    solve(1, mp[n]), printf(\"YES\\n\");\r\n    return 0;\r\n}"
}