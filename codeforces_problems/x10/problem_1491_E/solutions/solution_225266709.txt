{
    "id": 225266709,
    "contestId": 1491,
    "creationTimeSeconds": 1695735580,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1491,
        "index": "E",
        "name": "Fib-tree",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2400,
        "tags": [
            "brute force",
            "dfs and similar",
            "divide and conquer",
            "number theory",
            "trees"
        ]
    },
    "author": {
        "contestId": 1491,
        "members": [
            {
                "handle": "HHY_zZhu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1614519300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 155,
    "memoryConsumedBytes": 10444800,
    "source": "//#pragma GCC optimize(\"O3,unroll-loops\")\r\n//#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define V vector\r\n#define all0(x) (x).begin(),(x).end()\r\n#define all1(x) (x).begin()+1,(x).end()\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define fi first\r\n#define se second\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define cin std::cin\r\n#define cout std::cout\r\ntypedef long long LL;\r\ntypedef pair<int, int> pi;\r\ntypedef pair<LL, LL> pl;\r\n\r\nconst int MN = 2e5 + 20;//MaxN \u8bb0\u5f97\u6539\u4e00\u4e0b\r\nconst int INF = 2e9+1000;//INF\r\nconst LL INFLL = 8e18+1000;//INF long long \r\nmt19937 mrand(random_device{}());\r\n//\u6a21\u677f\u533a\u57df~~~~~~~\r\n\r\n//\u6a21\u677f\u7ed3\u675f~~~~~~~\r\nV<int> e[MN];\r\nV<int> fib(30+1);\r\nint siz[MN];\r\nvoid dfs(int x,int p){\r\n    siz[x]=0;\r\n    for(auto y: e[x]){\r\n        if(p==y)continue;\r\n        if(y==-1) continue;\r\n        dfs(y,x);\r\n        siz[x]+=siz[y];\r\n    }\r\n    siz[x]++;\r\n}\r\nbool cut(int x,int p,int aim1,int aim2){\r\n    for( auto& y: e[x]){\r\n        if(y==p) continue;\r\n        if(y==-1) continue;\r\n        if(siz[y]==aim1||siz[y]==aim2) {\r\n            y=-1;\r\n            return 1;\r\n        }\r\n        if(cut(y,x,aim1,aim2)) {\r\n            return 1;\r\n        }\r\n\r\n    }\r\n    return 0;\r\n}\r\nvoid solve() {\r\n    int n;cin>>n;\r\n    fib[0]=1,fib[1]=1;\r\n    for(int i=2;i<=30;i++) fib[i]=fib[i-1]+fib[i-2];\r\n    for(int i=1;i<n;i++) {\r\n        int a,b;cin>>a>>b;\r\n        e[a].pb(b);\r\n        e[b].pb(a);\r\n    }\r\n    dfs(1,0);\r\n    while(siz[1]!=1){\r\n        int now=lb(all1(fib),siz[1])-fib.begin(); \r\n        if(!cut(1,0,fib[now-2],fib[now-1])) {\r\n            cout<<\"NO\\n\";\r\n            return;\r\n        }\r\n        dfs(1,0);\r\n    }\r\n    cout<<\"YES\\n\";\r\n    return;\r\n}\r\nint32_t main() {\r\n#ifndef LOCAL\r\n    ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);\r\n#endif\r\n#ifdef LOCAL\r\n   freopen(\"C:/Users/lijia/Desktop/vscode/in.in\",\"r\",stdin);\r\n   freopen(\"C:/Users/lijia/Desktop/vscode/out.out\",\"w\",stdout);\r\n#endif\r\n    int tt=1;\r\n    //cin >> tt;\r\n    while (tt--) \r\n    solve();\r\n}"
}