{
    "id": 232201515,
    "contestId": 1491,
    "creationTimeSeconds": 1699608449,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1491,
        "index": "E",
        "name": "Fib-tree",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2400,
        "tags": [
            "brute force",
            "dfs and similar",
            "divide and conquer",
            "number theory",
            "trees"
        ]
    },
    "author": {
        "contestId": 1491,
        "members": [
            {
                "handle": "xie_lzh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1614519300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 25,
    "timeConsumedMillis": 311,
    "memoryConsumedBytes": 8908800,
    "source": "// LUOGU_RID: 134313955\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N=2e5+5;\nint n,u,v;\nint head[N],to[N<<1],nxt[N<<1],cnt;\nvoid add(int u,int v)\n{\n    to[++cnt]=v;\n    nxt[cnt]=head[u];\n    head[u]=cnt;\n}\nbool vis[N],ok[N<<1];\nint siz[N];\nint fib[N],fa[N];\nvector<int> vec;\nvoid dfs(int x,int f)\n{\n    siz[x]=1; vec.push_back(x); fa[x]=f;\n    for(int i=head[x];i;i=nxt[i])\n    {\n        int v=to[i];\n        if(v==f||vis[v]) continue;\n        dfs(v,x);\n        siz[x]+=siz[v];\n    }\n}\nbool solve(int x)\n{\n    vec.clear();\n    dfs(x,0);\n    if(siz[x]==1) return 1;\n    for(int p:vec)\n    {\n        if(p==x) continue;\n        if(ok[siz[p]]&&ok[siz[x]-siz[p]])\n        {\n            bool op=1;\n            vis[p]=1;\n            op&=solve(fa[p]);\n            vis[p]=0; vis[fa[p]]=1;\n            op&=solve(p);\n            return op;\n        }\n    }\n    return false;\n}\nint main()\n{\n    ios::sync_with_stdio(false);\n    cin.tie(0); cout.tie(0);\n    cin>>n;\n    fib[0]=fib[1]=1; ok[1]=1;\n    for(int i=2;fib[i-1]<n;i++)\n        fib[i]=fib[i-1]+fib[i-2],ok[fib[i]]=1;\n    if(!ok[n]) return cout<<\"NO\",0;\n    for(int i=1;i<n;i++)\n    {\n        cin>>u>>v;\n        add(u,v); add(v,u);\n    }\n    if(solve(1)) cout<<\"YES\";\n    else cout<<\"NO\";\n    return 0;\n}"
}