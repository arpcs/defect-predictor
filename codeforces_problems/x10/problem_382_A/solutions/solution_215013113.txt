{
    "id": 215013113,
    "contestId": 382,
    "creationTimeSeconds": 1690013107,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 382,
        "index": "A",
        "name": "Ksenia and Pan Scales",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1100,
        "tags": [
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 382,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1389972600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 18,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\n#include <map>\n#define ll long long\n#define fastio ios_base::sync_with_stdio(false); ios::sync_with_stdio(false);cin.tie(0); cout.tie(0);\nusing namespace std;\nint main ()\n{\n    string s, remaining, r, l;\n    cin >> s >> remaining;\n\n    bool isleft = false;\n    for (int i = 0; i < s.size(); i++)\n    {\n        if (s[i] == '|')\n        {\n            isleft = true;\n            continue;\n        }\n\n        if (isleft)\n        {\n            l.push_back(s[i]);\n            continue;\n        }\n        r.push_back(s[i]);\n    }\n\n    int d = max(r.size(), l.size()) - min(r.size(), l.size());\n    if ((remaining.size() < d) || (d % 2 == 0 && remaining.size() % 2 != 0))\n    {\n        cout << \"Impossible\\n\";\n        return 0;\n    }\n\n    if (r.size() > l.size())\n    {\n        while (r.size() > l.size())\n        {\n            l.push_back(remaining.back());\n            remaining.pop_back();\n        }\n    }\n    else if (r.size() < l.size())\n    {\n        while (r.size() < l.size())\n        {\n            r.push_back(remaining.back());\n            remaining.pop_back();\n        }\n    }\n\n    while (remaining.size() != 0)\n    {\n        l.push_back(remaining.back());\n        remaining.pop_back();\n        r.push_back(remaining.back());\n        remaining.pop_back();\n    }\n\n    \n    for (int i = 0; i < r.size(); i++)\n    {\n        cout << r[i];\n    }\n    cout << '|';\n    for (int i = 0; i < l.size(); i++)\n    {\n        cout << l[i];\n    }\n    cout << '\\n';\n    return 0;\n}\n\t    \t\t\t\t     \t  \t\t\t \t \t\t \t  \t"
}