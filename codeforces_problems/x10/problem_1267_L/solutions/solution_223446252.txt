{
    "id": 223446252,
    "contestId": 1267,
    "creationTimeSeconds": 1694762812,
    "relativeTimeSeconds": 1912,
    "problem": {
        "contestId": 1267,
        "index": "L",
        "name": "Lexicography",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "strings"
        ]
    },
    "author": {
        "contestId": 1267,
        "members": [
            {
                "handle": "zbceyond"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1694760900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 72,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 11059200,
    "source": "#include<bits/stdc++.h>\r\n\r\n#define rep(i, x, y) for(int i=x;i<=y;i++)\r\n#define per(i, x, y) for(int i=x;i>=y;i--)\r\nusing namespace std;\r\n\r\n#define dbg(x...) \\\r\n    do { \\\r\n        std::cout << #x << \" -> \"; \\\r\n        err(x); \\\r\n    } while (0)\r\n\r\nvoid err() {\r\n    std::cout << std::endl;\r\n}\r\n\r\ntemplate<class T, class... Ts>\r\nvoid err(T arg, Ts &... args) {\r\n    std::cout << arg << ' ';\r\n    err(args...);\r\n}\r\n\r\n#define int long long\r\n\r\nconst int mod = 998244353;\r\n\r\nint qmi(int a, int b) {\r\n    int res = 1;\r\n    for (; b; b >>= 1, a = a * a % mod) {\r\n        if (b & 1)res = res * a % mod;\r\n    }\r\n    return res;\r\n}\r\n\r\nusing pll = pair<long long, long long>;\r\nconst int N = 2e5 + 10;\r\nconst int inf = 1e18;\r\nint n, l, k;\r\nstring s, t[N];\r\n\r\nvoid elysira() {\r\n    cin >> n >> l >> k >> s;\r\n    sort(s.begin(), s.end());\r\n    vector<char> tmp;\r\n    rep(i, 1, n) {\r\n        rep(j, 1, l) {\r\n            if (i > k)t[i] += s[(i - 1) * l + j - 1];\r\n            else tmp.push_back(s[(i - 1) * l + j - 1]);\r\n        }\r\n    }\r\n    int now = 1;\r\n    reverse(tmp.begin(), tmp.end());\r\n    rep(j, 1, l) {\r\n        rep(i, now, k) {\r\n            t[i] += tmp.back(), tmp.pop_back();\r\n        }\r\n        per(i, k, now) {\r\n            if (t[i].back() < t[k].back()) {\r\n                now = i + 1;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    rep(i, 1, n) {\r\n        while (t[i].size() < l)t[i] += tmp.back(), tmp.pop_back();\r\n    }\r\n    rep(i, 1, n)cout << t[i] << \"\\n\";\r\n}\r\n\r\nsigned main() {\r\n    cin.tie(nullptr)->sync_with_stdio(false);\r\n    int tc = 1;\r\n    //cin >> tc;\r\n    for (int i = 1; i <= tc; i++) {\r\n        elysira();\r\n    }\r\n}\r\n/*\r\n\r\n*/"
}