{
    "id": 181049554,
    "contestId": 1267,
    "creationTimeSeconds": 1668496557,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1267,
        "index": "L",
        "name": "Lexicography",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "strings"
        ]
    },
    "author": {
        "contestId": 1267,
        "members": [
            {
                "handle": "Comrades02"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1575183600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define SINSTANCE\n#define edl '\\n'\nvoid debug() {\n  cout << endl;\n}\ntemplate<typename A, typename ...B>\nvoid debug(A a, B... b) {\n  cout << a << \" \";\n  debug(b...);\n}\n\ninline int readint() {\n  char c;\n  int res = 0, sign = 1;\n  while((c = getchar())!= '-' && !isdigit(c));\n  if (c == '-') sign = -1;\n  else res = c-'0';\n  while (isdigit(c = getchar())) {\n      res = res * 10 + c-'0';\n  }\n  return res * sign;\n}\nusing ll = long long;\nusing pll = pair<ll, ll>;\nusing pii = pair<int, int>;\n\n\nvoid solve() {\n  int n, l, k;\n  cin >> n >> l >> k;\n  string s; cin >> s;\n  vector<int> cnt(26);\n  for (auto c : s) cnt[c-'a']++;\n  int tot = 0, cur = 0;\n  while (tot < k) {\n    tot += cnt[cur++];\n  }\n  --cur;\n  int last = tot - cnt[cur];\n  // debug(\"last\", last);\n  vector<string> ft(last, string(l, '0'));\n  int use = 0;\n  for (int i = 0; i < last; ++i) {\n    if (cnt[use] == 0) ++use;\n    ft[i][0] = use+'a';\n    cnt[use]--;\n  }\n  int rk = k - last;\n  // debug(\"rk\", rk);\n  vector<string> fab(rk, string(l, '0'));\n  use = cur;\n  for (int i = 0; i < l; ++i) {\n    for (int j = 0; j < rk; ++j) {\n      if (cnt[use] == 0) ++use;\n      fab[j][i] = use+'a';\n      cnt[use]--;\n    }\n  }\n  for (int i = 0; i < ft.size(); ++i) {\n    for (int j = 1; j < l; ++j) {\n      if (cnt[use] == 0) ++use;\n      ft[i][j] = use+'a';\n      cnt[use]--;\n    }\n  }\n  vector<string> lt(n-k, string(l, '0'));\n  for (int i = 0; i < lt.size(); ++i) {\n    for (int j = 0; j < l; ++j) {\n      if (cnt[use] == 0) ++use;\n      lt[i][j] = use+'a';\n      cnt[use]--;\n    }\n  }\n  for (auto& s : ft) cout << s << edl;\n  for (auto& s : fab) cout << s << edl;\n  for (auto& s : lt) cout << s << edl;\n}\n\n// we prefer '\\n' instead of endl, since the former is 10x faster than the latter\n// we prefer vector than queue, since we can allocate memory statically.\nint main() {\n  ios::sync_with_stdio(false); cin.tie(nullptr);\n  #ifndef ONLINE_JUDGE\n  freopen(\"data.in\", \"r\", stdin);\n  #endif\n  #ifdef SINSTANCE\n  int tt; tt = 1;\n  #else\n  int tt; cin >> tt;\n  #endif\n  while (tt--) {\n      solve();\n  }\n  return 0;\n}"
}