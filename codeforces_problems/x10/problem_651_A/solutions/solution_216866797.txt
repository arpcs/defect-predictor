{
    "id": 216866797,
    "contestId": 651,
    "creationTimeSeconds": 1690988572,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 651,
        "index": "A",
        "name": "Joysticks",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1100,
        "tags": [
            "dp",
            "greedy",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 651,
        "members": [
            {
                "handle": "Mhmd_Bakr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1457342700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "//#pragma once\r\n#define _CRT_SECURE_NO_WARNINGS\r\n#include <bits/stdc++.h>\r\n#include <windows.h>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\n#include <functional>\r\n\r\n//#include <boost/multiprecision/cpp_int.hpp>\r\nusing namespace std;\r\n//using namespace boost::multiprecision;\r\n\r\n// Author: Mohamed Bakr\r\n\r\n#define ll long long int\r\n#define int ll\r\n#define vct vector\r\n//#define int128 number<cpp_int_backend<128, 128, unsigned_magnitude, unchecked, void>>\r\n#define all(v) v.begin(),v.end()\r\n#define rall(v) v.rbegin(),v.rend()\r\n#define sum(v) accumulate(all(v), 0LL)\r\n#define minv(v) *min_element(all(v))\r\n#define maxv(v) *max_element(all(v))\r\n#define dbg(ele) cout<< #ele <<\" : \"<< ele\r\n#define umap unordered_map\r\n#define F first\r\n#define S second\r\n#define ln \"\\n\"\r\n#define lln cout<<ln\r\n#define yes cout<<\"YES\"<<ln\r\n#define no cout<<\"NO\"<<ln\r\n#define precision(x,y) fixed<<setprecision(y)<<x\r\n#define fastio ios::sync_with_stdio(0),cin.tie(0),cout.tie(0)\r\n#define PI 3.141592653589793238462643383279502884197\r\n#define ret return void\r\n\r\ntemplate <typename T, typename C>\r\nistream& operator>>(istream& istream, pair<T, C>& pi) { cin >> pi.first >> pi.second; return istream; }\r\ntemplate <typename T>\r\nistream& operator>>(istream& istream, vct<T>& v) { for (T& it : v) cin >> it; return istream; }\r\ntemplate <typename T>\r\nostream& operator<<(ostream& ostream, vct<T>& v) { for (T it : v) cout << it << \" \"; return ostream; }\r\n\r\nclass Console_Color\r\n{\r\nprivate:\r\n\tHANDLE console_color = GetStdHandle(STD_OUTPUT_HANDLE);\r\npublic:\r\n#define SCT SetConsoleTextAttribute\r\n\tvoid red() { SCT(console_color, FOREGROUND_RED); }\r\n\tvoid green() { SCT(console_color, FOREGROUND_GREEN); }\r\n\tvoid blue() { SCT(console_color, FOREGROUND_BLUE); }\r\n\tvoid cyan() { SCT(console_color, FOREGROUND_BLUE | FOREGROUND_GREEN | FOREGROUND_INTENSITY); }\r\n\tvoid white() { SCT(console_color, FOREGROUND_BLUE | FOREGROUND_GREEN | FOREGROUND_RED); }\r\n\tvoid gray() { SCT(console_color, FOREGROUND_INTENSITY); }\r\n\tvoid yellow() { SCT(console_color, FOREGROUND_GREEN | FOREGROUND_RED); }\r\n};\r\nConsole_Color color;\r\nvct<bool>primes;\r\nvct<vct<int>>pasc;\r\nvct<int>facts;\r\nbool prime(int num)\r\n{\r\n\tif (num <= 1) return false;\r\n\tint ch = 2;\r\n\twhile (ch * ch <= num)\r\n\t{\r\n\t\tif (!(num % ch)) return false;\r\n\t\tch++;\r\n\t}return true;\r\n}\r\nvoid sieve(int N)\r\n{\r\n\tprimes = vct<bool>(N + 1, 1);\r\n\tfor (int p = 2; p * p < N; p++)\r\n\t\tif (primes[p])\r\n\t\t\tfor (int i = p * 2; i < N; i += p)\r\n\t\t\t\tprimes[i] = 0;\r\n}\r\nconst int mod = 1e9 + 7;\r\nint fact(int n) { if (n == 0) return 1; return n * fact(n - 1); }\r\nint nPr(int n, int r) { int val = 1; for (int i = n - r + 1; i <= n; i++) val *= i; return val; }\r\nint nCr(int n, int r) { return fact(n) / (fact(r) * fact(n - r)); }\r\nint gcd(int a, int b) { if (b == 0) return a; return gcd(b, a % b); }\r\nint lcm(int a, int b) { return (a * b) / gcd(a, b); }\r\nint biPow(int x, int y) { int val = 1; while (y) { if (y % 2) { val *= x; y--; } else { x *= x; y /= 2; } }return val; }\r\nint modPow(int x, int y, int m) { int val = 1; x %= m; while (y) { if (y % 2) { val *= x; val %= m; y--; } else { x *= x; x %= m; y /= 2; } }return val % m; }\r\nint inv(int val) { return modPow(val, mod - 2, mod) % mod; }\r\nint invC(int n, int r) { return ((facts[n] * inv(facts[r])) % mod * inv(facts[n - r])) % mod; }\r\nvoid iniPasc(int n)\r\n{\r\n\tpasc = vct<vct<int>>(n);\r\n\tpasc[0] = { 1 };\r\n\tpasc[1] = { 1,1 };\r\n\tfor (int i = 2; i < n; i++)\r\n\t{\r\n\t\tpasc[i] = vct<int>(pasc[i - 1].size() + 1);\r\n\t\tpasc[i][0] = 1;\r\n\t\tpasc[i][pasc[i].size() - 1] = 1;\r\n\t\tfor (int j = 1; j < pasc[i].size() - 1; j++)\r\n\t\t\tpasc[i][j] = pasc[i - 1][j] + pasc[i - 1][j - 1];\r\n\t}\r\n}\r\nint xd[8] = { -1,0,1, 0, -1, -1, 1, 1 };\r\nint yd[8] = { 0,1,0,-1 , 1, -1, 1, -1 };\r\n\r\n\r\nvoid answer(int test)\r\n{\r\n\tint a, b; cin >> a >> b;\r\n\tcolor.yellow();\r\n\tif (a % 3 == b % 3) \r\n\t\tcout << max(0ll, a + b - 3);\r\n\telse \r\n\t\tcout << a + b - 2;\r\n}\r\nbool multiTests = false;\r\nINT main()\r\n{\r\n#ifdef Mhmd_Bakr\r\n\t//freopen(\"input.in\", \"r\", stdin);\r\n\t//freopen(\"output.out\", \"w\", stdout);\r\n#endif\r\n\tfastio;\r\n\tint tests = 1;\r\n\tif (multiTests) cin >> tests;\r\n\tfor (int test = 1; test <= tests; test++)\r\n\t{\r\n\t\t//cout << \"Case \" << test << \": \";\r\n\t\tanswer(test);\r\n\t\tcolor.white();\r\n\t}\r\n}"
}