{
    "id": 236206975,
    "contestId": 1894,
    "creationTimeSeconds": 1701955853,
    "relativeTimeSeconds": 1853,
    "problem": {
        "contestId": 1894,
        "index": "B",
        "name": "Two Out of Three",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1000,
        "tags": [
            "constructive algorithms"
        ]
    },
    "author": {
        "contestId": 1894,
        "members": [
            {
                "handle": "s.pris"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1701954000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 20172800,
    "source": "#include <iostream>\n#include<vector>\n#include<map>\n#include <unordered_map>\n#include<math.h>\n#include<stack>\n#include<algorithm>\n#include <limits.h>\n#include<queue>\n#include<cmath>\n#include<set>\n\n\n#define ll long long\n#define MAXN 1000001\nint spf[MAXN];\nconst int N = 1000000;   \nll tree[2 * N];\n\nusing namespace std;\n\n// static bool cmp(pair<int, int> x, pair<int, int> y){\n//     if(x.first==y.first)\n//         return x.second>y.second;\n//     else\n//         return x.first<y.first;\n// }\n\nvoid build(vector<ll>& arr, int n) { \n\n    for (int i=0; i<n; i++)    \n        tree[n+i] = arr[i];\n\n    for (int i = n - 1; i > 0; --i)     \n        tree[i] = tree[i<<1] & tree[i<<1 | 1];    \n}\n\nvoid updateTreeNode(ll p, ll value, ll n) { \n    tree[p+n] = value;\n    p = p+n;\n\n    for (int i=p; i > 1; i >>= 1)\n        tree[i>>1] = tree[i] & tree[i^1];\n}\n\nint query(int l, int r, int n) { \n    ll res = 4294967295;\n    for (l += n, r += n; l < r; l >>= 1, r >>= 1){\n        if (l&1) \n            res = res & tree[l++];\n      \n        if (r&1) \n            res = res & tree[--r];\n    }\n      \n    return res;\n}\n\nvoid sieve(){\n    spf[1] = 1;\n    for (int i = 2; i < MAXN; i++)\n        spf[i] = i;\n\n    for (int i = 4; i < MAXN; i += 2)\n        spf[i] = 2;\n \n    for (int i = 3; i * i < MAXN; i++) {\n        if (spf[i] == i) {\n            for (int j = i * i; j < MAXN; j += i)\n                if (spf[j] == j)\n                    spf[j] = i;\n        }\n    }\n}\n\nll calc_ceil(ll x,ll y){\n    if(x%y==0)\n        return x/y;\n    else\n        return 1+x/y;\n}\n\nstruct cmp {\n\tbool operator() (const pair<int, int> &a, const pair<int, int> &b) const {\n\t\tint lena = a.second - a.first + 1;\n\t\tint lenb = b.second - b.first + 1;\n\t\tif (lena == lenb) return a.first < b.first;\n\t\treturn lena > lenb;\n\t}\n};\n\n\nvoid solve(){\n    int n;\n    cin>>n;\n    vector<int>a(n);\n    map<int,int> m;\n    for(int i=0;i<n;i++){\n        cin>>a[i];\n        m[a[i]]++;\n    }\n    vector<pair<int,int> > v;\n    int flag = 0;\n    int rep;\n    for(auto it=m.begin();it!=m.end();it++){\n        if(it->second>1){\n            flag++;\n            rep = it->first;\n        }  \n    }\n    for(int i=0;i<n;i++){\n        v.push_back(make_pair(a[i],i));\n    }\n    sort(v.begin(),v.end());\n    if(m.size()==1 || m.size()==n || flag==1)\n        cout<<-1<<endl;\n    else{\n        vector<int>res(n);\n        for(int i=0;i<n;i++){\n            if(v[i].first!=rep){\n                res[v[i].second]=1;\n                while(i+1<n && v[i].first==v[i+1].first){\n                    res[v[i+1].second]=2;\n                    i++;\n                }\n            }\n            else{\n                res[v[i].second]=2;\n                while(i+1<n && v[i].first==v[i+1].first){\n                    res[v[i+1].second]=3;\n                    i++;\n                }\n            }   \n        }\n        for(int i=0;i<n;i++){\n            cout<<res[i]<<\" \";\n        }\n        cout<<endl;\n    }\n    \n\n}\n\n\n\nint main(int argc, char *argv[]) {\n\tFILE* x;\n    bool open = false;\n\tif(argc>1){\n        x = freopen(\"test_input.txt\", \"r\", stdin);\n        open = true;\n    }\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL); \n    bool t = true;\n    if(t){\n        int tc; cin>>tc;\n        while(tc--)\n            solve();\n    }\n    else\n        solve();\n    if(open)\n        fclose(x);\n\n}\n\n    \n "
}