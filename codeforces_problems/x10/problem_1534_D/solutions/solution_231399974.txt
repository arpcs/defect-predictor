{
    "id": 231399974,
    "contestId": 1534,
    "creationTimeSeconds": 1699142601,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1534,
        "index": "D",
        "name": "Lost Tree",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "interactive",
            "trees"
        ]
    },
    "author": {
        "contestId": 1534,
        "members": [
            {
                "handle": "nguyenquocthinhhung"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1623598500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 130,
    "timeConsumedMillis": 1372,
    "memoryConsumedBytes": 18432000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define rep(i,j,k) for(int i=(j);i<=(k);i++) \r\nconst int N=2145;\r\nint n,d[N][N],c[2];\r\nint main(){scanf(\"%d\",&n); \r\n\tputs(\"? 1\"); fflush(stdout);\r\n\trep(i,1,n)scanf(\"%d\",&d[1][i]),c[d[1][i]&1]++;c[0]--;\r\n\trep(i,2,n)if((c[1]>c[0])^(d[1][i]&1)){\r\n\t\tprintf(\"? %d\\n\",i); fflush(stdout);\r\n\t\trep(j,1,n)scanf(\"%d\",&d[i][j]),d[j][i]=d[i][j];\r\n\t}puts(\"!\");\r\n\trep(i,1,n)rep(j,i,n)if(d[i][j]==1)printf(\"%d %d\\n\",i,j);\r\n}"
}