{
    "id": 216621657,
    "contestId": 1534,
    "creationTimeSeconds": 1690828030,
    "relativeTimeSeconds": 4930,
    "problem": {
        "contestId": 1534,
        "index": "D",
        "name": "Lost Tree",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "interactive",
            "trees"
        ]
    },
    "author": {
        "contestId": 1534,
        "members": [
            {
                "handle": "0npata"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1690823100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "using namespace std;\r\n#include <bits/stdc++.h>\r\n\r\n#define i32 int\r\n#define i64 long long\r\n#define u32 unsigned int\r\n#define u64 unsigned long long \r\n#define f32 float\r\n#define f64 double\r\n#define arr array\r\n#define vec vector\r\n#define F0R(i, e) for(i32 i = 0; i<e; i++)\r\n#define FOR(i, s, e) for(i32 i = s; i<e; i++)\r\n#define F0Rd(i, e) for(i32 i = e-1; i>=0; i--)\r\n#define FORd(i, s, e) for(i32 i = e-1; i>=s; i--)\r\n#define TRAV(v, g) for(auto v: g)\r\n\r\nconst i32 INF_32 = INT32_MAX/3;\r\nconst i64 INF_64 = INT64_MAX/3;\r\n\r\nvoid query(i32 i) {\r\n    cout << \"? \" << i+1  << endl;\r\n}\r\n\r\nvoid solve() {\r\n    i32 n;\r\n    cin >> n;\r\n    vec<bool> visited(n);\r\n    set<pair<i32, i32>> ans;\r\n\r\n    F0R(i, n) {\r\n        if(visited[i] )continue;\r\n        query(i);\r\n        visited[i] = true;\r\n\r\n        vec<i32> d(n);\r\n        F0R(j, n) cin >> d[j];\r\n        F0R(j, n) {\r\n            if(d[j] == 1) {\r\n                visited[j] = true;\r\n                i32 a = i;\r\n                i32 b = j;\r\n                if(a>b) swap(a, b);\r\n                ans.insert({a,b});\r\n            }\r\n        }\r\n    }\r\n\r\n    cout << '!' << endl;\r\n    TRAV(edge, ans) {\r\n        cout << edge.first+1 << \" \" << edge.second+1 << endl;\r\n    }\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n\r\n    i32 t = 1;\r\n    // cin >> t;\r\n\r\n    while(t--) {\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n"
}