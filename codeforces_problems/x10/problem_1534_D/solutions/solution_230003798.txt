{
    "id": 230003798,
    "contestId": 1534,
    "creationTimeSeconds": 1698407370,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1534,
        "index": "D",
        "name": "Lost Tree",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1800,
        "tags": [
            "constructive algorithms",
            "interactive",
            "trees"
        ]
    },
    "author": {
        "contestId": 1534,
        "members": [
            {
                "handle": "Mantra7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1623598500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 130,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 204800,
    "source": "/*\r\nMantra's code :)\r\n*/\r\n\r\n#pragma GCC optimize(\"unroll-loops\")\r\n#pragma GCC optimize(\"O3\")\r\n// #pragma GCC target(\"avx2\")\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nusing namespace chrono;\r\n\r\n#define pub push_back\r\n#define pob pop_back\r\n#define ya cout<<\"YES\\n\"\r\n#define na cout<<\"NO\\n\"\r\n#define imp cout<<\"Impossible\\n\"\r\n#define ff first\r\n#define ss second\r\n#define sz(x) ((int)(x).size())\r\n#define all(x) (x).begin(), (x).end()\r\n#define precision(a) {cout << setprecision(a) << fixed;}\r\n\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x) cerr << #x <<\" \"; _print(x); cerr << endl;\r\n#else\r\n#define debug(x);\r\n#endif\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef vector<int> vi;\r\ntypedef vector<char> vc;\r\ntypedef vector<double> vd;\r\ntypedef vector<ll> vll;\r\ntypedef vector<string> vs;\r\ntypedef vector<ld> vld;\r\ntypedef pair<int,int> pii;\r\ntypedef pair<ll,ll> pll;\r\ntypedef map<int,int> mii;\r\ntypedef map<ll,ll> mll;\r\ntypedef set<int> si;\r\ntypedef set<ll> sll;\r\ntypedef set<pll> spll;\r\ntypedef vector<pair<int,int>> vpi;\r\ntypedef vector<pair<ll,ll>> vpll;\r\ntypedef tuple<ll,ll,ll> tll;\r\ntypedef vector<tll> vtll;\r\n\r\nvoid _print(ll t)\t {cerr << t;}\r\nvoid _print(int t)\t{cerr << t;}\r\nvoid _print(string t) {cerr << t;}\r\nvoid _print(char t)   {cerr << t;}\r\nvoid _print(double t) {cerr << t;}\r\n\r\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \", \"; _print(p.ss); cerr << \"}\";}\r\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \", \";} cerr << \"]\";}\r\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \", \";} cerr << \"]\";}\r\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \", \";} cerr << \"]\";}\r\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \", \";} cerr << \"]\";}\r\ntemplate <class T> ostream& operator<<(ostream &os, vector<T> a) { for(auto x:a){ os<<x<<\" \"; } return os; }\r\ntemplate <class T> ostream& operator<<(ostream &os, set<T> a) { for(auto x:a){ os<<x<<\" \"; } return os; }\r\ntemplate <class T> ostream& operator<<(ostream &os, multiset<T> a) { for(auto x:a){ os<<x<<\" \"; } return os; }\r\ntemplate <class T,class Q> ostream& operator<<(ostream &os, pair<T,Q> a) { os<<\"| \"; os<<a.ff<<\", \"<<a.ss<<\" \"; return os<<\"|\"; }\r\ntemplate<class P,class Q, class T> ostream& operator<<(ostream &os, tuple<P,Q,T> a){ os<<\"| \"<<(get<0>(a))<<\", \"<<(get<1>(a))<<\", \"<<(get<2>(a))<<\"|\"; return os; }\r\n\r\n#include <ext/pb_ds/assoc_container.hpp> // Common file\r\n#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update\r\n#include <ext/pb_ds/detail/standard_policies.hpp>\r\n\r\nusing namespace __gnu_pbds;\r\ntypedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;\r\n//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nvoid precomp() \r\n{\r\n    \r\n}\r\n\r\nvoid solve() \r\n{\r\n    ll n;\r\n    cin>>n;\r\n\r\n    vll dist(n,0);\r\n    cout<<\"? 1\"<<endl;\r\n\r\n    vll even, odd;\r\n    spll graph;\r\n\r\n    for(ll i=0;i<n;i++)\r\n    {\r\n        cin>>dist[i];\r\n        if(dist[i]%2) odd.pub(i);\r\n        else if(i) even.pub(i);\r\n\r\n        if(dist[i]==1)\r\n        {\r\n            graph.insert({1,i+1});\r\n        }\r\n    }\r\n\r\n    if(sz(even)>sz(odd)) swap(even,odd);\r\n\r\n    for(auto v:even)\r\n    {\r\n        cout<<\"? \"<<v+1<<endl;\r\n        for(ll i=0;i<n;i++)\r\n        {\r\n            cin>>dist[i];\r\n\r\n            if(dist[i]==1)\r\n            {\r\n                graph.insert({min(v+1,i+1),max(v+1,i+1)});\r\n            }\r\n        }\r\n    }\r\n\r\n    cout<<\"!\"<<endl;\r\n    for(auto p:graph)\r\n    {\r\n        cout<<p.ff<<\" \"<<p.ss<<endl;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n\r\n    #ifndef ONLINE_JUDGE\r\n        freopen(\"Error.txt\", \"w\", stderr);\r\n    #endif\r\n\r\n    ll t=1;\r\n    // cin>>t;\r\n\r\n    auto start1 = high_resolution_clock::now();\r\n\r\n    precomp();\r\n    while(t--)\r\n    {\r\n        solve();\r\n    }\r\n\r\n    auto stop1 = high_resolution_clock::now();\r\n    auto duration = duration_cast<milliseconds>(stop1 - start1);\r\n\r\n    #ifndef ONLINE_JUDGE\r\n        cerr << \"Time: \" << duration . count() << endl;\r\n    #endif\r\n}\r\n"
}