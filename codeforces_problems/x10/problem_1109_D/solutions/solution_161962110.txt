{
    "id": 161962110,
    "contestId": 1109,
    "creationTimeSeconds": 1656341582,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1109,
        "index": "D",
        "name": "Sasha and Interesting Fact from Graph Theory",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2400,
        "tags": [
            "brute force",
            "combinatorics",
            "dp",
            "math",
            "trees"
        ]
    },
    "author": {
        "contestId": 1109,
        "members": [
            {
                "handle": "S2speed"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1550334900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 17305600,
    "source": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#pragma GCC optimize (\"Ofast\")\r\n\r\n#define all(x) x.begin() , x.end()\r\n#define sze(x) (ll)(x.size())\r\n#define mp(x , y) make_pair(x , y)\r\n#define wall cerr<<\"--------------------------------------\"<<endl\r\ntypedef long long int ll;\r\ntypedef pair<ll , ll> pll;\r\ntypedef pair<int , int> pii;\r\ntypedef long double db;\r\ntypedef pair<pll , ll> plll;\r\ntypedef pair<int , pii> piii;\r\ntypedef pair<pll , pll> pllll;\r\n\r\nconst ll maxn = 1e6 + 17 , md = 1e9 + 7 , inf = 2e16;\r\n\r\ninline ll tav(ll n , ll k){\r\n\tll res = 1;\r\n\twhile(k > 0){\r\n\t\tif(k & 1){\r\n\t\t\tres *= n; res %= md;\r\n\t\t}\r\n\t\tn *= n; n %= md;\r\n\t\tk >>= 1;\r\n\t}\r\n\treturn res;\r\n}\r\n\r\nll fact[maxn] , _fact[maxn];\r\n\r\nvoid fact_build(){\r\n\tfact[0] = 1;\r\n\tfor(ll i = 1 ; i < maxn ; i++){\r\n\t\tfact[i] = fact[i - 1] * i % md;\r\n\t}\r\n\t_fact[maxn - 1] = tav(fact[maxn - 1] , md - 2);\r\n\tfor(ll i = maxn - 2 ; ~i ; i--){\r\n\t\t_fact[i] = _fact[i + 1] * (i + 1) % md;\r\n\t}\r\n\treturn;\r\n}\r\n\r\nll chs(ll n , ll k){\r\n\tif(k < 0 || k > n) return 0;\r\n\treturn fact[n] * _fact[k] % md * _fact[n - k] % md;\r\n}\r\n\r\nint main(){\r\n\tios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n\r\n\tfact_build();\r\n\tll n , m , completelyusefullinput1 , completelyusefullinput2;\r\n\tcin>>n>>m>>completelyusefullinput1>>completelyusefullinput2;\r\n\tll z = tav(n , n - 2) , dv = tav(n , md - 2) , ans = 0;\r\n\tfor(ll i = 0 ; i < n - 1 ; i++){\r\n\t\tz *= dv; z %= md;\r\n\t\tll h = chs(m - 1 , i) * z % md * (2 + i) % md * tav(m , n - 2 - i);\r\n\t\tans += h;\r\n\t\tz *= n - 2 - i; z %= md;\r\n\t}\r\n\tans %= md;\r\n\tcout<<ans<<'\\n';\r\n\treturn 0;\r\n}"
}