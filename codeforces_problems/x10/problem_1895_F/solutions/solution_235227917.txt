{
    "id": 235227917,
    "contestId": 1895,
    "creationTimeSeconds": 1701437886,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "F",
        "name": "Fancy Arrays",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "math",
            "matrices"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "yyyyyd"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 655,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\r\n#define x first\r\n#define y second\r\nusing namespace std;\r\ntypedef pair<int,int> pii;\r\ntypedef long long ll;\r\ntypedef double db;\r\nusing ull = unsigned long long;\r\nconst int N=42,mod=1e9+7;\r\n// struct Matrix{\r\n//     ll mat[N][N];\r\n//     int n,m;\r\n//     Matrix(int n,int m):n(n),m(m){\r\n//         memset(mat,0,sizeof mat);\r\n//     }\r\n//     ll* operator[](const int idx){return mat[idx];}\r\n//     static Matrix eye(int n){\r\n//         Matrix ret(n,n);\r\n//         for(int i=0;i<n;i++) ret[i][i]=1;\r\n//     }\r\n//     Matrix operator*(Matrix b){\r\n//         Matrix c(n,b.m);\r\n//         for(int i=0;i<n;i++)\r\n//          for(int j=0;j<b.m;j++)\r\n//           for(int k=0;k<m;k++)\r\n//              c[i][j]=(c[i][j]+mat[i][k]*b[k][j]%mod)%mod;\r\n//          return c;         \r\n//     }\r\n// };\r\n// Matrix Power(Matrix a,int b){\r\n//      Matrix c=Matrix::eye(a.n);\r\n//      while(b){\r\n//          if(b&1) c=c*a;\r\n//          a=a*a;\r\n//          b>>=1;\r\n//      }\r\n//      return c;\r\n// }\r\nconst int maxn=50;\r\nstruct Matrix{\r\n   long long mat[maxn][maxn];\r\n   int n,m;\r\n   Matrix(int N,int M):n(N),m(M){\r\n     memset(mat,0,sizeof mat);//\u521d\u59cb\u5316\u4e3a\u8d1f\u65e0\u7a77\r\n   }\r\n   long long* operator [] ( const int indx ) { return mat[indx]; }\r\n   Matrix operator*(Matrix b){\r\n      Matrix c=Matrix(n,b.m);\r\n      for(int i=0;i<n;i++)\r\n       for(int j=0;j<b.m;j++)\r\n        for(int k=0;k<m;k++)\r\n          c[i][j]=(c[i][j]+mat[i][k]*b[k][j]%mod)%mod;//\u6240\u5b9a\u4e49\u7684\u77e9\u9635\u8fd0\u7b97\r\n       return c;    \r\n   }\r\n   static Matrix eye(int n) { Matrix ret = Matrix(n,n);for( int i = 0 ;i < n ;i ++) ret[i][i] = 1;return ret;}\r\n};\r\nMatrix Power(Matrix base,ll n){\r\n    Matrix res=Matrix::eye(base.n);//\u5355\u4f4d\u9635\r\n    while(n){\r\n         if(n&1) res=res*base;\r\n         base=base*base;\r\n         n>>=1;\r\n    }\r\n    return res;\r\n}\r\nll Power(ll a,ll b){\r\n     ll res=1;\r\n     while(b){\r\n         if(b&1) res=res*a%mod;\r\n         a=a*a%mod;\r\n         b>>=1;\r\n     }\r\n     return res;\r\n}\r\nvoid solve(){\r\n     int n,x,k;\r\n     cin>>n>>x>>k;\r\n     ll ans=1ll*(x+k)*Power(2*k+1,n-1)%mod;\r\n     Matrix f(1,x),g(x,x);\r\n     \r\n     for(int i=0;i<x;i++){\r\n        f[0][i]=1;\r\n        for(int j=max(i-k,0);j<=min(i+k,x-1);j++)\r\n          g[i][j]=1;  \r\n     }\r\n     auto b=Power(g,n-1);\r\n     f=f*b;\r\n     for(int i=0;i<x;i++){\r\n         ans=(ans+mod-f[0][i])%mod;\r\n     }\r\n     cout<<ans<<\"\\n\";\r\n}\r\nint main(){\r\n     ios::sync_with_stdio(false);\r\n     cin.tie(0),cout.tie(0);\r\n      int T=1;\r\n      cin>>T;    \r\n      while(T--) solve();  \r\n      return 0; \r\n}"
}