{
    "id": 236132493,
    "contestId": 1895,
    "creationTimeSeconds": 1701915677,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1895,
        "index": "F",
        "name": "Fancy Arrays",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "math",
            "matrices"
        ]
    },
    "author": {
        "contestId": 1895,
        "members": [
            {
                "handle": "tengrist"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1699022100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 561,
    "memoryConsumedBytes": 0,
    "source": "// LUOGU_RID: 138515680\n#include <bits/stdc++.h>\n#define ALL(v) begin(v), end(v)\n\nusing i64 = int64_t;\n\nconst int kMod = 1E9 + 7;\n\nauto Power(int a, int b, int p = kMod) {\n  int r = 1;\n  for (; b; b >>= 1, a = i64{a} * a % p) {\n    if (b & 1) r = i64{r} * a % p;\n  }\n  return r;\n}\n\nint n, x, k;\n\nstruct Matrix {\n  std::array<std::array<int, 41>, 41> mat;\n  auto operator*(Matrix o) {\n    Matrix r;\n    for (auto &elem : r.mat) elem.fill(0);\n    for (int i = 0; i <= x; ++i) {\n      for (int j = 0; j <= x; ++j) {\n        for (int k = 0; k <= x; ++k) {\n          (r.mat[i][j] += i64{mat[i][k]} * o.mat[k][j] % kMod) %= kMod;\n        }\n      }\n    }\n    return r;\n  }\n};\n\nvoid Proc() {\n  std::cin >> n >> x >> k;\n  int all = i64{x + k} * Power((2 * k + 1) % kMod, n - 1) % kMod;\n  --x;\n  Matrix base;\n  for (auto &elem : base.mat) elem.fill(0);\n  for (int i = 0; i <= x; ++i) {\n    for (int j = 0; j <= x; ++j) {\n      base.mat[i][j] = (std::abs(i - j) <= k);\n    }\n  }\n  Matrix mul;\n  for (auto &elem : mul.mat) elem.fill(0);\n  for (int i = 0; i <= x; ++i) mul.mat[i][i] = 1;\n\n  --n;\n  for (; n; n >>= 1, base = base * base) {\n    if (n & 1) mul = mul * base;\n  }\n  for (int i = 0; i <= x; ++i) {\n    for (int j = 0; j <= x; ++j) (all += kMod - mul.mat[i][j]) %= kMod;\n  }\n  std::cout << all << '\\n';\n}\n\nauto main() -> int {\n  std::ios::sync_with_stdio(false);\n  std::cin.tie(nullptr), std::cout.tie(nullptr);\n  int t;\n  for (std::cin >> t; t; --t) Proc();\n  return 0;\n}"
}