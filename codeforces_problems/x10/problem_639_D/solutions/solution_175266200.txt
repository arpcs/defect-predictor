{
    "id": 175266200,
    "contestId": 639,
    "creationTimeSeconds": 1665333200,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 639,
        "index": "D",
        "name": "Bear and Contribution",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2400,
        "tags": [
            "data structures",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 639,
        "members": [
            {
                "handle": "Fly_37"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1459182900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 44,
    "timeConsumedMillis": 358,
    "memoryConsumedBytes": 16486400,
    "source": "#pragma GCC optimize \"O3\"\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define f first\r\n#define s second\r\n#define pb push_back\r\n#define sz(s) (int)s.size()\r\n#define all(s) s.begin(), s.end()\r\n#define FOR(i, n) for(int i = 0; i < n; i++)\r\n\r\n#define ll long long\r\n#define vi vector<int>\r\n#define vvi vector<vi>\r\n#define vll vector<ll>\r\n#define pll pair<ll, ll>\r\n\r\nll n, k, a, b;\r\n\r\nll cost(pll para) {\r\n    auto & [kara, wys] = para;\r\n    return kara - wys / 5 * a;\r\n}\r\n\r\nstruct Cmp{\r\n    bool operator() (const pll & x, const pll & y) const {\r\n        return cost(x) < cost(y);\r\n    }\r\n};\r\n\r\nbool porownaj (pll x, pll y) {\r\n    return cost(x) < cost(y);\r\n}\r\n\r\nvoid solve(){\r\n    cin >> n >> k >> a >> b;\r\n    a = min(a, b * 5);\r\n    vi tab(n);\r\n    for(auto & u : tab)\r\n        cin >> u;\r\n\r\n    sort(all(tab));\r\n    \r\n    ll ans = 1e18;\r\n    for(int rownam = 0; rownam < 5; rownam++){\r\n        vi pom = tab;\r\n        vll kara(n);\r\n        FOR(i, n)\r\n            while(((pom[i] % 5 + 5) % 5) != rownam){\r\n                pom[i]++;\r\n                kara[i] += b;\r\n            }\r\n        \r\n        multiset<pll, Cmp> secik;\r\n        ll suma_kar = 0;\r\n        ll suma_wysokosci = 0;\r\n\r\n        for(int i = 0; i < n; i++){\r\n            if(sz(secik) == k){\r\n                auto it = prev(secik.end());\r\n                if(porownaj(make_pair(kara[i], pom[i]), *it)){\r\n                    suma_kar -= it -> f;\r\n                    suma_wysokosci -= it -> s;\r\n                    secik.erase(it);\r\n                }\r\n            }\r\n            if(sz(secik) < k){\r\n                suma_kar += kara[i];\r\n                suma_wysokosci += pom[i];\r\n\r\n                secik.insert({kara[i], 1ll * pom[i]});\r\n            }\r\n\r\n            if(sz(secik) == k)\r\n                ans = min(ans, (1ll * pom[i] * k - suma_wysokosci) / 5 * a + suma_kar);\r\n        }\r\n    }\r\n    cout << ans << '\\n';\r\n}\r\n\r\nsigned main(){\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n\r\n    int t = 1;\r\n    // cin >> t;\r\n\r\n    while(t--)\r\n        solve();\r\n}"
}