{
    "id": 228137610,
    "contestId": 639,
    "creationTimeSeconds": 1697272432,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 639,
        "index": "D",
        "name": "Bear and Contribution",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2400,
        "tags": [
            "data structures",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 639,
        "members": [
            {
                "handle": "propane"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1459182900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 111,
    "timeConsumedMillis": 264,
    "memoryConsumedBytes": 14745600,
    "source": "#include<iostream>\r\n#include<cstring>\r\n#include<vector>\r\n#include<set>\r\nusing namespace std;\r\nusing LL = long long;\r\n\r\nint main(){\r\n\r\n#ifdef LOCAL\r\n    freopen(\"data.in\", \"r\", stdin);\r\n    freopen(\"data.out\", \"w\", stdout);\r\n#endif\r\n\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    ios::sync_with_stdio(0);\r\n\r\n    int n, k, b, c;\r\n    cin >> n >> k >> b >> c;\r\n    b = min(b, 5 * c);\r\n    const int delta = 1e9 + 20;\r\n    vector<int> a(n);\r\n    for(int i = 0; i < n; i++)\r\n        cin >> a[i], a[i] += delta;\r\n    sort(a.begin(), a.end());\r\n    vector<int> cand[5];\r\n    for(int i = 0; i < 5; i++){\r\n        cand[i].reserve(n);\r\n    }\r\n\r\n    for(int i = 0; i < n; i++){\r\n        for(int j = 0; j < 5; j++){\r\n            cand[(a[i] + j) % 5].push_back(a[i] + j);\r\n        }\r\n    }\r\n    LL ans = 1e18;\r\n    for(int i = 0; i < 5; i++){\r\n        sort(cand[i].begin(), cand[i].end());\r\n        cand[i].erase(unique(cand[i].begin(), cand[i].end()), cand[i].end());\r\n        multiset<LL> s;\r\n        LL delta = 0;\r\n        int pos = -1;\r\n        LL sum = 0;\r\n        int last = cand[i][0];\r\n        for(auto x : cand[i]){\r\n            delta += 1LL * (x - last) / 5 * b;\r\n            sum += 1LL * (x - last) / 5 * b * (LL)s.size();\r\n            while(pos + 1 < n && a[pos + 1] <= x){\r\n                ++pos;\r\n                int t = ((i - a[pos]) % 5 + 5) % 5;\r\n                LL cost = 1LL * t * c;\r\n                cost += 1LL * (x - (a[pos] + t)) / 5 * b;\r\n                if (s.size() < k){\r\n                    sum += cost;\r\n                    s.insert(cost - delta);\r\n                }\r\n                else{\r\n                    if (*prev(s.end()) + delta > cost){\r\n                        sum -= *prev(s.end()) + delta;\r\n                        sum += cost;\r\n                        s.erase(prev(s.end()));\r\n                        s.insert(cost - delta);\r\n                    }\r\n                }\r\n            }\r\n            if (s.size() == k){\r\n                ans = min(ans, sum);\r\n            }\r\n            last = x;\r\n        }\r\n    }\r\n    cout << ans << '\\n';\r\n\r\n}"
}