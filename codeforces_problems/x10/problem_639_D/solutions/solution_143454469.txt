{
    "id": 143454469,
    "contestId": 639,
    "creationTimeSeconds": 1642703267,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 639,
        "index": "D",
        "name": "Bear and Contribution",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2400,
        "tags": [
            "data structures",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 639,
        "members": [
            {
                "handle": "fvogel"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1459182900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 111,
    "timeConsumedMillis": 139,
    "memoryConsumedBytes": 23449600,
    "source": "/*\r\n * File created on 01/20/2022 at 18:54:02.\r\n * Link to problem: \r\n * Description: \r\n * Time complexity: O()\r\n * Space complexity: O()\r\n * Status: ---\r\n * Copyright: \u24b8 2022 Francois Vogel\r\n*/\r\n\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <functional>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\n#define pii pair<int, int>\r\n#define f first\r\n#define s second\r\n\r\n#define vi vector<int>\r\n#define all(x) x.begin(), x.end()\r\n#define size(x) (int)((x).size())\r\n#define pb push_back\r\n#define ins insert\r\n#define cls clear\r\n\r\n#define int ll\r\n#define ll long long\r\n#define ld long double\r\n\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\r\n\r\n#define estimate(x) ((((x)/5LL)*five)+(((x)%5)*one))\r\n\r\nsigned main() {\r\n    cin.tie(0);\r\n    ios_base::sync_with_stdio(0);\r\n\r\n    int n, kConst, one, five;\r\n    cin >> n >> kConst >> five >> one;\r\n    five = min(five, one*5);\r\n    int b [n];\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> b[i];\r\n        b[i] += (ll)(1e9);\r\n    }\r\n    sort(b, b+n);\r\n    vi queryOn;\r\n    for (int i = 0; i < n; i++) {\r\n        queryOn.pb(b[i]);\r\n        queryOn.pb(b[i]+1);\r\n        queryOn.pb(b[i]+2);\r\n        queryOn.pb(b[i]+3);\r\n        queryOn.pb(b[i]+4);\r\n    }\r\n    vi check [5];\r\n    for (int i : queryOn) {\r\n        check[i%5].pb(i);\r\n    }\r\n    int res = -1;\r\n    for (int i = 0; i < 5; i++) {\r\n        sort(all(check[i]));\r\n        deque<int> per [5];\r\n        int k = 0;\r\n        int cons = 0;\r\n        int sum = 0;\r\n        for (int j = 0; j < size(check[i]); j++) {\r\n            if (j) {\r\n                sum += cons*five*((check[i][j]-check[i][j-1])/5LL);\r\n            }\r\n            while (k < n && b[k] <= check[i][j]) {\r\n                per[b[k]%5].pb(b[k]);\r\n                sum += estimate(check[i][j]-b[k]);\r\n                cons++;\r\n                k++;\r\n            }\r\n            while (cons > kConst) {\r\n                int rem = -1;\r\n                int econ = -1;\r\n                for (int x = 0; x < 5; x++) if (!per[x].empty()) {\r\n                    int loc = estimate(check[i][j]-per[x].front());\r\n                    if (loc > econ) {\r\n                        econ = loc;\r\n                        rem = x;\r\n                    }\r\n                }\r\n                assert(rem != -1);\r\n                per[rem].pop_front();\r\n                sum -= econ;\r\n                cons--;\r\n            }\r\n            assert(cons <= kConst);\r\n            if (cons == kConst) {\r\n                if (res == -1 || res > sum) {\r\n                    res = sum;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    cout << res;\r\n\r\n    cout.flush();\r\n    int d = 0;\r\n    d++;\r\n}"
}