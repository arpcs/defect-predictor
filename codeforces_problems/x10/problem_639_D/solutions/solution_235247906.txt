{
    "id": 235247906,
    "contestId": 639,
    "creationTimeSeconds": 1701445717,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 639,
        "index": "D",
        "name": "Bear and Contribution",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2400,
        "tags": [
            "data structures",
            "greedy",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 639,
        "members": [
            {
                "handle": "Eon_Starlight"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1459182900
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 111,
    "timeConsumedMillis": 296,
    "memoryConsumedBytes": 8396800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long LL;\r\ntypedef unsigned UN;\r\ntypedef double DB;\r\n//--------------------//\r\nconst int N = 2e5 + 5;\r\n\r\nint n, k, b, c, v[N];\r\n\r\nLL get(int x, int y) { // from x to y\r\n    return 1LL * (y - x) / 5 * b + 1LL * (y - x) % 5 * c;\r\n}\r\n\r\nint qh[5], qt[5];\r\nvector<int> a[5], q[5];\r\n\r\nLL ans = LONG_LONG_MAX;\r\n\r\nvoid calc(int now) {\r\n    for (int i = 0; i < 5; i++)\r\n        qh[i] = 0, qt[i] = -1;\r\n    int cnt = 0, las = 0; LL sum = 0;\r\n    for (auto x : q[now]) {\r\n        sum += 1LL * cnt * ((x - las) / 5) * b;\r\n        for (int i = 0; i < 5; i++) {\r\n            while (qt[i] + 1 < a[i].size() && a[i][qt[i] + 1] <= x) {\r\n                if (cnt == k) {\r\n                    LL mx = 0;\r\n                    for (int j = 0; j < 5; j++)\r\n                        if (qh[j] <= qt[j])\r\n                            mx = max(mx, get(a[j][qh[j]], x));\r\n                    if (mx > get(a[i][qt[i] + 1], x))\r\n                        for (int j = 0; j < 5; j++)\r\n                            if (qh[j] <= qt[j] && mx == get(a[j][qh[j]], x)) {\r\n                                // printf(\"del %lld\\n\", mx);\r\n                                cnt--, sum -= mx, qh[j]++;\r\n                                break;\r\n                            }\r\n                }\r\n                if (cnt == k)\r\n                    break;\r\n                // printf(\"ins %lld\\n\", get(a[i][qt[i] + 1], x));\r\n                cnt++, sum += get(a[i][qt[i] + 1], x), qt[i]++;\r\n            }\r\n        }\r\n        if (cnt == k)\r\n            ans = min(ans, sum);\r\n        las = x;\r\n    }\r\n}\r\n//--------------------//\r\nint main() {\r\n    scanf(\"%d%d%d%d\", &n, &k, &b, &c);\r\n    b = min(1LL * b, 5LL * c);\r\n    for (int i = 1; i <= n; i++)\r\n        scanf(\"%d\", &v[i]);\r\n    sort(v + 1, v + n + 1);\r\n    for (int tem = v[1], i = 1; i <= n; i++)\r\n        v[i] -= tem;\r\n    for (int i = 1; i <= n; i++) {\r\n        a[v[i] % 5].push_back(v[i]);\r\n        for (int j = 0; j < 5; j++)\r\n            if (i == n | v[i] + j < v[i + 1])\r\n                q[(v[i] + j) % 5].push_back(v[i] + j);\r\n    }\r\n    for (int i = 0; i < 5; i++)\r\n        calc(i);\r\n    printf(\"%lld\", ans);\r\n    return 0;\r\n}"
}