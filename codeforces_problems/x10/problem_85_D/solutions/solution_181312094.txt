{
    "id": 181312094,
    "contestId": 85,
    "creationTimeSeconds": 1668690027,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 85,
        "index": "D",
        "name": "Sum of Medians",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "implementation"
        ]
    },
    "author": {
        "contestId": 85,
        "members": [
            {
                "handle": "tidongCrazy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1305903600
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 11980800,
    "source": "// LUOGU_RID: 94384528\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define pb push_back\r\n\r\ninline int read() {\r\n\t\r\n\tint w = 1, s = 0; char c;\r\n\twhile(!isdigit(c = getchar())) if(c == '-') w = -1;\r\n\twhile(isdigit(c)) s = (s << 1) + (s << 3) + (c & 15), c = getchar();\r\n\treturn s * w;\r\n}\r\n\r\nvoid write(int x) {\r\n\t\r\n\tif(x < 0) x = -x, putchar('-');\r\n\tif(x > 9) write(x / 10);\r\n\tputchar(x % 10 + 48);\r\n}\r\n\r\ninline void writeln(int x) { write(x); putchar('\\n'); }\r\ninline void writel(int x) { write(x); putchar(' '); }\r\n\r\ninline int chkmax(int x, int y) { return x > y ? x : y; }\r\ninline int chkmin(int x, int y) { return x < y ? x : y; }\r\ninline void Swap(int &x, int &y) { x ^= y ^= x ^= y; }\r\n\r\nconst int N = 3e5 + 10;\r\n\r\nint n, lsh[N], tot;\r\nmap<int, int> qwq;\r\n\r\n#define ls (x << 1)\r\n#define rs (x << 1 | 1)\r\n#define mid ((l + r) >> 1)\r\n\r\nstruct qry { char str[5]; int x; } q[N];\r\n\r\nstruct Node { int cnt, sum[5]; } tr[N];\r\n\r\ninline void pushup(int x) {\r\n\t\r\n\ttr[x].cnt = tr[ls].cnt + tr[rs].cnt;\r\n\tfor(int j = 0; j < 5; j ++ ) tr[x].sum[j] = tr[ls].sum[j] + tr[rs].sum[((j - tr[ls].cnt) % 5 + 5) % 5];\r\n\treturn ;\r\n}\r\n\r\nvoid add(int x, int pos, int l, int r, int c) {\r\n\t\r\n\tif(l == r) {\r\n\t\ttr[x].cnt ++ ;\r\n\t\ttr[x].sum[1] += c;\r\n\t\treturn ;\r\n\t} if(pos <= mid) add(ls, pos, l, mid, c);\r\n\telse add(rs, pos, mid + 1, r, c);\r\n\tpushup(x); return ;\r\n}\r\n\r\nvoid del(int x, int pos, int l, int r, int c) {\r\n\t\r\n\tif(l == r) {\r\n\t\ttr[x].cnt -- ;\r\n\t\ttr[x].sum[1] -= c;\r\n\t\treturn ;\r\n\t} if(pos <= mid) del(ls, pos, l, mid, c);\r\n\telse del(rs, pos, mid + 1, r, c);\r\n\tpushup(x); return ;\r\n}\r\n\r\ninline void work() {\r\n\t\r\n\tn = read();\r\n\tfor(int i = 1; i <= n; i ++ ) {\r\n\t\tscanf(\"%s\", q[i].str + 1);\r\n\t\tif(q[i].str[1] == 's') { q[i].x = -1; continue; }\r\n\t\tscanf(\"%d\", &q[i].x);\r\n\t\tlsh[++ tot] = q[i].x;\r\n\t} sort(lsh + 1, lsh + tot + 1);\r\n\tint m = unique(lsh + 1, lsh + tot + 1) - lsh - 1;\r\n\tfor(int i = 1; i <= n; i ++ ) {\r\n\t\tif(q[i].str[1] == 's') writeln(tr[1].sum[3]);\r\n\t\tif(q[i].str[1] == 'a') {\r\n\t\t\tint num = lower_bound(lsh + 1, lsh + m + 1, q[i].x) - lsh;\r\n\t\t\tadd(1, num, 1, m, q[i].x);\r\n\t\t} if(q[i].str[1] == 'd') {\r\n\t\t\tint num = lower_bound(lsh + 1, lsh + m + 1, q[i].x) - lsh;\r\n\t\t\tdel(1, num, 1, m, q[i].x);\r\n\t\t}\r\n\t} return ;\r\n}\r\n\r\nsigned main() {\r\n\t\r\n\tint T = 1;\r\n\twhile(T -- ) work();\r\n\treturn 0;\r\n}"
}