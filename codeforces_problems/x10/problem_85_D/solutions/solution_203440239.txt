{
    "id": 203440239,
    "contestId": 85,
    "creationTimeSeconds": 1682428945,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 85,
        "index": "D",
        "name": "Sum of Medians",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "implementation"
        ]
    },
    "author": {
        "contestId": 85,
        "members": [
            {
                "handle": "Wsjf"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1305903600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 40038400,
    "source": "// LUOGU_RID: 108924122\n#include<bits/stdc++.h>\n#define pub push_back\n#define pob pop_back\n#define mod 1000000007\n#define int long long\nusing namespace std;\nstruct node{\n  int l,r;\n  int sum[6],cnt;\n}t[500005];\nvector<int> alls;\nint n;\nint s[100005];\nstring opt[100005];\nint find(int x)\n{\n  int l=0,r=alls.size()-1;\n  while(l<r)\n    {\n      int mid=l+r>>1;\n      if(alls[mid]>=x)r=mid;\n      else l=mid+1;\n    }\n  return l+1;\n}\nvoid push_up(int id)\n{\n  t[id].cnt=t[id<<1].cnt+t[id<<1|1].cnt;\n  for(int i=0;i<5;i++)\n    t[id].sum[i]=t[id<<1].sum[i];\n  for(int i=0;i<5;i++)\n    t[id].sum[i]+=t[id<<1|1].sum[((i-t[id<<1|1].cnt)%5+5)%5];\n  return ;\n}\nvoid add(int x,int y,int id)\n{\n  if(t[id].l==t[id].r)\n    {\n      t[id].cnt+=y;\n      t[id].sum[1]+=alls[x-1]*y;\n      return;\n    }\n  int mid=t[id].l+t[id].r>>1;\n  if(x<=mid) add(x,y,id<<1);\n  else add(x,y,id<<1|1);\n  push_up(id);\n  return ;\n}\nvoid build(int x,int l,int r)\n{\n  if(l==r)return ;\n  int mid=l+r>>1;\n  build(x<<1,l,mid);\n  build(x<<1|1,mid+1,r);\n  push_up(x);\n  return ;\n}\nsigned main()\n{\n  ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n  cin>>n;\n  for(int i=1;i<=n;i++)\n    {\n      cin>>opt[i];\n      if(opt[i]!=\"sum\")  cin>>s[i],alls.pub(s[i]);\n    }\n  sort(alls.begin(),alls.end());\n  alls.erase(unique(alls.begin(),alls.end()),alls.end());\n  build(1,1,alls.size());\n  for(int i=1;i<=n;i++)\n    {\n      int x;\n      if(opt[i]!=\"sum\") x=find(s[i]);\n      if(opt[i]==\"add\") add(x,1,1);\n      else if(opt[i]==\"del\") add(x,-1,1);\n      else cout<<t[1].sum[3]<<endl;\n    }\n  return 0;\n}\n"
}