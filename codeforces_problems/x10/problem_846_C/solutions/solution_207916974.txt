{
    "id": 207916974,
    "contestId": 846,
    "creationTimeSeconds": 1685502091,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 846,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "brute force",
            "data structures",
            "dp"
        ]
    },
    "author": {
        "contestId": 846,
        "members": [
            {
                "handle": "wdjuruo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504623900
    },
    "programmingLanguage": "Java 17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 614400,
    "source": "//package EveryDayProblem_0x3f;\r\n\r\nimport java.io.*;\r\nimport java.util.Scanner;\r\nimport java.util.StringTokenizer;\r\n\r\npublic class CF_846_C {\r\n\r\n    private static class Kattio extends PrintWriter {\r\n        private BufferedReader r;\r\n        private StringTokenizer st;\r\n        // \u6807\u51c6 IO\r\n        public Kattio() { this(System.in, System.out); }\r\n        public Kattio(InputStream i, OutputStream o) {\r\n            super(o);\r\n            r = new BufferedReader(new InputStreamReader(i));\r\n        }\r\n        // \u6587\u4ef6 IO\r\n        public Kattio(String intput, String output) throws IOException {\r\n            super(output);\r\n            r = new BufferedReader(new FileReader(intput));\r\n        }\r\n        // \u5728\u6ca1\u6709\u5176\u4ed6\u8f93\u5165\u65f6\u8fd4\u56de null\r\n        public String next() {\r\n            try {\r\n                while (st == null || !st.hasMoreTokens())\r\n                    st = new StringTokenizer(r.readLine());\r\n                return st.nextToken();\r\n            } catch (Exception e) {}\r\n            return null;\r\n        }\r\n        public int nextInt() { return Integer.parseInt(next()); }\r\n        public double nextDouble() { return Double.parseDouble(next()); }\r\n        public long nextLong() { return Long.parseLong(next()); }\r\n    }\r\n\r\n\r\n    private static Kattio scanner = new Kattio();\r\n\r\n    public static void main(String[] args) {\r\n        int n = scanner.nextInt();\r\n        int[] a = new int[n];\r\n        long[] prev = new long[n + 1];\r\n        for (int i = 0; i < n; i++) {\r\n            a[i] = scanner.nextInt();\r\n            prev[i + 1] = prev[i] + a[i];\r\n        }\r\n        long res = 0;\r\n        //s(0,i) - s(i,j) + s(j,k) - s(k,n)\r\n        //prev[i - 1] - (prev[j - 1] - prev[i - 1]) + prev[k - 1] - prev[j - 1] - (prev[n] - prev[k - 1]);\r\n        //2 * prev[i - 1] - 2 * prev[j - 1] + 2 * prev[k - 1] - prev[n];\r\n        int ri = 0, rj = 0, rk = 0;\r\n        int[] right = new int[n + 1];\r\n        right[n] = n;\r\n        for (int i = n - 1; i >= 0; i--) {\r\n            right[i] = i;\r\n            //System.out.println(right[i + 1]);\r\n            if (prev[right[i]] < prev[right[i + 1]]) {\r\n                right[i] = right[i + 1];\r\n            }\r\n        }\r\n        int lIdx = 0;\r\n        for (int j = 0; j <= n; j++) {\r\n            //\u5de6\u8fb9\u627ei\u7684\u6700\u5927\u503c, \u53f3\u8fb9\u627ek\u7684\u6700\u5927\u503c\r\n            if (prev[j] > prev[lIdx]) {\r\n                lIdx = j;\r\n            }\r\n            int rIdx = right[j];\r\n            long s = 2 * 1l * prev[lIdx] - 2 * 1l * prev[j] + 2 * 1l * prev[rIdx] - prev[n];\r\n            if (s > res) {\r\n                res = s;\r\n                ri = lIdx;\r\n                rj = j;\r\n                rk = rIdx;\r\n            }\r\n        }\r\n        scanner.println(ri + \" \" + rj + \" \" + rk);\r\n        scanner.close();\r\n    }\r\n\r\n}\r\n"
}