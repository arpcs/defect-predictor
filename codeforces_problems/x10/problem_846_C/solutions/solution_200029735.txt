{
    "id": 200029735,
    "contestId": 846,
    "creationTimeSeconds": 1680285174,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 846,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "brute force",
            "data structures",
            "dp"
        ]
    },
    "author": {
        "contestId": 846,
        "members": [
            {
                "handle": "_SIR_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504623900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\n#define ll long long\r\n#define f first\r\n#define s second\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\ntemplate <typename T>\r\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\n// order_of_key (k) : Number of items strictly smaller than k .\r\n// find_by_order(k) : K-th element in a set (counting from zero).\r\nconst ll mx = 5010;\r\nconst ll inf = 1e18;\r\nll pre[mx];\r\nll a[mx];\r\npair<ll, ll>dp1[mx];\r\npair<ll, ll>dp2[mx];\r\nll s(ll l, ll r) {\r\n    if (l > r)return 0;\r\n    return pre[r] - pre[l - 1];\r\n}\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL); cout.tie(NULL);\r\n    bool pos = true;\r\n    bool neg = true;\r\n    for (ll i = 1; i <= n; i++) {\r\n        cin >> a[i];\r\n        pos &= (a[i] >= 0);\r\n        neg &= (a[i] <= 0);\r\n    }\r\n    if (pos or neg) {\r\n        if (pos)cout << n << \" \" << n << \" \" << n << \"\\n\";\r\n        else cout << \"0 0 0\" << '\\n';\r\n        return 0;\r\n    }\r\n    pre[0] = 0;\r\n    for (ll i = 1; i <= n; i++) {\r\n        pre[i] = pre[i - 1] + a[i];\r\n    }\r\n\r\n    for (ll i = 0; i <= n; i++) {\r\n        dp1[i].f = -inf;\r\n        dp2[i].f = -inf;\r\n    }\r\n    for (ll i = 0; i <= n; i++) {\r\n        for (ll j = i; j <= n; j++) {\r\n            if (dp1[j].f < s(1, i) - s(i + 1, j)) {\r\n                dp1[j].f = s(1, i) - s(i + 1, j);\r\n                dp1[j].s = i + 1;\r\n            }\r\n            if (dp2[i].f < s(i, j) - s(j + 1, n)) {\r\n                dp2[i].f = s(i, j) - s(j + 1, n);\r\n                dp2[i].s = j + 1;\r\n            }\r\n        }\r\n    }\r\n    vector<ll>ans;\r\n    ll mx = -inf;\r\n    for (ll i = 0; i + 1 <= n + 1; i++) {\r\n        if (dp1[i].f + dp2[i + 1].f > mx) {\r\n            mx = dp2[i + 1].f + dp1[i].f;\r\n            ans = {dp1[i].s, i + 1, dp2[i + 1].s};\r\n        }\r\n    }\r\n    for (auto x : ans)cout << x - 1 << \" \";\r\n    cout << endl;\r\n    return 0;\r\n}"
}