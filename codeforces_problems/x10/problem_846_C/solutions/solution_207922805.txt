{
    "id": 207922805,
    "contestId": 846,
    "creationTimeSeconds": 1685509180,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 846,
        "index": "C",
        "name": "Four Segments",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "brute force",
            "data structures",
            "dp"
        ]
    },
    "author": {
        "contestId": 846,
        "members": [
            {
                "handle": "SamsungGreen"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504623900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 204800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define all(x) (x).begin(),(x).end()\r\nusing li = long long;\r\nusing pll = pair<li,li>;\r\nconst li INF =1e18;\r\nvoid solve(){\r\n\tint n;\r\n\tcin >> n;\r\n\tli ssum[n+1];\r\n\tint u;\r\n\tssum[0] = 0;\r\n\tfor(int i=0;i<n;i++){\r\n\t\tcin >> u;\r\n\t\tssum[i+1] = ssum[i] + u;\r\n\t}\r\n\tvector<tuple<li,int,int>> dp(n+1);\r\n\tif(ssum[1]>0) dp[0] = make_tuple(ssum[1],1,1);\r\n\telse dp[0] = make_tuple(-ssum[1],0,1);\r\n\tfor(int i=1;i<n;i++){\r\n\t\tdp[i] = make_tuple(ssum[i+1],i+1,i+1);\r\n\t\tfor(int k=-1;k<i;k++){\r\n\t\t\tif(get<0>(dp[i])<ssum[k+1]-(ssum[i+1]-ssum[k+1]) ){\r\n\t\t\t\tdp[i] = make_tuple(ssum[k+1]-(ssum[i+1]-ssum[k+1]),k+1,i+1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tvector<tuple<li,int,int>> np(n+1);\r\n\tfor(int i=n-1;i>=0;i--){\r\n\t\tnp[i] = make_tuple(ssum[n]-ssum[i],n,n);\r\n\t\tfor(int k=n-1;k>=i;k--){\r\n\t\t\tif(get<0>(np[i])<ssum[k+1]-ssum[i]-(ssum[n]-ssum[k+1])){\r\n\t\t\t\tnp[i] = make_tuple(ssum[k+1]-ssum[i]-(ssum[n]-ssum[k+1]),k+1,n);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tli mx=get<0>(dp[n-1]);\r\n\ttuple<int,int,int> res(get<1>(dp[n-1]),get<2>(dp[n-1]),n);\r\n\tfor(int i=0;i<n-1;i++){\r\n\t\tif(get<0>(dp[i])+get<0>(np[i+1])>mx){\r\n\t\t\tres=make_tuple(get<1>(dp[i]),get<2>(dp[i]),get<1>(np[i+1]));\r\n\t\t\tmx = get<0>(dp[i])+get<0>(np[i+1]);\r\n\t\t}\r\n\t}\r\n\tcout << get<0>(res) <<\" \"<< get<1>(res) << \" \"<< get<2>(res)<<endl;\r\n\t/*for(int i=0;i<n;i++){\r\n\t\tcout << get<0>(dp[i]) <<\" \";\r\n\t}\r\n\tcout << endl;\r\n\tfor(int i=0;i<n;i++){\r\n\t\tcout << get<0>(np[i]) <<\" \";\r\n\t}*/\r\n}\r\nint main(){\r\n    ios::sync_with_stdio(false); cin.tie(0);\r\n    int t;\r\n    t=1;\r\n    while(t--){\r\n       solve();\r\n    }\r\n}"
}