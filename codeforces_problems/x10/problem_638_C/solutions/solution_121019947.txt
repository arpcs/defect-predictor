{
    "id": 121019947,
    "contestId": 638,
    "creationTimeSeconds": 1625139790,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 638,
        "index": "C",
        "name": "Road Improvement",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1800,
        "tags": [
            "*special",
            "dfs and similar",
            "graphs",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 638,
        "members": [
            {
                "handle": "aldgebu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1458475200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 132,
    "timeConsumedMillis": 608,
    "memoryConsumedBytes": 43929600,
    "source": "#include <iostream>\r\n#include <algorithm>\r\n#include <stack>\r\n#include <vector>\r\n#include <set>\r\n#include <cstring>\r\n#include <queue>\r\n#include <map>\r\n#include <cmath>\r\n#define aldgebu return\r\n//#define int long long\r\n#define ff first\r\n#define sc second\r\n#define pb push_back\r\n#define pii pair <int,int>\r\n#define p push\r\n#define ll long long\r\n#define pll pair<ll, ll>\r\nusing namespace std;\r\nconst ll inf = 1e9;\r\nconst ll mod = 1e9 + 7;\r\n\r\nint N, mx;\r\nvector <int> g[200020];\r\nvector <int> ans[200020];\r\nvector <pii> a(200020);\r\nmap <pii, int> mp;\r\n\r\nvoid dfs(int v, int par, int x){\r\n\tint cur = 1;\r\n\tfor (int to : g[v]){\r\n\t\tif (to == par)continue;\r\n\t\tif (cur == x)cur++;\r\n\t\tmx = max(mx, cur);\r\n\t\tans[cur].pb(mp[{v, to}]);\r\n\t\tcur++;\r\n\t\tdfs(to, v, cur - 1);\r\n\t}\r\n}\r\n\r\nvoid Dontfuckedup(){\r\n\tcin >> N;\r\n\r\n\tfor (int i = 1; i <= N - 1; i++){\r\n\t\tcin >> a[i].ff >> a[i].sc;\r\n\t\tmp[{a[i].ff, a[i].sc}] = mp[{a[i].sc, a[i].ff}] = i;\r\n\t\tg[a[i].ff].pb(a[i].sc);\r\n\t\tg[a[i].sc].pb(a[i].ff);\r\n\t}\r\n\r\n\tfor (int i = 1; i <= N; i++){\r\n\t\tif (g[i].size() == 1){\r\n\t\t\tdfs(i, i, 0);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tcout << mx << '\\n';\r\n\tfor (int i = 1; i <= mx; i++){\r\n\t\tcout << ans[i].size() << ' ';\r\n\t\tfor (int x : ans[i])\r\n\t\t\tcout << x << ' ';\r\n\t\tcout << '\\n';\r\n\t}\r\n}\r\n\r\nint32_t main () {\r\n\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n\r\n    int T = 1; //cin>>T;\r\n    while (T--)Dontfuckedup();\r\n\r\n    return 0;\r\n}"
}