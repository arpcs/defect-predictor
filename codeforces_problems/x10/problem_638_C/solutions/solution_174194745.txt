{
    "id": 174194745,
    "contestId": 638,
    "creationTimeSeconds": 1664595286,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 638,
        "index": "C",
        "name": "Road Improvement",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1800,
        "tags": [
            "*special",
            "dfs and similar",
            "graphs",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 638,
        "members": [
            {
                "handle": "Black_Dan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1458475200
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 132,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 25395200,
    "source": "#include<vector>\r\n#include<cstdio>\r\n#define Maxn 400001\r\n#define max(a,b) a>b?a:b\r\n\r\nint n,d[Maxn]; \r\nint head[Maxn],cnt;\r\nstd::vector<int>ans[Maxn];\r\nstruct node{int v,nxt;}e[Maxn];\r\nvoid Add(int u,int v){e[++cnt]=(node){v,head[u]};head[u]=cnt;}\r\n\r\nvoid dfs(int u,int fa,int lst){\r\n\tint bel=0;\r\n\tfor(int i=head[u];i;i=e[i].nxt){\r\n\t\tint v=e[i].v;\r\n\t\tif(v==fa) continue;\r\n\t\tbel++;\r\n\t\tif(bel==lst) bel++;\r\n\t\tans[bel].push_back((i+1)>>1);\r\n\t\tdfs(v,u,bel);\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=1;i<n;i++){\r\n\t\tint u,v;\r\n\t\tscanf(\"%d%d\",&u,&v);\r\n\t\td[u]++,d[v]++;\r\n\t\tAdd(u,v),Add(v,u);\r\n\t}\r\n\tint Ans=-1;\r\n\tfor(int i=1;i<=n;i++) Ans=max(Ans,d[i]);\r\n\t::printf(\"%d\\n\",Ans);\r\n\tdfs(1,0,0);\r\n\tfor(int i=1;i<=Ans;i++){\r\n\t\t::printf(\"%d \",ans[i].size());\r\n\t\tfor(auto v:ans[i]) printf(\"%d \",v);\r\n\t\tputs(\"\");\r\n\t} \r\n\treturn 0;\r\n}"
}