{
    "id": 236330564,
    "contestId": 638,
    "creationTimeSeconds": 1702034167,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 638,
        "index": "C",
        "name": "Road Improvement",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1800,
        "tags": [
            "*special",
            "dfs and similar",
            "graphs",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 638,
        "members": [
            {
                "handle": "passion_fruit"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1458475200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 132,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 35225600,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long int\n#define sp \" \"\n#define endl '\\n'\n#define mod 1000000007\nconst ll INF = 9e18;\n#define debug(x) cout << #x << \":\" << x << endl;\n#define vi vector<ll>\n#define pi pair<ll, ll>\n#define vvi vector<vi>\n#define vb vector<bool>\n#define vp vector<pi>\n#define pb(x) push_back(x)\n#define vc vector<char>\n#define G greater<long long>\n#define PQ priority_queue<ll, vi> pq;\n\n// #include <ext/pb_ds/assoc_container.hpp>\n// #include <ext/pb_ds/tree_policy.hpp>\n// using namespace __gnu_pbds;\n// typedef tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> PBDS;\n\nvector<vp> adj(300000);\nvvi ans(300000);\nint k = 0;\nvoid dfs(int u, int pr, int c)\n{\n    int j = 0;\n    for (auto p : adj[u])\n    {\n        int v = p.first;\n        if (v != pr)\n        {\n            j++;\n            j += (j == c);\n            ans[j].push_back(p.second);\n            k = max(k, j);\n            dfs(v, u, j);\n        }\n    }\n}\n\nvoid solve()\n{\n    int n;\n    cin >> n;\n\n    for (int i = 1; i < n; i++)\n    {\n        int u, v;\n        cin >> u >> v;\n        adj[u].push_back(pi(v, i));\n        adj[v].push_back(pi(u, i));\n    }\n\n    dfs(1, 0, 0);\n    cout << k << endl;\n    for (int i = 1; i <= k; i++)\n    {\n        cout << ans[i].size() << \" \";\n        for (int v : ans[i])\n            cout << v << ' ';\n        cout << endl;\n    }\n}\n\nsigned main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    // ICE IN MY VEINS\n    ll test = 1;\n    // cin >> test;\n    while (test--)\n    {\n        solve();\n    }\n    return 0;\n}"
}