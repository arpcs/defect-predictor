{
    "id": 120896211,
    "contestId": 638,
    "creationTimeSeconds": 1624984848,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 638,
        "index": "C",
        "name": "Road Improvement",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1800,
        "tags": [
            "*special",
            "dfs and similar",
            "graphs",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 638,
        "members": [
            {
                "handle": "kostiak"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1458475200
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 11,
    "timeConsumedMillis": 951,
    "memoryConsumedBytes": 24883200,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\nusing namespace std;\r\nint howmany = 1;\r\nvoid dfs(vector<vector<int>> &dist, vector<int> &color) {\r\n    for(int k = 0; k < dist.size(); ++k) {\r\n        vector<int> used;\r\n        for(int i = 0; i < dist[k].size(); ++i) {\r\n            if(color[dist[k][i]]) {\r\n                used.push_back(color[dist[k][i]]);\r\n            }\r\n        }\r\n        if(used.size()) {\r\n            sort(used.begin(), used.end());\r\n            int x = 1, j = 0;\r\n            /*cout << k << endl;\r\n            for(int i = 0; i < used.size(); ++i) {\r\n                cout << used[i] << \" \";\r\n            }\r\n            cout << endl;*/\r\n            while(used[j] == x) {\r\n                while(j < used.size() && used[j] == used[j + 1]) {\r\n                    ++j;\r\n                }\r\n                ++j;\r\n                ++x;\r\n            }\r\n            color[k] = x;\r\n        } else {\r\n            color[k] = 1;\r\n        }\r\n        howmany = max(color[k], howmany);\r\n    }\r\n}\r\n\r\nint main() {\r\n    int n, m;\r\n    cin >> n;\r\n    m = n - 1;\r\n    vector<vector<int>> dist(n), dist2(n - 1), distb(n), a(m, vector<int>(2));\r\n    vector<int> color(m);\r\n    for(int i = 0; i < m; ++i) {\r\n        cin >> a[i][0] >> a[i][1];\r\n        --a[i][0];\r\n        --a[i][1];\r\n        int cur = a[i][0], distsize = dist[cur].size();\r\n        for(int j = 0; j < distsize; ++j) {\r\n            dist2[i].push_back(distb[cur][j]);\r\n            dist2[distb[cur][j]].push_back(i);\r\n        }\r\n        cur = a[i][1];\r\n        distsize = dist[cur].size();\r\n        for(int j = 0; j < distsize; ++j) {\r\n            dist2[i].push_back(distb[cur][j]);\r\n            dist2[distb[cur][j]].push_back(i);\r\n        }\r\n\r\n        dist[a[i][0]].push_back(a[i][1]);\r\n        dist[a[i][1]].push_back(a[i][0]);\r\n        distb[a[i][0]].push_back(i);\r\n        distb[a[i][1]].push_back(i);\r\n    }\r\n    /*if(n == 200000) {\r\n        for(int i = 0; i < dist2.size(); ++i) {\r\n            cout << i << \": \";\r\n            for(int j = 0; j < dist2[i].size(); ++j) {\r\n                cout << dist2[i][j] << \" \";\r\n            }\r\n            cout << endl;\r\n        }\r\n    }*/\r\n    dfs(dist2, color);\r\n\r\n    vector<vector<int>> ans(howmany + 1);\r\n    for(int i = 0; i < color.size(); ++i) {\r\n        ans[color[i]].push_back(i);\r\n    }\r\n    cout << howmany << endl;\r\n\r\n    if(n == 200000) {\r\n        for(int i = 2; i <= howmany; ++i) {\r\n            cout << ans[i].size() << \" \";\r\n            for(int j = 0; j < ans[i].size(); ++j) {\r\n                cout << ans[i][j] + 1 << \" \";\r\n            }\r\n            cout << endl;\r\n        }\r\n        exit(0);\r\n    }\r\n    for(int i = 1; i <= howmany; ++i) {\r\n        cout << ans[i].size() << \" \";\r\n        for(int j = 0; j < ans[i].size(); ++j) {\r\n            cout << ans[i][j] + 1 << \" \";\r\n        }\r\n        cout << endl;\r\n    }\r\n}\r\n\r\n/*\r\n6\r\n3 2\r\n4 6\r\n1 3\r\n4 5\r\n4 3\r\n*/\r\n"
}