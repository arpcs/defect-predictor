{
    "id": 123120436,
    "contestId": 638,
    "creationTimeSeconds": 1626797101,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 638,
        "index": "C",
        "name": "Road Improvement",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1800,
        "tags": [
            "*special",
            "dfs and similar",
            "graphs",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 638,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1458475200
    },
    "programmingLanguage": "MS C++ 2017",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\n#include <vector>\nusing namespace std;\ntypedef pair<int, int> pii;\nvector<vector<pii>> adj;\nvector<int> ans[200001];\nint maxD = 0;\nvoid dfs(int cur, int pre, int day){\n  int assign = 0;\n  for(auto k : adj[cur]){\n    if(k.first == pre) continue;\n    if(assign == day) assign++;\n    ans[assign].push_back(k.second);\n    maxD = max(maxD, assign);\n    dfs(k.first, cur, assign);\n    assign++;\n  }\n}\nint main(int argc, const char * argv[]) {\n  int n;\n  cin >> n;\n  adj.resize(n);\n  for(int i = 0; i<n-1; i++){\n    int a, b; cin>>a>>b;\n    a--; b--;\n    adj[a].push_back({b, i});\n    adj[b].push_back({a, i});\n  }\n  dfs(0, -1, -1); //current, previous, day\n  cout << maxD + 1 << \"\\n\";\n  for(int i = 0; i<maxD+1; i++){\n    cout << ans[i].size();\n    for(auto k : ans[i]){cout << \" \" << k + 1;}\n    if(i != maxD){cout << endl;}\n  }\n  return 0;\n}\n\n\t\t  \t\t     \t  \t\t\t  \t \t \t  \t\t"
}