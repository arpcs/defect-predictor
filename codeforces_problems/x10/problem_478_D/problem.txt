{
    "contestId": 478,
    "index": "D",
    "name": "Red-Green Towers",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2000,
    "tags": [
        "dp"
    ],
    "desc": {
        "title": "D. Red-Green Towers",
        "statement": "<p>There are <span class=\"tex-span\"><i>r</i></span> red and <span class=\"tex-span\"><i>g</i></span> green blocks for construction of the <span class=\"tex-font-style-it\">red-green</span> tower. <span class=\"tex-font-style-it\">Red-green</span> tower can be built following next rules:</p><ul><p> </p><li> Red-green tower is consisting of some number of levels;<p> </p></li><li> Let the red-green tower consist of <span class=\"tex-span\"><i>n</i></span> levels, then the first level of this tower should consist of <span class=\"tex-span\"><i>n</i></span> blocks, second level \u2014 of <span class=\"tex-span\"><i>n</i>\u2009-\u20091</span> blocks, the third one \u2014 of <span class=\"tex-span\"><i>n</i>\u2009-\u20092</span> blocks, and so on \u2014 the last level of such tower should consist of the one block. In other words, each successive level should contain one block less than the previous one;<p> </p></li><li> Each level of the red-green tower should contain blocks of the same color.</li></ul><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/dfc6a2e45f32bf2473c53aaba6d1a9ab45c9e0b2.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center><p>Let <span class=\"tex-span\"><i>h</i></span> be the maximum possible number of levels of red-green tower, that can be built out of <span class=\"tex-span\"><i>r</i></span> red and <span class=\"tex-span\"><i>g</i></span> green blocks meeting the rules above. The task is to determine how many different red-green towers having <span class=\"tex-span\"><i>h</i></span> levels can be built out of the available blocks.</p><p>Two red-green towers are considered different if there exists some level, that consists of red blocks in the one tower and consists of green blocks in the other tower.</p><p>You are to write a program that will find the number of different red-green towers of height <span class=\"tex-span\"><i>h</i></span> modulo\u00a0<span class=\"tex-span\">10<sup class=\"upper-index\">9</sup>\u2009+\u20097</span>.</p>",
        "inputSpecification": "<p>The only line of input contains two integers <span class=\"tex-span\"><i>r</i></span> and <span class=\"tex-span\"><i>g</i></span>, separated by a single space \u2014 the number of available red and green blocks respectively (<span class=\"tex-span\">0\u2009\u2264\u2009<i>r</i>,\u2009<i>g</i>\u2009\u2264\u20092\u00b710<sup class=\"upper-index\">5</sup></span>, <span class=\"tex-span\"><i>r</i>\u2009+\u2009<i>g</i>\u2009\u2265\u20091</span>).</p>",
        "outputSpecification": "<p>Output the only integer \u2014 the number of different possible red-green towers of height <span class=\"tex-span\"><i>h</i></span> modulo\u00a0<span class=\"tex-span\">10<sup class=\"upper-index\">9</sup>\u2009+\u20097</span>.</p>",
        "samples": [
            {
                "input": "4 6<br/>",
                "output": "2<br/>"
            },
            {
                "input": "9 7<br/>",
                "output": "6<br/>"
            },
            {
                "input": "1 1<br/>",
                "output": "2<br/>"
            }
        ],
        "note": "<p>The image in the problem statement shows all possible red-green towers for the first sample.</p>"
    },
    "suggested_categories": [
        "combinatorial algorithms",
        "dynamic programming",
        "mathematical algorithms",
        "counting problems",
        "optimization problems",
        "mathematical modulo operations",
        "pattern matching",
        "recursion",
        "greedy algorithms",
        "graph theory",
        "data structures",
        "number theory",
        "combinatorics",
        "algorithmic complexity",
        "geometric algorithms",
        "recursive functions",
        "algorithms design",
        "mathematical modeling",
        "discrete mathematics",
        "problem solving"
    ]
}