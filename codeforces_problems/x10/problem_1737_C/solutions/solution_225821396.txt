{
    "id": 225821396,
    "contestId": 1737,
    "creationTimeSeconds": 1696014109,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1737,
        "index": "C",
        "name": "Ela and Crickets",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "games",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 1737,
        "members": [
            {
                "handle": "Fluffyking"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1665153300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n\r\n\r\nvoid testcase()\r\n{\r\n    int n; cin >> n;\r\n\r\n    vector<pair<int , int>> v(3);\r\n    for(int i = 0 ; i < 3 ; i++)\r\n    {\r\n        int a , b; cin >> a >> b;\r\n        v[i].first = a; v[i].second = b;\r\n    }\r\n\r\n    int x , y; cin >> x >> y;\r\n\r\n    pair<int , int> central;\r\n\r\n    if(v[0].first == v[1].first) \r\n    {\r\n        central = (v[1].second == v[2].second ? v[1] : v[0]);\r\n    }\r\n    if(v[0].first == v[2].first) \r\n    {\r\n        central = (v[0].second == v[1].second ? v[0] : v[2]);\r\n    }\r\n    \r\n\r\n    int a = central.first , b = central.second;\r\n\r\n\r\n    if((a == 1 or a == n) and (b == 1 or b == n)) \r\n    {\r\n        cout << (x == a or y == b ? \"YES\\n\" : \"NO\\n\");\r\n    }\r\n    else if((y - b) % 2 == 0 or (x - a) % 2 == 0) cout << \"YES\\n\";\r\n    else cout << \"NO\\n\";  \r\n\r\n\r\n\r\n}\r\n\r\nint main() \r\n{\r\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n    \r\n    auto begin = std::chrono::high_resolution_clock::now();\r\n    \r\n    int tc = 1;\r\n    cin >> tc;\r\n    while (tc--) testcase();\r\n\r\n    auto end = chrono::high_resolution_clock::now();\r\n    auto elapsed = chrono::duration_cast<chrono::nanoseconds>(end - begin);\r\n    cerr << \"Runtime: \" << elapsed.count() * 1e-9 * 1e5 << \" ms.\\n\"; \r\n    return 0;\r\n}\r\n"
}