{
    "id": 60241841,
    "contestId": 1211,
    "creationTimeSeconds": 1567893643,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1211,
        "index": "B",
        "name": "Traveling Around the Golden Ring of Berland",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "*special",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1211,
        "members": [
            {
                "handle": "massimocarli"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1567866900
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 18,
    "timeConsumedMillis": 311,
    "memoryConsumedBytes": 0,
    "source": "import java.util.*\r\n\r\nfun main() {\r\n    val scanner = Scanner(System.`in`)\r\n    val n = scanner.nextInt()\r\n    val array = LongArray(n)\r\n    (0 until n).forEach {\r\n        array[it] = scanner.nextLong()\r\n    }\r\n    scanner.close()\r\n    // We visit the first\r\n    // We then need to visit the others in order to complete\r\n    var totalCount = 0L\r\n    var i = n - 1\r\n    while (i >= 0) {\r\n        if (array[i] > 0) {\r\n            // In order to reset this we need to pass at least the same time to the previous cities\r\n            val remaining = array[i]\r\n            totalCount += remaining\r\n            array[i] = 0\r\n            var j = i - 1\r\n            while (j >= 0) {\r\n                val otherRemaining = array[j]\r\n                // we visit that city\r\n                totalCount += remaining\r\n                if (otherRemaining > 0) {\r\n                    array[j] -= remaining\r\n                    if (array[j] < 0) {\r\n                        array[j] = 0\r\n                    }\r\n                }\r\n                j--\r\n            }\r\n            if (remaining > 0 && i < n-1){\r\n                //totalCount += (remaining - 1)\r\n                totalCount += (remaining - 1)*(n-i-1)\r\n            }\r\n        }\r\n        i--\r\n    }\r\n\r\n    print(totalCount)\r\n}"
}