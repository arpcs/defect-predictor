{
    "id": 87748205,
    "contestId": 1211,
    "creationTimeSeconds": 1595492330,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1211,
        "index": "B",
        "name": "Traveling Around the Golden Ring of Berland",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "*special",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1211,
        "members": [
            {
                "handle": "Fliahin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1567866900
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 33,
    "timeConsumedMillis": 342,
    "memoryConsumedBytes": 38400000,
    "source": "import java.lang.Long.max\r\nimport java.util.ArrayDeque\r\nimport kotlin.math.max\r\n\r\nprivate fun readLn() = readLine()!! // string line\r\nprivate fun readInt() = readLn().toInt() // single int\r\nprivate fun readLong() = readLn().toLong() // single long\r\nprivate fun readDouble() = readLn().toDouble() // single double\r\nprivate fun readStrings() = readLn().split(\" \") // list of strings\r\nprivate fun readInts() = readStrings().map { it.toInt() } // list of ints\r\nprivate fun readLongs() = readStrings().map { it.toLong() } // list of longs\r\nprivate fun readDoubles() = readStrings().map { it.toDouble() } // list of doubles\r\n//Fast IO: https://github.com/finalchild/kotlin-fast-io/blob/master/src/solution.kt#L97\r\n\r\nfun main(args : Array<String>) {\r\n    var n = readLong()\r\n    var array = readLongs()\r\n    println((array.max()!! - 1) * n + array.lastIndexOf(array.max()!!) + 1)\r\n}"
}