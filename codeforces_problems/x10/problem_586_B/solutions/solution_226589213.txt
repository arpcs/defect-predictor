{
    "id": 226589213,
    "contestId": 586,
    "creationTimeSeconds": 1696424068,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 586,
        "index": "B",
        "name": "Laurenty and Shop",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 586,
        "members": [
            {
                "handle": "bkifhr7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1444641000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n#include <ext/pb_ds/detail/standard_policies.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n\n#define FIO                     ios::sync_with_stdio(false); cin.tie(nullptr)\n#define TC(t)                   int t; cin >> t; for(int i = 1; i <= t; i++)\n#define ll                      long long int\n#define ull                     unsigned long long int\n#define lll                     __int128\n#define lld                     long double\n#define loop(i, a, b)           for(ll i = a; i <= b; i++)\n#define loop2(i, b, a)          for(ll i = b; i >= a; i--)\n#define ini(x, y)               memset(x, y, sizeof(x))\n#define all(x)                  x.begin(), x.end()\n#define all2(x)                 x.rbegin(), x.rend()\n#define sz(x)                   (ll)x.size()\n#define pb                      push_back\n#define ppb                     pop_back\n#define mp                      make_pair\n#define ff                      first\n#define ss                      second\n#define M                       1000000007\n#define endl                    '\\n'\n#define bits(x)                 __builtin_popcountll(x)\n#define zrbits(x)               __builtin_ctzll(x)\n#define vl                      vector<ll>\n#define pll                     pair<ll,ll>\n#define vpll                    vector<pll>\n#define uni(x)                  x.erase(unique(all(x)), x.end())\n#define ordered_set             tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update>\n#define multi_ordered_set       tree<ll, null_type, less_equal<ll>, rb_tree_tag, tree_order_statistics_node_update>\n#define mxheap                  priority_queue<ll>\n#define mnheap                  priority_queue<ll, vector<ll>, greater<ll>>\n#define mxheap2                 priority_queue<pair<ll,ll>>\n#define mnheap2                 priority_queue<pair<ll,ll>, vector<pair<ll,ll>>, greater<pair<ll,ll>>>\n\nconst int N = 200 + 5;\nconst int L = 20;\nconst int MX = 1e9 + 10;\nconst ll INF = 1e18;\n\nconst int dx[] = {0, -1, 0, 1, -1, -1, 1, 1};\nconst int dy[] = {1, 0, -1, 0, 1, -1, -1, 1};\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\ninline ll uceil(ll a,ll b) {return (a % b ? a / b + 1 : a / b);}\ninline ll mod(ll x) {return ( (x % M + M) % M );}\nll ulog(ll val, ll base) {ll cnt = 0; val /= base; while(val) {cnt++; val /= base;} return cnt;}\nll power(ll a, ll b) {ll res = 1; while (b) {if (b & 1) res = res * a; a = a * a; b >>= 1;} return res;}\nll modpow(ll a, ll b) {ll res = 1; while (b) {if (b & 1) res = res * a % M; a = a * a % M; b >>= 1;} return res;}\n\n#ifdef FARHAN\n#define deb(x)                  cerr << #x << \" = \" << x << endl;\n#define deb2(x, y)              cerr << #x << \" = \" << x << \", \" << #y << \" = \" << y << endl;\n#define deb3(x, y, z)           cerr << #x << \" = \" << x << \", \" << #y << \" = \" << y << \", \" << #z << \" = \" << z << endl;\n#define deb4()                  cerr << endl;\n#define done                    cerr << \"Line \" << __LINE__ << \" is done\" << endl;\n#else\n#define deb(x)\n#define deb2(x, y)\n#define deb3(x, y, z)\n#define deb4()\n#define done\n#endif\n\ntemplate<typename T> ostream& operator<<(ostream& os, const vector<T>& v) {for(auto& x : v) os << x << \" \"; return os;}\ntemplate<typename T> ostream& operator<<(ostream& os, const set<T>& v) {for(auto& x : v) os << x << \" \"; return os;}\ntemplate<typename T, typename S> ostream& operator<<(ostream& os, const pair<T, S>& p) {os << p.first << ' ' << p.second; return os;}\ntemplate<typename... T> void in(T&... args) {((cin >> args), ...);}\ntemplate<typename... T> void out(T&&... args) {((cout << args << endl), ...);}\ntemplate<typename... T> void out2(T&&... args) {((cout << args << \" \"), ...);}\ntemplate<typename... T> void out3(T&&... args) {((cout << args << \" \"), ...); cout << endl;}\n\nvector<pair<ll,ll>> g[N], fix[N];\nvector<ll> dist(N);\nll par[N];\nll n, m;\n\nvoid dijkstra(ll src) {\n        for(ll i = 0; i <= 2 * n - 1; i++) {\n                dist[i] = INF;\n        }\n        priority_queue<pair<ll,ll>, vector<pair<ll,ll>>, greater<pair<ll,ll>>> pq;\n        dist[src] = 0;\n        pq.push({0, src});\n\n        while(!pq.empty()) {\n                ll weight = pq.top().ff;\n                ll node = pq.top().ss;\n                pq.pop();\n                if(weight > dist[node]) continue;\n                for(auto child : g[node]) {\n                        if(weight + child.ss < dist[child.ff]) {\n                                dist[child.ff] = weight + child.ss;\n                                pq.push({dist[child.ff], child.ff});\n\n                                par[child.ff] = node;\n                        }\n                }\n        }\n}\n\nll cal2(vpll& edge) {\n        for(auto &e : edge) {\n                ll u = e.ff, v = e.ss;\n                if(u > v) swap(u, v);\n                e = {u, v};\n        }\n\n        ll res = INF;\n        for(auto e : edge) {\n                loop(i, 0, 2 * n - 1) {\n                        g[i].clear();\n                }\n                loop(i, 0, 2 * n - 1) {\n                        for(auto child : fix[i]) {\n\n                                ll u = i, v = child.ff;\n                                if(u > v) swap(u, v);\n                                if(u != e.ff || v != e.ss) {\n                                        g[u].pb({v, child.ss});\n                                        g[v].pb({u, child.ss});\n                                }\n                        }\n                }\n                dijkstra(0);\n                res = min(res, dist[2 * n - 1]);\n        }\n        return res;\n}\n\nvoid solve() {\n        cin >> n;\n        vector<ll> a(n - 1);\n        vector<ll> b(n - 1);\n        for(ll &x : a) cin >> x;\n        for(ll &x : b) cin >> x;\n\n        vector<ll> c(n);\n        for(ll &x : c) cin >> x;\n        \n        loop(i, 1, n - 1) {\n                ll u = 0 * n + (i - 1);\n                ll v = 0 * n + i;\n                g[u].pb({v, a[i - 1]});\n                g[v].pb({u, a[i - 1]});\n        }\n        loop(i, 1, n - 1) {\n                ll u = 1 * n + (i - 1);\n                ll v = 1 * n + i;\n                g[u].pb({v, b[i - 1]});\n                g[v].pb({u, b[i - 1]});\n        }\n        loop(i, 0, n - 1) {\n                ll u = 0 * n + i;\n                ll v = 1 * n + i;\n                g[u].pb({v, c[i]});\n                g[v].pb({u, c[i]});\n        }\n\n        dijkstra(0);\n        ll cost1 = dist[2 * n - 1];\n               \n        ll cur = 2 * n - 1;\n        vpll edge;\n        while(cur != 0) {\n                edge.pb({cur, par[cur]});\n                cur = par[cur];\n        }\n\n        loop(i, 0, 2 * n - 1) {\n                for(auto e : g[i]) fix[i].pb(e);\n        }\n        ll cost2 = cal2(edge);\n\n        out(cost1 + cost2);\n}\n\nsigned main () {\n        #ifdef FARHAN\n                freopen(\"input.txt\", \"r\", stdin);\n                freopen(\"output.txt\", \"w\", stdout);\n        #endif\n        FIO;\n        // TC(t)\n        solve();\n        return 0;\n}\n \t\t \t  \t\t\t\t  \t\t \t  \t\t \t\t  \t  \t\t"
}