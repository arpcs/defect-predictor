{
    "id": 232873025,
    "contestId": 1844,
    "creationTimeSeconds": 1700059979,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1844,
        "index": "H",
        "name": "Multiple of Three Cycles",
        "type": "PROGRAMMING",
        "points": 4000.0,
        "rating": 3400,
        "tags": [
            "combinatorics",
            "data structures",
            "dp",
            "dsu",
            "math"
        ]
    },
    "author": {
        "contestId": 1844,
        "members": [
            {
                "handle": "sharad4730"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1689086100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int MOD = 998244353;\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    vector<int> a(n + 1, -1); // Initialize with -1 indicating unassigned.\r\n    vector<int> ways(n + 1, 0); // DP array to store the number of ways.\r\n    ways[0] = 1; // Base case: 1 way to have 0 cycles.\r\n\r\n    for (int i = 1; i <= n; i++) {\r\n        int x, y;\r\n        cin >> x >> y;\r\n        a[x] = y;\r\n\r\n        // Update DP state based on the new assignment.\r\n        // Calculate the number of ways considering the cycle length constraints.\r\n\r\n        // Output the result for this update.\r\n        cout << ways[i % 3] << endl;\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}