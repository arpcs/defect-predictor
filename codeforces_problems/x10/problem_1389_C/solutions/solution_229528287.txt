{
    "id": 229528287,
    "contestId": 1389,
    "creationTimeSeconds": 1698135550,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1389,
        "index": "C",
        "name": "Good String",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "brute force",
            "dp",
            "greedy",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1389,
        "members": [
            {
                "handle": "Ashish4480"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1596033300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC target(\"avx,avx2,fma\")\r\n#pragma GCC optimize(\"O3,unroll-loops\")\r\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")  \r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;  \r\n\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;  \r\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\r\n\r\n#define ll long long\r\n#define pb push_back\r\n#define F first\r\n#define S second\r\n#define I insert\r\n#define ull unsigned long long\r\ntypedef long double lld;\r\n#define PI 3.141592653589793238462\r\n#define set_bits __builtin_popcountll\r\n#define sz(x) ((int)(x).size())\r\n#define mem(x,v) memset(x,v,sizeof(x))\r\n#define inp(v,n) loo(i,n){cin>>v[i];}\r\n\r\n\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x) cerr << #x <<\" \"; _print(x); cerr << endl;\r\n#else\r\n#define debug(x)\r\n#endif\r\n\r\nvoid _print(ll t) {cerr << t;}\r\nvoid _print(int t) {cerr << t;}\r\nvoid _print(string t) {cerr << t;}\r\nvoid _print(char t) {cerr << t;}\r\nvoid _print(lld t) {cerr << t;}\r\nvoid _print(double t) {cerr << t;}\r\nvoid _print(ull t) {cerr << t;}\r\n\r\n\r\ntemplate <class T, class V> void _print(pair <T, V> p);\r\ntemplate <class T> void _print(vector <T> v);\r\ntemplate <class T> void _print(set <T> v);\r\ntemplate <class T, class V> void _print(map <T, V> v);\r\ntemplate <class T> void _print(multiset <T> v);\r\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.F); cerr << \",\"; _print(p.S); cerr << \"}\";cerr<<\"\\n\";}\r\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";cerr<<\"\\n\";}\r\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";cerr<<\"\\n\";}\r\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";cerr<<\"\\n\";}\r\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {cerr<<\"{\"<<i.F<<\" \"<<i.S<<\"} \";} cerr << \"]\";cerr<<\"\\n\";}\r\n\r\n\r\n#define vll vector<ll>\r\n#define vdd vector<double>\r\n#define vss vector<string>\r\n#define vpl vector<pair<ll,ll>>\r\n#define vcl vector<char>\r\n#define vvl vector<vector<ll>>\r\n#define vvc vector<vector<char>>\r\n#define ppi pair<ll,ll>\r\n#define maxe(v) *max_element((v).begin(),(v).end());\r\n#define mine(v) *min_element((v).begin(),(v).end());\r\n#define loo(i,n) for(long long i=0;i<n;i++)  \r\n#define sor(v) sort(v.begin(),v.end());\r\n#define pyes cout<<\"YES\"<<endl;\r\n#define pno cout<<\"NO\"<<endl;\r\n#define ayes cout<<\"Yes\"<<endl;\r\n#define ano cout<<\"No\"<<endl;\r\n#define mll map<ll,ll>\r\n#define mcl map<char,ll>\r\n#define mod 1000000007\r\n#define ft front()\r\n#define bk back()\r\n#define pf push_front\r\n#define bg(x) begin(x)\r\n#define all(x) bg(x), end(x)\r\n#define rall(x) x.rbegin(), x.rend()\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define each(a,x) for(auto a:x)  \r\n#define nl cout<<\"\\n\";\r\n#define pri(xx) cout<<xx<<\"\\n\";\r\n#define sll set<ll>\r\n#define sch set<char>\r\n#define rt return\r\n#define pq priority_queue\r\n#define pql priority_queue<ll>\r\n#define INF 1e9\r\n#define manh(a,b,c,d) abs(a-c)+abs(b-d)\r\n#define euc(a,b,c,d) sqrt((a-c)*(a-c)+(b-d)*(b-d))\r\n#define foo(i,a,b) for(ll i=a;i<b;i++)\r\n#define pril(i,a,b,v) foo(i,a,b){cout<<v[i]<<\" \";}\r\n#define pqc priority_queue<char>\r\n#define to_upper(s)  transform(s.begin(), s.end(), s.begin(), ::toupper);\r\n#define lowercase(s)  transform(s.begin(), s.end(), s.begin(), ::tolower);\r\n\r\n\r\n\r\n/*  //SNIPPET LIST \r\n  // 1)segtree  \r\n   -(used to build a segment tree and to solve range based queries and point update)\r\n   2)freqidblocks\r\n   -(in a vector we can find number of increasing and decreasing subsegment)\r\n   3)UNIV -(gives unique vector no duplicates)\r\n   4)levaltraversalTree\r\n   5)bpow\r\n   6)sttoi\r\n   7)commonsubstring2chr\r\n   8)factorstore-(stores all the factors of a num)\r\n   9)issubstring\r\n   10)perfectSqorNot\r\n   11)seivestore\r\n   12)precompfac -(factorial)\r\n   13)range overlap \r\n   14)countfreqcontinuos  -(ex--> v=(1,1,1,2) return vpl={{1,3},{2,1}})\r\n   15)getMaxContifreq -(same as above but gives maximum of all same number)\r\n   (ex---> v=(1,1,2,1,1,1) return freq freq[1]=3 & freq[2]=1 and all other 0)\r\n   16)DSU*snipp ------->(Contains all functions of dsu like unite, find par) (***imp***)\r\n   \r\n   */\r\n\r\n\r\n\r\n// JAI SRI KRISHNA!! JAI SRI KRISHNA!! //\r\n\r\n\r\nvoid madara(){\r\n  string s;\r\n  cin>>s;\r\n  map<char,ll>mp;\r\n  ll mx=-1;\r\n  mll mp2;\r\n  ll ans;\r\n  for(auto it:s) mp[it]++; \r\n  for(auto it:mp){\r\n    mx=max(mx,it.S);\r\n    mp2[it.S]++;\r\n  } \r\n  ans=s.size()-mx;\r\n  for(auto it:mp2){\r\n    if(it.S>=2){\r\n      ans=min(s.size()-2*it.F,ans);\r\n    }\r\n  }\r\n  pri(ans)\r\n\r\n  \r\n\r\n}\r\n\r\n\r\nint main(){\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n#ifndef ONLINE_JUDGE\r\n  freopen(\"input.txt\",\"r\",stdin);\r\n  freopen(\"output.txt\",\"w\",stdout);\r\n  freopen(\"Error.txt\", \"w\", stderr);\r\n#endif \r\n  ll ashish;\r\n  cin>>ashish;\r\n  while(ashish--){\r\n      madara();\r\n  }\r\n  return 0;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
}