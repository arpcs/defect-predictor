{
    "id": 231076099,
    "contestId": 1108,
    "creationTimeSeconds": 1698994633,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1108,
        "index": "A",
        "name": "Two distinct points",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 1108,
        "members": [
            {
                "handle": "1936557"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1548254100
    },
    "programmingLanguage": "Haskell",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 10,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "import Control.Monad\r\nimport Data.Char\r\nimport Data.Bits\r\nimport Data.List\r\nimport Data.Function\r\nimport Data.Ord\r\nimport Data.Maybe\r\nimport qualified Data.Set          as Set\r\nimport qualified Data.Map.Strict   as Map\r\nimport qualified Data.Array        as Array\r\nimport GHC.Real (reduce, numerator, denominator)\r\n\r\n--------------------------------------------------------------------------------\r\n-- (\u00ac\u203f\u00ac)\r\n-- (\u00ac\u203f\u00ac)\r\nmain = do\r\n  t <- readLn :: IO Int\r\n  replicateM_ t $ do \r\n    as <- map read . words <$> getLine :: IO [Int]\r\n    let [l1, r1, l2, r2] = as \r\n    let a = [(x, y) | x <- as, y <- as]\r\n    let (x, y) = myfun l1 r1 l2 r2 a \r\n    putStrLn $ show x ++ \" \" ++ show y\r\n\r\n    return ()\r\n\r\nmyfun l1 r1 l2 r2 ((x, y) : ys)\r\n  | l1 <= x && x <= r1 && l2 <= y && y <= r2 && x /= y    = (x, y)\r\n  | otherwise = myfun l1 r1 l2 r2 ys "
}