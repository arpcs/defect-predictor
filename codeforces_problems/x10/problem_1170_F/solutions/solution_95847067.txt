{
    "id": 95847067,
    "contestId": 1170,
    "creationTimeSeconds": 1603004194,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1170,
        "index": "F",
        "name": "Wheels",
        "type": "PROGRAMMING",
        "tags": [
            "*special",
            "binary search",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1170,
        "members": [
            {
                "handle": "__mdsinalpha__"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1559054100
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 342,
    "memoryConsumedBytes": 18944000,
    "source": "fun main() {\r\n    val(n, m, k) = readLine()!!.split(\" \").map{ it.toInt() }\r\n    val wheels = readLine()!!.split(\" \").map { it.toInt() }.toMutableList()\r\n    if(m == 1){\r\n        println(0)\r\n        return\r\n    }\r\n    wheels.sort()\r\n    val psum = mutableListOf(wheels[0] + 0L)\r\n    for(i in 1 until n)\r\n        psum.add(psum.last() + wheels[i])\r\n    var ans = Long.MAX_VALUE\r\n    var ptr = 0\r\n    for(i in 0 until n - m + 1){\r\n        while (ptr < i + m / 2 && wheels[ptr + 1].toLong() * (ptr + 1 - i + 1) - psum[ptr + 1] + (if(i != 0) psum[i -1] else 0L) <= k)\r\n            ptr++\r\n        var lsum = wheels[ptr].toLong() * (ptr - i + 1) - psum[ptr] + (if(i != 0) psum[i - 1] else 0L)\r\n        var rsum = psum[i + m - 1] - psum[ptr] - wheels[ptr].toLong() * (i + m - 1 - ptr)\r\n        if(ptr < i + m / 2 && (k - lsum) / (ptr - i + 1) > 0L){\r\n            val opt = wheels[ptr] + (k - lsum) / (ptr - i + 1)\r\n            lsum = opt * (ptr - i  + 1) - psum[ptr] + (if(i != 0) psum[i - 1] else 0L)\r\n            rsum = psum[i + m - 1] - psum[ptr] - opt * (i + m - 1 - ptr)\r\n        }\r\n        if(lsum + rsum < ans)\r\n            ans = lsum + rsum\r\n    }\r\n    println(ans)\r\n}"
}