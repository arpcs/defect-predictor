{
    "id": 54898220,
    "contestId": 1170,
    "creationTimeSeconds": 1559364261,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1170,
        "index": "F",
        "name": "Wheels",
        "type": "PROGRAMMING",
        "tags": [
            "*special",
            "binary search",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1170,
        "members": [
            {
                "handle": "_lo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1559054100
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 31,
    "timeConsumedMillis": 374,
    "memoryConsumedBytes": 17203200,
    "source": "import java.io.*\r\nval reader=BufferedReader(InputStreamReader(System.`in`))\r\nfun bufferOut(block: PrintWriter.() -> Unit) = PrintWriter(System.out).use { block(it) }\r\nfun read() = reader.readLine()!!.split(' ').map{it.toInt()}\r\nfun main() = bufferOut { solve() }\r\nfun PrintWriter.solve(){\r\n    val (n, m, k)=read()\r\n    val a=read().map{it.toLong()}.toMutableList()\r\n    a.add(0, 0)\r\n    a.sort()\r\n    var prefix=a.toMutableList()\r\n    for (i in 1..n) {\r\n        prefix[i]+=prefix[i-1]\r\n    }\r\n    var res=1e18.toLong()\r\n    for (i in 1..n-m+1) {\r\n        var l=i\r\n        var r=i+m/2\r\n        while (r-l>=2) {\r\n            val m=(l+r)/2\r\n            if (a[m]*(m-i+1)-(prefix[m]-prefix[i-1])<=k) {\r\n                l=m\r\n            }\r\n            else {\r\n                r=m\r\n            }\r\n        }\r\n        var cur=a[l]*(l-i+1)-(prefix[l]-prefix[i-1])+(prefix[i+m-1]-prefix[l])-a[l]*(i+m-1-l)\r\n        val (x, y)=Pair((k-a[l]*(l-i+1)+(prefix[l]-prefix[i-1]))/(l-i+1), a[l+1]-a[l])\r\n        cur-=(if (x<=y) x else y)*(i*2+m-l*2-2)\r\n        if (res>cur) {\r\n            res=cur\r\n        }\r\n    }\r\n    println(res)\r\n}"
}