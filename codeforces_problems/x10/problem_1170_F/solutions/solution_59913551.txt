{
    "id": 59913551,
    "contestId": 1170,
    "creationTimeSeconds": 1567447880,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1170,
        "index": "F",
        "name": "Wheels",
        "type": "PROGRAMMING",
        "tags": [
            "*special",
            "binary search",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1170,
        "members": [
            {
                "handle": "Fortin"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1559054100
    },
    "programmingLanguage": "Kotlin 1.4",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 28,
    "timeConsumedMillis": 405,
    "memoryConsumedBytes": 18227200,
    "source": "import kotlin.math.min\n\nprivate fun readLn() = readLine()!! // string line\nprivate fun readInt() = readLn().toInt() // single int\nprivate fun readStrings() = readLn().split(\" \") // list of strings\nprivate fun readInts() = readStrings().map { it.toInt() } // list of ints\n\nfun main(){\n    val (n, m, k) = readInts()\n    val a = readInts().sorted()\n    val mid = m/2\n    var ls = 0L\n    var rs = 0L\n    var ind = 0\n    for(i in 0 until m - 1) rs += a[i]\n    var ans = Long.MAX_VALUE\n    for(l in 0 .. n - m ){\n        rs += a[l + m - 1]\n        var cntLeft:Long = (ind - l).toLong()\n        while (ind - l <= mid && (cntLeft + 1)*a[ind + 1] - (ls + a[ind]) <= k) {\n            rs -= a[ind]\n            ls += a[ind++]\n            cntLeft++\n        }\n        val cntRight:Long = (l + m - ind).toLong()\n        ans = min(ans, cntLeft*a[ind] - ls + rs - cntRight*a[ind])\n        if (ind == l){\n            rs -= a[l]\n            ind++\n        }else ls -= a[l]\n    }\n    print(ans)\n\n}"
}