{
    "id": 215295541,
    "contestId": 1238,
    "creationTimeSeconds": 1690169682,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1238,
        "index": "D",
        "name": "AB-string",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1238,
        "members": [
            {
                "handle": "LordWorm"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1570545300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1843200,
    "source": "/**\r\n * totally four different kinds of bad string:\r\n * AAAAAA...B\r\n * BBBBBB...A\r\n * ABBB.....B\r\n * BAAA.....A\r\n*/\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nusing ll = long long;\r\nconst int MOD = 1e9 + 7;\r\nconst int N = 2e5 + 10;\r\nvoid solve() {\r\n  ll n;\r\n  cin >> n;\r\n  string s;\r\n  cin >> s;\r\n  vector<int> cnt(N, 1);\r\n  int pos = 0, c = 0;\r\n  for (int i = 1; i < n; ++i) {\r\n    if(s[i] == s[pos]) {\r\n      cnt[c]++;\r\n    } else {\r\n      ++c;\r\n      cnt[c] = 1;\r\n      pos = i;\r\n    }\r\n  } \r\n  ll ans = n * (n - 1) >> 1;\r\n  for (int i = 1; i <= c; ++i) { \r\n    ans -= cnt[i - 1] + cnt[i] - 1; \r\n  }\r\n  cout << ans << '\\n';\r\n  return ;\r\n}\r\nint main(){\r\n  ios::sync_with_stdio(false);\r\n  cin.tie(nullptr);\r\n#ifdef DEBUG\r\n  freopen(\"/Users/yanxinxiang/code/Algorithm/in\",\"r\",stdin);\r\n  freopen(\"/Users/yanxinxiang/code/Algorithm/out\",\"w\",stdout);\r\n#endif\r\n  int T=1;\r\n  while(T--){\r\n    solve();\r\n  }\r\n  return 0;\r\n}"
}