{
    "id": 228282924,
    "contestId": 1238,
    "creationTimeSeconds": 1697367069,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1238,
        "index": "D",
        "name": "AB-string",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "binary search",
            "combinatorics",
            "dp",
            "strings"
        ]
    },
    "author": {
        "contestId": 1238,
        "members": [
            {
                "handle": "KOKOREV_VICTOR"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1570545300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 2355200,
    "source": "#include <iostream>\r\n#include <string>\r\n#include <cmath>\r\n#include <algorithm>\r\n#include <iomanip>\r\n#include <vector>\r\n#include <string>\r\n#include <unordered_map>\r\n\r\nusing namespace std;\r\n\r\nlong long n = 0;\r\n\r\nint* masA = new int[300007];\r\nint* masB = new int[300007];\r\n\r\nint bs(int lp, int rp, char c, int val) {\r\n    int* mas; int med = 0; int res = 0;\r\n    if (c == 'A') {\r\n        mas = masA;\r\n    }\r\n    else {\r\n        mas = masB;\r\n    }\r\n    while (lp != rp) {\r\n        med = (lp + rp) / 2;\r\n        if (mas[med] == val && mas[med + 1] == val + 1) {\r\n            res = med + 1;\r\n            return res;\r\n        }\r\n        else {\r\n            if (mas[med] > val) {\r\n                rp = med;\r\n            }\r\n            else {\r\n                lp = med;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvoid solve(int t) {\r\n    string s = \"\";\r\n    cin >> s;\r\n    int i = 1; long long ctr = 0;\r\n    masA[0] = (s[0] == 'A');\r\n    masB[0] = (s[0] == 'B');\r\n    for (int j = 1; j < n; j++) {\r\n        masA[i] = masA[i - 1];\r\n        masB[i] = masB[i - 1];\r\n        if (s[j] == 'A') {\r\n            masA[i]++;\r\n        }\r\n        else {\r\n            masB[i]++;\r\n        }\r\n        i++;\r\n    }\r\n    masA[n] = masA[n - 1] + 1;\r\n    masB[n] = masB[n - 1] + 1;\r\n    for (int i = 0; i < n; i++) {\r\n        ctr += bs(i, n, s[i], s[i] == 'A' ? masA[i] : masB[i]) - i - 1;\r\n    }\r\n    for (int i = 0; i < 2; i++) {\r\n        if (\"AB\"[i] == 'A') {\r\n            if (masA[n - 1] != 0) {\r\n                ctr += max(bs(0, n - 1, 'A', 0) - 1, 0);\r\n            }\r\n        }\r\n        else {\r\n            if (masB[n - 1] != 0) {\r\n                ctr += max(bs(0, n - 1, 'B', 0) - 1, 0);\r\n            }\r\n        }\r\n    }\r\n    cout << n * (n - 1) / 2 - ctr;\r\n}\r\n\r\nint main() {\r\n    cin.tie(nullptr); std::cout.tie(nullptr);\r\n    ios_base::sync_with_stdio(false);\r\n    int t = 1;\r\n    cin >> n; \r\n    while (t--) {\r\n        solve(t);\r\n    }\r\n    return 0;\r\n} "
}