{
    "id": 198607738,
    "contestId": 280,
    "creationTimeSeconds": 1679482229,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 280,
        "index": "C",
        "name": "Game on Tree",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2200,
        "tags": [
            "implementation",
            "math",
            "probabilities",
            "trees"
        ]
    },
    "author": {
        "contestId": 280,
        "members": [
            {
                "handle": "UltramanDecker"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1362929400
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 52,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 19148800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing ll = long long;\r\nusing uint = unsigned int;\r\nusing ull = unsigned long long;\r\n\r\n#define lowbit(x) (x & (-x))\r\nconst int mod = 998244353;\r\nconst double PI = 3.14159265358;\r\nstd::mt19937 rng(std::random_device{}());\r\nnamespace FI\r\n{\r\n    char B[1 << 16], *S = B, *T = B;\r\n    inline char getc()\r\n    {\r\n        return S == T && (T = (S = B) + fread(B, 1, 1 << 16, stdin), S == T) ? EOF : *S++;\r\n    }\r\n    inline void read()\r\n    {\r\n    }\r\n\r\n    template <typename Tp, typename... Types>\r\n    inline void read(Tp &o, Types &...Args)\r\n    {\r\n        o = 0;\r\n        bool s = 0;\r\n        char c = getc();\r\n        while (c > '9' || c < '0')\r\n            s |= c == '-', c = getc();\r\n        while (c >= '0' && c <= '9')\r\n            o = o * 10 + c - '0', c = getc();\r\n        if (s)\r\n            o = -o;\r\n        read(Args...);\r\n    }\r\n} // namespace FI\r\nusing FI::read;\r\n\r\n#define fac_init(n)                                              \\\r\n    {                                                            \\\r\n        fac[0] = fac[1] = inv[1] = facinv[0] = facinv[1] = 1;    \\\r\n        for (int i = 2; i <= n; ++i)                             \\\r\n        {                                                        \\\r\n            fac[i] = 1ll * fac[i - 1] * i % mod;                 \\\r\n            inv[i] = 1ll * inv[mod % i] * (mod - mod / i) % mod; \\\r\n            facinv[i] = 1ll * facinv[i - 1] * inv[i] % mod;      \\\r\n        }                                                        \\\r\n    }\r\n#define Combine(n, m) (1ll * fac[n] * facinv[(n) - (m)] % mod * facinv[m] % mod)\r\n#define MultiTestCases 0\r\n\r\nconst int MAXN = 1e5;\r\nint dep[MAXN + 5];\r\nstd::vector<int> G[MAXN + 5];\r\n\r\nint Main()\r\n{\r\n    int n;\r\n    read(n);\r\n    for (int i = 1; i <= n - 1; ++i)\r\n    {\r\n        int u, v;\r\n        read(u, v);\r\n        G[u].push_back(v), G[v].push_back(u);\r\n    }\r\n    dep[1] = 1;\r\n    double ans = 0;\r\n    std::function<void(int, int)> dfs = [&](int u, int fa)\r\n    {\r\n        dep[u] = dep[fa] + 1;\r\n        for (int v : G[u])\r\n            if (v != fa)\r\n                dfs(v, u);\r\n        ans += (double)1 / (double)dep[u];\r\n    };\r\n    dfs(1, 0);\r\n    printf(\"%.7lf\\n\", ans);\r\n    return 0;\r\n}\r\n\r\nint main()\r\n{\r\n    int TestCases = 1;\r\n#if MultiTestCases\r\n    scanf(\"%d\", &TestCases);\r\n#endif\r\n    while (TestCases--)\r\n        Main();\r\n    return 0;\r\n}"
}