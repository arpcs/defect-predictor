{
    "id": 219550536,
    "contestId": 272,
    "creationTimeSeconds": 1692440668,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 272,
        "index": "D",
        "name": "Dima and Two Sequences",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1600,
        "tags": [
            "combinatorics",
            "math",
            "sortings"
        ]
    },
    "author": {
        "contestId": 272,
        "members": [
            {
                "handle": "ayushworkspace100"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1360769400
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 1028,
    "memoryConsumedBytes": 9830400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nlong long a[100005], b[100005];\r\nmap<long long, long long> mp;\r\n\r\nint main(){\r\n    long long n, m, cnt = 0, ans = 1;\r\n\r\n    cin >> n; // Read the length of arrays\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> a[i]; // Read values of array 'a'\r\n        mp[a[i]]++;  // Count frequency of each value in 'a'\r\n    }\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> b[i];      // Read values of array 'b'\r\n        cnt += (b[i] == a[i]); // Count matching elements between 'a' and 'b'\r\n        mp[b[i]]++;       // Count frequency of each value in 'b'\r\n    }\r\n\r\n    cin >> m; // Read value of 'm'\r\n\r\n    // Iterate through the elements and their frequencies in the map 'mp'\r\n    for (auto i : mp) {\r\n        for (int j = 1; j <= i.second; j++) {\r\n            long long x = j; // Current frequency\r\n\r\n            // Divide x by 2 while there are still matched elements and x is even\r\n            while (cnt > 0 && x % 2 == 0) {\r\n                x /= 2;\r\n                cnt--; // Decrement matched element count\r\n            }\r\n\r\n            ans = (ans * x) % m; // Update 'ans' using modular multiplication\r\n        }\r\n    }\r\n\r\n    cout << ans % m; // Print the final result\r\n}\r\n"
}