{
    "id": 226492068,
    "contestId": 272,
    "creationTimeSeconds": 1696360479,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 272,
        "index": "D",
        "name": "Dima and Two Sequences",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1600,
        "tags": [
            "combinatorics",
            "math",
            "sortings"
        ]
    },
    "author": {
        "contestId": 272,
        "members": [
            {
                "handle": "mm944"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1360769400
    },
    "programmingLanguage": "Java 17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 404,
    "memoryConsumedBytes": 512000,
    "source": "import java.util.*;\r\n\r\npublic class P272D {\r\n\r\n    public static void main(String[] args) {\r\n\r\n        Scanner read = new Scanner(System.in);\r\n        int n = read.nextInt();\r\n        int[][] a = new int[2 * n][2];\r\n        for (int i = 0; i < n; i++)\r\n            a[i] = new int[]{read.nextInt(), i + 1};\r\n        for (int i = n; i < 2 * n; i++)\r\n            a[i] = new int[]{read.nextInt(), i - n + 1};\r\n        Arrays.sort(a, Comparator.comparingInt(entry -> entry[0]));\r\n        int m = read.nextInt();\r\n        read.close();\r\n\r\n\r\n        long result = 1;\r\n        int i = 0;\r\n        while (i < 2 * n) {\r\n            Map<Integer, Integer> y = new HashMap();\r\n            y.put(a[i][1], 1);\r\n            i++;\r\n            while (i < 2 * n && a[i - 1][0] == a[i][0]) {\r\n                if (y.containsKey(a[i][1]))\r\n                    y.put(a[i][1], y.get(a[i][1]) + 1);\r\n                else\r\n                    y.put(a[i][1], 1);\r\n                i++;\r\n            }\r\n            result = (result * getNo(y, m)) % m;\r\n        }\r\n\r\n        System.out.println(result);\r\n\r\n    }\r\n\r\n    private static long getNo(Map<Integer, Integer> a, int m) {\r\n        long result = 1;\r\n        long twos = 0;\r\n        for (int x : a.keySet())\r\n            if (a.get(x) == 2)\r\n                twos++;\r\n\r\n        for (int i = 1; i <= a.size() + twos; i++) {\r\n            result *= i;\r\n        }\r\n        while (twos > 0) {\r\n            result /= 2;\r\n            twos--;\r\n        }\r\n        return result;\r\n    }\r\n}\r\n"
}