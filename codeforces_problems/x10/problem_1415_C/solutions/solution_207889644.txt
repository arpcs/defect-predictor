{
    "id": 207889644,
    "contestId": 1415,
    "creationTimeSeconds": 1685469165,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1415,
        "index": "C",
        "name": "Bouncing Ball",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1400,
        "tags": [
            "brute force",
            "dp",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1415,
        "members": [
            {
                "handle": "prashantkmr389"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1606633500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 33,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 1843200,
    "source": "/*/ Author: Prashnat /*/\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n/*/---------------------------Macros----------------------/*/\r\n\r\n#define int long long\r\n#define fast                          \\\r\n    ios_base::sync_with_stdio(false); \\\r\n    cin.tie(0);                       \\\r\n    cout << setprecision(12) << fixed;\r\n#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))\r\n// __builtin_ffs(x) it return least significant digit index\r\n#define f(i, a, b) for (int i = a; i < b; i++)\r\n#define pi pair<int, int>\r\n#define endl \"\\n\"\r\n/*/---------------------------Constants taken----------------------/*/\r\n\r\nconst int N = 1e5 + 1;\r\nconst int mod = 1e9 + 7;\r\nconst int inf = 2e18;\r\n\r\n/*/---------------------------Formatter----------------------/*/\r\n\r\ntemplate <typename t1, typename t2>\r\nistream &operator>>(istream &istream, pair<t1, t2> &p)\r\n{\r\n    return (istream >> p.first >> p.second);\r\n}\r\n\r\ntemplate <typename t>\r\nistream &operator>>(istream &istream, vector<t> &v)\r\n{\r\n    for (auto &it : v)\r\n    {\r\n        cin >> it;\r\n    }\r\n    return istream;\r\n}\r\n\r\ntemplate <typename t1, typename t2>\r\nostream &operator<<(ostream &ostream, const pair<t1, t2> &p)\r\n{\r\n    return (ostream << p.first << \" \" << p.second);\r\n}\r\n\r\ntemplate <typename t>\r\nostream &operator<<(ostream &ostream, const vector<t> &c)\r\n{\r\n    for (auto &it : c)\r\n        cout << it << \" \";\r\n    return ostream;\r\n}\r\n\r\nstruct custom_hash\r\n{\r\n    static uint64_t splitmix64(uint64_t x)\r\n    {\r\n        // http://xorshift.di.unimi.it/splitmix64.c\r\n        x += 0x9e3779b97f4a7c15;\r\n        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n        return x ^ (x >> 31);\r\n    }\r\n\r\n    size_t operator()(uint64_t x) const\r\n    {\r\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n        return splitmix64(x + FIXED_RANDOM);\r\n    }\r\n};\r\n\r\n/*/-----------------------------Code begins----------------------------------/*/\r\n\r\nvoid prashantfunc()\r\n{\r\n    int n, m, k;\r\n    cin >> n >>m >>k;\r\n    string s; \r\n    cin>>s;\r\n    int x, y;\r\n    cin>>x>>y;\r\n    int i = m-1;\r\n    int ans1 = 0;\r\n    while(i<n){\r\n        if(s[i] == '0'){\r\n            ans1 += x;\r\n\r\n        }\r\n        i = i+k;\r\n    }\r\n    if(ans1 ==0){\r\n        cout<<ans1<<endl;\r\n        return;\r\n    }\r\n    else{\r\n        vector<int> ans(n + k, 0);\r\n        for (int i = n - 1; i >= 0; i--)\r\n        {\r\n            if (s[i] == '0')\r\n            {\r\n                ans[i] = ans[i + k] + 1;\r\n            }\r\n            else\r\n            {\r\n                ans[i] = ans[i + k];\r\n            }\r\n        }\r\n        int res = INT_MAX;\r\n        for (int i = 0; i < n-m+1; i++)\r\n        {\r\n            res = min(res, i * y + ans[i + m - 1] * x);\r\n        }\r\n        cout << res << endl;\r\n    }\r\n    \r\n\r\n    \r\n\r\n}\r\nint32_t main()\r\n{\r\n    // #ifndef ONLINE_JUDGE\r\n    // freopen(\"input.txt\", \"r\" , stdin);\r\n    // freopen(\"output.txt\", \"w\", stdout);\r\n    // #endif\r\n    fast int t = 1;\r\n    cin >> t;\r\n    // int c = 1;\r\n    while (t--)\r\n    {\r\n        prashantfunc();\r\n        // c++;\r\n    }\r\n}\r\n"
}