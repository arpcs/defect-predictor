{
    "id": 217456561,
    "contestId": 1781,
    "creationTimeSeconds": 1691326115,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1781,
        "index": "E",
        "name": "Rectangle Shrinking",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "greedy",
            "implementation",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1781,
        "members": [
            {
                "handle": "yongwhan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1673784300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 45,
    "timeConsumedMillis": 342,
    "memoryConsumedBytes": 10649600,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\n#include <ext/pb_ds/assoc_container.hpp>\nusing namespace __gnu_pbds;\ntemplate <class T>\nusing Tree = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\ntypedef long long ll;\ntypedef pair<int,int> ii;\n\nint main() {\n  ios::sync_with_stdio(0); cin.tie(0);cout.tie(0);\n  int t; cin>>t;\n  while(t--) {\n    int n; cin>>n;\n    vector<int> u(n), l(n), d(n), r(n);\n    for (int i=0; i<n; i++) cin>>u[i]>>l[i]>>d[i]>>r[i], l[i]--;\n    vector<int> p(n);\n    iota(p.begin(),p.end(),0);\n    sort(p.begin(),p.end(),[&](int i, int j) { return l[i]<l[j]; });\n    set<ii> st;\n    int ret=0, x=-1, y=-1;\n    for (int i : p) {\n      if(u[i]==1 && d[i]==2) {\n        if(x>=r[i]) u[i]=2;\n        if(y>=r[i]) d[i]=1;\n        if(u[i]>d[i]) continue;\n      }\n      if (u[i]==1 && d[i]==2) {\n        while(!st.empty()) {\n          auto it=prev(st.end());\n          if(it->first<l[i]) break;\n          r[it->second]=l[i], st.erase(it);\n        }\n        ret+=r[i]-max(l[i],x) + r[i]-max(l[i],y);\n        x=r[i], y=r[i], st.emplace(r[i],i);\n        continue;\n      }\n      if(u[i]==1) l[i]=max(l[i],x), x=max(x,r[i]);\n      else l[i]=max(l[i],y), y=max(y,r[i]);\n      if(l[i]<r[i]) ret+=r[i]-l[i], st.emplace(r[i],i);\n    }\n    cout<<ret<<\"\\n\";\n    for (int i=0; i<n; i++) {\n      l[i]++;\n      if(u[i]<=d[i] && l[i]<=r[i]) cout<<u[i]<<\" \"<<l[i]<<\" \"<<d[i]<<\" \"<<r[i]<<\"\\n\";\n      else cout<<\"0 0 0 0\\n\";\n    }\n  }\n  return 0;\n}\n"
}