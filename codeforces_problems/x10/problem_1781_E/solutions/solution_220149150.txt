{
    "id": 220149150,
    "contestId": 1781,
    "creationTimeSeconds": 1692880754,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1781,
        "index": "E",
        "name": "Rectangle Shrinking",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2300,
        "tags": [
            "binary search",
            "brute force",
            "data structures",
            "greedy",
            "implementation",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1781,
        "members": [
            {
                "handle": "leeminhduc2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1673784300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 45,
    "timeConsumedMillis": 186,
    "memoryConsumedBytes": 11468800,
    "source": "/// aureg109 orz\r\n#include <bits/stdc++.h>\r\n#define ll long long\r\n#define f first\r\n#define s second\r\n#define ii pair<int, int>\r\n#define sz(x) (int)(x).size()\r\n#define pb push_back\r\nusing namespace std;\r\ntemplate <class T1, class T2>\r\nbool maximize(T1 &a, T2 b) { return (a < b ? a = b, 1 : 0); };\r\ntemplate <class T1, class T2>\r\nbool minimize(T1 &a, T2 b) { return (a > b ? a = b, 1 : 0); };\r\n\r\nconst int N = 2e5 + 10;\r\nint type[N], l[N], r[N], n, l0[N], r0[N];\r\nvoid aureg109()\r\n{\r\n    cin >> n;\r\n    vector<ii> vec;\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        r[i] = -1;\r\n        int u, v, l1, r1;\r\n        cin >> u >> l1 >> v >> r1;\r\n        l0[i] = l1;\r\n        r0[i] = r1;\r\n        if (u == 1 && v == 2)\r\n            type[i] = 3;\r\n        else\r\n            type[i] = u;\r\n        vec.pb({l1, i});\r\n        vec.pb({r1 + 1, -i});\r\n    }\r\n    sort(vec.begin(), vec.end());\r\n    int res = 0;\r\n    int iu1 = 0, iu2 = 0, iu3 = 0, r1 = 0, r2 = 0, r3 = 0;\r\n    int prevval = vec[0].f;\r\n    for (auto [val, i] : vec)\r\n    {\r\n        \r\n        if (val != prevval)\r\n        {\r\n            if (iu3 || (iu1 && iu2))\r\n                res += 2 * (val - prevval);\r\n            else if (iu1 || iu2)\r\n                res += (val - prevval);\r\n            \r\n        }\r\n        if (i > 0)\r\n        {\r\n            if (iu3 || (iu1 && iu2))\r\n            {\r\n                if (type[i] == 1)\r\n                {\r\n                    if (iu1)\r\n                    {\r\n                        if (r0[iu1] < r0[i])\r\n                        {\r\n                            r[iu1] = val - 1;\r\n                            iu1 = i;\r\n                            l[iu1] = val;\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        if (r1 == 0)\r\n                            r1 = i;\r\n                        else if (r0[r1] < r0[i])\r\n                            r1 = i;\r\n                    }\r\n                }\r\n                else if (type[i] == 2)\r\n                {\r\n                    if (iu2)\r\n                    {\r\n                        if (r0[iu2] < r0[i])\r\n                        {\r\n                            r[iu2] = val - 1;\r\n                            iu2 = i;\r\n                            l[iu2] = val;\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        if (r2 == 0)\r\n                            r2 = i;\r\n                        else if (r0[r2] < r0[i])\r\n                            r2 = i;\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    if (iu3)\r\n                    {\r\n                        if (r0[i] > r0[iu3])\r\n                        {\r\n                            r[iu3] = val - 1;\r\n                            iu3 = i;\r\n                            l[iu3] = val;\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        if (r0[i]>=max(r0[iu1],r0[iu2]))\r\n                        {\r\n                            r[iu1]=val-1;\r\n                            r[iu2]=val-1;\r\n                            iu1=0;\r\n                            iu2=0;\r\n                            l[i]=val;\r\n                            iu3=i;\r\n                        }\r\n                        else if (r0[iu1] >= r0[iu2])\r\n                        {\r\n                            \r\n                                type[i] = 2;\r\n                                if (r0[i] > r0[iu2])\r\n                                {\r\n                                    r[iu2] = val - 1;\r\n                                    iu2 = i;\r\n                                    l[iu2] = val;\r\n                                }\r\n                            \r\n                        }\r\n                        else\r\n                        {\r\n                            \r\n                                type[i] = 1;\r\n                                if (r0[i] > r0[iu1])\r\n                                {\r\n                                    r[iu1] = val - 1;\r\n                                    iu1 = i;\r\n                                    l[iu1] = val;\r\n                                }\r\n                            \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (iu1==0 && iu2==0)\r\n            {\r\n                if (type[i] == 1)\r\n                    iu1 = i;\r\n\r\n                else if (type[i] == 2)\r\n                    iu2 = i;\r\n                else\r\n                    iu3 = i;\r\n                l[i] = val;\r\n                \r\n            }\r\n            else if (iu1)\r\n            {\r\n                if (type[i]==1)\r\n                {\r\n                    if (r0[iu1] < r0[i])\r\n                        {\r\n                            r[iu1] = val - 1;\r\n                            iu1 = i;\r\n                            l[iu1] = val;\r\n                        }\r\n                }\r\n                else if (type[i]==2)\r\n                {\r\n                    iu2=i;\r\n                    l[iu2]=val;\r\n                }\r\n                else if (type[i]==3)\r\n                {\r\n                    if (r0[iu1]>r0[i])\r\n                        {\r\n                            type[i]=2;\r\n                            l[i]=val;\r\n                            iu2=i;\r\n                        }\r\n                    else\r\n                    {\r\n                        r[iu1]=val-1;\r\n                        iu1=0;\r\n                        iu3=i;\r\n                        l[iu3]=val;\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                \r\n                if (type[i]==2)\r\n                {\r\n                    if (r0[iu2] < r0[i])\r\n                        {\r\n                            r[iu2] = val - 1;\r\n                            iu2 = i;\r\n                            l[iu2] = val;\r\n                        }\r\n                }\r\n                else if (type[i]==1)\r\n                {\r\n                    iu1=i;\r\n                    l[iu1]=val;\r\n                }\r\n                else if (type[i]==3)\r\n                {\r\n                    if (r0[iu2]>r0[i])\r\n                        {\r\n                            type[i]=1;\r\n                            l[i]=val;\r\n                            iu1=i;\r\n                        }\r\n                    else\r\n                    {\r\n                        r[iu2]=val-1;\r\n                        iu2=0;\r\n                        iu3=i;\r\n                        l[iu3]=val;\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n        else\r\n        {\r\n            i=-i;\r\n            if (type[i]==1)\r\n                {\r\n                    if (iu1==i)\r\n                    {\r\n                        r[iu1]=val-1;\r\n                        iu1=0;\r\n                    }\r\n                    else if (r1==i) r1=0;\r\n                }\r\n            else if (type[i]==2)\r\n            {\r\n                if (iu2==i)\r\n                {\r\n                    r[iu2]=val-1;\r\n                    iu2=0;\r\n                }\r\n                if (r2==i) r2=0;\r\n            }\r\n            else\r\n            {\r\n                if (iu3==i)\r\n                {\r\n                    r[iu3]=val-1;\r\n                    iu3=0;\r\n                \r\n                iu1=r1;\r\n                iu2=r2;\r\n                l[r1]=val;\r\n                l[r2]=val;\r\n                r1=0;\r\n                r2=0;\r\n            }\r\n            }\r\n            \r\n        }\r\n        \r\n        prevval=val;\r\n    }\r\n    cout <<res << \"\\n\";\r\n    for (int i=1;i<=n;i++) if (l[i]>r[i]) cout << \"0 0 0 0\\n\";\r\n    else if (type[i]==1) cout << \"1 \" << l[i] << \" 1 \" << r[i] << \"\\n\";\r\n    else if (type[i]==2) cout << \"2 \" << l[i] << \" 2 \" << r[i] << \"\\n\"; \r\n    else  cout << \"1 \" << l[i] << \" 2 \" << r[i] << \"\\n\"; \r\n    for (int i=1;i<=n;i++) l[i]=r[i]=0;\r\n    \r\n}\r\nsigned main()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int t;\r\n    cin >> t;\r\n    while (t--)\r\n        aureg109();\r\n}\r\n"
}