{
    "id": 221806135,
    "contestId": 342,
    "creationTimeSeconds": 1693827266,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 342,
        "index": "B",
        "name": "Xenia and Spies",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1500,
        "tags": [
            "brute force",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 342,
        "members": [
            {
                "handle": "bkifhr6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1378540800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 40,
    "timeConsumedMillis": 436,
    "memoryConsumedBytes": 9420800,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n#define int int64_t\n#define F first\n#define S second\n#define I insert\n#define PB push_back\n#define POB pop_back\n#define sqr(a) ((a) * (a))\n#define P pop\n#define max3(a, b, c) (max(a, max(b, c)))\n#define max4(a, b, c, d) (max(max(a, b), max(c, d)))\n#define min3(a, b, c) (min(a, min(b, c)))\n#define min4(a, b, c, d) (min(min(a, b), min(c, d)))\n#define MOD 1000000007\nint binpow(int a, int p, int mod = MOD) {\n    int ans = 1;\n    while (p) {\n        if (p & 1) ans = ((ans % mod) * (a % mod)) % mod;\n        a = sqr(a) % mod;\n        p >>= 1;\n    }\n    return ans;\n}\nvoid solve() {\n    int n, m, s, f;\n    cin >> n >> m >> s >> f;\n    int curstep = 1;\n    map<int, pair<int, int>> ac;\n    for (int i = 0; i < m; i++) {\n        int a, b, c;\n        cin >> a >> b >> c;\n        ac[a] = {b, c};\n    }\n    do {\n        if (ac[curstep] == make_pair(int(0), int(0)) ||\n            (ac[curstep].F > s || ac[curstep].S < s)) {\n            if (s > f) {\n                if (ac[curstep] == make_pair(int(0), int(0)) ||\n                    ac[curstep].S < s - 1 || ac[curstep].F > s - 1) {\n                    cout << 'L';\n                    s--;\n                } else\n                    cout << 'X';\n            } else {\n                if (ac[curstep] == make_pair(int(0), int(0)) ||\n                    ac[curstep].F > s + 1 || ac[curstep].S < s + 1) {\n                    cout << 'R';\n                    s++;\n                } else\n                    cout << 'X';\n            }\n        } else\n            cout << 'X';\n        if (s == f) break;\n    } while (curstep++);\n    cout << endl;\n}\nint32_t main() {\n    int t = 1;\n    // cin >> t;\n    while (t--) {\n        solve();\n    }\n}\n\n\t\t\t \t   \t \t   \t\t \t\t  \t   \t\t\t\t\t\t"
}