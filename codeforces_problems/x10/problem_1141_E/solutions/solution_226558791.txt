{
    "id": 226558791,
    "contestId": 1141,
    "creationTimeSeconds": 1696409258,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1141,
        "index": "E",
        "name": "Superhero Battle",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "math"
        ]
    },
    "author": {
        "contestId": 1141,
        "members": [
            {
                "handle": "zulfahmi1612"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1553006100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 91,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 1638400,
    "source": "#include <iostream>\r\n#include <functional>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\n#include <algorithm>\r\n#include <iomanip>\r\n#include <cstring>\r\n#include <numeric>\r\n#include <vector>\r\n#include <string>\r\n#include <array>\r\n#include <cmath>\r\n#include <queue>\r\n#include <stack>\r\n#include <tuple>\r\n#include <deque>\r\n#include <set>\r\n#include <map>\r\n#define X first \r\n#define Y second \r\n#define Int int64_t\r\n#define pb push_back\r\n#define pf push_front\r\n#define ld long double\r\n#define ll long long int\r\n#define ull unsigned long long int\r\n#define min_heap priority_queue<int, vector<int>, greater<int>>\r\n#define all(x) x.begin(), x.end()\r\n#define All(x) x.rbegin(), x.rend()\r\n#define Map unordered_map\r\n#define Set unordered_set\r\nusing namespace std;\r\n \r\ntemplate <typename T>\r\n    void printDebug(const T& x);\r\ntemplate <typename T, typename U>\r\n    void printDebug(const pair<T, U>& value);\r\ntemplate <typename T, typename... Args>\r\n    void printDebug(const T& value, Args... args);\r\ntemplate <typename... Args>\r\n    void Debug(Args... args);\r\ntemplate <typename K, typename V>\r\n    void Debug(const map<K, V>& container);\r\ntemplate <typename T>\r\n    void Debug(const set<T>& container);\r\ntemplate <typename T>\r\n    void Debug(const vector<T>& container);\r\n \r\nvoid FastIO();\r\nvoid FreeOpen();\r\nvoid UsacoOpen();\r\nint main(){\r\n \r\n    FastIO();\r\n    ll h,n,sum; cin >> h >> n;\r\n    vector<int> A(n), attack(n);\r\n\r\n    for(int &a : A) \r\n        cin >> a;\r\n\r\n    auto ans = [&]() -> ll {\r\n        sum = accumulate(all(A), 0LL);\r\n        if(sum >= 0){\r\n            for(int i = 0; i < n; i++){\r\n                h += A[i];\r\n                if(!h) return i + 1;\r\n            }\r\n\r\n            return -1;\r\n        }\r\n\r\n        for(int i = 1; i < n; i++)\r\n            A[i] += A[i - 1];\r\n        for(int i = 0; i < n; i++)\r\n            A[i] = -A[i];\r\n        \r\n        ll res(2e18), s;\r\n        sum = -sum;\r\n        for(int i = 0; i < n; i++){\r\n            if(A[i] >= h){\r\n                res = min(res, (ll)i + 1);\r\n                continue;\r\n            }\r\n\r\n            s = (h - A[i])/sum;\r\n\r\n            if(s*sum + A[i] < h)\r\n                s++;\r\n\r\n            res = min(res, max(0LL, s*n + i + 1));\r\n        }\r\n\r\n        return res;\r\n    };\r\n\r\n    cout << ans() << '\\n';\r\n\r\n    return 0;\r\n}\r\n \r\nvoid FastIO(){ ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); }\r\nvoid FreeOpen(){ freopen(\"input.txt\", \"r\", stdin); freopen(\"output.txt\", \"c\", stdout); }\r\ntemplate <typename T> void printDebug(const T& x){ cout << x; }\r\ntemplate <typename T, typename U>void printDebug(const pair<T, U>& value){ cout << \"(\"; printDebug(value.first); cout << \", \"; printDebug(value.second); cout << \")\"; }\r\ntemplate <typename T, typename... Args>void printDebug(const T& value, Args... args){printDebug(value); cout << \", \"; printDebug(args...); }\r\ntemplate <typename... Args> void Debug(Args... args){ cout << \"[\";  printDebug(args...); cout << \"]\\n\"; }\r\ntemplate <typename K, typename V> void Debug(const map<K, V>& container){ cout << '['; bool comma = 0; for(auto [k, v] : container){ if(comma) cout << \", \"; cout << '['; printDebug(k); cout << \", \"; printDebug(v); cout << ']'; comma = 1; } cout << \"]\\n\"; }\r\ntemplate <typename T> void Debug(const set<T>& container) { cout << '['; bool comma = 0; for (const auto& st : container) { if (comma) cout << \", \"; printDebug(st); comma = 1; } cout << \"]\\n\";}\r\ntemplate <typename T> void Debug(const vector<T>& container) { cout << '['; bool comma = 0; for (const auto& v : container){ if(comma) cout << \", \"; printDebug(v); comma = 1; } cout << \"]\\n\"; }\r\n"
}