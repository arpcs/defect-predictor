{
    "id": 218686044,
    "contestId": 1267,
    "creationTimeSeconds": 1691937314,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1267,
        "index": "I",
        "name": "Intriguing Selection",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation",
            "interactive",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1267,
        "members": [
            {
                "handle": "flowerletter"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1575183600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main() {\r\n\tint T;\r\n\tfor(std::cin >> T; T; T --) {\r\n\t\tint n;\r\n\t\tstd::cin >> n;\r\n\t\tstd::vector<std::vector<int>> que(3);\r\n\t\tfor(int i = 0; i < 2 * n; i ++) {\r\n\t\t\tque[i % 3].emplace_back(i);\r\n\t\t}\r\n\t\tstd::vector use(n, std::vector<int>(n)), ans = use;\r\n\t\tauto ask = [&] (int x, int y) {\r\n\t\t\tif(x == y) return 1;\r\n\t\t\tif(x > y) swap(x, y);\r\n\t\t\tif(use[x][y]) return ans[x][y];\r\n\t\t\tstd::cout << \"? \" << x + 1 << ' ' << y + 1 << std::endl;\r\n\t\t\tchar ch;\r\n\t\t\tstd::cin >> ch;\r\n\t\t\tuse[x][y] = 1;\r\n\t\t\treturn ans[x][y] = ch == '<'; \r\n\t\t};\r\n\t\tfor(auto vec : que) {\r\n\t\t\tsort(vec.begin(), vec.end(), [&] (int x, int y) {\r\n\t\t\t\treturn ask(x, y);\t\r\n\t\t\t});\r\n\t\t}\r\n\t\tfor(int i = 0; i < n; i ++) {\r\n\t\t\tvector<int> top;\r\n\t\t\tfor(int i = 0; i < 3; i ++) {\r\n\t\t\t\tif(que[i].size()) top.emplace_back(que[i].back());\r\n\t\t\t}\r\n\t\t\tsort(top.begin(), top.end(), [&] (int x, int y) {\r\n\t\t\t\treturn ask(x, y);\t\r\n\t\t\t});\r\n\t\t\tint cur = top.back();\r\n\t\t\tfor(int i = 0; i < 3; i ++) {\r\n\t\t\t\tif(que[i].size() && que[i].back() == cur) que[i].pop_back();\r\n\t\t\t}\r\n\t\t}\r\n\t\tstd::cout << \"!\" << std::endl;\r\n\t}\r\n\treturn 0;\r\n}"
}