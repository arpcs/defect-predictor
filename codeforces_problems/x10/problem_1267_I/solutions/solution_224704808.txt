{
    "id": 224704808,
    "contestId": 1267,
    "creationTimeSeconds": 1695451188,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1267,
        "index": "I",
        "name": "Intriguing Selection",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation",
            "interactive",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1267,
        "members": [
            {
                "handle": "TakasakiMisaki"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1575183600
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 82,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 0,
    "source": "// Hydro submission #650e883391d2ab1554d436e4@1695451187775\n#include <bits/stdc++.h>\r\nnamespace FileHeader {\r\n\tusing int16 = int16_t;\r\n\tusing int32 = int32_t;\r\n\tusing int64 = int64_t;\r\n\tusing uint32 = uint32_t;\r\n\tusing uint64 = uint64_t;\r\n\t#define ep emplace\r\n\t#define eb emplace_back\r\n\t#define all(x) x.begin(), x.end()\r\n\tFILE* fin, * fout, * ferr;\r\n\tint32 read() {\r\n\t\tint32 t = 0, f = 0;\r\n\t\tchar ch = fgetc(fin);\r\n\t\tfor (; !isdigit(ch); ch = fgetc(fin)) f ^= (ch == '-');\r\n\t\tfor (; isdigit(ch); ch = fgetc(fin)) t = (t << 1) + (t << 3) + (ch ^ 48);\r\n\t\treturn f ? -t : t;\r\n\t}\r\n\tclass Iterator {\r\n\t\tpublic:\r\n\t\t\tIterator(int32 _val = 0): _val(_val) {}\r\n\t\t\tbool operator !=(const Iterator &other) const { return this->_val != other._val; }\r\n\t\t\tint32 operator *() { return this->_val; }\r\n\t\t\tint32 operator ++() { return ++this->_val; }\r\n\t\tprivate:\r\n\t\t\tint32 _val;\r\n\t};\r\n\tclass Range {\r\n\t\tpublic:\r\n\t\t\tRange(int32 _l = 0, int32 _r = 0): _begin(_l), _end(_r + 1) {}\r\n\t\t\tIterator begin() { return Iterator(this->_begin); }\r\n\t\t\tIterator end() { return Iterator(this->_end); }\r\n\t\tprivate:\r\n\t\t\tint32 _begin, _end;\r\n\t};\r\n}\r\nusing namespace FileHeader;\r\nnamespace Solution_Of_CF1267I {\r\n\tbool _1;\r\n\tstatic const int32 N = 2 * 105;\r\n\tint32 n, ind[N];\r\n\tbool _2;\r\n\tbool query(int32 x, int32 y) {\r\n\t\tfprintf(fout, \"? %d %d\\n\", x, y);\r\n\t\tfflush(fout);\r\n\t\tchar ch = fgetc(fin);\r\n\t\twhile (ch != '<' && ch != '>') ch = fgetc(fin);\r\n\t\treturn ch == '>';\r\n\t}\r\n\tint32 opposite(int32 x) { return (x & 1) ? x + 1 : x - 1; }\r\n\tvoid solve() {\r\n\t\tn = read();\r\n\t\tfor (int32 i = 1; i <= 2 * n; i += 2)\r\n\t\t\tind[(i + 1) / 2] = query(i, i + 1) ? i + 1 : i;\r\n\t\tstd::sort(ind + 1, ind + n + 1, query);\r\n\t\tint32 min = ind[1], max = opposite(min);\r\n\t\tstd::iota(ind + 1, ind + 2 * n + 1, 1);\r\n\t\tstd::swap(ind[1], ind[max]);\r\n\t\tstd::swap(ind[2], ind[max == 2 ? 2 : min]);\r\n\t\tstd::sort(ind + 3, ind + 2 * n + 1, query);\r\n\t\tquery(ind[2], ind[n + 1]);\r\n\t\tfputs(\"!\\n\", fout), fflush(fout);\r\n\t\treturn void();\r\n\t}\r\n\tvoid main() {\r\n\t\tfin = stdin, fout = stdout, ferr = stderr;\r\n\t\tfprintf(ferr, \"This code use %.2lf MB memory\\n\", 1.0 * (&_1 - &_2) / 1024 / 1024);\r\n\t\tint32 t = read();\r\n\t\tint64 Start_Time_Without_Read = clock();\r\n\t\twhile (t--) solve();\r\n\t\tint64 End_Time_Without_Read = clock();\r\n\t\tfprintf(ferr, \"This code use %lld ms time\\n\", End_Time_Without_Read - Start_Time_Without_Read);\r\n\t\treturn void();\r\n\t}\r\n}\r\nsigned main() { return Solution_Of_CF1267I::main(), 0; }"
}