{
    "id": 234628366,
    "contestId": 1267,
    "creationTimeSeconds": 1701109655,
    "relativeTimeSeconds": 12335,
    "problem": {
        "contestId": 1267,
        "index": "I",
        "name": "Intriguing Selection",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "brute force",
            "constructive algorithms",
            "implementation",
            "interactive",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1267,
        "members": [
            {
                "handle": "pooty"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1701097320
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 307200,
    "source": "#ifdef MY_LOCAL\r\n#include \"D://competitive_programming/debug/debug.h\"\r\n#define debug(x) cerr << \"[\" << #x<< \"]:\"<<x<<\"\\n\"\r\n#else\r\n#define debug(x) \r\n#endif\r\n#define REP(i, n) for(int i = 0; i < (n); i ++)\r\n#define REPL(i,m, n) for(int i = (m); i < (n); i ++)\r\n#define SORT(arr) sort(arr.begin(), arr.end())\r\n#define LSOne(S) ((S)&-(S))\r\n#define sz(X) ((int)X.size())\r\n#define READ(arr) for(auto &a: arr){cin>>a;}\r\n#define SUM(arr) accumulate((arr).begin(), (arr).end(), 0LL)\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\ntypedef long long ll;\r\n#define int ll\r\ntypedef vector<int> vi;\r\ntypedef vector<vi> vvi;\r\ntypedef pair<int, int> ii;\r\ntypedef vector<ii> vii;\r\ntypedef vector<vii> vvii;\r\ntypedef tree<int,null_type,less<int>, rb_tree_tag, tree_order_statistics_node_update> ost;\r\nconst ll INF = 1e18;\r\n// is i greater than j...\r\n\r\nvvi saved;\r\n\r\nbool ask(int i, int j) {\r\n\tif (saved[i][j] == -1) {\r\n\t\tcout<<\"? \"<<i+1<<\" \"<<j+1<<endl;\r\n\t\tchar ch;cin>>ch;\r\n\t\tif (ch == '>') {\r\n\t\t\tsaved[i][j] = 1;\r\n\t\t} else {\r\n\t\t\tsaved[i][j] = 0;\r\n\t\t}\r\n\t}\r\n\treturn saved[i][j];\r\n}\r\nvoid complete() {\r\n\tcout<<\"!\"<<endl;\r\n\t\r\n}\r\nvoid solve() {\r\n\tint n;cin>>n;\r\n\tvii smallpairs;\r\n\tsaved.assign(2*n, vi(2*n, -1));\r\n\tvii pairings;\r\n\tREP(i, n) {\r\n\t\tif(ask(i, i+n) == 0){\r\n\t\t\t// i is smaller..\r\n\t\t\tpairings.push_back({i,i+n});\r\n\t\t}\r\n\t}\r\n\t// bubble sort it..\r\n\tREP(i, n-1) {\r\n\t\tREP(j, n-1) {\r\n\t\t\tif (ask(pairings[j].first, pairings[j+1].first)  == 1) {\r\n\t\t\t\tswap(pairings[j], pairings[j+1]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// \r\n\tvi currentrevchain;\r\n\tvi the_smalls;\r\n\tREP(i, n) {\r\n\t\tauto [small, big] = pairings[i];\r\n\t\twhile (!currentrevchain.empty()) {\r\n\t\t\tint v = ask(small, currentrevchain.back());\r\n\t\t\tif (v == 0) {\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tint p = currentrevchain.back();\r\n\t\t\t\tcurrentrevchain.pop_back();\r\n\t\t\t\tthe_smalls.push_back(p);\r\n\t\t\t\tif (sz(the_smalls) == n) {\r\n\t\t\t\t\tcomplete();return;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthe_smalls.push_back(small);\r\n\t\tif (sz(the_smalls) == n) {\r\n\t\t\tcomplete();return;\r\n\t\t}\r\n\r\n\t\t// now inser the big..\r\n\t\tcurrentrevchain.push_back(big);\r\n\t\tint ptr = sz(currentrevchain) - 2;\r\n\t\twhile (ptr != -1) {\r\n\t\t\tif (ask(currentrevchain[ptr], currentrevchain[ptr+1])) {\r\n\t\t\t\tswap(currentrevchain[ptr], currentrevchain[ptr+1]);\r\n\t\t\t\tptr--;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tassert(false);\r\n}\r\nsigned main()\r\n{\r\n\tint tc;cin>>tc;\r\n\tREP(i, tc) {\r\n\t\tsolve();\r\n\t}\r\n\r\n}"
}