{
    "id": 226768001,
    "contestId": 1635,
    "creationTimeSeconds": 1696522960,
    "relativeTimeSeconds": 1000,
    "problem": {
        "contestId": 1635,
        "index": "C",
        "name": "Differential Sorting",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1200,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1635,
        "members": [
            {
                "handle": "Khalwsh"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1696521960
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 32,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 11468800,
    "source": "#include<bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp> // Common file\r\n#include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n#define int long long\r\n#define line '\\n'\r\n#define khaled ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\nint dx[]{1,-1,0,0,1,1,-1,-1};\r\nint dy[]{0,0,1,-1,1,-1,1,-1};\r\nconst long double pi=3.14159265350979323846;\r\nconst long double eps=1e-9;\r\ntemplate<typename T>\r\nusing ordered_set=tree<T,null_type,less_equal<T>,rb_tree_tag,tree_order_statistics_node_update>;\r\nbool valid(long long i,long long j,long long n,long long m){return i>=0&&i<n&&j>=0&&j<m;}\r\nlong long mul(long long x,long long y,const long long&mod){return ((x%mod)*(y%mod))%mod;}\r\nlong long add(long long x,long long y,const long long&mod){return (((x%mod)+(y%mod))%mod+mod)%mod;}\r\nlong long fast_power(long long base,long long power,const long long &m=INT64_MAX){if (power == 1 || power == 0)return base * power + (!power);long long res = (fast_power(base, power / 2, m) % m) % m;if (power & 1)return mul(base,mul(res,res,m),m);else return mul(res,res,m);}\r\nint log2_floor(long long i) {return i ? __builtin_clzll(1) - __builtin_clzll(i) : 0;}\r\nint power_of_2(int n){ return __builtin_popcountll(n)==1;}\r\nconst int N=2e5+1;\r\nconst int mod=1e9+7;\r\n//const int mod = 998244353;\r\nconst long long inf=9e18;\r\n//__builtin_clzll(x): the number of zeros at the beginning of the number\r\n//__builtin_ctzll(x): the number of zeros at the end of the number\r\n//__builtin_popcountll(x): the number of ones in the number\r\n//__builtin_parityll(x): the parity (even or odd) of the number of ones\r\n/*=======================================================================================================*/\r\n/*==============================================  KHALWSH  ==============================================*/\r\n/*=======================================================================================================*/\r\nbool sorted(vector<int>&v){\r\n    for(int i=1;i<v.size();i++){\r\n        if(v[i]>=v[i-1])continue;\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nsigned main() {\r\n    khaled\r\n    int t;\r\n    cin>>t;\r\n    while(t--){\r\n        int n;\r\n        cin>>n;\r\n        vector<int>v(n);\r\n        for(auto &val:v)cin>>val;\r\n        if(sorted(v)){\r\n            cout<<0<<line;\r\n        }\r\n        else if(v[n-2]<=v[n-1]&&v[n-2]-v[n-1]<=v[n-2]){\r\n            vector<pair<int,pair<int,int>>>res;\r\n            for(int i=0;i<n-2;i++){\r\n                res.emplace_back(i+1, make_pair(n-1,n));\r\n            }\r\n            cout<<res.size()<<line;\r\n            for(auto &val:res)\r\n                cout<<val.first<<\" \"<<val.second.first<<\" \"<<val.second.second<<line;\r\n        }else{\r\n            cout<<-1<<line;\r\n        }\r\n    }\r\n}"
}