{
    "id": 231043517,
    "contestId": 472,
    "creationTimeSeconds": 1698964250,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 472,
        "index": "E",
        "name": "Design Tutorial: Learn from a Game",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2800,
        "tags": [
            "constructive algorithms",
            "implementation"
        ]
    },
    "author": {
        "contestId": 472,
        "members": [
            {
                "handle": "Sparkle_Twilight"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1411918500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 483,
    "memoryConsumedBytes": 6348800,
    "source": "#include <bits/stdc++.h>\r\n#define REP(a,b) for(int a=0; a<(b); ++a)\r\n#define FWD(a,b,c) for(int a=(b); a<(c); ++a)\r\n#define FWDS(a,b,c,d) for(int a=(b); a<(c); a+=d)\r\n#define BCK(a,b,c) for(int a=(b); a>(c); --a)\r\n#define x first\r\n#define y second\r\n#define pb push_back\r\n#define re real()\r\n#define im imag()\r\n\r\nusing namespace std;\r\n\r\ntypedef pair<int, int> PII;\r\n\r\nint n, m, a, b;\r\nint tmp[33][33];\r\nint source[33][33];\r\nint target[33][33];\r\nPII prv[33][33];\r\nbool block[33][33];\r\nvector<PII> R;\r\n\r\nint dx[] = {-1,-1,-1,0,0,1,1,1};\r\nint dy[] = {-1,0,1,-1,1,-1,0,1};\r\n\r\nvoid save(){\r\n\tFWD(i,0,n) FWD(j,0,m) tmp[i][j] = source[i][j];\r\n}\r\n\r\nvoid load(){\r\n\tR.clear();\r\n\tFWD(i,0,n) FWD(j,0,m) source[i][j] = tmp[i][j];\r\n}\r\n\r\nvoid check(){\r\n\tFWD(i,0,n) FWD(j,0,m) if(source[i][j] != target[i][j]) return;\r\n\tprintf(\"%d\\n\", (int)R.size()-1);\r\n\tfor(PII r : R) printf(\"%d %d\\n\", r.x+1, r.y+1);\r\n\texit(0);\r\n}\r\n\r\nvoid make(int x, int y){\r\n\tswap(source[R.back().x][R.back().y], source[x][y]);\r\n\tR.push_back(PII(x,y));\r\n\ta = x; b = y;\r\n}\r\n\r\nbool in(int x, int y){\r\n\treturn 0 <= x && x < n && 0 <= y && y < m && !block[x][y];\r\n}\r\n\r\nvoid path(int x, int y){\r\n\tFWD(i,0,n) FWD(j,0,m) prv[i][j] = PII(-1,-1);\r\n\tqueue<PII> Q;\r\n\tQ.push(PII(a,b));\r\n\tPII c = PII(x, y);\r\n\twhile(!Q.empty()){\r\n\t\tx = Q.front().x;\r\n\t\ty = Q.front().y;\r\n\t\tQ.pop();\r\n\t\tFWD(d,0,8){\r\n\t\t\tint nx = x+dx[d]; int ny = y+dy[d];\r\n\t\t\tif(in(nx, ny) && prv[nx][ny] == PII(-1,-1)){\r\n\t\t\t\tprv[nx][ny] = PII(x,y);\r\n\t\t\t\tQ.push(PII(nx, ny));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tstack<PII> S;\r\n\twhile(c != PII(a,b)){\r\n\t\tS.push(c);\r\n\t\tc = prv[c.x][c.y];\r\n\t}\r\n\twhile(!S.empty()){\r\n\t\tmake(S.top().x, S.top().y);\r\n\t\tS.pop();\r\n\t}\r\n}\r\n\r\nvoid setp(int i, int j){\r\n\tpath(i, j);\r\n\tPII s = PII(i,j);\r\n\tblock[i][j] = 1;\r\n\tFWD(p,0,n) FWD(q,0,m) if(!block[p][q] && source[p][q] == target[i][j]) s = PII(p,q);\r\n\tblock[i][j] = 0;\r\n\tif(s == PII(i,j)){\r\n\t\tprintf(\"-1\\n\");\r\n\t\texit(0);\r\n\t}\r\n\tfor(;;){\r\n\t\tpath(s.x, s.y);\r\n\t\ts = R[R.size()-2];\r\n\t\tif(PII(i,j) == s) break;\r\n\t\tblock[s.x][s.y] = 1;\r\n\t\tpath(i, j);\r\n\t\tblock[s.x][s.y] = 0;\r\n\t}\r\n\tblock[i][j] = 1;\r\n}\r\n\r\nint main(){\r\n\tscanf(\"%d %d\", &n, &m);\r\n\tFWD(i,0,n) FWD(j,0,m) scanf(\"%d\", &source[i][j]);\r\n\tFWD(i,0,n) FWD(j,0,m) scanf(\"%d\", &target[i][j]);\r\n\tsave();\r\n\tif(n == 1 || m == 1){\r\n\t\tFWD(s,0,max(n,m)){\r\n\t\t\tfor(int d=-1; d<=1; d+=2){\r\n\t\t\t\tload();\r\n\t\t\t\tR.push_back(PII(n==1?0:s,n==1?s:0));\r\n\t\t\t\tfor(int i=s+d;-1<i&&i<max(n,m);i+=d){\r\n\t\t\t\t\tmake(n==1?0:i,n==1?i:0);\r\n\t\t\t\t\tcheck();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"-1\\n\");\r\n\t\treturn 0;\r\n\t}\r\n\tFWD(i,0,n) FWD(j,0,m) if(source[i][j] == target[n-1][m-1]) a = i, b = j;\r\n\tR.push_back(PII(a,b));\r\n\tFWD(i,0,n-2)\r\n\t\tFWD(j,0,m)\r\n\t\t\tsetp(i, j);\r\n\tFWD(j,0,m-1){\r\n\t\tsetp(n-2,j);\r\n\t\tsetp(n-1,j);\r\n\t}\r\n\tcheck();\r\n\tif(a == n-1)\r\n\t\tmake(a-1, b);\r\n\telse\r\n\t\tmake(a+1, b);\r\n\tcheck();\r\n\tprintf(\"-1\\n\");\r\n\treturn 0;\r\n}"
}