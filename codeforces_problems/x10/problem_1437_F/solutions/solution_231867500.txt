{
    "id": 231867500,
    "contestId": 1437,
    "creationTimeSeconds": 1699401021,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1437,
        "index": "F",
        "name": "Emotional Fishermen",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1437,
        "members": [
            {
                "handle": "BittersweetHerb"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1603809300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 31,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 102400,
    "source": "#include <bits/stdc++.h>\r\n// #define int long long\r\n#define rep(i, j, k) for (int i = (j); i <= (k); i++)\r\n#define per(i, j, k) for (int i = (j); i >= (k); i--)\r\n#define ALL(x) (x).begin(), (x).end()\r\n#define rALL(x) (x).rbegin(), (x).rend()\r\n#define pb push_back\r\n#define mpr make_pair\r\nusing namespace std;\r\nusing pii = pair<int, int>;\r\nusing vi = vector<int>;\r\nint read() { int x = 0; char ch = 0; while (ch < '0' || ch > '9') ch = getchar(); while (ch >= '0' && ch <= '9') { x = (x << 1) + (x << 3) + (ch - '0'); ch = getchar(); } return x; }\r\nvoid write(int x) { static int sta[35]; int top = 0; do { sta[top++] = x % 10LL; x /= 10LL; } while (x); while (top) putchar(sta[--top] + 48); }\r\nvoid write(int x, char ch) { write(x); putchar(ch); }\r\ninline void cmax(int &x, int y) { if(y > x) x = y; }\r\ninline void cmin(int &x, int y) { if(y < x) x = y; }\r\nconst int N = 5010, MOD = 998244353;\r\nint n, a[N], lim[N], dp[N];\r\nint fac[N], inv[N], ifac[N];\r\nvoid precalc() {\r\n    fac[0] = ifac[0] = inv[0] = 1;\r\n    for(int i = 1; i < N; i++) {\r\n        fac[i] = 1LL * fac[i - 1] * i % MOD;\r\n        if(i == 1) inv[i] = 1; else inv[i] = 1LL * (MOD - MOD / i) * inv[MOD % i] % MOD;\r\n        ifac[i] = 1LL * ifac[i - 1] * inv[i] % MOD;\r\n    }\r\n}\r\nint A(int x, int y) {if(x < 0 || y < 0 || x < y) return 0; return 1LL * fac[x] * ifac[x - y] % MOD;}\r\nvoid solve() {\r\n    precalc();\r\n    n = read();\r\n    rep(i, 1, n) a[i] = read();\r\n    sort(a + 1, a + n + 1);\r\n    lim[0] = 0;\r\n    for(int i = 1; i <= n; i++) {\r\n        lim[i] = lim[i - 1];\r\n        while(lim[i] + 1 < i && a[lim[i] + 1] * 2 <= a[i]) lim[i]++;\r\n    }\r\n    lim[0] = -1;\r\n    dp[0] = 1;\r\n    for(int i = 1; i <= n; i++) {\r\n        for(int j = 0; j <= lim[i]; j++) {\r\n            dp[i] = (dp[i] + 1LL * dp[j] * A(n - 2 - lim[j], lim[i] - lim[j] - 1) % MOD) % MOD;\r\n        }\r\n    }\r\n    if(lim[n] == n - 1) write(dp[n], '\\n');\r\n    else puts(\"0\");\r\n}\r\nsigned main() {\r\n    // ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\r\n    int T = 1;\r\n    // T = read();\r\n    while(T--) solve();\r\n    return 0;\r\n}//15401685345349130769"
}