{
    "id": 231935806,
    "contestId": 1437,
    "creationTimeSeconds": 1699446850,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1437,
        "index": "F",
        "name": "Emotional Fishermen",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1437,
        "members": [
            {
                "handle": "earthworm"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1603809300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 31,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 16076800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\n#define pd push_back\r\n#define all(x) x.begin(),x.end()\r\n//==============================================================\r\nll QP(ll x,ll y,ll mod){ll ans=1;for(;y;y>>=1,x=x*x%mod)if(y&1)ans=ans*x%mod;return ans;}\r\nll inv(ll x,ll mod){return QP(x,mod-2,mod);}\r\n//==============================================================\r\nnamespace IO{\r\n\tint readInt(){\r\n\t\tint x=0,y=0;char c=0;\r\n\t\twhile(!isdigit(c))y|=c=='-',c=getchar();\r\n\t\twhile(isdigit(c))x=(x<<3)+(x<<1)+(c^48),c=getchar();\r\n\t\treturn !y?x:-x;\r\n\t}\r\n}\r\ntemplate<typename T> struct MyVector{\r\n\tvector<T> v;\r\n\tMyVector(){}\r\n\tMyVector(auto _v){v=_v;}\r\n\t//============================================================\r\n\tT operator [](const int &i)const{\r\n\t\tif(i>=v.size())return 0;\r\n\t\treturn v[i];\r\n\t}\r\n\tT &operator [](const int &i){\r\n\t\tif(i>=v.size())v.resize(i+1);\r\n\t\treturn v[i];\r\n\t}\r\n\tvoid operator += (MyVector<T> P){\r\n\t\tfor(auto y:P)v.pd(y);\r\n\t}\r\n\t//============================================================\r\n\tunsigned int size(){return v.size();}\r\n\tbool empty(){return v.empty();}\r\n\tvoid resize(int k){v.resize(k);}\r\n\tvoid clear(){vector<T>().swap((*this).v);}\r\n\t//============================================================\r\n\tvoid push_back(const T &x){v.pd(x);}\r\n\tvoid pop_back(){v.pop_back();}\r\n\tvoid push_front(const T &x){v.insert(v.begin(),x);}\r\n\tvoid pop_front(){v.erase(v.begin());}\r\n\t//============================================================\r\n\tauto begin(){return v.begin();}\r\n\tauto end(){return v.end();}\r\n\tauto back(){return v.back();}\r\n\t//============================================================\r\n\t//void debug(){printf(\"Debug:\");for(auto y:v)printf(\"%lld \",y);puts(\"\");}\r\n};\r\n//===============================================================\r\nconst int N=5e5+10;\r\nconst int mod=998244353;\r\nll fac[N],nfac[N];\r\nvoid init(){\r\n\tfac[0]=1;for(int i=1;i<=N-10;i++)fac[i]=fac[i-1]*i%mod;\r\n\tnfac[N-10]=inv(fac[N-10],mod);for(int i=N-11;~i;i--)nfac[i]=nfac[i+1]*(i+1)%mod;\r\n}\r\nll A(ll x,ll y){\r\n\treturn x<0||y<0||x<y?0:fac[x]*nfac[x-y]%mod;\r\n}\r\nint B[N],pos[N]; \r\nint n;\r\nll f[N];\r\nint main(){\r\n\t//freopen(\".in\",\"r\",stdin);\r\n\t//freopen(\".out\",\"w\",stdout);\r\n\tinit();\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=1;i<=n;i++)scanf(\"%d\",&B[i]);\r\n\tint P=1;\r\n\tsort(B+1,B+n+1);\r\n\tfor(int i=1;i<=n;i++){\r\n\t\twhile(P<=n&&B[P]*2<=B[i])P++;\r\n\t\tpos[i]=P-1;\r\n\t}\r\n\tf[0]=1;pos[0]=-1;\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tfor(int j=0;j<=pos[i];j++)\r\n\t\t\tf[i]=(f[i]+f[j]*A(n-pos[j]-2,pos[i]-pos[j]-1))%mod;\r\n\tprintf(\"%lld\\n\",pos[n]==n-1?f[n]:0ll);\r\n\treturn 0;\r\n}\r\n\r\n//16505989211554565979"
}