{
    "id": 236459142,
    "contestId": 505,
    "creationTimeSeconds": 1702105498,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 505,
        "index": "D",
        "name": "Mr. Kitayuta's Technology",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar"
        ]
    },
    "author": {
        "contestId": 505,
        "members": [
            {
                "handle": "liwuyou"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1421586000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 50,
    "timeConsumedMillis": 296,
    "memoryConsumedBytes": 29286400,
    "source": "// LUOGU_RID: 138867177\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int N = 1145141;\r\n\r\nint fa[N], vis[N], in[N];\r\nvector<int> g[N];\r\n\r\nint Find(const int &x) {\r\n  return (fa[x] == x ? x : (fa[x] = Find(fa[x])));\r\n}\r\n\r\nvoid Merge(int x, int y) {\r\n  if((x = Find(x)) ^ (y = Find(y))) {\r\n    fa[x] = y;\r\n  }\r\n}\r\n\r\nint main() {\r\n  int n, m;\r\n  cin >> n >> m;\r\n  for(int i = 1; i <= n; i++) {\r\n    fa[i] = i;\r\n  }\r\n  while(m--) {\r\n    int u, v;\r\n    cin >> u >> v;\r\n    g[u].push_back(v);\r\n    Merge(u, v);\r\n    in[v]++;\r\n  }\r\n  int ans = n;\r\n  for(int i = 1; i <= n; i++) {\r\n    fa[i] = Find(i);\r\n    ans -= (vis[fa[i]] == 0);\r\n    vis[fa[i]] = 1;\r\n  }\r\n  queue<int> q;\r\n  for(int i = 1; i <= n; i++) {\r\n    if(!in[i]) {\r\n      q.push(i);\r\n    }\r\n  }\r\n  while(!q.empty()) {\r\n    int u = q.front();\r\n    q.pop();\r\n    for(int v : g[u]) {\r\n      in[v]--;\r\n      if(!in[v]) {\r\n        q.push(v);\r\n      }\r\n    }\r\n  }\r\n  for(int i = 1; i <= n; i++) {\r\n    if(in[i]) {\r\n      ans += vis[fa[i]];\r\n      vis[fa[i]] = 0;\r\n    }\r\n  }\r\n  cout << ans;\r\n}\r\n"
}