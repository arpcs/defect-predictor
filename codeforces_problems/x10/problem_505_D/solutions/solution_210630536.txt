{
    "id": 210630536,
    "contestId": 505,
    "creationTimeSeconds": 1687420958,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 505,
        "index": "D",
        "name": "Mr. Kitayuta's Technology",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar"
        ]
    },
    "author": {
        "contestId": 505,
        "members": [
            {
                "handle": "SomeCleverName"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1421586000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 3481600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n \r\nusing ll = long long;\r\nusing ull = unsigned long long;\r\nusing pii = pair<int, int>;\r\nusing pll = pair<ll, ll>;\r\nusing str = string;\r\nusing ld = long double;\r\nusing db = double;\r\n\r\n///--------------------------------\r\n\r\n#define           F   first\r\n#define           S   second\r\n#define          pb   push_back\r\n#define       sz(x)   (int)((x).size())\r\n#define      all(x)   (x).begin(), (x).end()\r\n#define     rall(x)   (x).rbegin(), (x).rend()\r\n#define   mem(f, x)   memset(f, x, sizeof(f))\r\n\r\ntemplate<class T> bool maximize(T &a, const T &b){ return (a < b ? a = b, 1 : 0); }\r\ntemplate<class T> bool minimize(T &a, const T &b){ return (a > b ? a = b, 1 : 0); }\r\n\r\n///--------------------------------\r\n\r\n#define PROBLEM \"test\"\r\n\r\nconst int MOD = 1e9 + 7; // 998244353;\r\nconst ll INF = 1e18;\r\nconst ld eps = 1e-9;\r\nconst ld PI = acos(-1);\r\nconst int dx[4]{0, 1, 0, -1}, dy[4]{1, 0, -1, 0}; // R D L U\r\nconst int ddx[4]{-1, 1, 1, -1}, ddy[4]{1, 1, -1, -1}; // UR DR DL UL\r\n\r\n///--------------------------------\r\n\r\nvoid precalc();\r\nvoid solve();\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0); cout.tie(0);\r\n    \r\n    if (fopen(PROBLEM\".inp\", \"r\")) {\r\n        freopen(PROBLEM\".inp\", \"r\", stdin);\r\n        freopen(PROBLEM\".out\", \"w\", stdout);\r\n    }\r\n\r\n    constexpr bool MULTI_TEST = 0;\r\n\r\n    int t = 1;\r\n    if (MULTI_TEST) cin >> t;\r\n    while (t--)\r\n        solve();\r\n\r\n    // cerr << setprecision(3) << fixed;\r\n    // cerr << \"[\" << 1.0 * clock() / CLOCKS_PER_SEC << \"s]  \";\r\n}\r\n\r\n///--------------------[PROBLEM SOLUTION]--------------------///\r\n\r\nconst int maxn = 1e5 + 15;\r\nvector<ll> adj[maxn];\r\nll id[maxn], nComp = 0;\r\nbool vis[maxn], mark[maxn];\r\n\r\nvoid dfs(int u) {\r\n    id[u] = nComp;\r\n\r\n    vis[u] = true;\r\n    for (int v : adj[u])\r\n        if (!vis[v])\r\n            dfs(v);       \r\n}\r\n\r\nvoid solve() {\r\n    ll n, m;\r\n    cin >> n >> m;\r\n\r\n    map<pll, ll> cnt;\r\n    vector<pll> edge(m);\r\n    for (int i = 0; i < m; i++) {\r\n        ll u, v;\r\n        cin >> u >> v;\r\n\r\n        adj[u].pb(v), adj[v].pb(u);\r\n\r\n        edge[i] = {u, v};\r\n        cnt[{u, v}]++;\r\n    }\r\n\r\n    mem(vis, false);\r\n    for (int i = 1; i <= n; i++) \r\n        if (!vis[i]) \r\n            nComp++, dfs(i);\r\n\r\n    ll res = n - nComp;\r\n\r\n    mem(mark, false);\r\n    for (int i = 0; i < m; i++) {\r\n        if (cnt[{edge[i].S, edge[i].F}]) {\r\n            res += (!mark[id[edge[i].F]]);\r\n            mark[id[edge[i].F]] = true;\r\n        }\r\n    }\r\n\r\n    cout << res << '\\n';\r\n}   "
}