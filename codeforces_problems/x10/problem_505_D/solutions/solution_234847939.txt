{
    "id": 234847939,
    "contestId": 505,
    "creationTimeSeconds": 1701204823,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 505,
        "index": "D",
        "name": "Mr. Kitayuta's Technology",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar"
        ]
    },
    "author": {
        "contestId": 505,
        "members": [
            {
                "handle": "TimaDegt"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1421586000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 50,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 6860800,
    "source": "//\\\r\n     \u0161\u0165astia pre n\u00e1s :)\r\n//   you're already the best\r\n//             _\r\n//   ^ ^      //\r\n// >(O_O)<___//\r\n//   \\ __ __  \\\r\n//    \\\\ \\\\ \\\\\\\\\r\n \r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n \r\n//#pragma GCC optimize(\"O3\",\"unroll-loops\")\r\n//#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\r\n \r\n#pragma GCC optimize(\"O3\")\r\n#pragma GCC target(\"avx2,popcnt\")\r\n \r\nusing ll = long long;\r\n//#define int long long\r\n//#define double long double\r\n#define forn(i,n) for(int i=0; i<(n); ++i)\r\n#define pb push_back\r\n#define pi pair<int,int>\r\n#define f first\r\n#define s second \r\n#define vii(a,n) vector<int> a(n); forn(i,n) cin>>a[i];\r\n#define all(x) x.begin(), x.end()\r\n#define rall(x) x.rbegin(), x.rend()\r\n \r\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\r\nconst int inf = 1e18;\r\nconst int mod = 1e9+7;//998244353;\r\n \r\n// \\\r\n\\\r\n:smiling_face_with_3_hearts: :smiling_face_with_3_hearts:  :smiling_face_with_3_hearts:  \r\n \r\n//vidime sa ve\u013emi skoro, moje slnko\r\n \r\nstruct DSU {\r\n\tvector<int> p,sz,z;\r\n\tDSU(int n) {\r\n\t\tforn(i,n) p.pb(i), sz.pb(1);\r\n\t}\r\n\tint get(int u) {\r\n\t\treturn (p[u]==u)?u:get(p[u]);\r\n\t}\r\n\tvoid uni(int u, int v) {\r\n\t\tu=get(u), v=get(v);\r\n\t\tif (u==v) return;\r\n\t\tif (sz[u] < sz[v]) swap(u,v);\r\n\t\tsz[u]+=sz[v];\r\n\t\tp[v]=u;\r\n\t}\r\n};\r\n \r\nconst int N=1e5;\r\nDSU dsu(N);\r\nvector<int> adj[N];\r\nint vis[N];\r\nint cyc[N];\r\n \r\nvoid dfs(int u) {\r\n\tif (vis[u]) {\r\n\t\tif (vis[u]==1) cyc[dsu.get(u)]=1;\r\n\t\treturn;\r\n\t}\r\n\tvis[u]=1;\r\n\tfor(auto&v:adj[u]) dfs(v);\r\n\tvis[u]=2;\r\n}\r\n \r\nvoid solve() {\r\n        \r\n\tint n,m; cin>>n>>m;\r\n\t\r\n\tint ans=n;\r\n\tforn(i,m) {\r\n\t\tint u,v; cin>>u>>v; dsu.uni(u-1,v-1);\r\n\t\tadj[u-1].pb(v-1);\r\n\t}\r\n\tvector<int> ok(n,0);\r\n\tforn(i,n) if (!vis[i]) dfs(i);\r\n\tforn(i,n) {\r\n\t\tint p=dsu.get(i);\r\n\t\tif (ok[p]) continue;\r\n\t\tok[p]=1;\r\n\t\tans-=!cyc[p];\r\n\t}\r\n\tcout<<ans;\r\n \r\n}\r\n \r\nint32_t main() {\r\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n    int t=1;\r\n    //cin>>t;\r\n    while (t--) solve();\r\n    return 0;\r\n}"
}