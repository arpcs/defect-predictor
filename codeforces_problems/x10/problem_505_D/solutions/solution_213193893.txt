{
    "id": 213193893,
    "contestId": 505,
    "creationTimeSeconds": 1689031593,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 505,
        "index": "D",
        "name": "Mr. Kitayuta's Technology",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2200,
        "tags": [
            "dfs and similar"
        ]
    },
    "author": {
        "contestId": 505,
        "members": [
            {
                "handle": "ReStoic"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1421586000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include \"bits/stdc++.h\"\n\n#define TextIO freopen(\"input.txt\", \"r\", stdin); freopen(\"output.txt\", \"w\", stdout)\n#define popcount(x) __builtin_popcount(x)\n#define ctz(x) __builtin_ctz(x)\n \nusing namespace std;\nusing uint = unsigned int;\nusing ullong = unsigned long long int;\nusing llong = long long;\n\nbool *v, *mark, *base, isScc;\nllong *index, *root, num;\nvector<llong> stc;\nllong ans;\n\nvoid dfs1(llong i, vector<llong> *g){\n\tif(index[i]>0) return;\n\tindex[i] = ++num; root[i] = num;\n\tv[i] = 1; stc.push_back(i);\n\tfor(auto c: g[i]){\n\t\tdfs1(c, g);\n\t\tif(v[c]) root[i] = min(root[i], root[c]);\n\t}\n\tif(root[i]==index[i]){\n\t\tllong x = 0;\n\t\twhile(*stc.rbegin()!=i) { \n\t\t\tv[*stc.rbegin()] = 0; \n\t\t\troot[*stc.rbegin()] = root[i];\n\t\t\tstc.pop_back();\n\t\t\t++x;\n\t\t} \n\t\t\n\t\tv[i] = 0; stc.pop_back();\n\t\tbase[i] = 1;\n\t\troot[i] = x;\n\t}\n}\n\nvoid dfs2(llong i, vector<llong> *ug){\n\tif(v[i]) return;\n\tv[i] = 1;\n\tif(root[i]>0) isScc = 1;\n\tfor(auto& c: ug[i]){\n\t\tif(v[c]) continue;\n\t\tdfs2(c, ug);\n\t}\n\tstc.push_back(i);\n}\n\nvoid solve(){\n\tllong n, m; cin>>n>>m;\n\tvector<llong> g[n];\n\tfor(llong i=0;i<m;++i) {\n\t\tllong a, b; cin>>a>>b; \n\t\t--a; --b;\n\t\tg[a].push_back(b);\n\t}\n\tv = new bool[n] {0}; mark = new bool[n] {0};\n\tindex = new llong[n] {0}; root = new llong[n] {0};\n\tnum = 0; ans = 0;\n\tbase = new bool[n]{0};\n\tfor(llong i=0;i<n;++i) dfs1(i, g);\n\n\tvector<llong> ug[n];\n\tfor(llong i=0;i<n;i++){\n\t\tif(!base[i]) continue;\n\t\tfor(auto c: g[i]) {\n\t\t\tif(!base[c]) continue;\n\t\t\tug[i].push_back(c);\n\t\t\tug[c].push_back(i);\n\t\t}\n\t}\n\t\n\tmemset(v, 0, n);\n\tfor(llong i=0;i<n;++i) { \n\t\tif(v[i] || !base[i]) continue;\n\t\tisScc = 0;\n\t\tdfs2(i, ug);\n\t\twhile(stc.size()){\n\t\t\tans += root[*stc.rbegin()] + 1;\n\t\t\tstc.pop_back();\n\t\t}\n\t\tif(!isScc) {\n\t\t\t--ans;\n\t\t}\n\t}\n\tcout<<ans<<'\\n';\n\tdelete[] v, mark, base, index, root;\n}\n \nllong main(){\n\t//ios_base::sync_with_stdio(false);\n\t//cin.tie(NULL);\n\tllong t=1; //cin>>t;\n\twhile(t--){\n\t\tsolve();\n\t}\n\t#ifndef ONLINE_JUDGE\n\tstd::cout<<\"\\nExecuted.\\n\";\n\twhile(1);\n\t#endif\n\treturn 0;\n}"
}