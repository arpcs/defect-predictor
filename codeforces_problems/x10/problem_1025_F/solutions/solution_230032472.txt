{
    "id": 230032472,
    "contestId": 1025,
    "creationTimeSeconds": 1698418148,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1025,
        "index": "F",
        "name": "Disjoint Triangles",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2700,
        "tags": [
            "geometry"
        ]
    },
    "author": {
        "contestId": 1025,
        "members": [
            {
                "handle": "mr.kolya"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1534685700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 312,
    "memoryConsumedBytes": 26316800,
    "source": "#pragma GCC optimize(\"O3\")\r\n#pragma GCC optimize(\"unroll-loops\")\r\n#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <string>\r\n#include <map>\r\n#include <set>\r\n#include <array>\r\n#include <random>\r\n#include <iomanip>\r\n#include <cassert>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef long long ld;\r\n#define all(a) a.begin(), a.end()\r\n#define rall(a) a.rbegin(), a.rend()\r\nmt19937_64 rnd(228228227);\r\nlong double pi = 3.1415926535897932384626433832795;\r\nld INF = 1e18;\r\nstruct pt {\r\n    ld x, y;\r\n    pt() :x(0), y(0) {\r\n    }\r\n    pt(ld x, ld y) :x(x), y(y) {\r\n    }\r\n\r\n    ld operator*(pt b) {\r\n        return x * b.x + y * b.y;\r\n    }\r\n    ld operator%(pt b) {\r\n        return x * b.y - b.x * y;\r\n    }\r\n    pt operator+(pt b) {\r\n        return { x + b.x, y + b.y };\r\n    }\r\n    pt operator-(pt b) {\r\n        return { x - b.x,y - b.y };\r\n    }\r\n    pt operator*(ld b) {\r\n        return { x * b, y * b };\r\n    }\r\n    bool operator==(pt b) {\r\n        return (x == b.x && y == b.y);\r\n    }\r\n};\r\n\r\nstruct sec {\r\n    pt a, b;\r\n    sec(pt a1, pt b1) : a(a1), b(b1) {\r\n    }\r\n};\r\nld eps = 1e-10;\r\nstruct line {\r\n    ld a, b, c;\r\n    line() :a(0), b(0), c(0) {\r\n    }\r\n    line(pt v, pt u) {\r\n        if (v.y == u.y) {\r\n            a = 0;\r\n            b = 1;\r\n        }\r\n        else if (v.x == u.x) {\r\n            b = 0;\r\n            a = 1;\r\n        }\r\n        else {\r\n            a = (v.y - u.y) / (u.x - v.x);\r\n            b = 1;\r\n        }\r\n        c = -(a * v.x + b * v.y);\r\n\r\n        assert(abs(a * u.x + b * u.y + c) < 1e-3);\r\n    }\r\n    ld f(pt z) {\r\n        return a * z.x + b * z.y + c;\r\n    }\r\n    ld ret_y(ld x) {\r\n        assert(abs(b) > 1e-3);\r\n        return -(a * x + c) / b;\r\n    }\r\n};\r\n\r\nsec ray(pt u, pt v) {\r\n    pt b, e;\r\n    b = u;\r\n    line z(u, v);\r\n    if (u.x < v.x) {\r\n        e.x = INF;\r\n    }\r\n    else if (u.x > v.x) {\r\n        e.x = -INF;\r\n    }\r\n\r\n    if (u.x == v.x) {\r\n        e.x = u.x;\r\n        if (u.y < v.y) {\r\n            e.y = INF;\r\n        }\r\n        else {\r\n            e.y = -INF;\r\n        }\r\n    }\r\n    else {\r\n        e.y = z.ret_y(e.x);\r\n    }\r\n    return sec(b, e);\r\n}\r\n\r\n\r\nsec line_to_sec(pt a, pt b) {\r\n    sec r1 = ray(a, b);\r\n    sec r2 = ray(b, a);\r\n    return sec(r1.b, r2.b);\r\n}\r\n\r\nistream& operator>>(istream& stream, pt& v) {\r\n    return stream >> v.x >> v.y;\r\n}\r\nostream& operator<<(ostream& stream, pt v) {\r\n    return stream << v.x << \" \" << v.y << \"\\n\";\r\n}\r\ntemplate<typename T>\r\nistream& operator>>(istream& stream, vector<T>& v) {\r\n    for (auto& c : v) {\r\n        stream >> c;\r\n    }\r\n    return stream;\r\n}\r\ntemplate<typename T>\r\nostream& operator<<(ostream& stream, vector<T>& v) {\r\n    for (auto& c : v) {\r\n        stream << c << \" \";\r\n    }\r\n    stream << \"\\n\";\r\n    return stream;\r\n}\r\n\r\nint sign(ld a) {\r\n    if (a < 0) {\r\n        return -1;\r\n    }\r\n    else if (a > 0) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\ntemplate <class T>\r\nld sqr(T a) {\r\n    return a * a;\r\n}\r\n\r\nld alpha(pt a, pt b) {\r\n    return abs(atan2(a % b, a * b));\r\n}\r\n\r\nld dist(pt a, pt b) {\r\n    return sqrt(sqr(a - b));\r\n}\r\n\r\nld dist(pt a, line b) {\r\n    return abs(b.f(a) / sqrt(sqr(b.a) + sqr(b.b)));\r\n}\r\n\r\nld dist(line a, pt b) {\r\n    return dist(b, a);\r\n}\r\n\r\nld dist(pt a, sec b) {\r\n    ld ret = min(dist(a, b.a), dist(a, b.b));\r\n    if (alpha(b.b - b.a, a - b.a) < pi / 2 && alpha(b.a - b.b, a - b.b) < pi / 2) {\r\n        ret = min(ret, dist(a, line(b.a, b.b)));\r\n    }\r\n    return ret;\r\n}\r\n\r\nld dist(sec a, pt b) {\r\n    return dist(b, a);\r\n}\r\n\r\nld dist(sec a, sec b) {\r\n    pt c = a.b - a.a;\r\n    pt d = b.b - b.a;\r\n    if (sign((b.a - a.a) % c) == sign(c % (b.b - a.a)) &&\r\n        sign((a.a - b.a) % d) == sign(d % (a.b - b.a))) {\r\n        if (sign((b.a - a.a) % c) == 0) {\r\n            if ((b.a - a.a) * (b.b - a.a) < 0 ||\r\n                (b.a - a.b) * (b.b - a.b) < 0 ||\r\n                (a.a - b.a) * (a.b - b.a) < 0 ||\r\n                (a.a - b.b) * (a.b - b.b) < 0) {\r\n                return 0;\r\n            }\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    return min({ dist(a.a, b), dist(a.b, b), dist(a, b.a), dist(a, b.b) });\r\n}\r\n\r\nld dist(sec a, line b) {\r\n    if (sign(b.f(a.a)) != sign(b.f(a.b))) {\r\n        return 0;\r\n    }\r\n    return min(dist(a.a, b), dist(a.b, b));\r\n}\r\n\r\nld dist(line a, sec b) {\r\n    return dist(b, a);\r\n}\r\nld dist(line a, line b) {\r\n    ld a1 = a.a, b1 = a.b, c1 = a.c;\r\n    ld a2 = b.a, b2 = b.b, c2 = b.c;\r\n\r\n    if (abs(b1 / a1 - b2 / a2) > eps) {\r\n        return 0;\r\n    }\r\n    return abs(c1 / sqrt(sqr(a1) + sqr(b1)) - c2 / sqrt(sqr(a2) + sqr(b2)));\r\n}\r\nvector<pt> revec(vector<pt> t, int j) {\r\n    int n = t.size();\r\n    vector<pt> ret;\r\n    for (int i = j; i < n; i++) {\r\n        ret.push_back(t[i]);\r\n    }\r\n    for (int i = 0; i < j; i++) {\r\n        ret.push_back(t[i]);\r\n    }\r\n    return ret;\r\n}\r\n\r\nvector<pt> fun(vector<pt> v) {\r\n    int n = v.size();\r\n    pt p = v[0];\r\n    vector<pt> ret;\r\n    for (int i = 1; i < n; i++) {\r\n        pt a = v[i];\r\n        ret.push_back(a - p);\r\n        p = a;\r\n    }\r\n    ret.push_back(v[0] - p);\r\n    return ret;\r\n}\r\n\r\n\r\nvector<pt> hull;\r\nint l1, r1;\r\nbool solve1(line li, int l, int r) {\r\n    if (sign(li.f(hull[l])) != sign(li.f(hull[r]))\r\n        || sign(li.f(hull[l])) == 0 || sign(li.f(hull[r])) == 0) {\r\n        return true;\r\n    }\r\n    bool is_mi = !(sign(li.f(hull[l])) == 1);\r\n    if (is_mi) {\r\n        while (r - l > 2) {\r\n            int ml = (r + 2 * l) / 3;\r\n            int mr = (2 * r + l) / 3;\r\n            if (li.f(hull[ml]) < li.f(hull[mr])) {\r\n                r = mr;\r\n            }\r\n            else {\r\n                l = ml;\r\n            }\r\n        }\r\n        for (int j = l; j <= r; j++) {\r\n            if (sign(li.f(hull[j])) >= 0) {\r\n                return true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        while (r - l > 2) {\r\n            int ml = (r + 2 * l) / 3;\r\n            int mr = (2 * r + l) / 3;\r\n            if (li.f(hull[ml]) < li.f(hull[mr])) {\r\n                l = ml;\r\n            }\r\n            else {\r\n                r = mr;\r\n            }\r\n        }\r\n        for (int j = l; j <= r; j++) {\r\n            if (sign(li.f(hull[j])) <= 0) {\r\n                return true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    l1 = l;\r\n    r1 = r;\r\n    return false;\r\n}\r\n\r\nbool solve(line li, int l, int r) {\r\n    if (sign(li.f(hull[l])) != sign(li.f(hull[r]))\r\n        || sign(li.f(hull[l])) == 0 || sign(li.f(hull[r])) == 0) {\r\n        return true;\r\n    }\r\n    bool is_mi = (sign(li.f(hull[l])) == 1);\r\n    if (is_mi) {\r\n        while (r - l > 2) {\r\n            int ml = (r + 2 * l) / 3;\r\n            int mr = (2 * r + l) / 3;\r\n            if (li.f(hull[ml]) < li.f(hull[mr])) {\r\n                r = mr;\r\n            }\r\n            else {\r\n                l = ml;\r\n            }\r\n        }\r\n        for (int j = l; j <= r; j++) {\r\n            if (sign(li.f(hull[j])) <= 0) {\r\n                return true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        while (r - l > 2) {\r\n            int ml = (r + 2 * l) / 3;\r\n            int mr = (2 * r + l) / 3;\r\n            if (li.f(hull[ml]) < li.f(hull[mr])) {\r\n                l = ml;\r\n            }\r\n            else {\r\n                r = mr;\r\n            }\r\n        }\r\n        for (int j = l; j <= r; j++) {\r\n            if (sign(li.f(hull[j])) >= 0) {\r\n                return true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n    //cout << fixed << setprecision(20);\r\n    \r\n    int n;\r\n    cin >> n;\r\n    vector<pt> p(n);\r\n    cin >> p;\r\n    sort(all(p), [](pt& a, pt& b) ->bool {\r\n        if (a.y == b.y) return a.x < b.x;\r\n        return a.y < b.y;\r\n        });\r\n    vector<int> pos(n);\r\n    for (int i = 0; i < n; i++) {\r\n        pos[i] = i;\r\n    }\r\n    vector<pair<int, int>> sec;\r\n    for (int i = 0; i < n; i++) {\r\n        for (int j = i + 1; j < n; j++) {\r\n            sec.push_back({ i, j });\r\n        }\r\n    }\r\n    sort(all(sec), [&](pair<int, int> a, pair<int, int> b)->bool {\r\n        pt f = p[a.second] - p[a.first];\r\n        pt s = p[b.second] - p[b.first];\r\n        return f.x * s.y > s.x * f.y;\r\n        });\r\n    ll ans = 0;\r\n    for (int i = 0; i < sec.size(); i++) {\r\n        swap(pos[sec[i].first], pos[sec[i].second]);\r\n        ll a = min(pos[sec[i].first], pos[sec[i].second]);\r\n        ll b = n * 1ll - max(pos[sec[i].first], pos[sec[i].second]) - 1;\r\n        ans += (a * (a - 1) / 2) * (b * (b - 1) / 2);\r\n    }\r\n    cout << ans << \"\\n\";\r\n}\r\n\r\n\r\n/*\r\n    pt Ox(1, 0);\r\n    sort(all(v), [&Ox](pt a, pt b) -> bool {\r\n        ld a1 = atan2(Ox % a, Ox * a);\r\n        ld a2 = atan2(Ox % b, Ox * b);\r\n        if (a1 < 0) {\r\n            a1 = 2 * pi - a1;\r\n        }\r\n        if (a2 < 0) {\r\n            a2 = 2 * pi - a2;\r\n        }\r\n        return a1 < a2;\r\n        });\r\n        */"
}