{
    "id": 228944901,
    "contestId": 1025,
    "creationTimeSeconds": 1697815452,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1025,
        "index": "F",
        "name": "Disjoint Triangles",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2700,
        "tags": [
            "geometry"
        ]
    },
    "author": {
        "contestId": 1025,
        "members": [
            {
                "handle": "SirRembocodina"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1534685700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 451,
    "memoryConsumedBytes": 716800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define int int64_t\r\n#define pt pair<int, int>\r\n#define x first\r\n#define y second\r\n\r\nconst int inf = 2e18;\r\n\r\npt vec(const pt& a, const pt& b) {\r\n    return {b.x - a.x, b.y - a.y};\r\n}\r\n\r\nint dot_prod(const pt& a, const pt& b) {\r\n    return a.x * b.x + a.y * b.y;\r\n}\r\n\r\nint cross_prod(const pt& a, const pt& b) {\r\n    return a.x * b.y - a.y * b.x;\r\n}\r\n\r\nint ans = 0;\r\n\r\nbool cmp(const pt& a, const pt& b) {\r\n    return cross_prod(a, b) > 0;\r\n}\r\n\r\nint semi_size(int l, int r, int n) {\r\n    int res = r - l;\r\n    if (res < 0) {\r\n        res += n;\r\n    }\r\n    return res;\r\n}\r\n\r\nvoid count_triangles(vector<pt>& a) {\r\n    int n = a.size();\r\n    vector<pt> b, c;\r\n    for (int i = 0; i < n; i++) {\r\n        if (a[i].x > 0 || a[i].x == 0 && a[i].y > 0) {\r\n            b.push_back(a[i]);\r\n        } else {\r\n            c.push_back(a[i]);\r\n        }\r\n    }\r\n    sort(b.begin(), b.end(), cmp);\r\n    sort(c.begin(), c.end(), cmp);\r\n    b.insert(b.end(), c.begin(), c.end());\r\n    a = b;\r\n    b.clear();\r\n    c.clear();\r\n    int j = 0;\r\n    for (int i = 0; i < n; i++) {\r\n        if (j == i) {\r\n            j = (j + 1) % n;\r\n        }\r\n        while (cross_prod(a[i], a[j]) > 0) {\r\n            j = (j + 1) % n;\r\n        }\r\n        /*cerr << \"a[i] = \" << a[i].x << \" \" << a[i].y << endl;\r\n        cerr << \"a[j] = \" << a[j].x << \" \" << a[j].y << endl;*/\r\n        int p = semi_size(i, j, n) - 1;\r\n        int q = semi_size(j, i, n);\r\n        /*cerr << \"p = \" << p << \", q = \" << q << endl;\r\n        cerr << endl;*/\r\n        ans += (p * (p - 1) / 2) * (q * (q - 1) / 2);\r\n    }\r\n}\r\n\r\nint32_t main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    int n;\r\n    cin >> n;\r\n    vector<pt> a(n);\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> a[i].x >> a[i].y;\r\n    }\r\n    for (int i = 0; i < n; i++) {\r\n        vector<pt> b;\r\n        for (int j = 0; j < n; j++) {\r\n            if (j != i) {\r\n                b.push_back(vec(a[i], a[j]));\r\n            }\r\n        }\r\n        //cerr << i << \", ans = \" << ans << endl << endl;\r\n        count_triangles(b);\r\n        //cerr << endl;\r\n    }\r\n    cout << ans / 2 << '\\n';\r\n}\r\n"
}