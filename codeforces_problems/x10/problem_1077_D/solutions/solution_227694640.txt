{
    "id": 227694640,
    "contestId": 1077,
    "creationTimeSeconds": 1697034671,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1077,
        "index": "D",
        "name": "Cutting Out",
        "type": "PROGRAMMING",
        "rating": 1600,
        "tags": [
            "binary search",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1077,
        "members": [
            {
                "handle": "bkifhr6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1542378900
    },
    "programmingLanguage": "Clang++17 Diagnostics",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 53,
    "timeConsumedMillis": 2199,
    "memoryConsumedBytes": 32870400,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n\nusing ll = long long int ;\n\nbool compare(const pair<int,int> &a , const pair<int,int> &b){\n    return a.second > b.second ;\n}\n\nclass TC{\n\n    int n , k ;\n    vector<pair<int,int>> v ;\n    vector<int> t ;\n    public :\n    void solve(){\n        \n        cin >> n >> k ;\n        map<int,int> rem ;\n        for(int i = 0 ; i< n; i++){\n            int x ; cin >> x;\n            rem[x] ++ ;\n        }\n        \n        for(auto x : rem){\n            v.push_back(make_pair(x.first , x.second)) ;\n        }\n        sort(v.begin() , v.end() , compare) ;\n        \n        int low = 0 , high = 2e5 + 10 , ans = 0 ;\n\n        while(low <= high){\n            int mid = (low + high) / 2 ;\n            if(possible(mid)){\n                ans = mid ;\n                low = mid + 1;\n            }\n            else{\n                high = mid - 1;\n            }\n        }\n\n        for(auto x : t){\n            cout << x << \" \" ;\n        }\n        cout << endl ;\n\n    }\n\n    bool possible(int target){\n        if (target == 0) return true ;\n        int cnt = 0 ;\n        vector<int> temp ;\n        for (auto x : v){\n            int no = x.second ;\n            int p = no / target ;\n            if( p == 0) \n                break ;\n            \n            for(int i = 0 ; i < p ;i ++){\n                temp.push_back(x.first) ;\n                cnt ++ ;\n                if(cnt == k) {\n                    goto done ;\n                }\n            }\n        }\n        done :\n        if(cnt == k) {\n            t = temp ;\n            return true ;\n        }\n        return false;\n    }\n};\n\nint main(){\n    ios_base::sync_with_stdio(false);\n\n    int testcases = 1;\n    for(int i = 1 ; i <= testcases ; i ++){\n        TC tc;\n        tc.solve() ;\n    }\n\n    return 0 ;\n}\n\t    \t\t\t     \t  \t\t \t\t \t\t   \t\t\t"
}