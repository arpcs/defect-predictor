{
    "id": 230919782,
    "contestId": 1790,
    "creationTimeSeconds": 1698903818,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1790,
        "index": "D",
        "name": "Matryoshkas",
        "type": "PROGRAMMING",
        "rating": 1200,
        "tags": [
            "data structures",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1790,
        "members": [
            {
                "handle": "m_nigam01"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1674830100
    },
    "programmingLanguage": "Python 3",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 819200,
    "source": "import sys, os, io\r\nfrom collections import *\r\nfrom bisect import *\r\nfrom math import *\r\nfrom heapq import heapify, heappop, heappush\r\n# from itertools import accumulate, product, combinations, combinations_with_replacement, permutations, groupby\r\nfrom bisect import bisect_left, bisect_right\r\nfrom string import ascii_lowercase\r\ninput = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\r\ninput = sys.stdin.readline\r\n\r\nMOD = int(1e9)+7\r\ninf = float('inf')\r\n\r\ndef fileInput():\r\n    sys.stdin = open(\"input.txt\", \"r\")\r\n    # sys.stdout = open(\"output.txt\", \"w\")\r\n\r\ndef lst():\r\n    return list(map(int, input().strip().split()))\r\ndef integer():\r\n    return int(input())\r\ndef string():\r\n    return input()\r\ndef matrixNum(m,n):\r\n    return [lst() for i in range(m)]\r\n\r\n\r\n\r\n\r\ndef solve():\r\n    n = integer()\r\n    a = lst()\r\n    d = Counter(a)\r\n    s = sorted(set(a))\r\n    ans = 0\r\n    for i in s:\r\n        if d[i]>d[i-1]:\r\n            ans += d[i]-d[i-1]\r\n    print(ans)\r\n            \r\n    \r\n    \r\n    \r\n        \r\n# fileInput()     \r\nt = 1\r\nt = integer()\r\nfor _ in range(t):\r\n    solve()          "
}