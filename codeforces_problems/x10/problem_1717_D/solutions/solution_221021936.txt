{
    "id": 221021936,
    "contestId": 1717,
    "creationTimeSeconds": 1693343297,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1717,
        "index": "D",
        "name": "Madoka and The Corruption Scheme",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "combinatorics",
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 1717,
        "members": [
            {
                "handle": "Maatt"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1662129300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 14,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 409600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define MOD 1'000'000'007\r\n\r\nint fact[100001];\r\n\r\nint fastexp(int b, int e) {\r\n    int ans = 1;\r\n\r\n    for (; e; e >>= 1) {\r\n        if (e & 1)\r\n            ans = (1LL * ans * b) % MOD;\r\n        \r\n        b = (1LL * b * b) % MOD;\r\n    }\r\n\r\n    return ans;\r\n}\r\n\r\nint choose(int n, int k) {\r\n    return ((1LL * fact[n] * fastexp(fact[k], MOD - 2)) % MOD * fastexp(fact[n - k], MOD - 2)) % MOD;\r\n}\r\n\r\nvoid solve() {\r\n    int n, k;\r\n    cin >> n >> k;\r\n\r\n    int mn = min(n, k), ans = 0;\r\n\r\n    for (int i = 0; i <= mn; ++i)\r\n        ans = (ans + choose(n, i)) % MOD;\r\n\r\n    cout << ans << '\\n';\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n\r\n    fact[0] = fact[1] = 1;\r\n    for (int i = 2; i <= 100000; ++i)\r\n        fact[i] = (1LL * fact[i - 1] * i) % MOD;\r\n\r\n    int t = 1;\r\n    // cin >> t;\r\n\r\n    while (t--)\r\n        solve();\r\n}"
}