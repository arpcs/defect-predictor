{
    "id": 227543830,
    "contestId": 1539,
    "creationTimeSeconds": 1696944705,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1539,
        "index": "D",
        "name": "PriceFixed",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1539,
        "members": [
            {
                "handle": "vishalsingh_88"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1624183500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 33,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 1638400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n// #define int long long\r\nusing ll = long long int;\r\n// using ld = long double;\r\n#define ss second\r\n#define ff first\r\n// using pie = 3.14159265358979323846264338327;\r\n#define mod 1000000007\r\n\r\nvoid solve(){ \r\n\tll n; cin>>n;\r\n\tvector<pair<ll,ll>> a(n);\r\n\tint sum = 0;\r\n\tfor(int i=0;i<n;i++){\r\n\t\tcin>>a[i].ss>>a[i].ff;\r\n\t\tsum += a[i].ss;\r\n\t}\r\n\t\r\n\tsort(a.begin(),a.end());\r\n\t\r\n\tll bought = 0, coins = 0;\r\n\tint st = 0, end = n-1;\r\n\twhile(st<=end){\r\n\t\tif(bought >= a[st].ff){\r\n\t\t\tbought += a[st].ss;\r\n\t\t\tcoins += a[st].ss;\r\n\t\t\tst++;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tll take = min(a[end].ss, a[st].ff-bought);\r\n\t\t\tcoins += take*2;\r\n\t\t\tbought += take;\r\n\t\t\ta[end].ss -= take;\r\n\t\t\t\r\n\t\t\tif(a[end].ss==0) end--;\r\n\t\t}\r\n\t}\r\n\t\r\n\tcout<<coins<<endl;\r\n\t\r\n\treturn;\r\n}\r\n\r\nint main() {\r\n \tios_base::sync_with_stdio(false);\r\n \t// int t; cin>>t; while(t--)\r\n  \tsolve();\r\n  \treturn 0;\r\n}\r\n\r\n/* stuff you should look for\r\n\t* int overflow, array bounds\r\n\t* special cases (n=1?)\r\n\t* do smth instead of nothing and stay organized\r\n\t* WRITE STUFF DOWN\r\n\t* DON'T GET STUCK ON ONE APPROACH\r\n*/"
}