{
    "id": 228675332,
    "contestId": 1539,
    "creationTimeSeconds": 1697632098,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1539,
        "index": "D",
        "name": "PriceFixed",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1539,
        "members": [
            {
                "handle": "Anish_Singh_Dhami_07"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1624183500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 4198400,
    "source": "/*  \r\n    Talent and begin good at something thing is one part and other (probably more important) part\r\n    is having confidence and conviction that you have the ability to do that thing. \r\n    And then puting in the time, effort & pracitce and not giving up when things get difficult.\r\n*/\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n \r\n#define fastIO() ios_base::sync_with_stdio(false);cin.tie(NULL)\r\n#define nline '\\n'\r\n#define mod 1000000007\r\n#define inf 1e18\r\n#define ff first\r\n#define PI 3.141592653589793238462\r\n#define ss second\r\n#define all(a) (a).begin(), (a).end()\r\n#define MOD 998244353\r\n\r\nusing ll = long long;\r\nusing ld = long double;\r\nusing ull = unsigned long long;\r\nusing u64 = uint64_t;\r\nusing u128 = __uint128_t;\r\n \r\nvoid pyes() {cout << \"YES\" << nline;}\r\nvoid pno() {cout << \"NO\" << nline;}\r\nvoid noans() {cout << \"-1\" << nline;} \r\n\r\nconst int N = 2e5 + 100;\r\nll arr[N], brr[N];\r\nll sum;\r\nint ord[N]; \r\nint n;\r\n\r\nbool isGood(ll mid) {\r\n  ll have = mid;\r\n  for(int i = 0; i < n; i++) {\r\n    if(have >= brr[ord[i]]) {\r\n      have += arr[ord[i]];\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\nvoid sol () {\r\n  cin >> n;\r\n  for(int i = 0; i < n; i++) {\r\n    cin >> arr[i] >> brr[i];\r\n  }\r\n\r\n  iota(ord, ord+n, 0);\r\n  sort(ord, ord+n, [&](int &i, int &j){\r\n    if(brr[i] == brr[j]) return arr[i] < arr[j];\r\n    return brr[i] < brr[j];\r\n  });\r\n\r\n  // cost = x + 2*y\r\n  // min(cost) = y + sum(a[0..n])\r\n\r\n  // min no. of products one can buy @ $2.\r\n  sum = accumulate(arr, arr+n, 0LL);\r\n  ll l = 0; // false invariant.\r\n  ll r = sum; // true invariant.\r\n\r\n  while(r - l > 1) {\r\n    ll mid = l + (r-l) / 2;\r\n    if(isGood(mid)) {\r\n      r = mid;\r\n    } else {\r\n      l = mid;\r\n    }\r\n  }\r\n  // cout << r << '\\n';\r\n  cout << r + sum << '\\n';\r\n\r\n}\r\n \r\nvoid RepSolution() {\r\n  int t; cin >> t;\r\n  while(t--) {\r\n    sol();\r\n  }\r\n}\r\n \r\nint main(){\r\n  cout << fixed << setprecision(15);\r\n  auto begin = std::chrono::high_resolution_clock::now();\r\n  fastIO();\r\n  #ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\",\"r\",stdin);\r\n    freopen(\"output.txt\",\"w\",stdout);\r\n    freopen(\"error.txt\", \"w\", stderr);\r\n  #endif\r\n  sol();\r\n  auto end = std::chrono::high_resolution_clock::now();\r\n  auto elapsed = std::chrono::duration_cast<std::chrono::nanoseconds>(end - begin);\r\n  cerr << \"Time measured: \" << elapsed.count() * 1e-9 << \" seconds.\\n\"; \r\n  return 0;\r\n}"
}