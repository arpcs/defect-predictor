{
    "id": 209708897,
    "contestId": 1278,
    "creationTimeSeconds": 1686786521,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1278,
        "index": "F",
        "name": "Cards",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1278,
        "members": [
            {
                "handle": "taras_2_2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1576766100
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 373,
    "memoryConsumedBytes": 202547200,
    "source": "M=998244353\r\ndef modpow(x, p):\r\n    if p==0:\r\n        return 1\r\n    if p<0:\r\n        return modpow(x, (2-M)*p)\r\n    y=modpow(x, p//2)\r\n    if p%2:\r\n        return (y*y*x)%M\r\n    return (y*y)%M\r\nK=5000\r\nA=[[0]*(K+1) for i in range(K+1)]\r\nfor k in range(1, K+1):\r\n    A[k][1]=1\r\nfor k in range(2, K+1):\r\n    for j in range(2, K+1):\r\n        A[k][j]=(j*A[k-1][j]+A[k-1][j-1])%M\r\nn,m,k=[int(e) for e in input().split()]\r\nans=0\r\nmhyp=modpow(2,-1)\r\np=modpow(2,n)\r\nfor j in range(1, k+1):\r\n    p*=(n-j+1)*mhyp\r\n    p%=M\r\n    ans+=A[k][j]*p\r\n    ans%=M\r\nfor j in range(2, m+1):\r\n    ans*=j\r\n    ans%=M\r\nprint(ans)"
}