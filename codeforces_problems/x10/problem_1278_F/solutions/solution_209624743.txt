{
    "id": 209624743,
    "contestId": 1278,
    "creationTimeSeconds": 1686716187,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1278,
        "index": "F",
        "name": "Cards",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "combinatorics",
            "dp",
            "math",
            "number theory",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 1278,
        "members": [
            {
                "handle": "daniel_jk3455"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1576766100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 14,
    "timeConsumedMillis": 483,
    "memoryConsumedBytes": 201216000,
    "source": "// Source: https://usaco.guide/general/io\r\n\r\n#include <bits/stdc++.h>\r\n\r\n#define ll long long\r\n\r\nusing namespace std;\r\n\r\nconst ll MOD = 998244353LL;\r\n\r\nll exp(ll base, ll ponet) {\r\n\tbase %= MOD;\r\n\tll ans = 1;\r\n\r\n\twhile (ponet > 0) {\r\n\t\tif (ponet % 2 == 1) {\r\n\t\t\tans = ans * base % MOD; \r\n\t\t}\r\n\r\n\t\tbase = base * base % MOD;\r\n\t\tponet /= 2;\r\n\t}\r\n\r\n\treturn ans % MOD;\r\n}\r\n\r\nint main() {\r\n\tint N, M, K; cin >> N >> M >> K;\r\n\r\n\tvector<vector<ll>> dp(K + 1, vector<ll>(K + 1, (ll) 1e18)); \r\n\r\n\tdp[0][0] = 1LL;\r\n\r\n\tfor (int i = 0; i < K; i++) {\r\n\t\tfor (int j = 0; j < K; j++) { // transotions\r\n\t\t\tif (dp[i][j] == (ll) 1e18) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tll tmp1 = dp[i][j] * j; tmp1 %= MOD;\r\n\t\t\tif (dp[i + 1][j] == (ll) 1e18) {\r\n\t\t\t\tdp[i + 1][j] = tmp1; dp[i + 1][j] %= MOD;\r\n\t\t\t} else {\r\n\t\t\t\tdp[i + 1][j] += tmp1; dp[i + 1][j] %= MOD;\r\n\t\t\t}\r\n\r\n\t\t\tll tmp2 = dp[i][j] * (N - j); tmp2 %= MOD;\r\n\t\t\tif (dp[i + 1][j + 1] == (ll) 1e18) {\r\n\t\t\t\tdp[i + 1][j + 1] = tmp2; dp[i + 1][j + 1] %= MOD;\r\n\t\t\t} else {\r\n\t\t\t\tdp[i + 1][j + 1] += tmp2; dp[i + 1][j + 1] %= MOD;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tll ans = 0LL;\r\n\r\n\tfor (int i = 1; i <= K; i++) {\r\n\t\tif (dp[K][i] == (ll) 1e18) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\t\r\n\t\tll tmp1 = exp(M, MOD - 2); tmp1 %= MOD;\r\n\t\tll tmp2 = exp(tmp1, i); tmp2 %= MOD;\r\n\t\tll tmp3 = dp[K][i] * tmp2; tmp3 %= MOD;\r\n\t\tans += tmp3; ans %= MOD;\r\n\t}\r\n\r\n\tcout << ans << endl;\r\n}\r\n"
}