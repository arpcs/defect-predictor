{
    "id": 229805224,
    "contestId": 182,
    "creationTimeSeconds": 1698311463,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 182,
        "index": "C",
        "name": "Optimal Sum",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2000,
        "tags": [
            "data structures",
            "greedy"
        ]
    },
    "author": {
        "contestId": 182,
        "members": [
            {
                "handle": "zavodil"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1335280200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 68,
    "timeConsumedMillis": 186,
    "memoryConsumedBytes": 2252800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int n, l;\r\n    scanf(\"%d%d\", &n, &l);\r\n    int a[100000];\r\n    for (int i = 0; i < n; i++)\r\n        scanf(\"%d\", &a[i]);\r\n    int k;\r\n    scanf(\"%d\", &k);\r\n    long long m = -1e18;\r\n    for (int sgn = 0; sgn <= 1; sgn++)\r\n    {\r\n        if (sgn == 1)\r\n            for (int i = 0; i < n; i++)\r\n                a[i] = -a[i];\r\n        long long s = 0;\r\n        multiset<int> ps, ns;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            if (a[i] >= 0)\r\n                s += a[i];\r\n            else if (ps.size() < k)\r\n            {\r\n                ps.insert(a[i]);\r\n                s += -a[i];\r\n            }\r\n            else if (k != 0 && a[i] < *(--ps.end()))\r\n            {\r\n                ps.insert(a[i]);\r\n                s += -a[i];\r\n                int v = *(--ps.end());\r\n                ps.erase(ps.find(v));\r\n                ns.insert(v);\r\n                s -= -v;\r\n                s += v;\r\n            }\r\n            else\r\n            {\r\n                ns.insert(a[i]);\r\n                s += a[i];\r\n            }\r\n            int j = i - l;\r\n            if (j >= 0)\r\n                if (a[j] >= 0)\r\n                    s -= a[j];\r\n                else if (ps.find(a[j]) != ps.end())\r\n                {\r\n                    ps.erase(ps.find(a[j]));\r\n                    s -= -a[j];\r\n                    if (!ns.empty())\r\n                    {\r\n                        int v = *ns.begin();\r\n                        ns.erase(ns.find(v));\r\n                        ps.insert(v);\r\n                        s -= v;\r\n                        s += -v;\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    ns.erase(ns.find(a[j]));\r\n                    s -= a[j];\r\n                }\r\n            if (j >= -1 && s > m)\r\n                m = s;\r\n        }\r\n    }\r\n    printf(\"%I64d\\n\", m);\r\n    return 0;\r\n}/*1698311462.7202747*/"
}