{
    "contestId": 182,
    "index": "C",
    "name": "Optimal Sum",
    "type": "PROGRAMMING",
    "points": 3000.0,
    "rating": 2000,
    "tags": [
        "data structures",
        "greedy"
    ],
    "desc": {
        "title": "C. Optimal Sum",
        "statement": "<p>And here goes another problem on arrays. You are given positive integer <span class=\"tex-span\"><i>len</i></span> and array <span class=\"tex-span\"><i>a</i></span> which consists of <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub></span>, <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">2</sub></span>, ..., <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>n</i></sub></span>. Let's introduce two characteristics for the given array.</p><ul> <li> Let's consider an arbitrary interval of the array with length <span class=\"tex-span\"><i>len</i></span>, starting in position <span class=\"tex-span\"><i>i</i></span>. Value <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/b7d305857edcc8dede7bebd0d125908cd2c42c3c.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>, is the <span class=\"tex-font-style-bf\">modular sum</span> on the chosen interval. In other words, the modular sum is the sum of integers on the chosen interval with length <span class=\"tex-span\"><i>len</i></span>, taken in its absolute value.</li><li> Value <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/c351f76d27494f983e9cbca80a5197f84b055ec0.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> is the <span class=\"tex-font-style-bf\">optimal sum</span> of the array. In other words, the optimal sum of an array is the maximum of all modular sums on various intervals of array with length <span class=\"tex-span\"><i>len</i></span>. </li></ul><p>Your task is to calculate the optimal sum of the given array <span class=\"tex-span\"><i>a</i></span>. However, before you do the calculations, you are allowed to produce <span class=\"tex-font-style-bf\">no more</span> than <span class=\"tex-span\"><i>k</i></span> consecutive operations of the following form with this array: one operation means taking an arbitrary number from array <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> and multiply it by -1. In other words, no more than <span class=\"tex-span\"><i>k</i></span> times you are allowed to take an arbitrary number <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>i</i></sub></span> from the array and replace it with <span class=\"tex-span\">\u2009-\u2009<i>a</i><sub class=\"lower-index\"><i>i</i></sub></span>. Each number of the array is allowed to choose an arbitrary number of times.</p><p>Your task is to calculate the maximum possible optimal sum of the array after at most <span class=\"tex-span\"><i>k</i></span> operations described above are completed.</p>",
        "inputSpecification": "<p>The first line contains two integers <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>len</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>len</i>\u2009\u2264\u2009<i>n</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup></span>) \u2014 the number of elements in the array and the length of the chosen subinterval of the array, correspondingly. </p><p>The second line contains a sequence consisting of <span class=\"tex-span\"><i>n</i></span> integers <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">1</sub></span>, <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\">2</sub></span>, ..., <span class=\"tex-span\"><i>a</i><sub class=\"lower-index\"><i>n</i></sub></span> <span class=\"tex-span\">(|<i>a</i><sub class=\"lower-index\"><i>i</i></sub>|\u2009\u2264\u200910<sup class=\"upper-index\">9</sup>)</span> \u2014 the original array. </p><p>The third line contains a single integer <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">0\u2009\u2264\u2009<i>k</i>\u2009\u2264\u2009<i>n</i></span>) \u2014 the maximum allowed number of operations. </p><p>All numbers in lines are separated by a single space.</p>",
        "outputSpecification": "<p>In a single line print the maximum possible optimal sum after no more than <span class=\"tex-span\"><i>k</i></span> acceptable operations are fulfilled. </p><p>Please do not use the <span class=\"tex-font-style-tt\">%lld</span> specifier to read or write 64-bit integers in \u0421++. It is preferred to use <span class=\"tex-font-style-tt\">cin</span>, <span class=\"tex-font-style-tt\">cout</span> streams or the <span class=\"tex-font-style-tt\">%I64d</span> specifier.</p>",
        "samples": [
            {
                "input": "5 3<br/>0 -2 3 -5 1<br/>2<br/>",
                "output": "10<br/>"
            },
            {
                "input": "5 2<br/>1 -3 -10 4 1<br/>3<br/>",
                "output": "14<br/>"
            },
            {
                "input": "3 3<br/>-2 -5 4<br/>1<br/>",
                "output": "11<br/>"
            }
        ],
        "note": null
    }
}