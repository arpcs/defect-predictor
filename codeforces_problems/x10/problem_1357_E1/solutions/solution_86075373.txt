{
    "id": 86075373,
    "contestId": 1357,
    "creationTimeSeconds": 1593974347,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1357,
        "index": "E1",
        "name": "Power of quantum Fourier transform",
        "type": "PROGRAMMING",
        "tags": []
    },
    "author": {
        "contestId": 1357,
        "members": [
            {
                "handle": "sasuke_uchiha"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1592582400
    },
    "programmingLanguage": "Q#",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 592,
    "memoryConsumedBytes": 15360000,
    "source": "namespace Solution {\r\n    open Microsoft.Quantum.Canon;\r\n    open Microsoft.Quantum.Intrinsic;\r\n    open Microsoft.Quantum.Math;\r\n    open Microsoft.Quantum.Measurement;\r\n    open Microsoft.Quantum.Arrays;\r\n    open Microsoft.Quantum.Diagnostics;\r\n    open Microsoft.Quantum.Arithmetic;\r\n\r\n    operation Solve (p : Int, inputRegister : LittleEndian) : Unit is Adj+Ctl {\r\n        for(i in 1..p%4) {\r\n            QFTLE(inputRegister);\r\n        }\r\n    }\r\n\r\n    // @EntryPoint()\r\n    // operation Test(): Result {\r\n    //     using((ar, q) = (Qubit[3], Qubit())) {\r\n    //         X(ar[2]);\r\n    //         X(ar[1]);\r\n    //         Solve(ar, q);\r\n    //         let res = MResetZ(q);\r\n    //         ResetAll(ar);\r\n    //         return res;\r\n    //     }\r\n    // }\r\n}"
}