{
    "id": 224699522,
    "contestId": 1272,
    "creationTimeSeconds": 1695448451,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1272,
        "index": "F",
        "name": "Two Bracket Sequences",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "dp",
            "strings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1272,
        "members": [
            {
                "handle": "mymelochan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1576157700
    },
    "programmingLanguage": "PyPy 3",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 2252800,
    "source": "S,T = input(),input()\r\nls,lt = len(S),len(T)\r\nlm = max(ls,lt)\r\nS += \"#\"\r\nT += \"#\"\r\n\r\ninf = 1<<30\r\ndp = [inf]*(lm+1)*(lt+1)*(ls+1)\r\ndp[0] = 0\r\n\r\ndef convert(i,j,k):\r\n    return k + (lm+1)*j + (lm+1)*(lt+1)*i\r\n\r\ndef rev(t):\r\n    return t%(lm+1)\r\n\r\nprev = [-1]*(lm+1)*(lt+1)*(ls+1)\r\n\r\nfor i in range(ls+1):\r\n    for j in range(lt+1):\r\n        for k in range(lm):\r\n            t0 = convert(i,j,k)\r\n            #(\r\n            fs,ft = S[i]==\"(\",T[j]==\"(\"\r\n            #dp[i+fs][j+ft][k+1] = min(dp[i+fs][j+ft][k+1],dp[i][j][k]+1)\r\n            t = convert(i+fs,j+ft,k+1) #k+1+(lm+1)*(j+ft)+(lm+1)*(lt+1)*(i+fs)\r\n            if dp[t] > dp[t0]+1:\r\n                dp[t] = dp[t0]+1\r\n                prev[t] = t0\r\n            \r\n            if k == 0:\r\n                continue\r\n\r\n            #)\r\n            fs,ft = S[i]==\")\",T[j]==\")\"\r\n            #dp[i+fs][j+ft][k-1] = min(dp[i+fs][j+ft][k-1],dp[i][j][k]+1)\r\n            t = convert(i+fs,j+ft,k-1) #k-1+(lm+1)*(j+ft)+(lm+1)*(lt+1)*(i+fs)\r\n            if dp[t] > dp[t0]+1:\r\n                dp[t] = dp[t0]+1\r\n                prev[t] = t0\r\n\r\nmi = inf\r\nmidx = -1\r\n\r\nfor k in range(lm+1):\r\n    if dp[k+(lm+1)*lt+(lm+1)*(lt+1)*ls]+k < mi:\r\n        mi = dp[k+(lm+1)*lt+(lm+1)*(lt+1)*ls]+k\r\n        midx = k+(lm+1)*lt+(lm+1)*(lt+1)*ls\r\n        mk = k\r\n    \r\nans = []\r\nfor _ in range(mk):\r\n    ans.append(\")\")\r\n\r\ncur = midx\r\nwhile cur != 0:\r\n    #print(ans,cur)\r\n    nxt = prev[cur]\r\n\r\n    ck = rev(cur)\r\n    nk = rev(nxt)\r\n\r\n    if ck == nk+1:\r\n        ans.append(\"(\")\r\n    else:\r\n        ans.append(\")\")\r\n    \r\n    cur = nxt\r\n\r\n#print(prev)\r\n\r\nans.reverse()\r\nprint(\"\".join(ans))"
}