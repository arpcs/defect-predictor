{
    "id": 229518017,
    "contestId": 1272,
    "creationTimeSeconds": 1698129867,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1272,
        "index": "F",
        "name": "Two Bracket Sequences",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "dp",
            "strings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1272,
        "members": [
            {
                "handle": "Z3L5M"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1576157700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 269004800,
    "source": "#include <cstdio>\r\n#include <cstring>\r\n#include <iostream>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <map>\r\n#include <set>\r\n#include <queue>\r\n\r\nconst int MAXN = 256;\r\nconst int INF = 1 << 30;\r\n\r\nchar s[MAXN], t[MAXN], ans[MAXN << 2];\r\nint dp[MAXN][MAXN][MAXN];\r\nint pre_i[MAXN][MAXN][MAXN], pre_j[MAXN][MAXN][MAXN], pre_k[MAXN][MAXN][MAXN];\r\n\r\ninline void Calc(int i1, int j1, int k1, int i2, int j2, int k2, int d) {\r\n\tint tmp = dp[i1][j1][k1] + d;\r\n\tif (tmp < dp[i2][j2][k2]) {\r\n\t\tdp[i2][j2][k2] = tmp;\r\n\t\tpre_i[i2][j2][k2] = i1;\r\n\t\tpre_j[i2][j2][k2] = j1;\r\n\t\tpre_k[i2][j2][k2] = k1;\r\n\t}\r\n}\r\n\r\nint main() {\r\n\tscanf(\"%s%s\", s + 1, t + 1);\r\n\tint len_s = strlen(s + 1), len_t = strlen(t + 1);\r\n\tfor (int i = 1; s[i]; ++i) {\r\n\t\tfor (int k = 0; k < MAXN; ++k)\r\n\t\t\tdp[i][0][k] = INF;\r\n\t\tif (s[i] == '(') {\r\n\t\t\tfor (int k = 1; k < MAXN; ++k)\r\n\t\t\t\tCalc(i - 1, 0, k - 1, i, 0, k, 1);\r\n\t\t} else {\r\n\t\t\tCalc(i - 1, 0, 0, i, 0, 0, 2);\r\n\t\t\tfor (int k = 1; k < MAXN; ++k)\r\n\t\t\t\tCalc(i - 1, 0, k, i, 0, k - 1, 1);\r\n\t\t}\r\n\t}\r\n\tfor (int j = 1; t[j]; ++j) {\r\n\t\tfor (int k = 0; k < MAXN; ++k)\r\n\t\t\tdp[0][j][k] = INF;\r\n\t\tif (t[j] == '(') {\r\n\t\t\tfor (int k = 1; k < MAXN; ++k)\r\n\t\t\t\tCalc(0, j - 1, k - 1, 0, j, k, 1);\r\n\t\t} else {\r\n\t\t\tCalc(0, j - 1, 0, 0, j, 0, 2);\r\n\t\t\tfor (int k = 1; k < MAXN; ++k)\r\n\t\t\t\tCalc(0, j - 1, k, 0, j, k - 1, 1);\r\n\t\t}\r\n\t}\r\n\tfor (int i = 1; s[i]; ++i)\r\n\t\tfor (int j = 1; t[j]; ++j) {\r\n\t\t\tfor (int k = 0; k < MAXN; ++k)\r\n\t\t\t\tdp[i][j][k] = INF;\r\n\t\t\tif (s[i] == t[j]) {\r\n\t\t\t\tif (s[i] == '(') {\r\n\t\t\t\t\tfor (int k = 1; k < MAXN; ++k)\r\n\t\t\t\t\t\tCalc(i - 1, j - 1, k - 1, i, j, k, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tCalc(i - 1, j - 1, 0, i, j, 0, 2);\r\n\t\t\t\t\tfor (int k = 1; k < MAXN; ++k)\r\n\t\t\t\t\t\tCalc(i - 1, j - 1, k, i, j, k - 1, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (s[i] == '(') {\r\n\t\t\t\tCalc(i, j - 1, 0, i, j, 0, 2);\r\n\t\t\t\tfor (int k = 1; k < MAXN; ++k) {\r\n\t\t\t\t\tCalc(i - 1, j, k - 1, i, j, k, 1);\r\n\t\t\t\t\tCalc(i, j - 1, k, i, j, k - 1, 1);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tCalc(i - 1, j, 0, i, j, 0, 2);\r\n\t\t\t\tfor (int k = 1; k < MAXN; ++k) {\r\n\t\t\t\t\tCalc(i - 1, j, k, i, j, k - 1, 1);\r\n\t\t\t\t\tCalc(i, j - 1, k - 1, i, j, k, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\tint ans_k = 0, ans_len = 0;\r\n\tfor (int k = 1; k < MAXN; ++k)\r\n\t\tif (dp[len_s][len_t][k] < dp[len_s][len_t][ans_k])\r\n\t\t\tans_k = k;\r\n\twhile (len_s || len_t) {\r\n\t\tint tmp_i = pre_i[len_s][len_t][ans_k], tmp_j = pre_j[len_s][len_t][ans_k], tmp_k = pre_k[len_s][len_t][ans_k];\r\n\t\tans[ans_len] = tmp_i != len_s ? s[len_s] : t[len_t];\r\n\t\tlen_s = tmp_i;\r\n\t\tlen_t = tmp_j;\r\n\t\tans_k = tmp_k;\r\n\t\t++ans_len;\r\n\t}\r\n\tans[ans_len] = '\\0';\r\n\tstd::reverse(ans, ans + ans_len);\r\n\tputs(ans);\r\n\tint left = 0, right = 0;\r\n\tfor (int i = ans_len - 1; i >= 0; --i)\r\n\t\tif (ans[i] == ')') ++left;\r\n\t\telse if (left) --left;\r\n\tfor (int i = 0; ans[i]; ++i)\r\n\t\tif (ans[i] == '(') ++right;\r\n\t\telse if (right) --right;\r\n\twhile (left--) printf(\"(\");\r\n\tprintf(\"%s\", ans);\r\n\twhile (right--) printf(\")\");\r\n\treturn 0;\r\n}"
}