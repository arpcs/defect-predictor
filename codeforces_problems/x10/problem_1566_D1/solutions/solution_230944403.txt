{
    "id": 230944403,
    "contestId": 1566,
    "creationTimeSeconds": 1698916570,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1566,
        "index": "D1",
        "name": "Seating Arrangements (easy version) ",
        "type": "PROGRAMMING",
        "points": 750.0,
        "rating": 1100,
        "tags": [
            "data structures",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1566,
        "members": [
            {
                "handle": "shreyam7713"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631457300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 16,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 307200,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n#define ll long long\r\n#define ld long double\r\nconst long long p = 1e9+7;\r\n#define endl '\\n'\r\n#include <ext/pb_ds/assoc_container.hpp> // Common file  \r\n#include <ext/pb_ds/tree_policy.hpp>  \r\n#include <functional> // for less  \r\n#include <iostream>  \r\nusing namespace __gnu_pbds;  \r\nusing namespace std;  \r\n  \r\n// Declaring ordered_set \r\ntypedef tree<ll, null_type, less<ll>, rb_tree_tag,  \r\n            tree_order_statistics_node_update>  \r\n    ordered_set;  \r\n\r\nvoid solve(){\r\n\tll n,m; cin>>n>>m;\r\n\tvector<pair<ll,ll>> p;\r\n\tmap<ll,set<ll>> mp;\r\n\tfor(ll i=1;i<= n*m; i++){\r\n\t\tll x; cin>>x;p.push_back({x,-i});mp[x].insert(i);\r\n\t}\r\n\tsort(p.begin(),p.end());\r\n\tll cnt=0;\r\n\tvector<vector<ll>> a(n+1, vector<ll>(m+1,-1));\r\n\tvector<vector<ll>> b(n+1, vector<ll>(m+1,-1));\r\n\tfor(ll i=1;i<=n;i++){\r\n\t\tfor(ll j=1;j<=m;j++){\r\n\t\t\ta[i][j] = p[cnt++].first;\r\n\t\t}\r\n\t}\r\n\tfor(ll i=1;i<=n;i++){\r\n\t\tmap<ll,set<ll>> q;\r\n\t\tfor(ll j=1;j<=m;j++){\r\n\t\t\tq[a[i][j]].insert(-*(mp[a[i][j]].begin()));\r\n\t\t\tmp[a[i][j]].erase(mp[a[i][j]].begin());\r\n\t\t}\r\n\t\tfor(ll j=1;j<=m;j++){\r\n\t\t\tb[i][j] = -(*q[a[i][j]].begin());\r\n\t\t\tq[a[i][j]].erase(q[a[i][j]].begin());\r\n\t\t}\t\t\r\n\t}\r\n\tll ans = 0;\r\n\tfor(ll i=1;i<=n;i++){\r\n\t\tordered_set s;\r\n\t\tfor(ll j=1;j<=m;j++){\r\n\t\t\t//cout << b[i][j] << \" \";\r\n\t\t\ts.insert(b[i][j]);\r\n\t\t\tans+= s.order_of_key(b[i][j]);\r\n\t\t}\r\n\t\t//cout << endl;\r\n\t}\r\n\tcout << ans << endl;\r\n\r\n}\r\nint main(){\r\nios_base::sync_with_stdio(0);\r\ncin.tie(0);\r\ncout.tie(0);\r\nint t=1;\r\ncin>>t;\r\nwhile(t--){\r\nsolve();\r\n}\r\nreturn 0;\r\n}"
}