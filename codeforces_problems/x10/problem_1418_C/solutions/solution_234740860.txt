{
    "id": 234740860,
    "contestId": 1418,
    "creationTimeSeconds": 1701169404,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1418,
        "index": "C",
        "name": "Mortal Kombat Tower",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "dp",
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1418,
        "members": [
            {
                "handle": "StillOnQiCondensation"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1600094100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 1638400,
    "source": "#include <bits/stdc++.h>\r\n \r\nusing namespace std;\r\n \r\ntypedef long long ll;\r\ntypedef vector<int> vi;\r\ntypedef vector<ll> vll;\r\n#define all(x) (x).begin(), (x).end()\r\n#define inf 1000000007\r\n#define llmax LLONG_MAX\r\n#define pi 3.141592653589793238462643383279502884197169399\r\n \r\nlong long binpow(long long a, long long b) {\r\n    long long res = 1;\r\n    while (b > 0) {\r\n        if (b & 1)\r\n            res = res * a;\r\n        a = a * a;\r\n        b >>= 1;\r\n    }\r\n    return res;\r\n}\r\nll ncr(int n, int r)\r\n{\r\n    if (n < r) return 0;\r\n    long long p = 1, k = 1;\r\n    if (n - r < r)\r\n        r = n - r;\r\n    if (r != 0) {\r\n        while (r) {\r\n            p *= n;\r\n            k *= r;\r\n            long long m = __gcd(p, k);\r\n            p /= m;\r\n            k /= m;\r\n            n--;\r\n            r--;\r\n        }\r\n    }\r\n    else\r\n        p = 1;\r\n    return p;\r\n}\r\n \r\nvector <ll> vcreate(int n){\r\n    vector <ll> v(n);\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        cin>>v[i];\r\n    }\r\n    return v;\r\n}\r\n\r\nconst int MOD=998244353;\r\n\r\nll ModExp(ll x, ll n, ll m) {\r\n\tassert(n >= 0);\r\n\tx %= m;  // note: m * m must be less than 2^63 to avoid ll overflow\r\n\tll res = 1;\r\n\twhile (n > 0) {\r\n\t\tif (n % 2 == 1) { res = res * x % m; }\r\n\t\tx = x * x % m;\r\n\t\tn /= 2;\r\n\t}\r\n\treturn res;\r\n}\r\n\r\n\r\n\r\nvector<ll> dp(200003,inf);\r\nint main()\r\n{\r\n    \r\n    \r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    /* freopen(\"lifeguards.in\", \"r\", stdin);\r\n    freopen(\"lifeguards.out\", \"w\", stdout); */ \r\n   \r\n     ll T;\r\n    cin>>T;\r\n   \r\n   \r\n    for(ll oo=0; oo<T; oo++)\r\n    { \r\n        int n{};\r\n        cin>>n;\r\n        vi v(n);\r\n        for(int i{0}; i<n; i++)\r\n        {\r\n            cin>>v[i];\r\n        }\r\n        dp[0]=v[0];\r\n        for(int i{0}; i<n; i++)\r\n        {\r\n            if(i<=n-1)\r\n            {\r\n                dp[i+1]=min(dp[i+1],dp[i]+v[i]);\r\n                dp[i+2]=min(dp[i+1],dp[i+2]);\r\n            }\r\n            if(i<=n-2)\r\n            {\r\n                dp[i+2]=min(dp[i+2],dp[i]+v[i]+v[i+1]);\r\n            }\r\n        }\r\n\r\n        cout<<dp[n-1]<<endl;\r\n\r\n    }\r\n    \r\n   \r\n\r\n}\r\n"
}