{
    "id": 223196580,
    "contestId": 1418,
    "creationTimeSeconds": 1694600731,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1418,
        "index": "C",
        "name": "Mortal Kombat Tower",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "dp",
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1418,
        "members": [
            {
                "handle": "AmrT"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1600094100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 4812800,
    "source": "#include <bits/stdc++.h>\r\n#define lop(i,a,b) for(ll i = a; i < b; i++)\r\n#define alop(i,v) for(auto &i: v)\r\n#define in(v) for(auto &i: v) cin >> i;\r\n#define ll long long\r\n#define pll pair<ll, ll>\r\n//#define endl \"\\n\"\r\n#define pb push_back\r\n#define all(v) v.begin(),v.end()\r\n#define mem(p, x) memset(p, x, sizeof(p))\r\n#define bslop(i, b) for(ll i = b._Find_first(); i < b.size(); i = b._Find_next(i))\r\n#define sq(x) (x) * (x)\r\nusing namespace std;\r\nconst ll mod = 1e9 + 7, N = 1e5;\r\n\r\nint main(){\r\n    ll t; cin >> t;\r\n    while(t--){\r\n        ll n; cin >> n;\r\n        vector<ll> arr(n + 1); \r\n        lop(i, 0, n) cin >> arr[i + 1];\r\n\r\n        array<ll, 2> dp[n + 1];\r\n        dp[0] = {0, 0};\r\n        dp[1] = {1000000000, arr[1]};\r\n        if(n >= 2) dp[2] = {dp[1][1], arr[1] + arr[2]};\r\n\r\n        for(int i = 3; i <= n; i++){\r\n            dp[i][0] = min(dp[i - 1][1], dp[i - 2][1]);\r\n            dp[i][1] = min(dp[i - 1][0], dp[i - 2][0] + arr[i - 1]) + arr[i];\r\n        }\r\n\r\n        cout << min(dp[n][1], dp[n][0]) << endl;\r\n    }\r\n\r\n    return 0;\r\n}"
}