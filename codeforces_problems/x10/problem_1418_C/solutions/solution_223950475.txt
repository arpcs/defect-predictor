{
    "id": 223950475,
    "contestId": 1418,
    "creationTimeSeconds": 1695068039,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1418,
        "index": "C",
        "name": "Mortal Kombat Tower",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "dp",
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1418,
        "members": [
            {
                "handle": "jtmaster1000"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1600094100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 2457600,
    "source": "#include <bits/stdc++.h>\r\ntypedef long long ll;\r\ntypedef long double ld;\r\nusing namespace std;\r\n\r\nconst int N = 2e5+1;\r\n\r\nint dp[N][2]; //stores friend's skips\r\n\r\nvoid solve() {\r\n    int n; cin >> n;\r\n    for(int i = 0; i <= n; i++) {\r\n        dp[i][0] = 1e9;\r\n        dp[i][1] = 1e9;\r\n    }\r\n    dp[0][0] = 0;\r\n    vector<int> v(n+1);\r\n    for(int i = 1; i <= n; i++) {\r\n        cin >> v[i];\r\n        for(int j = 0; j < 2; j++) {\r\n            if(j) {\r\n                dp[i][j] = dp[i-1][j^1] + v[i];\r\n                if(i >= 2) {\r\n                    dp[i][j] = min(dp[i][j], dp[i-2][j^1] + v[i] + v[i-1]);\r\n                }\r\n            } else {\r\n                dp[i][j] = dp[i-1][j^1];\r\n                if(i >= 2) {\r\n                    dp[i][j] = min(dp[i][j],dp[i-2][j^1]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    cout << min(dp[n][0], dp[n][1]) << \"\\n\";\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n\r\n    int casi; cin >> casi;\r\n    while(casi-->0) solve();\r\n\r\n    return 0;\r\n}"
}