{
    "id": 225118944,
    "contestId": 1418,
    "creationTimeSeconds": 1695654603,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1418,
        "index": "C",
        "name": "Mortal Kombat Tower",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "dp",
            "graphs",
            "greedy",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 1418,
        "members": [
            {
                "handle": "PiyushGG"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1600094100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 21,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 35123200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nint sol(vector<int>& a, int ans, int ind,int who,vector<vector<int>>& dp)\r\n{\r\n    if(ind>=a.size())\r\n        return ans;\r\n    if(dp[ind][who]!=-1)\r\n        return dp[ind][who];\r\n\r\n    int os,ts=INT_MAX;\r\n    if(who)\r\n    {\r\n        os=sol(a,ans,ind+1,1-who,dp)+a[ind];\r\n        if(ind+1<a.size())\r\n        ts=sol(a,ans,ind+2,1-who,dp)+a[ind]+a[ind+1];\r\n    }\r\n    else\r\n    {\r\n        os=sol(a,ans,ind+1,1-who,dp);\r\n        ts=sol(a,ans,ind+2,1-who,dp);\r\n    }\r\n    return dp[ind][who] = min(os,ts);\r\n}\r\nvoid solve()\r\n{\r\n    int n;\r\n    cin>>n;\r\n    vector<int> a;\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        int x;\r\n        cin>>x;\r\n        a.push_back(x);\r\n    }\r\n    vector<vector<int>> dp(n+1,vector<int>(2,-1));\r\n    int ans=0;\r\n    cout<<sol(a,ans,0,1,dp);\r\n    \r\n}\r\nint32_t main()\r\n{\r\n    int t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        solve();\r\n        cout<<endl;\r\n    }\r\n}"
}