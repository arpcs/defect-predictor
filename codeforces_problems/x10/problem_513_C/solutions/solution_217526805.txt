{
    "id": 217526805,
    "contestId": 513,
    "creationTimeSeconds": 1691373906,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 513,
        "index": "C",
        "name": "Second price auction",
        "type": "PROGRAMMING",
        "points": 8.0,
        "rating": 2000,
        "tags": [
            "bitmasks",
            "probabilities"
        ]
    },
    "author": {
        "contestId": 513,
        "members": [
            {
                "handle": "alejo.corral"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1423328400
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <bits/stdc++.h>\r\n#include <map>\r\n#define FIN ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef pair<ll, ll> ii;\r\ntypedef long long ull;\r\n \r\nvector <pair<ull,ull>> limits;\r\ndouble prob(ull second_max, ull max, ull level){\r\n    double acc = 0;\r\n    if(level == limits.size()+1){\r\n        // cout << \"con maximo \" << max << \" quedo un segundo de \" << second_max << endl;\r\n        return second_max;\r\n    }else{\r\n        for(ull i = limits[level].first; i<=limits[level].second; ++i){\r\n            if(i > second_max && i<=max){\r\n                acc += prob(i, max, level+1);\r\n            }else if(i>max){\r\n                acc += prob(max, i, level+1);\r\n            }else if(i<=second_max){\r\n                acc += prob(second_max, max, level+1);\r\n            }\r\n        }\r\n        return acc/((limits[level].second-limits[level].first)+1);\r\n    }\r\n}\r\nint main() {FIN\r\n    ull n;\r\n    cin >> n;\r\n    for(ull i=0; i<n; ++i){\r\n        limits.push_back({0,0});\r\n        cin >> limits[i].first >> limits[i].second;\r\n    }\r\n    cout << prob(0, 0, 0) << endl;\r\n    \r\n}"
}