{
    "id": 232388338,
    "contestId": 792,
    "creationTimeSeconds": 1699713164,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 792,
        "index": "F",
        "name": "Mages and Monsters",
        "type": "PROGRAMMING",
        "rating": 3100,
        "tags": [
            "data structures",
            "geometry"
        ]
    },
    "author": {
        "contestId": 792,
        "members": [
            {
                "handle": "ClHg2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1490625300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 34,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define EVAL(x) #x \" = \" << (x)\r\n\r\nusing std::cin;\r\nusing std::cout;\r\nusing i64 = std::int64_t;\r\n\r\nconstexpr int range = 1.0e6;\r\n\r\nstruct Point {\r\n    int x{}, y{};\r\n\r\n    Point(int x, int y) : x{x}, y{y}\r\n    {\r\n    }\r\n\r\n    bool operator<(const Point& rhs) const\r\n    {\r\n        return std::tie(x, y) < std::tie(rhs.x, rhs.y);\r\n    }\r\n\r\n    Point operator-(const Point& rhs) const\r\n    {\r\n        return {x - rhs.x, y - rhs.y};\r\n    }\r\n};\r\n\r\ninline i64 cross(Point a, Point b)\r\n{\r\n    return i64{a.x} * b.y - i64{a.y} * b.x;\r\n}\r\n\r\nint main()\r\n{\r\n    std::ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n\r\n    int n{};\r\n    i64 m{};\r\n    cin >> n >> m;\r\n\r\n    std::set<Point> points{{0, 0}};\r\n    int last{};\r\n    for (int i{1}; i <= n; ++i) {\r\n        int k{}, x{}, y{};\r\n        cin >> k >> x >> y;\r\n        x = (x + last) % range + 1, y = (y + last) % range + 1;\r\n        // cout << EVAL(k) << \", \" << EVAL(x) << \", \" << EVAL(y) << \"\\n\";\r\n        if (k == 1) {\r\n            Point a{x, y};\r\n            auto it{points.lower_bound(a)};\r\n            if (it != points.end() && cross(a - *std::prev(it), *it - a) <= 0)\r\n                continue;\r\n            while (--it != points.begin() && cross(*it - *std::prev(it), a - *it) <= 0)\r\n                it = points.erase(it);\r\n            points.emplace_hint(it, a);\r\n        }\r\n        else {\r\n            auto it{points.lower_bound({(y - 1) / x + 1, 0})};\r\n            bool ans{};\r\n            if (it != points.end()) {\r\n                Point a{*std::prev(it)}, b{*it - a};\r\n                ans = b.y * (y - i64{a.x} * x) <= i64{m - a.y} * b.x;\r\n            }\r\n            cout << (ans ? \"YES\" : \"NO\") << \"\\n\";\r\n            if (ans)\r\n                last = i;\r\n        }\r\n    }\r\n}\r\n"
}