{
    "id": 210573970,
    "contestId": 792,
    "creationTimeSeconds": 1687367163,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 792,
        "index": "F",
        "name": "Mages and Monsters",
        "type": "PROGRAMMING",
        "rating": 3100,
        "tags": [
            "data structures",
            "geometry"
        ]
    },
    "author": {
        "contestId": 792,
        "members": [
            {
                "handle": "vjudge2"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1490625300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nconst int MAXN = 2e5 + 5;\nconst double eps = 1e-10;\nconst int P = 1e6;\ntypedef long long ll;\ntypedef long double ld;\ntypedef unsigned long long ull;\ntemplate <typename T> void chkmax(T &x, T y) {x = max(x, y); }\ntemplate <typename T> void chkmin(T &x, T y) {x = min(x, y); } \ntemplate <typename T> void read(T &x) {\n\tx = 0; int f = 1;\n\tchar c = getchar();\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') f = -f;\n\tfor (; isdigit(c); c = getchar()) x = x * 10 + c - '0';\n\tx *= f;\n}\ntemplate <typename T> void write(T x) {\n\tif (x < 0) x = -x, putchar('-');\n\tif (x > 9) write(x / 10);\n\tputchar(x % 10 + '0');\n}\ntemplate <typename T> void writeln(T x) {\n\twrite(x);\n\tputs(\"\");\n}\nint n; double m;\nmultiset <pair <int, int>> st;\ndouble getvalue(pair <int, int> a, double pos, pair <int, int> b) {\n\treturn a.second + (pos - a.first) / (b.first - a.first) * (b.second - a.second);\n}\nbool query(pair <int, int> x) {\n\tdouble Min = 1.0 * x.second / x.first;\n\tauto suf = st.lower_bound(make_pair(Min - eps + 1, 0));\n\tif (suf == st.end()) return false;\n\tauto pre = suf; pre--;\n\tdouble Mana = getvalue(*pre, Min, *suf);\n\treturn Mana * x.first - eps <= m;\n}\nbool turn(pair <int, int> a, pair <int, int> b, pair <int, int> c) {\n\tint xa = c.first - b.first, ya = c.second - b.second;\n\tint xb = b.first - a.first, yb = b.second - a.second;\n\treturn 1ll * xa * yb - 1ll * xb * ya >= 0;\n}\nvoid insert(pair <int, int> x) {\n\tauto tmp = st.insert(x);\n\tauto suf = tmp; suf++;\n\tif (suf != st.end() && (*suf).first == (*tmp).first) {\n\t\tst.erase(suf);\n\t\tsuf = tmp; suf++;\n\t}\n\tauto pre = tmp; pre--;\n\tif ((*pre).first == (*tmp).first) {\n\t\tst.erase(tmp);\n\t\treturn;\n\t}\n\tif (suf != st.end() && turn(*pre, *tmp, *suf)) {\n\t\tst.erase(tmp);\n\t\treturn;\n\t}\n\twhile (suf != st.end()) {\n\t\tauto nxt = suf; nxt++;\n\t\tif (nxt != st.end() && turn(*tmp, *suf, *nxt)) {\n\t\t\tst.erase(suf);\n\t\t\tsuf = tmp; suf++;\n\t\t} else break;\n\t}\n\twhile (pre != st.begin()) {\n\t\tauto nxt = pre; nxt--;\n\t\tif (turn(*nxt, *pre, *tmp)) {\n\t\t\tst.erase(pre);\n\t\t\tpre = tmp; pre--;\n\t\t} else break;\n\t}\n}\nint main() {\n\tread(n), read(m);\n\tint lastans = 0;\n\tst.insert(make_pair(0, 0));\n\tfor (int i = 1; i <= n; i++) {\n\t\tint type, x, y;\n\t\tread(type), read(x), read(y);\n\t\tx = (x + lastans) % P + 1;\n\t\ty = (y + lastans) % P + 1;\n\t\tif (type == 1) insert(make_pair(x, y));\n\t\telse {\n\t\t\tbool ans = query(make_pair(x, y));\n\t\t\tif (ans) {\n\t\t\t\tputs(\"YES\");\n\t\t\t\tlastans = i;\n\t\t\t} else puts(\"NO\");\n\t\t}\n\t}\n\treturn 0;\n}\n\t   \t   \t \t\t  \t  \t\t\t\t\t \t    \t \t"
}