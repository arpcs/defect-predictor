{
    "id": 232363954,
    "contestId": 792,
    "creationTimeSeconds": 1699701460,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 792,
        "index": "F",
        "name": "Mages and Monsters",
        "type": "PROGRAMMING",
        "rating": 3100,
        "tags": [
            "data structures",
            "geometry"
        ]
    },
    "author": {
        "contestId": 792,
        "members": [
            {
                "handle": "IceYukino"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1490625300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 576,
    "memoryConsumedBytes": 160358400,
    "source": "//#pragma GCC optimize(2)\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n#define ll long long\r\n//#define double long double\r\n#define N 100005\r\n#define mod 998244353\r\n#define pii pair<int,int>\r\n#define mp make_pair\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n#define INF 1e6\r\nint qpow(int a,int b){\r\n\tint res=1;\r\n\tfor(;b;b>>=1){\r\n\t\tif(b&1) res=res*a%mod;\r\n\t\ta=a*a%mod;\r\n\t}\r\n\treturn res;\r\n}\r\n/*int fac[N],ifac[N];\r\nint C(int n,int m){\r\n\tif(m>n||m<0||n<0) return 0;\r\n\treturn fac[n]*ifac[n-m]%mod*ifac[m]%mod;\r\n}\r\nvoid init(){\r\n\tfac[0]=1;\r\n\tfor(int i=1;i<N;i++) fac[i]=fac[i-1]*i%mod;\r\n\tifac[N-1]=qpow(fac[N-1],mod-2);\r\n\tfor(int i=N-2;i>=0;i--) ifac[i]=ifac[i+1]*(i+1)%mod;\r\n}*/\r\n/*struct node{\r\n\tint nxt,to;\r\n}e[N<<1];\r\nint cnt=1,head[N];\r\ninline void add(int x,int y){\r\n\te[++cnt].nxt=head[x];\r\n\thead[x]=cnt;\r\n\te[cnt].to=y;\r\n}*/\r\ninline int lowbit(int x){return x&(-x);}\r\ninline int read(){\r\n  int x=0,t=1;char ch=getchar();\r\n  while(ch<'0'||ch>'9'){\r\n    if(ch=='-') t=-1;\r\n    ch=getchar();\r\n  }\r\n    while(ch>='0'&&ch<='9'){\r\n        x=(x<<1)+(x<<3)+(ch-'0');\r\n        ch=getchar();\r\n    }\r\n    return x*t;\r\n}\r\ninline void write(int x){\r\n\tif(x<0) putchar('-'),x=-x;\r\n\tif(x>=10) write(x/10);\r\n\tputchar(x%10+'0');\r\n}\r\n#define ls(rt) tr[rt].ls\r\n#define rs(rt) tr[rt].rs\r\n#define v(rt) tr[rt].v\r\nint T,n,num,fir=-1;\r\ndouble M;\r\nstruct line{\r\n\tdouble k,b;\r\n\tdouble get(double x){return k*x+b;}\t\r\n};\r\nstruct node{\r\n\tline v;\r\n\tint ls,rs;\r\n}tr[N*50];\r\nconst double eps=1e-6;\r\nvoid update(int rt,double l,double r,int dep,line now){\r\n\tdouble mid=(l+r)/2.0;\r\n\tif(dep==50){\r\n\t\tif(v(rt).get(mid)<now.get(mid))\r\n\t\t\tswap(v(rt),now);\r\n\t\treturn;\r\n\t}\r\n\tif(fir==-1){\r\n\t\tfir=1;v(rt)=now;\r\n\t\treturn;\r\n\t}\r\n\tif(v(rt).get(mid)<now.get(mid)) swap(v(rt),now);\r\n\tif(v(rt).get(l)<now.get(l)){\r\n\t\tif(!ls(rt)){\r\n\t\t\tls(rt)=++num;\r\n\t\t\tv(num)=now;\r\n\t\t\treturn;\r\n\t\t}else update(ls(rt),l,mid,dep+1,now);\r\n\t}if(v(rt).get(r)<now.get(r)){\r\n\t\tif(!rs(rt)){\r\n\t\t\trs(rt)=++num;\r\n\t\t\tv(num)=now;\r\n\t\t\treturn;\r\n\t\t}else update(rs(rt),mid,r,dep+1,now);\r\n\t}\r\n}\r\ndouble query(int rt,double l,double r,int dep,double pos){\r\n\tdouble mid=(l+r)/2.0,res=-INF*INF;\r\n\tif(!rt) return res;\r\n\tres=v(rt).get(pos);\r\n\tif(dep==50) return res;\r\n\tif(pos<=mid) res=max(res,query(ls(rt),l,mid,dep+1,pos));\r\n\telse res=max(res,query(rs(rt),mid,r,dep+1,pos));\r\n\treturn res;\r\n}\r\nsigned main(){\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0);cout.tie(0);\r\n\tcin>>n>>M;\r\n\tint L=0,lim=1e6;num=1;int tag=0,ned=0;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tint op,x,y;cin>>op>>x>>y;\r\n\t\tx=(x+L)%lim+1;y=(y+L)%lim+1;\r\n\t\tif(op==1){\r\n\t\t\tline t;t.k=-y;t.b=x;\r\n\t\t\tupdate(1,0,INF,1,t);\r\n\t\t\tcontinue;\r\n\t\t}else{\r\n\t\t\tned++;\r\n\t\t\tif(fir==-1){\r\n\t\t\t\tif(!tag) cout<<\"NO\"<<endl;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tdouble l=0,r=INF,lst=-1;\r\n\t\t\twhile(r-l>eps){\r\n\t\t\t\tdouble lmid=l+(r-l)/3.0,rmid=r-(r-l)/3.0;\r\n\t\t\t\tdouble v1=max((double)0,query(1,0,INF,1,rmid));\r\n\t\t\t\tdouble v2=max((double)0,query(1,0,INF,1,lmid));\r\n\t\t\t\tdouble r1=(double)x*v2+M*lmid,r2=(double)x*v1+M*rmid;\r\n\t\t\t\tif(r1<r2){\r\n\t\t\t\t\tr=rmid;lst=r1;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tl=lmid;lst=r2;\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}assert(lst!=-1);\r\n\t\t//\tcout<<lst<<\"+\"<<y<<\" \"<<l<<endl;\r\n\t\t\tif(!tag){\r\n\t\t\t\tif(lst>=y-eps){\r\n\t\t\t\t\tcout<<\"YES\"<<endl;\r\n\t\t\t\t\tL=i;\r\n\t\t\t\t}else cout<<\"NO\"<<endl;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n"
}