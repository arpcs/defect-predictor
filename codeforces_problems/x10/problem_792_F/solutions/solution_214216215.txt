{
    "id": 214216215,
    "contestId": 792,
    "creationTimeSeconds": 1689601818,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 792,
        "index": "F",
        "name": "Mages and Monsters",
        "type": "PROGRAMMING",
        "rating": 3100,
        "tags": [
            "data structures",
            "geometry"
        ]
    },
    "author": {
        "contestId": 792,
        "members": [
            {
                "handle": "CC2021zyz"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1490625300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 312,
    "memoryConsumedBytes": 138342400,
    "source": "// LUOGU_RID: 116099912\n/*\r\n\u704f\u5fd3\u7c3e\u9417\u254b\u7d1d\u6769\u6b13\u5158\u6d93\u5d84\u7d30 /cf\r\n*/\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define mp make_pair\r\n#define inf (ll)1e6\r\n#define INF (ll)4e18\r\n#define pii pair <ll, ll>\r\n#define fr first\r\n#define se second\r\nconst ll mod = 1e6;\r\nchar buf[1 << 21], *p1 = buf, *p2 = buf;\r\n#define getchar() (p1 == p2 && (p2 = (p1 = buf) + fread(buf, 1, 1 << 18, stdin), p1 == p2) ? EOF : *p1++)\r\ninline ll read() {\r\n\tll x = 0, f = 1;\r\n\tchar ch = getchar();\r\n\twhile(ch < '0' || ch > '9') f = ((ch == '-') ? -1 : f), ch = getchar();\r\n\twhile(ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar();\r\n\treturn x * f;\r\n}\r\ninline void write(ll x) {\r\n\tif(x < 0) x = -x, putchar('-');\r\n\tif(x >= 10) write(x / 10);\r\n\tputchar(x % 10 + '0');\r\n}\r\nll cnt;\r\nstruct Node {\r\n\tll k, b;\r\n\tNode() {}\r\n\tNode(ll A, ll B) {\r\n\t\tk = A, b = B;\r\n\t} \r\n\tinline double val(double x) {\r\n\t\treturn k * x + b;\r\n\t}\r\n}p[1000005];\r\nconst double eps = 1e-9;\r\nstruct LiChao {\r\n\tstruct st {\r\n\t\tint l, r;\r\n\t\tint p;\r\n\t}t[10000005];\r\n\tint Rt, tot;\r\n\tinline void insert(int &id, double l, double r, int x) {\r\n\t\tif(!id) id = ++tot;\r\n\t\tif(!t[id].p) {\r\n\t\t\tt[id].p = x;\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tif(l + eps >= r) {\r\n\t\t\tif(p[x].val(l) > p[t[id].p].val(l)) t[id].p = x;\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tdouble mid = (l + r) / 2.0;\r\n\t\tif(p[x].val(mid) > p[t[id].p].val(mid)) swap(x, t[id].p);\r\n\t\tif(p[x].val(l) > p[t[id].p].val(l)) insert(t[id].l, l, mid, x);\r\n\t\telse insert(t[id].r, mid + 1, r, x);\r\n\t}\r\n\tinline double get_ans(ll id, double l, double r, double x) {\r\n\t\tif(!id) return 0;\r\n\t\tdouble ans = 0;\r\n\t\tif(t[id].p) ans = max(ans, p[t[id].p].val(x));\r\n\t\tif(l + eps >= r) return ans;\r\n\t\tdouble mid = (l + r) / 2.0;\r\n\t\tif(x <= mid) ans = max(ans, get_ans(t[id].l, l, mid, x));\r\n\t\telse ans = max(ans, get_ans(t[id].r, mid + 1, r, x));\r\n\t\treturn ans;\r\n\t}\r\n}T;\r\nll Q, m;\r\ninline double val(ll Tm) {\r\n\tdouble l = 0, r = inf;\r\n\twhile(l + eps < r) {\r\n\t\tdouble mid = (l + r) / 2.0;\r\n\t\tif(mid * m + T.get_ans(T.Rt, 0, inf, mid) * Tm > (mid + eps) * m + T.get_ans(T.Rt, 0, inf, (mid + eps)) * Tm) l = mid;\r\n\t\telse r = mid;\r\n\t} \r\n//\tprintf(\"!! %f %f\\n\", l, l * m + T.get_ans(T.Rt, 0, inf, l) * Tm);\r\n\treturn l * m + T.get_ans(T.Rt, 0, inf, l) * Tm;\r\n}\r\nint main() {\r\n//\tfreopen(\".in\", \"r\", stdin);\r\n//\tfreopen(\".out\", \"w\", stdout);\r\n\tQ = read(), m = read();\r\n\tll lst = 0;\r\n\tfor(ll i = 1; i <= Q; i++) {\r\n\t\tll op = read(), x = (read() + lst) % mod + 1, y = (read() + lst) % mod + 1;\r\n//\t\tprintf(\"?? %lld %lld\\n\", x, y);\r\n\t\tif(op == 1) {\r\n\t\t\tp[++cnt] = Node(-y, x);\r\n\t\t\tT.insert(T.Rt, 0, inf, cnt);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif(val(x) >= y) puts(\"YES\"), lst = i;\r\n\t\t\telse puts(\"NO\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\n/*\r\n*/\r\n"
}