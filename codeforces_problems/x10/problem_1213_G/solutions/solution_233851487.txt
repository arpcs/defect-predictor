{
    "id": 233851487,
    "contestId": 1213,
    "creationTimeSeconds": 1700677358,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1213,
        "index": "G",
        "name": "Path Queries",
        "type": "PROGRAMMING",
        "rating": 1800,
        "tags": [
            "divide and conquer",
            "dsu",
            "graphs",
            "sortings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1213,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1567175700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 71,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 8396800,
    "source": "#include<bits/stdc++.h>\nusing namespace std;\n\n#define yes cout<<\"YES\"<<endl\n#define no cout<<\"NO\"<<endl\n#define srt(v) sort(v.begin(),v.end())\n#define rsrt(v) sort(v.rbegin(),v.rend())\n#define ll long long\n#define pb push_back\n#define endl '\\n'\n#define ff first\n#define ss second\n#define fast ios_base::sync_with_stdio(false);cin.tie(0),cout.tie(0);\n\nint dx[] = {1,-1,0,0,-1,-1,1,1};\nint dy[] = {0,0,1,-1,-1,1,1,-1};\nconst int N = 2e5+12;\nint p[N],s[N];\nll sum(int x){\n    return (x*1LL*(x-1))/2;\n}\nint find(int x){\n    if(p[x]==x)return x;\n    return p[x]=find(p[x]);\n}\nll ans = 0;\nvoid Union(int a,int b){\n    a=find(a);\n    b=find(b);\n    if(s[a]<s[b])swap(a,b);\n    ans += sum(s[a]+s[b])-(sum(s[a])+sum(s[b]));\n    p[b]=a;\n    s[a]+=s[b];\n}\n\nvoid solve(int cs){\n    int n,m;\n    cin>>n>>m;\n    for(int i = 1;i<=n;i++){\n        p[i]=i;\n        s[i]=1;\n    }\n    std::vector<pair<int,pair<int,int>>>gp;\n    for(int i = 0;i<n-1;i++){\n        int a,b,c;\n        cin>>a>>b>>c;\n        gp.pb({c,{a,b}});\n    }\n    vector<ll>pre(N,0);\n    vector<pair<int,int>>v(m);\n    for(int i = 0;i<m;i++){\n        cin>>v[i].ff;\n        v[i].ss=i;\n    }\n    srt(v);\n    srt(gp);\n    int j = 0;\n    if(n!=1){\n        for(int i = 0;i<m;i++){\n        \n            while(v[i].ff>=gp[j].ff and j<n-1){\n                int a=gp[j].ss.ff,b=gp[j].ss.ss;\n                Union(a,b);\n                j++;\n                a=gp[j].ss.ff,b=gp[j].ss.ss;\n            }\n            pre[v[i].ss]=ans;\n        \n        }\n    }\n    for(int i = 0;i<m;i++){\n        cout<<pre[i]<<\" \";\n    }\n    \n}\n   \nint main()\n{\n\n    fast;\n    int t=1,cs=0;\n    //cin >> t;\n    while(t--)\n    {\n        solve(++cs);\n    }\n\n    return 0;\n}\n\n\t\t\t\t\t \t   \t\t  \t \t\t\t\t\t\t    \t\t\t"
}