{
    "id": 235290694,
    "contestId": 1877,
    "creationTimeSeconds": 1701466711,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1877,
        "index": "C",
        "name": "Joyboard",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1200,
        "tags": [
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1877,
        "members": [
            {
                "handle": "dusty_spider"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1696755900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// #define Tamim_Dewan 1\r\n\r\n// Speed\r\n#define Code ios_base::sync_with_stdio(false);\r\n#define By cin.tie(NULL);\r\n#define dusty_spider cout.tie(NULL);\r\n\r\n// Aliases\r\nusing ll = long long;\r\nusing lld = long double;\r\nusing ull = unsigned long long;\r\n\r\n// Constants\r\nconst lld pi = 3.141592653589793238;\r\nconst ll INF = INT64_MAX;\r\nconst ll mod = 1e9 + 7;\r\n\r\n// TypeDEf\r\ntypedef pair<ll, ll> pll;\r\ntypedef vector<ll> vll;\r\ntypedef vector<pll> vpll;\r\ntypedef vector<string> vs;\r\ntypedef unordered_map<ll, ll> umll;\r\ntypedef map<ll, ll> mll;\r\n\r\n// Macros\r\n#define ff first\r\n#define ss second\r\n#define pb push_back\r\n#define mp make_pair\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define FOR(i, n) for (int i = 0; i < n; i++)\r\n#define FORd(i, n) for (int i = n - 1; i >= 0; i--)\r\n#define fl(i, n) for (int i = 1; i <= n; i++)\r\n#define rl(i, m, n) for (int i = n; i >= m; i--)\r\n#define trav(a, x) for (auto &a : x)\r\n#define zero cout << \"0\" << endl;\r\n#define one cout << \"1\" << endl;\r\n#define two cout << \"2\" << endl;\r\n#define py cout << \"YES\\n\";\r\n#define pm cout << \"-1\\n\";\r\n#define pn cout << \"NO\\n\";\r\n#define all(v) v.begin(), v.end()\r\n#define rall(v) v.rbegin(), v.rend()\r\n\r\n// Operator overloads\r\ntemplate <typename T1, typename T2>istream &operator>>(istream &istream, pair<T1, T2> &p){return (istream >> p.first >> p.second);}\r\ntemplate <typename T> istream &operator>>(istream &istream, vector<T> &v){for (auto &it : v)cin >> it;return istream;}\r\ntemplate <typename T1, typename T2> ostream &operator<<(ostream &ostream, const pair<T1, T2> &p){return (ostream << p.first << \" \" << p.second);}\r\ntemplate <typename T> ostream &operator<<(ostream &ostream, const vector<T> &c){for (auto &it : c)cout << it << \" \";return ostream;}\r\n\r\n// Utility functions\r\ntemplate <typename T>\r\nvoid print(T &&t) { cout << t << \"\\n\"; }\r\nvoid printarr(ll arr[], ll n){fl(i, n) cout << arr[i] << \" \";cout << \"\\n\";}\r\ntemplate <typename T>\r\nvoid printvec(vector<T> v){ll n = v.size();fl(i, n) cout << v[i] << \" \";cout << \"\\n\";}\r\ntemplate <typename T>\r\nll sumvec(vector<T> v){ll n = v.size();ll s = 0;fl(i, n) s += v[i];return s;}\r\n\r\n#define Tamim_Dewan 1\r\n// Debug\r\n#ifdef Tamim_Dewan\r\n#define debug(x)cerr << #x << \" \";_print(x); cerr << \"\\n\";\r\n#else\r\n#define debug(x) ;\r\n#endif\r\n\r\nvoid _print(ll t){cerr << t;}\r\nvoid _print(int t) { cerr << t; }\r\nvoid _print(string t) { cerr << t; }\r\nvoid _print(char t) { cerr << t; }\r\nvoid _print(lld t) { cerr << t; }\r\nvoid _print(double t) { cerr << t; }\r\nvoid _print(ull t) { cerr << t; }\r\n\r\ntemplate <class T, class V>void _print(pair<T, V> p);\r\ntemplate <class T>void _print(vector<T> v);\r\ntemplate <class T>void _print(set<T> v);\r\ntemplate <class T, class V>void _print(map<T, V> v);\r\ntemplate <class T>void _print(multiset<T> v);\r\ntemplate <class T, class V>void _print(pair<T, V> p){cerr << \"{\";_print(p.ff);cerr << \",\";_print(p.ss);cerr << \"}\";}\r\ntemplate <class T>void _print(vector<T> v){cerr << \"[ \";for (T i : v){_print(i);cerr << \" \";}cerr << \"]\";}\r\ntemplate <class T>void _print(set<T> v){cerr << \"[ \";for (T i : v){_print(i);cerr << \" \";}cerr << \"]\";}\r\ntemplate <class T> void _print(multiset<T> v){cerr << \"[ \";for (T i : v){_print(i);cerr << \" \";}cerr << \"]\";}\r\ntemplate <class T, class V>void _print(map<T, V> v){cerr << \"[ \";for (auto i : v){_print(i);cerr << \" \";}cerr << \"]\";}\r\n\r\n// Mathematical functions\r\n// ll gcd(ll a, ll b){if (b == 0)return a;return gcd(b, a % b);} //__gcd\r\n// ll lcm(ll a, ll b){return (a/gcd(a,b)*b);}\r\n// ll moduloMultiplication(ll a,ll b,ll mod){ll res = 0;a %= mod;while (b){if (b & 1)res = (res + a) % mod;b >>= 1;}return res;}\r\n// ll powermod(ll x, ll y, ll p){ll res = 1;x = x % p;if (x == 0) return 0;while (y > 0){if (y & 1)res = (res*x) % p;y = y>>1;x = (x*x) % p;}return res;}\r\n// vector<ll> primeFactors(int n){vll primes;while (n % 2 == 0){primes.pb(2);n = n / 2;}for (int i = 3; i <= sqrt(n); i = i + 2)\r\n// {while (n % i == 0){primes.pb(i);n = n / i;}}if (n > 2)primes.pb(n);return primes;}\r\n\r\n// Graph-dfs\r\n//  bool gone[MN];\r\n//  vector<int> adj[MN];\r\n//  void dfs(int loc){\r\n//      gone[loc]=true;\r\n//      for(auto x:adj[loc])if(!gone[x])dfs(x);\r\n//  }\r\n\r\n// Sorting\r\nbool sorta(const pair<int, int> &a, const pair<int, int> &b) { return (a.second < b.second); }\r\nbool sortd(const pair<int, int> &a, const pair<int, int> &b) { return (a.second > b.second); }\r\n\r\n// //Bits\r\n// string decToBinary(int n){string s=\"\";int i = 0;while (n > 0) {s =to_string(n % 2)+s;n = n / 2;i++;}return s;}\r\n// ll binaryToDecimal(string n){string num = n;ll dec_value = 0;int base = 1;int len = num.length();for(int i = len - 1; i >= 0; i--){if (num[i] == '1')dec_value += base;base = base * 2;}return dec_value;}\r\n\r\n// //Check\r\n// bool isPrime(ll n){if(n<=1)return false;if(n<=3)return true;if(n%2==0||n%3==0)return false;for(int i=5;i*i<=n;i=i+6)if(n%i==0||n%(i+2)==0)return false;return true;}\r\n// bool isPowerOfTwo(int n){if(n==0)return false;return (ceil(log2(n)) == floor(log2(n)));}\r\n// bool isPerfectSquare(ll x){if (x >= 0) {ll sr = sqrt(x);return (sr * sr == x);}return false;}\r\n\r\n// Code by Tamim Dewan\r\n// Language C++\r\n// Practice -> Success\r\n\r\n/*---------------------------------------------------------------------------\r\n                             Dusty_Spider\r\n---------------------------------------------------------------------------*/\r\n\r\nvoid dusty()\r\n{\r\n    ll n, m , k; cin >> n >> m >> k;\r\n\r\n    ll k1 = 0 , k2 = 0 , k3 = 0;\r\n\r\n    if(m > n){\r\n        ll x = m - n;\r\n        k2 += x / n;\r\n        k3 += (x/n) * n - (x/n);\r\n        k3 += x % n;\r\n\r\n        k2 += n;\r\n        k1 += 1;\r\n        \r\n    }\r\n    else{\r\n        if(m == 0){k1 ++;}\r\n        else k2 += (m - 1);\r\n    }\r\n\r\n    if(k == 1) cout << k1 << endl;\r\n    else if(k == 2) cout << k2 << endl;\r\n    else if(k == 3) cout << k3 << endl;\r\n    else cout << 0 << endl;\r\n}\r\n// Main\r\nint main()\r\n{\r\n    Code By dusty_spider\r\n\r\n        ll t = 1;\r\n    cin >> t;\r\n    fl(i, t)\r\n    {\r\n        dusty();\r\n    }\r\n    // dusty();\r\n    // fl(i,t) //Kickstart\r\n    // {\r\n    //     cout<<\"Case #\"<<i+1<<\": \";\r\n    //     dusty();\r\n    //     cout<<\"\\n\";\r\n    // }\r\n    return 0;\r\n}\r\n"
}