{
    "id": 225144612,
    "contestId": 862,
    "creationTimeSeconds": 1695658194,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 862,
        "index": "B",
        "name": "Mahmoud and Ehab and the bipartiteness",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "dfs and similar",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 862,
        "members": [
            {
                "handle": "PARTH_2908"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1505833500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 5222400,
    "source": "#include <bits/stdc++.h>\r\n#define lli long long int\r\n#define pb push_back\r\n#define all(v) (v).begin(), (v).end()\r\n#define rall(v) (v).rbegin, (v).rend()\r\nusing namespace std;\r\nconst lli N = 1e5 + 10;\r\nlli n;\r\nvector<int> g[N];\r\nvector<int> vis(N, 0);\r\nvector<int> par(N, 0);\r\nint bfs(int v)\r\n{\r\n    queue<int> q;\r\n    q.push(v);\r\n    vis[v] = 1;\r\n    par[v] = -1;\r\n    vector<int> c1, c2;\r\n    c1.pb(v);\r\n    while (!q.empty())\r\n    {\r\n        int curr = q.front();\r\n        q.pop();\r\n        // cout<<curr<<endl;\r\n        for (auto c : g[curr])\r\n        {\r\n            if (vis[c]!=0)\r\n                continue;\r\n            if (vis[curr] == 1)\r\n            {\r\n                vis[c] = 2;\r\n                c2.pb(c);\r\n                q.push(c);\r\n                par[c] = curr;\r\n            }\r\n            else\r\n            {\r\n                vis[c] = 1;\r\n                c1.pb(c);\r\n                q.push(c);\r\n                par[c] = curr;\r\n            }\r\n            par[c] = curr;\r\n            // cout<<c<<\" \"<<par[c]<<endl;\r\n        }\r\n    }\r\n    // for (auto i : c1)\r\n    // {\r\n    //     cout << i << \" \";\r\n    // }\r\n    // cout << endl;\r\n    // for (auto i : c2)\r\n    // {\r\n    //     cout << i << \" \";\r\n    // }\r\n    // cout<<endl;\r\n    int res = c1.size()*c2.size()-n+1;\r\n    // for(auto i : c1){\r\n    //     for(auto j : c2){\r\n    //         if(par[i]!=j&&par[j]!=i){\r\n    //             // cout<<i<<\" \"<<j<<\" p \"<<par[i]<<\" \"<<par[j]<<endl;\r\n    //             // g[i].pb(j);\r\n    //             // g[j].pb(i);\r\n    //             // par[j]=i;\r\n    //             res++;\r\n    //         }\r\n    //     }\r\n    // }\r\n     return res;\r\n}\r\nvoid solve()\r\n{\r\n    \r\n    cin >> n;\r\n    for (int i = 0; i < n - 1; i++)\r\n    {\r\n        int x,y;\r\n        cin >> x >> y;\r\n        g[x].pb(y);\r\n        g[y].pb(x);\r\n    }\r\n    int ans =  bfs(1);\r\n    cout<<ans<<endl;\r\n}\r\nint main()\r\n{\r\n    int t = 1;\r\n    // cin>>t;\r\n    while (t--)\r\n    {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}