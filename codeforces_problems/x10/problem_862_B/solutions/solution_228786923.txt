{
    "id": 228786923,
    "contestId": 862,
    "creationTimeSeconds": 1697714415,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 862,
        "index": "B",
        "name": "Mahmoud and Ehab and the bipartiteness",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "dfs and similar",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 862,
        "members": [
            {
                "handle": "aconot10"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1505833500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 4608000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main() {\r\n    \r\n\tint n;\r\n\t\r\n\tcin>>n;\r\n\t\r\n\tvector<int>adj[n];\r\n\t\r\n\tfor(int i=0;i<n;i++)\r\n\t{\r\n\t    int x,y;\r\n\t    cin>>x>>y;\r\n\t    adj[x-1].push_back(y-1);\r\n\t    adj[y-1].push_back(x-1);\r\n\t}\r\n\t\r\n\tvector<int>visited(n,0);\r\n\t\r\n\tqueue<int>q;\r\n\t\r\n\tq.push(0);\r\n\tvisited[0] = 1;\r\n\t\r\n\twhile(q.empty()==false)\r\n\t{\r\n\t    int curr = q.front();\r\n\t    \r\n\t    q.pop();\r\n\t    \r\n\t    for(auto u:adj[curr] )\r\n\t    {\r\n\t        if(visited[u]==0)\r\n\t        {\r\n\t          q.push(u);\r\n\t          visited[u] = 3-visited[curr];\r\n\t        }\r\n\t        \r\n\t    }\r\n\t    \r\n\t}\r\n\t\r\n\t\r\n\tint count1 = 0;\r\n\tint count2 = 0;\r\n\t\r\n\t\r\n\tfor(int i=0;i<n;i++)\r\n\t{\r\n\t    if(visited[i]==1) count1++;\r\n\t    \r\n\t    else  count2++;\r\n\t}\r\n\t\r\n\t\r\n\r\n\tlong long res = (long long)count1 * (long long)count2;\r\n\t\tcout<<res-(long long)(n-1)<<endl;\r\n\treturn 0;\r\n}"
}