{
    "id": 212937482,
    "contestId": 862,
    "creationTimeSeconds": 1688891344,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 862,
        "index": "B",
        "name": "Mahmoud and Ehab and the bipartiteness",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1300,
        "tags": [
            "dfs and similar",
            "graphs",
            "trees"
        ]
    },
    "author": {
        "contestId": 862,
        "members": [
            {
                "handle": "bkifhr7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1505833500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 36,
    "timeConsumedMillis": 78,
    "memoryConsumedBytes": 9625600,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1e5 + 7;\nbool vis[N];\nvector<long long> a[N], dis(2);\nvoid lol(int idx = 0, int par = -1, int lev = 0) {\n    vis[idx] = 1;\n    dis[lev & 1] ++;\n    for(auto x : a[idx]) {\n        if(par == x) continue;\n        if(!vis[x]) lol(x, idx, lev ^ 1); \n    }\n}\nint main()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);cout.tie(0);\n    int t = 1;\n    // cin >> t;\n    while(t --) {\n       int n;\n       cin >> n;\n       for(int i = 1; i < n; i ++) {\n            int u, v;\n            cin >> u >> v;\n            u --, v --;\n            a[u].emplace_back(v);\n            a[v].emplace_back(u);\n       }\n       lol();\n       long long ans = dis[0] * dis[1];\n       cout << ans - (n - 1);\n    }\n    return 0;\n}\n\n   \t\t\t\t \t \t \t\t\t  \t \t  \t\t \t\t\t \t\t\n \t\t\t\t\t \t \t \t\t\t   \t  \t\t    \t\t  \t"
}