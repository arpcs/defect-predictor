{
    "id": 199422953,
    "contestId": 901,
    "creationTimeSeconds": 1679927702,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 901,
        "index": "A",
        "name": "Hashing Trees",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 901,
        "members": [
            {
                "handle": "etilletas_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1513697700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 45,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 38502400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define endl '\\n'\r\n#define x first\r\n#define y second\r\n#define pb push_back\r\n#define all(a) a.begin(), a.end()\r\n#define ios ios::sync_with_stdio(false), cin.tie(0), cout.tie(0)\r\ntypedef long long ll;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, ll> pll;\r\nconst int maxn = 900100, maxm = 1000100, inf = 0x3f3f3f3f, mod = 1e9 + 7;\r\nconst ll INF = 0x3f3f3f3f3f3f3f3f;\r\nconst double eps = 1e-8;\r\n\r\nint a[maxn], fa[maxn], pre[maxn], flo[maxn];\r\nvector<int> idx[maxn];\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    int m = 0;\r\n    n++;\r\n    int num = 0;\r\n    int flag1 = 0;\r\n    for (int i = 1; i <= n; i++) {\r\n        cin >> a[i];\r\n        if (i > 1 && a[i] > 1 && a[i - 1] > 1) flag1 = 1;\r\n    }\r\n    if (flag1 == 0) {\r\n        cout << \"perfect\" << '\\n';\r\n        return 0;\r\n    }\r\n    cout << \"ambiguous\" << '\\n';\r\n    for (int i = 1; i <= n; i++) {\r\n        pre[i] = pre[i - 1] + a[i];\r\n    }\r\n    m = pre[n];\r\n    for (int i = 1; i <= n; i++) {\r\n        for (int j = pre[i - 1] + 1; j <= pre[i]; j++) {\r\n            idx[i].push_back(j);\r\n            flo[j] = i;\r\n        }\r\n    }\r\n    fa[1] = 0;\r\n    for (int i = 2; i <= m; i++) {\r\n        fa[i] = idx[flo[i] - 1][0];\r\n    }\r\n    for (int i = 1; i <= m; i++) cout << fa[i] << ' ';\r\n    cout << '\\n';\r\n    int flag = 0, fir = 1;\r\n    for (int i = 1; i <= n; i++) {\r\n        if (i > 1 && a[i] > 1 && a[i - 1] > 1) {\r\n            fa[idx[i][1]] = idx[i-1][1];\r\n            break;\r\n        }\r\n    }\r\n    for (int i = 1; i <= m; i++) cout << fa[i] << ' ';\r\n}"
}