{
    "id": 125556356,
    "contestId": 901,
    "creationTimeSeconds": 1628670479,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 901,
        "index": "A",
        "name": "Hashing Trees",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 901,
        "members": [
            {
                "handle": "ycs123"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1513697700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 45,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 17817600,
    "source": "#include<bits/stdc++.h>\r\n#include<time.h>\r\nusing namespace std;\r\n#define SZ(a) (int)a.size()\r\n#define pb(a) push_back(a)\r\n#define mkp(a,b) make_pair(a,b)\r\n#define Accepted return 0;\r\n\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\nconst double PI=acos(-1.0);\r\nconst int MAX=2e5+100,inf=0x3f3f3f3f;\r\nconst int mod97=1e9+7,mod33=998244353;\r\nconst int drc[4][2]={{1,0},{0,1},{-1,0},{0,-1}};\r\n\r\nint Main();\r\nint main(){\r\n\t#ifdef ONLINE_JUDGE\r\n\t\t//#define USE_FILE\r\n\t\t#ifdef USE_FILE\r\n\t\t\tfreopen(\"input.txt\",\"r\",stdin);\r\n\t\t\tfreopen(\"output.txt\",\"w\",stdout);\r\n\t\t#endif\r\n\t#endif\r\n\treturn Main();\r\n}\r\nint read(string& s){\r\n\ts=\"\";\r\n\tchar c=getchar();\r\n\tif(c==-1) return -1;\r\n\twhile(!isprint(c)) c=getchar();\r\n\twhile(isprint(c)){\r\n\t\ts+=c;\r\n\t\tc=getchar();\r\n\t}\r\n\treturn 1;\r\n}\r\nvoid write(const string& s){\r\n\tfor(auto& u:s){\r\n\t\tprintf(\"%c\",u);\r\n\t}\r\n}\r\null GCD(ull x,ull y){\r\n\treturn y?GCD(y,x%y):x;\r\n}\r\null Pow(ull a,ull n,ull mod){\r\n\tll ans=1;\r\n\twhile(n){\r\n\t\tif(n&1) ans=ans*a%mod;\r\n\t\ta=a*a%mod;\r\n\t\tn>>=1;\r\n\t}\r\n\treturn ans;\r\n}\r\n\r\nstruct edge{\r\n\tint to,cap,dis,nt;\r\n}e[MAX<<2];\r\nint head[MAX>>1],tot;\r\nint MinCost,MaxFlow;\r\nvoid add(int x,int y,int cap,int dis=0){\r\n\te[tot].to=y;\r\n\te[tot].cap=cap;\r\n\te[tot].dis=dis;\r\n\te[tot].nt=head[x];\r\n\thead[x]=tot++;\r\n}\r\n\r\n\r\nint n,m,Q;\r\nint K,H,W,X,Y,R,L;\r\nint a[MAX];\r\n\r\nbool Ck(){\r\n\tfor(int i=1;i<=n;++i){\r\n\t\tif(a[i]>1&&a[i-1]>1){\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}\r\nvoid F1(){\r\n\tint sum=1;\r\n\tprintf(\"0\");\r\n\tfor(int i=1;i<=n;++i){\r\n\t\tfor(int j=1;j<=a[i];++j){\r\n\t\t\tprintf(\" %d\",sum);\r\n\t\t}\r\n\t\tsum+=a[i-1];\r\n\t}puts(\"\");\r\n}\r\nvoid F2(){\r\n\tint sum=1;\r\n\tprintf(\"0\");\r\n\tfor(int i=1;i<=n;++i){\r\n\t\tint j=0;\r\n\t\tfor(int k=1;k<=a[i];++k){\r\n\t\t\tprintf(\" %d\",sum+j);\r\n\t\t\tj++;\r\n\t\t\tif(j==a[i-1]) j-=a[i-1];\r\n\t\t}\r\n\t\tsum+=a[i-1];\r\n\t}puts(\"\");\r\n}\r\nvoid Solve(){\r\n\tfor(int i=0;i<=n;++i) scanf(\"%d\",&a[i]);\r\n\tif(!Ck()){\r\n\t\tputs(\"perfect\");\r\n\t\treturn;\r\n\t}\r\n\tputs(\"ambiguous\");\r\n\tF1();\r\n\tF2();\r\n}\r\n\r\nint Main(){\r\n\tint t=1;\r\n//\tscanf(\"%d\",&t);\r\n\twhile(t--){\r\n\t\twhile(~scanf(\"%d\",&n)){\r\n\t\t\tSolve();\r\n\t\t}\r\n\t}\r\n\tAccepted\r\n}\r\n\r\n"
}