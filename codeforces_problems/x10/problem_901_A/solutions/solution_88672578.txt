{
    "id": 88672578,
    "contestId": 901,
    "creationTimeSeconds": 1596292017,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 901,
        "index": "A",
        "name": "Hashing Trees",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "trees"
        ]
    },
    "author": {
        "contestId": 901,
        "members": [
            {
                "handle": "beast_23"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1513697700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 4710400,
    "source": "#include <bits/stdc++.h>\r\n#define int long long int\r\n#define us unsigned int\r\n#define null 0\r\n#define modulo 1000000007\r\n#define m_p make_pair\r\n#define f_i first\r\n#define s_e second\r\n#define p_b push_back\r\n\r\nusing namespace std;\r\n\r\n\r\nvoid IOS()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n}\r\n\r\nvector<int> v1[1000];\r\nvector<int> v2[1000];\r\nint n;\r\n\r\nint curr=1;\r\nint flag1=0;\r\n\r\nvoid dfs1(int lev,int arr[],int s)\r\n{\r\n    if(lev==n-1)\r\n    {\r\n        return;\r\n    }\r\n\r\n\r\n    for(int i=0;i<arr[lev+1];i++)\r\n    {\r\n        v1[s].p_b(curr);\r\n        curr++;\r\n    }\r\n\r\n    dfs1(lev+1,arr,v1[s][0]);\r\n\r\n}\r\n\r\n\r\nvoid dfs2(int lev,int arr[],int s1,int s2)\r\n{\r\n    if(lev==n-1)\r\n    {\r\n        return;\r\n    }\r\n\r\n    if(arr[lev]>1 && arr[lev+1]>1 && flag1==0)\r\n    {\r\n        v2[s2].p_b(curr++);\r\n        arr[lev+1]--;\r\n        flag1=1;\r\n    }\r\n\r\n    for(int i=0;i<arr[lev+1];i++)\r\n    {\r\n        v2[s1].p_b(curr++);\r\n    }\r\n\r\n    if(arr[lev+1]>1)\r\n    {\r\n        dfs2(lev+1,arr,v2[s1][0],v2[s1][1]);\r\n    }\r\n\r\n    else\r\n    {\r\n        dfs2(lev+1,arr,v2[s1][0],0);\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nint32_t main()\r\n{\r\n\r\n    //IOS();\r\n    /*freopen(\"input.txt\",\"r\",stdin);\r\n    freopen(\"output.txt\",\"w\",stdout);\r\n    */\r\n\r\n    cin>>n;\r\n    n++;\r\n\r\n    int flag=0;\r\n    int sum=0;\r\n\r\n    int a[n];\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        cin>>a[i];\r\n        sum+=a[i];\r\n\r\n        if(i>0 && a[i]>1 && a[i-1]>1)\r\n        {\r\n            flag=1;\r\n        }\r\n\r\n    }\r\n\r\n    if(flag==0)\r\n    {\r\n        cout<<\"perfect\";\r\n        return 0;\r\n    }\r\n\r\n    dfs1(0,a,0);\r\n    curr=1;\r\n    dfs2(0,a,0,0);\r\n\r\n    int parent1[sum],parent2[sum];\r\n    parent1[0]=0,parent2[0]=0;\r\n\r\n    for(int i=0;i<sum;i++)\r\n    {\r\n        for(int j=0;j<v1[i].size();j++)\r\n        {\r\n            int curr=v1[i][j];\r\n            parent1[curr]=i+1;\r\n        }\r\n    }\r\n\r\n    for(int i=0;i<sum;i++)\r\n    {\r\n        for(int j=0;j<v2[i].size();j++)\r\n        {\r\n            int curr=v2[i][j];\r\n            parent2[curr]=i+1;\r\n        }\r\n    }\r\n\r\n    cout<<\"ambiguous\"<<endl;\r\n    for(int i=0;i<sum;i++)\r\n    {\r\n        cout<<parent1[i]<<\" \";\r\n    }\r\n\r\n    cout<<endl;\r\n\r\n    for(int i=0;i<sum;i++)\r\n    {\r\n        cout<<parent2[i]<<\" \";\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"
}