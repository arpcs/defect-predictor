{
    "id": 226516670,
    "contestId": 106,
    "creationTimeSeconds": 1696390753,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 106,
        "index": "D",
        "name": "Treasure Island",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1700,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    "author": {
        "contestId": 106,
        "members": [
            {
                "handle": "fywc"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1313766000
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 36044800,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define ll long long\n\nstruct cmd {\n\tchar dir;\n\tint len;\n};\n\nstruct location {\n\tint i;\n\tint j;\n};\n\nint N[1500][1500];\nint S[1500][1500];\nint E[1500][1500];\nint W[1500][1500];\n\nvoid Solution()\n{\n\tint n, m;\n\tcin >> n >> m;\n\tchar s[n + 1][m + 1];\n\tmap<char, struct location> local_sights;\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= m; j++) {\n\t\t\tcin >> s[i][j];\n\t\t\tif (s[i][j] >= 'A' && s[i][j] <= 'Z') {\n\t\t\t\tstruct location temp = {i, j}; \n\t\t\t\tlocal_sights[s[i][j]] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 1; i <= m; i++) {\n\t\tfor (int j = 1; j <= n; j++) {\n\t\t\tif (s[j][i] == '#')\n\t\t\t\tN[j][i] = 0;\n\t\t\telse\n\t\t\t\tN[j][i] = N[j - 1][i] + 1;\n\t\t}\n\t\tfor (int j = n; j >= 1; j--) {\n\t\t\tif (s[j][i] == '#')\n\t\t\t\tS[j][i] = 0;\n\t\t\telse\n\t\t\t\tS[j][i] = S[j + 1][i] + 1;\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= m; j++) {\n\t\t\tif (s[j][i] == '#')\n\t\t\t\tW[i][j] = 0;\n\t\t\telse\n\t\t\t\tW[i][j] = W[i][j - 1] + 1;\n\t\t}\n\t\tfor (int j = m; j >= 1; j--) {\n\t\t\tif (s[i][j] == '#')\n\t\t\t\tE[i][j] = 0;\n\t\t\telse\n\t\t\t\tE[i][j] = E[i][j + 1] + 1;\n\t\t}\n\t}\n\tfor (int i = 1; i <= n; i++) {\n\t\tfor (int j = 1; j <= n; j++) {\n\t\t\tN[i][j]--;\n\t\t\tS[i][j]--;\n\t\t\tE[i][j]--;\n\t\t\tW[i][j]--;\n\t\t}\n\t}\n\t\t\t\n\tint k;\n\tcin >> k;\n\tvector<struct cmd> ins(k);\n\tfor (int i = 0; i < k; i++) {\n\t\tchar dir;\n\t\tint len;\n\t\tcin >> dir >> len;\n\t\tstruct cmd temp = {dir, len};\n\t\tins[i] = temp;\n\t}\n\n\tvector<char> ans;\n\tfor (auto it = local_sights.begin(); it != local_sights.end(); it++) {\n\t\tbool is_satisfy = true;\n\t\tint temp_i = it->second.i;\n\t\tint temp_j = it->second.j;\n\t\tfor (int i = 0; i < k; i++) {\n\t\t\tif (ins[i].dir == 'N') {\n\t\t\t\tint len = ins[i].len;\n\t\t\t\tif (N[temp_i][temp_j] >= len) {\n\t\t\t\t\ttemp_i -= len;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tis_satisfy = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (ins[i].dir == 'S') {\n\t\t\t\tint len = ins[i].len;\n\t\t\t\tif (S[temp_i][temp_j] >= len) {\n\t\t\t\t\ttemp_i += len;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tis_satisfy = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (ins[i].dir == 'E') {\n\t\t\t\tint len = ins[i].len;\n\t\t\t\tif (E[temp_i][temp_j] >= len) {\n\t\t\t\t\ttemp_j += len;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tis_satisfy = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (ins[i].dir == 'W') {\n\t\t\t\tint len = ins[i].len;\n\t\t\t\tif (W[temp_i][temp_j] >= len) {\n\t\t\t\t\ttemp_j -= len;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tis_satisfy = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (is_satisfy) {\n\t\t\tans.push_back(it->first);\n\t\t}\n\t}\n\tint ans_len = ans.size();\n\tif (ans_len > 0) {\n\t\tsort(ans.begin(), ans.end());\n\t\tfor(int i = 0; i < ans_len; i++) {\n\t\t\tcout << ans[i];\n\t\t}\n\t\tcout << endl;\n\t}\n\telse {\n\t\tcout << \"no solution\" << endl;\n\t}\n\n\treturn ;\n}\n\nint main()\n{\n        Solution();\n    \treturn 0;\n}\n"
}