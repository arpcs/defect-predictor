{
    "id": 211314725,
    "contestId": 1422,
    "creationTimeSeconds": 1687938584,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1422,
        "index": "F",
        "name": "Boring Queries",
        "type": "PROGRAMMING",
        "points": 2750.0,
        "rating": 2700,
        "tags": [
            "data structures",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1422,
        "members": [
            {
                "handle": "h_squared"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1601827500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 50,
    "timeConsumedMillis": 1949,
    "memoryConsumedBytes": 300441600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long int ll;\r\ntypedef double dd;\r\ntypedef long double ldd;\r\n#define tst int T;cin>>T;for(int t=1;t<=T;t++)\r\n#define nl cout<<'\\n';\r\n#define rep(i,l,r) for (int i=l;i<r;i++)\r\n#define per(i,r,l) for (int i=r;i>l;i--)\r\n#define pii pair<int,int>\r\n#define mp(a,b) make_pair(a,b)\r\n#define pb push_back\r\n#define all(a) a.begin(),a.end()\r\n#define sz(a) (int)a.size()\r\n#define vi vector<int>\r\n#define vll vector<ll>\r\n#define PI 3.14159265\r\n#define fi first\r\n#define se second\r\nconst ll MOD1=1e9+7;\r\nconst ll MOD2=998244353;\r\nll mod=MOD1;\r\nll po(ll x,ll y,ll _prime=mod) {if(y<0)return 0;y%=(_prime-1);ll res=1;while(y>0){if(y&1)res=(res*x)%_prime;x=(x*x)%_prime;y>>=1;}return (res%_prime);}\r\nll gcd(ll a, ll b){if(a<b) swap(a,b);if(b==0) return a;return gcd(a%b,b);}\r\n\r\nconst int M=500;\r\nconst int N=2e5;\r\nstruct node{\r\n    node *l,*r;\r\n    int prod;\r\n    node(ll prod):l(NULL),r(NULL),prod(prod){}\r\n    node(node *l,node *r):l(l),r(r),prod(1){\r\n        if(l)prod=1LL*prod*l->prod%mod;\r\n        if(r)prod=1LL*prod*r->prod%mod;\r\n    }\r\n};\r\nnode* build(int ul,int ur){\r\n    if(ul==ur)return new node(1);\r\n    int mid=(ul+ur)/2;\r\n    return new node(build(ul,mid),build(mid+1,ur));\r\n}\r\nnode* update(node *u, int ul,int ur,int i,int k){\r\n    if(ul==ur)return new node(1LL*u->prod*k%mod);\r\n    int mid=(ul+ur)/2;\r\n    if(i<=mid)return new node(update(u->l,ul,mid,i,k),u->r);\r\n    else return new node(u->l,update(u->r,mid+1,ur,i,k));\r\n}\r\n\r\nint query(node *u,int ul,int ur,int l,int r){\r\n    if(r<l || l>ur || r<ul)return 1;\r\n    if(l<=ul && ur<=r)return u->prod;\r\n    int mid=(ul+ur)/2;\r\n    return 1LL*query(u->l,ul,mid,l,r)*query(u->r,mid+1,ur,l,r)%mod;\r\n}\r\nint cnt(int x,int p){\r\n    int c=0;while(x%p==0){x/=p;c++;}return c;\r\n}\r\n\r\ntemplate<class T>\r\nstruct segTree{\r\n    int n;vector<T>t;T init;\r\n    segTree(int _n,T _init){\r\n        n=_n;t.resize(2*n);init=_init;for(auto &tt:t)tt=init;\r\n    }void update(int i,T k){\r\n        i+=n;t[i]=k;\r\n        while(i>1){i>>=1;t[i]=merge(t[i<<1],t[(i<<1)|1]);}\r\n    }T query(int l,int r){\r\n        l+=n;r+=n;T res=init;\r\n        while(l<r){\r\n            if(l&1){res=merge(res,t[l]);l++;}\r\n            if(!(r&1)){res=merge(res,t[r]);r--;}\r\n            l>>=1;r>>=1;\r\n        }if(l==r)res=merge(res,t[l]);\r\n        return res;\r\n    }T merge(T&a,T&b){\r\n        T res(sz(a));\r\n        rep(i,0,sz(a))res[i]=max(a[i],b[i]);\r\n        return res;\r\n    }\r\n};\r\nvoid solve(){\r\n    int n;cin>>n;\r\n    vi a(n+1);rep(i,1,n+1)cin>>a[i];\r\n    int q;cin>>q;\r\n    vector<node*>rt(n+1);\r\n    rt[0]=build(1,n);\r\n    vector<stack<pii>>st(N+1);// i, exp\r\n    vector<vi>div(N+1);\r\n    rep(i,2,N+1){\r\n        if(sz(div[i]))continue;\r\n        for(int j=i;j<=N;j+=i){\r\n            div[j].pb(i);\r\n        }\r\n    }rep(i,1,n+1){\r\n        rt[i]=rt[i-1];\r\n        for(auto p:div[a[i]]){\r\n            if(p<=M)continue;\r\n            int exp=cnt(a[i],p);\r\n            while(!st[p].empty() && st[p].top().se<=exp){\r\n                int val=query(rt[i],1,n,st[p].top().fi,st[p].top().fi);\r\n                val=po(po(p,cnt(val,p)),mod-2);\r\n                rt[i]=update(rt[i],1,n,st[p].top().fi,val);\r\n                st[p].pop();\r\n            }if(!st[p].empty()){\r\n                int val=query(rt[i],1,n,st[p].top().fi,st[p].top().fi);\r\n                val=po(po(p,cnt(val,p)),mod-2);\r\n                rt[i]=update(rt[i],1,n,st[p].top().fi,1LL*val*po(p,st[p].top().se-exp)%mod);\r\n            }rt[i]=update(rt[i],1,n,i,po(p,exp));\r\n            st[p].push({i,exp});\r\n        }\r\n    }int last=0;\r\n    vi pr;\r\n    rep(i,2,M+1){\r\n        if(div[i][0]==i)pr.pb(i);\r\n    }vi zero(sz(pr));\r\n    segTree<vi>t(n+1,zero);\r\n    rep(i,1,n+1){\r\n        vi x;for(auto p:pr)x.pb(cnt(a[i],p));\r\n        t.update(i,x);\r\n    }rep(qq,0,q){\r\n        int l,r;cin>>l>>r;\r\n        l=(last+l)%n+1;r=(last+r)%n+1;\r\n        if(l>r)swap(l,r);\r\n        last=query(rt[r],1,n,l,r);\r\n        vi x=t.query(l,r);\r\n        rep(i,0,sz(pr)){\r\n            // cout<<pr[i]<<\" \"<<x[i];nl;\r\n            last=1LL*last*po(pr[i],x[i])%mod;\r\n        }cout<<last;nl;//return;\r\n    }\r\n}\r\n\r\nint32_t main(){\r\n    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\r\n    #ifdef LOCAL\r\n        freopen(\"in.txt\",\"r\",stdin);\r\n        freopen(\"out.txt\",\"w\",stdout);\r\n    #endif\r\n    // tst\r\n    {\r\n        solve();nl;\r\n    }\r\n}\r\n/*\r\n*/"
}