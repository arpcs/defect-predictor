{
    "id": 229535338,
    "contestId": 407,
    "creationTimeSeconds": 1698139057,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 407,
        "index": "D",
        "name": "Largest Submatrix 3",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2700,
        "tags": [
            "dp",
            "hashing"
        ]
    },
    "author": {
        "contestId": 407,
        "members": [
            {
                "handle": "Hisu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1396162800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 436,
    "memoryConsumedBytes": 267571200,
    "source": "// TNHT thieunang qua\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\n#define ed \"\\n\"\r\n//#define int long long\r\n\r\nconst int N = 4e2 + 5;\r\nint n, m, a[N][N], id[N * N][N], dp[N][N];\r\n\r\nvoid solve(){\r\n    cin >> m >> n;\r\n//    vector<int> compress;\r\n    for(int i = 1; i <= m; ++i){\r\n        for(int j = 1; j <= n; ++j){\r\n            cin >> a[i][j];\r\n//            compress.push_back(a[i][j]);\r\n        }\r\n    }\r\n//    sort(compress.begin(), compress.end());\r\n//    compress.erase(unique(compress.begin(), compress.end()), compress.end());\r\n//    for(int i = 1; i <= m; i++){\r\n//        for(int j = 1; j <= n; j++){\r\n//            a[i][j] = lower_bound(compress.begin(), compress.end(), a[i][j]) - compress.begin() + 1;\r\n//        }\r\n//    }\r\n\r\n    int ans = 0;\r\n    for(int k = 1; k <= m; ++k){\r\n        for(int i = n; i >= 1; --i){\r\n            for(int j = i; j <= n; ++j){\r\n                if(i < j && a[k][i] == a[k][j]){\r\n                    dp[i][j] = k;\r\n                }\r\n                else dp[i][j] = max({dp[i][j], dp[i + 1][j], dp[i][j - 1], id[a[k][i]][j], id[a[k][j]][i]});\r\n                ans = max(ans, (j - i + 1) * (k - dp[i][j]));\r\n            }\r\n        }\r\n        for(int i = 1; i <= n; ++i) id[a[k][i]][i] = k;\r\n    }\r\n    cout << ans << endl;\r\n}\r\n\r\n#define TASK \"main\"\r\n\r\nsigned main(){\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0); cout.tie(0);\r\n\r\n    if(fopen(TASK \".inp\",\"r\")){\r\n        freopen(TASK \".inp\",\"r\",stdin);\r\n        freopen(TASK \".out\",\"w\",stdout);\r\n    }\r\n\r\n    int t = 1;\r\n//    cin >> t;\r\n    while(t--)\r\n        solve();\r\n}\r\n\r\n/**\r\n**/\r\n"
}