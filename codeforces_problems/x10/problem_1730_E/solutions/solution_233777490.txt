{
    "id": 233777490,
    "contestId": 1730,
    "creationTimeSeconds": 1700640062,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1730,
        "index": "E",
        "name": "Maximums and Minimums",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2700,
        "tags": [
            "combinatorics",
            "data structures",
            "divide and conquer",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1730,
        "members": [
            {
                "handle": "_LONE__WOLF_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1664116500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 15564800,
    "source": "//#pragma GCC optimize(\"O3,unroll-loops\")\r\n//#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\r\n#include <bits/stdc++.h>\r\n#define ll long long int\r\n#define all(v) v.begin(),v.end()\r\n#define inter fflush(stdout)\r\n#define fi first\r\n#define se second\r\n#define endl '\\n'\r\n\r\nusing namespace std;\r\n\r\nconst ll inf=1e+18,MOD=1e9+7,N=5e+5;\r\nll n,ans,a[N+5];\r\nvoid Dac(ll l, ll r, ll idx){\r\n    vector <pair<ll,ll>> v;\r\n    for (ll i=l;i<=r;i++) v.push_back({a[i],i});\r\n    sort(all(v),[&](pair <ll,ll> a, pair <ll,ll> b){return a.fi>b.fi;});\r\n    while (l<r){\r\n        ll idx1=v.back().se;\r\n        v.pop_back();\r\n        if (idx1<l || idx>r) continue;\r\n        if (idx1<=idx){\r\n            if (idx1==idx) ans--;\r\n            if (a[idx]%a[idx1]==0) ans+=(idx1-l+1)*(r-idx+1);\r\n            l=idx1+1;\r\n        }\r\n        else{\r\n            if (a[idx]%a[idx1]==0) ans+=(idx-l+1)*(r-idx1+1);\r\n            r=idx1-1;\r\n        }\r\n    }\r\n    ans++;\r\n}\r\nvoid Solve(){\r\n    ans=0;\r\n    cin>>n;\r\n    vector <pair<ll,ll>> v;\r\n    for (ll i=1;i<=n;i++){\r\n        cin>>a[i];\r\n        v.push_back({a[i],i});\r\n    }\r\n    set <ll> s;\r\n    s.insert(0);\r\n    s.insert(n+1);\r\n    sort(all(v));\r\n    while (!v.empty()){\r\n        pair <ll,ll> tp=v.back();\r\n        v.pop_back();\r\n        auto low=s.lower_bound(tp.se);\r\n        auto low1=prev(low);\r\n        Dac(*low1+1,*low-1,tp.se);\r\n        s.insert(tp.se);\r\n    }\r\n    cout<<ans<<endl;\r\n}\r\nint main(){\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL),cout.tie(NULL);\r\n    //freopen (\"File.inp\",\"r\",stdin);\r\n    //freopen (\"File.out\",\"w\",stdout);\r\n    ll t=1;\r\n    cin>>t;\r\n    while (t--) Solve();\r\n    cerr<<endl<<\"Time elapsed: \"<<1000.0*clock()/CLOCKS_PER_SEC<<\" ms.\"<<endl;\r\n}\r\n"
}