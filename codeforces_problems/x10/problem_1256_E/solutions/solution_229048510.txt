{
    "id": 229048510,
    "contestId": 1256,
    "creationTimeSeconds": 1697885022,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1256,
        "index": "E",
        "name": "Yet Another Division Into Teams",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dp",
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1256,
        "members": [
            {
                "handle": "Ayman_khaled"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1572873300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 3174400,
    "source": "#include <bits/stdc++.h>\n#include <unordered_set>\n#include <string>\n#define ll long long\n#define Fast_Warak ios_base::sync_with_stdio(false); cin.tie(NULL);\n#define loop(n) for(ll i=0 ; i<n ; i++)\n#define rloop(n) for(ll i=n-1 ; i>=0 ; i--)\n#define lp(start, end) for(ll i=start ; i<=end ; i++)\n#define rlp(start, end) for(ll i=start ; i>=end ; i--)\n#define b_e(v) v.begin(), v.end()\nconst ll max_ele = 1e18;\n\nusing namespace std;\n\nvoid file(){\n    freopen(\"revegetate.in\", \"r\", stdin);\n    freopen(\"revegetate.out\", \"w\", stdout);\n}\nll n;\nll dp[200006][2];\nll ans(ll ni, ll arr[], bool f){\n    if(ni==n){\n        if(f)return 1e16;\n        return 0;\n    }\n    if(ni>n){\n        return 1e16;\n    }\n    if(dp[ni][f]!=-1)return dp[ni][f];\n    if(f){\n        return dp[ni][f]=ans(ni+1, arr, false)+(arr[ni]-arr[ni-2]);\n    }\n    else{\n        return dp[ni][f]=min(ans(ni+1, arr, false)+arr[ni]-arr[ni-1], ans(ni+2, arr, true));\n    }\n}\nvector<ll> v;\nvoid build(ll ni, ll arr[], bool f, ll k){\n    if(ni==n){v.push_back(k); return;}\n    if(f){\n        build(ni+1, arr, false, k+1);\n    }\n    else{\n        if(dp[ni][f]==ans(ni+1, arr, false)+arr[ni]-arr[ni-1]){\n            build(ni+1, arr, false, k+1);\n        }\n        else{\n            v.push_back(k+1);\n            build(ni+2, arr, true, 2);\n        }\n    }\n}\n\nint main()\n{\n    //file();\n    Fast_Warak\n    int t_case=1; //cin >> t_case;\n\n    while(t_case--) {\n        cin >> n;\n        ll arr[n], org[n]; loop(n)cin>>arr[i], org[i]=arr[i];\n        sort(arr, arr+n);\n        for(int i=0; i<=n+5; i++){\n            dp[i][0]=-1, dp[i][1]=-1;\n        }\n        cout << ans(2, arr, true) << \" \";\n        build(2, arr, true, 2);\n        cout << v.size() << \"\\n\";\n        map<ll, vector<ll>> ma;\n        ll p=0, c=1;\n        for(auto i : v){\n            for(int j=0; j<i; j++){\n                ma[arr[p]].push_back(c);\n                p++;\n            }\n            c++;\n        }\n        map<ll, ll>countt;\n        loop(n){\n            cout << ma[org[i]][countt[org[i]]] << \" \";\n            countt[org[i]]++;\n        }\n    }\n    return 0;\n}"
}