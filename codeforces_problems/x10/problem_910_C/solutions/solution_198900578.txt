{
    "id": 198900578,
    "contestId": 910,
    "creationTimeSeconds": 1679639494,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 910,
        "index": "C",
        "name": "Minimum Sum",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "constructive algorithms",
            "greedy",
            "math"
        ]
    },
    "author": {
        "contestId": 910,
        "members": [
            {
                "handle": "vaishnavi_vangara"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1513940700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define int long long\r\n#define pb push_back\r\n#define ppb pop_back\r\n#define mp make_pair\r\nusing pi = pair<int,int>;\r\nusing vi = vector<int>;\r\nusing vvi = vector<vector<int> >;\r\n#define ff first\r\n#define ss second\r\n#define all(x) x.begin(),x.end()\r\n#define sz(x) (int)(x).size()\r\n\r\ntemplate<typename T, typename Y> istream& operator>>(istream& is,  pair<T,Y> &p){ is >> p.first >> p.second; return is;}\r\ntemplate<typename T, typename Y> ostream& operator<<(ostream& os,  pair<T,Y>  p){ os << p.first << ' ' << p.second  << ' '; return os;}\r\ntemplate<typename T> istream& operator>>(istream& is,  vector<T> &v){for (auto& i : v) is >> i; return is;}\r\ntemplate<typename T> ostream& operator<<(ostream& os,  vector<T>  v){for (auto& i : v) os << i << ' '; return os;}\r\nconst int NUM=1000030;\r\nconst int N = 10000000;\r\nvector<int> lp, sieve;\r\nvector<int> pr;\r\nvoid primefactor();\r\nint binpow(int a, int b);\r\nint binpow(int a, int b, int mod);\r\nint gcd(int a, int b);\r\nint lcm (int a, int b);\r\nbool comp(int a, int b);\r\nint inversemod(int a, int mod);\r\nvoid calc_sieve();\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nvoid test()\r\n{\r\n    int n;\r\n    cin>>n;\r\n    vector<string> arr(n);\r\n    for(int i=0;i<n;i++) cin>>arr[i];\r\n\r\n    vector<int> count(10);\r\n    for(int i=0;i<n;i++) \r\n    {\r\n        int ele=1;\r\n        for(int j=arr[i].size()-1;j>=0;j--) \r\n        {\r\n            count[arr[i][j]-'a']+=ele;\r\n            ele*=10;\r\n        }\r\n    }\r\n    vector<int> zeroallowed(10, 1);\r\n    for(int i=0;i<n;i++) \r\n    {\r\n        zeroallowed[arr[i][0]-'a']=0;\r\n    }\r\n    vector<pair<int, int> > ele;\r\n    for(int i=0;i<10;i++) ele.push_back(make_pair(count[i], i));\r\n    sort(ele.begin(), ele.end());\r\n    int ans=0;\r\n    set<int> val;\r\n    for(int i=1;i<=9;i++) val.insert(i);\r\n    int zero=0;\r\n    for(int i=9;i>=0;i--)\r\n    {\r\n        if(zero || !zeroallowed[ele[i].second])\r\n        {\r\n            ans+=ele[i].first*(*val.begin());\r\n            val.erase(val.begin());\r\n        }\r\n        else if(zeroallowed[ele[i].second] && !zero)\r\n        {\r\n            zero=1;\r\n        }\r\n    }\r\n    cout<<ans<<endl;\r\n}\r\n\r\nsigned main()\r\n{\r\n\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    int t=1;\r\n    \r\n    while(t--) test();\r\n    return 0;\r\n}\r\n\r\nvoid calc_sieve()\r\n{\r\n    sieve.resize(NUM+1,0);\r\n    for (int x = 2; x <= NUM; x++)\r\n        {\r\n            if (sieve[x]) continue;\r\n            for (int u = x; u <= NUM; u += x)\r\n            {\r\n                    sieve[u] = x ;\r\n            }\r\n        }\r\n}\r\n\r\nvoid primefactor()\r\n{\r\n    lp.resize(N+1,0);\r\n    for (int i=2; i<=N; ++i) {\r\n        if (lp[i] == 0) {\r\n            lp[i] = i;\r\n            pr.push_back (i);\r\n        }\r\n        for (int j=0; j<(int)pr.size() && pr[j]<=lp[i] && i*pr[j]<=N; ++j)\r\n            lp[i * pr[j]] = pr[j];\r\n    }\r\n}\r\n\r\nint binpow(int a, int b)\r\n{\r\n    int res = 1;\r\n    while (b > 0) {\r\n        if (b & 1)\r\n            res = res * a;\r\n        a = a * a;\r\n        b >>= 1;\r\n    }\r\n    return res;\r\n}\r\n\r\nint binpow(int a, int b, int mod)\r\n{\r\n    int res = 1;\r\n    while (b > 0) {\r\n        if (b & 1)\r\n            res = (res * a)%mod;\r\n        a = (a * a)%mod;\r\n        b >>= 1;\r\n    }\r\n    return res%mod;\r\n}\r\n\r\nint gcd(int a, int b)\r\n{\r\n    if(b==0) return a;\r\n    else return cd(b,a%b);\r\n}\r\n\r\nint lcm (int a, int b)\r\n{\r\n    return ((a / gcd(a, b)) * b);\r\n}\r\n\r\nbool comp(int a, int b)\r\n{\r\n    return a>b;\r\n}\r\n\r\nint inversemod(int a, int mod)\r\n{\r\n    return binpow(a,mod-2, mod);"
}