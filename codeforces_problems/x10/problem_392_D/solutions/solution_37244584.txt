{
    "id": 37244584,
    "contestId": 392,
    "creationTimeSeconds": 1523526388,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 392,
        "index": "D",
        "name": "Three Arrays",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 392,
        "members": [
            {
                "handle": "Maxwei_wzj"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1392728400
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 60,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 18022400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int inf=1000000000;\r\nint n,a[100010],b[100010],c[100010],tot;\r\nint fa[300010]={0},fb[300010]={0},fc[300010]={0};\r\nstruct forsort\r\n{\r\n\tint val,id1,id2;\r\n}f[300010];\r\nstruct Pair\r\n{\r\n\tint b,c;\r\n};\r\nbool operator < (Pair a,Pair b) {return a.b<b.b;}\r\nset<Pair> s;\r\nset<Pair>::iterator it;\r\nmultiset<int> vals;\r\nmultiset<int>::iterator valit;\r\n\r\nbool cmp(forsort a,forsort b)\r\n{\r\n\treturn a.val<b.val;\r\n}\r\n\r\nvoid init()\r\n{\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tscanf(\"%d\",&f[++tot].val);\r\n\t\tf[tot].id1=1,f[tot].id2=i;\r\n\t}\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tscanf(\"%d\",&f[++tot].val);\r\n\t\tf[tot].id1=2,f[tot].id2=i;\r\n\t}\r\n\tfor(int i=1;i<=n;i++)\r\n\t{\r\n\t\tscanf(\"%d\",&f[++tot].val);\r\n\t\tf[tot].id1=3,f[tot].id2=i;\r\n\t}\r\n\t\r\n\tsort(f+1,f+3*n+1,cmp);\r\n\ttot=0;\r\n\tfor(int i=1;i<=3*n;i++)\r\n\t{\r\n\t\tif (i==1||f[i].val!=f[i-1].val) tot++;\r\n\t\tif (f[i].id1==1) a[f[i].id2]=tot;\r\n\t\tif (f[i].id1==2) b[f[i].id2]=tot;\r\n\t\tif (f[i].id1==3) c[f[i].id2]=tot;\r\n\t}\r\n\t\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tif (!fa[a[i]]) fa[a[i]]=i;\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tif (!fb[b[i]]) fb[b[i]]=i;\r\n\tfor(int i=1;i<=n;i++)\r\n\t\tif (!fc[c[i]]) fc[c[i]]=i;\r\n}\r\n\r\nvoid insertPair(int newb,int newc)\r\n{\r\n\tint nowb,nowc;\r\n\tPair e={newb,newc};\r\n\tit=s.upper_bound(e);\r\n\tif ((*it).c>=e.c) return;\r\n\t//printf(\"Insert:%d,%d\\n\",newb,newc);\r\n\tnowc=(*it).c;\r\n\tit--;\r\n\tvalit=vals.find((*it).b+nowc);\r\n\tvals.erase(valit);\r\n\twhile((*it).c<=e.c)\r\n\t{\r\n\t\tnowb=(*it).b,nowc=(*it).c;\r\n\t\tit--;\r\n\t\tvals.erase((*it).b+nowc);\r\n\t\tit++;\r\n\t\t//printf(\"Erase:%d,%d\\n\",nowb,nowc);\r\n\t\ts.erase(it);\r\n\t\tit=s.lower_bound(e);\r\n\t\tit--;\r\n\t}\r\n\tnowb=(*it).b,nowc=(*it).c;\r\n\tvals.insert(nowb+e.c);\r\n\tit++;\r\n\tnowc=(*it).c;\r\n\tvals.insert(e.b+nowc);\r\n\ts.insert(e);\r\n}\r\n\r\nvoid work()\r\n{\r\n\tPair e;\r\n\te.b=0,e.c=inf+1;\r\n\ts.insert(e);\r\n\te.b=inf+1,e.c=0;\r\n\ts.insert(e);\r\n\tvals.insert(0);\r\n\tfor(int i=1;i<=tot;i++)\r\n\t\tif (!fa[i]) insertPair(fb[i]?fb[i]:inf,fc[i]?fc[i]:inf);\r\n\tint ans=inf;\r\n\tbool flag=1;\r\n\tfor(int i=n;i>=1;i--)\r\n\t{\r\n\t\tans=min(ans,i+(*vals.begin()));\r\n\t\tif (fa[a[i]]==i)\r\n\t\t{\r\n\t\t\tif (!fb[a[i]]&&!fc[a[i]]) {flag=0;break;}\r\n\t\t\tinsertPair(fb[a[i]]?fb[a[i]]:inf,fc[a[i]]?fc[a[i]]:inf);\r\n\t\t}\r\n\t}\r\n\tif (flag) ans=min(ans,(*vals.begin()));\r\n\tprintf(\"%d\",ans);\r\n}\r\n\r\nint main()\r\n{\r\n\t//freopen(\"CF392D.in\",\"r\",stdin);\r\n\t//freopen(\"CF392D.out\",\"w\",stdout);\r\n\t\r\n\tinit();\r\n\twork();\r\n\t\r\n\treturn 0;\r\n}\r\n\r\n"
}