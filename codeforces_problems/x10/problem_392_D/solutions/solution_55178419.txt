{
    "id": 55178419,
    "contestId": 392,
    "creationTimeSeconds": 1559764492,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 392,
        "index": "D",
        "name": "Three Arrays",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 392,
        "members": [
            {
                "handle": "wilwxk"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1392728400
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst int MAXN=1e5+5;\nconst int INF=2e8;\nmap<int, int> mp[4];\ntuple<int, int, int> v[MAXN];\nset<pair<int, int> > cl;\nmultiset<int> valores;\nint n, respf;\n\nvoid update(int a, int b) {\n\t// printf(\"add %d %d\\n\", a, b);\n\n\tauto mit=cl.lower_bound({a, b});\n\tif(mit->first>=a&&mit->second>=b) return;\n\n\tauto bb=(*mit); auto aa=(*(--mit));\n\tvalores.erase(valores.find(aa.first+bb.second));\n\tvalores.insert(aa.first+b);\n\tvalores.insert(a+bb.second);\n\tcl.insert({a, b});\n\n\tmit=cl.lower_bound({a, b}); mit--;\n\twhile(mit->first<=a&&mit->second<=b) {\n\t\tbb=(*(mit)); aa=(*(--mit));\n\t\tmit=cl.erase(++mit); mit--;\n\t\tvalores.erase(valores.find(aa.first+bb.second));\n\t\tvalores.erase(valores.find(bb.first+b));\n\t\tvalores.insert(aa.first+b);\n\t}\n\n\t// printf(\"** \"); for(auto cur : valores) printf(\"%d \", cur); printf(\"\\n\");\n\t// for(auto cur : cl) printf(\"  // %d %d\\n\", cur.first, cur.second);\n}\n\nint query() {\n\treturn *valores.begin();\n}\n\nint main() {\n\tscanf(\"%d\", &n);\n\trespf=3*n;\n\tfor(int i=1; i<=3; i++) {\n\t\tfor(int j=1; j<=n; j++) {\n\t\t\tint val; scanf(\"%d\", &val);\n\t\t\tif(mp[1][val]==0) mp[1][val]=INF;\n\t\t\tif(mp[2][val]==0) mp[2][val]=INF;\n\t\t\tif(mp[3][val]==0) mp[3][val]=INF;\n\t\t\tmp[i][val]=min(mp[i][val], j);\n\t\t}\n\t}\n\n\tn=0;\n\tfor(auto &mit : mp[1]) {\n\t\tint val=mit.first;\n\t\tv[++n]={mp[1][val], mp[2][val], mp[3][val]};\n\t}\n\tsort(v+1, v+1+n);\n\tv[0]={0, 0, 0};\n\n\tcl.insert({0, INF*2});\n\tcl.insert({INF*2, 0});\n\tvalores.insert(0);\n\trespf=min(respf, get<0>v[n]);\n\tfor(int i=n; i>=1; i--) {\n\t\tint custo=get<0>(v[i-1]);\n\t\tupdate(get<1>(v[i]), get<2>(v[i]));\n\t\tcusto+=query();\n\t\trespf=min(respf, custo);\n\t}\n\n\tprintf(\"%d\\n\", respf);\n}"
}