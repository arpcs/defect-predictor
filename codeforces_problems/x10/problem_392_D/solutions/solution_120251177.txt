{
    "id": 120251177,
    "contestId": 392,
    "creationTimeSeconds": 1624329578,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 392,
        "index": "D",
        "name": "Three Arrays",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 392,
        "members": [
            {
                "handle": "IAKCodeForces"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1392728400
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 60,
    "timeConsumedMillis": 186,
    "memoryConsumedBytes": 35840000,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n#define int64 long long \r\nconst int Maxn = 1 << 30;\r\nint n;\r\nstruct Node{\r\n\tint v,id,from;\r\n}seq[1001000];\r\nstruct NNode{    //\u63cf\u8ff0\u6bcf\u4e2a\u5143\u7d20\u5728\u6bcf\u4e2a\u6570\u7ec4\u6700\u5148\u51fa\u73b0\u7684\u4f4d\u7f6e\r\n\tint v[4];\r\n\tvoid init(){v[1] = v[2] = v[3] = 3 * n;}\r\n}whe[1001000];\r\nstruct NNNode{    //\u63cf\u8ff0\u5750\u6807\u8f74\u7684\u4e00\u4e2a\u70b9\r\n\tint x,y;\r\n};\r\nint a[4][100100],tot,cnt;\r\nset<NNNode> F;\r\nmultiset <int> sum;\r\n\r\nbool operator < (NNNode x,NNNode y){return x.x < y.x || (x.x == y.x && x.y < y.y);}\r\nbool cmp1(Node x,Node y){return x.v < y.v;}\r\nbool cmp(NNode x,NNode y){return x.v[1] > y.v[1];}\r\nvoid insert(int x)\r\n{\r\n\tset<NNNode> :: iterator s1,s2,s3;\r\n\tNNNode inwho = (NNNode){whe[x].v[2],whe[x].v[3]};\r\n\tF.insert(inwho);\r\n\ts1 = F.find(inwho);\r\n\ts3 = s1;    s3++;\r\n\tif ((*s3).x >= (*s1).x && (*s3).y >= (*s1).y)     {F.erase(inwho);return ;}         //\u5b58\u5728\u4e00\u4e2a\u70b9\u5728\u53f3\u4e0a\u89d2,\u5373\u76ee\u524d\u70b9\u5728\u9636\u68af\u91cc\u9762\uff0c\u4e0d\u4f1a\u5bf9\u9636\u68af\u9020\u6210\u5f71\u54cd\r\n\ts2 = s1;   s2--;  s3 = s1;   s3++;\r\n\tif (sum.find((*s3).y + (*s2).x) != sum.end())          //\u5bf9\u9636\u68af\u9020\u6210\u5f71\u54cd\uff0c\u5220\u9664\u539f\u6765\u53ef\u884c\u73b0\u5728\u4e0d\u53ef\u884c\u7684\u89e3\r\n\t\tsum.erase(sum.find((*s3).y + (*s2).x));\r\n\twhile (true)     //\u7ef4\u62a4\u9636\u68af\uff0c\u5220\u9664\u4e0d\u53ef\u884c\u89e3\r\n\t\t{\r\n\t\t\ts1 = F.find(inwho);\r\n\t\t\ts2 = s1;   s2--;\r\n\t\t\tif (!((*s2).x <= (*s1).x && (*s2).y <= (*s1).y))     break ;\r\n\t\t\ts3 = s2;   s3--;\r\n\t\t\tif (sum.find((*s2).y + (*s3).x) != sum.end())\r\n\t\t\t\tsum.erase(sum.find((*s2).y + (*s3).x));\r\n\t\t\tF.erase(s2); \r\n\t\t}\r\n\ts1 = F.find(inwho);      //\u52a0\u5165\u65b0\u7684\u89e3\r\n\ts3 = s1;   s3++;\r\n\tsum.insert((*s1).x + (*s3).y);\r\n\ts2 = s1;   s2--;\r\n\tsum.insert((*s2).x + (*s1).y);\r\n}\r\nvoid work()\r\n{\r\n\tsort(whe + 1,whe + cnt + 1,cmp);     //\u5c06\u5143\u7d20\u6309\u5728\u7b2c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\u6392\u5e8f\r\n\tF.insert((NNNode){3 * n + 2,0});   F.insert((NNNode){0,3 * n + 2});    //\u52a0\u5165\u9636\u68af\u7684\u5934\u548c\u5c3e\uff0c\u907f\u514d\u8ba8\u8bba\u52a0\u5165\u70b9\u65f6\u662fset\u7684begin\u548cend-1\u7684\u60c5\u51b5\r\n\tsum.insert(0);\r\n \tint l = 1,ans = Maxn;\r\n\tfor (int u = n;u >= 0;u--)\r\n\t\t{\r\n\t\t\twhile (whe[l].v[1] > u)   insert(l),l++;       //\u5982\u679c\u5143\u7d20\u4e0d\u5728\u73b0\u5728\u7684\u6570\u7ec4A\u4e2d\uff0c\u5219\u9700\u628a\u4ed6\u52a0\u5165\u5750\u6807\u7cfb\r\n\t\t\tans = min(ans,u + (*sum.begin()));\r\n\t\t}\r\n\tcout << ans;\r\n}\r\n\r\nint main()\r\n{\r\n\t//freopen(\"union.in\",\"r\",stdin);      freopen(\"union.out\",\"w\",stdout);\r\n\tcin >> n;\r\n\tfor (int i = 1;i <= n;i++)    scanf(\"%d\",&a[1][i]),seq[++tot] = (Node){a[1][i],i,1};\r\n\tfor (int i = 1;i <= n;i++)    scanf(\"%d\",&a[2][i]),seq[++tot] = (Node){a[2][i],i,2};\r\n\tfor (int i = 1;i <= n;i++)    scanf(\"%d\",&a[3][i]),seq[++tot] = (Node){a[3][i],i,3};\r\n\tsort(seq + 1,seq + tot + 1,cmp1);\r\n\ta[seq[1].from][seq[1].id] = 1;   cnt++;\r\n\twhe[1].init();\r\n\twhe[cnt].v[seq[1].from] =seq[1].id;\r\n\tfor (int i = 2;i <= tot;i++)     //\u79bb\u6563\u5316\u5e76\u8bb0\u5f55\u6bcf\u4e2a\u503c\u5728\u6bcf\u4e2a\u6570\u7ec4\u4e2d\u7b2c\u4e00\u4e2a\u51fa\u73b0\u7684\u4f4d\u7f6e\u5728\u54ea\r\n\t\t{\r\n\t\t\tif (seq[i].v != seq[i - 1].v)   cnt++,whe[cnt].init();\r\n\t\t\ta[seq[i].from][seq[i].id] = cnt;\r\n\t\t\twhe[cnt].v[seq[i].from] = min(whe[cnt].v[seq[i].from],seq[i].id);\r\n\t\t}\r\n\twork();\r\n}//I am a bot for remotejudge"
}