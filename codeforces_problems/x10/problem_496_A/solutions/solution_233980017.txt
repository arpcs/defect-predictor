{
    "id": 233980017,
    "contestId": 496,
    "creationTimeSeconds": 1700788050,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 496,
        "index": "A",
        "name": "Minimum Difficulty",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 900,
        "tags": [
            "brute force",
            "implementation",
            "math"
        ]
    },
    "author": {
        "contestId": 496,
        "members": [
            {
                "handle": "hasnatshafin01"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1418833800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 15257600,
    "source": "///   ***   ---   |||\t\t In the name of ALLAH\t\t|||   ---   ***   ///\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef vector<int> vi;\r\ntypedef vector<ll> vl;\r\ntypedef vector<vi> vvi;\r\ntypedef vector<vl> vvl;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<double, double> pdd;\r\ntypedef pair<ll, ll> pll;\r\ntypedef vector<pii> vii;\r\ntypedef vector<pll> vll;\r\ntypedef double dl;\r\n\r\n#define endl '\\n'\r\n#define pb push_back\r\n#define pf push_front\r\n#define F first\r\n#define S second\r\n#define all(a) (a).begin(), (a).end()\r\n#define rall(a) (a).rbegin(), (a).rend()\r\n#define sz(x) (int)x.size()\r\n\r\nconst double PI = acos(-1);\r\nconst double eps = 1e-9;\r\nconst int inf = 2000000000;\r\nconst ll infLL = 9000000000000000000;\r\n#define MOD 1000000007\r\n\r\n#define mem(a, b) memset(a, b, sizeof(a))\r\n#define sqr(a) ((a) * (a))\r\n\r\n#define optimize()                \\\r\n    ios_base::sync_with_stdio(0); \\\r\n    cin.tie(0);                   \\\r\n    cout.tie(0);\r\n#define fraction()                \\\r\n    cout.unsetf(ios::floatfield); \\\r\n    cout.precision(10);           \\\r\n    cout.setf(ios::fixed, ios::floatfield);\r\n#define file()                        \\\r\n    freopen(\"input.txt\", \"r\", stdin); \\\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n//\r\n// debug\r\ntemplate <typename F, typename S>\r\nostream &operator<<(ostream &os, const pair<F, S> &p) { return os << \"(\" << p.first << \", \" << p.second << \")\"; }\r\ntemplate <typename T>\r\nostream &operator<<(ostream &os, const vector<T> &v)\r\n{\r\n    os << \"{\";\r\n    for (auto it = v.begin(); it != v.end(); ++it)\r\n    {\r\n        if (it != v.begin())\r\n            os << \", \";\r\n        os << *it;\r\n    }\r\n    return os << \"}\";\r\n}\r\ntemplate <typename T>\r\nostream &operator<<(ostream &os, const set<T> &v)\r\n{\r\n    os << \"[\";\r\n    for (auto it = v.begin(); it != v.end(); ++it)\r\n    {\r\n        if (it != v.begin())\r\n            os << \",\";\r\n        os << *it;\r\n    }\r\n    return os << \"]\";\r\n}\r\ntemplate <typename T>\r\nostream &operator<<(ostream &os, const multiset<T> &v)\r\n{\r\n    os << \"[\";\r\n    for (auto it = v.begin(); it != v.end(); ++it)\r\n    {\r\n        if (it != v.begin())\r\n            os << \", \";\r\n        os << *it;\r\n    }\r\n    return os << \"]\";\r\n}\r\ntemplate <typename F, typename S>\r\nostream &operator<<(ostream &os, const map<F, S> &v)\r\n{\r\n    os << \"[\";\r\n    for (auto it = v.begin(); it != v.end(); ++it)\r\n    {\r\n        if (it != v.begin())\r\n            os << \", \";\r\n        os << it->first << \" = \" << it->second;\r\n    }\r\n    return os << \"]\";\r\n}\r\n#define dbg(args...)            \\\r\n    do                          \\\r\n    {                           \\\r\n        cerr << #args << \" : \"; \\\r\n        faltu(args);            \\\r\n    } while (0)\r\nvoid faltu() { cerr << endl; }\r\ntemplate <typename T>\r\nvoid faltu(T a[], int n)\r\n{\r\n    for (int i = 0; i < n; ++i)\r\n        cerr << a[i] << ' ';\r\n    cerr << endl;\r\n}\r\ntemplate <typename T, typename... hello>\r\nvoid faltu(T arg, const hello &...rest)\r\n{\r\n    cerr << arg << ' ';\r\n    faltu(rest...);\r\n}\r\n// #else\r\n// #define dbg(args...)\r\n\r\nll gcd(ll a, ll b) { return __gcd(a, b); }\r\nll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }\r\n\r\nint dx[] = {0, 0, +1, -1, -1 + 1, -1, +1};\r\nint dy[] = {+1, -1, 0, 0, -1, +1, +1, -1};\r\n\r\nconst int mx = 2e5 + 123;\r\nvi t[mx * 3];\r\nint a[mx];\r\n\r\nvoid init(int id, int b, int e)\r\n{\r\n    if (b == e)\r\n    {\r\n        t[id].pb(a[b]);\r\n        return;\r\n    }\r\n\r\n    int mid = (b + e) >> 1;\r\n\r\n    init(id * 2, b, mid);\r\n    init(id * 2 + 1, mid + 1, e);\r\n\r\n    merge(all(t[id * 2]), all(t[id * 2 + 1]), back_inserter(t[id]));\r\n}\r\n\r\nint ask(int id, int b, int e, int i, int j, int val)\r\n{\r\n    if (b > j || e < i)\r\n        return 0;\r\n    if (b >= i && e <= j)\r\n    {\r\n        return (lower_bound(all(t[id]), val) - t[id].begin());\r\n    }\r\n\r\n    int mid = (b + e) >> 1;\r\n\r\n    int ret1 = ask(id * 2, b, mid, i, j, val);\r\n    int ret2 = ask(id * 2 + 1, mid + 1, e, i, j, val);\r\n\r\n    return ret1 + ret2;\r\n}\r\nvoid solve()\r\n{\r\n    int n;\r\n    cin >> n;\r\n\r\n    deque<int> dq(n);\r\n    for (auto &x : dq)\r\n        cin >> x;\r\n\r\n    if (n == 3)\r\n    {\r\n        int ans = dq[2] - dq[0];\r\n        cout << ans << endl;\r\n        return;\r\n    }\r\n\r\n    int mini = inf, index;\r\n    for (int i = 0; i < n; i += 2)\r\n    {\r\n        if (i + 2 >= n)\r\n            break;\r\n        int temp = dq[i + 2] - dq[i];\r\n        if (temp < mini)\r\n        {\r\n            mini = temp;\r\n            index = i + 1;\r\n        }\r\n    }\r\n    for (int i = 1; i < n; i += 2)\r\n    {\r\n        if (i + 2 >= n)\r\n            break;\r\n        int temp = dq[i + 2] - dq[i];\r\n        if (temp < mini)\r\n        {\r\n            mini = temp;\r\n            index = i + 1;\r\n        }\r\n    }\r\n\r\n    dq.erase(dq.begin() + index);\r\n\r\n    int maxi = -inf;\r\n    for (int i = 0; i < n - 1; ++i)\r\n    {\r\n        maxi = max(maxi, (dq[i + 1] - dq[i]));\r\n    }\r\n\r\n    cout << maxi << endl;\r\n    return;\r\n}\r\nint main()\r\n{\r\n    optimize();\r\n\r\n    solve();\r\n\r\n    return 0;\r\n}"
}