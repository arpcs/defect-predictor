{
    "id": 227991436,
    "contestId": 570,
    "creationTimeSeconds": 1697181982,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 570,
        "index": "E",
        "name": "Pig and Palindromes",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 570,
        "members": [
            {
                "handle": "sakurasonic"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1439483400
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 405,
    "memoryConsumedBytes": 2252800,
    "source": "#include <bits/stdc++.h>\r\n#pragma GCC optimize(\"O3,unroll-loops\")\r\nusing namespace std;\r\nconst int N = 500;\r\nconst int mod = 1e9 + 7;\r\nchar v[N][N];\r\nint dp[N][N];\r\nint ndp[N][N];\r\n///first - x of first\r\n///last one - x axis of last\r\nint main(){\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int ans = 0;\r\n    int n,m;\r\n    cin>>n>>m;\r\n    for(int i = 0;i < n;i++){\r\n        for(int j = 0;j < m;j++){\r\n            cin>>v[i][j];\r\n        }\r\n    }\r\n    if(v[0][0] == v[n - 1][m - 1]){\r\n        dp[0][m - 1] = 1;\r\n    }\r\n    for(int i = 0;i < (n + m)/2;i++){\r\n        for(int j = 0;j <= i && j < n;j++){\r\n            for(int l = min(m - 1,n + m - 2 - i);l >= max(0,m - 1 - i);l--){\r\n                int y1,x1,y2,x2;\r\n                y1 = j;x1 = i - j;\r\n                x2 = l;y2 = n + m - 2 - x2 - i;\r\n                //if(!(0 <= x2 && x2 <= m - 1 && 0 <= y2 && y2 <= n - 1))continue;\r\n                ///n - 1 - l - i <= 0\r\n                //cout<<y1<<' '<<x1<<' '<<y2<<' '<<x2<<' '<<dp[x1][x2]<<'\\n';\r\n                if(i == (n + m)/2 - 1){\r\n                    if((n + m)%2 == 0){\r\n                        if(y1 == y2 && x2 == x1){\r\n                            ans = (ans + dp[x1][x2])%mod;\r\n                        }\r\n                    }else{\r\n                       if((x2 == x1 && y2 - y1 == 1) || (x2 == x1 + 1 && y2 == y1)){\r\n                            ans = (ans + dp[x1][x2])%mod;\r\n                        }\r\n                    }\r\n                }else{\r\n                    if(y1 + 1 <= y2 && x1 <= x2 - 1 && v[y1 + 1][x1] == v[y2][x2 - 1]){\r\n                        ndp[x1][x2 - 1] = (ndp[x1][x2 - 1] + dp[x1][x2])%mod;\r\n                    }\r\n                    if(y1 + 1 <= y2 - 1 && v[y1 + 1][x1] == v[y2 - 1][x2]){\r\n                        ndp[x1][x2] = (ndp[x1][x2] + dp[x1][x2])%mod;\r\n                    }\r\n                    if(x1 + 1 <= x2 - 1 && v[y1][x1 + 1] == v[y2][x2 - 1]){\r\n                        ndp[x1 + 1][x2 - 1] = (ndp[x1 + 1][x2 - 1] + dp[x1][x2])%mod;\r\n                        //cout<<x1 + 1<<' '<<x2 - 1<<' '<<dp[x1][x2]<<'\\n';\r\n                    }\r\n                    if(y1 <= y2 - 1 && x1 + 1 <= x2 && v[y1][x1 + 1] == v[y2 - 1][x2]){\r\n                        ndp[x1 + 1][x2] = (ndp[x1 + 1][x2] + dp[x1][x2])%mod;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for(int j = 0;j < m;j++){\r\n            for(int l=  0;l < m;l++){\r\n                dp[j][l] = ndp[j][l];\r\n                ndp[j][l] = 0;\r\n            }\r\n        }\r\n    }\r\n    cout<<ans;\r\n    return 0;\r\n}\r\n"
}