{
    "id": 222016806,
    "contestId": 570,
    "creationTimeSeconds": 1693977525,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 570,
        "index": "E",
        "name": "Pig and Palindromes",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2300,
        "tags": [
            "combinatorics",
            "dp"
        ]
    },
    "author": {
        "contestId": 570,
        "members": [
            {
                "handle": "keitherrrr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1439483400
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 204800,
    "source": "///keitherrrr\r\n#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n \r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n#define all(x) x.begin(), x.end()\r\n#define int long long\r\n#define ll long long\r\n#define mp make_pair\r\n#define pb push_back\r\n#define pii pair <int, int>\r\n#define vi vector<int>\r\n \r\n#define FOR(i, a, b) for (int i=a; i<b; i++)\r\n#define FORd(i, a, b) for (int i=a-1; i>=b; i--)\r\n#define F0R(i, a) for (int i=0; i<a; i++)\r\n \r\n#define fi first\r\n#define se second\r\n#define be begin\r\n#define e end\r\n#define lb lower_bound\r\n#define ub upper_bound \r\n#define db long double;\r\n#define mid ((r+l)>>1)\r\n#define tl (id<<1)\r\n#define tr (id<<1|1)\r\n \r\ntypedef tree<int,null_type,less<int>,rb_tree_tag,\r\ntree_order_statistics_node_update> indexed_set;\r\nconst int N=105;\r\nconst int M=10000000;   \r\nconst int B=100;  \r\nconst int p=1e9+7; \r\nconst int inf=1e15;\r\nconst double pi = 4.0*atan(1);\r\nint f[N][N], g[N][N], n, m, mx; \r\nchar grid[N][N];  \r\nmain(){ \r\n    ios_base::sync_with_stdio(0); cin.tie(0); \r\n    cin >>n>>m;  \r\n    FOR(r,1,n+1){\r\n        FOR(c,1,m+1){\r\n            cin>>grid[r][c];\r\n            mx=m+n+2-r-c;  \r\n            for(int i=max(mx-c,1LL),j; i<=min(mx-1,r); i++){\r\n                j=mx-i; \r\n                if(grid[i][j]==grid[r][c]){\r\n                    if(r-i+c-j<=1) f[c][i]=1; \r\n                    else f[c][i]=(((f[c-1][i]+f[c-1][i+1])%p+g[c][i])%p+g[c][i+1])%p; \r\n                }\r\n            }\r\n        }\r\n        FOR(c,1,m+1) \r\n            FOR(i,1,n+1) g[c][i]=f[c][i], f[c][i]=0;  \r\n    }\r\n    cout<<g[m][1]; \r\n}   "
}