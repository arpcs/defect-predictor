{
    "id": 183525535,
    "contestId": 883,
    "creationTimeSeconds": 1669923879,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 883,
        "index": "L",
        "name": "Berland.Taxi",
        "type": "PROGRAMMING",
        "rating": 2500,
        "tags": [
            "data structures"
        ]
    },
    "author": {
        "contestId": 883,
        "members": [
            {
                "handle": "CSQ31"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1508573100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 28,
    "timeConsumedMillis": 1092,
    "memoryConsumedBytes": 51302400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n#define sz(a) (int)(a.size())\r\n#define all(a) a.begin(),a.end()\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define owo ios_base::sync_with_stdio(0);cin.tie(0);\r\n#define INF (ll)(1e18)\r\n#define debug(...) fprintf(stderr, __VA_ARGS__),fflush(stderr)\r\n#define time__(d) for(long blockTime = 0; (blockTime == 0 ? (blockTime=clock()) != 0 : false);\\\r\ndebug(\"%s time : %.4fs\\n\", d, (double)(clock() - blockTime) / CLOCKS_PER_SEC))\r\ntypedef long long int ll;\r\ntypedef long double ld;\r\ntypedef pair<ll,ll> PII;\r\ntypedef pair<int,int> pii;\r\ntypedef vector<vector<int>> vii;\r\ntypedef vector<vector<ll>> VII;\r\nconst int MAXN = 2e5+5;\r\nset<PII>taxi[MAXN];\r\nset<int>pos;\r\nPII ans[MAXN];\r\nll ask(ll x,int i){ //kau go to x\r\n\tassert(!pos.empty());\r\n\tauto it0 = pos.lb(x);\r\n\tauto it1 = pos.lb(x);\r\n\tint pp = -1;\r\n\tif(it1 == pos.begin())pp = *it0;\r\n\telse if(it0 == pos.end()){\r\n\t\tit1--;\r\n\t\tpp = *it1;\r\n\t}else{ //take both\r\n\t\tit1--;\r\n\t\tif(abs(*it0 - x) == abs(*it1 - x)){\r\n\t\t\tPII a = *taxi[*it0].begin();\r\n\t\t\tPII b = *taxi[*it1].begin();\r\n\t\t\tif(a > b)pp = *it1;\r\n\t\t\telse pp = *it0;\r\n\t\t}else if(abs(*it0 - x) > abs(*it1 - x))pp = *it1;\r\n\t\telse pp = *it0;\r\n\t}\r\n\tauto it = taxi[pp].begin();\r\n\tans[i].fi = it->se;\r\n\tans[i].se = abs(pp-x);\r\n\t//cout<<it->fi<<\" \"<<abs(pp-x)<<'\\n';\r\n\tassert(!taxi[pp].empty());\r\n\ttaxi[pp].erase(it);\r\n\tif(taxi[pp].empty())pos.erase(pp);\r\n\treturn it->fi; //what time taxi came\r\n}\r\nint main()\r\n{\r\n\towo\r\n\tint n,k,m;\r\n\tcin>>n>>k>>m;\r\n\tvector<ll>p(k);\r\n\tfor(int i=0;i<k;i++){\r\n\t\tint x;\r\n\t\tcin>>x;\r\n\t\ttaxi[x].insert({0,i});\r\n\t\tpos.insert(x);\r\n\t\tp[i] = x;\r\n\t}\r\n\tdeque<array<ll,3>>req;\r\n\tset<int>times;\r\n\tmap<int,vector<array<ll,3>>>events;\r\n\tint cur = 0;\r\n\tfor(int i=0;i<m;i++){\r\n\t\tll t,a,b;\r\n\t\tcin>>t>>a>>b;\r\n\t\ttimes.insert(t);\r\n\t\tevents[t].pb({t,a,b});\r\n\t}\r\n\twhile(!times.empty()){\r\n\t\tll t = *times.begin();\r\n\t\ttimes.erase(t);\r\n\t\tfor(auto x:events[t]){\r\n\t\t\tif(x[1] == -1){\r\n\t\t\t\tint i = x[2];\r\n\t\t\t\tpos.insert(p[i]);\r\n\t\t\t\ttaxi[p[i]].insert({t,i});\r\n\t\t\t}else req.pb(x);\r\n\t\t}\r\n\t\twhile(!req.empty() && !pos.empty()){\r\n\t\t\tauto v = req.front();\r\n\t\t\treq.pop_front();\r\n\t\t\tll ar = ask(v[1],cur);\r\n\t\t\tint i = ans[cur].fi;\r\n\t\t\tans[cur].se += max(ar,v[0]) - v[0];\r\n\t\t\t\r\n\t\t\tll nxt = abs(p[i] - v[1]) + abs(v[1] - v[2]);\r\n\t\t\tp[i] = v[2];\r\n\t\t\ttimes.insert(nxt+t);\r\n\t\t\tevents[nxt+t].pb({nxt+t,-1,i});\r\n\t\t\tcur++;\r\n\t\t}\r\n\t}\r\n\tfor(int i=0;i<m;i++)cout<<ans[i].fi+1<<\" \"<<ans[i].se<<'\\n';\r\n\r\n\t\r\n}\r\n"
}