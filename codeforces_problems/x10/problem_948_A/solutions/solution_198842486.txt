{
    "id": 198842486,
    "contestId": 948,
    "creationTimeSeconds": 1679593653,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 948,
        "index": "A",
        "name": "Protect Sheep",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 900,
        "tags": [
            "brute force",
            "dfs and similar",
            "graphs",
            "implementation"
        ]
    },
    "author": {
        "contestId": 948,
        "members": [
            {
                "handle": "yehyasaeed11"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1520696100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 98,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 307200,
    "source": "\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\n#include <ext/pb_ds/assoc_container.hpp>\r\nusing namespace __gnu_pbds;\r\n#define llm LONG_LONG_MAX\r\n#define SPEED_OF_LIGHT$__$ ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n#define all(v) ((v).begin()), ((v).end())\r\n#define print(v) for(auto&it:v){cout<<it<<\" \";}cout<<\"\\n\"\r\n#define ms(arr, v) memset(arr, v, sizeof(arr))\r\n\r\n#define s(v) (v).size()\r\n#define p cout\r\n#define o cin\r\n#define pb push_back\r\n#define pf push_front\r\n#define MP make_pair\r\n#define py cout << \"YES\\n\"\r\n#define pn cout << \"NO\\n\"\r\n#define trace(...)\r\n\r\n\r\nint n, m;\r\n\r\nbool check_column(int x) {\r\n    if (x >= m || x < 0) return  0;\r\n    else return  1;\r\n}\r\n\r\nbool check_row(int x) {\r\n    if (x >= n || x < 0) return  0;\r\n    else return  1;\r\n}\r\n\r\n\r\nint main() {\r\n    SPEED_OF_LIGHT$__$\r\n        o >> n >> m;\r\n    char grid[n][m];\r\n    vector<pair<int, int>> v;\r\n    for (int i = 0; i < n; i++) {\r\n        for (int j = 0; j < m; j++) {\r\n            o >> grid[i][j];\r\n            if (grid[i][j] == 'W') v.pb({ i,j });\r\n        }\r\n    }\r\n    for (int i = 0; i < v.size(); i++) {\r\n        int x = v[i].first;\r\n        int y = v[i].second;\r\n\r\n        if (check_column(v[i].second + 1)) {\r\n            if (grid[x][y + 1] == 'S') {\r\n                return pn, 0;\r\n            }\r\n        }\r\n        if (check_column(v[i].second - 1)) {\r\n            if (grid[x][y - 1] == 'S') {\r\n                return pn, 0;\r\n            }\r\n        }\r\n        if (check_row(v[i].first + 1)) {\r\n            if (grid[x + 1][y] == 'S') {\r\n                return pn, 0;\r\n            }\r\n        }\r\n        if (check_row(v[i].first - 1)) {\r\n            if (grid[x - 1][y] == 'S') {\r\n                return pn, 0;\r\n            }\r\n        }\r\n    }\r\n    py;\r\n    for (int i = 0; i < n; i++) {\r\n        for (int j = 0; j < m; j++) {\r\n            if (grid[i][j] == '.') p << 'D';\r\n            else p << grid[i][j];\r\n        }\r\n        p << endl;\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n"
}