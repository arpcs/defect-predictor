{
    "id": 236393728,
    "contestId": 1697,
    "creationTimeSeconds": 1702054098,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1697,
        "index": "B",
        "name": "Promo",
        "type": "PROGRAMMING",
        "rating": 900,
        "tags": [
            "greedy",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1697,
        "members": [
            {
                "handle": "9autham"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1655044500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 67,
    "timeConsumedMillis": 1466,
    "memoryConsumedBytes": 3174400,
    "source": "/*\r\n    Take Your Time, Recharge Yourself & Comback Stronger!!\r\n    <3 love it and enjoy it <3  \r\n                     ~9autham\r\n                     #HopesAlive!!\r\n<3 Code  \r\nHappy Birthday!!\r\n*/\r\n#include <algorithm>\r\n#include <bits/stdc++.h>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\nusing namespace std;\r\n// #include <ext/pb_ds/assoc_container.hpp> // Common file\r\n// #include <ext/pb_ds/tree_policy.hpp> // Including tree_order_statistics_node_update\r\n// using namespace __gnu_pbds;\r\n/*Pbds*/\r\n// typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> pbds; // *A.find_by_order(), A.order_of_key(), A.erase()\r\n// Pair insertion {a,b} in PDBS.. Intialisation pdbs A \r\n// typedef tree<pair<int,int>, null_type, less<pair<int,int>>, rb_tree_tag, tree_order_statistics_node_update> pbds;\r\n#define MOD (int)1000000007\r\n#define INT_MAXI 1e18\r\n#define all(a) a.begin(),a.end()\r\n#define for0(i, n) for (int i = 0; i < n; i++)\r\n#define for1(i, n) for (int i = 1; i <= n; i++)\r\n#define loop(i,a,b) for (int i = a; i < b; i++)\r\n#define rarr(i,a,b) for(int i=a;i>b;i--)\r\n#define forrev(i,n) for(int i=n-1;i>=0;i--)\r\n#define tc(t) int t; cin >> t; while (t--)\r\n#define int long long \r\n#define ll long long\r\n#define prec(n) fixed<<setprecision(n)\r\n#define pii pair<int, int>\r\n#define vi vector < int >\r\n#define vl vector < ll >\r\n#define vpl vector <pair <ll , ll > >\r\n#define vb vector<bool>\r\n#define vs vector<string>\r\n#define vpi vector <pair <int , int > >\r\n#define pll pair<ll, ll>\r\n#define mii map<int,int>\r\n#define msi map<string,int>\r\n#define sint set<int>\r\n#define sstr set<string>\r\n#define pb(x) push_back(x)\r\n#define ss second\r\n#define ff first\r\n#define mp(a,b) make_pair(a,b)\r\n#define endl '\\n'\r\n#define Yes cout<<\"Yes\"<<\"\\n\";\r\n#define No  cout<<\"No\"<<\"\\n\";\r\n#define YES cout<<\"YES\"<<\"\\n\";\r\n#define NO  cout<<\"NO\"<<\"\\n\";\r\n#define in(x) cin>>x;\r\n#define in2(x,y) cin>>x>>y;\r\n#define in3(x,y,z) cin>>x>>y>>z;\r\n#define in4(x,y,z,a) cin>>x>>y>>z>>a;\r\n#define transform(sl) transform(sl.begin(), sl.end(), sl.begin(), ::tolower);\r\nint gcd(int a,int b) { if (a == 0) return b; return gcd(b%a, a);}\r\nint lcm(int a,int b){return (a*b)/gcd(a,b);}\r\nint power(int a, int n){int res= 1;while (n){if(n&1)res=(res*a)%MOD;n >>= 1;a=(a*a)%MOD;}return res;}\r\nint minv(int a) { return power(a, MOD - 2); }\r\nint mod(int n) { return (n % MOD + MOD) % MOD; }\r\nint modM(int n, int m) { return ((ll)(n % MOD) * (m % MOD)) % MOD; }\r\nint modA(int n, int m) { return ((ll)(n % MOD) + (m % MOD)) % MOD; }\r\nint modS(int n, int m) { return (((ll)(n % MOD) - (m % MOD)) + MOD) % MOD; }\r\nint modD(int n, int m) { return ((ll)(n % MOD) * (minv(m) % MOD)) % MOD; }\r\nint max(int a,int b){if(a>b) return a; else return b;}\r\nint min(int a,int b){if(a<b) return a; else return b;} \r\nvoid print(vector<int>&a){for(auto &x: a)cout<<x<<\" \";cout<<endl;}\r\nbool isPowerOfTwo(int x) \r\n{ /* First x in the below expression is for the case when x is 0 */\r\n  return x && (!(x&(x-1))); \r\n} \r\nbool isPrime(int N){ if(N<=1) return false; for(int i=2;i*i<=N;++i){if(N%i==0) return false;}return true;}\r\nvoid solve(){\r\n    int array_size, queries;\r\n    cin >> array_size >> queries;\r\n\r\n    vector<long long> elements(array_size), prefix_sum(array_size + 1);\r\n\r\n    for (auto &element : elements) {\r\n        cin >> element;\r\n    }\r\n\r\n    sort(elements.begin(), elements.end());\r\n\r\n    for (int i = 0; i < array_size; ++i) {\r\n        prefix_sum[i + 1] = prefix_sum[i] + elements[i];\r\n    }\r\n\r\n    while (queries--) {\r\n        int x, y;\r\n        cin >> x >> y;\r\n        cout << prefix_sum[array_size - x + y] - prefix_sum[array_size - x] << '\\n';\r\n    }\r\n}\r\nint32_t main() {\r\n    // ios_base::sync_with_stdio(0);\r\n    // cin.tie(0);\r\n    solve();\r\n    // tc(t){\r\n    //     solve();\r\n    // }\r\n    return 0;\r\n}"
}