{
    "id": 34484239,
    "contestId": 644,
    "creationTimeSeconds": 1516715334,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 644,
        "index": "B",
        "name": "Processing Queries",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1700,
        "tags": [
            "*special",
            "constructive algorithms",
            "data structures",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 644,
        "members": [
            {
                "handle": "pqnguyen1996"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1458118800
    },
    "programmingLanguage": "Java 8",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "import java.util.*;\r\npublic class Processing_Queries {\r\n\r\n  public static void process_queries(int[] s1, int[] s2, int n, int b, long first) {\r\n    Queue<Long> queue = new LinkedList();\r\n    queue.add(first);\r\n    \r\n    long current = first;\r\n    long count = 0;\r\n    \r\n    for (int i=1; i<n; i++) {\r\n      if (s1[i] < queue.peek()) {\r\n        if (queue.size() < 1 + b - count) {\r\n          current = current + s2[i];\r\n          queue.add(current);\r\n        }\r\n        else {\r\n          queue.add((long) -1);\r\n          count++;\r\n        }\r\n      }\r\n      \r\n      else {\r\n        \r\n        while (queue.peek() == -1) {\r\n            System.out.print(queue.remove() + \" \");\r\n            count--;\r\n        }\r\n        \r\n        \r\n        long temp = queue.remove();\r\n        System.out.print(temp + \" \");\r\n        \r\n\r\n        current = Math.max(s1[i], current) + s2[i];\r\n        queue.add(current);\r\n      }\r\n    }\r\n    \r\n    while (!queue.isEmpty()) {\r\n      System.out.print(queue.remove() + \" \");\r\n    }\r\n  }\r\n  \r\n  public static void main(String[] args) {\r\n    Scanner scan = new Scanner(System.in);\r\n    \r\n    long n = scan.nextInt();\r\n    long b = scan.nextInt();\r\n    \r\n    long[] s1 = new long[n];\r\n    long[] s2 = new long[n];\r\n    \r\n    for (int i=0; i < n; i++) {\r\n      s1[i] = scan.nextInt();\r\n      s2[i] = scan.nextInt();\r\n    }\r\n    \r\n    long first = s1[0] + s2[0];\r\n    \r\n    process_queries(s1, s2, n, b, first);\r\n\r\n  }\r\n\r\n}"
}