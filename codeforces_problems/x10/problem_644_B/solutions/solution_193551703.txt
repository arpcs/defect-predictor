{
    "id": 193551703,
    "contestId": 644,
    "creationTimeSeconds": 1676356798,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 644,
        "index": "B",
        "name": "Processing Queries",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1700,
        "tags": [
            "*special",
            "constructive algorithms",
            "data structures",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 644,
        "members": [
            {
                "handle": "austinphan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1458118800
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 18,
    "timeConsumedMillis": 1169,
    "memoryConsumedBytes": 41574400,
    "source": "def find(u):\r\n    global parents\r\n    if u != parents[u]:\r\n        parents[u] = find(parents[u])\r\n    return parents[u]\r\n\r\n\r\ndef bisectRight(a, lo, hi, x):\r\n    while lo < hi:\r\n        mid = (lo + hi) // 2\r\n        if a[mid][0] < x:\r\n            lo = mid + 1\r\n        else:\r\n            hi = mid\r\n    return lo\r\n\r\n\r\nn, b = map(int, input().split())\r\na = [None] * n\r\nfor i in range(n):\r\n    t, d = map(int, input().split())\r\n    a[i] = (t, d, i)\r\n\r\nparents = [i for i in range(n + 10)]\r\nanswer = [None] * n\r\nnow = 0\r\nleft = 0\r\nright = b\r\nwhile left < n:\r\n    t, d, i = a[left]\r\n    now = max(now, t) + d\r\n    answer[i] = str(now)\r\n\r\n    left = find(left + 1)\r\n    if left >= n:\r\n        break\r\n\r\n    tmp = find(right + 1)\r\n    if tmp >= n:\r\n        continue\r\n    right = max(tmp, bisectRight(a, right, n, now))\r\n    for i in range(tmp, right):\r\n        answer[a[i][2]] = \"-1\"\r\n        parents[i] = right\r\n    # print(\r\n    #     f\"left={left} right={right} begin={now - d} now={now} parents={parents[:n + 1]} answer={answer}\"\r\n    # )\r\nprint(\" \".join(answer))\r\n"
}