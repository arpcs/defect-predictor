{
    "id": 229545484,
    "contestId": 371,
    "creationTimeSeconds": 1698144381,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 371,
        "index": "C",
        "name": "Hamburgers",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "brute force"
        ]
    },
    "author": {
        "contestId": 371,
        "members": [
            {
                "handle": "abhijeet.singh7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1386493200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n// #include<ext/pb_ds/assoc_container.hpp>\r\n// #include<ext/pb_ds/tree_policy.hpp>\r\n \r\nusing namespace std;\r\n//using namespace __gnu_pbds;\r\n \r\n#define ll long long\r\n#define int signed long long\r\n#define rep(i,a,b) for(ll i=a;i<=b;i++)\r\n#define rrep(i,a,b) for(ll i=a;i>=b;i--)\r\n#define pb emplace_back\r\n#define ppb push_back\r\n#define pp pop_back\r\n#define mod 1000000007\r\n#define inf 1e18\r\n#define pii pair<int,int>\r\n#define pll pair<long long,long long>\r\n#define pi 3.141592653589793238462\r\n#define all(x) (x).begin(), (x).end()\r\n#define uall(x) (x).rbegin(), (x).rend()\r\n#define loop(i,a,n,b) for(long long i=a;i<n;i+=b)\r\n#define reloop(i,a,n,b) for(long long i=a;i>=n;i-=b)\r\n#define fast ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n#define F first\r\n#define S second\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define sp ' '\r\n#define sz(x) ((int)(x).size())\r\n \r\n//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> oset; // find_by_order, order_of_key\r\n//oset A;\r\n//A.insert()  --To insert values into the set\r\n//*A.find_by_order(k)  -- finding Kth element\r\n//A.order_of_key(X)  -- number of elements less than X\r\n//A.erase(X)  --Removes element from the set\r\n \r\n#ifndef ONLINE_JUDGE\r\n#define debug(x) cerr<<#x<<sp<<x<<endl;\r\n#else\r\n#define debug(x)\r\n#endif\r\n \r\n#define in(n) int n;cin>>n;\r\n#define inp(v,n) vector<int>v(n); loop(i,0,n,1){cin>>v[i];}\r\n#define vi(v,n,x) vector<int>v(n,x);\r\n#define vvi(v,n,m,x) vector<vector<int>>v(n,vector<int>(m,x));\r\n#define str(s) string s; cin>>s;\r\n#define print(x) cout<<x<<endl;\r\nvoid printvec(vector<int>v){\r\n    for(auto it: v) cout<<it<<sp;\r\n        cout<<endl;\r\n}\r\n \r\ntypedef unsigned long long ull;\r\ntypedef long double lld;\r\n \r\n//void _print(ll t) {cerr << t;}\r\nvoid _print(int t) {cerr << t;}\r\nvoid _print(string t) {cerr << t;}\r\nvoid _print(char t) {cerr << t;}\r\nvoid _print(lld t) {cerr << t;}\r\nvoid _print(double t) {cerr << t;}\r\nvoid _print(ull t) {cerr << t;}\r\n \r\ntemplate <class T, class V> void _print(pair <T, V> p);\r\ntemplate <class T> void _print(vector <T> v);\r\ntemplate <class T> void _print(set <T> v);\r\ntemplate <class T, class V> void _print(map <T, V> v);\r\ntemplate <class T> void _print(multiset <T> v);\r\ntemplate <class T, class V> void _print(pair <T, V> p) { _print(p.ff); cerr << sp; _print(p.ss); }\r\ntemplate <class T> void _print(vector <T> v) { for (T i : v) {_print(i); cerr << sp;} }\r\ntemplate <class T> void _print(set <T> v) { for (T i : v) {_print(i); cerr << sp;}  }\r\ntemplate <class T> void _print(multiset <T> v) { for (T i : v) {_print(i); cerr << sp;} }\r\ntemplate <class T, class V> void _print(map <T, V> v) {for (auto i : v) {_print(i); cerr << sp;} }\r\n \r\nvoid dfs(int vertex,vector<vector<int>>&graph,vector<int>&vis){\r\n    vis[vertex]=1;\r\n    for(int child:graph[vertex]){\r\n        if(vis[child])continue;\r\n        dfs(child,graph,vis);\r\n    }\r\n}\r\n \r\nbool dfs1(int vertex,int par,vector<vector<int>>&graph,vector<int>&vis){\r\n    vis[vertex]=1;\r\n    bool isloopexists=false;\r\n    for(int child:graph[vertex]){\r\n        if(vis[child]&&child==par)continue;\r\n        if(vis[child])return true;\r\n        isloopexists|=dfs1(child,vertex,graph,vis);\r\n    }\r\nreturn isloopexists;\r\n}\r\n \r\nvoid solve(){\r\n     string s;cin>>s;\r\n     int nb,ns,nc;cin>>nb>>ns>>nc;\r\n     int tempb=0,temps=0,tempc=0;\r\n     int pbb,ps,pc;cin>>pbb>>ps>>pc;\r\n     int r;cin>>r;\r\n     for(int i=0;i<s.length();i++){\r\n        if(s[i]=='B')tempb++;\r\n        if(s[i]=='C')tempc++;\r\n        if(s[i]=='S')temps++;\r\n     }\r\n     int ans=0;\r\n     int minn=min(nb/tempb,min(ns/temps,nc/tempc));\r\n    //  cout<<minn<<endl;\r\n     nb=nb-tempb*minn,ns=ns-temps*minn,nc=nc-tempc*minn;\r\n     ans+=minn;\r\n     r+=nb*pbb;r+=ns*temps;r+=nc*tempc;\r\n     int cost=tempb*pbb+temps*ps+tempc*pc;\r\n     ans+=r/cost;\r\n     cout<<ans<<endl;\r\n}\r\n \r\nsigned main(){\r\n    fast;\r\n    int t=1;\r\n    // cin>>t;\r\n    while(t--){\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}