{
    "id": 229908991,
    "contestId": 371,
    "creationTimeSeconds": 1698340462,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 371,
        "index": "C",
        "name": "Hamburgers",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "brute force"
        ]
    },
    "author": {
        "contestId": 371,
        "members": [
            {
                "handle": "aman_raj02"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1386493200
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 90316800,
    "source": "//\u0915\u0930\u094d\u092e\u0923\u094d\u092f\u0947\u0935\u093e\u0927\u093f\u0915\u093e\u0930\u0938\u094d\u0924\u0947 \u092e\u093e \u092b\u0932\u0947\u0937\u0941 \u0915\u0926\u093e\u091a\u0928\u0964 \u092e\u093e \u0915\u0930\u094d\u092e\u092b\u0932\u0939\u0947\u0924\u0941\u0930\u094d\u092d\u0942\u0930\u094d\u092e\u093e \u0924\u0947 \u0938\u0919\u094d\u0917\u094b\u093d\u0938\u094d\u0924\u094d\u0935\u0915\u0930\u094d\u092e\u0923\u093f\u0965\r\n#include <bits/stdc++.h> \r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <iostream>\r\nusing  namespace std;\r\nusing namespace __gnu_pbds; \r\ntemplate<class T> using oset = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update> ;//find_by_order, order_of_key\r\n#pragma GCC target (\"avx2\") \r\n#pragma GCC optimization (\"O3\")\r\n#pragma GCC optimization (\"unroll-loops\")\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double lld;\r\n#define F(n)  __builtin_popcountll(n)\r\n#define int long long\r\n#define pii pair<int, int> \r\n#define pll pair<ll, ll> \r\n#define pss pair<string, string> \r\n#define vi vector<int>\r\n#define vvi vector<vi> \r\n#define vii vector<pii> \r\n#define vl vector<ll> \r\n#define get_vec(a) for (int i = 0;i<a.size();i++) cin >> a[i];\r\n#define vvl vector<vl> \r\n//#define pq priority_queue<int>\r\nconst ll MAX_N=1e18;\r\nconst ll inf = 5e18;\r\n#define S second \r\n#define PB push_back\r\n#define MP make_pair\r\n#define FAST1 ios_base::sync_with_stdio(false);\r\n#define FAST2  cin.tie(NULL);\r\n#define FOR(a, b, c) for (int(a) = (b); (a) < (c); ++(a))\r\n#define FORN(a, b, c) for (int(a) = (b); (a) <= (c); ++(a))\r\n#define FORD(a, b, c) for (int(a) = (b); (a) >= (c); --(a))\r\n#define FORSQ(a, b, c) for (int(a) = (b); (a) * (a) <= (c); ++(a))\r\n#define FORC(a, b, c) for (char(a) = (b); (a) <= (c); ++(a))\r\n#define FOREACH(a, b) for (auto &(a) : (b))\r\n#define REP(i, n) FOR(i, 0, n)\r\n#define f1(i,n) for(int i=0;i<n;i++)\r\n#define f2(i,n) for(int i=n-1;i>=0;i--)\r\n#define f3(i,n) for(int i=1;i<=n;i++)\r\n#define rep(n) for(int i=0; i<n; i++)\r\n#define repp(i, x, y) for(int (i)=(x); (i)<(y); (i)++)\r\n#define REPN(i, n) FORN(i, 1, n)\r\n#define MAX(a, b) a = max(a, b)\r\n#define MIN(a, b) a = min(a, b)\r\n#define SQR(x) ((LL)(x) * (x))\r\n#define RESET(a, b) memset(a, b, sizeof(a))\r\n#define fi first\r\n#define se second\r\n#define mp make_pair\r\n#define pb push_back\r\n#define all(v) v.begin(), v.end()\r\n#define sumv(v) accumulate(all(v),0);\r\n#define ALLA(arr, sz) arr, arr + sz\r\n#define SIZE(v) (int)v.size()\r\n#define sort(v) sort(all(v))\r\n#define reverse(v) reverse(all(v))\r\n#define SORTA(arr, sz) sort(ALLA(arr, sz))\r\n#define REVERSEA(arr, sz) reverse(ALLA(arr, sz))\r\n#define PERMUTE next_permutation\r\n#define inv(v,n) vi v(n);FOR(i,0,n) cin >> v[i]\r\n#define sz(s)  (int)(s.size())\r\n#define tc(t) int t , cin>>t ,while (t--)\r\n#define endl  \"\\n\"\r\n#define pln cout << \"\\n\" \r\n#define NO cout << \"NO\\n\" \r\n#define YES cout << \"YES\\n\"\r\n#define mem1(a)  memset(a,-1,sizeof(a))\r\n#define mem0(a)  memset(a,0,sizeof(a))\r\n#define print_vec(v) f1(i,v.size()) cout<<v[i]<<\" \";\r\nbool ar[90000001];\r\nint gcd(int x, int y) {return (x ? gcd(y % x, x) : y);}\r\nconst int mod = 1e9 + 7;\r\n\r\n//<--------------####DEBUGER CODE######-------------------->>\r\n\r\n#ifndef ONLINE_JUDGE\r\n#define debug(x) cerr << #x <<\" \"; _print(x); cerr << endl;\r\n#else\r\n#define debug(x)\r\n#endif\r\n\r\n\r\nvoid _print(int t) {cerr << t;}\r\nvoid _print(string t) {cerr << t;}\r\nvoid _print(char t) {cerr << t;}\r\nvoid _print(lld t) {cerr << t;}\r\nvoid _print(double t) {cerr << t;}\r\nvoid _print(ull t) {cerr << t;}\r\n\r\ntemplate <class T, class V> void _print(pair <T, V> p);\r\ntemplate <class T> void _print(vector <T> v);\r\ntemplate <class T> void _print(set <T> v);\r\ntemplate <class T, class V> void _print(map <T, V> v);\r\ntemplate <class T> void _print(multiset <T> v);\r\ntemplate <class T, class V> void _print(pair <T, V> p) {cerr << \"{\"; _print(p.ff); cerr << \",\"; _print(p.ss); cerr << \"}\";}\r\ntemplate <class T> void _print(vector <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(set <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T> void _print(multiset <T> v) {cerr << \"[ \"; for (T i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\ntemplate <class T, class V> void _print(map <T, V> v) {cerr << \"[ \"; for (auto i : v) {_print(i); cerr << \" \";} cerr << \"]\";}\r\n\r\n/*/---------------------------RNG----------------------/*/\r\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\r\ninline int64_t random_long(long long l = LLONG_MIN,long long r = LLONG_MAX){\r\n    uniform_int_distribution<int64_t> generator(l,r);\r\n    return generator(rng);\r\n}\r\nstruct custom_hash { // Credits: https://codeforces.com/blog/entry/62393\r\n    static uint64_t splitmix64(uint64_t x) {\r\n        // http://xorshift.di.unimi.it/splitmix64.c\r\n        x += 0x9e3779b97f4a7c15;\r\n        x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9;\r\n        x = (x ^ (x >> 27)) * 0x94d049bb133111eb;\r\n        return x ^ (x >> 31);\r\n    }\r\n    size_t operator()(uint64_t x) const {\r\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n        return splitmix64(x + FIXED_RANDOM);\r\n    }\r\n    template<typename L, typename R>\r\n    size_t operator()(pair<L,R> const& Y) const{\r\n        static const uint64_t FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count();\r\n        return splitmix64(Y.first * 31ull + Y.second + FIXED_RANDOM);\r\n    }\r\n};\r\n\r\nvoid FLASH()\r\n{\r\n  #ifndef ONLINE_JUDGE\r\n  freopen(\"input.txt\", \"r\", stdin);\r\n  freopen(\"output.txt\", \"w\", stdout);\r\n  freopen(\"error.txt\", \"w\", stderr); \r\n  #endif\r\n}\r\n\r\nvector <bool> primes(1e6+1, true);\r\n \r\n  void Sieve(){\r\n    int sqr = sqrt(sz(primes));\r\n    primes[0] = primes[1] = 0;\r\n    for(int i = 2; i <= sqr; i++)\r\n      if(primes[i]){\r\n        for(int j = i * i; j <= 1e6; j += i)\r\n            primes[j] = false;\r\n    }\r\n}\r\n\r\nint lcm(int x,int y){return x / gcd(x,y)*y;}\r\n\r\n// function to find factorial of given\r\n// number using while loop\r\nint N = 1000001;\r\nint n;\r\n// vector<int> fen(N);\r\n\r\n// void update(int i ,int add){\r\n//     for(; i<=n; i+=(i&-i))\r\n//         fen[i] += add;\r\n// }\r\n\r\n\r\n// int find(int x){\r\n//    int ans = n,l=1,r=n;\r\n//     while(l<=r){\r\n//         int md = (l+r)/2;\r\n//         if(sum(md)>=x){\r\n//             ans = md;\r\n//          r=md-1;\r\n//      }\r\n//         else l=md+1;\r\n//     }\r\n//     return ans;\r\n// }\r\n\r\n\r\nbool isa_prime(int n) {\r\n    for(int i= 2; i < n ;i++) {\r\n        if(n%i == 0) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n\r\nbool bs(int nb,int ns,int nc,int pb,int ps,int pc,int r,int rb,int rc,int rs,int x){\r\n     rb *= x,rc *= x,rs *= x;\r\n// cout<<rb<<\" \"<<rs<<\" \"<<rc<<\" \"<<r<<endl;\r\n if(nb<rb&&r>0) r -= (rb-nb)*pb;\r\n if(nc<rc&&r>0) r -= (rc-nc)*pc;\r\n if(ns<rs&&r>0) r -= (rs-ns)*ps;\r\n //cout<<nb<<\" \"<<ns<<\" \"<<nc<<\" \"<<r<<endl;\r\n if(r<0) return false;\r\n return true;\r\n}\r\n\r\n\r\nint32_t main(){\r\n    // FLASH();\r\n  // auto start = chrono::high_resolution_clock::now();\r\n //  FAST1;\r\n  // FAST2;\r\n\r\nint tc=1;\r\n//cin>>tc;\r\n\r\nwhile(tc--){\r\n\r\nstring s;\r\ncin>>s;\r\nint nb,ns,nc,pb,ps,pc,r;\r\ncin>>nb>>ns>>nc>>pb>>ps>>pc>>r;\r\nint rb =0,rc =0,rs =0;\r\nint lo = 0, hi = 1e18;\r\n\r\n//1 hambourger costs\r\n\r\n for(char c : s){\r\n    if(c=='B') rb++;\r\n    else if(c=='S') rs++;\r\n    else rc++;\r\n }\r\n //x amount of bread can i make \r\n//  int i;\r\n// for( i = 1000000000000;i>=0;i--){\r\n//     if(bs(nb,ns,nc,pb,ps,pc,r,rb,rc,rs,i)) break;\r\n    \r\n// }\r\n// cout<<i<<endl;\r\n\r\nwhile(lo<=hi){\r\n    int mid = lo + (hi-lo)/2;\r\n    if(bs(nb,ns,nc,pb,ps,pc,r,rb,rc,rs,mid)) lo = mid+1;\r\n    else hi = mid -1;\r\n   // cout<<lo<<\" \"<<hi<<endl;\r\n}\r\n\r\ncout<<hi<<endl;\r\n\r\n}\r\n\r\n \r\n  // auto stop = chrono::high_resolution_clock::now();\r\n  // auto duration = chrono::duration_cast<chrono::milliseconds>(stop - start);\r\n  // cout << duration.count() << \" ms\\n\";  \r\n return 0;      \r\n}"
}