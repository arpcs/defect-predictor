{
    "id": 213109194,
    "contestId": 534,
    "creationTimeSeconds": 1688989317,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 534,
        "index": "F",
        "name": "Simplified Nonogram",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2400,
        "tags": [
            "bitmasks",
            "dp",
            "hashing",
            "meet-in-the-middle"
        ]
    },
    "author": {
        "contestId": 534,
        "members": [
            {
                "handle": "Naive_512"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1428854400
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 111,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 716800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nint n,m;\r\nint a[10],b[30],res,p[100];\r\nset<int>ha[25][1 << 5];\r\nchar ans[55][55];\r\nvector<int>st[15];\r\n \r\nbool dfs(int deep,int last,int state)\r\n{\r\n    if(deep == m)\r\n        return state == res;\r\n \r\n    for(int i = 0;i < n;i ++)\r\n    {\r\n        int x = state / p[i] % 11;\r\n \r\n        if(x > a[i]) \r\n            return 0;\r\n \r\n        if(x + (m - deep + 1) / 2 < a[i]) \r\n            return 0;\r\n    }\r\n \r\n \r\n    if(ha[deep][last].count(state)) \r\n        return 0;\r\n \r\n    for(auto ne : st[b[deep]])\r\n    {\r\n        int nxt = state;\r\n \r\n        for(int i = 0;i < n;i ++)\r\n            if((!(last >> i & 1)) && (ne >> i & 1)) \r\n                nxt += p[i];\r\n \r\n        if(dfs(deep + 1,ne,nxt))\r\n        {\r\n            for(int i = 0;i < n;i ++)\r\n            {\r\n                if(ne >> i & 1) \r\n                    ans[i][deep] = '*';\r\n                else \r\n                    ans[i][deep] = '.';\r\n                \r\n            }\r\n            return 1;\r\n        } \r\n    }\r\n    ha[deep][last].insert(state);\r\n    return 0;\r\n}\r\nint main()\r\n{\r\n    cin >> n >> m;\r\n \r\n    for(int i = 0;i < (1 << n);i ++) \r\n    {\r\n        int c[10];\r\n        for(int j = 0;j < n;j ++) \r\n            c[j] = i >> j & 1;\r\n \r\n        int cnt = 0;\r\n        for(int j = 0;j < n;j ++) \r\n            if(c[j] == 1 && (j == 0 || c[j - 1] != 1)) \r\n                cnt ++;\r\n \r\n        st[cnt].push_back(i);\r\n    }\r\n \r\n    for(int i = 0;i < n;i ++) \r\n        cin >> a[i];\r\n    for(int i = 0;i < m;i ++) \r\n        cin >> b[i];\r\n \r\n    p[0] = 1;\r\n    for(int i = 1;i <= 5;i ++) \r\n        p[i] = p[i - 1] * 11;\r\n    for(int i = 0;i < n;i ++) \r\n        res += p[i] * a[i];\r\n \r\n \r\n    dfs(0,0,0);\r\n \r\n    for(int i = 0;i < n;i ++) \r\n        cout << ans[i] << endl;\r\n    return 0;\r\n}\r\n"
}