{
    "id": 223378412,
    "contestId": 1801,
    "creationTimeSeconds": 1694707202,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1801,
        "index": "D",
        "name": "The way home",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2100,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "graphs",
            "greedy",
            "shortest paths",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1801,
        "members": [
            {
                "handle": "Hnhat1234"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1678354500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 8089600,
    "source": "#include <bits/stdc++.h>\r\n#define ll long long\r\n\r\nusing namespace std;\r\n\r\nll d[805][805], f[805], w[805];\r\n\r\nint vis[805][805];\r\n\r\nvector<pair<int,int>> adj[805];\r\n\r\nvoid reset(int n){\r\n    for (int i = 1;i <= n;++i){\r\n        f[i] = 1e18;\r\n        for (int j = 1;j <= n;++j){\r\n            d[i][j] = 1e18;\r\n            vis[i][j] = 0;\r\n        }\r\n        adj[i].clear();\r\n    }\r\n}\r\nvoid djkstra(int n){\r\n    for (int i = 1;i <= n;++i){\r\n        d[i][i] = 0;\r\n        priority_queue<pair<ll,int>> q;\r\n        q.push({d[i][i], i});\r\n        while (q.size()){\r\n            auto x = q.top(); q.pop();\r\n            int u = x.second;\r\n            if (vis[i][u]){continue;}\r\n            vis[i][u] = 1;\r\n            for (auto g : adj[u]){\r\n                int v = g.first;\r\n                ll w = g.second;\r\n                if (d[i][v] > d[i][u] + w){\r\n                    d[i][v] = d[i][u] + w;\r\n                    q.push({-d[i][v], v});\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nint main(){\r\n    ios_base::sync_with_stdio(false); cin.tie(0);\r\n    int t; cin >> t;\r\n    while (t--){\r\n        int n, m, p; cin >> n >> m >> p;\r\n        for (int i = 1;i <= n;++i){cin >> w[i];}\r\n        reset(n);\r\n        for (int i = 1;i <= m;++i){\r\n            int a, b, s; cin >> a >> b >> s;\r\n            adj[a].push_back({b, s});\r\n        }\r\n        djkstra(n);\r\n        priority_queue<pair<ll, pair<ll,int>>> q;\r\n        f[1] = 0;\r\n        q.push({f[1], {p, 1}});\r\n        while (q.size()){\r\n            auto x = q.top(); q.pop();\r\n            int u = x.second.second;\r\n            ll remain = x.second.first;\r\n            ll val = x.first;\r\n            if (f[u] < -val){continue;}\r\n            for (int i = 1;i <= n;++i){\r\n                if (d[u][i] == 1e18 || u == i){continue;}\r\n\r\n                ll cost = (d[u][i] - remain) / w[u];\r\n                if (d[u][i] >= remain){cost += (((d[u][i] - remain) % w[u]) != 0);}\r\n\r\n                if (f[i] > f[u] + cost){\r\n                    f[i] = f[u] + cost;\r\n                    q.push({-f[i], {remain + cost * w[u] - d[u][i], i}});\r\n                }\r\n            }\r\n        }\r\n        cout << (f[n] == 1e18 ? -1 : f[n]) << '\\n';\r\n    }\r\n}\r\n"
}