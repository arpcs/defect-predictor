{
    "id": 229526849,
    "contestId": 1801,
    "creationTimeSeconds": 1698134752,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1801,
        "index": "D",
        "name": "The way home",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2100,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "graphs",
            "greedy",
            "shortest paths",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1801,
        "members": [
            {
                "handle": "Urdadinthemilkstore"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1678354500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 85,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 12697600,
    "source": "#include <bits/stdc++.h>\n#define FOR(i, k, n) for(int i = k; i <= n; i++)\n#define FORD(i, k, n) for(int i = k; i >= n; i--)\n#define REP(i, n) for(int i = 0; i < n; i++)\n#define REPD(i, n) for(int i = n - 1; i >= 0; i--)\n#define ii pair<int,int>\n#define trii pair<int,ii>\n#define fi first\n#define se second\n#define int long long\n#define vi vector<int>\n#define pb push_back\n#define all(x, n) (x) + 1, (x) + n + 1\n#define allv(x) (x).begin(), (x).end()\n#define vii vector<ii>\r\n#define INF 1e18\n\nusing namespace std;\r\nconst int N = 805;\r\nint w[N];\r\nvii g[N];\r\nvi tmp;\r\nii d[N][N];\r\n\r\nstruct state\r\n{\r\n    int v, mw, show, money;\r\n    bool operator < (const state &a) const\r\n    {\r\n        if (show != a.show) return (show > a.show);\r\n        return (money < a.money);\r\n    }\r\n};\r\n\r\nint gid(int x)\r\n{\r\n    return (upper_bound(allv(tmp), x) - tmp.begin());\r\n}\r\n\r\nbool cmax(ii &a, ii b)\r\n{\r\n    if (b.fi < a.fi)\r\n    {\r\n        a = b;\r\n        return true;\r\n    }\r\n    else if (b.fi == a.fi && (b.se > a.se))\r\n    {\r\n        a = b;\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nvoid dijstra(int p)\r\n{\r\n    d[1][w[1]] = {0, p};\r\n    priority_queue<state> q;\r\n    q.push({1, w[1], 0, p});\r\n    while(!q.empty())\r\n    {\r\n        state tp = q.top();\r\n        q.pop();\r\n        if (tp.show > d[tp.v][tp.mw].fi) continue;\r\n        if (tp.show == d[tp.v][tp.mw].fi && (tp.money < d[tp.v][tp.mw].se)) continue;\r\n        for (ii x : g[tp.v])\r\n        {\r\n            int u = x.fi;\r\n            int cw = tmp[tp.mw-1];\r\n            int nmw = max(w[u], tp.mw);\r\n            bool f = false;\r\n            if (x.se <= tp.money)\r\n            {\r\n                f = cmax(d[u][nmw], {tp.show, tp.money-x.se});\r\n            }\r\n            else\r\n            {\r\n                int nshow = (x.se - tp.money) / cw;\r\n                if ((x.se - tp.money) % cw != 0) nshow++;\r\n                int nmoney = cw * nshow + tp.money - x.se;\r\n                nshow += tp.show;\r\n                f = cmax(d[u][nmw], {nshow, nmoney});\r\n            }\r\n            if (f)\r\n            {\r\n                q.push({u, nmw, d[u][nmw].fi, d[u][nmw].se});\r\n            }\r\n        }\r\n    }\r\n}\n\nint32_t main()\n{\n    iostream::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\r\n    int t; cin >> t;\r\n    while(t--)\r\n    {\r\n        int n, m, p; cin >> n >> m >> p;\r\n        FOR(i, 1, n) g[i].clear();\r\n        FOR(i, 1, n)\r\n        {\r\n            FOR(j, 1, n) d[i][j] = {INF, 0};\r\n        }\r\n        tmp.clear();\r\n        FOR(i, 1, n)\r\n        {\r\n            cin >> w[i];\r\n            tmp.pb(w[i]);\r\n        }\r\n        sort(allv(tmp));\r\n        tmp.erase(unique(allv(tmp)), tmp.end());\r\n        FOR(i, 1, n)\r\n        {\r\n            w[i] = gid(w[i]);\r\n        }\r\n        FOR(i, 1, m)\r\n        {\r\n            int u, v, w; cin >> u >> v >> w;\r\n            g[u].pb({v, w});\r\n        }\r\n        dijstra(p);\r\n        int res = INF;\r\n        FOR(i, 1, n)\r\n        {\r\n            res = min(res, d[n][i].fi);\r\n        }\r\n        if (res >= INF) cout << -1;\r\n        else cout << res;\r\n        cout << \"\\n\";\r\n    }\n    return 0;\n}\n"
}