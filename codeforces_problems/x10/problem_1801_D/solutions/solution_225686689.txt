{
    "id": 225686689,
    "contestId": 1801,
    "creationTimeSeconds": 1695920487,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1801,
        "index": "D",
        "name": "The way home",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2100,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "graphs",
            "greedy",
            "shortest paths",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1801,
        "members": [
            {
                "handle": "Illumina"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1678354500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "//#pragma GCC optimize(\"O3,unroll-loops,inline,no-stack-protector\")\r\n//#pragma GCC target(\"avx,avx2,sse3,ssse3,sse4.1,sse4.2,fma,bmi2,abm,popcnt,mmx,tune=native\")\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#ifdef LOCAL\r\n    int cnt_trace = 0;\r\n    void trace() {\r\n        cout << ++cnt_trace << endl;\r\n    }\r\n#else\r\n    void trace() {}\r\n#endif\r\n\r\nusing ll = long long;\r\n\r\nconstexpr ll INF = 1e18;\r\n\r\nvoid solve() {\r\n    int n, m, p;\r\n    cin >> n >> m >> p;\r\n    vector<pair<ll, int>> w(n);\r\n    for (int i = 0; i < n; ++i) {\r\n        cin >> w[i].first;\r\n        w[i].second = i;\r\n    }\r\n    sort(w.begin(), w.end());\r\n    vector<vector<ll>> d(n, vector<ll>(n, INF));\r\n    for (int i = 0; i < m; ++i) {\r\n        int a, b;\r\n        ll c;\r\n        cin >> a >> b >> c;\r\n        --a, --b;\r\n        d[a][b] = min(d[a][b], c);\r\n    }\r\n    for (int i = 0; i < n; ++i)\r\n        for (int j = 0; j < n; ++j)\r\n            for (int k = 0; k < n; ++k)\r\n                d[j][k] = min(d[j][i] + d[i][k], d[j][k]);\r\n//    for (int i = 0; i < n; ++i) {\r\n//        for (int j = 0; j < n; ++j)\r\n//            cout << i << ' ' << j << ' ' << d[i][j] << endl;\r\n//        cout << endl;\r\n//    }\r\n    vector<pair<ll, ll>> dp(n, {INF, -INF});\r\n    dp[0] = {0, p};\r\n//    for (int i = 0; i < n; ++i) {\r\n//        cout << w[i].first << ' ' << w[i].second << endl;\r\n//    }\r\n//    cout << endl;\r\n    for (int i = 0; i < n; ++i) {\r\n        int v = w[i].second;\r\n        for (int j = 0; j < i; ++j) {\r\n            int u = w[j].second;\r\n            if (dp[u].first != INF && d[u][v] != INF) {\r\n                ll cnt = max(0ll, (d[u][v] - dp[u].second + w[j].first - 1) / w[j].first);\r\n                dp[v] = min(dp[v], {dp[u].first + cnt, dp[u].second + cnt * w[j].first - d[u][v]});\r\n            }\r\n        }\r\n    }\r\n    ll res = dp[n - 1].first;\r\n    for (int i = 0; i < n - 1; ++i) {\r\n        int u = w[i].second;\r\n        if (dp[u].first != INF && d[u][n - 1] != INF) {\r\n            ll cnt = max(0ll, (d[u][n - 1] - dp[u].second + w[i].first - 1) / w[i].first);\r\n            res = min(res, dp[u].first + cnt);\r\n        }\r\n    }\r\n    cout << (res == INF ? -1 : res);\r\n}\r\n\r\nsigned main() {\r\n#ifdef LOCAL\r\n    freopen(\"input.in\", \"r\", stdin);\r\n#else\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n#endif\r\n    int t = 1;\r\n//    cin >> t;\r\n    while (t--)\r\n        solve();\r\n#ifdef LOCAL\r\n    cerr << '\\n' << \"time = \" << clock() * 1.0 / CLOCKS_PER_SEC << '\\n';\r\n#endif\r\n    return 0;\r\n}\r\n"
}