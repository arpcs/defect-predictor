{
    "id": 226682900,
    "contestId": 1801,
    "creationTimeSeconds": 1696481207,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1801,
        "index": "D",
        "name": "The way home",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2100,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "graphs",
            "greedy",
            "shortest paths",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1801,
        "members": [
            {
                "handle": "ShirokaneRinko"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1678354500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 85,
    "timeConsumedMillis": 1388,
    "memoryConsumedBytes": 5324800,
    "source": "// Hydro submission #651e28600f57df5a34575e93@1696481205645\n/*\r\nauthor:xh_forever\r\ntime:2023.10.5\r\n*/\r\n#include <bits/stdc++.h>\r\n#define int long long\r\nusing namespace std;\r\n\r\nconst int N = 810, M = 3010, inf = 1e15;\r\n\r\nint n, m, k, a[N], f[N], g[N], id[N], dis[N][N];\r\n\r\ninline int read(){\r\n    int s = 0, w = 1;\r\n    char ch = getchar();\r\n    for (; ch < '0' || ch > '9'; w *= ch == '-' ? -1 : 1, ch = getchar());\r\n    for (; ch >= '0' && ch <= '9'; s = s * 10 + ch - '0', ch = getchar());\r\n    return s * w;\r\n}\r\n\r\nbool cmp(int x, int y){return a[x] < a[y];}\r\n\r\nsigned main(){\r\n    for (int _ = read(); _--; ){\r\n        memset(dis, 0x3f, sizeof(dis));\r\n        n = read(), m = read(), g[1] = read(), f[1] = 0;\r\n        for (int i = 2; i <= n; ++i) f[i] = inf, g[i] = 0;\r\n        for (int i = 1; i <= n; ++i) a[i] = read(), id[i] = i, dis[i][i] = 0;\r\n        for (int i = 1, u, v; i <= m; ++i) u = read(), v = read(), dis[u][v] = min(dis[u][v], read());\r\n        for (int k = 1; k <= n; ++k)\r\n            for (int i = 1; i <= n; ++i)\r\n                for (int j = 1; j <= n; ++j)\r\n                    if (i ^ j && i ^ k && j ^ k) dis[i][j] = min(dis[i][j], dis[i][k] + dis[k][j]);\r\n        sort(id + 1, id + n + 1, cmp);\r\n        for (int i = 1; i <= n; ++i)\r\n            for (int j = 1, x, y, z; j <= n; ++j){\r\n                if (i == j || dis[x = id[i]][y = id[j]] > inf) continue;\r\n                int ff = f[x], gg = g[x];\r\n                if (gg >= dis[x][y]){\r\n                    if (ff < f[y]) f[y] = ff, g[y] = gg - dis[x][y];\r\n                    else if (ff == f[y]) g[y] = max(g[y], gg - dis[x][y]);\r\n                } else {\r\n                    gg += (z = (dis[x][y] - gg + a[x] - 1) / a[x]) * a[x], ff += z;\r\n                    if (ff < f[y]) f[y] = ff, g[y] = gg - dis[x][y];\r\n                    else if (ff == f[y]) g[y] = max(g[y], gg - dis[x][y]);\r\n                }\r\n            }\r\n        printf(\"%lld\\n\", f[n] < inf ? f[n] : -1);\r\n    }\r\n    return 0;\r\n}"
}