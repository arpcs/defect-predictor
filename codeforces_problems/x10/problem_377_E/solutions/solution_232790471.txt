{
    "id": 232790471,
    "contestId": 377,
    "creationTimeSeconds": 1699986385,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 377,
        "index": "E",
        "name": "Cookie Clicker",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2800,
        "tags": [
            "dp",
            "geometry"
        ]
    },
    "author": {
        "contestId": 377,
        "members": [
            {
                "handle": "Setytousi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1388331000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 12,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 3174400,
    "source": "#include<bits/stdc++.h>\n \nusing namespace std;\n#define int ll\n \ntypedef long long ll;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\n \nconst ll MAXN = 2e5 + 10;\nconst ll MOD = 1e9 + 7;\nconst ll INF = 1e17;\n \n#define fast_io     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);\n#define file_io     freopen(\"input.txt\", \"r\", stdin);freopen(\"output.txt\", \"w\", stdout);\n#define pb          push_back\n#define F           first\n#define S           second\n#define Sz(x)       int((x).size())\n#define all(x)      (x).begin(), (x).end()\n#define cl          clear()\n#define endll       '\\n'\n\npii A[MAXN];\nvector<pair<int, pii>> vec;\n\ninline ll intersection(pii l1, pii l2){\n    int c1 = l1.S, a1 = l1.F, c2 = l2.S, a2 = l2.F;\n    if (a1 == a2) return(c1 > c2 ? -INF : INF);\n    int t1 = c2 - c1, t2 = a1 - a2;\n    if (t1 < 0 && t2 < 0) t1 *= -1, t2 *= -1;\n    if (t2 < 0 || t1 < 0) return (abs(t1) / abs(t2)) * -1;\n    else return (t1 + t2 - 1) / t2;\n}\ninline void add(int a, int c){\n    while(!vec.empty() && intersection(vec.back().S, {a, c}) <= vec.back().F){\n        vec.pop_back();\n    }\n    if (vec.empty()) vec.pb({-INF, {a, c}});\n    else vec.pb({intersection(vec.back().S, {a, c}), {a, c}});\n}\ninline int get_mx(int p){\n    int ind = lower_bound(all(vec), make_pair(p, make_pair(INF, INF))) - vec.begin() - 1;\n    int a = vec[ind].S.F, c = vec[ind].S.S;\n    return p * a + c;\n}\n\nint32_t main(){\n    fast_io;\n    int n;\n    ll s;\n    cin >> n >> s;\n    for (int i = 0; i < n; i++) cin >> A[i].F >> A[i].S;\n    if (n == 1){\n        cout << (s + A[0].F - 1) / A[0].F << endll;\n        return 0;\n    }\n    sort(A, A + n);\n    A[n].S = s;\n    int c = 0;\n    for (int i = 0; i < n; i++) if (A[i].S == 0) c = i;\n    add(A[c].F, 0);\n    for (int i = c + 1; i <= n; i++){\n        int l = 0, r = (i == n ? INF : 1000000005), mid;\n        while(r - l > 1){\n            mid = (l + r) >> 1;\n            if (get_mx(mid) < A[i].S) l = mid;\n            else r = mid;\n        }\n        // cout << r << ' ' << get_mx(r) << endll;\n        if (i == n){\n            cout << r << endll;\n            break;\n        }\n        add(A[i].F, get_mx(r) - A[i].S - r * A[i].F);\n    }  \n}"
}