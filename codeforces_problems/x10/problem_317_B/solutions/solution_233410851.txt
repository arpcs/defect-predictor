{
    "id": 233410851,
    "contestId": 317,
    "creationTimeSeconds": 1700392062,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 317,
        "index": "B",
        "name": "Ants",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    "author": {
        "contestId": 317,
        "members": [
            {
                "handle": "tirtho149"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1371223800
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 40,
    "timeConsumedMillis": 234,
    "memoryConsumedBytes": 102400,
    "source": "#include <cstdio>\r\n#include <memory.h>\r\n\r\nconst int M = 64;\r\n\r\nint main()\r\n{\r\n    int n, t, ants[M * 2 + 1][M * 2 + 1] = {0}, ants_temp[M * 2 + 1][M * 2 + 1];\r\n    scanf(\"%d%d\", &n, &t);\r\n    ants[M][M] = n;\r\n    bool find = (n != 0);\r\n    while (find)\r\n    {\r\n        find = false;\r\n\r\n        memset(ants_temp, 0, sizeof(ants_temp));\r\n\r\n        for (int i = 0; i <= M * 2; ++i)\r\n        {\r\n            for (int j = 0; j <= M * 2; ++j)\r\n            {\r\n                if (ants[i][j] >= 4)\r\n                {\r\n                    find = true;\r\n                    ants_temp[i-1][j] += ants[i][j] / 4;\r\n                    ants_temp[i+1][j] += ants[i][j] / 4;\r\n                    ants_temp[i][j-1] += ants[i][j] / 4;\r\n                    ants_temp[i][j+1] += ants[i][j] / 4;\r\n                }\r\n                ants_temp[i][j] += ants[i][j] % 4;\r\n            }\r\n        }\r\n\r\n        memcpy(ants, ants_temp, sizeof(ants));\r\n    }\r\n\r\n    while (t--)\r\n    {\r\n        int x, y;\r\n        scanf(\"%d%d\", &x, &y);\r\n        printf(\"%d\\n\", (x >= -M && y >= - M && x <= M && y <= M) ? ants[M + x][M + y] : 0);\r\n    }\r\n    return 0;\r\n}"
}