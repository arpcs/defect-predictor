{
    "id": 104689918,
    "contestId": 317,
    "creationTimeSeconds": 1610977433,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 317,
        "index": "B",
        "name": "Ants",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2000,
        "tags": [
            "brute force",
            "implementation"
        ]
    },
    "author": {
        "contestId": 317,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1371223800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 40,
    "timeConsumedMillis": 499,
    "memoryConsumedBytes": 307200,
    "source": "# include <bits/stdc++.h>\n# define X first\n# define Y second\n# define mem(a,b) memset(a,b,sizeof(a))\n# define lb(x) (x & -x)\n# define debug freopen(\"r.txt\",\"r\",stdin)\n# define pi pair<int,int>\n# define ABS(x) ((x) > 0 ? (x) : -(x))\ntypedef long long ll;\ntypedef unsigned long long ull;\nusing namespace std;\nconst int N=204;\nint z[2][N][N],o=100;\ninline int &a(int p,int x,int y){\n    return z[p][x+o][y+o];\n}\nint main(){\n    int n,q,x,y;\n    scanf(\"%d %d\",&n,&q);\n    a(0,0,0)=n;\n    int p=0;\n    for(;;p^=1){\n        mem(z[p^1],0);\n        bool f=1;\n        for(int i=-o;i<=o;i++)\n            for(int j=-o;j<=o;j++){\n                if(a(p,i,j)>=4){\n                    int x=a(p,i,j);\n                    a(p^1,i-1,j)+=x>>2;\n                    a(p^1,i+1,j)+=x>>2;\n                    a(p^1,i,j-1)+=x>>2;\n                    a(p^1,i,j+1)+=x>>2;\n                    a(p^1,i,j)+=x&3;\n                    f=0;\n                }\n                else a(p^1,i,j)+=a(p,i,j);\n            }\n        if(f) break;\n    }\n    while(q--){\n        scanf(\"%d %d\",&x,&y);\n        if(abs(x)>=100||abs(y)>=100) puts(\"0\");\n        else printf(\"%d\\n\",a(p,x,y));\n    }\n}\n\n\t\t\t\t \t  \t\t\t\t\t \t\t  \t \t\t\t  \t \t\t \t"
}