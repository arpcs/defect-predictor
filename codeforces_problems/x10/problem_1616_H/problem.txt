{
    "contestId": 1616,
    "index": "H",
    "name": "Keep XOR Low",
    "type": "PROGRAMMING",
    "points": 4000.0,
    "rating": 3000,
    "tags": [
        "bitmasks",
        "combinatorics",
        "data structures",
        "divide and conquer",
        "dp",
        "math"
    ],
    "desc": {
        "title": "H. Keep XOR Low",
        "statement": "<p>You are given an array $$$a_1, a_2, \\ldots, a_n$$$ and an integer $$$x$$$.</p><p>Find the number of non-empty subsets of indices of this array $$$1 \\leq b_1 &lt; b_2 &lt; \\ldots &lt; b_k \\leq n$$$, such that for all pairs $$$(i, j)$$$ where $$$1 \\leq i &lt; j \\leq k$$$, the inequality $$$a_{b_i} \\oplus a_{b_j} \\leq x$$$ is held. Here, $$$\\oplus$$$ denotes the <a href=\"https://en.wikipedia.org/wiki/Bitwise_operation#XOR\">bitwise XOR operation</a>. As the answer may be very large, output it modulo $$$998\\,244\\,353$$$.</p>",
        "inputSpecification": "<p>The first line of the input contains two integers $$$n$$$ and $$$x$$$ ($$$1 \\leq n \\leq 150\\,000$$$, $$$0 \\leq x &lt; 2^{30}$$$). Here, $$$n$$$ is the size of the array.</p><p>The next line contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$0 \\leq a_i &lt; 2^{30}$$$): the array itself.</p>",
        "outputSpecification": "<p>Print one integer: the number of non-empty subsets such that the bitwise XOR of every pair of elements is at most $$$x$$$, modulo $$$998\\,244\\,353$$$.</p>",
        "samples": [
            {
                "input": "\n4 2\n0 1 2 3\n",
                "output": "\n8\n"
            },
            {
                "input": "\n3 6\n4 2 2\n",
                "output": "\n7\n"
            },
            {
                "input": "\n4 0\n1 1 2 2\n",
                "output": "\n6\n"
            }
        ],
        "note": null
    }
}