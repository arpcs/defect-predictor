{
    "id": 232854781,
    "contestId": 1616,
    "creationTimeSeconds": 1700051061,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1616,
        "index": "H",
        "name": "Keep XOR Low",
        "type": "PROGRAMMING",
        "points": 4000.0,
        "rating": 3000,
        "tags": [
            "bitmasks",
            "combinatorics",
            "data structures",
            "divide and conquer",
            "dp",
            "math"
        ]
    },
    "author": {
        "contestId": 1616,
        "members": [
            {
                "handle": "BreakPlus"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1640792100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 16,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 129433600,
    "source": "/*-----------------------------------------------*/\r\n/* Everything that kills me makes me feel alive. */\r\n/* Email: [email\u00a0protected]                  */\r\n/* Author: wzj_zhzx_oicon / BreakPlus            */\r\n/*-----------------------------------------------*/\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef pair<ll,ll> P;\r\ntypedef pair<pair<ll,ll>,ll> P3;\r\ntypedef pair<pair<ll,ll>,pair<ll,ll> >P4;\r\n#define mkp make_pair\r\n#define fi first\r\n#define se second\r\n#define popcnt __builtin_popcount\r\n//#define FastIO\r\n//#define OIcontest\r\nconst ll mod=998244353;\r\nconst ll maxn=500005;\r\n\r\ninline ll read(){\r\n\tll x=0,f=1; char ch=getchar(); while(ch<'0'||ch>'9'){if(ch=='-') f=-1;ch=getchar();}\r\n\twhile(ch>='0'&&ch<='9')x=x*10+ch-'0',ch=getchar(); return x*f;\r\n}\r\ninline ll lowbit(ll x){ return x&-x; }\r\nstruct Bit{\r\n\tll c[maxn], _x[maxn], _w[maxn], tp=0;\r\n\tvoid update(ll x,ll w){ _x[++tp]=x, _w[tp]=w; while(x<maxn) c[x]+=w, x+=lowbit(x);}\r\n\tvoid update2(ll x,ll w){ while(x<maxn) c[x]+=w, x+=lowbit(x);}\r\n\tll query(ll x){ ll res=0; while(x) res+=c[x], x-=lowbit(x); return res; }\r\n\tvoid clear(){ for(ll i=1;i<=tp;i++) update2(_x[i], -_w[i]); tp=0;}\r\n\tvoid fclear(){ tp=0; memset(c, 0, sizeof(c)); }\r\n}bit;\r\n\r\ninline ll maxx(ll a,ll b){ return a>b?a:b; }\r\ninline ll minn(ll a,ll b){ return a<b?a:b; }\r\ninline void chkmax(ll &a,ll b){ a = maxx(a, b); }\r\ninline void chkmin(ll &a,ll b){ a = minn(a, b); }\r\n\r\ninline void _Add(ll &a,ll b){ a+=b; if(a>=mod) a-=mod; }\r\ninline void _Minus(ll &a,ll b){ a-=b; if(a<0) a+=mod; }\r\ninline ll Add(ll a,ll b){ a+=b; if(a>=mod) a-=mod; return a; }\r\ninline ll Minus(ll a,ll b){ a-=b; if(a<0) a+=mod; return a; }\r\n\r\ninline ll qpow(ll a,ll b){\r\n    ll ans=1, base=a;\r\n    while(b){ if(b&1) ans=1ll*ans*base%mod; base=1ll*base*base%mod; b>>=1; }\r\n    return ans;\r\n}\r\nstruct Comb{\r\n    ll fac[maxn], inv[maxn];\r\n    Comb(){\r\n       fac[0]=1; for(ll i=1;i<=maxn-5;i++) fac[i]=1ll*fac[i-1]*i%mod;\r\n\t   inv[maxn-5]=qpow(fac[maxn-5],mod-2); for(ll i=maxn-6;i>=0;i--) inv[i]=1ll*inv[i+1]*(i+1)%mod;\r\n    }\r\n    ll C(ll a,ll b){ if(a<0 || b<0 || a<b) return 0; return 1ll*fac[a]*inv[b]%mod*inv[a-b]%mod; }\r\n}comb;\r\nll Fac(ll x){return comb.fac[x];}ll iFac(ll x){return comb.inv[x];}ll Inv(ll x){return qpow(x, mod-2);}\r\n/*--------------head------------------*/\r\nvoid init(){\r\n\r\n}\r\nvoid clear(){  }\r\nconst ll T=30;\r\nll n,x,a[150005];\r\nll son[4500005][2], sz[4500005], now = 1;\r\nvoid add(ll x){\r\n\tll rt = 1; sz[rt] ++;\r\n\tfor(ll i=T;i>=0;i--){\r\n\t\tll s = (x>>i)&1;\r\n\t\tif(!son[rt][s]) son[rt][s] = (++now);\r\n\t\trt = son[rt][s]; sz[rt] ++;\r\n//\t\tcout<<\"adding \"<<x<<\" had \"<<rt<<endl;\r\n\t}\r\n}\r\n//void debug(ll l,ll r,ll dep,ll num){\r\n//\treturn cout<<\"dp \"<<l<<\" \"<<r<<\" \"<<dep<<\"=\"<<num<<endl;\r\n//}\r\nll treedp(ll l,ll r,ll dep){\r\n\tll ans = 0;\r\n\t\r\n\tif(!l) return qpow(2, sz[r]);\r\n\tif(!r) return qpow(2, sz[l]);\r\n\tif(l==r){\r\n\t\tif(dep<0) return qpow(2,sz[l]);\r\n\t\tif((x>>dep)&1) return treedp(son[l][0],son[l][1],dep-1);\r\n\t\telse return (treedp(son[l][0],son[l][0],dep-1)+treedp(son[l][1],son[l][1],dep-1)-1+mod)%mod;\r\n\t}\r\n\tif((x>>dep)&1){\r\n\t\tif(dep<0) return qpow(2,sz[l]+sz[r]);\r\n\t\treturn treedp(son[l][0], son[r][1], dep-1) * treedp(son[l][1], son[r][0], dep-1) % mod;\r\n\t}else{\r\n\t\tif(dep<0) return qpow(2,sz[l]+sz[r]);\r\n\t\tll ans1 = treedp(son[l][0], son[r][0], dep-1) + treedp(son[l][1], son[r][1], dep-1) - 1 + mod;\r\n\t\tll ans2 = (qpow(2, sz[son[l][0]]) - 1) * (qpow(2, sz[son[l][1]]) - 1) % mod;\r\n\t\tll ans3 = (qpow(2, sz[son[r][0]]) - 1) * (qpow(2, sz[son[r][1]]) - 1) % mod;\r\n\t\treturn (ans1+ans2+ans3)%mod;\r\n\t}\r\n}\r\nvoid solve(){\r\n\tn=read(), x=read();\r\n\tfor(ll i=1;i<=n;i++) a[i]=read(), add(a[i]);\r\n\tprintf(\"%lld\\n\", (treedp(1,1,T)+mod-1)%mod);\r\n}\r\nint main(){\r\n    #ifdef OIcontest\r\n        freopen(\".in\",\"r\",stdin);\r\n        freopen(\".out\",\"w\",stdout);\r\n    #endif\r\n    #ifdef FastIO\r\n        ios::sync_with_stdio(0); cin.tie(0), cout.tie(0);\r\n    #endif\r\n    init();\r\n    ll T=1;\r\n    while(T--) clear(), solve();\r\n    return 0;\r\n}\r\n/*\r\nInput1 Text Copied:\r\n\r\n\r\nAnswer2 Text Copied:\r\n\r\n\r\nInput1 Text Copied:\r\n\r\n\r\nAnswer2 Text Copied:\r\n*/\r\n"
}