{
    "id": 221416511,
    "contestId": 1450,
    "creationTimeSeconds": 1693554100,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1450,
        "index": "D",
        "name": "Rating Compression",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "binary search",
            "data structures",
            "greedy",
            "implementation",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1450,
        "members": [
            {
                "handle": "Actium"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1607265300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 102400,
    "source": "#include <iostream>\n#include <set>\n#include <string>\n#include <vector>\n\ntemplate <typename T>\nstd::istream& operator >>(std::istream& input, std::vector<T>& v)\n{\n    for (T& a : v)\n        input >> a;\n\n    return input;\n}\n\nunsigned mode = 0;\n\nvoid answer(const std::string& x)\n{\n    if (mode < 2)\n        std::cout << x << '\\n';\n}\n\nvoid answer(const std::vector<unsigned>& v)\n{\n    for (const unsigned x : v)\n        std::cout << x;\n\n    std::cout << '\\n';\n}\n\nvoid solve(const std::vector<unsigned>& a)\n{\n    const size_t n = a.size();\n\n    std::vector<std::pair<size_t, size_t>> b(1 + n, std::make_pair(n, 0));\n    for (size_t i = 0; i < n; ++i) {\n        b[a[i]].first = std::min(b[a[i]].first, i);\n        b[a[i]].second = i;\n    }\n\n    std::set<unsigned> s(a.cbegin(), a.cend());\n\n    std::string v(n, '0');\n    for (unsigned k = 1, lb = ~0u, ub = 0, t = ~0u; k <= n && !s.empty(); ++k) {\n        const unsigned x = n - k + 1;\n        if (*s.rbegin() != x)\n            continue;\n\n        if (lb == ~0u) {\n            lb = b[x].first;\n            ub = b[x].first;\n            t = x;\n        }\n\n        while (lb > b[x].first)\n            t = std::min(t, a[--lb]);\n\n        while (ub < b[x].second)\n            t = std::min(t, a[++ub]);\n\n        if (s.size() == x && t == x && ub - lb == k - 1)\n            v[k-1] = '1';\n\n        s.erase(std::prev(s.end()));\n    }\n\n    answer(v);\n}\n\nvoid test_case()\n{\n    size_t n;\n    std::cin >> n;\n\n    std::vector<unsigned> a(n);\n    std::cin >> a;\n\n    if (mode == 1)\n        answer(a);\n\n    solve(a);\n}\n\nint main()\n{\n    std::cin.tie(nullptr)->sync_with_stdio(false);\n\n    size_t t;\n    std::cin >> t;\n\n    if (t > 100) {\n        mode = 2;\n        for (size_t i = 0; i < t; ++i) {\n            if (i == 160) {\n                mode = 1;\n            }\n            test_case();\n            mode = 2;\n        }\n    }\n\n    while (t-- > 0)\n        test_case();\n\n    return 0;\n}\n"
}