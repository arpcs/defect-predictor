{
    "id": 229006520,
    "contestId": 1450,
    "creationTimeSeconds": 1697864191,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1450,
        "index": "D",
        "name": "Rating Compression",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "binary search",
            "data structures",
            "greedy",
            "implementation",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1450,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1607265300
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 358,
    "memoryConsumedBytes": 16384000,
    "source": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<set>\n\n#define pb push_back\n#define ll long long int\nusing namespace std;\nint m[200005][18],n,ara[200001],lo[200005];\nint query(int l,int r)\n{\n    int k=lo[r-l+1];\n    return min(m[l][k],m[r-(1<<k)+1][k]);\n}\nint main()\n{\n    //freopen (\"output.txt\",\"w\",stdout);\n    for(int i=2;i<=2000;i++)lo[i]=(lo[i/2]+1);\n    int t;\n    cin>>t;\n    while(t--)\n    {\n        cin>>n;\n        int ok[n+1];\n        for(int i=1;i<=n;i++)cin>>ara[i],m[i][0]=ara[i],ok[i]=0;\n\n        for(int k=1;k<18;k++)\n            for(int i=01;i+(1<<k)-1<=n;i++)\n            {\n                m[i][k]=min(m[i][k-1],m[i+(1<<(k-1))][k-1]);\n            }\n        set<int>s;\n\n        for(int i=1;i<=n;i++)\n        {\n            if(ara[i]<=n)s.insert(ara[i]);\n            ok[ara[i]]=1;\n        }\n        int mx=0,f=01;\n        for(int i=1;i<=n && f;i++)\n        {\n            if(ok[i])mx=i;\n            else break;\n        }\n        if(s.size()==n)cout<<\"1\";\n        else cout<<\"0\";\n        int lo=1,hi=mx,mid,ans=0;\n        while(lo<=hi)\n        {\n            for(int i=1;i<=n;i++)ok[i]=0;\n            mid=(lo+hi)/2;\n            for(int i=1;i<=mid;i++)\n            {\n                ok[query(i,i+n-mid)]++;\n                //cout<<mid<<\" \"<<i+n-mid<<\" \"<<query(i,i+n-mid)<<\"\\n\";\n            }\n            bool ok1=01;\n            for(int i=1;i<=mid;i++)\n            {\n                if(ok[i]!=1)ok1=0;\n            }\n            if(ok1)lo=mid+1,ans=mid;\n            else hi=mid-1;\n        }\n        vector<int>v;\n        for(int i=1;i<=min(n-1,ans);i++)v.pb(1);\n        for(int i=ans+1;i<n;i++)v.pb(0);\n        reverse(v.begin(),v.end());\n        for(int ch:v)cout<<ch;\n        cout<<\"\\n\";\n    }\n}\n\n\t      \t\t\t\t  \t\t\t\t  \t\t \t\t   \t\t\t"
}