{
    "id": 231907756,
    "contestId": 1450,
    "creationTimeSeconds": 1699433153,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1450,
        "index": "D",
        "name": "Rating Compression",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 1800,
        "tags": [
            "binary search",
            "data structures",
            "greedy",
            "implementation",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1450,
        "members": [
            {
                "handle": "chenyifan37"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1607265300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 25,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 7475200,
    "source": "#include<stdio.h>\r\n#include<iostream>\r\n#include<string.h>\r\n#include<vector>\r\n#include<queue>\r\n#include<map>\r\n#include<math.h>\r\n#include<algorithm>\r\n#include<stdlib.h>\r\n#include<string>\r\n#include<stack>\r\n#include<set>\r\nusing namespace std;\r\n#define pb push_back\r\n#define POP pop_back()\r\n#define DEBUG cout << \"DEBUG\\n\";\r\n#define ll long long\r\n#define db double\r\n#define endl '\\n'\r\n#define fo(i,a,b) for(int i = a;i <= b;i++)\r\nconst int maxn = 3e5+5;\r\nconst int inf = 0x3f3f3f3f;\r\nconst ll inF = 0x3f3f3f3f3f3f3f3f;\r\nconst ll mod = 1e8;\r\nconst db eps = 1e-8;\r\ninline int lowbit(int x){return (x&-x);}\r\ninline ll max(ll a , ll b){return a > b?a:b;}\r\ninline ll min(ll a , ll b){return a > b?b:a;}\r\ninline ll read(){\r\n    ll x = 0, f = 1;\r\n    char ch = getchar();\r\n    while(ch < '0' || ch > '9'){\r\n        if (ch == '-')\r\n            f = -1;\r\n        ch = getchar();\r\n    }\r\n    while(ch >= '0' && ch <= '9'){\r\n        x = (x<<1) + (x<<3) + (ch^48);\r\n        ch = getchar();\r\n    }\r\n\treturn x * f;\r\n}\r\nstruct node{\r\n\tint x , id;\r\n};\r\nnode st[maxn];\r\nint a[maxn] , num[maxn] , l[maxn] , r[maxn] , top;\r\nchar ans[maxn];\r\nint main(){\r\n\tint t , n;cin >> t;\r\n\tnum[0] = inf;\r\n\twhile(t--){\r\n\t\tn = read();\r\n\t\ttop = 0;\r\n\t\tfor(int i = 1;i <= n;i++)l[i] = r[i] = -1 , num[i] = 0;\r\n\t\tfor(int i = 1;i <= n;i++)a[i] = read();\r\n\t\tfor(int i = 1;i <= n;i++){\r\n\t\t\twhile(top != 0 && st[top].x > a[i])r[st[top].id] = i , top--;\r\n\t\t\tst[++top].x = a[i];\r\n\t\t\tst[top].id = i;\r\n\t\t}\r\n\t\twhile(top != 0)r[st[top].id] = n+1 , top--;\r\n\t\ttop = 0;\r\n\t\tfor(int i = n;i >= 1;i--){\r\n\t\t\twhile(top != 0 && st[top].x > a[i])l[st[top].id] = i , top--;\r\n\t\t\tst[++top].x = a[i];\r\n\t\t\tst[top].id = i;\r\n\t\t}\r\n\t\twhile(top != 0)l[st[top].id] = 0 , top--;\r\n\t\tfor(int i = 1;i <= n;i++)num[a[i]] = max(num[a[i]] , r[i]-1-l[i]);\r\n\t\tfor(int i = 1;i <= n;i++)num[i] = min(num[i-1] , num[i]);\r\n\t\tfor(int i = 1;i <= n;i++){\r\n\t\t\tif(num[n-i+1] >= i)ans[i] = '1';\r\n\t\t\telse ans[i] = '0';\r\n\t\t\tprintf(\"%c\",ans[i]);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}\r\n"
}