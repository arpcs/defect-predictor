{
    "id": 220912951,
    "contestId": 903,
    "creationTimeSeconds": 1693265962,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 903,
        "index": "D",
        "name": "Almost Difference",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 903,
        "members": [
            {
                "handle": "Lin_On_Work"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1513091100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 45,
    "timeConsumedMillis": 342,
    "memoryConsumedBytes": 28057600,
    "source": "// LUOGU_RID: 123162677\n#include <bits/stdc++.h> \r\ntypedef __int128 lll;\r\nusing std::cin; using std::cout; using std::pair;\r\n\r\nconst int N = 2e5 + 5;\r\nint n, a[N];\r\nint val[N], cnt, ord[N];\r\nlll ans;\r\n\r\nnamespace Seg {\r\n\t#define mid (l + r >> 1)\r\n\t#define lson o << 1, l, mid\r\n\t#define rson o << 1 | 1, mid + 1, r\r\n\tlll tr1[N << 2], tr2[N << 2];\r\n\t\r\n\tvoid push_up(int o) {\r\n\t\ttr1[o] = tr1[o << 1] + tr1[o << 1 | 1];\r\n\t\ttr2[o] = tr2[o << 1] + tr2[o << 1 | 1];\r\n\t}\r\n\t\r\n\tvoid modify(int o, int l, int r, int L, int R, int v, int t) {\r\n\t\tif (L <= l && r <= R) return tr1[o] += val[v] * t, tr2[o] += t, void();\r\n\t\tif (L <= mid) modify(lson, L, R, v, t);\r\n\t\tif (mid < R)  modify(rson, L, R, v, t);\r\n\t\tpush_up(o); \r\n\t}\r\n\tpair<lll, lll> query(int o, int l, int r, int L, int R) {\r\n\t\tif (L > R) return std::make_pair(0, 0);\r\n\t\tif (L == l && r == R) return std::make_pair(tr1[o], tr2[o]);\r\n\t\tif (R <= mid) return query(lson, L, R);\r\n\t\telse if (mid < L) return query(rson, L, R);\r\n\t\telse {\r\n\t\t\tpair<lll, lll> p1 = query(lson, L, mid), p2 = query(rson, mid + 1, R);\r\n\t\t\treturn std::make_pair(p1.first + p2.first, p1.second + p2.second);\r\n\t\t}\r\n\t}\r\n\t\r\n\t#undef mid\r\n\t#undef lson\r\n\t#undef rson\r\n}\r\n\r\nvoid Print(lll x) {\r\n\tif (!x) return;\r\n\tif (x < 0) cout << '-', x = -x; \r\n\tPrint(x / 10);\r\n\tlll a = x % 10;\r\n\tcout << (int)a;\r\n}\r\nvoid print(lll x) {\r\n\tif (!x) cout << 0;\r\n\telse Print(x);\r\n}\r\n\r\nvoid solve() {\r\n\tcin >> n;\r\n\tfor (int i = 1; i <= n; i++) cin >> a[i], val[i] = a[i];\r\n\t\r\n\tstd::sort(val + 1, val + n + 1);\r\n\tcnt = std::unique(val + 1, val + n + 1) - val - 1;\r\n\tfor (int i = 1; i <= n; i++)\r\n\t\tord[i] = std::lower_bound(val + 1, val + cnt + 1, a[i]) - val;\r\n\t\r\n\tfor (int i = 1; i <= n; i++) Seg::modify(1, 1, cnt, ord[i], ord[i], ord[i], 1);\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tSeg::modify(1, 1, cnt, ord[i], ord[i], ord[i], -1);\r\n\t\tint lb = std::upper_bound(val + 1, val + cnt + 1, a[i] - 2) - val - 1;\r\n\t\tint ub = std::lower_bound(val + 1, val + cnt + 1, a[i] + 2) - val;\r\n\t\tpair<lll, lll> p1 = Seg::query(1, 1, cnt, 1, lb),\r\n\t\t\t\t\t   p2 = Seg::query(1, 1, cnt, ub, cnt);\r\n\t\tans += p2.first + p1.first - (lll)a[i] * (p1.second + p2.second);\r\n\t}\r\n\t\r\n\tprint(ans); cout << '\\n';\r\n}\r\n\r\nint main() {\r\n\tstd::ios::sync_with_stdio(0); cin.tie(0);\r\n\tsolve();\t\r\n\treturn 0;\r\n}"
}