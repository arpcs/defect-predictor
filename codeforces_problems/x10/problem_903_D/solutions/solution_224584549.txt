{
    "id": 224584549,
    "contestId": 903,
    "creationTimeSeconds": 1695375688,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 903,
        "index": "D",
        "name": "Almost Difference",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 903,
        "members": [
            {
                "handle": "dantoper556"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1513091100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 28,
    "timeConsumedMillis": 686,
    "memoryConsumedBytes": 51507200,
    "source": "#include <iostream>\r\n#include <vector>\r\n#include <cmath>\r\n#include <algorithm>\r\n#include <iomanip>\r\n#include <cstdio>\r\n#include <map>\r\n#include <set>\r\n#include <queue>\r\n#include <stack>\r\n#include <random>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\n#include <fstream>\r\n#include <memory.h>\r\n#include <chrono>\r\nusing namespace std;\r\n\r\n#pragma GCC optimize(\"O2,unroll-loops\")\r\n#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\r\n\r\n#define int long long\r\n#define double long double\r\n#define printans(b); cout << (b ? \"YES\":\"NO\") << endl;\r\n#define all(a) a.begin(), a.end()\r\n#define rep(i, a, b) for (auto i = a; i < b; i++)\r\n#define repk(i, a, b, k) for (int i = a; i != b; i += k)\r\n#define forel(el, v) for (auto& el : v)\r\n#define ll (long long)\r\n#define dd (double)\r\n#define endl \"\\n\"\r\n \r\nostream& operator<< (ostream& out, const pair<int, int> v) {\r\n    out << \"| \" << v.first << \" \" << v.second << \" |\";\r\n    return out;\r\n}\r\n \r\ntemplate<typename T>\r\nostream& operator<< (ostream& out, const vector<T> v) {\r\n    forel(el, v) {\r\n        out << el << \" \";\r\n    }\r\n    return out;\r\n}\r\n \r\ntemplate<typename T>\r\nistream& operator>> (istream& in, vector<T>& v) {\r\n    forel(el, v) in >> el;\r\n    return in;\r\n}\r\n\r\n/*\r\n\u0415\u0433\u043e \u0432\u0435\u043b\u0438 \u043d\u0430 \u044d\u0448\u0430\u0444\u043e\u0442\r\n\u041e\u043d, \u0447\u0442\u043e \u0435\u0441\u0442\u044c \u043c\u043e\u0447\u0438, \u0437\u0430\u043e\u0440\u0430\u043b\r\n\u0414\u0430 \u043f\u043e\u043c\u043e\u0433\u0438\u0442\u0435 \u043c\u043d\u0435, \u043d\u0430\u0440\u043e\u0434!\r\n\u0412\u0435\u0434\u044c \u044f, \u043a\u043b\u044f\u043d\u0443\u0441\u044c, \u043d\u0435 \u0443\u0431\u0438\u0432\u0430\u043b!\r\n\r\n\u042d\u0439, \u0432\u044b! \u042f \u0436\u0435 \u0445\u043e\u0442\u0435\u043b \u0434\u043e\u0431\u0440\u0430!\r\n\u042d\u0439, \u0432\u044b! \u0417\u0430 \u0447\u0442\u043e \u043c\u0435\u043d\u044f?\r\n\u0421\u0442\u043e\u0439\u0442\u0435! \u041c\u043e\u0436\u0435\u0442, \u043d\u0435 \u043d\u0430\u0434\u043e, \u0430?\r\n\u0421\u0442\u043e\u0439\u0442\u0435! \u041d\u0435\u0432\u0438\u043d\u0435\u043d \u044f!\r\n\r\n\u041f\u0430\u043b\u0430\u0447 \u0437\u0430\u0442\u0430\u0447\u0438\u0432\u0430\u043b \u0442\u043e\u043f\u043e\u0440\r\n\u041d\u0435\u0441\u0447\u0430\u0441\u0442\u043d\u044b\u0439 \u0441 \u0433\u043e\u0440\u044f \u0437\u0430\u0440\u044b\u0434\u0430\u043b\r\n\u0417\u0430 \u0447\u0442\u043e \u0436\u0435 \u0442\u044b \u043c\u0435\u043d\u044f, \u0437\u0430 \u0447\u0442\u043e?\r\n\u0412\u0435\u0434\u044c \u044f, \u043a\u043b\u044f\u043d\u0443\u0441\u044c, \u043d\u0435 \u0443\u0431\u0438\u0432\u0430\u043b!\r\n\r\n\u042d\u0439, \u0432\u044b! \u042f \u0436\u0435 \u0445\u043e\u0442\u0435\u043b \u0434\u043e\u0431\u0440\u0430!\r\n\u042d\u0439, \u0432\u044b! \u0417\u0430 \u0447\u0442\u043e \u043c\u0435\u043d\u044f?\r\n\u0421\u0442\u043e\u0439\u0442\u0435! \u041c\u043e\u0436\u0435\u0442, \u043d\u0435 \u043d\u0430\u0434\u043e, \u0430?\r\n\u0421\u0442\u043e\u0439\u0442\u0435! \u041d\u0435\u0432\u0438\u043d\u0435\u043d \u044f!\r\n\r\n\u0418 \u043e\u0442\u0432\u0435\u0447\u0430\u043b \u0435\u043c\u0443 \u043f\u0430\u043b\u0430\u0447\r\n\"\u041c\u043d\u0435 \u0447\u0435\u0441\u0442\u043d\u043e, \u043f\u0430\u0440\u0435\u043d\u044c, \u0436\u0430\u043b\u044c \u0442\u0435\u0431\u044f\r\n\u042f \u0437\u043d\u0430\u044e - \u0442\u044b \u043d\u0435 \u0443\u0431\u0438\u0432\u0430\u043b\r\n\u0423\u0431\u0438\u0439\u0446\u0430 \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u044f!\"\r\n\r\n\u042d\u0439, \u0432\u044b! \u042f \u0436\u0435 \u0445\u043e\u0442\u0435\u043b \u0434\u043e\u0431\u0440\u0430!\r\n\u042d\u0439, \u0432\u044b! \u0417\u0430 \u0447\u0442\u043e \u043c\u0435\u043d\u044f?\r\n\u0421\u0442\u043e\u0439\u0442\u0435! \u041c\u043e\u0436\u0435\u0442, \u043d\u0435 \u043d\u0430\u0434\u043e, \u0430?\r\n\u0421\u0442\u043e\u0439\u0442\u0435! \u041d\u0435\u0432\u0438\u043d\u0435\u043d \u044f!\r\n\u042d\u0439, \u0432\u044b! \u042f \u0436\u0435 \u0445\u043e\u0442\u0435\u043b \u0434\u043e\u0431\u0440\u0430!\r\n\u042d\u0439, \u0432\u044b! \u0417\u0430 \u0447\u0442\u043e \u043c\u0435\u043d\u044f?\r\n\u0421\u0442\u043e\u0439\u0442\u0435! \u041c\u043e\u0436\u0435\u0442, \u043d\u0435 \u043d\u0430\u0434\u043e, \u0430?\r\n\u0421\u0442\u043e\u0439\u0442\u0435! \u041d\u0435\u0432\u0438\u043d\u0435\u043d \u044f!\r\n*/\r\n\r\nconstexpr long long inf = 1e9; \r\nconstexpr int mod = 1e9 + 9;\r\nconstexpr double eps = 1e-5;\r\nconstexpr int ph = 31;\r\nconstexpr int T = 25;\r\nconstexpr int N = 8e5 + 65;\r\nconstexpr int A = 3000;\r\n\r\nint trps[N], trpc[N], trss[N], trsc[N];\r\n\r\nvoid upd_p(int* tr, int p, int x) {\r\n    for (int i = p; i < N; i += (i & -i)) {\r\n        tr[i] += x;\r\n    }\r\n}\r\n\r\nvoid upd_s(int* tr, int p, int x) {\r\n    for (int i = p; i > 0; i -= (i & -i)) {\r\n        tr[i] += x;\r\n    }\r\n}\r\n\r\nint get_p(int* tr, int p) {\r\n    int ans = 0;\r\n    for (int i = p; i > 0; i -= (i & -i)) {\r\n        ans += tr[i];\r\n    }\r\n    return ans;\r\n}\r\n\r\nint get_s(int* tr, int p) {\r\n    int ans = 0;\r\n    for (int i = p; i < N; i += (i & -i)) {\r\n        ans += tr[i];\r\n    }\r\n    return ans;\r\n}\r\n\r\nvoid solve() {\r\n    memset(trps, 0, sizeof trps);\r\n    memset(trpc, 0, sizeof trpc);\r\n    memset(trss, 0, sizeof trss);\r\n    memset(trsc, 0, sizeof trsc);\r\n\r\n    int n;\r\n    cin >> n;\r\n    vector<int> a(n);\r\n    cin >> a;\r\n    map<int, int> zip;\r\n    forel(el, a) {\r\n        zip[el - 1] = -1;\r\n        zip[el] = -1;\r\n        zip[el + 1] = -1;\r\n    }\r\n    int c = 1;\r\n    forel(el, zip) el.second = c++;\r\n    int ans = 0;\r\n    rep(i, 0, n) {\r\n        ans += a[i] * get_p(trpc, zip[a[i]] - 2) - get_p(trps, zip[a[i]] - 2);\r\n        ans += a[i] * get_s(trsc, zip[a[i]] + 2) - get_s(trss, zip[a[i]] + 2);\r\n        \r\n        upd_p(trpc, zip[a[i]], 1);\r\n        upd_p(trps, zip[a[i]], a[i]);\r\n        upd_s(trsc, zip[a[i]], 1);\r\n        upd_s(trss, zip[a[i]], a[i]);\r\n    }\r\n    cout << ans << endl;\r\n}\r\n\r\nsigned main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n\r\n    int tests = 1;\r\n\r\n#ifdef OXXXYMIRON_TYPE_CODE\r\n    auto f1 = freopen(\"input.txt\", \"r\", stdin);\r\n    auto f2 = freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n    // cin >> tests;\r\n\r\n    while (tests --> 0) solve();\r\n}"
}