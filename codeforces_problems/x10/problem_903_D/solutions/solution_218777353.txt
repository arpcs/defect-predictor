{
    "id": 218777353,
    "contestId": 903,
    "creationTimeSeconds": 1692007222,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 903,
        "index": "D",
        "name": "Almost Difference",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "data structures",
            "math"
        ]
    },
    "author": {
        "contestId": 903,
        "members": [
            {
                "handle": "MOHlT"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1513091100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 28,
    "timeConsumedMillis": 186,
    "memoryConsumedBytes": 9830400,
    "source": "#include <bits/stdc++.h>\r\n#include <chrono>\r\ntypedef long long ll;\r\n#define nl \"\\n\"\r\n#define sz(x) (int)x.size()\r\n#define all(x) (x).begin(), (x).end()\r\n#define MOD (ll(1e9+7))\r\n\r\n\r\nusing namespace std;\r\n \r\nvoid oj() { \r\n#ifndef ONLINE_JUDGE\r\n    freopen(\"input.txt\",\"r\",stdin);\r\n    freopen(\"output.txt\",\"w\",stdout);\r\n#endif\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n}\r\n\r\nll mod_exp(ll a, ll b, ll m) {\r\n    ll ans = 1;\r\n    while(b) {\r\n        if (b & 1)\r\n            ans *= a;\r\n        a *= a;\r\n        b >>= 1;\r\n        a %= m;\r\n        ans %= m;\r\n    }\r\n    return ans;\r\n}\r\nvoid sieve(vector<bool>& is_prime) {\r\n    int n = sz(is_prime);\r\n    is_prime[0] = is_prime[1] = false;\r\n    for (int i = 4; i<=n; i+= 2)\r\n        is_prime[i] = 0;\r\n\r\n    for (int i = 3; i*i <=n; ++i) {\r\n        if (is_prime[i] == 0) continue;\r\n        int a = 2*i;\r\n        for (int j = i*i; j<=n; j+= a)\r\n            is_prime[j] = 0;\r\n        ++i;\r\n    }\r\n\r\n\r\n}\r\nint gcd (int a, int b) {\r\n    return b ? gcd (b, a % b) : a;\r\n}\r\nvoid dispector(vector<int>& v) {\r\n    for (auto &i: v)\r\n        cout << i << \" \";\r\n    cout << nl;\r\n}\r\nvoid dispector(vector<ll>& v) {\r\n    for (auto &i: v)\r\n        cout << i << \" \";\r\n    cout << nl;\r\n}\r\nvoid twod(vector<vector<int>>& v) {\r\n    for (auto &i: v) {\r\n        for (auto &j: i)\r\n            cout << j << \" \";\r\n    }\r\n    cout << nl;\r\n}\r\n\r\n\r\nvoid solve(int testno) {\r\n    ll n;\r\n    cin >> n;\r\n\r\n    vector<ll> v(n);\r\n    for (auto &i: v)\r\n        cin >> i;\r\n\r\n    ll ans = 0, suff = 0;\r\n    map<ll, ll> mp;\r\n    set<ll> s;\r\n    for (ll i = n-1; i>=0; --i) {\r\n        ll a = (n-(i+1))*v[i];\r\n        ans += a;\r\n        ans -= suff;\r\n        if (mp.find(v[i]-1) != mp.end())\r\n            ans -= mp[v[i]-1];\r\n        if (mp.find(v[i]+1) != mp.end())\r\n            ans += mp[v[i]+1];\r\n        mp[v[i]]++;\r\n        suff += v[i];\r\n        if (a < 0) {\r\n            cout << n-(i+1) << \" \" << v[i] << nl;\r\n        }\r\n    }\r\n    cout << ans*-1 << nl;\r\n\r\n\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    auto begin = std::chrono::high_resolution_clock::now();\r\n    oj();\r\n    int t=1, n;\r\n    // cin >> t;\r\n    n = t;\r\n \r\n    while (t--) {\r\n        #ifndef ONLINE_JUDGE\r\n            cout << \"Case #\" <<n-t << \":\\n\";\r\n        #endif\r\n        solve(n-t);\r\n    }\r\n    auto end = std::chrono::high_resolution_clock::now();\r\n    auto elapsed = std::chrono::duration_cast<std::chrono::nanoseconds>(end - begin);\r\n    cerr << \"Time measured: \" << elapsed.count() * 1e-6 << \"ms\\n\"; \r\n    return 0;\r\n}"
}