{
    "id": 231618262,
    "contestId": 1183,
    "creationTimeSeconds": 1699288602,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1183,
        "index": "A",
        "name": "Nearest Interesting Number",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 1183,
        "members": [
            {
                "handle": "criticalcoding"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1561559700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 28,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include \"bits/stdc++.h\"\nusing namespace std;\n \n#define ll long long\n#define ld long double\n#define ar array\n \n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\n \ntemplate <typename T> using oset = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n \n#define vt vector\n#define pb push_back\n#define all(c) (c).begin(), (c).end()\n#define alla(arr) arr, arr+ sizeof((arr))/sizeof(arr[0])\n#define sz(x) (int)(x).size()\n \n#define F_OR(i, a, b, s) for (int i=(a); (s)>0?i<(b):i>(b); i+=(s))\n#define F_OR1(e) F_OR(i, 0, e, 1)\n#define F_OR2(i, e) F_OR(i, 0, e, 1)\n#define F_OR3(i, b, e) F_OR(i, b, e, 1)\n#define F_OR4(i, b, e, s) F_OR(i, b, e, s)\n#define GET5(a, b, c, d, e, ...) e\n#define F_ORC(...) GET5(__VA_ARGS__, F_OR4, F_OR3, F_OR2, F_OR1)\n#define FOR(...) F_ORC(__VA_ARGS__)(__VA_ARGS__)\n#define EACH(x, a) for (auto& x: a)\n \ntemplate<class T> bool umin(T& a, const T& b) {\n    return b<a?a=b, 1:0;\n}\ntemplate<class T> bool umax(T& a, const T& b) { \n    return a<b?a=b, 1:0;\n} \n \nll FIRSTTRUE(function<bool(ll)> f, ll lb, ll rb) {\n    while(lb<rb) {\n        ll mb=(lb+rb)/2;\n        f(mb)?rb=mb:lb=mb+1; \n    } \n    return lb;\n}\nll LASTTRUE(function<bool(ll)> f, ll lb, ll rb) {\n    while(lb<rb) {\n        ll mb=(lb+rb+1)/2;\n        f(mb)?lb=mb:rb=mb-1; \n    } \n    return lb;\n}\n \ntemplate<class A> void read(vt<A>& v);\ntemplate<class A, size_t S> void read(ar<A, S>& a);\ntemplate<class T> void read(T& x) {\n    cin >> x;\n}\nvoid read(double& d) {\n    string t;\n    read(t);\n    d=stod(t);\n}\nvoid read(long double& d) {\n    string t;\n    read(t);\n    d=stold(t);\n}\ntemplate<class H, class... T> void read(H& h, T&... t) {\n    read(h);\n    read(t...);\n}\ntemplate<class A> void read(vt<A>& x) {\n    EACH(a, x)\n        read(a);\n}\ntemplate<class A, size_t S> void read(array<A, S>& x) {\n    EACH(a, x)\n        read(a);\n}\n \nstring to_string(char c) {\n    return string(1, c);\n}\nstring to_string(bool b) {\n    return b?\"true\":\"false\";\n}\nstring to_string(const char* s) {\n    return string(s);\n}\nstring to_string(string s) {\n    return s;\n}\nstring to_string(vt<bool> v) {\n    string res;\n    FOR(sz(v))\n        res+=char('0'+v[i]);\n    return res;\n}\n \ntemplate<size_t S> string to_string(bitset<S> b) {\n  string res;\n    FOR(S)\n        res+=char('0'+b[i]);\n    return res;\n}\ntemplate<class T> string to_string(T v) {\n    bool f=1;\n    string res;\n    EACH(x, v) {\n        if(!f)\n            res+=' ';\n        f=0;\n        res+=to_string(x);\n    }\n    return res;\n}\n \ntemplate<class A> void write(A x) {\n    cout << to_string(x);\n}\ntemplate<class H, class... T> void write(const H& h, const T&... t) { \n    write(h);\n    write(t...);\n}\nvoid print() {\n    write(\"\\n\");\n}\ntemplate<class H, class... T> void print(const H& h, const T&... t) { \n    write(h);\n    if(sizeof...(t))\n        write(' ');\n    print(t...);\n}\n \nvoid DBG() {\n    cerr << \"]\" << endl;\n}\ntemplate<class H, class... T> void DBG(H h, T... t) {\n    cerr << to_string(h);\n    if(sizeof...(t))\n        cerr << \", \";\n    DBG(t...);\n}\n#ifdef _DEBUG\n#define dbg(...) cerr << \"LINE(\" << __LINE__ << \") -> [\" << #__VA_ARGS__ << \"]: [\", DBG(__VA_ARGS__)\n#else\n#define dbg(...) 0\n#endif\n \ntemplate<class T> void offset(ll o, T& x) {\n    x+=o;\n}\ntemplate<class T> void offset(ll o, vt<T>& x) {\n    EACH(a, x)\n        offset(o, a);\n}\ntemplate<class T, size_t S> void offset(ll o, ar<T, S>& x) {\n    EACH(a, x)\n        offset(o, a);\n}\n \nmt19937 mt_rng(chrono::steady_clock::now().time_since_epoch().count());\nll randint(ll a, ll b) {\n    return uniform_int_distribution<ll>(a, b)(mt_rng);\n}\n \ntemplate<class T, class U> void vti(vt<T> &v, U x, size_t n) {\n    v=vt<T>(n, x);\n}\ntemplate<class T, class U> void vti(vt<T> &v, U x, size_t n, size_t m...) {\n    v=vt<T>(n);\n    EACH(a, v)\n        vti(a, x, m);\n}\n\ninline string IntToString(ll a)\n{\n\tchar x[100];\n\tsprintf(x, \"%lld\", a);\n\tstring s = x;\n\treturn s;\n}\n\ninline ll StringToInt(string a)\n{\n\tchar x[100];\n\tll res;\n\tstrcpy(x, a.c_str());\n\tsscanf(x, \"%lld\", &res);\n\treturn res;\n}\n\ninline string uppercase(string s)\n{\n\tint n = sz(s);\n\tFOR(n)\n\tif (s[i] >= 'a' && s[i] <= 'z')\n\t\ts[i] = s[i] - 'a' + 'A';\n\treturn s;\n}\n\ninline string lowercase(string s)\n{\n\tint n = sz(s);\n    FOR(n)\n\tif (s[i] >= 'A' && s[i] <= 'Z')\n\t\ts[i] = s[i] - 'A' + 'a';\n\treturn s;\n}\n\n \nconst int d4i[4]={-1, 0, 1, 0}, d4j[4]={0, 1, 0, -1};\nconst int d8i[8]={-1, -1, 0, 1, 1, 1, 0, -1}, d8j[8]={0, 1, 1, 1, 0, -1, -1, -1};\n \nint sum_of_digits(int n){\n    int sum=0;\n    while(n){\n        sum+=n%10;\n        n/=10;\n    }\n    return sum;\n}\n\nvoid solve() {\n    int n,sum=0;\n    cin >> n;\n    sum=sum_of_digits(n);\n    while(sum%4){\n        n++;\n        sum=sum_of_digits(n);\n    }\n    cout << n << endl;\n}\n \nint main() {\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n \n    int t=1;\n//    read(t);\n    FOR(t) {\n        //write(\"Case #\", i+1, \": \");\n        solve();\n    }\n}\n\n"
}