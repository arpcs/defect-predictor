{
    "id": 228581432,
    "contestId": 1776,
    "creationTimeSeconds": 1697560961,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1776,
        "index": "A",
        "name": "Walking Boy",
        "type": "PROGRAMMING",
        "rating": 800,
        "tags": [
            "greedy"
        ]
    },
    "author": {
        "contestId": 1776,
        "members": [
            {
                "handle": "1936557"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1676804700
    },
    "programmingLanguage": "Haskell",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "import Control.Monad\r\nimport Data.Char\r\nimport Data.Bits\r\nimport Data.List\r\nimport Data.Function\r\nimport Data.Ord\r\nimport Data.Maybe\r\nimport qualified Data.Set          as Set\r\nimport qualified Data.Map.Strict   as Map\r\nimport qualified Data.Array        as Array\r\nimport GHC.Real (reduce, numerator, denominator)\r\n\r\n--------------------------------------------------------------------------------\r\n-- (\u00ac\u203f\u00ac)\r\n-- (\u00ac\u203f\u00ac)\r\nmain = do\r\n  t <- readLn :: IO Int \r\n  replicateM_ t $ do \r\n    n <- readLn :: IO Int\r\n    as <- map read . words <$> getLine :: IO [Int]\r\n    let bs = 0 : as ++ [1440]\r\n    let r = myfun bs \r\n    if r >= 2 then do putStrLn \"YES\" else do putStrLn \"NO\"\r\n    return ()\r\n\r\nmyfun [_] = 0\r\nmyfun (x : y : ys) = z + myfun (y : ys)\r\n  where \r\n    z = (y - x) `div` 120"
}