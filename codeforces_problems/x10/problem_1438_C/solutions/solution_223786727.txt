{
    "id": 223786727,
    "contestId": 1438,
    "creationTimeSeconds": 1695003409,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1438,
        "index": "C",
        "name": "Engineer Artem",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2000,
        "tags": [
            "2-sat",
            "chinese remainder theorem",
            "constructive algorithms",
            "fft",
            "flows"
        ]
    },
    "author": {
        "contestId": 1438,
        "members": [
            {
                "handle": "npoofSonSon"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1605278100
    },
    "programmingLanguage": "PyPy 3-64",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 77,
    "memoryConsumedBytes": 2867200,
    "source": "import sys\nimport math\nimport heapq\nimport collections\nimport numpy as np\n# from numpy.fft import fft, ifft\ninput = sys.stdin.readline # Don't forget to rstrip()\n\ntestcases = int(input())\ndef solution():\n    n,m = map(int, input().split())\n    a = np.array([], dtype=int)\n    for _ in range(n):\n        a = np.append(a, list(map(int, input().split())))\n    a = a.reshape(n,m)\n    for i in range(n):\n        for j in range(m):\n            if (i+j) % 2 != a[i][j] % 2: \n                a[i][j] += 1\n    for row in a:\n        print(*row)\n\n\nfor i in range(testcases):\n    solution()"
}