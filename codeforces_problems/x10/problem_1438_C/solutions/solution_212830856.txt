{
    "id": 212830856,
    "contestId": 1438,
    "creationTimeSeconds": 1688821734,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1438,
        "index": "C",
        "name": "Engineer Artem",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2000,
        "tags": [
            "2-sat",
            "chinese remainder theorem",
            "constructive algorithms",
            "fft",
            "flows"
        ]
    },
    "author": {
        "contestId": 1438,
        "members": [
            {
                "handle": "Liam_Evander"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1605278100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 11,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define endl '\\n'\r\n#define all(x) x.begin(),x.end()\r\n#define ltr(i, a, b) for (int i = a; i <= b; i++)\r\n#define rtl(i, a, b) for (int i = a; i >= b; i--)\r\n#define yn(x) cout<<((x)?\"Yes\":\"No\")<<endl\r\nusing namespace std;\r\nusing LL = long long;\r\nusing PLL = pair<LL, LL>;\r\nusing PII = pair<int, int>;\r\nconst int inf = 0x3f3f3f3f, mod = 1e9 + 7, N = 6e6 + 10;\r\n\r\n// The best practice method is any reasonable method that\r\n//      doesn't let you deceive yourself.\r\n\r\n\r\nvoid solve() {\r\n    int t, n, k, x;\r\n    cin >> k >> n;\r\n    \r\n    ltr (i, 0, k - 1) {\r\n        ltr (j, 1, n) {\r\n            cin >> x;\r\n            cout << x + (x + i + j) % 2 << \" \";\r\n        }\r\n        cout << endl;\r\n    }\r\n}\r\n\r\nint main() {\r\n    cin.tie(nullptr), cout.tie(nullptr),\r\n        ios::sync_with_stdio(false);\r\n\r\n    int t = 1;\r\n    cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n\r\n    return 0;\r\n}"
}