{
    "id": 236331894,
    "contestId": 1903,
    "creationTimeSeconds": 1702034915,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1903,
        "index": "D1",
        "name": "Maximum And Queries (easy version)",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "binary search",
            "bitmasks",
            "brute force",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1903,
        "members": [
            {
                "handle": "iliyian"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1701362100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 70,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 1638400,
    "source": "#include <bits/stdc++.h>\r\n#define int long long\r\n#define N 100005\r\nusing namespace std;\r\n\r\nint a[N], b[N];\r\n\r\nsigned main() {\r\n  ios::sync_with_stdio(false); cin.tie(0);\r\n//   freopen(\"D.in\", \"r\", stdin);\r\n  int n, q;\r\n  cin >> n >> q;\r\n  for (int i = 0; i < n; i++)\r\n    cin >> b[i];\r\n  while (q--) {\r\n    copy(b, b + n, a);\r\n    int ma, ans = 0;\r\n    cin >> ma;\r\n    // k +- 1 does'nt matter\r\n    for (int k = 60; k >= 0; k--) {\r\n      int sum = 0;\r\n      for (int i = 0; i < n; i++) {\r\n        if (a[i] >> k & 1 ^ 1) {\r\n          // no more comparing for early bits\r\n          // we didn't add\r\n          // greedy\r\n          sum += (1ll << k) - a[i];\r\n          if (sum > ma) break;\r\n        }\r\n      }\r\n      if (sum <= ma) {\r\n        ma -= sum;\r\n        for (int i = 0; i < n; i++)\r\n          if (a[i] >> k & 1 ^ 1)\r\n            // absolutely, each number have single transform\r\n            // greedy\r\n            a[i] = 0;\r\n        ans ^= 1ll << k;\r\n      }\r\n      for (int i = 0; i < n; i++)\r\n        if (a[i] >> k & 1)\r\n          // we cannot add\r\n          // greedy\r\n          a[i] ^= 1ll << k;\r\n    }\r\n    cout << ans << '\\n';\r\n  }\r\n}"
}