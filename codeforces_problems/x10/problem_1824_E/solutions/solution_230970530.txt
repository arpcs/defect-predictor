{
    "id": 230970530,
    "contestId": 1824,
    "creationTimeSeconds": 1698928167,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1824,
        "index": "E",
        "name": "LuoTianyi and Cartridge",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3500,
        "tags": [
            "data structures",
            "trees"
        ]
    },
    "author": {
        "contestId": 1824,
        "members": [
            {
                "handle": "alexzean2011"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1683547500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 7987200,
    "source": "#include<iostream>\r\n#include<cstdio>\r\n#include<vector>\r\n#include<set>\r\n#include<algorithm>\r\n#include<map>\r\nusing namespace std;\r\nint n,a[100005];\r\nvector<int> e[100005];\r\nset<int> s[100005],stmp;\r\nint ans=0,sid[100005],stp=0;\r\nbool cmp(int x,int y)\r\n{\r\n\treturn (int)s[sid[x]].size()>(int)s[sid[y]].size();\r\n}\r\nvoid set_xor(int x,int y)\r\n{\r\n\tstmp.clear();\r\n\tset<int>::iterator it=s[x].begin();\r\n\twhile(it!=s[x].end())\r\n\tstmp.insert(y^(*(it++)));\r\n\ts[x]=stmp;\r\n\treturn ;\r\n}\r\nvoid dfs(int u,int f)\r\n{\r\n\tvector<int> v;\r\n\tfor(int i=0;i<(int)e[u].size();i++)\r\n\tif(e[u][i]!=f)\r\n\t{\r\n\t\tdfs(e[u][i],u);\r\n\t\tv.push_back(e[u][i]);\r\n\t}\r\n\tif((int)v.size()==0)\r\n\t{\r\n\t\tsid[u]=(++stp);\r\n\t\ts[sid[u]].insert(0);\r\n\t\treturn ;\r\n\t}\r\n\tsort(v.begin(),v.end(),cmp);\r\n\tint hv_tg=a[v[0]];\r\n\ta[v[0]]=0;\r\n\ta[u]^=hv_tg;\r\n\tbool flg=false;\r\n\tset<int> setchk;\r\n\tfor(int i=1;i<(int)v.size();i++)\r\n\t{\r\n\t\tint x=v[i];\r\n\t\tset_xor(sid[x],a[x]^hv_tg);\r\n\t\tset<int>::iterator it=s[sid[x]].begin();\r\n\t\twhile(it!=s[sid[x]].end())\r\n\t\t{\r\n\t\t\tint val=(*it); it++;\r\n\t\t\tif(s[sid[v[0]]].find(val)!=s[sid[v[0]]].end())\r\n\t\t\tflg=true;\r\n\t\t\tif(setchk.find(val)!=setchk.end())\r\n\t\t\tflg=true;\r\n\t\t\tsetchk.insert(val);\r\n\t\t}\r\n\t}\r\n\tif(flg==false)\r\n\t{\r\n\t\t//cout<<\"Node \"<<u<<\" \"<<(int)v.size()-1<<endl;\r\n\t\tans+=(int)v.size()-1;\r\n\t\tfor(int i=1;i<(int)v.size();i++)\r\n\t\t{\r\n\t\t\tint x=v[i];\r\n\t\t\tset<int>::iterator it=s[sid[x]].begin();\r\n\t\t\twhile(it!=s[sid[x]].end())\r\n\t\t\ts[sid[v[0]]].insert(*(it++));\r\n\t\t}\r\n\t\tsid[u]=sid[v[0]];\r\n\t\treturn ;\r\n\t}\r\n\tmap<int,int> h;\r\n\tfor(int i=0;i<(int)v.size();i++)\r\n\t{\r\n\t\tint x=v[i];\r\n\t\tset<int>::iterator it=s[sid[x]].begin();\r\n\t\twhile(it!=s[sid[x]].end())\r\n\t\th[*(it++)]++;\r\n\t}\r\n\tsid[u]=(++stp);\r\n\tint mx_app=0;\r\n\tmap<int,int>::iterator it=h.begin();\r\n\twhile(it!=h.end())\r\n\t{\r\n\t\tpair<int,int> p=(*it);\r\n\t\tif(p.second>mx_app)\r\n\t\t{\r\n\t\t\tmx_app=p.second;\r\n\t\t\ts[sid[u]].clear();\r\n\t\t}\r\n\t\tif(p.second==mx_app)\r\n\t\ts[sid[u]].insert(p.first);\r\n\t\tit++;\r\n\t}\r\n\tans+=(int)v.size()-mx_app;\r\n\treturn ;\r\n}\r\nint main()\r\n{\r\n\tscanf(\"%d\",&n);\r\n\tfor(int i=1;i<=n;i++)\r\n\tscanf(\"%d\",&a[i]);\r\n\tfor(int i=1;i<n;i++)\r\n\t{\r\n\t\tint u,v;\r\n\t\tscanf(\"%d%d\",&u,&v);\r\n\t\te[u].push_back(v);\r\n\t\te[v].push_back(u);\r\n\t}\r\n\tdfs(1,0);\r\n\tset_xor(sid[1],a[1]);\r\n\tif(s[sid[1]].find(0)==s[sid[1]].end())\r\n\tans++;\r\n\tprintf(\"%d\\n\",ans);\r\n\treturn 0;\r\n}"
}