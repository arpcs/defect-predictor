{
    "id": 226898095,
    "contestId": 1095,
    "creationTimeSeconds": 1696606834,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1095,
        "index": "C",
        "name": "Powers Of Two",
        "type": "PROGRAMMING",
        "rating": 1400,
        "tags": [
            "bitmasks",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1095,
        "members": [
            {
                "handle": "Atom__"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1545921300
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "        //.....................................Bismillahir Rahmanir Rahim....//////////\r\n//........................................In-Sha-Allah....,,,,,,///////////////\r\n\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define ll long long int\r\n#define fibo int f (int n){ if(n==0) return 0 ; if(n==1) return 1 return f(n-1)+f(n-2)}\r\n#define fact int f (int n){if(n==0) return 1;return n*f(n-1)}\r\n#define strlcm longestcommonsubstr(string a,string b,int n,int m)\r\n//#define sort if(is_sorted(ar,ar+n))\r\n//#define pair (make_pair(ar[i],i))\r\n#define gcd if(__gcd(a,b))\r\n#define all(x) sort(x.begin(),x.end())\r\n#define pb push_back\r\n//vector<int>v;\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\n  \r\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\r\n\r\n\r\nint main()\r\n{\r\n   int n,k;\r\n   cin>>n>>k;\r\n   vector<int>v;\r\n\r\n   if(k>n) cout<<\"NO\"<<endl;\r\n   else\r\n   {\r\n      priority_queue<int>pq;  \r\n      int m=n,ans=0,cnt=0;\r\n      while(n!=1)\r\n      {\r\n        n/=2;\r\n        ans++;\r\n      }\r\n      //ll x=pow(2,ans);\r\n      ll sum=1;\r\n      for(int i=0;i<ans;i++) sum*=2;\r\n      while(m!=1)\r\n      {\r\n        pq.push(sum);\r\n        m-=sum;\r\n        sum/=2;\r\n        cnt++;\r\n        if(m==0) break;\r\n        else if(m==1)\r\n        {\r\n            pq.push(1);\r\n            break;\r\n        }\r\n        else if(sum>m)\r\n        {\r\n            while(sum<=m)\r\n            {\r\n                sum/=2;\r\n            }\r\n            pq.push(sum);\r\n            m-=sum;\r\n            sum/=2;\r\n\r\n        }\r\n        else \r\n        {\r\n            pq.push(sum);\r\n            m-=sum;\r\n            sum/=2;\r\n        }\r\n      } \r\n      //cout<<v.size()<<endl;\r\n      if(pq.size()==k) \r\n        {\r\n            cout<<\"YES\"<<endl;\r\n            while(!pq.empty())\r\n            {\r\n                int x=pq.top();\r\n                pq.pop();\r\n                cout<<x<<\" \";\r\n\r\n            }\r\n            cout<<endl;\r\n        }\r\n      else if(k>=pq.size())\r\n      {\r\n           while(pq.size()!=k)\r\n           {\r\n               int x=pq.top();\r\n               pq.pop();\r\n               x/=2;\r\n               pq.push(x);\r\n               pq.push(x); \r\n           } \r\n           cout<<\"YES\"<<endl;\r\n           while(!pq.empty())\r\n           {\r\n               int x=pq.top();\r\n               pq.pop();\r\n               cout<<x<<\" \"; \r\n           }\r\n           cout<<endl;\r\n      } \r\n      else cout<<\"NO\"<<endl;  \r\n   }\r\n}\r\n   \r\n//;;;;;;;;;;;;;;;;...........//////..Alhamdulillah...///::::::::::::::::\r\n",
    "suggested_categories": [
        "algorithm",
        "data structures",
        "mathematics",
        "code optimization",
        "programming contest",
        "c++",
        "dynamic programming",
        "binary tree",
        "priority queue",
        "bit manipulation",
        "recursion",
        "conditional statements",
        "function definition",
        "input/output handling",
        "error handling",
        "looping",
        "standard template library (stl)",
        "competitive programming",
        "complexity analysis",
        "software engineering"
    ]
}