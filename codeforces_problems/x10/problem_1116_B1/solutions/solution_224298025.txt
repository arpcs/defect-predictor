{
    "id": 224298025,
    "contestId": 1116,
    "creationTimeSeconds": 1695300898,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1116,
        "index": "B1",
        "name": "Distinguish three-qubit states",
        "type": "PROGRAMMING",
        "tags": []
    },
    "author": {
        "contestId": 1116,
        "members": [
            {
                "handle": "Rogi52"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1551459600
    },
    "programmingLanguage": "Q#",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 5017600,
    "source": "namespace Solution {\r\n    open Microsoft.Quantum.Primitive;\r\n    open Microsoft.Quantum.Canon;\r\n    open Microsoft.Quantum.Extensions.Math;\r\n    open Microsoft.Quantum.Extensions.Convert;\r\n\r\n    operation Solve (qs : Qubit[]) : Int {\r\n        // W_3\r\n        Ry(2.0 * ArcCos(Sqrt(2.0 / 3.0)), qs[0]);\r\n        (ControlledOnInt(0, H)) ([qs[0]], qs[1]);\r\n        (ControlledOnInt(0, X)) (qs[0 .. 1], qs[2]);\r\n\r\n        // w\r\n        R1(2.0 * PI() / 3.0, qs[1]);\r\n        R1(4.0 * PI() / 3.0, qs[2]);\r\n\r\n        for(i in 0 .. 2) {\r\n            if(M(qs[i]) == One) {\r\n                return 1;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n}\r\n"
}