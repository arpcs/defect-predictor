{
    "id": 83249506,
    "contestId": 1116,
    "creationTimeSeconds": 1591729643,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1116,
        "index": "B1",
        "name": "Distinguish three-qubit states",
        "type": "PROGRAMMING",
        "tags": []
    },
    "author": {
        "contestId": 1116,
        "members": [
            {
                "handle": "kamer"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1551459600
    },
    "programmingLanguage": "Q#",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "namespace Solution {\r\n    open Microsoft.Quantum.Primitive;\r\n    open Microsoft.Quantum.Canon;\r\n    open Microsoft.Quantum.Math;\r\n\r\n    operation CustomRz(q : Qubit) : Unit\r\n        is Adj + Ctl {\r\n        Rz(2.0 * PI() / 3.0, q);\r\n        H(q);\r\n    }\r\n\r\n\r\n    operation B1 (qs : Qubit[]) : Int {\r\n        CNOT(qs[0], qs[1]);\r\n        (ControlledOnBitString([true, false], CustomRz))([qs[1], qs[2]], qs[0]);\r\n        CNOT(qs[1], qs[2]);\r\n        Ry(2.0 * ArcTan(Sqrt(2)), qs[1]);\r\n        let b0 = M(qs[0]);\r\n        let b1 = M(qs[1]);\r\n        let b2 = M(qs[2]);\r\n        if (b0 == Zero and b1 == Zero and b2 == One) {\r\n            return 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    operation Solve (qs : Qubit[]) : Int {\r\n        // your code here\r\n        return B1(qs);\r\n    }\r\n}"
}