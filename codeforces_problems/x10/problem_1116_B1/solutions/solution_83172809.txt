{
    "id": 83172809,
    "contestId": 1116,
    "creationTimeSeconds": 1591651850,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1116,
        "index": "B1",
        "name": "Distinguish three-qubit states",
        "type": "PROGRAMMING",
        "tags": []
    },
    "author": {
        "contestId": 1116,
        "members": [
            {
                "handle": "Matheos"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1551459600
    },
    "programmingLanguage": "Q#",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 5324800,
    "source": "namespace Solution {\r\n    open Microsoft.Quantum.Primitive;\r\n    open Microsoft.Quantum.Canon;\r\n    open Microsoft.Quantum.Math;\r\n    open Microsoft.Quantum.Convert;\r\n    \r\n    operation buildW (qs : Qubit[]) : Unit is Adj + Ctl {\r\n        body {\r\n            let N = Length(qs);\r\n            Ry(2.0*ArcSin(Sqrt(1.0/(IntAsDouble(N)))), qs[0]);\r\n            if (N > 1){\r\n                ((ControlledOnInt)(0, buildW))([qs[0]], qs[1...]);\r\n            }\r\n        }\r\n        adjoint auto;\r\n    }\r\n    \r\n    operation andOracle (x : Qubit[], y : Qubit) : Unit {\r\n        body {\r\n            (Controlled X)(x, y);\r\n        }\r\n        adjoint auto;\r\n    }\r\n    \r\n    operation Solve (qs : Qubit[]) : Int {\r\n        R1(-2.0*(PI()/3.0), qs[1]);\r\n        R1(-4.0*(PI()/3.0), qs[2]);\r\n        \r\n        Adjoint buildW(qs);\r\n        \r\n        mutable ans = 1;\r\n        \r\n        using (q = Qubit()){\r\n            ApplyToEachA(X, qs);\r\n            andOracle(qs, q);\r\n            if (M(q) == One){\r\n                set ans = 0;\r\n                X(q);\r\n            }\r\n        }\r\n        \r\n        return ans;\r\n    }\r\n}\r\n"
}