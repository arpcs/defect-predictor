{
    "id": 83744855,
    "contestId": 1116,
    "creationTimeSeconds": 1592135228,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1116,
        "index": "B1",
        "name": "Distinguish three-qubit states",
        "type": "PROGRAMMING",
        "tags": []
    },
    "author": {
        "contestId": 1116,
        "members": [
            {
                "handle": "vibhav011"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1551459600
    },
    "programmingLanguage": "Q#",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 4915200,
    "source": "namespace Solution {\r\n    open Microsoft.Quantum.Primitive;\r\n    open Microsoft.Quantum.Canon;\r\n    open Microsoft.Quantum.Extensions.Math;\r\n\r\n    operation Solve (qs : Qubit[]) : Int {\r\n        R1(4.0 * PI() / 3.0, qs[1]);\r\n        R1(2.0 * PI() / 3.0, qs[2]);\r\n        (ControlledOnInt(0, X))(qs[0..1], qs[2]);\r\n        (ControlledOnInt(0, H))([qs[0]], qs[1]);\r\n        Ry(-2.0 * ArcSin(1.0 / Sqrt(3.0)), qs[0]);\r\n        mutable ones = 0;\r\n        for (i in 0..2) {\r\n            let res = M(qs[i]);\r\n            if (res == One) {\r\n                set ones += 1;\r\n            }\r\n        }\r\n        if (ones == 0) {return 0;}\r\n        return 1;\r\n    }\r\n}"
}