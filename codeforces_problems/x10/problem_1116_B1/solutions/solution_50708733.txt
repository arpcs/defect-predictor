{
    "id": 50708733,
    "contestId": 1116,
    "creationTimeSeconds": 1551591931,
    "relativeTimeSeconds": 132331,
    "problem": {
        "contestId": 1116,
        "index": "B1",
        "name": "Distinguish three-qubit states",
        "type": "PROGRAMMING",
        "tags": []
    },
    "author": {
        "contestId": 1116,
        "members": [
            {
                "handle": "ommyzhang"
            }
        ],
        "participantType": "CONTESTANT",
        "ghost": false,
        "startTimeSeconds": 1551459600
    },
    "programmingLanguage": "Q#",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 233,
    "memoryConsumedBytes": 3072000,
    "source": "namespace Solution {\n    open Microsoft.Quantum.Primitive;\n    open Microsoft.Quantum.Canon;\n\topen Microsoft.Quantum.Extensions.Math;\n\n\n    operation Solve (qs : Qubit[]) : Int {\n        // your code here\n\t\t\n\t\tRz(4.0*PI()/3.0,qs[1]);\n\t\tRz(2.0*PI()/3.0,qs[2]);\n\n\t\t(ControlledOnInt(0,X)) ([qs[0],qs[1]], qs[2]); // 000 + 010 + 100\n\t\tCNOT(qs[1],qs[0]);\t\t\t\t\t\t\t   // 000 + 110 + 100 = 000 + sqrt(2) 1+0\n\t\n\t\tControlled H ([qs[0]], qs[1]);\t\t\t\t   // 000 + sqrt(2) 100 = (0 + sqrt(2) 1) 00\n\n\t\tRy(-1.910633236, qs[0]);\t\t\t\t\t   // 000\n\n\t\tif((M(qs[0]) == Zero) && (M(qs[1]) == Zero) && (M(qs[2]) == Zero) ) {\n\t\t\treturn 0;\n\t\t}\n\t\telse {\n\t\t\treturn 1;\n\t\t}\n    }\n}\n\n"
}