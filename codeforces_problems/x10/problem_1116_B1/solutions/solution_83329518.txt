{
    "id": 83329518,
    "contestId": 1116,
    "creationTimeSeconds": 1591814922,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1116,
        "index": "B1",
        "name": "Distinguish three-qubit states",
        "type": "PROGRAMMING",
        "tags": []
    },
    "author": {
        "contestId": 1116,
        "members": [
            {
                "handle": "pallavimp"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1551459600
    },
    "programmingLanguage": "Q#",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 296,
    "memoryConsumedBytes": 5120000,
    "source": "namespace Solution {\r\n    open Microsoft.Quantum.Primitive;\r\n    open Microsoft.Quantum.Canon;\r\n    open Microsoft.Quantum.Math;\r\n\r\n    operation Solve (qs : Qubit[]) : Int {\r\n        let theta = -2.0*PI()/3.0;\r\n        R1(theta, qs[1]);\r\n        R1(2.0*theta, qs[2]);\r\n\r\n        (ControlledOnInt(0, CNOT))([qs[0]], (qs[1], qs[2]));\r\n        (ControlledOnInt(0, H))([qs[0]], qs[1]);\r\n        \r\n        CNOT(qs[0], qs[2]);\r\n        Ry(2.0*ArcSin(Sqrt(2.0)/Sqrt(3.0)), qs[0]);\r\n        X(qs[2]);\r\n        let q1 = M(qs[0]);\r\n        let q2 = M(qs[1]);\r\n        let q3 = M(qs[2]);\r\n        if (q1 == Zero and q2 == Zero and q3 == Zero)\r\n        {\r\n            return 0;  \r\n\t\t}\r\n        return 1;\r\n    }\r\n}"
}