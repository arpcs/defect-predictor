{
    "id": 233274604,
    "contestId": 69,
    "creationTimeSeconds": 1700301454,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 69,
        "index": "C",
        "name": "Game",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 69,
        "members": [
            {
                "handle": "yiyihum"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1300809600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// generated by GPT4 2023-11-18 09:57:33\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\n\nll k, n, m, q;\nmap<string, map<string, ll>> mp;\nmap<string, ll> basic;\nvector<map<string, ll>> ally;\n\nvoid buy(ll id, string s) {\n    ally[id][s]++;\n    for(auto it : mp) {\n        bool flag = true;\n        for(auto it2 : it.second) {\n            if(ally[id][it2.first] < it2.second)\n                flag = false;\n        }\n        if(flag) {\n            for(auto it2 : it.second)\n                ally[id][it2.first] -= it2.second;\n            ally[id][it.first]++;\n        }\n    }\n}\n\nint main() {\n    cin >> k >> n >> m >> q;\n    ally.resize(k + 1);\n    for(ll i = 0; i < n; i++) {\n        string s;\n        cin >> s;\n        basic[s] = 1;\n    }\n    for(ll i = 0; i < m; i++) {\n        string s, t;\n        getline(cin, s);\n        stringstream ss(s);\n        ss >> t;\n        while(ss >> s) {\n            if(basic[s]) {\n                ll x;\n                ss >> x;\n                mp[t][s] = x;\n            }\n        }\n    }\n    for(ll i = 0; i < q; i++) {\n        ll x;\n        string s;\n        cin >> x >> s;\n        buy(x, s);\n    }\n    for(ll i = 1; i <= k; i++) {\n        cout << ally[i].size() << endl;\n        for(auto it : ally[i]) {\n            cout << it.first << \" \" << it.second << endl;\n        }\n    }\n    return 0;\n}\n"
}