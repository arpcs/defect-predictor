{
    "id": 233484517,
    "contestId": 69,
    "creationTimeSeconds": 1700417370,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 69,
        "index": "C",
        "name": "Game",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2000,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 69,
        "members": [
            {
                "handle": "yiyihum"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1300809600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// generated by GPT4 2023-11-19 18:09:29\n#include <iostream>\n#include <map>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nmap<string, int> basic;\nmap<string, vector<pair<string, int>>> composite;\nvector<map<string, int>> ally(101);\nvector<vector<pair<string, int>>> res(101);\n\nint main() {\n    int k, n, m, q;\n    cin >> k >> n >> m >> q;\n    for (int i = 1; i <= n; i++) {\n        string s;\n        cin >> s;\n        basic[s] = i;\n    }\n    for (int i = 1; i <= m; i++) {\n        string s, t;\n        cin >> s;\n        while (cin >> t) {\n            int x;\n            cin >> x;\n            composite[s].push_back({t, x});\n            char c;\n            cin >> c;\n            if (c == '\\n') break;\n        }\n    }\n    for (int i = 1; i <= q; i++) {\n        int x;\n        string s;\n        cin >> x >> s;\n        ally[x][s]++;\n        for (auto it : composite) {\n            bool can_make = true;\n            for (auto jt : it.second) {\n                if (ally[x][jt.first] < jt.second) {\n                    can_make = false;\n                    break;\n                }\n            }\n            if (can_make) {\n                for (auto jt : it.second) {\n                    ally[x][jt.first] -= jt.second;\n                }\n                ally[x][it.first]++;\n                break;\n            }\n        }\n    }\n    for (int i = 1; i <= k; i++) {\n        for (auto it : ally[i]) {\n            if (it.second > 0) {\n                res[i].push_back({it.first, it.second});\n            }\n        }\n        sort(res[i].begin(), res[i].end());\n        cout << res[i].size() << '\\n';\n        for (auto it : res[i]) {\n            cout << it.first << ' ' << it.second << '\\n';\n        }\n    }\n    return 0;\n}\n"
}