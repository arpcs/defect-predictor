{
    "id": 236082295,
    "contestId": 1352,
    "creationTimeSeconds": 1701880263,
    "relativeTimeSeconds": 5943,
    "problem": {
        "contestId": 1352,
        "index": "F",
        "name": "Binary String Reconstruction",
        "type": "PROGRAMMING",
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "math"
        ]
    },
    "author": {
        "contestId": 1352,
        "members": [
            {
                "handle": "thinh123zxc"
            },
            {
                "handle": "emquyenit1104"
            },
            {
                "handle": "Kaizhaha"
            },
            {
                "handle": "LuOsIer"
            }
        ],
        "participantType": "VIRTUAL",
        "teamId": 142862,
        "teamName": "\u0110\u1ea5m (s\u1eafp) v\u1ee1 div 3",
        "ghost": false,
        "startTimeSeconds": 1701874320
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#define ff first\r\n#define ss second\r\n#define ll long long\r\n#define pb push_back\r\n#define REP(i,l,r) for(int i = l; i < r; i++)\r\n#define el '\\n'\r\nconst int base = 31;\r\nconst int MOD = 1e9 + 7;\r\nconst int maxN = 200006;\r\nusing namespace std;\r\nint n0, n1, n2;\r\nstring ans;\r\n\r\nvoid Input() {\r\n\tcin >> n0 >> n1 >> n2;\r\n}\r\n\r\nvoid Process() {\r\n\tans = \"\";\r\n\tint l = n0 + n1 + n2 + 1, ok = 1;\r\n\tif (n0) ans += string(n0 + 1, '0'), l -= (n0 + 1);\r\n\tif (n2) ans += string(n2 + 1, '1'), l -= (n2 + 1), ok = 0;\r\n\tfor(int i = 1; i <= l; i++) {\r\n\t\tif ((i + ok) & 1) ans += \"0\"; else ans += \"1\";\r\n\t}\r\n\tcout << ans << el;\r\n}\r\n\r\nint main() {\r\n\tios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n\r\n\tint test = 1;\r\n\tcin >> test;\r\n\r\n\twhile(test--) {\r\n\t\tInput();\r\n\t\tProcess();\r\n\t}\r\n\treturn 0;\r\n}\r\n\r\n/*\r\n#######################################\r\n##                                   ##\r\n##             LuOsIer               ##\r\n##                                   ##\r\n#######################################\r\n*/\r\n\r\n\r\n"
}