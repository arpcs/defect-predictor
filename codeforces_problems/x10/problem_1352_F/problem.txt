{
    "contestId": 1352,
    "index": "F",
    "name": "Binary String Reconstruction",
    "type": "PROGRAMMING",
    "rating": 1500,
    "tags": [
        "constructive algorithms",
        "dfs and similar",
        "math"
    ],
    "desc": {
        "title": "F. Binary String Reconstruction",
        "statement": "<p>For some binary string $$$s$$$ (i.e. each character $$$s_i$$$ is either '<span class=\"tex-font-style-tt\">0</span>' or '<span class=\"tex-font-style-tt\">1</span>'), all pairs of consecutive (adjacent) characters were written. In other words, all substrings of length $$$2$$$ were written. For each pair (substring of length $$$2$$$), the number of '<span class=\"tex-font-style-tt\">1</span>' (ones) in it was calculated.</p><p>You are given three numbers:</p><ul> <li> $$$n_0$$$ \u2014 the number of such pairs of consecutive characters (substrings) where the number of ones equals $$$0$$$; </li><li> $$$n_1$$$ \u2014 the number of such pairs of consecutive characters (substrings) where the number of ones equals $$$1$$$; </li><li> $$$n_2$$$ \u2014 the number of such pairs of consecutive characters (substrings) where the number of ones equals $$$2$$$. </li></ul><p>For example, for the string $$$s=$$$\"<span class=\"tex-font-style-tt\">1110011110</span>\", the following substrings would be written: \"<span class=\"tex-font-style-tt\">11</span>\", \"<span class=\"tex-font-style-tt\">11</span>\", \"<span class=\"tex-font-style-tt\">10</span>\", \"<span class=\"tex-font-style-tt\">00</span>\", \"<span class=\"tex-font-style-tt\">01</span>\", \"<span class=\"tex-font-style-tt\">11</span>\", \"<span class=\"tex-font-style-tt\">11</span>\", \"<span class=\"tex-font-style-tt\">11</span>\", \"<span class=\"tex-font-style-tt\">10</span>\". Thus, $$$n_0=1$$$, $$$n_1=3$$$, $$$n_2=5$$$.</p><p>Your task is to restore <span class=\"tex-font-style-bf\">any</span> suitable binary string $$$s$$$ from the given values $$$n_0, n_1, n_2$$$. It is guaranteed that at least one of the numbers $$$n_0, n_1, n_2$$$ is greater than $$$0$$$. Also, it is guaranteed that a solution exists.</p>",
        "inputSpecification": "<p>The first line contains an integer $$$t$$$ ($$$1 \\le t \\le 1000$$$) \u2014 the number of test cases in the input. Then test cases follow.</p><p>Each test case consists of one line which contains three integers $$$n_0, n_1, n_2$$$ ($$$0 \\le n_0, n_1, n_2 \\le 100$$$; $$$n_0 + n_1 + n_2 &gt; 0$$$). It is guaranteed that the answer for given $$$n_0, n_1, n_2$$$ exists.</p>",
        "outputSpecification": "<p>Print $$$t$$$ lines. Each of the lines should contain a binary string corresponding to a test case. If there are several possible solutions, print any of them.</p>",
        "samples": [
            {
                "input": "\n7\n1 3 5\n1 1 1\n3 9 3\n0 1 0\n3 1 2\n0 0 3\n2 0 0\n",
                "output": "\n1110011110\n0011\n0110001100101011\n10\n0000111\n1111\n000\n"
            }
        ],
        "note": null
    },
    "suggested_categories": [
        "string manipulation",
        "combinatorics",
        "mathematics",
        "algorithms",
        "binary strings",
        "substring counting",
        "pattern reconstruction",
        "data processing",
        "sequence generation",
        "bit manipulation",
        "enumerative combinatorics",
        "logic operations",
        "pattern matching",
        "enumeration",
        "algorithm design",
        "sequence analysis",
        "bitwise operations",
        "pattern recognition",
        "sequence generation",
        "mathematical modeling"
    ]
}