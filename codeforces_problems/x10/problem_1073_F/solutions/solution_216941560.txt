{
    "id": 216941560,
    "contestId": 1073,
    "creationTimeSeconds": 1691044223,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1073,
        "index": "F",
        "name": "Choosing Two Paths",
        "type": "PROGRAMMING",
        "rating": 2500,
        "tags": [
            "dfs and similar",
            "dp",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1073,
        "members": [
            {
                "handle": "wj123_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1540478100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 11673600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define all(x) (x).begin(), (x).end()\r\n#define x first\r\n#define y second\r\n#define int long long\r\n#define endl '\\n'\r\n#define sz(x) ((int)(x).size())\r\nmt19937 rnd(random_device{}());\r\ntypedef long long ll;\r\ntypedef pair<int, int> pii;\r\ntypedef double db;\r\nconst int N = 1e5 + 10, mod = 1e9 + 7, inf = 1e9;\r\nconst double eps = 1e-12;\r\nll gcd(ll a, ll b) { return b ? gcd(b, a % b) : a; }\r\nll qmi(ll a, ll b, ll mod)\r\n{\r\n    ll res = 1;\r\n    a %= mod;\r\n    assert(b >= 0);\r\n    for (; b; b >>= 1)\r\n    {\r\n        if (b & 1)\r\n            res = res * a % mod;\r\n        a = a * a % mod;\r\n    }\r\n    return res;\r\n}\r\n// head\r\nint f[N], g[N], dep[N];\r\nvector<int> h[N];\r\narray<int,3> ans;\r\nvoid dfs(int u, int fa)\r\n{\r\n    dep[u] = dep[fa] + 1;\r\n    int cnt = 0;\r\n    f[u] = g[u] = 0;\r\n    for(auto v : h[u])\r\n    {\r\n        if(v == fa) continue;\r\n        cnt++;\r\n        dfs(v, u);\r\n        if(dep[f[v]] > dep[f[u]]) g[u] = f[u], f[u] = f[v];\r\n        else if(dep[f[v]] > dep[g[u]]) g[u] = f[v];\r\n    }\r\n    if(!cnt) f[u] = u;\r\n    if(cnt >= 2)\r\n    {\r\n        ans = max(ans, {dep[u], dep[f[u]] + dep[g[u]], u});\r\n    }\r\n}\r\nvoid solve()\r\n{\r\n    int n;\r\n    cin >>n;\r\n    for(int i = 1, x, y; i < n; ++i) \r\n    cin >>x >>y, h[x].push_back(y), h[y].push_back(x);\r\n    dfs(1, 0);\r\n    int rt = ans[2];\r\n    int a1 = f[rt], a3 = g[rt];\r\n    ans = {0, 0, 0};\r\n    dfs(rt, 0);\r\n    rt = ans[2];\r\n    int a2 = f[rt], a4 = g[rt];\r\n    cout<<a1<<' '<<a2<<endl;\r\n    cout<<a3<<' '<<a4<<endl;\r\n}\r\nsigned main()\r\n{\r\n    std::ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    cout << fixed << setprecision(2);\r\n    int t = 1;\r\n    // cin >> t;\r\n    while (t--)\r\n    {\r\n        solve();\r\n    }\r\n}"
}