{
    "id": 227303071,
    "contestId": 1073,
    "creationTimeSeconds": 1696845819,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1073,
        "index": "F",
        "name": "Choosing Two Paths",
        "type": "PROGRAMMING",
        "rating": 2500,
        "tags": [
            "dfs and similar",
            "dp",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1073,
        "members": [
            {
                "handle": "sunkuangzheng"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1540478100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 83,
    "timeConsumedMillis": 327,
    "memoryConsumedBytes": 67276800,
    "source": "// LUOGU_RID: 128425285\n/**\r\n *    author: sunkuangzheng\r\n *    created: 09.10.2023 11:16:16\r\n**/\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int maxn = 5e5+5;\r\nint t,n,u,v,d[maxn],fm[maxn],dep[maxn],vis[maxn],sm[maxn],rt,viss[maxn],pq[maxn],qp[maxn],f[maxn],ddep[maxn],sb;vector<int> g[maxn];\r\nint cmp(int a,int b){return dep[a] > dep[b];}\r\nvoid dfs1(int u,int fa){\r\n    dep[u] = dep[fa] + 1,fm[u] = u,sm[u] = -1e9;vector<int> acc;\r\n    for(int v : g[u]) if(v != fa && !viss[v]) dfs1(v,u),acc.push_back(fm[v]);\r\n    if(!acc.size()) return fm[u] = u,sm[u] = -1e9,void();\r\n    if(acc.size() == 1) return fm[u] = acc[0],sm[u] = -1e9,void();\r\n    int mp = max_element(acc.begin(),acc.end(),cmp) - acc.begin(),sp = -1;fm[u] = acc[mp];\r\n    for(int i = 0;i < acc.size();i ++) if((sp == -1 || dep[acc[sp]] < dep[acc[i]]) && i != mp) sp = i;\r\n    sm[u] = acc[sp];\r\n}void dfs2(int u,int fa,int &p,int q){\r\n    ddep[u] = ddep[fa] + 1,f[u] = fa;\r\n    if((ddep[u] > ddep[p] || (ddep[u] == ddep[p] && dep[fm[u]] + dep[max(sm[u],0)] > dep[fm[p]] + dep[max(sm[p],0)])) && ((q != -1 || d[u] >= 3) && u != q && !vis[u])) p = u;\r\n    for(int v : g[u]) if(v != fa && !viss[v]) dfs2(v,u,p,q);\r\n}int main(){\r\n    ios::sync_with_stdio(0),cin.tie(0);\r\n    cin >> n;\r\n    for(int i = 1;i < n;i ++) cin >> u >> v,g[u].push_back(v),g[v].push_back(u),d[u] ++,d[v] ++;\r\n    dfs1(1,0),dfs2(1,0,rt,-1);\r\n    dfs1(f[rt],rt),dfs2(f[rt],rt,sb,-1);int a1 = 0,a2 = 0,rz = sb,b1 = 0,b2 = 0;\r\n    while(rt != rz) viss[rz] = 1,rz = f[rz];viss[rt] = 1;\r\n    dfs1(sb,0),dfs2(sb,0,b1,-2);\r\n    int s1 = b1;\r\n    while(sb != s1) vis[s1] = 1,s1 = f[s1];vis[sb] = 1;\r\n    dfs1(rt,0),dfs2(rt,0,b2,-2);\r\n    int s2 = b2;\r\n    while(rt != s2) vis[s2] = 1,s2 = f[s2];vis[rt] = 1;\r\n    dfs1(sb,0),dfs2(sb,0,a1,b1),dfs1(rt,0),dfs2(rt,0,a2,b2);\r\n    cout << a1 << \" \" << a2 << \"\\n\" << b1 << \" \" << b2 << \"\\n\";\r\n}"
}