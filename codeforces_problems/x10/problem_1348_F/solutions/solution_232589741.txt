{
    "id": 232589741,
    "contestId": 1348,
    "creationTimeSeconds": 1699861671,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1348,
        "index": "F",
        "name": "Phoenix and Memory",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2600,
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1348,
        "members": [
            {
                "handle": "BPG_ning"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588343700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 109,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 13414400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long LL;\r\ntypedef pair<int,int> pii;\r\nconst int N=2e5+10;\r\nint n,p[N],id[N];\r\npii r[N];\r\nset<pii> s;\r\nvector<int> G[N];\r\nbool cmp(int i,int j){\r\n    if(r[i].first==r[j].first) return r[i].second>r[j].second;\r\n    return r[i].first<r[j].first;\r\n}\r\nvoid sol1(){\r\n    s.insert(make_pair(1e9,0));\r\n    int j=1;\r\n    for(int i=1;i<=n;i++){\r\n        while(j<=n&&r[id[j]].first<=i) s.insert(make_pair(r[id[j]].second,id[j])),j++;\r\n        pii nxt=*s.lower_bound(make_pair(i,0));\r\n        p[nxt.second]=i;\r\n        s.erase(nxt);\r\n//        cout<<i<<' '<<nxt.first<<'\\n';\r\n    }\r\n}\r\npii sol2(){\r\n    set<int> s;\r\n    s.insert(1e9);\r\n    for(int i=n;i>=1;i--){\r\n        int x=id[i];\r\n        int Min=*s.lower_bound(i);\r\n//        cout<<x<<' '<<r[x].first<<' '<<r[x].second<<' '<<Min<<'\\n'; \r\n        if(Min<=r[x].second){\r\n            for(int j=1;j<=n;j++) if(p[j]==Min) return make_pair(x,j);\r\n        }\r\n        s.insert(i);\r\n        G[r[x].first].push_back(i);\r\n        for(int y:G[i]) s.erase(y);\r\n    }\r\n    return make_pair(0,0);\r\n}\r\nint main(){\r\n    ios::sync_with_stdio(false);\r\n    std::cin.tie(0);\r\n    std::cout.tie(0);\r\n    // freopen(\"nzq.in\",\"r\",stdin);\r\n    // freopen(\"nzq.out\",\"w\",stdout);\r\n    cin>>n;\r\n    for(int i=1;i<=n;i++) cin>>r[i].first>>r[i].second;\r\n    for(int i=1;i<=n;i++) id[i]=i;\r\n    sort(id+1,id+1+n,cmp);\r\n    sol1();\r\n    sort(id+1,id+1+n,[](int i,int j){return p[i]<p[j];});\r\n    pii ans=sol2();\r\n    if(ans.first==0){\r\n        cout<<\"YES\\n\";\r\n        for(int i=1;i<=n;i++) cout<<p[i]<<' ';\r\n    }else{\r\n        cout<<\"NO\\n\";\r\n        for(int i=1;i<=n;i++) cout<<p[i]<<' ';\r\n        cout<<'\\n';\r\n        swap(p[ans.first],p[ans.second]);\r\n        for(int i=1;i<=n;i++) cout<<p[i]<<' ';\r\n        cout<<'\\n';\r\n    }\r\n    return 0;\r\n}"
}