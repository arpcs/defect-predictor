{
    "id": 230929622,
    "contestId": 1348,
    "creationTimeSeconds": 1698909549,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1348,
        "index": "F",
        "name": "Phoenix and Memory",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2600,
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1348,
        "members": [
            {
                "handle": "AC-Automation"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588343700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 11161600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define y1 jiajia\r\n#define fileIO(s) freopen(s\".in\", \"r\", stdin); freopen(s\".out\", \"w\", stdout)\r\nvoid read(auto &x) {\r\n\tchar ch = getchar(); x = 0; ll f = 1;\r\n\twhile (isdigit(ch) == 0 && ch != '-') ch = getchar();\r\n\tif (ch == '-') f = -1, ch = getchar();\r\n\twhile (isdigit(ch)) {x = x * 10 + ch - 48; ch = getchar();}\r\n\tx *= f;\r\n}\r\nvector<pair<int, int> > vec[200005];\r\nvector<pair<int, int> > vec2[200005];\r\nint t[200005];\r\nint t2[200005];\r\nint main() {\r\n\tint n; read(n);\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tint l, r; read(l); read(r);\r\n\t\tvec[l].push_back({r, i}); \r\n\t\tvec2[r].push_back({l, i}); \r\n\t}\r\n\tset<pair<int, int> > s;\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tfor (auto x : vec[i]) {\r\n\t\t\ts.insert(x);\r\n\t\t}\r\n\t\tt[(*s.begin()).second] = i;\r\n\t\ts.erase(s.begin());\r\n\t}\r\n\tfor (int i = n; i >= 1; i--) {\r\n\t\tfor (auto x : vec2[i]) {\r\n\t\t\ts.insert(x);\r\n\t\t}\r\n\t\tt2[(*(--s.end())).second] = i;\r\n\t\ts.erase(--s.end());\r\n\t}\r\n\tbool bj = 0;\r\n\tfor (int i = 1; i <= n; i++) if (t[i] != t2[i]) bj = 1;\r\n\tif (bj) {\r\n\t\tcout << \"NO\\n\";\r\n\t\tfor (int i = 1; i <= n; i++) cout << t[i] << ' '; cout << '\\n';\r\n\t\tfor (int i = 1; i <= n; i++) cout << t2[i] << ' ';\r\n\t} else {\r\n\t\tcout << \"YES\\n\";\r\n\t\tfor (int i = 1; i <= n; i++) cout << t[i] << ' ';\r\n\t}\r\n\treturn 0;\r\n}\r\n"
}