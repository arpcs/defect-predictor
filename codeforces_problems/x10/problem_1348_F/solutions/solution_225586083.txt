{
    "id": 225586083,
    "contestId": 1348,
    "creationTimeSeconds": 1695867296,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1348,
        "index": "F",
        "name": "Phoenix and Memory",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2600,
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1348,
        "members": [
            {
                "handle": "THA"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588343700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 109,
    "timeConsumedMillis": 248,
    "memoryConsumedBytes": 34918400,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\n\r\n#define           f     first\r\n#define           s     second\r\n#define           pb    push_back\r\n#define           ep    emplace\r\n#define           eb    emplace_back\r\n#define           lb    lower_bound\r\n#define           ub    upper_bound\r\n#define       all(x)    x.begin(), x.end()\r\n#define      rall(x)    x.rbegin(), x.rend()\r\n#define   uniquev(v)    sort(all(v)), (v).resize(unique(all(v)) - (v).begin())\r\n#define     mem(f,x)    memset(f , x , sizeof(f))\r\n#define        sz(x)    (int)(x).size()\r\n#define  __lcm(a, b)    (1ll * ((a) / __gcd((a), (b))) * (b))\r\n#define          mxx    *max_element\r\n#define          mnn    *min_element\r\n#define    cntbit(x)    __builtin_popcountll(x)\r\n#define       len(x)    (int)(x.length())\r\n\r\nconst int N = 2e5 + 100;\r\nvector <pair <int, int>> ed[N], save[N];\r\nvector <int> er[N];\r\nint a[N], b[N], v[N], pos[N];\r\n\r\nvoid build(int n) {\r\n    for (int i = 1; i <= n; i++) {\r\n        ed[a[i]].pb({-b[i], i});\r\n    }\r\n\r\n    priority_queue <pair <int, int>> pq;\r\n    for (int i = 1; i <= n; i++) {\r\n        for (auto x : ed[i]) {\r\n            pq.push(x);\r\n        }\r\n\r\n        if (sz(pq)) {\r\n            auto t = pq.top();\r\n            pq.pop();\r\n            v[t.s] = i;\r\n        }\r\n    }\r\n}\r\n\r\nvoid out(int n, int ch) {\r\n    for (int i = 1; i <= n; i++)\r\n        cout << v[i] << \" \";\r\n\r\n    cout << '\\n';\r\n    if (ch) {\r\n        exit(0);\r\n    }\r\n}\r\n\r\nint solve() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    for (int i = 1; i <= n; i++)\r\n        cin >> a[i] >> b[i];\r\n\r\n    build(n);\r\n    for (int i = 1; i <= n; i++) {\r\n        save[a[i]].pb({b[i], v[i]});\r\n        pos[v[i]] = i;\r\n    }\r\n\r\n    set <int> st;\r\n    st.insert(n + 1);\r\n\r\n    for (int i = 1; i <= n; i++) {\r\n        for (auto x : save[i]) {\r\n            st.insert(x.s);\r\n            er[x.f].pb(x.s);\r\n        }\r\n\r\n        int p = pos[i];\r\n        st.erase(v[p]);\r\n        st.erase(v[p]);\r\n        if (*st.lower_bound(a[p]) <= b[p]) {\r\n            cout << \"No\\n\";\r\n            out(n, 0);\r\n            int val = *st.lower_bound(a[p]);\r\n            for (int j = 1; j <= n; j++) {\r\n                if (v[j] == val) {\r\n                    swap(v[p], v[j]);\r\n                    out(n, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        st.insert(v[p]);\r\n\r\n        for (auto x : er[i]) {\r\n            st.erase(x);\r\n        }\r\n    }\r\n\r\n    cout << \"YES\\n\";\r\n    out(n, 1);\r\n    return 0;\r\n}\r\n\r\nint main(){\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n\r\n    int t = 1;\r\n    //cin >> t;\r\n    while (t--) {\r\n        solve();\r\n       // cout << solve() << '\\n';\r\n    }\r\n}\r\n"
}