{
    "id": 226222997,
    "contestId": 1348,
    "creationTimeSeconds": 1696199141,
    "relativeTimeSeconds": 5741,
    "problem": {
        "contestId": 1348,
        "index": "F",
        "name": "Phoenix and Memory",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2600,
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1348,
        "members": [
            {
                "handle": "Misono_Mika"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1696193400
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 2048000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;const int inf=1e9;void solve();int mc=0;\r\ntypedef long long ll;typedef long double ld;const ll INF=2e18;\r\nint main(){\r\n    cin.tie(nullptr);ios::sync_with_stdio(false);\r\n    int T=1;if(mc)cin>>T;while(T--)solve();\r\n}\r\nint f[2][505];\r\nll dp[505][505];\r\ninline void Mx(ll&x,ll y){\r\n    x=max(x,y);\r\n}\r\nvoid solve(){\r\n    int n;\r\n    cin>>n;\r\n    vector<tuple<int,int,int>>v1,v2,v3,v4;\r\n    vector<vector<int>>ans;\r\n    for(int i=1,x,y;i<=n;i++)cin>>x>>y,v1.emplace_back(y,x,i),v2.emplace_back(y,-x,i),v3.emplace_back(x,y,i),v4.emplace_back(x,-y,i);\r\n    sort(v1.begin(),v1.end());\r\n    sort(v2.begin(),v2.end());\r\n    sort(v3.begin(),v3.end(),greater<>());\r\n    sort(v4.begin(),v4.end(),greater<>());\r\n    {\r\n        set<int>s;\r\n        vector<int>tmp(n+1);\r\n        for(int i=1;i<=n;i++)s.insert(i);\r\n        for(auto[r,l,id]:v1)tmp[id]=*s.lower_bound(-l),s.erase(tmp[id]);\r\n        ans.push_back(tmp);\r\n        for(int i=1;i<=n;i++)s.insert(i);\r\n        for(auto[r,l,id]:v2)tmp[id]=*s.lower_bound(l),s.erase(tmp[id]);\r\n        ans.push_back(tmp);\r\n        for(int i=1;i<=n;i++)s.insert(i);\r\n        for(auto[l,r,id]:v3)tmp[id]=*(--s.upper_bound(r)),s.erase(tmp[id]);\r\n        ans.push_back(tmp);\r\n        for(int i=1;i<=n;i++)s.insert(i);\r\n        for(auto[l,r,id]:v4)tmp[id]=*(--s.upper_bound(-r)),s.erase(tmp[id]);\r\n        ans.push_back(tmp);\r\n    }\r\n    for(int i=0;i<4;i++)for(int j=i+1;j<4;j++)if(ans[i]!=ans[j]){\r\n        cout<<\"NO\\n\";\r\n        for(int k=1;k<=n;k++)cout<<ans[j][k]<<' ';cout<<'\\n';\r\n        for(int k=1;k<=n;k++)cout<<ans[i][k]<<' ';\r\n        return;\r\n    }\r\n    cout<<\"YES\\n\";\r\n    for(int i=1;i<=n;i++)cout<<ans[0][i]<<'\\n';\r\n}"
}