{
    "id": 222441841,
    "contestId": 1348,
    "creationTimeSeconds": 1694170269,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1348,
        "index": "F",
        "name": "Phoenix and Memory",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 2600,
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1348,
        "members": [
            {
                "handle": "Tx_Lcy"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1588343700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 109,
    "timeConsumedMillis": 218,
    "memoryConsumedBytes": 86528000,
    "source": "//A tree without skin will surely die.\r\n//A man without face is invincible.\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n#define sqr(x) ((x)*(x))\r\n#define all(x) (x).begin(),(x).end()\r\n#define Tim ((double)clock()/CLOCKS_PER_SEC)\r\n#define mid ((l+r)>>1)\r\n#define lowbit(x) (x&-x)\r\nint const N=1e6+10;\r\nint id[N],p[N];\r\nstruct node{int x,y,id;}a[N];\r\nvector<node>c[N];\r\nbool operator  > (node a,node b){\r\n    return a.y>b.y;\r\n}\r\nvoid solve(){\r\n    int n;cin>>n;\r\n    for (int i=1;i<=n;++i)\r\n        cin>>a[i].x>>a[i].y,\r\n        a[i].id=i,c[a[i].x].push_back(a[i]);\r\n    priority_queue< node,vector<node>,greater<node> >q;\r\n    for (int i=1;i<=n;++i){\r\n        for (auto j:c[i]) q.push(j);\r\n        id[i]=q.top().id,p[id[i]]=i,q.pop();\r\n    }\r\n    set<int>s;\r\n    for (int i=1;i<=n;++i){\r\n\t\tfor (auto j:c[i]) s.insert(p[j.id]);\r\n\t\tint x=id[i];auto it=s.upper_bound(i);\r\n\t\tif (it!=s.end() && *it<=a[x].y){\r\n\t\t\tint j=id[*it];cout<<\"NO\\n\";\r\n\t\t\tfor (int k=1;k<=n;++k) cout<<p[k]<<' ';\r\n            cout<<'\\n';\r\n            swap(p[x],p[j]);\r\n\t\t\tfor (int k=1;k<=n;++k) cout<<p[k]<<' ';\r\n            cout<<'\\n';\r\n\t\t\treturn;\r\n\t\t}\r\n    }\r\n    cout<<\"YES\\n\";\r\n    for (int i=1;i<=n;++i) cout<<p[i]<<' ';\r\n    cout<<'\\n';\r\n}\r\nsigned main(){\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0),cout.tie(0);\r\n    int t=1;\r\n    // cin>>t;\r\n    while (t--) solve();\r\n    return 0;\r\n}"
}