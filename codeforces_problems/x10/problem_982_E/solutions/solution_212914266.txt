{
    "id": 212914266,
    "contestId": 982,
    "creationTimeSeconds": 1688877034,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 982,
        "index": "E",
        "name": "Billiard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2600,
        "tags": [
            "geometry",
            "number theory"
        ]
    },
    "author": {
        "contestId": 982,
        "members": [
            {
                "handle": "bal.bla.bla"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1526574900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n #include <vector>\r\n using namespace std;\r\n int main() {\r\n   int n, m, x, y, vx, vy;\r\n   cin >> n >> m >> x >> y >> vx >> vy;\r\n   vector<vector<int>> pockets = {{0, 0}, {n - 1, 0}, {n - 1, m - 1}, {0, m - 1}};\r\n   // Check if the ball will fall into a pocket.\r\n   bool will_fall = false;\r\n   for (int i = 0; i < 4; i++) {\r\n     int next_x = x + (i % 2) * vx;\r\n     int next_y = y + (i / 2) * vy;\r\n     if (next_x >= 0 && next_x < n && next_y >= 0 && next_y < m && pockets[i] == {next_x, next_y}) {\r\n       will_fall = true;\r\n       cout << next_x << \" \" << next_y << endl;\r\n       break;\r\n     }\r\n   }\r\n   // If the ball will not fall into a pocket, then it will move indefinitely.\r\n   if (!will_fall) {\r\n     cout << -1 << endl;\r\n   }\r\n   return 0;\r\n }\r\n"
}