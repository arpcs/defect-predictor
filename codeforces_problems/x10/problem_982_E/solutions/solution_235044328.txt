{
    "id": 235044328,
    "contestId": 982,
    "creationTimeSeconds": 1701344830,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 982,
        "index": "E",
        "name": "Billiard",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2600,
        "tags": [
            "geometry",
            "number theory"
        ]
    },
    "author": {
        "contestId": 982,
        "members": [
            {
                "handle": "JamesonChen"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1526574900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 30,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/*\r\n * Author: Jameson Chen\r\n * Created: 2023/11/17\r\n * Link: https://adalab.cs.nthu.edu.tw/contest/75/problem/W7-7\r\n * Title: Billiard\r\n */\r\n\r\n#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\npair<int, int> extgcd(int a, int b) {\r\n    if (!b) return {1, 0};\r\n    auto [xp, yp] = extgcd(b, a % b);\r\n    return {yp, xp - a / b * yp};\r\n}\r\n\r\nint gcd(int a, int b) {\r\n    if (!b) return a;\r\n    return gcd(b, a % b);\r\n}\r\n\r\nvoid solve() {\r\n    long long n, m, x, y, vx, vy;\r\n    cin >> n >> m >> x >> y >> vx >> vy;\r\n    int left = 0, right = n, down = 0, up = m;\r\n\r\n    if (vx < 0) {\r\n        x = n - x;\r\n        swap(left, right);\r\n    }\r\n    if (vy < 0) {\r\n        y = m - y;\r\n        swap(down, up);\r\n    }\r\n\r\n    if (!vx) {\r\n        if (!x || x == n)\r\n            cout << x << \" \" << up << \"\\n\";\r\n        else\r\n            cout << -1 << \"\\n\";\r\n        return;\r\n    }\r\n    if (!vy) {\r\n        if (!y || y == m)\r\n            cout << right << \" \" << y << \"\\n\";\r\n        else\r\n            cout << -1 << \"\\n\";\r\n        return;\r\n    }\r\n\r\n    int g = gcd(n, m);\r\n    if ((x - y) % g) {\r\n        cout << -1 << \"\\n\";\r\n        return;\r\n    }\r\n\r\n    x = (x % g ? x / g + 1 : x / g);\r\n    y = (y % g ? y / g + 1 : y / g);\r\n    n /= g;\r\n    m /= g;\r\n    y += n - x;\r\n    x = n;\r\n\r\n    if (y % m) {\r\n        int b = m - y % m;\r\n        int xp = extgcd(n, m).first;\r\n        xp *= b;\r\n        while (xp < 0) xp += m;\r\n        y += xp * n;\r\n        x += xp * n;\r\n    }\r\n\r\n    x /= n;\r\n    y /= m;\r\n\r\n    cout << (x & 1 ? right : left) << \" \" << (y & 1 ? up : down) << \"\\n\";\r\n}\r\n\r\nint main() {\r\n#ifdef _LOCAL_\r\n    int n;\r\n    cin >> n;\r\n    while (n--) solve();\r\n#else\r\n    solve();\r\n#endif\r\n    cout << flush;\r\n\r\n    return 0;\r\n}\r\n"
}