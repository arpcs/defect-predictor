{
    "id": 192514720,
    "contestId": 464,
    "creationTimeSeconds": 1675706137,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 464,
        "index": "C",
        "name": "Substitutes in Number",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "dp"
        ]
    },
    "author": {
        "contestId": 464,
        "members": [
            {
                "handle": "Azimjonm0012"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1410103800
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 2662400,
    "source": "/**\r\n * code generated by JHelper\r\n * More info: https://github.com/AlexeyDmitriev/JHelper\r\n * @author majk\r\n */\r\n\r\n#ifndef MAJK_LIB\r\n#define MAJK_LIB\r\n\r\n#include <vector>\r\n#include <stack>\r\n#include <iostream>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\n#include <map>\r\n#include <iomanip>\r\n#include <set>\r\n#include <functional>\r\n#include <fstream>\r\n#include <algorithm>\r\n#include <cassert>\r\n#include <cmath>\r\n#include <string>\r\n#include <sstream>\r\n#include <queue>\r\n#include <bitset>\r\nusing namespace std;\r\n\r\n#define x first\r\n#define y second\r\ntypedef std::pair<int,int> pii; typedef long long ll; typedef unsigned long long ull; typedef unsigned int ui; typedef pair<ui,ui> puu;\r\n\r\ntemplate <typename T, typename U> std::istream&operator>>(std::istream&i, pair<T,U>&p) {i >> p.x >> p.y; return i;}\r\ntemplate<typename T>std::istream&operator>>(std::istream&i,vector<T>&t) {for(auto&v:t){i>>v;}return i;}\r\ntemplate <typename T, typename U> std::ostream&operator<<(std::ostream&o, const pair<T,U>&p) {o << p.x << ' ' << p.y; return o;}\r\ntemplate<typename T>std::ostream&operator<<(std::ostream&o,const vector<T>&t) {if(t.empty())o<<'\\n';for(size_t i=0;i<t.size();++i){o<<t[i]<<\" \\n\"[i == t.size()-1];}return o;}\r\ntemplate<typename T> using minheap = priority_queue<T, vector<T>, greater<T>>;\r\ntemplate<typename T> using maxheap = priority_queue<T, vector<T>, less<T>>;\r\ntemplate <typename T> bool in(T a, T b, T c) { return a <= b && b < c; }\r\nui logceil(int x) { return 8*sizeof(int)-__builtin_clz(x); }\r\n\r\nnamespace std { template<typename T,typename U>struct hash<pair<T,U>>{hash<T>t;hash<U>u;size_t operator()(const pair<T,U>&p)const{return t(p.x)^(u(p.y)<<7);}}; }\r\ntemplate<typename T,typename F>T bsh(T l,T h,const F&f){T r=-1,m;while(l<=h){m=(l+h)/2;if(f(m)){l=m+1;r=m;}else{h=m-1;}}return r;}\r\ntemplate<typename F> double bshd(double l,double h,const F&f,double p=1e-9){ui r=3+(ui)log2((h-l)/p);while(r--){double m=(l+h)/2;if(f(m)){l=m;}else{h=m;}}return (l+h)/2;}\r\ntemplate<typename T,typename F>T bsl(T l,T h,const F&f){T r=-1,m;while(l<=h){m=(l+h)/2;if(f(m)){h=m-1;r=m;}else{l=m+1;}}return r;}\r\ntemplate<typename F> double bsld(double l,double h,const F&f,double p=1e-9){ui r=3+(ui)log2((h-l)/p);while(r--){double m=(l+h)/2;if(f(m)){h=m;}else{l=m;}}return (l+h)/2;}\r\ntemplate<typename T> T gcd(T a,T b) { if (a<b) swap(a,b); return b?gcd(b,a%b):a; }\r\n\r\ntemplate<typename T>class vector2:public vector<vector<T>>{public:vector2(){} vector2(size_t a,size_t b,T t=T()):vector<vector<T>>(a,vector<T>(b,t)){}};\r\ntemplate<typename T>class vector3:public vector<vector2<T>>{public:vector3(){} vector3(size_t a,size_t b,size_t c,T t=T()):vector<vector2<T>>(a,vector2<T>(b,c,t)){}};\r\ntemplate<typename T>class vector4:public vector<vector3<T>>{public:vector4(){} vector4(size_t a,size_t b,size_t c,size_t d,T t=T()):vector<vector3<T>>(a,vector3<T>(b,c,d,t)){}};\r\ntemplate<typename T>class vector5:public vector<vector4<T>>{public:vector5(){} vector5(size_t a,size_t b,size_t c,size_t d,size_t e,T t=T()):vector<vector4<T>>(a,vector4<T>(b,c,d,e,t)){}};\r\n\r\n\r\n#endif\r\n#ifndef MOD_H\r\n#define MOD_H\r\n\r\n\r\n\r\ntemplate <unsigned int N> class Field {\r\n    typedef unsigned int ui;\r\n    typedef unsigned long long ull;\r\n\tinline ui pow(ui a, ui p){ui r=1,e=a;while(p){if(p&1){r=((ull)r*e)%N;}e=((ull)e*e)%N;p>>=1;}return r;}\r\n\t/*extended GCD(slow):ll t=0,nt=1,r=N,nr=a;while(nr){ll q=r/nr;t-=q*nt;swap(t,nt);r-=q*nr;swap(r,nr);}assert(r<=1);return(t<0)?t+N:t;*/\r\n\tinline ui inv(ui a){return pow(a,N-2);}\r\npublic:\r\n    inline Field(int x = 0) : v(x) {}\r\n\tinline Field<N> pow(int p){return (*this)^p; }\r\n\tinline Field<N> operator^(int p){return {(int)pow(v,(ui)p)};}\r\n    inline Field<N>&operator+=(const Field<N>&o) {if ((ll)v+o.v >= N) v += o.v - N; else v += o.v; return *this; }\r\n    inline Field<N>&operator-=(const Field<N>&o) {if (v<o.v) v -= o.v-N; else v-=o.v; return *this; }\r\n    inline Field<N>&operator*=(const Field<N>&o) {v=(ull)v*o.v % N; return *this; }\r\n    inline Field<N>&operator/=(const Field<N>&o) { return *this*=inv(o.v); }\r\n    inline Field<N> operator+(const Field<N>&o) const {Field<N>r{*this};return r+=o;}\r\n    inline Field<N> operator-(const Field<N>&o) const {Field<N>r{*this};return r-=o;}\r\n    inline Field<N> operator*(const Field<N>&o) const {Field<N>r{*this};return r*=o;}\r\n    inline Field<N> operator/(const Field<N>&o) const {Field<N>r{*this};return r/=o;}\r\n    inline Field<N> operator-() {if(v) return {(int)(N-v)}; else return {0};};\r\n    inline Field<N>& operator++() { ++v; if (v==N) v=0; return *this; }\r\n    inline Field<N> operator++(int) { Field<N>r{*this}; ++*this; return r; }\r\n    inline Field<N>& operator--() { --v; if (v==-1) v=N-1; return *this; }\r\n    inline Field<N> operator--(int) { Field<N>r{*this}; --*this; return r; }\r\n    inline bool operator==(const Field<N>&o) const { return o.v==v; }\r\n\tinline bool operator!=(const Field<N>&o) const { return o.v!=v; }\r\n\tinline explicit operator ui() const { return v; }\r\n\tinline static vector<Field<N>>fact(int t){vector<Field<N>>F(t+1,1);for(int i=2;i<=t;++i){F[i]=F[i-1]*i;}return F;}\r\n\tinline static vector<Field<N>>invfact(int t){vector<Field<N>>F(t+1,1);Field<N> X{1};for(int i=2;i<=t;++i){X=X*i;}F[t]=1/X;for(int i=t-1;i>=2;--i){F[i]=F[i+1]*(i+1);}return F;}\r\nprivate: ui v;\r\n};\r\ntemplate<unsigned int N>istream &operator>>(std::istream&is,Field<N>&f){unsigned int v;is>>v;f=v;return is;}\r\ntemplate<unsigned int N>ostream &operator<<(std::ostream&os,const Field<N>&f){return os<<(unsigned int)f;}\r\ntemplate<unsigned int N>Field<N> operator+(int i,const Field<N>&f){return Field<N>(i)+f;}\r\ntemplate<unsigned int N>Field<N> operator-(int i,const Field<N>&f){return Field<N>(i)-f;}\r\ntemplate<unsigned int N>Field<N> operator*(int i,const Field<N>&f){return Field<N>(i)*f;}\r\ntemplate<unsigned int N>Field<N> operator/(int i,const Field<N>&f){return Field<N>(i)/f;}\r\n\r\n\r\ntypedef Field<1000000007> FieldMod;\r\n\r\nstruct Ring {\r\n\tstatic int div(int p, int q, int N) {\r\n\t\tll t=0,nt=1,r=N,nr=q;\r\n\t\twhile(nr){ ll q=r/nr;t-=q*nt;r-=q*nr;swap(t,nt);swap(r,nr); }\r\n\t\tt=(t<0)?t+N:t;\r\n\t\tr=(r<0)?r+N:r;\r\n\t\tif (gcd(p,N)%r) { return 0; }\r\n\t\treturn (int)(((ll)t*(ll)p/r)%N);\r\n\t}\r\n};\r\n#endif\r\n\r\n\r\nclass TaskC {\r\npublic:\r\nvoid solve(istream& cin, ostream& cout) {\r\n    string S; cin >> S;\r\n    int N; cin >> N;\r\n    vector<string> Q(N);\r\n    for (int i = 0; i < N; ++i) {\r\n        cin >> Q[N-1-i];\r\n    }\r\n\r\n    vector<pair<FieldMod,FieldMod>> W(10);\r\n    for (int i = 0; i < 10; ++i) W[i] = {i, 10};\r\n\r\n    for (string&q:Q) {\r\n        int d = q[0]-'0';\r\n        FieldMod p = 1;\r\n        FieldMod c = 0;\r\n        for (int i = 3; i < q.size(); ++i) {\r\n            c *= W[q[i]-'0'].y;\r\n            c += W[q[i]-'0'].x;\r\n            p *= W[q[i]-'0'].y;\r\n        }\r\n        W[d] = {c, p};\r\n    }\r\n\r\n    FieldMod p = 1;\r\n    FieldMod c = 0;\r\n    for (int i = 0; i < S.size(); ++i) {\r\n        c *= W[S[i]-'0'].y;\r\n        c += W[S[i]-'0'].x;\r\n    }\r\n    cout << c << endl;\r\n}\r\n};\r\n\r\n\r\nint main() {\r\n\tios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);\r\n\tTaskC solver;\r\n\tstd::istream& in(std::cin);\r\n\tstd::ostream& out(std::cout);\r\n\tsolver.solve(in, out);\r\n    return 0;\r\n}\r\n"
}