{
    "id": 187029359,
    "contestId": 464,
    "creationTimeSeconds": 1672227300,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 464,
        "index": "C",
        "name": "Substitutes in Number",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 2100,
        "tags": [
            "dp"
        ]
    },
    "author": {
        "contestId": 464,
        "members": [
            {
                "handle": "JustNik77"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1410103800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 39,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 4505600,
    "source": "\ufeff// clang-format off\r\n\r\n//#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,avx2\")\r\n//#pragma GCC optimize(\"Ofast\")\r\n//#pragma GCC optimize(\"no-stack-protector\")\r\n//#pragma GCC optimize(\"unroll-loops\")\r\n//#pragma GCC optimize(\"unswitch-loops\")\r\n//#pragma GCC optimize(\"fast-math\")\r\n//#pragma GCC optimize(\"rename-registers\")\r\n\r\n#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <queue>\r\n#include <cmath>\r\n#include <set>\r\n#include <stack>\r\n#include <bitset>\r\n#include <map>\r\n#include <ctime>\r\n#include <numeric>\r\n#include <random>\r\n#include <cassert>\r\n#include <cstring>\r\n#include <chrono>\r\n#include <functional>\r\n\r\n#define int long long\r\n#define uint unsigned long long\r\n#define double long double\r\n#define INF (int) 1e18 / 2\r\n#define all(a) a.begin(), a.end()\r\n#define debug(a) cerr << #a << \": \" << a << endl\r\n#define YES return (void) (cout << \"Yes\\n\")\r\n#define NO return (void) (cout << \"No\\n\")\r\n#define ls x << 1\r\n#define rs x << 1 | 1\r\n\r\n#ifdef JUSTNIK\r\n#define start cout.setf(ios::fixed); cout.precision(10); int START = clock()\r\n#define finish cout << \"\\ntime: \" << (clock() - START) / (double)(CLOCKS_PER_SEC); return 0\r\n#else\r\n#define start cin.tie(NULL); cout.tie(NULL); cout.setf(ios::fixed); cout.precision(10); ios_base::sync_with_stdio(false)\r\n#define finish return 0\r\n#endif\r\n\r\nusing namespace std;\r\n\r\n\r\nmt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nconst int N = 100100, mod = 1e9 + 7;\r\n\r\nchar c[N];\r\nstring to[N];\r\nint l[N], dp[10];\r\n\r\nvoid solve() {\r\n\tcin >> to[0];\r\n\treverse(all(to[0]));\r\n\tc[0] = '0';\r\n\tint q;\r\n\tcin >> q;\r\n\tfor (int i = 1; i <= q; i++) {\r\n\t\tcin >> to[i];\r\n\t\tc[i] = to[i][0];\r\n\t\tto[i] = to[i].substr(3, to[i].size() - 3);\r\n\t\treverse(all(to[i]));\r\n\t}\r\n\tfor (int i = 0; i < 10; i++)\r\n\t\tl[i] = 10, dp[i] = i;\r\n\tfor (int i = q; i >= 0; i--) {\r\n\t\tint m = to[i].size();\r\n\t\tint pw = 1;\r\n\t\tint x = c[i] - '0';\r\n\t\tint cur = 0;\r\n\t\tfor (int j = 0; j < m; j++) {\r\n\t\t\tcur = (cur + pw * dp[to[i][j] - '0']) % mod;\r\n\t\t\tpw = pw * l[to[i][j] - '0'] % mod;\r\n\t\t}\r\n\t\tdp[x] = cur;\r\n\t\tl[x] = pw;\r\n\t}\r\n\tcout << dp[0] << '\\n';\r\n}\r\n\r\nint32_t main() {\r\n\tstart;\r\n\t\r\n\tsolve();\r\n\t\r\n\tfinish;\r\n}\r\n\r\n// clang-format on\r\n\r\n/*\r\n     \u2584\u2580\u2580\u2580\u2584\r\n\u2584\u2588\u2588\u2588\u2580\u2591\u25d0\u2591\u2591\u2591\u258c\r\n    \u258c\u2591\u2591\u2591\u2591\u2591\u2590\r\n    \u2590\u2591\u2591\u2591\u2591\u2591\u2590\r\n    \u258c\u2591\u2591\u2591\u2591\u2591\u2590\u2584\u2584\r\n    \u258c\u2591\u2591\u2591\u2591\u2584\u2580\u2592\u2592\u2580\u2580\u2580\u2580\u2584\r\n   \u2590\u2591\u2591\u2591\u2591\u2590\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2580\u2580\u2584\r\n   \u2590\u2591\u2591\u2591\u2591\u2590\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2580\u2584\r\n    \u2580\u2584\u2591\u2591\u2591\u2591\u2580\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2580\u2584\r\n      \u2580\u2584\u2584\u2584\u2584\u2584\u2588\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2580\u2584\r\n           \u258c\u258c\u2591\u258c\u258c\r\n           \u258c\u258c\u2591\u258c\u258c\r\n         \u2584\u2584\u258c\u258c\u2584\u258c\u258c        */\r\n"
}