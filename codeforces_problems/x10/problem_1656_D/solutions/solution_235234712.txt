{
    "id": 235234712,
    "contestId": 1656,
    "creationTimeSeconds": 1701440689,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1656,
        "index": "D",
        "name": "K-good",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1656,
        "members": [
            {
                "handle": "7710753532"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1648132500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 16,
    "timeConsumedMillis": 311,
    "memoryConsumedBytes": 819200,
    "source": "#include <bits/stdc++.h>\r\n#define int long long\r\n#define uint unsigned long long\r\n#define FAST ios_base::sync_with_stdio(false), cin.tie(NULL)\r\n#define vi vector<int>\r\n#define vvi vector<vi >\r\n#define vc vector<char>\r\n#define vvc vector<vc >\r\n#define mii map<int , int>\r\n#define pii pair<int , int>\r\n#define vb vector<bool>\r\n#define vvb vector<vb >\r\n#define pb push_back\r\n#define pp pop_back\r\n#define ff first\r\n#define ss second\r\n#define fr(i,n) for(int i=0; i<(n); i++)\r\n#define rep(i,a,n) for(int i=(a); i<=(n); i++)\r\n#define nl cout<<\"\\n\"\r\n#define dbg(var) cout<<#var<<\"=\"<<var<<\" \"\r\n#define all(v) v.begin(),v.end()\r\n#define srt(v)  sort(v.begin(),v.end())         // sort \r\n#define mxe(v)  *max_element(v.begin(),v.end())     // find max element in vector\r\n#define mne(v)  *min_element(v.begin(),v.end())     // find min element in vector\r\n#define unq(v)  v.resize(distance(v.begin(), unique(v.begin(), v.end())));\r\n// make sure to sort before applying unique // else only consecutive duplicates would be removed \r\n#define bin(x,y)  bitset<y>(x) \r\n\r\nusing namespace std;\r\nint MOD=1e9+7;      // Hardcoded, directly change from here for functions!\r\n\r\nconst int MX_SZ=1e5+5;\r\nint par[MX_SZ];\r\n\r\nvoid modadd(int &a , int b) {a=((a%MOD)+(b%MOD))%MOD;}\r\nvoid modsub(int &a , int b) {a=((a%MOD)-(b%MOD)+MOD)%MOD;}\r\nvoid modmul(int &a , int b) {a=((a%MOD)*(b%MOD))%MOD;}\r\n// ================================== take ip/op like vector,pairs directly!==================================\r\ntemplate<typename typC,typename typD> istream &operator>>(istream &cin,pair<typC,typD> &a) { return cin>>a.first>>a.second; }\r\ntemplate<typename typC> istream &operator>>(istream &cin,vector<typC> &a) { for (auto &x:a) cin>>x; return cin; }\r\ntemplate<typename typC,typename typD> ostream &operator<<(ostream &cout,const pair<typC,typD> &a) { return cout<<a.first<<' '<<a.second; }\r\ntemplate<typename typC,typename typD> ostream &operator<<(ostream &cout,const vector<pair<typC,typD>> &a) { for (auto &x:a) cout<<x<<'\\n'; return cout; }\r\ntemplate<typename typC> ostream &operator<<(ostream &cout,const vector<typC> &a) { int n=a.size(); if (!n) return cout; cout<<a[0]; for (int i=1; i<n; i++) cout<<' '<<a[i]; return cout; }\r\n// ===================================END Of the input module ==========================================\r\n\r\nconstexpr int N = 200005; // No. of vertices\r\nconstexpr int L = 20; // ceil(logN / log2) + 1\r\n\r\nvoid solve(){\r\n    int n;\r\n    cin >> n;\r\n\r\n    // my idea: get the prime factorisation of \"n\"\r\n    // check for each prime if n%p == 0 and n >= p*(p+1)/2 \r\n    // also, p = 2 is a spl case...\r\n\r\n    // BUT, constraints are 10^18!!!\r\n    // ANOTHER OBSERVATION: if n = 2^k*(odd) => ans is either \"odd\" or \"2^(k+1)\"\r\n    // and that both cant happen simulataneously\r\n    // also, n = 2^k => \"-1\"!\r\n\r\n    int odd = n;\r\n    while(odd%2 == 0)odd /= 2;\r\n\r\n    if(odd == 1){\r\n    \tcout << -1 << endl;\r\n    \treturn;\r\n    }\r\n\r\n    if(odd <= 2e9 && n >= ((odd*(odd+1))/2) ){\r\n    \t// odd is answer\r\n    \tcout << odd << endl;\r\n    }\t\r\n    else{\r\n    \t// 2^(k+1) is answer!\r\n    \tcout << 2*(n/odd) << endl;\r\n    }\r\n}\r\n\r\nint32_t main()\r\n{\r\n\tFAST;\r\n\r\n    int T;\r\n    cin >> T;\r\n    for (int i=1;i<=T;i++)\r\n    {\r\n        // cout << \"Case #\" << i << \": \" << endl;\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}