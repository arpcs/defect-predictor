{
    "id": 230053074,
    "contestId": 1656,
    "creationTimeSeconds": 1698425629,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1656,
        "index": "D",
        "name": "K-good",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 1900,
        "tags": [
            "constructive algorithms",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1656,
        "members": [
            {
                "handle": "Mr_Feb24"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1648132500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#ifdef DEBUG \n#include \"debuge.cpp\"\n#else\n#define debug(...) 42\n#endif\n\ntypedef            long long ll;\ntypedef       pair<int, int>  pii;\ntypedef         pair<ll, ll>  pll;\ntypedef pair<double, double> pdd;\ntypedef          vector<int>  vi;\ntypedef           vector<ll>  vll;\ntypedef          vector<pii>  vii;\n\n#define                   fi  first\n#define                   se  second\n#define               all(v)  (v).begin(), (v).end()\n#define                SZ(x)  ((int) (x).size())\n#define                   pb  push_back\n#define                   pf  push_front\n#define                   lb  lower_bound\n#define                   ub  upper_bound\n \n#define         FOR(i, a, b) for (int i = (a); i < (b); ++i)\n#define         ROF(i, a, b) for (int i = (a); i > (b); --i)\n\n\nusing u64 = uint64_t;\nusing u128 = __uint128_t;\n\nu64 binpower(u64 base, u64 e, u64 mod) {\n    u64 result = 1;\n    base %= mod;\n    while (e) {\n        if (e & 1)\n            result = (u128)result * base % mod;\n        base = (u128)base * base % mod;\n        e >>= 1;\n    }\n    return result;\n}\n\nbool check_composite(u64 n, u64 a, u64 d, int s) {\n    u64 x = binpower(a, d, n);\n    if (x == 1 || x == n - 1)\n        return false;\n    for (int r = 1; r < s; r++) {\n        x = (u128)x * x % n;\n        if (x == n - 1)\n            return false;\n    }\n    return true;\n};\n\nbool MillerRabin(u64 n) { // returns true if n is prime, else returns false.\n    if (n < 2)\n        return false;\n\n    int r = 0;\n    u64 d = n - 1;\n    while ((d & 1) == 0) {\n        d >>= 1;\n        r++;\n    }\n\n    for (int a : {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37}) {\n        if (n == a)\n            return true;\n        if (check_composite(n, a, d, r))\n            return false;\n    }\n    return true;\n}\n\nlong long mult(long long a, long long b, long long mod) {\n    return (__int128)a * b % mod;\n}\n\nlong long f(long long x, long long c, long long mod) {\n    return (mult(x, x, mod) + c) % mod;\n}\n\nlong long rho(long long n, long long x0=2, long long c=1) {\n    long long x = x0;\n    long long y = x0;\n    long long g = 1;\n    while (g == 1) {\n        x = f(x, c, n);\n        y = f(y, c, n);\n        y = f(y, c, n);\n        g = gcd(abs(x - y), n);\n    }\n    return g;\n}\n\nvoid LPP(int &test) {\n\tll n;\n\tcin >> n;\n\tif (n % 2 != 0) {\n\t\tcout << 2 << '\\n';\n\t} else {\n\t\tif (MillerRabin(n)) {\n\t\t\tcout << -1 << '\\n';\n\t\t} else {\n\t\t\tll t = rho(n);\n\t\t\tif (min(t, n / t) == 1) \n\t\t\t\tcout << -1 << '\\n';\n\t\t\telse \n\t\t\t\tcout << min(t, n / t) << '\\n';\n\t\t}\n\t}\n}\n\nint32_t main() {\n\tcin.tie(0) -> ios::sync_with_stdio(0);\n\tint tc = 1;\n\tcin >> tc;\n\tFOR(i, 1, tc + 1) LPP(i);\n}\n\n\n/*\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\n#define ordered_set tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>\n*/\n\n\n\n\n"
}