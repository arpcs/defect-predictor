{
    "id": 193596314,
    "contestId": 852,
    "creationTimeSeconds": 1676377800,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 852,
        "index": "G",
        "name": "Bathroom terminal",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 852,
        "members": [
            {
                "handle": "bkifhr6"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504432800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 15,
    "timeConsumedMillis": 186,
    "memoryConsumedBytes": 220467200,
    "source": "#include <iostream>\n#include<cstring>\n#include<cmath>\n#include<cctype>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<stack>\n#include<set>\n#include<map>\nusing namespace std;\n#define LL long long \nint trie[5000010][10], cnt[5000010],id=0,sum;\nset<string> S;\nvoid insert(string s) {\n    int p = 0;\n    int len = s.length();\n    int temp;\n    for (int i = 0; i < len; ++i) {\n        temp = s[i] - 'a';\n        if (trie[p][temp] == 0) trie[p][temp] = ++id;\n        p = trie[p][temp];\n    }\n    cnt[p]++;\n}\nint find(string s) {\n    int p = 0;\n    int len = s.length();\n    int temp;\n    for (int i = 0; i < len; ++i) {\n        temp = s[i] - 'a';\n        if (trie[p][temp] == 0) return 0;\n        p = trie[p][temp];\n    }\n    return cnt[p];\n}\nvoid dg(string s,int cur) {\n    int len = s.length();\n    for (int i = cur; i < len; ++i) {\n        if (s[i] == '?') {\n            for (int j = 0; j < 6; ++j) {\n                if (j == 5) s=s.substr(0,i)+s.substr(i+1,len-i-1);\n                else s[i] = char('a' + j);\n                dg(s,i);\n            }\n            return;\n        }\n    }\n    if (S.count(s) == 0) {\n        S.insert(s);\n        sum += find(s);\n    }\n}\nvoid solve() {\n    int n, q;\n    cin >> n >> q;;\n    for (int i = 1; i <= n; ++i) {\n        string s;\n        cin >> s;\n        insert(s);\n    }\n    for (int i = 1; i <= q; ++i) {\n        S.clear();\n        sum = 0;\n        string s;\n        cin >> s;\n        dg(s,0);\n        cout << sum << '\\n';\n    }\n}\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int _t;\n    _t = 1;\n    //cin >> _t;\n    while (_t--) {\n        solve();\n    }\n    return 0;\n}\n   \t\t\t \t  \t  \t  \t\t\t     \t   \t\t\t"
}