{
    "id": 144116699,
    "contestId": 852,
    "creationTimeSeconds": 1643251985,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 852,
        "index": "G",
        "name": "Bathroom terminal",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 852,
        "members": [
            {
                "handle": "okokok_"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1504432800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<iostream>\r\n#include<algorithm>\r\n#include<vector>\r\n#include <math.h>\r\n#include<queue>\r\n#include<cstdio>\r\n#include<cstring>\r\n#include<map>\r\n#include<set>\r\n#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))\r\n#define rer(i,l,u) for(int (i)=(int)(l);(i)<=(int)(u);++(i))\r\n#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))\r\n#if defined(_MSC_VER) || __cplusplus > 199711L\r\n#define aut(r,v) auto r = (v)\r\n#else\r\n#define aut(r,v) typeof(v) r = (v)\r\n#endif\r\n#define each(it,o) for(aut(it, (o).begin()); it != (o).end(); ++ it)\r\n#define all(o) (o).begin(), (o).end()\r\n#define pb(x) push_back(x)\r\n#define mp(x,y) make_pair((x),(y))\r\n#define mset(m,v) memset(m,v,sizeof(m))\r\ntypedef long long ll;\r\nusing namespace std;\r\nconst int N = 1e5+5, M = 5e3+5;\r\nint n, m;\r\nint main(){\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cin >> n >> m;\r\n    map<string, int> ha;\r\n    rer(i, 1, n){\r\n        string x;\r\n        cin >> x;\r\n        ha[x]++;\r\n    }\r\n    rer(i, 1, m){\r\n        string x;\r\n        cin >> x;\r\n        vector<int>ss;\r\n        rer(j, 0, x.size()-1){\r\n            if(x[j] == '?') ss.pb(j);\r\n        }\r\n        int res = 0;\r\n        set<string>seen;\r\n        for(char a = 'a'; a <= 'f'; a++){\r\n            if(ss.size() < 1 && a != 'f') continue;\r\n            for(char b='a'; b <='f'; b++){\r\n                if(ss.size() < 2 && b != 'f') continue;\r\n                for(char c='a'; c<='f'; c++){\r\n                    if(ss.size() < 3 && c != 'f') continue;\r\n                    string tmp = x;\r\n                    if(ss.size() >= 1){\r\n                        tmp[ss[0]] = a;\r\n                    }\r\n                    if(ss.size() >= 2){\r\n                        tmp[ss[1]] = b;\r\n                    }\r\n                    if(ss.size() >= 3){\r\n                        tmp[ss[2]] = c;\r\n                    }\r\n                    while(tmp.find('f')!=string::npos){\r\n                        tmp.erase(tmp.begin()+tmp.find('f'));\r\n                    }\r\n                    if(seen.find(tmp) != seen.end()){\r\n                       continue;\r\n                    }\r\n                    if(ha.find(st) != ha.end()) {\r\n                        seen.insert(tmp);\r\n                        res += ha[tmp];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        cout << res << endl;\r\n\r\n    }\r\n    return 0;\r\n}\r\n\r\n/*\r\n  0. Enough array size? Enough array size? Enough array size? Integer overflow?\r\n\r\n  1. Think TWICE, Code ONCE!\r\n  Are there any counterexamples to your algo?\r\n\r\n  2. Be careful about the BOUNDARIES!\r\n  N=1? P=1? Something about 0?\r\n\r\n  3. Do not make STUPID MISTAKES!\r\n  Time complexity? Memory usage? Precision error?\r\n*/"
}