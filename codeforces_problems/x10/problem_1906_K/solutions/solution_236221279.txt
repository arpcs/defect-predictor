{
    "id": 236221279,
    "contestId": 1906,
    "creationTimeSeconds": 1701962102,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1906,
        "index": "K",
        "name": "Deck-Building Game",
        "type": "PROGRAMMING",
        "rating": 2500,
        "tags": [
            "divide and conquer",
            "math"
        ]
    },
    "author": {
        "contestId": 1906,
        "members": [
            {
                "handle": "tinnhiemnn"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1701578100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 481996800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define file \"file\"\r\nint n,i,j,res;\r\nlong long cnt;\r\nmap<long long, int> mp;\r\nvector<int> v[10005];\r\nstring st[2002][10005], b[2002];\r\nint dd[2002], dem[10005];\r\nvector<long long> a[2002];\r\n\r\nlong long calc(long long a, long long b, char c)\r\n{\r\n    if (c=='+') return a+b;\r\n    if (c=='-') return a-b;\r\n    if (c=='*') return a*b;\r\n}\r\n\r\nbool cmp(const int &a, const int &b)\r\n{\r\n    return v[a].size() > v[b].size();\r\n}\r\n\r\nint main()\r\n{\r\n    //freopen(file\".inp\", \"r\", stdin);\r\n    //freopen(file\".out\", \"w\", stdout);\r\n    ios_base::sync_with_stdio(); cin.tie();\r\n\r\n    cin>>n;\r\n    for (i=1;i<=n;i++)\r\n    {\r\n        string s; cin>>s;\r\n        long long x=0;\r\n        for (j=0;j<s.size();j++)\r\n        {\r\n            if (s[j]>='0' && s[j]<='9') x=(x*10) + (s[j]-'0');\r\n            else {\r\n                a[i].push_back(x); x=0;\r\n                b[i]+=s[j];\r\n            }\r\n        }\r\n        a[i].push_back(x);\r\n\r\n        if (a[i].size()==2)\r\n        {\r\n            cnt=calc(a[i][0], a[i][1], b[i][0]);\r\n            if (!mp.count(cnt)) res++, mp[cnt]=res;\r\n            v[mp[cnt]].push_back(i); st[i][mp[cnt]]=s;\r\n        }\r\n        else if (a[i].size()==3)\r\n        {\r\n            cnt=calc(calc(a[i][0], a[i][1], b[i][0]), a[i][2], b[i][1]); //cout<<cnt<<' ';\r\n            if (!mp.count(cnt)) res++, mp[cnt]=res;\r\n            v[mp[cnt]].push_back(i); st[i][mp[cnt]] = (string) \"(\" + to_string(a[i][0])+ b[i][0]+to_string(a[i][1])+\")\"+b[i][1]+to_string(a[i][2]);\r\n\r\n            cnt=calc(calc(a[i][1], a[i][2], b[i][1]), a[i][0], b[i][0]); //cout<<cnt<<'\\n';\r\n            if (!mp.count(cnt)) res++, mp[cnt]=res;\r\n            v[mp[cnt]].push_back(i); st[i][mp[cnt]] = (string) to_string(a[i][0])+b[i][0]+\"(\"+to_string(a[i][1])+b[i][1]+to_string(a[i][2])+\")\";\r\n        }\r\n        else {\r\n            //((a b) c) d\r\n            cnt=calc(calc(calc(a[i][0], a[i][1], b[i][0]), a[i][2], b[i][1]), a[i][3], b[i][2]);\r\n            if (!mp.count(cnt)) res++, mp[cnt]=res;\r\n            v[mp[cnt]].push_back(i);\r\n            st[i][mp[cnt]]=(string)\"((\"+to_string(a[i][0])+b[i][0]+to_string(a[i][1])+\")\"+b[i][1]+to_string(a[i][2])+\")\"+b[i][2]+to_string(a[i][3]);\r\n            //(a b) (c d)\r\n            cnt=calc(calc(a[i][0], a[i][1], b[i][0]), calc(a[i][2], a[i][3], b[i][2]), b[i][1]);\r\n            if (!mp.count(cnt)) res++, mp[cnt]=res;\r\n            v[mp[cnt]].push_back(i);\r\n            st[i][mp[cnt]]=(string)\"(\"+to_string(a[i][0])+b[i][0]+to_string(a[i][1])+\")\"+b[i][1]+\"(\"+to_string(a[i][2])+b[i][2]+to_string(a[i][3])+\")\";\r\n            //a ((b c) d)\r\n            cnt=calc(a[i][0], calc(calc(a[i][1], a[i][2], b[i][1]), a[i][3], b[i][2]), b[i][0]);\r\n            if (!mp.count(cnt)) res++, mp[cnt]=res;\r\n            v[mp[cnt]].push_back(i);\r\n            st[i][mp[cnt]]=(string) to_string(a[i][0])+b[i][0]+\"((\"+to_string(a[i][1])+b[i][1]+to_string(a[i][2])+\")\"+b[i][2]+to_string(a[i][3])+\")\";\r\n            //(a (b c)) d\r\n            cnt=calc(calc(a[i][0], calc(a[i][1], a[i][2], b[i][1]), b[i][0]), a[i][3], b[i][2]);\r\n            if (!mp.count(cnt)) res++, mp[cnt]=res;\r\n            v[mp[cnt]].push_back(i);\r\n            st[i][mp[cnt]]=(string)\"(\"+to_string(a[i][0])+b[i][0]+\"(\"+to_string(a[i][1])+b[i][1]+to_string(a[i][2])+\"))\"+b[i][2]+to_string(a[i][3]);\r\n            //a (b (c d))\r\n            cnt=calc(calc(calc(a[i][2], a[i][3], b[i][2]), a[i][1], b[i][1]), a[i][0], b[i][0]);\r\n            if (!mp.count(cnt)) res++, mp[cnt]=res;\r\n            v[mp[cnt]].push_back(i);\r\n            st[i][mp[cnt]]=(string) to_string(a[i][0])+b[i][0]+\"(\"+to_string(a[i][1])+b[i][1]+\"(\"+to_string(a[i][2])+b[i][2]+to_string(a[i][3])+\"))\";\r\n        }\r\n    }\r\n\r\n    if (res < n) {cout<<\"NO SOLUTION\"; return 0;}\r\n\r\n    for (i=1;i<=res;i++) dem[i]=i;\r\n    sort(dem+1, dem+res+1, cmp);\r\n\r\n    for (i=1;i<=res;i++)\r\n    {\r\n        for (int j : v[dem[i]])\r\n        {\r\n            if (!dd[j]) {dd[j]=dem[i]; break;}\r\n        }\r\n    }\r\n\r\n    for (i=1;i<=n;i++) cout<<st[i][dd[i]]<<'\\n';\r\n}\r\n\r\n"
}