{
    "id": 221795756,
    "contestId": 1626,
    "creationTimeSeconds": 1693821065,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1626,
        "index": "C",
        "name": "Monsters And Spells",
        "type": "PROGRAMMING",
        "rating": 1700,
        "tags": [
            "binary search",
            "data structures",
            "dp",
            "greedy",
            "implementation",
            "math",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1626,
        "members": [
            {
                "handle": "anonymous_yuvi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1642343700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 8,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 204800,
    "source": "#include<bits/stdc++.h>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\nusing ll=long long;\r\n#define int ll\r\n#define sz(x) (int)x.size()\r\ntemplate <typename T>\r\nusing ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\ntemplate<typename  T> //order_of_key(k)..(no of vals less than k/order), find_by_order(useful in case of multisets for deletion) erase(find_by_order(order));\r\nusing ordered_multiset = tree<T , null_type ,  less_equal<T> , rb_tree_tag , tree_order_statistics_node_update>;\r\n/*///////////////////////////////////////////////////////////////////////////////////////////////*/\r\n\r\nvoid solve(int testcase){\r\n     int n;\r\n     cin>>n;\r\n     vector<int> K(n),h(n);\r\n     for(auto &i:K)cin>>i;\r\n     for(auto &i:h)cin>>i;\r\n     vector<pair<int,int>> range;\r\n     for(int i=0;i<n;i++){\r\n          range.emplace_back(K[i]-h[i]+1,K[i]);\r\n     }\r\n     // for(auto &i:range){\r\n     //      cout<<i.first<<\" \"<<i.second<<\"\\n\";\r\n     // }\r\n     sort(range.begin(),range.end());\r\n     set<pair<int,int>> st;\r\n     for(int i=0;i<n;i++){\r\n          int left=range[i].first;\r\n          int right=range[i].second;\r\n          while(!st.empty() && (*--st.end()).second>=left){\r\n               auto p=*--st.end();\r\n               st.erase(--st.end());\r\n               left=min(left,p.first);\r\n               right=max(right,p.second);\r\n          }\r\n          st.insert({left,right});\r\n     }\r\n     // for(auto &i:st)\r\n     // cout<<i.first<<\" \"<<i.second<<\"\\n\";\r\n     int ans=0;\r\n     while(!st.empty()){\r\n          int len=(*st.begin()).second-(*st.begin()).first+1;\r\n          st.erase(st.begin());\r\n          // cout<<len<<\" \\n\";\r\n          ans+=((len*(len+1))/2);\r\n     }\r\n     cout<<ans<<\"\\n\";\r\n}\r\nsigned main(){\r\n   //used to generate random numbers till 2^32-1\r\n  // mt19937 rng((unsigned int) chrono::steady_clock::now().time_since_epoch().count());\r\n     ios_base::sync_with_stdio(false);\r\n     cin.tie(NULL);\r\n     #ifndef ONLINE_JUDGE\r\n     freopen(\"input.txt\", \"r\", stdin);\r\n     #endif\r\n     int t=1;\r\n     cin>>t;\r\n     for(int i=1;i<=t;i++)\r\n     solve(i);\r\n     return 0;\r\n}"
}