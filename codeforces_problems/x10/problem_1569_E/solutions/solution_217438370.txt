{
    "id": 217438370,
    "contestId": 1569,
    "creationTimeSeconds": 1691317431,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1569,
        "index": "E",
        "name": "Playoff Restoration",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "bitmasks",
            "brute force",
            "hashing",
            "implementation",
            "meet-in-the-middle"
        ]
    },
    "author": {
        "contestId": 1569,
        "members": [
            {
                "handle": "11_45_14"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631111700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n#include <unordered_map>\r\n#include<algorithm>\r\nusing namespace std;\r\n//#define LOCAL\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define ld long double\r\n#define IOS ios::sync_with_stdio(0),cout.tie(0),cin.tie(0)\r\nconst ll INF= 0x3f3f3f3f3f3f3f;\r\nconst int M =1e5+10;  \r\nconst int MOD = 1e9+7 ;\r\nconst int mod =998244353;\r\ntypedef pair<int,int> pii;\r\ntypedef pair<ll,ll> pll;\r\nll gcd(ll a,ll b){return b!=0?gcd(b,a%b):a;}\r\nld pi = 3.141592653589793238462643383279;\r\nld e =2.718281828;\r\nll lb(ll x){return x&(-x);}\r\nset<int> ma,kong;\r\nvector<ll> Av(10);vector<ll>Bv(10);\r\nvector<ll> v(60);\r\nll n,A,g;\r\nll Len=0;\r\nbool flag =0;\r\nvoid dfs(int len,int vlen,int nlev,int lev,ll gt,set<int>del){\r\n        //\u73b0\u5728\u9700\u8981\u7684\u6570\u91cf,\u76ee\u524d\u8fd8\u5269\u591a\u5c11\u6570,\u73b0\u5c42\u6570\uff0c\u76ee\u6807\u5c42\uff0c\u83b7\u5f97\u7684\u6743\uff0c\u5220\u9664\u7684\u4eba\r\n    \r\n    if(nlev>lev){\r\n        if(gt==g){\r\n            int check = 1;\r\n            int L =len;\r\n            for(int i=1;i<=lev;i++){\r\n                if(i==1){\r\n                    int flag1,flag2=0;\r\n                    for(int j=1;j<=L/2;j++){\r\n                        if(v[j]==1)flag1++;\r\n                        if(v[j]==2)flag2++;\r\n                    }\r\n                    if(flag1+flag2!=1){\r\n                        check=0;break;\r\n                    }\r\n                }\r\n                else{\r\n                    L/=2;\r\n                    for(int j=1;j<Len;j+=L){\r\n                        int flagg=0;\r\n                        for(int z=j;z<j+L;z++)\r\n                            if(v[z]==Bv[i])flagg++;\r\n                        if(flagg!=1){\r\n                            check=0;break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(check==1){\r\n                flag =1;\r\n                for(int i=1;i<=(2<<lev-1);i++){\r\n                    cout<<v[i]<<' ';\r\n                }\r\n                cout<<'\\n';\r\n                return;\r\n            }\r\n        }   \r\n        return ;\r\n    }\r\n    for(auto de:del){\r\n        ma.erase(de);\r\n    }\r\n    vector<int> gtnum;\r\n    for(auto d:ma)\r\n        gtnum.push_back(d);\r\n    if(nlev==0||nlev==1){\r\n        for(auto gg:gtnum){\r\n            v[gg]=Bv[nlev];\r\n            ma.erase(gg);\r\n            dfs(len+1,vlen-1,nlev+1,lev,(gt+gg*Av[nlev])%mod,kong);\r\n            if(flag)return ;\r\n            ma.insert(gg);\r\n            v[gg]=0;\r\n            \r\n        }\r\n    }\r\n    else{\r\n        int cur = (1<<(len))-1;\r\n        int limit=(1<<vlen);\r\n        while(cur<limit){\r\n            int llb=cur&-cur;\r\n            int r = cur+llb;\r\n            int cnt = 0,x=cur;//\u83b7\u53d6\u7684\u70b9\uff0c\u73b0\u5728\u7684\u4e8c\u8fdb\r\n            set<int>ddel;//\u51c6\u5907\u5220\u9664\u7684\r\n            ll cost =0;\r\n            for(;x;x>>=1){\r\n                if(x&1){\r\n                    cost+=gtnum[cnt];\r\n                    ddel.insert(gtnum[cnt]);\r\n                }\r\n                cnt++;\r\n            }\r\n            for(auto dsa:ddel){v[dsa]=Bv[nlev];}\r\n            dfs(len<<1,vlen-len,nlev+1,lev,(gt+cost*Av[nlev])%mod,ddel);\r\n            for(auto dsa:ddel){v[dsa]=0;}\r\n            if(flag)return ;\r\n            cur = (((r^cur)>>2)/llb)|r;\r\n        }\r\n    }\r\n    for(auto de:del){\r\n        ma.insert(de);\r\n    }\r\n}\r\nvoid solve() {\r\n    cin>>n>>A>>g;\r\n    Len = pow(2,n);\r\n    for(int i=1;i<=Len;i++)\r\n        ma.insert(i);\r\n    int cnt = 1,p=1;\r\n    Av[0]=A;ll Ag =A;\r\n    Bv[0]=1;ll nu =1;\r\n    while(cnt<=5){\r\n        Bv[cnt]=nu+1;\r\n        Av[cnt]=A*Ag%mod;cnt++;\r\n        Ag=Ag*Ag%mod;nu*=2;\r\n    }\r\n    //1 2 3*2 5*4 9*8\r\n    //17*16\r\n    if(n==1){\r\n        ll ans1=Av[0]+2*Av[1]%mod,ans2=Av[1] +2*Av[0]%mod;\r\n        if(ans1==g){cout<<\"1 2\"<<'\\n';}\r\n        else if(ans2==g){cout<<\"2 1\"<<'\\n';}\r\n        else    cout<<-1<<'\\n';\r\n    }\r\n    else if(n>=2){\r\n        dfs(0,Len,0,n,0,kong);\r\n        if(!flag)cout<<-1<<'\\n';\r\n    }\r\n}\r\nsigned main(){\r\n#ifdef LOCAL\r\n//\r\n    freopen(\"C:\\\\Users\\\\ailurophile\\\\Desktop\\\\11414\\\\input.in\",\"r\",stdin);\r\n    freopen(\"C:\\\\Users\\\\ailurophile\\\\Desktop\\\\11414\\\\output.out\",\"w\",stdout);\r\n    clock_t time1 = clock();\r\n#endif\r\n    /*******************/\r\n    //IOS;\r\n    int t=1;//cin>>t;\r\n    while(t--){\r\n        solve();\r\n    }\r\n    /*******************/\r\n#ifdef LOCAL\r\n    cout<<\"Time:\"<<clock()-time1<<\"ms\"<<'\\n';\r\n#endif\r\n     return 0;\r\n}\r\n\r\n/*\r\n     5 3 5 1 5 2 5 3\r\n    9 9 9 9 9 9 9 9 \r\n*/\r\n"
}