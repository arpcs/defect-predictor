{
    "id": 224273576,
    "contestId": 1569,
    "creationTimeSeconds": 1695287998,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1569,
        "index": "E",
        "name": "Playoff Restoration",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "bitmasks",
            "brute force",
            "hashing",
            "implementation",
            "meet-in-the-middle"
        ]
    },
    "author": {
        "contestId": 1569,
        "members": [
            {
                "handle": "Heltion"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1631111700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 48,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 4300800,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nusing u64 = uint64_t;\r\nusing u32 = uint32_t;\r\nusing i64 = int64_t;\r\nconstexpr i64 mod = 998244353;\r\nint main() {\r\n  cin.tie(nullptr)->sync_with_stdio(false);\r\n  int k, a, h;\r\n  cin >> k >> a >> h;\r\n  vector<i64> p((1 << k) + 1);\r\n  p[0] = 1;\r\n  for (int i = 1; i <= (1 << k); i += 1) { p[i] = p[i - 1] * a % mod; }\r\n  vector<vector<vector<int>>> f(k);\r\n  f[0] = {{1}};\r\n  for (int i = 1; i < k; i += 1) {\r\n    for (auto x : f[i - 1]) {\r\n      for (auto y : f[i - 1]) {\r\n        f[i].emplace_back();\r\n        for (int xi : x) { f[i].back().push_back(xi == 1 ? 2 : xi * 2 - 1); }\r\n        for (int yi : y) { f[i].back().push_back(yi * 2 - 1); }\r\n        f[i].emplace_back();\r\n        for (int xi : x) { f[i].back().push_back(xi * 2 - 1); }\r\n        for (int yi : y) { f[i].back().push_back(yi == 1 ? 2 : yi * 2 - 1); }\r\n      }\r\n    }\r\n    ranges::sort(f[i]);\r\n    f[i].erase(ranges::unique(f[i]).begin(), f[i].end());\r\n  }\r\n  {\r\n    unordered_map<i64, vector<int>> mp;\r\n    for (auto v : f.back()) {\r\n      i64 h = 0;\r\n      for (int i = 0; i < v.size(); i += 1) {\r\n        h = (h + (i + 1) * p[v[i] * 2 - 1]) % mod;\r\n      }\r\n      mp[h] = v;\r\n    }\r\n    for (auto v : f.back()) {\r\n      i64 c = 0;\r\n      for (int i = 0; i < v.size(); i += 1) {\r\n        c = (c + (v.size() + i + 1) * p[v[i] == 1 ? 2 : v[i] * 2 - 1]) % mod;\r\n      }\r\n      if (mp.contains((h + mod - c) % mod)) {\r\n        for (int x : mp[(h + mod - c) % mod]) { cout << x * 2 - 1 << \" \"; }\r\n        for (int x : v) { cout << (x == 1 ? 2 : x * 2 - 1) << \" \"; }\r\n        return 0;\r\n      }\r\n    }\r\n  }\r\n  {\r\n    unordered_map<i64, vector<int>> mp;\r\n    for (auto v : f.back()) {\r\n      i64 h = 0;\r\n      for (int i = 0; i < v.size(); i += 1) {\r\n        h = (h + (i + 1) * p[v[i] == 1 ? 2 : v[i] * 2 - 1]) % mod;\r\n      }\r\n      mp[h] = v;\r\n    }\r\n    for (auto v : f.back()) {\r\n      i64 c = 0;\r\n      for (int i = 0; i < v.size(); i += 1) {\r\n        c = (c + (v.size() + i + 1) * p[v[i] * 2 - 1]) % mod;\r\n      }\r\n      if (mp.contains((h + mod - c) % mod)) {\r\n        for (int x : mp[(h + mod - c) % mod]) {\r\n          cout << (x == 1 ? 2 : x * 2 - 1) << \" \";\r\n        }\r\n        for (int x : v) { cout << x * 2 - 1 << \" \"; }\r\n        return 0;\r\n      }\r\n    }\r\n  }\r\n  cout << \"-1\";\r\n}"
}