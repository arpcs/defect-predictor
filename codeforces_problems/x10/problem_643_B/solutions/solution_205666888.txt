{
    "id": 205666888,
    "contestId": 643,
    "creationTimeSeconds": 1683951074,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 643,
        "index": "B",
        "name": "Bear and Two Paths",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "graphs"
        ]
    },
    "author": {
        "contestId": 643,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1462633500
    },
    "programmingLanguage": "Python 3",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "import math\n\ninp=lambda:map(int,input().split())\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    # n,k = inp()\n    l = list(inp())\n    sr = sorted(l)\n\n    count = 0; i = 0\n\n    while i<n:\n        if len(sr)<sr[0]:\n            break\n        if i==0:\n            count+=sr.count(i+1)\n            sr = [x for x in sr if x != i+1]\n            if len(sr)==0:\n                break\n            sr = sr[::-1]\n            i=sr[0]\n            # print(i,sr)\n            continue\n\n        if len(sr)>=i:\n            count += 1\n            del sr[0:i]\n            if len(sr)==0:\n                break\n            i = sr[0]\n    print(count)\n\n\n \t\t \t\t\t\t\t\t \t\t \t  \t\t\t\t\t  \t\t \t \t\t"
}