{
    "id": 166465806,
    "contestId": 643,
    "creationTimeSeconds": 1659348882,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 643,
        "index": "B",
        "name": "Bear and Two Paths",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1600,
        "tags": [
            "constructive algorithms",
            "graphs"
        ]
    },
    "author": {
        "contestId": 643,
        "members": [
            {
                "handle": "mianyang01"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1462633500
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 48,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include<ios>\r\nint n,k,a,b,c,d,i;void g(){for(i=n;i;--i)if(i!=a&&i!=b&&i!=c&&i!=d)printf(\" %d\",i);}main(){scanf(\"%d%d%d%d%d%d\",&n,&k,&a,&b,&c,&d);(k>n&&n>4)?(printf(\"%d %d\",a,c),g(),printf(\" %d %d\\n%d %d\",d,b,c,a),g(),printf(\" %d %d\",b,d)):puts(\"-1\");}\r\n"
}