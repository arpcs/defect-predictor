{
    "contestId": 643,
    "index": "B",
    "name": "Bear and Two Paths",
    "type": "PROGRAMMING",
    "points": 1000.0,
    "rating": 1600,
    "tags": [
        "constructive algorithms",
        "graphs"
    ],
    "desc": {
        "title": "B. Bear and Two Paths",
        "statement": "<p>Bearland has <span class=\"tex-span\"><i>n</i></span> cities, numbered <span class=\"tex-span\">1</span> through <span class=\"tex-span\"><i>n</i></span>. Cities are connected via bidirectional roads. Each road connects two distinct cities. No two roads connect the same pair of cities.</p><p>Bear Limak was once in a city <span class=\"tex-span\"><i>a</i></span> and he wanted to go to a city <span class=\"tex-span\"><i>b</i></span>. There was no direct connection so he decided to take a long walk, visiting each city <span class=\"tex-font-style-bf\">exactly once</span>. Formally: </p><ul> <li> There is no road between <span class=\"tex-span\"><i>a</i></span> and <span class=\"tex-span\"><i>b</i></span>. </li><li> There exists a sequence (path) of <span class=\"tex-span\"><i>n</i></span> distinct cities <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\">1</sub>,\u2009<i>v</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>v</i><sub class=\"lower-index\"><i>n</i></sub></span> that <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\">1</sub>\u2009=\u2009<i>a</i></span>, <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>n</i></sub>\u2009=\u2009<i>b</i></span> and there is a road between <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>i</i>\u2009+\u20091</sub></span> for <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/23e5d4ea4f6228395f4a124f9060fbe08e8efbfc.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>. </li></ul><p>On the other day, the similar thing happened. Limak wanted to travel between a city <span class=\"tex-span\"><i>c</i></span> and a city <span class=\"tex-span\"><i>d</i></span>. There is no road between them but there exists a sequence of <span class=\"tex-span\"><i>n</i></span> distinct cities <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\">1</sub>,\u2009<i>u</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>u</i><sub class=\"lower-index\"><i>n</i></sub></span> that <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\">1</sub>\u2009=\u2009<i>c</i></span>, <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>n</i></sub>\u2009=\u2009<i>d</i></span> and there is a road between <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i></sub></span> and <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>i</i>\u2009+\u20091</sub></span> for <img align=\"middle\" class=\"tex-formula\" src=\"https://espresso.codeforces.com/23e5d4ea4f6228395f4a124f9060fbe08e8efbfc.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/>.</p><p>Also, Limak thinks that there are at most <span class=\"tex-span\"><i>k</i></span> roads in Bearland. He wonders whether he remembers everything correctly.</p><p>Given <span class=\"tex-span\"><i>n</i></span>, <span class=\"tex-span\"><i>k</i></span> and four distinct cities <span class=\"tex-span\"><i>a</i></span>, <span class=\"tex-span\"><i>b</i></span>, <span class=\"tex-span\"><i>c</i></span>, <span class=\"tex-span\"><i>d</i></span>, can you find possible paths <span class=\"tex-span\">(<i>v</i><sub class=\"lower-index\">1</sub>,\u2009...,\u2009<i>v</i><sub class=\"lower-index\"><i>n</i></sub>)</span> and <span class=\"tex-span\">(<i>u</i><sub class=\"lower-index\">1</sub>,\u2009...,\u2009<i>u</i><sub class=\"lower-index\"><i>n</i></sub>)</span> to satisfy all the given conditions? Find any solution or print <span class=\"tex-font-style-tt\">-1</span> if it's impossible.</p>",
        "inputSpecification": "<p>The first line of the input contains two integers <span class=\"tex-span\"><i>n</i></span> and <span class=\"tex-span\"><i>k</i></span> (<span class=\"tex-span\">4\u2009\u2264\u2009<i>n</i>\u2009\u2264\u20091000</span>, <span class=\"tex-span\"><i>n</i>\u2009-\u20091\u2009\u2264\u2009<i>k</i>\u2009\u2264\u20092<i>n</i>\u2009-\u20092</span>)\u00a0\u2014 the number of cities and the maximum allowed number of roads, respectively.</p><p>The second line contains four <span class=\"tex-font-style-bf\">distinct</span> integers <span class=\"tex-span\"><i>a</i></span>, <span class=\"tex-span\"><i>b</i></span>, <span class=\"tex-span\"><i>c</i></span> and <span class=\"tex-span\"><i>d</i></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>a</i>,\u2009<i>b</i>,\u2009<i>c</i>,\u2009<i>d</i>\u2009\u2264\u2009<i>n</i></span>).</p>",
        "outputSpecification": "<p>Print <span class=\"tex-font-style-tt\">-1</span> if it's impossible to satisfy all the given conditions. Otherwise, print two lines with paths descriptions. The first of these two lines should contain <span class=\"tex-span\"><i>n</i></span> distinct integers <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\">1</sub>,\u2009<i>v</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>v</i><sub class=\"lower-index\"><i>n</i></sub></span> where <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\">1</sub>\u2009=\u2009<i>a</i></span> and <span class=\"tex-span\"><i>v</i><sub class=\"lower-index\"><i>n</i></sub>\u2009=\u2009<i>b</i></span>. The second line should contain <span class=\"tex-span\"><i>n</i></span> distinct integers <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\">1</sub>,\u2009<i>u</i><sub class=\"lower-index\">2</sub>,\u2009...,\u2009<i>u</i><sub class=\"lower-index\"><i>n</i></sub></span> where <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\">1</sub>\u2009=\u2009<i>c</i></span> and <span class=\"tex-span\"><i>u</i><sub class=\"lower-index\"><i>n</i></sub>\u2009=\u2009<i>d</i></span>.</p><p>Two paths generate at most <span class=\"tex-span\">2<i>n</i>\u2009-\u20092</span> roads: <span class=\"tex-span\">(<i>v</i><sub class=\"lower-index\">1</sub>,\u2009<i>v</i><sub class=\"lower-index\">2</sub>),\u2009(<i>v</i><sub class=\"lower-index\">2</sub>,\u2009<i>v</i><sub class=\"lower-index\">3</sub>),\u2009...,\u2009(<i>v</i><sub class=\"lower-index\"><i>n</i>\u2009-\u20091</sub>,\u2009<i>v</i><sub class=\"lower-index\"><i>n</i></sub>),\u2009(<i>u</i><sub class=\"lower-index\">1</sub>,\u2009<i>u</i><sub class=\"lower-index\">2</sub>),\u2009(<i>u</i><sub class=\"lower-index\">2</sub>,\u2009<i>u</i><sub class=\"lower-index\">3</sub>),\u2009...,\u2009(<i>u</i><sub class=\"lower-index\"><i>n</i>\u2009-\u20091</sub>,\u2009<i>u</i><sub class=\"lower-index\"><i>n</i></sub>)</span>. Your answer will be considered wrong if contains more than <span class=\"tex-span\"><i>k</i></span> distinct roads or any other condition breaks. Note that <span class=\"tex-span\">(<i>x</i>,\u2009<i>y</i>)</span> and <span class=\"tex-span\">(<i>y</i>,\u2009<i>x</i>)</span> are the same road.</p>",
        "samples": [
            {
                "input": "7 11<br/>2 4 7 3<br/>",
                "output": "2 7 1 3 6 5 4<br/>7 1 5 4 6 2 3<br/>"
            },
            {
                "input": "1000 999<br/>10 20 30 40<br/>",
                "output": "-1<br/>"
            }
        ],
        "note": "<p>In the first sample test, there should be <span class=\"tex-span\">7</span> cities and at most <span class=\"tex-span\">11</span> roads. The provided sample solution generates <span class=\"tex-span\">10</span> roads, as in the drawing. You can also see a simple path of length <span class=\"tex-span\"><i>n</i></span> between <span class=\"tex-span\">2</span> and <span class=\"tex-span\">4</span>, and a path between <span class=\"tex-span\">7</span> and <span class=\"tex-span\">3</span>.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/58dec3e8514751ba57473ff99eae98f6a4c57658.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center>"
    }
}