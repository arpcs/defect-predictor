{
    "id": 225254961,
    "contestId": 665,
    "creationTimeSeconds": 1695730652,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 665,
        "index": "F",
        "name": "Four Divisors",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "data structures",
            "dp",
            "math",
            "number theory",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 665,
        "members": [
            {
                "handle": "AnosVoldigoad"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461164400
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 9,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 9011200,
    "source": "#include<bits/stdc++.h>\r\n#define int ll\r\n#define rep(i, a, b) for(int i = (a);i <= (b);++i)\r\n#define per(i, a, b) for(int i = (a);i >= (b);--i)\r\n#define lc (k << 1)\r\n#define rc (k << 1 | 1)\r\n#define odd(x) (x & 1)\r\n#define even(x) (!odd(x))\r\n#define pb(x) push_back(x)\r\n#define fir first\r\n#define sec second\r\n#define all(x) begin(x), end(x)\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\nusing namespace std;\r\nconst int inf = 0x3f3f3f3f;\r\nconst ll llinf = 0x3f3f3f3f3f3f3f3fll;\r\n\r\nconst int N = 1e6 + 5;\r\nint prime[N], cnt;\r\nbool isPrime[N];\r\n\r\nvoid getPrime(int n) {\r\n    memset(isPrime, 1, sizeof(isPrime));\r\n    isPrime[1] = 0;\r\n    rep(i, 2, n) {\r\n        if(isPrime[i])\r\n            prime[++cnt] = i;\r\n        for(int j = 1;j <= cnt && i * prime[j] <= n;++j) {\r\n            isPrime[i * prime[j]] = 0;\r\n            if(i % prime[j] == 0)\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nsigned main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr), cout.tie(nullptr);\r\n    getPrime(1000000);\r\n    ll n, res = 0;\r\n    cin >> n;\r\n    rep(i, 1, cnt - 1) {\r\n        if(prime[i] * prime[i + 1] > n)\r\n            break;\r\n        int l = i + 1, r = cnt, ans = i + 1;\r\n        while(l <= r) {\r\n            int mid = l + r >> 1;\r\n            if(prime[i] * prime[mid] <= n) {\r\n                ans = mid;\r\n                l = mid + 1;\r\n            } else\r\n                r = mid - 1;\r\n        }\r\n        res += ans - i + (prime[i] * prime[i] * prime[i] <= n);\r\n    }\r\n    cout << res << \"\\n\";\r\n    return 0;\r\n}"
}