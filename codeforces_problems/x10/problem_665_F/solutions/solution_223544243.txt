{
    "id": 223544243,
    "contestId": 665,
    "creationTimeSeconds": 1694821574,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 665,
        "index": "F",
        "name": "Four Divisors",
        "type": "PROGRAMMING",
        "rating": 2400,
        "tags": [
            "data structures",
            "dp",
            "math",
            "number theory",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 665,
        "members": [
            {
                "handle": "saelcc03"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1461164400
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 27,
    "timeConsumedMillis": 2714,
    "memoryConsumedBytes": 225177600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define maxn 320000\r\ntypedef long long ll;\r\n#define int long long\r\nbool isprime[maxn];\r\nvoid cb(){\r\n    for(int i=2;i<maxn;i++)isprime[i]=true;\r\n    for(int i=2;i<maxn;i++){\r\n        if(isprime[i]){\r\n            for(int j=i*i;j<maxn;j+=i)isprime[j]=false;\r\n        }\r\n    }\r\n}\r\n//for practical purposes, vp[0]=-1. vp[1]=2, vp[2]=3, vp[n]=nth prime...Take this into account!\r\nvector<ll> vp;\r\ninline void hash_combine(ll & seed, ll v)\r\n{\r\n  seed ^= v + 0x9e3779b9 + (seed << 6) + (seed >> 2);\r\n}\r\nstruct hasher\r\n{\r\n  ll operator()(const pair<ll,ll>& v) const\r\n  {\r\n\tll seed = 0;\r\n    hash_combine(seed, v.first);\r\n    hash_combine(seed, v.second);\r\n    return seed;\r\n  }\r\n};\r\nunordered_map<pair<ll,ll>,ll,hasher> mp;\r\nll phi(ll x, ll a){\r\n\tif (mp.count(make_pair(x,a)))\r\n\t\treturn mp[make_pair(x,a)];\r\n\tif (a == 1)\r\n\t\treturn (x + 1)/ 2;\r\n\tll t = phi(x, a-1) - phi(x /vp[a], a-1);\r\n\treturn mp[make_pair(x, a)] = t;\r\n}\r\nchar sp[1000000];\r\nll np[1000000];\r\nll root(ll x, double p){\r\n\treturn pow((double)x,1/p)+1e-10;\r\n}\r\nunordered_map<ll,ll> mpi;\r\n//counts primes <=x in time x^(2/3)\r\nll pi(ll x){\r\n\tif (x < 1000000) return np[x];\r\n\tif (mpi[x]) return mpi[x];\r\n\tll a = pi(root(x, 4));\r\n\tll b = pi(root(x, 2));\r\n\tll c = pi(root(x, 3));\r\n\tll sum = phi(x,a) + (b+a-2) * (b-a+1) / 2;\r\n\tfor (ll i=a+1;i<=b;++i)\r\n\t\tsum-= pi(x/vp[i]);\r\n\tfor (ll i=a+1;i<=c;++i){\r\n\t\tll w=pi(root(x/vp[i],2));\r\n\t\tfor(ll j=i;j<=w;++j)\r\n\t\t\tsum-= pi(x/(vp[i]*vp[j]))-(j-1);\r\n\t}\r\n\treturn mpi[x]=sum;\r\n}\r\n\r\nvoid init_pi(){\r\n\tmemset(sp,1,sizeof sp);\r\n\tsp[0]=sp[1]=0;\r\n\t//for practical purposes, vp[0]=-1. vp[1]=2, vp[2]=3, vp[n]=nth prime...Take this into account!\r\n\tvp.push_back(-1);\r\n\tfor(int i=2;i<1000000;++i){\r\n\t\tif(sp[i]==0) continue;\r\n\t\tvp.push_back(i);\r\n\t\tfor(int j=2*i;j<1000000;j+=i)\r\n\t\t\tsp[j]=0;\r\n\t}\r\n\tnp[0]=np[1]=0;\r\n\tfor(int i=2;i<1000000;++i)\r\n\t\tnp[i]=sp[i]+np[i-1];\r\n}\r\nint32_t main(){\r\n\tint n;\r\n\tcin>>n;\r\n    cb();\r\n\tinit_pi();\r\n    ll ans=0;\r\n    for(ll i=2;i<=root(n,2);i++){\r\n        if(isprime[i] and i<n/i){\r\n            ans+=pi(n/i)-pi(i);\r\n        }\r\n    }\r\n    ans+= pi(root(n,3));\r\n\r\n    cout<<ans<<endl;\r\n}"
}