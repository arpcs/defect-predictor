{
    "id": 220495696,
    "contestId": 1380,
    "creationTimeSeconds": 1693045809,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1380,
        "index": "F",
        "name": "Strange Addition",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "data structures",
            "dp",
            "matrices"
        ]
    },
    "author": {
        "contestId": 1380,
        "members": [
            {
                "handle": "cycyyds"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1594565100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 31,
    "timeConsumedMillis": 1123,
    "memoryConsumedBytes": 76902400,
    "source": "// LUOGU_RID: 122886451\n#include<bits/stdc++.h>\r\n#define cir(i,a,b) for(int i=a;i<b;++i)\r\nusing namespace std;\r\nusing lint=long long;\r\nusing VI=vector<lint>;\r\nconst int MOD=998244353;\r\ntemplate<int mod>\r\nclass matrix{\r\nprivate:\r\n    array<array<lint,2>,2> mat;\r\npublic:\r\n    auto&operator[](int x){\r\n        return mat[x];\r\n    }\r\n    auto operator*(matrix m) const{\r\n        matrix<mod> res;\r\n        cir(k,0,2) cir(i,0,2){\r\n            cir(j,0,2){\r\n                (res[i][j]+=mat[i][k]*\r\n                    m[k][j]%mod)%=mod;\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    void clear(){\r\n        cir(x,0,2) cir(y,0,2) mat[x][y]=0;\r\n    }\r\n    matrix(){clear();}\r\n};\r\nclass segment{\r\nprivate:\r\n    struct node{\r\n        matrix<MOD> d;\r\n    };\r\n    vector<node> tr;VI c;\r\n    int ls(int u){return u*2;}\r\n    int rs(int u){return u*2+1;}\r\n    void maintain(int u){\r\n        tr[u].d=tr[rs(u)].d*tr[ls(u)].d;\r\n    }\r\n    void setnode(int u,int p){\r\n        tr[u].d[1][0]=1;tr[u].d[0][0]=c[p]+1;\r\n        tr[u].d[0][1]=(c[p-1]==1)*(9-c[p]);\r\n    }\r\n    void build(int u,int l,int r){\r\n        if(l==r) return setnode(u,l);\r\n        const int mid=(l+r)/2;\r\n        build(ls(u),l,mid);\r\n        build(rs(u),mid+1,r);\r\n        maintain(u);\r\n    }\r\n    void update(int u,int l,int r,int p){\r\n        if(l==r) return setnode(u,p);\r\n        const int mid=(l+r)/2;\r\n        p<mid+1?update(ls(u),l,mid,p):\r\n            update(rs(u),mid+1,r,p);\r\n        maintain(u);\r\n    }\r\n    int n;\r\npublic:\r\n    void update(int p,lint w){\r\n        c[p]=w;update(1,1,n,p);\r\n        if(p<n) update(1,1,n,p+1);\r\n    }\r\n    auto export_result(){\r\n        return tr[1].d[0][0];\r\n    }\r\n    segment(VI cx):c(cx),tr(cx.size()<<2){\r\n        build(1,1,(n=cx.size()-1));\r\n    }\r\n};\r\nauto init(){\r\n    string s;cin>>s;\r\n    VI c(1);\r\n    for(auto&i:s) c.push_back(i-'0');\r\n    return c;\r\n}\r\nint main(){\r\n    ios::sync_with_stdio(false),cin.tie(0);\r\n    int n,q;cin>>n>>q;\r\n    auto c=init();\r\n    segment seg(c);\r\n    cir(i,0,q){\r\n        int p;lint w;cin>>p>>w;\r\n        seg.update(p,w);\r\n        cout<<seg.export_result()<<'\\n';\r\n    }\r\n    return 0;\r\n}\r\n"
}