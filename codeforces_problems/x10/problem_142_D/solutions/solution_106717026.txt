{
    "id": 106717026,
    "contestId": 142,
    "creationTimeSeconds": 1612677072,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 142,
        "index": "D",
        "name": "Help Shrek and Donkey 2",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2600,
        "tags": [
            "games"
        ]
    },
    "author": {
        "contestId": 142,
        "members": [
            {
                "handle": "yuanhaowei"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1326380700
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 60,
    "memoryConsumedBytes": 0,
    "source": "#include <cstdio>\r\nusing namespace std;\r\n\r\nconst int maxn = 110;\r\nint c[maxn];\r\n\r\nint main() {\r\n    int n, m, k;\r\n    scanf(\"%d %d %d\", &n, &m, &k);\r\n    int g, r;\r\n    bool fG = false, fR = false;\r\n    char ch = getchar();\r\n    for (int i = 1; i <= n; i++) {\r\n        g = r = 0;\r\n        while (ch != '-' && ch != 'G' && ch != 'R') ch = getchar();\r\n        for (int j = 1; j <= m; j++) {\r\n            g += (ch == 'G') * j, r += (ch == 'R') * j;\r\n            ch = getchar();\r\n        }\r\n        if (!g)\r\n            fR = true;\r\n        else if (!r)\r\n            fG = true;\r\n        else\r\n            c[i] = g > r ? g - r - 1 : r - g - 1;\r\n    }\r\n    int cnt;\r\n    bool flag = false;\r\n    switch (fG + fR) {\r\n        case 0:\r\n            for (int i = 0; i < 7; i++) {\r\n                cnt = 0;\r\n                for (int j = 1; j <= n; j++) cnt += (c[j] >> i) & 1;\r\n                if (cnt % (k + 1)) {\r\n                    flag = true;\r\n                    break;\r\n                }\r\n            }\r\n            printf(flag ? \"First\" : \"Second\");\r\n            break;\r\n        case 1:\r\n            printf(fG ? \"First\" : \"Second\");\r\n            break;\r\n        case 2:\r\n            printf(\"Draw\\n\");\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return 0;\r\n}\r\n"
}