{
    "id": 227207862,
    "contestId": 150,
    "creationTimeSeconds": 1696774730,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 150,
        "index": "A",
        "name": "Win or Freeze",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1400,
        "tags": [
            "games",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 150,
        "members": [
            {
                "handle": "SirElite"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1329490800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 266752000,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define ll long long\r\n#define endl \"\\n\"\r\n#define fast ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\r\n\r\nconst unsigned int N=2e9+1e8+3e7;\r\nbitset<N> prime;\r\nint ctr;\r\nll last_divisor = 0,before_last_divisor = 0;\r\n\r\nbool player1_win (ll n){\r\n    ctr=0;\r\n    prime.set();\r\n    prime[0]=prime[1]=false;\r\n    if(n%2 == 0){\r\n        before_last_divisor=last_divisor;\r\n        last_divisor=2;\r\n    }\r\n    while(n%2 == 0){\r\n        n/=2;\r\n        ctr++;\r\n    }\r\n    ll i;\r\n    for (i = 3 ; i <= 3163000 ; i+=2){\r\n        if (prime[i]){\r\n            if(n%i == 0){\r\n                for (ll j = 2*i ; j <= N and j <= n ; j+=i){\r\n                    prime[j]=false;\r\n                }\r\n                before_last_divisor=last_divisor;\r\n                last_divisor=i;\r\n            }\r\n            while (n%i == 0){\r\n                n /= i;\r\n                ctr++;\r\n            }\r\n            if(ctr == 3){\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return ctr != 2 and n < 3163000;\r\n}\r\n\r\n\r\nint main() {\r\n    fast\r\n\r\n    ll q;\r\n    cin >> q;\r\n\r\n    if(player1_win(q)){\r\n        if (ctr == 1){\r\n            last_divisor = 0;\r\n        }\r\n        if(ctr > 2 and before_last_divisor==0){\r\n            before_last_divisor = last_divisor;\r\n        }\r\n        cout << 1 << endl << last_divisor*before_last_divisor ;\r\n    }else{\r\n        cout << 2 ;\r\n    }\r\n\r\n    return 0;\r\n}"
}