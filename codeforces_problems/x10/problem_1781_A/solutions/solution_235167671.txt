{
    "id": 235167671,
    "contestId": 1781,
    "creationTimeSeconds": 1701406908,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1781,
        "index": "A",
        "name": "Parallel Projection",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 800,
        "tags": [
            "geometry",
            "math"
        ]
    },
    "author": {
        "contestId": 1781,
        "members": [
            {
                "handle": "Shahrear_Al_Sakib"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1673784300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "/*\r\n \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584  \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584  \u2584    \u2584  \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584  \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584  \r\n\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u2590\u2591\u258c  \u2590\u2591\u258c\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c \r\n\u2590\u2591\u2588\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580 \u2590\u2591\u2588\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2588\u2591\u258c\u2590\u2591\u258c \u2590\u2591\u258c  \u2580\u2580\u2580\u2580\u2588\u2591\u2588\u2580\u2580\u2580\u2580 \u2590\u2591\u2588\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2588\u2591\u258c\r\n\u2590\u2591\u258c          \u2590\u2591\u258c       \u2590\u2591\u258c\u2590\u2591\u258c\u2590\u2591\u258c       \u2590\u2591\u258c     \u2590\u2591\u258c       \u2590\u2591\u258c\r\n\u2590\u2591\u2588\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584 \u2590\u2591\u2588\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2588\u2591\u258c\u2590\u2591\u258c\u2591\u258c        \u2590\u2591\u258c     \u2590\u2591\u2588\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2588\u2591\u258c\r\n\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u2590\u2591\u2591\u258c         \u2590\u2591\u258c     \u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c \r\n \u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2588\u2591\u258c\u2590\u2591\u2588\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2588\u2591\u258c\u2590\u2591\u258c\u2591\u258c        \u2590\u2591\u258c     \u2590\u2591\u2588\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2588\u2591\u258c\r\n          \u2590\u2591\u258c\u2590\u2591\u258c       \u2590\u2591\u258c\u2590\u2591\u258c\u2590\u2591\u258c       \u2590\u2591\u258c     \u2590\u2591\u258c       \u2590\u2591\u258c\r\n \u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2588\u2591\u258c\u2590\u2591\u258c       \u2590\u2591\u258c\u2590\u2591\u258c \u2590\u2591\u258c  \u2584\u2584\u2584\u2584\u2588\u2591\u2588\u2584\u2584\u2584\u2584 \u2590\u2591\u2588\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2588\u2591\u258c\r\n\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u2590\u2591\u258c       \u2590\u2591\u258c\u2590\u2591\u258c  \u2590\u2591\u258c\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c\u2590\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u258c \r\n \u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580  \u2580         \u2580  \u2580    \u2580  \u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580  \u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580  \r\n*/\r\n \r\n#include<bits/stdc++.h>\r\n#define int long long int\r\n#define yes cout << \"YES\" << endl\r\n#define no cout << \"NO\" << endl\r\n#define pb push_back\r\n#define all(X) (X).begin(), (X).end()\r\n#define np cout << -1 << endl\r\n#define rn return\r\n#define cout(a) cout << a << endl\r\nusing namespace std;\r\n \r\nint dx[]={0, 0, 1, -1, 1, 1, -1, -1};\r\nint dy[]={1, -1, 0, 0, 1, -1, 1, -1};\r\nint mx = INT_MIN;\r\nint mn = INT_MAX;\r\n\r\n/*binPow , findPrimeFactors , printBinary*/\r\n//  ==============================================================================================\r\nint binPow(int base , int exponent){int result = 1;while(exponent > 0){if (exponent % 2 == 1)base=\r\nbase * base;exponent = exponent / 2;}return result;}map <int , int> findPrimeFactors(int num){map<\r\nint , int> result;while (num % 2 == 0) {result[2]++;num /= 2;}for (int i = 3; i * i <= num; i += 2)\r\n{while (num % i == 0) {result[i]++;num /= i;}}if (num > 2) {result[num]++;}return result;}   string\r\nprintBinary(int number){std::bitset<CHAR_BIT * sizeof(number)> binary(number);          std::string \r\nbinaryString = binary.to_string();size_t firstNonZero = binaryString.find_first_not_of('0');\r\nif (firstNonZero != std::string::npos) {binaryString = binaryString.substr(firstNonZero);} else {\r\nbinaryString = \"0\";}return binaryString;}\r\n//  ==============================================================================================\r\n\r\n\r\nvoid solve(){\r\n    int w , d , h ;\r\n    cin >> w >> d >> h ;\r\n    int a , b , f , g ;\r\n    cin >> a >> b >> f >> g ;\r\n    int x = min(a + f , 2*w - a - f) + abs(b - g);\r\n    int y = min(b + g, 2*d - b - g) + abs(a - f);\r\n    cout << min (x , y) + h << endl;\r\n}\r\n\r\n        \r\nint32_t main(){\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL); \r\n \r\n    int t = 1;\r\n    cin >> t;\r\n    while(t--){\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n"
}