{
    "id": 213960319,
    "contestId": 895,
    "creationTimeSeconds": 1689453910,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 895,
        "index": "B",
        "name": "XK Segments",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1700,
        "tags": [
            "binary search",
            "math",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 895,
        "members": [
            {
                "handle": "aggarwal.mayank021"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1511712300
    },
    "programmingLanguage": "Java 8",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 124,
    "memoryConsumedBytes": 0,
    "source": "import java.util.*;\r\n\r\npublic final class Solution {\r\n\r\n    public static void main(String[] args) {\r\n        Scanner sc = new Scanner(System.in);\r\n        int n = sc.nextInt();\r\n        int x = sc.nextInt();\r\n        int k = sc.nextInt();\r\n        long[] arr=new long[n];\r\n        \r\n        for(int i=0;i<n;i++) {\r\n            arr[i]=sc.nextInt();\r\n        }\r\n        Arrays.sort(arr);\r\n        \r\n        long ans=0;\r\n        \r\n        long prev=-1;\r\n        long prevCount=0;\r\n        int start=0;\r\n        int end=0;\r\n        while(start!=n) {\r\n            if(prev!=-1) {\r\n                if (arr[start] == prev) {\r\n                    ans += prevCount;\r\n                    start++;\r\n                    continue;\r\n                }\r\n                \r\n                long c=check(prev, arr[start]-1, x);\r\n                if(c==0) {\r\n                    ans += prevCount;\r\n                    start++;\r\n                    prev=arr[start];\r\n                    continue;\r\n                }else  {\r\n                    prevCount=0;\r\n                    if(end>=n) {\r\n                    break;\r\n                    }\r\n                }\r\n                \r\n            }\r\n            long count = check(arr[start],arr[end], x);\r\n            if(count==k) {\r\n                ans++;\r\n                prevCount++;\r\n                end++;\r\n            }else if(count>k) {\r\n                prev=arr[start];\r\n                start++;\r\n            }else {\r\n                end++;\r\n            }\r\n            \r\n            if(end==n) {\r\n                prev=arr[start];\r\n                end--;\r\n                start++;\r\n            }\r\n           \r\n        }\r\n        System.out.println(ans);\r\n    }\r\n\r\n    public static long check(long a, long b, long x) {\r\n        long count1 = a / x;\r\n        if (a % x != 0) {\r\n            count1++;\r\n        }\r\n        long count2 = b / x;\r\n        return (count2 - count1 + 1);\r\n\r\n    }\r\n\r\n}\r\n"
}