{
    "id": 213526680,
    "contestId": 895,
    "creationTimeSeconds": 1689172902,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 895,
        "index": "B",
        "name": "XK Segments",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1700,
        "tags": [
            "binary search",
            "math",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 895,
        "members": [
            {
                "handle": "VladimirAnisimov"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1511712300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 69,
    "timeConsumedMillis": 202,
    "memoryConsumedBytes": 2048000,
    "source": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nvector<__int64> a;\r\n__int64 n, x, k;\r\n\r\n__int64 findr(__int64 p){\r\n    int l=0, r=n;\r\n    __int64 m=0;\r\n    while(l<=r and ((l+r)/2!=n)){\r\n        m=(l+r)/2;\r\n        if(a[m]>p){\r\n            r=m-1;\r\n            m=r;\r\n        }\r\n        else{\r\n            l=m+1;\r\n            m=l;\r\n        }\r\n    }\r\n    while(a[m]>p and m>0){\r\n        --m;\r\n    }\r\n    while(a[m]<=p and m<n){\r\n        ++m;\r\n    }\r\n    return m-1;\r\n}\r\n\r\n__int64 findl(__int64 p){\r\n    int l=0, r=n;\r\n    int m=0;\r\n    while(l<=r){\r\n        m=(l+r)/2;\r\n        if(a[m]>=p){\r\n            r=m-1;\r\n            m=r;\r\n        }\r\n        else{\r\n            l=m+1;\r\n            m=l;\r\n        }\r\n    }\r\n    while(a[m]<p and m<n){\r\n        ++m;\r\n    }\r\n    while(a[m]>=p and m>0){\r\n        --m;\r\n    }\r\n    return m+1;\r\n}\r\n\r\nint main(){\r\n    cin>>n>>x>>k;\r\n    for(__int64 i=0; i<n; ++i){\r\n        __int64 temp=0;\r\n        cin>>temp;\r\n        a.push_back(temp);\r\n    }\r\n    sort(a.begin(), a.end());\r\n    __int64 ans=0;\r\n    for(__int64 i=0; i<n; ++i){\r\n        __int64 skip=findr(a[i]);\r\n        if(a[i]%x==0){\r\n            __int64 l = a[i]/x*x +x*(k-1);\r\n            __int64 l_b = findl(l);\r\n            __int64 r=a[i]/x*x +x*(k-1) + x-1;\r\n            __int64 r_b=findr(r);\r\n            if(k-1>0){\r\n                if(r_b>=l_b)\r\n                    ans+=((r_b - l_b + 1)*(skip-i+1));\r\n            }\r\n            else if(k==1){\r\n                ans+=((skip - i + 1)*(skip - i + 1));\r\n                ans+=((skip - l_b + 1)*(r_b-skip));\r\n            }\r\n    // cout<<l_b<<' '<<r_b<<' '<<l<<' '<<r<<'\\n';\r\n        }\r\n        else{\r\n            __int64 l=a[i]/x*x + x*k;\r\n            // cout<<l<<' '<<a[i]<<'\\n';\r\n            if (l<a[i]){\r\n                    l=a[i];\r\n            }\r\n            __int64 r=a[i]/x*x +x*k + x-1;\r\n            // cout<<r<<' '<<a[i]<<'\\n';\r\n            __int64 l_b, r_b;\r\n            l_b = findl(l);\r\n            r_b = findr(r);\r\n    // cout<<l_b<<' '<<r_b<<' '<<l<<' '<<r<<'\\n';\r\n            if(k>0){\r\n                if (a[i]==l){\r\n                    if(skip!=r_b){\r\n                        if (r_b>l_b)\r\n                            ans+=(r_b-skip+1)*(skip-i+1);\r\n                    }\r\n                    else{\r\n                        ans+=(r_b-skip+1)*(skip-i+1);\r\n                    }\r\n                }\r\n                else{\r\n                    if (r_b>=l_b)\r\n                        ans+=(r_b-l_b+1)*(skip-i+1);\r\n                }\r\n            }\r\n            else if(k==0){\r\n                ans+=((r_b - l_b + 1)*(skip - l_b + 1));\r\n            }\r\n        }\r\n// cout<<ans<<'\\n';\r\n        i=skip;\r\n    }\r\n    cout<<ans;\r\n    return 0;\r\n}"
}