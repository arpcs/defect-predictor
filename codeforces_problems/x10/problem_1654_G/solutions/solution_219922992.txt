{
    "id": 219922992,
    "contestId": 1654,
    "creationTimeSeconds": 1692713638,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1654,
        "index": "G",
        "name": "Snowy Mountain",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 2900,
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "greedy",
            "shortest paths",
            "trees"
        ]
    },
    "author": {
        "contestId": 1654,
        "members": [
            {
                "handle": "thebighead"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1647776100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 160,
    "timeConsumedMillis": 390,
    "memoryConsumedBytes": 19353600,
    "source": "#include<bits/stdc++.h>\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define db double\r\n#define ldb long double\r\n#define pb push_back\r\n#define mp make_pair\r\n#define pii pair<int, int>\r\n#define FR first\r\n#define SE second\r\nusing namespace std;\r\ninline int read() {\r\n  int x = 0; bool op = 0;\r\n  char c = getchar();\r\n  while(!isdigit(c))op |= (c == '-'), c = getchar();\r\n  while(isdigit(c))x = (x << 1) + (x << 3) + (c ^ 48), c = getchar();\r\n  return op ? -x : x;\r\n}\r\nconst int N = 2e5 + 10;\r\nconst int INF = 1e9;\r\nint n;\r\nint h[N], val[N], f[N];\r\nvector<int> st[N], G[N];\r\nint main() { \r\n  n = read();\r\n  for(int i = 1; i <= n; i++) {\r\n    int x = read();\r\n    h[i] = (x ? 0 : INF);\r\n  }\r\n  for(int i = 1; i < n; i++) {\r\n    int u = read(), v = read();\r\n    G[u].pb(v); G[v].pb(u);\r\n  }\r\n  auto bfs = [&]() {\r\n    queue<int> q;\r\n    for(int i = 1; i <= n; i++)if(h[i] == 0)q.push(i);\r\n    while(q.empty() == false) {\r\n      int u = q.front(); q.pop();\r\n      for(int v : G[u]) {\r\n        if(h[v] > h[u] + 1) {\r\n          h[v] = h[u] + 1;\r\n          q.push(v);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  bfs();\r\n  for(int u = 1; u <= n; u++) {\r\n    int ok = 0;\r\n    for(int v : G[u])ok |= (h[u] == h[v]);\r\n    if(ok)st[h[u]].pb(u);\r\n  }\r\n  for(int i = 1; i <= n; i++)val[i] = h[i];\r\n  // for(int i = 1; i <= n; i++)printf(\"%d \", h[i]); putchar('\\n'); \r\n  for(int t = 0; t <= n; t++)if(st[t].size()) {\r\n    for(int i = 1; i <= n; i++)f[i] = INF;\r\n    deque<int> q;\r\n    for(int v : st[t])f[v] = 0, q.push_back(v);\r\n    while(q.empty() == false) {\r\n      int u = q.front(); q.pop_front();\r\n      // cerr << u << ' ' << f[u] << endl;\r\n      for(int v : G[u]) {\r\n        if(h[v] > h[u] && f[u] - 1 < f[v])\r\n          f[v] = f[u] - 1, q.push_front(v);\r\n        else if(h[v] == h[u] && max(f[u] + 1, 1) < f[v])\r\n          f[v] = max(f[u] + 1, 1), q.push_back(v);\r\n      }\r\n    }\r\n    // printf(\"t:%d\\n\", t);\r\n    // for(int i = 1; i <= n; i++)if(f[i] <= 0)printf(\"%d \", i); putchar('\\n');\r\n    for(int i = 1; i <= n; i++)if(f[i] <= 0)val[i] = min(val[i], t);\r\n  }\r\n  for(int i = 1; i <= n; i++)printf(\"%d \", h[i] * 2 - val[i]);\r\n  return 0;\r\n}"
}