{
    "id": 230468598,
    "contestId": 1654,
    "creationTimeSeconds": 1698655422,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1654,
        "index": "G",
        "name": "Snowy Mountain",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 2900,
        "tags": [
            "data structures",
            "dfs and similar",
            "graphs",
            "greedy",
            "shortest paths",
            "trees"
        ]
    },
    "author": {
        "contestId": 1654,
        "members": [
            {
                "handle": "nguyenquocthinhhung"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1647776100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 160,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 20172800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int N = 2e5 + 5;\r\n\r\nint n, d[N], z[N], c[N], q[N << 1], l, r, u, v;\r\nvector<int> G[N], a[N];\r\n\r\nint main() {\r\ncin.tie(0)->sync_with_stdio(0);\r\ncin >> n;\r\nfor(int i = 0; i < n; i++) cin >> d[i], d[i] ? q[r++] = i : 0;\r\nfor(int i = 1; i < n; i++) cin >> u >> v, G[--u].push_back(--v), G[v].push_back(u);\r\nwhile(l < r) for(int v : G[u = q[l++]]) if(!d[v]) d[q[r++] = v] = d[u] + 1;\r\nfor(int u = 0; u < n; u++) for(int v : G[u]) if(d[u] == d[v]) { a[d[u]].push_back(u); break; }\r\nmemset(c, 63, sizeof c);\r\nfor(int i = n; i; i--) if(a[i].size()) {\r\nl = r = 0, memset(z, 63, sizeof z);\r\nfor(int u : a[i]) z[q[r++] = u] = 0;\r\nwhile(l < r) for(int v : G[u = q[l++]]) if(d[v] >= d[u]) if(int w = max(z[u] + (d[v] > d[u] ? -1 : 1), 0); w < z[v]) z[q[r++] = v] = w;\r\nfor(int u = 0; u < n; u++) if(!z[u]) c[u] = i;\r\n}\r\nfor(int i = 0; i < n; i++) cout << d[i] * 2 - min(d[i], c[i]) - 1 << ' ';\r\n}"
}