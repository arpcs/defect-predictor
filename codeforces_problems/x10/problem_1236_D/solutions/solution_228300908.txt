{
    "id": 228300908,
    "contestId": 1236,
    "creationTimeSeconds": 1697375756,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1236,
        "index": "D",
        "name": "Alice and the Doll",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2300,
        "tags": [
            "brute force",
            "data structures",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1236,
        "members": [
            {
                "handle": "sakurasonic"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1571319300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 4915200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int N = 1e5;\r\nset <int> vert[N];\r\nset <int> horiz[N];\r\nint v[10][10];\r\nll cnt = 0;\r\nll total = 0;\r\nvoid solve(int n,int m,int dir = 0,int dx = 0,int dy = 0){\r\n    if(n <= 0 || m <= 0)return;\r\n    //cout<<n<<' '<<m<<' '<<dir<<' '<<dx<<' '<<dy<<'\\n';\r\n    if(dir == 0){\r\n        int pos;\r\n        if(horiz[dx].empty()){\r\n            cnt+=m;\r\n            //cout<<\"+\"<<m<<'\\n';\r\n            return solve(n - 1,m,1,dx + 1,dy);\r\n        }\r\n        pos = *horiz[dx].begin();\r\n        cnt+=(pos - dy);\r\n        //cout<<\"+\"<<pos - dy<<'\\n';\r\n        solve(n - 1,pos - 1,1,dx + 1,dy);\r\n    }else if(dir == 1){\r\n        if(vert[m - 1 + dy].empty()){\r\n            cnt+=n;\r\n            //cout<<\"+\"<<n<<'\\n';\r\n            return solve(n,m - 1,2,dx,dy);\r\n        }\r\n        int pos = *vert[m - 1 + dy].begin();\r\n        cnt+=(pos - dx);\r\n        //cout<<\"+\"<<pos - dx<<'\\n';\r\n        solve(pos - 1,m - 1,2,dx,dy);\r\n    }else if(dir == 2){\r\n        if(horiz[n - 1 + dx].empty()){\r\n            cnt+=m;\r\n            //cout<<\"+\"<<m<<'\\n';\r\n            return solve(n - 1,m,3,dx,dy);\r\n        }\r\n        int pos = *horiz[n - 1 + dx].rbegin();\r\n        cnt+=m - (pos - dy) - 1;\r\n        //cout<<\"+\"<<m - (pos - dy) - 1<<' '<<pos - dy<<' '<<m - 1<<'\\n';\r\n        solve(n - 1,m - pos - 1,3,dx,dy + pos + 1);\r\n    }else{\r\n        if(vert[dy].empty()){\r\n            cnt+=n;\r\n            //cout<<\"+\"<<n<<'\\n';\r\n            solve(n,m - 1,0,dx,dy + 1);\r\n        }\r\n        int pos = *vert[dy].rbegin();\r\n        cnt+=n - (pos - dx) - 1;\r\n        //cout<<\"+\"<<n - (pos - dx) - 1<<' '<<pos - dx<<' '<<n - 1<<'\\n';\r\n        solve(n - pos - 1,m - 1,0,dx + pos,dy + 1);\r\n    }\r\n}\r\nstring c[2] = {\"NO\",\"YES\"};\r\nint main(){\r\n    int n,m,k;\r\n    cin>>n>>m>>k;\r\n    total = 1ll*n*m;\r\n    for(int i = 0;i < k;i++){\r\n        int x,y;\r\n        cin>>x>>y;\r\n        v[x - 1][y - 1] = 1;\r\n        total--;\r\n        x--;y--;\r\n        vert[y].insert(x);\r\n        horiz[x].insert(y);\r\n    }\r\n    /*for(int i = 0;i < n;i++){\r\n        for(int j = 0;j < m;j++){\r\n            cout<<v[i][j];\r\n        }\r\n        cout<<'\\n';\r\n    }*/\r\n    solve(n,m);\r\n    //cout<<cnt<<'\\n';\r\n    cout<<c[cnt == total];\r\n    return 0;\r\n}\r\n"
}