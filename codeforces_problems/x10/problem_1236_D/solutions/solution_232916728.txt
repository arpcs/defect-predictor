{
    "id": 232916728,
    "contestId": 1236,
    "creationTimeSeconds": 1700102270,
    "relativeTimeSeconds": 7070,
    "problem": {
        "contestId": 1236,
        "index": "D",
        "name": "Alice and the Doll",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2300,
        "tags": [
            "brute force",
            "data structures",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1236,
        "members": [
            {
                "handle": "PMPuns"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1700095200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 57,
    "timeConsumedMillis": 265,
    "memoryConsumedBytes": 7475200,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define ii pair<int, int>\r\n#define vi vector<int>\r\n#define vii vector<pair<int, int>>\r\n#define vll vector<long long>\r\n#define vull vector<unsigned long long>\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define F(counter, start, end) for (ll counter = start; counter <= end; counter++)\r\n#define FD(i, r, l) for(ll i = r - 1; i > (l); --i)\r\n#define rep(i, a, b) for(int i = a; i < (b); ++i)\r\n#define all(x) begin(x), end(x)\r\n#define sz(x) (int)(x).size()\r\n#define L 20\r\n#define W(cond) while (cond)\r\n#define p(a, b) make_pair(a, b)\r\n#define MAXN 500010\r\n#define STSZ MAXN\r\n#define MOD 1000000007\r\nusing namespace std;\r\n\r\nll N, T, C, K, M, Q;\r\nset<pair<ll, ll>> obs;\r\nvector<vector<ll>> robs, cobs;\r\n\r\nbool rq(int row, ll l, ll r) {\r\n  return lower_bound(all(robs[row]), r) - lower_bound(all(robs[row]), l) == r - l;\r\n}\r\n\r\nbool cq(int col, ll l, ll r) {\r\n  ll res = lower_bound(all(cobs[col]), r) - lower_bound(all(cobs[col]), l);\r\n  return res == r - l;\r\n}\r\n\r\nll stopyi(int row, ll l) {\r\n  auto res = lower_bound(all(robs[row]), l);\r\n  if (res == robs[row].end()) return M+1;\r\n  else return *res;\r\n}\r\n\r\nll stopyd(int row, ll r) {\r\n  if (robs[row].empty()) return -1;\r\n  auto res = upper_bound(all(robs[row]), r);\r\n  if (res == robs[row].begin()) return -1;\r\n  else return *(--res);\r\n}\r\n\r\nll stopxi(int row, ll l) {\r\n  auto res = lower_bound(all(cobs[row]), l);\r\n  if (res == cobs[row].end()) return N+1;\r\n  else return *res;\r\n}\r\n\r\nll stopxd(int row, ll r) {\r\n  if (cobs[row].empty()) return -1;\r\n  auto res = upper_bound(all(cobs[row]), r);\r\n  if (res == cobs[row].begin()) return -1;\r\n  else return *(--res);\r\n}\r\nll x0 = 1, xf = 1, yo = 1, yf = 1;\r\n\r\nbool term() {\r\n  return xf < x0 || yf < yo;\r\n}\r\n\r\nint main() {\r\n  cin >> N >> M >> K;\r\n  int x, y;\r\n  robs.resize(N+1);\r\n  cobs.resize(M+1);\r\n  F(i, 1, K) {\r\n    cin >> x >> y;\r\n    robs[x].push_back(y);\r\n    cobs[y].push_back(x);\r\n  }\r\n  F(i, 1, N) sort(all(robs[i]));\r\n  F(i, 1, M) sort(all(cobs[i]));\r\n  xf = N, yf = M;\r\n  bool res = true;\r\n  while (!term() && res) {\r\n    ll s = stopyi(x0, yo);\r\n    if (s > yf) s = yf+1;\r\n    ll s2 = s;\r\n    while (s <= yf && res) {\r\n      if (!cq(s, x0, xf)) res = false;\r\n      s++;\r\n    }\r\n    x0++;\r\n    yf = s2 - 1;\r\n    if (term() || !res) break;\r\n    s = stopxi(yf, x0);\r\n    if (s > xf) s = xf+1;\r\n    s2 = s;\r\n    while (s <= xf && res) {\r\n      if (!rq(s, yo, yf)) res = false;\r\n      s++;\r\n    }\r\n    yf--;\r\n    xf = s2 - 1;\r\n    if (term() || !res) break;\r\n    s = stopyd(xf, yf);\r\n    if (s < yo) s = yo-1;\r\n    s2 = s;\r\n    while (s >= yo && res) {\r\n      if (!cq(s, x0, xf)) res = false;\r\n      s--;\r\n    }\r\n    xf--;\r\n    yo = s2 + 1;\r\n    if (term() || !res) break;\r\n    s = stopxd(yo, xf);\r\n    if (s < x0) s = x0-1;\r\n    s2 = s;\r\n    while (s >= x0 && res) {\r\n      if (!rq(s, yo, yf)) res = false;\r\n      s--;\r\n    }\r\n    yo++;\r\n    x0 = s2 + 1;\r\n  }\r\n  cout << ((res) ? \"Yes\" : \"No\") << endl;\r\n}"
}