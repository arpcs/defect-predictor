{
    "id": 227015735,
    "contestId": 1236,
    "creationTimeSeconds": 1696685030,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1236,
        "index": "D",
        "name": "Alice and the Doll",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2300,
        "tags": [
            "brute force",
            "data structures",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1236,
        "members": [
            {
                "handle": "Ccii"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1571319300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 217,
    "timeConsumedMillis": 140,
    "memoryConsumedBytes": 11673600,
    "source": "// LUOGU_RID: 128192555\n#include<bits/stdc++.h>\r\n#define int long long\r\nusing namespace std;\r\nconst int N = 1e5 + 10;\r\nvector<int> l[N], r[N];\r\nint n, m, k;\r\nsigned main()\r\n{\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0); cout.tie(0);\r\n\tcin >> n >> m >> k;\r\n\tfor(int i = 1; i <= k; i ++)\r\n\t{\r\n\t\tint a, b; cin >> a >> b;\r\n\t\tl[a].push_back(b);\r\n\t\tr[b].push_back(a); \r\n\t}\r\n\tint up = 1, down = n, left = 1, right = m;\r\n\tint x = 1, y = 1, dir = 1;\r\n\tfor(int i = 1; i <= n || i <= m; i ++)\r\n\t{\r\n\t\tif(i <= n) l[i].push_back(0), l[i].push_back(m + 1), sort(l[i].begin(), l[i].end());\r\n\t\tif(i <= m) r[i].push_back(0), r[i].push_back(n + 1), sort(r[i].begin(), r[i].end());\r\n\t}\r\n\tint cnt = 1;\r\n\twhile(1)\r\n\t{\r\n//\t\tcout << x <<\" \"<< y <<\" \"<< dir <<\" \"<< cnt <<endl;\r\n\t\tif(dir == 1)\r\n\t\t{\r\n\t\t\tint L = 0, R = l[x].size() - 1;\r\n\t\t\twhile(L < R)\r\n\t\t\t{\r\n\t\t\t\tint mid = L + R >> 1;\r\n\t\t\t\tif(l[x][mid] > y) R = mid;\r\n\t\t\t\telse L = mid + 1;\t\r\n\t\t\t}\r\n\t\t\tR = min(right, l[x][R] - 1);\r\n\t\t\tif(y == R) break;\r\n\t\t\tcnt += R - y; \r\n\t\t\ty = R; dir = 2; up = x + 1;\r\n\t\t}\r\n\t\telse if(dir == 2)\r\n\t\t{\r\n\t\t\tint L = 0, R = r[y].size() - 1;\r\n\t\t\twhile(L < R)\r\n\t\t\t{\r\n\t\t\t\tint mid = L + R >> 1;\r\n\t\t\t\tif(r[y][mid] > x) R = mid;\r\n\t\t\t\telse L = mid + 1;\r\n\t\t\t}\r\n\t\t\tR = min(down, r[y][R] - 1);\r\n\t\t\tif(x == R) break;\r\n\t\t\tcnt += R - x;\r\n\t\t\tx = R, dir = 3, right = y - 1; \r\n\t\t}\r\n\t\telse if(dir == 3)\r\n\t\t{\r\n\t\t\tint L = 0, R = l[x].size() - 1;\r\n\t\t\twhile(L < R)\r\n\t\t\t{\r\n\t\t\t\tint mid = (L + R + 1) >> 1;\r\n\t\t\t\tif(l[x][mid] >= y) R = mid - 1;\r\n\t\t\t\telse L = mid;\r\n\t\t\t}\r\n\t\t\tR = max(left, l[x][R] + 1);\r\n\t\t\tif(y == R) break;\r\n\t\t\tcnt += y - R;\r\n\t\t\ty = R, dir = 4, down = x - 1;\r\n\t\t}\r\n\t\telse if(dir == 4)\r\n\t\t{\r\n\t\t\tint L = 0, R = r[y].size() - 1;\r\n\t\t\twhile(L < R)\r\n\t\t\t{\r\n\t\t\t\tint mid = (L + R + 1) >> 1;\r\n\t\t\t\tif(r[y][mid] >= x) R = mid - 1;\r\n\t\t\t\telse L = mid;\r\n\t\t\t}\r\n\t\t\tR = max(up, r[y][R] + 1);\r\n\t\t\tif(x == R) break;\r\n\t\t\tcnt += x - R;\r\n\t\t\tx = R, dir = 1, left = y + 1;\r\n\t\t}\r\n\t}\r\n//\tcout <<x <<\" \"<< y <<\" \"<< dir <<\" \"<<  cnt <<endl;\r\n\tif(cnt == n * m - k) cout <<\"Yes\"<<endl;\r\n\telse cout <<\"NO\"<<endl;\r\n\t\r\n\treturn 0;\r\n}"
}