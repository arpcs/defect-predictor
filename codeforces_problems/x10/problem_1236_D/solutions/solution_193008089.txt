{
    "id": 193008089,
    "contestId": 1236,
    "creationTimeSeconds": 1675998702,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1236,
        "index": "D",
        "name": "Alice and the Doll",
        "type": "PROGRAMMING",
        "points": 1750.0,
        "rating": 2300,
        "tags": [
            "brute force",
            "data structures",
            "greedy",
            "implementation"
        ]
    },
    "author": {
        "contestId": 1236,
        "members": [
            {
                "handle": "Archaeopteryx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1571319300
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 225,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 38604800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\nconst int N=100005;\nset<int>row[N],col[N];\nint main()\n{\nlong long n,m;\nint k;\nscanf(\"%I64d%I64d%d\",&n,&m,&k);\nfor (int i=0;i<k;i++)\n{\nint x,y;\nscanf(\"%d%d\",&x,&y);\nrow[x].insert(y);\ncol[y].insert(x);\n}\nfor(int i=1;i<=n;i++)\nrow[i].insert(0),row[i].insert(m+1);\nfor(int i=1;i<=m;i++)\ncol[i].insert(0),col[i].insert(n+1);\nint x=1,y=1,dir=0;\nif (row[1].count(2))\ndir=1;\nint up=0,down=n+1,left=0,right=m+1;\nlong long sum=1;\nwhile(sum+k<n*m)\n{\nint nx=x,ny=y;\nif(dir==0)\n{\nny=min(right-1,(*row[x].lower_bound(y))-1);\nsum+=ny-y;\ndir=(dir+1)%4;\nup=x;\n}\nelse if(dir==1)\n{\nnx=min(down-1,(*col[y].lower_bound(x))-1);\nsum+=nx-x;\ndir=(dir+1)%4;\nright=y;\n}\nelse if(dir==2)\n{\nny=max(left+1,(*(--row[x].lower_bound(y)))+1);\nsum+=y-ny;\ndir=(dir+1)%4;\ndown=x;\n}\nelse if(dir==3)\n{\nnx=max(up+1,(*(--col[y].lower_bound(x)))+1);\nsum+=x-nx;\ndir=(dir+1)%4;\nleft=y;\n}\nif(nx==x&&ny==y)\nbreak;\nx=nx;y=ny;\n}\nputs((sum+k==n*m)?\"Yes\":\"No\");\nreturn 0;\n}\n\n"
}