{
    "id": 125013606,
    "contestId": 226,
    "creationTimeSeconds": 1628224436,
    "relativeTimeSeconds": 5036,
    "problem": {
        "contestId": 226,
        "index": "D",
        "name": "The table",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 226,
        "members": [
            {
                "handle": "-is-this-fft-"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1628219400
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 95,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 4300800,
    "source": "#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nconst int MAX_N = 105;\n\nint n, m;\nint grid [MAX_N][MAX_N];\nint sumr [MAX_N];\nint sumc [MAX_N];\n\nvoid flip (int x, int y) {\n  sumr[x] -= 2 * grid[x][y];\n  sumc[y] -= 2 * grid[x][y];\n  grid[x][y] *= -1;\n}\n\nbool fr [MAX_N];\nbool fc [MAX_N];\n\nvoid flip_row (int x) {\n  for (int i = 0; i < m; i++) {\n    flip(x, i);\n  }\n  fr[x] ^= 1;\n}\n\nvoid flip_col (int y) {\n  for (int i = 0; i < n; i++) {\n    flip(i, y);\n  }\n  fc[y] ^= 1;\n}\n\nint main () {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n\n  cin >> n >> m;\n\n  for (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n      cin >> grid[i][j];\n      sumr[i] += grid[i][j];\n      sumc[j] += grid[i][j];\n    }\n  }\n\n  bool found = true;\n  while (found) {\n    found = false;\n    for (int i = 0; i < n; i++) {\n      if (sumr[i] < 0) {\n        found = true;\n        flip_row(i);\n      }\n    }\n\n    for (int j = 0; j < m; j++) {\n      if (sumc[j] < 0) {\n        found = true;\n        flip_col(j);\n      }\n    }\n  }\n\n  vector<int> rows;\n  for (int i = 0; i < n; i++) {\n    if (fr[i]) rows.push_back(i);\n  }\n\n  vector<int> cols;\n  for (int i = 0; i < m; i++) {\n    if (fc[i]) cols.push_back(i);\n  }\n\n  cout << (int) rows.size() << \" \";\n  for (int u : rows) {\n    cout << 1 + u << \" \";\n  }\n  cout << '\\n';\n\n  cout << (int) cols.size() << \" \";\n  for (int u : cols) {\n    cout << 1 + u << \" \";\n  }\n  cout << '\\n';\n}\n"
}