{
    "id": 181397506,
    "contestId": 226,
    "creationTimeSeconds": 1668764217,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 226,
        "index": "D",
        "name": "The table",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 226,
        "members": [
            {
                "handle": "bkifhr8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1348500600
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "//#include \"/Users/swassow/Downloads/stdc++.h\"\n#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define INF (ll)1e9\n#define MOD (ll)998244353\n#define pb push_back\n#define all(v) v.begin(),v.end()\n#define rep(i,n) for (int i = 1; i < n; i++)\n#define scc(n) scanf(\"%d\",&n);\n#define sccc(n) scanf(\"%lld\",&n);\n#define printi(n) printf(\"%d\",n);\n#define printll(n) printf(\"%lld\\n\",n);\n#define ya cout<<\"Yes\\n\";\n#define no cout<<\"No\\n\";\n#define pii pair<int,int>\n#define pll pair<ll,ll>\n#define ff  first\n#define ss  second\n#define f ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);\n#define mx (ll)1e18\nconst int N=100000;\nvoid solve()\n{\n    int n,m;\n    cin>>n>>m;\n    int ara[n][m];\n    int res=0;\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<m;j++)\n        {\n            cin>>ara[i][j];\n            res+=ara[i][j];\n        }\n    }\n    vector<int>row,clm;\n    for(int i=0;i<n;i++)\n    {\n        int pos=0,neg=0;\n        for(int j=0;j<m;j++)\n        {\n            if(ara[i][j]<=0)\n                neg+=abs(ara[i][j]);\n            else\n                pos+=ara[i][j];\n        }\n        if(neg>pos)\n        {\n            row.pb(i+1);\n            for(int j=0;j<m;j++)\n            {\n                ara[i][j]=ara[i][j]*-1;\n            }\n        }\n            \n    }\n    for(int j=0;j<m;j++)\n    {\n        int pos=0,neg=0;\n        for(int i=0;i<n;i++)\n        {\n            if(ara[i][j]<=0)\n                neg+=abs(ara[i][j]);\n            else\n                pos+=ara[i][j];\n        }\n        if(neg>pos)\n            clm.pb(j+1);\n    }\n    cout<<row.size()<<\" \";\n    for(auto it:row)\n        cout<<it<<\" \";\n    cout<<endl;\n    \n    cout<<clm.size()<<\" \";\n    for(auto it:clm)\n        cout<<it<<\" \";\n    cout<<endl;\n}\nint main()\n{\n    f\n    int t=1;\n    //cin>>t;\n//    while(t--)\n//    {\n//        solve();\n//    }\n    for(int i=1;i<=t;i++)\n    {\n        //cout<<\"Case \"<<i<<\": \";\n        solve();\n    }\n}\n/*\n //for calculating nCr mod M where M is prime.\n ll power(ll x,ll y, ll p)\n {\n     ll res = 1;\n     x = x % p;\n     while (y > 0)\n     {\n         if (y & 1)\n             res = (res * x) % p;\n         y = y >> 1;\n         x = (x * x) % p;\n     }\n     return res;\n }\n ll factorial[N];\n void fact()\n {\n     factorial[0]=1;\n     for(ll i=1;i<=N;i++)\n     {\n         factorial[i]=(factorial[i-1]%MOD*i%MOD)%MOD;\n     }\n }\n ll modInverse(ll n,ll p)\n {\n     return power(n, p - 2, p);\n }\n ll nCrModPFermat(ll n,ll r, ll p)\n {\n     if (n < r)\n         return 0;\n     if (r == 0)\n         return 1;\n     ll ans=factorial[n];\n     ll x=(factorial[n-r]%p*factorial[r]%p)%p;\n     ans=(ans%p* modInverse(x, p)%p)%p;\n     return ans;\n }\n */\n\n/*\n //for calculating nCr less than 10^18\n ll gcd(ll a,ll b)\n {\n     if(b==0)\n         return a;\n     return gcd(b,a%b);\n }\n ll nCr(ll n,ll r)\n {\n     ll p=1,q=1;\n     if(n-r<r)\n         r=n-r;\n     while(r)\n     {\n         p*=n;\n         q*=r;\n         ll g=gcd(p,q);\n         p/=g;\n         q/=g;\n         n--;\n         r--;\n     }\n     return p;\n }\n */\n/*\nll bigmod(ll b,ll n,ll mod)\n{\n    ll ans=1;\n    while(n)\n    {\n        if(n%2)\n        {\n            ans=(ans*b)%mod;\n            n--;\n        }\n        else\n        {\n            b=(b*b)%mod;\n            n=n/2;\n        }\n    }\n    return ans;\n}\nbool fl[N+1];\nvector<ll> sieve(ll n)\n{\n    vector<ll> primes;\n    for(ll i=3; i*i<=n; i+=2)\n        for(ll j=i*i; j<=n; j+=i+i)\n            fl[j]=true;\n\n    primes.pb(2);\n    for(ll i=3; i<=n; i+=2) if(!fl[i]) primes.pb(i);\n    return primes;\n}\nvector<ll> p=(sieve(N));\nbool isprime(ll n)\n{\n    if(n==2)\n        return true;\n    if(n%2==0)\n        return false;\n    for(int i=3;i*i<=n;i+=2)\n    {\n        if(n%i==0)\n            return false;\n    }\n    return true;\n}\n vector<pll>v;\n void prime_fact(ll n)\n {\n     for(i=0;i<p.size()&& p[i]*p[i]<=n;i++)\n     {\n         if(n%p[i]==0)\n         {\n             ll cnt=0;\n             while(n%p[i]==0)\n             {\n                 cnt++;\n                 n/=p[i];\n             }\n             v.pb({p[i],cnt});\n         }\n     }\n     if(n>1)\n         v.pb({n,1});\n }\n\n*/\n\n\n/*\n //Direction of a point from a line segment\n \n struct point{\n     double x,y;\n };\n point subtract(point p1,point p2)\n {\n     point res;\n     res.x=p1.x-p2.x;\n     res.y=p1.y-p2.y;\n     return res;\n }\n int get_dir(point a,point b,point c)\n {\n     b=subtract(b,a);\n     c=subtract(c,a);\n     double res=b.x*c.y-b.y*c.x;\n     if(res>0)\n         return -1; //left\n     else if (res<0)\n         return 1; //right\n     else\n         return 0; //on the line\n     \n }\n */\n\n\n/*\n//nCr mod m (where m is not a prime)\n//code for:\n//nC1 nC2 nC3.... which are divisible by m and which are not.\n \n ll n,m;\n cin>>n>>m;\n vector<pll>need;\n for(i=2;i*i<=m;i++)\n {\n     if(m%i==0)\n     {\n         ll cnt=0;\n         while(m%i==0)\n         {\n             cnt++;\n             m/=i;\n         }\n         need.pb({i,cnt});\n     }\n }\n if(m>1)\n     need.pb({m,1});\n vector<pll>have=need;\n for(auto &it:have)\n     it.ss=0;\n vector<ll>ans;\n for(i=1;i<=n;i++)\n {\n     ll x=n-i+1;\n     for(auto &it:have)\n     {\n         while(x%it.ff==0)\n         {\n             it.ss++;\n             x/=it.ff;\n         }\n     }\n     x=i;\n     for(auto &it:have)\n     {\n         while(x%it.ff==0)\n         {\n             it.ss--;\n             x/=it.ff;\n         }\n     }\n     bool flag=true;\n     for(j=0;j<need.size();j++)\n     {\n         if(have[j].ss<need[j].ss)\n         {\n             flag=false;\n             break;\n         }\n     }\n     if(flag)\n         ans.pb(i+1);\n }\n \n \n */\n\n \t \t\t   \t \t  \t  \t\t  \t\t\t\t\t \t \t"
}