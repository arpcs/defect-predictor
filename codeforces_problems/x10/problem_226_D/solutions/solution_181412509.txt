{
    "id": 181412509,
    "contestId": 226,
    "creationTimeSeconds": 1668774300,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 226,
        "index": "D",
        "name": "The table",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2100,
        "tags": [
            "constructive algorithms",
            "greedy"
        ]
    },
    "author": {
        "contestId": 226,
        "members": [
            {
                "handle": "bkifhr8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1348500600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\n\nusing namespace std;\n\n#include <ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\nusing namespace __gnu_cxx;\ntemplate <typename T> using oset = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\n\n\n#define IO ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)\n#define   int                      long long\ntypedef   double                   dd;\ntypedef   vector<int>              vi;\n#define   endl              \"\\n\"\n#define   pb                push_back\n#define   size(a)           (int)a.size()\n#define   all(v)            v.begin(), v.end()\n#define   rall(v)           v.rbegin(), v.rend()\n\n// int ax[] = {0,  0, -1, 1};\n// int ay[] = {1, -1,  0, 0};\n\nconst double eps = 1e-8;\nconst int N = 2e5 + 5, inf = 1e18;\nint mod = 1e9 + 7;\nint n, m;\n\nvoid solve() {\n   cin >> n >> m;\n   vi row(n + 5, 0), col(m + 5, 0), colSum(m + 5, 0), rowSum(n + 5, 0);\n\n   vector<vi> v(n + 5, vi(m + 5, 0));\n   for (int i = 1; i <= n; i++) {\n      for (int j = 1; j <= m; j++) {\n         cin >> v[i][j];\n         colSum[j] += v[i][j];\n         rowSum[i] += v[i][j];\n      }\n   }\n\n   while(true) {\n      int ROW = 0, COL = 0;\n\n      // for (int i = 1; i <= n; i++) cout << rowSum[i] << ' '; cout << endl;\n      // for (int i = 1; i <= m; i++) cout << colSum[i] << ' '; cout << endl;\n\n      for (int i = 1; i <= n; i++) {\n         if(rowSum[i] < 0) {ROW = i; break;}\n      } for (int i = 1; i <= m; i++) {\n         if(colSum[i] < 0) {COL = i; break;}\n      } \n      // cout << \"R, C = \" << ROW << ' ' << COL << endl;\n      if(ROW) {\n         row[ROW]++;\n         rowSum[ROW] *= -1;\n         for (int i = 1; i <= m; i++) {\n            colSum[i] -= v[ROW][i];\n            v[ROW][i] *= -1;\n            colSum[i] += v[ROW][i];\n         }\n      } else if(COL) {\n         col[COL]++;\n         colSum[COL] *= -1;\n         for (int i = 1; i <= n; i++) {\n            rowSum[i] -= v[i][COL];\n            v[i][COL] *= -1;\n            rowSum[i] += v[i][ROW];\n         }\n      } else break;\n   }\n\n   vi R;\n   for (int i = 1; i <= n; i++) {\n      if(row[i]&1) R.pb(i);\n   }\n   cout << size(R) << ' '; \n   for (int i : R) cout << i << ' '; cout << endl;\n   \n   vi C;;\n   for (int i = 1; i <= m; i++) {\n      if(col[i]&1) C.pb(i);\n   }\n   cout << size(C) << ' ';\n   for (int i : C) cout << i << ' '; cout << endl;\n \n}  \n\nint32_t main() {\n   IO;\n   int TestCase = 1;\n   // cin >> TestCase;\n   while(TestCase--)\n      solve();\n   \n   return 0;\n}\n\n\t\t  \t\t  \t \t\t    \t \t\t \t \t\t\t\t   \t"
}