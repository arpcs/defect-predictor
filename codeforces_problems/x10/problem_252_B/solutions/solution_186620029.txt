{
    "id": 186620029,
    "contestId": 252,
    "creationTimeSeconds": 1671921105,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 252,
        "index": "B",
        "name": "Unsorting Array",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1800,
        "tags": [
            "brute force",
            "sortings"
        ]
    },
    "author": {
        "contestId": 252,
        "members": [
            {
                "handle": "Drakkon"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1354807800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 58,
    "timeConsumedMillis": 248,
    "memoryConsumedBytes": 16998400,
    "source": "#include<bits/stdc++.h>\r\n\r\n#define ll long long\r\n#define pp push_back\r\n#define endl '\\n'\r\n#define all(x) x.begin(),x.end()\r\n#define ld long double\r\n#define PI acos(-1)\r\n#define sin(a) sin((a)*PI/180)\r\n#define cos(a) cos((a)*PI/180)\r\n#define ones(x) __builtin_popcountll(x)\r\n#define int ll\r\n\r\n#define Drakon  ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\nusing namespace std;\r\n\r\n\r\nunsigned long long inf = 1e10;\r\nconst double EPS = 1e-6;\r\nconst int MOD = 1000000007, N = 200005, LOG = 25, M = 2;\r\n\r\ntypedef array<array<int, M>, M> matrix;\r\n\r\nint gcd(int x, int y) {\r\n    return y ? gcd(y, x % y) : x;\r\n}\r\n\r\nint lcm(int a, int b) {\r\n    return (a * b) / __gcd(a, b);\r\n}\r\n\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n    int arr[n];\r\n    map<int,int>freq;\r\n    map<int,vector<int>>ind;\r\n    for (int i = 0; i < n; ++i) {\r\n        cin >> arr[i];\r\n        freq[arr[i]]++;\r\n        ind[arr[i]].pp(i);\r\n    }\r\n    if(n<=2){\r\n        cout << -1;\r\n        return;\r\n    }\r\n    if(freq.size() >= 3){\r\n        auto itr = freq.begin();\r\n        int x = ind[itr->first][0];\r\n        itr++;\r\n        int y = ind[itr->first][0],z = ind[freq.rbegin()->first][0];\r\n        if(x < y && x < z){\r\n            cout << x+1 << \" \" << y+1;\r\n            return;\r\n        }\r\n        if(y < x && y < z){\r\n            cout << x+1 << \" \" << z+1;\r\n            return;\r\n        }\r\n        swap(x,z);\r\n        if(x < y && x < z){\r\n            cout << x+1 << \" \" << y+1;\r\n            return;\r\n        }\r\n        if(y < x && y < z){\r\n            cout << x+1 << \" \" << z+1;\r\n            return;\r\n        }\r\n    }\r\n    if(freq.size() == 1){\r\n        cout << -1;\r\n        return;\r\n    }\r\n\r\n    int mn = freq.begin()->first,mx = freq.rbegin()->first;\r\n    if(arr[0]==arr[n-1]){\r\n        if(n == 3){\r\n            cout << -1;\r\n            return;\r\n        }\r\n        if(ind[arr[0]].size() > 2){\r\n            cout << ind[arr[0]][1] + 1 << \" \" << ((arr[0] == mn) ? ind[mx][0] + 1 : ind[mn][0] + 1);\r\n            return;\r\n        }\r\n        cout << ind[arr[1]][0] + 1 << \" \" << 1;\r\n        return;\r\n    }\r\n    if(ind[arr[0]].size() > 1){\r\n        cout << ind[arr[0]][1] + 1 << \" \" << n;\r\n        return;\r\n    }\r\n    cout << ind[arr[n-1]][0] + 1 << \" \" << 1;\r\n}\r\n\r\nsigned main() {\r\n    Drakon\r\n    int t = 1;\r\n    //cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n}"
}