{
    "id": 211779921,
    "contestId": 1181,
    "creationTimeSeconds": 1688263249,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1181,
        "index": "E1",
        "name": "A Story of One Country (Easy)",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2500,
        "tags": [
            "brute force",
            "divide and conquer",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1181,
        "members": [
            {
                "handle": "luogu_bot3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560677700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 43,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 68300800,
    "source": "// LUOGU_RID: 113727032\n#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst int MAXN = 2e5 + 5;\r\nconst int MAXLOG = 20;\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef unsigned long long ull;\r\n\r\ntemplate <typename T> void chkmax(T &x, T y) {\r\n\tx = max(x, y);\r\n}\r\ntemplate <typename T> void chkmin(T &x, T y) {\r\n\tx = min(x, y);\r\n}\r\ntemplate <typename T> void read(T &x) {\r\n\tx = 0;\r\n\tint f = 1;\r\n\tchar c = getchar();\r\n\tfor (; !isdigit(c); c = getchar()) if (c == '-') f = -f;\r\n\tfor (; isdigit(c); c = getchar()) x = x * 10 + c - '0';\r\n\tx *= f;\r\n}\r\ntemplate <typename T> void write(T x) {\r\n\tif (x < 0) x = -x, putchar('-');\r\n\tif (x > 9) write(x / 10);\r\n\tputchar(x % 10 + '0');\r\n}\r\ntemplate <typename T> void writeln(T x) {\r\n\twrite(x);\r\n\tputs(\"\");\r\n}\r\n\r\nint n, l[MAXLOG][MAXN], r[MAXLOG][MAXN], u[MAXLOG][MAXN], d[MAXLOG][MAXN], col[MAXN];\r\npair <int, int> a[MAXN], b[MAXN];\r\n\r\nbool cmpl(int x, int y) {return a[x].first < a[y].first;}\r\nbool cmpr(int x, int y) {return a[x].second > a[y].second;}\r\nbool cmpd(int x, int y) {return b[x].first < b[y].first;}\r\nbool cmpu(int x, int y) {return b[x].second > b[y].second;}\r\n\r\nbool solve(vector <int> p, int c, int depth) {\r\n\tfor (auto x : p) col[x] = c;\r\n\tif (p.size() == 1) return true;\r\n\tsort(p.begin(), p.end(), cmpl);\r\n\tl[depth][p.back()] = 0, l[depth][c] = p[0];\r\n\tfor (unsigned i = 1; i < p.size(); i++) l[depth][p[i - 1]] = p[i];\r\n\tsort(p.begin(), p.end(), cmpr);\r\n\tr[depth][p.back()] = 0, r[depth][c] = p[0];\r\n\tfor (unsigned i = 1; i < p.size(); i++) r[depth][p[i - 1]] = p[i];\r\n\tsort(p.begin(), p.end(), cmpd);\r\n\td[depth][p.back()] = 0, d[depth][c] = p[0];\r\n\tfor (unsigned i = 1; i < p.size(); i++) d[depth][p[i - 1]] = p[i];\r\n\tsort(p.begin(), p.end(), cmpu);\r\n\tu[depth][p.back()] = 0, u[depth][c] = p[0];\r\n\tfor (unsigned i = 1; i < p.size(); i++) u[depth][p[i - 1]] = p[i];\r\n\tauto nxt = [&] (int x, int *a) {\r\n\t\twhile (a[x] != 0 && col[a[x]] != c) a[x] = a[a[x]];\r\n\t\treturn a[x];\r\n\t};\r\n\twhile (nxt(nxt(c, l[depth]), l[depth]) != 0) {\r\n\t\tint pl = c, pr = c, pd = c, pu = c;\r\n\t\tint vl = a[nxt(pl, l[depth])].second;\r\n\t\tint vr = a[nxt(pr, r[depth])].first;\r\n\t\tint vd = b[nxt(pd, d[depth])].second;\r\n\t\tint vu = b[nxt(pu, u[depth])].first;\r\n\t\twhile (true) {\r\n\t\t\tpl = nxt(pl, l[depth]);\r\n\t\t\tif (pl == 0) return false;\r\n\t\t\tif (vl <= a[pl].first) {\r\n\t\t\t\tvector <int> q;\r\n\t\t\t\tint x = c;\r\n\t\t\t\tif (pl == 19)\r\n\t\t\t\t\tcerr << pl << endl;\r\n\t\t\t\twhile (nxt(x, l[depth]) != pl) {\r\n\t\t\t\t\tx = nxt(x, l[depth]);\r\n\t\t\t\t\tq.push_back(x);\r\n\t\t\t\t}\r\n\t\t\t\tif (!solve(q, c + 1, depth + 1)) return false;\r\n\t\t\t\tbreak;\r\n\t\t\t} else chkmax(vl, a[pl].second);\r\n\r\n\t\t\tpr = nxt(pr, r[depth]);\r\n\t\t\tif (pr == 0) return false;\r\n\t\t\tif (vr >= a[pr].second) {\r\n\t\t\t\tvector <int> q;\r\n\t\t\t\tint x = c;\r\n\t\t\t\twhile (nxt(x, r[depth]) != pr) {\r\n\t\t\t\t\tx = nxt(x, r[depth]);\r\n\t\t\t\t\tq.push_back(x);\r\n\t\t\t\t}\r\n\t\t\t\tif (!solve(q, c + 1, depth + 1)) return false;\r\n\t\t\t\tbreak;\r\n\t\t\t} else chkmin(vr, a[pr].first);\r\n\r\n\t\t\tpd = nxt(pd, d[depth]);\r\n\t\t\tif (pd == 0) return false;\r\n\t\t\tif (vd <= b[pd].first) {\r\n\t\t\t\tvector <int> q;\r\n\t\t\t\tint x = c;\r\n\t\t\t\twhile (nxt(x, d[depth]) != pd) {\r\n\t\t\t\t\tx = nxt(x, d[depth]);\r\n\t\t\t\t\tq.push_back(x);\r\n\t\t\t\t}\r\n\t\t\t\tif (!solve(q, c + 1, depth + 1)) return false;\r\n\t\t\t\tbreak;\r\n\t\t\t} else chkmax(vd, b[pd].second);\r\n\r\n\t\t\tpu = nxt(pu, u[depth]);\r\n\t\t\tif (pu == 0) return false;\r\n\t\t\tif (vu >= b[pu].second) {\r\n\t\t\t\tvector <int> q;\r\n\t\t\t\tint x = c;\r\n\t\t\t\twhile (nxt(x, u[depth]) != pu) {\r\n\t\t\t\t\tx = nxt(x, u[depth]);\r\n\t\t\t\t\tq.push_back(x);\r\n\t\t\t\t}\r\n\t\t\t\tif (!solve(q, c + 1, depth + 1)) return false;\r\n\t\t\t\tbreak;\r\n\t\t\t} else chkmin(vu, b[pu].first);\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\nint main() {\r\n\tread(n);\r\n\tvector <int> x;\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tx.push_back(i);\r\n\t\tread(a[i].first), read(b[i].first);\r\n\t\tread(a[i].second), read(b[i].second);\r\n\t}\r\n\tif (solve(x, n + 1, 0)) puts(\"YES\");\r\n\telse puts(\"NO\");\r\n\treturn 0;\r\n}"
}