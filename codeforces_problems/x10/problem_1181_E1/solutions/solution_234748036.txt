{
    "id": 234748036,
    "contestId": 1181,
    "creationTimeSeconds": 1701173013,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1181,
        "index": "E1",
        "name": "A Story of One Country (Easy)",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2500,
        "tags": [
            "brute force",
            "divide and conquer",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1181,
        "members": [
            {
                "handle": "Macrohard_Onfire"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560677700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 43,
    "timeConsumedMillis": 108,
    "memoryConsumedBytes": 43520000,
    "source": "#include<iostream>\r\n#include<vector>\r\n#include <algorithm>\r\n\r\n#define ll                    long long int\r\n#define pb                    push_back\r\n#define F                     first\r\n#define S                     second\r\n#define mp                    make_pair\r\n#define MOD                   1000000007\r\n#define vi                    vector<int>\r\n#define vll                   vector<ll>\r\n#define pll                   pair<ll,ll>\r\n#define pii                   pair<int,int>\r\n#define all(p)                p.begin(),p.end()\r\n#define mid(s, e)              (s+(e-s)/2)\r\n#define eb                    emplace_back\r\n#define ull                   unsigned long long\r\nusing namespace std;\r\n\r\nstruct Castle{\r\n  int xs, xe, ys, ye;\r\n  Castle(int xs, int xe, int ys, int ye): xs(xs), xe(xe), ys(ys), ye(ye){}\r\n};\r\n\r\nbool lessx(Castle& lhs, Castle& rhs){\r\n  return lhs.xs < rhs.xs;\r\n}\r\n\r\n\r\nbool lessy(Castle& lhs, Castle& rhs){\r\n  return lhs.ys < rhs.ys;\r\n}\r\n\r\nbool morex(Castle& lhs, Castle& rhs){\r\n  return lhs.xe > rhs.xe;\r\n}\r\n\r\nbool morey(Castle& lhs, Castle& rhs){\r\n  return lhs.ye > rhs.ye;\r\n}\r\n\r\nbool solve(vector<Castle> xlcastles) {\r\n  int xs = 0, xe = 0, ys = 0, ye = 0;\r\n\r\n  vector<Castle> xhcastles, ylcastles, yhcastles;\r\n  xhcastles = xlcastles;\r\n  ylcastles = xlcastles;\r\n  yhcastles = xlcastles;\r\n\r\n  std::sort(xlcastles.begin(), xlcastles.end(), lessx);\r\n  std::sort(xhcastles.begin(), xhcastles.end(), morex);\r\n  std::sort(ylcastles.begin(), ylcastles.end(), lessy);\r\n  std::sort(yhcastles.begin(), yhcastles.end(), morey);\r\n\r\n  if(xlcastles.size() == 1) {\r\n    return true;\r\n  }\r\n\r\n  int maxxs = 0, maxxe = INT_MAX, maxys = 0, maxye = INT_MAX;\r\n  while(xs + xe < xlcastles.size()){\r\n    int coor;\r\n\r\n    coor = xlcastles[xs].xs;\r\n    while(xlcastles[xs].xs == coor){\r\n      maxxs = std::max(maxxs, xlcastles[xs].xe);\r\n      xs++;\r\n    }\r\n\r\n    coor = xhcastles[xe].xe;\r\n    while(xhcastles[xe].xe == coor){\r\n      maxxe = std::min(maxxe, xhcastles[xe].xs);\r\n      xe++;\r\n    }\r\n\r\n    if(xs + xe > xlcastles.size()){\r\n        break;\r\n    }\r\n\r\n    if(maxxs < xlcastles[xs].xs){\r\n      vector<Castle> temp_xl, temp_xh;\r\n      for(int i = 0; i < xs; i++){\r\n        temp_xl.emplace_back(xlcastles[i]);\r\n      }\r\n      for(int i = xs; i < xlcastles.size(); i++){\r\n        temp_xh.emplace_back(xlcastles[i]);\r\n      }\r\n      return solve(temp_xl) &&\r\n        solve(temp_xh);\r\n    }\r\n    if(maxxe > xhcastles[xe].xe){\r\n      vector<Castle> temp_xl, temp_xh;\r\n      for(int i = 0; i < xe; i++){\r\n        temp_xl.emplace_back(xhcastles[i]);\r\n      }\r\n      for(int i = xe; i < xhcastles.size(); i++){\r\n        temp_xh.emplace_back(xhcastles[i]);\r\n      }\r\n      return solve(temp_xh) &&\r\n        solve(temp_xl);\r\n    }\r\n  }\r\n\r\n\r\n  while(ys + ye < ylcastles.size()){\r\n    int coor;\r\n\r\n    coor = ylcastles[ys].ys;\r\n    while(ylcastles[ys].ys == coor){\r\n      maxys = std::max(maxys, ylcastles[ys].ye);\r\n      ys++;\r\n    }\r\n\r\n    coor = yhcastles[ye].ye;\r\n    while(yhcastles[ye].ye == coor){\r\n      maxye = std::min(maxye, yhcastles[ye].ys);\r\n      ye++;\r\n    }\r\n\r\n    if(ys + ye > xlcastles.size()){\r\n        break;\r\n    }\r\n\r\n    if(maxys < ylcastles[ys].ys){\r\n      vector<Castle> temp_yl, temp_yh;\r\n      for(int i = 0; i < ys; i++){\r\n        temp_yl.emplace_back(ylcastles[i]);\r\n      }\r\n      for(int i = ys; i < ylcastles.size(); i++){\r\n        temp_yh.emplace_back(ylcastles[i]);\r\n      }\r\n      return solve(temp_yl) &&\r\n        solve(temp_yh);\r\n    }\r\n    if(maxye > yhcastles[ye].ye){\r\n      vector<Castle> temp_yl, temp_yh;\r\n      for(int i = 0; i < ye; i++){\r\n        temp_yl.emplace_back(yhcastles[i]);\r\n      }\r\n      for(int i = ye; i < yhcastles.size(); i++){\r\n        temp_yh.emplace_back(yhcastles[i]);\r\n      }\r\n      return solve(temp_yh) &&\r\n        solve(temp_yl);\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n    vector<Castle> xlcastles;\r\n    int n;\r\n    cin >> n;\r\n\r\n    for(int i = 0; i < n; i++){\r\n      int a, b, c, d;\r\n      cin >> a >> b >> c >> d;\r\n      c--; d--;\r\n      xlcastles.eb(a, c, b, d);\r\n    }\r\n\r\n\r\n    if(solve(xlcastles)){\r\n      cout << \"YES\";\r\n    } else {\r\n        cout << \"NO\";\r\n    }\r\n\r\n    return 0;\r\n}\r\n"
}