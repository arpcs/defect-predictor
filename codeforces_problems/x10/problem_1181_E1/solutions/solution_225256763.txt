{
    "id": 225256763,
    "contestId": 1181,
    "creationTimeSeconds": 1695731441,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1181,
        "index": "E1",
        "name": "A Story of One Country (Easy)",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2500,
        "tags": [
            "brute force",
            "divide and conquer",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1181,
        "members": [
            {
                "handle": "zhangtingxi123"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560677700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 43,
    "timeConsumedMillis": 109,
    "memoryConsumedBytes": 5427200,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n//#define int long long\r\ninline int read(){int x=0,f=1;char ch=getchar(); while(ch<'0'||\r\nch>'9'){if(ch=='-')f=-1;ch=getchar();}while(ch>='0'&&ch<='9'){\r\nx=(x<<1)+(x<<3)+(ch^48);ch=getchar();}return x*f;}\r\n#define Z(x) (x)*(x)\r\n#define pb push_back\r\n//mt19937 rand(time(0));\r\n//mt19937_64 rand(time(0));\r\n//srand(time(0));\r\n#define N 100010\r\n//#define M\r\n//#define mo\r\nstruct node {\r\n\tint l, r, id; \r\n\tbool operator <(const node &A) const {\r\n\t\tif(l==A.l) return id<A.id; \r\n\t\treturn l<A.l; \r\n\t}\r\n}c[N][4];\r\nint n, m, i, j, k, T;\r\nset<node>s[4]; \r\nint lx, ly, rx, ry; \r\n\r\nint solve(set<node>L[4]) {\r\n\tint i, j, p, k; \r\n\tif(L[0].size()<=1) return 1; \r\n\tset<node>R[4]; \r\n\tset<node>::iterator it[4], t; \r\n\tint mx[4]; \r\n\tfor(i=0; i<4; ++i) \r\n\t\tit[i]=L[i].begin(), mx[i]=it[i]->r, ++it[i], R[i].clear(); \r\n\tfor(i=1; i<L[0].size(); ++i) {\r\n\t\tfor(j=0; j<4; ++j) {\r\n\t\t\tif(it[j]->l>=mx[j]) {\r\n\t\t\t\tfor(t=L[j].begin(); t!=it[j]; ) {\r\n\t\t\t\t\tp=t->id; ++t;\r\n\t\t\t\t\tfor(k=0; k<4; ++k) \r\n\t\t\t\t\t\tR[k].insert(c[p][k]),  \r\n\t\t\t\t\t\tL[k].erase(c[p][k]); \r\n\t\t\t\t}\r\n\t\t\t\treturn solve(L)\t&& solve(R); \r\n\t\t\t}\r\n\t\t\tmx[j]=max(mx[j], (it[j]->r)); ++it[j]; \r\n\t\t}\r\n\t}\r\n\treturn 0; \r\n}\r\n\r\nsigned main()\r\n{\r\n//\tfreopen(\"in.txt\", \"r\", stdin);\r\n//\tfreopen(\"out.txt\", \"w\", stdout);\r\n//\tT=read();\r\n//\twhile(T--) {\r\n//\r\n//\t}\r\n\tn=read(); \r\n\tfor(i=1; i<=n; ++i) {\r\n\t\tlx=read(); ly=read(); rx=read(); ry=read(); \r\n\t\tc[i][0]={lx, rx, i}; s[0].insert(c[i][0]); \r\n\t\tc[i][1]={-rx, -lx, i}; s[1].insert(c[i][1]); \r\n\t\tc[i][2]={ly, ry, i}; s[2].insert(c[i][2]); \r\n\t\tc[i][3]={-ry, ly, i}; s[3].insert(c[i][3]); \r\n//\t\tprintf(\"%d %d %d %d\\n\", (int)s[0].size(), s[1].size(), s[2].size(), s[3].size()); \r\n\r\n\t}\r\n//\tprintf(\"%d %d %d %d\\n\", s[0].size(), s[1].size(), s[2].size(), s[3].size()); \r\n\tprintf(solve(s) ? \"YES\\n\" : \"NO\\n\"); \r\n\treturn 0;\r\n}"
}