{
    "id": 221519950,
    "contestId": 1181,
    "creationTimeSeconds": 1693630154,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1181,
        "index": "E1",
        "name": "A Story of One Country (Easy)",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2500,
        "tags": [
            "brute force",
            "divide and conquer",
            "sortings"
        ]
    },
    "author": {
        "contestId": 1181,
        "members": [
            {
                "handle": "wujiyan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1560677700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <vector>\r\n#include <stdio.h>\r\nusing namespace std;\r\ntypedef const int ci; int n, x1[1001], y1[1001], x2[1001], y2[1001];\r\nbool solve(ci ax, ci ay, ci bx, ci by)\r\n{\r\n    vector<int> v;\r\n    for (int i(1); i <= n; ++i)\r\n    if (x1[i] >= ax & y1[i] >= ay & x2[i] <= bx & y2[i] <= by) v.emplace_back(i);\r\n    if (v.size() < 2 & x1[v.front()] == ax & y1[v.front()] == ay &\r\n                       x2[v.front()] == bx & y2[v.front()] == by) return true;\r\n    int t(0);\r\n    for (int i : v) if (ax < x2[i] & x2[i] < bx) {\r\n        bool k(true);\r\n        for (int j : v) if (x1[j] < x2[i] & x2[j] > x2[i]) k = false;\r\n        if (k) t = i;\r\n    } if (t) return solve(ax, ay, x2[t], by) & solve(x2[t], ay, bx, by);\r\n    for (int i : v) if (ay < y2[i] & y2[i] < by) {\r\n        bool k(true);\r\n        for (int j : v) if (y1[j] < y2[i] & y2[j] > y2[i]) k = false;\r\n        if (k) t = i;\r\n    } return t ? solve(ax, ay, bx, y2[t]) & solve(ax, y2[t], bx, by) : 0;\r\n}\r\n\r\nint main()\r\n{\r\n    int ax(1e9), ay(1e9), bx(0), by(0); scanf(\"%d\", &n); long long s(0);\r\n    for (int i(1); i <= n; ++i)\r\n    {\r\n        scanf(\"%d%d%d%d\", &x1[i], &y1[i], &x2[i], &y2[i]);\r\n        s += (long long)(x2[i] - x1[i]) * (y2[i] - y1[i]);\r\n        if (x1[i] < ax) ax = x1[i]; if (y1[i] < ay) ay = y1[i];\r\n        if (x2[i] > bx) bx = x2[i]; if (y2[i] > by) by = y2[i];\r\n    }\r\n    if ((long long)(bx - ax) * (by - ay) > s) return puts(\"NO\");\r\n    return puts(solve(ax, ay, bx, by) ? \"YES\" : \"NO\");\r\n}"
}