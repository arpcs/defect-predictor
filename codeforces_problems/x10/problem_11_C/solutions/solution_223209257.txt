{
    "id": 223209257,
    "contestId": 11,
    "creationTimeSeconds": 1694606933,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 11,
        "index": "C",
        "name": "How Many Squares?",
        "type": "PROGRAMMING",
        "rating": 2200,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 11,
        "members": [
            {
                "handle": "JiangGuanyu"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1272294000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 38,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 2867200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int maxn = 260;\r\nconst int dir[8][2] = {{-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 1}, {1, -1}, {1, 0}, {1, 1}};\r\nint n, m;\r\nint ans;\r\nstring s[maxn];\r\nint T;\r\nbool check(int x, int y) {\r\n\treturn 0 <= x && x < n && 0 <= y && y < m;\r\n}\r\nint dfs1(int x, int y) {\r\n\tint a = 1, b = 1, c = 1, d = 1;\r\n\twhile (check(x + 1, y) && s[x + 1][y] == '1') {\r\n\t\t++x, ++a;\r\n\t}\r\n\twhile (check(x, y + 1) && s[x][y + 1] == '1') {\r\n\t\t++y, ++b;\r\n\t}\r\n\twhile (check(x - 1, y) && s[x - 1][y] == '1') {\r\n\t\t--x, ++c;\r\n\t}\r\n\twhile (check(x, y - 1) && s[x][y - 1] == '1') {\r\n\t\t--y, ++d;\r\n\t}\r\n\tif (a == b && b == c && c == d) {\r\n\t\treturn d;\r\n\t}\r\n\treturn 0;\r\n}\r\nint dfs2(int x, int y) {\r\n\tint a = 1, b = 1, c = 1, d = 1;\r\n\twhile (check(x + 1, y - 1) && s[x + 1][y - 1] == '1') {\r\n\t\t++x, --y, ++a;\r\n\t}\r\n\twhile (check(x + 1, y + 1) && s[x + 1][y + 1] == '1') {\r\n\t\t++x, ++y, ++b;\r\n\t}\r\n\twhile (check(x - 1, y + 1) && s[x - 1][y + 1] == '1') {\r\n\t\t--x, ++y, ++c;\r\n\t}\r\n\twhile (check(x - 1, y - 1) && s[x - 1][y - 1] == '1') {\r\n\t\t--x, --y, ++d;\r\n\t}\r\n\tif (a == b && b == c && c == d) {\r\n\t\treturn d;\r\n\t}\r\n\treturn 0;\r\n}\r\nint dfs(int x, int y) {\r\n\tint cnt = 1;\r\n\ts[x][y] = '0';\r\n\tfor (int i = 0; i <= 7; i++) {\r\n\t\tint tx = x + dir[i][0], ty = y + dir[i][1];\r\n\t\tif (check(tx, ty) && s[tx][ty] == '1') {\r\n\t\t\tcnt += dfs(tx, ty);\r\n\t\t}\r\n\t}\r\n\treturn cnt;\r\n}\r\nint main() {\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0), cout.tie(0);\r\n\tcin >> T;\r\n\twhile (T--) {\r\n\t\tans = 0;\r\n\t\tcin >> n >> m;\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tcin >> s[i];\r\n\t\t}\r\n\t\tfor (int i = 0; i < n; i++) {\r\n\t\t\tfor (int j = 0; j < m; j++) {\r\n\t\t\t\tif (s[i][j] == '1') {\r\n\t\t\t\t\tint l1 = dfs1(i, j), l2 = dfs2(i, j);\r\n\t\t\t\t\tint lim = dfs(i, j);\r\n\t\t\t\t\tif (lim == 4 * (l1 - 1) || lim == 4 * (l2 - 1)) {\r\n\t\t\t\t\t\tans++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcout << ans << endl;\r\n\t}\r\n\treturn 0;\r\n}"
}