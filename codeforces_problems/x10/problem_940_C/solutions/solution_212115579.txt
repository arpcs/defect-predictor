{
    "id": 212115579,
    "contestId": 940,
    "creationTimeSeconds": 1688486871,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 940,
        "index": "C",
        "name": "Phone Numbers",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 940,
        "members": [
            {
                "handle": "anotherloser"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1519464900
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 409600,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main() {\r\n  ios_base::sync_with_stdio(0);\r\n  cin.tie(0);\r\n\r\n  int n, k; cin >> n >> k;\r\n\r\n  string s; cin >> s;\r\n  set<char> se;\r\n  for(char c: s) {\r\n    se.insert(c);\r\n  }\r\n  int smallest_char = *(se.begin());\r\n  if(k <= n) {\r\n    for(int i = k -1; i >= 0; i--) {\r\n      auto it = se.upper_bound(s[i]);\r\n      if(it != se.end()) {\r\n        string ans;\r\n        ans.resize(k);\r\n        char next_big_char = *it;\r\n        ans[i] = next_big_char;\r\n        for(int j = 0; j < i; j++) {\r\n          ans[j] = s[j];\r\n        }\r\n        for(int j = i + 1; j < k; j++) {\r\n          ans[j] = smallest_char;\r\n        }\r\n        cout << ans << '\\n';\r\n        return 0;\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    string ans;\r\n    ans.resize(k);\r\n    for(int i = 0; i < n; i++) {\r\n      ans[i] = s[i];\r\n    }\r\n    for(int i = n; i < k; i++) {\r\n      ans[i] = smallest_char;\r\n    }\r\n    cout << ans << '\\n';\r\n  }\r\n\r\n  return 0;\r\n}"
}