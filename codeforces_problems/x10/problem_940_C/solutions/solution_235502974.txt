{
    "id": 235502974,
    "contestId": 940,
    "creationTimeSeconds": 1701598100,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 940,
        "index": "C",
        "name": "Phone Numbers",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 940,
        "members": [
            {
                "handle": "vjudge3"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1519464900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 512000,
    "source": "// URL: https://vjudge.net/contest/577004#problem/N\n\n#include<bits/stdc++.h>\nusing namespace std;\n\n//====================================================================\n//TYPES\n#define   ll   long long int\n#define   ld \tlong double\t\n#define   vll\tvector <ll>\t\n//FUNCTIONS\n#define   FAST    ios_base::sync_with_stdio(false);cin.tie(NULL);\n#define   all(v)  v.begin(),v.end()\n#define   setp(n) fixed << setprecision(n)\n#define   SpicyWings  return 0;\n#define   endl    \"\\n\"\n\n#define   ln      cout<<\"\\n\";\n#define   pb      push_back\n#define   py      cout<<\"YES\"<<endl\n#define   pn      cout<<\"NO\"<<endl\n\n#define   Test    ll tc; cin>>tc; cin.ignore(); for(ll t=1; t<=tc; t++)\n#define   cs      cout << \"Case \" << t << \": \";\n#define   vp(v)   for(auto it:v){cout << it <<\" \";}ln;\n//=====================================================================\n\nint main(){\n   FAST;\n    \n   ll size, req; cin>>size>>req;\n   string s; cin>>s;\n   set<char> st;\n   \n   for(ll i=0; i<size; i++){\n      st.insert(s[i]);\n   }\n   \n   char smallest = *st.begin();\n   string ans = \"\";\n   \n   if(req > size){\n      while(s.size() < req){\n         // cout << \"*\" << endl;\n         s += smallest;\n      }\n      cout << s << endl;\n      return 0;\n   }\n   \n   ll start = (req >= size) ? size-1 : req-1; \n   \n   \n   for(ll i = start; i>=0; i--){\n      auto upper = upper_bound(all(st), s[i]);\n      // cout << *upper << ' ' << i << endl;\n      if(upper != st.end()){\n         ans = s.substr(0, i);\n         ans += *upper;\n         break;\n      }\n   }\n   while(ans.size() < req){\n      ans += smallest;\n   }\n   cout << ans << endl;\n   \n   SpicyWings;\n}\n\t\t\t\t    \t\t  \t\t \t    \t\t \t  \t \t \t"
}