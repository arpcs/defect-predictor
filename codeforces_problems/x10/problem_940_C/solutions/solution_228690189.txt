{
    "id": 228690189,
    "contestId": 940,
    "creationTimeSeconds": 1697638399,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 940,
        "index": "C",
        "name": "Phone Numbers",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 940,
        "members": [
            {
                "handle": "SAYEM_16"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1519464900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 54,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 307200,
    "source": "// \uff34\uff2f\uff24\uff21\uff39 \uff29\uff33 \uff34\uff2f\uff24\uff21\uff39 \uff34\uff2f\uff2d\uff2f\uff32\uff32\uff2f\uff37'\uff33 \uff2e\uff2f\uff34 \uff28\uff25\uff32\uff25 \uff39\uff25\uff33\uff34\uff25\uff32\uff24\uff21\uff39'\uff33 \uff27\uff2f\uff2e\uff25 -->> thank you TB\r\n#pragma TBLH codeforces.com / lk = 2487\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC target(\"avx,avx2,fma\")\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define endl '\\n'\r\n#define MOD 1000000007\r\n#define MOD1 998244353\r\n#define tb cout << \"<<<<<<<<<<<<TB where?>>>>>>>>>>>>\" << endl;\r\n#define all(a) a.begin(), a.end()       //  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2001 \u2588\u2588\u2588\u2588\u2588\u2001 \u2588\u2588\u2001   \u2588\u2588\u2001\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2001\u2588\u2588\u2588\u2001   \u2588\u2588\u2588\u2001     \u2588\u2588\u2001\u2588\u2588\u2001  \u2588\u2588\u2001   \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2001* reset global array and variable\r\n#define allr(a) a.rbegin(), a.rend()    //  \u2588\u2588\u2001\u2001\u2001\u2001\u2001\u2001\u2588\u2588\u2001\u2001\u2001\u2588\u2588\u2001\u2001\u2588\u2588\u2001 \u2588\u2588\u2001\u2001\u2588\u2588\u2001\u2001\u2001\u2001\u2001\u2001\u2588\u2588\u2588\u2588\u2001 \u2588\u2588\u2588\u2588\u2001    \u2588\u2588\u2588\u2001\u2588\u2588\u2001  \u2588\u2588\u2001   \u2588\u2588\u2001\u2001\u2001\u2001\u2001\u2001* look for special cases (n=1?)\r\n#define no cout << \"NO\" << endl         //  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2001\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2001 \u2001\u2588\u2588\u2588\u2588\u2001\u2001 \u2588\u2588\u2588\u2588\u2588\u2001  \u2588\u2588\u2001\u2588\u2588\u2588\u2588\u2001\u2588\u2588\u2001    \u2001\u2588\u2588\u2001\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2001   \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2001* bruteforce to find pattern       * do something instead of nothing and stay organized\r\n#define yes cout << \"YES\" << endl       //  \u2001\u2001\u2001\u2001\u2001\u2588\u2588\u2001\u2588\u2588\u2001\u2001\u2001\u2588\u2588\u2001  \u2001\u2588\u2588\u2001\u2001  \u2588\u2588\u2001\u2001\u2001\u2001  \u2588\u2588\u2001\u2001\u2588\u2588\u2001\u2001\u2588\u2588\u2001     \u2588\u2588\u2001\u2001\u2001\u2001\u2001\u2001\u2588\u2588\u2001   \u2001\u2001\u2001\u2001\u2001\u2588\u2588\u2001* Think the problem backwards      * DON'T GET STUCK ON ONE APPROACH\r\n#define memz(a) memset(a, 0, sizeof(a)) //  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2001\u2588\u2588\u2001  \u2588\u2588\u2001   \u2588\u2588\u2001   \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2001\u2588\u2588\u2001 \u2001\u2001\u2001 \u2588\u2588\u2001     \u2588\u2588\u2001     \u2588\u2588\u2001\u2588\u2588\u2001\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2001* int overflow, array bounds       * In practice time don't see failing test case  * for BS on answer sometime right = inf you can get WA\r\n#define memn(a) memset(a, -1, sizeof(a))\r\n#define coutd cout << fixed << setprecision(10) // coutd<<res<<endl;\r\n#define fore(i, l, r) for (int i = int(l); i < int(r); i++)\r\n#define pb push_back\r\n#define ppb pop_back // #define mp make_pair\r\n#define ff first\r\n#define ss second\r\n#define PI 3.141592653589793238462\r\n#define set_bits __builtin_popcountll\r\n#define sz(x) ((int)(x).size())\r\n// #include <ext/pb_ds/assoc_container.hpp>\r\n// #include <ext/pb_ds/tree_policy.hpp>\r\n// using namespace __gnu_pbds;\r\n// #define ordered_set tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>\r\nconst double pi = acos(-1);\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\nconst ll N = 200050;\r\nconst ll INF = 1e18 + 10;\r\nconst ull mod = 1e9 + 7;\r\n/*------------------------------Graph Moves----------------------------*/\r\n// const int fx[]={+1,-1,+0,+0};\r\n// const int fy[]={+0,+0,+1,-1};\r\n// const int fx[]={+0,+0,+1,-1,-1,+1,-1,+1};   // Kings Move\r\n// const int fy[]={-1,+1,+0,+0,+1,+1,-1,-1};  // Kings Move\r\n// const int fx[]={-2, -2, -1, -1,  1,  1,  2,  2};  // Knights Move\r\n// const int fy[]={-1,  1, -2,  2, -2,  2, -1,  1}; // Knights Move\r\n/*---------------------------------------------------------------------*/\r\n/********************|\r\n   START HERE        |\r\n*********************/\r\nvoid Main()\r\n{\r\n    ll n = 0, m = 0, a = 0, b = 0, i = 0, j = 0, k = 0, l = 0, r = 0, ans = 0, temp = 0, cnt = 0, sum = 0;\r\n    string s, s1, s2, s3;\r\n    cin >> n >> k;\r\n    cin >> s;\r\n    vector<ll> aa, bb, cc, dd;\r\n    map<ll, ll> mp;\r\n    s1 = s;\r\n    if (k > n)\r\n    {\r\n        cout << s;\r\n        char mn = *min_element(s.begin(), s.end());\r\n        for (int i = 0; i < k - n; i++)\r\n            cout << mn;\r\n        cout << endl;\r\n        return;\r\n    }\r\n    else\r\n    {\r\n        sort(s1.begin(), s1.end());\r\n        for (int i = k - 1; i >= 0; i--)\r\n        {\r\n            auto u = upper_bound(s1.begin(), s1.end(), s[i]);\r\n            if (u != s1.end())\r\n            {\r\n                s[i] = *u;\r\n                for (int i = 0; i < k; i++)\r\n                    cout << s[i];\r\n                cout << endl;\r\n                return;\r\n            }\r\n            s[i] = s1[0];\r\n        }\r\n    }\r\n\r\n    return;\r\n}\r\n/********************|\r\n   STOP HERE         |\r\n*********************/\r\nint main()\r\n{\r\n    // ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n    ll t, test_case = 1;\r\n    t = 1;\r\n    // cin >> t;\r\n    while (t--)\r\n    {\r\n        // -->> 1\r\n        // printf(\"Case #%d: \", test_case);\r\n\r\n        // -->> 2\r\n        Main();\r\n\r\n        // -->> 3\r\n        // printf(\"%lld\\n\", (ll)Main());\r\n\r\n        // -->> 4\r\n        // if (Main())\r\n        // {\r\n        //     printf(\"Yes\\n\");\r\n        // }\r\n        // else\r\n        // {\r\n        //     printf(\"No\\n\");\r\n        // }\r\n\r\n        //!!!!???\r\n        // test_case++;\r\n    }\r\n    return 0;\r\n}\r\n"
}