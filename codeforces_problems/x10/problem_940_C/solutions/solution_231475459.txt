{
    "id": 231475459,
    "contestId": 940,
    "creationTimeSeconds": 1699194589,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 940,
        "index": "C",
        "name": "Phone Numbers",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1500,
        "tags": [
            "constructive algorithms",
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 940,
        "members": [
            {
                "handle": "piru72"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1519464900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define ll long long int\r\n#define endl \"\\n\"\r\nvoid solve()\r\n{\r\n\r\n    int n, k;\r\n    string s;\r\n    cin >> n >> k >> s;\r\n\r\n    // given s find t of length k such that elements of t are in s and t is lexicographically smaller than s\r\n\r\n  \r\n    sort (s.rbegin(), s.rend());\r\n    char firstChar = s[0];\r\n    char lastChar = s[n - 1];\r\n\r\n    string t = \"\";\r\n\r\n    t += firstChar;\r\n\r\n    for (int i = 1; i < k; i++)\r\n        t += lastChar;\r\n\r\n    cout<< t << endl;\r\n\r\n    //cerr << boolalpha << (t > s) << endl;\r\n}\r\nint32_t main()\r\n{\r\n\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    int tc = 1;\r\n    // cin >> tc;\r\n    while (tc--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}"
}