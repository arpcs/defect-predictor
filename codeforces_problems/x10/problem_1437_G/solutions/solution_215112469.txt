{
    "id": 215112469,
    "contestId": 1437,
    "creationTimeSeconds": 1690073377,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1437,
        "index": "G",
        "name": "Death DBMS",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "data structures",
            "string suffix structures",
            "strings",
            "trees"
        ]
    },
    "author": {
        "contestId": 1437,
        "members": [
            {
                "handle": "nch123"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1603809300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 91,
    "timeConsumedMillis": 1107,
    "memoryConsumedBytes": 102297600,
    "source": "// LUOGU_RID: 116999658\n#pragma GCC optimize(2) \r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=3e5+5,K=26;\r\nint ch[N][K],tot,n,m,ne[N];\r\nint id[N];\r\nmultiset<int>s[N<<2];\r\ninline void ins(char *st,int x){\r\n\tint p=0;\r\n\tfor(int i=0;st[i];++i){\r\n\t\tint c=st[i]-'a';\r\n\t\tif(!ch[p][c]) ch[p][c]=++tot;\r\n\t\tp=ch[p][c];\r\n\t}\r\n\tid[x]=p;\r\n}\r\nint q[N],l=1,r;\r\nvector<int>g[N];\r\nvoid build()\r\n{\r\n\tfor(int i=0;i<K;++i)\r\n\t\tif(ch[0][i]) q[++r]=ch[0][i];\r\n\twhile(l<=r){\r\n\t\tint x=q[l++];\r\n\t\tfor(int i=0;i<K;++i)\r\n\t\t\tif(!ch[x][i]) ch[x][i]=ch[ne[x]][i];\r\n\t\t\telse ne[ch[x][i]]=ch[ne[x]][i],q[++r]=ch[x][i];\r\n\t\tg[ne[x]].push_back(x);\r\n\t}\r\n}\r\nchar st[N];\r\nint dfn[N],ed[N],idx;\r\nvoid dfs(int x){\r\n\tdfn[x]=++idx;\r\n\tfor(auto y:g[x]) dfs(y);\r\n\ted[x]=idx;\r\n}\r\n#define k1 (k<<1)\r\n#define k2 (k<<1|1)\r\n#define mid ((l+r)>>1)\r\nvoid change(int L,int R,int v,int op,int k=1,int l=1,int r=idx){\r\n\tif(L<=l&&R>=r){\r\n\t\tif(op) s[k].insert(v);\r\n\t\telse s[k].erase(s[k].find(v));\r\n\t\treturn;\r\n\t}\r\n\tif(L<=mid) change(L,R,v,op,k1,l,mid);\r\n\tif(R>mid) change(L,R,v,op,k2,mid+1,r);\r\n}\r\nint ask(int x,int k=1,int l=1,int r=idx){\r\n\tint tmp=!s[k].size()?-1:*s[k].rbegin();\r\n\tif(l==r) return tmp;\r\n\tif(x<=mid) return max(ask(x,k1,l,mid),tmp);\r\n\telse return max(ask(x,k2,mid+1,r),tmp); \r\n}\r\ninline int qask(char *st){\r\n\tint p=0,ans=-1;\r\n\tfor(int i=0;st[i];++i)\r\n\t\tp=ch[p][st[i]-'a'], ans=max(ans,ask(dfn[p]));\r\n\treturn ans;\r\n}\r\nint v[N];\r\nsigned main()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);cout.tie(0);\r\n    cin>>n>>m;\r\n    for(int i=1;i<=n;++i) cin>>st,ins(st,i);\r\n    build(),dfs(0);\r\n    for(int i=1;i<=n;++i) change(dfn[id[i]],ed[id[i]],0,1);\r\n    int opt,x,y;\r\n    while(m--){\r\n\t\tcin>>opt;\r\n\t\tif(opt==1) cin>>x>>y,change(dfn[id[x]],ed[id[x]],v[x],0),change(dfn[id[x]],ed[id[x]],v[x]=y,1);\r\n\t\telse cin>>st,cout<<qask(st)<<endl; \r\n\t} \r\n}"
}