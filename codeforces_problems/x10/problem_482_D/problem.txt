{
    "contestId": 482,
    "index": "D",
    "name": "Random Function and Tree",
    "type": "PROGRAMMING",
    "points": 2000.0,
    "rating": 2700,
    "tags": [
        "combinatorics",
        "dp",
        "trees"
    ],
    "desc": {
        "title": "D. Random Function and Tree",
        "statement": "<p>You have a rooted tree consisting of <span class=\"tex-span\"><i>n</i></span> vertices. Let's number them with integers from <span class=\"tex-span\">1</span> to <span class=\"tex-span\"><i>n</i></span> inclusive. The root of the tree is the vertex <span class=\"tex-span\">1</span>. For each <span class=\"tex-span\"><i>i</i>\u2009&gt;\u20091</span> direct parent of the vertex <span class=\"tex-span\"><i>i</i></span> is <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></span>. We say that vertex <span class=\"tex-span\"><i>i</i></span> is child for its direct parent <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></span>.</p><p>You have initially painted all the vertices with red color. You like to repaint some vertices of the tree. To perform painting you use the function <span class=\"tex-font-style-tt\">paint</span> that you call with the root of the tree as an argument. Here is the pseudocode of this function:</p><pre class=\"verbatim\"><br/>count = 0 // global integer variable <br/><br/>rnd() { // this function is used in paint code<br/>    return 0 or 1 equiprobably<br/>}<br/><br/>paint(s) {<br/>    if (count is even) then paint s with white color<br/>    else paint s with black color<br/><br/>    count = count + 1<br/>    <br/>    if rnd() = 1 then children = [array of vertex s children in ascending order of their numbers]<br/>    else children = [array of vertex s children in descending order of their numbers]<br/><br/>    for child in children { // iterating over children array<br/>        if rnd() = 1 then paint(child) // calling paint recursively<br/>    }<br/>}<br/></pre><p>As a result of this function, some vertices may change their colors to white or black and some of them may remain red.</p><p>Your task is to determine the number of distinct possible colorings of the vertices of the tree. We will assume that the coloring is possible if there is a nonzero probability to get this coloring with a single call of <span class=\"tex-span\"><i>paint</i>(1)</span>. We assume that the colorings are different if there is a pair of vertices that are painted with different colors in these colorings. Since the required number may be very large, find its remainder of division by <span class=\"tex-span\">1000000007</span> (<span class=\"tex-span\">10<sup class=\"upper-index\">9</sup>\u2009+\u20097</span>).</p>",
        "inputSpecification": "<p>The first line contains a single integer <span class=\"tex-span\"><i>n</i></span> (<span class=\"tex-span\">2\u2009\u2264\u2009<i>n</i>\u2009\u2264\u200910<sup class=\"upper-index\">5</sup></span>)\u00a0\u2014 the number of vertexes in the tree.</p><p>The second line contains <span class=\"tex-span\"><i>n</i>\u2009-\u20091</span> integers <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\">2</sub>,\u2009<i>p</i><sub class=\"lower-index\">3</sub>,\u2009...,\u2009<i>p</i><sub class=\"lower-index\"><i>n</i></sub></span> (<span class=\"tex-span\">1\u2009\u2264\u2009<i>p</i><sub class=\"lower-index\"><i>i</i></sub>\u2009&lt;\u2009<i>i</i></span>). Number <span class=\"tex-span\"><i>p</i><sub class=\"lower-index\"><i>i</i></sub></span> is the parent of vertex <span class=\"tex-span\"><i>i</i></span>.</p>",
        "outputSpecification": "<p>Print a single integer\u00a0\u2014 the answer to the problem modulo <span class=\"tex-span\">1000000007</span> (<span class=\"tex-span\">10<sup class=\"upper-index\">9</sup>\u2009+\u20097</span>)</p>",
        "samples": [
            {
                "input": "<br/>count = 0 // global integer variable <br/><br/>rnd() { // this function is used in paint code<br/>    return 0 or 1 equiprobably<br/>}<br/><br/>paint(s) {<br/>    if (count is even) then paint s with white color<br/>    else paint s with black color<br/><br/>    count = count + 1<br/>    <br/>    if rnd() = 1 then children = [array of vertex s children in ascending order of their numbers]<br/>    else children = [array of vertex s children in descending order of their numbers]<br/><br/>    for child in children { // iterating over children array<br/>        if rnd() = 1 then paint(child) // calling paint recursively<br/>    }<br/>}<br/>",
                "output": "4<br/>1 2 1<br/>"
            },
            {
                "input": "8<br/>",
                "output": "3<br/>1 1<br/>"
            }
        ],
        "note": "<p>All possible coloring patterns of the first sample are given below.</p><center> <img class=\"tex-graphics\" src=\"https://espresso.codeforces.com/83c735ce8630ba4e5efce5a6018b1975c1ffd0ca.png\" style=\"max-width: 100.0%;max-height: 100.0%;\"/> </center>"
    },
    "suggested_categories": [
        "graph theory",
        "tree traversal",
        "recursion",
        "probability",
        "coloring problem",
        "algorithm design",
        "data structures",
        "binary tree",
        "dynamic programming",
        "programming contests",
        "combinatorics",
        "mathematical problem",
        "codeforces",
        "competitive programming",
        "software development",
        "computer science",
        "coding challenges",
        "algorithmic problem solving",
        "computer algorithms",
        "problem solving"
    ]
}