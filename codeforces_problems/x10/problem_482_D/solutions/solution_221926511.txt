{
    "id": 221926511,
    "contestId": 482,
    "creationTimeSeconds": 1693914233,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 482,
        "index": "D",
        "name": "Random Function and Tree",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2700,
        "tags": [
            "combinatorics",
            "dp",
            "trees"
        ]
    },
    "author": {
        "contestId": 482,
        "members": [
            {
                "handle": "AsiaticToddaliaRoot"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1414170000
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nusing ll = long long;\r\nusing ull = unsigned long long;\r\nusing ld = long double;\r\nusing i128 = __int128;\r\nusing u128 = unsigned __int128;\r\ntemplate <typename T>\r\nvoid chkmax(T &x, const T &y) {\r\n  if (x < y) x = y;\r\n}\r\ntemplate <typename T>\r\nvoid chkmin(T &x, const T &y) {\r\n  if (y < x) x = y;\r\n}\r\nconstexpr int MAXN = 1e5 + 10, MOD = 1e9 + 7;\r\nconstexpr int rev[4] = {0, 2, 1, 3};\r\nconstexpr bool sam[4] = {1, 0, 0, 1};\r\nvoid inc(int &x, int y) { x += y, x >= MOD && (x -= MOD); }\r\nint add(int x, int y) { return x += y, x >= MOD ? x - MOD : x; }\r\nint n, dp[MAXN][2];\r\nvector<int> g[MAXN];\r\nvoid dfs(int u) {\r\n  sort(g[u].begin(), g[u].end());\r\n  for (auto v : g[u]) dfs(v);\r\n  static int temp[2][2][4][4];\r\n  int p = 0;\r\n  memset(temp[0], 0, sizeof(temp[0]));\r\n  for (auto v : g[u]) {\r\n    p ^= 1;\r\n    memset(temp[p], 0, sizeof(temp[p]));\r\n    temp[p][1][3][2] = dp[v][0];\r\n    temp[p][1][1][1] = dp[v][0];\r\n    temp[p][0][3][3] = dp[v][1];\r\n    temp[p][0][1][0] = dp[v][1];\r\n    for (int par = 0; par < 2; ++par) {\r\n      for (int can = 1; can < 4; ++can) {\r\n        for (int lst = 0; lst < 4; ++lst) {\r\n          int cur = temp[!p][par][can][lst];\r\n          if (!cur) continue;\r\n          inc(temp[p][par][can][lst], cur);\r\n          for (int nlst = 0; nlst < 4; ++nlst) {\r\n            int ncan = can & (nlst ^ rev[lst]);\r\n            temp[p][par ^ sam[nlst]][ncan][nlst] =\r\n                (temp[p][par ^ sam[nlst]][ncan][nlst] +\r\n                 (ll)cur * dp[v][sam[nlst]]) %\r\n                MOD;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  dp[u][1] = 1;\r\n  for (int par = 0; par < 2; ++par) {\r\n    for (int can = 1; can < 4; ++can) {\r\n      for (int lst = 0; lst < 4; ++lst) {\r\n        if (can >> 1 || ((can & 1) && lst >> 1))\r\n          inc(dp[u][par], temp[p][par][can][lst]);\r\n      }\r\n    }\r\n  }\r\n}\r\nint main() {\r\n  ios::sync_with_stdio(false);\r\n  cin.tie(nullptr);\r\n  cin >> n;\r\n  for (int i = 2, fa; i <= n; ++i) {\r\n    cin >> fa;\r\n    g[fa].emplace_back(i);\r\n  }\r\n  dfs(1);\r\n  cout << add(dp[1][0], dp[1][1]) << \"\\n\";\r\n  return 0;\r\n}\r\n// g++ A.cpp -o A -Wall -Wextra -Wshadow -O2 -std=c++14 -g\r\n// -fsanitize=address,undefined//2461028227709263064"
}