{
    "id": 233354227,
    "contestId": 1294,
    "creationTimeSeconds": 1700337025,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1294,
        "index": "F",
        "name": "Three Paths on a Tree",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dfs and similar",
            "dp",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1294,
        "members": [
            {
                "handle": "xiaoping3418"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1579703700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 305,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 12595200,
    "source": "    #include<bits/stdc++.h>\n             \n    // for std::cout << std::setprecision(9);\n    using namespace std;\n     \n     \n    void solve();     \n    int32_t main() {\n        ios_base::sync_with_stdio(0); std::cin.tie(0); std::cout.tie(0);\n             \n        //int32_t t;\n        //cin >> t;\n         \n        //while (t--) {\n            solve();\n        //}\n           \n        return 0;\n          \n    }\n         \n    void solve() {\n        ios::sync_with_stdio(false);\n        cin.tie(nullptr);\n        std::cout.tie(nullptr);\n        std::cout << fixed << setprecision(12);\n        \t\n        int n;\n        \n        cin >> n;\n     \n        vector<vector<int>> g(n + 1);\n        \n        for (int i = 0; i + 1 < n; ++i) {\n            int u , v;\n            cin >> u >> v;\n            g[u].push_back(v);\n            g[v].push_back(u);\n        }\n     \n        auto dfs = [&](auto self, int u, vector<int> &d) -> void {\n            for (auto &v: g[u]) {\n                if (d[v] <= d[u]) continue;\n                \n                d[v] = d[u] + 1;\n                self(self, v, d);   \n            }\n        };\n     \n        vector<int> d1(n + 1, INT_MAX);\n        d1[1] = 0;\n        dfs(dfs, 1, d1);\n        \n        int u = 1, dist = 0;\n        \n        for (int i = 1; i <= n; ++i) {\n            if (d1[i] <= dist) continue;\n            \n            dist = d1[i];\n            u = i;\n        }\n        \n        vector<int> d2(n + 1, INT_MAX);\n        d2[u] = 0;\n        dfs(dfs, u, d2);\n     \n        int v = -1;\n        dist = 0;\n        \n        for (int i = 1; i <= n; ++i) {\n            if (d2[i] <= dist) continue;\n            \n            dist = d2[i];\n            v = i;\n        }\n        \n        vector<int> d3(n + 1, INT_MAX);\n        d3[v] = 0;\n        dfs(dfs, v, d3);\n     \n        int ret = 0, w = 0;\n     \n        for (int i = 1; i <= n; ++i) {\n            if (i == u or i == v) continue;\n            \n            int t = d2[i] + d3[i];\n            if (t <= ret) continue;\n            \n            ret = t;\n            w = i;\n        }\n     \n        cout << (ret + d2[v]) / 2 << endl;\n        cout << u << \" \" << v << \" \" << w << endl;\n    }"
}