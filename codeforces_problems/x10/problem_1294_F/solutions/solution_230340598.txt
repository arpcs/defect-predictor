{
    "id": 230340598,
    "contestId": 1294,
    "creationTimeSeconds": 1698570248,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1294,
        "index": "F",
        "name": "Three Paths on a Tree",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "dfs and similar",
            "dp",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1294,
        "members": [
            {
                "handle": "anujp0212"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1579703700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 305,
    "timeConsumedMillis": 249,
    "memoryConsumedBytes": 17305600,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n\r\n#define          ll                   long long \r\n#define          all(v)              v.begin(), v.end()\r\n#define         rall(v)              v.rbegin(),v.rend()\r\n \r\n#define            pb                push_back\r\n#define          sz(a)               (long long)a.size()\r\n#define          f(start,end)        for(ll i=start;i<end;i++)\r\n#define         x                       first\r\n#define             y                   second\r\n\r\n    pair<ll,ll> dfs(vector<vector<ll>>&adj, vector<ll>&par, ll node, ll parent, ll dist){\r\n        pair<ll,ll> mx = {dist,node};\r\n        par[node]=parent;\r\n\r\n        for(auto &to : adj[node]){\r\n            if(to!=parent){\r\n                mx=max(mx,dfs(adj,par,to,node,dist+1));\r\n            }\r\n        }\r\n\r\n        return mx;\r\n    }\r\n \r\n    int32_t main()\r\n    {\r\n        ios::sync_with_stdio(0);\r\n        cin.tie(0);\r\n        cout.tie(0);\r\n\r\n            ll n;\r\n            cin>>n;\r\n\r\n            vector<vector<ll>>adj(n);\r\n\r\n            for(ll i=0;i<n-1;i++){\r\n                ll u,v;\r\n                cin>>u>>v;\r\n\r\n                u-=1;v-=1;\r\n\r\n                adj[u].push_back(v);\r\n                adj[v].push_back(u);\r\n            }\r\n\r\n            vector<ll>par(n),dia;\r\n            pair<ll,ll>d1,d2;\r\n            d1=dfs(adj,par,0,-1,0);\r\n            d2=dfs(adj,par,d1.y,-1,0);\r\n\r\n\r\n            ll v = d2.y;\r\n\r\n            while(v!=d1.y){\r\n                dia.pb(v);\r\n                v=par[v];\r\n            }\r\n            dia.pb(v);\r\n\r\n            if(dia.size()==n){\r\n                cout<<n-1<<\"\\n\";\r\n                cout<<dia[0]+1<<\" \"<<dia[1]+1<<\" \"<<dia.back()+1<<\"\\n\";\r\n                \r\n            }\r\n\r\n            else {\r\n\r\n                queue<ll>q;\r\n                vector<ll>d(n,-1);\r\n\r\n                for(auto &m:dia){\r\n                    d[m]=0;\r\n                    q.push(m);\r\n                }\r\n\r\n                while(!q.empty()){\r\n                    ll temp=q.front();\r\n                    q.pop();\r\n\r\n                    for(auto &to : adj[temp]){\r\n                        if(d[to]==-1){\r\n                            d[to]=d[temp]+1;\r\n                            q.push(to);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                pair<ll,ll>mx;\r\n\r\n                mx = {d[0],0};\r\n\r\n                for(ll i=1;i<n;i++){\r\n                    mx=max(mx,{d[i],i});\r\n                }\r\n\r\n                cout<<d2.x+mx.x<<\"\\n\";\r\n                cout<<d1.y+1<<\" \"<<d2.y+1<<\" \"<<mx.y+1<<\"\\n\";\r\n            }\r\n\r\n    }\r\n    "
}