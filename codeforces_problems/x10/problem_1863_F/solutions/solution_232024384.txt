{
    "id": 232024384,
    "contestId": 1863,
    "creationTimeSeconds": 1699510917,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1863,
        "index": "F",
        "name": "Divide, XOR, and Conquer",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2600,
        "tags": [
            "bitmasks",
            "dp",
            "math"
        ]
    },
    "author": {
        "contestId": 1863,
        "members": [
            {
                "handle": "zhensuan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1693406100
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 280,
    "memoryConsumedBytes": 204800,
    "source": "#include <bits/stdc++.h>\r\n\r\n#define just return\r\n#define love 0\r\n#define iu ,void();\r\n#define int long long\r\n#define ll int\r\n#define ii inline int\r\n#define gcd __gcd\r\n#define pii pair<int,int>\r\n#define endl '\\n'\r\n#define fi first\r\n#define se second\r\n#define unit unsigned int\r\n#define r1 root<<1\r\n#define r2 root<<1|1\r\n#define rt tree[root]\r\n#define rl tree[r1]\r\n#define rr tree[r2]\r\n#define mid ((rt.l+rt.r)>>1)\r\n#define mids ((l+r)>>1)\r\n#define st int root,int l,int r\r\n#define ed int x,int y\r\n#define bit bitset\r\n// #define len (rt.r-rt.l+1)\r\nusing namespace std;\r\nconst int maxn = 1e5 + 5;\r\nconst int Max = 2e5 + 5;\r\nconst int mod = 1e9 + 7;\r\nconst int inf = 0x3f3f3f3f3f3f3f;\r\nint highbit(int x) {\r\n    if (!x)return (1ll << 61) - 1;\r\n    return 1ll << (63 - __builtin_clzll(x));\r\n}\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n    vector<int>a(n + 1);\r\n    vector<int>l(n + 1), r(n + 1);\r\n    for (int i = 1;i <= n;i++)cin >> a[i], a[i] ^= a[i - 1];\r\n    auto sum = [&](int x, int y) {\r\n        return a[x - 1] ^ a[y];\r\n    };\r\n    l[1] = r[n] = highbit(sum(1, n));\r\n    for (int len = n;len;len--) {\r\n        for (int i = 1;i + len - 1 <= n;i++) {\r\n            int j = i + len - 1;\r\n            int mask = (l[i] & sum(i, j)) | (r[j] & sum(i, j));\r\n            bool flag = 0;\r\n            if (mask || l[i] == (1ll << 61) - 1 || r[j] == (1ll << 61) - 1) {\r\n                l[i] |= highbit(sum(i, j));\r\n                r[j] |= highbit(sum(i, j));\r\n                flag = 1;\r\n            }\r\n            if (len == 1)cout << flag;\r\n        }\r\n    }\r\n    cout << endl;\r\n}\r\nsigned main() {\r\n    ios::sync_with_stdio(false), cin.tie(0), cout.tie(0);\r\n    int t = 1;\r\n    cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n}"
}