{
    "id": 231055142,
    "contestId": 1863,
    "creationTimeSeconds": 1698979369,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1863,
        "index": "F",
        "name": "Divide, XOR, and Conquer",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2600,
        "tags": [
            "bitmasks",
            "dp",
            "math"
        ]
    },
    "author": {
        "contestId": 1863,
        "members": [
            {
                "handle": "wzxakioi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1693406100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 41,
    "timeConsumedMillis": 421,
    "memoryConsumedBytes": 100659200,
    "source": "#include<bits/stdc++.h>\r\n#define re signed\r\n#define LL long long\r\nusing namespace std;\r\nconst int maxn = 1e4+3;\r\nbool f[maxn][maxn];\r\nint n;\r\nLL a[maxn],pre[maxn];\r\nint l0[maxn],r0[maxn];\r\nLL lv[maxn],rv[maxn];\r\nLL get_hight(LL x){\r\n    return 1ll<<(63-__builtin_clzll(x));\r\n}\r\ninline void upd(int l,int r) {\r\n    if(!f[l][r]) return;\r\n    if((pre[r] ^ pre[l-1]) == 0) {\r\n        l0[l] = max(l0[l],r);\r\n        r0[r] = min(r0[r],l);\r\n        return;\r\n    }\r\n    LL bit = get_hight(pre[l-1] ^ pre[r]);\r\n    lv[l] |= bit;\r\n    rv[r] |= bit;\r\n}\r\ninline void solve() {\r\n    scanf(\"%d\",&n);\r\n    for(re int i=1;i<=n;i++)\r\n        for(re int j=i;j<=n;j++) f[i][j] = false;\r\n    for(re int i=1;i<=n;i++) {\r\n        l0[i] = 0,r0[i] = n+1;\r\n        lv[i] = 0,rv[i] = 0;\r\n    }\r\n    for(re int i=1;i<=n;i++) scanf(\"%lld\",&a[i]);\r\n    for(re int i=1;i<=n;i++) pre[i] = pre[i-1] ^ a[i];\r\n    f[1][n] = true;\r\n    upd(1,n);\r\n    for(re int len=n-1;len;--len)\r\n        for(re int i=1;i+len-1<=n;++i) {\r\n            int j = i+len-1;\r\n            LL v = pre[j] ^ pre[i-1];\r\n            if(v) {\r\n                if(lv[i]&v) f[i][j] = true;\r\n                if(rv[j]&v) f[i][j] = true;\r\n            }\r\n            if(l0[i] > j) f[i][j] = true;\r\n            if(r0[j] < i) f[i][j] = true;\r\n            upd(i,j);\r\n        }\r\n    for(re int i=1;i<=n;i++) putchar(f[i][i]?'1':'0');\r\n    puts(\"\");\r\n}\r\nint main() {\r\n    int T;scanf(\"%d\",&T);\r\n    while(T--) solve();\r\n    return 0;\r\n}"
}