{
    "id": 229951399,
    "contestId": 1661,
    "creationTimeSeconds": 1698377347,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1661,
        "index": "D",
        "name": "Progressions Covering",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "data structures",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1661,
        "members": [
            {
                "handle": "coderdhanraj"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649514900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 7270400,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\nusing namespace chrono;\r\n#ifdef coderdhanraj\r\n#include \"libs/debug.h\"\r\n#else\r\n#define debug(...) \r\n#endif\r\n#define int long long\r\n#define double long double\r\n#define vi vector<int>\r\n#define mii map<int, int>\r\n#define pii pair<int, int>\r\n#define vii vector<pii>\r\n#define ff first\r\n#define ss second\r\n#define pb push_back\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n#define MP make_pair\r\n#define size(x) (int)(x).size()\r\n#define all(x) (x).begin(), (x).end()\r\n#define rall(x) (x).rbegin(), (x).rend()\r\n#define MAX(x) *max_element(all(x))\r\n#define MIN(x) *min_element(all(x))\r\n#define SUM(x) accumulate(all(x), 0LL)\r\n#define FIND(x, y) binary_search(all(x), y)\r\n#define MEM(x, y) memset(x, y, sizeof(x))\r\n#define CNT(x) __builtin_popcountll(x)\r\n#define rep(i, a, b) for (int i = (a); i < (b); i++)\r\n#define bck(i, a, b) for (int i = (a) - 1; i >= (b); i--)\r\n#define endl '\\n' // remove for interactives\r\nusing i64 = int64_t; using u64 = uint64_t; using i128 = __int128_t; using u128 = __uint128_t;\r\n/* --------------------------------------------------------- TEMPLATES --------------------------------------------------- */\r\nclass custom_hash{public: static u64 splitmix64(u64 x){ x += 0x9e3779b97f4a7c15; x = (x ^ (x >> 30)) * 0xbf58476d1ce4e5b9; x = (x ^ (x >> 27)) * 0x94d049bb133111eb; return x ^ (x >> 31);}\r\n    size_t operator()(u64 x) const {static const u64 FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count(); return splitmix64(x + FIXED_RANDOM);}\r\n    template<typename P, typename Q>\r\n    size_t operator()(const pair<P, Q> &Y) const{static const u64 FIXED_RANDOM = chrono::steady_clock::now().time_since_epoch().count(); return splitmix64(Y.first * 31ull + Y.second + FIXED_RANDOM);}\r\n};\r\ntemplate<typename P, typename Q> istream& operator>>(istream &in, pair<P, Q> &p){return (in >> p.first >> p.second);}\r\ntemplate<typename P, typename Q> ostream& operator<<(ostream &out, const pair<P, Q> &p){return (out << p.first << \" \" << p.second); }\r\ntemplate<typename T> istream& operator>>(istream &in, vector<T> &a){for(auto &e : a) cin >> e; return in;}\r\ntemplate<typename T> ostream& operator<<(ostream &out, const vector<T> &a){for (auto &e : a) cout << e << \" \"; return out;}\r\ntemplate<typename T, size_t N> istream& operator>>(istream &in, array<T, N> &a){for(auto &e : a) cin >> e; return in;}\r\ntemplate<typename T, size_t N> ostream& operator<<(ostream &out, array<T, N> &a){for (auto &e : a) cout << e << \" \"; return out;}\r\ntemplate<typename T> using indexed_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\r\ntemplate<typename T> using min_heap = priority_queue<T, vector<T>, greater<T>>;\r\ntemplate<typename T> using vec = vector<vector<T>>;\r\ntemplate<typename P, size_t Q> using var = vector<array<P, Q>>;\r\ntemplate<typename P, typename Q> using indexed_map = tree<P, Q, less<P>, rb_tree_tag, tree_order_statistics_node_update>;\r\ntemplate<typename P, typename Q> using gphash = gp_hash_table<P, Q, custom_hash>;\r\ntemplate<typename P, typename Q> using umap = unordered_map<P, Q, custom_hash>;\r\ntemplate<typename P, typename Q> void amax(P &x, Q y){if(x < y) x = y;}\r\ntemplate<typename P, typename Q> void amin(P &x, Q y){if(x > y) x = y;}\r\ntemplate<typename T> void unique(vector<T> &a){sort(all(a)); a.resize(unique(all(a)) - a.begin());}\r\ntemplate<typename T> T ceil(T x, T y){return (x >= 0 ? (x + y - 1) / y : x / y);}\r\ntemplate<typename T> T floor(T x, T y){return x / y - ((x ^ y) < 0 and x % y);}\r\ntemplate<typename T> T gcd(T x, T y){return (x ? gcd(y % x, x) : y);}\r\ntemplate<typename T> T lcm(T x, T y){return x / gcd(x, y) * y;}\r\ntemplate<typename T> T ncr(T n, T k){if (n < k){return 0;} k = min(k, n - k); T ans = 1; rep(i, 1, k + 1){ans *= (n - i + 1), ans /= i;} return ans;}\r\ntemplate<typename P, typename Q> P expo(P x, Q y, u64 m = LLONG_MAX){P res = 1; x = x % m; while (y > 0){if (y & 1) res = (u128)res * x % m; y = y >> 1, x = (u128)x * x % m;} return res;}\r\ntemplate<typename P, typename Q> P bpow(P x, Q y){P res = 1; while (y > 0){if (y & 1) res *= x; y = y >> 1, x *= x;} return res;}\r\ntemplate<typename P, typename Q> P inv(P n, Q m){return expo(n, m - 2, m);}\r\ntemplate<typename T> T sqr(T x){return x * x;}\r\n/* --------------------------------------------------------- UNIVERSAL CONSTANTS --------------------------------------------------- */\r\nconst double eps = 1e-9;\r\nconst int mod = 1e9 + 7;// 998244353LL; // 10000000069LL; // 3006703054056749LL;\r\nconst i64 inf = 1LL << 60;\r\nconst double pi = 3.14159265358979323846264338327950;\r\nconst int dx[16] = {1, 0, 0, -1, 1, 1, -1, -1, 2, 2, 1, 1, -1, -1, -2, -2};\r\nconst int dy[16] = {0, -1, 1, 0, -1, 1, -1, 1, -1, 1, -2, 2, -2, 2, -1, 1};\r\n/* --------------------------------------------------------- USEFUL FUNCTIONS ---------------------------------------------------- */\r\nint testcase;\r\nbool isOverflow(int x, int y){return (x > LLONG_MAX / y or y > LLONG_MAX / x);}\r\nbool ispow2(int x){return (x ? !(x & (x - 1)) : 0);}\r\nbool Case(){return cout << \"Case #\" << ++testcase << \": \", true;}\r\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\r\ni64 rand(i64 x, i64 y){return uniform_int_distribution<i64>(x, y)(rng);}\r\n#define JAI_SHREE_RAAM ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr), cout.precision(20), cout.setf(ios::fixed);\r\n/* ------------------------------------------------------- SOLUTION TO THE PROBLEM ------------------------------------------------- */\r\ntemplate <class T> class BIT{\r\nprivate: int n;\r\n    const T O{};\r\n    vector<T> Tree[2];\r\npublic: BIT(int _n) : n(_n){Tree[0].assign(n + 1, O), Tree[1].assign(n + 1, O);}\r\n    void op(T &a, T b){a += b;}\r\n    void _add(int id, int p, T u){for(; p <= n; p += (p & -p)) op(Tree[id][p], u);}\r\n    void add(int l, int r, T u){_add(0, l, u), _add(0, r + 1, -u), _add(1, l, u * (l - 1)), _add(1, r + 1, -u * r);}\r\n    void add(int p, T u){add(p, p, u);}\r\n    void update(int p, T u){add(p, u - query(p));}\r\n    T _query(int id, int p){T res = O; for(; p > 0; p -= (p & -p)) op(res, Tree[id][p]); return res;}\r\n    T _query(int p){return _query(0, p) * p - _query(1, p);}\r\n    T query(int l, int r){return (l > r ? O : _query(r) - _query(l - 1));}\r\n    T query(int p){return query(p, p);}\r\n};\r\nvoid solve(){\r\n    int n, k; cin >> n >> k;\r\n    vi a(n); cin >> a;\r\n    BIT<int> st(n);\r\n    /*\r\n        add 1 to K in subaray (L, R), R - L + 1 = K\r\n        => adding 1 in difference array (L, R) and -K in (R + 1)\r\n    */\r\n    int ans = 0;\r\n    bck(i, n, k){\r\n        int cur = st.query(1, i + 1);\r\n        int need = ceil(max(0LL, a[i] - cur), k);\r\n        int l = i - k + 1, r = i;\r\n        st.add(l + 1, r + 1, need);\r\n        ans += need;\r\n    }\r\n    int seg = 0;\r\n    rep(i, 0, k){\r\n        int cur = st.query(1, i + 1);\r\n        amax(seg, ceil(max(0LL, a[i] - cur), i + 1));\r\n    }\r\n    ans += seg;\r\n    cout << ans << endl;\r\n}\r\nint32_t main(){\r\n#ifdef coderdhanraj\r\n    auto start = high_resolution_clock::now();\r\n    freopen(\"error.txt\", \"w\", stderr);\r\n#endif\r\n    JAI_SHREE_RAAM\r\n    int ttc = 1;\r\n    // cin >> ttc;\r\n    while (ttc--) solve();\r\n#ifdef coderdhanraj\r\n    auto time =  duration_cast<microseconds>(high_resolution_clock::now() - start).count() / 1000;\r\n    cerr << \"Time: \" << time << \" ms!\" << endl;\r\n#endif\r\n    return 0;\r\n}"
}