{
    "id": 234932458,
    "contestId": 1661,
    "creationTimeSeconds": 1701264052,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1661,
        "index": "D",
        "name": "Progressions Covering",
        "type": "PROGRAMMING",
        "rating": 1900,
        "tags": [
            "data structures",
            "greedy"
        ]
    },
    "author": {
        "contestId": 1661,
        "members": [
            {
                "handle": "planes"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1649514900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 36044800,
    "source": "#include <bits/stdc++.h> \r\nusing namespace std;\r\nusing ll =long long;\r\n#define all(v) v.begin(),v.end()\r\n #define rep(i,a,b) for(int i=a;i<b;i++)\r\n#define rrep(i,a,b) for(int i=a;i>=b;i--)\r\n\r\nll INF=2e18;\r\n\r\nstruct segtree {\r\nll n;\r\nvector<ll> dat;\r\nvoid init(ll n_) {\r\n    n=1;\r\n    while (n<n_) n*=2;\r\ndat=vector<ll> (2*n-1,0LL);\r\n}\r\n \r\n    void update(ll k, ll a) {\r\n        k+=n-1;\r\n        dat[k]+=a;\r\n \r\n        while(k>0) {\r\n            k=(k-1)/2;\r\n            dat[k]=dat[k*2+1]+dat[2*k+2];\r\n        }\r\n    }\r\n \r\n    ll query (ll a, ll b, ll k,ll l, ll r) {\r\n \r\n        if(r<=a||b<=l) return 0LL;\r\n \r\n        if(a<=l&&r<=b) return dat[k];\r\n \r\n        else {\r\n            ll vl=query(a,b,k*2+1,l,(l+r)/2);\r\n            ll vr=query(a,b,k*2+2,(l+r)/2,r);\r\n            return vl+vr;\r\n        }\r\n    }\r\n \r\n};\r\n\r\n\r\n \r\nvoid solve() {\r\nll n,k;cin>>n>>k;\r\nvector<ll> b(n);\r\nfor(ll i=0;i<n;i++) cin>>b[i];\r\n\r\nsegtree seg;\r\nseg.init(n+k+10);\r\n\r\nsegtree r;\r\nr.init(n+k+10);\r\n\r\nfor(ll i=n;i>=k+1;i--) {\r\n  ll s=i-k+1;\r\n\r\n  ll count=r.query(s,i+1,0,0,r.n);\r\n  ll now=seg.query(0,i+1,0,0,seg.n);\r\n  now+=count*i;\r\n  \r\n  if(now<b[i-1]) {\r\n    ll t=(b[i-1]-now+k-1)/k;\r\n    seg.update(s,-t*(s-1));\r\n    seg.update(s+k,t*(s-1));\r\n    r.update(s,t);\r\n  }\r\n\r\n}\r\n\r\n\r\nll ans=r.query(0,r.n,0,0,r.n);\r\n\r\nll ma=0;\r\nfor(ll i=1;i<=k;i++) {\r\n  ll count=r.query(0,i+1,0,0,r.n);\r\n  ll now=seg.query(0,i+1,0,0,seg.n);\r\n  now+=i*count;\r\n\r\n  if(b[i-1]>now) {\r\n    ma=max(ma,(b[i-1]-now+i-1)/i);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\ncout<<ans+ma<<endl;\r\n\r\n\r\n\r\n}\r\n\r\nint main() {\r\n  ios::sync_with_stdio(false);\r\n  cin.tie(0);\r\n  ll t=1;\r\n  for(ll i=0;i<t;i++) {\r\n    solve();\r\n  }\r\n\r\n}\r\n\r\n\r\n  "
}