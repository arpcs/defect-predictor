{
    "id": 234535434,
    "contestId": 74,
    "creationTimeSeconds": 1701060158,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 74,
        "index": "A",
        "name": "Room Leader",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1000,
        "tags": [
            "implementation"
        ]
    },
    "author": {
        "contestId": 74,
        "members": [
            {
                "handle": "shankarsawant81"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1302879600
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<bits/stdc++.h>\n// #include<iostream>\n// #include<vector>\n// #include<algorithm>\n// #include<string>\n\n#define int long long int\n\nusing namespace std;\n\nsigned main() {\n#ifndef ONLINE_JUDGE\n\tfreopen(\"./input.txt\", \"r\", stdin);\n\tfreopen(\"./output.txt\", \"w\", stdout);\n#endif\n\tint n, maxi = -1;\n\n\tcin >> n;\n\n\tvector<string> names;\n\tvector<int> scores;\n\tfor (int i = 0; i <= n; i++) {\n\t\tstring s;\n\n\t\tgetline(cin, s);\n\n\t\tif (s.size() < 5) continue;\n\t\tstring name = \"\";\n\t\tint j = 0;\n\t\twhile (s[j] != ' ') {\n\t\t\tname += s[j++];\n\t\t}\n\t\tj++;\n\t\tint k = 0;\n\t\tint total = 0, x = 0;\n\t\twhile (j < s.size()) {\n\t\t\tstring num = \"0\";\n\t\t\twhile (s[j] >= '0' && s[j] <= '9') {\n\t\t\t\tif (num[0] == '0') num = s[j++];\n\t\t\t\telse num += s[j++];\n\t\t\t}\n\t\t\tj++;\n\t\t\tnames.push_back(name);\n\t\t\tscores.push_back(total);\n\n\t\t\tx = stoi(num);\n\n\t\t\tif (k > 1 && x == 0) continue;\n\t\t\tswitch (k++) {\n\t\t\t\tcase 0:\n\t\t\t\t\ttotal += (x * 100);\n\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\ttotal -= (x * 50);\n\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tif (x >= 150 && x <= 500) total += x;\n\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tif (x >= 300 && x <= 1000) total += x;\n\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tif (x >= 450 && x <= 1500) total += x;\n\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tif (x >= 600 && x <= 2000) total += x;\n\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tif (x >= 750 && x <= 2500) total += x;\n\t\t\t\tbreak;\n\n\t\t\t}\n\t\t}\n\t\tif (maxi == -1 || scores[maxi] < total) maxi = scores.size() - 1;\n\t\t\n\t}\n\n\tcout << names[maxi] << \"\\n\";\n\n    return 0;\n}\n\n\n\n\n\n\n\n\n\n\n\n"
}