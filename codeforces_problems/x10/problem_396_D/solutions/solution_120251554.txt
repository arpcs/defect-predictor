{
    "id": 120251554,
    "contestId": 396,
    "creationTimeSeconds": 1624330194,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 396,
        "index": "D",
        "name": "On Sum of Number of Inversions in Permutations",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "tags": [
            "combinatorics",
            "math"
        ]
    },
    "author": {
        "contestId": 396,
        "members": [
            {
                "handle": "IAKCodeForces"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1393428600
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 73,
    "timeConsumedMillis": 311,
    "memoryConsumedBytes": 24064000,
    "source": "#include<iostream>\r\n#include<cstdio>\r\n#include<cstring>\r\n#include<string>\r\n#include<algorithm>\r\n#include<queue>\r\n#include<cctype>\r\nusing namespace std;\r\n#define inf 0x3f3f3f3f\r\n#define int long long\r\ninline int in(){\r\n    int ret=0,c=getchar(),b=1;\r\n    while(!isdigit(c)){\r\n        b=c=='-'?-1:1,c=getchar();\r\n    }\r\n    while(isdigit(c)){\r\n        ret=ret*10+c-'0',c=getchar();\r\n    }\r\n    return ret*b;\r\n}\r\n#define in(x) x=in()\r\n#define mod 1000000007\r\nint n,p[1000005],f[1000005],ans,sum;\r\nstruct treenode{\r\n    int treenode[1000005]={0};\r\n    void clear(){\r\n        memset(treenode,0,sizeof(treenode));\r\n        return;\r\n    }\r\n    int lowbit(int x){\r\n        return x&-x;\r\n    }\r\n    void add(int x,int y){\r\n        for(int i=x;i<=n;i+=lowbit(i)){\r\n            treenode[i]+=y;\r\n        }\r\n        return;\r\n    }\r\n    int getsum(int x){\r\n        int res=0;\r\n        for(int i=x;i>0;i-=lowbit(i)){\r\n            res+=treenode[i];\r\n        }\r\n        return res;\r\n    }\r\n}tree;\r\nint fac(int x){\r\n    if(x<2){\r\n        return 0;\r\n    }\r\n    int num=x*(x-1)/2%mod;\r\n    return f[x-2]*num%mod*num%mod;\r\n}\r\nsigned main(){\r\n    in(n);\r\n    f[0]=1;\r\n    for(int i=1;i<=n;i++){\r\n        f[i]=f[i-1]*i%mod;\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        in(p[i]);\r\n    }\r\n    for(int i=1;i<=n;i++){\r\n        int t=p[i]-tree.getsum(p[i]-1)-1;\r\n        ans=(ans+t)%mod;\r\n        ans=(ans+t*fac(n-i)%mod)%mod;\r\n        ans=(ans+t*sum%mod*f[n-i]%mod)%mod;\r\n        ans=(ans+t*(t-1)/2%mod*f[n-i]%mod)%mod;\r\n        sum=(sum+t)%mod;\r\n        tree.add(p[i],1);\r\n    }\r\n    printf(\"%lld\\n\",ans);\r\n    return 0;\r\n}//I am a bot for remotejudge"
}