{
    "id": 213067852,
    "contestId": 396,
    "creationTimeSeconds": 1688972367,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 396,
        "index": "D",
        "name": "On Sum of Number of Inversions in Permutations",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "tags": [
            "combinatorics",
            "math"
        ]
    },
    "author": {
        "contestId": 396,
        "members": [
            {
                "handle": "CodingShark"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1393428600
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 13,
    "timeConsumedMillis": 452,
    "memoryConsumedBytes": 32051200,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst ll N = 1e6, mod = 1e9 + 7;\r\nll n, ans, rnk, a[1000005], fac[1000005], c[1000005], b[1000005];\r\nll cal(ll x) {\r\n\treturn x * (x - 1) % mod * 250000002 % mod * fac[x] % mod;\r\n}\r\nvoid update(ll x, ll k) { for (ll i = x; i <= n; i += (i & -i)) c[i] += k; }\r\nll query(ll x) { ll res(0); for (ll i = x; i; i &= i - 1) res += c[i]; return res; }\r\nint main() {\r\n\tfac[0] = 1;\r\n\tfor (ll i = 1; i <= N; i++) fac[i] = fac[i - 1] * i % mod;\r\n\tios::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n\tcin >> n;\r\n\tfor (ll i = 1; i <= n; i++) cin >> a[i];\r\n\tfor (ll i = n; i >= 1; i--) {\r\n\t\tb[i] = query(a[i] - 1);\r\n\t\tupdate(a[i], 1);\r\n\t\trnk = (rnk + b[i] * fac[n - i]) % mod;\r\n\t}\r\n\tfor (ll i = 1; i <= n; i++) {\r\n\t\trnk = (rnk - b[i] * fac[n - i] + mod) % mod;\r\n\t\tans += (b[i] - 1) * b[i] / 2 % mod * fac[n - i] % mod;\r\n\t\tans += b[i] * cal(n - i) % mod;\r\n\t\tans += (rnk + 1) * b[i];\r\n\t\tans %= mod;\r\n\t}\r\n\tcout << ans;\r\n\treturn 0;\r\n}"
}