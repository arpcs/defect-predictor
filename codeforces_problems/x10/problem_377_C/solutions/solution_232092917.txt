{
    "id": 232092917,
    "contestId": 377,
    "creationTimeSeconds": 1699543771,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 377,
        "index": "C",
        "name": "Captains Mode",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2200,
        "tags": [
            "bitmasks",
            "dp",
            "games"
        ]
    },
    "author": {
        "contestId": 377,
        "members": [
            {
                "handle": "hocky"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1388331000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 95,
    "timeConsumedMillis": 1466,
    "memoryConsumedBytes": 88268800,
    "source": "\n#include \"bits/stdc++.h\"\nusing namespace std;\n\n#define rep(i,a,b) for(int i = a;i < b;i++)\n#define pb push_back\n#define all(v) v.begin(), v.end()\n#define sz(v) (int) v.size()\n#define trav(nx, v) for(auto &nx : v)\n#define endl '\\n'\n#define fi first\n#define se second\ntypedef pair<bool, bool> TBI;\nvector <int> isi;\nvector <TBI> action;\ntypedef int LL;\n\nconst int nMax = 20;\nconst int LIM = (1 << nMax);\nLL memo[nMax + 1][LIM + 1];\nint n;\nvoid dp(int pos) {\n  // if(__builtin_popcount(mask) > pos) assert(0);\n  if (pos == n) return;\n  dp(pos + 1);\n  for (int mask = 0; mask < (1 << n); mask++) {\n    LL &ret = memo[pos][mask];\n    if (action[pos].se == 0) ret = INT_MIN;\n    else ret = INT_MAX;\n    if (action[pos].fi == 1) {\n      // miss ban\n      if (action[pos].se == 0) {\n        ret = max(ret, memo[pos + 1][mask]);\n        // cout << pos << \" \" << mask << \" \" << ret << endl;\n      } else ret = min(ret, memo[pos + 1][mask]);\n    }\n    for (int i = 0; i < n; i++) {\n      if ((mask >> i) & 1) continue;\n      // try to do action on this one\n      if (action[pos].fi == 0) {\n        // pick\n        int cost = isi[i];\n        if (action[pos].se == 1) cost = -cost;\n        LL nx = memo[pos + 1][mask | (1 << i)] + cost;\n        if (action[pos].se == 0) {\n          ret = max(ret, nx);\n        } else {\n          // minimize\n          ret = min(ret, nx);\n        }\n      } else {\n        // ban\n        LL nx = memo[pos + 1][mask | (1 << i)];\n        if (action[pos].se == 0) {\n          ret = max(ret, nx);\n        } else {\n          ret = min(ret, nx);\n        }\n      }\n    }\n  }\n}\n\nint main() {\n  cin.tie(0)->sync_with_stdio(0);\n  cout.tie(0);\n  cin >> n;\n  isi.resize(n);\n  trav(cur, isi) cin >> cur;\n  sort(all(isi));\n  reverse(all(isi));\n  cin >> n;\n  isi.resize(n);\n  action.resize(n);\n  trav(cur, action) {\n    char ch; cin >> ch;\n    cur.fi = (ch == 'b');\n    int tmp; cin >> tmp;\n    cur.se = (tmp == 2);\n  }\n  dp(0);\n  cout << memo[0][0] << endl;\n}"
}