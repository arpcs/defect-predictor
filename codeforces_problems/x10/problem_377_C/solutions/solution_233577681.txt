{
    "id": 233577681,
    "contestId": 377,
    "creationTimeSeconds": 1700490211,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 377,
        "index": "C",
        "name": "Captains Mode",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2200,
        "tags": [
            "bitmasks",
            "dp",
            "games"
        ]
    },
    "author": {
        "contestId": 377,
        "members": [
            {
                "handle": "lwh_lwh"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1388331000
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 8396800,
    "source": "// generated by GPT4 2023-11-20 22:22:59\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint n, m, s[105], dp[2][1<<20], act[20], team[20];\r\n\r\nint solve(int p, int mask) {\r\n    if(p == m) return 0;\r\n    if(dp[team[p]][mask] != -1) return dp[team[p]][mask];\r\n    int &ret = dp[team[p]][mask];\r\n    if(team[p]) {\r\n        ret = 1e9;\r\n        for(int i = 0; i < n; i++) {\r\n            if(mask & (1<<i)) continue;\r\n            if(act[p]) ret = min(ret, solve(p+1, mask|(1<<i)) - s[i]);\r\n            else ret = min(ret, solve(p+1, mask|(1<<i)));\r\n        }\r\n    } else {\r\n        ret = -1e9;\r\n        for(int i = 0; i < n; i++) {\r\n            if(mask & (1<<i)) continue;\r\n            if(act[p]) ret = max(ret, solve(p+1, mask|(1<<i)) + s[i]);\r\n            else ret = max(ret, solve(p+1, mask|(1<<i)));\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n\r\nint main() {\r\n    cin >> n;\r\n    for(int i = 0; i < n; i++) cin >> s[i];\r\n    sort(s, s+n);\r\n    cin >> m;\r\n    for(int i = 0; i < m; i++) {\r\n        char c; int t;\r\n        cin >> c >> t;\r\n        act[i] = (c == 'p');\r\n        team[i] = --t;\r\n    }\r\n    memset(dp, -1, sizeof dp);\r\n    cout << solve(0, 0) << endl;\r\n    return 0;\r\n}\r\n"
}