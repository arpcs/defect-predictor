{
    "contestId": 1486,
    "index": "C2",
    "name": "Guessing the Greatest (hard version)",
    "type": "PROGRAMMING",
    "points": 750.0,
    "rating": 1900,
    "tags": [
        "binary search",
        "interactive"
    ],
    "desc": {
        "title": "C2. Guessing the Greatest (hard version)",
        "statement": "<p><span class=\"tex-font-style-bf\">The only difference between the easy and the hard version is the limit to the number of queries</span>.</p><p><span class=\"tex-font-style-bf\">This is an interactive problem.</span></p><p>There is an array $$$a$$$ of $$$n$$$ <span class=\"tex-font-style-bf\">different</span> numbers. In one query you can ask the position of the second maximum element in a subsegment $$$a[l..r]$$$. Find the position of the maximum element in the array in no more than <span class=\"tex-font-style-bf\">20</span> queries.</p><p>A subsegment $$$a[l..r]$$$ is all the elements $$$a_l, a_{l + 1}, ..., a_r$$$. After asking this subsegment you will be given the position of the second maximum from this subsegment <span class=\"tex-font-style-bf\">in the whole</span> array.</p>",
        "inputSpecification": "<p>The first line contains a single integer $$$n$$$ $$$(2 \\leq n \\leq 10^5)$$$ \u2014 the number of elements in the array.</p>",
        "outputSpecification": null,
        "samples": [
            {
                "input": "\n5\n\n3\n\n4\n\n",
                "output": "\n? 1 5\n\n? 4 5\n\n! 1"
            }
        ],
        "note": "<p>In the sample suppose $$$a$$$ is $$$[5, 1, 4, 2, 3]$$$. So after asking the $$$[1..5]$$$ subsegment $$$4$$$ is second to max value, and it's position is $$$3$$$. After asking the $$$[4..5]$$$ subsegment $$$2$$$ is second to max value and it's position in the whole array is $$$4$$$.</p><p>Note that there are other arrays $$$a$$$ that would produce the same interaction, and the answer for them might be different. Example output is given in purpose of understanding the interaction.</p>"
    },
    "suggested_categories": [
        "interactive problems",
        "array operations",
        "querying",
        "algorithm design",
        "searching",
        "optimization",
        "mathematical logic",
        "complexity analysis",
        "data structures",
        "binary search",
        "comparisons",
        "number theory",
        "problem solving",
        "computational complexity",
        "game theory",
        "dynamic programming",
        "logical reasoning",
        "critical thinking",
        "problem analysis",
        "coding challenges"
    ]
}