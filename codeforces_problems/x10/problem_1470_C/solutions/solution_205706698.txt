{
    "id": 205706698,
    "contestId": 1470,
    "creationTimeSeconds": 1683974768,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1470,
        "index": "C",
        "name": "Strange Shuffle",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 2500,
        "tags": [
            "binary search",
            "brute force",
            "constructive algorithms",
            "interactive"
        ]
    },
    "author": {
        "contestId": 1470,
        "members": [
            {
                "handle": "lsroi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1609857300
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 89,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 819200,
    "source": "// LUOGU_RID: 110271156\n#include<bits/stdc++.h>\r\nusing namespace std;\r\nconst int N = 2e5 + 5;\r\nint a[N];\r\nint n, k, pos = 1;\r\ninline int f(int x) {\r\n\tif (x == 0) return n;\r\n\tif (x == n + 1) return 1;\r\n\treturn x;\r\n}\r\nint ask(int x) \r\n{\r\n\tcout << \"? \" << x << \"\\n\";\r\n\tcout << flush;\r\n\tint res;\r\n\tcin >> res;\r\n\treturn res;\r\n}\r\nvoid output(int x)\r\n{\r\n\tcout << \"! \" << x << \"\\n\";\r\n\tcout << flush;\r\n}\r\nint main()\r\n{\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0);\r\n\tcin >> n >> k;\r\n\task(pos);\r\n\t//i\u8f6e\u4f1a\u67092i\u4e2a!=k\u7684\u6570\u3002\u6240\u4ee5\u4fdd\u8bc1\u95f4\u9694<2i\u5373\u53ef \r\n\tfor (int i = 1; i <= n; i++) {\r\n        pos = (pos + i - 1) % n + 1;\r\n        int res = ask(pos);\r\n        if (res != k) {//\u8981\u4fdd\u8bc1\u5728500\u6b21\u5185\u627e\u5230 != k \u7684\u6570 \r\n            if (res > k) {\r\n                while (true) {//\u66b4\u529b\u627e==k\uff0c\u6bcf\u8f6e\u53ea\u4f1a\u5411\u53f3/\u5de6\u62d3\u5c55\u4e00\u4f4d\uff0c\u6240\u4ee5\u4e0d\u4f1a\u8d85\u8fc7\u9650\u5236 \r\n                    pos = f(pos - 1);\r\n                    res = ask(pos);\r\n                    if (res == k) {\r\n                    \toutput(pos);\r\n                        return 0;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (true) {\r\n                    pos = f(pos + 1);\r\n                    res = ask(pos);\r\n                    if (res == k) {\r\n                        output(pos);\r\n                        return 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n/*\r\na[pos-1] < k\r\na[pos+1] > k\r\n*/"
}