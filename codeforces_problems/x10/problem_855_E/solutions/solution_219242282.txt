{
    "id": 219242282,
    "contestId": 855,
    "creationTimeSeconds": 1692277347,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 855,
        "index": "E",
        "name": "Salazar Slytherin's Locket",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2200,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    "author": {
        "contestId": 855,
        "members": [
            {
                "handle": "yukimainyan"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1506263700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 27136000,
    "source": "// LUOGU_RID: 121480291\n#include <iostream>\n#include <cstring>\nusing namespace std;\n\nint change[11]={1,2,4,8,16,32,64,128,256,512,1024};\nlong long data[75][1024][11][2][2];\nint b,t[75];\n\nlong long dfs(int now,int flag,bool limit,bool zero){\n    if (now==0) return !flag;\n    if (data[now][flag][b][limit][zero]!=-1) return data[now][flag][b][limit][zero];\n    int up=b-1;\n    if (limit) up=t[now];\n    long long res=0;\n    for (int i=0;i<=up;i++){\n        if (zero&&!i)\n            res+=dfs(now-1,flag,limit&&(i==up),zero);\n        else\n            res+=dfs(now-1,flag^change[i],limit&&(i==up),0);\n    }\n    return data[now][flag][b][limit][zero]=res;\n}\n\nlong long cal(long long n){\n    int cnt=0;\n    while(n){\n        t[++cnt]=n%b;\n        n/=b;\n    }\n    return dfs(cnt,0,1,1);\n}\n\nint main(){\n    memset(data,-1,sizeof(data));\n    int k;\n    cin >> k;\n    while(k--){\n        long long l,r;\n        cin >> b >> l >> r;\n        cout << cal(r)-cal(l-1) << \"\\n\";\n    }\n    return 0;\n}"
}