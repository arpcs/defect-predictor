{
    "id": 216547671,
    "contestId": 855,
    "creationTimeSeconds": 1690791256,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 855,
        "index": "E",
        "name": "Salazar Slytherin's Locket",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2200,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    "author": {
        "contestId": 855,
        "members": [
            {
                "handle": "YakultGo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1506263700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/********************************************************************************\n* @author: Yakult\n* @date: 2023/7/31 15:51\n* @description: \u6570\u4f4ddp\n********************************************************************************/\n#include <bits/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\nll b;\nll calc(ll n) {\n    string s = \"\";\n    while (n) {\n        s.push_back(n%b);\n        n /= b;\n    }\n    reverse(s.begin(), s.end());\n    int m = s.length(), memo[m][65];\n    memset(memo, -1, sizeof(memo)); // -1 \u8868\u793a\u6ca1\u6709\u8ba1\u7b97\u8fc7\n    function<int(int, int, bool, bool)> f = [&](int pos, int mask, bool is_limit, bool is_num) -> int {\n        if (pos == m)\n            return is_num && mask == 0; // is_num \u4e3a true \u8868\u793a\u5f97\u5230\u4e86\u4e00\u4e2a\u5408\u6cd5\u6570\u5b57\n        if (!is_limit && is_num && memo[pos][mask] != -1)\n            return memo[pos][mask];\n        int res = 0;\n        if (!is_num) // \u53ef\u4ee5\u8df3\u8fc7\u5f53\u524d\u6570\u4f4d\n            res = f(pos + 1, mask, false, false);\n        int up = is_limit ? s[pos] - '0' : b-1;\n        for (int d = 1 - is_num; d <= up; ++d)\n            res += f(pos + 1, mask ^ (1 << d), is_limit && d == up, true);\n        if (!is_limit && is_num)\n            memo[pos][mask] = res;\n        return res;\n    };\n    return f(0, 0, true, false);\n}\nvoid solve() {\n    ll l, r;\n    cin >> b >> l >> r;\n    cout << calc(r) - calc(l-1) << endl;\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n\n    int T;\n    cin >> T;\n    while (T--) {\n        solve();\n    }\n    return 0;\n}\n\n"
}