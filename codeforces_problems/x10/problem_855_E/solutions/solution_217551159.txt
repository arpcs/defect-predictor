{
    "id": 217551159,
    "contestId": 855,
    "creationTimeSeconds": 1691391467,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 855,
        "index": "E",
        "name": "Salazar Slytherin's Locket",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2200,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    "author": {
        "contestId": 855,
        "members": [
            {
                "handle": "Markkun"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1506263700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 1606,
    "memoryConsumedBytes": 8192000,
    "source": "// LUOGU_RID: 119477561\n#include <iostream>\r\n#include<algorithm>\r\n#include<cmath>\r\n#include<cstdio>\r\n#include<cstring>\r\nusing namespace std;\r\n#define int long long\r\nint dp[100][1024][10];  \r\nint a[100],mod,h[10];\r\nint dfs(int pos, int t, bool limit,bool T)  //limit \u5c31\u662f\u4e3a\u4e86\u9650\u5236\u5f53\u524d\u4f4d\u662f\u5426\u662f\u6700\u9ad8\u4f4d.\r\n{\r\n    if (pos == 0) \r\n        return t==0;\r\n    if (!limit && T&&dp[pos][t][mod] != -1) return dp[pos][t][mod];\r\n    int up = limit ? a[pos] : mod-1;\r\n    int ans = 0;\r\n    for (int i = 0; i <= up; i++) {\r\n        ans += dfs(pos - 1,(T+i)>0?t^(1<<i):0, limit && i == a[pos], i ? 1 : T);\r\n    }\r\n    if (!limit&&T) dp[pos][t][mod] = ans;\r\n    return ans;\r\n}\r\nint cal(int x)\r\n{\r\n    int pos = 1;\r\n    while (x) {\r\n        a[pos++] = x % mod;\r\n        x /= mod;\r\n    }\r\n    return dfs(pos - 1,0, true,0);\r\n}\r\nvoid solve()\r\n{\r\n    int n, m;\r\n    cin >>mod>> n >> m;\r\n    cout << cal(m) -  cal(n - 1) << \"\\n\";\r\n}\r\n\r\nsigned main()\r\n{\r\n    memset(dp, -1, sizeof(dp));\r\n    int t;\r\n    cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n}"
}