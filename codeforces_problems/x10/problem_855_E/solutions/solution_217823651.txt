{
    "id": 217823651,
    "contestId": 855,
    "creationTimeSeconds": 1691479793,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 855,
        "index": "E",
        "name": "Salazar Slytherin's Locket",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2200,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    "author": {
        "contestId": 855,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1506263700
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 561,
    "memoryConsumedBytes": 11468800,
    "source": "#include<bits/stdc++.h>\n#define endl \"\\n\"\ntypedef long long ll;\nconst int maxn=70+5,mod=10000007;\nint base;\nint a[maxn];\nll dp[70][1<<11][10];\n\nint gcd(int a,int b)\n{\n\tif(!b) return a;\n\treturn gcd(b,a%b);\n}\n\nll lcm(int a,int b)\n{\n\treturn a/gcd(a,b)*b;\n}\n\nll dfs(int pos,int tot,bool lead,bool limit)\n{\n\tif(pos<0) return tot==0;\n\tif(~dp[pos][tot][base]&&!lead&&!limit)\n\t\treturn dp[pos][tot][base];\n\tll res=0;\n\tint up=limit?a[pos]:base-1;\n\tfor(int i=0;i<=up;++i)\n\t{\n\t\tif(!i&&lead) res+=dfs(pos-1,tot,lead&&!i,limit&&i==a[pos]);\n\t\telse res+=dfs(pos-1,tot^(1<<i),lead&&!i,limit&&i==a[pos]);\n\t}\n\tif(!limit&&!lead)\n\t\tdp[pos][tot][base]=res;\n\treturn res;\n}\n\nll digdp(ll num)\n{\n\tint len;\n\tfor(len=0;num;num/=base)\n\t\ta[len++]=num%base;\n\t// std::cout<<\"Debug: len = \"<<len<<endl;\n\tll ans=0;\n\t// std::cout<<\"Debug: hightest num = \"<<a[len-1]<<endl;\n\tans=dfs(len-1,0,true,true);\n\treturn ans;\n}\n\nint main()\n{\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(nullptr);\n\tstd::memset(dp,-1,sizeof dp);\n\tll l,r;\n\tint t;\n\tstd::cin>>t;\n\twhile(t--)\n\t{\n\t\tstd::cin>>base>>l>>r;\n\t\tstd::cout<<digdp(r)-digdp(l-1)<<endl;\n\t}\n\treturn 0;\n}\n\t  \t \t\t \t   \t\t\t  \t\t\t \t\t \t   \t"
}