{
    "id": 229036168,
    "contestId": 855,
    "creationTimeSeconds": 1697878788,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 855,
        "index": "E",
        "name": "Salazar Slytherin's Locket",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2200,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    "author": {
        "contestId": 855,
        "members": [
            {
                "handle": "021028kiki"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1506263700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 701,
    "memoryConsumedBytes": 9011200,
    "source": "// LUOGU_RID: 130812339\n#include<bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\nconst int N = 1005,mod = 1e9+9,INF = 0x3f3f3f3f,M = 2*1e5+10;\r\n\r\n//__gcd()\r\n\r\n\r\n/*\r\nbool vis[N+5];\r\nint prime[N+5];\r\nint cnt=0;\r\nvoid sieve()\r\n{\r\n\tvis[1]=1;\r\n\tvis[0]=1;\r\n\tfor(int i=2;i<=N;i++)\r\n\t{\r\n\t\tif(!vis[i]) \r\n\t\t{\r\n\t\t\tprime[cnt++]=i;\r\n\t\t}\r\n\t\tfor(int j=0;j<cnt;j++)\r\n\t\t{\r\n\t\t\tif(i*prime[j]>N) break;\r\n\t\t\tvis[i*prime[j]]=1;\r\n\t\t\t\r\n\t\t\tif(i%prime[j]==0) break; \r\n\t\t}\r\n\t}\r\n}*/\r\n/*\r\nll Jc[N];\r\nvoid calJc()\r\n{\r\n\tJc[0]=Jc[1]=1;\r\n\tfor(ll i=2;i<N;i++)\r\n\t\tJc[i]=Jc[i-1]*i%mod;\r\n}*/\r\n/*ll fpow(ll a,ll n,ll mod)\r\n{\r\n\tll ans=1;\r\n\ta%=mod;\r\n\twhile(n)\r\n\t{\r\n\t\tif(n&1) ans=ans*a%mod;\r\n\t\ta=a*a%mod;\r\n\t\tn>>=1;\r\n\t} \r\n\treturn ans;\r\n}/*\r\nll niYuan(ll a,ll b)\r\n{\r\n\treturn fpow(a,b-2,b);\r\n}\r\nll C(ll a,ll b)\r\n{\r\n\tif(a<b) return 0;\r\n\treturn Jc[a]*niYuan(Jc[b],mod)%mod*niYuan(Jc[a-b],mod)%mod;\r\n}\r\n/*ll exgcd(ll a,ll b,ll &x,ll &y)\r\n{\r\n\tif(b==0) \r\n\t{\r\n\t\tx=1;\r\n\t\ty=0;\r\n\t\treturn a;\r\n\t}\r\n\tll d=exgcd(b,a%b,y,x);\r\n\ty-=a/b*x;\r\n\treturn d;\r\n}\r\nll inv(ll a,ll m)\r\n{\r\n\tll x;\r\n\tll y;\r\n\texgcd(a,m,x,y);\r\n\treturn (x%m+m)%m;\r\n\treturn x;\r\n}*/\r\n/*ll fpow1(ll a,ll n)\r\n{\r\n\tll ans=1;\r\n\r\n\twhile(n)\r\n\t{\r\n\t\tif(n&1) ans=ans*a;\r\n\t\ta=a*a;\r\n\t\tn>>=1;\r\n\t} \r\n\treturn ans;\r\n}\r\n/*\r\nstruct mat{\r\n\tll m[105][105];\r\n};\r\nmat operator * (const mat& a,const mat& b)\r\n{\r\n\tmat c;\r\n\tmemset(c.m,0,sizeof(c.m));\r\n\tfor(int i=0;i<n;i++)\r\n\t{\r\n\t\tfor(int j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tfor(int k=0;k<n;k++)\r\n\t\t\t{\r\n\t\t\t\tc.m[i][j]=(c.m[i][j]+a.m[i][k]*b.m[k][j])%mod;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn c;\r\n}\r\nmat mpow(mat a,ll k)\r\n{\r\n\tmat ans;\r\n\tmemset(ans.m,0,sizeof(ans.m));\r\n\tfor(int i=0;i<n;i++) ans.m[i][i]=1;\r\n\twhile(k)\r\n\t{\r\n\t\tif(k&1) ans=ans*a;\r\n\t\ta=a*a;\r\n\t\tk>>=1;\r\n\t}\r\n\treturn ans;\r\n}*/\r\n/*int vis[N];\r\nint prime[N];\r\nint phi[N],cnt;\r\nvoid getphi()\r\n{\r\n\tphi[1]=0;\r\n\tfor(int i=2;i<N;i++)\r\n\t{\r\n\t\tif(!vis[i])\r\n\t\t{\r\n\t\t\tvis[i]=i;\r\n\t\t\tprime[cnt++]=i;\r\n\t\t\tphi[i]=i-1;\r\n\t\t}\r\n\t\tfor(int j=0;j<cnt;j++)\r\n\t\t{\r\n\t\t\tif(i*prime[j]>N) break;\r\n\t\t\tvis[i*prime[j]]=prime[j];\r\n\t\t\tif(i%prime[j]==0)\r\n\t\t\t{\r\n\t\t\t\tphi[i*prime[j]]=phi[i]*prime[j];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tphi[i*prime[j]]=phi[i]*phi[prime[j]];\r\n\t\t}\r\n\t}\r\n\t\r\n} */\r\n\r\n/*void g(string p)\r\n{\r\n\tfor(int i = 0; i < (1 << n); i++){\r\n\t\tll x = i;\r\n\t\tstring s1;\r\n\t\tfor(int j = 1; j <= n; j++){\r\n\t\t\tif(x & (1 << (j - 1)))\r\n\t\t\t\ts1 += 'b';\r\n\t\t\telse\r\n\t\t\t\ts1 += 'a'; \r\n\t\t}\r\n\t\treverse(s1.begin(),s1.end());\r\n\t\tif(s1 == p)\r\n\t\t\tcout << \"              \";\r\n\t\tcout << s1 << '\\n';\r\n\t}\r\n}*/\r\n\r\n//1 2 3\r\nll dp[100][2][2][2][2][2][2][2][2][2][2][11];\r\nint num[100],now,b;\r\nll dfs(int pos,int h0,int h1,int h2,int h3,int h4,int h5,int h6,int h7,int h8,int h9,bool lead,bool limit)\r\n{\r\n\tll ans=0;\r\n\tif(pos==0) \r\n\t{\r\n\t\tif(h0==1||h1==1||h2==1||h3==1||h4==1||h5==1||h6==1||h7==1||h8==1||h9==1) return 0;\r\n\t\treturn 1;\r\n\t}\r\n\tif(!lead&&!limit&&dp[pos][h0][h1][h2][h3][h4][h5][h6][h7][h8][h9][b]!=-1) return dp[pos][h0][h1][h2][h3][h4][h5][h6][h7][h8][h9][b];\r\n\tint up=(limit?num[pos]:b-1);\r\n\tfor(int i=0;i<=up;i++)\r\n\t{\r\n\t/*\tbool p=0;\r\n\t\tif(i==up) p=1;*/\r\n\t\tif(i==0&&lead) ans+=dfs(pos-1,0,0,0,0,0,0,0,0,0,0,true,limit&&(i==up));\r\n\t\telse \r\n\t\t{\r\n\t\t\tif(i==0) ans+=dfs(pos-1,(h0+1)%2,h1,h2,h3,h4,h5,h6,h7,h8,h9,false,limit&&(i==up));\r\n\t\t\telse if(i==1) ans+=dfs(pos-1,h0,(h1+1)%2,h2,h3,h4,h5,h6,h7,h8,h9,false,limit&&(i==up));\r\n\t\t\telse if(i==2) ans+=dfs(pos-1,h0,h1,(h2+1)%2,h3,h4,h5,h6,h7,h8,h9,false,limit&&(i==up));\r\n\t\t\telse if(i==3) ans+=dfs(pos-1,h0,h1,h2,(h3+1)%2,h4,h5,h6,h7,h8,h9,false,limit&&(i==up));\r\n\t\t\telse if(i==4) ans+=dfs(pos-1,h0,h1,h2,h3,(h4+1)%2,h5,h6,h7,h8,h9,false,limit&&(i==up));\r\n\t\t\telse if(i==5) ans+=dfs(pos-1,h0,h1,h2,h3,h4,(h5+1)%2,h6,h7,h8,h9,false,limit&&(i==up));\r\n\t\t\telse if(i==6) ans+=dfs(pos-1,h0,h1,h2,h3,h4,h5,(h6+1)%2,h7,h8,h9,false,limit&&(i==up));\r\n\t\t\telse if(i==7) ans+=dfs(pos-1,h0,h1,h2,h3,h4,h5,h6,(h7+1)%2,h8,h9,false,limit&&(i==up));\r\n\t\t\telse if(i==8) ans+=dfs(pos-1,h0,h1,h2,h3,h4,h5,h6,h7,(h8+1)%2,h9,false,limit&&(i==up));\r\n\t\t\telse if(i==9) ans+=dfs(pos-1,h0,h1,h2,h3,h4,h5,h6,h7,h8,(h9+1)%2,false,limit&&(i==up));\r\n\t\t}\r\n\t}\r\n\tif(!lead&&!limit) dp[pos][h0][h1][h2][h3][h4][h5][h6][h7][h8][h9][b]=ans;\r\n\treturn ans;\r\n\t\r\n} \r\nll kiki(ll x)\r\n{\r\n\tint len=0;\r\n\twhile(x)\r\n\t{\r\n\t\tnum[++len]=x%b;\r\n\t\tx/=b;\r\n\t}\r\n\t\r\n\treturn dfs(len,0,0,0,0,0,0,0,0,0,0,true,true);\r\n}\r\nvoid solve()\r\n{\r\n\tll l,r;\r\n\r\n\tcin>>b>>l>>r;\r\n\tcout<<kiki(r)-kiki(l-1)<<\"\\n\";\r\n}\r\nint main()\r\n{\r\n\r\n\tios::sync_with_stdio(0); \r\n\tcin.tie(0); cout.tie(0);\r\n\tint t=1;\r\n\t//calJc();\r\n\tcin >> t;\r\n\tmemset(dp,-1,sizeof(dp));\r\n\t//kiki();\r\n//\tsieve();\r\n\twhile(t--)\r\n\t\tsolve();\r\n\treturn 0;\r\n}\r\n//0 2 4 6 8 10 12"
}