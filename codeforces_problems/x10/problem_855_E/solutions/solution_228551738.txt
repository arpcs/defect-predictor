{
    "id": 228551738,
    "contestId": 855,
    "creationTimeSeconds": 1697548879,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 855,
        "index": "E",
        "name": "Salazar Slytherin's Locket",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2200,
        "tags": [
            "bitmasks",
            "dp"
        ]
    },
    "author": {
        "contestId": 855,
        "members": [
            {
                "handle": "Falling_Sakura"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1506263700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 3072000,
    "source": "// LUOGU_RID: 130019022\n#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long LL;\r\n\r\nint len;\r\nint a[22];\r\nint b;\r\nint f[12][62][1030]; // r \u8fdb\u5236 pos \u5f53\u524d\u9012\u5f52\u5230\u7684\u4f4d\u7f6e \u72b6\u6001\r\n\r\n// \u72b6\u6001\u538b\u7f29\u4e00\u4e0b 0 - \u8be5\u4f4d\u4ee3\u8868\u7684\u6570\u5b57\u51fa\u73b0\u6b21\u6570\u4e3a\u5076\u6570 1 - \u5947\u6570\r\n// \u7edf\u8ba1\u6570\u5b57\uff0c\u9700\u8981\u8bb0\u5f55\u524d\u5bfc\u96f6\r\n\r\nLL dfs(int pos, bool limit, int state, bool lead)\r\n{\r\n    if(!pos) return state == 0 && !lead;\r\n    auto &now = f[b][pos][state];\r\n    if(!limit && ~now) return now;\r\n    LL res = 0;\r\n    int up = limit ? a[pos] : b - 1;\r\n    for(int i = 0; i <= up; i++)\r\n    {\r\n        res += dfs(pos - 1, limit && i == up, (lead && i == 0 ) ? 0 : state ^ (1 << i), lead && i == 0); // i \u8fd9\u4e2a\u6570\u51fa\u73b0\u7684\u5947\u5076\u6027\uff1a\u5947\u5076\u4e92\u6362\r\n    }\r\n    if(!limit && !lead) now = res;\r\n    return res;\r\n}\r\nLL solve(LL x)\r\n{\r\n    len = 0;\r\n    while(x)\r\n    {\r\n        a[++len] = x % b;\r\n        x /= b;\r\n    }\r\n    return dfs(len, true, 0, true);\r\n}\r\n\r\nint main()\r\n{\r\n    memset(f, -1, sizeof(f));\r\n    LL l, r;\r\n    int q;\r\n    scanf(\"%d\", &q);\r\n    while(q--)\r\n    {\r\n        scanf(\"%d%lld%lld\", &b, &l, &r);\r\n        cout << solve(r) - solve(l - 1) << endl;\r\n    }\r\n    return 0;\r\n}"
}