{
    "id": 70527384,
    "contestId": 391,
    "creationTimeSeconds": 1581106621,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 391,
        "index": "E1",
        "name": "Three Trees",
        "type": "PROGRAMMING",
        "points": 11.0,
        "tags": []
    },
    "author": {
        "contestId": 391,
        "members": [
            {
                "handle": "big_tq"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1392573600
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS1",
    "passedTestCount": 16,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 48332800,
    "source": "#include<bits/stdc++.h>\r\n#define N 300005\r\n#define long long long \r\n#define pb push_back\r\nusing namespace std;\r\nstruct Tree\r\n{\r\n  vector<int>a[N];\r\n  long g[N],f[N],sum;\r\n  int ch,size[N],n;\r\n  void dfs1(int k,int fa){\r\n    size[k]=0;f[k]=0;\r\n    for (int i=0,x;i<a[k].size();i++)\r\n      if ((x=a[k][i])!=fa)\r\n        dfs1(x,k),f[k]+=f[x],size[k]+=size[x];\r\n    f[k]+=(size[k]++);\r\n  }\r\n  void dfs2(int k,int fa){\r\n    g[k]=(k>1)?g[fa]-size[k]+(n-size[k]):f[k];\r\n    for (int i=0,x;i<a[k].size();i++)\r\n      if ((x=a[k][i])!=fa)\r\n        dfs2(x,k);\r\n  }\r\n  void init(){\r\n    dfs1(1,0);\r\n    dfs2(1,0);g[ch=0]=-1;sum=0;\r\n    for (int i=1;i<=n;sum+=g[i++])\r\n      if (g[i]>g[ch]) ch=i;sum>>=1;\r\n  }\r\n  void read(){\r\n    for (int i=1;i<n;i++){\r\n      int x,y;scanf(\"%d%d\",&x,&y);\r\n      a[x].pb(y);a[y].pb(x);\r\n    }\r\n  }\r\n}A[3],B,C;int i,j;long ans;\r\nvoid Clear(Tree &c)\r\n{\r\n    for (int i=1;i<=c.n;i++) \r\n        c.a[i].clear(),c.f[i]=c.g[i]=c.size[i]=0;\r\n    c.n=c.sum=c.ch=0;\r\n}\r\nvoid Merge(Tree &c,const Tree &a,const Tree &b){\r\n  c.n=a.n+b.n;\r\n  for (int i=1;i<=c.n;i++) c.a[i].clear();\r\n  for (int i=1;i<=a.n;i++)\r\n    for (int j=0;j<a.a[i].size();j++)\r\n      c.a[i].push_back(a.a[i][j]);\r\n  for (int i=1;i<=b.n;i++)\r\n    for (int j=0;j<b.a[i].size();j++)\r\n      c.a[i+a.n].push_back(b.a[i][j]+a.n);\r\n  c.a[a.ch].push_back(b.ch+a.n);\r\n  c.init();\r\n}\r\nint main()\r\n{\r\n  scanf(\"%d%d%d\",&A[0].n,&A[1].n,&A[2].n);ans=0;\r\n  A[0].read();A[1].read();A[2].read();\r\n  A[0].init();A[1].init();A[2].init();\r\n  for (i=0;i<3;i++)\r\n    for (j=0;j<3;j++)\r\n        if (i!=j){\r\n            Clear(B);Clear(C);\r\n            Merge(B,A[i],A[j]);\r\n            Merge(C,A[3-i-j],B);\r\n                ans=max(ans,C.sum);\r\n                Clear(B);Clear(C);\r\n                Merge(B,A[i],A[j]);\r\n            Merge(C,B,A[3-i-j]);\r\n          ans=max(ans,C.sum);       \r\n      }\r\n  printf(\"%I64d\\n\",ans);\r\n}//hellobig_tq"
}