{
    "id": 16272004,
    "contestId": 391,
    "creationTimeSeconds": 1456121859,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 391,
        "index": "E1",
        "name": "Three Trees",
        "type": "PROGRAMMING",
        "points": 11.0,
        "tags": []
    },
    "author": {
        "contestId": 391,
        "members": [
            {
                "handle": "qazwsxedcrfv"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1392573600
    },
    "programmingLanguage": "GNU C++",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS1",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define st first\r\n#define nd second\r\n#define mp make_pair\r\n#define space << \" \" <<\r\n#define END << endl\r\n#define pb push_back\r\n#define fo(i,n) for(int i = 0; i<n; ++i)\r\n#define ff(i,n) for(int i = 1; i<n; ++i)\r\n#define int long long\r\n\r\ntypedef vector<int> vi;\r\ntypedef pair<int,int> pii;\r\ntypedef pair<int,pii> pi;\r\ntypedef long long ll;\r\ntypedef pair<int,ll> pil;\r\ntypedef pair<ll,int> pli;\r\ntypedef pair<ll,ll> pll;\r\ntypedef pair<ll,pll> pl;\r\ntypedef vector<pil>vil;\r\n\r\nconst int N = 1e5 + 1000;\r\n\r\nvector<int> b1[N] , b2[N] , b3[N];\r\n\r\nstruct tree{\r\n    int n;\r\n    vi board[N];\r\n    int pa[N];\r\n    int h[N];\r\n    ll sum[N];\r\n    pair<pli,pli> su1[N];\r\n    pair<pli,pli> su2[N];\r\n    ll S = 0;\r\n    ll ans = 0;\r\n    ll mx = 0;\r\n    int child[N];\r\n    int u,v;\r\n    void lu(int uu, int vv) { u = uu; v = vv; if(u < v) swap(u,v); }\r\n    void dfs1(int U, int parent)\r\n    {\r\n        ll ans = 0;\r\n        pa[U] = parent;\r\n        child[U] = 0;\r\n        h[U] =h[parent] + 1;\r\n        for(int x=0; x<board[U].size(); ++x)\r\n        {\r\n            int V = board[U][x];\r\n            if(V == parent) continue;\r\n            dfs1(V,U);\r\n            child[U] += child[V] + 1;\r\n            ans += sum[V];\r\n        }\r\n        ans += 1LL * child[U];\r\n        sum[U] = ans;\r\n    }\r\n    void dfs2(int U, int parent)\r\n    {\r\n        //cout << U space sum[U] space child[U] << endl;\r\n        if(U != 1) sum[U] = sum[U] + 1LL * ( n - child[U] - 1) + sum[parent] - sum[U] - 1LL * (child[U] + 1);\r\n        S += sum[U];\r\n        //cout << U space sum[U] << endl;\r\n        mx = max(mx,sum[U]);\r\n        for(int x=0; x<board[U].size(); ++x)\r\n        {\r\n            int V = board[U][x];\r\n            if(V == parent) continue;\r\n            dfs2(V,U);\r\n        }\r\n    }\r\n    void dfs3(int U,int parent)\r\n    {\r\n        bool oo = 0;\r\n        su1[U].st.st = sum[U] * u  + 1LL * u * v * h[U]; su1[U].st.nd = U;\r\n        su1[U].nd.st = 0;\r\n        su2[U].st.st = sum[U] * v  + 1LL * u * v * h[U]; su2[U].st.nd = U;\r\n        su2[U].nd.st = 0;\r\n        ans = max( ans , su1[U].st.st + su2[U].st.st - 2LL * u * v * h[U]);\r\n        for(int x=0; x<board[U].size(); ++x)\r\n        {\r\n            int V = board[U][x];\r\n            if(V == parent) continue;\r\n            dfs3(V,U); oo = 1;\r\n            if(su1[U].st.st < su1[V].st.st) { su1[U].nd = su1[U].st; su1[U].st = su1[V].st; }\r\n            else if( su1[U].nd.st < su1[V].st.st ) { su1[U].nd = su1[V].st; }\r\n            if(su2[U].st.st < su2[V].st.st) { su2[U].nd = su2[U].st; su2[U].st = su2[V].st; }\r\n            else if( su2[U].nd.st < su2[V].st.st ) { su2[U].nd = su2[V].st; }\r\n        }\r\n        //if(oo) cout << su1[U].st.st space su1[U].st.nd space su1[U].nd.st space su1[U].nd.nd << endl;\r\n        ans = max(ans ,max(su1[U].st.st + su2[U].nd.st - 2LL * u * v * h[U],su1[U].nd.st + su2[U].st.st - 2LL * u * v * h[U]));\r\n    }\r\n    void work1() {\r\n        dfs1(1,0); dfs2(1,0); S /= 2;\r\n    }\r\n    ll work2() {\r\n        dfs3(1,0);// cout << ans space \"thanhdz\" << endl;\r\n         return ans;\r\n    }\r\n\r\n}a[4];\r\n\r\nlong long ans = 0;\r\n\r\nint main()\r\n{\r\n    //freopen(\"test.txt\",\"r\",stdin);\r\n    ios_base::sync_with_stdio(false); cin.tie(0);\r\n    ff(i,4) cin >> a[i].n;\r\n    ff(i,4) ff(j,a[i].n) { int u,v; cin >> u >> v; a[i].board[u].pb(v); a[i].board[v].pb(u); }\r\n    a[1].lu(a[2].n,a[3].n);\r\n    a[2].lu(a[1].n,a[3].n);\r\n    a[3].lu(a[2].n,a[1].n);\r\n    ff(i,4) { a[i].work1(); }\r\n    //a[1].work1();\r\n    ll ans = 0;\r\n    //cout << a[1].S space a[2].S space a[3].S space a[1].mx space a[2].mx space a[3].mx << endl;\r\n    ans = max(ans,a[1].work2() + a[1].S + a[2].S + a[3].S + 2LL * a[1].u * a[1].v + 1LL * a[1].u * a[1].n + 1LL * a[1].v * a[1].n + 1LL * a[2].mx * (a[1].n+a[3].n) + 1LL * a[3].mx * (a[1].n + a[2].n));\r\n    //cout << ans << endl;\r\n    ans = max(ans,a[2].work2() + a[1].S + a[2].S + a[3].S + 2LL * a[2].u * a[2].v + 1LL * a[2].u * a[2].n + 1LL * a[2].v * a[2].n + 1LL * a[1].mx * (a[2].n+a[3].n) + 1LL * a[3].mx * (a[1].n + a[2].n));\r\n    //cout << ans << endl;\r\n    ans = max(ans,a[3].work2() + a[1].S + a[2].S + a[3].S + 2LL * a[3].u * a[3].v + 1LL * a[3].u * a[3].n + 1LL * a[3].v * a[3].n + 1LL * a[1].mx * (a[2].n+a[3].n) + 1LL * a[2].mx * (a[1].n + a[3].n));\r\n    cout << ans << endl;\r\n}\r\n"
}