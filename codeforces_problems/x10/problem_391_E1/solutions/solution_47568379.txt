{
    "id": 47568379,
    "contestId": 391,
    "creationTimeSeconds": 1545923226,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 391,
        "index": "E1",
        "name": "Three Trees",
        "type": "PROGRAMMING",
        "points": 11.0,
        "tags": []
    },
    "author": {
        "contestId": 391,
        "members": [
            {
                "handle": "Vinhspm"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1392573600
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS1",
    "passedTestCount": 6,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 13824000,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define fi first\r\n#define se second\r\n#define FOR(a, b, c) for(int a = b; a <= c; ++a)\r\n#define pb push_back\r\n#define int long long\r\n\r\nconst int N = 1e5 + 10;\r\nconst int mod = 1e5 + 10;\r\n\r\nint n[4], ans;\r\nint sz[N];\r\nint f[N][2], g[N][2][2], tmp[N][2][2];\r\nvector<int> vi[4][N];\r\nvoid dfs1(int base, int pre, int u, int rem)   {\r\n    f[u][0] = f[u][1] = 0;\r\n    sz[u] = 1;\r\n    for(int v: vi[base][u]) if(v != pre)   {\r\n        dfs1(base, u, v, rem);\r\n        sz[u] += sz[v];\r\n        f[u][0] += f[v][0];\r\n    }\r\n    //cout << f[u][0] << ' ' << sz[u] * (n[base] - sz[u] + rem) << '\\n';\r\n    f[u][1] = (n[base] - sz[u]) * (rem + sz[u]) + f[u][0] + rem * n[base]; // take at u\r\n\r\n    for(int v: vi[base][u]) if(v != pre)  {\r\n        f[u][1] = max(f[u][1], f[u][0] - f[v][0] + f[v][1] + (n[base] - sz[u]) * (sz[u] + rem));\r\n    }\r\n    f[u][0] += sz[u] * (n[base] - sz[u] + rem);\r\n    //cout << u << ' ' << f[u][0] << ' ' << f[u][1] << '\\n';\r\n}\r\nvoid upd(int &x, int y) { x = max(x, y); }\r\nvoid dfs2(int base, int pre, int u, int rem1, int rem2) {\r\n    memset(g[u], 0, sizeof g[u]);\r\n    sz[u] = 1;\r\n    FOR(i, 0, vi[base][u].size() + 1) memset(tmp[i], 0, sizeof tmp[i]);\r\n    int cnt = 0;\r\n    for(int v: vi[base][u]) if(v != pre)   {\r\n        cnt ++;\r\n        dfs2(base, u, v, rem1, rem2); sz[u] += sz[v];\r\n        FOR(i, 0, 1) FOR(j, 0, 1) {\r\n            // take 0 0\r\n            upd(tmp[cnt][i][j], tmp[cnt - 1][i][j] + g[v][0][0]);\r\n            // take 0 1\r\n            if(j == 1) upd(tmp[cnt][i][j], tmp[cnt - 1][i][0] + g[v][0][1]);\r\n\r\n            // take 1 0\r\n            if(i == 1) upd(tmp[cnt][i][j], tmp[cnt - 1][0][j] + g[v][1][0]);\r\n\r\n            // take 1 1\r\n            if(i && j) upd(tmp[cnt][i][j], tmp[cnt - 1][0][0] + g[v][1][1]);\r\n        }\r\n     }\r\n     //if(u == 1) cout << tmp[cnt][0][1] << '\\n';\r\n     FOR(i, 0, 1) FOR(j, 0, 1)  {\r\n        int s1 = n[base] - sz[u]; if(i == 0) s1 += rem1;    if(j == 0) s1 += rem2;\r\n        int s2 = sz[u]; if(i) s2 += rem1; if(j) s2 += rem2;\r\n        // take 0 0\r\n        g[u][i][j] = tmp[cnt][i][j] + s1 * s2;\r\n        // take 1 0\r\n        int val = rem1 * (rem2 + n[base]);\r\n        //if(u == 1 && j == 1 && i == 1) cout << val << ' ' << s1 * s2 << '\\n';\r\n        if(i == 1) upd(g[u][i][j], tmp[cnt][0][j] + s1 * s2 + val);\r\n        //take 0 1\r\n        val  = rem2 * (rem1 + n[base]);\r\n        if(j == 1) upd(g[u][i][j], tmp[cnt][i][0] + s1 * s2 + val);\r\n        //take 1 1\r\n         val = rem1 * (rem2 + n[base]) + rem2 * (rem1 + n[base]);\r\n        if(i > 0 && j > 0) upd(g[u][i][j], tmp[cnt][0][0] + s1 * s2 + val);\r\n     }\r\n}\r\nvoid solve(vector<int> tmp) {\r\n    int sum = n[ tmp[0] ] + n[ tmp[1] ];\r\n    dfs1(tmp[2], 1, 1, sum);\r\n\r\n    int p1 = f[1][1];\r\n\r\n    sum = n[ tmp[0] ] + n[ tmp[2] ];\r\n    dfs1(tmp[1], 1, 1, sum);\r\n    int p2 = f[1][1];\r\n\r\n    dfs2(tmp[0], 1, 1, n[tmp[1]], n[tmp[2]]);\r\n    int p3 = g[1][1][1];\r\n    //cout << g[1][1][1] << '\\n';\r\n    //cout << p1 << ' ' << p2 << ' ' << p3 << ' ' << n[tmp[0]] * n[tmp[1]] + n[tmp[0]] * n[tmp[2]] << '\\n';\r\n    ans = max(ans, p1 + p2 + p3 - n[tmp[1]] * (n[tmp[0]] + n[tmp[2]]) - n[tmp[2]] * (n[tmp[0]] + n[ tmp[1] ]));\r\n}\r\nsigned main()\r\n{\r\n    //freopen(\"standardinput\", \"r\", stdin);\r\n    //freopen(\"standardoutput\", \"w\", stdout);\r\n    //freopen(\"test.inp\", \"r\", stdin);\r\n    ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);\r\n    FOR(i, 1, 3) cin >> n[i];\r\n    FOR(i, 1, 3)    {\r\n        FOR(j, 1, n[i] - 1) {\r\n            int u, v; cin >> u >> v;\r\n            vi[i][u].pb(v); vi[i][v].pb(u);\r\n        }\r\n    }\r\n    vector<int> tmp; FOR(i, 1, 3) tmp.pb(i);\r\n    solve(tmp);\r\n    swap(tmp[0], tmp[1]); solve(tmp);\r\n    swap(tmp[0], tmp[2]); solve(tmp);\r\n    cout << ans;\r\n}\r\n"
}