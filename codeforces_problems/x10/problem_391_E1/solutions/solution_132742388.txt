{
    "id": 132742388,
    "contestId": 391,
    "creationTimeSeconds": 1634960116,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 391,
        "index": "E1",
        "name": "Three Trees",
        "type": "PROGRAMMING",
        "points": 11.0,
        "tags": []
    },
    "author": {
        "contestId": 391,
        "members": [
            {
                "handle": "buidangnguyen05"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1392573600
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS1",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 51814400,
    "source": "#pragma GCC optimize(\"Ofast\")\r\n//#pragma GCC target(\"avx,avx2,fma,sse4\")\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\ntemplate <typename T> void in(T& x) // fast input\r\n{\r\n    x = 0; T f = 1;\r\n    char ch = getchar();\r\n    while (!isdigit(ch)) f = ch == '-' ? - f : f, ch = getchar();\r\n    while (isdigit(ch)) x = x * 10 + ch - '0', ch = getchar();\r\n    x *= f;\r\n}\r\ntemplate<typename T> void out(T n) //fast output\r\n{\r\n\tbool neg = 0;\r\n\tif (n < 0) n *= -1, neg = 1;\r\n\tchar snum[20];\r\n\tint i = 0;\r\n\tdo\r\n\t{\r\n\t\tsnum[i++] = n % 10 + '0';\r\n\t\tn /= 10;\r\n\t}\r\n\twhile (n);\r\n\t--i;\r\n\tif (neg) putchar('-');\r\n\twhile (i >= 0) putchar(snum[i--]);\r\n\tputchar('\\n');\r\n}\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\nlong long rnd(long long l,long long r)\r\n{\r\n    return l+rng()%(r-l+1);\r\n}\r\n#define error(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }\r\nvoid err(istream_iterator<string> it) {}\r\ntemplate<typename T, typename... Args>\r\nvoid err(istream_iterator<string> it, T a, Args... args)\r\n{\r\n    cerr << *it << \" = \" << a << endl;\r\n    err(++it, args...);\r\n}\r\n#define debug(x) cerr << #x << \" is \" << x << \"\\n\";\r\n#define TIME cout << \"\\nTime elapsed: \" << fixed << setprecision(3) << 1.0*clock() / CLOCKS_PER_SEC << endl;\r\n#define fasty ios_base::sync_with_stdio(0),cin.tie(0);\r\n#define forinc(a,b,c) for(int a=b,_c=c;a<=_c;++a)\r\n#define fordec(a,b,c) for(int a=b,_c=c;a>=_c;--a)\r\n#define forv(a,b) if(b.size()) for(auto&a:b)\r\n#define fi first\r\n#define se second\r\n#define pb push_back\r\n#define ii pair<int,int>\r\n#define mt make_tuple\r\n#define mp make_pair\r\n#define all(a) a.begin(),a.end()\r\n#define gg exit(0)\r\n#define getbit(x,i) ((x>>(i-1))&1)\r\n#define batbit(x,i) (x|(1<<(i-1)))\r\n#define tatbit(x,i) (x&~(1<<(i-1)))\r\n#define ll long long\r\nconst int N=2e5+10;\r\nvector<int> adj[7][N];\r\nint sz[7][N], best[7], n[7];\r\nll dist[7][N], tot[7];\r\nint dfs1(int x, int par, ll dep, int T)\r\n{\r\n    dist[T][1]+=dep;\r\n    sz[T][x]=1;\r\n    forv(i, adj[T][x])\r\n    {\r\n        if(i==par) continue;\r\n        sz[T][x]+=dfs1(i,x,dep+1,T);\r\n    }\r\n    return sz[T][x];\r\n}\r\nvoid dfs2(int x, int par, int T)\r\n{\r\n    forv(i,adj[T][x])\r\n    {\r\n        if(i==par) continue;\r\n        dist[T][i]=dist[T][x]+n[T]-2*sz[T][i];\r\n        dfs2(i,x,T);\r\n    }\r\n}\r\nvoid calc(int T)\r\n{\r\n    dfs1(1,0,0,T);\r\n    dfs2(1,0,T);\r\n    ll cur=-1;\r\n    forinc(i,1,n[T]) if(dist[T][i]>cur) cur=dist[T][i], best[T]=i;\r\n    forinc(i,1,n[T]) tot[T]+=dist[T][i];\r\n    tot[T]/=2;\r\n}\r\nsigned main()\r\n{\r\n    fasty;\r\n    freopen(\"3cay.inp\",\"r\",stdin);\r\n    freopen(\"3cay.out\",\"w\",stdout);\r\n    int T; cin >> T; T=0;\r\n    while(++T<4)\r\n    {\r\n        cin >> n[T];\r\n        forinc(i,1,n[T]-1)\r\n        {\r\n            int x,y; cin >> x >> y;\r\n            adj[T][x].pb(y); adj[T][y].pb(x);\r\n        }\r\n        calc(T);\r\n    }\r\n    T=3;\r\n    ll res=0;\r\n    forinc(t1,1,2) forinc(t2,2,3)\r\n    {\r\n        if(t1==t2) continue;\r\n\r\n        n[++T]=n[t1]+n[t2];\r\n        forinc(i,1,n[t1]) forv(j, adj[t1][i]) adj[T][i].pb(j);\r\n        adj[T][best[t1]].pb(best[t2]+n[t1]);\r\n        forinc(i,1,n[t2]) forv(j, adj[t2][i]) adj[T][i+n[t1]].pb(j+n[t1]);\r\n        calc(T);\r\n\r\n        int t3=6-t1-t2;\r\n\r\n        ll cnt=dist[t3][best[t3]]*n[T]+dist[T][best[T]]*n[t3]+tot[t3]+tot[T]+1ll*n[t3]*n[T];\r\n\r\n        //error(t3,dist[t3][best[t3]],dist[T][best[T]],n[t3],n[T],tot[t3],tot[T]);\r\n\r\n        res=max(res,cnt);\r\n    }\r\n    cout << res << \"\\n\";\r\n}"
}