{
    "id": 224072023,
    "contestId": 1789,
    "creationTimeSeconds": 1695142828,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1789,
        "index": "B",
        "name": "Serval and Inversion Magic",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 800,
        "tags": [
            "brute force",
            "implementation",
            "strings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1789,
        "members": [
            {
                "handle": "Rhrobin439"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1677334800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define dbg(a) cout << #a << \" = \" << a << endl;\r\n#define sor(t) t.begin(), t.end()\r\n#define vl vector<ll>\r\n#define vi vector<int>\r\n#define vp vector<pair<ll, ll>>\r\n#define mp map<int, int>\r\n#define st stack<char>\r\n#define mpk make_pair\r\n#define pb push_back\r\n#define pf push_front\r\ntypedef long long ll;\r\nconst int MAX = 2e5 + 5;\r\nint main()\r\n{\r\n   ios_base::sync_with_stdio(false);\r\n   cin.tie(NULL);\r\n   bool isPalindrome(string a)\r\n   {\r\n      int l = 0, r = a.size() - 1;\r\n      while (l < r)\r\n      {\r\n         if (a[l] != a[r])\r\n            return false;\r\n         l++, r--;\r\n      }\r\n      return true;\r\n   }\r\n\r\n   bool Call(string a)\r\n   {\r\n      int n = a.size();\r\n      int l = 0, r = n - 1;\r\n      bool bugFound = false;\r\n      bool solved = false;\r\n      while (l < r)\r\n      {\r\n         if (bugFound)\r\n         {\r\n            if (solved)\r\n            {\r\n               if (a[l] != a[r])\r\n                  return false;\r\n            }\r\n            else\r\n            {\r\n               if (a[l] == a[r])\r\n               {\r\n                  solved = true;\r\n               }\r\n            }\r\n         }\r\n         else\r\n         {\r\n            if (a[l] != a[r])\r\n            {\r\n               bugFound = true;\r\n            }\r\n         }\r\n         l++, r--;\r\n      }\r\n      return true;\r\n   }\r\n\r\n   int main()\r\n   {\r\n      Faster;\r\n      int t;\r\n      cin >> t;\r\n      while (t--)\r\n      {\r\n         int n;\r\n         cin >> n;\r\n         string s;\r\n         cin >> s;\r\n\r\n         if (isPalindrome(s))\r\n         {\r\n            cout << \"Yes\" << endl;\r\n            continue;\r\n         }\r\n\r\n         bool ans = false;\r\n         ans = Call(s);\r\n         reverse(s.begin(), s.end());\r\n         ans |= Call(s);\r\n\r\n         if (ans)\r\n         {\r\n            cout << \"Yes\" << endl;\r\n         }\r\n         else\r\n         {\r\n            cout << \"No\" << endl;\r\n         }\r\n      }\r\n      return 0;\r\n   }\r\n}"
}