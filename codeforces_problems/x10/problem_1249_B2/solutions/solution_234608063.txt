{
    "id": 234608063,
    "contestId": 1249,
    "creationTimeSeconds": 1701098935,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1249,
        "index": "B2",
        "name": "Books Exchange (hard version)",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "dfs and similar",
            "dsu",
            "math"
        ]
    },
    "author": {
        "contestId": 1249,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1571754900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 16076800,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long int ll;\nconst int logN = 20;\n#define MOD 1000000007\n#define endl \"\\n\"\n#define hii cout << \"visited\\n \";\n#define pri                           \\\n    ios_base::sync_with_stdio(false); \\\n    cin.tie(0);                       \\\n    cout.tie(0);\n\nconst int M = 2e5 + 7;\nvector<ll> g[M];\nll vis[M];\nvector<set<ll>> vs(M);\n\nvoid dfs(ll v, ll t)\n{\n    vis[v] = 1;\n    vs[t].insert(v);\n\n    for (ll child : g[v])\n    {\n        if (vis[child])\n            continue;\n\n        dfs(child, t);\n    }\n}\nint main()\n{\n    pri int t = 1;\n    cin >> t;\n    while (t--)\n    {\n        ll n;\n        cin >> n;\n        ll a[n], vis[n] = {0};\n        for (int i = 0; i < n; i++)\n            cin >> a[i], a[i]--;\n        ll ans[n];\n        for (int i = 0; i < n; i++)\n        {\n            if (vis[i] == 0)\n            {\n                ll node = i;\n                ll cnt = 0;\n                while (!vis[node])\n                {\n                    vis[node] = 1;\n                    node = a[node];\n                    cnt--;\n                }\n                node = i;\n                while (vis[node] == 1)\n                {\n                    vis[node] = -1;\n                    ans[node] = cnt;\n                    node = a[node];\n                }\n            }\n            cout << ans[i] << ' ';\n        }\n        cout << endl;\n    }\n}\n\n   \t\t    \t \t\t \t\t\t\t\t \t   \t \t \t"
}