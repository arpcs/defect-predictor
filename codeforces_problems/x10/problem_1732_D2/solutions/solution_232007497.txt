{
    "id": 232007497,
    "contestId": 1732,
    "creationTimeSeconds": 1699493877,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1732,
        "index": "D2",
        "name": "Balance (Hard version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2400,
        "tags": [
            "brute force",
            "data structures",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1732,
        "members": [
            {
                "handle": "elijjah"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1666519500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 92,
    "timeConsumedMillis": 1622,
    "memoryConsumedBytes": 84992000,
    "source": "#include  <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\nconst int N = 2e5 + 10, M = 1e6 + 10, mod = 1e9 + 7, INF = 1e9 + 7;\r\nvoid solve(){\r\n    int n;\r\n    cin >> n;\r\n    set<ll> s;\r\n    map<ll, set<ll>> fail, tr;\r\n    while(n--){\r\n        char op;\r\n        ll x;\r\n        cin >> op >> x;\r\n        if (op == '+'){\r\n            s.insert(x);\r\n        }\r\n        else if (op == '-'){\r\n            s.erase(x);\r\n            for (auto u : fail[x])\r\n                tr[u].insert(x);\r\n            fail[x].clear();\r\n        }\r\n        else {\r\n            ll ans = x;\r\n            if (!tr[x].empty()) ans = *tr[x].begin();\r\n            while(s.contains(ans)){\r\n                fail[ans].insert(x);\r\n                if (tr[x].contains(ans)) tr[x].erase(ans);\r\n                if (!tr[x].empty()) ans = *tr[x].begin();\r\n                else ans += x;\r\n            }\r\n            cout << ans << endl;\r\n            tr[x].insert(ans);\r\n        }\r\n    }\r\n} \r\nint main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0), cout.tie(0);\r\n    // int t;\r\n    // cin >> t;\r\n    // while(t--)\r\n    solve();\r\n}"
}