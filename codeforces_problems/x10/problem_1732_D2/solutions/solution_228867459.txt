{
    "id": 228867459,
    "contestId": 1732,
    "creationTimeSeconds": 1697768096,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1732,
        "index": "D2",
        "name": "Balance (Hard version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2400,
        "tags": [
            "brute force",
            "data structures",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1732,
        "members": [
            {
                "handle": "Saanteye"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1666519500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 92,
    "timeConsumedMillis": 1543,
    "memoryConsumedBytes": 100454400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define int long long\r\n#define pii pair<int,int>\r\nconst int N = 5e2 + 10, mod = 998244353;\r\n\r\n\r\n\r\nvoid solve() {\r\n    int q;\r\n    cin >> q;\r\n\r\n    set<int> S;\r\n    map<int,set<int>> S1,S2;\r\n    map<int,int> f;\r\n    S.insert(0);\r\n\r\n    vector<pii> qr(q);\r\n    for (int i = 0; i < q; i++) {\r\n        char op; cin >> op >> qr[i].second;\r\n        if (op == '+') qr[i].first = 0;\r\n        if (op == '-') qr[i].first = 1;\r\n        if (op == '?') qr[i].first = 2;\r\n    }\r\n\r\n    for (int i = 0; i < q; i++) {\r\n        auto [op,x] = qr[i];\r\n        if (op == 0) {\r\n            S.insert(x);\r\n            for (auto h:S2[x]) {\r\n                S1[h].erase(x);\r\n            }\r\n        }\r\n        if (op == 1) {\r\n            S.erase(x);\r\n            for (auto h:S2[x]) {\r\n                S1[h].insert(x);\r\n            }\r\n        }\r\n        if (op == 2) {\r\n            if (S1[x].empty()) {\r\n                while (S.count(f[x])) {\r\n                    f[x] += x;\r\n                    S2[f[x]].insert(x);\r\n                }\r\n                cout << f[x] << '\\n';\r\n            }\r\n            else {\r\n                cout << *S1[x].begin() << '\\n';\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nsigned main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n\r\n    int t = 1;\r\n    // cin >> t;\r\n    while (t--) solve();\r\n    return 0;\r\n}"
}