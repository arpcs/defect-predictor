{
    "id": 228187383,
    "contestId": 1732,
    "creationTimeSeconds": 1697295965,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1732,
        "index": "D2",
        "name": "Balance (Hard version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2400,
        "tags": [
            "brute force",
            "data structures",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1732,
        "members": [
            {
                "handle": "RomkaRS"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1666519500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nmt19937 rnd(chrono::system_clock::now().time_since_epoch().count());\r\nconst int INF = INT_MAX;\r\n\r\n#define int long long\r\n\r\nsigned main() {\r\n//    ios_base::sync_with_stdio(false);\r\n//    cin.tie(nullptr);\r\n\r\n    int q;\r\n    cin >> q;\r\n\r\n    set<int> s;\r\n    s.insert(0);\r\n\r\n    map<int, set<int>> mapa, ins;\r\n    map<int, int> ans;\r\n\r\n    char c;\r\n    int k;\r\n\r\n    for (int i = 0; i < q; i++) {\r\n        cin >> c >> k;\r\n\r\n        if (c == '+') {\r\n            s.insert(k);\r\n            for (int x : ins[k]) {\r\n                mapa[x].erase(k);\r\n            }\r\n            ins[k].clear();\r\n        }\r\n        if (c == '-') {\r\n            for (int x = 1; x * x <= k; x++) {\r\n                if (k % x == 0) {\r\n                    ins[k].insert(x);\r\n                    ins[k].insert(k / x);\r\n                    mapa[x].insert(k);\r\n                    mapa[k / x].insert(k);\r\n                }\r\n            }\r\n        }\r\n        if (c == '?') {\r\n            if (!mapa[k].empty()) {\r\n                cout << min(ans[k], *mapa[k].begin()) << '\\n';\r\n            } else {\r\n                for (int x = ans[k]; x <= 2e18; x += k) {\r\n                    if (s.lower_bound(x) == s.end() || *s.lower_bound(x) != x) {\r\n                        ans[k] = x;\r\n                        break;\r\n                    }\r\n                }\r\n                cout << ans[k] << '\\n';\r\n            }\r\n        }\r\n    }\r\n}\r\n"
}