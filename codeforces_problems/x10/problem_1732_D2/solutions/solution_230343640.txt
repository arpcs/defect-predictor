{
    "id": 230343640,
    "contestId": 1732,
    "creationTimeSeconds": 1698571576,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1732,
        "index": "D2",
        "name": "Balance (Hard version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2400,
        "tags": [
            "brute force",
            "data structures",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1732,
        "members": [
            {
                "handle": "bkifhr9"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1666519500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 1,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\ntypedef long long ll;\nusing namespace std;\nset<ll> st;\nmap<ll, ll> mp;\nint q;\ninline void solve()\n{\n    char s[10];\n    ll x;\n    scanf(\"%s%lld\", s + 1, &x);\n    if (s[1] == '+')\n        st.insert(x);\n    else if (s[1] == '-')\n    {\n        // mp.clear();\n        for (ll i = 1; i <= 10000; i++)\n            if (x % i == 0)\n            {\n                ll now = x / i;\n                if (mp.find(now) != mp.end())\n                    mp[now] = min(x / i, mp[now]);\n            }\n        st.erase(x);\n    }\n    else\n    {\n        // cout << \"X=\" << x << endl;\n        if (mp.find(x) == mp.end())\n        {\n            ll ans;\n            for (ll i = 1;; i++)\n                if (st.find(i * x) == st.end())\n                {\n                    ans = i;\n                    break;\n                }\n            printf(\"%lld\\n\", ans * x);\n            mp.insert(make_pair(x, ans));\n        }\n        else\n        {\n            ll ans;\n            for (ll i = mp[x];; i++)\n                if (st.find(i * x) == st.end())\n                {\n                    ans = i;\n                    break;\n                }\n            printf(\"%lld\\n\", ans * x);\n            mp[x] = ans;\n        }\n    }\n    return;\n}\nint main()\n{\n    scanf(\"%d\", &q);\n    st.insert(0);\n    while (q--)\n        solve();\n    // system(\"pause\");\n    return 0;\n}\n\t \t\t     \t\t\t\t\t\t\t  \t  \t  \t  \t\t"
}