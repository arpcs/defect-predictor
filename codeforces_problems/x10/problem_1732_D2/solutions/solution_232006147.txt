{
    "id": 232006147,
    "contestId": 1732,
    "creationTimeSeconds": 1699492218,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1732,
        "index": "D2",
        "name": "Balance (Hard version)",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 2400,
        "tags": [
            "brute force",
            "data structures",
            "number theory"
        ]
    },
    "author": {
        "contestId": 1732,
        "members": [
            {
                "handle": "ITcharDo"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1666519500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 92,
    "timeConsumedMillis": 1419,
    "memoryConsumedBytes": 86732800,
    "source": "// Problem: B. Balance (Easy version)\r\n// Contest: Codeforces - NumberTheory\r\n// URL: https://codeforces.com/group/9QrbarK7qH/contest/481806/problem/B\r\n// Memory Limit: 256 MB\r\n// Time Limit: 3000 ms\r\n// \r\n// Powered by CP Editor (https://cpeditor.org)\r\n\r\n//================================ \u0628\u0633\u0645 \u0627\u0644\u0644\u0647 \u0627\u0644\u0631\u062d\u0645\u0646 \u0627\u0644\u0631\u062d\u064a\u0645 ==================================//\r\n#include <bits/stdc++.h>\r\n#include<unordered_map>\r\n#include <algorithm>\r\n#include <string>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n//==================================================================//bits//==========================================================\r\n#pragma GCC optimize(\"Ofast,no-stack-protector,unroll-loops,fast-math,O3\")\r\n#pragma GCC target(\"avx,avx2,f16c,fma,sse3,ssse3,sse4.1,sse4.2\")\r\n#pragma GCC target(\"bmi,bmi2,lzcnt,popcnt\")\r\n#pragma GCC target(\"aes,pclmul,rdrnd\")\r\n#pragma GCC optimize (\"unroll-loops\")\r\n#pragma GCC optimize(\"Ofast,inline\")\r\n#pragma GCC target(\"avx,avx2,fma\")\r\n#pragma GCC target(\"popcnt\")\r\n#pragma GCC target(\"movbe\")\r\n#pragma GCC optimize(\"O3\")\r\n\r\n#undef _GLIBCXX_DEBUG\r\n//==================================================================//ordered_set//=====================================================\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\nusing namespace __gnu_pbds;\r\n\r\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\r\ntypedef tree<int , null_type ,  less_equal<int> , rb_tree_tag , tree_order_statistics_node_update> ordered_multiset;\r\n\r\n//==================================================================//\r\n#define cout_2d(vec, n, m) for(int i = 0; i < n; i++, cout << \"\\n\") for(int j = 0; j < m && cout << vec[i][j]; j++);\r\n#define cin_2d(vec, n, m) for(int i = 0; i < n; i++) for(int j = 0; j < m && cin >> vec[i][j]; j++);\r\n#define cins(arr,n) for(long     long i=0; i<n; i++){cin>>arr[i];} sort(all(arr));\r\n#define cout_map(mp) for(auto& [f, s] : mp) cout << f << \"  \" << s << \"\\n\";\r\n#define cout(arr,n) for(long long i=0; i<n; i++){cout<<arr[i]<<\" \";}\r\n#define remove2(v)v.erase(unique(v.begin(), v.end()), v.end());\r\n#define cin(arr,n) for(long long i=0; i<n; i++){cin>>arr[i];}\r\n#define tt int tc; cin>>tc; for(int klm=1; klm<=tc; klm++)\r\n#define ceill(n,m) (((n)/(m))+((n)%(m)?1:0))\r\n#define FOR(a,b,c) for(ll a=b ; a<c; a++)\r\n#define allr(x) (x).rbegin(),(x).rend()\r\n#define all(x) (x).begin(), (x).end()\r\n#define fx(n) fixed<<setprecision(n)\r\n#define mine(v) min_element(all(v))\r\n#define maxe(v) max_element(all(v))\r\n#define OO 0x3f3f3f3f3f3f3f3fLL\r\n#define sz(x) int(x.size())\r\n#define prq priority_queue\r\n#define vll vector<ll>v(n)\r\n#define itt :: iterator\r\n#define MOD 1000000007\r\n#define pb push_back\r\n#define con continue\r\n#define sqrt sqrtl\r\n#define se second\r\n#define fi first\r\n#define el \"\\n\"\r\n//==================================================================//\r\n#define AHMEDHESHAM ios::sync_with_stdio(0),ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)\r\n//==================================================================//\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef unsigned long long ull;\r\n//==================================================================//\r\nll  GCD(ll a, ll b) { if (b == 0) return a; return GCD(b, a % b); }\r\nll  LCM(ll a, ll b) { return (a / GCD(a, b)) * b; }\r\n//==================================================================//\r\nll fPow(ll base, ll exp,ll mod)\r\n{\r\n    ll res = 1;\r\n    while(exp>0){\r\n        if(exp % 2 == 1) res = (res%mod * base%mod) % mod;\r\n        base = (base%mod * base%mod) % mod;\r\n        exp /= 2;\r\n    }\r\n    return res%mod;\r\n}\r\n//==================================================================//\r\n/*__int128 read() {__int128 x = 0, f = 1;char ch = getchar();while (ch < '0' || ch > '9') {if (ch == '-') f = -1;ch = getchar();}while (ch >= '0' && ch <= '9') {x = x * 10 + ch - '0';ch = getchar();}return x * f;}\r\nvoid print(__int128 x) {if (x < 0) {putchar('-');x = -x;}if (x > 9) print(x / 10); putchar(x % 10 + '0');}\r\n//==================================================================//*/\r\nll sum_square(ll n)//????? ?????? ??????? ?? 1 ? n\r\n{\r\n    return n*(n-1)*(2*n-1)/6;\r\n}\r\nll sum(ll n)\r\n{\r\n    return n*(n+1)/2;\r\n}\r\n//==================================================================//\r\nconst int dx[] = { 0, 1, 0, -1, 1, 1, -1, -1 };\r\nconst int dy[] = { 1, 0, -1, 0, 1, -1, 1, -1 };\r\nbool valid(int x, int y,int n,int m) {return (x >= 0 && y >= 0 && x < n&& y <m);}\r\n//==================================================================//\r\nstring YS=\"YES\\n\",Ys=\"Yes\\n\", ys=\"yes\\n\",NO=\"NO\\n\",no=\"no\\n\",No=\"No\\n\";\r\nint const N =2e5 + 10;\r\nconst long long mod = 1e9 + 7;\r\nconst int oo = 0x3f3f3f3f;\r\nconst ld pi=acos(-1);\r\nvoid ITcharDo()\r\n{\r\n\t set<ll> st; \r\n\t map<ll,ll> mp;\r\n\t map<ll,set<ll>> mp3,mp2;\r\n     tt\r\n     {\r\n     \tchar c; cin>>c; ll x; cin>>x; \r\n     \tif(c=='+')\r\n     \t{\r\n     \t\tst.insert(x);\r\n     \t\tfor(auto a:mp2[x]) mp3[a].erase(x);\r\n     \t}\r\n     \telse if(c=='-')\r\n     \t{\r\n     \t\tst.erase(x);\r\n     \t\tfor(auto a:mp2[x]) mp3[a].insert(x);\r\n     \t}\r\n     \telse\r\n     \t{\r\n     \t\tif(!mp.count(x))mp[x]=x;\r\n     \t\twhile(st.count(mp[x]))\r\n     \t\t{\r\n     \t\t\tmp2[mp[x]].insert(x);\r\n     \t\t\tmp[x]+=x;\r\n     \t\t}\r\n     \t\t(*mp3[x].begin()<mp[x]&&*mp3[x].begin()!=0)?cout<<*mp3[x].begin()<<el:cout<<mp[x]<<el;\r\n     \t}\r\n     }\r\n}\r\nint main()\r\n{\r\n    AHMEDHESHAM;\r\n#ifdef ITCH\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif\r\n   // tt\r\n    ITcharDo();\r\n}\r\n/*\r\n.------..------..------..------.\r\n|I.--. ||T.--. ||C.--. ||H.--. |\r\n| (\\/) || :/\\: || :/\\: || :/\\: |\r\n| :\\/: || (__) || :\\/: || (__) |\r\n| '--'I|| '--'T|| '--'C|| '--'H|\r\n`------'`------'`------'`------'\r\n*/"
}