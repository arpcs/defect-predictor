{
    "id": 219192745,
    "contestId": 1625,
    "creationTimeSeconds": 1692250630,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1625,
        "index": "C",
        "name": "Road Optimization",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "dp"
        ]
    },
    "author": {
        "contestId": 1625,
        "members": [
            {
                "handle": "rameshdange5191"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1641989100
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 7,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 4300800,
    "source": "# include <iostream>\r\n# include <vector>\r\n# include <algorithm>\r\nusing namespace std;\r\n\r\nint main() {\r\n    long long int n;\r\n    long long int l;\r\n    long long int k;\r\n    long long int nxt;\r\n    long long int an;\r\n    cin >> n >> l >> k;\r\n    vector <vector<pair<long long int,long long int>>> vc(n, vector<pair<long long int, long long int>> (k + 1, make_pair(0, 0)));\r\n    nxt = l;\r\n    vector <long long int> lc(n);\r\n    vector <long long int> sl(n);\r\n    for (long long int i = 0; i < n; i++) {\r\n        cin >> lc[i];\r\n    }\r\n    for (long long int i = 0; i < n; i++) {\r\n        cin >> sl[i];\r\n    }\r\n    if (n > 1) nxt = lc[1];\r\n    vc[0][0].first = nxt * sl[0];\r\n    vc[0][0].second = sl[0];\r\n    for (long long int i = 1; i < n; i++) {\r\n        if (i < n - 1) nxt = lc[i + 1];\r\n        else nxt = l;\r\n        for (long long int j = 0; j <= k; j++) {\r\n            if (vc[i - 1][j].first) {\r\n                // cout << \"hi\" << i << j;\r\n                vc[i][j].first = vc[i - 1][j].first + (nxt - lc[i]) * sl[i];\r\n                vc[i][j].second = sl[i];\r\n            }\r\n            if (j && vc[i - 1][j - 1].first) {\r\n                if ((vc[i - 1][j - 1].first + (nxt - lc[i]) * vc[i - 1][j - 1].second < vc[i][j].first) || (!vc[i][j].first)) {\r\n                    vc[i][j].first = vc[i - 1][j - 1].first + (nxt - lc[i]) * vc[i - 1][j - 1].second;\r\n                    // cout <<  vc[i - 1][j - 1].first << \" \" << sl[vc[i - 1][j - 1].second] << endl;\r\n                    vc[i][j].second = vc[i - 1][j - 1].second;\r\n                    // cout << i << endl;\r\n                }\r\n            }\r\n            // cout << \"i: \" << i << \" j: \" << j << \" val: \" << vc[i][j].first << endl;\r\n        }\r\n    }\r\n    an = vc[n - 1][0].first;\r\n    for (long long int i = 1; i <= k; i++ ) {\r\n        // cout << vc[n - 1][i].first << endl;\r\n        if (vc[n - 1][i].first) an = min(an, vc[n - 1][i].first);\r\n    }\r\n    cout << an;\r\n    // cout << *min_element(vc[n - 1].begin(), vc[n - 1].end());\r\n    return 0;\r\n}"
}