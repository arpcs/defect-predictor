{
    "id": 177280298,
    "contestId": 241,
    "creationTimeSeconds": 1666342067,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 241,
        "index": "E",
        "name": "Flights",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 241,
        "members": [
            {
                "handle": "lsj123"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1351783800
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 7987200,
    "source": "// LUOGU_RID: 90819318\n#include<bits/stdc++.h>\nusing namespace std;\nconst int inf=1e9+7;\nconst int N=1e5+5;\nint t,n,m,tot=0;\nint vis[N],ans[N],cnt[N],c[N],x[N],y[N];\nstruct node{\n  int v,h,n,w;\n}e[N*2];\nstruct Node{\n  int v,h,n;\n}e1[N*2];\nvoid add1(int x,int y)\n{\n  e1[++tot].v=y;  e1[tot].n=e1[x].h; e1[x].h=tot;\n}\nvoid add(int x,int y,int z)\n{\n  e[++tot].v=y; e[tot].w=z; e[tot].n=e[x].h; e[x].h=tot;\n}\nvoid dfs(int x)\n{\n  if(x==n) return;\n  for(int i=e1[x].h;i;i=e1[i].n)\n    {\n      int y=e1[i].v;\n      dfs(y);\n      if(c[y]) c[x]=1;\n    }\n}\nbool spfa()\n{\n  for(int i=0;i<=n;i++) ans[i]=-inf;\n  deque<int> q;\n  ans[0]=0; vis[0]=1;\n  q.push_front(0);\n  while(q.size())\n    {\n      int x=q.front(); q.pop_front();\n      vis[x]=0;\n      for(int i=e[x].h;i;i=e[i].n)\n        {\n          int y=e[i].v;\n          if(ans[y]<ans[x]+e[i].w)\n            {\n              ans[y]=ans[x]+e[i].w;\n              cnt[y]=cnt[x]+1;\n              if(cnt[y]>n) return 1;\n              if(!vis[y])\n                {\n                  if(ans[y]>ans[q.front()]) q.push_front(y);\n                  else q.push_back(y);\n                  vis[y]=1;\n                }\n            }\n        }\n    }\n  return 0;\n}\nint main()\n{\n      cin>>n>>m;\n      for(int i=1;i<=m;i++)\n        {\n          cin>>x[i]>>y[i];\n          add1(x[i],y[i]);\n        }\n      c[n]=1;\n      dfs(1);\n      for(int i=1;i<=n;i++) add(0,i,0);\n      for(int i=1;i<=m;i++)\n        {\n          if(c[x[i]]&&c[y[i]])\n            add(x[i],y[i],1),add(y[i],x[i],-2);\n        }\n      if(spfa()) cout<<\"No\"<<endl;\n      else\n        {\n          cout<<\"Yes\"<<endl;\n          for(int i=1;i<=m;i++)\n            {\n              if(c[x[i]]&&c[y[i]])\n                cout<<ans[y[i]]-ans[x[i]]<<endl;\n              else cout<<1<<endl;\n            }\n        }\n  return 0;\n}\n"
}