{
    "id": 194527473,
    "contestId": 241,
    "creationTimeSeconds": 1677037373,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 241,
        "index": "E",
        "name": "Flights",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 241,
        "members": [
            {
                "handle": "NOIp2022Lost75pts"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1351783800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 123,
    "timeConsumedMillis": 92,
    "memoryConsumedBytes": 64204800,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define pr pair<int,int>\r\n#define mp make_pair\r\n#define _(x,y) x=(x+y)%mod\r\n#define ll long long\r\n//\t#define int long long\r\nint read(){int d=1,k=0;char c=getchar();\r\nwhile(!(c>='0' and c<='9' or c=='-'))c=getchar();if(c=='-')d=-1,c=getchar();\r\nwhile(c>='0' and c<='9')k=(k<<3)+(k<<1)+(c^48),c=getchar();return d*k;}\r\n\r\nstruct node{int next,to,value;}t[1000000];\r\nint head[1000000],dis[1000000],vis[1000000],num[1000000],n,m,cnt;\r\nint X[1000000],Y[1000000],tag[1000000];\r\nvector<int>e[1000000];\r\nvoid add(int x,int y,int z){t[++cnt].next=head[x],head[x]=cnt,t[cnt].to=y,t[cnt].value=z;}\r\nvoid dfs(int x){\r\n\tif(tag[x])return;\r\n\tfor(int i=0;i<e[x].size();i++){\r\n\t\tint go=e[x][i];\r\n\t\tdfs(go);\r\n\t\ttag[x]|=tag[go];\r\n\t}\r\n}\r\nsigned main(){\r\n\t\r\n\tn=read(),m=read();\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tint x=read(),y=read();\r\n\t\te[x].push_back(y);\r\n\t\tX[i]=x,Y[i]=y;\r\n\t}tag[n]=1;\r\n\tdfs(1);\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tint x=X[i],y=Y[i];\r\n\t\tif(tag[x] and tag[y])add(x,y,-1),add(y,x,2); \r\n\t}\r\n\tmemset(dis,0x3f,sizeof(dis));\r\n\tdis[n]=0;queue<int>q;q.push(n);\r\n\twhile(q.size()){\r\n\t\tint x=q.front();q.pop();\r\n\t\tvis[x]=0;for(int i=head[x];i;i=t[i].next){\r\n\t\t\tint go=t[i].to;\r\n\t\t\tif(dis[go]>dis[x]+t[i].value){\r\n\t\t\t\tdis[go]=dis[x]+t[i].value;\r\n\t\t\t\tif(!vis[go]){\r\n\t\t\t\t\tq.push(go);\r\n\t\t\t\t\tnum[go]++;\r\n\t\t\t\t\tvis[go]=1;\r\n\t\t\t\t\tif(num[go]>n+10){\r\n\t\t\t\t\t\tcout<<\"No\";\r\n\t\t\t\t\t\texit(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcout<<\"Yes\\n\";\r\n\tfor(int i=1;i<=m;i++){\r\n\t\tif(tag[X[i]] and tag[Y[i]])cout<<dis[X[i]]-dis[Y[i]]<<endl;\r\n\t\telse puts(\"1\");\r\n\t}\r\n\t\r\n\r\n\treturn 0;\r\n}\r\n\r\n"
}