{
    "id": 215289240,
    "contestId": 241,
    "creationTimeSeconds": 1690165052,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 241,
        "index": "E",
        "name": "Flights",
        "type": "PROGRAMMING",
        "rating": 2600,
        "tags": [
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 241,
        "members": [
            {
                "handle": "TianShuiXingHe"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1351783800
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 123,
    "timeConsumedMillis": 60,
    "memoryConsumedBytes": 204800,
    "source": "// LUOGU_RID: 117151514\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst int N=1e3+5,inf=1e9;\r\nstruct edge{\r\n\tint u,v,nxt;\r\n}e[N*5];\r\nstruct node{\r\n\tint v,w;\r\n};\r\nint head[N];\r\nint n,m,dis[N],cnt[N];\r\nbool vis[N],in[N];\r\nvector <node> ne[N];\r\nqueue <int> q;\r\nvoid dfs(int u){\r\n\tvis[u]=1;\r\n\tif(u==n) in[u]=1;\r\n\tfor(int i=head[u],v;i;i=e[i].nxt){\r\n\t\tv=e[i].v;\r\n\t\tif(!vis[v]) dfs(v);\r\n\t\tin[u]|=in[v];\r\n\t}\r\n}\r\nbool spfa(){\r\n\tfill(dis+1,dis+n+1,inf);\r\n\tfill(vis+1,vis+n+1,0);\r\n\tq.push(1);dis[1]=0;vis[1]=1;cnt[1]=0;\r\n\tint u,v,w;\r\n\twhile(!q.empty()){\r\n\t\tu=q.front();q.pop();\r\n\t\tvis[u]=0;\r\n\t\tfor(auto i:ne[u]){\r\n\t\t\tv=i.v;w=i.w;\r\n\t\t\tif(dis[u]+w<dis[v]){\r\n\t\t\t\tdis[v]=dis[u]+w;\r\n\t\t\t\tcnt[v]=cnt[u]+1;\r\n\t\t\t\tif(cnt[v]>n) return 0;\r\n\t\t\t\tif(!vis[v]){\r\n\t\t\t\t\tq.push(v);\r\n\t\t\t\t\tvis[v]=1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 1;\r\n}\r\nint main(){\r\n\tios::sync_with_stdio(0);\r\n\tcin.tie(0); cout.tie(0);\r\n\tsrand(time(0));\r\n\tcin>>n>>m;\r\n\tfor(int i=1,u,v;i<=m;i++){\r\n\t\tcin>>u>>v;\r\n\t\te[i]={u,v,head[u]};\r\n\t\thead[u]=i;\r\n\t}\r\n\tdfs(1);\r\n\tfor(int i=1,u,v;i<=m;i++){\r\n\t\tu=e[i].u;v=e[i].v;\r\n\t\tif(in[u]&&in[v]){\r\n\t\t\tne[u].push_back({v,2});\r\n\t\t\tne[v].push_back({u,-1});\r\n\t\t}\r\n\t}\r\n\tif(spfa()){\r\n\t\tcout<<\"Yes\\n\";\r\n\t\tfor(int i=1,u,v;i<=m;i++){\r\n\t\t\tu=e[i].u;v=e[i].v;\r\n\t\t\tif(in[u]&&in[v])\r\n\t\t\t\tcout<<(dis[v]-dis[u])<<'\\n';\r\n\t\t\telse cout<<(rand()%2+1)<<'\\n';\r\n\t\t}\r\n\t}else cout<<\"No\\n\";\r\n\treturn 0;\r\n}"
}