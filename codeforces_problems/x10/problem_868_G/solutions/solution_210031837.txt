{
    "id": 210031837,
    "contestId": 868,
    "creationTimeSeconds": 1687075365,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 868,
        "index": "G",
        "name": "El Toll Caves",
        "type": "PROGRAMMING",
        "points": 3500.0,
        "rating": 3300,
        "tags": [
            "math"
        ]
    },
    "author": {
        "contestId": 868,
        "members": [
            {
                "handle": "CFM_LOVE_ETK"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1507187100
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 24,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 0,
    "source": "// LUOGU_RID: 112943027\n#include<bits/stdc++.h>\r\n#define rep(i,a,b) for(int i=(a);i<=(b);i++)\r\n#define per(i,a,b) for(int i=(a);i>=(b);i--)\r\n#define op(x) ((x&1)?x+1:x-1)\r\n#define odd(x) (x&1)\r\n#define even(x) (!odd(x))\r\n#define lc(x) (x<<1)\r\n#define rc(x) (lc(x)|1)\r\n#define lowbit(x) (x&-x)\r\n#define mp(x,y) make_pair(x,y)\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef double db;\r\nusing namespace std;\r\nconst ll mod = 1e9+7,div2 = (mod+1)/2;\r\nvoid add(ll& x,ll y){x=(x+y)%mod;}\r\nvoid sub(ll& x,ll y){x=(x-y+mod)%mod;}\r\nll addv(ll x,ll y){return (x+y)%mod;}\r\nll subv(ll x,ll y){return (x-y+mod)%mod;}\r\n\r\nll mypow(ll a,ll n){\r\n\tif(!n)return 1;\r\n\tll tmp=mypow(a,n/2);tmp=tmp*tmp%mod;\r\n\tif(n&1)tmp=tmp*a%mod;return tmp;\r\n}\r\nll myinv(ll a){\r\n\treturn mypow(a,mod-2);\r\n}\r\n//\r\ntypedef array<ll,2> vec;\r\n\r\nvec operator+(const vec& x,const vec& y){return {addv(x[0],y[0]),addv(x[1],y[1])};}\r\nvec operator*(const vec& x,const vec& y){return {x[0]*y[0]%mod,addv(x[1]*y[0],y[1])};}\r\n\r\ntypedef array<vec,2> pr;\r\npr operator*(const pr& x,const pr& y){return {x[0]*y[0],x[1]+x[0]*y[1]};}\r\nconst pr I = {(vec){1,0},(vec){0,0}};\r\n\r\npr mypow(pr a,ll n){\r\n\tif(!n)return I;\r\n\tpr tmp=mypow(a,n/2);tmp=tmp*tmp;\r\n\tif(n&1)tmp=tmp*a;return tmp;\r\n}\r\n//\r\nll T,n,k;\r\n\r\npr F(ll n,ll a,ll b,ll c,pr U,pr R){\r\n\tif(n<=0)return I;\r\n\tb%=c;\r\n\tif(a>=c)return F(n,a%c,b,c,U,mypow(U,a/c)*R);\r\n\r\n\tll m=(a*n+b)/c;\r\n\tif(m==0)return mypow(R,n);\r\n\treturn mypow(R,(c-b-1)/a) * U * F(m-1,c,c-b-1,a,R,U) * mypow(R,n-(c*m-b-1)/a);\r\n}\r\n\r\nvoid solve(){\r\n\tcin>>n>>k;\r\n\tll g=__gcd(n,k);\r\n\tn/=g,k/=g;\r\n\r\n\tif(n==1){\r\n\t\tcout<<\"2\\n\";\r\n\t\treturn;\r\n\t}\r\n\r\n\tpr f = {(vec){1,0},(vec){0,0}};\r\n\tpr U = {(vec){div2,0},(vec){0,0}};\r\n\tpr R = {(vec){1,1},(vec){1,1}};\r\n\r\n\tf = f*F(n,k,0,n,U,R);\r\n\r\n\tll x = f[0][1] * myinv(subv(1,f[0][0]))%mod;\r\n\r\n\tll ans = addv(f[1][0]*x,f[1][1]);\r\n\r\n\tcout<<ans*myinv(n)%mod<<\"\\n\";\r\n}\r\n\r\nint main(){\r\n\tios::sync_with_stdio(false);\r\n\r\n\tcin>>T;\r\n\twhile(T--)solve();\r\n\r\n    return 0;\r\n}"
}