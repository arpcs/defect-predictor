{
    "id": 230818026,
    "contestId": 1778,
    "creationTimeSeconds": 1698839665,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1778,
        "index": "E",
        "name": "The Tree Has Fallen!",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2500,
        "tags": [
            "bitmasks",
            "dfs and similar",
            "math",
            "trees"
        ]
    },
    "author": {
        "contestId": 1778,
        "members": [
            {
                "handle": "sak_kn"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1675262100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "// LUOGU_RID: 132810066\n#include<bits/stdc++.h>\r\n#define ll long long\r\nusing namespace std;\r\nconst int N=2e5+5;\r\n\r\nstruct basis {\r\n\tint f[30],p[30];\r\n\tbasis() {\r\n\t\tmemset(f,0,sizeof(f));\r\n\t\tmemset(p,0,sizeof(p));\r\n\t}\r\n\tvoid insert(int pos,int x) {\r\n\t\tfor (int i=29;i>=0;i--) {\r\n\t\t\tif (x>>i&1) {\r\n\t\t\t\tif (f[i]) {\r\n\t\t\t\t\tif (pos>p[i]) {\r\n\t\t\t\t\t\tswap(pos,p[i]);\r\n\t\t\t\t\t\tswap(x,f[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tx^=f[i];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tp[i]=pos;\r\n\t\t\t\t\tf[i]=x;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tint query(int l) {\r\n\t\tint ret=0;\r\n\t\tfor (int i=29;i>=0;i--) {\r\n\t\t\tif (ret>>i&1) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (p[i]>=l) {\r\n\t\t\t\tret^=f[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ret;\r\n\t}\r\n}b;\r\nint n,Q,a[N],dfn[N],ndfn[N],siz[N],cntdfn;\r\nvector<int>e[N],son[N];\r\nvoid dfs(int now,int father) {\r\n\tndfn[dfn[now]=++cntdfn]=now;\r\n\tsiz[now]=1;\r\n\tfor (int to:e[now]) {\r\n\t\tif (to==father) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tdfs(to,now);\r\n\t\tson[now].emplace_back(to);\r\n\t\tsiz[now]+=siz[to];\r\n\t}\r\n}\r\nint ans[N];\r\nvector<pair<int,int>>q[N+N];\r\nvoid work() {\r\n\tfor (int i=1;i<=n+n;i++) {\r\n\t\tq[i].clear();\r\n\t}\r\n\tcntdfn=0;\r\n\tcin>>n;\r\n\tfor (int i=1;i<=n;i++) {\r\n\t\tcin>>a[i];\r\n\t\te[i].clear();\r\n\t\tson[i].clear();\r\n\t}\r\n\tfor (int i=1;i<n;i++) {\r\n\t\tint u,v;\r\n\t\tcin>>u>>v;\r\n\t\te[u].emplace_back(v);\r\n\t\te[v].emplace_back(u);\r\n\t}\r\n\tdfs(1,0);\r\n\tcin>>Q;\r\n\tfor (int i=1;i<=Q;i++) {\r\n\t\tint r,x;\r\n\t\tcin>>r>>x;\r\n\t\tif (r==x) {\r\n\t\t\tq[n].emplace_back(1,i);\r\n\t\t} else if (dfn[r]<dfn[x]||dfn[x]+siz[x]<=dfn[r]) {\r\n\t\t\tq[dfn[x]+siz[x]-1].emplace_back(dfn[x],i);\r\n\t\t} else {\r\n\t\t\tint p=*--upper_bound(son[x].begin(),son[x].end(),r,[&](int x,int y) {\r\n\t\t\t\treturn dfn[x]<dfn[y];\r\n\t\t\t});\r\n\t\t\tq[dfn[p]-1+n].emplace_back(dfn[p]+siz[p],i);\r\n\t\t}\r\n\t}\r\n\tb=basis();\r\n\tfor (int i=1;i<=n+n;i++) {\r\n\t\tb.insert(i,a[ndfn[(i-1)%n+1]]);\r\n\t\tfor (auto [l,id]:q[i]) {\r\n\t\t\tans[id]=b.query(l);\r\n\t\t}\r\n\t}\r\n\tfor (int i=1;i<=Q;i++) {\r\n\t\tcout<<ans[i]<<\"\\n\";\r\n\t}\r\n}\r\n\r\nsigned main() {\r\n\tios::sync_with_stdio(false),cin.tie(0);\r\n\tcout.precision(10),cout.setf(ios::fixed);\r\n\t\r\n\tint T;\r\n\tcin>>T;\r\n\twhile (T--) {\r\n\t\twork();\r\n\t}\r\n\t\r\n\treturn 0;\r\n}"
}