{
    "id": 124940531,
    "contestId": 595,
    "creationTimeSeconds": 1628155881,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 595,
        "index": "B",
        "name": "Pasha and Phone",
        "type": "PROGRAMMING",
        "points": 1000.0,
        "rating": 1600,
        "tags": [
            "binary search",
            "math"
        ]
    },
    "author": {
        "contestId": 595,
        "members": [
            {
                "handle": "SanjayMarreddi"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1447000200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 6,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 4096000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef pair<int, int> pi;\r\ntypedef pair<ll, ll> pl;\r\ntypedef vector<int> vi;\r\ntypedef vector<ll>\tvl;\r\ntypedef vector<pi>\tvpi;\r\ntypedef vector<pl>\tvpl;\r\ntypedef vector<vi>\tvvi;\r\ntypedef vector<vl>\tvvl;\r\ntypedef priority_queue<ll> prq;  // Max priority Queue.\r\n#define fi first\r\n#define se second\r\n#define pb push_back\r\n#define pob pop_back\r\n#define sz(x) (ll)(x).size()\r\n#define all(x) (x).begin(), (x).end()\r\n#define allr(x) (x).rbegin(),(x).rend()\r\n#define decimal(x) cout << fixed << setprecision(x)\r\n#define fr(i,a,b) for(ll (i)=(a) ; (i) <= (b) ; ++(i))\r\n#define frr(i,a,b) for(ll (i)=(a) ; (i) >= (b) ; --(i))\r\n#define trav(ele,container) for(auto (ele): (container)) // Just gives a copy of the elements.\r\n#define tra(ele,container) for(auto& (ele): (container)) // Gives the reference to the elements.\r\n#define deb(x) cout << #x << \" = \" << x << endl\r\n#define deb2(x, y) cout << #x << \" = \" << x << \"  ,  \" << #y << \"=\" << y << endl\r\n#define deb3(x, y, z) cout << #x << \" = \" << x << \"  ,  \" << #y << \"=\" << y << \"  ,  \" << #z << \"=\" << z << endl\r\n#define fastIO ios_base::sync_with_stdio(0); cin.tie(0);  cout.tie(0);\r\ntemplate <typename T> using min_prq = priority_queue<T, vector<T>, greater<T>>;   // Min priority queue\r\n\r\ninline ll pmod(ll i, ll n) { return (i % n + n) % n; }\r\nconst int mod = 1e9 + 7;\r\n\r\nvoid solve(){\r\n\tll n, k ;\r\n\tcin >> n >> k;\r\n    vl a(n/k), b(n/k);\r\n\r\n    fr(i,0,(n/k)-1){\r\n        cin >> a[i];\r\n    }\r\n\tfr(i,0,(n/k)-1){\r\n        cin >> b[i];\r\n    }\r\n\r\n \r\n    ll count = 1;\r\n    ll maxy =  pow(10, k)-1;\r\n\r\n    string useful = \"\";\r\n    fr(i,0,k-2){\r\n        useful += '9';\r\n    }\r\n\r\n    // Count of integers that have exactly k digits & are divisible by a[i] but the first digit is not equal to b[i] is:\r\n    // The count of integers that have exactly k digits & are divisible by a[i](  [99999..k times] /a[i] ), \r\n    // minus the count of integers that have exactly k digits & have 1st digit as b[i] & are divisible by a[i] (  [ b[i]9999..k-1 times] /a[i] ), \r\n    // plus  the count of integers that have exactly k digits & have 1st digit as b[i]-1  (only if b[i]\u2009>\u20090) & are divisible by a[i] \r\n    // (  [ b[i]-1 9999..k-1 times] /a[i] ) \r\n\r\n    fr(i,0,(n/k)-1){    \r\n        \r\n        // All are zeroes\r\n        ll curr_count;\r\n        if (b[i] == 0){\r\n            curr_count = 0;\r\n        }\r\n        else{\r\n            curr_count = 1;\r\n        } \r\n\r\n        // Including the ones % by ai\r\n        curr_count += (maxy/a[i])%mod;\r\n\r\n        if ( b[i] > 0 ){\r\n             string useful1 = to_string(b[i]) + useful;\r\n             int one = stoi(useful1);\r\n             string useful2 = to_string(b[i]-1) + useful;\r\n             int two = stoi(useful2);\r\n            curr_count =   (curr_count - (one/a[i]) )% mod;\r\n            curr_count =   (curr_count + (two/a[i]) )% mod;\r\n        }\r\n        else{\r\n             string useful1 = to_string(b[i]) + useful;\r\n             int one = stoi(useful1);\r\n             curr_count =   (curr_count - (one/a[i]) )% mod;\r\n        }\r\n\r\n        count *= ( curr_count % mod );\r\n    }\r\n\r\n    cout << count % mod;\r\n\r\n}\r\n\r\nint main() {\r\n    fastIO;\r\n    int t = 1;\r\n    fr(T,1,t){\r\n        solve();\r\n        //cout << \"\\n\";\r\n    }\r\n    return 0;\r\n}"
}