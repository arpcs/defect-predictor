{
    "id": 219451751,
    "contestId": 1819,
    "creationTimeSeconds": 1692365108,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "FantasyNumber"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 22528000,
    "source": "#include <bits/stdc++.h>\r\n#define _rep(i, x, y) for(int i = x; i <= y; ++i)\r\n#define _req(i, x, y) for(int i = x; i >= y; --i)\r\n#define _rev(i, u) for(int i = head[u]; i; i = e[i].nxt)\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n#define mst(f, i) memset(f, i, sizeof f)\r\nusing namespace std;\r\n#ifdef ONLINE_JUDGE\r\n#define debug(...) 0\r\n#else\r\n#define debug(...) fprintf(stderr, __VA_ARGS__), fflush(stderr)\r\n#endif\r\nnamespace fastio{\r\n    char ibuf[50007],*p1 = ibuf, *p2 = ibuf;\r\n    #ifdef ONLINE_JUDGE\r\n    #define get() p1 == p2 && (p2 = (p1 = ibuf) + fread(ibuf, 1, 50007, stdin), p1 == p2) ? EOF : *p1++\r\n    #else\r\n    #define get() getchar()\r\n    #endif\r\n    template<typename T> inline void read(T &t){\r\n        T x = 0, f = 1;\r\n        char c = getchar();\r\n        while(!isdigit(c)){\r\n            if(c == '-') f = -f;\r\n            c = getchar();\r\n        }\r\n        while(isdigit(c)) x = x * 10 + c - '0', c = getchar();\r\n        t = x * f;\r\n    }\r\n    template<typename T, typename ... Args> inline void read(T &t, Args&... args){\r\n        read(t);\r\n        read(args...);\r\n    }\r\n    template<typename T> void write(T t){\r\n        if(t < 0) putchar('-'), t = -t;\r\n        if(t >= 10) write(t / 10);\r\n        putchar(t % 10 + '0');\r\n    }\r\n    template<typename T, typename ... Args> void write(T t, Args... args){\r\n        write(t), putchar(' '), write(args...);\r\n    }\r\n    template<typename T> void writeln(T t){\r\n        write(t);\r\n        puts(\"\");\r\n    }\r\n    template<typename T> void writes(T t){\r\n        write(t), putchar(' ');\r\n    }\r\n    #undef get\r\n};\r\nusing namespace fastio;\r\n#define multitest() int T; read(T); _rep(tCase, 1, T)\r\ntypedef long long ll;\r\ntypedef pair<ll, ll> PII;\r\nconst int N = 2e5 + 5;\r\nint n;\r\nPII a[N];\r\nmultiset<int> sx[N], sy[N];\r\nvector<PII> ans;\r\nbool dfs(ll w, ll h){\r\n    if(!w || !h) return 1;\r\n    if(!sx[w].size() && !sy[h].size()) return 0;\r\n    bool flag = 1;\r\n    if(sx[w].size()){\r\n        ll nh = h;\r\n        for(auto &i : sx[w]){\r\n            nh -= i, sx[w].erase(sx[w].find(i));\r\n            sy[i].erase(sy[i].find(w));\r\n        }\r\n        return dfs(w, nh);\r\n    }\r\n    if(sy[h].size()){\r\n        ll nw = w;\r\n        for(auto &i : sy[h]){\r\n            nw -= i, sy[h].erase(sy[h].find(i));\r\n            sx[i].erase(sx[i].find(h));\r\n        }\r\n        return dfs(nw, h);\r\n    }\r\n    return 0;\r\n}\r\nint main(){\r\n\tmultitest(){\r\n        read(n); ll s = 0;\r\n        int u, v;\r\n        _rep(i, 1, n){\r\n            read(a[i].fi, a[i].se), s += 1ll * a[i].fi * a[i].se;\r\n            sx[a[i].fi].insert(a[i].se);\r\n            sy[a[i].se].insert(a[i].fi);\r\n        }\r\n        sort(a + 1, a + 1 + n, [](PII x, PII y){return x.fi > y.fi;});\r\n        if(s % a[1].fi == 0){\r\n            ll w = a[1].fi, h = s / a[1].fi;\r\n            for(auto &i : sx[a[1].fi]){\r\n                h -= i;\r\n                sx[a[1].fi].erase(sx[a[1].fi].find(i));\r\n                sy[i].erase(sy[i].find(a[1].fi));\r\n            }\r\n            if(dfs(w, h)) ans.pb({a[1].fi, s / a[1].fi});\r\n        }\r\n        _rep(i, 1, n) sx[a[i].fi].clear(), sy[a[i].se].clear();\r\n        _rep(i, 1, n){\r\n            sx[a[i].fi].insert(a[i].se);\r\n            sy[a[i].se].insert(a[i].fi);\r\n        }   \r\n        sort(a + 1, a + 1 + n, [](PII x, PII y){return x.se > y.se;}); \r\n        if(s % a[1].se == 0){\r\n            ll w = s / a[1].se, h = a[1].se;\r\n            for(auto &i : sy[a[1].se]){\r\n                w -= i;\r\n                // sy[a[1].se].erase(sy[a[1].se].find(i));\r\n                sx[i].erase(sx[i].find(a[1].se));\r\n            }\r\n            if(dfs(w, h)){\r\n                if(ans.empty() || ans[0].fi != s / a[1].se && ans[0].se != a[1].se)\r\n                ans.pb({s / a[1].se, a[1].se});\r\n            }\r\n        }\r\n        writeln(ans.size());\r\n        for(auto &i : ans) write(i.fi, i.se), puts(\"\");\r\n        ans.clear();\r\n        return 0;\r\n    }\r\n    return 0;\r\n}\r\n\r\n"
}