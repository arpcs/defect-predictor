{
    "id": 220123671,
    "contestId": 1819,
    "creationTimeSeconds": 1692865905,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1819,
        "index": "B",
        "name": "The Butcher",
        "type": "PROGRAMMING",
        "points": 1250.0,
        "rating": 1900,
        "tags": [
            "geometry",
            "greedy",
            "implementation",
            "sortings",
            "two pointers"
        ]
    },
    "author": {
        "contestId": 1819,
        "members": [
            {
                "handle": "-WIDA-"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1681549500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 23,
    "timeConsumedMillis": 326,
    "memoryConsumedBytes": 16384000,
    "source": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#ifndef ONLINE_JUDGE\r\n    #define tout cout\r\n    #include <bits/wida.h>\r\n#endif\r\n#define endl \"\\n\"\r\n#define int long long\r\n\r\n\r\nsigned main() {\r\n    int Task = 1;\r\n    for (cin >> Task; Task; Task--) {\r\n        int n;\r\n        cin >> n;\r\n        \r\n        vector<int> x(n), y(n);\r\n        int area = 0;\r\n        for (int i = 0; i < n; i++) {\r\n            cin >> x[i] >> y[i];\r\n            area += x[i] * y[i];\r\n        }\r\n        \r\n        set<pair<int, int>> ans;\r\n        auto check = [&](int H, int W) -> void {\r\n            int h = H, w = W;\r\n            \r\n            priority_queue<array<int, 2>> x_, y_;\r\n            vector<int> vis(n);\r\n            for (int i = 0; i < n; i++) {\r\n                x_.push({x[i], i});\r\n                y_.push({y[i], i});\r\n            }\r\n            \r\n            while (h * w > 0) {\r\n                while (vis[x_.top()[1]]) {\r\n                    x_.pop();\r\n                }\r\n                while (vis[y_.top()[1]]) {\r\n                    y_.pop();\r\n                }\r\n                \r\n                if (x_.top()[0] == h) {\r\n                    int idx = x_.top()[1];\r\n                    vis[idx] = 1;\r\n                    w -= y[idx];\r\n                    x_.pop();\r\n                } else if (y_.top()[0] == w) {\r\n                    int idx = y_.top()[1];\r\n                    vis[idx] = 1;\r\n                    h -= x[idx];\r\n                    y_.pop();\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n            ans.emplace(H, W);\r\n        };\r\n        \r\n        int Max = *max_element(x.begin(), x.end());\r\n        if (area % Max == 0) {\r\n            check(Max, area / Max);\r\n        }\r\n        Max = *max_element(y.begin(), y.end());\r\n        if (area % Max == 0) {\r\n            check(area / Max, Max);\r\n        }\r\n        \r\n        cout << ans.size() << endl;\r\n        for (auto [a, b] : ans) {\r\n            cout << a << \" \" << b << endl;\r\n        }\r\n    }\r\n}\r\n\r\nint __OI_INIT__ = []() {\r\n    ios::sync_with_stdio(0), cin.tie(0);\r\n    cout.tie(0);\r\n    cout << fixed << setprecision(12);\r\n    return 0;\r\n}();\r\n"
}