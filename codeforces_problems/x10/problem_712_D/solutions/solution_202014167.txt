{
    "id": 202014167,
    "contestId": 712,
    "creationTimeSeconds": 1681444725,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 712,
        "index": "D",
        "name": "Memory and Scores",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2200,
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ]
    },
    "author": {
        "contestId": 712,
        "members": [
            {
                "handle": "joker_x"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1473525900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 16,
    "timeConsumedMillis": 343,
    "memoryConsumedBytes": 323891200,
    "source": "#pragma GCC optimize(\"O3\")\r\n#pragma GCC optimize(2)\r\n#pragma GCC optimize(3)\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC optimize(\"inline\")\r\n#pragma GCC optimize(\"-fgcse\")\r\n#pragma GCC optimize(\"-fgcse-lm\")\r\n#pragma GCC optimize(\"-fipa-sra\")\r\n#pragma GCC optimize(\"-ftree-pre\")\r\n#pragma GCC optimize(\"-ftree-vrp\")\r\n#pragma GCC optimize(\"-fpeephole2\")\r\n#pragma GCC optimize(\"-ffast-math\")\r\n#pragma GCC optimize(\"-fsched-spec\")\r\n#pragma GCC optimize(\"unroll-loops\")\r\n#pragma GCC optimize(\"-falign-jumps\")\r\n#pragma GCC optimize(\"-falign-loops\")\t\r\n#pragma GCC optimize(\"-falign-labels\")\r\n#pragma GCC optimize(\"-fdevirtualize\")\r\n#pragma GCC optimize(\"-fcaller-saves\")\r\n#pragma GCC optimize(\"-fcrossjumping\") \r\n#pragma GCC optimize(\"-fthread-jumps\")\r\n#pragma GCC optimize(\"-funroll-loops\")\r\n#pragma GCC optimize(\"-freorder-blocks\")\r\n#pragma GCC optimize(\"-fschedule-insns\")\r\n#pragma GCC optimize(\"inline-functions\")\r\n#pragma GCC optimize(\"-ftree-tail-merge\")\r\n#pragma GCC optimize(\"-fschedule-insns2\")\r\n#pragma GCC optimize(\"-fstrict-aliasing\")\r\n#pragma GCC optimize(\"-falign-functions\")\r\n#pragma GCC optimize(\"-fcse-follow-jumps\")\r\n#pragma GCC optimize(\"-fsched-interblock\")\r\n#pragma GCC optimize(\"-fpartial-inlining\")\r\n#pragma GCC optimize(\"no-stack-protector\")\r\n#pragma GCC optimize(\"-freorder-functions\")\r\n#pragma GCC optimize(\"-findirect-inlining\")\r\n#pragma GCC optimize(\"-fhoist-adjacent-loads\")\r\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\r\n#pragma GCC optimize(\"inline-small-functions\")\r\n#pragma GCC optimize(\"-finline-small-functions\")\r\n#pragma GCC optimize(\"-ftree-switch-conversion\")\r\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\r\n#pragma GCC optimize(\"-fexpensive-optimizations\")\r\n#pragma GCC optimize(\"inline-functions-called-once\")\r\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC target(\"avx,avx2,fma\") \r\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\") \r\n#pragma GCC optimization (\"unroll-loops\")\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nconst long long int MOD = 1e9 + 7;\r\nlong long int dp[201][200001];\r\nlong long int psum[200001];\r\n\r\nint main(void) \r\n{\r\n    cin.tie(0);\r\n    ios::sync_with_stdio(false);\r\n\r\n    int a,b,k,t;\r\n\r\n    cin >> a >> b >> k >> t;\r\n\r\n    int x = a - b;\r\n    x += 100000;\r\n    dp[0][x] = 1;\r\n\r\n    for(int i=0;i<2*t;i++)\r\n    {\r\n        psum[0] = dp[i][0];\r\n        for(int j=1;j<=200000;j++)\r\n        {\r\n            psum[j] = psum[j-1] + dp[i][j];\r\n            psum[j]%=MOD;\r\n        }\r\n\r\n        for(int j=0;j<=200000;j++)\r\n        {\r\n            int l = j - k;\r\n            int r = j + k;\r\n            r = min(r,200000);\r\n            l = max(l,0);\r\n            long long int val = psum[r];\r\n            if(l-1 >= 0) val -= psum[l-1];\r\n            val%=MOD;\r\n            if(val < 0) val += MOD;\r\n            dp[i+1][j] = val;    \r\n        }\r\n    }\r\n\r\n    long long int res = 0;\r\n\r\n    for(int i=100001;i<=200000;i++)\r\n    {\r\n        res += dp[2*t][i];\r\n        res%=MOD;\r\n    }\r\n\r\n    cout << res << '\\n';\r\n\r\n    return 0;\r\n\r\n}"
}