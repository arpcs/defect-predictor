{
    "id": 211970082,
    "contestId": 712,
    "creationTimeSeconds": 1688399037,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 712,
        "index": "D",
        "name": "Memory and Scores",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2200,
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ]
    },
    "author": {
        "contestId": 712,
        "members": [
            {
                "handle": "michaelmonir"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1473525900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 67,
    "timeConsumedMillis": 436,
    "memoryConsumedBytes": 6451200,
    "source": "//#pragma GCC optimize (\"O3\")\n//#pragma GCC optimize (\"unroll-loops\")\n#include<bits/stdc++.h>\n\nusing namespace std;\n#define int long long\n#define f(i, a, b) for (int i = a; i < b; i++)\n\n\nconst int M = 2000 * 100 + 200;\n//const int M = 6;\nint dp[2][M*2+200];\n\nvoid solve(int kkkk, int tttt)\n{\n    int a, b, k, tt; cin >> a >> b >> k >> tt;\n    tt*=2;\n    for (int i = a-b+M; i <= 2*M; i++)\n        dp[0][i] = 1;\n    //dp[0][a-b + M] = 1;\n    int mod = 1e9 + 7;\n    for (int t = 1; t <= tt; t++)\n    {\n        int x = t % 2, y = 1-x;\n        for (int i = 0; i <= 2*M; i++)\n        {\n            int low = max(i - k-1, 0ll), high = min(i+k, 2*M);\n            dp[x][i] = dp[x][i-1] + dp[y][high] - + mod - dp[y][low]; dp[x][i] %= mod;\n        }\n    }\n    int ans = dp[0][2*M] + mod - dp[0][M]; ans %= mod;\n    cout << ans << endl;\n}\n\nvoid fast() { ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0); }\n\nsigned main()\n{\n    //freopen(\"input.txt\",\"rt\",stdin);\n//    freopen(\"output.txt\",\"wt\",stdout);\n    fast();\n\n    int t = 0, i = 0;\n//    int t; cin >> t;\n//    for (int i = 1; i <= t; i++)\n        solve(t, i);\n    return 0;\n}"
}