{
    "id": 197433961,
    "contestId": 712,
    "creationTimeSeconds": 1678824207,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 712,
        "index": "D",
        "name": "Memory and Scores",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2200,
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ]
    },
    "author": {
        "contestId": 712,
        "members": [
            {
                "handle": "RisingUnicornx"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1473525900
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nconst int mod = 1000000007;\r\n\r\nint memory_and_scores(int a, int b, int k, int t) {\r\n    int max_diff = 2 * k * t + 1;\r\n    vector<vector<int>> dp(2, vector<int>(max_diff * 2, 0));\r\n\r\n    int cur = 0;\r\n    dp[cur][max_diff] = 1;\r\n\r\n    for (int i = 0; i < t; ++i) {\r\n        cur ^= 1;\r\n        for (int j = 1; j < max_diff * 2 - 1; ++j) {\r\n            dp[cur][j] = (dp[cur ^ 1][j - 1] + dp[cur ^ 1][j + 1]) % mod;\r\n        }\r\n    }\r\n\r\n    int total_ways = 1;\r\n    for (int i = 0; i < t; ++i) {\r\n        total_ways = (1LL * total_ways * (2 * k + 1)) % mod;\r\n    }\r\n\r\n    int result = 0;\r\n    for (int i = max_diff + b - a + 1; i < max_diff * 2; ++i) {\r\n        result = (result + dp[cur][i]) % mod;\r\n    }\r\n\r\n    return (total_ways - result + mod) % mod;\r\n}\r\n\r\nint main() {\r\n    int a, b, k, t;\r\n    cin >> a >> b >> k >> t;\r\n\r\n    int result = memory_and_scores(a, b, k, t);\r\n    cout << result << endl;\r\n\r\n    return 0;\r\n}\r\n"
}