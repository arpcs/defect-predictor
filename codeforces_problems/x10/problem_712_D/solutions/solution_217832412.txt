{
    "id": 217832412,
    "contestId": 712,
    "creationTimeSeconds": 1691483453,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 712,
        "index": "D",
        "name": "Memory and Scores",
        "type": "PROGRAMMING",
        "points": 2250.0,
        "rating": 2200,
        "tags": [
            "combinatorics",
            "dp",
            "math"
        ]
    },
    "author": {
        "contestId": 712,
        "members": [
            {
                "handle": "bkifhr8"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1473525900
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 67,
    "timeConsumedMillis": 873,
    "memoryConsumedBytes": 171622400,
    "source": "#pragma GCC optimize(\"Ofast,no-stack-protector\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\n#include <bits/stdc++.h>\nusing namespace std;\nvoid file(){\n\tfreopen(\"1.in\", \"r\", stdin);\n\tfreopen(\"1.out\", \"w\", stdout);\n}\nusing ll = long long;\nusing ull = unsigned long long;\nconst int tMax = 105, kMax = 2005, sMax = 2e5 + 105, mod = 1000000007;\nint a, b, k, t;\narray<array<int, sMax * 2>, tMax> dp;\narray<int, sMax * 2> sum, Sum; \nint main(){\n//\tfile();\n\tios::sync_with_stdio(0);\n\tcin >> a >> b >> k >> t;\n\tdp[0][a - b + sMax] = 1;\n\tfor(int i = 1; i <= t; i++){\n\t\tfor(int j = 0; j < sMax * 2; j++){\n\t\t\tsum[j] = dp[i - 1][j];\n\t\t\tSum[j] = 1ll * j * dp[i - 1][j] % mod;\n\t\t}\n\t\tfor(int j = 1; j < sMax * 2; j++){\n\t\t\t(sum[j] += sum[j - 1]) %= mod;\n\t\t\t(Sum[j] += Sum[j - 1]) %= mod;\n\t\t}\n\t\tfor(int s = 1; s < sMax * 2; s++){\n\t\t\t(dp[i][s] += mod - 1ll * dp[i - 1][s] * s % mod) %= mod;\n\t\t\tint l = max(0, s - 2 * k), r = min(2 * sMax - 1, s + 2 * k);\n\t\t\t(dp[i][s] += 1ll * (2 * k + 1 + mod - s) * (sum[r] + mod - (l ? sum[l - 1] : 0)) % mod) %= mod;\n\t\t\tl = max(s - 2 * k, 0);\n\t\t\t(dp[i][s] += (Sum[s] + mod - (l ? Sum[l - 1] : 0)) % mod) %= mod;\n\t\t\tr = min(2 * sMax - 1, s + 2 * k);\n\t\t\t(dp[i][s] += 2ll * s * (sum[r] + mod - (s ? sum[s - 1] : 0)) % mod) %= mod;\n\t\t\t(dp[i][s] += mod - (Sum[r] + mod - (s ? Sum[s - 1] : 0)) % mod) %= mod;\n\t\t}\n\t}\n\tint res = 0;\n\tfor(int i = sMax + 1; i < sMax * 2; i++)\n\t\t(res += dp[t][i]) %= mod;\n\tcout << (res + mod) % mod << \"\\n\";\n\treturn 0;\n}\n\n  \t   \t \t \t   \t\t\t \t\t\t  \t   \t\t\t"
}