{
    "id": 227767800,
    "contestId": 1646,
    "creationTimeSeconds": 1697093637,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1646,
        "index": "D",
        "name": "Weight the Tree",
        "type": "PROGRAMMING",
        "points": 2000.0,
        "rating": 2000,
        "tags": [
            "constructive algorithms",
            "dfs and similar",
            "dp",
            "implementation",
            "trees"
        ]
    },
    "author": {
        "contestId": 1646,
        "members": [
            {
                "handle": "zixiwang"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1646408100
    },
    "programmingLanguage": "GNU C++14",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include<iostream>\r\n#include<cstdio>\r\n#include<algorithm>\r\n#include<vector>\r\n#include<cmath>\r\n#include<cstring>\r\n#define ll long long\r\n#define bug cout<<\"bug\"<<\"\\n\"\r\nusing namespace std;\r\nconst int maxn=2e5+100;\r\ninline int read(){int f=1,x=0;char ch=getchar();\r\n\twhile(ch<'0'||ch>'9'){if(ch=='-') f=-1;ch=getchar();}\r\n\twhile(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}\r\n\treturn f*x;\r\n}\r\nint n;\r\nvector<int> ver[maxn];\r\nint mk[maxn],f[maxn][2];\r\nvoid dfs(int u,int fa){\r\n\tf[u][1]=1;\r\n\tfor(int i=0;i<ver[u].size();i++){\r\n\t\tint v=ver[u][i];\r\n\t\tif(v==fa) continue;\r\n\t\tdfs(v,u);\r\n\t\tf[u][1]+=f[v][0];\r\n\t\tf[u][0]+=max(f[v][1],f[v][0]);\r\n\t}\r\n}\r\nvoid dfs1(int u,int fa,int flag){\r\n\tif(flag==0){\r\n\t\tfor(int i=0;i<ver[u].size();i++){\r\n\t\t\tint v=ver[u][i];\r\n\t\t\tif(v==fa) continue;\r\n\t\t\tif(f[v][0]>f[v][1]) dfs1(v,u,0);\r\n\t\t\telse if(){\r\n\t\t\t\tmk[v]=1;\r\n\t\t\t\tdfs1(v,u,1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse{\r\n\t\tfor(int i=0;i<ver[u].size();i++){\r\n\t\t\tint v=ver[u][i];\r\n\t\t\tif(v==fa) continue;\r\n\t\t\tdfs1(v,u,0);\r\n\t\t}\r\n\t}\r\n}\r\nint main(){\r\n//\tfreopen(\"tree.in\",\"r\",stdin);\r\n//\tfreopen(\"tree.out\",\"w\",stdout);\r\n\tcin.tie(0);\r\n\tcout.tie(0);\r\n\tn=read();\r\n\tfor(int i=1;i<n;i++){\r\n\t\tint x,y;\r\n\t\tcin>>x>>y;\r\n\t\tver[x].push_back(y);\r\n\t\tver[y].push_back(x);\r\n\t}\r\n\tif(n==2){\r\n\t\tcout<<2<<\" \"<<2<<\"\\n\";\r\n\t\tcout<<1<<\" \"<<1<<\"\\n\";\r\n\t\treturn 0; \r\n\t}\r\n\tdfs(1,-1);\r\n\tcout<<max(f[1][1],f[1][0])<<\" \";\r\n\tif(f[1][1]>=f[1][0]){\r\n\t\tdfs1(1,-1,1);\r\n\t\tmk[1]=1;\r\n\t}\r\n\telse dfs1(1,-1,0);\r\n\tint sum=0;\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tif(mk[i]==0) mk[i]=1;\r\n\t\telse mk[i]=ver[i].size();\r\n\t\tsum+=mk[i];\r\n\t}\r\n\tcout<<sum<<\"\\n\";\r\n\tfor(int i=1;i<=n;i++){\r\n\t\tcout<<mk[i]<<\" \";\r\n\t}\r\n\tcout<<\"\\n\";\r\n\treturn 0;\r\n}\r\n"
}