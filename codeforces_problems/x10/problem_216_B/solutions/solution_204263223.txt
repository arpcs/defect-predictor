{
    "id": 204263223,
    "contestId": 216,
    "creationTimeSeconds": 1683036912,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 216,
        "index": "B",
        "name": "Forming Teams",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "implementation"
        ]
    },
    "author": {
        "contestId": 216,
        "members": [
            {
                "handle": "Hany_Jr"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1344958200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 10854400,
    "source": "# pragma GCC optimize(\"Ofast,no-stack-protector,unroll-loops,fast-math,O3\")\r\n# include<bits/stdc++.h>\r\n# include <ext/rope>\r\n# define all(s) (s).begin(), (s).end()\r\n# define debug(x); cout << \"here \" << x << endl;\r\n# define ll long long\r\n# define vc vector\r\n# define OO 1e18\r\nusing namespace __gnu_cxx;\r\nusing namespace std;\r\ntemplate < typename shap = int > istream& operator >> (istream& cin, vc < shap >& v){for (auto& x : v) cin >> x; return cin;}\r\ntemplate < typename shap = int > ostream& operator << (ostream& cout, const vc < shap >& v){for (const shap& x : v) cout << x << ' '; return cout;}\r\nint dx[4] = { 0, 0, 1, -1 };\r\nint dy[4] = { 1, -1, 0, 0 };\r\nstring let = \"abcdefghijklmnopqrstuvwxyz\";\r\nstd::mt19937_64 rng(std::chrono::system_clock::now().time_since_epoch().count());\r\nll random(ll a, ll b) { return a + rng() % (b - a + 1); }\r\nint const N = 4e5 + 10, mod = 1e9 + 7;\r\n\r\nvc<int>g[N];\r\nll bad = 0;\r\nbool vis[N],color[N],canceled[N];\r\nvoid dfs(int node) {\r\n  vis[node] = 1;\r\n  for (auto e : g[node]) {\r\n    if (!vis[e]) {\r\n      vis[e] = 1;\r\n      color[e] = color[node] ^ 1;\r\n      dfs(e);\r\n    } else if (color[e] == color[node] and !canceled[e]) {\r\n      bad++;\r\n      canceled[e] = canceled[node] = 1;\r\n    }\r\n  }\r\n}\r\n\r\ninline void Rczm() {\r\n  int n,m;\r\n  cin >> n >> m;\r\n  for (int i = 0, u, v; i < m; i++) {\r\n    cin >> u >> v;\r\n    g[u].emplace_back(v);\r\n    g[v].emplace_back(u);\r\n  }\r\n  for (int i = 1; i <= n; i++) {\r\n    if (!vis[i]) {\r\n      dfs(i);\r\n    }\r\n  }\r\n  if ((n - bad) & 1)\r\n    bad++;\r\n  cout << bad;\r\n}\r\nvoid inti() {\r\n  ios_base::sync_with_stdio(false), cout.tie(NULL), cin.tie(NULL);\r\n  // freopen(\"collectingofficer.in\",\"r\",stdin),freopen(\"output.txt\", \"w\", stdout);\r\n}\r\nsigned main() {\r\n  inti();\r\n  srand(time(0));\r\n  ll Whirlpool = 1, Test_case = 1;\r\n//  cin >> Whirlpool;\r\n  while (Whirlpool--) {\r\n    //cout << \"Case \" << Test_case++ << \": \";\r\n    Rczm();\r\n  }\r\n}"
}