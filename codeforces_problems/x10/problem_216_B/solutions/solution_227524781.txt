{
    "id": 227524781,
    "contestId": 216,
    "creationTimeSeconds": 1696937343,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 216,
        "index": "B",
        "name": "Forming Teams",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "implementation"
        ]
    },
    "author": {
        "contestId": 216,
        "members": [
            {
                "handle": "bkifhr7"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1344958200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 56,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 3379200,
    "source": "#pragma GCC optimize(3)\n#pragma GCC optimize(2)\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC optimize(\"-falign-jumps\")\n#pragma GCC optimize(\"-falign-loops\")\n#pragma GCC optimize(\"-falign-labels\")\n#pragma GCC optimize(\"-fdevirtualize\")\n#pragma GCC optimize(\"-fcaller-saves\")\n#pragma GCC optimize(\"-fcrossjumping\")\n#pragma GCC optimize(\"-fthread-jumps\")\n#pragma GCC optimize(\"-funroll-loops\")\n#pragma GCC optimize(\"-fwhole-program\")\n#pragma GCC optimize(\"-freorder-blocks\")\n#pragma GCC optimize(\"-fschedule-insns\")\n#pragma GCC optimize(\"inline-functions\")\n#pragma GCC optimize(\"-ftree-tail-merge\")\n#pragma GCC optimize(\"-fschedule-insns2\")\n#pragma GCC optimize(\"-fstrict-aliasing\")\n#pragma GCC optimize(\"-fstrict-overflow\")\n#pragma GCC optimize(\"-falign-functions\")\n#pragma GCC optimize(\"-fcse-skip-blocks\")\n#pragma GCC optimize(\"-fcse-follow-jumps\")\n#pragma GCC optimize(\"-fsched-interblock\")\n#pragma GCC optimize(\"-fpartial-inlining\")\n#pragma GCC optimize(\"no-stack-protector\")\n#pragma GCC optimize(\"-freorder-functions\")\n#pragma GCC optimize(\"-findirect-inlining\")\n#pragma GCC optimize(\"-fhoist-adjacent-loads\")\n#pragma GCC optimize(\"-frerun-cse-after-loop\")\n#pragma GCC optimize(\"inline-small-functions\")\n#pragma GCC optimize(\"-finline-small-functions\")\n#pragma GCC optimize(\"-ftree-switch-conversion\")\n#pragma GCC optimize(\"-foptimize-sibling-calls\")\n#pragma GCC optimize(\"-fexpensive-optimizations\")\n#pragma GCC optimize(\"-funsafe-loop-optimizations\")\n#pragma GCC optimize(\"inline-functions-called-once\")\n#pragma GCC optimize(\"-fdelete-null-pointer-checks\")\n#include<bits/stdc++.h>\n#include<map>\n#include<set>\n#include<list>\n#include<queue>\n#include<deque>\n#include<stack>\n#include<cmath>\n#include<cstdio>\n#include<vector>\n#include<cstring>\n#include<sstream>\n#include<iostream>\n#include<algorithm>\n#define YES puts(\"YES\")\n#define Yes puts(\"Yes\")\n#define NO puts(\"NO\")\n#define No puts(\"No\")\n#define b_i __int128\n#define ll long long\n#define ull unsigned long long\n#define x first\n#define y second\n#define pll pair<ll, ll>\n#define pii pair<int, int>\n#define pdd pair<double, double>\n#define dl double\n#define ld long dl\n#define vc vector\n#define vci vc<int>\n#define vcl vc<ll>\n#define vcd vc<dl>\n#define psb push_back\n#define ppb pop_back\nusing namespace std;\nconst ll md = 998244353;\nconst ll mod = 1e9 + 7;\nconst dl esp = 1e-12;\nconst int inf = 2e9;\nconst ll INF = 2e18;\ninline int read(){\n\tchar c = getchar();\n\tint ans = 0, cnt = 1;\n\twhile(c < '0' || c > '9'){\n\t\tif(c == '-') cnt = -1;\n\t\tc = getchar();\n\t}\n\twhile(c >= '0' && c <= '9'){\n\t\tans *= 10;\n\t\tans += (c - '0');\n\t\tc = getchar();\n\t}\n\treturn ans * cnt;\n}\ninline void write(int x){\n    if(x < 0){\n        putchar('-');\n        x = -x;\n    }\n    if(x > 9) write(x / 10);\n    putchar(x % 10 + '0');\n}\nint m, n, cnt, sum, ans, vis[200005];\nvci g[200005];\nvoid dfs(int u){\n\tvis[u] = 1;\n\tcnt++, sum += g[u].size();\n\tfor(int i = 0; i < g[u].size(); i++){\n\t\tint v = g[u][i];\n\t\tif(!vis[v]) dfs(v);\n\t}\n}\nsigned main(){\n\t//ios::sync_with_stdio(false);\n    //cin.tie(NULL);\n    //cout.tie(NULL);\n    //freopen(\".in\", \"r\", stdin);\n    //freopen(\".out\", \"w\", stdout);\n\tcin >> n >> m;\n\twhile(m--){\n\t\tint a, b;\n\t\tcin >> a >> b;\n\t\tg[a].psb(b);\n\t\tg[b].psb(a);\n\t}\n\tfor(int i = 1; i <= n; i++)\n\t\tif(!vis[i]){\n\t\t\tcnt = sum = 0;\n\t\t\tdfs(i);\n\t\t\tsum /= 2;\n\t\t\tif(sum == cnt && sum % 2) ans++;\n\t\t}\n\tcout << n - (n - ans) / 2 * 2;\n\treturn 0;\n}\n\n\t \t\t\t \t   \t       \t\t   \t\t\t\t\t \t"
}