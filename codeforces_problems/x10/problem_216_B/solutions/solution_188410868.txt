{
    "id": 188410868,
    "contestId": 216,
    "creationTimeSeconds": 1673175001,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 216,
        "index": "B",
        "name": "Forming Teams",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "implementation"
        ]
    },
    "author": {
        "contestId": 216,
        "members": [
            {
                "handle": "AdhamESS"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1344958200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n#define adhamet ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n#define ll long long\r\n#define lld long long double\r\n#define intPair pair<int,int>\r\n#define llPair pair<ll,ll>\r\n#define ldPair pair<lld,lld>\r\n#define F first\r\n#define S second\r\n#define el '\\n'\r\n\r\n\r\nconst int N = 100, oo = 1e9+5;\r\nvector<vector<int>> adj;\r\nvector<int> vis;\r\n\r\nint cnt = 0;\r\nenum status {PATH=0, CYCLE=1};\r\nstatus dfs(int node, int parent)\r\n{\r\n    if(vis[node]) return CYCLE;\r\n    \r\n    vis[node] = 1;\r\n    for(auto child: adj[node]) if(child != parent)\r\n    {\r\n        ++cnt;\r\n\r\n        if(dfs(child,node) == CYCLE) return CYCLE;\r\n    }\r\n    return PATH;\r\n}   \r\n\r\nint main()\r\n{\r\n    /* #ifndef ONLINE_JUDGE\r\n\t    freopen(\"test.txt\", \"rt\", stdin);\r\n    #endif */\r\n\r\n    //adhamet;\r\n\r\n    int n,m;\r\n    cin >> n >> m;\r\n    for(int i = 0; i < m; i++)\r\n    {\r\n        int u,v;\r\n        cin >> u >> v;\r\n        --u; --v;\r\n        adj[u].push_back(v);\r\n        adj[v].push_back(u);\r\n    }    \r\n\r\n    int benched = 0;\r\n    for(int i = 0; i < n; i++) if(!vis[i])\r\n    {\r\n        status solution = dfs(i,-1);\r\n\r\n        if(solution == CYCLE)\r\n            benched += (cnt % 2 == 1);\r\n    }\r\n\r\n    if( (n-benched) % 2 == 1 ) benched++;\r\n    cout << benched;\r\n    return 0;\r\n}"
}