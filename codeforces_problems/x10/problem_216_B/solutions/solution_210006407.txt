{
    "id": 210006407,
    "contestId": 216,
    "creationTimeSeconds": 1687042959,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 216,
        "index": "B",
        "name": "Forming Teams",
        "type": "PROGRAMMING",
        "points": 1500.0,
        "rating": 1700,
        "tags": [
            "dfs and similar",
            "implementation"
        ]
    },
    "author": {
        "contestId": 216,
        "members": [
            {
                "handle": "Abd_Urahman"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1344958200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 3,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <iostream>\r\nusing namespace std;\r\n#include <bits/stdc++.h>\r\ntypedef long long ll ;\r\n#define lup(i,a,b) for (int i=(a) ; i<(b) ; i++)\r\n#define ld(i,a,b) for (int i=(a) ; i>=(b) ; i--)\r\n\r\nll mod=1e9+7 ;\r\nll po(ll n,ll m, ll mod  )\r\n{\r\n    if(!m)\r\n        return 1 ;\r\n    if(m%2==0)\r\n    {\r\n        ll c=po(n,m/2,mod) ;\r\n        c%=mod ;\r\n        return (c*c)%mod ;\r\n    }\r\n    else\r\n    {\r\n        ll y=n%mod ;\r\n        return (y*(po(n,m-1,mod)%mod))%mod ;\r\n    }\r\n}\r\nll multmod(ll a, ll b, ll mod)\r\n{\r\n    ll ans=0 ;\r\n    a%=mod ;\r\n    while(b)\r\n    {\r\n        if(b&1)\r\n            ans=(ans+a)%mod ;\r\n        b>>=1 ;\r\n        a=(a*2)%mod ;\r\n    }\r\n    return ans%mod ;\r\n}\r\nint  m , n ;\r\nint dx[8]= {-1,0,1,0,-1,-1,1,1} ;\r\nint dy[8]= {0,1,0,-1,-1,1,1,-1} ;\r\nbool valid(int i,int j)\r\n{\r\n    return (i>=0 && i<n && j>=0 && j<n ) ;\r\n}\r\n/*\r\nint p[300009] ;\r\nint findparent(int u)\r\n{\r\n    if(p[u]==u)\r\n        return u ;\r\n    return p[u]=findparent(p[u]) ;\r\n\r\n}\r\nvoid join (int u, int v)\r\n{\r\n    u=findparent(u), v=findparent(v) ;\r\n    if(u!=v) p[u]=v ;\r\n    p[u]=v ;\r\n}\r\nvector<vector<int>>v(30000) ;\r\nvector<int> vist(30000) , low(30000)  , tin(30000)  ;\r\nset<int>bridge ;\r\nint tim ;\r\nmap<pair<int,int>,int>ma , no ;\r\nvoid findbridges (int u, int pa)\r\n{\r\n    vist[u]=1 ;\r\n    low[u]=tin[u]=tim++ ;\r\n    for(int i=0 ; i<v[u].size() ; i++)\r\n    {\r\n        if(v[u][i]==pa) continue ;\r\n        if(vist[v[u][i]])\r\n            low[u]=min(tin[v[u][i]],low[u]) ;\r\n        else {\r\n           findbridges(v[u][i],u) ;\r\n           low[u]=min(low[u],low[v[u][i]]) ;\r\n        }\r\n if(low[v[u][i]]>tin[u] && no[{u,v[u][i]}]==0 )\r\n        {\r\n            bridge.insert(ma[{v[u][i],u}]) ;\r\n        }\r\n    }\r\n}\r\nbool cyc ;\r\nvoid findcycle (int u)\r\n{\r\n    if(cyc) return ;\r\n    if(vist[u]==2) return ;\r\n    if(vist[u]==1) cyc=1 ;\r\n    if(!vist[u]) vist[u]=1 ;\r\n    for(int i=0 ; i<v[u].size() ; i++)\r\n    {\r\n        findcycle(v[u][i]) ;\r\n    }\r\n    vist[u]=2 ;\r\n} */\r\nvector<vector<int>>a(103) ;\r\nbool v[109] ,cyc ;\r\nvoid dfs(int i,int j)\r\n{\r\n    v[i]=1 ;\r\n    for(auto k:a[i])\r\n    {\r\n        if(!v[k]) dfs(k,i) ;\r\n        else\r\n        {\r\n            if(k!=j) cyc=1 ;\r\n        }\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    cin.tie(0);\r\n    cin.sync_with_stdio(0);\r\n\r\n    int t=1 , x=1 , y ;\r\n  //  cin>> t ;\r\n    while(t--)\r\n    {\r\n        cin >> n >> m ;\r\n       lup(i,0,m)\r\n       {\r\n          cin >> x >> y ;\r\n          a[x].push_back(y) ;\r\n          a[y].push_back(x) ;\r\n       }\r\n       int c=0 ;\r\n       lup(i,1,n+1)\r\n       {\r\n           if(!v[i])\r\n           {\r\n              cyc=0 ;\r\n              dfs(i,0) ;\r\n              if(cyc) c++ ;\r\n           }\r\n       }\r\n       cout << c ;\r\n\r\n    }\r\n}\r\n"
}