{
    "id": 236130640,
    "contestId": 1776,
    "creationTimeSeconds": 1701912799,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1776,
        "index": "M",
        "name": "Parmigiana With Seafood",
        "type": "PROGRAMMING",
        "rating": 3000,
        "tags": [
            "binary search",
            "dp",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1776,
        "members": [
            {
                "handle": "satyabrat369"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1676804700
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 2048000,
    "source": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <fstream>\r\n \r\n#define pb push_back\r\n#define ll long long int\r\n \r\n#define md1 1000000007\r\n#define md2 998244353 //r=3  upto root of 1<<23\r\n#define md3 1000000009\r\n#define md4 7340033   //r=5  upto root of 1<<20\r\n \r\n#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>\r\n \r\nusing namespace __gnu_pbds;\r\nusing namespace std;\r\n\r\n// ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);\r\n\r\nint n,sz[100005],vtx[100005];\r\nvector<int> adj[100005];\r\nint ans;\r\nvoid dfs(int x,int p,int d){\r\n    sz[x]=1;\r\n    vtx[d]=max(vtx[d],x);\r\n    int xr=0;\r\n    for(int i:adj[x]){\r\n        if(i==p)continue;\r\n        dfs(i,x,d^1);\r\n        sz[x]+=sz[i];\r\n        xr^=(sz[i]&1);\r\n    }\r\n    xr^=((n-sz[x])&1);\r\n    // if(x==4)cout<<xr<<\"\\n\";\r\n    if(adj[x].size()==1 || xr)ans=max(ans,x);\r\n}\r\nint main(){\r\n    cin>>n;\r\n    for(int i=1,u,v;i<n;i++){\r\n        cin>>u>>v;\r\n        adj[u].push_back(v);\r\n        adj[v].push_back(u);\r\n    }\r\n    dfs(1,-1,0);\r\n    ans=max(ans,min(vtx[0],vtx[1]));\r\n    cout<<ans;\r\n    return 0;\r\n}"
}