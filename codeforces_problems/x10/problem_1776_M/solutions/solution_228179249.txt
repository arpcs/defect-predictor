{
    "id": 228179249,
    "contestId": 1776,
    "creationTimeSeconds": 1697291824,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 1776,
        "index": "M",
        "name": "Parmigiana With Seafood",
        "type": "PROGRAMMING",
        "rating": 3000,
        "tags": [
            "binary search",
            "dp",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1776,
        "members": [
            {
                "handle": "nguyenquocthinhhung"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1676804700
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 31,
    "memoryConsumedBytes": 7065600,
    "source": "#include<algorithm>\r\n#include<iostream>\r\n#include<cstring>\r\n#include<cstdio>\r\n#include<cmath>\r\nusing namespace std;\r\n\r\nchar buf[2000000],*p1=buf,*p2=buf;\r\ninline char getc(){return p1==p2&&(p2=(p1=buf)+fread(buf,1,2000000,stdin),p1==p2)?EOF:*p1++;}\r\ninline int read(){\r\n\tregister int num=0;register char ch=getc();\r\n\twhile(ch<0x30)ch=getc();\r\n\twhile(ch>0x2f){num=(num<<3)+(num<<1)+(ch^0x30);ch=getc();}\r\n\treturn num;\r\n}\r\nconst int MAXN=1e5+5;\r\nint n,deg[MAXN],fa[MAXN];\r\nint tot=0,head[MAXN];\r\nstruct Edge{int to,nxt;Edge(){}Edge(int to,int nxt):to(to),nxt(nxt){}}edge[MAXN<<1];\r\ninline void Add(int u,int v){edge[++tot]=Edge(v,head[u]);head[u]=tot;deg[u]++;}\r\n\r\nbool col[MAXN],vis[MAXN];\r\nvoid dfs(int u,int fath){\r\n\tfa[u]=fath;col[u]=!col[fath];\r\n\tfor(int i=head[u];i;i=edge[i].nxt){\r\n\t\tint v=edge[i].to;if(v^fath)dfs(v,u);\r\n\t}\r\n}\r\nint cnt[MAXN];\r\ninline bool check(int u){\r\n\tif(deg[u]==1||!col[u])return true;// leaf or I\r\n\tint p=u;bool now=0;\r\n\twhile(p&&!vis[p]){\r\n\t\tvis[p]=true;p=fa[p];now^=1;\r\n\t\tif(!now)cnt[p]++;\r\n\t}\r\n\treturn(p==n&&cnt[p]>=3)||(p^n&&cnt[p]>=2&&col[p]);// II x,y,z or x,y,n\r\n}\r\nint main(){\r\n\tn=read();if(n&1^1){printf(\"%d\\n\",n);return 0;}\r\n\tfor(int i=1,u,v;i<n;i++){u=read();v=read();Add(u,v);Add(v,u);}\r\n\tdfs(n,0);\r\n\tfor(int i=n;i>=1;i--)if(check(i)){printf(\"%d\\n\",i);break;}\r\n\treturn 0;\r\n}\r\n  \t\t \t\t\t\t\t\t  \t \t\t \t  \t  \t\t\t\t"
}