{
    "id": 224652422,
    "contestId": 1776,
    "creationTimeSeconds": 1695404436,
    "relativeTimeSeconds": 12756,
    "problem": {
        "contestId": 1776,
        "index": "M",
        "name": "Parmigiana With Seafood",
        "type": "PROGRAMMING",
        "rating": 3000,
        "tags": [
            "binary search",
            "dp",
            "greedy",
            "trees"
        ]
    },
    "author": {
        "contestId": 1776,
        "members": [
            {
                "handle": "peti1234"
            }
        ],
        "participantType": "VIRTUAL",
        "ghost": false,
        "startTimeSeconds": 1695391680
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 26,
    "timeConsumedMillis": 93,
    "memoryConsumedBytes": 5324800,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\nconst int c=100005;\r\nint n, fel[c], szint[c], cnt, level, db[c], ans;\r\nvector<int> sz[c];\r\nbool v[c], kesz[c];\r\nvoid dfs(int a) {\r\n    v[a]=true;\r\n    for (auto x:sz[a]) {\r\n        if (!v[x]) {\r\n            fel[x]=a;\r\n            szint[x]=szint[a]+1;\r\n            dfs(x);\r\n        }\r\n    }\r\n}\r\nvoid add(int a) {\r\n    if (db[a]==1) {\r\n        level--;\r\n    }\r\n    db[a]++;\r\n    if (db[a]==1) {\r\n        level++;\r\n    }\r\n}\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin >> n;\r\n    for (int i=1; i<n; i++) {\r\n        int a, b;\r\n        cin >> a >> b;\r\n        sz[a].push_back(b), sz[b].push_back(a);\r\n    }\r\n    dfs(n);\r\n    if (n%2==0 || sz[n].size()==1) {\r\n        cout << n << \"\\n\";\r\n        return 0;\r\n    }\r\n    kesz[n]=1;\r\n    cnt=1;\r\n    for (int i=n-1; i>=1; i--) {\r\n        for (auto x:sz[i]) {\r\n            if (x>i) {\r\n                cout << i << \"\\n\";\r\n                exit(0);\r\n            }\r\n        }\r\n        int pos=i;\r\n        while (!kesz[pos]) {\r\n            add(pos), add(fel[pos]);\r\n            kesz[pos]=1;\r\n            cnt++;\r\n            pos=fel[pos];\r\n        }\r\n        if ((cnt+level)%2==0 || sz[i].size()==1 || szint[i]%2) {\r\n            cout << i << \"\\n\";\r\n            exit(0);\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n/*\r\n9\r\n1 8 8 2 2 3 3 7 7 4 4 5 5 9 9 6\r\n*/\r\n/*\r\n9\r\n1 9 9 2\r\n3 8 8 2\r\n2 6 6 5 5 7 7 4\r\n*/\r\n"
}