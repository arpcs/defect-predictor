{
    "id": 236123379,
    "contestId": 4,
    "creationTimeSeconds": 1701899642,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 4,
        "index": "C",
        "name": "Registration System",
        "type": "PROGRAMMING",
        "rating": 1300,
        "tags": [
            "data structures",
            "hashing",
            "implementation"
        ]
    },
    "author": {
        "contestId": 4,
        "members": [
            {
                "handle": "vjudge1"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1268395200
    },
    "programmingLanguage": "Java 17",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 25,
    "timeConsumedMillis": 1496,
    "memoryConsumedBytes": 614400,
    "source": "import javax.swing.text.html.ListView;\nimport java.util.*;\n\npublic class Main {\n    private static boolean isPrime(long number) {\n        if (number < 2) {\n            return false;\n        }\n        if (number == 2 || number == 3) {\n            return true;\n        }\n        if (number % 2 == 0 || number % 3 == 0) {\n            return false;\n        }\n        for (long i = 5; i * i <= number; i += 6) {\n            if (number % i == 0 || number % (i + 2) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // nlog(log(n))\n    // n * sqrt(n)\n    private static boolean[] sieve(int n) {\n        boolean[] arr = new boolean[n + 1];\n        Arrays.fill(arr, true);\n        arr[0] = false;\n        arr[1] = false;\n        for (int i = 2; i * i <= n; i++) {\n            if (arr[i]) {\n                for (int j = 2 * i; j <= n; j += i) {\n                    arr[j] = false;\n                }\n            }\n        }\n        return arr;\n    }\n\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        var db = new HashMap<String, Integer>();\n        for (int i = 0; i < n; i++) {\n            var word = scanner.next();\n            if (!db.containsKey(word)) {\n                System.out.println(\"OK\");\n                db.put(word, 0);\n            } else {\n                db.put(word, db.get(word) + 1);\n                System.out.println(word+db.get(word));\n            }\n        }\n    }\n}\n\n \t \t\t \t     \t\t   \t      \t \t\t \t\t"
}