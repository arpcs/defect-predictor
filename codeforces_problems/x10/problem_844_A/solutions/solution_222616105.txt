{
    "id": 222616105,
    "contestId": 844,
    "creationTimeSeconds": 1694273604,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 844,
        "index": "A",
        "name": "Diversity",
        "type": "PROGRAMMING",
        "points": 500.0,
        "rating": 1000,
        "tags": [
            "greedy",
            "implementation",
            "strings"
        ]
    },
    "author": {
        "contestId": 844,
        "members": [
            {
                "handle": "vjudge5"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1503592500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 5,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 2560000,
    "source": "#include<bits/stdc++.h>\n#define ll long long\n#define ui unsigned int\n#define ull unsigned long long\n#define pb push_back\n#define INF 100000000000000000\n#define vec vector <ll>\n#define YES cout << \"YES\\n\";\n#define NO cout << \"NO\\n\";\n#define yes cout << \"yes\\n\";\n#define no cout << \"no\\n\";\n#define Yes cout << \"Yes\\n\";\n#define No cout << \"No\\n\";\n#define nl cout << \"\\n\";\n#define takearr ll arr[size]\n#define takea ll a; cin >> a\n#define takeb ll b; cin >> b\n#define takec ll c; cin >> c\n#define taken ll n; cin >> n\n#define takesize ll size; cin >> size\n#define loopin(a,b) ll arr[size]; for(int i = a; i<b; i++) cin >> arr[i]\n#define loopins(a,b) ll store = 0; ll arr[size]; for(int i = a; i<b; i++) {cin >> arr[i]; store+=arr[i];}\n#define loopout(a,b) for(int i = a; i<b; i++) cout << arr[i] << \" \"\n#define fastio ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)\nusing namespace std;\nconst int N = 1e5+10;\n\nbool isPrime(ll n){\n    if (n <= 1)\n        return false;\n    if (n <= 3)\n        return true;\n\n    if (n % 2 == 0 || n % 3 == 0)\n        return false;\n\n    for (ll i = 5; i * i <= n; i = i + 6)\n        if (n % i == 0 || n % (i + 2) == 0)\n            return false;\n\n    return true;\n}\n\n//vector <vector<ll>> grid(n, vector<ll>(m)); = 2D vec\n//const vector<vector<ll>>& grid = 2D vector recursive memeory address\n//cout << fixed << setprecision(8);\n\nvector <int> arr[N];\nbool visited[N];\nint a, b;\n\nvoid bfs (int n){\n\n    queue <int> q;\n    q.push(n);\n    visited[n] = 1;\n    \n    while(!q.empty()){\n\n        int u = q.front();\n        q.pop();\n\n        for(int i = 0; i<arr[u].size(); i++){\n            if(visited[arr[u][i]] == 0){\n                q.push(arr[u][i]);\n                visited[arr[u][i]] = 1;\n            }\n        }\n    }\n}\n\nvoid clearfunc(){\n    memset(visited, 0, sizeof(visited));\n    for (int i = 0; i < N; i++) {\n        arr[i].clear();\n    }\n}\n\nint main(){\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n    int t;\n    //cin >> t;\n    t = 1;\n\n    while(t--){\n        string s;\n        cin >> s;\n\n        takesize;\n\n        if(size>s.size()){\n            cout << \"impossible\\n\";\n            continue;\n        }\n\n        bool arr[200] = {};\n        sort(s.begin(), s.end());\n        bool flag = 0;\n\n        int count = 0;\n        for(int i = 0; i<s.size(); i++){\n            if(arr[int(s[i])] == true and int(s[i])>=97 and int(s[i])<=122){\n                count++;\n            }\n            if(arr[int(s[i])] == true and int(s[i])<=97){\n                flag = 1;\n                break;\n            }\n            else{\n                arr[int(s[i])] = true;\n            }\n        }\n        if(flag){\n            cout << \"impossible\\n\";\n            continue;\n        }\n\n        cout << count << \"\\n\";\n\n        \n        \n    \n    }   \n\n\n}\n\t  \t\t \t\t  \t\t  \t \t\t  \t \t  \t \t  \t"
}