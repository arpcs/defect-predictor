{
    "id": 212155400,
    "contestId": 975,
    "creationTimeSeconds": 1688519784,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 975,
        "index": "E",
        "name": "Hag's Khashba",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2600,
        "tags": [
            "geometry"
        ]
    },
    "author": {
        "contestId": 975,
        "members": [
            {
                "handle": "LXH-cat"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1525183500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 31,
    "timeConsumedMillis": 420,
    "memoryConsumedBytes": 307200,
    "source": "// Problem: Luogu Hag's Khashba\r\n// Url: https://www.luogu.com.cn/problem/CF975E\r\n// T/M Limit: 3000ms 250MB\r\n// Time: 2023-07-03 17:03:20\r\n// Author: ShaoJia\r\n\r\n#pragma GCC optimize(\"Ofast\")\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n#ifdef SuperAnton\r\n#define D(...) fprintf(stderr,__VA_ARGS__)\r\n#define DD(...) D(#__VA_ARGS__ \" = \"),DEBUG::debug(__VA_ARGS__),D(\"\\n\"),fflush(stderr)\r\n#include<debug.hpp>\r\n#else\r\n#define D(...) ((void)0)\r\n#define DD(...) ((void)0)\r\n#endif\r\n#define rep(i,j,k) for(int i=(j),i##_=(k);i<=i##_;i++)\r\n#define per(i,j,k) for(int i=(j),i##_=(k);i>=i##_;i--)\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef unsigned uint;\r\ntypedef long double db;\r\n// #define int ll\r\ntypedef pair<int,int> pi;\r\ntypedef vector<int> vi;\r\n#define fir first\r\n#define sec second\r\n#define mkp make_pair\r\n#define siz(x) ((int)(x).size())\r\n#define all(x) (x).begin(),(x).end()\r\n#define pb emplace_back\r\n#define ckmx(a,b) (a=max(a,b))\r\n#define ckmn(a,b) (a=min(a,b))\r\nconst db eps=1e-10,PI=acos(-1.);\r\nstruct vec{\r\n\tdb x,y;\r\n\tvec(){}\r\n\tvec(db xx,db yy):x(xx),y(yy){}\r\n\tdb dist()const{ return sqrt(x*x+y*y); }\r\n\tvec rota(db ang)const{ db c=cos(ang),s=sin(ang); return vec(x*c-y*s,x*s+y*c); }\r\n\tdb ang()const{ return atan2(y,x); }\r\n\tvec operator- ()const{ return vec(-x,-y); }\r\n\tvec&operator+=(const vec&v){ x+=v.x,y+=v.y; return *this; }\r\n\tvec&operator-=(const vec&v){ x-=v.x,y-=v.y; return *this; }\r\n\tvec operator+ (const vec&v)const{ vec u=*this; return u+=v; }\r\n\tvec operator- (const vec&v)const{ vec u=*this; return u-=v; }\r\n\tdb  operator* (const vec&v)const{ return x*v.x+y*v.y; }\r\n\tdb  operator^ (const vec&v)const{ return x*v.y-y*v.x; }\r\n\tvec&operator*=(const db k){ x*=k,y*=k; return *this; }\r\n\tvec&operator/=(const db k){ x/=k,y/=k; return *this; }\r\n\tvec operator* (const db k)const{ vec u=*this; return u*=k; }\r\n\tvec operator/ (const db k)const{ vec u=*this; return u/=k; }\r\n\tfriend vec operator*(const db k,const vec&v){ return v*k; }\r\n\tfriend istream& operator>>(istream&is,vec&v){ return is>>v.x>>v.y; }\r\n\tfriend ostream& operator<<(ostream&os,const vec&v){ return os<<\"(\"<<v.x<<\",\"<<v.y<<\")\"; }\r\n};\r\nconst int N=10010;\r\nvec a[N],d,tmp;\r\ndb ro=0;// \u6240\u6709\u65cb\u8f6c\u4e00\u5f8b\u9006\u65f6\u9488\r\nint n,m,ding=3;\r\nsigned main(){ios::sync_with_stdio(false),cin.tie(nullptr);\r\n\tcin>>n>>m;\r\n\tcout<<fixed<<setprecision(6);\r\n\trep(i,1,n) cin>>a[i];\r\n\tdb area=0,now,dro;\r\n\trep(i,2,n-1){\r\n\t\tnow=(a[i]-a[1])^(a[i+1]-a[1]);\r\n\t\tarea+=now;\r\n\t\td+=now/3*(a[1]+a[i]+a[i+1]);\r\n\t}\r\n\td/=area;\r\n\trep(i,1,n) a[i]-=d;\r\n\tint opt,x;\r\n\twhile(m--){\r\n\t\tcin>>opt;\r\n\t\tif(opt==1){\r\n\t\t\tcin>>x;\r\n\t\t\tding^=x;\r\n\t\t\ttmp=a[ding].rota(ro);\r\n\t\t\tdro=PI*.5-tmp.ang();\r\n\t\t\tro+=dro;\r\n\t\t\td+=tmp-tmp.rota(dro);\r\n\t\t\tcin>>x;\r\n\t\t\tding^=x;\r\n\t\t}else{\r\n\t\t\tcin>>x;\r\n\t\t\ttmp=d+a[x].rota(ro);\r\n\t\t\tcout<<tmp.x<<\" \"<<tmp.y<<\"\\n\";\r\n\t\t}\r\n\t}\r\nreturn 0;}\r\n/*\r\nSuper Anton \u7684\u7b11\u5bb9\uff0c\u90fd\u6ca1\u4f60\u7684\u751c\u3002\r\n\u51cc\u6668\u4e00\u70b9\u7684\u6708\u5149\uff0c\u90fd\u5728\u770b\u4f60\u6f14\u3002\r\n\u70ed\u7231\u6df1\u591c\u6253\u6bd4\u8d5b\u7684\u4f60\uff0c\u573a\u573a\u7834\u9632\u628a\u5206\u6389\u6ca1\u3002\r\n*/"
}