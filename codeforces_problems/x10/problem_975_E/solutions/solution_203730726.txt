{
    "id": 203730726,
    "contestId": 975,
    "creationTimeSeconds": 1682621983,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 975,
        "index": "E",
        "name": "Hag's Khashba",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2600,
        "tags": [
            "geometry"
        ]
    },
    "author": {
        "contestId": 975,
        "members": [
            {
                "handle": "sleep__"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1525183500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 15,
    "memoryConsumedBytes": 0,
    "source": "/* Generated by powerful Codeforces Tool\r\n * Author: sleep__\r\n * Time: 2023-04-27 22:35:32\r\n**/\r\n#include<iostream>\r\n#include<algorithm>\r\n#include<cmath>\r\n#include<vector>\r\n#include<utility>\r\nusing namespace std;\r\nusing ll=long long;\r\nconst long double eps=1e-7;\r\nconst long double pi=acos(-1);\r\nstruct P{\r\n    long double x,y;\r\n    P(){x=0;y=0;};\r\n    P(long double _x,long double _y){\r\n        x=_x; y=_y;\r\n    }\r\n    P operator -(const P &p){\r\n        auto [xp,yp]=p;\r\n        return P(x-xp,y-yp);\r\n    }\r\n    P operator +(const P &p){\r\n        auto [xp,yp]=p;\r\n        return P(x+xp,y+yp);\r\n    }\r\n    P operator *(long double k){\r\n        return P(x*k,y*k);\r\n    }\r\n    P operator /(long double k){\r\n        return P(x/k,y/k);\r\n    }\r\n    long double operator *(const P &p){\r\n        auto [xp,yp]=p;\r\n        return x*yp-xp*y;\r\n    }\r\n    long double len(){\r\n        return sqrt(x*x+y*y);\r\n    }\r\n};\r\nstruct T{\r\n    P a,b,c;\r\n    T(P _a,P _b,P _c){\r\n        a=_a; b=_b; c=_c;\r\n    }\r\n    long double S(){\r\n        P x=b-a,y=c-a;\r\n        return abs(x*y/2);\r\n    }\r\n    P mid(){return P(a.x+b.x+c.x,a.y+b.y+c.y)/3;};\r\n};\r\nvoid solve(){\r\n    int n,q;\r\n    cin>>n>>q;\r\n    vector<P> p(n);\r\n    for(auto &[x,y]:p)\r\n        cin>>x>>y;\r\n    long double S=0;\r\n    P mid(0,0);\r\n    {   // get mid\r\n        for(int i=2;i<n;i++){\r\n            T t(p[0],p[i-1],p[i]);\r\n            long double s=t.S();\r\n            mid=mid*S/(S+s)+t.mid()*s/(S+s);\r\n            // printf(\"# %f %f\\n\",mid().x,mid().y);\r\n        }\r\n    }\r\n    // printf(\"# %f %f\\n\",mid.x,mid.y);\r\n    for(auto &v:p) v=v-mid;\r\n    // for(auto [x,y]:p)\r\n    //     printf(\"%f %f\\n\",x,y);\r\n    // return;\r\n    int p1=0,p2=1;\r\n    long double rot=0;\r\n    auto get=[&](int v){\r\n        auto [x,y]=p[v];\r\n        long double alp;\r\n        if(abs(x)<eps) alp=y>0?pi/2:-pi/2;\r\n        else{\r\n            alp=atan(y/x);\r\n            if(x<eps) alp+=pi; \r\n        }\r\n        long double len=sqrt(x*x+y*y);\r\n        alp+=rot;\r\n        return P(cos(alp)*len,sin(alp)*len)+mid;\r\n    };\r\n    for(int i=0,f,t,v,opt;i<q;i++){\r\n        cin>>opt;\r\n        if(opt==1){\r\n            cin>>f>>t; --f; --t;\r\n            if(f==p1) swap(p1,p2);\r\n            p2=t;\r\n            auto P1=get(p1);\r\n            // return;\r\n            auto [px,py]=P1;\r\n            // printf(\"$$ %f %f\\n\",px,py);\r\n            long double len=(P1-mid).len();\r\n            auto [mx,my]=mid-P1;\r\n            long double alp;\r\n            if(abs(mx)<eps) alp=my>0?pi/2:-pi/2;\r\n            else{\r\n                alp=atan(my/mx);\r\n                if(mx<eps) alp+=pi; \r\n            }\r\n            mid=P(px,py-len);\r\n            rot+=pi*1.5-alp;\r\n            // printf(\"$$ %f %f\\n\",180*alp/pi,len);\r\n        }\r\n        else{\r\n            cin>>v;\r\n            auto [nx,ny]=get(v-1);\r\n            printf(\"%.5Lf %.5Lf\\n\",nx,ny);\r\n        }\r\n    }\r\n}\r\nint main(){\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    int t=1;\r\n    // cin>>t;\r\n    while(t--) solve();\r\n    // while(t--) cout<<solve()<<'\\n';\r\n    return 0;\r\n}"
}