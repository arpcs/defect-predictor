{
    "id": 233871837,
    "contestId": 238,
    "creationTimeSeconds": 1700722558,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 238,
        "index": "E",
        "name": "Meeting Her",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 238,
        "members": [
            {
                "handle": "a_l_i_r_e_z_a"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1352044800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 4,
    "timeConsumedMillis": 30,
    "memoryConsumedBytes": 0,
    "source": "// In the name of Allah\r\n// Khodaya khodet komak kon\r\n// Hope is last to die\r\n// Let's go\r\n\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef pair<ll, ll> pll;\r\n\r\n#define pb push_back\r\n#define S second\r\n#define F first\r\n#define mp make_pair\r\n#define smax(x, y) (x) = max((x), (y))\r\n#define smin(x, y) (x) = min((x), (y))\r\n#define all(x) (x).begin(), (x).end()\r\n#define set_dec(x) cout << fixed << setprecision(x);\r\n#define kill(x) cout << x << endl, exit(0)\r\n#define sz(x) ((int)(x).size())\r\n#define file_io freopen(\"input.txt\", \"r\", stdin); freopen(\"output.txt\", \"w\", stdout);\r\n\r\nconst ll maxn = 100 + 5;\r\nconst ll inf = 1e9 + 7;\r\nll d[maxn], par[maxn], s[maxn], t[maxn], n, m, source, sink, k, bade;\r\nvector<ll> adj[maxn], from[maxn];\r\nbool mark[maxn];\r\npll ed[maxn];\r\n\r\nvoid dij(ll v){\r\n    memset(d, 63, sizeof d);\r\n    memset(par, -1, sizeof par);\r\n    memset(mark, 0, sizeof mark);\r\n    d[v] = 0;\r\n    for(int _ = 0; _ < n; _++){\r\n        v = -1;\r\n        for(int i = 0; i < n; i++){\r\n            if(!mark[i] && (v == -1 || d[i] < d[v])){\r\n                v = i;\r\n            }\r\n        }\r\n        if(d[v] > inf) break;\r\n        mark[v] = 1;\r\n        for(auto e: adj[v]){\r\n            if(e == bade) continue;\r\n            ll u = ed[e].S;\r\n            if(d[u] > d[v] + 1){\r\n                d[u] = d[v] + 1;\r\n                par[u] = e;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvoid find(){\r\n    for(int i = 0; i < k; i++){\r\n        bade = -1;\r\n        dij(s[i]);\r\n        if(d[t[i]] > inf) continue;\r\n        vector<ll> path;\r\n        ll cur = t[i];\r\n        while(cur != s[i]){\r\n            ll e = par[cur];\r\n            path.pb(e);\r\n            cur = ed[e].F;\r\n        }\r\n        reverse(all(path));\r\n        ll dist = d[t[i]];\r\n        vector<ll> good;\r\n        for(auto e: path){\r\n            bade = e;\r\n            dij(s[i]);\r\n            if(d[t[i]] != dist) good.pb(e);\r\n        }\r\n        // cout << i << '\\n' << \"%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\";\r\n        for(int j = 0; j < sz(good); j++){\r\n            ll e = good[j];\r\n            ll u = ed[e].F, v = ed[e].S;\r\n            // cout << u << ' ' << v << '\\n';\r\n            from[s[i]].pb(u);\r\n            from[s[i]].pb(v);\r\n            from[u].pb(t[i]);\r\n            from[v].pb(t[i]);\r\n            from[u].pb(v);\r\n            for(int h = j + 1; h < sz(good); h++){\r\n                ll ef = good[h];\r\n                ll x = ed[ef].F, y = ed[ef].S;\r\n                from[u].pb(x);\r\n                from[u].pb(y);\r\n                from[v].pb(y);\r\n                from[v].pb(x);\r\n            }\r\n        }\r\n        // cout << \"%%%%%%%%%%%%%%%%%%%%%%%%%%\\n\";\r\n        from[s[i]].pb(t[i]);\r\n    }\r\n}\r\n\r\nvoid solve(){\r\n    memset(d, 63, sizeof d);\r\n    memset(mark, 0, sizeof mark);\r\n    d[source] = 0;\r\n    for(int _ = 0; _ < n; _++){\r\n        ll v = -1;\r\n        for(int i = 0; i < n; i++){\r\n            if(!mark[i] && (v == -1 || d[i] < d[v])){\r\n                v = i;\r\n            }\r\n        }\r\n        if(d[v] > inf) break;\r\n        mark[v] = 1;\r\n        for(auto u: from[v]){\r\n            if(d[u] > d[v] + 1){\r\n                d[u] = d[v] + 1;\r\n            }\r\n        }\r\n    }\r\n    cout << (d[sink] > inf ? -1 : d[sink]);\r\n}\r\n\r\nint32_t main()\r\n{\r\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n    \r\n    cin >> n >> m >> source >> sink;\r\n    source--, sink--;\r\n    for(int i = 0; i < m; i++){\r\n        ll u, v; cin >> u >> v;\r\n        u--, v--;\r\n        adj[u].pb(i);\r\n        ed[i] = mp(u, v);\r\n    }\r\n    cin >> k;\r\n    for(int i = 0; i < k; i++){\r\n        cin >> s[i] >> t[i];\r\n        s[i]--, t[i]--;\r\n    }\r\n\r\n    find();\r\n    solve();\r\n\r\n    // for(int i = 0; i < n; i++){\r\n    //     for(auto u: from[i]) cout << u << ' ';\r\n    //     cout << '\\n';\r\n    // }\r\n\r\n    return 0;\r\n}\r\n"
}