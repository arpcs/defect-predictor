{
    "id": 228741103,
    "contestId": 238,
    "creationTimeSeconds": 1697683657,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 238,
        "index": "E",
        "name": "Meeting Her",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 238,
        "members": [
            {
                "handle": "lyx123886a123886"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1352044800
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 186,
    "memoryConsumedBytes": 102400,
    "source": "#include<bits/stdc++.h>\r\nusing namespace std;\r\nint read() {\r\n\tchar ch=getchar();int res=0,fl=1;\r\n\twhile(ch<'0'||ch>'9') {if(ch=='-') fl=-1;ch=getchar();}\r\n\twhile(ch>='0'&&ch<='9') {res=res*10+ch-'0';ch=getchar();}\r\n\treturn res*fl;\r\n}\r\ninline void chkmin(int &x,int T) {x=(x<T)?x:T;}\r\nconst int N=105;\r\nconst int inf=100000;\r\nstruct edge {\r\n\tint u,v;\r\n}e[N*N];\r\nint F[N][N],n,m,tot,S,T;\r\nvoid Floyd(int *ban) {\r\n\tmemset(F,60,sizeof(F));\r\n\tfor(int i=1;i<=n;++i) if(!ban[i]) F[i][i]=0;//!!may be:(2->1) for 1 !!\r\n\tfor(int i=1;i<=m;++i) if(!ban[e[i].u]&&!ban[e[i].v]) F[e[i].u][e[i].v]=1;\r\n\tfor(int k=1;k<=n;++k)\r\n\t\tfor(int i=1;i<=n;++i)\r\n\t\t\tfor(int j=1;j<=n;++j)\t\r\n\t\t\t\tchkmin(F[i][j],F[i][k]+F[k][j]);\r\n}\r\n\r\nstruct path {\r\n\tint s,t,mi;\r\n}p[N];\r\nint ban[N];\r\n\r\nstruct trans {\r\n\tint v,lim;\r\n};vector<trans> G[N];\r\nvoid init ( ) {\r\n\tn=read(),m=read(),S=read(),T=read();\r\n\tfor(int i=1;i<=m;++i) e[i].u=read(),e[i].v=read();\r\n\t\r\n\tFloyd(ban);\r\n\tint k=read();\r\n\twhile(k--) {\r\n\t\tint s=read(),t=read();\r\n\t\tif(F[s][t]<inf) {//only connected\r\n\t\t\t++tot;\r\n\t\t\tp[tot].s=s,p[tot].t=t,p[tot].mi=F[s][t];\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor(int goal=1;goal<=n;++goal) {\r\n\t\tmemset(ban,0,sizeof(ban));ban[goal]=1;Floyd(ban);\r\n\t\tfor(int i=1;i<=tot;++i) if(F[p[i].s][p[i].t]>p[i].mi) {//strictly worse\r\n\t\t\tG[goal].push_back((trans) {p[i].t,0} );//to be continued\r\n\t\t\t//printf(\"(%d)\",i);\r\n\t\t}\r\n\t}\r\n\t\r\n\tmemset(ban,0,sizeof(ban));Floyd(ban);\r\n\tfor(int u=1;u<=n;++u) {\r\n\t\tfor(int i=0;i<G[u].size();++i) G[u][i].lim=F[u][G[u][i].v];\r\n\t}  \r\n\t//for(trans t:G[1]) printf(\"(%d,%d)\\n\",t.v,t.lim);\r\n}\r\n\r\nvoid bfs() {\r\n\tmemset(ban,0,sizeof(ban));\r\n\tban[T]=1;\r\n\tfor(int fl=1,ans=1;fl;ans++) {\r\n\t\tfl=0;Floyd(ban);\r\n\t\tfor(int u=1;u<=n;++u) if(!ban[u]) {\r\n\t\t\tfor(trans t:G[u]) if(F[u][t.v]>t.lim) {\r\n\t\t\t\tban[u]=1;fl=1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(ban[S]) {\r\n\t\t\tprintf(\"%d\\n\",ans);\r\n\t\t\treturn ;\r\n\t\t}\r\n\t}\r\n\tprintf(\"%d\",-1);\r\n\treturn ;\r\n}\r\nint main() {\r\n//\tfreopen(\".in\",\"r\",stdin);\r\n//\tfreopen(\".out\",\"w\",stdout);\r\n\tinit() ;\r\n\tbfs() ;\r\n\treturn 0;\r\n}"
}