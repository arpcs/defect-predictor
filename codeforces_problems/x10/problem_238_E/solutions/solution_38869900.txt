{
    "id": 38869900,
    "contestId": 238,
    "creationTimeSeconds": 1527903533,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 238,
        "index": "E",
        "name": "Meeting Her",
        "type": "PROGRAMMING",
        "points": 2500.0,
        "rating": 2600,
        "tags": [
            "dp",
            "graphs",
            "shortest paths"
        ]
    },
    "author": {
        "contestId": 238,
        "members": [
            {
                "handle": "parsaasaeii0016"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1352044800
    },
    "programmingLanguage": "GNU C++11",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 51,
    "timeConsumedMillis": 62,
    "memoryConsumedBytes": 3686400,
    "source": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int MAXN = 105, INF = 1e8;\n\nint n, m, start, fin, d[MAXN][MAXN], en[MAXN];\nint cnt[MAXN], dp[MAXN][MAXN];\nbool has[MAXN][MAXN], must[MAXN][MAXN];\nvector<int> out[MAXN];\n\n\nint main() {\n\tios_base::sync_with_stdio (false);\n\tcin >> n >> m >> start >> fin;\n\tmemset (d, 63, sizeof d);\n\tfor (int i = 1; i <= n; ++i)\n\t\td[i][i] = 0;\n\twhile(m--) {\n\t\tint u, v;\n\t\tcin >> u >> v;\n\t\tout[u].push_back(v);\n\t\td[u][v] = 1;\n\t}\n\n\tfor (int k = 1; k <= n; ++k)\n\t\tfor (int i = 1; i <= n; ++i)\n\t\t\tfor (int j = 1; j <= n; ++j)\n\t\t\t\tif (d[i][k] + d[k][j] < d[i][j])\n\t\t\t\t\td[i][j] = d[i][k] + d[k][j];\n\tint a, b, k;\n\tcin >> k;\n\tfor (int i = 1; i <= k; ++i) {\n\t\tcin >> a >> b;\n\t\tif (d[a][b] > INF) \n\t\t\tcontinue;\n\t\tmemset(cnt, 0, sizeof cnt);\n\t\ten[i] = b;\n\t\tfor (int x = 1; x <= n; ++x)\n\t\t\tif (d[a][x] + d[x][b] == d[a][b])\n\t\t\t\tcnt[d[a][x]] += (has[x][i] = 1);\n\t\tfor (int x = 1; x <= n; ++x)\n\t\t\tif (d[a][x] + d[x][b] == d[a][b] && cnt[d[a][x]] == 1)\n\t\t\t\tmust[x][i] = 1;\n\t}\n\tfor (int i = 0;i <= n; ++i)\n\t\tfill (dp[i], dp[i] + MAXN, INF);\n\tdp[fin][0] = 0;\n\n\tbool ok = 1;\n\twhile (ok) {\n\t\tok = 0;\n\t\tfor (int v = 1; v <= n; ++v)\n\t\t\tfor (int b = 0; b <= k; ++b) {\n\t\t\t\tif (b && !has[v][b])\n\t\t\t\t\tcontinue;\n\t\t\t\tint &ref = dp[v][b];\n\t\t\t\tint tmp = dp[v][b];\n\t\t\t\tif (!b) {\n\t\t\t\t\tfor (int bb = 1; bb <= k; ++bb)\n\t\t\t\t\t\tif (must[v][bb])\n\t\t\t\t\t\t\tref = min(ref, dp[v][bb] + 1);\n\t\t\t\t} else {\n\t\t\t\t\tref = min(ref, dp[v][0]);\n\t\t\t\t\tint maxi = -1;\n\t\t\t\t\tfor (int u: out[v])\n\t\t\t\t\t\tif (has[u][b] && 1 + d[u][en[b]] == d[v][en[b]])\n\t\t\t\t\t\t\tmaxi = max(maxi, dp[u][b]);\n\t\t\t\t\tif (maxi == -1) \n\t\t\t\t\t\tmaxi = INF;\n\t\t\t\t\tref = min(ref, maxi);\n\t\t\t\t}\n\t\t\t\tif (tmp != ref)\n\t\t\t\t\tok = 1;\n\t\t\t}\n\t}\n\n\tcout << (dp[start][0] >= INF ? -1: dp[start][0]) << \"\\n\";\n\n\treturn 0;\n}"
}