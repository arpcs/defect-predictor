{
    "id": 160230573,
    "contestId": 594,
    "creationTimeSeconds": 1654986197,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 594,
        "index": "E",
        "name": "Cutting the Line",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3100,
        "tags": [
            "string suffix structures",
            "strings"
        ]
    },
    "author": {
        "contestId": 594,
        "members": [
            {
                "handle": "HOLlC"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1447000200
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 67,
    "timeConsumedMillis": 327,
    "memoryConsumedBytes": 209715200,
    "source": "//\r\n// Created by MerCI on 2022/6/12.\r\n//\r\n\r\n#include <bits/stdc++.h>\r\n\r\n#define all(a) a.begin(),a.end()\r\n#define rall(a) a.rbegin(),a.rend()\r\n\r\n#define endl '\\n'\r\n#define ls p << 1\r\n#define rs p << 1 | 1\r\n//#define int long long\r\nusing namespace std;\r\nconst int N = 1e7 + 1009;\r\n//const int N = 2e5 + 1009;\r\n//const int N = 5009;\r\n//const int N = 309\r\nstring s, a, ans, s1;\r\nint k, cnt, z[N];\r\nstruct node{int l, r, p;} suf[N];\r\nvoid exkmp(string s) {\r\n    z[0] = s.size();\r\n    for(int i = 1, l = 0, r = 0; i < s.size(); i ++) {\r\n        if(i <= r) z[i] = min(z[i - l], r - i + 1);\r\n        while(s[z[i]] == s[i + z[i]]) z[i] ++;\r\n        if(i + z[i]> r) l = i, r = i + z[i] - 1;\r\n    }\r\n}\r\nvoid work() {\r\n    cin >> s >> k;\r\n    a = s;\r\n    //aaabehbiei\r\n    int flag = 0;\r\n    if(a[0]=='a'&& a[3] == 'b' && a[4] == 'e' && a[5] == 'h' && a[6] == 'b') flag = 1;\r\n    reverse(s.begin(), s.end());\r\n    if(k == 1) {cout << min(a, s) << endl; return;}\r\n    for(int i = 0, j = 0, k = 1; i < s.size(); j = i, k = i + 1) {\r\n        while(k < s.size() && s[k] >= s[j]) s[k ++] > s[j] ? j = i : j ++;\r\n        int L = i;\r\n        while(i <= j) i += k - j;\r\n        suf[++ cnt] = {L, i - 1, k - j};\r\n    }\r\n    while(k >= 3 && cnt) {\r\n        if(suf[cnt].p == 1) {\r\n            while(cnt && suf[cnt].p == 1) {\r\n                for(int i = suf[cnt].l; i <= suf[cnt].r; i ++) ans += s[i];\r\n                cnt --;\r\n            }\r\n        } else {\r\n            for(int i = suf[cnt].l; i <= suf[cnt].r; i ++) ans += s[i];\r\n            cnt --;\r\n        }\r\n        k --;\r\n    }\r\n    if(!cnt) {cout << ans << endl;return;}\r\n    s = s.substr(0, suf[cnt].r + 1); a = s; reverse(a.begin(), a.end());\r\n    s1 = min(s, a);\r\n    if(flag) cout << s.size() <<endl;\r\n    function<string()> solve = [&] {\r\n        int ans1 = 0, ans2 = 0;\r\n        string s1 = \"\", s2 = \"\", s3 = \"\", s4 = \"\";\r\n        for(int i = 0, j = 0, k = 1; i < s.size(); j = i, k = i + 1) {\r\n            while(k < s.size() && s[k] >= s[j]) s[k ++] > s[j] ? j = i : j ++;\r\n            if(i != j) ans1 = i;\r\n            if(flag && i == 2621) {\r\n                cout << i << \" \" << j << \" \" << k << endl;\r\n            }\r\n            while(i <= j) ans2 = i, i += k - j;\r\n        }\r\n        s1 = s.substr(ans1, s.size() - ans1) + a.substr(s.size() - ans1, ans1);\r\n        s2 = s.substr(ans2, s.size() - ans2) + a.substr(s.size() - ans2, ans2);\r\n        s3 = s.substr(ans1, s.size() - ans1) + s.substr(0, ans1);\r\n        s4 = s.substr(ans2, s.size() - ans2) + s.substr(0, ans2);\r\n        if(flag) cout << ans1 << \" \" << ans2 << endl;\r\n        return min(min(s1, s2), min(s3, s4));\r\n    };\r\n    s1 = min(s1, solve());\r\n    function<string(string)> solve2 = [&](string s){\r\n        int L = 0, len = s.size();\r\n        s += s;\r\n        string ans = \"\";\r\n        for(int i = 0, j = 0, k = 1; i < s.size(); j = i, k = i + 1) {\r\n            while(k < s.size() && s[k] >= s[j]) s[k ++] > s[j] ? j = i : j ++;\r\n            while(i <= j) {\r\n                if(i < len) L = i;\r\n                i += k - j;\r\n            }\r\n        }\r\n        if(flag)cout << L << endl;\r\n        for(int i = L; i <= L + len - 1; i ++) ans += s[i];\r\n        return ans;\r\n    };\r\n    s1 = min(s1, solve2(s));\r\n    function<string(string, string)> solve1 = [&](string s, string a) {\r\n        s += a;\r\n        exkmp(s);\r\n        function<int(int, int)> cmp = [&](int x, int y) {\r\n            int len = min(z[a.size() + y], x - y);  // a[y, x - 1] == s[0, x - y - 1]\r\n            if(len != x - y) return a[y + len] < s[len];\r\n            else {\r\n                int len2 = min(z[len], (int)a.size() - x);\r\n                return s[len2] < s[len2 + len];\r\n            }\r\n        };\r\n        int f = 1;\r\n        for(int i = 2; i < s.size() - 1; i ++) if(cmp(i, f)) f = i;\r\n        return a.substr(0, f) + s.substr(0, a.size() - f);\r\n    };\r\n    s1 = min(s1, solve1(s, a));\r\n    ans += s1;\r\n    cout << ans << endl;\r\n}\r\n\r\nsigned main() {\r\n#ifdef LOCAL\r\n    freopen(\"C:\\\\Users\\\\MerCI\\\\Desktop\\\\acm\\\\data.in\", \"r\", stdin);\r\n    freopen(\"C:\\\\Users\\\\MerCI\\\\Desktop\\\\acm\\\\data.out\", \"w\", stdout);\r\n#endif\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    int Case = 1;\r\n    while (Case--) work();\r\n    return 0;\r\n}"
}