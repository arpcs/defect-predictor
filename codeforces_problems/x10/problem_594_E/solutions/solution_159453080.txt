{
    "id": 159453080,
    "contestId": 594,
    "creationTimeSeconds": 1654327311,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 594,
        "index": "E",
        "name": "Cutting the Line",
        "type": "PROGRAMMING",
        "points": 3000.0,
        "rating": 3100,
        "tags": [
            "string suffix structures",
            "strings"
        ]
    },
    "author": {
        "contestId": 594,
        "members": [
            {
                "handle": "Gary2005"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1447000200
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "/**\n *    author:  gary\n *    created: 03.06.2022 16:40:52\n**/\n#include<bits/stdc++.h>\n#include<atcoder/string>\n#define rb(a,b,c) for(int a=b;a<=c;++a)\n#define rl(a,b,c) for(int a=b;a>=c;--a)\n#define rep(a,b) for(int a=0;a<b;++a)\n#define LL long long\n#define PB push_back\n#define POB pop_back\n#define II(a,b) make_pair(a,b)\n#define FIR first\n#define SEC second\n#define SRAND mt19937 rng(chrono::steady_clock::now().time_since_epoch().count())\n#define random(a) rng()%a\n#define ALL(a) a.begin(),a.end()\n#define check_min(a,b) a=min(a,b)\n#define check_max(a,b) a=max(a,b)\nusing namespace std;\nconst int INF=0x3f3f3f3f;\ntypedef pair<int,int> mp;\nvector<int> Lyndon(string s){\n    vector<int> ed;\n    int n=s.length();\n    s.PB(char(0));\n    int p=-1,i=0,u=1,c=1,u2=0;\n    for(;i<n;i++){\n        if(s[i+1]==s[i+1-u]){\n            u2++;\n            if(u2==u) u2=0,c++;\n        }else\n        if(s[i+1]>s[i+1-u]){\n            u=i+1-p,u2=0,c=1;\n        }else\n        if(s[i+1]<s[i+1-u]){\n            rb(j,1,c){\n                p+=u;\n                ed.PB(p);\n            }\n            i=p,u=1,c=1,u2=0;\n        }\n    }\n    return ed;\n}\nstring R(string S){\n    string T=S;\n    reverse(ALL(T));\n    return T;\n}\nusing namespace atcoder;\nstring solve(string s){\n    string T=R(s)+s;\n    auto z=z_algorithm(T);\n    int ans=0;\n    rb(i,1,s.length()-1){\n        if(z[ans+s.length()]>=i-ans){\n            int x=z[i-ans];\n            if(x<s.length()-i){\n                if(T[x]<T[x+ans-i]){\n                    ans=i;\n                }\n            }\n        }\n        else{\n            int x=z[ans+s.length()];\n            if(s[x+ans]<T[x]){\n                ans=i;\n            }\n        }\n    }\n    reverse(s.begin()+ans,s.end());\n    // string T=s;\n    // rep(i,s.length()){\n    //     string tmp=s;\n    //     reverse(tmp.begin()+i,tmp.end());\n    //     check_min(T,tmp);\n    // }\n    return s;\n}\nint main(){\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    string s;\n    cin>>s;\n    int n=s.length();\n    string sr=s;\n    reverse(ALL(sr));\n    auto v=Lyndon(sr);\n    vector<mp> seg;\n    int pre=-1;\n    for(auto it:v){\n        pre++;\n        seg.PB(II(n-1-it,n-1-pre));\n        pre=it;\n    }\n    reverse(ALL(seg));\n    vector<string> subs;\n    string prestr;\n    for(auto it:seg){\n        string str;\n        rb(j,it.first,it.second) str.PB(s[j]);\n        // cout<<str<<endl;\n        if(prestr==str) subs.back()+=str;\n        else subs.PB(str);\n        prestr=str;\n    }\n    // for(auto it:subs) cout<<it<<endl;\n    vector<string> tmp;\n    bool last=0;\n    rep(i,subs.size()){\n        if(last==(subs[i]<=R(subs[i]))&&last==1) tmp.back()+=subs[i];\n        else tmp.PB(subs[i]);\n        last=(subs[i]<=R(subs[i]));\n    }\n    subs=tmp;\n    // for(auto it:subs){\n    //     cout<<it<<endl;\n    // }\n    // return 0;\n    int k;\n    cin>>k;\n    k=min(k,(int)(subs.size()));\n    if(k==1){\n        cout<<min(s,R(s))<<endl;\n        return 0;\n    }\n    int alr=0;\n    string ans;\n    rep(i,k-1){\n        reverse(ALL(subs[i]));\n        cout<<min(subs[i],R(subs[i]));\n    }\n    // cout<<endl;\n    char Tmp=subs.back().back();\n    bool ok=(R(subs[k-2])>=subs[k-2]);\n    string ans3;\n    rb(i,k-1,subs.size()-1){\n        ans3+=(subs[i]);\n    }\n    // cout<<ans3<<endl;\n    // return 0;\n    string tmps=ans3;\n    ans3=min(ans3,R(ans3));\n    if(ok) check_min(ans3,solve(tmps));\n    cout<<ans3<<endl;\n    return 0;\n}"
}