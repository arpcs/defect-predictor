{
    "id": 225604247,
    "contestId": 893,
    "creationTimeSeconds": 1695882404,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 893,
        "index": "E",
        "name": "Counting Arrays",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "combinatorics",
            "dp",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 893,
        "members": [
            {
                "handle": "ghamohammad4"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1511449500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "WRONG_ANSWER",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 171,
    "memoryConsumedBytes": 7987200,
    "source": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\ntypedef long long ll;\r\n#define endl  '\\n'\r\n#define pb push_back\r\n\r\n\r\nconst int mod = 1e9 + 7;\r\nconst int maxn = 1e6 + 30;\r\nint fact[maxn], inv[maxn];\r\n\r\n\r\nint c(int n, int r){\r\n    return 1LL * fact[n] * inv[r] % mod * inv[n - r] % mod;\r\n}\r\n\r\nint bp(int a, int p){\r\n    int res = 1;\r\n    while(p) {\r\n        res = p & 1 ? (1LL * res * a) % mod : res;\r\n        a = (1LL * a * a) % mod;\r\n        p >>= 1;\r\n    }\r\n    \r\n    return res;\r\n}\r\n\r\nvoid solv() {\r\n    int x, y;\r\n    cin >> x >> y;\r\n    int p = 2, ans = 1;\r\n    while(x != 1 && p * p <= x) {\r\n        if(x % p == 0) {\r\n           int cnt = 0;\r\n           while(x % p == 0) {\r\n               cnt++;\r\n               x /= p;\r\n           }\r\n           //cout << p << \" = \" <<  c(cnt + y - 1, cnt) << endl;\r\n           ans = (1LL * ans * 2 * c(cnt + y - 1, cnt)) % mod;\r\n        }\r\n        p++;\r\n    }\r\n    if(x != 1)\r\n        ans = (1LL * 2 * ans * y) % mod;\r\n    \r\n    cout << ans << endl;\r\n}\r\n\r\n\r\nint main()\r\n{\r\n    ios::sync_with_stdio(false),cin.tie(0);\r\n    \r\n    fact[0] = fact[1] = 1;\r\n    \r\n    for (int i = 2; i < maxn; i++)\r\n        fact[i] = 1LL * fact[i - 1] * i % mod;\r\n    \r\n    for (int i = 0; i < maxn; i++)\r\n        inv[i] = bp(fact[i], mod - 2);\r\n    \r\n    int t;\r\n    cin >> t;\r\n    while(t--) \r\n        solv();\r\n    \r\n    //cout << c(100, 2) << endl; \r\n    \r\n    return 0;\r\n}"
}