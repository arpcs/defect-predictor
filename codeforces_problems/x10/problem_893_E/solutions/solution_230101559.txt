{
    "id": 230101559,
    "contestId": 893,
    "creationTimeSeconds": 1698462732,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 893,
        "index": "E",
        "name": "Counting Arrays",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "combinatorics",
            "dp",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 893,
        "members": [
            {
                "handle": "MechaDL"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1511449500
    },
    "programmingLanguage": "GNU C++17",
    "verdict": "COMPILATION_ERROR",
    "testset": "TESTS",
    "passedTestCount": 0,
    "timeConsumedMillis": 0,
    "memoryConsumedBytes": 0,
    "source": "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define dl long double\n#define TEST_TYPE ll\n#define VPl vector<pair<ll,ll>>\n#define VL vector<ll>\n#define VC vector<char>\n#define VVl vector<vector<ll>>\n#define PQl priority_queue<ll>\n#define SL set<ll>\n#define MSl multiset<ll>\n#define MPl map<ll,ll>\n\n#define FLP(i,n) for(int i = 0; i < n; ++i)\n#define FLS(i,n,s) for(int i = s; i < n; ++i)\n#define FLI(i,n,s,c) for(int i = s; i < n; i+=c)\n#define FEP(x,v) for(auto x : v)\n#define SRT(v) sort(v.begin(),v.end())\n\n/*Map with ordered indexes in lg(n) */\n#include<ext/pb_ds/assoc_container.hpp>\n#include<ext/pb_ds/tree_policy.hpp>\nusing namespace __gnu_pbds;\n#define ordered_set tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update>\n\n#define MOD_FACTOR 1000000007\nvector<ll> f = {1};\nll inverseMod[MOD_FACTOR];\nll mxFound = 0;\nll fact(ll n){\n    if(mxFound < n){\n        FLS(i,n+1,mxFound+1){\n            f.push_back((i*f[i-1])%MOD_FACTOR);\n        }\n        mxFound = n;\n    }\n    return f[n];\n}\nll powmod(ll a, ll b){\n    a %= MOD_FACTOR;\n    if (a == 0) return 0;\n    ll product = 1;\n    while(b > 0){\n        if (b%2){\n            product *= a;\n            product %= MOD_FACTOR;\n            --b;\n        }\n        a *= a;\n        a %= MOD_FACTOR;\n        b >>= 1;\n    }\n    return product;\n}\nll inv(ll a){\n    if(a == 0) return 0;\n    if(inverseMod[a] == 0){\n        inverseMod[a] = powmod(a, MOD_FACTOR-2);\n    }\n    return inverseMod[a];\n}\nll nCk(ll n, ll k){\n    return ((fact(n) * inv(fact(k)) % MOD_FACTOR) * inv(fact(n-k))) % MOD_FACTOR;\n}\nll primes[] = {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997};\nvoid factorize(VL &v, ll x){\n    FLP(i,168){\n        ll count = 0;\n        while(x%primes[i] == 0){\n            x /= primes[i];\n            count++;\n        }\n        if(count > 0){\n            v.push_back(count);\n        }\n        if(x == 1) return;\n    }\n    v.push_back(1);\n}\nint main() {\n    cin.tie(0)->sync_with_stdio(0);\n    //freopen(\"input.txt\",\"r\", stdin); \n    //freopen(\"output.txt\",\"w\", stdout);\n    ll q, x, y, t, negs, base;\n    cin >> q;\n    FLP(i,q){\n        cin >> x >> y;\n        VL v;\n        factorize(v,x);\n        t = 1;\n        FEP(f,v){\n            t = (t*nCk(f+y-1,f))%MOD_FACTOR;\n        }\n        base = t;\n        negs = 2;\n        while(negs <= y){\n            t = (t + ((base*nCk(y,negs))%MOD_FACTOR))%MOD_FACTOR;\n            negs += 2;\n        }\n        cout << t << '\\n';\n    }\n    return 0;\n}"
}