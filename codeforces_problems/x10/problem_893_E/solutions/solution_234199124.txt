{
    "id": 234199124,
    "contestId": 893,
    "creationTimeSeconds": 1700899861,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 893,
        "index": "E",
        "name": "Counting Arrays",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "combinatorics",
            "dp",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 893,
        "members": [
            {
                "handle": "Fakedreamer"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1511449500
    },
    "programmingLanguage": "GNU C++17 (64)",
    "verdict": "OK",
    "testset": "TESTS",
    "passedTestCount": 45,
    "timeConsumedMillis": 1996,
    "memoryConsumedBytes": 100454400,
    "source": "// LUOGU_RID: 136819057\n#include<bits/stdc++.h>\r\n#define rep(i, a, b) for(int i = a; i <= b; i ++)\r\n#define per(i, a, b) for(int i = a; i >= b; i --)\r\n#define vi vector<int>\r\n#define fi first\r\n#define se second\r\n#define int long long\r\n#define endl '\\n'\r\n#define ull unsigned long long\r\n#define ls(u) u << 1\r\n#define rs(u) u << 1 | 1\r\n#define sz(v) ((int) v.size())\r\nusing namespace std;\r\ntypedef long long ll;\r\n\r\nconst int mod = 1e9 + 7;\r\nconst int N = 3e6 + 10;\r\n\r\nint dp[N], n, x;\r\nint vis[N], fac[N], inv[N];\r\nvector<int> primes;\r\n\r\nint qsm(int a, int b){\r\n    int res = 1;\r\n    while(b){\r\n        if(b & 1) res = res * a %mod;\r\n        b >>= 1;\r\n        a = a * a %mod;\r\n    }\r\n    return res;\r\n}\r\nint C(int a, int b){\r\n    if(b > a) return 0;\r\n    return fac[a] * inv[b] %mod * inv[a - b] %mod;\r\n}\r\nint A(int a, int b){\r\n    if(b > a) return 0;\r\n    return fac[a] * inv[a - b] %mod;\r\n}\r\n\r\nvoid get(){\r\n    for(int i = 2; i <= N - 10; i ++){\r\n        if(!vis[i]){\r\n            primes.push_back(i);\r\n            for(int j = i + i; j <= N - 10; j += i) vis[j] = true;\r\n        }\r\n    }\r\n}\r\n\r\nvoid solve(){\r\n    cin >> x >> n;\r\n    int cur = x, s = 0, c = 0;\r\n    int ans = qsm(2, n - 1);\r\n\r\n    for(int i = 2; i <= cur / i; i ++){\r\n        if(cur % i == 0){\r\n            int c = 0;\r\n            while(cur % i == 0) c ++, cur /= i;\r\n            ans = ans * C(n + c - 1, n - 1) %mod;\r\n        }\r\n    }\r\n    if(cur > 1){\r\n        ans = ans * C(n, n - 1) %mod;\r\n    }\r\n\r\n    cout << ans << endl;\r\n}\r\n\r\nsigned main(){\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0); cout.tie(0);\r\n\r\n    get();\r\n    fac[0] = inv[0] = 1;\r\n    rep(i, 1, N - 10){\r\n        fac[i] = fac[i - 1] * i %mod;\r\n        inv[i] = inv[i - 1] * qsm(i, mod - 2) %mod;\r\n    }\r\n\r\n    int T; cin >> T;\r\n    while(T --) solve();\r\n\r\n    return 0;\r\n}"
}