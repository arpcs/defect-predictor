{
    "id": 226301116,
    "contestId": 893,
    "creationTimeSeconds": 1696252874,
    "relativeTimeSeconds": 2147483647,
    "problem": {
        "contestId": 893,
        "index": "E",
        "name": "Counting Arrays",
        "type": "PROGRAMMING",
        "rating": 2000,
        "tags": [
            "combinatorics",
            "dp",
            "math",
            "number theory"
        ]
    },
    "author": {
        "contestId": 893,
        "members": [
            {
                "handle": "bkifhr10"
            }
        ],
        "participantType": "PRACTICE",
        "ghost": false,
        "startTimeSeconds": 1511449500
    },
    "programmingLanguage": "GNU C++20 (64)",
    "verdict": "RUNTIME_ERROR",
    "testset": "TESTS",
    "passedTestCount": 2,
    "timeConsumedMillis": 46,
    "memoryConsumedBytes": 7987200,
    "source": "#include <iostream>\n\nusing namespace std;\n\n#define mod 1000000007\n\nint prime[500];\nint cr[1001];\nint fact[1000301];\nint inv[1000301];\n\nint lgpow(int baza, int exp)\n{\n    if(exp == 0)\n        return 1;\n    /*if(exp == 1)\n        return baza;*/\n    int x = lgpow(baza, exp / 2);\n    if((exp & 1) == 0)\n        return (1LL * x * x) % mod;\n    return (1LL * ((1LL * x * x) % mod) * baza) % mod;\n}\n\n\n\nvoid precombute()\n{\n    fact[0] = 1;\n    for(int i = 1; i <= 1000300; i ++)\n        fact[i] = (1LL * fact[i - 1] * i) % mod;\n    inv[1000300] = lgpow(fact[1000300], mod - 2);\n    for(int i = 1000299; i >= 0; i --)\n        inv[i] = (1LL * inv[i + 1] * (i + 1)) % mod;\n}\n\n\nint comb(int n, int k)\n{\n    return ( 1LL * ((1LL * fact[n] * lgpow(fact[n - k], mod - 2)) % mod) * lgpow(fact[k], mod - 2) ) % mod;\n}\n\n\n\nvoid ciur()\n{\n    cr[0] = cr[1] = 1;\n    for(int i = 2; i * i <= 1000; i ++)\n    {\n        if(cr[i] == 0)\n        {\n            for(int j = i * i; j <= 1000; j ++)\n                cr[j] = 1;\n        }\n    }\n    for(int i = 2; i <= 1000; i ++)\n        if(cr[i] == 0)\n            prime[++prime[0]] = i;\n}\n\n\nint desc(int x, int y)\n{\n    int loc = 1, cnt, ans = 1;\n    while(prime[loc] * prime[loc] <= x)\n    {\n        cnt = 0;\n        while((x % prime[loc]) == 0)\n        {\n            x /= prime[loc];\n            cnt ++;\n        }\n        if(cnt > 0)\n            ans = (1LL * ans * comb(y + cnt - 1, cnt)) % mod;\n        loc ++;\n    }\n    if(x > 1)\n        ans = (1LL * ans * y) % mod;\n    return ans;\n}\n\n\n\n\nint main()\n{\n    ciur();\n    precombute();\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int q;\n    cin >> q;\n    for(int i = 0; i < q; i ++)\n    {\n        int x, y;\n        cin >> x >> y;\n        cout << ( 1LL * desc(x, y) * lgpow(2, y - 1) ) % mod << '\\n';\n    }\n}\n\n \t\t\t   \t  \t\t\t \t\t \t\t  \t\t\t\t \t\t\t"
}